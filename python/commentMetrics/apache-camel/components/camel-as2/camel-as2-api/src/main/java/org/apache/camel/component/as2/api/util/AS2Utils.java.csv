# id;timestamp;commentText;codeText;commentWords;codeWords
AS2Utils -> public static void validateAS2Name(String name) throws InvalidAS2NameException;1534572499;Validates if the given <code>name</code> is a valid AS2 Name__@param name - the name to validate._@throws InvalidAS2NameException;public static void validateAS2Name(String name) throws InvalidAS2NameException {_        Matcher matcher = AS_NAME_PATTERN.matcher(name)__        if (!matcher.matches()) {_            _            int i = 0__            for (i = name.length() - 1_ i > 0_ i--) {_                Matcher region = matcher.region(0, i)__                if (region.matches() || region.hitEnd()) {_                    break__                }_            }_            throw new InvalidAS2NameException(name, i)__        }_    };validates,if,the,given,code,name,code,is,a,valid,as2,name,param,name,the,name,to,validate,throws,invalid,as2name,exception;public,static,void,validate,as2name,string,name,throws,invalid,as2name,exception,matcher,matcher,matcher,name,if,matcher,matches,int,i,0,for,i,name,length,1,i,0,i,matcher,region,matcher,region,0,i,if,region,matches,region,hit,end,break,throw,new,invalid,as2name,exception,name,i
AS2Utils -> public static void validateAS2Name(String name) throws InvalidAS2NameException;1535093120;Validates if the given <code>name</code> is a valid AS2 Name__@param name - the name to validate._@throws InvalidAS2NameException - If <code>name</code> is invalid.;public static void validateAS2Name(String name) throws InvalidAS2NameException {_        Matcher matcher = AS_NAME_PATTERN.matcher(name)__        if (!matcher.matches()) {_            _            int i = 0__            for (i = name.length() - 1_ i > 0_ i--) {_                Matcher region = matcher.region(0, i)__                if (region.matches() || region.hitEnd()) {_                    break__                }_            }_            throw new InvalidAS2NameException(name, i)__        }_    };validates,if,the,given,code,name,code,is,a,valid,as2,name,param,name,the,name,to,validate,throws,invalid,as2name,exception,if,code,name,code,is,invalid;public,static,void,validate,as2name,string,name,throws,invalid,as2name,exception,matcher,matcher,matcher,name,if,matcher,matches,int,i,0,for,i,name,length,1,i,0,i,matcher,region,matcher,region,0,i,if,region,matches,region,hit,end,break,throw,new,invalid,as2name,exception,name,i
AS2Utils -> public static void validateAS2Name(String name) throws InvalidAS2NameException;1535627650;Validates if the given <code>name</code> is a valid AS2 Name__@param name - the name to validate._@throws InvalidAS2NameException - If <code>name</code> is invalid.;public static void validateAS2Name(String name) throws InvalidAS2NameException {_        Matcher matcher = AS_NAME_PATTERN.matcher(name)__        if (!matcher.matches()) {_            _            int i = 0__            for (i = name.length() - 1_ i > 0_ i--) {_                Matcher region = matcher.region(0, i)__                if (region.matches() || region.hitEnd()) {_                    break__                }_            }_            throw new InvalidAS2NameException(name, i)__        }_    };validates,if,the,given,code,name,code,is,a,valid,as2,name,param,name,the,name,to,validate,throws,invalid,as2name,exception,if,code,name,code,is,invalid;public,static,void,validate,as2name,string,name,throws,invalid,as2name,exception,matcher,matcher,matcher,name,if,matcher,matches,int,i,0,for,i,name,length,1,i,0,i,matcher,region,matcher,region,0,i,if,region,matches,region,hit,end,break,throw,new,invalid,as2name,exception,name,i
AS2Utils -> public static boolean isPrintableChar(char c);1534572499;Determines if <code>c</code> is a printable character._@param c - the character to test_@return <code>true</code> if <code>c</code> is a printable character_ <code>false</code> otherwise.;public static boolean isPrintableChar(char c) {_        Character.UnicodeBlock block = Character.UnicodeBlock.of(c)__        return (!Character.isISOControl(c)) && c != KeyEvent.CHAR_UNDEFINED && block != null_                && block != Character.UnicodeBlock.SPECIALS__    };determines,if,code,c,code,is,a,printable,character,param,c,the,character,to,test,return,code,true,code,if,code,c,code,is,a,printable,character,code,false,code,otherwise;public,static,boolean,is,printable,char,char,c,character,unicode,block,block,character,unicode,block,of,c,return,character,is,isocontrol,c,c,key,event,block,null,block,character,unicode,block,specials
AS2Utils -> public static boolean isPrintableChar(char c);1535093120;Determines if <code>c</code> is a printable character._@param c - the character to test_@return <code>true</code> if <code>c</code> is a printable character_ <code>false</code> otherwise.;public static boolean isPrintableChar(char c) {_        Character.UnicodeBlock block = Character.UnicodeBlock.of(c)__        return (!Character.isISOControl(c)) && c != KeyEvent.CHAR_UNDEFINED && block != null_                && block != Character.UnicodeBlock.SPECIALS__    };determines,if,code,c,code,is,a,printable,character,param,c,the,character,to,test,return,code,true,code,if,code,c,code,is,a,printable,character,code,false,code,otherwise;public,static,boolean,is,printable,char,char,c,character,unicode,block,block,character,unicode,block,of,c,return,character,is,isocontrol,c,c,key,event,block,null,block,character,unicode,block,specials
AS2Utils -> public static boolean isPrintableChar(char c);1535627650;Determines if <code>c</code> is a printable character._@param c - the character to test_@return <code>true</code> if <code>c</code> is a printable character_ <code>false</code> otherwise.;public static boolean isPrintableChar(char c) {_        Character.UnicodeBlock block = Character.UnicodeBlock.of(c)__        return (!Character.isISOControl(c)) && c != KeyEvent.CHAR_UNDEFINED && block != null_                && block != Character.UnicodeBlock.SPECIALS__    };determines,if,code,c,code,is,a,printable,character,param,c,the,character,to,test,return,code,true,code,if,code,c,code,is,a,printable,character,code,false,code,otherwise;public,static,boolean,is,printable,char,char,c,character,unicode,block,block,character,unicode,block,of,c,return,character,is,isocontrol,c,c,key,event,block,null,block,character,unicode,block,specials
AS2Utils -> public static void printMessage(PrintStream out, HttpMessage message) throws IOException;1534572499;Prints the contents of an Http Message to given print stream.__@param out - the stream printed to._@param message - the request printed._@throws IOException;public static void printMessage(PrintStream out, HttpMessage message) throws IOException {_        _        if (message instanceof HttpRequest) {_            RequestLine requestLine = ((HttpRequest)message).getRequestLine()__            out.println(requestLine.getMethod() + ' ' + requestLine.getUri() + ' ' + requestLine.getProtocolVersion())__        } else { _            StatusLine statusLine = ((HttpResponse)message).getStatusLine()__            out.println(statusLine.toString())__        }_        _        for (final HeaderIterator it = message.headerIterator()_ it.hasNext()_) {_            Header header = it.nextHeader()__            out.println(header.getName() + ": " + (header.getValue() == null ? "" : header.getValue()))__        }_        out.println()_ __        if (message instanceof HttpEntityEnclosingRequest) {_            _            HttpEntity entity = ((HttpEntityEnclosingRequest)message).getEntity()__            if (entity != null) {_                entity.writeTo(out)__            }_        } else if (message instanceof HttpResponse) {_            _            HttpEntity entity = ((HttpResponse)message).getEntity()__            if (entity != null) {_                entity.writeTo(out)__            }_        }_    };prints,the,contents,of,an,http,message,to,given,print,stream,param,out,the,stream,printed,to,param,message,the,request,printed,throws,ioexception;public,static,void,print,message,print,stream,out,http,message,message,throws,ioexception,if,message,instanceof,http,request,request,line,request,line,http,request,message,get,request,line,out,println,request,line,get,method,request,line,get,uri,request,line,get,protocol,version,else,status,line,status,line,http,response,message,get,status,line,out,println,status,line,to,string,for,final,header,iterator,it,message,header,iterator,it,has,next,header,header,it,next,header,out,println,header,get,name,header,get,value,null,header,get,value,out,println,if,message,instanceof,http,entity,enclosing,request,http,entity,entity,http,entity,enclosing,request,message,get,entity,if,entity,null,entity,write,to,out,else,if,message,instanceof,http,response,http,entity,entity,http,response,message,get,entity,if,entity,null,entity,write,to,out
AS2Utils -> public static void printMessage(PrintStream out, HttpMessage message) throws IOException;1535093120;Prints the contents of an Http Message to given print stream.__@param out - the stream printed to._@param message - the request printed._@throws IOException - If failed to print message.;public static void printMessage(PrintStream out, HttpMessage message) throws IOException {_        _        if (message instanceof HttpRequest) {_            RequestLine requestLine = ((HttpRequest)message).getRequestLine()__            out.println(requestLine.getMethod() + ' ' + requestLine.getUri() + ' ' + requestLine.getProtocolVersion())__        } else { _            StatusLine statusLine = ((HttpResponse)message).getStatusLine()__            out.println(statusLine.toString())__        }_        _        for (final HeaderIterator it = message.headerIterator()_ it.hasNext()_) {_            Header header = it.nextHeader()__            out.println(header.getName() + ": " + (header.getValue() == null ? "" : header.getValue()))__        }_        out.println()_ __        if (message instanceof HttpEntityEnclosingRequest) {_            _            HttpEntity entity = ((HttpEntityEnclosingRequest)message).getEntity()__            if (entity != null) {_                entity.writeTo(out)__            }_        } else if (message instanceof HttpResponse) {_            _            HttpEntity entity = ((HttpResponse)message).getEntity()__            if (entity != null) {_                entity.writeTo(out)__            }_        }_    };prints,the,contents,of,an,http,message,to,given,print,stream,param,out,the,stream,printed,to,param,message,the,request,printed,throws,ioexception,if,failed,to,print,message;public,static,void,print,message,print,stream,out,http,message,message,throws,ioexception,if,message,instanceof,http,request,request,line,request,line,http,request,message,get,request,line,out,println,request,line,get,method,request,line,get,uri,request,line,get,protocol,version,else,status,line,status,line,http,response,message,get,status,line,out,println,status,line,to,string,for,final,header,iterator,it,message,header,iterator,it,has,next,header,header,it,next,header,out,println,header,get,name,header,get,value,null,header,get,value,out,println,if,message,instanceof,http,entity,enclosing,request,http,entity,entity,http,entity,enclosing,request,message,get,entity,if,entity,null,entity,write,to,out,else,if,message,instanceof,http,response,http,entity,entity,http,response,message,get,entity,if,entity,null,entity,write,to,out
AS2Utils -> public static void printMessage(PrintStream out, HttpMessage message) throws IOException;1535627650;Prints the contents of an Http Message to given print stream.__@param out - the stream printed to._@param message - the request printed._@throws IOException - If failed to print message.;public static void printMessage(PrintStream out, HttpMessage message) throws IOException {_        _        if (message instanceof HttpRequest) {_            RequestLine requestLine = ((HttpRequest)message).getRequestLine()__            out.println(requestLine.getMethod() + ' ' + requestLine.getUri() + ' ' + requestLine.getProtocolVersion())__        } else { _            StatusLine statusLine = ((HttpResponse)message).getStatusLine()__            out.println(statusLine.toString())__        }_        _        for (final HeaderIterator it = message.headerIterator()_ it.hasNext()_) {_            Header header = it.nextHeader()__            out.println(header.getName() + ": " + (header.getValue() == null ? "" : header.getValue()))__        }_        out.println()_ __        if (message instanceof HttpEntityEnclosingRequest) {_            _            HttpEntity entity = ((HttpEntityEnclosingRequest)message).getEntity()__            if (entity != null) {_                entity.writeTo(out)__            }_        } else if (message instanceof HttpResponse) {_            _            HttpEntity entity = ((HttpResponse)message).getEntity()__            if (entity != null) {_                entity.writeTo(out)__            }_        }_    };prints,the,contents,of,an,http,message,to,given,print,stream,param,out,the,stream,printed,to,param,message,the,request,printed,throws,ioexception,if,failed,to,print,message;public,static,void,print,message,print,stream,out,http,message,message,throws,ioexception,if,message,instanceof,http,request,request,line,request,line,http,request,message,get,request,line,out,println,request,line,get,method,request,line,get,uri,request,line,get,protocol,version,else,status,line,status,line,http,response,message,get,status,line,out,println,status,line,to,string,for,final,header,iterator,it,message,header,iterator,it,has,next,header,header,it,next,header,out,println,header,get,name,header,get,value,null,header,get,value,out,println,if,message,instanceof,http,entity,enclosing,request,http,entity,entity,http,entity,enclosing,request,message,get,entity,if,entity,null,entity,write,to,out,else,if,message,instanceof,http,response,http,entity,entity,http,response,message,get,entity,if,entity,null,entity,write,to,out
AS2Utils -> public static String createMessageId(String fqdn);1534572499;Generates a globally unique message ID which includes <code>fqdn</code>: a fully qualified domain name (FQDN)_@param fqdn - the fully qualified domain name to use in message id._@return The generated message id.;public static String createMessageId(String fqdn) {_                                                    _        return "<" + Long.toString(System.nanoTime(), 36) + "." + Long.toString(generator.nextLong(), 36) + "@" + fqdn + ">"__    };generates,a,globally,unique,message,id,which,includes,code,fqdn,code,a,fully,qualified,domain,name,fqdn,param,fqdn,the,fully,qualified,domain,name,to,use,in,message,id,return,the,generated,message,id;public,static,string,create,message,id,string,fqdn,return,long,to,string,system,nano,time,36,long,to,string,generator,next,long,36,fqdn
AS2Utils -> public static String createMessageId(String fqdn);1535093120;Generates a globally unique message ID which includes <code>fqdn</code>: a fully qualified domain name (FQDN)_@param fqdn - the fully qualified domain name to use in message id._@return The generated message id.;public static String createMessageId(String fqdn) {_                                                    _        return "<" + Long.toString(System.nanoTime(), 36) + "." + Long.toString(generator.nextLong(), 36) + "@" + fqdn + ">"__    };generates,a,globally,unique,message,id,which,includes,code,fqdn,code,a,fully,qualified,domain,name,fqdn,param,fqdn,the,fully,qualified,domain,name,to,use,in,message,id,return,the,generated,message,id;public,static,string,create,message,id,string,fqdn,return,long,to,string,system,nano,time,36,long,to,string,generator,next,long,36,fqdn
AS2Utils -> public static String createMessageId(String fqdn);1535627650;Generates a globally unique message ID which includes <code>fqdn</code>: a fully qualified domain name (FQDN)_@param fqdn - the fully qualified domain name to use in message id._@return The generated message id.;public static String createMessageId(String fqdn) {_                                                    _        return "<" + Long.toString(System.nanoTime(), 36) + "." + Long.toString(generator.nextLong(), 36) + "@" + fqdn + ">"__    };generates,a,globally,unique,message,id,which,includes,code,fqdn,code,a,fully,qualified,domain,name,fqdn,param,fqdn,the,fully,qualified,domain,name,to,use,in,message,id,return,the,generated,message,id;public,static,string,create,message,id,string,fqdn,return,long,to,string,system,nano,time,36,long,to,string,generator,next,long,36,fqdn
AS2Utils -> public static void printRequest(PrintStream out, HttpRequest request) throws IOException;1534572499;Prints the contents of request to given print stream.__@param out_- the stream printed to._@param request_- the request printed._@throws IOException;public static void printRequest(PrintStream out, HttpRequest request) throws IOException {_        _        RequestLine requestLine = request.getRequestLine()__        out.println(requestLine.getMethod() + ' ' + requestLine.getUri() + ' ' + requestLine.getProtocolVersion())___        _        for (final HeaderIterator it = request.headerIterator()_ it.hasNext()_) {_            Header header = it.nextHeader()__            out.println(header.getName() + ": " + (header.getValue() == null ? "" : header.getValue()))__        }_        out.println()_ __        if (request instanceof HttpEntityEnclosingRequest) {_            _            HttpEntity entity = ((HttpEntityEnclosingRequest) request).getEntity()__            entity.writeTo(out)__        }_    };prints,the,contents,of,request,to,given,print,stream,param,out,the,stream,printed,to,param,request,the,request,printed,throws,ioexception;public,static,void,print,request,print,stream,out,http,request,request,throws,ioexception,request,line,request,line,request,get,request,line,out,println,request,line,get,method,request,line,get,uri,request,line,get,protocol,version,for,final,header,iterator,it,request,header,iterator,it,has,next,header,header,it,next,header,out,println,header,get,name,header,get,value,null,header,get,value,out,println,if,request,instanceof,http,entity,enclosing,request,http,entity,entity,http,entity,enclosing,request,request,get,entity,entity,write,to,out
AS2Utils -> public static void printRequest(PrintStream out, HttpRequest request) throws IOException;1535093120;Prints the contents of request to given print stream.__@param out_- the stream printed to._@param request_- the request printed._@throws IOException - If failed to print request.;public static void printRequest(PrintStream out, HttpRequest request) throws IOException {_        _        RequestLine requestLine = request.getRequestLine()__        out.println(requestLine.getMethod() + ' ' + requestLine.getUri() + ' ' + requestLine.getProtocolVersion())___        _        for (final HeaderIterator it = request.headerIterator()_ it.hasNext()_) {_            Header header = it.nextHeader()__            out.println(header.getName() + ": " + (header.getValue() == null ? "" : header.getValue()))__        }_        out.println()_ __        if (request instanceof HttpEntityEnclosingRequest) {_            _            HttpEntity entity = ((HttpEntityEnclosingRequest) request).getEntity()__            entity.writeTo(out)__        }_    };prints,the,contents,of,request,to,given,print,stream,param,out,the,stream,printed,to,param,request,the,request,printed,throws,ioexception,if,failed,to,print,request;public,static,void,print,request,print,stream,out,http,request,request,throws,ioexception,request,line,request,line,request,get,request,line,out,println,request,line,get,method,request,line,get,uri,request,line,get,protocol,version,for,final,header,iterator,it,request,header,iterator,it,has,next,header,header,it,next,header,out,println,header,get,name,header,get,value,null,header,get,value,out,println,if,request,instanceof,http,entity,enclosing,request,http,entity,entity,http,entity,enclosing,request,request,get,entity,entity,write,to,out
AS2Utils -> public static void printRequest(PrintStream out, HttpRequest request) throws IOException;1535627650;Prints the contents of request to given print stream.__@param out_- the stream printed to._@param request_- the request printed._@throws IOException - If failed to print request.;public static void printRequest(PrintStream out, HttpRequest request) throws IOException {_        _        RequestLine requestLine = request.getRequestLine()__        out.println(requestLine.getMethod() + ' ' + requestLine.getUri() + ' ' + requestLine.getProtocolVersion())___        _        for (final HeaderIterator it = request.headerIterator()_ it.hasNext()_) {_            Header header = it.nextHeader()__            out.println(header.getName() + ": " + (header.getValue() == null ? "" : header.getValue()))__        }_        out.println()_ __        if (request instanceof HttpEntityEnclosingRequest) {_            _            HttpEntity entity = ((HttpEntityEnclosingRequest) request).getEntity()__            entity.writeTo(out)__        }_    };prints,the,contents,of,request,to,given,print,stream,param,out,the,stream,printed,to,param,request,the,request,printed,throws,ioexception,if,failed,to,print,request;public,static,void,print,request,print,stream,out,http,request,request,throws,ioexception,request,line,request,line,request,get,request,line,out,println,request,line,get,method,request,line,get,uri,request,line,get,protocol,version,for,final,header,iterator,it,request,header,iterator,it,has,next,header,header,it,next,header,out,println,header,get,name,header,get,value,null,header,get,value,out,println,if,request,instanceof,http,entity,enclosing,request,http,entity,entity,http,entity,enclosing,request,request,get,entity,entity,write,to,out
