commented;modifiers;parameterAmount;loc;comment;code
false;public;2;27;;@Override public void process(HttpRequest request, HttpContext context) throws HttpException, IOException {     HttpCoreContext coreContext = HttpCoreContext.adapt(context).     /* Disposition-Notification-To */     String dispositionNotificationTo = coreContext.getAttribute(AS2ClientManager.DISPOSITION_NOTIFICATION_TO, String.class).     if (dispositionNotificationTo != null) {         request.addHeader(AS2Header.DISPOSITION_NOTIFICATION_TO, dispositionNotificationTo).         String[] micAlgorithms = coreContext.getAttribute(AS2ClientManager.SIGNED_RECEIPT_MIC_ALGORITHMS, String[].class).         if (micAlgorithms == null) {         // requesting unsigned receipt: indicate by not setting Disposition-Notification-Options header         } else {             CharArrayBuffer options = new CharArrayBuffer(SIGNED_RECEIPT_PREFIX.length() + 5 * micAlgorithms.length).             options.append(SIGNED_RECEIPT_PREFIX).             for (String micAlgorithm : micAlgorithms) {                 options.append("," + micAlgorithm).             }             request.addHeader(AS2Header.DISPOSITION_NOTIFICATION_OPTIONS, options.toString()).         }     } }
