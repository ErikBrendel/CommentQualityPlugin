commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public String getReportingUA() {     return reportingUA. }
false;public;0;3;;public String getMtnName() {     return mtnName. }
false;public;0;3;;public String getFinalRecipient() {     return finalRecipient. }
false;public;0;3;;public String getOriginalMessageId() {     return originalMessageId. }
false;public;0;3;;public DispositionMode getDispositionMode() {     return dispositionMode. }
false;public;0;3;;public AS2DispositionType getDispositionType() {     return dispositionType. }
false;public;0;3;;public AS2DispositionModifier getDispositionModifier() {     return dispositionModifier. }
false;public;0;3;;public String[] getFailureFields() {     return failureFields. }
false;public;0;3;;public String[] getErrorFields() {     return errorFields. }
false;public;0;3;;public String[] getWarningFields() {     return warningFields. }
false;public;0;3;;public Map<String, String> getExtensionFields() {     return extensionFields. }
false;public;0;3;;public ReceivedContentMic getReceivedContentMic() {     return receivedContentMic. }
false;public;1;78;;@Override public void writeTo(OutputStream outstream) throws IOException {     NoCloseOutputStream ncos = new NoCloseOutputStream(outstream).     try (CanonicalOutputStream canonicalOutstream = new CanonicalOutputStream(ncos, AS2Charset.US_ASCII)) {         // message.         if (!isMainBody()) {             HeaderIterator it = headerIterator().             while (it.hasNext()) {                 Header header = it.nextHeader().                 canonicalOutstream.writeln(header.toString()).             }             // ensure empty line between             canonicalOutstream.writeln().         // headers and body. RFC2046 -         // 5.1.1         }         if (reportingUA != null) {             Header reportingUAField = new BasicHeader(REPORTING_UA, reportingUA).             canonicalOutstream.writeln(reportingUAField.toString()).         }         if (mtnName != null) {             Header mdnGatewayField = new BasicHeader(MDN_GATEWAY, MTA_NAME_TYPE_PREFIX + mtnName).             canonicalOutstream.writeln(mdnGatewayField.toString()).         }         Header finalRecipientField = new BasicHeader(FINAL_RECIPIENT, ADDRESS_TYPE_PREFIX + finalRecipient).         canonicalOutstream.writeln(finalRecipientField.toString()).         if (originalMessageId != null) {             Header originalMessageIdField = new BasicHeader(ORIGINAL_MESSAGE_ID, originalMessageId).             canonicalOutstream.writeln(originalMessageIdField.toString()).         }         String as2Disposition = dispositionMode.toString() + "." + dispositionType.toString().         if (dispositionModifier != null) {             as2Disposition = as2Disposition + "/" + dispositionModifier.toString().         }         Header as2DispositionField = new BasicHeader(AS2_DISPOSITION, as2Disposition).         canonicalOutstream.writeln(as2DispositionField.toString()).         if (failureFields != null) {             for (String field : failureFields) {                 Header failureField = new BasicHeader(FAILURE, field).                 canonicalOutstream.writeln(failureField.toString()).             }         }         if (errorFields != null) {             for (String field : errorFields) {                 Header errorField = new BasicHeader(ERROR, field).                 canonicalOutstream.writeln(errorField.toString()).             }         }         if (failureFields != null) {             for (String field : failureFields) {                 Header failureField = new BasicHeader(WARNING, field).                 canonicalOutstream.writeln(failureField.toString()).             }         }         if (extensionFields != null) {             for (Entry<String, String> entry : extensionFields.entrySet()) {                 Header failureField = new BasicHeader(entry.getKey(), entry.getValue()).                 canonicalOutstream.writeln(failureField.toString()).             }         }         if (receivedContentMic != null) {             Header as2ReceivedContentMicField = new BasicHeader(RECEIVED_CONTENT_MIC, receivedContentMic.toString()).             canonicalOutstream.writeln(as2ReceivedContentMicField.toString()).         }     } }
