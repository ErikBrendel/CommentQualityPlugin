commented;modifiers;parameterAmount;loc;comment;code
false;public;0;37;;public boolean isValid() {     MimeEntity signedEntity = getSignedDataEntity().     ApplicationPkcs7SignatureEntity applicationPkcs7SignatureEntity = getSignatureEntity().     if (signedEntity == null || applicationPkcs7SignatureEntity == null) {         return false.     }     try {         ByteArrayOutputStream outstream = new ByteArrayOutputStream().         signedEntity.writeTo(outstream).         CMSProcessable signedContent = new CMSProcessableByteArray(outstream.toByteArray()).         byte[] signature = applicationPkcs7SignatureEntity.getSignature().         InputStream is = new ByteArrayInputStream(signature).         CMSSignedData signedData = new CMSSignedData(signedContent, is).         Store<X509CertificateHolder> store = signedData.getCertificates().         SignerInformationStore signers = signedData.getSignerInfos().         for (SignerInformation signer : signers.getSigners()) {             @SuppressWarnings("unchecked")             Collection<X509CertificateHolder> certCollection = store.getMatches(signer.getSID()).             X509CertificateHolder certHolder = certCollection.iterator().next().             X509Certificate cert = new JcaX509CertificateConverter().setProvider("BC").getCertificate(certHolder).             if (!signer.verify(new JcaSimpleSignerInfoVerifierBuilder().setProvider("BC").build(cert))) {                 return false.             }         }     } catch (Exception e) {         return false.     }     return true. }
false;public;0;7;;public MimeEntity getSignedDataEntity() {     if (getPartCount() > 0) {         return getPart(0).     }     return null. }
false;public;0;7;;public ApplicationPkcs7SignatureEntity getSignatureEntity() {     if (getPartCount() > 1 && getPart(1) instanceof ApplicationPkcs7SignatureEntity) {         return (ApplicationPkcs7SignatureEntity) getPart(1).     }     return null. }
