commented;modifiers;parameterAmount;loc;comment;code
false;public,static;1;19;;public static CMSEnvelopedDataGenerator createEnvelopDataGenerator(Certificate[] encryptionCertificateChain) throws HttpException {     Args.notNull(encryptionCertificateChain, "encryptionCertificateChain").     if (encryptionCertificateChain.length == 0 || !(encryptionCertificateChain[0] instanceof X509Certificate)) {         throw new IllegalArgumentException("Invalid certificate chain").     }     try {         X509Certificate encryptionCertificate = (X509Certificate) encryptionCertificateChain[0].         CMSEnvelopedDataGenerator cmsEnvelopeDataGenerator = new CMSEnvelopedDataGenerator().         JceKeyTransRecipientInfoGenerator recipientInfoGenerator = new JceKeyTransRecipientInfoGenerator(encryptionCertificate).         cmsEnvelopeDataGenerator.addRecipientInfoGenerator(recipientInfoGenerator).         return cmsEnvelopeDataGenerator.     } catch (CertificateEncodingException e) {         throw new HttpException("Failed to create envelope data generator", e).     } }
false;public,static;1;8;;public static OutputEncryptor createEncryptor(AS2EncryptionAlgorithm encryptionAlgorithm) throws HttpException {     Args.notNull(encryptionAlgorithm, "encryptionAlgorithmName").     try {         return new JceCMSContentEncryptorBuilder(encryptionAlgorithm.getAlgorithmOID()).build().     } catch (CMSException e) {         throw new HttpException("Failed to create encryptor ", e).     } }
