# id;timestamp;commentText;codeText;commentWords;codeWords
EntityParser -> public static void parseAS2MessageEntity(HttpMessage message) throws HttpException;1544683948;Parses message's entity and replaces it with mime entity.__@param message - message whose entity is parsed._@throws HttpException when things go wrong.;public static void parseAS2MessageEntity(HttpMessage message) throws HttpException {_        if (EntityUtils.hasEntity(message)) {_            HttpEntity entity = Args.notNull(EntityUtils.getMessageEntity(message), "message entity")___            try {_                _                String contentTypeStr = HttpMessageUtils.getHeaderValue(message, AS2Header.CONTENT_TYPE)__                ContentType contentType = ContentType.parse(contentTypeStr)____                _                String charsetName = AS2Charset.US_ASCII__                Charset charset = contentType.getCharset()__                if (charset != null) {_                    charsetName = charset.name()__                }__                _                String boundary = HttpMessageUtils.getParameterValue(message, AS2Header.CONTENT_TYPE, "boundary")___                _                String contentTransferEncoding = HttpMessageUtils.getHeaderValue(message, AS2Header.CONTENT_TRANSFER_ENCODING)___                AS2SessionInputBuffer inBuffer = new AS2SessionInputBuffer(new HttpTransportMetricsImpl(), 8 * 1024)__                inBuffer.bind(entity.getContent())___                switch (contentType.getMimeType().toLowerCase()) {_                case AS2MimeType.APPLICATION_EDIFACT:_                case AS2MimeType.APPLICATION_EDI_X12:_                case AS2MimeType.APPLICATION_EDI_CONSENT:_                    parseApplicationEDIEntity(message, inBuffer, contentType, contentTransferEncoding)__                    break__                case AS2MimeType.MULTIPART_SIGNED:_                    parseMultipartSignedEntity(message, inBuffer, boundary, charsetName, contentTransferEncoding)__                    break__                case AS2MimeType.APPLICATION_PKCS7_MIME:_                    switch (contentType.getParameter("smime-type")) {_                    case "compressed-data":_                        parseApplicationPkcs7MimeCompressedEntity(message, inBuffer, contentType, contentTransferEncoding)__                        break__                    case "enveloped-data":_                        parseApplicationPkcs7MimeEnvelopedEntity(message, inBuffer, contentType, contentTransferEncoding)__                        break__                    default:_                    }_                    break__                case AS2MimeType.MULTIPART_REPORT:_                    parseMessageDispositionNotificationReportEntity(message, inBuffer, boundary, charsetName, contentTransferEncoding)__                    break__                default:_                    break__                }_            } catch (HttpException e) {_                throw e__            } catch (Exception e) {_                throw new HttpException("Failed to parse entity content", e)__            }_        }_    };parses,message,s,entity,and,replaces,it,with,mime,entity,param,message,message,whose,entity,is,parsed,throws,http,exception,when,things,go,wrong;public,static,void,parse,as2message,entity,http,message,message,throws,http,exception,if,entity,utils,has,entity,message,http,entity,entity,args,not,null,entity,utils,get,message,entity,message,message,entity,try,string,content,type,str,http,message,utils,get,header,value,message,as2header,content,type,content,type,content,type,parse,content,type,str,string,charset,name,as2charset,charset,charset,content,type,get,charset,if,charset,null,charset,name,charset,name,string,boundary,http,message,utils,get,parameter,value,message,as2header,boundary,string,content,transfer,encoding,http,message,utils,get,header,value,message,as2header,as2session,input,buffer,in,buffer,new,as2session,input,buffer,new,http,transport,metrics,impl,8,1024,in,buffer,bind,entity,get,content,switch,content,type,get,mime,type,to,lower,case,case,as2mime,type,case,as2mime,type,case,as2mime,type,parse,application,edientity,message,in,buffer,content,type,content,transfer,encoding,break,case,as2mime,type,parse,multipart,signed,entity,message,in,buffer,boundary,charset,name,content,transfer,encoding,break,case,as2mime,type,switch,content,type,get,parameter,smime,type,case,compressed,data,parse,application,pkcs7mime,compressed,entity,message,in,buffer,content,type,content,transfer,encoding,break,case,enveloped,data,parse,application,pkcs7mime,enveloped,entity,message,in,buffer,content,type,content,transfer,encoding,break,default,break,case,as2mime,type,parse,message,disposition,notification,report,entity,message,in,buffer,boundary,charset,name,content,transfer,encoding,break,default,break,catch,http,exception,e,throw,e,catch,exception,e,throw,new,http,exception,failed,to,parse,entity,content,e
EntityParser -> public static void parseAS2MessageEntity(HttpMessage message) throws HttpException;1545033652;Parses message's entity and replaces it with mime entity.__@param message - message whose entity is parsed._@throws HttpException when things go wrong.;public static void parseAS2MessageEntity(HttpMessage message) throws HttpException {_        if (EntityUtils.hasEntity(message)) {_            HttpEntity entity = Args.notNull(EntityUtils.getMessageEntity(message), "message entity")__            _            if (entity instanceof MimeEntity) {_                _                return__            }__            try {_                _                String contentTypeStr = HttpMessageUtils.getHeaderValue(message, AS2Header.CONTENT_TYPE)__                ContentType contentType = ContentType.parse(contentTypeStr)____                _                String charsetName = AS2Charset.US_ASCII__                Charset charset = contentType.getCharset()__                if (charset != null) {_                    charsetName = charset.name()__                }__                _                String boundary = HttpMessageUtils.getParameterValue(message, AS2Header.CONTENT_TYPE, "boundary")___                _                String contentTransferEncoding = HttpMessageUtils.getHeaderValue(message, AS2Header.CONTENT_TRANSFER_ENCODING)___                AS2SessionInputBuffer inBuffer = new AS2SessionInputBuffer(new HttpTransportMetricsImpl(), 8 * 1024)__                inBuffer.bind(entity.getContent())___                switch (contentType.getMimeType().toLowerCase()) {_                case AS2MimeType.APPLICATION_EDIFACT:_                case AS2MimeType.APPLICATION_EDI_X12:_                case AS2MimeType.APPLICATION_EDI_CONSENT:_                    parseApplicationEDIEntity(message, inBuffer, contentType, contentTransferEncoding)__                    break__                case AS2MimeType.MULTIPART_SIGNED:_                    parseMultipartSignedEntity(message, inBuffer, boundary, charsetName, contentTransferEncoding)__                    break__                case AS2MimeType.APPLICATION_PKCS7_MIME:_                    switch (contentType.getParameter("smime-type")) {_                    case "compressed-data":_                        parseApplicationPkcs7MimeCompressedEntity(message, inBuffer, contentType, contentTransferEncoding)__                        break__                    case "enveloped-data":_                        parseApplicationPkcs7MimeEnvelopedEntity(message, inBuffer, contentType, contentTransferEncoding)__                        break__                    default:_                    }_                    break__                case AS2MimeType.MULTIPART_REPORT:_                    parseMessageDispositionNotificationReportEntity(message, inBuffer, boundary, charsetName, contentTransferEncoding)__                    break__                default:_                    break__                }_            } catch (HttpException e) {_                throw e__            } catch (Exception e) {_                throw new HttpException("Failed to parse entity content", e)__            }_        }_    };parses,message,s,entity,and,replaces,it,with,mime,entity,param,message,message,whose,entity,is,parsed,throws,http,exception,when,things,go,wrong;public,static,void,parse,as2message,entity,http,message,message,throws,http,exception,if,entity,utils,has,entity,message,http,entity,entity,args,not,null,entity,utils,get,message,entity,message,message,entity,if,entity,instanceof,mime,entity,return,try,string,content,type,str,http,message,utils,get,header,value,message,as2header,content,type,content,type,content,type,parse,content,type,str,string,charset,name,as2charset,charset,charset,content,type,get,charset,if,charset,null,charset,name,charset,name,string,boundary,http,message,utils,get,parameter,value,message,as2header,boundary,string,content,transfer,encoding,http,message,utils,get,header,value,message,as2header,as2session,input,buffer,in,buffer,new,as2session,input,buffer,new,http,transport,metrics,impl,8,1024,in,buffer,bind,entity,get,content,switch,content,type,get,mime,type,to,lower,case,case,as2mime,type,case,as2mime,type,case,as2mime,type,parse,application,edientity,message,in,buffer,content,type,content,transfer,encoding,break,case,as2mime,type,parse,multipart,signed,entity,message,in,buffer,boundary,charset,name,content,transfer,encoding,break,case,as2mime,type,switch,content,type,get,parameter,smime,type,case,compressed,data,parse,application,pkcs7mime,compressed,entity,message,in,buffer,content,type,content,transfer,encoding,break,case,enveloped,data,parse,application,pkcs7mime,enveloped,entity,message,in,buffer,content,type,content,transfer,encoding,break,default,break,case,as2mime,type,parse,message,disposition,notification,report,entity,message,in,buffer,boundary,charset,name,content,transfer,encoding,break,default,break,catch,http,exception,e,throw,e,catch,exception,e,throw,new,http,exception,failed,to,parse,entity,content,e
