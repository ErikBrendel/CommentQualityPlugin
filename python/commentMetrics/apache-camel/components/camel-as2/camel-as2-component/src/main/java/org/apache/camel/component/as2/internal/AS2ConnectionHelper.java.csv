commented;modifiers;parameterAmount;loc;comment;code
true;public,static;1;4;/**  * Create an AS2 client connection.  *  * @param configuration - configuration used to configure connection.  * @return The AS2 client connection.  * @throws UnknownHostException Failed to establish connection due to unknown host.  * @throws IOException - Failed to establish connection.  */ ;/**  * Create an AS2 client connection.  *  * @param configuration - configuration used to configure connection.  * @return The AS2 client connection.  * @throws UnknownHostException Failed to establish connection due to unknown host.  * @throws IOException - Failed to establish connection.  */ public static AS2ClientConnection createAS2ClientConnection(AS2Configuration configuration) throws UnknownHostException, IOException {     return new AS2ClientConnection(configuration.getAs2Version(), configuration.getUserAgent(), configuration.getClientFqdn(), configuration.getTargetHostname(), configuration.getTargetPortNumber()). }
true;public,static;1;12;/**  * Create an AS2 server connection.  *  * @param configuration - configuration used to configure connection.  * @return The AS2 server connection.  * @throws IOException  */ ;/**  * Create an AS2 server connection.  *  * @param configuration - configuration used to configure connection.  * @return The AS2 server connection.  * @throws IOException  */ public static AS2ServerConnection createAS2ServerConnection(AS2Configuration configuration) throws IOException {     synchronized (serverConnections) {         AS2ServerConnection serverConnection = serverConnections.get(configuration.getServerPortNumber()).         if (serverConnection == null) {             serverConnection = new AS2ServerConnection(configuration.getAs2Version(), configuration.getServer(), configuration.getServerFqdn(), configuration.getServerPortNumber(), configuration.getSigningAlgorithm(), configuration.getSigningCertificateChain(), configuration.getSigningPrivateKey(), configuration.getDecryptingPrivateKey()).             serverConnections.put(configuration.getServerPortNumber(), serverConnection).         }         return serverConnection.     } }
