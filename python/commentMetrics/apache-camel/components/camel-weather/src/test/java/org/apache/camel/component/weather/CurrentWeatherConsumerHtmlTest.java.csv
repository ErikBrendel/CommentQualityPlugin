commented;modifiers;parameterAmount;loc;comment;code
false;protected;1;9;;@Override protected void checkWeatherContent(String weather) {     log.debug("The weather in {} format is {}{}", WeatherMode.HTML, LS, weather).     assertStringContains(weather, "<!DOCTYPE html>").     assertStringContains(weather, "<head>").     assertStringContains(weather, "<body>").     assertStringContains(weather, "<meta name=\"description\" content=\"A layer with current weather conditions in cities for world wide\" />"). }
false;public;0;4;;@Override public void configure() throws Exception {     from("weather:foo?mode=HTML&appid=9162755b2efa555823cfe0451d7fff38&geolocationAccessKey=test&geolocationRequestHostIP=test&location=Rome").to("mock:result"). }
false;protected;0;9;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("weather:foo?mode=HTML&appid=9162755b2efa555823cfe0451d7fff38&geolocationAccessKey=test&geolocationRequestHostIP=test&location=Rome").to("mock:result").         }     }. }
