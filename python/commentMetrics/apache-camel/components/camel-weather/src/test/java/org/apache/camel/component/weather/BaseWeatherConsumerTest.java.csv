commented;modifiers;parameterAmount;loc;comment;code
false;protected;1;7;;protected void checkWeatherContent(String weather) {     // the default mode is json     log.debug("The weather in {} format is {}{}", WeatherMode.JSON, LS, weather).     assertStringContains(weather, "\"coord\":{").     assertStringContains(weather, "temp"). }
false;public;0;17;;@Test public void testGrabbingListOfEntries() throws Exception {     MockEndpoint mock = getMockEndpoint("mock:result").     // as the default delay option is one hour long, we expect exactly one message exchange     mock.expectedMessageCount(1).     // give the route a bit time to start and fetch the weather info     assertMockEndpointsSatisfied(20, TimeUnit.SECONDS).     Exchange exchange = mock.getExchanges().get(0).     assertNotNull(exchange).     Message in = exchange.getIn().     assertNotNull(in).     String weather = assertIsInstanceOf(String.class, in.getBody()).     checkWeatherContent(weather). }
