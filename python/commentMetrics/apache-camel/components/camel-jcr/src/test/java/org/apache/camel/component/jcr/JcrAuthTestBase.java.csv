commented;modifiers;parameterAmount;loc;comment;code
false;public;0;6;;@Override @Before public void setUp() throws Exception {     deleteDirectory(REPO_PATH).     super.setUp(). }
false;protected;1;32;;@Override protected void bindToRegistry(Registry registry) throws Exception {     repository = new TransientRepository(new File(REPO_PATH)).     // set up a user to authenticate     SessionImpl session = (SessionImpl) repository.login(new SimpleCredentials("admin", "admin".toCharArray())).     UserManager userManager = session.getUserManager().     User user = (User) userManager.getAuthorizable("test").     if (user == null) {         user = userManager.createUser("test", "quatloos").     }     // set up permissions     String path = session.getRootNode().getPath().     AccessControlManager accessControlManager = session.getAccessControlManager().     AccessControlPolicyIterator acls = accessControlManager.getApplicablePolicies(path).     AccessControlList acl = null.     if (acls.hasNext()) {         acl = (AccessControlList) acls.nextAccessControlPolicy().     } else {         acl = (AccessControlList) accessControlManager.getPolicies(path)[0].     }     acl.addAccessControlEntry(user.getPrincipal(), accessControlManager.getSupportedPrivileges(path)).     accessControlManager.setPolicy(path, acl).     session.save().     session.logout().     registry.bind("repository", repository). }
false;protected;0;3;;protected Repository getRepository() {     return repository. }
