commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Before public void before() {     map = new HashMap<String, Object>(). }
false;public;0;6;;@Test public void noProperties() {     CamelMessagingHeadersExtractAdapter adapter = new CamelMessagingHeadersExtractAdapter(map, true).     Iterator<Map.Entry<String, String>> iterator = adapter.iterator().     assertFalse(iterator.hasNext()). }
false;public;0;9;;@Test public void oneProperty() {     map.put("key", "value").     CamelMessagingHeadersExtractAdapter adapter = new CamelMessagingHeadersExtractAdapter(map, true).     Iterator<Map.Entry<String, String>> iterator = adapter.iterator().     Map.Entry<String, String> entry = iterator.next().     assertEquals("key", entry.getKey()).     assertEquals("value", entry.getValue()). }
false;public;0;9;;@Test public void propertyWithDash() {     map.put(JMS_DASH + "key" + JMS_DASH + "1" + JMS_DASH, "value1").     CamelMessagingHeadersExtractAdapter adapter = new CamelMessagingHeadersExtractAdapter(map, true).     Iterator<Map.Entry<String, String>> iterator = adapter.iterator().     Map.Entry<String, String> entry = iterator.next().     assertEquals("-key-1-", entry.getKey()).     assertEquals("value1", entry.getValue()). }
false;public;0;8;;@Test public void propertyWithoutDashEncoding() {     map.put(JMS_DASH + "key" + JMS_DASH + "1" + JMS_DASH, "value1").     CamelMessagingHeadersExtractAdapter adapter = new CamelMessagingHeadersExtractAdapter(map, false).     Iterator<Map.Entry<String, String>> iterator = adapter.iterator().     Map.Entry<String, String> entry = iterator.next().     assertEquals(JMS_DASH + "key" + JMS_DASH + "1" + JMS_DASH, entry.getKey()). }
