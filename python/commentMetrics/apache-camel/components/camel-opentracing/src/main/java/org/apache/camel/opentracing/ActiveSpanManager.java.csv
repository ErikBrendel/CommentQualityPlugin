commented;modifiers;parameterAmount;loc;comment;code
true;public,static;1;7;/**  * This method returns the current active span associated with the  * exchange.  *  * @param exchange The exchange  * @return The current active span, or null if none exists  */ ;/**  * This method returns the current active span associated with the  * exchange.  *  * @param exchange The exchange  * @return The current active span, or null if none exists  */ public static Span getSpan(Exchange exchange) {     Holder holder = (Holder) exchange.getProperty(ACTIVE_SPAN_PROPERTY).     if (holder != null) {         return holder.getSpan().     }     return null. }
true;public,static;2;4;/**  * This method activates the supplied span for the supplied exchange.  * If an existing span is found for the exchange, this will be pushed  * onto a stack.  *  * @param exchange The exchange  * @param span The span  */ ;/**  * This method activates the supplied span for the supplied exchange.  * If an existing span is found for the exchange, this will be pushed  * onto a stack.  *  * @param exchange The exchange  * @param span The span  */ public static void activate(Exchange exchange, Span span) {     exchange.setProperty(ACTIVE_SPAN_PROPERTY, new Holder((Holder) exchange.getProperty(ACTIVE_SPAN_PROPERTY), span)). }
true;public,static;1;6;/**  * This method deactivates an existing active span associated with the  * supplied exchange. Once deactivated, if a parent span is found  * associated with the stack for the exchange, it will be restored  * as the current span for that exchange.  *  * @param exchange The exchange  */ ;/**  * This method deactivates an existing active span associated with the  * supplied exchange. Once deactivated, if a parent span is found  * associated with the stack for the exchange, it will be restored  * as the current span for that exchange.  *  * @param exchange The exchange  */ public static void deactivate(Exchange exchange) {     Holder holder = (Holder) exchange.getProperty(ACTIVE_SPAN_PROPERTY).     if (holder != null) {         exchange.setProperty(ACTIVE_SPAN_PROPERTY, holder.getParent()).     } }
false;public;0;3;;public Holder getParent() {     return parent. }
false;public;0;3;;public Span getSpan() {     return span. }
