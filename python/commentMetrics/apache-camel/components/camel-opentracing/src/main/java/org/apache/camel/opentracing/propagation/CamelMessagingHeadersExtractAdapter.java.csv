commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public Iterator<Map.Entry<String, String>> iterator() {     return map.entrySet().iterator(). }
false;public;2;4;;@Override public void put(String key, String value) {     throw new UnsupportedOperationException("CamelMessagingHeadersExtractAdapter should only be used with Tracer.extract()"). }
true;private;1;7;/**  * Decode dashes (encoded in {@link CamelMessagingHeadersInjectAdapter} Dash  * encoding and decoding is required by JMS. This is implemented here rather  * than specifically to JMS so that other Camel messaging endpoints can take  * part in traces where the peer is using JMS.  *  * @param the source  * @return the result  */ ;/**  * Decode dashes (encoded in {@link CamelMessagingHeadersInjectAdapter} Dash  * encoding and decoding is required by JMS. This is implemented here rather  * than specifically to JMS so that other Camel messaging endpoints can take  * part in traces where the peer is using JMS.  *  * @param the source  * @return the result  */ private String decodeDash(String key) {     if (jmsEncoding) {         return key.replace(CamelMessagingHeadersInjectAdapter.JMS_DASH, "-").     } else {         return key.     } }
