commented;modifiers;parameterAmount;loc;comment;code
false;public;0;12;;@Test public void testProducer() throws Exception {     Person person = new Person("David", "Greco").     template.requestBody("direct:input", person).     MockEndpoint ep = context.getEndpoint("mock:test", MockEndpoint.class).     List<Exchange> exchanges = ep.getReceivedExchanges().     for (Exchange exchange : exchanges) {         Person person1 = (Person) exchange.getIn().getBody().         assertEquals("David", person1.getName()).         assertEquals("Greco", person1.getSurname()).     } }
false;public;0;9;;@Override @Before public void setUp() throws Exception {     port = AvailablePortFinder.getNextAvailable(23500).     uri = "cometds://127.0.0.1:" + port + "/service/test?baseResource=file:./target/test-classes/webapp&" + "timeout=240000&interval=0&maxInterval=30000&multiFrameInterval=1500&jsonCommented=true&logLevel=2".     super.setUp(). }
false;public;0;7;;@Override public void configure() throws Exception {     from("direct:input").to(uri).     from(uri).to("mock:test"). }
false;protected;0;12;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:input").to(uri).             from(uri).to("mock:test").         }     }. }
false;protected;0;22;;@Override protected CamelContext createCamelContext() throws Exception {     CamelContext context = super.createCamelContext().     KeyStoreParameters ksp = new KeyStoreParameters().     ksp.setResource("jsse/localhost.ks").     ksp.setPassword("changeit").     KeyManagersParameters kmp = new KeyManagersParameters().     kmp.setKeyPassword("changeit").     kmp.setKeyStore(ksp).     TrustManagersParameters tmp = new TrustManagersParameters().     tmp.setKeyStore(ksp).     SSLContextParameters sslContextParameters = new SSLContextParameters().     sslContextParameters.setKeyManagers(kmp).     sslContextParameters.setTrustManagers(tmp).     context.setSSLContextParameters(sslContextParameters).     ((SSLContextParametersAware) context.getComponent("cometd")).setUseGlobalSslContextParameters(true).     return context. }
false;public;0;3;;public String getName() {     return name. }
false;public;0;3;;public String getSurname() {     return surname. }
false;public;1;3;;public void setName(String name) {     this.name = name. }
false;public;1;3;;public void setSurname(String surname) {     this.surname = surname. }
