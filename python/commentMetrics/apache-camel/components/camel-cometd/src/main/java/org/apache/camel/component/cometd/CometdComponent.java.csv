# id;timestamp;commentText;codeText;commentWords;codeWords
CometdComponent -> @Override     public void setUseGlobalSslContextParameters(boolean useGlobalSslContextParameters);1491919462;Enable usage of global SSL context parameters.;@Override_    public void setUseGlobalSslContextParameters(boolean useGlobalSslContextParameters) {_        this.useGlobalSslContextParameters = useGlobalSslContextParameters__    };enable,usage,of,global,ssl,context,parameters;override,public,void,set,use,global,ssl,context,parameters,boolean,use,global,ssl,context,parameters,this,use,global,ssl,context,parameters,use,global,ssl,context,parameters
CometdComponent -> @Override     public void setUseGlobalSslContextParameters(boolean useGlobalSslContextParameters);1523968798;Enable usage of global SSL context parameters.;@Override_    public void setUseGlobalSslContextParameters(boolean useGlobalSslContextParameters) {_        this.useGlobalSslContextParameters = useGlobalSslContextParameters__    };enable,usage,of,global,ssl,context,parameters;override,public,void,set,use,global,ssl,context,parameters,boolean,use,global,ssl,context,parameters,this,use,global,ssl,context,parameters,use,global,ssl,context,parameters
CometdComponent -> @Override     public void setUseGlobalSslContextParameters(boolean useGlobalSslContextParameters);1540108158;Enable usage of global SSL context parameters.;@Override_    public void setUseGlobalSslContextParameters(boolean useGlobalSslContextParameters) {_        this.useGlobalSslContextParameters = useGlobalSslContextParameters__    };enable,usage,of,global,ssl,context,parameters;override,public,void,set,use,global,ssl,context,parameters,boolean,use,global,ssl,context,parameters,this,use,global,ssl,context,parameters,use,global,ssl,context,parameters
CometdComponent -> @Override     public void setUseGlobalSslContextParameters(boolean useGlobalSslContextParameters);1540108163;Enable usage of global SSL context parameters.;@Override_    public void setUseGlobalSslContextParameters(boolean useGlobalSslContextParameters) {_        this.useGlobalSslContextParameters = useGlobalSslContextParameters__    };enable,usage,of,global,ssl,context,parameters;override,public,void,set,use,global,ssl,context,parameters,boolean,use,global,ssl,context,parameters,this,use,global,ssl,context,parameters,use,global,ssl,context,parameters
CometdComponent -> @Override     public void setUseGlobalSslContextParameters(boolean useGlobalSslContextParameters);1547241305;Enable usage of global SSL context parameters.;@Override_    public void setUseGlobalSslContextParameters(boolean useGlobalSslContextParameters) {_        this.useGlobalSslContextParameters = useGlobalSslContextParameters__    };enable,usage,of,global,ssl,context,parameters;override,public,void,set,use,global,ssl,context,parameters,boolean,use,global,ssl,context,parameters,this,use,global,ssl,context,parameters,use,global,ssl,context,parameters
CometdComponent -> @Override     public void setUseGlobalSslContextParameters(boolean useGlobalSslContextParameters);1547623952;Enable usage of global SSL context parameters.;@Override_    public void setUseGlobalSslContextParameters(boolean useGlobalSslContextParameters) {_        this.useGlobalSslContextParameters = useGlobalSslContextParameters__    };enable,usage,of,global,ssl,context,parameters;override,public,void,set,use,global,ssl,context,parameters,boolean,use,global,ssl,context,parameters,this,use,global,ssl,context,parameters,use,global,ssl,context,parameters
CometdComponent -> public void disconnect(CometdProducerConsumer prodcon) throws Exception;1228283290;Disconnects the URL specified on the endpoint from the specified_processor.;public void disconnect(CometdProducerConsumer prodcon) throws Exception {_        CometdEndpoint endpoint = (CometdEndpoint) prodcon.getEndpoint()___        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef != null) {_                if (connectorRef.decrement() == 0) {_                    getServer().removeConnector(connectorRef.connector)__                    connectorRef.connector.stop()__                    connectors.remove(connectorKey)__                }_            }_        }_    };disconnects,the,url,specified,on,the,endpoint,from,the,specified,processor;public,void,disconnect,cometd,producer,consumer,prodcon,throws,exception,cometd,endpoint,endpoint,cometd,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,if,connector,ref,decrement,0,get,server,remove,connector,connector,ref,connector,connector,ref,connector,stop,connectors,remove,connector,key
CometdComponent -> public void disconnect(CometdProducerConsumer prodcon) throws Exception;1228968608;Disconnects the URL specified on the endpoint from the specified_processor.;public void disconnect(CometdProducerConsumer prodcon) throws Exception {_        CometdEndpoint endpoint = (CometdEndpoint) prodcon.getEndpoint()___        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef != null) {_                if (connectorRef.decrement() == 0) {_                    getServer().removeConnector(connectorRef.connector)__                    connectorRef.connector.stop()__                    connectors.remove(connectorKey)__                }_            }_        }_    };disconnects,the,url,specified,on,the,endpoint,from,the,specified,processor;public,void,disconnect,cometd,producer,consumer,prodcon,throws,exception,cometd,endpoint,endpoint,cometd,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,if,connector,ref,decrement,0,get,server,remove,connector,connector,ref,connector,connector,ref,connector,stop,connectors,remove,connector,key
CometdComponent -> public void disconnect(CometdProducerConsumer prodcon) throws Exception;1235649253;Disconnects the URL specified on the endpoint from the specified_processor.;public void disconnect(CometdProducerConsumer prodcon) throws Exception {_        CometdEndpoint endpoint = prodcon.getEndpoint()___        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef != null) {_                if (connectorRef.decrement() == 0) {_                    getServer().removeConnector(connectorRef.connector)__                    connectorRef.connector.stop()__                    connectors.remove(connectorKey)__                }_            }_        }_    };disconnects,the,url,specified,on,the,endpoint,from,the,specified,processor;public,void,disconnect,cometd,producer,consumer,prodcon,throws,exception,cometd,endpoint,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,if,connector,ref,decrement,0,get,server,remove,connector,connector,ref,connector,connector,ref,connector,stop,connectors,remove,connector,key
CometdComponent -> public void disconnect(CometdProducerConsumer prodcon) throws Exception;1241520708;Disconnects the URL specified on the endpoint from the specified_processor.;public void disconnect(CometdProducerConsumer prodcon) throws Exception {_        CometdEndpoint endpoint = prodcon.getEndpoint()___        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef != null) {_                if (connectorRef.decrement() == 0) {_                    getServer().removeConnector(connectorRef.connector)__                    connectorRef.connector.stop()__                    connectors.remove(connectorKey)__                }_            }_        }_    };disconnects,the,url,specified,on,the,endpoint,from,the,specified,processor;public,void,disconnect,cometd,producer,consumer,prodcon,throws,exception,cometd,endpoint,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,if,connector,ref,decrement,0,get,server,remove,connector,connector,ref,connector,connector,ref,connector,stop,connectors,remove,connector,key
CometdComponent -> public void disconnect(CometdProducerConsumer prodcon) throws Exception;1257920126;Disconnects the URL specified on the endpoint from the specified_processor.;public void disconnect(CometdProducerConsumer prodcon) throws Exception {_        CometdEndpoint endpoint = prodcon.getEndpoint()___        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef != null) {_                if (connectorRef.decrement() == 0) {_                    getServer().removeConnector(connectorRef.connector)__                    connectorRef.connector.stop()__                    connectors.remove(connectorKey)__                }_            }_        }_    };disconnects,the,url,specified,on,the,endpoint,from,the,specified,processor;public,void,disconnect,cometd,producer,consumer,prodcon,throws,exception,cometd,endpoint,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,if,connector,ref,decrement,0,get,server,remove,connector,connector,ref,connector,connector,ref,connector,stop,connectors,remove,connector,key
CometdComponent -> public void disconnect(CometdProducerConsumer prodcon) throws Exception;1267545978;Disconnects the URL specified on the endpoint from the specified_processor.;public void disconnect(CometdProducerConsumer prodcon) throws Exception {_        CometdEndpoint endpoint = prodcon.getEndpoint()___        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef != null) {_                if (connectorRef.decrement() == 0) {_                    getServer().removeConnector(connectorRef.connector)__                    connectorRef.connector.stop()__                    connectors.remove(connectorKey)__                }_            }_        }_    };disconnects,the,url,specified,on,the,endpoint,from,the,specified,processor;public,void,disconnect,cometd,producer,consumer,prodcon,throws,exception,cometd,endpoint,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,if,connector,ref,decrement,0,get,server,remove,connector,connector,ref,connector,connector,ref,connector,stop,connectors,remove,connector,key
CometdComponent -> public void disconnect(CometdProducerConsumer prodcon) throws Exception;1268187620;Disconnects the URL specified on the endpoint from the specified_processor.;public void disconnect(CometdProducerConsumer prodcon) throws Exception {_        CometdEndpoint endpoint = prodcon.getEndpoint()___        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef != null) {_                if (connectorRef.decrement() == 0) {_                    getServer().removeConnector(connectorRef.connector)__                    connectorRef.connector.stop()__                    connectors.remove(connectorKey)__                }_            }_        }_    };disconnects,the,url,specified,on,the,endpoint,from,the,specified,processor;public,void,disconnect,cometd,producer,consumer,prodcon,throws,exception,cometd,endpoint,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,if,connector,ref,decrement,0,get,server,remove,connector,connector,ref,connector,connector,ref,connector,stop,connectors,remove,connector,key
CometdComponent -> public void disconnect(CometdProducerConsumer prodcon) throws Exception;1296546062;Disconnects the URL specified on the endpoint from the specified_processor.;public void disconnect(CometdProducerConsumer prodcon) throws Exception {_        CometdEndpoint endpoint = prodcon.getEndpoint()___        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef != null) {_                if (connectorRef.decrement() == 0) {_                    getServer().removeConnector(connectorRef.connector)__                    connectorRef.connector.stop()__                    connectors.remove(connectorKey)__                }_            }_        }_    };disconnects,the,url,specified,on,the,endpoint,from,the,specified,processor;public,void,disconnect,cometd,producer,consumer,prodcon,throws,exception,cometd,endpoint,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,if,connector,ref,decrement,0,get,server,remove,connector,connector,ref,connector,connector,ref,connector,stop,connectors,remove,connector,key
CometdComponent -> public void disconnect(CometdProducerConsumer prodcon) throws Exception;1296567562;Disconnects the URL specified on the endpoint from the specified_processor.;public void disconnect(CometdProducerConsumer prodcon) throws Exception {_        CometdEndpoint endpoint = prodcon.getEndpoint()___        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef != null) {_                if (connectorRef.decrement() == 0) {_                    getServer().removeConnector(connectorRef.connector)__                    connectorRef.connector.stop()__                    connectors.remove(connectorKey)__                }_            }_        }_    };disconnects,the,url,specified,on,the,endpoint,from,the,specified,processor;public,void,disconnect,cometd,producer,consumer,prodcon,throws,exception,cometd,endpoint,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,if,connector,ref,decrement,0,get,server,remove,connector,connector,ref,connector,connector,ref,connector,stop,connectors,remove,connector,key
CometdComponent -> public void disconnect(CometdProducerConsumer prodcon) throws Exception;1297975937;Disconnects the URL specified on the endpoint from the specified_processor.;public void disconnect(CometdProducerConsumer prodcon) throws Exception {_        CometdEndpoint endpoint = prodcon.getEndpoint()___        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef != null) {_                if (connectorRef.decrement() == 0) {_                    getServer().removeConnector(connectorRef.connector)__                    connectorRef.connector.stop()__                    connectors.remove(connectorKey)__                }_            }_        }_    };disconnects,the,url,specified,on,the,endpoint,from,the,specified,processor;public,void,disconnect,cometd,producer,consumer,prodcon,throws,exception,cometd,endpoint,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,if,connector,ref,decrement,0,get,server,remove,connector,connector,ref,connector,connector,ref,connector,stop,connectors,remove,connector,key
CometdComponent -> public void disconnect(CometdProducerConsumer prodcon) throws Exception;1301740297;Disconnects the URL specified on the endpoint from the specified_processor.;public void disconnect(CometdProducerConsumer prodcon) throws Exception {_        CometdEndpoint endpoint = prodcon.getEndpoint()___        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef != null) {_                if (connectorRef.decrement() == 0) {_                    getServer().removeConnector(connectorRef.connector)__                    connectorRef.connector.stop()__                    connectors.remove(connectorKey)__                }_            }_        }_    };disconnects,the,url,specified,on,the,endpoint,from,the,specified,processor;public,void,disconnect,cometd,producer,consumer,prodcon,throws,exception,cometd,endpoint,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,if,connector,ref,decrement,0,get,server,remove,connector,connector,ref,connector,connector,ref,connector,stop,connectors,remove,connector,key
CometdComponent -> public void disconnect(CometdProducerConsumer prodcon) throws Exception;1303298074;Disconnects the URL specified on the endpoint from the specified_processor.;public void disconnect(CometdProducerConsumer prodcon) throws Exception {_        CometdEndpoint endpoint = prodcon.getEndpoint()___        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef != null) {_                if (connectorRef.decrement() == 0) {_                    getServer().removeConnector(connectorRef.connector)__                    connectorRef.connector.stop()__                    connectors.remove(connectorKey)__                }_            }_        }_    };disconnects,the,url,specified,on,the,endpoint,from,the,specified,processor;public,void,disconnect,cometd,producer,consumer,prodcon,throws,exception,cometd,endpoint,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,if,connector,ref,decrement,0,get,server,remove,connector,connector,ref,connector,connector,ref,connector,stop,connectors,remove,connector,key
CometdComponent -> public void disconnect(CometdProducerConsumer prodcon) throws Exception;1303299129;Disconnects the URL specified on the endpoint from the specified_processor.;public void disconnect(CometdProducerConsumer prodcon) throws Exception {_        CometdEndpoint endpoint = prodcon.getEndpoint()___        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef != null) {_                if (connectorRef.decrement() == 0) {_                    getServer().removeConnector(connectorRef.connector)__                    connectorRef.connector.stop()__                    connectors.remove(connectorKey)__                }_            }_        }_    };disconnects,the,url,specified,on,the,endpoint,from,the,specified,processor;public,void,disconnect,cometd,producer,consumer,prodcon,throws,exception,cometd,endpoint,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,if,connector,ref,decrement,0,get,server,remove,connector,connector,ref,connector,connector,ref,connector,stop,connectors,remove,connector,key
CometdComponent -> public void disconnect(CometdProducerConsumer prodcon) throws Exception;1304094062;Disconnects the URL specified on the endpoint from the specified_processor.;public void disconnect(CometdProducerConsumer prodcon) throws Exception {_        CometdEndpoint endpoint = prodcon.getEndpoint()___        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef != null) {_                if (connectorRef.decrement() == 0) {_                    getServer().removeConnector(connectorRef.connector)__                    connectorRef.connector.stop()__                    connectors.remove(connectorKey)__                }_            }_        }_    };disconnects,the,url,specified,on,the,endpoint,from,the,specified,processor;public,void,disconnect,cometd,producer,consumer,prodcon,throws,exception,cometd,endpoint,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,if,connector,ref,decrement,0,get,server,remove,connector,connector,ref,connector,connector,ref,connector,stop,connectors,remove,connector,key
CometdComponent -> public void disconnect(CometdProducerConsumer prodcon) throws Exception;1317484305;Disconnects the URL specified on the endpoint from the specified_processor.;public void disconnect(CometdProducerConsumer prodcon) throws Exception {_        CometdEndpoint endpoint = prodcon.getEndpoint()___        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef != null) {_                if (connectorRef.decrement() == 0) {_                    getServer().removeConnector(connectorRef.connector)__                    connectorRef.connector.stop()__                    connectors.remove(connectorKey)__                }_            }_        }_    };disconnects,the,url,specified,on,the,endpoint,from,the,specified,processor;public,void,disconnect,cometd,producer,consumer,prodcon,throws,exception,cometd,endpoint,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,if,connector,ref,decrement,0,get,server,remove,connector,connector,ref,connector,connector,ref,connector,stop,connectors,remove,connector,key
CometdComponent -> public void disconnect(CometdProducerConsumer prodcon) throws Exception;1321370944;Disconnects the URL specified on the endpoint from the specified_processor.;public void disconnect(CometdProducerConsumer prodcon) throws Exception {_        CometdEndpoint endpoint = prodcon.getEndpoint()___        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef != null) {_                if (connectorRef.decrement() == 0) {_                    getServer().removeConnector(connectorRef.connector)__                    connectorRef.connector.stop()__                    connectors.remove(connectorKey)__                }_            }_        }_    };disconnects,the,url,specified,on,the,endpoint,from,the,specified,processor;public,void,disconnect,cometd,producer,consumer,prodcon,throws,exception,cometd,endpoint,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,if,connector,ref,decrement,0,get,server,remove,connector,connector,ref,connector,connector,ref,connector,stop,connectors,remove,connector,key
CometdComponent -> public void disconnect(CometdProducerConsumer prodcon) throws Exception;1321371528;Disconnects the URL specified on the endpoint from the specified_processor.;public void disconnect(CometdProducerConsumer prodcon) throws Exception {_        CometdEndpoint endpoint = prodcon.getEndpoint()___        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef != null) {_                if (connectorRef.decrement() == 0) {_                    getServer().removeConnector(connectorRef.connector)__                    connectorRef.connector.stop()__                    connectors.remove(connectorKey)__                }_            }_        }_    };disconnects,the,url,specified,on,the,endpoint,from,the,specified,processor;public,void,disconnect,cometd,producer,consumer,prodcon,throws,exception,cometd,endpoint,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,if,connector,ref,decrement,0,get,server,remove,connector,connector,ref,connector,connector,ref,connector,stop,connectors,remove,connector,key
CometdComponent -> public void disconnect(CometdProducerConsumer prodcon) throws Exception;1321372404;Disconnects the URL specified on the endpoint from the specified_processor.;public void disconnect(CometdProducerConsumer prodcon) throws Exception {_        CometdEndpoint endpoint = prodcon.getEndpoint()___        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef != null) {_                if (connectorRef.decrement() == 0) {_                    getServer().removeConnector(connectorRef.connector)__                    connectorRef.connector.stop()__                    connectors.remove(connectorKey)__                }_            }_        }_    };disconnects,the,url,specified,on,the,endpoint,from,the,specified,processor;public,void,disconnect,cometd,producer,consumer,prodcon,throws,exception,cometd,endpoint,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,if,connector,ref,decrement,0,get,server,remove,connector,connector,ref,connector,connector,ref,connector,stop,connectors,remove,connector,key
CometdComponent -> public void disconnect(CometdProducerConsumer prodcon) throws Exception;1321467797;Disconnects the URL specified on the endpoint from the specified_processor.;public void disconnect(CometdProducerConsumer prodcon) throws Exception {_        CometdEndpoint endpoint = prodcon.getEndpoint()___        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef != null) {_                if (connectorRef.decrement() == 0) {_                    getServer().removeConnector(connectorRef.connector)__                    connectorRef.connector.stop()__                    connectors.remove(connectorKey)__                }_            }_        }_    };disconnects,the,url,specified,on,the,endpoint,from,the,specified,processor;public,void,disconnect,cometd,producer,consumer,prodcon,throws,exception,cometd,endpoint,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,if,connector,ref,decrement,0,get,server,remove,connector,connector,ref,connector,connector,ref,connector,stop,connectors,remove,connector,key
CometdComponent -> public void disconnect(CometdProducerConsumer prodcon) throws Exception;1323148087;Disconnects the URL specified on the endpoint from the specified_processor.;public void disconnect(CometdProducerConsumer prodcon) throws Exception {_        CometdEndpoint endpoint = prodcon.getEndpoint()___        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef != null) {_                if (connectorRef.decrement() == 0) {_                    getServer().removeConnector(connectorRef.connector)__                    connectorRef.connector.stop()__                    connectors.remove(connectorKey)__                }_            }_        }_    };disconnects,the,url,specified,on,the,endpoint,from,the,specified,processor;public,void,disconnect,cometd,producer,consumer,prodcon,throws,exception,cometd,endpoint,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,if,connector,ref,decrement,0,get,server,remove,connector,connector,ref,connector,connector,ref,connector,stop,connectors,remove,connector,key
CometdComponent -> public void disconnect(CometdProducerConsumer prodcon) throws Exception;1324569391;Disconnects the URL specified on the endpoint from the specified_processor.;public void disconnect(CometdProducerConsumer prodcon) throws Exception {_        CometdEndpoint endpoint = prodcon.getEndpoint()___        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef != null) {_                if (connectorRef.decrement() == 0) {_                    getServer().removeConnector(connectorRef.connector)__                    connectorRef.connector.stop()__                    connectors.remove(connectorKey)__                }_            }_        }_    };disconnects,the,url,specified,on,the,endpoint,from,the,specified,processor;public,void,disconnect,cometd,producer,consumer,prodcon,throws,exception,cometd,endpoint,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,if,connector,ref,decrement,0,get,server,remove,connector,connector,ref,connector,connector,ref,connector,stop,connectors,remove,connector,key
CometdComponent -> public void disconnect(CometdProducerConsumer prodcon) throws Exception;1325779288;Disconnects the URL specified on the endpoint from the specified_processor.;public void disconnect(CometdProducerConsumer prodcon) throws Exception {_        CometdEndpoint endpoint = prodcon.getEndpoint()___        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef != null) {_                if (connectorRef.decrement() == 0) {_                    getServer().removeConnector(connectorRef.connector)__                    connectorRef.connector.stop()__                    connectors.remove(connectorKey)__                }_            }_        }_    };disconnects,the,url,specified,on,the,endpoint,from,the,specified,processor;public,void,disconnect,cometd,producer,consumer,prodcon,throws,exception,cometd,endpoint,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,if,connector,ref,decrement,0,get,server,remove,connector,connector,ref,connector,connector,ref,connector,stop,connectors,remove,connector,key
CometdComponent -> public void disconnect(CometdProducerConsumer prodcon) throws Exception;1328442507;Disconnects the URL specified on the endpoint from the specified_processor.;public void disconnect(CometdProducerConsumer prodcon) throws Exception {_        CometdEndpoint endpoint = prodcon.getEndpoint()___        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef != null) {_                if (connectorRef.decrement() == 0) {_                    getServer().removeConnector(connectorRef.connector)__                    connectorRef.connector.stop()__                    connectors.remove(connectorKey)__                }_            }_        }_    };disconnects,the,url,specified,on,the,endpoint,from,the,specified,processor;public,void,disconnect,cometd,producer,consumer,prodcon,throws,exception,cometd,endpoint,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,if,connector,ref,decrement,0,get,server,remove,connector,connector,ref,connector,connector,ref,connector,stop,connectors,remove,connector,key
CometdComponent -> public void disconnect(CometdProducerConsumer prodcon) throws Exception;1331780440;Disconnects the URL specified on the endpoint from the specified_processor.;public void disconnect(CometdProducerConsumer prodcon) throws Exception {_        CometdEndpoint endpoint = prodcon.getEndpoint()___        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef != null) {_                if (connectorRef.decrement() == 0) {_                    connectorRef.server.removeConnector(connectorRef.connector)__                    connectorRef.connector.stop()__                    connectorRef.server.stop()__                    connectors.remove(connectorKey)__                }_            }_        }_    };disconnects,the,url,specified,on,the,endpoint,from,the,specified,processor;public,void,disconnect,cometd,producer,consumer,prodcon,throws,exception,cometd,endpoint,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,if,connector,ref,decrement,0,connector,ref,server,remove,connector,connector,ref,connector,connector,ref,connector,stop,connector,ref,server,stop,connectors,remove,connector,key
CometdComponent -> public void disconnect(CometdProducerConsumer prodcon) throws Exception;1339138868;Disconnects the URL specified on the endpoint from the specified_processor.;public void disconnect(CometdProducerConsumer prodcon) throws Exception {_        CometdEndpoint endpoint = prodcon.getEndpoint()___        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef != null) {_                if (connectorRef.decrement() == 0) {_                    connectorRef.server.removeConnector(connectorRef.connector)__                    connectorRef.connector.stop()__                    connectorRef.server.stop()__                    connectors.remove(connectorKey)__                }_            }_        }_    };disconnects,the,url,specified,on,the,endpoint,from,the,specified,processor;public,void,disconnect,cometd,producer,consumer,prodcon,throws,exception,cometd,endpoint,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,if,connector,ref,decrement,0,connector,ref,server,remove,connector,connector,ref,connector,connector,ref,connector,stop,connector,ref,server,stop,connectors,remove,connector,key
CometdComponent -> public void disconnect(CometdProducerConsumer prodcon) throws Exception;1372816163;Disconnects the URL specified on the endpoint from the specified_processor.;public void disconnect(CometdProducerConsumer prodcon) throws Exception {_        CometdEndpoint endpoint = prodcon.getEndpoint()___        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef != null) {_                if (connectorRef.decrement() == 0) {_                    connectorRef.server.removeConnector(connectorRef.connector)__                    connectorRef.connector.stop()__                    connectorRef.server.stop()__                    connectors.remove(connectorKey)__                }_            }_        }_    };disconnects,the,url,specified,on,the,endpoint,from,the,specified,processor;public,void,disconnect,cometd,producer,consumer,prodcon,throws,exception,cometd,endpoint,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,if,connector,ref,decrement,0,connector,ref,server,remove,connector,connector,ref,connector,connector,ref,connector,stop,connector,ref,server,stop,connectors,remove,connector,key
CometdComponent -> public void disconnect(CometdProducerConsumer prodcon) throws Exception;1372816406;Disconnects the URL specified on the endpoint from the specified_processor.;public void disconnect(CometdProducerConsumer prodcon) throws Exception {_        CometdEndpoint endpoint = prodcon.getEndpoint()___        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef != null) {_                if (connectorRef.decrement() == 0) {_                    connectorRef.server.removeConnector(connectorRef.connector)__                    connectorRef.connector.stop()__                    connectorRef.server.stop()__                    connectors.remove(connectorKey)__                }_            }_        }_    };disconnects,the,url,specified,on,the,endpoint,from,the,specified,processor;public,void,disconnect,cometd,producer,consumer,prodcon,throws,exception,cometd,endpoint,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,if,connector,ref,decrement,0,connector,ref,server,remove,connector,connector,ref,connector,connector,ref,connector,stop,connector,ref,server,stop,connectors,remove,connector,key
CometdComponent -> public void disconnect(CometdProducerConsumer prodcon) throws Exception;1376549254;Disconnects the URL specified on the endpoint from the specified_processor.;public void disconnect(CometdProducerConsumer prodcon) throws Exception {_        CometdEndpoint endpoint = prodcon.getEndpoint()___        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef != null) {_                if (connectorRef.decrement() == 0) {_                    connectorRef.server.removeConnector(connectorRef.connector)__                    connectorRef.connector.stop()__                    connectorRef.server.stop()__                    connectors.remove(connectorKey)__                }_            }_        }_    };disconnects,the,url,specified,on,the,endpoint,from,the,specified,processor;public,void,disconnect,cometd,producer,consumer,prodcon,throws,exception,cometd,endpoint,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,if,connector,ref,decrement,0,connector,ref,server,remove,connector,connector,ref,connector,connector,ref,connector,stop,connector,ref,server,stop,connectors,remove,connector,key
CometdComponent -> public void disconnect(CometdProducerConsumer prodcon) throws Exception;1379403291;Disconnects the URL specified on the endpoint from the specified_processor.;public void disconnect(CometdProducerConsumer prodcon) throws Exception {_        CometdEndpoint endpoint = prodcon.getEndpoint()___        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef != null) {_                if (connectorRef.decrement() == 0) {_                    connectorRef.server.removeConnector(connectorRef.connector)__                    connectorRef.connector.stop()__                    connectorRef.server.stop()__                    connectors.remove(connectorKey)__                }_            }_        }_    };disconnects,the,url,specified,on,the,endpoint,from,the,specified,processor;public,void,disconnect,cometd,producer,consumer,prodcon,throws,exception,cometd,endpoint,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,if,connector,ref,decrement,0,connector,ref,server,remove,connector,connector,ref,connector,connector,ref,connector,stop,connector,ref,server,stop,connectors,remove,connector,key
CometdComponent -> public void disconnect(CometdProducerConsumer prodcon) throws Exception;1420528840;Disconnects the URL specified on the endpoint from the specified_processor.;public void disconnect(CometdProducerConsumer prodcon) throws Exception {_        CometdEndpoint endpoint = prodcon.getEndpoint()___        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef != null) {_                if (connectorRef.decrement() == 0) {_                    connectorRef.server.removeConnector(connectorRef.connector)__                    connectorRef.connector.stop()__                    connectorRef.server.stop()__                    connectors.remove(connectorKey)__                }_            }_        }_    };disconnects,the,url,specified,on,the,endpoint,from,the,specified,processor;public,void,disconnect,cometd,producer,consumer,prodcon,throws,exception,cometd,endpoint,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,if,connector,ref,decrement,0,connector,ref,server,remove,connector,connector,ref,connector,connector,ref,connector,stop,connector,ref,server,stop,connectors,remove,connector,key
CometdComponent -> public void disconnect(CometdProducerConsumer prodcon) throws Exception;1434296657;Disconnects the URL specified on the endpoint from the specified_processor.;public void disconnect(CometdProducerConsumer prodcon) throws Exception {_        CometdEndpoint endpoint = prodcon.getEndpoint()___        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef != null) {_                if (connectorRef.decrement() == 0) {_                    connectorRef.server.removeConnector(connectorRef.connector)__                    connectorRef.connector.stop()__                    connectorRef.server.stop()__                    connectors.remove(connectorKey)__                }_            }_        }_    };disconnects,the,url,specified,on,the,endpoint,from,the,specified,processor;public,void,disconnect,cometd,producer,consumer,prodcon,throws,exception,cometd,endpoint,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,if,connector,ref,decrement,0,connector,ref,server,remove,connector,connector,ref,connector,connector,ref,connector,stop,connector,ref,server,stop,connectors,remove,connector,key
CometdComponent -> public void disconnect(CometdProducerConsumer prodcon) throws Exception;1461244720;Disconnects the URL specified on the endpoint from the specified_processor.;public void disconnect(CometdProducerConsumer prodcon) throws Exception {_        CometdEndpoint endpoint = prodcon.getEndpoint()___        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef != null) {_                if (connectorRef.decrement() == 0) {_                    connectorRef.server.removeConnector(connectorRef.connector)__                    connectorRef.connector.stop()__                    connectorRef.server.stop()__                    connectors.remove(connectorKey)__                }_            }_        }_    };disconnects,the,url,specified,on,the,endpoint,from,the,specified,processor;public,void,disconnect,cometd,producer,consumer,prodcon,throws,exception,cometd,endpoint,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,if,connector,ref,decrement,0,connector,ref,server,remove,connector,connector,ref,connector,connector,ref,connector,stop,connector,ref,server,stop,connectors,remove,connector,key
CometdComponent -> public void disconnect(CometdProducerConsumer prodcon) throws Exception;1461244720;Disconnects the URL specified on the endpoint from the specified_processor.;public void disconnect(CometdProducerConsumer prodcon) throws Exception {_        CometdEndpoint endpoint = prodcon.getEndpoint()___        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef != null) {_                if (connectorRef.decrement() == 0) {_                    connectorRef.server.removeConnector(connectorRef.connector)__                    connectorRef.connector.stop()__                    connectorRef.server.stop()__                    connectors.remove(connectorKey)__                }_            }_        }_    };disconnects,the,url,specified,on,the,endpoint,from,the,specified,processor;public,void,disconnect,cometd,producer,consumer,prodcon,throws,exception,cometd,endpoint,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,if,connector,ref,decrement,0,connector,ref,server,remove,connector,connector,ref,connector,connector,ref,connector,stop,connector,ref,server,stop,connectors,remove,connector,key
CometdComponent -> public void disconnect(CometdProducerConsumer prodcon) throws Exception;1461851621;Disconnects the URL specified on the endpoint from the specified_processor.;public void disconnect(CometdProducerConsumer prodcon) throws Exception {_        CometdEndpoint endpoint = prodcon.getEndpoint()___        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef != null) {_                if (connectorRef.decrement() == 0) {_                    connectorRef.server.removeConnector(connectorRef.connector)__                    connectorRef.connector.stop()__                    connectorRef.server.stop()__                    connectors.remove(connectorKey)__                }_            }_        }_    };disconnects,the,url,specified,on,the,endpoint,from,the,specified,processor;public,void,disconnect,cometd,producer,consumer,prodcon,throws,exception,cometd,endpoint,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,if,connector,ref,decrement,0,connector,ref,server,remove,connector,connector,ref,connector,connector,ref,connector,stop,connector,ref,server,stop,connectors,remove,connector,key
CometdComponent -> public void disconnect(CometdProducerConsumer prodcon) throws Exception;1461916938;Disconnects the URL specified on the endpoint from the specified_processor.;public void disconnect(CometdProducerConsumer prodcon) throws Exception {_        CometdEndpoint endpoint = prodcon.getEndpoint()___        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef != null) {_                if (connectorRef.decrement() == 0) {_                    connectorRef.server.removeConnector(connectorRef.connector)__                    connectorRef.connector.stop()__                    connectorRef.server.stop()__                    connectors.remove(connectorKey)__                }_            }_        }_    };disconnects,the,url,specified,on,the,endpoint,from,the,specified,processor;public,void,disconnect,cometd,producer,consumer,prodcon,throws,exception,cometd,endpoint,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,if,connector,ref,decrement,0,connector,ref,server,remove,connector,connector,ref,connector,connector,ref,connector,stop,connector,ref,server,stop,connectors,remove,connector,key
CometdComponent -> public void disconnect(CometdProducerConsumer prodcon) throws Exception;1475933627;Disconnects the URL specified on the endpoint from the specified_processor.;public void disconnect(CometdProducerConsumer prodcon) throws Exception {_        CometdEndpoint endpoint = prodcon.getEndpoint()___        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef != null) {_                if (connectorRef.decrement() == 0) {_                    connectorRef.server.removeConnector(connectorRef.connector)__                    connectorRef.connector.stop()__                    connectorRef.server.stop()__                    connectors.remove(connectorKey)__                }_            }_        }_    };disconnects,the,url,specified,on,the,endpoint,from,the,specified,processor;public,void,disconnect,cometd,producer,consumer,prodcon,throws,exception,cometd,endpoint,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,if,connector,ref,decrement,0,connector,ref,server,remove,connector,connector,ref,connector,connector,ref,connector,stop,connector,ref,server,stop,connectors,remove,connector,key
CometdComponent -> public void disconnect(CometdProducerConsumer prodcon) throws Exception;1482322625;Disconnects the URL specified on the endpoint from the specified_processor.;public void disconnect(CometdProducerConsumer prodcon) throws Exception {_        CometdEndpoint endpoint = prodcon.getEndpoint()___        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef != null) {_                if (connectorRef.decrement() == 0) {_                    connectorRef.server.removeConnector(connectorRef.connector)__                    connectorRef.connector.stop()__                    connectorRef.server.stop()__                    connectors.remove(connectorKey)__                }_            }_        }_    };disconnects,the,url,specified,on,the,endpoint,from,the,specified,processor;public,void,disconnect,cometd,producer,consumer,prodcon,throws,exception,cometd,endpoint,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,if,connector,ref,decrement,0,connector,ref,server,remove,connector,connector,ref,connector,connector,ref,connector,stop,connector,ref,server,stop,connectors,remove,connector,key
CometdComponent -> public void disconnect(CometdProducerConsumer prodcon) throws Exception;1489596811;Disconnects the URL specified on the endpoint from the specified_processor.;public void disconnect(CometdProducerConsumer prodcon) throws Exception {_        CometdEndpoint endpoint = prodcon.getEndpoint()___        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef != null) {_                if (connectorRef.decrement() == 0) {_                    connectorRef.server.removeConnector(connectorRef.connector)__                    connectorRef.connector.stop()__                    connectorRef.server.stop()__                    connectors.remove(connectorKey)__                }_            }_        }_    };disconnects,the,url,specified,on,the,endpoint,from,the,specified,processor;public,void,disconnect,cometd,producer,consumer,prodcon,throws,exception,cometd,endpoint,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,if,connector,ref,decrement,0,connector,ref,server,remove,connector,connector,ref,connector,connector,ref,connector,stop,connector,ref,server,stop,connectors,remove,connector,key
CometdComponent -> public void disconnect(CometdProducerConsumer prodcon) throws Exception;1491919259;Disconnects the URL specified on the endpoint from the specified_processor.;public void disconnect(CometdProducerConsumer prodcon) throws Exception {_        CometdEndpoint endpoint = prodcon.getEndpoint()___        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef != null) {_                if (connectorRef.decrement() == 0) {_                    connectorRef.server.removeConnector(connectorRef.connector)__                    connectorRef.connector.stop()__                    connectorRef.server.stop()__                    connectors.remove(connectorKey)__                }_            }_        }_    };disconnects,the,url,specified,on,the,endpoint,from,the,specified,processor;public,void,disconnect,cometd,producer,consumer,prodcon,throws,exception,cometd,endpoint,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,if,connector,ref,decrement,0,connector,ref,server,remove,connector,connector,ref,connector,connector,ref,connector,stop,connector,ref,server,stop,connectors,remove,connector,key
CometdComponent -> public void disconnect(CometdProducerConsumer prodcon) throws Exception;1491919462;Disconnects the URL specified on the endpoint from the specified_processor.;public void disconnect(CometdProducerConsumer prodcon) throws Exception {_        CometdEndpoint endpoint = prodcon.getEndpoint()___        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef != null) {_                if (connectorRef.decrement() == 0) {_                    connectorRef.server.removeConnector(connectorRef.connector)__                    connectorRef.connector.stop()__                    connectorRef.server.stop()__                    connectors.remove(connectorKey)__                }_            }_        }_    };disconnects,the,url,specified,on,the,endpoint,from,the,specified,processor;public,void,disconnect,cometd,producer,consumer,prodcon,throws,exception,cometd,endpoint,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,if,connector,ref,decrement,0,connector,ref,server,remove,connector,connector,ref,connector,connector,ref,connector,stop,connector,ref,server,stop,connectors,remove,connector,key
CometdComponent -> public void disconnect(CometdProducerConsumer prodcon) throws Exception;1491919462;Disconnects the URL specified on the endpoint from the specified_processor.;public void disconnect(CometdProducerConsumer prodcon) throws Exception {_        CometdEndpoint endpoint = prodcon.getEndpoint()___        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef != null) {_                if (connectorRef.decrement() == 0) {_                    connectorRef.server.removeConnector(connectorRef.connector)__                    connectorRef.connector.stop()__                    connectorRef.server.stop()__                    connectors.remove(connectorKey)__                }_            }_        }_    };disconnects,the,url,specified,on,the,endpoint,from,the,specified,processor;public,void,disconnect,cometd,producer,consumer,prodcon,throws,exception,cometd,endpoint,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,if,connector,ref,decrement,0,connector,ref,server,remove,connector,connector,ref,connector,connector,ref,connector,stop,connector,ref,server,stop,connectors,remove,connector,key
CometdComponent -> public void disconnect(CometdProducerConsumer prodcon) throws Exception;1491919462;Disconnects the URL specified on the endpoint from the specified_processor.;public void disconnect(CometdProducerConsumer prodcon) throws Exception {_        CometdEndpoint endpoint = prodcon.getEndpoint()___        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef != null) {_                if (connectorRef.decrement() == 0) {_                    connectorRef.server.removeConnector(connectorRef.connector)__                    connectorRef.connector.stop()__                    connectorRef.server.stop()__                    connectors.remove(connectorKey)__                }_            }_        }_    };disconnects,the,url,specified,on,the,endpoint,from,the,specified,processor;public,void,disconnect,cometd,producer,consumer,prodcon,throws,exception,cometd,endpoint,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,if,connector,ref,decrement,0,connector,ref,server,remove,connector,connector,ref,connector,connector,ref,connector,stop,connector,ref,server,stop,connectors,remove,connector,key
CometdComponent -> public void disconnect(CometdProducerConsumer prodcon) throws Exception;1523968798;Disconnects the URL specified on the endpoint from the specified_processor.;public void disconnect(CometdProducerConsumer prodcon) throws Exception {_        CometdEndpoint endpoint = prodcon.getEndpoint()___        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef != null) {_                if (connectorRef.decrement() == 0) {_                    connectorRef.server.removeConnector(connectorRef.connector)__                    connectorRef.connector.stop()__                    connectorRef.server.stop()__                    connectors.remove(connectorKey)__                }_            }_        }_    };disconnects,the,url,specified,on,the,endpoint,from,the,specified,processor;public,void,disconnect,cometd,producer,consumer,prodcon,throws,exception,cometd,endpoint,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,if,connector,ref,decrement,0,connector,ref,server,remove,connector,connector,ref,connector,connector,ref,connector,stop,connector,ref,server,stop,connectors,remove,connector,key
CometdComponent -> public void disconnect(CometdProducerConsumer prodcon) throws Exception;1540108158;Disconnects the URL specified on the endpoint from the specified_processor.;public void disconnect(CometdProducerConsumer prodcon) throws Exception {_        CometdEndpoint endpoint = prodcon.getEndpoint()___        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef != null) {_                if (connectorRef.decrement() == 0) {_                    connectorRef.server.removeConnector(connectorRef.connector)__                    connectorRef.connector.stop()__                    connectorRef.server.stop()__                    connectors.remove(connectorKey)__                }_            }_        }_    };disconnects,the,url,specified,on,the,endpoint,from,the,specified,processor;public,void,disconnect,cometd,producer,consumer,prodcon,throws,exception,cometd,endpoint,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,if,connector,ref,decrement,0,connector,ref,server,remove,connector,connector,ref,connector,connector,ref,connector,stop,connector,ref,server,stop,connectors,remove,connector,key
CometdComponent -> public void disconnect(CometdProducerConsumer prodcon) throws Exception;1540108163;Disconnects the URL specified on the endpoint from the specified_processor.;public void disconnect(CometdProducerConsumer prodcon) throws Exception {_        CometdEndpoint endpoint = prodcon.getEndpoint()___        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef != null) {_                if (connectorRef.decrement() == 0) {_                    connectorRef.server.removeConnector(connectorRef.connector)__                    connectorRef.connector.stop()__                    connectorRef.server.stop()__                    connectors.remove(connectorKey)__                }_            }_        }_    };disconnects,the,url,specified,on,the,endpoint,from,the,specified,processor;public,void,disconnect,cometd,producer,consumer,prodcon,throws,exception,cometd,endpoint,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,if,connector,ref,decrement,0,connector,ref,server,remove,connector,connector,ref,connector,connector,ref,connector,stop,connector,ref,server,stop,connectors,remove,connector,key
CometdComponent -> public void disconnect(CometdProducerConsumer prodcon) throws Exception;1547241305;Disconnects the URL specified on the endpoint from the specified_processor.;public void disconnect(CometdProducerConsumer prodcon) throws Exception {_        CometdEndpoint endpoint = prodcon.getEndpoint()___        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef != null) {_                if (connectorRef.decrement() == 0) {_                    connectorRef.server.removeConnector(connectorRef.connector)__                    connectorRef.connector.stop()__                    connectorRef.server.stop()__                    connectors.remove(connectorKey)__                }_            }_        }_    };disconnects,the,url,specified,on,the,endpoint,from,the,specified,processor;public,void,disconnect,cometd,producer,consumer,prodcon,throws,exception,cometd,endpoint,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,if,connector,ref,decrement,0,connector,ref,server,remove,connector,connector,ref,connector,connector,ref,connector,stop,connector,ref,server,stop,connectors,remove,connector,key
CometdComponent -> public void disconnect(CometdProducerConsumer prodcon) throws Exception;1547623952;Disconnects the URL specified on the endpoint from the specified_processor.;public void disconnect(CometdProducerConsumer prodcon) throws Exception {_        CometdEndpoint endpoint = prodcon.getEndpoint()___        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef != null) {_                if (connectorRef.decrement() == 0) {_                    connectorRef.server.removeConnector(connectorRef.connector)__                    connectorRef.connector.stop()__                    connectorRef.server.stop()__                    connectors.remove(connectorKey)__                }_            }_        }_    };disconnects,the,url,specified,on,the,endpoint,from,the,specified,processor;public,void,disconnect,cometd,producer,consumer,prodcon,throws,exception,cometd,endpoint,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,if,connector,ref,decrement,0,connector,ref,server,remove,connector,connector,ref,connector,connector,ref,connector,stop,connector,ref,server,stop,connectors,remove,connector,key
CometdComponent -> public void setSslPassword(String sslPassword);1434296657;The password when using SSL.;public void setSslPassword(String sslPassword) {_        this.sslPassword = sslPassword__    };the,password,when,using,ssl;public,void,set,ssl,password,string,ssl,password,this,ssl,password,ssl,password
CometdComponent -> public void setSslPassword(String sslPassword);1461244720;The password when using SSL.;public void setSslPassword(String sslPassword) {_        this.sslPassword = sslPassword__    };the,password,when,using,ssl;public,void,set,ssl,password,string,ssl,password,this,ssl,password,ssl,password
CometdComponent -> public void setSslPassword(String sslPassword);1461244720;The password when using SSL.;public void setSslPassword(String sslPassword) {_        this.sslPassword = sslPassword__    };the,password,when,using,ssl;public,void,set,ssl,password,string,ssl,password,this,ssl,password,ssl,password
CometdComponent -> public void setSslPassword(String sslPassword);1461851621;The password when using SSL.;public void setSslPassword(String sslPassword) {_        this.sslPassword = sslPassword__    };the,password,when,using,ssl;public,void,set,ssl,password,string,ssl,password,this,ssl,password,ssl,password
CometdComponent -> public void setSslPassword(String sslPassword);1461916938;The password when using SSL.;public void setSslPassword(String sslPassword) {_        this.sslPassword = sslPassword__    };the,password,when,using,ssl;public,void,set,ssl,password,string,ssl,password,this,ssl,password,ssl,password
CometdComponent -> public void setSslPassword(String sslPassword);1475933627;The password when using SSL.;public void setSslPassword(String sslPassword) {_        this.sslPassword = sslPassword__    };the,password,when,using,ssl;public,void,set,ssl,password,string,ssl,password,this,ssl,password,ssl,password
CometdComponent -> public void setSslPassword(String sslPassword);1482322625;The password when using SSL.;public void setSslPassword(String sslPassword) {_        this.sslPassword = sslPassword__    };the,password,when,using,ssl;public,void,set,ssl,password,string,ssl,password,this,ssl,password,ssl,password
CometdComponent -> public void setSslPassword(String sslPassword);1489596811;The password when using SSL.;public void setSslPassword(String sslPassword) {_        this.sslPassword = sslPassword__    };the,password,when,using,ssl;public,void,set,ssl,password,string,ssl,password,this,ssl,password,ssl,password
CometdComponent -> public void setSslPassword(String sslPassword);1491919259;The password when using SSL.;public void setSslPassword(String sslPassword) {_        this.sslPassword = sslPassword__    };the,password,when,using,ssl;public,void,set,ssl,password,string,ssl,password,this,ssl,password,ssl,password
CometdComponent -> public void setSslPassword(String sslPassword);1491919462;The password when using SSL.;public void setSslPassword(String sslPassword) {_        this.sslPassword = sslPassword__    };the,password,when,using,ssl;public,void,set,ssl,password,string,ssl,password,this,ssl,password,ssl,password
CometdComponent -> public void setSslPassword(String sslPassword);1491919462;The password when using SSL.;public void setSslPassword(String sslPassword) {_        this.sslPassword = sslPassword__    };the,password,when,using,ssl;public,void,set,ssl,password,string,ssl,password,this,ssl,password,ssl,password
CometdComponent -> public void setSslPassword(String sslPassword);1491919462;The password when using SSL.;public void setSslPassword(String sslPassword) {_        this.sslPassword = sslPassword__    };the,password,when,using,ssl;public,void,set,ssl,password,string,ssl,password,this,ssl,password,ssl,password
CometdComponent -> public void setSslPassword(String sslPassword);1523968798;The password when using SSL.;public void setSslPassword(String sslPassword) {_        this.sslPassword = sslPassword__    };the,password,when,using,ssl;public,void,set,ssl,password,string,ssl,password,this,ssl,password,ssl,password
CometdComponent -> public void setSslPassword(String sslPassword);1540108158;The password when using SSL.;public void setSslPassword(String sslPassword) {_        this.sslPassword = sslPassword__    };the,password,when,using,ssl;public,void,set,ssl,password,string,ssl,password,this,ssl,password,ssl,password
CometdComponent -> public void setSslPassword(String sslPassword);1540108163;The password when using SSL.;public void setSslPassword(String sslPassword) {_        this.sslPassword = sslPassword__    };the,password,when,using,ssl;public,void,set,ssl,password,string,ssl,password,this,ssl,password,ssl,password
CometdComponent -> public void setSslPassword(String sslPassword);1547241305;The password when using SSL.;public void setSslPassword(String sslPassword) {_        this.sslPassword = sslPassword__    };the,password,when,using,ssl;public,void,set,ssl,password,string,ssl,password,this,ssl,password,ssl,password
CometdComponent -> public void setSslPassword(String sslPassword);1547623952;The password when using SSL.;public void setSslPassword(String sslPassword) {_        this.sslPassword = sslPassword__    };the,password,when,using,ssl;public,void,set,ssl,password,string,ssl,password,this,ssl,password,ssl,password
CometdComponent -> public void setSecurityPolicy(SecurityPolicy securityPolicy);1434296657;To use a custom configured SecurityPolicy to control authorization;public void setSecurityPolicy(SecurityPolicy securityPolicy) {_        this.securityPolicy = securityPolicy__    };to,use,a,custom,configured,security,policy,to,control,authorization;public,void,set,security,policy,security,policy,security,policy,this,security,policy,security,policy
CometdComponent -> public void setSecurityPolicy(SecurityPolicy securityPolicy);1461244720;To use a custom configured SecurityPolicy to control authorization;public void setSecurityPolicy(SecurityPolicy securityPolicy) {_        this.securityPolicy = securityPolicy__    };to,use,a,custom,configured,security,policy,to,control,authorization;public,void,set,security,policy,security,policy,security,policy,this,security,policy,security,policy
CometdComponent -> public void setSecurityPolicy(SecurityPolicy securityPolicy);1461244720;To use a custom configured SecurityPolicy to control authorization;public void setSecurityPolicy(SecurityPolicy securityPolicy) {_        this.securityPolicy = securityPolicy__    };to,use,a,custom,configured,security,policy,to,control,authorization;public,void,set,security,policy,security,policy,security,policy,this,security,policy,security,policy
CometdComponent -> public void setSecurityPolicy(SecurityPolicy securityPolicy);1461851621;To use a custom configured SecurityPolicy to control authorization;public void setSecurityPolicy(SecurityPolicy securityPolicy) {_        this.securityPolicy = securityPolicy__    };to,use,a,custom,configured,security,policy,to,control,authorization;public,void,set,security,policy,security,policy,security,policy,this,security,policy,security,policy
CometdComponent -> public void setSecurityPolicy(SecurityPolicy securityPolicy);1461916938;To use a custom configured SecurityPolicy to control authorization;public void setSecurityPolicy(SecurityPolicy securityPolicy) {_        this.securityPolicy = securityPolicy__    };to,use,a,custom,configured,security,policy,to,control,authorization;public,void,set,security,policy,security,policy,security,policy,this,security,policy,security,policy
CometdComponent -> public void setSecurityPolicy(SecurityPolicy securityPolicy);1475933627;To use a custom configured SecurityPolicy to control authorization;public void setSecurityPolicy(SecurityPolicy securityPolicy) {_        this.securityPolicy = securityPolicy__    };to,use,a,custom,configured,security,policy,to,control,authorization;public,void,set,security,policy,security,policy,security,policy,this,security,policy,security,policy
CometdComponent -> public void setSecurityPolicy(SecurityPolicy securityPolicy);1482322625;To use a custom configured SecurityPolicy to control authorization;public void setSecurityPolicy(SecurityPolicy securityPolicy) {_        this.securityPolicy = securityPolicy__    };to,use,a,custom,configured,security,policy,to,control,authorization;public,void,set,security,policy,security,policy,security,policy,this,security,policy,security,policy
CometdComponent -> public void setSecurityPolicy(SecurityPolicy securityPolicy);1489596811;To use a custom configured SecurityPolicy to control authorization;public void setSecurityPolicy(SecurityPolicy securityPolicy) {_        this.securityPolicy = securityPolicy__    };to,use,a,custom,configured,security,policy,to,control,authorization;public,void,set,security,policy,security,policy,security,policy,this,security,policy,security,policy
CometdComponent -> public void setSecurityPolicy(SecurityPolicy securityPolicy);1491919259;To use a custom configured SecurityPolicy to control authorization;public void setSecurityPolicy(SecurityPolicy securityPolicy) {_        this.securityPolicy = securityPolicy__    };to,use,a,custom,configured,security,policy,to,control,authorization;public,void,set,security,policy,security,policy,security,policy,this,security,policy,security,policy
CometdComponent -> public void setSecurityPolicy(SecurityPolicy securityPolicy);1491919462;To use a custom configured SecurityPolicy to control authorization;public void setSecurityPolicy(SecurityPolicy securityPolicy) {_        this.securityPolicy = securityPolicy__    };to,use,a,custom,configured,security,policy,to,control,authorization;public,void,set,security,policy,security,policy,security,policy,this,security,policy,security,policy
CometdComponent -> public void setSecurityPolicy(SecurityPolicy securityPolicy);1491919462;To use a custom configured SecurityPolicy to control authorization;public void setSecurityPolicy(SecurityPolicy securityPolicy) {_        this.securityPolicy = securityPolicy__    };to,use,a,custom,configured,security,policy,to,control,authorization;public,void,set,security,policy,security,policy,security,policy,this,security,policy,security,policy
CometdComponent -> public void setSecurityPolicy(SecurityPolicy securityPolicy);1491919462;To use a custom configured SecurityPolicy to control authorization;public void setSecurityPolicy(SecurityPolicy securityPolicy) {_        this.securityPolicy = securityPolicy__    };to,use,a,custom,configured,security,policy,to,control,authorization;public,void,set,security,policy,security,policy,security,policy,this,security,policy,security,policy
CometdComponent -> public void setSecurityPolicy(SecurityPolicy securityPolicy);1523968798;To use a custom configured SecurityPolicy to control authorization;public void setSecurityPolicy(SecurityPolicy securityPolicy) {_        this.securityPolicy = securityPolicy__    };to,use,a,custom,configured,security,policy,to,control,authorization;public,void,set,security,policy,security,policy,security,policy,this,security,policy,security,policy
CometdComponent -> public void setSecurityPolicy(SecurityPolicy securityPolicy);1540108158;To use a custom configured SecurityPolicy to control authorization;public void setSecurityPolicy(SecurityPolicy securityPolicy) {_        this.securityPolicy = securityPolicy__    };to,use,a,custom,configured,security,policy,to,control,authorization;public,void,set,security,policy,security,policy,security,policy,this,security,policy,security,policy
CometdComponent -> public void setSecurityPolicy(SecurityPolicy securityPolicy);1540108163;To use a custom configured SecurityPolicy to control authorization;public void setSecurityPolicy(SecurityPolicy securityPolicy) {_        this.securityPolicy = securityPolicy__    };to,use,a,custom,configured,security,policy,to,control,authorization;public,void,set,security,policy,security,policy,security,policy,this,security,policy,security,policy
CometdComponent -> public void setSecurityPolicy(SecurityPolicy securityPolicy);1547241305;To use a custom configured SecurityPolicy to control authorization;public void setSecurityPolicy(SecurityPolicy securityPolicy) {_        this.securityPolicy = securityPolicy__    };to,use,a,custom,configured,security,policy,to,control,authorization;public,void,set,security,policy,security,policy,security,policy,this,security,policy,security,policy
CometdComponent -> public void setSecurityPolicy(SecurityPolicy securityPolicy);1547623952;To use a custom configured SecurityPolicy to control authorization;public void setSecurityPolicy(SecurityPolicy securityPolicy) {_        this.securityPolicy = securityPolicy__    };to,use,a,custom,configured,security,policy,to,control,authorization;public,void,set,security,policy,security,policy,security,policy,this,security,policy,security,policy
CometdComponent -> public void connect(CometdProducerConsumer prodcon) throws Exception;1228283290;Connects the URL specified on the endpoint to the specified processor.__@throws Exception;public void connect(CometdProducerConsumer prodcon) throws Exception {_        _        CometdEndpoint endpoint = (CometdEndpoint) prodcon.getEndpoint()__        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef == null) {_                Connector connector__                if ("cometds".equals(endpoint.getProtocol())) {_                    connector = getSslSocketConnector()__                } else {_                    connector = new SelectChannelConnector()__                }_                connector.setPort(endpoint.getPort())__                connector.setHost(endpoint.getUri().getHost())__                if ("localhost".equalsIgnoreCase(endpoint.getUri().getHost())) {_                    LOG.warn("You use localhost interface! It means that no external connections will be available." + _                            " Don't you want to use 0.0.0.0 instead (all network interfaces)?")__                }_                getServer().addConnector(connector)___                ContinuationCometdServlet servlet = createServletForConnector(connector, endpoint)__                connectorRef = new ConnectorRef(connector, servlet)__                connector.start()___                connectors.put(connectorKey, connectorRef)__            } else {_                connectorRef.increment()__            }_            AbstractBayeux bayeux = connectorRef.servlet.getBayeux()__            bayeux.setJSONCommented(endpoint.isJsonCommented())__            prodcon.setBayeux(bayeux)__        }_    };connects,the,url,specified,on,the,endpoint,to,the,specified,processor,throws,exception;public,void,connect,cometd,producer,consumer,prodcon,throws,exception,cometd,endpoint,endpoint,cometd,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,connector,connector,if,cometds,equals,endpoint,get,protocol,connector,get,ssl,socket,connector,else,connector,new,select,channel,connector,connector,set,port,endpoint,get,port,connector,set,host,endpoint,get,uri,get,host,if,localhost,equals,ignore,case,endpoint,get,uri,get,host,log,warn,you,use,localhost,interface,it,means,that,no,external,connections,will,be,available,don,t,you,want,to,use,0,0,0,0,instead,all,network,interfaces,get,server,add,connector,connector,continuation,cometd,servlet,servlet,create,servlet,for,connector,connector,endpoint,connector,ref,new,connector,ref,connector,servlet,connector,start,connectors,put,connector,key,connector,ref,else,connector,ref,increment,abstract,bayeux,bayeux,connector,ref,servlet,get,bayeux,bayeux,set,jsoncommented,endpoint,is,json,commented,prodcon,set,bayeux,bayeux
CometdComponent -> public void connect(CometdProducerConsumer prodcon) throws Exception;1228968608;Connects the URL specified on the endpoint to the specified processor.__@throws Exception;public void connect(CometdProducerConsumer prodcon) throws Exception {_        _        CometdEndpoint endpoint = (CometdEndpoint) prodcon.getEndpoint()__        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef == null) {_                Connector connector__                if ("cometds".equals(endpoint.getProtocol())) {_                    connector = getSslSocketConnector()__                } else {_                    connector = new SelectChannelConnector()__                }_                connector.setPort(endpoint.getPort())__                connector.setHost(endpoint.getUri().getHost())__                if ("localhost".equalsIgnoreCase(endpoint.getUri().getHost())) {_                    LOG.warn("You use localhost interface! It means that no external connections will be available."_                             + " Don't you want to use 0.0.0.0 instead (all network interfaces)?")__                }_                getServer().addConnector(connector)___                ContinuationCometdServlet servlet = createServletForConnector(connector, endpoint)__                connectorRef = new ConnectorRef(connector, servlet)__                connector.start()___                connectors.put(connectorKey, connectorRef)__            } else {_                connectorRef.increment()__            }_            AbstractBayeux bayeux = connectorRef.servlet.getBayeux()__            bayeux.setJSONCommented(endpoint.isJsonCommented())__            prodcon.setBayeux(bayeux)__        }_    };connects,the,url,specified,on,the,endpoint,to,the,specified,processor,throws,exception;public,void,connect,cometd,producer,consumer,prodcon,throws,exception,cometd,endpoint,endpoint,cometd,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,connector,connector,if,cometds,equals,endpoint,get,protocol,connector,get,ssl,socket,connector,else,connector,new,select,channel,connector,connector,set,port,endpoint,get,port,connector,set,host,endpoint,get,uri,get,host,if,localhost,equals,ignore,case,endpoint,get,uri,get,host,log,warn,you,use,localhost,interface,it,means,that,no,external,connections,will,be,available,don,t,you,want,to,use,0,0,0,0,instead,all,network,interfaces,get,server,add,connector,connector,continuation,cometd,servlet,servlet,create,servlet,for,connector,connector,endpoint,connector,ref,new,connector,ref,connector,servlet,connector,start,connectors,put,connector,key,connector,ref,else,connector,ref,increment,abstract,bayeux,bayeux,connector,ref,servlet,get,bayeux,bayeux,set,jsoncommented,endpoint,is,json,commented,prodcon,set,bayeux,bayeux
CometdComponent -> public void connect(CometdProducerConsumer prodcon) throws Exception;1235649253;Connects the URL specified on the endpoint to the specified processor.;public void connect(CometdProducerConsumer prodcon) throws Exception {_        _        CometdEndpoint endpoint = (CometdEndpoint) prodcon.getEndpoint()__        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef == null) {_                Connector connector__                if ("cometds".equals(endpoint.getProtocol())) {_                    connector = getSslSocketConnector()__                } else {_                    connector = new SelectChannelConnector()__                }_                connector.setPort(endpoint.getPort())__                connector.setHost(endpoint.getUri().getHost())__                if ("localhost".equalsIgnoreCase(endpoint.getUri().getHost())) {_                    LOG.warn("You use localhost interface! It means that no external connections will be available."_                             + " Don't you want to use 0.0.0.0 instead (all network interfaces)?")__                }_                getServer().addConnector(connector)___                ContinuationCometdServlet servlet = createServletForConnector(connector, endpoint)__                connectorRef = new ConnectorRef(connector, servlet)__                connector.start()___                connectors.put(connectorKey, connectorRef)__            } else {_                connectorRef.increment()__            }_            AbstractBayeux bayeux = connectorRef.servlet.getBayeux()__            bayeux.setJSONCommented(endpoint.isJsonCommented())__            prodcon.setBayeux(bayeux)__        }_    };connects,the,url,specified,on,the,endpoint,to,the,specified,processor;public,void,connect,cometd,producer,consumer,prodcon,throws,exception,cometd,endpoint,endpoint,cometd,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,connector,connector,if,cometds,equals,endpoint,get,protocol,connector,get,ssl,socket,connector,else,connector,new,select,channel,connector,connector,set,port,endpoint,get,port,connector,set,host,endpoint,get,uri,get,host,if,localhost,equals,ignore,case,endpoint,get,uri,get,host,log,warn,you,use,localhost,interface,it,means,that,no,external,connections,will,be,available,don,t,you,want,to,use,0,0,0,0,instead,all,network,interfaces,get,server,add,connector,connector,continuation,cometd,servlet,servlet,create,servlet,for,connector,connector,endpoint,connector,ref,new,connector,ref,connector,servlet,connector,start,connectors,put,connector,key,connector,ref,else,connector,ref,increment,abstract,bayeux,bayeux,connector,ref,servlet,get,bayeux,bayeux,set,jsoncommented,endpoint,is,json,commented,prodcon,set,bayeux,bayeux
CometdComponent -> public void connect(CometdProducerConsumer prodcon) throws Exception;1241520708;Connects the URL specified on the endpoint to the specified processor.;public void connect(CometdProducerConsumer prodcon) throws Exception {_        _        CometdEndpoint endpoint = (CometdEndpoint) prodcon.getEndpoint()__        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef == null) {_                Connector connector__                if ("cometds".equals(endpoint.getProtocol())) {_                    connector = getSslSocketConnector()__                } else {_                    connector = new SelectChannelConnector()__                }_                connector.setPort(endpoint.getPort())__                connector.setHost(endpoint.getUri().getHost())__                if ("localhost".equalsIgnoreCase(endpoint.getUri().getHost())) {_                    LOG.warn("You use localhost interface! It means that no external connections will be available."_                             + " Don't you want to use 0.0.0.0 instead (all network interfaces)?")__                }_                getServer().addConnector(connector)___                ContinuationCometdServlet servlet = createServletForConnector(connector, endpoint)__                connectorRef = new ConnectorRef(connector, servlet)__                connector.start()___                connectors.put(connectorKey, connectorRef)__            } else {_                connectorRef.increment()__            }_            AbstractBayeux bayeux = connectorRef.servlet.getBayeux()__            bayeux.setJSONCommented(endpoint.isJsonCommented())__            prodcon.setBayeux(bayeux)__        }_    };connects,the,url,specified,on,the,endpoint,to,the,specified,processor;public,void,connect,cometd,producer,consumer,prodcon,throws,exception,cometd,endpoint,endpoint,cometd,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,connector,connector,if,cometds,equals,endpoint,get,protocol,connector,get,ssl,socket,connector,else,connector,new,select,channel,connector,connector,set,port,endpoint,get,port,connector,set,host,endpoint,get,uri,get,host,if,localhost,equals,ignore,case,endpoint,get,uri,get,host,log,warn,you,use,localhost,interface,it,means,that,no,external,connections,will,be,available,don,t,you,want,to,use,0,0,0,0,instead,all,network,interfaces,get,server,add,connector,connector,continuation,cometd,servlet,servlet,create,servlet,for,connector,connector,endpoint,connector,ref,new,connector,ref,connector,servlet,connector,start,connectors,put,connector,key,connector,ref,else,connector,ref,increment,abstract,bayeux,bayeux,connector,ref,servlet,get,bayeux,bayeux,set,jsoncommented,endpoint,is,json,commented,prodcon,set,bayeux,bayeux
CometdComponent -> public void connect(CometdProducerConsumer prodcon) throws Exception;1257920126;Connects the URL specified on the endpoint to the specified processor.;public void connect(CometdProducerConsumer prodcon) throws Exception {_        _        CometdEndpoint endpoint = (CometdEndpoint) prodcon.getEndpoint()__        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef == null) {_                Connector connector__                if ("cometds".equals(endpoint.getProtocol())) {_                    connector = getSslSocketConnector()__                } else {_                    connector = new SelectChannelConnector()__                }_                connector.setPort(endpoint.getPort())__                connector.setHost(endpoint.getUri().getHost())__                if ("localhost".equalsIgnoreCase(endpoint.getUri().getHost())) {_                    LOG.warn("You use localhost interface! It means that no external connections will be available."_                             + " Don't you want to use 0.0.0.0 instead (all network interfaces)?")__                }_                getServer().addConnector(connector)___                ContinuationCometdServlet servlet = createServletForConnector(connector, endpoint)__                connectorRef = new ConnectorRef(connector, servlet)__                connector.start()___                connectors.put(connectorKey, connectorRef)__            } else {_                connectorRef.increment()__            }_            AbstractBayeux bayeux = connectorRef.servlet.getBayeux()__            bayeux.setJSONCommented(endpoint.isJsonCommented())__            prodcon.setBayeux(bayeux)__        }_    };connects,the,url,specified,on,the,endpoint,to,the,specified,processor;public,void,connect,cometd,producer,consumer,prodcon,throws,exception,cometd,endpoint,endpoint,cometd,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,connector,connector,if,cometds,equals,endpoint,get,protocol,connector,get,ssl,socket,connector,else,connector,new,select,channel,connector,connector,set,port,endpoint,get,port,connector,set,host,endpoint,get,uri,get,host,if,localhost,equals,ignore,case,endpoint,get,uri,get,host,log,warn,you,use,localhost,interface,it,means,that,no,external,connections,will,be,available,don,t,you,want,to,use,0,0,0,0,instead,all,network,interfaces,get,server,add,connector,connector,continuation,cometd,servlet,servlet,create,servlet,for,connector,connector,endpoint,connector,ref,new,connector,ref,connector,servlet,connector,start,connectors,put,connector,key,connector,ref,else,connector,ref,increment,abstract,bayeux,bayeux,connector,ref,servlet,get,bayeux,bayeux,set,jsoncommented,endpoint,is,json,commented,prodcon,set,bayeux,bayeux
CometdComponent -> public void connect(CometdProducerConsumer prodcon) throws Exception;1267545978;Connects the URL specified on the endpoint to the specified processor.;public void connect(CometdProducerConsumer prodcon) throws Exception {_        _        CometdEndpoint endpoint = (CometdEndpoint) prodcon.getEndpoint()__        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef == null) {_                Connector connector__                if ("cometds".equals(endpoint.getProtocol())) {_                    connector = getSslSocketConnector()__                } else {_                    connector = new SelectChannelConnector()__                }_                connector.setPort(endpoint.getPort())__                connector.setHost(endpoint.getUri().getHost())__                if ("localhost".equalsIgnoreCase(endpoint.getUri().getHost())) {_                    LOG.warn("You use localhost interface! It means that no external connections will be available."_                             + " Don't you want to use 0.0.0.0 instead (all network interfaces)?")__                }_                getServer().addConnector(connector)___                ContinuationCometdServlet servlet = createServletForConnector(connector, endpoint)__                connectorRef = new ConnectorRef(connector, servlet)__                connector.start()___                connectors.put(connectorKey, connectorRef)__            } else {_                connectorRef.increment()__            }_            AbstractBayeux bayeux = connectorRef.servlet.getBayeux()__            bayeux.setJSONCommented(endpoint.isJsonCommented())__            prodcon.setBayeux(bayeux)__        }_    };connects,the,url,specified,on,the,endpoint,to,the,specified,processor;public,void,connect,cometd,producer,consumer,prodcon,throws,exception,cometd,endpoint,endpoint,cometd,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,connector,connector,if,cometds,equals,endpoint,get,protocol,connector,get,ssl,socket,connector,else,connector,new,select,channel,connector,connector,set,port,endpoint,get,port,connector,set,host,endpoint,get,uri,get,host,if,localhost,equals,ignore,case,endpoint,get,uri,get,host,log,warn,you,use,localhost,interface,it,means,that,no,external,connections,will,be,available,don,t,you,want,to,use,0,0,0,0,instead,all,network,interfaces,get,server,add,connector,connector,continuation,cometd,servlet,servlet,create,servlet,for,connector,connector,endpoint,connector,ref,new,connector,ref,connector,servlet,connector,start,connectors,put,connector,key,connector,ref,else,connector,ref,increment,abstract,bayeux,bayeux,connector,ref,servlet,get,bayeux,bayeux,set,jsoncommented,endpoint,is,json,commented,prodcon,set,bayeux,bayeux
CometdComponent -> public void connect(CometdProducerConsumer prodcon) throws Exception;1268187620;Connects the URL specified on the endpoint to the specified processor.;public void connect(CometdProducerConsumer prodcon) throws Exception {_        _        CometdEndpoint endpoint = (CometdEndpoint) prodcon.getEndpoint()__        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef == null) {_                Connector connector__                if ("cometds".equals(endpoint.getProtocol())) {_                    connector = getSslSocketConnector()__                } else {_                    connector = new SelectChannelConnector()__                }_                connector.setPort(endpoint.getPort())__                connector.setHost(endpoint.getUri().getHost())__                if ("localhost".equalsIgnoreCase(endpoint.getUri().getHost())) {_                    LOG.warn("You use localhost interface! It means that no external connections will be available."_                             + " Don't you want to use 0.0.0.0 instead (all network interfaces)?")__                }_                getServer().addConnector(connector)___                ContinuationCometdServlet servlet = createServletForConnector(connector, endpoint)__                connectorRef = new ConnectorRef(connector, servlet)__                getServer().start()___                connectors.put(connectorKey, connectorRef)__            } else {_                connectorRef.increment()__            }_            AbstractBayeux bayeux = connectorRef.servlet.getBayeux()__            bayeux.setJSONCommented(endpoint.isJsonCommented())__            prodcon.setBayeux(bayeux)__        }_    };connects,the,url,specified,on,the,endpoint,to,the,specified,processor;public,void,connect,cometd,producer,consumer,prodcon,throws,exception,cometd,endpoint,endpoint,cometd,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,connector,connector,if,cometds,equals,endpoint,get,protocol,connector,get,ssl,socket,connector,else,connector,new,select,channel,connector,connector,set,port,endpoint,get,port,connector,set,host,endpoint,get,uri,get,host,if,localhost,equals,ignore,case,endpoint,get,uri,get,host,log,warn,you,use,localhost,interface,it,means,that,no,external,connections,will,be,available,don,t,you,want,to,use,0,0,0,0,instead,all,network,interfaces,get,server,add,connector,connector,continuation,cometd,servlet,servlet,create,servlet,for,connector,connector,endpoint,connector,ref,new,connector,ref,connector,servlet,get,server,start,connectors,put,connector,key,connector,ref,else,connector,ref,increment,abstract,bayeux,bayeux,connector,ref,servlet,get,bayeux,bayeux,set,jsoncommented,endpoint,is,json,commented,prodcon,set,bayeux,bayeux
CometdComponent -> public void connect(CometdProducerConsumer prodcon) throws Exception;1296546062;Connects the URL specified on the endpoint to the specified processor.;public void connect(CometdProducerConsumer prodcon) throws Exception {_        _        CometdEndpoint endpoint = (CometdEndpoint) prodcon.getEndpoint()__        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef == null) {_                Connector connector__                if ("cometds".equals(endpoint.getProtocol())) {_                    connector = getSslSocketConnector()__                } else {_                    connector = new SelectChannelConnector()__                }_                connector.setPort(endpoint.getPort())__                connector.setHost(endpoint.getUri().getHost())__                if ("localhost".equalsIgnoreCase(endpoint.getUri().getHost())) {_                    LOG.warn("You use localhost interface! It means that no external connections will be available."_                             + " Don't you want to use 0.0.0.0 instead (all network interfaces)?")__                }_                getServer().addConnector(connector)___                ContinuationCometdServlet servlet = createServletForConnector(connector, endpoint)__                connectorRef = new ConnectorRef(connector, servlet)__                getServer().start()___                connectors.put(connectorKey, connectorRef)__            } else {_                connectorRef.increment()__            }_            AbstractBayeux bayeux = connectorRef.servlet.getBayeux()__            bayeux.setJSONCommented(endpoint.isJsonCommented())__            prodcon.setBayeux(bayeux)__        }_    };connects,the,url,specified,on,the,endpoint,to,the,specified,processor;public,void,connect,cometd,producer,consumer,prodcon,throws,exception,cometd,endpoint,endpoint,cometd,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,connector,connector,if,cometds,equals,endpoint,get,protocol,connector,get,ssl,socket,connector,else,connector,new,select,channel,connector,connector,set,port,endpoint,get,port,connector,set,host,endpoint,get,uri,get,host,if,localhost,equals,ignore,case,endpoint,get,uri,get,host,log,warn,you,use,localhost,interface,it,means,that,no,external,connections,will,be,available,don,t,you,want,to,use,0,0,0,0,instead,all,network,interfaces,get,server,add,connector,connector,continuation,cometd,servlet,servlet,create,servlet,for,connector,connector,endpoint,connector,ref,new,connector,ref,connector,servlet,get,server,start,connectors,put,connector,key,connector,ref,else,connector,ref,increment,abstract,bayeux,bayeux,connector,ref,servlet,get,bayeux,bayeux,set,jsoncommented,endpoint,is,json,commented,prodcon,set,bayeux,bayeux
CometdComponent -> public void connect(CometdProducerConsumer prodcon) throws Exception;1296567562;Connects the URL specified on the endpoint to the specified processor.;public void connect(CometdProducerConsumer prodcon) throws Exception {_        _        CometdEndpoint endpoint = (CometdEndpoint) prodcon.getEndpoint()__        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef == null) {_                Connector connector__                if ("cometds".equals(endpoint.getProtocol())) {_                    connector = getSslSocketConnector()__                } else {_                    connector = new SelectChannelConnector()__                }_                connector.setPort(endpoint.getPort())__                connector.setHost(endpoint.getUri().getHost())__                if ("localhost".equalsIgnoreCase(endpoint.getUri().getHost())) {_                    LOG.warn("You use localhost interface! It means that no external connections will be available."_                             + " Don't you want to use 0.0.0.0 instead (all network interfaces)?")__                }_                getServer().addConnector(connector)___                ContinuationCometdServlet servlet = createServletForConnector(connector, endpoint)__                connectorRef = new ConnectorRef(connector, servlet)__                getServer().start()___                connectors.put(connectorKey, connectorRef)__            } else {_                connectorRef.increment()__            }_            AbstractBayeux bayeux = connectorRef.servlet.getBayeux()__            bayeux.setJSONCommented(endpoint.isJsonCommented())__            prodcon.setBayeux(bayeux)__        }_    };connects,the,url,specified,on,the,endpoint,to,the,specified,processor;public,void,connect,cometd,producer,consumer,prodcon,throws,exception,cometd,endpoint,endpoint,cometd,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,connector,connector,if,cometds,equals,endpoint,get,protocol,connector,get,ssl,socket,connector,else,connector,new,select,channel,connector,connector,set,port,endpoint,get,port,connector,set,host,endpoint,get,uri,get,host,if,localhost,equals,ignore,case,endpoint,get,uri,get,host,log,warn,you,use,localhost,interface,it,means,that,no,external,connections,will,be,available,don,t,you,want,to,use,0,0,0,0,instead,all,network,interfaces,get,server,add,connector,connector,continuation,cometd,servlet,servlet,create,servlet,for,connector,connector,endpoint,connector,ref,new,connector,ref,connector,servlet,get,server,start,connectors,put,connector,key,connector,ref,else,connector,ref,increment,abstract,bayeux,bayeux,connector,ref,servlet,get,bayeux,bayeux,set,jsoncommented,endpoint,is,json,commented,prodcon,set,bayeux,bayeux
CometdComponent -> public void connect(CometdProducerConsumer prodcon) throws Exception;1297975937;Connects the URL specified on the endpoint to the specified processor.;public void connect(CometdProducerConsumer prodcon) throws Exception {_        _        CometdEndpoint endpoint = (CometdEndpoint) prodcon.getEndpoint()__        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef == null) {_                Connector connector__                if ("cometds".equals(endpoint.getProtocol())) {_                    connector = getSslSocketConnector()__                } else {_                    connector = new SelectChannelConnector()__                }_                connector.setPort(endpoint.getPort())__                connector.setHost(endpoint.getUri().getHost())__                if ("localhost".equalsIgnoreCase(endpoint.getUri().getHost())) {_                    LOG.warn("You use localhost interface! It means that no external connections will be available."_                             + " Don't you want to use 0.0.0.0 instead (all network interfaces)?")__                }_                getServer().addConnector(connector)___                ContinuationCometdServlet servlet = createServletForConnector(connector, endpoint)__                connectorRef = new ConnectorRef(connector, servlet)__                getServer().start()___                connectors.put(connectorKey, connectorRef)__            } else {_                connectorRef.increment()__            }_            AbstractBayeux bayeux = connectorRef.servlet.getBayeux()__            bayeux.setJSONCommented(endpoint.isJsonCommented())__            prodcon.setBayeux(bayeux)__        }_    };connects,the,url,specified,on,the,endpoint,to,the,specified,processor;public,void,connect,cometd,producer,consumer,prodcon,throws,exception,cometd,endpoint,endpoint,cometd,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,connector,connector,if,cometds,equals,endpoint,get,protocol,connector,get,ssl,socket,connector,else,connector,new,select,channel,connector,connector,set,port,endpoint,get,port,connector,set,host,endpoint,get,uri,get,host,if,localhost,equals,ignore,case,endpoint,get,uri,get,host,log,warn,you,use,localhost,interface,it,means,that,no,external,connections,will,be,available,don,t,you,want,to,use,0,0,0,0,instead,all,network,interfaces,get,server,add,connector,connector,continuation,cometd,servlet,servlet,create,servlet,for,connector,connector,endpoint,connector,ref,new,connector,ref,connector,servlet,get,server,start,connectors,put,connector,key,connector,ref,else,connector,ref,increment,abstract,bayeux,bayeux,connector,ref,servlet,get,bayeux,bayeux,set,jsoncommented,endpoint,is,json,commented,prodcon,set,bayeux,bayeux
CometdComponent -> public void connect(CometdProducerConsumer prodcon) throws Exception;1301740297;Connects the URL specified on the endpoint to the specified processor.;public void connect(CometdProducerConsumer prodcon) throws Exception {_        _        CometdEndpoint endpoint = (CometdEndpoint) prodcon.getEndpoint()__        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef == null) {_                Connector connector__                if ("cometds".equals(endpoint.getProtocol())) {_                    connector = getSslSocketConnector()__                } else {_                    connector = new SelectChannelConnector()__                }_                connector.setPort(endpoint.getPort())__                connector.setHost(endpoint.getUri().getHost())__                if ("localhost".equalsIgnoreCase(endpoint.getUri().getHost())) {_                    LOG.warn("You use localhost interface! It means that no external connections will be available."_                            + " Don't you want to use 0.0.0.0 instead (all network interfaces)?")__                }_                getServer().addConnector(connector)___                ContinuationCometdServlet servlet = createServletForConnector(connector, endpoint)__                connectorRef = new ConnectorRef(connector, servlet)__                getServer().start()___                connectors.put(connectorKey, connectorRef)__            } else {_                connectorRef.increment()__            }__            AbstractBayeux bayeux = connectorRef.servlet.getBayeux()__            bayeux.setJSONCommented(endpoint.isJsonCommented())___            if (securityPolicy != null) {_                bayeux.setSecurityPolicy(securityPolicy)__            }_            if (extensions != null) {_                for (Extension extension : extensions) {_                    bayeux.addExtension(extension)__                }_            }_            prodcon.setBayeux(bayeux)__        }_    };connects,the,url,specified,on,the,endpoint,to,the,specified,processor;public,void,connect,cometd,producer,consumer,prodcon,throws,exception,cometd,endpoint,endpoint,cometd,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,connector,connector,if,cometds,equals,endpoint,get,protocol,connector,get,ssl,socket,connector,else,connector,new,select,channel,connector,connector,set,port,endpoint,get,port,connector,set,host,endpoint,get,uri,get,host,if,localhost,equals,ignore,case,endpoint,get,uri,get,host,log,warn,you,use,localhost,interface,it,means,that,no,external,connections,will,be,available,don,t,you,want,to,use,0,0,0,0,instead,all,network,interfaces,get,server,add,connector,connector,continuation,cometd,servlet,servlet,create,servlet,for,connector,connector,endpoint,connector,ref,new,connector,ref,connector,servlet,get,server,start,connectors,put,connector,key,connector,ref,else,connector,ref,increment,abstract,bayeux,bayeux,connector,ref,servlet,get,bayeux,bayeux,set,jsoncommented,endpoint,is,json,commented,if,security,policy,null,bayeux,set,security,policy,security,policy,if,extensions,null,for,extension,extension,extensions,bayeux,add,extension,extension,prodcon,set,bayeux,bayeux
CometdComponent -> public void connect(CometdProducerConsumer prodcon) throws Exception;1303298074;Connects the URL specified on the endpoint to the specified processor.;public void connect(CometdProducerConsumer prodcon) throws Exception {_        _        CometdEndpoint endpoint = (CometdEndpoint) prodcon.getEndpoint()__        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef == null) {_                Connector connector__                if ("cometds".equals(endpoint.getProtocol())) {_                    connector = getSslSocketConnector()__                } else {_                    connector = new SelectChannelConnector()__                }_                connector.setPort(endpoint.getPort())__                connector.setHost(endpoint.getUri().getHost())__                if ("localhost".equalsIgnoreCase(endpoint.getUri().getHost())) {_                    LOG.warn("You use localhost interface! It means that no external connections will be available."_                            + " Don't you want to use 0.0.0.0 instead (all network interfaces)?")__                }_                getServer().addConnector(connector)___                CometdServlet servlet = createServletForConnector(connector, endpoint)__                connectorRef = new ConnectorRef(connector, servlet)__                getServer().start()___                connectors.put(connectorKey, connectorRef)__            } else {_                connectorRef.increment()__            }__            BayeuxServerImpl bayeux = connectorRef.servlet.getBayeux()___            if (securityPolicy != null) {_                bayeux.setSecurityPolicy(securityPolicy)__            }_            if (extensions != null) {_                for (BayeuxServer.Extension extension : extensions) {_                    bayeux.addExtension(extension)__                }_            }_            prodcon.setBayeux(bayeux)__        }_    };connects,the,url,specified,on,the,endpoint,to,the,specified,processor;public,void,connect,cometd,producer,consumer,prodcon,throws,exception,cometd,endpoint,endpoint,cometd,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,connector,connector,if,cometds,equals,endpoint,get,protocol,connector,get,ssl,socket,connector,else,connector,new,select,channel,connector,connector,set,port,endpoint,get,port,connector,set,host,endpoint,get,uri,get,host,if,localhost,equals,ignore,case,endpoint,get,uri,get,host,log,warn,you,use,localhost,interface,it,means,that,no,external,connections,will,be,available,don,t,you,want,to,use,0,0,0,0,instead,all,network,interfaces,get,server,add,connector,connector,cometd,servlet,servlet,create,servlet,for,connector,connector,endpoint,connector,ref,new,connector,ref,connector,servlet,get,server,start,connectors,put,connector,key,connector,ref,else,connector,ref,increment,bayeux,server,impl,bayeux,connector,ref,servlet,get,bayeux,if,security,policy,null,bayeux,set,security,policy,security,policy,if,extensions,null,for,bayeux,server,extension,extension,extensions,bayeux,add,extension,extension,prodcon,set,bayeux,bayeux
CometdComponent -> public void connect(CometdProducerConsumer prodcon) throws Exception;1303299129;Connects the URL specified on the endpoint to the specified processor.;public void connect(CometdProducerConsumer prodcon) throws Exception {_        _        CometdEndpoint endpoint = (CometdEndpoint) prodcon.getEndpoint()__        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef == null) {_                Connector connector__                if ("cometds".equals(endpoint.getProtocol())) {_                    connector = getSslSocketConnector()__                } else {_                    connector = new SelectChannelConnector()__                }_                connector.setPort(endpoint.getPort())__                connector.setHost(endpoint.getUri().getHost())__                if ("localhost".equalsIgnoreCase(endpoint.getUri().getHost())) {_                    LOG.warn("You use localhost interface! It means that no external connections will be available."_                            + " Don't you want to use 0.0.0.0 instead (all network interfaces)?")__                }_                getServer().addConnector(connector)___                CometdServlet servlet = createServletForConnector(connector, endpoint)__                connectorRef = new ConnectorRef(connector, servlet)__                getServer().start()___                connectors.put(connectorKey, connectorRef)__            } else {_                connectorRef.increment()__            }__            BayeuxServerImpl bayeux = connectorRef.servlet.getBayeux()___            if (securityPolicy != null) {_                bayeux.setSecurityPolicy(securityPolicy)__            }_            if (extensions != null) {_                for (BayeuxServer.Extension extension : extensions) {_                    bayeux.addExtension(extension)__                }_            }_            prodcon.setBayeux(bayeux)__        }_    };connects,the,url,specified,on,the,endpoint,to,the,specified,processor;public,void,connect,cometd,producer,consumer,prodcon,throws,exception,cometd,endpoint,endpoint,cometd,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,connector,connector,if,cometds,equals,endpoint,get,protocol,connector,get,ssl,socket,connector,else,connector,new,select,channel,connector,connector,set,port,endpoint,get,port,connector,set,host,endpoint,get,uri,get,host,if,localhost,equals,ignore,case,endpoint,get,uri,get,host,log,warn,you,use,localhost,interface,it,means,that,no,external,connections,will,be,available,don,t,you,want,to,use,0,0,0,0,instead,all,network,interfaces,get,server,add,connector,connector,cometd,servlet,servlet,create,servlet,for,connector,connector,endpoint,connector,ref,new,connector,ref,connector,servlet,get,server,start,connectors,put,connector,key,connector,ref,else,connector,ref,increment,bayeux,server,impl,bayeux,connector,ref,servlet,get,bayeux,if,security,policy,null,bayeux,set,security,policy,security,policy,if,extensions,null,for,bayeux,server,extension,extension,extensions,bayeux,add,extension,extension,prodcon,set,bayeux,bayeux
CometdComponent -> public void connect(CometdProducerConsumer prodcon) throws Exception;1304094062;Connects the URL specified on the endpoint to the specified processor.;public void connect(CometdProducerConsumer prodcon) throws Exception {_        _        CometdEndpoint endpoint = (CometdEndpoint) prodcon.getEndpoint()__        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef == null) {_                Connector connector__                if ("cometds".equals(endpoint.getProtocol())) {_                    connector = getSslSocketConnector()__                } else {_                    connector = new SelectChannelConnector()__                }_                connector.setPort(endpoint.getPort())__                connector.setHost(endpoint.getUri().getHost())__                if ("localhost".equalsIgnoreCase(endpoint.getUri().getHost())) {_                    LOG.warn("You use localhost interface! It means that no external connections will be available."_                            + " Don't you want to use 0.0.0.0 instead (all network interfaces)?")__                }_                getServer().addConnector(connector)___                CometdServlet servlet = createServletForConnector(connector, endpoint)__                connectorRef = new ConnectorRef(connector, servlet)__                getServer().start()___                connectors.put(connectorKey, connectorRef)__            } else {_                connectorRef.increment()__            }__            BayeuxServerImpl bayeux = connectorRef.servlet.getBayeux()___            if (securityPolicy != null) {_                bayeux.setSecurityPolicy(securityPolicy)__            }_            if (extensions != null) {_                for (BayeuxServer.Extension extension : extensions) {_                    bayeux.addExtension(extension)__                }_            }_            prodcon.setBayeux(bayeux)__        }_    };connects,the,url,specified,on,the,endpoint,to,the,specified,processor;public,void,connect,cometd,producer,consumer,prodcon,throws,exception,cometd,endpoint,endpoint,cometd,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,connector,connector,if,cometds,equals,endpoint,get,protocol,connector,get,ssl,socket,connector,else,connector,new,select,channel,connector,connector,set,port,endpoint,get,port,connector,set,host,endpoint,get,uri,get,host,if,localhost,equals,ignore,case,endpoint,get,uri,get,host,log,warn,you,use,localhost,interface,it,means,that,no,external,connections,will,be,available,don,t,you,want,to,use,0,0,0,0,instead,all,network,interfaces,get,server,add,connector,connector,cometd,servlet,servlet,create,servlet,for,connector,connector,endpoint,connector,ref,new,connector,ref,connector,servlet,get,server,start,connectors,put,connector,key,connector,ref,else,connector,ref,increment,bayeux,server,impl,bayeux,connector,ref,servlet,get,bayeux,if,security,policy,null,bayeux,set,security,policy,security,policy,if,extensions,null,for,bayeux,server,extension,extension,extensions,bayeux,add,extension,extension,prodcon,set,bayeux,bayeux
CometdComponent -> public void connect(CometdProducerConsumer prodcon) throws Exception;1317484305;Connects the URL specified on the endpoint to the specified processor.;public void connect(CometdProducerConsumer prodcon) throws Exception {_        _        CometdEndpoint endpoint = (CometdEndpoint) prodcon.getEndpoint()__        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef == null) {_                Connector connector__                if ("cometds".equals(endpoint.getProtocol())) {_                    connector = getSslSocketConnector()__                } else {_                    connector = new SelectChannelConnector()__                }_                connector.setPort(endpoint.getPort())__                connector.setHost(endpoint.getUri().getHost())__                if ("localhost".equalsIgnoreCase(endpoint.getUri().getHost())) {_                    LOG.warn("You use localhost interface! It means that no external connections will be available."_                            + " Don't you want to use 0.0.0.0 instead (all network interfaces)?")__                }_                getServer().addConnector(connector)___                CometdServlet servlet = createServletForConnector(connector, endpoint)__                connectorRef = new ConnectorRef(connector, servlet)__                getServer().start()___                connectors.put(connectorKey, connectorRef)__            } else {_                connectorRef.increment()__            }__            BayeuxServerImpl bayeux = connectorRef.servlet.getBayeux()___            if (securityPolicy != null) {_                bayeux.setSecurityPolicy(securityPolicy)__            }_            if (extensions != null) {_                for (BayeuxServer.Extension extension : extensions) {_                    bayeux.addExtension(extension)__                }_            }_            prodcon.setBayeux(bayeux)__        }_    };connects,the,url,specified,on,the,endpoint,to,the,specified,processor;public,void,connect,cometd,producer,consumer,prodcon,throws,exception,cometd,endpoint,endpoint,cometd,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,connector,connector,if,cometds,equals,endpoint,get,protocol,connector,get,ssl,socket,connector,else,connector,new,select,channel,connector,connector,set,port,endpoint,get,port,connector,set,host,endpoint,get,uri,get,host,if,localhost,equals,ignore,case,endpoint,get,uri,get,host,log,warn,you,use,localhost,interface,it,means,that,no,external,connections,will,be,available,don,t,you,want,to,use,0,0,0,0,instead,all,network,interfaces,get,server,add,connector,connector,cometd,servlet,servlet,create,servlet,for,connector,connector,endpoint,connector,ref,new,connector,ref,connector,servlet,get,server,start,connectors,put,connector,key,connector,ref,else,connector,ref,increment,bayeux,server,impl,bayeux,connector,ref,servlet,get,bayeux,if,security,policy,null,bayeux,set,security,policy,security,policy,if,extensions,null,for,bayeux,server,extension,extension,extensions,bayeux,add,extension,extension,prodcon,set,bayeux,bayeux
CometdComponent -> public void connect(CometdProducerConsumer prodcon) throws Exception;1321370944;Connects the URL specified on the endpoint to the specified processor.;public void connect(CometdProducerConsumer prodcon) throws Exception {_        _        CometdEndpoint endpoint = (CometdEndpoint) prodcon.getEndpoint()__        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef == null) {_                Connector connector__                if ("cometds".equals(endpoint.getProtocol())) {_                    connector = getSslSocketConnector()__                } else {_                    connector = new SelectChannelConnector()__                }_                connector.setPort(endpoint.getPort())__                connector.setHost(endpoint.getUri().getHost())__                if ("localhost".equalsIgnoreCase(endpoint.getUri().getHost())) {_                    LOG.warn("You use localhost interface! It means that no external connections will be available."_                            + " Don't you want to use 0.0.0.0 instead (all network interfaces)?")__                }_                getServer().addConnector(connector)___                CometdServlet servlet = createServletForConnector(connector, endpoint)__                connectorRef = new ConnectorRef(connector, servlet)__                getServer().start()___                connectors.put(connectorKey, connectorRef)__            } else {_                connectorRef.increment()__            }__            BayeuxServerImpl bayeux = connectorRef.servlet.getBayeux()___            if (securityPolicy != null) {_                bayeux.setSecurityPolicy(securityPolicy)__            }_            if (extensions != null) {_                for (BayeuxServer.Extension extension : extensions) {_                    bayeux.addExtension(extension)__                }_            }_            prodcon.setBayeux(bayeux)__        }_    };connects,the,url,specified,on,the,endpoint,to,the,specified,processor;public,void,connect,cometd,producer,consumer,prodcon,throws,exception,cometd,endpoint,endpoint,cometd,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,connector,connector,if,cometds,equals,endpoint,get,protocol,connector,get,ssl,socket,connector,else,connector,new,select,channel,connector,connector,set,port,endpoint,get,port,connector,set,host,endpoint,get,uri,get,host,if,localhost,equals,ignore,case,endpoint,get,uri,get,host,log,warn,you,use,localhost,interface,it,means,that,no,external,connections,will,be,available,don,t,you,want,to,use,0,0,0,0,instead,all,network,interfaces,get,server,add,connector,connector,cometd,servlet,servlet,create,servlet,for,connector,connector,endpoint,connector,ref,new,connector,ref,connector,servlet,get,server,start,connectors,put,connector,key,connector,ref,else,connector,ref,increment,bayeux,server,impl,bayeux,connector,ref,servlet,get,bayeux,if,security,policy,null,bayeux,set,security,policy,security,policy,if,extensions,null,for,bayeux,server,extension,extension,extensions,bayeux,add,extension,extension,prodcon,set,bayeux,bayeux
CometdComponent -> public void connect(CometdProducerConsumer prodcon) throws Exception;1321371528;Connects the URL specified on the endpoint to the specified processor.;public void connect(CometdProducerConsumer prodcon) throws Exception {_        _        CometdEndpoint endpoint = (CometdEndpoint) prodcon.getEndpoint()__        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef == null) {_                Connector connector__                if ("cometds".equals(endpoint.getProtocol())) {_                    connector = getSslSocketConnector()__                } else {_                    connector = new SelectChannelConnector()__                }_                connector.setPort(endpoint.getPort())__                connector.setHost(endpoint.getUri().getHost())__                if ("localhost".equalsIgnoreCase(endpoint.getUri().getHost())) {_                    LOG.warn("You use localhost interface! It means that no external connections will be available."_                            + " Don't you want to use 0.0.0.0 instead (all network interfaces)?")__                }_                getServer().addConnector(connector)___                CometdServlet servlet = createServletForConnector(connector, endpoint)__                connectorRef = new ConnectorRef(connector, servlet)__                getServer().start()___                connectors.put(connectorKey, connectorRef)__            } else {_                connectorRef.increment()__            }__            BayeuxServerImpl bayeux = connectorRef.servlet.getBayeux()___            if (securityPolicy != null) {_                bayeux.setSecurityPolicy(securityPolicy)__            }_            if (extensions != null) {_                for (BayeuxServer.Extension extension : extensions) {_                    bayeux.addExtension(extension)__                }_            }_            prodcon.setBayeux(bayeux)__        }_    };connects,the,url,specified,on,the,endpoint,to,the,specified,processor;public,void,connect,cometd,producer,consumer,prodcon,throws,exception,cometd,endpoint,endpoint,cometd,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,connector,connector,if,cometds,equals,endpoint,get,protocol,connector,get,ssl,socket,connector,else,connector,new,select,channel,connector,connector,set,port,endpoint,get,port,connector,set,host,endpoint,get,uri,get,host,if,localhost,equals,ignore,case,endpoint,get,uri,get,host,log,warn,you,use,localhost,interface,it,means,that,no,external,connections,will,be,available,don,t,you,want,to,use,0,0,0,0,instead,all,network,interfaces,get,server,add,connector,connector,cometd,servlet,servlet,create,servlet,for,connector,connector,endpoint,connector,ref,new,connector,ref,connector,servlet,get,server,start,connectors,put,connector,key,connector,ref,else,connector,ref,increment,bayeux,server,impl,bayeux,connector,ref,servlet,get,bayeux,if,security,policy,null,bayeux,set,security,policy,security,policy,if,extensions,null,for,bayeux,server,extension,extension,extensions,bayeux,add,extension,extension,prodcon,set,bayeux,bayeux
CometdComponent -> public void connect(CometdProducerConsumer prodcon) throws Exception;1321372404;Connects the URL specified on the endpoint to the specified processor.;public void connect(CometdProducerConsumer prodcon) throws Exception {_        _        CometdEndpoint endpoint = (CometdEndpoint) prodcon.getEndpoint()__        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef == null) {_                Connector connector__                if ("cometds".equals(endpoint.getProtocol())) {_                    connector = getSslSocketConnector()__                } else {_                    connector = new SelectChannelConnector()__                }_                connector.setPort(endpoint.getPort())__                connector.setHost(endpoint.getUri().getHost())__                if ("localhost".equalsIgnoreCase(endpoint.getUri().getHost())) {_                    LOG.warn("You use localhost interface! It means that no external connections will be available."_                            + " Don't you want to use 0.0.0.0 instead (all network interfaces)?")__                }_                getServer().addConnector(connector)___                CometdServlet servlet = createServletForConnector(connector, endpoint)__                connectorRef = new ConnectorRef(connector, servlet)__                getServer().start()___                connectors.put(connectorKey, connectorRef)__            } else {_                connectorRef.increment()__            }__            BayeuxServerImpl bayeux = connectorRef.servlet.getBayeux()___            if (securityPolicy != null) {_                bayeux.setSecurityPolicy(securityPolicy)__            }_            if (extensions != null) {_                for (BayeuxServer.Extension extension : extensions) {_                    bayeux.addExtension(extension)__                }_            }_            prodcon.setBayeux(bayeux)__        }_    };connects,the,url,specified,on,the,endpoint,to,the,specified,processor;public,void,connect,cometd,producer,consumer,prodcon,throws,exception,cometd,endpoint,endpoint,cometd,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,connector,connector,if,cometds,equals,endpoint,get,protocol,connector,get,ssl,socket,connector,else,connector,new,select,channel,connector,connector,set,port,endpoint,get,port,connector,set,host,endpoint,get,uri,get,host,if,localhost,equals,ignore,case,endpoint,get,uri,get,host,log,warn,you,use,localhost,interface,it,means,that,no,external,connections,will,be,available,don,t,you,want,to,use,0,0,0,0,instead,all,network,interfaces,get,server,add,connector,connector,cometd,servlet,servlet,create,servlet,for,connector,connector,endpoint,connector,ref,new,connector,ref,connector,servlet,get,server,start,connectors,put,connector,key,connector,ref,else,connector,ref,increment,bayeux,server,impl,bayeux,connector,ref,servlet,get,bayeux,if,security,policy,null,bayeux,set,security,policy,security,policy,if,extensions,null,for,bayeux,server,extension,extension,extensions,bayeux,add,extension,extension,prodcon,set,bayeux,bayeux
CometdComponent -> public void connect(CometdProducerConsumer prodcon) throws Exception;1321467797;Connects the URL specified on the endpoint to the specified processor.;public void connect(CometdProducerConsumer prodcon) throws Exception {_        _        CometdEndpoint endpoint = (CometdEndpoint) prodcon.getEndpoint()__        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef == null) {_                Connector connector__                if ("cometds".equals(endpoint.getProtocol())) {_                    connector = getSslSocketConnector()__                } else {_                    connector = new SelectChannelConnector()__                }_                connector.setPort(endpoint.getPort())__                connector.setHost(endpoint.getUri().getHost())__                if ("localhost".equalsIgnoreCase(endpoint.getUri().getHost())) {_                    LOG.warn("You use localhost interface! It means that no external connections will be available."_                            + " Don't you want to use 0.0.0.0 instead (all network interfaces)?")__                }_                getServer().addConnector(connector)___                CometdServlet servlet = createServletForConnector(connector, endpoint)__                connectorRef = new ConnectorRef(connector, servlet)__                getServer().start()___                connectors.put(connectorKey, connectorRef)__            } else {_                connectorRef.increment()__            }__            BayeuxServerImpl bayeux = connectorRef.servlet.getBayeux()___            if (securityPolicy != null) {_                bayeux.setSecurityPolicy(securityPolicy)__            }_            if (extensions != null) {_                for (BayeuxServer.Extension extension : extensions) {_                    bayeux.addExtension(extension)__                }_            }_            prodcon.setBayeux(bayeux)__        }_    };connects,the,url,specified,on,the,endpoint,to,the,specified,processor;public,void,connect,cometd,producer,consumer,prodcon,throws,exception,cometd,endpoint,endpoint,cometd,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,connector,connector,if,cometds,equals,endpoint,get,protocol,connector,get,ssl,socket,connector,else,connector,new,select,channel,connector,connector,set,port,endpoint,get,port,connector,set,host,endpoint,get,uri,get,host,if,localhost,equals,ignore,case,endpoint,get,uri,get,host,log,warn,you,use,localhost,interface,it,means,that,no,external,connections,will,be,available,don,t,you,want,to,use,0,0,0,0,instead,all,network,interfaces,get,server,add,connector,connector,cometd,servlet,servlet,create,servlet,for,connector,connector,endpoint,connector,ref,new,connector,ref,connector,servlet,get,server,start,connectors,put,connector,key,connector,ref,else,connector,ref,increment,bayeux,server,impl,bayeux,connector,ref,servlet,get,bayeux,if,security,policy,null,bayeux,set,security,policy,security,policy,if,extensions,null,for,bayeux,server,extension,extension,extensions,bayeux,add,extension,extension,prodcon,set,bayeux,bayeux
CometdComponent -> public void connect(CometdProducerConsumer prodcon) throws Exception;1323148087;Connects the URL specified on the endpoint to the specified processor.;public void connect(CometdProducerConsumer prodcon) throws Exception {_        _        CometdEndpoint endpoint = (CometdEndpoint) prodcon.getEndpoint()__        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef == null) {_                Connector connector__                if ("cometds".equals(endpoint.getProtocol())) {_                    connector = getSslSocketConnector()__                } else {_                    connector = new SelectChannelConnector()__                }_                connector.setPort(endpoint.getPort())__                connector.setHost(endpoint.getUri().getHost())__                if ("localhost".equalsIgnoreCase(endpoint.getUri().getHost())) {_                    LOG.warn("You use localhost interface! It means that no external connections will be available."_                            + " Don't you want to use 0.0.0.0 instead (all network interfaces)?")__                }_                getServer().addConnector(connector)___                CometdServlet servlet = createServletForConnector(connector, endpoint)__                connectorRef = new ConnectorRef(connector, servlet)__                getServer().start()___                connectors.put(connectorKey, connectorRef)__            } else {_                connectorRef.increment()__            }__            BayeuxServerImpl bayeux = connectorRef.servlet.getBayeux()___            if (securityPolicy != null) {_                bayeux.setSecurityPolicy(securityPolicy)__            }_            if (extensions != null) {_                for (BayeuxServer.Extension extension : extensions) {_                    bayeux.addExtension(extension)__                }_            }_            prodcon.setBayeux(bayeux)__        }_    };connects,the,url,specified,on,the,endpoint,to,the,specified,processor;public,void,connect,cometd,producer,consumer,prodcon,throws,exception,cometd,endpoint,endpoint,cometd,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,connector,connector,if,cometds,equals,endpoint,get,protocol,connector,get,ssl,socket,connector,else,connector,new,select,channel,connector,connector,set,port,endpoint,get,port,connector,set,host,endpoint,get,uri,get,host,if,localhost,equals,ignore,case,endpoint,get,uri,get,host,log,warn,you,use,localhost,interface,it,means,that,no,external,connections,will,be,available,don,t,you,want,to,use,0,0,0,0,instead,all,network,interfaces,get,server,add,connector,connector,cometd,servlet,servlet,create,servlet,for,connector,connector,endpoint,connector,ref,new,connector,ref,connector,servlet,get,server,start,connectors,put,connector,key,connector,ref,else,connector,ref,increment,bayeux,server,impl,bayeux,connector,ref,servlet,get,bayeux,if,security,policy,null,bayeux,set,security,policy,security,policy,if,extensions,null,for,bayeux,server,extension,extension,extensions,bayeux,add,extension,extension,prodcon,set,bayeux,bayeux
CometdComponent -> public void connect(CometdProducerConsumer prodcon) throws Exception;1324569391;Connects the URL specified on the endpoint to the specified processor.;public void connect(CometdProducerConsumer prodcon) throws Exception {_        _        CometdEndpoint endpoint = (CometdEndpoint) prodcon.getEndpoint()__        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef == null) {_                Connector connector__                if ("cometds".equals(endpoint.getProtocol())) {_                    connector = getSslSocketConnector()__                } else {_                    connector = new SelectChannelConnector()__                }_                connector.setPort(endpoint.getPort())__                connector.setHost(endpoint.getUri().getHost())__                if ("localhost".equalsIgnoreCase(endpoint.getUri().getHost())) {_                    LOG.warn("You use localhost interface! It means that no external connections will be available."_                            + " Don't you want to use 0.0.0.0 instead (all network interfaces)?")__                }_                getServer().addConnector(connector)___                CometdServlet servlet = createServletForConnector(connector, endpoint)__                connectorRef = new ConnectorRef(connector, servlet)__                getServer().start()___                connectors.put(connectorKey, connectorRef)__            } else {_                connectorRef.increment()__            }__            BayeuxServerImpl bayeux = connectorRef.servlet.getBayeux()___            if (securityPolicy != null) {_                bayeux.setSecurityPolicy(securityPolicy)__            }_            if (extensions != null) {_                for (BayeuxServer.Extension extension : extensions) {_                    bayeux.addExtension(extension)__                }_            }_            prodcon.setBayeux(bayeux)__        }_    };connects,the,url,specified,on,the,endpoint,to,the,specified,processor;public,void,connect,cometd,producer,consumer,prodcon,throws,exception,cometd,endpoint,endpoint,cometd,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,connector,connector,if,cometds,equals,endpoint,get,protocol,connector,get,ssl,socket,connector,else,connector,new,select,channel,connector,connector,set,port,endpoint,get,port,connector,set,host,endpoint,get,uri,get,host,if,localhost,equals,ignore,case,endpoint,get,uri,get,host,log,warn,you,use,localhost,interface,it,means,that,no,external,connections,will,be,available,don,t,you,want,to,use,0,0,0,0,instead,all,network,interfaces,get,server,add,connector,connector,cometd,servlet,servlet,create,servlet,for,connector,connector,endpoint,connector,ref,new,connector,ref,connector,servlet,get,server,start,connectors,put,connector,key,connector,ref,else,connector,ref,increment,bayeux,server,impl,bayeux,connector,ref,servlet,get,bayeux,if,security,policy,null,bayeux,set,security,policy,security,policy,if,extensions,null,for,bayeux,server,extension,extension,extensions,bayeux,add,extension,extension,prodcon,set,bayeux,bayeux
CometdComponent -> public void connect(CometdProducerConsumer prodcon) throws Exception;1325779288;Connects the URL specified on the endpoint to the specified processor.;public void connect(CometdProducerConsumer prodcon) throws Exception {_        _        CometdEndpoint endpoint = prodcon.getEndpoint()__        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef == null) {_                Connector connector__                if ("cometds".equals(endpoint.getProtocol())) {_                    connector = getSslSocketConnector()__                } else {_                    connector = new SelectChannelConnector()__                }_                connector.setPort(endpoint.getPort())__                connector.setHost(endpoint.getUri().getHost())__                if ("localhost".equalsIgnoreCase(endpoint.getUri().getHost())) {_                    LOG.warn("You use localhost interface! It means that no external connections will be available."_                            + " Don't you want to use 0.0.0.0 instead (all network interfaces)?")__                }_                getServer().addConnector(connector)___                CometdServlet servlet = createServletForConnector(connector, endpoint)__                connectorRef = new ConnectorRef(connector, servlet)__                getServer().start()___                connectors.put(connectorKey, connectorRef)__            } else {_                connectorRef.increment()__            }__            BayeuxServerImpl bayeux = connectorRef.servlet.getBayeux()___            if (securityPolicy != null) {_                bayeux.setSecurityPolicy(securityPolicy)__            }_            if (extensions != null) {_                for (BayeuxServer.Extension extension : extensions) {_                    bayeux.addExtension(extension)__                }_            }_            prodcon.setBayeux(bayeux)__        }_    };connects,the,url,specified,on,the,endpoint,to,the,specified,processor;public,void,connect,cometd,producer,consumer,prodcon,throws,exception,cometd,endpoint,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,connector,connector,if,cometds,equals,endpoint,get,protocol,connector,get,ssl,socket,connector,else,connector,new,select,channel,connector,connector,set,port,endpoint,get,port,connector,set,host,endpoint,get,uri,get,host,if,localhost,equals,ignore,case,endpoint,get,uri,get,host,log,warn,you,use,localhost,interface,it,means,that,no,external,connections,will,be,available,don,t,you,want,to,use,0,0,0,0,instead,all,network,interfaces,get,server,add,connector,connector,cometd,servlet,servlet,create,servlet,for,connector,connector,endpoint,connector,ref,new,connector,ref,connector,servlet,get,server,start,connectors,put,connector,key,connector,ref,else,connector,ref,increment,bayeux,server,impl,bayeux,connector,ref,servlet,get,bayeux,if,security,policy,null,bayeux,set,security,policy,security,policy,if,extensions,null,for,bayeux,server,extension,extension,extensions,bayeux,add,extension,extension,prodcon,set,bayeux,bayeux
CometdComponent -> public void connect(CometdProducerConsumer prodcon) throws Exception;1328442507;Connects the URL specified on the endpoint to the specified processor.;public void connect(CometdProducerConsumer prodcon) throws Exception {_        _        CometdEndpoint endpoint = prodcon.getEndpoint()__        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef == null) {_                Connector connector__                if ("cometds".equals(endpoint.getProtocol())) {_                    connector = getSslSocketConnector()__                } else {_                    connector = new SelectChannelConnector()__                }_                connector.setPort(endpoint.getPort())__                connector.setHost(endpoint.getUri().getHost())__                if ("localhost".equalsIgnoreCase(endpoint.getUri().getHost())) {_                    LOG.warn("You use localhost interface! It means that no external connections will be available."_                            + " Don't you want to use 0.0.0.0 instead (all network interfaces)?")__                }_                getServer().addConnector(connector)___                CometdServlet servlet = createServletForConnector(connector, endpoint)__                connectorRef = new ConnectorRef(connector, servlet)__                getServer().start()___                connectors.put(connectorKey, connectorRef)__            } else {_                connectorRef.increment()__            }__            BayeuxServerImpl bayeux = connectorRef.servlet.getBayeux()___            if (securityPolicy != null) {_                bayeux.setSecurityPolicy(securityPolicy)__            }_            if (extensions != null) {_                for (BayeuxServer.Extension extension : extensions) {_                    bayeux.addExtension(extension)__                }_            }_            prodcon.setBayeux(bayeux)__        }_    };connects,the,url,specified,on,the,endpoint,to,the,specified,processor;public,void,connect,cometd,producer,consumer,prodcon,throws,exception,cometd,endpoint,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,connector,connector,if,cometds,equals,endpoint,get,protocol,connector,get,ssl,socket,connector,else,connector,new,select,channel,connector,connector,set,port,endpoint,get,port,connector,set,host,endpoint,get,uri,get,host,if,localhost,equals,ignore,case,endpoint,get,uri,get,host,log,warn,you,use,localhost,interface,it,means,that,no,external,connections,will,be,available,don,t,you,want,to,use,0,0,0,0,instead,all,network,interfaces,get,server,add,connector,connector,cometd,servlet,servlet,create,servlet,for,connector,connector,endpoint,connector,ref,new,connector,ref,connector,servlet,get,server,start,connectors,put,connector,key,connector,ref,else,connector,ref,increment,bayeux,server,impl,bayeux,connector,ref,servlet,get,bayeux,if,security,policy,null,bayeux,set,security,policy,security,policy,if,extensions,null,for,bayeux,server,extension,extension,extensions,bayeux,add,extension,extension,prodcon,set,bayeux,bayeux
CometdComponent -> public void connect(CometdProducerConsumer prodcon) throws Exception;1331780440;Connects the URL specified on the endpoint to the specified processor.;public void connect(CometdProducerConsumer prodcon) throws Exception {_        _        CometdEndpoint endpoint = prodcon.getEndpoint()__        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef == null) {_                Connector connector__                if ("cometds".equals(endpoint.getProtocol())) {_                    connector = getSslSocketConnector()__                } else {_                    connector = new SelectChannelConnector()__                }_                connector.setPort(endpoint.getPort())__                connector.setHost(endpoint.getUri().getHost())__                if ("localhost".equalsIgnoreCase(endpoint.getUri().getHost())) {_                    LOG.warn("You use localhost interface! It means that no external connections will be available."_                            + " Don't you want to use 0.0.0.0 instead (all network interfaces)?")__                }_                Server server = createServer()__                server.addConnector(connector)___                CometdServlet servlet = createServletForConnector(server, connector, endpoint)__                connectorRef = new ConnectorRef(connector, servlet, server)__                server.start()___                connectors.put(connectorKey, connectorRef)__            } else {_                connectorRef.increment()__            }__            BayeuxServerImpl bayeux = connectorRef.servlet.getBayeux()___            if (securityPolicy != null) {_                bayeux.setSecurityPolicy(securityPolicy)__            }_            if (extensions != null) {_                for (BayeuxServer.Extension extension : extensions) {_                    bayeux.addExtension(extension)__                }_            }_            prodcon.setBayeux(bayeux)__        }_    };connects,the,url,specified,on,the,endpoint,to,the,specified,processor;public,void,connect,cometd,producer,consumer,prodcon,throws,exception,cometd,endpoint,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,connector,connector,if,cometds,equals,endpoint,get,protocol,connector,get,ssl,socket,connector,else,connector,new,select,channel,connector,connector,set,port,endpoint,get,port,connector,set,host,endpoint,get,uri,get,host,if,localhost,equals,ignore,case,endpoint,get,uri,get,host,log,warn,you,use,localhost,interface,it,means,that,no,external,connections,will,be,available,don,t,you,want,to,use,0,0,0,0,instead,all,network,interfaces,server,server,create,server,server,add,connector,connector,cometd,servlet,servlet,create,servlet,for,connector,server,connector,endpoint,connector,ref,new,connector,ref,connector,servlet,server,server,start,connectors,put,connector,key,connector,ref,else,connector,ref,increment,bayeux,server,impl,bayeux,connector,ref,servlet,get,bayeux,if,security,policy,null,bayeux,set,security,policy,security,policy,if,extensions,null,for,bayeux,server,extension,extension,extensions,bayeux,add,extension,extension,prodcon,set,bayeux,bayeux
CometdComponent -> public void connect(CometdProducerConsumer prodcon) throws Exception;1339138868;Connects the URL specified on the endpoint to the specified processor.;public void connect(CometdProducerConsumer prodcon) throws Exception {_        _        CometdEndpoint endpoint = prodcon.getEndpoint()__        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef == null) {_                Connector connector__                if ("cometds".equals(endpoint.getProtocol())) {_                    connector = getSslSocketConnector()__                } else {_                    connector = new SelectChannelConnector()__                }_                connector.setPort(endpoint.getPort())__                connector.setHost(endpoint.getUri().getHost())__                if ("localhost".equalsIgnoreCase(endpoint.getUri().getHost())) {_                    LOG.warn("You use localhost interface! It means that no external connections will be available."_                            + " Don't you want to use 0.0.0.0 instead (all network interfaces)?")__                }_                Server server = createServer()__                server.addConnector(connector)___                CometdServlet servlet = createServletForConnector(server, connector, endpoint)__                connectorRef = new ConnectorRef(connector, servlet, server)__                server.start()___                connectors.put(connectorKey, connectorRef)__            } else {_                connectorRef.increment()__            }__            BayeuxServerImpl bayeux = connectorRef.servlet.getBayeux()___            if (securityPolicy != null) {_                bayeux.setSecurityPolicy(securityPolicy)__            }_            if (extensions != null) {_                for (BayeuxServer.Extension extension : extensions) {_                    bayeux.addExtension(extension)__                }_            }_            prodcon.setBayeux(bayeux)__        }_    };connects,the,url,specified,on,the,endpoint,to,the,specified,processor;public,void,connect,cometd,producer,consumer,prodcon,throws,exception,cometd,endpoint,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,connector,connector,if,cometds,equals,endpoint,get,protocol,connector,get,ssl,socket,connector,else,connector,new,select,channel,connector,connector,set,port,endpoint,get,port,connector,set,host,endpoint,get,uri,get,host,if,localhost,equals,ignore,case,endpoint,get,uri,get,host,log,warn,you,use,localhost,interface,it,means,that,no,external,connections,will,be,available,don,t,you,want,to,use,0,0,0,0,instead,all,network,interfaces,server,server,create,server,server,add,connector,connector,cometd,servlet,servlet,create,servlet,for,connector,server,connector,endpoint,connector,ref,new,connector,ref,connector,servlet,server,server,start,connectors,put,connector,key,connector,ref,else,connector,ref,increment,bayeux,server,impl,bayeux,connector,ref,servlet,get,bayeux,if,security,policy,null,bayeux,set,security,policy,security,policy,if,extensions,null,for,bayeux,server,extension,extension,extensions,bayeux,add,extension,extension,prodcon,set,bayeux,bayeux
CometdComponent -> public void connect(CometdProducerConsumer prodcon) throws Exception;1372816163;Connects the URL specified on the endpoint to the specified processor.;public void connect(CometdProducerConsumer prodcon) throws Exception {_        _        CometdEndpoint endpoint = prodcon.getEndpoint()__        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef == null) {_                Connector connector__                if ("cometds".equals(endpoint.getProtocol())) {_                    connector = getSslSocketConnector()__                } else {_                    connector = new SelectChannelConnector()__                }_                connector.setPort(endpoint.getPort())__                connector.setHost(endpoint.getUri().getHost())__                if ("localhost".equalsIgnoreCase(endpoint.getUri().getHost())) {_                    LOG.warn("You use localhost interface! It means that no external connections will be available."_                            + " Don't you want to use 0.0.0.0 instead (all network interfaces)?")__                }_                Server server = createServer()__                server.addConnector(connector)___                CometdServlet servlet = createServletForConnector(server, connector, endpoint)__                connectorRef = new ConnectorRef(connector, servlet, server)__                server.start()___                connectors.put(connectorKey, connectorRef)__            } else {_                connectorRef.increment()__            }__            BayeuxServerImpl bayeux = connectorRef.servlet.getBayeux()___            if (securityPolicy != null) {_                bayeux.setSecurityPolicy(securityPolicy)__            }_            if (extensions != null) {_                for (BayeuxServer.Extension extension : extensions) {_                    bayeux.addExtension(extension)__                }_            }_            prodcon.setBayeux(bayeux)__        }_    };connects,the,url,specified,on,the,endpoint,to,the,specified,processor;public,void,connect,cometd,producer,consumer,prodcon,throws,exception,cometd,endpoint,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,connector,connector,if,cometds,equals,endpoint,get,protocol,connector,get,ssl,socket,connector,else,connector,new,select,channel,connector,connector,set,port,endpoint,get,port,connector,set,host,endpoint,get,uri,get,host,if,localhost,equals,ignore,case,endpoint,get,uri,get,host,log,warn,you,use,localhost,interface,it,means,that,no,external,connections,will,be,available,don,t,you,want,to,use,0,0,0,0,instead,all,network,interfaces,server,server,create,server,server,add,connector,connector,cometd,servlet,servlet,create,servlet,for,connector,server,connector,endpoint,connector,ref,new,connector,ref,connector,servlet,server,server,start,connectors,put,connector,key,connector,ref,else,connector,ref,increment,bayeux,server,impl,bayeux,connector,ref,servlet,get,bayeux,if,security,policy,null,bayeux,set,security,policy,security,policy,if,extensions,null,for,bayeux,server,extension,extension,extensions,bayeux,add,extension,extension,prodcon,set,bayeux,bayeux
CometdComponent -> public void connect(CometdProducerConsumer prodcon) throws Exception;1372816406;Connects the URL specified on the endpoint to the specified processor.;public void connect(CometdProducerConsumer prodcon) throws Exception {_        _        CometdEndpoint endpoint = prodcon.getEndpoint()__        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef == null) {_                Connector connector__                if ("cometds".equals(endpoint.getProtocol())) {_                    connector = getSslSocketConnector()__                } else {_                    connector = new SelectChannelConnector()__                }_                connector.setPort(endpoint.getPort())__                connector.setHost(endpoint.getUri().getHost())__                if ("localhost".equalsIgnoreCase(endpoint.getUri().getHost())) {_                    LOG.warn("You use localhost interface! It means that no external connections will be available."_                            + " Don't you want to use 0.0.0.0 instead (all network interfaces)?")__                }_                Server server = createServer()__                server.addConnector(connector)___                CometdServlet servlet = createServletForConnector(server, connector, endpoint)__                connectorRef = new ConnectorRef(connector, servlet, server)__                server.start()___                connectors.put(connectorKey, connectorRef)__            } else {_                connectorRef.increment()__            }__            BayeuxServerImpl bayeux = connectorRef.servlet.getBayeux()___            if (securityPolicy != null) {_                bayeux.setSecurityPolicy(securityPolicy)__            }_            if (extensions != null) {_                for (BayeuxServer.Extension extension : extensions) {_                    bayeux.addExtension(extension)__                }_            }_            if (serverListeners != null) {_                for (BayeuxServer.BayeuxServerListener serverListener : serverListeners) {_                    bayeux.addListener(serverListener)__                }_            }_            prodcon.setBayeux(bayeux)__        }_    };connects,the,url,specified,on,the,endpoint,to,the,specified,processor;public,void,connect,cometd,producer,consumer,prodcon,throws,exception,cometd,endpoint,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,connector,connector,if,cometds,equals,endpoint,get,protocol,connector,get,ssl,socket,connector,else,connector,new,select,channel,connector,connector,set,port,endpoint,get,port,connector,set,host,endpoint,get,uri,get,host,if,localhost,equals,ignore,case,endpoint,get,uri,get,host,log,warn,you,use,localhost,interface,it,means,that,no,external,connections,will,be,available,don,t,you,want,to,use,0,0,0,0,instead,all,network,interfaces,server,server,create,server,server,add,connector,connector,cometd,servlet,servlet,create,servlet,for,connector,server,connector,endpoint,connector,ref,new,connector,ref,connector,servlet,server,server,start,connectors,put,connector,key,connector,ref,else,connector,ref,increment,bayeux,server,impl,bayeux,connector,ref,servlet,get,bayeux,if,security,policy,null,bayeux,set,security,policy,security,policy,if,extensions,null,for,bayeux,server,extension,extension,extensions,bayeux,add,extension,extension,if,server,listeners,null,for,bayeux,server,bayeux,server,listener,server,listener,server,listeners,bayeux,add,listener,server,listener,prodcon,set,bayeux,bayeux
CometdComponent -> public void connect(CometdProducerConsumer prodcon) throws Exception;1376549254;Connects the URL specified on the endpoint to the specified processor.;public void connect(CometdProducerConsumer prodcon) throws Exception {_        _        CometdEndpoint endpoint = prodcon.getEndpoint()__        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef == null) {_                Connector connector__                if ("cometds".equals(endpoint.getProtocol())) {_                    connector = getSslSocketConnector()__                } else {_                    connector = new SelectChannelConnector()__                }_                connector.setPort(endpoint.getPort())__                connector.setHost(endpoint.getUri().getHost())__                if ("localhost".equalsIgnoreCase(endpoint.getUri().getHost())) {_                    LOG.warn("You use localhost interface! It means that no external connections will be available."_                            + " Don't you want to use 0.0.0.0 instead (all network interfaces)?")__                }_                Server server = createServer()__                server.addConnector(connector)___                CometdServlet servlet = createServletForConnector(server, connector, endpoint)__                connectorRef = new ConnectorRef(connector, servlet, server)__                server.start()___                connectors.put(connectorKey, connectorRef)__            } else {_                connectorRef.increment()__            }__            BayeuxServerImpl bayeux = connectorRef.servlet.getBayeux()___            if (securityPolicy != null) {_                bayeux.setSecurityPolicy(securityPolicy)__            }_            if (extensions != null) {_                for (BayeuxServer.Extension extension : extensions) {_                    bayeux.addExtension(extension)__                }_            }_            if (serverListeners != null) {_                for (BayeuxServer.BayeuxServerListener serverListener : serverListeners) {_                    bayeux.addListener(serverListener)__                }_            }_            prodcon.setBayeux(bayeux)__        }_    };connects,the,url,specified,on,the,endpoint,to,the,specified,processor;public,void,connect,cometd,producer,consumer,prodcon,throws,exception,cometd,endpoint,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,connector,connector,if,cometds,equals,endpoint,get,protocol,connector,get,ssl,socket,connector,else,connector,new,select,channel,connector,connector,set,port,endpoint,get,port,connector,set,host,endpoint,get,uri,get,host,if,localhost,equals,ignore,case,endpoint,get,uri,get,host,log,warn,you,use,localhost,interface,it,means,that,no,external,connections,will,be,available,don,t,you,want,to,use,0,0,0,0,instead,all,network,interfaces,server,server,create,server,server,add,connector,connector,cometd,servlet,servlet,create,servlet,for,connector,server,connector,endpoint,connector,ref,new,connector,ref,connector,servlet,server,server,start,connectors,put,connector,key,connector,ref,else,connector,ref,increment,bayeux,server,impl,bayeux,connector,ref,servlet,get,bayeux,if,security,policy,null,bayeux,set,security,policy,security,policy,if,extensions,null,for,bayeux,server,extension,extension,extensions,bayeux,add,extension,extension,if,server,listeners,null,for,bayeux,server,bayeux,server,listener,server,listener,server,listeners,bayeux,add,listener,server,listener,prodcon,set,bayeux,bayeux
CometdComponent -> public void connect(CometdProducerConsumer prodcon) throws Exception;1379403291;Connects the URL specified on the endpoint to the specified processor.;public void connect(CometdProducerConsumer prodcon) throws Exception {_        _        CometdEndpoint endpoint = prodcon.getEndpoint()__        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef == null) {_                Connector connector__                if ("cometds".equals(endpoint.getProtocol())) {_                    connector = getSslSocketConnector()__                } else {_                    connector = new SelectChannelConnector()__                }_                connector.setPort(endpoint.getPort())__                connector.setHost(endpoint.getUri().getHost())__                if ("localhost".equalsIgnoreCase(endpoint.getUri().getHost())) {_                    LOG.warn("You use localhost interface! It means that no external connections will be available."_                            + " Don't you want to use 0.0.0.0 instead (all network interfaces)?")__                }_                Server server = createServer()__                server.addConnector(connector)___                CometdServlet servlet = createServletForConnector(server, connector, endpoint)__                connectorRef = new ConnectorRef(connector, servlet, server)__                server.start()___                connectors.put(connectorKey, connectorRef)__            } else {_                connectorRef.increment()__            }__            BayeuxServerImpl bayeux = connectorRef.servlet.getBayeux()___            if (securityPolicy != null) {_                bayeux.setSecurityPolicy(securityPolicy)__            }_            if (extensions != null) {_                for (BayeuxServer.Extension extension : extensions) {_                    bayeux.addExtension(extension)__                }_            }_            if (serverListeners != null) {_                for (BayeuxServer.BayeuxServerListener serverListener : serverListeners) {_                    bayeux.addListener(serverListener)__                }_            }_            prodcon.setBayeux(bayeux)__        }_    };connects,the,url,specified,on,the,endpoint,to,the,specified,processor;public,void,connect,cometd,producer,consumer,prodcon,throws,exception,cometd,endpoint,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,connector,connector,if,cometds,equals,endpoint,get,protocol,connector,get,ssl,socket,connector,else,connector,new,select,channel,connector,connector,set,port,endpoint,get,port,connector,set,host,endpoint,get,uri,get,host,if,localhost,equals,ignore,case,endpoint,get,uri,get,host,log,warn,you,use,localhost,interface,it,means,that,no,external,connections,will,be,available,don,t,you,want,to,use,0,0,0,0,instead,all,network,interfaces,server,server,create,server,server,add,connector,connector,cometd,servlet,servlet,create,servlet,for,connector,server,connector,endpoint,connector,ref,new,connector,ref,connector,servlet,server,server,start,connectors,put,connector,key,connector,ref,else,connector,ref,increment,bayeux,server,impl,bayeux,connector,ref,servlet,get,bayeux,if,security,policy,null,bayeux,set,security,policy,security,policy,if,extensions,null,for,bayeux,server,extension,extension,extensions,bayeux,add,extension,extension,if,server,listeners,null,for,bayeux,server,bayeux,server,listener,server,listener,server,listeners,bayeux,add,listener,server,listener,prodcon,set,bayeux,bayeux
CometdComponent -> public void connect(CometdProducerConsumer prodcon) throws Exception;1420528840;Connects the URL specified on the endpoint to the specified processor.;public void connect(CometdProducerConsumer prodcon) throws Exception {_        _        CometdEndpoint endpoint = prodcon.getEndpoint()__        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef == null) {_                Connector connector__                if ("cometds".equals(endpoint.getProtocol())) {_                    connector = getSslSocketConnector()__                } else {_                    connector = new SelectChannelConnector()__                }_                connector.setPort(endpoint.getPort())__                connector.setHost(endpoint.getUri().getHost())__                if ("localhost".equalsIgnoreCase(endpoint.getUri().getHost())) {_                    LOG.warn("You use localhost interface! It means that no external connections will be available."_                            + " Don't you want to use 0.0.0.0 instead (all network interfaces)?")__                }_                Server server = createServer()__                server.addConnector(connector)___                CometdServlet servlet = createServletForConnector(server, connector, endpoint)__                connectorRef = new ConnectorRef(connector, servlet, server)__                server.start()___                connectors.put(connectorKey, connectorRef)__            } else {_                connectorRef.increment()__            }__            BayeuxServerImpl bayeux = connectorRef.servlet.getBayeux()___            if (securityPolicy != null) {_                bayeux.setSecurityPolicy(securityPolicy)__            }_            if (extensions != null) {_                for (BayeuxServer.Extension extension : extensions) {_                    bayeux.addExtension(extension)__                }_            }_            if (serverListeners != null) {_                for (BayeuxServer.BayeuxServerListener serverListener : serverListeners) {_                    bayeux.addListener(serverListener)__                }_            }_            prodcon.setBayeux(bayeux)__        }_    };connects,the,url,specified,on,the,endpoint,to,the,specified,processor;public,void,connect,cometd,producer,consumer,prodcon,throws,exception,cometd,endpoint,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,connector,connector,if,cometds,equals,endpoint,get,protocol,connector,get,ssl,socket,connector,else,connector,new,select,channel,connector,connector,set,port,endpoint,get,port,connector,set,host,endpoint,get,uri,get,host,if,localhost,equals,ignore,case,endpoint,get,uri,get,host,log,warn,you,use,localhost,interface,it,means,that,no,external,connections,will,be,available,don,t,you,want,to,use,0,0,0,0,instead,all,network,interfaces,server,server,create,server,server,add,connector,connector,cometd,servlet,servlet,create,servlet,for,connector,server,connector,endpoint,connector,ref,new,connector,ref,connector,servlet,server,server,start,connectors,put,connector,key,connector,ref,else,connector,ref,increment,bayeux,server,impl,bayeux,connector,ref,servlet,get,bayeux,if,security,policy,null,bayeux,set,security,policy,security,policy,if,extensions,null,for,bayeux,server,extension,extension,extensions,bayeux,add,extension,extension,if,server,listeners,null,for,bayeux,server,bayeux,server,listener,server,listener,server,listeners,bayeux,add,listener,server,listener,prodcon,set,bayeux,bayeux
CometdComponent -> public void connect(CometdProducerConsumer prodcon) throws Exception;1434296657;Connects the URL specified on the endpoint to the specified processor.;public void connect(CometdProducerConsumer prodcon) throws Exception {_        _        CometdEndpoint endpoint = prodcon.getEndpoint()__        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef == null) {_                Connector connector__                if ("cometds".equals(endpoint.getProtocol())) {_                    connector = getSslSocketConnector()__                } else {_                    connector = new SelectChannelConnector()__                }_                connector.setPort(endpoint.getPort())__                connector.setHost(endpoint.getUri().getHost())__                if ("localhost".equalsIgnoreCase(endpoint.getUri().getHost())) {_                    LOG.warn("You use localhost interface! It means that no external connections will be available."_                            + " Don't you want to use 0.0.0.0 instead (all network interfaces)?")__                }_                Server server = createServer()__                server.addConnector(connector)___                CometdServlet servlet = createServletForConnector(server, connector, endpoint)__                connectorRef = new ConnectorRef(connector, servlet, server)__                server.start()___                connectors.put(connectorKey, connectorRef)__            } else {_                connectorRef.increment()__            }__            BayeuxServerImpl bayeux = connectorRef.servlet.getBayeux()___            if (securityPolicy != null) {_                bayeux.setSecurityPolicy(securityPolicy)__            }_            if (extensions != null) {_                for (BayeuxServer.Extension extension : extensions) {_                    bayeux.addExtension(extension)__                }_            }_            if (serverListeners != null) {_                for (BayeuxServer.BayeuxServerListener serverListener : serverListeners) {_                    bayeux.addListener(serverListener)__                }_            }_            prodcon.setBayeux(bayeux)__        }_    };connects,the,url,specified,on,the,endpoint,to,the,specified,processor;public,void,connect,cometd,producer,consumer,prodcon,throws,exception,cometd,endpoint,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,connector,connector,if,cometds,equals,endpoint,get,protocol,connector,get,ssl,socket,connector,else,connector,new,select,channel,connector,connector,set,port,endpoint,get,port,connector,set,host,endpoint,get,uri,get,host,if,localhost,equals,ignore,case,endpoint,get,uri,get,host,log,warn,you,use,localhost,interface,it,means,that,no,external,connections,will,be,available,don,t,you,want,to,use,0,0,0,0,instead,all,network,interfaces,server,server,create,server,server,add,connector,connector,cometd,servlet,servlet,create,servlet,for,connector,server,connector,endpoint,connector,ref,new,connector,ref,connector,servlet,server,server,start,connectors,put,connector,key,connector,ref,else,connector,ref,increment,bayeux,server,impl,bayeux,connector,ref,servlet,get,bayeux,if,security,policy,null,bayeux,set,security,policy,security,policy,if,extensions,null,for,bayeux,server,extension,extension,extensions,bayeux,add,extension,extension,if,server,listeners,null,for,bayeux,server,bayeux,server,listener,server,listener,server,listeners,bayeux,add,listener,server,listener,prodcon,set,bayeux,bayeux
CometdComponent -> public void connect(CometdProducerConsumer prodcon) throws Exception;1461244720;Connects the URL specified on the endpoint to the specified processor.;public void connect(CometdProducerConsumer prodcon) throws Exception {_    	Server server = null__        _        CometdEndpoint endpoint = prodcon.getEndpoint()__        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef == null) {_                ServerConnector connector__                server = createServer()__                if ("cometds".equals(endpoint.getProtocol())) {_                    connector = getSslSocketConnector(server)__                } else {_                    connector = new ServerConnector(server)__                }_                connector.setPort(endpoint.getPort())__                connector.setHost(endpoint.getUri().getHost())__                if ("localhost".equalsIgnoreCase(endpoint.getUri().getHost())) {_                    LOG.warn("You use localhost interface! It means that no external connections will be available."_                            + " Don't you want to use 0.0.0.0 instead (all network interfaces)?")__                }_                _                server.addConnector(connector)___                CometDServlet servlet = createServletForConnector(server, connector, endpoint)__                connectorRef = new ConnectorRef(connector, servlet, server)__                server.start()___                connectors.put(connectorKey, connectorRef)__            } else {_                connectorRef.increment()__            }__            BayeuxServerImpl bayeux = connectorRef.servlet.getBayeux()___            if (securityPolicy != null) {_                bayeux.setSecurityPolicy(securityPolicy)__            }_            if (extensions != null) {_                for (BayeuxServer.Extension extension : extensions) {_                    bayeux.addExtension(extension)__                }_            }_            if (serverListeners != null) {_                for (BayeuxServer.BayeuxServerListener serverListener : serverListeners) {_                    bayeux.addListener(serverListener)__                }_            }_            prodcon.setBayeux(bayeux)__        }_    };connects,the,url,specified,on,the,endpoint,to,the,specified,processor;public,void,connect,cometd,producer,consumer,prodcon,throws,exception,server,server,null,cometd,endpoint,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,server,connector,connector,server,create,server,if,cometds,equals,endpoint,get,protocol,connector,get,ssl,socket,connector,server,else,connector,new,server,connector,server,connector,set,port,endpoint,get,port,connector,set,host,endpoint,get,uri,get,host,if,localhost,equals,ignore,case,endpoint,get,uri,get,host,log,warn,you,use,localhost,interface,it,means,that,no,external,connections,will,be,available,don,t,you,want,to,use,0,0,0,0,instead,all,network,interfaces,server,add,connector,connector,comet,dservlet,servlet,create,servlet,for,connector,server,connector,endpoint,connector,ref,new,connector,ref,connector,servlet,server,server,start,connectors,put,connector,key,connector,ref,else,connector,ref,increment,bayeux,server,impl,bayeux,connector,ref,servlet,get,bayeux,if,security,policy,null,bayeux,set,security,policy,security,policy,if,extensions,null,for,bayeux,server,extension,extension,extensions,bayeux,add,extension,extension,if,server,listeners,null,for,bayeux,server,bayeux,server,listener,server,listener,server,listeners,bayeux,add,listener,server,listener,prodcon,set,bayeux,bayeux
CometdComponent -> public void connect(CometdProducerConsumer prodcon) throws Exception;1461244720;Connects the URL specified on the endpoint to the specified processor.;public void connect(CometdProducerConsumer prodcon) throws Exception {_        Server server = null__        _        CometdEndpoint endpoint = prodcon.getEndpoint()__        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef == null) {_                ServerConnector connector__                server = createServer()__                if ("cometds".equals(endpoint.getProtocol())) {_                    connector = getSslSocketConnector(server)__                } else {_                    connector = new ServerConnector(server)__                }_                connector.setPort(endpoint.getPort())__                connector.setHost(endpoint.getUri().getHost())__                if ("localhost".equalsIgnoreCase(endpoint.getUri().getHost())) {_                    LOG.warn("You use localhost interface! It means that no external connections will be available."_                            + " Don't you want to use 0.0.0.0 instead (all network interfaces)?")__                }_                _                server.addConnector(connector)___                CometDServlet servlet = createServletForConnector(server, connector, endpoint)__                connectorRef = new ConnectorRef(connector, servlet, server)__                server.start()___                connectors.put(connectorKey, connectorRef)__            } else {_                connectorRef.increment()__            }__            BayeuxServerImpl bayeux = connectorRef.servlet.getBayeux()___            if (securityPolicy != null) {_                bayeux.setSecurityPolicy(securityPolicy)__            }_            if (extensions != null) {_                for (BayeuxServer.Extension extension : extensions) {_                    bayeux.addExtension(extension)__                }_            }_            if (serverListeners != null) {_                for (BayeuxServer.BayeuxServerListener serverListener : serverListeners) {_                    bayeux.addListener(serverListener)__                }_            }_            prodcon.setBayeux(bayeux)__        }_    };connects,the,url,specified,on,the,endpoint,to,the,specified,processor;public,void,connect,cometd,producer,consumer,prodcon,throws,exception,server,server,null,cometd,endpoint,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,server,connector,connector,server,create,server,if,cometds,equals,endpoint,get,protocol,connector,get,ssl,socket,connector,server,else,connector,new,server,connector,server,connector,set,port,endpoint,get,port,connector,set,host,endpoint,get,uri,get,host,if,localhost,equals,ignore,case,endpoint,get,uri,get,host,log,warn,you,use,localhost,interface,it,means,that,no,external,connections,will,be,available,don,t,you,want,to,use,0,0,0,0,instead,all,network,interfaces,server,add,connector,connector,comet,dservlet,servlet,create,servlet,for,connector,server,connector,endpoint,connector,ref,new,connector,ref,connector,servlet,server,server,start,connectors,put,connector,key,connector,ref,else,connector,ref,increment,bayeux,server,impl,bayeux,connector,ref,servlet,get,bayeux,if,security,policy,null,bayeux,set,security,policy,security,policy,if,extensions,null,for,bayeux,server,extension,extension,extensions,bayeux,add,extension,extension,if,server,listeners,null,for,bayeux,server,bayeux,server,listener,server,listener,server,listeners,bayeux,add,listener,server,listener,prodcon,set,bayeux,bayeux
CometdComponent -> public void connect(CometdProducerConsumer prodcon) throws Exception;1461851621;Connects the URL specified on the endpoint to the specified processor.;public void connect(CometdProducerConsumer prodcon) throws Exception {_        Server server = null__        _        CometdEndpoint endpoint = prodcon.getEndpoint()__        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef == null) {_                ServerConnector connector__                server = createServer()__                if ("cometds".equals(endpoint.getProtocol())) {_                    connector = getSslSocketConnector(server)__                } else {_                    connector = new ServerConnector(server)__                }_                connector.setPort(endpoint.getPort())__                connector.setHost(endpoint.getUri().getHost())__                if ("localhost".equalsIgnoreCase(endpoint.getUri().getHost())) {_                    LOG.warn("You use localhost interface! It means that no external connections will be available."_                            + " Don't you want to use 0.0.0.0 instead (all network interfaces)?")__                }_                _                server.addConnector(connector)___                CometDServlet servlet = createServletForConnector(server, connector, endpoint)__                connectorRef = new ConnectorRef(connector, servlet, server)__                server.start()___                connectors.put(connectorKey, connectorRef)__            } else {_                connectorRef.increment()__            }__            BayeuxServerImpl bayeux = connectorRef.servlet.getBayeux()___            if (securityPolicy != null) {_                bayeux.setSecurityPolicy(securityPolicy)__            }_            if (extensions != null) {_                for (BayeuxServer.Extension extension : extensions) {_                    bayeux.addExtension(extension)__                }_            }_            if (serverListeners != null) {_                for (BayeuxServer.BayeuxServerListener serverListener : serverListeners) {_                    bayeux.addListener(serverListener)__                }_            }_            prodcon.setBayeux(bayeux)__        }_    };connects,the,url,specified,on,the,endpoint,to,the,specified,processor;public,void,connect,cometd,producer,consumer,prodcon,throws,exception,server,server,null,cometd,endpoint,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,server,connector,connector,server,create,server,if,cometds,equals,endpoint,get,protocol,connector,get,ssl,socket,connector,server,else,connector,new,server,connector,server,connector,set,port,endpoint,get,port,connector,set,host,endpoint,get,uri,get,host,if,localhost,equals,ignore,case,endpoint,get,uri,get,host,log,warn,you,use,localhost,interface,it,means,that,no,external,connections,will,be,available,don,t,you,want,to,use,0,0,0,0,instead,all,network,interfaces,server,add,connector,connector,comet,dservlet,servlet,create,servlet,for,connector,server,connector,endpoint,connector,ref,new,connector,ref,connector,servlet,server,server,start,connectors,put,connector,key,connector,ref,else,connector,ref,increment,bayeux,server,impl,bayeux,connector,ref,servlet,get,bayeux,if,security,policy,null,bayeux,set,security,policy,security,policy,if,extensions,null,for,bayeux,server,extension,extension,extensions,bayeux,add,extension,extension,if,server,listeners,null,for,bayeux,server,bayeux,server,listener,server,listener,server,listeners,bayeux,add,listener,server,listener,prodcon,set,bayeux,bayeux
CometdComponent -> public void connect(CometdProducerConsumer prodcon) throws Exception;1461916938;Connects the URL specified on the endpoint to the specified processor.;public void connect(CometdProducerConsumer prodcon) throws Exception {_        Server server = null__        _        CometdEndpoint endpoint = prodcon.getEndpoint()__        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef == null) {_                ServerConnector connector__                server = createServer()__                if ("cometds".equals(endpoint.getProtocol())) {_                    connector = getSslSocketConnector(server)__                } else {_                    connector = new ServerConnector(server)__                }_                connector.setPort(endpoint.getPort())__                connector.setHost(endpoint.getUri().getHost())__                if ("localhost".equalsIgnoreCase(endpoint.getUri().getHost())) {_                    LOG.warn("You use localhost interface! It means that no external connections will be available."_                            + " Don't you want to use 0.0.0.0 instead (all network interfaces)?")__                }_                _                server.addConnector(connector)___                CometDServlet servlet = createServletForConnector(server, connector, endpoint)__                connectorRef = new ConnectorRef(connector, servlet, server)__                server.start()___                connectors.put(connectorKey, connectorRef)__            } else {_                connectorRef.increment()__            }__            BayeuxServerImpl bayeux = connectorRef.servlet.getBayeux()___            if (securityPolicy != null) {_                bayeux.setSecurityPolicy(securityPolicy)__            }_            if (extensions != null) {_                for (BayeuxServer.Extension extension : extensions) {_                    bayeux.addExtension(extension)__                }_            }_            if (serverListeners != null) {_                for (BayeuxServer.BayeuxServerListener serverListener : serverListeners) {_                    bayeux.addListener(serverListener)__                }_            }_            prodcon.setBayeux(bayeux)__        }_    };connects,the,url,specified,on,the,endpoint,to,the,specified,processor;public,void,connect,cometd,producer,consumer,prodcon,throws,exception,server,server,null,cometd,endpoint,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,server,connector,connector,server,create,server,if,cometds,equals,endpoint,get,protocol,connector,get,ssl,socket,connector,server,else,connector,new,server,connector,server,connector,set,port,endpoint,get,port,connector,set,host,endpoint,get,uri,get,host,if,localhost,equals,ignore,case,endpoint,get,uri,get,host,log,warn,you,use,localhost,interface,it,means,that,no,external,connections,will,be,available,don,t,you,want,to,use,0,0,0,0,instead,all,network,interfaces,server,add,connector,connector,comet,dservlet,servlet,create,servlet,for,connector,server,connector,endpoint,connector,ref,new,connector,ref,connector,servlet,server,server,start,connectors,put,connector,key,connector,ref,else,connector,ref,increment,bayeux,server,impl,bayeux,connector,ref,servlet,get,bayeux,if,security,policy,null,bayeux,set,security,policy,security,policy,if,extensions,null,for,bayeux,server,extension,extension,extensions,bayeux,add,extension,extension,if,server,listeners,null,for,bayeux,server,bayeux,server,listener,server,listener,server,listeners,bayeux,add,listener,server,listener,prodcon,set,bayeux,bayeux
CometdComponent -> public void connect(CometdProducerConsumer prodcon) throws Exception;1475933627;Connects the URL specified on the endpoint to the specified processor.;public void connect(CometdProducerConsumer prodcon) throws Exception {_        Server server = null__        _        CometdEndpoint endpoint = prodcon.getEndpoint()__        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef == null) {_                ServerConnector connector__                server = createServer()__                if ("cometds".equals(endpoint.getProtocol())) {_                    connector = getSslSocketConnector(server)__                } else {_                    connector = new ServerConnector(server)__                }_                connector.setPort(endpoint.getPort())__                connector.setHost(endpoint.getUri().getHost())__                if ("localhost".equalsIgnoreCase(endpoint.getUri().getHost())) {_                    LOG.warn("You use localhost interface! It means that no external connections will be available."_                            + " Don't you want to use 0.0.0.0 instead (all network interfaces)?")__                }_                _                server.addConnector(connector)___                CometDServlet servlet = createServletForConnector(server, connector, endpoint)__                connectorRef = new ConnectorRef(connector, servlet, server)__                server.start()___                connectors.put(connectorKey, connectorRef)__            } else {_                connectorRef.increment()__            }__            BayeuxServerImpl bayeux = connectorRef.servlet.getBayeux()___            if (securityPolicy != null) {_                bayeux.setSecurityPolicy(securityPolicy)__            }_            if (extensions != null) {_                for (BayeuxServer.Extension extension : extensions) {_                    bayeux.addExtension(extension)__                }_            }_            if (serverListeners != null) {_                for (BayeuxServer.BayeuxServerListener serverListener : serverListeners) {_                    bayeux.addListener(serverListener)__                }_            }_            prodcon.setBayeux(bayeux)__        }_    };connects,the,url,specified,on,the,endpoint,to,the,specified,processor;public,void,connect,cometd,producer,consumer,prodcon,throws,exception,server,server,null,cometd,endpoint,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,server,connector,connector,server,create,server,if,cometds,equals,endpoint,get,protocol,connector,get,ssl,socket,connector,server,else,connector,new,server,connector,server,connector,set,port,endpoint,get,port,connector,set,host,endpoint,get,uri,get,host,if,localhost,equals,ignore,case,endpoint,get,uri,get,host,log,warn,you,use,localhost,interface,it,means,that,no,external,connections,will,be,available,don,t,you,want,to,use,0,0,0,0,instead,all,network,interfaces,server,add,connector,connector,comet,dservlet,servlet,create,servlet,for,connector,server,connector,endpoint,connector,ref,new,connector,ref,connector,servlet,server,server,start,connectors,put,connector,key,connector,ref,else,connector,ref,increment,bayeux,server,impl,bayeux,connector,ref,servlet,get,bayeux,if,security,policy,null,bayeux,set,security,policy,security,policy,if,extensions,null,for,bayeux,server,extension,extension,extensions,bayeux,add,extension,extension,if,server,listeners,null,for,bayeux,server,bayeux,server,listener,server,listener,server,listeners,bayeux,add,listener,server,listener,prodcon,set,bayeux,bayeux
CometdComponent -> public void connect(CometdProducerConsumer prodcon) throws Exception;1482322625;Connects the URL specified on the endpoint to the specified processor.;public void connect(CometdProducerConsumer prodcon) throws Exception {_        Server server = null__        _        CometdEndpoint endpoint = prodcon.getEndpoint()__        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef == null) {_                ServerConnector connector__                server = createServer()__                if ("cometds".equals(endpoint.getProtocol())) {_                    connector = getSslSocketConnector(server)__                } else {_                    connector = new ServerConnector(server)__                }_                connector.setPort(endpoint.getPort())__                connector.setHost(endpoint.getUri().getHost())__                if ("localhost".equalsIgnoreCase(endpoint.getUri().getHost())) {_                    LOG.warn("You use localhost interface! It means that no external connections will be available."_                            + " Don't you want to use 0.0.0.0 instead (all network interfaces)?")__                }_                _                server.addConnector(connector)___                CometDServlet servlet = createServletForConnector(server, connector, endpoint)__                connectorRef = new ConnectorRef(connector, servlet, server)__                server.start()___                connectors.put(connectorKey, connectorRef)__            } else {_                connectorRef.increment()__            }__            BayeuxServerImpl bayeux = connectorRef.servlet.getBayeux()___            if (securityPolicy != null) {_                bayeux.setSecurityPolicy(securityPolicy)__            }_            if (extensions != null) {_                for (BayeuxServer.Extension extension : extensions) {_                    bayeux.addExtension(extension)__                }_            }_            if (serverListeners != null) {_                for (BayeuxServer.BayeuxServerListener serverListener : serverListeners) {_                    bayeux.addListener(serverListener)__                }_            }_            prodcon.setBayeux(bayeux)__        }_    };connects,the,url,specified,on,the,endpoint,to,the,specified,processor;public,void,connect,cometd,producer,consumer,prodcon,throws,exception,server,server,null,cometd,endpoint,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,server,connector,connector,server,create,server,if,cometds,equals,endpoint,get,protocol,connector,get,ssl,socket,connector,server,else,connector,new,server,connector,server,connector,set,port,endpoint,get,port,connector,set,host,endpoint,get,uri,get,host,if,localhost,equals,ignore,case,endpoint,get,uri,get,host,log,warn,you,use,localhost,interface,it,means,that,no,external,connections,will,be,available,don,t,you,want,to,use,0,0,0,0,instead,all,network,interfaces,server,add,connector,connector,comet,dservlet,servlet,create,servlet,for,connector,server,connector,endpoint,connector,ref,new,connector,ref,connector,servlet,server,server,start,connectors,put,connector,key,connector,ref,else,connector,ref,increment,bayeux,server,impl,bayeux,connector,ref,servlet,get,bayeux,if,security,policy,null,bayeux,set,security,policy,security,policy,if,extensions,null,for,bayeux,server,extension,extension,extensions,bayeux,add,extension,extension,if,server,listeners,null,for,bayeux,server,bayeux,server,listener,server,listener,server,listeners,bayeux,add,listener,server,listener,prodcon,set,bayeux,bayeux
CometdComponent -> public void connect(CometdProducerConsumer prodcon) throws Exception;1489596811;Connects the URL specified on the endpoint to the specified processor.;public void connect(CometdProducerConsumer prodcon) throws Exception {_        Server server = null__        _        CometdEndpoint endpoint = prodcon.getEndpoint()__        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef == null) {_                ServerConnector connector__                server = createServer()__                if ("cometds".equals(endpoint.getProtocol())) {_                    connector = getSslSocketConnector(server)__                } else {_                    connector = new ServerConnector(server)__                }_                connector.setPort(endpoint.getPort())__                connector.setHost(endpoint.getUri().getHost())__                if ("localhost".equalsIgnoreCase(endpoint.getUri().getHost())) {_                    LOG.warn("You use localhost interface! It means that no external connections will be available."_                            + " Don't you want to use 0.0.0.0 instead (all network interfaces)?")__                }_                _                server.addConnector(connector)___                CometDServlet servlet = createServletForConnector(server, connector, endpoint)__                connectorRef = new ConnectorRef(connector, servlet, server)__                server.start()___                connectors.put(connectorKey, connectorRef)__            } else {_                connectorRef.increment()__            }__            BayeuxServerImpl bayeux = connectorRef.servlet.getBayeux()___            if (securityPolicy != null) {_                bayeux.setSecurityPolicy(securityPolicy)__            }_            if (extensions != null) {_                for (BayeuxServer.Extension extension : extensions) {_                    bayeux.addExtension(extension)__                }_            }_            if (serverListeners != null) {_                for (BayeuxServer.BayeuxServerListener serverListener : serverListeners) {_                    bayeux.addListener(serverListener)__                }_            }_            prodcon.setBayeux(bayeux)__        }_    };connects,the,url,specified,on,the,endpoint,to,the,specified,processor;public,void,connect,cometd,producer,consumer,prodcon,throws,exception,server,server,null,cometd,endpoint,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,server,connector,connector,server,create,server,if,cometds,equals,endpoint,get,protocol,connector,get,ssl,socket,connector,server,else,connector,new,server,connector,server,connector,set,port,endpoint,get,port,connector,set,host,endpoint,get,uri,get,host,if,localhost,equals,ignore,case,endpoint,get,uri,get,host,log,warn,you,use,localhost,interface,it,means,that,no,external,connections,will,be,available,don,t,you,want,to,use,0,0,0,0,instead,all,network,interfaces,server,add,connector,connector,comet,dservlet,servlet,create,servlet,for,connector,server,connector,endpoint,connector,ref,new,connector,ref,connector,servlet,server,server,start,connectors,put,connector,key,connector,ref,else,connector,ref,increment,bayeux,server,impl,bayeux,connector,ref,servlet,get,bayeux,if,security,policy,null,bayeux,set,security,policy,security,policy,if,extensions,null,for,bayeux,server,extension,extension,extensions,bayeux,add,extension,extension,if,server,listeners,null,for,bayeux,server,bayeux,server,listener,server,listener,server,listeners,bayeux,add,listener,server,listener,prodcon,set,bayeux,bayeux
CometdComponent -> public void connect(CometdProducerConsumer prodcon) throws Exception;1491919259;Connects the URL specified on the endpoint to the specified processor.;public void connect(CometdProducerConsumer prodcon) throws Exception {_        Server server = null__        _        CometdEndpoint endpoint = prodcon.getEndpoint()__        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef == null) {_                ServerConnector connector__                server = createServer()__                if ("cometds".equals(endpoint.getProtocol())) {_                    connector = getSslSocketConnector(server)__                } else {_                    connector = new ServerConnector(server)__                }_                connector.setPort(endpoint.getPort())__                connector.setHost(endpoint.getUri().getHost())__                if ("localhost".equalsIgnoreCase(endpoint.getUri().getHost())) {_                    LOG.warn("You use localhost interface! It means that no external connections will be available."_                            + " Don't you want to use 0.0.0.0 instead (all network interfaces)?")__                }_                _                server.addConnector(connector)___                CometDServlet servlet = createServletForConnector(server, connector, endpoint)__                connectorRef = new ConnectorRef(connector, servlet, server)__                server.start()___                connectors.put(connectorKey, connectorRef)__            } else {_                connectorRef.increment()__            }__            BayeuxServerImpl bayeux = connectorRef.servlet.getBayeux()___            if (securityPolicy != null) {_                bayeux.setSecurityPolicy(securityPolicy)__            }_            if (extensions != null) {_                for (BayeuxServer.Extension extension : extensions) {_                    bayeux.addExtension(extension)__                }_            }_            if (serverListeners != null) {_                for (BayeuxServer.BayeuxServerListener serverListener : serverListeners) {_                    bayeux.addListener(serverListener)__                }_            }_            prodcon.setBayeux(bayeux)__        }_    };connects,the,url,specified,on,the,endpoint,to,the,specified,processor;public,void,connect,cometd,producer,consumer,prodcon,throws,exception,server,server,null,cometd,endpoint,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,server,connector,connector,server,create,server,if,cometds,equals,endpoint,get,protocol,connector,get,ssl,socket,connector,server,else,connector,new,server,connector,server,connector,set,port,endpoint,get,port,connector,set,host,endpoint,get,uri,get,host,if,localhost,equals,ignore,case,endpoint,get,uri,get,host,log,warn,you,use,localhost,interface,it,means,that,no,external,connections,will,be,available,don,t,you,want,to,use,0,0,0,0,instead,all,network,interfaces,server,add,connector,connector,comet,dservlet,servlet,create,servlet,for,connector,server,connector,endpoint,connector,ref,new,connector,ref,connector,servlet,server,server,start,connectors,put,connector,key,connector,ref,else,connector,ref,increment,bayeux,server,impl,bayeux,connector,ref,servlet,get,bayeux,if,security,policy,null,bayeux,set,security,policy,security,policy,if,extensions,null,for,bayeux,server,extension,extension,extensions,bayeux,add,extension,extension,if,server,listeners,null,for,bayeux,server,bayeux,server,listener,server,listener,server,listeners,bayeux,add,listener,server,listener,prodcon,set,bayeux,bayeux
CometdComponent -> public void connect(CometdProducerConsumer prodcon) throws Exception;1491919462;Connects the URL specified on the endpoint to the specified processor.;public void connect(CometdProducerConsumer prodcon) throws Exception {_        Server server = null__        _        CometdEndpoint endpoint = prodcon.getEndpoint()__        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef == null) {_                ServerConnector connector__                server = createServer()__                if ("cometds".equals(endpoint.getProtocol())) {_                    connector = getSslSocketConnector(server)__                } else {_                    connector = new ServerConnector(server)__                }_                connector.setPort(endpoint.getPort())__                connector.setHost(endpoint.getUri().getHost())__                if ("localhost".equalsIgnoreCase(endpoint.getUri().getHost())) {_                    LOG.warn("You use localhost interface! It means that no external connections will be available."_                            + " Don't you want to use 0.0.0.0 instead (all network interfaces)?")__                }_                _                server.addConnector(connector)___                CometDServlet servlet = createServletForConnector(server, connector, endpoint)__                connectorRef = new ConnectorRef(connector, servlet, server)__                server.start()___                connectors.put(connectorKey, connectorRef)__            } else {_                connectorRef.increment()__            }__            BayeuxServerImpl bayeux = connectorRef.servlet.getBayeux()___            if (securityPolicy != null) {_                bayeux.setSecurityPolicy(securityPolicy)__            }_            if (extensions != null) {_                for (BayeuxServer.Extension extension : extensions) {_                    bayeux.addExtension(extension)__                }_            }_            if (serverListeners != null) {_                for (BayeuxServer.BayeuxServerListener serverListener : serverListeners) {_                    bayeux.addListener(serverListener)__                }_            }_            prodcon.setBayeux(bayeux)__        }_    };connects,the,url,specified,on,the,endpoint,to,the,specified,processor;public,void,connect,cometd,producer,consumer,prodcon,throws,exception,server,server,null,cometd,endpoint,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,server,connector,connector,server,create,server,if,cometds,equals,endpoint,get,protocol,connector,get,ssl,socket,connector,server,else,connector,new,server,connector,server,connector,set,port,endpoint,get,port,connector,set,host,endpoint,get,uri,get,host,if,localhost,equals,ignore,case,endpoint,get,uri,get,host,log,warn,you,use,localhost,interface,it,means,that,no,external,connections,will,be,available,don,t,you,want,to,use,0,0,0,0,instead,all,network,interfaces,server,add,connector,connector,comet,dservlet,servlet,create,servlet,for,connector,server,connector,endpoint,connector,ref,new,connector,ref,connector,servlet,server,server,start,connectors,put,connector,key,connector,ref,else,connector,ref,increment,bayeux,server,impl,bayeux,connector,ref,servlet,get,bayeux,if,security,policy,null,bayeux,set,security,policy,security,policy,if,extensions,null,for,bayeux,server,extension,extension,extensions,bayeux,add,extension,extension,if,server,listeners,null,for,bayeux,server,bayeux,server,listener,server,listener,server,listeners,bayeux,add,listener,server,listener,prodcon,set,bayeux,bayeux
CometdComponent -> public void connect(CometdProducerConsumer prodcon) throws Exception;1491919462;Connects the URL specified on the endpoint to the specified processor.;public void connect(CometdProducerConsumer prodcon) throws Exception {_        Server server = null__        _        CometdEndpoint endpoint = prodcon.getEndpoint()__        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef == null) {_                ServerConnector connector__                server = createServer()__                if ("cometds".equals(endpoint.getProtocol())) {_                    connector = getSslSocketConnector(server)__                } else {_                    connector = new ServerConnector(server)__                }_                connector.setPort(endpoint.getPort())__                connector.setHost(endpoint.getUri().getHost())__                if ("localhost".equalsIgnoreCase(endpoint.getUri().getHost())) {_                    LOG.warn("You use localhost interface! It means that no external connections will be available."_                            + " Don't you want to use 0.0.0.0 instead (all network interfaces)?")__                }_                _                server.addConnector(connector)___                CometDServlet servlet = createServletForConnector(server, connector, endpoint)__                connectorRef = new ConnectorRef(connector, servlet, server)__                server.start()___                connectors.put(connectorKey, connectorRef)__            } else {_                connectorRef.increment()__            }__            BayeuxServerImpl bayeux = connectorRef.servlet.getBayeux()___            if (securityPolicy != null) {_                bayeux.setSecurityPolicy(securityPolicy)__            }_            if (extensions != null) {_                for (BayeuxServer.Extension extension : extensions) {_                    bayeux.addExtension(extension)__                }_            }_            if (serverListeners != null) {_                for (BayeuxServer.BayeuxServerListener serverListener : serverListeners) {_                    bayeux.addListener(serverListener)__                }_            }_            prodcon.setBayeux(bayeux)__        }_    };connects,the,url,specified,on,the,endpoint,to,the,specified,processor;public,void,connect,cometd,producer,consumer,prodcon,throws,exception,server,server,null,cometd,endpoint,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,server,connector,connector,server,create,server,if,cometds,equals,endpoint,get,protocol,connector,get,ssl,socket,connector,server,else,connector,new,server,connector,server,connector,set,port,endpoint,get,port,connector,set,host,endpoint,get,uri,get,host,if,localhost,equals,ignore,case,endpoint,get,uri,get,host,log,warn,you,use,localhost,interface,it,means,that,no,external,connections,will,be,available,don,t,you,want,to,use,0,0,0,0,instead,all,network,interfaces,server,add,connector,connector,comet,dservlet,servlet,create,servlet,for,connector,server,connector,endpoint,connector,ref,new,connector,ref,connector,servlet,server,server,start,connectors,put,connector,key,connector,ref,else,connector,ref,increment,bayeux,server,impl,bayeux,connector,ref,servlet,get,bayeux,if,security,policy,null,bayeux,set,security,policy,security,policy,if,extensions,null,for,bayeux,server,extension,extension,extensions,bayeux,add,extension,extension,if,server,listeners,null,for,bayeux,server,bayeux,server,listener,server,listener,server,listeners,bayeux,add,listener,server,listener,prodcon,set,bayeux,bayeux
CometdComponent -> public void connect(CometdProducerConsumer prodcon) throws Exception;1491919462;Connects the URL specified on the endpoint to the specified processor.;public void connect(CometdProducerConsumer prodcon) throws Exception {_        Server server = null__        _        CometdEndpoint endpoint = prodcon.getEndpoint()__        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef == null) {_                ServerConnector connector__                server = createServer()__                if ("cometds".equals(endpoint.getProtocol())) {_                    connector = getSslSocketConnector(server)__                } else {_                    connector = new ServerConnector(server)__                }_                connector.setPort(endpoint.getPort())__                connector.setHost(endpoint.getUri().getHost())__                if ("localhost".equalsIgnoreCase(endpoint.getUri().getHost())) {_                    LOG.warn("You use localhost interface! It means that no external connections will be available."_                            + " Don't you want to use 0.0.0.0 instead (all network interfaces)?")__                }_                _                server.addConnector(connector)___                CometDServlet servlet = createServletForConnector(server, connector, endpoint)__                connectorRef = new ConnectorRef(connector, servlet, server)__                server.start()___                connectors.put(connectorKey, connectorRef)__            } else {_                connectorRef.increment()__            }__            BayeuxServerImpl bayeux = connectorRef.servlet.getBayeux()___            if (securityPolicy != null) {_                bayeux.setSecurityPolicy(securityPolicy)__            }_            if (extensions != null) {_                for (BayeuxServer.Extension extension : extensions) {_                    bayeux.addExtension(extension)__                }_            }_            if (serverListeners != null) {_                for (BayeuxServer.BayeuxServerListener serverListener : serverListeners) {_                    bayeux.addListener(serverListener)__                }_            }_            prodcon.setBayeux(bayeux)__        }_    };connects,the,url,specified,on,the,endpoint,to,the,specified,processor;public,void,connect,cometd,producer,consumer,prodcon,throws,exception,server,server,null,cometd,endpoint,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,server,connector,connector,server,create,server,if,cometds,equals,endpoint,get,protocol,connector,get,ssl,socket,connector,server,else,connector,new,server,connector,server,connector,set,port,endpoint,get,port,connector,set,host,endpoint,get,uri,get,host,if,localhost,equals,ignore,case,endpoint,get,uri,get,host,log,warn,you,use,localhost,interface,it,means,that,no,external,connections,will,be,available,don,t,you,want,to,use,0,0,0,0,instead,all,network,interfaces,server,add,connector,connector,comet,dservlet,servlet,create,servlet,for,connector,server,connector,endpoint,connector,ref,new,connector,ref,connector,servlet,server,server,start,connectors,put,connector,key,connector,ref,else,connector,ref,increment,bayeux,server,impl,bayeux,connector,ref,servlet,get,bayeux,if,security,policy,null,bayeux,set,security,policy,security,policy,if,extensions,null,for,bayeux,server,extension,extension,extensions,bayeux,add,extension,extension,if,server,listeners,null,for,bayeux,server,bayeux,server,listener,server,listener,server,listeners,bayeux,add,listener,server,listener,prodcon,set,bayeux,bayeux
CometdComponent -> public void connect(CometdProducerConsumer prodcon) throws Exception;1523968798;Connects the URL specified on the endpoint to the specified processor.;public void connect(CometdProducerConsumer prodcon) throws Exception {_        Server server = null__        _        CometdEndpoint endpoint = prodcon.getEndpoint()__        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef == null) {_                ServerConnector connector__                server = createServer()__                if ("cometds".equals(endpoint.getProtocol())) {_                    connector = getSslSocketConnector(server)__                } else {_                    connector = new ServerConnector(server)__                }_                connector.setPort(endpoint.getPort())__                connector.setHost(endpoint.getUri().getHost())__                if ("localhost".equalsIgnoreCase(endpoint.getUri().getHost())) {_                    LOG.warn("You use localhost interface! It means that no external connections will be available."_                            + " Don't you want to use 0.0.0.0 instead (all network interfaces)?")__                }_                _                server.addConnector(connector)___                CometDServlet servlet = createServletForConnector(server, connector, endpoint)__                connectorRef = new ConnectorRef(connector, servlet, server)__                server.start()___                connectors.put(connectorKey, connectorRef)__            } else {_                connectorRef.increment()__            }__            BayeuxServerImpl bayeux = connectorRef.servlet.getBayeux()___            if (securityPolicy != null) {_                bayeux.setSecurityPolicy(securityPolicy)__            }_            if (extensions != null) {_                for (BayeuxServer.Extension extension : extensions) {_                    bayeux.addExtension(extension)__                }_            }_            if (serverListeners != null) {_                for (BayeuxServer.BayeuxServerListener serverListener : serverListeners) {_                    bayeux.addListener(serverListener)__                }_            }_            prodcon.setBayeux(bayeux)__        }_    };connects,the,url,specified,on,the,endpoint,to,the,specified,processor;public,void,connect,cometd,producer,consumer,prodcon,throws,exception,server,server,null,cometd,endpoint,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,server,connector,connector,server,create,server,if,cometds,equals,endpoint,get,protocol,connector,get,ssl,socket,connector,server,else,connector,new,server,connector,server,connector,set,port,endpoint,get,port,connector,set,host,endpoint,get,uri,get,host,if,localhost,equals,ignore,case,endpoint,get,uri,get,host,log,warn,you,use,localhost,interface,it,means,that,no,external,connections,will,be,available,don,t,you,want,to,use,0,0,0,0,instead,all,network,interfaces,server,add,connector,connector,comet,dservlet,servlet,create,servlet,for,connector,server,connector,endpoint,connector,ref,new,connector,ref,connector,servlet,server,server,start,connectors,put,connector,key,connector,ref,else,connector,ref,increment,bayeux,server,impl,bayeux,connector,ref,servlet,get,bayeux,if,security,policy,null,bayeux,set,security,policy,security,policy,if,extensions,null,for,bayeux,server,extension,extension,extensions,bayeux,add,extension,extension,if,server,listeners,null,for,bayeux,server,bayeux,server,listener,server,listener,server,listeners,bayeux,add,listener,server,listener,prodcon,set,bayeux,bayeux
CometdComponent -> public void connect(CometdProducerConsumer prodcon) throws Exception;1540108158;Connects the URL specified on the endpoint to the specified processor.;public void connect(CometdProducerConsumer prodcon) throws Exception {_        Server server = null__        _        CometdEndpoint endpoint = prodcon.getEndpoint()__        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef == null) {_                ServerConnector connector__                server = createServer()__                if ("cometds".equals(endpoint.getProtocol())) {_                    connector = getSslSocketConnector(server)__                } else {_                    connector = new ServerConnector(server)__                }_                connector.setPort(endpoint.getPort())__                connector.setHost(endpoint.getUri().getHost())__                if ("localhost".equalsIgnoreCase(endpoint.getUri().getHost())) {_                    LOG.warn("You use localhost interface! It means that no external connections will be available."_                            + " Don't you want to use 0.0.0.0 instead (all network interfaces)?")__                }_                _                server.addConnector(connector)___                CometDServlet servlet = createServletForConnector(server, connector, endpoint)__                connectorRef = new ConnectorRef(connector, servlet, server)__                server.start()___                connectors.put(connectorKey, connectorRef)__            } else {_                connectorRef.increment()__            }__            BayeuxServerImpl bayeux = connectorRef.servlet.getBayeux()___            if (securityPolicy != null) {_                bayeux.setSecurityPolicy(securityPolicy)__            }_            if (extensions != null) {_                for (BayeuxServer.Extension extension : extensions) {_                    bayeux.addExtension(extension)__                }_            }_            if (serverListeners != null) {_                for (BayeuxServer.BayeuxServerListener serverListener : serverListeners) {_                    bayeux.addListener(serverListener)__                }_            }_            prodcon.setBayeux(bayeux)__        }_    };connects,the,url,specified,on,the,endpoint,to,the,specified,processor;public,void,connect,cometd,producer,consumer,prodcon,throws,exception,server,server,null,cometd,endpoint,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,server,connector,connector,server,create,server,if,cometds,equals,endpoint,get,protocol,connector,get,ssl,socket,connector,server,else,connector,new,server,connector,server,connector,set,port,endpoint,get,port,connector,set,host,endpoint,get,uri,get,host,if,localhost,equals,ignore,case,endpoint,get,uri,get,host,log,warn,you,use,localhost,interface,it,means,that,no,external,connections,will,be,available,don,t,you,want,to,use,0,0,0,0,instead,all,network,interfaces,server,add,connector,connector,comet,dservlet,servlet,create,servlet,for,connector,server,connector,endpoint,connector,ref,new,connector,ref,connector,servlet,server,server,start,connectors,put,connector,key,connector,ref,else,connector,ref,increment,bayeux,server,impl,bayeux,connector,ref,servlet,get,bayeux,if,security,policy,null,bayeux,set,security,policy,security,policy,if,extensions,null,for,bayeux,server,extension,extension,extensions,bayeux,add,extension,extension,if,server,listeners,null,for,bayeux,server,bayeux,server,listener,server,listener,server,listeners,bayeux,add,listener,server,listener,prodcon,set,bayeux,bayeux
CometdComponent -> public void connect(CometdProducerConsumer prodcon) throws Exception;1540108163;Connects the URL specified on the endpoint to the specified processor.;public void connect(CometdProducerConsumer prodcon) throws Exception {_        Server server = null__        _        CometdEndpoint endpoint = prodcon.getEndpoint()__        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef == null) {_                ServerConnector connector__                server = createServer()__                if ("cometds".equals(endpoint.getProtocol())) {_                    connector = getSslSocketConnector(server)__                } else {_                    connector = new ServerConnector(server)__                }_                connector.setPort(endpoint.getPort())__                connector.setHost(endpoint.getUri().getHost())__                if ("localhost".equalsIgnoreCase(endpoint.getUri().getHost())) {_                    LOG.warn("You use localhost interface! It means that no external connections will be available."_                            + " Don't you want to use 0.0.0.0 instead (all network interfaces)?")__                }_                _                server.addConnector(connector)___                CometDServlet servlet = createServletForConnector(server, connector, endpoint)__                connectorRef = new ConnectorRef(connector, servlet, server)__                server.start()___                connectors.put(connectorKey, connectorRef)__            } else {_                connectorRef.increment()__            }__            BayeuxServerImpl bayeux = connectorRef.servlet.getBayeux()___            if (securityPolicy != null) {_                bayeux.setSecurityPolicy(securityPolicy)__            }_            if (extensions != null) {_                for (BayeuxServer.Extension extension : extensions) {_                    bayeux.addExtension(extension)__                }_            }_            if (serverListeners != null) {_                for (BayeuxServer.BayeuxServerListener serverListener : serverListeners) {_                    bayeux.addListener(serverListener)__                }_            }_            prodcon.setBayeux(bayeux)__        }_    };connects,the,url,specified,on,the,endpoint,to,the,specified,processor;public,void,connect,cometd,producer,consumer,prodcon,throws,exception,server,server,null,cometd,endpoint,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,server,connector,connector,server,create,server,if,cometds,equals,endpoint,get,protocol,connector,get,ssl,socket,connector,server,else,connector,new,server,connector,server,connector,set,port,endpoint,get,port,connector,set,host,endpoint,get,uri,get,host,if,localhost,equals,ignore,case,endpoint,get,uri,get,host,log,warn,you,use,localhost,interface,it,means,that,no,external,connections,will,be,available,don,t,you,want,to,use,0,0,0,0,instead,all,network,interfaces,server,add,connector,connector,comet,dservlet,servlet,create,servlet,for,connector,server,connector,endpoint,connector,ref,new,connector,ref,connector,servlet,server,server,start,connectors,put,connector,key,connector,ref,else,connector,ref,increment,bayeux,server,impl,bayeux,connector,ref,servlet,get,bayeux,if,security,policy,null,bayeux,set,security,policy,security,policy,if,extensions,null,for,bayeux,server,extension,extension,extensions,bayeux,add,extension,extension,if,server,listeners,null,for,bayeux,server,bayeux,server,listener,server,listener,server,listeners,bayeux,add,listener,server,listener,prodcon,set,bayeux,bayeux
CometdComponent -> public void connect(CometdProducerConsumer prodcon) throws Exception;1547241305;Connects the URL specified on the endpoint to the specified processor.;public void connect(CometdProducerConsumer prodcon) throws Exception {_        Server server = null__        _        CometdEndpoint endpoint = prodcon.getEndpoint()__        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef == null) {_                ServerConnector connector__                server = createServer()__                if ("cometds".equals(endpoint.getProtocol())) {_                    connector = getSslSocketConnector(server)__                } else {_                    connector = new ServerConnector(server)__                }_                connector.setPort(endpoint.getPort())__                connector.setHost(endpoint.getUri().getHost())__                if ("localhost".equalsIgnoreCase(endpoint.getUri().getHost())) {_                    LOG.warn("You use localhost interface! It means that no external connections will be available."_                            + " Don't you want to use 0.0.0.0 instead (all network interfaces)?")__                }_                _                server.addConnector(connector)___                CometDServlet servlet = createServletForConnector(server, connector, endpoint)__                connectorRef = new ConnectorRef(connector, servlet, server)__                server.start()___                connectors.put(connectorKey, connectorRef)__            } else {_                connectorRef.increment()__            }__            BayeuxServerImpl bayeux = connectorRef.servlet.getBayeux()___            if (securityPolicy != null) {_                bayeux.setSecurityPolicy(securityPolicy)__            }_            if (extensions != null) {_                for (BayeuxServer.Extension extension : extensions) {_                    bayeux.addExtension(extension)__                }_            }_            if (serverListeners != null) {_                for (BayeuxServer.BayeuxServerListener serverListener : serverListeners) {_                    bayeux.addListener(serverListener)__                }_            }_            prodcon.setBayeux(bayeux)__        }_    };connects,the,url,specified,on,the,endpoint,to,the,specified,processor;public,void,connect,cometd,producer,consumer,prodcon,throws,exception,server,server,null,cometd,endpoint,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,server,connector,connector,server,create,server,if,cometds,equals,endpoint,get,protocol,connector,get,ssl,socket,connector,server,else,connector,new,server,connector,server,connector,set,port,endpoint,get,port,connector,set,host,endpoint,get,uri,get,host,if,localhost,equals,ignore,case,endpoint,get,uri,get,host,log,warn,you,use,localhost,interface,it,means,that,no,external,connections,will,be,available,don,t,you,want,to,use,0,0,0,0,instead,all,network,interfaces,server,add,connector,connector,comet,dservlet,servlet,create,servlet,for,connector,server,connector,endpoint,connector,ref,new,connector,ref,connector,servlet,server,server,start,connectors,put,connector,key,connector,ref,else,connector,ref,increment,bayeux,server,impl,bayeux,connector,ref,servlet,get,bayeux,if,security,policy,null,bayeux,set,security,policy,security,policy,if,extensions,null,for,bayeux,server,extension,extension,extensions,bayeux,add,extension,extension,if,server,listeners,null,for,bayeux,server,bayeux,server,listener,server,listener,server,listeners,bayeux,add,listener,server,listener,prodcon,set,bayeux,bayeux
CometdComponent -> public void connect(CometdProducerConsumer prodcon) throws Exception;1547623952;Connects the URL specified on the endpoint to the specified processor.;public void connect(CometdProducerConsumer prodcon) throws Exception {_        Server server = null__        _        CometdEndpoint endpoint = prodcon.getEndpoint()__        String connectorKey = endpoint.getProtocol() + ":" + endpoint.getUri().getHost() + ":" + endpoint.getPort()___        synchronized (connectors) {_            ConnectorRef connectorRef = connectors.get(connectorKey)__            if (connectorRef == null) {_                ServerConnector connector__                server = createServer()__                if ("cometds".equals(endpoint.getProtocol())) {_                    connector = getSslSocketConnector(server)__                } else {_                    connector = new ServerConnector(server)__                }_                connector.setPort(endpoint.getPort())__                connector.setHost(endpoint.getUri().getHost())__                if ("localhost".equalsIgnoreCase(endpoint.getUri().getHost())) {_                    LOG.warn("You use localhost interface! It means that no external connections will be available."_                            + " Don't you want to use 0.0.0.0 instead (all network interfaces)?")__                }_                _                server.addConnector(connector)___                CometDServlet servlet = createServletForConnector(server, connector, endpoint)__                connectorRef = new ConnectorRef(connector, servlet, server)__                server.start()___                connectors.put(connectorKey, connectorRef)__            } else {_                connectorRef.increment()__            }__            BayeuxServerImpl bayeux = connectorRef.servlet.getBayeux()___            if (securityPolicy != null) {_                bayeux.setSecurityPolicy(securityPolicy)__            }_            if (extensions != null) {_                for (BayeuxServer.Extension extension : extensions) {_                    bayeux.addExtension(extension)__                }_            }_            if (serverListeners != null) {_                for (BayeuxServer.BayeuxServerListener serverListener : serverListeners) {_                    bayeux.addListener(serverListener)__                }_            }_            prodcon.setBayeux(bayeux)__        }_    };connects,the,url,specified,on,the,endpoint,to,the,specified,processor;public,void,connect,cometd,producer,consumer,prodcon,throws,exception,server,server,null,cometd,endpoint,endpoint,prodcon,get,endpoint,string,connector,key,endpoint,get,protocol,endpoint,get,uri,get,host,endpoint,get,port,synchronized,connectors,connector,ref,connector,ref,connectors,get,connector,key,if,connector,ref,null,server,connector,connector,server,create,server,if,cometds,equals,endpoint,get,protocol,connector,get,ssl,socket,connector,server,else,connector,new,server,connector,server,connector,set,port,endpoint,get,port,connector,set,host,endpoint,get,uri,get,host,if,localhost,equals,ignore,case,endpoint,get,uri,get,host,log,warn,you,use,localhost,interface,it,means,that,no,external,connections,will,be,available,don,t,you,want,to,use,0,0,0,0,instead,all,network,interfaces,server,add,connector,connector,comet,dservlet,servlet,create,servlet,for,connector,server,connector,endpoint,connector,ref,new,connector,ref,connector,servlet,server,server,start,connectors,put,connector,key,connector,ref,else,connector,ref,increment,bayeux,server,impl,bayeux,connector,ref,servlet,get,bayeux,if,security,policy,null,bayeux,set,security,policy,security,policy,if,extensions,null,for,bayeux,server,extension,extension,extensions,bayeux,add,extension,extension,if,server,listeners,null,for,bayeux,server,bayeux,server,listener,server,listener,server,listeners,bayeux,add,listener,server,listener,prodcon,set,bayeux,bayeux
CometdComponent -> public void setExtensions(List<BayeuxServer.Extension> extensions);1434296657;To use a list of custom BayeuxServer.Extension that allows modifying incoming and outgoing requests.;public void setExtensions(List<BayeuxServer.Extension> extensions) {_        this.extensions = extensions__    };to,use,a,list,of,custom,bayeux,server,extension,that,allows,modifying,incoming,and,outgoing,requests;public,void,set,extensions,list,bayeux,server,extension,extensions,this,extensions,extensions
CometdComponent -> public void setExtensions(List<BayeuxServer.Extension> extensions);1461244720;To use a list of custom BayeuxServer.Extension that allows modifying incoming and outgoing requests.;public void setExtensions(List<BayeuxServer.Extension> extensions) {_        this.extensions = extensions__    };to,use,a,list,of,custom,bayeux,server,extension,that,allows,modifying,incoming,and,outgoing,requests;public,void,set,extensions,list,bayeux,server,extension,extensions,this,extensions,extensions
CometdComponent -> public void setExtensions(List<BayeuxServer.Extension> extensions);1461244720;To use a list of custom BayeuxServer.Extension that allows modifying incoming and outgoing requests.;public void setExtensions(List<BayeuxServer.Extension> extensions) {_        this.extensions = extensions__    };to,use,a,list,of,custom,bayeux,server,extension,that,allows,modifying,incoming,and,outgoing,requests;public,void,set,extensions,list,bayeux,server,extension,extensions,this,extensions,extensions
CometdComponent -> public void setExtensions(List<BayeuxServer.Extension> extensions);1461851621;To use a list of custom BayeuxServer.Extension that allows modifying incoming and outgoing requests.;public void setExtensions(List<BayeuxServer.Extension> extensions) {_        this.extensions = extensions__    };to,use,a,list,of,custom,bayeux,server,extension,that,allows,modifying,incoming,and,outgoing,requests;public,void,set,extensions,list,bayeux,server,extension,extensions,this,extensions,extensions
CometdComponent -> public void setExtensions(List<BayeuxServer.Extension> extensions);1461916938;To use a list of custom BayeuxServer.Extension that allows modifying incoming and outgoing requests.;public void setExtensions(List<BayeuxServer.Extension> extensions) {_        this.extensions = extensions__    };to,use,a,list,of,custom,bayeux,server,extension,that,allows,modifying,incoming,and,outgoing,requests;public,void,set,extensions,list,bayeux,server,extension,extensions,this,extensions,extensions
CometdComponent -> public void setExtensions(List<BayeuxServer.Extension> extensions);1475933627;To use a list of custom BayeuxServer.Extension that allows modifying incoming and outgoing requests.;public void setExtensions(List<BayeuxServer.Extension> extensions) {_        this.extensions = extensions__    };to,use,a,list,of,custom,bayeux,server,extension,that,allows,modifying,incoming,and,outgoing,requests;public,void,set,extensions,list,bayeux,server,extension,extensions,this,extensions,extensions
CometdComponent -> public void setExtensions(List<BayeuxServer.Extension> extensions);1482322625;To use a list of custom BayeuxServer.Extension that allows modifying incoming and outgoing requests.;public void setExtensions(List<BayeuxServer.Extension> extensions) {_        this.extensions = extensions__    };to,use,a,list,of,custom,bayeux,server,extension,that,allows,modifying,incoming,and,outgoing,requests;public,void,set,extensions,list,bayeux,server,extension,extensions,this,extensions,extensions
CometdComponent -> public void setExtensions(List<BayeuxServer.Extension> extensions);1489596811;To use a list of custom BayeuxServer.Extension that allows modifying incoming and outgoing requests.;public void setExtensions(List<BayeuxServer.Extension> extensions) {_        this.extensions = extensions__    };to,use,a,list,of,custom,bayeux,server,extension,that,allows,modifying,incoming,and,outgoing,requests;public,void,set,extensions,list,bayeux,server,extension,extensions,this,extensions,extensions
CometdComponent -> public void setExtensions(List<BayeuxServer.Extension> extensions);1491919259;To use a list of custom BayeuxServer.Extension that allows modifying incoming and outgoing requests.;public void setExtensions(List<BayeuxServer.Extension> extensions) {_        this.extensions = extensions__    };to,use,a,list,of,custom,bayeux,server,extension,that,allows,modifying,incoming,and,outgoing,requests;public,void,set,extensions,list,bayeux,server,extension,extensions,this,extensions,extensions
CometdComponent -> public void setExtensions(List<BayeuxServer.Extension> extensions);1491919462;To use a list of custom BayeuxServer.Extension that allows modifying incoming and outgoing requests.;public void setExtensions(List<BayeuxServer.Extension> extensions) {_        this.extensions = extensions__    };to,use,a,list,of,custom,bayeux,server,extension,that,allows,modifying,incoming,and,outgoing,requests;public,void,set,extensions,list,bayeux,server,extension,extensions,this,extensions,extensions
CometdComponent -> public void setExtensions(List<BayeuxServer.Extension> extensions);1491919462;To use a list of custom BayeuxServer.Extension that allows modifying incoming and outgoing requests.;public void setExtensions(List<BayeuxServer.Extension> extensions) {_        this.extensions = extensions__    };to,use,a,list,of,custom,bayeux,server,extension,that,allows,modifying,incoming,and,outgoing,requests;public,void,set,extensions,list,bayeux,server,extension,extensions,this,extensions,extensions
CometdComponent -> public void setExtensions(List<BayeuxServer.Extension> extensions);1491919462;To use a list of custom BayeuxServer.Extension that allows modifying incoming and outgoing requests.;public void setExtensions(List<BayeuxServer.Extension> extensions) {_        this.extensions = extensions__    };to,use,a,list,of,custom,bayeux,server,extension,that,allows,modifying,incoming,and,outgoing,requests;public,void,set,extensions,list,bayeux,server,extension,extensions,this,extensions,extensions
CometdComponent -> public void setExtensions(List<BayeuxServer.Extension> extensions);1523968798;To use a list of custom BayeuxServer.Extension that allows modifying incoming and outgoing requests.;public void setExtensions(List<BayeuxServer.Extension> extensions) {_        this.extensions = extensions__    };to,use,a,list,of,custom,bayeux,server,extension,that,allows,modifying,incoming,and,outgoing,requests;public,void,set,extensions,list,bayeux,server,extension,extensions,this,extensions,extensions
CometdComponent -> public void setExtensions(List<BayeuxServer.Extension> extensions);1540108158;To use a list of custom BayeuxServer.Extension that allows modifying incoming and outgoing requests.;public void setExtensions(List<BayeuxServer.Extension> extensions) {_        this.extensions = extensions__    };to,use,a,list,of,custom,bayeux,server,extension,that,allows,modifying,incoming,and,outgoing,requests;public,void,set,extensions,list,bayeux,server,extension,extensions,this,extensions,extensions
CometdComponent -> public void setExtensions(List<BayeuxServer.Extension> extensions);1540108163;To use a list of custom BayeuxServer.Extension that allows modifying incoming and outgoing requests.;public void setExtensions(List<BayeuxServer.Extension> extensions) {_        this.extensions = extensions__    };to,use,a,list,of,custom,bayeux,server,extension,that,allows,modifying,incoming,and,outgoing,requests;public,void,set,extensions,list,bayeux,server,extension,extensions,this,extensions,extensions
CometdComponent -> public void setExtensions(List<BayeuxServer.Extension> extensions);1547241305;To use a list of custom BayeuxServer.Extension that allows modifying incoming and outgoing requests.;public void setExtensions(List<BayeuxServer.Extension> extensions) {_        this.extensions = extensions__    };to,use,a,list,of,custom,bayeux,server,extension,that,allows,modifying,incoming,and,outgoing,requests;public,void,set,extensions,list,bayeux,server,extension,extensions,this,extensions,extensions
CometdComponent -> public void setExtensions(List<BayeuxServer.Extension> extensions);1547623952;To use a list of custom BayeuxServer.Extension that allows modifying incoming and outgoing requests.;public void setExtensions(List<BayeuxServer.Extension> extensions) {_        this.extensions = extensions__    };to,use,a,list,of,custom,bayeux,server,extension,that,allows,modifying,incoming,and,outgoing,requests;public,void,set,extensions,list,bayeux,server,extension,extensions,this,extensions,extensions
CometdComponent -> public void setSslContextParameters(SSLContextParameters sslContextParameters);1434296657;To configure security using SSLContextParameters;public void setSslContextParameters(SSLContextParameters sslContextParameters) {_        this.sslContextParameters = sslContextParameters__    };to,configure,security,using,sslcontext,parameters;public,void,set,ssl,context,parameters,sslcontext,parameters,ssl,context,parameters,this,ssl,context,parameters,ssl,context,parameters
CometdComponent -> public void setSslContextParameters(SSLContextParameters sslContextParameters);1461244720;To configure security using SSLContextParameters;public void setSslContextParameters(SSLContextParameters sslContextParameters) {_        this.sslContextParameters = sslContextParameters__    };to,configure,security,using,sslcontext,parameters;public,void,set,ssl,context,parameters,sslcontext,parameters,ssl,context,parameters,this,ssl,context,parameters,ssl,context,parameters
CometdComponent -> public void setSslContextParameters(SSLContextParameters sslContextParameters);1461244720;To configure security using SSLContextParameters;public void setSslContextParameters(SSLContextParameters sslContextParameters) {_        this.sslContextParameters = sslContextParameters__    };to,configure,security,using,sslcontext,parameters;public,void,set,ssl,context,parameters,sslcontext,parameters,ssl,context,parameters,this,ssl,context,parameters,ssl,context,parameters
CometdComponent -> public void setSslContextParameters(SSLContextParameters sslContextParameters);1461851621;To configure security using SSLContextParameters;public void setSslContextParameters(SSLContextParameters sslContextParameters) {_        this.sslContextParameters = sslContextParameters__    };to,configure,security,using,sslcontext,parameters;public,void,set,ssl,context,parameters,sslcontext,parameters,ssl,context,parameters,this,ssl,context,parameters,ssl,context,parameters
CometdComponent -> public void setSslContextParameters(SSLContextParameters sslContextParameters);1461916938;To configure security using SSLContextParameters;public void setSslContextParameters(SSLContextParameters sslContextParameters) {_        this.sslContextParameters = sslContextParameters__    };to,configure,security,using,sslcontext,parameters;public,void,set,ssl,context,parameters,sslcontext,parameters,ssl,context,parameters,this,ssl,context,parameters,ssl,context,parameters
CometdComponent -> public void setSslContextParameters(SSLContextParameters sslContextParameters);1475933627;To configure security using SSLContextParameters;public void setSslContextParameters(SSLContextParameters sslContextParameters) {_        this.sslContextParameters = sslContextParameters__    };to,configure,security,using,sslcontext,parameters;public,void,set,ssl,context,parameters,sslcontext,parameters,ssl,context,parameters,this,ssl,context,parameters,ssl,context,parameters
CometdComponent -> public void setSslContextParameters(SSLContextParameters sslContextParameters);1482322625;To configure security using SSLContextParameters;public void setSslContextParameters(SSLContextParameters sslContextParameters) {_        this.sslContextParameters = sslContextParameters__    };to,configure,security,using,sslcontext,parameters;public,void,set,ssl,context,parameters,sslcontext,parameters,ssl,context,parameters,this,ssl,context,parameters,ssl,context,parameters
CometdComponent -> public void setSslContextParameters(SSLContextParameters sslContextParameters);1489596811;To configure security using SSLContextParameters;public void setSslContextParameters(SSLContextParameters sslContextParameters) {_        this.sslContextParameters = sslContextParameters__    };to,configure,security,using,sslcontext,parameters;public,void,set,ssl,context,parameters,sslcontext,parameters,ssl,context,parameters,this,ssl,context,parameters,ssl,context,parameters
CometdComponent -> public void setSslContextParameters(SSLContextParameters sslContextParameters);1491919259;To configure security using SSLContextParameters;public void setSslContextParameters(SSLContextParameters sslContextParameters) {_        this.sslContextParameters = sslContextParameters__    };to,configure,security,using,sslcontext,parameters;public,void,set,ssl,context,parameters,sslcontext,parameters,ssl,context,parameters,this,ssl,context,parameters,ssl,context,parameters
CometdComponent -> public void setSslContextParameters(SSLContextParameters sslContextParameters);1491919462;To configure security using SSLContextParameters;public void setSslContextParameters(SSLContextParameters sslContextParameters) {_        this.sslContextParameters = sslContextParameters__    };to,configure,security,using,sslcontext,parameters;public,void,set,ssl,context,parameters,sslcontext,parameters,ssl,context,parameters,this,ssl,context,parameters,ssl,context,parameters
CometdComponent -> public void setSslContextParameters(SSLContextParameters sslContextParameters);1491919462;To configure security using SSLContextParameters;public void setSslContextParameters(SSLContextParameters sslContextParameters) {_        this.sslContextParameters = sslContextParameters__    };to,configure,security,using,sslcontext,parameters;public,void,set,ssl,context,parameters,sslcontext,parameters,ssl,context,parameters,this,ssl,context,parameters,ssl,context,parameters
CometdComponent -> public void setSslContextParameters(SSLContextParameters sslContextParameters);1491919462;To configure security using SSLContextParameters;public void setSslContextParameters(SSLContextParameters sslContextParameters) {_        this.sslContextParameters = sslContextParameters__    };to,configure,security,using,sslcontext,parameters;public,void,set,ssl,context,parameters,sslcontext,parameters,ssl,context,parameters,this,ssl,context,parameters,ssl,context,parameters
CometdComponent -> public void setSslContextParameters(SSLContextParameters sslContextParameters);1523968798;To configure security using SSLContextParameters;public void setSslContextParameters(SSLContextParameters sslContextParameters) {_        this.sslContextParameters = sslContextParameters__    };to,configure,security,using,sslcontext,parameters;public,void,set,ssl,context,parameters,sslcontext,parameters,ssl,context,parameters,this,ssl,context,parameters,ssl,context,parameters
CometdComponent -> public void setSslContextParameters(SSLContextParameters sslContextParameters);1540108158;To configure security using SSLContextParameters;public void setSslContextParameters(SSLContextParameters sslContextParameters) {_        this.sslContextParameters = sslContextParameters__    };to,configure,security,using,sslcontext,parameters;public,void,set,ssl,context,parameters,sslcontext,parameters,ssl,context,parameters,this,ssl,context,parameters,ssl,context,parameters
CometdComponent -> public void setSslContextParameters(SSLContextParameters sslContextParameters);1540108163;To configure security using SSLContextParameters;public void setSslContextParameters(SSLContextParameters sslContextParameters) {_        this.sslContextParameters = sslContextParameters__    };to,configure,security,using,sslcontext,parameters;public,void,set,ssl,context,parameters,sslcontext,parameters,ssl,context,parameters,this,ssl,context,parameters,ssl,context,parameters
CometdComponent -> public void setSslContextParameters(SSLContextParameters sslContextParameters);1547241305;To configure security using SSLContextParameters;public void setSslContextParameters(SSLContextParameters sslContextParameters) {_        this.sslContextParameters = sslContextParameters__    };to,configure,security,using,sslcontext,parameters;public,void,set,ssl,context,parameters,sslcontext,parameters,ssl,context,parameters,this,ssl,context,parameters,ssl,context,parameters
CometdComponent -> public void setSslContextParameters(SSLContextParameters sslContextParameters);1547623952;To configure security using SSLContextParameters;public void setSslContextParameters(SSLContextParameters sslContextParameters) {_        this.sslContextParameters = sslContextParameters__    };to,configure,security,using,sslcontext,parameters;public,void,set,ssl,context,parameters,sslcontext,parameters,ssl,context,parameters,this,ssl,context,parameters,ssl,context,parameters
CometdComponent -> public void setSslKeyPassword(String sslKeyPassword);1434296657;The password for the keystore when using SSL.;public void setSslKeyPassword(String sslKeyPassword) {_        this.sslKeyPassword = sslKeyPassword__    };the,password,for,the,keystore,when,using,ssl;public,void,set,ssl,key,password,string,ssl,key,password,this,ssl,key,password,ssl,key,password
CometdComponent -> public void setSslKeyPassword(String sslKeyPassword);1461244720;The password for the keystore when using SSL.;public void setSslKeyPassword(String sslKeyPassword) {_        this.sslKeyPassword = sslKeyPassword__    };the,password,for,the,keystore,when,using,ssl;public,void,set,ssl,key,password,string,ssl,key,password,this,ssl,key,password,ssl,key,password
CometdComponent -> public void setSslKeyPassword(String sslKeyPassword);1461244720;The password for the keystore when using SSL.;public void setSslKeyPassword(String sslKeyPassword) {_        this.sslKeyPassword = sslKeyPassword__    };the,password,for,the,keystore,when,using,ssl;public,void,set,ssl,key,password,string,ssl,key,password,this,ssl,key,password,ssl,key,password
CometdComponent -> public void setSslKeyPassword(String sslKeyPassword);1461851621;The password for the keystore when using SSL.;public void setSslKeyPassword(String sslKeyPassword) {_        this.sslKeyPassword = sslKeyPassword__    };the,password,for,the,keystore,when,using,ssl;public,void,set,ssl,key,password,string,ssl,key,password,this,ssl,key,password,ssl,key,password
CometdComponent -> public void setSslKeyPassword(String sslKeyPassword);1461916938;The password for the keystore when using SSL.;public void setSslKeyPassword(String sslKeyPassword) {_        this.sslKeyPassword = sslKeyPassword__    };the,password,for,the,keystore,when,using,ssl;public,void,set,ssl,key,password,string,ssl,key,password,this,ssl,key,password,ssl,key,password
CometdComponent -> public void setSslKeyPassword(String sslKeyPassword);1475933627;The password for the keystore when using SSL.;public void setSslKeyPassword(String sslKeyPassword) {_        this.sslKeyPassword = sslKeyPassword__    };the,password,for,the,keystore,when,using,ssl;public,void,set,ssl,key,password,string,ssl,key,password,this,ssl,key,password,ssl,key,password
CometdComponent -> public void setSslKeyPassword(String sslKeyPassword);1482322625;The password for the keystore when using SSL.;public void setSslKeyPassword(String sslKeyPassword) {_        this.sslKeyPassword = sslKeyPassword__    };the,password,for,the,keystore,when,using,ssl;public,void,set,ssl,key,password,string,ssl,key,password,this,ssl,key,password,ssl,key,password
CometdComponent -> public void setSslKeyPassword(String sslKeyPassword);1489596811;The password for the keystore when using SSL.;public void setSslKeyPassword(String sslKeyPassword) {_        this.sslKeyPassword = sslKeyPassword__    };the,password,for,the,keystore,when,using,ssl;public,void,set,ssl,key,password,string,ssl,key,password,this,ssl,key,password,ssl,key,password
CometdComponent -> public void setSslKeyPassword(String sslKeyPassword);1491919259;The password for the keystore when using SSL.;public void setSslKeyPassword(String sslKeyPassword) {_        this.sslKeyPassword = sslKeyPassword__    };the,password,for,the,keystore,when,using,ssl;public,void,set,ssl,key,password,string,ssl,key,password,this,ssl,key,password,ssl,key,password
CometdComponent -> public void setSslKeyPassword(String sslKeyPassword);1491919462;The password for the keystore when using SSL.;public void setSslKeyPassword(String sslKeyPassword) {_        this.sslKeyPassword = sslKeyPassword__    };the,password,for,the,keystore,when,using,ssl;public,void,set,ssl,key,password,string,ssl,key,password,this,ssl,key,password,ssl,key,password
CometdComponent -> public void setSslKeyPassword(String sslKeyPassword);1491919462;The password for the keystore when using SSL.;public void setSslKeyPassword(String sslKeyPassword) {_        this.sslKeyPassword = sslKeyPassword__    };the,password,for,the,keystore,when,using,ssl;public,void,set,ssl,key,password,string,ssl,key,password,this,ssl,key,password,ssl,key,password
CometdComponent -> public void setSslKeyPassword(String sslKeyPassword);1491919462;The password for the keystore when using SSL.;public void setSslKeyPassword(String sslKeyPassword) {_        this.sslKeyPassword = sslKeyPassword__    };the,password,for,the,keystore,when,using,ssl;public,void,set,ssl,key,password,string,ssl,key,password,this,ssl,key,password,ssl,key,password
CometdComponent -> public void setSslKeyPassword(String sslKeyPassword);1523968798;The password for the keystore when using SSL.;public void setSslKeyPassword(String sslKeyPassword) {_        this.sslKeyPassword = sslKeyPassword__    };the,password,for,the,keystore,when,using,ssl;public,void,set,ssl,key,password,string,ssl,key,password,this,ssl,key,password,ssl,key,password
CometdComponent -> public void setSslKeyPassword(String sslKeyPassword);1540108158;The password for the keystore when using SSL.;public void setSslKeyPassword(String sslKeyPassword) {_        this.sslKeyPassword = sslKeyPassword__    };the,password,for,the,keystore,when,using,ssl;public,void,set,ssl,key,password,string,ssl,key,password,this,ssl,key,password,ssl,key,password
CometdComponent -> public void setSslKeyPassword(String sslKeyPassword);1540108163;The password for the keystore when using SSL.;public void setSslKeyPassword(String sslKeyPassword) {_        this.sslKeyPassword = sslKeyPassword__    };the,password,for,the,keystore,when,using,ssl;public,void,set,ssl,key,password,string,ssl,key,password,this,ssl,key,password,ssl,key,password
CometdComponent -> public void setSslKeyPassword(String sslKeyPassword);1547241305;The password for the keystore when using SSL.;public void setSslKeyPassword(String sslKeyPassword) {_        this.sslKeyPassword = sslKeyPassword__    };the,password,for,the,keystore,when,using,ssl;public,void,set,ssl,key,password,string,ssl,key,password,this,ssl,key,password,ssl,key,password
CometdComponent -> public void setSslKeyPassword(String sslKeyPassword);1547623952;The password for the keystore when using SSL.;public void setSslKeyPassword(String sslKeyPassword) {_        this.sslKeyPassword = sslKeyPassword__    };the,password,for,the,keystore,when,using,ssl;public,void,set,ssl,key,password,string,ssl,key,password,this,ssl,key,password,ssl,key,password
CometdComponent -> public void setSslKeystore(String sslKeystore);1434296657;The path to the keystore.;public void setSslKeystore(String sslKeystore) {_        this.sslKeystore = sslKeystore__    };the,path,to,the,keystore;public,void,set,ssl,keystore,string,ssl,keystore,this,ssl,keystore,ssl,keystore
CometdComponent -> public void setSslKeystore(String sslKeystore);1461244720;The path to the keystore.;public void setSslKeystore(String sslKeystore) {_        this.sslKeystore = sslKeystore__    };the,path,to,the,keystore;public,void,set,ssl,keystore,string,ssl,keystore,this,ssl,keystore,ssl,keystore
CometdComponent -> public void setSslKeystore(String sslKeystore);1461244720;The path to the keystore.;public void setSslKeystore(String sslKeystore) {_        this.sslKeystore = sslKeystore__    };the,path,to,the,keystore;public,void,set,ssl,keystore,string,ssl,keystore,this,ssl,keystore,ssl,keystore
CometdComponent -> public void setSslKeystore(String sslKeystore);1461851621;The path to the keystore.;public void setSslKeystore(String sslKeystore) {_        this.sslKeystore = sslKeystore__    };the,path,to,the,keystore;public,void,set,ssl,keystore,string,ssl,keystore,this,ssl,keystore,ssl,keystore
CometdComponent -> public void setSslKeystore(String sslKeystore);1461916938;The path to the keystore.;public void setSslKeystore(String sslKeystore) {_        this.sslKeystore = sslKeystore__    };the,path,to,the,keystore;public,void,set,ssl,keystore,string,ssl,keystore,this,ssl,keystore,ssl,keystore
CometdComponent -> public void setSslKeystore(String sslKeystore);1475933627;The path to the keystore.;public void setSslKeystore(String sslKeystore) {_        this.sslKeystore = sslKeystore__    };the,path,to,the,keystore;public,void,set,ssl,keystore,string,ssl,keystore,this,ssl,keystore,ssl,keystore
CometdComponent -> public void setSslKeystore(String sslKeystore);1482322625;The path to the keystore.;public void setSslKeystore(String sslKeystore) {_        this.sslKeystore = sslKeystore__    };the,path,to,the,keystore;public,void,set,ssl,keystore,string,ssl,keystore,this,ssl,keystore,ssl,keystore
CometdComponent -> public void setSslKeystore(String sslKeystore);1489596811;The path to the keystore.;public void setSslKeystore(String sslKeystore) {_        this.sslKeystore = sslKeystore__    };the,path,to,the,keystore;public,void,set,ssl,keystore,string,ssl,keystore,this,ssl,keystore,ssl,keystore
CometdComponent -> public void setSslKeystore(String sslKeystore);1491919259;The path to the keystore.;public void setSslKeystore(String sslKeystore) {_        this.sslKeystore = sslKeystore__    };the,path,to,the,keystore;public,void,set,ssl,keystore,string,ssl,keystore,this,ssl,keystore,ssl,keystore
CometdComponent -> public void setSslKeystore(String sslKeystore);1491919462;The path to the keystore.;public void setSslKeystore(String sslKeystore) {_        this.sslKeystore = sslKeystore__    };the,path,to,the,keystore;public,void,set,ssl,keystore,string,ssl,keystore,this,ssl,keystore,ssl,keystore
CometdComponent -> public void setSslKeystore(String sslKeystore);1491919462;The path to the keystore.;public void setSslKeystore(String sslKeystore) {_        this.sslKeystore = sslKeystore__    };the,path,to,the,keystore;public,void,set,ssl,keystore,string,ssl,keystore,this,ssl,keystore,ssl,keystore
CometdComponent -> public void setSslKeystore(String sslKeystore);1491919462;The path to the keystore.;public void setSslKeystore(String sslKeystore) {_        this.sslKeystore = sslKeystore__    };the,path,to,the,keystore;public,void,set,ssl,keystore,string,ssl,keystore,this,ssl,keystore,ssl,keystore
CometdComponent -> public void setSslKeystore(String sslKeystore);1523968798;The path to the keystore.;public void setSslKeystore(String sslKeystore) {_        this.sslKeystore = sslKeystore__    };the,path,to,the,keystore;public,void,set,ssl,keystore,string,ssl,keystore,this,ssl,keystore,ssl,keystore
CometdComponent -> public void setSslKeystore(String sslKeystore);1540108158;The path to the keystore.;public void setSslKeystore(String sslKeystore) {_        this.sslKeystore = sslKeystore__    };the,path,to,the,keystore;public,void,set,ssl,keystore,string,ssl,keystore,this,ssl,keystore,ssl,keystore
CometdComponent -> public void setSslKeystore(String sslKeystore);1540108163;The path to the keystore.;public void setSslKeystore(String sslKeystore) {_        this.sslKeystore = sslKeystore__    };the,path,to,the,keystore;public,void,set,ssl,keystore,string,ssl,keystore,this,ssl,keystore,ssl,keystore
CometdComponent -> public void setSslKeystore(String sslKeystore);1547241305;The path to the keystore.;public void setSslKeystore(String sslKeystore) {_        this.sslKeystore = sslKeystore__    };the,path,to,the,keystore;public,void,set,ssl,keystore,string,ssl,keystore,this,ssl,keystore,ssl,keystore
CometdComponent -> public void setSslKeystore(String sslKeystore);1547623952;The path to the keystore.;public void setSslKeystore(String sslKeystore) {_        this.sslKeystore = sslKeystore__    };the,path,to,the,keystore;public,void,set,ssl,keystore,string,ssl,keystore,this,ssl,keystore,ssl,keystore
