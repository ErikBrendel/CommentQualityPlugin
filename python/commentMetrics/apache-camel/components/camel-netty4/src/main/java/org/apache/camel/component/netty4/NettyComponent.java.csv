# id;timestamp;commentText;codeText;commentWords;codeWords
NettyComponent -> public void setDelimiter(TextLineDelimiter delimiter);1470118430;The delimiter to use for the textline codec. Possible values are LINE and NULL._@param delimiter;public void setDelimiter(TextLineDelimiter delimiter) {_        getConfigurationOrCreate().setDelimiter(delimiter)__    };the,delimiter,to,use,for,the,textline,codec,possible,values,are,line,and,null,param,delimiter;public,void,set,delimiter,text,line,delimiter,delimiter,get,configuration,or,create,set,delimiter,delimiter
NettyComponent -> public void setDelimiter(TextLineDelimiter delimiter);1473234297;The delimiter to use for the textline codec. Possible values are LINE and NULL._@param delimiter;public void setDelimiter(TextLineDelimiter delimiter) {_        getConfigurationOrCreate().setDelimiter(delimiter)__    };the,delimiter,to,use,for,the,textline,codec,possible,values,are,line,and,null,param,delimiter;public,void,set,delimiter,text,line,delimiter,delimiter,get,configuration,or,create,set,delimiter,delimiter
NettyComponent -> public void setKeyStoreResource(String keyStoreResource);1470118430;Client side certificate keystore to be used for encryption. Is loaded by default from classpath,_but you can prefix with "classpath:", "file:", or "http:" to load the resource from different systems._@param keyStoreResource;public void setKeyStoreResource(String keyStoreResource) {_        getConfigurationOrCreate().setKeyStoreResource(keyStoreResource)__    };client,side,certificate,keystore,to,be,used,for,encryption,is,loaded,by,default,from,classpath,but,you,can,prefix,with,classpath,file,or,http,to,load,the,resource,from,different,systems,param,key,store,resource;public,void,set,key,store,resource,string,key,store,resource,get,configuration,or,create,set,key,store,resource,key,store,resource
NettyComponent -> public void setKeyStoreResource(String keyStoreResource);1473234297;Client side certificate keystore to be used for encryption. Is loaded by default from classpath,_but you can prefix with "classpath:", "file:", or "http:" to load the resource from different systems._@param keyStoreResource;public void setKeyStoreResource(String keyStoreResource) {_        getConfigurationOrCreate().setKeyStoreResource(keyStoreResource)__    };client,side,certificate,keystore,to,be,used,for,encryption,is,loaded,by,default,from,classpath,but,you,can,prefix,with,classpath,file,or,http,to,load,the,resource,from,different,systems,param,key,store,resource;public,void,set,key,store,resource,string,key,store,resource,get,configuration,or,create,set,key,store,resource,key,store,resource
NettyComponent -> public void setProducerPoolMinEvictableIdle(long producerPoolMinEvictableIdle);1470118430;Sets the minimum amount of time (value in millis) an object may sit idle in the pool before it is eligible for eviction by the idle object evictor._@param producerPoolMinEvictableIdle;public void setProducerPoolMinEvictableIdle(long producerPoolMinEvictableIdle) {_        getConfigurationOrCreate().setProducerPoolMinEvictableIdle(producerPoolMinEvictableIdle)__    };sets,the,minimum,amount,of,time,value,in,millis,an,object,may,sit,idle,in,the,pool,before,it,is,eligible,for,eviction,by,the,idle,object,evictor,param,producer,pool,min,evictable,idle;public,void,set,producer,pool,min,evictable,idle,long,producer,pool,min,evictable,idle,get,configuration,or,create,set,producer,pool,min,evictable,idle,producer,pool,min,evictable,idle
NettyComponent -> public void setProducerPoolMinEvictableIdle(long producerPoolMinEvictableIdle);1473234297;Sets the minimum amount of time (value in millis) an object may sit idle in the pool before it is eligible for eviction by the idle object evictor._@param producerPoolMinEvictableIdle;public void setProducerPoolMinEvictableIdle(long producerPoolMinEvictableIdle) {_        getConfigurationOrCreate().setProducerPoolMinEvictableIdle(producerPoolMinEvictableIdle)__    };sets,the,minimum,amount,of,time,value,in,millis,an,object,may,sit,idle,in,the,pool,before,it,is,eligible,for,eviction,by,the,idle,object,evictor,param,producer,pool,min,evictable,idle;public,void,set,producer,pool,min,evictable,idle,long,producer,pool,min,evictable,idle,get,configuration,or,create,set,producer,pool,min,evictable,idle,producer,pool,min,evictable,idle
NettyComponent -> public void setWorkerGroup(EventLoopGroup workerGroup);1470118430;To use a explicit EventLoopGroup as the boss thread pool._For example to share a thread pool with multiple consumers. By default each consumer has their own boss pool with 1 core thread._@param workerGroup;public void setWorkerGroup(EventLoopGroup workerGroup) {_        getConfigurationOrCreate().setWorkerGroup(workerGroup)__    };to,use,a,explicit,event,loop,group,as,the,boss,thread,pool,for,example,to,share,a,thread,pool,with,multiple,consumers,by,default,each,consumer,has,their,own,boss,pool,with,1,core,thread,param,worker,group;public,void,set,worker,group,event,loop,group,worker,group,get,configuration,or,create,set,worker,group,worker,group
NettyComponent -> public void setWorkerGroup(EventLoopGroup workerGroup);1473234297;To use a explicit EventLoopGroup as the boss thread pool._For example to share a thread pool with multiple consumers. By default each consumer has their own boss pool with 1 core thread._@param workerGroup;public void setWorkerGroup(EventLoopGroup workerGroup) {_        getConfigurationOrCreate().setWorkerGroup(workerGroup)__    };to,use,a,explicit,event,loop,group,as,the,boss,thread,pool,for,example,to,share,a,thread,pool,with,multiple,consumers,by,default,each,consumer,has,their,own,boss,pool,with,1,core,thread,param,worker,group;public,void,set,worker,group,event,loop,group,worker,group,get,configuration,or,create,set,worker,group,worker,group
NettyComponent -> public void setProtocol(String protocol);1470118430;The protocol to use which can be tcp or udp._@param protocol;public void setProtocol(String protocol) {_        getConfigurationOrCreate().setProtocol(protocol)__    };the,protocol,to,use,which,can,be,tcp,or,udp,param,protocol;public,void,set,protocol,string,protocol,get,configuration,or,create,set,protocol,protocol
NettyComponent -> public void setProtocol(String protocol);1473234297;The protocol to use which can be tcp or udp._@param protocol;public void setProtocol(String protocol) {_        getConfigurationOrCreate().setProtocol(protocol)__    };the,protocol,to,use,which,can,be,tcp,or,udp,param,protocol;public,void,set,protocol,string,protocol,get,configuration,or,create,set,protocol,protocol
NettyComponent -> public void setSync(boolean sync);1470118430;Setting to set endpoint as one-way or request-response_@param sync;public void setSync(boolean sync) {_        getConfigurationOrCreate().setSync(sync)__    };setting,to,set,endpoint,as,one,way,or,request,response,param,sync;public,void,set,sync,boolean,sync,get,configuration,or,create,set,sync,sync
NettyComponent -> public void setSync(boolean sync);1473234297;Setting to set endpoint as one-way or request-response_@param sync;public void setSync(boolean sync) {_        getConfigurationOrCreate().setSync(sync)__    };setting,to,set,endpoint,as,one,way,or,request,response,param,sync;public,void,set,sync,boolean,sync,get,configuration,or,create,set,sync,sync
NettyComponent -> public int getReconnectInterval();1470118430;Used if reconnect and clientMode is enabled. The interval in milli seconds to attempt reconnection;public int getReconnectInterval() {_        return getConfigurationOrCreate().getReconnectInterval()__    };used,if,reconnect,and,client,mode,is,enabled,the,interval,in,milli,seconds,to,attempt,reconnection;public,int,get,reconnect,interval,return,get,configuration,or,create,get,reconnect,interval
NettyComponent -> public int getReconnectInterval();1473234297;Used if reconnect and clientMode is enabled. The interval in milli seconds to attempt reconnection;public int getReconnectInterval() {_        return getConfigurationOrCreate().getReconnectInterval()__    };used,if,reconnect,and,client,mode,is,enabled,the,interval,in,milli,seconds,to,attempt,reconnection;public,int,get,reconnect,interval,return,get,configuration,or,create,get,reconnect,interval
NettyComponent -> public void setEncoding(String encoding);1470118430;The encoding (a charset name) to use for the textline codec. If not provided, Camel will use the JVM default Charset._@param encoding;public void setEncoding(String encoding) {_        getConfigurationOrCreate().setEncoding(encoding)__    };the,encoding,a,charset,name,to,use,for,the,textline,codec,if,not,provided,camel,will,use,the,jvm,default,charset,param,encoding;public,void,set,encoding,string,encoding,get,configuration,or,create,set,encoding,encoding
NettyComponent -> public void setEncoding(String encoding);1473234297;The encoding (a charset name) to use for the textline codec. If not provided, Camel will use the JVM default Charset._@param encoding;public void setEncoding(String encoding) {_        getConfigurationOrCreate().setEncoding(encoding)__    };the,encoding,a,charset,name,to,use,for,the,textline,codec,if,not,provided,camel,will,use,the,jvm,default,charset,param,encoding;public,void,set,encoding,string,encoding,get,configuration,or,create,set,encoding,encoding
NettyComponent -> public void setLazyChannelCreation(boolean lazyChannelCreation);1470118430;Channels can be lazily created to avoid exceptions, if the remote server is not up and running when the Camel producer is started._@param lazyChannelCreation;public void setLazyChannelCreation(boolean lazyChannelCreation) {_        getConfigurationOrCreate().setLazyChannelCreation(lazyChannelCreation)__    };channels,can,be,lazily,created,to,avoid,exceptions,if,the,remote,server,is,not,up,and,running,when,the,camel,producer,is,started,param,lazy,channel,creation;public,void,set,lazy,channel,creation,boolean,lazy,channel,creation,get,configuration,or,create,set,lazy,channel,creation,lazy,channel,creation
NettyComponent -> public void setLazyChannelCreation(boolean lazyChannelCreation);1473234297;Channels can be lazily created to avoid exceptions, if the remote server is not up and running when the Camel producer is started._@param lazyChannelCreation;public void setLazyChannelCreation(boolean lazyChannelCreation) {_        getConfigurationOrCreate().setLazyChannelCreation(lazyChannelCreation)__    };channels,can,be,lazily,created,to,avoid,exceptions,if,the,remote,server,is,not,up,and,running,when,the,camel,producer,is,started,param,lazy,channel,creation;public,void,set,lazy,channel,creation,boolean,lazy,channel,creation,get,configuration,or,create,set,lazy,channel,creation,lazy,channel,creation
NettyComponent -> public void setDecoderMaxLineLength(int decoderMaxLineLength);1470118430;The max line length to use for the textline codec._@param decoderMaxLineLength;public void setDecoderMaxLineLength(int decoderMaxLineLength) {_        getConfigurationOrCreate().setDecoderMaxLineLength(decoderMaxLineLength)__    };the,max,line,length,to,use,for,the,textline,codec,param,decoder,max,line,length;public,void,set,decoder,max,line,length,int,decoder,max,line,length,get,configuration,or,create,set,decoder,max,line,length,decoder,max,line,length
NettyComponent -> public void setDecoderMaxLineLength(int decoderMaxLineLength);1473234297;The max line length to use for the textline codec._@param decoderMaxLineLength;public void setDecoderMaxLineLength(int decoderMaxLineLength) {_        getConfigurationOrCreate().setDecoderMaxLineLength(decoderMaxLineLength)__    };the,max,line,length,to,use,for,the,textline,codec,param,decoder,max,line,length;public,void,set,decoder,max,line,length,int,decoder,max,line,length,get,configuration,or,create,set,decoder,max,line,length,decoder,max,line,length
NettyComponent -> public void setProducerPoolMaxActive(int producerPoolMaxActive);1470118430;Sets the cap on the number of objects that can be allocated by the pool_(checked out to clients, or idle awaiting checkout) at a given time. Use a negative value for no limit._@param producerPoolMaxActive;public void setProducerPoolMaxActive(int producerPoolMaxActive) {_        getConfigurationOrCreate().setProducerPoolMaxActive(producerPoolMaxActive)__    };sets,the,cap,on,the,number,of,objects,that,can,be,allocated,by,the,pool,checked,out,to,clients,or,idle,awaiting,checkout,at,a,given,time,use,a,negative,value,for,no,limit,param,producer,pool,max,active;public,void,set,producer,pool,max,active,int,producer,pool,max,active,get,configuration,or,create,set,producer,pool,max,active,producer,pool,max,active
NettyComponent -> public void setProducerPoolMaxActive(int producerPoolMaxActive);1473234297;Sets the cap on the number of objects that can be allocated by the pool_(checked out to clients, or idle awaiting checkout) at a given time. Use a negative value for no limit._@param producerPoolMaxActive;public void setProducerPoolMaxActive(int producerPoolMaxActive) {_        getConfigurationOrCreate().setProducerPoolMaxActive(producerPoolMaxActive)__    };sets,the,cap,on,the,number,of,objects,that,can,be,allocated,by,the,pool,checked,out,to,clients,or,idle,awaiting,checkout,at,a,given,time,use,a,negative,value,for,no,limit,param,producer,pool,max,active;public,void,set,producer,pool,max,active,int,producer,pool,max,active,get,configuration,or,create,set,producer,pool,max,active,producer,pool,max,active
NettyComponent -> public void setUdpConnectionlessSending(boolean udpConnectionlessSending);1470118430;This option supports connection less udp sending which is a real fire and forget._A connected udp send receive the PortUnreachableException if no one is listen on the receiving port._@param udpConnectionlessSending;public void setUdpConnectionlessSending(boolean udpConnectionlessSending) {_        getConfigurationOrCreate().setUdpConnectionlessSending(udpConnectionlessSending)__    };this,option,supports,connection,less,udp,sending,which,is,a,real,fire,and,forget,a,connected,udp,send,receive,the,port,unreachable,exception,if,no,one,is,listen,on,the,receiving,port,param,udp,connectionless,sending;public,void,set,udp,connectionless,sending,boolean,udp,connectionless,sending,get,configuration,or,create,set,udp,connectionless,sending,udp,connectionless,sending
NettyComponent -> public void setUdpConnectionlessSending(boolean udpConnectionlessSending);1473234297;This option supports connection less udp sending which is a real fire and forget._A connected udp send receive the PortUnreachableException if no one is listen on the receiving port._@param udpConnectionlessSending;public void setUdpConnectionlessSending(boolean udpConnectionlessSending) {_        getConfigurationOrCreate().setUdpConnectionlessSending(udpConnectionlessSending)__    };this,option,supports,connection,less,udp,sending,which,is,a,real,fire,and,forget,a,connected,udp,send,receive,the,port,unreachable,exception,if,no,one,is,listen,on,the,receiving,port,param,udp,connectionless,sending;public,void,set,udp,connectionless,sending,boolean,udp,connectionless,sending,get,configuration,or,create,set,udp,connectionless,sending,udp,connectionless,sending
NettyComponent -> public void setKeyStoreFormat(String keyStoreFormat);1470118430;Keystore format to be used for payload encryption. Defaults to "JKS" if not set_@param keyStoreFormat;public void setKeyStoreFormat(String keyStoreFormat) {_        getConfigurationOrCreate().setKeyStoreFormat(keyStoreFormat)__    };keystore,format,to,be,used,for,payload,encryption,defaults,to,jks,if,not,set,param,key,store,format;public,void,set,key,store,format,string,key,store,format,get,configuration,or,create,set,key,store,format,key,store,format
NettyComponent -> public void setKeyStoreFormat(String keyStoreFormat);1473234297;Keystore format to be used for payload encryption. Defaults to "JKS" if not set_@param keyStoreFormat;public void setKeyStoreFormat(String keyStoreFormat) {_        getConfigurationOrCreate().setKeyStoreFormat(keyStoreFormat)__    };keystore,format,to,be,used,for,payload,encryption,defaults,to,jks,if,not,set,param,key,store,format;public,void,set,key,store,format,string,key,store,format,get,configuration,or,create,set,key,store,format,key,store,format
NettyComponent -> public void setPort(int port);1470118430;The host port number_@param port;public void setPort(int port) {_        getConfigurationOrCreate().setPort(port)__    };the,host,port,number,param,port;public,void,set,port,int,port,get,configuration,or,create,set,port,port
NettyComponent -> public void setPort(int port);1473234297;The host port number_@param port;public void setPort(int port) {_        getConfigurationOrCreate().setPort(port)__    };the,host,port,number,param,port;public,void,set,port,int,port,get,configuration,or,create,set,port,port
NettyComponent -> public void setTransferExchange(boolean transferExchange);1470118430;Only used for TCP. You can transfer the exchange over the wire instead of just the body._The following fields are transferred: In body, Out body, fault body, In headers, Out headers, fault headers,_exchange properties, exchange exception._This requires that the objects are serializable. Camel will exclude any non-serializable objects and log it at WARN level._@param transferExchange;public void setTransferExchange(boolean transferExchange) {_        getConfigurationOrCreate().setTransferExchange(transferExchange)__    };only,used,for,tcp,you,can,transfer,the,exchange,over,the,wire,instead,of,just,the,body,the,following,fields,are,transferred,in,body,out,body,fault,body,in,headers,out,headers,fault,headers,exchange,properties,exchange,exception,this,requires,that,the,objects,are,serializable,camel,will,exclude,any,non,serializable,objects,and,log,it,at,warn,level,param,transfer,exchange;public,void,set,transfer,exchange,boolean,transfer,exchange,get,configuration,or,create,set,transfer,exchange,transfer,exchange
NettyComponent -> public void setTransferExchange(boolean transferExchange);1473234297;Only used for TCP. You can transfer the exchange over the wire instead of just the body._The following fields are transferred: In body, Out body, fault body, In headers, Out headers, fault headers,_exchange properties, exchange exception._This requires that the objects are serializable. Camel will exclude any non-serializable objects and log it at WARN level._@param transferExchange;public void setTransferExchange(boolean transferExchange) {_        getConfigurationOrCreate().setTransferExchange(transferExchange)__    };only,used,for,tcp,you,can,transfer,the,exchange,over,the,wire,instead,of,just,the,body,the,following,fields,are,transferred,in,body,out,body,fault,body,in,headers,out,headers,fault,headers,exchange,properties,exchange,exception,this,requires,that,the,objects,are,serializable,camel,will,exclude,any,non,serializable,objects,and,log,it,at,warn,level,param,transfer,exchange;public,void,set,transfer,exchange,boolean,transfer,exchange,get,configuration,or,create,set,transfer,exchange,transfer,exchange
NettyComponent -> public void setUdpByteArrayCodec(boolean udpByteArrayCodec);1470118430;For UDP only. If enabled the using byte array codec instead of Java serialization protocol._@param udpByteArrayCodec;public void setUdpByteArrayCodec(boolean udpByteArrayCodec) {_        getConfigurationOrCreate().setUdpByteArrayCodec(udpByteArrayCodec)__    };for,udp,only,if,enabled,the,using,byte,array,codec,instead,of,java,serialization,protocol,param,udp,byte,array,codec;public,void,set,udp,byte,array,codec,boolean,udp,byte,array,codec,get,configuration,or,create,set,udp,byte,array,codec,udp,byte,array,codec
NettyComponent -> public void setUdpByteArrayCodec(boolean udpByteArrayCodec);1473234297;For UDP only. If enabled the using byte array codec instead of Java serialization protocol._@param udpByteArrayCodec;public void setUdpByteArrayCodec(boolean udpByteArrayCodec) {_        getConfigurationOrCreate().setUdpByteArrayCodec(udpByteArrayCodec)__    };for,udp,only,if,enabled,the,using,byte,array,codec,instead,of,java,serialization,protocol,param,udp,byte,array,codec;public,void,set,udp,byte,array,codec,boolean,udp,byte,array,codec,get,configuration,or,create,set,udp,byte,array,codec,udp,byte,array,codec
NettyComponent -> public void setSecurityProvider(String securityProvider);1470118430;Security provider to be used for payload encryption. Defaults to "SunX509" if not set._@param securityProvider;public void setSecurityProvider(String securityProvider) {_        getConfigurationOrCreate().setSecurityProvider(securityProvider)__    };security,provider,to,be,used,for,payload,encryption,defaults,to,sun,x509,if,not,set,param,security,provider;public,void,set,security,provider,string,security,provider,get,configuration,or,create,set,security,provider,security,provider
NettyComponent -> public void setSecurityProvider(String securityProvider);1473234297;Security provider to be used for payload encryption. Defaults to "SunX509" if not set._@param securityProvider;public void setSecurityProvider(String securityProvider) {_        getConfigurationOrCreate().setSecurityProvider(securityProvider)__    };security,provider,to,be,used,for,payload,encryption,defaults,to,sun,x509,if,not,set,param,security,provider;public,void,set,security,provider,string,security,provider,get,configuration,or,create,set,security,provider,security,provider
NettyComponent -> public void setDisconnectOnNoReply(boolean disconnectOnNoReply);1470118430;If sync is enabled then this option dictates NettyConsumer if it should disconnect where there is no reply to send back._@param disconnectOnNoReply;public void setDisconnectOnNoReply(boolean disconnectOnNoReply) {_        getConfigurationOrCreate().setDisconnectOnNoReply(disconnectOnNoReply)__    };if,sync,is,enabled,then,this,option,dictates,netty,consumer,if,it,should,disconnect,where,there,is,no,reply,to,send,back,param,disconnect,on,no,reply;public,void,set,disconnect,on,no,reply,boolean,disconnect,on,no,reply,get,configuration,or,create,set,disconnect,on,no,reply,disconnect,on,no,reply
NettyComponent -> public void setDisconnectOnNoReply(boolean disconnectOnNoReply);1473234297;If sync is enabled then this option dictates NettyConsumer if it should disconnect where there is no reply to send back._@param disconnectOnNoReply;public void setDisconnectOnNoReply(boolean disconnectOnNoReply) {_        getConfigurationOrCreate().setDisconnectOnNoReply(disconnectOnNoReply)__    };if,sync,is,enabled,then,this,option,dictates,netty,consumer,if,it,should,disconnect,where,there,is,no,reply,to,send,back,param,disconnect,on,no,reply;public,void,set,disconnect,on,no,reply,boolean,disconnect,on,no,reply,get,configuration,or,create,set,disconnect,on,no,reply,disconnect,on,no,reply
NettyComponent -> public void setHost(String host);1470118430;The hostname._<p/>_For the consumer the hostname is localhost or 0.0.0.0_For the producer the hostname is the remote host to connect to_@param host;public void setHost(String host) {_        getConfigurationOrCreate().setHost(host)__    };the,hostname,p,for,the,consumer,the,hostname,is,localhost,or,0,0,0,0,for,the,producer,the,hostname,is,the,remote,host,to,connect,to,param,host;public,void,set,host,string,host,get,configuration,or,create,set,host,host
NettyComponent -> public void setHost(String host);1473234297;The hostname._<p/>_For the consumer the hostname is localhost or 0.0.0.0_For the producer the hostname is the remote host to connect to_@param host;public void setHost(String host) {_        getConfigurationOrCreate().setHost(host)__    };the,hostname,p,for,the,consumer,the,hostname,is,localhost,or,0,0,0,0,for,the,producer,the,hostname,is,the,remote,host,to,connect,to,param,host;public,void,set,host,string,host,get,configuration,or,create,set,host,host
NettyComponent -> public void setOptions(Map<String, Object> options);1470118430;Allows to configure additional netty options using "option." as prefix._For example "option.child.keepAlive=false" to set the netty option "child.keepAlive=false". See the Netty documentation for possible options that can be used._@param options;public void setOptions(Map<String, Object> options) {_        getConfigurationOrCreate().setOptions(options)__    };allows,to,configure,additional,netty,options,using,option,as,prefix,for,example,option,child,keep,alive,false,to,set,the,netty,option,child,keep,alive,false,see,the,netty,documentation,for,possible,options,that,can,be,used,param,options;public,void,set,options,map,string,object,options,get,configuration,or,create,set,options,options
NettyComponent -> public void setOptions(Map<String, Object> options);1473234297;Allows to configure additional netty options using "option." as prefix._For example "option.child.keepAlive=false" to set the netty option "child.keepAlive=false". See the Netty documentation for possible options that can be used._@param options;public void setOptions(Map<String, Object> options) {_        getConfigurationOrCreate().setOptions(options)__    };allows,to,configure,additional,netty,options,using,option,as,prefix,for,example,option,child,keep,alive,false,to,set,the,netty,option,child,keep,alive,false,see,the,netty,documentation,for,possible,options,that,can,be,used,param,options;public,void,set,options,map,string,object,options,get,configuration,or,create,set,options,options
NettyComponent -> public void setReuseChannel(boolean reuseChannel);1470118430;This option allows producers to reuse the same Netty {@link Channel} for the lifecycle of processing the {@link Exchange}._This is useable if you need to call a server multiple times in a Camel route and want to use the same network connection._When using this the channel is not returned to the connection pool until the {@link Exchange} is done_ or disconnected_if the disconnect option is set to true._<p/>_The reused {@link Channel} is stored on the {@link Exchange} as an exchange property with the key {@link NettyConstants#NETTY_CHANNEL}_which allows you to obtain the channel during routing and use it as well._@param reuseChannel;public void setReuseChannel(boolean reuseChannel) {_        getConfigurationOrCreate().setReuseChannel(reuseChannel)__    };this,option,allows,producers,to,reuse,the,same,netty,link,channel,for,the,lifecycle,of,processing,the,link,exchange,this,is,useable,if,you,need,to,call,a,server,multiple,times,in,a,camel,route,and,want,to,use,the,same,network,connection,when,using,this,the,channel,is,not,returned,to,the,connection,pool,until,the,link,exchange,is,done,or,disconnected,if,the,disconnect,option,is,set,to,true,p,the,reused,link,channel,is,stored,on,the,link,exchange,as,an,exchange,property,with,the,key,link,netty,constants,which,allows,you,to,obtain,the,channel,during,routing,and,use,it,as,well,param,reuse,channel;public,void,set,reuse,channel,boolean,reuse,channel,get,configuration,or,create,set,reuse,channel,reuse,channel
NettyComponent -> public void setReuseChannel(boolean reuseChannel);1473234297;This option allows producers to reuse the same Netty {@link Channel} for the lifecycle of processing the {@link Exchange}._This is useable if you need to call a server multiple times in a Camel route and want to use the same network connection._When using this the channel is not returned to the connection pool until the {@link Exchange} is done_ or disconnected_if the disconnect option is set to true._<p/>_The reused {@link Channel} is stored on the {@link Exchange} as an exchange property with the key {@link NettyConstants#NETTY_CHANNEL}_which allows you to obtain the channel during routing and use it as well._@param reuseChannel;public void setReuseChannel(boolean reuseChannel) {_        getConfigurationOrCreate().setReuseChannel(reuseChannel)__    };this,option,allows,producers,to,reuse,the,same,netty,link,channel,for,the,lifecycle,of,processing,the,link,exchange,this,is,useable,if,you,need,to,call,a,server,multiple,times,in,a,camel,route,and,want,to,use,the,same,network,connection,when,using,this,the,channel,is,not,returned,to,the,connection,pool,until,the,link,exchange,is,done,or,disconnected,if,the,disconnect,option,is,set,to,true,p,the,reused,link,channel,is,stored,on,the,link,exchange,as,an,exchange,property,with,the,key,link,netty,constants,which,allows,you,to,obtain,the,channel,during,routing,and,use,it,as,well,param,reuse,channel;public,void,set,reuse,channel,boolean,reuse,channel,get,configuration,or,create,set,reuse,channel,reuse,channel
NettyComponent -> public void setTcpNoDelay(boolean tcpNoDelay);1470118430;Setting to improve TCP protocol performance_@param tcpNoDelay;public void setTcpNoDelay(boolean tcpNoDelay) {_        getConfigurationOrCreate().setTcpNoDelay(tcpNoDelay)__    };setting,to,improve,tcp,protocol,performance,param,tcp,no,delay;public,void,set,tcp,no,delay,boolean,tcp,no,delay,get,configuration,or,create,set,tcp,no,delay,tcp,no,delay
NettyComponent -> public void setTcpNoDelay(boolean tcpNoDelay);1473234297;Setting to improve TCP protocol performance_@param tcpNoDelay;public void setTcpNoDelay(boolean tcpNoDelay) {_        getConfigurationOrCreate().setTcpNoDelay(tcpNoDelay)__    };setting,to,improve,tcp,protocol,performance,param,tcp,no,delay;public,void,set,tcp,no,delay,boolean,tcp,no,delay,get,configuration,or,create,set,tcp,no,delay,tcp,no,delay
NettyComponent -> public void setNetworkInterface(String networkInterface);1470118430;When using UDP then this option can be used to specify a network interface by its name, such as eth0 to join a multicast group._@param networkInterface;public void setNetworkInterface(String networkInterface) {_        getConfigurationOrCreate().setNetworkInterface(networkInterface)__    };when,using,udp,then,this,option,can,be,used,to,specify,a,network,interface,by,its,name,such,as,eth0,to,join,a,multicast,group,param,network,interface;public,void,set,network,interface,string,network,interface,get,configuration,or,create,set,network,interface,network,interface
NettyComponent -> public void setNetworkInterface(String networkInterface);1473234297;When using UDP then this option can be used to specify a network interface by its name, such as eth0 to join a multicast group._@param networkInterface;public void setNetworkInterface(String networkInterface) {_        getConfigurationOrCreate().setNetworkInterface(networkInterface)__    };when,using,udp,then,this,option,can,be,used,to,specify,a,network,interface,by,its,name,such,as,eth0,to,join,a,multicast,group,param,network,interface;public,void,set,network,interface,string,network,interface,get,configuration,or,create,set,network,interface,network,interface
NettyComponent -> public void setSslContextParameters(SSLContextParameters sslContextParameters);1470118430;To configure security using SSLContextParameters_@param sslContextParameters;public void setSslContextParameters(SSLContextParameters sslContextParameters) {_        getConfigurationOrCreate().setSslContextParameters(sslContextParameters)__    };to,configure,security,using,sslcontext,parameters,param,ssl,context,parameters;public,void,set,ssl,context,parameters,sslcontext,parameters,ssl,context,parameters,get,configuration,or,create,set,ssl,context,parameters,ssl,context,parameters
NettyComponent -> public void setSslContextParameters(SSLContextParameters sslContextParameters);1473234297;To configure security using SSLContextParameters_@param sslContextParameters;public void setSslContextParameters(SSLContextParameters sslContextParameters) {_        getConfigurationOrCreate().setSslContextParameters(sslContextParameters)__    };to,configure,security,using,sslcontext,parameters,param,ssl,context,parameters;public,void,set,ssl,context,parameters,sslcontext,parameters,ssl,context,parameters,get,configuration,or,create,set,ssl,context,parameters,ssl,context,parameters
NettyComponent -> public void setDecoders(List<ChannelHandler> decoders);1470118430;A list of decoders to be used._You can use a String which have values separated by comma, and have the values be looked up in the Registry._Just remember to prefix the value with # so Camel knows it should lookup._@param decoders;public void setDecoders(List<ChannelHandler> decoders) {_        getConfigurationOrCreate().setDecoders(decoders)__    };a,list,of,decoders,to,be,used,you,can,use,a,string,which,have,values,separated,by,comma,and,have,the,values,be,looked,up,in,the,registry,just,remember,to,prefix,the,value,with,so,camel,knows,it,should,lookup,param,decoders;public,void,set,decoders,list,channel,handler,decoders,get,configuration,or,create,set,decoders,decoders
NettyComponent -> public void setDecoders(List<ChannelHandler> decoders);1473234297;A list of decoders to be used._You can use a String which have values separated by comma, and have the values be looked up in the Registry._Just remember to prefix the value with # so Camel knows it should lookup._@param decoders;public void setDecoders(List<ChannelHandler> decoders) {_        getConfigurationOrCreate().setDecoders(decoders)__    };a,list,of,decoders,to,be,used,you,can,use,a,string,which,have,values,separated,by,comma,and,have,the,values,be,looked,up,in,the,registry,just,remember,to,prefix,the,value,with,so,camel,knows,it,should,lookup,param,decoders;public,void,set,decoders,list,channel,handler,decoders,get,configuration,or,create,set,decoders,decoders
NettyComponent -> public void setDecoder(ChannelHandler decoder);1470118430;A custom ChannelHandler class that can be used to perform special marshalling of inbound payloads._@param decoder;public void setDecoder(ChannelHandler decoder) {_        getConfigurationOrCreate().setDecoder(decoder)__    };a,custom,channel,handler,class,that,can,be,used,to,perform,special,marshalling,of,inbound,payloads,param,decoder;public,void,set,decoder,channel,handler,decoder,get,configuration,or,create,set,decoder,decoder
NettyComponent -> public void setDecoder(ChannelHandler decoder);1473234297;A custom ChannelHandler class that can be used to perform special marshalling of inbound payloads._@param decoder;public void setDecoder(ChannelHandler decoder) {_        getConfigurationOrCreate().setDecoder(decoder)__    };a,custom,channel,handler,class,that,can,be,used,to,perform,special,marshalling,of,inbound,payloads,param,decoder;public,void,set,decoder,channel,handler,decoder,get,configuration,or,create,set,decoder,decoder
NettyComponent -> public void setWorkerCount(int workerCount);1470118430;When netty works on nio mode, it uses default workerCount parameter from Netty, which is cpu_core_threads*2._User can use this operation to override the default workerCount from Netty_@param workerCount;public void setWorkerCount(int workerCount) {_        getConfigurationOrCreate().setWorkerCount(workerCount)__    };when,netty,works,on,nio,mode,it,uses,default,worker,count,parameter,from,netty,which,is,2,user,can,use,this,operation,to,override,the,default,worker,count,from,netty,param,worker,count;public,void,set,worker,count,int,worker,count,get,configuration,or,create,set,worker,count,worker,count
NettyComponent -> public void setWorkerCount(int workerCount);1473234297;When netty works on nio mode, it uses default workerCount parameter from Netty, which is cpu_core_threads*2._User can use this operation to override the default workerCount from Netty_@param workerCount;public void setWorkerCount(int workerCount) {_        getConfigurationOrCreate().setWorkerCount(workerCount)__    };when,netty,works,on,nio,mode,it,uses,default,worker,count,parameter,from,netty,which,is,2,user,can,use,this,operation,to,override,the,default,worker,count,from,netty,param,worker,count;public,void,set,worker,count,int,worker,count,get,configuration,or,create,set,worker,count,worker,count
NettyComponent -> public void setReceiveBufferSize(int receiveBufferSize);1470118430;The TCP/UDP buffer sizes to be used during inbound communication. Size is bytes._@param receiveBufferSize;public void setReceiveBufferSize(int receiveBufferSize) {_        getConfigurationOrCreate().setReceiveBufferSize(receiveBufferSize)__    };the,tcp,udp,buffer,sizes,to,be,used,during,inbound,communication,size,is,bytes,param,receive,buffer,size;public,void,set,receive,buffer,size,int,receive,buffer,size,get,configuration,or,create,set,receive,buffer,size,receive,buffer,size
NettyComponent -> public void setReceiveBufferSize(int receiveBufferSize);1473234297;The TCP/UDP buffer sizes to be used during inbound communication. Size is bytes._@param receiveBufferSize;public void setReceiveBufferSize(int receiveBufferSize) {_        getConfigurationOrCreate().setReceiveBufferSize(receiveBufferSize)__    };the,tcp,udp,buffer,sizes,to,be,used,during,inbound,communication,size,is,bytes,param,receive,buffer,size;public,void,set,receive,buffer,size,int,receive,buffer,size,get,configuration,or,create,set,receive,buffer,size,receive,buffer,size
NettyComponent -> public void setAllowDefaultCodec(boolean allowDefaultCodec);1470118430;The netty component installs a default codec if both, encoder/deocder is null and textline is false._Setting allowDefaultCodec to false prevents the netty component from installing a default codec as the first element in the filter chain._@param allowDefaultCodec;public void setAllowDefaultCodec(boolean allowDefaultCodec) {_        getConfigurationOrCreate().setAllowDefaultCodec(allowDefaultCodec)__    };the,netty,component,installs,a,default,codec,if,both,encoder,deocder,is,null,and,textline,is,false,setting,allow,default,codec,to,false,prevents,the,netty,component,from,installing,a,default,codec,as,the,first,element,in,the,filter,chain,param,allow,default,codec;public,void,set,allow,default,codec,boolean,allow,default,codec,get,configuration,or,create,set,allow,default,codec,allow,default,codec
NettyComponent -> public void setAllowDefaultCodec(boolean allowDefaultCodec);1473234297;The netty component installs a default codec if both, encoder/deocder is null and textline is false._Setting allowDefaultCodec to false prevents the netty component from installing a default codec as the first element in the filter chain._@param allowDefaultCodec;public void setAllowDefaultCodec(boolean allowDefaultCodec) {_        getConfigurationOrCreate().setAllowDefaultCodec(allowDefaultCodec)__    };the,netty,component,installs,a,default,codec,if,both,encoder,deocder,is,null,and,textline,is,false,setting,allow,default,codec,to,false,prevents,the,netty,component,from,installing,a,default,codec,as,the,first,element,in,the,filter,chain,param,allow,default,codec;public,void,set,allow,default,codec,boolean,allow,default,codec,get,configuration,or,create,set,allow,default,codec,allow,default,codec
NettyComponent -> public void setEncoder(ChannelHandler encoder);1470118430;A custom ChannelHandler class that can be used to perform special marshalling of outbound payloads._@param encoder;public void setEncoder(ChannelHandler encoder) {_        getConfigurationOrCreate().setEncoder(encoder)__    };a,custom,channel,handler,class,that,can,be,used,to,perform,special,marshalling,of,outbound,payloads,param,encoder;public,void,set,encoder,channel,handler,encoder,get,configuration,or,create,set,encoder,encoder
NettyComponent -> public void setEncoder(ChannelHandler encoder);1473234297;A custom ChannelHandler class that can be used to perform special marshalling of outbound payloads._@param encoder;public void setEncoder(ChannelHandler encoder) {_        getConfigurationOrCreate().setEncoder(encoder)__    };a,custom,channel,handler,class,that,can,be,used,to,perform,special,marshalling,of,outbound,payloads,param,encoder;public,void,set,encoder,channel,handler,encoder,get,configuration,or,create,set,encoder,encoder
NettyComponent -> public void setBossCount(int bossCount);1470118430;When netty works on nio mode, it uses default bossCount parameter from Netty, which is 1._User can use this operation to override the default bossCount from Netty_@param bossCount;public void setBossCount(int bossCount) {_        getConfigurationOrCreate().setBossCount(bossCount)__    };when,netty,works,on,nio,mode,it,uses,default,boss,count,parameter,from,netty,which,is,1,user,can,use,this,operation,to,override,the,default,boss,count,from,netty,param,boss,count;public,void,set,boss,count,int,boss,count,get,configuration,or,create,set,boss,count,boss,count
NettyComponent -> public void setBossCount(int bossCount);1473234297;When netty works on nio mode, it uses default bossCount parameter from Netty, which is 1._User can use this operation to override the default bossCount from Netty_@param bossCount;public void setBossCount(int bossCount) {_        getConfigurationOrCreate().setBossCount(bossCount)__    };when,netty,works,on,nio,mode,it,uses,default,boss,count,parameter,from,netty,which,is,1,user,can,use,this,operation,to,override,the,default,boss,count,from,netty,param,boss,count;public,void,set,boss,count,int,boss,count,get,configuration,or,create,set,boss,count,boss,count
NettyComponent -> public void setReuseAddress(boolean reuseAddress);1470118430;Setting to facilitate socket multiplexing_@param reuseAddress;public void setReuseAddress(boolean reuseAddress) {_        getConfigurationOrCreate().setReuseAddress(reuseAddress)__    };setting,to,facilitate,socket,multiplexing,param,reuse,address;public,void,set,reuse,address,boolean,reuse,address,get,configuration,or,create,set,reuse,address,reuse,address
NettyComponent -> public void setReuseAddress(boolean reuseAddress);1473234297;Setting to facilitate socket multiplexing_@param reuseAddress;public void setReuseAddress(boolean reuseAddress) {_        getConfigurationOrCreate().setReuseAddress(reuseAddress)__    };setting,to,facilitate,socket,multiplexing,param,reuse,address;public,void,set,reuse,address,boolean,reuse,address,get,configuration,or,create,set,reuse,address,reuse,address
NettyComponent -> public void setSslHandler(SslHandler sslHandler);1470118430;Reference to a class that could be used to return an SSL Handler_@param sslHandler;public void setSslHandler(SslHandler sslHandler) {_        getConfigurationOrCreate().setSslHandler(sslHandler)__    };reference,to,a,class,that,could,be,used,to,return,an,ssl,handler,param,ssl,handler;public,void,set,ssl,handler,ssl,handler,ssl,handler,get,configuration,or,create,set,ssl,handler,ssl,handler
NettyComponent -> public void setSslHandler(SslHandler sslHandler);1473234297;Reference to a class that could be used to return an SSL Handler_@param sslHandler;public void setSslHandler(SslHandler sslHandler) {_        getConfigurationOrCreate().setSslHandler(sslHandler)__    };reference,to,a,class,that,could,be,used,to,return,an,ssl,handler,param,ssl,handler;public,void,set,ssl,handler,ssl,handler,ssl,handler,get,configuration,or,create,set,ssl,handler,ssl,handler
NettyComponent -> public void setNettyServerBootstrapFactory(NettyServerBootstrapFactory nettyServerBootstrapFactory);1470118430;To use a custom NettyServerBootstrapFactory_@param nettyServerBootstrapFactory;public void setNettyServerBootstrapFactory(NettyServerBootstrapFactory nettyServerBootstrapFactory) {_        getConfigurationOrCreate().setNettyServerBootstrapFactory(nettyServerBootstrapFactory)__    };to,use,a,custom,netty,server,bootstrap,factory,param,netty,server,bootstrap,factory;public,void,set,netty,server,bootstrap,factory,netty,server,bootstrap,factory,netty,server,bootstrap,factory,get,configuration,or,create,set,netty,server,bootstrap,factory,netty,server,bootstrap,factory
NettyComponent -> public void setNettyServerBootstrapFactory(NettyServerBootstrapFactory nettyServerBootstrapFactory);1473234297;To use a custom NettyServerBootstrapFactory_@param nettyServerBootstrapFactory;public void setNettyServerBootstrapFactory(NettyServerBootstrapFactory nettyServerBootstrapFactory) {_        getConfigurationOrCreate().setNettyServerBootstrapFactory(nettyServerBootstrapFactory)__    };to,use,a,custom,netty,server,bootstrap,factory,param,netty,server,bootstrap,factory;public,void,set,netty,server,bootstrap,factory,netty,server,bootstrap,factory,netty,server,bootstrap,factory,get,configuration,or,create,set,netty,server,bootstrap,factory,netty,server,bootstrap,factory
NettyComponent -> public boolean isReconnect();1470118430;Used only in clientMode in consumer, the consumer will attempt to reconnect on disconnection if this is enabled;public boolean isReconnect() {_        return getConfigurationOrCreate().isReconnect()__    };used,only,in,client,mode,in,consumer,the,consumer,will,attempt,to,reconnect,on,disconnection,if,this,is,enabled;public,boolean,is,reconnect,return,get,configuration,or,create,is,reconnect
NettyComponent -> public boolean isReconnect();1473234297;Used only in clientMode in consumer, the consumer will attempt to reconnect on disconnection if this is enabled;public boolean isReconnect() {_        return getConfigurationOrCreate().isReconnect()__    };used,only,in,client,mode,in,consumer,the,consumer,will,attempt,to,reconnect,on,disconnection,if,this,is,enabled;public,boolean,is,reconnect,return,get,configuration,or,create,is,reconnect
NettyComponent -> public void setNativeTransport(boolean nativeTransport);1470118430;Whether to use native transport instead of NIO. Native transport takes advantage of the host operating system and is only supported on some platforms._You need to add the netty JAR for the host operating system you are using. See more details at: http://netty.io/wiki/native-transports.html_@param nativeTransport;public void setNativeTransport(boolean nativeTransport) {_        getConfigurationOrCreate().setNativeTransport(nativeTransport)__    };whether,to,use,native,transport,instead,of,nio,native,transport,takes,advantage,of,the,host,operating,system,and,is,only,supported,on,some,platforms,you,need,to,add,the,netty,jar,for,the,host,operating,system,you,are,using,see,more,details,at,http,netty,io,wiki,native,transports,html,param,native,transport;public,void,set,native,transport,boolean,native,transport,get,configuration,or,create,set,native,transport,native,transport
NettyComponent -> public void setNativeTransport(boolean nativeTransport);1473234297;Whether to use native transport instead of NIO. Native transport takes advantage of the host operating system and is only supported on some platforms._You need to add the netty JAR for the host operating system you are using. See more details at: http://netty.io/wiki/native-transports.html_@param nativeTransport;public void setNativeTransport(boolean nativeTransport) {_        getConfigurationOrCreate().setNativeTransport(nativeTransport)__    };whether,to,use,native,transport,instead,of,nio,native,transport,takes,advantage,of,the,host,operating,system,and,is,only,supported,on,some,platforms,you,need,to,add,the,netty,jar,for,the,host,operating,system,you,are,using,see,more,details,at,http,netty,io,wiki,native,transports,html,param,native,transport;public,void,set,native,transport,boolean,native,transport,get,configuration,or,create,set,native,transport,native,transport
NettyComponent -> public void setTrustStoreResource(String trustStoreResource);1470118430;Server side certificate keystore to be used for encryption._Is loaded by default from classpath, but you can prefix with "classpath:", "file:", or "http:" to load the resource from different systems._@param trustStoreResource;public void setTrustStoreResource(String trustStoreResource) {_        getConfigurationOrCreate().setTrustStoreResource(trustStoreResource)__    };server,side,certificate,keystore,to,be,used,for,encryption,is,loaded,by,default,from,classpath,but,you,can,prefix,with,classpath,file,or,http,to,load,the,resource,from,different,systems,param,trust,store,resource;public,void,set,trust,store,resource,string,trust,store,resource,get,configuration,or,create,set,trust,store,resource,trust,store,resource
NettyComponent -> public void setTrustStoreResource(String trustStoreResource);1473234297;Server side certificate keystore to be used for encryption._Is loaded by default from classpath, but you can prefix with "classpath:", "file:", or "http:" to load the resource from different systems._@param trustStoreResource;public void setTrustStoreResource(String trustStoreResource) {_        getConfigurationOrCreate().setTrustStoreResource(trustStoreResource)__    };server,side,certificate,keystore,to,be,used,for,encryption,is,loaded,by,default,from,classpath,but,you,can,prefix,with,classpath,file,or,http,to,load,the,resource,from,different,systems,param,trust,store,resource;public,void,set,trust,store,resource,string,trust,store,resource,get,configuration,or,create,set,trust,store,resource,trust,store,resource
NettyComponent -> public void setServerExceptionCaughtLogLevel(LoggingLevel serverExceptionCaughtLogLevel);1470118430;If the server (NettyConsumer) catches an exception then its logged using this logging level._@param serverExceptionCaughtLogLevel;public void setServerExceptionCaughtLogLevel(LoggingLevel serverExceptionCaughtLogLevel) {_        getConfigurationOrCreate().setServerExceptionCaughtLogLevel(serverExceptionCaughtLogLevel)__    };if,the,server,netty,consumer,catches,an,exception,then,its,logged,using,this,logging,level,param,server,exception,caught,log,level;public,void,set,server,exception,caught,log,level,logging,level,server,exception,caught,log,level,get,configuration,or,create,set,server,exception,caught,log,level,server,exception,caught,log,level
NettyComponent -> public void setServerExceptionCaughtLogLevel(LoggingLevel serverExceptionCaughtLogLevel);1473234297;If the server (NettyConsumer) catches an exception then its logged using this logging level._@param serverExceptionCaughtLogLevel;public void setServerExceptionCaughtLogLevel(LoggingLevel serverExceptionCaughtLogLevel) {_        getConfigurationOrCreate().setServerExceptionCaughtLogLevel(serverExceptionCaughtLogLevel)__    };if,the,server,netty,consumer,catches,an,exception,then,its,logged,using,this,logging,level,param,server,exception,caught,log,level;public,void,set,server,exception,caught,log,level,logging,level,server,exception,caught,log,level,get,configuration,or,create,set,server,exception,caught,log,level,server,exception,caught,log,level
NettyComponent -> public void setBossGroup(EventLoopGroup bossGroup);1470118430;Set the BossGroup which could be used for handling the new connection of the server side across the NettyEndpoint_@param bossGroup;public void setBossGroup(EventLoopGroup bossGroup) {_        getConfigurationOrCreate().setBossGroup(bossGroup)__    };set,the,boss,group,which,could,be,used,for,handling,the,new,connection,of,the,server,side,across,the,netty,endpoint,param,boss,group;public,void,set,boss,group,event,loop,group,boss,group,get,configuration,or,create,set,boss,group,boss,group
NettyComponent -> public void setBossGroup(EventLoopGroup bossGroup);1473234297;Set the BossGroup which could be used for handling the new connection of the server side across the NettyEndpoint_@param bossGroup;public void setBossGroup(EventLoopGroup bossGroup) {_        getConfigurationOrCreate().setBossGroup(bossGroup)__    };set,the,boss,group,which,could,be,used,for,handling,the,new,connection,of,the,server,side,across,the,netty,endpoint,param,boss,group;public,void,set,boss,group,event,loop,group,boss,group,get,configuration,or,create,set,boss,group,boss,group
NettyComponent -> public void setProducerPoolMinIdle(int producerPoolMinIdle);1470118430;Sets the minimum number of instances allowed in the producer pool before the evictor thread (if active) spawns new objects._@param producerPoolMinIdle;public void setProducerPoolMinIdle(int producerPoolMinIdle) {_        getConfigurationOrCreate().setProducerPoolMinIdle(producerPoolMinIdle)__    };sets,the,minimum,number,of,instances,allowed,in,the,producer,pool,before,the,evictor,thread,if,active,spawns,new,objects,param,producer,pool,min,idle;public,void,set,producer,pool,min,idle,int,producer,pool,min,idle,get,configuration,or,create,set,producer,pool,min,idle,producer,pool,min,idle
NettyComponent -> public void setProducerPoolMinIdle(int producerPoolMinIdle);1473234297;Sets the minimum number of instances allowed in the producer pool before the evictor thread (if active) spawns new objects._@param producerPoolMinIdle;public void setProducerPoolMinIdle(int producerPoolMinIdle) {_        getConfigurationOrCreate().setProducerPoolMinIdle(producerPoolMinIdle)__    };sets,the,minimum,number,of,instances,allowed,in,the,producer,pool,before,the,evictor,thread,if,active,spawns,new,objects,param,producer,pool,min,idle;public,void,set,producer,pool,min,idle,int,producer,pool,min,idle,get,configuration,or,create,set,producer,pool,min,idle,producer,pool,min,idle
NettyComponent -> public void setExecutorService(EventExecutorGroup executorService);1432196781;To use the given EventExecutorGroup;public void setExecutorService(EventExecutorGroup executorService) {_        this.executorService = executorService__    };to,use,the,given,event,executor,group;public,void,set,executor,service,event,executor,group,executor,service,this,executor,service,executor,service
NettyComponent -> public void setExecutorService(EventExecutorGroup executorService);1453078835;To use the given EventExecutorGroup;public void setExecutorService(EventExecutorGroup executorService) {_        this.executorService = executorService__    };to,use,the,given,event,executor,group;public,void,set,executor,service,event,executor,group,executor,service,this,executor,service,executor,service
NettyComponent -> public void setExecutorService(EventExecutorGroup executorService);1453079004;To use the given EventExecutorGroup;public void setExecutorService(EventExecutorGroup executorService) {_        this.executorService = executorService__    };to,use,the,given,event,executor,group;public,void,set,executor,service,event,executor,group,executor,service,this,executor,service,executor,service
NettyComponent -> public void setExecutorService(EventExecutorGroup executorService);1470118430;To use the given EventExecutorGroup;public void setExecutorService(EventExecutorGroup executorService) {_        this.executorService = executorService__    };to,use,the,given,event,executor,group;public,void,set,executor,service,event,executor,group,executor,service,this,executor,service,executor,service
NettyComponent -> public void setExecutorService(EventExecutorGroup executorService);1473234297;To use the given EventExecutorGroup;public void setExecutorService(EventExecutorGroup executorService) {_        this.executorService = executorService__    };to,use,the,given,event,executor,group;public,void,set,executor,service,event,executor,group,executor,service,this,executor,service,executor,service
NettyComponent -> public void setExecutorService(EventExecutorGroup executorService);1474381874;To use the given EventExecutorGroup;public void setExecutorService(EventExecutorGroup executorService) {_        this.executorService = executorService__    };to,use,the,given,event,executor,group;public,void,set,executor,service,event,executor,group,executor,service,this,executor,service,executor,service
NettyComponent -> public void setExecutorService(EventExecutorGroup executorService);1482329852;To use the given EventExecutorGroup;public void setExecutorService(EventExecutorGroup executorService) {_        this.executorService = executorService__    };to,use,the,given,event,executor,group;public,void,set,executor,service,event,executor,group,executor,service,this,executor,service,executor,service
NettyComponent -> public void setExecutorService(EventExecutorGroup executorService);1491919259;To use the given EventExecutorGroup;public void setExecutorService(EventExecutorGroup executorService) {_        this.executorService = executorService__    };to,use,the,given,event,executor,group;public,void,set,executor,service,event,executor,group,executor,service,this,executor,service,executor,service
NettyComponent -> public void setExecutorService(EventExecutorGroup executorService);1491919462;To use the given EventExecutorGroup;public void setExecutorService(EventExecutorGroup executorService) {_        this.executorService = executorService__    };to,use,the,given,event,executor,group;public,void,set,executor,service,event,executor,group,executor,service,this,executor,service,executor,service
NettyComponent -> public void setExecutorService(EventExecutorGroup executorService);1491919462;To use the given EventExecutorGroup;public void setExecutorService(EventExecutorGroup executorService) {_        this.executorService = executorService__    };to,use,the,given,event,executor,group;public,void,set,executor,service,event,executor,group,executor,service,this,executor,service,executor,service
NettyComponent -> public void setExecutorService(EventExecutorGroup executorService);1491919462;To use the given EventExecutorGroup;public void setExecutorService(EventExecutorGroup executorService) {_        this.executorService = executorService__    };to,use,the,given,event,executor,group;public,void,set,executor,service,event,executor,group,executor,service,this,executor,service,executor,service
NettyComponent -> public void setExecutorService(EventExecutorGroup executorService);1524063141;To use the given EventExecutorGroup;public void setExecutorService(EventExecutorGroup executorService) {_        this.executorService = executorService__    };to,use,the,given,event,executor,group;public,void,set,executor,service,event,executor,group,executor,service,this,executor,service,executor,service
NettyComponent -> public void setExecutorService(EventExecutorGroup executorService);1524516648;To use the given EventExecutorGroup.;public void setExecutorService(EventExecutorGroup executorService) {_        this.executorService = executorService__    };to,use,the,given,event,executor,group;public,void,set,executor,service,event,executor,group,executor,service,this,executor,service,executor,service
NettyComponent -> public void setExecutorService(EventExecutorGroup executorService);1534935196;To use the given EventExecutorGroup.;public void setExecutorService(EventExecutorGroup executorService) {_        this.executorService = executorService__    };to,use,the,given,event,executor,group;public,void,set,executor,service,event,executor,group,executor,service,this,executor,service,executor,service
NettyComponent -> public void setExecutorService(EventExecutorGroup executorService);1537290824;To use the given EventExecutorGroup.;public void setExecutorService(EventExecutorGroup executorService) {_        this.executorService = executorService__    };to,use,the,given,event,executor,group;public,void,set,executor,service,event,executor,group,executor,service,this,executor,service,executor,service
NettyComponent -> public void setExecutorService(EventExecutorGroup executorService);1540108158;To use the given EventExecutorGroup.;public void setExecutorService(EventExecutorGroup executorService) {_        this.executorService = executorService__    };to,use,the,given,event,executor,group;public,void,set,executor,service,event,executor,group,executor,service,this,executor,service,executor,service
NettyComponent -> public void setExecutorService(EventExecutorGroup executorService);1540108163;To use the given EventExecutorGroup.;public void setExecutorService(EventExecutorGroup executorService) {_        this.executorService = executorService__    };to,use,the,given,event,executor,group;public,void,set,executor,service,event,executor,group,executor,service,this,executor,service,executor,service
NettyComponent -> public void setExecutorService(EventExecutorGroup executorService);1547241305;To use the given EventExecutorGroup.;public void setExecutorService(EventExecutorGroup executorService) {_        this.executorService = executorService__    };to,use,the,given,event,executor,group;public,void,set,executor,service,event,executor,group,executor,service,this,executor,service,executor,service
NettyComponent -> public void setExecutorService(EventExecutorGroup executorService);1548230502;To use the given EventExecutorGroup.;public void setExecutorService(EventExecutorGroup executorService) {_        this.executorService = executorService__    };to,use,the,given,event,executor,group;public,void,set,executor,service,event,executor,group,executor,service,this,executor,service,executor,service
NettyComponent -> public void setExecutorService(EventExecutorGroup executorService);1548318112;To use the given EventExecutorGroup.;public void setExecutorService(EventExecutorGroup executorService) {_        this.executorService = executorService__    };to,use,the,given,event,executor,group;public,void,set,executor,service,event,executor,group,executor,service,this,executor,service,executor,service
NettyComponent -> public void setUseByteBuf(boolean useByteBuf);1470118430;If the useByteBuf is true, netty producer will turn the message body into {@link ByteBuf} before sending it out._@param useByteBuf;public void setUseByteBuf(boolean useByteBuf) {_        getConfigurationOrCreate().setUseByteBuf(useByteBuf)__    };if,the,use,byte,buf,is,true,netty,producer,will,turn,the,message,body,into,link,byte,buf,before,sending,it,out,param,use,byte,buf;public,void,set,use,byte,buf,boolean,use,byte,buf,get,configuration,or,create,set,use,byte,buf,use,byte,buf
NettyComponent -> public void setUseByteBuf(boolean useByteBuf);1473234297;If the useByteBuf is true, netty producer will turn the message body into {@link ByteBuf} before sending it out._@param useByteBuf;public void setUseByteBuf(boolean useByteBuf) {_        getConfigurationOrCreate().setUseByteBuf(useByteBuf)__    };if,the,use,byte,buf,is,true,netty,producer,will,turn,the,message,body,into,link,byte,buf,before,sending,it,out,param,use,byte,buf;public,void,set,use,byte,buf,boolean,use,byte,buf,get,configuration,or,create,set,use,byte,buf,use,byte,buf
NettyComponent -> public void setDisconnect(boolean disconnect);1470118430;Whether or not to disconnect(close) from Netty Channel right after use. Can be used for both consumer and producer._@param disconnect;public void setDisconnect(boolean disconnect) {_        getConfigurationOrCreate().setDisconnect(disconnect)__    };whether,or,not,to,disconnect,close,from,netty,channel,right,after,use,can,be,used,for,both,consumer,and,producer,param,disconnect;public,void,set,disconnect,boolean,disconnect,get,configuration,or,create,set,disconnect,disconnect
NettyComponent -> public void setDisconnect(boolean disconnect);1473234297;Whether or not to disconnect(close) from Netty Channel right after use. Can be used for both consumer and producer._@param disconnect;public void setDisconnect(boolean disconnect) {_        getConfigurationOrCreate().setDisconnect(disconnect)__    };whether,or,not,to,disconnect,close,from,netty,channel,right,after,use,can,be,used,for,both,consumer,and,producer,param,disconnect;public,void,set,disconnect,boolean,disconnect,get,configuration,or,create,set,disconnect,disconnect
NettyComponent -> public void setProducerPoolEnabled(boolean producerPoolEnabled);1470118430;Whether producer pool is enabled or not._Important: Do not turn this off, as the pooling is needed for handling concurrency and reliable request/reply._@param producerPoolEnabled;public void setProducerPoolEnabled(boolean producerPoolEnabled) {_        getConfigurationOrCreate().setProducerPoolEnabled(producerPoolEnabled)__    };whether,producer,pool,is,enabled,or,not,important,do,not,turn,this,off,as,the,pooling,is,needed,for,handling,concurrency,and,reliable,request,reply,param,producer,pool,enabled;public,void,set,producer,pool,enabled,boolean,producer,pool,enabled,get,configuration,or,create,set,producer,pool,enabled,producer,pool,enabled
NettyComponent -> public void setProducerPoolEnabled(boolean producerPoolEnabled);1473234297;Whether producer pool is enabled or not._Important: Do not turn this off, as the pooling is needed for handling concurrency and reliable request/reply._@param producerPoolEnabled;public void setProducerPoolEnabled(boolean producerPoolEnabled) {_        getConfigurationOrCreate().setProducerPoolEnabled(producerPoolEnabled)__    };whether,producer,pool,is,enabled,or,not,important,do,not,turn,this,off,as,the,pooling,is,needed,for,handling,concurrency,and,reliable,request,reply,param,producer,pool,enabled;public,void,set,producer,pool,enabled,boolean,producer,pool,enabled,get,configuration,or,create,set,producer,pool,enabled,producer,pool,enabled
NettyComponent -> public void setTextline(boolean textline);1470118430;Only used for TCP. If no codec is specified, you can use this flag to indicate a text line based codec__if not specified or the value is false, then Object Serialization is assumed over TCP._@param textline;public void setTextline(boolean textline) {_        getConfigurationOrCreate().setTextline(textline)__    };only,used,for,tcp,if,no,codec,is,specified,you,can,use,this,flag,to,indicate,a,text,line,based,codec,if,not,specified,or,the,value,is,false,then,object,serialization,is,assumed,over,tcp,param,textline;public,void,set,textline,boolean,textline,get,configuration,or,create,set,textline,textline
NettyComponent -> public void setTextline(boolean textline);1473234297;Only used for TCP. If no codec is specified, you can use this flag to indicate a text line based codec__if not specified or the value is false, then Object Serialization is assumed over TCP._@param textline;public void setTextline(boolean textline) {_        getConfigurationOrCreate().setTextline(textline)__    };only,used,for,tcp,if,no,codec,is,specified,you,can,use,this,flag,to,indicate,a,text,line,based,codec,if,not,specified,or,the,value,is,false,then,object,serialization,is,assumed,over,tcp,param,textline;public,void,set,textline,boolean,textline,get,configuration,or,create,set,textline,textline
NettyComponent -> public void setConfiguration(NettyConfiguration configuration);1432196781;To use the NettyConfiguration as configuration when creating endpoints.;public void setConfiguration(NettyConfiguration configuration) {_        this.configuration = configuration__    };to,use,the,netty,configuration,as,configuration,when,creating,endpoints;public,void,set,configuration,netty,configuration,configuration,this,configuration,configuration
NettyComponent -> public void setConfiguration(NettyConfiguration configuration);1453078835;To use the NettyConfiguration as configuration when creating endpoints.;public void setConfiguration(NettyConfiguration configuration) {_        this.configuration = configuration__    };to,use,the,netty,configuration,as,configuration,when,creating,endpoints;public,void,set,configuration,netty,configuration,configuration,this,configuration,configuration
NettyComponent -> public void setConfiguration(NettyConfiguration configuration);1453079004;To use the NettyConfiguration as configuration when creating endpoints.;public void setConfiguration(NettyConfiguration configuration) {_        this.configuration = configuration__    };to,use,the,netty,configuration,as,configuration,when,creating,endpoints;public,void,set,configuration,netty,configuration,configuration,this,configuration,configuration
NettyComponent -> public void setConfiguration(NettyConfiguration configuration);1470118430;To use the NettyConfiguration as configuration when creating endpoints. Properties of the shared configuration can also be set individually.;public void setConfiguration(NettyConfiguration configuration) {_        this.configuration = configuration__    };to,use,the,netty,configuration,as,configuration,when,creating,endpoints,properties,of,the,shared,configuration,can,also,be,set,individually;public,void,set,configuration,netty,configuration,configuration,this,configuration,configuration
NettyComponent -> public void setConfiguration(NettyConfiguration configuration);1473234297;To use the NettyConfiguration as configuration when creating endpoints. Properties of the shared configuration can also be set individually.;public void setConfiguration(NettyConfiguration configuration) {_        this.configuration = configuration__    };to,use,the,netty,configuration,as,configuration,when,creating,endpoints,properties,of,the,shared,configuration,can,also,be,set,individually;public,void,set,configuration,netty,configuration,configuration,this,configuration,configuration
NettyComponent -> public void setConfiguration(NettyConfiguration configuration);1474381874;To use the NettyConfiguration as configuration when creating endpoints.;public void setConfiguration(NettyConfiguration configuration) {_        this.configuration = configuration__    };to,use,the,netty,configuration,as,configuration,when,creating,endpoints;public,void,set,configuration,netty,configuration,configuration,this,configuration,configuration
NettyComponent -> public void setConfiguration(NettyConfiguration configuration);1482329852;To use the NettyConfiguration as configuration when creating endpoints.;public void setConfiguration(NettyConfiguration configuration) {_        this.configuration = configuration__    };to,use,the,netty,configuration,as,configuration,when,creating,endpoints;public,void,set,configuration,netty,configuration,configuration,this,configuration,configuration
NettyComponent -> public void setConfiguration(NettyConfiguration configuration);1491919259;To use the NettyConfiguration as configuration when creating endpoints.;public void setConfiguration(NettyConfiguration configuration) {_        this.configuration = configuration__    };to,use,the,netty,configuration,as,configuration,when,creating,endpoints;public,void,set,configuration,netty,configuration,configuration,this,configuration,configuration
NettyComponent -> public void setConfiguration(NettyConfiguration configuration);1491919462;To use the NettyConfiguration as configuration when creating endpoints.;public void setConfiguration(NettyConfiguration configuration) {_        this.configuration = configuration__    };to,use,the,netty,configuration,as,configuration,when,creating,endpoints;public,void,set,configuration,netty,configuration,configuration,this,configuration,configuration
NettyComponent -> public void setConfiguration(NettyConfiguration configuration);1491919462;To use the NettyConfiguration as configuration when creating endpoints.;public void setConfiguration(NettyConfiguration configuration) {_        this.configuration = configuration__    };to,use,the,netty,configuration,as,configuration,when,creating,endpoints;public,void,set,configuration,netty,configuration,configuration,this,configuration,configuration
NettyComponent -> public void setConfiguration(NettyConfiguration configuration);1491919462;To use the NettyConfiguration as configuration when creating endpoints.;public void setConfiguration(NettyConfiguration configuration) {_        this.configuration = configuration__    };to,use,the,netty,configuration,as,configuration,when,creating,endpoints;public,void,set,configuration,netty,configuration,configuration,this,configuration,configuration
NettyComponent -> public void setConfiguration(NettyConfiguration configuration);1524063141;To use the NettyConfiguration as configuration when creating endpoints.;public void setConfiguration(NettyConfiguration configuration) {_        this.configuration = configuration__    };to,use,the,netty,configuration,as,configuration,when,creating,endpoints;public,void,set,configuration,netty,configuration,configuration,this,configuration,configuration
NettyComponent -> public void setConfiguration(NettyConfiguration configuration);1524516648;To use the NettyConfiguration as configuration when creating endpoints.;public void setConfiguration(NettyConfiguration configuration) {_        this.configuration = configuration__    };to,use,the,netty,configuration,as,configuration,when,creating,endpoints;public,void,set,configuration,netty,configuration,configuration,this,configuration,configuration
NettyComponent -> public void setConfiguration(NettyConfiguration configuration);1534935196;To use the NettyConfiguration as configuration when creating endpoints.;public void setConfiguration(NettyConfiguration configuration) {_        this.configuration = configuration__    };to,use,the,netty,configuration,as,configuration,when,creating,endpoints;public,void,set,configuration,netty,configuration,configuration,this,configuration,configuration
NettyComponent -> public void setConfiguration(NettyConfiguration configuration);1537290824;To use the NettyConfiguration as configuration when creating endpoints.;public void setConfiguration(NettyConfiguration configuration) {_        this.configuration = configuration__    };to,use,the,netty,configuration,as,configuration,when,creating,endpoints;public,void,set,configuration,netty,configuration,configuration,this,configuration,configuration
NettyComponent -> public void setConfiguration(NettyConfiguration configuration);1540108158;To use the NettyConfiguration as configuration when creating endpoints.;public void setConfiguration(NettyConfiguration configuration) {_        this.configuration = configuration__    };to,use,the,netty,configuration,as,configuration,when,creating,endpoints;public,void,set,configuration,netty,configuration,configuration,this,configuration,configuration
NettyComponent -> public void setConfiguration(NettyConfiguration configuration);1540108163;To use the NettyConfiguration as configuration when creating endpoints.;public void setConfiguration(NettyConfiguration configuration) {_        this.configuration = configuration__    };to,use,the,netty,configuration,as,configuration,when,creating,endpoints;public,void,set,configuration,netty,configuration,configuration,this,configuration,configuration
NettyComponent -> public void setConfiguration(NettyConfiguration configuration);1547241305;To use the NettyConfiguration as configuration when creating endpoints.;public void setConfiguration(NettyConfiguration configuration) {_        this.configuration = configuration__    };to,use,the,netty,configuration,as,configuration,when,creating,endpoints;public,void,set,configuration,netty,configuration,configuration,this,configuration,configuration
NettyComponent -> public void setConfiguration(NettyConfiguration configuration);1548230502;To use the NettyConfiguration as configuration when creating endpoints.;public void setConfiguration(NettyConfiguration configuration) {_        this.configuration = configuration__    };to,use,the,netty,configuration,as,configuration,when,creating,endpoints;public,void,set,configuration,netty,configuration,configuration,this,configuration,configuration
NettyComponent -> public void setConfiguration(NettyConfiguration configuration);1548318112;To use the NettyConfiguration as configuration when creating endpoints.;public void setConfiguration(NettyConfiguration configuration) {_        this.configuration = configuration__    };to,use,the,netty,configuration,as,configuration,when,creating,endpoints;public,void,set,configuration,netty,configuration,configuration,this,configuration,configuration
NettyComponent -> public void setAutoAppendDelimiter(boolean autoAppendDelimiter);1470118430;Whether or not to auto append missing end delimiter when sending using the textline codec._@param autoAppendDelimiter;public void setAutoAppendDelimiter(boolean autoAppendDelimiter) {_        getConfigurationOrCreate().setAutoAppendDelimiter(autoAppendDelimiter)__    };whether,or,not,to,auto,append,missing,end,delimiter,when,sending,using,the,textline,codec,param,auto,append,delimiter;public,void,set,auto,append,delimiter,boolean,auto,append,delimiter,get,configuration,or,create,set,auto,append,delimiter,auto,append,delimiter
NettyComponent -> public void setAutoAppendDelimiter(boolean autoAppendDelimiter);1473234297;Whether or not to auto append missing end delimiter when sending using the textline codec._@param autoAppendDelimiter;public void setAutoAppendDelimiter(boolean autoAppendDelimiter) {_        getConfigurationOrCreate().setAutoAppendDelimiter(autoAppendDelimiter)__    };whether,or,not,to,auto,append,missing,end,delimiter,when,sending,using,the,textline,codec,param,auto,append,delimiter;public,void,set,auto,append,delimiter,boolean,auto,append,delimiter,get,configuration,or,create,set,auto,append,delimiter,auto,append,delimiter
NettyComponent -> public void setBacklog(int backlog);1470118430;Allows to configure a backlog for netty consumer (server)._Note the backlog is just a best effort depending on the OS._Setting this option to a value such as 200, 500 or 1000, tells the TCP stack how long the "accept" queue can be_If this option is not configured, then the backlog depends on OS setting._@param backlog;public void setBacklog(int backlog) {_        getConfigurationOrCreate().setBacklog(backlog)__    };allows,to,configure,a,backlog,for,netty,consumer,server,note,the,backlog,is,just,a,best,effort,depending,on,the,os,setting,this,option,to,a,value,such,as,200,500,or,1000,tells,the,tcp,stack,how,long,the,accept,queue,can,be,if,this,option,is,not,configured,then,the,backlog,depends,on,os,setting,param,backlog;public,void,set,backlog,int,backlog,get,configuration,or,create,set,backlog,backlog
NettyComponent -> public void setBacklog(int backlog);1473234297;Allows to configure a backlog for netty consumer (server)._Note the backlog is just a best effort depending on the OS._Setting this option to a value such as 200, 500 or 1000, tells the TCP stack how long the "accept" queue can be_If this option is not configured, then the backlog depends on OS setting._@param backlog;public void setBacklog(int backlog) {_        getConfigurationOrCreate().setBacklog(backlog)__    };allows,to,configure,a,backlog,for,netty,consumer,server,note,the,backlog,is,just,a,best,effort,depending,on,the,os,setting,this,option,to,a,value,such,as,200,500,or,1000,tells,the,tcp,stack,how,long,the,accept,queue,can,be,if,this,option,is,not,configured,then,the,backlog,depends,on,os,setting,param,backlog;public,void,set,backlog,int,backlog,get,configuration,or,create,set,backlog,backlog
NettyComponent -> public void setSslClientCertHeaders(boolean sslClientCertHeaders);1470118430;When enabled and in SSL mode, then the Netty consumer will enrich the Camel Message with headers having_information about the client certificate such as subject name, issuer name, serial number, and the valid date range._@param sslClientCertHeaders;public void setSslClientCertHeaders(boolean sslClientCertHeaders) {_        getConfigurationOrCreate().setSslClientCertHeaders(sslClientCertHeaders)__    };when,enabled,and,in,ssl,mode,then,the,netty,consumer,will,enrich,the,camel,message,with,headers,having,information,about,the,client,certificate,such,as,subject,name,issuer,name,serial,number,and,the,valid,date,range,param,ssl,client,cert,headers;public,void,set,ssl,client,cert,headers,boolean,ssl,client,cert,headers,get,configuration,or,create,set,ssl,client,cert,headers,ssl,client,cert,headers
NettyComponent -> public void setSslClientCertHeaders(boolean sslClientCertHeaders);1473234297;When enabled and in SSL mode, then the Netty consumer will enrich the Camel Message with headers having_information about the client certificate such as subject name, issuer name, serial number, and the valid date range._@param sslClientCertHeaders;public void setSslClientCertHeaders(boolean sslClientCertHeaders) {_        getConfigurationOrCreate().setSslClientCertHeaders(sslClientCertHeaders)__    };when,enabled,and,in,ssl,mode,then,the,netty,consumer,will,enrich,the,camel,message,with,headers,having,information,about,the,client,certificate,such,as,subject,name,issuer,name,serial,number,and,the,valid,date,range,param,ssl,client,cert,headers;public,void,set,ssl,client,cert,headers,boolean,ssl,client,cert,headers,get,configuration,or,create,set,ssl,client,cert,headers,ssl,client,cert,headers
NettyComponent -> public void setUsingExecutorService(boolean usingExecutorService);1470118430;Whether to use ordered thread pool, to ensure events are processed orderly on the same channel._@param usingExecutorService;public void setUsingExecutorService(boolean usingExecutorService) {_        getConfigurationOrCreate().setUsingExecutorService(usingExecutorService)__    };whether,to,use,ordered,thread,pool,to,ensure,events,are,processed,orderly,on,the,same,channel,param,using,executor,service;public,void,set,using,executor,service,boolean,using,executor,service,get,configuration,or,create,set,using,executor,service,using,executor,service
NettyComponent -> public void setUsingExecutorService(boolean usingExecutorService);1473234297;Whether to use ordered thread pool, to ensure events are processed orderly on the same channel._@param usingExecutorService;public void setUsingExecutorService(boolean usingExecutorService) {_        getConfigurationOrCreate().setUsingExecutorService(usingExecutorService)__    };whether,to,use,ordered,thread,pool,to,ensure,events,are,processed,orderly,on,the,same,channel,param,using,executor,service;public,void,set,using,executor,service,boolean,using,executor,service,get,configuration,or,create,set,using,executor,service,using,executor,service
NettyComponent -> public void setReceiveBufferSizePredictor(int receiveBufferSizePredictor);1470118430;Configures the buffer size predictor. See details at Jetty documentation and this mail thread._@param receiveBufferSizePredictor;public void setReceiveBufferSizePredictor(int receiveBufferSizePredictor) {_        getConfigurationOrCreate().setReceiveBufferSizePredictor(receiveBufferSizePredictor)__    };configures,the,buffer,size,predictor,see,details,at,jetty,documentation,and,this,mail,thread,param,receive,buffer,size,predictor;public,void,set,receive,buffer,size,predictor,int,receive,buffer,size,predictor,get,configuration,or,create,set,receive,buffer,size,predictor,receive,buffer,size,predictor
NettyComponent -> public void setReceiveBufferSizePredictor(int receiveBufferSizePredictor);1473234297;Configures the buffer size predictor. See details at Jetty documentation and this mail thread._@param receiveBufferSizePredictor;public void setReceiveBufferSizePredictor(int receiveBufferSizePredictor) {_        getConfigurationOrCreate().setReceiveBufferSizePredictor(receiveBufferSizePredictor)__    };configures,the,buffer,size,predictor,see,details,at,jetty,documentation,and,this,mail,thread,param,receive,buffer,size,predictor;public,void,set,receive,buffer,size,predictor,int,receive,buffer,size,predictor,get,configuration,or,create,set,receive,buffer,size,predictor,receive,buffer,size,predictor
NettyComponent -> public void setConnectTimeout(int connectTimeout);1470118430;Time to wait for a socket connection to be available. Value is in millis._@param connectTimeout;public void setConnectTimeout(int connectTimeout) {_        getConfigurationOrCreate().setConnectTimeout(connectTimeout)__    };time,to,wait,for,a,socket,connection,to,be,available,value,is,in,millis,param,connect,timeout;public,void,set,connect,timeout,int,connect,timeout,get,configuration,or,create,set,connect,timeout,connect,timeout
NettyComponent -> public void setConnectTimeout(int connectTimeout);1473234297;Time to wait for a socket connection to be available. Value is in millis._@param connectTimeout;public void setConnectTimeout(int connectTimeout) {_        getConfigurationOrCreate().setConnectTimeout(connectTimeout)__    };time,to,wait,for,a,socket,connection,to,be,available,value,is,in,millis,param,connect,timeout;public,void,set,connect,timeout,int,connect,timeout,get,configuration,or,create,set,connect,timeout,connect,timeout
NettyComponent -> public void setRequestTimeout(long requestTimeout);1470118430;Allows to use a timeout for the Netty producer when calling a remote server._By default no timeout is in use. The value is in milli seconds, so eg 30000 is 30 seconds._The requestTimeout is using Netty's ReadTimeoutHandler to trigger the timeout._@param requestTimeout;public void setRequestTimeout(long requestTimeout) {_        getConfigurationOrCreate().setRequestTimeout(requestTimeout)__    };allows,to,use,a,timeout,for,the,netty,producer,when,calling,a,remote,server,by,default,no,timeout,is,in,use,the,value,is,in,milli,seconds,so,eg,30000,is,30,seconds,the,request,timeout,is,using,netty,s,read,timeout,handler,to,trigger,the,timeout,param,request,timeout;public,void,set,request,timeout,long,request,timeout,get,configuration,or,create,set,request,timeout,request,timeout
NettyComponent -> public void setRequestTimeout(long requestTimeout);1473234297;Allows to use a timeout for the Netty producer when calling a remote server._By default no timeout is in use. The value is in milli seconds, so eg 30000 is 30 seconds._The requestTimeout is using Netty's ReadTimeoutHandler to trigger the timeout._@param requestTimeout;public void setRequestTimeout(long requestTimeout) {_        getConfigurationOrCreate().setRequestTimeout(requestTimeout)__    };allows,to,use,a,timeout,for,the,netty,producer,when,calling,a,remote,server,by,default,no,timeout,is,in,use,the,value,is,in,milli,seconds,so,eg,30000,is,30,seconds,the,request,timeout,is,using,netty,s,read,timeout,handler,to,trigger,the,timeout,param,request,timeout;public,void,set,request,timeout,long,request,timeout,get,configuration,or,create,set,request,timeout,request,timeout
NettyComponent -> public void setMaximumPoolSize(int maximumPoolSize);1453078835;The thread pool size for the EventExecutorGroup if its in use._<p/>_The default value is 16.;public void setMaximumPoolSize(int maximumPoolSize) {_        this.maximumPoolSize = maximumPoolSize__    };the,thread,pool,size,for,the,event,executor,group,if,its,in,use,p,the,default,value,is,16;public,void,set,maximum,pool,size,int,maximum,pool,size,this,maximum,pool,size,maximum,pool,size
NettyComponent -> public void setMaximumPoolSize(int maximumPoolSize);1453079004;The thread pool size for the EventExecutorGroup if its in use._<p/>_The default value is 16.;public void setMaximumPoolSize(int maximumPoolSize) {_        this.maximumPoolSize = maximumPoolSize__    };the,thread,pool,size,for,the,event,executor,group,if,its,in,use,p,the,default,value,is,16;public,void,set,maximum,pool,size,int,maximum,pool,size,this,maximum,pool,size,maximum,pool,size
NettyComponent -> public void setMaximumPoolSize(int maximumPoolSize);1470118430;The thread pool size for the EventExecutorGroup if its in use._<p/>_The default value is 16.;public void setMaximumPoolSize(int maximumPoolSize) {_        this.maximumPoolSize = maximumPoolSize__    };the,thread,pool,size,for,the,event,executor,group,if,its,in,use,p,the,default,value,is,16;public,void,set,maximum,pool,size,int,maximum,pool,size,this,maximum,pool,size,maximum,pool,size
NettyComponent -> public void setMaximumPoolSize(int maximumPoolSize);1473234297;The thread pool size for the EventExecutorGroup if its in use._<p/>_The default value is 16.;public void setMaximumPoolSize(int maximumPoolSize) {_        this.maximumPoolSize = maximumPoolSize__    };the,thread,pool,size,for,the,event,executor,group,if,its,in,use,p,the,default,value,is,16;public,void,set,maximum,pool,size,int,maximum,pool,size,this,maximum,pool,size,maximum,pool,size
NettyComponent -> public void setMaximumPoolSize(int maximumPoolSize);1474381874;The thread pool size for the EventExecutorGroup if its in use._<p/>_The default value is 16.;public void setMaximumPoolSize(int maximumPoolSize) {_        this.maximumPoolSize = maximumPoolSize__    };the,thread,pool,size,for,the,event,executor,group,if,its,in,use,p,the,default,value,is,16;public,void,set,maximum,pool,size,int,maximum,pool,size,this,maximum,pool,size,maximum,pool,size
NettyComponent -> public void setMaximumPoolSize(int maximumPoolSize);1482329852;The thread pool size for the EventExecutorGroup if its in use._<p/>_The default value is 16.;public void setMaximumPoolSize(int maximumPoolSize) {_        this.maximumPoolSize = maximumPoolSize__    };the,thread,pool,size,for,the,event,executor,group,if,its,in,use,p,the,default,value,is,16;public,void,set,maximum,pool,size,int,maximum,pool,size,this,maximum,pool,size,maximum,pool,size
NettyComponent -> public void setMaximumPoolSize(int maximumPoolSize);1491919259;The thread pool size for the EventExecutorGroup if its in use._<p/>_The default value is 16.;public void setMaximumPoolSize(int maximumPoolSize) {_        this.maximumPoolSize = maximumPoolSize__    };the,thread,pool,size,for,the,event,executor,group,if,its,in,use,p,the,default,value,is,16;public,void,set,maximum,pool,size,int,maximum,pool,size,this,maximum,pool,size,maximum,pool,size
NettyComponent -> public void setMaximumPoolSize(int maximumPoolSize);1491919462;The thread pool size for the EventExecutorGroup if its in use._<p/>_The default value is 16.;public void setMaximumPoolSize(int maximumPoolSize) {_        this.maximumPoolSize = maximumPoolSize__    };the,thread,pool,size,for,the,event,executor,group,if,its,in,use,p,the,default,value,is,16;public,void,set,maximum,pool,size,int,maximum,pool,size,this,maximum,pool,size,maximum,pool,size
NettyComponent -> public void setMaximumPoolSize(int maximumPoolSize);1491919462;The thread pool size for the EventExecutorGroup if its in use._<p/>_The default value is 16.;public void setMaximumPoolSize(int maximumPoolSize) {_        this.maximumPoolSize = maximumPoolSize__    };the,thread,pool,size,for,the,event,executor,group,if,its,in,use,p,the,default,value,is,16;public,void,set,maximum,pool,size,int,maximum,pool,size,this,maximum,pool,size,maximum,pool,size
NettyComponent -> public void setMaximumPoolSize(int maximumPoolSize);1491919462;The thread pool size for the EventExecutorGroup if its in use._<p/>_The default value is 16.;public void setMaximumPoolSize(int maximumPoolSize) {_        this.maximumPoolSize = maximumPoolSize__    };the,thread,pool,size,for,the,event,executor,group,if,its,in,use,p,the,default,value,is,16;public,void,set,maximum,pool,size,int,maximum,pool,size,this,maximum,pool,size,maximum,pool,size
NettyComponent -> public void setMaximumPoolSize(int maximumPoolSize);1524063141;The thread pool size for the EventExecutorGroup if its in use._<p/>_The default value is 16.;public void setMaximumPoolSize(int maximumPoolSize) {_        this.maximumPoolSize = maximumPoolSize__    };the,thread,pool,size,for,the,event,executor,group,if,its,in,use,p,the,default,value,is,16;public,void,set,maximum,pool,size,int,maximum,pool,size,this,maximum,pool,size,maximum,pool,size
NettyComponent -> public void setMaximumPoolSize(int maximumPoolSize);1524516648;The thread pool size for the EventExecutorGroup if its in use._<p/>_The default value is 16.;public void setMaximumPoolSize(int maximumPoolSize) {_        this.maximumPoolSize = maximumPoolSize__    };the,thread,pool,size,for,the,event,executor,group,if,its,in,use,p,the,default,value,is,16;public,void,set,maximum,pool,size,int,maximum,pool,size,this,maximum,pool,size,maximum,pool,size
NettyComponent -> public void setMaximumPoolSize(int maximumPoolSize);1534935196;The thread pool size for the EventExecutorGroup if its in use._<p/>_The default value is 16.;public void setMaximumPoolSize(int maximumPoolSize) {_        this.maximumPoolSize = maximumPoolSize__    };the,thread,pool,size,for,the,event,executor,group,if,its,in,use,p,the,default,value,is,16;public,void,set,maximum,pool,size,int,maximum,pool,size,this,maximum,pool,size,maximum,pool,size
NettyComponent -> public void setMaximumPoolSize(int maximumPoolSize);1537290824;The thread pool size for the EventExecutorGroup if its in use._<p/>_The default value is 16.;public void setMaximumPoolSize(int maximumPoolSize) {_        this.maximumPoolSize = maximumPoolSize__    };the,thread,pool,size,for,the,event,executor,group,if,its,in,use,p,the,default,value,is,16;public,void,set,maximum,pool,size,int,maximum,pool,size,this,maximum,pool,size,maximum,pool,size
NettyComponent -> public void setMaximumPoolSize(int maximumPoolSize);1540108158;The thread pool size for the EventExecutorGroup if its in use._<p/>_The default value is 16.;public void setMaximumPoolSize(int maximumPoolSize) {_        this.maximumPoolSize = maximumPoolSize__    };the,thread,pool,size,for,the,event,executor,group,if,its,in,use,p,the,default,value,is,16;public,void,set,maximum,pool,size,int,maximum,pool,size,this,maximum,pool,size,maximum,pool,size
NettyComponent -> public void setMaximumPoolSize(int maximumPoolSize);1540108163;The thread pool size for the EventExecutorGroup if its in use._<p/>_The default value is 16.;public void setMaximumPoolSize(int maximumPoolSize) {_        this.maximumPoolSize = maximumPoolSize__    };the,thread,pool,size,for,the,event,executor,group,if,its,in,use,p,the,default,value,is,16;public,void,set,maximum,pool,size,int,maximum,pool,size,this,maximum,pool,size,maximum,pool,size
NettyComponent -> public void setMaximumPoolSize(int maximumPoolSize);1547241305;The thread pool size for the EventExecutorGroup if its in use._<p/>_The default value is 16.;public void setMaximumPoolSize(int maximumPoolSize) {_        this.maximumPoolSize = maximumPoolSize__    };the,thread,pool,size,for,the,event,executor,group,if,its,in,use,p,the,default,value,is,16;public,void,set,maximum,pool,size,int,maximum,pool,size,this,maximum,pool,size,maximum,pool,size
NettyComponent -> public void setMaximumPoolSize(int maximumPoolSize);1548230502;The thread pool size for the EventExecutorGroup if its in use._<p/>_The default value is 16.;public void setMaximumPoolSize(int maximumPoolSize) {_        this.maximumPoolSize = maximumPoolSize__    };the,thread,pool,size,for,the,event,executor,group,if,its,in,use,p,the,default,value,is,16;public,void,set,maximum,pool,size,int,maximum,pool,size,this,maximum,pool,size,maximum,pool,size
NettyComponent -> public void setMaximumPoolSize(int maximumPoolSize);1548318112;The thread pool size for the EventExecutorGroup if its in use._<p/>_The default value is 16.;public void setMaximumPoolSize(int maximumPoolSize) {_        this.maximumPoolSize = maximumPoolSize__    };the,thread,pool,size,for,the,event,executor,group,if,its,in,use,p,the,default,value,is,16;public,void,set,maximum,pool,size,int,maximum,pool,size,this,maximum,pool,size,maximum,pool,size
NettyComponent -> public void setChannelGroup(ChannelGroup channelGroup);1470118430;To use a explicit ChannelGroup._@param channelGroup;public void setChannelGroup(ChannelGroup channelGroup) {_        getConfigurationOrCreate().setChannelGroup(channelGroup)__    };to,use,a,explicit,channel,group,param,channel,group;public,void,set,channel,group,channel,group,channel,group,get,configuration,or,create,set,channel,group,channel,group
NettyComponent -> public void setChannelGroup(ChannelGroup channelGroup);1473234297;To use a explicit ChannelGroup._@param channelGroup;public void setChannelGroup(ChannelGroup channelGroup) {_        getConfigurationOrCreate().setChannelGroup(channelGroup)__    };to,use,a,explicit,channel,group,param,channel,group;public,void,set,channel,group,channel,group,channel,group,get,configuration,or,create,set,channel,group,channel,group
NettyComponent -> public void setServerClosedChannelExceptionCaughtLogLevel(LoggingLevel serverClosedChannelExceptionCaughtLogLevel);1470118430;If the server (NettyConsumer) catches an java.nio.channels.ClosedChannelException then its logged using this logging level._This is used to avoid logging the closed channel exceptions, as clients can disconnect abruptly and then cause a flood of closed exceptions in the Netty server._@param serverClosedChannelExceptionCaughtLogLevel;public void setServerClosedChannelExceptionCaughtLogLevel(LoggingLevel serverClosedChannelExceptionCaughtLogLevel) {_        getConfigurationOrCreate().setServerClosedChannelExceptionCaughtLogLevel(serverClosedChannelExceptionCaughtLogLevel)__    };if,the,server,netty,consumer,catches,an,java,nio,channels,closed,channel,exception,then,its,logged,using,this,logging,level,this,is,used,to,avoid,logging,the,closed,channel,exceptions,as,clients,can,disconnect,abruptly,and,then,cause,a,flood,of,closed,exceptions,in,the,netty,server,param,server,closed,channel,exception,caught,log,level;public,void,set,server,closed,channel,exception,caught,log,level,logging,level,server,closed,channel,exception,caught,log,level,get,configuration,or,create,set,server,closed,channel,exception,caught,log,level,server,closed,channel,exception,caught,log,level
NettyComponent -> public void setServerClosedChannelExceptionCaughtLogLevel(LoggingLevel serverClosedChannelExceptionCaughtLogLevel);1473234297;If the server (NettyConsumer) catches an java.nio.channels.ClosedChannelException then its logged using this logging level._This is used to avoid logging the closed channel exceptions, as clients can disconnect abruptly and then cause a flood of closed exceptions in the Netty server._@param serverClosedChannelExceptionCaughtLogLevel;public void setServerClosedChannelExceptionCaughtLogLevel(LoggingLevel serverClosedChannelExceptionCaughtLogLevel) {_        getConfigurationOrCreate().setServerClosedChannelExceptionCaughtLogLevel(serverClosedChannelExceptionCaughtLogLevel)__    };if,the,server,netty,consumer,catches,an,java,nio,channels,closed,channel,exception,then,its,logged,using,this,logging,level,this,is,used,to,avoid,logging,the,closed,channel,exceptions,as,clients,can,disconnect,abruptly,and,then,cause,a,flood,of,closed,exceptions,in,the,netty,server,param,server,closed,channel,exception,caught,log,level;public,void,set,server,closed,channel,exception,caught,log,level,logging,level,server,closed,channel,exception,caught,log,level,get,configuration,or,create,set,server,closed,channel,exception,caught,log,level,server,closed,channel,exception,caught,log,level
NettyComponent -> public void setProducerPoolMaxIdle(int producerPoolMaxIdle);1470118430;Sets the cap on the number of "idle" instances in the pool._@param producerPoolMaxIdle;public void setProducerPoolMaxIdle(int producerPoolMaxIdle) {_        getConfigurationOrCreate().setProducerPoolMaxIdle(producerPoolMaxIdle)__    };sets,the,cap,on,the,number,of,idle,instances,in,the,pool,param,producer,pool,max,idle;public,void,set,producer,pool,max,idle,int,producer,pool,max,idle,get,configuration,or,create,set,producer,pool,max,idle,producer,pool,max,idle
NettyComponent -> public void setProducerPoolMaxIdle(int producerPoolMaxIdle);1473234297;Sets the cap on the number of "idle" instances in the pool._@param producerPoolMaxIdle;public void setProducerPoolMaxIdle(int producerPoolMaxIdle) {_        getConfigurationOrCreate().setProducerPoolMaxIdle(producerPoolMaxIdle)__    };sets,the,cap,on,the,number,of,idle,instances,in,the,pool,param,producer,pool,max,idle;public,void,set,producer,pool,max,idle,int,producer,pool,max,idle,get,configuration,or,create,set,producer,pool,max,idle,producer,pool,max,idle
NettyComponent -> public void setPassphrase(String passphrase);1470118430;Password setting to use in order to encrypt/decrypt payloads sent using SSH_@param passphrase;public void setPassphrase(String passphrase) {_        getConfigurationOrCreate().setPassphrase(passphrase)__    };password,setting,to,use,in,order,to,encrypt,decrypt,payloads,sent,using,ssh,param,passphrase;public,void,set,passphrase,string,passphrase,get,configuration,or,create,set,passphrase,passphrase
NettyComponent -> public void setPassphrase(String passphrase);1473234297;Password setting to use in order to encrypt/decrypt payloads sent using SSH_@param passphrase;public void setPassphrase(String passphrase) {_        getConfigurationOrCreate().setPassphrase(passphrase)__    };password,setting,to,use,in,order,to,encrypt,decrypt,payloads,sent,using,ssh,param,passphrase;public,void,set,passphrase,string,passphrase,get,configuration,or,create,set,passphrase,passphrase
NettyComponent -> public void setClientMode(boolean clientMode);1470118430;If the clientMode is true, netty consumer will connect the address as a TCP client._@param clientMode;public void setClientMode(boolean clientMode) {_        getConfigurationOrCreate().setClientMode(clientMode)__    };if,the,client,mode,is,true,netty,consumer,will,connect,the,address,as,a,tcp,client,param,client,mode;public,void,set,client,mode,boolean,client,mode,get,configuration,or,create,set,client,mode,client,mode
NettyComponent -> public void setClientMode(boolean clientMode);1473234297;If the clientMode is true, netty consumer will connect the address as a TCP client._@param clientMode;public void setClientMode(boolean clientMode) {_        getConfigurationOrCreate().setClientMode(clientMode)__    };if,the,client,mode,is,true,netty,consumer,will,connect,the,address,as,a,tcp,client,param,client,mode;public,void,set,client,mode,boolean,client,mode,get,configuration,or,create,set,client,mode,client,mode
NettyComponent -> public void setEnabledProtocols(String enabledProtocols);1470118430;Which protocols to enable when using SSL_@param enabledProtocols;public void setEnabledProtocols(String enabledProtocols) {_        getConfigurationOrCreate().setEnabledProtocols(enabledProtocols)__    };which,protocols,to,enable,when,using,ssl,param,enabled,protocols;public,void,set,enabled,protocols,string,enabled,protocols,get,configuration,or,create,set,enabled,protocols,enabled,protocols
NettyComponent -> public void setEnabledProtocols(String enabledProtocols);1473234297;Which protocols to enable when using SSL_@param enabledProtocols;public void setEnabledProtocols(String enabledProtocols) {_        getConfigurationOrCreate().setEnabledProtocols(enabledProtocols)__    };which,protocols,to,enable,when,using,ssl,param,enabled,protocols;public,void,set,enabled,protocols,string,enabled,protocols,get,configuration,or,create,set,enabled,protocols,enabled,protocols
NettyComponent -> public void setSendBufferSize(int sendBufferSize);1470118430;The TCP/UDP buffer sizes to be used during outbound communication. Size is bytes._@param sendBufferSize;public void setSendBufferSize(int sendBufferSize) {_        getConfigurationOrCreate().setSendBufferSize(sendBufferSize)__    };the,tcp,udp,buffer,sizes,to,be,used,during,outbound,communication,size,is,bytes,param,send,buffer,size;public,void,set,send,buffer,size,int,send,buffer,size,get,configuration,or,create,set,send,buffer,size,send,buffer,size
NettyComponent -> public void setSendBufferSize(int sendBufferSize);1473234297;The TCP/UDP buffer sizes to be used during outbound communication. Size is bytes._@param sendBufferSize;public void setSendBufferSize(int sendBufferSize) {_        getConfigurationOrCreate().setSendBufferSize(sendBufferSize)__    };the,tcp,udp,buffer,sizes,to,be,used,during,outbound,communication,size,is,bytes,param,send,buffer,size;public,void,set,send,buffer,size,int,send,buffer,size,get,configuration,or,create,set,send,buffer,size,send,buffer,size
NettyComponent -> public void setBroadcast(boolean broadcast);1470118430;Setting to choose Multicast over UDP_@param broadcast;public void setBroadcast(boolean broadcast) {_        getConfigurationOrCreate().setBroadcast(broadcast)__    };setting,to,choose,multicast,over,udp,param,broadcast;public,void,set,broadcast,boolean,broadcast,get,configuration,or,create,set,broadcast,broadcast
NettyComponent -> public void setBroadcast(boolean broadcast);1473234297;Setting to choose Multicast over UDP_@param broadcast;public void setBroadcast(boolean broadcast) {_        getConfigurationOrCreate().setBroadcast(broadcast)__    };setting,to,choose,multicast,over,udp,param,broadcast;public,void,set,broadcast,boolean,broadcast,get,configuration,or,create,set,broadcast,broadcast
NettyComponent -> protected NettyConfiguration parseConfiguration(NettyConfiguration configuration, String remaining, Map<String, Object> parameters) throws Exception;1375883136;Parses the configuration__@return the parsed and valid configuration to use;protected NettyConfiguration parseConfiguration(NettyConfiguration configuration, String remaining, Map<String, Object> parameters) throws Exception {_        configuration.parseURI(new URI(remaining), parameters, this, "tcp", "udp")__        return configuration__    };parses,the,configuration,return,the,parsed,and,valid,configuration,to,use;protected,netty,configuration,parse,configuration,netty,configuration,configuration,string,remaining,map,string,object,parameters,throws,exception,configuration,parse,uri,new,uri,remaining,parameters,this,tcp,udp,return,configuration
NettyComponent -> protected NettyConfiguration parseConfiguration(NettyConfiguration configuration, String remaining, Map<String, Object> parameters) throws Exception;1415211488;Parses the configuration__@return the parsed and valid configuration to use;protected NettyConfiguration parseConfiguration(NettyConfiguration configuration, String remaining, Map<String, Object> parameters) throws Exception {_        configuration.parseURI(new URI(remaining), parameters, this, "tcp", "udp")__        return configuration__    };parses,the,configuration,return,the,parsed,and,valid,configuration,to,use;protected,netty,configuration,parse,configuration,netty,configuration,configuration,string,remaining,map,string,object,parameters,throws,exception,configuration,parse,uri,new,uri,remaining,parameters,this,tcp,udp,return,configuration
NettyComponent -> protected NettyConfiguration parseConfiguration(NettyConfiguration configuration, String remaining, Map<String, Object> parameters) throws Exception;1415625102;Parses the configuration__@return the parsed and valid configuration to use;protected NettyConfiguration parseConfiguration(NettyConfiguration configuration, String remaining, Map<String, Object> parameters) throws Exception {_        configuration.parseURI(new URI(remaining), parameters, this, "tcp", "udp")__        return configuration__    };parses,the,configuration,return,the,parsed,and,valid,configuration,to,use;protected,netty,configuration,parse,configuration,netty,configuration,configuration,string,remaining,map,string,object,parameters,throws,exception,configuration,parse,uri,new,uri,remaining,parameters,this,tcp,udp,return,configuration
NettyComponent -> protected NettyConfiguration parseConfiguration(NettyConfiguration configuration, String remaining, Map<String, Object> parameters) throws Exception;1431267983;Parses the configuration__@return the parsed and valid configuration to use;protected NettyConfiguration parseConfiguration(NettyConfiguration configuration, String remaining, Map<String, Object> parameters) throws Exception {_        configuration.parseURI(new URI(remaining), parameters, this, "tcp", "udp")__        return configuration__    };parses,the,configuration,return,the,parsed,and,valid,configuration,to,use;protected,netty,configuration,parse,configuration,netty,configuration,configuration,string,remaining,map,string,object,parameters,throws,exception,configuration,parse,uri,new,uri,remaining,parameters,this,tcp,udp,return,configuration
NettyComponent -> protected NettyConfiguration parseConfiguration(NettyConfiguration configuration, String remaining, Map<String, Object> parameters) throws Exception;1432196781;Parses the configuration__@return the parsed and valid configuration to use;protected NettyConfiguration parseConfiguration(NettyConfiguration configuration, String remaining, Map<String, Object> parameters) throws Exception {_        configuration.parseURI(new URI(remaining), parameters, this, "tcp", "udp")__        return configuration__    };parses,the,configuration,return,the,parsed,and,valid,configuration,to,use;protected,netty,configuration,parse,configuration,netty,configuration,configuration,string,remaining,map,string,object,parameters,throws,exception,configuration,parse,uri,new,uri,remaining,parameters,this,tcp,udp,return,configuration
NettyComponent -> protected NettyConfiguration parseConfiguration(NettyConfiguration configuration, String remaining, Map<String, Object> parameters) throws Exception;1453078835;Parses the configuration__@return the parsed and valid configuration to use;protected NettyConfiguration parseConfiguration(NettyConfiguration configuration, String remaining, Map<String, Object> parameters) throws Exception {_        configuration.parseURI(new URI(remaining), parameters, this, "tcp", "udp")__        return configuration__    };parses,the,configuration,return,the,parsed,and,valid,configuration,to,use;protected,netty,configuration,parse,configuration,netty,configuration,configuration,string,remaining,map,string,object,parameters,throws,exception,configuration,parse,uri,new,uri,remaining,parameters,this,tcp,udp,return,configuration
NettyComponent -> protected NettyConfiguration parseConfiguration(NettyConfiguration configuration, String remaining, Map<String, Object> parameters) throws Exception;1453079004;Parses the configuration__@return the parsed and valid configuration to use;protected NettyConfiguration parseConfiguration(NettyConfiguration configuration, String remaining, Map<String, Object> parameters) throws Exception {_        configuration.parseURI(new URI(remaining), parameters, this, "tcp", "udp")__        return configuration__    };parses,the,configuration,return,the,parsed,and,valid,configuration,to,use;protected,netty,configuration,parse,configuration,netty,configuration,configuration,string,remaining,map,string,object,parameters,throws,exception,configuration,parse,uri,new,uri,remaining,parameters,this,tcp,udp,return,configuration
NettyComponent -> protected NettyConfiguration parseConfiguration(NettyConfiguration configuration, String remaining, Map<String, Object> parameters) throws Exception;1470118430;Parses the configuration__@return the parsed and valid configuration to use;protected NettyConfiguration parseConfiguration(NettyConfiguration configuration, String remaining, Map<String, Object> parameters) throws Exception {_        configuration.parseURI(new URI(remaining), parameters, this, "tcp", "udp")__        return configuration__    };parses,the,configuration,return,the,parsed,and,valid,configuration,to,use;protected,netty,configuration,parse,configuration,netty,configuration,configuration,string,remaining,map,string,object,parameters,throws,exception,configuration,parse,uri,new,uri,remaining,parameters,this,tcp,udp,return,configuration
NettyComponent -> protected NettyConfiguration parseConfiguration(NettyConfiguration configuration, String remaining, Map<String, Object> parameters) throws Exception;1473234297;Parses the configuration__@return the parsed and valid configuration to use;protected NettyConfiguration parseConfiguration(NettyConfiguration configuration, String remaining, Map<String, Object> parameters) throws Exception {_        configuration.parseURI(new URI(remaining), parameters, this, "tcp", "udp")__        return configuration__    };parses,the,configuration,return,the,parsed,and,valid,configuration,to,use;protected,netty,configuration,parse,configuration,netty,configuration,configuration,string,remaining,map,string,object,parameters,throws,exception,configuration,parse,uri,new,uri,remaining,parameters,this,tcp,udp,return,configuration
NettyComponent -> protected NettyConfiguration parseConfiguration(NettyConfiguration configuration, String remaining, Map<String, Object> parameters) throws Exception;1474381874;Parses the configuration__@return the parsed and valid configuration to use;protected NettyConfiguration parseConfiguration(NettyConfiguration configuration, String remaining, Map<String, Object> parameters) throws Exception {_        configuration.parseURI(new URI(remaining), parameters, this, "tcp", "udp")__        return configuration__    };parses,the,configuration,return,the,parsed,and,valid,configuration,to,use;protected,netty,configuration,parse,configuration,netty,configuration,configuration,string,remaining,map,string,object,parameters,throws,exception,configuration,parse,uri,new,uri,remaining,parameters,this,tcp,udp,return,configuration
NettyComponent -> protected NettyConfiguration parseConfiguration(NettyConfiguration configuration, String remaining, Map<String, Object> parameters) throws Exception;1482329852;Parses the configuration__@return the parsed and valid configuration to use;protected NettyConfiguration parseConfiguration(NettyConfiguration configuration, String remaining, Map<String, Object> parameters) throws Exception {_        configuration.parseURI(new URI(remaining), parameters, this, "tcp", "udp")__        return configuration__    };parses,the,configuration,return,the,parsed,and,valid,configuration,to,use;protected,netty,configuration,parse,configuration,netty,configuration,configuration,string,remaining,map,string,object,parameters,throws,exception,configuration,parse,uri,new,uri,remaining,parameters,this,tcp,udp,return,configuration
NettyComponent -> protected NettyConfiguration parseConfiguration(NettyConfiguration configuration, String remaining, Map<String, Object> parameters) throws Exception;1491919259;Parses the configuration__@return the parsed and valid configuration to use;protected NettyConfiguration parseConfiguration(NettyConfiguration configuration, String remaining, Map<String, Object> parameters) throws Exception {_        configuration.parseURI(new URI(remaining), parameters, this, "tcp", "udp")__        return configuration__    };parses,the,configuration,return,the,parsed,and,valid,configuration,to,use;protected,netty,configuration,parse,configuration,netty,configuration,configuration,string,remaining,map,string,object,parameters,throws,exception,configuration,parse,uri,new,uri,remaining,parameters,this,tcp,udp,return,configuration
NettyComponent -> protected NettyConfiguration parseConfiguration(NettyConfiguration configuration, String remaining, Map<String, Object> parameters) throws Exception;1491919462;Parses the configuration__@return the parsed and valid configuration to use;protected NettyConfiguration parseConfiguration(NettyConfiguration configuration, String remaining, Map<String, Object> parameters) throws Exception {_        configuration.parseURI(new URI(remaining), parameters, this, "tcp", "udp")__        return configuration__    };parses,the,configuration,return,the,parsed,and,valid,configuration,to,use;protected,netty,configuration,parse,configuration,netty,configuration,configuration,string,remaining,map,string,object,parameters,throws,exception,configuration,parse,uri,new,uri,remaining,parameters,this,tcp,udp,return,configuration
NettyComponent -> protected NettyConfiguration parseConfiguration(NettyConfiguration configuration, String remaining, Map<String, Object> parameters) throws Exception;1491919462;Parses the configuration__@return the parsed and valid configuration to use;protected NettyConfiguration parseConfiguration(NettyConfiguration configuration, String remaining, Map<String, Object> parameters) throws Exception {_        configuration.parseURI(new URI(remaining), parameters, this, "tcp", "udp")__        return configuration__    };parses,the,configuration,return,the,parsed,and,valid,configuration,to,use;protected,netty,configuration,parse,configuration,netty,configuration,configuration,string,remaining,map,string,object,parameters,throws,exception,configuration,parse,uri,new,uri,remaining,parameters,this,tcp,udp,return,configuration
NettyComponent -> protected NettyConfiguration parseConfiguration(NettyConfiguration configuration, String remaining, Map<String, Object> parameters) throws Exception;1491919462;Parses the configuration__@return the parsed and valid configuration to use;protected NettyConfiguration parseConfiguration(NettyConfiguration configuration, String remaining, Map<String, Object> parameters) throws Exception {_        configuration.parseURI(new URI(remaining), parameters, this, "tcp", "udp")__        return configuration__    };parses,the,configuration,return,the,parsed,and,valid,configuration,to,use;protected,netty,configuration,parse,configuration,netty,configuration,configuration,string,remaining,map,string,object,parameters,throws,exception,configuration,parse,uri,new,uri,remaining,parameters,this,tcp,udp,return,configuration
NettyComponent -> protected NettyConfiguration parseConfiguration(NettyConfiguration configuration, String remaining, Map<String, Object> parameters) throws Exception;1524063141;Parses the configuration__@return the parsed and valid configuration to use;protected NettyConfiguration parseConfiguration(NettyConfiguration configuration, String remaining, Map<String, Object> parameters) throws Exception {_        configuration.parseURI(new URI(remaining), parameters, this, "tcp", "udp")__        return configuration__    };parses,the,configuration,return,the,parsed,and,valid,configuration,to,use;protected,netty,configuration,parse,configuration,netty,configuration,configuration,string,remaining,map,string,object,parameters,throws,exception,configuration,parse,uri,new,uri,remaining,parameters,this,tcp,udp,return,configuration
NettyComponent -> protected NettyConfiguration parseConfiguration(NettyConfiguration configuration, String remaining, Map<String, Object> parameters) throws Exception;1524516648;Parses the configuration__@return the parsed and valid configuration to use;protected NettyConfiguration parseConfiguration(NettyConfiguration configuration, String remaining, Map<String, Object> parameters) throws Exception {_        configuration.parseURI(new URI(remaining), parameters, this, "tcp", "udp")__        return configuration__    };parses,the,configuration,return,the,parsed,and,valid,configuration,to,use;protected,netty,configuration,parse,configuration,netty,configuration,configuration,string,remaining,map,string,object,parameters,throws,exception,configuration,parse,uri,new,uri,remaining,parameters,this,tcp,udp,return,configuration
NettyComponent -> protected NettyConfiguration parseConfiguration(NettyConfiguration configuration, String remaining, Map<String, Object> parameters) throws Exception;1534935196;Parses the configuration__@return the parsed and valid configuration to use;protected NettyConfiguration parseConfiguration(NettyConfiguration configuration, String remaining, Map<String, Object> parameters) throws Exception {_        configuration.parseURI(new URI(remaining), parameters, this, "tcp", "udp")__        return configuration__    };parses,the,configuration,return,the,parsed,and,valid,configuration,to,use;protected,netty,configuration,parse,configuration,netty,configuration,configuration,string,remaining,map,string,object,parameters,throws,exception,configuration,parse,uri,new,uri,remaining,parameters,this,tcp,udp,return,configuration
NettyComponent -> protected NettyConfiguration parseConfiguration(NettyConfiguration configuration, String remaining, Map<String, Object> parameters) throws Exception;1537290824;Parses the configuration__@return the parsed and valid configuration to use;protected NettyConfiguration parseConfiguration(NettyConfiguration configuration, String remaining, Map<String, Object> parameters) throws Exception {_        configuration.parseURI(new URI(remaining), parameters, this, "tcp", "udp")__        return configuration__    };parses,the,configuration,return,the,parsed,and,valid,configuration,to,use;protected,netty,configuration,parse,configuration,netty,configuration,configuration,string,remaining,map,string,object,parameters,throws,exception,configuration,parse,uri,new,uri,remaining,parameters,this,tcp,udp,return,configuration
NettyComponent -> protected NettyConfiguration parseConfiguration(NettyConfiguration configuration, String remaining, Map<String, Object> parameters) throws Exception;1540108158;Parses the configuration__@return the parsed and valid configuration to use;protected NettyConfiguration parseConfiguration(NettyConfiguration configuration, String remaining, Map<String, Object> parameters) throws Exception {_        configuration.parseURI(new URI(remaining), parameters, this, "tcp", "udp")__        return configuration__    };parses,the,configuration,return,the,parsed,and,valid,configuration,to,use;protected,netty,configuration,parse,configuration,netty,configuration,configuration,string,remaining,map,string,object,parameters,throws,exception,configuration,parse,uri,new,uri,remaining,parameters,this,tcp,udp,return,configuration
NettyComponent -> protected NettyConfiguration parseConfiguration(NettyConfiguration configuration, String remaining, Map<String, Object> parameters) throws Exception;1540108163;Parses the configuration__@return the parsed and valid configuration to use;protected NettyConfiguration parseConfiguration(NettyConfiguration configuration, String remaining, Map<String, Object> parameters) throws Exception {_        configuration.parseURI(new URI(remaining), parameters, this, "tcp", "udp")__        return configuration__    };parses,the,configuration,return,the,parsed,and,valid,configuration,to,use;protected,netty,configuration,parse,configuration,netty,configuration,configuration,string,remaining,map,string,object,parameters,throws,exception,configuration,parse,uri,new,uri,remaining,parameters,this,tcp,udp,return,configuration
NettyComponent -> protected NettyConfiguration parseConfiguration(NettyConfiguration configuration, String remaining, Map<String, Object> parameters) throws Exception;1547241305;Parses the configuration__@return the parsed and valid configuration to use;protected NettyConfiguration parseConfiguration(NettyConfiguration configuration, String remaining, Map<String, Object> parameters) throws Exception {_        configuration.parseURI(new URI(remaining), parameters, this, "tcp", "udp")__        return configuration__    };parses,the,configuration,return,the,parsed,and,valid,configuration,to,use;protected,netty,configuration,parse,configuration,netty,configuration,configuration,string,remaining,map,string,object,parameters,throws,exception,configuration,parse,uri,new,uri,remaining,parameters,this,tcp,udp,return,configuration
NettyComponent -> protected NettyConfiguration parseConfiguration(NettyConfiguration configuration, String remaining, Map<String, Object> parameters) throws Exception;1548230502;Parses the configuration__@return the parsed and valid configuration to use;protected NettyConfiguration parseConfiguration(NettyConfiguration configuration, String remaining, Map<String, Object> parameters) throws Exception {_        configuration.parseURI(new URI(remaining), parameters, this, "tcp", "udp")__        return configuration__    };parses,the,configuration,return,the,parsed,and,valid,configuration,to,use;protected,netty,configuration,parse,configuration,netty,configuration,configuration,string,remaining,map,string,object,parameters,throws,exception,configuration,parse,uri,new,uri,remaining,parameters,this,tcp,udp,return,configuration
NettyComponent -> protected NettyConfiguration parseConfiguration(NettyConfiguration configuration, String remaining, Map<String, Object> parameters) throws Exception;1548318112;Parses the configuration__@return the parsed and valid configuration to use;protected NettyConfiguration parseConfiguration(NettyConfiguration configuration, String remaining, Map<String, Object> parameters) throws Exception {_        configuration.parseURI(new URI(remaining), parameters, this, "tcp", "udp")__        return configuration__    };parses,the,configuration,return,the,parsed,and,valid,configuration,to,use;protected,netty,configuration,parse,configuration,netty,configuration,configuration,string,remaining,map,string,object,parameters,throws,exception,configuration,parse,uri,new,uri,remaining,parameters,this,tcp,udp,return,configuration
NettyComponent -> public void setKeepAlive(boolean keepAlive);1470118430;Setting to ensure socket is not closed due to inactivity_@param keepAlive;public void setKeepAlive(boolean keepAlive) {_        getConfigurationOrCreate().setKeepAlive(keepAlive)__    };setting,to,ensure,socket,is,not,closed,due,to,inactivity,param,keep,alive;public,void,set,keep,alive,boolean,keep,alive,get,configuration,or,create,set,keep,alive,keep,alive
NettyComponent -> public void setKeepAlive(boolean keepAlive);1473234297;Setting to ensure socket is not closed due to inactivity_@param keepAlive;public void setKeepAlive(boolean keepAlive) {_        getConfigurationOrCreate().setKeepAlive(keepAlive)__    };setting,to,ensure,socket,is,not,closed,due,to,inactivity,param,keep,alive;public,void,set,keep,alive,boolean,keep,alive,get,configuration,or,create,set,keep,alive,keep,alive
NettyComponent -> public void setSsl(boolean ssl);1470118430;Setting to specify whether SSL encryption is applied to this endpoint_@param ssl;public void setSsl(boolean ssl) {_        getConfigurationOrCreate().setSsl(ssl)__    };setting,to,specify,whether,ssl,encryption,is,applied,to,this,endpoint,param,ssl;public,void,set,ssl,boolean,ssl,get,configuration,or,create,set,ssl,ssl
NettyComponent -> public void setSsl(boolean ssl);1473234297;Setting to specify whether SSL encryption is applied to this endpoint_@param ssl;public void setSsl(boolean ssl) {_        getConfigurationOrCreate().setSsl(ssl)__    };setting,to,specify,whether,ssl,encryption,is,applied,to,this,endpoint,param,ssl;public,void,set,ssl,boolean,ssl,get,configuration,or,create,set,ssl,ssl
NettyComponent -> public void setServerInitializerFactory(ServerInitializerFactory serverInitializerFactory);1470118430;To use a custom ServerInitializerFactory_@param serverInitializerFactory;public void setServerInitializerFactory(ServerInitializerFactory serverInitializerFactory) {_        getConfigurationOrCreate().setServerInitializerFactory(serverInitializerFactory)__    };to,use,a,custom,server,initializer,factory,param,server,initializer,factory;public,void,set,server,initializer,factory,server,initializer,factory,server,initializer,factory,get,configuration,or,create,set,server,initializer,factory,server,initializer,factory
NettyComponent -> public void setServerInitializerFactory(ServerInitializerFactory serverInitializerFactory);1473234297;To use a custom ServerInitializerFactory_@param serverInitializerFactory;public void setServerInitializerFactory(ServerInitializerFactory serverInitializerFactory) {_        getConfigurationOrCreate().setServerInitializerFactory(serverInitializerFactory)__    };to,use,a,custom,server,initializer,factory,param,server,initializer,factory;public,void,set,server,initializer,factory,server,initializer,factory,server,initializer,factory,get,configuration,or,create,set,server,initializer,factory,server,initializer,factory
NettyComponent -> public void setNeedClientAuth(boolean needClientAuth);1470118430;Configures whether the server needs client authentication when using SSL._@param needClientAuth;public void setNeedClientAuth(boolean needClientAuth) {_        getConfigurationOrCreate().setNeedClientAuth(needClientAuth)__    };configures,whether,the,server,needs,client,authentication,when,using,ssl,param,need,client,auth;public,void,set,need,client,auth,boolean,need,client,auth,get,configuration,or,create,set,need,client,auth,need,client,auth
NettyComponent -> public void setNeedClientAuth(boolean needClientAuth);1473234297;Configures whether the server needs client authentication when using SSL._@param needClientAuth;public void setNeedClientAuth(boolean needClientAuth) {_        getConfigurationOrCreate().setNeedClientAuth(needClientAuth)__    };configures,whether,the,server,needs,client,authentication,when,using,ssl,param,need,client,auth;public,void,set,need,client,auth,boolean,need,client,auth,get,configuration,or,create,set,need,client,auth,need,client,auth
NettyComponent -> public void setClientInitializerFactory(ClientInitializerFactory clientInitializerFactory);1470118430;To use a custom ClientInitializerFactory_@param clientInitializerFactory;public void setClientInitializerFactory(ClientInitializerFactory clientInitializerFactory) {_        getConfigurationOrCreate().setClientInitializerFactory(clientInitializerFactory)__    };to,use,a,custom,client,initializer,factory,param,client,initializer,factory;public,void,set,client,initializer,factory,client,initializer,factory,client,initializer,factory,get,configuration,or,create,set,client,initializer,factory,client,initializer,factory
NettyComponent -> public void setClientInitializerFactory(ClientInitializerFactory clientInitializerFactory);1473234297;To use a custom ClientInitializerFactory_@param clientInitializerFactory;public void setClientInitializerFactory(ClientInitializerFactory clientInitializerFactory) {_        getConfigurationOrCreate().setClientInitializerFactory(clientInitializerFactory)__    };to,use,a,custom,client,initializer,factory,param,client,initializer,factory;public,void,set,client,initializer,factory,client,initializer,factory,client,initializer,factory,get,configuration,or,create,set,client,initializer,factory,client,initializer,factory
NettyComponent -> @Override     public void setUseGlobalSslContextParameters(boolean useGlobalSslContextParameters);1491919462;Enable usage of global SSL context parameters.;@Override_    public void setUseGlobalSslContextParameters(boolean useGlobalSslContextParameters) {_        this.useGlobalSslContextParameters = useGlobalSslContextParameters__    };enable,usage,of,global,ssl,context,parameters;override,public,void,set,use,global,ssl,context,parameters,boolean,use,global,ssl,context,parameters,this,use,global,ssl,context,parameters,use,global,ssl,context,parameters
NettyComponent -> @Override     public void setUseGlobalSslContextParameters(boolean useGlobalSslContextParameters);1524063141;Enable usage of global SSL context parameters.;@Override_    public void setUseGlobalSslContextParameters(boolean useGlobalSslContextParameters) {_        this.useGlobalSslContextParameters = useGlobalSslContextParameters__    };enable,usage,of,global,ssl,context,parameters;override,public,void,set,use,global,ssl,context,parameters,boolean,use,global,ssl,context,parameters,this,use,global,ssl,context,parameters,use,global,ssl,context,parameters
NettyComponent -> @Override     public void setUseGlobalSslContextParameters(boolean useGlobalSslContextParameters);1524516648;Enable usage of global SSL context parameters.;@Override_    public void setUseGlobalSslContextParameters(boolean useGlobalSslContextParameters) {_        this.useGlobalSslContextParameters = useGlobalSslContextParameters__    };enable,usage,of,global,ssl,context,parameters;override,public,void,set,use,global,ssl,context,parameters,boolean,use,global,ssl,context,parameters,this,use,global,ssl,context,parameters,use,global,ssl,context,parameters
NettyComponent -> @Override     public void setUseGlobalSslContextParameters(boolean useGlobalSslContextParameters);1534935196;Enable usage of global SSL context parameters.;@Override_    public void setUseGlobalSslContextParameters(boolean useGlobalSslContextParameters) {_        this.useGlobalSslContextParameters = useGlobalSslContextParameters__    };enable,usage,of,global,ssl,context,parameters;override,public,void,set,use,global,ssl,context,parameters,boolean,use,global,ssl,context,parameters,this,use,global,ssl,context,parameters,use,global,ssl,context,parameters
NettyComponent -> @Override     public void setUseGlobalSslContextParameters(boolean useGlobalSslContextParameters);1537290824;Enable usage of global SSL context parameters.;@Override_    public void setUseGlobalSslContextParameters(boolean useGlobalSslContextParameters) {_        this.useGlobalSslContextParameters = useGlobalSslContextParameters__    };enable,usage,of,global,ssl,context,parameters;override,public,void,set,use,global,ssl,context,parameters,boolean,use,global,ssl,context,parameters,this,use,global,ssl,context,parameters,use,global,ssl,context,parameters
NettyComponent -> @Override     public void setUseGlobalSslContextParameters(boolean useGlobalSslContextParameters);1540108158;Enable usage of global SSL context parameters.;@Override_    public void setUseGlobalSslContextParameters(boolean useGlobalSslContextParameters) {_        this.useGlobalSslContextParameters = useGlobalSslContextParameters__    };enable,usage,of,global,ssl,context,parameters;override,public,void,set,use,global,ssl,context,parameters,boolean,use,global,ssl,context,parameters,this,use,global,ssl,context,parameters,use,global,ssl,context,parameters
NettyComponent -> @Override     public void setUseGlobalSslContextParameters(boolean useGlobalSslContextParameters);1540108163;Enable usage of global SSL context parameters.;@Override_    public void setUseGlobalSslContextParameters(boolean useGlobalSslContextParameters) {_        this.useGlobalSslContextParameters = useGlobalSslContextParameters__    };enable,usage,of,global,ssl,context,parameters;override,public,void,set,use,global,ssl,context,parameters,boolean,use,global,ssl,context,parameters,this,use,global,ssl,context,parameters,use,global,ssl,context,parameters
NettyComponent -> @Override     public void setUseGlobalSslContextParameters(boolean useGlobalSslContextParameters);1547241305;Enable usage of global SSL context parameters.;@Override_    public void setUseGlobalSslContextParameters(boolean useGlobalSslContextParameters) {_        this.useGlobalSslContextParameters = useGlobalSslContextParameters__    };enable,usage,of,global,ssl,context,parameters;override,public,void,set,use,global,ssl,context,parameters,boolean,use,global,ssl,context,parameters,this,use,global,ssl,context,parameters,use,global,ssl,context,parameters
NettyComponent -> @Override     public void setUseGlobalSslContextParameters(boolean useGlobalSslContextParameters);1548230502;Enable usage of global SSL context parameters.;@Override_    public void setUseGlobalSslContextParameters(boolean useGlobalSslContextParameters) {_        this.useGlobalSslContextParameters = useGlobalSslContextParameters__    };enable,usage,of,global,ssl,context,parameters;override,public,void,set,use,global,ssl,context,parameters,boolean,use,global,ssl,context,parameters,this,use,global,ssl,context,parameters,use,global,ssl,context,parameters
NettyComponent -> @Override     public void setUseGlobalSslContextParameters(boolean useGlobalSslContextParameters);1548318112;Enable usage of global SSL context parameters.;@Override_    public void setUseGlobalSslContextParameters(boolean useGlobalSslContextParameters) {_        this.useGlobalSslContextParameters = useGlobalSslContextParameters__    };enable,usage,of,global,ssl,context,parameters;override,public,void,set,use,global,ssl,context,parameters,boolean,use,global,ssl,context,parameters,this,use,global,ssl,context,parameters,use,global,ssl,context,parameters
NettyComponent -> public void setNoReplyLogLevel(LoggingLevel noReplyLogLevel);1470118430;If sync is enabled this option dictates NettyConsumer which logging level to use when logging a there is no reply to send back._@param noReplyLogLevel;public void setNoReplyLogLevel(LoggingLevel noReplyLogLevel) {_        getConfigurationOrCreate().setNoReplyLogLevel(noReplyLogLevel)__    };if,sync,is,enabled,this,option,dictates,netty,consumer,which,logging,level,to,use,when,logging,a,there,is,no,reply,to,send,back,param,no,reply,log,level;public,void,set,no,reply,log,level,logging,level,no,reply,log,level,get,configuration,or,create,set,no,reply,log,level,no,reply,log,level
NettyComponent -> public void setNoReplyLogLevel(LoggingLevel noReplyLogLevel);1473234297;If sync is enabled this option dictates NettyConsumer which logging level to use when logging a there is no reply to send back._@param noReplyLogLevel;public void setNoReplyLogLevel(LoggingLevel noReplyLogLevel) {_        getConfigurationOrCreate().setNoReplyLogLevel(noReplyLogLevel)__    };if,sync,is,enabled,this,option,dictates,netty,consumer,which,logging,level,to,use,when,logging,a,there,is,no,reply,to,send,back,param,no,reply,log,level;public,void,set,no,reply,log,level,logging,level,no,reply,log,level,get,configuration,or,create,set,no,reply,log,level,no,reply,log,level
NettyComponent -> public void setEncoders(List<ChannelHandler> encoders);1470118430;A list of encoders to be used. You can use a String which have values separated by comma, and have the values be looked up in the Registry._Just remember to prefix the value with # so Camel knows it should lookup._@param encoders;public void setEncoders(List<ChannelHandler> encoders) {_        getConfigurationOrCreate().setEncoders(encoders)__    };a,list,of,encoders,to,be,used,you,can,use,a,string,which,have,values,separated,by,comma,and,have,the,values,be,looked,up,in,the,registry,just,remember,to,prefix,the,value,with,so,camel,knows,it,should,lookup,param,encoders;public,void,set,encoders,list,channel,handler,encoders,get,configuration,or,create,set,encoders,encoders
NettyComponent -> public void setEncoders(List<ChannelHandler> encoders);1473234297;A list of encoders to be used. You can use a String which have values separated by comma, and have the values be looked up in the Registry._Just remember to prefix the value with # so Camel knows it should lookup._@param encoders;public void setEncoders(List<ChannelHandler> encoders) {_        getConfigurationOrCreate().setEncoders(encoders)__    };a,list,of,encoders,to,be,used,you,can,use,a,string,which,have,values,separated,by,comma,and,have,the,values,be,looked,up,in,the,registry,just,remember,to,prefix,the,value,with,so,camel,knows,it,should,lookup,param,encoders;public,void,set,encoders,list,channel,handler,encoders,get,configuration,or,create,set,encoders,encoders
