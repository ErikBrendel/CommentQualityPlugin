commented;modifiers;parameterAmount;loc;comment;code
true;;3;1;/**  * Initializes this <b>non-shared</b> {@link NettyServerBootstrapFactory}.  *  * @param camelContext     the {@link CamelContext} for non-shared bootstrap factory  * @param configuration    the bootstrap configuration  * @param pipelineFactory  the channel initializer which set up the channel handler pipeline  */ ;/**  * Initializes this <b>non-shared</b> {@link NettyServerBootstrapFactory}.  *  * @param camelContext     the {@link CamelContext} for non-shared bootstrap factory  * @param configuration    the bootstrap configuration  * @param pipelineFactory  the channel initializer which set up the channel handler pipeline  */ void init(CamelContext camelContext, NettyServerBootstrapConfiguration configuration, ChannelInitializer<Channel> pipelineFactory).
true;;3;1;/**  * Initializes this <b>shared</b> {@link NettyServerBootstrapFactory}.  *  * @param threadFactory    the thread factory to use for shared bootstrap factory  * @param configuration    the bootstrap configuration  * @param pipelineFactory  the channel initializer which set up the channel handler pipeline  */ ;/**  * Initializes this <b>shared</b> {@link NettyServerBootstrapFactory}.  *  * @param threadFactory    the thread factory to use for shared bootstrap factory  * @param configuration    the bootstrap configuration  * @param pipelineFactory  the channel initializer which set up the channel handler pipeline  */ void init(ThreadFactory threadFactory, NettyServerBootstrapConfiguration configuration, ChannelInitializer<Channel> pipelineFactory).
true;;1;1;/**  * When a new {@link Channel} is opened.  */ ;/**  * When a new {@link Channel} is opened.  */ void addChannel(Channel channel).
true;;1;1;/**  * When a {@link Channel} is closed.  */ ;/**  * When a {@link Channel} is closed.  */ void removeChannel(Channel channel).
true;;1;1;/**  * When a {@link NettyConsumer} is added and uses this bootstrap factory.  */ ;/**  * When a {@link NettyConsumer} is added and uses this bootstrap factory.  */ void addConsumer(NettyConsumer consumer).
true;;1;1;/**  * When a {@link NettyConsumer} is removed and no longer using this bootstrap factory.  */ ;/**  * When a {@link NettyConsumer} is removed and no longer using this bootstrap factory.  */ void removeConsumer(NettyConsumer consumer).
