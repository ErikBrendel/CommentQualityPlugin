commented;modifiers;parameterAmount;loc;comment;code
false;public;1;4;;@Override public void handleException(Throwable exception) {     handleException(null, null, exception). }
false;public;2;4;;@Override public void handleException(String message, Throwable exception) {     handleException(message, null, exception). }
false;public;3;14;;@Override public void handleException(String message, Exchange exchange, Throwable exception) {     try {         String msg = CamelExchangeException.createExceptionMessage(message, exchange, exception).         boolean closed = ObjectHelper.getException(ClosedChannelException.class, exception) != null.         if (closed) {             logger.log(msg, exception, closedLoggingLevel).         } else {             logger.log(msg, exception).         }     } catch (Throwable e) {     // the logging exception handler must not cause new exceptions to occur     } }
