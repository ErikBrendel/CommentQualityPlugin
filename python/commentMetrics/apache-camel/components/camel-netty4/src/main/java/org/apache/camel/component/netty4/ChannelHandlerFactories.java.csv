commented;modifiers;parameterAmount;loc;comment;code
false;public,static;2;7;;public static ChannelHandlerFactory newStringEncoder(Charset charset, String protocol) {     if ("udp".equalsIgnoreCase(protocol)) {         return new ShareableChannelHandlerFactory(new DatagramPacketStringEncoder(charset)).     } else {         return new ShareableChannelHandlerFactory(new StringEncoder(charset)).     } }
false;public,static;2;7;;public static ChannelHandlerFactory newStringDecoder(Charset charset, String protocol) {     if ("udp".equalsIgnoreCase(protocol)) {         return new ShareableChannelHandlerFactory(new DatagramPacketStringDecoder(charset)).     } else {         return new ShareableChannelHandlerFactory(new StringDecoder(charset)).     } }
false;public;0;4;;@Override public ChannelHandler newChannelHandler() {     return new ObjectDecoder(ClassResolvers.weakCachingResolver(null)). }
false;public;0;4;;@Override public ChannelHandler newChannelHandler() {     return new DatagramPacketObjectDecoder(ClassResolvers.weakCachingResolver(null)). }
false;public,static;1;17;;public static ChannelHandlerFactory newObjectDecoder(String protocol) {     if ("udp".equalsIgnoreCase(protocol)) {         return new DefaultChannelHandlerFactory() {              @Override             public ChannelHandler newChannelHandler() {                 return new DatagramPacketObjectDecoder(ClassResolvers.weakCachingResolver(null)).             }         }.     } else {         return new DefaultChannelHandlerFactory() {              @Override             public ChannelHandler newChannelHandler() {                 return new ObjectDecoder(ClassResolvers.weakCachingResolver(null)).             }         }.     } }
false;public,static;1;7;;public static ChannelHandlerFactory newObjectEncoder(String protocol) {     if ("udp".equals(protocol)) {         return new ShareableChannelHandlerFactory(new DatagramPacketObjectEncoder()).     } else {         return new ShareableChannelHandlerFactory(new ObjectEncoder()).     } }
false;public,static;3;3;;public static ChannelHandlerFactory newDelimiterBasedFrameDecoder(final int maxFrameLength, final ByteBuf[] delimiters, String protocol) {     return newDelimiterBasedFrameDecoder(maxFrameLength, delimiters, true, protocol). }
false;public;0;4;;@Override public ChannelHandler newChannelHandler() {     return new DelimiterBasedFrameDecoder(maxFrameLength, stripDelimiter, delimiters). }
false;public;0;4;;@Override public ChannelHandler newChannelHandler() {     return new DatagramPacketDelimiterDecoder(maxFrameLength, stripDelimiter, delimiters). }
false;public,static;4;17;;public static ChannelHandlerFactory newDelimiterBasedFrameDecoder(final int maxFrameLength, final ByteBuf[] delimiters, final boolean stripDelimiter, String protocol) {     if ("udp".equals(protocol)) {         return new DefaultChannelHandlerFactory() {              @Override             public ChannelHandler newChannelHandler() {                 return new DatagramPacketDelimiterDecoder(maxFrameLength, stripDelimiter, delimiters).             }         }.     } else {         return new DefaultChannelHandlerFactory() {              @Override             public ChannelHandler newChannelHandler() {                 return new DelimiterBasedFrameDecoder(maxFrameLength, stripDelimiter, delimiters).             }         }.     } }
false;public,static;0;3;;public static ChannelHandlerFactory newDatagramPacketDecoder() {     return new ShareableChannelHandlerFactory(new DatagramPacketDecoder()). }
false;public,static;0;3;;public static ChannelHandlerFactory newDatagramPacketEncoder() {     return new ShareableChannelHandlerFactory(new DatagramPacketEncoder()). }
false;public;0;4;;@Override public ChannelHandler newChannelHandler() {     return new LengthFieldBasedFrameDecoder(maxFrameLength, lengthFieldOffset, lengthFieldLength, lengthAdjustment, initialBytesToStrip). }
false;public,static;5;10;;public static ChannelHandlerFactory newLengthFieldBasedFrameDecoder(final int maxFrameLength, final int lengthFieldOffset, final int lengthFieldLength, final int lengthAdjustment, final int initialBytesToStrip) {     return new DefaultChannelHandlerFactory() {          @Override         public ChannelHandler newChannelHandler() {             return new LengthFieldBasedFrameDecoder(maxFrameLength, lengthFieldOffset, lengthFieldLength, lengthAdjustment, initialBytesToStrip).         }     }. }
false;public,static;1;7;;public static ChannelHandlerFactory newByteArrayDecoder(String protocol) {     if ("udp".equals(protocol)) {         return new ShareableChannelHandlerFactory(new DatagramPacketByteArrayDecoder()).     } else {         return new ShareableChannelHandlerFactory(new ByteArrayDecoder()).     } }
false;public,static;1;7;;public static ChannelHandlerFactory newByteArrayEncoder(String protocol) {     if ("udp".equals(protocol)) {         return new ShareableChannelHandlerFactory(new DatagramPacketByteArrayEncoder()).     } else {         return new ShareableChannelHandlerFactory(new ByteArrayEncoder()).     } }
