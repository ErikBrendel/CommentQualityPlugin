commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public NettyEndpoint getEndpoint() {     return (NettyEndpoint) super.getEndpoint(). }
false;protected;0;32;;@Override protected void doStart() throws Exception {     super.doStart().     log.debug("Netty consumer binding to: {}", configuration.getAddress()).     if (nettyServerBootstrapFactory == null) {         // setup pipeline factory         ServerInitializerFactory pipelineFactory.         ServerInitializerFactory factory = configuration.getServerInitializerFactory().         if (factory != null) {             pipelineFactory = factory.createPipelineFactory(this).         } else {             pipelineFactory = new DefaultServerInitializerFactory(this).         }         if (isTcp()) {             if (configuration.isClientMode()) {                 nettyServerBootstrapFactory = new ClientModeTCPNettyServerBootstrapFactory().             } else {                 nettyServerBootstrapFactory = new SingleTCPNettyServerBootstrapFactory().             }         } else {             nettyServerBootstrapFactory = new SingleUDPNettyServerBootstrapFactory().         }         nettyServerBootstrapFactory.init(context, configuration, pipelineFactory).     }     ServiceHelper.startService(nettyServerBootstrapFactory).     log.info("Netty consumer bound to: {}", configuration.getAddress()). }
false;protected;0;10;;@Override protected void doStop() throws Exception {     log.debug("Netty consumer unbinding from: {}", configuration.getAddress()).     ServiceHelper.stopService(nettyServerBootstrapFactory).     log.info("Netty consumer unbound from: {}", configuration.getAddress()).     super.doStop(). }
false;public;0;3;;public CamelContext getContext() {     return context. }
false;public;0;3;;public NettyConfiguration getConfiguration() {     return configuration. }
false;public;1;3;;public void setConfiguration(NettyConfiguration configuration) {     this.configuration = configuration. }
false;public;0;3;;public NettyServerBootstrapFactory getNettyServerBootstrapFactory() {     return nettyServerBootstrapFactory. }
false;public;1;3;;public void setNettyServerBootstrapFactory(NettyServerBootstrapFactory nettyServerBootstrapFactory) {     this.nettyServerBootstrapFactory = nettyServerBootstrapFactory. }
false;protected;0;3;;protected boolean isTcp() {     return configuration.getProtocol().equalsIgnoreCase("tcp"). }
