commented;modifiers;parameterAmount;loc;comment;code
false;public;0;12;;@Test public void testNettyManaul() throws Exception {     assertNotNull(endpoint).     getMockEndpoint("mock:result").expectedMessageCount(1).     template.sendBody(endpoint, "Hello World\n").     assertMockEndpointsSatisfied().     assertEquals("netty4:tcp://localhost:" + getPort(), endpoint.getEndpointUri()). }
false;public;0;28;;@Override public void configure() throws Exception {     NettyConfiguration nettyConfig = new NettyConfiguration().     nettyConfig.setProtocol("tcp").     nettyConfig.setHost("localhost").     nettyConfig.setPort(getPort()).     nettyConfig.setSync(false).     // need to add encoders and decoders manually     nettyConfig.setEncoder(ChannelHandlerFactories.newStringEncoder(CharsetUtil.UTF_8, "tcp")).     List<ChannelHandler> decoders = new ArrayList<>().     decoders.add(ChannelHandlerFactories.newDelimiterBasedFrameDecoder(1000, Delimiters.lineDelimiter(), "tcp")).     decoders.add(ChannelHandlerFactories.newStringDecoder(CharsetUtil.UTF_8, "tcp")).     nettyConfig.setDecoders(decoders).     // create and start component     NettyComponent component = new NettyComponent(getContext()).     component.setConfiguration(nettyConfig).     getContext().addComponent("netty4", component).     component.start().     // create and start endpoint, pass in null as endpoint uri     // as we create this endpoint manually     endpoint = new NettyEndpoint(null, component, nettyConfig).     endpoint.start().     from(endpoint).to("mock:result"). }
false;protected;0;33;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             NettyConfiguration nettyConfig = new NettyConfiguration().             nettyConfig.setProtocol("tcp").             nettyConfig.setHost("localhost").             nettyConfig.setPort(getPort()).             nettyConfig.setSync(false).             // need to add encoders and decoders manually             nettyConfig.setEncoder(ChannelHandlerFactories.newStringEncoder(CharsetUtil.UTF_8, "tcp")).             List<ChannelHandler> decoders = new ArrayList<>().             decoders.add(ChannelHandlerFactories.newDelimiterBasedFrameDecoder(1000, Delimiters.lineDelimiter(), "tcp")).             decoders.add(ChannelHandlerFactories.newStringDecoder(CharsetUtil.UTF_8, "tcp")).             nettyConfig.setDecoders(decoders).             // create and start component             NettyComponent component = new NettyComponent(getContext()).             component.setConfiguration(nettyConfig).             getContext().addComponent("netty4", component).             component.start().             // create and start endpoint, pass in null as endpoint uri             // as we create this endpoint manually             endpoint = new NettyEndpoint(null, component, nettyConfig).             endpoint.start().             from(endpoint).to("mock:result").         }     }. }
