commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;7;;@Override protected JndiRegistry createRegistry() throws Exception {     JndiRegistry registry = super.createRegistry().     registry.bind("ksf", new File("src/test/resources/keystore.jks")).     registry.bind("tsf", new File("src/test/resources/keystore.jks")).     return registry. }
false;public;0;4;;@Override public boolean isUseRouteBuilder() {     return false. }
false;public;0;7;;public void configure() {     // needClientAuth=true so we can get the client certificate details     from("netty4:tcp://localhost:{{port}}?sync=true&ssl=true&passphrase=changeit&keyStoreResource=#ksf&trustStoreResource=#tsf" + "&needClientAuth=true&sslClientCertHeaders=true").to("mock:input").transform().constant("Bye World"). }
false;public;0;33;;@Test public void testSSLInOutWithNettyConsumer() throws Exception {     // ibm jdks dont have sun security algorithms     if (isJavaVendor("ibm")) {         return.     }     getMockEndpoint("mock:input").expectedMessageCount(1).     getMockEndpoint("mock:input").expectedHeaderReceived(NettyConstants.NETTY_SSL_CLIENT_CERT_SUBJECT_NAME, "CN=arlu15, OU=Sun Java System Application Server, O=Sun Microsystems, L=Santa Clara, ST=California, C=US").     getMockEndpoint("mock:input").expectedHeaderReceived(NettyConstants.NETTY_SSL_CLIENT_CERT_ISSUER_NAME, "CN=arlu15, OU=Sun Java System Application Server, O=Sun Microsystems, L=Santa Clara, ST=California, C=US").     getMockEndpoint("mock:input").expectedHeaderReceived(NettyConstants.NETTY_SSL_CLIENT_CERT_SERIAL_NO, "1210701502").     context.addRoutes(new RouteBuilder() {          public void configure() {             // needClientAuth=true so we can get the client certificate details             from("netty4:tcp://localhost:{{port}}?sync=true&ssl=true&passphrase=changeit&keyStoreResource=#ksf&trustStoreResource=#tsf" + "&needClientAuth=true&sslClientCertHeaders=true").to("mock:input").transform().constant("Bye World").         }     }).     context.start().     String response = template.requestBody("netty4:tcp://localhost:{{port}}?sync=true&ssl=true&passphrase=changeit&keyStoreResource=#ksf&trustStoreResource=#tsf", "Hello World", String.class).     assertEquals("Bye World", response).     assertMockEndpointsSatisfied(). }
