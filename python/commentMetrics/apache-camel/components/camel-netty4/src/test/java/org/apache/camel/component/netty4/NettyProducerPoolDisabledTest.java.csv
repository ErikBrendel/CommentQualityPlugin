commented;modifiers;parameterAmount;loc;comment;code
false;public;0;7;;@Test public void testProducerPoolDisabled() throws Exception {     for (int i = 0. i < 10. i++) {         String reply = template.requestBody("direct:start", "Hello " + i, String.class).         assertEquals("Bye " + i, reply).     } }
false;public;0;10;;@Override public void configure() throws Exception {     from("direct:start").to("netty4:tcp://localhost:{{port}}?textline=true&sync=true&producerPoolEnabled=false").     from("netty4:tcp://localhost:{{port}}?textline=true&sync=true").validate(body().isInstanceOf(String.class)).transform(body().regexReplaceAll("Hello", "Bye")). }
false;protected;0;15;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").to("netty4:tcp://localhost:{{port}}?textline=true&sync=true&producerPoolEnabled=false").             from("netty4:tcp://localhost:{{port}}?textline=true&sync=true").validate(body().isInstanceOf(String.class)).transform(body().regexReplaceAll("Hello", "Bye")).         }     }. }
