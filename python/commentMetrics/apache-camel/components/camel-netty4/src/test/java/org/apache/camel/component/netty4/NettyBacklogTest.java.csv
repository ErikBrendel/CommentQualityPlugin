commented;modifiers;parameterAmount;loc;comment;code
false;public;1;9;;public void process(Exchange exchange) throws Exception {     if (exchange.getIn().getBody() instanceof Poetry) {         Poetry poetry = (Poetry) exchange.getIn().getBody().         poetry.setPoet("Dr. Sarojini Naidu").         exchange.getOut().setBody(poetry).         return.     }     exchange.getOut().setBody("When You Go Home, Tell Them Of Us And Say, For Your Tomorrow, We Gave Our Today."). }
false;public;0;15;;@Override public void configure() throws Exception {     from("netty4:tcp://localhost:{{port}}?sync=true&backlog=500").process(new Processor() {          public void process(Exchange exchange) throws Exception {             if (exchange.getIn().getBody() instanceof Poetry) {                 Poetry poetry = (Poetry) exchange.getIn().getBody().                 poetry.setPoet("Dr. Sarojini Naidu").                 exchange.getOut().setBody(poetry).                 return.             }             exchange.getOut().setBody("When You Go Home, Tell Them Of Us And Say, For Your Tomorrow, We Gave Our Today.").         }     }). }
false;protected;0;20;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("netty4:tcp://localhost:{{port}}?sync=true&backlog=500").process(new Processor() {                  public void process(Exchange exchange) throws Exception {                     if (exchange.getIn().getBody() instanceof Poetry) {                         Poetry poetry = (Poetry) exchange.getIn().getBody().                         poetry.setPoet("Dr. Sarojini Naidu").                         exchange.getOut().setBody(poetry).                         return.                     }                     exchange.getOut().setBody("When You Go Home, Tell Them Of Us And Say, For Your Tomorrow, We Gave Our Today.").                 }             }).         }     }. }
