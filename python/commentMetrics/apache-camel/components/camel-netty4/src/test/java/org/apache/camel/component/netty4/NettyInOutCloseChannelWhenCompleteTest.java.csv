commented;modifiers;parameterAmount;loc;comment;code
false;public;0;5;;@Test public void testCloseSessionWhenComplete() throws Exception {     Object out = template.requestBody("netty4:tcp://localhost:{{port}}?sync=true", "Claus").     assertEquals("Bye Claus", out). }
false;public;1;5;;public void process(Exchange exchange) throws Exception {     String body = exchange.getIn().getBody(String.class).     exchange.getOut().setBody("Bye " + body).     exchange.getOut().setHeader(NettyConstants.NETTY_CLOSE_CHANNEL_WHEN_COMPLETE, true). }
false;public;0;9;;public void configure() throws Exception {     from("netty4:tcp://localhost:{{port}}?sync=true").process(new Processor() {          public void process(Exchange exchange) throws Exception {             String body = exchange.getIn().getBody(String.class).             exchange.getOut().setBody("Bye " + body).             exchange.getOut().setHeader(NettyConstants.NETTY_CLOSE_CHANNEL_WHEN_COMPLETE, true).         }     }). }
false;protected;0;14;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          public void configure() throws Exception {             from("netty4:tcp://localhost:{{port}}?sync=true").process(new Processor() {                  public void process(Exchange exchange) throws Exception {                     String body = exchange.getIn().getBody(String.class).                     exchange.getOut().setBody("Bye " + body).                     exchange.getOut().setHeader(NettyConstants.NETTY_CLOSE_CHANNEL_WHEN_COMPLETE, true).                 }             }).         }     }. }
