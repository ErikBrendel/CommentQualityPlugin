commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;8;;@Override protected JndiRegistry createRegistry() throws Exception {     JndiRegistry jndi = super.createRegistry().     jndi.bind("myCustomDecoder", MyCustomCodec.createMyCustomDecoder()).     jndi.bind("myCustomDecoder2", MyCustomCodec.createMyCustomDecoder2()).     jndi.bind("myCustomEncoder", MyCustomCodec.createMyCustomEncoder()).     return jndi. }
false;public;0;11;;@Test public void testCustomCodec() throws Exception {     getMockEndpoint("mock:input").expectedMessageCount(1).     template.sendBody(uri, data).     assertMockEndpointsSatisfied().     byte[] mockData = getMockEndpoint("mock:input").getReceivedExchanges().get(0).getIn().getBody(byte[].class).     ObjectHelper.equalByteArray(data, mockData). }
false;public;0;6;;@Override public void configure() throws Exception {     from(uri).to("log:input").to("mock:input"). }
false;protected;0;11;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from(uri).to("log:input").to("mock:input").         }     }. }
