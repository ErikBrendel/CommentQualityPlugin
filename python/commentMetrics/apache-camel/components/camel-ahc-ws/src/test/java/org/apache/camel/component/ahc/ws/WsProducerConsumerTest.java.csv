commented;modifiers;parameterAmount;loc;comment;code
false;public;0;15;;public void startTestServer() throws Exception {     // start a simple websocket echo service     server = new Server(PORT).     Connector connector = new ServerConnector(server).     server.addConnector(connector).     ServletContextHandler ctx = new ServletContextHandler().     ctx.setContextPath("/").     ctx.addServlet(TestServletFactory.class.getName(), "/*").     server.setHandler(ctx).     server.start().     assertTrue(server.isStarted()). }
false;public;0;4;;public void stopTestServer() throws Exception {     server.stop().     server.destroy(). }
false;public;0;6;;@Override @Before public void setUp() throws Exception {     startTestServer().     super.setUp(). }
false;public;0;6;;@Override @After public void tearDown() throws Exception {     super.tearDown().     stopTestServer(). }
false;public;0;9;;@Test public void testTwoRoutes() throws Exception {     MockEndpoint mock = getMockEndpoint("mock:result").     mock.expectedBodiesReceived(TEST_MESSAGE).     template.sendBody("direct:input", TEST_MESSAGE).     mock.assertIsSatisfied(). }
false;public;0;22;;@Test public void testTwoRoutesRestartConsumer() throws Exception {     MockEndpoint mock = getMockEndpoint("mock:result").     mock.expectedBodiesReceived(TEST_MESSAGE).     template.sendBody("direct:input", TEST_MESSAGE).     mock.assertIsSatisfied().     resetMocks().     log.info("Restarting bar route").     context.getRouteController().stopRoute("bar").     Thread.sleep(500).     context.getRouteController().startRoute("bar").     mock.expectedBodiesReceived(TEST_MESSAGE).     template.sendBody("direct:input", TEST_MESSAGE).     mock.assertIsSatisfied(). }
false;public;0;22;;@Test public void testTwoRoutesRestartProducer() throws Exception {     MockEndpoint mock = getMockEndpoint("mock:result").     mock.expectedBodiesReceived(TEST_MESSAGE).     template.sendBody("direct:input", TEST_MESSAGE).     mock.assertIsSatisfied().     resetMocks().     log.info("Restarting foo route").     context.getRouteController().stopRoute("foo").     Thread.sleep(500).     context.getRouteController().startRoute("foo").     mock.expectedBodiesReceived(TEST_MESSAGE).     template.sendBody("direct:input", TEST_MESSAGE).     mock.assertIsSatisfied(). }
false;public;0;4;;public void configure() {     from("direct:input").routeId("foo").to("ahc-ws://localhost:" + PORT). }
false;public;0;4;;public void configure() {     from("ahc-ws://localhost:" + PORT).routeId("bar").to("mock:result"). }
false;protected;0;17;;@Override protected RouteBuilder[] createRouteBuilders() throws Exception {     RouteBuilder[] rbs = new RouteBuilder[2].     rbs[0] = new RouteBuilder() {          public void configure() {             from("direct:input").routeId("foo").to("ahc-ws://localhost:" + PORT).         }     }.     rbs[1] = new RouteBuilder() {          public void configure() {             from("ahc-ws://localhost:" + PORT).routeId("bar").to("mock:result").         }     }.     return rbs. }
