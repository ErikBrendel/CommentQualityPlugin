commented;modifiers;parameterAmount;loc;comment;code
false;public;0;32;;@Test public void testUnmarshallCsvRecordFieldStartingWithSeparatorChar() throws Exception {     mockEndPoint.expectedMessageCount(4).     template.sendBody("direct:start", "'val1',',val2',1").     template.sendBody("direct:start", "',',',val2',2").     template.sendBody("direct:start", "',','val2,',3").     template.sendBody("direct:start", "'',',val2,',4").     mockEndPoint.assertIsSatisfied().     BindyCsvRowFormat row = mockEndPoint.getExchanges().get(0).getIn().getBody(BindyCsvRowFormat.class).     assertEquals("val1", row.getFirstField()).     assertEquals(",val2", row.getSecondField()).     assertEquals(BigDecimal.valueOf(1), row.getNumber()).     row = mockEndPoint.getExchanges().get(1).getIn().getBody(BindyCsvRowFormat.class).     assertEquals(",", row.getFirstField()).     assertEquals(",val2", row.getSecondField()).     assertEquals(BigDecimal.valueOf(2), row.getNumber()).     row = mockEndPoint.getExchanges().get(2).getIn().getBody(BindyCsvRowFormat.class).     assertEquals(",", row.getFirstField()).     assertEquals("val2,", row.getSecondField()).     assertEquals(BigDecimal.valueOf(3), row.getNumber()).     row = mockEndPoint.getExchanges().get(3).getIn().getBody(BindyCsvRowFormat.class).     assertEquals("", row.getFirstField()).     assertEquals(",val2,", row.getSecondField()).     assertEquals(BigDecimal.valueOf(4), row.getNumber()). }
false;public;0;6;;@Override public void configure() throws Exception {     BindyCsvDataFormat camelDataFormat = new BindyCsvDataFormat(BindyCsvRowFormat.class).     from("direct:start").unmarshal(camelDataFormat).to("mock:result"). }
false;protected;0;11;;@Override protected RoutesBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             BindyCsvDataFormat camelDataFormat = new BindyCsvDataFormat(BindyCsvRowFormat.class).             from("direct:start").unmarshal(camelDataFormat).to("mock:result").         }     }. }
false;public;0;3;;public String getFirstField() {     return firstField. }
false;public;1;3;;public void setFirstField(String firstField) {     this.firstField = firstField. }
false;public;0;3;;public String getSecondField() {     return secondField. }
false;public;1;3;;public void setSecondField(String secondField) {     this.secondField = secondField. }
false;public;0;3;;public BigDecimal getNumber() {     return number. }
false;public;1;3;;public void setNumber(BigDecimal number) {     this.number = number. }
