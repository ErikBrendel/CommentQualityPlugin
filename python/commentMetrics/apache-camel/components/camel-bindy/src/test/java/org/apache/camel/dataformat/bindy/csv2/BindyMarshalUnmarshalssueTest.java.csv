commented;modifiers;parameterAmount;loc;comment;code
false;public;0;19;;@Test public void testMarshalUnmarshal() throws Exception {     MockEndpoint mock = getMockEndpoint("mock:result").     mock.expectedMessageCount(1).     WeatherModel body = new WeatherModel().     body.setId(123).     body.setPlace("Central California").     body.setDate("Wednesday November 9 2011").     template.sendBody("direct:start", body).     assertMockEndpointsSatisfied().     WeatherModel model = mock.getReceivedExchanges().get(0).getIn().getBody(WeatherModel.class).     assertEquals(123, model.getId()).     assertEquals("Wednesday November 9 2011", model.getDate()).     assertEquals("Central California", model.getPlace()). }
false;public;0;10;;@Override public void configure() throws Exception {     from("direct:start").marshal().bindy(BindyType.Csv, org.apache.camel.dataformat.bindy.csv2.WeatherModel.class).to("direct:middle").     from("direct:middle").unmarshal(new BindyCsvDataFormat(org.apache.camel.dataformat.bindy.csv2.WeatherModel.class)).to("mock:result"). }
false;protected;0;15;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").marshal().bindy(BindyType.Csv, org.apache.camel.dataformat.bindy.csv2.WeatherModel.class).to("direct:middle").             from("direct:middle").unmarshal(new BindyCsvDataFormat(org.apache.camel.dataformat.bindy.csv2.WeatherModel.class)).to("mock:result").         }     }. }
