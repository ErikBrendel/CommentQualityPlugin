commented;modifiers;parameterAmount;loc;comment;code
false;public;0;11;;@Test public void testUnmarshal() throws Exception {     MockEndpoint mock = getMockEndpoint("mock:result").     mock.expectedMessageCount(1).     template.sendBody("direct:unmarshal", "header1,header2\n\"value1\",\"value,2\"").     assertMockEndpointsSatisfied().     Example body = mock.getReceivedExchanges().get(0).getIn().getBody(Example.class).     assertEquals("value,2", body.field2). }
false;public;0;4;;@Override public void configure() throws Exception {     from("direct:unmarshal").unmarshal().bindy(BindyType.Csv, Example.class).to("mock:result"). }
false;protected;0;9;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:unmarshal").unmarshal().bindy(BindyType.Csv, Example.class).to("mock:result").         }     }. }
