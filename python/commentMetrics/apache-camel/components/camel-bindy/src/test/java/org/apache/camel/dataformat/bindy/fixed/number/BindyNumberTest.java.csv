commented;modifiers;parameterAmount;loc;comment;code
false;public;0;15;;// ************************************************************************* // TEST // ************************************************************************* @Test @DirtiesContext public void testMarshall() throws Exception {     DataModel rec = new DataModel().     rec.field1 = new BigDecimal(123.45).     rec.field2 = new BigDecimal(10.00).     rec.field3 = new BigDecimal(10.00).     rec.field4 = new Double(10.00).     rec.field5 = new Double(10.00).     mresult.expectedBodiesReceived("1234510.00   1010.00   10\r\n").     mtemplate.sendBody(rec).     mresult.assertIsSatisfied(). }
false;public;0;19;;@Test @DirtiesContext public void testUnMarshall() throws Exception {     utemplate.sendBody("1234510.00   1010.00   10").     uresult.expectedMessageCount(1).     uresult.assertIsSatisfied().     // check the model     Exchange exc = uresult.getReceivedExchanges().get(0).     DataModel data = exc.getIn().getBody(DataModel.class).     Assert.assertEquals(123.45D, data.field1.doubleValue(), 0D).     Assert.assertEquals(10.00D, data.field2.doubleValue(), 0D).     Assert.assertEquals(10.00D, data.field3.doubleValue(), 0D).     Assert.assertEquals(10.00D, data.field4.doubleValue(), 0D).     Assert.assertEquals(10.00D, data.field5.doubleValue(), 0D). }
false;public;0;13;;public void configure() {     BindyDataFormat bindy = new BindyDataFormat().     bindy.setClassType(DataModel.class).     bindy.setLocale("en").     bindy.setType(BindyType.Fixed).     from(URI_DIRECT_MARSHALL).marshal(bindy).to(URI_MOCK_MARSHALL_RESULT).     from(URI_DIRECT_UNMARSHALL).unmarshal().bindy(BindyType.Fixed, DataModel.class).to(URI_MOCK_UNMARSHALL_RESULT). }
