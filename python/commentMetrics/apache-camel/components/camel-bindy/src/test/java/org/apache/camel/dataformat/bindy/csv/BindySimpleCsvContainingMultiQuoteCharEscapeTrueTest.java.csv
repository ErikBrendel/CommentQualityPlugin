commented;modifiers;parameterAmount;loc;comment;code
false;public;0;20;;@Test public void testMarshallCsvRecordFieldContainingMultiEscapedQuoteChar() throws Exception {     mockEndPointMarshal1.expectedMessageCount(1).     mockEndPointMarshal1.expectedBodiesReceived("\"123\",\"\\\"\\\"foo\\\"\\\"\",\"10\"" + ConverterUtils.getStringCarriageReturn("WINDOWS")).     BindyCsvRowFormat75191 body = new BindyCsvRowFormat75191().     body.setFirstField("123").     body.setSecondField("\"\"foo\"\"").     body.setNumber(new BigDecimal(10)).     template.sendBody("direct:startMarshal1", body).     assertMockEndpointsSatisfied().     BindyCsvRowFormat75191 model = mockEndPointUnMarshal1.getReceivedExchanges().get(0).getIn().getBody(BindyCsvRowFormat75191.class).     assertEquals("123", model.getFirstField()).     assertEquals("\"\"foo\"\"", model.getSecondField()).     assertEquals(new BigDecimal(10), model.getNumber()). }
false;public;0;20;;@Test public void testMarshallCsvRecordFieldContainingMultiNonEscapedQuoteChar() throws Exception {     mockEndPointMarshal2.expectedMessageCount(1).     mockEndPointMarshal2.expectedBodiesReceived("'123','\\'\\'foo\\'\\'','10'" + ConverterUtils.getStringCarriageReturn("WINDOWS")).     BindyCsvRowFormat75192 body = new BindyCsvRowFormat75192().     body.setFirstField("123").     body.setSecondField("''foo''").     body.setNumber(new BigDecimal(10)).     template.sendBody("direct:startMarshal2", body).     assertMockEndpointsSatisfied().     BindyCsvRowFormat75192 model = mockEndPointUnMarshal2.getReceivedExchanges().get(0).getIn().getBody(BindyCsvRowFormat75192.class).     assertEquals("123", model.getFirstField()).     assertEquals("''foo''", model.getSecondField()).     assertEquals(new BigDecimal(10), model.getNumber()). }
false;public;0;26;;@Override public void configure() throws Exception {     BindyCsvDataFormat camelDataFormat1 = new BindyCsvDataFormat(BindyCsvRowFormat75191.class).     from("direct:startMarshal1").marshal(camelDataFormat1).to("mock:resultMarshal1").to("direct:middle1").     from("direct:middle1").unmarshal(camelDataFormat1).to("mock:resultUnMarshal1").     BindyCsvDataFormat camelDataFormat2 = new BindyCsvDataFormat(BindyCsvRowFormat75192.class).     from("direct:startMarshal2").marshal(camelDataFormat2).to("mock:resultMarshal2").to("direct:middle2").     from("direct:middle2").unmarshal(camelDataFormat2).to("mock:resultUnMarshal2"). }
false;protected;0;31;;@Override protected RoutesBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             BindyCsvDataFormat camelDataFormat1 = new BindyCsvDataFormat(BindyCsvRowFormat75191.class).             from("direct:startMarshal1").marshal(camelDataFormat1).to("mock:resultMarshal1").to("direct:middle1").             from("direct:middle1").unmarshal(camelDataFormat1).to("mock:resultUnMarshal1").             BindyCsvDataFormat camelDataFormat2 = new BindyCsvDataFormat(BindyCsvRowFormat75192.class).             from("direct:startMarshal2").marshal(camelDataFormat2).to("mock:resultMarshal2").to("direct:middle2").             from("direct:middle2").unmarshal(camelDataFormat2).to("mock:resultUnMarshal2").         }     }. }
false;public;0;3;;public String getFirstField() {     return firstField. }
false;public;1;3;;public void setFirstField(String firstField) {     this.firstField = firstField. }
false;public;0;3;;public String getSecondField() {     return secondField. }
false;public;1;3;;public void setSecondField(String secondField) {     this.secondField = secondField. }
false;public;0;3;;public BigDecimal getNumber() {     return number. }
false;public;1;3;;public void setNumber(BigDecimal number) {     this.number = number. }
false;public;0;3;;public String getFirstField() {     return firstField. }
false;public;1;3;;public void setFirstField(String firstField) {     this.firstField = firstField. }
false;public;0;3;;public String getSecondField() {     return secondField. }
false;public;1;3;;public void setSecondField(String secondField) {     this.secondField = secondField. }
false;public;0;3;;public BigDecimal getNumber() {     return number. }
false;public;1;3;;public void setNumber(BigDecimal number) {     this.number = number. }
