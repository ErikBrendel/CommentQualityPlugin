commented;modifiers;parameterAmount;loc;comment;code
false;public;0;23;;@SuppressWarnings("unchecked") @Test @DirtiesContext public void testUnMarshallMessageWithBoolean() throws Exception {     // We suppress the firstName field of the first record     expected = "andrew,true\r\n" + "andrew,false\r\n".     template.sendBody(expected).     List<BooleanExample> examples = (List<BooleanExample>) result.getExchanges().get(0).getIn().getBody().     result.expectedMessageCount(1).     result.assertIsSatisfied().     assertFalse(examples.get(0).getName().isEmpty()).     assertEquals(examples.get(0).getName(), "andrew").     assertTrue(examples.get(0).getExist()).     assertFalse(examples.get(1).getName().isEmpty()).     assertEquals(examples.get(1).getName(), "andrew").     assertFalse(examples.get(1).getExist()).     assertNotNull(examples). }
false;public;0;26;;@SuppressWarnings("unchecked") @Test @DirtiesContext public void testUnMarshallMessageWithBooleanMissingFields() throws Exception {     // We suppress the firstName field of the first record     expected = "andrew,true\r\n" + "joseph,false\r\n" + "nicholas,\r\n".     template.sendBody(expected).     List<BooleanExample> examples = (List<BooleanExample>) result.getExchanges().get(0).getIn().getBody().     result.expectedMessageCount(1).     result.assertIsSatisfied().     assertFalse(examples.get(0).getName().isEmpty()).     assertEquals(examples.get(0).getName(), "andrew").     assertTrue(examples.get(0).getExist()).     assertFalse(examples.get(1).getName().isEmpty()).     assertEquals(examples.get(1).getName(), "joseph").     assertFalse(examples.get(1).getExist()).     assertFalse(examples.get(2).getName().isEmpty()).     assertEquals(examples.get(2).getName(), "nicholas").     assertTrue(examples.get(2).getExist()).     assertNotNull(examples). }
false;public;0;10;;public void configure() {     // from("file://src/test/data?move=./target/done").unmarshal(camelDataFormat).to("mock:result").     // default should errors go to mock:error     errorHandler(deadLetterChannel(URI_MOCK_ERROR).redeliveryDelay(0)).     onException(Exception.class).maximumRedeliveries(0).handled(true).     from(URI_DIRECT_START).unmarshal(camelDataFormat).to(URI_MOCK_RESULT). }
