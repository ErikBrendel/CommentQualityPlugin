commented;modifiers;parameterAmount;loc;comment;code
false;public;0;20;;@Test public void testMarshallWithoutSection() throws Exception {     template.sendBody(generateModel()).     // We don't expect to have a message as an error will be raised     result.expectedMessageCount(0).     // Message has been delivered to the mock error     error.expectedMessageCount(1).     result.assertIsSatisfied().     error.assertIsSatisfied().     // and check that we have the caused exception stored     Exchange exch = error.getReceivedExchanges().get(0).     Exception cause = exch.getProperty(Exchange.EXCEPTION_CAUGHT, IllegalArgumentException.class).     assertNotNull(cause).     assertEquals("@Section and/or @KeyValuePairDataField have not been defined", cause.getMessage()). }
false;public;0;16;;public List<Map<String, Object>> generateModel() {     Map<String, Object> modelObjects = new HashMap<>().     Order order = new Order().     order.setAccount("BE.CHM.001").     order.setClOrdId("CHM0001-01").     order.setIDSource("4").     order.setSecurityId("BE0001245678").     order.setSide("1").     order.setText("this is a camel - bindy test").     modelObjects.put(order.getClass().getName(), order).     models.add(modelObjects).     return models. }
false;public;0;9;;public void configure() {     // default should errors go to mock:error     errorHandler(deadLetterChannel(URI_MOCK_ERROR)).     onException(IllegalArgumentException.class).maximumRedeliveries(0).handled(true).     from(URI_DIRECT_START).marshal(orderBindyDataFormat).to(URI_MOCK_RESULT). }
