commented;modifiers;parameterAmount;loc;comment;code
false;public;0;8;;@Test @DirtiesContext public void testUnMarshalAndMarshal() throws Exception {     template.sendBody(input).     result.expectedMessageCount(1).     result.assertIsSatisfied(). }
false;public;1;11;;@Override public void process(Exchange exchange) throws Exception {     CsvSkipField csvSkipField = (CsvSkipField) exchange.getIn().getBody().     assert csvSkipField.getAttention().equals("VOA").     assert csvSkipField.getAddressLine1().equals("12 abc street").     assert csvSkipField.getCity().equals("Melbourne").     assert csvSkipField.getState().equals("VIC").     assert csvSkipField.getZip().equals("3000").     assert csvSkipField.getCountry().equals("Australia").     assert csvSkipField.getDummy2().equals("end of record"). }
false;public;0;20;;public void configure() {     from(URI_DIRECT_START).unmarshal(camelDataFormat).process(new Processor() {          @Override         public void process(Exchange exchange) throws Exception {             CsvSkipField csvSkipField = (CsvSkipField) exchange.getIn().getBody().             assert csvSkipField.getAttention().equals("VOA").             assert csvSkipField.getAddressLine1().equals("12 abc street").             assert csvSkipField.getCity().equals("Melbourne").             assert csvSkipField.getState().equals("VIC").             assert csvSkipField.getZip().equals("3000").             assert csvSkipField.getCountry().equals("Australia").             assert csvSkipField.getDummy2().equals("end of record").         }     }).marshal(camelDataFormat).convertBodyTo(String.class).to(URI_MOCK_RESULT). }
false;public;0;3;;public String getAttention() {     return attention. }
false;public;1;3;;public void setAttention(String attention) {     this.attention = attention. }
false;public;0;3;;public String getAddressLine1() {     return addressLine1. }
false;public;1;3;;public void setAddressLine1(String addressLine1) {     this.addressLine1 = addressLine1. }
false;public;0;3;;public String getCity() {     return city. }
false;public;1;3;;public void setCity(String city) {     this.city = city. }
false;public;0;3;;public String getState() {     return state. }
false;public;1;3;;public void setState(String state) {     this.state = state. }
false;public;0;3;;public String getZip() {     return zip. }
false;public;1;3;;public void setZip(String zip) {     this.zip = zip. }
false;public;0;3;;public String getCountry() {     return country. }
false;public;1;3;;public void setCountry(String country) {     this.country = country. }
false;public;0;3;;public String getDummy2() {     return dummy2. }
false;public;1;3;;public void setDummy2(String dummy2) {     this.dummy2 = dummy2. }
false;public;0;5;;@Override public String toString() {     return "Record [attention=" + getAttention() + ", addressLine1=" + getAddressLine1() + ", " + "city=" + getCity() + ", state=" + getState() + ", zip=" + getZip() + ", country=" + getCountry() + ", dummy2=" + getDummy2() + "]". }
