commented;modifiers;parameterAmount;loc;comment;code
false;public;0;17;;// ************************************************************************* // TESTS // ************************************************************************* @Test public void testUnmarshallMessage() throws Exception {     unmarshallResult.expectedMessageCount(1).     template.sendBody(URI_DIRECT_UNMARSHALL, TEST_RECORD).     unmarshallResult.assertIsSatisfied().     // check the model     Exchange exchange = unmarshallResult.getReceivedExchanges().get(0).     Order order = exchange.getIn().getBody(Order.class).     assertEquals("AAA", order.fieldA).     assertEquals("CCC", order.fieldC).     assertEquals("BBB", order.subRec.fieldB). }
false;public;0;21;;@Test public void testMarshallMessage() throws Exception {     marshallResult.expectedMessageCount(1).     Order order = new Order().     order.setFieldA("AAA").     order.setFieldC("CCC").     SubRec subRec = new SubRec().     subRec.setFieldB("BBB").     order.setSubRec(subRec).     template.sendBody(URI_DIRECT_MARSHALL, order).     marshallResult.assertIsSatisfied().     // check the model     Exchange exchange = marshallResult.getReceivedExchanges().get(0).     String asString = exchange.getIn().getBody(String.class).     assertThat(asString, is("AAABBBCCC\r\n")). }
false;public;0;15;;@Override public void configure() throws Exception {     BindyDataFormat bindy = new BindyDataFormat().     bindy.setClassType(Order.class).     bindy.setLocale("en").     bindy.setType(BindyType.Fixed).     from(URI_DIRECT_UNMARSHALL).unmarshal(bindy).to(URI_MOCK_UNMARSHALL_RESULT).     from(URI_DIRECT_MARSHALL).marshal(bindy).to(URI_MOCK_MARSHALL_RESULT). }
false;protected;0;23;;// ************************************************************************* // ROUTES // ************************************************************************* @Override protected RouteBuilder createRouteBuilder() throws Exception {     RouteBuilder routeBuilder = new RouteBuilder() {          @Override         public void configure() throws Exception {             BindyDataFormat bindy = new BindyDataFormat().             bindy.setClassType(Order.class).             bindy.setLocale("en").             bindy.setType(BindyType.Fixed).             from(URI_DIRECT_UNMARSHALL).unmarshal(bindy).to(URI_MOCK_UNMARSHALL_RESULT).             from(URI_DIRECT_MARSHALL).marshal(bindy).to(URI_MOCK_MARSHALL_RESULT).         }     }.     return routeBuilder. }
false;public;0;3;;public String getFieldA() {     return fieldA. }
false;public;1;3;;public void setFieldA(String fieldA) {     this.fieldA = fieldA. }
false;public;0;3;;public String getFieldC() {     return fieldC. }
false;public;1;3;;public void setFieldC(String fieldC) {     this.fieldC = fieldC. }
false;public;0;3;;public SubRec getSubRec() {     return subRec. }
false;public;1;3;;public void setSubRec(SubRec subRec) {     this.subRec = subRec. }
false;public;0;3;;public String getFieldB() {     return fieldB. }
false;public;1;3;;public void setFieldB(String fieldB) {     this.fieldB = fieldB. }
