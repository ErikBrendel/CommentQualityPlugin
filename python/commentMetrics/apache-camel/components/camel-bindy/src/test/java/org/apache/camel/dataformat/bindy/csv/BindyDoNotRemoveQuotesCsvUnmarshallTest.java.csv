commented;modifiers;parameterAmount;loc;comment;code
true;public;0;15;// unmarshall properly ;// Without removesQuotes=false annotation on product this will fail to // unmarshall properly @Test @DirtiesContext public void testUnMarshallMessage() throws Exception {     expected = "apple,\"bright red\" apple,a fruit".     template.sendBody(expected).     result.expectedMessageCount(1).     result.assertIsSatisfied().     BindyDoNotRemoveQuotesCsvUnmarshallTest.Product product = result.getReceivedExchanges().get(0).getIn().getBody(BindyDoNotRemoveQuotesCsvUnmarshallTest.Product.class).     Assert.assertEquals("apple", product.getName()).     Assert.assertEquals("\"bright red\" apple", product.getDescription1()).     Assert.assertEquals("a fruit", product.getDescription2()). }
false;public;0;3;;public void configure() {     from(URI_DIRECT_START).unmarshal(camelDataFormat).to(URI_MOCK_RESULT). }
false;public;0;3;;public String getName() {     return name. }
false;public;1;3;;public void setName(String name) {     this.name = name. }
false;public;0;3;;public String getDescription1() {     return description1. }
false;public;1;3;;public void setDescription1(String description1) {     this.description1 = description1. }
false;public;0;3;;public String getDescription2() {     return description2. }
false;public;1;3;;public void setDescription2(String description2) {     this.description2 = description2. }
false;public;0;4;;@Override public String toString() {     return "Product{" + "name='" + name + '\'' + ", description1='" + description1 + '\'' + ", description2='" + description2 + '\'' + '}'. }
