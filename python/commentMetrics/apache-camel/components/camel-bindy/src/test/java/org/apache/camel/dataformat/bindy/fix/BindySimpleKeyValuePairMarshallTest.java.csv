commented;modifiers;parameterAmount;loc;comment;code
false;public;0;7;;@Test public void testMarshallMessage() throws Exception {     resultEndpoint.expectedBodiesReceived(result).     template.sendBody(generateModel()).     resultEndpoint.assertIsSatisfied(). }
false;public;0;32;;public List<Map<String, Object>> generateModel() {     Map<String, Object> modelObjects = new HashMap<>().     Header header = new Header().     header.setBeginString("FIX 4.1").     header.setBodyLength(20).     header.setMsgSeqNum(1).     header.setMsgType("0").     header.setSendCompId("INVMGR").     header.setTargetCompId("BRKR").     Trailer trailer = new Trailer().     trailer.setCheckSum(220).     Order order = new Order().     order.setAccount("BE.CHM.001").     order.setClOrdId("CHM0001-01").     order.setIDSource("4").     order.setSecurityId("BE0001245678").     order.setSide("1").     order.setText("this is a camel - bindy test").     order.setHeader(header).     order.setTrailer(trailer).     modelObjects.put(order.getClass().getName(), order).     modelObjects.put(header.getClass().getName(), header).     modelObjects.put(trailer.getClass().getName(), trailer).     models.add(modelObjects).     return models. }
false;public;0;3;;public void configure() {     from("direct:start").marshal(camelDataFormat).to("mock:result"). }
