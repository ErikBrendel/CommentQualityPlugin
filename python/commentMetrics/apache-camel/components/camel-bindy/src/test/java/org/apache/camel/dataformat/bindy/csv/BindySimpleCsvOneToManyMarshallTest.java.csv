commented;modifiers;parameterAmount;loc;comment;code
false;public;0;8;;@Test public void testMarshallMessage() throws Exception {     resultEndpoint.expectedBodiesReceived(result).     template.sendBody(generateModel()).     resultEndpoint.assertIsSatisfied(). }
false;public;0;49;;public List<Map<String, Object>> generateModel() {     Author author.     Book book.     Map<String, Object> model = new HashMap<>().     List<Book> books = new ArrayList<>().     // List<Reference> references = new ArrayList<Reference>().     // List<Editor> editors = new ArrayList<Editor>().     author = new Author().     author.setFirstName("Charles").     author.setLastName("Moulliard").     author.setAge("43").     // 1st Book     book = new Book().     book.setTitle("Camel in Action 1").     book.setYear("2010").     books.add(book).     // 2nd book     book = new Book().     book.setTitle("Camel in Action 2").     book.setYear("2012").     books.add(book).     // 3rd book     book = new Book().     book.setTitle("Camel in Action 3").     book.setYear("2013").     books.add(book).     // 4th book     book = new Book().     book.setTitle("Camel in Action 4").     book.setYear(null).     books.add(book).     // Add books to author     author.setBooks(books).     model.put(author.getClass().getName(), author).     models.add(model).     return models. }
false;public;0;3;;public void configure() {     from("direct:start").marshal(camelDataFormat).to("mock:result"). }
