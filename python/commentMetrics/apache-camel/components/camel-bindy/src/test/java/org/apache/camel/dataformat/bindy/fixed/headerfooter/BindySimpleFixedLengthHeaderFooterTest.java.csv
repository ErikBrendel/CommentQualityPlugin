# id;timestamp;commentText;codeText;commentWords;codeWords
BindySimpleFixedLengthHeaderFooterTest -> @Test     public void testMarshallMessageWithIndirectHeaderAndFooterInput() throws Exception;1360259982;Verifies that header & footer provided via message headers are marshalled successfully;@Test_    public void testMarshallMessageWithIndirectHeaderAndFooterInput() throws Exception {_        Order order = new Order()__        order.setOrderNr(10)__        order.setOrderType("BUY")__        order.setClientNr("A9")__        order.setFirstName("Pauline")__        order.setLastName("M")__        order.setAmount(new BigDecimal("2500.45"))__        order.setInstrumentCode("ISIN")__        order.setInstrumentNumber("XD12345678")__        order.setInstrumentType("Share")__        order.setCurrency("USD")__        Calendar calendar = new GregorianCalendar()__        calendar.set(2009, 7, 1, 0, 0, 0)__        order.setOrderDate(calendar.getTime())__        _        ArrayList<Map<String, Object>> input = new ArrayList<Map<String, Object>>()__        Map<String, Object> bodyRow = new HashMap<String, Object>()__        bodyRow.put(Order.class.getName(), order)___        input.add(bodyRow)__        _        Map<String, Object> headers = new HashMap<String, Object>()__        headers.put(BindyFixedLengthDataFormat.CAMEL_BINDY_FIXED_LENGTH_HEADER, createHeaderRow())__        headers.put(BindyFixedLengthDataFormat.CAMEL_BINDY_FIXED_LENGTH_FOOTER, createFooterRow())__        _        marshallResult.reset()__        marshallResult.expectedMessageCount(1)__        StringBuffer buff = new StringBuffer()__        buff.append(TEST_HEADER).append(TEST_RECORD).append(TEST_FOOTER)__        marshallResult.expectedBodiesReceived(Arrays.asList(new String[] {buff.toString()}))__        template.sendBodyAndHeaders(URI_DIRECT_MARSHALL, input, headers)__        marshallResult.assertIsSatisfied()__    };verifies,that,header,footer,provided,via,message,headers,are,marshalled,successfully;test,public,void,test,marshall,message,with,indirect,header,and,footer,input,throws,exception,order,order,new,order,order,set,order,nr,10,order,set,order,type,buy,order,set,client,nr,a9,order,set,first,name,pauline,order,set,last,name,m,order,set,amount,new,big,decimal,2500,45,order,set,instrument,code,isin,order,set,instrument,number,xd12345678,order,set,instrument,type,share,order,set,currency,usd,calendar,calendar,new,gregorian,calendar,calendar,set,2009,7,1,0,0,0,order,set,order,date,calendar,get,time,array,list,map,string,object,input,new,array,list,map,string,object,map,string,object,body,row,new,hash,map,string,object,body,row,put,order,class,get,name,order,input,add,body,row,map,string,object,headers,new,hash,map,string,object,headers,put,bindy,fixed,length,data,format,create,header,row,headers,put,bindy,fixed,length,data,format,create,footer,row,marshall,result,reset,marshall,result,expected,message,count,1,string,buffer,buff,new,string,buffer,buff,append,append,append,marshall,result,expected,bodies,received,arrays,as,list,new,string,buff,to,string,template,send,body,and,headers,input,headers,marshall,result,assert,is,satisfied
BindySimpleFixedLengthHeaderFooterTest -> @Test     public void testMarshallMessageWithIndirectHeaderAndFooterInput() throws Exception;1365151062;Verifies that header & footer provided via message headers are marshalled successfully;@Test_    public void testMarshallMessageWithIndirectHeaderAndFooterInput() throws Exception {_        Order order = new Order()__        order.setOrderNr(10)__        order.setOrderType("BUY")__        order.setClientNr("A9")__        order.setFirstName("Pauline")__        order.setLastName("M")__        order.setAmount(new BigDecimal("2500.45"))__        order.setInstrumentCode("ISIN")__        order.setInstrumentNumber("XD12345678")__        order.setInstrumentType("Share")__        order.setCurrency("USD")__        Calendar calendar = new GregorianCalendar()__        calendar.set(2009, 7, 1, 0, 0, 0)__        order.setOrderDate(calendar.getTime())__        _        ArrayList<Map<String, Object>> input = new ArrayList<Map<String, Object>>()__        Map<String, Object> bodyRow = new HashMap<String, Object>()__        bodyRow.put(Order.class.getName(), order)___        input.add(bodyRow)__        _        Map<String, Object> headers = new HashMap<String, Object>()__        headers.put(BindyFixedLengthDataFormat.CAMEL_BINDY_FIXED_LENGTH_HEADER, createHeaderRow())__        headers.put(BindyFixedLengthDataFormat.CAMEL_BINDY_FIXED_LENGTH_FOOTER, createFooterRow())__        _        marshallResult.reset()__        marshallResult.expectedMessageCount(1)__        StringBuffer buff = new StringBuffer()__        buff.append(TEST_HEADER).append(TEST_RECORD).append(TEST_FOOTER)__        marshallResult.expectedBodiesReceived(Arrays.asList(new String[] {buff.toString()}))__        template.sendBodyAndHeaders(URI_DIRECT_MARSHALL, input, headers)__        marshallResult.assertIsSatisfied()__    };verifies,that,header,footer,provided,via,message,headers,are,marshalled,successfully;test,public,void,test,marshall,message,with,indirect,header,and,footer,input,throws,exception,order,order,new,order,order,set,order,nr,10,order,set,order,type,buy,order,set,client,nr,a9,order,set,first,name,pauline,order,set,last,name,m,order,set,amount,new,big,decimal,2500,45,order,set,instrument,code,isin,order,set,instrument,number,xd12345678,order,set,instrument,type,share,order,set,currency,usd,calendar,calendar,new,gregorian,calendar,calendar,set,2009,7,1,0,0,0,order,set,order,date,calendar,get,time,array,list,map,string,object,input,new,array,list,map,string,object,map,string,object,body,row,new,hash,map,string,object,body,row,put,order,class,get,name,order,input,add,body,row,map,string,object,headers,new,hash,map,string,object,headers,put,bindy,fixed,length,data,format,create,header,row,headers,put,bindy,fixed,length,data,format,create,footer,row,marshall,result,reset,marshall,result,expected,message,count,1,string,buffer,buff,new,string,buffer,buff,append,append,append,marshall,result,expected,bodies,received,arrays,as,list,new,string,buff,to,string,template,send,body,and,headers,input,headers,marshall,result,assert,is,satisfied
BindySimpleFixedLengthHeaderFooterTest -> @Test     public void testMarshallMessageWithIndirectHeaderAndFooterInput() throws Exception;1373486788;Verifies that header & footer provided via message headers are marshalled successfully;@Test_    public void testMarshallMessageWithIndirectHeaderAndFooterInput() throws Exception {_        Order order = new Order()__        order.setOrderNr(10)__        order.setOrderType("BUY")__        order.setClientNr("A9")__        order.setFirstName("Pauline")__        order.setLastName("M")__        order.setAmount(new BigDecimal("2500.45"))__        order.setInstrumentCode("ISIN")__        order.setInstrumentNumber("XD12345678")__        order.setInstrumentType("Share")__        order.setCurrency("USD")__        Calendar calendar = new GregorianCalendar()__        calendar.set(2009, 7, 1, 0, 0, 0)__        order.setOrderDate(calendar.getTime())__        _        List<Map<String, Object>> input = new ArrayList<Map<String, Object>>()__        Map<String, Object> bodyRow = new HashMap<String, Object>()__        bodyRow.put(Order.class.getName(), order)___        input.add(bodyRow)__        _        Map<String, Object> headers = new HashMap<String, Object>()__        headers.put(BindyFixedLengthDataFormat.CAMEL_BINDY_FIXED_LENGTH_HEADER, createHeaderRow())__        headers.put(BindyFixedLengthDataFormat.CAMEL_BINDY_FIXED_LENGTH_FOOTER, createFooterRow())__        _        marshallResult.reset()__        marshallResult.expectedMessageCount(1)__        StringBuffer buff = new StringBuffer()__        buff.append(TEST_HEADER).append(TEST_RECORD).append(TEST_FOOTER)__        marshallResult.expectedBodiesReceived(Arrays.asList(new String[] {buff.toString()}))__        template.sendBodyAndHeaders(URI_DIRECT_MARSHALL, input, headers)__        marshallResult.assertIsSatisfied()__    };verifies,that,header,footer,provided,via,message,headers,are,marshalled,successfully;test,public,void,test,marshall,message,with,indirect,header,and,footer,input,throws,exception,order,order,new,order,order,set,order,nr,10,order,set,order,type,buy,order,set,client,nr,a9,order,set,first,name,pauline,order,set,last,name,m,order,set,amount,new,big,decimal,2500,45,order,set,instrument,code,isin,order,set,instrument,number,xd12345678,order,set,instrument,type,share,order,set,currency,usd,calendar,calendar,new,gregorian,calendar,calendar,set,2009,7,1,0,0,0,order,set,order,date,calendar,get,time,list,map,string,object,input,new,array,list,map,string,object,map,string,object,body,row,new,hash,map,string,object,body,row,put,order,class,get,name,order,input,add,body,row,map,string,object,headers,new,hash,map,string,object,headers,put,bindy,fixed,length,data,format,create,header,row,headers,put,bindy,fixed,length,data,format,create,footer,row,marshall,result,reset,marshall,result,expected,message,count,1,string,buffer,buff,new,string,buffer,buff,append,append,append,marshall,result,expected,bodies,received,arrays,as,list,new,string,buff,to,string,template,send,body,and,headers,input,headers,marshall,result,assert,is,satisfied
BindySimpleFixedLengthHeaderFooterTest -> @Test     public void testMarshallMessageWithIndirectHeaderAndFooterInput() throws Exception;1438938832;Verifies that header & footer provided via message headers are marshalled successfully;@Test_    public void testMarshallMessageWithIndirectHeaderAndFooterInput() throws Exception {_        Order order = new Order()__        order.setOrderNr(10)__        order.setOrderType("BUY")__        order.setClientNr("A9")__        order.setFirstName("Pauline")__        order.setLastName("M")__        order.setAmount(new BigDecimal("2500.45"))__        order.setInstrumentCode("ISIN")__        order.setInstrumentNumber("XD12345678")__        order.setInstrumentType("Share")__        order.setCurrency("USD")__        Calendar calendar = new GregorianCalendar()__        calendar.set(2009, 7, 1, 0, 0, 0)__        order.setOrderDate(calendar.getTime())__        _        List<Map<String, Object>> input = new ArrayList<Map<String, Object>>()__        Map<String, Object> bodyRow = new HashMap<String, Object>()__        bodyRow.put(Order.class.getName(), order)___        input.add(bodyRow)__        _        Map<String, Object> headers = new HashMap<String, Object>()__        headers.put(BindyFixedLengthDataFormat.CAMEL_BINDY_FIXED_LENGTH_HEADER, createHeaderRow())__        headers.put(BindyFixedLengthDataFormat.CAMEL_BINDY_FIXED_LENGTH_FOOTER, createFooterRow())__        _        marshallResult.reset()__        marshallResult.expectedMessageCount(1)__        StringBuffer buff = new StringBuffer()__        buff.append(TEST_HEADER).append(TEST_RECORD).append(TEST_FOOTER)__        marshallResult.expectedBodiesReceived(Arrays.asList(new String[] {buff.toString()}))__        template.sendBodyAndHeaders(URI_DIRECT_MARSHALL, input, headers)__        marshallResult.assertIsSatisfied()__    };verifies,that,header,footer,provided,via,message,headers,are,marshalled,successfully;test,public,void,test,marshall,message,with,indirect,header,and,footer,input,throws,exception,order,order,new,order,order,set,order,nr,10,order,set,order,type,buy,order,set,client,nr,a9,order,set,first,name,pauline,order,set,last,name,m,order,set,amount,new,big,decimal,2500,45,order,set,instrument,code,isin,order,set,instrument,number,xd12345678,order,set,instrument,type,share,order,set,currency,usd,calendar,calendar,new,gregorian,calendar,calendar,set,2009,7,1,0,0,0,order,set,order,date,calendar,get,time,list,map,string,object,input,new,array,list,map,string,object,map,string,object,body,row,new,hash,map,string,object,body,row,put,order,class,get,name,order,input,add,body,row,map,string,object,headers,new,hash,map,string,object,headers,put,bindy,fixed,length,data,format,create,header,row,headers,put,bindy,fixed,length,data,format,create,footer,row,marshall,result,reset,marshall,result,expected,message,count,1,string,buffer,buff,new,string,buffer,buff,append,append,append,marshall,result,expected,bodies,received,arrays,as,list,new,string,buff,to,string,template,send,body,and,headers,input,headers,marshall,result,assert,is,satisfied
BindySimpleFixedLengthHeaderFooterTest -> @Test     public void testMarshallMessageWithIndirectHeaderAndFooterInput() throws Exception;1523968787;Verifies that header & footer provided via message headers are marshalled successfully;@Test_    public void testMarshallMessageWithIndirectHeaderAndFooterInput() throws Exception {_        Order order = new Order()__        order.setOrderNr(10)__        order.setOrderType("BUY")__        order.setClientNr("A9")__        order.setFirstName("Pauline")__        order.setLastName("M")__        order.setAmount(new BigDecimal("2500.45"))__        order.setInstrumentCode("ISIN")__        order.setInstrumentNumber("XD12345678")__        order.setInstrumentType("Share")__        order.setCurrency("USD")__        Calendar calendar = new GregorianCalendar()__        calendar.set(2009, 7, 1, 0, 0, 0)__        order.setOrderDate(calendar.getTime())__        _        List<Map<String, Object>> input = new ArrayList<>()__        Map<String, Object> bodyRow = new HashMap<>()__        bodyRow.put(Order.class.getName(), order)___        input.add(bodyRow)__        _        Map<String, Object> headers = new HashMap<>()__        headers.put(BindyFixedLengthDataFormat.CAMEL_BINDY_FIXED_LENGTH_HEADER, createHeaderRow())__        headers.put(BindyFixedLengthDataFormat.CAMEL_BINDY_FIXED_LENGTH_FOOTER, createFooterRow())__        _        marshallResult.reset()__        marshallResult.expectedMessageCount(1)__        StringBuffer buff = new StringBuffer()__        buff.append(TEST_HEADER).append(TEST_RECORD).append(TEST_FOOTER)__        marshallResult.expectedBodiesReceived(Arrays.asList(new String[] {buff.toString()}))__        template.sendBodyAndHeaders(URI_DIRECT_MARSHALL, input, headers)__        marshallResult.assertIsSatisfied()__    };verifies,that,header,footer,provided,via,message,headers,are,marshalled,successfully;test,public,void,test,marshall,message,with,indirect,header,and,footer,input,throws,exception,order,order,new,order,order,set,order,nr,10,order,set,order,type,buy,order,set,client,nr,a9,order,set,first,name,pauline,order,set,last,name,m,order,set,amount,new,big,decimal,2500,45,order,set,instrument,code,isin,order,set,instrument,number,xd12345678,order,set,instrument,type,share,order,set,currency,usd,calendar,calendar,new,gregorian,calendar,calendar,set,2009,7,1,0,0,0,order,set,order,date,calendar,get,time,list,map,string,object,input,new,array,list,map,string,object,body,row,new,hash,map,body,row,put,order,class,get,name,order,input,add,body,row,map,string,object,headers,new,hash,map,headers,put,bindy,fixed,length,data,format,create,header,row,headers,put,bindy,fixed,length,data,format,create,footer,row,marshall,result,reset,marshall,result,expected,message,count,1,string,buffer,buff,new,string,buffer,buff,append,append,append,marshall,result,expected,bodies,received,arrays,as,list,new,string,buff,to,string,template,send,body,and,headers,input,headers,marshall,result,assert,is,satisfied
BindySimpleFixedLengthHeaderFooterTest -> @Test     public void testMarshallMessageWithDirectHeaderAndFooterInput() throws Exception;1360259982;Verifies that header & footer provided as part of message body are marshalled successfully;@Test_    public void testMarshallMessageWithDirectHeaderAndFooterInput() throws Exception {_        Order order = new Order()__        order.setOrderNr(10)__        order.setOrderType("BUY")__        order.setClientNr("A9")__        order.setFirstName("Pauline")__        order.setLastName("M")__        order.setAmount(new BigDecimal("2500.45"))__        order.setInstrumentCode("ISIN")__        order.setInstrumentNumber("XD12345678")__        order.setInstrumentType("Share")__        order.setCurrency("USD")__        Calendar calendar = new GregorianCalendar()__        calendar.set(2009, 7, 1, 0, 0, 0)__        order.setOrderDate(calendar.getTime())__        _        ArrayList<Map<String, Object>> input = new ArrayList<Map<String, Object>>()__        Map<String, Object> bodyRow = new HashMap<String, Object>()__        bodyRow.put(Order.class.getName(), order)__        input.add(createHeaderRow())__        input.add(bodyRow)__        input.add(createFooterRow())__        _        marshallResult.expectedMessageCount(1)__        StringBuffer buff = new StringBuffer()__        buff.append(TEST_HEADER).append(TEST_RECORD).append(TEST_FOOTER)__        marshallResult.expectedBodiesReceived(Arrays.asList(new String[] {buff.toString()}))__        template.sendBody(URI_DIRECT_MARSHALL, input)__        marshallResult.assertIsSatisfied()__    };verifies,that,header,footer,provided,as,part,of,message,body,are,marshalled,successfully;test,public,void,test,marshall,message,with,direct,header,and,footer,input,throws,exception,order,order,new,order,order,set,order,nr,10,order,set,order,type,buy,order,set,client,nr,a9,order,set,first,name,pauline,order,set,last,name,m,order,set,amount,new,big,decimal,2500,45,order,set,instrument,code,isin,order,set,instrument,number,xd12345678,order,set,instrument,type,share,order,set,currency,usd,calendar,calendar,new,gregorian,calendar,calendar,set,2009,7,1,0,0,0,order,set,order,date,calendar,get,time,array,list,map,string,object,input,new,array,list,map,string,object,map,string,object,body,row,new,hash,map,string,object,body,row,put,order,class,get,name,order,input,add,create,header,row,input,add,body,row,input,add,create,footer,row,marshall,result,expected,message,count,1,string,buffer,buff,new,string,buffer,buff,append,append,append,marshall,result,expected,bodies,received,arrays,as,list,new,string,buff,to,string,template,send,body,input,marshall,result,assert,is,satisfied
BindySimpleFixedLengthHeaderFooterTest -> @Test     public void testMarshallMessageWithDirectHeaderAndFooterInput() throws Exception;1365151062;Verifies that header & footer provided as part of message body are marshalled successfully;@Test_    public void testMarshallMessageWithDirectHeaderAndFooterInput() throws Exception {_        Order order = new Order()__        order.setOrderNr(10)__        order.setOrderType("BUY")__        order.setClientNr("A9")__        order.setFirstName("Pauline")__        order.setLastName("M")__        order.setAmount(new BigDecimal("2500.45"))__        order.setInstrumentCode("ISIN")__        order.setInstrumentNumber("XD12345678")__        order.setInstrumentType("Share")__        order.setCurrency("USD")__        Calendar calendar = new GregorianCalendar()__        calendar.set(2009, 7, 1, 0, 0, 0)__        order.setOrderDate(calendar.getTime())__        _        ArrayList<Map<String, Object>> input = new ArrayList<Map<String, Object>>()__        Map<String, Object> bodyRow = new HashMap<String, Object>()__        bodyRow.put(Order.class.getName(), order)__        input.add(createHeaderRow())__        input.add(bodyRow)__        input.add(createFooterRow())__        _        marshallResult.expectedMessageCount(1)__        StringBuffer buff = new StringBuffer()__        buff.append(TEST_HEADER).append(TEST_RECORD).append(TEST_FOOTER)__        marshallResult.expectedBodiesReceived(Arrays.asList(new String[] {buff.toString()}))__        template.sendBody(URI_DIRECT_MARSHALL, input)__        marshallResult.assertIsSatisfied()__    };verifies,that,header,footer,provided,as,part,of,message,body,are,marshalled,successfully;test,public,void,test,marshall,message,with,direct,header,and,footer,input,throws,exception,order,order,new,order,order,set,order,nr,10,order,set,order,type,buy,order,set,client,nr,a9,order,set,first,name,pauline,order,set,last,name,m,order,set,amount,new,big,decimal,2500,45,order,set,instrument,code,isin,order,set,instrument,number,xd12345678,order,set,instrument,type,share,order,set,currency,usd,calendar,calendar,new,gregorian,calendar,calendar,set,2009,7,1,0,0,0,order,set,order,date,calendar,get,time,array,list,map,string,object,input,new,array,list,map,string,object,map,string,object,body,row,new,hash,map,string,object,body,row,put,order,class,get,name,order,input,add,create,header,row,input,add,body,row,input,add,create,footer,row,marshall,result,expected,message,count,1,string,buffer,buff,new,string,buffer,buff,append,append,append,marshall,result,expected,bodies,received,arrays,as,list,new,string,buff,to,string,template,send,body,input,marshall,result,assert,is,satisfied
BindySimpleFixedLengthHeaderFooterTest -> @Test     public void testMarshallMessageWithDirectHeaderAndFooterInput() throws Exception;1373486788;Verifies that header & footer provided as part of message body are marshalled successfully;@Test_    public void testMarshallMessageWithDirectHeaderAndFooterInput() throws Exception {_        Order order = new Order()__        order.setOrderNr(10)__        order.setOrderType("BUY")__        order.setClientNr("A9")__        order.setFirstName("Pauline")__        order.setLastName("M")__        order.setAmount(new BigDecimal("2500.45"))__        order.setInstrumentCode("ISIN")__        order.setInstrumentNumber("XD12345678")__        order.setInstrumentType("Share")__        order.setCurrency("USD")__        Calendar calendar = new GregorianCalendar()__        calendar.set(2009, 7, 1, 0, 0, 0)__        order.setOrderDate(calendar.getTime())__        _        List<Map<String, Object>> input = new ArrayList<Map<String, Object>>()__        Map<String, Object> bodyRow = new HashMap<String, Object>()__        bodyRow.put(Order.class.getName(), order)__        input.add(createHeaderRow())__        input.add(bodyRow)__        input.add(createFooterRow())__        _        marshallResult.expectedMessageCount(1)__        StringBuffer buff = new StringBuffer()__        buff.append(TEST_HEADER).append(TEST_RECORD).append(TEST_FOOTER)__        marshallResult.expectedBodiesReceived(Arrays.asList(new String[] {buff.toString()}))__        template.sendBody(URI_DIRECT_MARSHALL, input)__        marshallResult.assertIsSatisfied()__    };verifies,that,header,footer,provided,as,part,of,message,body,are,marshalled,successfully;test,public,void,test,marshall,message,with,direct,header,and,footer,input,throws,exception,order,order,new,order,order,set,order,nr,10,order,set,order,type,buy,order,set,client,nr,a9,order,set,first,name,pauline,order,set,last,name,m,order,set,amount,new,big,decimal,2500,45,order,set,instrument,code,isin,order,set,instrument,number,xd12345678,order,set,instrument,type,share,order,set,currency,usd,calendar,calendar,new,gregorian,calendar,calendar,set,2009,7,1,0,0,0,order,set,order,date,calendar,get,time,list,map,string,object,input,new,array,list,map,string,object,map,string,object,body,row,new,hash,map,string,object,body,row,put,order,class,get,name,order,input,add,create,header,row,input,add,body,row,input,add,create,footer,row,marshall,result,expected,message,count,1,string,buffer,buff,new,string,buffer,buff,append,append,append,marshall,result,expected,bodies,received,arrays,as,list,new,string,buff,to,string,template,send,body,input,marshall,result,assert,is,satisfied
BindySimpleFixedLengthHeaderFooterTest -> @Test     public void testMarshallMessageWithDirectHeaderAndFooterInput() throws Exception;1438938832;Verifies that header & footer provided as part of message body are marshalled successfully;@Test_    public void testMarshallMessageWithDirectHeaderAndFooterInput() throws Exception {_        Order order = new Order()__        order.setOrderNr(10)__        order.setOrderType("BUY")__        order.setClientNr("A9")__        order.setFirstName("Pauline")__        order.setLastName("M")__        order.setAmount(new BigDecimal("2500.45"))__        order.setInstrumentCode("ISIN")__        order.setInstrumentNumber("XD12345678")__        order.setInstrumentType("Share")__        order.setCurrency("USD")__        Calendar calendar = new GregorianCalendar()__        calendar.set(2009, 7, 1, 0, 0, 0)__        order.setOrderDate(calendar.getTime())__        _        List<Map<String, Object>> input = new ArrayList<Map<String, Object>>()__        Map<String, Object> bodyRow = new HashMap<String, Object>()__        bodyRow.put(Order.class.getName(), order)__        input.add(createHeaderRow())__        input.add(bodyRow)__        input.add(createFooterRow())__        _        marshallResult.expectedMessageCount(1)__        StringBuffer buff = new StringBuffer()__        buff.append(TEST_HEADER).append(TEST_RECORD).append(TEST_FOOTER)__        marshallResult.expectedBodiesReceived(Arrays.asList(new String[] {buff.toString()}))__        template.sendBody(URI_DIRECT_MARSHALL, input)__        marshallResult.assertIsSatisfied()__    };verifies,that,header,footer,provided,as,part,of,message,body,are,marshalled,successfully;test,public,void,test,marshall,message,with,direct,header,and,footer,input,throws,exception,order,order,new,order,order,set,order,nr,10,order,set,order,type,buy,order,set,client,nr,a9,order,set,first,name,pauline,order,set,last,name,m,order,set,amount,new,big,decimal,2500,45,order,set,instrument,code,isin,order,set,instrument,number,xd12345678,order,set,instrument,type,share,order,set,currency,usd,calendar,calendar,new,gregorian,calendar,calendar,set,2009,7,1,0,0,0,order,set,order,date,calendar,get,time,list,map,string,object,input,new,array,list,map,string,object,map,string,object,body,row,new,hash,map,string,object,body,row,put,order,class,get,name,order,input,add,create,header,row,input,add,body,row,input,add,create,footer,row,marshall,result,expected,message,count,1,string,buffer,buff,new,string,buffer,buff,append,append,append,marshall,result,expected,bodies,received,arrays,as,list,new,string,buff,to,string,template,send,body,input,marshall,result,assert,is,satisfied
BindySimpleFixedLengthHeaderFooterTest -> @Test     public void testMarshallMessageWithDirectHeaderAndFooterInput() throws Exception;1523968787;Verifies that header & footer provided as part of message body are marshalled successfully;@Test_    public void testMarshallMessageWithDirectHeaderAndFooterInput() throws Exception {_        Order order = new Order()__        order.setOrderNr(10)__        order.setOrderType("BUY")__        order.setClientNr("A9")__        order.setFirstName("Pauline")__        order.setLastName("M")__        order.setAmount(new BigDecimal("2500.45"))__        order.setInstrumentCode("ISIN")__        order.setInstrumentNumber("XD12345678")__        order.setInstrumentType("Share")__        order.setCurrency("USD")__        Calendar calendar = new GregorianCalendar()__        calendar.set(2009, 7, 1, 0, 0, 0)__        order.setOrderDate(calendar.getTime())__        _        List<Map<String, Object>> input = new ArrayList<>()__        Map<String, Object> bodyRow = new HashMap<>()__        bodyRow.put(Order.class.getName(), order)__        input.add(createHeaderRow())__        input.add(bodyRow)__        input.add(createFooterRow())__        _        marshallResult.expectedMessageCount(1)__        StringBuffer buff = new StringBuffer()__        buff.append(TEST_HEADER).append(TEST_RECORD).append(TEST_FOOTER)__        marshallResult.expectedBodiesReceived(Arrays.asList(new String[] {buff.toString()}))__        template.sendBody(URI_DIRECT_MARSHALL, input)__        marshallResult.assertIsSatisfied()__    };verifies,that,header,footer,provided,as,part,of,message,body,are,marshalled,successfully;test,public,void,test,marshall,message,with,direct,header,and,footer,input,throws,exception,order,order,new,order,order,set,order,nr,10,order,set,order,type,buy,order,set,client,nr,a9,order,set,first,name,pauline,order,set,last,name,m,order,set,amount,new,big,decimal,2500,45,order,set,instrument,code,isin,order,set,instrument,number,xd12345678,order,set,instrument,type,share,order,set,currency,usd,calendar,calendar,new,gregorian,calendar,calendar,set,2009,7,1,0,0,0,order,set,order,date,calendar,get,time,list,map,string,object,input,new,array,list,map,string,object,body,row,new,hash,map,body,row,put,order,class,get,name,order,input,add,create,header,row,input,add,body,row,input,add,create,footer,row,marshall,result,expected,message,count,1,string,buffer,buff,new,string,buffer,buff,append,append,append,marshall,result,expected,bodies,received,arrays,as,list,new,string,buff,to,string,template,send,body,input,marshall,result,assert,is,satisfied
