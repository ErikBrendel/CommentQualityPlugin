commented;modifiers;parameterAmount;loc;comment;code
false;public;0;12;;@Test @DirtiesContext public void testMarshallMessage() throws Exception {     expected = "1,B2,Keira,Knightley,ISIN,XX23456789,BUY,Share,400.25,EUR,14-01-2009,17-02-2011 23:21:59\r\n".     result.expectedBodiesReceived(expected).     template.sendBody(generateModel()).     result.assertIsSatisfied(). }
false;public;0;31;;public List<Map<String, Object>> generateModel() {     Map<String, Object> modelObjects = new HashMap<>().     Order order = new Order().     order.setOrderNr(1).     order.setOrderType("BUY").     order.setClientNr("B2").     order.setFirstName("Keira").     order.setLastName("Knightley").     order.setAmount(new BigDecimal("400.25")).     order.setInstrumentCode("ISIN").     order.setInstrumentNumber("XX23456789").     order.setInstrumentType("Share").     order.setCurrency("EUR").     Calendar calendar = new GregorianCalendar().     calendar.set(2009, 0, 14).     order.setOrderDate(calendar.getTime()).     calendar = Calendar.getInstance(TimeZone.getTimeZone("GMT")).     // 4 hour shift     // 17-02-2011 23:21:59 by GMT+4     calendar.set(2011, 1, 17, 19, 21, 59).     order.setOrderDateTime(calendar.getTime()).     modelObjects.put(order.getClass().getName(), order).     models.add(modelObjects).     return models. }
false;public;0;12;;public void configure() {     BindyCsvDataFormat camelDataFormat = new BindyCsvDataFormat(org.apache.camel.dataformat.bindy.model.simple.oneclass.Order.class).     camelDataFormat.setLocale("en").     // default should errors go to mock:error     errorHandler(deadLetterChannel(URI_MOCK_ERROR).redeliveryDelay(0)).     onException(Exception.class).maximumRedeliveries(0).handled(true).     from(URI_DIRECT_START).marshal(camelDataFormat).to(URI_MOCK_RESULT). }
