commented;modifiers;parameterAmount;loc;comment;code
false;public;0;17;;// ************************************************************************* // TEST // ************************************************************************* @Test @DirtiesContext public void testMarshall() throws Exception {     Record rec = new Record().     rec.setField1(123.45).     rec.setField2(67.89).     rec.setField3(11.24F).     rec.setField4(33.45F).     rec.setField5(new BigDecimal(60.52)).     rec.setField6(new BigDecimal(70.62)).     mresult.expectedBodiesReceived("1234567.89 112433.45 605270.62\r\n").     mtemplate.sendBody(rec).     mresult.assertIsSatisfied(). }
false;public;0;20;;@Test @DirtiesContext public void testUnMarshall() throws Exception {     utemplate.sendBody("1234567.89 112433.45 605270.62").     uresult.expectedMessageCount(1).     uresult.assertIsSatisfied().     // check the model     Exchange exc = uresult.getReceivedExchanges().get(0).     Record data = exc.getIn().getBody(Record.class).     Assert.assertEquals(123.45D, data.getField1(), 0D).     Assert.assertEquals(67.89D, data.getField2(), 0D).     Assert.assertEquals(11.24F, data.getField3(), 0.001).     Assert.assertEquals(33.45F, data.getField4(), 0.001).     Assert.assertEquals(60.52D, data.getField5().doubleValue(), 0.001).     Assert.assertEquals(70.62D, data.getField6().doubleValue(), 0.001). }
false;public;0;13;;public void configure() {     BindyDataFormat bindy = new BindyDataFormat().     bindy.setClassType(Record.class).     bindy.setLocale("en").     bindy.setType(BindyType.Fixed).     from(URI_DIRECT_MARSHALL).marshal(bindy).to(URI_MOCK_MARSHALL_RESULT).     from(URI_DIRECT_UNMARSHALL).unmarshal().bindy(BindyType.Fixed, Record.class).to(URI_MOCK_UNMARSHALL_RESULT). }
false;public;0;3;;// ********************************************************************* // GETTER/SETTERS // ********************************************************************* public Double getField1() {     return field1. }
false;public;1;3;;public void setField1(Double value) {     this.field1 = value. }
false;public;0;3;;public Double getField2() {     return field2. }
false;public;1;3;;public void setField2(Double value) {     this.field2 = value. }
false;public;0;3;;public Float getField3() {     return field3. }
false;public;1;3;;public void setField3(Float value) {     this.field3 = value. }
false;public;0;3;;public Float getField4() {     return field4. }
false;public;1;3;;public void setField4(Float value) {     this.field4 = value. }
false;public;0;3;;public BigDecimal getField5() {     return field5. }
false;public;1;3;;public void setField5(BigDecimal value) {     this.field5 = value. }
false;public;0;3;;public BigDecimal getField6() {     return field6. }
false;public;1;3;;public void setField6(BigDecimal value) {     this.field6 = value. }
false;public;0;11;;// ********************************************************************* // HELPERS // ********************************************************************* @Override public String toString() {     return "Record{" + "field1=<" + field1 + ">" + ", field2=<" + field2 + ">" + ", field3=<" + field3 + ">" + ", field4=<" + field4 + ">" + ", field5=<" + field6 + ">" + ", field6=<" + field6 + ">" + "}". }
