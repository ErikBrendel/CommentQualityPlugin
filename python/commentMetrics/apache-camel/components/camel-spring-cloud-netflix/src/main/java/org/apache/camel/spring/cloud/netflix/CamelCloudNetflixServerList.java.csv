commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public ServiceDiscovery getServiceDiscovery() {     return serviceDiscovery. }
false;public;1;3;;public void setServiceDiscovery(ServiceDiscovery serviceDiscovery) {     this.serviceDiscovery = serviceDiscovery. }
false;public;0;3;;public ServiceFilter getServiceFilter() {     return serviceFilter. }
false;public;1;3;;public void setServiceFilter(ServiceFilter serviceFilter) {     this.serviceFilter = serviceFilter. }
false;public;1;4;;@Override public void initWithNiwsConfig(IClientConfig clientConfig) {     this.serviceId = clientConfig.getClientName(). }
false;public;0;13;;@Override public List<RibbonServiceDefinition> getInitialListOfServers() {     if (serviceId == null) {         return Collections.emptyList().     }     List<ServiceDefinition> services = serviceDiscovery.getServices(serviceId).     if (serviceFilter != null) {         services = serviceFilter.apply(services).     }     return convert(services). }
false;public;0;13;;@Override public List<RibbonServiceDefinition> getUpdatedListOfServers() {     if (serviceId == null) {         return Collections.emptyList().     }     List<ServiceDefinition> services = serviceDiscovery.getServices(serviceId).     if (serviceFilter != null) {         services = serviceFilter.apply(services).     }     return convert(services). }
false;private;1;7;;// ************************************************************************* // Helpers // ************************************************************************* private List<RibbonServiceDefinition> convert(List<? extends ServiceDefinition> definitions) {     if (definitions.isEmpty()) {         return Collections.emptyList().     }     return definitions.stream().map(RibbonServiceDefinition::new).collect(Collectors.toList()). }
