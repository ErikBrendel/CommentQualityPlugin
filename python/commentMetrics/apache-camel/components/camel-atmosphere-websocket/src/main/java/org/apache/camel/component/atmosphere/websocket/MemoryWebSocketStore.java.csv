commented;modifiers;parameterAmount;loc;comment;code
true;public;0;3;/* (non-Javadoc)      * @see org.apache.camel.Service#start()      */ ;/* (non-Javadoc)      * @see org.apache.camel.Service#start()      */ @Override public void start() throws Exception { }
true;public;0;5;/* (non-Javadoc)      * @see org.apache.camel.Service#stop()      */ ;/* (non-Javadoc)      * @see org.apache.camel.Service#stop()      */ @Override public void stop() throws Exception {     values.clear().     keys.clear(). }
true;public;2;8;/* (non-Javadoc)      * @see org.apache.camel.component.websocket2.WebsocketStore#addWebSocket(java.lang.String, org.atmosphere.websocket.WebSocket)      */ ;/* (non-Javadoc)      * @see org.apache.camel.component.websocket2.WebsocketStore#addWebSocket(java.lang.String, org.atmosphere.websocket.WebSocket)      */ @Override public void addWebSocket(String connectionKey, WebSocket websocket) {     values.put(connectionKey, websocket).     keys.put(websocket, connectionKey).     if (LOG.isDebugEnabled()) {         LOG.debug("added websocket {} => {}", connectionKey, websocket).     } }
true;public;1;8;/* (non-Javadoc)      * @see org.apache.camel.component.websocket2.WebsocketStore#removeWebSocket(java.lang.String)      */ ;/* (non-Javadoc)      * @see org.apache.camel.component.websocket2.WebsocketStore#removeWebSocket(java.lang.String)      */ @Override public void removeWebSocket(String connectionKey) {     Object obj = values.remove(connectionKey).     if (obj != null) {         keys.remove(obj).     }     LOG.debug("removed websocket {}", connectionKey). }
true;public;1;8;/* (non-Javadoc)      * @see org.apache.camel.component.websocket2.WebsocketStore#removeWebSocket(org.atmosphere.websocket.WebSocket)      */ ;/* (non-Javadoc)      * @see org.apache.camel.component.websocket2.WebsocketStore#removeWebSocket(org.atmosphere.websocket.WebSocket)      */ @Override public void removeWebSocket(WebSocket websocket) {     Object obj = keys.remove(websocket).     if (obj != null) {         values.remove(obj).     }     LOG.debug("removed websocket {}", websocket). }
true;public;1;4;/* (non-Javadoc)      * @see org.apache.camel.component.websocket2.WebsocketStore#getConnectionKey(org.atmosphere.websocket.WebSocket)      */ ;/* (non-Javadoc)      * @see org.apache.camel.component.websocket2.WebsocketStore#getConnectionKey(org.atmosphere.websocket.WebSocket)      */ @Override public String getConnectionKey(WebSocket websocket) {     return keys.get(websocket). }
true;public;1;4;/* (non-Javadoc)      * @see org.apache.camel.component.websocket2.WebsocketStore#getWebSocket(java.lang.String)      */ ;/* (non-Javadoc)      * @see org.apache.camel.component.websocket2.WebsocketStore#getWebSocket(java.lang.String)      */ @Override public WebSocket getWebSocket(String connectionKey) {     return values.get(connectionKey). }
true;public;0;4;/* (non-Javadoc)      * @see org.apache.camel.component.websocket2.WebsocketStore#getAllWebSockets()      */ ;/* (non-Javadoc)      * @see org.apache.camel.component.websocket2.WebsocketStore#getAllWebSockets()      */ @Override public Collection<WebSocket> getAllWebSockets() {     return values.values(). }
