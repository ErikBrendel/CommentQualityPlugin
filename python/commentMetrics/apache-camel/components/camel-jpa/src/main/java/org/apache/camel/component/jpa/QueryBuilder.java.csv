# id;timestamp;commentText;codeText;commentWords;codeWords
QueryBuilder -> public static QueryBuilder nativeQuery(final String nativeQuery, final Class<?> resultClass);1315209088;Creates a native SQL query with a provided resultClass;public static QueryBuilder nativeQuery(final String nativeQuery, final Class<?> resultClass) {_        return new QueryBuilder() {_            protected Query makeQueryObject(EntityManager entityManager) {_                return entityManager.createNativeQuery(nativeQuery, resultClass)__            }__            @Override_            public String toString() {_                return "NativeQuery: " + nativeQuery + " resultClass:" + resultClass + getParameterDescription()__            }_        }__    };creates,a,native,sql,query,with,a,provided,result,class;public,static,query,builder,native,query,final,string,native,query,final,class,result,class,return,new,query,builder,protected,query,make,query,object,entity,manager,entity,manager,return,entity,manager,create,native,query,native,query,result,class,override,public,string,to,string,return,native,query,native,query,result,class,result,class,get,parameter,description
QueryBuilder -> public static QueryBuilder nativeQuery(final String nativeQuery, final Class<?> resultClass);1540108161;Creates a native SQL query with a provided resultClass;public static QueryBuilder nativeQuery(final String nativeQuery, final Class<?> resultClass) {_        return new QueryBuilder() {_            protected Query makeQueryObject(EntityManager entityManager) {_                return entityManager.createNativeQuery(nativeQuery, resultClass)__            }__            @Override_            public String toString() {_                return "NativeQuery: " + nativeQuery + " resultClass:" + resultClass + getParameterDescription()__            }_        }__    };creates,a,native,sql,query,with,a,provided,result,class;public,static,query,builder,native,query,final,string,native,query,final,class,result,class,return,new,query,builder,protected,query,make,query,object,entity,manager,entity,manager,return,entity,manager,create,native,query,native,query,result,class,override,public,string,to,string,return,native,query,native,query,result,class,result,class,get,parameter,description
QueryBuilder -> public static QueryBuilder query(final String query);1179416274;Creates a query builder using the JPA query syntax__@param query JPA query language to create_@return a query builder;public static QueryBuilder query(final String query) {_        return new QueryBuilder() {_            protected Query makeQueryObject(EntityManager entityManager) {_                return entityManager.createQuery(query)__            }__            @Override_            public String toString() {_                return "Query: " + query + " params: " + getParameterDescription()__            }_        }__    };creates,a,query,builder,using,the,jpa,query,syntax,param,query,jpa,query,language,to,create,return,a,query,builder;public,static,query,builder,query,final,string,query,return,new,query,builder,protected,query,make,query,object,entity,manager,entity,manager,return,entity,manager,create,query,query,override,public,string,to,string,return,query,query,params,get,parameter,description
QueryBuilder -> public static QueryBuilder query(final String query);1186522380;Creates a query builder using the JPA query syntax__@param query JPA query language to create_@return a query builder;public static QueryBuilder query(final String query) {_        return new QueryBuilder() {_            protected Query makeQueryObject(EntityManager entityManager) {_                return entityManager.createQuery(query)__            }__            @Override_            public String toString() {_                return "Query: " + query + " params: " + getParameterDescription()__            }_        }__    };creates,a,query,builder,using,the,jpa,query,syntax,param,query,jpa,query,language,to,create,return,a,query,builder;public,static,query,builder,query,final,string,query,return,new,query,builder,protected,query,make,query,object,entity,manager,entity,manager,return,entity,manager,create,query,query,override,public,string,to,string,return,query,query,params,get,parameter,description
QueryBuilder -> public static QueryBuilder query(final String query);1255962473;Creates a query builder using the JPA query syntax__@param query JPA query language to create_@return a query builder;public static QueryBuilder query(final String query) {_        return new QueryBuilder() {_            protected Query makeQueryObject(EntityManager entityManager) {_                return entityManager.createQuery(query)__            }__            @Override_            public String toString() {_                return "Query: " + query + getParameterDescription()__            }_        }__    };creates,a,query,builder,using,the,jpa,query,syntax,param,query,jpa,query,language,to,create,return,a,query,builder;public,static,query,builder,query,final,string,query,return,new,query,builder,protected,query,make,query,object,entity,manager,entity,manager,return,entity,manager,create,query,query,override,public,string,to,string,return,query,query,get,parameter,description
QueryBuilder -> public static QueryBuilder query(final String query);1297032186;Creates a query builder using the JPA query syntax__@param query JPA query language to create_@return a query builder;public static QueryBuilder query(final String query) {_        return new QueryBuilder() {_            protected Query makeQueryObject(EntityManager entityManager) {_                return entityManager.createQuery(query)__            }__            @Override_            public String toString() {_                return "Query: " + query + getParameterDescription()__            }_        }__    };creates,a,query,builder,using,the,jpa,query,syntax,param,query,jpa,query,language,to,create,return,a,query,builder;public,static,query,builder,query,final,string,query,return,new,query,builder,protected,query,make,query,object,entity,manager,entity,manager,return,entity,manager,create,query,query,override,public,string,to,string,return,query,query,get,parameter,description
QueryBuilder -> public static QueryBuilder query(final String query);1297975937;Creates a query builder using the JPA query syntax__@param query JPA query language to create_@return a query builder;public static QueryBuilder query(final String query) {_        return new QueryBuilder() {_            protected Query makeQueryObject(EntityManager entityManager) {_                return entityManager.createQuery(query)__            }__            @Override_            public String toString() {_                return "Query: " + query + getParameterDescription()__            }_        }__    };creates,a,query,builder,using,the,jpa,query,syntax,param,query,jpa,query,language,to,create,return,a,query,builder;public,static,query,builder,query,final,string,query,return,new,query,builder,protected,query,make,query,object,entity,manager,entity,manager,return,entity,manager,create,query,query,override,public,string,to,string,return,query,query,get,parameter,description
QueryBuilder -> public static QueryBuilder query(final String query);1315209088;Creates a query builder using the JPA query syntax__@param query JPA query language to create_@return a query builder;public static QueryBuilder query(final String query) {_        return new QueryBuilder() {_            protected Query makeQueryObject(EntityManager entityManager) {_                return entityManager.createQuery(query)__            }__            @Override_            public String toString() {_                return "Query: " + query + getParameterDescription()__            }_        }__    };creates,a,query,builder,using,the,jpa,query,syntax,param,query,jpa,query,language,to,create,return,a,query,builder;public,static,query,builder,query,final,string,query,return,new,query,builder,protected,query,make,query,object,entity,manager,entity,manager,return,entity,manager,create,query,query,override,public,string,to,string,return,query,query,get,parameter,description
QueryBuilder -> public static QueryBuilder query(final String query);1540108161;Creates a query builder using the JPA query syntax__@param query JPA query language to create_@return a query builder;public static QueryBuilder query(final String query) {_        return new QueryBuilder() {_            protected Query makeQueryObject(EntityManager entityManager) {_                return entityManager.createQuery(query)__            }__            @Override_            public String toString() {_                return "Query: " + query + getParameterDescription()__            }_        }__    };creates,a,query,builder,using,the,jpa,query,syntax,param,query,jpa,query,language,to,create,return,a,query,builder;public,static,query,builder,query,final,string,query,return,new,query,builder,protected,query,make,query,object,entity,manager,entity,manager,return,entity,manager,create,query,query,override,public,string,to,string,return,query,query,get,parameter,description
QueryBuilder -> public QueryBuilder parameters(Object... parameters);1179416274;Specifies the parameters to the query__@param parameters the parameters to be configured on the query_@return this query builder;public QueryBuilder parameters(Object... parameters) {_        return parameters(Arrays.asList(parameters))__    };specifies,the,parameters,to,the,query,param,parameters,the,parameters,to,be,configured,on,the,query,return,this,query,builder;public,query,builder,parameters,object,parameters,return,parameters,arrays,as,list,parameters
QueryBuilder -> public QueryBuilder parameters(Object... parameters);1186522380;Specifies the parameters to the query__@param parameters the parameters to be configured on the query_@return this query builder;public QueryBuilder parameters(Object... parameters) {_        return parameters(Arrays.asList(parameters))__    };specifies,the,parameters,to,the,query,param,parameters,the,parameters,to,be,configured,on,the,query,return,this,query,builder;public,query,builder,parameters,object,parameters,return,parameters,arrays,as,list,parameters
QueryBuilder -> public QueryBuilder parameters(Object... parameters);1255962473;Specifies the parameters to the query__@param parameters the parameters to be configured on the query_@return this query builder;public QueryBuilder parameters(Object... parameters) {_        return parameters(Arrays.asList(parameters))__    };specifies,the,parameters,to,the,query,param,parameters,the,parameters,to,be,configured,on,the,query,return,this,query,builder;public,query,builder,parameters,object,parameters,return,parameters,arrays,as,list,parameters
QueryBuilder -> public QueryBuilder parameters(Object... parameters);1297032186;Specifies the parameters to the query__@param parameters the parameters to be configured on the query_@return this query builder;public QueryBuilder parameters(Object... parameters) {_        return parameters(Arrays.asList(parameters))__    };specifies,the,parameters,to,the,query,param,parameters,the,parameters,to,be,configured,on,the,query,return,this,query,builder;public,query,builder,parameters,object,parameters,return,parameters,arrays,as,list,parameters
QueryBuilder -> public QueryBuilder parameters(Object... parameters);1297975937;Specifies the parameters to the query__@param parameters the parameters to be configured on the query_@return this query builder;public QueryBuilder parameters(Object... parameters) {_        return parameters(Arrays.asList(parameters))__    };specifies,the,parameters,to,the,query,param,parameters,the,parameters,to,be,configured,on,the,query,return,this,query,builder;public,query,builder,parameters,object,parameters,return,parameters,arrays,as,list,parameters
QueryBuilder -> public QueryBuilder parameters(Object... parameters);1315209088;Specifies the parameters to the query__@param parameters the parameters to be configured on the query_@return this query builder;public QueryBuilder parameters(Object... parameters) {_        return parameters(Arrays.asList(parameters))__    };specifies,the,parameters,to,the,query,param,parameters,the,parameters,to,be,configured,on,the,query,return,this,query,builder;public,query,builder,parameters,object,parameters,return,parameters,arrays,as,list,parameters
QueryBuilder -> public QueryBuilder parameters(Object... parameters);1540108161;Specifies the parameters to the query__@param parameters the parameters to be configured on the query_@return this query builder;public QueryBuilder parameters(Object... parameters) {_        return parameters(Arrays.asList(parameters))__    };specifies,the,parameters,to,the,query,param,parameters,the,parameters,to,be,configured,on,the,query,return,this,query,builder;public,query,builder,parameters,object,parameters,return,parameters,arrays,as,list,parameters
QueryBuilder -> public QueryBuilder parameters(final Collection<?> parameters);1315209088;Specifies the parameters to the query as an ordered collection of_parameters__@param parameters the parameters to be configured on the query_@return this query builder;public QueryBuilder parameters(final Collection<?> parameters) {_        checkNoParametersConfigured()__        parameterBuilder = new ParameterBuilder() {_            public void populateQuery(EntityManager entityManager, Query query) {_                int counter = 0__                for (Object parameter : parameters) {_                    query.setParameter(counter++, parameter)__                }_            }__            @Override_            public String toString() {_                return "Parameters: " + parameters__            }_        }__        return this__    };specifies,the,parameters,to,the,query,as,an,ordered,collection,of,parameters,param,parameters,the,parameters,to,be,configured,on,the,query,return,this,query,builder;public,query,builder,parameters,final,collection,parameters,check,no,parameters,configured,parameter,builder,new,parameter,builder,public,void,populate,query,entity,manager,entity,manager,query,query,int,counter,0,for,object,parameter,parameters,query,set,parameter,counter,parameter,override,public,string,to,string,return,parameters,parameters,return,this
QueryBuilder -> public QueryBuilder parameters(final Collection<?> parameters);1540108161;Specifies the parameters to the query as an ordered collection of_parameters__@param parameters the parameters to be configured on the query_@return this query builder;public QueryBuilder parameters(final Collection<?> parameters) {_        checkNoParametersConfigured()__        parameterBuilder = new ParameterBuilder() {_            public void populateQuery(EntityManager entityManager, Query query) {_                int counter = 0__                for (Object parameter : parameters) {_                    query.setParameter(counter++, parameter)__                }_            }__            @Override_            public String toString() {_                return "Parameters: " + parameters__            }_        }__        return this__    };specifies,the,parameters,to,the,query,as,an,ordered,collection,of,parameters,param,parameters,the,parameters,to,be,configured,on,the,query,return,this,query,builder;public,query,builder,parameters,final,collection,parameters,check,no,parameters,configured,parameter,builder,new,parameter,builder,public,void,populate,query,entity,manager,entity,manager,query,query,int,counter,0,for,object,parameter,parameters,query,set,parameter,counter,parameter,override,public,string,to,string,return,parameters,parameters,return,this
QueryBuilder -> public static QueryBuilder nativeQuery(final String nativeQuery);1179416274;Creates a native SQL query;public static QueryBuilder nativeQuery(final String nativeQuery) {_        return new QueryBuilder() {_            protected Query makeQueryObject(EntityManager entityManager) {_                return entityManager.createNativeQuery(nativeQuery)__            }__            @Override_            public String toString() {_                return "NativeQuery: " + nativeQuery + getParameterDescription()__            }_        }__    };creates,a,native,sql,query;public,static,query,builder,native,query,final,string,native,query,return,new,query,builder,protected,query,make,query,object,entity,manager,entity,manager,return,entity,manager,create,native,query,native,query,override,public,string,to,string,return,native,query,native,query,get,parameter,description
QueryBuilder -> public static QueryBuilder nativeQuery(final String nativeQuery);1186522380;Creates a native SQL query;public static QueryBuilder nativeQuery(final String nativeQuery) {_        return new QueryBuilder() {_            protected Query makeQueryObject(EntityManager entityManager) {_                return entityManager.createNativeQuery(nativeQuery)__            }__            @Override_            public String toString() {_                return "NativeQuery: " + nativeQuery + getParameterDescription()__            }_        }__    };creates,a,native,sql,query;public,static,query,builder,native,query,final,string,native,query,return,new,query,builder,protected,query,make,query,object,entity,manager,entity,manager,return,entity,manager,create,native,query,native,query,override,public,string,to,string,return,native,query,native,query,get,parameter,description
QueryBuilder -> public static QueryBuilder nativeQuery(final String nativeQuery);1255962473;Creates a native SQL query;public static QueryBuilder nativeQuery(final String nativeQuery) {_        return new QueryBuilder() {_            protected Query makeQueryObject(EntityManager entityManager) {_                return entityManager.createNativeQuery(nativeQuery)__            }__            @Override_            public String toString() {_                return "NativeQuery: " + nativeQuery + getParameterDescription()__            }_        }__    };creates,a,native,sql,query;public,static,query,builder,native,query,final,string,native,query,return,new,query,builder,protected,query,make,query,object,entity,manager,entity,manager,return,entity,manager,create,native,query,native,query,override,public,string,to,string,return,native,query,native,query,get,parameter,description
QueryBuilder -> public static QueryBuilder nativeQuery(final String nativeQuery);1297032186;Creates a native SQL query;public static QueryBuilder nativeQuery(final String nativeQuery) {_        return new QueryBuilder() {_            protected Query makeQueryObject(EntityManager entityManager) {_                return entityManager.createNativeQuery(nativeQuery)__            }__            @Override_            public String toString() {_                return "NativeQuery: " + nativeQuery + getParameterDescription()__            }_        }__    };creates,a,native,sql,query;public,static,query,builder,native,query,final,string,native,query,return,new,query,builder,protected,query,make,query,object,entity,manager,entity,manager,return,entity,manager,create,native,query,native,query,override,public,string,to,string,return,native,query,native,query,get,parameter,description
QueryBuilder -> public static QueryBuilder nativeQuery(final String nativeQuery);1297975937;Creates a native SQL query;public static QueryBuilder nativeQuery(final String nativeQuery) {_        return new QueryBuilder() {_            protected Query makeQueryObject(EntityManager entityManager) {_                return entityManager.createNativeQuery(nativeQuery)__            }__            @Override_            public String toString() {_                return "NativeQuery: " + nativeQuery + getParameterDescription()__            }_        }__    };creates,a,native,sql,query;public,static,query,builder,native,query,final,string,native,query,return,new,query,builder,protected,query,make,query,object,entity,manager,entity,manager,return,entity,manager,create,native,query,native,query,override,public,string,to,string,return,native,query,native,query,get,parameter,description
QueryBuilder -> public static QueryBuilder nativeQuery(final String nativeQuery);1315209088;Creates a native SQL query;public static QueryBuilder nativeQuery(final String nativeQuery) {_        return new QueryBuilder() {_            protected Query makeQueryObject(EntityManager entityManager) {_                return entityManager.createNativeQuery(nativeQuery)__            }__            @Override_            public String toString() {_                return "NativeQuery: " + nativeQuery + getParameterDescription()__            }_        }__    };creates,a,native,sql,query;public,static,query,builder,native,query,final,string,native,query,return,new,query,builder,protected,query,make,query,object,entity,manager,entity,manager,return,entity,manager,create,native,query,native,query,override,public,string,to,string,return,native,query,native,query,get,parameter,description
QueryBuilder -> public static QueryBuilder nativeQuery(final String nativeQuery);1540108161;Creates a native SQL query;public static QueryBuilder nativeQuery(final String nativeQuery) {_        return new QueryBuilder() {_            protected Query makeQueryObject(EntityManager entityManager) {_                return entityManager.createNativeQuery(nativeQuery)__            }__            @Override_            public String toString() {_                return "NativeQuery: " + nativeQuery + getParameterDescription()__            }_        }__    };creates,a,native,sql,query;public,static,query,builder,native,query,final,string,native,query,return,new,query,builder,protected,query,make,query,object,entity,manager,entity,manager,return,entity,manager,create,native,query,native,query,override,public,string,to,string,return,native,query,native,query,get,parameter,description
QueryBuilder -> public QueryBuilder parameters(final Map<String, Object> parameterMap);1179416274;Specifies the parameters to the query as a Map of key/value pairs__@param parameterMap the parameters to be configured on the query_@return this query builder;public QueryBuilder parameters(final Map<String, Object> parameterMap) {_        checkNoParametersConfigured()__        parameterBuilder = new ParameterBuilder() {_            public void populateQuery(EntityManager entityManager, Query query) {_                Set<Map.Entry<String, Object>> entries = parameterMap.entrySet()__                for (Map.Entry<String, Object> entry : entries) {_                    query.setParameter(entry.getKey(), entry.getValue())__                }_            }__            @Override_            public String toString() {_                return "Parameters: " + parameterMap__            }_        }__        return this__    };specifies,the,parameters,to,the,query,as,a,map,of,key,value,pairs,param,parameter,map,the,parameters,to,be,configured,on,the,query,return,this,query,builder;public,query,builder,parameters,final,map,string,object,parameter,map,check,no,parameters,configured,parameter,builder,new,parameter,builder,public,void,populate,query,entity,manager,entity,manager,query,query,set,map,entry,string,object,entries,parameter,map,entry,set,for,map,entry,string,object,entry,entries,query,set,parameter,entry,get,key,entry,get,value,override,public,string,to,string,return,parameters,parameter,map,return,this
QueryBuilder -> public QueryBuilder parameters(final Map<String, Object> parameterMap);1186522380;Specifies the parameters to the query as a Map of key/value pairs__@param parameterMap the parameters to be configured on the query_@return this query builder;public QueryBuilder parameters(final Map<String, Object> parameterMap) {_        checkNoParametersConfigured()__        parameterBuilder = new ParameterBuilder() {_            public void populateQuery(EntityManager entityManager, Query query) {_                Set<Map.Entry<String, Object>> entries = parameterMap.entrySet()__                for (Map.Entry<String, Object> entry : entries) {_                    query.setParameter(entry.getKey(), entry.getValue())__                }_            }__            @Override_            public String toString() {_                return "Parameters: " + parameterMap__            }_        }__        return this__    };specifies,the,parameters,to,the,query,as,a,map,of,key,value,pairs,param,parameter,map,the,parameters,to,be,configured,on,the,query,return,this,query,builder;public,query,builder,parameters,final,map,string,object,parameter,map,check,no,parameters,configured,parameter,builder,new,parameter,builder,public,void,populate,query,entity,manager,entity,manager,query,query,set,map,entry,string,object,entries,parameter,map,entry,set,for,map,entry,string,object,entry,entries,query,set,parameter,entry,get,key,entry,get,value,override,public,string,to,string,return,parameters,parameter,map,return,this
QueryBuilder -> public QueryBuilder parameters(final Map<String, Object> parameterMap);1255962473;Specifies the parameters to the query as a Map of key/value pairs__@param parameterMap the parameters to be configured on the query_@return this query builder;public QueryBuilder parameters(final Map<String, Object> parameterMap) {_        checkNoParametersConfigured()__        parameterBuilder = new ParameterBuilder() {_            public void populateQuery(EntityManager entityManager, Query query) {_                Set<Map.Entry<String, Object>> entries = parameterMap.entrySet()__                for (Map.Entry<String, Object> entry : entries) {_                    query.setParameter(entry.getKey(), entry.getValue())__                }_            }__            @Override_            public String toString() {_                return "Parameters: " + parameterMap__            }_        }__        return this__    };specifies,the,parameters,to,the,query,as,a,map,of,key,value,pairs,param,parameter,map,the,parameters,to,be,configured,on,the,query,return,this,query,builder;public,query,builder,parameters,final,map,string,object,parameter,map,check,no,parameters,configured,parameter,builder,new,parameter,builder,public,void,populate,query,entity,manager,entity,manager,query,query,set,map,entry,string,object,entries,parameter,map,entry,set,for,map,entry,string,object,entry,entries,query,set,parameter,entry,get,key,entry,get,value,override,public,string,to,string,return,parameters,parameter,map,return,this
QueryBuilder -> public QueryBuilder parameters(final Map<String, Object> parameterMap);1297032186;Specifies the parameters to the query as a Map of key/value pairs__@param parameterMap the parameters to be configured on the query_@return this query builder;public QueryBuilder parameters(final Map<String, Object> parameterMap) {_        checkNoParametersConfigured()__        parameterBuilder = new ParameterBuilder() {_            public void populateQuery(EntityManager entityManager, Query query) {_                Set<Map.Entry<String, Object>> entries = parameterMap.entrySet()__                for (Map.Entry<String, Object> entry : entries) {_                    query.setParameter(entry.getKey(), entry.getValue())__                }_            }__            @Override_            public String toString() {_                return "Parameters: " + parameterMap__            }_        }__        return this__    };specifies,the,parameters,to,the,query,as,a,map,of,key,value,pairs,param,parameter,map,the,parameters,to,be,configured,on,the,query,return,this,query,builder;public,query,builder,parameters,final,map,string,object,parameter,map,check,no,parameters,configured,parameter,builder,new,parameter,builder,public,void,populate,query,entity,manager,entity,manager,query,query,set,map,entry,string,object,entries,parameter,map,entry,set,for,map,entry,string,object,entry,entries,query,set,parameter,entry,get,key,entry,get,value,override,public,string,to,string,return,parameters,parameter,map,return,this
QueryBuilder -> public QueryBuilder parameters(final Map<String, Object> parameterMap);1297975937;Specifies the parameters to the query as a Map of key/value pairs__@param parameterMap the parameters to be configured on the query_@return this query builder;public QueryBuilder parameters(final Map<String, Object> parameterMap) {_        checkNoParametersConfigured()__        parameterBuilder = new ParameterBuilder() {_            public void populateQuery(EntityManager entityManager, Query query) {_                Set<Map.Entry<String, Object>> entries = parameterMap.entrySet()__                for (Map.Entry<String, Object> entry : entries) {_                    query.setParameter(entry.getKey(), entry.getValue())__                }_            }__            @Override_            public String toString() {_                return "Parameters: " + parameterMap__            }_        }__        return this__    };specifies,the,parameters,to,the,query,as,a,map,of,key,value,pairs,param,parameter,map,the,parameters,to,be,configured,on,the,query,return,this,query,builder;public,query,builder,parameters,final,map,string,object,parameter,map,check,no,parameters,configured,parameter,builder,new,parameter,builder,public,void,populate,query,entity,manager,entity,manager,query,query,set,map,entry,string,object,entries,parameter,map,entry,set,for,map,entry,string,object,entry,entries,query,set,parameter,entry,get,key,entry,get,value,override,public,string,to,string,return,parameters,parameter,map,return,this
QueryBuilder -> public QueryBuilder parameters(final Map<String, Object> parameterMap);1315209088;Specifies the parameters to the query as a Map of key/value pairs__@param parameterMap the parameters to be configured on the query_@return this query builder;public QueryBuilder parameters(final Map<String, Object> parameterMap) {_        checkNoParametersConfigured()__        parameterBuilder = new ParameterBuilder() {_            public void populateQuery(EntityManager entityManager, Query query) {_                Set<Map.Entry<String, Object>> entries = parameterMap.entrySet()__                for (Map.Entry<String, Object> entry : entries) {_                    query.setParameter(entry.getKey(), entry.getValue())__                }_            }__            @Override_            public String toString() {_                return "Parameters: " + parameterMap__            }_        }__        return this__    };specifies,the,parameters,to,the,query,as,a,map,of,key,value,pairs,param,parameter,map,the,parameters,to,be,configured,on,the,query,return,this,query,builder;public,query,builder,parameters,final,map,string,object,parameter,map,check,no,parameters,configured,parameter,builder,new,parameter,builder,public,void,populate,query,entity,manager,entity,manager,query,query,set,map,entry,string,object,entries,parameter,map,entry,set,for,map,entry,string,object,entry,entries,query,set,parameter,entry,get,key,entry,get,value,override,public,string,to,string,return,parameters,parameter,map,return,this
QueryBuilder -> public QueryBuilder parameters(final Map<String, Object> parameterMap);1540108161;Specifies the parameters to the query as a Map of key/value pairs__@param parameterMap the parameters to be configured on the query_@return this query builder;public QueryBuilder parameters(final Map<String, Object> parameterMap) {_        checkNoParametersConfigured()__        parameterBuilder = new ParameterBuilder() {_            public void populateQuery(EntityManager entityManager, Query query) {_                Set<Map.Entry<String, Object>> entries = parameterMap.entrySet()__                for (Map.Entry<String, Object> entry : entries) {_                    query.setParameter(entry.getKey(), entry.getValue())__                }_            }__            @Override_            public String toString() {_                return "Parameters: " + parameterMap__            }_        }__        return this__    };specifies,the,parameters,to,the,query,as,a,map,of,key,value,pairs,param,parameter,map,the,parameters,to,be,configured,on,the,query,return,this,query,builder;public,query,builder,parameters,final,map,string,object,parameter,map,check,no,parameters,configured,parameter,builder,new,parameter,builder,public,void,populate,query,entity,manager,entity,manager,query,query,set,map,entry,string,object,entries,parameter,map,entry,set,for,map,entry,string,object,entry,entries,query,set,parameter,entry,get,key,entry,get,value,override,public,string,to,string,return,parameters,parameter,map,return,this
QueryBuilder -> public static QueryBuilder nativeQuery(final String nativeQuery, final Class resultClass);1297032186;Creates a native SQL query with a provided resultClass;public static QueryBuilder nativeQuery(final String nativeQuery, final Class resultClass) {_        return new QueryBuilder() {_            protected Query makeQueryObject(EntityManager entityManager) {_                return entityManager.createNativeQuery(nativeQuery, resultClass)__            }__            @Override_            public String toString() {_                return "NativeQuery: " + nativeQuery + " resultClass:" + resultClass + getParameterDescription()__            }_        }__    };creates,a,native,sql,query,with,a,provided,result,class;public,static,query,builder,native,query,final,string,native,query,final,class,result,class,return,new,query,builder,protected,query,make,query,object,entity,manager,entity,manager,return,entity,manager,create,native,query,native,query,result,class,override,public,string,to,string,return,native,query,native,query,result,class,result,class,get,parameter,description
QueryBuilder -> public static QueryBuilder nativeQuery(final String nativeQuery, final Class resultClass);1297975937;Creates a native SQL query with a provided resultClass;public static QueryBuilder nativeQuery(final String nativeQuery, final Class resultClass) {_        return new QueryBuilder() {_            protected Query makeQueryObject(EntityManager entityManager) {_                return entityManager.createNativeQuery(nativeQuery, resultClass)__            }__            @Override_            public String toString() {_                return "NativeQuery: " + nativeQuery + " resultClass:" + resultClass + getParameterDescription()__            }_        }__    };creates,a,native,sql,query,with,a,provided,result,class;public,static,query,builder,native,query,final,string,native,query,final,class,result,class,return,new,query,builder,protected,query,make,query,object,entity,manager,entity,manager,return,entity,manager,create,native,query,native,query,result,class,override,public,string,to,string,return,native,query,native,query,result,class,result,class,get,parameter,description
QueryBuilder -> public static QueryBuilder namedQuery(final String namedQuery);1179416274;Creates a named query;public static QueryBuilder namedQuery(final String namedQuery) {_        return new QueryBuilder() {_            protected Query makeQueryObject(EntityManager entityManager) {_                return entityManager.createNamedQuery(namedQuery)__            }__            @Override_            public String toString() {_                return "Named: " + namedQuery + getParameterDescription()__            }_        }__    };creates,a,named,query;public,static,query,builder,named,query,final,string,named,query,return,new,query,builder,protected,query,make,query,object,entity,manager,entity,manager,return,entity,manager,create,named,query,named,query,override,public,string,to,string,return,named,named,query,get,parameter,description
QueryBuilder -> public static QueryBuilder namedQuery(final String namedQuery);1186522380;Creates a named query;public static QueryBuilder namedQuery(final String namedQuery) {_        return new QueryBuilder() {_            protected Query makeQueryObject(EntityManager entityManager) {_                return entityManager.createNamedQuery(namedQuery)__            }__            @Override_            public String toString() {_                return "Named: " + namedQuery + getParameterDescription()__            }_        }__    };creates,a,named,query;public,static,query,builder,named,query,final,string,named,query,return,new,query,builder,protected,query,make,query,object,entity,manager,entity,manager,return,entity,manager,create,named,query,named,query,override,public,string,to,string,return,named,named,query,get,parameter,description
QueryBuilder -> public static QueryBuilder namedQuery(final String namedQuery);1255962473;Creates a named query;public static QueryBuilder namedQuery(final String namedQuery) {_        return new QueryBuilder() {_            protected Query makeQueryObject(EntityManager entityManager) {_                return entityManager.createNamedQuery(namedQuery)__            }__            @Override_            public String toString() {_                return "Named: " + namedQuery + getParameterDescription()__            }_        }__    };creates,a,named,query;public,static,query,builder,named,query,final,string,named,query,return,new,query,builder,protected,query,make,query,object,entity,manager,entity,manager,return,entity,manager,create,named,query,named,query,override,public,string,to,string,return,named,named,query,get,parameter,description
QueryBuilder -> public static QueryBuilder namedQuery(final String namedQuery);1297032186;Creates a named query;public static QueryBuilder namedQuery(final String namedQuery) {_        return new QueryBuilder() {_            protected Query makeQueryObject(EntityManager entityManager) {_                return entityManager.createNamedQuery(namedQuery)__            }__            @Override_            public String toString() {_                return "Named: " + namedQuery + getParameterDescription()__            }_        }__    };creates,a,named,query;public,static,query,builder,named,query,final,string,named,query,return,new,query,builder,protected,query,make,query,object,entity,manager,entity,manager,return,entity,manager,create,named,query,named,query,override,public,string,to,string,return,named,named,query,get,parameter,description
QueryBuilder -> public static QueryBuilder namedQuery(final String namedQuery);1297975937;Creates a named query;public static QueryBuilder namedQuery(final String namedQuery) {_        return new QueryBuilder() {_            protected Query makeQueryObject(EntityManager entityManager) {_                return entityManager.createNamedQuery(namedQuery)__            }__            @Override_            public String toString() {_                return "Named: " + namedQuery + getParameterDescription()__            }_        }__    };creates,a,named,query;public,static,query,builder,named,query,final,string,named,query,return,new,query,builder,protected,query,make,query,object,entity,manager,entity,manager,return,entity,manager,create,named,query,named,query,override,public,string,to,string,return,named,named,query,get,parameter,description
QueryBuilder -> public static QueryBuilder namedQuery(final String namedQuery);1315209088;Creates a named query;public static QueryBuilder namedQuery(final String namedQuery) {_        return new QueryBuilder() {_            protected Query makeQueryObject(EntityManager entityManager) {_                return entityManager.createNamedQuery(namedQuery)__            }__            @Override_            public String toString() {_                return "Named: " + namedQuery + getParameterDescription()__            }_        }__    };creates,a,named,query;public,static,query,builder,named,query,final,string,named,query,return,new,query,builder,protected,query,make,query,object,entity,manager,entity,manager,return,entity,manager,create,named,query,named,query,override,public,string,to,string,return,named,named,query,get,parameter,description
QueryBuilder -> public static QueryBuilder namedQuery(final String namedQuery);1540108161;Creates a named query;public static QueryBuilder namedQuery(final String namedQuery) {_        return new QueryBuilder() {_            protected Query makeQueryObject(EntityManager entityManager) {_                return entityManager.createNamedQuery(namedQuery)__            }__            @Override_            public String toString() {_                return "Named: " + namedQuery + getParameterDescription()__            }_        }__    };creates,a,named,query;public,static,query,builder,named,query,final,string,named,query,return,new,query,builder,protected,query,make,query,object,entity,manager,entity,manager,return,entity,manager,create,named,query,named,query,override,public,string,to,string,return,named,named,query,get,parameter,description
QueryBuilder -> public QueryBuilder parameters(final Collection parameters);1179416274;Specifies the parameters to the query as an ordered collection of parameters__@param parameters the parameters to be configured on the query_@return this query builder;public QueryBuilder parameters(final Collection parameters) {_        checkNoParametersConfigured()__        parameterBuilder = new ParameterBuilder() {_            public void populateQuery(EntityManager entityManager, Query query) {_                int counter = 0__                for (Object parameter : parameters) {_                    query.setParameter(counter++, parameter)__                }_            }__            @Override_            public String toString() {_                return "Parameters: " + parameters__            }_        }__        return this__    };specifies,the,parameters,to,the,query,as,an,ordered,collection,of,parameters,param,parameters,the,parameters,to,be,configured,on,the,query,return,this,query,builder;public,query,builder,parameters,final,collection,parameters,check,no,parameters,configured,parameter,builder,new,parameter,builder,public,void,populate,query,entity,manager,entity,manager,query,query,int,counter,0,for,object,parameter,parameters,query,set,parameter,counter,parameter,override,public,string,to,string,return,parameters,parameters,return,this
QueryBuilder -> public QueryBuilder parameters(final Collection parameters);1186522380;Specifies the parameters to the query as an ordered collection of_parameters__@param parameters the parameters to be configured on the query_@return this query builder;public QueryBuilder parameters(final Collection parameters) {_        checkNoParametersConfigured()__        parameterBuilder = new ParameterBuilder() {_            public void populateQuery(EntityManager entityManager, Query query) {_                int counter = 0__                for (Object parameter : parameters) {_                    query.setParameter(counter++, parameter)__                }_            }__            @Override_            public String toString() {_                return "Parameters: " + parameters__            }_        }__        return this__    };specifies,the,parameters,to,the,query,as,an,ordered,collection,of,parameters,param,parameters,the,parameters,to,be,configured,on,the,query,return,this,query,builder;public,query,builder,parameters,final,collection,parameters,check,no,parameters,configured,parameter,builder,new,parameter,builder,public,void,populate,query,entity,manager,entity,manager,query,query,int,counter,0,for,object,parameter,parameters,query,set,parameter,counter,parameter,override,public,string,to,string,return,parameters,parameters,return,this
QueryBuilder -> public QueryBuilder parameters(final Collection parameters);1255962473;Specifies the parameters to the query as an ordered collection of_parameters__@param parameters the parameters to be configured on the query_@return this query builder;public QueryBuilder parameters(final Collection parameters) {_        checkNoParametersConfigured()__        parameterBuilder = new ParameterBuilder() {_            public void populateQuery(EntityManager entityManager, Query query) {_                int counter = 0__                for (Object parameter : parameters) {_                    query.setParameter(counter++, parameter)__                }_            }__            @Override_            public String toString() {_                return "Parameters: " + parameters__            }_        }__        return this__    };specifies,the,parameters,to,the,query,as,an,ordered,collection,of,parameters,param,parameters,the,parameters,to,be,configured,on,the,query,return,this,query,builder;public,query,builder,parameters,final,collection,parameters,check,no,parameters,configured,parameter,builder,new,parameter,builder,public,void,populate,query,entity,manager,entity,manager,query,query,int,counter,0,for,object,parameter,parameters,query,set,parameter,counter,parameter,override,public,string,to,string,return,parameters,parameters,return,this
QueryBuilder -> public QueryBuilder parameters(final Collection parameters);1297032186;Specifies the parameters to the query as an ordered collection of_parameters__@param parameters the parameters to be configured on the query_@return this query builder;public QueryBuilder parameters(final Collection parameters) {_        checkNoParametersConfigured()__        parameterBuilder = new ParameterBuilder() {_            public void populateQuery(EntityManager entityManager, Query query) {_                int counter = 0__                for (Object parameter : parameters) {_                    query.setParameter(counter++, parameter)__                }_            }__            @Override_            public String toString() {_                return "Parameters: " + parameters__            }_        }__        return this__    };specifies,the,parameters,to,the,query,as,an,ordered,collection,of,parameters,param,parameters,the,parameters,to,be,configured,on,the,query,return,this,query,builder;public,query,builder,parameters,final,collection,parameters,check,no,parameters,configured,parameter,builder,new,parameter,builder,public,void,populate,query,entity,manager,entity,manager,query,query,int,counter,0,for,object,parameter,parameters,query,set,parameter,counter,parameter,override,public,string,to,string,return,parameters,parameters,return,this
QueryBuilder -> public QueryBuilder parameters(final Collection parameters);1297975937;Specifies the parameters to the query as an ordered collection of_parameters__@param parameters the parameters to be configured on the query_@return this query builder;public QueryBuilder parameters(final Collection parameters) {_        checkNoParametersConfigured()__        parameterBuilder = new ParameterBuilder() {_            public void populateQuery(EntityManager entityManager, Query query) {_                int counter = 0__                for (Object parameter : parameters) {_                    query.setParameter(counter++, parameter)__                }_            }__            @Override_            public String toString() {_                return "Parameters: " + parameters__            }_        }__        return this__    };specifies,the,parameters,to,the,query,as,an,ordered,collection,of,parameters,param,parameters,the,parameters,to,be,configured,on,the,query,return,this,query,builder;public,query,builder,parameters,final,collection,parameters,check,no,parameters,configured,parameter,builder,new,parameter,builder,public,void,populate,query,entity,manager,entity,manager,query,query,int,counter,0,for,object,parameter,parameters,query,set,parameter,counter,parameter,override,public,string,to,string,return,parameters,parameters,return,this
