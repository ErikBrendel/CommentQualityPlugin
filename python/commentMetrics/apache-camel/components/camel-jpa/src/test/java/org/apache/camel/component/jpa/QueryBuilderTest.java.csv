commented;modifiers;parameterAmount;loc;comment;code
false;public;0;6;;@Test public void testQueryBuilder() throws Exception {     QueryBuilder q = QueryBuilder.query("select x from SendEmail x").     assertNotNull(q).     assertEquals("Query: select x from SendEmail x", q.toString()). }
false;public;0;6;;@Test public void testNamedQueryBuilder() throws Exception {     QueryBuilder q = QueryBuilder.namedQuery("step1").     assertNotNull(q).     assertEquals("Named: step1", q.toString()). }
false;public;0;6;;@Test public void testNativeQueryBuilder() throws Exception {     QueryBuilder q = QueryBuilder.nativeQuery("select count(*) from SendEmail").     assertNotNull(q).     assertEquals("NativeQuery: select count(*) from SendEmail", q.toString()). }
false;public;0;7;;@Test public void testQueryBuilderWithParameters() throws Exception {     QueryBuilder q = QueryBuilder.query("select x from SendEmail x where x.id = :a").     assertNotNull(q).     q.parameters(1).     assertEquals("Query: select x from SendEmail x where x.id = :a Parameters: [1]", q.toString()). }
false;public;0;9;;@Test public void testQueryBuilderWithParametersMap() throws Exception {     QueryBuilder q = QueryBuilder.query("select x from SendEmail x where x.id = :a").     assertNotNull(q).     Map<String, Object> map = new HashMap<>().     map.put("a", 1).     q.parameters(map).     assertEquals("Query: select x from SendEmail x where x.id = :a Parameters: {a=1}", q.toString()). }
