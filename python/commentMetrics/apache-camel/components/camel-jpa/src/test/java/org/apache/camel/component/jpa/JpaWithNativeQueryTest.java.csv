commented;modifiers;parameterAmount;loc;comment;code
true;protected;1;7;/**  * We receive an object array, because we call entityManager.createNativeQuery(nativeQuery)  * and not entityManager.createNativeQuery(nativeQuery, MultiSteps.class)  */ ;/**  * We receive an object array, because we call entityManager.createNativeQuery(nativeQuery)  * and not entityManager.createNativeQuery(nativeQuery, MultiSteps.class)  */ @Override protected void assertReceivedResult(Exchange exchange) {     assertNotNull(exchange).     Object[] result = exchange.getIn().getBody(Object[].class).     assertNotNull("Received an object array", result).     assertEquals("address property", "foo@bar.com", result[1]). }
true;protected;0;4;/**  * Is still 1, because we receive an object array which has no @Consumed annotation  * as the MultiSteps class has.  */ ;/**  * Is still 1, because we receive an object array which has no @Consumed annotation  * as the MultiSteps class has.  */ @Override protected int getUpdatedStepValue() {     return 1. }
false;protected;1;4;;@Override protected void assertURIQueryOption(JpaConsumer jpaConsumer) {     assertEquals("select * from MultiSteps where step = 1", jpaConsumer.getNativeQuery()). }
false;protected;0;4;;@Override protected String getEndpointUri() {     return "jpa://" + MultiSteps.class.getName() + "?consumer.nativeQuery=select * from MultiSteps where step = 1". }
