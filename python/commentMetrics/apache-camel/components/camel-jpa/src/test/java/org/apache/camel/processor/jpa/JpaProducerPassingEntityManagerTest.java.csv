commented;modifiers;parameterAmount;loc;comment;code
false;public;0;26;;@Test public void testRouteJpa() throws Exception {     MockEndpoint mock = getMockEndpoint("mock:result").     context.getRouteController().startRoute("foo").     JpaEndpoint jpa = context.getEndpoint("jpa://" + SendEmail.class.getName(), JpaEndpoint.class).     EntityManagerFactory emf = jpa.getEntityManagerFactory().     // The entity instance is different if it is retrieved from different EntityManager instance     EntityManager entityManager = emf.createEntityManager().     template.sendBody("direct:start", new SendEmail("foo@beer.org")).     Exchange exchange = mock.getReceivedExchanges().get(0).     SendEmail persistedEntity = exchange.getIn().getBody(SendEmail.class).     SendEmail emfindEntity = entityManager.find(SendEmail.class, persistedEntity.getId()).     assertNotSame(emfindEntity, persistedEntity).     entityManager.close().     mock.reset().     // The same EntityManager returns same entity instance from its 1st level cache     entityManager = emf.createEntityManager().     template.sendBodyAndHeader("direct:start", new SendEmail("bar@beer.org"), JpaConstants.ENTITY_MANAGER, entityManager).     exchange = mock.getReceivedExchanges().get(0).     persistedEntity = exchange.getIn().getBody(SendEmail.class).     emfindEntity = entityManager.find(SendEmail.class, persistedEntity.getId()).     assertSame(emfindEntity, persistedEntity).     entityManager.close(). }
false;public;0;6;;public void configure() {     from("direct:start").id("foo").to("jpa://" + SendEmail.class.getName() + "?usePassedInEntityManager=true").to("mock:result"). }
false;protected;0;11;;@Override protected RouteBuilder createRouteBuilder() {     return new SpringRouteBuilder() {          public void configure() {             from("direct:start").id("foo").to("jpa://" + SendEmail.class.getName() + "?usePassedInEntityManager=true").to("mock:result").         }     }. }
false;protected;0;4;;@Override protected String routeXml() {     return "org/apache/camel/processor/jpa/springJpaRouteTest.xml". }
false;protected;0;4;;@Override protected String selectAllString() {     return SELECT_ALL_STRING. }
