commented;modifiers;parameterAmount;loc;comment;code
false;public;0;14;;@Test public void testSendMatchingMessage() throws Exception {     MockEndpoint mock = getMockEndpoint("mock:result").     mock.expectedMessageCount(1).     List<Map<String, Object>> grid = new ArrayList<>().     Map<String, Object> cells = new LinkedHashMap<>().     cells.put("foo", "bar").     grid.add(cells).     sendBody("direct:start", grid).     assertMockEndpointsSatisfied(). }
false;public;0;5;;public void configure() throws Exception {     from("direct:start").filter().groovy("request.body.get(0).get('foo') == 'bar'").to("mock:result"). }
false;protected;0;9;;protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          public void configure() throws Exception {             from("direct:start").filter().groovy("request.body.get(0).get('foo') == 'bar'").to("mock:result").         }     }. }
