commented;modifiers;parameterAmount;loc;comment;code
true;public;0;3;// @Override ;// @Override public CryptoCmsMarshallerConfiguration getConfiguration() {     return config. }
false;public;1;35;;@Override public void process(Exchange exchange) throws Exception {     // NOPMD all     // exceptions must be caught to react on exception case and re-thrown,     // see code below     OutputStreamBuilder output = OutputStreamBuilder.withExchange(exchange).     OutputStream outStream.     if (config.getToBase64()) {         outStream = new Base64OutputStream(output).     } else {         outStream = output.     }     InputStream body = exchange.getIn().getMandatoryBody(InputStream.class).     // lets setup the out message before we invoke the processing     // so that it can mutate it if necessary     Message out = exchange.getOut().     out.copyFrom(exchange.getIn()).     try {         try {             marshalInternal(body, outStream, exchange).         } finally {             // base64 stream must be closed,             IOHelper.close(outStream).         // before we fetch the bytes         }         setBodyAndHeader(out, output.build()).     } catch (Throwable e) {         // remove OUT message, as an exception occurred         exchange.setOut(null).         throw e.     } }
true;protected;2;3;/**  * Intended for overwriting in order to set headers and body for the out  * message.  */ ;/**  * Intended for overwriting in order to set headers and body for the out  * message.  */ protected void setBodyAndHeader(Message out, Object encodedDataObject) {     out.setBody(encodedDataObject). }
true;protected,abstract;3;1;// NOPMD ;// NOPMD protected abstract void marshalInternal(InputStream is, OutputStream os, Exchange exchange) throws Exception.
