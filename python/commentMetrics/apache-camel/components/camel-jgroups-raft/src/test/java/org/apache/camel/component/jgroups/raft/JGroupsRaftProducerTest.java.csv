commented;modifiers;parameterAmount;loc;comment;code
false;public;0;6;;@Override public void configure() throws Exception {     from("direct:start").to(CONFIGURED_ENDPOINT_URI).     from("direct:start2").to(CONFIGURED_ENDPOINT_URI2).     from("direct:start3").to(CONFIGURED_ENDPOINT_URI3). }
false;protected;0;11;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").to(CONFIGURED_ENDPOINT_URI).             from("direct:start2").to(CONFIGURED_ENDPOINT_URI2).             from("direct:start3").to(CONFIGURED_ENDPOINT_URI3).         }     }. }
false;public;0;21;;@Test public void shouldSendBody() throws Exception {     JGroupsRaftEndpoint endpoint = getMandatoryEndpoint(CONFIGURED_ENDPOINT_URI, JGroupsRaftEndpoint.class).     JGroupsRaftEndpoint endpoint2 = getMandatoryEndpoint(CONFIGURED_ENDPOINT_URI2, JGroupsRaftEndpoint.class).     JGroupsRaftEndpoint endpoint3 = getMandatoryEndpoint(CONFIGURED_ENDPOINT_URI3, JGroupsRaftEndpoint.class).     waitForLeader(5, endpoint.getResolvedRaftHandle(), endpoint2.getResolvedRaftHandle(), endpoint3.getResolvedRaftHandle()).     Processor processor = exchange -> exchange.getIn().setBody(MESSAGE.getBytes()).     Exchange res = template.request("direct:start", processor).     Exchange res2 = template.request("direct:start2", processor).     Exchange res3 = template.request("direct:start3", processor).     assertNotNull(res.getIn().getBody()).     checkHeaders(res).     assertNotNull(res2.getIn().getBody()).     checkHeaders(res2).     assertNotNull(res3.getIn().getBody()).     checkHeaders(res3). }
