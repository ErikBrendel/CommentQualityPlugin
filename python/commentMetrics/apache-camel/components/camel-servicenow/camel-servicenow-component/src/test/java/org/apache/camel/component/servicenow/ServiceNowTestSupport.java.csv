commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;9;;@Override protected CamelContext createCamelContext() throws Exception {     CamelContext context = super.createCamelContext().     if (setUpComponent) {         configureServicenowComponent(context).     }     return context. }
false;protected;0;10;;protected Map<String, Object> getParameters() {     HashMap<String, Object> parameters = new HashMap<>().     parameters.put("instanceName", getSystemPropertyOrEnvVar("servicenow.instance")).     parameters.put("userName", getSystemPropertyOrEnvVar("servicenow.username")).     parameters.put("password", getSystemPropertyOrEnvVar("servicenow.password")).     parameters.put("oauthClientId", getSystemPropertyOrEnvVar("servicenow.oauth2.client.id")).     parameters.put("oauthClientSecret", getSystemPropertyOrEnvVar("servicenow.oauth2.client.secret")).     return parameters. }
false;public;1;19;;public void configureServicenowComponent(CamelContext camelContext) throws Exception {     String userName = getSystemPropertyOrEnvVar("servicenow.username").     String password = getSystemPropertyOrEnvVar("servicenow.password").     String oauthClientId = getSystemPropertyOrEnvVar("servicenow.oauth2.client.id").     String oauthClientSecret = getSystemPropertyOrEnvVar("servicenow.oauth2.client.secret").     if (ObjectHelper.isNotEmpty(userName) && ObjectHelper.isNotEmpty(password)) {         ServiceNowComponent component = new ServiceNowComponent().         component.setUserName(userName).         component.setPassword(password).         if (ObjectHelper.isNotEmpty(oauthClientId) && ObjectHelper.isNotEmpty(oauthClientSecret)) {             component.setOauthClientId(oauthClientId).             component.setOauthClientSecret(oauthClientSecret).         }         camelContext.addComponent("servicenow", component).     } }
false;public,static;1;9;;public static String getSystemPropertyOrEnvVar(String systemProperty) {     String answer = System.getProperty(systemProperty).     if (ObjectHelper.isEmpty(answer)) {         String envProperty = systemProperty.toUpperCase().replaceAll("[.-]", "_").         answer = System.getenv(envProperty).     }     return answer. }
false;protected,static;0;3;;protected static KVBuilder kvBuilder() {     return new KVBuilder(new HashMap<>()). }
false;protected,static;1;3;;protected static KVBuilder kvBuilder(Map<String, Object> headers) {     return new KVBuilder(headers). }
false;public;2;4;;public KVBuilder put(String key, Object val) {     headers.put(key, val).     return this. }
false;public;2;4;;public KVBuilder put(ServiceNowParam key, Object val) {     headers.put(key.getHeader(), val).     return this. }
false;public;0;3;;public Map<String, Object> build() {     return Collections.unmodifiableMap(this.headers). }
