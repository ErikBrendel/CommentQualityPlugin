commented;modifiers;parameterAmount;loc;comment;code
true;private;1;35;/*      * This method retrieves a list of catalogs to which the user has access or      * a single one if sys_id is defined.      *      * Method:      * - GET      *      * URL Format:      * - /sn_sc/servicecatalog/items      * - /sn_sc/servicecatalog/items/{sys_id}      */ ;/*      * This method retrieves a list of catalogs to which the user has access or      * a single one if sys_id is defined.      *      * Method:      * - GET      *      * URL Format:      * - /sn_sc/servicecatalog/items      * - /sn_sc/servicecatalog/items/{sys_id}      */ private void retrieveItems(Exchange exchange) throws Exception {     final Message in = exchange.getIn().     final Class<?> responseModel = getResponseModel(in).     final String sysId = getSysID(in).     final String apiVersion = getApiVersion(in).     Response response = ObjectHelper.isEmpty(sysId) ? client.reset().types(MediaType.APPLICATION_JSON_TYPE).path("sn_sc").path(apiVersion).path("servicecatalog").path("items").query(ServiceNowParams.SYSPARM_CATEGORY, in).query(ServiceNowParams.SYSPARM_TYPE, in).query(ServiceNowParams.SYSPARM_LIMIT, in).query(ServiceNowParams.SYSPARM_TEXT, in).query(ServiceNowParams.SYSPARM_OFFSET, in).query(ServiceNowParams.SYSPARM_CATALOG, in).query(ServiceNowParams.SYSPARM_VIEW, in).query(responseModel).invoke(HttpMethod.GET) : client.reset().types(MediaType.APPLICATION_JSON_TYPE).path("sn_sc").path(apiVersion).path("items").path("items").path(sysId).query(ServiceNowParams.SYSPARM_VIEW, in).query(responseModel).invoke(HttpMethod.GET).     setBodyAndHeaders(in, responseModel, response). }
true;private;1;20;/*      * This method retrieves a list of items based on the needs described for an      * order guide.      *      * Method:      * - POST      *      * URL Format:      * - /sn_sc/servicecatalog/items/{sys_id}/submit_guide      */ ;/*      * This method retrieves a list of items based on the needs described for an      * order guide.      *      * Method:      * - POST      *      * URL Format:      * - /sn_sc/servicecatalog/items/{sys_id}/submit_guide      */ private void submitItemGuide(Exchange exchange) throws Exception {     final Message in = exchange.getIn().     final Class<?> responseModel = getResponseModel(in).     final String sysId = getSysID(in).     final String apiVersion = getApiVersion(in).     Response response = client.reset().types(MediaType.APPLICATION_JSON_TYPE).path("sn_sc").path(apiVersion).path("servicecatalog").path("items").path(ObjectHelper.notNull(sysId, "sysId")).path("submit_guide").query(ServiceNowParams.SYSPARM_VIEW, in).query(responseModel).invoke(HttpMethod.POST, in.getMandatoryBody()).     setBodyAndHeaders(in, responseModel, response). }
true;private;1;19;/*      * This method retrieves an array of contents requested for checkout.      *      * Method:      * - POST      *      * URL Format:      * - /sn_sc/servicecatalog/items/{sys_id}/checkout_guide      */ ;/*      * This method retrieves an array of contents requested for checkout.      *      * Method:      * - POST      *      * URL Format:      * - /sn_sc/servicecatalog/items/{sys_id}/checkout_guide      */ private void checkoutItemGuide(Exchange exchange) throws Exception {     final Message in = exchange.getIn().     final Class<?> responseModel = getResponseModel(in).     final String sysId = getSysID(in).     final String apiVersion = getApiVersion(in).     Response response = client.reset().types(MediaType.APPLICATION_JSON_TYPE).path("sn_sc").path(apiVersion).path("servicecatalog").path("items").path(ObjectHelper.notNull(sysId, "sysId")).path("submit_guide").query(responseModel).invoke(HttpMethod.POST, in.getMandatoryBody()).     setBodyAndHeaders(in, responseModel, response). }
true;private;1;19;/*      * This method adds an item to the cart of the current user.      *      * Method:      * - POST      *      * URL Format:      * - /sn_sc/servicecatalog/items/{sys_id}/add_to_cart      */ ;/*      * This method adds an item to the cart of the current user.      *      * Method:      * - POST      *      * URL Format:      * - /sn_sc/servicecatalog/items/{sys_id}/add_to_cart      */ private void addItemToCart(Exchange exchange) throws Exception {     final Message in = exchange.getIn().     final Class<?> responseModel = getResponseModel(in).     final String sysId = getSysID(in).     final String apiVersion = getApiVersion(in).     Response response = client.reset().types(MediaType.APPLICATION_JSON_TYPE).path("sn_sc").path(apiVersion).path("servicecatalog").path("items").path(ObjectHelper.notNull(sysId, "sysId")).path("add_to_cart").query(responseModel).invoke(HttpMethod.POST).     setBodyAndHeaders(in, responseModel, response). }
true;private;1;20;/*      * This method creates a record and returns the Table API relative path and      * redirect url to access the created record.      *      * Method:      * - POST      *      * URL Format:      * - /sn_sc/servicecatalog/items/{sys_id}/submit_producer      */ ;/*      * This method creates a record and returns the Table API relative path and      * redirect url to access the created record.      *      * Method:      * - POST      *      * URL Format:      * - /sn_sc/servicecatalog/items/{sys_id}/submit_producer      */ private void submitItemProducer(Exchange exchange) throws Exception {     final Message in = exchange.getIn().     final Class<?> responseModel = getResponseModel(in).     final String sysId = getSysID(in).     final String apiVersion = getApiVersion(in).     Response response = client.reset().types(MediaType.APPLICATION_JSON_TYPE).path("sn_sc").path(apiVersion).path("servicecatalog").path("items").path(ObjectHelper.notNull(sysId, "sysId")).path("submit_producer").query(ServiceNowParams.SYSPARM_VIEW, in).query(responseModel).invoke(HttpMethod.POST, in.getMandatoryBody()).     setBodyAndHeaders(in, responseModel, response). }
