commented;modifiers;parameterAmount;loc;comment;code
false;protected;7;13;;@Override protected void doProcess(Exchange exchange, Class<?> requestModel, Class<?> responseModel, String action, String apiVersion, String tableName, String sysId) throws Exception {     Response response.     if (ObjectHelper.equal(ServiceNowConstants.ACTION_RETRIEVE, action, true)) {         response = retrieveRecord(exchange.getIn(), requestModel, responseModel, apiVersion, tableName, sysId).     } else if (ObjectHelper.equal(ServiceNowConstants.ACTION_CREATE, action, true)) {         response = createRecord(exchange.getIn(), requestModel, responseModel, apiVersion, tableName).     } else {         throw new IllegalArgumentException("Unknown action " + action).     }     setBodyAndHeaders(exchange.getIn(), responseModel, response). }
true;private;6;11;/*      * GET      * https://instance.service-now.com/api/now/import/{tableName}/{sys_id}      */ ;/*      * GET      * https://instance.service-now.com/api/now/import/{tableName}/{sys_id}      */ private Response retrieveRecord(Message in, Class<?> requestModel, Class<?> responseModel, String apiVersion, String tableName, String sysId) throws Exception {     return client.reset().types(MediaType.APPLICATION_JSON_TYPE).path("now").path(apiVersion).path("import").path(tableName).path(ObjectHelper.notNull(sysId, "sysId")).query(responseModel).invoke(HttpMethod.GET). }
true;private;5;16;/*      * POST      * https://instance.service-now.com/api/now/import/{tableName}      */ ;/*      * POST      * https://instance.service-now.com/api/now/import/{tableName}      */ private Response createRecord(Message in, Class<?> requestModel, Class<?> responseModel, String apiVersion, String tableName) throws Exception {     if (in.getHeader(ServiceNowConstants.RETRIEVE_TARGET_RECORD, config::getRetrieveTargetRecordOnImport, Boolean.class)) {         throw new UnsupportedOperationException("RetrieveTargetRecordOnImport is supported from Helsinky").     }     validateBody(in, requestModel).     return client.reset().types(MediaType.APPLICATION_JSON_TYPE).path("now").path(apiVersion).path("import").path(tableName).query(responseModel).invoke(HttpMethod.POST, in.getMandatoryBody()). }
