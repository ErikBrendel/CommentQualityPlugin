# id;timestamp;commentText;codeText;commentWords;codeWords
ServiceNowMetaDataExtension -> private List<String> getObjectHierarchy(MetaContext context) throws Exception;1528365576;Determine the hierarchy of a table by inspecting the super_class attribute.;private List<String> getObjectHierarchy(MetaContext context) throws Exception {_        List<String> hierarchy = new ArrayList<>()__        String query = String.format("name=%s", context.getObjectName())___        while (true) {_            Optional<JsonNode> response = context.getClient().reset()_                .types(MediaType.APPLICATION_JSON_TYPE)_                .path("now")_                .path(context.getConfiguration().getApiVersion())_                .path("table")_                .path("sys_db_object")_                .query("sysparm_exclude_reference_link", "true")_                .query("sysparm_fields", "name%2Csuper_class")_                .query("sysparm_query", query)_                .trasform(HttpMethod.GET, this::findResultNode)___            if (response.isPresent()) {_                final JsonNode node = response.get()__                final JsonNode nameNode = node.findValue("name")__                final JsonNode classNode = node.findValue("super_class")___                if (nameNode != null && classNode != null) {_                    query = String.format("sys_id=%s", classNode.textValue())__                    hierarchy.add(0, nameNode.textValue())__                } else {_                    break__                }_            } else {_                break__            }_        }__        return hierarchy__    };determine,the,hierarchy,of,a,table,by,inspecting,the,attribute;private,list,string,get,object,hierarchy,meta,context,context,throws,exception,list,string,hierarchy,new,array,list,string,query,string,format,name,s,context,get,object,name,while,true,optional,json,node,response,context,get,client,reset,types,media,type,path,now,path,context,get,configuration,get,api,version,path,table,path,query,true,query,name,query,query,trasform,http,method,get,this,find,result,node,if,response,is,present,final,json,node,node,response,get,final,json,node,name,node,node,find,value,name,final,json,node,class,node,node,find,value,if,name,node,null,class,node,null,query,string,format,s,class,node,text,value,hierarchy,add,0,name,node,text,value,else,break,else,break,return,hierarchy
ServiceNowMetaDataExtension -> private List<String> getObjectHierarchy(MetaContext context) throws Exception;1528380194;Determine the hierarchy of a table by inspecting the super_class attribute.;private List<String> getObjectHierarchy(MetaContext context) throws Exception {_        List<String> hierarchy = new ArrayList<>()__        String query = String.format("name=%s", context.getObjectName())___        while (true) {_            Optional<JsonNode> response = context.getClient().reset()_                .types(MediaType.APPLICATION_JSON_TYPE)_                .path("now")_                .path(context.getConfiguration().getApiVersion())_                .path("table")_                .path("sys_db_object")_                .query("sysparm_exclude_reference_link", "true")_                .query("sysparm_fields", "name%2Csuper_class")_                .query("sysparm_query", query)_                .trasform(HttpMethod.GET, this::findResultNode)___            if (response.isPresent()) {_                final JsonNode node = response.get()__                final JsonNode nameNode = node.findValue("name")__                final JsonNode classNode = node.findValue("super_class")___                if (nameNode != null && classNode != null) {_                    query = String.format("sys_id=%s", classNode.textValue())__                    hierarchy.add(0, nameNode.textValue())__                } else {_                    break__                }_            } else {_                break__            }_        }__        return hierarchy__    };determine,the,hierarchy,of,a,table,by,inspecting,the,attribute;private,list,string,get,object,hierarchy,meta,context,context,throws,exception,list,string,hierarchy,new,array,list,string,query,string,format,name,s,context,get,object,name,while,true,optional,json,node,response,context,get,client,reset,types,media,type,path,now,path,context,get,configuration,get,api,version,path,table,path,query,true,query,name,query,query,trasform,http,method,get,this,find,result,node,if,response,is,present,final,json,node,node,response,get,final,json,node,name,node,node,find,value,name,final,json,node,class,node,node,find,value,if,name,node,null,class,node,null,query,string,format,s,class,node,text,value,hierarchy,add,0,name,node,text,value,else,break,else,break,return,hierarchy
ServiceNowMetaDataExtension -> private List<String> getObjectHierarchy(MetaContext context) throws Exception;1529923498;Determine the hierarchy of a table by inspecting the super_class attribute.;private List<String> getObjectHierarchy(MetaContext context) throws Exception {_        List<String> hierarchy = new ArrayList<>()__        String query = String.format("name=%s", context.getObjectName())___        while (true) {_            Optional<JsonNode> response = context.getClient().reset()_                .types(MediaType.APPLICATION_JSON_TYPE)_                .path("now")_                .path(context.getConfiguration().getApiVersion())_                .path("table")_                .path("sys_db_object")_                .query("sysparm_exclude_reference_link", "true")_                .query("sysparm_fields", "name%2Csuper_class")_                .query("sysparm_query", query)_                .trasform(HttpMethod.GET, this::findResultNode)___            if (response.isPresent()) {_                final JsonNode node = response.get()__                final JsonNode nameNode = node.findValue("name")__                final JsonNode classNode = node.findValue("super_class")___                if (nameNode != null && classNode != null) {_                    query = String.format("sys_id=%s", classNode.textValue())__                    hierarchy.add(0, nameNode.textValue())__                } else {_                    break__                }_            } else {_                break__            }_        }__        return hierarchy__    };determine,the,hierarchy,of,a,table,by,inspecting,the,attribute;private,list,string,get,object,hierarchy,meta,context,context,throws,exception,list,string,hierarchy,new,array,list,string,query,string,format,name,s,context,get,object,name,while,true,optional,json,node,response,context,get,client,reset,types,media,type,path,now,path,context,get,configuration,get,api,version,path,table,path,query,true,query,name,query,query,trasform,http,method,get,this,find,result,node,if,response,is,present,final,json,node,node,response,get,final,json,node,name,node,node,find,value,name,final,json,node,class,node,node,find,value,if,name,node,null,class,node,null,query,string,format,s,class,node,text,value,hierarchy,add,0,name,node,text,value,else,break,else,break,return,hierarchy
ServiceNowMetaDataExtension -> private List<String> getObjectHierarchy(MetaContext context) throws Exception;1533066154;Determine the hierarchy of a table by inspecting the super_class attribute.;private List<String> getObjectHierarchy(MetaContext context) throws Exception {_        List<String> hierarchy = new ArrayList<>()__        String query = String.format("name=%s", context.getObjectName())___        while (true) {_            Optional<JsonNode> response = context.getClient().reset()_                .types(MediaType.APPLICATION_JSON_TYPE)_                .path("now")_                .path(context.getConfiguration().getApiVersion())_                .path("table")_                .path("sys_db_object")_                .query("sysparm_exclude_reference_link", "true")_                .query("sysparm_fields", "name%2Csuper_class")_                .query("sysparm_query", query)_                .trasform(HttpMethod.GET, this::findResultNode)___            if (response.isPresent()) {_                final JsonNode node = response.get()__                final JsonNode nameNode = node.findValue("name")__                final JsonNode classNode = node.findValue("super_class")___                if (nameNode != null && classNode != null) {_                    query = String.format("sys_id=%s", classNode.textValue())__                    hierarchy.add(0, nameNode.textValue())__                } else {_                    break__                }_            } else {_                break__            }_        }__        return hierarchy__    };determine,the,hierarchy,of,a,table,by,inspecting,the,attribute;private,list,string,get,object,hierarchy,meta,context,context,throws,exception,list,string,hierarchy,new,array,list,string,query,string,format,name,s,context,get,object,name,while,true,optional,json,node,response,context,get,client,reset,types,media,type,path,now,path,context,get,configuration,get,api,version,path,table,path,query,true,query,name,query,query,trasform,http,method,get,this,find,result,node,if,response,is,present,final,json,node,node,response,get,final,json,node,name,node,node,find,value,name,final,json,node,class,node,node,find,value,if,name,node,null,class,node,null,query,string,format,s,class,node,text,value,hierarchy,add,0,name,node,text,value,else,break,else,break,return,hierarchy
ServiceNowMetaDataExtension -> private List<String> getObjectHierarchy(MetaContext context) throws Exception;1540108163;Determine the hierarchy of a table by inspecting the super_class attribute.;private List<String> getObjectHierarchy(MetaContext context) throws Exception {_        List<String> hierarchy = new ArrayList<>()__        String query = String.format("name=%s", context.getObjectName())___        while (true) {_            Optional<JsonNode> response = context.getClient().reset()_                .types(MediaType.APPLICATION_JSON_TYPE)_                .path("now")_                .path(context.getConfiguration().getApiVersion())_                .path("table")_                .path("sys_db_object")_                .query("sysparm_exclude_reference_link", "true")_                .query("sysparm_fields", "name%2Csuper_class")_                .query("sysparm_query", query)_                .trasform(HttpMethod.GET, this::findResultNode)___            if (response.isPresent()) {_                final JsonNode node = response.get()__                final JsonNode nameNode = node.findValue("name")__                final JsonNode classNode = node.findValue("super_class")___                if (nameNode != null && classNode != null) {_                    query = String.format("sys_id=%s", classNode.textValue())__                    hierarchy.add(0, nameNode.textValue())__                } else {_                    break__                }_            } else {_                break__            }_        }__        return hierarchy__    };determine,the,hierarchy,of,a,table,by,inspecting,the,attribute;private,list,string,get,object,hierarchy,meta,context,context,throws,exception,list,string,hierarchy,new,array,list,string,query,string,format,name,s,context,get,object,name,while,true,optional,json,node,response,context,get,client,reset,types,media,type,path,now,path,context,get,configuration,get,api,version,path,table,path,query,true,query,name,query,query,trasform,http,method,get,this,find,result,node,if,response,is,present,final,json,node,node,response,get,final,json,node,name,node,node,find,value,name,final,json,node,class,node,node,find,value,if,name,node,null,class,node,null,query,string,format,s,class,node,text,value,hierarchy,add,0,name,node,text,value,else,break,else,break,return,hierarchy
