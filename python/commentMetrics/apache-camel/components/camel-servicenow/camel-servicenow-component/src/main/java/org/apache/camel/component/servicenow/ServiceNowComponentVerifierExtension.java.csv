commented;modifiers;parameterAmount;loc;comment;code
false;protected;1;9;;// ********************************* // Parameters validation // ********************************* @Override protected Result verifyParameters(Map<String, Object> parameters) {     ResultBuilder builder = ResultBuilder.withStatusAndScope(Result.Status.OK, Scope.PARAMETERS).     // Validate using the catalog     super.verifyParametersAgainstCatalog(builder, parameters).     return builder.build(). }
false;protected;1;47;;// ********************************* // Connectivity validation // ********************************* @Override protected Result verifyConnectivity(Map<String, Object> parameters) {     // Default is success     ResultBuilder builder = ResultBuilder.withStatusAndScope(Result.Status.OK, Scope.CONNECTIVITY).     try {         final ServiceNowConfiguration configuration = getServiceNowConfiguration(parameters).         final ServiceNowClient client = getServiceNowClient(configuration, parameters).         final String tableName = ObjectHelper.supplyIfEmpty(configuration.getTable(), () -> "incident").         client.reset().types(MediaType.APPLICATION_JSON_TYPE).path("now").path(configuration.getApiVersion()).path("table").path(tableName).query(ServiceNowParams.SYSPARM_LIMIT.getId(), 1L).query(ServiceNowParams.SYSPARM_FIELDS.getId(), "sys_id").invoke(HttpMethod.GET).     } catch (NoSuchOptionException e) {         builder.error(ResultErrorBuilder.withMissingOption(e.getOptionName()).build()).     } catch (ServiceNowException e) {         ResultErrorBuilder errorBuilder = ResultErrorBuilder.withException(e).detail(VerificationError.HttpAttribute.HTTP_CODE, e.getCode()).detail("servicenow_error_message", e.getMessage()).detail("servicenow_error_status", e.getStatus()).detail("servicenow_error_detail", e.getDetail()).         if (e.getCode() == 401) {             errorBuilder.code(VerificationError.StandardCode.AUTHENTICATION).             errorBuilder.parameterKey("userName").             errorBuilder.parameterKey("password").             errorBuilder.parameterKey("oauthClientId").             errorBuilder.parameterKey("oauthClientSecret").         }         builder.error(errorBuilder.build()).     } catch (Exception e) {         builder.error(ResultErrorBuilder.withException(e).build()).     }     return builder.build(). }
false;private;1;12;;// ********************************* // Helpers // ********************************* private String getInstanceName(Map<String, Object> parameters) throws Exception {     String instanceName = (String) parameters.get("instanceName").     if (ObjectHelper.isEmpty(instanceName) && ObjectHelper.isNotEmpty(getComponent())) {         instanceName = getComponent(ServiceNowComponent.class).getInstanceName().     }     if (ObjectHelper.isEmpty(instanceName)) {         throw new NoSuchOptionException("instanceName").     }     return instanceName. }
false;private;2;28;;private ServiceNowClient getServiceNowClient(ServiceNowConfiguration configuration, Map<String, Object> parameters) throws Exception {     ServiceNowClient client = null.     // check if a client has been supplied to the parameters map     for (Object value : parameters.values()) {         if (value instanceof ServiceNowClient) {             client = ServiceNowClient.class.cast(value).             break.         }     }     // if no client is provided     if (ObjectHelper.isEmpty(client)) {         final String instanceName = getInstanceName(parameters).         // Configure Api and OAuthToken ULRs using instanceName         if (!configuration.hasApiUrl()) {             configuration.setApiUrl(String.format("https://%s.service-now.com/api", instanceName)).         }         if (!configuration.hasOauthTokenUrl()) {             configuration.setOauthTokenUrl(String.format("https://%s.service-now.com/oauth_token.do", instanceName)).         }         client = new ServiceNowClient(getCamelContext(), configuration).     }     return client. }
false;private;1;27;;private ServiceNowConfiguration getServiceNowConfiguration(Map<String, Object> parameters) throws Exception {     ServiceNowConfiguration configuration = null.     // check if a configuration has been supplied to the parameters map     for (Object value : parameters.values()) {         if (value instanceof ServiceNowConfiguration) {             configuration = ServiceNowConfiguration.class.cast(value).             break.         }     }     // if no configuration is provided     if (ObjectHelper.isEmpty(configuration)) {         if (ObjectHelper.isNotEmpty(getComponent())) {             configuration = getComponent(ServiceNowComponent.class).getConfiguration().copy().         } else {             configuration = new ServiceNowConfiguration().         }         // bind parameters to ServiceNow Configuration only if configuration         // does not come from the parameters map as in that case we expect         // it to be pre-configured.         setProperties(configuration, parameters).     }     return configuration. }
