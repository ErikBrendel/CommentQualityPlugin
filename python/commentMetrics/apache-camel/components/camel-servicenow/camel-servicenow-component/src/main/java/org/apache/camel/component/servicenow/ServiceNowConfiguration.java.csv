commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public String getUserName() {     return userName. }
false;public;0;3;;public String getApiUrl() {     return apiUrl. }
true;public;1;3;/**  * The ServiceNow REST API url  */ ;/**  * The ServiceNow REST API url  */ public void setApiUrl(String apiUrl) {     this.apiUrl = apiUrl. }
false;public;0;3;;public boolean hasApiUrl() {     return apiUrl != null. }
false;public;0;3;;public String getApiVersion() {     return apiVersion. }
true;public;1;3;/**  * The ServiceNow REST API version, default latest  */ ;/**  * The ServiceNow REST API version, default latest  */ public void setApiVersion(String apiVersion) {     this.apiVersion = apiVersion. }
true;public;1;3;/**  * ServiceNow user account name, MUST be provided  */ ;/**  * ServiceNow user account name, MUST be provided  */ public void setUserName(String userName) {     this.userName = userName. }
false;public;0;3;;public String getPassword() {     return password. }
true;public;1;3;/**  * ServiceNow account password, MUST be provided  */ ;/**  * ServiceNow account password, MUST be provided  */ public void setPassword(String password) {     this.password = password. }
false;public;0;3;;public String getOauthClientId() {     return oauthClientId. }
true;public;1;3;/**  * OAuth2 ClientID  */ ;/**  * OAuth2 ClientID  */ public void setOauthClientId(String oauthClientId) {     this.oauthClientId = oauthClientId. }
false;public;0;3;;public String getOauthClientSecret() {     return oauthClientSecret. }
true;public;1;3;/**  * OAuth2 ClientSecret  */ ;/**  * OAuth2 ClientSecret  */ public void setOauthClientSecret(String oauthClientSecret) {     this.oauthClientSecret = oauthClientSecret. }
false;public;0;3;;public String getOauthTokenUrl() {     return oauthTokenUrl. }
false;public;0;3;;public boolean hasOauthTokenUrl() {     return oauthTokenUrl != null. }
true;public;1;3;/**  * OAuth token Url  */ ;/**  * OAuth token Url  */ public void setOauthTokenUrl(String oauthTokenUrl) {     this.oauthTokenUrl = oauthTokenUrl. }
false;public;0;4;;public boolean hasBasicAuthentication() {     return ObjectHelper.isNotEmpty(userName) && ObjectHelper.isNotEmpty(password). }
false;public;0;6;;public boolean hasOAuthAuthentication() {     return ObjectHelper.isNotEmpty(userName) && ObjectHelper.isNotEmpty(password) && ObjectHelper.isNotEmpty(oauthClientId) && ObjectHelper.isNotEmpty(oauthClientSecret). }
false;public;0;3;;public String getResource() {     return resource. }
true;public;1;3;/**  * The default resource, can be overridden by header CamelServiceNowResource  */ ;/**  * The default resource, can be overridden by header CamelServiceNowResource  */ public void setResource(String resource) {     this.resource = resource. }
false;public;0;3;;public String getTable() {     return table. }
true;public;1;3;/**  * The default table, can be overridden by header CamelServiceNowTable  */ ;/**  * The default table, can be overridden by header CamelServiceNowTable  */ public void setTable(String table) {     this.table = table. }
false;public;0;3;;public Boolean getExcludeReferenceLink() {     return excludeReferenceLink. }
true;public;1;3;/**  * True to exclude Table API links for reference fields (default: false)  */ ;/**  * True to exclude Table API links for reference fields (default: false)  */ public void setExcludeReferenceLink(Boolean excludeReferenceLink) {     this.excludeReferenceLink = excludeReferenceLink. }
false;public;0;3;;public Boolean getSuppressAutoSysField() {     return suppressAutoSysField. }
true;public;1;3;/**  * True to suppress auto generation of system fields (default: false)  */ ;/**  * True to suppress auto generation of system fields (default: false)  */ public void setSuppressAutoSysField(Boolean suppressAutoSysField) {     this.suppressAutoSysField = suppressAutoSysField. }
false;public;0;3;;public Boolean getSuppressPaginationHeader() {     return suppressPaginationHeader. }
true;public;1;3;/**  * Set this value to true to remove the Link header from the response. The  * Link header allows you to request additional pages of data when the number  * of records matching your query exceeds the query limit  */ ;/**  * Set this value to true to remove the Link header from the response. The  * Link header allows you to request additional pages of data when the number  * of records matching your query exceeds the query limit  */ public void setSuppressPaginationHeader(Boolean suppressPaginationHeader) {     this.suppressPaginationHeader = suppressPaginationHeader. }
false;public;0;3;;public Boolean getIncludeScores() {     return includeScores. }
true;public;1;3;/**  * Set this parameter to true to return all scores for a scorecard. If a value  * is not specified, this parameter defaults to false and returns only the most  * recent score value.  */ ;/**  * Set this parameter to true to return all scores for a scorecard. If a value  * is not specified, this parameter defaults to false and returns only the most  * recent score value.  */ public void setIncludeScores(Boolean includeScores) {     this.includeScores = includeScores. }
false;public;0;3;;public Boolean getIncludeAggregates() {     return includeAggregates. }
true;public;1;3;/**  * Set this parameter to true to always return all available aggregates for  * an indicator, including when an aggregate has already been applied. If a  * value is not specified, this parameter defaults to false and returns no  * aggregates.  */ ;/**  * Set this parameter to true to always return all available aggregates for  * an indicator, including when an aggregate has already been applied. If a  * value is not specified, this parameter defaults to false and returns no  * aggregates.  */ public void setIncludeAggregates(Boolean includeAggregates) {     this.includeAggregates = includeAggregates. }
false;public;0;3;;public Boolean getIncludeAvailableBreakdowns() {     return includeAvailableBreakdowns. }
true;public;1;3;/**  * Set this parameter to true to return all available breakdowns for an indicator.  * If a value is not specified, this parameter defaults to false and returns  * no breakdowns.  */ ;/**  * Set this parameter to true to return all available breakdowns for an indicator.  * If a value is not specified, this parameter defaults to false and returns  * no breakdowns.  */ public void setIncludeAvailableBreakdowns(Boolean includeAvailableBreakdowns) {     this.includeAvailableBreakdowns = includeAvailableBreakdowns. }
false;public;0;3;;public Boolean getIncludeAvailableAggregates() {     return includeAvailableAggregates. }
true;public;1;3;/**  * Set this parameter to true to return all available aggregates for an indicator  * when no aggregate has been applied. If a value is not specified, this parameter  * defaults to false and returns no aggregates.  */ ;/**  * Set this parameter to true to return all available aggregates for an indicator  * when no aggregate has been applied. If a value is not specified, this parameter  * defaults to false and returns no aggregates.  */ public void setIncludeAvailableAggregates(Boolean includeAvailableAggregates) {     this.includeAvailableAggregates = includeAvailableAggregates. }
false;public;0;3;;public Boolean getIncludeScoreNotes() {     return includeScoreNotes. }
true;public;1;3;/**  * Set this parameter to true to return all notes associated with the score.  * The note element contains the note text as well as the author and timestamp  * when the note was added.  */ ;/**  * Set this parameter to true to return all notes associated with the score.  * The note element contains the note text as well as the author and timestamp  * when the note was added.  */ public void setIncludeScoreNotes(Boolean includeScoreNotes) {     this.includeScoreNotes = includeScoreNotes. }
false;public;0;3;;public Boolean getFavorites() {     return favorites. }
true;public;1;3;/**  * Set this parameter to true to return only scorecards that are favorites of  * the querying user.  */ ;/**  * Set this parameter to true to return only scorecards that are favorites of  * the querying user.  */ public void setFavorites(Boolean favorites) {     this.favorites = favorites. }
false;public;0;3;;public Boolean getRetrieveTargetRecordOnImport() {     return retrieveTargetRecordOnImport. }
true;public;1;3;/**  * Set this parameter to true to retrieve the target record when using import  * set api. The import set result is then replaced by the target record  */ ;/**  * Set this parameter to true to retrieve the target record when using import  * set api. The import set result is then replaced by the target record  */ public void setRetrieveTargetRecordOnImport(Boolean retrieveTargetRecordOnImport) {     this.retrieveTargetRecordOnImport = retrieveTargetRecordOnImport. }
false;public;0;3;;public Boolean getKey() {     return key. }
true;public;1;3;/**  * Set this parameter to true to return only scorecards for key indicators.  */ ;/**  * Set this parameter to true to return only scorecards for key indicators.  */ public void setKey(Boolean key) {     this.key = key. }
false;public;0;3;;public Boolean getTarget() {     return target. }
true;public;1;3;/**  * Set this parameter to true to return only scorecards that have a target.  */ ;/**  * Set this parameter to true to return only scorecards that have a target.  */ public void setTarget(Boolean target) {     this.target = target. }
false;public;0;3;;public String getDisplay() {     return display. }
true;public;1;3;/**  * Set this parameter to true to return only scorecards where the indicator  * Display field is selected. Set this parameter to all to return scorecards  * with any Display field value. This parameter is true by default.  */ ;/**  * Set this parameter to true to return only scorecards where the indicator  * Display field is selected. Set this parameter to all to return scorecards  * with any Display field value. This parameter is true by default.  */ public void setDisplay(String display) {     this.display = display. }
false;public;0;3;;public Integer getPerPage() {     return perPage. }
true;public;1;3;/**  * Enter the maximum number of scorecards each query can return. By default  * this value is 10, and the maximum is 100.  */ ;/**  * Enter the maximum number of scorecards each query can return. By default  * this value is 10, and the maximum is 100.  */ public void setPerPage(Integer perPage) {     this.perPage = perPage. }
false;public;0;3;;public String getSortBy() {     return sortBy. }
true;public;1;3;/**  * Specify the value to use when sorting results. By default, queries sort  * records by value.  */ ;/**  * Specify the value to use when sorting results. By default, queries sort  * records by value.  */ public void setSortBy(String sortBy) {     this.sortBy = sortBy. }
false;public;0;3;;public String getSortDir() {     return sortDir. }
true;public;1;3;/**  * Specify the sort direction, ascending or descending. By default, queries  * sort records in descending order. Use sysparm_sortdir=asc to sort in  * ascending order.  */ ;/**  * Specify the sort direction, ascending or descending. By default, queries  * sort records in descending order. Use sysparm_sortdir=asc to sort in  * ascending order.  */ public void setSortDir(String sortDir) {     this.sortDir = sortDir. }
false;public;0;3;;public String getDisplayValue() {     return displayValue. }
true;public;1;3;/**  * Return the display value (true), actual value (false), or both (all) for  * reference fields (default: false)  */ ;/**  * Return the display value (true), actual value (false), or both (all) for  * reference fields (default: false)  */ public void setDisplayValue(String displayValue) {     this.displayValue = displayValue. }
false;public;0;3;;public Boolean getInputDisplayValue() {     return inputDisplayValue. }
true;public;1;3;/**  * True to set raw value of input fields (default: false)  */ ;/**  * True to set raw value of input fields (default: false)  */ public void setInputDisplayValue(Boolean inputDisplayValue) {     this.inputDisplayValue = inputDisplayValue. }
false;public;0;3;;public Map<String, Class<?>> getRequestModels() {     return requestModels. }
true;public;1;3;/**  * Sets Jackson's ObjectMapper to use for request/reply  */ ;/**  * Sets Jackson's ObjectMapper to use for request/reply  */ public void setMapper(ObjectMapper mapper) {     this.mapper = mapper. }
false;public;0;3;;public ObjectMapper getMapper() {     return mapper. }
false;public;0;29;;public ObjectMapper getOrCreateMapper() {     if (mapper == null) {         final DateTimeFormatter dateFormat = DateTimeFormatter.ofPattern(getDateFormat()).         final DateTimeFormatter timeFormat = DateTimeFormatter.ofPattern(getTimeFormat()).         final DateTimeFormatter dateTimeFormat = DateTimeFormatter.ofPattern(getDateTimeFormat()).         this.mapper = new ObjectMapper().registerModule(new Jdk8Module()).registerModule(new JavaTimeModule().addSerializer(LocalDate.class, new LocalDateSerializer(dateFormat)).addDeserializer(LocalDate.class, new LocalDateDeserializer(dateFormat)).addSerializer(LocalTime.class, new LocalTimeSerializer(timeFormat)).addDeserializer(LocalTime.class, new LocalTimeDeserializer(timeFormat)).addSerializer(LocalDateTime.class, new LocalDateTimeSerializer(dateTimeFormat)).addDeserializer(LocalDateTime.class, new LocalDateTimeDeserializer(dateTimeFormat))).configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false).configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false).setSerializationInclusion(JsonInclude.Include.NON_NULL).     }     return mapper. }
false;public;0;3;;public boolean hasMapper() {     return mapper != null. }
true;public;1;3;/**  * The ServiceNow release to target, default to Helsinki  *  * See https://docs.servicenow.com  */ ;/**  * The ServiceNow release to target, default to Helsinki  *  * See https://docs.servicenow.com  */ public void setRelease(ServiceNowRelease release) {     this.release = release. }
false;public;0;3;;public ServiceNowRelease getRelease() {     return release. }
false;public;0;3;;public Boolean getTopLevelOnly() {     return topLevelOnly. }
true;public;1;3;/**  * Gets only those categories whose parent is a catalog.  */ ;/**  * Gets only those categories whose parent is a catalog.  */ public void setTopLevelOnly(Boolean topLevelOnly) {     this.topLevelOnly = topLevelOnly. }
false;public;0;3;;public SSLContextParameters getSslContextParameters() {     return sslContextParameters. }
true;public;1;3;/**  * To configure security using SSLContextParameters. See http://camel.apache.org/camel-configuration-utilities.html  */ ;/**  * To configure security using SSLContextParameters. See http://camel.apache.org/camel-configuration-utilities.html  */ public void setSslContextParameters(SSLContextParameters sslContextParameters) {     this.sslContextParameters = sslContextParameters. }
false;public;0;3;;public HTTPClientPolicy getHttpClientPolicy() {     return httpClientPolicy. }
true;public;1;3;/**  * To configure http-client  */ ;/**  * To configure http-client  */ public void setHttpClientPolicy(HTTPClientPolicy httpClientPolicy) {     this.httpClientPolicy = httpClientPolicy. }
false;public;0;3;;public ProxyAuthorizationPolicy getProxyAuthorizationPolicy() {     return proxyAuthorizationPolicy. }
true;public;1;3;/**  * To configure proxy authentication  */ ;/**  * To configure proxy authentication  */ public void setProxyAuthorizationPolicy(ProxyAuthorizationPolicy proxyAuthorizationPolicy) {     this.proxyAuthorizationPolicy = proxyAuthorizationPolicy. }
false;public;0;3;;public String getProxyHost() {     return proxyHost. }
true;public;1;3;/**  * The proxy host name  */ ;/**  * The proxy host name  */ public void setProxyHost(String proxyHost) {     this.proxyHost = proxyHost. }
false;public;0;3;;public Integer getProxyPort() {     return proxyPort. }
true;public;1;3;/**  * The proxy port number  */ ;/**  * The proxy port number  */ public void setProxyPort(Integer proxyPort) {     this.proxyPort = proxyPort. }
false;public;0;3;;public String getProxyUserName() {     return proxyUserName. }
true;public;1;3;/**  * Username for proxy authentication  */ ;/**  * Username for proxy authentication  */ public void setProxyUserName(String proxyUserName) {     this.proxyUserName = proxyUserName. }
false;public;0;3;;public String getProxyPassword() {     return proxyPassword. }
true;public;1;3;/**  * Password for proxy authentication  */ ;/**  * Password for proxy authentication  */ public void setProxyPassword(String proxyPassword) {     this.proxyPassword = proxyPassword. }
false;public;0;3;;public String getDateFormat() {     return dateFormat. }
true;public;1;3;/**  * The date format used for Json serialization/deserialization  */ ;/**  * The date format used for Json serialization/deserialization  */ public void setDateFormat(String dateFormat) {     this.dateFormat = dateFormat. }
false;public;0;3;;public String getTimeFormat() {     return timeFormat. }
true;public;1;3;/**  * The time format used for Json serialization/deserialization  */ ;/**  * The time format used for Json serialization/deserialization  */ public void setTimeFormat(String timeFormat) {     this.timeFormat = timeFormat. }
false;public;0;3;;public String getDateTimeFormat() {     return dateTimeFormat. }
true;public;1;3;/**  * The date-time format used for Json serialization/deserialization  */ ;/**  * The date-time format used for Json serialization/deserialization  */ public void setDateTimeFormat(String dateTimeFormat) {     this.dateTimeFormat = dateTimeFormat. }
false;public;1;4;;// ************************************************* //  // ************************************************* public void setModels(Map<String, Class<?>> models) {     setRequestModels(models).     setResponseModels(models). }
false;public;2;4;;public void addModel(String name, Class<?> type) {     addRequestModel(name, type).     addResponseModel(name, type). }
true;public;1;8;/**  * Defines the request model  */ ;// ************************************************* // Request model // ************************************************* /**  * Defines the request model  */ public void setRequestModels(Map<String, Class<?>> models) {     if (this.requestModels == null) {         this.requestModels = new HashMap<>().     }     this.requestModels.clear().     this.requestModels.putAll(models). }
false;public;2;7;;public void addRequestModel(String name, Class<?> type) {     if (this.requestModels == null) {         this.requestModels = new HashMap<>().     }     this.requestModels.put(name, type). }
false;public;1;3;;public Class<?> getRequestModel(String name) {     return getRequestModel(name, null). }
false;public;2;9;;public Class<?> getRequestModel(String name, Class<?> defaultType) {     Class<?> model = defaultType.     if (this.requestModels != null && this.requestModels.containsKey(name)) {         model = this.requestModels.get(name).     }     return model. }
true;public;1;7;/**  * Defines the response model  */ ;// ************************************************* // Response model // ************************************************* /**  * Defines the response model  */ public void setResponseModels(Map<String, Class<?>> models) {     if (this.responseModels == null) {         this.responseModels = new HashMap<>().     }     this.responseModels.putAll(models). }
false;public;2;8;;public void addResponseModel(String name, Class<?> type) {     if (this.responseModels == null) {         this.responseModels = new HashMap<>().     }     this.responseModels.clear().     this.responseModels.put(name, type). }
false;public;1;3;;public Class<?> getResponseModel(String name) {     return getResponseModel(name, null). }
false;public;2;9;;public Class<?> getResponseModel(String name, Class<?> defaultType) {     Class<?> model = defaultType.     if (this.responseModels != null && this.responseModels.containsKey(name)) {         model = this.responseModels.get(name).     }     return model. }
false;public;0;7;;// ************************************************* //  // ************************************************* public ServiceNowConfiguration copy() {     try {         return (ServiceNowConfiguration) super.clone().     } catch (CloneNotSupportedException e) {         throw new RuntimeCamelException(e).     } }
