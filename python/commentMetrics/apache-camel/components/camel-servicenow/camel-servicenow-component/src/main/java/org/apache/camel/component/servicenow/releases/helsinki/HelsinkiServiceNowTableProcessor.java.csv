commented;modifiers;parameterAmount;loc;comment;code
true;private;1;40;/*      * GET      * https://instance.service-now.com/api/now/table/{tableName}      * https://instance.service-now.com/api/now/table/{tableName}/{sys_id}      */ ;/*      * GET      * https://instance.service-now.com/api/now/table/{tableName}      * https://instance.service-now.com/api/now/table/{tableName}/{sys_id}      */ private void retrieveRecord(Exchange exchange) throws Exception {     final Message in = exchange.getIn().     final String tableName = getTableName(in).     final String apiVersion = getApiVersion(in).     final Class<?> responseModel = getResponseModel(in, tableName).     final String sysId = getSysID(in).     Response response = ObjectHelper.isEmpty(sysId) ? client.reset().types(MediaType.APPLICATION_JSON_TYPE).path("now").path(apiVersion).path("table").path(tableName).query(ServiceNowParams.SYSPARM_QUERY, in).query(ServiceNowParams.SYSPARM_DISPLAY_VALUE, in).query(ServiceNowParams.SYSPARM_EXCLUDE_REFERENCE_LINK, in).query(ServiceNowParams.SYSPARM_SUPPRESS_PAGINATION_HEADER, in).query(ServiceNowParams.SYSPARM_FIELDS, in).query(ServiceNowParams.SYSPARM_LIMIT, in).query(ServiceNowParams.SYSPARM_OFFSET, in).query(ServiceNowParams.SYSPARM_VIEW, in).query(responseModel).invoke(HttpMethod.GET) : client.reset().types(MediaType.APPLICATION_JSON_TYPE).path("now").path(apiVersion).path("table").path(tableName).path(sysId).query(ServiceNowParams.SYSPARM_DISPLAY_VALUE, in).query(ServiceNowParams.SYSPARM_EXCLUDE_REFERENCE_LINK, in).query(ServiceNowParams.SYSPARM_FIELDS, in).query(ServiceNowParams.SYSPARM_VIEW, in).query(responseModel).invoke(HttpMethod.GET).     setBodyAndHeaders(exchange.getIn(), responseModel, response). }
true;private;1;27;/*      * POST      * https://instance.service-now.com/api/now/table/{tableName}      */ ;/*      * POST      * https://instance.service-now.com/api/now/table/{tableName}      */ private void createRecord(Exchange exchange) throws Exception {     final Message in = exchange.getIn().     final String tableName = getTableName(in).     final String apiVersion = getApiVersion(in).     final Class<?> requestModel = getRequestModel(in, tableName).     final Class<?> responseModel = getResponseModel(in, tableName).     final String sysId = getSysID(in).     validateBody(in, requestModel).     Response response = client.reset().types(MediaType.APPLICATION_JSON_TYPE).path("now").path(apiVersion).path("table").path(tableName).query(ServiceNowParams.SYSPARM_DISPLAY_VALUE, in).query(ServiceNowParams.SYSPARM_EXCLUDE_REFERENCE_LINK, in).query(ServiceNowParams.SYSPARM_FIELDS, in).query(ServiceNowParams.SYSPARM_INPUT_DISPLAY_VALUE, in).query(ServiceNowParams.SYSPARM_SUPPRESS_AUTO_SYS_FIELD, in).query(ServiceNowParams.SYSPARM_VIEW, in).query(responseModel).invoke(HttpMethod.POST, in.getMandatoryBody()).     setBodyAndHeaders(exchange.getIn(), responseModel, response). }
true;private;1;28;/*      * PUT      * https://instance.service-now.com/api/now/table/{tableName}/{sys_id}      */ ;/*      * PUT      * https://instance.service-now.com/api/now/table/{tableName}/{sys_id}      */ private void modifyRecord(Exchange exchange) throws Exception {     final Message in = exchange.getIn().     final String tableName = getTableName(in).     final String apiVersion = getApiVersion(in).     final Class<?> requestModel = getRequestModel(in, tableName).     final Class<?> responseModel = getResponseModel(in, tableName).     final String sysId = getSysID(in).     validateBody(in, requestModel).     Response response = client.reset().types(MediaType.APPLICATION_JSON_TYPE).path("now").path(apiVersion).path("table").path(tableName).path(ObjectHelper.notNull(sysId, "sysId")).query(ServiceNowParams.SYSPARM_DISPLAY_VALUE, in).query(ServiceNowParams.SYSPARM_EXCLUDE_REFERENCE_LINK, in).query(ServiceNowParams.SYSPARM_FIELDS, in).query(ServiceNowParams.SYSPARM_INPUT_DISPLAY_VALUE, in).query(ServiceNowParams.SYSPARM_SUPPRESS_AUTO_SYS_FIELD, in).query(ServiceNowParams.SYSPARM_VIEW, in).query(responseModel).invoke(HttpMethod.PUT, in.getMandatoryBody()).     setBodyAndHeaders(exchange.getIn(), responseModel, response). }
true;private;1;19;/*      * DELETE      * https://instance.service-now.com/api/now/table/{tableName}/{sys_id}      */ ;/*      * DELETE      * https://instance.service-now.com/api/now/table/{tableName}/{sys_id}      */ private void deleteRecord(Exchange exchange) throws Exception {     final Message in = exchange.getIn().     final String tableName = getTableName(in).     final String apiVersion = getApiVersion(in).     final Class<?> responseModel = getResponseModel(in, tableName).     final String sysId = getSysID(in).     Response response = client.reset().types(MediaType.APPLICATION_JSON_TYPE).path("now").path(apiVersion).path("table").path(tableName).path(ObjectHelper.notNull(sysId, "sysId")).query(responseModel).invoke(HttpMethod.DELETE, null).     setBodyAndHeaders(exchange.getIn(), responseModel, response). }
true;private;1;28;/*      * PATCH      * instance://instance.service-now.com/api/now/table/{tableName}/{sys_id}      */ ;/*      * PATCH      * instance://instance.service-now.com/api/now/table/{tableName}/{sys_id}      */ private void updateRecord(Exchange exchange) throws Exception {     final Message in = exchange.getIn().     final String tableName = getTableName(in).     final String apiVersion = getApiVersion(in).     final Class<?> requestModel = getRequestModel(in, tableName).     final Class<?> responseModel = getResponseModel(in, tableName).     final String sysId = getSysID(in).     validateBody(in, requestModel).     Response response = client.reset().types(MediaType.APPLICATION_JSON_TYPE).path("now").path(apiVersion).path("table").path(tableName).path(ObjectHelper.notNull(sysId, "sysId")).query(ServiceNowParams.SYSPARM_DISPLAY_VALUE, in).query(ServiceNowParams.SYSPARM_EXCLUDE_REFERENCE_LINK, in).query(ServiceNowParams.SYSPARM_FIELDS, in).query(ServiceNowParams.SYSPARM_INPUT_DISPLAY_VALUE, in).query(ServiceNowParams.SYSPARM_SUPPRESS_AUTO_SYS_FIELD, in).query(ServiceNowParams.SYSPARM_VIEW, in).query(responseModel).invoke("PATCH", in.getMandatoryBody()).     setBodyAndHeaders(exchange.getIn(), responseModel, response). }
