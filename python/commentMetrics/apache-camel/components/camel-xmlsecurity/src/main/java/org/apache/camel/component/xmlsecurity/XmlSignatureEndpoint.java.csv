commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public XmlCommand getCommand() {     return command. }
true;public;1;3;/**  * Whether to sign or verify.  */ ;/**  * Whether to sign or verify.  */ public void setCommand(XmlCommand command) {     this.command = command. }
false;public;0;3;;public String getName() {     return name. }
true;public;1;3;/**  * The name part in the URI can be chosen by the user to distinguish between different signer/verifier endpoints within the camel context.  */ ;/**  * The name part in the URI can be chosen by the user to distinguish between different signer/verifier endpoints within the camel context.  */ public void setName(String name) {     this.name = name. }
false;public;0;4;;@Override public Producer createProducer() {     return new XmlSignatureProducer(this, createProcessor()). }
false;abstract;0;1;;abstract Processor createProcessor().
false;public;1;4;;@Override public Consumer createConsumer(Processor processor) {     throw new UnsupportedOperationException("XML Signature endpoints are not meant to be consumed from."). }
false;public;0;4;;@Override public boolean isSingleton() {     return true. }
false;public;1;3;;public Object getManagedObject(XmlSignatureEndpoint endpoint) {     return this. }
false;public,abstract;0;1;;public abstract XmlSignatureConfiguration getConfiguration().
false;public;0;3;;public URIDereferencer getUriDereferencer() {     return getConfiguration().getUriDereferencer(). }
false;public;1;3;;public void setUriDereferencer(URIDereferencer uriDereferencer) {     getConfiguration().setUriDereferencer(uriDereferencer). }
false;public;0;3;;public String getBaseUri() {     return getConfiguration().getBaseUri(). }
false;public;1;3;;public void setBaseUri(String baseUri) {     getConfiguration().setBaseUri(baseUri). }
false;public;0;3;;public Map<String, ? extends Object> getCryptoContextProperties() {     return getConfiguration().getCryptoContextProperties(). }
false;public;1;3;;public void setCryptoContextProperties(Map<String, ? extends Object> cryptoContextProperties) {     getConfiguration().setCryptoContextProperties(cryptoContextProperties). }
false;public;0;3;;public Boolean getDisallowDoctypeDecl() {     return getConfiguration().getDisallowDoctypeDecl(). }
false;public;1;3;;public void setDisallowDoctypeDecl(Boolean disallowDoctypeDecl) {     getConfiguration().setDisallowDoctypeDecl(disallowDoctypeDecl). }
false;public;0;3;;public Boolean getOmitXmlDeclaration() {     return getConfiguration().getOmitXmlDeclaration(). }
false;public;1;3;;public void setOmitXmlDeclaration(Boolean omitXmlDeclaration) {     getConfiguration().setOmitXmlDeclaration(omitXmlDeclaration). }
false;public;0;3;;public String getSchemaResourceUri() {     return getConfiguration().getSchemaResourceUri(). }
false;public;1;3;;public void setSchemaResourceUri(String schemaResourceUri) {     getConfiguration().setSchemaResourceUri(schemaResourceUri). }
false;public;0;3;;public String getOutputXmlEncoding() {     return getConfiguration().getOutputXmlEncoding(). }
false;public;1;3;;public void setOutputXmlEncoding(String encoding) {     getConfiguration().setOutputXmlEncoding(encoding). }
