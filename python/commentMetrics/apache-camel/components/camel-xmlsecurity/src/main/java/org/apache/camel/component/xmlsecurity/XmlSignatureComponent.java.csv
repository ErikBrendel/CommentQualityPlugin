commented;modifiers;parameterAmount;loc;comment;code
false;protected;3;42;;@Override protected Endpoint createEndpoint(String uri, String remaining, Map<String, Object> parameters) throws Exception {     ObjectHelper.notNull(getCamelContext(), "CamelContext").     String scheme.     String name.     try {         URI u = new URI(remaining).         scheme = u.getScheme().         name = u.getPath().     } catch (Exception e) {         throw new MalformedURLException(String.format("An invalid xmlsecurity uri was provided '%s'." + " Check the uri matches the format xmlsecurity:sign://<name> or xmlsecurity:verify:<name>", uri)).     }     XmlSignatureEndpoint endpoint.     if ("sign".equals(scheme)) {         XmlSignerConfiguration config = getSignerConfiguration().copy().         endpoint = new XmlSignerEndpoint(uri, this, config).     } else if ("verify".equals(scheme)) {         XmlVerifierConfiguration config = getVerifierConfiguration().copy().         endpoint = new XmlVerifierEndpoint(uri, this, config).     } else {         throw new IllegalStateException(String.format("Endpoint uri '%s'" + " is wrong configured. Operation '%s'" + " is not supported. Supported operations are: sign, verify", uri, scheme)).     }     setProperties(endpoint.getConfiguration(), parameters).     endpoint.getConfiguration().setCamelContext(getCamelContext()).     endpoint.setCommand(XmlCommand.valueOf(scheme)).     endpoint.setName(name).     return endpoint. }
false;public;0;6;;public XmlSignerConfiguration getSignerConfiguration() {     if (signerConfiguration == null) {         signerConfiguration = new XmlSignerConfiguration().     }     return signerConfiguration. }
true;public;1;3;/**  * To use a shared XmlSignerConfiguration configuration to use as base for configuring endpoints.  */ ;/**  * To use a shared XmlSignerConfiguration configuration to use as base for configuring endpoints.  */ public void setSignerConfiguration(XmlSignerConfiguration signerConfiguration) {     this.signerConfiguration = signerConfiguration. }
false;public;0;6;;public XmlVerifierConfiguration getVerifierConfiguration() {     if (verifierConfiguration == null) {         verifierConfiguration = new XmlVerifierConfiguration().     }     return verifierConfiguration. }
true;public;1;3;/**  * To use a shared XmlVerifierConfiguration configuration to use as base for configuring endpoints.  */ ;/**  * To use a shared XmlVerifierConfiguration configuration to use as base for configuring endpoints.  */ public void setVerifierConfiguration(XmlVerifierConfiguration verifierConfiguration) {     this.verifierConfiguration = verifierConfiguration. }
