commented;modifiers;parameterAmount;loc;comment;code
false;public,abstract;0;1;;public abstract XmlSignatureConfiguration getConfiguration().
false;;1;4;;void setUriDereferencerAndBaseUri(XMLCryptoContext context) {     setUriDereferencer(context).     setBaseUri(context). }
false;private;1;6;;private void setUriDereferencer(XMLCryptoContext context) {     if (getConfiguration().getUriDereferencer() != null) {         context.setURIDereferencer(getConfiguration().getUriDereferencer()).         LOG.debug("URI dereferencer set").     } }
false;private;1;6;;private void setBaseUri(XMLCryptoContext context) {     if (getConfiguration().getBaseUri() != null) {         context.setBaseURI(getConfiguration().getBaseUri()).         LOG.debug("Base URI {} set", context.getBaseURI()).     } }
false;protected;1;11;;protected void setCryptoContextProperties(XMLCryptoContext cryptoContext) {     Map<String, ? extends Object> props = getConfiguration().getCryptoContextProperties().     if (props == null) {         return.     }     for (String prop : props.keySet()) {         Object val = props.get(prop).         cryptoContext.setProperty(prop, val).         LOG.debug("Context property {} set to value {}", prop, val).     } }
false;protected;1;8;;protected void clearMessageHeaders(Message message) {     if (getConfiguration().getClearHeaders() != null && getConfiguration().getClearHeaders()) {         Map<String, Object> headers = message.getHeaders().         for (Field f : XmlSignatureConstants.class.getFields()) {             headers.remove(ObjectHelper.lookupConstantFieldValue(XmlSignatureConstants.class, f.getName())).         }     } }
false;protected;1;27;;protected Schema getSchema(Message message) throws SAXException, XmlSignatureException, IOException {     String schemaResourceUri = getSchemaResourceUri(message).     if (schemaResourceUri == null || schemaResourceUri.isEmpty()) {         return null.     }     InputStream is = ResourceHelper.resolveResourceAsInputStream(getConfiguration().getCamelContext().getClassResolver(), schemaResourceUri).     if (is == null) {         throw new XmlSignatureException("XML Signature component is wrongly configured: No XML schema found for specified schema resource URI " + schemaResourceUri).     }     byte[] bytes = null.     try {         bytes = IOConverter.toBytes(is).     } finally {         // and make sure to close the input stream after the schema has been loaded         IOHelper.close(is).     }     SchemaFactory schemaFactory = SchemaFactory.newInstance(XMLConstants.W3C_XML_SCHEMA_NS_URI).     schemaFactory.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true).     schemaFactory.setResourceResolver(new DefaultLSResourceResolver(getConfiguration().getCamelContext(), getConfiguration().getSchemaResourceUri())).     LOG.debug("Instantiating schema for validation").     return schemaFactory.newSchema(new BytesSource(bytes)). }
false;protected;1;8;;protected String getSchemaResourceUri(Message message) {     String schemaResourceUri = message.getHeader(XmlSignatureConstants.HEADER_SCHEMA_RESOURCE_URI, String.class).     if (schemaResourceUri == null) {         schemaResourceUri = getConfiguration().getSchemaResourceUri().     }     LOG.debug("schema resource URI: {}", getConfiguration().getSchemaResourceUri()).     return schemaResourceUri. }
