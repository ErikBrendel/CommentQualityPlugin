# id;timestamp;commentText;codeText;commentWords;codeWords
XMLSecurityDataFormat -> @Deprecated       public void setKeyStore(KeyStore keyStore);1316532283;@deprecated  Use {@link #getKeyOrTrustStoreParameters()} instead.;@Deprecated  _    public void setKeyStore(KeyStore keyStore) {_        this.keyStore = keyStore__    };deprecated,use,link,get,key,or,trust,store,parameters,instead;deprecated,public,void,set,key,store,key,store,key,store,this,key,store,key,store
XMLSecurityDataFormat -> @Deprecated       public void setKeyStore(KeyStore keyStore);1336642311;@deprecated  Use {@link #getKeyOrTrustStoreParameters()} instead.;@Deprecated  _    public void setKeyStore(KeyStore keyStore) {_        this.keyStore = keyStore__    };deprecated,use,link,get,key,or,trust,store,parameters,instead;deprecated,public,void,set,key,store,key,store,key,store,this,key,store,key,store
XMLSecurityDataFormat -> @Deprecated       public void setKeyStore(KeyStore keyStore);1342106539;@deprecated  Use {@link #getKeyOrTrustStoreParameters()} instead.;@Deprecated  _    public void setKeyStore(KeyStore keyStore) {_        this.keyStore = keyStore__    };deprecated,use,link,get,key,or,trust,store,parameters,instead;deprecated,public,void,set,key,store,key,store,key,store,this,key,store,key,store
XMLSecurityDataFormat -> @Deprecated       public void setKeyStore(KeyStore keyStore);1346229387;@deprecated  Use {@link #getKeyOrTrustStoreParameters()} instead.;@Deprecated  _    public void setKeyStore(KeyStore keyStore) {_        this.keyStore = keyStore__    };deprecated,use,link,get,key,or,trust,store,parameters,instead;deprecated,public,void,set,key,store,key,store,key,store,this,key,store,key,store
XMLSecurityDataFormat -> @Deprecated       public void setKeyStore(KeyStore keyStore);1358954767;@deprecated  Use {@link #getKeyOrTrustStoreParameters()} instead.;@Deprecated  _    public void setKeyStore(KeyStore keyStore) {_        this.keyStore = keyStore__    };deprecated,use,link,get,key,or,trust,store,parameters,instead;deprecated,public,void,set,key,store,key,store,key,store,this,key,store,key,store
XMLSecurityDataFormat -> @Deprecated       public void setKeyStore(KeyStore keyStore);1375894613;@deprecated  Use {@link #getKeyOrTrustStoreParameters()} instead.;@Deprecated  _    public void setKeyStore(KeyStore keyStore) {_        this.keyStore = keyStore__    };deprecated,use,link,get,key,or,trust,store,parameters,instead;deprecated,public,void,set,key,store,key,store,key,store,this,key,store,key,store
XMLSecurityDataFormat -> @Deprecated       public void setKeyStore(KeyStore keyStore);1376034290;@deprecated  Use {@link #getKeyOrTrustStoreParameters()} instead.;@Deprecated  _    public void setKeyStore(KeyStore keyStore) {_        this.keyStore = keyStore__    };deprecated,use,link,get,key,or,trust,store,parameters,instead;deprecated,public,void,set,key,store,key,store,key,store,this,key,store,key,store
XMLSecurityDataFormat -> @Deprecated       public void setKeyStore(KeyStore keyStore);1376477110;@deprecated  Use {@link #getKeyOrTrustStoreParameters()} instead.;@Deprecated  _    public void setKeyStore(KeyStore keyStore) {_        this.keyStore = keyStore__    };deprecated,use,link,get,key,or,trust,store,parameters,instead;deprecated,public,void,set,key,store,key,store,key,store,this,key,store,key,store
XMLSecurityDataFormat -> @Deprecated       public void setKeyStore(KeyStore keyStore);1376632954;@deprecated  Use {@link #getKeyOrTrustStoreParameters()} instead.;@Deprecated  _    public void setKeyStore(KeyStore keyStore) {_        this.keyStore = keyStore__    };deprecated,use,link,get,key,or,trust,store,parameters,instead;deprecated,public,void,set,key,store,key,store,key,store,this,key,store,key,store
XMLSecurityDataFormat -> @Deprecated       public void setKeyStore(KeyStore keyStore);1388443957;@deprecated  Use {@link #getKeyOrTrustStoreParameters()} instead.;@Deprecated  _    public void setKeyStore(KeyStore keyStore) {_        this.keyStore = keyStore__    };deprecated,use,link,get,key,or,trust,store,parameters,instead;deprecated,public,void,set,key,store,key,store,key,store,this,key,store,key,store
XMLSecurityDataFormat -> @Deprecated       public void setKeyStore(KeyStore keyStore);1415211488;@deprecated  Use {@link #getKeyOrTrustStoreParameters()} instead.;@Deprecated  _    public void setKeyStore(KeyStore keyStore) {_        this.keyStore = keyStore__    };deprecated,use,link,get,key,or,trust,store,parameters,instead;deprecated,public,void,set,key,store,key,store,key,store,this,key,store,key,store
XMLSecurityDataFormat -> @Deprecated       public void setKeyStore(KeyStore keyStore);1415877369;@deprecated  Use {@link #getKeyOrTrustStoreParameters()} instead.;@Deprecated  _    public void setKeyStore(KeyStore keyStore) {_        this.keyStore = keyStore__    };deprecated,use,link,get,key,or,trust,store,parameters,instead;deprecated,public,void,set,key,store,key,store,key,store,this,key,store,key,store
XMLSecurityDataFormat -> @Deprecated       public void setKeyStore(KeyStore keyStore);1417521716;@deprecated  Use {@link #getKeyOrTrustStoreParameters()} instead.;@Deprecated  _    public void setKeyStore(KeyStore keyStore) {_        this.keyStore = keyStore__    };deprecated,use,link,get,key,or,trust,store,parameters,instead;deprecated,public,void,set,key,store,key,store,key,store,this,key,store,key,store
XMLSecurityDataFormat -> @Deprecated       public void setKeyStore(KeyStore keyStore);1417572756;@deprecated  Use {@link #getKeyOrTrustStoreParameters()} instead.;@Deprecated  _    public void setKeyStore(KeyStore keyStore) {_        this.keyStore = keyStore__    };deprecated,use,link,get,key,or,trust,store,parameters,instead;deprecated,public,void,set,key,store,key,store,key,store,this,key,store,key,store
XMLSecurityDataFormat -> @Deprecated       public void setKeyStore(KeyStore keyStore);1443094318;@deprecated  Use {@link #getKeyOrTrustStoreParameters()} instead.;@Deprecated  _    public void setKeyStore(KeyStore keyStore) {_        this.keyStore = keyStore__    };deprecated,use,link,get,key,or,trust,store,parameters,instead;deprecated,public,void,set,key,store,key,store,key,store,this,key,store,key,store
XMLSecurityDataFormat -> @Deprecated       public void setKeyStore(KeyStore keyStore);1443168793;@deprecated  Use {@link #getKeyOrTrustStoreParameters()} instead.;@Deprecated  _    public void setKeyStore(KeyStore keyStore) {_        this.keyStore = keyStore__    };deprecated,use,link,get,key,or,trust,store,parameters,instead;deprecated,public,void,set,key,store,key,store,key,store,this,key,store,key,store
XMLSecurityDataFormat -> @Deprecated       public void setKeyStore(KeyStore keyStore);1445110748;@deprecated  Use {@link #getKeyOrTrustStoreParameters()} instead.;@Deprecated  _    public void setKeyStore(KeyStore keyStore) {_        this.keyStore = keyStore__    };deprecated,use,link,get,key,or,trust,store,parameters,instead;deprecated,public,void,set,key,store,key,store,key,store,this,key,store,key,store
XMLSecurityDataFormat -> @Deprecated       public void setKeyStore(KeyStore keyStore);1518772634;@deprecated  Use {@link #getKeyOrTrustStoreParameters()} instead.;@Deprecated  _    public void setKeyStore(KeyStore keyStore) {_        this.keyStore = keyStore__    };deprecated,use,link,get,key,or,trust,store,parameters,instead;deprecated,public,void,set,key,store,key,store,key,store,this,key,store,key,store
XMLSecurityDataFormat -> @Deprecated       public void setKeyStore(KeyStore keyStore);1532430683;@deprecated  Use {@link #getKeyOrTrustStoreParameters()} instead.;@Deprecated  _    public void setKeyStore(KeyStore keyStore) {_        this.keyStore = keyStore__    };deprecated,use,link,get,key,or,trust,store,parameters,instead;deprecated,public,void,set,key,store,key,store,key,store,this,key,store,key,store
XMLSecurityDataFormat -> @Deprecated       public void setKeyStore(KeyStore keyStore);1537290824;@deprecated  Use {@link #getKeyOrTrustStoreParameters()} instead.;@Deprecated  _    public void setKeyStore(KeyStore keyStore) {_        this.keyStore = keyStore__    };deprecated,use,link,get,key,or,trust,store,parameters,instead;deprecated,public,void,set,key,store,key,store,key,store,this,key,store,key,store
XMLSecurityDataFormat -> @Deprecated       public void setKeyStore(KeyStore keyStore);1540108158;@deprecated  Use {@link #getKeyOrTrustStoreParameters()} instead.;@Deprecated  _    public void setKeyStore(KeyStore keyStore) {_        this.keyStore = keyStore__    };deprecated,use,link,get,key,or,trust,store,parameters,instead;deprecated,public,void,set,key,store,key,store,key,store,this,key,store,key,store
XMLSecurityDataFormat -> @Deprecated       public void setTrustStore(KeyStore trustStore);1316532283;@deprecated  Use {@link #setKeyOrTrustStoreParameters()} instead.;@Deprecated  _    public void setTrustStore(KeyStore trustStore) {_        this.trustStore = trustStore__    };deprecated,use,link,set,key,or,trust,store,parameters,instead;deprecated,public,void,set,trust,store,key,store,trust,store,this,trust,store,trust,store
XMLSecurityDataFormat -> @Deprecated       public void setTrustStore(KeyStore trustStore);1336642311;@deprecated  Use {@link #setKeyOrTrustStoreParameters()} instead.;@Deprecated  _    public void setTrustStore(KeyStore trustStore) {_        this.trustStore = trustStore__    };deprecated,use,link,set,key,or,trust,store,parameters,instead;deprecated,public,void,set,trust,store,key,store,trust,store,this,trust,store,trust,store
XMLSecurityDataFormat -> @Deprecated       public void setTrustStore(KeyStore trustStore);1342106539;@deprecated  Use {@link #setKeyOrTrustStoreParameters()} instead.;@Deprecated  _    public void setTrustStore(KeyStore trustStore) {_        this.trustStore = trustStore__    };deprecated,use,link,set,key,or,trust,store,parameters,instead;deprecated,public,void,set,trust,store,key,store,trust,store,this,trust,store,trust,store
XMLSecurityDataFormat -> @Deprecated       public void setTrustStore(KeyStore trustStore);1346229387;@deprecated  Use {@link #setKeyOrTrustStoreParameters()} instead.;@Deprecated  _    public void setTrustStore(KeyStore trustStore) {_        this.trustStore = trustStore__    };deprecated,use,link,set,key,or,trust,store,parameters,instead;deprecated,public,void,set,trust,store,key,store,trust,store,this,trust,store,trust,store
XMLSecurityDataFormat -> @Deprecated       public void setTrustStore(KeyStore trustStore);1358954767;@deprecated  Use {@link #setKeyOrTrustStoreParameters()} instead.;@Deprecated  _    public void setTrustStore(KeyStore trustStore) {_        this.trustStore = trustStore__    };deprecated,use,link,set,key,or,trust,store,parameters,instead;deprecated,public,void,set,trust,store,key,store,trust,store,this,trust,store,trust,store
XMLSecurityDataFormat -> @Deprecated       public void setTrustStore(KeyStore trustStore);1375894613;@deprecated  Use {@link #setKeyOrTrustStoreParameters()} instead.;@Deprecated  _    public void setTrustStore(KeyStore trustStore) {_        this.trustStore = trustStore__    };deprecated,use,link,set,key,or,trust,store,parameters,instead;deprecated,public,void,set,trust,store,key,store,trust,store,this,trust,store,trust,store
XMLSecurityDataFormat -> @Deprecated       public void setTrustStore(KeyStore trustStore);1376034290;@deprecated  Use {@link #setKeyOrTrustStoreParameters()} instead.;@Deprecated  _    public void setTrustStore(KeyStore trustStore) {_        this.trustStore = trustStore__    };deprecated,use,link,set,key,or,trust,store,parameters,instead;deprecated,public,void,set,trust,store,key,store,trust,store,this,trust,store,trust,store
XMLSecurityDataFormat -> @Deprecated       public void setTrustStore(KeyStore trustStore);1376477110;@deprecated  Use {@link #setKeyOrTrustStoreParameters()} instead.;@Deprecated  _    public void setTrustStore(KeyStore trustStore) {_        this.trustStore = trustStore__    };deprecated,use,link,set,key,or,trust,store,parameters,instead;deprecated,public,void,set,trust,store,key,store,trust,store,this,trust,store,trust,store
XMLSecurityDataFormat -> @Deprecated       public void setTrustStore(KeyStore trustStore);1376632954;@deprecated  Use {@link #setKeyOrTrustStoreParameters()} instead.;@Deprecated  _    public void setTrustStore(KeyStore trustStore) {_        this.trustStore = trustStore__    };deprecated,use,link,set,key,or,trust,store,parameters,instead;deprecated,public,void,set,trust,store,key,store,trust,store,this,trust,store,trust,store
XMLSecurityDataFormat -> @Deprecated       public void setTrustStore(KeyStore trustStore);1388443957;@deprecated  Use {@link #setKeyOrTrustStoreParameters()} instead.;@Deprecated  _    public void setTrustStore(KeyStore trustStore) {_        this.trustStore = trustStore__    };deprecated,use,link,set,key,or,trust,store,parameters,instead;deprecated,public,void,set,trust,store,key,store,trust,store,this,trust,store,trust,store
XMLSecurityDataFormat -> @Deprecated       public void setTrustStore(KeyStore trustStore);1415211488;@deprecated  Use {@link #setKeyOrTrustStoreParameters()} instead.;@Deprecated  _    public void setTrustStore(KeyStore trustStore) {_        this.trustStore = trustStore__    };deprecated,use,link,set,key,or,trust,store,parameters,instead;deprecated,public,void,set,trust,store,key,store,trust,store,this,trust,store,trust,store
XMLSecurityDataFormat -> @Deprecated       public void setTrustStore(KeyStore trustStore);1415877369;@deprecated  Use {@link #setKeyOrTrustStoreParameters()} instead.;@Deprecated  _    public void setTrustStore(KeyStore trustStore) {_        this.trustStore = trustStore__    };deprecated,use,link,set,key,or,trust,store,parameters,instead;deprecated,public,void,set,trust,store,key,store,trust,store,this,trust,store,trust,store
XMLSecurityDataFormat -> @Deprecated       public void setTrustStore(KeyStore trustStore);1417521716;@deprecated  Use {@link #setKeyOrTrustStoreParameters()} instead.;@Deprecated  _    public void setTrustStore(KeyStore trustStore) {_        this.trustStore = trustStore__    };deprecated,use,link,set,key,or,trust,store,parameters,instead;deprecated,public,void,set,trust,store,key,store,trust,store,this,trust,store,trust,store
XMLSecurityDataFormat -> @Deprecated       public void setTrustStore(KeyStore trustStore);1417572756;@deprecated  Use {@link #setKeyOrTrustStoreParameters()} instead.;@Deprecated  _    public void setTrustStore(KeyStore trustStore) {_        this.trustStore = trustStore__    };deprecated,use,link,set,key,or,trust,store,parameters,instead;deprecated,public,void,set,trust,store,key,store,trust,store,this,trust,store,trust,store
XMLSecurityDataFormat -> @Deprecated       public void setTrustStore(KeyStore trustStore);1443094318;@deprecated  Use {@link #setKeyOrTrustStoreParameters()} instead.;@Deprecated  _    public void setTrustStore(KeyStore trustStore) {_        this.trustStore = trustStore__    };deprecated,use,link,set,key,or,trust,store,parameters,instead;deprecated,public,void,set,trust,store,key,store,trust,store,this,trust,store,trust,store
XMLSecurityDataFormat -> @Deprecated       public void setTrustStore(KeyStore trustStore);1443168793;@deprecated  Use {@link #setKeyOrTrustStoreParameters()} instead.;@Deprecated  _    public void setTrustStore(KeyStore trustStore) {_        this.trustStore = trustStore__    };deprecated,use,link,set,key,or,trust,store,parameters,instead;deprecated,public,void,set,trust,store,key,store,trust,store,this,trust,store,trust,store
XMLSecurityDataFormat -> @Deprecated       public void setTrustStore(KeyStore trustStore);1445110748;@deprecated  Use {@link #setKeyOrTrustStoreParameters()} instead.;@Deprecated  _    public void setTrustStore(KeyStore trustStore) {_        this.trustStore = trustStore__    };deprecated,use,link,set,key,or,trust,store,parameters,instead;deprecated,public,void,set,trust,store,key,store,trust,store,this,trust,store,trust,store
XMLSecurityDataFormat -> @Deprecated       public void setTrustStore(KeyStore trustStore);1518772634;@deprecated  Use {@link #setKeyOrTrustStoreParameters()} instead.;@Deprecated  _    public void setTrustStore(KeyStore trustStore) {_        this.trustStore = trustStore__    };deprecated,use,link,set,key,or,trust,store,parameters,instead;deprecated,public,void,set,trust,store,key,store,trust,store,this,trust,store,trust,store
XMLSecurityDataFormat -> @Deprecated       public void setTrustStore(KeyStore trustStore);1532430683;@deprecated  Use {@link #setKeyOrTrustStoreParameters()} instead.;@Deprecated  _    public void setTrustStore(KeyStore trustStore) {_        this.trustStore = trustStore__    };deprecated,use,link,set,key,or,trust,store,parameters,instead;deprecated,public,void,set,trust,store,key,store,trust,store,this,trust,store,trust,store
XMLSecurityDataFormat -> @Deprecated       public void setTrustStore(KeyStore trustStore);1537290824;@deprecated  Use {@link #setKeyOrTrustStoreParameters()} instead.;@Deprecated  _    public void setTrustStore(KeyStore trustStore) {_        this.trustStore = trustStore__    };deprecated,use,link,set,key,or,trust,store,parameters,instead;deprecated,public,void,set,trust,store,key,store,trust,store,this,trust,store,trust,store
XMLSecurityDataFormat -> @Deprecated       public void setTrustStore(KeyStore trustStore);1540108158;@deprecated  Use {@link #setKeyOrTrustStoreParameters()} instead.;@Deprecated  _    public void setTrustStore(KeyStore trustStore) {_        this.trustStore = trustStore__    };deprecated,use,link,set,key,or,trust,store,parameters,instead;deprecated,public,void,set,trust,store,key,store,trust,store,this,trust,store,trust,store
XMLSecurityDataFormat -> @Deprecated     public void setTrustStorePassword(String trustStorePassword);1316532283;@deprecated  Use {@link #setKeyOrTrustStoreParameters()} instead.;@Deprecated_    public void setTrustStorePassword(String trustStorePassword) {_        this.trustStorePassword = trustStorePassword__    };deprecated,use,link,set,key,or,trust,store,parameters,instead;deprecated,public,void,set,trust,store,password,string,trust,store,password,this,trust,store,password,trust,store,password
XMLSecurityDataFormat -> @Deprecated     public void setTrustStorePassword(String trustStorePassword);1336642311;@deprecated  Use {@link #setKeyOrTrustStoreParameters()} instead.;@Deprecated_    public void setTrustStorePassword(String trustStorePassword) {_        this.trustStorePassword = trustStorePassword__    };deprecated,use,link,set,key,or,trust,store,parameters,instead;deprecated,public,void,set,trust,store,password,string,trust,store,password,this,trust,store,password,trust,store,password
XMLSecurityDataFormat -> @Deprecated     public void setTrustStorePassword(String trustStorePassword);1342106539;@deprecated  Use {@link #setKeyOrTrustStoreParameters()} instead.;@Deprecated_    public void setTrustStorePassword(String trustStorePassword) {_        this.trustStorePassword = trustStorePassword__    };deprecated,use,link,set,key,or,trust,store,parameters,instead;deprecated,public,void,set,trust,store,password,string,trust,store,password,this,trust,store,password,trust,store,password
XMLSecurityDataFormat -> @Deprecated     public void setTrustStorePassword(String trustStorePassword);1346229387;@deprecated  Use {@link #setKeyOrTrustStoreParameters()} instead.;@Deprecated_    public void setTrustStorePassword(String trustStorePassword) {_        this.trustStorePassword = trustStorePassword__    };deprecated,use,link,set,key,or,trust,store,parameters,instead;deprecated,public,void,set,trust,store,password,string,trust,store,password,this,trust,store,password,trust,store,password
XMLSecurityDataFormat -> @Deprecated     public void setTrustStorePassword(String trustStorePassword);1358954767;@deprecated  Use {@link #setKeyOrTrustStoreParameters()} instead.;@Deprecated_    public void setTrustStorePassword(String trustStorePassword) {_        this.trustStorePassword = trustStorePassword__    };deprecated,use,link,set,key,or,trust,store,parameters,instead;deprecated,public,void,set,trust,store,password,string,trust,store,password,this,trust,store,password,trust,store,password
XMLSecurityDataFormat -> @Deprecated     public void setTrustStorePassword(String trustStorePassword);1375894613;@deprecated  Use {@link #setKeyOrTrustStoreParameters()} instead.;@Deprecated_    public void setTrustStorePassword(String trustStorePassword) {_        this.trustStorePassword = trustStorePassword__    };deprecated,use,link,set,key,or,trust,store,parameters,instead;deprecated,public,void,set,trust,store,password,string,trust,store,password,this,trust,store,password,trust,store,password
XMLSecurityDataFormat -> @Deprecated     public void setTrustStorePassword(String trustStorePassword);1376034290;@deprecated  Use {@link #setKeyOrTrustStoreParameters()} instead.;@Deprecated_    public void setTrustStorePassword(String trustStorePassword) {_        this.trustStorePassword = trustStorePassword__    };deprecated,use,link,set,key,or,trust,store,parameters,instead;deprecated,public,void,set,trust,store,password,string,trust,store,password,this,trust,store,password,trust,store,password
XMLSecurityDataFormat -> @Deprecated     public void setTrustStorePassword(String trustStorePassword);1376477110;@deprecated  Use {@link #setKeyOrTrustStoreParameters()} instead.;@Deprecated_    public void setTrustStorePassword(String trustStorePassword) {_        this.trustStorePassword = trustStorePassword__    };deprecated,use,link,set,key,or,trust,store,parameters,instead;deprecated,public,void,set,trust,store,password,string,trust,store,password,this,trust,store,password,trust,store,password
XMLSecurityDataFormat -> @Deprecated     public void setTrustStorePassword(String trustStorePassword);1376632954;@deprecated  Use {@link #setKeyOrTrustStoreParameters()} instead.;@Deprecated_    public void setTrustStorePassword(String trustStorePassword) {_        this.trustStorePassword = trustStorePassword__    };deprecated,use,link,set,key,or,trust,store,parameters,instead;deprecated,public,void,set,trust,store,password,string,trust,store,password,this,trust,store,password,trust,store,password
XMLSecurityDataFormat -> @Deprecated     public void setTrustStorePassword(String trustStorePassword);1388443957;@deprecated  Use {@link #setKeyOrTrustStoreParameters()} instead.;@Deprecated_    public void setTrustStorePassword(String trustStorePassword) {_        this.trustStorePassword = trustStorePassword__    };deprecated,use,link,set,key,or,trust,store,parameters,instead;deprecated,public,void,set,trust,store,password,string,trust,store,password,this,trust,store,password,trust,store,password
XMLSecurityDataFormat -> @Deprecated     public void setTrustStorePassword(String trustStorePassword);1415211488;@deprecated  Use {@link #setKeyOrTrustStoreParameters()} instead.;@Deprecated_    public void setTrustStorePassword(String trustStorePassword) {_        this.trustStorePassword = trustStorePassword__    };deprecated,use,link,set,key,or,trust,store,parameters,instead;deprecated,public,void,set,trust,store,password,string,trust,store,password,this,trust,store,password,trust,store,password
XMLSecurityDataFormat -> @Deprecated     public void setTrustStorePassword(String trustStorePassword);1415877369;@deprecated  Use {@link #setKeyOrTrustStoreParameters()} instead.;@Deprecated_    public void setTrustStorePassword(String trustStorePassword) {_        this.trustStorePassword = trustStorePassword__    };deprecated,use,link,set,key,or,trust,store,parameters,instead;deprecated,public,void,set,trust,store,password,string,trust,store,password,this,trust,store,password,trust,store,password
XMLSecurityDataFormat -> @Deprecated     public void setTrustStorePassword(String trustStorePassword);1417521716;@deprecated  Use {@link #setKeyOrTrustStoreParameters()} instead.;@Deprecated_    public void setTrustStorePassword(String trustStorePassword) {_        this.trustStorePassword = trustStorePassword__    };deprecated,use,link,set,key,or,trust,store,parameters,instead;deprecated,public,void,set,trust,store,password,string,trust,store,password,this,trust,store,password,trust,store,password
XMLSecurityDataFormat -> @Deprecated     public void setTrustStorePassword(String trustStorePassword);1417572756;@deprecated  Use {@link #setKeyOrTrustStoreParameters()} instead.;@Deprecated_    public void setTrustStorePassword(String trustStorePassword) {_        this.trustStorePassword = trustStorePassword__    };deprecated,use,link,set,key,or,trust,store,parameters,instead;deprecated,public,void,set,trust,store,password,string,trust,store,password,this,trust,store,password,trust,store,password
XMLSecurityDataFormat -> @Deprecated     public void setTrustStorePassword(String trustStorePassword);1443094318;@deprecated  Use {@link #setKeyOrTrustStoreParameters()} instead.;@Deprecated_    public void setTrustStorePassword(String trustStorePassword) {_        this.trustStorePassword = trustStorePassword__    };deprecated,use,link,set,key,or,trust,store,parameters,instead;deprecated,public,void,set,trust,store,password,string,trust,store,password,this,trust,store,password,trust,store,password
XMLSecurityDataFormat -> @Deprecated     public void setTrustStorePassword(String trustStorePassword);1443168793;@deprecated  Use {@link #setKeyOrTrustStoreParameters()} instead.;@Deprecated_    public void setTrustStorePassword(String trustStorePassword) {_        this.trustStorePassword = trustStorePassword__    };deprecated,use,link,set,key,or,trust,store,parameters,instead;deprecated,public,void,set,trust,store,password,string,trust,store,password,this,trust,store,password,trust,store,password
XMLSecurityDataFormat -> @Deprecated     public void setTrustStorePassword(String trustStorePassword);1445110748;@deprecated  Use {@link #setKeyOrTrustStoreParameters()} instead.;@Deprecated_    public void setTrustStorePassword(String trustStorePassword) {_        this.trustStorePassword = trustStorePassword__    };deprecated,use,link,set,key,or,trust,store,parameters,instead;deprecated,public,void,set,trust,store,password,string,trust,store,password,this,trust,store,password,trust,store,password
XMLSecurityDataFormat -> @Deprecated     public void setTrustStorePassword(String trustStorePassword);1518772634;@deprecated  Use {@link #setKeyOrTrustStoreParameters()} instead.;@Deprecated_    public void setTrustStorePassword(String trustStorePassword) {_        this.trustStorePassword = trustStorePassword__    };deprecated,use,link,set,key,or,trust,store,parameters,instead;deprecated,public,void,set,trust,store,password,string,trust,store,password,this,trust,store,password,trust,store,password
XMLSecurityDataFormat -> @Deprecated     public void setTrustStorePassword(String trustStorePassword);1532430683;@deprecated  Use {@link #setKeyOrTrustStoreParameters()} instead.;@Deprecated_    public void setTrustStorePassword(String trustStorePassword) {_        this.trustStorePassword = trustStorePassword__    };deprecated,use,link,set,key,or,trust,store,parameters,instead;deprecated,public,void,set,trust,store,password,string,trust,store,password,this,trust,store,password,trust,store,password
XMLSecurityDataFormat -> @Deprecated     public void setTrustStorePassword(String trustStorePassword);1537290824;@deprecated  Use {@link #setKeyOrTrustStoreParameters()} instead.;@Deprecated_    public void setTrustStorePassword(String trustStorePassword) {_        this.trustStorePassword = trustStorePassword__    };deprecated,use,link,set,key,or,trust,store,parameters,instead;deprecated,public,void,set,trust,store,password,string,trust,store,password,this,trust,store,password,trust,store,password
XMLSecurityDataFormat -> @Deprecated     public void setTrustStorePassword(String trustStorePassword);1540108158;@deprecated  Use {@link #setKeyOrTrustStoreParameters()} instead.;@Deprecated_    public void setTrustStorePassword(String trustStorePassword) {_        this.trustStorePassword = trustStorePassword__    };deprecated,use,link,set,key,or,trust,store,parameters,instead;deprecated,public,void,set,trust,store,password,string,trust,store,password,this,trust,store,password,trust,store,password
XMLSecurityDataFormat -> private PrivateKey getPrivateKey(KeyStore keystore, String alias, String password) throws Exception;1545203860;Returns the private key for the specified alias, or null if the alias or private key is not found.;private PrivateKey getPrivateKey(KeyStore keystore, String alias, String password) throws Exception {_        Key key = keystore.getKey(alias, password.toCharArray())__        if (key instanceof PrivateKey) {_            return (PrivateKey)key__        } else {_            return null__        }_    };returns,the,private,key,for,the,specified,alias,or,null,if,the,alias,or,private,key,is,not,found;private,private,key,get,private,key,key,store,keystore,string,alias,string,password,throws,exception,key,key,keystore,get,key,alias,password,to,char,array,if,key,instanceof,private,key,return,private,key,key,else,return,null
XMLSecurityDataFormat -> private PrivateKey getPrivateKey(KeyStore keystore, String alias, String password) throws Exception;1547241305;Returns the private key for the specified alias, or null if the alias or private key is not found.;private PrivateKey getPrivateKey(KeyStore keystore, String alias, String password) throws Exception {_        Key key = keystore.getKey(alias, password.toCharArray())__        if (key instanceof PrivateKey) {_            return (PrivateKey)key__        } else {_            return null__        }_    };returns,the,private,key,for,the,specified,alias,or,null,if,the,alias,or,private,key,is,not,found;private,private,key,get,private,key,key,store,keystore,string,alias,string,password,throws,exception,key,key,keystore,get,key,alias,password,to,char,array,if,key,instanceof,private,key,return,private,key,key,else,return,null
XMLSecurityDataFormat -> private PrivateKey getPrivateKey(KeyStore keystore, String alias, String password) throws Exception;1548175645;Returns the private key for the specified alias, or null if the alias or private key is not found.;private PrivateKey getPrivateKey(KeyStore keystore, String alias, String password) throws Exception {_        Key key = keystore.getKey(alias, password.toCharArray())__        if (key instanceof PrivateKey) {_            return (PrivateKey)key__        } else {_            return null__        }_    };returns,the,private,key,for,the,specified,alias,or,null,if,the,alias,or,private,key,is,not,found;private,private,key,get,private,key,key,store,keystore,string,alias,string,password,throws,exception,key,key,keystore,get,key,alias,password,to,char,array,if,key,instanceof,private,key,return,private,key,key,else,return,null
XMLSecurityDataFormat -> private PrivateKey getPrivateKey(KeyStore keystore, String alias, String password) throws Exception;1548666920;Returns the private key for the specified alias, or null if the alias or private key is not found.;private PrivateKey getPrivateKey(KeyStore keystore, String alias, String password) throws Exception {_        Key key = keystore.getKey(alias, password.toCharArray())__        if (key instanceof PrivateKey) {_            return (PrivateKey)key__        } else {_            return null__        }_    };returns,the,private,key,for,the,specified,alias,or,null,if,the,alias,or,private,key,is,not,found;private,private,key,get,private,key,key,store,keystore,string,alias,string,password,throws,exception,key,key,keystore,get,key,alias,password,to,char,array,if,key,instanceof,private,key,return,private,key,key,else,return,null
XMLSecurityDataFormat -> private PrivateKey getPrivateKey(KeyStore keystore, String alias, String password) throws Exception;1549446874;Returns the private key for the specified alias, or null if the alias or private key is not found.;private PrivateKey getPrivateKey(KeyStore keystore, String alias, String password) throws Exception {_        Key key = keystore.getKey(alias, password.toCharArray())__        if (key instanceof PrivateKey) {_            return (PrivateKey)key__        } else {_            return null__        }_    };returns,the,private,key,for,the,specified,alias,or,null,if,the,alias,or,private,key,is,not,found;private,private,key,get,private,key,key,store,keystore,string,alias,string,password,throws,exception,key,key,keystore,get,key,alias,password,to,char,array,if,key,instanceof,private,key,return,private,key,key,else,return,null
XMLSecurityDataFormat -> @Deprecated     public XMLSecurityDataFormat(String secureTag, boolean secureTagContents, String recipientKeyAlias,              String xmlCipherAlgorithm, String keyCipherAlgorithm);1316532283;@deprecated  use {@link #XMLSecurityDataFormat(String, Map, boolean, String, String, String, String)} or_{@link #XMLSecurityDataFormat(String, Map, boolean, String, String, String, KeyStoreParameters)} instead.;@Deprecated_    public XMLSecurityDataFormat(String secureTag, boolean secureTagContents, String recipientKeyAlias, _            String xmlCipherAlgorithm, String keyCipherAlgorithm) {_        this()__        this.setSecureTag(secureTag)__        this.setSecureTagContents(secureTagContents)__        this.setXmlCipherAlgorithm(xmlCipherAlgorithm)__        this.setRecipientKeyAlias(recipientKeyAlias)__        this.setKeyCipherAlgorithm(keyCipherAlgorithm)__    };deprecated,use,link,xmlsecurity,data,format,string,map,boolean,string,string,string,string,or,link,xmlsecurity,data,format,string,map,boolean,string,string,string,key,store,parameters,instead;deprecated,public,xmlsecurity,data,format,string,secure,tag,boolean,secure,tag,contents,string,recipient,key,alias,string,xml,cipher,algorithm,string,key,cipher,algorithm,this,this,set,secure,tag,secure,tag,this,set,secure,tag,contents,secure,tag,contents,this,set,xml,cipher,algorithm,xml,cipher,algorithm,this,set,recipient,key,alias,recipient,key,alias,this,set,key,cipher,algorithm,key,cipher,algorithm
XMLSecurityDataFormat -> @Deprecated     public XMLSecurityDataFormat(String secureTag, boolean secureTagContents, String recipientKeyAlias,              String xmlCipherAlgorithm, String keyCipherAlgorithm);1336642311;@deprecated  use {@link #XMLSecurityDataFormat(String, Map, boolean, String, String, String, String)} or_{@link #XMLSecurityDataFormat(String, Map, boolean, String, String, String, KeyStoreParameters)} instead.;@Deprecated_    public XMLSecurityDataFormat(String secureTag, boolean secureTagContents, String recipientKeyAlias, _            String xmlCipherAlgorithm, String keyCipherAlgorithm) {_        this()__        this.setSecureTag(secureTag)__        this.setSecureTagContents(secureTagContents)__        this.setXmlCipherAlgorithm(xmlCipherAlgorithm)__        this.setRecipientKeyAlias(recipientKeyAlias)__        this.setKeyCipherAlgorithm(keyCipherAlgorithm)__    };deprecated,use,link,xmlsecurity,data,format,string,map,boolean,string,string,string,string,or,link,xmlsecurity,data,format,string,map,boolean,string,string,string,key,store,parameters,instead;deprecated,public,xmlsecurity,data,format,string,secure,tag,boolean,secure,tag,contents,string,recipient,key,alias,string,xml,cipher,algorithm,string,key,cipher,algorithm,this,this,set,secure,tag,secure,tag,this,set,secure,tag,contents,secure,tag,contents,this,set,xml,cipher,algorithm,xml,cipher,algorithm,this,set,recipient,key,alias,recipient,key,alias,this,set,key,cipher,algorithm,key,cipher,algorithm
XMLSecurityDataFormat -> @Deprecated     public XMLSecurityDataFormat(String secureTag, boolean secureTagContents, String recipientKeyAlias,              String xmlCipherAlgorithm, String keyCipherAlgorithm);1342106539;@deprecated  use {@link #XMLSecurityDataFormat(String, Map, boolean, String, String, String, String)} or_{@link #XMLSecurityDataFormat(String, Map, boolean, String, String, String, KeyStoreParameters)} instead.;@Deprecated_    public XMLSecurityDataFormat(String secureTag, boolean secureTagContents, String recipientKeyAlias, _            String xmlCipherAlgorithm, String keyCipherAlgorithm) {_        this()__        this.setSecureTag(secureTag)__        this.setSecureTagContents(secureTagContents)__        this.setXmlCipherAlgorithm(xmlCipherAlgorithm)__        this.setRecipientKeyAlias(recipientKeyAlias)__        this.setKeyCipherAlgorithm(keyCipherAlgorithm)__    };deprecated,use,link,xmlsecurity,data,format,string,map,boolean,string,string,string,string,or,link,xmlsecurity,data,format,string,map,boolean,string,string,string,key,store,parameters,instead;deprecated,public,xmlsecurity,data,format,string,secure,tag,boolean,secure,tag,contents,string,recipient,key,alias,string,xml,cipher,algorithm,string,key,cipher,algorithm,this,this,set,secure,tag,secure,tag,this,set,secure,tag,contents,secure,tag,contents,this,set,xml,cipher,algorithm,xml,cipher,algorithm,this,set,recipient,key,alias,recipient,key,alias,this,set,key,cipher,algorithm,key,cipher,algorithm
XMLSecurityDataFormat -> @Deprecated     public XMLSecurityDataFormat(String secureTag, boolean secureTagContents, String recipientKeyAlias,              String xmlCipherAlgorithm, String keyCipherAlgorithm);1346229387;@deprecated  use {@link #XMLSecurityDataFormat(String, Map, boolean, String, String, String, String)} or_{@link #XMLSecurityDataFormat(String, Map, boolean, String, String, String, KeyStoreParameters)} instead.;@Deprecated_    public XMLSecurityDataFormat(String secureTag, boolean secureTagContents, String recipientKeyAlias, _            String xmlCipherAlgorithm, String keyCipherAlgorithm) {_        this()__        this.setSecureTag(secureTag)__        this.setSecureTagContents(secureTagContents)__        this.setXmlCipherAlgorithm(xmlCipherAlgorithm)__        this.setRecipientKeyAlias(recipientKeyAlias)__        this.setKeyCipherAlgorithm(keyCipherAlgorithm)__    };deprecated,use,link,xmlsecurity,data,format,string,map,boolean,string,string,string,string,or,link,xmlsecurity,data,format,string,map,boolean,string,string,string,key,store,parameters,instead;deprecated,public,xmlsecurity,data,format,string,secure,tag,boolean,secure,tag,contents,string,recipient,key,alias,string,xml,cipher,algorithm,string,key,cipher,algorithm,this,this,set,secure,tag,secure,tag,this,set,secure,tag,contents,secure,tag,contents,this,set,xml,cipher,algorithm,xml,cipher,algorithm,this,set,recipient,key,alias,recipient,key,alias,this,set,key,cipher,algorithm,key,cipher,algorithm
XMLSecurityDataFormat -> @Deprecated     public XMLSecurityDataFormat(String secureTag, boolean secureTagContents, String recipientKeyAlias,              String xmlCipherAlgorithm, String keyCipherAlgorithm);1358954767;@deprecated  use {@link #XMLSecurityDataFormat(String, Map, boolean, String, String, String, String)} or_{@link #XMLSecurityDataFormat(String, Map, boolean, String, String, String, KeyStoreParameters)} instead.;@Deprecated_    public XMLSecurityDataFormat(String secureTag, boolean secureTagContents, String recipientKeyAlias, _            String xmlCipherAlgorithm, String keyCipherAlgorithm) {_        this()__        this.setSecureTag(secureTag)__        this.setSecureTagContents(secureTagContents)__        this.setXmlCipherAlgorithm(xmlCipherAlgorithm)__        this.setRecipientKeyAlias(recipientKeyAlias)__        this.setKeyCipherAlgorithm(keyCipherAlgorithm)__    };deprecated,use,link,xmlsecurity,data,format,string,map,boolean,string,string,string,string,or,link,xmlsecurity,data,format,string,map,boolean,string,string,string,key,store,parameters,instead;deprecated,public,xmlsecurity,data,format,string,secure,tag,boolean,secure,tag,contents,string,recipient,key,alias,string,xml,cipher,algorithm,string,key,cipher,algorithm,this,this,set,secure,tag,secure,tag,this,set,secure,tag,contents,secure,tag,contents,this,set,xml,cipher,algorithm,xml,cipher,algorithm,this,set,recipient,key,alias,recipient,key,alias,this,set,key,cipher,algorithm,key,cipher,algorithm
XMLSecurityDataFormat -> @Deprecated     public XMLSecurityDataFormat(String secureTag, boolean secureTagContents, String recipientKeyAlias,              String xmlCipherAlgorithm, String keyCipherAlgorithm);1375894613;@deprecated  use {@link #XMLSecurityDataFormat(String, Map, boolean, String, String, String, String)} or_{@link #XMLSecurityDataFormat(String, Map, boolean, String, String, String, KeyStoreParameters)} instead.;@Deprecated_    public XMLSecurityDataFormat(String secureTag, boolean secureTagContents, String recipientKeyAlias, _            String xmlCipherAlgorithm, String keyCipherAlgorithm) {_        this()__        this.setSecureTag(secureTag)__        this.setSecureTagContents(secureTagContents)__        this.setXmlCipherAlgorithm(xmlCipherAlgorithm)__        this.setRecipientKeyAlias(recipientKeyAlias)__        this.setKeyCipherAlgorithm(keyCipherAlgorithm)__    };deprecated,use,link,xmlsecurity,data,format,string,map,boolean,string,string,string,string,or,link,xmlsecurity,data,format,string,map,boolean,string,string,string,key,store,parameters,instead;deprecated,public,xmlsecurity,data,format,string,secure,tag,boolean,secure,tag,contents,string,recipient,key,alias,string,xml,cipher,algorithm,string,key,cipher,algorithm,this,this,set,secure,tag,secure,tag,this,set,secure,tag,contents,secure,tag,contents,this,set,xml,cipher,algorithm,xml,cipher,algorithm,this,set,recipient,key,alias,recipient,key,alias,this,set,key,cipher,algorithm,key,cipher,algorithm
XMLSecurityDataFormat -> @Deprecated     public XMLSecurityDataFormat(String secureTag, boolean secureTagContents, String recipientKeyAlias,              String xmlCipherAlgorithm, String keyCipherAlgorithm);1376034290;@deprecated  use {@link #XMLSecurityDataFormat(String, Map, boolean, String, String, String, String)} or_{@link #XMLSecurityDataFormat(String, Map, boolean, String, String, String, KeyStoreParameters)} instead.;@Deprecated_    public XMLSecurityDataFormat(String secureTag, boolean secureTagContents, String recipientKeyAlias, _            String xmlCipherAlgorithm, String keyCipherAlgorithm) {_        this()__        this.setSecureTag(secureTag)__        this.setSecureTagContents(secureTagContents)__        this.setXmlCipherAlgorithm(xmlCipherAlgorithm)__        this.setRecipientKeyAlias(recipientKeyAlias)__        this.setKeyCipherAlgorithm(keyCipherAlgorithm)__    };deprecated,use,link,xmlsecurity,data,format,string,map,boolean,string,string,string,string,or,link,xmlsecurity,data,format,string,map,boolean,string,string,string,key,store,parameters,instead;deprecated,public,xmlsecurity,data,format,string,secure,tag,boolean,secure,tag,contents,string,recipient,key,alias,string,xml,cipher,algorithm,string,key,cipher,algorithm,this,this,set,secure,tag,secure,tag,this,set,secure,tag,contents,secure,tag,contents,this,set,xml,cipher,algorithm,xml,cipher,algorithm,this,set,recipient,key,alias,recipient,key,alias,this,set,key,cipher,algorithm,key,cipher,algorithm
XMLSecurityDataFormat -> @Deprecated     public XMLSecurityDataFormat(String secureTag, boolean secureTagContents, String recipientKeyAlias,              String xmlCipherAlgorithm, String keyCipherAlgorithm);1376477110;@deprecated  use {@link #XMLSecurityDataFormat(String, Map, boolean, String, String, String, String)} or_{@link #XMLSecurityDataFormat(String, Map, boolean, String, String, String, KeyStoreParameters)} instead.;@Deprecated_    public XMLSecurityDataFormat(String secureTag, boolean secureTagContents, String recipientKeyAlias, _            String xmlCipherAlgorithm, String keyCipherAlgorithm) {_        this()__        this.setSecureTag(secureTag)__        this.setSecureTagContents(secureTagContents)__        this.setXmlCipherAlgorithm(xmlCipherAlgorithm)__        this.setRecipientKeyAlias(recipientKeyAlias)__        this.setKeyCipherAlgorithm(keyCipherAlgorithm)__    };deprecated,use,link,xmlsecurity,data,format,string,map,boolean,string,string,string,string,or,link,xmlsecurity,data,format,string,map,boolean,string,string,string,key,store,parameters,instead;deprecated,public,xmlsecurity,data,format,string,secure,tag,boolean,secure,tag,contents,string,recipient,key,alias,string,xml,cipher,algorithm,string,key,cipher,algorithm,this,this,set,secure,tag,secure,tag,this,set,secure,tag,contents,secure,tag,contents,this,set,xml,cipher,algorithm,xml,cipher,algorithm,this,set,recipient,key,alias,recipient,key,alias,this,set,key,cipher,algorithm,key,cipher,algorithm
XMLSecurityDataFormat -> @Deprecated     public XMLSecurityDataFormat(String secureTag, boolean secureTagContents, String recipientKeyAlias,              String xmlCipherAlgorithm, String keyCipherAlgorithm);1376632954;@deprecated  use {@link #XMLSecurityDataFormat(String, Map, boolean, String, String, String, String)} or_{@link #XMLSecurityDataFormat(String, Map, boolean, String, String, String, KeyStoreParameters)} instead.;@Deprecated_    public XMLSecurityDataFormat(String secureTag, boolean secureTagContents, String recipientKeyAlias, _            String xmlCipherAlgorithm, String keyCipherAlgorithm) {_        this()__        this.setSecureTag(secureTag)__        this.setSecureTagContents(secureTagContents)__        this.setXmlCipherAlgorithm(xmlCipherAlgorithm)__        this.setRecipientKeyAlias(recipientKeyAlias)__        this.setKeyCipherAlgorithm(keyCipherAlgorithm)__    };deprecated,use,link,xmlsecurity,data,format,string,map,boolean,string,string,string,string,or,link,xmlsecurity,data,format,string,map,boolean,string,string,string,key,store,parameters,instead;deprecated,public,xmlsecurity,data,format,string,secure,tag,boolean,secure,tag,contents,string,recipient,key,alias,string,xml,cipher,algorithm,string,key,cipher,algorithm,this,this,set,secure,tag,secure,tag,this,set,secure,tag,contents,secure,tag,contents,this,set,xml,cipher,algorithm,xml,cipher,algorithm,this,set,recipient,key,alias,recipient,key,alias,this,set,key,cipher,algorithm,key,cipher,algorithm
XMLSecurityDataFormat -> @Deprecated     public XMLSecurityDataFormat(String secureTag, boolean secureTagContents, String recipientKeyAlias,              String xmlCipherAlgorithm, String keyCipherAlgorithm);1388443957;@deprecated  use {@link #XMLSecurityDataFormat(String, Map, boolean, String, String, String, String)} or_{@link #XMLSecurityDataFormat(String, Map, boolean, String, String, String, KeyStoreParameters)} instead.;@Deprecated_    public XMLSecurityDataFormat(String secureTag, boolean secureTagContents, String recipientKeyAlias, _            String xmlCipherAlgorithm, String keyCipherAlgorithm) {_        this()__        this.setSecureTag(secureTag)__        this.setSecureTagContents(secureTagContents)__        this.setXmlCipherAlgorithm(xmlCipherAlgorithm)__        this.setRecipientKeyAlias(recipientKeyAlias)__        this.setKeyCipherAlgorithm(keyCipherAlgorithm)__    };deprecated,use,link,xmlsecurity,data,format,string,map,boolean,string,string,string,string,or,link,xmlsecurity,data,format,string,map,boolean,string,string,string,key,store,parameters,instead;deprecated,public,xmlsecurity,data,format,string,secure,tag,boolean,secure,tag,contents,string,recipient,key,alias,string,xml,cipher,algorithm,string,key,cipher,algorithm,this,this,set,secure,tag,secure,tag,this,set,secure,tag,contents,secure,tag,contents,this,set,xml,cipher,algorithm,xml,cipher,algorithm,this,set,recipient,key,alias,recipient,key,alias,this,set,key,cipher,algorithm,key,cipher,algorithm
XMLSecurityDataFormat -> @Deprecated     public XMLSecurityDataFormat(String secureTag, boolean secureTagContents, String recipientKeyAlias,              String xmlCipherAlgorithm, String keyCipherAlgorithm);1415211488;@deprecated  use {@link #XMLSecurityDataFormat(String, Map, boolean, String, String, String, String)} or_{@link #XMLSecurityDataFormat(String, Map, boolean, String, String, String, KeyStoreParameters)} instead.;@Deprecated_    public XMLSecurityDataFormat(String secureTag, boolean secureTagContents, String recipientKeyAlias, _            String xmlCipherAlgorithm, String keyCipherAlgorithm) {_        this()__        this.setSecureTag(secureTag)__        this.setSecureTagContents(secureTagContents)__        this.setXmlCipherAlgorithm(xmlCipherAlgorithm)__        this.setRecipientKeyAlias(recipientKeyAlias)__        this.setKeyCipherAlgorithm(keyCipherAlgorithm)__    };deprecated,use,link,xmlsecurity,data,format,string,map,boolean,string,string,string,string,or,link,xmlsecurity,data,format,string,map,boolean,string,string,string,key,store,parameters,instead;deprecated,public,xmlsecurity,data,format,string,secure,tag,boolean,secure,tag,contents,string,recipient,key,alias,string,xml,cipher,algorithm,string,key,cipher,algorithm,this,this,set,secure,tag,secure,tag,this,set,secure,tag,contents,secure,tag,contents,this,set,xml,cipher,algorithm,xml,cipher,algorithm,this,set,recipient,key,alias,recipient,key,alias,this,set,key,cipher,algorithm,key,cipher,algorithm
XMLSecurityDataFormat -> @Deprecated     public XMLSecurityDataFormat(String secureTag, boolean secureTagContents, String recipientKeyAlias,              String xmlCipherAlgorithm, String keyCipherAlgorithm);1415877369;@deprecated  use {@link #XMLSecurityDataFormat(String, Map, boolean, String, String, String, String)} or_{@link #XMLSecurityDataFormat(String, Map, boolean, String, String, String, KeyStoreParameters)} instead.;@Deprecated_    public XMLSecurityDataFormat(String secureTag, boolean secureTagContents, String recipientKeyAlias, _            String xmlCipherAlgorithm, String keyCipherAlgorithm) {_        this()__        this.setSecureTag(secureTag)__        this.setSecureTagContents(secureTagContents)__        this.setXmlCipherAlgorithm(xmlCipherAlgorithm)__        this.setRecipientKeyAlias(recipientKeyAlias)__        this.setKeyCipherAlgorithm(keyCipherAlgorithm)__    };deprecated,use,link,xmlsecurity,data,format,string,map,boolean,string,string,string,string,or,link,xmlsecurity,data,format,string,map,boolean,string,string,string,key,store,parameters,instead;deprecated,public,xmlsecurity,data,format,string,secure,tag,boolean,secure,tag,contents,string,recipient,key,alias,string,xml,cipher,algorithm,string,key,cipher,algorithm,this,this,set,secure,tag,secure,tag,this,set,secure,tag,contents,secure,tag,contents,this,set,xml,cipher,algorithm,xml,cipher,algorithm,this,set,recipient,key,alias,recipient,key,alias,this,set,key,cipher,algorithm,key,cipher,algorithm
XMLSecurityDataFormat -> @Deprecated     public XMLSecurityDataFormat(String secureTag, boolean secureTagContents, String recipientKeyAlias,              String xmlCipherAlgorithm, String keyCipherAlgorithm);1417521716;@deprecated  use {@link #XMLSecurityDataFormat(String, Map, boolean, String, String, String, String)} or_{@link #XMLSecurityDataFormat(String, Map, boolean, String, String, String, KeyStoreParameters)} instead.;@Deprecated_    public XMLSecurityDataFormat(String secureTag, boolean secureTagContents, String recipientKeyAlias, _            String xmlCipherAlgorithm, String keyCipherAlgorithm) {_        this()__        this.setSecureTag(secureTag)__        this.setSecureTagContents(secureTagContents)__        this.setXmlCipherAlgorithm(xmlCipherAlgorithm)__        this.setRecipientKeyAlias(recipientKeyAlias)__        this.setKeyCipherAlgorithm(keyCipherAlgorithm)__    };deprecated,use,link,xmlsecurity,data,format,string,map,boolean,string,string,string,string,or,link,xmlsecurity,data,format,string,map,boolean,string,string,string,key,store,parameters,instead;deprecated,public,xmlsecurity,data,format,string,secure,tag,boolean,secure,tag,contents,string,recipient,key,alias,string,xml,cipher,algorithm,string,key,cipher,algorithm,this,this,set,secure,tag,secure,tag,this,set,secure,tag,contents,secure,tag,contents,this,set,xml,cipher,algorithm,xml,cipher,algorithm,this,set,recipient,key,alias,recipient,key,alias,this,set,key,cipher,algorithm,key,cipher,algorithm
XMLSecurityDataFormat -> @Deprecated     public XMLSecurityDataFormat(String secureTag, boolean secureTagContents, String recipientKeyAlias,              String xmlCipherAlgorithm, String keyCipherAlgorithm);1417572756;@deprecated  use {@link #XMLSecurityDataFormat(String, Map, boolean, String, String, String, String)} or_{@link #XMLSecurityDataFormat(String, Map, boolean, String, String, String, KeyStoreParameters)} instead.;@Deprecated_    public XMLSecurityDataFormat(String secureTag, boolean secureTagContents, String recipientKeyAlias, _            String xmlCipherAlgorithm, String keyCipherAlgorithm) {_        this()__        this.setSecureTag(secureTag)__        this.setSecureTagContents(secureTagContents)__        this.setXmlCipherAlgorithm(xmlCipherAlgorithm)__        this.setRecipientKeyAlias(recipientKeyAlias)__        this.setKeyCipherAlgorithm(keyCipherAlgorithm)__    };deprecated,use,link,xmlsecurity,data,format,string,map,boolean,string,string,string,string,or,link,xmlsecurity,data,format,string,map,boolean,string,string,string,key,store,parameters,instead;deprecated,public,xmlsecurity,data,format,string,secure,tag,boolean,secure,tag,contents,string,recipient,key,alias,string,xml,cipher,algorithm,string,key,cipher,algorithm,this,this,set,secure,tag,secure,tag,this,set,secure,tag,contents,secure,tag,contents,this,set,xml,cipher,algorithm,xml,cipher,algorithm,this,set,recipient,key,alias,recipient,key,alias,this,set,key,cipher,algorithm,key,cipher,algorithm
XMLSecurityDataFormat -> @Deprecated     public XMLSecurityDataFormat(String secureTag, boolean secureTagContents, String recipientKeyAlias,              String xmlCipherAlgorithm, String keyCipherAlgorithm);1443094318;@deprecated  use {@link #XMLSecurityDataFormat(String, Map, boolean, String, String, String, String)} or_{@link #XMLSecurityDataFormat(String, Map, boolean, String, String, String, KeyStoreParameters)} instead.;@Deprecated_    public XMLSecurityDataFormat(String secureTag, boolean secureTagContents, String recipientKeyAlias, _            String xmlCipherAlgorithm, String keyCipherAlgorithm) {_        this()__        this.setSecureTag(secureTag)__        this.setSecureTagContents(secureTagContents)__        this.setXmlCipherAlgorithm(xmlCipherAlgorithm)__        this.setRecipientKeyAlias(recipientKeyAlias)__        this.setKeyCipherAlgorithm(keyCipherAlgorithm)__    };deprecated,use,link,xmlsecurity,data,format,string,map,boolean,string,string,string,string,or,link,xmlsecurity,data,format,string,map,boolean,string,string,string,key,store,parameters,instead;deprecated,public,xmlsecurity,data,format,string,secure,tag,boolean,secure,tag,contents,string,recipient,key,alias,string,xml,cipher,algorithm,string,key,cipher,algorithm,this,this,set,secure,tag,secure,tag,this,set,secure,tag,contents,secure,tag,contents,this,set,xml,cipher,algorithm,xml,cipher,algorithm,this,set,recipient,key,alias,recipient,key,alias,this,set,key,cipher,algorithm,key,cipher,algorithm
XMLSecurityDataFormat -> @Deprecated     public XMLSecurityDataFormat(String secureTag, boolean secureTagContents, String recipientKeyAlias,              String xmlCipherAlgorithm, String keyCipherAlgorithm);1443168793;@deprecated  use {@link #XMLSecurityDataFormat(String, Map, boolean, String, String, String, String)} or_{@link #XMLSecurityDataFormat(String, Map, boolean, String, String, String, KeyStoreParameters)} instead.;@Deprecated_    public XMLSecurityDataFormat(String secureTag, boolean secureTagContents, String recipientKeyAlias, _            String xmlCipherAlgorithm, String keyCipherAlgorithm) {_        this()__        this.setSecureTag(secureTag)__        this.setSecureTagContents(secureTagContents)__        this.setXmlCipherAlgorithm(xmlCipherAlgorithm)__        this.setRecipientKeyAlias(recipientKeyAlias)__        this.setKeyCipherAlgorithm(keyCipherAlgorithm)__    };deprecated,use,link,xmlsecurity,data,format,string,map,boolean,string,string,string,string,or,link,xmlsecurity,data,format,string,map,boolean,string,string,string,key,store,parameters,instead;deprecated,public,xmlsecurity,data,format,string,secure,tag,boolean,secure,tag,contents,string,recipient,key,alias,string,xml,cipher,algorithm,string,key,cipher,algorithm,this,this,set,secure,tag,secure,tag,this,set,secure,tag,contents,secure,tag,contents,this,set,xml,cipher,algorithm,xml,cipher,algorithm,this,set,recipient,key,alias,recipient,key,alias,this,set,key,cipher,algorithm,key,cipher,algorithm
XMLSecurityDataFormat -> @Deprecated     public XMLSecurityDataFormat(String secureTag, boolean secureTagContents, String recipientKeyAlias,              String xmlCipherAlgorithm, String keyCipherAlgorithm);1445110748;@deprecated  use {@link #XMLSecurityDataFormat(String, Map, boolean, String, String, String, String)} or_{@link #XMLSecurityDataFormat(String, Map, boolean, String, String, String, KeyStoreParameters)} instead.;@Deprecated_    public XMLSecurityDataFormat(String secureTag, boolean secureTagContents, String recipientKeyAlias, _            String xmlCipherAlgorithm, String keyCipherAlgorithm) {_        this()__        this.setSecureTag(secureTag)__        this.setSecureTagContents(secureTagContents)__        this.setXmlCipherAlgorithm(xmlCipherAlgorithm)__        this.setRecipientKeyAlias(recipientKeyAlias)__        this.setKeyCipherAlgorithm(keyCipherAlgorithm)__    };deprecated,use,link,xmlsecurity,data,format,string,map,boolean,string,string,string,string,or,link,xmlsecurity,data,format,string,map,boolean,string,string,string,key,store,parameters,instead;deprecated,public,xmlsecurity,data,format,string,secure,tag,boolean,secure,tag,contents,string,recipient,key,alias,string,xml,cipher,algorithm,string,key,cipher,algorithm,this,this,set,secure,tag,secure,tag,this,set,secure,tag,contents,secure,tag,contents,this,set,xml,cipher,algorithm,xml,cipher,algorithm,this,set,recipient,key,alias,recipient,key,alias,this,set,key,cipher,algorithm,key,cipher,algorithm
XMLSecurityDataFormat -> @Deprecated     public XMLSecurityDataFormat(String secureTag, boolean secureTagContents, String recipientKeyAlias,              String xmlCipherAlgorithm, String keyCipherAlgorithm);1518772634;@deprecated  use {@link #XMLSecurityDataFormat(String, Map, boolean, String, String, String, String)} or_{@link #XMLSecurityDataFormat(String, Map, boolean, String, String, String, KeyStoreParameters)} instead.;@Deprecated_    public XMLSecurityDataFormat(String secureTag, boolean secureTagContents, String recipientKeyAlias, _            String xmlCipherAlgorithm, String keyCipherAlgorithm) {_        this()__        this.setSecureTag(secureTag)__        this.setSecureTagContents(secureTagContents)__        this.setXmlCipherAlgorithm(xmlCipherAlgorithm)__        this.setRecipientKeyAlias(recipientKeyAlias)__        this.setKeyCipherAlgorithm(keyCipherAlgorithm)__    };deprecated,use,link,xmlsecurity,data,format,string,map,boolean,string,string,string,string,or,link,xmlsecurity,data,format,string,map,boolean,string,string,string,key,store,parameters,instead;deprecated,public,xmlsecurity,data,format,string,secure,tag,boolean,secure,tag,contents,string,recipient,key,alias,string,xml,cipher,algorithm,string,key,cipher,algorithm,this,this,set,secure,tag,secure,tag,this,set,secure,tag,contents,secure,tag,contents,this,set,xml,cipher,algorithm,xml,cipher,algorithm,this,set,recipient,key,alias,recipient,key,alias,this,set,key,cipher,algorithm,key,cipher,algorithm
XMLSecurityDataFormat -> @Deprecated     public XMLSecurityDataFormat(String secureTag, boolean secureTagContents, String recipientKeyAlias,              String xmlCipherAlgorithm, String keyCipherAlgorithm);1532430683;@deprecated  use {@link #XMLSecurityDataFormat(String, Map, boolean, String, String, String, String)} or_{@link #XMLSecurityDataFormat(String, Map, boolean, String, String, String, KeyStoreParameters)} instead.;@Deprecated_    public XMLSecurityDataFormat(String secureTag, boolean secureTagContents, String recipientKeyAlias, _            String xmlCipherAlgorithm, String keyCipherAlgorithm) {_        this()__        this.setSecureTag(secureTag)__        this.setSecureTagContents(secureTagContents)__        this.setXmlCipherAlgorithm(xmlCipherAlgorithm)__        this.setRecipientKeyAlias(recipientKeyAlias)__        this.setKeyCipherAlgorithm(keyCipherAlgorithm)__    };deprecated,use,link,xmlsecurity,data,format,string,map,boolean,string,string,string,string,or,link,xmlsecurity,data,format,string,map,boolean,string,string,string,key,store,parameters,instead;deprecated,public,xmlsecurity,data,format,string,secure,tag,boolean,secure,tag,contents,string,recipient,key,alias,string,xml,cipher,algorithm,string,key,cipher,algorithm,this,this,set,secure,tag,secure,tag,this,set,secure,tag,contents,secure,tag,contents,this,set,xml,cipher,algorithm,xml,cipher,algorithm,this,set,recipient,key,alias,recipient,key,alias,this,set,key,cipher,algorithm,key,cipher,algorithm
XMLSecurityDataFormat -> @Deprecated     public XMLSecurityDataFormat(String secureTag, boolean secureTagContents, String recipientKeyAlias,              String xmlCipherAlgorithm, String keyCipherAlgorithm);1537290824;@deprecated  use {@link #XMLSecurityDataFormat(String, Map, boolean, String, String, String, String)} or_{@link #XMLSecurityDataFormat(String, Map, boolean, String, String, String, KeyStoreParameters)} instead.;@Deprecated_    public XMLSecurityDataFormat(String secureTag, boolean secureTagContents, String recipientKeyAlias, _            String xmlCipherAlgorithm, String keyCipherAlgorithm) {_        this()__        this.setSecureTag(secureTag)__        this.setSecureTagContents(secureTagContents)__        this.setXmlCipherAlgorithm(xmlCipherAlgorithm)__        this.setRecipientKeyAlias(recipientKeyAlias)__        this.setKeyCipherAlgorithm(keyCipherAlgorithm)__    };deprecated,use,link,xmlsecurity,data,format,string,map,boolean,string,string,string,string,or,link,xmlsecurity,data,format,string,map,boolean,string,string,string,key,store,parameters,instead;deprecated,public,xmlsecurity,data,format,string,secure,tag,boolean,secure,tag,contents,string,recipient,key,alias,string,xml,cipher,algorithm,string,key,cipher,algorithm,this,this,set,secure,tag,secure,tag,this,set,secure,tag,contents,secure,tag,contents,this,set,xml,cipher,algorithm,xml,cipher,algorithm,this,set,recipient,key,alias,recipient,key,alias,this,set,key,cipher,algorithm,key,cipher,algorithm
XMLSecurityDataFormat -> @Deprecated     public XMLSecurityDataFormat(String secureTag, boolean secureTagContents, String recipientKeyAlias,              String xmlCipherAlgorithm, String keyCipherAlgorithm);1540108158;@deprecated  use {@link #XMLSecurityDataFormat(String, Map, boolean, String, String, String, String)} or_{@link #XMLSecurityDataFormat(String, Map, boolean, String, String, String, KeyStoreParameters)} instead.;@Deprecated_    public XMLSecurityDataFormat(String secureTag, boolean secureTagContents, String recipientKeyAlias, _            String xmlCipherAlgorithm, String keyCipherAlgorithm) {_        this()__        this.setSecureTag(secureTag)__        this.setSecureTagContents(secureTagContents)__        this.setXmlCipherAlgorithm(xmlCipherAlgorithm)__        this.setRecipientKeyAlias(recipientKeyAlias)__        this.setKeyCipherAlgorithm(keyCipherAlgorithm)__    };deprecated,use,link,xmlsecurity,data,format,string,map,boolean,string,string,string,string,or,link,xmlsecurity,data,format,string,map,boolean,string,string,string,key,store,parameters,instead;deprecated,public,xmlsecurity,data,format,string,secure,tag,boolean,secure,tag,contents,string,recipient,key,alias,string,xml,cipher,algorithm,string,key,cipher,algorithm,this,this,set,secure,tag,secure,tag,this,set,secure,tag,contents,secure,tag,contents,this,set,xml,cipher,algorithm,xml,cipher,algorithm,this,set,recipient,key,alias,recipient,key,alias,this,set,key,cipher,algorithm,key,cipher,algorithm
XMLSecurityDataFormat -> @Deprecated     public KeyStore getTrustStore();1316532283;@deprecated  Will change to private access in the future. Use {@link #getKeyOrTrustStoreParameters()} instead.;@Deprecated_    public KeyStore getTrustStore() {_        if (trustStore == null && this.keyOrTrustStoreParameters != null) {_            try {_                trustStore = keyOrTrustStoreParameters.createKeyStore()__            } catch (Exception e) {_                throw new RuntimeException("Unable to create KeyStore with configured KeyStoreParameters. " + e.getMessage(), e)__            }_        }_        return this.trustStore__    };deprecated,will,change,to,private,access,in,the,future,use,link,get,key,or,trust,store,parameters,instead;deprecated,public,key,store,get,trust,store,if,trust,store,null,this,key,or,trust,store,parameters,null,try,trust,store,key,or,trust,store,parameters,create,key,store,catch,exception,e,throw,new,runtime,exception,unable,to,create,key,store,with,configured,key,store,parameters,e,get,message,e,return,this,trust,store
XMLSecurityDataFormat -> @Deprecated     public KeyStore getTrustStore();1336642311;@deprecated  Will change to private access in the future. Use {@link #getKeyOrTrustStoreParameters()} instead.;@Deprecated_    public KeyStore getTrustStore() {_        if (trustStore == null && this.keyOrTrustStoreParameters != null) {_            try {_                trustStore = keyOrTrustStoreParameters.createKeyStore()__            } catch (Exception e) {_                throw new RuntimeException("Unable to create KeyStore with configured KeyStoreParameters. " + e.getMessage(), e)__            }_        }_        return this.trustStore__    };deprecated,will,change,to,private,access,in,the,future,use,link,get,key,or,trust,store,parameters,instead;deprecated,public,key,store,get,trust,store,if,trust,store,null,this,key,or,trust,store,parameters,null,try,trust,store,key,or,trust,store,parameters,create,key,store,catch,exception,e,throw,new,runtime,exception,unable,to,create,key,store,with,configured,key,store,parameters,e,get,message,e,return,this,trust,store
XMLSecurityDataFormat -> @Deprecated     public KeyStore getTrustStore();1342106539;@deprecated  Will change to private access in the future. Use {@link #getKeyOrTrustStoreParameters()} instead.;@Deprecated_    public KeyStore getTrustStore() {_        if (trustStore == null && this.keyOrTrustStoreParameters != null) {_            try {_                trustStore = keyOrTrustStoreParameters.createKeyStore()__            } catch (Exception e) {_                throw new RuntimeException("Unable to create KeyStore with configured KeyStoreParameters. " + e.getMessage(), e)__            }_        }_        return this.trustStore__    };deprecated,will,change,to,private,access,in,the,future,use,link,get,key,or,trust,store,parameters,instead;deprecated,public,key,store,get,trust,store,if,trust,store,null,this,key,or,trust,store,parameters,null,try,trust,store,key,or,trust,store,parameters,create,key,store,catch,exception,e,throw,new,runtime,exception,unable,to,create,key,store,with,configured,key,store,parameters,e,get,message,e,return,this,trust,store
XMLSecurityDataFormat -> @Deprecated     public KeyStore getTrustStore();1346229387;@deprecated  Will change to private access in the future. Use {@link #getKeyOrTrustStoreParameters()} instead.;@Deprecated_    public KeyStore getTrustStore() {_        if (trustStore == null && this.keyOrTrustStoreParameters != null) {_            try {_                trustStore = keyOrTrustStoreParameters.createKeyStore()__            } catch (Exception e) {_                throw new RuntimeException("Unable to create KeyStore with configured KeyStoreParameters. " + e.getMessage(), e)__            }_        }_        return this.trustStore__    };deprecated,will,change,to,private,access,in,the,future,use,link,get,key,or,trust,store,parameters,instead;deprecated,public,key,store,get,trust,store,if,trust,store,null,this,key,or,trust,store,parameters,null,try,trust,store,key,or,trust,store,parameters,create,key,store,catch,exception,e,throw,new,runtime,exception,unable,to,create,key,store,with,configured,key,store,parameters,e,get,message,e,return,this,trust,store
XMLSecurityDataFormat -> @Deprecated     public KeyStore getTrustStore();1358954767;@deprecated  Will change to private access in the future. Use {@link #getKeyOrTrustStoreParameters()} instead.;@Deprecated_    public KeyStore getTrustStore() {_        if (trustStore == null && this.keyOrTrustStoreParameters != null) {_            try {_                trustStore = keyOrTrustStoreParameters.createKeyStore()__            } catch (Exception e) {_                throw new RuntimeException("Unable to create KeyStore with configured KeyStoreParameters. " + e.getMessage(), e)__            }_        }_        return this.trustStore__    };deprecated,will,change,to,private,access,in,the,future,use,link,get,key,or,trust,store,parameters,instead;deprecated,public,key,store,get,trust,store,if,trust,store,null,this,key,or,trust,store,parameters,null,try,trust,store,key,or,trust,store,parameters,create,key,store,catch,exception,e,throw,new,runtime,exception,unable,to,create,key,store,with,configured,key,store,parameters,e,get,message,e,return,this,trust,store
XMLSecurityDataFormat -> @Deprecated     public KeyStore getTrustStore();1375894613;@deprecated  Will change to private access in the future. Use {@link #getKeyOrTrustStoreParameters()} instead.;@Deprecated_    public KeyStore getTrustStore() {_        if (trustStore == null && this.keyOrTrustStoreParameters != null) {_            try {_                trustStore = keyOrTrustStoreParameters.createKeyStore()__            } catch (Exception e) {_                throw new RuntimeException("Unable to create KeyStore with configured KeyStoreParameters. " + e.getMessage(), e)__            }_        }_        return this.trustStore__    };deprecated,will,change,to,private,access,in,the,future,use,link,get,key,or,trust,store,parameters,instead;deprecated,public,key,store,get,trust,store,if,trust,store,null,this,key,or,trust,store,parameters,null,try,trust,store,key,or,trust,store,parameters,create,key,store,catch,exception,e,throw,new,runtime,exception,unable,to,create,key,store,with,configured,key,store,parameters,e,get,message,e,return,this,trust,store
XMLSecurityDataFormat -> @Deprecated     public KeyStore getTrustStore();1376034290;@deprecated  Will change to private access in the future. Use {@link #getKeyOrTrustStoreParameters()} instead.;@Deprecated_    public KeyStore getTrustStore() {_        if (trustStore == null && this.keyOrTrustStoreParameters != null) {_            try {_                trustStore = keyOrTrustStoreParameters.createKeyStore()__            } catch (Exception e) {_                throw new RuntimeException("Unable to create KeyStore with configured KeyStoreParameters. " + e.getMessage(), e)__            }_        }_        return this.trustStore__    };deprecated,will,change,to,private,access,in,the,future,use,link,get,key,or,trust,store,parameters,instead;deprecated,public,key,store,get,trust,store,if,trust,store,null,this,key,or,trust,store,parameters,null,try,trust,store,key,or,trust,store,parameters,create,key,store,catch,exception,e,throw,new,runtime,exception,unable,to,create,key,store,with,configured,key,store,parameters,e,get,message,e,return,this,trust,store
XMLSecurityDataFormat -> @Deprecated     public KeyStore getTrustStore();1376477110;@deprecated  Will change to private access in the future. Use {@link #getKeyOrTrustStoreParameters()} instead.;@Deprecated_    public KeyStore getTrustStore() {_        if (trustStore == null && this.keyOrTrustStoreParameters != null) {_            try {_                trustStore = keyOrTrustStoreParameters.createKeyStore()__            } catch (Exception e) {_                throw new RuntimeException("Unable to create KeyStore with configured KeyStoreParameters. " + e.getMessage(), e)__            }_        }_        return this.trustStore__    };deprecated,will,change,to,private,access,in,the,future,use,link,get,key,or,trust,store,parameters,instead;deprecated,public,key,store,get,trust,store,if,trust,store,null,this,key,or,trust,store,parameters,null,try,trust,store,key,or,trust,store,parameters,create,key,store,catch,exception,e,throw,new,runtime,exception,unable,to,create,key,store,with,configured,key,store,parameters,e,get,message,e,return,this,trust,store
XMLSecurityDataFormat -> @Deprecated     public KeyStore getTrustStore();1376632954;@deprecated  Will change to private access in the future. Use {@link #getKeyOrTrustStoreParameters()} instead.;@Deprecated_    public KeyStore getTrustStore() {_        if (trustStore == null && this.keyOrTrustStoreParameters != null) {_            try {_                trustStore = keyOrTrustStoreParameters.createKeyStore()__            } catch (Exception e) {_                throw new RuntimeException("Unable to create KeyStore with configured KeyStoreParameters. " + e.getMessage(), e)__            }_        }_        return this.trustStore__    };deprecated,will,change,to,private,access,in,the,future,use,link,get,key,or,trust,store,parameters,instead;deprecated,public,key,store,get,trust,store,if,trust,store,null,this,key,or,trust,store,parameters,null,try,trust,store,key,or,trust,store,parameters,create,key,store,catch,exception,e,throw,new,runtime,exception,unable,to,create,key,store,with,configured,key,store,parameters,e,get,message,e,return,this,trust,store
XMLSecurityDataFormat -> @Deprecated     public KeyStore getTrustStore();1388443957;@deprecated  Will change to private access in the future. Use {@link #getKeyOrTrustStoreParameters()} instead.;@Deprecated_    public KeyStore getTrustStore() {_        if (trustStore == null && this.keyOrTrustStoreParameters != null) {_            try {_                trustStore = keyOrTrustStoreParameters.createKeyStore()__            } catch (Exception e) {_                throw new RuntimeException("Unable to create KeyStore with configured KeyStoreParameters. " + e.getMessage(), e)__            }_        }_        return this.trustStore__    };deprecated,will,change,to,private,access,in,the,future,use,link,get,key,or,trust,store,parameters,instead;deprecated,public,key,store,get,trust,store,if,trust,store,null,this,key,or,trust,store,parameters,null,try,trust,store,key,or,trust,store,parameters,create,key,store,catch,exception,e,throw,new,runtime,exception,unable,to,create,key,store,with,configured,key,store,parameters,e,get,message,e,return,this,trust,store
XMLSecurityDataFormat -> @Deprecated     public KeyStore getTrustStore();1415211488;@deprecated  Will change to private access in the future. Use {@link #getKeyOrTrustStoreParameters()} instead.;@Deprecated_    public KeyStore getTrustStore() {_        if (trustStore == null && this.keyOrTrustStoreParameters != null) {_            try {_                trustStore = keyOrTrustStoreParameters.createKeyStore()__            } catch (Exception e) {_                throw new RuntimeException("Unable to create KeyStore with configured KeyStoreParameters. " + e.getMessage(), e)__            }_        }_        return this.trustStore__    };deprecated,will,change,to,private,access,in,the,future,use,link,get,key,or,trust,store,parameters,instead;deprecated,public,key,store,get,trust,store,if,trust,store,null,this,key,or,trust,store,parameters,null,try,trust,store,key,or,trust,store,parameters,create,key,store,catch,exception,e,throw,new,runtime,exception,unable,to,create,key,store,with,configured,key,store,parameters,e,get,message,e,return,this,trust,store
XMLSecurityDataFormat -> @Deprecated     public KeyStore getTrustStore();1415877369;@deprecated  Will change to private access in the future. Use {@link #getKeyOrTrustStoreParameters()} instead.;@Deprecated_    public KeyStore getTrustStore() {_        if (trustStore == null && this.keyOrTrustStoreParameters != null) {_            try {_                trustStore = keyOrTrustStoreParameters.createKeyStore()__            } catch (Exception e) {_                throw new RuntimeException("Unable to create KeyStore with configured KeyStoreParameters. " + e.getMessage(), e)__            }_        }_        return this.trustStore__    };deprecated,will,change,to,private,access,in,the,future,use,link,get,key,or,trust,store,parameters,instead;deprecated,public,key,store,get,trust,store,if,trust,store,null,this,key,or,trust,store,parameters,null,try,trust,store,key,or,trust,store,parameters,create,key,store,catch,exception,e,throw,new,runtime,exception,unable,to,create,key,store,with,configured,key,store,parameters,e,get,message,e,return,this,trust,store
XMLSecurityDataFormat -> @Deprecated     public KeyStore getTrustStore();1417521716;@deprecated  Will change to private access in the future. Use {@link #getKeyOrTrustStoreParameters()} instead.;@Deprecated_    public KeyStore getTrustStore() {_        if (trustStore == null && this.keyOrTrustStoreParameters != null) {_            try {_                trustStore = keyOrTrustStoreParameters.createKeyStore()__            } catch (Exception e) {_                throw new RuntimeException("Unable to create KeyStore with configured KeyStoreParameters. " + e.getMessage(), e)__            }_        }_        return this.trustStore__    };deprecated,will,change,to,private,access,in,the,future,use,link,get,key,or,trust,store,parameters,instead;deprecated,public,key,store,get,trust,store,if,trust,store,null,this,key,or,trust,store,parameters,null,try,trust,store,key,or,trust,store,parameters,create,key,store,catch,exception,e,throw,new,runtime,exception,unable,to,create,key,store,with,configured,key,store,parameters,e,get,message,e,return,this,trust,store
XMLSecurityDataFormat -> @Deprecated     public KeyStore getTrustStore();1417572756;@deprecated  Will change to private access in the future. Use {@link #getKeyOrTrustStoreParameters()} instead.;@Deprecated_    public KeyStore getTrustStore() {_        if (trustStore == null && this.keyOrTrustStoreParameters != null) {_            try {_                trustStore = keyOrTrustStoreParameters.createKeyStore()__            } catch (Exception e) {_                throw new RuntimeException("Unable to create KeyStore with configured KeyStoreParameters. " + e.getMessage(), e)__            }_        }_        return this.trustStore__    };deprecated,will,change,to,private,access,in,the,future,use,link,get,key,or,trust,store,parameters,instead;deprecated,public,key,store,get,trust,store,if,trust,store,null,this,key,or,trust,store,parameters,null,try,trust,store,key,or,trust,store,parameters,create,key,store,catch,exception,e,throw,new,runtime,exception,unable,to,create,key,store,with,configured,key,store,parameters,e,get,message,e,return,this,trust,store
XMLSecurityDataFormat -> @Deprecated     public KeyStore getTrustStore();1443094318;@deprecated  Will change to private access in the future. Use {@link #getKeyOrTrustStoreParameters()} instead.;@Deprecated_    public KeyStore getTrustStore() {_        if (trustStore == null && this.keyOrTrustStoreParameters != null) {_            try {_                trustStore = keyOrTrustStoreParameters.createKeyStore()__            } catch (Exception e) {_                throw new RuntimeException("Unable to create KeyStore with configured KeyStoreParameters. " + e.getMessage(), e)__            }_        }_        return this.trustStore__    };deprecated,will,change,to,private,access,in,the,future,use,link,get,key,or,trust,store,parameters,instead;deprecated,public,key,store,get,trust,store,if,trust,store,null,this,key,or,trust,store,parameters,null,try,trust,store,key,or,trust,store,parameters,create,key,store,catch,exception,e,throw,new,runtime,exception,unable,to,create,key,store,with,configured,key,store,parameters,e,get,message,e,return,this,trust,store
XMLSecurityDataFormat -> @Deprecated     public KeyStore getTrustStore();1443168793;@deprecated  Will change to private access in the future. Use {@link #getKeyOrTrustStoreParameters()} instead.;@Deprecated_    public KeyStore getTrustStore() {_        if (trustStore == null && this.keyOrTrustStoreParameters != null) {_            try {_                trustStore = keyOrTrustStoreParameters.createKeyStore()__            } catch (Exception e) {_                throw new RuntimeException("Unable to create KeyStore with configured KeyStoreParameters. " + e.getMessage(), e)__            }_        }_        return this.trustStore__    };deprecated,will,change,to,private,access,in,the,future,use,link,get,key,or,trust,store,parameters,instead;deprecated,public,key,store,get,trust,store,if,trust,store,null,this,key,or,trust,store,parameters,null,try,trust,store,key,or,trust,store,parameters,create,key,store,catch,exception,e,throw,new,runtime,exception,unable,to,create,key,store,with,configured,key,store,parameters,e,get,message,e,return,this,trust,store
XMLSecurityDataFormat -> @Deprecated     public KeyStore getTrustStore();1445110748;@deprecated  Will change to private access in the future. Use {@link #getKeyOrTrustStoreParameters()} instead.;@Deprecated_    public KeyStore getTrustStore() {_        if (trustStore == null && this.keyOrTrustStoreParameters != null) {_            try {_                trustStore = keyOrTrustStoreParameters.createKeyStore()__            } catch (Exception e) {_                throw new RuntimeException("Unable to create KeyStore with configured KeyStoreParameters. " + e.getMessage(), e)__            }_        }_        return this.trustStore__    };deprecated,will,change,to,private,access,in,the,future,use,link,get,key,or,trust,store,parameters,instead;deprecated,public,key,store,get,trust,store,if,trust,store,null,this,key,or,trust,store,parameters,null,try,trust,store,key,or,trust,store,parameters,create,key,store,catch,exception,e,throw,new,runtime,exception,unable,to,create,key,store,with,configured,key,store,parameters,e,get,message,e,return,this,trust,store
XMLSecurityDataFormat -> @Deprecated     public KeyStore getTrustStore();1518772634;@deprecated  Will change to private access in the future. Use {@link #getKeyOrTrustStoreParameters()} instead.;@Deprecated_    public KeyStore getTrustStore() {_        if (trustStore == null && this.keyOrTrustStoreParameters != null) {_            try {_                trustStore = keyOrTrustStoreParameters.createKeyStore()__            } catch (Exception e) {_                throw new RuntimeException("Unable to create KeyStore with configured KeyStoreParameters. " + e.getMessage(), e)__            }_        }_        return this.trustStore__    };deprecated,will,change,to,private,access,in,the,future,use,link,get,key,or,trust,store,parameters,instead;deprecated,public,key,store,get,trust,store,if,trust,store,null,this,key,or,trust,store,parameters,null,try,trust,store,key,or,trust,store,parameters,create,key,store,catch,exception,e,throw,new,runtime,exception,unable,to,create,key,store,with,configured,key,store,parameters,e,get,message,e,return,this,trust,store
XMLSecurityDataFormat -> @Deprecated     public KeyStore getTrustStore();1532430683;@deprecated  Will change to private access in the future. Use {@link #getKeyOrTrustStoreParameters()} instead.;@Deprecated_    public KeyStore getTrustStore() {_        if (trustStore == null && this.keyOrTrustStoreParameters != null) {_            try {_                trustStore = keyOrTrustStoreParameters.createKeyStore()__            } catch (Exception e) {_                throw new RuntimeException("Unable to create KeyStore with configured KeyStoreParameters. " + e.getMessage(), e)__            }_        }_        return this.trustStore__    };deprecated,will,change,to,private,access,in,the,future,use,link,get,key,or,trust,store,parameters,instead;deprecated,public,key,store,get,trust,store,if,trust,store,null,this,key,or,trust,store,parameters,null,try,trust,store,key,or,trust,store,parameters,create,key,store,catch,exception,e,throw,new,runtime,exception,unable,to,create,key,store,with,configured,key,store,parameters,e,get,message,e,return,this,trust,store
XMLSecurityDataFormat -> @Deprecated     public KeyStore getTrustStore();1537290824;@deprecated  Will change to private access in the future. Use {@link #getKeyOrTrustStoreParameters()} instead.;@Deprecated_    public KeyStore getTrustStore() {_        if (trustStore == null && this.keyOrTrustStoreParameters != null) {_            try {_                trustStore = keyOrTrustStoreParameters.createKeyStore()__            } catch (Exception e) {_                throw new RuntimeException("Unable to create KeyStore with configured KeyStoreParameters. " + e.getMessage(), e)__            }_        }_        return this.trustStore__    };deprecated,will,change,to,private,access,in,the,future,use,link,get,key,or,trust,store,parameters,instead;deprecated,public,key,store,get,trust,store,if,trust,store,null,this,key,or,trust,store,parameters,null,try,trust,store,key,or,trust,store,parameters,create,key,store,catch,exception,e,throw,new,runtime,exception,unable,to,create,key,store,with,configured,key,store,parameters,e,get,message,e,return,this,trust,store
XMLSecurityDataFormat -> @Deprecated     public KeyStore getTrustStore();1540108158;@deprecated  Will change to private access in the future. Use {@link #getKeyOrTrustStoreParameters()} instead.;@Deprecated_    public KeyStore getTrustStore() {_        if (trustStore == null && this.keyOrTrustStoreParameters != null) {_            try {_                trustStore = keyOrTrustStoreParameters.createKeyStore()__            } catch (Exception e) {_                throw new RuntimeException("Unable to create KeyStore with configured KeyStoreParameters. " + e.getMessage(), e)__            }_        }_        return this.trustStore__    };deprecated,will,change,to,private,access,in,the,future,use,link,get,key,or,trust,store,parameters,instead;deprecated,public,key,store,get,trust,store,if,trust,store,null,this,key,or,trust,store,parameters,null,try,trust,store,key,or,trust,store,parameters,create,key,store,catch,exception,e,throw,new,runtime,exception,unable,to,create,key,store,with,configured,key,store,parameters,e,get,message,e,return,this,trust,store
XMLSecurityDataFormat -> @Deprecated     public String getTrustStorePassword();1316532283;@deprecated  Will change to private access in the future.  Use {@link #setKeyOrTrustStoreParameters()} instead.;@Deprecated_    public String getTrustStorePassword() {_        if (this.keyOrTrustStoreParameters != null) {_            return keyOrTrustStoreParameters.getPassword()__        }_        return this.trustStorePassword__    };deprecated,will,change,to,private,access,in,the,future,use,link,set,key,or,trust,store,parameters,instead;deprecated,public,string,get,trust,store,password,if,this,key,or,trust,store,parameters,null,return,key,or,trust,store,parameters,get,password,return,this,trust,store,password
XMLSecurityDataFormat -> @Deprecated     public String getTrustStorePassword();1336642311;@deprecated  Will change to private access in the future.  Use {@link #setKeyOrTrustStoreParameters()} instead.;@Deprecated_    public String getTrustStorePassword() {_        if (this.keyOrTrustStoreParameters != null) {_            return keyOrTrustStoreParameters.getPassword()__        }_        return this.trustStorePassword__    };deprecated,will,change,to,private,access,in,the,future,use,link,set,key,or,trust,store,parameters,instead;deprecated,public,string,get,trust,store,password,if,this,key,or,trust,store,parameters,null,return,key,or,trust,store,parameters,get,password,return,this,trust,store,password
XMLSecurityDataFormat -> @Deprecated     public String getTrustStorePassword();1342106539;@deprecated  Will change to private access in the future.  Use {@link #setKeyOrTrustStoreParameters()} instead.;@Deprecated_    public String getTrustStorePassword() {_        if (this.keyOrTrustStoreParameters != null) {_            return keyOrTrustStoreParameters.getPassword()__        }_        return this.trustStorePassword__    };deprecated,will,change,to,private,access,in,the,future,use,link,set,key,or,trust,store,parameters,instead;deprecated,public,string,get,trust,store,password,if,this,key,or,trust,store,parameters,null,return,key,or,trust,store,parameters,get,password,return,this,trust,store,password
XMLSecurityDataFormat -> @Deprecated     public String getTrustStorePassword();1346229387;@deprecated  Will change to private access in the future.  Use {@link #setKeyOrTrustStoreParameters()} instead.;@Deprecated_    public String getTrustStorePassword() {_        if (this.keyOrTrustStoreParameters != null) {_            return keyOrTrustStoreParameters.getPassword()__        }_        return this.trustStorePassword__    };deprecated,will,change,to,private,access,in,the,future,use,link,set,key,or,trust,store,parameters,instead;deprecated,public,string,get,trust,store,password,if,this,key,or,trust,store,parameters,null,return,key,or,trust,store,parameters,get,password,return,this,trust,store,password
XMLSecurityDataFormat -> @Deprecated     public String getTrustStorePassword();1358954767;@deprecated  Will change to private access in the future.  Use {@link #setKeyOrTrustStoreParameters()} instead.;@Deprecated_    public String getTrustStorePassword() {_        if (this.keyOrTrustStoreParameters != null) {_            return keyOrTrustStoreParameters.getPassword()__        }_        return this.trustStorePassword__    };deprecated,will,change,to,private,access,in,the,future,use,link,set,key,or,trust,store,parameters,instead;deprecated,public,string,get,trust,store,password,if,this,key,or,trust,store,parameters,null,return,key,or,trust,store,parameters,get,password,return,this,trust,store,password
XMLSecurityDataFormat -> @Deprecated     public String getTrustStorePassword();1375894613;@deprecated  Will change to private access in the future.  Use {@link #setKeyOrTrustStoreParameters()} instead.;@Deprecated_    public String getTrustStorePassword() {_        if (this.keyOrTrustStoreParameters != null) {_            return keyOrTrustStoreParameters.getPassword()__        }_        return this.trustStorePassword__    };deprecated,will,change,to,private,access,in,the,future,use,link,set,key,or,trust,store,parameters,instead;deprecated,public,string,get,trust,store,password,if,this,key,or,trust,store,parameters,null,return,key,or,trust,store,parameters,get,password,return,this,trust,store,password
XMLSecurityDataFormat -> @Deprecated     public String getTrustStorePassword();1376034290;@deprecated  Will change to private access in the future.  Use {@link #setKeyOrTrustStoreParameters()} instead.;@Deprecated_    public String getTrustStorePassword() {_        if (this.keyOrTrustStoreParameters != null) {_            return keyOrTrustStoreParameters.getPassword()__        }_        return this.trustStorePassword__    };deprecated,will,change,to,private,access,in,the,future,use,link,set,key,or,trust,store,parameters,instead;deprecated,public,string,get,trust,store,password,if,this,key,or,trust,store,parameters,null,return,key,or,trust,store,parameters,get,password,return,this,trust,store,password
XMLSecurityDataFormat -> @Deprecated     public String getTrustStorePassword();1376477110;@deprecated  Will change to private access in the future.  Use {@link #setKeyOrTrustStoreParameters()} instead.;@Deprecated_    public String getTrustStorePassword() {_        if (this.keyOrTrustStoreParameters != null) {_            return keyOrTrustStoreParameters.getPassword()__        }_        return this.trustStorePassword__    };deprecated,will,change,to,private,access,in,the,future,use,link,set,key,or,trust,store,parameters,instead;deprecated,public,string,get,trust,store,password,if,this,key,or,trust,store,parameters,null,return,key,or,trust,store,parameters,get,password,return,this,trust,store,password
XMLSecurityDataFormat -> @Deprecated     public String getTrustStorePassword();1376632954;@deprecated  Will change to private access in the future.  Use {@link #setKeyOrTrustStoreParameters()} instead.;@Deprecated_    public String getTrustStorePassword() {_        if (this.keyOrTrustStoreParameters != null) {_            return keyOrTrustStoreParameters.getPassword()__        }_        return this.trustStorePassword__    };deprecated,will,change,to,private,access,in,the,future,use,link,set,key,or,trust,store,parameters,instead;deprecated,public,string,get,trust,store,password,if,this,key,or,trust,store,parameters,null,return,key,or,trust,store,parameters,get,password,return,this,trust,store,password
XMLSecurityDataFormat -> @Deprecated     public String getTrustStorePassword();1388443957;@deprecated  Will change to private access in the future.  Use {@link #setKeyOrTrustStoreParameters()} instead.;@Deprecated_    public String getTrustStorePassword() {_        if (this.keyOrTrustStoreParameters != null) {_            return keyOrTrustStoreParameters.getPassword()__        }_        return this.trustStorePassword__    };deprecated,will,change,to,private,access,in,the,future,use,link,set,key,or,trust,store,parameters,instead;deprecated,public,string,get,trust,store,password,if,this,key,or,trust,store,parameters,null,return,key,or,trust,store,parameters,get,password,return,this,trust,store,password
XMLSecurityDataFormat -> @Deprecated     public String getTrustStorePassword();1415211488;@deprecated  Will change to private access in the future.  Use {@link #setKeyOrTrustStoreParameters()} instead.;@Deprecated_    public String getTrustStorePassword() {_        if (this.keyOrTrustStoreParameters != null) {_            return keyOrTrustStoreParameters.getPassword()__        }_        return this.trustStorePassword__    };deprecated,will,change,to,private,access,in,the,future,use,link,set,key,or,trust,store,parameters,instead;deprecated,public,string,get,trust,store,password,if,this,key,or,trust,store,parameters,null,return,key,or,trust,store,parameters,get,password,return,this,trust,store,password
XMLSecurityDataFormat -> @Deprecated     public String getTrustStorePassword();1415877369;@deprecated  Will change to private access in the future.  Use {@link #setKeyOrTrustStoreParameters()} instead.;@Deprecated_    public String getTrustStorePassword() {_        if (this.keyOrTrustStoreParameters != null) {_            return keyOrTrustStoreParameters.getPassword()__        }_        return this.trustStorePassword__    };deprecated,will,change,to,private,access,in,the,future,use,link,set,key,or,trust,store,parameters,instead;deprecated,public,string,get,trust,store,password,if,this,key,or,trust,store,parameters,null,return,key,or,trust,store,parameters,get,password,return,this,trust,store,password
XMLSecurityDataFormat -> @Deprecated     public String getTrustStorePassword();1417521716;@deprecated  Will change to private access in the future.  Use {@link #setKeyOrTrustStoreParameters()} instead.;@Deprecated_    public String getTrustStorePassword() {_        if (this.keyOrTrustStoreParameters != null) {_            return keyOrTrustStoreParameters.getPassword()__        }_        return this.trustStorePassword__    };deprecated,will,change,to,private,access,in,the,future,use,link,set,key,or,trust,store,parameters,instead;deprecated,public,string,get,trust,store,password,if,this,key,or,trust,store,parameters,null,return,key,or,trust,store,parameters,get,password,return,this,trust,store,password
XMLSecurityDataFormat -> @Deprecated     public String getTrustStorePassword();1417572756;@deprecated  Will change to private access in the future.  Use {@link #setKeyOrTrustStoreParameters()} instead.;@Deprecated_    public String getTrustStorePassword() {_        if (this.keyOrTrustStoreParameters != null) {_            return keyOrTrustStoreParameters.getPassword()__        }_        return this.trustStorePassword__    };deprecated,will,change,to,private,access,in,the,future,use,link,set,key,or,trust,store,parameters,instead;deprecated,public,string,get,trust,store,password,if,this,key,or,trust,store,parameters,null,return,key,or,trust,store,parameters,get,password,return,this,trust,store,password
XMLSecurityDataFormat -> @Deprecated     public String getTrustStorePassword();1443094318;@deprecated  Will change to private access in the future.  Use {@link #setKeyOrTrustStoreParameters()} instead.;@Deprecated_    public String getTrustStorePassword() {_        if (this.keyOrTrustStoreParameters != null) {_            return keyOrTrustStoreParameters.getPassword()__        }_        return this.trustStorePassword__    };deprecated,will,change,to,private,access,in,the,future,use,link,set,key,or,trust,store,parameters,instead;deprecated,public,string,get,trust,store,password,if,this,key,or,trust,store,parameters,null,return,key,or,trust,store,parameters,get,password,return,this,trust,store,password
XMLSecurityDataFormat -> @Deprecated     public String getTrustStorePassword();1443168793;@deprecated  Will change to private access in the future.  Use {@link #setKeyOrTrustStoreParameters()} instead.;@Deprecated_    public String getTrustStorePassword() {_        if (this.keyOrTrustStoreParameters != null) {_            return keyOrTrustStoreParameters.getPassword()__        }_        return this.trustStorePassword__    };deprecated,will,change,to,private,access,in,the,future,use,link,set,key,or,trust,store,parameters,instead;deprecated,public,string,get,trust,store,password,if,this,key,or,trust,store,parameters,null,return,key,or,trust,store,parameters,get,password,return,this,trust,store,password
XMLSecurityDataFormat -> @Deprecated     public String getTrustStorePassword();1445110748;@deprecated  Will change to private access in the future.  Use {@link #setKeyOrTrustStoreParameters()} instead.;@Deprecated_    public String getTrustStorePassword() {_        if (this.keyOrTrustStoreParameters != null) {_            return keyOrTrustStoreParameters.getPassword()__        }_        return this.trustStorePassword__    };deprecated,will,change,to,private,access,in,the,future,use,link,set,key,or,trust,store,parameters,instead;deprecated,public,string,get,trust,store,password,if,this,key,or,trust,store,parameters,null,return,key,or,trust,store,parameters,get,password,return,this,trust,store,password
XMLSecurityDataFormat -> @Deprecated     public String getTrustStorePassword();1518772634;@deprecated  Will change to private access in the future.  Use {@link #setKeyOrTrustStoreParameters()} instead.;@Deprecated_    public String getTrustStorePassword() {_        if (this.keyOrTrustStoreParameters != null) {_            return keyOrTrustStoreParameters.getPassword()__        }_        return this.trustStorePassword__    };deprecated,will,change,to,private,access,in,the,future,use,link,set,key,or,trust,store,parameters,instead;deprecated,public,string,get,trust,store,password,if,this,key,or,trust,store,parameters,null,return,key,or,trust,store,parameters,get,password,return,this,trust,store,password
XMLSecurityDataFormat -> @Deprecated     public String getTrustStorePassword();1532430683;@deprecated  Will change to private access in the future.  Use {@link #setKeyOrTrustStoreParameters()} instead.;@Deprecated_    public String getTrustStorePassword() {_        if (this.keyOrTrustStoreParameters != null) {_            return keyOrTrustStoreParameters.getPassword()__        }_        return this.trustStorePassword__    };deprecated,will,change,to,private,access,in,the,future,use,link,set,key,or,trust,store,parameters,instead;deprecated,public,string,get,trust,store,password,if,this,key,or,trust,store,parameters,null,return,key,or,trust,store,parameters,get,password,return,this,trust,store,password
XMLSecurityDataFormat -> @Deprecated     public String getTrustStorePassword();1537290824;@deprecated  Will change to private access in the future.  Use {@link #setKeyOrTrustStoreParameters()} instead.;@Deprecated_    public String getTrustStorePassword() {_        if (this.keyOrTrustStoreParameters != null) {_            return keyOrTrustStoreParameters.getPassword()__        }_        return this.trustStorePassword__    };deprecated,will,change,to,private,access,in,the,future,use,link,set,key,or,trust,store,parameters,instead;deprecated,public,string,get,trust,store,password,if,this,key,or,trust,store,parameters,null,return,key,or,trust,store,parameters,get,password,return,this,trust,store,password
XMLSecurityDataFormat -> @Deprecated     public String getTrustStorePassword();1540108158;@deprecated  Will change to private access in the future.  Use {@link #setKeyOrTrustStoreParameters()} instead.;@Deprecated_    public String getTrustStorePassword() {_        if (this.keyOrTrustStoreParameters != null) {_            return keyOrTrustStoreParameters.getPassword()__        }_        return this.trustStorePassword__    };deprecated,will,change,to,private,access,in,the,future,use,link,set,key,or,trust,store,parameters,instead;deprecated,public,string,get,trust,store,password,if,this,key,or,trust,store,parameters,null,return,key,or,trust,store,parameters,get,password,return,this,trust,store,password
XMLSecurityDataFormat -> private Key getPrivateKey(KeyStore keystore, String alias, String password) throws Exception;1308018063;Returns the private key for the specified alias, or null if the alias or private key is not found.;private Key getPrivateKey(KeyStore keystore, String alias, String password) throws Exception {_        Key key = keystore.getKey(alias, password.toCharArray())__        if (key instanceof PrivateKey) {_            return key__        } else {_            return null__        }_    };returns,the,private,key,for,the,specified,alias,or,null,if,the,alias,or,private,key,is,not,found;private,key,get,private,key,key,store,keystore,string,alias,string,password,throws,exception,key,key,keystore,get,key,alias,password,to,char,array,if,key,instanceof,private,key,return,key,else,return,null
XMLSecurityDataFormat -> private Key getPrivateKey(KeyStore keystore, String alias, String password) throws Exception;1316532283;Returns the private key for the specified alias, or null if the alias or private key is not found.;private Key getPrivateKey(KeyStore keystore, String alias, String password) throws Exception {_        Key key = keystore.getKey(alias, password.toCharArray())__        if (key instanceof PrivateKey) {_            return key__        } else {_            return null__        }_    };returns,the,private,key,for,the,specified,alias,or,null,if,the,alias,or,private,key,is,not,found;private,key,get,private,key,key,store,keystore,string,alias,string,password,throws,exception,key,key,keystore,get,key,alias,password,to,char,array,if,key,instanceof,private,key,return,key,else,return,null
XMLSecurityDataFormat -> private Key getPrivateKey(KeyStore keystore, String alias, String password) throws Exception;1336642311;Returns the private key for the specified alias, or null if the alias or private key is not found.;private Key getPrivateKey(KeyStore keystore, String alias, String password) throws Exception {_        Key key = keystore.getKey(alias, password.toCharArray())__        if (key instanceof PrivateKey) {_            return key__        } else {_            return null__        }_    };returns,the,private,key,for,the,specified,alias,or,null,if,the,alias,or,private,key,is,not,found;private,key,get,private,key,key,store,keystore,string,alias,string,password,throws,exception,key,key,keystore,get,key,alias,password,to,char,array,if,key,instanceof,private,key,return,key,else,return,null
XMLSecurityDataFormat -> private Key getPrivateKey(KeyStore keystore, String alias, String password) throws Exception;1342106539;Returns the private key for the specified alias, or null if the alias or private key is not found.;private Key getPrivateKey(KeyStore keystore, String alias, String password) throws Exception {_        Key key = keystore.getKey(alias, password.toCharArray())__        if (key instanceof PrivateKey) {_            return key__        } else {_            return null__        }_    };returns,the,private,key,for,the,specified,alias,or,null,if,the,alias,or,private,key,is,not,found;private,key,get,private,key,key,store,keystore,string,alias,string,password,throws,exception,key,key,keystore,get,key,alias,password,to,char,array,if,key,instanceof,private,key,return,key,else,return,null
XMLSecurityDataFormat -> private Key getPrivateKey(KeyStore keystore, String alias, String password) throws Exception;1346229387;Returns the private key for the specified alias, or null if the alias or private key is not found.;private Key getPrivateKey(KeyStore keystore, String alias, String password) throws Exception {_        Key key = keystore.getKey(alias, password.toCharArray())__        if (key instanceof PrivateKey) {_            return key__        } else {_            return null__        }_    };returns,the,private,key,for,the,specified,alias,or,null,if,the,alias,or,private,key,is,not,found;private,key,get,private,key,key,store,keystore,string,alias,string,password,throws,exception,key,key,keystore,get,key,alias,password,to,char,array,if,key,instanceof,private,key,return,key,else,return,null
XMLSecurityDataFormat -> private Key getPrivateKey(KeyStore keystore, String alias, String password) throws Exception;1358954767;Returns the private key for the specified alias, or null if the alias or private key is not found.;private Key getPrivateKey(KeyStore keystore, String alias, String password) throws Exception {_        Key key = keystore.getKey(alias, password.toCharArray())__        if (key instanceof PrivateKey) {_            return key__        } else {_            return null__        }_    };returns,the,private,key,for,the,specified,alias,or,null,if,the,alias,or,private,key,is,not,found;private,key,get,private,key,key,store,keystore,string,alias,string,password,throws,exception,key,key,keystore,get,key,alias,password,to,char,array,if,key,instanceof,private,key,return,key,else,return,null
XMLSecurityDataFormat -> private Key getPrivateKey(KeyStore keystore, String alias, String password) throws Exception;1375894613;Returns the private key for the specified alias, or null if the alias or private key is not found.;private Key getPrivateKey(KeyStore keystore, String alias, String password) throws Exception {_        Key key = keystore.getKey(alias, password.toCharArray())__        if (key instanceof PrivateKey) {_            return key__        } else {_            return null__        }_    };returns,the,private,key,for,the,specified,alias,or,null,if,the,alias,or,private,key,is,not,found;private,key,get,private,key,key,store,keystore,string,alias,string,password,throws,exception,key,key,keystore,get,key,alias,password,to,char,array,if,key,instanceof,private,key,return,key,else,return,null
XMLSecurityDataFormat -> private Key getPrivateKey(KeyStore keystore, String alias, String password) throws Exception;1376034290;Returns the private key for the specified alias, or null if the alias or private key is not found.;private Key getPrivateKey(KeyStore keystore, String alias, String password) throws Exception {_        Key key = keystore.getKey(alias, password.toCharArray())__        if (key instanceof PrivateKey) {_            return key__        } else {_            return null__        }_    };returns,the,private,key,for,the,specified,alias,or,null,if,the,alias,or,private,key,is,not,found;private,key,get,private,key,key,store,keystore,string,alias,string,password,throws,exception,key,key,keystore,get,key,alias,password,to,char,array,if,key,instanceof,private,key,return,key,else,return,null
XMLSecurityDataFormat -> private Key getPrivateKey(KeyStore keystore, String alias, String password) throws Exception;1376477110;Returns the private key for the specified alias, or null if the alias or private key is not found.;private Key getPrivateKey(KeyStore keystore, String alias, String password) throws Exception {_        Key key = keystore.getKey(alias, password.toCharArray())__        if (key instanceof PrivateKey) {_            return key__        } else {_            return null__        }_    };returns,the,private,key,for,the,specified,alias,or,null,if,the,alias,or,private,key,is,not,found;private,key,get,private,key,key,store,keystore,string,alias,string,password,throws,exception,key,key,keystore,get,key,alias,password,to,char,array,if,key,instanceof,private,key,return,key,else,return,null
XMLSecurityDataFormat -> private Key getPrivateKey(KeyStore keystore, String alias, String password) throws Exception;1376632954;Returns the private key for the specified alias, or null if the alias or private key is not found.;private Key getPrivateKey(KeyStore keystore, String alias, String password) throws Exception {_        Key key = keystore.getKey(alias, password.toCharArray())__        if (key instanceof PrivateKey) {_            return key__        } else {_            return null__        }_    };returns,the,private,key,for,the,specified,alias,or,null,if,the,alias,or,private,key,is,not,found;private,key,get,private,key,key,store,keystore,string,alias,string,password,throws,exception,key,key,keystore,get,key,alias,password,to,char,array,if,key,instanceof,private,key,return,key,else,return,null
XMLSecurityDataFormat -> private Key getPrivateKey(KeyStore keystore, String alias, String password) throws Exception;1388443957;Returns the private key for the specified alias, or null if the alias or private key is not found.;private Key getPrivateKey(KeyStore keystore, String alias, String password) throws Exception {_        Key key = keystore.getKey(alias, password.toCharArray())__        if (key instanceof PrivateKey) {_            return key__        } else {_            return null__        }_    };returns,the,private,key,for,the,specified,alias,or,null,if,the,alias,or,private,key,is,not,found;private,key,get,private,key,key,store,keystore,string,alias,string,password,throws,exception,key,key,keystore,get,key,alias,password,to,char,array,if,key,instanceof,private,key,return,key,else,return,null
XMLSecurityDataFormat -> private Key getPrivateKey(KeyStore keystore, String alias, String password) throws Exception;1415211488;Returns the private key for the specified alias, or null if the alias or private key is not found.;private Key getPrivateKey(KeyStore keystore, String alias, String password) throws Exception {_        Key key = keystore.getKey(alias, password.toCharArray())__        if (key instanceof PrivateKey) {_            return key__        } else {_            return null__        }_    };returns,the,private,key,for,the,specified,alias,or,null,if,the,alias,or,private,key,is,not,found;private,key,get,private,key,key,store,keystore,string,alias,string,password,throws,exception,key,key,keystore,get,key,alias,password,to,char,array,if,key,instanceof,private,key,return,key,else,return,null
XMLSecurityDataFormat -> private Key getPrivateKey(KeyStore keystore, String alias, String password) throws Exception;1415877369;Returns the private key for the specified alias, or null if the alias or private key is not found.;private Key getPrivateKey(KeyStore keystore, String alias, String password) throws Exception {_        Key key = keystore.getKey(alias, password.toCharArray())__        if (key instanceof PrivateKey) {_            return key__        } else {_            return null__        }_    };returns,the,private,key,for,the,specified,alias,or,null,if,the,alias,or,private,key,is,not,found;private,key,get,private,key,key,store,keystore,string,alias,string,password,throws,exception,key,key,keystore,get,key,alias,password,to,char,array,if,key,instanceof,private,key,return,key,else,return,null
XMLSecurityDataFormat -> private Key getPrivateKey(KeyStore keystore, String alias, String password) throws Exception;1417521716;Returns the private key for the specified alias, or null if the alias or private key is not found.;private Key getPrivateKey(KeyStore keystore, String alias, String password) throws Exception {_        Key key = keystore.getKey(alias, password.toCharArray())__        if (key instanceof PrivateKey) {_            return key__        } else {_            return null__        }_    };returns,the,private,key,for,the,specified,alias,or,null,if,the,alias,or,private,key,is,not,found;private,key,get,private,key,key,store,keystore,string,alias,string,password,throws,exception,key,key,keystore,get,key,alias,password,to,char,array,if,key,instanceof,private,key,return,key,else,return,null
XMLSecurityDataFormat -> private Key getPrivateKey(KeyStore keystore, String alias, String password) throws Exception;1417572756;Returns the private key for the specified alias, or null if the alias or private key is not found.;private Key getPrivateKey(KeyStore keystore, String alias, String password) throws Exception {_        Key key = keystore.getKey(alias, password.toCharArray())__        if (key instanceof PrivateKey) {_            return key__        } else {_            return null__        }_    };returns,the,private,key,for,the,specified,alias,or,null,if,the,alias,or,private,key,is,not,found;private,key,get,private,key,key,store,keystore,string,alias,string,password,throws,exception,key,key,keystore,get,key,alias,password,to,char,array,if,key,instanceof,private,key,return,key,else,return,null
XMLSecurityDataFormat -> private Key getPrivateKey(KeyStore keystore, String alias, String password) throws Exception;1443094318;Returns the private key for the specified alias, or null if the alias or private key is not found.;private Key getPrivateKey(KeyStore keystore, String alias, String password) throws Exception {_        Key key = keystore.getKey(alias, password.toCharArray())__        if (key instanceof PrivateKey) {_            return key__        } else {_            return null__        }_    };returns,the,private,key,for,the,specified,alias,or,null,if,the,alias,or,private,key,is,not,found;private,key,get,private,key,key,store,keystore,string,alias,string,password,throws,exception,key,key,keystore,get,key,alias,password,to,char,array,if,key,instanceof,private,key,return,key,else,return,null
XMLSecurityDataFormat -> private Key getPrivateKey(KeyStore keystore, String alias, String password) throws Exception;1443168793;Returns the private key for the specified alias, or null if the alias or private key is not found.;private Key getPrivateKey(KeyStore keystore, String alias, String password) throws Exception {_        Key key = keystore.getKey(alias, password.toCharArray())__        if (key instanceof PrivateKey) {_            return key__        } else {_            return null__        }_    };returns,the,private,key,for,the,specified,alias,or,null,if,the,alias,or,private,key,is,not,found;private,key,get,private,key,key,store,keystore,string,alias,string,password,throws,exception,key,key,keystore,get,key,alias,password,to,char,array,if,key,instanceof,private,key,return,key,else,return,null
XMLSecurityDataFormat -> private Key getPrivateKey(KeyStore keystore, String alias, String password) throws Exception;1445110748;Returns the private key for the specified alias, or null if the alias or private key is not found.;private Key getPrivateKey(KeyStore keystore, String alias, String password) throws Exception {_        Key key = keystore.getKey(alias, password.toCharArray())__        if (key instanceof PrivateKey) {_            return key__        } else {_            return null__        }_    };returns,the,private,key,for,the,specified,alias,or,null,if,the,alias,or,private,key,is,not,found;private,key,get,private,key,key,store,keystore,string,alias,string,password,throws,exception,key,key,keystore,get,key,alias,password,to,char,array,if,key,instanceof,private,key,return,key,else,return,null
XMLSecurityDataFormat -> private Key getPrivateKey(KeyStore keystore, String alias, String password) throws Exception;1518772634;Returns the private key for the specified alias, or null if the alias or private key is not found.;private Key getPrivateKey(KeyStore keystore, String alias, String password) throws Exception {_        Key key = keystore.getKey(alias, password.toCharArray())__        if (key instanceof PrivateKey) {_            return key__        } else {_            return null__        }_    };returns,the,private,key,for,the,specified,alias,or,null,if,the,alias,or,private,key,is,not,found;private,key,get,private,key,key,store,keystore,string,alias,string,password,throws,exception,key,key,keystore,get,key,alias,password,to,char,array,if,key,instanceof,private,key,return,key,else,return,null
XMLSecurityDataFormat -> private Key getPrivateKey(KeyStore keystore, String alias, String password) throws Exception;1532430683;Returns the private key for the specified alias, or null if the alias or private key is not found.;private Key getPrivateKey(KeyStore keystore, String alias, String password) throws Exception {_        Key key = keystore.getKey(alias, password.toCharArray())__        if (key instanceof PrivateKey) {_            return key__        } else {_            return null__        }_    };returns,the,private,key,for,the,specified,alias,or,null,if,the,alias,or,private,key,is,not,found;private,key,get,private,key,key,store,keystore,string,alias,string,password,throws,exception,key,key,keystore,get,key,alias,password,to,char,array,if,key,instanceof,private,key,return,key,else,return,null
XMLSecurityDataFormat -> private Key getPrivateKey(KeyStore keystore, String alias, String password) throws Exception;1537290824;Returns the private key for the specified alias, or null if the alias or private key is not found.;private Key getPrivateKey(KeyStore keystore, String alias, String password) throws Exception {_        Key key = keystore.getKey(alias, password.toCharArray())__        if (key instanceof PrivateKey) {_            return key__        } else {_            return null__        }_    };returns,the,private,key,for,the,specified,alias,or,null,if,the,alias,or,private,key,is,not,found;private,key,get,private,key,key,store,keystore,string,alias,string,password,throws,exception,key,key,keystore,get,key,alias,password,to,char,array,if,key,instanceof,private,key,return,key,else,return,null
XMLSecurityDataFormat -> private Key getPrivateKey(KeyStore keystore, String alias, String password) throws Exception;1540108158;Returns the private key for the specified alias, or null if the alias or private key is not found.;private Key getPrivateKey(KeyStore keystore, String alias, String password) throws Exception {_        Key key = keystore.getKey(alias, password.toCharArray())__        if (key instanceof PrivateKey) {_            return key__        } else {_            return null__        }_    };returns,the,private,key,for,the,specified,alias,or,null,if,the,alias,or,private,key,is,not,found;private,key,get,private,key,key,store,keystore,string,alias,string,password,throws,exception,key,key,keystore,get,key,alias,password,to,char,array,if,key,instanceof,private,key,return,key,else,return,null
XMLSecurityDataFormat -> private Key getPrivateKey(KeyStore keystore, String alias, String password) throws Exception;1540108158;Returns the private key for the specified alias, or null if the alias or private key is not found.;private Key getPrivateKey(KeyStore keystore, String alias, String password) throws Exception {_        Key key = keystore.getKey(alias, password.toCharArray())__        if (key instanceof PrivateKey) {_            return key__        } else {_            return null__        }_    };returns,the,private,key,for,the,specified,alias,or,null,if,the,alias,or,private,key,is,not,found;private,key,get,private,key,key,store,keystore,string,alias,string,password,throws,exception,key,key,keystore,get,key,alias,password,to,char,array,if,key,instanceof,private,key,return,key,else,return,null
XMLSecurityDataFormat -> private Key getPrivateKey(KeyStore keystore, String alias, String password) throws Exception;1540108163;Returns the private key for the specified alias, or null if the alias or private key is not found.;private Key getPrivateKey(KeyStore keystore, String alias, String password) throws Exception {_        Key key = keystore.getKey(alias, password.toCharArray())__        if (key instanceof PrivateKey) {_            return key__        } else {_            return null__        }_    };returns,the,private,key,for,the,specified,alias,or,null,if,the,alias,or,private,key,is,not,found;private,key,get,private,key,key,store,keystore,string,alias,string,password,throws,exception,key,key,keystore,get,key,alias,password,to,char,array,if,key,instanceof,private,key,return,key,else,return,null
XMLSecurityDataFormat -> private Key getPrivateKey(KeyStore keystore, String alias, String password) throws Exception;1545056693;Returns the private key for the specified alias, or null if the alias or private key is not found.;private Key getPrivateKey(KeyStore keystore, String alias, String password) throws Exception {_        Key key = keystore.getKey(alias, password.toCharArray())__        if (key instanceof PrivateKey) {_            return key__        } else {_            return null__        }_    };returns,the,private,key,for,the,specified,alias,or,null,if,the,alias,or,private,key,is,not,found;private,key,get,private,key,key,store,keystore,string,alias,string,password,throws,exception,key,key,keystore,get,key,alias,password,to,char,array,if,key,instanceof,private,key,return,key,else,return,null
XMLSecurityDataFormat -> @Deprecated     public XMLSecurityDataFormat(String secureTag, boolean secureTagContents, String xmlCipherAlgorithm,              String keyCipherAlgorithm);1316532283;@deprecated  use {@link #XMLSecurityDataFormat(String, Map, boolean, String, String, String, String)} or_{@link #XMLSecurityDataFormat(String, Map, boolean, String, String, String, KeyStoreParameters)} instead.;@Deprecated_    public XMLSecurityDataFormat(String secureTag, boolean secureTagContents, String xmlCipherAlgorithm, _            String keyCipherAlgorithm) {_        this()__        this.setSecureTag(secureTag)__        this.setSecureTagContents(secureTagContents)__        this.setXmlCipherAlgorithm(xmlCipherAlgorithm)__        this.setKeyCipherAlgorithm(keyCipherAlgorithm)__    };deprecated,use,link,xmlsecurity,data,format,string,map,boolean,string,string,string,string,or,link,xmlsecurity,data,format,string,map,boolean,string,string,string,key,store,parameters,instead;deprecated,public,xmlsecurity,data,format,string,secure,tag,boolean,secure,tag,contents,string,xml,cipher,algorithm,string,key,cipher,algorithm,this,this,set,secure,tag,secure,tag,this,set,secure,tag,contents,secure,tag,contents,this,set,xml,cipher,algorithm,xml,cipher,algorithm,this,set,key,cipher,algorithm,key,cipher,algorithm
XMLSecurityDataFormat -> @Deprecated     public XMLSecurityDataFormat(String secureTag, boolean secureTagContents, String xmlCipherAlgorithm,              String keyCipherAlgorithm);1336642311;@deprecated  use {@link #XMLSecurityDataFormat(String, Map, boolean, String, String, String, String)} or_{@link #XMLSecurityDataFormat(String, Map, boolean, String, String, String, KeyStoreParameters)} instead.;@Deprecated_    public XMLSecurityDataFormat(String secureTag, boolean secureTagContents, String xmlCipherAlgorithm, _            String keyCipherAlgorithm) {_        this()__        this.setSecureTag(secureTag)__        this.setSecureTagContents(secureTagContents)__        this.setXmlCipherAlgorithm(xmlCipherAlgorithm)__        this.setKeyCipherAlgorithm(keyCipherAlgorithm)__    };deprecated,use,link,xmlsecurity,data,format,string,map,boolean,string,string,string,string,or,link,xmlsecurity,data,format,string,map,boolean,string,string,string,key,store,parameters,instead;deprecated,public,xmlsecurity,data,format,string,secure,tag,boolean,secure,tag,contents,string,xml,cipher,algorithm,string,key,cipher,algorithm,this,this,set,secure,tag,secure,tag,this,set,secure,tag,contents,secure,tag,contents,this,set,xml,cipher,algorithm,xml,cipher,algorithm,this,set,key,cipher,algorithm,key,cipher,algorithm
XMLSecurityDataFormat -> @Deprecated     public XMLSecurityDataFormat(String secureTag, boolean secureTagContents, String xmlCipherAlgorithm,              String keyCipherAlgorithm);1342106539;@deprecated  use {@link #XMLSecurityDataFormat(String, Map, boolean, String, String, String, String)} or_{@link #XMLSecurityDataFormat(String, Map, boolean, String, String, String, KeyStoreParameters)} instead.;@Deprecated_    public XMLSecurityDataFormat(String secureTag, boolean secureTagContents, String xmlCipherAlgorithm, _            String keyCipherAlgorithm) {_        this()__        this.setSecureTag(secureTag)__        this.setSecureTagContents(secureTagContents)__        this.setXmlCipherAlgorithm(xmlCipherAlgorithm)__        this.setKeyCipherAlgorithm(keyCipherAlgorithm)__    };deprecated,use,link,xmlsecurity,data,format,string,map,boolean,string,string,string,string,or,link,xmlsecurity,data,format,string,map,boolean,string,string,string,key,store,parameters,instead;deprecated,public,xmlsecurity,data,format,string,secure,tag,boolean,secure,tag,contents,string,xml,cipher,algorithm,string,key,cipher,algorithm,this,this,set,secure,tag,secure,tag,this,set,secure,tag,contents,secure,tag,contents,this,set,xml,cipher,algorithm,xml,cipher,algorithm,this,set,key,cipher,algorithm,key,cipher,algorithm
XMLSecurityDataFormat -> @Deprecated     public XMLSecurityDataFormat(String secureTag, boolean secureTagContents, String xmlCipherAlgorithm,              String keyCipherAlgorithm);1346229387;@deprecated  use {@link #XMLSecurityDataFormat(String, Map, boolean, String, String, String, String)} or_{@link #XMLSecurityDataFormat(String, Map, boolean, String, String, String, KeyStoreParameters)} instead.;@Deprecated_    public XMLSecurityDataFormat(String secureTag, boolean secureTagContents, String xmlCipherAlgorithm, _            String keyCipherAlgorithm) {_        this()__        this.setSecureTag(secureTag)__        this.setSecureTagContents(secureTagContents)__        this.setXmlCipherAlgorithm(xmlCipherAlgorithm)__        this.setKeyCipherAlgorithm(keyCipherAlgorithm)__    };deprecated,use,link,xmlsecurity,data,format,string,map,boolean,string,string,string,string,or,link,xmlsecurity,data,format,string,map,boolean,string,string,string,key,store,parameters,instead;deprecated,public,xmlsecurity,data,format,string,secure,tag,boolean,secure,tag,contents,string,xml,cipher,algorithm,string,key,cipher,algorithm,this,this,set,secure,tag,secure,tag,this,set,secure,tag,contents,secure,tag,contents,this,set,xml,cipher,algorithm,xml,cipher,algorithm,this,set,key,cipher,algorithm,key,cipher,algorithm
XMLSecurityDataFormat -> @Deprecated     public XMLSecurityDataFormat(String secureTag, boolean secureTagContents, String xmlCipherAlgorithm,              String keyCipherAlgorithm);1358954767;@deprecated  use {@link #XMLSecurityDataFormat(String, Map, boolean, String, String, String, String)} or_{@link #XMLSecurityDataFormat(String, Map, boolean, String, String, String, KeyStoreParameters)} instead.;@Deprecated_    public XMLSecurityDataFormat(String secureTag, boolean secureTagContents, String xmlCipherAlgorithm, _            String keyCipherAlgorithm) {_        this()__        this.setSecureTag(secureTag)__        this.setSecureTagContents(secureTagContents)__        this.setXmlCipherAlgorithm(xmlCipherAlgorithm)__        this.setKeyCipherAlgorithm(keyCipherAlgorithm)__    };deprecated,use,link,xmlsecurity,data,format,string,map,boolean,string,string,string,string,or,link,xmlsecurity,data,format,string,map,boolean,string,string,string,key,store,parameters,instead;deprecated,public,xmlsecurity,data,format,string,secure,tag,boolean,secure,tag,contents,string,xml,cipher,algorithm,string,key,cipher,algorithm,this,this,set,secure,tag,secure,tag,this,set,secure,tag,contents,secure,tag,contents,this,set,xml,cipher,algorithm,xml,cipher,algorithm,this,set,key,cipher,algorithm,key,cipher,algorithm
XMLSecurityDataFormat -> @Deprecated     public XMLSecurityDataFormat(String secureTag, boolean secureTagContents, String xmlCipherAlgorithm,              String keyCipherAlgorithm);1375894613;@deprecated  use {@link #XMLSecurityDataFormat(String, Map, boolean, String, String, String, String)} or_{@link #XMLSecurityDataFormat(String, Map, boolean, String, String, String, KeyStoreParameters)} instead.;@Deprecated_    public XMLSecurityDataFormat(String secureTag, boolean secureTagContents, String xmlCipherAlgorithm, _            String keyCipherAlgorithm) {_        this()__        this.setSecureTag(secureTag)__        this.setSecureTagContents(secureTagContents)__        this.setXmlCipherAlgorithm(xmlCipherAlgorithm)__        this.setKeyCipherAlgorithm(keyCipherAlgorithm)__    };deprecated,use,link,xmlsecurity,data,format,string,map,boolean,string,string,string,string,or,link,xmlsecurity,data,format,string,map,boolean,string,string,string,key,store,parameters,instead;deprecated,public,xmlsecurity,data,format,string,secure,tag,boolean,secure,tag,contents,string,xml,cipher,algorithm,string,key,cipher,algorithm,this,this,set,secure,tag,secure,tag,this,set,secure,tag,contents,secure,tag,contents,this,set,xml,cipher,algorithm,xml,cipher,algorithm,this,set,key,cipher,algorithm,key,cipher,algorithm
XMLSecurityDataFormat -> @Deprecated     public XMLSecurityDataFormat(String secureTag, boolean secureTagContents, String xmlCipherAlgorithm,              String keyCipherAlgorithm);1376034290;@deprecated  use {@link #XMLSecurityDataFormat(String, Map, boolean, String, String, String, String)} or_{@link #XMLSecurityDataFormat(String, Map, boolean, String, String, String, KeyStoreParameters)} instead.;@Deprecated_    public XMLSecurityDataFormat(String secureTag, boolean secureTagContents, String xmlCipherAlgorithm, _            String keyCipherAlgorithm) {_        this()__        this.setSecureTag(secureTag)__        this.setSecureTagContents(secureTagContents)__        this.setXmlCipherAlgorithm(xmlCipherAlgorithm)__        this.setKeyCipherAlgorithm(keyCipherAlgorithm)__    };deprecated,use,link,xmlsecurity,data,format,string,map,boolean,string,string,string,string,or,link,xmlsecurity,data,format,string,map,boolean,string,string,string,key,store,parameters,instead;deprecated,public,xmlsecurity,data,format,string,secure,tag,boolean,secure,tag,contents,string,xml,cipher,algorithm,string,key,cipher,algorithm,this,this,set,secure,tag,secure,tag,this,set,secure,tag,contents,secure,tag,contents,this,set,xml,cipher,algorithm,xml,cipher,algorithm,this,set,key,cipher,algorithm,key,cipher,algorithm
XMLSecurityDataFormat -> @Deprecated     public XMLSecurityDataFormat(String secureTag, boolean secureTagContents, String xmlCipherAlgorithm,              String keyCipherAlgorithm);1376477110;@deprecated  use {@link #XMLSecurityDataFormat(String, Map, boolean, String, String, String, String)} or_{@link #XMLSecurityDataFormat(String, Map, boolean, String, String, String, KeyStoreParameters)} instead.;@Deprecated_    public XMLSecurityDataFormat(String secureTag, boolean secureTagContents, String xmlCipherAlgorithm, _            String keyCipherAlgorithm) {_        this()__        this.setSecureTag(secureTag)__        this.setSecureTagContents(secureTagContents)__        this.setXmlCipherAlgorithm(xmlCipherAlgorithm)__        this.setKeyCipherAlgorithm(keyCipherAlgorithm)__    };deprecated,use,link,xmlsecurity,data,format,string,map,boolean,string,string,string,string,or,link,xmlsecurity,data,format,string,map,boolean,string,string,string,key,store,parameters,instead;deprecated,public,xmlsecurity,data,format,string,secure,tag,boolean,secure,tag,contents,string,xml,cipher,algorithm,string,key,cipher,algorithm,this,this,set,secure,tag,secure,tag,this,set,secure,tag,contents,secure,tag,contents,this,set,xml,cipher,algorithm,xml,cipher,algorithm,this,set,key,cipher,algorithm,key,cipher,algorithm
XMLSecurityDataFormat -> @Deprecated     public XMLSecurityDataFormat(String secureTag, boolean secureTagContents, String xmlCipherAlgorithm,              String keyCipherAlgorithm);1376632954;@deprecated  use {@link #XMLSecurityDataFormat(String, Map, boolean, String, String, String, String)} or_{@link #XMLSecurityDataFormat(String, Map, boolean, String, String, String, KeyStoreParameters)} instead.;@Deprecated_    public XMLSecurityDataFormat(String secureTag, boolean secureTagContents, String xmlCipherAlgorithm, _            String keyCipherAlgorithm) {_        this()__        this.setSecureTag(secureTag)__        this.setSecureTagContents(secureTagContents)__        this.setXmlCipherAlgorithm(xmlCipherAlgorithm)__        this.setKeyCipherAlgorithm(keyCipherAlgorithm)__    };deprecated,use,link,xmlsecurity,data,format,string,map,boolean,string,string,string,string,or,link,xmlsecurity,data,format,string,map,boolean,string,string,string,key,store,parameters,instead;deprecated,public,xmlsecurity,data,format,string,secure,tag,boolean,secure,tag,contents,string,xml,cipher,algorithm,string,key,cipher,algorithm,this,this,set,secure,tag,secure,tag,this,set,secure,tag,contents,secure,tag,contents,this,set,xml,cipher,algorithm,xml,cipher,algorithm,this,set,key,cipher,algorithm,key,cipher,algorithm
XMLSecurityDataFormat -> @Deprecated     public XMLSecurityDataFormat(String secureTag, boolean secureTagContents, String xmlCipherAlgorithm,              String keyCipherAlgorithm);1388443957;@deprecated  use {@link #XMLSecurityDataFormat(String, Map, boolean, String, String, String, String)} or_{@link #XMLSecurityDataFormat(String, Map, boolean, String, String, String, KeyStoreParameters)} instead.;@Deprecated_    public XMLSecurityDataFormat(String secureTag, boolean secureTagContents, String xmlCipherAlgorithm, _            String keyCipherAlgorithm) {_        this()__        this.setSecureTag(secureTag)__        this.setSecureTagContents(secureTagContents)__        this.setXmlCipherAlgorithm(xmlCipherAlgorithm)__        this.setKeyCipherAlgorithm(keyCipherAlgorithm)__    };deprecated,use,link,xmlsecurity,data,format,string,map,boolean,string,string,string,string,or,link,xmlsecurity,data,format,string,map,boolean,string,string,string,key,store,parameters,instead;deprecated,public,xmlsecurity,data,format,string,secure,tag,boolean,secure,tag,contents,string,xml,cipher,algorithm,string,key,cipher,algorithm,this,this,set,secure,tag,secure,tag,this,set,secure,tag,contents,secure,tag,contents,this,set,xml,cipher,algorithm,xml,cipher,algorithm,this,set,key,cipher,algorithm,key,cipher,algorithm
XMLSecurityDataFormat -> @Deprecated     public XMLSecurityDataFormat(String secureTag, boolean secureTagContents, String xmlCipherAlgorithm,              String keyCipherAlgorithm);1415211488;@deprecated  use {@link #XMLSecurityDataFormat(String, Map, boolean, String, String, String, String)} or_{@link #XMLSecurityDataFormat(String, Map, boolean, String, String, String, KeyStoreParameters)} instead.;@Deprecated_    public XMLSecurityDataFormat(String secureTag, boolean secureTagContents, String xmlCipherAlgorithm, _            String keyCipherAlgorithm) {_        this()__        this.setSecureTag(secureTag)__        this.setSecureTagContents(secureTagContents)__        this.setXmlCipherAlgorithm(xmlCipherAlgorithm)__        this.setKeyCipherAlgorithm(keyCipherAlgorithm)__    };deprecated,use,link,xmlsecurity,data,format,string,map,boolean,string,string,string,string,or,link,xmlsecurity,data,format,string,map,boolean,string,string,string,key,store,parameters,instead;deprecated,public,xmlsecurity,data,format,string,secure,tag,boolean,secure,tag,contents,string,xml,cipher,algorithm,string,key,cipher,algorithm,this,this,set,secure,tag,secure,tag,this,set,secure,tag,contents,secure,tag,contents,this,set,xml,cipher,algorithm,xml,cipher,algorithm,this,set,key,cipher,algorithm,key,cipher,algorithm
XMLSecurityDataFormat -> @Deprecated     public XMLSecurityDataFormat(String secureTag, boolean secureTagContents, String xmlCipherAlgorithm,              String keyCipherAlgorithm);1415877369;@deprecated  use {@link #XMLSecurityDataFormat(String, Map, boolean, String, String, String, String)} or_{@link #XMLSecurityDataFormat(String, Map, boolean, String, String, String, KeyStoreParameters)} instead.;@Deprecated_    public XMLSecurityDataFormat(String secureTag, boolean secureTagContents, String xmlCipherAlgorithm, _            String keyCipherAlgorithm) {_        this()__        this.setSecureTag(secureTag)__        this.setSecureTagContents(secureTagContents)__        this.setXmlCipherAlgorithm(xmlCipherAlgorithm)__        this.setKeyCipherAlgorithm(keyCipherAlgorithm)__    };deprecated,use,link,xmlsecurity,data,format,string,map,boolean,string,string,string,string,or,link,xmlsecurity,data,format,string,map,boolean,string,string,string,key,store,parameters,instead;deprecated,public,xmlsecurity,data,format,string,secure,tag,boolean,secure,tag,contents,string,xml,cipher,algorithm,string,key,cipher,algorithm,this,this,set,secure,tag,secure,tag,this,set,secure,tag,contents,secure,tag,contents,this,set,xml,cipher,algorithm,xml,cipher,algorithm,this,set,key,cipher,algorithm,key,cipher,algorithm
XMLSecurityDataFormat -> @Deprecated     public XMLSecurityDataFormat(String secureTag, boolean secureTagContents, String xmlCipherAlgorithm,              String keyCipherAlgorithm);1417521716;@deprecated  use {@link #XMLSecurityDataFormat(String, Map, boolean, String, String, String, String)} or_{@link #XMLSecurityDataFormat(String, Map, boolean, String, String, String, KeyStoreParameters)} instead.;@Deprecated_    public XMLSecurityDataFormat(String secureTag, boolean secureTagContents, String xmlCipherAlgorithm, _            String keyCipherAlgorithm) {_        this()__        this.setSecureTag(secureTag)__        this.setSecureTagContents(secureTagContents)__        this.setXmlCipherAlgorithm(xmlCipherAlgorithm)__        this.setKeyCipherAlgorithm(keyCipherAlgorithm)__    };deprecated,use,link,xmlsecurity,data,format,string,map,boolean,string,string,string,string,or,link,xmlsecurity,data,format,string,map,boolean,string,string,string,key,store,parameters,instead;deprecated,public,xmlsecurity,data,format,string,secure,tag,boolean,secure,tag,contents,string,xml,cipher,algorithm,string,key,cipher,algorithm,this,this,set,secure,tag,secure,tag,this,set,secure,tag,contents,secure,tag,contents,this,set,xml,cipher,algorithm,xml,cipher,algorithm,this,set,key,cipher,algorithm,key,cipher,algorithm
XMLSecurityDataFormat -> @Deprecated     public XMLSecurityDataFormat(String secureTag, boolean secureTagContents, String xmlCipherAlgorithm,              String keyCipherAlgorithm);1417572756;@deprecated  use {@link #XMLSecurityDataFormat(String, Map, boolean, String, String, String, String)} or_{@link #XMLSecurityDataFormat(String, Map, boolean, String, String, String, KeyStoreParameters)} instead.;@Deprecated_    public XMLSecurityDataFormat(String secureTag, boolean secureTagContents, String xmlCipherAlgorithm, _            String keyCipherAlgorithm) {_        this()__        this.setSecureTag(secureTag)__        this.setSecureTagContents(secureTagContents)__        this.setXmlCipherAlgorithm(xmlCipherAlgorithm)__        this.setKeyCipherAlgorithm(keyCipherAlgorithm)__    };deprecated,use,link,xmlsecurity,data,format,string,map,boolean,string,string,string,string,or,link,xmlsecurity,data,format,string,map,boolean,string,string,string,key,store,parameters,instead;deprecated,public,xmlsecurity,data,format,string,secure,tag,boolean,secure,tag,contents,string,xml,cipher,algorithm,string,key,cipher,algorithm,this,this,set,secure,tag,secure,tag,this,set,secure,tag,contents,secure,tag,contents,this,set,xml,cipher,algorithm,xml,cipher,algorithm,this,set,key,cipher,algorithm,key,cipher,algorithm
XMLSecurityDataFormat -> @Deprecated     public XMLSecurityDataFormat(String secureTag, boolean secureTagContents, String xmlCipherAlgorithm,              String keyCipherAlgorithm);1443094318;@deprecated  use {@link #XMLSecurityDataFormat(String, Map, boolean, String, String, String, String)} or_{@link #XMLSecurityDataFormat(String, Map, boolean, String, String, String, KeyStoreParameters)} instead.;@Deprecated_    public XMLSecurityDataFormat(String secureTag, boolean secureTagContents, String xmlCipherAlgorithm, _            String keyCipherAlgorithm) {_        this()__        this.setSecureTag(secureTag)__        this.setSecureTagContents(secureTagContents)__        this.setXmlCipherAlgorithm(xmlCipherAlgorithm)__        this.setKeyCipherAlgorithm(keyCipherAlgorithm)__    };deprecated,use,link,xmlsecurity,data,format,string,map,boolean,string,string,string,string,or,link,xmlsecurity,data,format,string,map,boolean,string,string,string,key,store,parameters,instead;deprecated,public,xmlsecurity,data,format,string,secure,tag,boolean,secure,tag,contents,string,xml,cipher,algorithm,string,key,cipher,algorithm,this,this,set,secure,tag,secure,tag,this,set,secure,tag,contents,secure,tag,contents,this,set,xml,cipher,algorithm,xml,cipher,algorithm,this,set,key,cipher,algorithm,key,cipher,algorithm
XMLSecurityDataFormat -> @Deprecated     public XMLSecurityDataFormat(String secureTag, boolean secureTagContents, String xmlCipherAlgorithm,              String keyCipherAlgorithm);1443168793;@deprecated  use {@link #XMLSecurityDataFormat(String, Map, boolean, String, String, String, String)} or_{@link #XMLSecurityDataFormat(String, Map, boolean, String, String, String, KeyStoreParameters)} instead.;@Deprecated_    public XMLSecurityDataFormat(String secureTag, boolean secureTagContents, String xmlCipherAlgorithm, _            String keyCipherAlgorithm) {_        this()__        this.setSecureTag(secureTag)__        this.setSecureTagContents(secureTagContents)__        this.setXmlCipherAlgorithm(xmlCipherAlgorithm)__        this.setKeyCipherAlgorithm(keyCipherAlgorithm)__    };deprecated,use,link,xmlsecurity,data,format,string,map,boolean,string,string,string,string,or,link,xmlsecurity,data,format,string,map,boolean,string,string,string,key,store,parameters,instead;deprecated,public,xmlsecurity,data,format,string,secure,tag,boolean,secure,tag,contents,string,xml,cipher,algorithm,string,key,cipher,algorithm,this,this,set,secure,tag,secure,tag,this,set,secure,tag,contents,secure,tag,contents,this,set,xml,cipher,algorithm,xml,cipher,algorithm,this,set,key,cipher,algorithm,key,cipher,algorithm
XMLSecurityDataFormat -> @Deprecated     public XMLSecurityDataFormat(String secureTag, boolean secureTagContents, String xmlCipherAlgorithm,              String keyCipherAlgorithm);1445110748;@deprecated  use {@link #XMLSecurityDataFormat(String, Map, boolean, String, String, String, String)} or_{@link #XMLSecurityDataFormat(String, Map, boolean, String, String, String, KeyStoreParameters)} instead.;@Deprecated_    public XMLSecurityDataFormat(String secureTag, boolean secureTagContents, String xmlCipherAlgorithm, _            String keyCipherAlgorithm) {_        this()__        this.setSecureTag(secureTag)__        this.setSecureTagContents(secureTagContents)__        this.setXmlCipherAlgorithm(xmlCipherAlgorithm)__        this.setKeyCipherAlgorithm(keyCipherAlgorithm)__    };deprecated,use,link,xmlsecurity,data,format,string,map,boolean,string,string,string,string,or,link,xmlsecurity,data,format,string,map,boolean,string,string,string,key,store,parameters,instead;deprecated,public,xmlsecurity,data,format,string,secure,tag,boolean,secure,tag,contents,string,xml,cipher,algorithm,string,key,cipher,algorithm,this,this,set,secure,tag,secure,tag,this,set,secure,tag,contents,secure,tag,contents,this,set,xml,cipher,algorithm,xml,cipher,algorithm,this,set,key,cipher,algorithm,key,cipher,algorithm
XMLSecurityDataFormat -> @Deprecated     public XMLSecurityDataFormat(String secureTag, boolean secureTagContents, String xmlCipherAlgorithm,              String keyCipherAlgorithm);1518772634;@deprecated  use {@link #XMLSecurityDataFormat(String, Map, boolean, String, String, String, String)} or_{@link #XMLSecurityDataFormat(String, Map, boolean, String, String, String, KeyStoreParameters)} instead.;@Deprecated_    public XMLSecurityDataFormat(String secureTag, boolean secureTagContents, String xmlCipherAlgorithm, _            String keyCipherAlgorithm) {_        this()__        this.setSecureTag(secureTag)__        this.setSecureTagContents(secureTagContents)__        this.setXmlCipherAlgorithm(xmlCipherAlgorithm)__        this.setKeyCipherAlgorithm(keyCipherAlgorithm)__    };deprecated,use,link,xmlsecurity,data,format,string,map,boolean,string,string,string,string,or,link,xmlsecurity,data,format,string,map,boolean,string,string,string,key,store,parameters,instead;deprecated,public,xmlsecurity,data,format,string,secure,tag,boolean,secure,tag,contents,string,xml,cipher,algorithm,string,key,cipher,algorithm,this,this,set,secure,tag,secure,tag,this,set,secure,tag,contents,secure,tag,contents,this,set,xml,cipher,algorithm,xml,cipher,algorithm,this,set,key,cipher,algorithm,key,cipher,algorithm
XMLSecurityDataFormat -> @Deprecated     public XMLSecurityDataFormat(String secureTag, boolean secureTagContents, String xmlCipherAlgorithm,              String keyCipherAlgorithm);1532430683;@deprecated  use {@link #XMLSecurityDataFormat(String, Map, boolean, String, String, String, String)} or_{@link #XMLSecurityDataFormat(String, Map, boolean, String, String, String, KeyStoreParameters)} instead.;@Deprecated_    public XMLSecurityDataFormat(String secureTag, boolean secureTagContents, String xmlCipherAlgorithm, _            String keyCipherAlgorithm) {_        this()__        this.setSecureTag(secureTag)__        this.setSecureTagContents(secureTagContents)__        this.setXmlCipherAlgorithm(xmlCipherAlgorithm)__        this.setKeyCipherAlgorithm(keyCipherAlgorithm)__    };deprecated,use,link,xmlsecurity,data,format,string,map,boolean,string,string,string,string,or,link,xmlsecurity,data,format,string,map,boolean,string,string,string,key,store,parameters,instead;deprecated,public,xmlsecurity,data,format,string,secure,tag,boolean,secure,tag,contents,string,xml,cipher,algorithm,string,key,cipher,algorithm,this,this,set,secure,tag,secure,tag,this,set,secure,tag,contents,secure,tag,contents,this,set,xml,cipher,algorithm,xml,cipher,algorithm,this,set,key,cipher,algorithm,key,cipher,algorithm
XMLSecurityDataFormat -> @Deprecated     public XMLSecurityDataFormat(String secureTag, boolean secureTagContents, String xmlCipherAlgorithm,              String keyCipherAlgorithm);1537290824;@deprecated  use {@link #XMLSecurityDataFormat(String, Map, boolean, String, String, String, String)} or_{@link #XMLSecurityDataFormat(String, Map, boolean, String, String, String, KeyStoreParameters)} instead.;@Deprecated_    public XMLSecurityDataFormat(String secureTag, boolean secureTagContents, String xmlCipherAlgorithm, _            String keyCipherAlgorithm) {_        this()__        this.setSecureTag(secureTag)__        this.setSecureTagContents(secureTagContents)__        this.setXmlCipherAlgorithm(xmlCipherAlgorithm)__        this.setKeyCipherAlgorithm(keyCipherAlgorithm)__    };deprecated,use,link,xmlsecurity,data,format,string,map,boolean,string,string,string,string,or,link,xmlsecurity,data,format,string,map,boolean,string,string,string,key,store,parameters,instead;deprecated,public,xmlsecurity,data,format,string,secure,tag,boolean,secure,tag,contents,string,xml,cipher,algorithm,string,key,cipher,algorithm,this,this,set,secure,tag,secure,tag,this,set,secure,tag,contents,secure,tag,contents,this,set,xml,cipher,algorithm,xml,cipher,algorithm,this,set,key,cipher,algorithm,key,cipher,algorithm
XMLSecurityDataFormat -> @Deprecated     public XMLSecurityDataFormat(String secureTag, boolean secureTagContents, String xmlCipherAlgorithm,              String keyCipherAlgorithm);1540108158;@deprecated  use {@link #XMLSecurityDataFormat(String, Map, boolean, String, String, String, String)} or_{@link #XMLSecurityDataFormat(String, Map, boolean, String, String, String, KeyStoreParameters)} instead.;@Deprecated_    public XMLSecurityDataFormat(String secureTag, boolean secureTagContents, String xmlCipherAlgorithm, _            String keyCipherAlgorithm) {_        this()__        this.setSecureTag(secureTag)__        this.setSecureTagContents(secureTagContents)__        this.setXmlCipherAlgorithm(xmlCipherAlgorithm)__        this.setKeyCipherAlgorithm(keyCipherAlgorithm)__    };deprecated,use,link,xmlsecurity,data,format,string,map,boolean,string,string,string,string,or,link,xmlsecurity,data,format,string,map,boolean,string,string,string,key,store,parameters,instead;deprecated,public,xmlsecurity,data,format,string,secure,tag,boolean,secure,tag,contents,string,xml,cipher,algorithm,string,key,cipher,algorithm,this,this,set,secure,tag,secure,tag,this,set,secure,tag,contents,secure,tag,contents,this,set,xml,cipher,algorithm,xml,cipher,algorithm,this,set,key,cipher,algorithm,key,cipher,algorithm
XMLSecurityDataFormat -> @Deprecated     public KeyStore getKeyStore();1316532283;Gets the KeyStore configured for this data format._@deprecated  Will change to private access in the future.;@Deprecated_    public KeyStore getKeyStore() {_        if (keyStore == null && this.keyOrTrustStoreParameters != null) {_            try {_                keyStore = keyOrTrustStoreParameters.createKeyStore()__            } catch (Exception e) {_                throw new RuntimeException("Unable to create KeyStore with configured KeyStoreParameters. " + e.getMessage(), e)__            }_        }_        return this.keyStore__    };gets,the,key,store,configured,for,this,data,format,deprecated,will,change,to,private,access,in,the,future;deprecated,public,key,store,get,key,store,if,key,store,null,this,key,or,trust,store,parameters,null,try,key,store,key,or,trust,store,parameters,create,key,store,catch,exception,e,throw,new,runtime,exception,unable,to,create,key,store,with,configured,key,store,parameters,e,get,message,e,return,this,key,store
XMLSecurityDataFormat -> @Deprecated     public KeyStore getKeyStore();1336642311;Gets the KeyStore configured for this data format._@deprecated  Will change to private access in the future.;@Deprecated_    public KeyStore getKeyStore() {_        if (keyStore == null && this.keyOrTrustStoreParameters != null) {_            try {_                keyStore = keyOrTrustStoreParameters.createKeyStore()__            } catch (Exception e) {_                throw new RuntimeException("Unable to create KeyStore with configured KeyStoreParameters. " + e.getMessage(), e)__            }_        }_        return this.keyStore__    };gets,the,key,store,configured,for,this,data,format,deprecated,will,change,to,private,access,in,the,future;deprecated,public,key,store,get,key,store,if,key,store,null,this,key,or,trust,store,parameters,null,try,key,store,key,or,trust,store,parameters,create,key,store,catch,exception,e,throw,new,runtime,exception,unable,to,create,key,store,with,configured,key,store,parameters,e,get,message,e,return,this,key,store
XMLSecurityDataFormat -> @Deprecated     public KeyStore getKeyStore();1342106539;Gets the KeyStore configured for this data format._@deprecated  Will change to private access in the future.;@Deprecated_    public KeyStore getKeyStore() {_        if (keyStore == null && this.keyOrTrustStoreParameters != null) {_            try {_                keyStore = keyOrTrustStoreParameters.createKeyStore()__            } catch (Exception e) {_                throw new RuntimeException("Unable to create KeyStore with configured KeyStoreParameters. " + e.getMessage(), e)__            }_        }_        return this.keyStore__    };gets,the,key,store,configured,for,this,data,format,deprecated,will,change,to,private,access,in,the,future;deprecated,public,key,store,get,key,store,if,key,store,null,this,key,or,trust,store,parameters,null,try,key,store,key,or,trust,store,parameters,create,key,store,catch,exception,e,throw,new,runtime,exception,unable,to,create,key,store,with,configured,key,store,parameters,e,get,message,e,return,this,key,store
XMLSecurityDataFormat -> @Deprecated     public KeyStore getKeyStore();1346229387;Gets the KeyStore configured for this data format._@deprecated  Will change to private access in the future.;@Deprecated_    public KeyStore getKeyStore() {_        if (keyStore == null && this.keyOrTrustStoreParameters != null) {_            try {_                keyStore = keyOrTrustStoreParameters.createKeyStore()__            } catch (Exception e) {_                throw new RuntimeException("Unable to create KeyStore with configured KeyStoreParameters. " + e.getMessage(), e)__            }_        }_        return this.keyStore__    };gets,the,key,store,configured,for,this,data,format,deprecated,will,change,to,private,access,in,the,future;deprecated,public,key,store,get,key,store,if,key,store,null,this,key,or,trust,store,parameters,null,try,key,store,key,or,trust,store,parameters,create,key,store,catch,exception,e,throw,new,runtime,exception,unable,to,create,key,store,with,configured,key,store,parameters,e,get,message,e,return,this,key,store
XMLSecurityDataFormat -> @Deprecated     public KeyStore getKeyStore();1358954767;Gets the KeyStore configured for this data format._@deprecated  Will change to private access in the future.;@Deprecated_    public KeyStore getKeyStore() {_        if (keyStore == null && this.keyOrTrustStoreParameters != null) {_            try {_                keyStore = keyOrTrustStoreParameters.createKeyStore()__            } catch (Exception e) {_                throw new RuntimeException("Unable to create KeyStore with configured KeyStoreParameters. " + e.getMessage(), e)__            }_        }_        return this.keyStore__    };gets,the,key,store,configured,for,this,data,format,deprecated,will,change,to,private,access,in,the,future;deprecated,public,key,store,get,key,store,if,key,store,null,this,key,or,trust,store,parameters,null,try,key,store,key,or,trust,store,parameters,create,key,store,catch,exception,e,throw,new,runtime,exception,unable,to,create,key,store,with,configured,key,store,parameters,e,get,message,e,return,this,key,store
XMLSecurityDataFormat -> @Deprecated     public KeyStore getKeyStore();1375894613;Gets the KeyStore configured for this data format._@deprecated  Will change to private access in the future.;@Deprecated_    public KeyStore getKeyStore() {_        if (keyStore == null && this.keyOrTrustStoreParameters != null) {_            try {_                keyStore = keyOrTrustStoreParameters.createKeyStore()__            } catch (Exception e) {_                throw new RuntimeException("Unable to create KeyStore with configured KeyStoreParameters. " + e.getMessage(), e)__            }_        }_        return this.keyStore__    };gets,the,key,store,configured,for,this,data,format,deprecated,will,change,to,private,access,in,the,future;deprecated,public,key,store,get,key,store,if,key,store,null,this,key,or,trust,store,parameters,null,try,key,store,key,or,trust,store,parameters,create,key,store,catch,exception,e,throw,new,runtime,exception,unable,to,create,key,store,with,configured,key,store,parameters,e,get,message,e,return,this,key,store
XMLSecurityDataFormat -> @Deprecated     public KeyStore getKeyStore();1376034290;Gets the KeyStore configured for this data format._@deprecated  Will change to private access in the future.;@Deprecated_    public KeyStore getKeyStore() {_        if (keyStore == null && this.keyOrTrustStoreParameters != null) {_            try {_                keyStore = keyOrTrustStoreParameters.createKeyStore()__            } catch (Exception e) {_                throw new RuntimeException("Unable to create KeyStore with configured KeyStoreParameters. " + e.getMessage(), e)__            }_        }_        return this.keyStore__    };gets,the,key,store,configured,for,this,data,format,deprecated,will,change,to,private,access,in,the,future;deprecated,public,key,store,get,key,store,if,key,store,null,this,key,or,trust,store,parameters,null,try,key,store,key,or,trust,store,parameters,create,key,store,catch,exception,e,throw,new,runtime,exception,unable,to,create,key,store,with,configured,key,store,parameters,e,get,message,e,return,this,key,store
XMLSecurityDataFormat -> @Deprecated     public KeyStore getKeyStore();1376477110;Gets the KeyStore configured for this data format._@deprecated  Will change to private access in the future.;@Deprecated_    public KeyStore getKeyStore() {_        if (keyStore == null && this.keyOrTrustStoreParameters != null) {_            try {_                keyStore = keyOrTrustStoreParameters.createKeyStore()__            } catch (Exception e) {_                throw new RuntimeException("Unable to create KeyStore with configured KeyStoreParameters. " + e.getMessage(), e)__            }_        }_        return this.keyStore__    };gets,the,key,store,configured,for,this,data,format,deprecated,will,change,to,private,access,in,the,future;deprecated,public,key,store,get,key,store,if,key,store,null,this,key,or,trust,store,parameters,null,try,key,store,key,or,trust,store,parameters,create,key,store,catch,exception,e,throw,new,runtime,exception,unable,to,create,key,store,with,configured,key,store,parameters,e,get,message,e,return,this,key,store
XMLSecurityDataFormat -> @Deprecated     public KeyStore getKeyStore();1376632954;Gets the KeyStore configured for this data format._@deprecated  Will change to private access in the future.;@Deprecated_    public KeyStore getKeyStore() {_        if (keyStore == null && this.keyOrTrustStoreParameters != null) {_            try {_                keyStore = keyOrTrustStoreParameters.createKeyStore()__            } catch (Exception e) {_                throw new RuntimeException("Unable to create KeyStore with configured KeyStoreParameters. " + e.getMessage(), e)__            }_        }_        return this.keyStore__    };gets,the,key,store,configured,for,this,data,format,deprecated,will,change,to,private,access,in,the,future;deprecated,public,key,store,get,key,store,if,key,store,null,this,key,or,trust,store,parameters,null,try,key,store,key,or,trust,store,parameters,create,key,store,catch,exception,e,throw,new,runtime,exception,unable,to,create,key,store,with,configured,key,store,parameters,e,get,message,e,return,this,key,store
XMLSecurityDataFormat -> @Deprecated     public KeyStore getKeyStore();1388443957;Gets the KeyStore configured for this data format._@deprecated  Will change to private access in the future.;@Deprecated_    public KeyStore getKeyStore() {_        if (keyStore == null && this.keyOrTrustStoreParameters != null) {_            try {_                keyStore = keyOrTrustStoreParameters.createKeyStore()__            } catch (Exception e) {_                throw new RuntimeException("Unable to create KeyStore with configured KeyStoreParameters. " + e.getMessage(), e)__            }_        }_        return this.keyStore__    };gets,the,key,store,configured,for,this,data,format,deprecated,will,change,to,private,access,in,the,future;deprecated,public,key,store,get,key,store,if,key,store,null,this,key,or,trust,store,parameters,null,try,key,store,key,or,trust,store,parameters,create,key,store,catch,exception,e,throw,new,runtime,exception,unable,to,create,key,store,with,configured,key,store,parameters,e,get,message,e,return,this,key,store
XMLSecurityDataFormat -> @Deprecated     public KeyStore getKeyStore();1415211488;Gets the KeyStore configured for this data format._@deprecated  Will change to private access in the future.;@Deprecated_    public KeyStore getKeyStore() {_        if (keyStore == null && this.keyOrTrustStoreParameters != null) {_            try {_                keyStore = keyOrTrustStoreParameters.createKeyStore()__            } catch (Exception e) {_                throw new RuntimeException("Unable to create KeyStore with configured KeyStoreParameters. " + e.getMessage(), e)__            }_        }_        return this.keyStore__    };gets,the,key,store,configured,for,this,data,format,deprecated,will,change,to,private,access,in,the,future;deprecated,public,key,store,get,key,store,if,key,store,null,this,key,or,trust,store,parameters,null,try,key,store,key,or,trust,store,parameters,create,key,store,catch,exception,e,throw,new,runtime,exception,unable,to,create,key,store,with,configured,key,store,parameters,e,get,message,e,return,this,key,store
XMLSecurityDataFormat -> @Deprecated     public KeyStore getKeyStore();1415877369;Gets the KeyStore configured for this data format._@deprecated  Will change to private access in the future.;@Deprecated_    public KeyStore getKeyStore() {_        if (keyStore == null && this.keyOrTrustStoreParameters != null) {_            try {_                keyStore = keyOrTrustStoreParameters.createKeyStore()__            } catch (Exception e) {_                throw new RuntimeException("Unable to create KeyStore with configured KeyStoreParameters. " + e.getMessage(), e)__            }_        }_        return this.keyStore__    };gets,the,key,store,configured,for,this,data,format,deprecated,will,change,to,private,access,in,the,future;deprecated,public,key,store,get,key,store,if,key,store,null,this,key,or,trust,store,parameters,null,try,key,store,key,or,trust,store,parameters,create,key,store,catch,exception,e,throw,new,runtime,exception,unable,to,create,key,store,with,configured,key,store,parameters,e,get,message,e,return,this,key,store
XMLSecurityDataFormat -> @Deprecated     public KeyStore getKeyStore();1417521716;Gets the KeyStore configured for this data format._@deprecated  Will change to private access in the future.;@Deprecated_    public KeyStore getKeyStore() {_        if (keyStore == null && this.keyOrTrustStoreParameters != null) {_            try {_                keyStore = keyOrTrustStoreParameters.createKeyStore()__            } catch (Exception e) {_                throw new RuntimeException("Unable to create KeyStore with configured KeyStoreParameters. " + e.getMessage(), e)__            }_        }_        return this.keyStore__    };gets,the,key,store,configured,for,this,data,format,deprecated,will,change,to,private,access,in,the,future;deprecated,public,key,store,get,key,store,if,key,store,null,this,key,or,trust,store,parameters,null,try,key,store,key,or,trust,store,parameters,create,key,store,catch,exception,e,throw,new,runtime,exception,unable,to,create,key,store,with,configured,key,store,parameters,e,get,message,e,return,this,key,store
XMLSecurityDataFormat -> @Deprecated     public KeyStore getKeyStore();1417572756;Gets the KeyStore configured for this data format._@deprecated  Will change to private access in the future.;@Deprecated_    public KeyStore getKeyStore() {_        if (keyStore == null && this.keyOrTrustStoreParameters != null) {_            try {_                keyStore = keyOrTrustStoreParameters.createKeyStore()__            } catch (Exception e) {_                throw new RuntimeException("Unable to create KeyStore with configured KeyStoreParameters. " + e.getMessage(), e)__            }_        }_        return this.keyStore__    };gets,the,key,store,configured,for,this,data,format,deprecated,will,change,to,private,access,in,the,future;deprecated,public,key,store,get,key,store,if,key,store,null,this,key,or,trust,store,parameters,null,try,key,store,key,or,trust,store,parameters,create,key,store,catch,exception,e,throw,new,runtime,exception,unable,to,create,key,store,with,configured,key,store,parameters,e,get,message,e,return,this,key,store
XMLSecurityDataFormat -> @Deprecated     public KeyStore getKeyStore();1443094318;Gets the KeyStore configured for this data format._@deprecated  Will change to private access in the future.;@Deprecated_    public KeyStore getKeyStore() {_        if (keyStore == null && this.keyOrTrustStoreParameters != null) {_            try {_                keyStore = keyOrTrustStoreParameters.createKeyStore()__            } catch (Exception e) {_                throw new RuntimeException("Unable to create KeyStore with configured KeyStoreParameters. " + e.getMessage(), e)__            }_        }_        return this.keyStore__    };gets,the,key,store,configured,for,this,data,format,deprecated,will,change,to,private,access,in,the,future;deprecated,public,key,store,get,key,store,if,key,store,null,this,key,or,trust,store,parameters,null,try,key,store,key,or,trust,store,parameters,create,key,store,catch,exception,e,throw,new,runtime,exception,unable,to,create,key,store,with,configured,key,store,parameters,e,get,message,e,return,this,key,store
XMLSecurityDataFormat -> @Deprecated     public KeyStore getKeyStore();1443168793;Gets the KeyStore configured for this data format._@deprecated  Will change to private access in the future.;@Deprecated_    public KeyStore getKeyStore() {_        if (keyStore == null && this.keyOrTrustStoreParameters != null) {_            try {_                keyStore = keyOrTrustStoreParameters.createKeyStore()__            } catch (Exception e) {_                throw new RuntimeException("Unable to create KeyStore with configured KeyStoreParameters. " + e.getMessage(), e)__            }_        }_        return this.keyStore__    };gets,the,key,store,configured,for,this,data,format,deprecated,will,change,to,private,access,in,the,future;deprecated,public,key,store,get,key,store,if,key,store,null,this,key,or,trust,store,parameters,null,try,key,store,key,or,trust,store,parameters,create,key,store,catch,exception,e,throw,new,runtime,exception,unable,to,create,key,store,with,configured,key,store,parameters,e,get,message,e,return,this,key,store
XMLSecurityDataFormat -> @Deprecated     public KeyStore getKeyStore();1445110748;Gets the KeyStore configured for this data format._@deprecated  Will change to private access in the future.;@Deprecated_    public KeyStore getKeyStore() {_        if (keyStore == null && this.keyOrTrustStoreParameters != null) {_            try {_                keyStore = keyOrTrustStoreParameters.createKeyStore()__            } catch (Exception e) {_                throw new RuntimeException("Unable to create KeyStore with configured KeyStoreParameters. " + e.getMessage(), e)__            }_        }_        return this.keyStore__    };gets,the,key,store,configured,for,this,data,format,deprecated,will,change,to,private,access,in,the,future;deprecated,public,key,store,get,key,store,if,key,store,null,this,key,or,trust,store,parameters,null,try,key,store,key,or,trust,store,parameters,create,key,store,catch,exception,e,throw,new,runtime,exception,unable,to,create,key,store,with,configured,key,store,parameters,e,get,message,e,return,this,key,store
XMLSecurityDataFormat -> @Deprecated     public KeyStore getKeyStore();1518772634;Gets the KeyStore configured for this data format._@deprecated  Will change to private access in the future.;@Deprecated_    public KeyStore getKeyStore() {_        if (keyStore == null && this.keyOrTrustStoreParameters != null) {_            try {_                keyStore = keyOrTrustStoreParameters.createKeyStore()__            } catch (Exception e) {_                throw new RuntimeException("Unable to create KeyStore with configured KeyStoreParameters. " + e.getMessage(), e)__            }_        }_        return this.keyStore__    };gets,the,key,store,configured,for,this,data,format,deprecated,will,change,to,private,access,in,the,future;deprecated,public,key,store,get,key,store,if,key,store,null,this,key,or,trust,store,parameters,null,try,key,store,key,or,trust,store,parameters,create,key,store,catch,exception,e,throw,new,runtime,exception,unable,to,create,key,store,with,configured,key,store,parameters,e,get,message,e,return,this,key,store
XMLSecurityDataFormat -> @Deprecated     public KeyStore getKeyStore();1532430683;Gets the KeyStore configured for this data format._@deprecated  Will change to private access in the future.;@Deprecated_    public KeyStore getKeyStore() {_        if (keyStore == null && this.keyOrTrustStoreParameters != null) {_            try {_                keyStore = keyOrTrustStoreParameters.createKeyStore()__            } catch (Exception e) {_                throw new RuntimeException("Unable to create KeyStore with configured KeyStoreParameters. " + e.getMessage(), e)__            }_        }_        return this.keyStore__    };gets,the,key,store,configured,for,this,data,format,deprecated,will,change,to,private,access,in,the,future;deprecated,public,key,store,get,key,store,if,key,store,null,this,key,or,trust,store,parameters,null,try,key,store,key,or,trust,store,parameters,create,key,store,catch,exception,e,throw,new,runtime,exception,unable,to,create,key,store,with,configured,key,store,parameters,e,get,message,e,return,this,key,store
XMLSecurityDataFormat -> @Deprecated     public KeyStore getKeyStore();1537290824;Gets the KeyStore configured for this data format._@deprecated  Will change to private access in the future.;@Deprecated_    public KeyStore getKeyStore() {_        if (keyStore == null && this.keyOrTrustStoreParameters != null) {_            try {_                keyStore = keyOrTrustStoreParameters.createKeyStore()__            } catch (Exception e) {_                throw new RuntimeException("Unable to create KeyStore with configured KeyStoreParameters. " + e.getMessage(), e)__            }_        }_        return this.keyStore__    };gets,the,key,store,configured,for,this,data,format,deprecated,will,change,to,private,access,in,the,future;deprecated,public,key,store,get,key,store,if,key,store,null,this,key,or,trust,store,parameters,null,try,key,store,key,or,trust,store,parameters,create,key,store,catch,exception,e,throw,new,runtime,exception,unable,to,create,key,store,with,configured,key,store,parameters,e,get,message,e,return,this,key,store
XMLSecurityDataFormat -> @Deprecated     public KeyStore getKeyStore();1540108158;Gets the KeyStore configured for this data format._@deprecated  Will change to private access in the future.;@Deprecated_    public KeyStore getKeyStore() {_        if (keyStore == null && this.keyOrTrustStoreParameters != null) {_            try {_                keyStore = keyOrTrustStoreParameters.createKeyStore()__            } catch (Exception e) {_                throw new RuntimeException("Unable to create KeyStore with configured KeyStoreParameters. " + e.getMessage(), e)__            }_        }_        return this.keyStore__    };gets,the,key,store,configured,for,this,data,format,deprecated,will,change,to,private,access,in,the,future;deprecated,public,key,store,get,key,store,if,key,store,null,this,key,or,trust,store,parameters,null,try,key,store,key,or,trust,store,parameters,create,key,store,catch,exception,e,throw,new,runtime,exception,unable,to,create,key,store,with,configured,key,store,parameters,e,get,message,e,return,this,key,store
XMLSecurityDataFormat -> @Deprecated     private void setDefaultsFromContext(CamelContext context) throws Exception;1316532283;Sets missing properties that are defined in the Camel context._@deprecated  this operation populates the data format using depreciated properties and will be_removed at the end of the deprecation period;@Deprecated_    private void setDefaultsFromContext(CamelContext context) throws Exception {__        Map<String, String> contextProps = context.getProperties()__               _        if (this.recipientKeyAlias == null) {_            recipientKeyAlias = contextProps.get(XML_ENC_RECIPIENT_ALIAS)__        }__        if (this.trustStore == null && contextProps.containsKey(XML_ENC_TRUST_STORE_URL)) {_            trustStore = KeyStore.getInstance(KeyStore.getDefaultType())__            URL trustStoreUrl = new URL(contextProps.get(XML_ENC_TRUST_STORE_URL))__            if (trustStorePassword == null) {_                trustStorePassword = contextProps.get(XML_ENC_TRUST_STORE_PASSWORD)__            }_            trustStore.load(trustStoreUrl.openStream(), trustStorePassword.toCharArray())__        }_        _        if (this.keyStore == null && contextProps.containsKey(XML_ENC_KEY_STORE_URL)) {_            keyStore = KeyStore.getInstance(KeyStore.getDefaultType())__            URL keyStoreUrl = new URL(contextProps.get(XML_ENC_KEY_STORE_URL))__            if (keyStorePassword == null) {_                keyStorePassword = contextProps.get(XML_ENC_KEY_STORE_PASSWORD)__            }_            keyStore.load(keyStoreUrl.openStream(), keyStorePassword.toCharArray())_    _        }_        _        if (context.getProperties().containsKey(XML_ENC_KEY_STORE_ALIAS) && this.recipientKeyAlias == null) {_            recipientKeyAlias = contextProps.get(XML_ENC_KEY_STORE_ALIAS)__        }_    };sets,missing,properties,that,are,defined,in,the,camel,context,deprecated,this,operation,populates,the,data,format,using,depreciated,properties,and,will,be,removed,at,the,end,of,the,deprecation,period;deprecated,private,void,set,defaults,from,context,camel,context,context,throws,exception,map,string,string,context,props,context,get,properties,if,this,recipient,key,alias,null,recipient,key,alias,context,props,get,if,this,trust,store,null,context,props,contains,key,trust,store,key,store,get,instance,key,store,get,default,type,url,trust,store,url,new,url,context,props,get,if,trust,store,password,null,trust,store,password,context,props,get,trust,store,load,trust,store,url,open,stream,trust,store,password,to,char,array,if,this,key,store,null,context,props,contains,key,key,store,key,store,get,instance,key,store,get,default,type,url,key,store,url,new,url,context,props,get,if,key,store,password,null,key,store,password,context,props,get,key,store,load,key,store,url,open,stream,key,store,password,to,char,array,if,context,get,properties,contains,key,this,recipient,key,alias,null,recipient,key,alias,context,props,get
XMLSecurityDataFormat -> @Deprecated     private void setDefaultsFromContext(CamelContext context) throws Exception;1336642311;Sets missing properties that are defined in the Camel context._@deprecated  this operation populates the data format using depreciated properties and will be_removed at the end of the deprecation period;@Deprecated_    private void setDefaultsFromContext(CamelContext context) throws Exception {__        Map<String, String> contextProps = context.getProperties()__               _        if (this.recipientKeyAlias == null) {_            recipientKeyAlias = contextProps.get(XML_ENC_RECIPIENT_ALIAS)__        }__        if (this.trustStore == null && contextProps.containsKey(XML_ENC_TRUST_STORE_URL)) {_            trustStore = KeyStore.getInstance(KeyStore.getDefaultType())__            URL trustStoreUrl = new URL(contextProps.get(XML_ENC_TRUST_STORE_URL))__            if (trustStorePassword == null) {_                trustStorePassword = contextProps.get(XML_ENC_TRUST_STORE_PASSWORD)__            }_            trustStore.load(trustStoreUrl.openStream(), trustStorePassword.toCharArray())__        }_        _        if (this.keyStore == null && contextProps.containsKey(XML_ENC_KEY_STORE_URL)) {_            keyStore = KeyStore.getInstance(KeyStore.getDefaultType())__            URL keyStoreUrl = new URL(contextProps.get(XML_ENC_KEY_STORE_URL))__            if (keyStorePassword == null) {_                keyStorePassword = contextProps.get(XML_ENC_KEY_STORE_PASSWORD)__            }_            keyStore.load(keyStoreUrl.openStream(), keyStorePassword.toCharArray())_    _        }_        _        if (context.getProperties().containsKey(XML_ENC_KEY_STORE_ALIAS) && this.recipientKeyAlias == null) {_            recipientKeyAlias = contextProps.get(XML_ENC_KEY_STORE_ALIAS)__        }_    };sets,missing,properties,that,are,defined,in,the,camel,context,deprecated,this,operation,populates,the,data,format,using,depreciated,properties,and,will,be,removed,at,the,end,of,the,deprecation,period;deprecated,private,void,set,defaults,from,context,camel,context,context,throws,exception,map,string,string,context,props,context,get,properties,if,this,recipient,key,alias,null,recipient,key,alias,context,props,get,if,this,trust,store,null,context,props,contains,key,trust,store,key,store,get,instance,key,store,get,default,type,url,trust,store,url,new,url,context,props,get,if,trust,store,password,null,trust,store,password,context,props,get,trust,store,load,trust,store,url,open,stream,trust,store,password,to,char,array,if,this,key,store,null,context,props,contains,key,key,store,key,store,get,instance,key,store,get,default,type,url,key,store,url,new,url,context,props,get,if,key,store,password,null,key,store,password,context,props,get,key,store,load,key,store,url,open,stream,key,store,password,to,char,array,if,context,get,properties,contains,key,this,recipient,key,alias,null,recipient,key,alias,context,props,get
XMLSecurityDataFormat -> @Deprecated     private void setDefaultsFromContext(CamelContext context) throws Exception;1342106539;Sets missing properties that are defined in the Camel context._@deprecated  this operation populates the data format using depreciated properties and will be_removed at the end of the deprecation period;@Deprecated_    private void setDefaultsFromContext(CamelContext context) throws Exception {__        Map<String, String> contextProps = context.getProperties()__               _        if (this.recipientKeyAlias == null) {_            recipientKeyAlias = context.getProperty(XML_ENC_RECIPIENT_ALIAS)__        }__        if (this.trustStore == null && contextProps.containsKey(XML_ENC_TRUST_STORE_URL)) {_            trustStore = KeyStore.getInstance(KeyStore.getDefaultType())__            URL trustStoreUrl = new URL(context.getProperty(XML_ENC_TRUST_STORE_URL))__            if (trustStorePassword == null) {_                trustStorePassword = context.getProperty(XML_ENC_TRUST_STORE_PASSWORD)__            }_            trustStore.load(trustStoreUrl.openStream(), trustStorePassword.toCharArray())__        }_        _        if (this.keyStore == null && contextProps.containsKey(XML_ENC_KEY_STORE_URL)) {_            keyStore = KeyStore.getInstance(KeyStore.getDefaultType())__            URL keyStoreUrl = new URL(context.getProperty(XML_ENC_KEY_STORE_URL))__            if (keyStorePassword == null) {_                keyStorePassword = context.getProperty(XML_ENC_KEY_STORE_PASSWORD)__            }_            keyStore.load(keyStoreUrl.openStream(), keyStorePassword.toCharArray())_    _        }_        _        if (context.getProperties().containsKey(XML_ENC_KEY_STORE_ALIAS) && this.recipientKeyAlias == null) {_            recipientKeyAlias = context.getProperty(XML_ENC_KEY_STORE_ALIAS)__        }_    };sets,missing,properties,that,are,defined,in,the,camel,context,deprecated,this,operation,populates,the,data,format,using,depreciated,properties,and,will,be,removed,at,the,end,of,the,deprecation,period;deprecated,private,void,set,defaults,from,context,camel,context,context,throws,exception,map,string,string,context,props,context,get,properties,if,this,recipient,key,alias,null,recipient,key,alias,context,get,property,if,this,trust,store,null,context,props,contains,key,trust,store,key,store,get,instance,key,store,get,default,type,url,trust,store,url,new,url,context,get,property,if,trust,store,password,null,trust,store,password,context,get,property,trust,store,load,trust,store,url,open,stream,trust,store,password,to,char,array,if,this,key,store,null,context,props,contains,key,key,store,key,store,get,instance,key,store,get,default,type,url,key,store,url,new,url,context,get,property,if,key,store,password,null,key,store,password,context,get,property,key,store,load,key,store,url,open,stream,key,store,password,to,char,array,if,context,get,properties,contains,key,this,recipient,key,alias,null,recipient,key,alias,context,get,property
XMLSecurityDataFormat -> @Deprecated     private void setDefaultsFromContext(CamelContext context) throws Exception;1346229387;Sets missing properties that are defined in the Camel context._@deprecated  this operation populates the data format using depreciated properties and will be_removed at the end of the deprecation period;@Deprecated_    private void setDefaultsFromContext(CamelContext context) throws Exception {__        Map<String, String> contextProps = context.getProperties()__               _        if (this.recipientKeyAlias == null) {_            recipientKeyAlias = context.getProperty(XML_ENC_RECIPIENT_ALIAS)__        }__        if (this.trustStore == null && contextProps.containsKey(XML_ENC_TRUST_STORE_URL)) {_            trustStore = KeyStore.getInstance(KeyStore.getDefaultType())__            URL trustStoreUrl = new URL(context.getProperty(XML_ENC_TRUST_STORE_URL))__            if (trustStorePassword == null) {_                trustStorePassword = context.getProperty(XML_ENC_TRUST_STORE_PASSWORD)__            }_            trustStore.load(trustStoreUrl.openStream(), trustStorePassword.toCharArray())__        }_        _        if (this.keyStore == null && contextProps.containsKey(XML_ENC_KEY_STORE_URL)) {_            keyStore = KeyStore.getInstance(KeyStore.getDefaultType())__            URL keyStoreUrl = new URL(context.getProperty(XML_ENC_KEY_STORE_URL))__            if (keyStorePassword == null) {_                keyStorePassword = context.getProperty(XML_ENC_KEY_STORE_PASSWORD)__            }_            keyStore.load(keyStoreUrl.openStream(), keyStorePassword.toCharArray())_    _        }_        _        if (context.getProperties().containsKey(XML_ENC_KEY_STORE_ALIAS) && this.recipientKeyAlias == null) {_            recipientKeyAlias = context.getProperty(XML_ENC_KEY_STORE_ALIAS)__        }_    };sets,missing,properties,that,are,defined,in,the,camel,context,deprecated,this,operation,populates,the,data,format,using,depreciated,properties,and,will,be,removed,at,the,end,of,the,deprecation,period;deprecated,private,void,set,defaults,from,context,camel,context,context,throws,exception,map,string,string,context,props,context,get,properties,if,this,recipient,key,alias,null,recipient,key,alias,context,get,property,if,this,trust,store,null,context,props,contains,key,trust,store,key,store,get,instance,key,store,get,default,type,url,trust,store,url,new,url,context,get,property,if,trust,store,password,null,trust,store,password,context,get,property,trust,store,load,trust,store,url,open,stream,trust,store,password,to,char,array,if,this,key,store,null,context,props,contains,key,key,store,key,store,get,instance,key,store,get,default,type,url,key,store,url,new,url,context,get,property,if,key,store,password,null,key,store,password,context,get,property,key,store,load,key,store,url,open,stream,key,store,password,to,char,array,if,context,get,properties,contains,key,this,recipient,key,alias,null,recipient,key,alias,context,get,property
XMLSecurityDataFormat -> @Deprecated     private void setDefaultsFromContext(CamelContext context) throws Exception;1358954767;Sets missing properties that are defined in the Camel context._@deprecated  this operation populates the data format using depreciated properties and will be_removed at the end of the deprecation period;@Deprecated_    private void setDefaultsFromContext(CamelContext context) throws Exception {__        Map<String, String> contextProps = context.getProperties()__               _        if (this.recipientKeyAlias == null) {_            recipientKeyAlias = context.getProperty(XML_ENC_RECIPIENT_ALIAS)__        }__        if (this.trustStore == null && contextProps.containsKey(XML_ENC_TRUST_STORE_URL)) {_            trustStore = KeyStore.getInstance(KeyStore.getDefaultType())__            URL trustStoreUrl = new URL(context.getProperty(XML_ENC_TRUST_STORE_URL))__            if (trustStorePassword == null) {_                trustStorePassword = context.getProperty(XML_ENC_TRUST_STORE_PASSWORD)__            }_            trustStore.load(trustStoreUrl.openStream(), trustStorePassword.toCharArray())__        }_        _        if (this.keyStore == null && contextProps.containsKey(XML_ENC_KEY_STORE_URL)) {_            keyStore = KeyStore.getInstance(KeyStore.getDefaultType())__            URL keyStoreUrl = new URL(context.getProperty(XML_ENC_KEY_STORE_URL))__            if (keyStorePassword == null) {_                keyStorePassword = context.getProperty(XML_ENC_KEY_STORE_PASSWORD)__            }_            keyStore.load(keyStoreUrl.openStream(), keyStorePassword.toCharArray())_    _        }_        _        if (context.getProperties().containsKey(XML_ENC_KEY_STORE_ALIAS) && this.recipientKeyAlias == null) {_            recipientKeyAlias = context.getProperty(XML_ENC_KEY_STORE_ALIAS)__        }_    };sets,missing,properties,that,are,defined,in,the,camel,context,deprecated,this,operation,populates,the,data,format,using,depreciated,properties,and,will,be,removed,at,the,end,of,the,deprecation,period;deprecated,private,void,set,defaults,from,context,camel,context,context,throws,exception,map,string,string,context,props,context,get,properties,if,this,recipient,key,alias,null,recipient,key,alias,context,get,property,if,this,trust,store,null,context,props,contains,key,trust,store,key,store,get,instance,key,store,get,default,type,url,trust,store,url,new,url,context,get,property,if,trust,store,password,null,trust,store,password,context,get,property,trust,store,load,trust,store,url,open,stream,trust,store,password,to,char,array,if,this,key,store,null,context,props,contains,key,key,store,key,store,get,instance,key,store,get,default,type,url,key,store,url,new,url,context,get,property,if,key,store,password,null,key,store,password,context,get,property,key,store,load,key,store,url,open,stream,key,store,password,to,char,array,if,context,get,properties,contains,key,this,recipient,key,alias,null,recipient,key,alias,context,get,property
XMLSecurityDataFormat -> @Deprecated     private void setDefaultsFromContext(CamelContext context) throws Exception;1375894613;Sets missing properties that are defined in the Camel context._@deprecated  this operation populates the data format using depreciated properties and will be_removed at the end of the deprecation period;@Deprecated_    private void setDefaultsFromContext(CamelContext context) throws Exception {__        Map<String, String> contextProps = context.getProperties()__               _        if (this.recipientKeyAlias == null) {_            recipientKeyAlias = context.getProperty(XML_ENC_RECIPIENT_ALIAS)__        }__        if (this.trustStore == null && contextProps.containsKey(XML_ENC_TRUST_STORE_URL)) {_            trustStore = KeyStore.getInstance(KeyStore.getDefaultType())__            URL trustStoreUrl = new URL(context.getProperty(XML_ENC_TRUST_STORE_URL))__            if (trustStorePassword == null) {_                trustStorePassword = context.getProperty(XML_ENC_TRUST_STORE_PASSWORD)__            }_            trustStore.load(trustStoreUrl.openStream(), trustStorePassword.toCharArray())__        }_        _        if (this.keyStore == null && contextProps.containsKey(XML_ENC_KEY_STORE_URL)) {_            keyStore = KeyStore.getInstance(KeyStore.getDefaultType())__            URL keyStoreUrl = new URL(context.getProperty(XML_ENC_KEY_STORE_URL))__            if (keyStorePassword == null) {_                keyStorePassword = context.getProperty(XML_ENC_KEY_STORE_PASSWORD)__            }_            keyStore.load(keyStoreUrl.openStream(), keyStorePassword.toCharArray())_    _        }_        _        if (context.getProperties().containsKey(XML_ENC_KEY_STORE_ALIAS) && this.recipientKeyAlias == null) {_            recipientKeyAlias = context.getProperty(XML_ENC_KEY_STORE_ALIAS)__        }_    };sets,missing,properties,that,are,defined,in,the,camel,context,deprecated,this,operation,populates,the,data,format,using,depreciated,properties,and,will,be,removed,at,the,end,of,the,deprecation,period;deprecated,private,void,set,defaults,from,context,camel,context,context,throws,exception,map,string,string,context,props,context,get,properties,if,this,recipient,key,alias,null,recipient,key,alias,context,get,property,if,this,trust,store,null,context,props,contains,key,trust,store,key,store,get,instance,key,store,get,default,type,url,trust,store,url,new,url,context,get,property,if,trust,store,password,null,trust,store,password,context,get,property,trust,store,load,trust,store,url,open,stream,trust,store,password,to,char,array,if,this,key,store,null,context,props,contains,key,key,store,key,store,get,instance,key,store,get,default,type,url,key,store,url,new,url,context,get,property,if,key,store,password,null,key,store,password,context,get,property,key,store,load,key,store,url,open,stream,key,store,password,to,char,array,if,context,get,properties,contains,key,this,recipient,key,alias,null,recipient,key,alias,context,get,property
XMLSecurityDataFormat -> @Deprecated     private void setDefaultsFromContext(CamelContext context) throws Exception;1376034290;Sets missing properties that are defined in the Camel context._@deprecated  this operation populates the data format using depreciated properties and will be_removed at the end of the deprecation period;@Deprecated_    private void setDefaultsFromContext(CamelContext context) throws Exception {__        Map<String, String> contextProps = context.getProperties()__               _        if (this.recipientKeyAlias == null) {_            recipientKeyAlias = context.getProperty(XML_ENC_RECIPIENT_ALIAS)__        }__        if (this.trustStore == null && contextProps.containsKey(XML_ENC_TRUST_STORE_URL)) {_            trustStore = KeyStore.getInstance(KeyStore.getDefaultType())__            URL trustStoreUrl = new URL(context.getProperty(XML_ENC_TRUST_STORE_URL))__            if (trustStorePassword == null) {_                trustStorePassword = context.getProperty(XML_ENC_TRUST_STORE_PASSWORD)__            }_            trustStore.load(trustStoreUrl.openStream(), trustStorePassword.toCharArray())__        }_        _        if (this.keyStore == null && contextProps.containsKey(XML_ENC_KEY_STORE_URL)) {_            keyStore = KeyStore.getInstance(KeyStore.getDefaultType())__            URL keyStoreUrl = new URL(context.getProperty(XML_ENC_KEY_STORE_URL))__            if (keyStorePassword == null) {_                keyStorePassword = context.getProperty(XML_ENC_KEY_STORE_PASSWORD)__            }_            keyStore.load(keyStoreUrl.openStream(), keyStorePassword.toCharArray())_    _        }_        _        if (context.getProperties().containsKey(XML_ENC_KEY_STORE_ALIAS) && this.recipientKeyAlias == null) {_            recipientKeyAlias = context.getProperty(XML_ENC_KEY_STORE_ALIAS)__        }_    };sets,missing,properties,that,are,defined,in,the,camel,context,deprecated,this,operation,populates,the,data,format,using,depreciated,properties,and,will,be,removed,at,the,end,of,the,deprecation,period;deprecated,private,void,set,defaults,from,context,camel,context,context,throws,exception,map,string,string,context,props,context,get,properties,if,this,recipient,key,alias,null,recipient,key,alias,context,get,property,if,this,trust,store,null,context,props,contains,key,trust,store,key,store,get,instance,key,store,get,default,type,url,trust,store,url,new,url,context,get,property,if,trust,store,password,null,trust,store,password,context,get,property,trust,store,load,trust,store,url,open,stream,trust,store,password,to,char,array,if,this,key,store,null,context,props,contains,key,key,store,key,store,get,instance,key,store,get,default,type,url,key,store,url,new,url,context,get,property,if,key,store,password,null,key,store,password,context,get,property,key,store,load,key,store,url,open,stream,key,store,password,to,char,array,if,context,get,properties,contains,key,this,recipient,key,alias,null,recipient,key,alias,context,get,property
XMLSecurityDataFormat -> @Deprecated     private void setDefaultsFromContext(CamelContext context) throws Exception;1376477110;Sets missing properties that are defined in the Camel context._@deprecated  this operation populates the data format using depreciated properties and will be_removed at the end of the deprecation period;@Deprecated_    private void setDefaultsFromContext(CamelContext context) throws Exception {__        Map<String, String> contextProps = context.getProperties()__               _        if (this.recipientKeyAlias == null) {_            recipientKeyAlias = context.getProperty(XML_ENC_RECIPIENT_ALIAS)__        }__        if (this.trustStore == null && contextProps.containsKey(XML_ENC_TRUST_STORE_URL)) {_            trustStore = KeyStore.getInstance(KeyStore.getDefaultType())__            URL trustStoreUrl = new URL(context.getProperty(XML_ENC_TRUST_STORE_URL))__            if (trustStorePassword == null) {_                trustStorePassword = context.getProperty(XML_ENC_TRUST_STORE_PASSWORD)__            }_            trustStore.load(trustStoreUrl.openStream(), trustStorePassword.toCharArray())__        }_        _        if (this.keyStore == null && contextProps.containsKey(XML_ENC_KEY_STORE_URL)) {_            keyStore = KeyStore.getInstance(KeyStore.getDefaultType())__            URL keyStoreUrl = new URL(context.getProperty(XML_ENC_KEY_STORE_URL))__            if (keyStorePassword == null) {_                keyStorePassword = context.getProperty(XML_ENC_KEY_STORE_PASSWORD)__            }_            keyStore.load(keyStoreUrl.openStream(), keyStorePassword.toCharArray())_    _        }_        _        if (context.getProperties().containsKey(XML_ENC_KEY_STORE_ALIAS) && this.recipientKeyAlias == null) {_            recipientKeyAlias = context.getProperty(XML_ENC_KEY_STORE_ALIAS)__        }_    };sets,missing,properties,that,are,defined,in,the,camel,context,deprecated,this,operation,populates,the,data,format,using,depreciated,properties,and,will,be,removed,at,the,end,of,the,deprecation,period;deprecated,private,void,set,defaults,from,context,camel,context,context,throws,exception,map,string,string,context,props,context,get,properties,if,this,recipient,key,alias,null,recipient,key,alias,context,get,property,if,this,trust,store,null,context,props,contains,key,trust,store,key,store,get,instance,key,store,get,default,type,url,trust,store,url,new,url,context,get,property,if,trust,store,password,null,trust,store,password,context,get,property,trust,store,load,trust,store,url,open,stream,trust,store,password,to,char,array,if,this,key,store,null,context,props,contains,key,key,store,key,store,get,instance,key,store,get,default,type,url,key,store,url,new,url,context,get,property,if,key,store,password,null,key,store,password,context,get,property,key,store,load,key,store,url,open,stream,key,store,password,to,char,array,if,context,get,properties,contains,key,this,recipient,key,alias,null,recipient,key,alias,context,get,property
XMLSecurityDataFormat -> @Deprecated     private void setDefaultsFromContext(CamelContext context) throws Exception;1376632954;Sets missing properties that are defined in the Camel context._@deprecated  this operation populates the data format using depreciated properties and will be_removed at the end of the deprecation period;@Deprecated_    private void setDefaultsFromContext(CamelContext context) throws Exception {__        Map<String, String> contextProps = context.getProperties()__               _        if (this.recipientKeyAlias == null) {_            recipientKeyAlias = context.getProperty(XML_ENC_RECIPIENT_ALIAS)__        }__        if (this.trustStore == null && contextProps.containsKey(XML_ENC_TRUST_STORE_URL)) {_            trustStore = KeyStore.getInstance(KeyStore.getDefaultType())__            URL trustStoreUrl = new URL(context.getProperty(XML_ENC_TRUST_STORE_URL))__            if (trustStorePassword == null) {_                trustStorePassword = context.getProperty(XML_ENC_TRUST_STORE_PASSWORD)__            }_            trustStore.load(trustStoreUrl.openStream(), trustStorePassword.toCharArray())__        }_        _        if (this.keyStore == null && contextProps.containsKey(XML_ENC_KEY_STORE_URL)) {_            keyStore = KeyStore.getInstance(KeyStore.getDefaultType())__            URL keyStoreUrl = new URL(context.getProperty(XML_ENC_KEY_STORE_URL))__            if (keyStorePassword == null) {_                keyStorePassword = context.getProperty(XML_ENC_KEY_STORE_PASSWORD)__            }_            keyStore.load(keyStoreUrl.openStream(), keyStorePassword.toCharArray())_    _        }_        _        if (context.getProperties().containsKey(XML_ENC_KEY_STORE_ALIAS) && this.recipientKeyAlias == null) {_            recipientKeyAlias = context.getProperty(XML_ENC_KEY_STORE_ALIAS)__        }_    };sets,missing,properties,that,are,defined,in,the,camel,context,deprecated,this,operation,populates,the,data,format,using,depreciated,properties,and,will,be,removed,at,the,end,of,the,deprecation,period;deprecated,private,void,set,defaults,from,context,camel,context,context,throws,exception,map,string,string,context,props,context,get,properties,if,this,recipient,key,alias,null,recipient,key,alias,context,get,property,if,this,trust,store,null,context,props,contains,key,trust,store,key,store,get,instance,key,store,get,default,type,url,trust,store,url,new,url,context,get,property,if,trust,store,password,null,trust,store,password,context,get,property,trust,store,load,trust,store,url,open,stream,trust,store,password,to,char,array,if,this,key,store,null,context,props,contains,key,key,store,key,store,get,instance,key,store,get,default,type,url,key,store,url,new,url,context,get,property,if,key,store,password,null,key,store,password,context,get,property,key,store,load,key,store,url,open,stream,key,store,password,to,char,array,if,context,get,properties,contains,key,this,recipient,key,alias,null,recipient,key,alias,context,get,property
XMLSecurityDataFormat -> @Deprecated     private void setDefaultsFromContext(CamelContext context) throws Exception;1388443957;Sets missing properties that are defined in the Camel context._@deprecated  this operation populates the data format using depreciated properties and will be_removed at the end of the deprecation period;@Deprecated_    private void setDefaultsFromContext(CamelContext context) throws Exception {__        Map<String, String> contextProps = context.getProperties()__               _        if (this.recipientKeyAlias == null) {_            recipientKeyAlias = context.getProperty(XML_ENC_RECIPIENT_ALIAS)__        }__        if (this.trustStore == null && contextProps.containsKey(XML_ENC_TRUST_STORE_URL)) {_            trustStore = KeyStore.getInstance(KeyStore.getDefaultType())__            URL trustStoreUrl = new URL(context.getProperty(XML_ENC_TRUST_STORE_URL))__            if (trustStorePassword == null) {_                trustStorePassword = context.getProperty(XML_ENC_TRUST_STORE_PASSWORD)__            }_            trustStore.load(trustStoreUrl.openStream(), trustStorePassword.toCharArray())__        }_        _        if (this.keyStore == null && contextProps.containsKey(XML_ENC_KEY_STORE_URL)) {_            keyStore = KeyStore.getInstance(KeyStore.getDefaultType())__            URL keyStoreUrl = new URL(context.getProperty(XML_ENC_KEY_STORE_URL))__            if (keyStorePassword == null) {_                keyStorePassword = context.getProperty(XML_ENC_KEY_STORE_PASSWORD)__            }_            keyStore.load(keyStoreUrl.openStream(), keyStorePassword.toCharArray())_    _        }_        _        if (context.getProperties().containsKey(XML_ENC_KEY_STORE_ALIAS) && this.recipientKeyAlias == null) {_            recipientKeyAlias = context.getProperty(XML_ENC_KEY_STORE_ALIAS)__        }_    };sets,missing,properties,that,are,defined,in,the,camel,context,deprecated,this,operation,populates,the,data,format,using,depreciated,properties,and,will,be,removed,at,the,end,of,the,deprecation,period;deprecated,private,void,set,defaults,from,context,camel,context,context,throws,exception,map,string,string,context,props,context,get,properties,if,this,recipient,key,alias,null,recipient,key,alias,context,get,property,if,this,trust,store,null,context,props,contains,key,trust,store,key,store,get,instance,key,store,get,default,type,url,trust,store,url,new,url,context,get,property,if,trust,store,password,null,trust,store,password,context,get,property,trust,store,load,trust,store,url,open,stream,trust,store,password,to,char,array,if,this,key,store,null,context,props,contains,key,key,store,key,store,get,instance,key,store,get,default,type,url,key,store,url,new,url,context,get,property,if,key,store,password,null,key,store,password,context,get,property,key,store,load,key,store,url,open,stream,key,store,password,to,char,array,if,context,get,properties,contains,key,this,recipient,key,alias,null,recipient,key,alias,context,get,property
XMLSecurityDataFormat -> @Deprecated     private void setDefaultsFromContext(CamelContext context) throws Exception;1415211488;Sets missing properties that are defined in the Camel context._@deprecated  this operation populates the data format using depreciated properties and will be_removed at the end of the deprecation period;@Deprecated_    private void setDefaultsFromContext(CamelContext context) throws Exception {__        Map<String, String> contextProps = context.getProperties()__               _        if (this.recipientKeyAlias == null) {_            recipientKeyAlias = context.getProperty(XML_ENC_RECIPIENT_ALIAS)__        }__        if (this.trustStore == null && contextProps.containsKey(XML_ENC_TRUST_STORE_URL)) {_            trustStore = KeyStore.getInstance(KeyStore.getDefaultType())__            URL trustStoreUrl = new URL(context.getProperty(XML_ENC_TRUST_STORE_URL))__            if (trustStorePassword == null) {_                trustStorePassword = context.getProperty(XML_ENC_TRUST_STORE_PASSWORD)__            }_            trustStore.load(trustStoreUrl.openStream(), trustStorePassword.toCharArray())__        }_        _        if (this.keyStore == null && contextProps.containsKey(XML_ENC_KEY_STORE_URL)) {_            keyStore = KeyStore.getInstance(KeyStore.getDefaultType())__            URL keyStoreUrl = new URL(context.getProperty(XML_ENC_KEY_STORE_URL))__            if (keyStorePassword == null) {_                keyStorePassword = context.getProperty(XML_ENC_KEY_STORE_PASSWORD)__            }_            keyStore.load(keyStoreUrl.openStream(), keyStorePassword.toCharArray())_    _        }_        _        if (context.getProperties().containsKey(XML_ENC_KEY_STORE_ALIAS) && this.recipientKeyAlias == null) {_            recipientKeyAlias = context.getProperty(XML_ENC_KEY_STORE_ALIAS)__        }_    };sets,missing,properties,that,are,defined,in,the,camel,context,deprecated,this,operation,populates,the,data,format,using,depreciated,properties,and,will,be,removed,at,the,end,of,the,deprecation,period;deprecated,private,void,set,defaults,from,context,camel,context,context,throws,exception,map,string,string,context,props,context,get,properties,if,this,recipient,key,alias,null,recipient,key,alias,context,get,property,if,this,trust,store,null,context,props,contains,key,trust,store,key,store,get,instance,key,store,get,default,type,url,trust,store,url,new,url,context,get,property,if,trust,store,password,null,trust,store,password,context,get,property,trust,store,load,trust,store,url,open,stream,trust,store,password,to,char,array,if,this,key,store,null,context,props,contains,key,key,store,key,store,get,instance,key,store,get,default,type,url,key,store,url,new,url,context,get,property,if,key,store,password,null,key,store,password,context,get,property,key,store,load,key,store,url,open,stream,key,store,password,to,char,array,if,context,get,properties,contains,key,this,recipient,key,alias,null,recipient,key,alias,context,get,property
XMLSecurityDataFormat -> @Deprecated     private void setDefaultsFromContext(CamelContext context) throws Exception;1415877369;Sets missing properties that are defined in the Camel context._@deprecated  this operation populates the data format using depreciated properties and will be_removed at the end of the deprecation period;@Deprecated_    private void setDefaultsFromContext(CamelContext context) throws Exception {__        Map<String, String> contextProps = context.getProperties()__               _        if (this.recipientKeyAlias == null) {_            recipientKeyAlias = context.getProperty(XML_ENC_RECIPIENT_ALIAS)__        }__        if (this.trustStore == null && contextProps.containsKey(XML_ENC_TRUST_STORE_URL)) {_            trustStore = KeyStore.getInstance(KeyStore.getDefaultType())__            URL trustStoreUrl = new URL(context.getProperty(XML_ENC_TRUST_STORE_URL))__            if (trustStorePassword == null) {_                trustStorePassword = context.getProperty(XML_ENC_TRUST_STORE_PASSWORD)__            }_            trustStore.load(trustStoreUrl.openStream(), trustStorePassword.toCharArray())__        }_        _        if (this.keyStore == null && contextProps.containsKey(XML_ENC_KEY_STORE_URL)) {_            keyStore = KeyStore.getInstance(KeyStore.getDefaultType())__            URL keyStoreUrl = new URL(context.getProperty(XML_ENC_KEY_STORE_URL))__            if (keyStorePassword == null) {_                keyStorePassword = context.getProperty(XML_ENC_KEY_STORE_PASSWORD)__            }_            keyStore.load(keyStoreUrl.openStream(), keyStorePassword.toCharArray())_    _        }_        _        if (context.getProperties().containsKey(XML_ENC_KEY_STORE_ALIAS) && this.recipientKeyAlias == null) {_            recipientKeyAlias = context.getProperty(XML_ENC_KEY_STORE_ALIAS)__        }_    };sets,missing,properties,that,are,defined,in,the,camel,context,deprecated,this,operation,populates,the,data,format,using,depreciated,properties,and,will,be,removed,at,the,end,of,the,deprecation,period;deprecated,private,void,set,defaults,from,context,camel,context,context,throws,exception,map,string,string,context,props,context,get,properties,if,this,recipient,key,alias,null,recipient,key,alias,context,get,property,if,this,trust,store,null,context,props,contains,key,trust,store,key,store,get,instance,key,store,get,default,type,url,trust,store,url,new,url,context,get,property,if,trust,store,password,null,trust,store,password,context,get,property,trust,store,load,trust,store,url,open,stream,trust,store,password,to,char,array,if,this,key,store,null,context,props,contains,key,key,store,key,store,get,instance,key,store,get,default,type,url,key,store,url,new,url,context,get,property,if,key,store,password,null,key,store,password,context,get,property,key,store,load,key,store,url,open,stream,key,store,password,to,char,array,if,context,get,properties,contains,key,this,recipient,key,alias,null,recipient,key,alias,context,get,property
XMLSecurityDataFormat -> @Deprecated     private void setDefaultsFromContext(CamelContext context) throws Exception;1417521716;Sets missing properties that are defined in the Camel context._@deprecated  this operation populates the data format using depreciated properties and will be_removed at the end of the deprecation period;@Deprecated_    private void setDefaultsFromContext(CamelContext context) throws Exception {__        Map<String, String> contextProps = context.getProperties()__               _        if (this.recipientKeyAlias == null) {_            recipientKeyAlias = context.getProperty(XML_ENC_RECIPIENT_ALIAS)__        }__        if (this.trustStore == null && contextProps.containsKey(XML_ENC_TRUST_STORE_URL)) {_            trustStore = KeyStore.getInstance(KeyStore.getDefaultType())__            URL trustStoreUrl = new URL(context.getProperty(XML_ENC_TRUST_STORE_URL))__            if (trustStorePassword == null) {_                trustStorePassword = context.getProperty(XML_ENC_TRUST_STORE_PASSWORD)__            }_            trustStore.load(trustStoreUrl.openStream(), trustStorePassword.toCharArray())__        }_        _        if (this.keyStore == null && contextProps.containsKey(XML_ENC_KEY_STORE_URL)) {_            keyStore = KeyStore.getInstance(KeyStore.getDefaultType())__            URL keyStoreUrl = new URL(context.getProperty(XML_ENC_KEY_STORE_URL))__            if (keyStorePassword == null) {_                keyStorePassword = context.getProperty(XML_ENC_KEY_STORE_PASSWORD)__            }_            keyStore.load(keyStoreUrl.openStream(), keyStorePassword.toCharArray())_    _        }_        _        if (context.getProperties().containsKey(XML_ENC_KEY_STORE_ALIAS) && this.recipientKeyAlias == null) {_            recipientKeyAlias = context.getProperty(XML_ENC_KEY_STORE_ALIAS)__        }_    };sets,missing,properties,that,are,defined,in,the,camel,context,deprecated,this,operation,populates,the,data,format,using,depreciated,properties,and,will,be,removed,at,the,end,of,the,deprecation,period;deprecated,private,void,set,defaults,from,context,camel,context,context,throws,exception,map,string,string,context,props,context,get,properties,if,this,recipient,key,alias,null,recipient,key,alias,context,get,property,if,this,trust,store,null,context,props,contains,key,trust,store,key,store,get,instance,key,store,get,default,type,url,trust,store,url,new,url,context,get,property,if,trust,store,password,null,trust,store,password,context,get,property,trust,store,load,trust,store,url,open,stream,trust,store,password,to,char,array,if,this,key,store,null,context,props,contains,key,key,store,key,store,get,instance,key,store,get,default,type,url,key,store,url,new,url,context,get,property,if,key,store,password,null,key,store,password,context,get,property,key,store,load,key,store,url,open,stream,key,store,password,to,char,array,if,context,get,properties,contains,key,this,recipient,key,alias,null,recipient,key,alias,context,get,property
XMLSecurityDataFormat -> @Deprecated     private void setDefaultsFromContext(CamelContext context) throws Exception;1417572756;Sets missing properties that are defined in the Camel context._@deprecated  this operation populates the data format using depreciated properties and will be_removed at the end of the deprecation period;@Deprecated_    private void setDefaultsFromContext(CamelContext context) throws Exception {__        Map<String, String> contextProps = context.getProperties()__               _        if (this.recipientKeyAlias == null) {_            recipientKeyAlias = context.getProperty(XML_ENC_RECIPIENT_ALIAS)__        }__        if (this.trustStore == null && contextProps.containsKey(XML_ENC_TRUST_STORE_URL)) {_            trustStore = KeyStore.getInstance(KeyStore.getDefaultType())__            URL trustStoreUrl = new URL(context.getProperty(XML_ENC_TRUST_STORE_URL))__            if (trustStorePassword == null) {_                trustStorePassword = context.getProperty(XML_ENC_TRUST_STORE_PASSWORD)__            }_            trustStore.load(trustStoreUrl.openStream(), trustStorePassword.toCharArray())__        }_        _        if (this.keyStore == null && contextProps.containsKey(XML_ENC_KEY_STORE_URL)) {_            keyStore = KeyStore.getInstance(KeyStore.getDefaultType())__            URL keyStoreUrl = new URL(context.getProperty(XML_ENC_KEY_STORE_URL))__            if (keyStorePassword == null) {_                keyStorePassword = context.getProperty(XML_ENC_KEY_STORE_PASSWORD)__            }_            keyStore.load(keyStoreUrl.openStream(), keyStorePassword.toCharArray())_    _        }_        _        if (context.getProperties().containsKey(XML_ENC_KEY_STORE_ALIAS) && this.recipientKeyAlias == null) {_            recipientKeyAlias = context.getProperty(XML_ENC_KEY_STORE_ALIAS)__        }_    };sets,missing,properties,that,are,defined,in,the,camel,context,deprecated,this,operation,populates,the,data,format,using,depreciated,properties,and,will,be,removed,at,the,end,of,the,deprecation,period;deprecated,private,void,set,defaults,from,context,camel,context,context,throws,exception,map,string,string,context,props,context,get,properties,if,this,recipient,key,alias,null,recipient,key,alias,context,get,property,if,this,trust,store,null,context,props,contains,key,trust,store,key,store,get,instance,key,store,get,default,type,url,trust,store,url,new,url,context,get,property,if,trust,store,password,null,trust,store,password,context,get,property,trust,store,load,trust,store,url,open,stream,trust,store,password,to,char,array,if,this,key,store,null,context,props,contains,key,key,store,key,store,get,instance,key,store,get,default,type,url,key,store,url,new,url,context,get,property,if,key,store,password,null,key,store,password,context,get,property,key,store,load,key,store,url,open,stream,key,store,password,to,char,array,if,context,get,properties,contains,key,this,recipient,key,alias,null,recipient,key,alias,context,get,property
XMLSecurityDataFormat -> @Deprecated     private void setDefaultsFromContext(CamelContext context) throws Exception;1443094318;Sets missing properties that are defined in the Camel context._@deprecated  this operation populates the data format using depreciated properties and will be_removed at the end of the deprecation period;@Deprecated_    private void setDefaultsFromContext(CamelContext context) throws Exception {__        Map<String, String> contextProps = context.getProperties()__               _        if (this.recipientKeyAlias == null) {_            recipientKeyAlias = context.getProperty(XML_ENC_RECIPIENT_ALIAS)__        }__        if (this.trustStore == null && contextProps.containsKey(XML_ENC_TRUST_STORE_URL)) {_            trustStore = KeyStore.getInstance(KeyStore.getDefaultType())__            URL trustStoreUrl = new URL(context.getProperty(XML_ENC_TRUST_STORE_URL))__            if (trustStorePassword == null) {_                trustStorePassword = context.getProperty(XML_ENC_TRUST_STORE_PASSWORD)__            }_            trustStore.load(trustStoreUrl.openStream(), trustStorePassword.toCharArray())__        }_        _        if (this.keyStore == null && contextProps.containsKey(XML_ENC_KEY_STORE_URL)) {_            keyStore = KeyStore.getInstance(KeyStore.getDefaultType())__            URL keyStoreUrl = new URL(context.getProperty(XML_ENC_KEY_STORE_URL))__            if (keyStorePassword == null) {_                keyStorePassword = context.getProperty(XML_ENC_KEY_STORE_PASSWORD)__            }_            keyStore.load(keyStoreUrl.openStream(), keyStorePassword.toCharArray())_    _        }_        _        if (context.getProperties().containsKey(XML_ENC_KEY_STORE_ALIAS) && this.recipientKeyAlias == null) {_            recipientKeyAlias = context.getProperty(XML_ENC_KEY_STORE_ALIAS)__        }_    };sets,missing,properties,that,are,defined,in,the,camel,context,deprecated,this,operation,populates,the,data,format,using,depreciated,properties,and,will,be,removed,at,the,end,of,the,deprecation,period;deprecated,private,void,set,defaults,from,context,camel,context,context,throws,exception,map,string,string,context,props,context,get,properties,if,this,recipient,key,alias,null,recipient,key,alias,context,get,property,if,this,trust,store,null,context,props,contains,key,trust,store,key,store,get,instance,key,store,get,default,type,url,trust,store,url,new,url,context,get,property,if,trust,store,password,null,trust,store,password,context,get,property,trust,store,load,trust,store,url,open,stream,trust,store,password,to,char,array,if,this,key,store,null,context,props,contains,key,key,store,key,store,get,instance,key,store,get,default,type,url,key,store,url,new,url,context,get,property,if,key,store,password,null,key,store,password,context,get,property,key,store,load,key,store,url,open,stream,key,store,password,to,char,array,if,context,get,properties,contains,key,this,recipient,key,alias,null,recipient,key,alias,context,get,property
XMLSecurityDataFormat -> @Deprecated     private void setDefaultsFromContext(CamelContext context) throws Exception;1443168793;Sets missing properties that are defined in the Camel context._@deprecated  this operation populates the data format using depreciated properties and will be_removed at the end of the deprecation period;@Deprecated_    private void setDefaultsFromContext(CamelContext context) throws Exception {__        Map<String, String> contextProps = context.getProperties()__               _        if (this.recipientKeyAlias == null) {_            recipientKeyAlias = context.getProperty(XML_ENC_RECIPIENT_ALIAS)__        }__        if (this.trustStore == null && contextProps.containsKey(XML_ENC_TRUST_STORE_URL)) {_            trustStore = KeyStore.getInstance(KeyStore.getDefaultType())__            URL trustStoreUrl = new URL(context.getProperty(XML_ENC_TRUST_STORE_URL))__            if (trustStorePassword == null) {_                trustStorePassword = context.getProperty(XML_ENC_TRUST_STORE_PASSWORD)__            }_            trustStore.load(trustStoreUrl.openStream(), trustStorePassword.toCharArray())__        }_        _        if (this.keyStore == null && contextProps.containsKey(XML_ENC_KEY_STORE_URL)) {_            keyStore = KeyStore.getInstance(KeyStore.getDefaultType())__            URL keyStoreUrl = new URL(context.getProperty(XML_ENC_KEY_STORE_URL))__            if (keyStorePassword == null) {_                keyStorePassword = context.getProperty(XML_ENC_KEY_STORE_PASSWORD)__            }_            keyStore.load(keyStoreUrl.openStream(), keyStorePassword.toCharArray())_    _        }_        _        if (context.getProperties().containsKey(XML_ENC_KEY_STORE_ALIAS) && this.recipientKeyAlias == null) {_            recipientKeyAlias = context.getProperty(XML_ENC_KEY_STORE_ALIAS)__        }_    };sets,missing,properties,that,are,defined,in,the,camel,context,deprecated,this,operation,populates,the,data,format,using,depreciated,properties,and,will,be,removed,at,the,end,of,the,deprecation,period;deprecated,private,void,set,defaults,from,context,camel,context,context,throws,exception,map,string,string,context,props,context,get,properties,if,this,recipient,key,alias,null,recipient,key,alias,context,get,property,if,this,trust,store,null,context,props,contains,key,trust,store,key,store,get,instance,key,store,get,default,type,url,trust,store,url,new,url,context,get,property,if,trust,store,password,null,trust,store,password,context,get,property,trust,store,load,trust,store,url,open,stream,trust,store,password,to,char,array,if,this,key,store,null,context,props,contains,key,key,store,key,store,get,instance,key,store,get,default,type,url,key,store,url,new,url,context,get,property,if,key,store,password,null,key,store,password,context,get,property,key,store,load,key,store,url,open,stream,key,store,password,to,char,array,if,context,get,properties,contains,key,this,recipient,key,alias,null,recipient,key,alias,context,get,property
XMLSecurityDataFormat -> @Deprecated     private void setDefaultsFromContext(CamelContext context) throws Exception;1445110748;Sets missing properties that are defined in the Camel context._@deprecated  this operation populates the data format using depreciated properties and will be_removed at the end of the deprecation period;@Deprecated_    private void setDefaultsFromContext(CamelContext context) throws Exception {__        Map<String, String> contextProps = context.getProperties()__               _        if (this.recipientKeyAlias == null) {_            recipientKeyAlias = context.getProperty(XML_ENC_RECIPIENT_ALIAS)__        }__        if (this.trustStore == null && contextProps.containsKey(XML_ENC_TRUST_STORE_URL)) {_            trustStore = KeyStore.getInstance(KeyStore.getDefaultType())__            URL trustStoreUrl = new URL(context.getProperty(XML_ENC_TRUST_STORE_URL))__            if (trustStorePassword == null) {_                trustStorePassword = context.getProperty(XML_ENC_TRUST_STORE_PASSWORD)__            }_            trustStore.load(trustStoreUrl.openStream(), trustStorePassword.toCharArray())__        }_        _        if (this.keyStore == null && contextProps.containsKey(XML_ENC_KEY_STORE_URL)) {_            keyStore = KeyStore.getInstance(KeyStore.getDefaultType())__            URL keyStoreUrl = new URL(context.getProperty(XML_ENC_KEY_STORE_URL))__            if (keyStorePassword == null) {_                keyStorePassword = context.getProperty(XML_ENC_KEY_STORE_PASSWORD)__            }_            keyStore.load(keyStoreUrl.openStream(), keyStorePassword.toCharArray())_    _        }_        _        if (context.getProperties().containsKey(XML_ENC_KEY_STORE_ALIAS) && this.recipientKeyAlias == null) {_            recipientKeyAlias = context.getProperty(XML_ENC_KEY_STORE_ALIAS)__        }_    };sets,missing,properties,that,are,defined,in,the,camel,context,deprecated,this,operation,populates,the,data,format,using,depreciated,properties,and,will,be,removed,at,the,end,of,the,deprecation,period;deprecated,private,void,set,defaults,from,context,camel,context,context,throws,exception,map,string,string,context,props,context,get,properties,if,this,recipient,key,alias,null,recipient,key,alias,context,get,property,if,this,trust,store,null,context,props,contains,key,trust,store,key,store,get,instance,key,store,get,default,type,url,trust,store,url,new,url,context,get,property,if,trust,store,password,null,trust,store,password,context,get,property,trust,store,load,trust,store,url,open,stream,trust,store,password,to,char,array,if,this,key,store,null,context,props,contains,key,key,store,key,store,get,instance,key,store,get,default,type,url,key,store,url,new,url,context,get,property,if,key,store,password,null,key,store,password,context,get,property,key,store,load,key,store,url,open,stream,key,store,password,to,char,array,if,context,get,properties,contains,key,this,recipient,key,alias,null,recipient,key,alias,context,get,property
XMLSecurityDataFormat -> @Deprecated     private void setDefaultsFromContext(CamelContext context) throws Exception;1518772634;Sets missing properties that are defined in the Camel context._@deprecated  this operation populates the data format using depreciated properties and will be_removed at the end of the deprecation period;@Deprecated_    private void setDefaultsFromContext(CamelContext context) throws Exception {__        Map<String, String> contextProps = context.getProperties()__               _        if (this.recipientKeyAlias == null) {_            recipientKeyAlias = context.getProperty(XML_ENC_RECIPIENT_ALIAS)__        }__        if (this.trustStore == null && contextProps.containsKey(XML_ENC_TRUST_STORE_URL)) {_            trustStore = KeyStore.getInstance(KeyStore.getDefaultType())__            URL trustStoreUrl = new URL(context.getProperty(XML_ENC_TRUST_STORE_URL))__            if (trustStorePassword == null) {_                trustStorePassword = context.getProperty(XML_ENC_TRUST_STORE_PASSWORD)__            }_            trustStore.load(trustStoreUrl.openStream(), trustStorePassword.toCharArray())__        }_        _        if (this.keyStore == null && contextProps.containsKey(XML_ENC_KEY_STORE_URL)) {_            keyStore = KeyStore.getInstance(KeyStore.getDefaultType())__            URL keyStoreUrl = new URL(context.getProperty(XML_ENC_KEY_STORE_URL))__            if (keyStorePassword == null) {_                keyStorePassword = context.getProperty(XML_ENC_KEY_STORE_PASSWORD)__            }_            keyStore.load(keyStoreUrl.openStream(), keyStorePassword.toCharArray())_    _        }_        _        if (context.getProperties().containsKey(XML_ENC_KEY_STORE_ALIAS) && this.recipientKeyAlias == null) {_            recipientKeyAlias = context.getProperty(XML_ENC_KEY_STORE_ALIAS)__        }_    };sets,missing,properties,that,are,defined,in,the,camel,context,deprecated,this,operation,populates,the,data,format,using,depreciated,properties,and,will,be,removed,at,the,end,of,the,deprecation,period;deprecated,private,void,set,defaults,from,context,camel,context,context,throws,exception,map,string,string,context,props,context,get,properties,if,this,recipient,key,alias,null,recipient,key,alias,context,get,property,if,this,trust,store,null,context,props,contains,key,trust,store,key,store,get,instance,key,store,get,default,type,url,trust,store,url,new,url,context,get,property,if,trust,store,password,null,trust,store,password,context,get,property,trust,store,load,trust,store,url,open,stream,trust,store,password,to,char,array,if,this,key,store,null,context,props,contains,key,key,store,key,store,get,instance,key,store,get,default,type,url,key,store,url,new,url,context,get,property,if,key,store,password,null,key,store,password,context,get,property,key,store,load,key,store,url,open,stream,key,store,password,to,char,array,if,context,get,properties,contains,key,this,recipient,key,alias,null,recipient,key,alias,context,get,property
XMLSecurityDataFormat -> @Deprecated     private void setDefaultsFromContext(CamelContext context) throws Exception;1532430683;Sets missing properties that are defined in the Camel context._@deprecated  this operation populates the data format using depreciated properties and will be_removed at the end of the deprecation period;@Deprecated_    private void setDefaultsFromContext(CamelContext context) throws Exception {__        Map<String, String> contextProps = context.getProperties()__               _        if (this.recipientKeyAlias == null) {_            recipientKeyAlias = context.getProperty(XML_ENC_RECIPIENT_ALIAS)__        }__        if (this.trustStore == null && contextProps.containsKey(XML_ENC_TRUST_STORE_URL)) {_            trustStore = KeyStore.getInstance(KeyStore.getDefaultType())__            URL trustStoreUrl = new URL(context.getProperty(XML_ENC_TRUST_STORE_URL))__            if (trustStorePassword == null) {_                trustStorePassword = context.getProperty(XML_ENC_TRUST_STORE_PASSWORD)__            }_            trustStore.load(trustStoreUrl.openStream(), trustStorePassword.toCharArray())__        }_        _        if (this.keyStore == null && contextProps.containsKey(XML_ENC_KEY_STORE_URL)) {_            keyStore = KeyStore.getInstance(KeyStore.getDefaultType())__            URL keyStoreUrl = new URL(context.getProperty(XML_ENC_KEY_STORE_URL))__            if (keyStorePassword == null) {_                keyStorePassword = context.getProperty(XML_ENC_KEY_STORE_PASSWORD)__            }_            keyStore.load(keyStoreUrl.openStream(), keyStorePassword.toCharArray())_    _        }_        _        if (context.getProperties().containsKey(XML_ENC_KEY_STORE_ALIAS) && this.recipientKeyAlias == null) {_            recipientKeyAlias = context.getProperty(XML_ENC_KEY_STORE_ALIAS)__        }_    };sets,missing,properties,that,are,defined,in,the,camel,context,deprecated,this,operation,populates,the,data,format,using,depreciated,properties,and,will,be,removed,at,the,end,of,the,deprecation,period;deprecated,private,void,set,defaults,from,context,camel,context,context,throws,exception,map,string,string,context,props,context,get,properties,if,this,recipient,key,alias,null,recipient,key,alias,context,get,property,if,this,trust,store,null,context,props,contains,key,trust,store,key,store,get,instance,key,store,get,default,type,url,trust,store,url,new,url,context,get,property,if,trust,store,password,null,trust,store,password,context,get,property,trust,store,load,trust,store,url,open,stream,trust,store,password,to,char,array,if,this,key,store,null,context,props,contains,key,key,store,key,store,get,instance,key,store,get,default,type,url,key,store,url,new,url,context,get,property,if,key,store,password,null,key,store,password,context,get,property,key,store,load,key,store,url,open,stream,key,store,password,to,char,array,if,context,get,properties,contains,key,this,recipient,key,alias,null,recipient,key,alias,context,get,property
XMLSecurityDataFormat -> @Deprecated     private void setDefaultsFromContext(CamelContext context) throws Exception;1537290824;Sets missing properties that are defined in the Camel context._@deprecated  this operation populates the data format using depreciated properties and will be_removed at the end of the deprecation period;@Deprecated_    private void setDefaultsFromContext(CamelContext context) throws Exception {__        Map<String, String> contextProps = context.getProperties()__               _        if (this.recipientKeyAlias == null) {_            recipientKeyAlias = context.getProperty(XML_ENC_RECIPIENT_ALIAS)__        }__        if (this.trustStore == null && contextProps.containsKey(XML_ENC_TRUST_STORE_URL)) {_            trustStore = KeyStore.getInstance(KeyStore.getDefaultType())__            URL trustStoreUrl = new URL(context.getProperty(XML_ENC_TRUST_STORE_URL))__            if (trustStorePassword == null) {_                trustStorePassword = context.getProperty(XML_ENC_TRUST_STORE_PASSWORD)__            }_            trustStore.load(trustStoreUrl.openStream(), trustStorePassword.toCharArray())__        }_        _        if (this.keyStore == null && contextProps.containsKey(XML_ENC_KEY_STORE_URL)) {_            keyStore = KeyStore.getInstance(KeyStore.getDefaultType())__            URL keyStoreUrl = new URL(context.getProperty(XML_ENC_KEY_STORE_URL))__            if (keyStorePassword == null) {_                keyStorePassword = context.getProperty(XML_ENC_KEY_STORE_PASSWORD)__            }_            keyStore.load(keyStoreUrl.openStream(), keyStorePassword.toCharArray())_    _        }_        _        if (context.getProperties().containsKey(XML_ENC_KEY_STORE_ALIAS) && this.recipientKeyAlias == null) {_            recipientKeyAlias = context.getProperty(XML_ENC_KEY_STORE_ALIAS)__        }_    };sets,missing,properties,that,are,defined,in,the,camel,context,deprecated,this,operation,populates,the,data,format,using,depreciated,properties,and,will,be,removed,at,the,end,of,the,deprecation,period;deprecated,private,void,set,defaults,from,context,camel,context,context,throws,exception,map,string,string,context,props,context,get,properties,if,this,recipient,key,alias,null,recipient,key,alias,context,get,property,if,this,trust,store,null,context,props,contains,key,trust,store,key,store,get,instance,key,store,get,default,type,url,trust,store,url,new,url,context,get,property,if,trust,store,password,null,trust,store,password,context,get,property,trust,store,load,trust,store,url,open,stream,trust,store,password,to,char,array,if,this,key,store,null,context,props,contains,key,key,store,key,store,get,instance,key,store,get,default,type,url,key,store,url,new,url,context,get,property,if,key,store,password,null,key,store,password,context,get,property,key,store,load,key,store,url,open,stream,key,store,password,to,char,array,if,context,get,properties,contains,key,this,recipient,key,alias,null,recipient,key,alias,context,get,property
XMLSecurityDataFormat -> @Deprecated     private void setDefaultsFromContext(CamelContext context) throws Exception;1540108158;Sets missing properties that are defined in the Camel context._@deprecated  this operation populates the data format using depreciated properties and will be_removed at the end of the deprecation period;@Deprecated_    private void setDefaultsFromContext(CamelContext context) throws Exception {__        Map<String, String> contextProps = context.getGlobalOptions()__               _        if (this.recipientKeyAlias == null) {_            recipientKeyAlias = context.getGlobalOption(XML_ENC_RECIPIENT_ALIAS)__        }__        if (this.trustStore == null && contextProps.containsKey(XML_ENC_TRUST_STORE_URL)) {_            trustStore = KeyStore.getInstance(KeyStore.getDefaultType())__            URL trustStoreUrl = new URL(context.getGlobalOption(XML_ENC_TRUST_STORE_URL))__            if (trustStorePassword == null) {_                trustStorePassword = context.getGlobalOption(XML_ENC_TRUST_STORE_PASSWORD)__            }_            trustStore.load(trustStoreUrl.openStream(), trustStorePassword.toCharArray())__        }_        _        if (this.keyStore == null && contextProps.containsKey(XML_ENC_KEY_STORE_URL)) {_            keyStore = KeyStore.getInstance(KeyStore.getDefaultType())__            URL keyStoreUrl = new URL(context.getGlobalOption(XML_ENC_KEY_STORE_URL))__            if (keyStorePassword == null) {_                keyStorePassword = context.getGlobalOption(XML_ENC_KEY_STORE_PASSWORD)__            }_            keyStore.load(keyStoreUrl.openStream(), keyStorePassword.toCharArray())_    _        }_        _        if (context.getGlobalOptions().containsKey(XML_ENC_KEY_STORE_ALIAS) && this.recipientKeyAlias == null) {_            recipientKeyAlias = context.getGlobalOption(XML_ENC_KEY_STORE_ALIAS)__        }_    };sets,missing,properties,that,are,defined,in,the,camel,context,deprecated,this,operation,populates,the,data,format,using,depreciated,properties,and,will,be,removed,at,the,end,of,the,deprecation,period;deprecated,private,void,set,defaults,from,context,camel,context,context,throws,exception,map,string,string,context,props,context,get,global,options,if,this,recipient,key,alias,null,recipient,key,alias,context,get,global,option,if,this,trust,store,null,context,props,contains,key,trust,store,key,store,get,instance,key,store,get,default,type,url,trust,store,url,new,url,context,get,global,option,if,trust,store,password,null,trust,store,password,context,get,global,option,trust,store,load,trust,store,url,open,stream,trust,store,password,to,char,array,if,this,key,store,null,context,props,contains,key,key,store,key,store,get,instance,key,store,get,default,type,url,key,store,url,new,url,context,get,global,option,if,key,store,password,null,key,store,password,context,get,global,option,key,store,load,key,store,url,open,stream,key,store,password,to,char,array,if,context,get,global,options,contains,key,this,recipient,key,alias,null,recipient,key,alias,context,get,global,option
XMLSecurityDataFormat -> @Deprecated     public void setKeyStorePassword(String keyStorePassword);1316532283;@deprecated  Use {@link #setKeyOrTrustStoreParameters()} instead.;@Deprecated_    public void setKeyStorePassword(String keyStorePassword) {_        this.keyStorePassword = keyStorePassword__    };deprecated,use,link,set,key,or,trust,store,parameters,instead;deprecated,public,void,set,key,store,password,string,key,store,password,this,key,store,password,key,store,password
XMLSecurityDataFormat -> @Deprecated     public void setKeyStorePassword(String keyStorePassword);1336642311;@deprecated  Use {@link #setKeyOrTrustStoreParameters()} instead.;@Deprecated_    public void setKeyStorePassword(String keyStorePassword) {_        this.keyStorePassword = keyStorePassword__    };deprecated,use,link,set,key,or,trust,store,parameters,instead;deprecated,public,void,set,key,store,password,string,key,store,password,this,key,store,password,key,store,password
XMLSecurityDataFormat -> @Deprecated     public void setKeyStorePassword(String keyStorePassword);1342106539;@deprecated  Use {@link #setKeyOrTrustStoreParameters()} instead.;@Deprecated_    public void setKeyStorePassword(String keyStorePassword) {_        this.keyStorePassword = keyStorePassword__    };deprecated,use,link,set,key,or,trust,store,parameters,instead;deprecated,public,void,set,key,store,password,string,key,store,password,this,key,store,password,key,store,password
XMLSecurityDataFormat -> @Deprecated     public void setKeyStorePassword(String keyStorePassword);1346229387;@deprecated  Use {@link #setKeyOrTrustStoreParameters()} instead.;@Deprecated_    public void setKeyStorePassword(String keyStorePassword) {_        this.keyStorePassword = keyStorePassword__    };deprecated,use,link,set,key,or,trust,store,parameters,instead;deprecated,public,void,set,key,store,password,string,key,store,password,this,key,store,password,key,store,password
XMLSecurityDataFormat -> @Deprecated     public void setKeyStorePassword(String keyStorePassword);1358954767;@deprecated  Use {@link #setKeyOrTrustStoreParameters()} instead.;@Deprecated_    public void setKeyStorePassword(String keyStorePassword) {_        this.keyStorePassword = keyStorePassword__    };deprecated,use,link,set,key,or,trust,store,parameters,instead;deprecated,public,void,set,key,store,password,string,key,store,password,this,key,store,password,key,store,password
XMLSecurityDataFormat -> @Deprecated     public void setKeyStorePassword(String keyStorePassword);1375894613;@deprecated  Use {@link #setKeyOrTrustStoreParameters()} instead.;@Deprecated_    public void setKeyStorePassword(String keyStorePassword) {_        this.keyStorePassword = keyStorePassword__    };deprecated,use,link,set,key,or,trust,store,parameters,instead;deprecated,public,void,set,key,store,password,string,key,store,password,this,key,store,password,key,store,password
XMLSecurityDataFormat -> @Deprecated     public void setKeyStorePassword(String keyStorePassword);1376034290;@deprecated  Use {@link #setKeyOrTrustStoreParameters()} instead.;@Deprecated_    public void setKeyStorePassword(String keyStorePassword) {_        this.keyStorePassword = keyStorePassword__    };deprecated,use,link,set,key,or,trust,store,parameters,instead;deprecated,public,void,set,key,store,password,string,key,store,password,this,key,store,password,key,store,password
XMLSecurityDataFormat -> @Deprecated     public void setKeyStorePassword(String keyStorePassword);1376477110;@deprecated  Use {@link #setKeyOrTrustStoreParameters()} instead.;@Deprecated_    public void setKeyStorePassword(String keyStorePassword) {_        this.keyStorePassword = keyStorePassword__    };deprecated,use,link,set,key,or,trust,store,parameters,instead;deprecated,public,void,set,key,store,password,string,key,store,password,this,key,store,password,key,store,password
XMLSecurityDataFormat -> @Deprecated     public void setKeyStorePassword(String keyStorePassword);1376632954;@deprecated  Use {@link #setKeyOrTrustStoreParameters()} instead.;@Deprecated_    public void setKeyStorePassword(String keyStorePassword) {_        this.keyStorePassword = keyStorePassword__    };deprecated,use,link,set,key,or,trust,store,parameters,instead;deprecated,public,void,set,key,store,password,string,key,store,password,this,key,store,password,key,store,password
XMLSecurityDataFormat -> @Deprecated     public void setKeyStorePassword(String keyStorePassword);1388443957;@deprecated  Use {@link #setKeyOrTrustStoreParameters()} instead.;@Deprecated_    public void setKeyStorePassword(String keyStorePassword) {_        this.keyStorePassword = keyStorePassword__    };deprecated,use,link,set,key,or,trust,store,parameters,instead;deprecated,public,void,set,key,store,password,string,key,store,password,this,key,store,password,key,store,password
XMLSecurityDataFormat -> @Deprecated     public void setKeyStorePassword(String keyStorePassword);1415211488;@deprecated  Use {@link #setKeyOrTrustStoreParameters()} instead.;@Deprecated_    public void setKeyStorePassword(String keyStorePassword) {_        this.keyStorePassword = keyStorePassword__    };deprecated,use,link,set,key,or,trust,store,parameters,instead;deprecated,public,void,set,key,store,password,string,key,store,password,this,key,store,password,key,store,password
XMLSecurityDataFormat -> @Deprecated     public void setKeyStorePassword(String keyStorePassword);1415877369;@deprecated  Use {@link #setKeyOrTrustStoreParameters()} instead.;@Deprecated_    public void setKeyStorePassword(String keyStorePassword) {_        this.keyStorePassword = keyStorePassword__    };deprecated,use,link,set,key,or,trust,store,parameters,instead;deprecated,public,void,set,key,store,password,string,key,store,password,this,key,store,password,key,store,password
XMLSecurityDataFormat -> @Deprecated     public void setKeyStorePassword(String keyStorePassword);1417521716;@deprecated  Use {@link #setKeyOrTrustStoreParameters()} instead.;@Deprecated_    public void setKeyStorePassword(String keyStorePassword) {_        this.keyStorePassword = keyStorePassword__    };deprecated,use,link,set,key,or,trust,store,parameters,instead;deprecated,public,void,set,key,store,password,string,key,store,password,this,key,store,password,key,store,password
XMLSecurityDataFormat -> @Deprecated     public void setKeyStorePassword(String keyStorePassword);1417572756;@deprecated  Use {@link #setKeyOrTrustStoreParameters()} instead.;@Deprecated_    public void setKeyStorePassword(String keyStorePassword) {_        this.keyStorePassword = keyStorePassword__    };deprecated,use,link,set,key,or,trust,store,parameters,instead;deprecated,public,void,set,key,store,password,string,key,store,password,this,key,store,password,key,store,password
XMLSecurityDataFormat -> @Deprecated     public void setKeyStorePassword(String keyStorePassword);1443094318;@deprecated  Use {@link #setKeyOrTrustStoreParameters()} instead.;@Deprecated_    public void setKeyStorePassword(String keyStorePassword) {_        this.keyStorePassword = keyStorePassword__    };deprecated,use,link,set,key,or,trust,store,parameters,instead;deprecated,public,void,set,key,store,password,string,key,store,password,this,key,store,password,key,store,password
XMLSecurityDataFormat -> @Deprecated     public void setKeyStorePassword(String keyStorePassword);1443168793;@deprecated  Use {@link #setKeyOrTrustStoreParameters()} instead.;@Deprecated_    public void setKeyStorePassword(String keyStorePassword) {_        this.keyStorePassword = keyStorePassword__    };deprecated,use,link,set,key,or,trust,store,parameters,instead;deprecated,public,void,set,key,store,password,string,key,store,password,this,key,store,password,key,store,password
XMLSecurityDataFormat -> @Deprecated     public void setKeyStorePassword(String keyStorePassword);1445110748;@deprecated  Use {@link #setKeyOrTrustStoreParameters()} instead.;@Deprecated_    public void setKeyStorePassword(String keyStorePassword) {_        this.keyStorePassword = keyStorePassword__    };deprecated,use,link,set,key,or,trust,store,parameters,instead;deprecated,public,void,set,key,store,password,string,key,store,password,this,key,store,password,key,store,password
XMLSecurityDataFormat -> @Deprecated     public void setKeyStorePassword(String keyStorePassword);1518772634;@deprecated  Use {@link #setKeyOrTrustStoreParameters()} instead.;@Deprecated_    public void setKeyStorePassword(String keyStorePassword) {_        this.keyStorePassword = keyStorePassword__    };deprecated,use,link,set,key,or,trust,store,parameters,instead;deprecated,public,void,set,key,store,password,string,key,store,password,this,key,store,password,key,store,password
XMLSecurityDataFormat -> @Deprecated     public void setKeyStorePassword(String keyStorePassword);1532430683;@deprecated  Use {@link #setKeyOrTrustStoreParameters()} instead.;@Deprecated_    public void setKeyStorePassword(String keyStorePassword) {_        this.keyStorePassword = keyStorePassword__    };deprecated,use,link,set,key,or,trust,store,parameters,instead;deprecated,public,void,set,key,store,password,string,key,store,password,this,key,store,password,key,store,password
XMLSecurityDataFormat -> @Deprecated     public void setKeyStorePassword(String keyStorePassword);1537290824;@deprecated  Use {@link #setKeyOrTrustStoreParameters()} instead.;@Deprecated_    public void setKeyStorePassword(String keyStorePassword) {_        this.keyStorePassword = keyStorePassword__    };deprecated,use,link,set,key,or,trust,store,parameters,instead;deprecated,public,void,set,key,store,password,string,key,store,password,this,key,store,password,key,store,password
XMLSecurityDataFormat -> @Deprecated     public void setKeyStorePassword(String keyStorePassword);1540108158;@deprecated  Use {@link #setKeyOrTrustStoreParameters()} instead.;@Deprecated_    public void setKeyStorePassword(String keyStorePassword) {_        this.keyStorePassword = keyStorePassword__    };deprecated,use,link,set,key,or,trust,store,parameters,instead;deprecated,public,void,set,key,store,password,string,key,store,password,this,key,store,password,key,store,password
XMLSecurityDataFormat -> @Deprecated     public String getKeyStorePassword();1316532283;@deprecated  Will change to private access in the future. Use {@link #getKeyOrTrustStoreParameters()} instead.;@Deprecated_    public String getKeyStorePassword() {_        if (this.keyOrTrustStoreParameters != null) {_            return keyOrTrustStoreParameters.getPassword()__        }_        return this.keyStorePassword__    };deprecated,will,change,to,private,access,in,the,future,use,link,get,key,or,trust,store,parameters,instead;deprecated,public,string,get,key,store,password,if,this,key,or,trust,store,parameters,null,return,key,or,trust,store,parameters,get,password,return,this,key,store,password
XMLSecurityDataFormat -> @Deprecated     public String getKeyStorePassword();1336642311;@deprecated  Will change to private access in the future. Use {@link #getKeyOrTrustStoreParameters()} instead.;@Deprecated_    public String getKeyStorePassword() {_        if (this.keyOrTrustStoreParameters != null) {_            return keyOrTrustStoreParameters.getPassword()__        }_        return this.keyStorePassword__    };deprecated,will,change,to,private,access,in,the,future,use,link,get,key,or,trust,store,parameters,instead;deprecated,public,string,get,key,store,password,if,this,key,or,trust,store,parameters,null,return,key,or,trust,store,parameters,get,password,return,this,key,store,password
XMLSecurityDataFormat -> @Deprecated     public String getKeyStorePassword();1342106539;@deprecated  Will change to private access in the future. Use {@link #getKeyOrTrustStoreParameters()} instead.;@Deprecated_    public String getKeyStorePassword() {_        if (this.keyOrTrustStoreParameters != null) {_            return keyOrTrustStoreParameters.getPassword()__        }_        return this.keyStorePassword__    };deprecated,will,change,to,private,access,in,the,future,use,link,get,key,or,trust,store,parameters,instead;deprecated,public,string,get,key,store,password,if,this,key,or,trust,store,parameters,null,return,key,or,trust,store,parameters,get,password,return,this,key,store,password
XMLSecurityDataFormat -> @Deprecated     public String getKeyStorePassword();1346229387;@deprecated  Will change to private access in the future. Use {@link #getKeyOrTrustStoreParameters()} instead.;@Deprecated_    public String getKeyStorePassword() {_        if (this.keyOrTrustStoreParameters != null) {_            return keyOrTrustStoreParameters.getPassword()__        }_        return this.keyStorePassword__    };deprecated,will,change,to,private,access,in,the,future,use,link,get,key,or,trust,store,parameters,instead;deprecated,public,string,get,key,store,password,if,this,key,or,trust,store,parameters,null,return,key,or,trust,store,parameters,get,password,return,this,key,store,password
XMLSecurityDataFormat -> @Deprecated     public String getKeyStorePassword();1358954767;@deprecated  Will change to private access in the future. Use {@link #getKeyOrTrustStoreParameters()} instead.;@Deprecated_    public String getKeyStorePassword() {_        if (this.keyOrTrustStoreParameters != null) {_            return keyOrTrustStoreParameters.getPassword()__        }_        return this.keyStorePassword__    };deprecated,will,change,to,private,access,in,the,future,use,link,get,key,or,trust,store,parameters,instead;deprecated,public,string,get,key,store,password,if,this,key,or,trust,store,parameters,null,return,key,or,trust,store,parameters,get,password,return,this,key,store,password
XMLSecurityDataFormat -> @Deprecated     public String getKeyStorePassword();1375894613;@deprecated  Will change to private access in the future. Use {@link #getKeyOrTrustStoreParameters()} instead.;@Deprecated_    public String getKeyStorePassword() {_        if (this.keyOrTrustStoreParameters != null) {_            return keyOrTrustStoreParameters.getPassword()__        }_        return this.keyStorePassword__    };deprecated,will,change,to,private,access,in,the,future,use,link,get,key,or,trust,store,parameters,instead;deprecated,public,string,get,key,store,password,if,this,key,or,trust,store,parameters,null,return,key,or,trust,store,parameters,get,password,return,this,key,store,password
XMLSecurityDataFormat -> @Deprecated     public String getKeyStorePassword();1376034290;@deprecated  Will change to private access in the future. Use {@link #getKeyOrTrustStoreParameters()} instead.;@Deprecated_    public String getKeyStorePassword() {_        if (this.keyOrTrustStoreParameters != null) {_            return keyOrTrustStoreParameters.getPassword()__        }_        return this.keyStorePassword__    };deprecated,will,change,to,private,access,in,the,future,use,link,get,key,or,trust,store,parameters,instead;deprecated,public,string,get,key,store,password,if,this,key,or,trust,store,parameters,null,return,key,or,trust,store,parameters,get,password,return,this,key,store,password
XMLSecurityDataFormat -> @Deprecated     public String getKeyStorePassword();1376477110;@deprecated  Will change to private access in the future. Use {@link #getKeyOrTrustStoreParameters()} instead.;@Deprecated_    public String getKeyStorePassword() {_        if (this.keyOrTrustStoreParameters != null) {_            return keyOrTrustStoreParameters.getPassword()__        }_        return this.keyStorePassword__    };deprecated,will,change,to,private,access,in,the,future,use,link,get,key,or,trust,store,parameters,instead;deprecated,public,string,get,key,store,password,if,this,key,or,trust,store,parameters,null,return,key,or,trust,store,parameters,get,password,return,this,key,store,password
XMLSecurityDataFormat -> @Deprecated     public String getKeyStorePassword();1376632954;@deprecated  Will change to private access in the future. Use {@link #getKeyOrTrustStoreParameters()} instead.;@Deprecated_    public String getKeyStorePassword() {_        if (this.keyOrTrustStoreParameters != null) {_            return keyOrTrustStoreParameters.getPassword()__        }_        return this.keyStorePassword__    };deprecated,will,change,to,private,access,in,the,future,use,link,get,key,or,trust,store,parameters,instead;deprecated,public,string,get,key,store,password,if,this,key,or,trust,store,parameters,null,return,key,or,trust,store,parameters,get,password,return,this,key,store,password
XMLSecurityDataFormat -> @Deprecated     public String getKeyStorePassword();1388443957;@deprecated  Will change to private access in the future. Use {@link #getKeyOrTrustStoreParameters()} instead.;@Deprecated_    public String getKeyStorePassword() {_        if (this.keyOrTrustStoreParameters != null) {_            return keyOrTrustStoreParameters.getPassword()__        }_        return this.keyStorePassword__    };deprecated,will,change,to,private,access,in,the,future,use,link,get,key,or,trust,store,parameters,instead;deprecated,public,string,get,key,store,password,if,this,key,or,trust,store,parameters,null,return,key,or,trust,store,parameters,get,password,return,this,key,store,password
XMLSecurityDataFormat -> @Deprecated     public String getKeyStorePassword();1415211488;@deprecated  Will change to private access in the future. Use {@link #getKeyOrTrustStoreParameters()} instead.;@Deprecated_    public String getKeyStorePassword() {_        if (this.keyOrTrustStoreParameters != null) {_            return keyOrTrustStoreParameters.getPassword()__        }_        return this.keyStorePassword__    };deprecated,will,change,to,private,access,in,the,future,use,link,get,key,or,trust,store,parameters,instead;deprecated,public,string,get,key,store,password,if,this,key,or,trust,store,parameters,null,return,key,or,trust,store,parameters,get,password,return,this,key,store,password
XMLSecurityDataFormat -> @Deprecated     public String getKeyStorePassword();1415877369;@deprecated  Will change to private access in the future. Use {@link #getKeyOrTrustStoreParameters()} instead.;@Deprecated_    public String getKeyStorePassword() {_        if (this.keyOrTrustStoreParameters != null) {_            return keyOrTrustStoreParameters.getPassword()__        }_        return this.keyStorePassword__    };deprecated,will,change,to,private,access,in,the,future,use,link,get,key,or,trust,store,parameters,instead;deprecated,public,string,get,key,store,password,if,this,key,or,trust,store,parameters,null,return,key,or,trust,store,parameters,get,password,return,this,key,store,password
XMLSecurityDataFormat -> @Deprecated     public String getKeyStorePassword();1417521716;@deprecated  Will change to private access in the future. Use {@link #getKeyOrTrustStoreParameters()} instead.;@Deprecated_    public String getKeyStorePassword() {_        if (this.keyOrTrustStoreParameters != null) {_            return keyOrTrustStoreParameters.getPassword()__        }_        return this.keyStorePassword__    };deprecated,will,change,to,private,access,in,the,future,use,link,get,key,or,trust,store,parameters,instead;deprecated,public,string,get,key,store,password,if,this,key,or,trust,store,parameters,null,return,key,or,trust,store,parameters,get,password,return,this,key,store,password
XMLSecurityDataFormat -> @Deprecated     public String getKeyStorePassword();1417572756;@deprecated  Will change to private access in the future. Use {@link #getKeyOrTrustStoreParameters()} instead.;@Deprecated_    public String getKeyStorePassword() {_        if (this.keyOrTrustStoreParameters != null) {_            return keyOrTrustStoreParameters.getPassword()__        }_        return this.keyStorePassword__    };deprecated,will,change,to,private,access,in,the,future,use,link,get,key,or,trust,store,parameters,instead;deprecated,public,string,get,key,store,password,if,this,key,or,trust,store,parameters,null,return,key,or,trust,store,parameters,get,password,return,this,key,store,password
XMLSecurityDataFormat -> @Deprecated     public String getKeyStorePassword();1443094318;@deprecated  Will change to private access in the future. Use {@link #getKeyOrTrustStoreParameters()} instead.;@Deprecated_    public String getKeyStorePassword() {_        if (this.keyOrTrustStoreParameters != null) {_            return keyOrTrustStoreParameters.getPassword()__        }_        return this.keyStorePassword__    };deprecated,will,change,to,private,access,in,the,future,use,link,get,key,or,trust,store,parameters,instead;deprecated,public,string,get,key,store,password,if,this,key,or,trust,store,parameters,null,return,key,or,trust,store,parameters,get,password,return,this,key,store,password
XMLSecurityDataFormat -> @Deprecated     public String getKeyStorePassword();1443168793;@deprecated  Will change to private access in the future. Use {@link #getKeyOrTrustStoreParameters()} instead.;@Deprecated_    public String getKeyStorePassword() {_        if (this.keyOrTrustStoreParameters != null) {_            return keyOrTrustStoreParameters.getPassword()__        }_        return this.keyStorePassword__    };deprecated,will,change,to,private,access,in,the,future,use,link,get,key,or,trust,store,parameters,instead;deprecated,public,string,get,key,store,password,if,this,key,or,trust,store,parameters,null,return,key,or,trust,store,parameters,get,password,return,this,key,store,password
XMLSecurityDataFormat -> @Deprecated     public String getKeyStorePassword();1445110748;@deprecated  Will change to private access in the future. Use {@link #getKeyOrTrustStoreParameters()} instead.;@Deprecated_    public String getKeyStorePassword() {_        if (this.keyOrTrustStoreParameters != null) {_            return keyOrTrustStoreParameters.getPassword()__        }_        return this.keyStorePassword__    };deprecated,will,change,to,private,access,in,the,future,use,link,get,key,or,trust,store,parameters,instead;deprecated,public,string,get,key,store,password,if,this,key,or,trust,store,parameters,null,return,key,or,trust,store,parameters,get,password,return,this,key,store,password
XMLSecurityDataFormat -> @Deprecated     public String getKeyStorePassword();1518772634;@deprecated  Will change to private access in the future. Use {@link #getKeyOrTrustStoreParameters()} instead.;@Deprecated_    public String getKeyStorePassword() {_        if (this.keyOrTrustStoreParameters != null) {_            return keyOrTrustStoreParameters.getPassword()__        }_        return this.keyStorePassword__    };deprecated,will,change,to,private,access,in,the,future,use,link,get,key,or,trust,store,parameters,instead;deprecated,public,string,get,key,store,password,if,this,key,or,trust,store,parameters,null,return,key,or,trust,store,parameters,get,password,return,this,key,store,password
XMLSecurityDataFormat -> @Deprecated     public String getKeyStorePassword();1532430683;@deprecated  Will change to private access in the future. Use {@link #getKeyOrTrustStoreParameters()} instead.;@Deprecated_    public String getKeyStorePassword() {_        if (this.keyOrTrustStoreParameters != null) {_            return keyOrTrustStoreParameters.getPassword()__        }_        return this.keyStorePassword__    };deprecated,will,change,to,private,access,in,the,future,use,link,get,key,or,trust,store,parameters,instead;deprecated,public,string,get,key,store,password,if,this,key,or,trust,store,parameters,null,return,key,or,trust,store,parameters,get,password,return,this,key,store,password
XMLSecurityDataFormat -> @Deprecated     public String getKeyStorePassword();1537290824;@deprecated  Will change to private access in the future. Use {@link #getKeyOrTrustStoreParameters()} instead.;@Deprecated_    public String getKeyStorePassword() {_        if (this.keyOrTrustStoreParameters != null) {_            return keyOrTrustStoreParameters.getPassword()__        }_        return this.keyStorePassword__    };deprecated,will,change,to,private,access,in,the,future,use,link,get,key,or,trust,store,parameters,instead;deprecated,public,string,get,key,store,password,if,this,key,or,trust,store,parameters,null,return,key,or,trust,store,parameters,get,password,return,this,key,store,password
XMLSecurityDataFormat -> @Deprecated     public String getKeyStorePassword();1540108158;@deprecated  Will change to private access in the future. Use {@link #getKeyOrTrustStoreParameters()} instead.;@Deprecated_    public String getKeyStorePassword() {_        if (this.keyOrTrustStoreParameters != null) {_            return keyOrTrustStoreParameters.getPassword()__        }_        return this.keyStorePassword__    };deprecated,will,change,to,private,access,in,the,future,use,link,get,key,or,trust,store,parameters,instead;deprecated,public,string,get,key,store,password,if,this,key,or,trust,store,parameters,null,return,key,or,trust,store,parameters,get,password,return,this,key,store,password
XMLSecurityDataFormat -> private Key getPublicKey(KeyStore keystore, String alias, String password) throws Exception;1308018063;Returns the public key for the specified alias, or null if the alias or private key is not found.;private Key getPublicKey(KeyStore keystore, String alias, String password) throws Exception {_        Key key = keystore.getKey(alias, password.toCharArray())__        if (key instanceof PublicKey) {_            return key__        } else {_            java.security.cert.Certificate cert = keystore.getCertificate(alias)__            _            PublicKey publicKey = cert.getPublicKey()__            return publicKey__        }_    };returns,the,public,key,for,the,specified,alias,or,null,if,the,alias,or,private,key,is,not,found;private,key,get,public,key,key,store,keystore,string,alias,string,password,throws,exception,key,key,keystore,get,key,alias,password,to,char,array,if,key,instanceof,public,key,return,key,else,java,security,cert,certificate,cert,keystore,get,certificate,alias,public,key,public,key,cert,get,public,key,return,public,key
XMLSecurityDataFormat -> private Key getPublicKey(KeyStore keystore, String alias, String password) throws Exception;1316532283;Returns the public key for the specified alias, or null if the alias or private key is not found.;private Key getPublicKey(KeyStore keystore, String alias, String password) throws Exception {_        Key key = keystore.getKey(alias, password.toCharArray())__        if (key instanceof PublicKey) {_            return key__        } else {_            java.security.cert.Certificate cert = keystore.getCertificate(alias)__            _            PublicKey publicKey = cert.getPublicKey()__            return publicKey__        }_    };returns,the,public,key,for,the,specified,alias,or,null,if,the,alias,or,private,key,is,not,found;private,key,get,public,key,key,store,keystore,string,alias,string,password,throws,exception,key,key,keystore,get,key,alias,password,to,char,array,if,key,instanceof,public,key,return,key,else,java,security,cert,certificate,cert,keystore,get,certificate,alias,public,key,public,key,cert,get,public,key,return,public,key
XMLSecurityDataFormat -> private Key getPublicKey(KeyStore keystore, String alias, String password) throws Exception;1336642311;Returns the public key for the specified alias, or null if the alias or private key is not found.;private Key getPublicKey(KeyStore keystore, String alias, String password) throws Exception {_        Key key = keystore.getKey(alias, password.toCharArray())__        if (key instanceof PublicKey) {_            return key__        } else {_            java.security.cert.Certificate cert = keystore.getCertificate(alias)__            _            PublicKey publicKey = cert.getPublicKey()__            return publicKey__        }_    };returns,the,public,key,for,the,specified,alias,or,null,if,the,alias,or,private,key,is,not,found;private,key,get,public,key,key,store,keystore,string,alias,string,password,throws,exception,key,key,keystore,get,key,alias,password,to,char,array,if,key,instanceof,public,key,return,key,else,java,security,cert,certificate,cert,keystore,get,certificate,alias,public,key,public,key,cert,get,public,key,return,public,key
XMLSecurityDataFormat -> private Key getPublicKey(KeyStore keystore, String alias, String password) throws Exception;1342106539;Returns the public key for the specified alias, or null if the alias or private key is not found.;private Key getPublicKey(KeyStore keystore, String alias, String password) throws Exception {_        Key key = keystore.getKey(alias, password.toCharArray())__        if (key instanceof PublicKey) {_            return key__        } else {_            java.security.cert.Certificate cert = keystore.getCertificate(alias)__            _            PublicKey publicKey = cert.getPublicKey()__            return publicKey__        }_    };returns,the,public,key,for,the,specified,alias,or,null,if,the,alias,or,private,key,is,not,found;private,key,get,public,key,key,store,keystore,string,alias,string,password,throws,exception,key,key,keystore,get,key,alias,password,to,char,array,if,key,instanceof,public,key,return,key,else,java,security,cert,certificate,cert,keystore,get,certificate,alias,public,key,public,key,cert,get,public,key,return,public,key
XMLSecurityDataFormat -> private Key getPublicKey(KeyStore keystore, String alias, String password) throws Exception;1346229387;Returns the public key for the specified alias, or null if the alias or private key is not found.;private Key getPublicKey(KeyStore keystore, String alias, String password) throws Exception {_        Key key = keystore.getKey(alias, password.toCharArray())__        if (key instanceof PublicKey) {_            return key__        } else {_            java.security.cert.Certificate cert = keystore.getCertificate(alias)__            _            PublicKey publicKey = cert.getPublicKey()__            return publicKey__        }_    };returns,the,public,key,for,the,specified,alias,or,null,if,the,alias,or,private,key,is,not,found;private,key,get,public,key,key,store,keystore,string,alias,string,password,throws,exception,key,key,keystore,get,key,alias,password,to,char,array,if,key,instanceof,public,key,return,key,else,java,security,cert,certificate,cert,keystore,get,certificate,alias,public,key,public,key,cert,get,public,key,return,public,key
XMLSecurityDataFormat -> private Key getPublicKey(KeyStore keystore, String alias, String password) throws Exception;1358954767;Returns the public key for the specified alias, or null if the alias or private key is not found.;private Key getPublicKey(KeyStore keystore, String alias, String password) throws Exception {_        Key key = keystore.getKey(alias, password.toCharArray())__        if (key instanceof PublicKey) {_            return key__        } else {_            java.security.cert.Certificate cert = keystore.getCertificate(alias)__            _            PublicKey publicKey = cert.getPublicKey()__            return publicKey__        }_    };returns,the,public,key,for,the,specified,alias,or,null,if,the,alias,or,private,key,is,not,found;private,key,get,public,key,key,store,keystore,string,alias,string,password,throws,exception,key,key,keystore,get,key,alias,password,to,char,array,if,key,instanceof,public,key,return,key,else,java,security,cert,certificate,cert,keystore,get,certificate,alias,public,key,public,key,cert,get,public,key,return,public,key
XMLSecurityDataFormat -> private Key getPublicKey(KeyStore keystore, String alias, String password) throws Exception;1375894613;Returns the public key for the specified alias, or null if the alias or private key is not found.;private Key getPublicKey(KeyStore keystore, String alias, String password) throws Exception {_        Key key = keystore.getKey(alias, password.toCharArray())__        if (key instanceof PublicKey) {_            return key__        } else {_            java.security.cert.Certificate cert = keystore.getCertificate(alias)__            _            PublicKey publicKey = cert.getPublicKey()__            return publicKey__        }_    };returns,the,public,key,for,the,specified,alias,or,null,if,the,alias,or,private,key,is,not,found;private,key,get,public,key,key,store,keystore,string,alias,string,password,throws,exception,key,key,keystore,get,key,alias,password,to,char,array,if,key,instanceof,public,key,return,key,else,java,security,cert,certificate,cert,keystore,get,certificate,alias,public,key,public,key,cert,get,public,key,return,public,key
XMLSecurityDataFormat -> private Key getPublicKey(KeyStore keystore, String alias, String password) throws Exception;1376034290;Returns the public key for the specified alias, or null if the alias or private key is not found.;private Key getPublicKey(KeyStore keystore, String alias, String password) throws Exception {_        Key key = keystore.getKey(alias, password.toCharArray())__        if (key instanceof PublicKey) {_            return key__        } else {_            java.security.cert.Certificate cert = keystore.getCertificate(alias)__            _            PublicKey publicKey = cert.getPublicKey()__            return publicKey__        }_    };returns,the,public,key,for,the,specified,alias,or,null,if,the,alias,or,private,key,is,not,found;private,key,get,public,key,key,store,keystore,string,alias,string,password,throws,exception,key,key,keystore,get,key,alias,password,to,char,array,if,key,instanceof,public,key,return,key,else,java,security,cert,certificate,cert,keystore,get,certificate,alias,public,key,public,key,cert,get,public,key,return,public,key
XMLSecurityDataFormat -> private Key getPublicKey(KeyStore keystore, String alias, String password) throws Exception;1376477110;Returns the public key for the specified alias, or null if the alias or private key is not found.;private Key getPublicKey(KeyStore keystore, String alias, String password) throws Exception {_        Key key = keystore.getKey(alias, password.toCharArray())__        if (key instanceof PublicKey) {_            return key__        } else {_            java.security.cert.Certificate cert = keystore.getCertificate(alias)__            _            PublicKey publicKey = cert.getPublicKey()__            return publicKey__        }_    };returns,the,public,key,for,the,specified,alias,or,null,if,the,alias,or,private,key,is,not,found;private,key,get,public,key,key,store,keystore,string,alias,string,password,throws,exception,key,key,keystore,get,key,alias,password,to,char,array,if,key,instanceof,public,key,return,key,else,java,security,cert,certificate,cert,keystore,get,certificate,alias,public,key,public,key,cert,get,public,key,return,public,key
XMLSecurityDataFormat -> private Key getPublicKey(KeyStore keystore, String alias, String password) throws Exception;1376632954;Returns the public key for the specified alias, or null if the alias or private key is not found.;private Key getPublicKey(KeyStore keystore, String alias, String password) throws Exception {_        Key key = keystore.getKey(alias, password.toCharArray())__        if (key instanceof PublicKey) {_            return key__        } else {_            java.security.cert.Certificate cert = keystore.getCertificate(alias)__            _            PublicKey publicKey = cert.getPublicKey()__            return publicKey__        }_    };returns,the,public,key,for,the,specified,alias,or,null,if,the,alias,or,private,key,is,not,found;private,key,get,public,key,key,store,keystore,string,alias,string,password,throws,exception,key,key,keystore,get,key,alias,password,to,char,array,if,key,instanceof,public,key,return,key,else,java,security,cert,certificate,cert,keystore,get,certificate,alias,public,key,public,key,cert,get,public,key,return,public,key
XMLSecurityDataFormat -> private Key getPublicKey(KeyStore keystore, String alias, String password) throws Exception;1388443957;Returns the public key for the specified alias, or null if the alias or private key is not found.;private Key getPublicKey(KeyStore keystore, String alias, String password) throws Exception {_        Key key = keystore.getKey(alias, password.toCharArray())__        if (key instanceof PublicKey) {_            return key__        } else {_            java.security.cert.Certificate cert = keystore.getCertificate(alias)__            _            PublicKey publicKey = cert.getPublicKey()__            return publicKey__        }_    };returns,the,public,key,for,the,specified,alias,or,null,if,the,alias,or,private,key,is,not,found;private,key,get,public,key,key,store,keystore,string,alias,string,password,throws,exception,key,key,keystore,get,key,alias,password,to,char,array,if,key,instanceof,public,key,return,key,else,java,security,cert,certificate,cert,keystore,get,certificate,alias,public,key,public,key,cert,get,public,key,return,public,key
XMLSecurityDataFormat -> private Key getPublicKey(KeyStore keystore, String alias, String password) throws Exception;1415211488;Returns the public key for the specified alias, or null if the alias or private key is not found.;private Key getPublicKey(KeyStore keystore, String alias, String password) throws Exception {_        Key key = keystore.getKey(alias, password.toCharArray())__        if (key instanceof PublicKey) {_            return key__        } else {_            java.security.cert.Certificate cert = keystore.getCertificate(alias)__            _            PublicKey publicKey = cert.getPublicKey()__            return publicKey__        }_    };returns,the,public,key,for,the,specified,alias,or,null,if,the,alias,or,private,key,is,not,found;private,key,get,public,key,key,store,keystore,string,alias,string,password,throws,exception,key,key,keystore,get,key,alias,password,to,char,array,if,key,instanceof,public,key,return,key,else,java,security,cert,certificate,cert,keystore,get,certificate,alias,public,key,public,key,cert,get,public,key,return,public,key
XMLSecurityDataFormat -> private Key getPublicKey(KeyStore keystore, String alias, String password) throws Exception;1415877369;Returns the public key for the specified alias, or null if the alias or private key is not found.;private Key getPublicKey(KeyStore keystore, String alias, String password) throws Exception {_        java.security.cert.Certificate cert = keystore.getCertificate(alias)__        if (cert != null) {_            _            return cert.getPublicKey()__        }_        return keystore.getKey(alias, password.toCharArray())__    };returns,the,public,key,for,the,specified,alias,or,null,if,the,alias,or,private,key,is,not,found;private,key,get,public,key,key,store,keystore,string,alias,string,password,throws,exception,java,security,cert,certificate,cert,keystore,get,certificate,alias,if,cert,null,return,cert,get,public,key,return,keystore,get,key,alias,password,to,char,array
XMLSecurityDataFormat -> private Key getPublicKey(KeyStore keystore, String alias, String password) throws Exception;1417521716;Returns the public key for the specified alias, or null if the alias or private key is not found.;private Key getPublicKey(KeyStore keystore, String alias, String password) throws Exception {_        java.security.cert.Certificate cert = keystore.getCertificate(alias)__        if (cert != null) {_            _            return cert.getPublicKey()__        }_        return keystore.getKey(alias, password.toCharArray())__    };returns,the,public,key,for,the,specified,alias,or,null,if,the,alias,or,private,key,is,not,found;private,key,get,public,key,key,store,keystore,string,alias,string,password,throws,exception,java,security,cert,certificate,cert,keystore,get,certificate,alias,if,cert,null,return,cert,get,public,key,return,keystore,get,key,alias,password,to,char,array
XMLSecurityDataFormat -> private Key getPublicKey(KeyStore keystore, String alias, String password) throws Exception;1417572756;Returns the public key for the specified alias, or null if the alias or private key is not found.;private Key getPublicKey(KeyStore keystore, String alias, String password) throws Exception {_        java.security.cert.Certificate cert = keystore.getCertificate(alias)__        if (cert != null) {_            _            return cert.getPublicKey()__        }_        return keystore.getKey(alias, password.toCharArray())__    };returns,the,public,key,for,the,specified,alias,or,null,if,the,alias,or,private,key,is,not,found;private,key,get,public,key,key,store,keystore,string,alias,string,password,throws,exception,java,security,cert,certificate,cert,keystore,get,certificate,alias,if,cert,null,return,cert,get,public,key,return,keystore,get,key,alias,password,to,char,array
XMLSecurityDataFormat -> private Key getPublicKey(KeyStore keystore, String alias, String password) throws Exception;1443094318;Returns the public key for the specified alias, or null if the alias or private key is not found.;private Key getPublicKey(KeyStore keystore, String alias, String password) throws Exception {_        java.security.cert.Certificate cert = keystore.getCertificate(alias)__        if (cert != null) {_            _            return cert.getPublicKey()__        }_        return keystore.getKey(alias, password.toCharArray())__    };returns,the,public,key,for,the,specified,alias,or,null,if,the,alias,or,private,key,is,not,found;private,key,get,public,key,key,store,keystore,string,alias,string,password,throws,exception,java,security,cert,certificate,cert,keystore,get,certificate,alias,if,cert,null,return,cert,get,public,key,return,keystore,get,key,alias,password,to,char,array
XMLSecurityDataFormat -> private Key getPublicKey(KeyStore keystore, String alias, String password) throws Exception;1443168793;Returns the public key for the specified alias, or null if the alias or private key is not found.;private Key getPublicKey(KeyStore keystore, String alias, String password) throws Exception {_        java.security.cert.Certificate cert = keystore.getCertificate(alias)__        if (cert != null) {_            _            return cert.getPublicKey()__        }_        return keystore.getKey(alias, password.toCharArray())__    };returns,the,public,key,for,the,specified,alias,or,null,if,the,alias,or,private,key,is,not,found;private,key,get,public,key,key,store,keystore,string,alias,string,password,throws,exception,java,security,cert,certificate,cert,keystore,get,certificate,alias,if,cert,null,return,cert,get,public,key,return,keystore,get,key,alias,password,to,char,array
XMLSecurityDataFormat -> private Key getPublicKey(KeyStore keystore, String alias, String password) throws Exception;1445110748;Returns the public key for the specified alias, or null if the alias or private key is not found.;private Key getPublicKey(KeyStore keystore, String alias, String password) throws Exception {_        java.security.cert.Certificate cert = keystore.getCertificate(alias)__        if (cert != null) {_            _            return cert.getPublicKey()__        }_        return keystore.getKey(alias, password.toCharArray())__    };returns,the,public,key,for,the,specified,alias,or,null,if,the,alias,or,private,key,is,not,found;private,key,get,public,key,key,store,keystore,string,alias,string,password,throws,exception,java,security,cert,certificate,cert,keystore,get,certificate,alias,if,cert,null,return,cert,get,public,key,return,keystore,get,key,alias,password,to,char,array
XMLSecurityDataFormat -> private Key getPublicKey(KeyStore keystore, String alias, String password) throws Exception;1518772634;Returns the public key for the specified alias, or null if the alias or private key is not found.;private Key getPublicKey(KeyStore keystore, String alias, String password) throws Exception {_        java.security.cert.Certificate cert = keystore.getCertificate(alias)__        if (cert != null) {_            _            return cert.getPublicKey()__        }_        return keystore.getKey(alias, password.toCharArray())__    };returns,the,public,key,for,the,specified,alias,or,null,if,the,alias,or,private,key,is,not,found;private,key,get,public,key,key,store,keystore,string,alias,string,password,throws,exception,java,security,cert,certificate,cert,keystore,get,certificate,alias,if,cert,null,return,cert,get,public,key,return,keystore,get,key,alias,password,to,char,array
XMLSecurityDataFormat -> private Key getPublicKey(KeyStore keystore, String alias, String password) throws Exception;1532430683;Returns the public key for the specified alias, or null if the alias or private key is not found.;private Key getPublicKey(KeyStore keystore, String alias, String password) throws Exception {_        java.security.cert.Certificate cert = keystore.getCertificate(alias)__        if (cert != null) {_            _            return cert.getPublicKey()__        }_        return keystore.getKey(alias, password.toCharArray())__    };returns,the,public,key,for,the,specified,alias,or,null,if,the,alias,or,private,key,is,not,found;private,key,get,public,key,key,store,keystore,string,alias,string,password,throws,exception,java,security,cert,certificate,cert,keystore,get,certificate,alias,if,cert,null,return,cert,get,public,key,return,keystore,get,key,alias,password,to,char,array
XMLSecurityDataFormat -> private Key getPublicKey(KeyStore keystore, String alias, String password) throws Exception;1537290824;Returns the public key for the specified alias, or null if the alias or private key is not found.;private Key getPublicKey(KeyStore keystore, String alias, String password) throws Exception {_        java.security.cert.Certificate cert = keystore.getCertificate(alias)__        if (cert != null) {_            _            return cert.getPublicKey()__        }_        return keystore.getKey(alias, password.toCharArray())__    };returns,the,public,key,for,the,specified,alias,or,null,if,the,alias,or,private,key,is,not,found;private,key,get,public,key,key,store,keystore,string,alias,string,password,throws,exception,java,security,cert,certificate,cert,keystore,get,certificate,alias,if,cert,null,return,cert,get,public,key,return,keystore,get,key,alias,password,to,char,array
XMLSecurityDataFormat -> private Key getPublicKey(KeyStore keystore, String alias, String password) throws Exception;1540108158;Returns the public key for the specified alias, or null if the alias or private key is not found.;private Key getPublicKey(KeyStore keystore, String alias, String password) throws Exception {_        java.security.cert.Certificate cert = keystore.getCertificate(alias)__        if (cert != null) {_            _            return cert.getPublicKey()__        }_        return keystore.getKey(alias, password.toCharArray())__    };returns,the,public,key,for,the,specified,alias,or,null,if,the,alias,or,private,key,is,not,found;private,key,get,public,key,key,store,keystore,string,alias,string,password,throws,exception,java,security,cert,certificate,cert,keystore,get,certificate,alias,if,cert,null,return,cert,get,public,key,return,keystore,get,key,alias,password,to,char,array
XMLSecurityDataFormat -> private Key getPublicKey(KeyStore keystore, String alias, String password) throws Exception;1540108158;Returns the public key for the specified alias, or null if the alias or private key is not found.;private Key getPublicKey(KeyStore keystore, String alias, String password) throws Exception {_        java.security.cert.Certificate cert = keystore.getCertificate(alias)__        if (cert != null) {_            _            return cert.getPublicKey()__        }_        return keystore.getKey(alias, password.toCharArray())__    };returns,the,public,key,for,the,specified,alias,or,null,if,the,alias,or,private,key,is,not,found;private,key,get,public,key,key,store,keystore,string,alias,string,password,throws,exception,java,security,cert,certificate,cert,keystore,get,certificate,alias,if,cert,null,return,cert,get,public,key,return,keystore,get,key,alias,password,to,char,array
XMLSecurityDataFormat -> private Key getPublicKey(KeyStore keystore, String alias, String password) throws Exception;1540108163;Returns the public key for the specified alias, or null if the alias or private key is not found.;private Key getPublicKey(KeyStore keystore, String alias, String password) throws Exception {_        java.security.cert.Certificate cert = keystore.getCertificate(alias)__        if (cert != null) {_            _            return cert.getPublicKey()__        }_        return keystore.getKey(alias, password.toCharArray())__    };returns,the,public,key,for,the,specified,alias,or,null,if,the,alias,or,private,key,is,not,found;private,key,get,public,key,key,store,keystore,string,alias,string,password,throws,exception,java,security,cert,certificate,cert,keystore,get,certificate,alias,if,cert,null,return,cert,get,public,key,return,keystore,get,key,alias,password,to,char,array
XMLSecurityDataFormat -> private Key getPublicKey(KeyStore keystore, String alias, String password) throws Exception;1545056693;Returns the public key for the specified alias, or null if the alias or private key is not found.;private Key getPublicKey(KeyStore keystore, String alias, String password) throws Exception {_        java.security.cert.Certificate cert = keystore.getCertificate(alias)__        if (cert != null) {_            _            return cert.getPublicKey()__        }_        return keystore.getKey(alias, password.toCharArray())__    };returns,the,public,key,for,the,specified,alias,or,null,if,the,alias,or,private,key,is,not,found;private,key,get,public,key,key,store,keystore,string,alias,string,password,throws,exception,java,security,cert,certificate,cert,keystore,get,certificate,alias,if,cert,null,return,cert,get,public,key,return,keystore,get,key,alias,password,to,char,array
XMLSecurityDataFormat -> private Key getPublicKey(KeyStore keystore, String alias, String password) throws Exception;1545203860;Returns the public key for the specified alias, or null if the alias or private key is not found.;private Key getPublicKey(KeyStore keystore, String alias, String password) throws Exception {_        java.security.cert.Certificate cert = keystore.getCertificate(alias)__        if (cert != null) {_            _            return cert.getPublicKey()__        }_        return keystore.getKey(alias, password.toCharArray())__    };returns,the,public,key,for,the,specified,alias,or,null,if,the,alias,or,private,key,is,not,found;private,key,get,public,key,key,store,keystore,string,alias,string,password,throws,exception,java,security,cert,certificate,cert,keystore,get,certificate,alias,if,cert,null,return,cert,get,public,key,return,keystore,get,key,alias,password,to,char,array
XMLSecurityDataFormat -> private Key getPublicKey(KeyStore keystore, String alias, String password) throws Exception;1547241305;Returns the public key for the specified alias, or null if the alias or private key is not found.;private Key getPublicKey(KeyStore keystore, String alias, String password) throws Exception {_        java.security.cert.Certificate cert = keystore.getCertificate(alias)__        if (cert != null) {_            _            return cert.getPublicKey()__        }_        return keystore.getKey(alias, password.toCharArray())__    };returns,the,public,key,for,the,specified,alias,or,null,if,the,alias,or,private,key,is,not,found;private,key,get,public,key,key,store,keystore,string,alias,string,password,throws,exception,java,security,cert,certificate,cert,keystore,get,certificate,alias,if,cert,null,return,cert,get,public,key,return,keystore,get,key,alias,password,to,char,array
XMLSecurityDataFormat -> private Key getPublicKey(KeyStore keystore, String alias, String password) throws Exception;1548175645;Returns the public key for the specified alias, or null if the alias or private key is not found.;private Key getPublicKey(KeyStore keystore, String alias, String password) throws Exception {_        java.security.cert.Certificate cert = keystore.getCertificate(alias)__        if (cert != null) {_            _            return cert.getPublicKey()__        }_        return keystore.getKey(alias, password.toCharArray())__    };returns,the,public,key,for,the,specified,alias,or,null,if,the,alias,or,private,key,is,not,found;private,key,get,public,key,key,store,keystore,string,alias,string,password,throws,exception,java,security,cert,certificate,cert,keystore,get,certificate,alias,if,cert,null,return,cert,get,public,key,return,keystore,get,key,alias,password,to,char,array
XMLSecurityDataFormat -> private Key getPublicKey(KeyStore keystore, String alias, String password) throws Exception;1548666920;Returns the public key for the specified alias, or null if the alias or private key is not found.;private Key getPublicKey(KeyStore keystore, String alias, String password) throws Exception {_        java.security.cert.Certificate cert = keystore.getCertificate(alias)__        if (cert != null) {_            _            return cert.getPublicKey()__        }_        return keystore.getKey(alias, password.toCharArray())__    };returns,the,public,key,for,the,specified,alias,or,null,if,the,alias,or,private,key,is,not,found;private,key,get,public,key,key,store,keystore,string,alias,string,password,throws,exception,java,security,cert,certificate,cert,keystore,get,certificate,alias,if,cert,null,return,cert,get,public,key,return,keystore,get,key,alias,password,to,char,array
XMLSecurityDataFormat -> private Key getPublicKey(KeyStore keystore, String alias, String password) throws Exception;1549446874;Returns the public key for the specified alias, or null if the alias or private key is not found.;private Key getPublicKey(KeyStore keystore, String alias, String password) throws Exception {_        java.security.cert.Certificate cert = keystore.getCertificate(alias)__        if (cert != null) {_            _            return cert.getPublicKey()__        }_        return keystore.getKey(alias, password.toCharArray())__    };returns,the,public,key,for,the,specified,alias,or,null,if,the,alias,or,private,key,is,not,found;private,key,get,public,key,key,store,keystore,string,alias,string,password,throws,exception,java,security,cert,certificate,cert,keystore,get,certificate,alias,if,cert,null,return,cert,get,public,key,return,keystore,get,key,alias,password,to,char,array
XMLSecurityDataFormat -> private void encryptAsymmetric(Exchange exchange, Document document, OutputStream stream) throws Exception;1308018063;Configure the public key for the asymmetric key wrap algorithm, create the key cipher, and delegate_to common encryption method.__The method first checks the exchange for a declared key alias, and will fall back to the_statically-defined instance variable if no value is found in the exchange. This allows different_aliases / keys to be used for multiple-recipient messaging integration patterns such as CBR_or recipient list.;private void encryptAsymmetric(Exchange exchange, Document document, OutputStream stream) throws Exception {       _        String exchangeRecipientAlias = getRecipientKeyAlias(exchange)__        _        if (null == exchangeRecipientAlias) {_            throw new IllegalStateException("The  recipient's key alias must be defined for asymmetric key encryption.")__        }__        if (null == trustStore) {_            throw new IllegalStateException("A trust store must be defined for asymmetric key encryption.")__        }_        _        Key keyEncryptionKey = getPublicKey(this.trustStore, exchangeRecipientAlias, this.trustStorePassword)__        _        if (null == keyEncryptionKey) {_            throw new IllegalStateException("No key for the alias [ " + exchangeRecipientAlias _                + " ] exists in " + "the configured trust store.")__        }_        _        Key dataEncryptionKey = generateDataEncryptionKey()__        _        XMLCipher keyCipher__        if (null != this.getKeyCyperAlgorithm()) {_            keyCipher = XMLCipher.getInstance(this.getKeyCyperAlgorithm())__        } else {_            keyCipher = XMLCipher.getInstance(XMLCipher.RSA_v1dot5)__        }_        keyCipher.init(XMLCipher.WRAP_MODE, keyEncryptionKey)__        encrypt(exchange, document, stream, dataEncryptionKey, keyCipher)__    };configure,the,public,key,for,the,asymmetric,key,wrap,algorithm,create,the,key,cipher,and,delegate,to,common,encryption,method,the,method,first,checks,the,exchange,for,a,declared,key,alias,and,will,fall,back,to,the,statically,defined,instance,variable,if,no,value,is,found,in,the,exchange,this,allows,different,aliases,keys,to,be,used,for,multiple,recipient,messaging,integration,patterns,such,as,cbr,or,recipient,list;private,void,encrypt,asymmetric,exchange,exchange,document,document,output,stream,stream,throws,exception,string,exchange,recipient,alias,get,recipient,key,alias,exchange,if,null,exchange,recipient,alias,throw,new,illegal,state,exception,the,recipient,s,key,alias,must,be,defined,for,asymmetric,key,encryption,if,null,trust,store,throw,new,illegal,state,exception,a,trust,store,must,be,defined,for,asymmetric,key,encryption,key,key,encryption,key,get,public,key,this,trust,store,exchange,recipient,alias,this,trust,store,password,if,null,key,encryption,key,throw,new,illegal,state,exception,no,key,for,the,alias,exchange,recipient,alias,exists,in,the,configured,trust,store,key,data,encryption,key,generate,data,encryption,key,xmlcipher,key,cipher,if,null,this,get,key,cyper,algorithm,key,cipher,xmlcipher,get,instance,this,get,key,cyper,algorithm,else,key,cipher,xmlcipher,get,instance,xmlcipher,key,cipher,init,xmlcipher,key,encryption,key,encrypt,exchange,document,stream,data,encryption,key,key,cipher
XMLSecurityDataFormat -> private void encryptAsymmetric(Exchange exchange, Document document, OutputStream stream) throws Exception;1316532283;Configure the public key for the asymmetric key wrap algorithm, create the key cipher, and delegate_to common encryption method.__The method first checks the exchange for a declared key alias, and will fall back to the_statically-defined instance variable if no value is found in the exchange. This allows different_aliases / keys to be used for multiple-recipient messaging integration patterns such as CBR_or recipient list.;private void encryptAsymmetric(Exchange exchange, Document document, OutputStream stream) throws Exception {       _        String exchangeRecipientAlias = getRecipientKeyAlias(exchange)__        _        if (null == exchangeRecipientAlias) {_            throw new IllegalStateException("The  recipient's key alias must be defined for asymmetric key encryption.")__        }_        _        if (trustStore == null && null != this.keyOrTrustStoreParameters) {_            trustStore = keyOrTrustStoreParameters.createKeyStore()__            trustStorePassword = keyOrTrustStoreParameters.getPassword()__        }__        if (null == trustStore) {_            throw new IllegalStateException("A trust store must be defined for asymmetric key encryption.")__        }_        _        Key keyEncryptionKey = getPublicKey(this.trustStore, exchangeRecipientAlias, this.trustStorePassword)__        _        if (null == keyEncryptionKey) {_            throw new IllegalStateException("No key for the alias [ " + exchangeRecipientAlias _                + " ] exists in " + "the configured trust store.")__        }_        _        Key dataEncryptionKey = generateDataEncryptionKey()__        _        XMLCipher keyCipher__        if (null != this.getKeyCyperAlgorithm()) {_            keyCipher = XMLCipher.getInstance(this.getKeyCyperAlgorithm())__        } else {_            keyCipher = XMLCipher.getInstance(XMLCipher.RSA_v1dot5)__        }_        keyCipher.init(XMLCipher.WRAP_MODE, keyEncryptionKey)__        encrypt(exchange, document, stream, dataEncryptionKey, keyCipher)__    };configure,the,public,key,for,the,asymmetric,key,wrap,algorithm,create,the,key,cipher,and,delegate,to,common,encryption,method,the,method,first,checks,the,exchange,for,a,declared,key,alias,and,will,fall,back,to,the,statically,defined,instance,variable,if,no,value,is,found,in,the,exchange,this,allows,different,aliases,keys,to,be,used,for,multiple,recipient,messaging,integration,patterns,such,as,cbr,or,recipient,list;private,void,encrypt,asymmetric,exchange,exchange,document,document,output,stream,stream,throws,exception,string,exchange,recipient,alias,get,recipient,key,alias,exchange,if,null,exchange,recipient,alias,throw,new,illegal,state,exception,the,recipient,s,key,alias,must,be,defined,for,asymmetric,key,encryption,if,trust,store,null,null,this,key,or,trust,store,parameters,trust,store,key,or,trust,store,parameters,create,key,store,trust,store,password,key,or,trust,store,parameters,get,password,if,null,trust,store,throw,new,illegal,state,exception,a,trust,store,must,be,defined,for,asymmetric,key,encryption,key,key,encryption,key,get,public,key,this,trust,store,exchange,recipient,alias,this,trust,store,password,if,null,key,encryption,key,throw,new,illegal,state,exception,no,key,for,the,alias,exchange,recipient,alias,exists,in,the,configured,trust,store,key,data,encryption,key,generate,data,encryption,key,xmlcipher,key,cipher,if,null,this,get,key,cyper,algorithm,key,cipher,xmlcipher,get,instance,this,get,key,cyper,algorithm,else,key,cipher,xmlcipher,get,instance,xmlcipher,key,cipher,init,xmlcipher,key,encryption,key,encrypt,exchange,document,stream,data,encryption,key,key,cipher
XMLSecurityDataFormat -> private void encryptAsymmetric(Exchange exchange, Document document, OutputStream stream) throws Exception;1336642311;Configure the public key for the asymmetric key wrap algorithm, create the key cipher, and delegate_to common encryption method.__The method first checks the exchange for a declared key alias, and will fall back to the_statically-defined instance variable if no value is found in the exchange. This allows different_aliases / keys to be used for multiple-recipient messaging integration patterns such as CBR_or recipient list.;private void encryptAsymmetric(Exchange exchange, Document document, OutputStream stream) throws Exception {       _        String exchangeRecipientAlias = getRecipientKeyAlias(exchange)__        _        if (null == exchangeRecipientAlias) {_            throw new IllegalStateException("The  recipient's key alias must be defined for asymmetric key encryption.")__        }_        _        if (trustStore == null && null != this.keyOrTrustStoreParameters) {_            trustStore = keyOrTrustStoreParameters.createKeyStore()__            trustStorePassword = keyOrTrustStoreParameters.getPassword()__        }__        if (null == trustStore) {_            throw new IllegalStateException("A trust store must be defined for asymmetric key encryption.")__        }_        _        Key keyEncryptionKey = getPublicKey(this.trustStore, exchangeRecipientAlias, this.trustStorePassword)__        _        if (null == keyEncryptionKey) {_            throw new IllegalStateException("No key for the alias [ " + exchangeRecipientAlias _                + " ] exists in " + "the configured trust store.")__        }_        _        Key dataEncryptionKey = generateDataEncryptionKey()__        _        XMLCipher keyCipher__        if (null != this.getKeyCyperAlgorithm()) {_            keyCipher = XMLCipher.getInstance(this.getKeyCyperAlgorithm())__        } else {_            keyCipher = XMLCipher.getInstance(XMLCipher.RSA_v1dot5)__        }_        keyCipher.init(XMLCipher.WRAP_MODE, keyEncryptionKey)__        encrypt(exchange, document, stream, dataEncryptionKey, keyCipher)__    };configure,the,public,key,for,the,asymmetric,key,wrap,algorithm,create,the,key,cipher,and,delegate,to,common,encryption,method,the,method,first,checks,the,exchange,for,a,declared,key,alias,and,will,fall,back,to,the,statically,defined,instance,variable,if,no,value,is,found,in,the,exchange,this,allows,different,aliases,keys,to,be,used,for,multiple,recipient,messaging,integration,patterns,such,as,cbr,or,recipient,list;private,void,encrypt,asymmetric,exchange,exchange,document,document,output,stream,stream,throws,exception,string,exchange,recipient,alias,get,recipient,key,alias,exchange,if,null,exchange,recipient,alias,throw,new,illegal,state,exception,the,recipient,s,key,alias,must,be,defined,for,asymmetric,key,encryption,if,trust,store,null,null,this,key,or,trust,store,parameters,trust,store,key,or,trust,store,parameters,create,key,store,trust,store,password,key,or,trust,store,parameters,get,password,if,null,trust,store,throw,new,illegal,state,exception,a,trust,store,must,be,defined,for,asymmetric,key,encryption,key,key,encryption,key,get,public,key,this,trust,store,exchange,recipient,alias,this,trust,store,password,if,null,key,encryption,key,throw,new,illegal,state,exception,no,key,for,the,alias,exchange,recipient,alias,exists,in,the,configured,trust,store,key,data,encryption,key,generate,data,encryption,key,xmlcipher,key,cipher,if,null,this,get,key,cyper,algorithm,key,cipher,xmlcipher,get,instance,this,get,key,cyper,algorithm,else,key,cipher,xmlcipher,get,instance,xmlcipher,key,cipher,init,xmlcipher,key,encryption,key,encrypt,exchange,document,stream,data,encryption,key,key,cipher
XMLSecurityDataFormat -> private void encryptAsymmetric(Exchange exchange, Document document, OutputStream stream) throws Exception;1342106539;Configure the public key for the asymmetric key wrap algorithm, create the key cipher, and delegate_to common encryption method.__The method first checks the exchange for a declared key alias, and will fall back to the_statically-defined instance variable if no value is found in the exchange. This allows different_aliases / keys to be used for multiple-recipient messaging integration patterns such as CBR_or recipient list.;private void encryptAsymmetric(Exchange exchange, Document document, OutputStream stream) throws Exception {       _        String exchangeRecipientAlias = getRecipientKeyAlias(exchange)__        _        if (null == exchangeRecipientAlias) {_            throw new IllegalStateException("The  recipient's key alias must be defined for asymmetric key encryption.")__        }_        _        if (trustStore == null && null != this.keyOrTrustStoreParameters) {_            trustStore = keyOrTrustStoreParameters.createKeyStore()__            trustStorePassword = keyOrTrustStoreParameters.getPassword()__        }__        if (null == trustStore) {_            throw new IllegalStateException("A trust store must be defined for asymmetric key encryption.")__        }_        _        Key keyEncryptionKey = getPublicKey(this.trustStore, exchangeRecipientAlias, this.trustStorePassword)__        _        if (null == keyEncryptionKey) {_            throw new IllegalStateException("No key for the alias [ " + exchangeRecipientAlias _                + " ] exists in " + "the configured trust store.")__        }_        _        Key dataEncryptionKey = generateDataEncryptionKey()__        _        XMLCipher keyCipher__        if (null != this.getKeyCyperAlgorithm()) {_            keyCipher = XMLCipher.getInstance(this.getKeyCyperAlgorithm())__        } else {_            keyCipher = XMLCipher.getInstance(XMLCipher.RSA_v1dot5)__        }_        keyCipher.init(XMLCipher.WRAP_MODE, keyEncryptionKey)__        encrypt(exchange, document, stream, dataEncryptionKey, keyCipher)__    };configure,the,public,key,for,the,asymmetric,key,wrap,algorithm,create,the,key,cipher,and,delegate,to,common,encryption,method,the,method,first,checks,the,exchange,for,a,declared,key,alias,and,will,fall,back,to,the,statically,defined,instance,variable,if,no,value,is,found,in,the,exchange,this,allows,different,aliases,keys,to,be,used,for,multiple,recipient,messaging,integration,patterns,such,as,cbr,or,recipient,list;private,void,encrypt,asymmetric,exchange,exchange,document,document,output,stream,stream,throws,exception,string,exchange,recipient,alias,get,recipient,key,alias,exchange,if,null,exchange,recipient,alias,throw,new,illegal,state,exception,the,recipient,s,key,alias,must,be,defined,for,asymmetric,key,encryption,if,trust,store,null,null,this,key,or,trust,store,parameters,trust,store,key,or,trust,store,parameters,create,key,store,trust,store,password,key,or,trust,store,parameters,get,password,if,null,trust,store,throw,new,illegal,state,exception,a,trust,store,must,be,defined,for,asymmetric,key,encryption,key,key,encryption,key,get,public,key,this,trust,store,exchange,recipient,alias,this,trust,store,password,if,null,key,encryption,key,throw,new,illegal,state,exception,no,key,for,the,alias,exchange,recipient,alias,exists,in,the,configured,trust,store,key,data,encryption,key,generate,data,encryption,key,xmlcipher,key,cipher,if,null,this,get,key,cyper,algorithm,key,cipher,xmlcipher,get,instance,this,get,key,cyper,algorithm,else,key,cipher,xmlcipher,get,instance,xmlcipher,key,cipher,init,xmlcipher,key,encryption,key,encrypt,exchange,document,stream,data,encryption,key,key,cipher
XMLSecurityDataFormat -> private void encryptAsymmetric(Exchange exchange, Document document, OutputStream stream) throws Exception;1346229387;Configure the public key for the asymmetric key wrap algorithm, create the key cipher, and delegate_to common encryption method.__The method first checks the exchange for a declared key alias, and will fall back to the_statically-defined instance variable if no value is found in the exchange. This allows different_aliases / keys to be used for multiple-recipient messaging integration patterns such as CBR_or recipient list.;private void encryptAsymmetric(Exchange exchange, Document document, OutputStream stream) throws Exception {       _        String exchangeRecipientAlias = getRecipientKeyAlias(exchange)__        _        if (null == exchangeRecipientAlias) {_            throw new IllegalStateException("The  recipient's key alias must be defined for asymmetric key encryption.")__        }_        _        if (trustStore == null && null != this.keyOrTrustStoreParameters) {_            trustStore = keyOrTrustStoreParameters.createKeyStore()__            trustStorePassword = keyOrTrustStoreParameters.getPassword()__        }__        if (null == trustStore) {_            throw new IllegalStateException("A trust store must be defined for asymmetric key encryption.")__        }_        _        Key keyEncryptionKey = getPublicKey(this.trustStore, exchangeRecipientAlias, this.trustStorePassword)__        _        if (null == keyEncryptionKey) {_            throw new IllegalStateException("No key for the alias [ " + exchangeRecipientAlias _                + " ] exists in " + "the configured trust store.")__        }_        _        Key dataEncryptionKey = generateDataEncryptionKey()__        _        XMLCipher keyCipher__        if (null != this.getKeyCyperAlgorithm()) {_            keyCipher = XMLCipher.getInstance(this.getKeyCyperAlgorithm())__        } else {_            keyCipher = XMLCipher.getInstance(XMLCipher.RSA_v1dot5)__        }_        keyCipher.init(XMLCipher.WRAP_MODE, keyEncryptionKey)__        encrypt(exchange, document, stream, dataEncryptionKey, keyCipher)__    };configure,the,public,key,for,the,asymmetric,key,wrap,algorithm,create,the,key,cipher,and,delegate,to,common,encryption,method,the,method,first,checks,the,exchange,for,a,declared,key,alias,and,will,fall,back,to,the,statically,defined,instance,variable,if,no,value,is,found,in,the,exchange,this,allows,different,aliases,keys,to,be,used,for,multiple,recipient,messaging,integration,patterns,such,as,cbr,or,recipient,list;private,void,encrypt,asymmetric,exchange,exchange,document,document,output,stream,stream,throws,exception,string,exchange,recipient,alias,get,recipient,key,alias,exchange,if,null,exchange,recipient,alias,throw,new,illegal,state,exception,the,recipient,s,key,alias,must,be,defined,for,asymmetric,key,encryption,if,trust,store,null,null,this,key,or,trust,store,parameters,trust,store,key,or,trust,store,parameters,create,key,store,trust,store,password,key,or,trust,store,parameters,get,password,if,null,trust,store,throw,new,illegal,state,exception,a,trust,store,must,be,defined,for,asymmetric,key,encryption,key,key,encryption,key,get,public,key,this,trust,store,exchange,recipient,alias,this,trust,store,password,if,null,key,encryption,key,throw,new,illegal,state,exception,no,key,for,the,alias,exchange,recipient,alias,exists,in,the,configured,trust,store,key,data,encryption,key,generate,data,encryption,key,xmlcipher,key,cipher,if,null,this,get,key,cyper,algorithm,key,cipher,xmlcipher,get,instance,this,get,key,cyper,algorithm,else,key,cipher,xmlcipher,get,instance,xmlcipher,key,cipher,init,xmlcipher,key,encryption,key,encrypt,exchange,document,stream,data,encryption,key,key,cipher
XMLSecurityDataFormat -> private void encryptAsymmetric(Exchange exchange, Document document, OutputStream stream) throws Exception;1358954767;Configure the public key for the asymmetric key wrap algorithm, create the key cipher, and delegate_to common encryption method.__The method first checks the exchange for a declared key alias, and will fall back to the_statically-defined instance variable if no value is found in the exchange. This allows different_aliases / keys to be used for multiple-recipient messaging integration patterns such as CBR_or recipient list.;private void encryptAsymmetric(Exchange exchange, Document document, OutputStream stream) throws Exception {       _        String exchangeRecipientAlias = getRecipientKeyAlias(exchange)__        _        if (null == exchangeRecipientAlias) {_            throw new IllegalStateException("The  recipient's key alias must be defined for asymmetric key encryption.")__        }_        _        if (trustStore == null && null != this.keyOrTrustStoreParameters) {_            trustStore = keyOrTrustStoreParameters.createKeyStore()__            trustStorePassword = keyOrTrustStoreParameters.getPassword()__        }__        if (null == trustStore) {_            throw new IllegalStateException("A trust store must be defined for asymmetric key encryption.")__        }_        _        Key keyEncryptionKey = getPublicKey(this.trustStore, exchangeRecipientAlias, this.trustStorePassword)__        _        if (null == keyEncryptionKey) {_            throw new IllegalStateException("No key for the alias [ " + exchangeRecipientAlias _                + " ] exists in " + "the configured trust store.")__        }_        _        Key dataEncryptionKey = generateDataEncryptionKey()__        _        XMLCipher keyCipher__        if (null != this.getKeyCyperAlgorithm()) {_            keyCipher = XMLCipher.getInstance(this.getKeyCyperAlgorithm())__        } else {_            keyCipher = XMLCipher.getInstance(XMLCipher.RSA_v1dot5)__        }_        keyCipher.init(XMLCipher.WRAP_MODE, keyEncryptionKey)__        encrypt(exchange, document, stream, dataEncryptionKey, keyCipher)__    };configure,the,public,key,for,the,asymmetric,key,wrap,algorithm,create,the,key,cipher,and,delegate,to,common,encryption,method,the,method,first,checks,the,exchange,for,a,declared,key,alias,and,will,fall,back,to,the,statically,defined,instance,variable,if,no,value,is,found,in,the,exchange,this,allows,different,aliases,keys,to,be,used,for,multiple,recipient,messaging,integration,patterns,such,as,cbr,or,recipient,list;private,void,encrypt,asymmetric,exchange,exchange,document,document,output,stream,stream,throws,exception,string,exchange,recipient,alias,get,recipient,key,alias,exchange,if,null,exchange,recipient,alias,throw,new,illegal,state,exception,the,recipient,s,key,alias,must,be,defined,for,asymmetric,key,encryption,if,trust,store,null,null,this,key,or,trust,store,parameters,trust,store,key,or,trust,store,parameters,create,key,store,trust,store,password,key,or,trust,store,parameters,get,password,if,null,trust,store,throw,new,illegal,state,exception,a,trust,store,must,be,defined,for,asymmetric,key,encryption,key,key,encryption,key,get,public,key,this,trust,store,exchange,recipient,alias,this,trust,store,password,if,null,key,encryption,key,throw,new,illegal,state,exception,no,key,for,the,alias,exchange,recipient,alias,exists,in,the,configured,trust,store,key,data,encryption,key,generate,data,encryption,key,xmlcipher,key,cipher,if,null,this,get,key,cyper,algorithm,key,cipher,xmlcipher,get,instance,this,get,key,cyper,algorithm,else,key,cipher,xmlcipher,get,instance,xmlcipher,key,cipher,init,xmlcipher,key,encryption,key,encrypt,exchange,document,stream,data,encryption,key,key,cipher
XMLSecurityDataFormat -> private void encryptAsymmetric(Exchange exchange, Document document, OutputStream stream) throws Exception;1375894613;Configure the public key for the asymmetric key wrap algorithm, create the key cipher, and delegate_to common encryption method.__The method first checks the exchange for a declared key alias, and will fall back to the_statically-defined instance variable if no value is found in the exchange. This allows different_aliases / keys to be used for multiple-recipient messaging integration patterns such as CBR_or recipient list.;private void encryptAsymmetric(Exchange exchange, Document document, OutputStream stream) throws Exception {       _        String exchangeRecipientAlias = getRecipientKeyAlias(exchange)__        _        if (null == exchangeRecipientAlias) {_            throw new IllegalStateException("The  recipient's key alias must be defined for asymmetric key encryption.")__        }_        _        if (trustStore == null && null != this.keyOrTrustStoreParameters) {_            trustStore = keyOrTrustStoreParameters.createKeyStore()__            trustStorePassword = keyOrTrustStoreParameters.getPassword()__        }__        if (null == trustStore) {_            throw new IllegalStateException("A trust store must be defined for asymmetric key encryption.")__        }_        _        Key keyEncryptionKey = getPublicKey(this.trustStore, exchangeRecipientAlias, this.trustStorePassword)__        _        if (null == keyEncryptionKey) {_            throw new IllegalStateException("No key for the alias [ " + exchangeRecipientAlias _                + " ] exists in " + "the configured trust store.")__        }_        _        Key dataEncryptionKey = generateDataEncryptionKey()__        _        XMLCipher keyCipher__        if (null != this.getKeyCyperAlgorithm()) {_            keyCipher = XMLCipher.getInstance(this.getKeyCyperAlgorithm())__        } else {_            keyCipher = XMLCipher.getInstance(XMLCipher.RSA_v1dot5)__        }_        keyCipher.init(XMLCipher.WRAP_MODE, keyEncryptionKey)__        encrypt(exchange, document, stream, dataEncryptionKey, keyCipher)__    };configure,the,public,key,for,the,asymmetric,key,wrap,algorithm,create,the,key,cipher,and,delegate,to,common,encryption,method,the,method,first,checks,the,exchange,for,a,declared,key,alias,and,will,fall,back,to,the,statically,defined,instance,variable,if,no,value,is,found,in,the,exchange,this,allows,different,aliases,keys,to,be,used,for,multiple,recipient,messaging,integration,patterns,such,as,cbr,or,recipient,list;private,void,encrypt,asymmetric,exchange,exchange,document,document,output,stream,stream,throws,exception,string,exchange,recipient,alias,get,recipient,key,alias,exchange,if,null,exchange,recipient,alias,throw,new,illegal,state,exception,the,recipient,s,key,alias,must,be,defined,for,asymmetric,key,encryption,if,trust,store,null,null,this,key,or,trust,store,parameters,trust,store,key,or,trust,store,parameters,create,key,store,trust,store,password,key,or,trust,store,parameters,get,password,if,null,trust,store,throw,new,illegal,state,exception,a,trust,store,must,be,defined,for,asymmetric,key,encryption,key,key,encryption,key,get,public,key,this,trust,store,exchange,recipient,alias,this,trust,store,password,if,null,key,encryption,key,throw,new,illegal,state,exception,no,key,for,the,alias,exchange,recipient,alias,exists,in,the,configured,trust,store,key,data,encryption,key,generate,data,encryption,key,xmlcipher,key,cipher,if,null,this,get,key,cyper,algorithm,key,cipher,xmlcipher,get,instance,this,get,key,cyper,algorithm,else,key,cipher,xmlcipher,get,instance,xmlcipher,key,cipher,init,xmlcipher,key,encryption,key,encrypt,exchange,document,stream,data,encryption,key,key,cipher
XMLSecurityDataFormat -> private void encryptAsymmetric(Exchange exchange, Document document, OutputStream stream) throws Exception;1376034290;Configure the public key for the asymmetric key wrap algorithm, create the key cipher, and delegate_to common encryption method.__The method first checks the exchange for a declared key alias, and will fall back to the_statically-defined instance variable if no value is found in the exchange. This allows different_aliases / keys to be used for multiple-recipient messaging integration patterns such as CBR_or recipient list.;private void encryptAsymmetric(Exchange exchange, Document document, OutputStream stream) throws Exception {       _        String exchangeRecipientAlias = getRecipientKeyAlias(exchange)__        _        if (null == exchangeRecipientAlias) {_            throw new IllegalStateException("The  recipient's key alias must be defined for asymmetric key encryption.")__        }_        _        if (trustStore == null && null != this.keyOrTrustStoreParameters) {_            trustStore = keyOrTrustStoreParameters.createKeyStore()__            trustStorePassword = keyOrTrustStoreParameters.getPassword()__        }__        if (null == trustStore) {_            throw new IllegalStateException("A trust store must be defined for asymmetric key encryption.")__        }_        _        Key keyEncryptionKey = getPublicKey(this.trustStore, exchangeRecipientAlias, this.trustStorePassword)__        _        if (null == keyEncryptionKey) {_            throw new IllegalStateException("No key for the alias [ " + exchangeRecipientAlias _                + " ] exists in " + "the configured trust store.")__        }_        _        Key dataEncryptionKey = generateDataEncryptionKey()__        _        XMLCipher keyCipher__        if (null != this.getKeyCyperAlgorithm()) {_            keyCipher = XMLCipher.getInstance(this.getKeyCyperAlgorithm())__        } else {_            keyCipher = XMLCipher.getInstance(XMLCipher.RSA_v1dot5)__        }_        keyCipher.init(XMLCipher.WRAP_MODE, keyEncryptionKey)__        encrypt(exchange, document, stream, dataEncryptionKey, keyCipher)__    };configure,the,public,key,for,the,asymmetric,key,wrap,algorithm,create,the,key,cipher,and,delegate,to,common,encryption,method,the,method,first,checks,the,exchange,for,a,declared,key,alias,and,will,fall,back,to,the,statically,defined,instance,variable,if,no,value,is,found,in,the,exchange,this,allows,different,aliases,keys,to,be,used,for,multiple,recipient,messaging,integration,patterns,such,as,cbr,or,recipient,list;private,void,encrypt,asymmetric,exchange,exchange,document,document,output,stream,stream,throws,exception,string,exchange,recipient,alias,get,recipient,key,alias,exchange,if,null,exchange,recipient,alias,throw,new,illegal,state,exception,the,recipient,s,key,alias,must,be,defined,for,asymmetric,key,encryption,if,trust,store,null,null,this,key,or,trust,store,parameters,trust,store,key,or,trust,store,parameters,create,key,store,trust,store,password,key,or,trust,store,parameters,get,password,if,null,trust,store,throw,new,illegal,state,exception,a,trust,store,must,be,defined,for,asymmetric,key,encryption,key,key,encryption,key,get,public,key,this,trust,store,exchange,recipient,alias,this,trust,store,password,if,null,key,encryption,key,throw,new,illegal,state,exception,no,key,for,the,alias,exchange,recipient,alias,exists,in,the,configured,trust,store,key,data,encryption,key,generate,data,encryption,key,xmlcipher,key,cipher,if,null,this,get,key,cyper,algorithm,key,cipher,xmlcipher,get,instance,this,get,key,cyper,algorithm,else,key,cipher,xmlcipher,get,instance,xmlcipher,key,cipher,init,xmlcipher,key,encryption,key,encrypt,exchange,document,stream,data,encryption,key,key,cipher
XMLSecurityDataFormat -> private void encryptAsymmetric(Exchange exchange, Document document, OutputStream stream) throws Exception;1376477110;Configure the public key for the asymmetric key wrap algorithm, create the key cipher, and delegate_to common encryption method.__The method first checks the exchange for a declared key alias, and will fall back to the_statically-defined instance variable if no value is found in the exchange. This allows different_aliases / keys to be used for multiple-recipient messaging integration patterns such as CBR_or recipient list.;private void encryptAsymmetric(Exchange exchange, Document document, OutputStream stream) throws Exception {       _        String exchangeRecipientAlias = getRecipientKeyAlias(exchange)__        _        if (null == exchangeRecipientAlias) {_            throw new IllegalStateException("The  recipient's key alias must be defined for asymmetric key encryption.")__        }_        _        if (trustStore == null && null != this.keyOrTrustStoreParameters) {_            trustStore = keyOrTrustStoreParameters.createKeyStore()__            trustStorePassword = keyOrTrustStoreParameters.getPassword()__        }__        if (null == trustStore) {_            throw new IllegalStateException("A trust store must be defined for asymmetric key encryption.")__        }_        _        Key keyEncryptionKey = getPublicKey(this.trustStore, exchangeRecipientAlias, this.trustStorePassword)__        _        if (null == keyEncryptionKey) {_            throw new IllegalStateException("No key for the alias [ " + exchangeRecipientAlias _                + " ] exists in " + "the configured trust store.")__        }_        _        Key dataEncryptionKey = generateDataEncryptionKey()__        _        XMLCipher keyCipher__        if (null != this.getKeyCipherAlgorithm()) {_            keyCipher = XMLCipher.getInstance(this.getKeyCipherAlgorithm(), null, digestAlgorithm)__        } else {_            keyCipher = XMLCipher.getInstance(XMLCipher.RSA_v1dot5, null, digestAlgorithm)__        }_        keyCipher.init(XMLCipher.WRAP_MODE, keyEncryptionKey)__        encrypt(exchange, document, stream, dataEncryptionKey, keyCipher)__    };configure,the,public,key,for,the,asymmetric,key,wrap,algorithm,create,the,key,cipher,and,delegate,to,common,encryption,method,the,method,first,checks,the,exchange,for,a,declared,key,alias,and,will,fall,back,to,the,statically,defined,instance,variable,if,no,value,is,found,in,the,exchange,this,allows,different,aliases,keys,to,be,used,for,multiple,recipient,messaging,integration,patterns,such,as,cbr,or,recipient,list;private,void,encrypt,asymmetric,exchange,exchange,document,document,output,stream,stream,throws,exception,string,exchange,recipient,alias,get,recipient,key,alias,exchange,if,null,exchange,recipient,alias,throw,new,illegal,state,exception,the,recipient,s,key,alias,must,be,defined,for,asymmetric,key,encryption,if,trust,store,null,null,this,key,or,trust,store,parameters,trust,store,key,or,trust,store,parameters,create,key,store,trust,store,password,key,or,trust,store,parameters,get,password,if,null,trust,store,throw,new,illegal,state,exception,a,trust,store,must,be,defined,for,asymmetric,key,encryption,key,key,encryption,key,get,public,key,this,trust,store,exchange,recipient,alias,this,trust,store,password,if,null,key,encryption,key,throw,new,illegal,state,exception,no,key,for,the,alias,exchange,recipient,alias,exists,in,the,configured,trust,store,key,data,encryption,key,generate,data,encryption,key,xmlcipher,key,cipher,if,null,this,get,key,cipher,algorithm,key,cipher,xmlcipher,get,instance,this,get,key,cipher,algorithm,null,digest,algorithm,else,key,cipher,xmlcipher,get,instance,xmlcipher,null,digest,algorithm,key,cipher,init,xmlcipher,key,encryption,key,encrypt,exchange,document,stream,data,encryption,key,key,cipher
XMLSecurityDataFormat -> private void encryptAsymmetric(Exchange exchange, Document document, OutputStream stream) throws Exception;1376632954;Configure the public key for the asymmetric key wrap algorithm, create the key cipher, and delegate_to common encryption method.__The method first checks the exchange for a declared key alias, and will fall back to the_statically-defined instance variable if no value is found in the exchange. This allows different_aliases / keys to be used for multiple-recipient messaging integration patterns such as CBR_or recipient list.;private void encryptAsymmetric(Exchange exchange, Document document, OutputStream stream) throws Exception {       _        String exchangeRecipientAlias = getRecipientKeyAlias(exchange)__        _        if (null == exchangeRecipientAlias) {_            throw new IllegalStateException("The  recipient's key alias must be defined for asymmetric key encryption.")__        }_        _        if (trustStore == null && null != this.keyOrTrustStoreParameters) {_            trustStore = keyOrTrustStoreParameters.createKeyStore()__            trustStorePassword = keyOrTrustStoreParameters.getPassword()__        }__        if (null == trustStore) {_            throw new IllegalStateException("A trust store must be defined for asymmetric key encryption.")__        }_        _        Key keyEncryptionKey = getPublicKey(this.trustStore, exchangeRecipientAlias, this.trustStorePassword)__        _        if (null == keyEncryptionKey) {_            throw new IllegalStateException("No key for the alias [ " + exchangeRecipientAlias _                + " ] exists in " + "the configured trust store.")__        }_        _        Key dataEncryptionKey = generateDataEncryptionKey()__        _        XMLCipher keyCipher__        if (null != this.getKeyCipherAlgorithm()) {_            keyCipher = XMLCipher.getInstance(this.getKeyCipherAlgorithm(), null, digestAlgorithm)__        } else {_            keyCipher = XMLCipher.getInstance(XMLCipher.RSA_OAEP, null, digestAlgorithm)__        }_        keyCipher.init(XMLCipher.WRAP_MODE, keyEncryptionKey)__        encrypt(exchange, document, stream, dataEncryptionKey, keyCipher)__    };configure,the,public,key,for,the,asymmetric,key,wrap,algorithm,create,the,key,cipher,and,delegate,to,common,encryption,method,the,method,first,checks,the,exchange,for,a,declared,key,alias,and,will,fall,back,to,the,statically,defined,instance,variable,if,no,value,is,found,in,the,exchange,this,allows,different,aliases,keys,to,be,used,for,multiple,recipient,messaging,integration,patterns,such,as,cbr,or,recipient,list;private,void,encrypt,asymmetric,exchange,exchange,document,document,output,stream,stream,throws,exception,string,exchange,recipient,alias,get,recipient,key,alias,exchange,if,null,exchange,recipient,alias,throw,new,illegal,state,exception,the,recipient,s,key,alias,must,be,defined,for,asymmetric,key,encryption,if,trust,store,null,null,this,key,or,trust,store,parameters,trust,store,key,or,trust,store,parameters,create,key,store,trust,store,password,key,or,trust,store,parameters,get,password,if,null,trust,store,throw,new,illegal,state,exception,a,trust,store,must,be,defined,for,asymmetric,key,encryption,key,key,encryption,key,get,public,key,this,trust,store,exchange,recipient,alias,this,trust,store,password,if,null,key,encryption,key,throw,new,illegal,state,exception,no,key,for,the,alias,exchange,recipient,alias,exists,in,the,configured,trust,store,key,data,encryption,key,generate,data,encryption,key,xmlcipher,key,cipher,if,null,this,get,key,cipher,algorithm,key,cipher,xmlcipher,get,instance,this,get,key,cipher,algorithm,null,digest,algorithm,else,key,cipher,xmlcipher,get,instance,xmlcipher,null,digest,algorithm,key,cipher,init,xmlcipher,key,encryption,key,encrypt,exchange,document,stream,data,encryption,key,key,cipher
XMLSecurityDataFormat -> private void encryptAsymmetric(Exchange exchange, Document document, OutputStream stream) throws Exception;1388443957;Configure the public key for the asymmetric key wrap algorithm, create the key cipher, and delegate_to common encryption method.__The method first checks the exchange for a declared key alias, and will fall back to the_statically-defined instance variable if no value is found in the exchange. This allows different_aliases / keys to be used for multiple-recipient messaging integration patterns such as CBR_or recipient list.;private void encryptAsymmetric(Exchange exchange, Document document, OutputStream stream) throws Exception {       _        String exchangeRecipientAlias = getRecipientKeyAlias(exchange)__        _        if (null == exchangeRecipientAlias) {_            throw new IllegalStateException("The  recipient's key alias must be defined for asymmetric key encryption.")__        }_        _        if (trustStore == null && null != this.keyOrTrustStoreParameters) {_            trustStore = keyOrTrustStoreParameters.createKeyStore()__            trustStorePassword = keyOrTrustStoreParameters.getPassword()__        }__        if (null == trustStore) {_            throw new IllegalStateException("A trust store must be defined for asymmetric key encryption.")__        }_        _        Key keyEncryptionKey = getPublicKey(this.trustStore, exchangeRecipientAlias, this.trustStorePassword)__        _        if (null == keyEncryptionKey) {_            throw new IllegalStateException("No key for the alias [ " + exchangeRecipientAlias _                + " ] exists in " + "the configured trust store.")__        }_        _        Key dataEncryptionKey = generateDataEncryptionKey()__        _        XMLCipher keyCipher__        if (null != this.getKeyCipherAlgorithm()) {_            keyCipher = XMLCipher.getInstance(this.getKeyCipherAlgorithm(), null, digestAlgorithm)__        } else {_            keyCipher = XMLCipher.getInstance(XMLCipher.RSA_OAEP, null, digestAlgorithm)__        }_        keyCipher.init(XMLCipher.WRAP_MODE, keyEncryptionKey)__        encrypt(exchange, document, stream, dataEncryptionKey, keyCipher)__    };configure,the,public,key,for,the,asymmetric,key,wrap,algorithm,create,the,key,cipher,and,delegate,to,common,encryption,method,the,method,first,checks,the,exchange,for,a,declared,key,alias,and,will,fall,back,to,the,statically,defined,instance,variable,if,no,value,is,found,in,the,exchange,this,allows,different,aliases,keys,to,be,used,for,multiple,recipient,messaging,integration,patterns,such,as,cbr,or,recipient,list;private,void,encrypt,asymmetric,exchange,exchange,document,document,output,stream,stream,throws,exception,string,exchange,recipient,alias,get,recipient,key,alias,exchange,if,null,exchange,recipient,alias,throw,new,illegal,state,exception,the,recipient,s,key,alias,must,be,defined,for,asymmetric,key,encryption,if,trust,store,null,null,this,key,or,trust,store,parameters,trust,store,key,or,trust,store,parameters,create,key,store,trust,store,password,key,or,trust,store,parameters,get,password,if,null,trust,store,throw,new,illegal,state,exception,a,trust,store,must,be,defined,for,asymmetric,key,encryption,key,key,encryption,key,get,public,key,this,trust,store,exchange,recipient,alias,this,trust,store,password,if,null,key,encryption,key,throw,new,illegal,state,exception,no,key,for,the,alias,exchange,recipient,alias,exists,in,the,configured,trust,store,key,data,encryption,key,generate,data,encryption,key,xmlcipher,key,cipher,if,null,this,get,key,cipher,algorithm,key,cipher,xmlcipher,get,instance,this,get,key,cipher,algorithm,null,digest,algorithm,else,key,cipher,xmlcipher,get,instance,xmlcipher,null,digest,algorithm,key,cipher,init,xmlcipher,key,encryption,key,encrypt,exchange,document,stream,data,encryption,key,key,cipher
XMLSecurityDataFormat -> private void encryptAsymmetric(Exchange exchange, Document document, OutputStream stream) throws Exception;1415211488;Configure the public key for the asymmetric key wrap algorithm, create the key cipher, and delegate_to common encryption method.__The method first checks the exchange for a declared key alias, and will fall back to the_statically-defined instance variable if no value is found in the exchange. This allows different_aliases / keys to be used for multiple-recipient messaging integration patterns such as CBR_or recipient list.;private void encryptAsymmetric(Exchange exchange, Document document, OutputStream stream) throws Exception {       _        String exchangeRecipientAlias = getRecipientKeyAlias(exchange)__        _        if (null == exchangeRecipientAlias) {_            throw new IllegalStateException("The  recipient's key alias must be defined for asymmetric key encryption.")__        }_        _        if (trustStore == null && null != this.keyOrTrustStoreParameters) {_            trustStore = keyOrTrustStoreParameters.createKeyStore()__            trustStorePassword = keyOrTrustStoreParameters.getPassword()__        }__        if (null == trustStore) {_            throw new IllegalStateException("A trust store must be defined for asymmetric key encryption.")__        }_        _        Key keyEncryptionKey = getPublicKey(this.trustStore, exchangeRecipientAlias, this.trustStorePassword)__        _        if (null == keyEncryptionKey) {_            throw new IllegalStateException("No key for the alias [ " + exchangeRecipientAlias _                + " ] exists in " + "the configured trust store.")__        }_        _        Key dataEncryptionKey = generateDataEncryptionKey()__        _        XMLCipher keyCipher__        if (null != this.getKeyCipherAlgorithm()) {_            keyCipher = XMLCipher.getInstance(this.getKeyCipherAlgorithm(), null, digestAlgorithm)__        } else {_            keyCipher = XMLCipher.getInstance(XMLCipher.RSA_OAEP, null, digestAlgorithm)__        }_        keyCipher.init(XMLCipher.WRAP_MODE, keyEncryptionKey)__        encrypt(exchange, document, stream, dataEncryptionKey, keyCipher)__    };configure,the,public,key,for,the,asymmetric,key,wrap,algorithm,create,the,key,cipher,and,delegate,to,common,encryption,method,the,method,first,checks,the,exchange,for,a,declared,key,alias,and,will,fall,back,to,the,statically,defined,instance,variable,if,no,value,is,found,in,the,exchange,this,allows,different,aliases,keys,to,be,used,for,multiple,recipient,messaging,integration,patterns,such,as,cbr,or,recipient,list;private,void,encrypt,asymmetric,exchange,exchange,document,document,output,stream,stream,throws,exception,string,exchange,recipient,alias,get,recipient,key,alias,exchange,if,null,exchange,recipient,alias,throw,new,illegal,state,exception,the,recipient,s,key,alias,must,be,defined,for,asymmetric,key,encryption,if,trust,store,null,null,this,key,or,trust,store,parameters,trust,store,key,or,trust,store,parameters,create,key,store,trust,store,password,key,or,trust,store,parameters,get,password,if,null,trust,store,throw,new,illegal,state,exception,a,trust,store,must,be,defined,for,asymmetric,key,encryption,key,key,encryption,key,get,public,key,this,trust,store,exchange,recipient,alias,this,trust,store,password,if,null,key,encryption,key,throw,new,illegal,state,exception,no,key,for,the,alias,exchange,recipient,alias,exists,in,the,configured,trust,store,key,data,encryption,key,generate,data,encryption,key,xmlcipher,key,cipher,if,null,this,get,key,cipher,algorithm,key,cipher,xmlcipher,get,instance,this,get,key,cipher,algorithm,null,digest,algorithm,else,key,cipher,xmlcipher,get,instance,xmlcipher,null,digest,algorithm,key,cipher,init,xmlcipher,key,encryption,key,encrypt,exchange,document,stream,data,encryption,key,key,cipher
XMLSecurityDataFormat -> private void encryptAsymmetric(Exchange exchange, Document document, OutputStream stream) throws Exception;1415877369;Configure the public key for the asymmetric key wrap algorithm, create the key cipher, and delegate_to common encryption method.__The method first checks the exchange for a declared key alias, and will fall back to the_statically-defined instance variable if no value is found in the exchange. This allows different_aliases / keys to be used for multiple-recipient messaging integration patterns such as CBR_or recipient list.;private void encryptAsymmetric(Exchange exchange, Document document, OutputStream stream) throws Exception {       _        String exchangeRecipientAlias = getRecipientKeyAlias(exchange)__        _        if (null == exchangeRecipientAlias) {_            throw new IllegalStateException("The  recipient's key alias must be defined for asymmetric key encryption.")__        }_        _        if (trustStore == null && null != this.keyOrTrustStoreParameters) {_            trustStore = keyOrTrustStoreParameters.createKeyStore()__            trustStorePassword = keyOrTrustStoreParameters.getPassword()__        }__        if (null == trustStore) {_            throw new IllegalStateException("A trust store must be defined for asymmetric key encryption.")__        }_        _        String password = _            this.keyPassword != null ? this.keyPassword : this.trustStorePassword__        Key keyEncryptionKey = getPublicKey(this.trustStore, exchangeRecipientAlias, password)__        _        if (null == keyEncryptionKey) {_            throw new IllegalStateException("No key for the alias [ " + exchangeRecipientAlias _                + " ] exists in " + "the configured trust store.")__        }_        _        Key dataEncryptionKey = generateDataEncryptionKey()__        _        XMLCipher keyCipher__        if (null != this.getKeyCipherAlgorithm()) {_            keyCipher = XMLCipher.getInstance(this.getKeyCipherAlgorithm(), null, digestAlgorithm)__        } else {_            keyCipher = XMLCipher.getInstance(XMLCipher.RSA_OAEP, null, digestAlgorithm)__        }_        keyCipher.init(XMLCipher.WRAP_MODE, keyEncryptionKey)__        encrypt(exchange, document, stream, dataEncryptionKey, keyCipher)__    };configure,the,public,key,for,the,asymmetric,key,wrap,algorithm,create,the,key,cipher,and,delegate,to,common,encryption,method,the,method,first,checks,the,exchange,for,a,declared,key,alias,and,will,fall,back,to,the,statically,defined,instance,variable,if,no,value,is,found,in,the,exchange,this,allows,different,aliases,keys,to,be,used,for,multiple,recipient,messaging,integration,patterns,such,as,cbr,or,recipient,list;private,void,encrypt,asymmetric,exchange,exchange,document,document,output,stream,stream,throws,exception,string,exchange,recipient,alias,get,recipient,key,alias,exchange,if,null,exchange,recipient,alias,throw,new,illegal,state,exception,the,recipient,s,key,alias,must,be,defined,for,asymmetric,key,encryption,if,trust,store,null,null,this,key,or,trust,store,parameters,trust,store,key,or,trust,store,parameters,create,key,store,trust,store,password,key,or,trust,store,parameters,get,password,if,null,trust,store,throw,new,illegal,state,exception,a,trust,store,must,be,defined,for,asymmetric,key,encryption,string,password,this,key,password,null,this,key,password,this,trust,store,password,key,key,encryption,key,get,public,key,this,trust,store,exchange,recipient,alias,password,if,null,key,encryption,key,throw,new,illegal,state,exception,no,key,for,the,alias,exchange,recipient,alias,exists,in,the,configured,trust,store,key,data,encryption,key,generate,data,encryption,key,xmlcipher,key,cipher,if,null,this,get,key,cipher,algorithm,key,cipher,xmlcipher,get,instance,this,get,key,cipher,algorithm,null,digest,algorithm,else,key,cipher,xmlcipher,get,instance,xmlcipher,null,digest,algorithm,key,cipher,init,xmlcipher,key,encryption,key,encrypt,exchange,document,stream,data,encryption,key,key,cipher
XMLSecurityDataFormat -> private void encryptAsymmetric(Exchange exchange, Document document, OutputStream stream) throws Exception;1417521716;Configure the public key for the asymmetric key wrap algorithm, create the key cipher, and delegate_to common encryption method.__The method first checks the exchange for a declared key alias, and will fall back to the_statically-defined instance variable if no value is found in the exchange. This allows different_aliases / keys to be used for multiple-recipient messaging integration patterns such as CBR_or recipient list.;private void encryptAsymmetric(Exchange exchange, Document document, OutputStream stream) throws Exception {       _        String exchangeRecipientAlias = getRecipientKeyAlias(exchange)__        _        if (null == exchangeRecipientAlias) {_            throw new IllegalStateException("The  recipient's key alias must be defined for asymmetric key encryption.")__        }_        _        if (trustStore == null && null != this.keyOrTrustStoreParameters) {_            trustStore = keyOrTrustStoreParameters.createKeyStore()__            trustStorePassword = keyOrTrustStoreParameters.getPassword()__        }__        if (null == trustStore) {_            throw new IllegalStateException("A trust store must be defined for asymmetric key encryption.")__        }_        _        String password = _            this.keyPassword != null ? this.keyPassword : this.trustStorePassword__        Key keyEncryptionKey = getPublicKey(this.trustStore, exchangeRecipientAlias, password)__        _        if (null == keyEncryptionKey) {_            throw new IllegalStateException("No key for the alias [ " + exchangeRecipientAlias _                + " ] exists in " + "the configured trust store.")__        }_        _        Key dataEncryptionKey = generateDataEncryptionKey()__        _        XMLCipher keyCipher__        if (null != this.getKeyCipherAlgorithm()) {_            keyCipher = XMLCipher.getInstance(this.getKeyCipherAlgorithm(), null, digestAlgorithm)__        } else {_            keyCipher = XMLCipher.getInstance(XMLCipher.RSA_OAEP, null, digestAlgorithm)__        }_        _        keyCipher.init(XMLCipher.WRAP_MODE, keyEncryptionKey)__        encrypt(exchange, document, stream, dataEncryptionKey, keyCipher, keyEncryptionKey)__    };configure,the,public,key,for,the,asymmetric,key,wrap,algorithm,create,the,key,cipher,and,delegate,to,common,encryption,method,the,method,first,checks,the,exchange,for,a,declared,key,alias,and,will,fall,back,to,the,statically,defined,instance,variable,if,no,value,is,found,in,the,exchange,this,allows,different,aliases,keys,to,be,used,for,multiple,recipient,messaging,integration,patterns,such,as,cbr,or,recipient,list;private,void,encrypt,asymmetric,exchange,exchange,document,document,output,stream,stream,throws,exception,string,exchange,recipient,alias,get,recipient,key,alias,exchange,if,null,exchange,recipient,alias,throw,new,illegal,state,exception,the,recipient,s,key,alias,must,be,defined,for,asymmetric,key,encryption,if,trust,store,null,null,this,key,or,trust,store,parameters,trust,store,key,or,trust,store,parameters,create,key,store,trust,store,password,key,or,trust,store,parameters,get,password,if,null,trust,store,throw,new,illegal,state,exception,a,trust,store,must,be,defined,for,asymmetric,key,encryption,string,password,this,key,password,null,this,key,password,this,trust,store,password,key,key,encryption,key,get,public,key,this,trust,store,exchange,recipient,alias,password,if,null,key,encryption,key,throw,new,illegal,state,exception,no,key,for,the,alias,exchange,recipient,alias,exists,in,the,configured,trust,store,key,data,encryption,key,generate,data,encryption,key,xmlcipher,key,cipher,if,null,this,get,key,cipher,algorithm,key,cipher,xmlcipher,get,instance,this,get,key,cipher,algorithm,null,digest,algorithm,else,key,cipher,xmlcipher,get,instance,xmlcipher,null,digest,algorithm,key,cipher,init,xmlcipher,key,encryption,key,encrypt,exchange,document,stream,data,encryption,key,key,cipher,key,encryption,key
XMLSecurityDataFormat -> private void encryptAsymmetric(Exchange exchange, Document document, OutputStream stream) throws Exception;1417572756;Configure the public key for the asymmetric key wrap algorithm, create the key cipher, and delegate_to common encryption method.__The method first checks the exchange for a declared key alias, and will fall back to the_statically-defined instance variable if no value is found in the exchange. This allows different_aliases / keys to be used for multiple-recipient messaging integration patterns such as CBR_or recipient list.;private void encryptAsymmetric(Exchange exchange, Document document, OutputStream stream) throws Exception {       _        String exchangeRecipientAlias = getRecipientKeyAlias(exchange)__        _        if (null == exchangeRecipientAlias) {_            throw new IllegalStateException("The  recipient's key alias must be defined for asymmetric key encryption.")__        }_        _        if (trustStore == null && null != this.keyOrTrustStoreParameters) {_            trustStore = keyOrTrustStoreParameters.createKeyStore()__            trustStorePassword = keyOrTrustStoreParameters.getPassword()__        }__        if (null == trustStore) {_            throw new IllegalStateException("A trust store must be defined for asymmetric key encryption.")__        }_        _        String password = _            this.keyPassword != null ? this.keyPassword : this.trustStorePassword__        Key keyEncryptionKey = getPublicKey(this.trustStore, exchangeRecipientAlias, password)__        _        if (null == keyEncryptionKey) {_            throw new IllegalStateException("No key for the alias [ " + exchangeRecipientAlias _                + " ] exists in " + "the configured trust store.")__        }_        _        Key dataEncryptionKey = generateDataEncryptionKey()__        _        XMLCipher keyCipher__        if (null != this.getKeyCipherAlgorithm()) {_            keyCipher = XMLCipher.getInstance(this.getKeyCipherAlgorithm(), null, digestAlgorithm)__        } else {_            keyCipher = XMLCipher.getInstance(XMLCipher.RSA_OAEP, null, digestAlgorithm)__        }_        _        keyCipher.init(XMLCipher.WRAP_MODE, keyEncryptionKey)__        encrypt(exchange, document, stream, dataEncryptionKey, keyCipher, keyEncryptionKey)__    };configure,the,public,key,for,the,asymmetric,key,wrap,algorithm,create,the,key,cipher,and,delegate,to,common,encryption,method,the,method,first,checks,the,exchange,for,a,declared,key,alias,and,will,fall,back,to,the,statically,defined,instance,variable,if,no,value,is,found,in,the,exchange,this,allows,different,aliases,keys,to,be,used,for,multiple,recipient,messaging,integration,patterns,such,as,cbr,or,recipient,list;private,void,encrypt,asymmetric,exchange,exchange,document,document,output,stream,stream,throws,exception,string,exchange,recipient,alias,get,recipient,key,alias,exchange,if,null,exchange,recipient,alias,throw,new,illegal,state,exception,the,recipient,s,key,alias,must,be,defined,for,asymmetric,key,encryption,if,trust,store,null,null,this,key,or,trust,store,parameters,trust,store,key,or,trust,store,parameters,create,key,store,trust,store,password,key,or,trust,store,parameters,get,password,if,null,trust,store,throw,new,illegal,state,exception,a,trust,store,must,be,defined,for,asymmetric,key,encryption,string,password,this,key,password,null,this,key,password,this,trust,store,password,key,key,encryption,key,get,public,key,this,trust,store,exchange,recipient,alias,password,if,null,key,encryption,key,throw,new,illegal,state,exception,no,key,for,the,alias,exchange,recipient,alias,exists,in,the,configured,trust,store,key,data,encryption,key,generate,data,encryption,key,xmlcipher,key,cipher,if,null,this,get,key,cipher,algorithm,key,cipher,xmlcipher,get,instance,this,get,key,cipher,algorithm,null,digest,algorithm,else,key,cipher,xmlcipher,get,instance,xmlcipher,null,digest,algorithm,key,cipher,init,xmlcipher,key,encryption,key,encrypt,exchange,document,stream,data,encryption,key,key,cipher,key,encryption,key
XMLSecurityDataFormat -> private void encryptAsymmetric(Exchange exchange, Document document, OutputStream stream) throws Exception;1443094318;Configure the public key for the asymmetric key wrap algorithm, create the key cipher, and delegate_to common encryption method.__The method first checks the exchange for a declared key alias, and will fall back to the_statically-defined instance variable if no value is found in the exchange. This allows different_aliases / keys to be used for multiple-recipient messaging integration patterns such as CBR_or recipient list.;private void encryptAsymmetric(Exchange exchange, Document document, OutputStream stream) throws Exception {       _        String exchangeRecipientAlias = getRecipientKeyAlias(exchange)__        _        if (null == exchangeRecipientAlias) {_            throw new IllegalStateException("The  recipient's key alias must be defined for asymmetric key encryption.")__        }_        _        if (trustStore == null && null != this.keyOrTrustStoreParameters) {_            trustStore = keyOrTrustStoreParameters.createKeyStore()__            trustStorePassword = keyOrTrustStoreParameters.getPassword()__        }__        if (null == trustStore) {_            throw new IllegalStateException("A trust store must be defined for asymmetric key encryption.")__        }_        _        String password = _            this.keyPassword != null ? this.keyPassword : this.trustStorePassword__        Key keyEncryptionKey = getPublicKey(this.trustStore, exchangeRecipientAlias, password)__        _        if (null == keyEncryptionKey) {_            throw new IllegalStateException("No key for the alias [ " + exchangeRecipientAlias _                + " ] exists in " + "the configured trust store.")__        }_        _        Key dataEncryptionKey = generateDataEncryptionKey()__        _        XMLCipher keyCipher__        if (null != this.getKeyCipherAlgorithm()) {_            keyCipher = XMLCipher.getInstance(this.getKeyCipherAlgorithm(), null, digestAlgorithm)__        } else {_            keyCipher = XMLCipher.getInstance(XMLCipher.RSA_OAEP, null, digestAlgorithm)__        }_        _        keyCipher.init(XMLCipher.WRAP_MODE, keyEncryptionKey)__        encrypt(exchange, document, stream, dataEncryptionKey, keyCipher, keyEncryptionKey)__    };configure,the,public,key,for,the,asymmetric,key,wrap,algorithm,create,the,key,cipher,and,delegate,to,common,encryption,method,the,method,first,checks,the,exchange,for,a,declared,key,alias,and,will,fall,back,to,the,statically,defined,instance,variable,if,no,value,is,found,in,the,exchange,this,allows,different,aliases,keys,to,be,used,for,multiple,recipient,messaging,integration,patterns,such,as,cbr,or,recipient,list;private,void,encrypt,asymmetric,exchange,exchange,document,document,output,stream,stream,throws,exception,string,exchange,recipient,alias,get,recipient,key,alias,exchange,if,null,exchange,recipient,alias,throw,new,illegal,state,exception,the,recipient,s,key,alias,must,be,defined,for,asymmetric,key,encryption,if,trust,store,null,null,this,key,or,trust,store,parameters,trust,store,key,or,trust,store,parameters,create,key,store,trust,store,password,key,or,trust,store,parameters,get,password,if,null,trust,store,throw,new,illegal,state,exception,a,trust,store,must,be,defined,for,asymmetric,key,encryption,string,password,this,key,password,null,this,key,password,this,trust,store,password,key,key,encryption,key,get,public,key,this,trust,store,exchange,recipient,alias,password,if,null,key,encryption,key,throw,new,illegal,state,exception,no,key,for,the,alias,exchange,recipient,alias,exists,in,the,configured,trust,store,key,data,encryption,key,generate,data,encryption,key,xmlcipher,key,cipher,if,null,this,get,key,cipher,algorithm,key,cipher,xmlcipher,get,instance,this,get,key,cipher,algorithm,null,digest,algorithm,else,key,cipher,xmlcipher,get,instance,xmlcipher,null,digest,algorithm,key,cipher,init,xmlcipher,key,encryption,key,encrypt,exchange,document,stream,data,encryption,key,key,cipher,key,encryption,key
XMLSecurityDataFormat -> private void encryptAsymmetric(Exchange exchange, Document document, OutputStream stream) throws Exception;1443168793;Configure the public key for the asymmetric key wrap algorithm, create the key cipher, and delegate_to common encryption method.__The method first checks the exchange for a declared key alias, and will fall back to the_statically-defined instance variable if no value is found in the exchange. This allows different_aliases / keys to be used for multiple-recipient messaging integration patterns such as CBR_or recipient list.;private void encryptAsymmetric(Exchange exchange, Document document, OutputStream stream) throws Exception {       _        String exchangeRecipientAlias = getRecipientKeyAlias(exchange)__        _        if (null == exchangeRecipientAlias) {_            throw new IllegalStateException("The  recipient's key alias must be defined for asymmetric key encryption.")__        }_        _        if (trustStore == null && null != this.keyOrTrustStoreParameters) {_            trustStore = keyOrTrustStoreParameters.createKeyStore()__            trustStorePassword = keyOrTrustStoreParameters.getPassword()__        }__        if (null == trustStore) {_            throw new IllegalStateException("A trust store must be defined for asymmetric key encryption.")__        }_        _        String password = _            this.keyPassword != null ? this.keyPassword : this.trustStorePassword__        Key keyEncryptionKey = getPublicKey(this.trustStore, exchangeRecipientAlias, password)__        _        if (null == keyEncryptionKey) {_            throw new IllegalStateException("No key for the alias [ " + exchangeRecipientAlias _                + " ] exists in " + "the configured trust store.")__        }_        _        Key dataEncryptionKey = generateDataEncryptionKey()__        _        XMLCipher keyCipher__        if (null != this.getKeyCipherAlgorithm()) {_            keyCipher = XMLCipher.getInstance(this.getKeyCipherAlgorithm(), null, digestAlgorithm)__        } else {_            keyCipher = XMLCipher.getInstance(XMLCipher.RSA_OAEP, null, digestAlgorithm)__        }_        _        keyCipher.init(XMLCipher.WRAP_MODE, keyEncryptionKey)__        encrypt(exchange, document, stream, dataEncryptionKey, keyCipher, keyEncryptionKey)__    };configure,the,public,key,for,the,asymmetric,key,wrap,algorithm,create,the,key,cipher,and,delegate,to,common,encryption,method,the,method,first,checks,the,exchange,for,a,declared,key,alias,and,will,fall,back,to,the,statically,defined,instance,variable,if,no,value,is,found,in,the,exchange,this,allows,different,aliases,keys,to,be,used,for,multiple,recipient,messaging,integration,patterns,such,as,cbr,or,recipient,list;private,void,encrypt,asymmetric,exchange,exchange,document,document,output,stream,stream,throws,exception,string,exchange,recipient,alias,get,recipient,key,alias,exchange,if,null,exchange,recipient,alias,throw,new,illegal,state,exception,the,recipient,s,key,alias,must,be,defined,for,asymmetric,key,encryption,if,trust,store,null,null,this,key,or,trust,store,parameters,trust,store,key,or,trust,store,parameters,create,key,store,trust,store,password,key,or,trust,store,parameters,get,password,if,null,trust,store,throw,new,illegal,state,exception,a,trust,store,must,be,defined,for,asymmetric,key,encryption,string,password,this,key,password,null,this,key,password,this,trust,store,password,key,key,encryption,key,get,public,key,this,trust,store,exchange,recipient,alias,password,if,null,key,encryption,key,throw,new,illegal,state,exception,no,key,for,the,alias,exchange,recipient,alias,exists,in,the,configured,trust,store,key,data,encryption,key,generate,data,encryption,key,xmlcipher,key,cipher,if,null,this,get,key,cipher,algorithm,key,cipher,xmlcipher,get,instance,this,get,key,cipher,algorithm,null,digest,algorithm,else,key,cipher,xmlcipher,get,instance,xmlcipher,null,digest,algorithm,key,cipher,init,xmlcipher,key,encryption,key,encrypt,exchange,document,stream,data,encryption,key,key,cipher,key,encryption,key
XMLSecurityDataFormat -> private void encryptAsymmetric(Exchange exchange, Document document, OutputStream stream) throws Exception;1445110748;Configure the public key for the asymmetric key wrap algorithm, create the key cipher, and delegate_to common encryption method.__The method first checks the exchange for a declared key alias, and will fall back to the_statically-defined instance variable if no value is found in the exchange. This allows different_aliases / keys to be used for multiple-recipient messaging integration patterns such as CBR_or recipient list.;private void encryptAsymmetric(Exchange exchange, Document document, OutputStream stream) throws Exception {       _        String exchangeRecipientAlias = getRecipientKeyAlias(exchange)__        _        if (null == exchangeRecipientAlias) {_            throw new IllegalStateException("The  recipient's key alias must be defined for asymmetric key encryption.")__        }_        _        if (trustStore == null && null != this.keyOrTrustStoreParameters) {_            trustStore = keyOrTrustStoreParameters.createKeyStore()__            trustStorePassword = keyOrTrustStoreParameters.getPassword()__        }__        if (null == trustStore) {_            throw new IllegalStateException("A trust store must be defined for asymmetric key encryption.")__        }_        _        String password = _            this.keyPassword != null ? this.keyPassword : this.trustStorePassword__        Key keyEncryptionKey = getPublicKey(this.trustStore, exchangeRecipientAlias, password)__        _        if (null == keyEncryptionKey) {_            throw new IllegalStateException("No key for the alias [ " + exchangeRecipientAlias _                + " ] exists in " + "the configured trust store.")__        }_        _        Key dataEncryptionKey = generateDataEncryptionKey()__        _        XMLCipher keyCipher__        if (null != this.getKeyCipherAlgorithm()) {_            keyCipher = XMLCipher.getInstance(this.getKeyCipherAlgorithm(), null, digestAlgorithm)__        } else {_            keyCipher = XMLCipher.getInstance(XMLCipher.RSA_OAEP, null, digestAlgorithm)__        }_        _        keyCipher.init(XMLCipher.WRAP_MODE, keyEncryptionKey)__        encrypt(exchange, document, stream, dataEncryptionKey, keyCipher, keyEncryptionKey)__    };configure,the,public,key,for,the,asymmetric,key,wrap,algorithm,create,the,key,cipher,and,delegate,to,common,encryption,method,the,method,first,checks,the,exchange,for,a,declared,key,alias,and,will,fall,back,to,the,statically,defined,instance,variable,if,no,value,is,found,in,the,exchange,this,allows,different,aliases,keys,to,be,used,for,multiple,recipient,messaging,integration,patterns,such,as,cbr,or,recipient,list;private,void,encrypt,asymmetric,exchange,exchange,document,document,output,stream,stream,throws,exception,string,exchange,recipient,alias,get,recipient,key,alias,exchange,if,null,exchange,recipient,alias,throw,new,illegal,state,exception,the,recipient,s,key,alias,must,be,defined,for,asymmetric,key,encryption,if,trust,store,null,null,this,key,or,trust,store,parameters,trust,store,key,or,trust,store,parameters,create,key,store,trust,store,password,key,or,trust,store,parameters,get,password,if,null,trust,store,throw,new,illegal,state,exception,a,trust,store,must,be,defined,for,asymmetric,key,encryption,string,password,this,key,password,null,this,key,password,this,trust,store,password,key,key,encryption,key,get,public,key,this,trust,store,exchange,recipient,alias,password,if,null,key,encryption,key,throw,new,illegal,state,exception,no,key,for,the,alias,exchange,recipient,alias,exists,in,the,configured,trust,store,key,data,encryption,key,generate,data,encryption,key,xmlcipher,key,cipher,if,null,this,get,key,cipher,algorithm,key,cipher,xmlcipher,get,instance,this,get,key,cipher,algorithm,null,digest,algorithm,else,key,cipher,xmlcipher,get,instance,xmlcipher,null,digest,algorithm,key,cipher,init,xmlcipher,key,encryption,key,encrypt,exchange,document,stream,data,encryption,key,key,cipher,key,encryption,key
XMLSecurityDataFormat -> private void encryptAsymmetric(Exchange exchange, Document document, OutputStream stream) throws Exception;1518772634;Configure the public key for the asymmetric key wrap algorithm, create the key cipher, and delegate_to common encryption method.__The method first checks the exchange for a declared key alias, and will fall back to the_statically-defined instance variable if no value is found in the exchange. This allows different_aliases / keys to be used for multiple-recipient messaging integration patterns such as CBR_or recipient list.;private void encryptAsymmetric(Exchange exchange, Document document, OutputStream stream) throws Exception {       _        String exchangeRecipientAlias = getRecipientKeyAlias(exchange)__        _        if (null == exchangeRecipientAlias) {_            throw new IllegalStateException("The  recipient's key alias must be defined for asymmetric key encryption.")__        }_        _        if (trustStore == null && null != this.keyOrTrustStoreParameters) {_            trustStore = keyOrTrustStoreParameters.createKeyStore()__            trustStorePassword = keyOrTrustStoreParameters.getPassword()__        }__        if (null == trustStore) {_            throw new IllegalStateException("A trust store must be defined for asymmetric key encryption.")__        }_        _        String password = _            this.keyPassword != null ? this.keyPassword : this.trustStorePassword__        Key keyEncryptionKey = getPublicKey(this.trustStore, exchangeRecipientAlias, password)__        _        if (null == keyEncryptionKey) {_            throw new IllegalStateException("No key for the alias [ " + exchangeRecipientAlias _                + " ] exists in " + "the configured trust store.")__        }_        _        Key dataEncryptionKey = generateDataEncryptionKey()__        _        XMLCipher keyCipher__        if (null != this.getKeyCipherAlgorithm()) {_            keyCipher = XMLCipher.getInstance(this.getKeyCipherAlgorithm(), null, digestAlgorithm)__        } else {_            keyCipher = XMLCipher.getInstance(XMLCipher.RSA_OAEP, null, digestAlgorithm)__        }_        _        keyCipher.init(XMLCipher.WRAP_MODE, keyEncryptionKey)__        encrypt(exchange, document, stream, dataEncryptionKey, keyCipher, keyEncryptionKey)__    };configure,the,public,key,for,the,asymmetric,key,wrap,algorithm,create,the,key,cipher,and,delegate,to,common,encryption,method,the,method,first,checks,the,exchange,for,a,declared,key,alias,and,will,fall,back,to,the,statically,defined,instance,variable,if,no,value,is,found,in,the,exchange,this,allows,different,aliases,keys,to,be,used,for,multiple,recipient,messaging,integration,patterns,such,as,cbr,or,recipient,list;private,void,encrypt,asymmetric,exchange,exchange,document,document,output,stream,stream,throws,exception,string,exchange,recipient,alias,get,recipient,key,alias,exchange,if,null,exchange,recipient,alias,throw,new,illegal,state,exception,the,recipient,s,key,alias,must,be,defined,for,asymmetric,key,encryption,if,trust,store,null,null,this,key,or,trust,store,parameters,trust,store,key,or,trust,store,parameters,create,key,store,trust,store,password,key,or,trust,store,parameters,get,password,if,null,trust,store,throw,new,illegal,state,exception,a,trust,store,must,be,defined,for,asymmetric,key,encryption,string,password,this,key,password,null,this,key,password,this,trust,store,password,key,key,encryption,key,get,public,key,this,trust,store,exchange,recipient,alias,password,if,null,key,encryption,key,throw,new,illegal,state,exception,no,key,for,the,alias,exchange,recipient,alias,exists,in,the,configured,trust,store,key,data,encryption,key,generate,data,encryption,key,xmlcipher,key,cipher,if,null,this,get,key,cipher,algorithm,key,cipher,xmlcipher,get,instance,this,get,key,cipher,algorithm,null,digest,algorithm,else,key,cipher,xmlcipher,get,instance,xmlcipher,null,digest,algorithm,key,cipher,init,xmlcipher,key,encryption,key,encrypt,exchange,document,stream,data,encryption,key,key,cipher,key,encryption,key
XMLSecurityDataFormat -> private void encryptAsymmetric(Exchange exchange, Document document, OutputStream stream) throws Exception;1532430683;Configure the public key for the asymmetric key wrap algorithm, create the key cipher, and delegate_to common encryption method.__The method first checks the exchange for a declared key alias, and will fall back to the_statically-defined instance variable if no value is found in the exchange. This allows different_aliases / keys to be used for multiple-recipient messaging integration patterns such as CBR_or recipient list.;private void encryptAsymmetric(Exchange exchange, Document document, OutputStream stream) throws Exception {       _        String exchangeRecipientAlias = getRecipientKeyAlias(exchange)__        _        if (null == exchangeRecipientAlias) {_            throw new IllegalStateException("The  recipient's key alias must be defined for asymmetric key encryption.")__        }_        _        if (trustStore == null && null != this.keyOrTrustStoreParameters) {_            trustStore = keyOrTrustStoreParameters.createKeyStore()__            trustStorePassword = keyOrTrustStoreParameters.getPassword()__        }__        if (null == trustStore) {_            throw new IllegalStateException("A trust store must be defined for asymmetric key encryption.")__        }_        _        String password = _            this.keyPassword != null ? this.keyPassword : this.trustStorePassword__        Key keyEncryptionKey = getPublicKey(this.trustStore, exchangeRecipientAlias, password)__        _        if (null == keyEncryptionKey) {_            throw new IllegalStateException("No key for the alias [ " + exchangeRecipientAlias _                + " ] exists in " + "the configured trust store.")__        }_        _        Key dataEncryptionKey = generateDataEncryptionKey()__        _        XMLCipher keyCipher__        if (null != this.getKeyCipherAlgorithm()) {_            keyCipher = XMLCipher.getInstance(this.getKeyCipherAlgorithm(), null, digestAlgorithm)__        } else {_            keyCipher = XMLCipher.getInstance(XMLCipher.RSA_OAEP, null, digestAlgorithm)__        }_        _        keyCipher.init(XMLCipher.WRAP_MODE, keyEncryptionKey)__        encrypt(exchange, document, stream, dataEncryptionKey, keyCipher, keyEncryptionKey)__    };configure,the,public,key,for,the,asymmetric,key,wrap,algorithm,create,the,key,cipher,and,delegate,to,common,encryption,method,the,method,first,checks,the,exchange,for,a,declared,key,alias,and,will,fall,back,to,the,statically,defined,instance,variable,if,no,value,is,found,in,the,exchange,this,allows,different,aliases,keys,to,be,used,for,multiple,recipient,messaging,integration,patterns,such,as,cbr,or,recipient,list;private,void,encrypt,asymmetric,exchange,exchange,document,document,output,stream,stream,throws,exception,string,exchange,recipient,alias,get,recipient,key,alias,exchange,if,null,exchange,recipient,alias,throw,new,illegal,state,exception,the,recipient,s,key,alias,must,be,defined,for,asymmetric,key,encryption,if,trust,store,null,null,this,key,or,trust,store,parameters,trust,store,key,or,trust,store,parameters,create,key,store,trust,store,password,key,or,trust,store,parameters,get,password,if,null,trust,store,throw,new,illegal,state,exception,a,trust,store,must,be,defined,for,asymmetric,key,encryption,string,password,this,key,password,null,this,key,password,this,trust,store,password,key,key,encryption,key,get,public,key,this,trust,store,exchange,recipient,alias,password,if,null,key,encryption,key,throw,new,illegal,state,exception,no,key,for,the,alias,exchange,recipient,alias,exists,in,the,configured,trust,store,key,data,encryption,key,generate,data,encryption,key,xmlcipher,key,cipher,if,null,this,get,key,cipher,algorithm,key,cipher,xmlcipher,get,instance,this,get,key,cipher,algorithm,null,digest,algorithm,else,key,cipher,xmlcipher,get,instance,xmlcipher,null,digest,algorithm,key,cipher,init,xmlcipher,key,encryption,key,encrypt,exchange,document,stream,data,encryption,key,key,cipher,key,encryption,key
XMLSecurityDataFormat -> private void encryptAsymmetric(Exchange exchange, Document document, OutputStream stream) throws Exception;1537290824;Configure the public key for the asymmetric key wrap algorithm, create the key cipher, and delegate_to common encryption method.__The method first checks the exchange for a declared key alias, and will fall back to the_statically-defined instance variable if no value is found in the exchange. This allows different_aliases / keys to be used for multiple-recipient messaging integration patterns such as CBR_or recipient list.;private void encryptAsymmetric(Exchange exchange, Document document, OutputStream stream) throws Exception {       _        String exchangeRecipientAlias = getRecipientKeyAlias(exchange)__        _        if (null == exchangeRecipientAlias) {_            throw new IllegalStateException("The  recipient's key alias must be defined for asymmetric key encryption.")__        }_        _        if (trustStore == null && null != this.keyOrTrustStoreParameters) {_            trustStore = keyOrTrustStoreParameters.createKeyStore()__            trustStorePassword = keyOrTrustStoreParameters.getPassword()__        }__        if (null == trustStore) {_            throw new IllegalStateException("A trust store must be defined for asymmetric key encryption.")__        }_        _        String password = _            this.keyPassword != null ? this.keyPassword : this.trustStorePassword__        Key keyEncryptionKey = getPublicKey(this.trustStore, exchangeRecipientAlias, password)__        _        if (null == keyEncryptionKey) {_            throw new IllegalStateException("No key for the alias [ " + exchangeRecipientAlias _                + " ] exists in " + "the configured trust store.")__        }_        _        Key dataEncryptionKey = generateDataEncryptionKey()__        _        XMLCipher keyCipher__        if (null != this.getKeyCipherAlgorithm()) {_            keyCipher = XMLCipher.getInstance(this.getKeyCipherAlgorithm(), null, digestAlgorithm)__        } else {_            keyCipher = XMLCipher.getInstance(XMLCipher.RSA_OAEP, null, digestAlgorithm)__        }_        _        keyCipher.init(XMLCipher.WRAP_MODE, keyEncryptionKey)__        encrypt(exchange, document, stream, dataEncryptionKey, keyCipher, keyEncryptionKey)__    };configure,the,public,key,for,the,asymmetric,key,wrap,algorithm,create,the,key,cipher,and,delegate,to,common,encryption,method,the,method,first,checks,the,exchange,for,a,declared,key,alias,and,will,fall,back,to,the,statically,defined,instance,variable,if,no,value,is,found,in,the,exchange,this,allows,different,aliases,keys,to,be,used,for,multiple,recipient,messaging,integration,patterns,such,as,cbr,or,recipient,list;private,void,encrypt,asymmetric,exchange,exchange,document,document,output,stream,stream,throws,exception,string,exchange,recipient,alias,get,recipient,key,alias,exchange,if,null,exchange,recipient,alias,throw,new,illegal,state,exception,the,recipient,s,key,alias,must,be,defined,for,asymmetric,key,encryption,if,trust,store,null,null,this,key,or,trust,store,parameters,trust,store,key,or,trust,store,parameters,create,key,store,trust,store,password,key,or,trust,store,parameters,get,password,if,null,trust,store,throw,new,illegal,state,exception,a,trust,store,must,be,defined,for,asymmetric,key,encryption,string,password,this,key,password,null,this,key,password,this,trust,store,password,key,key,encryption,key,get,public,key,this,trust,store,exchange,recipient,alias,password,if,null,key,encryption,key,throw,new,illegal,state,exception,no,key,for,the,alias,exchange,recipient,alias,exists,in,the,configured,trust,store,key,data,encryption,key,generate,data,encryption,key,xmlcipher,key,cipher,if,null,this,get,key,cipher,algorithm,key,cipher,xmlcipher,get,instance,this,get,key,cipher,algorithm,null,digest,algorithm,else,key,cipher,xmlcipher,get,instance,xmlcipher,null,digest,algorithm,key,cipher,init,xmlcipher,key,encryption,key,encrypt,exchange,document,stream,data,encryption,key,key,cipher,key,encryption,key
XMLSecurityDataFormat -> private void encryptAsymmetric(Exchange exchange, Document document, OutputStream stream) throws Exception;1540108158;Configure the public key for the asymmetric key wrap algorithm, create the key cipher, and delegate_to common encryption method.__The method first checks the exchange for a declared key alias, and will fall back to the_statically-defined instance variable if no value is found in the exchange. This allows different_aliases / keys to be used for multiple-recipient messaging integration patterns such as CBR_or recipient list.;private void encryptAsymmetric(Exchange exchange, Document document, OutputStream stream) throws Exception {       _        String exchangeRecipientAlias = getRecipientKeyAlias(exchange)__        _        if (null == exchangeRecipientAlias) {_            throw new IllegalStateException("The  recipient's key alias must be defined for asymmetric key encryption.")__        }_        _        if (trustStore == null && null != this.keyOrTrustStoreParameters) {_            trustStore = keyOrTrustStoreParameters.createKeyStore()__            trustStorePassword = keyOrTrustStoreParameters.getPassword()__        }__        if (null == trustStore) {_            throw new IllegalStateException("A trust store must be defined for asymmetric key encryption.")__        }_        _        String password = _            this.keyPassword != null ? this.keyPassword : this.trustStorePassword__        Key keyEncryptionKey = getPublicKey(this.trustStore, exchangeRecipientAlias, password)__        _        if (null == keyEncryptionKey) {_            throw new IllegalStateException("No key for the alias [ " + exchangeRecipientAlias _                + " ] exists in " + "the configured trust store.")__        }_        _        Key dataEncryptionKey = generateDataEncryptionKey()__        _        XMLCipher keyCipher__        if (null != this.getKeyCipherAlgorithm()) {_            keyCipher = XMLCipher.getInstance(this.getKeyCipherAlgorithm(), null, digestAlgorithm)__        } else {_            keyCipher = XMLCipher.getInstance(XMLCipher.RSA_OAEP, null, digestAlgorithm)__        }_        _        keyCipher.init(XMLCipher.WRAP_MODE, keyEncryptionKey)__        encrypt(exchange, document, stream, dataEncryptionKey, keyCipher, keyEncryptionKey)__    };configure,the,public,key,for,the,asymmetric,key,wrap,algorithm,create,the,key,cipher,and,delegate,to,common,encryption,method,the,method,first,checks,the,exchange,for,a,declared,key,alias,and,will,fall,back,to,the,statically,defined,instance,variable,if,no,value,is,found,in,the,exchange,this,allows,different,aliases,keys,to,be,used,for,multiple,recipient,messaging,integration,patterns,such,as,cbr,or,recipient,list;private,void,encrypt,asymmetric,exchange,exchange,document,document,output,stream,stream,throws,exception,string,exchange,recipient,alias,get,recipient,key,alias,exchange,if,null,exchange,recipient,alias,throw,new,illegal,state,exception,the,recipient,s,key,alias,must,be,defined,for,asymmetric,key,encryption,if,trust,store,null,null,this,key,or,trust,store,parameters,trust,store,key,or,trust,store,parameters,create,key,store,trust,store,password,key,or,trust,store,parameters,get,password,if,null,trust,store,throw,new,illegal,state,exception,a,trust,store,must,be,defined,for,asymmetric,key,encryption,string,password,this,key,password,null,this,key,password,this,trust,store,password,key,key,encryption,key,get,public,key,this,trust,store,exchange,recipient,alias,password,if,null,key,encryption,key,throw,new,illegal,state,exception,no,key,for,the,alias,exchange,recipient,alias,exists,in,the,configured,trust,store,key,data,encryption,key,generate,data,encryption,key,xmlcipher,key,cipher,if,null,this,get,key,cipher,algorithm,key,cipher,xmlcipher,get,instance,this,get,key,cipher,algorithm,null,digest,algorithm,else,key,cipher,xmlcipher,get,instance,xmlcipher,null,digest,algorithm,key,cipher,init,xmlcipher,key,encryption,key,encrypt,exchange,document,stream,data,encryption,key,key,cipher,key,encryption,key
XMLSecurityDataFormat -> private void encryptAsymmetric(Exchange exchange, Document document, OutputStream stream) throws Exception;1540108158;Configure the public key for the asymmetric key wrap algorithm, create the key cipher, and delegate_to common encryption method.__The method first checks the exchange for a declared key alias, and will fall back to the_statically-defined instance variable if no value is found in the exchange. This allows different_aliases / keys to be used for multiple-recipient messaging integration patterns such as CBR_or recipient list.;private void encryptAsymmetric(Exchange exchange, Document document, OutputStream stream) throws Exception {       _        String exchangeRecipientAlias = getRecipientKeyAlias()__        _        if (null == exchangeRecipientAlias) {_            throw new IllegalStateException("The  recipient's key alias must be defined for asymmetric key encryption.")__        }_        _        if (trustStore == null && null != this.keyOrTrustStoreParameters) {_            trustStore = keyOrTrustStoreParameters.createKeyStore()__            trustStorePassword = keyOrTrustStoreParameters.getPassword()__        }__        if (null == trustStore) {_            throw new IllegalStateException("A trust store must be defined for asymmetric key encryption.")__        }_        _        String password = _            this.keyPassword != null ? this.keyPassword : this.trustStorePassword__        Key keyEncryptionKey = getPublicKey(this.trustStore, exchangeRecipientAlias, password)__        _        if (null == keyEncryptionKey) {_            throw new IllegalStateException("No key for the alias [ " + exchangeRecipientAlias _                + " ] exists in " + "the configured trust store.")__        }_        _        Key dataEncryptionKey = generateDataEncryptionKey()__        _        XMLCipher keyCipher__        if (null != this.getKeyCipherAlgorithm()) {_            keyCipher = XMLCipher.getInstance(this.getKeyCipherAlgorithm(), null, digestAlgorithm)__        } else {_            keyCipher = XMLCipher.getInstance(XMLCipher.RSA_OAEP, null, digestAlgorithm)__        }_        _        keyCipher.init(XMLCipher.WRAP_MODE, keyEncryptionKey)__        encrypt(exchange, document, stream, dataEncryptionKey, keyCipher, keyEncryptionKey)__    };configure,the,public,key,for,the,asymmetric,key,wrap,algorithm,create,the,key,cipher,and,delegate,to,common,encryption,method,the,method,first,checks,the,exchange,for,a,declared,key,alias,and,will,fall,back,to,the,statically,defined,instance,variable,if,no,value,is,found,in,the,exchange,this,allows,different,aliases,keys,to,be,used,for,multiple,recipient,messaging,integration,patterns,such,as,cbr,or,recipient,list;private,void,encrypt,asymmetric,exchange,exchange,document,document,output,stream,stream,throws,exception,string,exchange,recipient,alias,get,recipient,key,alias,if,null,exchange,recipient,alias,throw,new,illegal,state,exception,the,recipient,s,key,alias,must,be,defined,for,asymmetric,key,encryption,if,trust,store,null,null,this,key,or,trust,store,parameters,trust,store,key,or,trust,store,parameters,create,key,store,trust,store,password,key,or,trust,store,parameters,get,password,if,null,trust,store,throw,new,illegal,state,exception,a,trust,store,must,be,defined,for,asymmetric,key,encryption,string,password,this,key,password,null,this,key,password,this,trust,store,password,key,key,encryption,key,get,public,key,this,trust,store,exchange,recipient,alias,password,if,null,key,encryption,key,throw,new,illegal,state,exception,no,key,for,the,alias,exchange,recipient,alias,exists,in,the,configured,trust,store,key,data,encryption,key,generate,data,encryption,key,xmlcipher,key,cipher,if,null,this,get,key,cipher,algorithm,key,cipher,xmlcipher,get,instance,this,get,key,cipher,algorithm,null,digest,algorithm,else,key,cipher,xmlcipher,get,instance,xmlcipher,null,digest,algorithm,key,cipher,init,xmlcipher,key,encryption,key,encrypt,exchange,document,stream,data,encryption,key,key,cipher,key,encryption,key
XMLSecurityDataFormat -> private void encryptAsymmetric(Exchange exchange, Document document, OutputStream stream) throws Exception;1540108163;Configure the public key for the asymmetric key wrap algorithm, create the key cipher, and delegate_to common encryption method.__The method first checks the exchange for a declared key alias, and will fall back to the_statically-defined instance variable if no value is found in the exchange. This allows different_aliases / keys to be used for multiple-recipient messaging integration patterns such as CBR_or recipient list.;private void encryptAsymmetric(Exchange exchange, Document document, OutputStream stream) throws Exception {       _        String exchangeRecipientAlias = getRecipientKeyAlias()__        _        if (null == exchangeRecipientAlias) {_            throw new IllegalStateException("The  recipient's key alias must be defined for asymmetric key encryption.")__        }_        _        if (trustStore == null && null != this.keyOrTrustStoreParameters) {_            trustStore = keyOrTrustStoreParameters.createKeyStore()__            trustStorePassword = keyOrTrustStoreParameters.getPassword()__        }__        if (null == trustStore) {_            throw new IllegalStateException("A trust store must be defined for asymmetric key encryption.")__        }_        _        String password = _            this.keyPassword != null ? this.keyPassword : this.trustStorePassword__        Key keyEncryptionKey = getPublicKey(this.trustStore, exchangeRecipientAlias, password)__        _        if (null == keyEncryptionKey) {_            throw new IllegalStateException("No key for the alias [ " + exchangeRecipientAlias _                + " ] exists in " + "the configured trust store.")__        }_        _        Key dataEncryptionKey = generateDataEncryptionKey()__        _        XMLCipher keyCipher__        if (null != this.getKeyCipherAlgorithm()) {_            keyCipher = XMLCipher.getInstance(this.getKeyCipherAlgorithm(), null, digestAlgorithm)__        } else {_            keyCipher = XMLCipher.getInstance(XMLCipher.RSA_OAEP, null, digestAlgorithm)__        }_        _        keyCipher.init(XMLCipher.WRAP_MODE, keyEncryptionKey)__        encrypt(exchange, document, stream, dataEncryptionKey, keyCipher, keyEncryptionKey)__    };configure,the,public,key,for,the,asymmetric,key,wrap,algorithm,create,the,key,cipher,and,delegate,to,common,encryption,method,the,method,first,checks,the,exchange,for,a,declared,key,alias,and,will,fall,back,to,the,statically,defined,instance,variable,if,no,value,is,found,in,the,exchange,this,allows,different,aliases,keys,to,be,used,for,multiple,recipient,messaging,integration,patterns,such,as,cbr,or,recipient,list;private,void,encrypt,asymmetric,exchange,exchange,document,document,output,stream,stream,throws,exception,string,exchange,recipient,alias,get,recipient,key,alias,if,null,exchange,recipient,alias,throw,new,illegal,state,exception,the,recipient,s,key,alias,must,be,defined,for,asymmetric,key,encryption,if,trust,store,null,null,this,key,or,trust,store,parameters,trust,store,key,or,trust,store,parameters,create,key,store,trust,store,password,key,or,trust,store,parameters,get,password,if,null,trust,store,throw,new,illegal,state,exception,a,trust,store,must,be,defined,for,asymmetric,key,encryption,string,password,this,key,password,null,this,key,password,this,trust,store,password,key,key,encryption,key,get,public,key,this,trust,store,exchange,recipient,alias,password,if,null,key,encryption,key,throw,new,illegal,state,exception,no,key,for,the,alias,exchange,recipient,alias,exists,in,the,configured,trust,store,key,data,encryption,key,generate,data,encryption,key,xmlcipher,key,cipher,if,null,this,get,key,cipher,algorithm,key,cipher,xmlcipher,get,instance,this,get,key,cipher,algorithm,null,digest,algorithm,else,key,cipher,xmlcipher,get,instance,xmlcipher,null,digest,algorithm,key,cipher,init,xmlcipher,key,encryption,key,encrypt,exchange,document,stream,data,encryption,key,key,cipher,key,encryption,key
XMLSecurityDataFormat -> private void encryptAsymmetric(Exchange exchange, Document document, OutputStream stream) throws Exception;1545056693;Configure the public key for the asymmetric key wrap algorithm, create the key cipher, and delegate_to common encryption method.__The method first checks the exchange for a declared key alias, and will fall back to the_statically-defined instance variable if no value is found in the exchange. This allows different_aliases / keys to be used for multiple-recipient messaging integration patterns such as CBR_or recipient list.;private void encryptAsymmetric(Exchange exchange, Document document, OutputStream stream) throws Exception {       _        String exchangeRecipientAlias = getRecipientKeyAlias()__        _        if (null == exchangeRecipientAlias) {_            throw new IllegalStateException("The  recipient's key alias must be defined for asymmetric key encryption.")__        }_        _        if (trustStore == null && null != this.keyOrTrustStoreParameters) {_            trustStore = keyOrTrustStoreParameters.createKeyStore()__            trustStorePassword = keyOrTrustStoreParameters.getPassword()__        }__        if (null == trustStore) {_            throw new IllegalStateException("A trust store must be defined for asymmetric key encryption.")__        }_        _        String password = _            this.keyPassword != null ? this.keyPassword : this.trustStorePassword__        Key keyEncryptionKey = getPublicKey(this.trustStore, exchangeRecipientAlias, password)__        _        if (null == keyEncryptionKey) {_            throw new IllegalStateException("No key for the alias [ " + exchangeRecipientAlias _                + " ] exists in " + "the configured trust store.")__        }_        _        Key dataEncryptionKey = generateDataEncryptionKey()__        _        XMLCipher keyCipher__        if (null != this.getKeyCipherAlgorithm()) {_            keyCipher = XMLCipher.getInstance(this.getKeyCipherAlgorithm(), null, digestAlgorithm)__        } else {_            keyCipher = XMLCipher.getInstance(XMLCipher.RSA_OAEP, null, digestAlgorithm)__        }_        _        keyCipher.init(XMLCipher.WRAP_MODE, keyEncryptionKey)__        encrypt(exchange, document, stream, dataEncryptionKey, keyCipher, keyEncryptionKey)__    };configure,the,public,key,for,the,asymmetric,key,wrap,algorithm,create,the,key,cipher,and,delegate,to,common,encryption,method,the,method,first,checks,the,exchange,for,a,declared,key,alias,and,will,fall,back,to,the,statically,defined,instance,variable,if,no,value,is,found,in,the,exchange,this,allows,different,aliases,keys,to,be,used,for,multiple,recipient,messaging,integration,patterns,such,as,cbr,or,recipient,list;private,void,encrypt,asymmetric,exchange,exchange,document,document,output,stream,stream,throws,exception,string,exchange,recipient,alias,get,recipient,key,alias,if,null,exchange,recipient,alias,throw,new,illegal,state,exception,the,recipient,s,key,alias,must,be,defined,for,asymmetric,key,encryption,if,trust,store,null,null,this,key,or,trust,store,parameters,trust,store,key,or,trust,store,parameters,create,key,store,trust,store,password,key,or,trust,store,parameters,get,password,if,null,trust,store,throw,new,illegal,state,exception,a,trust,store,must,be,defined,for,asymmetric,key,encryption,string,password,this,key,password,null,this,key,password,this,trust,store,password,key,key,encryption,key,get,public,key,this,trust,store,exchange,recipient,alias,password,if,null,key,encryption,key,throw,new,illegal,state,exception,no,key,for,the,alias,exchange,recipient,alias,exists,in,the,configured,trust,store,key,data,encryption,key,generate,data,encryption,key,xmlcipher,key,cipher,if,null,this,get,key,cipher,algorithm,key,cipher,xmlcipher,get,instance,this,get,key,cipher,algorithm,null,digest,algorithm,else,key,cipher,xmlcipher,get,instance,xmlcipher,null,digest,algorithm,key,cipher,init,xmlcipher,key,encryption,key,encrypt,exchange,document,stream,data,encryption,key,key,cipher,key,encryption,key
XMLSecurityDataFormat -> private void encryptAsymmetric(Exchange exchange, Document document, OutputStream stream) throws Exception;1545203860;Configure the public key for the asymmetric key wrap algorithm, create the key cipher, and delegate_to common encryption method.__The method first checks the exchange for a declared key alias, and will fall back to the_statically-defined instance variable if no value is found in the exchange. This allows different_aliases / keys to be used for multiple-recipient messaging integration patterns such as CBR_or recipient list.;private void encryptAsymmetric(Exchange exchange, Document document, OutputStream stream) throws Exception {       _        String exchangeRecipientAlias = getRecipientKeyAlias()__        _        if (null == exchangeRecipientAlias) {_            throw new IllegalStateException("The  recipient's key alias must be defined for asymmetric key encryption.")__        }_        _        if (trustStore == null && null != this.keyOrTrustStoreParameters) {_            trustStore = keyOrTrustStoreParameters.createKeyStore()__            trustStorePassword = keyOrTrustStoreParameters.getPassword()__        }__        if (null == trustStore) {_            throw new IllegalStateException("A trust store must be defined for asymmetric key encryption.")__        }_        _        String password = _            this.keyPassword != null ? this.keyPassword : this.trustStorePassword__        Key keyEncryptionKey = getPublicKey(this.trustStore, exchangeRecipientAlias, password)__        _        if (null == keyEncryptionKey) {_            throw new IllegalStateException("No key for the alias [ " + exchangeRecipientAlias _                + " ] exists in " + "the configured trust store.")__        }_        _        SecretKey dataEncryptionKey = generateDataEncryptionKey()__        _        XMLCipher keyCipher__        if (null != this.getKeyCipherAlgorithm()) {_            keyCipher = XMLCipher.getInstance(this.getKeyCipherAlgorithm(), null, digestAlgorithm)__        } else {_            keyCipher = XMLCipher.getInstance(XMLCipher.RSA_OAEP, null, digestAlgorithm)__        }__        keyCipher.init(XMLCipher.WRAP_MODE, keyEncryptionKey)__        encrypt(exchange, document, stream, dataEncryptionKey, keyCipher, keyEncryptionKey)___        _        try {_            dataEncryptionKey.destroy()__        } catch (javax.security.auth.DestroyFailedException ex) {_            LOG.debug("Error destroying key: {}", ex.getMessage())__        }_    };configure,the,public,key,for,the,asymmetric,key,wrap,algorithm,create,the,key,cipher,and,delegate,to,common,encryption,method,the,method,first,checks,the,exchange,for,a,declared,key,alias,and,will,fall,back,to,the,statically,defined,instance,variable,if,no,value,is,found,in,the,exchange,this,allows,different,aliases,keys,to,be,used,for,multiple,recipient,messaging,integration,patterns,such,as,cbr,or,recipient,list;private,void,encrypt,asymmetric,exchange,exchange,document,document,output,stream,stream,throws,exception,string,exchange,recipient,alias,get,recipient,key,alias,if,null,exchange,recipient,alias,throw,new,illegal,state,exception,the,recipient,s,key,alias,must,be,defined,for,asymmetric,key,encryption,if,trust,store,null,null,this,key,or,trust,store,parameters,trust,store,key,or,trust,store,parameters,create,key,store,trust,store,password,key,or,trust,store,parameters,get,password,if,null,trust,store,throw,new,illegal,state,exception,a,trust,store,must,be,defined,for,asymmetric,key,encryption,string,password,this,key,password,null,this,key,password,this,trust,store,password,key,key,encryption,key,get,public,key,this,trust,store,exchange,recipient,alias,password,if,null,key,encryption,key,throw,new,illegal,state,exception,no,key,for,the,alias,exchange,recipient,alias,exists,in,the,configured,trust,store,secret,key,data,encryption,key,generate,data,encryption,key,xmlcipher,key,cipher,if,null,this,get,key,cipher,algorithm,key,cipher,xmlcipher,get,instance,this,get,key,cipher,algorithm,null,digest,algorithm,else,key,cipher,xmlcipher,get,instance,xmlcipher,null,digest,algorithm,key,cipher,init,xmlcipher,key,encryption,key,encrypt,exchange,document,stream,data,encryption,key,key,cipher,key,encryption,key,try,data,encryption,key,destroy,catch,javax,security,auth,destroy,failed,exception,ex,log,debug,error,destroying,key,ex,get,message
XMLSecurityDataFormat -> private void encryptAsymmetric(Exchange exchange, Document document, OutputStream stream) throws Exception;1547241305;Configure the public key for the asymmetric key wrap algorithm, create the key cipher, and delegate_to common encryption method.__The method first checks the exchange for a declared key alias, and will fall back to the_statically-defined instance variable if no value is found in the exchange. This allows different_aliases / keys to be used for multiple-recipient messaging integration patterns such as CBR_or recipient list.;private void encryptAsymmetric(Exchange exchange, Document document, OutputStream stream) throws Exception {       _        String exchangeRecipientAlias = getRecipientKeyAlias()__        _        if (null == exchangeRecipientAlias) {_            throw new IllegalStateException("The  recipient's key alias must be defined for asymmetric key encryption.")__        }_        _        if (trustStore == null && null != this.keyOrTrustStoreParameters) {_            trustStore = keyOrTrustStoreParameters.createKeyStore()__            trustStorePassword = keyOrTrustStoreParameters.getPassword()__        }__        if (null == trustStore) {_            throw new IllegalStateException("A trust store must be defined for asymmetric key encryption.")__        }_        _        String password = _            this.keyPassword != null ? this.keyPassword : this.trustStorePassword__        Key keyEncryptionKey = getPublicKey(this.trustStore, exchangeRecipientAlias, password)__        _        if (null == keyEncryptionKey) {_            throw new IllegalStateException("No key for the alias [ " + exchangeRecipientAlias _                + " ] exists in " + "the configured trust store.")__        }_        _        SecretKey dataEncryptionKey = generateDataEncryptionKey()__        _        XMLCipher keyCipher__        if (null != this.getKeyCipherAlgorithm()) {_            keyCipher = XMLCipher.getInstance(this.getKeyCipherAlgorithm(), null, digestAlgorithm)__        } else {_            keyCipher = XMLCipher.getInstance(XMLCipher.RSA_OAEP, null, digestAlgorithm)__        }__        keyCipher.init(XMLCipher.WRAP_MODE, keyEncryptionKey)__        encrypt(exchange, document, stream, dataEncryptionKey, keyCipher, keyEncryptionKey)___        _        try {_            dataEncryptionKey.destroy()__        } catch (javax.security.auth.DestroyFailedException ex) {_            LOG.debug("Error destroying key: {}", ex.getMessage())__        }_    };configure,the,public,key,for,the,asymmetric,key,wrap,algorithm,create,the,key,cipher,and,delegate,to,common,encryption,method,the,method,first,checks,the,exchange,for,a,declared,key,alias,and,will,fall,back,to,the,statically,defined,instance,variable,if,no,value,is,found,in,the,exchange,this,allows,different,aliases,keys,to,be,used,for,multiple,recipient,messaging,integration,patterns,such,as,cbr,or,recipient,list;private,void,encrypt,asymmetric,exchange,exchange,document,document,output,stream,stream,throws,exception,string,exchange,recipient,alias,get,recipient,key,alias,if,null,exchange,recipient,alias,throw,new,illegal,state,exception,the,recipient,s,key,alias,must,be,defined,for,asymmetric,key,encryption,if,trust,store,null,null,this,key,or,trust,store,parameters,trust,store,key,or,trust,store,parameters,create,key,store,trust,store,password,key,or,trust,store,parameters,get,password,if,null,trust,store,throw,new,illegal,state,exception,a,trust,store,must,be,defined,for,asymmetric,key,encryption,string,password,this,key,password,null,this,key,password,this,trust,store,password,key,key,encryption,key,get,public,key,this,trust,store,exchange,recipient,alias,password,if,null,key,encryption,key,throw,new,illegal,state,exception,no,key,for,the,alias,exchange,recipient,alias,exists,in,the,configured,trust,store,secret,key,data,encryption,key,generate,data,encryption,key,xmlcipher,key,cipher,if,null,this,get,key,cipher,algorithm,key,cipher,xmlcipher,get,instance,this,get,key,cipher,algorithm,null,digest,algorithm,else,key,cipher,xmlcipher,get,instance,xmlcipher,null,digest,algorithm,key,cipher,init,xmlcipher,key,encryption,key,encrypt,exchange,document,stream,data,encryption,key,key,cipher,key,encryption,key,try,data,encryption,key,destroy,catch,javax,security,auth,destroy,failed,exception,ex,log,debug,error,destroying,key,ex,get,message
XMLSecurityDataFormat -> private void encryptAsymmetric(Exchange exchange, Document document, OutputStream stream) throws Exception;1548175645;Configure the public key for the asymmetric key wrap algorithm, create the key cipher, and delegate_to common encryption method.__The method first checks the exchange for a declared key alias, and will fall back to the_statically-defined instance variable if no value is found in the exchange. This allows different_aliases / keys to be used for multiple-recipient messaging integration patterns such as CBR_or recipient list.;private void encryptAsymmetric(Exchange exchange, Document document, OutputStream stream) throws Exception {       _        String exchangeRecipientAlias = getRecipientKeyAlias()__        _        if (null == exchangeRecipientAlias) {_            throw new IllegalStateException("The  recipient's key alias must be defined for asymmetric key encryption.")__        }_        _        if (trustStore == null && null != this.keyOrTrustStoreParameters) {_            trustStore = keyOrTrustStoreParameters.createKeyStore()__            trustStorePassword = keyOrTrustStoreParameters.getPassword()__        }__        if (null == trustStore) {_            throw new IllegalStateException("A trust store must be defined for asymmetric key encryption.")__        }_        _        String password = _            this.keyPassword != null ? this.keyPassword : this.trustStorePassword__        Key keyEncryptionKey = getPublicKey(this.trustStore, exchangeRecipientAlias, password)__        _        if (null == keyEncryptionKey) {_            throw new IllegalStateException("No key for the alias [ " + exchangeRecipientAlias _                + " ] exists in " + "the configured trust store.")__        }_        _        SecretKey dataEncryptionKey = generateDataEncryptionKey()__        _        XMLCipher keyCipher__        if (null != this.getKeyCipherAlgorithm()) {_            keyCipher = XMLCipher.getInstance(this.getKeyCipherAlgorithm(), null, digestAlgorithm)__        } else {_            keyCipher = XMLCipher.getInstance(XMLCipher.RSA_OAEP, null, digestAlgorithm)__        }__        keyCipher.init(XMLCipher.WRAP_MODE, keyEncryptionKey)__        encrypt(exchange, document, stream, dataEncryptionKey, keyCipher, keyEncryptionKey)___        _        try {_            dataEncryptionKey.destroy()__        } catch (javax.security.auth.DestroyFailedException ex) {_            LOG.debug("Error destroying key: {}", ex.getMessage())__        }_    };configure,the,public,key,for,the,asymmetric,key,wrap,algorithm,create,the,key,cipher,and,delegate,to,common,encryption,method,the,method,first,checks,the,exchange,for,a,declared,key,alias,and,will,fall,back,to,the,statically,defined,instance,variable,if,no,value,is,found,in,the,exchange,this,allows,different,aliases,keys,to,be,used,for,multiple,recipient,messaging,integration,patterns,such,as,cbr,or,recipient,list;private,void,encrypt,asymmetric,exchange,exchange,document,document,output,stream,stream,throws,exception,string,exchange,recipient,alias,get,recipient,key,alias,if,null,exchange,recipient,alias,throw,new,illegal,state,exception,the,recipient,s,key,alias,must,be,defined,for,asymmetric,key,encryption,if,trust,store,null,null,this,key,or,trust,store,parameters,trust,store,key,or,trust,store,parameters,create,key,store,trust,store,password,key,or,trust,store,parameters,get,password,if,null,trust,store,throw,new,illegal,state,exception,a,trust,store,must,be,defined,for,asymmetric,key,encryption,string,password,this,key,password,null,this,key,password,this,trust,store,password,key,key,encryption,key,get,public,key,this,trust,store,exchange,recipient,alias,password,if,null,key,encryption,key,throw,new,illegal,state,exception,no,key,for,the,alias,exchange,recipient,alias,exists,in,the,configured,trust,store,secret,key,data,encryption,key,generate,data,encryption,key,xmlcipher,key,cipher,if,null,this,get,key,cipher,algorithm,key,cipher,xmlcipher,get,instance,this,get,key,cipher,algorithm,null,digest,algorithm,else,key,cipher,xmlcipher,get,instance,xmlcipher,null,digest,algorithm,key,cipher,init,xmlcipher,key,encryption,key,encrypt,exchange,document,stream,data,encryption,key,key,cipher,key,encryption,key,try,data,encryption,key,destroy,catch,javax,security,auth,destroy,failed,exception,ex,log,debug,error,destroying,key,ex,get,message
XMLSecurityDataFormat -> private void encryptAsymmetric(Exchange exchange, Document document, OutputStream stream) throws Exception;1548666920;Configure the public key for the asymmetric key wrap algorithm, create the key cipher, and delegate_to common encryption method.__The method first checks the exchange for a declared key alias, and will fall back to the_statically-defined instance variable if no value is found in the exchange. This allows different_aliases / keys to be used for multiple-recipient messaging integration patterns such as CBR_or recipient list.;private void encryptAsymmetric(Exchange exchange, Document document, OutputStream stream) throws Exception {       _        String exchangeRecipientAlias = getRecipientKeyAlias()__        _        if (null == exchangeRecipientAlias) {_            throw new IllegalStateException("The  recipient's key alias must be defined for asymmetric key encryption.")__        }_        _        if (trustStore == null && null != this.keyOrTrustStoreParameters) {_            trustStore = keyOrTrustStoreParameters.createKeyStore()__            trustStorePassword = keyOrTrustStoreParameters.getPassword()__        }__        if (null == trustStore) {_            throw new IllegalStateException("A trust store must be defined for asymmetric key encryption.")__        }_        _        String password = _            this.keyPassword != null ? this.keyPassword : this.trustStorePassword__        Key keyEncryptionKey = getPublicKey(this.trustStore, exchangeRecipientAlias, password)__        _        if (null == keyEncryptionKey) {_            throw new IllegalStateException("No key for the alias [ " + exchangeRecipientAlias _                + " ] exists in " + "the configured trust store.")__        }_        _        SecretKey dataEncryptionKey = generateDataEncryptionKey()__        _        XMLCipher keyCipher__        if (null != this.getKeyCipherAlgorithm()) {_            keyCipher = XMLCipher.getInstance(this.getKeyCipherAlgorithm(), null, digestAlgorithm)__        } else {_            keyCipher = XMLCipher.getInstance(XMLCipher.RSA_OAEP, null, digestAlgorithm)__        }__        keyCipher.init(XMLCipher.WRAP_MODE, keyEncryptionKey)__        encrypt(exchange, document, stream, dataEncryptionKey, keyCipher, keyEncryptionKey)___        _        try {_            dataEncryptionKey.destroy()__        } catch (javax.security.auth.DestroyFailedException ex) {_            LOG.debug("Error destroying key: {}", ex.getMessage())__        }_    };configure,the,public,key,for,the,asymmetric,key,wrap,algorithm,create,the,key,cipher,and,delegate,to,common,encryption,method,the,method,first,checks,the,exchange,for,a,declared,key,alias,and,will,fall,back,to,the,statically,defined,instance,variable,if,no,value,is,found,in,the,exchange,this,allows,different,aliases,keys,to,be,used,for,multiple,recipient,messaging,integration,patterns,such,as,cbr,or,recipient,list;private,void,encrypt,asymmetric,exchange,exchange,document,document,output,stream,stream,throws,exception,string,exchange,recipient,alias,get,recipient,key,alias,if,null,exchange,recipient,alias,throw,new,illegal,state,exception,the,recipient,s,key,alias,must,be,defined,for,asymmetric,key,encryption,if,trust,store,null,null,this,key,or,trust,store,parameters,trust,store,key,or,trust,store,parameters,create,key,store,trust,store,password,key,or,trust,store,parameters,get,password,if,null,trust,store,throw,new,illegal,state,exception,a,trust,store,must,be,defined,for,asymmetric,key,encryption,string,password,this,key,password,null,this,key,password,this,trust,store,password,key,key,encryption,key,get,public,key,this,trust,store,exchange,recipient,alias,password,if,null,key,encryption,key,throw,new,illegal,state,exception,no,key,for,the,alias,exchange,recipient,alias,exists,in,the,configured,trust,store,secret,key,data,encryption,key,generate,data,encryption,key,xmlcipher,key,cipher,if,null,this,get,key,cipher,algorithm,key,cipher,xmlcipher,get,instance,this,get,key,cipher,algorithm,null,digest,algorithm,else,key,cipher,xmlcipher,get,instance,xmlcipher,null,digest,algorithm,key,cipher,init,xmlcipher,key,encryption,key,encrypt,exchange,document,stream,data,encryption,key,key,cipher,key,encryption,key,try,data,encryption,key,destroy,catch,javax,security,auth,destroy,failed,exception,ex,log,debug,error,destroying,key,ex,get,message
XMLSecurityDataFormat -> private void encryptAsymmetric(Exchange exchange, Document document, OutputStream stream) throws Exception;1549446874;Configure the public key for the asymmetric key wrap algorithm, create the key cipher, and delegate_to common encryption method.__The method first checks the exchange for a declared key alias, and will fall back to the_statically-defined instance variable if no value is found in the exchange. This allows different_aliases / keys to be used for multiple-recipient messaging integration patterns such as CBR_or recipient list.;private void encryptAsymmetric(Exchange exchange, Document document, OutputStream stream) throws Exception {       _        String exchangeRecipientAlias = getRecipientKeyAlias()__        _        if (null == exchangeRecipientAlias) {_            throw new IllegalStateException("The  recipient's key alias must be defined for asymmetric key encryption.")__        }_        _        if (trustStore == null && null != this.keyOrTrustStoreParameters) {_            trustStore = keyOrTrustStoreParameters.createKeyStore()__            trustStorePassword = keyOrTrustStoreParameters.getPassword()__        }__        if (null == trustStore) {_            throw new IllegalStateException("A trust store must be defined for asymmetric key encryption.")__        }_        _        String password = _            this.keyPassword != null ? this.keyPassword : this.trustStorePassword__        Key keyEncryptionKey = getPublicKey(this.trustStore, exchangeRecipientAlias, password)__        _        if (null == keyEncryptionKey) {_            throw new IllegalStateException("No key for the alias [ " + exchangeRecipientAlias _                + " ] exists in " + "the configured trust store.")__        }_        _        SecretKey dataEncryptionKey = generateDataEncryptionKey()__        _        XMLCipher keyCipher__        if (null != this.getKeyCipherAlgorithm()) {_            keyCipher = XMLCipher.getInstance(this.getKeyCipherAlgorithm(), null, digestAlgorithm)__        } else {_            keyCipher = XMLCipher.getInstance(XMLCipher.RSA_OAEP, null, digestAlgorithm)__        }__        keyCipher.init(XMLCipher.WRAP_MODE, keyEncryptionKey)__        encrypt(exchange, document, stream, dataEncryptionKey, keyCipher, keyEncryptionKey)___        _        try {_            dataEncryptionKey.destroy()__        } catch (javax.security.auth.DestroyFailedException ex) {_            LOG.debug("Error destroying key: {}", ex.getMessage())__        }_    };configure,the,public,key,for,the,asymmetric,key,wrap,algorithm,create,the,key,cipher,and,delegate,to,common,encryption,method,the,method,first,checks,the,exchange,for,a,declared,key,alias,and,will,fall,back,to,the,statically,defined,instance,variable,if,no,value,is,found,in,the,exchange,this,allows,different,aliases,keys,to,be,used,for,multiple,recipient,messaging,integration,patterns,such,as,cbr,or,recipient,list;private,void,encrypt,asymmetric,exchange,exchange,document,document,output,stream,stream,throws,exception,string,exchange,recipient,alias,get,recipient,key,alias,if,null,exchange,recipient,alias,throw,new,illegal,state,exception,the,recipient,s,key,alias,must,be,defined,for,asymmetric,key,encryption,if,trust,store,null,null,this,key,or,trust,store,parameters,trust,store,key,or,trust,store,parameters,create,key,store,trust,store,password,key,or,trust,store,parameters,get,password,if,null,trust,store,throw,new,illegal,state,exception,a,trust,store,must,be,defined,for,asymmetric,key,encryption,string,password,this,key,password,null,this,key,password,this,trust,store,password,key,key,encryption,key,get,public,key,this,trust,store,exchange,recipient,alias,password,if,null,key,encryption,key,throw,new,illegal,state,exception,no,key,for,the,alias,exchange,recipient,alias,exists,in,the,configured,trust,store,secret,key,data,encryption,key,generate,data,encryption,key,xmlcipher,key,cipher,if,null,this,get,key,cipher,algorithm,key,cipher,xmlcipher,get,instance,this,get,key,cipher,algorithm,null,digest,algorithm,else,key,cipher,xmlcipher,get,instance,xmlcipher,null,digest,algorithm,key,cipher,init,xmlcipher,key,encryption,key,encrypt,exchange,document,stream,data,encryption,key,key,cipher,key,encryption,key,try,data,encryption,key,destroy,catch,javax,security,auth,destroy,failed,exception,ex,log,debug,error,destroying,key,ex,get,message
