# id;timestamp;commentText;codeText;commentWords;codeWords
XmlSignatureHelper -> public static AlgorithmMethod getCanonicalizationMethod(String algorithm);1377611504;Returns a configuration for a canonicalization algorithm.__@param algorithm_algorithm URI_@return canonicalization_@throws IllegalArgumentException_if <tt>algorithm</tt> is <code>null</code>;public static AlgorithmMethod getCanonicalizationMethod(String algorithm) {_        return getCanonicalizationMethod(algorithm, null)__    };returns,a,configuration,for,a,canonicalization,algorithm,param,algorithm,algorithm,uri,return,canonicalization,throws,illegal,argument,exception,if,tt,algorithm,tt,is,code,null,code;public,static,algorithm,method,get,canonicalization,method,string,algorithm,return,get,canonicalization,method,algorithm,null
XmlSignatureHelper -> public static AlgorithmMethod getCanonicalizationMethod(String algorithm);1377611504;Returns a configuration for a canonicalization algorithm.__@param algorithm_algorithm URI_@return canonicalization_@throws IllegalArgumentException_if <tt>algorithm</tt> is <code>null</code>;public static AlgorithmMethod getCanonicalizationMethod(String algorithm) {_        return getCanonicalizationMethod(algorithm, null)__    };returns,a,configuration,for,a,canonicalization,algorithm,param,algorithm,algorithm,uri,return,canonicalization,throws,illegal,argument,exception,if,tt,algorithm,tt,is,code,null,code;public,static,algorithm,method,get,canonicalization,method,string,algorithm,return,get,canonicalization,method,algorithm,null
XmlSignatureHelper -> public static AlgorithmMethod getCanonicalizationMethod(String algorithm);1378890246;Returns a configuration for a canonicalization algorithm.__@param algorithm_algorithm URI_@return canonicalization_@throws IllegalArgumentException_if <tt>algorithm</tt> is <code>null</code>;public static AlgorithmMethod getCanonicalizationMethod(String algorithm) {_        return getCanonicalizationMethod(algorithm, null)__    };returns,a,configuration,for,a,canonicalization,algorithm,param,algorithm,algorithm,uri,return,canonicalization,throws,illegal,argument,exception,if,tt,algorithm,tt,is,code,null,code;public,static,algorithm,method,get,canonicalization,method,string,algorithm,return,get,canonicalization,method,algorithm,null
XmlSignatureHelper -> public static AlgorithmMethod getCanonicalizationMethod(String algorithm);1379267751;Returns a configuration for a canonicalization algorithm.__@param algorithm_algorithm URI_@return canonicalization_@throws IllegalArgumentException_if <tt>algorithm</tt> is <code>null</code>;public static AlgorithmMethod getCanonicalizationMethod(String algorithm) {_        return getCanonicalizationMethod(algorithm, null)__    };returns,a,configuration,for,a,canonicalization,algorithm,param,algorithm,algorithm,uri,return,canonicalization,throws,illegal,argument,exception,if,tt,algorithm,tt,is,code,null,code;public,static,algorithm,method,get,canonicalization,method,string,algorithm,return,get,canonicalization,method,algorithm,null
XmlSignatureHelper -> public static AlgorithmMethod getCanonicalizationMethod(String algorithm);1415211488;Returns a configuration for a canonicalization algorithm.__@param algorithm_algorithm URI_@return canonicalization_@throws IllegalArgumentException_if <tt>algorithm</tt> is <code>null</code>;public static AlgorithmMethod getCanonicalizationMethod(String algorithm) {_        return getCanonicalizationMethod(algorithm, null)__    };returns,a,configuration,for,a,canonicalization,algorithm,param,algorithm,algorithm,uri,return,canonicalization,throws,illegal,argument,exception,if,tt,algorithm,tt,is,code,null,code;public,static,algorithm,method,get,canonicalization,method,string,algorithm,return,get,canonicalization,method,algorithm,null
XmlSignatureHelper -> public static AlgorithmMethod getCanonicalizationMethod(String algorithm);1524063240;Returns a configuration for a canonicalization algorithm.__@param algorithm_algorithm URI_@return canonicalization_@throws IllegalArgumentException_if <tt>algorithm</tt> is <code>null</code>;public static AlgorithmMethod getCanonicalizationMethod(String algorithm) {_        return getCanonicalizationMethod(algorithm, null)__    };returns,a,configuration,for,a,canonicalization,algorithm,param,algorithm,algorithm,uri,return,canonicalization,throws,illegal,argument,exception,if,tt,algorithm,tt,is,code,null,code;public,static,algorithm,method,get,canonicalization,method,string,algorithm,return,get,canonicalization,method,algorithm,null
XmlSignatureHelper -> public static AlgorithmMethod getCanonicalizationMethod(String algorithm);1537290824;Returns a configuration for a canonicalization algorithm.__@param algorithm_algorithm URI_@return canonicalization_@throws IllegalArgumentException_if <tt>algorithm</tt> is <code>null</code>;public static AlgorithmMethod getCanonicalizationMethod(String algorithm) {_        return getCanonicalizationMethod(algorithm, null)__    };returns,a,configuration,for,a,canonicalization,algorithm,param,algorithm,algorithm,uri,return,canonicalization,throws,illegal,argument,exception,if,tt,algorithm,tt,is,code,null,code;public,static,algorithm,method,get,canonicalization,method,string,algorithm,return,get,canonicalization,method,algorithm,null
XmlSignatureHelper -> public static AlgorithmMethod getXslTranform(InputStream is) throws SAXException, IOException, ParserConfigurationException;1377611504;Returns a configuration for an XSL transformation.__@param is_input stream of the XSL_@return XSL transform_@throws IllegalArgumentException_if <tt>is</tt> is <code>null</code>_@throws Exception_if an error during the reading of the XSL file occurs;public static AlgorithmMethod getXslTranform(InputStream is) throws SAXException, IOException, ParserConfigurationException {_        if (is == null) {_            throw new IllegalArgumentException("is must not be null")__        }_        Document doc = parseInput(is)__        DOMStructure stylesheet = new DOMStructure(doc.getDocumentElement())__        XSLTTransformParameterSpec spec = new XSLTTransformParameterSpec(stylesheet)__        XmlSignatureTransform transformXslt = new XmlSignatureTransform()__        transformXslt.setAlgorithm(Transform.XSLT)__        transformXslt.setParameterSpec(spec)__        return transformXslt__    };returns,a,configuration,for,an,xsl,transformation,param,is,input,stream,of,the,xsl,return,xsl,transform,throws,illegal,argument,exception,if,tt,is,tt,is,code,null,code,throws,exception,if,an,error,during,the,reading,of,the,xsl,file,occurs;public,static,algorithm,method,get,xsl,tranform,input,stream,is,throws,saxexception,ioexception,parser,configuration,exception,if,is,null,throw,new,illegal,argument,exception,is,must,not,be,null,document,doc,parse,input,is,domstructure,stylesheet,new,domstructure,doc,get,document,element,xslttransform,parameter,spec,spec,new,xslttransform,parameter,spec,stylesheet,xml,signature,transform,transform,xslt,new,xml,signature,transform,transform,xslt,set,algorithm,transform,xslt,transform,xslt,set,parameter,spec,spec,return,transform,xslt
XmlSignatureHelper -> public static AlgorithmMethod getXslTranform(InputStream is) throws SAXException, IOException, ParserConfigurationException;1377611504;Returns a configuration for an XSL transformation.__@param is_input stream of the XSL_@return XSL transform_@throws IllegalArgumentException_if <tt>is</tt> is <code>null</code>_@throws Exception_if an error during the reading of the XSL file occurs;public static AlgorithmMethod getXslTranform(InputStream is) throws SAXException, IOException, ParserConfigurationException {_        if (is == null) {_            throw new IllegalArgumentException("is must not be null")__        }_        Document doc = parseInput(is)__        DOMStructure stylesheet = new DOMStructure(doc.getDocumentElement())__        XSLTTransformParameterSpec spec = new XSLTTransformParameterSpec(stylesheet)__        XmlSignatureTransform transformXslt = new XmlSignatureTransform()__        transformXslt.setAlgorithm(Transform.XSLT)__        transformXslt.setParameterSpec(spec)__        return transformXslt__    };returns,a,configuration,for,an,xsl,transformation,param,is,input,stream,of,the,xsl,return,xsl,transform,throws,illegal,argument,exception,if,tt,is,tt,is,code,null,code,throws,exception,if,an,error,during,the,reading,of,the,xsl,file,occurs;public,static,algorithm,method,get,xsl,tranform,input,stream,is,throws,saxexception,ioexception,parser,configuration,exception,if,is,null,throw,new,illegal,argument,exception,is,must,not,be,null,document,doc,parse,input,is,domstructure,stylesheet,new,domstructure,doc,get,document,element,xslttransform,parameter,spec,spec,new,xslttransform,parameter,spec,stylesheet,xml,signature,transform,transform,xslt,new,xml,signature,transform,transform,xslt,set,algorithm,transform,xslt,transform,xslt,set,parameter,spec,spec,return,transform,xslt
XmlSignatureHelper -> public static AlgorithmMethod getXslTranform(InputStream is) throws SAXException, IOException, ParserConfigurationException;1378890246;Returns a configuration for an XSL transformation.__@param is_input stream of the XSL_@return XSL transform_@throws IllegalArgumentException_if <tt>is</tt> is <code>null</code>_@throws Exception_if an error during the reading of the XSL file occurs;public static AlgorithmMethod getXslTranform(InputStream is) throws SAXException, IOException, ParserConfigurationException {_        if (is == null) {_            throw new IllegalArgumentException("is must not be null")__        }_        Document doc = parseInput(is)__        DOMStructure stylesheet = new DOMStructure(doc.getDocumentElement())__        XSLTTransformParameterSpec spec = new XSLTTransformParameterSpec(stylesheet)__        XmlSignatureTransform transformXslt = new XmlSignatureTransform()__        transformXslt.setAlgorithm(Transform.XSLT)__        transformXslt.setParameterSpec(spec)__        return transformXslt__    };returns,a,configuration,for,an,xsl,transformation,param,is,input,stream,of,the,xsl,return,xsl,transform,throws,illegal,argument,exception,if,tt,is,tt,is,code,null,code,throws,exception,if,an,error,during,the,reading,of,the,xsl,file,occurs;public,static,algorithm,method,get,xsl,tranform,input,stream,is,throws,saxexception,ioexception,parser,configuration,exception,if,is,null,throw,new,illegal,argument,exception,is,must,not,be,null,document,doc,parse,input,is,domstructure,stylesheet,new,domstructure,doc,get,document,element,xslttransform,parameter,spec,spec,new,xslttransform,parameter,spec,stylesheet,xml,signature,transform,transform,xslt,new,xml,signature,transform,transform,xslt,set,algorithm,transform,xslt,transform,xslt,set,parameter,spec,spec,return,transform,xslt
XmlSignatureHelper -> public static AlgorithmMethod getXslTranform(InputStream is) throws SAXException, IOException, ParserConfigurationException;1379267751;Returns a configuration for an XSL transformation.__@param is_input stream of the XSL_@return XSL transform_@throws IllegalArgumentException_if <tt>is</tt> is <code>null</code>_@throws Exception_if an error during the reading of the XSL file occurs;public static AlgorithmMethod getXslTranform(InputStream is) throws SAXException, IOException, ParserConfigurationException {_        if (is == null) {_            throw new IllegalArgumentException("is must not be null")__        }_        Document doc = parseInput(is)__        DOMStructure stylesheet = new DOMStructure(doc.getDocumentElement())__        XSLTTransformParameterSpec spec = new XSLTTransformParameterSpec(stylesheet)__        XmlSignatureTransform transformXslt = new XmlSignatureTransform()__        transformXslt.setAlgorithm(Transform.XSLT)__        transformXslt.setParameterSpec(spec)__        return transformXslt__    };returns,a,configuration,for,an,xsl,transformation,param,is,input,stream,of,the,xsl,return,xsl,transform,throws,illegal,argument,exception,if,tt,is,tt,is,code,null,code,throws,exception,if,an,error,during,the,reading,of,the,xsl,file,occurs;public,static,algorithm,method,get,xsl,tranform,input,stream,is,throws,saxexception,ioexception,parser,configuration,exception,if,is,null,throw,new,illegal,argument,exception,is,must,not,be,null,document,doc,parse,input,is,domstructure,stylesheet,new,domstructure,doc,get,document,element,xslttransform,parameter,spec,spec,new,xslttransform,parameter,spec,stylesheet,xml,signature,transform,transform,xslt,new,xml,signature,transform,transform,xslt,set,algorithm,transform,xslt,transform,xslt,set,parameter,spec,spec,return,transform,xslt
XmlSignatureHelper -> public static AlgorithmMethod getXslTranform(InputStream is) throws SAXException, IOException, ParserConfigurationException;1415211488;Returns a configuration for an XSL transformation.__@param is_input stream of the XSL_@return XSL transform_@throws IllegalArgumentException_if <tt>is</tt> is <code>null</code>_@throws Exception_if an error during the reading of the XSL file occurs;public static AlgorithmMethod getXslTranform(InputStream is) throws SAXException, IOException, ParserConfigurationException {_        if (is == null) {_            throw new IllegalArgumentException("is must not be null")__        }_        Document doc = parseInput(is)__        DOMStructure stylesheet = new DOMStructure(doc.getDocumentElement())__        XSLTTransformParameterSpec spec = new XSLTTransformParameterSpec(stylesheet)__        XmlSignatureTransform transformXslt = new XmlSignatureTransform()__        transformXslt.setAlgorithm(Transform.XSLT)__        transformXslt.setParameterSpec(spec)__        return transformXslt__    };returns,a,configuration,for,an,xsl,transformation,param,is,input,stream,of,the,xsl,return,xsl,transform,throws,illegal,argument,exception,if,tt,is,tt,is,code,null,code,throws,exception,if,an,error,during,the,reading,of,the,xsl,file,occurs;public,static,algorithm,method,get,xsl,tranform,input,stream,is,throws,saxexception,ioexception,parser,configuration,exception,if,is,null,throw,new,illegal,argument,exception,is,must,not,be,null,document,doc,parse,input,is,domstructure,stylesheet,new,domstructure,doc,get,document,element,xslttransform,parameter,spec,spec,new,xslttransform,parameter,spec,stylesheet,xml,signature,transform,transform,xslt,new,xml,signature,transform,transform,xslt,set,algorithm,transform,xslt,transform,xslt,set,parameter,spec,spec,return,transform,xslt
XmlSignatureHelper -> public static AlgorithmMethod getXslTranform(InputStream is) throws SAXException, IOException, ParserConfigurationException;1524063240;Returns a configuration for an XSL transformation.__@param is_input stream of the XSL_@return XSL transform_@throws IllegalArgumentException_if <tt>is</tt> is <code>null</code>_@throws Exception_if an error during the reading of the XSL file occurs;public static AlgorithmMethod getXslTranform(InputStream is) throws SAXException, IOException, ParserConfigurationException {_        if (is == null) {_            throw new IllegalArgumentException("is must not be null")__        }_        Document doc = parseInput(is)__        DOMStructure stylesheet = new DOMStructure(doc.getDocumentElement())__        XSLTTransformParameterSpec spec = new XSLTTransformParameterSpec(stylesheet)__        XmlSignatureTransform transformXslt = new XmlSignatureTransform()__        transformXslt.setAlgorithm(Transform.XSLT)__        transformXslt.setParameterSpec(spec)__        return transformXslt__    };returns,a,configuration,for,an,xsl,transformation,param,is,input,stream,of,the,xsl,return,xsl,transform,throws,illegal,argument,exception,if,tt,is,tt,is,code,null,code,throws,exception,if,an,error,during,the,reading,of,the,xsl,file,occurs;public,static,algorithm,method,get,xsl,tranform,input,stream,is,throws,saxexception,ioexception,parser,configuration,exception,if,is,null,throw,new,illegal,argument,exception,is,must,not,be,null,document,doc,parse,input,is,domstructure,stylesheet,new,domstructure,doc,get,document,element,xslttransform,parameter,spec,spec,new,xslttransform,parameter,spec,stylesheet,xml,signature,transform,transform,xslt,new,xml,signature,transform,transform,xslt,set,algorithm,transform,xslt,transform,xslt,set,parameter,spec,spec,return,transform,xslt
XmlSignatureHelper -> public static AlgorithmMethod getXslTranform(InputStream is) throws SAXException, IOException, ParserConfigurationException;1537290824;Returns a configuration for an XSL transformation.__@param is_input stream of the XSL_@return XSL transform_@throws IllegalArgumentException_if <tt>is</tt> is <code>null</code>_@throws Exception_if an error during the reading of the XSL file occurs;public static AlgorithmMethod getXslTranform(InputStream is) throws SAXException, IOException, ParserConfigurationException {_        if (is == null) {_            throw new IllegalArgumentException("is must not be null")__        }_        Document doc = parseInput(is)__        DOMStructure stylesheet = new DOMStructure(doc.getDocumentElement())__        XSLTTransformParameterSpec spec = new XSLTTransformParameterSpec(stylesheet)__        XmlSignatureTransform transformXslt = new XmlSignatureTransform()__        transformXslt.setAlgorithm(Transform.XSLT)__        transformXslt.setParameterSpec(spec)__        return transformXslt__    };returns,a,configuration,for,an,xsl,transformation,param,is,input,stream,of,the,xsl,return,xsl,transform,throws,illegal,argument,exception,if,tt,is,tt,is,code,null,code,throws,exception,if,an,error,during,the,reading,of,the,xsl,file,occurs;public,static,algorithm,method,get,xsl,tranform,input,stream,is,throws,saxexception,ioexception,parser,configuration,exception,if,is,null,throw,new,illegal,argument,exception,is,must,not,be,null,document,doc,parse,input,is,domstructure,stylesheet,new,domstructure,doc,get,document,element,xslttransform,parameter,spec,spec,new,xslttransform,parameter,spec,stylesheet,xml,signature,transform,transform,xslt,new,xml,signature,transform,transform,xslt,set,algorithm,transform,xslt,transform,xslt,set,parameter,spec,spec,return,transform,xslt
XmlSignatureHelper -> public static AlgorithmMethod getXPathTransform(String xpath, Map<String, String> namespaceMap);1377611504;Returns a configuration for an XPATH transformation which needs a_namespace map.__@param xpath_XPATH expression_@param namespaceMap_namespace map, key is the prefix, value is the namespace, can_be <code>null</code>_@throws IllegalArgumentException_if <tt>xpath</tt> is <code>null</code>_@return XPATH transformation;public static AlgorithmMethod getXPathTransform(String xpath, Map<String, String> namespaceMap) {_        if (xpath == null) {_            throw new IllegalArgumentException("xpath is null")__        }_        XmlSignatureTransform transformXPath = new XmlSignatureTransform()__        transformXPath.setAlgorithm(Transform.XPATH)__        XPathFilterParameterSpec params = getXpathFilter(xpath, namespaceMap)__        transformXPath.setParameterSpec(params)__        return transformXPath__    };returns,a,configuration,for,an,xpath,transformation,which,needs,a,namespace,map,param,xpath,xpath,expression,param,namespace,map,namespace,map,key,is,the,prefix,value,is,the,namespace,can,be,code,null,code,throws,illegal,argument,exception,if,tt,xpath,tt,is,code,null,code,return,xpath,transformation;public,static,algorithm,method,get,xpath,transform,string,xpath,map,string,string,namespace,map,if,xpath,null,throw,new,illegal,argument,exception,xpath,is,null,xml,signature,transform,transform,xpath,new,xml,signature,transform,transform,xpath,set,algorithm,transform,xpath,xpath,filter,parameter,spec,params,get,xpath,filter,xpath,namespace,map,transform,xpath,set,parameter,spec,params,return,transform,xpath
XmlSignatureHelper -> public static AlgorithmMethod getXPathTransform(String xpath, Map<String, String> namespaceMap);1377611504;Returns a configuration for an XPATH transformation which needs a_namespace map.__@param xpath_XPATH expression_@param namespaceMap_namespace map, key is the prefix, value is the namespace, can_be <code>null</code>_@throws IllegalArgumentException_if <tt>xpath</tt> is <code>null</code>_@return XPATH transformation;public static AlgorithmMethod getXPathTransform(String xpath, Map<String, String> namespaceMap) {_        if (xpath == null) {_            throw new IllegalArgumentException("xpath is null")__        }_        XmlSignatureTransform transformXPath = new XmlSignatureTransform()__        transformXPath.setAlgorithm(Transform.XPATH)__        XPathFilterParameterSpec params = getXpathFilter(xpath, namespaceMap)__        transformXPath.setParameterSpec(params)__        return transformXPath__    };returns,a,configuration,for,an,xpath,transformation,which,needs,a,namespace,map,param,xpath,xpath,expression,param,namespace,map,namespace,map,key,is,the,prefix,value,is,the,namespace,can,be,code,null,code,throws,illegal,argument,exception,if,tt,xpath,tt,is,code,null,code,return,xpath,transformation;public,static,algorithm,method,get,xpath,transform,string,xpath,map,string,string,namespace,map,if,xpath,null,throw,new,illegal,argument,exception,xpath,is,null,xml,signature,transform,transform,xpath,new,xml,signature,transform,transform,xpath,set,algorithm,transform,xpath,xpath,filter,parameter,spec,params,get,xpath,filter,xpath,namespace,map,transform,xpath,set,parameter,spec,params,return,transform,xpath
XmlSignatureHelper -> public static AlgorithmMethod getXPathTransform(String xpath, Map<String, String> namespaceMap);1378890246;Returns a configuration for an XPATH transformation which needs a_namespace map.__@param xpath_XPATH expression_@param namespaceMap_namespace map, key is the prefix, value is the namespace, can_be <code>null</code>_@throws IllegalArgumentException_if <tt>xpath</tt> is <code>null</code>_@return XPATH transformation;public static AlgorithmMethod getXPathTransform(String xpath, Map<String, String> namespaceMap) {_        if (xpath == null) {_            throw new IllegalArgumentException("xpath is null")__        }_        XmlSignatureTransform transformXPath = new XmlSignatureTransform()__        transformXPath.setAlgorithm(Transform.XPATH)__        XPathFilterParameterSpec params = getXpathFilter(xpath, namespaceMap)__        transformXPath.setParameterSpec(params)__        return transformXPath__    };returns,a,configuration,for,an,xpath,transformation,which,needs,a,namespace,map,param,xpath,xpath,expression,param,namespace,map,namespace,map,key,is,the,prefix,value,is,the,namespace,can,be,code,null,code,throws,illegal,argument,exception,if,tt,xpath,tt,is,code,null,code,return,xpath,transformation;public,static,algorithm,method,get,xpath,transform,string,xpath,map,string,string,namespace,map,if,xpath,null,throw,new,illegal,argument,exception,xpath,is,null,xml,signature,transform,transform,xpath,new,xml,signature,transform,transform,xpath,set,algorithm,transform,xpath,xpath,filter,parameter,spec,params,get,xpath,filter,xpath,namespace,map,transform,xpath,set,parameter,spec,params,return,transform,xpath
XmlSignatureHelper -> public static AlgorithmMethod getXPathTransform(String xpath, Map<String, String> namespaceMap);1379267751;Returns a configuration for an XPATH transformation which needs a_namespace map.__@param xpath_XPATH expression_@param namespaceMap_namespace map, key is the prefix, value is the namespace, can_be <code>null</code>_@throws IllegalArgumentException_if <tt>xpath</tt> is <code>null</code>_@return XPATH transformation;public static AlgorithmMethod getXPathTransform(String xpath, Map<String, String> namespaceMap) {_        if (xpath == null) {_            throw new IllegalArgumentException("xpath is null")__        }_        XmlSignatureTransform transformXPath = new XmlSignatureTransform()__        transformXPath.setAlgorithm(Transform.XPATH)__        XPathFilterParameterSpec params = getXpathFilter(xpath, namespaceMap)__        transformXPath.setParameterSpec(params)__        return transformXPath__    };returns,a,configuration,for,an,xpath,transformation,which,needs,a,namespace,map,param,xpath,xpath,expression,param,namespace,map,namespace,map,key,is,the,prefix,value,is,the,namespace,can,be,code,null,code,throws,illegal,argument,exception,if,tt,xpath,tt,is,code,null,code,return,xpath,transformation;public,static,algorithm,method,get,xpath,transform,string,xpath,map,string,string,namespace,map,if,xpath,null,throw,new,illegal,argument,exception,xpath,is,null,xml,signature,transform,transform,xpath,new,xml,signature,transform,transform,xpath,set,algorithm,transform,xpath,xpath,filter,parameter,spec,params,get,xpath,filter,xpath,namespace,map,transform,xpath,set,parameter,spec,params,return,transform,xpath
XmlSignatureHelper -> public static AlgorithmMethod getXPathTransform(String xpath, Map<String, String> namespaceMap);1415211488;Returns a configuration for an XPATH transformation which needs a_namespace map.__@param xpath_XPATH expression_@param namespaceMap_namespace map, key is the prefix, value is the namespace, can_be <code>null</code>_@throws IllegalArgumentException_if <tt>xpath</tt> is <code>null</code>_@return XPATH transformation;public static AlgorithmMethod getXPathTransform(String xpath, Map<String, String> namespaceMap) {_        if (xpath == null) {_            throw new IllegalArgumentException("xpath is null")__        }_        XmlSignatureTransform transformXPath = new XmlSignatureTransform()__        transformXPath.setAlgorithm(Transform.XPATH)__        XPathFilterParameterSpec params = getXpathFilter(xpath, namespaceMap)__        transformXPath.setParameterSpec(params)__        return transformXPath__    };returns,a,configuration,for,an,xpath,transformation,which,needs,a,namespace,map,param,xpath,xpath,expression,param,namespace,map,namespace,map,key,is,the,prefix,value,is,the,namespace,can,be,code,null,code,throws,illegal,argument,exception,if,tt,xpath,tt,is,code,null,code,return,xpath,transformation;public,static,algorithm,method,get,xpath,transform,string,xpath,map,string,string,namespace,map,if,xpath,null,throw,new,illegal,argument,exception,xpath,is,null,xml,signature,transform,transform,xpath,new,xml,signature,transform,transform,xpath,set,algorithm,transform,xpath,xpath,filter,parameter,spec,params,get,xpath,filter,xpath,namespace,map,transform,xpath,set,parameter,spec,params,return,transform,xpath
XmlSignatureHelper -> public static AlgorithmMethod getXPathTransform(String xpath, Map<String, String> namespaceMap);1524063240;Returns a configuration for an XPATH transformation which needs a_namespace map.__@param xpath_XPATH expression_@param namespaceMap_namespace map, key is the prefix, value is the namespace, can_be <code>null</code>_@throws IllegalArgumentException_if <tt>xpath</tt> is <code>null</code>_@return XPATH transformation;public static AlgorithmMethod getXPathTransform(String xpath, Map<String, String> namespaceMap) {_        if (xpath == null) {_            throw new IllegalArgumentException("xpath is null")__        }_        XmlSignatureTransform transformXPath = new XmlSignatureTransform()__        transformXPath.setAlgorithm(Transform.XPATH)__        XPathFilterParameterSpec params = getXpathFilter(xpath, namespaceMap)__        transformXPath.setParameterSpec(params)__        return transformXPath__    };returns,a,configuration,for,an,xpath,transformation,which,needs,a,namespace,map,param,xpath,xpath,expression,param,namespace,map,namespace,map,key,is,the,prefix,value,is,the,namespace,can,be,code,null,code,throws,illegal,argument,exception,if,tt,xpath,tt,is,code,null,code,return,xpath,transformation;public,static,algorithm,method,get,xpath,transform,string,xpath,map,string,string,namespace,map,if,xpath,null,throw,new,illegal,argument,exception,xpath,is,null,xml,signature,transform,transform,xpath,new,xml,signature,transform,transform,xpath,set,algorithm,transform,xpath,xpath,filter,parameter,spec,params,get,xpath,filter,xpath,namespace,map,transform,xpath,set,parameter,spec,params,return,transform,xpath
XmlSignatureHelper -> public static AlgorithmMethod getXPathTransform(String xpath, Map<String, String> namespaceMap);1537290824;Returns a configuration for an XPATH transformation which needs a_namespace map.__@param xpath_XPATH expression_@param namespaceMap_namespace map, key is the prefix, value is the namespace, can_be <code>null</code>_@throws IllegalArgumentException_if <tt>xpath</tt> is <code>null</code>_@return XPATH transformation;public static AlgorithmMethod getXPathTransform(String xpath, Map<String, String> namespaceMap) {_        if (xpath == null) {_            throw new IllegalArgumentException("xpath is null")__        }_        XmlSignatureTransform transformXPath = new XmlSignatureTransform()__        transformXPath.setAlgorithm(Transform.XPATH)__        XPathFilterParameterSpec params = getXpathFilter(xpath, namespaceMap)__        transformXPath.setParameterSpec(params)__        return transformXPath__    };returns,a,configuration,for,an,xpath,transformation,which,needs,a,namespace,map,param,xpath,xpath,expression,param,namespace,map,namespace,map,key,is,the,prefix,value,is,the,namespace,can,be,code,null,code,throws,illegal,argument,exception,if,tt,xpath,tt,is,code,null,code,return,xpath,transformation;public,static,algorithm,method,get,xpath,transform,string,xpath,map,string,string,namespace,map,if,xpath,null,throw,new,illegal,argument,exception,xpath,is,null,xml,signature,transform,transform,xpath,new,xml,signature,transform,transform,xpath,set,algorithm,transform,xpath,xpath,filter,parameter,spec,params,get,xpath,filter,xpath,namespace,map,transform,xpath,set,parameter,spec,params,return,transform,xpath
XmlSignatureHelper -> @Deprecated     public static void transformToOutputStream(Node node, OutputStream os, boolean omitXmlDeclaration) throws Exception;1415211488;Use {@link #transformToOutputStream(Node, OutputStream, boolean, String)}_instead.;@Deprecated_    public static void transformToOutputStream(Node node, OutputStream os, boolean omitXmlDeclaration) throws Exception { __        if (node.getNodeType() == Node.TEXT_NODE) {_            byte[] bytes = tranformTextNodeToByteArray(node)__            os.write(bytes)__        } else {_            transformNonTextNodeToOutputStream(node, os, omitXmlDeclaration)__        }_    };use,link,transform,to,output,stream,node,output,stream,boolean,string,instead;deprecated,public,static,void,transform,to,output,stream,node,node,output,stream,os,boolean,omit,xml,declaration,throws,exception,if,node,get,node,type,node,byte,bytes,tranform,text,node,to,byte,array,node,os,write,bytes,else,transform,non,text,node,to,output,stream,node,os,omit,xml,declaration
XmlSignatureHelper -> @Deprecated     public static void transformToOutputStream(Node node, OutputStream os, boolean omitXmlDeclaration) throws Exception;1524063240;Use {@link #transformToOutputStream(Node, OutputStream, boolean, String)}_instead.;@Deprecated_    public static void transformToOutputStream(Node node, OutputStream os, boolean omitXmlDeclaration) throws Exception { __        if (node.getNodeType() == Node.TEXT_NODE) {_            byte[] bytes = tranformTextNodeToByteArray(node)__            os.write(bytes)__        } else {_            transformNonTextNodeToOutputStream(node, os, omitXmlDeclaration)__        }_    };use,link,transform,to,output,stream,node,output,stream,boolean,string,instead;deprecated,public,static,void,transform,to,output,stream,node,node,output,stream,os,boolean,omit,xml,declaration,throws,exception,if,node,get,node,type,node,byte,bytes,tranform,text,node,to,byte,array,node,os,write,bytes,else,transform,non,text,node,to,output,stream,node,os,omit,xml,declaration
XmlSignatureHelper -> @Deprecated     public static void transformToOutputStream(Node node, OutputStream os, boolean omitXmlDeclaration) throws Exception;1537290824;Use {@link #transformToOutputStream(Node, OutputStream, boolean, String)}_instead.;@Deprecated_    public static void transformToOutputStream(Node node, OutputStream os, boolean omitXmlDeclaration) throws Exception { __        if (node.getNodeType() == Node.TEXT_NODE) {_            byte[] bytes = tranformTextNodeToByteArray(node)__            os.write(bytes)__        } else {_            transformNonTextNodeToOutputStream(node, os, omitXmlDeclaration)__        }_    };use,link,transform,to,output,stream,node,output,stream,boolean,string,instead;deprecated,public,static,void,transform,to,output,stream,node,node,output,stream,os,boolean,omit,xml,declaration,throws,exception,if,node,get,node,type,node,byte,bytes,tranform,text,node,to,byte,array,node,os,write,bytes,else,transform,non,text,node,to,output,stream,node,os,omit,xml,declaration
XmlSignatureHelper -> public static byte[] tranformTextNodeToByteArray(Node node, String encoding);1415211488;Trannsforms a text node to byte array using a certain character encoding.__@param node_text node_@param encoding_character encoding, can be <code>null</code>, if_<code>null</code> then UTF-8 is used_@return byte array, <code>null</code> if the node has not text content_@throws IllegalStateException_if the encoding is not supported;public static byte[] tranformTextNodeToByteArray(Node node, String encoding) {_        if (encoding == null) {_            encoding = "UTF-8"__        }_        String text = node.getTextContent()__        if (text != null) {_            try {_                return text.getBytes(encoding)__            } catch (UnsupportedEncodingException e) {_                throw new IllegalStateException(e)__            }_        } else {_            return null__        }_    };trannsforms,a,text,node,to,byte,array,using,a,certain,character,encoding,param,node,text,node,param,encoding,character,encoding,can,be,code,null,code,if,code,null,code,then,utf,8,is,used,return,byte,array,code,null,code,if,the,node,has,not,text,content,throws,illegal,state,exception,if,the,encoding,is,not,supported;public,static,byte,tranform,text,node,to,byte,array,node,node,string,encoding,if,encoding,null,encoding,utf,8,string,text,node,get,text,content,if,text,null,try,return,text,get,bytes,encoding,catch,unsupported,encoding,exception,e,throw,new,illegal,state,exception,e,else,return,null
XmlSignatureHelper -> public static byte[] tranformTextNodeToByteArray(Node node, String encoding);1524063240;Trannsforms a text node to byte array using a certain character encoding.__@param node_text node_@param encoding_character encoding, can be <code>null</code>, if_<code>null</code> then UTF-8 is used_@return byte array, <code>null</code> if the node has not text content_@throws IllegalStateException_if the encoding is not supported;public static byte[] tranformTextNodeToByteArray(Node node, String encoding) {_        if (encoding == null) {_            encoding = "UTF-8"__        }_        String text = node.getTextContent()__        if (text != null) {_            try {_                return text.getBytes(encoding)__            } catch (UnsupportedEncodingException e) {_                throw new IllegalStateException(e)__            }_        } else {_            return null__        }_    };trannsforms,a,text,node,to,byte,array,using,a,certain,character,encoding,param,node,text,node,param,encoding,character,encoding,can,be,code,null,code,if,code,null,code,then,utf,8,is,used,return,byte,array,code,null,code,if,the,node,has,not,text,content,throws,illegal,state,exception,if,the,encoding,is,not,supported;public,static,byte,tranform,text,node,to,byte,array,node,node,string,encoding,if,encoding,null,encoding,utf,8,string,text,node,get,text,content,if,text,null,try,return,text,get,bytes,encoding,catch,unsupported,encoding,exception,e,throw,new,illegal,state,exception,e,else,return,null
XmlSignatureHelper -> public static byte[] tranformTextNodeToByteArray(Node node, String encoding);1537290824;Trannsforms a text node to byte array using a certain character encoding.__@param node_text node_@param encoding_character encoding, can be <code>null</code>, if_<code>null</code> then UTF-8 is used_@return byte array, <code>null</code> if the node has not text content_@throws IllegalStateException_if the encoding is not supported;public static byte[] tranformTextNodeToByteArray(Node node, String encoding) {_        if (encoding == null) {_            encoding = "UTF-8"__        }_        String text = node.getTextContent()__        if (text != null) {_            try {_                return text.getBytes(encoding)__            } catch (UnsupportedEncodingException e) {_                throw new IllegalStateException(e)__            }_        } else {_            return null__        }_    };trannsforms,a,text,node,to,byte,array,using,a,certain,character,encoding,param,node,text,node,param,encoding,character,encoding,can,be,code,null,code,if,code,null,code,then,utf,8,is,used,return,byte,array,code,null,code,if,the,node,has,not,text,content,throws,illegal,state,exception,if,the,encoding,is,not,supported;public,static,byte,tranform,text,node,to,byte,array,node,node,string,encoding,if,encoding,null,encoding,utf,8,string,text,node,get,text,content,if,text,null,try,return,text,get,bytes,encoding,catch,unsupported,encoding,exception,e,throw,new,illegal,state,exception,e,else,return,null
XmlSignatureHelper -> public static AlgorithmMethod getXslTransform(String path) throws Exception;1377611504;Returns a configuration for an XSL transformation.__@param path_path to the XSL file in the classpath_@return XSL transform_@throws IllegalArgumentException_if <tt>path</tt> is <code>null</code>_@throws IllegalStateException_if the XSL file cannot be found_@throws Exception_if an error during the reading of the XSL file occurs;public static AlgorithmMethod getXslTransform(String path) throws Exception {_        InputStream is = readXslTransform(path)__        if (is == null) {_            throw new IllegalStateException(String.format("XSL file %s not found", path))__        }_        return getXslTranform(is)__    };returns,a,configuration,for,an,xsl,transformation,param,path,path,to,the,xsl,file,in,the,classpath,return,xsl,transform,throws,illegal,argument,exception,if,tt,path,tt,is,code,null,code,throws,illegal,state,exception,if,the,xsl,file,cannot,be,found,throws,exception,if,an,error,during,the,reading,of,the,xsl,file,occurs;public,static,algorithm,method,get,xsl,transform,string,path,throws,exception,input,stream,is,read,xsl,transform,path,if,is,null,throw,new,illegal,state,exception,string,format,xsl,file,s,not,found,path,return,get,xsl,tranform,is
XmlSignatureHelper -> public static AlgorithmMethod getXslTransform(String path) throws Exception;1377611504;Returns a configuration for an XSL transformation.__@param path_path to the XSL file in the classpath_@return XSL transform_@throws IllegalArgumentException_if <tt>path</tt> is <code>null</code>_@throws IllegalStateException_if the XSL file cannot be found_@throws Exception_if an error during the reading of the XSL file occurs;public static AlgorithmMethod getXslTransform(String path) throws Exception {_        InputStream is = readXslTransform(path)__        if (is == null) {_            throw new IllegalStateException(String.format("XSL file %s not found", path))__        }_        return getXslTranform(is)__    };returns,a,configuration,for,an,xsl,transformation,param,path,path,to,the,xsl,file,in,the,classpath,return,xsl,transform,throws,illegal,argument,exception,if,tt,path,tt,is,code,null,code,throws,illegal,state,exception,if,the,xsl,file,cannot,be,found,throws,exception,if,an,error,during,the,reading,of,the,xsl,file,occurs;public,static,algorithm,method,get,xsl,transform,string,path,throws,exception,input,stream,is,read,xsl,transform,path,if,is,null,throw,new,illegal,state,exception,string,format,xsl,file,s,not,found,path,return,get,xsl,tranform,is
XmlSignatureHelper -> public static AlgorithmMethod getXslTransform(String path) throws Exception;1378890246;Returns a configuration for an XSL transformation.__@param path_path to the XSL file in the classpath_@return XSL transform_@throws IllegalArgumentException_if <tt>path</tt> is <code>null</code>_@throws IllegalStateException_if the XSL file cannot be found_@throws Exception_if an error during the reading of the XSL file occurs;public static AlgorithmMethod getXslTransform(String path) throws Exception {_        InputStream is = readXslTransform(path)__        if (is == null) {_            throw new IllegalStateException(String.format("XSL file %s not found", path))__        }_        try{_        	return getXslTranform(is)__        }finally{_        	IOHelper.close(is)__        }_    };returns,a,configuration,for,an,xsl,transformation,param,path,path,to,the,xsl,file,in,the,classpath,return,xsl,transform,throws,illegal,argument,exception,if,tt,path,tt,is,code,null,code,throws,illegal,state,exception,if,the,xsl,file,cannot,be,found,throws,exception,if,an,error,during,the,reading,of,the,xsl,file,occurs;public,static,algorithm,method,get,xsl,transform,string,path,throws,exception,input,stream,is,read,xsl,transform,path,if,is,null,throw,new,illegal,state,exception,string,format,xsl,file,s,not,found,path,try,return,get,xsl,tranform,is,finally,iohelper,close,is
XmlSignatureHelper -> public static AlgorithmMethod getXslTransform(String path) throws Exception;1379267751;Returns a configuration for an XSL transformation.__@param path_path to the XSL file in the classpath_@return XSL transform_@throws IllegalArgumentException_if <tt>path</tt> is <code>null</code>_@throws IllegalStateException_if the XSL file cannot be found_@throws Exception_if an error during the reading of the XSL file occurs;public static AlgorithmMethod getXslTransform(String path) throws Exception {_        InputStream is = readXslTransform(path)__        if (is == null) {_            throw new IllegalStateException(String.format("XSL file %s not found", path))__        }_        try {_            return getXslTranform(is)__        } finally {_            IOHelper.close(is)__        }_    };returns,a,configuration,for,an,xsl,transformation,param,path,path,to,the,xsl,file,in,the,classpath,return,xsl,transform,throws,illegal,argument,exception,if,tt,path,tt,is,code,null,code,throws,illegal,state,exception,if,the,xsl,file,cannot,be,found,throws,exception,if,an,error,during,the,reading,of,the,xsl,file,occurs;public,static,algorithm,method,get,xsl,transform,string,path,throws,exception,input,stream,is,read,xsl,transform,path,if,is,null,throw,new,illegal,state,exception,string,format,xsl,file,s,not,found,path,try,return,get,xsl,tranform,is,finally,iohelper,close,is
XmlSignatureHelper -> public static AlgorithmMethod getXslTransform(String path) throws Exception;1415211488;Returns a configuration for an XSL transformation.__@param path_path to the XSL file in the classpath_@return XSL transform_@throws IllegalArgumentException_if <tt>path</tt> is <code>null</code>_@throws IllegalStateException_if the XSL file cannot be found_@throws Exception_if an error during the reading of the XSL file occurs;public static AlgorithmMethod getXslTransform(String path) throws Exception { _        InputStream is = readXslTransform(path)__        if (is == null) {_            throw new IllegalStateException(String.format("XSL file %s not found", path))__        }_        try {_            return getXslTranform(is)__        } finally {_            IOHelper.close(is)__        }_    };returns,a,configuration,for,an,xsl,transformation,param,path,path,to,the,xsl,file,in,the,classpath,return,xsl,transform,throws,illegal,argument,exception,if,tt,path,tt,is,code,null,code,throws,illegal,state,exception,if,the,xsl,file,cannot,be,found,throws,exception,if,an,error,during,the,reading,of,the,xsl,file,occurs;public,static,algorithm,method,get,xsl,transform,string,path,throws,exception,input,stream,is,read,xsl,transform,path,if,is,null,throw,new,illegal,state,exception,string,format,xsl,file,s,not,found,path,try,return,get,xsl,tranform,is,finally,iohelper,close,is
XmlSignatureHelper -> public static AlgorithmMethod getXslTransform(String path) throws Exception;1524063240;Returns a configuration for an XSL transformation.__@param path_path to the XSL file in the classpath_@return XSL transform_@throws IllegalArgumentException_if <tt>path</tt> is <code>null</code>_@throws IllegalStateException_if the XSL file cannot be found_@throws Exception_if an error during the reading of the XSL file occurs;public static AlgorithmMethod getXslTransform(String path) throws Exception { _        InputStream is = readXslTransform(path)__        if (is == null) {_            throw new IllegalStateException(String.format("XSL file %s not found", path))__        }_        try {_            return getXslTranform(is)__        } finally {_            IOHelper.close(is)__        }_    };returns,a,configuration,for,an,xsl,transformation,param,path,path,to,the,xsl,file,in,the,classpath,return,xsl,transform,throws,illegal,argument,exception,if,tt,path,tt,is,code,null,code,throws,illegal,state,exception,if,the,xsl,file,cannot,be,found,throws,exception,if,an,error,during,the,reading,of,the,xsl,file,occurs;public,static,algorithm,method,get,xsl,transform,string,path,throws,exception,input,stream,is,read,xsl,transform,path,if,is,null,throw,new,illegal,state,exception,string,format,xsl,file,s,not,found,path,try,return,get,xsl,tranform,is,finally,iohelper,close,is
XmlSignatureHelper -> public static AlgorithmMethod getXslTransform(String path) throws Exception;1537290824;Returns a configuration for an XSL transformation.__@param path_path to the XSL file in the classpath_@return XSL transform_@throws IllegalArgumentException_if <tt>path</tt> is <code>null</code>_@throws IllegalStateException_if the XSL file cannot be found_@throws Exception_if an error during the reading of the XSL file occurs;public static AlgorithmMethod getXslTransform(String path) throws Exception { _        InputStream is = readXslTransform(path)__        if (is == null) {_            throw new IllegalStateException(String.format("XSL file %s not found", path))__        }_        try {_            return getXslTranform(is)__        } finally {_            IOHelper.close(is)__        }_    };returns,a,configuration,for,an,xsl,transformation,param,path,path,to,the,xsl,file,in,the,classpath,return,xsl,transform,throws,illegal,argument,exception,if,tt,path,tt,is,code,null,code,throws,illegal,state,exception,if,the,xsl,file,cannot,be,found,throws,exception,if,an,error,during,the,reading,of,the,xsl,file,occurs;public,static,algorithm,method,get,xsl,transform,string,path,throws,exception,input,stream,is,read,xsl,transform,path,if,is,null,throw,new,illegal,state,exception,string,format,xsl,file,s,not,found,path,try,return,get,xsl,tranform,is,finally,iohelper,close,is
XmlSignatureHelper -> public static void transformNonTextNodeToOutputStream(Node node, OutputStream os, boolean omitXmlDeclaration, String encoding)         throws Exception;1415211488;Serializes a node using a certain character encoding.__@param node_DOM node to serialize_@param os_output stream, to which the node is serialized_@param omitXmlDeclaration_indicator whether to omit the XML declaration or not_@param encoding_character encoding, can be <code>null</code>, if_<code>null</code> then "UTF-8" is used_@throws Exception;public static void transformNonTextNodeToOutputStream(Node node, OutputStream os, boolean omitXmlDeclaration, String encoding)_        throws Exception { _        _        _        if (encoding == null) {_            encoding = "UTF-8"__        }_        DOMImplementationRegistry domImplementationRegistry = DOMImplementationRegistry.newInstance()__        DOMImplementationLS domImplementationLS = (DOMImplementationLS) domImplementationRegistry.getDOMImplementation("LS")__        LSOutput lsOutput = domImplementationLS.createLSOutput()__        lsOutput.setEncoding(encoding)__        lsOutput.setByteStream(os)__        LSSerializer lss = domImplementationLS.createLSSerializer()__        lss.getDomConfig().setParameter("xml-declaration", !omitXmlDeclaration)__        lss.write(node, lsOutput)__    };serializes,a,node,using,a,certain,character,encoding,param,node,dom,node,to,serialize,param,os,output,stream,to,which,the,node,is,serialized,param,omit,xml,declaration,indicator,whether,to,omit,the,xml,declaration,or,not,param,encoding,character,encoding,can,be,code,null,code,if,code,null,code,then,utf,8,is,used,throws,exception;public,static,void,transform,non,text,node,to,output,stream,node,node,output,stream,os,boolean,omit,xml,declaration,string,encoding,throws,exception,if,encoding,null,encoding,utf,8,domimplementation,registry,dom,implementation,registry,domimplementation,registry,new,instance,domimplementation,ls,dom,implementation,ls,domimplementation,ls,dom,implementation,registry,get,domimplementation,ls,lsoutput,ls,output,dom,implementation,ls,create,lsoutput,ls,output,set,encoding,encoding,ls,output,set,byte,stream,os,lsserializer,lss,dom,implementation,ls,create,lsserializer,lss,get,dom,config,set,parameter,xml,declaration,omit,xml,declaration,lss,write,node,ls,output
XmlSignatureHelper -> public static void transformNonTextNodeToOutputStream(Node node, OutputStream os, boolean omitXmlDeclaration, String encoding)         throws Exception;1524063240;Serializes a node using a certain character encoding.__@param node_DOM node to serialize_@param os_output stream, to which the node is serialized_@param omitXmlDeclaration_indicator whether to omit the XML declaration or not_@param encoding_character encoding, can be <code>null</code>, if_<code>null</code> then "UTF-8" is used_@throws Exception;public static void transformNonTextNodeToOutputStream(Node node, OutputStream os, boolean omitXmlDeclaration, String encoding)_        throws Exception { _        _        _        if (encoding == null) {_            encoding = "UTF-8"__        }_        DOMImplementationRegistry domImplementationRegistry = DOMImplementationRegistry.newInstance()__        DOMImplementationLS domImplementationLS = (DOMImplementationLS) domImplementationRegistry.getDOMImplementation("LS")__        LSOutput lsOutput = domImplementationLS.createLSOutput()__        lsOutput.setEncoding(encoding)__        lsOutput.setByteStream(os)__        LSSerializer lss = domImplementationLS.createLSSerializer()__        lss.getDomConfig().setParameter("xml-declaration", !omitXmlDeclaration)__        lss.write(node, lsOutput)__    };serializes,a,node,using,a,certain,character,encoding,param,node,dom,node,to,serialize,param,os,output,stream,to,which,the,node,is,serialized,param,omit,xml,declaration,indicator,whether,to,omit,the,xml,declaration,or,not,param,encoding,character,encoding,can,be,code,null,code,if,code,null,code,then,utf,8,is,used,throws,exception;public,static,void,transform,non,text,node,to,output,stream,node,node,output,stream,os,boolean,omit,xml,declaration,string,encoding,throws,exception,if,encoding,null,encoding,utf,8,domimplementation,registry,dom,implementation,registry,domimplementation,registry,new,instance,domimplementation,ls,dom,implementation,ls,domimplementation,ls,dom,implementation,registry,get,domimplementation,ls,lsoutput,ls,output,dom,implementation,ls,create,lsoutput,ls,output,set,encoding,encoding,ls,output,set,byte,stream,os,lsserializer,lss,dom,implementation,ls,create,lsserializer,lss,get,dom,config,set,parameter,xml,declaration,omit,xml,declaration,lss,write,node,ls,output
XmlSignatureHelper -> public static void transformNonTextNodeToOutputStream(Node node, OutputStream os, boolean omitXmlDeclaration, String encoding)         throws Exception;1537290824;Serializes a node using a certain character encoding.__@param node_DOM node to serialize_@param os_output stream, to which the node is serialized_@param omitXmlDeclaration_indicator whether to omit the XML declaration or not_@param encoding_character encoding, can be <code>null</code>, if_<code>null</code> then "UTF-8" is used_@throws Exception;public static void transformNonTextNodeToOutputStream(Node node, OutputStream os, boolean omitXmlDeclaration, String encoding)_        throws Exception { _        _        _        if (encoding == null) {_            encoding = "UTF-8"__        }_        DOMImplementationRegistry domImplementationRegistry = DOMImplementationRegistry.newInstance()__        DOMImplementationLS domImplementationLS = (DOMImplementationLS) domImplementationRegistry.getDOMImplementation("LS")__        LSOutput lsOutput = domImplementationLS.createLSOutput()__        lsOutput.setEncoding(encoding)__        lsOutput.setByteStream(os)__        LSSerializer lss = domImplementationLS.createLSSerializer()__        lss.getDomConfig().setParameter("xml-declaration", !omitXmlDeclaration)__        lss.write(node, lsOutput)__    };serializes,a,node,using,a,certain,character,encoding,param,node,dom,node,to,serialize,param,os,output,stream,to,which,the,node,is,serialized,param,omit,xml,declaration,indicator,whether,to,omit,the,xml,declaration,or,not,param,encoding,character,encoding,can,be,code,null,code,if,code,null,code,then,utf,8,is,used,throws,exception;public,static,void,transform,non,text,node,to,output,stream,node,node,output,stream,os,boolean,omit,xml,declaration,string,encoding,throws,exception,if,encoding,null,encoding,utf,8,domimplementation,registry,dom,implementation,registry,domimplementation,registry,new,instance,domimplementation,ls,dom,implementation,ls,domimplementation,ls,dom,implementation,registry,get,domimplementation,ls,lsoutput,ls,output,dom,implementation,ls,create,lsoutput,ls,output,set,encoding,encoding,ls,output,set,byte,stream,os,lsserializer,lss,dom,implementation,ls,create,lsserializer,lss,get,dom,config,set,parameter,xml,declaration,omit,xml,declaration,lss,write,node,ls,output
XmlSignatureHelper -> @Deprecated     public static void transformNonTextNodeToOutputStream(Node node, OutputStream os, boolean omitXmlDeclaration) throws Exception;1415211488;Use_{@link #transformNonTextNodeToOutputStream(Node, OutputStream, boolean, String)}_instead.;@Deprecated_    public static void transformNonTextNodeToOutputStream(Node node, OutputStream os, boolean omitXmlDeclaration) throws Exception { _        transformNonTextNodeToOutputStream(node, os, omitXmlDeclaration, null)__    };use,link,transform,non,text,node,to,output,stream,node,output,stream,boolean,string,instead;deprecated,public,static,void,transform,non,text,node,to,output,stream,node,node,output,stream,os,boolean,omit,xml,declaration,throws,exception,transform,non,text,node,to,output,stream,node,os,omit,xml,declaration,null
XmlSignatureHelper -> @Deprecated     public static void transformNonTextNodeToOutputStream(Node node, OutputStream os, boolean omitXmlDeclaration) throws Exception;1524063240;Use_{@link #transformNonTextNodeToOutputStream(Node, OutputStream, boolean, String)}_instead.;@Deprecated_    public static void transformNonTextNodeToOutputStream(Node node, OutputStream os, boolean omitXmlDeclaration) throws Exception { _        transformNonTextNodeToOutputStream(node, os, omitXmlDeclaration, null)__    };use,link,transform,non,text,node,to,output,stream,node,output,stream,boolean,string,instead;deprecated,public,static,void,transform,non,text,node,to,output,stream,node,node,output,stream,os,boolean,omit,xml,declaration,throws,exception,transform,non,text,node,to,output,stream,node,os,omit,xml,declaration,null
XmlSignatureHelper -> @Deprecated     public static void transformNonTextNodeToOutputStream(Node node, OutputStream os, boolean omitXmlDeclaration) throws Exception;1537290824;Use_{@link #transformNonTextNodeToOutputStream(Node, OutputStream, boolean, String)}_instead.;@Deprecated_    public static void transformNonTextNodeToOutputStream(Node node, OutputStream os, boolean omitXmlDeclaration) throws Exception { _        transformNonTextNodeToOutputStream(node, os, omitXmlDeclaration, null)__    };use,link,transform,non,text,node,to,output,stream,node,output,stream,boolean,string,instead;deprecated,public,static,void,transform,non,text,node,to,output,stream,node,node,output,stream,os,boolean,omit,xml,declaration,throws,exception,transform,non,text,node,to,output,stream,node,os,omit,xml,declaration,null
XmlSignatureHelper -> public static AlgorithmMethod getCanonicalizationMethod(String algorithm, List<String> inclusiveNamespacePrefixes);1377611504;Returns a configuration for a canonicalization algorithm.__@param algorithm_algorithm URI_@param inclusiveNamespacePrefixes_namespace prefixes which should be treated like in the_inclusive canonicalization, only relevant if the algorithm is_exclusive_@return canonicalization_@throws IllegalArgumentException_if <tt>algorithm</tt> is <code>null</code>;public static AlgorithmMethod getCanonicalizationMethod(String algorithm, List<String> inclusiveNamespacePrefixes) {_        if (algorithm == null) {_            throw new IllegalArgumentException("algorithm is null")__        }_        XmlSignatureTransform canonicalizationMethod = new XmlSignatureTransform(algorithm)__        if (inclusiveNamespacePrefixes != null) {_            ExcC14NParameterSpec parameters = new ExcC14NParameterSpec(inclusiveNamespacePrefixes)__            canonicalizationMethod.setParameterSpec(parameters)__        }_        return canonicalizationMethod__    };returns,a,configuration,for,a,canonicalization,algorithm,param,algorithm,algorithm,uri,param,inclusive,namespace,prefixes,namespace,prefixes,which,should,be,treated,like,in,the,inclusive,canonicalization,only,relevant,if,the,algorithm,is,exclusive,return,canonicalization,throws,illegal,argument,exception,if,tt,algorithm,tt,is,code,null,code;public,static,algorithm,method,get,canonicalization,method,string,algorithm,list,string,inclusive,namespace,prefixes,if,algorithm,null,throw,new,illegal,argument,exception,algorithm,is,null,xml,signature,transform,canonicalization,method,new,xml,signature,transform,algorithm,if,inclusive,namespace,prefixes,null,exc,c14nparameter,spec,parameters,new,exc,c14nparameter,spec,inclusive,namespace,prefixes,canonicalization,method,set,parameter,spec,parameters,return,canonicalization,method
XmlSignatureHelper -> public static AlgorithmMethod getCanonicalizationMethod(String algorithm, List<String> inclusiveNamespacePrefixes);1377611504;Returns a configuration for a canonicalization algorithm.__@param algorithm_algorithm URI_@param inclusiveNamespacePrefixes_namespace prefixes which should be treated like in the_inclusive canonicalization, only relevant if the algorithm is_exclusive_@return canonicalization_@throws IllegalArgumentException_if <tt>algorithm</tt> is <code>null</code>;public static AlgorithmMethod getCanonicalizationMethod(String algorithm, List<String> inclusiveNamespacePrefixes) {_        if (algorithm == null) {_            throw new IllegalArgumentException("algorithm is null")__        }_        XmlSignatureTransform canonicalizationMethod = new XmlSignatureTransform(algorithm)__        if (inclusiveNamespacePrefixes != null) {_            ExcC14NParameterSpec parameters = new ExcC14NParameterSpec(inclusiveNamespacePrefixes)__            canonicalizationMethod.setParameterSpec(parameters)__        }_        return canonicalizationMethod__    };returns,a,configuration,for,a,canonicalization,algorithm,param,algorithm,algorithm,uri,param,inclusive,namespace,prefixes,namespace,prefixes,which,should,be,treated,like,in,the,inclusive,canonicalization,only,relevant,if,the,algorithm,is,exclusive,return,canonicalization,throws,illegal,argument,exception,if,tt,algorithm,tt,is,code,null,code;public,static,algorithm,method,get,canonicalization,method,string,algorithm,list,string,inclusive,namespace,prefixes,if,algorithm,null,throw,new,illegal,argument,exception,algorithm,is,null,xml,signature,transform,canonicalization,method,new,xml,signature,transform,algorithm,if,inclusive,namespace,prefixes,null,exc,c14nparameter,spec,parameters,new,exc,c14nparameter,spec,inclusive,namespace,prefixes,canonicalization,method,set,parameter,spec,parameters,return,canonicalization,method
XmlSignatureHelper -> public static AlgorithmMethod getCanonicalizationMethod(String algorithm, List<String> inclusiveNamespacePrefixes);1378890246;Returns a configuration for a canonicalization algorithm.__@param algorithm_algorithm URI_@param inclusiveNamespacePrefixes_namespace prefixes which should be treated like in the_inclusive canonicalization, only relevant if the algorithm is_exclusive_@return canonicalization_@throws IllegalArgumentException_if <tt>algorithm</tt> is <code>null</code>;public static AlgorithmMethod getCanonicalizationMethod(String algorithm, List<String> inclusiveNamespacePrefixes) {_        if (algorithm == null) {_            throw new IllegalArgumentException("algorithm is null")__        }_        XmlSignatureTransform canonicalizationMethod = new XmlSignatureTransform(algorithm)__        if (inclusiveNamespacePrefixes != null) {_            ExcC14NParameterSpec parameters = new ExcC14NParameterSpec(inclusiveNamespacePrefixes)__            canonicalizationMethod.setParameterSpec(parameters)__        }_        return canonicalizationMethod__    };returns,a,configuration,for,a,canonicalization,algorithm,param,algorithm,algorithm,uri,param,inclusive,namespace,prefixes,namespace,prefixes,which,should,be,treated,like,in,the,inclusive,canonicalization,only,relevant,if,the,algorithm,is,exclusive,return,canonicalization,throws,illegal,argument,exception,if,tt,algorithm,tt,is,code,null,code;public,static,algorithm,method,get,canonicalization,method,string,algorithm,list,string,inclusive,namespace,prefixes,if,algorithm,null,throw,new,illegal,argument,exception,algorithm,is,null,xml,signature,transform,canonicalization,method,new,xml,signature,transform,algorithm,if,inclusive,namespace,prefixes,null,exc,c14nparameter,spec,parameters,new,exc,c14nparameter,spec,inclusive,namespace,prefixes,canonicalization,method,set,parameter,spec,parameters,return,canonicalization,method
XmlSignatureHelper -> public static AlgorithmMethod getCanonicalizationMethod(String algorithm, List<String> inclusiveNamespacePrefixes);1379267751;Returns a configuration for a canonicalization algorithm.__@param algorithm_algorithm URI_@param inclusiveNamespacePrefixes_namespace prefixes which should be treated like in the_inclusive canonicalization, only relevant if the algorithm is_exclusive_@return canonicalization_@throws IllegalArgumentException_if <tt>algorithm</tt> is <code>null</code>;public static AlgorithmMethod getCanonicalizationMethod(String algorithm, List<String> inclusiveNamespacePrefixes) {_        if (algorithm == null) {_            throw new IllegalArgumentException("algorithm is null")__        }_        XmlSignatureTransform canonicalizationMethod = new XmlSignatureTransform(algorithm)__        if (inclusiveNamespacePrefixes != null) {_            ExcC14NParameterSpec parameters = new ExcC14NParameterSpec(inclusiveNamespacePrefixes)__            canonicalizationMethod.setParameterSpec(parameters)__        }_        return canonicalizationMethod__    };returns,a,configuration,for,a,canonicalization,algorithm,param,algorithm,algorithm,uri,param,inclusive,namespace,prefixes,namespace,prefixes,which,should,be,treated,like,in,the,inclusive,canonicalization,only,relevant,if,the,algorithm,is,exclusive,return,canonicalization,throws,illegal,argument,exception,if,tt,algorithm,tt,is,code,null,code;public,static,algorithm,method,get,canonicalization,method,string,algorithm,list,string,inclusive,namespace,prefixes,if,algorithm,null,throw,new,illegal,argument,exception,algorithm,is,null,xml,signature,transform,canonicalization,method,new,xml,signature,transform,algorithm,if,inclusive,namespace,prefixes,null,exc,c14nparameter,spec,parameters,new,exc,c14nparameter,spec,inclusive,namespace,prefixes,canonicalization,method,set,parameter,spec,parameters,return,canonicalization,method
XmlSignatureHelper -> public static AlgorithmMethod getCanonicalizationMethod(String algorithm, List<String> inclusiveNamespacePrefixes);1415211488;Returns a configuration for a canonicalization algorithm.__@param algorithm_algorithm URI_@param inclusiveNamespacePrefixes_namespace prefixes which should be treated like in the_inclusive canonicalization, only relevant if the algorithm is_exclusive_@return canonicalization_@throws IllegalArgumentException_if <tt>algorithm</tt> is <code>null</code>;public static AlgorithmMethod getCanonicalizationMethod(String algorithm, List<String> inclusiveNamespacePrefixes) {_        if (algorithm == null) {_            throw new IllegalArgumentException("algorithm is null")__        }_        XmlSignatureTransform canonicalizationMethod = new XmlSignatureTransform(algorithm)__        if (inclusiveNamespacePrefixes != null) {_            ExcC14NParameterSpec parameters = new ExcC14NParameterSpec(inclusiveNamespacePrefixes)__            canonicalizationMethod.setParameterSpec(parameters)__        }_        return canonicalizationMethod__    };returns,a,configuration,for,a,canonicalization,algorithm,param,algorithm,algorithm,uri,param,inclusive,namespace,prefixes,namespace,prefixes,which,should,be,treated,like,in,the,inclusive,canonicalization,only,relevant,if,the,algorithm,is,exclusive,return,canonicalization,throws,illegal,argument,exception,if,tt,algorithm,tt,is,code,null,code;public,static,algorithm,method,get,canonicalization,method,string,algorithm,list,string,inclusive,namespace,prefixes,if,algorithm,null,throw,new,illegal,argument,exception,algorithm,is,null,xml,signature,transform,canonicalization,method,new,xml,signature,transform,algorithm,if,inclusive,namespace,prefixes,null,exc,c14nparameter,spec,parameters,new,exc,c14nparameter,spec,inclusive,namespace,prefixes,canonicalization,method,set,parameter,spec,parameters,return,canonicalization,method
XmlSignatureHelper -> public static AlgorithmMethod getCanonicalizationMethod(String algorithm, List<String> inclusiveNamespacePrefixes);1524063240;Returns a configuration for a canonicalization algorithm.__@param algorithm_algorithm URI_@param inclusiveNamespacePrefixes_namespace prefixes which should be treated like in the_inclusive canonicalization, only relevant if the algorithm is_exclusive_@return canonicalization_@throws IllegalArgumentException_if <tt>algorithm</tt> is <code>null</code>;public static AlgorithmMethod getCanonicalizationMethod(String algorithm, List<String> inclusiveNamespacePrefixes) {_        if (algorithm == null) {_            throw new IllegalArgumentException("algorithm is null")__        }_        XmlSignatureTransform canonicalizationMethod = new XmlSignatureTransform(algorithm)__        if (inclusiveNamespacePrefixes != null) {_            ExcC14NParameterSpec parameters = new ExcC14NParameterSpec(inclusiveNamespacePrefixes)__            canonicalizationMethod.setParameterSpec(parameters)__        }_        return canonicalizationMethod__    };returns,a,configuration,for,a,canonicalization,algorithm,param,algorithm,algorithm,uri,param,inclusive,namespace,prefixes,namespace,prefixes,which,should,be,treated,like,in,the,inclusive,canonicalization,only,relevant,if,the,algorithm,is,exclusive,return,canonicalization,throws,illegal,argument,exception,if,tt,algorithm,tt,is,code,null,code;public,static,algorithm,method,get,canonicalization,method,string,algorithm,list,string,inclusive,namespace,prefixes,if,algorithm,null,throw,new,illegal,argument,exception,algorithm,is,null,xml,signature,transform,canonicalization,method,new,xml,signature,transform,algorithm,if,inclusive,namespace,prefixes,null,exc,c14nparameter,spec,parameters,new,exc,c14nparameter,spec,inclusive,namespace,prefixes,canonicalization,method,set,parameter,spec,parameters,return,canonicalization,method
XmlSignatureHelper -> public static AlgorithmMethod getCanonicalizationMethod(String algorithm, List<String> inclusiveNamespacePrefixes);1537290824;Returns a configuration for a canonicalization algorithm.__@param algorithm_algorithm URI_@param inclusiveNamespacePrefixes_namespace prefixes which should be treated like in the_inclusive canonicalization, only relevant if the algorithm is_exclusive_@return canonicalization_@throws IllegalArgumentException_if <tt>algorithm</tt> is <code>null</code>;public static AlgorithmMethod getCanonicalizationMethod(String algorithm, List<String> inclusiveNamespacePrefixes) {_        if (algorithm == null) {_            throw new IllegalArgumentException("algorithm is null")__        }_        XmlSignatureTransform canonicalizationMethod = new XmlSignatureTransform(algorithm)__        if (inclusiveNamespacePrefixes != null) {_            ExcC14NParameterSpec parameters = new ExcC14NParameterSpec(inclusiveNamespacePrefixes)__            canonicalizationMethod.setParameterSpec(parameters)__        }_        return canonicalizationMethod__    };returns,a,configuration,for,a,canonicalization,algorithm,param,algorithm,algorithm,uri,param,inclusive,namespace,prefixes,namespace,prefixes,which,should,be,treated,like,in,the,inclusive,canonicalization,only,relevant,if,the,algorithm,is,exclusive,return,canonicalization,throws,illegal,argument,exception,if,tt,algorithm,tt,is,code,null,code;public,static,algorithm,method,get,canonicalization,method,string,algorithm,list,string,inclusive,namespace,prefixes,if,algorithm,null,throw,new,illegal,argument,exception,algorithm,is,null,xml,signature,transform,canonicalization,method,new,xml,signature,transform,algorithm,if,inclusive,namespace,prefixes,null,exc,c14nparameter,spec,parameters,new,exc,c14nparameter,spec,inclusive,namespace,prefixes,canonicalization,method,set,parameter,spec,parameters,return,canonicalization,method
XmlSignatureHelper -> @Deprecated     public static byte[] tranformTextNodeToByteArray(Node node);1415211488;use {@link #tranformTextNodeToByteArray(Node, String)} instead.;@Deprecated_    public static byte[] tranformTextNodeToByteArray(Node node) {_        return tranformTextNodeToByteArray(node, null)__    };use,link,tranform,text,node,to,byte,array,node,string,instead;deprecated,public,static,byte,tranform,text,node,to,byte,array,node,node,return,tranform,text,node,to,byte,array,node,null
XmlSignatureHelper -> @Deprecated     public static byte[] tranformTextNodeToByteArray(Node node);1524063240;use {@link #tranformTextNodeToByteArray(Node, String)} instead.;@Deprecated_    public static byte[] tranformTextNodeToByteArray(Node node) {_        return tranformTextNodeToByteArray(node, null)__    };use,link,tranform,text,node,to,byte,array,node,string,instead;deprecated,public,static,byte,tranform,text,node,to,byte,array,node,node,return,tranform,text,node,to,byte,array,node,null
XmlSignatureHelper -> @Deprecated     public static byte[] tranformTextNodeToByteArray(Node node);1537290824;use {@link #tranformTextNodeToByteArray(Node, String)} instead.;@Deprecated_    public static byte[] tranformTextNodeToByteArray(Node node) {_        return tranformTextNodeToByteArray(node, null)__    };use,link,tranform,text,node,to,byte,array,node,string,instead;deprecated,public,static,byte,tranform,text,node,to,byte,array,node,node,return,tranform,text,node,to,byte,array,node,null
XmlSignatureHelper -> public static AlgorithmMethod getXPath2Transform(String xpath, String filter, Map<String, String> namespaceMap);1377611504;Returns a configuration for an XPATH2 transformation which consists of_several XPATH expressions.__@param xpathAndFilterList_list of XPATH expressions with their filters_@param namespaceMap_namespace map, key is the prefix, value is the namespace, can_be <code>null</code>_@throws IllegalArgumentException_if <tt>xpathAndFilterList</tt> is <code>null</code> or empty,_or the specified filter values are neither "intersect", nor_"subtract", nor "union"_@return XPATH transformation;public static AlgorithmMethod getXPath2Transform(String xpath, String filter, Map<String, String> namespaceMap) {_        XPathAndFilter xpathAndFilter = new XPathAndFilter()__        xpathAndFilter.setXpath(xpath)__        xpathAndFilter.setFilter(filter)__        List<XPathAndFilter> list = new ArrayList<XmlSignatureHelper.XPathAndFilter>(1)__        list.add(xpathAndFilter)__        return getXPath2Transform(list, namespaceMap)__    };returns,a,configuration,for,an,xpath2,transformation,which,consists,of,several,xpath,expressions,param,xpath,and,filter,list,list,of,xpath,expressions,with,their,filters,param,namespace,map,namespace,map,key,is,the,prefix,value,is,the,namespace,can,be,code,null,code,throws,illegal,argument,exception,if,tt,xpath,and,filter,list,tt,is,code,null,code,or,empty,or,the,specified,filter,values,are,neither,intersect,nor,subtract,nor,union,return,xpath,transformation;public,static,algorithm,method,get,xpath2transform,string,xpath,string,filter,map,string,string,namespace,map,xpath,and,filter,xpath,and,filter,new,xpath,and,filter,xpath,and,filter,set,xpath,xpath,xpath,and,filter,set,filter,filter,list,xpath,and,filter,list,new,array,list,xml,signature,helper,xpath,and,filter,1,list,add,xpath,and,filter,return,get,xpath2transform,list,namespace,map
XmlSignatureHelper -> public static AlgorithmMethod getXPath2Transform(String xpath, String filter, Map<String, String> namespaceMap);1377611504;Returns a configuration for an XPATH2 transformation which consists of_several XPATH expressions.__@param xpathAndFilterList_list of XPATH expressions with their filters_@param namespaceMap_namespace map, key is the prefix, value is the namespace, can_be <code>null</code>_@throws IllegalArgumentException_if <tt>xpathAndFilterList</tt> is <code>null</code> or empty,_or the specified filter values are neither "intersect", nor_"subtract", nor "union"_@return XPATH transformation;public static AlgorithmMethod getXPath2Transform(String xpath, String filter, Map<String, String> namespaceMap) {_        XPathAndFilter xpathAndFilter = new XPathAndFilter()__        xpathAndFilter.setXpath(xpath)__        xpathAndFilter.setFilter(filter)__        List<XPathAndFilter> list = new ArrayList<XmlSignatureHelper.XPathAndFilter>(1)__        list.add(xpathAndFilter)__        return getXPath2Transform(list, namespaceMap)__    };returns,a,configuration,for,an,xpath2,transformation,which,consists,of,several,xpath,expressions,param,xpath,and,filter,list,list,of,xpath,expressions,with,their,filters,param,namespace,map,namespace,map,key,is,the,prefix,value,is,the,namespace,can,be,code,null,code,throws,illegal,argument,exception,if,tt,xpath,and,filter,list,tt,is,code,null,code,or,empty,or,the,specified,filter,values,are,neither,intersect,nor,subtract,nor,union,return,xpath,transformation;public,static,algorithm,method,get,xpath2transform,string,xpath,string,filter,map,string,string,namespace,map,xpath,and,filter,xpath,and,filter,new,xpath,and,filter,xpath,and,filter,set,xpath,xpath,xpath,and,filter,set,filter,filter,list,xpath,and,filter,list,new,array,list,xml,signature,helper,xpath,and,filter,1,list,add,xpath,and,filter,return,get,xpath2transform,list,namespace,map
XmlSignatureHelper -> public static AlgorithmMethod getXPath2Transform(String xpath, String filter, Map<String, String> namespaceMap);1378890246;Returns a configuration for an XPATH2 transformation which consists of_several XPATH expressions.__@param xpathAndFilterList_list of XPATH expressions with their filters_@param namespaceMap_namespace map, key is the prefix, value is the namespace, can_be <code>null</code>_@throws IllegalArgumentException_if <tt>xpathAndFilterList</tt> is <code>null</code> or empty,_or the specified filter values are neither "intersect", nor_"subtract", nor "union"_@return XPATH transformation;public static AlgorithmMethod getXPath2Transform(String xpath, String filter, Map<String, String> namespaceMap) {_        XPathAndFilter xpathAndFilter = new XPathAndFilter()__        xpathAndFilter.setXpath(xpath)__        xpathAndFilter.setFilter(filter)__        List<XPathAndFilter> list = new ArrayList<XmlSignatureHelper.XPathAndFilter>(1)__        list.add(xpathAndFilter)__        return getXPath2Transform(list, namespaceMap)__    };returns,a,configuration,for,an,xpath2,transformation,which,consists,of,several,xpath,expressions,param,xpath,and,filter,list,list,of,xpath,expressions,with,their,filters,param,namespace,map,namespace,map,key,is,the,prefix,value,is,the,namespace,can,be,code,null,code,throws,illegal,argument,exception,if,tt,xpath,and,filter,list,tt,is,code,null,code,or,empty,or,the,specified,filter,values,are,neither,intersect,nor,subtract,nor,union,return,xpath,transformation;public,static,algorithm,method,get,xpath2transform,string,xpath,string,filter,map,string,string,namespace,map,xpath,and,filter,xpath,and,filter,new,xpath,and,filter,xpath,and,filter,set,xpath,xpath,xpath,and,filter,set,filter,filter,list,xpath,and,filter,list,new,array,list,xml,signature,helper,xpath,and,filter,1,list,add,xpath,and,filter,return,get,xpath2transform,list,namespace,map
XmlSignatureHelper -> public static AlgorithmMethod getXPath2Transform(String xpath, String filter, Map<String, String> namespaceMap);1379267751;Returns a configuration for an XPATH2 transformation which consists of_several XPATH expressions.__@param xpathAndFilterList_list of XPATH expressions with their filters_@param namespaceMap_namespace map, key is the prefix, value is the namespace, can_be <code>null</code>_@throws IllegalArgumentException_if <tt>xpathAndFilterList</tt> is <code>null</code> or empty,_or the specified filter values are neither "intersect", nor_"subtract", nor "union"_@return XPATH transformation;public static AlgorithmMethod getXPath2Transform(String xpath, String filter, Map<String, String> namespaceMap) {_        XPathAndFilter xpathAndFilter = new XPathAndFilter()__        xpathAndFilter.setXpath(xpath)__        xpathAndFilter.setFilter(filter)__        List<XPathAndFilter> list = new ArrayList<XmlSignatureHelper.XPathAndFilter>(1)__        list.add(xpathAndFilter)__        return getXPath2Transform(list, namespaceMap)__    };returns,a,configuration,for,an,xpath2,transformation,which,consists,of,several,xpath,expressions,param,xpath,and,filter,list,list,of,xpath,expressions,with,their,filters,param,namespace,map,namespace,map,key,is,the,prefix,value,is,the,namespace,can,be,code,null,code,throws,illegal,argument,exception,if,tt,xpath,and,filter,list,tt,is,code,null,code,or,empty,or,the,specified,filter,values,are,neither,intersect,nor,subtract,nor,union,return,xpath,transformation;public,static,algorithm,method,get,xpath2transform,string,xpath,string,filter,map,string,string,namespace,map,xpath,and,filter,xpath,and,filter,new,xpath,and,filter,xpath,and,filter,set,xpath,xpath,xpath,and,filter,set,filter,filter,list,xpath,and,filter,list,new,array,list,xml,signature,helper,xpath,and,filter,1,list,add,xpath,and,filter,return,get,xpath2transform,list,namespace,map
XmlSignatureHelper -> public static AlgorithmMethod getXPath2Transform(String xpath, String filter, Map<String, String> namespaceMap);1415211488;Returns a configuration for an XPATH2 transformation which consists of_several XPATH expressions.__@param xpathAndFilterList_list of XPATH expressions with their filters_@param namespaceMap_namespace map, key is the prefix, value is the namespace, can_be <code>null</code>_@throws IllegalArgumentException_if <tt>xpathAndFilterList</tt> is <code>null</code> or empty,_or the specified filter values are neither "intersect", nor_"subtract", nor "union"_@return XPATH transformation;public static AlgorithmMethod getXPath2Transform(String xpath, String filter, Map<String, String> namespaceMap) {_        XPathAndFilter xpathAndFilter = new XPathAndFilter()__        xpathAndFilter.setXpath(xpath)__        xpathAndFilter.setFilter(filter)__        List<XPathAndFilter> list = new ArrayList<XmlSignatureHelper.XPathAndFilter>(1)__        list.add(xpathAndFilter)__        return getXPath2Transform(list, namespaceMap)__    };returns,a,configuration,for,an,xpath2,transformation,which,consists,of,several,xpath,expressions,param,xpath,and,filter,list,list,of,xpath,expressions,with,their,filters,param,namespace,map,namespace,map,key,is,the,prefix,value,is,the,namespace,can,be,code,null,code,throws,illegal,argument,exception,if,tt,xpath,and,filter,list,tt,is,code,null,code,or,empty,or,the,specified,filter,values,are,neither,intersect,nor,subtract,nor,union,return,xpath,transformation;public,static,algorithm,method,get,xpath2transform,string,xpath,string,filter,map,string,string,namespace,map,xpath,and,filter,xpath,and,filter,new,xpath,and,filter,xpath,and,filter,set,xpath,xpath,xpath,and,filter,set,filter,filter,list,xpath,and,filter,list,new,array,list,xml,signature,helper,xpath,and,filter,1,list,add,xpath,and,filter,return,get,xpath2transform,list,namespace,map
XmlSignatureHelper -> public static AlgorithmMethod getXPath2Transform(String xpath, String filter, Map<String, String> namespaceMap);1524063240;Returns a configuration for an XPATH2 transformation which consists of_several XPATH expressions.__@param xpathAndFilterList_list of XPATH expressions with their filters_@param namespaceMap_namespace map, key is the prefix, value is the namespace, can_be <code>null</code>_@throws IllegalArgumentException_if <tt>xpathAndFilterList</tt> is <code>null</code> or empty,_or the specified filter values are neither "intersect", nor_"subtract", nor "union"_@return XPATH transformation;public static AlgorithmMethod getXPath2Transform(String xpath, String filter, Map<String, String> namespaceMap) {_        XPathAndFilter xpathAndFilter = new XPathAndFilter()__        xpathAndFilter.setXpath(xpath)__        xpathAndFilter.setFilter(filter)__        List<XPathAndFilter> list = new ArrayList<>(1)__        list.add(xpathAndFilter)__        return getXPath2Transform(list, namespaceMap)__    };returns,a,configuration,for,an,xpath2,transformation,which,consists,of,several,xpath,expressions,param,xpath,and,filter,list,list,of,xpath,expressions,with,their,filters,param,namespace,map,namespace,map,key,is,the,prefix,value,is,the,namespace,can,be,code,null,code,throws,illegal,argument,exception,if,tt,xpath,and,filter,list,tt,is,code,null,code,or,empty,or,the,specified,filter,values,are,neither,intersect,nor,subtract,nor,union,return,xpath,transformation;public,static,algorithm,method,get,xpath2transform,string,xpath,string,filter,map,string,string,namespace,map,xpath,and,filter,xpath,and,filter,new,xpath,and,filter,xpath,and,filter,set,xpath,xpath,xpath,and,filter,set,filter,filter,list,xpath,and,filter,list,new,array,list,1,list,add,xpath,and,filter,return,get,xpath2transform,list,namespace,map
XmlSignatureHelper -> public static AlgorithmMethod getXPath2Transform(String xpath, String filter, Map<String, String> namespaceMap);1537290824;Returns a configuration for an XPATH2 transformation which consists of_several XPATH expressions.__@param xpathAndFilterList_list of XPATH expressions with their filters_@param namespaceMap_namespace map, key is the prefix, value is the namespace, can_be <code>null</code>_@throws IllegalArgumentException_if <tt>xpathAndFilterList</tt> is <code>null</code> or empty,_or the specified filter values are neither "intersect", nor_"subtract", nor "union"_@return XPATH transformation;public static AlgorithmMethod getXPath2Transform(String xpath, String filter, Map<String, String> namespaceMap) {_        XPathAndFilter xpathAndFilter = new XPathAndFilter()__        xpathAndFilter.setXpath(xpath)__        xpathAndFilter.setFilter(filter)__        List<XPathAndFilter> list = new ArrayList<>(1)__        list.add(xpathAndFilter)__        return getXPath2Transform(list, namespaceMap)__    };returns,a,configuration,for,an,xpath2,transformation,which,consists,of,several,xpath,expressions,param,xpath,and,filter,list,list,of,xpath,expressions,with,their,filters,param,namespace,map,namespace,map,key,is,the,prefix,value,is,the,namespace,can,be,code,null,code,throws,illegal,argument,exception,if,tt,xpath,and,filter,list,tt,is,code,null,code,or,empty,or,the,specified,filter,values,are,neither,intersect,nor,subtract,nor,union,return,xpath,transformation;public,static,algorithm,method,get,xpath2transform,string,xpath,string,filter,map,string,string,namespace,map,xpath,and,filter,xpath,and,filter,new,xpath,and,filter,xpath,and,filter,set,xpath,xpath,xpath,and,filter,set,filter,filter,list,xpath,and,filter,list,new,array,list,1,list,add,xpath,and,filter,return,get,xpath2transform,list,namespace,map
XmlSignatureHelper -> public static AlgorithmMethod getXPath2Transform(String xpath, String filter);1377611504;Returns a configuration for an XPATH2 transformation.__@param xpath_XPATH expression_@param filter_possible values are "intersect", "subtract", "union"_@throws IllegalArgumentException_if <tt>xpath</tt> or <tt>filter</tt> is <code>null</code>, or_is neither "intersect", nor "subtract", nor "union"_@return XPATH transformation;public static AlgorithmMethod getXPath2Transform(String xpath, String filter) {_        return getXPath2Transform(xpath, filter, null)__    };returns,a,configuration,for,an,xpath2,transformation,param,xpath,xpath,expression,param,filter,possible,values,are,intersect,subtract,union,throws,illegal,argument,exception,if,tt,xpath,tt,or,tt,filter,tt,is,code,null,code,or,is,neither,intersect,nor,subtract,nor,union,return,xpath,transformation;public,static,algorithm,method,get,xpath2transform,string,xpath,string,filter,return,get,xpath2transform,xpath,filter,null
XmlSignatureHelper -> public static AlgorithmMethod getXPath2Transform(String xpath, String filter);1377611504;Returns a configuration for an XPATH2 transformation.__@param xpath_XPATH expression_@param filter_possible values are "intersect", "subtract", "union"_@throws IllegalArgumentException_if <tt>xpath</tt> or <tt>filter</tt> is <code>null</code>, or_is neither "intersect", nor "subtract", nor "union"_@return XPATH transformation;public static AlgorithmMethod getXPath2Transform(String xpath, String filter) {_        return getXPath2Transform(xpath, filter, null)__    };returns,a,configuration,for,an,xpath2,transformation,param,xpath,xpath,expression,param,filter,possible,values,are,intersect,subtract,union,throws,illegal,argument,exception,if,tt,xpath,tt,or,tt,filter,tt,is,code,null,code,or,is,neither,intersect,nor,subtract,nor,union,return,xpath,transformation;public,static,algorithm,method,get,xpath2transform,string,xpath,string,filter,return,get,xpath2transform,xpath,filter,null
XmlSignatureHelper -> public static AlgorithmMethod getXPath2Transform(String xpath, String filter);1378890246;Returns a configuration for an XPATH2 transformation.__@param xpath_XPATH expression_@param filter_possible values are "intersect", "subtract", "union"_@throws IllegalArgumentException_if <tt>xpath</tt> or <tt>filter</tt> is <code>null</code>, or_is neither "intersect", nor "subtract", nor "union"_@return XPATH transformation;public static AlgorithmMethod getXPath2Transform(String xpath, String filter) {_        return getXPath2Transform(xpath, filter, null)__    };returns,a,configuration,for,an,xpath2,transformation,param,xpath,xpath,expression,param,filter,possible,values,are,intersect,subtract,union,throws,illegal,argument,exception,if,tt,xpath,tt,or,tt,filter,tt,is,code,null,code,or,is,neither,intersect,nor,subtract,nor,union,return,xpath,transformation;public,static,algorithm,method,get,xpath2transform,string,xpath,string,filter,return,get,xpath2transform,xpath,filter,null
XmlSignatureHelper -> public static AlgorithmMethod getXPath2Transform(String xpath, String filter);1379267751;Returns a configuration for an XPATH2 transformation.__@param xpath_XPATH expression_@param filter_possible values are "intersect", "subtract", "union"_@throws IllegalArgumentException_if <tt>xpath</tt> or <tt>filter</tt> is <code>null</code>, or_is neither "intersect", nor "subtract", nor "union"_@return XPATH transformation;public static AlgorithmMethod getXPath2Transform(String xpath, String filter) {_        return getXPath2Transform(xpath, filter, null)__    };returns,a,configuration,for,an,xpath2,transformation,param,xpath,xpath,expression,param,filter,possible,values,are,intersect,subtract,union,throws,illegal,argument,exception,if,tt,xpath,tt,or,tt,filter,tt,is,code,null,code,or,is,neither,intersect,nor,subtract,nor,union,return,xpath,transformation;public,static,algorithm,method,get,xpath2transform,string,xpath,string,filter,return,get,xpath2transform,xpath,filter,null
XmlSignatureHelper -> public static AlgorithmMethod getXPath2Transform(String xpath, String filter);1415211488;Returns a configuration for an XPATH2 transformation.__@param xpath_XPATH expression_@param filter_possible values are "intersect", "subtract", "union"_@throws IllegalArgumentException_if <tt>xpath</tt> or <tt>filter</tt> is <code>null</code>, or_is neither "intersect", nor "subtract", nor "union"_@return XPATH transformation;public static AlgorithmMethod getXPath2Transform(String xpath, String filter) {_        return getXPath2Transform(xpath, filter, null)__    };returns,a,configuration,for,an,xpath2,transformation,param,xpath,xpath,expression,param,filter,possible,values,are,intersect,subtract,union,throws,illegal,argument,exception,if,tt,xpath,tt,or,tt,filter,tt,is,code,null,code,or,is,neither,intersect,nor,subtract,nor,union,return,xpath,transformation;public,static,algorithm,method,get,xpath2transform,string,xpath,string,filter,return,get,xpath2transform,xpath,filter,null
XmlSignatureHelper -> public static AlgorithmMethod getXPath2Transform(String xpath, String filter);1524063240;Returns a configuration for an XPATH2 transformation.__@param xpath_XPATH expression_@param filter_possible values are "intersect", "subtract", "union"_@throws IllegalArgumentException_if <tt>xpath</tt> or <tt>filter</tt> is <code>null</code>, or_is neither "intersect", nor "subtract", nor "union"_@return XPATH transformation;public static AlgorithmMethod getXPath2Transform(String xpath, String filter) {_        return getXPath2Transform(xpath, filter, null)__    };returns,a,configuration,for,an,xpath2,transformation,param,xpath,xpath,expression,param,filter,possible,values,are,intersect,subtract,union,throws,illegal,argument,exception,if,tt,xpath,tt,or,tt,filter,tt,is,code,null,code,or,is,neither,intersect,nor,subtract,nor,union,return,xpath,transformation;public,static,algorithm,method,get,xpath2transform,string,xpath,string,filter,return,get,xpath2transform,xpath,filter,null
XmlSignatureHelper -> public static AlgorithmMethod getXPath2Transform(String xpath, String filter);1537290824;Returns a configuration for an XPATH2 transformation.__@param xpath_XPATH expression_@param filter_possible values are "intersect", "subtract", "union"_@throws IllegalArgumentException_if <tt>xpath</tt> or <tt>filter</tt> is <code>null</code>, or_is neither "intersect", nor "subtract", nor "union"_@return XPATH transformation;public static AlgorithmMethod getXPath2Transform(String xpath, String filter) {_        return getXPath2Transform(xpath, filter, null)__    };returns,a,configuration,for,an,xpath2,transformation,param,xpath,xpath,expression,param,filter,possible,values,are,intersect,subtract,union,throws,illegal,argument,exception,if,tt,xpath,tt,or,tt,filter,tt,is,code,null,code,or,is,neither,intersect,nor,subtract,nor,union,return,xpath,transformation;public,static,algorithm,method,get,xpath2transform,string,xpath,string,filter,return,get,xpath2transform,xpath,filter,null
XmlSignatureHelper -> public static AlgorithmMethod getXPath2Transform(List<XPathAndFilter> xpathAndFilterList);1377611504;Returns a configuration for an XPATH2 transformation which consists of_several XPATH expressions.__@param xpathAndFilterList_list of XPATH expressions with their filters_@throws IllegalArgumentException_if <tt>xpathAndFilterList</tt> is <code>null</code> or empty,_or the specified filte values are neither "intersect", nor_"subtract", nor "union"_@return XPATH transformation;public static AlgorithmMethod getXPath2Transform(List<XPathAndFilter> xpathAndFilterList) {_        return getXPath2Transform(xpathAndFilterList, null)__    };returns,a,configuration,for,an,xpath2,transformation,which,consists,of,several,xpath,expressions,param,xpath,and,filter,list,list,of,xpath,expressions,with,their,filters,throws,illegal,argument,exception,if,tt,xpath,and,filter,list,tt,is,code,null,code,or,empty,or,the,specified,filte,values,are,neither,intersect,nor,subtract,nor,union,return,xpath,transformation;public,static,algorithm,method,get,xpath2transform,list,xpath,and,filter,xpath,and,filter,list,return,get,xpath2transform,xpath,and,filter,list,null
XmlSignatureHelper -> public static AlgorithmMethod getXPath2Transform(List<XPathAndFilter> xpathAndFilterList);1377611504;Returns a configuration for an XPATH2 transformation which consists of_several XPATH expressions.__@param xpathAndFilterList_list of XPATH expressions with their filters_@throws IllegalArgumentException_if <tt>xpathAndFilterList</tt> is <code>null</code> or empty,_or the specified filte values are neither "intersect", nor_"subtract", nor "union"_@return XPATH transformation;public static AlgorithmMethod getXPath2Transform(List<XPathAndFilter> xpathAndFilterList) {_        return getXPath2Transform(xpathAndFilterList, null)__    };returns,a,configuration,for,an,xpath2,transformation,which,consists,of,several,xpath,expressions,param,xpath,and,filter,list,list,of,xpath,expressions,with,their,filters,throws,illegal,argument,exception,if,tt,xpath,and,filter,list,tt,is,code,null,code,or,empty,or,the,specified,filte,values,are,neither,intersect,nor,subtract,nor,union,return,xpath,transformation;public,static,algorithm,method,get,xpath2transform,list,xpath,and,filter,xpath,and,filter,list,return,get,xpath2transform,xpath,and,filter,list,null
XmlSignatureHelper -> public static AlgorithmMethod getXPath2Transform(List<XPathAndFilter> xpathAndFilterList);1378890246;Returns a configuration for an XPATH2 transformation which consists of_several XPATH expressions.__@param xpathAndFilterList_list of XPATH expressions with their filters_@throws IllegalArgumentException_if <tt>xpathAndFilterList</tt> is <code>null</code> or empty,_or the specified filte values are neither "intersect", nor_"subtract", nor "union"_@return XPATH transformation;public static AlgorithmMethod getXPath2Transform(List<XPathAndFilter> xpathAndFilterList) {_        return getXPath2Transform(xpathAndFilterList, null)__    };returns,a,configuration,for,an,xpath2,transformation,which,consists,of,several,xpath,expressions,param,xpath,and,filter,list,list,of,xpath,expressions,with,their,filters,throws,illegal,argument,exception,if,tt,xpath,and,filter,list,tt,is,code,null,code,or,empty,or,the,specified,filte,values,are,neither,intersect,nor,subtract,nor,union,return,xpath,transformation;public,static,algorithm,method,get,xpath2transform,list,xpath,and,filter,xpath,and,filter,list,return,get,xpath2transform,xpath,and,filter,list,null
XmlSignatureHelper -> public static AlgorithmMethod getXPath2Transform(List<XPathAndFilter> xpathAndFilterList);1379267751;Returns a configuration for an XPATH2 transformation which consists of_several XPATH expressions.__@param xpathAndFilterList_list of XPATH expressions with their filters_@throws IllegalArgumentException_if <tt>xpathAndFilterList</tt> is <code>null</code> or empty,_or the specified filte values are neither "intersect", nor_"subtract", nor "union"_@return XPATH transformation;public static AlgorithmMethod getXPath2Transform(List<XPathAndFilter> xpathAndFilterList) {_        return getXPath2Transform(xpathAndFilterList, null)__    };returns,a,configuration,for,an,xpath2,transformation,which,consists,of,several,xpath,expressions,param,xpath,and,filter,list,list,of,xpath,expressions,with,their,filters,throws,illegal,argument,exception,if,tt,xpath,and,filter,list,tt,is,code,null,code,or,empty,or,the,specified,filte,values,are,neither,intersect,nor,subtract,nor,union,return,xpath,transformation;public,static,algorithm,method,get,xpath2transform,list,xpath,and,filter,xpath,and,filter,list,return,get,xpath2transform,xpath,and,filter,list,null
XmlSignatureHelper -> public static AlgorithmMethod getXPath2Transform(List<XPathAndFilter> xpathAndFilterList);1415211488;Returns a configuration for an XPATH2 transformation which consists of_several XPATH expressions.__@param xpathAndFilterList_list of XPATH expressions with their filters_@throws IllegalArgumentException_if <tt>xpathAndFilterList</tt> is <code>null</code> or empty,_or the specified filte values are neither "intersect", nor_"subtract", nor "union"_@return XPATH transformation;public static AlgorithmMethod getXPath2Transform(List<XPathAndFilter> xpathAndFilterList) {_        return getXPath2Transform(xpathAndFilterList, null)__    };returns,a,configuration,for,an,xpath2,transformation,which,consists,of,several,xpath,expressions,param,xpath,and,filter,list,list,of,xpath,expressions,with,their,filters,throws,illegal,argument,exception,if,tt,xpath,and,filter,list,tt,is,code,null,code,or,empty,or,the,specified,filte,values,are,neither,intersect,nor,subtract,nor,union,return,xpath,transformation;public,static,algorithm,method,get,xpath2transform,list,xpath,and,filter,xpath,and,filter,list,return,get,xpath2transform,xpath,and,filter,list,null
XmlSignatureHelper -> public static AlgorithmMethod getXPath2Transform(List<XPathAndFilter> xpathAndFilterList);1524063240;Returns a configuration for an XPATH2 transformation which consists of_several XPATH expressions.__@param xpathAndFilterList_list of XPATH expressions with their filters_@throws IllegalArgumentException_if <tt>xpathAndFilterList</tt> is <code>null</code> or empty,_or the specified filte values are neither "intersect", nor_"subtract", nor "union"_@return XPATH transformation;public static AlgorithmMethod getXPath2Transform(List<XPathAndFilter> xpathAndFilterList) {_        return getXPath2Transform(xpathAndFilterList, null)__    };returns,a,configuration,for,an,xpath2,transformation,which,consists,of,several,xpath,expressions,param,xpath,and,filter,list,list,of,xpath,expressions,with,their,filters,throws,illegal,argument,exception,if,tt,xpath,and,filter,list,tt,is,code,null,code,or,empty,or,the,specified,filte,values,are,neither,intersect,nor,subtract,nor,union,return,xpath,transformation;public,static,algorithm,method,get,xpath2transform,list,xpath,and,filter,xpath,and,filter,list,return,get,xpath2transform,xpath,and,filter,list,null
XmlSignatureHelper -> public static AlgorithmMethod getXPath2Transform(List<XPathAndFilter> xpathAndFilterList);1537290824;Returns a configuration for an XPATH2 transformation which consists of_several XPATH expressions.__@param xpathAndFilterList_list of XPATH expressions with their filters_@throws IllegalArgumentException_if <tt>xpathAndFilterList</tt> is <code>null</code> or empty,_or the specified filte values are neither "intersect", nor_"subtract", nor "union"_@return XPATH transformation;public static AlgorithmMethod getXPath2Transform(List<XPathAndFilter> xpathAndFilterList) {_        return getXPath2Transform(xpathAndFilterList, null)__    };returns,a,configuration,for,an,xpath2,transformation,which,consists,of,several,xpath,expressions,param,xpath,and,filter,list,list,of,xpath,expressions,with,their,filters,throws,illegal,argument,exception,if,tt,xpath,and,filter,list,tt,is,code,null,code,or,empty,or,the,specified,filte,values,are,neither,intersect,nor,subtract,nor,union,return,xpath,transformation;public,static,algorithm,method,get,xpath2transform,list,xpath,and,filter,xpath,and,filter,list,return,get,xpath2transform,xpath,and,filter,list,null
XmlSignatureHelper -> public static AlgorithmMethod getXPathTransform(String xpath);1377611504;Returns a configuration for an XPATH transformation.__@param xpath_XPATH expression_@return XPATH transformation_@throws IllegalArgumentException_if <tt>xpath</tt> is <code>null</code>;public static AlgorithmMethod getXPathTransform(String xpath) {_        return getXPathTransform(xpath, null)__    };returns,a,configuration,for,an,xpath,transformation,param,xpath,xpath,expression,return,xpath,transformation,throws,illegal,argument,exception,if,tt,xpath,tt,is,code,null,code;public,static,algorithm,method,get,xpath,transform,string,xpath,return,get,xpath,transform,xpath,null
XmlSignatureHelper -> public static AlgorithmMethod getXPathTransform(String xpath);1377611504;Returns a configuration for an XPATH transformation.__@param xpath_XPATH expression_@return XPATH transformation_@throws IllegalArgumentException_if <tt>xpath</tt> is <code>null</code>;public static AlgorithmMethod getXPathTransform(String xpath) {_        return getXPathTransform(xpath, null)__    };returns,a,configuration,for,an,xpath,transformation,param,xpath,xpath,expression,return,xpath,transformation,throws,illegal,argument,exception,if,tt,xpath,tt,is,code,null,code;public,static,algorithm,method,get,xpath,transform,string,xpath,return,get,xpath,transform,xpath,null
XmlSignatureHelper -> public static AlgorithmMethod getXPathTransform(String xpath);1378890246;Returns a configuration for an XPATH transformation.__@param xpath_XPATH expression_@return XPATH transformation_@throws IllegalArgumentException_if <tt>xpath</tt> is <code>null</code>;public static AlgorithmMethod getXPathTransform(String xpath) {_        return getXPathTransform(xpath, null)__    };returns,a,configuration,for,an,xpath,transformation,param,xpath,xpath,expression,return,xpath,transformation,throws,illegal,argument,exception,if,tt,xpath,tt,is,code,null,code;public,static,algorithm,method,get,xpath,transform,string,xpath,return,get,xpath,transform,xpath,null
XmlSignatureHelper -> public static AlgorithmMethod getXPathTransform(String xpath);1379267751;Returns a configuration for an XPATH transformation.__@param xpath_XPATH expression_@return XPATH transformation_@throws IllegalArgumentException_if <tt>xpath</tt> is <code>null</code>;public static AlgorithmMethod getXPathTransform(String xpath) {_        return getXPathTransform(xpath, null)__    };returns,a,configuration,for,an,xpath,transformation,param,xpath,xpath,expression,return,xpath,transformation,throws,illegal,argument,exception,if,tt,xpath,tt,is,code,null,code;public,static,algorithm,method,get,xpath,transform,string,xpath,return,get,xpath,transform,xpath,null
XmlSignatureHelper -> public static AlgorithmMethod getXPathTransform(String xpath);1415211488;Returns a configuration for an XPATH transformation.__@param xpath_XPATH expression_@return XPATH transformation_@throws IllegalArgumentException_if <tt>xpath</tt> is <code>null</code>;public static AlgorithmMethod getXPathTransform(String xpath) {_        return getXPathTransform(xpath, null)__    };returns,a,configuration,for,an,xpath,transformation,param,xpath,xpath,expression,return,xpath,transformation,throws,illegal,argument,exception,if,tt,xpath,tt,is,code,null,code;public,static,algorithm,method,get,xpath,transform,string,xpath,return,get,xpath,transform,xpath,null
XmlSignatureHelper -> public static AlgorithmMethod getXPathTransform(String xpath);1524063240;Returns a configuration for an XPATH transformation.__@param xpath_XPATH expression_@return XPATH transformation_@throws IllegalArgumentException_if <tt>xpath</tt> is <code>null</code>;public static AlgorithmMethod getXPathTransform(String xpath) {_        return getXPathTransform(xpath, null)__    };returns,a,configuration,for,an,xpath,transformation,param,xpath,xpath,expression,return,xpath,transformation,throws,illegal,argument,exception,if,tt,xpath,tt,is,code,null,code;public,static,algorithm,method,get,xpath,transform,string,xpath,return,get,xpath,transform,xpath,null
XmlSignatureHelper -> public static AlgorithmMethod getXPathTransform(String xpath);1537290824;Returns a configuration for an XPATH transformation.__@param xpath_XPATH expression_@return XPATH transformation_@throws IllegalArgumentException_if <tt>xpath</tt> is <code>null</code>;public static AlgorithmMethod getXPathTransform(String xpath) {_        return getXPathTransform(xpath, null)__    };returns,a,configuration,for,an,xpath,transformation,param,xpath,xpath,expression,return,xpath,transformation,throws,illegal,argument,exception,if,tt,xpath,tt,is,code,null,code;public,static,algorithm,method,get,xpath,transform,string,xpath,return,get,xpath,transform,xpath,null
XmlSignatureHelper -> public static AlgorithmMethod getXPath2Transform(List<XPathAndFilter> xpathAndFilterList, Map<String, String> namespaceMap);1377611504;Returns a configuration for an XPATH2 transformation which consists of_several XPATH expressions.__@param xpathAndFilterList_list of XPATH expressions with their filters_@param namespaceMap_namespace map, key is the prefix, value is the namespace, can_be <code>null</code>_@throws IllegalArgumentException_if <tt>xpathAndFilterList</tt> is <code>null</code> or empty,_or the specified filter values are neither "intersect", nor_"subtract", nor "union"_@return XPATH transformation;public static AlgorithmMethod getXPath2Transform(List<XPathAndFilter> xpathAndFilterList, Map<String, String> namespaceMap) {_        if (xpathAndFilterList == null) {_            throw new IllegalArgumentException("xpathAndFilterList is null")__        }_        if (xpathAndFilterList.isEmpty()) {_            throw new IllegalArgumentException("XPath and filter list is empty")__        }_        List<XPathType> list = getXPathTypeList(xpathAndFilterList, namespaceMap)__        XmlSignatureTransform transformXPath = new XmlSignatureTransform(Transform.XPATH2)__        transformXPath.setParameterSpec(new XPathFilter2ParameterSpec(list))__        return transformXPath__    };returns,a,configuration,for,an,xpath2,transformation,which,consists,of,several,xpath,expressions,param,xpath,and,filter,list,list,of,xpath,expressions,with,their,filters,param,namespace,map,namespace,map,key,is,the,prefix,value,is,the,namespace,can,be,code,null,code,throws,illegal,argument,exception,if,tt,xpath,and,filter,list,tt,is,code,null,code,or,empty,or,the,specified,filter,values,are,neither,intersect,nor,subtract,nor,union,return,xpath,transformation;public,static,algorithm,method,get,xpath2transform,list,xpath,and,filter,xpath,and,filter,list,map,string,string,namespace,map,if,xpath,and,filter,list,null,throw,new,illegal,argument,exception,xpath,and,filter,list,is,null,if,xpath,and,filter,list,is,empty,throw,new,illegal,argument,exception,xpath,and,filter,list,is,empty,list,xpath,type,list,get,xpath,type,list,xpath,and,filter,list,namespace,map,xml,signature,transform,transform,xpath,new,xml,signature,transform,transform,xpath2,transform,xpath,set,parameter,spec,new,xpath,filter2parameter,spec,list,return,transform,xpath
XmlSignatureHelper -> public static AlgorithmMethod getXPath2Transform(List<XPathAndFilter> xpathAndFilterList, Map<String, String> namespaceMap);1377611504;Returns a configuration for an XPATH2 transformation which consists of_several XPATH expressions.__@param xpathAndFilterList_list of XPATH expressions with their filters_@param namespaceMap_namespace map, key is the prefix, value is the namespace, can_be <code>null</code>_@throws IllegalArgumentException_if <tt>xpathAndFilterList</tt> is <code>null</code> or empty,_or the specified filter values are neither "intersect", nor_"subtract", nor "union"_@return XPATH transformation;public static AlgorithmMethod getXPath2Transform(List<XPathAndFilter> xpathAndFilterList, Map<String, String> namespaceMap) {_        if (xpathAndFilterList == null) {_            throw new IllegalArgumentException("xpathAndFilterList is null")__        }_        if (xpathAndFilterList.isEmpty()) {_            throw new IllegalArgumentException("XPath and filter list is empty")__        }_        List<XPathType> list = getXPathTypeList(xpathAndFilterList, namespaceMap)__        XmlSignatureTransform transformXPath = new XmlSignatureTransform(Transform.XPATH2)__        transformXPath.setParameterSpec(new XPathFilter2ParameterSpec(list))__        return transformXPath__    };returns,a,configuration,for,an,xpath2,transformation,which,consists,of,several,xpath,expressions,param,xpath,and,filter,list,list,of,xpath,expressions,with,their,filters,param,namespace,map,namespace,map,key,is,the,prefix,value,is,the,namespace,can,be,code,null,code,throws,illegal,argument,exception,if,tt,xpath,and,filter,list,tt,is,code,null,code,or,empty,or,the,specified,filter,values,are,neither,intersect,nor,subtract,nor,union,return,xpath,transformation;public,static,algorithm,method,get,xpath2transform,list,xpath,and,filter,xpath,and,filter,list,map,string,string,namespace,map,if,xpath,and,filter,list,null,throw,new,illegal,argument,exception,xpath,and,filter,list,is,null,if,xpath,and,filter,list,is,empty,throw,new,illegal,argument,exception,xpath,and,filter,list,is,empty,list,xpath,type,list,get,xpath,type,list,xpath,and,filter,list,namespace,map,xml,signature,transform,transform,xpath,new,xml,signature,transform,transform,xpath2,transform,xpath,set,parameter,spec,new,xpath,filter2parameter,spec,list,return,transform,xpath
XmlSignatureHelper -> public static AlgorithmMethod getXPath2Transform(List<XPathAndFilter> xpathAndFilterList, Map<String, String> namespaceMap);1378890246;Returns a configuration for an XPATH2 transformation which consists of_several XPATH expressions.__@param xpathAndFilterList_list of XPATH expressions with their filters_@param namespaceMap_namespace map, key is the prefix, value is the namespace, can_be <code>null</code>_@throws IllegalArgumentException_if <tt>xpathAndFilterList</tt> is <code>null</code> or empty,_or the specified filter values are neither "intersect", nor_"subtract", nor "union"_@return XPATH transformation;public static AlgorithmMethod getXPath2Transform(List<XPathAndFilter> xpathAndFilterList, Map<String, String> namespaceMap) {_        if (xpathAndFilterList == null) {_            throw new IllegalArgumentException("xpathAndFilterList is null")__        }_        if (xpathAndFilterList.isEmpty()) {_            throw new IllegalArgumentException("XPath and filter list is empty")__        }_        List<XPathType> list = getXPathTypeList(xpathAndFilterList, namespaceMap)__        XmlSignatureTransform transformXPath = new XmlSignatureTransform(Transform.XPATH2)__        transformXPath.setParameterSpec(new XPathFilter2ParameterSpec(list))__        return transformXPath__    };returns,a,configuration,for,an,xpath2,transformation,which,consists,of,several,xpath,expressions,param,xpath,and,filter,list,list,of,xpath,expressions,with,their,filters,param,namespace,map,namespace,map,key,is,the,prefix,value,is,the,namespace,can,be,code,null,code,throws,illegal,argument,exception,if,tt,xpath,and,filter,list,tt,is,code,null,code,or,empty,or,the,specified,filter,values,are,neither,intersect,nor,subtract,nor,union,return,xpath,transformation;public,static,algorithm,method,get,xpath2transform,list,xpath,and,filter,xpath,and,filter,list,map,string,string,namespace,map,if,xpath,and,filter,list,null,throw,new,illegal,argument,exception,xpath,and,filter,list,is,null,if,xpath,and,filter,list,is,empty,throw,new,illegal,argument,exception,xpath,and,filter,list,is,empty,list,xpath,type,list,get,xpath,type,list,xpath,and,filter,list,namespace,map,xml,signature,transform,transform,xpath,new,xml,signature,transform,transform,xpath2,transform,xpath,set,parameter,spec,new,xpath,filter2parameter,spec,list,return,transform,xpath
XmlSignatureHelper -> public static AlgorithmMethod getXPath2Transform(List<XPathAndFilter> xpathAndFilterList, Map<String, String> namespaceMap);1379267751;Returns a configuration for an XPATH2 transformation which consists of_several XPATH expressions.__@param xpathAndFilterList_list of XPATH expressions with their filters_@param namespaceMap_namespace map, key is the prefix, value is the namespace, can_be <code>null</code>_@throws IllegalArgumentException_if <tt>xpathAndFilterList</tt> is <code>null</code> or empty,_or the specified filter values are neither "intersect", nor_"subtract", nor "union"_@return XPATH transformation;public static AlgorithmMethod getXPath2Transform(List<XPathAndFilter> xpathAndFilterList, Map<String, String> namespaceMap) {_        if (xpathAndFilterList == null) {_            throw new IllegalArgumentException("xpathAndFilterList is null")__        }_        if (xpathAndFilterList.isEmpty()) {_            throw new IllegalArgumentException("XPath and filter list is empty")__        }_        List<XPathType> list = getXPathTypeList(xpathAndFilterList, namespaceMap)__        XmlSignatureTransform transformXPath = new XmlSignatureTransform(Transform.XPATH2)__        transformXPath.setParameterSpec(new XPathFilter2ParameterSpec(list))__        return transformXPath__    };returns,a,configuration,for,an,xpath2,transformation,which,consists,of,several,xpath,expressions,param,xpath,and,filter,list,list,of,xpath,expressions,with,their,filters,param,namespace,map,namespace,map,key,is,the,prefix,value,is,the,namespace,can,be,code,null,code,throws,illegal,argument,exception,if,tt,xpath,and,filter,list,tt,is,code,null,code,or,empty,or,the,specified,filter,values,are,neither,intersect,nor,subtract,nor,union,return,xpath,transformation;public,static,algorithm,method,get,xpath2transform,list,xpath,and,filter,xpath,and,filter,list,map,string,string,namespace,map,if,xpath,and,filter,list,null,throw,new,illegal,argument,exception,xpath,and,filter,list,is,null,if,xpath,and,filter,list,is,empty,throw,new,illegal,argument,exception,xpath,and,filter,list,is,empty,list,xpath,type,list,get,xpath,type,list,xpath,and,filter,list,namespace,map,xml,signature,transform,transform,xpath,new,xml,signature,transform,transform,xpath2,transform,xpath,set,parameter,spec,new,xpath,filter2parameter,spec,list,return,transform,xpath
XmlSignatureHelper -> public static AlgorithmMethod getXPath2Transform(List<XPathAndFilter> xpathAndFilterList, Map<String, String> namespaceMap);1415211488;Returns a configuration for an XPATH2 transformation which consists of_several XPATH expressions.__@param xpathAndFilterList_list of XPATH expressions with their filters_@param namespaceMap_namespace map, key is the prefix, value is the namespace, can_be <code>null</code>_@throws IllegalArgumentException_if <tt>xpathAndFilterList</tt> is <code>null</code> or empty,_or the specified filter values are neither "intersect", nor_"subtract", nor "union"_@return XPATH transformation;public static AlgorithmMethod getXPath2Transform(List<XPathAndFilter> xpathAndFilterList, Map<String, String> namespaceMap) {_        if (xpathAndFilterList == null) {_            throw new IllegalArgumentException("xpathAndFilterList is null")__        }_        if (xpathAndFilterList.isEmpty()) {_            throw new IllegalArgumentException("XPath and filter list is empty")__        }_        List<XPathType> list = getXPathTypeList(xpathAndFilterList, namespaceMap)__        XmlSignatureTransform transformXPath = new XmlSignatureTransform(Transform.XPATH2)__        transformXPath.setParameterSpec(new XPathFilter2ParameterSpec(list))__        return transformXPath__    };returns,a,configuration,for,an,xpath2,transformation,which,consists,of,several,xpath,expressions,param,xpath,and,filter,list,list,of,xpath,expressions,with,their,filters,param,namespace,map,namespace,map,key,is,the,prefix,value,is,the,namespace,can,be,code,null,code,throws,illegal,argument,exception,if,tt,xpath,and,filter,list,tt,is,code,null,code,or,empty,or,the,specified,filter,values,are,neither,intersect,nor,subtract,nor,union,return,xpath,transformation;public,static,algorithm,method,get,xpath2transform,list,xpath,and,filter,xpath,and,filter,list,map,string,string,namespace,map,if,xpath,and,filter,list,null,throw,new,illegal,argument,exception,xpath,and,filter,list,is,null,if,xpath,and,filter,list,is,empty,throw,new,illegal,argument,exception,xpath,and,filter,list,is,empty,list,xpath,type,list,get,xpath,type,list,xpath,and,filter,list,namespace,map,xml,signature,transform,transform,xpath,new,xml,signature,transform,transform,xpath2,transform,xpath,set,parameter,spec,new,xpath,filter2parameter,spec,list,return,transform,xpath
XmlSignatureHelper -> public static AlgorithmMethod getXPath2Transform(List<XPathAndFilter> xpathAndFilterList, Map<String, String> namespaceMap);1524063240;Returns a configuration for an XPATH2 transformation which consists of_several XPATH expressions.__@param xpathAndFilterList_list of XPATH expressions with their filters_@param namespaceMap_namespace map, key is the prefix, value is the namespace, can_be <code>null</code>_@throws IllegalArgumentException_if <tt>xpathAndFilterList</tt> is <code>null</code> or empty,_or the specified filter values are neither "intersect", nor_"subtract", nor "union"_@return XPATH transformation;public static AlgorithmMethod getXPath2Transform(List<XPathAndFilter> xpathAndFilterList, Map<String, String> namespaceMap) {_        if (xpathAndFilterList == null) {_            throw new IllegalArgumentException("xpathAndFilterList is null")__        }_        if (xpathAndFilterList.isEmpty()) {_            throw new IllegalArgumentException("XPath and filter list is empty")__        }_        List<XPathType> list = getXPathTypeList(xpathAndFilterList, namespaceMap)__        XmlSignatureTransform transformXPath = new XmlSignatureTransform(Transform.XPATH2)__        transformXPath.setParameterSpec(new XPathFilter2ParameterSpec(list))__        return transformXPath__    };returns,a,configuration,for,an,xpath2,transformation,which,consists,of,several,xpath,expressions,param,xpath,and,filter,list,list,of,xpath,expressions,with,their,filters,param,namespace,map,namespace,map,key,is,the,prefix,value,is,the,namespace,can,be,code,null,code,throws,illegal,argument,exception,if,tt,xpath,and,filter,list,tt,is,code,null,code,or,empty,or,the,specified,filter,values,are,neither,intersect,nor,subtract,nor,union,return,xpath,transformation;public,static,algorithm,method,get,xpath2transform,list,xpath,and,filter,xpath,and,filter,list,map,string,string,namespace,map,if,xpath,and,filter,list,null,throw,new,illegal,argument,exception,xpath,and,filter,list,is,null,if,xpath,and,filter,list,is,empty,throw,new,illegal,argument,exception,xpath,and,filter,list,is,empty,list,xpath,type,list,get,xpath,type,list,xpath,and,filter,list,namespace,map,xml,signature,transform,transform,xpath,new,xml,signature,transform,transform,xpath2,transform,xpath,set,parameter,spec,new,xpath,filter2parameter,spec,list,return,transform,xpath
XmlSignatureHelper -> public static AlgorithmMethod getXPath2Transform(List<XPathAndFilter> xpathAndFilterList, Map<String, String> namespaceMap);1537290824;Returns a configuration for an XPATH2 transformation which consists of_several XPATH expressions.__@param xpathAndFilterList_list of XPATH expressions with their filters_@param namespaceMap_namespace map, key is the prefix, value is the namespace, can_be <code>null</code>_@throws IllegalArgumentException_if <tt>xpathAndFilterList</tt> is <code>null</code> or empty,_or the specified filter values are neither "intersect", nor_"subtract", nor "union"_@return XPATH transformation;public static AlgorithmMethod getXPath2Transform(List<XPathAndFilter> xpathAndFilterList, Map<String, String> namespaceMap) {_        if (xpathAndFilterList == null) {_            throw new IllegalArgumentException("xpathAndFilterList is null")__        }_        if (xpathAndFilterList.isEmpty()) {_            throw new IllegalArgumentException("XPath and filter list is empty")__        }_        List<XPathType> list = getXPathTypeList(xpathAndFilterList, namespaceMap)__        XmlSignatureTransform transformXPath = new XmlSignatureTransform(Transform.XPATH2)__        transformXPath.setParameterSpec(new XPathFilter2ParameterSpec(list))__        return transformXPath__    };returns,a,configuration,for,an,xpath2,transformation,which,consists,of,several,xpath,expressions,param,xpath,and,filter,list,list,of,xpath,expressions,with,their,filters,param,namespace,map,namespace,map,key,is,the,prefix,value,is,the,namespace,can,be,code,null,code,throws,illegal,argument,exception,if,tt,xpath,and,filter,list,tt,is,code,null,code,or,empty,or,the,specified,filter,values,are,neither,intersect,nor,subtract,nor,union,return,xpath,transformation;public,static,algorithm,method,get,xpath2transform,list,xpath,and,filter,xpath,and,filter,list,map,string,string,namespace,map,if,xpath,and,filter,list,null,throw,new,illegal,argument,exception,xpath,and,filter,list,is,null,if,xpath,and,filter,list,is,empty,throw,new,illegal,argument,exception,xpath,and,filter,list,is,empty,list,xpath,type,list,get,xpath,type,list,xpath,and,filter,list,namespace,map,xml,signature,transform,transform,xpath,new,xml,signature,transform,transform,xpath2,transform,xpath,set,parameter,spec,new,xpath,filter2parameter,spec,list,return,transform,xpath
XmlSignatureHelper -> public static AlgorithmMethod getBase64Transform();1377611504;Returns a configuration for a base64 transformation.__@return Base64 transformation;public static AlgorithmMethod getBase64Transform() {_        return new XmlSignatureTransform(Transform.BASE64)__    };returns,a,configuration,for,a,base64,transformation,return,base64,transformation;public,static,algorithm,method,get,base64transform,return,new,xml,signature,transform,transform,base64
XmlSignatureHelper -> public static AlgorithmMethod getBase64Transform();1377611504;Returns a configuration for a base64 transformation.__@return Base64 transformation;public static AlgorithmMethod getBase64Transform() {_        return new XmlSignatureTransform(Transform.BASE64)__    };returns,a,configuration,for,a,base64,transformation,return,base64,transformation;public,static,algorithm,method,get,base64transform,return,new,xml,signature,transform,transform,base64
XmlSignatureHelper -> public static AlgorithmMethod getBase64Transform();1378890246;Returns a configuration for a base64 transformation.__@return Base64 transformation;public static AlgorithmMethod getBase64Transform() {_        return new XmlSignatureTransform(Transform.BASE64)__    };returns,a,configuration,for,a,base64,transformation,return,base64,transformation;public,static,algorithm,method,get,base64transform,return,new,xml,signature,transform,transform,base64
XmlSignatureHelper -> public static AlgorithmMethod getBase64Transform();1379267751;Returns a configuration for a base64 transformation.__@return Base64 transformation;public static AlgorithmMethod getBase64Transform() {_        return new XmlSignatureTransform(Transform.BASE64)__    };returns,a,configuration,for,a,base64,transformation,return,base64,transformation;public,static,algorithm,method,get,base64transform,return,new,xml,signature,transform,transform,base64
XmlSignatureHelper -> public static AlgorithmMethod getBase64Transform();1415211488;Returns a configuration for a base64 transformation.__@return Base64 transformation;public static AlgorithmMethod getBase64Transform() {_        return new XmlSignatureTransform(Transform.BASE64)__    };returns,a,configuration,for,a,base64,transformation,return,base64,transformation;public,static,algorithm,method,get,base64transform,return,new,xml,signature,transform,transform,base64
XmlSignatureHelper -> public static AlgorithmMethod getBase64Transform();1524063240;Returns a configuration for a base64 transformation.__@return Base64 transformation;public static AlgorithmMethod getBase64Transform() {_        return new XmlSignatureTransform(Transform.BASE64)__    };returns,a,configuration,for,a,base64,transformation,return,base64,transformation;public,static,algorithm,method,get,base64transform,return,new,xml,signature,transform,transform,base64
XmlSignatureHelper -> public static AlgorithmMethod getBase64Transform();1537290824;Returns a configuration for a base64 transformation.__@return Base64 transformation;public static AlgorithmMethod getBase64Transform() {_        return new XmlSignatureTransform(Transform.BASE64)__    };returns,a,configuration,for,a,base64,transformation,return,base64,transformation;public,static,algorithm,method,get,base64transform,return,new,xml,signature,transform,transform,base64
