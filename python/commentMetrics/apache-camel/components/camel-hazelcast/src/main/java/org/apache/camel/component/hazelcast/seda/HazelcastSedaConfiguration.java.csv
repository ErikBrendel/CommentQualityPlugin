# id;timestamp;commentText;codeText;commentWords;codeWords
HazelcastSedaConfiguration -> public void setTransacted(boolean transacted);1451771348;If set to true then the consumer runs in transaction mode, where the messages in the seda queue will only be removed_if the transaction commits, which happens when the processing is complete.;public void setTransacted(boolean transacted) {_        this.transacted = transacted__    };if,set,to,true,then,the,consumer,runs,in,transaction,mode,where,the,messages,in,the,seda,queue,will,only,be,removed,if,the,transaction,commits,which,happens,when,the,processing,is,complete;public,void,set,transacted,boolean,transacted,this,transacted,transacted
HazelcastSedaConfiguration -> public void setTransacted(boolean transacted);1479916234;If set to true then the consumer runs in transaction mode, where the messages in the seda queue will only be removed_if the transaction commits, which happens when the processing is complete.;public void setTransacted(boolean transacted) {_        this.transacted = transacted__    };if,set,to,true,then,the,consumer,runs,in,transaction,mode,where,the,messages,in,the,seda,queue,will,only,be,removed,if,the,transaction,commits,which,happens,when,the,processing,is,complete;public,void,set,transacted,boolean,transacted,this,transacted,transacted
HazelcastSedaConfiguration -> public void setTransacted(boolean transacted);1497729435;If set to true then the consumer runs in transaction mode, where the messages in the seda queue will only be removed_if the transaction commits, which happens when the processing is complete.;public void setTransacted(boolean transacted) {_        this.transacted = transacted__    };if,set,to,true,then,the,consumer,runs,in,transaction,mode,where,the,messages,in,the,seda,queue,will,only,be,removed,if,the,transaction,commits,which,happens,when,the,processing,is,complete;public,void,set,transacted,boolean,transacted,this,transacted,transacted
HazelcastSedaConfiguration -> public void setPollTimeout(int pollTimeout);1451771348;The timeout used when consuming from the SEDA queue. When a timeout occurs, the consumer can check whether_it is allowed to continue running. Setting a lower value allows the consumer to react more quickly upon shutdown.;public void setPollTimeout(int pollTimeout) {_        this.pollTimeout = pollTimeout__    };the,timeout,used,when,consuming,from,the,seda,queue,when,a,timeout,occurs,the,consumer,can,check,whether,it,is,allowed,to,continue,running,setting,a,lower,value,allows,the,consumer,to,react,more,quickly,upon,shutdown;public,void,set,poll,timeout,int,poll,timeout,this,poll,timeout,poll,timeout
HazelcastSedaConfiguration -> public void setPollTimeout(int pollTimeout);1479916234;The timeout used when consuming from the SEDA queue. When a timeout occurs, the consumer can check whether_it is allowed to continue running. Setting a lower value allows the consumer to react more quickly upon shutdown.;public void setPollTimeout(int pollTimeout) {_        this.pollTimeout = pollTimeout__    };the,timeout,used,when,consuming,from,the,seda,queue,when,a,timeout,occurs,the,consumer,can,check,whether,it,is,allowed,to,continue,running,setting,a,lower,value,allows,the,consumer,to,react,more,quickly,upon,shutdown;public,void,set,poll,timeout,int,poll,timeout,this,poll,timeout,poll,timeout
HazelcastSedaConfiguration -> public void setPollTimeout(int pollTimeout);1497729435;The timeout used when consuming from the SEDA queue. When a timeout occurs, the consumer can check whether_it is allowed to continue running. Setting a lower value allows the consumer to react more quickly upon shutdown.;public void setPollTimeout(int pollTimeout) {_        this.pollTimeout = pollTimeout__    };the,timeout,used,when,consuming,from,the,seda,queue,when,a,timeout,occurs,the,consumer,can,check,whether,it,is,allowed,to,continue,running,setting,a,lower,value,allows,the,consumer,to,react,more,quickly,upon,shutdown;public,void,set,poll,timeout,int,poll,timeout,this,poll,timeout,poll,timeout
HazelcastSedaConfiguration -> @Deprecated     public int getPollInterval();1417356478;@deprecated use pollTimeout instead;@Deprecated_    public int getPollInterval() {_        return pollTimeout__    };deprecated,use,poll,timeout,instead;deprecated,public,int,get,poll,interval,return,poll,timeout
HazelcastSedaConfiguration -> @Deprecated     public int getPollInterval();1451771348;@deprecated use pollTimeout instead;@Deprecated_    public int getPollInterval() {_        return pollTimeout__    };deprecated,use,poll,timeout,instead;deprecated,public,int,get,poll,interval,return,poll,timeout
HazelcastSedaConfiguration -> @Deprecated     public int getPollInterval();1479916234;@deprecated use pollTimeout instead;@Deprecated_    public int getPollInterval() {_        return pollTimeout__    };deprecated,use,poll,timeout,instead;deprecated,public,int,get,poll,interval,return,poll,timeout
HazelcastSedaConfiguration -> @Deprecated     public int getPollInterval();1497729435;@deprecated use pollTimeout instead;@Deprecated_    public int getPollInterval() {_        return pollTimeout__    };deprecated,use,poll,timeout,instead;deprecated,public,int,get,poll,interval,return,poll,timeout
HazelcastSedaConfiguration -> public void setConcurrentConsumers(final int concurrentConsumers);1451771348;To use concurrent consumers polling from the SEDA queue.;public void setConcurrentConsumers(final int concurrentConsumers) {_        this.concurrentConsumers = concurrentConsumers__    };to,use,concurrent,consumers,polling,from,the,seda,queue;public,void,set,concurrent,consumers,final,int,concurrent,consumers,this,concurrent,consumers,concurrent,consumers
HazelcastSedaConfiguration -> public void setConcurrentConsumers(final int concurrentConsumers);1479916234;To use concurrent consumers polling from the SEDA queue.;public void setConcurrentConsumers(final int concurrentConsumers) {_        this.concurrentConsumers = concurrentConsumers__    };to,use,concurrent,consumers,polling,from,the,seda,queue;public,void,set,concurrent,consumers,final,int,concurrent,consumers,this,concurrent,consumers,concurrent,consumers
HazelcastSedaConfiguration -> public void setConcurrentConsumers(final int concurrentConsumers);1497729435;To use concurrent consumers polling from the SEDA queue.;public void setConcurrentConsumers(final int concurrentConsumers) {_        this.concurrentConsumers = concurrentConsumers__    };to,use,concurrent,consumers,polling,from,the,seda,queue;public,void,set,concurrent,consumers,final,int,concurrent,consumers,this,concurrent,consumers,concurrent,consumers
HazelcastSedaConfiguration -> @Deprecated     public void setPollInterval(int pollInterval);1417356478;@deprecated use pollTimeout instead;@Deprecated_    public void setPollInterval(int pollInterval) {_        this.pollTimeout = pollInterval__    };deprecated,use,poll,timeout,instead;deprecated,public,void,set,poll,interval,int,poll,interval,this,poll,timeout,poll,interval
HazelcastSedaConfiguration -> @Deprecated     public void setPollInterval(int pollInterval);1451771348;@deprecated use pollTimeout instead;@Deprecated_    public void setPollInterval(int pollInterval) {_        this.pollTimeout = pollInterval__    };deprecated,use,poll,timeout,instead;deprecated,public,void,set,poll,interval,int,poll,interval,this,poll,timeout,poll,interval
HazelcastSedaConfiguration -> @Deprecated     public void setPollInterval(int pollInterval);1479916234;@deprecated use pollTimeout instead;@Deprecated_    public void setPollInterval(int pollInterval) {_        this.pollTimeout = pollInterval__    };deprecated,use,poll,timeout,instead;deprecated,public,void,set,poll,interval,int,poll,interval,this,poll,timeout,poll,interval
HazelcastSedaConfiguration -> @Deprecated     public void setPollInterval(int pollInterval);1497729435;@deprecated use pollTimeout instead;@Deprecated_    public void setPollInterval(int pollInterval) {_        this.pollTimeout = pollInterval__    };deprecated,use,poll,timeout,instead;deprecated,public,void,set,poll,interval,int,poll,interval,this,poll,timeout,poll,interval
HazelcastSedaConfiguration -> public void setTransferExchange(boolean transferExchange);1451771348;If set to true the whole Exchange will be transfered. If header or body contains not serializable objects, they will be skipped.;public void setTransferExchange(boolean transferExchange) {_        this.transferExchange = transferExchange__    };if,set,to,true,the,whole,exchange,will,be,transfered,if,header,or,body,contains,not,serializable,objects,they,will,be,skipped;public,void,set,transfer,exchange,boolean,transfer,exchange,this,transfer,exchange,transfer,exchange
HazelcastSedaConfiguration -> public void setTransferExchange(boolean transferExchange);1479916234;If set to true the whole Exchange will be transfered. If header or body contains not serializable objects, they will be skipped.;public void setTransferExchange(boolean transferExchange) {_        this.transferExchange = transferExchange__    };if,set,to,true,the,whole,exchange,will,be,transfered,if,header,or,body,contains,not,serializable,objects,they,will,be,skipped;public,void,set,transfer,exchange,boolean,transfer,exchange,this,transfer,exchange,transfer,exchange
HazelcastSedaConfiguration -> public void setTransferExchange(boolean transferExchange);1497729435;If set to true the whole Exchange will be transfered. If header or body contains not serializable objects, they will be skipped.;public void setTransferExchange(boolean transferExchange) {_        this.transferExchange = transferExchange__    };if,set,to,true,the,whole,exchange,will,be,transfered,if,header,or,body,contains,not,serializable,objects,they,will,be,skipped;public,void,set,transfer,exchange,boolean,transfer,exchange,this,transfer,exchange,transfer,exchange
