# id;timestamp;commentText;codeText;commentWords;codeWords
HazelcastMapProducer -> private void get(Object oid, Exchange exchange);1379418909;find an object by the given id and give it back;private void get(Object oid, Exchange exchange) {_        exchange.getOut().setBody(this.cache.get(oid))__    };find,an,object,by,the,given,id,and,give,it,back;private,void,get,object,oid,exchange,exchange,exchange,get,out,set,body,this,cache,get,oid
HazelcastMapProducer -> private void get(Object oid, Exchange exchange);1381373054;find an object by the given id and give it back;private void get(Object oid, Exchange exchange) {_        exchange.getOut().setBody(this.cache.get(oid))__    };find,an,object,by,the,given,id,and,give,it,back;private,void,get,object,oid,exchange,exchange,exchange,get,out,set,body,this,cache,get,oid
HazelcastMapProducer -> private void get(Object oid, Exchange exchange);1430509840;find an object by the given id and give it back;private void get(Object oid, Exchange exchange) {_        exchange.getOut().setBody(this.cache.get(oid))__    };find,an,object,by,the,given,id,and,give,it,back;private,void,get,object,oid,exchange,exchange,exchange,get,out,set,body,this,cache,get,oid
HazelcastMapProducer -> private void get(Object oid, Exchange exchange);1430515082;find an object by the given id and give it back;private void get(Object oid, Exchange exchange) {_        exchange.getOut().setBody(this.cache.get(oid))__    };find,an,object,by,the,given,id,and,give,it,back;private,void,get,object,oid,exchange,exchange,exchange,get,out,set,body,this,cache,get,oid
HazelcastMapProducer -> private void get(Object oid, Exchange exchange);1430559817;find an object by the given id and give it back;private void get(Object oid, Exchange exchange) {_        exchange.getOut().setBody(this.cache.get(oid))__    };find,an,object,by,the,given,id,and,give,it,back;private,void,get,object,oid,exchange,exchange,exchange,get,out,set,body,this,cache,get,oid
HazelcastMapProducer -> private void get(Object oid, Exchange exchange);1430578243;find an object by the given id and give it back;private void get(Object oid, Exchange exchange) {_        exchange.getOut().setBody(this.cache.get(oid))__    };find,an,object,by,the,given,id,and,give,it,back;private,void,get,object,oid,exchange,exchange,exchange,get,out,set,body,this,cache,get,oid
HazelcastMapProducer -> private void get(Object oid, Exchange exchange);1430640745;find an object by the given id and give it back;private void get(Object oid, Exchange exchange) {_        exchange.getOut().setBody(this.cache.get(oid))__    };find,an,object,by,the,given,id,and,give,it,back;private,void,get,object,oid,exchange,exchange,exchange,get,out,set,body,this,cache,get,oid
HazelcastMapProducer -> private void get(Object oid, Exchange exchange);1430642059;find an object by the given id and give it back;private void get(Object oid, Exchange exchange) {_        exchange.getOut().setBody(this.cache.get(oid))__    };find,an,object,by,the,given,id,and,give,it,back;private,void,get,object,oid,exchange,exchange,exchange,get,out,set,body,this,cache,get,oid
HazelcastMapProducer -> private void get(Object oid, Exchange exchange);1430643154;find an object by the given id and give it back;private void get(Object oid, Exchange exchange) {_        exchange.getOut().setBody(this.cache.get(oid))__    };find,an,object,by,the,given,id,and,give,it,back;private,void,get,object,oid,exchange,exchange,exchange,get,out,set,body,this,cache,get,oid
HazelcastMapProducer -> private void get(Object oid, Exchange exchange);1430661803;find an object by the given id and give it back;private void get(Object oid, Exchange exchange) {_        exchange.getOut().setBody(this.cache.get(oid))__    };find,an,object,by,the,given,id,and,give,it,back;private,void,get,object,oid,exchange,exchange,exchange,get,out,set,body,this,cache,get,oid
HazelcastMapProducer -> private void get(Object oid, Exchange exchange);1434035676;find an object by the given id and give it back;private void get(Object oid, Exchange exchange) {_        exchange.getOut().setBody(this.cache.get(oid))__    };find,an,object,by,the,given,id,and,give,it,back;private,void,get,object,oid,exchange,exchange,exchange,get,out,set,body,this,cache,get,oid
HazelcastMapProducer -> private void get(Object oid, Exchange exchange);1434035676;find an object by the given id and give it back;private void get(Object oid, Exchange exchange) {_        exchange.getOut().setBody(this.cache.get(oid))__    };find,an,object,by,the,given,id,and,give,it,back;private,void,get,object,oid,exchange,exchange,exchange,get,out,set,body,this,cache,get,oid
HazelcastMapProducer -> private void get(Object oid, Exchange exchange);1434447864;find an object by the given id and give it back;private void get(Object oid, Exchange exchange) {_        exchange.getOut().setBody(this.cache.get(oid))__    };find,an,object,by,the,given,id,and,give,it,back;private,void,get,object,oid,exchange,exchange,exchange,get,out,set,body,this,cache,get,oid
HazelcastMapProducer -> private void get(Object oid, Exchange exchange);1466175389;find an object by the given id and give it back;private void get(Object oid, Exchange exchange) {_        exchange.getOut().setBody(this.cache.get(oid))__    };find,an,object,by,the,given,id,and,give,it,back;private,void,get,object,oid,exchange,exchange,exchange,get,out,set,body,this,cache,get,oid
HazelcastMapProducer -> private void get(Object oid, Exchange exchange);1498119790;find an object by the given id and give it back;private void get(Object oid, Exchange exchange) {_        exchange.getOut().setBody(this.cache.get(oid))__    };find,an,object,by,the,given,id,and,give,it,back;private,void,get,object,oid,exchange,exchange,exchange,get,out,set,body,this,cache,get,oid
HazelcastMapProducer -> private void query(String query, Exchange exchange);1298888014;query map with a sql like syntax (see http://www.hazelcast.com/);private void query(String query, Exchange exchange) {_        Collection<Object> result = this.cache.values(new SqlPredicate(query))__        exchange.getOut().setBody(result)__    };query,map,with,a,sql,like,syntax,see,http,www,hazelcast,com;private,void,query,string,query,exchange,exchange,collection,object,result,this,cache,values,new,sql,predicate,query,exchange,get,out,set,body,result
HazelcastMapProducer -> private void query(String query, Exchange exchange);1319440549;query map with a sql like syntax (see http://www.hazelcast.com/);private void query(String query, Exchange exchange) {_        Collection<Object> result = this.cache.values(new SqlPredicate(query))__        exchange.getOut().setBody(result)__    };query,map,with,a,sql,like,syntax,see,http,www,hazelcast,com;private,void,query,string,query,exchange,exchange,collection,object,result,this,cache,values,new,sql,predicate,query,exchange,get,out,set,body,result
HazelcastMapProducer -> private void query(String query, Exchange exchange);1326907405;query map with a sql like syntax (see http://www.hazelcast.com/);private void query(String query, Exchange exchange) {_        Collection<Object> result = this.cache.values(new SqlPredicate(query))__        exchange.getOut().setBody(result)__    };query,map,with,a,sql,like,syntax,see,http,www,hazelcast,com;private,void,query,string,query,exchange,exchange,collection,object,result,this,cache,values,new,sql,predicate,query,exchange,get,out,set,body,result
HazelcastMapProducer -> private void query(String query, Exchange exchange);1379418909;query map with a sql like syntax (see http://www.hazelcast.com/);private void query(String query, Exchange exchange) {_        Collection<Object> result = this.cache.values(new SqlPredicate(query))__        exchange.getOut().setBody(result)__    };query,map,with,a,sql,like,syntax,see,http,www,hazelcast,com;private,void,query,string,query,exchange,exchange,collection,object,result,this,cache,values,new,sql,predicate,query,exchange,get,out,set,body,result
HazelcastMapProducer -> private void query(String query, Exchange exchange);1381373054;query map with a sql like syntax (see http://www.hazelcast.com/);private void query(String query, Exchange exchange) {_        Collection<Object> result = this.cache.values(new SqlPredicate(query))__        exchange.getOut().setBody(result)__    };query,map,with,a,sql,like,syntax,see,http,www,hazelcast,com;private,void,query,string,query,exchange,exchange,collection,object,result,this,cache,values,new,sql,predicate,query,exchange,get,out,set,body,result
HazelcastMapProducer -> private void query(String query, Exchange exchange);1430509840;query map with a sql like syntax (see http://www.hazelcast.com/);private void query(String query, Exchange exchange) {_        Collection<Object> result__        if (ObjectHelper.isNotEmpty(query) && query != null) {_            result = this.cache.values(new SqlPredicate(query))__        } else {_            result = this.cache.values()__        }_        exchange.getOut().setBody(result)__    };query,map,with,a,sql,like,syntax,see,http,www,hazelcast,com;private,void,query,string,query,exchange,exchange,collection,object,result,if,object,helper,is,not,empty,query,query,null,result,this,cache,values,new,sql,predicate,query,else,result,this,cache,values,exchange,get,out,set,body,result
HazelcastMapProducer -> private void query(String query, Exchange exchange);1430515082;query map with a sql like syntax (see http://www.hazelcast.com/);private void query(String query, Exchange exchange) {_        Collection<Object> result__        if (ObjectHelper.isNotEmpty(query)) {_            result = this.cache.values(new SqlPredicate(query))__        } else {_            result = this.cache.values()__        }_        exchange.getOut().setBody(result)__    };query,map,with,a,sql,like,syntax,see,http,www,hazelcast,com;private,void,query,string,query,exchange,exchange,collection,object,result,if,object,helper,is,not,empty,query,result,this,cache,values,new,sql,predicate,query,else,result,this,cache,values,exchange,get,out,set,body,result
HazelcastMapProducer -> private void query(String query, Exchange exchange);1430559817;query map with a sql like syntax (see http://www.hazelcast.com/);private void query(String query, Exchange exchange) {_        Collection<Object> result__        if (ObjectHelper.isNotEmpty(query)) {_            result = this.cache.values(new SqlPredicate(query))__        } else {_            result = this.cache.values()__        }_        exchange.getOut().setBody(result)__    };query,map,with,a,sql,like,syntax,see,http,www,hazelcast,com;private,void,query,string,query,exchange,exchange,collection,object,result,if,object,helper,is,not,empty,query,result,this,cache,values,new,sql,predicate,query,else,result,this,cache,values,exchange,get,out,set,body,result
HazelcastMapProducer -> private void query(String query, Exchange exchange);1430578243;query map with a sql like syntax (see http://www.hazelcast.com/);private void query(String query, Exchange exchange) {_        Collection<Object> result__        if (ObjectHelper.isNotEmpty(query)) {_            result = this.cache.values(new SqlPredicate(query))__        } else {_            result = this.cache.values()__        }_        exchange.getOut().setBody(result)__    };query,map,with,a,sql,like,syntax,see,http,www,hazelcast,com;private,void,query,string,query,exchange,exchange,collection,object,result,if,object,helper,is,not,empty,query,result,this,cache,values,new,sql,predicate,query,else,result,this,cache,values,exchange,get,out,set,body,result
HazelcastMapProducer -> private void query(String query, Exchange exchange);1430640745;query map with a sql like syntax (see http://www.hazelcast.com/);private void query(String query, Exchange exchange) {_        Collection<Object> result__        if (ObjectHelper.isNotEmpty(query)) {_            result = this.cache.values(new SqlPredicate(query))__        } else {_            result = this.cache.values()__        }_        exchange.getOut().setBody(result)__    };query,map,with,a,sql,like,syntax,see,http,www,hazelcast,com;private,void,query,string,query,exchange,exchange,collection,object,result,if,object,helper,is,not,empty,query,result,this,cache,values,new,sql,predicate,query,else,result,this,cache,values,exchange,get,out,set,body,result
HazelcastMapProducer -> private void query(String query, Exchange exchange);1430642059;query map with a sql like syntax (see http://www.hazelcast.com/);private void query(String query, Exchange exchange) {_        Collection<Object> result__        if (ObjectHelper.isNotEmpty(query)) {_            result = this.cache.values(new SqlPredicate(query))__        } else {_            result = this.cache.values()__        }_        exchange.getOut().setBody(result)__    };query,map,with,a,sql,like,syntax,see,http,www,hazelcast,com;private,void,query,string,query,exchange,exchange,collection,object,result,if,object,helper,is,not,empty,query,result,this,cache,values,new,sql,predicate,query,else,result,this,cache,values,exchange,get,out,set,body,result
HazelcastMapProducer -> private void query(String query, Exchange exchange);1430643154;query map with a sql like syntax (see http://www.hazelcast.com/);private void query(String query, Exchange exchange) {_        Collection<Object> result__        if (ObjectHelper.isNotEmpty(query)) {_            result = this.cache.values(new SqlPredicate(query))__        } else {_            result = this.cache.values()__        }_        exchange.getOut().setBody(result)__    };query,map,with,a,sql,like,syntax,see,http,www,hazelcast,com;private,void,query,string,query,exchange,exchange,collection,object,result,if,object,helper,is,not,empty,query,result,this,cache,values,new,sql,predicate,query,else,result,this,cache,values,exchange,get,out,set,body,result
HazelcastMapProducer -> private void query(String query, Exchange exchange);1430661803;query map with a sql like syntax (see http://www.hazelcast.com/);private void query(String query, Exchange exchange) {_        Collection<Object> result__        if (ObjectHelper.isNotEmpty(query)) {_            result = this.cache.values(new SqlPredicate(query))__        } else {_            result = this.cache.values()__        }_        exchange.getOut().setBody(result)__    };query,map,with,a,sql,like,syntax,see,http,www,hazelcast,com;private,void,query,string,query,exchange,exchange,collection,object,result,if,object,helper,is,not,empty,query,result,this,cache,values,new,sql,predicate,query,else,result,this,cache,values,exchange,get,out,set,body,result
HazelcastMapProducer -> private void query(String query, Exchange exchange);1434035676;query map with a sql like syntax (see http://www.hazelcast.com/);private void query(String query, Exchange exchange) {_        Collection<Object> result__        if (ObjectHelper.isNotEmpty(query)) {_            result = this.cache.values(new SqlPredicate(query))__        } else {_            result = this.cache.values()__        }_        exchange.getOut().setBody(result)__    };query,map,with,a,sql,like,syntax,see,http,www,hazelcast,com;private,void,query,string,query,exchange,exchange,collection,object,result,if,object,helper,is,not,empty,query,result,this,cache,values,new,sql,predicate,query,else,result,this,cache,values,exchange,get,out,set,body,result
HazelcastMapProducer -> private void query(String query, Exchange exchange);1434035676;query map with a sql like syntax (see http://www.hazelcast.com/);private void query(String query, Exchange exchange) {_        Collection<Object> result__        if (ObjectHelper.isNotEmpty(query)) {_            result = this.cache.values(new SqlPredicate(query))__        } else {_            result = this.cache.values()__        }_        exchange.getOut().setBody(result)__    };query,map,with,a,sql,like,syntax,see,http,www,hazelcast,com;private,void,query,string,query,exchange,exchange,collection,object,result,if,object,helper,is,not,empty,query,result,this,cache,values,new,sql,predicate,query,else,result,this,cache,values,exchange,get,out,set,body,result
HazelcastMapProducer -> private void query(String query, Exchange exchange);1434447864;query map with a sql like syntax (see http://www.hazelcast.com/);private void query(String query, Exchange exchange) {_        Collection<Object> result__        if (ObjectHelper.isNotEmpty(query)) {_            result = this.cache.values(new SqlPredicate(query))__        } else {_            result = this.cache.values()__        }_        exchange.getOut().setBody(result)__    };query,map,with,a,sql,like,syntax,see,http,www,hazelcast,com;private,void,query,string,query,exchange,exchange,collection,object,result,if,object,helper,is,not,empty,query,result,this,cache,values,new,sql,predicate,query,else,result,this,cache,values,exchange,get,out,set,body,result
HazelcastMapProducer -> private void query(String query, Exchange exchange);1466175389;query map with a sql like syntax (see http://www.hazelcast.com/);private void query(String query, Exchange exchange) {_        Collection<Object> result__        if (ObjectHelper.isNotEmpty(query)) {_            result = this.cache.values(new SqlPredicate(query))__        } else {_            result = this.cache.values()__        }_        exchange.getOut().setBody(result)__    };query,map,with,a,sql,like,syntax,see,http,www,hazelcast,com;private,void,query,string,query,exchange,exchange,collection,object,result,if,object,helper,is,not,empty,query,result,this,cache,values,new,sql,predicate,query,else,result,this,cache,values,exchange,get,out,set,body,result
HazelcastMapProducer -> private void query(String query, Exchange exchange);1498119790;QUERY map with a sql like syntax (see http://www.hazelcast.com/);private void query(String query, Exchange exchange) {_        Collection<Object> result__        if (ObjectHelper.isNotEmpty(query)) {_            result = this.cache.values(new SqlPredicate(query))__        } else {_            result = this.cache.values()__        }_        exchange.getOut().setBody(result)__    };query,map,with,a,sql,like,syntax,see,http,www,hazelcast,com;private,void,query,string,query,exchange,exchange,collection,object,result,if,object,helper,is,not,empty,query,result,this,cache,values,new,sql,predicate,query,else,result,this,cache,values,exchange,get,out,set,body,result
HazelcastMapProducer -> private void put(String oid, Exchange exchange);1298888014;put a new object into the cache;private void put(String oid, Exchange exchange) {_        Object body = exchange.getIn().getBody()__        this.cache.put(oid, body)__    };put,a,new,object,into,the,cache;private,void,put,string,oid,exchange,exchange,object,body,exchange,get,in,get,body,this,cache,put,oid,body
HazelcastMapProducer -> private void put(String oid, Exchange exchange);1319440549;put a new object into the cache;private void put(String oid, Exchange exchange) {_        Object body = exchange.getIn().getBody()__        this.cache.put(oid, body)__    };put,a,new,object,into,the,cache;private,void,put,string,oid,exchange,exchange,object,body,exchange,get,in,get,body,this,cache,put,oid,body
HazelcastMapProducer -> private void put(String oid, Exchange exchange);1326907405;put a new object into the cache;private void put(String oid, Exchange exchange) {_        Object body = exchange.getIn().getBody()__        this.cache.put(oid, body)__    };put,a,new,object,into,the,cache;private,void,put,string,oid,exchange,exchange,object,body,exchange,get,in,get,body,this,cache,put,oid,body
HazelcastMapProducer -> private void delete(String oid);1298888014;remove an object from the cache;private void delete(String oid) {_        this.cache.remove(oid)__    };remove,an,object,from,the,cache;private,void,delete,string,oid,this,cache,remove,oid
HazelcastMapProducer -> private void delete(String oid);1319440549;remove an object from the cache;private void delete(String oid) {_        this.cache.remove(oid)__    };remove,an,object,from,the,cache;private,void,delete,string,oid,this,cache,remove,oid
HazelcastMapProducer -> private void delete(String oid);1326907405;remove an object from the cache;private void delete(String oid) {_        this.cache.remove(oid)__    };remove,an,object,from,the,cache;private,void,delete,string,oid,this,cache,remove,oid
HazelcastMapProducer -> private void update(Object oid, Object ovalue, Exchange exchange);1430640745;Replaces the entry for given id with a specific value in the body, only if currently mapped to a given value;private void update(Object oid, Object ovalue, Exchange exchange) {_        Object body = exchange.getIn().getBody()__        this.cache.lock(oid)__        this.cache.replace(oid, ovalue, body)__        this.cache.unlock(oid)__    };replaces,the,entry,for,given,id,with,a,specific,value,in,the,body,only,if,currently,mapped,to,a,given,value;private,void,update,object,oid,object,ovalue,exchange,exchange,object,body,exchange,get,in,get,body,this,cache,lock,oid,this,cache,replace,oid,ovalue,body,this,cache,unlock,oid
HazelcastMapProducer -> private void update(Object oid, Object ovalue, Exchange exchange);1430642059;Replaces the entry for given id with a specific value in the body, only if currently mapped to a given value;private void update(Object oid, Object ovalue, Exchange exchange) {_        Object body = exchange.getIn().getBody()__        this.cache.lock(oid)__        this.cache.replace(oid, ovalue, body)__        this.cache.unlock(oid)__    };replaces,the,entry,for,given,id,with,a,specific,value,in,the,body,only,if,currently,mapped,to,a,given,value;private,void,update,object,oid,object,ovalue,exchange,exchange,object,body,exchange,get,in,get,body,this,cache,lock,oid,this,cache,replace,oid,ovalue,body,this,cache,unlock,oid
HazelcastMapProducer -> private void update(Object oid, Object ovalue, Exchange exchange);1430643154;Replaces the entry for given id with a specific value in the body, only if currently mapped to a given value;private void update(Object oid, Object ovalue, Exchange exchange) {_        Object body = exchange.getIn().getBody()__        this.cache.lock(oid)__        this.cache.replace(oid, ovalue, body)__        this.cache.unlock(oid)__    };replaces,the,entry,for,given,id,with,a,specific,value,in,the,body,only,if,currently,mapped,to,a,given,value;private,void,update,object,oid,object,ovalue,exchange,exchange,object,body,exchange,get,in,get,body,this,cache,lock,oid,this,cache,replace,oid,ovalue,body,this,cache,unlock,oid
HazelcastMapProducer -> private void update(Object oid, Object ovalue, Exchange exchange);1430661803;Replaces the entry for given id with a specific value in the body, only if currently mapped to a given value;private void update(Object oid, Object ovalue, Exchange exchange) {_        Object body = exchange.getIn().getBody()__        this.cache.lock(oid)__        this.cache.replace(oid, ovalue, body)__        this.cache.unlock(oid)__    };replaces,the,entry,for,given,id,with,a,specific,value,in,the,body,only,if,currently,mapped,to,a,given,value;private,void,update,object,oid,object,ovalue,exchange,exchange,object,body,exchange,get,in,get,body,this,cache,lock,oid,this,cache,replace,oid,ovalue,body,this,cache,unlock,oid
HazelcastMapProducer -> private void update(Object oid, Object ovalue, Exchange exchange);1434035676;Replaces the entry for given id with a specific value in the body, only if currently mapped to a given value;private void update(Object oid, Object ovalue, Exchange exchange) {_        Object body = exchange.getIn().getBody()__        this.cache.lock(oid)__        this.cache.replace(oid, ovalue, body)__        this.cache.unlock(oid)__    };replaces,the,entry,for,given,id,with,a,specific,value,in,the,body,only,if,currently,mapped,to,a,given,value;private,void,update,object,oid,object,ovalue,exchange,exchange,object,body,exchange,get,in,get,body,this,cache,lock,oid,this,cache,replace,oid,ovalue,body,this,cache,unlock,oid
HazelcastMapProducer -> private void update(Object oid, Object ovalue, Exchange exchange);1434035676;Replaces the entry for given id with a specific value in the body, only if currently mapped to a given value;private void update(Object oid, Object ovalue, Exchange exchange) {_        Object body = exchange.getIn().getBody()__        this.cache.lock(oid)__        this.cache.replace(oid, ovalue, body)__        this.cache.unlock(oid)__    };replaces,the,entry,for,given,id,with,a,specific,value,in,the,body,only,if,currently,mapped,to,a,given,value;private,void,update,object,oid,object,ovalue,exchange,exchange,object,body,exchange,get,in,get,body,this,cache,lock,oid,this,cache,replace,oid,ovalue,body,this,cache,unlock,oid
HazelcastMapProducer -> private void update(Object oid, Object ovalue, Exchange exchange);1434447864;Replaces the entry for given id with a specific value in the body, only if currently mapped to a given value;private void update(Object oid, Object ovalue, Exchange exchange) {_        Object body = exchange.getIn().getBody()__        this.cache.lock(oid)__        this.cache.replace(oid, ovalue, body)__        this.cache.unlock(oid)__    };replaces,the,entry,for,given,id,with,a,specific,value,in,the,body,only,if,currently,mapped,to,a,given,value;private,void,update,object,oid,object,ovalue,exchange,exchange,object,body,exchange,get,in,get,body,this,cache,lock,oid,this,cache,replace,oid,ovalue,body,this,cache,unlock,oid
HazelcastMapProducer -> private void update(Object oid, Object ovalue, Exchange exchange);1466175389;Replaces the entry for given id with a specific value in the body, only if currently mapped to a given value;private void update(Object oid, Object ovalue, Exchange exchange) {_        Object body = exchange.getIn().getBody()__        this.cache.lock(oid)__        this.cache.replace(oid, ovalue, body)__        this.cache.unlock(oid)__    };replaces,the,entry,for,given,id,with,a,specific,value,in,the,body,only,if,currently,mapped,to,a,given,value;private,void,update,object,oid,object,ovalue,exchange,exchange,object,body,exchange,get,in,get,body,this,cache,lock,oid,this,cache,replace,oid,ovalue,body,this,cache,unlock,oid
HazelcastMapProducer -> private void update(Object oid, Object ovalue, Exchange exchange);1498119790;Replaces the entry for given id with a specific value in the body, only if currently mapped to a given value;private void update(Object oid, Object ovalue, Exchange exchange) {_        Object body = exchange.getIn().getBody()__        this.cache.lock(oid)__        this.cache.replace(oid, ovalue, body)__        this.cache.unlock(oid)__    };replaces,the,entry,for,given,id,with,a,specific,value,in,the,body,only,if,currently,mapped,to,a,given,value;private,void,update,object,oid,object,ovalue,exchange,exchange,object,body,exchange,get,in,get,body,this,cache,lock,oid,this,cache,replace,oid,ovalue,body,this,cache,unlock,oid
HazelcastMapProducer -> private void put(Object oid, Object ttl, Object ttlUnit, Exchange exchange);1430642059;put a new object into the cache with a specific time to live;private void put(Object oid, Object ttl, Object ttlUnit, Exchange exchange) {_        Object body = exchange.getIn().getBody()__        this.cache.put(oid, body, (long) ttl, (TimeUnit) ttlUnit)__    };put,a,new,object,into,the,cache,with,a,specific,time,to,live;private,void,put,object,oid,object,ttl,object,ttl,unit,exchange,exchange,object,body,exchange,get,in,get,body,this,cache,put,oid,body,long,ttl,time,unit,ttl,unit
HazelcastMapProducer -> private void put(Object oid, Object ttl, Object ttlUnit, Exchange exchange);1430643154;put a new object into the cache with a specific time to live;private void put(Object oid, Object ttl, Object ttlUnit, Exchange exchange) {_        Object body = exchange.getIn().getBody()__        this.cache.put(oid, body, (long) ttl, (TimeUnit) ttlUnit)__    };put,a,new,object,into,the,cache,with,a,specific,time,to,live;private,void,put,object,oid,object,ttl,object,ttl,unit,exchange,exchange,object,body,exchange,get,in,get,body,this,cache,put,oid,body,long,ttl,time,unit,ttl,unit
HazelcastMapProducer -> private void put(Object oid, Object ttl, Object ttlUnit, Exchange exchange);1430661803;put a new object into the cache with a specific time to live;private void put(Object oid, Object ttl, Object ttlUnit, Exchange exchange) {_        Object body = exchange.getIn().getBody()__        this.cache.put(oid, body, (long) ttl, (TimeUnit) ttlUnit)__    };put,a,new,object,into,the,cache,with,a,specific,time,to,live;private,void,put,object,oid,object,ttl,object,ttl,unit,exchange,exchange,object,body,exchange,get,in,get,body,this,cache,put,oid,body,long,ttl,time,unit,ttl,unit
HazelcastMapProducer -> private void put(Object oid, Object ttl, Object ttlUnit, Exchange exchange);1434035676;put a new object into the cache with a specific time to live;private void put(Object oid, Object ttl, Object ttlUnit, Exchange exchange) {_        Object body = exchange.getIn().getBody()__        this.cache.put(oid, body, (long) ttl, (TimeUnit) ttlUnit)__    };put,a,new,object,into,the,cache,with,a,specific,time,to,live;private,void,put,object,oid,object,ttl,object,ttl,unit,exchange,exchange,object,body,exchange,get,in,get,body,this,cache,put,oid,body,long,ttl,time,unit,ttl,unit
HazelcastMapProducer -> private void put(Object oid, Object ttl, Object ttlUnit, Exchange exchange);1434035676;put a new object into the cache with a specific time to live;private void put(Object oid, Object ttl, Object ttlUnit, Exchange exchange) {_        Object body = exchange.getIn().getBody()__        this.cache.put(oid, body, (long) ttl, (TimeUnit) ttlUnit)__    };put,a,new,object,into,the,cache,with,a,specific,time,to,live;private,void,put,object,oid,object,ttl,object,ttl,unit,exchange,exchange,object,body,exchange,get,in,get,body,this,cache,put,oid,body,long,ttl,time,unit,ttl,unit
HazelcastMapProducer -> private void put(Object oid, Object ttl, Object ttlUnit, Exchange exchange);1434447864;put a new object into the cache with a specific time to live;private void put(Object oid, Object ttl, Object ttlUnit, Exchange exchange) {_        Object body = exchange.getIn().getBody()__        this.cache.put(oid, body, (long) ttl, (TimeUnit) ttlUnit)__    };put,a,new,object,into,the,cache,with,a,specific,time,to,live;private,void,put,object,oid,object,ttl,object,ttl,unit,exchange,exchange,object,body,exchange,get,in,get,body,this,cache,put,oid,body,long,ttl,time,unit,ttl,unit
HazelcastMapProducer -> private void put(Object oid, Object ttl, Object ttlUnit, Exchange exchange);1466175389;put a new object into the cache with a specific time to live;private void put(Object oid, Object ttl, Object ttlUnit, Exchange exchange) {_        Object body = exchange.getIn().getBody()__        this.cache.put(oid, body, (long) ttl, (TimeUnit) ttlUnit)__    };put,a,new,object,into,the,cache,with,a,specific,time,to,live;private,void,put,object,oid,object,ttl,object,ttl,unit,exchange,exchange,object,body,exchange,get,in,get,body,this,cache,put,oid,body,long,ttl,time,unit,ttl,unit
HazelcastMapProducer -> private void put(Object oid, Object ttl, Object ttlUnit, Exchange exchange);1498119790;PUT a new object into the cache with a specific time to live;private void put(Object oid, Object ttl, Object ttlUnit, Exchange exchange) {_        Object body = exchange.getIn().getBody()__        this.cache.put(oid, body, (long) ttl, (TimeUnit) ttlUnit)__    };put,a,new,object,into,the,cache,with,a,specific,time,to,live;private,void,put,object,oid,object,ttl,object,ttl,unit,exchange,exchange,object,body,exchange,get,in,get,body,this,cache,put,oid,body,long,ttl,time,unit,ttl,unit
HazelcastMapProducer -> private void getKeys(Exchange exchange);1466175389;get keys set of objects and give it back;private void getKeys(Exchange exchange) {_        exchange.getOut().setBody(this.cache.keySet())__    };get,keys,set,of,objects,and,give,it,back;private,void,get,keys,exchange,exchange,exchange,get,out,set,body,this,cache,key,set
HazelcastMapProducer -> private void getKeys(Exchange exchange);1498119790;GET keys set of objects and give it back;private void getKeys(Exchange exchange) {_        exchange.getOut().setBody(this.cache.keySet())__    };get,keys,set,of,objects,and,give,it,back;private,void,get,keys,exchange,exchange,exchange,get,out,set,body,this,cache,key,set
HazelcastMapProducer -> private void replace(Object oid, Exchange exchange);1430559817;replace a value related to a specific key;private void replace(Object oid, Exchange exchange) {_        Object body = exchange.getIn().getBody()__        this.cache.replace(oid, body)__    };replace,a,value,related,to,a,specific,key;private,void,replace,object,oid,exchange,exchange,object,body,exchange,get,in,get,body,this,cache,replace,oid,body
HazelcastMapProducer -> private void replace(Object oid, Exchange exchange);1430578243;replace a value related to a specific key;private void replace(Object oid, Exchange exchange) {_        Object body = exchange.getIn().getBody()__        this.cache.replace(oid, body)__    };replace,a,value,related,to,a,specific,key;private,void,replace,object,oid,exchange,exchange,object,body,exchange,get,in,get,body,this,cache,replace,oid,body
HazelcastMapProducer -> private void update(String oid, Exchange exchange);1298888014;update an object in your cache (the whole object will be replaced);private void update(String oid, Exchange exchange) {_        Object body = exchange.getIn().getBody()__        this.cache.lock(oid)__        this.cache.replace(oid, body)__        this.cache.unlock(oid)__    };update,an,object,in,your,cache,the,whole,object,will,be,replaced;private,void,update,string,oid,exchange,exchange,object,body,exchange,get,in,get,body,this,cache,lock,oid,this,cache,replace,oid,body,this,cache,unlock,oid
HazelcastMapProducer -> private void update(String oid, Exchange exchange);1319440549;update an object in your cache (the whole object will be replaced);private void update(String oid, Exchange exchange) {_        Object body = exchange.getIn().getBody()__        this.cache.lock(oid)__        this.cache.replace(oid, body)__        this.cache.unlock(oid)__    };update,an,object,in,your,cache,the,whole,object,will,be,replaced;private,void,update,string,oid,exchange,exchange,object,body,exchange,get,in,get,body,this,cache,lock,oid,this,cache,replace,oid,body,this,cache,unlock,oid
HazelcastMapProducer -> private void update(String oid, Exchange exchange);1326907405;update an object in your cache (the whole object will be replaced);private void update(String oid, Exchange exchange) {_        Object body = exchange.getIn().getBody()__        this.cache.lock(oid)__        this.cache.replace(oid, body)__        this.cache.unlock(oid)__    };update,an,object,in,your,cache,the,whole,object,will,be,replaced;private,void,update,string,oid,exchange,exchange,object,body,exchange,get,in,get,body,this,cache,lock,oid,this,cache,replace,oid,body,this,cache,unlock,oid
HazelcastMapProducer -> private void putIfAbsent(Object oid, Object ttl, Object ttlUnit, Exchange exchange);1430661803;Puts an entry into this map with a given ttl (time to live) value if the specified key is not already associated with a value.;private void putIfAbsent(Object oid, Object ttl, Object ttlUnit, Exchange exchange) {_        Object body = exchange.getIn().getBody()__        this.cache.putIfAbsent(oid, body, (long) ttl, (TimeUnit) ttlUnit)__    };puts,an,entry,into,this,map,with,a,given,ttl,time,to,live,value,if,the,specified,key,is,not,already,associated,with,a,value;private,void,put,if,absent,object,oid,object,ttl,object,ttl,unit,exchange,exchange,object,body,exchange,get,in,get,body,this,cache,put,if,absent,oid,body,long,ttl,time,unit,ttl,unit
HazelcastMapProducer -> private void putIfAbsent(Object oid, Object ttl, Object ttlUnit, Exchange exchange);1434035676;Puts an entry into this map with a given ttl (time to live) value if the specified key is not already associated with a value.;private void putIfAbsent(Object oid, Object ttl, Object ttlUnit, Exchange exchange) {_        Object body = exchange.getIn().getBody()__        this.cache.putIfAbsent(oid, body, (long) ttl, (TimeUnit) ttlUnit)__    };puts,an,entry,into,this,map,with,a,given,ttl,time,to,live,value,if,the,specified,key,is,not,already,associated,with,a,value;private,void,put,if,absent,object,oid,object,ttl,object,ttl,unit,exchange,exchange,object,body,exchange,get,in,get,body,this,cache,put,if,absent,oid,body,long,ttl,time,unit,ttl,unit
HazelcastMapProducer -> private void putIfAbsent(Object oid, Object ttl, Object ttlUnit, Exchange exchange);1434035676;Puts an entry into this map with a given ttl (time to live) value if the specified key is not already associated with a value.;private void putIfAbsent(Object oid, Object ttl, Object ttlUnit, Exchange exchange) {_        Object body = exchange.getIn().getBody()__        this.cache.putIfAbsent(oid, body, (long) ttl, (TimeUnit) ttlUnit)__    };puts,an,entry,into,this,map,with,a,given,ttl,time,to,live,value,if,the,specified,key,is,not,already,associated,with,a,value;private,void,put,if,absent,object,oid,object,ttl,object,ttl,unit,exchange,exchange,object,body,exchange,get,in,get,body,this,cache,put,if,absent,oid,body,long,ttl,time,unit,ttl,unit
HazelcastMapProducer -> private void putIfAbsent(Object oid, Object ttl, Object ttlUnit, Exchange exchange);1434447864;Puts an entry into this map with a given ttl (time to live) value if the specified key is not already associated with a value.;private void putIfAbsent(Object oid, Object ttl, Object ttlUnit, Exchange exchange) {_        Object body = exchange.getIn().getBody()__        this.cache.putIfAbsent(oid, body, (long) ttl, (TimeUnit) ttlUnit)__    };puts,an,entry,into,this,map,with,a,given,ttl,time,to,live,value,if,the,specified,key,is,not,already,associated,with,a,value;private,void,put,if,absent,object,oid,object,ttl,object,ttl,unit,exchange,exchange,object,body,exchange,get,in,get,body,this,cache,put,if,absent,oid,body,long,ttl,time,unit,ttl,unit
HazelcastMapProducer -> private void putIfAbsent(Object oid, Object ttl, Object ttlUnit, Exchange exchange);1466175389;Puts an entry into this map with a given ttl (time to live) value if the specified key is not already associated with a value.;private void putIfAbsent(Object oid, Object ttl, Object ttlUnit, Exchange exchange) {_        Object body = exchange.getIn().getBody()__        this.cache.putIfAbsent(oid, body, (long) ttl, (TimeUnit) ttlUnit)__    };puts,an,entry,into,this,map,with,a,given,ttl,time,to,live,value,if,the,specified,key,is,not,already,associated,with,a,value;private,void,put,if,absent,object,oid,object,ttl,object,ttl,unit,exchange,exchange,object,body,exchange,get,in,get,body,this,cache,put,if,absent,oid,body,long,ttl,time,unit,ttl,unit
HazelcastMapProducer -> private void putIfAbsent(Object oid, Object ttl, Object ttlUnit, Exchange exchange);1498119790;Puts an entry into this map with a given ttl (time to live) value if the specified key is not already associated with a value.;private void putIfAbsent(Object oid, Object ttl, Object ttlUnit, Exchange exchange) {_        Object body = exchange.getIn().getBody()__        this.cache.putIfAbsent(oid, body, (long) ttl, (TimeUnit) ttlUnit)__    };puts,an,entry,into,this,map,with,a,given,ttl,time,to,live,value,if,the,specified,key,is,not,already,associated,with,a,value;private,void,put,if,absent,object,oid,object,ttl,object,ttl,unit,exchange,exchange,object,body,exchange,get,in,get,body,this,cache,put,if,absent,oid,body,long,ttl,time,unit,ttl,unit
HazelcastMapProducer -> private void evictAll();1434035676;Evict All operation;private void evictAll() {_        this.cache.evictAll()__    };evict,all,operation;private,void,evict,all,this,cache,evict,all
HazelcastMapProducer -> private void evictAll();1434447864;Evict All operation;private void evictAll() {_        this.cache.evictAll()__    };evict,all,operation;private,void,evict,all,this,cache,evict,all
HazelcastMapProducer -> private void evictAll();1466175389;Evict All operation;private void evictAll() {_        this.cache.evictAll()__    };evict,all,operation;private,void,evict,all,this,cache,evict,all
HazelcastMapProducer -> private void evictAll();1498119790;Evict All operation;private void evictAll() {_        this.cache.evictAll()__    };evict,all,operation;private,void,evict,all,this,cache,evict,all
HazelcastMapProducer -> private void clear(Exchange exchange);1430578243;Clear all the entries;private void clear(Exchange exchange) {_        this.cache.clear()__    };clear,all,the,entries;private,void,clear,exchange,exchange,this,cache,clear
HazelcastMapProducer -> private void clear(Exchange exchange);1430640745;Clear all the entries;private void clear(Exchange exchange) {_        this.cache.clear()__    };clear,all,the,entries;private,void,clear,exchange,exchange,this,cache,clear
HazelcastMapProducer -> private void clear(Exchange exchange);1430642059;Clear all the entries;private void clear(Exchange exchange) {_        this.cache.clear()__    };clear,all,the,entries;private,void,clear,exchange,exchange,this,cache,clear
HazelcastMapProducer -> private void clear(Exchange exchange);1430643154;Clear all the entries;private void clear(Exchange exchange) {_        this.cache.clear()__    };clear,all,the,entries;private,void,clear,exchange,exchange,this,cache,clear
HazelcastMapProducer -> private void clear(Exchange exchange);1430661803;Clear all the entries;private void clear(Exchange exchange) {_        this.cache.clear()__    };clear,all,the,entries;private,void,clear,exchange,exchange,this,cache,clear
HazelcastMapProducer -> private void clear(Exchange exchange);1434035676;Clear all the entries;private void clear(Exchange exchange) {_        this.cache.clear()__    };clear,all,the,entries;private,void,clear,exchange,exchange,this,cache,clear
HazelcastMapProducer -> private void clear(Exchange exchange);1434035676;Clear all the entries;private void clear(Exchange exchange) {_        this.cache.clear()__    };clear,all,the,entries;private,void,clear,exchange,exchange,this,cache,clear
HazelcastMapProducer -> private void clear(Exchange exchange);1434447864;Clear all the entries;private void clear(Exchange exchange) {_        this.cache.clear()__    };clear,all,the,entries;private,void,clear,exchange,exchange,this,cache,clear
HazelcastMapProducer -> private void clear(Exchange exchange);1466175389;Clear all the entries;private void clear(Exchange exchange) {_        this.cache.clear()__    };clear,all,the,entries;private,void,clear,exchange,exchange,this,cache,clear
HazelcastMapProducer -> private void clear(Exchange exchange);1498119790;Clear all the entries;private void clear(Exchange exchange) {_        this.cache.clear()__    };clear,all,the,entries;private,void,clear,exchange,exchange,this,cache,clear
HazelcastMapProducer -> private void containsKey(Object oid, Exchange exchange);1434447864;Check for a specific key in the cache and return true if it exists or false otherwise;private void containsKey(Object oid, Exchange exchange) {_        exchange.getOut().setBody(this.cache.containsKey(oid))__    };check,for,a,specific,key,in,the,cache,and,return,true,if,it,exists,or,false,otherwise;private,void,contains,key,object,oid,exchange,exchange,exchange,get,out,set,body,this,cache,contains,key,oid
HazelcastMapProducer -> private void containsKey(Object oid, Exchange exchange);1466175389;Check for a specific key in the cache and return true if it exists or false otherwise;private void containsKey(Object oid, Exchange exchange) {_        exchange.getOut().setBody(this.cache.containsKey(oid))__    };check,for,a,specific,key,in,the,cache,and,return,true,if,it,exists,or,false,otherwise;private,void,contains,key,object,oid,exchange,exchange,exchange,get,out,set,body,this,cache,contains,key,oid
HazelcastMapProducer -> private void containsKey(Object oid, Exchange exchange);1498119790;Check for a specific key in the cache and return true if it exists or false otherwise;private void containsKey(Object oid, Exchange exchange) {_        exchange.getOut().setBody(this.cache.containsKey(oid))__    };check,for,a,specific,key,in,the,cache,and,return,true,if,it,exists,or,false,otherwise;private,void,contains,key,object,oid,exchange,exchange,exchange,get,out,set,body,this,cache,contains,key,oid
HazelcastMapProducer -> private void get(String oid, Exchange exchange);1298888014;find an object by the given id and give it back;private void get(String oid, Exchange exchange) {_        exchange.getOut().setBody(this.cache.get(oid))__    };find,an,object,by,the,given,id,and,give,it,back;private,void,get,string,oid,exchange,exchange,exchange,get,out,set,body,this,cache,get,oid
HazelcastMapProducer -> private void get(String oid, Exchange exchange);1319440549;find an object by the given id and give it back;private void get(String oid, Exchange exchange) {_        exchange.getOut().setBody(this.cache.get(oid))__    };find,an,object,by,the,given,id,and,give,it,back;private,void,get,string,oid,exchange,exchange,exchange,get,out,set,body,this,cache,get,oid
HazelcastMapProducer -> private void get(String oid, Exchange exchange);1326907405;find an object by the given id and give it back;private void get(String oid, Exchange exchange) {_        exchange.getOut().setBody(this.cache.get(oid))__    };find,an,object,by,the,given,id,and,give,it,back;private,void,get,string,oid,exchange,exchange,exchange,get,out,set,body,this,cache,get,oid
HazelcastMapProducer -> private void delete(Object oid);1379418909;remove an object from the cache;private void delete(Object oid) {_        this.cache.remove(oid)__    };remove,an,object,from,the,cache;private,void,delete,object,oid,this,cache,remove,oid
HazelcastMapProducer -> private void delete(Object oid);1381373054;remove an object from the cache;private void delete(Object oid) {_        this.cache.remove(oid)__    };remove,an,object,from,the,cache;private,void,delete,object,oid,this,cache,remove,oid
HazelcastMapProducer -> private void delete(Object oid);1430509840;remove an object from the cache;private void delete(Object oid) {_        this.cache.remove(oid)__    };remove,an,object,from,the,cache;private,void,delete,object,oid,this,cache,remove,oid
HazelcastMapProducer -> private void delete(Object oid);1430515082;remove an object from the cache;private void delete(Object oid) {_        this.cache.remove(oid)__    };remove,an,object,from,the,cache;private,void,delete,object,oid,this,cache,remove,oid
HazelcastMapProducer -> private void delete(Object oid);1430559817;remove an object from the cache;private void delete(Object oid) {_        this.cache.remove(oid)__    };remove,an,object,from,the,cache;private,void,delete,object,oid,this,cache,remove,oid
HazelcastMapProducer -> private void delete(Object oid);1430578243;remove an object from the cache;private void delete(Object oid) {_        this.cache.remove(oid)__    };remove,an,object,from,the,cache;private,void,delete,object,oid,this,cache,remove,oid
HazelcastMapProducer -> private void delete(Object oid);1430640745;remove an object from the cache;private void delete(Object oid) {_        this.cache.remove(oid)__    };remove,an,object,from,the,cache;private,void,delete,object,oid,this,cache,remove,oid
HazelcastMapProducer -> private void delete(Object oid);1430642059;remove an object from the cache;private void delete(Object oid) {_        this.cache.remove(oid)__    };remove,an,object,from,the,cache;private,void,delete,object,oid,this,cache,remove,oid
HazelcastMapProducer -> private void delete(Object oid);1430643154;remove an object from the cache;private void delete(Object oid) {_        this.cache.remove(oid)__    };remove,an,object,from,the,cache;private,void,delete,object,oid,this,cache,remove,oid
HazelcastMapProducer -> private void delete(Object oid);1430661803;remove an object from the cache;private void delete(Object oid) {_        this.cache.remove(oid)__    };remove,an,object,from,the,cache;private,void,delete,object,oid,this,cache,remove,oid
HazelcastMapProducer -> private void delete(Object oid);1434035676;remove an object from the cache;private void delete(Object oid) {_        this.cache.remove(oid)__    };remove,an,object,from,the,cache;private,void,delete,object,oid,this,cache,remove,oid
HazelcastMapProducer -> private void delete(Object oid);1434035676;remove an object from the cache;private void delete(Object oid) {_        this.cache.remove(oid)__    };remove,an,object,from,the,cache;private,void,delete,object,oid,this,cache,remove,oid
HazelcastMapProducer -> private void delete(Object oid);1434447864;remove an object from the cache;private void delete(Object oid) {_        this.cache.remove(oid)__    };remove,an,object,from,the,cache;private,void,delete,object,oid,this,cache,remove,oid
HazelcastMapProducer -> private void delete(Object oid);1466175389;remove an object from the cache;private void delete(Object oid) {_        this.cache.remove(oid)__    };remove,an,object,from,the,cache;private,void,delete,object,oid,this,cache,remove,oid
HazelcastMapProducer -> private void delete(Object oid);1498119790;remove an object from the cache;private void delete(Object oid) {_        this.cache.remove(oid)__    };remove,an,object,from,the,cache;private,void,delete,object,oid,this,cache,remove,oid
HazelcastMapProducer -> private void getAll(Object oid, Exchange exchange);1430509840;get All objects and give it back;private void getAll(Object oid, Exchange exchange) {_        exchange.getOut().setBody(this.cache.getAll((Set<Object>) oid))__    };get,all,objects,and,give,it,back;private,void,get,all,object,oid,exchange,exchange,exchange,get,out,set,body,this,cache,get,all,set,object,oid
HazelcastMapProducer -> private void getAll(Object oid, Exchange exchange);1430515082;get All objects and give it back;private void getAll(Object oid, Exchange exchange) {_        exchange.getOut().setBody(this.cache.getAll((Set<Object>) oid))__    };get,all,objects,and,give,it,back;private,void,get,all,object,oid,exchange,exchange,exchange,get,out,set,body,this,cache,get,all,set,object,oid
HazelcastMapProducer -> private void getAll(Object oid, Exchange exchange);1430559817;get All objects and give it back;private void getAll(Object oid, Exchange exchange) {_        exchange.getOut().setBody(this.cache.getAll((Set<Object>) oid))__    };get,all,objects,and,give,it,back;private,void,get,all,object,oid,exchange,exchange,exchange,get,out,set,body,this,cache,get,all,set,object,oid
HazelcastMapProducer -> private void getAll(Object oid, Exchange exchange);1430578243;get All objects and give it back;private void getAll(Object oid, Exchange exchange) {_        exchange.getOut().setBody(this.cache.getAll((Set<Object>) oid))__    };get,all,objects,and,give,it,back;private,void,get,all,object,oid,exchange,exchange,exchange,get,out,set,body,this,cache,get,all,set,object,oid
HazelcastMapProducer -> private void getAll(Object oid, Exchange exchange);1430640745;get All objects and give it back;private void getAll(Object oid, Exchange exchange) {_        exchange.getOut().setBody(this.cache.getAll((Set<Object>) oid))__    };get,all,objects,and,give,it,back;private,void,get,all,object,oid,exchange,exchange,exchange,get,out,set,body,this,cache,get,all,set,object,oid
HazelcastMapProducer -> private void getAll(Object oid, Exchange exchange);1430642059;get All objects and give it back;private void getAll(Object oid, Exchange exchange) {_        exchange.getOut().setBody(this.cache.getAll((Set<Object>) oid))__    };get,all,objects,and,give,it,back;private,void,get,all,object,oid,exchange,exchange,exchange,get,out,set,body,this,cache,get,all,set,object,oid
HazelcastMapProducer -> private void getAll(Object oid, Exchange exchange);1430643154;get All objects and give it back;private void getAll(Object oid, Exchange exchange) {_        exchange.getOut().setBody(this.cache.getAll((Set<Object>) oid))__    };get,all,objects,and,give,it,back;private,void,get,all,object,oid,exchange,exchange,exchange,get,out,set,body,this,cache,get,all,set,object,oid
HazelcastMapProducer -> private void getAll(Object oid, Exchange exchange);1430661803;get All objects and give it back;private void getAll(Object oid, Exchange exchange) {_        exchange.getOut().setBody(this.cache.getAll((Set<Object>) oid))__    };get,all,objects,and,give,it,back;private,void,get,all,object,oid,exchange,exchange,exchange,get,out,set,body,this,cache,get,all,set,object,oid
HazelcastMapProducer -> private void getAll(Object oid, Exchange exchange);1434035676;get All objects and give it back;private void getAll(Object oid, Exchange exchange) {_        exchange.getOut().setBody(this.cache.getAll((Set<Object>) oid))__    };get,all,objects,and,give,it,back;private,void,get,all,object,oid,exchange,exchange,exchange,get,out,set,body,this,cache,get,all,set,object,oid
HazelcastMapProducer -> private void getAll(Object oid, Exchange exchange);1434035676;get All objects and give it back;private void getAll(Object oid, Exchange exchange) {_        exchange.getOut().setBody(this.cache.getAll((Set<Object>) oid))__    };get,all,objects,and,give,it,back;private,void,get,all,object,oid,exchange,exchange,exchange,get,out,set,body,this,cache,get,all,set,object,oid
HazelcastMapProducer -> private void getAll(Object oid, Exchange exchange);1434447864;get All objects and give it back;private void getAll(Object oid, Exchange exchange) {_        exchange.getOut().setBody(this.cache.getAll((Set<Object>) oid))__    };get,all,objects,and,give,it,back;private,void,get,all,object,oid,exchange,exchange,exchange,get,out,set,body,this,cache,get,all,set,object,oid
HazelcastMapProducer -> private void getAll(Object oid, Exchange exchange);1466175389;get All objects and give it back;private void getAll(Object oid, Exchange exchange) {_        exchange.getOut().setBody(this.cache.getAll((Set<Object>) oid))__    };get,all,objects,and,give,it,back;private,void,get,all,object,oid,exchange,exchange,exchange,get,out,set,body,this,cache,get,all,set,object,oid
HazelcastMapProducer -> private void getAll(Object oid, Exchange exchange);1498119790;GET All objects and give it back;private void getAll(Object oid, Exchange exchange) {_        exchange.getOut().setBody(this.cache.getAll((Set<Object>) oid))__    };get,all,objects,and,give,it,back;private,void,get,all,object,oid,exchange,exchange,exchange,get,out,set,body,this,cache,get,all,set,object,oid
HazelcastMapProducer -> private void put(Object oid, Exchange exchange);1379418909;put a new object into the cache;private void put(Object oid, Exchange exchange) {_        Object body = exchange.getIn().getBody()__        this.cache.put(oid, body)__    };put,a,new,object,into,the,cache;private,void,put,object,oid,exchange,exchange,object,body,exchange,get,in,get,body,this,cache,put,oid,body
HazelcastMapProducer -> private void put(Object oid, Exchange exchange);1381373054;put a new object into the cache;private void put(Object oid, Exchange exchange) {_        Object body = exchange.getIn().getBody()__        this.cache.put(oid, body)__    };put,a,new,object,into,the,cache;private,void,put,object,oid,exchange,exchange,object,body,exchange,get,in,get,body,this,cache,put,oid,body
HazelcastMapProducer -> private void put(Object oid, Exchange exchange);1430509840;put a new object into the cache;private void put(Object oid, Exchange exchange) {_        Object body = exchange.getIn().getBody()__        this.cache.put(oid, body)__    };put,a,new,object,into,the,cache;private,void,put,object,oid,exchange,exchange,object,body,exchange,get,in,get,body,this,cache,put,oid,body
HazelcastMapProducer -> private void put(Object oid, Exchange exchange);1430515082;put a new object into the cache;private void put(Object oid, Exchange exchange) {_        Object body = exchange.getIn().getBody()__        this.cache.put(oid, body)__    };put,a,new,object,into,the,cache;private,void,put,object,oid,exchange,exchange,object,body,exchange,get,in,get,body,this,cache,put,oid,body
HazelcastMapProducer -> private void put(Object oid, Exchange exchange);1430559817;put a new object into the cache;private void put(Object oid, Exchange exchange) {_        Object body = exchange.getIn().getBody()__        this.cache.put(oid, body)__    };put,a,new,object,into,the,cache;private,void,put,object,oid,exchange,exchange,object,body,exchange,get,in,get,body,this,cache,put,oid,body
HazelcastMapProducer -> private void put(Object oid, Exchange exchange);1430578243;put a new object into the cache;private void put(Object oid, Exchange exchange) {_        Object body = exchange.getIn().getBody()__        this.cache.put(oid, body)__    };put,a,new,object,into,the,cache;private,void,put,object,oid,exchange,exchange,object,body,exchange,get,in,get,body,this,cache,put,oid,body
HazelcastMapProducer -> private void put(Object oid, Exchange exchange);1430640745;put a new object into the cache;private void put(Object oid, Exchange exchange) {_        Object body = exchange.getIn().getBody()__        this.cache.put(oid, body)__    };put,a,new,object,into,the,cache;private,void,put,object,oid,exchange,exchange,object,body,exchange,get,in,get,body,this,cache,put,oid,body
HazelcastMapProducer -> private void put(Object oid, Exchange exchange);1430642059;put a new object into the cache;private void put(Object oid, Exchange exchange) {_        Object body = exchange.getIn().getBody()__        this.cache.put(oid, body)__    };put,a,new,object,into,the,cache;private,void,put,object,oid,exchange,exchange,object,body,exchange,get,in,get,body,this,cache,put,oid,body
HazelcastMapProducer -> private void put(Object oid, Exchange exchange);1430643154;put a new object into the cache;private void put(Object oid, Exchange exchange) {_        Object body = exchange.getIn().getBody()__        this.cache.put(oid, body)__    };put,a,new,object,into,the,cache;private,void,put,object,oid,exchange,exchange,object,body,exchange,get,in,get,body,this,cache,put,oid,body
HazelcastMapProducer -> private void put(Object oid, Exchange exchange);1430661803;put a new object into the cache;private void put(Object oid, Exchange exchange) {_        Object body = exchange.getIn().getBody()__        this.cache.put(oid, body)__    };put,a,new,object,into,the,cache;private,void,put,object,oid,exchange,exchange,object,body,exchange,get,in,get,body,this,cache,put,oid,body
HazelcastMapProducer -> private void put(Object oid, Exchange exchange);1434035676;put a new object into the cache;private void put(Object oid, Exchange exchange) {_        Object body = exchange.getIn().getBody()__        this.cache.put(oid, body)__    };put,a,new,object,into,the,cache;private,void,put,object,oid,exchange,exchange,object,body,exchange,get,in,get,body,this,cache,put,oid,body
HazelcastMapProducer -> private void put(Object oid, Exchange exchange);1434035676;put a new object into the cache;private void put(Object oid, Exchange exchange) {_        Object body = exchange.getIn().getBody()__        this.cache.put(oid, body)__    };put,a,new,object,into,the,cache;private,void,put,object,oid,exchange,exchange,object,body,exchange,get,in,get,body,this,cache,put,oid,body
HazelcastMapProducer -> private void put(Object oid, Exchange exchange);1434447864;put a new object into the cache;private void put(Object oid, Exchange exchange) {_        Object body = exchange.getIn().getBody()__        this.cache.put(oid, body)__    };put,a,new,object,into,the,cache;private,void,put,object,oid,exchange,exchange,object,body,exchange,get,in,get,body,this,cache,put,oid,body
HazelcastMapProducer -> private void put(Object oid, Exchange exchange);1466175389;put a new object into the cache;private void put(Object oid, Exchange exchange) {_        Object body = exchange.getIn().getBody()__        this.cache.put(oid, body)__    };put,a,new,object,into,the,cache;private,void,put,object,oid,exchange,exchange,object,body,exchange,get,in,get,body,this,cache,put,oid,body
HazelcastMapProducer -> private void put(Object oid, Exchange exchange);1498119790;PUT a new object into the cache;private void put(Object oid, Exchange exchange) {_        Object body = exchange.getIn().getBody()__        this.cache.put(oid, body)__    };put,a,new,object,into,the,cache;private,void,put,object,oid,exchange,exchange,object,body,exchange,get,in,get,body,this,cache,put,oid,body
HazelcastMapProducer -> private void putIfAbsent(Object oid, Exchange exchange);1430661803;if the specified key is not already associated with a value, associate it with the given value.;private void putIfAbsent(Object oid, Exchange exchange) {_        Object body = exchange.getIn().getBody()__        this.cache.putIfAbsent(oid, body)__    };if,the,specified,key,is,not,already,associated,with,a,value,associate,it,with,the,given,value;private,void,put,if,absent,object,oid,exchange,exchange,object,body,exchange,get,in,get,body,this,cache,put,if,absent,oid,body
HazelcastMapProducer -> private void putIfAbsent(Object oid, Exchange exchange);1434035676;if the specified key is not already associated with a value, associate it with the given value.;private void putIfAbsent(Object oid, Exchange exchange) {_        Object body = exchange.getIn().getBody()__        this.cache.putIfAbsent(oid, body)__    };if,the,specified,key,is,not,already,associated,with,a,value,associate,it,with,the,given,value;private,void,put,if,absent,object,oid,exchange,exchange,object,body,exchange,get,in,get,body,this,cache,put,if,absent,oid,body
HazelcastMapProducer -> private void putIfAbsent(Object oid, Exchange exchange);1434035676;if the specified key is not already associated with a value, associate it with the given value.;private void putIfAbsent(Object oid, Exchange exchange) {_        Object body = exchange.getIn().getBody()__        this.cache.putIfAbsent(oid, body)__    };if,the,specified,key,is,not,already,associated,with,a,value,associate,it,with,the,given,value;private,void,put,if,absent,object,oid,exchange,exchange,object,body,exchange,get,in,get,body,this,cache,put,if,absent,oid,body
HazelcastMapProducer -> private void putIfAbsent(Object oid, Exchange exchange);1434447864;if the specified key is not already associated with a value, associate it with the given value.;private void putIfAbsent(Object oid, Exchange exchange) {_        Object body = exchange.getIn().getBody()__        this.cache.putIfAbsent(oid, body)__    };if,the,specified,key,is,not,already,associated,with,a,value,associate,it,with,the,given,value;private,void,put,if,absent,object,oid,exchange,exchange,object,body,exchange,get,in,get,body,this,cache,put,if,absent,oid,body
HazelcastMapProducer -> private void putIfAbsent(Object oid, Exchange exchange);1466175389;if the specified key is not already associated with a value, associate it with the given value.;private void putIfAbsent(Object oid, Exchange exchange) {_        Object body = exchange.getIn().getBody()__        this.cache.putIfAbsent(oid, body)__    };if,the,specified,key,is,not,already,associated,with,a,value,associate,it,with,the,given,value;private,void,put,if,absent,object,oid,exchange,exchange,object,body,exchange,get,in,get,body,this,cache,put,if,absent,oid,body
HazelcastMapProducer -> private void putIfAbsent(Object oid, Exchange exchange);1498119790;if the specified key is not already associated with a value, associate it with the given value.;private void putIfAbsent(Object oid, Exchange exchange) {_        Object body = exchange.getIn().getBody()__        this.cache.putIfAbsent(oid, body)__    };if,the,specified,key,is,not,already,associated,with,a,value,associate,it,with,the,given,value;private,void,put,if,absent,object,oid,exchange,exchange,object,body,exchange,get,in,get,body,this,cache,put,if,absent,oid,body
HazelcastMapProducer -> private void update(Object oid, Exchange exchange);1379418909;update an object in your cache (the whole object will be replaced);private void update(Object oid, Exchange exchange) {_        Object body = exchange.getIn().getBody()__        this.cache.lock(oid)__        this.cache.replace(oid, body)__        this.cache.unlock(oid)__    };update,an,object,in,your,cache,the,whole,object,will,be,replaced;private,void,update,object,oid,exchange,exchange,object,body,exchange,get,in,get,body,this,cache,lock,oid,this,cache,replace,oid,body,this,cache,unlock,oid
HazelcastMapProducer -> private void update(Object oid, Exchange exchange);1381373054;update an object in your cache (the whole object will be replaced);private void update(Object oid, Exchange exchange) {_        Object body = exchange.getIn().getBody()__        this.cache.lock(oid)__        this.cache.replace(oid, body)__        this.cache.unlock(oid)__    };update,an,object,in,your,cache,the,whole,object,will,be,replaced;private,void,update,object,oid,exchange,exchange,object,body,exchange,get,in,get,body,this,cache,lock,oid,this,cache,replace,oid,body,this,cache,unlock,oid
HazelcastMapProducer -> private void update(Object oid, Exchange exchange);1430509840;update an object in your cache (the whole object will be replaced);private void update(Object oid, Exchange exchange) {_        Object body = exchange.getIn().getBody()__        this.cache.lock(oid)__        this.cache.replace(oid, body)__        this.cache.unlock(oid)__    };update,an,object,in,your,cache,the,whole,object,will,be,replaced;private,void,update,object,oid,exchange,exchange,object,body,exchange,get,in,get,body,this,cache,lock,oid,this,cache,replace,oid,body,this,cache,unlock,oid
HazelcastMapProducer -> private void update(Object oid, Exchange exchange);1430515082;update an object in your cache (the whole object will be replaced);private void update(Object oid, Exchange exchange) {_        Object body = exchange.getIn().getBody()__        this.cache.lock(oid)__        this.cache.replace(oid, body)__        this.cache.unlock(oid)__    };update,an,object,in,your,cache,the,whole,object,will,be,replaced;private,void,update,object,oid,exchange,exchange,object,body,exchange,get,in,get,body,this,cache,lock,oid,this,cache,replace,oid,body,this,cache,unlock,oid
HazelcastMapProducer -> private void update(Object oid, Exchange exchange);1430559817;update an object in your cache (the whole object will be replaced);private void update(Object oid, Exchange exchange) {_        Object body = exchange.getIn().getBody()__        this.cache.lock(oid)__        this.cache.replace(oid, body)__        this.cache.unlock(oid)__    };update,an,object,in,your,cache,the,whole,object,will,be,replaced;private,void,update,object,oid,exchange,exchange,object,body,exchange,get,in,get,body,this,cache,lock,oid,this,cache,replace,oid,body,this,cache,unlock,oid
HazelcastMapProducer -> private void update(Object oid, Exchange exchange);1430578243;update an object in your cache (the whole object will be replaced);private void update(Object oid, Exchange exchange) {_        Object body = exchange.getIn().getBody()__        this.cache.lock(oid)__        this.cache.replace(oid, body)__        this.cache.unlock(oid)__    };update,an,object,in,your,cache,the,whole,object,will,be,replaced;private,void,update,object,oid,exchange,exchange,object,body,exchange,get,in,get,body,this,cache,lock,oid,this,cache,replace,oid,body,this,cache,unlock,oid
HazelcastMapProducer -> private void update(Object oid, Exchange exchange);1430640745;update an object in your cache (the whole object will be replaced);private void update(Object oid, Exchange exchange) {_        Object body = exchange.getIn().getBody()__        this.cache.lock(oid)__        this.cache.replace(oid, body)__        this.cache.unlock(oid)__    };update,an,object,in,your,cache,the,whole,object,will,be,replaced;private,void,update,object,oid,exchange,exchange,object,body,exchange,get,in,get,body,this,cache,lock,oid,this,cache,replace,oid,body,this,cache,unlock,oid
HazelcastMapProducer -> private void update(Object oid, Exchange exchange);1430642059;update an object in your cache (the whole object will be replaced);private void update(Object oid, Exchange exchange) {_        Object body = exchange.getIn().getBody()__        this.cache.lock(oid)__        this.cache.replace(oid, body)__        this.cache.unlock(oid)__    };update,an,object,in,your,cache,the,whole,object,will,be,replaced;private,void,update,object,oid,exchange,exchange,object,body,exchange,get,in,get,body,this,cache,lock,oid,this,cache,replace,oid,body,this,cache,unlock,oid
HazelcastMapProducer -> private void update(Object oid, Exchange exchange);1430643154;update an object in your cache (the whole object will be replaced);private void update(Object oid, Exchange exchange) {_        Object body = exchange.getIn().getBody()__        this.cache.lock(oid)__        this.cache.replace(oid, body)__        this.cache.unlock(oid)__    };update,an,object,in,your,cache,the,whole,object,will,be,replaced;private,void,update,object,oid,exchange,exchange,object,body,exchange,get,in,get,body,this,cache,lock,oid,this,cache,replace,oid,body,this,cache,unlock,oid
HazelcastMapProducer -> private void update(Object oid, Exchange exchange);1430661803;update an object in your cache (the whole object will be replaced);private void update(Object oid, Exchange exchange) {_        Object body = exchange.getIn().getBody()__        this.cache.lock(oid)__        this.cache.replace(oid, body)__        this.cache.unlock(oid)__    };update,an,object,in,your,cache,the,whole,object,will,be,replaced;private,void,update,object,oid,exchange,exchange,object,body,exchange,get,in,get,body,this,cache,lock,oid,this,cache,replace,oid,body,this,cache,unlock,oid
HazelcastMapProducer -> private void update(Object oid, Exchange exchange);1434035676;update an object in your cache (the whole object will be replaced);private void update(Object oid, Exchange exchange) {_        Object body = exchange.getIn().getBody()__        this.cache.lock(oid)__        this.cache.replace(oid, body)__        this.cache.unlock(oid)__    };update,an,object,in,your,cache,the,whole,object,will,be,replaced;private,void,update,object,oid,exchange,exchange,object,body,exchange,get,in,get,body,this,cache,lock,oid,this,cache,replace,oid,body,this,cache,unlock,oid
HazelcastMapProducer -> private void update(Object oid, Exchange exchange);1434035676;update an object in your cache (the whole object will be replaced);private void update(Object oid, Exchange exchange) {_        Object body = exchange.getIn().getBody()__        this.cache.lock(oid)__        this.cache.replace(oid, body)__        this.cache.unlock(oid)__    };update,an,object,in,your,cache,the,whole,object,will,be,replaced;private,void,update,object,oid,exchange,exchange,object,body,exchange,get,in,get,body,this,cache,lock,oid,this,cache,replace,oid,body,this,cache,unlock,oid
HazelcastMapProducer -> private void update(Object oid, Exchange exchange);1434447864;update an object in your cache (the whole object will be replaced);private void update(Object oid, Exchange exchange) {_        Object body = exchange.getIn().getBody()__        this.cache.lock(oid)__        this.cache.replace(oid, body)__        this.cache.unlock(oid)__    };update,an,object,in,your,cache,the,whole,object,will,be,replaced;private,void,update,object,oid,exchange,exchange,object,body,exchange,get,in,get,body,this,cache,lock,oid,this,cache,replace,oid,body,this,cache,unlock,oid
HazelcastMapProducer -> private void update(Object oid, Exchange exchange);1466175389;update an object in your cache (the whole object will be replaced);private void update(Object oid, Exchange exchange) {_        Object body = exchange.getIn().getBody()__        this.cache.lock(oid)__        this.cache.replace(oid, body)__        this.cache.unlock(oid)__    };update,an,object,in,your,cache,the,whole,object,will,be,replaced;private,void,update,object,oid,exchange,exchange,object,body,exchange,get,in,get,body,this,cache,lock,oid,this,cache,replace,oid,body,this,cache,unlock,oid
HazelcastMapProducer -> private void update(Object oid, Exchange exchange);1498119790;UPDATE an object in your cache (the whole object will be replaced);private void update(Object oid, Exchange exchange) {_        Object body = exchange.getIn().getBody()__        this.cache.lock(oid)__        this.cache.replace(oid, body)__        this.cache.unlock(oid)__    };update,an,object,in,your,cache,the,whole,object,will,be,replaced;private,void,update,object,oid,exchange,exchange,object,body,exchange,get,in,get,body,this,cache,lock,oid,this,cache,replace,oid,body,this,cache,unlock,oid
HazelcastMapProducer -> private void replace(Object oid, Object ovalue, Exchange exchange);1430559817;Replaces the entry for given id with a specific value in the body, only if currently mapped to a given value;private void replace(Object oid, Object ovalue, Exchange exchange) {_        Object body = exchange.getIn().getBody()__        this.cache.replace(oid, ovalue, body)__    };replaces,the,entry,for,given,id,with,a,specific,value,in,the,body,only,if,currently,mapped,to,a,given,value;private,void,replace,object,oid,object,ovalue,exchange,exchange,object,body,exchange,get,in,get,body,this,cache,replace,oid,ovalue,body
HazelcastMapProducer -> private void replace(Object oid, Object ovalue, Exchange exchange);1430578243;Replaces the entry for given id with a specific value in the body, only if currently mapped to a given value;private void replace(Object oid, Object ovalue, Exchange exchange) {_        Object body = exchange.getIn().getBody()__        this.cache.replace(oid, ovalue, body)__    };replaces,the,entry,for,given,id,with,a,specific,value,in,the,body,only,if,currently,mapped,to,a,given,value;private,void,replace,object,oid,object,ovalue,exchange,exchange,object,body,exchange,get,in,get,body,this,cache,replace,oid,ovalue,body
HazelcastMapProducer -> private void containsValue(Exchange exchange);1434447864;Check for a specific value in the cache and return true if it exists or false otherwise;private void containsValue(Exchange exchange) {_        Object body = exchange.getIn().getBody()__        exchange.getOut().setBody(this.cache.containsValue(body))__    };check,for,a,specific,value,in,the,cache,and,return,true,if,it,exists,or,false,otherwise;private,void,contains,value,exchange,exchange,object,body,exchange,get,in,get,body,exchange,get,out,set,body,this,cache,contains,value,body
HazelcastMapProducer -> private void containsValue(Exchange exchange);1466175389;Check for a specific value in the cache and return true if it exists or false otherwise;private void containsValue(Exchange exchange) {_        Object body = exchange.getIn().getBody()__        exchange.getOut().setBody(this.cache.containsValue(body))__    };check,for,a,specific,value,in,the,cache,and,return,true,if,it,exists,or,false,otherwise;private,void,contains,value,exchange,exchange,object,body,exchange,get,in,get,body,exchange,get,out,set,body,this,cache,contains,value,body
HazelcastMapProducer -> private void containsValue(Exchange exchange);1498119790;Check for a specific value in the cache and return true if it exists or false otherwise;private void containsValue(Exchange exchange) {_        Object body = exchange.getIn().getBody()__        exchange.getOut().setBody(this.cache.containsValue(body))__    };check,for,a,specific,value,in,the,cache,and,return,true,if,it,exists,or,false,otherwise;private,void,contains,value,exchange,exchange,object,body,exchange,get,in,get,body,exchange,get,out,set,body,this,cache,contains,value,body
HazelcastMapProducer -> private void evict(Object oid);1434035676;Eviction operation for a specific key;private void evict(Object oid) {_        this.cache.evict(oid)__    };eviction,operation,for,a,specific,key;private,void,evict,object,oid,this,cache,evict,oid
HazelcastMapProducer -> private void evict(Object oid);1434035676;Eviction operation for a specific key;private void evict(Object oid) {_        this.cache.evict(oid)__    };eviction,operation,for,a,specific,key;private,void,evict,object,oid,this,cache,evict,oid
HazelcastMapProducer -> private void evict(Object oid);1434447864;Eviction operation for a specific key;private void evict(Object oid) {_        this.cache.evict(oid)__    };eviction,operation,for,a,specific,key;private,void,evict,object,oid,this,cache,evict,oid
HazelcastMapProducer -> private void evict(Object oid);1466175389;Eviction operation for a specific key;private void evict(Object oid) {_        this.cache.evict(oid)__    };eviction,operation,for,a,specific,key;private,void,evict,object,oid,this,cache,evict,oid
HazelcastMapProducer -> private void evict(Object oid);1498119790;Eviction operation for a specific key;private void evict(Object oid) {_        this.cache.evict(oid)__    };eviction,operation,for,a,specific,key;private,void,evict,object,oid,this,cache,evict,oid
