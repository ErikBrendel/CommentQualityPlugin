commented;modifiers;parameterAmount;loc;comment;code
false;public;2;5;;public boolean process(final Exchange exchange, final AsyncCallback callback) {     checkAndStore(exchange).     callback.done(true).     return true. }
false;private;1;23;;private void checkAndStore(final Exchange exchange) {     Object obj.     Object body = exchange.getIn().getBody().     final HazelcastSedaEndpoint endpoint = (HazelcastSedaEndpoint) this.getEndpoint().     final HazelcastSedaConfiguration configuration = endpoint.getConfiguration().     if (configuration.isTransferExchange()) {         obj = DefaultExchangeHolder.marshal(exchange).     } else {         // in case body is not serializable convert to byte array         if (!(body instanceof Serializable)) {             obj = exchange.getIn().getBody(byte[].class).         } else {             obj = body.         }     }     queue.add(obj).     // finally copy headers     HazelcastComponentHelper.copyHeaders(exchange). }
