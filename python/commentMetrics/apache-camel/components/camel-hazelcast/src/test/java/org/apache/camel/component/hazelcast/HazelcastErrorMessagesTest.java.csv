commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public void configure() throws Exception {     from("hazelcast-atomicvalue:foo").to("seda:out"). }
false;public;0;15;;@Test public void testAtomicNumberConsumer() {     RouteBuilder builder = new RouteBuilder() {          public void configure() throws Exception {             from("hazelcast-atomicvalue:foo").to("seda:out").         }     }.     try {         context.addRoutes(builder).         context.start().         fail("Should have thrown exception").     } catch (Exception e) {         assertTrue(e.getMessage().contains("You cannot send messages to this endpoint: hazelcast-atomicvalue://foo")).     } }
false;public;0;3;;public void configure() throws Exception {     from("direct:foo").to("hazelcast-instance:foo"). }
false;public;0;16;;@Test public void testInstanceProducer() {     RouteBuilder builder = new RouteBuilder() {          public void configure() throws Exception {             from("direct:foo").to("hazelcast-instance:foo").         }     }.     try {         context.addRoutes(builder).         context.start().         fail("Should have thrown exception").     } catch (Exception e) {         assertTrue(e.getMessage().contains("You cannot send messages to this endpoint: hazelcast-instance://foo")).     } }
false;public;0;4;;@Override public boolean isUseRouteBuilder() {     return false. }
