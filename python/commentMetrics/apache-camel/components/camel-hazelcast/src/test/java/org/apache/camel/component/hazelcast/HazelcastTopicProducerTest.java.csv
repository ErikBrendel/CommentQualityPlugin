commented;modifiers;parameterAmount;loc;comment;code
false;protected;1;4;;@Override protected void trainHazelcastInstance(HazelcastInstance hazelcastInstance) {     when(hazelcastInstance.<String>getTopic("bar")).thenReturn(topic). }
false;protected;1;4;;@Override protected void verifyHazelcastInstance(HazelcastInstance hazelcastInstance) {     verify(hazelcastInstance, atLeastOnce()).getTopic("bar"). }
false;public;0;4;;@After public void verifyQueueMock() {     verifyNoMoreInteractions(topic). }
false;public;0;4;;@Test(expected = CamelExecutionException.class) public void testWithInvalidOperation() {     template.sendBody("direct:publishInvalid", "foo"). }
false;public;0;5;;@Test public void noOperation() {     template.sendBody("direct:no-operation", "bar").     verify(topic).publish("bar"). }
false;public;0;5;;@Test public void publish() {     template.sendBody("direct:publish", "bar").     verify(topic).publish("bar"). }
false;public;0;8;;@Override public void configure() throws Exception {     from("direct:no-operation").to(String.format("hazelcast-%sbar", HazelcastConstants.TOPIC_PREFIX)).     from("direct:publishInvalid").setHeader(HazelcastConstants.OPERATION, constant("bogus")).to(String.format("hazelcast-%sbar", HazelcastConstants.TOPIC_PREFIX)).     from("direct:publish").setHeader(HazelcastConstants.OPERATION, constant(HazelcastOperation.PUBLISH)).to(String.format("hazelcast-%sbar", HazelcastConstants.TOPIC_PREFIX)). }
false;protected;0;13;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:no-operation").to(String.format("hazelcast-%sbar", HazelcastConstants.TOPIC_PREFIX)).             from("direct:publishInvalid").setHeader(HazelcastConstants.OPERATION, constant("bogus")).to(String.format("hazelcast-%sbar", HazelcastConstants.TOPIC_PREFIX)).             from("direct:publish").setHeader(HazelcastConstants.OPERATION, constant(HazelcastOperation.PUBLISH)).to(String.format("hazelcast-%sbar", HazelcastConstants.TOPIC_PREFIX)).         }     }. }
