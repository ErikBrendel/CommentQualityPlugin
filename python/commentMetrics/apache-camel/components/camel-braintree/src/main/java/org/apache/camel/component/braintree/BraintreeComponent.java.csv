commented;modifiers;parameterAmount;loc;comment;code
false;protected;1;4;;@Override protected BraintreeApiName getApiName(String apiNameStr) throws IllegalArgumentException {     return BraintreeApiName.fromValue(apiNameStr). }
false;protected;4;6;;@Override protected Endpoint createEndpoint(String uri, String methodName, BraintreeApiName apiName, BraintreeConfiguration endpointConfiguration) {     endpointConfiguration.setApiName(apiName).     endpointConfiguration.setMethodName(methodName).     return new BraintreeEndpoint(uri, this, apiName, methodName, endpointConfiguration). }
true;public;1;4;/**  * To use the shared configuration  */ ;/**  * To use the shared configuration  */ @Override public void setConfiguration(BraintreeConfiguration configuration) {     super.setConfiguration(configuration). }
false;public;0;4;;@Override public BraintreeConfiguration getConfiguration() {     return super.getConfiguration(). }
false;public,synchronized;1;17;;public synchronized BraintreeGateway getGateway(BraintreeConfiguration configuration) {     BraintreeGateway gateway.     if (configuration.getAccessToken() != null) {         gateway = gateways.get(configuration.getAccessToken()).         if (gateway == null) {             gateway = configuration.newBraintreeGateway().             gateways.put(configuration.getAccessToken(), gateway).         }     } else {         gateway = gateways.get(configuration.getMerchantId()).         if (gateway == null) {             gateway = configuration.newBraintreeGateway().             gateways.put(configuration.getMerchantId(), gateway).         }     }     return gateway. }
