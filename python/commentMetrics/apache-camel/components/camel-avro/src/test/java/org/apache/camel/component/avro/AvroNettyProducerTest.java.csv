commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;12;;@Override protected void initializeServer() {     if (server == null) {         server = new NettyServer(new SpecificResponder(KeyValueProtocol.PROTOCOL, keyValue), new InetSocketAddress("localhost", avroPort)).         server.start().     }     if (serverReflection == null) {         serverReflection = new NettyServer(new ReflectResponder(TestReflection.class, testReflection), new InetSocketAddress("localhost", avroPortReflection)).         serverReflection.start().     } }
false;public;0;31;;@Override public void configure() throws Exception {     // In Only     from("direct:in").to("avro:netty:localhost:" + avroPort + "?protocolClassName=org.apache.camel.avro.generated.KeyValueProtocol").     // In Only with message in route     from("direct:in-message-name").errorHandler(deadLetterChannel("mock:in-message-name-error")).to("avro:netty:localhost:" + avroPort + "/put?protocolClassName=org.apache.camel.avro.generated.KeyValueProtocol").to("mock:result-in-message-name").     // In Only with existing interface     from("direct:in-reflection").to("avro:netty:localhost:" + avroPortReflection + "/setName?protocolClassName=org.apache.camel.avro.test.TestReflection").     // InOut     from("direct:inout").to("avro:netty:localhost:" + avroPort + "?protocolClassName=org.apache.camel.avro.generated.KeyValueProtocol").to("mock:result-inout").     // InOut     from("direct:inout-message-name").to("avro:netty:localhost:" + avroPort + "/get?protocolClassName=org.apache.camel.avro.generated.KeyValueProtocol").to("mock:result-inout-message-name").     // InOut with existing interface     from("direct:inout-reflection").to("avro:netty:localhost:" + avroPortReflection + "/increaseAge?protocolClassName=org.apache.camel.avro.test.TestReflection").to("mock:result-inout-reflection"). }
false;public;0;35;;public RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             // In Only             from("direct:in").to("avro:netty:localhost:" + avroPort + "?protocolClassName=org.apache.camel.avro.generated.KeyValueProtocol").             // In Only with message in route             from("direct:in-message-name").errorHandler(deadLetterChannel("mock:in-message-name-error")).to("avro:netty:localhost:" + avroPort + "/put?protocolClassName=org.apache.camel.avro.generated.KeyValueProtocol").to("mock:result-in-message-name").             // In Only with existing interface             from("direct:in-reflection").to("avro:netty:localhost:" + avroPortReflection + "/setName?protocolClassName=org.apache.camel.avro.test.TestReflection").             // InOut             from("direct:inout").to("avro:netty:localhost:" + avroPort + "?protocolClassName=org.apache.camel.avro.generated.KeyValueProtocol").to("mock:result-inout").             // InOut             from("direct:inout-message-name").to("avro:netty:localhost:" + avroPort + "/get?protocolClassName=org.apache.camel.avro.generated.KeyValueProtocol").to("mock:result-inout-message-name").             // InOut with existing interface             from("direct:inout-reflection").to("avro:netty:localhost:" + avroPortReflection + "/increaseAge?protocolClassName=org.apache.camel.avro.test.TestReflection").to("mock:result-inout-reflection").         }     }. }
