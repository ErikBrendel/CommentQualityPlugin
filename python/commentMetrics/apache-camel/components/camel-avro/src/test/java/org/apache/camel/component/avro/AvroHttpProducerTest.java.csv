commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;13;;@Override protected void initializeServer() throws IOException {     if (server == null) {         server = new HttpServer(new SpecificResponder(KeyValueProtocol.PROTOCOL, keyValue), avroPort).         server.start().     }     if (serverReflection == null) {         serverReflection = new HttpServer(new ReflectResponder(TestReflection.class, testReflection), avroPortReflection).         serverReflection.start().     } }
false;public;0;31;;@Override public void configure() throws Exception {     // In Only     from("direct:in").to("avro:http:localhost:" + avroPort + "?protocolClassName=org.apache.camel.avro.generated.KeyValueProtocol").     // In Only with message in route     from("direct:in-message-name").errorHandler(deadLetterChannel("mock:in-message-name-error")).to("avro:http:localhost:" + avroPort + "/put?protocolClassName=org.apache.camel.avro.generated.KeyValueProtocol").to("mock:result-in-message-name").     // In Only with existing interface     from("direct:in-reflection").to("avro:http:localhost:" + avroPortReflection + "/setName?protocolClassName=org.apache.camel.avro.test.TestReflection&singleParameter=true").     // InOut     from("direct:inout").to("avro:http:localhost:" + avroPort + "?protocolClassName=org.apache.camel.avro.generated.KeyValueProtocol").to("mock:result-inout").     // InOut with message in route     from("direct:inout-message-name").to("avro:http:localhost:" + avroPort + "/get?protocolClassName=org.apache.camel.avro.generated.KeyValueProtocol").to("mock:result-inout-message-name").     // InOut with existing interface     from("direct:inout-reflection").to("avro:http:localhost:" + avroPortReflection + "/increaseAge?protocolClassName=org.apache.camel.avro.test.TestReflection&singleParameter=true").to("mock:result-inout-reflection"). }
false;protected;0;35;;protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             // In Only             from("direct:in").to("avro:http:localhost:" + avroPort + "?protocolClassName=org.apache.camel.avro.generated.KeyValueProtocol").             // In Only with message in route             from("direct:in-message-name").errorHandler(deadLetterChannel("mock:in-message-name-error")).to("avro:http:localhost:" + avroPort + "/put?protocolClassName=org.apache.camel.avro.generated.KeyValueProtocol").to("mock:result-in-message-name").             // In Only with existing interface             from("direct:in-reflection").to("avro:http:localhost:" + avroPortReflection + "/setName?protocolClassName=org.apache.camel.avro.test.TestReflection&singleParameter=true").             // InOut             from("direct:inout").to("avro:http:localhost:" + avroPort + "?protocolClassName=org.apache.camel.avro.generated.KeyValueProtocol").to("mock:result-inout").             // InOut with message in route             from("direct:inout-message-name").to("avro:http:localhost:" + avroPort + "/get?protocolClassName=org.apache.camel.avro.generated.KeyValueProtocol").to("mock:result-inout-message-name").             // InOut with existing interface             from("direct:inout-reflection").to("avro:http:localhost:" + avroPortReflection + "/increaseAge?protocolClassName=org.apache.camel.avro.test.TestReflection&singleParameter=true").to("mock:result-inout-reflection").         }     }. }
