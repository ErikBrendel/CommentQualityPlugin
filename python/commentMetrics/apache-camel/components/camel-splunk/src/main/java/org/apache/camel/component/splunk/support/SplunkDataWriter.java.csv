commented;modifiers;parameterAmount;loc;comment;code
false;protected,abstract;1;1;;protected abstract Socket createSocket(Service service) throws IOException.
false;public;1;3;;public void write(SplunkEvent event) throws Exception {     doWrite(event.toString()). }
false;public;1;3;;public void write(String event) throws Exception {     doWrite(event + SplunkEvent.LINEBREAK). }
false;protected,synchronized;1;7;;protected synchronized void doWrite(String event) throws IOException {     LOG.debug("writing event to splunk:{}", event).     OutputStream ostream = socket.getOutputStream().     Writer writer = new OutputStreamWriter(ostream, StandardCharsets.UTF_8).     writer.write(event).     writer.flush(). }
false;public,synchronized;0;10;;@Override public synchronized void start() {     try {         socket = createSocket(endpoint.getService()).         connected = true.     } catch (Exception e) {         connected = false.         throw new RuntimeException(e).     } }
false;public,synchronized;0;11;;@Override public synchronized void stop() {     try {         if (socket != null) {             socket.close().             connected = false.         }     } catch (Exception e) {         throw new RuntimeException(e).     } }
false;public;0;3;;public boolean isConnected() {     return connected. }
