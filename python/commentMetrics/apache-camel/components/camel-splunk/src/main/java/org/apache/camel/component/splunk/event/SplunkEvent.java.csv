# id;timestamp;commentText;codeText;commentWords;codeWords
SplunkEvent -> public void addPair(String key, boolean value);1379403291;Add a key value pair;public void addPair(String key, boolean value) {_        addPair(key, String.valueOf(value))__    };add,a,key,value,pair;public,void,add,pair,string,key,boolean,value,add,pair,key,string,value,of,value
SplunkEvent -> public void addPair(String key, boolean value);1380016411;Add a key value pair;public void addPair(String key, boolean value) {_        addPair(key, String.valueOf(value))__    };add,a,key,value,pair;public,void,add,pair,string,key,boolean,value,add,pair,key,string,value,of,value
SplunkEvent -> public void addPair(String key, boolean value);1383391696;Add a key value pair;public void addPair(String key, boolean value) {_        addPair(key, String.valueOf(value))__    };add,a,key,value,pair;public,void,add,pair,string,key,boolean,value,add,pair,key,string,value,of,value
SplunkEvent -> public void addPair(String key, boolean value);1405374721;Add a key value pair;public void addPair(String key, boolean value) {_        addPair(key, String.valueOf(value))__    };add,a,key,value,pair;public,void,add,pair,string,key,boolean,value,add,pair,key,string,value,of,value
SplunkEvent -> public void addPair(String key, boolean value);1437831267;Add a key value pair;public void addPair(String key, boolean value) {_        addPair(key, String.valueOf(value))__    };add,a,key,value,pair;public,void,add,pair,string,key,boolean,value,add,pair,key,string,value,of,value
SplunkEvent -> public void addPair(String key, boolean value);1524063178;Add a key value pair;public void addPair(String key, boolean value) {_        addPair(key, String.valueOf(value))__    };add,a,key,value,pair;public,void,add,pair,string,key,boolean,value,add,pair,key,string,value,of,value
SplunkEvent -> public void addPair(String key, double value);1379403291;Add a key value pair;public void addPair(String key, double value) {_        addPair(key, String.valueOf(value))__    };add,a,key,value,pair;public,void,add,pair,string,key,double,value,add,pair,key,string,value,of,value
SplunkEvent -> public void addPair(String key, double value);1380016411;Add a key value pair;public void addPair(String key, double value) {_        addPair(key, String.valueOf(value))__    };add,a,key,value,pair;public,void,add,pair,string,key,double,value,add,pair,key,string,value,of,value
SplunkEvent -> public void addPair(String key, double value);1383391696;Add a key value pair;public void addPair(String key, double value) {_        addPair(key, String.valueOf(value))__    };add,a,key,value,pair;public,void,add,pair,string,key,double,value,add,pair,key,string,value,of,value
SplunkEvent -> public void addPair(String key, double value);1405374721;Add a key value pair;public void addPair(String key, double value) {_        addPair(key, String.valueOf(value))__    };add,a,key,value,pair;public,void,add,pair,string,key,double,value,add,pair,key,string,value,of,value
SplunkEvent -> public void addPair(String key, double value);1437831267;Add a key value pair;public void addPair(String key, double value) {_        addPair(key, String.valueOf(value))__    };add,a,key,value,pair;public,void,add,pair,string,key,double,value,add,pair,key,string,value,of,value
SplunkEvent -> public void addPair(String key, double value);1524063178;Add a key value pair;public void addPair(String key, double value) {_        addPair(key, String.valueOf(value))__    };add,a,key,value,pair;public,void,add,pair,string,key,double,value,add,pair,key,string,value,of,value
SplunkEvent -> public SplunkEvent();1379403291;Default constructor;public SplunkEvent() {_        this.eventMessage = new StringBuffer()__    };default,constructor;public,splunk,event,this,event,message,new,string,buffer
SplunkEvent -> public SplunkEvent();1380016411;Default constructor;public SplunkEvent() {_        this.eventMessage = new StringBuffer()__    };default,constructor;public,splunk,event,this,event,message,new,string,buffer
SplunkEvent -> public SplunkEvent();1383391696;Default constructor;public SplunkEvent() {_        this.event = new LinkedHashMap<String, String>()__    };default,constructor;public,splunk,event,this,event,new,linked,hash,map,string,string
SplunkEvent -> public SplunkEvent();1405374721;Default constructor;public SplunkEvent() {_        this.event = new LinkedHashMap<String, String>()__    };default,constructor;public,splunk,event,this,event,new,linked,hash,map,string,string
SplunkEvent -> public SplunkEvent();1437831267;Default constructor;public SplunkEvent() {_        this.event = new LinkedHashMap<String, String>()__    };default,constructor;public,splunk,event,this,event,new,linked,hash,map,string,string
SplunkEvent -> public SplunkEvent();1524063178;Default constructor;public SplunkEvent() {_        this.event = new LinkedHashMap<>()__    };default,constructor;public,splunk,event,this,event,new,linked,hash,map
SplunkEvent -> public void addPair(String key, int value);1379403291;Add a key value pair;public void addPair(String key, int value) {_        addPair(key, String.valueOf(value))__    };add,a,key,value,pair;public,void,add,pair,string,key,int,value,add,pair,key,string,value,of,value
SplunkEvent -> public void addPair(String key, int value);1380016411;Add a key value pair;public void addPair(String key, int value) {_        addPair(key, String.valueOf(value))__    };add,a,key,value,pair;public,void,add,pair,string,key,int,value,add,pair,key,string,value,of,value
SplunkEvent -> public void addPair(String key, int value);1383391696;Add a key value pair;public void addPair(String key, int value) {_        addPair(key, String.valueOf(value))__    };add,a,key,value,pair;public,void,add,pair,string,key,int,value,add,pair,key,string,value,of,value
SplunkEvent -> public void addPair(String key, int value);1405374721;Add a key value pair;public void addPair(String key, int value) {_        addPair(key, String.valueOf(value))__    };add,a,key,value,pair;public,void,add,pair,string,key,int,value,add,pair,key,string,value,of,value
SplunkEvent -> public void addPair(String key, int value);1437831267;Add a key value pair;public void addPair(String key, int value) {_        addPair(key, String.valueOf(value))__    };add,a,key,value,pair;public,void,add,pair,string,key,int,value,add,pair,key,string,value,of,value
SplunkEvent -> public void addPair(String key, int value);1524063178;Add a key value pair;public void addPair(String key, int value) {_        addPair(key, String.valueOf(value))__    };add,a,key,value,pair;public,void,add,pair,string,key,int,value,add,pair,key,string,value,of,value
SplunkEvent -> public void addPair(String key, String value);1379403291;Add a key value pair;public void addPair(String key, String value) {_        if (quoteValues) {_            this.eventMessage.append(key).append(KVDELIM).append(QUOTE).append(value).append(QUOTE).append(PAIRDELIM)__        } else {_            this.eventMessage.append(key).append(KVDELIM).append(value).append(PAIRDELIM)__        }_    };add,a,key,value,pair;public,void,add,pair,string,key,string,value,if,quote,values,this,event,message,append,key,append,kvdelim,append,quote,append,value,append,quote,append,pairdelim,else,this,event,message,append,key,append,kvdelim,append,value,append,pairdelim
SplunkEvent -> public void addPair(String key, String value);1380016411;Add a key value pair;public void addPair(String key, String value) {_        if (quoteValues) {_            this.eventMessage.append(key).append(KVDELIM).append(QUOTE).append(value).append(QUOTE).append(PAIRDELIM)__        } else {_            this.eventMessage.append(key).append(KVDELIM).append(value).append(PAIRDELIM)__        }_    };add,a,key,value,pair;public,void,add,pair,string,key,string,value,if,quote,values,this,event,message,append,key,append,kvdelim,append,quote,append,value,append,quote,append,pairdelim,else,this,event,message,append,key,append,kvdelim,append,value,append,pairdelim
SplunkEvent -> public void addPair(String key, String value);1383391696;Add a key value pair;public void addPair(String key, String value) {_        this.event.put(key, value)__    };add,a,key,value,pair;public,void,add,pair,string,key,string,value,this,event,put,key,value
SplunkEvent -> public void addPair(String key, String value);1405374721;Add a key value pair;public void addPair(String key, String value) {_        this.event.put(key, value)__    };add,a,key,value,pair;public,void,add,pair,string,key,string,value,this,event,put,key,value
SplunkEvent -> public void addPair(String key, String value);1437831267;Add a key value pair;public void addPair(String key, String value) {_        this.event.put(key, value)__    };add,a,key,value,pair;public,void,add,pair,string,key,string,value,this,event,put,key,value
SplunkEvent -> public void addPair(String key, String value);1524063178;Add a key value pair;public void addPair(String key, String value) {_        this.event.put(key, value)__    };add,a,key,value,pair;public,void,add,pair,string,key,string,value,this,event,put,key,value
SplunkEvent -> public SplunkEvent(String eventName, String eventID, boolean useInternalDate, boolean quoteValues);1379403291;Constructor to create a generic event__@param eventName       the event name_@param eventID         the event id_@param useInternalDate whether or not to add a date to the event string_@param quoteValues     whether or not to put quotes around values;public SplunkEvent(String eventName, String eventID, boolean useInternalDate, boolean quoteValues) {__        this.eventMessage = new StringBuffer()__        this.quoteValues = quoteValues__        this.useInternalDate = useInternalDate___        addPair(PREFIX_NAME, eventName)__        addPair(PREFIX_EVENT_ID, eventID)__    };constructor,to,create,a,generic,event,param,event,name,the,event,name,param,event,id,the,event,id,param,use,internal,date,whether,or,not,to,add,a,date,to,the,event,string,param,quote,values,whether,or,not,to,put,quotes,around,values;public,splunk,event,string,event,name,string,event,id,boolean,use,internal,date,boolean,quote,values,this,event,message,new,string,buffer,this,quote,values,quote,values,this,use,internal,date,use,internal,date,add,pair,event,name,add,pair,event,id
SplunkEvent -> public SplunkEvent(String eventName, String eventID, boolean useInternalDate, boolean quoteValues);1380016411;Constructor to create a generic event__@param eventName the event name_@param eventID the event id_@param useInternalDate whether or not to add a date to the event string_@param quoteValues whether or not to put quotes around values;public SplunkEvent(String eventName, String eventID, boolean useInternalDate, boolean quoteValues) {__        this.eventMessage = new StringBuffer()__        this.quoteValues = quoteValues__        this.useInternalDate = useInternalDate___        addPair(PREFIX_NAME, eventName)__        if (eventID != null) {_            addPair(PREFIX_EVENT_ID, eventID)__        }__    };constructor,to,create,a,generic,event,param,event,name,the,event,name,param,event,id,the,event,id,param,use,internal,date,whether,or,not,to,add,a,date,to,the,event,string,param,quote,values,whether,or,not,to,put,quotes,around,values;public,splunk,event,string,event,name,string,event,id,boolean,use,internal,date,boolean,quote,values,this,event,message,new,string,buffer,this,quote,values,quote,values,this,use,internal,date,use,internal,date,add,pair,event,name,if,event,id,null,add,pair,event,id
SplunkEvent -> public SplunkEvent(String eventName, String eventID, boolean useInternalDate, boolean quoteValues);1383391696;Constructor to create a generic event__@param eventName the event name_@param eventID the event id_@param useInternalDate whether or not to add a date to the event string_@param quoteValues whether or not to put quotes around values;public SplunkEvent(String eventName, String eventID, boolean useInternalDate, boolean quoteValues) {_        this.event = new LinkedHashMap<String, String>()__        this.quoteValues = quoteValues__        this.useInternalDate = useInternalDate___        addPair(PREFIX_NAME, eventName)__        if (eventID != null) {_            addPair(PREFIX_EVENT_ID, eventID)__        }__    };constructor,to,create,a,generic,event,param,event,name,the,event,name,param,event,id,the,event,id,param,use,internal,date,whether,or,not,to,add,a,date,to,the,event,string,param,quote,values,whether,or,not,to,put,quotes,around,values;public,splunk,event,string,event,name,string,event,id,boolean,use,internal,date,boolean,quote,values,this,event,new,linked,hash,map,string,string,this,quote,values,quote,values,this,use,internal,date,use,internal,date,add,pair,event,name,if,event,id,null,add,pair,event,id
SplunkEvent -> public SplunkEvent(String eventName, String eventID, boolean useInternalDate, boolean quoteValues);1405374721;Constructor to create a generic event__@param eventName the event name_@param eventID the event id_@param useInternalDate whether or not to add a date to the event string_@param quoteValues whether or not to put quotes around values;public SplunkEvent(String eventName, String eventID, boolean useInternalDate, boolean quoteValues) {_        this.event = new LinkedHashMap<String, String>()__        this.quoteValues = quoteValues__        this.useInternalDate = useInternalDate___        addPair(PREFIX_NAME, eventName)__        if (eventID != null) {_            addPair(PREFIX_EVENT_ID, eventID)__        }__    };constructor,to,create,a,generic,event,param,event,name,the,event,name,param,event,id,the,event,id,param,use,internal,date,whether,or,not,to,add,a,date,to,the,event,string,param,quote,values,whether,or,not,to,put,quotes,around,values;public,splunk,event,string,event,name,string,event,id,boolean,use,internal,date,boolean,quote,values,this,event,new,linked,hash,map,string,string,this,quote,values,quote,values,this,use,internal,date,use,internal,date,add,pair,event,name,if,event,id,null,add,pair,event,id
SplunkEvent -> public SplunkEvent(String eventName, String eventID, boolean useInternalDate, boolean quoteValues);1437831267;Constructor to create a generic event__@param eventName the event name_@param eventID the event id_@param useInternalDate whether or not to add a date to the event string_@param quoteValues whether or not to put quotes around values;public SplunkEvent(String eventName, String eventID, boolean useInternalDate, boolean quoteValues) {_        this.event = new LinkedHashMap<String, String>()__        this.quoteValues = quoteValues__        this.useInternalDate = useInternalDate___        addPair(PREFIX_NAME, eventName)__        if (eventID != null) {_            addPair(PREFIX_EVENT_ID, eventID)__        }__    };constructor,to,create,a,generic,event,param,event,name,the,event,name,param,event,id,the,event,id,param,use,internal,date,whether,or,not,to,add,a,date,to,the,event,string,param,quote,values,whether,or,not,to,put,quotes,around,values;public,splunk,event,string,event,name,string,event,id,boolean,use,internal,date,boolean,quote,values,this,event,new,linked,hash,map,string,string,this,quote,values,quote,values,this,use,internal,date,use,internal,date,add,pair,event,name,if,event,id,null,add,pair,event,id
SplunkEvent -> public SplunkEvent(String eventName, String eventID, boolean useInternalDate, boolean quoteValues);1524063178;Constructor to create a generic event__@param eventName the event name_@param eventID the event id_@param useInternalDate whether or not to add a date to the event string_@param quoteValues whether or not to put quotes around values;public SplunkEvent(String eventName, String eventID, boolean useInternalDate, boolean quoteValues) {_        this.event = new LinkedHashMap<>()__        this.quoteValues = quoteValues__        this.useInternalDate = useInternalDate___        addPair(PREFIX_NAME, eventName)__        if (eventID != null) {_            addPair(PREFIX_EVENT_ID, eventID)__        }__    };constructor,to,create,a,generic,event,param,event,name,the,event,name,param,event,id,the,event,id,param,use,internal,date,whether,or,not,to,add,a,date,to,the,event,string,param,quote,values,whether,or,not,to,put,quotes,around,values;public,splunk,event,string,event,name,string,event,id,boolean,use,internal,date,boolean,quote,values,this,event,new,linked,hash,map,this,quote,values,quote,values,this,use,internal,date,use,internal,date,add,pair,event,name,if,event,id,null,add,pair,event,id
SplunkEvent -> public void addPair(String key, Object value);1379403291;Add a key value pair;public void addPair(String key, Object value) {_        addPair(key, value.toString())__    };add,a,key,value,pair;public,void,add,pair,string,key,object,value,add,pair,key,value,to,string
SplunkEvent -> public void addPair(String key, Object value);1380016411;Add a key value pair;public void addPair(String key, Object value) {_        addPair(key, value.toString())__    };add,a,key,value,pair;public,void,add,pair,string,key,object,value,add,pair,key,value,to,string
SplunkEvent -> public void addPair(String key, Object value);1383391696;Add a key value pair;public void addPair(String key, Object value) {_        addPair(key, value.toString())__    };add,a,key,value,pair;public,void,add,pair,string,key,object,value,add,pair,key,value,to,string
SplunkEvent -> public void addPair(String key, Object value);1405374721;Add a key value pair;public void addPair(String key, Object value) {_        addPair(key, value.toString())__    };add,a,key,value,pair;public,void,add,pair,string,key,object,value,add,pair,key,value,to,string
SplunkEvent -> public void addPair(String key, Object value);1437831267;Add a key value pair;public void addPair(String key, Object value) {_        addPair(key, value.toString())__    };add,a,key,value,pair;public,void,add,pair,string,key,object,value,add,pair,key,value,to,string
SplunkEvent -> public void addPair(String key, Object value);1524063178;Add a key value pair;public void addPair(String key, Object value) {_        addPair(key, value.toString())__    };add,a,key,value,pair;public,void,add,pair,string,key,object,value,add,pair,key,value,to,string
SplunkEvent -> public void addPair(String key, long value);1379403291;Add a key value pair;public void addPair(String key, long value) {_        addPair(key, String.valueOf(value))__    };add,a,key,value,pair;public,void,add,pair,string,key,long,value,add,pair,key,string,value,of,value
SplunkEvent -> public void addPair(String key, long value);1380016411;Add a key value pair;public void addPair(String key, long value) {_        addPair(key, String.valueOf(value))__    };add,a,key,value,pair;public,void,add,pair,string,key,long,value,add,pair,key,string,value,of,value
SplunkEvent -> public void addPair(String key, long value);1383391696;Add a key value pair;public void addPair(String key, long value) {_        addPair(key, String.valueOf(value))__    };add,a,key,value,pair;public,void,add,pair,string,key,long,value,add,pair,key,string,value,of,value
SplunkEvent -> public void addPair(String key, long value);1405374721;Add a key value pair;public void addPair(String key, long value) {_        addPair(key, String.valueOf(value))__    };add,a,key,value,pair;public,void,add,pair,string,key,long,value,add,pair,key,string,value,of,value
SplunkEvent -> public void addPair(String key, long value);1437831267;Add a key value pair;public void addPair(String key, long value) {_        addPair(key, String.valueOf(value))__    };add,a,key,value,pair;public,void,add,pair,string,key,long,value,add,pair,key,string,value,of,value
SplunkEvent -> public void addPair(String key, long value);1524063178;Add a key value pair;public void addPair(String key, long value) {_        addPair(key, String.valueOf(value))__    };add,a,key,value,pair;public,void,add,pair,string,key,long,value,add,pair,key,string,value,of,value
SplunkEvent -> private void addThrowableObject(Throwable throwable, int stackTraceDepth);1379403291;Internal private method for formatting Throwable,Error,Exception objects_in a more linear and Splunk friendly manner than printStackTrace__@param throwable       the Throwable object to add to the event_@param stackTraceDepth maximum number of stacktrace elements to log, -1_for all;private void addThrowableObject(Throwable throwable, int stackTraceDepth) {_        addPair(THROWABLE_CLASS, throwable.getClass().getCanonicalName())__        addPair(THROWABLE_MESSAGE, throwable.getMessage())__        StackTraceElement[] elements = throwable.getStackTrace()__        StringBuilder sb = new StringBuilder()__        int depth = 0__        for (StackTraceElement element : elements) {_            depth++__            if (stackTraceDepth == -1 || stackTraceDepth >= depth) {_                sb.append(element.toString()).append(",")__            } else {_                break__            }_        }_        addPair(THROWABLE_STACKTRACE_ELEMENTS, sb.toString())__    };internal,private,method,for,formatting,throwable,error,exception,objects,in,a,more,linear,and,splunk,friendly,manner,than,print,stack,trace,param,throwable,the,throwable,object,to,add,to,the,event,param,stack,trace,depth,maximum,number,of,stacktrace,elements,to,log,1,for,all;private,void,add,throwable,object,throwable,throwable,int,stack,trace,depth,add,pair,throwable,get,class,get,canonical,name,add,pair,throwable,get,message,stack,trace,element,elements,throwable,get,stack,trace,string,builder,sb,new,string,builder,int,depth,0,for,stack,trace,element,element,elements,depth,if,stack,trace,depth,1,stack,trace,depth,depth,sb,append,element,to,string,append,else,break,add,pair,sb,to,string
SplunkEvent -> private void addThrowableObject(Throwable throwable, int stackTraceDepth);1380016411;Internal private method for formatting Throwable,Error,Exception objects_in a more linear and Splunk friendly manner than printStackTrace__@param throwable the Throwable object to add to the event_@param stackTraceDepth maximum number of stacktrace elements to log, -1_for all;private void addThrowableObject(Throwable throwable, int stackTraceDepth) {_        addPair(THROWABLE_CLASS, throwable.getClass().getCanonicalName())__        addPair(THROWABLE_MESSAGE, throwable.getMessage())__        StackTraceElement[] elements = throwable.getStackTrace()__        StringBuilder sb = new StringBuilder()__        int depth = 0__        for (StackTraceElement element : elements) {_            depth++__            if (stackTraceDepth == -1 || stackTraceDepth >= depth) {_                sb.append(element.toString()).append(",")__            } else {_                break__            }_        }_        addPair(THROWABLE_STACKTRACE_ELEMENTS, sb.toString())__    };internal,private,method,for,formatting,throwable,error,exception,objects,in,a,more,linear,and,splunk,friendly,manner,than,print,stack,trace,param,throwable,the,throwable,object,to,add,to,the,event,param,stack,trace,depth,maximum,number,of,stacktrace,elements,to,log,1,for,all;private,void,add,throwable,object,throwable,throwable,int,stack,trace,depth,add,pair,throwable,get,class,get,canonical,name,add,pair,throwable,get,message,stack,trace,element,elements,throwable,get,stack,trace,string,builder,sb,new,string,builder,int,depth,0,for,stack,trace,element,element,elements,depth,if,stack,trace,depth,1,stack,trace,depth,depth,sb,append,element,to,string,append,else,break,add,pair,sb,to,string
SplunkEvent -> private void addThrowableObject(Throwable throwable, int stackTraceDepth);1383391696;Internal private method for formatting Throwable,Error,Exception objects_in a more linear and Splunk friendly manner than printStackTrace__@param throwable the Throwable object to add to the event_@param stackTraceDepth maximum number of stacktrace elements to log, -1_for all;private void addThrowableObject(Throwable throwable, int stackTraceDepth) {_        addPair(THROWABLE_CLASS, throwable.getClass().getCanonicalName())__        addPair(THROWABLE_MESSAGE, throwable.getMessage())__        StackTraceElement[] elements = throwable.getStackTrace()__        StringBuilder sb = new StringBuilder()__        int depth = 0__        for (StackTraceElement element : elements) {_            depth++__            if (stackTraceDepth == -1 || stackTraceDepth >= depth) {_                sb.append(element.toString()).append(",")__            } else {_                break__            }_        }_        addPair(THROWABLE_STACKTRACE_ELEMENTS, sb.toString())__    };internal,private,method,for,formatting,throwable,error,exception,objects,in,a,more,linear,and,splunk,friendly,manner,than,print,stack,trace,param,throwable,the,throwable,object,to,add,to,the,event,param,stack,trace,depth,maximum,number,of,stacktrace,elements,to,log,1,for,all;private,void,add,throwable,object,throwable,throwable,int,stack,trace,depth,add,pair,throwable,get,class,get,canonical,name,add,pair,throwable,get,message,stack,trace,element,elements,throwable,get,stack,trace,string,builder,sb,new,string,builder,int,depth,0,for,stack,trace,element,element,elements,depth,if,stack,trace,depth,1,stack,trace,depth,depth,sb,append,element,to,string,append,else,break,add,pair,sb,to,string
SplunkEvent -> private void addThrowableObject(Throwable throwable, int stackTraceDepth);1405374721;Internal private method for formatting Throwable,Error,Exception objects_in a more linear and Splunk friendly manner than printStackTrace__@param throwable the Throwable object to add to the event_@param stackTraceDepth maximum number of stacktrace elements to log, -1_for all;private void addThrowableObject(Throwable throwable, int stackTraceDepth) {_        addPair(THROWABLE_CLASS, throwable.getClass().getCanonicalName())__        addPair(THROWABLE_MESSAGE, throwable.getMessage())__        StackTraceElement[] elements = throwable.getStackTrace()__        StringBuilder sb = new StringBuilder()__        int depth = 0__        for (StackTraceElement element : elements) {_            depth++__            if (stackTraceDepth == -1 || stackTraceDepth >= depth) {_                sb.append(element.toString()).append(",")__            } else {_                break__            }_        }_        addPair(THROWABLE_STACKTRACE_ELEMENTS, sb.toString())__    };internal,private,method,for,formatting,throwable,error,exception,objects,in,a,more,linear,and,splunk,friendly,manner,than,print,stack,trace,param,throwable,the,throwable,object,to,add,to,the,event,param,stack,trace,depth,maximum,number,of,stacktrace,elements,to,log,1,for,all;private,void,add,throwable,object,throwable,throwable,int,stack,trace,depth,add,pair,throwable,get,class,get,canonical,name,add,pair,throwable,get,message,stack,trace,element,elements,throwable,get,stack,trace,string,builder,sb,new,string,builder,int,depth,0,for,stack,trace,element,element,elements,depth,if,stack,trace,depth,1,stack,trace,depth,depth,sb,append,element,to,string,append,else,break,add,pair,sb,to,string
SplunkEvent -> private void addThrowableObject(Throwable throwable, int stackTraceDepth);1437831267;Internal private method for formatting Throwable,Error,Exception objects_in a more linear and Splunk friendly manner than printStackTrace__@param throwable the Throwable object to add to the event_@param stackTraceDepth maximum number of stacktrace elements to log, -1_for all;private void addThrowableObject(Throwable throwable, int stackTraceDepth) {_        addPair(THROWABLE_CLASS, throwable.getClass().getCanonicalName())__        addPair(THROWABLE_MESSAGE, throwable.getMessage())__        StackTraceElement[] elements = throwable.getStackTrace()__        StringBuilder sb = new StringBuilder()__        int depth = 0__        for (StackTraceElement element : elements) {_            depth++__            if (stackTraceDepth == -1 || stackTraceDepth >= depth) {_                sb.append(element.toString()).append(",")__            } else {_                break__            }_        }_        addPair(THROWABLE_STACKTRACE_ELEMENTS, sb.toString())__    };internal,private,method,for,formatting,throwable,error,exception,objects,in,a,more,linear,and,splunk,friendly,manner,than,print,stack,trace,param,throwable,the,throwable,object,to,add,to,the,event,param,stack,trace,depth,maximum,number,of,stacktrace,elements,to,log,1,for,all;private,void,add,throwable,object,throwable,throwable,int,stack,trace,depth,add,pair,throwable,get,class,get,canonical,name,add,pair,throwable,get,message,stack,trace,element,elements,throwable,get,stack,trace,string,builder,sb,new,string,builder,int,depth,0,for,stack,trace,element,element,elements,depth,if,stack,trace,depth,1,stack,trace,depth,depth,sb,append,element,to,string,append,else,break,add,pair,sb,to,string
SplunkEvent -> private void addThrowableObject(Throwable throwable, int stackTraceDepth);1524063178;Internal private method for formatting Throwable,Error,Exception objects_in a more linear and Splunk friendly manner than printStackTrace__@param throwable the Throwable object to add to the event_@param stackTraceDepth maximum number of stacktrace elements to log, -1_for all;private void addThrowableObject(Throwable throwable, int stackTraceDepth) {_        addPair(THROWABLE_CLASS, throwable.getClass().getCanonicalName())__        addPair(THROWABLE_MESSAGE, throwable.getMessage())__        StackTraceElement[] elements = throwable.getStackTrace()__        StringBuilder sb = new StringBuilder()__        int depth = 0__        for (StackTraceElement element : elements) {_            depth++__            if (stackTraceDepth == -1 || stackTraceDepth >= depth) {_                sb.append(element.toString()).append(",")__            } else {_                break__            }_        }_        addPair(THROWABLE_STACKTRACE_ELEMENTS, sb.toString())__    };internal,private,method,for,formatting,throwable,error,exception,objects,in,a,more,linear,and,splunk,friendly,manner,than,print,stack,trace,param,throwable,the,throwable,object,to,add,to,the,event,param,stack,trace,depth,maximum,number,of,stacktrace,elements,to,log,1,for,all;private,void,add,throwable,object,throwable,throwable,int,stack,trace,depth,add,pair,throwable,get,class,get,canonical,name,add,pair,throwable,get,message,stack,trace,element,elements,throwable,get,stack,trace,string,builder,sb,new,string,builder,int,depth,0,for,stack,trace,element,element,elements,depth,if,stack,trace,depth,1,stack,trace,depth,depth,sb,append,element,to,string,append,else,break,add,pair,sb,to,string
SplunkEvent -> public SplunkEvent(SplunkEvent splunkEvent);1379403291;A Copy constructor;public SplunkEvent(SplunkEvent splunkEvent) {_        this.eventMessage = splunkEvent.eventMessage__        this.quoteValues = splunkEvent.quoteValues__        this.useInternalDate = splunkEvent.useInternalDate__    };a,copy,constructor;public,splunk,event,splunk,event,splunk,event,this,event,message,splunk,event,event,message,this,quote,values,splunk,event,quote,values,this,use,internal,date,splunk,event,use,internal,date
SplunkEvent -> public SplunkEvent(SplunkEvent splunkEvent);1380016411;A Copy constructor;public SplunkEvent(SplunkEvent splunkEvent) {_        this.eventMessage = splunkEvent.eventMessage__        this.quoteValues = splunkEvent.quoteValues__        this.useInternalDate = splunkEvent.useInternalDate__    };a,copy,constructor;public,splunk,event,splunk,event,splunk,event,this,event,message,splunk,event,event,message,this,quote,values,splunk,event,quote,values,this,use,internal,date,splunk,event,use,internal,date
SplunkEvent -> public SplunkEvent(SplunkEvent splunkEvent);1383391696;A Copy constructor;public SplunkEvent(SplunkEvent splunkEvent) {_        this.event = splunkEvent.getEventData()__        this.quoteValues = splunkEvent.quoteValues__        this.useInternalDate = splunkEvent.useInternalDate__    };a,copy,constructor;public,splunk,event,splunk,event,splunk,event,this,event,splunk,event,get,event,data,this,quote,values,splunk,event,quote,values,this,use,internal,date,splunk,event,use,internal,date
SplunkEvent -> public SplunkEvent(SplunkEvent splunkEvent);1405374721;A Copy constructor;public SplunkEvent(SplunkEvent splunkEvent) {_        this.event = splunkEvent.getEventData()__        this.quoteValues = splunkEvent.quoteValues__        this.useInternalDate = splunkEvent.useInternalDate__    };a,copy,constructor;public,splunk,event,splunk,event,splunk,event,this,event,splunk,event,get,event,data,this,quote,values,splunk,event,quote,values,this,use,internal,date,splunk,event,use,internal,date
SplunkEvent -> public SplunkEvent(SplunkEvent splunkEvent);1437831267;A Copy constructor;public SplunkEvent(SplunkEvent splunkEvent) {_        this.event = splunkEvent.getEventData()__        this.quoteValues = splunkEvent.quoteValues__        this.useInternalDate = splunkEvent.useInternalDate__    };a,copy,constructor;public,splunk,event,splunk,event,splunk,event,this,event,splunk,event,get,event,data,this,quote,values,splunk,event,quote,values,this,use,internal,date,splunk,event,use,internal,date
SplunkEvent -> public SplunkEvent(SplunkEvent splunkEvent);1524063178;A Copy constructor;public SplunkEvent(SplunkEvent splunkEvent) {_        this.event = splunkEvent.getEventData()__        this.quoteValues = splunkEvent.quoteValues__        this.useInternalDate = splunkEvent.useInternalDate__    };a,copy,constructor;public,splunk,event,splunk,event,splunk,event,this,event,splunk,event,get,event,data,this,quote,values,splunk,event,quote,values,this,use,internal,date,splunk,event,use,internal,date
SplunkEvent -> public void addThrowable(Throwable throwable);1379403291;Utility method for formatting Throwable,Error,Exception objects in a more_linear and Splunk friendly manner than printStackTrace__@param throwable the Throwable object to add to the event;public void addThrowable(Throwable throwable) {_        addThrowableObject(throwable, -1)__    };utility,method,for,formatting,throwable,error,exception,objects,in,a,more,linear,and,splunk,friendly,manner,than,print,stack,trace,param,throwable,the,throwable,object,to,add,to,the,event;public,void,add,throwable,throwable,throwable,add,throwable,object,throwable,1
SplunkEvent -> public void addThrowable(Throwable throwable);1380016411;Utility method for formatting Throwable,Error,Exception objects in a more_linear and Splunk friendly manner than printStackTrace__@param throwable the Throwable object to add to the event;public void addThrowable(Throwable throwable) {_        addThrowableObject(throwable, -1)__    };utility,method,for,formatting,throwable,error,exception,objects,in,a,more,linear,and,splunk,friendly,manner,than,print,stack,trace,param,throwable,the,throwable,object,to,add,to,the,event;public,void,add,throwable,throwable,throwable,add,throwable,object,throwable,1
SplunkEvent -> public void addThrowable(Throwable throwable);1383391696;Utility method for formatting Throwable,Error,Exception objects in a more_linear and Splunk friendly manner than printStackTrace__@param throwable the Throwable object to add to the event;public void addThrowable(Throwable throwable) {_        addThrowableObject(throwable, -1)__    };utility,method,for,formatting,throwable,error,exception,objects,in,a,more,linear,and,splunk,friendly,manner,than,print,stack,trace,param,throwable,the,throwable,object,to,add,to,the,event;public,void,add,throwable,throwable,throwable,add,throwable,object,throwable,1
SplunkEvent -> public void addThrowable(Throwable throwable);1405374721;Utility method for formatting Throwable,Error,Exception objects in a more_linear and Splunk friendly manner than printStackTrace__@param throwable the Throwable object to add to the event;public void addThrowable(Throwable throwable) {_        addThrowableObject(throwable, -1)__    };utility,method,for,formatting,throwable,error,exception,objects,in,a,more,linear,and,splunk,friendly,manner,than,print,stack,trace,param,throwable,the,throwable,object,to,add,to,the,event;public,void,add,throwable,throwable,throwable,add,throwable,object,throwable,1
SplunkEvent -> public void addThrowable(Throwable throwable);1437831267;Utility method for formatting Throwable,Error,Exception objects in a more_linear and Splunk friendly manner than printStackTrace__@param throwable the Throwable object to add to the event;public void addThrowable(Throwable throwable) {_        addThrowableObject(throwable, -1)__    };utility,method,for,formatting,throwable,error,exception,objects,in,a,more,linear,and,splunk,friendly,manner,than,print,stack,trace,param,throwable,the,throwable,object,to,add,to,the,event;public,void,add,throwable,throwable,throwable,add,throwable,object,throwable,1
SplunkEvent -> public void addThrowable(Throwable throwable);1524063178;Utility method for formatting Throwable,Error,Exception objects in a more_linear and Splunk friendly manner than printStackTrace__@param throwable the Throwable object to add to the event;public void addThrowable(Throwable throwable) {_        addThrowableObject(throwable, -1)__    };utility,method,for,formatting,throwable,error,exception,objects,in,a,more,linear,and,splunk,friendly,manner,than,print,stack,trace,param,throwable,the,throwable,object,to,add,to,the,event;public,void,add,throwable,throwable,throwable,add,throwable,object,throwable,1
SplunkEvent -> public void addThrowable(Throwable throwable, int stackTraceDepth);1379403291;Utility method for formatting Throwable,Error,Exception objects in a more_linear and Splunk friendly manner than printStackTrace__@param throwable       the Throwable object to add to the event_@param stackTraceDepth maximum number of stacktrace elements to log;public void addThrowable(Throwable throwable, int stackTraceDepth) {_        addThrowableObject(throwable, stackTraceDepth)__    };utility,method,for,formatting,throwable,error,exception,objects,in,a,more,linear,and,splunk,friendly,manner,than,print,stack,trace,param,throwable,the,throwable,object,to,add,to,the,event,param,stack,trace,depth,maximum,number,of,stacktrace,elements,to,log;public,void,add,throwable,throwable,throwable,int,stack,trace,depth,add,throwable,object,throwable,stack,trace,depth
SplunkEvent -> public void addThrowable(Throwable throwable, int stackTraceDepth);1380016411;Utility method for formatting Throwable,Error,Exception objects in a more_linear and Splunk friendly manner than printStackTrace__@param throwable the Throwable object to add to the event_@param stackTraceDepth maximum number of stacktrace elements to log;public void addThrowable(Throwable throwable, int stackTraceDepth) {_        addThrowableObject(throwable, stackTraceDepth)__    };utility,method,for,formatting,throwable,error,exception,objects,in,a,more,linear,and,splunk,friendly,manner,than,print,stack,trace,param,throwable,the,throwable,object,to,add,to,the,event,param,stack,trace,depth,maximum,number,of,stacktrace,elements,to,log;public,void,add,throwable,throwable,throwable,int,stack,trace,depth,add,throwable,object,throwable,stack,trace,depth
SplunkEvent -> public void addThrowable(Throwable throwable, int stackTraceDepth);1383391696;Utility method for formatting Throwable,Error,Exception objects in a more_linear and Splunk friendly manner than printStackTrace__@param throwable the Throwable object to add to the event_@param stackTraceDepth maximum number of stacktrace elements to log;public void addThrowable(Throwable throwable, int stackTraceDepth) {_        addThrowableObject(throwable, stackTraceDepth)__    };utility,method,for,formatting,throwable,error,exception,objects,in,a,more,linear,and,splunk,friendly,manner,than,print,stack,trace,param,throwable,the,throwable,object,to,add,to,the,event,param,stack,trace,depth,maximum,number,of,stacktrace,elements,to,log;public,void,add,throwable,throwable,throwable,int,stack,trace,depth,add,throwable,object,throwable,stack,trace,depth
SplunkEvent -> public void addThrowable(Throwable throwable, int stackTraceDepth);1405374721;Utility method for formatting Throwable,Error,Exception objects in a more_linear and Splunk friendly manner than printStackTrace__@param throwable the Throwable object to add to the event_@param stackTraceDepth maximum number of stacktrace elements to log;public void addThrowable(Throwable throwable, int stackTraceDepth) {_        addThrowableObject(throwable, stackTraceDepth)__    };utility,method,for,formatting,throwable,error,exception,objects,in,a,more,linear,and,splunk,friendly,manner,than,print,stack,trace,param,throwable,the,throwable,object,to,add,to,the,event,param,stack,trace,depth,maximum,number,of,stacktrace,elements,to,log;public,void,add,throwable,throwable,throwable,int,stack,trace,depth,add,throwable,object,throwable,stack,trace,depth
SplunkEvent -> public void addThrowable(Throwable throwable, int stackTraceDepth);1437831267;Utility method for formatting Throwable,Error,Exception objects in a more_linear and Splunk friendly manner than printStackTrace__@param throwable the Throwable object to add to the event_@param stackTraceDepth maximum number of stacktrace elements to log;public void addThrowable(Throwable throwable, int stackTraceDepth) {_        addThrowableObject(throwable, stackTraceDepth)__    };utility,method,for,formatting,throwable,error,exception,objects,in,a,more,linear,and,splunk,friendly,manner,than,print,stack,trace,param,throwable,the,throwable,object,to,add,to,the,event,param,stack,trace,depth,maximum,number,of,stacktrace,elements,to,log;public,void,add,throwable,throwable,throwable,int,stack,trace,depth,add,throwable,object,throwable,stack,trace,depth
SplunkEvent -> public void addThrowable(Throwable throwable, int stackTraceDepth);1524063178;Utility method for formatting Throwable,Error,Exception objects in a more_linear and Splunk friendly manner than printStackTrace__@param throwable the Throwable object to add to the event_@param stackTraceDepth maximum number of stacktrace elements to log;public void addThrowable(Throwable throwable, int stackTraceDepth) {_        addThrowableObject(throwable, stackTraceDepth)__    };utility,method,for,formatting,throwable,error,exception,objects,in,a,more,linear,and,splunk,friendly,manner,than,print,stack,trace,param,throwable,the,throwable,object,to,add,to,the,event,param,stack,trace,depth,maximum,number,of,stacktrace,elements,to,log;public,void,add,throwable,throwable,throwable,int,stack,trace,depth,add,throwable,object,throwable,stack,trace,depth
SplunkEvent -> public SplunkEvent(String eventName, String eventID);1379403291;Constructor to create a generic event with the default format__@param eventName the event name_@param eventID   the event ID;public SplunkEvent(String eventName, String eventID) {_        this(eventName, eventID, true, true)__    };constructor,to,create,a,generic,event,with,the,default,format,param,event,name,the,event,name,param,event,id,the,event,id;public,splunk,event,string,event,name,string,event,id,this,event,name,event,id,true,true
SplunkEvent -> public SplunkEvent(String eventName, String eventID);1380016411;Constructor to create a generic event with the default format__@param eventName the event name_@param eventID the event ID;public SplunkEvent(String eventName, String eventID) {_        this(eventName, eventID, true, true)__    };constructor,to,create,a,generic,event,with,the,default,format,param,event,name,the,event,name,param,event,id,the,event,id;public,splunk,event,string,event,name,string,event,id,this,event,name,event,id,true,true
SplunkEvent -> public SplunkEvent(String eventName, String eventID);1383391696;Constructor to create a generic event with the default format__@param eventName the event name_@param eventID the event ID;public SplunkEvent(String eventName, String eventID) {_        this(eventName, eventID, true, true)__    };constructor,to,create,a,generic,event,with,the,default,format,param,event,name,the,event,name,param,event,id,the,event,id;public,splunk,event,string,event,name,string,event,id,this,event,name,event,id,true,true
SplunkEvent -> public SplunkEvent(String eventName, String eventID);1405374721;Constructor to create a generic event with the default format__@param eventName the event name_@param eventID the event ID;public SplunkEvent(String eventName, String eventID) {_        this(eventName, eventID, true, true)__    };constructor,to,create,a,generic,event,with,the,default,format,param,event,name,the,event,name,param,event,id,the,event,id;public,splunk,event,string,event,name,string,event,id,this,event,name,event,id,true,true
SplunkEvent -> public SplunkEvent(String eventName, String eventID);1437831267;Constructor to create a generic event with the default format__@param eventName the event name_@param eventID the event ID;public SplunkEvent(String eventName, String eventID) {_        this(eventName, eventID, true, true)__    };constructor,to,create,a,generic,event,with,the,default,format,param,event,name,the,event,name,param,event,id,the,event,id;public,splunk,event,string,event,name,string,event,id,this,event,name,event,id,true,true
SplunkEvent -> public SplunkEvent(String eventName, String eventID);1524063178;Constructor to create a generic event with the default format__@param eventName the event name_@param eventID the event ID;public SplunkEvent(String eventName, String eventID) {_        this(eventName, eventID, true, true)__    };constructor,to,create,a,generic,event,with,the,default,format,param,event,name,the,event,name,param,event,id,the,event,id;public,splunk,event,string,event,name,string,event,id,this,event,name,event,id,true,true
SplunkEvent -> @Override     public String toString();1379403291;return the completed event message;@Override_    public String toString() {_        String event = ""___        if (useInternalDate) {_            StringBuilder clonedMessage = new StringBuilder()__            clonedMessage.append(DATE_FORMATTER.print(new Date().getTime())).append(PAIRDELIM).append(this.eventMessage)__            event = clonedMessage.toString()__        } else {_            event = eventMessage.toString()__        }__        _        String result = event.substring(0, event.length() - PAIRDELIM.length()) + LINEBREAK__        return result__    };return,the,completed,event,message;override,public,string,to,string,string,event,if,use,internal,date,string,builder,cloned,message,new,string,builder,cloned,message,append,print,new,date,get,time,append,pairdelim,append,this,event,message,event,cloned,message,to,string,else,event,event,message,to,string,string,result,event,substring,0,event,length,pairdelim,length,linebreak,return,result
SplunkEvent -> @Override     public String toString();1380016411;return the completed event message;@Override_    public String toString() {_        String event = ""___        if (useInternalDate) {_            StringBuilder clonedMessage = new StringBuilder()__            clonedMessage.append(DATE_FORMATTER.print(new Date().getTime())).append(PAIRDELIM).append(this.eventMessage)__            event = clonedMessage.toString()__        } else {_            event = eventMessage.toString()__        }__        _        String result = event.substring(0, event.length() - PAIRDELIM.length()) + LINEBREAK__        return result__    };return,the,completed,event,message;override,public,string,to,string,string,event,if,use,internal,date,string,builder,cloned,message,new,string,builder,cloned,message,append,print,new,date,get,time,append,pairdelim,append,this,event,message,event,cloned,message,to,string,else,event,event,message,to,string,string,result,event,substring,0,event,length,pairdelim,length,linebreak,return,result
SplunkEvent -> @Override     public String toString();1383391696;return the completed event message;@Override_    public String toString() {_        StringBuilder event = new StringBuilder()__        if (useInternalDate) {_            event.append(DATE_FORMATTER.print(new Date().getTime())).append(PAIRDELIM)__        }_        for (String key : this.event.keySet()) {_            event.append(key)__            event.append(KVDELIM)__            if (quoteValues) {_                event.append(QUOTE).append(this.event.get(key)).append(QUOTE).append(PAIRDELIM)__            } else {_                event.append(this.event.get(key)).append(PAIRDELIM)__            }_        }_        _        String result = event.substring(0, event.length() - PAIRDELIM.length()) + LINEBREAK__        return result__    };return,the,completed,event,message;override,public,string,to,string,string,builder,event,new,string,builder,if,use,internal,date,event,append,print,new,date,get,time,append,pairdelim,for,string,key,this,event,key,set,event,append,key,event,append,kvdelim,if,quote,values,event,append,quote,append,this,event,get,key,append,quote,append,pairdelim,else,event,append,this,event,get,key,append,pairdelim,string,result,event,substring,0,event,length,pairdelim,length,linebreak,return,result
SplunkEvent -> @Override     public String toString();1405374721;return the completed event message;@Override_    public String toString() {_        StringBuilder event = new StringBuilder()__        if (useInternalDate) {_            event.append(DATE_FORMATTER.print(new Date().getTime())).append(PAIRDELIM)__        }_        for (String key : this.event.keySet()) {_            event.append(key)__            event.append(KVDELIM)__            if (quoteValues) {_                event.append(QUOTE).append(this.event.get(key)).append(QUOTE).append(PAIRDELIM)__            } else {_                event.append(this.event.get(key)).append(PAIRDELIM)__            }_        }_        _        String result = event.substring(0, event.length() - PAIRDELIM.length()) + LINEBREAK__        return result__    };return,the,completed,event,message;override,public,string,to,string,string,builder,event,new,string,builder,if,use,internal,date,event,append,print,new,date,get,time,append,pairdelim,for,string,key,this,event,key,set,event,append,key,event,append,kvdelim,if,quote,values,event,append,quote,append,this,event,get,key,append,quote,append,pairdelim,else,event,append,this,event,get,key,append,pairdelim,string,result,event,substring,0,event,length,pairdelim,length,linebreak,return,result
SplunkEvent -> @Override     public String toString();1437831267;return the completed event message;@Override_    public String toString() {_        StringBuilder event = new StringBuilder()__        if (useInternalDate) {_            event.append(DATE_FORMATTER.print(new Date().getTime())).append(PAIRDELIM)__        }_        for (String key : this.event.keySet()) {_            event.append(key)__            event.append(KVDELIM)__            if (quoteValues) {_                event.append(QUOTE).append(this.event.get(key)).append(QUOTE).append(PAIRDELIM)__            } else {_                event.append(this.event.get(key)).append(PAIRDELIM)__            }_        }_        _        String result = event.substring(0, event.length() - PAIRDELIM.length()) + LINEBREAK__        return result__    };return,the,completed,event,message;override,public,string,to,string,string,builder,event,new,string,builder,if,use,internal,date,event,append,print,new,date,get,time,append,pairdelim,for,string,key,this,event,key,set,event,append,key,event,append,kvdelim,if,quote,values,event,append,quote,append,this,event,get,key,append,quote,append,pairdelim,else,event,append,this,event,get,key,append,pairdelim,string,result,event,substring,0,event,length,pairdelim,length,linebreak,return,result
SplunkEvent -> @Override     public String toString();1524063178;return the completed event message;@Override_    public String toString() {_        StringBuilder event = new StringBuilder()__        if (useInternalDate) {_            event.append(DATE_FORMATTER.print(new Date().getTime())).append(PAIRDELIM)__        }_        for (String key : this.event.keySet()) {_            event.append(key)__            event.append(KVDELIM)__            if (quoteValues) {_                event.append(QUOTE).append(this.event.get(key)).append(QUOTE).append(PAIRDELIM)__            } else {_                event.append(this.event.get(key)).append(PAIRDELIM)__            }_        }_        _        String result = event.substring(0, event.length() - PAIRDELIM.length()) + LINEBREAK__        return result__    };return,the,completed,event,message;override,public,string,to,string,string,builder,event,new,string,builder,if,use,internal,date,event,append,print,new,date,get,time,append,pairdelim,for,string,key,this,event,key,set,event,append,key,event,append,kvdelim,if,quote,values,event,append,quote,append,this,event,get,key,append,quote,append,pairdelim,else,event,append,this,event,get,key,append,pairdelim,string,result,event,substring,0,event,length,pairdelim,length,linebreak,return,result
SplunkEvent -> public SplunkEvent(Map<String, String> data);1379403291;A Constructor to load data from a Map__@param data the map;public SplunkEvent(Map<String, String> data) {_        this.eventMessage = new StringBuffer()__        for (String key : data.keySet()) {_            this.addPair(key, data.get(key))__        }_    };a,constructor,to,load,data,from,a,map,param,data,the,map;public,splunk,event,map,string,string,data,this,event,message,new,string,buffer,for,string,key,data,key,set,this,add,pair,key,data,get,key
SplunkEvent -> public SplunkEvent(Map<String, String> data);1380016411;A Constructor to load data from a Map__@param data the map;public SplunkEvent(Map<String, String> data) {_        this.eventMessage = new StringBuffer()__        for (String key : data.keySet()) {_            this.addPair(key, data.get(key))__        }_    };a,constructor,to,load,data,from,a,map,param,data,the,map;public,splunk,event,map,string,string,data,this,event,message,new,string,buffer,for,string,key,data,key,set,this,add,pair,key,data,get,key
SplunkEvent -> public SplunkEvent(Map<String, String> data);1383391696;A Constructor to load data from a Map__@param data the map;public SplunkEvent(Map<String, String> data) {_        this.event = data__    };a,constructor,to,load,data,from,a,map,param,data,the,map;public,splunk,event,map,string,string,data,this,event,data
SplunkEvent -> public SplunkEvent(Map<String, String> data);1405374721;A Constructor to load data from a Map__@param data the map;public SplunkEvent(Map<String, String> data) {_        this.event = data__    };a,constructor,to,load,data,from,a,map,param,data,the,map;public,splunk,event,map,string,string,data,this,event,data
SplunkEvent -> public SplunkEvent(Map<String, String> data);1437831267;A Constructor to load data from a Map__@param data the map;public SplunkEvent(Map<String, String> data) {_        this.event = data__    };a,constructor,to,load,data,from,a,map,param,data,the,map;public,splunk,event,map,string,string,data,this,event,data
SplunkEvent -> public SplunkEvent(Map<String, String> data);1524063178;A Constructor to load data from a Map__@param data the map;public SplunkEvent(Map<String, String> data) {_        this.event = data__    };a,constructor,to,load,data,from,a,map,param,data,the,map;public,splunk,event,map,string,string,data,this,event,data
SplunkEvent -> public void addPair(String key, char value);1379403291;Add a key value pair;public void addPair(String key, char value) {_        addPair(key, String.valueOf(value))__    };add,a,key,value,pair;public,void,add,pair,string,key,char,value,add,pair,key,string,value,of,value
SplunkEvent -> public void addPair(String key, char value);1380016411;Add a key value pair;public void addPair(String key, char value) {_        addPair(key, String.valueOf(value))__    };add,a,key,value,pair;public,void,add,pair,string,key,char,value,add,pair,key,string,value,of,value
SplunkEvent -> public void addPair(String key, char value);1383391696;Add a key value pair;public void addPair(String key, char value) {_        addPair(key, String.valueOf(value))__    };add,a,key,value,pair;public,void,add,pair,string,key,char,value,add,pair,key,string,value,of,value
SplunkEvent -> public void addPair(String key, char value);1405374721;Add a key value pair;public void addPair(String key, char value) {_        addPair(key, String.valueOf(value))__    };add,a,key,value,pair;public,void,add,pair,string,key,char,value,add,pair,key,string,value,of,value
SplunkEvent -> public void addPair(String key, char value);1437831267;Add a key value pair;public void addPair(String key, char value) {_        addPair(key, String.valueOf(value))__    };add,a,key,value,pair;public,void,add,pair,string,key,char,value,add,pair,key,string,value,of,value
SplunkEvent -> public void addPair(String key, char value);1524063178;Add a key value pair;public void addPair(String key, char value) {_        addPair(key, String.valueOf(value))__    };add,a,key,value,pair;public,void,add,pair,string,key,char,value,add,pair,key,string,value,of,value
