commented;modifiers;parameterAmount;loc;comment;code
false;public,static;3;25;;public static void start(List<GenericContainer<?>> containers, Network network, long timeout) throws Exception {     final CountDownLatch latch = new CountDownLatch(containers.size()).     for (GenericContainer<?> container : containers) {         if (ObjectHelper.isEmpty(container.getNetworkAliases())) {             throw new IllegalStateException("Container should have at least a network alias").         }         if (network != null) {             container.withNetwork(network).         }         // Add custom logger         container.withLogConsumer(new Slf4jLogConsumer(LOGGER).withPrefix(container.getNetworkAliases().stream().collect(joining(",")))).         new Thread(() -> {             container.start().             latch.countDown().         }).start().     }     latch.await(timeout, TimeUnit.SECONDS). }
false;public,static;2;12;;public static void stop(List<GenericContainer<?>> containers, long timeout) throws Exception {     final CountDownLatch latch = new CountDownLatch(containers.size()).     for (GenericContainer<?> container : containers) {         new Thread(() -> {             container.stop().             latch.countDown().         }).start().     }     latch.await(timeout, TimeUnit.SECONDS). }
false;public,static;2;9;;public static GenericContainer<?> lookup(List<GenericContainer<?>> containers, String containerName) {     for (GenericContainer<?> container : containers) {         if (container.getNetworkAliases().contains(containerName)) {             return container.         }     }     throw new IllegalArgumentException("No container with name " + containerName + " found"). }
