commented;modifiers;parameterAmount;loc;comment;code
false;public;0;11;;@Test public void testAll() {     ResultSetConversionStrategy strategy = ResultSetConversionStrategies.fromName("ALL").     ResultSet resultSet = mock(ResultSet.class).     List<Row> rows = Collections.nCopies(20, mock(Row.class)).     when(resultSet.all()).thenReturn(rows).     Object body = strategy.getBody(resultSet).     assertTrue(body instanceof List).     assertSame(rows, body). }
false;public;0;11;;@Test public void testOne() {     ResultSetConversionStrategy strategy = ResultSetConversionStrategies.fromName("ONE").     ResultSet resultSet = mock(ResultSet.class).     Row row = mock(Row.class).     when(resultSet.one()).thenReturn(row).     Object body = strategy.getBody(resultSet).     assertTrue(body instanceof Row).     assertSame(row, body). }
false;public;0;11;;@Test public void testLimit() {     ResultSetConversionStrategy strategy = ResultSetConversionStrategies.fromName("LIMIT_10").     ResultSet resultSet = mock(ResultSet.class).     List<Row> rows = Collections.nCopies(20, mock(Row.class)).     when(resultSet.iterator()).thenReturn(rows.iterator()).     Object body = strategy.getBody(resultSet).     assertTrue(body instanceof List).     assertEquals(10, ((List) body).size()). }
