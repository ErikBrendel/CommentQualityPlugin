commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;13;;@Override protected JndiRegistry createRegistry() throws Exception {     JndiRegistry registry = super.createRegistry().     if (canTest()) {         Cluster cluster = Cluster.builder().addContactPoint("localhost").build().         registry.bind("cassandraCluster", cluster).         registry.bind("cassandraSession", cluster.connect("camel_ks")).         registry.bind("insertCql", CQL).     }     return registry. }
false;public;0;6;;public void configure() {     from("direct:inputSession").to(SESSION_URI).     from("direct:inputCluster").to(CLUSTER_URI). }
false;protected;0;11;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          public void configure() {             from("direct:inputSession").to(SESSION_URI).             from("direct:inputCluster").to(CLUSTER_URI).         }     }. }
false;public;0;10;;@Test public void testSession() throws Exception {     if (!canTest()) {         return.     }     CassandraEndpoint endpoint = getMandatoryEndpoint(SESSION_URI, CassandraEndpoint.class).     assertEquals("camel_ks", endpoint.getKeyspace()).     assertEquals(CQL, endpoint.getCql()). }
false;public;0;10;;@Test public void testCluster() throws Exception {     if (!canTest()) {         return.     }     CassandraEndpoint endpoint = getMandatoryEndpoint(CLUSTER_URI, CassandraEndpoint.class).     assertEquals("camel_ks", endpoint.getKeyspace()).     assertEquals(CQL, endpoint.getCql()). }
