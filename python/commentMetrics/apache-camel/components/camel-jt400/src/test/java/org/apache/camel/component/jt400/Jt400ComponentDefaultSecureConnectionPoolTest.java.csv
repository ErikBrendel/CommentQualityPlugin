commented;modifiers;parameterAmount;loc;comment;code
false;public;0;14;;@Before public void setUp() throws Exception {     super.setUp().     component = new Jt400Component().     component.setCamelContext(context).     try {         // Use an invalid object type so that endpoints are never created         // and actual connections are never requested         component.createEndpoint("jt400://user:password@host/qsys.lib/library.lib/program.xxx?secured=true").         Assert.fail("Should have thrown exception").     } catch (Exception e) {     /* Expected */     } }
false;public;0;6;;@After public void tearDown() throws Exception {     if (component != null) {         component.stop().     } }
false;public;0;4;;@Test public void testDefaultConnectionPoolIsCreated() {     assertNotNull(component.getConnectionPool()). }
true;public;0;4;/**  * Note: white-box testing.  */ ;/**  * Note: white-box testing.  */ @Test public void testDefaultConnectionPoolIsOfExpectedType() {     assertEquals(AS400ConnectionPool.class, component.getConnectionPool().getClass()). }
