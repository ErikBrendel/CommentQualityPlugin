commented;modifiers;parameterAmount;loc;comment;code
false;public;0;8;;@Override @Before public void setUp() throws Exception {     super.setUp().     endpoint = (Jt400Endpoint) resolveMandatoryEndpoint("jt400://" + USER + ":" + PASSWORD + "@" + HOST + PGM + "?connectionPool=#mockPool&guiAvailable=true&format=binary&outputFieldsIdx=1,2&fieldsLength=10,512,255"). }
true;public;0;14;/**  * Check that the AS/400 connection is correctly configured for the URL  */ ;/**  * Check that the AS/400 connection is correctly configured for the URL  */ @Test public void testSystemConfiguration() {     assertEquals(USER, endpoint.getUserID()).     assertEquals(HOST, endpoint.getSystemName()).     assertEquals(PGM, endpoint.getObjectPath()).     assertTrue(endpoint.isGuiAvailable()).     assertEquals(Jt400Configuration.Format.binary, endpoint.getFormat()).     assertEquals(10, endpoint.getOutputFieldLength(0)).     assertEquals(512, endpoint.getOutputFieldLength(1)).     assertEquals(255, endpoint.getOutputFieldLength(2)).     assertEquals(false, endpoint.isFieldIdxForOuput(0)).     assertEquals(true, endpoint.isFieldIdxForOuput(1)).     assertEquals(true, endpoint.isFieldIdxForOuput(2)). }
false;public;0;5;;@Test public void testToString() {     assertEquals("jt400://USER:xxxxxx@host/qsys.lib/library.lib/prog.pgm?connectionPool=%23mockPool&fieldsLength=10%2C512%2C255&format=binary&guiAvailable=true&outputFieldsIdx=1%2C2", endpoint.toString()). }
