commented;modifiers;parameterAmount;loc;comment;code
false;public;0;5;;@Before public void setUp() throws Exception {     super.setUp().     jt400Configuration = new Jt400Configuration("jt400://USER:password@host/QSYS.LIB/LIBRARY.LIB/QUEUE.DTAQ", getConnectionPool()). }
false;public;0;4;;@Test public void testDefaultSecured() {     assertFalse(jt400Configuration.isSecured()). }
false;public;0;4;;@Test public void testSystemName() {     assertEquals("host", jt400Configuration.getSystemName()). }
false;public;0;4;;@Test public void testUserID() {     assertEquals("USER", jt400Configuration.getUserID()). }
false;public;0;4;;@Test public void testPassword() {     assertEquals("password", jt400Configuration.getPassword()). }
false;public;0;4;;@Test public void testObjectPath() {     assertEquals("/QSYS.LIB/LIBRARY.LIB/QUEUE.DTAQ", jt400Configuration.getObjectPath()). }
false;public;0;4;;@Test public void testDefaultCcsid() {     assertEquals(-1, jt400Configuration.getCssid()). }
false;public;0;4;;@Test public void testDefaultFormat() {     assertEquals(Jt400Configuration.Format.text, jt400Configuration.getFormat()). }
false;public;0;4;;@Test public void testDefaultGuiAvailable() {     assertEquals(false, jt400Configuration.isGuiAvailable()). }
