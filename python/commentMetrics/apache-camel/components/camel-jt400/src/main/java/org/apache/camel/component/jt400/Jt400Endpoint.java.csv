commented;modifiers;parameterAmount;loc;comment;code
false;public;0;8;;@Override public Producer createProducer() throws Exception {     if (Jt400Type.DTAQ == configuration.getType()) {         return new Jt400DataQueueProducer(this).     } else {         return new Jt400PgmProducer(this).     } }
false;public;1;10;;@Override public Consumer createConsumer(Processor processor) throws Exception {     if (Jt400Type.DTAQ == configuration.getType()) {         Consumer consumer = new Jt400DataQueueConsumer(this, processor).         configureConsumer(consumer).         return consumer.     } else {         throw new OperationNotSupportedException().     } }
false;public;0;4;;public boolean isSingleton() {     // cannot be singleton as we store an AS400 instance on the configuration     return false. }
true;protected;0;3;/**  * Obtains an {@code AS400} object that connects to this endpoint. Since  * these objects represent limited resources, clients have the  * responsibility of {@link #releaseSystem(AS400) releasing them} when done.  *  * @return an {@code AS400} object that connects to this endpoint  */ ;/**  * Obtains an {@code AS400} object that connects to this endpoint. Since  * these objects represent limited resources, clients have the  * responsibility of {@link #releaseSystem(AS400) releasing them} when done.  *  * @return an {@code AS400} object that connects to this endpoint  */ protected AS400 getSystem() {     return configuration.getConnection(). }
true;protected;1;3;/**  * Releases a previously obtained {@code AS400} object from use.  *  * @param system a previously obtained {@code AS400} object  */ ;/**  * Releases a previously obtained {@code AS400} object from use.  *  * @param system a previously obtained {@code AS400} object  */ protected void releaseSystem(AS400 system) {     configuration.releaseConnection(system). }
true;protected;0;3;/**  * Returns the fully qualified integrated file system path name of the data  * queue of this endpoint.  *  * @return the fully qualified integrated file system path name of the data  *         queue of this endpoint  */ ;/**  * Returns the fully qualified integrated file system path name of the data  * queue of this endpoint.  *  * @return the fully qualified integrated file system path name of the data  *         queue of this endpoint  */ protected String getObjectPath() {     return configuration.getObjectPath(). }
false;public;0;3;;public Jt400Type getType() {     return configuration.getType(). }
false;public;1;3;;public void setType(Jt400Type type) {     configuration.setType(type). }
false;public;0;3;;public String getSearchKey() {     return configuration.getSearchKey(). }
false;public;0;3;;public boolean isKeyed() {     return configuration.isKeyed(). }
false;public;0;3;;public Integer[] getOutputFieldsIdxArray() {     return configuration.getOutputFieldsIdxArray(). }
false;public;0;3;;public int getCcsid() {     return configuration.getCcsid(). }
false;public;1;3;;public void setOutputFieldsIdxArray(Integer[] outputFieldsIdxArray) {     configuration.setOutputFieldsIdxArray(outputFieldsIdxArray). }
false;public;1;3;;public void setSearchKey(String searchKey) {     configuration.setSearchKey(searchKey). }
false;public;1;3;;public void setOutputFieldsIdx(String outputFieldsIdx) {     configuration.setOutputFieldsIdx(outputFieldsIdx). }
false;public;1;3;;public void setKeyed(boolean keyed) {     configuration.setKeyed(keyed). }
false;public;0;3;;public Integer[] getOutputFieldsLengthArray() {     return configuration.getOutputFieldsLengthArray(). }
false;public;1;3;;public void setSearchType(Jt400Configuration.SearchType searchType) {     configuration.setSearchType(searchType). }
false;public;0;3;;public boolean isGuiAvailable() {     return configuration.isGuiAvailable(). }
false;public;1;3;;public void setFormat(Jt400Configuration.Format format) {     configuration.setFormat(format). }
false;public;1;3;;public void setFieldsLength(String fieldsLength) {     configuration.setFieldsLength(fieldsLength). }
false;public;0;3;;public Jt400Configuration.Format getFormat() {     return configuration.getFormat(). }
false;public;1;3;;public void setOutputFieldsLengthArray(Integer[] outputFieldsLengthArray) {     configuration.setOutputFieldsLengthArray(outputFieldsLengthArray). }
false;public;0;3;;public int getCssid() {     return configuration.getCssid(). }
false;public;0;3;;public String getUserID() {     return configuration.getUserID(). }
false;public;0;3;;public Jt400Configuration.SearchType getSearchType() {     return configuration.getSearchType(). }
false;public;1;3;;public void setCcsid(int ccsid) {     configuration.setCcsid(ccsid). }
false;public;1;3;;public void setGuiAvailable(boolean guiAvailable) {     configuration.setGuiAvailable(guiAvailable). }
false;public;0;3;;public String getPassword() {     return configuration.getPassword(). }
false;public;0;3;;public String getSystemName() {     return configuration.getSystemName(). }
false;public;1;3;;public boolean isFieldIdxForOuput(int idx) {     return Arrays.binarySearch(getOutputFieldsIdxArray(), idx) >= 0. }
false;public;1;3;;public int getOutputFieldLength(int idx) {     return configuration.getOutputFieldsLengthArray()[idx]. }
false;public;1;3;;public void setObjectPath(String objectPath) {     configuration.setObjectPath(objectPath). }
false;public;1;3;;public void setPassword(String password) {     configuration.setPassword(password). }
false;public;1;3;;public void setUserID(String userID) {     configuration.setUserID(userID). }
false;public;1;3;;public void setSystemName(String systemName) {     configuration.setSystemName(systemName). }
false;public;1;3;;public void setSecured(boolean secured) {     configuration.setSecured(secured). }
false;public;0;3;;public boolean isSecured() {     return configuration.isSecured(). }
false;public;0;3;;public int getReadTimeout() {     return configuration.getReadTimeout(). }
false;public;1;3;;public void setReadTimeout(int readTimeout) {     configuration.setReadTimeout(readTimeout). }
false;public;1;3;;public void setProcedureName(String procedureName) {     configuration.setProcedureName(procedureName). }
false;public;0;3;;public String getProcedureName() {     return configuration.getProcedureName(). }
false;public;0;4;;@Override public boolean isMultipleConsumersSupported() {     return true. }
