commented;modifiers;parameterAmount;loc;comment;code
false;protected;3;22;;@Override protected Endpoint createEndpoint(String uri, String remaining, Map<String, Object> properties) throws Exception {     AS400ConnectionPool connectionPool.     if (properties.containsKey(CONNECTION_POOL)) {         LOG.trace("AS400ConnectionPool instance specified in the URI - will look it up.").         // We have chosen to handle the connectionPool option ourselves, so         // we must remove it from the given parameter list (see         // http://camel.apache.org/writing-components.html)         String poolId = properties.remove(CONNECTION_POOL).toString().         connectionPool = EndpointHelper.resolveReferenceParameter(getCamelContext(), poolId, AS400ConnectionPool.class, true).     } else {         LOG.trace("No AS400ConnectionPool instance specified in the URI - one will be provided.").         connectionPool = getConnectionPool().     }     String type = remaining.substring(remaining.lastIndexOf(".") + 1).toUpperCase().     Jt400Endpoint endpoint = new Jt400Endpoint(uri, this, connectionPool).     setProperties(endpoint, properties).     endpoint.setType(Jt400Type.valueOf(type)).     return endpoint. }
true;public,synchronized;0;7;/**  * Returns the default connection pool used by this component.  *  * @return the default connection pool used by this component  */ ;/**  * Returns the default connection pool used by this component.  *  * @return the default connection pool used by this component  */ public synchronized AS400ConnectionPool getConnectionPool() {     if (connectionPool == null) {         LOG.info("Instantiating the default connection pool ...").         connectionPool = new AS400ConnectionPool().     }     return connectionPool. }
false;public;1;3;;public void setConnectionPool(AS400ConnectionPool connectionPool) {     this.connectionPool = connectionPool. }
false;protected;0;9;;@Override protected void doShutdown() throws Exception {     super.doShutdown().     if (connectionPool != null) {         LOG.info("Shutting down the default connection pool {} ...", connectionPool).         connectionPool.close().         connectionPool = null.     } }
