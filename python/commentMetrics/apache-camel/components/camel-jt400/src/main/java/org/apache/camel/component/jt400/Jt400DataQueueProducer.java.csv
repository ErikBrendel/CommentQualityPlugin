commented;modifiers;parameterAmount;loc;comment;code
true;public;1;8;/**  * Sends the {@link Exchange}'s in body to the AS/400 data queue. If the  * endpoint's format is set to {@link org.apache.camel.component.jt400.Jt400Configuration.Format#binary}, the data queue entry's  * data will be sent as a <code>byte[]</code>. If the endpoint's format is  * set to {@link org.apache.camel.component.jt400.Jt400Configuration.Format#text}, the data queue entry's data will be sent as a  * <code>String</code>.  * <p/>  * If the endpoint is configured to publish to a {@link KeyedDataQueue},  * then the {@link org.apache.camel.Message} header <code>KEY</code> must be set.  */ ;/**  * Sends the {@link Exchange}'s in body to the AS/400 data queue. If the  * endpoint's format is set to {@link org.apache.camel.component.jt400.Jt400Configuration.Format#binary}, the data queue entry's  * data will be sent as a <code>byte[]</code>. If the endpoint's format is  * set to {@link org.apache.camel.component.jt400.Jt400Configuration.Format#text}, the data queue entry's data will be sent as a  * <code>String</code>.  * <p/>  * If the endpoint is configured to publish to a {@link KeyedDataQueue},  * then the {@link org.apache.camel.Message} header <code>KEY</code> must be set.  */ public void process(Exchange exchange) throws Exception {     BaseDataQueue queue = queueService.getDataQueue().     if (endpoint.isKeyed()) {         process((KeyedDataQueue) queue, exchange).     } else {         process((DataQueue) queue, exchange).     } }
false;private;2;7;;private void process(DataQueue queue, Exchange exchange) throws Exception {     if (endpoint.getFormat() == Jt400Configuration.Format.binary) {         queue.write(exchange.getIn().getBody(byte[].class)).     } else {         queue.write(exchange.getIn().getBody(String.class)).     } }
false;private;2;7;;private void process(KeyedDataQueue queue, Exchange exchange) throws Exception {     if (endpoint.getFormat() == Jt400Configuration.Format.binary) {         queue.write(exchange.getIn().getHeader(Jt400Endpoint.KEY, byte[].class), exchange.getIn().getBody(byte[].class)).     } else {         queue.write(exchange.getIn().getHeader(Jt400Endpoint.KEY, String.class), exchange.getIn().getBody(String.class)).     } }
false;protected;0;4;;@Override protected void doStart() throws Exception {     queueService.start(). }
false;protected;0;4;;@Override protected void doStop() throws Exception {     queueService.stop(). }
