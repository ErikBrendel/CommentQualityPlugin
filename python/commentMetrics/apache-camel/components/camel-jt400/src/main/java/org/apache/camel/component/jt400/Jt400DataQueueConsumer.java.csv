# id;timestamp;commentText;codeText;commentWords;codeWords
Jt400DataQueueConsumer -> protected Jt400DataQueueConsumer(Jt400Endpoint endpoint);1420536753;Creates a new consumer instance;protected Jt400DataQueueConsumer(Jt400Endpoint endpoint) {_        super(endpoint)__        this.endpoint = endpoint__        this.queueService = new Jt400DataQueueService(endpoint)__    };creates,a,new,consumer,instance;protected,jt400data,queue,consumer,jt400endpoint,endpoint,super,endpoint,this,endpoint,endpoint,this,queue,service,new,jt400data,queue,service,endpoint
Jt400DataQueueConsumer -> protected Jt400DataQueueConsumer(Jt400Endpoint endpoint);1436337200;Creates a new consumer instance;protected Jt400DataQueueConsumer(Jt400Endpoint endpoint) {_        super(endpoint)__        this.endpoint = endpoint__        this.queueService = new Jt400DataQueueService(endpoint)__    };creates,a,new,consumer,instance;protected,jt400data,queue,consumer,jt400endpoint,endpoint,super,endpoint,this,endpoint,endpoint,this,queue,service,new,jt400data,queue,service,endpoint
Jt400DataQueueConsumer -> protected Jt400DataQueueConsumer(Jt400Endpoint endpoint);1472370034;Creates a new consumer instance;protected Jt400DataQueueConsumer(Jt400Endpoint endpoint) {_        super(endpoint)__        this.endpoint = endpoint__        this.queueService = new Jt400DataQueueService(endpoint)__    };creates,a,new,consumer,instance;protected,jt400data,queue,consumer,jt400endpoint,endpoint,super,endpoint,this,endpoint,endpoint,this,queue,service,new,jt400data,queue,service,endpoint
Jt400DataQueueConsumer -> public Exchange receive(long timeout);1216371689;Receives an entry from a data queue and returns an {@link Exchange} to_send this data If the endpoint's format is set to {@link Format#binary},_the data queue entry's data will be received/sent as a_<code>byte[]</code>. If the endpoint's format is set to_{@link Format#text}, the data queue entry's data will be received/sent as_a <code>String</code>.__@param timeout time to wait when reading from data queue. A value of -1_indicates a blocking read.;public Exchange receive(long timeout) {_        DataQueue queue = endpoint.getDataQueue()__        try {_            DataQueueEntry entry__            if (timeout >= 0) {_                entry = queue.read((int)timeout)__            } else {_                entry = queue.read()__            }_            Exchange exchange = new DefaultExchange(endpoint.getCamelContext())__            if (entry != null) {_                if (endpoint.getFormat() == Format.binary) {_                    exchange.getIn().setBody(entry.getData())__                } else {_                    exchange.getIn().setBody(entry.getString())__                }_                return exchange__            }_        } catch (AS400SecurityException e) {_            throw new RuntimeCamelException("Unable to read from data queue: " + e.getMessage(), e)__        } catch (ErrorCompletingRequestException e) {_            throw new RuntimeCamelException("Unable to read from data queue: " + e.getMessage(), e)__        } catch (IOException e) {_            throw new RuntimeCamelException("Unable to read from data queue: " + e.getMessage(), e)__        } catch (IllegalObjectTypeException e) {_            throw new RuntimeCamelException("Unable to read from data queue: " + e.getMessage(), e)__        } catch (InterruptedException e) {_            throw new RuntimeCamelException("Unable to read from data queue: " + e.getMessage(), e)__        } catch (ObjectDoesNotExistException e) {_            throw new RuntimeCamelException("Unable to read from data queue: " + e.getMessage(), e)__        }_        return null__    };receives,an,entry,from,a,data,queue,and,returns,an,link,exchange,to,send,this,data,if,the,endpoint,s,format,is,set,to,link,format,binary,the,data,queue,entry,s,data,will,be,received,sent,as,a,code,byte,code,if,the,endpoint,s,format,is,set,to,link,format,text,the,data,queue,entry,s,data,will,be,received,sent,as,a,code,string,code,param,timeout,time,to,wait,when,reading,from,data,queue,a,value,of,1,indicates,a,blocking,read;public,exchange,receive,long,timeout,data,queue,queue,endpoint,get,data,queue,try,data,queue,entry,entry,if,timeout,0,entry,queue,read,int,timeout,else,entry,queue,read,exchange,exchange,new,default,exchange,endpoint,get,camel,context,if,entry,null,if,endpoint,get,format,format,binary,exchange,get,in,set,body,entry,get,data,else,exchange,get,in,set,body,entry,get,string,return,exchange,catch,as400security,exception,e,throw,new,runtime,camel,exception,unable,to,read,from,data,queue,e,get,message,e,catch,error,completing,request,exception,e,throw,new,runtime,camel,exception,unable,to,read,from,data,queue,e,get,message,e,catch,ioexception,e,throw,new,runtime,camel,exception,unable,to,read,from,data,queue,e,get,message,e,catch,illegal,object,type,exception,e,throw,new,runtime,camel,exception,unable,to,read,from,data,queue,e,get,message,e,catch,interrupted,exception,e,throw,new,runtime,camel,exception,unable,to,read,from,data,queue,e,get,message,e,catch,object,does,not,exist,exception,e,throw,new,runtime,camel,exception,unable,to,read,from,data,queue,e,get,message,e,return,null
Jt400DataQueueConsumer -> public Exchange receive(long timeout);1218781401;Receives an entry from a data queue and returns an {@link Exchange} to_send this data If the endpoint's format is set to {@link Format#binary},_the data queue entry's data will be received/sent as a_<code>byte[]</code>. If the endpoint's format is set to_{@link Format#text}, the data queue entry's data will be received/sent as_a <code>String</code>.__@param timeout time to wait when reading from data queue. A value of -1_indicates a blocking read.;public Exchange receive(long timeout) {_        DataQueue queue = endpoint.getDataQueue()__        try {_            DataQueueEntry entry__            if (timeout >= 0) {_                entry = queue.read((int)timeout)__            } else {_                entry = queue.read()__            }_            Exchange exchange = new DefaultExchange(endpoint.getCamelContext())__            if (entry != null) {_                if (endpoint.getFormat() == Format.binary) {_                    exchange.getIn().setBody(entry.getData())__                } else {_                    exchange.getIn().setBody(entry.getString())__                }_                return exchange__            }_        } catch (AS400SecurityException e) {_            throw new RuntimeCamelException("Unable to read from data queue: " + e.getMessage(), e)__        } catch (ErrorCompletingRequestException e) {_            throw new RuntimeCamelException("Unable to read from data queue: " + e.getMessage(), e)__        } catch (IOException e) {_            throw new RuntimeCamelException("Unable to read from data queue: " + e.getMessage(), e)__        } catch (IllegalObjectTypeException e) {_            throw new RuntimeCamelException("Unable to read from data queue: " + e.getMessage(), e)__        } catch (InterruptedException e) {_            throw new RuntimeCamelException("Unable to read from data queue: " + e.getMessage(), e)__        } catch (ObjectDoesNotExistException e) {_            throw new RuntimeCamelException("Unable to read from data queue: " + e.getMessage(), e)__        }_        return null__    };receives,an,entry,from,a,data,queue,and,returns,an,link,exchange,to,send,this,data,if,the,endpoint,s,format,is,set,to,link,format,binary,the,data,queue,entry,s,data,will,be,received,sent,as,a,code,byte,code,if,the,endpoint,s,format,is,set,to,link,format,text,the,data,queue,entry,s,data,will,be,received,sent,as,a,code,string,code,param,timeout,time,to,wait,when,reading,from,data,queue,a,value,of,1,indicates,a,blocking,read;public,exchange,receive,long,timeout,data,queue,queue,endpoint,get,data,queue,try,data,queue,entry,entry,if,timeout,0,entry,queue,read,int,timeout,else,entry,queue,read,exchange,exchange,new,default,exchange,endpoint,get,camel,context,if,entry,null,if,endpoint,get,format,format,binary,exchange,get,in,set,body,entry,get,data,else,exchange,get,in,set,body,entry,get,string,return,exchange,catch,as400security,exception,e,throw,new,runtime,camel,exception,unable,to,read,from,data,queue,e,get,message,e,catch,error,completing,request,exception,e,throw,new,runtime,camel,exception,unable,to,read,from,data,queue,e,get,message,e,catch,ioexception,e,throw,new,runtime,camel,exception,unable,to,read,from,data,queue,e,get,message,e,catch,illegal,object,type,exception,e,throw,new,runtime,camel,exception,unable,to,read,from,data,queue,e,get,message,e,catch,interrupted,exception,e,throw,new,runtime,camel,exception,unable,to,read,from,data,queue,e,get,message,e,catch,object,does,not,exist,exception,e,throw,new,runtime,camel,exception,unable,to,read,from,data,queue,e,get,message,e,return,null
Jt400DataQueueConsumer -> public Exchange receive(long timeout);1226337857;Receives an entry from a data queue and returns an {@link Exchange} to_send this data If the endpoint's format is set to {@link Format#binary},_the data queue entry's data will be received/sent as a_<code>byte[]</code>. If the endpoint's format is set to_{@link Format#text}, the data queue entry's data will be received/sent as_a <code>String</code>.__@param timeout time to wait when reading from data queue. A value of -1_indicates a blocking read.;public Exchange receive(long timeout) {_        DataQueue queue = endpoint.getDataQueue()__        try {_            DataQueueEntry entry__            if (timeout >= 0) {_                entry = queue.read((int)timeout)__            } else {_                entry = queue.read()__            }_            Exchange exchange = new DefaultExchange(endpoint.getCamelContext())__            if (entry != null) {_                if (endpoint.getFormat() == Format.binary) {_                    exchange.getIn().setBody(entry.getData())__                } else {_                    exchange.getIn().setBody(entry.getString())__                }_                return exchange__            }_        } catch (AS400SecurityException e) {_            throw new RuntimeCamelException("Unable to read from data queue: " + e.getMessage(), e)__        } catch (ErrorCompletingRequestException e) {_            throw new RuntimeCamelException("Unable to read from data queue: " + e.getMessage(), e)__        } catch (IOException e) {_            throw new RuntimeCamelException("Unable to read from data queue: " + e.getMessage(), e)__        } catch (IllegalObjectTypeException e) {_            throw new RuntimeCamelException("Unable to read from data queue: " + e.getMessage(), e)__        } catch (InterruptedException e) {_            throw new RuntimeCamelException("Unable to read from data queue: " + e.getMessage(), e)__        } catch (ObjectDoesNotExistException e) {_            throw new RuntimeCamelException("Unable to read from data queue: " + e.getMessage(), e)__        }_        return null__    };receives,an,entry,from,a,data,queue,and,returns,an,link,exchange,to,send,this,data,if,the,endpoint,s,format,is,set,to,link,format,binary,the,data,queue,entry,s,data,will,be,received,sent,as,a,code,byte,code,if,the,endpoint,s,format,is,set,to,link,format,text,the,data,queue,entry,s,data,will,be,received,sent,as,a,code,string,code,param,timeout,time,to,wait,when,reading,from,data,queue,a,value,of,1,indicates,a,blocking,read;public,exchange,receive,long,timeout,data,queue,queue,endpoint,get,data,queue,try,data,queue,entry,entry,if,timeout,0,entry,queue,read,int,timeout,else,entry,queue,read,exchange,exchange,new,default,exchange,endpoint,get,camel,context,if,entry,null,if,endpoint,get,format,format,binary,exchange,get,in,set,body,entry,get,data,else,exchange,get,in,set,body,entry,get,string,return,exchange,catch,as400security,exception,e,throw,new,runtime,camel,exception,unable,to,read,from,data,queue,e,get,message,e,catch,error,completing,request,exception,e,throw,new,runtime,camel,exception,unable,to,read,from,data,queue,e,get,message,e,catch,ioexception,e,throw,new,runtime,camel,exception,unable,to,read,from,data,queue,e,get,message,e,catch,illegal,object,type,exception,e,throw,new,runtime,camel,exception,unable,to,read,from,data,queue,e,get,message,e,catch,interrupted,exception,e,throw,new,runtime,camel,exception,unable,to,read,from,data,queue,e,get,message,e,catch,object,does,not,exist,exception,e,throw,new,runtime,camel,exception,unable,to,read,from,data,queue,e,get,message,e,return,null
Jt400DataQueueConsumer -> public Exchange receive(long timeout);1253170425;Receives an entry from a data queue and returns an {@link Exchange} to_send this data If the endpoint's format is set to {@link Format#binary},_the data queue entry's data will be received/sent as a_<code>byte[]</code>. If the endpoint's format is set to_{@link Format#text}, the data queue entry's data will be received/sent as_a <code>String</code>.__@param timeout time to wait when reading from data queue. A value of -1_indicates a blocking read.;public Exchange receive(long timeout) {_        DataQueue queue = endpoint.getDataQueue()__        try {_            DataQueueEntry entry__            if (timeout >= 0) {_                entry = queue.read((int)timeout)__            } else {_                entry = queue.read()__            }_            Exchange exchange = new DefaultExchange(endpoint.getCamelContext())__            if (entry != null) {_                if (endpoint.getFormat() == Format.binary) {_                    exchange.getIn().setBody(entry.getData())__                } else {_                    exchange.getIn().setBody(entry.getString())__                }_                return exchange__            }_        } catch (AS400SecurityException e) {_            throw new RuntimeCamelException("Unable to read from data queue: " + e.getMessage(), e)__        } catch (ErrorCompletingRequestException e) {_            throw new RuntimeCamelException("Unable to read from data queue: " + e.getMessage(), e)__        } catch (IOException e) {_            throw new RuntimeCamelException("Unable to read from data queue: " + e.getMessage(), e)__        } catch (IllegalObjectTypeException e) {_            throw new RuntimeCamelException("Unable to read from data queue: " + e.getMessage(), e)__        } catch (InterruptedException e) {_            throw new RuntimeCamelException("Unable to read from data queue: " + e.getMessage(), e)__        } catch (ObjectDoesNotExistException e) {_            throw new RuntimeCamelException("Unable to read from data queue: " + e.getMessage(), e)__        }_        return null__    };receives,an,entry,from,a,data,queue,and,returns,an,link,exchange,to,send,this,data,if,the,endpoint,s,format,is,set,to,link,format,binary,the,data,queue,entry,s,data,will,be,received,sent,as,a,code,byte,code,if,the,endpoint,s,format,is,set,to,link,format,text,the,data,queue,entry,s,data,will,be,received,sent,as,a,code,string,code,param,timeout,time,to,wait,when,reading,from,data,queue,a,value,of,1,indicates,a,blocking,read;public,exchange,receive,long,timeout,data,queue,queue,endpoint,get,data,queue,try,data,queue,entry,entry,if,timeout,0,entry,queue,read,int,timeout,else,entry,queue,read,exchange,exchange,new,default,exchange,endpoint,get,camel,context,if,entry,null,if,endpoint,get,format,format,binary,exchange,get,in,set,body,entry,get,data,else,exchange,get,in,set,body,entry,get,string,return,exchange,catch,as400security,exception,e,throw,new,runtime,camel,exception,unable,to,read,from,data,queue,e,get,message,e,catch,error,completing,request,exception,e,throw,new,runtime,camel,exception,unable,to,read,from,data,queue,e,get,message,e,catch,ioexception,e,throw,new,runtime,camel,exception,unable,to,read,from,data,queue,e,get,message,e,catch,illegal,object,type,exception,e,throw,new,runtime,camel,exception,unable,to,read,from,data,queue,e,get,message,e,catch,interrupted,exception,e,throw,new,runtime,camel,exception,unable,to,read,from,data,queue,e,get,message,e,catch,object,does,not,exist,exception,e,throw,new,runtime,camel,exception,unable,to,read,from,data,queue,e,get,message,e,return,null
Jt400DataQueueConsumer -> public Exchange receive(long timeout);1294937955;Receives an entry from a data queue and returns an {@link Exchange} to_send this data If the endpoint's format is set to {@link Format#binary},_the data queue entry's data will be received/sent as a_<code>byte[]</code>. If the endpoint's format is set to_{@link Format#text}, the data queue entry's data will be received/sent as_a <code>String</code>.__@param timeout time to wait when reading from data queue. A value of -1_indicates a blocking read.;public Exchange receive(long timeout) {_        DataQueue queue = endpoint.getDataQueue()__        try {_            DataQueueEntry entry__            if (timeout >= 0) {_                int seconds = (int)timeout / 1000__                if (log.isTraceEnabled()) {_                    log.trace("Reading from data queue: " + queue.getName() + " with " + seconds + " seconds timeout")__                }_                entry = queue.read(seconds)__            } else {_                if (log.isTraceEnabled()) {_                    log.trace("Reading from data queue: " + queue.getName() + " with no timeout")__                }_                entry = queue.read(-1)__            }__            Exchange exchange = new DefaultExchange(endpoint.getCamelContext())__            if (entry != null) {_                if (endpoint.getFormat() == Format.binary) {_                    exchange.getIn().setBody(entry.getData())__                } else {_                    exchange.getIn().setBody(entry.getString())__                }_                return exchange__            }_        } catch (AS400SecurityException e) {_            throw new RuntimeCamelException("Unable to read from data queue: " + queue.getName(), e)__        } catch (ErrorCompletingRequestException e) {_            throw new RuntimeCamelException("Unable to read from data queue: " + queue.getName(), e)__        } catch (IOException e) {_            throw new RuntimeCamelException("Unable to read from data queue: " + queue.getName(), e)__        } catch (IllegalObjectTypeException e) {_            throw new RuntimeCamelException("Unable to read from data queue: " + queue.getName(), e)__        } catch (InterruptedException e) {_            throw new RuntimeCamelException("Unable to read from data queue: " + queue.getName(), e)__        } catch (ObjectDoesNotExistException e) {_            throw new RuntimeCamelException("Unable to read from data queue: " + queue.getName(), e)__        }_        return null__    };receives,an,entry,from,a,data,queue,and,returns,an,link,exchange,to,send,this,data,if,the,endpoint,s,format,is,set,to,link,format,binary,the,data,queue,entry,s,data,will,be,received,sent,as,a,code,byte,code,if,the,endpoint,s,format,is,set,to,link,format,text,the,data,queue,entry,s,data,will,be,received,sent,as,a,code,string,code,param,timeout,time,to,wait,when,reading,from,data,queue,a,value,of,1,indicates,a,blocking,read;public,exchange,receive,long,timeout,data,queue,queue,endpoint,get,data,queue,try,data,queue,entry,entry,if,timeout,0,int,seconds,int,timeout,1000,if,log,is,trace,enabled,log,trace,reading,from,data,queue,queue,get,name,with,seconds,seconds,timeout,entry,queue,read,seconds,else,if,log,is,trace,enabled,log,trace,reading,from,data,queue,queue,get,name,with,no,timeout,entry,queue,read,1,exchange,exchange,new,default,exchange,endpoint,get,camel,context,if,entry,null,if,endpoint,get,format,format,binary,exchange,get,in,set,body,entry,get,data,else,exchange,get,in,set,body,entry,get,string,return,exchange,catch,as400security,exception,e,throw,new,runtime,camel,exception,unable,to,read,from,data,queue,queue,get,name,e,catch,error,completing,request,exception,e,throw,new,runtime,camel,exception,unable,to,read,from,data,queue,queue,get,name,e,catch,ioexception,e,throw,new,runtime,camel,exception,unable,to,read,from,data,queue,queue,get,name,e,catch,illegal,object,type,exception,e,throw,new,runtime,camel,exception,unable,to,read,from,data,queue,queue,get,name,e,catch,interrupted,exception,e,throw,new,runtime,camel,exception,unable,to,read,from,data,queue,queue,get,name,e,catch,object,does,not,exist,exception,e,throw,new,runtime,camel,exception,unable,to,read,from,data,queue,queue,get,name,e,return,null
Jt400DataQueueConsumer -> public Exchange receive(long timeout);1301257798;Receives an entry from a data queue and returns an {@link Exchange} to_send this data If the endpoint's format is set to {@link Format#binary},_the data queue entry's data will be received/sent as a_<code>byte[]</code>. If the endpoint's format is set to_{@link Format#text}, the data queue entry's data will be received/sent as_a <code>String</code>.__@param timeout time to wait when reading from data queue. A value of -1_indicates a blocking read.;public Exchange receive(long timeout) {_        DataQueue queue = endpoint.getDataQueue()__        try {_            DataQueueEntry entry__            if (timeout >= 0) {_                int seconds = (int)timeout / 1000__                log.trace("Reading from data queue: {} with {} seconds timeout", queue.getName(), seconds)__                entry = queue.read(seconds)__            } else {_                log.trace("Reading from data queue: {} with no timeout", queue.getName())__                entry = queue.read(-1)__            }__            Exchange exchange = new DefaultExchange(endpoint.getCamelContext())__            if (entry != null) {_                if (endpoint.getFormat() == Format.binary) {_                    exchange.getIn().setBody(entry.getData())__                } else {_                    exchange.getIn().setBody(entry.getString())__                }_                return exchange__            }_        } catch (AS400SecurityException e) {_            throw new RuntimeCamelException("Unable to read from data queue: " + queue.getName(), e)__        } catch (ErrorCompletingRequestException e) {_            throw new RuntimeCamelException("Unable to read from data queue: " + queue.getName(), e)__        } catch (IOException e) {_            throw new RuntimeCamelException("Unable to read from data queue: " + queue.getName(), e)__        } catch (IllegalObjectTypeException e) {_            throw new RuntimeCamelException("Unable to read from data queue: " + queue.getName(), e)__        } catch (InterruptedException e) {_            throw new RuntimeCamelException("Unable to read from data queue: " + queue.getName(), e)__        } catch (ObjectDoesNotExistException e) {_            throw new RuntimeCamelException("Unable to read from data queue: " + queue.getName(), e)__        }_        return null__    };receives,an,entry,from,a,data,queue,and,returns,an,link,exchange,to,send,this,data,if,the,endpoint,s,format,is,set,to,link,format,binary,the,data,queue,entry,s,data,will,be,received,sent,as,a,code,byte,code,if,the,endpoint,s,format,is,set,to,link,format,text,the,data,queue,entry,s,data,will,be,received,sent,as,a,code,string,code,param,timeout,time,to,wait,when,reading,from,data,queue,a,value,of,1,indicates,a,blocking,read;public,exchange,receive,long,timeout,data,queue,queue,endpoint,get,data,queue,try,data,queue,entry,entry,if,timeout,0,int,seconds,int,timeout,1000,log,trace,reading,from,data,queue,with,seconds,timeout,queue,get,name,seconds,entry,queue,read,seconds,else,log,trace,reading,from,data,queue,with,no,timeout,queue,get,name,entry,queue,read,1,exchange,exchange,new,default,exchange,endpoint,get,camel,context,if,entry,null,if,endpoint,get,format,format,binary,exchange,get,in,set,body,entry,get,data,else,exchange,get,in,set,body,entry,get,string,return,exchange,catch,as400security,exception,e,throw,new,runtime,camel,exception,unable,to,read,from,data,queue,queue,get,name,e,catch,error,completing,request,exception,e,throw,new,runtime,camel,exception,unable,to,read,from,data,queue,queue,get,name,e,catch,ioexception,e,throw,new,runtime,camel,exception,unable,to,read,from,data,queue,queue,get,name,e,catch,illegal,object,type,exception,e,throw,new,runtime,camel,exception,unable,to,read,from,data,queue,queue,get,name,e,catch,interrupted,exception,e,throw,new,runtime,camel,exception,unable,to,read,from,data,queue,queue,get,name,e,catch,object,does,not,exist,exception,e,throw,new,runtime,camel,exception,unable,to,read,from,data,queue,queue,get,name,e,return,null
Jt400DataQueueConsumer -> public Exchange receive(long timeout);1324569391;Receives an entry from a data queue and returns an {@link Exchange} to_send this data If the endpoint's format is set to {@link Format#binary},_the data queue entry's data will be received/sent as a_<code>byte[]</code>. If the endpoint's format is set to_{@link Format#text}, the data queue entry's data will be received/sent as_a <code>String</code>.__@param timeout time to wait when reading from data queue. A value of -1_indicates a blocking read.;public Exchange receive(long timeout) {_        DataQueue queue = endpoint.getDataQueue()__        try {_            DataQueueEntry entry__            if (timeout >= 0) {_                int seconds = (int)timeout / 1000__                log.trace("Reading from data queue: {} with {} seconds timeout", queue.getName(), seconds)__                entry = queue.read(seconds)__            } else {_                log.trace("Reading from data queue: {} with no timeout", queue.getName())__                entry = queue.read(-1)__            }__            Exchange exchange = new DefaultExchange(endpoint.getCamelContext())__            if (entry != null) {_                if (endpoint.getFormat() == Format.binary) {_                    exchange.getIn().setBody(entry.getData())__                } else {_                    exchange.getIn().setBody(entry.getString())__                }_                return exchange__            }_        } catch (AS400SecurityException e) {_            throw new RuntimeCamelException("Unable to read from data queue: " + queue.getName(), e)__        } catch (ErrorCompletingRequestException e) {_            throw new RuntimeCamelException("Unable to read from data queue: " + queue.getName(), e)__        } catch (IOException e) {_            throw new RuntimeCamelException("Unable to read from data queue: " + queue.getName(), e)__        } catch (IllegalObjectTypeException e) {_            throw new RuntimeCamelException("Unable to read from data queue: " + queue.getName(), e)__        } catch (InterruptedException e) {_            throw new RuntimeCamelException("Unable to read from data queue: " + queue.getName(), e)__        } catch (ObjectDoesNotExistException e) {_            throw new RuntimeCamelException("Unable to read from data queue: " + queue.getName(), e)__        }_        return null__    };receives,an,entry,from,a,data,queue,and,returns,an,link,exchange,to,send,this,data,if,the,endpoint,s,format,is,set,to,link,format,binary,the,data,queue,entry,s,data,will,be,received,sent,as,a,code,byte,code,if,the,endpoint,s,format,is,set,to,link,format,text,the,data,queue,entry,s,data,will,be,received,sent,as,a,code,string,code,param,timeout,time,to,wait,when,reading,from,data,queue,a,value,of,1,indicates,a,blocking,read;public,exchange,receive,long,timeout,data,queue,queue,endpoint,get,data,queue,try,data,queue,entry,entry,if,timeout,0,int,seconds,int,timeout,1000,log,trace,reading,from,data,queue,with,seconds,timeout,queue,get,name,seconds,entry,queue,read,seconds,else,log,trace,reading,from,data,queue,with,no,timeout,queue,get,name,entry,queue,read,1,exchange,exchange,new,default,exchange,endpoint,get,camel,context,if,entry,null,if,endpoint,get,format,format,binary,exchange,get,in,set,body,entry,get,data,else,exchange,get,in,set,body,entry,get,string,return,exchange,catch,as400security,exception,e,throw,new,runtime,camel,exception,unable,to,read,from,data,queue,queue,get,name,e,catch,error,completing,request,exception,e,throw,new,runtime,camel,exception,unable,to,read,from,data,queue,queue,get,name,e,catch,ioexception,e,throw,new,runtime,camel,exception,unable,to,read,from,data,queue,queue,get,name,e,catch,illegal,object,type,exception,e,throw,new,runtime,camel,exception,unable,to,read,from,data,queue,queue,get,name,e,catch,interrupted,exception,e,throw,new,runtime,camel,exception,unable,to,read,from,data,queue,queue,get,name,e,catch,object,does,not,exist,exception,e,throw,new,runtime,camel,exception,unable,to,read,from,data,queue,queue,get,name,e,return,null
Jt400DataQueueConsumer -> public Exchange receive(long timeout);1329894417;Receives an entry from a data queue and returns an {@link Exchange} to_send this data If the endpoint's format is set to {@link Format#binary},_the data queue entry's data will be received/sent as a_<code>byte[]</code>. If the endpoint's format is set to_{@link Format#text}, the data queue entry's data will be received/sent as_a <code>String</code>._<p/>_The following message headers may be set by the receiver_<ul>_<li>SENDER_INFORMATION: The Sender Information from the Data Queue</li>_<li>KEY: The message key if the endpoint is configured to connect to a <code>KeyedDataQueue</code></li>_</ul>__@param timeout time to wait when reading from data queue. A value of -1_indicates a blocking read.;public Exchange receive(long timeout) {_        BaseDataQueue queue = endpoint.getDataQueue()__        try {_            if (endpoint.isKeyed()) {_                return receive((KeyedDataQueue) queue, timeout)__            } else {_                return receive((DataQueue) queue, timeout)__            }_        } catch (Exception e) {_            throw new RuntimeCamelException("Unable to read from data queue: " + queue.getName(), e)__        }_    };receives,an,entry,from,a,data,queue,and,returns,an,link,exchange,to,send,this,data,if,the,endpoint,s,format,is,set,to,link,format,binary,the,data,queue,entry,s,data,will,be,received,sent,as,a,code,byte,code,if,the,endpoint,s,format,is,set,to,link,format,text,the,data,queue,entry,s,data,will,be,received,sent,as,a,code,string,code,p,the,following,message,headers,may,be,set,by,the,receiver,ul,li,the,sender,information,from,the,data,queue,li,li,key,the,message,key,if,the,endpoint,is,configured,to,connect,to,a,code,keyed,data,queue,code,li,ul,param,timeout,time,to,wait,when,reading,from,data,queue,a,value,of,1,indicates,a,blocking,read;public,exchange,receive,long,timeout,base,data,queue,queue,endpoint,get,data,queue,try,if,endpoint,is,keyed,return,receive,keyed,data,queue,queue,timeout,else,return,receive,data,queue,queue,timeout,catch,exception,e,throw,new,runtime,camel,exception,unable,to,read,from,data,queue,queue,get,name,e
Jt400DataQueueConsumer -> public Exchange receive(long timeout);1338889418;Receives an entry from a data queue and returns an {@link Exchange} to_send this data If the endpoint's format is set to {@link Format#binary},_the data queue entry's data will be received/sent as a_<code>byte[]</code>. If the endpoint's format is set to_{@link Format#text}, the data queue entry's data will be received/sent as_a <code>String</code>._<p/>_The following message headers may be set by the receiver_<ul>_<li>SENDER_INFORMATION: The Sender Information from the Data Queue</li>_<li>KEY: The message key if the endpoint is configured to connect to a <code>KeyedDataQueue</code></li>_</ul>__@param timeout time to wait when reading from data queue. A value of -1_indicates a blocking read.;public Exchange receive(long timeout) {_        BaseDataQueue queue = queueService.getDataQueue()__        try {_            if (endpoint.isKeyed()) {_                return receive((KeyedDataQueue) queue, timeout)__            } else {_                return receive((DataQueue) queue, timeout)__            }_        } catch (Exception e) {_            throw new RuntimeCamelException("Unable to read from data queue: " + queue.getName(), e)__        }_    };receives,an,entry,from,a,data,queue,and,returns,an,link,exchange,to,send,this,data,if,the,endpoint,s,format,is,set,to,link,format,binary,the,data,queue,entry,s,data,will,be,received,sent,as,a,code,byte,code,if,the,endpoint,s,format,is,set,to,link,format,text,the,data,queue,entry,s,data,will,be,received,sent,as,a,code,string,code,p,the,following,message,headers,may,be,set,by,the,receiver,ul,li,the,sender,information,from,the,data,queue,li,li,key,the,message,key,if,the,endpoint,is,configured,to,connect,to,a,code,keyed,data,queue,code,li,ul,param,timeout,time,to,wait,when,reading,from,data,queue,a,value,of,1,indicates,a,blocking,read;public,exchange,receive,long,timeout,base,data,queue,queue,queue,service,get,data,queue,try,if,endpoint,is,keyed,return,receive,keyed,data,queue,queue,timeout,else,return,receive,data,queue,queue,timeout,catch,exception,e,throw,new,runtime,camel,exception,unable,to,read,from,data,queue,queue,get,name,e
Jt400DataQueueConsumer -> public Exchange receive(long timeout);1420536753;Receives an entry from a data queue and returns an {@link Exchange} to_send this data If the endpoint's format is set to {@link org.apache.camel.component.jt400.Jt400Configuration.Format#binary},_the data queue entry's data will be received/sent as a_<code>byte[]</code>. If the endpoint's format is set to_{@link org.apache.camel.component.jt400.Jt400Configuration.Format#text}, the data queue entry's data will be received/sent as_a <code>String</code>._<p/>_The following message headers may be set by the receiver_<ul>_<li>SENDER_INFORMATION: The Sender Information from the Data Queue</li>_<li>KEY: The message key if the endpoint is configured to connect to a <code>KeyedDataQueue</code></li>_</ul>__@param timeout time to wait when reading from data queue. A value of -1_indicates a blocking read.;public Exchange receive(long timeout) {_        BaseDataQueue queue = queueService.getDataQueue()__        try {_            if (endpoint.isKeyed()) {_                return receive((KeyedDataQueue) queue, timeout)__            } else {_                return receive((DataQueue) queue, timeout)__            }_        } catch (Exception e) {_            throw new RuntimeCamelException("Unable to read from data queue: " + queue.getName(), e)__        }_    };receives,an,entry,from,a,data,queue,and,returns,an,link,exchange,to,send,this,data,if,the,endpoint,s,format,is,set,to,link,org,apache,camel,component,jt400,jt400configuration,format,binary,the,data,queue,entry,s,data,will,be,received,sent,as,a,code,byte,code,if,the,endpoint,s,format,is,set,to,link,org,apache,camel,component,jt400,jt400configuration,format,text,the,data,queue,entry,s,data,will,be,received,sent,as,a,code,string,code,p,the,following,message,headers,may,be,set,by,the,receiver,ul,li,the,sender,information,from,the,data,queue,li,li,key,the,message,key,if,the,endpoint,is,configured,to,connect,to,a,code,keyed,data,queue,code,li,ul,param,timeout,time,to,wait,when,reading,from,data,queue,a,value,of,1,indicates,a,blocking,read;public,exchange,receive,long,timeout,base,data,queue,queue,queue,service,get,data,queue,try,if,endpoint,is,keyed,return,receive,keyed,data,queue,queue,timeout,else,return,receive,data,queue,queue,timeout,catch,exception,e,throw,new,runtime,camel,exception,unable,to,read,from,data,queue,queue,get,name,e
Jt400DataQueueConsumer -> public Exchange receive(long timeout);1436337200;Receives an entry from a data queue and returns an {@link Exchange} to_send this data If the endpoint's format is set to {@link org.apache.camel.component.jt400.Jt400Configuration.Format#binary},_the data queue entry's data will be received/sent as a_<code>byte[]</code>. If the endpoint's format is set to_{@link org.apache.camel.component.jt400.Jt400Configuration.Format#text}, the data queue entry's data will be received/sent as_a <code>String</code>._<p/>_The following message headers may be set by the receiver_<ul>_<li>SENDER_INFORMATION: The Sender Information from the Data Queue</li>_<li>KEY: The message key if the endpoint is configured to connect to a <code>KeyedDataQueue</code></li>_</ul>__@param timeout time to wait when reading from data queue. A value of -1_indicates a blocking read.;public Exchange receive(long timeout) {_        BaseDataQueue queue = queueService.getDataQueue()__        try {_            if (endpoint.isKeyed()) {_                return receive((KeyedDataQueue) queue, timeout)__            } else {_                return receive((DataQueue) queue, timeout)__            }_        } catch (Exception e) {_            throw new RuntimeCamelException("Unable to read from data queue: " + queue.getName(), e)__        }_    };receives,an,entry,from,a,data,queue,and,returns,an,link,exchange,to,send,this,data,if,the,endpoint,s,format,is,set,to,link,org,apache,camel,component,jt400,jt400configuration,format,binary,the,data,queue,entry,s,data,will,be,received,sent,as,a,code,byte,code,if,the,endpoint,s,format,is,set,to,link,org,apache,camel,component,jt400,jt400configuration,format,text,the,data,queue,entry,s,data,will,be,received,sent,as,a,code,string,code,p,the,following,message,headers,may,be,set,by,the,receiver,ul,li,the,sender,information,from,the,data,queue,li,li,key,the,message,key,if,the,endpoint,is,configured,to,connect,to,a,code,keyed,data,queue,code,li,ul,param,timeout,time,to,wait,when,reading,from,data,queue,a,value,of,1,indicates,a,blocking,read;public,exchange,receive,long,timeout,base,data,queue,queue,queue,service,get,data,queue,try,if,endpoint,is,keyed,return,receive,keyed,data,queue,queue,timeout,else,return,receive,data,queue,queue,timeout,catch,exception,e,throw,new,runtime,camel,exception,unable,to,read,from,data,queue,queue,get,name,e
Jt400DataQueueConsumer -> public Exchange receive(long timeout);1472370034;Receives an entry from a data queue and returns an {@link Exchange} to_send this data If the endpoint's format is set to {@link org.apache.camel.component.jt400.Jt400Configuration.Format#binary},_the data queue entry's data will be received/sent as a_<code>byte[]</code>. If the endpoint's format is set to_{@link org.apache.camel.component.jt400.Jt400Configuration.Format#text}, the data queue entry's data will be received/sent as_a <code>String</code>._<p/>_The following message headers may be set by the receiver_<ul>_<li>SENDER_INFORMATION: The Sender Information from the Data Queue</li>_<li>KEY: The message key if the endpoint is configured to connect to a <code>KeyedDataQueue</code></li>_</ul>__@param timeout time to wait when reading from data queue. A value of -1_indicates a blocking read.;public Exchange receive(long timeout) {_        BaseDataQueue queue = queueService.getDataQueue()__        try {_            if (endpoint.isKeyed()) {_                return receive((KeyedDataQueue) queue, timeout)__            } else {_                return receive((DataQueue) queue, timeout)__            }_        } catch (Exception e) {_            throw new RuntimeCamelException("Unable to read from data queue: " + queue.getName(), e)__        }_    };receives,an,entry,from,a,data,queue,and,returns,an,link,exchange,to,send,this,data,if,the,endpoint,s,format,is,set,to,link,org,apache,camel,component,jt400,jt400configuration,format,binary,the,data,queue,entry,s,data,will,be,received,sent,as,a,code,byte,code,if,the,endpoint,s,format,is,set,to,link,org,apache,camel,component,jt400,jt400configuration,format,text,the,data,queue,entry,s,data,will,be,received,sent,as,a,code,string,code,p,the,following,message,headers,may,be,set,by,the,receiver,ul,li,the,sender,information,from,the,data,queue,li,li,key,the,message,key,if,the,endpoint,is,configured,to,connect,to,a,code,keyed,data,queue,code,li,ul,param,timeout,time,to,wait,when,reading,from,data,queue,a,value,of,1,indicates,a,blocking,read;public,exchange,receive,long,timeout,base,data,queue,queue,queue,service,get,data,queue,try,if,endpoint,is,keyed,return,receive,keyed,data,queue,queue,timeout,else,return,receive,data,queue,queue,timeout,catch,exception,e,throw,new,runtime,camel,exception,unable,to,read,from,data,queue,queue,get,name,e
Jt400DataQueueConsumer -> public Exchange receive(long timeout);1473092548;Receives an entry from a data queue and returns an {@link Exchange} to_send this data If the endpoint's format is set to {@link org.apache.camel.component.jt400.Jt400Configuration.Format#binary},_the data queue entry's data will be received/sent as a_<code>byte[]</code>. If the endpoint's format is set to_{@link org.apache.camel.component.jt400.Jt400Configuration.Format#text}, the data queue entry's data will be received/sent as_a <code>String</code>._<p/>_The following message headers may be set by the receiver_<ul>_<li>SENDER_INFORMATION: The Sender Information from the Data Queue</li>_<li>KEY: The message key if the endpoint is configured to connect to a <code>KeyedDataQueue</code></li>_</ul>__@param timeout time to wait when reading from data queue. A value of -1_indicates a blocking read.;public Exchange receive(long timeout) {_        BaseDataQueue queue = queueService.getDataQueue()__        try {_            if (getEndpoint().isKeyed()) {_                return receive((KeyedDataQueue) queue, timeout)__            } else {_                return receive((DataQueue) queue, timeout)__            }_        } catch (Exception e) {_            throw new RuntimeCamelException("Unable to read from data queue: " + queue.getName(), e)__        }_    };receives,an,entry,from,a,data,queue,and,returns,an,link,exchange,to,send,this,data,if,the,endpoint,s,format,is,set,to,link,org,apache,camel,component,jt400,jt400configuration,format,binary,the,data,queue,entry,s,data,will,be,received,sent,as,a,code,byte,code,if,the,endpoint,s,format,is,set,to,link,org,apache,camel,component,jt400,jt400configuration,format,text,the,data,queue,entry,s,data,will,be,received,sent,as,a,code,string,code,p,the,following,message,headers,may,be,set,by,the,receiver,ul,li,the,sender,information,from,the,data,queue,li,li,key,the,message,key,if,the,endpoint,is,configured,to,connect,to,a,code,keyed,data,queue,code,li,ul,param,timeout,time,to,wait,when,reading,from,data,queue,a,value,of,1,indicates,a,blocking,read;public,exchange,receive,long,timeout,base,data,queue,queue,queue,service,get,data,queue,try,if,get,endpoint,is,keyed,return,receive,keyed,data,queue,queue,timeout,else,return,receive,data,queue,queue,timeout,catch,exception,e,throw,new,runtime,camel,exception,unable,to,read,from,data,queue,queue,get,name,e
Jt400DataQueueConsumer -> public Exchange receive(long timeout);1473156767;Receives an entry from a data queue and returns an {@link Exchange} to_send this data If the endpoint's format is set to {@link org.apache.camel.component.jt400.Jt400Configuration.Format#binary},_the data queue entry's data will be received/sent as a_<code>byte[]</code>. If the endpoint's format is set to_{@link org.apache.camel.component.jt400.Jt400Configuration.Format#text}, the data queue entry's data will be received/sent as_a <code>String</code>._<p/>_The following message headers may be set by the receiver_<ul>_<li>SENDER_INFORMATION: The Sender Information from the Data Queue</li>_<li>KEY: The message key if the endpoint is configured to connect to a <code>KeyedDataQueue</code></li>_</ul>__@param timeout time to wait when reading from data queue. A value of -1_indicates a blocking read.;public Exchange receive(long timeout) {_        BaseDataQueue queue = queueService.getDataQueue()__        try {_            if (getEndpoint().isKeyed()) {_                return receive((KeyedDataQueue) queue, timeout)__            } else {_                return receive((DataQueue) queue, timeout)__            }_        } catch (Exception e) {_            throw new RuntimeCamelException("Unable to read from data queue: " + queue.getName(), e)__        }_    };receives,an,entry,from,a,data,queue,and,returns,an,link,exchange,to,send,this,data,if,the,endpoint,s,format,is,set,to,link,org,apache,camel,component,jt400,jt400configuration,format,binary,the,data,queue,entry,s,data,will,be,received,sent,as,a,code,byte,code,if,the,endpoint,s,format,is,set,to,link,org,apache,camel,component,jt400,jt400configuration,format,text,the,data,queue,entry,s,data,will,be,received,sent,as,a,code,string,code,p,the,following,message,headers,may,be,set,by,the,receiver,ul,li,the,sender,information,from,the,data,queue,li,li,key,the,message,key,if,the,endpoint,is,configured,to,connect,to,a,code,keyed,data,queue,code,li,ul,param,timeout,time,to,wait,when,reading,from,data,queue,a,value,of,1,indicates,a,blocking,read;public,exchange,receive,long,timeout,base,data,queue,queue,queue,service,get,data,queue,try,if,get,endpoint,is,keyed,return,receive,keyed,data,queue,queue,timeout,else,return,receive,data,queue,queue,timeout,catch,exception,e,throw,new,runtime,camel,exception,unable,to,read,from,data,queue,queue,get,name,e
Jt400DataQueueConsumer -> public Exchange receive(long timeout);1540108163;Receives an entry from a data queue and returns an {@link Exchange} to_send this data If the endpoint's format is set to {@link org.apache.camel.component.jt400.Jt400Configuration.Format#binary},_the data queue entry's data will be received/sent as a_<code>byte[]</code>. If the endpoint's format is set to_{@link org.apache.camel.component.jt400.Jt400Configuration.Format#text}, the data queue entry's data will be received/sent as_a <code>String</code>._<p/>_The following message headers may be set by the receiver_<ul>_<li>SENDER_INFORMATION: The Sender Information from the Data Queue</li>_<li>KEY: The message key if the endpoint is configured to connect to a <code>KeyedDataQueue</code></li>_</ul>__@param timeout time to wait when reading from data queue. A value of -1_indicates a blocking read.;public Exchange receive(long timeout) {_        BaseDataQueue queue = queueService.getDataQueue()__        try {_            if (getEndpoint().isKeyed()) {_                return receive((KeyedDataQueue) queue, timeout)__            } else {_                return receive((DataQueue) queue, timeout)__            }_        } catch (Exception e) {_            throw new RuntimeCamelException("Unable to read from data queue: " + queue.getName(), e)__        }_    };receives,an,entry,from,a,data,queue,and,returns,an,link,exchange,to,send,this,data,if,the,endpoint,s,format,is,set,to,link,org,apache,camel,component,jt400,jt400configuration,format,binary,the,data,queue,entry,s,data,will,be,received,sent,as,a,code,byte,code,if,the,endpoint,s,format,is,set,to,link,org,apache,camel,component,jt400,jt400configuration,format,text,the,data,queue,entry,s,data,will,be,received,sent,as,a,code,string,code,p,the,following,message,headers,may,be,set,by,the,receiver,ul,li,the,sender,information,from,the,data,queue,li,li,key,the,message,key,if,the,endpoint,is,configured,to,connect,to,a,code,keyed,data,queue,code,li,ul,param,timeout,time,to,wait,when,reading,from,data,queue,a,value,of,1,indicates,a,blocking,read;public,exchange,receive,long,timeout,base,data,queue,queue,queue,service,get,data,queue,try,if,get,endpoint,is,keyed,return,receive,keyed,data,queue,queue,timeout,else,return,receive,data,queue,queue,timeout,catch,exception,e,throw,new,runtime,camel,exception,unable,to,read,from,data,queue,queue,get,name,e
Jt400DataQueueConsumer -> protected Jt400DataQueueConsumer(Jt400DataQueueEndpoint endpoint);1216371689;Creates a new consumer instance;protected Jt400DataQueueConsumer(Jt400DataQueueEndpoint endpoint) {_        super(endpoint)__        this.endpoint = endpoint__    };creates,a,new,consumer,instance;protected,jt400data,queue,consumer,jt400data,queue,endpoint,endpoint,super,endpoint,this,endpoint,endpoint
Jt400DataQueueConsumer -> protected Jt400DataQueueConsumer(Jt400DataQueueEndpoint endpoint);1218781401;Creates a new consumer instance;protected Jt400DataQueueConsumer(Jt400DataQueueEndpoint endpoint) {_        super(endpoint)__        this.endpoint = endpoint__    };creates,a,new,consumer,instance;protected,jt400data,queue,consumer,jt400data,queue,endpoint,endpoint,super,endpoint,this,endpoint,endpoint
Jt400DataQueueConsumer -> protected Jt400DataQueueConsumer(Jt400DataQueueEndpoint endpoint);1226337857;Creates a new consumer instance;protected Jt400DataQueueConsumer(Jt400DataQueueEndpoint endpoint) {_        super(endpoint)__        this.endpoint = endpoint__    };creates,a,new,consumer,instance;protected,jt400data,queue,consumer,jt400data,queue,endpoint,endpoint,super,endpoint,this,endpoint,endpoint
Jt400DataQueueConsumer -> protected Jt400DataQueueConsumer(Jt400DataQueueEndpoint endpoint);1253170425;Creates a new consumer instance;protected Jt400DataQueueConsumer(Jt400DataQueueEndpoint endpoint) {_        super(endpoint)__        this.endpoint = endpoint__    };creates,a,new,consumer,instance;protected,jt400data,queue,consumer,jt400data,queue,endpoint,endpoint,super,endpoint,this,endpoint,endpoint
Jt400DataQueueConsumer -> protected Jt400DataQueueConsumer(Jt400DataQueueEndpoint endpoint);1294937955;Creates a new consumer instance;protected Jt400DataQueueConsumer(Jt400DataQueueEndpoint endpoint) {_        super(endpoint)__        this.endpoint = endpoint__    };creates,a,new,consumer,instance;protected,jt400data,queue,consumer,jt400data,queue,endpoint,endpoint,super,endpoint,this,endpoint,endpoint
Jt400DataQueueConsumer -> protected Jt400DataQueueConsumer(Jt400DataQueueEndpoint endpoint);1301257798;Creates a new consumer instance;protected Jt400DataQueueConsumer(Jt400DataQueueEndpoint endpoint) {_        super(endpoint)__        this.endpoint = endpoint__    };creates,a,new,consumer,instance;protected,jt400data,queue,consumer,jt400data,queue,endpoint,endpoint,super,endpoint,this,endpoint,endpoint
Jt400DataQueueConsumer -> protected Jt400DataQueueConsumer(Jt400DataQueueEndpoint endpoint);1324569391;Creates a new consumer instance;protected Jt400DataQueueConsumer(Jt400DataQueueEndpoint endpoint) {_        super(endpoint)__        this.endpoint = endpoint__    };creates,a,new,consumer,instance;protected,jt400data,queue,consumer,jt400data,queue,endpoint,endpoint,super,endpoint,this,endpoint,endpoint
Jt400DataQueueConsumer -> protected Jt400DataQueueConsumer(Jt400DataQueueEndpoint endpoint);1329894417;Creates a new consumer instance;protected Jt400DataQueueConsumer(Jt400DataQueueEndpoint endpoint) {_        super(endpoint)__        this.endpoint = endpoint__    };creates,a,new,consumer,instance;protected,jt400data,queue,consumer,jt400data,queue,endpoint,endpoint,super,endpoint,this,endpoint,endpoint
Jt400DataQueueConsumer -> protected Jt400DataQueueConsumer(Jt400DataQueueEndpoint endpoint);1338889418;Creates a new consumer instance;protected Jt400DataQueueConsumer(Jt400DataQueueEndpoint endpoint) {_        super(endpoint)__        this.endpoint = endpoint__        this.queueService = new Jt400DataQueueService(endpoint)__    };creates,a,new,consumer,instance;protected,jt400data,queue,consumer,jt400data,queue,endpoint,endpoint,super,endpoint,this,endpoint,endpoint,this,queue,service,new,jt400data,queue,service,endpoint
Jt400DataQueueConsumer -> public Exchange receiveNoWait();1216371689;{@link Jt400DataQueueConsumer#receive(long)};public Exchange receiveNoWait() {_        return receive(0)__    };link,jt400data,queue,consumer,receive,long;public,exchange,receive,no,wait,return,receive,0
Jt400DataQueueConsumer -> public Exchange receiveNoWait();1218781401;{@link Jt400DataQueueConsumer#receive(long)};public Exchange receiveNoWait() {_        return receive(0)__    };link,jt400data,queue,consumer,receive,long;public,exchange,receive,no,wait,return,receive,0
Jt400DataQueueConsumer -> public Exchange receiveNoWait();1226337857;{@link Jt400DataQueueConsumer#receive(long)};public Exchange receiveNoWait() {_        return receive(0)__    };link,jt400data,queue,consumer,receive,long;public,exchange,receive,no,wait,return,receive,0
Jt400DataQueueConsumer -> public Exchange receiveNoWait();1253170425;{@link Jt400DataQueueConsumer#receive(long)};public Exchange receiveNoWait() {_        return receive(0)__    };link,jt400data,queue,consumer,receive,long;public,exchange,receive,no,wait,return,receive,0
Jt400DataQueueConsumer -> public Jt400DataQueueConsumer(Jt400Endpoint endpoint, Processor processor);1473092548;Creates a new consumer instance;public Jt400DataQueueConsumer(Jt400Endpoint endpoint, Processor processor) {_        super(endpoint, processor)__        this.queueService = new Jt400DataQueueService(endpoint)__    };creates,a,new,consumer,instance;public,jt400data,queue,consumer,jt400endpoint,endpoint,processor,processor,super,endpoint,processor,this,queue,service,new,jt400data,queue,service,endpoint
Jt400DataQueueConsumer -> public Jt400DataQueueConsumer(Jt400Endpoint endpoint, Processor processor);1473156767;Creates a new consumer instance;public Jt400DataQueueConsumer(Jt400Endpoint endpoint, Processor processor) {_        super(endpoint, processor)__        this.queueService = new Jt400DataQueueService(endpoint)__    };creates,a,new,consumer,instance;public,jt400data,queue,consumer,jt400endpoint,endpoint,processor,processor,super,endpoint,processor,this,queue,service,new,jt400data,queue,service,endpoint
Jt400DataQueueConsumer -> public Jt400DataQueueConsumer(Jt400Endpoint endpoint, Processor processor);1540108163;Creates a new consumer instance;public Jt400DataQueueConsumer(Jt400Endpoint endpoint, Processor processor) {_        super(endpoint, processor)__        this.queueService = new Jt400DataQueueService(endpoint)__    };creates,a,new,consumer,instance;public,jt400data,queue,consumer,jt400endpoint,endpoint,processor,processor,super,endpoint,processor,this,queue,service,new,jt400data,queue,service,endpoint
Jt400DataQueueConsumer -> public Exchange receive();1216371689;{@link Jt400DataQueueConsumer#receive(long)};public Exchange receive() {_        _        return receive(-1)__    };link,jt400data,queue,consumer,receive,long;public,exchange,receive,return,receive,1
Jt400DataQueueConsumer -> public Exchange receive();1218781401;{@link Jt400DataQueueConsumer#receive(long)};public Exchange receive() {_        _        return receive(-1)__    };link,jt400data,queue,consumer,receive,long;public,exchange,receive,return,receive,1
Jt400DataQueueConsumer -> public Exchange receive();1226337857;{@link Jt400DataQueueConsumer#receive(long)};public Exchange receive() {_        _        return receive(-1)__    };link,jt400data,queue,consumer,receive,long;public,exchange,receive,return,receive,1
Jt400DataQueueConsumer -> public Exchange receive();1253170425;{@link Jt400DataQueueConsumer#receive(long)};public Exchange receive() {_        _        return receive(-1)__    };link,jt400data,queue,consumer,receive,long;public,exchange,receive,return,receive,1
