commented;modifiers;parameterAmount;loc;comment;code
false;;0;4;;@Override DynamicActivitiesClient getDynamicActivitiesClient() {     return actClient. }
false;public;0;10;;@Before public void setUp() throws Exception {     actClient = mock(DynamicActivitiesClient.class).     camelSWFActivityClient = new CamelSWFActivityClient(new SWFConfiguration()) {          @Override         DynamicActivitiesClient getDynamicActivitiesClient() {             return actClient.         }     }. }
false;public;0;6;;@Test public void testScheduleActivity() throws Exception {     camelSWFActivityClient.scheduleActivity("eventName", "version", "input").     verify(actClient).scheduleActivity(any(ActivityType.class), ArgumentMatchers.<Promise<?>[]>any(), ArgumentMatchers.isNull(), ArgumentMatchers.<Class<?>>any(), ArgumentMatchers.isNull()). }
