commented;modifiers;parameterAmount;loc;comment;code
false;public;4;4;;public void signalWorkflowExecution(String workflowId, String runId, String signalName, Object arguments) {     DynamicWorkflowClientExternal dynamicWorkflowClientExternal = getDynamicWorkflowClient(workflowId, runId).     dynamicWorkflowClientExternal.signalWorkflowExecution(signalName, toArray(arguments)). }
false;public;3;4;;public Object getWorkflowExecutionState(String workflowId, String runId, Class<?> aClass) throws Throwable {     DynamicWorkflowClientExternal dynamicWorkflowClientExternal = getDynamicWorkflowClient(workflowId, runId).     return dynamicWorkflowClientExternal.getWorkflowExecutionState(aClass). }
false;public;2;4;;public void requestCancelWorkflowExecution(String workflowId, String runId) {     DynamicWorkflowClientExternal dynamicWorkflowClientExternal = getDynamicWorkflowClient(workflowId, runId).     dynamicWorkflowClientExternal.requestCancelWorkflowExecution(). }
false;public;5;5;;public void terminateWorkflowExecution(String workflowId, String runId, String reason, String details, String childPolicy) {     DynamicWorkflowClientExternal dynamicWorkflowClientExternal = getDynamicWorkflowClient(workflowId, runId).     ChildPolicy policy = childPolicy != null ? ChildPolicy.valueOf(childPolicy) : null.     dynamicWorkflowClientExternal.terminateWorkflowExecution(reason, details, policy). }
false;public;6;22;;public String[] startWorkflowExecution(String workflowId, String runId, String eventName, String version, Object arguments, List<String> tags) {     DynamicWorkflowClientExternalImpl dynamicWorkflowClientExternal = (DynamicWorkflowClientExternalImpl) getDynamicWorkflowClient(workflowId, runId).     WorkflowType workflowType = new WorkflowType().     workflowType.setName(eventName).     workflowType.setVersion(version).     dynamicWorkflowClientExternal.setWorkflowType(workflowType).     StartWorkflowOptions startWorkflowOptions = new StartWorkflowOptions().     startWorkflowOptions.setTaskStartToCloseTimeoutSeconds(FlowHelpers.durationToSeconds(configuration.getTaskStartToCloseTimeout())).     startWorkflowOptions.setExecutionStartToCloseTimeoutSeconds(FlowHelpers.durationToSeconds(configuration.getExecutionStartToCloseTimeout())).     startWorkflowOptions.setTagList(tags).     dynamicWorkflowClientExternal.setSchedulingOptions(startWorkflowOptions).     dynamicWorkflowClientExternal.startWorkflowExecution(toArray(arguments)).     String newWorkflowId = dynamicWorkflowClientExternal.getWorkflowExecution().getWorkflowId().     String newRunId = dynamicWorkflowClientExternal.getWorkflowExecution().getRunId().     return new String[] { newWorkflowId, newRunId }. }
false;public;2;15;;public Map<String, Object> describeWorkflowInstance(String workflowId, String runId) {     DescribeWorkflowExecutionRequest describeRequest = new DescribeWorkflowExecutionRequest().     describeRequest.setDomain(configuration.getDomainName()).     describeRequest.setExecution(new WorkflowExecution().withWorkflowId(workflowId).withRunId(runId)).     WorkflowExecutionDetail executionDetail = endpoint.getSWClient().describeWorkflowExecution(describeRequest).     WorkflowExecutionInfo instanceMetadata = executionDetail.getExecutionInfo().     Map<String, Object> info = new HashMap<>().     info.put("closeStatus", instanceMetadata.getCloseStatus()).     info.put("closeTimestamp", instanceMetadata.getCloseTimestamp()).     info.put("executionStatus", instanceMetadata.getExecutionStatus()).     info.put("tagList", instanceMetadata.getTagList()).     info.put("executionDetail", executionDetail).     return info. }
false;public;2;4;;public List<HistoryEvent> getWorkflowExecutionHistory(String workflowId, String runId) {     return WorkflowExecutionUtils.getHistory(endpoint.getSWClient(), configuration.getDomainName(), new WorkflowExecution().withWorkflowId(workflowId).withRunId(runId)). }
false;;2;7;;DynamicWorkflowClientExternal getDynamicWorkflowClient(String workflowId, String runId) {     GenericWorkflowClientExternalImpl genericClient = new GenericWorkflowClientExternalImpl(endpoint.getSWClient(), configuration.getDomainName()).     WorkflowExecution workflowExecution = new WorkflowExecution().     workflowExecution.setWorkflowId(workflowId != null ? workflowId : genericClient.generateUniqueId()).     workflowExecution.setRunId(runId).     return new DynamicWorkflowClientExternalImpl(workflowExecution, null, endpoint.getStartWorkflowOptions(), configuration.getDataConverter(), genericClient). }
false;private;1;10;;private Object[] toArray(Object input) {     Object[] inputArray.     if (input instanceof Object[]) {         inputArray = (Object[]) input.     } else {         inputArray = new Object[1].         inputArray[0] = input.     }     return inputArray. }
