commented;modifiers;parameterAmount;loc;comment;code
false;public;2;9;;public Object processActivity(Object[] inputParameters, String taskToken) throws Exception {     LOGGER.debug("Processing activity task: " + Arrays.toString(inputParameters)).     Exchange exchange = endpoint.createExchange(inputParameters, SWFConstants.EXECUTE_ACTION).     exchange.getIn().setHeader(SWFConstants.TASK_TOKEN, taskToken).     getProcessor().process(exchange).     return endpoint.getResult(exchange). }
false;protected;0;9;;@Override protected void doStart() throws Exception {     CamelActivityImplementationFactory factory = new CamelActivityImplementationFactory(this, configuration).     genericWorker = new GenericActivityWorker(endpoint.getSWClient(), configuration.getDomainName(), configuration.getActivityList()).     genericWorker.setActivityImplementationFactory(factory).     genericWorker.setTaskExecutorThreadPoolSize(configuration.getActivityThreadPoolSize()).     genericWorker.start().     super.doStart(). }
false;protected;0;6;;@Override protected void doStop() throws Exception {     genericWorker.setDisableServiceShutdownOnStop(true).     genericWorker.shutdownNow().     super.doStop(). }
false;public;0;7;;@Override public String toString() {     if (swfActivityConsumerToString == null) {         swfActivityConsumerToString = "SWFActivityConsumer[" + URISupport.sanitizeUri(getEndpoint().getEndpointUri()) + "]".     }     return swfActivityConsumerToString. }
