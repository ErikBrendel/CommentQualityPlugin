commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public ActivityTypeRegistrationOptions getRegistrationOptions() {     return registrationOptions. }
false;public;0;4;;@Override public ActivityTypeExecutionOptions getExecutionOptions() {     return executionOptions. }
false;protected;2;25;;@Override protected String execute(String input, ActivityExecutionContext context) throws ActivityFailureException, CancellationException {     Object[] inputParameters = converter.fromData(input, Object[].class).     CurrentActivityExecutionContext.set(context).     Object result = null.     ActivityExecutionContext executionContext = contextProvider.getActivityExecutionContext().     String taskToken = executionContext.getTaskToken().     try {         result = swfWorkflowConsumer.processActivity(inputParameters, taskToken).     } catch (InvocationTargetException invocationException) {         throwActivityFailureException(invocationException.getTargetException() != null ? invocationException.getTargetException() : invocationException).     } catch (IllegalArgumentException illegalArgumentException) {         throwActivityFailureException(illegalArgumentException).     } catch (IllegalAccessException illegalAccessException) {         throwActivityFailureException(illegalAccessException).     } catch (Exception e) {         throwActivityFailureException(e).     } finally {         CurrentActivityExecutionContext.unset().     }     String resultSerialized = converter.toData(result).     return resultSerialized. }
false;;1;18;;void throwActivityFailureException(Throwable exception) throws ActivityFailureException, CancellationException {     if (exception instanceof CancellationException) {         throw (CancellationException) exception.     }     String reason = WorkflowExecutionUtils.truncateReason(exception.getMessage()).     String details = null.     try {         details = converter.toData(exception).     } catch (DataConverterException dataConverterException) {         if (dataConverterException.getCause() == null) {             dataConverterException.initCause(exception).         }         throw dataConverterException.     }     throw new ActivityFailureException(reason, details). }
