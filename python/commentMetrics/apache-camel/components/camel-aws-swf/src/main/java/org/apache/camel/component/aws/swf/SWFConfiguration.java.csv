commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public String getAccessKey() {     return accessKey. }
true;public;1;3;/**  * Amazon AWS Access Key.  */ ;/**  * Amazon AWS Access Key.  */ public void setAccessKey(String accessKey) {     this.accessKey = accessKey. }
false;public;0;3;;public String getSecretKey() {     return secretKey. }
true;public;1;3;/**  * Amazon AWS Secret Key.  */ ;/**  * Amazon AWS Secret Key.  */ public void setSecretKey(String secretKey) {     this.secretKey = secretKey. }
false;public;0;3;;public String getRegion() {     return region. }
true;public;1;3;/**  * Amazon AWS Region.  */ ;/**  * Amazon AWS Region.  */ public void setRegion(String region) {     this.region = region. }
false;public;0;3;;public String getDomainName() {     return domainName. }
true;public;1;3;/**  * The workflow domain to use.  */ ;/**  * The workflow domain to use.  */ public void setDomainName(String domainName) {     this.domainName = domainName. }
false;public;0;3;;public String getActivityList() {     return activityList. }
true;public;1;3;/**  * The list name to consume activities from.  */ ;/**  * The list name to consume activities from.  */ public void setActivityList(String activityList) {     this.activityList = activityList. }
false;public;0;3;;public String getWorkflowList() {     return workflowList. }
true;public;1;3;/**  * The list name to consume workflows from.  */ ;/**  * The list name to consume workflows from.  */ public void setWorkflowList(String workflowList) {     this.workflowList = workflowList. }
false;public;0;3;;public String getEventName() {     return eventName. }
true;public;1;3;/**  * The workflow or activity event name to use.  */ ;/**  * The workflow or activity event name to use.  */ public void setEventName(String eventName) {     this.eventName = eventName. }
false;public;0;3;;public String getVersion() {     return version. }
true;public;1;3;/**  * The workflow or activity event version to use.  */ ;/**  * The workflow or activity event version to use.  */ public void setVersion(String version) {     this.version = version. }
false;public;0;3;;public String getType() {     return type. }
true;public;1;3;/**  * Activity or workflow  */ ;/**  * Activity or workflow  */ public void setType(String type) {     this.type = type. }
false;public;0;3;;public Map<String, Object> getClientConfigurationParameters() {     return clientConfigurationParameters. }
true;public;1;3;/**  * To configure the ClientConfiguration using the key/values from the Map.  */ ;/**  * To configure the ClientConfiguration using the key/values from the Map.  */ public void setClientConfigurationParameters(Map<String, Object> clientConfigurationParameters) {     this.clientConfigurationParameters = clientConfigurationParameters. }
false;public;0;3;;public Map<String, Object> getSWClientParameters() {     return sWClientParameters. }
true;public;1;3;/**  * To configure the AmazonSimpleWorkflowClient using the key/values from the  * Map.  */ ;/**  * To configure the AmazonSimpleWorkflowClient using the key/values from the  * Map.  */ public void setSWClientParameters(Map<String, Object> sWClientParameters) {     this.sWClientParameters = sWClientParameters. }
false;public;0;3;;public AmazonSimpleWorkflowClient getAmazonSWClient() {     return amazonSWClient. }
true;public;1;3;/**  * To use the given AmazonSimpleWorkflowClient as client  */ ;/**  * To use the given AmazonSimpleWorkflowClient as client  */ public void setAmazonSWClient(AmazonSimpleWorkflowClient amazonSWClient) {     this.amazonSWClient = amazonSWClient. }
false;public;0;3;;public Map<String, Object> getStartWorkflowOptionsParameters() {     return startWorkflowOptionsParameters. }
true;public;1;3;/**  * To configure the StartWorkflowOptions using the key/values from the Map.  *  * @param startWorkflowOptionsParameters  */ ;/**  * To configure the StartWorkflowOptions using the key/values from the Map.  *  * @param startWorkflowOptionsParameters  */ public void setStartWorkflowOptionsParameters(Map<String, Object> startWorkflowOptionsParameters) {     this.startWorkflowOptionsParameters = startWorkflowOptionsParameters. }
false;public;0;3;;public String getOperation() {     return operation. }
true;public;1;3;/**  * Workflow operation  */ ;/**  * Workflow operation  */ public void setOperation(String operation) {     this.operation = operation. }
false;public;0;3;;public String getSignalName() {     return signalName. }
true;public;1;3;/**  * The name of the signal to send to the workflow.  */ ;/**  * The name of the signal to send to the workflow.  */ public void setSignalName(String signalName) {     this.signalName = signalName. }
false;public;0;3;;public String getChildPolicy() {     return childPolicy. }
true;public;1;3;/**  * The policy to use on child workflows when terminating a workflow.  */ ;/**  * The policy to use on child workflows when terminating a workflow.  */ public void setChildPolicy(String childPolicy) {     this.childPolicy = childPolicy. }
false;public;0;3;;public String getTerminationReason() {     return terminationReason. }
true;public;1;3;/**  * The reason for terminating a workflow.  */ ;/**  * The reason for terminating a workflow.  */ public void setTerminationReason(String terminationReason) {     this.terminationReason = terminationReason. }
false;public;0;3;;public String getStateResultType() {     return stateResultType. }
true;public;1;3;/**  * The type of the result when a workflow state is queried.  */ ;/**  * The type of the result when a workflow state is queried.  */ public void setStateResultType(String stateResultType) {     this.stateResultType = stateResultType. }
false;public;0;3;;public String getTerminationDetails() {     return terminationDetails. }
true;public;1;3;/**  * Details for terminating a workflow.  */ ;/**  * Details for terminating a workflow.  */ public void setTerminationDetails(String terminationDetails) {     this.terminationDetails = terminationDetails. }
false;public;0;3;;public ActivityTypeExecutionOptions getActivityTypeExecutionOptions() {     return activityTypeExecutionOptions. }
true;public;1;3;/**  * Activity execution options  */ ;/**  * Activity execution options  */ public void setActivityTypeExecutionOptions(ActivityTypeExecutionOptions activityTypeExecutionOptions) {     this.activityTypeExecutionOptions = activityTypeExecutionOptions. }
false;public;0;3;;public ActivityTypeRegistrationOptions getActivityTypeRegistrationOptions() {     return activityTypeRegistrationOptions. }
true;public;1;3;/**  * Activity registration options  */ ;/**  * Activity registration options  */ public void setActivityTypeRegistrationOptions(ActivityTypeRegistrationOptions activityTypeRegistrationOptions) {     this.activityTypeRegistrationOptions = activityTypeRegistrationOptions. }
false;public;0;3;;public DataConverter getDataConverter() {     return dataConverter. }
true;public;1;3;/**  * An instance of com.amazonaws.services.simpleworkflow.flow.DataConverter  * to use for serializing/deserializing the data.  */ ;/**  * An instance of com.amazonaws.services.simpleworkflow.flow.DataConverter  * to use for serializing/deserializing the data.  */ public void setDataConverter(DataConverter dataConverter) {     this.dataConverter = dataConverter. }
false;public;0;3;;public WorkflowTypeRegistrationOptions getWorkflowTypeRegistrationOptions() {     return workflowTypeRegistrationOptions. }
true;public;1;3;/**  * Workflow registration options  */ ;/**  * Workflow registration options  */ public void setWorkflowTypeRegistrationOptions(WorkflowTypeRegistrationOptions workflowTypeRegistrationOptions) {     this.workflowTypeRegistrationOptions = workflowTypeRegistrationOptions. }
false;public;0;3;;public ActivitySchedulingOptions getActivitySchedulingOptions() {     return activitySchedulingOptions. }
true;public;1;3;/**  * Activity scheduling options  */ ;/**  * Activity scheduling options  */ public void setActivitySchedulingOptions(ActivitySchedulingOptions activitySchedulingOptions) {     this.activitySchedulingOptions = activitySchedulingOptions. }
false;public;0;3;;public int getActivityThreadPoolSize() {     return activityThreadPoolSize. }
true;public;1;3;/**  * Maximum number of threads in work pool for activity.  */ ;/**  * Maximum number of threads in work pool for activity.  */ public void setActivityThreadPoolSize(int activityThreadPoolSize) {     this.activityThreadPoolSize = activityThreadPoolSize. }
false;public;0;3;;public String getExecutionStartToCloseTimeout() {     return executionStartToCloseTimeout. }
true;public;1;3;/**  * Set the execution start to close timeout.  */ ;/**  * Set the execution start to close timeout.  */ public void setExecutionStartToCloseTimeout(String executionStartToCloseTimeout) {     this.executionStartToCloseTimeout = executionStartToCloseTimeout. }
false;public;0;3;;public String getTaskStartToCloseTimeout() {     return taskStartToCloseTimeout. }
true;public;1;3;/**  * Set the task start to close timeout.  */ ;/**  * Set the task start to close timeout.  */ public void setTaskStartToCloseTimeout(String taskStartToCloseTimeout) {     this.taskStartToCloseTimeout = taskStartToCloseTimeout. }
false;public;0;7;;// ************************************************* //  // ************************************************* public SWFConfiguration copy() {     try {         return (SWFConfiguration) super.clone().     } catch (CloneNotSupportedException e) {         throw new RuntimeCamelException(e).     } }
