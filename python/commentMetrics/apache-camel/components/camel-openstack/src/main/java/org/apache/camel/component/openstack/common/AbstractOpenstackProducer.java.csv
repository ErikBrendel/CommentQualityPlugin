commented;modifiers;parameterAmount;loc;comment;code
false;protected;1;24;;protected Payload createPayload(Message msg) {     // if payload object is send directly     Payload payload = msg.getBody(Payload.class).     if (ObjectHelper.isNotEmpty(payload)) {         return payload.     }     Object messageBody = msg.getBody().     if (messageBody instanceof URL) {         payload = Payloads.create((URL) messageBody).     }     if (messageBody instanceof File) {         payload = Payloads.create((File) messageBody).     }     if (messageBody instanceof InputStream) {         payload = Payloads.create((InputStream) messageBody).     }     if (payload == null) {         throw new IllegalArgumentException("You have to set payload. It can be InputStream, File or URL class").     }     return payload. }
false;protected;1;5;;protected String getOperation(Exchange exchange) {     final String operation = exchange.getIn().getHeader(OpenstackConstants.OPERATION, endpoint.getOperation(), String.class).     StringHelper.notEmpty(operation, "Operation").     return operation. }
false;protected;3;6;;protected void checkFailure(ActionResponse response, Message msg, String operation) {     msg.setFault(!response.isSuccess()).     if (!response.isSuccess()) {         msg.setBody(String.format(" %s was not successful: %s", operation, response.getFault())).     } }
