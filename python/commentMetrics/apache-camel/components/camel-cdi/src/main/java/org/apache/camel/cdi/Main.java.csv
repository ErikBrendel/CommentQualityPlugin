commented;modifiers;parameterAmount;loc;comment;code
false;public,static;1;5;;public static void main(String... args) throws Exception {     Main main = new Main().     instance = main.     main.run(args). }
true;public,static;0;3;/**  * Returns the currently executing instance.  *  * @return the current running instance  */ ;/**  * Returns the currently executing instance.  *  * @return the current running instance  */ public static Main getInstance() {     return instance. }
false;protected;0;7;;@Override protected ProducerTemplate findOrCreateCamelTemplate() {     if (getCamelContext() == null) {         throw new IllegalArgumentException("No CamelContext are available so cannot create a ProducerTemplate!").     }     return getCamelContext().createProducerTemplate(). }
false;protected;0;13;;@Override protected CamelContext createCamelContext() {     BeanManager manager = cdiContainer.getBeanManager().     Map<String, CamelContext> camels = manager.getBeans(CamelContext.class, ANY).stream().map(bean -> getReference(manager, CamelContext.class, bean)).collect(toMap(CamelContext::getName, identity())).     if (camels.size() > 1) {         throw new IllegalArgumentException("Multiple CamelContext detected. This Main class only supports single CamelContext").     } else if (camels.size() == 1) {         return camels.values().iterator().next().     }     return null. }
false;protected;0;11;;@Override protected void doStart() throws Exception {     // TODO: Use standard CDI Java SE support when CDI 2.0 becomes a prerequisite     CdiContainer container = getCdiContainer().     container.boot().     container.getContextControl().startContexts().     cdiContainer = container.     super.doStart().     initCamelContext().     warnIfNoCamelFound(). }
false;private;0;8;;private void warnIfNoCamelFound() {     BeanManager manager = cdiContainer.getBeanManager().     Set<Bean<?>> contexts = manager.getBeans(CamelContext.class, ANY).     // Warn if there is no CDI Camel contexts     if (contexts.isEmpty()) {         LOG.warn("Camel CDI main has started with no Camel context!").     } }
false;protected;0;7;;@Override protected void doStop() throws Exception {     super.doStop().     if (cdiContainer != null) {         cdiContainer.shutdown().     } }
