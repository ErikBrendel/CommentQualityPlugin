commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;5;;@Override protected void doStart() throws Exception {     super.doStart().     endpoint.addConsumer(this). }
false;protected;0;5;;@Override protected void doStop() throws Exception {     endpoint.removeConsumer(this).     super.doStop(). }
false;;1;21;;void notify(T event) {     logger.debug("Consuming CDI event [{}] with {}", event, this).     Exchange exchange = getEndpoint().createExchange().     // TODO: would that be possible to propagate the event metadata?     exchange.getIn().setBody(event).     // Avoid infinite loop of exchange events     if (event instanceof ExchangeEvent) {         exchange.setProperty(Exchange.NOTIFY_EVENT, Boolean.TRUE).     }     try {         getProcessor().process(exchange).     } catch (Exception cause) {         throw new RuntimeExchangeException("Error while processing CDI event", exchange, cause).     } finally {         if (event instanceof ExchangeEvent) {             exchange.setProperty(Exchange.NOTIFY_EVENT, Boolean.FALSE).         }     } }
