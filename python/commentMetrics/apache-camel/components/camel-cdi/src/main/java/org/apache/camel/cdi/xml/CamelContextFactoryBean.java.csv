commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public Class<DefaultCamelContext> getObjectType() {     return DefaultCamelContext.class. }
false;public;1;4;;@Override public void setBeanManager(BeanManager manager) {     this.manager = manager. }
false;protected;1;10;;@Override @SuppressWarnings("unchecked") protected <S> S getBeanForType(Class<S> clazz) {     Bean<?> bean = manager.resolve(manager.getBeans(clazz)).     if (bean == null) {         return null.     }     return (S) manager.getReference(bean, clazz, manager.createCreationalContext(bean)). }
false;protected;3;11;;@Override protected void findRouteBuildersByPackageScan(String[] packages, PackageScanFilter filter, List<RoutesBuilder> builders) throws Exception {     // add filter to class resolver which then will filter     getContext().getPackageScanClassResolver().addFilter(filter).     PackageScanRouteBuilderFinder finder = new PackageScanRouteBuilderFinder(getContext(), packages, getContextClassLoaderOnStart(), getContext().getPackageScanClassResolver()).     finder.appendBuilders(builders).     // and remove the filter     getContext().getPackageScanClassResolver().removeFilter(filter). }
false;protected;3;5;;@Override protected void findRouteBuildersByContextScan(PackageScanFilter filter, boolean includeNonSingletons, List<RoutesBuilder> builders) throws Exception {     ContextScanRouteBuilderFinder finder = new ContextScanRouteBuilderFinder(manager, filter, includeNonSingletons).     finder.appendBuilders(builders). }
false;protected;1;4;;@Override protected void initBeanPostProcessor(DefaultCamelContext context) { // Already done by Camel CDI injection target }
false;protected;1;4;;@Override protected void postProcessBeforeInit(RouteBuilder builder) { // Already done by Camel CDI injection target }
false;protected;1;4;;@Override protected void initCustomRegistry(DefaultCamelContext context) { // Already done by Camel CDI injection target }
false;public;0;5;;@Override public void afterPropertiesSet() throws Exception {     super.afterPropertiesSet().     setupRoutes(). }
false;public;0;4;;@Override public DefaultCamelContext getContext() {     return context. }
false;public;1;3;;public void setContext(DefaultCamelContext context) {     this.context = context. }
false;public;1;4;;@Override public DefaultCamelContext getContext(boolean create) {     return context. }
false;public;0;4;;@Override public List<AbstractCamelFactoryBean<?>> getBeansFactory() {     return beansFactory. }
false;public;1;3;;public void setBeansFactory(List<AbstractCamelFactoryBean<?>> beansFactory) {     this.beansFactory = beansFactory. }
false;public;0;4;;@Override public List<?> getBeans() {     return beans. }
false;public;1;3;;public void setBeans(List<?> beans) {     this.beans = beans. }
false;public;0;4;;@Override public ServiceCallConfigurationDefinition getDefaultServiceCallConfiguration() {     return defaultServiceCallConfiguration. }
false;public;1;3;;public void setDefaultServiceCallConfiguration(ServiceCallConfigurationDefinition defaultServiceCallConfiguration) {     this.defaultServiceCallConfiguration = defaultServiceCallConfiguration. }
false;public;0;4;;@Override public List<ServiceCallConfigurationDefinition> getServiceCallConfigurations() {     return serviceCallConfigurations. }
false;public;1;3;;public void setServiceCallConfigurations(List<ServiceCallConfigurationDefinition> serviceCallConfigurations) {     this.serviceCallConfigurations = serviceCallConfigurations. }
false;public;0;4;;@Override public HystrixConfigurationDefinition getDefaultHystrixConfiguration() {     return defaultHystrixConfiguration. }
false;public;1;3;;public void setDefaultHystrixConfiguration(HystrixConfigurationDefinition defaultHystrixConfiguration) {     this.defaultHystrixConfiguration = defaultHystrixConfiguration. }
false;public;0;4;;@Override public List<HystrixConfigurationDefinition> getHystrixConfigurations() {     return hystrixConfigurations. }
false;public;1;3;;public void setHystrixConfigurations(List<HystrixConfigurationDefinition> hystrixConfigurations) {     this.hystrixConfigurations = hystrixConfigurations. }
false;public;0;3;;public List<RouteDefinition> getRoutes() {     return routes. }
false;public;1;3;;public void setRoutes(List<RouteDefinition> routes) {     this.routes = routes. }
false;public;0;3;;public List<RestDefinition> getRests() {     return rests. }
false;public;1;3;;public void setRests(List<RestDefinition> rests) {     this.rests = rests. }
false;public;0;3;;public RestConfigurationDefinition getRestConfiguration() {     return restConfiguration. }
false;public;1;3;;public void setRestConfiguration(RestConfigurationDefinition restConfiguration) {     this.restConfiguration = restConfiguration. }
false;public;0;3;;public List<EndpointFactoryBean> getEndpoints() {     return endpoints. }
false;public;1;3;;public void setEndpoints(List<EndpointFactoryBean> endpoints) {     this.endpoints = endpoints. }
false;public;0;3;;public List<RedeliveryPolicyFactoryBean> getRedeliveryPolicies() {     return redeliveryPolicies. }
false;public;1;3;;public void setRedeliveryPolicies(List<RedeliveryPolicyFactoryBean> redeliveryPolicies) {     this.redeliveryPolicies = redeliveryPolicies. }
false;public;0;3;;public List<InterceptDefinition> getIntercepts() {     return intercepts. }
false;public;1;3;;public void setIntercepts(List<InterceptDefinition> intercepts) {     this.intercepts = intercepts. }
false;public;0;3;;public List<InterceptFromDefinition> getInterceptFroms() {     return interceptFroms. }
false;public;1;3;;public void setInterceptFroms(List<InterceptFromDefinition> interceptFroms) {     this.interceptFroms = interceptFroms. }
false;public;0;3;;public List<InterceptSendToEndpointDefinition> getInterceptSendToEndpoints() {     return interceptSendToEndpoints. }
false;public;1;3;;public void setInterceptSendToEndpoints(List<InterceptSendToEndpointDefinition> interceptSendToEndpoints) {     this.interceptSendToEndpoints = interceptSendToEndpoints. }
false;public;0;3;;public GlobalOptionsDefinition getGlobalOptions() {     return globalOptions. }
false;public;1;3;;public void setGlobalOptions(GlobalOptionsDefinition globalOptions) {     this.globalOptions = globalOptions. }
false;public;0;3;;public String[] getPackages() {     return packages. }
true;public;1;3;/**  * Sets the package names to be recursively searched for Java classes which  * extend {@link org.apache.camel.builder.RouteBuilder} to be auto-wired up to the  * {@link CamelContext} as a route. Note that classes are excluded if  * they are specifically configured in the deployment.  * <p/>  * A more advanced configuration can be done using {@link #setPackageScan(org.apache.camel.model.PackageScanDefinition)}  *  * @param packages the package names which are recursively searched  * @see #setPackageScan(org.apache.camel.model.PackageScanDefinition)  */ ;/**  * Sets the package names to be recursively searched for Java classes which  * extend {@link org.apache.camel.builder.RouteBuilder} to be auto-wired up to the  * {@link CamelContext} as a route. Note that classes are excluded if  * they are specifically configured in the deployment.  * <p/>  * A more advanced configuration can be done using {@link #setPackageScan(org.apache.camel.model.PackageScanDefinition)}  *  * @param packages the package names which are recursively searched  * @see #setPackageScan(org.apache.camel.model.PackageScanDefinition)  */ public void setPackages(String[] packages) {     this.packages = packages. }
false;public;0;3;;public PackageScanDefinition getPackageScan() {     return packageScan. }
true;public;1;3;/**  * Sets the package scanning information. Package scanning allows for the  * automatic discovery of certain camel classes at runtime for inclusion  * e.g. {@link org.apache.camel.builder.RouteBuilder} implementations  *  * @param packageScan the package scan  */ ;/**  * Sets the package scanning information. Package scanning allows for the  * automatic discovery of certain camel classes at runtime for inclusion  * e.g. {@link org.apache.camel.builder.RouteBuilder} implementations  *  * @param packageScan the package scan  */ public void setPackageScan(PackageScanDefinition packageScan) {     this.packageScan = packageScan. }
false;public;0;3;;public ContextScanDefinition getContextScan() {     return contextScan. }
true;public;1;3;/**  * Sets the context scanning information.  * Context scanning allows for the automatic discovery of Camel routes runtime for inclusion  * e.g. {@link org.apache.camel.builder.RouteBuilder} implementations  *  * @param contextScan the context scan  */ ;/**  * Sets the context scanning information.  * Context scanning allows for the automatic discovery of Camel routes runtime for inclusion  * e.g. {@link org.apache.camel.builder.RouteBuilder} implementations  *  * @param contextScan the context scan  */ public void setContextScan(ContextScanDefinition contextScan) {     this.contextScan = contextScan. }
false;public;0;3;;public CamelPropertyPlaceholderDefinition getCamelPropertyPlaceholder() {     return camelPropertyPlaceholder. }
false;public;1;3;;public void setCamelPropertyPlaceholder(CamelPropertyPlaceholderDefinition camelPropertyPlaceholder) {     this.camelPropertyPlaceholder = camelPropertyPlaceholder. }
false;public;0;3;;public CamelStreamCachingStrategyDefinition getCamelStreamCachingStrategy() {     return camelStreamCachingStrategy. }
false;public;1;3;;public void setCamelStreamCachingStrategy(CamelStreamCachingStrategyDefinition camelStreamCachingStrategy) {     this.camelStreamCachingStrategy = camelStreamCachingStrategy. }
false;public;0;3;;public String getTrace() {     return trace. }
false;public;1;3;;public void setTrace(String trace) {     this.trace = trace. }
false;public;0;3;;public String getMessageHistory() {     return messageHistory. }
false;public;1;3;;public void setMessageHistory(String messageHistory) {     this.messageHistory = messageHistory. }
false;public;0;3;;public String getLogMask() {     return logMask. }
false;public;1;3;;public void setLogMask(String logMask) {     this.logMask = logMask. }
false;public;0;4;;@Override public String getLogExhaustedMessageBody() {     return logExhaustedMessageBody. }
false;public;1;3;;public void setLogExhaustedMessageBody(String logExhaustedMessageBody) {     this.logExhaustedMessageBody = logExhaustedMessageBody. }
false;public;0;3;;public String getStreamCache() {     return streamCache. }
false;public;1;3;;public void setStreamCache(String streamCache) {     this.streamCache = streamCache. }
false;public;0;3;;public String getDelayer() {     return delayer. }
false;public;1;3;;public void setDelayer(String delayer) {     this.delayer = delayer. }
false;public;0;3;;public String getHandleFault() {     return handleFault. }
false;public;1;3;;public void setHandleFault(String handleFault) {     this.handleFault = handleFault. }
false;public;0;3;;public String getAutoStartup() {     return autoStartup. }
false;public;1;3;;public void setAutoStartup(String autoStartup) {     this.autoStartup = autoStartup. }
false;public;0;3;;public String getShutdownEager() {     return shutdownEager. }
false;public;1;3;;public void setShutdownEager(String shutdownEager) {     this.shutdownEager = shutdownEager. }
false;public;0;3;;public String getUseMDCLogging() {     return useMDCLogging. }
false;public;1;3;;public void setUseMDCLogging(String useMDCLogging) {     this.useMDCLogging = useMDCLogging. }
false;public;0;3;;public String getUseDataType() {     return useDataType. }
false;public;1;3;;public void setUseDataType(String useDataType) {     this.useDataType = useDataType. }
false;public;0;3;;public String getUseBreadcrumb() {     return useBreadcrumb. }
false;public;1;3;;public void setUseBreadcrumb(String useBreadcrumb) {     this.useBreadcrumb = useBreadcrumb. }
false;public;0;3;;public String getAllowUseOriginalMessage() {     return allowUseOriginalMessage. }
false;public;1;3;;public void setAllowUseOriginalMessage(String allowUseOriginalMessage) {     this.allowUseOriginalMessage = allowUseOriginalMessage. }
false;public;0;3;;public String getRuntimeEndpointRegistryEnabled() {     return runtimeEndpointRegistryEnabled. }
false;public;1;3;;public void setRuntimeEndpointRegistryEnabled(String runtimeEndpointRegistryEnabled) {     this.runtimeEndpointRegistryEnabled = runtimeEndpointRegistryEnabled. }
false;public;0;3;;public String getManagementNamePattern() {     return managementNamePattern. }
false;public;1;3;;public void setManagementNamePattern(String managementNamePattern) {     this.managementNamePattern = managementNamePattern. }
false;public;0;3;;public String getThreadNamePattern() {     return threadNamePattern. }
false;public;1;3;;public void setThreadNamePattern(String threadNamePattern) {     this.threadNamePattern = threadNamePattern. }
false;public;0;4;;@Override public Boolean getLoadTypeConverters() {     return loadTypeConverters. }
false;public;1;3;;public void setLoadTypeConverters(Boolean loadTypeConverters) {     this.loadTypeConverters = loadTypeConverters. }
false;public;0;3;;public Boolean getTypeConverterStatisticsEnabled() {     return typeConverterStatisticsEnabled. }
false;public;1;3;;public void setTypeConverterStatisticsEnabled(Boolean typeConverterStatisticsEnabled) {     this.typeConverterStatisticsEnabled = typeConverterStatisticsEnabled. }
false;public;0;3;;public TypeConverterExists getTypeConverterExists() {     return typeConverterExists. }
false;public;1;3;;public void setTypeConverterExists(TypeConverterExists typeConverterExists) {     this.typeConverterExists = typeConverterExists. }
false;public;0;3;;public LoggingLevel getTypeConverterExistsLoggingLevel() {     return typeConverterExistsLoggingLevel. }
false;public;1;3;;public void setTypeConverterExistsLoggingLevel(LoggingLevel typeConverterExistsLoggingLevel) {     this.typeConverterExistsLoggingLevel = typeConverterExistsLoggingLevel. }
false;public;0;3;;public CamelJMXAgentDefinition getCamelJMXAgent() {     return camelJMXAgent. }
false;public;1;3;;public void setCamelJMXAgent(CamelJMXAgentDefinition agent) {     camelJMXAgent = agent. }
false;public;0;3;;public List<RouteBuilderDefinition> getBuilderRefs() {     return builderRefs. }
false;public;1;3;;public void setBuilderRefs(List<RouteBuilderDefinition> builderRefs) {     this.builderRefs = builderRefs. }
false;public;0;3;;public List<RouteContextRefDefinition> getRouteRefs() {     return routeRefs. }
false;public;1;3;;public void setRouteRefs(List<RouteContextRefDefinition> routeRefs) {     this.routeRefs = routeRefs. }
false;public;0;3;;public List<RestContextRefDefinition> getRestRefs() {     return restRefs. }
false;public;1;3;;public void setRestRefs(List<RestContextRefDefinition> restRefs) {     this.restRefs = restRefs. }
false;public;0;3;;public String getErrorHandlerRef() {     return errorHandlerRef. }
false;public;1;3;;public void setErrorHandlerRef(String errorHandlerRef) {     this.errorHandlerRef = errorHandlerRef. }
false;public;0;3;;public DataFormatsDefinition getDataFormats() {     return dataFormats. }
false;public;1;3;;public void setDataFormats(DataFormatsDefinition dataFormats) {     this.dataFormats = dataFormats. }
false;public;0;3;;public TransformersDefinition getTransformers() {     return transformers. }
false;public;1;3;;public void setTransformers(TransformersDefinition transformers) {     this.transformers = transformers. }
false;public;0;3;;public ValidatorsDefinition getValidators() {     return validators. }
false;public;1;3;;public void setValidators(ValidatorsDefinition validators) {     this.validators = validators. }
false;public;0;3;;public List<OnExceptionDefinition> getOnExceptions() {     return onExceptions. }
false;public;1;3;;public void setOnExceptions(List<OnExceptionDefinition> onExceptions) {     this.onExceptions = onExceptions. }
false;public;0;3;;public List<OnCompletionDefinition> getOnCompletions() {     return onCompletions. }
false;public;1;3;;public void setOnCompletions(List<OnCompletionDefinition> onCompletions) {     this.onCompletions = onCompletions. }
false;public;0;3;;public ShutdownRoute getShutdownRoute() {     return shutdownRoute. }
false;public;1;3;;public void setShutdownRoute(ShutdownRoute shutdownRoute) {     this.shutdownRoute = shutdownRoute. }
false;public;0;3;;public ShutdownRunningTask getShutdownRunningTask() {     return shutdownRunningTask. }
false;public;1;3;;public void setShutdownRunningTask(ShutdownRunningTask shutdownRunningTask) {     this.shutdownRunningTask = shutdownRunningTask. }
false;public;0;3;;public List<ThreadPoolProfileDefinition> getThreadPoolProfiles() {     return threadPoolProfiles. }
false;public;1;3;;public void setThreadPoolProfiles(List<ThreadPoolProfileDefinition> threadPoolProfiles) {     this.threadPoolProfiles = threadPoolProfiles. }
false;public;0;3;;public String getDependsOn() {     return dependsOn. }
false;public;1;3;;public void setDependsOn(String dependsOn) {     this.dependsOn = dependsOn. }
false;public;0;3;;public List<CamelProxyFactoryDefinition> getProxies() {     return proxies. }
false;public;1;3;;public void setProxies(List<CamelProxyFactoryDefinition> proxies) {     this.proxies = proxies. }
false;public;0;3;;public List<CamelServiceExporterDefinition> getExports() {     return exports. }
false;public;1;3;;public void setExports(List<CamelServiceExporterDefinition> exports) {     this.exports = exports. }
false;public;0;3;;public boolean isImplicitId() {     return implicitId. }
false;public;1;3;;public void setImplicitId(boolean implicitId) {     this.implicitId = implicitId. }
false;public;0;3;;public List<ErrorHandlerDefinition> getErrorHandlers() {     return errorHandlers. }
false;public;1;3;;public void setErrorHandlers(List<ErrorHandlerDefinition> errorHandlers) {     this.errorHandlers = errorHandlers. }
