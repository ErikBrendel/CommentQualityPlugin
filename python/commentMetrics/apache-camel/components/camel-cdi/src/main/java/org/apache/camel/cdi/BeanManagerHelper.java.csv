commented;modifiers;parameterAmount;loc;comment;code
false;static;3;5;;static <T> Set<T> getReferencesByType(BeanManager manager, Class<T> type, Annotation... qualifiers) {     return manager.getBeans(type, qualifiers).stream().map(bean -> getReference(manager, type, bean)).collect(toSet()). }
false;static;3;5;;static <T> Optional<T> getReferenceByName(BeanManager manager, String name, Class<T> type) {     return Optional.of(manager.getBeans(name)).map(manager::resolve).map(bean -> getReference(manager, type, bean)). }
false;static;3;5;;static <T> Optional<T> getReferenceByType(BeanManager manager, Class<T> type, Annotation... qualifiers) {     return Optional.of(manager.getBeans(type, qualifiers)).map(manager::resolve).map(bean -> getReference(manager, type, bean)). }
false;static;3;3;;static <T> T getReference(BeanManager manager, Class<T> type, Bean<?> bean) {     return type.cast(manager.getReference(bean, type, manager.createCreationalContext(bean))). }
