commented;modifiers;parameterAmount;loc;comment;code
false;public;1;7;;public <T extends Annotation> T getAnnotation(Class<T> type) {     return annotations.stream().filter(isAnnotationType(type)).findFirst().map(type::cast).orElse(null). }
false;public;1;6;;public <T extends Annotation> Set<T> getAnnotations(Class<T> type) {     return annotations.stream().filter(isAnnotationType(type)).map(type::cast).collect(toSet()). }
false;public;0;3;;public Set<Annotation> getAnnotations() {     return annotations. }
false;public;0;3;;public Type getBaseType() {     return delegate.getBaseType(). }
false;public;0;3;;public Set<Type> getTypeClosure() {     return delegate.getTypeClosure(). }
false;public;1;3;;public boolean isAnnotationPresent(Class<? extends Annotation> type) {     return annotations.stream().anyMatch(isAnnotationType(type)). }
false;public;0;3;;public String toString() {     return delegate.toString(). }
false;public;0;3;;public int hashCode() {     return delegate.hashCode(). }
false;public;1;3;;public boolean equals(Object object) {     return delegate.equals(object). }
