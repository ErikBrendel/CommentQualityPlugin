commented;modifiers;parameterAmount;loc;comment;code
false;public,static;0;10;;@Deployment public static Archive<?> deployment() {     return ShrinkWrap.create(JavaArchive.class).addPackage(CdiCamelExtension.class.getPackage()).addClass(CamelEventRoute.class).addAsManifestResource(EmptyAsset.INSTANCE, "beans.xml"). }
false;public;1;7;;@Test public void camelStartedEvent(@Uri("mock:started") MockEndpoint started) {     assertThat("Event fired is incorrect!", started.getExchanges(), contains(hasProperty("in", hasProperty("body", instanceOf(CamelContextStartedEvent.class))))). }
false;public;1;58;;@Test public void camelAllEvents(@Uri("mock:events") MockEndpoint events) {     assertThat("Events fired are incorrect!", events.getExchanges(), // We cannot rely on the delivery order of the camel context started event being fired and observed by both CDI event endpoints     either(contains(// Started route: route1     hasProperty("in", hasProperty("body", instanceOf(ExchangeCreatedEvent.class))), hasProperty("in", hasProperty("body", instanceOf(ExchangeSendingEvent.class))), hasProperty("in", hasProperty("body", instanceOf(RouteStartedEvent.class))), hasProperty("in", hasProperty("body", instanceOf(ExchangeSentEvent.class))), hasProperty("in", hasProperty("body", instanceOf(ExchangeCompletedEvent.class))), // Started route: route2     hasProperty("in", hasProperty("body", instanceOf(ExchangeCreatedEvent.class))), hasProperty("in", hasProperty("body", instanceOf(ExchangeSendingEvent.class))), hasProperty("in", hasProperty("body", instanceOf(RouteStartedEvent.class))), hasProperty("in", hasProperty("body", instanceOf(ExchangeSentEvent.class))), hasProperty("in", hasProperty("body", instanceOf(ExchangeCompletedEvent.class))), // Started CamelContext: camel-cdi     hasProperty("in", hasProperty("body", instanceOf(ExchangeCreatedEvent.class))), hasProperty("in", hasProperty("body", instanceOf(ExchangeSendingEvent.class))), hasProperty("in", hasProperty("body", instanceOf(CamelContextStartedEvent.class))), hasProperty("in", hasProperty("body", instanceOf(ExchangeSentEvent.class))), hasProperty("in", hasProperty("body", instanceOf(ExchangeCompletedEvent.class))), // Started CamelContext: camel-cdi (for CdiEventEndpoint<CamelContextStartedEvent> started)     hasProperty("in", hasProperty("body", instanceOf(ExchangeCreatedEvent.class))), hasProperty("in", hasProperty("body", instanceOf(ExchangeSendingEvent.class))), hasProperty("in", hasProperty("body", instanceOf(ExchangeSentEvent.class))), hasProperty("in", hasProperty("body", instanceOf(ExchangeCompletedEvent.class))))).or(contains(// Started route: route1     hasProperty("in", hasProperty("body", instanceOf(ExchangeCreatedEvent.class))), hasProperty("in", hasProperty("body", instanceOf(ExchangeSendingEvent.class))), hasProperty("in", hasProperty("body", instanceOf(RouteStartedEvent.class))), hasProperty("in", hasProperty("body", instanceOf(ExchangeSentEvent.class))), hasProperty("in", hasProperty("body", instanceOf(ExchangeCompletedEvent.class))), // Started route: route2     hasProperty("in", hasProperty("body", instanceOf(ExchangeCreatedEvent.class))), hasProperty("in", hasProperty("body", instanceOf(ExchangeSendingEvent.class))), hasProperty("in", hasProperty("body", instanceOf(RouteStartedEvent.class))), hasProperty("in", hasProperty("body", instanceOf(ExchangeSentEvent.class))), hasProperty("in", hasProperty("body", instanceOf(ExchangeCompletedEvent.class))), // Started CamelContext: camel-cdi (for CdiEventEndpoint<CamelContextStartedEvent> started)     hasProperty("in", hasProperty("body", instanceOf(ExchangeCreatedEvent.class))), hasProperty("in", hasProperty("body", instanceOf(ExchangeSendingEvent.class))), hasProperty("in", hasProperty("body", instanceOf(ExchangeSentEvent.class))), hasProperty("in", hasProperty("body", instanceOf(ExchangeCompletedEvent.class))), // Started CamelContext: camel-cdi     hasProperty("in", hasProperty("body", instanceOf(ExchangeCreatedEvent.class))), hasProperty("in", hasProperty("body", instanceOf(ExchangeSendingEvent.class))), hasProperty("in", hasProperty("body", instanceOf(CamelContextStartedEvent.class))), hasProperty("in", hasProperty("body", instanceOf(ExchangeSentEvent.class))), hasProperty("in", hasProperty("body", instanceOf(ExchangeCompletedEvent.class)))))). }
false;public;0;5;;@Override public void configure() {     from(events).startupOrder(1).to("mock:events").     from(started).startupOrder(2).to("mock:started"). }
