commented;modifiers;parameterAmount;loc;comment;code
false;public,static;0;15;;@Deployment public static Archive<?> deployment() {     return ShrinkWrap.create(JavaArchive.class).addPackage(CdiCamelExtension.class.getPackage()).addClasses(DefaultCamelContextBean.class, FirstNamedCamelContextBean.class, FirstNamedCamelContextRoute.class, SecondNamedCamelContextBean.class, SecondNamedCamelContextRoute.class).addAsManifestResource(EmptyAsset.INSTANCE, "beans.xml"). }
false;public;0;6;;@Override public void configure() {     from("direct:inbound").to("first:in").     from("first:out").to("second:in").     from("second:out").to("mock:outbound"). }
false;public;0;12;;@Test @InSequence(1) public void addRouteToMainContext() throws Exception {     main.addRoutes(new RouteBuilder() {          @Override         public void configure() {             from("direct:inbound").to("first:in").             from("first:out").to("second:in").             from("second:out").to("mock:outbound").         }     }). }
false;public;2;11;;@Test @InSequence(2) public void sendMessageToInbound(@Uri("direct:inbound") ProducerTemplate inbound, @Uri("mock:outbound") MockEndpoint outbound) throws InterruptedException {     outbound.expectedMessageCount(1).     outbound.expectedBodiesReceived("second-first-test").     inbound.sendBody("test").     MockEndpoint.assertIsSatisfied(1L, TimeUnit.SECONDS, outbound). }
