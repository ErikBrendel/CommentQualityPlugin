commented;modifiers;parameterAmount;loc;comment;code
false;public,static;0;10;;@Deployment public static Archive<?> deployment() {     return ShrinkWrap.create(JavaArchive.class).addPackage(CdiCamelExtension.class.getPackage()).addClass(FluentProduceTemplateBean.class).addAsManifestResource(EmptyAsset.INSTANCE, "beans.xml"). }
false;public;0;4;;@Override public void configure() {     from("direct:inbound").bean(FluentProduceTemplateBean.class). }
false;public;1;10;;@Test @InSequence(1) public void configureCamelContext(CamelContext context) throws Exception {     context.addRoutes(new RouteBuilder() {          @Override         public void configure() {             from("direct:inbound").bean(FluentProduceTemplateBean.class).         }     }). }
false;public;2;11;;@Test @InSequence(2) public void sendMessageToInbound(@Uri("direct:inbound") FluentProducerTemplate in, @Uri("mock:outbound") MockEndpoint out) throws InterruptedException {     out.expectedMessageCount(1).     out.expectedBodiesReceived("test-processed").     in.withBody("test").send().     assertIsSatisfied(2L, TimeUnit.SECONDS, out). }
