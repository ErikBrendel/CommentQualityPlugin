commented;modifiers;parameterAmount;loc;comment;code
false;public,static;0;10;;@Deployment public static Archive<?> deployment() {     return ShrinkWrap.create(JavaArchive.class).addPackage(CdiCamelExtension.class.getPackage()).addClasses(CamelContextProducerMethod.class, NamedCamelBean.class).addAsManifestResource(EmptyAsset.INSTANCE, "beans.xml"). }
false;public;1;5;;@Test public void verifyProducedCamelContext(CamelContext context) {     assertThat("The producer method sets the context name!", context.getName(), is(equalTo("camel-producer-method"))).     assertThat("The producer method starts the Camel context!", context.getStatus(), is(equalTo(ServiceStatus.Started))). }
false;public;0;9;;@Test public void sendMessageToInbound() throws InterruptedException {     outbound.expectedMessageCount(1).     outbound.expectedBodiesReceived("test-processed").     inbound.sendBody("test").     assertIsSatisfied(2L, TimeUnit.SECONDS, outbound). }
false;public;0;4;;@Override public void configure() {     from("direct:inbound").bean("beanName").to("mock:outbound"). }
