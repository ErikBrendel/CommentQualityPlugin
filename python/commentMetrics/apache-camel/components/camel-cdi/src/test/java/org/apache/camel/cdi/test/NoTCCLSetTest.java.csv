commented;modifiers;parameterAmount;loc;comment;code
false;public,static;0;8;;@Deployment public static Archive<?> deployment() {     return ShrinkWrap.create(JavaArchive.class).addPackage(CdiCamelExtension.class.getPackage()).addAsManifestResource(EmptyAsset.INSTANCE, "beans.xml"). }
false;public;0;7;;@Test public void verifyNoTCCLFallbackClassLoader() {     assertThat(camelContext, is(notNullValue())).     Set<ClassLoader> classLoaders = camelContext.getPackageScanClassResolver().getClassLoaders().     assertThat(classLoaders.size(), is(1)).     assertThat(classLoaders.iterator().next(), is(CamelContext.class.getClassLoader())). }
false;private;1;4;;private void configuration(@Observes CdiCamelConfiguration configuration) {     // Nullify TCCL before CamelContext creation     Thread.currentThread().setContextClassLoader(null). }
