commented;modifiers;parameterAmount;loc;comment;code
false;public,static;0;14;;@Deployment public static Archive<?> deployment() {     return ShrinkWrap.create(JavaArchive.class).addPackage(CdiCamelExtension.class.getPackage()).addClasses(EventConsumingRouteCdi10.class, EventProducingRouteCdi10.class, EventPayloadString.class, EventPayloadInteger.class).addAsManifestResource(EmptyAsset.INSTANCE, "beans.xml"). }
false;public;0;10;;@Before public void resetCollectedEventsAndMockEndpoints() {     observer.reset().     consumeObject.reset().     consumeString.reset().     consumeStringPayload.reset().     consumeIntegerPayload.reset().     consumeFooQualifier.reset().     consumeBarQualifier.reset(). }
false;public;0;32;;@Test public void sendEventsToConsumers() throws InterruptedException {     consumeObject.expectedMessageCount(8).     consumeObject.expectedBodiesReceived(1234, new EventPayloadString("foo"), new EventPayloadString("bar"), "test", new EventPayloadInteger(1), new EventPayloadInteger(2), 123L, 987L).     consumeString.expectedMessageCount(1).     consumeString.expectedBodiesReceived("test").     consumeStringPayload.expectedMessageCount(2).     consumeStringPayload.expectedBodiesReceived(new EventPayloadString("foo"), new EventPayloadString("bar")).     consumeIntegerPayload.expectedMessageCount(2).     consumeIntegerPayload.expectedBodiesReceived(new EventPayloadInteger(1), new EventPayloadInteger(2)).     consumeFooQualifier.expectedMessageCount(1).     consumeFooQualifier.expectedBodiesReceived(123L).     consumeBarQualifier.expectedMessageCount(1).     consumeBarQualifier.expectedBodiesReceived(987L).     objectEvent.select(Integer.class).fire(1234).     objectEvent.select(EventPayloadString.class).fire(new EventPayloadString("foo")).     stringPayloadEvent.select(new BarQualifier.Literal()).fire(new EventPayloadString("bar")).     objectEvent.select(String.class).fire("test").     integerPayloadEvent.fire(new EventPayloadInteger(1)).     integerPayloadEvent.fire(new EventPayloadInteger(2)).     objectEvent.select(Long.class, new FooQualifier.Literal()).fire(123L).     objectEvent.select(Long.class, new BarQualifier.Literal()).fire(987L).     // assertIsSatisfied(2L, TimeUnit.SECONDS, consumeObject, consumeString, consumeStringPayload, consumeIntegerPayload, consumeFooQualifier, consumeBarQualifier).     assertIsSatisfied(2L, TimeUnit.SECONDS, consumeObject, consumeString, consumeFooQualifier, consumeBarQualifier). }
false;public;0;23;;@Test public void sendMessagesToProducers() {     produceObject.sendBody("string").     EventPayload foo = new EventPayloadString("foo").     produceStringPayload.sendBody(foo).     produceObject.sendBody(1234).     produceString.sendBody("test").     EventPayload<Integer> bar = new EventPayloadInteger(2).     produceIntegerPayload.sendBody(bar).     EventPayload<Integer> baz = new EventPayloadInteger(12).     produceIntegerPayload.sendBody(baz).     produceFooQualifier.sendBody(456L).     produceBarQualifier.sendBody(495L).     produceObject.sendBody(777L).     assertThat(observer.getObjectEvents(), contains("string", foo, 1234, "test", bar, baz, 456L, 495L, 777L)).     // assertThat(observer.getStringEvents(), contains("string", "test")).     assertThat(observer.getStringPayloadEvents(), contains(foo)).     assertThat(observer.getIntegerPayloadEvents(), contains(bar, baz)).     assertThat(observer.getDefaultQualifierEvents(), contains("string", foo, 1234, "test", bar, baz, 777L)).     assertThat(observer.getFooQualifierEvents(), contains(456L)).     assertThat(observer.getBarQualifierEvents(), contains(495L)). }
false;;1;3;;void collectObjectEvents(@Observes Object event) {     objectEvents.add(event). }
false;;1;3;;void collectStringEvents(@Observes String event) {     stringEvents.add(event). }
false;;1;3;;void collectStringPayloadEvents(@Observes EventPayloadString event) {     stringPayloadEvents.add(event). }
false;;1;3;;void collectIntegerPayloadEvents(@Observes EventPayloadInteger event) {     integerPayloadEvents.add(event). }
false;;1;3;;void collectDefaultQualifierEvents(@Observes @Default Object event) {     defaultQualifierEvents.add(event). }
false;;1;3;;void collectFooQualifierEvents(@Observes @FooQualifier Long event) {     fooQualifierEvents.add(event). }
false;;1;3;;void collectBarQualifierEvents(@Observes @BarQualifier Long event) {     barQualifierEvents.add(event). }
false;;0;3;;List<Object> getObjectEvents() {     return objectEvents. }
false;;0;3;;List<String> getStringEvents() {     return stringEvents. }
false;;0;3;;List<EventPayloadString> getStringPayloadEvents() {     return stringPayloadEvents. }
false;;0;3;;List<EventPayloadInteger> getIntegerPayloadEvents() {     return integerPayloadEvents. }
false;;0;3;;List<Object> getDefaultQualifierEvents() {     return defaultQualifierEvents. }
false;;0;3;;List<Long> getFooQualifierEvents() {     return fooQualifierEvents. }
false;;0;3;;List<Long> getBarQualifierEvents() {     return barQualifierEvents. }
false;;0;9;;void reset() {     objectEvents.clear().     stringEvents.clear().     stringPayloadEvents.clear().     integerPayloadEvents.clear().     defaultQualifierEvents.clear().     fooQualifierEvents.clear().     barQualifierEvents.clear(). }
