commented;modifiers;parameterAmount;loc;comment;code
false;private,static;0;5;;@Produces @Named("queue") private static <T> BlockingQueue<T> queue() {     return new MyBlockingQueue<>(). }
false;public,static;0;12;;@Deployment public static Archive<?> deployment() {     return ShrinkWrap.create(JavaArchive.class).addPackage(CdiCamelExtension.class.getPackage()).addAsResource(Paths.get("src/test/resources/camel-context-endpoint.xml").toFile(), "imported-context.xml").addAsManifestResource(EmptyAsset.INSTANCE, "beans.xml"). }
false;public;0;10;;@Test @Ignore("@ApplicationScoped bean proxy cannot be casted to endpoint implementation") public void verifyXmlEndpoint() {     assertThat("Endpoint type is incorrect!", endpoint, is(instanceOf(SedaEndpoint.class))).     SedaEndpoint seda = (SedaEndpoint) endpoint.     assertThat("Endpoint queue is incorrect!", seda.getQueue(), is(instanceOf(MyBlockingQueue.class))).     assertThat("Endpoint concurrent consumers count is incorrect!", seda.getConcurrentConsumers(), is(equalTo(10))). }
false;public;0;9;;@Test public void sendMessageToInbound() throws InterruptedException {     outbound.expectedMessageCount(1).     outbound.expectedBodiesReceived("message").     inbound.sendBody("message").     assertIsSatisfied(2L, TimeUnit.SECONDS, outbound). }
