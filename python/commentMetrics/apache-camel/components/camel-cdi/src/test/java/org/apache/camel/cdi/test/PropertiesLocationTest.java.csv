commented;modifiers;parameterAmount;loc;comment;code
false;public,static;0;10;;@Deployment(name = "single-location") public static Archive<?> deployment() {     return ShrinkWrap.create(JavaArchive.class).addPackage(CdiCamelExtension.class.getPackage()).addClass(SingleLocation.class).addAsManifestResource(EmptyAsset.INSTANCE, "beans.xml"). }
false;public;1;5;;// TODO: reactivate when ARQ-1255 is fixed /*     @Deployment(name = "multiple-locations")     public static Archive<?> multipleLocationsDeployment() {         return ShrinkWrap.create(JavaArchive.class)             // Camel CDI             .addPackage(CdiCamelExtension.class.getPackage())             // Test classes             .addClass(MultipleLocations.class)             // Bean archive deployment descriptor             .addAsManifestResource(EmptyAsset.INSTANCE, "beans.xml").     }     */ @Test @OperateOnDeployment("single-location") public void resolvePropertyFromLocation(CamelContext context) throws Exception {     assertThat("Property from classpath location does not resolve!", context.resolvePropertyPlaceholders("{{header.message}}"), is(equalTo("message from file"))). }
false;private,static;0;6;;@Produces @ApplicationScoped @Named("properties") private static PropertiesComponent configuration() {     return new PropertiesComponent("classpath:placeholder.properties"). }
false;private,static;0;6;;@Produces @ApplicationScoped @Named("properties") private static PropertiesComponent configuration() {     return new PropertiesComponent("classpath:foo.properties", "classpath:bar.properties"). }
