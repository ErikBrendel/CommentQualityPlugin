commented;modifiers;parameterAmount;loc;comment;code
false;public;0;14;;@Test public void testMarshalAndUnmarshalMap() throws Exception {     Map<String, String> in = new HashMap<>().     in.put("name", "Camel").     SnakeYAMLTestHelper.marshalAndUnmarshal(context(), SnakeYAMLTestHelper.createTestMap(), "mock:reverse", "direct:in", "direct:back", "{name: Camel}"). }
false;public;0;11;;@Test public void testMarshalAndUnmarshalPojo() throws Exception {     SnakeYAMLTestHelper.marshalAndUnmarshal(context(), SnakeYAMLTestHelper.createTestPojo(), "mock:reversePojo", "direct:inPojo", "direct:backPojo", "!!org.apache.camel.component.snakeyaml.model.TestPojo {name: Camel}"). }
false;public;0;11;;@Test public void testMarshalAndUnmarshalPojoWithPrettyFlow() throws Exception {     SnakeYAMLTestHelper.marshalAndUnmarshal(context(), SnakeYAMLTestHelper.createTestPojo(), "mock:reversePojoWithPrettyFlow", "direct:inPojoWithPrettyFlow", "direct:backPojoWithPrettyFlow", "!!org.apache.camel.component.snakeyaml.model.TestPojo {\n  name: Camel\n}"). }
false;protected;0;4;;@Override protected AbstractXmlApplicationContext createApplicationContext() {     return new ClassPathXmlApplicationContext("org/apache/camel/component/snakeyaml/SnakeYAMLSpringTest.xml"). }
