commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Test public void testSafeConstructor() throws Exception {     SnakeYAMLTypeFilterHelper.testSafeConstructor(template). }
false;public;0;4;;@Test public void testTypeConstructor() throws Exception {     SnakeYAMLTypeFilterHelper.testTypeConstructor(template). }
false;public;0;4;;@Test public void testTypeConstructorFromDefinition() throws Exception {     SnakeYAMLTypeFilterHelper.testTypeConstructorFromDefinition(template). }
false;public;0;4;;@Test public void testAllowAllConstructor() throws Exception {     SnakeYAMLTypeFilterHelper.testAllowAllConstructor(template). }
false;public;0;32;;@Override public void configure() throws Exception {     // SafeConstructor     SnakeYAMLDataFormat safeConstructorDf = new SnakeYAMLDataFormat().     from("direct:safe-constructor").unmarshal(safeConstructorDf).     // Type filter Constructor     SnakeYAMLDataFormat typeConstructorDf = new SnakeYAMLDataFormat().     typeConstructorDf.addTypeFilters(TypeFilters.types(TestPojo.class)).     from("direct:type-constructor").unmarshal(typeConstructorDf).     // Type filter Constructor from string definitions     SnakeYAMLDataFormat typeConstructorStrDf = new SnakeYAMLDataFormat().     typeConstructorStrDf.setTypeFilterDefinitions(Arrays.asList("type:org.apache.camel.component.snakeyaml.model.TestPojo", "regexp:org.apache.camel.component.snakeyaml.model.R.*")).     from("direct:type-constructor-strdef").unmarshal(typeConstructorStrDf).     // Allow all Constructor     SnakeYAMLDataFormat allConstructorDf = new SnakeYAMLDataFormat().     allConstructorDf.setAllowAnyType(true).     from("direct:all-constructor").unmarshal(allConstructorDf).to("mock:all-constructor"). }
false;protected;0;37;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             // SafeConstructor             SnakeYAMLDataFormat safeConstructorDf = new SnakeYAMLDataFormat().             from("direct:safe-constructor").unmarshal(safeConstructorDf).             // Type filter Constructor             SnakeYAMLDataFormat typeConstructorDf = new SnakeYAMLDataFormat().             typeConstructorDf.addTypeFilters(TypeFilters.types(TestPojo.class)).             from("direct:type-constructor").unmarshal(typeConstructorDf).             // Type filter Constructor from string definitions             SnakeYAMLDataFormat typeConstructorStrDf = new SnakeYAMLDataFormat().             typeConstructorStrDf.setTypeFilterDefinitions(Arrays.asList("type:org.apache.camel.component.snakeyaml.model.TestPojo", "regexp:org.apache.camel.component.snakeyaml.model.R.*")).             from("direct:type-constructor-strdef").unmarshal(typeConstructorStrDf).             // Allow all Constructor             SnakeYAMLDataFormat allConstructorDf = new SnakeYAMLDataFormat().             allConstructorDf.setAllowAnyType(true).             from("direct:all-constructor").unmarshal(allConstructorDf).to("mock:all-constructor").         }     }. }
