commented;modifiers;parameterAmount;loc;comment;code
false;public,static;0;25;;@Parameterized.Parameters public static Collection yamlCases() {     return Arrays.asList(new Object[][] { { createDataFormat(null), createTestMap(), "{name: Camel}" }, { createDataFormat(TestPojo.class), createTestPojo(), "!!org.apache.camel.component.snakeyaml.model.TestPojo {name: Camel}" }, { createPrettyFlowDataFormat(TestPojo.class, true), createTestPojo(), "!!org.apache.camel.component.snakeyaml.model.TestPojo {\n  name: Camel\n}" }, { createClassTagDataFormat(TestPojo.class, new Tag("!tpojo")), createTestPojo(), "!tpojo {name: Camel}" } }). }
false;public;0;11;;@Test public void testMarshalAndUnmarshal() throws Exception {     SnakeYAMLTestHelper.marshalAndUnmarshal(context(), body, "mock:reverse", "direct:in", "direct:back", expected). }
false;public;0;8;;@Override public void configure() throws Exception {     from("direct:in").marshal(format).     from("direct:back").unmarshal(format).to("mock:reverse"). }
false;protected;0;13;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:in").marshal(format).             from("direct:back").unmarshal(format).to("mock:reverse").         }     }. }
