commented;modifiers;parameterAmount;loc;comment;code
false;public,static;1;3;;public static ValueBuilder hl7terser(String expression) {     return new ValueBuilder(new Hl7TerserExpression(expression)). }
false;public,static;0;3;;public static ValueBuilder ack() {     return new ValueBuilder(new AckExpression()). }
false;public,static;1;3;;public static ValueBuilder ack(AcknowledgmentCode code) {     return new ValueBuilder(new AckExpression(code)). }
false;public;1;5;;@Override public Object evaluate(Exchange exchange) {     String s = exchange.getIn().getBody(String.class).     return s != null ? s.replace('\n', '\r') : null. }
false;public,static;0;11;;public static ValueBuilder convertLFToCR() {     return new ValueBuilder(new ExpressionAdapter() {          @Override         public Object evaluate(Exchange exchange) {             String s = exchange.getIn().getBody(String.class).             return s != null ? s.replace('\n', '\r') : null.         }     }). }
false;public,static;3;3;;public static ValueBuilder ack(AcknowledgmentCode code, String errorMessage, ErrorCode errorCode) {     return new ValueBuilder(new AckExpression(code, errorMessage, errorCode)). }
false;public,static;0;3;;public static Predicate messageConforms() {     return new ValidationContextPredicate(). }
false;public,static;1;3;;public static Predicate messageConformsTo(HapiContext hapiContext) {     return new ValidationContextPredicate(hapiContext). }
false;public,static;1;3;;public static Predicate messageConformsTo(ValidationContext validationContext) {     return new ValidationContextPredicate(validationContext). }
false;public,static;1;3;;public static Predicate messageConformsTo(Expression expression) {     return new ValidationContextPredicate(expression). }
