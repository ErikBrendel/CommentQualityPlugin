# id;timestamp;commentText;codeText;commentWords;codeWords
HL7MLLPDecoder -> private DecoderState decoderState(IoSession session);1241028708;@param session_@return the state of the current decoding process;private DecoderState decoderState(IoSession session) {_        DecoderState decoderState = (DecoderState)session.getAttribute(DECODER_STATE)__        if (decoderState == null) {_            decoderState = new DecoderState()__            session.setAttribute(DECODER_STATE, decoderState)__        }_        return decoderState__    };param,session,return,the,state,of,the,current,decoding,process;private,decoder,state,decoder,state,io,session,session,decoder,state,decoder,state,decoder,state,session,get,attribute,if,decoder,state,null,decoder,state,new,decoder,state,session,set,attribute,decoder,state,return,decoder,state
HL7MLLPDecoder -> private DecoderState decoderState(IoSession session);1247086812;@param session_@return the state of the current decoding process;private DecoderState decoderState(IoSession session) {_        DecoderState decoderState = (DecoderState)session.getAttribute(DECODER_STATE)__        if (decoderState == null) {_            decoderState = new DecoderState()__            session.setAttribute(DECODER_STATE, decoderState)__        }_        return decoderState__    };param,session,return,the,state,of,the,current,decoding,process;private,decoder,state,decoder,state,io,session,session,decoder,state,decoder,state,decoder,state,session,get,attribute,if,decoder,state,null,decoder,state,new,decoder,state,session,set,attribute,decoder,state,return,decoder,state
HL7MLLPDecoder -> private void writeString(IoSession session, ByteBuffer in, ProtocolDecoderOutput out);1241028708;@param session_@param in_@param out_@param state_@return_@throws RuntimeException;private void writeString(IoSession session, ByteBuffer in, ProtocolDecoderOutput out) {_        DecoderState state = decoderState(session)__        if (state.posStart == 0) {_            LOG.warn("No start byte found, reading from beginning of data")__        }_        _        in.position(state.posStart)__        try {_            String body = in.getString(state.length(), charsetDecoder(session))___            if (LOG.isDebugEnabled()) {_                LOG.debug("Decoded HL7 from byte stream of length " + state.length() + " to String of length " + body.length())__            }_            out.write(body)__            _            state.reset()__        } catch (CharacterCodingException e) {_            throw new RuntimeException(e)__        }_    };param,session,param,in,param,out,param,state,return,throws,runtime,exception;private,void,write,string,io,session,session,byte,buffer,in,protocol,decoder,output,out,decoder,state,state,decoder,state,session,if,state,pos,start,0,log,warn,no,start,byte,found,reading,from,beginning,of,data,in,position,state,pos,start,try,string,body,in,get,string,state,length,charset,decoder,session,if,log,is,debug,enabled,log,debug,decoded,hl7,from,byte,stream,of,length,state,length,to,string,of,length,body,length,out,write,body,state,reset,catch,character,coding,exception,e,throw,new,runtime,exception,e
HL7MLLPDecoder -> private void writeString(IoSession session, ByteBuffer in, ProtocolDecoderOutput out);1247086812;@param session_@param in_@param out_@param state_@return_@throws RuntimeException;private void writeString(IoSession session, ByteBuffer in, ProtocolDecoderOutput out) {_        DecoderState state = decoderState(session)__        if (state.posStart == 0) {_            LOG.warn("No start byte found, reading from beginning of data")__        }_        _        in.position(state.posStart)__        try {_            String body = in.getString(state.length(), charsetDecoder(session))___            if (LOG.isDebugEnabled()) {_                LOG.debug("Decoded HL7 from byte stream of length " + state.length() + " to String of length " + body.length())__            }_            out.write(body)__            _            state.reset()__        } catch (CharacterCodingException e) {_            throw new RuntimeException(e)__        }_    };param,session,param,in,param,out,param,state,return,throws,runtime,exception;private,void,write,string,io,session,session,byte,buffer,in,protocol,decoder,output,out,decoder,state,state,decoder,state,session,if,state,pos,start,0,log,warn,no,start,byte,found,reading,from,beginning,of,data,in,position,state,pos,start,try,string,body,in,get,string,state,length,charset,decoder,session,if,log,is,debug,enabled,log,debug,decoded,hl7,from,byte,stream,of,length,state,length,to,string,of,length,body,length,out,write,body,state,reset,catch,character,coding,exception,e,throw,new,runtime,exception,e
HL7MLLPDecoder -> private boolean scan(IoSession session, IoBuffer in);1344933747;Scans the buffer for start and end bytes and stores its position in the_session state object.__@return <code>true</code> if the end bytes were found, <code>false</code>_otherwise;private boolean scan(IoSession session, IoBuffer in) {_        DecoderState state = decoderState(session)__        _        in.position(state.current)__        LOG.debug("Start scanning buffer at position {}", in.position())__        while (in.hasRemaining()) {_            byte b = in.get()__            _            if (b == config.getStartByte()) {_                if (state.posStart > 0 || state.waitingForEndByte2) {_                    LOG.warn("Ignoring message start at position {} before previous message has ended.", in.position())__                } else {_                    state.posStart = in.position()__                    state.waitingForEndByte2 = false__                    LOG.debug("Message starts at position {}", state.posStart)__                }_            }_            _            if (b == config.getEndByte1()) {_                if (!state.waitingForEndByte2 && state.posStart > 0) {_                    state.waitingForEndByte2 = true__                } else {_                    LOG.warn("Ignoring unexpected 1st end byte {}. Expected 2nd endpoint {}", b, config.getEndByte2())__                }_            }_            _            if (b == config.getEndByte2() && state.waitingForEndByte2) {_                state.posEnd = in.position() - 2_ _                                                  _                state.waitingForEndByte2 = false__                LOG.debug("Message ends at position {}", state.posEnd)__                break__            }_        }_        _        state.current = in.position()__        in.rewind()__        return state.posEnd > 0__    };scans,the,buffer,for,start,and,end,bytes,and,stores,its,position,in,the,session,state,object,return,code,true,code,if,the,end,bytes,were,found,code,false,code,otherwise;private,boolean,scan,io,session,session,io,buffer,in,decoder,state,state,decoder,state,session,in,position,state,current,log,debug,start,scanning,buffer,at,position,in,position,while,in,has,remaining,byte,b,in,get,if,b,config,get,start,byte,if,state,pos,start,0,state,waiting,for,end,byte2,log,warn,ignoring,message,start,at,position,before,previous,message,has,ended,in,position,else,state,pos,start,in,position,state,waiting,for,end,byte2,false,log,debug,message,starts,at,position,state,pos,start,if,b,config,get,end,byte1,if,state,waiting,for,end,byte2,state,pos,start,0,state,waiting,for,end,byte2,true,else,log,warn,ignoring,unexpected,1st,end,byte,expected,2nd,endpoint,b,config,get,end,byte2,if,b,config,get,end,byte2,state,waiting,for,end,byte2,state,pos,end,in,position,2,state,waiting,for,end,byte2,false,log,debug,message,ends,at,position,state,pos,end,break,state,current,in,position,in,rewind,return,state,pos,end,0
HL7MLLPDecoder -> private boolean scan(IoSession session, IoBuffer in);1346828901;Scans the buffer for start and end bytes and stores its position in the_session state object.__@return <code>true</code> if the end bytes were found, <code>false</code>_otherwise;private boolean scan(IoSession session, IoBuffer in) {_        DecoderState state = decoderState(session)__        _        in.position(state.current)__        LOG.debug("Start scanning buffer at position {}", in.position())__        while (in.hasRemaining()) {_            byte b = in.get()__            _            if (b == config.getStartByte()) {_                if (state.posStart > 0 || state.waitingForEndByte2) {_                    LOG.warn("Ignoring message start at position {} before previous message has ended.", in.position())__                } else {_                    state.posStart = in.position()__                    state.waitingForEndByte2 = false__                    LOG.debug("Message starts at position {}", state.posStart)__                }_            }_            _            if (b == config.getEndByte1()) {_                if (!state.waitingForEndByte2 && state.posStart > 0) {_                    state.waitingForEndByte2 = true__                } else {_                    LOG.warn("Ignoring unexpected 1st end byte {}. Expected 2nd endpoint {}", b, config.getEndByte2())__                }_            }_            _            if (b == config.getEndByte2() && state.waitingForEndByte2) {_                state.posEnd = in.position() - 2_ _                _                state.waitingForEndByte2 = false__                LOG.debug("Message ends at position {}", state.posEnd)__                break__            }_        }_        _        state.current = in.position()__        in.rewind()__        return state.posEnd > 0__    };scans,the,buffer,for,start,and,end,bytes,and,stores,its,position,in,the,session,state,object,return,code,true,code,if,the,end,bytes,were,found,code,false,code,otherwise;private,boolean,scan,io,session,session,io,buffer,in,decoder,state,state,decoder,state,session,in,position,state,current,log,debug,start,scanning,buffer,at,position,in,position,while,in,has,remaining,byte,b,in,get,if,b,config,get,start,byte,if,state,pos,start,0,state,waiting,for,end,byte2,log,warn,ignoring,message,start,at,position,before,previous,message,has,ended,in,position,else,state,pos,start,in,position,state,waiting,for,end,byte2,false,log,debug,message,starts,at,position,state,pos,start,if,b,config,get,end,byte1,if,state,waiting,for,end,byte2,state,pos,start,0,state,waiting,for,end,byte2,true,else,log,warn,ignoring,unexpected,1st,end,byte,expected,2nd,endpoint,b,config,get,end,byte2,if,b,config,get,end,byte2,state,waiting,for,end,byte2,state,pos,end,in,position,2,state,waiting,for,end,byte2,false,log,debug,message,ends,at,position,state,pos,end,break,state,current,in,position,in,rewind,return,state,pos,end,0
HL7MLLPDecoder -> private boolean scan(IoSession session, IoBuffer in);1376549254;Scans the buffer for start and end bytes and stores its position in the_session state object.__@return <code>true</code> if the end bytes were found, <code>false</code>_otherwise;private boolean scan(IoSession session, IoBuffer in) {_        DecoderState state = decoderState(session)__        _        in.position(state.current)__        LOG.debug("Start scanning buffer at position {}", in.position())__        while (in.hasRemaining()) {_            byte b = in.get()__            _            if (b == config.getStartByte()) {_                if (state.posStart > 0 || state.waitingForEndByte2) {_                    LOG.warn("Ignoring message start at position {} before previous message has ended.", in.position())__                } else {_                    state.posStart = in.position()__                    state.waitingForEndByte2 = false__                    LOG.debug("Message starts at position {}", state.posStart)__                }_            }_            _            if (b == config.getEndByte1()) {_                if (!state.waitingForEndByte2 && state.posStart > 0) {_                    state.waitingForEndByte2 = true__                } else {_                    LOG.warn("Ignoring unexpected 1st end byte {}. Expected 2nd endpoint {}", b, config.getEndByte2())__                }_            }_            _            if (b == config.getEndByte2() && state.waitingForEndByte2) {_                state.posEnd = in.position() - 2_ _                _                state.waitingForEndByte2 = false__                LOG.debug("Message ends at position {}", state.posEnd)__                break__            }_        }_        _        state.current = in.position()__        in.rewind()__        return state.posEnd > 0__    };scans,the,buffer,for,start,and,end,bytes,and,stores,its,position,in,the,session,state,object,return,code,true,code,if,the,end,bytes,were,found,code,false,code,otherwise;private,boolean,scan,io,session,session,io,buffer,in,decoder,state,state,decoder,state,session,in,position,state,current,log,debug,start,scanning,buffer,at,position,in,position,while,in,has,remaining,byte,b,in,get,if,b,config,get,start,byte,if,state,pos,start,0,state,waiting,for,end,byte2,log,warn,ignoring,message,start,at,position,before,previous,message,has,ended,in,position,else,state,pos,start,in,position,state,waiting,for,end,byte2,false,log,debug,message,starts,at,position,state,pos,start,if,b,config,get,end,byte1,if,state,waiting,for,end,byte2,state,pos,start,0,state,waiting,for,end,byte2,true,else,log,warn,ignoring,unexpected,1st,end,byte,expected,2nd,endpoint,b,config,get,end,byte2,if,b,config,get,end,byte2,state,waiting,for,end,byte2,state,pos,end,in,position,2,state,waiting,for,end,byte2,false,log,debug,message,ends,at,position,state,pos,end,break,state,current,in,position,in,rewind,return,state,pos,end,0
HL7MLLPDecoder -> private boolean scan(IoSession session, ByteBuffer in);1241028708;Scans the buffer for start and end bytes and stores its position in the_session state object.__@param session_@param in_@return <code>true</code> if the end bytes were found, <code>false</code>_otherwise;private boolean scan(IoSession session, ByteBuffer in) {_        DecoderState state = decoderState(session)__        _        in.position(state.current)__        LOG.debug("Start scanning buffer at position " + in.position())___        while (in.hasRemaining()) {_            byte b = in.get()__            _            if (b == config.getStartByte()) {_                if (state.posStart > 0) {_                    LOG.warn("Ignoring message start at position " + in.position() + " before previous message has ended.")__                } else {_                    state.posStart = in.position()__                    LOG.debug("Message starts at position " + state.posStart)__                }_            }_            _            if (b == config.getEndByte1()) {_                byte next = in.get()__                if (next == config.getEndByte2()) {_                    state.posEnd = in.position() - 2_ _                                                      _                    LOG.debug("Message ends at position " + state.posEnd)__                    break__                } else {_                    _                    LOG.warn("The 2nd end byte " + config.getEndByte2() + " was not found, but was " + b)__                }_            }_        }_        _        state.current = in.position()__        in.rewind()__        return state.posEnd > 0__    };scans,the,buffer,for,start,and,end,bytes,and,stores,its,position,in,the,session,state,object,param,session,param,in,return,code,true,code,if,the,end,bytes,were,found,code,false,code,otherwise;private,boolean,scan,io,session,session,byte,buffer,in,decoder,state,state,decoder,state,session,in,position,state,current,log,debug,start,scanning,buffer,at,position,in,position,while,in,has,remaining,byte,b,in,get,if,b,config,get,start,byte,if,state,pos,start,0,log,warn,ignoring,message,start,at,position,in,position,before,previous,message,has,ended,else,state,pos,start,in,position,log,debug,message,starts,at,position,state,pos,start,if,b,config,get,end,byte1,byte,next,in,get,if,next,config,get,end,byte2,state,pos,end,in,position,2,log,debug,message,ends,at,position,state,pos,end,break,else,log,warn,the,2nd,end,byte,config,get,end,byte2,was,not,found,but,was,b,state,current,in,position,in,rewind,return,state,pos,end,0
HL7MLLPDecoder -> private boolean scan(IoSession session, ByteBuffer in);1247086812;Scans the buffer for start and end bytes and stores its position in the_session state object.__@param session_@param in_@return <code>true</code> if the end bytes were found, <code>false</code>_otherwise;private boolean scan(IoSession session, ByteBuffer in) {_        DecoderState state = decoderState(session)__        _        in.position(state.current)__        LOG.debug("Start scanning buffer at position " + in.position())___        while (in.hasRemaining()) {_            byte b = in.get()__            _            if (b == config.getStartByte()) {_                if (state.posStart > 0) {_                    LOG.warn("Ignoring message start at position " + in.position() + " before previous message has ended.")__                } else {_                    state.posStart = in.position()__                    LOG.debug("Message starts at position " + state.posStart)__                }_            }_            _            if (b == config.getEndByte1()) {_                byte next = in.get()__                if (next == config.getEndByte2()) {_                    state.posEnd = in.position() - 2_ _                                                      _                    LOG.debug("Message ends at position " + state.posEnd)__                    break__                } else {_                    _                    LOG.warn("The 2nd end byte " + config.getEndByte2() + " was not found, but was " + b)__                }_            }_        }_        _        state.current = in.position()__        in.rewind()__        return state.posEnd > 0__    };scans,the,buffer,for,start,and,end,bytes,and,stores,its,position,in,the,session,state,object,param,session,param,in,return,code,true,code,if,the,end,bytes,were,found,code,false,code,otherwise;private,boolean,scan,io,session,session,byte,buffer,in,decoder,state,state,decoder,state,session,in,position,state,current,log,debug,start,scanning,buffer,at,position,in,position,while,in,has,remaining,byte,b,in,get,if,b,config,get,start,byte,if,state,pos,start,0,log,warn,ignoring,message,start,at,position,in,position,before,previous,message,has,ended,else,state,pos,start,in,position,log,debug,message,starts,at,position,state,pos,start,if,b,config,get,end,byte1,byte,next,in,get,if,next,config,get,end,byte2,state,pos,end,in,position,2,log,debug,message,ends,at,position,state,pos,end,break,else,log,warn,the,2nd,end,byte,config,get,end,byte2,was,not,found,but,was,b,state,current,in,position,in,rewind,return,state,pos,end,0
HL7MLLPDecoder -> private boolean scan(IoSession session, ByteBuffer in);1248874559;Scans the buffer for start and end bytes and stores its position in the_session state object.__@return <code>true</code> if the end bytes were found, <code>false</code>_otherwise;private boolean scan(IoSession session, ByteBuffer in) {_        DecoderState state = decoderState(session)__        _        in.position(state.current)__        LOG.debug("Start scanning buffer at position " + in.position())___        while (in.hasRemaining()) {_            byte b = in.get()__            _            if (b == config.getStartByte()) {_                if (state.posStart > 0) {_                    LOG.warn("Ignoring message start at position " + in.position() + " before previous message has ended.")__                } else {_                    state.posStart = in.position()__                    if (LOG.isDebugEnabled()) {_                        LOG.debug("Message starts at position " + state.posStart)__                    }_                }_            }_            _            if (b == config.getEndByte1()) {_                byte next = in.get()__                if (next == config.getEndByte2()) {_                    state.posEnd = in.position() - 2_ _                                                      _                    if (LOG.isDebugEnabled()) {_                        LOG.debug("Message ends at position " + state.posEnd)__                    }_                    break__                } else {_                    _                    LOG.warn("The 2nd end byte " + config.getEndByte2() + " was not found, but was " + b)__                }_            }_        }_        _        state.current = in.position()__        in.rewind()__        return state.posEnd > 0__    };scans,the,buffer,for,start,and,end,bytes,and,stores,its,position,in,the,session,state,object,return,code,true,code,if,the,end,bytes,were,found,code,false,code,otherwise;private,boolean,scan,io,session,session,byte,buffer,in,decoder,state,state,decoder,state,session,in,position,state,current,log,debug,start,scanning,buffer,at,position,in,position,while,in,has,remaining,byte,b,in,get,if,b,config,get,start,byte,if,state,pos,start,0,log,warn,ignoring,message,start,at,position,in,position,before,previous,message,has,ended,else,state,pos,start,in,position,if,log,is,debug,enabled,log,debug,message,starts,at,position,state,pos,start,if,b,config,get,end,byte1,byte,next,in,get,if,next,config,get,end,byte2,state,pos,end,in,position,2,if,log,is,debug,enabled,log,debug,message,ends,at,position,state,pos,end,break,else,log,warn,the,2nd,end,byte,config,get,end,byte2,was,not,found,but,was,b,state,current,in,position,in,rewind,return,state,pos,end,0
HL7MLLPDecoder -> private boolean scan(IoSession session, ByteBuffer in);1265361254;Scans the buffer for start and end bytes and stores its position in the_session state object.__@return <code>true</code> if the end bytes were found, <code>false</code>_otherwise;private boolean scan(IoSession session, ByteBuffer in) {_        DecoderState state = decoderState(session)__        _        in.position(state.current)__        LOG.debug("Start scanning buffer at position " + in.position())__        while (in.hasRemaining()) {_            byte b = in.get()__            _            if (b == config.getStartByte()) {_                if (state.posStart > 0 || state.waitingForEndByte2) {_                    LOG.warn("Ignoring message start at position " + in.position() + " before previous message has ended.")__                } else {_                    state.posStart = in.position()__                    state.waitingForEndByte2 = false__                    if (LOG.isDebugEnabled()) {_                        LOG.debug("Message starts at position " + state.posStart)__                    }_                }_            }_            _            if (b == config.getEndByte1()) {_                if (!state.waitingForEndByte2 && state.posStart > 0) {_                    state.waitingForEndByte2 = true__                } else {_                    LOG.warn("Ignoring unexpected 1st end byte " + b + ". Expected 2nd endpoint  " + config.getEndByte2())__                }_            }_            _            if (b == config.getEndByte2() && state.waitingForEndByte2) {_                state.posEnd = in.position() - 2_ _                                                  _                state.waitingForEndByte2 = false__                if (LOG.isDebugEnabled()) {_                    LOG.debug("Message ends at position " + state.posEnd)__                }_                break__            }_        }_        _        state.current = in.position()__        in.rewind()__        return state.posEnd > 0__    };scans,the,buffer,for,start,and,end,bytes,and,stores,its,position,in,the,session,state,object,return,code,true,code,if,the,end,bytes,were,found,code,false,code,otherwise;private,boolean,scan,io,session,session,byte,buffer,in,decoder,state,state,decoder,state,session,in,position,state,current,log,debug,start,scanning,buffer,at,position,in,position,while,in,has,remaining,byte,b,in,get,if,b,config,get,start,byte,if,state,pos,start,0,state,waiting,for,end,byte2,log,warn,ignoring,message,start,at,position,in,position,before,previous,message,has,ended,else,state,pos,start,in,position,state,waiting,for,end,byte2,false,if,log,is,debug,enabled,log,debug,message,starts,at,position,state,pos,start,if,b,config,get,end,byte1,if,state,waiting,for,end,byte2,state,pos,start,0,state,waiting,for,end,byte2,true,else,log,warn,ignoring,unexpected,1st,end,byte,b,expected,2nd,endpoint,config,get,end,byte2,if,b,config,get,end,byte2,state,waiting,for,end,byte2,state,pos,end,in,position,2,state,waiting,for,end,byte2,false,if,log,is,debug,enabled,log,debug,message,ends,at,position,state,pos,end,break,state,current,in,position,in,rewind,return,state,pos,end,0
HL7MLLPDecoder -> private boolean scan(IoSession session, ByteBuffer in);1296546062;Scans the buffer for start and end bytes and stores its position in the_session state object.__@return <code>true</code> if the end bytes were found, <code>false</code>_otherwise;private boolean scan(IoSession session, ByteBuffer in) {_        DecoderState state = decoderState(session)__        _        in.position(state.current)__        LOG.debug("Start scanning buffer at position " + in.position())__        while (in.hasRemaining()) {_            byte b = in.get()__            _            if (b == config.getStartByte()) {_                if (state.posStart > 0 || state.waitingForEndByte2) {_                    LOG.warn("Ignoring message start at position " + in.position() + " before previous message has ended.")__                } else {_                    state.posStart = in.position()__                    state.waitingForEndByte2 = false__                    if (LOG.isDebugEnabled()) {_                        LOG.debug("Message starts at position " + state.posStart)__                    }_                }_            }_            _            if (b == config.getEndByte1()) {_                if (!state.waitingForEndByte2 && state.posStart > 0) {_                    state.waitingForEndByte2 = true__                } else {_                    LOG.warn("Ignoring unexpected 1st end byte " + b + ". Expected 2nd endpoint  " + config.getEndByte2())__                }_            }_            _            if (b == config.getEndByte2() && state.waitingForEndByte2) {_                state.posEnd = in.position() - 2_ _                                                  _                state.waitingForEndByte2 = false__                if (LOG.isDebugEnabled()) {_                    LOG.debug("Message ends at position " + state.posEnd)__                }_                break__            }_        }_        _        state.current = in.position()__        in.rewind()__        return state.posEnd > 0__    };scans,the,buffer,for,start,and,end,bytes,and,stores,its,position,in,the,session,state,object,return,code,true,code,if,the,end,bytes,were,found,code,false,code,otherwise;private,boolean,scan,io,session,session,byte,buffer,in,decoder,state,state,decoder,state,session,in,position,state,current,log,debug,start,scanning,buffer,at,position,in,position,while,in,has,remaining,byte,b,in,get,if,b,config,get,start,byte,if,state,pos,start,0,state,waiting,for,end,byte2,log,warn,ignoring,message,start,at,position,in,position,before,previous,message,has,ended,else,state,pos,start,in,position,state,waiting,for,end,byte2,false,if,log,is,debug,enabled,log,debug,message,starts,at,position,state,pos,start,if,b,config,get,end,byte1,if,state,waiting,for,end,byte2,state,pos,start,0,state,waiting,for,end,byte2,true,else,log,warn,ignoring,unexpected,1st,end,byte,b,expected,2nd,endpoint,config,get,end,byte2,if,b,config,get,end,byte2,state,waiting,for,end,byte2,state,pos,end,in,position,2,state,waiting,for,end,byte2,false,if,log,is,debug,enabled,log,debug,message,ends,at,position,state,pos,end,break,state,current,in,position,in,rewind,return,state,pos,end,0
HL7MLLPDecoder -> private boolean scan(IoSession session, ByteBuffer in);1296567562;Scans the buffer for start and end bytes and stores its position in the_session state object.__@return <code>true</code> if the end bytes were found, <code>false</code>_otherwise;private boolean scan(IoSession session, ByteBuffer in) {_        DecoderState state = decoderState(session)__        _        in.position(state.current)__        LOG.debug("Start scanning buffer at position " + in.position())__        while (in.hasRemaining()) {_            byte b = in.get()__            _            if (b == config.getStartByte()) {_                if (state.posStart > 0 || state.waitingForEndByte2) {_                    LOG.warn("Ignoring message start at position " + in.position() + " before previous message has ended.")__                } else {_                    state.posStart = in.position()__                    state.waitingForEndByte2 = false__                    if (LOG.isDebugEnabled()) {_                        LOG.debug("Message starts at position " + state.posStart)__                    }_                }_            }_            _            if (b == config.getEndByte1()) {_                if (!state.waitingForEndByte2 && state.posStart > 0) {_                    state.waitingForEndByte2 = true__                } else {_                    LOG.warn("Ignoring unexpected 1st end byte " + b + ". Expected 2nd endpoint  " + config.getEndByte2())__                }_            }_            _            if (b == config.getEndByte2() && state.waitingForEndByte2) {_                state.posEnd = in.position() - 2_ _                                                  _                state.waitingForEndByte2 = false__                if (LOG.isDebugEnabled()) {_                    LOG.debug("Message ends at position " + state.posEnd)__                }_                break__            }_        }_        _        state.current = in.position()__        in.rewind()__        return state.posEnd > 0__    };scans,the,buffer,for,start,and,end,bytes,and,stores,its,position,in,the,session,state,object,return,code,true,code,if,the,end,bytes,were,found,code,false,code,otherwise;private,boolean,scan,io,session,session,byte,buffer,in,decoder,state,state,decoder,state,session,in,position,state,current,log,debug,start,scanning,buffer,at,position,in,position,while,in,has,remaining,byte,b,in,get,if,b,config,get,start,byte,if,state,pos,start,0,state,waiting,for,end,byte2,log,warn,ignoring,message,start,at,position,in,position,before,previous,message,has,ended,else,state,pos,start,in,position,state,waiting,for,end,byte2,false,if,log,is,debug,enabled,log,debug,message,starts,at,position,state,pos,start,if,b,config,get,end,byte1,if,state,waiting,for,end,byte2,state,pos,start,0,state,waiting,for,end,byte2,true,else,log,warn,ignoring,unexpected,1st,end,byte,b,expected,2nd,endpoint,config,get,end,byte2,if,b,config,get,end,byte2,state,waiting,for,end,byte2,state,pos,end,in,position,2,state,waiting,for,end,byte2,false,if,log,is,debug,enabled,log,debug,message,ends,at,position,state,pos,end,break,state,current,in,position,in,rewind,return,state,pos,end,0
HL7MLLPDecoder -> private boolean scan(IoSession session, ByteBuffer in);1307685726;Scans the buffer for start and end bytes and stores its position in the_session state object.__@return <code>true</code> if the end bytes were found, <code>false</code>_otherwise;private boolean scan(IoSession session, ByteBuffer in) {_        DecoderState state = decoderState(session)__        _        in.position(state.current)__        LOG.debug("Start scanning buffer at position " + in.position())__        while (in.hasRemaining()) {_            byte b = in.get()__            _            if (b == config.getStartByte()) {_                if (state.posStart > 0 || state.waitingForEndByte2) {_                    LOG.warn("Ignoring message start at position " + in.position() + " before previous message has ended.")__                } else {_                    state.posStart = in.position()__                    state.waitingForEndByte2 = false__                    if (LOG.isDebugEnabled()) {_                        LOG.debug("Message starts at position {}", state.posStart)__                    }_                }_            }_            _            if (b == config.getEndByte1()) {_                if (!state.waitingForEndByte2 && state.posStart > 0) {_                    state.waitingForEndByte2 = true__                } else {_                    LOG.warn("Ignoring unexpected 1st end byte " + b + ". Expected 2nd endpoint  " + config.getEndByte2())__                }_            }_            _            if (b == config.getEndByte2() && state.waitingForEndByte2) {_                state.posEnd = in.position() - 2_ _                                                  _                state.waitingForEndByte2 = false__                if (LOG.isDebugEnabled()) {_                    LOG.debug("Message ends at position {}", state.posEnd)__                }_                break__            }_        }_        _        state.current = in.position()__        in.rewind()__        return state.posEnd > 0__    };scans,the,buffer,for,start,and,end,bytes,and,stores,its,position,in,the,session,state,object,return,code,true,code,if,the,end,bytes,were,found,code,false,code,otherwise;private,boolean,scan,io,session,session,byte,buffer,in,decoder,state,state,decoder,state,session,in,position,state,current,log,debug,start,scanning,buffer,at,position,in,position,while,in,has,remaining,byte,b,in,get,if,b,config,get,start,byte,if,state,pos,start,0,state,waiting,for,end,byte2,log,warn,ignoring,message,start,at,position,in,position,before,previous,message,has,ended,else,state,pos,start,in,position,state,waiting,for,end,byte2,false,if,log,is,debug,enabled,log,debug,message,starts,at,position,state,pos,start,if,b,config,get,end,byte1,if,state,waiting,for,end,byte2,state,pos,start,0,state,waiting,for,end,byte2,true,else,log,warn,ignoring,unexpected,1st,end,byte,b,expected,2nd,endpoint,config,get,end,byte2,if,b,config,get,end,byte2,state,waiting,for,end,byte2,state,pos,end,in,position,2,state,waiting,for,end,byte2,false,if,log,is,debug,enabled,log,debug,message,ends,at,position,state,pos,end,break,state,current,in,position,in,rewind,return,state,pos,end,0
HL7MLLPDecoder -> private boolean scan(IoSession session, ByteBuffer in);1325745470;Scans the buffer for start and end bytes and stores its position in the_session state object.__@return <code>true</code> if the end bytes were found, <code>false</code>_otherwise;private boolean scan(IoSession session, ByteBuffer in) {_        DecoderState state = decoderState(session)__        _        in.position(state.current)__        LOG.debug("Start scanning buffer at position " + in.position())__        while (in.hasRemaining()) {_            byte b = in.get()__            _            if (b == config.getStartByte()) {_                if (state.posStart > 0 || state.waitingForEndByte2) {_                    LOG.warn("Ignoring message start at position " + in.position() + " before previous message has ended.")__                } else {_                    state.posStart = in.position()__                    state.waitingForEndByte2 = false__                    if (LOG.isDebugEnabled()) {_                        LOG.debug("Message starts at position {}", state.posStart)__                    }_                }_            }_            _            if (b == config.getEndByte1()) {_                if (!state.waitingForEndByte2 && state.posStart > 0) {_                    state.waitingForEndByte2 = true__                } else {_                    LOG.warn("Ignoring unexpected 1st end byte " + b + ". Expected 2nd endpoint  " + config.getEndByte2())__                }_            }_            _            if (b == config.getEndByte2() && state.waitingForEndByte2) {_                state.posEnd = in.position() - 2_ _                                                  _                state.waitingForEndByte2 = false__                if (LOG.isDebugEnabled()) {_                    LOG.debug("Message ends at position {}", state.posEnd)__                }_                break__            }_        }_        _        state.current = in.position()__        in.rewind()__        return state.posEnd > 0__    };scans,the,buffer,for,start,and,end,bytes,and,stores,its,position,in,the,session,state,object,return,code,true,code,if,the,end,bytes,were,found,code,false,code,otherwise;private,boolean,scan,io,session,session,byte,buffer,in,decoder,state,state,decoder,state,session,in,position,state,current,log,debug,start,scanning,buffer,at,position,in,position,while,in,has,remaining,byte,b,in,get,if,b,config,get,start,byte,if,state,pos,start,0,state,waiting,for,end,byte2,log,warn,ignoring,message,start,at,position,in,position,before,previous,message,has,ended,else,state,pos,start,in,position,state,waiting,for,end,byte2,false,if,log,is,debug,enabled,log,debug,message,starts,at,position,state,pos,start,if,b,config,get,end,byte1,if,state,waiting,for,end,byte2,state,pos,start,0,state,waiting,for,end,byte2,true,else,log,warn,ignoring,unexpected,1st,end,byte,b,expected,2nd,endpoint,config,get,end,byte2,if,b,config,get,end,byte2,state,waiting,for,end,byte2,state,pos,end,in,position,2,state,waiting,for,end,byte2,false,if,log,is,debug,enabled,log,debug,message,ends,at,position,state,pos,end,break,state,current,in,position,in,rewind,return,state,pos,end,0
HL7MLLPDecoder -> private CharsetDecoder charsetDecoder(IoSession session);1241028708;@param session_@return the charset decoder for this IoSession;private CharsetDecoder charsetDecoder(IoSession session) {_        _        CharsetDecoder decoder = (CharsetDecoder)session.getAttribute(CHARSET_DECODER)__        if (decoder == null) {_            decoder = config.getCharset().newDecoder()__            session.setAttribute(CHARSET_DECODER, decoder)__        }_        return decoder__    };param,session,return,the,charset,decoder,for,this,io,session;private,charset,decoder,charset,decoder,io,session,session,charset,decoder,decoder,charset,decoder,session,get,attribute,if,decoder,null,decoder,config,get,charset,new,decoder,session,set,attribute,decoder,return,decoder
HL7MLLPDecoder -> private CharsetDecoder charsetDecoder(IoSession session);1247086812;@param session_@return the charset decoder for this IoSession;private CharsetDecoder charsetDecoder(IoSession session) {_        _        CharsetDecoder decoder = (CharsetDecoder)session.getAttribute(CHARSET_DECODER)__        if (decoder == null) {_            decoder = config.getCharset().newDecoder()__            session.setAttribute(CHARSET_DECODER, decoder)__        }_        return decoder__    };param,session,return,the,charset,decoder,for,this,io,session;private,charset,decoder,charset,decoder,io,session,session,charset,decoder,decoder,charset,decoder,session,get,attribute,if,decoder,null,decoder,config,get,charset,new,decoder,session,set,attribute,decoder,return,decoder
