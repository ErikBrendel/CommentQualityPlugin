# id;timestamp;commentText;codeText;commentWords;codeWords
SObjectTree -> public SObjectTree();1481712856;Create new SObject tree with the default {@link ReferenceGenerator}.;public SObjectTree() {_        this(new Counter())__    };create,new,sobject,tree,with,the,default,link,reference,generator;public,sobject,tree,this,new,counter
SObjectTree -> public SObjectTree();1483627190;Create new SObject tree with the default {@link ReferenceGenerator}.;public SObjectTree() {_        this(new Counter())__    };create,new,sobject,tree,with,the,default,link,reference,generator;public,sobject,tree,this,new,counter
SObjectTree -> public SObjectTree();1508001881;Create new SObject tree with the default {@link ReferenceGenerator}.;public SObjectTree() {_        this(new Counter())__    };create,new,sobject,tree,with,the,default,link,reference,generator;public,sobject,tree,this,new,counter
SObjectTree -> public int size();1481712856;Returns the number of elements in the tree.__@return number of elements in the tree;public int size() {_        return records.stream().mapToInt(r -> r.size()).sum()__    };returns,the,number,of,elements,in,the,tree,return,number,of,elements,in,the,tree;public,int,size,return,records,stream,map,to,int,r,r,size,sum
SObjectTree -> public int size();1483627190;Returns the number of elements in the tree.__@return number of elements in the tree;public int size() {_        return records.stream().mapToInt(r -> r.size()).sum()__    };returns,the,number,of,elements,in,the,tree,return,number,of,elements,in,the,tree;public,int,size,return,records,stream,map,to,int,r,r,size,sum
SObjectTree -> public int size();1508001881;Returns the number of elements in the tree.__@return number of elements in the tree;public int size() {_        return records.stream().mapToInt(r -> r.size()).sum()__    };returns,the,number,of,elements,in,the,tree,return,number,of,elements,in,the,tree;public,int,size,return,records,stream,map,to,int,r,r,size,sum
SObjectTree -> public Stream<AbstractSObjectBase> allObjects();1481712856;Returns a stream of all objects in the tree.__@return;public Stream<AbstractSObjectBase> allObjects() {_        return records.stream().flatMap(r -> Stream.concat(Stream.of(r.getObject()), r.getChildren()))__    };returns,a,stream,of,all,objects,in,the,tree,return;public,stream,abstract,sobject,base,all,objects,return,records,stream,flat,map,r,stream,concat,stream,of,r,get,object,r,get,children
SObjectTree -> public Stream<AbstractSObjectBase> allObjects();1483627190;Returns a stream of all objects in the tree.__@return;public Stream<AbstractSObjectBase> allObjects() {_        return records.stream().flatMap(r -> Stream.concat(Stream.of(r.getObject()), r.getChildren()))__    };returns,a,stream,of,all,objects,in,the,tree,return;public,stream,abstract,sobject,base,all,objects,return,records,stream,flat,map,r,stream,concat,stream,of,r,get,object,r,get,children
SObjectTree -> public Stream<AbstractSObjectBase> allObjects();1508001881;Returns a stream of all objects in the tree.__@return;public Stream<AbstractSObjectBase> allObjects() {_        return records.stream().flatMap(r -> Stream.concat(Stream.of(r.getObject()), r.getChildren()))__    };returns,a,stream,of,all,objects,in,the,tree,return;public,stream,abstract,sobject,base,all,objects,return,records,stream,flat,map,r,stream,concat,stream,of,r,get,object,r,get,children
SObjectTree -> @JsonIgnore     public String getObjectType();1481712856;Returns the type of the objects in the root of the tree.__@return object type;@JsonIgnore_    public String getObjectType() {_        return objectType__    };returns,the,type,of,the,objects,in,the,root,of,the,tree,return,object,type;json,ignore,public,string,get,object,type,return,object,type
SObjectTree -> @JsonIgnore     public String getObjectType();1483627190;Returns the type of the objects in the root of the tree.__@return object type;@JsonIgnore_    public String getObjectType() {_        return objectType__    };returns,the,type,of,the,objects,in,the,root,of,the,tree,return,object,type;json,ignore,public,string,get,object,type,return,object,type
SObjectTree -> @JsonIgnore     public String getObjectType();1508001881;Returns the type of the objects in the root of the tree.__@return object type;@JsonIgnore_    public String getObjectType() {_        return objectType__    };returns,the,type,of,the,objects,in,the,root,of,the,tree,return,object,type;json,ignore,public,string,get,object,type,return,object,type
SObjectTree -> public SObjectTree(final ReferenceGenerator referenceGenerator);1481712856;Create new SObject tree with custom {@link ReferenceGenerator}.;public SObjectTree(final ReferenceGenerator referenceGenerator) {_        this.referenceGenerator = requireNonNull(referenceGenerator,_            "You must specify the ReferenceGenerator implementation")__    };create,new,sobject,tree,with,custom,link,reference,generator;public,sobject,tree,final,reference,generator,reference,generator,this,reference,generator,require,non,null,reference,generator,you,must,specify,the,reference,generator,implementation
SObjectTree -> public SObjectTree(final ReferenceGenerator referenceGenerator);1483627190;Create new SObject tree with custom {@link ReferenceGenerator}.;public SObjectTree(final ReferenceGenerator referenceGenerator) {_        this.referenceGenerator = requireNonNull(referenceGenerator,_            "You must specify the ReferenceGenerator implementation")__    };create,new,sobject,tree,with,custom,link,reference,generator;public,sobject,tree,final,reference,generator,reference,generator,this,reference,generator,require,non,null,reference,generator,you,must,specify,the,reference,generator,implementation
SObjectTree -> public SObjectTree(final ReferenceGenerator referenceGenerator);1508001881;Create new SObject tree with custom {@link ReferenceGenerator}.;public SObjectTree(final ReferenceGenerator referenceGenerator) {_        this.referenceGenerator = requireNonNull(referenceGenerator,_            "You must specify the ReferenceGenerator implementation")__    };create,new,sobject,tree,with,custom,link,reference,generator;public,sobject,tree,final,reference,generator,reference,generator,this,reference,generator,require,non,null,reference,generator,you,must,specify,the,reference,generator,implementation
SObjectTree -> public Stream<SObjectNode> allNodes();1481712856;Returns a stream of all nodes in the tree.__@return;public Stream<SObjectNode> allNodes() {_        return records.stream().flatMap(r -> Stream.concat(Stream.of(r), r.getChildNodes()))__    };returns,a,stream,of,all,nodes,in,the,tree,return;public,stream,sobject,node,all,nodes,return,records,stream,flat,map,r,stream,concat,stream,of,r,r,get,child,nodes
SObjectTree -> public Stream<SObjectNode> allNodes();1483627190;Returns a stream of all nodes in the tree.__@return;public Stream<SObjectNode> allNodes() {_        return records.stream().flatMap(r -> Stream.concat(Stream.of(r), r.getChildNodes()))__    };returns,a,stream,of,all,nodes,in,the,tree,return;public,stream,sobject,node,all,nodes,return,records,stream,flat,map,r,stream,concat,stream,of,r,r,get,child,nodes
SObjectTree -> public Stream<SObjectNode> allNodes();1508001881;Returns a stream of all nodes in the tree.__@return;public Stream<SObjectNode> allNodes() {_        return records.stream().flatMap(r -> Stream.concat(Stream.of(r), r.getChildNodes()))__    };returns,a,stream,of,all,nodes,in,the,tree,return;public,stream,sobject,node,all,nodes,return,records,stream,flat,map,r,stream,concat,stream,of,r,r,get,child,nodes
SObjectTree -> public void setErrorFor(final String referenceId, final List<RestError> errors);1481712856;Sets errors for the given reference. Used when processing the response of API invocation.__@param referenceId_reference identifier_@param errors_list of {@link RestError};public void setErrorFor(final String referenceId, final List<RestError> errors) {_        for (final SObjectNode node : records) {_            if (setErrorFor(node, referenceId, errors)) {_                break__            }_        }_    };sets,errors,for,the,given,reference,used,when,processing,the,response,of,api,invocation,param,reference,id,reference,identifier,param,errors,list,of,link,rest,error;public,void,set,error,for,final,string,reference,id,final,list,rest,error,errors,for,final,sobject,node,node,records,if,set,error,for,node,reference,id,errors,break
SObjectTree -> public void setErrorFor(final String referenceId, final List<RestError> errors);1483627190;Sets errors for the given reference. Used when processing the response of API invocation.__@param referenceId_reference identifier_@param errors_list of {@link RestError};public void setErrorFor(final String referenceId, final List<RestError> errors) {_        for (final SObjectNode node : records) {_            if (setErrorFor(node, referenceId, errors)) {_                return__            }_        }_    };sets,errors,for,the,given,reference,used,when,processing,the,response,of,api,invocation,param,reference,id,reference,identifier,param,errors,list,of,link,rest,error;public,void,set,error,for,final,string,reference,id,final,list,rest,error,errors,for,final,sobject,node,node,records,if,set,error,for,node,reference,id,errors,return
SObjectTree -> public void setErrorFor(final String referenceId, final List<RestError> errors);1508001881;Sets errors for the given reference. Used when processing the response of API invocation.__@param referenceId_reference identifier_@param errors_list of {@link RestError};public void setErrorFor(final String referenceId, final List<RestError> errors) {_        for (final SObjectNode node : records) {_            if (setErrorFor(node, referenceId, errors)) {_                return__            }_        }_    };sets,errors,for,the,given,reference,used,when,processing,the,response,of,api,invocation,param,reference,id,reference,identifier,param,errors,list,of,link,rest,error;public,void,set,error,for,final,string,reference,id,final,list,rest,error,errors,for,final,sobject,node,node,records,if,set,error,for,node,reference,id,errors,return
SObjectTree -> public SObjectNode addObject(final AbstractSObjectBase object);1481712856;Add SObject at the root of the tree.__@param object_SObject to add_@return {@link SObjectNode} for the given SObject;public SObjectNode addObject(final AbstractSObjectBase object) {_        ObjectHelper.notNull(object, "object")___        return addNode(new SObjectNode(this, object))__    };add,sobject,at,the,root,of,the,tree,param,object,sobject,to,add,return,link,sobject,node,for,the,given,sobject;public,sobject,node,add,object,final,abstract,sobject,base,object,object,helper,not,null,object,object,return,add,node,new,sobject,node,this,object
SObjectTree -> public SObjectNode addObject(final AbstractSObjectBase object);1483627190;Add SObject at the root of the tree.__@param object_SObject to add_@return {@link SObjectNode} for the given SObject;public SObjectNode addObject(final AbstractSObjectBase object) {_        ObjectHelper.notNull(object, "object")___        return addNode(new SObjectNode(this, object))__    };add,sobject,at,the,root,of,the,tree,param,object,sobject,to,add,return,link,sobject,node,for,the,given,sobject;public,sobject,node,add,object,final,abstract,sobject,base,object,object,helper,not,null,object,object,return,add,node,new,sobject,node,this,object
SObjectTree -> public SObjectNode addObject(final AbstractSObjectBase object);1508001881;Add SObject at the root of the tree.__@param object_SObject to add_@return {@link SObjectNode} for the given SObject;public SObjectNode addObject(final AbstractSObjectBase object) {_        ObjectHelper.notNull(object, "object")___        return addNode(new SObjectNode(this, object))__    };add,sobject,at,the,root,of,the,tree,param,object,sobject,to,add,return,link,sobject,node,for,the,given,sobject;public,sobject,node,add,object,final,abstract,sobject,base,object,object,helper,not,null,object,object,return,add,node,new,sobject,node,this,object
SObjectTree -> public void setIdFor(final String referenceId, final String id);1481712856;Sets identifier of SObject for the given reference. Used when processing the response of API invocation.__@param referenceId_reference identifier_@param id_SObject identifier;public void setIdFor(final String referenceId, final String id) {_        for (final SObjectNode node : records) {_            if (setIdFor(node, referenceId, id)) {_                break__            }_        }_    };sets,identifier,of,sobject,for,the,given,reference,used,when,processing,the,response,of,api,invocation,param,reference,id,reference,identifier,param,id,sobject,identifier;public,void,set,id,for,final,string,reference,id,final,string,id,for,final,sobject,node,node,records,if,set,id,for,node,reference,id,id,break
SObjectTree -> public void setIdFor(final String referenceId, final String id);1483627190;Sets identifier of SObject for the given reference. Used when processing the response of API invocation.__@param referenceId_reference identifier_@param id_SObject identifier;public void setIdFor(final String referenceId, final String id) {_        for (final SObjectNode node : records) {_            if (setIdFor(node, referenceId, id)) {_                return__            }_        }_    };sets,identifier,of,sobject,for,the,given,reference,used,when,processing,the,response,of,api,invocation,param,reference,id,reference,identifier,param,id,sobject,identifier;public,void,set,id,for,final,string,reference,id,final,string,id,for,final,sobject,node,node,records,if,set,id,for,node,reference,id,id,return
SObjectTree -> public void setIdFor(final String referenceId, final String id);1508001881;Sets identifier of SObject for the given reference. Used when processing the response of API invocation.__@param referenceId_reference identifier_@param id_SObject identifier;public void setIdFor(final String referenceId, final String id) {_        for (final SObjectNode node : records) {_            if (setIdFor(node, referenceId, id)) {_                return__            }_        }_    };sets,identifier,of,sobject,for,the,given,reference,used,when,processing,the,response,of,api,invocation,param,reference,id,reference,identifier,param,id,sobject,identifier;public,void,set,id,for,final,string,reference,id,final,string,id,for,final,sobject,node,node,records,if,set,id,for,node,reference,id,id,return
