# id;timestamp;commentText;codeText;commentWords;codeWords
ApprovalRequest -> public ApprovalRequest applyTemplate(final ApprovalRequest template);1479976305;Creates new {@link ApprovalRequest} by combining values from the given template with the values currently_present. If the value is not present and the template has the corresponding value, then the template value is_set. The net result is that all set values of an {@link ApprovalRequest} are preserved, while the values set on_template are used for undefined ( <code>null</code>) values.__@param template_template to apply_@return newly created object with applied template;public ApprovalRequest applyTemplate(final ApprovalRequest template) {_        if (template == null) {_            return this__        }__        final ApprovalRequest withTemplateValues = new ApprovalRequest()___        for (final Field field : FieldHolder.INSTANCE.fields) {_            try {_                final Object currentValue = field.get(this)___                _                _                if (currentValue == null) {_                    final Object templateValue = field.get(template)___                    if (templateValue != null) {_                        field.set(withTemplateValues, templateValue)__                    }_                } else {_                    field.set(withTemplateValues, currentValue)__                }_            } catch (IllegalArgumentException | IllegalAccessException e) {_                throw new IllegalStateException("Unable to apply values from template", e)__            }_        }__        return withTemplateValues__    };creates,new,link,approval,request,by,combining,values,from,the,given,template,with,the,values,currently,present,if,the,value,is,not,present,and,the,template,has,the,corresponding,value,then,the,template,value,is,set,the,net,result,is,that,all,set,values,of,an,link,approval,request,are,preserved,while,the,values,set,on,template,are,used,for,undefined,code,null,code,values,param,template,template,to,apply,return,newly,created,object,with,applied,template;public,approval,request,apply,template,final,approval,request,template,if,template,null,return,this,final,approval,request,with,template,values,new,approval,request,for,final,field,field,field,holder,instance,fields,try,final,object,current,value,field,get,this,if,current,value,null,final,object,template,value,field,get,template,if,template,value,null,field,set,with,template,values,template,value,else,field,set,with,template,values,current,value,catch,illegal,argument,exception,illegal,access,exception,e,throw,new,illegal,state,exception,unable,to,apply,values,from,template,e,return,with,template,values
ApprovalRequest -> public ApprovalRequest applyTemplate(final ApprovalRequest template);1480003968;Creates new {@link ApprovalRequest} by combining values from the given template with the values currently_present. If the value is not present and the template has the corresponding value, then the template value is_set. The net result is that all set values of an {@link ApprovalRequest} are preserved, while the values set on_template are used for undefined ( <code>null</code>) values.__@param template_template to apply_@return newly created object with applied template;public ApprovalRequest applyTemplate(final ApprovalRequest template) {_        if (template == null) {_            return this__        }__        final ApprovalRequest withTemplateValues = new ApprovalRequest()___        for (final Field field : FieldHolder.INSTANCE.fields) {_            try {_                final Object currentValue = field.get(this)___                _                _                if (currentValue == null) {_                    final Object templateValue = field.get(template)___                    if (templateValue != null) {_                        field.set(withTemplateValues, templateValue)__                    }_                } else {_                    field.set(withTemplateValues, currentValue)__                }_            } catch (IllegalArgumentException | IllegalAccessException e) {_                throw new IllegalStateException("Unable to apply values from template", e)__            }_        }__        return withTemplateValues__    };creates,new,link,approval,request,by,combining,values,from,the,given,template,with,the,values,currently,present,if,the,value,is,not,present,and,the,template,has,the,corresponding,value,then,the,template,value,is,set,the,net,result,is,that,all,set,values,of,an,link,approval,request,are,preserved,while,the,values,set,on,template,are,used,for,undefined,code,null,code,values,param,template,template,to,apply,return,newly,created,object,with,applied,template;public,approval,request,apply,template,final,approval,request,template,if,template,null,return,this,final,approval,request,with,template,values,new,approval,request,for,final,field,field,field,holder,instance,fields,try,final,object,current,value,field,get,this,if,current,value,null,final,object,template,value,field,get,template,if,template,value,null,field,set,with,template,values,template,value,else,field,set,with,template,values,current,value,catch,illegal,argument,exception,illegal,access,exception,e,throw,new,illegal,state,exception,unable,to,apply,values,from,template,e,return,with,template,values
ApprovalRequest -> public ApprovalRequest applyTemplate(final ApprovalRequest template);1547240981;Creates new {@link ApprovalRequest} by combining values from the given template with the values currently_present. If the value is not present and the template has the corresponding value, then the template value is_set. The net result is that all set values of an {@link ApprovalRequest} are preserved, while the values set on_template are used for undefined ( <code>null</code>) values.__@param template_template to apply_@return newly created object with applied template;public ApprovalRequest applyTemplate(final ApprovalRequest template) {_        if (template == null) {_            return this__        }__        final ApprovalRequest withTemplateValues = new ApprovalRequest()___        for (final Field field : FieldHolder.INSTANCE.fields) {_            try {_                final Object currentValue = field.get(this)___                _                _                if (currentValue == null) {_                    final Object templateValue = field.get(template)___                    if (templateValue != null) {_                        field.set(withTemplateValues, templateValue)__                    }_                } else {_                    field.set(withTemplateValues, currentValue)__                }_            } catch (IllegalArgumentException | IllegalAccessException e) {_                throw new IllegalStateException("Unable to apply values from template", e)__            }_        }__        return withTemplateValues__    };creates,new,link,approval,request,by,combining,values,from,the,given,template,with,the,values,currently,present,if,the,value,is,not,present,and,the,template,has,the,corresponding,value,then,the,template,value,is,set,the,net,result,is,that,all,set,values,of,an,link,approval,request,are,preserved,while,the,values,set,on,template,are,used,for,undefined,code,null,code,values,param,template,template,to,apply,return,newly,created,object,with,applied,template;public,approval,request,apply,template,final,approval,request,template,if,template,null,return,this,final,approval,request,with,template,values,new,approval,request,for,final,field,field,field,holder,instance,fields,try,final,object,current,value,field,get,this,if,current,value,null,final,object,template,value,field,get,template,if,template,value,null,field,set,with,template,values,template,value,else,field,set,with,template,values,current,value,catch,illegal,argument,exception,illegal,access,exception,e,throw,new,illegal,state,exception,unable,to,apply,values,from,template,e,return,with,template,values
