commented;modifiers;parameterAmount;loc;comment;code
false;public;1;4;;@Override public boolean canConvert(final Class type) {     return true. }
false;public;3;20;;@Override public void marshal(final Object source, final HierarchicalStreamWriter writer, final MarshallingContext context) {     if (source instanceof Map) {         @SuppressWarnings("unchecked")         final Map<String, String> map = (Map) source.         for (final Map.Entry<String, String> e : map.entrySet()) {             writer.startNode(e.getKey()).             writer.setValue(e.getValue()).             writer.endNode().         }     } else {         final Class<?> clazz = source.getClass().         writer.startNode(clazz.getSimpleName()).         final Converter converter = converterLookup.lookupConverterForType(source.getClass()).         converter.marshal(source, writer, context).         writer.endNode().     } }
false;public;2;4;;@Override public Object unmarshal(final HierarchicalStreamReader reader, final UnmarshallingContext context) {     return null. }
