commented;modifiers;parameterAmount;loc;comment;code
false;public;3;12;;@Override public void marshal(Object o, HierarchicalStreamWriter writer, MarshallingContext context) {     Class<?> aClass = o.getClass().     try {         Method getterMethod = aClass.getMethod("value").         writer.setValue((String) getterMethod.invoke(o)).     } catch (Exception e) {         throw new ConversionException(String.format("Exception writing pick list value %s of type %s: %s", o, o.getClass().getName(), e.getMessage()), e).     } }
false;public;2;14;;@Override public Object unmarshal(HierarchicalStreamReader reader, UnmarshallingContext context) {     String value = reader.getValue().     Class<?> requiredType = context.getRequiredType().     try {         Method factoryMethod = requiredType.getMethod(FACTORY_METHOD, String.class).         // use factory method to create object         return factoryMethod.invoke(null, value).     } catch (Exception e) {         throw new ConversionException(String.format("Exception reading pick list value %s of type %s: %s", value, context.getRequiredType().getName(), e.getMessage()), e).     } }
false;public;1;9;;@Override @SuppressWarnings("unchecked") public boolean canConvert(Class aClass) {     try {         return Enum.class.isAssignableFrom(aClass) && aClass.getMethod(FACTORY_METHOD, String.class) != null.     } catch (NoSuchMethodException e) {         return false.     } }
