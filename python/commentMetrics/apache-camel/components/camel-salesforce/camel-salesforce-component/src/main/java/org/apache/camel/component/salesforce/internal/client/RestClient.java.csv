# id;timestamp;commentText;codeText;commentWords;codeWords
RestClient -> void query(String soqlQuery, ResponseCallback callback)_;1370445151;Executes the specified SOQL query.__@param soqlQuery SOQL query_@param callback {@link ResponseCallback} to handle response or exception;void query(String soqlQuery, ResponseCallback callback)_;executes,the,specified,soql,query,param,soql,query,soql,query,param,callback,link,response,callback,to,handle,response,or,exception;void,query,string,soql,query,response,callback,callback
RestClient -> void query(String soqlQuery, ResponseCallback callback)_;1370445151;Executes the specified SOQL query.__@param soqlQuery SOQL query_@param callback  {@link ResponseCallback} to handle response or exception;void query(String soqlQuery, ResponseCallback callback)_;executes,the,specified,soql,query,param,soql,query,soql,query,param,callback,link,response,callback,to,handle,response,or,exception;void,query,string,soql,query,response,callback,callback
RestClient -> void query(String soqlQuery, ResponseCallback callback)_;1377589935;Executes the specified SOQL query.__@param soqlQuery SOQL query_@param callback  {@link ResponseCallback} to handle response or exception;void query(String soqlQuery, ResponseCallback callback)_;executes,the,specified,soql,query,param,soql,query,soql,query,param,callback,link,response,callback,to,handle,response,or,exception;void,query,string,soql,query,response,callback,callback
RestClient -> void query(String soqlQuery, ResponseCallback callback)_;1424727517;Executes the specified SOQL query.__@param soqlQuery SOQL query_@param callback  {@link ResponseCallback} to handle response or exception;void query(String soqlQuery, ResponseCallback callback)_;executes,the,specified,soql,query,param,soql,query,soql,query,param,callback,link,response,callback,to,handle,response,or,exception;void,query,string,soql,query,response,callback,callback
RestClient -> void query(String soqlQuery, ResponseCallback callback)_;1466750028;Executes the specified SOQL query.__@param soqlQuery SOQL query_@param callback  {@link ResponseCallback} to handle response or exception;void query(String soqlQuery, ResponseCallback callback)_;executes,the,specified,soql,query,param,soql,query,soql,query,param,callback,link,response,callback,to,handle,response,or,exception;void,query,string,soql,query,response,callback,callback
RestClient -> void query(String soqlQuery, ResponseCallback callback)_;1479805669;Executes the specified SOQL query.__@param soqlQuery SOQL query_@param callback  {@link ResponseCallback} to handle response or exception;void query(String soqlQuery, ResponseCallback callback)_;executes,the,specified,soql,query,param,soql,query,soql,query,param,callback,link,response,callback,to,handle,response,or,exception;void,query,string,soql,query,response,callback,callback
RestClient -> void query(String soqlQuery, ResponseCallback callback)_;1479890641;Executes the specified SOQL query.__@param soqlQuery SOQL query_@param callback  {@link ResponseCallback} to handle response or exception;void query(String soqlQuery, ResponseCallback callback)_;executes,the,specified,soql,query,param,soql,query,soql,query,param,callback,link,response,callback,to,handle,response,or,exception;void,query,string,soql,query,response,callback,callback
RestClient -> void query(String soqlQuery, ResponseCallback callback)_;1479976305;Executes the specified SOQL query.__@param soqlQuery SOQL query_@param callback  {@link ResponseCallback} to handle response or exception;void query(String soqlQuery, ResponseCallback callback)_;executes,the,specified,soql,query,param,soql,query,soql,query,param,callback,link,response,callback,to,handle,response,or,exception;void,query,string,soql,query,response,callback,callback
RestClient -> void query(String soqlQuery, ResponseCallback callback)_;1480003968;Executes the specified SOQL query.__@param soqlQuery SOQL query_@param callback  {@link ResponseCallback} to handle response or exception;void query(String soqlQuery, ResponseCallback callback)_;executes,the,specified,soql,query,param,soql,query,soql,query,param,callback,link,response,callback,to,handle,response,or,exception;void,query,string,soql,query,response,callback,callback
RestClient -> void search(String soslQuery, ResponseCallback callback)_;1370445151;Executes the specified SOSL search.__@param soslQuery SOSL query_@param callback {@link ResponseCallback} to handle response or exception;void search(String soslQuery, ResponseCallback callback)_;executes,the,specified,sosl,search,param,sosl,query,sosl,query,param,callback,link,response,callback,to,handle,response,or,exception;void,search,string,sosl,query,response,callback,callback
RestClient -> void search(String soslQuery, ResponseCallback callback)_;1370445151;Executes the specified SOSL search.__@param soslQuery SOSL query_@param callback  {@link ResponseCallback} to handle response or exception;void search(String soslQuery, ResponseCallback callback)_;executes,the,specified,sosl,search,param,sosl,query,sosl,query,param,callback,link,response,callback,to,handle,response,or,exception;void,search,string,sosl,query,response,callback,callback
RestClient -> void search(String soslQuery, ResponseCallback callback)_;1377589935;Executes the specified SOSL search.__@param soslQuery SOSL query_@param callback  {@link ResponseCallback} to handle response or exception;void search(String soslQuery, ResponseCallback callback)_;executes,the,specified,sosl,search,param,sosl,query,sosl,query,param,callback,link,response,callback,to,handle,response,or,exception;void,search,string,sosl,query,response,callback,callback
RestClient -> void search(String soslQuery, ResponseCallback callback)_;1424727517;Executes the specified SOSL search.__@param soslQuery SOSL query_@param callback  {@link ResponseCallback} to handle response or exception;void search(String soslQuery, ResponseCallback callback)_;executes,the,specified,sosl,search,param,sosl,query,sosl,query,param,callback,link,response,callback,to,handle,response,or,exception;void,search,string,sosl,query,response,callback,callback
RestClient -> void search(String soslQuery, ResponseCallback callback)_;1466750028;Executes the specified SOSL search.__@param soslQuery SOSL query_@param callback  {@link ResponseCallback} to handle response or exception;void search(String soslQuery, ResponseCallback callback)_;executes,the,specified,sosl,search,param,sosl,query,sosl,query,param,callback,link,response,callback,to,handle,response,or,exception;void,search,string,sosl,query,response,callback,callback
RestClient -> void search(String soslQuery, ResponseCallback callback)_;1479805669;Executes the specified SOSL search.__@param soslQuery SOSL query_@param callback  {@link ResponseCallback} to handle response or exception;void search(String soslQuery, ResponseCallback callback)_;executes,the,specified,sosl,search,param,sosl,query,sosl,query,param,callback,link,response,callback,to,handle,response,or,exception;void,search,string,sosl,query,response,callback,callback
RestClient -> void search(String soslQuery, ResponseCallback callback)_;1479890641;Executes the specified SOSL search.__@param soslQuery SOSL query_@param callback  {@link ResponseCallback} to handle response or exception;void search(String soslQuery, ResponseCallback callback)_;executes,the,specified,sosl,search,param,sosl,query,sosl,query,param,callback,link,response,callback,to,handle,response,or,exception;void,search,string,sosl,query,response,callback,callback
RestClient -> void search(String soslQuery, ResponseCallback callback)_;1479976305;Executes the specified SOSL search.__@param soslQuery SOSL query_@param callback  {@link ResponseCallback} to handle response or exception;void search(String soslQuery, ResponseCallback callback)_;executes,the,specified,sosl,search,param,sosl,query,sosl,query,param,callback,link,response,callback,to,handle,response,or,exception;void,search,string,sosl,query,response,callback,callback
RestClient -> void search(String soslQuery, ResponseCallback callback)_;1480003968;Executes the specified SOSL search.__@param soslQuery SOSL query_@param callback  {@link ResponseCallback} to handle response or exception;void search(String soslQuery, ResponseCallback callback)_;executes,the,specified,sosl,search,param,sosl,query,sosl,query,param,callback,link,response,callback,to,handle,response,or,exception;void,search,string,sosl,query,response,callback,callback
RestClient -> void getBlobField(String sObjectName, String id, String blobFieldName, ResponseCallback callback)_;1370445151;Retrieves the specified blob field from an individual record.;void getBlobField(String sObjectName, String id, String blobFieldName, ResponseCallback callback)_;retrieves,the,specified,blob,field,from,an,individual,record;void,get,blob,field,string,s,object,name,string,id,string,blob,field,name,response,callback,callback
RestClient -> void getBlobField(String sObjectName, String id, String blobFieldName, ResponseCallback callback)_;1370445151;Retrieves the specified blob field from an individual record.;void getBlobField(String sObjectName, String id, String blobFieldName, ResponseCallback callback)_;retrieves,the,specified,blob,field,from,an,individual,record;void,get,blob,field,string,s,object,name,string,id,string,blob,field,name,response,callback,callback
RestClient -> void getBlobField(String sObjectName, String id, String blobFieldName, ResponseCallback callback)_;1377589935;Retrieves the specified blob field from an individual record.;void getBlobField(String sObjectName, String id, String blobFieldName, ResponseCallback callback)_;retrieves,the,specified,blob,field,from,an,individual,record;void,get,blob,field,string,s,object,name,string,id,string,blob,field,name,response,callback,callback
RestClient -> void getBlobField(String sObjectName, String id, String blobFieldName, ResponseCallback callback)_;1424727517;Retrieves the specified blob field from an individual record.;void getBlobField(String sObjectName, String id, String blobFieldName, ResponseCallback callback)_;retrieves,the,specified,blob,field,from,an,individual,record;void,get,blob,field,string,s,object,name,string,id,string,blob,field,name,response,callback,callback
RestClient -> void getBlobField(String sObjectName, String id, String blobFieldName, ResponseCallback callback)_;1466750028;Retrieves the specified blob field from an individual record.;void getBlobField(String sObjectName, String id, String blobFieldName, ResponseCallback callback)_;retrieves,the,specified,blob,field,from,an,individual,record;void,get,blob,field,string,s,object,name,string,id,string,blob,field,name,response,callback,callback
RestClient -> void getBlobField(String sObjectName, String id, String blobFieldName, ResponseCallback callback)_;1479805669;Retrieves the specified blob field from an individual record.;void getBlobField(String sObjectName, String id, String blobFieldName, ResponseCallback callback)_;retrieves,the,specified,blob,field,from,an,individual,record;void,get,blob,field,string,s,object,name,string,id,string,blob,field,name,response,callback,callback
RestClient -> void getBlobField(String sObjectName, String id, String blobFieldName, ResponseCallback callback)_;1479890641;Retrieves the specified blob field from an individual record.;void getBlobField(String sObjectName, String id, String blobFieldName, ResponseCallback callback)_;retrieves,the,specified,blob,field,from,an,individual,record;void,get,blob,field,string,s,object,name,string,id,string,blob,field,name,response,callback,callback
RestClient -> void getBlobField(String sObjectName, String id, String blobFieldName, ResponseCallback callback)_;1479976305;Retrieves the specified blob field from an individual record.;void getBlobField(String sObjectName, String id, String blobFieldName, ResponseCallback callback)_;retrieves,the,specified,blob,field,from,an,individual,record;void,get,blob,field,string,s,object,name,string,id,string,blob,field,name,response,callback,callback
RestClient -> void getBlobField(String sObjectName, String id, String blobFieldName, ResponseCallback callback)_;1480003968;Retrieves the specified blob field from an individual record.;void getBlobField(String sObjectName, String id, String blobFieldName, ResponseCallback callback)_;retrieves,the,specified,blob,field,from,an,individual,record;void,get,blob,field,string,s,object,name,string,id,string,blob,field,name,response,callback,callback
RestClient -> void getSObjectWithId(String sObjectName, String fieldName, String fieldValue, ResponseCallback callback)_;1370445151;Retrieves a record for the specified external ID.__@param sObjectName specified object name_@param fieldName external field name_@param fieldValue external field value_@param callback {@link ResponseCallback} to handle response or exception;void getSObjectWithId(String sObjectName, String fieldName, String fieldValue, ResponseCallback callback)_;retrieves,a,record,for,the,specified,external,id,param,s,object,name,specified,object,name,param,field,name,external,field,name,param,field,value,external,field,value,param,callback,link,response,callback,to,handle,response,or,exception;void,get,sobject,with,id,string,s,object,name,string,field,name,string,field,value,response,callback,callback
RestClient -> void getSObjectWithId(String sObjectName, String fieldName, String fieldValue, ResponseCallback callback)_;1370445151;Retrieves a record for the specified external ID.__@param sObjectName specified object name_@param fieldName   external field name_@param fieldValue  external field value_@param callback    {@link ResponseCallback} to handle response or exception;void getSObjectWithId(String sObjectName, String fieldName, String fieldValue, ResponseCallback callback)_;retrieves,a,record,for,the,specified,external,id,param,s,object,name,specified,object,name,param,field,name,external,field,name,param,field,value,external,field,value,param,callback,link,response,callback,to,handle,response,or,exception;void,get,sobject,with,id,string,s,object,name,string,field,name,string,field,value,response,callback,callback
RestClient -> void getSObjectWithId(String sObjectName, String fieldName, String fieldValue, ResponseCallback callback)_;1377589935;Retrieves a record for the specified external ID.__@param sObjectName specified object name_@param fieldName   external field name_@param fieldValue  external field value_@param callback    {@link ResponseCallback} to handle response or exception;void getSObjectWithId(String sObjectName, String fieldName, String fieldValue, ResponseCallback callback)_;retrieves,a,record,for,the,specified,external,id,param,s,object,name,specified,object,name,param,field,name,external,field,name,param,field,value,external,field,value,param,callback,link,response,callback,to,handle,response,or,exception;void,get,sobject,with,id,string,s,object,name,string,field,name,string,field,value,response,callback,callback
RestClient -> void getSObjectWithId(String sObjectName, String fieldName, String fieldValue, ResponseCallback callback)_;1424727517;Retrieves a record for the specified external ID.__@param sObjectName specified object name_@param fieldName   external field name_@param fieldValue  external field value_@param callback    {@link ResponseCallback} to handle response or exception;void getSObjectWithId(String sObjectName, String fieldName, String fieldValue, ResponseCallback callback)_;retrieves,a,record,for,the,specified,external,id,param,s,object,name,specified,object,name,param,field,name,external,field,name,param,field,value,external,field,value,param,callback,link,response,callback,to,handle,response,or,exception;void,get,sobject,with,id,string,s,object,name,string,field,name,string,field,value,response,callback,callback
RestClient -> void getSObjectWithId(String sObjectName, String fieldName, String fieldValue, ResponseCallback callback)_;1466750028;Retrieves a record for the specified external ID.__@param sObjectName specified object name_@param fieldName   external field name_@param fieldValue  external field value_@param callback    {@link ResponseCallback} to handle response or exception;void getSObjectWithId(String sObjectName, String fieldName, String fieldValue, ResponseCallback callback)_;retrieves,a,record,for,the,specified,external,id,param,s,object,name,specified,object,name,param,field,name,external,field,name,param,field,value,external,field,value,param,callback,link,response,callback,to,handle,response,or,exception;void,get,sobject,with,id,string,s,object,name,string,field,name,string,field,value,response,callback,callback
RestClient -> void getSObjectWithId(String sObjectName, String fieldName, String fieldValue, ResponseCallback callback)_;1479805669;Retrieves a record for the specified external ID.__@param sObjectName specified object name_@param fieldName   external field name_@param fieldValue  external field value_@param callback    {@link ResponseCallback} to handle response or exception;void getSObjectWithId(String sObjectName, String fieldName, String fieldValue, ResponseCallback callback)_;retrieves,a,record,for,the,specified,external,id,param,s,object,name,specified,object,name,param,field,name,external,field,name,param,field,value,external,field,value,param,callback,link,response,callback,to,handle,response,or,exception;void,get,sobject,with,id,string,s,object,name,string,field,name,string,field,value,response,callback,callback
RestClient -> void getSObjectWithId(String sObjectName, String fieldName, String fieldValue, ResponseCallback callback)_;1479890641;Retrieves a record for the specified external ID.__@param sObjectName specified object name_@param fieldName   external field name_@param fieldValue  external field value_@param callback    {@link ResponseCallback} to handle response or exception;void getSObjectWithId(String sObjectName, String fieldName, String fieldValue, ResponseCallback callback)_;retrieves,a,record,for,the,specified,external,id,param,s,object,name,specified,object,name,param,field,name,external,field,name,param,field,value,external,field,value,param,callback,link,response,callback,to,handle,response,or,exception;void,get,sobject,with,id,string,s,object,name,string,field,name,string,field,value,response,callback,callback
RestClient -> void getSObjectWithId(String sObjectName, String fieldName, String fieldValue, ResponseCallback callback)_;1479976305;Retrieves a record for the specified external ID.__@param sObjectName specified object name_@param fieldName   external field name_@param fieldValue  external field value_@param callback    {@link ResponseCallback} to handle response or exception;void getSObjectWithId(String sObjectName, String fieldName, String fieldValue, ResponseCallback callback)_;retrieves,a,record,for,the,specified,external,id,param,s,object,name,specified,object,name,param,field,name,external,field,name,param,field,value,external,field,value,param,callback,link,response,callback,to,handle,response,or,exception;void,get,sobject,with,id,string,s,object,name,string,field,name,string,field,value,response,callback,callback
RestClient -> void getSObjectWithId(String sObjectName, String fieldName, String fieldValue, ResponseCallback callback)_;1480003968;Retrieves a record for the specified external ID.__@param sObjectName specified object name_@param fieldName   external field name_@param fieldValue  external field value_@param callback    {@link ResponseCallback} to handle response or exception;void getSObjectWithId(String sObjectName, String fieldName, String fieldValue, ResponseCallback callback)_;retrieves,a,record,for,the,specified,external,id,param,s,object,name,specified,object,name,param,field,name,external,field,name,param,field,value,external,field,value,param,callback,link,response,callback,to,handle,response,or,exception;void,get,sobject,with,id,string,s,object,name,string,field,name,string,field,value,response,callback,callback
RestClient -> void getGlobalObjects(ResponseCallback callback)_;1370445151;Lists the available objects and their metadata for your organization's data.__@param callback {@link ResponseCallback} to handle response or exception;void getGlobalObjects(ResponseCallback callback)_;lists,the,available,objects,and,their,metadata,for,your,organization,s,data,param,callback,link,response,callback,to,handle,response,or,exception;void,get,global,objects,response,callback,callback
RestClient -> void getGlobalObjects(ResponseCallback callback)_;1370445151;Lists the available objects and their metadata for your organization's data.__@param callback {@link ResponseCallback} to handle response or exception;void getGlobalObjects(ResponseCallback callback)_;lists,the,available,objects,and,their,metadata,for,your,organization,s,data,param,callback,link,response,callback,to,handle,response,or,exception;void,get,global,objects,response,callback,callback
RestClient -> void getGlobalObjects(ResponseCallback callback)_;1377589935;Lists the available objects and their metadata for your organization's data.__@param callback {@link ResponseCallback} to handle response or exception;void getGlobalObjects(ResponseCallback callback)_;lists,the,available,objects,and,their,metadata,for,your,organization,s,data,param,callback,link,response,callback,to,handle,response,or,exception;void,get,global,objects,response,callback,callback
RestClient -> void getGlobalObjects(ResponseCallback callback)_;1424727517;Lists the available objects and their metadata for your organization's data.__@param callback {@link ResponseCallback} to handle response or exception;void getGlobalObjects(ResponseCallback callback)_;lists,the,available,objects,and,their,metadata,for,your,organization,s,data,param,callback,link,response,callback,to,handle,response,or,exception;void,get,global,objects,response,callback,callback
RestClient -> void getGlobalObjects(ResponseCallback callback)_;1466750028;Lists the available objects and their metadata for your organization's data.__@param callback {@link ResponseCallback} to handle response or exception;void getGlobalObjects(ResponseCallback callback)_;lists,the,available,objects,and,their,metadata,for,your,organization,s,data,param,callback,link,response,callback,to,handle,response,or,exception;void,get,global,objects,response,callback,callback
RestClient -> void getGlobalObjects(ResponseCallback callback)_;1479805669;Lists the available objects and their metadata for your organization's data.__@param callback {@link ResponseCallback} to handle response or exception;void getGlobalObjects(ResponseCallback callback)_;lists,the,available,objects,and,their,metadata,for,your,organization,s,data,param,callback,link,response,callback,to,handle,response,or,exception;void,get,global,objects,response,callback,callback
RestClient -> void getGlobalObjects(ResponseCallback callback)_;1479890641;Lists the available objects and their metadata for your organization's data.__@param callback {@link ResponseCallback} to handle response or exception;void getGlobalObjects(ResponseCallback callback)_;lists,the,available,objects,and,their,metadata,for,your,organization,s,data,param,callback,link,response,callback,to,handle,response,or,exception;void,get,global,objects,response,callback,callback
RestClient -> void getGlobalObjects(ResponseCallback callback)_;1479976305;Lists the available objects and their metadata for your organization's data.__@param callback {@link ResponseCallback} to handle response or exception;void getGlobalObjects(ResponseCallback callback)_;lists,the,available,objects,and,their,metadata,for,your,organization,s,data,param,callback,link,response,callback,to,handle,response,or,exception;void,get,global,objects,response,callback,callback
RestClient -> void getGlobalObjects(ResponseCallback callback)_;1480003968;Lists the available objects and their metadata for your organization's data.__@param callback {@link ResponseCallback} to handle response or exception;void getGlobalObjects(ResponseCallback callback)_;lists,the,available,objects,and,their,metadata,for,your,organization,s,data,param,callback,link,response,callback,to,handle,response,or,exception;void,get,global,objects,response,callback,callback
RestClient -> void deleteSObjectWithId(String sObjectName,                              String fieldName, String fieldValue, ResponseCallback callback)_;1370445151;Deletes a record based on the value of a specified external ID field.__@param sObjectName specified object name_@param fieldName external field name_@param fieldValue external field value_@param callback {@link ResponseCallback} to handle response or exception;void deleteSObjectWithId(String sObjectName,_                             String fieldName, String fieldValue, ResponseCallback callback)_;deletes,a,record,based,on,the,value,of,a,specified,external,id,field,param,s,object,name,specified,object,name,param,field,name,external,field,name,param,field,value,external,field,value,param,callback,link,response,callback,to,handle,response,or,exception;void,delete,sobject,with,id,string,s,object,name,string,field,name,string,field,value,response,callback,callback
RestClient -> void deleteSObjectWithId(String sObjectName,                              String fieldName, String fieldValue, ResponseCallback callback)_;1370445151;Deletes a record based on the value of a specified external ID field.__@param sObjectName specified object name_@param fieldName   external field name_@param fieldValue  external field value_@param callback    {@link ResponseCallback} to handle response or exception;void deleteSObjectWithId(String sObjectName,_                             String fieldName, String fieldValue, ResponseCallback callback)_;deletes,a,record,based,on,the,value,of,a,specified,external,id,field,param,s,object,name,specified,object,name,param,field,name,external,field,name,param,field,value,external,field,value,param,callback,link,response,callback,to,handle,response,or,exception;void,delete,sobject,with,id,string,s,object,name,string,field,name,string,field,value,response,callback,callback
RestClient -> void deleteSObjectWithId(String sObjectName,                              String fieldName, String fieldValue, ResponseCallback callback)_;1377589935;Deletes a record based on the value of a specified external ID field.__@param sObjectName specified object name_@param fieldName   external field name_@param fieldValue  external field value_@param callback    {@link ResponseCallback} to handle response or exception;void deleteSObjectWithId(String sObjectName,_                             String fieldName, String fieldValue, ResponseCallback callback)_;deletes,a,record,based,on,the,value,of,a,specified,external,id,field,param,s,object,name,specified,object,name,param,field,name,external,field,name,param,field,value,external,field,value,param,callback,link,response,callback,to,handle,response,or,exception;void,delete,sobject,with,id,string,s,object,name,string,field,name,string,field,value,response,callback,callback
RestClient -> void deleteSObjectWithId(String sObjectName,                              String fieldName, String fieldValue, ResponseCallback callback)_;1424727517;Deletes a record based on the value of a specified external ID field.__@param sObjectName specified object name_@param fieldName   external field name_@param fieldValue  external field value_@param callback    {@link ResponseCallback} to handle response or exception;void deleteSObjectWithId(String sObjectName,_                             String fieldName, String fieldValue, ResponseCallback callback)_;deletes,a,record,based,on,the,value,of,a,specified,external,id,field,param,s,object,name,specified,object,name,param,field,name,external,field,name,param,field,value,external,field,value,param,callback,link,response,callback,to,handle,response,or,exception;void,delete,sobject,with,id,string,s,object,name,string,field,name,string,field,value,response,callback,callback
RestClient -> void deleteSObjectWithId(String sObjectName,                              String fieldName, String fieldValue, ResponseCallback callback)_;1466750028;Deletes a record based on the value of a specified external ID field.__@param sObjectName specified object name_@param fieldName   external field name_@param fieldValue  external field value_@param callback    {@link ResponseCallback} to handle response or exception;void deleteSObjectWithId(String sObjectName,_                             String fieldName, String fieldValue, ResponseCallback callback)_;deletes,a,record,based,on,the,value,of,a,specified,external,id,field,param,s,object,name,specified,object,name,param,field,name,external,field,name,param,field,value,external,field,value,param,callback,link,response,callback,to,handle,response,or,exception;void,delete,sobject,with,id,string,s,object,name,string,field,name,string,field,value,response,callback,callback
RestClient -> void deleteSObjectWithId(String sObjectName,                              String fieldName, String fieldValue, ResponseCallback callback)_;1479805669;Deletes a record based on the value of a specified external ID field.__@param sObjectName specified object name_@param fieldName   external field name_@param fieldValue  external field value_@param callback    {@link ResponseCallback} to handle response or exception;void deleteSObjectWithId(String sObjectName,_                             String fieldName, String fieldValue, ResponseCallback callback)_;deletes,a,record,based,on,the,value,of,a,specified,external,id,field,param,s,object,name,specified,object,name,param,field,name,external,field,name,param,field,value,external,field,value,param,callback,link,response,callback,to,handle,response,or,exception;void,delete,sobject,with,id,string,s,object,name,string,field,name,string,field,value,response,callback,callback
RestClient -> void deleteSObjectWithId(String sObjectName,                              String fieldName, String fieldValue, ResponseCallback callback)_;1479890641;Deletes a record based on the value of a specified external ID field.__@param sObjectName specified object name_@param fieldName   external field name_@param fieldValue  external field value_@param callback    {@link ResponseCallback} to handle response or exception;void deleteSObjectWithId(String sObjectName,_                             String fieldName, String fieldValue, ResponseCallback callback)_;deletes,a,record,based,on,the,value,of,a,specified,external,id,field,param,s,object,name,specified,object,name,param,field,name,external,field,name,param,field,value,external,field,value,param,callback,link,response,callback,to,handle,response,or,exception;void,delete,sobject,with,id,string,s,object,name,string,field,name,string,field,value,response,callback,callback
RestClient -> void deleteSObjectWithId(String sObjectName,                              String fieldName, String fieldValue, ResponseCallback callback)_;1479976305;Deletes a record based on the value of a specified external ID field.__@param sObjectName specified object name_@param fieldName   external field name_@param fieldValue  external field value_@param callback    {@link ResponseCallback} to handle response or exception;void deleteSObjectWithId(String sObjectName,_                             String fieldName, String fieldValue, ResponseCallback callback)_;deletes,a,record,based,on,the,value,of,a,specified,external,id,field,param,s,object,name,specified,object,name,param,field,name,external,field,name,param,field,value,external,field,value,param,callback,link,response,callback,to,handle,response,or,exception;void,delete,sobject,with,id,string,s,object,name,string,field,name,string,field,value,response,callback,callback
RestClient -> void deleteSObjectWithId(String sObjectName,                              String fieldName, String fieldValue, ResponseCallback callback)_;1480003968;Deletes a record based on the value of a specified external ID field.__@param sObjectName specified object name_@param fieldName   external field name_@param fieldValue  external field value_@param callback    {@link ResponseCallback} to handle response or exception;void deleteSObjectWithId(String sObjectName,_                             String fieldName, String fieldValue, ResponseCallback callback)_;deletes,a,record,based,on,the,value,of,a,specified,external,id,field,param,s,object,name,specified,object,name,param,field,name,external,field,name,param,field,value,external,field,value,param,callback,link,response,callback,to,handle,response,or,exception;void,delete,sobject,with,id,string,s,object,name,string,field,name,string,field,value,response,callback,callback
RestClient -> void getVersions(ResponseCallback callback)_;1370445151;Lists summary information about each API version currently available,_including the version, label, and a link to each version's root.__@param callback {@link ResponseCallback} to handle response or exception;void getVersions(ResponseCallback callback)_;lists,summary,information,about,each,api,version,currently,available,including,the,version,label,and,a,link,to,each,version,s,root,param,callback,link,response,callback,to,handle,response,or,exception;void,get,versions,response,callback,callback
RestClient -> void getVersions(ResponseCallback callback)_;1370445151;Lists summary information about each API version currently available,_including the version, label, and a link to each version's root.__@param callback {@link ResponseCallback} to handle response or exception;void getVersions(ResponseCallback callback)_;lists,summary,information,about,each,api,version,currently,available,including,the,version,label,and,a,link,to,each,version,s,root,param,callback,link,response,callback,to,handle,response,or,exception;void,get,versions,response,callback,callback
RestClient -> void getVersions(ResponseCallback callback)_;1377589935;Lists summary information about each API version currently available,_including the version, label, and a link to each version's root.__@param callback {@link ResponseCallback} to handle response or exception;void getVersions(ResponseCallback callback)_;lists,summary,information,about,each,api,version,currently,available,including,the,version,label,and,a,link,to,each,version,s,root,param,callback,link,response,callback,to,handle,response,or,exception;void,get,versions,response,callback,callback
RestClient -> void getVersions(ResponseCallback callback)_;1424727517;Lists summary information about each API version currently available,_including the version, label, and a link to each version's root.__@param callback {@link ResponseCallback} to handle response or exception;void getVersions(ResponseCallback callback)_;lists,summary,information,about,each,api,version,currently,available,including,the,version,label,and,a,link,to,each,version,s,root,param,callback,link,response,callback,to,handle,response,or,exception;void,get,versions,response,callback,callback
RestClient -> void getVersions(ResponseCallback callback)_;1466750028;Lists summary information about each API version currently available,_including the version, label, and a link to each version's root.__@param callback {@link ResponseCallback} to handle response or exception;void getVersions(ResponseCallback callback)_;lists,summary,information,about,each,api,version,currently,available,including,the,version,label,and,a,link,to,each,version,s,root,param,callback,link,response,callback,to,handle,response,or,exception;void,get,versions,response,callback,callback
RestClient -> void getVersions(ResponseCallback callback)_;1479805669;Lists summary information about each API version currently available,_including the version, label, and a link to each version's root.__@param callback {@link ResponseCallback} to handle response or exception;void getVersions(ResponseCallback callback)_;lists,summary,information,about,each,api,version,currently,available,including,the,version,label,and,a,link,to,each,version,s,root,param,callback,link,response,callback,to,handle,response,or,exception;void,get,versions,response,callback,callback
RestClient -> void getVersions(ResponseCallback callback)_;1479890641;Lists summary information about each API version currently available,_including the version, label, and a link to each version's root.__@param callback {@link ResponseCallback} to handle response or exception;void getVersions(ResponseCallback callback)_;lists,summary,information,about,each,api,version,currently,available,including,the,version,label,and,a,link,to,each,version,s,root,param,callback,link,response,callback,to,handle,response,or,exception;void,get,versions,response,callback,callback
RestClient -> void getVersions(ResponseCallback callback)_;1479976305;Lists summary information about each API version currently available,_including the version, label, and a link to each version's root.__@param callback {@link ResponseCallback} to handle response or exception;void getVersions(ResponseCallback callback)_;lists,summary,information,about,each,api,version,currently,available,including,the,version,label,and,a,link,to,each,version,s,root,param,callback,link,response,callback,to,handle,response,or,exception;void,get,versions,response,callback,callback
RestClient -> void getVersions(ResponseCallback callback)_;1480003968;Lists summary information about each API version currently available,_including the version, label, and a link to each version's root.__@param callback {@link ResponseCallback} to handle response or exception;void getVersions(ResponseCallback callback)_;lists,summary,information,about,each,api,version,currently,available,including,the,version,label,and,a,link,to,each,version,s,root,param,callback,link,response,callback,to,handle,response,or,exception;void,get,versions,response,callback,callback
RestClient -> void approval(InputStream request, ResponseCallback callback)_;1479976305;Submits, approves or rejects particular record.__@param callback_{@link ResponseCallback} to handle response or exception;void approval(InputStream request, ResponseCallback callback)_;submits,approves,or,rejects,particular,record,param,callback,link,response,callback,to,handle,response,or,exception;void,approval,input,stream,request,response,callback,callback
RestClient -> void approval(InputStream request, ResponseCallback callback)_;1480003968;Submits, approves or rejects particular record.__@param callback_{@link ResponseCallback} to handle response or exception;void approval(InputStream request, ResponseCallback callback)_;submits,approves,or,rejects,particular,record,param,callback,link,response,callback,to,handle,response,or,exception;void,approval,input,stream,request,response,callback,callback
RestClient -> void deleteSObject(String sObjectName, String id, ResponseCallback callback)_;1370445151;Deletes a record for the specified object ID.__@param sObjectName specified object name_@param id          object id_@param callback {@link ResponseCallback} to handle response or exception;void deleteSObject(String sObjectName, String id, ResponseCallback callback)_;deletes,a,record,for,the,specified,object,id,param,s,object,name,specified,object,name,param,id,object,id,param,callback,link,response,callback,to,handle,response,or,exception;void,delete,sobject,string,s,object,name,string,id,response,callback,callback
RestClient -> void deleteSObject(String sObjectName, String id, ResponseCallback callback)_;1370445151;Deletes a record for the specified object ID.__@param sObjectName specified object name_@param id          object id_@param callback    {@link ResponseCallback} to handle response or exception;void deleteSObject(String sObjectName, String id, ResponseCallback callback)_;deletes,a,record,for,the,specified,object,id,param,s,object,name,specified,object,name,param,id,object,id,param,callback,link,response,callback,to,handle,response,or,exception;void,delete,sobject,string,s,object,name,string,id,response,callback,callback
RestClient -> void deleteSObject(String sObjectName, String id, ResponseCallback callback)_;1377589935;Deletes a record for the specified object ID.__@param sObjectName specified object name_@param id          object id_@param callback    {@link ResponseCallback} to handle response or exception;void deleteSObject(String sObjectName, String id, ResponseCallback callback)_;deletes,a,record,for,the,specified,object,id,param,s,object,name,specified,object,name,param,id,object,id,param,callback,link,response,callback,to,handle,response,or,exception;void,delete,sobject,string,s,object,name,string,id,response,callback,callback
RestClient -> void deleteSObject(String sObjectName, String id, ResponseCallback callback)_;1424727517;Deletes a record for the specified object ID.__@param sObjectName specified object name_@param id          object id_@param callback    {@link ResponseCallback} to handle response or exception;void deleteSObject(String sObjectName, String id, ResponseCallback callback)_;deletes,a,record,for,the,specified,object,id,param,s,object,name,specified,object,name,param,id,object,id,param,callback,link,response,callback,to,handle,response,or,exception;void,delete,sobject,string,s,object,name,string,id,response,callback,callback
RestClient -> void deleteSObject(String sObjectName, String id, ResponseCallback callback)_;1466750028;Deletes a record for the specified object ID.__@param sObjectName specified object name_@param id          object id_@param callback    {@link ResponseCallback} to handle response or exception;void deleteSObject(String sObjectName, String id, ResponseCallback callback)_;deletes,a,record,for,the,specified,object,id,param,s,object,name,specified,object,name,param,id,object,id,param,callback,link,response,callback,to,handle,response,or,exception;void,delete,sobject,string,s,object,name,string,id,response,callback,callback
RestClient -> void deleteSObject(String sObjectName, String id, ResponseCallback callback)_;1479805669;Deletes a record for the specified object ID.__@param sObjectName specified object name_@param id          object id_@param callback    {@link ResponseCallback} to handle response or exception;void deleteSObject(String sObjectName, String id, ResponseCallback callback)_;deletes,a,record,for,the,specified,object,id,param,s,object,name,specified,object,name,param,id,object,id,param,callback,link,response,callback,to,handle,response,or,exception;void,delete,sobject,string,s,object,name,string,id,response,callback,callback
RestClient -> void deleteSObject(String sObjectName, String id, ResponseCallback callback)_;1479890641;Deletes a record for the specified object ID.__@param sObjectName specified object name_@param id          object id_@param callback    {@link ResponseCallback} to handle response or exception;void deleteSObject(String sObjectName, String id, ResponseCallback callback)_;deletes,a,record,for,the,specified,object,id,param,s,object,name,specified,object,name,param,id,object,id,param,callback,link,response,callback,to,handle,response,or,exception;void,delete,sobject,string,s,object,name,string,id,response,callback,callback
RestClient -> void deleteSObject(String sObjectName, String id, ResponseCallback callback)_;1479976305;Deletes a record for the specified object ID.__@param sObjectName specified object name_@param id          object id_@param callback    {@link ResponseCallback} to handle response or exception;void deleteSObject(String sObjectName, String id, ResponseCallback callback)_;deletes,a,record,for,the,specified,object,id,param,s,object,name,specified,object,name,param,id,object,id,param,callback,link,response,callback,to,handle,response,or,exception;void,delete,sobject,string,s,object,name,string,id,response,callback,callback
RestClient -> void deleteSObject(String sObjectName, String id, ResponseCallback callback)_;1480003968;Deletes a record for the specified object ID.__@param sObjectName specified object name_@param id          object id_@param callback    {@link ResponseCallback} to handle response or exception;void deleteSObject(String sObjectName, String id, ResponseCallback callback)_;deletes,a,record,for,the,specified,object,id,param,s,object,name,specified,object,name,param,id,object,id,param,callback,link,response,callback,to,handle,response,or,exception;void,delete,sobject,string,s,object,name,string,id,response,callback,callback
RestClient -> void updateSObject(String sObjectName, String id, InputStream sObject, ResponseCallback callback)_;1370445151;Updates a record for the specified object ID.__@param sObjectName specified object name_@param id          object id_@param sObject     request entity_@param callback {@link ResponseCallback} to handle response or exception;void updateSObject(String sObjectName, String id, InputStream sObject, ResponseCallback callback)_;updates,a,record,for,the,specified,object,id,param,s,object,name,specified,object,name,param,id,object,id,param,s,object,request,entity,param,callback,link,response,callback,to,handle,response,or,exception;void,update,sobject,string,s,object,name,string,id,input,stream,s,object,response,callback,callback
RestClient -> void updateSObject(String sObjectName, String id, InputStream sObject, ResponseCallback callback)_;1370445151;Updates a record for the specified object ID.__@param sObjectName specified object name_@param id          object id_@param sObject     request entity_@param callback    {@link ResponseCallback} to handle response or exception;void updateSObject(String sObjectName, String id, InputStream sObject, ResponseCallback callback)_;updates,a,record,for,the,specified,object,id,param,s,object,name,specified,object,name,param,id,object,id,param,s,object,request,entity,param,callback,link,response,callback,to,handle,response,or,exception;void,update,sobject,string,s,object,name,string,id,input,stream,s,object,response,callback,callback
RestClient -> void updateSObject(String sObjectName, String id, InputStream sObject, ResponseCallback callback)_;1377589935;Updates a record for the specified object ID.__@param sObjectName specified object name_@param id          object id_@param sObject     request entity_@param callback    {@link ResponseCallback} to handle response or exception;void updateSObject(String sObjectName, String id, InputStream sObject, ResponseCallback callback)_;updates,a,record,for,the,specified,object,id,param,s,object,name,specified,object,name,param,id,object,id,param,s,object,request,entity,param,callback,link,response,callback,to,handle,response,or,exception;void,update,sobject,string,s,object,name,string,id,input,stream,s,object,response,callback,callback
RestClient -> void updateSObject(String sObjectName, String id, InputStream sObject, ResponseCallback callback)_;1424727517;Updates a record for the specified object ID.__@param sObjectName specified object name_@param id          object id_@param sObject     request entity_@param callback    {@link ResponseCallback} to handle response or exception;void updateSObject(String sObjectName, String id, InputStream sObject, ResponseCallback callback)_;updates,a,record,for,the,specified,object,id,param,s,object,name,specified,object,name,param,id,object,id,param,s,object,request,entity,param,callback,link,response,callback,to,handle,response,or,exception;void,update,sobject,string,s,object,name,string,id,input,stream,s,object,response,callback,callback
RestClient -> void updateSObject(String sObjectName, String id, InputStream sObject, ResponseCallback callback)_;1466750028;Updates a record for the specified object ID.__@param sObjectName specified object name_@param id          object id_@param sObject     request entity_@param callback    {@link ResponseCallback} to handle response or exception;void updateSObject(String sObjectName, String id, InputStream sObject, ResponseCallback callback)_;updates,a,record,for,the,specified,object,id,param,s,object,name,specified,object,name,param,id,object,id,param,s,object,request,entity,param,callback,link,response,callback,to,handle,response,or,exception;void,update,sobject,string,s,object,name,string,id,input,stream,s,object,response,callback,callback
RestClient -> void updateSObject(String sObjectName, String id, InputStream sObject, ResponseCallback callback)_;1479805669;Updates a record for the specified object ID.__@param sObjectName specified object name_@param id          object id_@param sObject     request entity_@param callback    {@link ResponseCallback} to handle response or exception;void updateSObject(String sObjectName, String id, InputStream sObject, ResponseCallback callback)_;updates,a,record,for,the,specified,object,id,param,s,object,name,specified,object,name,param,id,object,id,param,s,object,request,entity,param,callback,link,response,callback,to,handle,response,or,exception;void,update,sobject,string,s,object,name,string,id,input,stream,s,object,response,callback,callback
RestClient -> void updateSObject(String sObjectName, String id, InputStream sObject, ResponseCallback callback)_;1479890641;Updates a record for the specified object ID.__@param sObjectName specified object name_@param id          object id_@param sObject     request entity_@param callback    {@link ResponseCallback} to handle response or exception;void updateSObject(String sObjectName, String id, InputStream sObject, ResponseCallback callback)_;updates,a,record,for,the,specified,object,id,param,s,object,name,specified,object,name,param,id,object,id,param,s,object,request,entity,param,callback,link,response,callback,to,handle,response,or,exception;void,update,sobject,string,s,object,name,string,id,input,stream,s,object,response,callback,callback
RestClient -> void updateSObject(String sObjectName, String id, InputStream sObject, ResponseCallback callback)_;1479976305;Updates a record for the specified object ID.__@param sObjectName specified object name_@param id          object id_@param sObject     request entity_@param callback    {@link ResponseCallback} to handle response or exception;void updateSObject(String sObjectName, String id, InputStream sObject, ResponseCallback callback)_;updates,a,record,for,the,specified,object,id,param,s,object,name,specified,object,name,param,id,object,id,param,s,object,request,entity,param,callback,link,response,callback,to,handle,response,or,exception;void,update,sobject,string,s,object,name,string,id,input,stream,s,object,response,callback,callback
RestClient -> void updateSObject(String sObjectName, String id, InputStream sObject, ResponseCallback callback)_;1480003968;Updates a record for the specified object ID.__@param sObjectName specified object name_@param id          object id_@param sObject     request entity_@param callback    {@link ResponseCallback} to handle response or exception;void updateSObject(String sObjectName, String id, InputStream sObject, ResponseCallback callback)_;updates,a,record,for,the,specified,object,id,param,s,object,name,specified,object,name,param,id,object,id,param,s,object,request,entity,param,callback,link,response,callback,to,handle,response,or,exception;void,update,sobject,string,s,object,name,string,id,input,stream,s,object,response,callback,callback
RestClient -> void apexCall(String httpMethod, String apexUrl, Map<String, Object> queryParams, InputStream requestDto,                   ResponseCallback callback)_;1424727517;Executes a user defined APEX REST API call.__@param httpMethod    HTTP method to execute._@param apexUrl       APEX api url._@param queryParams   optional query parameters for GET methods, may be empty._@param requestDto    optional input DTO for POST, etc. may be null._@param callback      {@link ResponseCallback} to handle response or exception;void apexCall(String httpMethod, String apexUrl, Map<String, Object> queryParams, InputStream requestDto,_                  ResponseCallback callback)_;executes,a,user,defined,apex,rest,api,call,param,http,method,http,method,to,execute,param,apex,url,apex,api,url,param,query,params,optional,query,parameters,for,get,methods,may,be,empty,param,request,dto,optional,input,dto,for,post,etc,may,be,null,param,callback,link,response,callback,to,handle,response,or,exception;void,apex,call,string,http,method,string,apex,url,map,string,object,query,params,input,stream,request,dto,response,callback,callback
RestClient -> void apexCall(String httpMethod, String apexUrl, Map<String, Object> queryParams, InputStream requestDto,                   ResponseCallback callback)_;1466750028;Executes a user defined APEX REST API call.__@param httpMethod    HTTP method to execute._@param apexUrl       APEX api url._@param queryParams   optional query parameters for GET methods, may be empty._@param requestDto    optional input DTO for POST, etc. may be null._@param callback      {@link ResponseCallback} to handle response or exception;void apexCall(String httpMethod, String apexUrl, Map<String, Object> queryParams, InputStream requestDto,_                  ResponseCallback callback)_;executes,a,user,defined,apex,rest,api,call,param,http,method,http,method,to,execute,param,apex,url,apex,api,url,param,query,params,optional,query,parameters,for,get,methods,may,be,empty,param,request,dto,optional,input,dto,for,post,etc,may,be,null,param,callback,link,response,callback,to,handle,response,or,exception;void,apex,call,string,http,method,string,apex,url,map,string,object,query,params,input,stream,request,dto,response,callback,callback
RestClient -> void apexCall(String httpMethod, String apexUrl, Map<String, Object> queryParams, InputStream requestDto,                   ResponseCallback callback)_;1479805669;Executes a user defined APEX REST API call.__@param httpMethod    HTTP method to execute._@param apexUrl       APEX api url._@param queryParams   optional query parameters for GET methods, may be empty._@param requestDto    optional input DTO for POST, etc. may be null._@param callback      {@link ResponseCallback} to handle response or exception;void apexCall(String httpMethod, String apexUrl, Map<String, Object> queryParams, InputStream requestDto,_                  ResponseCallback callback)_;executes,a,user,defined,apex,rest,api,call,param,http,method,http,method,to,execute,param,apex,url,apex,api,url,param,query,params,optional,query,parameters,for,get,methods,may,be,empty,param,request,dto,optional,input,dto,for,post,etc,may,be,null,param,callback,link,response,callback,to,handle,response,or,exception;void,apex,call,string,http,method,string,apex,url,map,string,object,query,params,input,stream,request,dto,response,callback,callback
RestClient -> void apexCall(String httpMethod, String apexUrl, Map<String, Object> queryParams, InputStream requestDto,                   ResponseCallback callback)_;1479890641;Executes a user defined APEX REST API call.__@param httpMethod    HTTP method to execute._@param apexUrl       APEX api url._@param queryParams   optional query parameters for GET methods, may be empty._@param requestDto    optional input DTO for POST, etc. may be null._@param callback      {@link ResponseCallback} to handle response or exception;void apexCall(String httpMethod, String apexUrl, Map<String, Object> queryParams, InputStream requestDto,_                  ResponseCallback callback)_;executes,a,user,defined,apex,rest,api,call,param,http,method,http,method,to,execute,param,apex,url,apex,api,url,param,query,params,optional,query,parameters,for,get,methods,may,be,empty,param,request,dto,optional,input,dto,for,post,etc,may,be,null,param,callback,link,response,callback,to,handle,response,or,exception;void,apex,call,string,http,method,string,apex,url,map,string,object,query,params,input,stream,request,dto,response,callback,callback
RestClient -> void apexCall(String httpMethod, String apexUrl, Map<String, Object> queryParams, InputStream requestDto,                   ResponseCallback callback)_;1479976305;Executes a user defined APEX REST API call.__@param httpMethod    HTTP method to execute._@param apexUrl       APEX api url._@param queryParams   optional query parameters for GET methods, may be empty._@param requestDto    optional input DTO for POST, etc. may be null._@param callback      {@link ResponseCallback} to handle response or exception;void apexCall(String httpMethod, String apexUrl, Map<String, Object> queryParams, InputStream requestDto,_                  ResponseCallback callback)_;executes,a,user,defined,apex,rest,api,call,param,http,method,http,method,to,execute,param,apex,url,apex,api,url,param,query,params,optional,query,parameters,for,get,methods,may,be,empty,param,request,dto,optional,input,dto,for,post,etc,may,be,null,param,callback,link,response,callback,to,handle,response,or,exception;void,apex,call,string,http,method,string,apex,url,map,string,object,query,params,input,stream,request,dto,response,callback,callback
RestClient -> void apexCall(String httpMethod, String apexUrl, Map<String, Object> queryParams, InputStream requestDto,                   ResponseCallback callback)_;1480003968;Executes a user defined APEX REST API call.__@param httpMethod    HTTP method to execute._@param apexUrl       APEX api url._@param queryParams   optional query parameters for GET methods, may be empty._@param requestDto    optional input DTO for POST, etc. may be null._@param callback      {@link ResponseCallback} to handle response or exception;void apexCall(String httpMethod, String apexUrl, Map<String, Object> queryParams, InputStream requestDto,_                  ResponseCallback callback)_;executes,a,user,defined,apex,rest,api,call,param,http,method,http,method,to,execute,param,apex,url,apex,api,url,param,query,params,optional,query,parameters,for,get,methods,may,be,empty,param,request,dto,optional,input,dto,for,post,etc,may,be,null,param,callback,link,response,callback,to,handle,response,or,exception;void,apex,call,string,http,method,string,apex,url,map,string,object,query,params,input,stream,request,dto,response,callback,callback
RestClient -> void getBasicInfo(String sObjectName, ResponseCallback callback)_;1370445151;Describes the individual metadata for the specified object.__@param sObjectName specified object name_@param callback {@link ResponseCallback} to handle response or exception;void getBasicInfo(String sObjectName, ResponseCallback callback)_;describes,the,individual,metadata,for,the,specified,object,param,s,object,name,specified,object,name,param,callback,link,response,callback,to,handle,response,or,exception;void,get,basic,info,string,s,object,name,response,callback,callback
RestClient -> void getBasicInfo(String sObjectName, ResponseCallback callback)_;1370445151;Describes the individual metadata for the specified object.__@param sObjectName specified object name_@param callback    {@link ResponseCallback} to handle response or exception;void getBasicInfo(String sObjectName, ResponseCallback callback)_;describes,the,individual,metadata,for,the,specified,object,param,s,object,name,specified,object,name,param,callback,link,response,callback,to,handle,response,or,exception;void,get,basic,info,string,s,object,name,response,callback,callback
RestClient -> void getBasicInfo(String sObjectName, ResponseCallback callback)_;1377589935;Describes the individual metadata for the specified object.__@param sObjectName specified object name_@param callback    {@link ResponseCallback} to handle response or exception;void getBasicInfo(String sObjectName, ResponseCallback callback)_;describes,the,individual,metadata,for,the,specified,object,param,s,object,name,specified,object,name,param,callback,link,response,callback,to,handle,response,or,exception;void,get,basic,info,string,s,object,name,response,callback,callback
RestClient -> void getBasicInfo(String sObjectName, ResponseCallback callback)_;1424727517;Describes the individual metadata for the specified object.__@param sObjectName specified object name_@param callback    {@link ResponseCallback} to handle response or exception;void getBasicInfo(String sObjectName, ResponseCallback callback)_;describes,the,individual,metadata,for,the,specified,object,param,s,object,name,specified,object,name,param,callback,link,response,callback,to,handle,response,or,exception;void,get,basic,info,string,s,object,name,response,callback,callback
RestClient -> void getBasicInfo(String sObjectName, ResponseCallback callback)_;1466750028;Describes the individual metadata for the specified object.__@param sObjectName specified object name_@param callback    {@link ResponseCallback} to handle response or exception;void getBasicInfo(String sObjectName, ResponseCallback callback)_;describes,the,individual,metadata,for,the,specified,object,param,s,object,name,specified,object,name,param,callback,link,response,callback,to,handle,response,or,exception;void,get,basic,info,string,s,object,name,response,callback,callback
RestClient -> void getBasicInfo(String sObjectName, ResponseCallback callback)_;1479805669;Describes the individual metadata for the specified object.__@param sObjectName specified object name_@param callback    {@link ResponseCallback} to handle response or exception;void getBasicInfo(String sObjectName, ResponseCallback callback)_;describes,the,individual,metadata,for,the,specified,object,param,s,object,name,specified,object,name,param,callback,link,response,callback,to,handle,response,or,exception;void,get,basic,info,string,s,object,name,response,callback,callback
RestClient -> void getBasicInfo(String sObjectName, ResponseCallback callback)_;1479890641;Describes the individual metadata for the specified object.__@param sObjectName specified object name_@param callback    {@link ResponseCallback} to handle response or exception;void getBasicInfo(String sObjectName, ResponseCallback callback)_;describes,the,individual,metadata,for,the,specified,object,param,s,object,name,specified,object,name,param,callback,link,response,callback,to,handle,response,or,exception;void,get,basic,info,string,s,object,name,response,callback,callback
RestClient -> void getBasicInfo(String sObjectName, ResponseCallback callback)_;1479976305;Describes the individual metadata for the specified object.__@param sObjectName specified object name_@param callback    {@link ResponseCallback} to handle response or exception;void getBasicInfo(String sObjectName, ResponseCallback callback)_;describes,the,individual,metadata,for,the,specified,object,param,s,object,name,specified,object,name,param,callback,link,response,callback,to,handle,response,or,exception;void,get,basic,info,string,s,object,name,response,callback,callback
RestClient -> void getBasicInfo(String sObjectName, ResponseCallback callback)_;1480003968;Describes the individual metadata for the specified object.__@param sObjectName specified object name_@param callback    {@link ResponseCallback} to handle response or exception;void getBasicInfo(String sObjectName, ResponseCallback callback)_;describes,the,individual,metadata,for,the,specified,object,param,s,object,name,specified,object,name,param,callback,link,response,callback,to,handle,response,or,exception;void,get,basic,info,string,s,object,name,response,callback,callback
RestClient -> void queryAll(String soqlQuery, ResponseCallback callback)_;1466750028;Executes the specified SOQL query including deleted records.__@param soqlQuery SOQL query_@param callback  {@link ResponseCallback} to handle response or exception;void queryAll(String soqlQuery, ResponseCallback callback)_;executes,the,specified,soql,query,including,deleted,records,param,soql,query,soql,query,param,callback,link,response,callback,to,handle,response,or,exception;void,query,all,string,soql,query,response,callback,callback
RestClient -> void queryAll(String soqlQuery, ResponseCallback callback)_;1479805669;Executes the specified SOQL query including deleted records.__@param soqlQuery SOQL query_@param callback  {@link ResponseCallback} to handle response or exception;void queryAll(String soqlQuery, ResponseCallback callback)_;executes,the,specified,soql,query,including,deleted,records,param,soql,query,soql,query,param,callback,link,response,callback,to,handle,response,or,exception;void,query,all,string,soql,query,response,callback,callback
RestClient -> void queryAll(String soqlQuery, ResponseCallback callback)_;1479890641;Executes the specified SOQL query including deleted records.__@param soqlQuery SOQL query_@param callback  {@link ResponseCallback} to handle response or exception;void queryAll(String soqlQuery, ResponseCallback callback)_;executes,the,specified,soql,query,including,deleted,records,param,soql,query,soql,query,param,callback,link,response,callback,to,handle,response,or,exception;void,query,all,string,soql,query,response,callback,callback
RestClient -> void queryAll(String soqlQuery, ResponseCallback callback)_;1479976305;Executes the specified SOQL query including deleted records.__@param soqlQuery SOQL query_@param callback  {@link ResponseCallback} to handle response or exception;void queryAll(String soqlQuery, ResponseCallback callback)_;executes,the,specified,soql,query,including,deleted,records,param,soql,query,soql,query,param,callback,link,response,callback,to,handle,response,or,exception;void,query,all,string,soql,query,response,callback,callback
RestClient -> void queryAll(String soqlQuery, ResponseCallback callback)_;1480003968;Executes the specified SOQL query including deleted records.__@param soqlQuery SOQL query_@param callback  {@link ResponseCallback} to handle response or exception;void queryAll(String soqlQuery, ResponseCallback callback)_;executes,the,specified,soql,query,including,deleted,records,param,soql,query,soql,query,param,callback,link,response,callback,to,handle,response,or,exception;void,query,all,string,soql,query,response,callback,callback
RestClient -> void createSObject(String sObjectName, InputStream sObject, ResponseCallback callback)_;1370445151;Creates a record for the specified object.__@param sObjectName specified object name_@param sObject     request entity_@param callback {@link ResponseCallback} to handle response or exception;void createSObject(String sObjectName, InputStream sObject, ResponseCallback callback)_;creates,a,record,for,the,specified,object,param,s,object,name,specified,object,name,param,s,object,request,entity,param,callback,link,response,callback,to,handle,response,or,exception;void,create,sobject,string,s,object,name,input,stream,s,object,response,callback,callback
RestClient -> void createSObject(String sObjectName, InputStream sObject, ResponseCallback callback)_;1370445151;Creates a record for the specified object.__@param sObjectName specified object name_@param sObject     request entity_@param callback    {@link ResponseCallback} to handle response or exception;void createSObject(String sObjectName, InputStream sObject, ResponseCallback callback)_;creates,a,record,for,the,specified,object,param,s,object,name,specified,object,name,param,s,object,request,entity,param,callback,link,response,callback,to,handle,response,or,exception;void,create,sobject,string,s,object,name,input,stream,s,object,response,callback,callback
RestClient -> void createSObject(String sObjectName, InputStream sObject, ResponseCallback callback)_;1377589935;Creates a record for the specified object.__@param sObjectName specified object name_@param sObject     request entity_@param callback    {@link ResponseCallback} to handle response or exception;void createSObject(String sObjectName, InputStream sObject, ResponseCallback callback)_;creates,a,record,for,the,specified,object,param,s,object,name,specified,object,name,param,s,object,request,entity,param,callback,link,response,callback,to,handle,response,or,exception;void,create,sobject,string,s,object,name,input,stream,s,object,response,callback,callback
RestClient -> void createSObject(String sObjectName, InputStream sObject, ResponseCallback callback)_;1424727517;Creates a record for the specified object.__@param sObjectName specified object name_@param sObject     request entity_@param callback    {@link ResponseCallback} to handle response or exception;void createSObject(String sObjectName, InputStream sObject, ResponseCallback callback)_;creates,a,record,for,the,specified,object,param,s,object,name,specified,object,name,param,s,object,request,entity,param,callback,link,response,callback,to,handle,response,or,exception;void,create,sobject,string,s,object,name,input,stream,s,object,response,callback,callback
RestClient -> void createSObject(String sObjectName, InputStream sObject, ResponseCallback callback)_;1466750028;Creates a record for the specified object.__@param sObjectName specified object name_@param sObject     request entity_@param callback    {@link ResponseCallback} to handle response or exception;void createSObject(String sObjectName, InputStream sObject, ResponseCallback callback)_;creates,a,record,for,the,specified,object,param,s,object,name,specified,object,name,param,s,object,request,entity,param,callback,link,response,callback,to,handle,response,or,exception;void,create,sobject,string,s,object,name,input,stream,s,object,response,callback,callback
RestClient -> void createSObject(String sObjectName, InputStream sObject, ResponseCallback callback)_;1479805669;Creates a record for the specified object.__@param sObjectName specified object name_@param sObject     request entity_@param callback    {@link ResponseCallback} to handle response or exception;void createSObject(String sObjectName, InputStream sObject, ResponseCallback callback)_;creates,a,record,for,the,specified,object,param,s,object,name,specified,object,name,param,s,object,request,entity,param,callback,link,response,callback,to,handle,response,or,exception;void,create,sobject,string,s,object,name,input,stream,s,object,response,callback,callback
RestClient -> void createSObject(String sObjectName, InputStream sObject, ResponseCallback callback)_;1479890641;Creates a record for the specified object.__@param sObjectName specified object name_@param sObject     request entity_@param callback    {@link ResponseCallback} to handle response or exception;void createSObject(String sObjectName, InputStream sObject, ResponseCallback callback)_;creates,a,record,for,the,specified,object,param,s,object,name,specified,object,name,param,s,object,request,entity,param,callback,link,response,callback,to,handle,response,or,exception;void,create,sobject,string,s,object,name,input,stream,s,object,response,callback,callback
RestClient -> void createSObject(String sObjectName, InputStream sObject, ResponseCallback callback)_;1479976305;Creates a record for the specified object.__@param sObjectName specified object name_@param sObject     request entity_@param callback    {@link ResponseCallback} to handle response or exception;void createSObject(String sObjectName, InputStream sObject, ResponseCallback callback)_;creates,a,record,for,the,specified,object,param,s,object,name,specified,object,name,param,s,object,request,entity,param,callback,link,response,callback,to,handle,response,or,exception;void,create,sobject,string,s,object,name,input,stream,s,object,response,callback,callback
RestClient -> void createSObject(String sObjectName, InputStream sObject, ResponseCallback callback)_;1480003968;Creates a record for the specified object.__@param sObjectName specified object name_@param sObject     request entity_@param callback    {@link ResponseCallback} to handle response or exception;void createSObject(String sObjectName, InputStream sObject, ResponseCallback callback)_;creates,a,record,for,the,specified,object,param,s,object,name,specified,object,name,param,s,object,request,entity,param,callback,link,response,callback,to,handle,response,or,exception;void,create,sobject,string,s,object,name,input,stream,s,object,response,callback,callback
RestClient -> void getResources(ResponseCallback callback)_;1370445151;Lists available resources for the specified API version, including resource name and URI.__@param callback {@link ResponseCallback} to handle response or exception;void getResources(ResponseCallback callback)_;lists,available,resources,for,the,specified,api,version,including,resource,name,and,uri,param,callback,link,response,callback,to,handle,response,or,exception;void,get,resources,response,callback,callback
RestClient -> void getResources(ResponseCallback callback)_;1370445151;Lists available resources for the specified API version, including resource name and URI.__@param callback {@link ResponseCallback} to handle response or exception;void getResources(ResponseCallback callback)_;lists,available,resources,for,the,specified,api,version,including,resource,name,and,uri,param,callback,link,response,callback,to,handle,response,or,exception;void,get,resources,response,callback,callback
RestClient -> void getResources(ResponseCallback callback)_;1377589935;Lists available resources for the specified API version, including resource name and URI.__@param callback {@link ResponseCallback} to handle response or exception;void getResources(ResponseCallback callback)_;lists,available,resources,for,the,specified,api,version,including,resource,name,and,uri,param,callback,link,response,callback,to,handle,response,or,exception;void,get,resources,response,callback,callback
RestClient -> void getResources(ResponseCallback callback)_;1424727517;Lists available resources for the specified API version, including resource name and URI.__@param callback {@link ResponseCallback} to handle response or exception;void getResources(ResponseCallback callback)_;lists,available,resources,for,the,specified,api,version,including,resource,name,and,uri,param,callback,link,response,callback,to,handle,response,or,exception;void,get,resources,response,callback,callback
RestClient -> void getResources(ResponseCallback callback)_;1466750028;Lists available resources for the specified API version, including resource name and URI.__@param callback {@link ResponseCallback} to handle response or exception;void getResources(ResponseCallback callback)_;lists,available,resources,for,the,specified,api,version,including,resource,name,and,uri,param,callback,link,response,callback,to,handle,response,or,exception;void,get,resources,response,callback,callback
RestClient -> void getResources(ResponseCallback callback)_;1479805669;Lists available resources for the specified API version, including resource name and URI.__@param callback {@link ResponseCallback} to handle response or exception;void getResources(ResponseCallback callback)_;lists,available,resources,for,the,specified,api,version,including,resource,name,and,uri,param,callback,link,response,callback,to,handle,response,or,exception;void,get,resources,response,callback,callback
RestClient -> void getResources(ResponseCallback callback)_;1479890641;Lists available resources for the specified API version, including resource name and URI.__@param callback {@link ResponseCallback} to handle response or exception;void getResources(ResponseCallback callback)_;lists,available,resources,for,the,specified,api,version,including,resource,name,and,uri,param,callback,link,response,callback,to,handle,response,or,exception;void,get,resources,response,callback,callback
RestClient -> void getResources(ResponseCallback callback)_;1479976305;Lists available resources for the specified API version, including resource name and URI.__@param callback {@link ResponseCallback} to handle response or exception;void getResources(ResponseCallback callback)_;lists,available,resources,for,the,specified,api,version,including,resource,name,and,uri,param,callback,link,response,callback,to,handle,response,or,exception;void,get,resources,response,callback,callback
RestClient -> void getResources(ResponseCallback callback)_;1480003968;Lists available resources for the specified API version, including resource name and URI.__@param callback {@link ResponseCallback} to handle response or exception;void getResources(ResponseCallback callback)_;lists,available,resources,for,the,specified,api,version,including,resource,name,and,uri,param,callback,link,response,callback,to,handle,response,or,exception;void,get,resources,response,callback,callback
RestClient -> void limits(ResponseCallback responseCallback)_;1479805669;Fetches Organization Limits.__@param responseCallback {@link ResponseCallback} to handle response or exception;void limits(ResponseCallback responseCallback)_;fetches,organization,limits,param,response,callback,link,response,callback,to,handle,response,or,exception;void,limits,response,callback,response,callback
RestClient -> void limits(ResponseCallback responseCallback)_;1479890641;Fetches Organization Limits.__@param responseCallback {@link ResponseCallback} to handle response or exception;void limits(ResponseCallback responseCallback)_;fetches,organization,limits,param,response,callback,link,response,callback,to,handle,response,or,exception;void,limits,response,callback,response,callback
RestClient -> void limits(ResponseCallback responseCallback)_;1479976305;Fetches Organization Limits.__@param responseCallback {@link ResponseCallback} to handle response or exception;void limits(ResponseCallback responseCallback)_;fetches,organization,limits,param,response,callback,link,response,callback,to,handle,response,or,exception;void,limits,response,callback,response,callback
RestClient -> void limits(ResponseCallback responseCallback)_;1480003968;Fetches Organization Limits.__@param responseCallback {@link ResponseCallback} to handle response or exception;void limits(ResponseCallback responseCallback)_;fetches,organization,limits,param,response,callback,link,response,callback,to,handle,response,or,exception;void,limits,response,callback,response,callback
RestClient -> void getSObject(String sObjectName, String id, String[] fields, ResponseCallback callback)_;1370445151;Retrieves a record for the specified object ID.__@param sObjectName specified object name_@param id          object id_@param callback {@link ResponseCallback} to handle response or exception;void getSObject(String sObjectName, String id, String[] fields, ResponseCallback callback)_;retrieves,a,record,for,the,specified,object,id,param,s,object,name,specified,object,name,param,id,object,id,param,callback,link,response,callback,to,handle,response,or,exception;void,get,sobject,string,s,object,name,string,id,string,fields,response,callback,callback
RestClient -> void getSObject(String sObjectName, String id, String[] fields, ResponseCallback callback)_;1370445151;Retrieves a record for the specified object ID.__@param sObjectName specified object name_@param id          object id_@param callback    {@link ResponseCallback} to handle response or exception;void getSObject(String sObjectName, String id, String[] fields, ResponseCallback callback)_;retrieves,a,record,for,the,specified,object,id,param,s,object,name,specified,object,name,param,id,object,id,param,callback,link,response,callback,to,handle,response,or,exception;void,get,sobject,string,s,object,name,string,id,string,fields,response,callback,callback
RestClient -> void getSObject(String sObjectName, String id, String[] fields, ResponseCallback callback)_;1377589935;Retrieves a record for the specified object ID.__@param sObjectName specified object name_@param id          object id_@param callback    {@link ResponseCallback} to handle response or exception;void getSObject(String sObjectName, String id, String[] fields, ResponseCallback callback)_;retrieves,a,record,for,the,specified,object,id,param,s,object,name,specified,object,name,param,id,object,id,param,callback,link,response,callback,to,handle,response,or,exception;void,get,sobject,string,s,object,name,string,id,string,fields,response,callback,callback
RestClient -> void getSObject(String sObjectName, String id, String[] fields, ResponseCallback callback)_;1424727517;Retrieves a record for the specified object ID.__@param sObjectName specified object name_@param id          object id_@param callback    {@link ResponseCallback} to handle response or exception;void getSObject(String sObjectName, String id, String[] fields, ResponseCallback callback)_;retrieves,a,record,for,the,specified,object,id,param,s,object,name,specified,object,name,param,id,object,id,param,callback,link,response,callback,to,handle,response,or,exception;void,get,sobject,string,s,object,name,string,id,string,fields,response,callback,callback
RestClient -> void getSObject(String sObjectName, String id, String[] fields, ResponseCallback callback)_;1466750028;Retrieves a record for the specified object ID.__@param sObjectName specified object name_@param id          object id_@param callback    {@link ResponseCallback} to handle response or exception;void getSObject(String sObjectName, String id, String[] fields, ResponseCallback callback)_;retrieves,a,record,for,the,specified,object,id,param,s,object,name,specified,object,name,param,id,object,id,param,callback,link,response,callback,to,handle,response,or,exception;void,get,sobject,string,s,object,name,string,id,string,fields,response,callback,callback
RestClient -> void getSObject(String sObjectName, String id, String[] fields, ResponseCallback callback)_;1479805669;Retrieves a record for the specified object ID.__@param sObjectName specified object name_@param id          object id_@param callback    {@link ResponseCallback} to handle response or exception;void getSObject(String sObjectName, String id, String[] fields, ResponseCallback callback)_;retrieves,a,record,for,the,specified,object,id,param,s,object,name,specified,object,name,param,id,object,id,param,callback,link,response,callback,to,handle,response,or,exception;void,get,sobject,string,s,object,name,string,id,string,fields,response,callback,callback
RestClient -> void getSObject(String sObjectName, String id, String[] fields, ResponseCallback callback)_;1479890641;Retrieves a record for the specified object ID.__@param sObjectName specified object name_@param id          object id_@param callback    {@link ResponseCallback} to handle response or exception;void getSObject(String sObjectName, String id, String[] fields, ResponseCallback callback)_;retrieves,a,record,for,the,specified,object,id,param,s,object,name,specified,object,name,param,id,object,id,param,callback,link,response,callback,to,handle,response,or,exception;void,get,sobject,string,s,object,name,string,id,string,fields,response,callback,callback
RestClient -> void getSObject(String sObjectName, String id, String[] fields, ResponseCallback callback)_;1479976305;Retrieves a record for the specified object ID.__@param sObjectName specified object name_@param id          object id_@param callback    {@link ResponseCallback} to handle response or exception;void getSObject(String sObjectName, String id, String[] fields, ResponseCallback callback)_;retrieves,a,record,for,the,specified,object,id,param,s,object,name,specified,object,name,param,id,object,id,param,callback,link,response,callback,to,handle,response,or,exception;void,get,sobject,string,s,object,name,string,id,string,fields,response,callback,callback
RestClient -> void getSObject(String sObjectName, String id, String[] fields, ResponseCallback callback)_;1480003968;Retrieves a record for the specified object ID.__@param sObjectName specified object name_@param id          object id_@param callback    {@link ResponseCallback} to handle response or exception;void getSObject(String sObjectName, String id, String[] fields, ResponseCallback callback)_;retrieves,a,record,for,the,specified,object,id,param,s,object,name,specified,object,name,param,id,object,id,param,callback,link,response,callback,to,handle,response,or,exception;void,get,sobject,string,s,object,name,string,id,string,fields,response,callback,callback
RestClient -> void approvals(ResponseCallback callback)_;1479976305;Returns a list of all approval processes.__@param callback_{@link ResponseCallback} to handle response or exception;void approvals(ResponseCallback callback)_;returns,a,list,of,all,approval,processes,param,callback,link,response,callback,to,handle,response,or,exception;void,approvals,response,callback,callback
RestClient -> void approvals(ResponseCallback callback)_;1480003968;Returns a list of all approval processes.__@param callback_{@link ResponseCallback} to handle response or exception;void approvals(ResponseCallback callback)_;returns,a,list,of,all,approval,processes,param,callback,link,response,callback,to,handle,response,or,exception;void,approvals,response,callback,callback
RestClient -> void recent(Integer limit, ResponseCallback responseCallback)_;1479890641;Fetches recently viewed records.__@param limit_optional limit that specifies the maximum number of records to be returned. If this parameter is not_specified, the default maximum number of records returned is the maximum number of entries in_RecentlyViewed, which is 200 records per object._@param responseCallback_{@link ResponseCallback} to handle response or exception;void recent(Integer limit, ResponseCallback responseCallback)_;fetches,recently,viewed,records,param,limit,optional,limit,that,specifies,the,maximum,number,of,records,to,be,returned,if,this,parameter,is,not,specified,the,default,maximum,number,of,records,returned,is,the,maximum,number,of,entries,in,recently,viewed,which,is,200,records,per,object,param,response,callback,link,response,callback,to,handle,response,or,exception;void,recent,integer,limit,response,callback,response,callback
RestClient -> void recent(Integer limit, ResponseCallback responseCallback)_;1479976305;Fetches recently viewed records.__@param limit_optional limit that specifies the maximum number of records to be returned. If this parameter is not_specified, the default maximum number of records returned is the maximum number of entries in_RecentlyViewed, which is 200 records per object._@param responseCallback_{@link ResponseCallback} to handle response or exception;void recent(Integer limit, ResponseCallback responseCallback)_;fetches,recently,viewed,records,param,limit,optional,limit,that,specifies,the,maximum,number,of,records,to,be,returned,if,this,parameter,is,not,specified,the,default,maximum,number,of,records,returned,is,the,maximum,number,of,entries,in,recently,viewed,which,is,200,records,per,object,param,response,callback,link,response,callback,to,handle,response,or,exception;void,recent,integer,limit,response,callback,response,callback
RestClient -> void recent(Integer limit, ResponseCallback responseCallback)_;1480003968;Fetches recently viewed records.__@param limit_optional limit that specifies the maximum number of records to be returned. If this parameter is not_specified, the default maximum number of records returned is the maximum number of entries in_RecentlyViewed, which is 200 records per object._@param responseCallback_{@link ResponseCallback} to handle response or exception;void recent(Integer limit, ResponseCallback responseCallback)_;fetches,recently,viewed,records,param,limit,optional,limit,that,specifies,the,maximum,number,of,records,to,be,returned,if,this,parameter,is,not,specified,the,default,maximum,number,of,records,returned,is,the,maximum,number,of,entries,in,recently,viewed,which,is,200,records,per,object,param,response,callback,link,response,callback,to,handle,response,or,exception;void,recent,integer,limit,response,callback,response,callback
RestClient -> void getDescription(String sObjectName, ResponseCallback callback)_;1370445151;Completely describes the individual metadata at all levels for the specified object.__@param sObjectName specified object name_@param callback {@link ResponseCallback} to handle response or exception;void getDescription(String sObjectName, ResponseCallback callback)_;completely,describes,the,individual,metadata,at,all,levels,for,the,specified,object,param,s,object,name,specified,object,name,param,callback,link,response,callback,to,handle,response,or,exception;void,get,description,string,s,object,name,response,callback,callback
RestClient -> void getDescription(String sObjectName, ResponseCallback callback)_;1370445151;Completely describes the individual metadata at all levels for the specified object.__@param sObjectName specified object name_@param callback    {@link ResponseCallback} to handle response or exception;void getDescription(String sObjectName, ResponseCallback callback)_;completely,describes,the,individual,metadata,at,all,levels,for,the,specified,object,param,s,object,name,specified,object,name,param,callback,link,response,callback,to,handle,response,or,exception;void,get,description,string,s,object,name,response,callback,callback
RestClient -> void getDescription(String sObjectName, ResponseCallback callback)_;1377589935;Completely describes the individual metadata at all levels for the specified object.__@param sObjectName specified object name_@param callback    {@link ResponseCallback} to handle response or exception;void getDescription(String sObjectName, ResponseCallback callback)_;completely,describes,the,individual,metadata,at,all,levels,for,the,specified,object,param,s,object,name,specified,object,name,param,callback,link,response,callback,to,handle,response,or,exception;void,get,description,string,s,object,name,response,callback,callback
RestClient -> void getDescription(String sObjectName, ResponseCallback callback)_;1424727517;Completely describes the individual metadata at all levels for the specified object.__@param sObjectName specified object name_@param callback    {@link ResponseCallback} to handle response or exception;void getDescription(String sObjectName, ResponseCallback callback)_;completely,describes,the,individual,metadata,at,all,levels,for,the,specified,object,param,s,object,name,specified,object,name,param,callback,link,response,callback,to,handle,response,or,exception;void,get,description,string,s,object,name,response,callback,callback
RestClient -> void getDescription(String sObjectName, ResponseCallback callback)_;1466750028;Completely describes the individual metadata at all levels for the specified object.__@param sObjectName specified object name_@param callback    {@link ResponseCallback} to handle response or exception;void getDescription(String sObjectName, ResponseCallback callback)_;completely,describes,the,individual,metadata,at,all,levels,for,the,specified,object,param,s,object,name,specified,object,name,param,callback,link,response,callback,to,handle,response,or,exception;void,get,description,string,s,object,name,response,callback,callback
RestClient -> void getDescription(String sObjectName, ResponseCallback callback)_;1479805669;Completely describes the individual metadata at all levels for the specified object.__@param sObjectName specified object name_@param callback    {@link ResponseCallback} to handle response or exception;void getDescription(String sObjectName, ResponseCallback callback)_;completely,describes,the,individual,metadata,at,all,levels,for,the,specified,object,param,s,object,name,specified,object,name,param,callback,link,response,callback,to,handle,response,or,exception;void,get,description,string,s,object,name,response,callback,callback
RestClient -> void getDescription(String sObjectName, ResponseCallback callback)_;1479890641;Completely describes the individual metadata at all levels for the specified object.__@param sObjectName specified object name_@param callback    {@link ResponseCallback} to handle response or exception;void getDescription(String sObjectName, ResponseCallback callback)_;completely,describes,the,individual,metadata,at,all,levels,for,the,specified,object,param,s,object,name,specified,object,name,param,callback,link,response,callback,to,handle,response,or,exception;void,get,description,string,s,object,name,response,callback,callback
RestClient -> void getDescription(String sObjectName, ResponseCallback callback)_;1479976305;Completely describes the individual metadata at all levels for the specified object.__@param sObjectName specified object name_@param callback    {@link ResponseCallback} to handle response or exception;void getDescription(String sObjectName, ResponseCallback callback)_;completely,describes,the,individual,metadata,at,all,levels,for,the,specified,object,param,s,object,name,specified,object,name,param,callback,link,response,callback,to,handle,response,or,exception;void,get,description,string,s,object,name,response,callback,callback
RestClient -> void getDescription(String sObjectName, ResponseCallback callback)_;1480003968;Completely describes the individual metadata at all levels for the specified object.__@param sObjectName specified object name_@param callback    {@link ResponseCallback} to handle response or exception;void getDescription(String sObjectName, ResponseCallback callback)_;completely,describes,the,individual,metadata,at,all,levels,for,the,specified,object,param,s,object,name,specified,object,name,param,callback,link,response,callback,to,handle,response,or,exception;void,get,description,string,s,object,name,response,callback,callback
RestClient -> void upsertSObject(String sObjectName,                        String fieldName, String fieldValue, InputStream sObject, ResponseCallback callback)_;1370445151;Creates or updates a record based on the value of a specified external ID field.__@param sObjectName specified object name_@param fieldName   external field name_@param fieldValue  external field value_@param sObject     input object to insert or update_@param callback    {@link ResponseCallback} to handle response or exception;void upsertSObject(String sObjectName,_                       String fieldName, String fieldValue, InputStream sObject, ResponseCallback callback)_;creates,or,updates,a,record,based,on,the,value,of,a,specified,external,id,field,param,s,object,name,specified,object,name,param,field,name,external,field,name,param,field,value,external,field,value,param,s,object,input,object,to,insert,or,update,param,callback,link,response,callback,to,handle,response,or,exception;void,upsert,sobject,string,s,object,name,string,field,name,string,field,value,input,stream,s,object,response,callback,callback
RestClient -> void upsertSObject(String sObjectName,                        String fieldName, String fieldValue, InputStream sObject, ResponseCallback callback)_;1377589935;Creates or updates a record based on the value of a specified external ID field.__@param sObjectName specified object name_@param fieldName   external field name_@param fieldValue  external field value_@param sObject     input object to insert or update_@param callback    {@link ResponseCallback} to handle response or exception;void upsertSObject(String sObjectName,_                       String fieldName, String fieldValue, InputStream sObject, ResponseCallback callback)_;creates,or,updates,a,record,based,on,the,value,of,a,specified,external,id,field,param,s,object,name,specified,object,name,param,field,name,external,field,name,param,field,value,external,field,value,param,s,object,input,object,to,insert,or,update,param,callback,link,response,callback,to,handle,response,or,exception;void,upsert,sobject,string,s,object,name,string,field,name,string,field,value,input,stream,s,object,response,callback,callback
RestClient -> void upsertSObject(String sObjectName,                        String fieldName, String fieldValue, InputStream sObject, ResponseCallback callback)_;1424727517;Creates or updates a record based on the value of a specified external ID field.__@param sObjectName specified object name_@param fieldName   external field name_@param fieldValue  external field value_@param sObject     input object to insert or update_@param callback    {@link ResponseCallback} to handle response or exception;void upsertSObject(String sObjectName,_                       String fieldName, String fieldValue, InputStream sObject, ResponseCallback callback)_;creates,or,updates,a,record,based,on,the,value,of,a,specified,external,id,field,param,s,object,name,specified,object,name,param,field,name,external,field,name,param,field,value,external,field,value,param,s,object,input,object,to,insert,or,update,param,callback,link,response,callback,to,handle,response,or,exception;void,upsert,sobject,string,s,object,name,string,field,name,string,field,value,input,stream,s,object,response,callback,callback
RestClient -> void upsertSObject(String sObjectName,                        String fieldName, String fieldValue, InputStream sObject, ResponseCallback callback)_;1466750028;Creates or updates a record based on the value of a specified external ID field.__@param sObjectName specified object name_@param fieldName   external field name_@param fieldValue  external field value_@param sObject     input object to insert or update_@param callback    {@link ResponseCallback} to handle response or exception;void upsertSObject(String sObjectName,_                       String fieldName, String fieldValue, InputStream sObject, ResponseCallback callback)_;creates,or,updates,a,record,based,on,the,value,of,a,specified,external,id,field,param,s,object,name,specified,object,name,param,field,name,external,field,name,param,field,value,external,field,value,param,s,object,input,object,to,insert,or,update,param,callback,link,response,callback,to,handle,response,or,exception;void,upsert,sobject,string,s,object,name,string,field,name,string,field,value,input,stream,s,object,response,callback,callback
RestClient -> void upsertSObject(String sObjectName,                        String fieldName, String fieldValue, InputStream sObject, ResponseCallback callback)_;1479805669;Creates or updates a record based on the value of a specified external ID field.__@param sObjectName specified object name_@param fieldName   external field name_@param fieldValue  external field value_@param sObject     input object to insert or update_@param callback    {@link ResponseCallback} to handle response or exception;void upsertSObject(String sObjectName,_                       String fieldName, String fieldValue, InputStream sObject, ResponseCallback callback)_;creates,or,updates,a,record,based,on,the,value,of,a,specified,external,id,field,param,s,object,name,specified,object,name,param,field,name,external,field,name,param,field,value,external,field,value,param,s,object,input,object,to,insert,or,update,param,callback,link,response,callback,to,handle,response,or,exception;void,upsert,sobject,string,s,object,name,string,field,name,string,field,value,input,stream,s,object,response,callback,callback
RestClient -> void upsertSObject(String sObjectName,                        String fieldName, String fieldValue, InputStream sObject, ResponseCallback callback)_;1479890641;Creates or updates a record based on the value of a specified external ID field.__@param sObjectName specified object name_@param fieldName   external field name_@param fieldValue  external field value_@param sObject     input object to insert or update_@param callback    {@link ResponseCallback} to handle response or exception;void upsertSObject(String sObjectName,_                       String fieldName, String fieldValue, InputStream sObject, ResponseCallback callback)_;creates,or,updates,a,record,based,on,the,value,of,a,specified,external,id,field,param,s,object,name,specified,object,name,param,field,name,external,field,name,param,field,value,external,field,value,param,s,object,input,object,to,insert,or,update,param,callback,link,response,callback,to,handle,response,or,exception;void,upsert,sobject,string,s,object,name,string,field,name,string,field,value,input,stream,s,object,response,callback,callback
RestClient -> void upsertSObject(String sObjectName,                        String fieldName, String fieldValue, InputStream sObject, ResponseCallback callback)_;1479976305;Creates or updates a record based on the value of a specified external ID field.__@param sObjectName specified object name_@param fieldName   external field name_@param fieldValue  external field value_@param sObject     input object to insert or update_@param callback    {@link ResponseCallback} to handle response or exception;void upsertSObject(String sObjectName,_                       String fieldName, String fieldValue, InputStream sObject, ResponseCallback callback)_;creates,or,updates,a,record,based,on,the,value,of,a,specified,external,id,field,param,s,object,name,specified,object,name,param,field,name,external,field,name,param,field,value,external,field,value,param,s,object,input,object,to,insert,or,update,param,callback,link,response,callback,to,handle,response,or,exception;void,upsert,sobject,string,s,object,name,string,field,name,string,field,value,input,stream,s,object,response,callback,callback
RestClient -> void upsertSObject(String sObjectName,                        String fieldName, String fieldValue, InputStream sObject, ResponseCallback callback)_;1480003968;Creates or updates a record based on the value of a specified external ID field.__@param sObjectName specified object name_@param fieldName   external field name_@param fieldValue  external field value_@param sObject     input object to insert or update_@param callback    {@link ResponseCallback} to handle response or exception;void upsertSObject(String sObjectName,_                       String fieldName, String fieldValue, InputStream sObject, ResponseCallback callback)_;creates,or,updates,a,record,based,on,the,value,of,a,specified,external,id,field,param,s,object,name,specified,object,name,param,field,name,external,field,name,param,field,value,external,field,value,param,s,object,input,object,to,insert,or,update,param,callback,link,response,callback,to,handle,response,or,exception;void,upsert,sobject,string,s,object,name,string,field,name,string,field,value,input,stream,s,object,response,callback,callback
RestClient -> void queryMore(String nextRecordsUrl, ResponseCallback callback)_;1370445151;Get SOQL query results using nextRecordsUrl.__@param nextRecordsUrl URL for next records to fetch, returned by query()_@param callback {@link ResponseCallback} to handle response or exception;void queryMore(String nextRecordsUrl, ResponseCallback callback)_;get,soql,query,results,using,next,records,url,param,next,records,url,url,for,next,records,to,fetch,returned,by,query,param,callback,link,response,callback,to,handle,response,or,exception;void,query,more,string,next,records,url,response,callback,callback
RestClient -> void queryMore(String nextRecordsUrl, ResponseCallback callback)_;1370445151;Get SOQL query results using nextRecordsUrl.__@param nextRecordsUrl URL for next records to fetch, returned by query()_@param callback       {@link ResponseCallback} to handle response or exception;void queryMore(String nextRecordsUrl, ResponseCallback callback)_;get,soql,query,results,using,next,records,url,param,next,records,url,url,for,next,records,to,fetch,returned,by,query,param,callback,link,response,callback,to,handle,response,or,exception;void,query,more,string,next,records,url,response,callback,callback
RestClient -> void queryMore(String nextRecordsUrl, ResponseCallback callback)_;1377589935;Get SOQL query results using nextRecordsUrl.__@param nextRecordsUrl URL for next records to fetch, returned by query()_@param callback       {@link ResponseCallback} to handle response or exception;void queryMore(String nextRecordsUrl, ResponseCallback callback)_;get,soql,query,results,using,next,records,url,param,next,records,url,url,for,next,records,to,fetch,returned,by,query,param,callback,link,response,callback,to,handle,response,or,exception;void,query,more,string,next,records,url,response,callback,callback
RestClient -> void queryMore(String nextRecordsUrl, ResponseCallback callback)_;1424727517;Get SOQL query results using nextRecordsUrl.__@param nextRecordsUrl URL for next records to fetch, returned by query()_@param callback       {@link ResponseCallback} to handle response or exception;void queryMore(String nextRecordsUrl, ResponseCallback callback)_;get,soql,query,results,using,next,records,url,param,next,records,url,url,for,next,records,to,fetch,returned,by,query,param,callback,link,response,callback,to,handle,response,or,exception;void,query,more,string,next,records,url,response,callback,callback
RestClient -> void queryMore(String nextRecordsUrl, ResponseCallback callback)_;1466750028;Get SOQL query results using nextRecordsUrl.__@param nextRecordsUrl URL for next records to fetch, returned by query()_@param callback       {@link ResponseCallback} to handle response or exception;void queryMore(String nextRecordsUrl, ResponseCallback callback)_;get,soql,query,results,using,next,records,url,param,next,records,url,url,for,next,records,to,fetch,returned,by,query,param,callback,link,response,callback,to,handle,response,or,exception;void,query,more,string,next,records,url,response,callback,callback
RestClient -> void queryMore(String nextRecordsUrl, ResponseCallback callback)_;1479805669;Get SOQL query results using nextRecordsUrl.__@param nextRecordsUrl URL for next records to fetch, returned by query()_@param callback       {@link ResponseCallback} to handle response or exception;void queryMore(String nextRecordsUrl, ResponseCallback callback)_;get,soql,query,results,using,next,records,url,param,next,records,url,url,for,next,records,to,fetch,returned,by,query,param,callback,link,response,callback,to,handle,response,or,exception;void,query,more,string,next,records,url,response,callback,callback
RestClient -> void queryMore(String nextRecordsUrl, ResponseCallback callback)_;1479890641;Get SOQL query results using nextRecordsUrl.__@param nextRecordsUrl URL for next records to fetch, returned by query()_@param callback       {@link ResponseCallback} to handle response or exception;void queryMore(String nextRecordsUrl, ResponseCallback callback)_;get,soql,query,results,using,next,records,url,param,next,records,url,url,for,next,records,to,fetch,returned,by,query,param,callback,link,response,callback,to,handle,response,or,exception;void,query,more,string,next,records,url,response,callback,callback
RestClient -> void queryMore(String nextRecordsUrl, ResponseCallback callback)_;1479976305;Get SOQL query results using nextRecordsUrl.__@param nextRecordsUrl URL for next records to fetch, returned by query()_@param callback       {@link ResponseCallback} to handle response or exception;void queryMore(String nextRecordsUrl, ResponseCallback callback)_;get,soql,query,results,using,next,records,url,param,next,records,url,url,for,next,records,to,fetch,returned,by,query,param,callback,link,response,callback,to,handle,response,or,exception;void,query,more,string,next,records,url,response,callback,callback
RestClient -> void queryMore(String nextRecordsUrl, ResponseCallback callback)_;1480003968;Get SOQL query results using nextRecordsUrl.__@param nextRecordsUrl URL for next records to fetch, returned by query()_@param callback       {@link ResponseCallback} to handle response or exception;void queryMore(String nextRecordsUrl, ResponseCallback callback)_;get,soql,query,results,using,next,records,url,param,next,records,url,url,for,next,records,to,fetch,returned,by,query,param,callback,link,response,callback,to,handle,response,or,exception;void,query,more,string,next,records,url,response,callback,callback
