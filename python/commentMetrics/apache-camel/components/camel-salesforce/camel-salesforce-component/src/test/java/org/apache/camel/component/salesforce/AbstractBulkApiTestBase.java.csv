commented;modifiers;parameterAmount;loc;comment;code
false;protected;1;5;;protected JobInfo createJob(JobInfo jobInfo) {     jobInfo = template().requestBody("direct:createJob", jobInfo, JobInfo.class).     assertNotNull("Missing JobId", jobInfo.getId()).     return jobInfo. }
false;public;0;51;;@Override public void configure() throws Exception {     // test createJob     from("direct:createJob").to("salesforce://createJob").     // test getJob     from("direct:getJob").to("salesforce:getJob").     // test closeJob     from("direct:closeJob").to("salesforce:closeJob").     // test abortJob     from("direct:abortJob").to("salesforce:abortJob").     // test createBatch     from("direct:createBatch").to("salesforce:createBatch").     // test getBatch     from("direct:getBatch").to("salesforce:getBatch").     // test getAllBatches     from("direct:getAllBatches").to("salesforce:getAllBatches").     // test getRequest     from("direct:getRequest").to("salesforce:getRequest").     // test getResults     from("direct:getResults").to("salesforce:getResults").     // test createBatchQuery     from("direct:createBatchQuery").to("salesforce:createBatchQuery?sObjectQuery=SELECT Name, Description__c, Price__c, Total_Inventory__c FROM Merchandise__c WHERE Name LIKE '%25Bulk API%25'").     // test getQueryResultIds     from("direct:getQueryResultIds").to("salesforce:getQueryResultIds").     // test getQueryResult     from("direct:getQueryResult").to("salesforce:getQueryResult"). }
false;protected;0;56;;@Override protected RouteBuilder doCreateRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             // test createJob             from("direct:createJob").to("salesforce://createJob").             // test getJob             from("direct:getJob").to("salesforce:getJob").             // test closeJob             from("direct:closeJob").to("salesforce:closeJob").             // test abortJob             from("direct:abortJob").to("salesforce:abortJob").             // test createBatch             from("direct:createBatch").to("salesforce:createBatch").             // test getBatch             from("direct:getBatch").to("salesforce:getBatch").             // test getAllBatches             from("direct:getAllBatches").to("salesforce:getAllBatches").             // test getRequest             from("direct:getRequest").to("salesforce:getRequest").             // test getResults             from("direct:getResults").to("salesforce:getResults").             // test createBatchQuery             from("direct:createBatchQuery").to("salesforce:createBatchQuery?sObjectQuery=SELECT Name, Description__c, Price__c, Total_Inventory__c FROM Merchandise__c WHERE Name LIKE '%25Bulk API%25'").             // test getQueryResultIds             from("direct:getQueryResultIds").to("salesforce:getQueryResultIds").             // test getQueryResult             from("direct:getQueryResult").to("salesforce:getQueryResult").         }     }. }
false;protected;1;4;;protected boolean batchProcessed(BatchInfo batchInfo) {     BatchStateEnum state = batchInfo.getState().     return !(state == BatchStateEnum.QUEUED || state == BatchStateEnum.IN_PROGRESS). }
false;protected;1;8;;protected BatchInfo getBatchInfo(BatchInfo batchInfo) {     batchInfo = template().requestBody("direct:getBatch", batchInfo, BatchInfo.class).     assertNotNull("Null batch", batchInfo).     assertNotNull("Null batch id", batchInfo.getId()).     return batchInfo. }
