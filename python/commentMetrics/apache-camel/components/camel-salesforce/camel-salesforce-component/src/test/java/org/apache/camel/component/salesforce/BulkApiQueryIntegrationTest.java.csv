commented;modifiers;parameterAmount;loc;comment;code
false;public,static;0;7;;@DataPoints public static ContentType[] getContentTypes() {     return new ContentType[] { ContentType.XML, ContentType.CSV }. }
false;public;1;48;;@Theory @Test public void testQueryLifecycle(ContentType contentType) throws Exception {     log.info("Testing Query lifecycle with {} content", contentType).     // create a QUERY test Job     JobInfo jobInfo = new JobInfo().     jobInfo.setOperation(OperationEnum.QUERY).     jobInfo.setContentType(contentType).     jobInfo.setObject(Merchandise__c.class.getSimpleName()).     jobInfo = createJob(jobInfo).     // test createQuery     BatchInfo batchInfo = template().requestBody("direct:createBatchQuery", jobInfo, BatchInfo.class).     assertNotNull("Null batch query", batchInfo).     assertNotNull("Null batch query id", batchInfo.getId()).     // test getRequest     InputStream requestStream = template().requestBody("direct:getRequest", batchInfo, InputStream.class).     assertNotNull("Null batch request", requestStream).     // wait for batch to finish     log.info("Waiting for query batch to finish...").     while (!batchProcessed(batchInfo)) {         // sleep 5 seconds         Thread.sleep(5000).         // check again         batchInfo = getBatchInfo(batchInfo).     }     log.info("Query finished with state " + batchInfo.getState()).     assertEquals("Query did not succeed", BatchStateEnum.COMPLETED, batchInfo.getState()).     // test getQueryResultList     @SuppressWarnings("unchecked")     List<String> resultIds = template().requestBody("direct:getQueryResultIds", batchInfo, List.class).     assertNotNull("Null query result ids", resultIds).     assertFalse("Empty result ids", resultIds.isEmpty()).     // test getQueryResult     for (String resultId : resultIds) {         InputStream results = template().requestBodyAndHeader("direct:getQueryResult", batchInfo, SalesforceEndpointConfig.RESULT_ID, resultId, InputStream.class).         assertNotNull("Null query result", results).     }     // close the test job     template().requestBody("direct:closeJob", jobInfo, JobInfo.class). }
