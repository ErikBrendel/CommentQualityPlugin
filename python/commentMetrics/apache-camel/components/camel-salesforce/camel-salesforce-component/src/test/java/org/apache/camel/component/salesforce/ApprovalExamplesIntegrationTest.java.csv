commented;modifiers;parameterAmount;loc;comment;code
false;public;0;12;;@Test public void example1() {     // tag::example1Usage     final Map<String, String> body = new HashMap<>().     body.put("contextId", accountIds.iterator().next()).     body.put("nextApproverIds", userId).     final ApprovalResult result = template.requestBody("direct:example1", body, ApprovalResult.class).     // end::example1Usage     assertNotNull("Result should be received", result). }
false;public;0;12;;@Test public void example2() {     // tag::example2Usage     final Map<String, String> body = new HashMap<>().     body.put("contextId", accountIds.iterator().next()).     body.put("nextApproverIds", userId).     final ApprovalResult result = template.requestBody("direct:example2", body, ApprovalResult.class).     // end::example2Usage     assertNotNull("Result should be received", result). }
false;protected;0;14;;@Override protected JndiRegistry createRegistry() throws Exception {     final JndiRegistry jndi = super.createRegistry().     final ApprovalRequest approvalTemplate = new ApprovalRequest().     approvalTemplate.setActionType(ApprovalRequest.Action.Submit).     approvalTemplate.setComments("Sample approval template").     approvalTemplate.setProcessDefinitionNameOrId("Test_Account_Process").     approvalTemplate.setSkipEntryCriteria(true).     jndi.bind("approvalTemplate", approvalTemplate).     return jndi. }
false;public;0;20;;@Override public void configure() throws Exception {     // tag::example1Route[]     //      from("direct:example1").setHeader("approval.ContextId", simple("${body['contextId']}")).setHeader("approval.NextApproverIds", simple("${body['nextApproverIds']}")).to(//      "salesforce:approval?" + //      "approvalActionType=Submit" + //      "&approvalComments=this is a test" + //      "&approvalProcessDefinitionNameOrId=Test_Account_Process" + "&approvalSkipEntryCriteria=true").     // end::example1Route[]     // tag::example2Route[]     //      from("direct:example2").setHeader("approval.ContextId", simple("${body['contextId']}")).setHeader("approval.NextApproverIds", simple("${body['nextApproverIds']}")).to("salesforce:approval?approval=#approvalTemplate"). // end::example2Route[] }
false;protected;0;25;;@Override protected RouteBuilder doCreateRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             // tag::example1Route[]             //              from("direct:example1").setHeader("approval.ContextId", simple("${body['contextId']}")).setHeader("approval.NextApproverIds", simple("${body['nextApproverIds']}")).to(//              "salesforce:approval?" + //              "approvalActionType=Submit" + //              "&approvalComments=this is a test" + //              "&approvalProcessDefinitionNameOrId=Test_Account_Process" + "&approvalSkipEntryCriteria=true").             // end::example1Route[]             // tag::example2Route[]             //              from("direct:example2").setHeader("approval.ContextId", simple("${body['contextId']}")).setHeader("approval.NextApproverIds", simple("${body['nextApproverIds']}")).to("salesforce:approval?approval=#approvalTemplate").         // end::example2Route[]         }     }. }
