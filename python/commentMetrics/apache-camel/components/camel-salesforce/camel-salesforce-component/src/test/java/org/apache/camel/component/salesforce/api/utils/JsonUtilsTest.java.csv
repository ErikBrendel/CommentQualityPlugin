commented;modifiers;parameterAmount;loc;comment;code
false;public;0;14;;@Test public void getBasicApiJsonSchema() throws Exception {     // create basic api dto schema     LOG.info("Basic Api Schema...").     String basicApiJsonSchema = JsonUtils.getBasicApiJsonSchema().     LOG.info(basicApiJsonSchema).     // parse schema to validate     ObjectMapper objectMapper = JsonUtils.createObjectMapper().     JsonSchema jsonSchema = objectMapper.readValue(basicApiJsonSchema, JsonSchema.class).     assertTrue(jsonSchema.isObjectSchema()).     assertFalse(((ObjectSchema) jsonSchema).getOneOf().isEmpty()). }
false;public;0;16;;@Test public void getSObjectJsonSchema() throws Exception {     // create sobject dto schema     SObjectDescription description = new Account().description().     LOG.info("SObject Schema...").     String sObjectJsonSchema = JsonUtils.getSObjectJsonSchema(description).     LOG.info(sObjectJsonSchema).     // parse schema to validate     ObjectMapper objectMapper = JsonUtils.createObjectMapper().     JsonSchema jsonSchema = objectMapper.readValue(sObjectJsonSchema, JsonSchema.class).     assertTrue(jsonSchema.isObjectSchema()).     assertEquals(2, ((ObjectSchema) jsonSchema).getOneOf().size()). }
