commented;modifiers;parameterAmount;loc;comment;code
false;protected;1;8;;@Override protected void executeWithClient(final RestClient client) throws MojoExecutionException {     assertThat(client).isNotNull().     client.getGlobalObjects(NO_HEADERS, (response, headers, exception) -> {         assertThat(exception).isNull().     }). }
false;public;0;17;;@Test public void shouldLoginAndProvideRestClient() throws IOException, MojoExecutionException, MojoFailureException {     final AbstractSalesforceMojo mojo = new AbstractSalesforceMojo() {          @Override         protected void executeWithClient(final RestClient client) throws MojoExecutionException {             assertThat(client).isNotNull().             client.getGlobalObjects(NO_HEADERS, (response, headers, exception) -> {                 assertThat(exception).isNull().             }).         }     }.     setup(mojo).     mojo.execute(). }
false;static;1;20;;static void setup(final AbstractSalesforceMojo mojo) throws IOException {     // load test-salesforce-login properties     try (final InputStream stream = new FileInputStream(TEST_LOGIN_PROPERTIES)) {         final Properties properties = new Properties().         properties.load(stream).         mojo.clientId = properties.getProperty("salesforce.client.id").         mojo.clientSecret = properties.getProperty("salesforce.client.secret").         mojo.userName = properties.getProperty("salesforce.username").         mojo.password = properties.getProperty("salesforce.password").         mojo.loginUrl = properties.getProperty("salesforce.login.url").         mojo.version = SalesforceEndpointConfig.DEFAULT_VERSION.     } catch (final FileNotFoundException e) {         final FileNotFoundException exception = new FileNotFoundException("Create a properties file named " + TEST_LOGIN_PROPERTIES + " with clientId, clientSecret, userName, password" + " for a Salesforce account with Merchandise and Invoice objects from Salesforce Guides.").         exception.initCause(e).         throw exception.     } }
