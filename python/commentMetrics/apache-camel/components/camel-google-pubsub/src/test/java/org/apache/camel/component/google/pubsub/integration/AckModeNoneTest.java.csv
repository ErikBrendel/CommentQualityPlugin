# id;timestamp;commentText;codeText;commentWords;codeWords
AckModeNoneTest -> @Test     public void singleMessage() throws Exception;1479108222;Expecting two messages received for the one sent._With Ack mode set to NONE the same message will be delivered again and again,_after the deadline expiration._Setting deadline to 1 second and waiting for more than 2 to ensure the message has been resent._@throws Exception;@Test_    public void singleMessage() throws Exception {__        Exchange exchange = new DefaultExchange(context)___        exchange.getIn().setBody("ACK NONE  : " + exchange.getExchangeId())___        receiveResult.expectedMessageCount(2)__        producer.send(exchange)__        receiveResult.assertIsSatisfied(4000)__    };expecting,two,messages,received,for,the,one,sent,with,ack,mode,set,to,none,the,same,message,will,be,delivered,again,and,again,after,the,deadline,expiration,setting,deadline,to,1,second,and,waiting,for,more,than,2,to,ensure,the,message,has,been,resent,throws,exception;test,public,void,single,message,throws,exception,exchange,exchange,new,default,exchange,context,exchange,get,in,set,body,ack,none,exchange,get,exchange,id,receive,result,expected,message,count,2,producer,send,exchange,receive,result,assert,is,satisfied,4000
AckModeNoneTest -> @Test     public void singleMessage() throws Exception;1535627650;Expecting two messages received for the one sent._With Ack mode set to NONE the same message will be delivered again and again,_after the deadline expiration._Setting deadline to 1 second and waiting for more than 2 to ensure the message has been resent._@throws Exception;@Test_    public void singleMessage() throws Exception {__        Exchange exchange = new DefaultExchange(context)___        exchange.getIn().setBody("ACK NONE  : " + exchange.getExchangeId())___        receiveResult.expectedMessageCount(2)__        producer.send(exchange)__        receiveResult.assertIsSatisfied(4000)__    };expecting,two,messages,received,for,the,one,sent,with,ack,mode,set,to,none,the,same,message,will,be,delivered,again,and,again,after,the,deadline,expiration,setting,deadline,to,1,second,and,waiting,for,more,than,2,to,ensure,the,message,has,been,resent,throws,exception;test,public,void,single,message,throws,exception,exchange,exchange,new,default,exchange,context,exchange,get,in,set,body,ack,none,exchange,get,exchange,id,receive,result,expected,message,count,2,producer,send,exchange,receive,result,assert,is,satisfied,4000
AckModeNoneTest -> @Test     public void singleMessage() throws Exception;1537290824;Expecting two messages received for the one sent._With Ack mode set to NONE the same message will be delivered again and again,_after the deadline expiration._Setting deadline to 1 second and waiting for more than 2 to ensure the message has been resent._@throws Exception;@Test_    public void singleMessage() throws Exception {__        Exchange exchange = new DefaultExchange(context)___        exchange.getIn().setBody("ACK NONE  : " + exchange.getExchangeId())___        receiveResult.expectedMessageCount(2)__        producer.send(exchange)__        receiveResult.assertIsSatisfied(4000)__    };expecting,two,messages,received,for,the,one,sent,with,ack,mode,set,to,none,the,same,message,will,be,delivered,again,and,again,after,the,deadline,expiration,setting,deadline,to,1,second,and,waiting,for,more,than,2,to,ensure,the,message,has,been,resent,throws,exception;test,public,void,single,message,throws,exception,exchange,exchange,new,default,exchange,context,exchange,get,in,set,body,ack,none,exchange,get,exchange,id,receive,result,expected,message,count,2,producer,send,exchange,receive,result,assert,is,satisfied,4000
AckModeNoneTest -> @Test     public void singleMessage() throws Exception;1540108163;Expecting two messages received for the one sent._With Ack mode set to NONE the same message will be delivered again and again,_after the deadline expiration._Setting deadline to 1 second and waiting for more than 2 to ensure the message has been resent._@throws Exception;@Test_    public void singleMessage() throws Exception {__        Exchange exchange = new DefaultExchange(context)___        exchange.getIn().setBody("ACK NONE  : " + exchange.getExchangeId())___        receiveResult.expectedMessageCount(2)__        producer.send(exchange)__        receiveResult.assertIsSatisfied(4000)__    };expecting,two,messages,received,for,the,one,sent,with,ack,mode,set,to,none,the,same,message,will,be,delivered,again,and,again,after,the,deadline,expiration,setting,deadline,to,1,second,and,waiting,for,more,than,2,to,ensure,the,message,has,been,resent,throws,exception;test,public,void,single,message,throws,exception,exchange,exchange,new,default,exchange,context,exchange,get,in,set,body,ack,none,exchange,get,exchange,id,receive,result,expected,message,count,2,producer,send,exchange,receive,result,assert,is,satisfied,4000
