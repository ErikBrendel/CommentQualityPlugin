commented;modifiers;parameterAmount;loc;comment;code
false;public;0;21;;@Test public void testEndpointConfiguration() throws Exception {     // :1 identifies the first registered endpoint fo a type in the context     Endpoint endpoint = context.hasEndpoint(String.format("google-pubsub:%s:%s:1", PROJECT_ID, SUBSCRIPTION_URI)).     assertNotNull(String.format("Endpoint 'google-pubsub:%s:%s' is not found in Camel Context", PROJECT_ID, SUBSCRIPTION_URI), endpoint).     assertTrue(endpoint instanceof GooglePubsubEndpoint).     GooglePubsubEndpoint pubsubEndpoint = (GooglePubsubEndpoint) endpoint.     assertEquals(ExchangePattern.InOnly, pubsubEndpoint.createExchange().getPattern()).     assertEquals("google-pubsub://" + PROJECT_ID + ":" + SUBSCRIPTION_URI, pubsubEndpoint.getEndpointUri()).     assertEquals(PROJECT_ID, pubsubEndpoint.getProjectId()).     assertEquals(TEST_SUBSCRIPTION_NAME, pubsubEndpoint.getDestinationName()).     assertEquals(new Integer(5), pubsubEndpoint.getConcurrentConsumers()).     assertEquals(new Integer(2), pubsubEndpoint.getMaxMessagesPerPoll()).     assertEquals(GooglePubsubConstants.AckMode.NONE, pubsubEndpoint.getAckMode()). }
false;public;0;3;;public void configure() {     from(from).to(to). }
false;protected;0;8;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          public void configure() {             from(from).to(to).         }     }. }
