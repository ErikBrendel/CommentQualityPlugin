commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;15;;@Override protected void doStart() throws Exception {     super.doStart().     Properties properties = configuration.createInitialProperties().     setSipStack(configuration.getSipFactory().createSipStack(properties)).     configuration.parseURI().     sipPresenceAgentListener = new SipPresenceAgentListener(this).     configuration.setListeningPoint(sipStack.createListeningPoint(configuration.getFromHost(), Integer.valueOf(configuration.getFromPort()).intValue(), configuration.getTransport())).     provider = getSipStack().createSipProvider(configuration.getListeningPoint()).     provider.addSipListener(sipPresenceAgentListener). }
false;protected;0;8;;@Override protected void doStop() throws Exception {     super.doStop().     getSipStack().deleteListeningPoint(configuration.getListeningPoint()).     provider.removeSipListener(sipPresenceAgentListener).     getSipStack().deleteSipProvider(provider).     getSipStack().stop(). }
false;public;0;3;;public SipConfiguration getConfiguration() {     return configuration. }
false;public;1;3;;public void setConfiguration(SipConfiguration configuration) {     this.configuration = configuration. }
false;public;0;3;;public SipProvider getProvider() {     return provider. }
false;public;1;3;;public void setProvider(SipProvider provider) {     this.provider = provider. }
false;public;1;3;;public void setSipStack(SipStack sipStack) {     this.sipStack = sipStack. }
false;public;0;3;;public SipStack getSipStack() {     return sipStack. }
