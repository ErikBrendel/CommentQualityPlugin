commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;32;;@Override protected void doStart() throws Exception {     super.doStart().     Properties properties = configuration.createInitialProperties().     sipStack = configuration.getSipFactory().createSipStack(properties).     configuration.parseURI().     sipSubscriptionListener = new SipSubscriptionListener(this).     ListeningPoint listeningPoint = sipStack.createListeningPoint(configuration.getFromHost(), Integer.valueOf(configuration.getFromPort()).intValue(), configuration.getTransport()).     configuration.setListeningPoint(listeningPoint).     provider = sipStack.createSipProvider(configuration.getListeningPoint()).     provider.addSipListener(sipSubscriptionListener).     if (configuration.getCallIdHeader() == null) {         configuration.setCallIdHeader(provider.getNewCallId()).     }     // Create the Subscription request to register with the presence agent and receive notifications.     configuration.setCallIdHeader(provider.getNewCallId()).     Request request = configuration.createSipRequest(1, Request.SUBSCRIBE, configuration.getEventHeaderName()).     // Create the subscriber transaction from request.     ClientTransaction subscriberTransactionId = provider.getNewClientTransaction(request).     // Add an Event header for the subscription.     request.addHeader(configuration.getEventHeader()).     subscriberDialog = subscriberTransactionId.getDialog().     // Send the outgoing subscription request.     subscriberTransactionId.sendRequest(). }
false;protected;0;4;;@Override protected void doStop() throws Exception {     super.doStop(). }
false;public;0;3;;public SipConfiguration getConfiguration() {     return configuration. }
false;public;1;3;;public void setConfiguration(SipConfiguration configuration) {     this.configuration = configuration. }
false;public;1;3;;public void setSipSubscriptionListener(SipSubscriptionListener sipSubscriptionListener) {     this.sipSubscriptionListener = sipSubscriptionListener. }
false;public;0;3;;public SipSubscriptionListener getSipSubscriptionListener() {     return sipSubscriptionListener. }
false;public;1;3;;public void setSipStack(SipStack sipStack) {     this.sipStack = sipStack. }
false;public;0;3;;public SipStack getSipStack() {     return sipStack. }
false;public;0;3;;public SipProvider getProvider() {     return provider. }
false;public;1;3;;public void setProvider(SipProvider provider) {     this.provider = provider. }
false;public;0;3;;public Dialog getSubscriberDialog() {     return subscriberDialog. }
