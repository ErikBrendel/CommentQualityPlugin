commented;modifiers;parameterAmount;loc;comment;code
false;public;0;10;;@Override @Before public void setUp() throws Exception {     super.setUp().     deleteDirectory("target/data").     File file = new File("target/data/leveldb.dat").     levelDBFile = new LevelDBFile().     levelDBFile.setFile(file).     levelDBFile.start(). }
false;public;0;6;;@Override @After public void tearDown() throws Exception {     levelDBFile.stop().     super.tearDown(). }
false;public;0;36;;@Test public void testExisting() throws Exception {     LevelDBAggregationRepository repo = new LevelDBAggregationRepository().     repo.setLevelDBFile(levelDBFile).     repo.setRepositoryName("repo1").     repo.setReturnOldExchange(true).     // Store it..     Exchange exchange1 = new DefaultExchange(context).     exchange1.getIn().setBody("counter:1").     Exchange actual = repo.add(context, "foo", exchange1).     assertEquals(null, actual).     // stop the repo     levelDBFile.stop().     Thread.sleep(1000).     // load the repo again     levelDBFile.start().     // Get it back..     actual = repo.get(context, "foo").     assertEquals("counter:1", actual.getIn().getBody()).     // Change it..     Exchange exchange2 = new DefaultExchange(context).     exchange2.getIn().setBody("counter:2").     actual = repo.add(context, "foo", exchange2).     // the old one     assertEquals("counter:1", actual.getIn().getBody()).     // Get it back..     actual = repo.get(context, "foo").     assertEquals("counter:2", actual.getIn().getBody()). }
