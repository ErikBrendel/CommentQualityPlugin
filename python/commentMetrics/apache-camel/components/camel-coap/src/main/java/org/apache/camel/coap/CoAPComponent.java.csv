commented;modifiers;parameterAmount;loc;comment;code
false;public,synchronized;1;16;;public synchronized CoapServer getServer(int port) {     CoapServer server = servers.get(port).     if (server == null && port == -1) {         server = getServer(DEFAULT_PORT).     }     if (server == null) {         NetworkConfig config = new NetworkConfig().         // FIXME- configure the network stuff         server = new CoapServer(config, port).         servers.put(port, server).         if (this.isStarted()) {             server.start().         }     }     return server. }
false;protected;3;5;;protected Endpoint createEndpoint(String uri, String remaining, Map<String, Object> parameters) throws Exception {     Endpoint endpoint = new CoAPEndpoint(uri, this).     setProperties(endpoint, parameters).     return endpoint. }
false;public;9;77;;@Override public Consumer createConsumer(CamelContext camelContext, Processor processor, String verb, String basePath, String uriTemplate, String consumes, String produces, RestConfiguration configuration, Map<String, Object> parameters) throws Exception {     String path = basePath.     if (uriTemplate != null) {         // make sure to avoid double slashes         if (uriTemplate.startsWith("/")) {             path = path + uriTemplate.         } else {             path = path + "/" + uriTemplate.         }     }     path = FileUtil.stripLeadingSeparator(path).     RestConfiguration config = configuration.     if (config == null) {         config = getCamelContext().getRestConfiguration("coap", true).     }     if (config.isEnableCORS()) {         LOG.info("CORS configuration will be ignored as CORS is not supported by the CoAP component").     }     String host = config.getHost().     if (ObjectHelper.isEmpty(host)) {         if (config.getHostNameResolver() == RestConfiguration.RestHostNameResolver.allLocalIp) {             host = "0.0.0.0".         } else if (config.getHostNameResolver() == RestConfiguration.RestHostNameResolver.localHostName) {             host = HostUtils.getLocalHostName().         } else if (config.getHostNameResolver() == RestConfiguration.RestHostNameResolver.localIp) {             host = HostUtils.getLocalIp().         }     }     Map<String, Object> map = new HashMap<>().     // setup endpoint options     if (config.getEndpointProperties() != null && !config.getEndpointProperties().isEmpty()) {         map.putAll(config.getEndpointProperties()).     }     String scheme = config.getScheme() == null ? "coap" : config.getScheme().     String query = URISupport.createQueryString(map).     int port = 0.     int num = config.getPort().     if (num > 0) {         port = num.     }     // prefix path with context-path if configured in rest-dsl configuration     String contextPath = config.getContextPath().     if (ObjectHelper.isNotEmpty(contextPath)) {         contextPath = FileUtil.stripTrailingSeparator(contextPath).         contextPath = FileUtil.stripLeadingSeparator(contextPath).         if (ObjectHelper.isNotEmpty(contextPath)) {             path = contextPath + "/" + path.         }     }     String restrict = verb.toUpperCase(Locale.US).     String url = String.format("%s://%s:%d/%s?coapMethodRestrict=%s", scheme, host, port, path, restrict).     if (!query.isEmpty()) {         url += "&" + query.     }     CoAPEndpoint endpoint = camelContext.getEndpoint(url, CoAPEndpoint.class).     setProperties(endpoint, parameters).     // configure consumer properties     Consumer consumer = endpoint.createConsumer(processor).     if (config.getConsumerProperties() != null && !config.getConsumerProperties().isEmpty()) {         setProperties(consumer, config.getConsumerProperties()).     }     return consumer. }
false;protected;0;8;;@Override protected void doStart() throws Exception {     super.doStart().     for (CoapServer s : servers.values()) {         s.start().     } }
false;protected;0;7;;@Override protected void doStop() throws Exception {     for (CoapServer s : servers.values()) {         s.stop().     }     super.doStop(). }
