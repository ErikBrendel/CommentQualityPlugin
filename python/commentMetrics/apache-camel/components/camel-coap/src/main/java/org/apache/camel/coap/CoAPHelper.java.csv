commented;modifiers;parameterAmount;loc;comment;code
true;public,static;2;12;/**  * Determines which CoAP request method to use based on the content of the target  * request URI, the message body or value from the CamelCoapMethod header.  *  * @param exchange the exchange  * @param client the CoAP client  * @return the CoAP request method  */ ;/**  * Determines which CoAP request method to use based on the content of the target  * request URI, the message body or value from the CamelCoapMethod header.  *  * @param exchange the exchange  * @param client the CoAP client  * @return the CoAP request method  */ public static String getDefaultMethod(Exchange exchange, CoapClient client) {     String method = exchange.getIn().getHeader(CoAPConstants.COAP_METHOD, String.class).     if (method == null) {         Object body = exchange.getIn().getBody().         if (body == null || client.getURI().contains("?")) {             method = CoAPConstants.METHOD_GET.         } else {             method = CoAPConstants.METHOD_POST.         }     }     return method. }
true;public,static;1;6;/**  * Determines which method verbs the CoAP server should be restricted to handling.  *  * @param methodRestrict  * @return  */ ;/**  * Determines which method verbs the CoAP server should be restricted to handling.  *  * @param methodRestrict  * @return  */ public static String getDefaultMethodRestrict(String methodRestrict) {     if (ObjectHelper.isNotEmpty(methodRestrict)) {         return methodRestrict.     }     return CoAPConstants.METHOD_RESTRICT_ALL. }
