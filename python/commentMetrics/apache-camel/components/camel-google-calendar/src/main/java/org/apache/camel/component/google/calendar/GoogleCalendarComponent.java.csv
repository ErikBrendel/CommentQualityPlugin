commented;modifiers;parameterAmount;loc;comment;code
false;protected;1;4;;@Override protected GoogleCalendarApiName getApiName(String apiNameStr) throws IllegalArgumentException {     return GoogleCalendarApiName.fromValue(apiNameStr). }
false;public;1;17;;public Calendar getClient(GoogleCalendarConfiguration config) {     if (client == null) {         List<String> list = null.         if (config.getScopes() != null) {             String[] arr = config.getScopes().split(",").             list = Arrays.asList(arr).         }         client = getClientFactory().makeClient(config.getClientId(), config.getClientSecret(), list, config.getApplicationName(), config.getRefreshToken(), config.getAccessToken(), config.getEmailAddress(), config.getP12FileName(), config.getUser()).     }     return client. }
false;public;0;6;;public GoogleCalendarClientFactory getClientFactory() {     if (clientFactory == null) {         clientFactory = new BatchGoogleCalendarClientFactory().     }     return clientFactory. }
false;public;0;7;;@Override public GoogleCalendarConfiguration getConfiguration() {     if (configuration == null) {         configuration = new GoogleCalendarConfiguration().     }     return super.getConfiguration(). }
true;public;1;4;/**  * To use the shared configuration  */ ;/**  * To use the shared configuration  */ @Override public void setConfiguration(GoogleCalendarConfiguration configuration) {     super.setConfiguration(configuration). }
true;public;1;3;/**  * To use the GoogleCalendarClientFactory as factory for creating the client.  * Will by default use {@link BatchGoogleCalendarClientFactory}  */ ;/**  * To use the GoogleCalendarClientFactory as factory for creating the client.  * Will by default use {@link BatchGoogleCalendarClientFactory}  */ public void setClientFactory(GoogleCalendarClientFactory clientFactory) {     this.clientFactory = clientFactory. }
false;protected;4;7;;@Override protected Endpoint createEndpoint(String uri, String methodName, GoogleCalendarApiName apiName, GoogleCalendarConfiguration endpointConfiguration) {     endpointConfiguration.setApiName(apiName).     endpointConfiguration.setMethodName(methodName).     return new GoogleCalendarEndpoint(uri, this, apiName, methodName, endpointConfiguration). }
