commented;modifiers;parameterAmount;loc;comment;code
false;public;0;10;;@Test public void testList() throws Exception {     // using String message body for single parameter "calendarId"     final com.google.api.services.calendar.model.Acl result = requestBody("direct://LIST", getCalendar().getId()).     // should have at least one rule (reader, owner, etc.) for the calendar     // or we wouldn't be able to view it!     assertTrue(result.getItems().size() > 0).     LOG.debug("list: " + result). }
false;public;0;24;;@Override public void configure() {     // test route for delete     from("direct://DELETE").to("google-calendar://" + PATH_PREFIX + "/delete").     // test route for get     from("direct://GET").to("google-calendar://" + PATH_PREFIX + "/get").     // test route for insert     from("direct://INSERT").to("google-calendar://" + PATH_PREFIX + "/insert").     // test route for list     from("direct://LIST").to("google-calendar://" + PATH_PREFIX + "/list?inBody=calendarId").     // test route for patch     from("direct://PATCH").to("google-calendar://" + PATH_PREFIX + "/patch").     // test route for update     from("direct://UPDATE").to("google-calendar://" + PATH_PREFIX + "/update").     // test route for watch     from("direct://WATCH").to("google-calendar://" + PATH_PREFIX + "/watch"). }
false;protected;0;29;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() {             // test route for delete             from("direct://DELETE").to("google-calendar://" + PATH_PREFIX + "/delete").             // test route for get             from("direct://GET").to("google-calendar://" + PATH_PREFIX + "/get").             // test route for insert             from("direct://INSERT").to("google-calendar://" + PATH_PREFIX + "/insert").             // test route for list             from("direct://LIST").to("google-calendar://" + PATH_PREFIX + "/list?inBody=calendarId").             // test route for patch             from("direct://PATCH").to("google-calendar://" + PATH_PREFIX + "/patch").             // test route for update             from("direct://UPDATE").to("google-calendar://" + PATH_PREFIX + "/update").             // test route for watch             from("direct://WATCH").to("google-calendar://" + PATH_PREFIX + "/watch").         }     }. }
