commented;modifiers;parameterAmount;loc;comment;code
false;public;0;8;;@Test public void testConsumePrefixedMessages() throws Exception {     MockEndpoint mock = getMockEndpoint("mock:result").     mock.expectedMinimumMessageCount(1).     Thread.sleep(10000).     assertMockEndpointsSatisfied(). }
false;public;0;6;;@Override public void configure() {     from("google-calendar-stream://test?delay=5000&maxResults=5").to("mock:result"). }
false;protected;0;11;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() {             from("google-calendar-stream://test?delay=5000&maxResults=5").to("mock:result").         }     }. }
