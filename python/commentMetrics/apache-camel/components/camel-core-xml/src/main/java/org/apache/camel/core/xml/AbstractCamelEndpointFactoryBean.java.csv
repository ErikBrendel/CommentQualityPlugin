commented;modifiers;parameterAmount;loc;comment;code
false;public;0;12;;public Endpoint getObject() throws Exception {     if (endpoint == null || !endpoint.isSingleton()) {         // resolve placeholders (but leave the original uri unchanged)         String resolved = getCamelContext().resolvePropertyPlaceholders(uri).         String target = createUri(resolved).         this.endpoint = getCamelContext().getEndpoint(target).         if (endpoint == null) {             throw new NoSuchEndpointException(target).         }     }     return endpoint. }
false;public;0;3;;public Class<Endpoint> getObjectType() {     return Endpoint.class. }
false;public;0;3;;public String getUri() {     return uri. }
true;public;1;3;/**  * Sets the URI to use to resolve the endpoint.  * <p/>  * Notice that additional options can be configured using a series of property.  */ ;/**  * Sets the URI to use to resolve the endpoint.  * <p/>  * Notice that additional options can be configured using a series of property.  */ public void setUri(String uri) {     this.uri = uri. }
false;public;0;3;;public List<PropertyDefinition> getProperties() {     return properties. }
true;public;1;3;/**  * To configure additional endpoint options using a XML style which is similar as configuring Spring or Blueprint beans.  */ ;/**  * To configure additional endpoint options using a XML style which is similar as configuring Spring or Blueprint beans.  */ public void setProperties(List<PropertyDefinition> properties) {     this.properties = properties. }
false;private;1;13;;private String createUri(String uri) throws Exception {     if (properties == null || properties.isEmpty()) {         return uri.     } else {         Map<String, Object> map = new LinkedHashMap<>().         for (PropertyDefinition property : properties) {             // resolve placeholders for each value             String value = getCamelContext().resolvePropertyPlaceholders(property.getValue()).             map.put(property.getKey(), value).         }         return URISupport.appendParametersToURI(uri, map).     } }
