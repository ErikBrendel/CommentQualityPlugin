commented;modifiers;parameterAmount;loc;comment;code
false;public;0;84;;public RedeliveryPolicy getObject() throws Exception {     RedeliveryPolicy answer = new RedeliveryPolicy().     CamelContext context = getCamelContext().     // copy across the properties - if they are set     if (maximumRedeliveries != null) {         answer.setMaximumRedeliveries(CamelContextHelper.parseInteger(context, maximumRedeliveries)).     }     if (redeliveryDelay != null) {         answer.setRedeliveryDelay(CamelContextHelper.parseLong(context, redeliveryDelay)).     }     if (asyncDelayedRedelivery != null) {         if (CamelContextHelper.parseBoolean(context, asyncDelayedRedelivery)) {             answer.asyncDelayedRedelivery().         }     }     if (retriesExhaustedLogLevel != null) {         answer.setRetriesExhaustedLogLevel(retriesExhaustedLogLevel).     }     if (retryAttemptedLogLevel != null) {         answer.setRetryAttemptedLogLevel(retryAttemptedLogLevel).     }     if (retryAttemptedLogInterval != null) {         answer.setRetryAttemptedLogInterval(CamelContextHelper.parseInteger(context, retryAttemptedLogInterval)).     }     if (backOffMultiplier != null) {         answer.setBackOffMultiplier(CamelContextHelper.parseDouble(context, backOffMultiplier)).     }     if (useExponentialBackOff != null) {         answer.setUseExponentialBackOff(CamelContextHelper.parseBoolean(context, useExponentialBackOff)).     }     if (collisionAvoidanceFactor != null) {         answer.setCollisionAvoidanceFactor(CamelContextHelper.parseDouble(context, collisionAvoidanceFactor)).     }     if (useCollisionAvoidance != null) {         answer.setUseCollisionAvoidance(CamelContextHelper.parseBoolean(context, useCollisionAvoidance)).     }     if (maximumRedeliveryDelay != null) {         answer.setMaximumRedeliveryDelay(CamelContextHelper.parseLong(context, maximumRedeliveryDelay)).     }     if (logStackTrace != null) {         answer.setLogStackTrace(CamelContextHelper.parseBoolean(context, logStackTrace)).     }     if (logRetryStackTrace != null) {         answer.setLogRetryStackTrace(CamelContextHelper.parseBoolean(context, logRetryStackTrace)).     }     if (logHandled != null) {         answer.setLogHandled(CamelContextHelper.parseBoolean(context, logHandled)).     }     if (logNewException != null) {         answer.setLogNewException(CamelContextHelper.parseBoolean(context, logNewException)).     }     if (logContinued != null) {         answer.setLogContinued(CamelContextHelper.parseBoolean(context, logContinued)).     }     if (logRetryAttempted != null) {         answer.setLogRetryAttempted(CamelContextHelper.parseBoolean(context, logRetryAttempted)).     }     if (logExhausted != null) {         answer.setLogExhausted(CamelContextHelper.parseBoolean(context, logExhausted)).     }     if (logExhaustedMessageHistory != null) {         answer.setLogExhaustedMessageHistory(CamelContextHelper.parseBoolean(context, logExhaustedMessageHistory)).     }     if (logExhaustedMessageBody != null) {         answer.setLogExhaustedMessageBody(CamelContextHelper.parseBoolean(context, logExhaustedMessageBody)).     }     if (disableRedelivery != null) {         if (CamelContextHelper.parseBoolean(context, disableRedelivery)) {             answer.setMaximumRedeliveries(0).         }     }     if (delayPattern != null) {         answer.setDelayPattern(CamelContextHelper.parseText(context, delayPattern)).     }     if (allowRedeliveryWhileStopping != null) {         answer.setAllowRedeliveryWhileStopping(CamelContextHelper.parseBoolean(context, allowRedeliveryWhileStopping)).     }     if (exchangeFormatterRef != null) {         answer.setExchangeFormatterRef(exchangeFormatterRef).     }     return answer. }
false;public;0;3;;public Class<RedeliveryPolicy> getObjectType() {     return RedeliveryPolicy.class. }
false;public;0;3;;public String getMaximumRedeliveries() {     return maximumRedeliveries. }
false;public;1;3;;public void setMaximumRedeliveries(String maximumRedeliveries) {     this.maximumRedeliveries = maximumRedeliveries. }
false;public;0;3;;public String getRedeliveryDelay() {     return redeliveryDelay. }
false;public;1;3;;public void setRedeliveryDelay(String redeliveryDelay) {     this.redeliveryDelay = redeliveryDelay. }
false;public;0;3;;public String getAsyncDelayedRedelivery() {     return asyncDelayedRedelivery. }
false;public;1;3;;public void setAsyncDelayedRedelivery(String asyncDelayedRedelivery) {     this.asyncDelayedRedelivery = asyncDelayedRedelivery. }
false;public;0;3;;public String getBackOffMultiplier() {     return backOffMultiplier. }
false;public;1;3;;public void setBackOffMultiplier(String backOffMultiplier) {     this.backOffMultiplier = backOffMultiplier. }
false;public;0;3;;public String getUseExponentialBackOff() {     return useExponentialBackOff. }
false;public;1;3;;public void setUseExponentialBackOff(String useExponentialBackOff) {     this.useExponentialBackOff = useExponentialBackOff. }
false;public;0;3;;public String getCollisionAvoidanceFactor() {     return collisionAvoidanceFactor. }
false;public;1;3;;public void setCollisionAvoidanceFactor(String collisionAvoidanceFactor) {     this.collisionAvoidanceFactor = collisionAvoidanceFactor. }
false;public;0;3;;public String getUseCollisionAvoidance() {     return useCollisionAvoidance. }
false;public;1;3;;public void setUseCollisionAvoidance(String useCollisionAvoidance) {     this.useCollisionAvoidance = useCollisionAvoidance. }
false;public;0;3;;public String getMaximumRedeliveryDelay() {     return maximumRedeliveryDelay. }
false;public;1;3;;public void setMaximumRedeliveryDelay(String maximumRedeliveryDelay) {     this.maximumRedeliveryDelay = maximumRedeliveryDelay. }
false;public;0;3;;public LoggingLevel getRetriesExhaustedLogLevel() {     return retriesExhaustedLogLevel. }
false;public;1;3;;public void setRetriesExhaustedLogLevel(LoggingLevel retriesExhaustedLogLevel) {     this.retriesExhaustedLogLevel = retriesExhaustedLogLevel. }
false;public;0;3;;public LoggingLevel getRetryAttemptedLogLevel() {     return retryAttemptedLogLevel. }
false;public;1;3;;public void setRetryAttemptedLogLevel(LoggingLevel retryAttemptedLogLevel) {     this.retryAttemptedLogLevel = retryAttemptedLogLevel. }
false;public;0;3;;public String getRetryAttemptedLogInterval() {     return retryAttemptedLogInterval. }
false;public;1;3;;public void setRetryAttemptedLogInterval(String retryAttemptedLogInterval) {     this.retryAttemptedLogInterval = retryAttemptedLogInterval. }
false;public;0;3;;public String getLogRetryAttempted() {     return logRetryAttempted. }
false;public;1;3;;public void setLogRetryAttempted(String logRetryAttempted) {     this.logRetryAttempted = logRetryAttempted. }
false;public;0;3;;public String getLogStackTrace() {     return logStackTrace. }
false;public;1;3;;public void setLogStackTrace(String logStackTrace) {     this.logStackTrace = logStackTrace. }
false;public;0;3;;public String getLogRetryStackTrace() {     return logRetryStackTrace. }
false;public;1;3;;public void setLogRetryStackTrace(String logRetryStackTrace) {     this.logRetryStackTrace = logRetryStackTrace. }
false;public;0;3;;public String getLogHandled() {     return logHandled. }
false;public;1;3;;public void setLogHandled(String logHandled) {     this.logHandled = logHandled. }
false;public;0;3;;public String getLogNewException() {     return logNewException. }
false;public;1;3;;public void setLogNewException(String logNewException) {     this.logNewException = logNewException. }
false;public;0;3;;public String getLogContinued() {     return logContinued. }
false;public;1;3;;public void setLogContinued(String logContinued) {     this.logContinued = logContinued. }
false;public;0;3;;public String getLogExhausted() {     return logExhausted. }
false;public;1;3;;public void setLogExhausted(String logExhausted) {     this.logExhausted = logExhausted. }
false;public;0;3;;public String getLogExhaustedMessageHistory() {     return logExhaustedMessageHistory. }
false;public;1;3;;public void setLogExhaustedMessageHistory(String logExhaustedMessageHistory) {     this.logExhaustedMessageHistory = logExhaustedMessageHistory. }
false;public;0;3;;public String getLogExhaustedMessageBody() {     return logExhaustedMessageBody. }
false;public;1;3;;public void setLogExhaustedMessageBody(String logExhaustedMessageBody) {     this.logExhaustedMessageBody = logExhaustedMessageBody. }
false;public;0;3;;public String getDisableRedelivery() {     return disableRedelivery. }
true;public;1;3;/**  * Disables redelivery (same as setting maximum redeliveries to 0)  */ ;/**  * Disables redelivery (same as setting maximum redeliveries to 0)  */ public void setDisableRedelivery(String disableRedelivery) {     this.disableRedelivery = disableRedelivery. }
false;public;0;3;;public String getDelayPattern() {     return delayPattern. }
false;public;1;3;;public void setDelayPattern(String delayPattern) {     this.delayPattern = delayPattern. }
false;public;0;3;;public String getAllowRedeliveryWhileStopping() {     return allowRedeliveryWhileStopping. }
false;public;1;3;;public void setAllowRedeliveryWhileStopping(String allowRedeliveryWhileStopping) {     this.allowRedeliveryWhileStopping = allowRedeliveryWhileStopping. }
false;public;0;3;;public String getExchangeFormatterRef() {     return exchangeFormatterRef. }
false;public;1;3;;public void setExchangeFormatterRef(String exchangeFormatterRef) {     this.exchangeFormatterRef = exchangeFormatterRef. }
