commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public String getProvider() {     return provider. }
false;public;1;3;;public void setProvider(String value) {     this.provider = value. }
false;public;0;3;;public String getAlgorithm() {     return algorithm. }
false;public;1;3;;public void setAlgorithm(String value) {     this.algorithm = value. }
false;public;0;3;;public String getTrustManager() {     return trustManager. }
false;public;1;3;;public void setTrustManager(String trustManager) {     this.trustManager = trustManager. }
false;public;0;11;;@Override public TrustManagersParameters getObject() throws Exception {     if (isSingleton()) {         if (instance == null) {             instance = createInstance().         }         return instance.     } else {         return createInstance().     } }
false;public;0;4;;@Override public Class<TrustManagersParameters> getObjectType() {     return TrustManagersParameters.class. }
false;protected;0;18;;protected TrustManagersParameters createInstance() throws Exception {     TrustManagersParameters newInstance = new TrustManagersParameters().     newInstance.setAlgorithm(algorithm).     if (getKeyStore() != null) {         getKeyStore().setCamelContext(getCamelContext()).         newInstance.setKeyStore(getKeyStore().getObject()).     }     newInstance.setProvider(provider).     newInstance.setCamelContext(getCamelContext()).     if (trustManager != null) {         TrustManager tm = CamelContextHelper.mandatoryLookup(getCamelContext(), trustManager, TrustManager.class).         newInstance.setTrustManager(tm).     }     return newInstance. }
false;protected,abstract;0;1;;protected abstract AbstractKeyStoreParametersFactoryBean getKeyStore().
