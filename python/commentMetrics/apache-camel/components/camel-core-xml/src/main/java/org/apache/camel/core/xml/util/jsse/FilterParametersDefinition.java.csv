commented;modifiers;parameterAmount;loc;comment;code
true;public;0;6;/**  * Returns a live copy of the list of patterns to include.  * The list of excludes takes precedence over the include patterns.  *  * @return the list of patterns to include  */ ;/**  * Returns a live copy of the list of patterns to include.  * The list of excludes takes precedence over the include patterns.  *  * @return the list of patterns to include  */ public List<String> getInclude() {     if (this.include == null) {         this.include = new ArrayList<>().     }     return this.include. }
true;public;0;6;/**  * Returns a live copy of the list of patterns to exclude.  * This list takes precedence over the include patterns.  *  * @return the list of patterns to exclude  */ ;/**  * Returns a live copy of the list of patterns to exclude.  * This list takes precedence over the include patterns.  *  * @return the list of patterns to exclude  */ public List<String> getExclude() {     if (exclude == null) {         exclude = new ArrayList<>().     }     return this.exclude. }
