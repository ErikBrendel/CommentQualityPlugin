commented;modifiers;parameterAmount;loc;comment;code
false;public;0;10;;@Test public void testDumpModelAsXml() throws Exception {     String xml = ModelHelper.dumpModelAsXml(context, context.getRouteDefinition("myRoute")).     assertNotNull(xml).     log.info(xml).     assertTrue(xml.contains("<correlationExpression>")).     assertTrue(xml.contains("<header>userId</header>")).     assertTrue(xml.contains("</correlationExpression>")). }
false;public;0;9;;@Override public void configure() throws Exception {     from("direct:start").routeId("myRoute").to("log:input").aggregate(header("userId"), new GroupedExchangeAggregationStrategy()).completionSize(3).to("mock:aggregate").end().to("mock:result"). }
false;protected;0;14;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").routeId("myRoute").to("log:input").aggregate(header("userId"), new GroupedExchangeAggregationStrategy()).completionSize(3).to("mock:aggregate").end().to("mock:result").         }     }. }
