commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public boolean isUseRouteBuilder() {     return false. }
false;protected;0;6;;@Override protected JndiRegistry createRegistry() throws Exception {     JndiRegistry jndi = super.createRegistry().     jndi.bind("dummy-rest", new DummyRestConsumerFactory()).     return jndi. }
false;public;0;11;;@Override public void configure() throws Exception {     restConfiguration().host("localhost").     rest("/users").get("{id}").to("log:foo").post().to("log:foo").get("").to("log:foo").get("{id}").to("log:foo"). }
false;public;0;21;;@Test public void testDuplicateGet() throws Exception {     try {         context.addRoutes(new RouteBuilder() {              @Override             public void configure() throws Exception {                 restConfiguration().host("localhost").                 rest("/users").get("{id}").to("log:foo").post().to("log:foo").get("").to("log:foo").get("{id}").to("log:foo").             }         }).         fail("Should throw exception").     } catch (IllegalArgumentException e) {         assertEquals("Duplicate verb detected in rest-dsl: get:{id}", e.getMessage()).     } }
false;public;0;12;;@Override public void configure() throws Exception {     restConfiguration().host("localhost").     rest("/users").get("{id}").to("log:foo").post().to("log:foo").get("").to("log:foo").put().to("log:foo").post().to("log:foo"). }
false;public;0;22;;@Test public void testDuplicatePost() throws Exception {     try {         context.addRoutes(new RouteBuilder() {              @Override             public void configure() throws Exception {                 restConfiguration().host("localhost").                 rest("/users").get("{id}").to("log:foo").post().to("log:foo").get("").to("log:foo").put().to("log:foo").post().to("log:foo").             }         }).         fail("Should throw exception").     } catch (IllegalArgumentException e) {         assertEquals("Duplicate verb detected in rest-dsl: post", e.getMessage()).     } }
