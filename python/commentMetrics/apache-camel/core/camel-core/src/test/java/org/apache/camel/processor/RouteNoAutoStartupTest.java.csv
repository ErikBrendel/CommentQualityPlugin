commented;modifiers;parameterAmount;loc;comment;code
false;public;0;10;;@Test public void testRouteNotAutoStarted() throws Exception {     MockEndpoint mock = getMockEndpoint("mock:result").     mock.expectedMessageCount(0).     mock.setAssertPeriod(50).     template.sendBody("direct:start", "Hello World").     assertMockEndpointsSatisfied(). }
false;public;0;17;;@Test public void testRouteNotAutoStartedThenStarted() throws Exception {     MockEndpoint mock = getMockEndpoint("mock:result").     mock.expectedMessageCount(0).     mock.setAssertPeriod(50).     template.sendBody("direct:start", "Hello World").     assertMockEndpointsSatisfied().     mock.reset().     mock.expectedMessageCount(1).     context.getRouteController().startRoute("myRoute").     assertMockEndpointsSatisfied(). }
false;public;0;6;;@Override public void configure() throws Exception {     from("direct:start").to("seda:foo").     from("seda:foo").noAutoStartup().id("myRoute").to("mock:result"). }
false;protected;0;11;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").to("seda:foo").             from("seda:foo").noAutoStartup().id("myRoute").to("mock:result").         }     }. }
