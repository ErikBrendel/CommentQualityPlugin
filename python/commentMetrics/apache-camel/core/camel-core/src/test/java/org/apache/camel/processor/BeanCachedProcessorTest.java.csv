commented;modifiers;parameterAmount;loc;comment;code
false;public;0;8;;@Override public void configure() {     from("direct:noCache").to("bean:something?cache=false").     from("direct:cached").to("bean:something?cache=true"). }
false;protected;0;13;;@Override protected RouteBuilder createRouteBuilder() {     return new RouteBuilder() {          @Override         public void configure() {             from("direct:noCache").to("bean:something?cache=false").             from("direct:cached").to("bean:something?cache=true").         }     }. }
false;protected;0;8;;@Override protected JndiRegistry createRegistry() throws Exception {     JndiRegistry registry = super.createRegistry().     registry.bind("something", new MyBean()).     this.context = registry.getContext().     this.registry = registry.     return registry. }
false;public;0;11;;@Test public void testFreshBeanInContext() throws Exception {     // Just make sure the bean processor doesn't work if the cached is false     MyBean originalInstance = registry.lookupByNameAndType("something", MyBean.class).     template.sendBody("direct:noCache", null).     context.unbind("something").     context.bind("something", new MyBean()).     // Make sure we can get the object from the registry     assertNotSame(registry.lookupByName("something"), originalInstance).     template.sendBody("direct:noCache", null). }
false;public;0;17;;@Test public void testBeanWithCached() throws Exception {     // Just make sure the bean processor doesn't work if the cached is false     MyBean originalInstance = registry.lookupByNameAndType("something", MyBean.class).     template.sendBody("direct:cached", null).     context.unbind("something").     context.bind("something", new MyBean()).     // Make sure we can get the object from the registry     assertNotSame(registry.lookupByName("something"), originalInstance).     try {         template.sendBody("direct:cached", null).         fail("The IllegalStateException is expected").     } catch (CamelExecutionException ex) {         assertTrue("IllegalStateException is expected!", ex.getCause() instanceof IllegalStateException).         assertEquals("This bean is not supported to be invoked again!", ex.getCause().getMessage()).     } }
false;public;1;7;;public void process(Exchange exchange) throws Exception {     if (invoked) {         throw new IllegalStateException("This bean is not supported to be invoked again!").     } else {         invoked = true.     } }
