commented;modifiers;parameterAmount;loc;comment;code
false;public;0;27;;@Test public void testLoadRouteFromXml() throws Exception {     assertNotNull("Existing foo route should be there", context.getRoute("foo")).     assertEquals(1, context.getRoutes().size()).     // test that existing route works     MockEndpoint foo = getMockEndpoint("mock:foo").     foo.expectedBodiesReceived("Hello World").     template.sendBody("direct:foo", "Hello World").     foo.assertIsSatisfied().     // START SNIPPET: e1     // load route from XML and add them to the existing camel context     InputStream is = getClass().getResourceAsStream("barRoute.xml").     RoutesDefinition routes = context.loadRoutesDefinition(is).     context.addRouteDefinitions(routes.getRoutes()).     // END SNIPPET: e1     assertNotNull("Loaded bar route should be there", context.getRoute("bar")).     assertEquals(2, context.getRoutes().size()).     // test that loaded route works     MockEndpoint bar = getMockEndpoint("mock:bar").     bar.expectedBodiesReceived("Bye World").     template.sendBody("direct:bar", "Bye World").     bar.assertIsSatisfied(). }
false;public;0;5;;@Override public void configure() throws Exception {     from("direct:foo").routeId("foo").to("mock:foo"). }
false;protected;0;10;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:foo").routeId("foo").to("mock:foo").         }     }. }
