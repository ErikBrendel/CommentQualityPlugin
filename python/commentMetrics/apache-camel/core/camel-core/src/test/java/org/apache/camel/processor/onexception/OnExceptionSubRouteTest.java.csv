commented;modifiers;parameterAmount;loc;comment;code
false;public;0;28;;@Override public void configure() throws Exception {     // START SNIPPET: e1     // default should errors go to mock:error     errorHandler(deadLetterChannel("mock:error")).     // here we start the routing with the consumer     from("direct:start").onException(MyTechnicalException.class).maximumRedeliveries(0).handled(true).end().onException(MyFunctionalException.class).maximumRedeliveries(0).handled(true).to("bean:myOwnHandler").end().choice().when().xpath("//type = 'myType'").to("bean:myServiceBean").end().to("mock:result"). // END SNIPPET: e1 }
false;protected;0;33;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             // START SNIPPET: e1             // default should errors go to mock:error             errorHandler(deadLetterChannel("mock:error")).             // here we start the routing with the consumer             from("direct:start").onException(MyTechnicalException.class).maximumRedeliveries(0).handled(true).end().onException(MyFunctionalException.class).maximumRedeliveries(0).handled(true).to("bean:myOwnHandler").end().choice().when().xpath("//type = 'myType'").to("bean:myServiceBean").end().to("mock:result").         // END SNIPPET: e1         }     }. }
