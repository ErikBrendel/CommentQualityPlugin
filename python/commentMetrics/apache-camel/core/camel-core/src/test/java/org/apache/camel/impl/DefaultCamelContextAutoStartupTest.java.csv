commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public void configure() throws Exception {     from("direct:start").routeId("foo").to("mock:result"). }
false;public;0;33;;// TODO: We should have a JMX test of this as well @Test public void testAutoStartupFalseContextStart() throws Exception {     DefaultCamelContext camel = new DefaultCamelContext(false).     camel.disableJMX().     camel.setAutoStartup(false).     camel.addRoutes(new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").routeId("foo").to("mock:result").         }     }).     camel.start().     assertEquals(true, camel.isStarted()).     assertEquals(1, camel.getRoutes().size()).     assertEquals(true, camel.getRouteController().getRouteStatus("foo").isStopped()).     // now start all routes     camel.getRouteController().startAllRoutes().     assertEquals(true, camel.getRouteController().getRouteStatus("foo").isStarted()).     // and now its started we can test that it works by sending in a message to the route     MockEndpoint mock = camel.getEndpoint("mock:result", MockEndpoint.class).     mock.expectedMessageCount(1).     camel.createProducerTemplate().sendBody("direct:start", "Hello World").     mock.assertIsSatisfied().     camel.stop(). }
false;public;0;4;;@Override public void configure() throws Exception {     from("direct:start").routeId("foo").to("mock:result"). }
false;public;0;33;;@Test public void testAutoStartupFalseRouteStart() throws Exception {     DefaultCamelContext camel = new DefaultCamelContext(false).     camel.disableJMX().     camel.setAutoStartup(false).     camel.addRoutes(new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").routeId("foo").to("mock:result").         }     }).     camel.start().     assertEquals(true, camel.isStarted()).     assertEquals(1, camel.getRoutes().size()).     assertEquals(true, camel.getRouteController().getRouteStatus("foo").isStopped()).     // now start the routes     camel.startRoute("foo").     assertEquals(true, camel.getRouteController().getRouteStatus("foo").isStarted()).     // and now its started we can test that it works by sending in a message to the route     MockEndpoint mock = camel.getEndpoint("mock:result", MockEndpoint.class).     mock.expectedMessageCount(1).     camel.createProducerTemplate().sendBody("direct:start", "Hello World").     mock.assertIsSatisfied().     camel.stop(). }
false;public;0;4;;@Override public void configure() throws Exception {     from("direct:start").routeId("foo").to("mock:result"). }
false;public;0;27;;@Test public void testAutoStartupTrue() throws Exception {     DefaultCamelContext camel = new DefaultCamelContext(false).     camel.disableJMX().     camel.setAutoStartup(true).     camel.addRoutes(new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").routeId("foo").to("mock:result").         }     }).     camel.start().     assertEquals(true, camel.isStarted()).     assertEquals(1, camel.getRoutes().size()).     assertEquals(true, camel.getRouteController().getRouteStatus("foo").isStarted()).     MockEndpoint mock = camel.getEndpoint("mock:result", MockEndpoint.class).     mock.expectedMessageCount(1).     camel.createProducerTemplate().sendBody("direct:start", "Hello World").     mock.assertIsSatisfied().     camel.stop(). }
false;public;0;4;;@Override public void configure() throws Exception {     from("direct:start").routeId("foo").autoStartup(true).to("mock:result"). }
false;public;0;35;;@Test public void testAutoStartupFalseRouteOverride() throws Exception {     DefaultCamelContext camel = new DefaultCamelContext(false).     camel.disableJMX().     camel.setAutoStartup(false).     camel.addRoutes(new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").routeId("foo").autoStartup(true).to("mock:result").         }     }).     camel.start().     // this is special, when you have auto startup=false on CamelContext, then NO routes is started     assertEquals(true, camel.isStarted()).     assertEquals(1, camel.getRoutes().size()).     assertEquals(true, camel.getRouteController().getRouteStatus("foo").isStopped()).     assertEquals(false, camel.getRouteController().getRouteStatus("foo").isStarted()).     // now start all the routes     camel.getRouteController().startAllRoutes().     assertEquals(true, camel.getRouteController().getRouteStatus("foo").isStarted()).     MockEndpoint mock = camel.getEndpoint("mock:result", MockEndpoint.class).     mock.expectedMessageCount(1).     camel.createProducerTemplate().sendBody("direct:start", "Hello World").     mock.assertIsSatisfied().     camel.stop(). }
