commented;modifiers;parameterAmount;loc;comment;code
false;public;0;30;;@Test public void testRestart() throws Exception {     assertTrue(context.getStatus().isStarted()).     assertFalse(context.getStatus().isStopped()).     assertEquals(1, context.getRoutes().size()).     getMockEndpoint("mock:result").expectedMessageCount(1).     template.sendBody("direct:start", "Hello World").     assertMockEndpointsSatisfied().     // now stop     context.stop().     assertFalse(context.getStatus().isStarted()).     assertTrue(context.getStatus().isStopped()).     assertEquals(0, context.getRoutes().size()).     // now start     context.start().     assertTrue(context.getStatus().isStarted()).     assertFalse(context.getStatus().isStopped()).     assertEquals(1, context.getRoutes().size()).     // must obtain a new template     template = context.createProducerTemplate().     // should still work     getMockEndpoint("mock:result").expectedMessageCount(1).     template.sendBody("direct:start", "Bye World").     assertMockEndpointsSatisfied(). }
false;public;0;5;;@Override public void configure() throws Exception {     from("direct:start").routeId("foo").to("mock:result"). }
false;protected;0;10;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").routeId("foo").to("mock:result").         }     }. }
