commented;modifiers;parameterAmount;loc;comment;code
false;public;0;5;;@Test public void testNoParameters() throws Exception {     Endpoint endpoint = context.getEndpoint("timer://foo").     assertNotNull("Should have created an endpoint", endpoint). }
false;public;0;9;;@Test public void testUnknownParameter() throws Exception {     try {         context.getEndpoint("timer://foo?delay=250&unknown=1&period=500").         fail("Should have thrown ResolveEndpointFailedException").     } catch (ResolveEndpointFailedException e) {     // ok     } }
false;public;0;9;;@Test public void testDoubleAmpersand() throws Exception {     try {         context.getEndpoint("timer://foo?delay=250&&period=500").         fail("Should have thrown ResolveEndpointFailedException").     } catch (ResolveEndpointFailedException e) {     // ok     } }
false;public;0;9;;@Test public void testTrailingAmpersand() throws Exception {     try {         context.getEndpoint("timer://foo?delay=250&period=500&").         fail("Should have thrown ResolveEndpointFailedException").     } catch (ResolveEndpointFailedException e) {     // ok     } }
false;public;0;28;;@Test public void testScheduledPollConsumerOptions() throws Exception {     // test that we support both notations of scheduled polling consumer options     // with consumer. prefix     Endpoint endpint = context.getEndpoint("file://target/data/foo?consumer.delay=1000").     assertNotNull(endpint).     endpint = context.getEndpoint("file://target/data/foo?consumer.delay=1000&consumer.initialDelay=5000").     assertNotNull(endpint).     endpint = context.getEndpoint("file://target/data/foo?consumer.delay=1000&consumer.initialDelay=5000&consumer.useFixedDelay=false").     assertNotNull(endpint).     // without consumer. prefix     endpint = context.getEndpoint("file://foo2?delay=1000").     assertNotNull(endpint).     endpint = context.getEndpoint("file://foo2?delay=1000&initialDelay=5000").     assertNotNull(endpint).     endpint = context.getEndpoint("file://foo2?delay=1000&initialDelay=5000&useFixedDelay=false").     assertNotNull(endpint).     // combined with and without consumer. prefix     endpint = context.getEndpoint("file://foo3?delay=1000&consumer.initialDelay=5000&useFixedDelay=false").     assertNotNull(endpint). }
