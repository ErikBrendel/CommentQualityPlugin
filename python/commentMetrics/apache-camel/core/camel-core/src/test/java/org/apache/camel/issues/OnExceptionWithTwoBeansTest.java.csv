commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;6;;protected JndiRegistry createRegistry() throws Exception {     JndiRegistry registry = new JndiRegistry(createJndiContext()).     registry.bind("checkin", new MyBean1()).     registry.bind("handler", new MyBean2()).     return registry. }
false;public;0;8;;@Test public void testOnExceptionFirstBean() throws Exception {     getMockEndpoint("mock:error").expectedMessageCount(1).     getMockEndpoint("mock:bean").expectedMessageCount(0).     getMockEndpoint("mock:result").expectedMessageCount(0).     template.sendBody("direct:start", "illegal").     assertMockEndpointsSatisfied(). }
false;public;0;8;;@Test public void testOnExceptionSecondBean() throws Exception {     getMockEndpoint("mock:error").expectedMessageCount(1).     getMockEndpoint("mock:bean").expectedMessageCount(1).     getMockEndpoint("mock:result").expectedMessageCount(0).     template.sendBody("direct:start", "handle").     assertMockEndpointsSatisfied(). }
false;public;0;15;;@Override public void configure() throws Exception {     onException(IllegalArgumentException.class).handled(true).setBody().constant("Handled").to("mock:error").end().     from("direct:start").unmarshal().string().to("bean:checkin").to("mock:bean").to("bean:handler").to("mock:result"). }
false;protected;0;20;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             onException(IllegalArgumentException.class).handled(true).setBody().constant("Handled").to("mock:error").end().             from("direct:start").unmarshal().string().to("bean:checkin").to("mock:bean").to("bean:handler").to("mock:result").         }     }. }
false;public;1;6;;public String checkin(String message) {     if ("illegal".equals(message)) {         throw new IllegalArgumentException().     }     return message. }
false;public;1;7;;public String handle(String message) {     if ("handle".equals(message)) {         throw new IllegalArgumentException().     }     return message. }
