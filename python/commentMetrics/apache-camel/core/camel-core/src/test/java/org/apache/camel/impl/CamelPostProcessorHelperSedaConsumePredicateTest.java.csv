commented;modifiers;parameterAmount;loc;comment;code
false;public;0;22;;@Test public void testConsumePredicate() throws Exception {     CamelPostProcessorHelper helper = new CamelPostProcessorHelper(context).     MyConsumeBean my = new MyConsumeBean().     Method method = my.getClass().getMethod("low", String.class).     helper.consumerInjection(method, my, "foo").     method = my.getClass().getMethod("high", String.class).     helper.consumerInjection(method, my, "foo").     getMockEndpoint("mock:low").expectedBodiesReceived("17", "89", "39").     getMockEndpoint("mock:high").expectedBodiesReceived("219", "112").     template.sendBody("seda:foo", "17").     template.sendBody("seda:foo", "219").     template.sendBody("seda:foo", "89").     template.sendBody("seda:foo", "112").     template.sendBody("seda:foo", "39").     assertMockEndpointsSatisfied(). }
false;public;0;21;;@Test public void testConsumePredicateDrop() throws Exception {     CamelPostProcessorHelper helper = new CamelPostProcessorHelper(context).     MyConsumeBean my = new MyConsumeBean().     Method method = my.getClass().getMethod("low", String.class).     helper.consumerInjection(method, my, "foo").     method = my.getClass().getMethod("high", String.class).     helper.consumerInjection(method, my, "foo").     getMockEndpoint("mock:low").expectedBodiesReceived("17").     getMockEndpoint("mock:high").expectedBodiesReceived("112").     template.sendBody("seda:foo", "17").     // should be dropped as it does not match any predicates     template.sendBody("seda:foo", "-1").     template.sendBody("seda:foo", "112").     assertMockEndpointsSatisfied(). }
false;public;1;4;;@Consume(uri = "seda:foo", predicate = "${body} >= 0 && ${body} < 100") public void low(String body) {     template.sendBody("mock:low", body). }
false;public;1;4;;@Consume(uri = "seda:foo", predicate = "${body} >= 100") public void high(String body) {     template.sendBody("mock:high", body). }
