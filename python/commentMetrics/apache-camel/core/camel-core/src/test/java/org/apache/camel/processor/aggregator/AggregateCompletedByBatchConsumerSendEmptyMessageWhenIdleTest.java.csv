commented;modifiers;parameterAmount;loc;comment;code
false;public;0;10;;@Test public void testBatchConsumerSendEmptyMessageWhenIdle() throws Exception {     MockEndpoint mock = getMockEndpoint("mock:result").     mock.expectedMinimumMessageCount(1).     mock.allMessages().body().isNull().     mock.allMessages().header(Exchange.AGGREGATED_COMPLETED_BY).isEqualTo("consumer").     mock.allMessages().header(Exchange.AGGREGATED_SIZE).isEqualTo(1).     assertMockEndpointsSatisfied(). }
false;public;0;7;;@Override public void configure() throws Exception {     from("file:target/data/batch?initialDelay=0&delay=10&sendEmptyMessageWhenIdle=true").aggregate(constant(true), new UseLatestAggregationStrategy()).completionFromBatchConsumer().to("mock:result"). }
false;protected;0;12;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("file:target/data/batch?initialDelay=0&delay=10&sendEmptyMessageWhenIdle=true").aggregate(constant(true), new UseLatestAggregationStrategy()).completionFromBatchConsumer().to("mock:result").         }     }. }
