commented;modifiers;parameterAmount;loc;comment;code
false;public;0;10;;public void testFailOver() throws Exception {     getMockEndpoint("mock:a").expectedMessageCount(1).     getMockEndpoint("mock:b").expectedMessageCount(1).     String out = template.requestBody("direct:start", "Hello World", String.class).     assertMockEndpointsSatisfied().     assertEquals("Bye World", out). }
false;public;1;3;;public void process(Exchange exchange) throws Exception {     throw new IOException("Forced"). }
false;public;0;15;;@Override public void configure() throws Exception {     from("direct:start").process(new MyFailOverProcessor(template, "direct:a", "direct:b")).     // always fail     from("direct:a").to("mock:a").process(new Processor() {          public void process(Exchange exchange) throws Exception {             throw new IOException("Forced").         }     }).     // return a constant response     from("direct:b").to("mock:b").transform(constant("Bye World")). }
false;protected;0;20;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").process(new MyFailOverProcessor(template, "direct:a", "direct:b")).             // always fail             from("direct:a").to("mock:a").process(new Processor() {                  public void process(Exchange exchange) throws Exception {                     throw new IOException("Forced").                 }             }).             // return a constant response             from("direct:b").to("mock:b").transform(constant("Bye World")).         }     }. }
false;public;1;14;;public void process(Exchange exchange) throws Exception {     for (String uri : uris) {         // reset exception to avoid it being a problem if/when we retry         exchange.setException(null).         // send the exchange to the next uri in the failover list         template.send(uri, exchange).         if (exchange.getException() == null) {             // processed okay so we are finished             return.         }     } }
