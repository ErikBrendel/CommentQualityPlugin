commented;modifiers;parameterAmount;loc;comment;code
false;public;0;18;;@Test public void testCustomId() throws Exception {     MockEndpoint mock = getMockEndpoint("mock:result").     mock.expectedBodiesReceived("Hello World").     template.sendBody("direct:start", "Hello World").     assertMockEndpointsSatisfied().     // the problem is that they want to set A as ID on the "direct:start" endpoint     String id = context.getRouteDefinitions().get(0).getId().     String id2 = context.getRouteDefinitions().get(0).getOutputs().get(0).getId().     String id3 = context.getRouteDefinitions().get(0).getOutputs().get(1).getId().     assertEquals("A", id).     assertEquals("B", id2).     assertEquals("C", id3). }
false;public;0;6;;@Override public void configure() throws Exception {     from("direct:start").id("A").to("log:foo").id("B").to("mock:result").id("C"). }
false;protected;0;11;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").id("A").to("log:foo").id("B").to("mock:result").id("C").         }     }. }
