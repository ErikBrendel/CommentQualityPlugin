commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;6;;@Override protected JndiRegistry createRegistry() throws Exception {     JndiRegistry jndi = super.createRegistry().     jndi.bind("cbrBean", new MyCBRBean()).     return jndi. }
false;public;0;17;;@Test public void testCBR() throws Exception {     check.set(false).     check2.set(false).     getMockEndpoint("mock:dead").expectedMessageCount(0).     getMockEndpoint("mock:foo").expectedBodiesReceived("Hello Foo").     getMockEndpoint("mock:bar").expectedBodiesReceived("Hello Bar").     template.sendBodyAndHeader("direct:start", "Hello Foo", "foo", "bar").     template.sendBodyAndHeader("direct:start", "Hello Bar", "foo", "other").     assertMockEndpointsSatisfied().     assertTrue(check.get()).     assertTrue(check2.get()). }
false;public;0;17;;@Test public void testCBRKaboom() throws Exception {     check.set(false).     check2.set(false).     getMockEndpoint("mock:foo").expectedMessageCount(0).     getMockEndpoint("mock:foo2").expectedMessageCount(0).     getMockEndpoint("mock:bar").expectedMessageCount(0).     getMockEndpoint("mock:dead").expectedMessageCount(1).     template.sendBodyAndHeader("direct:start", "Hello Foo", "foo", "Kaboom").     assertMockEndpointsSatisfied().     assertTrue(check.get()).     assertFalse(check2.get()). }
false;public;0;14;;@Override public void configure() throws Exception {     errorHandler(deadLetterChannel("mock:dead")).     from("direct:start").choice().when().method("cbrBean", "checkHeader").to("mock:foo").when().method("cbrBean", "checkHeader2").to("mock:foo2").otherwise().to("mock:bar").end(). }
false;protected;0;19;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             errorHandler(deadLetterChannel("mock:dead")).             from("direct:start").choice().when().method("cbrBean", "checkHeader").to("mock:foo").when().method("cbrBean", "checkHeader2").to("mock:foo2").otherwise().to("mock:bar").end().         }     }. }
false;public;1;12;;public boolean checkHeader(Exchange exchange) {     check.set(true).     Message inMsg = exchange.getIn().     String foo = (String) inMsg.getHeader("foo").     if ("Kaboom".equalsIgnoreCase(foo)) {         throw new IllegalArgumentException("Forced").     }     return foo.equals("bar"). }
false;public;1;12;;public boolean checkHeader2(Exchange exchange) {     check2.set(true).     Message inMsg = exchange.getIn().     String foo = (String) inMsg.getHeader("foo").     if ("Kaboom".equalsIgnoreCase(foo)) {         throw new IllegalArgumentException("Forced").     }     return foo.equals("bar"). }
