commented;modifiers;parameterAmount;loc;comment;code
false;public;0;9;;@Test public void testOnExceptionWithGenericException() throws Exception {     getMockEndpoint("mock:exception").expectedMessageCount(0).     getMockEndpoint("mock:ue").expectedMessageCount(1).     template.sendBody("direct:start", "Hello World").     assertMockEndpointsSatisfied(). }
false;public;0;9;;@Override public void configure() throws Exception {     onException(MyUnmarshalException.class).handled(true).to("mock:ue").     onException(Exception.class).handled(true).to("mock:exception").     from("direct:start").throwException(new MyUnmarshalException("Could not unmarshal", new IllegalArgumentException("Damn"))). }
false;protected;0;14;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             onException(MyUnmarshalException.class).handled(true).to("mock:ue").             onException(Exception.class).handled(true).to("mock:exception").             from("direct:start").throwException(new MyUnmarshalException("Could not unmarshal", new IllegalArgumentException("Damn"))).         }     }. }
