commented;modifiers;parameterAmount;loc;comment;code
false;public;0;7;;@Test public void testDelay() throws Exception {     MockEndpoint mock = getMockEndpoint("mock:result").     mock.expectedMinimumMessageCount(1).     assertMockEndpointsSatisfied(). }
false;public;0;5;;@Override public void configure() throws Exception {     from("timer://foo?delay=10&period=10").to("mock:result"). }
false;protected;0;10;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("timer://foo?delay=10&period=10").to("mock:result").         }     }. }
