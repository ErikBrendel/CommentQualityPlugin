commented;modifiers;parameterAmount;loc;comment;code
false;public;0;5;;@Override public void configure() throws Exception {     // insert at first the given piece of route to the existing route     weaveAddFirst().to("mock:a").transform(constant("Bye World")). }
false;public;0;21;;@Test public void testWeaveAddFirst() throws Exception {     // START SNIPPET: e1     RouteReifier.adviceWith(context.getRouteDefinitions().get(0), context, new AdviceWithRouteBuilder() {          @Override         public void configure() throws Exception {             // insert at first the given piece of route to the existing route             weaveAddFirst().to("mock:a").transform(constant("Bye World")).         }     }).     // END SNIPPET: e1     getMockEndpoint("mock:a").expectedBodiesReceived("Hello World").     getMockEndpoint("mock:foo").expectedBodiesReceived("Bye World").     getMockEndpoint("mock:bar").expectedBodiesReceived("Bye World").     getMockEndpoint("mock:result").expectedBodiesReceived("Bye World").     template.sendBody("direct:start", "Hello World").     assertMockEndpointsSatisfied(). }
false;public;0;5;;@Override public void configure() throws Exception {     // insert at the end of the existing route, the given piece of route     weaveAddLast().to("mock:a").transform(constant("Bye World")). }
false;public;0;22;;@Test public void testWeaveAddLast() throws Exception {     // START SNIPPET: e2     RouteReifier.adviceWith(context.getRouteDefinitions().get(0), context, new AdviceWithRouteBuilder() {          @Override         public void configure() throws Exception {             // insert at the end of the existing route, the given piece of route             weaveAddLast().to("mock:a").transform(constant("Bye World")).         }     }).     // END SNIPPET: e2     getMockEndpoint("mock:a").expectedBodiesReceived("Hello World").     getMockEndpoint("mock:foo").expectedBodiesReceived("Hello World").     getMockEndpoint("mock:bar").expectedBodiesReceived("Hello World").     getMockEndpoint("mock:result").expectedBodiesReceived("Hello World").     Object out = template.requestBody("direct:start", "Hello World").     assertEquals("Bye World", out).     assertMockEndpointsSatisfied(). }
false;public;0;9;;@Override public void configure() throws Exception {     // START SNIPPET: e5     from("direct:start").to("mock:foo").to("mock:bar").id("bar").to("mock:result"). // END SNIPPET: e5 }
false;protected;0;14;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             // START SNIPPET: e5             from("direct:start").to("mock:foo").to("mock:bar").id("bar").to("mock:result").         // END SNIPPET: e5         }     }. }
