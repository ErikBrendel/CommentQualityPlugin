commented;modifiers;parameterAmount;loc;comment;code
false;public;0;9;;@Test public void testRecipientListAggregationStrategy() throws Exception {     MockEndpoint mock = getMockEndpoint("mock:result").     mock.expectedBodiesReceived("a+b+c").     template.sendBodyAndHeader("direct:start", "Hello World", "foo", "direct:a,direct:b,direct:c").     assertMockEndpointsSatisfied(). }
false;public;0;10;;@Override public void configure() throws Exception {     from("direct:start").recipientList(header("foo")).aggregationStrategy(new BodyInAggregatingStrategy()).to("mock:result").     from("direct:a").transform(constant("a")).     from("direct:b").transform(constant("b")).     from("direct:c").transform(constant("c")). }
false;protected;0;15;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").recipientList(header("foo")).aggregationStrategy(new BodyInAggregatingStrategy()).to("mock:result").             from("direct:a").transform(constant("a")).             from("direct:b").transform(constant("b")).             from("direct:c").transform(constant("c")).         }     }. }
