commented;modifiers;parameterAmount;loc;comment;code
false;public;0;9;;@Test public void testInterceptSendToEndpoint() throws Exception {     getMockEndpoint("mock:foo").expectedMessageCount(1).     getMockEndpoint("mock:result").expectedMessageCount(1).     template.sendBody("direct:start", "Hello World").     assertMockEndpointsSatisfied(). }
false;public;0;6;;@Override public void configure() throws Exception {     interceptSendToEndpoint("{{cool.end}}").to("mock:foo").     from("direct:start").to("{{cool.end}}"). }
false;protected;0;11;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             interceptSendToEndpoint("{{cool.end}}").to("mock:foo").             from("direct:start").to("{{cool.end}}").         }     }. }
false;protected;0;6;;@Override protected CamelContext createCamelContext() throws Exception {     CamelContext context = super.createCamelContext().     context.addComponent("properties", new PropertiesComponent("classpath:org/apache/camel/component/properties/myproperties.properties")).     return context. }
