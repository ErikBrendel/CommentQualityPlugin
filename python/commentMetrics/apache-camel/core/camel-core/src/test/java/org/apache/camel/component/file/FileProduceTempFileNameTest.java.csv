commented;modifiers;parameterAmount;loc;comment;code
false;public;0;6;;@Override @Before public void setUp() throws Exception {     deleteDirectory("target/data/tempandrename").     super.setUp(). }
false;public;0;10;;@Test public void testCreateTempFileName() throws Exception {     Endpoint endpoint = context.getEndpoint(fileUrl).     GenericFileProducer<?> producer = (GenericFileProducer<?>) endpoint.createProducer().     Exchange exchange = endpoint.createExchange().     exchange.getIn().setHeader(Exchange.FILE_NAME, "claus.txt").     String tempFileName = producer.createTempFileName(exchange, "target/data/tempandrename/claus.txt").     assertDirectoryEquals("target/data/tempandrename/inprogress-claus.tmp", tempFileName). }
false;public;0;10;;@Test public void testNoPathCreateTempFileName() throws Exception {     Endpoint endpoint = context.getEndpoint(fileUrl).     GenericFileProducer<?> producer = (GenericFileProducer<?>) endpoint.createProducer().     Exchange exchange = endpoint.createExchange().     exchange.getIn().setHeader(Exchange.FILE_NAME, "claus.txt").     String tempFileName = producer.createTempFileName(exchange, ".").     assertDirectoryEquals("inprogress-claus.tmp", tempFileName). }
false;public;0;7;;@Test public void testTempFileName() throws Exception {     template.sendBodyAndHeader("direct:a", "Hello World", Exchange.FILE_NAME, "hello.txt").     File file = new File("target/data/tempandrename/hello.txt").     assertEquals("The generated file should exists: " + file, true, file.exists()). }
false;public;0;10;;@Test public void testCreateParentTempFileName() throws Exception {     Endpoint endpoint = context.getEndpoint(parentFileUrl).     GenericFileProducer<?> producer = (GenericFileProducer<?>) endpoint.createProducer().     Exchange exchange = endpoint.createExchange().     exchange.getIn().setHeader(Exchange.FILE_NAME, "claus.txt").     String tempFileName = producer.createTempFileName(exchange, "target/data/tempandrename/claus.txt").     assertDirectoryEquals("target/data/work/claus.tmp", tempFileName). }
false;public;0;3;;public void configure() throws Exception {     from("direct:a").to(fileUrl). }
false;protected;0;7;;protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          public void configure() throws Exception {             from("direct:a").to(fileUrl).         }     }. }
