commented;modifiers;parameterAmount;loc;comment;code
false;public;0;15;;@Test public void testInterceptSendToException() throws Exception {     getMockEndpoint("mock:foo").expectedMessageCount(0).     getMockEndpoint("mock:result").expectedMessageCount(0).     try {         template.sendBody("direct:start", "Hello World").         fail("Should have thrown an exception").     } catch (CamelExecutionException e) {         IllegalArgumentException cause = assertIsInstanceOf(IllegalArgumentException.class, e.getCause()).         assertEquals("Damn", cause.getMessage()).     }     assertMockEndpointsSatisfied(). }
false;public;0;6;;@Override public void configure() throws Exception {     interceptSendToEndpoint("mock:foo").throwException(new IllegalArgumentException("Damn")).     from("direct:start").to("mock:foo").to("mock:result"). }
false;protected;0;11;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             interceptSendToEndpoint("mock:foo").throwException(new IllegalArgumentException("Damn")).             from("direct:start").to("mock:foo").to("mock:result").         }     }. }
