commented;modifiers;parameterAmount;loc;comment;code
false;public;0;12;;@Test public void testPollEnricExpression() throws Exception {     getMockEndpoint("mock:result").expectedBodiesReceived("Hello World", "Bye World").     template.sendBody("seda:foo", "Hello World").     template.sendBody("seda:bar", "Bye World").     template.sendBodyAndHeader("direct:start", null, "source", "seda:foo").     template.sendBodyAndHeader("direct:start", null, "source", "seda:bar").     assertMockEndpointsSatisfied(). }
false;public;0;6;;@Override public void configure() throws Exception {     from("direct:start").pollEnrich().header("source").cacheSize(-1).to("mock:result"). }
false;protected;0;11;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").pollEnrich().header("source").cacheSize(-1).to("mock:result").         }     }. }
