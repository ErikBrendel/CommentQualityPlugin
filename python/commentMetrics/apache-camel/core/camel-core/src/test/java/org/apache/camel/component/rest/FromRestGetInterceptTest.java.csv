commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;6;;@Override protected JndiRegistry createRegistry() throws Exception {     JndiRegistry jndi = super.createRegistry().     jndi.bind("dummy-rest", new DummyRestConsumerFactory()).     return jndi. }
false;public;0;11;;@Test public void testFromRestModel() throws Exception {     getMockEndpoint("mock:hello").expectedMessageCount(1).     getMockEndpoint("mock:bar").expectedMessageCount(1).     getMockEndpoint("mock:intercept").expectedMessageCount(3).     String out = template.requestBody("seda:get-say-hello", "I was here", String.class).     assertEquals("Bye World", out).     assertMockEndpointsSatisfied(). }
false;public;0;11;;@Override public void configure() throws Exception {     restConfiguration().host("localhost").     intercept().to("mock:intercept").     rest("/say/hello").get().route().to("mock:hello").to("mock:bar").transform().constant("Bye World"). }
false;protected;0;16;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             restConfiguration().host("localhost").             intercept().to("mock:intercept").             rest("/say/hello").get().route().to("mock:hello").to("mock:bar").transform().constant("Bye World").         }     }. }
