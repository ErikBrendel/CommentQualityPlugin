commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public boolean isUseRouteBuilder() {     return false. }
false;public;0;6;;@Override public void configure() throws Exception {     from("direct:start").to("class:org.apache.camel.component.bean.XXX").to("mock:result"). }
false;public;0;19;;@Test public void testClassNotFound() throws Exception {     context.addRoutes(new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").to("class:org.apache.camel.component.bean.XXX").to("mock:result").         }     }).     try {         context.start().         fail("Should have thrown exception").     } catch (FailedToCreateRouteException e) {         ResolveEndpointFailedException cause = assertIsInstanceOf(ResolveEndpointFailedException.class, e.getCause()).         ClassNotFoundException not = assertIsInstanceOf(ClassNotFoundException.class, cause.getCause()).         assertEquals("org.apache.camel.component.bean.XXX", not.getMessage()).     } }
false;public;0;6;;@Override public void configure() throws Exception {     from("direct:start").to("class:org.apache.camel.component.bean.MyPrefixBean?bean.foo=bar").to("mock:result"). }
false;public;0;19;;@Test public void testPropertyNotFoundOnClass() throws Exception {     context.addRoutes(new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").to("class:org.apache.camel.component.bean.MyPrefixBean?bean.foo=bar").to("mock:result").         }     }).     try {         context.start().         fail("Should have thrown exception").     } catch (FailedToCreateRouteException e) {         ResolveEndpointFailedException cause = assertIsInstanceOf(ResolveEndpointFailedException.class, e.getCause()).         assertTrue(cause.getMessage().contains("Unknown parameters")).         assertTrue(cause.getMessage().contains("foo=bar")).     } }
