commented;modifiers;parameterAmount;loc;comment;code
false;public;0;21;;@Test public void testRouteStartupOrder() throws Exception {     MockEndpoint mock = getMockEndpoint("mock:result").     mock.expectedMessageCount(1).     template.sendBody("direct:start", "Hello World").     assertMockEndpointsSatisfied().     // assert correct order     DefaultCamelContext dcc = (DefaultCamelContext) context.     List<RouteStartupOrder> order = dcc.getRouteStartupOrder().     assertEquals(5, order.size()).     assertEquals("seda://foo", order.get(0).getRoute().getEndpoint().getEndpointUri()).     assertEquals("direct://start", order.get(1).getRoute().getEndpoint().getEndpointUri()).     assertEquals("seda://bar", order.get(2).getRoute().getEndpoint().getEndpointUri()).     assertEquals("direct://bar", order.get(3).getRoute().getEndpoint().getEndpointUri()).     // the one with no startup order should be last     assertEquals("direct://default", order.get(4).getRoute().getEndpoint().getEndpointUri()). }
false;public;0;13;;@Override public void configure() throws Exception {     from("direct:start").startupOrder(2).to("seda:foo").     from("seda:foo").startupOrder(1).to("mock:result").     from("direct:bar").startupOrder(9).to("seda:bar").     from("seda:bar").startupOrder(5).to("mock:other").     // has no startup order then it should be last     from("direct:default").to("mock:default"). }
false;protected;0;18;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").startupOrder(2).to("seda:foo").             from("seda:foo").startupOrder(1).to("mock:result").             from("direct:bar").startupOrder(9).to("seda:bar").             from("seda:bar").startupOrder(5).to("mock:other").             // has no startup order then it should be last             from("direct:default").to("mock:default").         }     }. }
