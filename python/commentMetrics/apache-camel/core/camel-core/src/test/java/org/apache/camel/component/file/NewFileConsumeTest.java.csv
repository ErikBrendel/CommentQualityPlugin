commented;modifiers;parameterAmount;loc;comment;code
false;public;0;6;;@Override @Before public void setUp() throws Exception {     deleteDirectory("target/data/consumefile").     super.setUp(). }
false;public;0;4;;@Override public boolean isUseRouteBuilder() {     return false. }
false;public;1;6;;public void process(Exchange exchange) throws Exception {     assertNotNull(exchange).     String body = exchange.getIn().getBody(String.class).     assertEquals("Hello World", body).     latch.countDown(). }
false;public;0;28;;@Test public void testNewFileConsumer() throws Exception {     FileComponent comp = new FileComponent().     comp.setCamelContext(context).     // create a file to consume     createDirectory("target/data/consumefile").     FileOutputStream fos = new FileOutputStream(new File("target/data/consumefile/hello.txt")).     try {         fos.write("Hello World".getBytes()).     } finally {         fos.close().     }     Endpoint endpoint = comp.createEndpoint("file://target/data/consumefile", "target/data/consumefile", new HashMap<String, Object>()).     Consumer consumer = endpoint.createConsumer(new Processor() {          public void process(Exchange exchange) throws Exception {             assertNotNull(exchange).             String body = exchange.getIn().getBody(String.class).             assertEquals("Hello World", body).             latch.countDown().         }     }).     consumer.start().     latch.await(5, TimeUnit.SECONDS).     consumer.stop(). }
