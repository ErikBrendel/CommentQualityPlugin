commented;modifiers;parameterAmount;loc;comment;code
false;public;0;7;;@Override @Before public void setUp() throws Exception {     deleteDirectory("target/data/changed/").     createDirectory("target/data/changed/in").     super.setUp(). }
false;protected;0;6;;@Override protected JndiRegistry createRegistry() throws Exception {     JndiRegistry jndi = super.createRegistry().     jndi.bind("myRepo", myRepo).     return jndi. }
false;public;0;22;;@Test public void testIdempotentReadLock() throws Exception {     assertEquals(0, myRepo.getCacheSize()).     NotifyBuilder notify = new NotifyBuilder(context).whenDone(2).create().     MockEndpoint mock = getMockEndpoint("mock:result").     mock.expectedMessageCount(2).     mock.message(0).arrives().between(0, 1400).millis().     mock.message(1).arrives().between(800, 1800).millis().     template.sendBodyAndHeader("file:target/data/changed/in", "Hello World", Exchange.FILE_NAME, "hello.txt").     template.sendBodyAndHeader("file:target/data/changed/in", "Bye World", Exchange.FILE_NAME, "bye.txt").     assertMockEndpointsSatisfied().     assertTrue(notify.matches(10, TimeUnit.SECONDS)).     // the files are kept on commit     // if you want to remove them then the idempotent repo need some way to evict idle keys     assertEquals(2, myRepo.getCacheSize()). }
false;public;1;6;;@Override public void process(Exchange exchange) throws Exception {     // we are in progress     int size = myRepo.getCacheSize().     assertTrue(size == 1 || size == 2). }
false;public;0;13;;@Override public void configure() throws Exception {     from("file:target/data/changed/in?initialDelay=0&delay=10&readLock=idempotent&readLockIdempotentReleaseDelay=1000&idempotentRepository=#myRepo").process(new Processor() {          @Override         public void process(Exchange exchange) throws Exception {             // we are in progress             int size = myRepo.getCacheSize().             assertTrue(size == 1 || size == 2).         }     }).to("mock:result"). }
false;protected;0;18;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("file:target/data/changed/in?initialDelay=0&delay=10&readLock=idempotent&readLockIdempotentReleaseDelay=1000&idempotentRepository=#myRepo").process(new Processor() {                  @Override                 public void process(Exchange exchange) throws Exception {                     // we are in progress                     int size = myRepo.getCacheSize().                     assertTrue(size == 1 || size == 2).                 }             }).to("mock:result").         }     }. }
