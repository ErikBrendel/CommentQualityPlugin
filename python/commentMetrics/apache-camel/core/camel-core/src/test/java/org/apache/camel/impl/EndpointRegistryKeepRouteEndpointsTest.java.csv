commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;6;;@Override protected CamelContext createCamelContext() throws Exception {     CamelContext context = super.createCamelContext().     context.getGlobalOptions().put(Exchange.MAXIMUM_ENDPOINT_CACHE_SIZE, "20").     return context. }
false;public;0;57;;@Test public void testEndpointRegistryKeepRouteEndpoints() throws Exception {     assertTrue(context.hasEndpoint("direct://start") != null).     assertTrue(context.hasEndpoint("log://foo") != null).     assertTrue(context.hasEndpoint("log://bar") != null).     assertTrue(context.hasEndpoint("mock://result") != null).     // we dont have this endpoint yet     assertFalse(context.hasEndpoint("mock://unknown0") != null).     for (int i = 0. i < 50. i++) {         template.sendBody("mock:unknown" + i, "Hello " + i).     }     // the eviction is async so force cleanup     context.getEndpointRegistry().cleanUp().     // endpoints from routes is always kept in the cache     assertTrue(context.hasEndpoint("direct://start") != null).     assertTrue(context.hasEndpoint("log://foo") != null).     assertTrue(context.hasEndpoint("log://bar") != null).     assertTrue(context.hasEndpoint("mock://result") != null).     // and the dynamic cache only keeps 20 dynamic endpoints     int count = 0.     for (int i = 0. i < 50. i++) {         String uri = "mock://unknown" + i.         if (context.hasEndpoint(uri) != null) {             count++.             // and it should be dynamic             assertTrue(context.getEndpointRegistry().isDynamic(uri)).         }     }     assertEquals("Should only be 20 dynamic endpoints in the cache", 20, count).     // we should have 4 static, 20 dynamic and 24 in total     assertEquals(4, context.getEndpointRegistry().staticSize()).     assertTrue(context.getEndpointRegistry().isStatic("direct://start")).     assertEquals(20, context.getEndpointRegistry().dynamicSize()).     assertEquals(24, context.getEndpointRegistry().size()).     // and we can browse all 24     assertEquals(24, context.getEndpoints().size()).     // and if we purge only the dynamic is removed     context.getEndpointRegistry().purge().     assertEquals(4, context.getEndpointRegistry().staticSize()).     assertEquals(0, context.getEndpointRegistry().dynamicSize()).     assertEquals(4, context.getEndpointRegistry().size()).     // endpoints from routes is always kept in the cache     assertTrue(context.hasEndpoint("direct://start") != null).     assertTrue(context.hasEndpoint("log://foo") != null).     assertTrue(context.hasEndpoint("log://bar") != null).     assertTrue(context.hasEndpoint("mock://result") != null). }
false;public;0;4;;@Override public void configure() throws Exception {     from("direct:start").to("log:foo").to("log:bar").to("mock:result"). }
false;protected;0;9;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").to("log:foo").to("log:bar").to("mock:result").         }     }. }
