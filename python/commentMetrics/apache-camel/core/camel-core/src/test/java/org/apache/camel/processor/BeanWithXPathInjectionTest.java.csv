commented;modifiers;parameterAmount;loc;comment;code
false;public;0;10;;@Test public void testSendMessage() throws Exception {     String expectedBody = "<env:Envelope xmlns:env='http://www.w3.org/2003/05/soap-envelope'><env:Body>" + "<foo>bar</foo></env:Body></env:Envelope>".     template.sendBodyAndHeader("direct:in", expectedBody, "foo", "bar").     assertEquals("bean body: " + myBean, expectedBody, myBean.body).     assertEquals("bean foo: " + myBean, "bar", myBean.foo). }
false;public;0;20;;@Test public void testSendTwoMessages() throws Exception {     // 1st message     String expectedBody = "<env:Envelope xmlns:env='http://www.w3.org/2003/05/soap-envelope'><env:Body>" + "<foo>bar</foo></env:Body></env:Envelope>".     template.sendBodyAndHeader("direct:in", expectedBody, "foo", "bar").     assertEquals("bean body: " + myBean, expectedBody, myBean.body).     assertEquals("bean foo: " + myBean, "bar", myBean.foo).     // 2nd message     String expectedBody2 = "<env:Envelope xmlns:env='http://www.w3.org/2003/05/soap-envelope'><env:Body>" + "<foo>baz</foo></env:Body></env:Envelope>".     template.sendBodyAndHeader("direct:in", expectedBody2, "foo", "baz").     assertEquals("bean body: " + myBean, expectedBody2, myBean.body).     assertEquals("bean foo: " + myBean, "baz", myBean.foo). }
false;protected;0;6;;@Override protected Context createJndiContext() throws Exception {     JndiContext answer = new JndiContext().     answer.bind("myBean", myBean).     return answer. }
false;public;0;3;;public void configure() {     from("direct:in").bean("myBean"). }
false;protected;0;7;;protected RouteBuilder createRouteBuilder() {     return new RouteBuilder() {          public void configure() {             from("direct:in").bean("myBean").         }     }. }
false;public;0;4;;@Override public String toString() {     return "MyBean[foo: " + foo + " body: " + body + "]". }
false;public;2;5;;public void read(String body, @XPath("/soap:Envelope/soap:Body/foo/text()") String foo) {     this.foo = foo.     this.body = body.     LOG.info("read() method called on " + this). }
