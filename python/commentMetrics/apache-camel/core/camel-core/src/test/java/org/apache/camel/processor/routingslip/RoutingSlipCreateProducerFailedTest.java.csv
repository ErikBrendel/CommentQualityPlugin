commented;modifiers;parameterAmount;loc;comment;code
false;public;0;21;;@Test public void testRoutingSlipCreateProducerFailed() throws Exception {     // no inflight     assertEquals(0, context.getInflightRepository().size()).     template.sendBodyAndHeader("direct:start", "Hello World", "foo", "log:foo").     // no inflight     assertEquals(0, context.getInflightRepository().size()).     // those 2 options not allowed together     try {         template.sendBodyAndHeader("direct:start", "Hello World", "foo", "file://target/data/test?fileExist=Append&tempPrefix=hello").         fail("Should fail").     } catch (CamelExecutionException e) {         assertIsInstanceOf(FailedToCreateProducerException.class, e.getCause()).     }     // no inflight     assertEquals(0, context.getInflightRepository().size()). }
false;public;0;5;;@Override public void configure() throws Exception {     from("direct:start").routingSlip(header("foo")). }
false;protected;0;10;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").routingSlip(header("foo")).         }     }. }
