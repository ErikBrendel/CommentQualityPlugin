commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;6;;protected CamelContext createCamelContext() throws Exception {     registry = new JndiRegistry(JndiTest.createInitialContext()).     CamelContext context = new DefaultCamelContext(registry).     context.addRoutes(createRouteBuilder()).     return context. }
false;public;0;12;;@Test public void testLogEipMask() throws Exception {     CamelContext context = createCamelContext().     MockEndpoint mock = context.getEndpoint("mock:foo", MockEndpoint.class).     mock.expectedMessageCount(1).     context.setLogMask(true).     context.start().     context.createProducerTemplate().sendBody("direct:foo", "mask password=\"my passw0rd!\"").     context.createProducerTemplate().sendBody("direct:noMask", "no-mask password=\"my passw0rd!\"").     mock.assertIsSatisfied().     context.stop(). }
false;public;0;11;;@Test public void testCustomFormatter() throws Exception {     CamelContext context = createCamelContext().     MockMaskingFormatter customFormatter = new MockMaskingFormatter().     registry.bind(MaskingFormatter.CUSTOM_LOG_MASK_REF, customFormatter).     context.setLogMask(true).     context.start().     context.createProducerTemplate().sendBody("direct:foo", "mock password=\"my passw0rd!\"").     Assert.assertEquals("Got mock password=\"my passw0rd!\"", customFormatter.received).     context.stop(). }
false;public;1;5;;@Override public String format(String source) {     received = source.     return source. }
false;public;0;5;;@Override public void configure() throws Exception {     from("direct:foo").routeId("foo").log("Got ${body}").to("mock:foo").     from("direct:noMask").routeId("noMask").logMask("false").log("Got ${body}").to("mock:noMask"). }
false;protected;0;9;;protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:foo").routeId("foo").log("Got ${body}").to("mock:foo").             from("direct:noMask").routeId("noMask").logMask("false").log("Got ${body}").to("mock:noMask").         }     }. }
