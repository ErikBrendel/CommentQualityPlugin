commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public boolean isUseRouteBuilder() {     return false. }
false;public;0;7;;@Override public void configure() throws Exception {     from("direct:step-1a").routeId("step-1a").log("Before Step-1a ${body}").to("direct-vm:step-2a").log("After Step-1a ${body}"). }
false;protected;0;12;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:step-1a").routeId("step-1a").log("Before Step-1a ${body}").to("direct-vm:step-2a").log("After Step-1a ${body}").         }     }. }
false;public;0;7;;@Override public void configure() throws Exception {     from("direct-vm:step-2a").routeId("step-2a").log("Before Step-2a ${body}").setBody(constant("Bye")).log("After Step-2a ${body}"). }
false;protected;0;12;;@Override protected RouteBuilder createRouteBuilderForSecondContext() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct-vm:step-2a").routeId("step-2a").log("Before Step-2a ${body}").setBody(constant("Bye")).log("After Step-2a ${body}").         }     }. }
false;public;0;4;;@Override public void configure() throws Exception {     weaveAddLast().to("mock:results"). }
false;public;0;24;;@Test public void testTwoCamelContext() throws Exception {     // add route     context.addRoutes(createRouteBuilder()).     // advice     RouteReifier.adviceWith(context.getRouteDefinition("step-1a"), context, new AdviceWithRouteBuilder() {          @Override         public void configure() throws Exception {             weaveAddLast().to("mock:results").         }     }).     // start camel     context.start().     context2.start().     MockEndpoint endpoint = getMockEndpoint("mock:results").     endpoint.expectedBodiesReceived("Bye").     template.sendBody("direct:step-1a", "Hello World").     assertMockEndpointsSatisfied(). }
