commented;modifiers;parameterAmount;loc;comment;code
false;public;0;10;;@Test public void testStopRouteOnContext() throws Exception {     assertEquals(ServiceStatus.Started, ((DefaultRoute) context.getRoute("foo")).getStatus()).     assertEquals(ServiceStatus.Started, context.getRouteController().getRouteStatus("foo")).     context.getRouteController().stopRoute("foo").     assertEquals(ServiceStatus.Stopped, ((DefaultRoute) context.getRoute("foo")).getStatus()).     assertEquals(ServiceStatus.Stopped, context.getRouteController().getRouteStatus("foo")). }
false;public;0;26;;@Test public void testRemove() throws Exception {     MockEndpoint mock = getMockEndpoint("mock:result").     mock.expectedBodiesReceived("A").     template.sendBody("seda:foo", "A").     assertMockEndpointsSatisfied().     assertEquals("Started", context.getRouteController().getRouteStatus("foo").name()).     assertEquals(1, context.getRoutes().size()).     // must be stopped so we cant remove     boolean removed = context.removeRoute("foo").     assertFalse(removed).     assertEquals(1, context.getRoutes().size()).     assertEquals("Started", context.getRouteController().getRouteStatus("foo").name()).     // remove route then     context.getRouteController().stopRoute("foo").     removed = context.removeRoute("foo").     assertTrue(removed).     assertEquals(0, context.getRoutes().size()).     assertNull(context.getRouteController().getRouteStatus("foo")). }
false;public;0;4;;@Override public void configure() throws Exception {     from("seda:foo").routeId("foo").to("log:foo").to("mock:result"). }
false;protected;0;9;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("seda:foo").routeId("foo").to("log:foo").to("mock:result").         }     }. }
