commented;modifiers;parameterAmount;loc;comment;code
false;public;0;46;;@Test public void testRemove() throws Exception {     DefaultCamelContext defaultContext = (DefaultCamelContext) context.     assertEquals("2 routes to start with", 2, context.getRoutes().size()).     assertEquals("2 routes to start with", 2, context.getRouteDefinitions().size()).     assertEquals("2 routes to start with", 2, defaultContext.getRouteStartupOrder().size()).     assertEquals("2 routes to start with", 2, defaultContext.getRouteServices().size()).     getMockEndpoint("mock:foo").expectedMessageCount(1).     getMockEndpoint("mock:bar").expectedMessageCount(1).     template.sendBody("seda:foo", "Hello World").     assertMockEndpointsSatisfied().     assertEquals("Started", context.getRouteController().getRouteStatus("foo").name()).     assertEquals("Started", context.getRouteController().getRouteStatus("bar").name()).     // stop foo route     context.getRouteController().stopRoute("foo").     assertEquals("Stopped", context.getRouteController().getRouteStatus("foo").name()).     assertEquals("Started", context.getRouteController().getRouteStatus("bar").name()).     resetMocks().     getMockEndpoint("mock:foo").expectedMessageCount(0).     getMockEndpoint("mock:bar").expectedMessageCount(1).     template.sendBody("seda:bar", "Hello World").     assertMockEndpointsSatisfied().     // remove foo route and bar should continue to be functional     context.removeRoute("foo").     assertEquals("There should be no foo route anymore", null, context.getRouteController().getRouteStatus("foo")).     assertEquals("Started", context.getRouteController().getRouteStatus("bar").name()).     resetMocks().     // the bar route should still be started and work     getMockEndpoint("mock:foo").expectedMessageCount(0).     getMockEndpoint("mock:bar").expectedMessageCount(1).     template.sendBody("seda:bar", "Hello World").     assertMockEndpointsSatisfied().     assertEquals("1 routes to end with", 1, context.getRoutes().size()).     assertEquals("1 routes to end with", 1, context.getRouteDefinitions().size()).     assertEquals("1 routes to end with", 1, defaultContext.getRouteStartupOrder().size()).     assertEquals("1 routes to end with", 1, defaultContext.getRouteServices().size()). }
false;public;0;6;;@Override public void configure() throws Exception {     from("seda:foo").routeId("foo").to("seda:bar").to("mock:foo").     from("seda:bar").routeId("bar").to("mock:bar"). }
false;protected;0;11;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("seda:foo").routeId("foo").to("seda:bar").to("mock:foo").             from("seda:bar").routeId("bar").to("mock:bar").         }     }. }
