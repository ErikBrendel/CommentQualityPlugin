commented;modifiers;parameterAmount;loc;comment;code
false;public;4;7;;@Override public void assertMessageExpected(DataSetEndpoint dataSetEndpoint, Exchange expected, Exchange actual, long index) throws Exception {     // lets compare the XPath result     Predicate predicate = PredicateBuilder.isEqualTo(expression, ExpressionBuilder.constantExpression(index)).     log.debug("evaluating predicate: " + predicate).     PredicateAssertHelper.assertMatches(predicate, "Actual: " + actual, actual). }
false;protected;1;3;;protected Object createMessageBody(long messageIndex) {     return "<message index='" + messageIndex + "'>someBody" + messageIndex + "</message>". }
false;public;0;6;;@Test public void testUsingCustomDataSet() throws Exception {     // data set will itself set its assertions so we should just     // assert that all mocks is ok     assertMockEndpointsSatisfied(). }
false;protected;0;6;;@Override protected Context createJndiContext() throws Exception {     Context context = super.createJndiContext().     context.bind("foo", dataSet).     return context. }
false;public;0;5;;public void configure() throws Exception {     from("dataset:foo?initialDelay=0").to("direct:foo").     from("direct:foo").to("dataset:foo?initialDelay=0"). }
false;protected;0;10;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          public void configure() throws Exception {             from("dataset:foo?initialDelay=0").to("direct:foo").             from("direct:foo").to("dataset:foo?initialDelay=0").         }     }. }
