commented;modifiers;parameterAmount;loc;comment;code
false;public;0;10;;@Test public void testByteArrayInputStream() throws Exception {     getMockEndpoint("mock:foo").expectedBodiesReceived("<hello/>").     getMockEndpoint("mock:bar").expectedBodiesReceived("<hello/>").     getMockEndpoint("mock:baz").expectedBodiesReceived("<hello/>").     template.sendBodyAndHeader("direct:a", new ByteArrayInputStream("<hello/>".getBytes()), "mySlip", "mock:foo,mock:bar,mock:baz").     assertMockEndpointsSatisfied(). }
false;public;0;7;;@Override public void configure() throws Exception {     context.setStreamCaching(true).     from("direct:a").recipientList(header("mySlip")). }
false;protected;0;12;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             context.setStreamCaching(true).             from("direct:a").recipientList(header("mySlip")).         }     }. }
