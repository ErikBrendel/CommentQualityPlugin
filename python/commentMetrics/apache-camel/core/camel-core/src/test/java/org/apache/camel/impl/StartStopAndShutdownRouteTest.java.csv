commented;modifiers;parameterAmount;loc;comment;code
false;public;0;21;;@Test public void testStartStopAndShutdownRoute() throws Exception {     // there should still be 2 services on the route     Route myRoute = context.getRoute("foo").     int services = myRoute.getServices().size().     assertTrue(services > 0).     // stop the route     context.getRouteController().stopRoute("foo").     // there should still be the same number of services on the route     assertEquals(services, myRoute.getServices().size()).     // shutting down the route, by stop and remove     context.getRouteController().stopRoute("foo").     context.removeRoute("foo").     // and now no more services as the route is shutdown     assertEquals(0, myRoute.getServices().size()). }
false;public;0;4;;@Override public void configure() throws Exception {     from("direct:start").routeId("foo").to("mock:foo"). }
false;protected;0;10;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").routeId("foo").to("mock:foo").         }     }. }
