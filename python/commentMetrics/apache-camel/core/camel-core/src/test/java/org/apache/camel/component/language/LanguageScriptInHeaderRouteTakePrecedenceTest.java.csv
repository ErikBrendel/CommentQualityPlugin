commented;modifiers;parameterAmount;loc;comment;code
false;public;0;8;;@Test public void testLanguageWithHeader() throws Exception {     getMockEndpoint("mock:result").expectedBodiesReceived("Hello World").     template.sendBodyAndHeader("direct:start", "World", Exchange.LANGUAGE_SCRIPT, "Hello ${body}").     assertMockEndpointsSatisfied(). }
false;public;0;8;;@Test public void testLanguageNoHeader() throws Exception {     getMockEndpoint("mock:result").expectedBodiesReceived("Bye World").     template.sendBody("direct:start", "World").     assertMockEndpointsSatisfied(). }
false;public;0;5;;@Override public void configure() throws Exception {     String script = URLEncoder.encode("Bye ${body}", "UTF-8").     from("direct:start").to("language:simple:" + script).to("mock:result"). }
false;protected;0;10;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             String script = URLEncoder.encode("Bye ${body}", "UTF-8").             from("direct:start").to("language:simple:" + script).to("mock:result").         }     }. }
