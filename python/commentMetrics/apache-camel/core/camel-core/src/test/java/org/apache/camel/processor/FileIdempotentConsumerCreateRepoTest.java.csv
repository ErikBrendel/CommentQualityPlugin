commented;modifiers;parameterAmount;loc;comment;code
false;public;0;6;;@Test public void shouldCreateParentOfRepositoryFileStore() throws Exception {     File parentDirectory = new File("target/data/repositoryParent_" + randomUUID()).     store = new File(parentDirectory, "store").     assertStoreExists(store). }
false;public;0;6;;@Test public void shouldUseCurrentDirIfHasNoParentFile() throws Exception {     String storeFileName = "store" + randomUUID().     store = new File(storeFileName).     assertStoreExists(store). }
false;private;1;15;;private void assertStoreExists(File store) throws Exception {     // Given     IdempotentRepository repo = fileIdempotentRepository(store).     // must start repo     repo.start().     // When     repo.add("anyKey").     // Then     assertTrue(store.exists()).     repo.stop(). }
false;public;0;4;;@After public void after() {     FileUtil.deleteFile(this.store). }
