commented;modifiers;parameterAmount;loc;comment;code
false;public;0;6;;public void configure() {     // intercept with a predicate test     interceptFrom().when(header("foo").isEqualTo("bar")).to("mock:b").stop().     from("direct:start").to("mock:a"). }
false;protected;0;11;;@Override protected RouteBuilder createRouteBuilder() {     return new RouteBuilder() {          public void configure() {             // intercept with a predicate test             interceptFrom().when(header("foo").isEqualTo("bar")).to("mock:b").stop().             from("direct:start").to("mock:a").         }     }. }
false;protected;0;5;;@Override protected void prepareMatchingTest() {     a.expectedMessageCount(0).     b.expectedMessageCount(1). }
false;protected;0;5;;@Override protected void prepareNonMatchingTest() {     a.expectedMessageCount(1).     b.expectedMessageCount(0). }
