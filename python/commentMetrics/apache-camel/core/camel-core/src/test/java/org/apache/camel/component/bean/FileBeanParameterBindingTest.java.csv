commented;modifiers;parameterAmount;loc;comment;code
false;public;0;6;;@Override @Before public void setUp() throws Exception {     deleteDirectory("target/data/foo").     super.setUp(). }
false;protected;0;6;;@Override protected JndiRegistry createRegistry() throws Exception {     JndiRegistry jndi = super.createRegistry().     jndi.bind("foo", new MyFooBean()).     return jndi. }
false;public;0;8;;@Test public void testFileToBean() throws Exception {     getMockEndpoint("mock:result").expectedMessageCount(1).     template.sendBodyAndHeader("file:target/data/foo", "Hello World", Exchange.FILE_NAME, "hello.txt").     assertMockEndpointsSatisfied(). }
false;public;1;3;;public void process(Exchange exchange) throws Exception {     exchange.getIn().setHeader("bar", 123). }
false;public;0;12;;@Override public void configure() throws Exception {     from("file:target/data/foo").to("bean:foo?method=before").process(new Processor() {          public void process(Exchange exchange) throws Exception {             exchange.getIn().setHeader("bar", 123).         }     }).to("bean:foo?method=after").to("mock:result"). }
false;protected;0;17;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("file:target/data/foo").to("bean:foo?method=before").process(new Processor() {                  public void process(Exchange exchange) throws Exception {                     exchange.getIn().setHeader("bar", 123).                 }             }).to("bean:foo?method=after").to("mock:result").         }     }. }
false;public;2;4;;public void before(@Header("bar") Integer bar, @Header(Exchange.FILE_NAME) String name) {     assertNull("There should be no bar", bar).     assertEquals("hello.txt", name). }
false;public;2;5;;public void after(@Header("bar") Integer bar, @Header(Exchange.FILE_NAME) String name) {     assertNotNull("There should be bar", bar).     assertEquals(123, bar.intValue()).     assertEquals("hello.txt", name). }
