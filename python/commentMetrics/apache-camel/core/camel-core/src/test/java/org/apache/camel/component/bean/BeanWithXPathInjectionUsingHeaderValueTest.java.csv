commented;modifiers;parameterAmount;loc;comment;code
false;public;0;9;;@Test public void testConstantXPathHeaders() throws Exception {     template.sendBodyAndHeader("bean:myBean", "<response>OK</response>", "invoiceDetails", "<invoice><person><name>Alan</name><date>26/08/2012</date></person></invoice>").     assertEquals("bean response:  " + myBean, "OK", myBean.response).     assertEquals("bean userName: " + myBean, "Alan", myBean.userName).     assertEquals("bean date:  " + myBean, "26/08/2012", myBean.date). }
false;protected;0;6;;@Override protected Context createJndiContext() throws Exception {     JndiContext answer = new JndiContext().     answer.bind("myBean", myBean).     return answer. }
false;public;3;8;;@Handler public void handler(@XPath("//response/text()") String response, @XPath(headerName = "invoiceDetails", value = "//invoice/person/name/text()") String userName, @XPath(headerName = "invoiceDetails", value = "//invoice/person/date", resultType = String.class) String date) {     this.response = response.     this.userName = userName.     this.date = date. }
