commented;modifiers;parameterAmount;loc;comment;code
false;public;0;17;;@Test public void testOnlyTwo() throws Exception {     MockEndpoint mock = getMockEndpoint("mock:aggregated").     mock.expectedBodiesReceived("A+B", "C+END").     template.sendBodyAndHeader("direct:start", "A", "id", "foo").     template.sendBodyAndHeader("direct:start", "B", "id", "foo").     template.sendBodyAndHeader("direct:start", "C", "id", "foo").     template.sendBodyAndHeader("direct:start", "END", "id", "foo").     assertMockEndpointsSatisfied().     assertEquals(4, repo.getGet()).     assertEquals(2, repo.getAdd()).     assertEquals(2, repo.getRemove()).     assertEquals(2, repo.getConfirm()). }
false;public;0;7;;@Override public void configure() throws Exception {     from("direct:start").aggregate(header("id"), new BodyInAggregatingStrategy()).aggregationRepository(repo).completionSize(2).to("mock:aggregated"). }
false;protected;0;12;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").aggregate(header("id"), new BodyInAggregatingStrategy()).aggregationRepository(repo).completionSize(2).to("mock:aggregated").         }     }. }
false;public;3;5;;@Override public Exchange add(CamelContext camelContext, String key, Exchange exchange) {     add++.     return super.add(camelContext, key, exchange). }
false;public;2;5;;@Override public Exchange get(CamelContext camelContext, String key) {     get++.     return super.get(camelContext, key). }
false;public;3;5;;@Override public void remove(CamelContext camelContext, String key, Exchange exchange) {     remove++.     super.remove(camelContext, key, exchange). }
false;public;2;5;;@Override public void confirm(CamelContext camelContext, String exchangeId) {     confirm++.     super.confirm(camelContext, exchangeId). }
false;public;0;4;;@Override public Set<String> getKeys() {     return super.getKeys(). }
false;public;0;3;;public int getAdd() {     return add. }
false;public;0;3;;public int getGet() {     return get. }
false;public;0;3;;public int getRemove() {     return remove. }
false;public;0;3;;public int getConfirm() {     return confirm. }
