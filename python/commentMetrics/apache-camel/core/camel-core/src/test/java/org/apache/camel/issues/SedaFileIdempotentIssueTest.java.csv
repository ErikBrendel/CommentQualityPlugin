commented;modifiers;parameterAmount;loc;comment;code
false;public;0;15;;@Override @Before public void setUp() throws Exception {     deleteDirectory("target/data/inbox").     createDirectory("target/data/inbox").     // create file without using Camel     File file = new File("target/data/inbox/hello.txt").     FileOutputStream fos = new FileOutputStream(file, true).     fos.write("Hello World".getBytes()).     fos.flush().     fos.close().     super.setUp(). }
false;protected;0;8;;@Override protected JndiRegistry createRegistry() throws Exception {     JndiRegistry jndi = super.createRegistry().     repository.setFileStore(new File("target/repo.txt")).     jndi.bind("repo", repository).     return jndi. }
false;public;0;11;;@Override public void configure() throws Exception {     onException(RuntimeException.class).process(new ShutDown()).     from("file:target/data/inbox?idempotent=true&noop=true&idempotentRepository=#repo&initialDelay=0&delay=10").to("log:begin").inOut("seda:process").     from("seda:process").throwException(new RuntimeException("Testing with exception")). }
false;protected;0;16;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             onException(RuntimeException.class).process(new ShutDown()).             from("file:target/data/inbox?idempotent=true&noop=true&idempotentRepository=#repo&initialDelay=0&delay=10").to("log:begin").inOut("seda:process").             from("seda:process").throwException(new RuntimeException("Testing with exception")).         }     }. }
false;public;0;7;;@Test public void testRepo() throws Exception {     boolean done = latch.await(10, TimeUnit.SECONDS).     assertTrue("Should stop Camel", done).     assertEquals("No file should be reported consumed", 0, repository.getCache().keySet().size()). }
false;public;0;13;;@Override public void run() {     // shutdown camel     try {         log.info("Stopping Camel").         exchange.getContext().stop().         log.info("Stopped Camel complete").         latch.countDown().     } catch (Exception e) {         // ignore         e.printStackTrace().     } }
false;public;1;21;;@Override public void process(final Exchange exchange) throws Exception {     // shutdown route     Thread thread = new Thread() {          @Override         public void run() {             // shutdown camel             try {                 log.info("Stopping Camel").                 exchange.getContext().stop().                 log.info("Stopped Camel complete").                 latch.countDown().             } catch (Exception e) {                 // ignore                 e.printStackTrace().             }         }     }.     // start shutdown in a separate thread     thread.start(). }
