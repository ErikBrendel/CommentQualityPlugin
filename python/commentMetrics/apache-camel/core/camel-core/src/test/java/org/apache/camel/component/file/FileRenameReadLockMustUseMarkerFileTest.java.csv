commented;modifiers;parameterAmount;loc;comment;code
false;public;0;6;;@Override @Before public void setUp() throws Exception {     deleteDirectory("target/data/rename").     super.setUp(). }
false;public;0;20;;@Test public void testCamelLockFile() throws Exception {     MockEndpoint mock = getMockEndpoint("mock:result").     mock.expectedMessageCount(1).     mock.expectedBodiesReceived("Bye World").     mock.message(0).header(Exchange.FILE_NAME).isEqualTo("bye.txt").     template.sendBodyAndHeader("file:target/data/rename", "Bye World", Exchange.FILE_NAME, "bye.txt").     // start the route     context.getRouteController().startRoute("foo").     assertMockEndpointsSatisfied().     assertTrue(oneExchangeDone.matchesMockWaitTime()).     // and lock file should be deleted     File lock = new File("target/data/rename/bye.txt" + FileComponent.DEFAULT_LOCK_FILE_POSTFIX).     assertFalse("Lock file should not exist: " + lock, lock.exists()). }
false;public;1;9;;@Override public void process(Exchange exchange) throws Exception {     // got a file, so we should have a .camelLock file as well     String name = exchange.getIn().getHeader(Exchange.FILE_PATH) + FileComponent.DEFAULT_LOCK_FILE_POSTFIX.     File lock = new File(name).     // lock file should exist     assertTrue("Lock file should exist: " + name, lock.exists()). }
false;public;0;16;;@Override public void configure() throws Exception {     from("file:target/data/rename?readLock=rename&initialDelay=0&delay=10").routeId("foo").noAutoStartup().process(new Processor() {          @Override         public void process(Exchange exchange) throws Exception {             // got a file, so we should have a .camelLock file as well             String name = exchange.getIn().getHeader(Exchange.FILE_PATH) + FileComponent.DEFAULT_LOCK_FILE_POSTFIX.             File lock = new File(name).             // lock file should exist             assertTrue("Lock file should exist: " + name, lock.exists()).         }     }).convertBodyTo(String.class).to("mock:result"). }
false;protected;0;21;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("file:target/data/rename?readLock=rename&initialDelay=0&delay=10").routeId("foo").noAutoStartup().process(new Processor() {                  @Override                 public void process(Exchange exchange) throws Exception {                     // got a file, so we should have a .camelLock file as well                     String name = exchange.getIn().getHeader(Exchange.FILE_PATH) + FileComponent.DEFAULT_LOCK_FILE_POSTFIX.                     File lock = new File(name).                     // lock file should exist                     assertTrue("Lock file should exist: " + name, lock.exists()).                 }             }).convertBodyTo(String.class).to("mock:result").         }     }. }
