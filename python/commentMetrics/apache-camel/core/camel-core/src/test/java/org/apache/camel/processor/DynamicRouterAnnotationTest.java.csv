commented;modifiers;parameterAmount;loc;comment;code
false;public;0;20;;@Test public void testDynamicRouterAnnotation() throws Exception {     getMockEndpoint("mock:a").expectedBodiesReceived("Hello World").     getMockEndpoint("mock:b").expectedBodiesReceived("Hello World").     getMockEndpoint("mock:c").expectedBodiesReceived("Hello World").     getMockEndpoint("mock:foo").expectedBodiesReceived("Bye World").     getMockEndpoint("mock:result").expectedBodiesReceived("Bye World").     template.sendBody("direct:start", "Hello World").     assertMockEndpointsSatisfied().     assertEquals(5, invoked).     assertEquals(5, bodies.size()).     assertEquals("Hello World", bodies.get(0)).     assertEquals("Hello World", bodies.get(1)).     assertEquals("Hello World", bodies.get(2)).     assertEquals("Bye World", bodies.get(3)).     assertEquals("Bye World", bodies.get(4)). }
false;public;0;9;;@Override public void configure() throws Exception {     // START SNIPPET: e1     from("direct:start").bean(MyBean.class, "dynamicRouter").     from("direct:foo").transform(constant("Bye World")).to("mock:foo"). // END SNIPPET: e1 }
false;protected;0;14;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             // START SNIPPET: e1             from("direct:start").bean(MyBean.class, "dynamicRouter").             from("direct:foo").transform(constant("Bye World")).to("mock:foo").         // END SNIPPET: e1         }     }. }
false;public;1;18;;@org.apache.camel.DynamicRouter public String dynamicRouter(String body) {     bodies.add(body).     invoked++.     if (invoked == 1) {         return "mock:a".     } else if (invoked == 2) {         return "mock:b,mock:c".     } else if (invoked == 3) {         return "direct:foo".     } else if (invoked == 4) {         return "mock:result".     }     // no more so return null     return null. }
