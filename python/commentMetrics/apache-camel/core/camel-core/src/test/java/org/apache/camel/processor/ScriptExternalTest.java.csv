commented;modifiers;parameterAmount;loc;comment;code
false;public;0;8;;@Test public void testScript() throws Exception {     resultEndpoint.expectedBodiesReceived("Hello").     sendBody("direct:start", "Hello").     resultEndpoint.assertIsSatisfied(). }
false;public;0;7;;@Override @Before public void setUp() throws Exception {     super.setUp().     resultEndpoint = getMockEndpoint("mock:result"). }
false;public;0;6;;public void configure() {     from("direct:start").script(simple("resource:classpath:org/apache/camel/processor/mysimplescript.txt")).to("mock:result"). }
false;protected;0;10;;protected RouteBuilder createRouteBuilder() {     return new RouteBuilder() {          public void configure() {             from("direct:start").script(simple("resource:classpath:org/apache/camel/processor/mysimplescript.txt")).to("mock:result").         }     }. }
