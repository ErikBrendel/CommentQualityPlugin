commented;modifiers;parameterAmount;loc;comment;code
false;public;0;5;;@Before public void setUp() throws Exception {     ServiceHelper.startService(converter). }
false;public;0;15;;@Test public void testConvertToDocument() throws Exception {     Document document = converter.convertTo(Document.class, "<?xml version=\"1.0\" encoding=\"UTF-8\"?><hello>world!</hello>").     assertNotNull(document).     LOG.debug("Found document: " + document).     // lets now convert back again     String text = converter.convertTo(String.class, document).     // The preamble changes a little under Java 1.6 it adds a     // standalone="no" attribute.     assertTrue("Converted to String: " + text, text.endsWith("<hello>world!</hello>")). }
false;public;0;7;;@Test public void testConvertToSource() throws Exception {     Source source = converter.convertTo(Source.class, "<hello>world!</hello>").     assertNotNull(source).     LOG.debug("Found document: " + source). }
false;public;0;8;;@Test public void testStreamSourceToDomSource() throws Exception {     StreamSource streamSource = new StreamSource(new StringReader("<hello>world!</hello>")).     DOMSource domSource = converter.convertTo(DOMSource.class, streamSource).     assertNotNull("Could not convert to a DOMSource!", domSource).     LOG.debug("Found document: " + domSource). }
false;public;0;16;;@Test public void testNodeToSourceThenToInputStream() throws Exception {     Document document = converter.convertTo(Document.class, "<?xml version=\"1.0\"?><hello>world!</hello>").     Element element = document.getDocumentElement().     Source source = converter.convertTo(Source.class, element).     assertNotNull("Could not convert from Node to Source!", source).     LOG.debug("Found source: " + source).     InputStream in = converter.convertTo(InputStream.class, source).     assertNotNull("Could not convert from Source to InputStream!", in).     String actualText = IOConverter.toString(in, null).     assertEquals("Text", "<hello>world!</hello>", actualText). }
