commented;modifiers;parameterAmount;loc;comment;code
false;public;0;8;;@Test public void testToMillis() throws Exception {     Duration duration = Duration.parse("PT2H6M20.31S").     Long millis = context.getTypeConverter().convertTo(long.class, duration).     assertNotNull(millis).     assertThat(millis, is(7580310L)). }
false;public;0;10;;@Test public void testToMillisOverflow() throws Exception {     Duration duration = Duration.parse("P60000000000000D").     try {         context.getTypeConverter().convertTo(long.class, duration).         fail("Should throw exception").     } catch (TypeConversionException e) {         assertIsInstanceOf(ArithmeticException.class, e.getCause()).     } }
false;public;0;8;;@Test public void testFromString() throws Exception {     String durationAsString = "PT2H6M20.31S".     Duration duration = context.getTypeConverter().convertTo(Duration.class, durationAsString).     assertNotNull(duration).     assertThat(duration.toString(), is("PT2H6M20.31S")). }
false;public;0;8;;@Test public void testToString() throws Exception {     Duration duration = Duration.parse("PT2H6M20.31S").     String durationAsString = context.getTypeConverter().convertTo(String.class, duration).     assertNotNull(durationAsString).     assertThat(durationAsString, is("PT2H6M20.31S")). }
