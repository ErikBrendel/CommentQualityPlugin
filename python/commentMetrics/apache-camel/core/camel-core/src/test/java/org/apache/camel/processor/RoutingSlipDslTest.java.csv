commented;modifiers;parameterAmount;loc;comment;code
false;public;0;15;;@Test public void testRoutingSlipDsl() throws Exception {     MockEndpoint x = getMockEndpoint("mock:x").     MockEndpoint y = getMockEndpoint("mock:y").     MockEndpoint z = getMockEndpoint("mock:z").     x.expectedBodiesReceived("foo", "bar").     y.expectedBodiesReceived("foo", "bar").     z.expectedBodiesReceived("foo", "bar").     template.sendBodyAndHeader("direct:a", "foo", "recipientListHeader", "mock:x,mock:y,mock:z").     template.sendBodyAndHeader("direct:a", "bar", "recipientListHeader", "mock:x,mock:y,mock:z").     assertMockEndpointsSatisfied(). }
false;public;0;5;;public void configure() {     from("direct:a").routingSlip().message(m -> m.getHeader("recipientListHeader", String.class).split(",")).end(). }
false;protected;0;9;;protected RouteBuilder createRouteBuilder() {     return new RouteBuilder() {          public void configure() {             from("direct:a").routingSlip().message(m -> m.getHeader("recipientListHeader", String.class).split(",")).end().         }     }. }
