commented;modifiers;parameterAmount;loc;comment;code
false;public;0;9;;@Test public void testDoCatchDirectRoute() throws Exception {     getMockEndpoint("mock:a").expectedMessageCount(1).     getMockEndpoint("mock:b").expectedMessageCount(1).     template.sendBody("direct:start", "Hello World").     assertMockEndpointsSatisfied(). }
false;public;0;16;;@Override public void configure() throws Exception {     from("direct:start").doTry().to("direct:a").doCatch(Exception.class).to("direct:b").end().     from("direct:a").to("mock:a").throwException(new IllegalArgumentException("Forced")).     from("direct:b").to("mock:b"). }
false;protected;0;21;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").doTry().to("direct:a").doCatch(Exception.class).to("direct:b").end().             from("direct:a").to("mock:a").throwException(new IllegalArgumentException("Forced")).             from("direct:b").to("mock:b").         }     }. }
