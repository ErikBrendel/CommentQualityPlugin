commented;modifiers;parameterAmount;loc;comment;code
false;public;1;7;;public Document replaceMe(Document doc) throws Exception {     // replace firstname to contain Servicemix     NodeList list = doc.getElementsByTagName("firstname").     list.item(0).setTextContent("Servicemix").     // return the changed document     return doc. }
false;public;0;9;;@Test public void testXPathTransform() throws Exception {     MockEndpoint mock = getMockEndpoint("mock:result").     mock.expectedBodiesReceived("<root><firstname>Servicemix</firstname><lastname>Camel</lastname></root>").     template.sendBody("direct:start", "<root><firstname>Apache</firstname><lastname>Camel</lastname></root>").     assertMockEndpointsSatisfied(). }
false;public;0;4;;@Override public void configure() throws Exception {     from("direct:start").bean(XPathTransformRouteTest.class, "replaceMe").to("log:result", "mock:result"). }
false;protected;0;9;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").bean(XPathTransformRouteTest.class, "replaceMe").to("log:result", "mock:result").         }     }. }
