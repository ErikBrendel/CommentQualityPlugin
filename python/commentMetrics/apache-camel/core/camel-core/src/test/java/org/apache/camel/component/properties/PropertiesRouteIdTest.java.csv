commented;modifiers;parameterAmount;loc;comment;code
false;public;0;8;;@Test public void testPropertiesRouteId() throws Exception {     assertEquals(1, context.getRoutes().size()).     assertNotNull("Route with name Camel should exist", context.getRoute("Camel")).     String id = context.getRouteDefinition("Camel").getOutputs().get(0).getId().     assertEquals("{{cool.other.name}}", id). }
false;public;0;5;;@Override public void configure() throws Exception {     from("direct:start").routeId("{{cool.name}}").to("mock:result").id("{{cool.other.name}}"). }
false;protected;0;10;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").routeId("{{cool.name}}").to("mock:result").id("{{cool.other.name}}").         }     }. }
false;protected;0;6;;@Override protected CamelContext createCamelContext() throws Exception {     CamelContext context = super.createCamelContext().     context.addComponent("properties", new PropertiesComponent("classpath:org/apache/camel/component/properties/myproperties.properties")).     return context. }
