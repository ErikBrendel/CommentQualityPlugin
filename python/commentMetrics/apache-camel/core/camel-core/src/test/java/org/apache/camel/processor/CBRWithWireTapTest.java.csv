commented;modifiers;parameterAmount;loc;comment;code
false;public;0;10;;@Test public void testCBRWithWireTapCamel() throws Exception {     getMockEndpoint("mock:other").expectedMessageCount(0).     getMockEndpoint("mock:camel").expectedMessageCount(1).     getMockEndpoint("mock:donkey").expectedMessageCount(0).     template.sendBody("direct:start", "Camel rules").     assertMockEndpointsSatisfied(). }
false;public;0;10;;@Test public void testCBRWithWireTapDonkey() throws Exception {     getMockEndpoint("mock:other").expectedMessageCount(0).     getMockEndpoint("mock:camel").expectedMessageCount(0).     getMockEndpoint("mock:donkey").expectedMessageCount(1).     template.sendBody("direct:start", "Donkey kong").     assertMockEndpointsSatisfied(). }
false;public;0;10;;@Test public void testCBRWithWireTapOther() throws Exception {     getMockEndpoint("mock:other").expectedMessageCount(1).     getMockEndpoint("mock:camel").expectedMessageCount(0).     getMockEndpoint("mock:donkey").expectedMessageCount(0).     template.sendBody("direct:start", "Hello World").     assertMockEndpointsSatisfied(). }
false;public;0;11;;@Override public void configure() throws Exception {     from("direct:start").choice().when(body().contains("Camel")).wireTap("mock:camel").end().when(body().contains("Donkey")).wireTap("mock:donkey").end().otherwise().to("mock:other"). }
false;protected;0;16;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").choice().when(body().contains("Camel")).wireTap("mock:camel").end().when(body().contains("Donkey")).wireTap("mock:donkey").end().otherwise().to("mock:other").         }     }. }
