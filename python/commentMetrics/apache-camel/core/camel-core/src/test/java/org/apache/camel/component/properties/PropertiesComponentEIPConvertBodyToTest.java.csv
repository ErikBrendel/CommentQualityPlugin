commented;modifiers;parameterAmount;loc;comment;code
false;public;0;11;;@Test public void testConvertToBytesCharset() throws Exception {     byte[] body = "Hello World".getBytes("iso-8859-1").     MockEndpoint result = getMockEndpoint("mock:result").     result.expectedBodiesReceived(body).     template.sendBody("direct:start", "Hello World").     assertMockEndpointsSatisfied(). }
false;public;0;6;;@Override public void configure() throws Exception {     from("direct:start").convertBodyTo(byte[].class, "{{myCoolCharset}}").to("mock:result"). }
false;protected;0;11;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").convertBodyTo(byte[].class, "{{myCoolCharset}}").to("mock:result").         }     }. }
false;protected;0;10;;@Override protected CamelContext createCamelContext() throws Exception {     CamelContext context = super.createCamelContext().     PropertiesComponent pc = new PropertiesComponent().     pc.setLocations(new String[] { "classpath:org/apache/camel/component/properties/myproperties.properties" }).     context.addComponent("properties", pc).     return context. }
