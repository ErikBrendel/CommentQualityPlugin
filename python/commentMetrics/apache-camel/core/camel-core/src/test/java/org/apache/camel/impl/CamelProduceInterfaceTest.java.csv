commented;modifiers;parameterAmount;loc;comment;code
false;public;0;5;;@Test public void testCamelProduceInterface() throws Exception {     String reply = echo.hello("Camel").     assertEquals("Hello Camel", reply). }
false;public;0;8;;@Override public void configure() throws Exception {     // we gotta cheat and use proxy builder as ContextTestSupport doesnt do     // all the IoC wiring we need when using @Produce on an interface     echo = new ProxyBuilder(context).endpoint("direct:hello").build(Echo.class).     from("direct:hello").transform(body().prepend("Hello ")). }
false;protected;0;13;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             // we gotta cheat and use proxy builder as ContextTestSupport doesnt do             // all the IoC wiring we need when using @Produce on an interface             echo = new ProxyBuilder(context).endpoint("direct:hello").build(Echo.class).             from("direct:hello").transform(body().prepend("Hello ")).         }     }. }
