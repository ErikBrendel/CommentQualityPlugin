commented;modifiers;parameterAmount;loc;comment;code
false;public;0;8;;@Test public void testPropertiesAndSimple() throws Exception {     getMockEndpoint("mock:result").expectedHeaderReceived("foo", "http://mycoolserver/myapp").     template.sendBodyAndHeader("direct:start", "Hello World", "app", "myapp").     assertMockEndpointsSatisfied(). }
false;protected;0;10;;@Override protected CamelContext createCamelContext() throws Exception {     CamelContext context = super.createCamelContext().     PropertiesComponent pc = new PropertiesComponent().     pc.setLocation("classpath:org/apache/camel/component/properties/cheese.properties").     context.addComponent("properties", pc).     return context. }
false;public;0;6;;@Override public void configure() throws Exception {     from("direct:start").setHeader("foo").simple("{{cheese.server}}/${header.app}").to("mock:result"). }
false;protected;0;11;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").setHeader("foo").simple("{{cheese.server}}/${header.app}").to("mock:result").         }     }. }
