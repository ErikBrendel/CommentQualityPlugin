commented;modifiers;parameterAmount;loc;comment;code
false;public;0;7;;@Override @Before public void setUp() throws Exception {     deleteDirectory("target/data/done").     deleteDirectory("target/data/reports").     super.setUp(). }
false;public;0;10;;@Test public void testRenameSuccess() throws Exception {     MockEndpoint mock = getMockEndpoint("mock:report").     mock.expectedBodiesReceived("Hello Paris").     mock.expectedFileExists("target/data/done/paris.txt", "Hello Paris").     template.sendBodyAndHeader("file:target/data/reports", "Hello Paris", Exchange.FILE_NAME, "paris.txt").     mock.assertIsSatisfied(). }
false;public;0;26;;@Test public void testRenameFileExists() throws Exception {     // create a file in done to let there be a duplicate file     File file = new File("target/data/done").     file.mkdirs().     FileWriter fw = new FileWriter("target/data/done/london.txt").     try {         fw.write("I was there once in London").         fw.flush().     } finally {         fw.close().     }     MockEndpoint mock = getMockEndpoint("mock:report").     mock.expectedBodiesReceived("Hello London").     template.sendBodyAndHeader("file:target/data/reports", "Hello London", Exchange.FILE_NAME, "london.txt").     mock.assertIsSatisfied().     oneExchangeDone.matchesMockWaitTime().     // content of file should be Hello London     String content = IOConverter.toString(new File("target/data/done/london.txt"), null).     assertEquals("The file should have been renamed replacing any existing files", "Hello London", content). }
false;public;0;4;;public void configure() throws Exception {     from("file://target/data/reports?move=../done/${file:name}&initialDelay=0&delay=10").convertBodyTo(String.class).to("mock:report"). }
false;protected;0;8;;protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          public void configure() throws Exception {             from("file://target/data/reports?move=../done/${file:name}&initialDelay=0&delay=10").convertBodyTo(String.class).to("mock:report").         }     }. }
