commented;modifiers;parameterAmount;loc;comment;code
false;public;0;12;;@Test public void testConvertToBytesCharset() throws Exception {     byte[] body = "Hello World".getBytes("iso-8859-1").     getMockEndpoint("mock:null").expectedMessageCount(0).     MockEndpoint result = getMockEndpoint("mock:result").     result.expectedBodiesReceived(body).     template.sendBody("direct:start", "Hello World").     assertMockEndpointsSatisfied(). }
false;public;0;9;;@Test public void testNullBody() throws Exception {     getMockEndpoint("mock:null").expectedMessageCount(1).     getMockEndpoint("mock:result").expectedMessageCount(0).     template.sendBody("direct:start", null).     assertMockEndpointsSatisfied(). }
false;public;0;10;;@Override public void configure() throws Exception {     from("direct:start").choice().when(body().isNotNull()).convertBodyTo(byte[].class, "{{myCoolCharset}}").to("mock:result").otherwise().to("mock:null"). }
false;protected;0;15;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").choice().when(body().isNotNull()).convertBodyTo(byte[].class, "{{myCoolCharset}}").to("mock:result").otherwise().to("mock:null").         }     }. }
false;protected;0;10;;@Override protected CamelContext createCamelContext() throws Exception {     CamelContext context = super.createCamelContext().     PropertiesComponent pc = new PropertiesComponent().     pc.setLocations(new String[] { "classpath:org/apache/camel/component/properties/myproperties.properties" }).     context.addComponent("properties", pc).     return context. }
