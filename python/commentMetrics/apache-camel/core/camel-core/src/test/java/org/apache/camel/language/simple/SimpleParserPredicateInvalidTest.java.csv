commented;modifiers;parameterAmount;loc;comment;code
false;public;0;13;;@Test public void testSimpleEqFunctionInvalid() throws Exception {     exchange.getIn().setBody("Hello").     exchange.getIn().setHeader("high", true).     SimplePredicateParser parser = new SimplePredicateParser("${header.high} == abc", true, null).     try {         parser.parsePredicate().         fail("Should thrown exception").     } catch (SimpleIllegalSyntaxException e) {         assertEquals(19, e.getIndex()).     } }
false;public;0;13;;@Test public void testSimpleInvalidSymbol() throws Exception {     exchange.getIn().setBody("Hello").     exchange.getIn().setHeader("high", true).     SimplePredicateParser parser = new SimplePredicateParser("${header.high} = true", true, null).     try {         parser.parsePredicate().         fail("Should thrown exception").     } catch (SimpleIllegalSyntaxException e) {         assertEquals(15, e.getIndex()).     } }
false;public;0;12;;@Test public void testSimpleUnevenSingleQuote() throws Exception {     exchange.getIn().setBody("foo").     SimplePredicateParser parser = new SimplePredicateParser("${body} == 'foo", true, null).     try {         parser.parsePredicate().         fail("Should thrown exception").     } catch (SimpleIllegalSyntaxException e) {         assertEquals(14, e.getIndex()).     } }
false;public;0;12;;@Test public void testSimpleUnevenDoubleQuote() throws Exception {     exchange.getIn().setBody("foo").     SimplePredicateParser parser = new SimplePredicateParser("${body} == \"foo", true, null).     try {         parser.parsePredicate().         fail("Should thrown exception").     } catch (SimpleIllegalSyntaxException e) {         assertEquals(14, e.getIndex()).     } }
false;public;0;12;;@Test public void testSimpleTwoAnd() throws Exception {     exchange.getIn().setBody("foo").     SimplePredicateParser parser = new SimplePredicateParser("${body} == 'foo' && && ${header} == 123", true, null).     try {         parser.parsePredicate().         fail("Should thrown exception").     } catch (SimpleIllegalSyntaxException e) {         assertEquals(20, e.getIndex()).     } }
false;public;0;12;;@Test public void testSimpleTwoOr() throws Exception {     exchange.getIn().setBody("foo").     SimplePredicateParser parser = new SimplePredicateParser("${body} == 'foo' || || ${header} == 123", true, null).     try {         parser.parsePredicate().         fail("Should thrown exception").     } catch (SimpleIllegalSyntaxException e) {         assertEquals(20, e.getIndex()).     } }
false;public;0;12;;@Test public void testSimpleTwoEq() throws Exception {     exchange.getIn().setBody("foo").     SimplePredicateParser parser = new SimplePredicateParser("${body} == == 'foo'", true, null).     try {         parser.parsePredicate().         fail("Should thrown exception").     } catch (SimpleIllegalSyntaxException e) {         assertEquals(13, e.getIndex()).     } }
