commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;8;;@Override protected JndiRegistry createRegistry() throws Exception {     my = new MyComponent().     JndiRegistry jndi = super.createRegistry().     jndi.bind("my", my).     return jndi. }
false;public;0;14;;@Test public void testStartupListenerComponent() throws Exception {     // and now the routes are started     assertTrue(context.getRouteController().getRouteStatus("foo").isStarted()).     assertTrue(context.getRouteController().getRouteStatus("bar").isStarted()).     getMockEndpoint("mock:result").expectedMessageCount(1).     template.sendBody("direct:foo", "Hello World").     assertMockEndpointsSatisfied().     assertEquals(1, my.getInvoked()). }
false;public;2;7;;public void onCamelContextStarted(CamelContext context, boolean alreadyStarted) throws Exception {     invoked++.     // the routes should not have been started as they start afterwards     assertTrue(context.getRouteController().getRouteStatus("foo").isStopped()).     assertTrue(context.getRouteController().getRouteStatus("bar").isStopped()). }
false;public;0;3;;public int getInvoked() {     return invoked. }
false;public;0;5;;@Override public void configure() throws Exception {     from("direct:foo").routeId("foo").to("my:bar").     from("my:bar").routeId("bar").to("mock:result"). }
false;protected;0;10;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:foo").routeId("foo").to("my:bar").             from("my:bar").routeId("bar").to("mock:result").         }     }. }
