commented;modifiers;parameterAmount;loc;comment;code
false;public;0;7;;@Override @Before public void setUp() throws Exception {     deleteDirectory("target/data/changed/in").     createDirectory("target/data/changed/out").     super.setUp(). }
false;public;0;24;;@Test public void testChangedReadLockZeroTimeout() throws Exception {     MockEndpoint mock = getMockEndpoint("mock:result").     mock.expectedMessageCount(1).     mock.expectedFileExists("target/data/changed/out/hello1.txt").     template.sendBodyAndHeader("file://target/data/changed/in", "Hello World", Exchange.FILE_NAME, "hello1.txt").     Thread.sleep(100).     File file = new File("target/data/changed/in/hello1.txt").     assertTrue(file.delete()).     mock.reset().     oneExchangeDone.reset().     mock.expectedMessageCount(1).     mock.expectedFileExists("target/data/changed/out/hello2.txt").     template.sendBodyAndHeader("file://target/data/changed/in", "Hello Again World", Exchange.FILE_NAME, "hello2.txt").     assertMockEndpointsSatisfied().     oneExchangeDone.matchesMockWaitTime(). }
false;public;0;5;;@Override public void configure() throws Exception {     from("file:target/data/changed/in?initialDelay=0&delay=10&readLock=changed&readLockCheckInterval=5000&readLockTimeout=0").to("file:target/data/changed/out", "mock:result"). }
false;protected;0;10;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("file:target/data/changed/in?initialDelay=0&delay=10&readLock=changed&readLockCheckInterval=5000&readLockTimeout=0").to("file:target/data/changed/out", "mock:result").         }     }. }
