commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;6;;@Override protected CamelContext createCamelContext() throws Exception {     CamelContext context = super.createCamelContext().     context.getGlobalOptions().put(Exchange.MAXIMUM_ENDPOINT_CACHE_SIZE, "20").     return context. }
false;public;0;38;;@Test public void testEndpointRegistryKeepRouteEndpointsRemoveRoute() throws Exception {     assertTrue(context.hasEndpoint("direct://start") != null).     assertTrue(context.hasEndpoint("log://start") != null).     assertTrue(context.hasEndpoint("log://foo") != null).     assertTrue(context.hasEndpoint("mock://result") != null).     assertTrue(context.hasEndpoint("direct://bar") != null).     assertTrue(context.hasEndpoint("log://bar") != null).     assertEquals(6, context.getEndpointRegistry().staticSize()).     // we dont have this endpoint yet     assertFalse(context.hasEndpoint("mock://unknown0") != null).     for (int i = 0. i < 50. i++) {         template.sendBody("mock:unknown" + i, "Hello " + i).     }     assertEquals(6, context.getEndpointRegistry().staticSize()).     assertTrue(context.hasEndpoint("direct://start") != null).     assertTrue(context.hasEndpoint("log://start") != null).     assertTrue(context.hasEndpoint("log://foo") != null).     assertTrue(context.hasEndpoint("mock://result") != null).     assertTrue(context.hasEndpoint("direct://bar") != null).     assertTrue(context.hasEndpoint("log://bar") != null).     // now stop and remove the bar route     context.getRouteController().stopRoute("bar").     context.removeRoute("bar").     assertEquals(4, context.getEndpointRegistry().staticSize()).     assertTrue(context.hasEndpoint("direct://start") != null).     assertTrue(context.hasEndpoint("log://start") != null).     assertTrue(context.hasEndpoint("log://foo") != null).     assertTrue(context.hasEndpoint("mock://result") != null).     assertFalse(context.hasEndpoint("direct://bar") != null).     assertFalse(context.hasEndpoint("log://bar") != null). }
false;public;0;6;;@Override public void configure() throws Exception {     from("direct:start").routeId("foo").to("log:start").to("log:foo").to("mock:result").     from("direct:bar").routeId("bar").to("log:bar"). }
false;protected;0;11;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").routeId("foo").to("log:start").to("log:foo").to("mock:result").             from("direct:bar").routeId("bar").to("log:bar").         }     }. }
