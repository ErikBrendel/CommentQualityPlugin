commented;modifiers;parameterAmount;loc;comment;code
false;public;0;27;;@Test public void testStopCamelFromRoute() throws Exception {     // create camel, add routes, and start camel     CamelContext context = new DefaultCamelContext().     context.addRoutes(createMyRoutes()).     context.start().     // setup mock expectations for unit test     MockEndpoint start = context.getEndpoint("mock:start", MockEndpoint.class).     start.expectedMessageCount(1).     MockEndpoint done = context.getEndpoint("mock:done", MockEndpoint.class).     done.expectedMessageCount(1).     // send a message to the route     ProducerTemplate template = context.createProducerTemplate().     template.sendBody("direct:start", "Hello Camel").     // wait for the latch (use 1 minute as fail safe, due unit test)     assertTrue(latch.await(1, TimeUnit.MINUTES)).     // stop camel     context.stop().     // unit test assertions     start.assertIsSatisfied().     done.assertIsSatisfied(). }
false;public;1;5;;@Override public void process(Exchange exchange) throws Exception {     // stop Camel by signalling to the latch     latch.countDown(). }
false;public;0;12;;@Override public void configure() throws Exception {     from("direct:start").routeId("myRoute").to("mock:start").process(new Processor() {          @Override         public void process(Exchange exchange) throws Exception {             // stop Camel by signalling to the latch             latch.countDown().         }     }).to("mock:done"). }
true;public;0;16;// START SNIPPET: e2 ;// END SNIPPET: e1 // START SNIPPET: e2 public RouteBuilder createMyRoutes() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").routeId("myRoute").to("mock:start").process(new Processor() {                  @Override                 public void process(Exchange exchange) throws Exception {                     // stop Camel by signalling to the latch                     latch.countDown().                 }             }).to("mock:done").         }     }. }
