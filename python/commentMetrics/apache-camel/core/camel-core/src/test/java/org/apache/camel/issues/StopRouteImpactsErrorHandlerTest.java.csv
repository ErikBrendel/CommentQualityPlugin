commented;modifiers;parameterAmount;loc;comment;code
false;public;0;7;;@Override public void configure() throws Exception {     interceptSendToEndpoint("seda:*").skipSendToOriginalEndpoint().to("log:seda").throwException(new IllegalArgumentException("Forced")). }
false;public;0;7;;@Override public void configure() throws Exception {     interceptSendToEndpoint("smtp*").to("log:smtp").skipSendToOriginalEndpoint().to("mock:smtp"). }
false;public;0;34;;@Test public void testIssue() throws Exception {     RouteDefinition testRoute = context.getRouteDefinition("TestRoute").     RouteReifier.adviceWith(testRoute, context, new RouteBuilder() {          @Override         public void configure() throws Exception {             interceptSendToEndpoint("seda:*").skipSendToOriginalEndpoint().to("log:seda").throwException(new IllegalArgumentException("Forced")).         }     }).     RouteDefinition smtpRoute = context.getRouteDefinition("smtpRoute").     RouteReifier.adviceWith(smtpRoute, context, new RouteBuilder() {          @Override         public void configure() throws Exception {             interceptSendToEndpoint("smtp*").to("log:smtp").skipSendToOriginalEndpoint().to("mock:smtp").         }     }).     // we should fail and end up sending to smtp     getMockEndpoint("mock:smtp").expectedMessageCount(1).     // stopping a route after advice with causes problem with error handlers     context.getRouteController().stopRoute("pollRoute").     template.sendBody("direct:start", "Hello World").     assertMockEndpointsSatisfied(). }
false;public;0;21;;@Override public void configure() throws Exception {     context.addComponent("smtp", context.getComponent("mock")).     errorHandler(deadLetterChannel("direct:emailSupport").maximumRedeliveries(2).redeliveryDelay(0)).     from("direct:emailSupport").routeId("smtpRoute").errorHandler(deadLetterChannel("log:dead?level=ERROR")).to("smtp://smtpServer").     from("timer://someTimer?delay=15000&fixedRate=true&period=5000").routeId("pollRoute").to("log:level=INFO").     from("direct:start").routeId("TestRoute").to("seda:foo"). }
false;protected;0;26;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             context.addComponent("smtp", context.getComponent("mock")).             errorHandler(deadLetterChannel("direct:emailSupport").maximumRedeliveries(2).redeliveryDelay(0)).             from("direct:emailSupport").routeId("smtpRoute").errorHandler(deadLetterChannel("log:dead?level=ERROR")).to("smtp://smtpServer").             from("timer://someTimer?delay=15000&fixedRate=true&period=5000").routeId("pollRoute").to("log:level=INFO").             from("direct:start").routeId("TestRoute").to("seda:foo").         }     }. }
