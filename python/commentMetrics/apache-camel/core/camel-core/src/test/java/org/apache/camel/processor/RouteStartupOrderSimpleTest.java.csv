commented;modifiers;parameterAmount;loc;comment;code
false;public;0;17;;@Test public void testRouteStartupOrder() throws Exception {     MockEndpoint mock = getMockEndpoint("mock:result").     mock.expectedMessageCount(1).     template.sendBody("direct:start", "Hello World").     assertMockEndpointsSatisfied().     // assert correct order     DefaultCamelContext dcc = (DefaultCamelContext) context.     List<RouteStartupOrder> order = dcc.getRouteStartupOrder().     assertEquals(2, order.size()).     assertEquals("direct://start", order.get(0).getRoute().getEndpoint().getEndpointUri()).     assertEquals("seda://foo", order.get(1).getRoute().getEndpoint().getEndpointUri()). }
false;public;0;6;;@Override public void configure() throws Exception {     from("seda:foo").startupOrder(2).routeId("b").to("mock:result").     from("direct:start").startupOrder(1).routeId("a").to("seda:foo"). }
false;protected;0;11;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("seda:foo").startupOrder(2).routeId("b").to("mock:result").             from("direct:start").startupOrder(1).routeId("a").to("seda:foo").         }     }. }
