commented;modifiers;parameterAmount;loc;comment;code
false;public;0;9;;@Test public void testSendMessage() throws Exception {     String expectedBody = "Wobble".     template.sendBodyAndHeader("direct:in", expectedBody, "foo", "bar").     assertEquals("bean body: " + myBean, expectedBody, myBean.body).     assertEquals("bean foo: " + myBean, "bar", myBean.foo). }
false;protected;0;6;;@Override protected Context createJndiContext() throws Exception {     JndiContext answer = new JndiContext().     answer.bind("myBean", myBean).     return answer. }
false;public;0;3;;public void configure() {     from("direct:in").bean("myBean"). }
false;protected;0;7;;protected RouteBuilder createRouteBuilder() {     return new RouteBuilder() {          public void configure() {             from("direct:in").bean("myBean").         }     }. }
false;public;0;4;;@Override public String toString() {     return "MyBean[foo: " + foo + " body: " + body + "]". }
false;public;2;5;;public void read(String body, @Simple("${header.foo}") String foo) {     this.foo = foo.     this.body = body.     LOG.info("read() method called on " + this). }
