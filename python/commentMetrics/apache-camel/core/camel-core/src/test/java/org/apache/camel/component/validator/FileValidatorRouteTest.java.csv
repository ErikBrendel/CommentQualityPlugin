commented;modifiers;parameterAmount;loc;comment;code
false;public;0;15;;@Test public void testValidMessage() throws Exception {     validEndpoint.expectedMessageCount(1).     finallyEndpoint.expectedMessageCount(1).     template.sendBodyAndHeader("file:target/data/validator", "<mail xmlns='http://foo.com/bar'><subject>Hey</subject><body>Hello world!</body></mail>", Exchange.FILE_NAME, "valid.xml").     MockEndpoint.assertIsSatisfied(validEndpoint, invalidEndpoint, finallyEndpoint).     // should be able to delete the file     oneExchangeDone.matchesMockWaitTime().     assertTrue("Should be able to delete the file", FileUtil.deleteFile(new File("target/data/validator/valid.xml"))). }
false;public;0;15;;@Test public void testInvalidMessage() throws Exception {     invalidEndpoint.expectedMessageCount(1).     finallyEndpoint.expectedMessageCount(1).     template.sendBodyAndHeader("file:target/data/validator", "<mail xmlns='http://foo.com/bar'><body>Hello world!</body></mail>", Exchange.FILE_NAME, "invalid.xml").     MockEndpoint.assertIsSatisfied(validEndpoint, invalidEndpoint, finallyEndpoint).     // should be able to delete the file     oneExchangeDone.matchesMockWaitTime().     assertTrue("Should be able to delete the file", FileUtil.deleteFile(new File("target/data/validator/invalid.xml"))). }
false;public;0;9;;@Override @Before public void setUp() throws Exception {     deleteDirectory("target/data/validator").     super.setUp().     validEndpoint = resolveMandatoryEndpoint("mock:valid", MockEndpoint.class).     invalidEndpoint = resolveMandatoryEndpoint("mock:invalid", MockEndpoint.class).     finallyEndpoint = resolveMandatoryEndpoint("mock:finally", MockEndpoint.class). }
false;public;0;12;;@Override public void configure() throws Exception {     from("file:target/data/validator?noop=true").doTry().to("validator:org/apache/camel/component/validator/schema.xsd").to("mock:valid").doCatch(ValidationException.class).to("mock:invalid").doFinally().to("mock:finally").end(). }
false;protected;0;17;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("file:target/data/validator?noop=true").doTry().to("validator:org/apache/camel/component/validator/schema.xsd").to("mock:valid").doCatch(ValidationException.class).to("mock:invalid").doFinally().to("mock:finally").end().         }     }. }
