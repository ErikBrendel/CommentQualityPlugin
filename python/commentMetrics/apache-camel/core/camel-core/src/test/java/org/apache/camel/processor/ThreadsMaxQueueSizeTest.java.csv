commented;modifiers;parameterAmount;loc;comment;code
false;public;0;8;;@Test public void testThreadsMaxQueueSize() throws Exception {     getMockEndpoint("mock:result").expectedMessageCount(1).     template.sendBody("direct:start", "Hello World").     assertMockEndpointsSatisfied(). }
false;public;0;8;;@Test public void testThreadsMaxQueueSizeBuilder() throws Exception {     getMockEndpoint("mock:result").expectedMessageCount(1).     template.sendBody("direct:foo", "Hello World").     assertMockEndpointsSatisfied(). }
false;public;0;13;;@Override public void configure() throws Exception {     from("direct:start").threads(5, 10).maxQueueSize(2000).to("mock:result").     from("direct:foo").threads().poolSize(5).maxPoolSize(10).maxQueueSize(2000).threadName("myPool").to("mock:result"). }
false;protected;0;18;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").threads(5, 10).maxQueueSize(2000).to("mock:result").             from("direct:foo").threads().poolSize(5).maxPoolSize(10).maxQueueSize(2000).threadName("myPool").to("mock:result").         }     }. }
