commented;modifiers;parameterAmount;loc;comment;code
false;public;0;9;;@Test public void testInOutWithErrorUsingDLC() throws Exception {     getMockEndpoint("mock:result").expectedMessageCount(0).     getMockEndpoint("mock:dead").expectedMessageCount(1).     template.requestBody("direct:start", "Hello World", String.class).     assertMockEndpointsSatisfied(). }
false;public;0;10;;@Override public void configure() throws Exception {     errorHandler(deadLetterChannel("mock:dead").maximumRedeliveries(2).redeliveryDelay(0)).     from("direct:start").to("seda:foo").     from("seda:foo").transform(constant("Bye World")).throwException(new IllegalArgumentException("Damn I cannot do this")).to("mock:result"). }
false;protected;0;15;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             errorHandler(deadLetterChannel("mock:dead").maximumRedeliveries(2).redeliveryDelay(0)).             from("direct:start").to("seda:foo").             from("seda:foo").transform(constant("Bye World")).throwException(new IllegalArgumentException("Damn I cannot do this")).to("mock:result").         }     }. }
