commented;modifiers;parameterAmount;loc;comment;code
false;public;0;11;;@Test public void testDefaultErrorHandlerCatchThrowable() throws Exception {     try {         template.sendBody("direct:start", "Hello World").         fail("Should have thrown exception").     } catch (CamelExecutionException e) {         assertEquals("Hello World", e.getExchange().getIn().getBody()).         NoSuchMethodError cause = assertIsInstanceOf(NoSuchMethodError.class, e.getCause()).         assertEquals("This is an Error not an Exception", cause.getMessage()).     } }
false;public;1;3;;public void process(Exchange exchange) throws Exception {     throw new NoSuchMethodError(exceptionString). }
false;public;0;11;;@Override public void configure() throws Exception {     final String exceptionString = "This is an Error not an Exception".     from("direct:start").process(new Processor() {          public void process(Exchange exchange) throws Exception {             throw new NoSuchMethodError(exceptionString).         }     }). }
false;protected;0;16;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             final String exceptionString = "This is an Error not an Exception".             from("direct:start").process(new Processor() {                  public void process(Exchange exchange) throws Exception {                     throw new NoSuchMethodError(exceptionString).                 }             }).         }     }. }
