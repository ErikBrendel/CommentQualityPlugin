commented;modifiers;parameterAmount;loc;comment;code
false;public;0;31;;@Test public void testBeanConcurrent() throws Exception {     MockEndpoint mock = getMockEndpoint("mock:result").     mock.expectedMessageCount(1000).     mock.expectsNoDuplicates(body()).     // start from 1000 to be 4 digit always (easier to string compare)     for (int i = 1000. i < 2000. i++) {         template.sendBody("seda:foo", "" + i).     }     context.getRouteController().startRoute("foo").     assertMockEndpointsSatisfied().     // should be 1000 messages     List<String> list = new ArrayList<>().     for (int i = 0. i < 1000. i++) {         String body = mock.getReceivedExchanges().get(i).getIn().getBody(String.class).         list.add(body).     }     list.sort(null).     // and they should be unique and no lost messages     assertEquals(1000, list.size()).     for (int i = 1. i < 1000. i++) {         int num = 1000 + i.         String s = "" + num + " " + num.         assertEquals(s, list.get(i)).     } }
false;protected;0;6;;@Override protected JndiRegistry createRegistry() throws Exception {     JndiRegistry jndi = super.createRegistry().     jndi.bind("myBean", new MyBean()).     return jndi. }
false;public;0;6;;@Override public void configure() throws Exception {     from("seda:foo?concurrentConsumers=10").routeId("foo").noAutoStartup().transform(method("myBean")).to("mock:result"). }
false;protected;0;11;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("seda:foo?concurrentConsumers=10").routeId("foo").noAutoStartup().transform(method("myBean")).to("mock:result").         }     }. }
false;public;0;3;;public String getFoo() {     return foo. }
false;public;1;3;;public void setFoo(String foo) {     this.foo = foo. }
false;public;0;3;;public String getBar() {     return bar. }
false;public;1;3;;public void setBar(String bar) {     this.bar = bar. }
false;public;0;3;;public int getBaz() {     return baz. }
false;public;1;3;;public void setBaz(int baz) {     this.baz = baz. }
false;public;0;3;;public void doSomething() { // noop }
false;public;1;3;;public String echo(String s) {     return s + " " + s. }
false;public;0;4;;@Override public String toString() {     return "MyBean". }
