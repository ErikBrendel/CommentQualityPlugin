commented;modifiers;parameterAmount;loc;comment;code
false;public;0;9;;@Test public void testIntercept() throws Exception {     getMockEndpoint("mock:intercept").expectedMessageCount(1).     getMockEndpoint("mock:result").expectedMessageCount(1).     template.sendBody("direct:start", "Hello World").     assertMockEndpointsSatisfied(). }
false;public;0;8;;@Override public void configure() throws Exception {     interceptSendToEndpoint("stub:foo?privateKeyFile=/user/.ssh.id_rsa").to("mock:intercept").     from("direct:start").to("stub:foo?privateKeyFile=/user/.ssh.id_rsa").to("mock:result"). }
false;protected;0;13;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             interceptSendToEndpoint("stub:foo?privateKeyFile=/user/.ssh.id_rsa").to("mock:intercept").             from("direct:start").to("stub:foo?privateKeyFile=/user/.ssh.id_rsa").to("mock:result").         }     }. }
