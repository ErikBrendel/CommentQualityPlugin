commented;modifiers;parameterAmount;loc;comment;code
false;public;0;18;;@Test public void testRedelivery() throws Exception {     StopWatch watch = new StopWatch().     MockEndpoint before = getMockEndpoint("mock:foo").     before.expectedMessageCount(1).     template.sendBody("seda:start", "Hello World").     assertMockEndpointsSatisfied().     Thread.sleep(500).     context.stop().     // we should reject the task and stop quickly     assertTrue("Should stop quickly: " + watch.taken(), watch.taken() < 5000). }
false;public;0;9;;@Override public void configure() throws Exception {     errorHandler(defaultErrorHandler().maximumRedeliveries(5).redeliveryDelay(5000).allowRedeliveryWhileStopping(false)).     from("seda:start").to("mock:foo").throwException(new IllegalArgumentException("Forced")). }
false;protected;0;14;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             errorHandler(defaultErrorHandler().maximumRedeliveries(5).redeliveryDelay(5000).allowRedeliveryWhileStopping(false)).             from("seda:start").to("mock:foo").throwException(new IllegalArgumentException("Forced")).         }     }. }
