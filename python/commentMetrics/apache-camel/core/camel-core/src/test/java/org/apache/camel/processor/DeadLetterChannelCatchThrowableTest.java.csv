commented;modifiers;parameterAmount;loc;comment;code
false;public;0;9;;@Test public void testDeadLetterChannelCatchThrowable() throws Exception {     MockEndpoint mock = getMockEndpoint("mock:error").     mock.expectedMessageCount(1).     template.sendBody("direct:start", "Hello World").     assertMockEndpointsSatisfied(). }
false;public;1;3;;public void process(Exchange exchange) throws Exception {     throw new NoSuchMethodError(exceptionString). }
false;public;0;12;;@Override public void configure() throws Exception {     final String exceptionString = "This is an Error not an Exception".     errorHandler(deadLetterChannel("mock:error")).     from("direct:start").process(new Processor() {          public void process(Exchange exchange) throws Exception {             throw new NoSuchMethodError(exceptionString).         }     }). }
false;protected;0;17;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             final String exceptionString = "This is an Error not an Exception".             errorHandler(deadLetterChannel("mock:error")).             from("direct:start").process(new Processor() {                  public void process(Exchange exchange) throws Exception {                     throw new NoSuchMethodError(exceptionString).                 }             }).         }     }. }
