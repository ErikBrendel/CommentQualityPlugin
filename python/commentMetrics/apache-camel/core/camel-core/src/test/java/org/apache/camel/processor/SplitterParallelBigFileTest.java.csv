commented;modifiers;parameterAmount;loc;comment;code
false;public;0;8;;@Override @Before public void setUp() throws Exception {     deleteDirectory("target/data/split").     createDirectory("target/split").     createBigFile().     super.setUp(). }
false;private;0;9;;private void createBigFile() throws Exception {     File file = new File("target/split/bigfile.txt").     FileOutputStream fos = new FileOutputStream(file).     for (int i = 0. i < lines. i++) {         String line = "line-" + i + LS.         fos.write(line.getBytes()).     }     IOHelper.close(fos). }
false;public;0;16;;@Test public void testSplitParallelBigFile() throws Exception {     StopWatch watch = new StopWatch().     NotifyBuilder builder = new NotifyBuilder(context).whenDone(lines + 1).create().     boolean done = builder.matches(120, TimeUnit.SECONDS).     log.info("Took " + TimeUtils.printDuration(watch.taken())).     if (!done) {         throw new CamelException("Could not split file in 2 minutes").     }     // need a little sleep for capturing memory profiling     Thread.sleep(60 * 1000). }
false;public;0;11;;@Override public void configure() throws Exception {     // lower max pool to 10 for less number of concurrent threads     // context.getExecutorServiceStrategy().getDefaultThreadPoolProfile().setMaxPoolSize(10).     from("file:target/data/split?initialDelay=0&delay=10").split(body().tokenize(LS)).streaming().parallelProcessing().to("log:split?groupSize=1000").end().log("Done splitting ${file:name}"). }
false;protected;0;16;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             // lower max pool to 10 for less number of concurrent threads             // context.getExecutorServiceStrategy().getDefaultThreadPoolProfile().setMaxPoolSize(10).             from("file:target/data/split?initialDelay=0&delay=10").split(body().tokenize(LS)).streaming().parallelProcessing().to("log:split?groupSize=1000").end().log("Done splitting ${file:name}").         }     }. }
