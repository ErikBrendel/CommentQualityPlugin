commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public void configure() throws Exception {     from("direct:start").bean("foo"). }
false;public;0;19;;@Test public void testCamelWithJndi() throws Exception {     JndiContext jndi = new JndiContext().     jndi.bind("foo", new MyOtherDummyBean()).     CamelContext camel = new DefaultCamelContext(jndi).     camel.addRoutes(new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").bean("foo").         }     }).     camel.start().     String reply = camel.createProducerTemplate().requestBody("direct:start", "Camel", String.class).     assertEquals("Hello Camel", reply).     camel.stop(). }
false;public;1;3;;public String hello(String s) {     return "Hello " + s. }
