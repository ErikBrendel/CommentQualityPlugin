commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public void configure() throws Exception {     weaveById("removeMe").remove(). }
false;public;0;19;;@Test public void testAdviceWithOnException() throws Exception {     RouteDefinition route = context.getRouteDefinitions().get(0).     RouteReifier.adviceWith(route, context, new AdviceWithRouteBuilder() {          @Override         public void configure() throws Exception {             weaveById("removeMe").remove().         }     }).     context.start().     getMockEndpoint("mock:a").expectedBodiesReceived("Hello World").     getMockEndpoint("mock:b").expectedMessageCount(0).     getMockEndpoint("mock:handled").expectedBodiesReceived("Hello World").     template.sendBody("direct:start", "Hello World").     assertMockEndpointsSatisfied(). }
false;public;1;4;;@Override public void process(Exchange exchange) throws Exception {     exchange.getIn().setBody("I changed this"). }
false;public;0;16;;@Override public void configure() throws Exception {     onException(IllegalArgumentException.class).process(new Processor() {          @Override         public void process(Exchange exchange) throws Exception {             exchange.getIn().setBody("I changed this").         }     }).id("removeMe").handled(true).to("mock:handled").     from("direct:start").to("mock:a").id("a").throwException(new IllegalArgumentException("Forced")).to("mock:b").id("b"). }
false;protected;0;21;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             onException(IllegalArgumentException.class).process(new Processor() {                  @Override                 public void process(Exchange exchange) throws Exception {                     exchange.getIn().setBody("I changed this").                 }             }).id("removeMe").handled(true).to("mock:handled").             from("direct:start").to("mock:a").id("a").throwException(new IllegalArgumentException("Forced")).to("mock:b").id("b").         }     }. }
