commented;modifiers;parameterAmount;loc;comment;code
false;public;1;4;;@Override public void process(Exchange exchange) throws Exception {     throw new IllegalArgumentException("Kaboom"). }
false;public;0;9;;@Override public void configure() throws Exception {     weaveById("foo").replace().process(new Processor() {          @Override         public void process(Exchange exchange) throws Exception {             throw new IllegalArgumentException("Kaboom").         }     }). }
false;public;0;22;;@Test public void testTryCatch() throws Exception {     RouteReifier.adviceWith(context.getRouteDefinitions().get(0), context, new AdviceWithRouteBuilder() {          @Override         public void configure() throws Exception {             weaveById("foo").replace().process(new Processor() {                  @Override                 public void process(Exchange exchange) throws Exception {                     throw new IllegalArgumentException("Kaboom").                 }             }).         }     }).     getMockEndpoint("mock:before").expectedMessageCount(1).     getMockEndpoint("mock:after").expectedMessageCount(1).     getMockEndpoint("mock:error").expectedMessageCount(1).     template.sendBody("direct:start", "Hello World").     assertMockEndpointsSatisfied(). }
false;public;0;11;;@Override public void configure() throws Exception {     from("direct:start").to("mock:before").doTry().to("mock:foo").id("foo").doCatch(Exception.class).to("mock:error").end().to("mock:after"). }
false;protected;0;16;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").to("mock:before").doTry().to("mock:foo").id("foo").doCatch(Exception.class).to("mock:error").end().to("mock:after").         }     }. }
