commented;modifiers;parameterAmount;loc;comment;code
false;public;0;8;;@Test public void testDelayPattern() throws Exception {     getMockEndpoint("mock:dead").expectedMessageCount(1).     template.sendBody("direct:start", "Hello World").     assertMockEndpointsSatisfied(). }
false;public;0;11;;@Override public void configure() throws Exception {     onException(Exception.class).delayPattern("{{myDelayPattern}}").maximumRedeliveries(1).handled(true).to("mock:dead").     from("direct:start").throwException(new IllegalArgumentException("Forced")). }
false;protected;0;16;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             onException(Exception.class).delayPattern("{{myDelayPattern}}").maximumRedeliveries(1).handled(true).to("mock:dead").             from("direct:start").throwException(new IllegalArgumentException("Forced")).         }     }. }
false;protected;0;10;;@Override protected CamelContext createCamelContext() throws Exception {     CamelContext context = super.createCamelContext().     PropertiesComponent pc = new PropertiesComponent().     pc.setLocations(new String[] { "classpath:org/apache/camel/component/properties/myproperties.properties" }).     context.addComponent("properties", pc).     return context. }
