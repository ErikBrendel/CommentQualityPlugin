commented;modifiers;parameterAmount;loc;comment;code
false;public;0;9;;@Test public void testInterceptFrom() throws Exception {     getMockEndpoint("mock:foo").expectedMessageCount(1).     getMockEndpoint("mock:result").expectedMessageCount(1).     template.sendBody("seda:foo", "Hello World").     assertMockEndpointsSatisfied(). }
false;public;0;6;;@Override public void configure() throws Exception {     interceptFrom("seda:foo").to("mock:foo").     from("seda:{{queue}}").to("mock:result"). }
false;protected;0;11;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             interceptFrom("seda:foo").to("mock:foo").             from("seda:{{queue}}").to("mock:result").         }     }. }
false;protected;0;10;;@Override protected CamelContext createCamelContext() throws Exception {     CamelContext context = super.createCamelContext().     PropertiesComponent pc = new PropertiesComponent().     pc.setLocation("classpath:org/apache/camel/processor/intercept/myproperties.properties").     context.addComponent("properties", pc).     return context. }
