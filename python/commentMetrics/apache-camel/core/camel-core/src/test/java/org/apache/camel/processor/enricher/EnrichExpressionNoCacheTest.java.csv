commented;modifiers;parameterAmount;loc;comment;code
false;public;0;10;;@Test public void testEnrichExpression() throws Exception {     getMockEndpoint("mock:result").expectedBodiesReceived("Hello World", "Bye World", "Hello World").     template.sendBodyAndHeader("direct:start", null, "source", "direct:foo").     template.sendBodyAndHeader("direct:start", null, "source", "direct:bar").     template.sendBodyAndHeader("direct:start", null, "source", "direct:foo").     assertMockEndpointsSatisfied(). }
false;public;0;10;;@Override public void configure() throws Exception {     from("direct:start").enrich().header("source").cacheSize(-1).to("mock:result").     from("direct:foo").transform().constant("Hello World").     from("direct:bar").transform().constant("Bye World"). }
false;protected;0;15;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").enrich().header("source").cacheSize(-1).to("mock:result").             from("direct:foo").transform().constant("Hello World").             from("direct:bar").transform().constant("Bye World").         }     }. }
