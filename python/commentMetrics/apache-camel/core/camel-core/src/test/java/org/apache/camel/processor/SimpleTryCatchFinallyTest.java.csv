commented;modifiers;parameterAmount;loc;comment;code
false;public;0;11;;@Test public void testSimpleTryThrowExceptionFinally() throws Exception {     getMockEndpoint("mock:try").expectedMessageCount(1).     getMockEndpoint("mock:catch").expectedMessageCount(1).     getMockEndpoint("mock:finally").expectedMessageCount(1).     getMockEndpoint("mock:result").expectedMessageCount(1).     template.sendBody("direct:start", "Hello World").     assertMockEndpointsSatisfied(). }
false;public;0;13;;@Override public void configure() throws Exception {     from("direct:start").doTry().to("mock:try").throwException(new IllegalArgumentException("Damn")).doCatch(IllegalArgumentException.class).to("mock:catch").doFinally().to("mock:finally").end().to("mock:result"). }
false;protected;0;18;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").doTry().to("mock:try").throwException(new IllegalArgumentException("Damn")).doCatch(IllegalArgumentException.class).to("mock:catch").doFinally().to("mock:finally").end().to("mock:result").         }     }. }
