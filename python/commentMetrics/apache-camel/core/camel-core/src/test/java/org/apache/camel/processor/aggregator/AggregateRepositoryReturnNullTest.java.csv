commented;modifiers;parameterAmount;loc;comment;code
false;public;0;11;;@Test public void testAggregateRepositoryReturnNull() throws Exception {     try {         template.sendBodyAndHeader("direct:start", "Hello World", "id", 123).         fail("Should throw exception").     } catch (CamelExecutionException e) {         assertIsInstanceOf(CamelExchangeException.class, e.getCause()).         assertTrue(e.getCause().getMessage().startsWith("AggregationStrategy")).         assertTrue(e.getCause().getMessage().contains("returned null which is not allowed")).     } }
false;public;0;6;;@Override public void configure() throws Exception {     from("direct:start").aggregate(header("id"), new MyNullAggregationStrategy()).completionSize(3).to("mock:result"). }
false;protected;0;11;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").aggregate(header("id"), new MyNullAggregationStrategy()).completionSize(3).to("mock:result").         }     }. }
false;public;2;4;;public Exchange aggregate(Exchange oldExchange, Exchange newExchange) {     // on purpose     return null. }
