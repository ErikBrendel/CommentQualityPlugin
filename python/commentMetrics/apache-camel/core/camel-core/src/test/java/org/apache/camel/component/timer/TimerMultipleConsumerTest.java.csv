commented;modifiers;parameterAmount;loc;comment;code
false;public;0;7;;@Test public void testMultipleConsumers() throws Exception {     getMockEndpoint("mock:foo").expectedMinimumMessageCount(1).     getMockEndpoint("mock:bar").expectedMinimumMessageCount(1).     assertMockEndpointsSatisfied(). }
false;public;0;6;;@Override public void configure() throws Exception {     from("timer:mytimer?period=0&delay=10").to("mock:foo").     from("timer:mytimer?period=0&delay=10").to("mock:bar"). }
false;protected;0;11;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("timer:mytimer?period=0&delay=10").to("mock:foo").             from("timer:mytimer?period=0&delay=10").to("mock:bar").         }     }. }
