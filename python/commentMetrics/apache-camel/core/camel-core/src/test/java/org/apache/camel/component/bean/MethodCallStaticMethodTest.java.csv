commented;modifiers;parameterAmount;loc;comment;code
false;public;0;9;;@Test public void testStaticMethod() throws Exception {     getMockEndpoint("mock:result").expectedHeaderReceived("bar", "\"Hello World\"").     getMockEndpoint("mock:result").expectedHeaderReceived("foo", "Hello World").     template.sendBodyAndHeader("direct:start", "The body", "bar", "\"Hello World\"").     assertMockEndpointsSatisfied(). }
false;public;0;6;;@Override public void configure() throws Exception {     from("direct:start").setHeader("foo", method(StringHelper.class, "removeLeadingAndEndingQuotes(${header.bar})")).to("mock:result"). }
false;protected;0;11;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").setHeader("foo", method(StringHelper.class, "removeLeadingAndEndingQuotes(${header.bar})")).to("mock:result").         }     }. }
