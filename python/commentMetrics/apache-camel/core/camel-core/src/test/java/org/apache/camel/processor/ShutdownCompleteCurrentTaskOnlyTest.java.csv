commented;modifiers;parameterAmount;loc;comment;code
false;public;0;12;;@Override @Before public void setUp() throws Exception {     super.setUp().     deleteDirectory("target/data/pending").     template.sendBodyAndHeader(url, "A", Exchange.FILE_NAME, "a.txt").     template.sendBodyAndHeader(url, "B", Exchange.FILE_NAME, "b.txt").     template.sendBodyAndHeader(url, "C", Exchange.FILE_NAME, "c.txt").     template.sendBodyAndHeader(url, "D", Exchange.FILE_NAME, "d.txt").     template.sendBodyAndHeader(url, "E", Exchange.FILE_NAME, "e.txt"). }
false;public;0;16;;@Test public void testShutdownCompleteCurrentTaskOnly() throws Exception {     // give it 20 seconds to shutdown     context.getShutdownStrategy().setTimeout(20).     MockEndpoint bar = getMockEndpoint("mock:bar").     bar.expectedMinimumMessageCount(1).     assertMockEndpointsSatisfied().     // shutdown during processing     context.stop().     // should NOT route all 5     assertTrue("Should NOT complete all messages, was: " + bar.getReceivedCounter(), bar.getReceivedCounter() < 5). }
false;public;0;9;;@Override public void configure() throws Exception {     from(url).shutdownRunningTask(ShutdownRunningTask.CompleteCurrentTaskOnly).delay(1000).syncDelayed().to("seda:foo").     from("seda:foo").routeId("route2").to("mock:bar"). }
false;protected;0;14;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from(url).shutdownRunningTask(ShutdownRunningTask.CompleteCurrentTaskOnly).delay(1000).syncDelayed().to("seda:foo").             from("seda:foo").routeId("route2").to("mock:bar").         }     }. }
