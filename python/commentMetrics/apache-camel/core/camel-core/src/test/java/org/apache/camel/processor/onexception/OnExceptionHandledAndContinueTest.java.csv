commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public boolean isUseRouteBuilder() {     return false. }
false;public;0;10;;@Override public void configure() throws Exception {     // should not be allowed     onException(IllegalArgumentException.class).continued(true).handled(true).     from("direct:start").to("mock:start").throwException(new IllegalArgumentException("Forced")).to("mock:result"). }
false;public;0;22;;@Test public void testHandledAndContinued() throws Exception {     context.addRoutes(new RouteBuilder() {          @Override         public void configure() throws Exception {             // should not be allowed             onException(IllegalArgumentException.class).continued(true).handled(true).             from("direct:start").to("mock:start").throwException(new IllegalArgumentException("Forced")).to("mock:result").         }     }).     try {         context.start().         fail("Should thrown an exception").     } catch (FailedToCreateRouteException e) {         assertIsInstanceOf(IllegalArgumentException.class, e.getCause()).         assertTrue(e.getCause().getMessage().startsWith("Only one of handled or continued is allowed to be configured")).     } }
