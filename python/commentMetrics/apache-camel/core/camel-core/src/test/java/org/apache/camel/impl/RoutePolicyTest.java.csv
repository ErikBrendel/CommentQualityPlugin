commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Test public void testStartCalledWhenCamelStarts() throws Exception {     assertEquals(1, routePolicy.getStartCount()). }
false;public;0;7;;@Test public void testStartCalledWhenRouteStarts() throws Exception {     assertEquals(1, routePolicy.getStartCount()).     context.getRouteController().stopRoute("foo").     context.getRouteController().startRoute("foo").     assertEquals(2, routePolicy.getStartCount()). }
false;public;0;6;;@Test public void testStopCalledWhenCamelStops() throws Exception {     assertEquals(0, routePolicy.getStopCount()).     stopCamelContext().     assertEquals(1, routePolicy.getStopCount()). }
false;public;0;6;;@Test public void testStopCalledWhenRouteStops() throws Exception {     assertEquals(0, routePolicy.getStopCount()).     context.getRouteController().stopRoute("foo").     assertEquals(1, routePolicy.getStopCount()). }
false;public;0;6;;@Test public void testSuspendCalledWhenRouteSuspends() throws Exception {     assertEquals(0, routePolicy.getSuspendCount()).     context.getRouteController().suspendRoute("foo").     assertEquals(1, routePolicy.getSuspendCount()). }
false;public;0;7;;@Test public void testResumeCalledWhenRouteResumes() throws Exception {     assertEquals(0, routePolicy.getResumeCount()).     context.getRouteController().suspendRoute("foo").     context.getRouteController().resumeRoute("foo").     assertEquals(1, routePolicy.getResumeCount()). }
false;public;0;9;;@Test public void testRemoveCalledWhenRouteIsRemovedById() throws Exception {     assertEquals(0, routePolicy.getRemoveCount()).     context.getRouteController().stopRoute("foo").     assertEquals(0, routePolicy.getRemoveCount()).     context.removeRoute("foo").     assertEquals(1, routePolicy.getRemoveCount()). }
false;public;0;8;;@Test public void testRemoveCalledWhenCamelIsStopped() throws Exception {     assertTrue(context.getStatus().isStarted()).     assertEquals(0, routePolicy.getRemoveCount()).     context.stop().     assertTrue(context.getStatus().isStopped()).     assertEquals(1, routePolicy.getRemoveCount()). }
false;public;0;7;;@Override public void configure() throws Exception {     from("direct:start").routeId("foo").routePolicy(routePolicy).to("mock:result"). }
false;protected;0;12;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").routeId("foo").routePolicy(routePolicy).to("mock:result").         }     }. }
false;public;1;4;;@Override public void onRemove(Route route) {     removeCounter.incrementAndGet(). }
false;public;1;4;;@Override public void onStart(Route route) {     startCounter.incrementAndGet(). }
false;public;1;4;;@Override public void onStop(Route route) {     stopCounter.incrementAndGet(). }
false;public;1;4;;@Override public void onSuspend(Route route) {     suspendCounter.incrementAndGet(). }
false;public;1;4;;@Override public void onResume(Route route) {     resumeCounter.incrementAndGet(). }
false;public;1;3;;@Override public void onInit(Route route) { }
false;public;2;3;;@Override public void onExchangeBegin(Route route, Exchange exchange) { }
false;public;2;3;;@Override public void onExchangeDone(Route route, Exchange exchange) { }
false;private;0;3;;private int getRemoveCount() {     return removeCounter.get(). }
false;private;0;3;;private int getStartCount() {     return startCounter.get(). }
false;private;0;3;;private int getStopCount() {     return stopCounter.get(). }
false;private;0;3;;private int getSuspendCount() {     return suspendCounter.get(). }
false;private;0;3;;private int getResumeCount() {     return resumeCounter.get(). }
