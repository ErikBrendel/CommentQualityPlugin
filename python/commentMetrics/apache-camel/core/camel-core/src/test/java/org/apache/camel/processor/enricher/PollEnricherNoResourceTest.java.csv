commented;modifiers;parameterAmount;loc;comment;code
false;public;0;11;;@Test public void testNoResourceA() throws Exception {     // there should be no message body     getMockEndpoint("mock:result").expectedMessageCount(1).     getMockEndpoint("mock:result").message(0).body().isNull().     getMockEndpoint("mock:result").expectedHeaderReceived(Exchange.TO_ENDPOINT, "seda://foo").     template.sendBody("direct:a", "Hello World").     assertMockEndpointsSatisfied(). }
false;public;0;14;;@Test public void testResourceA() throws Exception {     template.sendBody("seda:foo", "Bye World").     Thread.sleep(250).     // there should be a message body     getMockEndpoint("mock:result").expectedBodiesReceived("Bye World").     getMockEndpoint("mock:result").expectedHeaderReceived(Exchange.TO_ENDPOINT, "seda://foo").     template.sendBody("direct:a", "Hello World").     assertMockEndpointsSatisfied(). }
false;public;0;12;;@Test public void testResourceB() throws Exception {     template.sendBody("seda:bar", "Bye World").     // there should be a message body     getMockEndpoint("mock:result").expectedBodiesReceived("Bye World").     getMockEndpoint("mock:result").expectedHeaderReceived(Exchange.TO_ENDPOINT, "seda://bar").     template.sendBody("direct:b", "Hello World").     assertMockEndpointsSatisfied(). }
false;public;0;9;;public void configure() {     from("direct:a").pollEnrich("seda:foo", 1000).to("mock:result").     from("direct:b").pollEnrich("seda:bar").to("mock:result"). }
false;protected;0;13;;protected RouteBuilder createRouteBuilder() {     return new RouteBuilder() {          public void configure() {             from("direct:a").pollEnrich("seda:foo", 1000).to("mock:result").             from("direct:b").pollEnrich("seda:bar").to("mock:result").         }     }. }
