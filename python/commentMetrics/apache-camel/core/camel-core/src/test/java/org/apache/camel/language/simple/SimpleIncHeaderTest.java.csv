commented;modifiers;parameterAmount;loc;comment;code
false;public;0;11;;@Test public void testIncHeader() throws Exception {     MockEndpoint mock = getMockEndpoint("mock:result").     mock.expectedMessageCount(1).     mock.message(0).header("myCounter").isInstanceOf(Integer.class).     mock.message(0).header("myCounter").isEqualTo(124).     template.sendBodyAndHeader("direct:start", "Hello World", "myCounter", 123).     assertMockEndpointsSatisfied(). }
false;public;0;6;;@Override public void configure() throws Exception {     from("direct:start").setHeader("myCounter", simple("${header.myCounter}++")).to("mock:result"). }
false;protected;0;11;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").setHeader("myCounter", simple("${header.myCounter}++")).to("mock:result").         }     }. }
