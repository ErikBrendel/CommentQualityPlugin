commented;modifiers;parameterAmount;loc;comment;code
false;public;0;9;;@Test public void testNoIntercept() throws Exception {     getMockEndpoint("mock:intercept").expectedMessageCount(0).     getMockEndpoint("mock:result").expectedMessageCount(1).     template.sendBody("direct:start", "Hello World").     assertMockEndpointsSatisfied(). }
false;public;0;10;;@Test public void testInterceptFoo() throws Exception {     getMockEndpoint("mock:intercept").expectedMessageCount(1).     getMockEndpoint("mock:intercept").expectedHeaderReceived(Exchange.INTERCEPTED_ENDPOINT, "seda://foo").     getMockEndpoint("mock:result").expectedMessageCount(1).     template.sendBody("seda:foo", "Hello World").     assertMockEndpointsSatisfied(). }
false;public;0;10;;@Test public void testInterceptBar() throws Exception {     getMockEndpoint("mock:intercept").expectedMessageCount(1).     getMockEndpoint("mock:intercept").expectedHeaderReceived(Exchange.INTERCEPTED_ENDPOINT, "seda://bar").     getMockEndpoint("mock:result").expectedMessageCount(1).     template.sendBody("seda:bar", "Hello World").     assertMockEndpointsSatisfied(). }
false;public;0;9;;public void configure() throws Exception {     interceptFrom("seda*").to("mock:intercept").     from("direct:start").to("mock:result").     from("seda:bar").to("mock:result").     from("seda:foo").to("mock:result"). }
false;protected;0;13;;protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          public void configure() throws Exception {             interceptFrom("seda*").to("mock:intercept").             from("direct:start").to("mock:result").             from("seda:bar").to("mock:result").             from("seda:foo").to("mock:result").         }     }. }
