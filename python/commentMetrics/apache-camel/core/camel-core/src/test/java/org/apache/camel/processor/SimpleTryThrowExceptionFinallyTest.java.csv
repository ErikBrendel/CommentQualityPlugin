commented;modifiers;parameterAmount;loc;comment;code
false;public;0;17;;@Test public void testSimpleTryThrowExceptionFinally() throws Exception {     getMockEndpoint("mock:try").expectedMessageCount(1).     // finally should be executed     getMockEndpoint("mock:finally").expectedMessageCount(1).     // no message arrives to result     getMockEndpoint("mock:result").expectedMessageCount(0).     try {         template.sendBody("direct:start", "Hello World").         fail("Should have thrown exception").     } catch (CamelExecutionException e) {         assertEquals("Damn", e.getCause().getMessage()).     }     assertMockEndpointsSatisfied(). }
false;public;0;11;;@Override public void configure() throws Exception {     from("direct:start").doTry().to("mock:try").throwException(new IllegalArgumentException("Damn")).doFinally().to("mock:finally").end().to("mock:result"). }
false;protected;0;16;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").doTry().to("mock:try").throwException(new IllegalArgumentException("Damn")).doFinally().to("mock:finally").end().to("mock:result").         }     }. }
