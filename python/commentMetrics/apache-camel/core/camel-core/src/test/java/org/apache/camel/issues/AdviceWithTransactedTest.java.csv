commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public void configure() throws Exception {     weaveAddFirst().to("mock:advice"). }
false;public;0;16;;@Test public void testAdviceTransacted() throws Exception {     getMockEndpoint("mock:result").expectedMessageCount(1).     getMockEndpoint("mock:advice").expectedMessageCount(1).     RouteReifier.adviceWith(context.getRouteDefinitions().get(0), context, new AdviceWithRouteBuilder() {          @Override         public void configure() throws Exception {             weaveAddFirst().to("mock:advice").         }     }).     template.sendBody("direct:advice", "Hello World").     assertMockEndpointsSatisfied(). }
false;public;0;8;;@Override public void configure() throws Exception {     from("direct:advice").policy(new MyDummyPolicy()).log("Advice ${body}").to("mock:result"). }
false;protected;0;13;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:advice").policy(new MyDummyPolicy()).log("Advice ${body}").to("mock:result").         }     }. }
false;public;2;4;;@Override public void beforeWrap(RouteContext routeContext, NamedNode definition) { // noop }
false;public;2;4;;@Override public Processor wrap(RouteContext routeContext, Processor processor) {     return processor. }
