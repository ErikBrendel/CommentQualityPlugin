commented;modifiers;parameterAmount;loc;comment;code
false;public;0;6;;@Override @Before public void setUp() throws Exception {     deleteDirectory("target/data/begin").     super.setUp(). }
false;protected;0;6;;@Override protected JndiRegistry createRegistry() throws Exception {     JndiRegistry jndi = super.createRegistry().     jndi.bind("myStrategy", myStrategy).     return jndi. }
false;public;0;11;;@Test public void testBeginFailureOneTime() throws Exception {     MockEndpoint mock = getMockEndpoint("mock:result").     mock.expectedMessageCount(1).     template.sendBodyAndHeader("file://target/data/begin", "Hello World", Exchange.FILE_NAME, "hello.txt").     assertMockEndpointsSatisfied().     assertEquals("Begin should have been invoked 2 times", 2, myStrategy.getInvoked()). }
false;public;0;6;;@Override public void configure() throws Exception {     from("file://target/data/begin?initialDelay=0&delay=10&processStrategy=#myStrategy").convertBodyTo(String.class).to("mock:result"). }
false;protected;0;11;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("file://target/data/begin?initialDelay=0&delay=10&processStrategy=#myStrategy").convertBodyTo(String.class).to("mock:result").         }     }. }
false;public;2;2;;public void prepareOnStartup(GenericFileOperations<File> fileGenericFileOperations, GenericFileEndpoint<File> fileGenericFileEndpoint) throws Exception { }
false;public;4;8;;public boolean begin(GenericFileOperations<File> fileGenericFileOperations, GenericFileEndpoint<File> fileGenericFileEndpoint, Exchange exchange, GenericFile<File> fileGenericFile) throws Exception {     invoked++.     if (invoked <= 1) {         throw new IllegalArgumentException("Damn I cannot do this").     }     return true. }
false;public;4;4;;public void abort(GenericFileOperations<File> fileGenericFileOperations, GenericFileEndpoint<File> fileGenericFileEndpoint, Exchange exchange, GenericFile<File> fileGenericFile) throws Exception { // noop }
false;public;4;3;;public void commit(GenericFileOperations<File> fileGenericFileOperations, GenericFileEndpoint<File> fileGenericFileEndpoint, Exchange exchange, GenericFile<File> fileGenericFile) throws Exception { }
false;public;4;3;;public void rollback(GenericFileOperations<File> fileGenericFileOperations, GenericFileEndpoint<File> fileGenericFileEndpoint, Exchange exchange, GenericFile<File> fileGenericFile) throws Exception { }
false;public;0;3;;public int getInvoked() {     return invoked. }
