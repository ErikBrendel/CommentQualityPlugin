commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public boolean isUseRouteBuilder() {     return false. }
false;public;0;6;;@Override public void configure() throws Exception {     from("direct:start").to("{{foo:mock:foo}}").to("{{bar:mock:bar}}"). }
false;public;0;19;;@Test public void testOnlyDefaults() throws Exception {     context.addRoutes(new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").to("{{foo:mock:foo}}").to("{{bar:mock:bar}}").         }     }).     context.start().     getMockEndpoint("mock:foo").expectedMessageCount(1).     getMockEndpoint("mock:bar").expectedMessageCount(1).     template.sendBody("direct:start", "Hello World").     assertMockEndpointsSatisfied(). }
false;public;0;6;;@Override public void configure() throws Exception {     from("direct:start").to("{{foo:mock:foo}}").to("{{bar}}"). }
false;public;0;18;;@Test public void testOneMissing() throws Exception {     context.addRoutes(new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").to("{{foo:mock:foo}}").to("{{bar}}").         }     }).     try {         context.start().         fail("Should have thrown exception").     } catch (FailedToCreateRouteException e) {     // expected     } }
false;public;0;6;;@Override public void configure() throws Exception {     from("direct:start").to("{{foo:mock:foo}}").to("{{bar}}"). }
false;public;0;18;;@Test public void testAllMissing() throws Exception {     context.addRoutes(new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").to("{{foo:mock:foo}}").to("{{bar}}").         }     }).     try {         context.start().         fail("Should have thrown exception").     } catch (FailedToCreateRouteException e) {     // expected     } }
