commented;modifiers;parameterAmount;loc;comment;code
false;public;0;12;;@Test public void testInterceptWithStop() throws Exception {     getMockEndpoint("mock:foo").expectedMessageCount(0).     getMockEndpoint("mock:bar").expectedMessageCount(0).     getMockEndpoint("mock:result").expectedMessageCount(0).     getMockEndpoint("mock:intercepted").expectedMessageCount(1).     template.sendBody("direct:start", "Hello World").     assertMockEndpointsSatisfied(). }
false;public;0;9;;@Override public void configure() throws Exception {     // START SNIPPET: e1     intercept().to("mock:intercepted").stop().     from("direct:start").to("mock:foo", "mock:bar", "mock:result"). // END SNIPPET: e1 }
false;protected;0;14;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             // START SNIPPET: e1             intercept().to("mock:intercepted").stop().             from("direct:start").to("mock:foo", "mock:bar", "mock:result").         // END SNIPPET: e1         }     }. }
