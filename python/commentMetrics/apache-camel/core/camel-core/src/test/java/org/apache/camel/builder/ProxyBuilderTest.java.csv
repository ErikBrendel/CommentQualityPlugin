commented;modifiers;parameterAmount;loc;comment;code
false;public;0;10;;@Test public void testSayFoo() throws Exception {     Foo foo = new ProxyBuilder(context).endpoint("direct:start").build(Foo.class).     Future<String> future = foo.sayHello("Camel").     assertNotNull(future).     assertFalse("Should not be done", future.isDone()).     assertEquals("Hello Camel", future.get(5, TimeUnit.SECONDS)). }
false;public;0;6;;@Override public void configure() throws Exception {     from("direct:start").delay(1000).transform(body().prepend("Hello ")). }
false;protected;0;11;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").delay(1000).transform(body().prepend("Hello ")).         }     }. }
false;;1;1;;Future<String> sayHello(String body).
