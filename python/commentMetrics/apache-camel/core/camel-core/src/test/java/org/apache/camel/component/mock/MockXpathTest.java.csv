commented;modifiers;parameterAmount;loc;comment;code
false;public;0;13;;@Test public void testXpathAssertion() throws Exception {     MockEndpoint result = getMockEndpoint("mock:result").     result.expectedMessageCount(1).     XPathExpression xpath = new XPathExpression("/foo = 'bar'").     xpath.setResultType(Boolean.class).     result.allMessages().body().matches(xpath).     template.sendBody("direct:start", "<foo>bar</foo>").     assertMockEndpointsSatisfied(). }
false;public;0;4;;@Override public void configure() throws Exception {     from("direct:start").to("mock:result"). }
false;protected;0;9;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").to("mock:result").         }     }. }
