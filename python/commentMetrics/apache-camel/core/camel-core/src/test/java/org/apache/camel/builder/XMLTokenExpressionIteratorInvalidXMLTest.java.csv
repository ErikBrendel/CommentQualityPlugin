commented;modifiers;parameterAmount;loc;comment;code
false;public;0;12;;@Test public void testExtractToken() throws Exception {     String data = MessageFormat.format(DATA_TEMPLATE, "Have a nice day").     XMLTokenExpressionIterator xtei = new XMLTokenExpressionIterator("//statement", 'i').     xtei.setNamespaces(NSMAP).     invokeAndVerify(xtei.createIterator(new StringReader(data)), false).     data = MessageFormat.format(DATA_TEMPLATE, "Have a nice< day").     xtei = new XMLTokenExpressionIterator("//statement", 'i').     xtei.setNamespaces(NSMAP).     invokeAndVerify(xtei.createIterator(new StringReader(data)), true). }
false;private;2;17;;private void invokeAndVerify(Iterator<?> tokenizer, boolean error) throws IOException, XMLStreamException {     Exception exp = null.     try {         tokenizer.next().         tokenizer.next().     } catch (Exception e) {         exp = e.     } finally {         ((Closeable) tokenizer).close().     }     if (error) {         assertNotNull("the error expected", exp).     } else {         assertNull("no error expected", exp).     } }
