commented;modifiers;parameterAmount;loc;comment;code
false;public;0;12;;@Test public void testRecipientListWithIgnoreInvalidEndpointsOption() throws Exception {     MockEndpoint result = getMockEndpoint("mock:result").     result.expectedBodiesReceived("Hello World").     MockEndpoint endpointA = getMockEndpoint("mock:endpointA").     endpointA.expectedBodiesReceived("Hello a").     template.requestBody("direct:startA", "Hello World", String.class).     assertMockEndpointsSatisfied(). }
false;public;0;17;;@Test public void testRecipientListWithoutIgnoreInvalidEndpointsOption() throws Exception {     MockEndpoint result = getMockEndpoint("mock:result").     result.expectedMessageCount(0).     MockEndpoint endpointA = getMockEndpoint("mock:endpointA").     endpointA.expectedMessageCount(0).     try {         template.requestBody("direct:startB", "Hello World", String.class).         fail("Expect the exception here.").     } catch (Exception ex) {         assertTrue("Get a wrong cause of the exception", ex.getCause() instanceof ResolveEndpointFailedException).     }     assertMockEndpointsSatisfied(). }
false;public;0;8;;public void configure() {     from("direct:startA").recipientList(simple("mock:result,fail:endpoint,direct:a")).ignoreInvalidEndpoints().     from("direct:startB").recipientList(simple("mock:result,fail:endpoint,direct:a")).     from("direct:a").transform(constant("Hello a")).to("mock:endpointA"). }
false;protected;0;12;;protected RouteBuilder createRouteBuilder() {     return new RouteBuilder() {          public void configure() {             from("direct:startA").recipientList(simple("mock:result,fail:endpoint,direct:a")).ignoreInvalidEndpoints().             from("direct:startB").recipientList(simple("mock:result,fail:endpoint,direct:a")).             from("direct:a").transform(constant("Hello a")).to("mock:endpointA").         }     }. }
