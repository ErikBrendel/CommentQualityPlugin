commented;modifiers;parameterAmount;loc;comment;code
false;public;0;9;;@Test public void testNegativeDelay() throws Exception {     MockEndpoint mock = getMockEndpoint("mock:result").     mock.expectedMessageCount(10).     context.getRouteController().startAllRoutes().     assertMockEndpointsSatisfied(). }
false;public;0;6;;@Override public void configure() throws Exception {     from("timer://foo?delay=-1&period=0&repeatCount=10").noAutoStartup().to("mock:result"). }
false;protected;0;11;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("timer://foo?delay=-1&period=0&repeatCount=10").noAutoStartup().to("mock:result").         }     }. }
