commented;modifiers;parameterAmount;loc;comment;code
false;public;0;17;;@Test public void testAsyncEndpoint() throws Exception {     getMockEndpoint("mock:error").expectedMessageCount(0).     getMockEndpoint("mock:result").expectedMessageCount(0).     try {         template.requestBody("direct:start", "Hello Camel", String.class).         fail("Should throw exception").     } catch (CamelExecutionException e) {         CamelExchangeException cause = assertIsInstanceOf(CamelExchangeException.class, e.getCause()).         assertTrue(cause.getMessage().startsWith("Simulated error at attempt 1.")).     }     assertMockEndpointsSatisfied().     assertFalse("Should use different threads", beforeThreadName.equalsIgnoreCase(afterThreadName)). }
false;public;1;3;;public void process(Exchange exchange) throws Exception {     afterThreadName = Thread.currentThread().getName(). }
false;public;1;3;;public void process(Exchange exchange) throws Exception {     beforeThreadName = Thread.currentThread().getName(). }
false;public;0;27;;@Override public void configure() throws Exception {     context.addComponent("async", new MyAsyncComponent()).     // use redelivery up till 5 times     errorHandler(defaultErrorHandler().maximumRedeliveries(5)).     onException(IllegalArgumentException.class).handled(true).process(new Processor() {          public void process(Exchange exchange) throws Exception {             beforeThreadName = Thread.currentThread().getName().         }     }).to("async:bye:camel?failFirstAttempts=2").process(new Processor() {          public void process(Exchange exchange) throws Exception {             afterThreadName = Thread.currentThread().getName().         }     }).to("mock:error").     from("direct:start").throwException(new IllegalArgumentException("Damn")).to("mock:result"). }
false;protected;0;32;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             context.addComponent("async", new MyAsyncComponent()).             // use redelivery up till 5 times             errorHandler(defaultErrorHandler().maximumRedeliveries(5)).             onException(IllegalArgumentException.class).handled(true).process(new Processor() {                  public void process(Exchange exchange) throws Exception {                     beforeThreadName = Thread.currentThread().getName().                 }             }).to("async:bye:camel?failFirstAttempts=2").process(new Processor() {                  public void process(Exchange exchange) throws Exception {                     afterThreadName = Thread.currentThread().getName().                 }             }).to("mock:error").             from("direct:start").throwException(new IllegalArgumentException("Damn")).to("mock:result").         }     }. }
