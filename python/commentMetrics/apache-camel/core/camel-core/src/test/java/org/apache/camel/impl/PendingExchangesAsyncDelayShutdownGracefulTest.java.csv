commented;modifiers;parameterAmount;loc;comment;code
false;public;0;19;;@Test public void testShutdownGraceful() throws Exception {     MockEndpoint result = getMockEndpoint("mock:result").     MockEndpoint foo = getMockEndpoint("mock:foo").     foo.expectedMinimumMessageCount(1).     template.sendBody("seda:foo", "A").     template.sendBody("seda:foo", "B").     template.sendBody("seda:foo", "C").     template.sendBody("seda:foo", "D").     template.sendBody("seda:foo", "E").     assertMockEndpointsSatisfied().     context.stop().     assertEquals("Expecting all messages", 5, result.getReceivedCounter()). }
false;public;0;7;;@Override public void configure() throws Exception {     from("seda:foo").to("mock:foo").delay(1000).to("mock:result"). }
false;protected;0;12;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("seda:foo").to("mock:foo").delay(1000).to("mock:result").         }     }. }
