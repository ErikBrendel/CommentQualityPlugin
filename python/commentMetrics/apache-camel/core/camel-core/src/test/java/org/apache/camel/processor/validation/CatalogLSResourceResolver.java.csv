commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public CatalogResolver getCatalogResolver() {     return catalogResolver. }
false;public;1;3;;public void setCatalogResolver(CatalogResolver catalogResolver) {     this.catalogResolver = catalogResolver. }
false;public;5;4;;@Override public LSInput resolveResource(String type, String namespaceURI, String publicId, String systemId, String baseURI) {     return new LSInputSource(namespaceURI, publicId, systemId, baseURI). }
false;public;0;3;;public Reader getCharacterStream() {     return null. }
false;public;1;3;;public void setCharacterStream(Reader characterStream) { // noop }
false;public;0;3;;public InputStream getByteStream() {     return inputSource != null ? inputSource.getByteStream() : null. }
false;public;1;5;;public void setByteStream(InputStream byteStream) {     if (inputSource != null) {         inputSource.setByteStream(byteStream).     } }
false;public;0;3;;public String getStringData() {     return null. }
false;public;1;3;;public void setStringData(String stringData) { // noop }
false;public;0;7;;public String getSystemId() {     if (inputSource != null) {         return inputSource.getSystemId().     }     return systemId. }
false;public;1;5;;public void setSystemId(String systemId) {     if (inputSource != null) {         inputSource.setSystemId(systemId).     } }
false;public;0;7;;public String getPublicId() {     if (inputSource != null) {         return inputSource.getPublicId().     }     return publicId. }
false;public;1;7;;public void setPublicId(String publicId) {     if (inputSource != null) {         inputSource.setPublicId(publicId).     } else {         this.publicId = publicId.     } }
false;public;0;3;;public String getBaseURI() {     return baseURI. }
false;public;1;3;;public void setBaseURI(String baseURI) { // noop }
false;public;0;7;;public String getEncoding() {     if (inputSource != null) {         return inputSource.getEncoding().     }     return null. }
false;public;1;5;;public void setEncoding(String encoding) {     if (inputSource != null) {         inputSource.setEncoding(encoding).     } }
false;public;0;3;;public boolean getCertifiedText() {     return true. }
false;public;1;3;;public void setCertifiedText(boolean certifiedText) { // noop }
