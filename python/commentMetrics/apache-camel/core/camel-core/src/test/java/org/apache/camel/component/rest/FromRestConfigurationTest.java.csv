commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;6;;@Override protected JndiRegistry createRegistry() throws Exception {     JndiRegistry jndi = super.createRegistry().     jndi.bind("myDummy", new FooBar()).     return jndi. }
false;public;0;17;;@Override @Test public void testFromRestModel() throws Exception {     assertEquals("dummy-rest", context.getRestConfiguration().getComponent()).     assertEquals("localhost", context.getRestConfiguration().getHost()).     assertEquals(9090, context.getRestConfiguration().getPort()).     assertEquals("bar", context.getRestConfiguration().getComponentProperties().get("foo")).     assertEquals("stuff", context.getRestConfiguration().getComponentProperties().get("other")).     assertEquals("200", context.getRestConfiguration().getEndpointProperties().get("size")).     assertEquals("1000", context.getRestConfiguration().getConsumerProperties().get("pollTimeout")).     assertEquals("#myDummy", context.getRestConfiguration().getConsumerProperties().get("dummy")).     DummyRestConsumerFactory factory = (DummyRestConsumerFactory) context.getRegistry().lookupByName("dummy-rest").     Object dummy = context.getRegistry().lookupByName("myDummy").     assertSame(dummy, factory.getDummy()). }
false;public;0;12;;@Override public void configure() throws Exception {     restConfiguration().component("dummy-rest").host("localhost").port(9090).componentProperty("foo", "bar").componentProperty("other", "stuff").endpointProperty("size", "200").consumerProperty("pollTimeout", "1000").consumerProperty("dummy", "#myDummy").     rest("/say/hello").get().to("log:hello"). }
false;protected;0;17;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             restConfiguration().component("dummy-rest").host("localhost").port(9090).componentProperty("foo", "bar").componentProperty("other", "stuff").endpointProperty("size", "200").consumerProperty("pollTimeout", "1000").consumerProperty("dummy", "#myDummy").             rest("/say/hello").get().to("log:hello").         }     }. }
