commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public Producer createProducer() throws Exception {     throw new UnsupportedOperationException("Not supported yet."). }
false;public;1;3;;public Consumer createConsumer(Processor processor) throws Exception {     throw new UnsupportedOperationException("Not supported yet."). }
false;public;0;3;;public String getFoo() {     return foo. }
false;public;1;3;;public void setFoo(String foo) {     this.foo = foo. }
false;public;0;3;;public String getBar() {     return bar. }
false;public;1;3;;public void setBar(String bar) {     this.bar = bar. }
false;public;0;3;;public boolean isSingleton() {     return true. }
false;public;0;3;;public String getUri() {     return uri. }
false;protected;3;6;;@Override protected Endpoint createEndpoint(final String uri, final String remaining, final Map<String, Object> parameters) throws Exception {     MyEndpoint answer = new MyEndpoint(uri, remaining).     setProperties(answer, parameters).     return answer. }
false;public;0;5;;@Override public boolean useRawUri() {     // we want the raw uri, so our component can understand the endpoint configuration as it was typed     return true. }
false;public;0;6;;@Override @Before public void setUp() throws Exception {     super.setUp().     context.addComponent("my", new MyComponent()). }
false;public;0;10;;@Test public void testUseRaw() {     String uri = "my:host:11303/tube1+tube?foo=%2B+tube%3F&bar=++%%w?rd".     MyEndpoint endpoint = context.getEndpoint(uri, MyEndpoint.class).     assertNotNull("endpoint", endpoint).     assertEquals("%2B+tube%3F", endpoint.getFoo()).     assertEquals("++%%w?rd", endpoint.getBar()).     assertEquals(uri, endpoint.getUri()). }
