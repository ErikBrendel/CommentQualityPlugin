commented;modifiers;parameterAmount;loc;comment;code
false;public;0;13;;@Test public void testSynchronizeComplete() throws Exception {     getMockEndpoint("mock:global").expectedMessageCount(0).     getMockEndpoint("mock:sync").expectedBodiesReceived("Bye World").     getMockEndpoint("mock:sync").expectedPropertyReceived(Exchange.ON_COMPLETION, true).     MockEndpoint mock = getMockEndpoint("mock:result").     mock.expectedBodiesReceived("Bye World").     template.sendBody("direct:start", "Hello World").     assertMockEndpointsSatisfied(). }
false;public;0;18;;@Test public void testSynchronizeFailure() throws Exception {     getMockEndpoint("mock:global").expectedMessageCount(0).     getMockEndpoint("mock:sync").expectedMessageCount(1).     getMockEndpoint("mock:sync").expectedPropertyReceived(Exchange.ON_COMPLETION, true).     MockEndpoint mock = getMockEndpoint("mock:result").     mock.expectedMessageCount(0).     try {         template.sendBody("direct:start", "Kabom").         fail("Should throw exception").     } catch (CamelExecutionException e) {         assertEquals("Kabom", e.getCause().getMessage()).     }     assertMockEndpointsSatisfied(). }
false;public;0;17;;@Override public void configure() throws Exception {     // define a global on completion that is invoked when the exchage is complete     onCompletion().to("log:global").to("mock:global").     // START SNIPPET: e1     from("direct:start").onCompletion().to("log:route").to("mock:sync").end().process(new MyProcessor()).to("mock:result"). // END SNIPPET: e1 }
false;protected;0;22;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             // define a global on completion that is invoked when the exchage is complete             onCompletion().to("log:global").to("mock:global").             // START SNIPPET: e1             from("direct:start").onCompletion().to("log:route").to("mock:sync").end().process(new MyProcessor()).to("mock:result").         // END SNIPPET: e1         }     }. }
false;public;1;6;;public void process(Exchange exchange) throws Exception {     if ("Kabom".equals(exchange.getIn().getBody())) {         throw new IllegalArgumentException("Kabom").     }     exchange.getIn().setBody("Bye World"). }
