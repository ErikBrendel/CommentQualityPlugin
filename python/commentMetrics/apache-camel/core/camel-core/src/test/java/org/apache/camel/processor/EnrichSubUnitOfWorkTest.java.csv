commented;modifiers;parameterAmount;loc;comment;code
false;public;0;13;;@Test public void testOK() throws Exception {     counter = 0.     getMockEndpoint("mock:dead").expectedMessageCount(0).     getMockEndpoint("mock:start").expectedBodiesReceived("Hello World").     getMockEndpoint("mock:b").expectedBodiesReceived("Hello World").     getMockEndpoint("mock:result").expectedBodiesReceived("Hello World").     template.sendBody("direct:start", "Hello World").     assertMockEndpointsSatisfied(). }
false;public;0;16;;@Test public void testError() throws Exception {     counter = 0.     // the DLC should receive the original message which is Bye World     getMockEndpoint("mock:dead").expectedBodiesReceived("Bye World").     getMockEndpoint("mock:start").expectedBodiesReceived("Bye World").     getMockEndpoint("mock:b").expectedMessageCount(0).     getMockEndpoint("mock:result").expectedMessageCount(0).     template.sendBody("direct:start", "Bye World").     assertMockEndpointsSatisfied().     // 1 first + 3 redeliveries     assertEquals(4, counter). }
false;public;0;15;;@Override public void configure() throws Exception {     errorHandler(deadLetterChannel("mock:dead").useOriginalMessage().maximumRedeliveries(3).redeliveryDelay(0)).     from("direct:start").to("mock:start").process(new MyPreProcessor()).enrich("direct:b", null, false, true).to("mock:result").     from("direct:b").process(new MyProcessor()).to("mock:b"). }
false;protected;0;20;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             errorHandler(deadLetterChannel("mock:dead").useOriginalMessage().maximumRedeliveries(3).redeliveryDelay(0)).             from("direct:start").to("mock:start").process(new MyPreProcessor()).enrich("direct:b", null, false, true).to("mock:result").             from("direct:b").process(new MyProcessor()).to("mock:b").         }     }. }
false;public;1;10;;@Override public void process(Exchange exchange) throws Exception {     // if its a bye message then alter it to something with     // Donkey to cause a failure in the sub unit of work     // but the DLC should still receive the original input     String body = exchange.getIn().getBody(String.class).     if (body.startsWith("Bye")) {         exchange.getIn().setBody("Donkey was here").     } }
false;public;1;8;;@Override public void process(Exchange exchange) throws Exception {     String body = exchange.getIn().getBody(String.class).     if (body.contains("Donkey")) {         counter++.         throw new IllegalArgumentException("Donkey not allowed").     } }
