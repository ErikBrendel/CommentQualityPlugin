commented;modifiers;parameterAmount;loc;comment;code
false;public;0;12;;@Test public void testIntercept() throws Exception {     getMockEndpoint("mock:foo").expectedMessageCount(1).     getMockEndpoint("mock:bar").expectedMessageCount(1).     getMockEndpoint("mock:result").expectedMessageCount(1).     getMockEndpoint("mock:intercepted").expectedMessageCount(3).     template.sendBody("direct:start", "Hello World").     assertMockEndpointsSatisfied(). }
false;public;0;7;;@Override public void configure() throws Exception {     intercept().to("mock:intercepted").     from("direct:start").to("mock:foo").to("mock:bar").to("mock:result"). }
false;protected;0;12;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             intercept().to("mock:intercepted").             from("direct:start").to("mock:foo").to("mock:bar").to("mock:result").         }     }. }
