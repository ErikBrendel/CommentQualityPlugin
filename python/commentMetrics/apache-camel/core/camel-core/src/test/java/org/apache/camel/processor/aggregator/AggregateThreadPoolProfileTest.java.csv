commented;modifiers;parameterAmount;loc;comment;code
false;public;0;10;;@Test public void testAggregateThreadPoolProfile() throws Exception {     getMockEndpoint("mock:aggregated").expectedBodiesReceived("A+B+C").     template.sendBodyAndHeader("direct:start", "A", "id", 123).     template.sendBodyAndHeader("direct:start", "B", "id", 123).     template.sendBodyAndHeader("direct:start", "C", "id", 123).     assertMockEndpointsSatisfied(). }
false;public;0;16;;@Override public void configure() throws Exception {     // create and register thread pool profile     ThreadPoolProfile profile = new ThreadPoolProfile("myProfile").     profile.setPoolSize(2).     profile.setMaxPoolSize(8).     profile.setRejectedPolicy(ThreadPoolRejectedPolicy.Abort).     context.getExecutorServiceManager().registerThreadPoolProfile(profile).     from("direct:start").aggregate(header("id"), new BodyInAggregatingStrategy()).completionSize(3).executorServiceRef("myProfile").to("log:foo").to("mock:aggregated"). }
false;protected;0;21;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             // create and register thread pool profile             ThreadPoolProfile profile = new ThreadPoolProfile("myProfile").             profile.setPoolSize(2).             profile.setMaxPoolSize(8).             profile.setRejectedPolicy(ThreadPoolRejectedPolicy.Abort).             context.getExecutorServiceManager().registerThreadPoolProfile(profile).             from("direct:start").aggregate(header("id"), new BodyInAggregatingStrategy()).completionSize(3).executorServiceRef("myProfile").to("log:foo").to("mock:aggregated").         }     }. }
