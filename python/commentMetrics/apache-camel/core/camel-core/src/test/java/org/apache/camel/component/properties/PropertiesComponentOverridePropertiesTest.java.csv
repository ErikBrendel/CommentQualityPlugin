commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public boolean isUseRouteBuilder() {     return false. }
false;public;0;6;;@Override public void configure() throws Exception {     from("direct:start").to("{{hey}}").to("mock:{{cool.result}}"). }
false;public;0;20;;@Test public void testPropertiesComponentEndpoint() throws Exception {     context.addRoutes(new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").to("{{hey}}").to("mock:{{cool.result}}").         }     }).     context.start().     getMockEndpoint("mock:extra").expectedMessageCount(1).     getMockEndpoint("mock:hey").expectedMessageCount(1).     getMockEndpoint("mock:result").expectedMessageCount(0).     template.sendBody("direct:start", "Hello World").     assertMockEndpointsSatisfied(). }
false;protected;0;15;;@Override protected CamelContext createCamelContext() throws Exception {     CamelContext context = super.createCamelContext().     PropertiesComponent pc = new PropertiesComponent().     pc.setLocation("classpath:org/apache/camel/component/properties/myproperties.properties").     context.addComponent("properties", pc).     Properties extra = new Properties().     extra.put("cool.result", "extra").     extra.put("hey", "mock:hey").     pc.setOverrideProperties(extra).     return context. }
