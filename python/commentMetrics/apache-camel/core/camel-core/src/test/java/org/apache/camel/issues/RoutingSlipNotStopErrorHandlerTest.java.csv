commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public String router() {     return THROWING_ROUTE. }
false;public;0;10;;@Test public void testRoutingSlipNotStopErrorHandler() throws Exception {     getMockEndpoint("mock:result").expectedMessageCount(2).     template.sendBody(DIRECT_START, "ABC").     template.sendBody(THROWING_ROUTE, "123").     assertMockEndpointsSatisfied(). }
false;public;0;17;;@Override public void configure() {     errorHandler(deadLetterChannel("mock:result").maximumRedeliveries(1).redeliveryDelay(10).retriesExhaustedLogLevel(LoggingLevel.ERROR).retryAttemptedLogLevel(LoggingLevel.WARN).logStackTrace(true).logRetryStackTrace(true)).     from(DIRECT_START).routingSlip(method(CustomRoutingSlip.class, "router")).     from(THROWING_ROUTE).process().exchange(o -> {         throw new IllegalStateException().     }). }
false;protected;0;22;;@Override protected RouteBuilder createRouteBuilder() {     return new RouteBuilder() {          @Override         public void configure() {             errorHandler(deadLetterChannel("mock:result").maximumRedeliveries(1).redeliveryDelay(10).retriesExhaustedLogLevel(LoggingLevel.ERROR).retryAttemptedLogLevel(LoggingLevel.WARN).logStackTrace(true).logRetryStackTrace(true)).             from(DIRECT_START).routingSlip(method(CustomRoutingSlip.class, "router")).             from(THROWING_ROUTE).process().exchange(o -> {                 throw new IllegalStateException().             }).         }     }. }
