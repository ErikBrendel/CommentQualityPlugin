commented;modifiers;parameterAmount;loc;comment;code
false;public;1;6;;public void process(Exchange exchange) throws Exception {     String body = exchange.getIn().getBody(String.class).     if (body != null && body.startsWith("Kabom")) {         throw new IllegalArgumentException("Forced").     } }
false;public;0;13;;@Override public void configure() throws Exception {     from("file://target/data/failed?delete=true&moveFailed=error&initialDelay=0&delay=10").setBody(simple("${body} IS processed!")).process(new Processor() {          public void process(Exchange exchange) throws Exception {             String body = exchange.getIn().getBody(String.class).             if (body != null && body.startsWith("Kabom")) {                 throw new IllegalArgumentException("Forced").             }         }     }).to("mock:result"). }
false;protected;0;18;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("file://target/data/failed?delete=true&moveFailed=error&initialDelay=0&delay=10").setBody(simple("${body} IS processed!")).process(new Processor() {                  public void process(Exchange exchange) throws Exception {                     String body = exchange.getIn().getBody(String.class).                     if (body != null && body.startsWith("Kabom")) {                         throw new IllegalArgumentException("Forced").                     }                 }             }).to("mock:result").         }     }. }
