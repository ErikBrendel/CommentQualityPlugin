commented;modifiers;parameterAmount;loc;comment;code
false;public;0;11;;@Override public void configure() throws Exception {     onException(MyTechnicalException.class).handled(true).to("mock:tech").     onException(MyFunctionalException.class).handled(true).to("mock:func").     from("direct:start").choice().when(method("myServiceBean").isEqualTo("James")).to("mock:when").otherwise().to("mock:otherwise"). }
false;protected;0;16;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             onException(MyTechnicalException.class).handled(true).to("mock:tech").             onException(MyFunctionalException.class).handled(true).to("mock:func").             from("direct:start").choice().when(method("myServiceBean").isEqualTo("James")).to("mock:when").otherwise().to("mock:otherwise").         }     }. }
