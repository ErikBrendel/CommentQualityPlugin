commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public boolean isUseRouteBuilder() {     return false. }
false;protected;0;19;;@Override protected CamelContext createCamelContext() throws Exception {     DefaultCamelContext context = (DefaultCamelContext) super.createCamelContext().     foo = new MyFooBean().     bar = new MyDummyBean().     // re-create context     DefaultRegistry reg = new DefaultRegistry().     reg.bind("foo", foo).     reg.bind("bar", bar).     context.setRegistry(reg).     PropertiesComponent pc = new PropertiesComponent().     pc.setLocation("classpath:org/apache/camel/component/properties/cheese.properties").     context.addComponent("properties", pc).     return context. }
false;public;0;8;;@Test public void testPropertiesComponentRegistryPlain() throws Exception {     context.start().     assertSame(foo, context.getRegistry().lookupByName("foo")).     assertSame(bar, context.getRegistry().lookupByName("bar")).     assertNull(context.getRegistry().lookupByName("unknown")). }
false;public;0;15;;@Test public void testPropertiesComponentRegistryLookupName() throws Exception {     context.start().     assertSame(foo, context.getRegistry().lookupByName("{{bean.foo}}")).     assertSame(bar, context.getRegistry().lookupByName("{{bean.bar}}")).     try {         context.getRegistry().lookupByName("{{bean.unknown}}").         fail("Should have thrown exception").     } catch (RuntimeCamelException e) {         IllegalArgumentException cause = assertIsInstanceOf(IllegalArgumentException.class, e.getCause()).         assertEquals("Property with key [bean.unknown] not found in properties from text: {{bean.unknown}}", cause.getMessage()).     } }
false;public;0;15;;@Test public void testPropertiesComponentRegistryLookupNameAndType() throws Exception {     context.start().     assertSame(foo, context.getRegistry().lookupByNameAndType("{{bean.foo}}", MyFooBean.class)).     assertSame(bar, context.getRegistry().lookupByNameAndType("{{bean.bar}}", MyDummyBean.class)).     try {         context.getRegistry().lookupByNameAndType("{{bean.unknown}}", MyDummyBean.class).         fail("Should have thrown exception").     } catch (RuntimeCamelException e) {         IllegalArgumentException cause = assertIsInstanceOf(IllegalArgumentException.class, e.getCause()).         assertEquals("Property with key [bean.unknown] not found in properties from text: {{bean.unknown}}", cause.getMessage()).     } }
