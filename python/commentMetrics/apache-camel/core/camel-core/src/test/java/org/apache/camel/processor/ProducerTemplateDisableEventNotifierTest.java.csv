commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;7;;@Override protected CamelContext createCamelContext() throws Exception {     DefaultCamelContext context = (DefaultCamelContext) super.createCamelContext().     context.init().     context.getManagementStrategy().addEventNotifier(notifier).     return context. }
false;public;0;14;;@Test public void testExchangeSent() throws Exception {     getMockEndpoint("mock:result").expectedMessageCount(1).     // we dont want events for producer template itself so disable that     ProducerTemplate other = context.createProducerTemplate().     other.setEventNotifierEnabled(false).     other.sendBody("direct:start", "Hello World").     assertMockEndpointsSatisfied().     assertEquals(2, notifier.getEvents().size()). }
false;public;0;6;;@Override public void configure() throws Exception {     from("direct:start").to("direct:bar").to("mock:result").     from("direct:bar").delay(1). }
false;protected;0;11;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").to("direct:bar").to("mock:result").             from("direct:bar").delay(1).         }     }. }
