commented;modifiers;parameterAmount;loc;comment;code
false;public;0;8;;@Test public void testSendingMessageWithMethodNameHeader() throws Exception {     String expectedBody = "Wobble".     template.sendBodyAndHeader("direct:in", expectedBody, Exchange.BEAN_METHOD_NAME, "read").     assertEquals("bean received correct value for: " + myBean, expectedBody, myBean.body). }
false;public;1;5;;public void process(Exchange exchange) {     Message in = exchange.getIn().     in.setBody(expectedBody).     in.setHeader(Exchange.BEAN_METHOD_NAME, "read"). }
false;public;0;13;;@Test public void testSendingMessageWithMethodNameHeaderWithMoreVerboseCoe() throws Exception {     final String expectedBody = "Wibble".     template.send("direct:in", new Processor() {          public void process(Exchange exchange) {             Message in = exchange.getIn().             in.setBody(expectedBody).             in.setHeader(Exchange.BEAN_METHOD_NAME, "read").         }     }).     assertEquals("bean received correct value", expectedBody, myBean.body). }
false;public;0;8;;@Override @Before public void setUp() throws Exception {     super.setUp().     Object lookedUpBean = context.getRegistry().lookupByName("myBean").     assertSame("Lookup of 'myBean' should return same object!", myBean, lookedUpBean). }
false;protected;0;6;;@Override protected Context createJndiContext() throws Exception {     JndiContext answer = new JndiContext().     answer.bind("myBean", myBean).     return answer. }
false;public;0;3;;public void configure() {     from("direct:in").bean("myBean"). }
false;protected;0;7;;protected RouteBuilder createRouteBuilder() {     return new RouteBuilder() {          public void configure() {             from("direct:in").bean("myBean").         }     }. }
false;public;0;4;;@Override public String toString() {     return "MyBean:" + id. }
false;public;1;4;;public void read(String body) {     this.body = body.     LOG.info("read() method on {} with body: {}", this, body). }
false;public;1;3;;public void wrongMethod(String body) {     fail("wrongMethod() called with: " + body). }
