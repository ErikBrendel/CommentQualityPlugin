commented;modifiers;parameterAmount;loc;comment;code
false;public;0;10;;@Test public void testAggregate() throws Exception {     getMockEndpoint("mock:result").expectedBodiesReceived("OldWasNullABC").     template.sendBody("direct:start", "A").     template.sendBody("direct:start", "B").     template.sendBody("direct:start", "C").     assertMockEndpointsSatisfied(). }
false;public;0;10;;@Override public void configure() throws Exception {     myStrategy = new AggregationStrategyBeanAdapter(appender, "append").     myStrategy.setAllowNullOldExchange(true).     from("direct:start").aggregate(constant(true), myStrategy).completionSize(3).to("mock:result"). }
false;protected;0;15;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             myStrategy = new AggregationStrategyBeanAdapter(appender, "append").             myStrategy.setAllowNullOldExchange(true).             from("direct:start").aggregate(constant(true), myStrategy).completionSize(3).to("mock:result").         }     }. }
false;public;2;10;;public String append(String existing, String next) {     if (existing == null) {         return "OldWasNull" + next.     }     if (next != null) {         return existing + next.     } else {         return existing.     } }
