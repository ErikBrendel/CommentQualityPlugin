commented;modifiers;parameterAmount;loc;comment;code
false;public;0;9;;@Test public void testTryCatchCaughtException() throws Exception {     getMockEndpoint("mock:a").expectedMessageCount(1).     getMockEndpoint("mock:result").expectedMessageCount(1).     template.sendBody("direct:start", "Hello World").     assertMockEndpointsSatisfied(). }
false;protected;0;6;;@Override protected JndiRegistry createRegistry() throws Exception {     JndiRegistry jndi = super.createRegistry().     jndi.bind("myBean", this).     return jndi. }
false;public;1;5;;@Override public void process(Exchange exchange) throws Exception {     assertEquals("bean://myBean?method=doSomething", exchange.getProperty(Exchange.FAILURE_ENDPOINT)).     assertEquals("Forced", exchange.getProperty(Exchange.EXCEPTION_CAUGHT, Exception.class).getMessage()). }
false;public;0;17;;@Override public void configure() throws Exception {     from("direct:start").doTry().to("mock:a").to("bean:myBean?method=doSomething").doCatch(Exception.class).process(new Processor() {          @Override         public void process(Exchange exchange) throws Exception {             assertEquals("bean://myBean?method=doSomething", exchange.getProperty(Exchange.FAILURE_ENDPOINT)).             assertEquals("Forced", exchange.getProperty(Exchange.EXCEPTION_CAUGHT, Exception.class).getMessage()).         }     }).end().to("mock:result"). }
false;protected;0;22;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").doTry().to("mock:a").to("bean:myBean?method=doSomething").doCatch(Exception.class).process(new Processor() {                  @Override                 public void process(Exchange exchange) throws Exception {                     assertEquals("bean://myBean?method=doSomething", exchange.getProperty(Exchange.FAILURE_ENDPOINT)).                     assertEquals("Forced", exchange.getProperty(Exchange.EXCEPTION_CAUGHT, Exception.class).getMessage()).                 }             }).end().to("mock:result").         }     }. }
false;public;1;3;;public void doSomething(String body) throws Exception {     throw new IllegalArgumentException("Forced"). }
