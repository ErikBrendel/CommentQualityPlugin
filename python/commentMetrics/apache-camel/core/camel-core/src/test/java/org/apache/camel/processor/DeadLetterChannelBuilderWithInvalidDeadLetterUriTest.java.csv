commented;modifiers;parameterAmount;loc;comment;code
false;public;0;6;;@Override public void configure() throws Exception {     errorHandler(deadLetterChannel("xxx")).     from("direct:start").to("mock:foo"). }
false;public;0;17;;@Test public void testInvalidUri() throws Exception {     try {         context.addRoutes(new RouteBuilder() {              @Override             public void configure() throws Exception {                 errorHandler(deadLetterChannel("xxx")).                 from("direct:start").to("mock:foo").             }         }).         fail("Should have thrown an exception").     } catch (NoSuchEndpointException e) {         assertEquals("No endpoint could be found for: xxx, please check your classpath contains the needed Camel component jar.", e.getMessage()).     } }
false;public;0;6;;@Override public void configure() throws Exception {     errorHandler(deadLetterChannel("direct:error?foo=bar")).     from("direct:start").to("mock:foo"). }
false;public;0;17;;@Test public void testInvalidOption() throws Exception {     try {         context.addRoutes(new RouteBuilder() {              @Override             public void configure() throws Exception {                 errorHandler(deadLetterChannel("direct:error?foo=bar")).                 from("direct:start").to("mock:foo").             }         }).         fail("Should have thrown an exception").     } catch (ResolveEndpointFailedException e) {         assertTrue(e.getMessage().endsWith("Unknown parameters=[{foo=bar}]")).     } }
false;public;0;4;;@Override public boolean isUseRouteBuilder() {     return false. }
