commented;modifiers;parameterAmount;loc;comment;code
false;public;2;3;;public boolean begin(Consumer consumer, Endpoint endpoint) {     return true. }
false;public;3;3;;public void commit(Consumer consumer, Endpoint endpoint, int polledMessages) {     polled.addAndGet(polledMessages). }
false;public;4;3;;public boolean rollback(Consumer consumer, Endpoint endpoint, int retryCounter, Exception e) throws Exception {     return false. }
false;public;0;28;;@Test public void test321Greedy() throws Exception {     polled.set(0).     MockScheduledPollConsumer consumer = new Mock321ScheduledPollConsumer(getMockEndpoint("mock:foo"), null).     consumer.setGreedy(true).     consumer.setPollStrategy(new PollingConsumerPollStrategy() {          public boolean begin(Consumer consumer, Endpoint endpoint) {             return true.         }          public void commit(Consumer consumer, Endpoint endpoint, int polledMessages) {             polled.addAndGet(polledMessages).         }          public boolean rollback(Consumer consumer, Endpoint endpoint, int retryCounter, Exception e) throws Exception {             return false.         }     }).     consumer.start().     consumer.run().     assertEquals(6, polled.get()).     consumer.stop(). }
false;public;2;3;;public boolean begin(Consumer consumer, Endpoint endpoint) {     return true. }
false;public;3;3;;public void commit(Consumer consumer, Endpoint endpoint, int polledMessages) {     polled.addAndGet(polledMessages). }
false;public;4;3;;public boolean rollback(Consumer consumer, Endpoint endpoint, int retryCounter, Exception e) throws Exception {     return false. }
false;public;0;34;;@Test public void test321NotGreedy() throws Exception {     polled.set(0).     MockScheduledPollConsumer consumer = new Mock321ScheduledPollConsumer(getMockEndpoint("mock:foo"), null).     consumer.setGreedy(false).     consumer.setPollStrategy(new PollingConsumerPollStrategy() {          public boolean begin(Consumer consumer, Endpoint endpoint) {             return true.         }          public void commit(Consumer consumer, Endpoint endpoint, int polledMessages) {             polled.addAndGet(polledMessages).         }          public boolean rollback(Consumer consumer, Endpoint endpoint, int retryCounter, Exception e) throws Exception {             return false.         }     }).     consumer.start().     consumer.run().     assertEquals(3, polled.get()).     consumer.run().     assertEquals(5, polled.get()).     consumer.run().     assertEquals(6, polled.get()).     consumer.run().     assertEquals(6, polled.get()).     consumer.stop(). }
