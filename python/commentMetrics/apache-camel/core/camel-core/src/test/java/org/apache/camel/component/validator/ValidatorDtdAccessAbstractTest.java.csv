commented;modifiers;parameterAmount;loc;comment;code
false;private;1;3;;private String getPayloudPart(String bodyValue) {     return "<mail xmlns='http://foo.com/bar'><subject>Hey</subject><body>" + bodyValue + "</body></mail>". }
false;public;0;10;;@Override @Before public void setUp() throws Exception {     super.setUp().     validEndpoint = resolveMandatoryEndpoint("mock:valid", MockEndpoint.class).     invalidEndpoint = resolveMandatoryEndpoint("mock:invalid", MockEndpoint.class).     unknownHostExceptionEndpoint = resolveMandatoryEndpoint("mock:unknownHostException", MockEndpoint.class).     finallyEndpoint = resolveMandatoryEndpoint("mock:finally", MockEndpoint.class). }
false;public;0;17;;@Override public void configure() throws Exception {     // switch on DTD Access     if (accessExternalDTD) {         getContext().getGlobalOptions().put(SchemaReader.ACCESS_EXTERNAL_DTD, "true").     }     from("direct:start").doTry().to("validator:org/apache/camel/component/validator/schema.xsd").to("mock:valid").doCatch(ValidationException.class).to("mock:invalid").doCatch(UnknownHostException.class).to("mock:unknownHostException").doFinally().to("mock:finally").end(). }
false;protected;0;23;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             // switch on DTD Access             if (accessExternalDTD) {                 getContext().getGlobalOptions().put(SchemaReader.ACCESS_EXTERNAL_DTD, "true").             }             from("direct:start").doTry().to("validator:org/apache/camel/component/validator/schema.xsd").to("mock:valid").doCatch(ValidationException.class).to("mock:invalid").doCatch(UnknownHostException.class).to("mock:unknownHostException").doFinally().to("mock:finally").end().         }     }. }
