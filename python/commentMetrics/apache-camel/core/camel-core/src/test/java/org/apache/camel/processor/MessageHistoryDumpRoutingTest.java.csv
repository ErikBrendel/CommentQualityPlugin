commented;modifiers;parameterAmount;loc;comment;code
false;public;0;9;;@Test public void testReduceStacksNeeded() throws Exception {     MockEndpoint mock = getMockEndpoint("mock:bar").     mock.expectedBodiesReceived(body).     template.sendBody("seda:start", body).     assertMockEndpointsSatisfied(). }
false;public;1;4;;@Override public void process(Exchange exchange) throws Exception {     throw new IllegalArgumentException("Forced to dump message history"). }
false;public;0;24;;@Override public void configure() throws Exception {     context.setMessageHistory(true).     // to test that the message history exchange gets clipped     context.getGlobalOptions().put(Exchange.LOG_DEBUG_BODY_MAX_CHARS, "100").     from("seda:start").to("log:foo").to("direct:bar").delay(300).to("log:baz").process(new Processor() {          @Override         public void process(Exchange exchange) throws Exception {             throw new IllegalArgumentException("Forced to dump message history").         }     }).to("mock:result").     from("direct:bar").to("log:bar").delay(100).to("mock:bar"). }
false;protected;0;29;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             context.setMessageHistory(true).             // to test that the message history exchange gets clipped             context.getGlobalOptions().put(Exchange.LOG_DEBUG_BODY_MAX_CHARS, "100").             from("seda:start").to("log:foo").to("direct:bar").delay(300).to("log:baz").process(new Processor() {                  @Override                 public void process(Exchange exchange) throws Exception {                     throw new IllegalArgumentException("Forced to dump message history").                 }             }).to("mock:result").             from("direct:bar").to("log:bar").delay(100).to("mock:bar").         }     }. }
