commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public void configure() throws Exception {     weaveByToString(".*mock:foo.*").replace().to("mock:bar"). }
false;public;0;17;;@Test public void testWeaveByToStringShoultNotThrowUnsupportedOperationException() throws Exception {     RouteReifier.adviceWith(context.getRouteDefinitions().get(0), context, new AdviceWithRouteBuilder() {          @Override         public void configure() throws Exception {             weaveByToString(".*mock:foo.*").replace().to("mock:bar").         }     }).     context.start().     getMockEndpoint("mock:foo").expectedMessageCount(0).     getMockEndpoint("mock:bar").expectedMessageCount(1).     template.sendBody("direct:start", "Hello World").     assertMockEndpointsSatisfied(). }
false;public;0;4;;@Override public void configure() throws Exception {     from("direct:start").choice().when(simple("true")).to("mock:foo"). }
false;protected;0;9;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").choice().when(simple("true")).to("mock:foo").         }     }. }
