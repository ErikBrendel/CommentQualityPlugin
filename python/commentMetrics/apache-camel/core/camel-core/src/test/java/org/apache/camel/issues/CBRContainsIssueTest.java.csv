commented;modifiers;parameterAmount;loc;comment;code
false;public;0;9;;@Test public void testNot13() throws Exception {     getMockEndpoint("mock:13").expectedMessageCount(0).     getMockEndpoint("mock:other").expectedMessageCount(1).     template.sendBody("direct:start", "Hello World").     assertMockEndpointsSatisfied(). }
false;public;0;9;;@Test public void testIs13() throws Exception {     getMockEndpoint("mock:13").expectedMessageCount(1).     getMockEndpoint("mock:other").expectedMessageCount(0).     template.sendBody("direct:start", "13").     assertMockEndpointsSatisfied(). }
false;public;0;9;;@Test public void testIs13Number() throws Exception {     getMockEndpoint("mock:13").expectedMessageCount(1).     getMockEndpoint("mock:other").expectedMessageCount(0).     template.sendBody("direct:start", 13).     assertMockEndpointsSatisfied(). }
false;public;0;9;;@Test public void testContains13() throws Exception {     getMockEndpoint("mock:13").expectedMessageCount(1).     getMockEndpoint("mock:other").expectedMessageCount(0).     template.sendBody("direct:start", "Hi 13 how are you?").     assertMockEndpointsSatisfied(). }
false;public;0;9;;@Test public void testContains13Number() throws Exception {     getMockEndpoint("mock:13").expectedMessageCount(1).     getMockEndpoint("mock:other").expectedMessageCount(0).     template.sendBody("direct:start", 221344).     assertMockEndpointsSatisfied(). }
false;public;0;9;;@Test public void testContainsNot13Number() throws Exception {     getMockEndpoint("mock:13").expectedMessageCount(0).     getMockEndpoint("mock:other").expectedMessageCount(1).     template.sendBody("direct:start", 22).     assertMockEndpointsSatisfied(). }
false;public;0;9;;@Override public void configure() throws Exception {     from("direct:start").choice().when(body().convertToString().contains("13")).to("mock:13").otherwise().to("mock:other"). }
false;protected;0;14;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").choice().when(body().convertToString().contains("13")).to("mock:13").otherwise().to("mock:other").         }     }. }
