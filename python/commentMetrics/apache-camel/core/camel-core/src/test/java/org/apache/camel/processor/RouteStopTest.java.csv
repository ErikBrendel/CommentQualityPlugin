commented;modifiers;parameterAmount;loc;comment;code
false;public;0;11;;@Test public void testOtherwise() throws Exception {     getMockEndpoint("mock:hello").expectedMessageCount(0).     getMockEndpoint("mock:bye").expectedMessageCount(0).     getMockEndpoint("mock:other").expectedMessageCount(1).     getMockEndpoint("mock:result").expectedMessageCount(1).     template.sendBody("direct:start", "Other").     assertMockEndpointsSatisfied(). }
false;public;0;11;;@Test public void testHello() throws Exception {     getMockEndpoint("mock:hello").expectedMessageCount(1).     getMockEndpoint("mock:bye").expectedMessageCount(0).     getMockEndpoint("mock:other").expectedMessageCount(0).     getMockEndpoint("mock:result").expectedMessageCount(1).     template.sendBody("direct:start", "Hello World").     assertMockEndpointsSatisfied(). }
false;public;0;12;;@Test public void testByeWithStop() throws Exception {     getMockEndpoint("mock:hello").expectedMessageCount(0).     getMockEndpoint("mock:bye").expectedMessageCount(1).     getMockEndpoint("mock:other").expectedMessageCount(0).     // we should stop so no message arrives at result     getMockEndpoint("mock:result").expectedMessageCount(0).     template.sendBody("direct:start", "Bye World").     assertMockEndpointsSatisfied(). }
false;public;0;9;;@Test public void testSetPropertyToStop() throws Exception {     getMockEndpoint("mock:foo").expectedMessageCount(1).     getMockEndpoint("mock:result").expectedMessageCount(0).     template.sendBody("direct:foo", "Hello World").     assertMockEndpointsSatisfied(). }
false;public;0;17;;@Override public void configure() throws Exception {     // START SNIPPET: e1     from("direct:start").choice().when(body().contains("Hello")).to("mock:hello").when(body().contains("Bye")).to("mock:bye").stop().otherwise().to("mock:other").end().to("mock:result").     // END SNIPPET: e1     from("direct:foo").to("mock:foo").setProperty(Exchange.ROUTE_STOP, constant("true")).to("mock:result"). }
false;protected;0;22;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             // START SNIPPET: e1             from("direct:start").choice().when(body().contains("Hello")).to("mock:hello").when(body().contains("Bye")).to("mock:bye").stop().otherwise().to("mock:other").end().to("mock:result").             // END SNIPPET: e1             from("direct:foo").to("mock:foo").setProperty(Exchange.ROUTE_STOP, constant("true")).to("mock:result").         }     }. }
