commented;modifiers;parameterAmount;loc;comment;code
false;public;0;22;;@Test public void testLifecycleCallbacks() throws Exception {     Route route = context.getRoute("foo").     assertEquals(ServiceStatus.Stopped, context.getRouteController().getRouteStatus("foo")).     policy.startRoute(route).     assertEquals(ServiceStatus.Started, context.getRouteController().getRouteStatus("foo")).     policy.suspendRoute(route).     assertEquals(ServiceStatus.Suspended, context.getRouteController().getRouteStatus("foo")).     policy.resumeRoute(route).     assertEquals(ServiceStatus.Started, context.getRouteController().getRouteStatus("foo")).     policy.stopRoute(route).     assertEquals(ServiceStatus.Stopped, context.getRouteController().getRouteStatus("foo")). }
false;public;0;4;;public void configure() throws Exception {     from("direct:start").routeId("foo").routePolicy(policy).autoStartup(false).to("mock:result"). }
false;protected;0;9;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          public void configure() throws Exception {             from("direct:start").routeId("foo").routePolicy(policy).autoStartup(false).to("mock:result").         }     }. }
