commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;6;;@Override protected JndiRegistry createRegistry() throws Exception {     JndiRegistry jndi = super.createRegistry().     jndi.bind("myCoolBean", new MyBarSingleton()).     return jndi. }
false;public;0;9;;@Test public void testDumpModelAsXml() throws Exception {     String xml = ModelHelper.dumpModelAsXml(context, context.getRouteDefinition("myRoute")).     assertNotNull(xml).     log.info(xml).     assertTrue(xml.contains("<simple>Hello ${body}</simple>")).     assertTrue(xml.contains("<description>Hello danish \u00C6\u00D8\u00C5</description>")). }
false;public;0;7;;@Override public void configure() throws Exception {     from("direct:start").routeId("myRoute").description("Hello danish \u00C6\u00D8\u00C5").setBody(simple("Hello ${body}")).to("mock:result"). }
false;protected;0;12;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").routeId("myRoute").description("Hello danish \u00C6\u00D8\u00C5").setBody(simple("Hello ${body}")).to("mock:result").         }     }. }
