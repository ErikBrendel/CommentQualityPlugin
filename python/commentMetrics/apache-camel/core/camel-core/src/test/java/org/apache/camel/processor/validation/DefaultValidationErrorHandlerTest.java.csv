commented;modifiers;parameterAmount;loc;comment;code
false;public;0;9;;@Test public void testWarning() throws Exception {     DefaultValidationErrorHandler eh = new DefaultValidationErrorHandler().     eh.warning(new SAXParseException("foo", createLocator(1, 2))).     // just a warning so should be valid     assertEquals(true, eh.isValid()). }
false;public;0;8;;@Test public void testError() throws Exception {     DefaultValidationErrorHandler eh = new DefaultValidationErrorHandler().     eh.error(new SAXParseException("foo", createLocator(3, 5))).     assertEquals(false, eh.isValid()). }
false;public;0;8;;@Test public void testFatalError() throws Exception {     DefaultValidationErrorHandler eh = new DefaultValidationErrorHandler().     eh.fatalError(new SAXParseException("foo", createLocator(5, 8))).     assertEquals(false, eh.isValid()). }
false;public;0;12;;@Test public void testReset() throws Exception {     DefaultValidationErrorHandler eh = new DefaultValidationErrorHandler().     eh.fatalError(new SAXParseException("foo", createLocator(5, 8))).     assertEquals(false, eh.isValid()).     eh.reset().     assertEquals(true, eh.isValid()). }
false;public;0;30;;@Test public void testHandleErrors() throws Exception {     DefaultValidationErrorHandler eh = new DefaultValidationErrorHandler().     eh.error(new SAXParseException("foo", createLocator(3, 5))).     eh.error(new SAXParseException("bar", createLocator(9, 12))).     eh.fatalError(new SAXParseException("cheese", createLocator(13, 17))).     assertEquals(false, eh.isValid()).     Exchange exchange = new DefaultExchange(context).     try {         eh.handleErrors(exchange, createScheme()).         fail("Should have thrown an exception").     } catch (SchemaValidationException e) {         assertEquals(2, e.getErrors().size()).         assertEquals(1, e.getFatalErrors().size()).         assertEquals(0, e.getWarnings().size()).         assertNotNull(e.getSchema()).         assertNotNull(e.getExchange()).         assertTrue(e.getMessage().startsWith("Validation failed for: org.apache.camel.processor.validation.DefaultValidationErrorHandlerTest")).         assertTrue(e.getMessage().contains("fatal errors: [")).         assertTrue(e.getMessage().contains("org.xml.sax.SAXParseException: cheese, Line : 13, Column : 17")).         assertTrue(e.getMessage().contains("errors: [")).         assertTrue(e.getMessage().contains("org.xml.sax.SAXParseException: foo, Line : 3, Column : 5")).         assertTrue(e.getMessage().contains("org.xml.sax.SAXParseException: bar, Line : 9, Column : 12")).         assertTrue(e.getMessage().contains("Exchange[]")).     } }
false;public;0;27;;@Test public void testHandleErrorsResult() throws Exception {     DefaultValidationErrorHandler eh = new DefaultValidationErrorHandler().     eh.error(new SAXParseException("foo", createLocator(3, 5))).     eh.error(new SAXParseException("bar", createLocator(9, 12))).     assertEquals(false, eh.isValid()).     Exchange exchange = new DefaultExchange(context).     try {         eh.handleErrors(exchange, createScheme(), new SAXResult()).         fail("Should have thrown an exception").     } catch (SchemaValidationException e) {         assertEquals(2, e.getErrors().size()).         assertEquals(0, e.getFatalErrors().size()).         assertEquals(0, e.getWarnings().size()).         assertNotNull(e.getSchema()).         assertNotNull(e.getExchange()).         assertTrue(e.getMessage().startsWith("Validation failed for: org.apache.camel.processor.validation.DefaultValidationErrorHandlerTest")).         assertTrue(e.getMessage().contains("errors: [")).         assertTrue(e.getMessage().contains("org.xml.sax.SAXParseException: foo, Line : 3, Column : 5")).         assertTrue(e.getMessage().contains("org.xml.sax.SAXParseException: bar, Line : 9, Column : 12")).         assertTrue(e.getMessage().contains("Exchange[]")).     } }
false;public;0;4;;@Override public Validator newValidator() {     return null. }
false;public;0;4;;@Override public ValidatorHandler newValidatorHandler() {     return null. }
false;private;0;13;;private Schema createScheme() {     return new Schema() {          @Override         public Validator newValidator() {             return null.         }          @Override         public ValidatorHandler newValidatorHandler() {             return null.         }     }. }
false;public;0;3;;public String getSystemId() {     return null. }
false;public;0;3;;public String getPublicId() {     return null. }
false;public;0;3;;public int getLineNumber() {     return line. }
false;public;0;3;;public int getColumnNumber() {     return column. }
false;private;2;19;;private Locator createLocator(final int line, final int column) {     return new Locator() {          public String getSystemId() {             return null.         }          public String getPublicId() {             return null.         }          public int getLineNumber() {             return line.         }          public int getColumnNumber() {             return column.         }     }. }
