commented;modifiers;parameterAmount;loc;comment;code
false;public;0;15;;@Test public void testBeanMethodNameHeaderIssue() throws Exception {     getMockEndpoint("mock:a").expectedBodiesReceived("foo").     getMockEndpoint("mock:a").message(0).header(Exchange.BEAN_METHOD_NAME).isNull().     getMockEndpoint("mock:b").expectedBodiesReceived("bar").     getMockEndpoint("mock:b").message(0).header(Exchange.BEAN_METHOD_NAME).isNull().     getMockEndpoint("mock:c").expectedBodiesReceived("Bye bar").     getMockEndpoint("mock:c").message(0).header(Exchange.BEAN_METHOD_NAME).isNull().     getMockEndpoint("mock:d").expectedBodiesReceived("Bye bar Bye bar").     getMockEndpoint("mock:d").message(0).header(Exchange.BEAN_METHOD_NAME).isNull().     template.sendBodyAndHeader("direct:start", "Hello World", Exchange.BEAN_METHOD_NAME, "foo").     assertMockEndpointsSatisfied(). }
false;public;0;13;;@Override public void configure() throws Exception {     from("direct:start").bean(BeanMethodNameHeaderIssueTest.class).to("mock:a").bean(BeanMethodNameHeaderIssueTest.class, "bar").to("mock:b").bean(BeanMethodNameHeaderIssueTest.class).to("mock:c").setHeader(Exchange.BEAN_METHOD_NAME, constant("echo")).bean(BeanMethodNameHeaderIssueTest.class).to("mock:d"). }
false;protected;0;18;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").bean(BeanMethodNameHeaderIssueTest.class).to("mock:a").bean(BeanMethodNameHeaderIssueTest.class, "bar").to("mock:b").bean(BeanMethodNameHeaderIssueTest.class).to("mock:c").setHeader(Exchange.BEAN_METHOD_NAME, constant("echo")).bean(BeanMethodNameHeaderIssueTest.class).to("mock:d").         }     }. }
false;public;0;3;;public String foo() {     return "foo". }
false;public;0;3;;public String bar() {     return "bar". }
false;public;1;3;;public String echo(String body) {     return body + " " + body. }
false;public;1;4;;@Handler public String doSomething(String body) {     return "Bye " + body. }
