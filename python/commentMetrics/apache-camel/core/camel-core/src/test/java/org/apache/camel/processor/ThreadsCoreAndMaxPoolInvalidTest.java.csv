commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public boolean isUseRouteBuilder() {     return super.isUseRouteBuilder(). }
false;public;0;6;;@Override public void configure() throws Exception {     from("direct:start").threads(5, 2).to("mock:result"). }
false;public;0;18;;@Test public void testInvalidSyntax() throws Exception {     try {         context.addRoutes(new RouteBuilder() {              @Override             public void configure() throws Exception {                 from("direct:start").threads(5, 2).to("mock:result").             }         }).         fail("Should have thrown an exception").     } catch (FailedToCreateRouteException e) {         IllegalArgumentException iae = assertIsInstanceOf(IllegalArgumentException.class, e.getCause()).         assertEquals("MaxPoolSize must be >= corePoolSize, was 2 >= 5", iae.getMessage()).     } }
