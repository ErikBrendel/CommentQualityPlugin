commented;modifiers;parameterAmount;loc;comment;code
false;public;0;19;;@Test public void testAddRoutesAtRuntime() throws Exception {     getMockEndpoint("mock:start").expectedMessageCount(1).     template.sendBody("direct:start", "Hello World").     assertMockEndpointsSatisfied().     assertEquals(1, context.getRoutes().size()).     getMockEndpoint("mock:foo").expectedMessageCount(1).     context.addRoutes(new MyDynamcRouteBuilder(context, "direct:foo", "mock:foo")).     template.sendBody("direct:foo", "Bye Camel").     assertMockEndpointsSatisfied().     assertEquals(2, context.getRoutes().size()).     getMockEndpoint("mock:bar").expectedMessageCount(1).     context.addRoutes(new MyDynamcRouteBuilder(context, "direct:bar", "mock:bar")).     template.sendBody("direct:bar", "Hi Camel").     assertMockEndpointsSatisfied().     assertEquals(3, context.getRoutes().size()). }
false;public;0;5;;@Override public void configure() throws Exception {     // here is an existing route     from("direct:start").to("mock:start"). }
false;protected;0;10;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             // here is an existing route             from("direct:start").to("mock:start").         }     }. }
false;public;0;4;;@Override public void configure() throws Exception {     from(from).to(to). }
