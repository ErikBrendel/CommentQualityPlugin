commented;modifiers;parameterAmount;loc;comment;code
true;public;0;7;// ignore the test ;// ignore the test public void xtestThreadsCoreAndMaxPool() throws Exception {     getMockEndpoint("mock:result").expectedMessageCount(1).     template.sendBody("direct:start", "Hello World").     assertMockEndpointsSatisfied(). }
false;public;0;6;;@Override public void configure() throws Exception {     from("direct:start").threads(-1, 2).to("mock:result"). }
false;public;0;16;;@Test public void testThreadsCoreBeZero() throws Exception {     try {         context.addRoutes(new RouteBuilder() {              @Override             public void configure() throws Exception {                 from("direct:start").threads(-1, 2).to("mock:result").             }         }).         fail("Expect FailedToCreateRouteException exception here").     } catch (FailedToCreateRouteException ex) {         assertTrue(ex.getCause() instanceof IllegalArgumentException).     } }
false;public;0;8;;@Test public void testThreadsCoreAndMaxPoolBuilder() throws Exception {     getMockEndpoint("mock:result").expectedMessageCount(1).     template.sendBody("direct:foo", "Hello World").     assertMockEndpointsSatisfied(). }
false;public;0;8;;@Override public void configure() throws Exception {     from("direct:foo").threads().maxPoolSize(20).threadName("myPool").to("mock:result"). }
false;protected;0;13;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:foo").threads().maxPoolSize(20).threadName("myPool").to("mock:result").         }     }. }
