commented;modifiers;parameterAmount;loc;comment;code
false;public;1;6;;public String doSomething(String body) {     if ("Hello World".equals(body)) {         return "Bye World".     }     return null. }
false;public;0;8;;@Test public void testFilterPojo() throws Exception {     getMockEndpoint("mock:filter").expectedBodiesReceived("Bye World").     template.sendBody("direct:start", "Hello World").     assertMockEndpointsSatisfied(). }
false;public;0;8;;@Test public void testFilterPojoNull() throws Exception {     getMockEndpoint("mock:filter").expectedMessageCount(0).     template.sendBody("direct:start", "Foo").     assertMockEndpointsSatisfied(). }
false;public;0;9;;@Override public void configure() throws Exception {     from("direct:start").bean(FilterPojoIssueTest.class, "doSomething").to("log:foo").filter(body().isNotNull()).to("mock:filter").end(). }
false;protected;0;14;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").bean(FilterPojoIssueTest.class, "doSomething").to("log:foo").filter(body().isNotNull()).to("mock:filter").end().         }     }. }
