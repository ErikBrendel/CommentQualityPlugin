commented;modifiers;parameterAmount;loc;comment;code
false;public;0;15;;@Test public void testRoute() {     Route route = context.getRoutes().get(0).     EventDrivenConsumerRoute consumerRoute = assertIsInstanceOf(EventDrivenConsumerRoute.class, route).     Processor processor = unwrap(consumerRoute.getProcessor()).     Pipeline pipeline = assertIsInstanceOf(Pipeline.class, processor).     // there should be a default error handler in front of each processor in this pipeline     for (Processor child : pipeline.getProcessors()) {         Channel channel = assertIsInstanceOf(Channel.class, child).         assertNotNull("There should be an error handler", channel.getErrorHandler()).         assertIsInstanceOf(DefaultErrorHandler.class, channel.getErrorHandler()).     } }
false;public;0;9;;@Test public void testOk() throws Exception {     MockEndpoint mock = getMockEndpoint("mock:result").     mock.expectedBodiesReceived("Bye World").     template.sendBody("direct:start", "Hello World").     assertMockEndpointsSatisfied(). }
false;public;0;14;;@Test public void testWithError() throws Exception {     MockEndpoint mock = getMockEndpoint("mock:result").     mock.expectedMessageCount(0).     try {         template.sendBody("direct:start", "Kabom").         fail("Should have thrown a RuntimeCamelException").     } catch (RuntimeCamelException e) {     // expected     }     assertMockEndpointsSatisfied(). }
false;public;1;7;;public void process(Exchange exchange) throws Exception {     String body = exchange.getIn().getBody(String.class).     if ("Kabom".equals(body)) {         throw new IllegalArgumentException("Boom").     }     exchange.getIn().setBody("Bye World"). }
false;public;0;15;;@Override public void configure() throws Exception {     // if no error handler is configured it should     // use the default error handler     from("direct:start").process(new Processor() {          public void process(Exchange exchange) throws Exception {             String body = exchange.getIn().getBody(String.class).             if ("Kabom".equals(body)) {                 throw new IllegalArgumentException("Boom").             }             exchange.getIn().setBody("Bye World").         }     }).to("mock:result"). }
false;protected;0;20;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             // if no error handler is configured it should             // use the default error handler             from("direct:start").process(new Processor() {                  public void process(Exchange exchange) throws Exception {                     String body = exchange.getIn().getBody(String.class).                     if ("Kabom".equals(body)) {                         throw new IllegalArgumentException("Boom").                     }                     exchange.getIn().setBody("Bye World").                 }             }).to("mock:result").         }     }. }
