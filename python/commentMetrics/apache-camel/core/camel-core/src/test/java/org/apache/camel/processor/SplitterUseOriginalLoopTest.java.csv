commented;modifiers;parameterAmount;loc;comment;code
false;public;0;11;;@Test public void testUseOriginalLoop() throws Exception {     getMockEndpoint("mock:line").expectedMessageCount(6).     getMockEndpoint("mock:result").expectedBodiesReceived("Hello,World").     getMockEndpoint("mock:result").expectedHeaderReceived("looping", 2).     getMockEndpoint("mock:result").message(0).header("myHeader").isNull().     template.sendBody("direct:start", "Hello,World").     assertMockEndpointsSatisfied(). }
false;public;0;13;;@Override public void configure() throws Exception {     from("direct:start").loop(3).setHeader("looping", exchangeProperty(Exchange.LOOP_INDEX)).split(body(), new UseOriginalAggregationStrategy(null, false)).setHeader("myHeader", exchangeProperty(Exchange.LOOP_INDEX)).to("mock:line").end().end().log("${headers}").to("mock:result"). }
false;protected;0;18;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").loop(3).setHeader("looping", exchangeProperty(Exchange.LOOP_INDEX)).split(body(), new UseOriginalAggregationStrategy(null, false)).setHeader("myHeader", exchangeProperty(Exchange.LOOP_INDEX)).to("mock:line").end().end().log("${headers}").to("mock:result").         }     }. }
