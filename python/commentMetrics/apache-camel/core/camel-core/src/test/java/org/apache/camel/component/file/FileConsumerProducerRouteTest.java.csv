commented;modifiers;parameterAmount;loc;comment;code
false;public;0;6;;@Override @Before public void setUp() throws Exception {     deleteDirectory("target/data/file-test").     super.setUp(). }
false;public;0;10;;@Test public void testFileRoute() throws Exception {     MockEndpoint result = resolveMandatoryEndpoint("mock:result", MockEndpoint.class).     result.expectedMessageCount(2).     template.sendBodyAndHeader("file://target/data/file-test/a", "Hello World", Exchange.FILE_NAME, "hello.txt").     template.sendBodyAndHeader("file://target/data/file-test/a", "Bye World", Exchange.FILE_NAME, "bye.txt").     result.assertIsSatisfied(). }
false;public;0;4;;public void configure() {     from("file:target/data/file-test/a?initialDelay=0&delay=10").to("file:target/data/file-test/b").     from("file:target/data/file-test/b?initialDelay=0&delay=10").to("mock:result"). }
false;protected;0;9;;@Override protected RouteBuilder createRouteBuilder() {     return new RouteBuilder() {          public void configure() {             from("file:target/data/file-test/a?initialDelay=0&delay=10").to("file:target/data/file-test/b").             from("file:target/data/file-test/b?initialDelay=0&delay=10").to("mock:result").         }     }. }
