commented;modifiers;parameterAmount;loc;comment;code
false;public;0;10;;@Test public void testInOut() throws Exception {     getMockEndpoint("mock:foo").expectedMessageCount(1).     getMockEndpoint("mock:result").expectedMessageCount(1).     // start with InOnly     template.sendBody("direct:start", ExchangePattern.InOnly, "Hello World").     assertMockEndpointsSatisfied(). }
false;public;1;4;;public void process(Exchange exchange) throws Exception {     // but it should have been changed to InOut     assertEquals(ExchangePattern.InOut, exchange.getPattern()). }
false;public;0;14;;@Override public void configure() throws Exception {     from("direct:start").inOut("direct:foo").to("mock:result").     from("direct:foo").process(new Processor() {          public void process(Exchange exchange) throws Exception {             // but it should have been changed to InOut             assertEquals(ExchangePattern.InOut, exchange.getPattern()).         }     }).to("mock:foo"). }
false;protected;0;19;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").inOut("direct:foo").to("mock:result").             from("direct:foo").process(new Processor() {                  public void process(Exchange exchange) throws Exception {                     // but it should have been changed to InOut                     assertEquals(ExchangePattern.InOut, exchange.getPattern()).                 }             }).to("mock:foo").         }     }. }
