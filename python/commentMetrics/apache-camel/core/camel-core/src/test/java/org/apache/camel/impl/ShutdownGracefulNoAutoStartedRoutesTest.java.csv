commented;modifiers;parameterAmount;loc;comment;code
false;public;0;17;;@Test public void testShutdownGraceful() throws Exception {     getMockEndpoint("mock:foo").expectedMessageCount(1).     getMockEndpoint("mock:bar").expectedMessageCount(1).     context.getRouteController().startRoute("bar").     template.sendBody("direct:foo", "Hello World").     template.sendBody("direct:bar", "Bye World").     assertMockEndpointsSatisfied().     context.stop().     assertTrue("Route foo should be stopped", context.getRouteController().getRouteStatus("foo").isStopped()).     assertTrue("Route bar should be stopped", context.getRouteController().getRouteStatus("bar").isStopped()). }
false;public;0;6;;@Override public void configure() throws Exception {     from("direct:foo").routeId("foo").to("mock:foo").     from("direct:bar").routeId("bar").noAutoStartup().to("mock:bar"). }
false;protected;0;11;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:foo").routeId("foo").to("mock:foo").             from("direct:bar").routeId("bar").noAutoStartup().to("mock:bar").         }     }. }
