commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;7;;@Override protected JndiRegistry createRegistry() throws Exception {     JndiRegistry jndi = super.createRegistry().     jndi.bind("dummy-rest", new DummyRestConsumerFactory()).     jndi.bind("dummy-rest-api", new DummyRestProcessorFactory()).     return jndi. }
false;public;0;9;;@Override public void configure() throws Exception {     context.setNodeIdFactory(new RouteIdFactory()).     from("direct:start1?timeout=30000").to("mock:result").     from("direct:start2").to("mock:result").     rest("/say/hello").get("/bar").to("mock:result").     rest("/say/hello").get().to("mock:result").     rest().get("/hello").to("mock:result"). }
false;protected;0;14;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             context.setNodeIdFactory(new RouteIdFactory()).             from("direct:start1?timeout=30000").to("mock:result").             from("direct:start2").to("mock:result").             rest("/say/hello").get("/bar").to("mock:result").             rest("/say/hello").get().to("mock:result").             rest().get("/hello").to("mock:result").         }     }. }
false;public;0;4;;@Test public void testDirectRouteIdWithOptions() {     assertEquals("start1", context.getRouteDefinitions().get(0).getId()). }
false;public;0;4;;@Test public void testDirectRouteId() {     assertEquals("start2", context.getRouteDefinitions().get(1).getId()). }
false;public;0;4;;@Test public void testRestRouteIdWithVerbUri() {     assertEquals("get-say-hello-bar", context.getRouteDefinitions().get(2).getId()). }
false;public;0;4;;@Test public void testRestRouteIdWithoutVerbUri() {     assertEquals("get-say-hello", context.getRouteDefinitions().get(3).getId()). }
false;public;0;4;;@Test public void testRestRouteIdWithoutPathUri() {     assertEquals("get-hello", context.getRouteDefinitions().get(4).getId()). }
