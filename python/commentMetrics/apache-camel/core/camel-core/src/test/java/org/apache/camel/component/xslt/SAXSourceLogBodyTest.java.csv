commented;modifiers;parameterAmount;loc;comment;code
false;public;0;8;;@Test public void testSAXSource() throws Exception {     getMockEndpoint("mock:result").expectedMessageCount(1).     template.sendBody("direct:start", new File("src/test/resources/xslt/staff/staff.xml")).     assertMockEndpointsSatisfied(). }
false;public;1;7;;@Override public void process(Exchange exchange) throws Exception {     byte[] data = exchange.getIn().getBody(byte[].class).     InputStream is = exchange.getContext().getTypeConverter().convertTo(InputStream.class, data).     XMLReader xmlReader = XMLReaderFactory.createXMLReader().     exchange.getIn().setBody(new SAXSource(xmlReader, new InputSource(is))). }
false;public;0;19;;@Override public void configure() throws Exception {     from("direct:start").streamCaching().process(new Processor() {          @Override         public void process(Exchange exchange) throws Exception {             byte[] data = exchange.getIn().getBody(byte[].class).             InputStream is = exchange.getContext().getTypeConverter().convertTo(InputStream.class, data).             XMLReader xmlReader = XMLReaderFactory.createXMLReader().             exchange.getIn().setBody(new SAXSource(xmlReader, new InputSource(is))).         }     }).log(LoggingLevel.WARN, "${body}").to("xslt:xslt/common/staff_template.xsl").to("log:result").to("mock:result"). }
false;protected;0;24;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").streamCaching().process(new Processor() {                  @Override                 public void process(Exchange exchange) throws Exception {                     byte[] data = exchange.getIn().getBody(byte[].class).                     InputStream is = exchange.getContext().getTypeConverter().convertTo(InputStream.class, data).                     XMLReader xmlReader = XMLReaderFactory.createXMLReader().                     exchange.getIn().setBody(new SAXSource(xmlReader, new InputSource(is))).                 }             }).log(LoggingLevel.WARN, "${body}").to("xslt:xslt/common/staff_template.xsl").to("log:result").to("mock:result").         }     }. }
