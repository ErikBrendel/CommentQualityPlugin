commented;modifiers;parameterAmount;loc;comment;code
false;public;0;29;;@Override @Before public void setUp() throws Exception {     super.setUp().     context2 = new DefaultCamelContext().     context3 = new DefaultCamelContext().     context4 = new DefaultCamelContext().     ServiceHelper.startService(context2).     ServiceHelper.startService(context3).     ServiceHelper.startService(context4).     // add routes after CamelContext has been started     RouteBuilder routeBuilder = createRouteBuilderCamelContext2().     if (routeBuilder != null) {         context2.addRoutes(routeBuilder).     }     routeBuilder = createRouteBuilderCamelContext3().     if (routeBuilder != null) {         context3.addRoutes(routeBuilder).     }     routeBuilder = createRouteBuilderCamelContext4().     if (routeBuilder != null) {         context4.addRoutes(routeBuilder).     } }
false;public;0;6;;@Override @After public void tearDown() throws Exception {     ServiceHelper.stopService(context2, context3, context4).     super.tearDown(). }
false;public;0;17;;@Test public void testSelectEndpoint() throws Exception {     MockEndpoint result2 = context2.getEndpoint("mock:result2", MockEndpoint.class).     result2.expectedBodiesReceived("Hello World").     MockEndpoint result3 = context3.getEndpoint("mock:result3", MockEndpoint.class).     result3.expectedBodiesReceived("Hello World").     MockEndpoint result4 = context4.getEndpoint("mock:result4", MockEndpoint.class).     result4.expectedMessageCount(0).     template.sendBody("direct:start", "Hello World").     MockEndpoint.assertIsSatisfied(context2).     MockEndpoint.assertIsSatisfied(context3).     MockEndpoint.assertIsSatisfied(context4). }
false;public;0;5;;@Override public void configure() throws Exception {     from("direct:start").recipientList(new DirectVmConsumerExpression("direct-vm://parent/**/context*")). }
false;protected;0;10;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").recipientList(new DirectVmConsumerExpression("direct-vm://parent/**/context*")).         }     }. }
false;public;0;5;;@Override public void configure() throws Exception {     from("direct-vm:parent/child/context2").to("mock:result2"). }
false;private;0;9;;private RouteBuilder createRouteBuilderCamelContext2() {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct-vm:parent/child/context2").to("mock:result2").         }     }. }
false;public;0;5;;@Override public void configure() throws Exception {     from("direct-vm:parent/child/grandchild/context3").to("mock:result3"). }
false;private;0;9;;private RouteBuilder createRouteBuilderCamelContext3() {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct-vm:parent/child/grandchild/context3").to("mock:result3").         }     }. }
false;public;0;5;;@Override public void configure() throws Exception {     from("direct-vm:parent/child/ctx4").to("mock:result4"). }
false;private;0;9;;private RouteBuilder createRouteBuilderCamelContext4() {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct-vm:parent/child/ctx4").to("mock:result4").         }     }. }
