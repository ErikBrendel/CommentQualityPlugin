commented;modifiers;parameterAmount;loc;comment;code
false;public;1;7;;public void process(Exchange exchange) throws Exception {     invoked.incrementAndGet().     if (fail.matches(exchange)) {         throw new ConnectException("Forced").     } }
false;public;0;14;;@Override public void configure() throws Exception {     interceptSendToEndpoint("seda:*").skipSendToOriginalEndpoint().process(new Processor() {          public void process(Exchange exchange) throws Exception {             invoked.incrementAndGet().             if (fail.matches(exchange)) {                 throw new ConnectException("Forced").             }         }     }).to("mock:ok"). }
false;public;0;35;;@Test public void testIssue() throws Exception {     final Predicate fail = PredicateBuilder.or(header(Exchange.REDELIVERY_COUNTER).isNull(), header(Exchange.REDELIVERY_COUNTER).isLessThan(5)).     RouteDefinition route = context.getRouteDefinitions().get(0).     RouteReifier.adviceWith(route, context, new RouteBuilder() {          @Override         public void configure() throws Exception {             interceptSendToEndpoint("seda:*").skipSendToOriginalEndpoint().process(new Processor() {                  public void process(Exchange exchange) throws Exception {                     invoked.incrementAndGet().                     if (fail.matches(exchange)) {                         throw new ConnectException("Forced").                     }                 }             }).to("mock:ok").         }     }).     getMockEndpoint("mock:global").expectedMessageCount(0).     getMockEndpoint("mock:ok").expectedMessageCount(1).     getMockEndpoint("mock:exhausted").expectedMessageCount(0).     template.sendBody("direct:start", "Hello World").     assertMockEndpointsSatisfied().     // 5 retry + 1 ok     assertEquals(6, invoked.get()). }
false;public;0;15;;@Override public void configure() throws Exception {     errorHandler(deadLetterChannel("mock:global").maximumRedeliveries(2).redeliveryDelay(5000)).     from("direct:start").onException(ConnectException.class).maximumRedeliveries(5).redeliveryDelay(0).logRetryAttempted(true).retryAttemptedLogLevel(LoggingLevel.WARN).to("mock:exhausted").end().to("seda:foo"). }
false;protected;0;20;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             errorHandler(deadLetterChannel("mock:global").maximumRedeliveries(2).redeliveryDelay(5000)).             from("direct:start").onException(ConnectException.class).maximumRedeliveries(5).redeliveryDelay(0).logRetryAttempted(true).retryAttemptedLogLevel(LoggingLevel.WARN).to("mock:exhausted").end().to("seda:foo").         }     }. }
