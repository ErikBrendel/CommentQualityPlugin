commented;modifiers;parameterAmount;loc;comment;code
false;public;0;10;;@Test public void testSimpleFilter() throws Exception {     MockEndpoint mock = getMockEndpoint("mock:foo").     mock.expectedBodiesReceived("Hello Foo").     template.sendBody("seda:foo", "Hello Bar").     template.sendBodyAndHeader("seda:foo", "Hello Foo", "foo", "yes").     assertMockEndpointsSatisfied(). }
false;public;0;4;;public void configure() throws Exception {     from("seda:foo").filter().simple("${header.foo}").to("mock:foo"). }
false;protected;0;9;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          public void configure() throws Exception {             from("seda:foo").filter().simple("${header.foo}").to("mock:foo").         }     }. }
