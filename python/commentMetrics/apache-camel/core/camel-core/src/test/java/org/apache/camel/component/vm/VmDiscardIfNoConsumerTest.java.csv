commented;modifiers;parameterAmount;loc;comment;code
false;public;0;13;;@Test public void testDiscard() throws Exception {     VmEndpoint bar = getMandatoryEndpoint("vm:bar", VmEndpoint.class).     assertEquals(0, bar.getCurrentQueueSize()).     getMockEndpoint("mock:result").expectedBodiesReceived("Hello World").     template.sendBody("direct:start", "Hello World").     assertMockEndpointsSatisfied().     assertEquals(0, bar.getCurrentQueueSize()). }
false;public;0;4;;@Override public void configure() throws Exception {     from("direct:start").to("vm:bar?discardIfNoConsumers=true").to("mock:result"). }
false;protected;0;9;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").to("vm:bar?discardIfNoConsumers=true").to("mock:result").         }     }. }
