commented;modifiers;parameterAmount;loc;comment;code
false;public;0;14;;@Test public void testDumpModelAsXml() throws Exception {     String xml = ModelHelper.dumpModelAsXml(context, context.getRouteDefinition("myRoute")).     assertNotNull(xml).     log.info(xml).     Document doc = new XmlConverter().toDOMDocument(xml, null).     NodeList nodes = doc.getElementsByTagName("split").     assertEquals(1, nodes.getLength()).     Element node = (Element) nodes.item(0).     // there is an empty text document as we pretty print the xml, so need to do 2 x next sibling     Element last = (Element) node.getNextSibling().getNextSibling().     assertEquals("mock:last", last.getAttribute("uri")). }
false;public;0;13;;@Override public void configure() throws Exception {     from("direct:start").routeId("myRoute").split().body().to("mock:sub").id("myMock").choice().when(header("foo")).to("mock:foo").when(header("bar")).to("mock:bar").otherwise().to("mock:other").end().end().to("mock:last"). }
false;protected;0;18;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").routeId("myRoute").split().body().to("mock:sub").id("myMock").choice().when(header("foo")).to("mock:foo").when(header("bar")).to("mock:bar").otherwise().to("mock:other").end().end().to("mock:last").         }     }. }
