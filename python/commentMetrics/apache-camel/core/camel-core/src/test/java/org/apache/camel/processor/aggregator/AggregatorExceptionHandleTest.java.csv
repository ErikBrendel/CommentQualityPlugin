commented;modifiers;parameterAmount;loc;comment;code
false;public;0;13;;@Test public void testOk() throws Exception {     MockEndpoint mock = getMockEndpoint("mock:result").     mock.expectedBodiesReceived("Bye World").     // no error     getMockEndpoint("mock:handled").expectedMessageCount(0).     template.sendBodyAndHeader("direct:start", "Hello World", "id", 1).     template.sendBodyAndHeader("direct:start", "Hi World", "id", 1).     assertMockEndpointsSatisfied(). }
false;public;0;13;;@Test public void testHandled() throws Exception {     MockEndpoint mock = getMockEndpoint("mock:handled").     mock.expectedBodiesReceived("Damn").     // no result     getMockEndpoint("mock:result").expectedMessageCount(0).     template.sendBodyAndHeader("direct:start", "Hi World", "id", 1).     template.sendBodyAndHeader("direct:start", "Damn", "id", 1).     assertMockEndpointsSatisfied(). }
false;public;1;7;;public void process(Exchange exchange) throws Exception {     String body = exchange.getIn().getBody(String.class).     if ("Damn".equals(body)) {         throw new IllegalArgumentException("Damn").     }     exchange.getOut().setBody("Bye World"). }
false;public;0;18;;@Override public void configure() throws Exception {     onException(IllegalArgumentException.class).handled(true).to("mock:handled").     from("direct:start").aggregate(header("id"), new UseLatestAggregationStrategy()).completionTimeout(100).completionTimeoutCheckerInterval(10).process(new Processor() {          public void process(Exchange exchange) throws Exception {             String body = exchange.getIn().getBody(String.class).             if ("Damn".equals(body)) {                 throw new IllegalArgumentException("Damn").             }             exchange.getOut().setBody("Bye World").         }     }).to("mock:result"). }
false;protected;0;23;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             onException(IllegalArgumentException.class).handled(true).to("mock:handled").             from("direct:start").aggregate(header("id"), new UseLatestAggregationStrategy()).completionTimeout(100).completionTimeoutCheckerInterval(10).process(new Processor() {                  public void process(Exchange exchange) throws Exception {                     String body = exchange.getIn().getBody(String.class).                     if ("Damn".equals(body)) {                         throw new IllegalArgumentException("Damn").                     }                     exchange.getOut().setBody("Bye World").                 }             }).to("mock:result").         }     }. }
