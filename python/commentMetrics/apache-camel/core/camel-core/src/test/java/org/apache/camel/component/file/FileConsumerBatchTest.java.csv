commented;modifiers;parameterAmount;loc;comment;code
false;public;0;6;;@Override @Before public void setUp() throws Exception {     deleteDirectory("target/data/file-batch").     super.setUp(). }
false;public;0;4;;public void configure() throws Exception {     from("file://target/data/file-batch?initialDelay=0&delay=10").noAutoStartup().convertBodyTo(String.class).to("mock:result"). }
false;protected;0;9;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          public void configure() throws Exception {             from("file://target/data/file-batch?initialDelay=0&delay=10").noAutoStartup().convertBodyTo(String.class).to("mock:result").         }     }. }
false;public;0;18;;@Test public void testConsumeBatch() throws Exception {     MockEndpoint mock = getMockEndpoint("mock:result").     mock.expectedBodiesReceivedInAnyOrder("Hello World", "Bye World").     template.sendBodyAndHeader("file://target/data/file-batch/", "Hello World", Exchange.FILE_NAME, "hello.txt").     template.sendBodyAndHeader("file://target/data/file-batch/", "Bye World", Exchange.FILE_NAME, "bye.txt").     // test header keys     mock.message(0).exchangeProperty(Exchange.BATCH_SIZE).isEqualTo(2).     mock.message(0).exchangeProperty(Exchange.BATCH_INDEX).isEqualTo(0).     mock.message(1).exchangeProperty(Exchange.BATCH_INDEX).isEqualTo(1).     // start routes     context.getRouteController().startAllRoutes().     assertMockEndpointsSatisfied(). }
