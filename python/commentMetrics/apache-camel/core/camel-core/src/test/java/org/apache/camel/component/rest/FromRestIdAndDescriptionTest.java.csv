commented;modifiers;parameterAmount;loc;comment;code
false;public;0;19;;@Test public void testFromRestModel() throws Exception {     super.testFromRestModel().     RestDefinition rest = context.getRestDefinitions().get(0).     assertEquals("hello", rest.getId()).     assertEquals("Hello Service", rest.getDescriptionText()).     assertEquals("get-say", rest.getVerbs().get(0).getId()).     assertEquals("Says hello to you", rest.getVerbs().get(0).getDescriptionText()).     RestDefinition rest2 = context.getRestDefinitions().get(1).     assertEquals("bye", rest2.getId()).     assertEquals("Bye Service", rest2.getDescriptionText()).     assertEquals("en", rest2.getDescription().getLang()).     assertEquals("Says bye to you", rest2.getVerbs().get(0).getDescriptionText()).     assertEquals("Updates the bye message", rest2.getVerbs().get(1).getDescriptionText()). }
false;public;0;27;;@Override public void configure() throws Exception {     restConfiguration().host("localhost").     rest("/say/hello").id("hello").description("Hello Service").get().id("get-say").description("Says hello to you").to("direct:hello").     rest("/say/bye").description("bye", "Bye Service", "en").get().description("Says bye to you").consumes("application/json").param().type(RestParamType.header).description("header param description1").dataType("integer").allowableValues("1", "2", "3", "4").defaultValue("1").name("header_count").required(true).endParam().param().type(RestParamType.query).description("header param description2").dataType("string").allowableValues("a", "b", "c", "d").defaultValue("b").collectionFormat(CollectionFormat.multi).name("header_letter").required(false).endParam().responseMessage().code(300).message("test msg").responseModel(Integer.class).header("rate").description("Rate limit").dataType("integer").endHeader().endResponseMessage().responseMessage().code("error").message("does not work").endResponseMessage().to("direct:bye").post().description("Updates the bye message").to("mock:update").     from("direct:hello").transform().constant("Hello World").     from("direct:bye").transform().constant("Bye World"). }
false;protected;0;32;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             restConfiguration().host("localhost").             rest("/say/hello").id("hello").description("Hello Service").get().id("get-say").description("Says hello to you").to("direct:hello").             rest("/say/bye").description("bye", "Bye Service", "en").get().description("Says bye to you").consumes("application/json").param().type(RestParamType.header).description("header param description1").dataType("integer").allowableValues("1", "2", "3", "4").defaultValue("1").name("header_count").required(true).endParam().param().type(RestParamType.query).description("header param description2").dataType("string").allowableValues("a", "b", "c", "d").defaultValue("b").collectionFormat(CollectionFormat.multi).name("header_letter").required(false).endParam().responseMessage().code(300).message("test msg").responseModel(Integer.class).header("rate").description("Rate limit").dataType("integer").endHeader().endResponseMessage().responseMessage().code("error").message("does not work").endResponseMessage().to("direct:bye").post().description("Updates the bye message").to("mock:update").             from("direct:hello").transform().constant("Hello World").             from("direct:bye").transform().constant("Bye World").         }     }. }
