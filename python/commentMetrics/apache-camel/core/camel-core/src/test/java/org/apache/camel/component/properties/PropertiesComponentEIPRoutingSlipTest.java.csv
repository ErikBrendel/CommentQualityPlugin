commented;modifiers;parameterAmount;loc;comment;code
false;public;0;9;;@Test public void testRoutingSlip() throws Exception {     getMockEndpoint("mock:foo").expectedMessageCount(1).     getMockEndpoint("mock:bar").expectedMessageCount(1).     template.sendBodyAndHeader("direct:start", "Hello World", "cheese", "mock:foo##mock:bar").     assertMockEndpointsSatisfied(). }
false;public;0;5;;@Override public void configure() throws Exception {     from("direct:start").routingSlip(header("cheese"), "{{slipDelimiter}}"). }
false;protected;0;10;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").routingSlip(header("cheese"), "{{slipDelimiter}}").         }     }. }
false;protected;0;10;;@Override protected CamelContext createCamelContext() throws Exception {     CamelContext context = super.createCamelContext().     PropertiesComponent pc = new PropertiesComponent().     pc.setLocations(new String[] { "classpath:org/apache/camel/component/properties/myproperties.properties" }).     context.addComponent("properties", pc).     return context. }
