commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public Object getDummy() {     return dummy. }
false;public;1;3;;public void setDummy(Object dummy) {     this.dummy = dummy. }
false;public;9;27;;@Override public Consumer createConsumer(CamelContext camelContext, Processor processor, String verb, String basePath, String uriTemplate, String consumes, String produces, RestConfiguration configuration, Map<String, Object> parameters) throws Exception {     // just use a seda endpoint for testing purpose     String id.     if (uriTemplate != null) {         id = DefaultUuidGenerator.generateSanitizedId(basePath + uriTemplate).     } else {         id = DefaultUuidGenerator.generateSanitizedId(basePath).     }     // remove leading dash as we add that ourselves     if (id.startsWith("-")) {         id = id.substring(1).     }     if (configuration.getConsumerProperties() != null) {         String ref = (String) configuration.getConsumerProperties().get("dummy").         if (ref != null) {             dummy = CamelContextHelper.mandatoryLookup(camelContext, ref.substring(1)).         }     }     SedaEndpoint seda = camelContext.getEndpoint("seda:" + verb + "-" + id, SedaEndpoint.class).     // speedup pooling to also be able to shutdown faster     seda.setPollTimeout(10).     return seda.createConsumer(processor). }
false;public;5;14;;@Override public Consumer createApiConsumer(CamelContext camelContext, Processor processor, String contextPath, RestConfiguration configuration, Map<String, Object> parameters) throws Exception {     // just use a seda endpoint for testing purpose     String id = DefaultUuidGenerator.generateSanitizedId(contextPath).     // remove leading dash as we add that ourselves     if (id.startsWith("-")) {         id = id.substring(1).     }     SedaEndpoint seda = camelContext.getEndpoint("seda:api:" + "-" + id, SedaEndpoint.class).     // speedup pooling to also be able to shutdown faster     seda.setPollTimeout(10).     return seda.createConsumer(processor). }
