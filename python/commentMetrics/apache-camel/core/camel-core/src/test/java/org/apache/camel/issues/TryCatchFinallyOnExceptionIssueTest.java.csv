commented;modifiers;parameterAmount;loc;comment;code
false;public;0;12;;@Test public void testTryCatchFinallyOnExceptionIssue() throws Exception {     // doTry .. doCatch .. doFinally uses its own error handling so we wont get one here     getMockEndpoint("mock:error").expectedMessageCount(0).     getMockEndpoint("mock:finally").expectedMessageCount(1).     getMockEndpoint("mock:end").expectedMessageCount(0).     template.sendBody("seda:start", "Hello World").     assertMockEndpointsSatisfied(). }
false;public;0;16;;@Override public void configure() throws Exception {     from("seda:start").onException(Exception.class).handled(true).redeliveryDelay(0).maximumRedeliveries(2).to("mock:error").end().doTry().throwException(new IllegalArgumentException("Damn")).doFinally().to("mock:finally").end().to("mock:end"). }
false;protected;0;21;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("seda:start").onException(Exception.class).handled(true).redeliveryDelay(0).maximumRedeliveries(2).to("mock:error").end().doTry().throwException(new IllegalArgumentException("Damn")).doFinally().to("mock:finally").end().to("mock:end").         }     }. }
