commented;modifiers;parameterAmount;loc;comment;code
false;public;0;9;;@Test public void testMDC() throws Exception {     MockEndpoint mock = getMockEndpoint("mock:result").     mock.expectedBodiesReceived("Hello World").     template.sendBody("direct:a", "Hello World").     assertMockEndpointsSatisfied(). }
false;public;0;10;;@Test public void testMDCTwoMessages() throws Exception {     MockEndpoint mock = getMockEndpoint("mock:result").     mock.expectedBodiesReceived("Hello World", "Bye World").     template.sendBody("direct:a", "Hello World").     template.sendBody("direct:a", "Bye World").     assertMockEndpointsSatisfied(). }
false;public;1;7;;public void process(Exchange exchange) throws Exception {     assertEquals("route-a", MDC.get("camel.routeId")).     assertEquals(exchange.getExchangeId(), MDC.get("camel.exchangeId")).     assertEquals(exchange.getIn().getMessageId(), MDC.get("camel.messageId")).     MDC.put("custom.id", "1"). }
false;public;1;6;;public void process(Exchange exchange) throws Exception {     assertEquals("route-b", MDC.get("camel.routeId")).     assertEquals(exchange.getExchangeId(), MDC.get("camel.exchangeId")).     assertEquals(exchange.getIn().getMessageId(), MDC.get("camel.messageId")).     assertEquals("1", MDC.get("custom.id")). }
false;public;0;30;;@Override public void configure() throws Exception {     // enable MDC     context.setUseMDCLogging(true).     from("direct:a").routeId("route-a").process(new Processor() {          public void process(Exchange exchange) throws Exception {             assertEquals("route-a", MDC.get("camel.routeId")).             assertEquals(exchange.getExchangeId(), MDC.get("camel.exchangeId")).             assertEquals(exchange.getIn().getMessageId(), MDC.get("camel.messageId")).             MDC.put("custom.id", "1").         }     }).to("log:foo").to("direct:b").     from("direct:b").routeId("route-b").process(new Processor() {          public void process(Exchange exchange) throws Exception {             assertEquals("route-b", MDC.get("camel.routeId")).             assertEquals(exchange.getExchangeId(), MDC.get("camel.exchangeId")).             assertEquals(exchange.getIn().getMessageId(), MDC.get("camel.messageId")).             assertEquals("1", MDC.get("custom.id")).         }     }).to("log:bar").to("mock:result"). }
false;protected;0;35;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             // enable MDC             context.setUseMDCLogging(true).             from("direct:a").routeId("route-a").process(new Processor() {                  public void process(Exchange exchange) throws Exception {                     assertEquals("route-a", MDC.get("camel.routeId")).                     assertEquals(exchange.getExchangeId(), MDC.get("camel.exchangeId")).                     assertEquals(exchange.getIn().getMessageId(), MDC.get("camel.messageId")).                     MDC.put("custom.id", "1").                 }             }).to("log:foo").to("direct:b").             from("direct:b").routeId("route-b").process(new Processor() {                  public void process(Exchange exchange) throws Exception {                     assertEquals("route-b", MDC.get("camel.routeId")).                     assertEquals(exchange.getExchangeId(), MDC.get("camel.exchangeId")).                     assertEquals(exchange.getIn().getMessageId(), MDC.get("camel.messageId")).                     assertEquals("1", MDC.get("custom.id")).                 }             }).to("log:bar").to("mock:result").         }     }. }
