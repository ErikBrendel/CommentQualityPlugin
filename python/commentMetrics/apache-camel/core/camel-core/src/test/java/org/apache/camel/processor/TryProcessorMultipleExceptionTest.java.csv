commented;modifiers;parameterAmount;loc;comment;code
false;public;0;10;;@Test public void testIOException() throws Exception {     getMockEndpoint("mock:result").expectedMessageCount(0).     getMockEndpoint("mock:catch").expectedMessageCount(1).     getMockEndpoint("mock:finally").expectedMessageCount(1).     sendBody("direct:start", "Damn IO").     assertMockEndpointsSatisfied(). }
false;public;0;10;;@Test public void testIllegalStateException() throws Exception {     getMockEndpoint("mock:result").expectedMessageCount(0).     getMockEndpoint("mock:catch").expectedMessageCount(1).     getMockEndpoint("mock:finally").expectedMessageCount(1).     sendBody("direct:start", "Damn State").     assertMockEndpointsSatisfied(). }
false;public;0;10;;@Test public void testOk() throws Exception {     getMockEndpoint("mock:result").expectedMessageCount(1).     getMockEndpoint("mock:catch").expectedMessageCount(0).     getMockEndpoint("mock:finally").expectedMessageCount(1).     sendBody("direct:start", "Hello World").     assertMockEndpointsSatisfied(). }
false;public;0;14;;@SuppressWarnings("unchecked") public void configure() {     // START SNIPPET: e1     from("direct:start").doTry().process(new ProcessorFail()).to("mock:result").doCatch(IOException.class, IllegalStateException.class).to("mock:catch").doFinally().to("mock:finally").end(). // END SNIPPET: e1 }
false;protected;0;19;;@Override protected RouteBuilder createRouteBuilder() {     return new RouteBuilder() {          @SuppressWarnings("unchecked")         public void configure() {             // START SNIPPET: e1             from("direct:start").doTry().process(new ProcessorFail()).to("mock:result").doCatch(IOException.class, IllegalStateException.class).to("mock:catch").doFinally().to("mock:finally").end().         // END SNIPPET: e1         }     }. }
false;public;1;8;;public void process(Exchange exchange) throws Exception {     String body = exchange.getIn().getBody(String.class).     if ("Damn IO".equals(body)) {         throw new IOException("Damn IO").     } else if ("Damn State".equals(body)) {         throw new IllegalStateException("Damn State").     } }
