commented;modifiers;parameterAmount;loc;comment;code
false;public;0;11;;@Test public void testBeanToFile() throws Exception {     MockEndpoint mock = getMockEndpoint("mock:result").     mock.expectedMessageCount(1).     mock.expectedFileExists("target/data/BeanToFileTest.txt", "Bye World").     template.sendBody("direct:in", "World").     assertMockEndpointsSatisfied(). }
false;protected;0;5;;protected Context createJndiContext() throws Exception {     JndiContext answer = new JndiContext().     answer.bind("myBean", new MyBean()).     return answer. }
false;public;0;6;;public void configure() throws Exception {     from("direct:in").to("bean:myBean").setHeader(Exchange.FILE_NAME, constant("BeanToFileTest.txt")).to("file://target/data/?fileExist=Override", "mock:result"). }
false;protected;0;10;;protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          public void configure() throws Exception {             from("direct:in").to("bean:myBean").setHeader(Exchange.FILE_NAME, constant("BeanToFileTest.txt")).to("file://target/data/?fileExist=Override", "mock:result").         }     }. }
false;public;1;3;;public String doSomething(String input) {     return "Bye " + input. }
