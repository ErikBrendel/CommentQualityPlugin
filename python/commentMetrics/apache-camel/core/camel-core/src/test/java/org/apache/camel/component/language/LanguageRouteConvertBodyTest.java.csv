commented;modifiers;parameterAmount;loc;comment;code
false;public;0;8;;@Test public void testLanguage() throws Exception {     getMockEndpoint("mock:result").expectedBodiesReceived("123.Camel in Action").     template.sendBody("direct:start", new MyOrder(123, "Camel in Action")).     assertMockEndpointsSatisfied(). }
false;public;0;7;;@Override public void configure() throws Exception {     // START SNIPPET: e1     String script = URLEncoder.encode("${mandatoryBodyAs(String)}", "UTF-8").     from("direct:start").to("language:simple:" + script).to("mock:result"). // END SNIPPET: e1 }
false;protected;0;12;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             // START SNIPPET: e1             String script = URLEncoder.encode("${mandatoryBodyAs(String)}", "UTF-8").             from("direct:start").to("language:simple:" + script).to("mock:result").         // END SNIPPET: e1         }     }. }
false;public;0;4;;@Override public String toString() {     return id + "." + name. }
