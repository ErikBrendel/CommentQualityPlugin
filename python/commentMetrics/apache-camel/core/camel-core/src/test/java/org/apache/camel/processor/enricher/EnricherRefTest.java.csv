commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;7;;@Override protected JndiRegistry createRegistry() throws Exception {     JndiRegistry jndi = super.createRegistry().     jndi.bind("cool", cool).     jndi.bind("agg", new UseLatestAggregationStrategy()).     return jndi. }
false;public;1;3;;public void process(Exchange exchange) throws Exception {     exchange.getOut().setBody("Bye World"). }
false;public;0;14;;@Test public void testEnrichRef() throws Exception {     cool.whenAnyExchangeReceived(new Processor() {          public void process(Exchange exchange) throws Exception {             exchange.getOut().setBody("Bye World").         }     }).     cool.expectedBodiesReceived("Hello World").     String out = template.requestBody("direct:start", "Hello World", String.class).     assertEquals("Bye World", out).     cool.assertIsSatisfied(). }
false;public;0;6;;@Override public void configure() throws Exception {     cool.setCamelContext(context).     from("direct:start").enrich().simple("ref:cool").aggregationStrategyRef("agg"). }
false;protected;0;11;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             cool.setCamelContext(context).             from("direct:start").enrich().simple("ref:cool").aggregationStrategyRef("agg").         }     }. }
