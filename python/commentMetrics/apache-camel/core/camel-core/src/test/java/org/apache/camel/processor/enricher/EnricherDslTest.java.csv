commented;modifiers;parameterAmount;loc;comment;code
false;public;0;11;;@Test public void testEnrich() throws Exception {     MockEndpoint mock = getMockEndpoint("mock:enriched").     mock.expectedBodiesReceived("res-1", "res-2", "res-3").     template.sendBody("direct:start", 1).     template.sendBody("direct:start", 2).     template.sendBody("direct:start", 3).     mock.assertIsSatisfied(). }
false;public;0;12;;@Override public void configure() throws Exception {     from("direct:start").enrichWith("direct:resource").body(Integer.class, String.class, (o, n) -> n + o).to("mock:enriched").     // set an empty message     from("direct:resource").transform().body(b -> "res-"). }
false;protected;0;17;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").enrichWith("direct:resource").body(Integer.class, String.class, (o, n) -> n + o).to("mock:enriched").             // set an empty message             from("direct:resource").transform().body(b -> "res-").         }     }. }
