commented;modifiers;parameterAmount;loc;comment;code
false;public;0;20;;@Test public void testTimerRestart() throws Exception {     MockEndpoint mock = getMockEndpoint("mock:result").     mock.expectedMinimumMessageCount(1).     assertMockEndpointsSatisfied().     mock.reset().     mock.expectedMessageCount(0).     context.stop().     mock.reset().     context.start().     mock.expectedMinimumMessageCount(1).     assertMockEndpointsSatisfied(). }
false;public;0;3;;public void configure() {     from("timer://foo?fixedRate=true&delay=0&period=10").to("mock:result"). }
false;protected;0;8;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          public void configure() {             from("timer://foo?fixedRate=true&delay=0&period=10").to("mock:result").         }     }. }
