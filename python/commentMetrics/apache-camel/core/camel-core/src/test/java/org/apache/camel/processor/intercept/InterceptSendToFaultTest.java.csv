commented;modifiers;parameterAmount;loc;comment;code
false;public;0;10;;@Test public void testInterceptSendToFault() throws Exception {     getMockEndpoint("mock:foo").expectedMessageCount(0).     getMockEndpoint("mock:result").expectedMessageCount(0).     String out = template.requestBody("direct:start", "Hello World", String.class).     assertEquals("Damn", out).     assertMockEndpointsSatisfied(). }
false;public;0;6;;@Override public void configure() throws Exception {     interceptSendToEndpoint("mock:foo").setFaultBody(constant("Damn")).     from("direct:start").to("mock:foo").transform(constant("Bye World")).to("mock:result"). }
false;protected;0;11;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             interceptSendToEndpoint("mock:foo").setFaultBody(constant("Damn")).             from("direct:start").to("mock:foo").transform(constant("Bye World")).to("mock:result").         }     }. }
