commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;7;;@Override protected JndiRegistry createRegistry() throws Exception {     JndiRegistry jndi = super.createRegistry().     jndi.bind("dummy-rest", new DummyRestConsumerFactory()).     jndi.bind("dummy-rest-api", new DummyRestProcessorFactory()).     return jndi. }
false;public;0;13;;@Test public void testFromRestModel() throws Exception {     assertEquals(1, context.getRestDefinitions().size()).     RestDefinition rest = context.getRestDefinitions().get(0).     assertNotNull(rest).     assertEquals("/say/hello", rest.getPath()).     assertEquals(1, rest.getVerbs().size()).     ToDefinition to = assertIsInstanceOf(ToDefinition.class, rest.getVerbs().get(0).getTo()).     assertEquals("log:hello", to.getUri()).     // should be 2 routes     assertEquals(2, context.getRoutes().size()). }
false;public;0;7;;@Override public void configure() throws Exception {     restConfiguration().host("localhost").component("dummy-rest").apiContextPath("/api").     rest("/say/hello").get().to("log:hello"). }
false;protected;0;12;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             restConfiguration().host("localhost").component("dummy-rest").apiContextPath("/api").             rest("/say/hello").get().to("log:hello").         }     }. }
