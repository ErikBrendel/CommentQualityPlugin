commented;modifiers;parameterAmount;loc;comment;code
false;public;0;10;;@Test public void testChoiceWithHeaderAndPropertiesSelectCamel() throws Exception {     MockEndpoint mock = getMockEndpoint("mock:camel").     mock.expectedBodiesReceived("<name>King</name>").     mock.expectedHeaderReceived("type", "Camel").     template.sendBodyAndHeader("direct:in", "<name>King</name>", "type", "Camel").     mock.assertIsSatisfied(). }
false;public;0;9;;@Test public void testChoiceWithNoHeaderAndPropertiesSelectDonkey() throws Exception {     MockEndpoint mock = getMockEndpoint("mock:donkey").     mock.expectedBodiesReceived("<name>Donkey Kong</name>").     template.sendBody("direct:in", "<name>Donkey Kong</name>").     mock.assertIsSatisfied(). }
false;public;0;9;;@Test public void testChoiceWithNoHeaderAndPropertiesSelectOther() throws Exception {     MockEndpoint mock = getMockEndpoint("mock:other").     mock.expectedBodiesReceived("<name>Other</name>").     template.sendBody("direct:in", "<name>Other</name>").     mock.assertIsSatisfied(). }
false;public;0;26;;public void configure() throws Exception {     // START SNIPPET: ex     // setup properties component     PropertiesComponent properties = new PropertiesComponent().     properties.setLocation("classpath:org/apache/camel/builder/xml/myprop.properties").     context.addComponent("properties", properties).     // myprop.properties contains the following properties     // foo=Camel     // bar=Kong     from("direct:in").choice().when().xpath("$type = function:properties('foo')").to("mock:camel").when().xpath("//name = function:simple('Donkey ${properties:bar}')").to("mock:donkey").otherwise().to("mock:other").end(). // END SNIPPET: ex }
false;protected;0;30;;protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          public void configure() throws Exception {             // START SNIPPET: ex             // setup properties component             PropertiesComponent properties = new PropertiesComponent().             properties.setLocation("classpath:org/apache/camel/builder/xml/myprop.properties").             context.addComponent("properties", properties).             // myprop.properties contains the following properties             // foo=Camel             // bar=Kong             from("direct:in").choice().when().xpath("$type = function:properties('foo')").to("mock:camel").when().xpath("//name = function:simple('Donkey ${properties:bar}')").to("mock:donkey").otherwise().to("mock:other").end().         // END SNIPPET: ex         }     }. }
