commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public boolean isUseRouteBuilder() {     return false. }
false;public;0;6;;@Override public void configure() throws Exception {     from("direct:start").loadBalance().failover().roundRobin().to("mock:a", "mock:b"). }
false;public;0;16;;@Test public void testMisconfiguration() throws Exception {     try {         context.addRoutes(new RouteBuilder() {              @Override             public void configure() throws Exception {                 from("direct:start").loadBalance().failover().roundRobin().to("mock:a", "mock:b").             }         }).         fail("Should have thrown an exception").     } catch (IllegalArgumentException e) {         assertEquals("Loadbalancer already configured to: FailoverLoadBalancer. Cannot set it to: RoundRobinLoadBalancer", e.getMessage()).     } }
false;public;0;6;;@Override public void configure() throws Exception {     from("direct:start").loadBalance().failover().random().to("mock:a", "mock:b"). }
false;public;0;16;;@Test public void testMisconfiguration2() throws Exception {     try {         context.addRoutes(new RouteBuilder() {              @Override             public void configure() throws Exception {                 from("direct:start").loadBalance().failover().random().to("mock:a", "mock:b").             }         }).         fail("Should have thrown an exception").     } catch (IllegalArgumentException e) {         assertEquals("Loadbalancer already configured to: FailoverLoadBalancer. Cannot set it to: RandomLoadBalancer", e.getMessage()).     } }
false;public;0;6;;@Override public void configure() throws Exception {     from("direct:start").loadBalance().random().failover().to("mock:a", "mock:b"). }
false;public;0;16;;@Test public void testMisconfiguration3() throws Exception {     try {         context.addRoutes(new RouteBuilder() {              @Override             public void configure() throws Exception {                 from("direct:start").loadBalance().random().failover().to("mock:a", "mock:b").             }         }).         fail("Should have thrown an exception").     } catch (IllegalArgumentException e) {         assertEquals("Loadbalancer already configured to: RandomLoadBalancer. Cannot set it to: FailoverLoadBalancer", e.getMessage()).     } }
