commented;modifiers;parameterAmount;loc;comment;code
false;public;0;9;;@Test public void testEnrichInOnly() throws Exception {     MockEndpoint mock = getMockEndpoint("mock:result").     mock.expectedBodiesReceived("Bye World").     template.sendBody("direct:start", "World").     assertMockEndpointsSatisfied(). }
false;public;0;10;;@Test public void testEnrichInOut() throws Exception {     MockEndpoint mock = getMockEndpoint("mock:result").     mock.expectedBodiesReceived("Bye World").     String out = template.requestBody("direct:start", "World", String.class).     assertEquals("Bye World", out).     assertMockEndpointsSatisfied(). }
false;public;0;8;;@Override public void configure() throws Exception {     from("direct:start").enrich("direct:foo").to("mock:result").     from("direct:foo").transform(body().prepend("Bye ")). }
false;protected;0;13;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").enrich("direct:foo").to("mock:result").             from("direct:foo").transform(body().prepend("Bye ")).         }     }. }
