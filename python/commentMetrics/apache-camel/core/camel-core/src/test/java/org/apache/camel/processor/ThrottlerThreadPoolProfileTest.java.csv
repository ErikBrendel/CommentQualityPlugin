commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;protected boolean canTest() {     // skip test on windows as it does not run well there     return !isPlatform("windows"). }
false;public;0;14;;@Test public void testThreadPool() throws Exception {     if (!canTest()) {         return.     }     getMockEndpoint("mock:result").expectedMessageCount(2).     template.sendBody("direct:start", "Hello").     template.sendBody("direct:start", "World").     assertMockEndpointsSatisfied(). }
false;public;0;9;;public void configure() {     // create thread pool profile and register to camel     ThreadPoolProfile profile = new ThreadPoolProfileBuilder("myPool").poolSize(2).maxPoolSize(5).maxQueueSize(10).build().     context.getExecutorServiceManager().registerThreadPoolProfile(profile).     from("direct:start").throttle(constant(2)).executorServiceRef("myPool").to("mock:result"). }
false;protected;0;13;;protected RouteBuilder createRouteBuilder() {     return new RouteBuilder() {          public void configure() {             // create thread pool profile and register to camel             ThreadPoolProfile profile = new ThreadPoolProfileBuilder("myPool").poolSize(2).maxPoolSize(5).maxQueueSize(10).build().             context.getExecutorServiceManager().registerThreadPoolProfile(profile).             from("direct:start").throttle(constant(2)).executorServiceRef("myPool").to("mock:result").         }     }. }
