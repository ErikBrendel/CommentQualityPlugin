commented;modifiers;parameterAmount;loc;comment;code
false;public;0;12;;@Test public void testHeaders() throws Exception {     MockEndpoint resultEndpoint = getMockEndpoint("mock:result").     // this one does NOT add by only SET so what happens is that header1 value1 is the only tested     resultEndpoint.expectedHeaderReceived("header2", "value2").     resultEndpoint.expectedHeaderReceived("header1", "value1").     template.sendBody("direct:test", null).     resultEndpoint.assertIsNotSatisfied(). }
false;public;0;10;;@Test public void testHeadersAdded() throws Exception {     MockEndpoint resultEndpoint = getMockEndpoint("mock:result").     resultEndpoint.message(0).header("header1").isNull().     resultEndpoint.message(0).header("header2").isEqualTo("value2").     template.sendBody("direct:test", null).     resultEndpoint.assertIsSatisfied(). }
false;public;0;6;;@Override public void configure() {     from("direct:test").setHeader("header2", constant("value2")).to("mock:result"). }
false;protected;0;11;;@Override protected RouteBuilder createRouteBuilder() {     return new RouteBuilder() {          @Override         public void configure() {             from("direct:test").setHeader("header2", constant("value2")).to("mock:result").         }     }. }
