commented;modifiers;parameterAmount;loc;comment;code
true;public;0;5;// START SNIPPET: e1 ;// START SNIPPET: e1 @Test public void testSendingSomeMessages() throws Exception {     template.sendBodyAndHeader("direct:start", "Hello London", "to", "James").     template.sendBodyAndHeader("direct:start", "This is Copenhagen calling", "from", "Claus"). }
false;public;1;3;;public void process(Exchange exchange) throws Exception { // do nothing }
false;public;0;4;;@Override public String toString() {     return "MyProcessor". }
false;public;0;20;;public void configure() throws Exception {     // enable tracing     getContext().setTracing(true).     from("direct:start").routeId("foo").process(new Processor() {          public void process(Exchange exchange) throws Exception {         // do nothing         }          @Override         public String toString() {             return "MyProcessor".         }     }).to("mock:foo").to("direct:bar").     from("direct:bar").routeId("bar").to("mock:bar"). }
false;protected;0;24;;protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          public void configure() throws Exception {             // enable tracing             getContext().setTracing(true).             from("direct:start").routeId("foo").process(new Processor() {                  public void process(Exchange exchange) throws Exception {                 // do nothing                 }                  @Override                 public String toString() {                     return "MyProcessor".                 }             }).to("mock:foo").to("direct:bar").             from("direct:bar").routeId("bar").to("mock:bar").         }     }. }
