commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;6;;@Override protected JndiRegistry createRegistry() throws Exception {     JndiRegistry jndi = super.createRegistry().     jndi.bind("dummy-rest", new DummyRestConsumerFactory()).     return jndi. }
false;public;1;4;;@Override public void process(Exchange exchange) throws Exception { }
false;public;0;13;;@Test public void testFromRestModelContentType() throws Exception {     Exchange out = template.request("seda:get-say-hello", new Processor() {          @Override         public void process(Exchange exchange) throws Exception {         }     }).     assertNotNull(out).     assertEquals("{ \"name\" : \"Donald\" }", out.getOut().getBody()).     assertEquals("application/json", out.getOut().getHeader(Exchange.CONTENT_TYPE)). }
false;public;0;10;;@Override public void configure() throws Exception {     restConfiguration().host("localhost").     rest("/say/hello").produces("application/json").get().to("direct:hello").     from("direct:hello").setBody(constant("{ \"name\" : \"Donald\" }")). }
false;protected;0;15;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             restConfiguration().host("localhost").             rest("/say/hello").produces("application/json").get().to("direct:hello").             from("direct:hello").setBody(constant("{ \"name\" : \"Donald\" }")).         }     }. }
