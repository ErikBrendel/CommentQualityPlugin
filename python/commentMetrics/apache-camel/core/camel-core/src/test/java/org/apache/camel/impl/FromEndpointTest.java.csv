commented;modifiers;parameterAmount;loc;comment;code
false;public;0;14;;@Test public void testReceivedMessageHasFromEndpointSet() throws Exception {     results = getMockEndpoint("mock:results").     results.expectedBodiesReceived(expectedBody).     template.sendBody("direct:start", expectedBody).     results.assertIsSatisfied().     List<Exchange> list = results.getReceivedExchanges().     Exchange exchange = list.get(0).     Endpoint fromEndpoint = exchange.getFromEndpoint().     assertNotNull("exchange.fromEndpoint() is null!", fromEndpoint).     assertEquals("fromEndpoint URI", "direct://start", fromEndpoint.getEndpointUri()). }
false;public;0;4;;@Override public void configure() throws Exception {     from("direct:start").to("mock:results"). }
false;protected;0;10;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").to("mock:results").         }     }. }
