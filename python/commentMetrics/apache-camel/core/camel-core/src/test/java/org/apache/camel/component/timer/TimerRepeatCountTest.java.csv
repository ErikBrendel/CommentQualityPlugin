commented;modifiers;parameterAmount;loc;comment;code
false;public;0;15;;@Test public void testRepeatCount() throws Exception {     MockEndpoint mock = getMockEndpoint("mock:result").     mock.expectedMessageCount(3).     mock.setAssertPeriod(100).     mock.message(0).header(Exchange.TIMER_COUNTER).isEqualTo(1).     mock.message(1).header(Exchange.TIMER_COUNTER).isEqualTo(2).     mock.message(2).header(Exchange.TIMER_COUNTER).isEqualTo(3).     // we should only get 3 messages as we have a repeat count limit at 3     context.getRouteController().startAllRoutes().     assertMockEndpointsSatisfied(). }
false;public;0;4;;public void configure() throws Exception {     from("timer://hello?delay=0&repeatCount=3&period=10").noAutoStartup().to("mock:result"). }
false;protected;0;9;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          public void configure() throws Exception {             from("timer://hello?delay=0&repeatCount=3&period=10").noAutoStartup().to("mock:result").         }     }. }
