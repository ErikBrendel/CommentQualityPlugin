commented;modifiers;parameterAmount;loc;comment;code
false;public;0;10;;@Test public void testBeanReturnCallable() throws Exception {     MockEndpoint mock = getMockEndpoint("mock:result").     mock.expectedBodiesReceived("I was called").     mock.expectedHeaderReceived("foo", "bar").     template.requestBody("direct:in", "Start").     mock.assertIsSatisfied(). }
false;protected;0;5;;protected Context createJndiContext() throws Exception {     JndiContext answer = new JndiContext().     answer.bind("myBean", new MyBean()).     return answer. }
false;public;0;6;;public void configure() throws Exception {     from("direct:in").setHeader("foo", constant("bar")).to("bean:myBean").to("mock:result"). }
false;protected;0;10;;protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          public void configure() throws Exception {             from("direct:in").setHeader("foo", constant("bar")).to("bean:myBean").to("mock:result").         }     }. }
false;public;0;4;;@Override public Object call() throws Exception {     return "I was called". }
false;public;0;8;;public Callable doSomething() {     return new Callable() {          @Override         public Object call() throws Exception {             return "I was called".         }     }. }
