commented;modifiers;parameterAmount;loc;comment;code
false;public;0;9;;@Test public void testGenerateUUID() {     DefaultUuidGenerator uuidGenerator = new DefaultUuidGenerator().     String firstUUID = uuidGenerator.generateUuid().     String secondUUID = uuidGenerator.generateUuid().     assertNotSame(firstUUID, secondUUID). }
false;public;0;13;;@Test public void testPerformance() {     DefaultUuidGenerator uuidGenerator = new DefaultUuidGenerator().     StopWatch watch = new StopWatch().     LOG.info("First id: " + uuidGenerator.generateUuid()).     for (int i = 0. i < 500000. i++) {         uuidGenerator.generateUuid().     }     LOG.info("Last id:  " + uuidGenerator.generateUuid()).     LOG.info("Took " + TimeUtils.printDuration(watch.taken())). }
false;public;0;6;;@Test public void testSanitizeHostName() throws Exception {     assertEquals("somehost.lan", DefaultUuidGenerator.sanitizeHostName("somehost.lan")).     // include a UTF-8 char in the text \u0E08 is a Thai elephant     assertEquals("otherhost.lan", DefaultUuidGenerator.sanitizeHostName("other\u0E08host.lan")). }
