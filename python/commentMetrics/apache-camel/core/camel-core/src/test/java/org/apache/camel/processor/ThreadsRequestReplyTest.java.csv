commented;modifiers;parameterAmount;loc;comment;code
false;public;0;11;;@Test public void testThreadsInOut() throws Exception {     getMockEndpoint("mock:result").expectedMessageCount(1).     String reply = template.requestBody("direct:start", "Hello World", String.class).     assertEquals("Bye World", reply).     assertMockEndpointsSatisfied().     assertFalse("Should use different threads", beforeThreadName.equalsIgnoreCase(afterThreadName)). }
false;public;1;3;;public void process(Exchange exchange) throws Exception {     afterThreadName = Thread.currentThread().getName(). }
false;public;1;3;;public void process(Exchange exchange) throws Exception {     beforeThreadName = Thread.currentThread().getName(). }
false;public;0;21;;@Override public void configure() throws Exception {     context.setTracing(true).     from("direct:start").to("log:before").process(new Processor() {          public void process(Exchange exchange) throws Exception {             beforeThreadName = Thread.currentThread().getName().         }     }).threads(5).process(new Processor() {          public void process(Exchange exchange) throws Exception {             afterThreadName = Thread.currentThread().getName().         }     }).to("log:after").to("mock:result").transform(constant("Bye World")). }
false;protected;0;26;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             context.setTracing(true).             from("direct:start").to("log:before").process(new Processor() {                  public void process(Exchange exchange) throws Exception {                     beforeThreadName = Thread.currentThread().getName().                 }             }).threads(5).process(new Processor() {                  public void process(Exchange exchange) throws Exception {                     afterThreadName = Thread.currentThread().getName().                 }             }).to("log:after").to("mock:result").transform(constant("Bye World")).         }     }. }
