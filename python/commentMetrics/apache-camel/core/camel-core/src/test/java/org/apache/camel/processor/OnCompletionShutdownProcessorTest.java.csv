commented;modifiers;parameterAmount;loc;comment;code
false;public;0;15;;@Test public void testSynchronizeComplete() throws Exception {     assertEquals("Started", processor.getStatus().name()).     MockEndpoint mock = getMockEndpoint("mock:result").     mock.expectedBodiesReceived("Hello World").     template.sendBody("direct:start", "Hello World").     assertMockEndpointsSatisfied().     context.stop().     assertEquals("Stopped", processor.getStatus().name()). }
false;public;0;7;;@Override public void configure() throws Exception {     onCompletion().process(processor).     from("direct:start").to("mock:result"). }
false;protected;0;12;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             onCompletion().process(processor).             from("direct:start").to("mock:result").         }     }. }
false;public;1;3;;public void process(Exchange exchange) throws Exception {     exchange.getIn().setBody("Bye World"). }
false;protected;0;3;;protected void doStart() throws Exception { // noop }
false;protected;0;3;;protected void doStop() throws Exception { // noop }
