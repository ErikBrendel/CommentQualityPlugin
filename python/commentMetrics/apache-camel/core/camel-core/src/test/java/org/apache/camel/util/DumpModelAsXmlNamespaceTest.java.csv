commented;modifiers;parameterAmount;loc;comment;code
false;public;0;17;;@Test public void testDumpModelAsXml() throws Exception {     String xml = ModelHelper.dumpModelAsXml(context, context.getRouteDefinition("myRoute")).     assertNotNull(xml).     Document dom = context.getTypeConverter().convertTo(Document.class, xml).     Element rootNode = dom.getDocumentElement().     assertNotNull(rootNode).     String attributeFoo = rootNode.getAttribute("xmlns:foo").     assertNotNull(attributeFoo).     assertEquals(URL_FOO, attributeFoo).     String attributeBar = rootNode.getAttribute("xmlns:bar").     assertNotNull(attributeBar).     assertEquals(URL_BAR, attributeBar). }
false;public;0;7;;@Override public void configure() throws Exception {     from("direct:start").routeId("myRoute").choice().when(xpath("/foo:customer").namespace("foo", URL_FOO)).to("mock:foo").when(xpath("/bar:customer").namespace("bar", URL_BAR)).to("mock:bar"). }
false;protected;0;12;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").routeId("myRoute").choice().when(xpath("/foo:customer").namespace("foo", URL_FOO)).to("mock:foo").when(xpath("/bar:customer").namespace("bar", URL_BAR)).to("mock:bar").         }     }. }
