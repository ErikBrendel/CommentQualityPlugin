commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;6;;@Override protected CamelContext createCamelContext() throws Exception {     DefaultCamelContext context = new DefaultCamelContext().     context.getManagementStrategy().addEventNotifier(notifier).     return context. }
false;public;0;21;;@Test public void testExchangeSent() throws Exception {     assertEquals(0, notifier.getEvents().size()).     getMockEndpoint("mock:result").expectedMessageCount(1).     getMockEndpoint("mock:bar").expectedMessageCount(1).     template.sendBody("direct:start", "Hello World").     assertMockEndpointsSatisfied().     assertEquals(4, notifier.getEvents().size()).     ExchangeSentEvent e = (ExchangeSentEvent) notifier.getEvents().get(0).     assertEquals("mock://bar", e.getEndpoint().getEndpointUri()).     e = (ExchangeSentEvent) notifier.getEvents().get(1).     assertEquals("direct://bar", e.getEndpoint().getEndpointUri()).     e = (ExchangeSentEvent) notifier.getEvents().get(2).     assertEquals("mock://result", e.getEndpoint().getEndpointUri()).     e = (ExchangeSentEvent) notifier.getEvents().get(3).     assertEquals("direct://start", e.getEndpoint().getEndpointUri()). }
false;public;0;6;;@Override public void configure() throws Exception {     from("direct:start").to("direct:bar").to("mock:result").     from("direct:bar").to("mock:bar"). }
false;protected;0;11;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").to("direct:bar").to("mock:result").             from("direct:bar").to("mock:bar").         }     }. }
