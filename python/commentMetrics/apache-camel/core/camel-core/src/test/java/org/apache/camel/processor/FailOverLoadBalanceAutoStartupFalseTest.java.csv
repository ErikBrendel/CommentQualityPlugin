commented;modifiers;parameterAmount;loc;comment;code
false;public;0;12;;@Test public void testFailover() throws Exception {     getMockEndpoint("mock:x").expectedMessageCount(1).     getMockEndpoint("mock:y").expectedMessageCount(1).     getMockEndpoint("mock:z").expectedMessageCount(1).     context.getRouteController().startRoute("foo").     template.sendBody("direct:start", "Hello World").     assertMockEndpointsSatisfied(). }
false;public;0;9;;public void configure() {     from("direct:start").routeId("foo").noAutoStartup().loadBalance().failover(3, true, true).to("direct:x", "direct:y", "direct:z").     from("direct:x").to("mock:x").throwException(new IllegalArgumentException("Forced")).     from("direct:y").to("mock:y").throwException(new IllegalArgumentException("Also Forced")).     from("direct:z").to("mock:z"). }
false;protected;0;13;;protected RouteBuilder createRouteBuilder() {     return new RouteBuilder() {          public void configure() {             from("direct:start").routeId("foo").noAutoStartup().loadBalance().failover(3, true, true).to("direct:x", "direct:y", "direct:z").             from("direct:x").to("mock:x").throwException(new IllegalArgumentException("Forced")).             from("direct:y").to("mock:y").throwException(new IllegalArgumentException("Also Forced")).             from("direct:z").to("mock:z").         }     }. }
