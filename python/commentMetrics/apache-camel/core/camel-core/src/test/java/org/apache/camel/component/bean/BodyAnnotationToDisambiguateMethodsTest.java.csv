commented;modifiers;parameterAmount;loc;comment;code
false;public;0;8;;@Test public void testSendMessage() throws Exception {     String expectedBody = "Wobble".     template.sendBodyAndHeader("direct:in", expectedBody, "foo", "bar").     assertEquals("bean body: " + myBean, expectedBody, myBean.body). }
false;protected;0;6;;@Override protected Context createJndiContext() throws Exception {     JndiContext answer = new JndiContext().     answer.bind("myBean", myBean).     return answer. }
false;public;0;3;;public void configure() {     from("direct:in").bean("myBean"). }
false;protected;0;7;;protected RouteBuilder createRouteBuilder() {     return new RouteBuilder() {          public void configure() {             from("direct:in").bean("myBean").         }     }. }
false;public;1;3;;public void bar(String body) {     fail("bar() called with: " + body). }
false;public;1;4;;public void foo(@Body String body) {     this.body = body.     LOG.info("foo() method called on " + this). }
false;public;1;3;;public void wrongMethod(String body) {     fail("wrongMethod() called with: " + body). }
