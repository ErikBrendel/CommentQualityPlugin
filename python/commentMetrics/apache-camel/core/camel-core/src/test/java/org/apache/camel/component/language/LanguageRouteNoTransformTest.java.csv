commented;modifiers;parameterAmount;loc;comment;code
false;public;0;8;;@Test public void testLanguage() throws Exception {     getMockEndpoint("mock:result").expectedBodiesReceived("World").     template.sendBody("direct:start", "World").     assertMockEndpointsSatisfied(). }
false;public;0;7;;@Override public void configure() throws Exception {     String script = URLEncoder.encode("Hello ${body}", "UTF-8").     from("direct:start").to("language:simple:" + script + "?transform=false").to("mock:result"). }
false;protected;0;12;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             String script = URLEncoder.encode("Hello ${body}", "UTF-8").             from("direct:start").to("language:simple:" + script + "?transform=false").to("mock:result").         }     }. }
