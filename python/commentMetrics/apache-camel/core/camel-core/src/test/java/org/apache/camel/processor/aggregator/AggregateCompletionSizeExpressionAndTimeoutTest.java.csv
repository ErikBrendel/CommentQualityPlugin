commented;modifiers;parameterAmount;loc;comment;code
false;public;0;9;;@Test public void testAggregateExpressionSize() throws Exception {     MockEndpoint result = getMockEndpoint("mock:result").     result.expectedBodiesReceived("A+B", "C+D", "E").     template.sendBody("direct:start", "A,B,C,D,E").     assertMockEndpointsSatisfied(). }
false;public;0;8;;@Override public void configure() throws Exception {     from("direct:start").split(body().tokenize(",")).aggregate(constant(true), new BodyInAggregatingStrategy()).completionSize(constant(2)).completionTimeout(1000).to("log:result", "mock:result"). }
false;protected;0;13;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").split(body().tokenize(",")).aggregate(constant(true), new BodyInAggregatingStrategy()).completionSize(constant(2)).completionTimeout(1000).to("log:result", "mock:result").         }     }. }
