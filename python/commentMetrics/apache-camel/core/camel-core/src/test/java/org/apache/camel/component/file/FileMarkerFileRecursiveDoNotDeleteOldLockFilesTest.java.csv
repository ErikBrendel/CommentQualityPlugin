commented;modifiers;parameterAmount;loc;comment;code
false;public;0;6;;@Override @Before public void setUp() throws Exception {     deleteDirectory("target/data/oldlock").     super.setUp(). }
false;public;0;17;;@Test public void testDeleteOldLockOnStartup() throws Exception {     MockEndpoint mock = getMockEndpoint("mock:result").     mock.expectedBodiesReceived("New World").     template.sendBodyAndHeader("file:target/data/oldlock", "locked", Exchange.FILE_NAME, "hello.txt" + FileComponent.DEFAULT_LOCK_FILE_POSTFIX).     template.sendBodyAndHeader("file:target/data/oldlock", "Hello World", Exchange.FILE_NAME, "hello.txt").     template.sendBodyAndHeader("file:target/data/oldlock/foo", "locked", Exchange.FILE_NAME, "gooday.txt" + FileComponent.DEFAULT_LOCK_FILE_POSTFIX).     template.sendBodyAndHeader("file:target/data/oldlock/foo", "Goodday World", Exchange.FILE_NAME, "gooday.txt").     // and a new file that has no lock     template.sendBodyAndHeader("file:target/data/oldlock", "New World", Exchange.FILE_NAME, "new.txt").     // start the route     context.getRouteController().startRoute("foo").     assertMockEndpointsSatisfied(). }
false;public;0;5;;@Override public void configure() throws Exception {     from("file:target/data/oldlock?initialDelay=0&delay=10&readLock=markerFile&readLockDeleteOrphanLockFiles=false&recursive=true").routeId("foo").noAutoStartup().convertBodyTo(String.class).to("log:result", "mock:result"). }
false;protected;0;10;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("file:target/data/oldlock?initialDelay=0&delay=10&readLock=markerFile&readLockDeleteOrphanLockFiles=false&recursive=true").routeId("foo").noAutoStartup().convertBodyTo(String.class).to("log:result", "mock:result").         }     }. }
