commented;modifiers;parameterAmount;loc;comment;code
false;public;0;10;;@Test public void testIntercept() throws Exception {     getMockEndpoint("mock:intercepted").expectedMessageCount(1).     getMockEndpoint("mock:first").expectedMessageCount(1).     getMockEndpoint("mock:result").expectedMessageCount(1).     template.sendBody("direct:start", "Hello World").     assertMockEndpointsSatisfied(). }
false;public;0;10;;public void configure() throws Exception {     interceptFrom("direct*").to("mock:intercepted").     Endpoint direct = context.getEndpoint("direct:start").     Endpoint seda = context.getEndpoint("seda:bar").     from(direct).to("mock:first").to(seda).     from(seda).to("mock:result"). }
false;protected;0;14;;protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          public void configure() throws Exception {             interceptFrom("direct*").to("mock:intercepted").             Endpoint direct = context.getEndpoint("direct:start").             Endpoint seda = context.getEndpoint("seda:bar").             from(direct).to("mock:first").to(seda).             from(seda).to("mock:result").         }     }. }
