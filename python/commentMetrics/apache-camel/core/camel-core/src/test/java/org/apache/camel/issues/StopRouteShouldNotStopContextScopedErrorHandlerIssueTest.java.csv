commented;modifiers;parameterAmount;loc;comment;code
false;public;0;11;;@Test public void testIssue() throws Exception {     getMockEndpoint("mock:error").expectedMessageCount(1).     // stopping foo route, which should not stop context scoped error handler     context.getRouteController().stopRoute("foo").     template.sendBody("direct:start", "Hello World").     assertMockEndpointsSatisfied(). }
false;public;0;13;;@Override public void configure() throws Exception {     // use context scoped     errorHandler(deadLetterChannel("mock:error").maximumRedeliveries(0)).     from("direct:start").routeId("start").to("log:start").throwException(new IllegalArgumentException("Forced")).     from("direct:foo").routeId("foo").to("log:foo").to("mock:foo"). }
false;protected;0;18;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             // use context scoped             errorHandler(deadLetterChannel("mock:error").maximumRedeliveries(0)).             from("direct:start").routeId("start").to("log:start").throwException(new IllegalArgumentException("Forced")).             from("direct:foo").routeId("foo").to("log:foo").to("mock:foo").         }     }. }
