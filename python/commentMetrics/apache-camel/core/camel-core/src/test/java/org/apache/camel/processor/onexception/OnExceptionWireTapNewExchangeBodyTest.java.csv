commented;modifiers;parameterAmount;loc;comment;code
false;public;0;9;;@Test public void testOnExceptionWireTapNewExchangeBody() throws Exception {     getMockEndpoint("mock:tap").expectedBodiesReceived("Error due Forced").     getMockEndpoint("mock:ignore").expectedMessageCount(1).     template.sendBody("direct:start", "Hello World").     assertMockEndpointsSatisfied(). }
false;public;0;10;;@Override public void configure() throws Exception {     onException(IllegalArgumentException.class).wireTap("mock:tap").newExchangeBody(simple("Error due ${exception.message}")).end().handled(true).to("mock:ignore").     from("direct:start").throwException(new IllegalArgumentException("Forced")). }
false;protected;0;15;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             onException(IllegalArgumentException.class).wireTap("mock:tap").newExchangeBody(simple("Error due ${exception.message}")).end().handled(true).to("mock:ignore").             from("direct:start").throwException(new IllegalArgumentException("Forced")).         }     }. }
