commented;modifiers;parameterAmount;loc;comment;code
false;public;0;15;;@Before public void setup() {     nominalOption = new GlobalOptionDefinition().     nominalOption.setKey(Exchange.LOG_DEBUG_BODY_MAX_CHARS).     nominalOption.setValue(LOG_DEBUG_BODY_MAX_CHARS_VALUE).     duplicateOption = new GlobalOptionDefinition().     duplicateOption.setKey(Exchange.LOG_DEBUG_BODY_MAX_CHARS).     duplicateOption.setValue(LOG_DEBUG_BODY_MAX_CHARS_DUP_VALUE).     globalOptions = new ArrayList<>().     globalOptions.add(nominalOption).     instance = new GlobalOptionsDefinition().     instance.setGlobalOptions(globalOptions). }
false;public;0;7;;@Test public void asMapShouldCarryOnLogDebugMaxChars() {     Map<String, String> map = instance.asMap().     Assert.assertNotNull(map).     Assert.assertEquals(1, map.size()).     Assert.assertEquals(LOG_DEBUG_BODY_MAX_CHARS_VALUE, map.get(Exchange.LOG_DEBUG_BODY_MAX_CHARS)). }
false;public;0;8;;@Test public void asMapWithDuplicateKeyShouldOverride() {     globalOptions.add(duplicateOption).     Map<String, String> map = instance.asMap().     Assert.assertNotNull(map).     Assert.assertEquals(1, map.size()).     Assert.assertEquals(LOG_DEBUG_BODY_MAX_CHARS_DUP_VALUE, map.get(Exchange.LOG_DEBUG_BODY_MAX_CHARS)). }
false;public;0;5;;@Test(expected = NullPointerException.class) public void asMapWithNullGlobalOptionsShouldThrowNullPointerException() {     instance.setGlobalOptions(null).     instance.asMap(). }
false;public;0;7;;@Test public void asMapWithEmptyGlobalOptionsShouldReturnEmptyMap() {     globalOptions.clear().     Map<String, String> map = instance.asMap().     Assert.assertNotNull(map).     Assert.assertEquals(0, map.size()). }
false;public;0;8;;@Test public void asMapWithNullKeyShouldReturnEmptyMap() {     nominalOption.setKey(null).     Map<String, String> map = instance.asMap().     Assert.assertNotNull(map).     Assert.assertEquals(1, map.size()).     Assert.assertEquals(LOG_DEBUG_BODY_MAX_CHARS_VALUE, map.get(null)). }
