commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public boolean isUseRouteBuilder() {     return false. }
false;public;0;9;;@Override public void configure() throws Exception {     SedaComponent seda = new SedaComponent().     seda.setQueueSize(propertyInject("myQueueSize", int.class)).     context.addComponent("seda", seda).     from("seda:start").to("mock:{{cool.result}}"). }
false;public;0;25;;@Test public void testPropertiesComponentEndpoint() throws Exception {     context.addRoutes(new RouteBuilder() {          @Override         public void configure() throws Exception {             SedaComponent seda = new SedaComponent().             seda.setQueueSize(propertyInject("myQueueSize", int.class)).             context.addComponent("seda", seda).             from("seda:start").to("mock:{{cool.result}}").         }     }).     context.start().     getMockEndpoint("mock:result").expectedMessageCount(1).     template.sendBody("seda:start", "Hello World").     assertMockEndpointsSatisfied().     SedaComponent seda = context.getComponent("seda", SedaComponent.class).     assertNotNull(seda).     assertEquals(10, seda.getQueueSize()). }
false;protected;0;10;;@Override protected CamelContext createCamelContext() throws Exception {     CamelContext context = super.createCamelContext().     PropertiesComponent pc = new PropertiesComponent().     pc.setLocation("classpath:org/apache/camel/component/properties/myproperties.properties").     context.addComponent("properties", pc).     return context. }
