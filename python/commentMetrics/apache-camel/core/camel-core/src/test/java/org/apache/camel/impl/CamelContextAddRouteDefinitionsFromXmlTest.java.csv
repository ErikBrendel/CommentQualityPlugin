commented;modifiers;parameterAmount;loc;comment;code
false;public;0;6;;@Override @Before public void setUp() throws Exception {     super.setUp().     jaxbContext = context.getModelJAXBContextFactory().newJAXBContext(). }
false;protected;1;7;;protected Object parseUri(String uri) throws JAXBException {     Unmarshaller unmarshaller = jaxbContext.createUnmarshaller().     URL resource = getClass().getResource(uri).     assertNotNull("Cannot find resource on the classpath: " + uri, resource).     Object value = unmarshaller.unmarshal(resource).     return value. }
false;protected;1;4;;protected RouteDefinition loadRoute(String uri) throws Exception {     Object route = parseUri(uri).     return assertIsInstanceOf(RouteDefinition.class, route). }
false;public;0;16;;@Test public void testAddRouteDefinitionsFromXml() throws Exception {     RouteDefinition route = loadRoute("route1.xml").     assertNotNull(route).     assertEquals("foo", route.getId()).     assertEquals(0, context.getRoutes().size()).     context.addRouteDefinition(route).     assertEquals(1, context.getRoutes().size()).     assertTrue("Route should be started", context.getRouteController().getRouteStatus("foo").isStarted()).     getMockEndpoint("mock:result").expectedBodiesReceived("Hello World").     template.sendBody("direct:start", "Hello World").     assertMockEndpointsSatisfied(). }
false;public;0;19;;@Test public void testRemoveRouteDefinitionsFromXml() throws Exception {     RouteDefinition route = loadRoute("route1.xml").     assertNotNull(route).     assertEquals("foo", route.getId()).     assertEquals(0, context.getRoutes().size()).     context.addRouteDefinition(route).     assertEquals(1, context.getRouteDefinitions().size()).     assertEquals(1, context.getRoutes().size()).     assertTrue("Route should be started", context.getRouteController().getRouteStatus("foo").isStarted()).     context.removeRouteDefinition(route).     assertEquals(0, context.getRoutes().size()).     assertNull(context.getRouteController().getRouteStatus("foo")).     assertEquals(0, context.getRouteDefinitions().size()). }
false;public;0;19;;@Test public void testAddRouteDefinitionsFromXml2() throws Exception {     RouteDefinition route = loadRoute("route2.xml").     assertNotNull(route).     assertEquals("foo", route.getId()).     assertEquals(0, context.getRoutes().size()).     context.addRouteDefinition(route).     assertEquals(1, context.getRoutes().size()).     assertTrue("Route should be stopped", context.getRouteController().getRouteStatus("foo").isStopped()).     context.getRouteController().startRoute("foo").     assertTrue("Route should be started", context.getRouteController().getRouteStatus("foo").isStarted()).     getMockEndpoint("mock:result").expectedBodiesReceived("Hello World").     template.sendBody("direct:start", "Hello World").     assertMockEndpointsSatisfied(). }
false;public;0;20;;@Test public void testAddRouteDefinitionsFromXmlIsPrepared() throws Exception {     RouteDefinition route = loadRoute("route1.xml").     assertNotNull(route).     assertEquals("foo", route.getId()).     assertEquals(0, context.getRoutes().size()).     context.addRouteDefinition(route).     assertEquals(1, context.getRoutes().size()).     assertTrue("Route should be started", context.getRouteController().getRouteStatus("foo").isStarted()).     // should be prepared, check parents has been set     assertNotNull("Parent should be set on outputs").     route = context.getRouteDefinition("foo").     for (ProcessorDefinition<?> output : route.getOutputs()) {         assertNotNull("Parent should be set on output", output.getParent()).         assertEquals(route, output.getParent()).     } }
false;public;1;3;;public void process(Exchange exchange) throws Exception {     exchange.setException(new IllegalArgumentException("Damn")). }
false;public;0;26;;@Test public void testAddRouteDefinitionsFromXml3() throws Exception {     RouteDefinition route = loadRoute("route3.xml").     assertNotNull(route).     assertEquals("foo", route.getId()).     assertEquals(0, context.getRoutes().size()).     context.addRouteDefinition(route).     assertEquals(1, context.getRoutes().size()).     assertTrue("Route should be started", context.getRouteController().getRouteStatus("foo").isStarted()).     getMockEndpoint("mock:foo").whenExchangeReceived(2, new Processor() {          public void process(Exchange exchange) throws Exception {             exchange.setException(new IllegalArgumentException("Damn")).         }     }).     getMockEndpoint("mock:result").expectedBodiesReceived("Hello World").     getMockEndpoint("mock:handled").expectedBodiesReceived("Bye World").     template.sendBody("direct:start", "Hello World").     template.sendBody("direct:start", "Bye World").     assertMockEndpointsSatisfied(). }
false;public;0;22;;@Test public void testAddRouteDefinitionsAfterExceptionFromXml() throws Exception {     RouteDefinition route = loadRoute("route4_error.xml").     assertNotNull(route).     assertEquals("foo", route.getId()).     assertEquals(0, context.getRoutes().size()).     try {         context.addRouteDefinition(route).     } catch (Exception e) {     // catch this is error to simulate test case!!!!     }     // load route with same id     route = loadRoute("route4_ok.xml").     assertNotNull(route).     assertEquals("foo", route.getId()).     assertEquals(0, context.getRoutes().size()).     context.addRouteDefinition(route).     assertEquals(1, context.getRoutes().size()). }
