commented;modifiers;parameterAmount;loc;comment;code
false;public;0;13;;@Test public void testInterceptor() throws Exception {     getMockEndpoint("mock:foo").expectedMessageCount(2).     getMockEndpoint("mock:bar").expectedMessageCount(2).     MockEndpoint mock = getMockEndpoint("mock:result").     mock.expectedMessageCount(1).     mock.expectedBodiesReceived("Hello World").     template.sendBody("seda:foo", "Hello World").     assertMockEndpointsSatisfied(). }
false;public;0;7;;public void configure() throws Exception {     interceptFrom().to("log:foo").to("mock:foo").     interceptFrom().to("log:bar").to("mock:bar").     from("seda:foo").to("seda:bar").     from("seda:bar").to("mock:result"). }
false;protected;0;11;;protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          public void configure() throws Exception {             interceptFrom().to("log:foo").to("mock:foo").             interceptFrom().to("log:bar").to("mock:bar").             from("seda:foo").to("seda:bar").             from("seda:bar").to("mock:result").         }     }. }
