commented;modifiers;parameterAmount;loc;comment;code
false;public;0;16;;@Test public void testOnExceptionErrorHandlerRef() throws Exception {     getMockEndpoint("mock:a").expectedMessageCount(1).     getMockEndpoint("mock:handled").expectedMessageCount(1).     getMockEndpoint("mock:dead").expectedMessageCount(0).     try {         template.sendBody("direct:start", "Hello World").         fail("Should have thrown exception").     } catch (CamelExecutionException e) {         IllegalArgumentException cause = assertIsInstanceOf(IllegalArgumentException.class, e.getCause()).         assertEquals("Damn", cause.getMessage()).     }     assertMockEndpointsSatisfied(). }
false;public;0;10;;@Test public void testOnExceptionErrorHandlerRefFoo() throws Exception {     getMockEndpoint("mock:a").expectedMessageCount(0).     getMockEndpoint("mock:handled").expectedMessageCount(0).     getMockEndpoint("mock:dead").expectedMessageCount(1).     template.sendBody("direct:foo", "Hello Foo").     assertMockEndpointsSatisfied(). }
false;protected;0;6;;@Override protected JndiRegistry createRegistry() throws Exception {     JndiRegistry jndi = super.createRegistry().     jndi.bind("myDLC", new DeadLetterChannelBuilder("mock:dead")).     return jndi. }
false;public;0;17;;@Override public void configure() throws Exception {     onException(IllegalArgumentException.class).handled(false).to("mock:handled").end().     from("direct:foo").errorHandler(new ErrorHandlerBuilderRef("myDLC")).to("mock:foo").throwException(new IOException("Damn IO")).     from("direct:start").errorHandler(new ErrorHandlerBuilderRef("myDLC")).to("mock:a").throwException(new IllegalArgumentException("Damn")). }
false;protected;0;22;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             onException(IllegalArgumentException.class).handled(false).to("mock:handled").end().             from("direct:foo").errorHandler(new ErrorHandlerBuilderRef("myDLC")).to("mock:foo").throwException(new IOException("Damn IO")).             from("direct:start").errorHandler(new ErrorHandlerBuilderRef("myDLC")).to("mock:a").throwException(new IllegalArgumentException("Damn")).         }     }. }
