commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;6;;@Override protected JndiRegistry createRegistry() throws Exception {     JndiRegistry jndi = super.createRegistry().     jndi.bind("myProcessor", new MyProcessor()).     return jndi. }
false;public;0;12;;@Test public void testOnExceptionOccurred() throws Exception {     getMockEndpoint("mock:dead").expectedMessageCount(1).     template.sendBody("direct:start", "Hello World").     assertMockEndpointsSatisfied().     MyProcessor myProcessor = context.getRegistry().lookupByNameAndType("myProcessor", MyProcessor.class).     // 1 = first time + 3 redelivery attempts     assertEquals(1 + 3, myProcessor.getInvoked()). }
false;public;0;11;;@Override public void configure() throws Exception {     MyProcessor myProcessor = context.getRegistry().lookupByNameAndType("myProcessor", MyProcessor.class).     errorHandler(deadLetterChannel("mock:dead")).     onException(Exception.class).maximumRedeliveries(3).redeliveryDelay(0).onExceptionOccurred(myProcessor).     from("direct:start").throwException(new IllegalArgumentException("Forced")). }
false;protected;0;16;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             MyProcessor myProcessor = context.getRegistry().lookupByNameAndType("myProcessor", MyProcessor.class).             errorHandler(deadLetterChannel("mock:dead")).             onException(Exception.class).maximumRedeliveries(3).redeliveryDelay(0).onExceptionOccurred(myProcessor).             from("direct:start").throwException(new IllegalArgumentException("Forced")).         }     }. }
false;public;1;4;;@Override public void process(Exchange exchange) throws Exception {     invoked++. }
false;public;0;3;;public int getInvoked() {     return invoked. }
