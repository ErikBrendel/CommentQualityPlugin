commented;modifiers;parameterAmount;loc;comment;code
false;public;0;6;;@Override @Before public void setUp() throws Exception {     deleteDirectory("target/data/split").     super.setUp(). }
false;public;0;41;;@Test public void testConcurrentAppend() throws Exception {     // create file with many lines     StringBuilder sb = new StringBuilder().     for (int i = 0. i < size. i++) {         sb.append("Block1 Line " + i + LS).     }     sb.append(comma).     for (int i = 10. i < size + 10. i++) {         sb.append("Block2 Line " + i + LS).     }     template.sendBodyAndHeader("file:target/data/split", sb.toString(), Exchange.FILE_NAME, "input.txt").     // start route     MockEndpoint mock = getMockEndpoint("mock:result").     mock.expectedMessageCount(1).     context.getRouteController().startRoute("foo").     assertMockEndpointsSatisfied().     // check one file has expected number of lines +1 saying split is     // complete.     String txt = context.getTypeConverter().convertTo(String.class, new File("target/data/split/outbox/result0.txt")).     assertNotNull(txt).     String[] lines = txt.split(LS).     assertEquals("Should be " + (size + 1) + " lines", size + 1, lines.length).     txt = context.getTypeConverter().convertTo(String.class, new File("target/data/split/outbox/result1.txt")).     assertNotNull(txt).     lines = txt.split(LS).     assertEquals("Should be " + (size + 1) + " lines", size + 1, lines.length). }
false;public;0;18;;@Override public void configure() throws Exception {     from("file:target/data/split?initialDelay=0&delay=10").routeId("foo").noAutoStartup().split(body().tokenize(comma)).parallelProcessing().streaming().setProperty("split", new SimpleExpression("${exchangeProperty.CamelSplitIndex}")).split(body().tokenize(LS)).parallelProcessing().streaming().setBody(body().append(":Status=OK").append(LS)).to("file:target/data/split/outbox?fileExist=Append&fileName=result${exchangeProperty.split}.txt").end().setBody(new SimpleExpression("${exchangeProperty.split} complete")).to("file:target/data/split/outbox?fileExist=Append&fileName=result${exchangeProperty.split}.txt").end().to("mock:result"). }
false;protected;0;23;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("file:target/data/split?initialDelay=0&delay=10").routeId("foo").noAutoStartup().split(body().tokenize(comma)).parallelProcessing().streaming().setProperty("split", new SimpleExpression("${exchangeProperty.CamelSplitIndex}")).split(body().tokenize(LS)).parallelProcessing().streaming().setBody(body().append(":Status=OK").append(LS)).to("file:target/data/split/outbox?fileExist=Append&fileName=result${exchangeProperty.split}.txt").end().setBody(new SimpleExpression("${exchangeProperty.split} complete")).to("file:target/data/split/outbox?fileExist=Append&fileName=result${exchangeProperty.split}.txt").end().to("mock:result").         }     }. }
