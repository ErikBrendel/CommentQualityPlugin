commented;modifiers;parameterAmount;loc;comment;code
false;public;0;10;;@Test public void testBeanRefNoCache() throws Exception {     getMockEndpoint("mock:result").expectedBodiesReceived("Hello1", "Bye2", "Camel3").     template.sendBody("direct:start", "Hello").     template.sendBody("direct:start", "Bye").     template.sendBody("direct:start", "Camel").     assertMockEndpointsSatisfied(). }
false;public;0;6;;@Override public void configure() throws Exception {     from("direct:start").bean(MyCoolBean.class, "doSomething", false).to("mock:result"). }
false;protected;0;11;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").bean(MyCoolBean.class, "doSomething", false).to("mock:result").         }     }. }
false;public;0;3;;public int getCount() {     return count. }
false;public;1;3;;public String doSomething(String s) {     return s + count. }
