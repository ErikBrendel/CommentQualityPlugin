commented;modifiers;parameterAmount;loc;comment;code
false;public;0;8;;@Test public void testOk() throws Exception {     getMockEndpoint("mock:result").expectedMessageCount(1).     template.sendBody("ref:foo", "Hello World").     assertMockEndpointsSatisfied(). }
false;public;0;11;;@Test public void testInvalid() throws Exception {     try {         template.sendBody("ref:xxx", "Hello World").         fail("Should have thrown an exception").     } catch (ResolveEndpointFailedException e) {         assertEquals("Failed to resolve endpoint: ref://xxx due to: No bean could be found in the registry for: xxx of type: org.apache.camel.Endpoint", e.getMessage()).         NoSuchBeanException cause = assertIsInstanceOf(NoSuchBeanException.class, e.getCause()).         assertEquals("xxx", cause.getName()).     } }
false;protected;0;6;;@Override protected CamelContext createCamelContext() throws Exception {     CamelContext context = new DefaultCamelContext().     context.getRegistry().bind("foo", context.getEndpoint("seda:foo")).     return context. }
false;public;0;4;;@Override public void configure() throws Exception {     from("ref:foo").routeId("foo").to("mock:result"). }
false;protected;0;9;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("ref:foo").routeId("foo").to("mock:result").         }     }. }
