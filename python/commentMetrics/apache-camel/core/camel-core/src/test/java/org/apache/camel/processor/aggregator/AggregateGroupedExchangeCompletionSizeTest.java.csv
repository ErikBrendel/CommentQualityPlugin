commented;modifiers;parameterAmount;loc;comment;code
false;public;0;14;;@Test public void testGrouped() throws Exception {     MockEndpoint result = getMockEndpoint("mock:result").     result.expectedMessageCount(2).     template.sendBody("direct:start", "A").     template.sendBody("direct:start", "B").     template.sendBody("direct:start", "C").     template.sendBody("direct:start", "D").     template.sendBody("direct:start", "E").     template.sendBody("direct:start", "F").     assertMockEndpointsSatisfied(). }
false;public;0;5;;public void configure() throws Exception {     from("direct:start").aggregate(new GroupedExchangeAggregationStrategy()).constant(true).completionSize(3).to("mock:result"). }
false;protected;0;10;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          public void configure() throws Exception {             from("direct:start").aggregate(new GroupedExchangeAggregationStrategy()).constant(true).completionSize(3).to("mock:result").         }     }. }
