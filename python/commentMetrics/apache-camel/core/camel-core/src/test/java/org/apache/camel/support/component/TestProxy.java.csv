commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public String sayHi() {     return "Hello!". }
false;public;1;3;;public String sayHi(final String name) {     return "Hello " + name. }
false;public,final;1;3;;public final String greetMe(final String name) {     return "Greetings " + name. }
false;public,final;2;3;;public final String greetUs(final String name1, String name2) {     return "Greetings " + name1 + ", " + name2. }
false;public,final;1;8;;public final String greetAll(final String[] names) {     StringBuilder builder = new StringBuilder("Greetings ").     for (String name : names) {         builder.append(name).append(", ").     }     builder.delete(builder.length() - 2, builder.length()).     return builder.toString(). }
false;public,final;1;8;;public final String greetAll(List<String> names) {     StringBuilder builder = new StringBuilder("Greetings ").     for (String name : names) {         builder.append(name).append(", ").     }     builder.delete(builder.length() - 2, builder.length()).     return builder.toString(). }
false;public,final;2;7;;public final String[] greetTimes(String name, int times) {     final List<String> result = new ArrayList<>().     for (int i = 0. i < times. i++) {         result.add("Greetings " + name).     }     return result.toArray(new String[result.size()]). }
false;public;1;9;;public Map<String, String> greetAll(Map<String, String> nameMap) {     Map<String, String> result = new HashMap<>().     for (Map.Entry<String, String> entry : nameMap.entrySet()) {         final String name = entry.getKey().         final String greeting = entry.getValue().         result.put(name, greeting + " " + name).     }     return result. }
false;public,final;2;3;;public final <T extends java.util.Date> T sayHiResource(java.util.Set<T> resourceType, String resourceId) {     return null. }
false;public,final;1;3;;public final <T extends java.util.Date> T with(T theDate) {     return null. }
false;public,final;4;3;;public final <T extends java.util.Date> String withDate(T theDate, Class<? extends java.util.Date> dateClass, Class<T> parameter, T parameters) {     return null. }
false;public,final;1;3;;public final String greetInnerChild(InnerChild child) {     return sayHi(child.getName()). }
false;public;0;3;;public String getName() {     return name. }
false;public;1;3;;public void setName(String name) {     this.name = name. }
