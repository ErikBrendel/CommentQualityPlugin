commented;modifiers;parameterAmount;loc;comment;code
false;public;0;12;;@Test public void testValidMessage() throws Exception {     validEndpoint.expectedMessageCount(1).     finallyEndpoint.expectedMessageCount(1).     invalidEndpoint.expectedMessageCount(0).     template.sendBody("direct:start", "<report xmlns='http://foo.com/report' xmlns:rb='http://foo.com/report-base'><author><rb:name>Knuth</rb:name></author><content><rb:chapter><rb:subject></rb:subject>" + "<rb:abstract></rb:abstract><rb:body></rb:body></rb:chapter></content></report>").     MockEndpoint.assertIsSatisfied(validEndpoint, invalidEndpoint, finallyEndpoint). }
false;public;0;12;;@Test public void testInvalidMessage() throws Exception {     validEndpoint.expectedMessageCount(0).     invalidEndpoint.expectedMessageCount(1).     finallyEndpoint.expectedMessageCount(1).     template.sendBody("direct:start", "<report xmlns='http://foo.com/report' xmlns:rb='http://foo.com/report-base'><author><rb:name>Knuth</rb:name></author></report>").     MockEndpoint.assertIsSatisfied(validEndpoint, invalidEndpoint, finallyEndpoint). }
false;public;0;9;;@Override @Before public void setUp() throws Exception {     super.setUp().     validEndpoint = resolveMandatoryEndpoint("mock:valid", MockEndpoint.class).     invalidEndpoint = resolveMandatoryEndpoint("mock:invalid", MockEndpoint.class).     finallyEndpoint = resolveMandatoryEndpoint("mock:finally", MockEndpoint.class). }
false;public;0;12;;@Override public void configure() throws Exception {     from("direct:start").doTry().to("validator:org/apache/camel/component/validator/report.xsd?resourceResolver=#resourceResolver").to("mock:valid").doCatch(ValidationException.class).to("mock:invalid").doFinally().to("mock:finally").end(). }
false;protected;0;25;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     // we have to do it here, because we need the context created first     CatalogManager.getStaticManager().setIgnoreMissingProperties(true).     CatalogResolver catalogResolver = new CatalogResolver(true).     URL catalogUrl = ResourceHelper.resolveMandatoryResourceAsUrl(context.getClassResolver(), "org/apache/camel/component/validator/catalog.cat").     catalogResolver.getCatalog().parseCatalog(catalogUrl).     LSResourceResolver resourceResolver = new CatalogLSResourceResolver(catalogResolver).     context.getRegistry().bind("resourceResolver", resourceResolver).     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").doTry().to("validator:org/apache/camel/component/validator/report.xsd?resourceResolver=#resourceResolver").to("mock:valid").doCatch(ValidationException.class).to("mock:invalid").doFinally().to("mock:finally").end().         }     }. }
