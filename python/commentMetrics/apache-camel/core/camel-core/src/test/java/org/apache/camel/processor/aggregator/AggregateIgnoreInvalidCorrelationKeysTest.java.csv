commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public boolean isUseRouteBuilder() {     return false. }
false;public;0;7;;@Override public void configure() throws Exception {     from("direct:start").aggregate(header("id"), new BodyInAggregatingStrategy()).completionSize(2).ignoreInvalidCorrelationKeys().to("mock:result"). }
false;public;0;24;;@Test public void testAggregateIgnoreInvalidCorrelationKeys() throws Exception {     context.addRoutes(new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").aggregate(header("id"), new BodyInAggregatingStrategy()).completionSize(2).ignoreInvalidCorrelationKeys().to("mock:result").         }     }).     context.start().     getMockEndpoint("mock:result").expectedBodiesReceived("A+C").     template.sendBodyAndHeader("direct:start", "A", "id", 1).     // B should be ignored     template.sendBodyAndHeader("direct:start", "B", "id", null).     template.sendBodyAndHeader("direct:start", "C", "id", 1).     assertMockEndpointsSatisfied(). }
false;public;0;7;;@Override public void configure() throws Exception {     from("direct:start").aggregate(header("id"), new BodyInAggregatingStrategy()).completionSize(2).to("mock:result"). }
false;public;0;29;;@Test public void testAggregateNotIgnoreInvalidCorrelationKeys() throws Exception {     context.addRoutes(new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").aggregate(header("id"), new BodyInAggregatingStrategy()).completionSize(2).to("mock:result").         }     }).     context.start().     getMockEndpoint("mock:result").expectedBodiesReceived("A+C").     template.sendBodyAndHeader("direct:start", "A", "id", 1).     try {         template.sendBodyAndHeader("direct:start", "B", "id", null).         fail("Should throw an exception").     } catch (CamelExecutionException e) {         CamelExchangeException cause = assertIsInstanceOf(CamelExchangeException.class, e.getCause()).         assertTrue(cause.getMessage().startsWith("Invalid correlation key")).     }     template.sendBodyAndHeader("direct:start", "C", "id", 1).     assertMockEndpointsSatisfied(). }
