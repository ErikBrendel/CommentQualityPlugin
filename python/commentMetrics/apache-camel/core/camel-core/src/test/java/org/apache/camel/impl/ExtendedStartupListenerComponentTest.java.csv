commented;modifiers;parameterAmount;loc;comment;code
false;public;0;19;;@Test public void testExtendedStartupListenerComponent() throws Exception {     // and now the routes are started     assertTrue(context.getRouteController().getRouteStatus("foo").isStarted()).     assertTrue(context.getRouteController().getRouteStatus("bar").isStarted()).     assertTrue(context.getRouteController().getRouteStatus("late").isStarted()).     getMockEndpoint("mock:result").expectedMessageCount(1).     getMockEndpoint("mock:late").expectedMessageCount(1).     template.sendBody("direct:foo", "Hello World").     template.sendBody("direct:late", "Bye World").     assertMockEndpointsSatisfied().     // we are invoked 2 times and then 1 extra when we add new routes because the component     // will trigger again when the new routes are being started     assertEquals(2 + 1, my.getInvoked()). }
false;public;2;9;;public void onCamelContextStarted(CamelContext context, boolean alreadyStarted) throws Exception {     invoked++.     // the routes should not have been started as they start afterwards     if (!alreadyStarted) {         assertTrue(context.getRouteController().getRouteStatus("foo").isStopped()).         assertTrue(context.getRouteController().getRouteStatus("bar").isStopped()).     } }
false;public;0;3;;public int getInvoked() {     return invoked. }
false;public;0;4;;@Override public void configure() throws Exception {     from("direct:late").routeId("late").to("mock:late"). }
false;public;2;17;;@Override public void onCamelContextFullyStarted(CamelContext context, boolean alreadyStarted) throws Exception {     invoked++.     // the original routes are now started     assertTrue(context.getRouteController().getRouteStatus("foo").isStarted()).     assertTrue(context.getRouteController().getRouteStatus("bar").isStarted()).     // we can add new routes     context.addRoutes(new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:late").routeId("late").to("mock:late").         }     }). }
false;public;0;8;;@Override public void configure() throws Exception {     my = new MyComponent().     context.addComponent("my", my).     from("direct:foo").routeId("foo").to("my:bar").     from("my:bar").routeId("bar").to("mock:result"). }
false;protected;0;13;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             my = new MyComponent().             context.addComponent("my", my).             from("direct:foo").routeId("foo").to("my:bar").             from("my:bar").routeId("bar").to("mock:result").         }     }. }
