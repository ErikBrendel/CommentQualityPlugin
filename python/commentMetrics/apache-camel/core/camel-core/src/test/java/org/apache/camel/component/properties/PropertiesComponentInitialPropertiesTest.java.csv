commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public boolean isUseRouteBuilder() {     return false. }
false;public;0;7;;@Override public void configure() throws Exception {     from("direct:start").to("{{first}}").to("mock:{{second}}").to("{{cool.end}}"). }
false;public;0;21;;@Test public void testPropertiesComponentEndpoint() throws Exception {     context.addRoutes(new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").to("{{first}}").to("mock:{{second}}").to("{{cool.end}}").         }     }).     context.start().     getMockEndpoint("mock:first").expectedMessageCount(1).     getMockEndpoint("mock:second").expectedMessageCount(1).     getMockEndpoint("mock:result").expectedMessageCount(1).     template.sendBody("direct:start", "Hello World").     assertMockEndpointsSatisfied(). }
false;protected;0;15;;@Override protected CamelContext createCamelContext() throws Exception {     CamelContext context = super.createCamelContext().     PropertiesComponent pc = new PropertiesComponent().     pc.setLocation("classpath:org/apache/camel/component/properties/myproperties.properties").     context.addComponent("properties", pc).     Properties initial = new Properties().     initial.put("first", "mock:first").     initial.put("second", "second").     pc.setInitialProperties(initial).     return context. }
