commented;modifiers;parameterAmount;loc;comment;code
false;public;0;6;;@Test public void testDefaultListDataSet() throws Exception {     template.sendBodyAndHeader(sourceUri, testPayload, Exchange.DATASET_INDEX, 0).     assertMockEndpointsSatisfied(). }
false;public;0;13;;@Test public void testDefaultListDataSetWithSizeGreaterThanListSize() throws Exception {     int messageCount = 20.     dataSet.setSize(messageCount).     getMockEndpoint(dataSetUri).expectedMessageCount(messageCount).     for (int i = 0. i < messageCount. ++i) {         template.sendBodyAndHeader(sourceUri, testPayload, Exchange.DATASET_INDEX, i).     }     assertMockEndpointsSatisfied(). }
false;public;0;8;;@Override @Before public void setUp() throws Exception {     File fileDataset = createFileDatasetWithSystemEndOfLine().     dataSet = new FileDataSet(fileDataset).     assertEquals("Unexpected DataSet size", 1, dataSet.getSize()).     super.setUp(). }
false;private;0;6;;private File createFileDatasetWithSystemEndOfLine() throws IOException {     tempFolder.create().     File fileDataset = tempFolder.newFile("file-dataset-test.txt").     Files.copy(new ByteArrayInputStream(testPayload.getBytes()), fileDataset.toPath(), StandardCopyOption.REPLACE_EXISTING).     return fileDataset. }
false;protected;0;6;;@Override protected Context createJndiContext() throws Exception {     Context context = super.createJndiContext().     context.bind(dataSetName, dataSet).     return context. }
false;public;0;4;;public void configure() throws Exception {     from(sourceUri).to(dataSetUri). }
false;protected;0;9;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          public void configure() throws Exception {             from(sourceUri).to(dataSetUri).         }     }. }
