commented;modifiers;parameterAmount;loc;comment;code
false;public;0;14;;@Test public void testPlaceholderDslTest() throws Exception {     getMockEndpoint("mock:a").expectedMessageCount(1).     getMockEndpoint("mock:b").expectedMessageCount(0).     try {         template.sendBody("direct:start", "Hello World").         fail("Should have thrown an exception").     } catch (Exception e) {     // expected     }     assertMockEndpointsSatisfied(). }
false;public;0;10;;@Override public void configure() throws Exception {     // START SNIPPET: e1     from("direct:start").multicast().placeholder("stopOnException", "stop").to("mock:a").throwException(new IllegalAccessException("Damn")).to("mock:b"). // END SNIPPET: e1 }
false;protected;0;15;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             // START SNIPPET: e1             from("direct:start").multicast().placeholder("stopOnException", "stop").to("mock:a").throwException(new IllegalAccessException("Damn")).to("mock:b").         // END SNIPPET: e1         }     }. }
false;protected;0;6;;@Override protected CamelContext createCamelContext() throws Exception {     CamelContext context = super.createCamelContext().     context.addComponent("properties", new PropertiesComponent("classpath:org/apache/camel/component/properties/myproperties.properties")).     return context. }
