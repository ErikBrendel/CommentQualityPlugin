commented;modifiers;parameterAmount;loc;comment;code
false;public;0;9;;@Override @Before public void setUp() throws Exception {     deleteDirectory("target/data/filerelative").     deleteDirectory("target/data/fileabsolute").     // use current dir as base as aboslute path     base = new File("").getAbsolutePath() + "/target/data/fileabsolute".     super.setUp(). }
false;public;0;12;;@Test public void testRelative() throws Exception {     MockEndpoint mock = getMockEndpoint("mock:relative").     mock.expectedMessageCount(1).     mock.message(0).header(Exchange.FILE_NAME).isEqualTo("test" + File.separator + "hello.txt").     mock.message(0).header(Exchange.FILE_NAME_ONLY).isEqualTo("hello.txt").     template.sendBodyAndHeader("file://target/data/filerelative", "Hello World", Exchange.FILE_NAME, "test/hello.txt").     assertMockEndpointsSatisfied(). }
false;public;0;12;;@Test public void testAbsolute() throws Exception {     MockEndpoint mock = getMockEndpoint("mock:absolute").     mock.expectedMessageCount(1).     mock.message(0).header(Exchange.FILE_NAME).isEqualTo("test" + File.separator + "hello.txt").     mock.message(0).header(Exchange.FILE_NAME_ONLY).isEqualTo("hello.txt").     template.sendBodyAndHeader("file://target/data/fileabsolute", "Hello World", Exchange.FILE_NAME, "test/hello.txt").     assertMockEndpointsSatisfied(). }
false;public;0;6;;@Override public void configure() throws Exception {     from("file://target/data/filerelative?initialDelay=0&delay=10&recursive=true").convertBodyTo(String.class).to("mock:relative").     from("file://" + base + "?initialDelay=0&delay=10&recursive=true").convertBodyTo(String.class).to("mock:absolute"). }
false;protected;0;11;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("file://target/data/filerelative?initialDelay=0&delay=10&recursive=true").convertBodyTo(String.class).to("mock:relative").             from("file://" + base + "?initialDelay=0&delay=10&recursive=true").convertBodyTo(String.class).to("mock:absolute").         }     }. }
