commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public void configure() throws Exception {     replaceFromWith("seda:newBar"). }
false;public;0;27;;@Test public void testAdvised() throws Exception {     assertFalse(context.getRouteController().getRouteStatus("foo").isStarted()).     assertFalse(context.getRouteController().getRouteStatus("bar").isStarted()).     RouteReifier.adviceWith(context.getRouteDefinition("bar"), context, new AdviceWithRouteBuilder() {          @Override         public void configure() throws Exception {             replaceFromWith("seda:newBar").         }     }).     assertFalse(context.getRouteController().getRouteStatus("foo").isStarted()).     assertFalse(context.getRouteController().getRouteStatus("bar").isStarted()).     context.getRouteController().startRoute("foo").     context.getRouteController().startRoute("bar").     assertTrue(context.getRouteController().getRouteStatus("foo").isStarted()).     assertTrue(context.getRouteController().getRouteStatus("bar").isStarted()).     getMockEndpoint("mock:newBar").expectedMessageCount(1).     template.sendBody("direct:start", "Hello World").     assertMockEndpointsSatisfied(). }
false;public;0;8;;@Override public void configure() throws Exception {     context.setAutoStartup(false).     from("direct:start").routeId("foo").to("seda:newBar").     from("seda:bar").routeId("bar").to("mock:newBar"). }
false;protected;0;13;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             context.setAutoStartup(false).             from("direct:start").routeId("foo").to("seda:newBar").             from("seda:bar").routeId("bar").to("mock:newBar").         }     }. }
