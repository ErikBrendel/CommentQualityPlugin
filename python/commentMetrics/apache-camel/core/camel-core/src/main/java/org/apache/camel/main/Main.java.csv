# id;timestamp;commentText;codeText;commentWords;codeWords
Main -> public <T> Map<String, T> lookupByType(Class<T> type);1549264559;Using the given <code>type</code> does lookup for the bean being already_bound using the {@link #bind(String, Object)} method.__@see Registry#findByTypeWithName(Class);public <T> Map<String, T> lookupByType(Class<T> type) {_        return registry.findByTypeWithName(type)__    };using,the,given,code,type,code,does,lookup,for,the,bean,being,already,bound,using,the,link,bind,string,object,method,see,registry,find,by,type,with,name,class;public,t,map,string,t,lookup,by,type,class,t,type,return,registry,find,by,type,with,name,type
Main -> public <T> Map<String, T> lookupByType(Class<T> type);1551167777;Using the given <code>type</code> does lookup for the bean being already_bound using the {@link #bind(String, Object)} method.__@see Registry#findByTypeWithName(Class);public <T> Map<String, T> lookupByType(Class<T> type) {_        return registry.findByTypeWithName(type)__    };using,the,given,code,type,code,does,lookup,for,the,bean,being,already,bound,using,the,link,bind,string,object,method,see,registry,find,by,type,with,name,class;public,t,map,string,t,lookup,by,type,class,t,type,return,registry,find,by,type,with,name,type
Main -> public <T> Map<String, T> lookupByType(Class<T> type);1551167777;Using the given <code>type</code> does lookup for the bean being already_bound using the {@link #bind(String, Object)} method.__@see Registry#findByTypeWithName(Class);public <T> Map<String, T> lookupByType(Class<T> type) {_        return registry.findByTypeWithName(type)__    };using,the,given,code,type,code,does,lookup,for,the,bean,being,already,bound,using,the,link,bind,string,object,method,see,registry,find,by,type,with,name,class;public,t,map,string,t,lookup,by,type,class,t,type,return,registry,find,by,type,with,name,type
Main -> public void bind(String name, Object bean);1549264559;Binds the given <code>name</code> to the <code>bean</code> object, so_that it can be looked up inside the CamelContext this command line tool_runs with.__@param name the used name through which we do bind_@param bean the object to bind;public void bind(String name, Object bean) {_        registry.put(name, bean)__    };binds,the,given,code,name,code,to,the,code,bean,code,object,so,that,it,can,be,looked,up,inside,the,camel,context,this,command,line,tool,runs,with,param,name,the,used,name,through,which,we,do,bind,param,bean,the,object,to,bind;public,void,bind,string,name,object,bean,registry,put,name,bean
Main -> public void bind(String name, Object bean);1551167777;Binds the given <code>name</code> to the <code>bean</code> object, so_that it can be looked up inside the CamelContext this command line tool_runs with.__@param name the used name through which we do bind_@param bean the object to bind;public void bind(String name, Object bean) {_        registry.put(name, bean)__    };binds,the,given,code,name,code,to,the,code,bean,code,object,so,that,it,can,be,looked,up,inside,the,camel,context,this,command,line,tool,runs,with,param,name,the,used,name,through,which,we,do,bind,param,bean,the,object,to,bind;public,void,bind,string,name,object,bean,registry,put,name,bean
Main -> public void bind(String name, Object bean);1551167777;Binds the given <code>name</code> to the <code>bean</code> object, so_that it can be looked up inside the CamelContext this command line tool_runs with.__@param name the used name through which we do bind_@param bean the object to bind;public void bind(String name, Object bean) {_        registry.bind(name, bean)__    };binds,the,given,code,name,code,to,the,code,bean,code,object,so,that,it,can,be,looked,up,inside,the,camel,context,this,command,line,tool,runs,with,param,name,the,used,name,through,which,we,do,bind,param,bean,the,object,to,bind;public,void,bind,string,name,object,bean,registry,bind,name,bean
Main -> public Object lookup(String name);1549264559;Using the given <code>name</code> does lookup for the bean being already_bound using the {@link #bind(String, Object)} method.__@see Registry#lookupByName(String);public Object lookup(String name) {_        return registry.get(name)__    };using,the,given,code,name,code,does,lookup,for,the,bean,being,already,bound,using,the,link,bind,string,object,method,see,registry,lookup,by,name,string;public,object,lookup,string,name,return,registry,get,name
Main -> public Object lookup(String name);1551167777;Using the given <code>name</code> does lookup for the bean being already_bound using the {@link #bind(String, Object)} method.__@see Registry#lookupByName(String);public Object lookup(String name) {_        return registry.get(name)__    };using,the,given,code,name,code,does,lookup,for,the,bean,being,already,bound,using,the,link,bind,string,object,method,see,registry,lookup,by,name,string;public,object,lookup,string,name,return,registry,get,name
Main -> public Object lookup(String name);1551167777;Using the given <code>name</code> does lookup for the bean being already_bound using the {@link #bind(String, Object)} method.__@see Registry#lookupByName(String);public Object lookup(String name) {_        return registry.lookupByName(name)__    };using,the,given,code,name,code,does,lookup,for,the,bean,being,already,bound,using,the,link,bind,string,object,method,see,registry,lookup,by,name,string;public,object,lookup,string,name,return,registry,lookup,by,name,name
Main -> public <T> T lookup(String name, Class<T> type);1549264559;Using the given <code>name</code> and <code>type</code> does lookup for_the bean being already bound using the {@link #bind(String, Object)}_method.__@see Registry#lookupByNameAndType(String, Class);public <T> T lookup(String name, Class<T> type) {_        return registry.lookupByNameAndType(name, type)__    };using,the,given,code,name,code,and,code,type,code,does,lookup,for,the,bean,being,already,bound,using,the,link,bind,string,object,method,see,registry,lookup,by,name,and,type,string,class;public,t,t,lookup,string,name,class,t,type,return,registry,lookup,by,name,and,type,name,type
Main -> public <T> T lookup(String name, Class<T> type);1551167777;Using the given <code>name</code> and <code>type</code> does lookup for_the bean being already bound using the {@link #bind(String, Object)}_method.__@see Registry#lookupByNameAndType(String, Class);public <T> T lookup(String name, Class<T> type) {_        return registry.lookupByNameAndType(name, type)__    };using,the,given,code,name,code,and,code,type,code,does,lookup,for,the,bean,being,already,bound,using,the,link,bind,string,object,method,see,registry,lookup,by,name,and,type,string,class;public,t,t,lookup,string,name,class,t,type,return,registry,lookup,by,name,and,type,name,type
Main -> public <T> T lookup(String name, Class<T> type);1551167777;Using the given <code>name</code> and <code>type</code> does lookup for_the bean being already bound using the {@link #bind(String, Object)}_method.__@see Registry#lookupByNameAndType(String, Class);public <T> T lookup(String name, Class<T> type) {_        return registry.lookupByNameAndType(name, type)__    };using,the,given,code,name,code,and,code,type,code,does,lookup,for,the,bean,being,already,bound,using,the,link,bind,string,object,method,see,registry,lookup,by,name,and,type,string,class;public,t,t,lookup,string,name,class,t,type,return,registry,lookup,by,name,and,type,name,type
Main -> public static Main getInstance();1549264559;Returns the currently executing main__@return the current running instance;public static Main getInstance() {_        return instance__    };returns,the,currently,executing,main,return,the,current,running,instance;public,static,main,get,instance,return,instance
Main -> public static Main getInstance();1551167777;Returns the currently executing main__@return the current running instance;public static Main getInstance() {_        return instance__    };returns,the,currently,executing,main,return,the,current,running,instance;public,static,main,get,instance,return,instance
Main -> public static Main getInstance();1551167777;Returns the currently executing main__@return the current running instance;public static Main getInstance() {_        return instance__    };returns,the,currently,executing,main,return,the,current,running,instance;public,static,main,get,instance,return,instance
Main -> public CamelContext getOrCreateCamelContext();1549264559;Gets or creates the {@link org.apache.camel.CamelContext} this main class is using.__It just create a new CamelContextMap per call, please don't use it to access the camel context that will be ran by main._If you want to setup the CamelContext please use MainListener to get the new created camel context.;public CamelContext getOrCreateCamelContext() {_        _        Map<String, CamelContext> map = getCamelContextMap()__        if (map.size() >= 1) {_            return map.values().iterator().next()__        } else {_            throw new IllegalStateException("Error creating CamelContext")__        }_    };gets,or,creates,the,link,org,apache,camel,camel,context,this,main,class,is,using,it,just,create,a,new,camel,context,map,per,call,please,don,t,use,it,to,access,the,camel,context,that,will,be,ran,by,main,if,you,want,to,setup,the,camel,context,please,use,main,listener,to,get,the,new,created,camel,context;public,camel,context,get,or,create,camel,context,map,string,camel,context,map,get,camel,context,map,if,map,size,1,return,map,values,iterator,next,else,throw,new,illegal,state,exception,error,creating,camel,context
Main -> public CamelContext getOrCreateCamelContext();1551167777;Gets or creates the {@link org.apache.camel.CamelContext} this main class is using.__It just create a new CamelContextMap per call, please don't use it to access the camel context that will be ran by main._If you want to setup the CamelContext please use MainListener to get the new created camel context.;public CamelContext getOrCreateCamelContext() {_        _        Map<String, CamelContext> map = getCamelContextMap()__        if (map.size() >= 1) {_            return map.values().iterator().next()__        } else {_            throw new IllegalStateException("Error creating CamelContext")__        }_    };gets,or,creates,the,link,org,apache,camel,camel,context,this,main,class,is,using,it,just,create,a,new,camel,context,map,per,call,please,don,t,use,it,to,access,the,camel,context,that,will,be,ran,by,main,if,you,want,to,setup,the,camel,context,please,use,main,listener,to,get,the,new,created,camel,context;public,camel,context,get,or,create,camel,context,map,string,camel,context,map,get,camel,context,map,if,map,size,1,return,map,values,iterator,next,else,throw,new,illegal,state,exception,error,creating,camel,context
Main -> public CamelContext getOrCreateCamelContext();1551167777;Gets or creates the {@link org.apache.camel.CamelContext} this main class is using.__It just create a new CamelContextMap per call, please don't use it to access the camel context that will be ran by main._If you want to setup the CamelContext please use MainListener to get the new created camel context.;public CamelContext getOrCreateCamelContext() {_        _        Map<String, CamelContext> map = getCamelContextMap()__        if (map.size() >= 1) {_            return map.values().iterator().next()__        } else {_            throw new IllegalStateException("Error creating CamelContext")__        }_    };gets,or,creates,the,link,org,apache,camel,camel,context,this,main,class,is,using,it,just,create,a,new,camel,context,map,per,call,please,don,t,use,it,to,access,the,camel,context,that,will,be,ran,by,main,if,you,want,to,setup,the,camel,context,please,use,main,listener,to,get,the,new,created,camel,context;public,camel,context,get,or,create,camel,context,map,string,camel,context,map,get,camel,context,map,if,map,size,1,return,map,values,iterator,next,else,throw,new,illegal,state,exception,error,creating,camel,context
