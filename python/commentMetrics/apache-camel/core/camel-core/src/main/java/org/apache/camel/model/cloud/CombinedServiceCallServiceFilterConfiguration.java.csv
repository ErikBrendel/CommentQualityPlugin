commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;// ************************************************************************* // Properties // ************************************************************************* public List<ServiceCallServiceFilterConfiguration> getServiceFilterConfigurations() {     return serviceFilterConfigurations. }
true;public;1;3;/**  * List of ServiceFilter configuration to use  * @param serviceFilterConfigurations  */ ;/**  * List of ServiceFilter configuration to use  * @param serviceFilterConfigurations  */ public void setServiceFilterConfigurations(List<ServiceCallServiceFilterConfiguration> serviceFilterConfigurations) {     this.serviceFilterConfigurations = serviceFilterConfigurations. }
true;public;1;7;/**  *  Add a ServiceFilter configuration  */ ;/**  *  Add a ServiceFilter configuration  */ public void addServiceFilterConfiguration(ServiceCallServiceFilterConfiguration serviceFilterConfiguration) {     if (serviceFilterConfigurations == null) {         serviceFilterConfigurations = new ArrayList<>().     }     serviceFilterConfigurations.add(serviceFilterConfiguration). }
true;public;1;4;/**  *  List of ServiceFilter configuration to use  */ ;// ************************************************************************* // Fluent API // ************************************************************************* /**  *  List of ServiceFilter configuration to use  */ public CombinedServiceCallServiceFilterConfiguration serviceFilterConfigurations(List<ServiceCallServiceFilterConfiguration> serviceFilterConfigurations) {     setServiceFilterConfigurations(serviceFilterConfigurations).     return this. }
true;public;1;4;/**  *  Add a ServiceFilter configuration  */ ;/**  *  Add a ServiceFilter configuration  */ public CombinedServiceCallServiceFilterConfiguration serviceFilterConfiguration(ServiceCallServiceFilterConfiguration serviceFilterConfiguration) {     addServiceFilterConfiguration(serviceFilterConfiguration).     return this. }
false;public;0;4;;// ***************************** // Shortcuts - ServiceFilter // ***************************** public CombinedServiceCallServiceFilterConfiguration healthy() {     addServiceFilterConfiguration(new HealthyServiceCallServiceFilterConfiguration()).     return this. }
false;public;0;4;;public CombinedServiceCallServiceFilterConfiguration passThrough() {     addServiceFilterConfiguration(new PassThroughServiceCallServiceFilterConfiguration()).     return this. }
false;public;1;4;;public CombinedServiceCallServiceFilterConfiguration custom(String serviceFilter) {     addServiceFilterConfiguration(new CustomServiceCallServiceFilterConfiguration().serviceFilter(serviceFilter)).     return this. }
false;public;1;4;;public CombinedServiceCallServiceFilterConfiguration custom(ServiceFilter serviceFilter) {     addServiceFilterConfiguration(new CustomServiceCallServiceFilterConfiguration().serviceFilter(serviceFilter)).     return this. }
false;protected;2;11;;// ************************************************************************* // Utilities // ************************************************************************* @Override protected void postProcessFactoryParameters(final CamelContext camelContext, final Map<String, Object> parameters) throws Exception {     if (serviceFilterConfigurations != null && !serviceFilterConfigurations.isEmpty()) {         List<ServiceFilter> discoveries = new ArrayList<>(serviceFilterConfigurations.size()).         for (ServiceCallServiceFilterConfiguration conf : serviceFilterConfigurations) {             discoveries.add(conf.newInstance(camelContext)).         }         parameters.put("serviceFilterList", discoveries).     } }
