commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public Map<String, String> getNamespaces() {     return namespaces. }
true;public;1;3;/**  * Injects the XML Namespaces of prefix -> uri mappings  *  * @param namespaces the XML namespaces with the key of prefixes and the value the URIs  */ ;/**  * Injects the XML Namespaces of prefix -> uri mappings  *  * @param namespaces the XML namespaces with the key of prefixes and the value the URIs  */ public void setNamespaces(Map<String, String> namespaces) {     this.namespaces = namespaces. }
false;protected;2;5;;@Override protected void configureExpression(CamelContext camelContext, Expression expression) {     configureNamespaceAware(expression).     super.configureExpression(camelContext, expression). }
false;protected;2;5;;@Override protected void configurePredicate(CamelContext camelContext, Predicate predicate) {     configureNamespaceAware(predicate).     super.configurePredicate(camelContext, predicate). }
false;protected;1;6;;protected void configureNamespaceAware(Object builder) {     if (namespaces != null && builder instanceof NamespaceAware) {         NamespaceAware namespaceAware = (NamespaceAware) builder.         namespaceAware.setNamespaces(namespaces).     } }
