commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public String getShortName() {     return "verb". }
false;public;0;8;;@Override public String getLabel() {     if (method != null) {         return method.     } else {         return "verb".     } }
false;public;0;3;;public List<RestOperationParamDefinition> getParams() {     return params. }
true;public;1;3;/**  * To specify the REST operation parameters using Swagger.  */ ;/**  * To specify the REST operation parameters using Swagger.  */ public void setParams(List<RestOperationParamDefinition> params) {     this.params = params. }
false;public;0;3;;public List<RestOperationResponseMsgDefinition> getResponseMsgs() {     return responseMsgs. }
true;public;1;3;/**  * Sets swagger operation response messages.  */ ;/**  * Sets swagger operation response messages.  */ public void setResponseMsgs(List<RestOperationResponseMsgDefinition> responseMsgs) {     this.responseMsgs = responseMsgs. }
false;public;0;3;;public List<SecurityDefinition> getSecurity() {     return security. }
true;public;1;3;/**  * Sets the swagger security settings for this verb.  */ ;/**  * Sets the swagger security settings for this verb.  */ public void setSecurity(List<SecurityDefinition> security) {     this.security = security. }
false;public;0;3;;public String getMethod() {     return method. }
true;public;1;3;/**  * The HTTP verb such as GET, POST, DELETE, etc.  */ ;/**  * The HTTP verb such as GET, POST, DELETE, etc.  */ public void setMethod(String method) {     this.method = method. }
false;public;0;3;;public String getUri() {     return uri. }
true;public;1;3;/**  * Uri template of this REST service such as /{id}.  */ ;/**  * Uri template of this REST service such as /{id}.  */ public void setUri(String uri) {     this.uri = uri. }
false;public;0;3;;public String getConsumes() {     return consumes. }
true;public;1;3;/**  * To define the content type what the REST service consumes (accept as input), such as application/xml or application/json.  * This option will override what may be configured on a parent level  */ ;/**  * To define the content type what the REST service consumes (accept as input), such as application/xml or application/json.  * This option will override what may be configured on a parent level  */ public void setConsumes(String consumes) {     this.consumes = consumes. }
false;public;0;3;;public String getProduces() {     return produces. }
true;public;1;3;/**  * To define the content type what the REST service produces (uses for output), such as application/xml or application/json  * This option will override what may be configured on a parent level  */ ;/**  * To define the content type what the REST service produces (uses for output), such as application/xml or application/json  * This option will override what may be configured on a parent level  */ public void setProduces(String produces) {     this.produces = produces. }
false;public;0;3;;public RestBindingMode getBindingMode() {     return bindingMode. }
true;public;1;3;/**  * Sets the binding mode to use.  * This option will override what may be configured on a parent level  * <p/>  * The default value is auto  */ ;/**  * Sets the binding mode to use.  * This option will override what may be configured on a parent level  * <p/>  * The default value is auto  */ public void setBindingMode(RestBindingMode bindingMode) {     this.bindingMode = bindingMode. }
false;public;0;3;;public Boolean getSkipBindingOnErrorCode() {     return skipBindingOnErrorCode. }
true;public;1;3;/**  * Whether to skip binding on output if there is a custom HTTP error code header.  * This allows to build custom error messages that do not bind to json / xml etc, as success messages otherwise will do.  * This option will override what may be configured on a parent level  */ ;/**  * Whether to skip binding on output if there is a custom HTTP error code header.  * This allows to build custom error messages that do not bind to json / xml etc, as success messages otherwise will do.  * This option will override what may be configured on a parent level  */ public void setSkipBindingOnErrorCode(Boolean skipBindingOnErrorCode) {     this.skipBindingOnErrorCode = skipBindingOnErrorCode. }
false;public;0;3;;public Boolean getClientRequestValidation() {     return clientRequestValidation. }
true;public;1;3;/**  * Whether to enable validation of the client request to check whether the Content-Type and Accept headers from  * the client is supported by the Rest-DSL configuration of its consumes/produces settings.  * <p/>  * This can be turned on, to enable this check. In case of validation error, then HTTP Status codes 415 or 406 is returned.  * <p/>  * The default value is false.  */ ;/**  * Whether to enable validation of the client request to check whether the Content-Type and Accept headers from  * the client is supported by the Rest-DSL configuration of its consumes/produces settings.  * <p/>  * This can be turned on, to enable this check. In case of validation error, then HTTP Status codes 415 or 406 is returned.  * <p/>  * The default value is false.  */ public void setClientRequestValidation(Boolean clientRequestValidation) {     this.clientRequestValidation = clientRequestValidation. }
false;public;0;3;;public Boolean getEnableCORS() {     return enableCORS. }
true;public;1;3;/**  * Whether to enable CORS headers in the HTTP response.  * This option will override what may be configured on a parent level  * <p/>  * The default value is false.  */ ;/**  * Whether to enable CORS headers in the HTTP response.  * This option will override what may be configured on a parent level  * <p/>  * The default value is false.  */ public void setEnableCORS(Boolean enableCORS) {     this.enableCORS = enableCORS. }
false;public;0;3;;public String getType() {     return type. }
true;public;1;3;/**  * Sets the class name to use for binding from input to POJO for the incoming data  * This option will override what may be configured on a parent level.  * <p/>  * The canonical name of the class of the input data. Append a [] to the end of the canonical name  * if you want the input to be an array type.  */ ;/**  * Sets the class name to use for binding from input to POJO for the incoming data  * This option will override what may be configured on a parent level.  * <p/>  * The canonical name of the class of the input data. Append a [] to the end of the canonical name  * if you want the input to be an array type.  */ public void setType(String type) {     this.type = type. }
false;public;0;3;;public String getOutType() {     return outType. }
true;public;1;3;/**  * Sets the class name to use for binding from POJO to output for the outgoing data  * This option will override what may be configured on a parent level  * <p/>  * The canonical name of the class of the input data. Append a [] to the end of the canonical name  * if you want the input to be an array type.  */ ;/**  * Sets the class name to use for binding from POJO to output for the outgoing data  * This option will override what may be configured on a parent level  * <p/>  * The canonical name of the class of the input data. Append a [] to the end of the canonical name  * if you want the input to be an array type.  */ public void setOutType(String outType) {     this.outType = outType. }
false;public;0;3;;public String getRouteId() {     return routeId. }
true;public;1;3;/**  * The route id this rest-dsl is using (read-only)  */ ;/**  * The route id this rest-dsl is using (read-only)  */ public void setRouteId(String routeId) {     this.routeId = routeId. }
false;public;0;3;;public Boolean getApiDocs() {     return apiDocs. }
true;public;1;3;/**  * Whether to include or exclude the VerbDefinition in API documentation.  * <p/>  * The default value is true.  */ ;/**  * Whether to include or exclude the VerbDefinition in API documentation.  * <p/>  * The default value is true.  */ public void setApiDocs(Boolean apiDocs) {     this.apiDocs = apiDocs. }
false;public;0;3;;public RestDefinition getRest() {     return rest. }
false;public;1;3;;public void setRest(RestDefinition rest) {     this.rest = rest. }
false;public;0;9;;public RouteDefinition getRoute() {     if (route != null) {         return route.     } else if (toOrRoute instanceof RouteDefinition) {         return (RouteDefinition) toOrRoute.     } else {         return null.     } }
false;public;1;4;;public void setRoute(RouteDefinition route) {     this.route = route.     this.toOrRoute = route. }
false;public;0;9;;public ToDefinition getTo() {     if (to != null) {         return to.     } else if (toOrRoute instanceof ToDefinition) {         return (ToDefinition) toOrRoute.     } else {         return null.     } }
false;public;0;9;;public ToDynamicDefinition getToD() {     if (toD != null) {         return toD.     } else if (toOrRoute instanceof ToDynamicDefinition) {         return (ToDynamicDefinition) toOrRoute.     } else {         return null.     } }
false;public;1;5;;public void setTo(ToDefinition to) {     this.to = to.     this.toD = null.     this.toOrRoute = to. }
false;public;1;5;;public void setToD(ToDynamicDefinition to) {     this.to = null.     this.toD = to.     this.toOrRoute = to. }
false;public;0;3;;public OptionalIdentifiedDefinition<?> getToOrRoute() {     return toOrRoute. }
true;public;1;3;/**  * To route from this REST service to a Camel endpoint, or an inlined route  */ ;/**  * To route from this REST service to a Camel endpoint, or an inlined route  */ public void setToOrRoute(OptionalIdentifiedDefinition<?> toOrRoute) {     this.toOrRoute = toOrRoute. }
false;public;0;3;;// Fluent API // ------------------------------------------------------------------------- public RestDefinition get() {     return rest.get(). }
false;public;1;3;;public RestDefinition get(String uri) {     return rest.get(uri). }
false;public;0;3;;public RestDefinition post() {     return rest.post(). }
false;public;1;3;;public RestDefinition post(String uri) {     return rest.post(uri). }
false;public;0;3;;public RestDefinition put() {     return rest.put(). }
false;public;1;3;;public RestDefinition put(String uri) {     return rest.put(uri). }
false;public;0;3;;public RestDefinition delete() {     return rest.delete(). }
false;public;1;3;;public RestDefinition delete(String uri) {     return rest.delete(uri). }
false;public;0;3;;public RestDefinition head() {     return rest.head(). }
false;public;1;3;;public RestDefinition head(String uri) {     return rest.head(uri). }
false;public;1;3;;public RestDefinition verb(String verb) {     return rest.verb(verb). }
false;public;2;3;;public RestDefinition verb(String verb, String uri) {     return rest.verb(verb, uri). }
false;public;0;19;;public String asVerb() {     // so we infer the verb from the instance type     if (this instanceof GetVerbDefinition) {         return "get".     } else if (this instanceof PostVerbDefinition) {         return "post".     } else if (this instanceof PutVerbDefinition) {         return "put".     } else if (this instanceof PatchVerbDefinition) {         return "patch".     } else if (this instanceof DeleteVerbDefinition) {         return "delete".     } else if (this instanceof HeadVerbDefinition) {         return "head".     } else {         return method.     } }
false;public;0;3;;public Boolean getUsedForGeneratingNodeId() {     return usedForGeneratingNodeId. }
false;public;1;3;;public void setUsedForGeneratingNodeId(Boolean usedForGeneratingNodeId) {     this.usedForGeneratingNodeId = usedForGeneratingNodeId. }
