commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public String getId() {     return id. }
true;public;1;5;/**  * Sets the id of this node  */ ;/**  * Sets the id of this node  */ @XmlAttribute public void setId(String value) {     this.id = value.     customId = true. }
false;public;0;3;;public DescriptionDefinition getDescription() {     return description. }
true;public;1;4;/**  * Sets the description of this node  *  * @param description  sets the text description, use null to not set a text  */ ;/**  * Sets the description of this node  *  * @param description  sets the text description, use null to not set a text  */ @XmlElement public void setDescription(DescriptionDefinition description) {     this.description = description. }
true;public;1;10;/**  * Sets the description of this node  *  * @param text  sets the text description, use null to not set a text  * @return the builder  */ ;// Fluent API // ------------------------------------------------------------------------- /**  * Sets the description of this node  *  * @param text  sets the text description, use null to not set a text  * @return the builder  */ @SuppressWarnings("unchecked") public T description(String text) {     if (text != null) {         if (description == null) {             description = new DescriptionDefinition().         }         description.setText(text).     }     return (T) this. }
true;public;3;19;/**  * Sets the description of this node  *  * @param id  sets the id, use null to not set an id  * @param text  sets the text description, use null to not set a text  * @param lang  sets the language for the description, use null to not set a language  * @return the builder  */ ;/**  * Sets the description of this node  *  * @param id  sets the id, use null to not set an id  * @param text  sets the text description, use null to not set a text  * @param lang  sets the language for the description, use null to not set a language  * @return the builder  */ @SuppressWarnings("unchecked") public T description(String id, String text, String lang) {     if (id != null) {         setId(id).     }     if (text != null) {         if (description == null) {             description = new DescriptionDefinition().         }         description.setText(text).     }     if (lang != null) {         if (description == null) {             description = new DescriptionDefinition().         }         description.setLang(lang).     }     return (T) this. }
true;public;1;5;/**  * Sets the id of this node  *  * @param id  the id  * @return the builder  */ ;/**  * Sets the id of this node  *  * @param id  the id  * @return the builder  */ @SuppressWarnings("unchecked") public T id(String id) {     setId(id).     return (T) this. }
true;public;1;6;/**  * Gets the node id, creating one if not already set.  */ ;/**  * Gets the node id, creating one if not already set.  */ public String idOrCreate(NodeIdFactory factory) {     if (id == null) {         id = factory.createId(this).     }     return id. }
false;public;0;3;;public Boolean getCustomId() {     return customId. }
true;public;1;4;/**  * Whether the node id was explicit set, or was auto generated by Camel.  */ ;/**  * Whether the node id was explicit set, or was auto generated by Camel.  */ @XmlAttribute public void setCustomId(Boolean customId) {     this.customId = customId. }
true;public;0;3;/**  * Returns whether a custom id has been assigned  */ ;/**  * Returns whether a custom id has been assigned  */ public boolean hasCustomIdAssigned() {     return customId != null && customId. }
true;public;0;4;/**  * Returns the description text or null if there is no description text associated with this node  */ ;/**  * Returns the description text or null if there is no description text associated with this node  */ @Override public String getDescriptionText() {     return (description != null) ? description.getText() : null. }
