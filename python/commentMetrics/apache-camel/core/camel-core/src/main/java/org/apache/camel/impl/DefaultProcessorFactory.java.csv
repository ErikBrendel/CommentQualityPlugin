commented;modifiers;parameterAmount;loc;comment;code
false;public;3;18;;@Override public Processor createChildProcessor(RouteContext routeContext, NamedNode definition, boolean mandatory) throws Exception {     String name = definition.getClass().getSimpleName().     FactoryFinder finder = routeContext.getCamelContext().getFactoryFinder(RESOURCE_PATH).     try {         if (finder != null) {             Object object = finder.newInstance(name).             if (object instanceof ProcessorFactory) {                 ProcessorFactory pc = (ProcessorFactory) object.                 return pc.createChildProcessor(routeContext, definition, mandatory).             }         }     } catch (NoFactoryAvailableException e) {     // ignore there is no custom factory     }     return null. }
false;public;2;18;;@Override public Processor createProcessor(RouteContext routeContext, NamedNode definition) throws Exception {     String name = definition.getClass().getSimpleName().     FactoryFinder finder = routeContext.getCamelContext().getFactoryFinder(RESOURCE_PATH).     try {         if (finder != null) {             Object object = finder.newInstance(name).             if (object instanceof ProcessorFactory) {                 ProcessorFactory pc = (ProcessorFactory) object.                 return pc.createProcessor(routeContext, definition).             }         }     } catch (NoFactoryAvailableException e) {     // ignore there is no custom factory     }     return null. }
