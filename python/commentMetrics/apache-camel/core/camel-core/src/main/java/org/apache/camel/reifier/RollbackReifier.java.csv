commented;modifiers;parameterAmount;loc;comment;code
false;public;1;15;;@Override public Processor createProcessor(RouteContext routeContext) {     boolean isMarkRollbackOnly = definition.getMarkRollbackOnly() != null && definition.getMarkRollbackOnly().     boolean isMarkRollbackOnlyLast = definition.getMarkRollbackOnlyLast() != null && definition.getMarkRollbackOnlyLast().     // validate that only either mark rollbacks is chosen and not both     if (isMarkRollbackOnly && isMarkRollbackOnlyLast) {         throw new IllegalArgumentException("Only either one of markRollbackOnly and markRollbackOnlyLast is possible to select as true").     }     RollbackProcessor answer = new RollbackProcessor(definition.getMessage()).     answer.setMarkRollbackOnly(isMarkRollbackOnly).     answer.setMarkRollbackOnlyLast(isMarkRollbackOnlyLast).     return answer. }
