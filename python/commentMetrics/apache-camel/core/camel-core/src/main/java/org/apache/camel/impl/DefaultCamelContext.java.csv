# id;timestamp;commentText;codeText;commentWords;codeWords
DefaultCamelContext -> protected Registry createRegistry();1549264559;Lazily create a default implementation;protected Registry createRegistry() {_        JndiRegistry jndi = new JndiRegistry()__        try {_            _            jndi.getContext()__            return jndi__        } catch (Throwable e) {_            log.debug("Cannot create javax.naming.InitialContext due " + e.getMessage() + ". Will fallback and use SimpleRegistry instead. This exception is ignored.", e)__            return new SimpleRegistry()__        }_    };lazily,create,a,default,implementation;protected,registry,create,registry,jndi,registry,jndi,new,jndi,registry,try,jndi,get,context,return,jndi,catch,throwable,e,log,debug,cannot,create,javax,naming,initial,context,due,e,get,message,will,fallback,and,use,simple,registry,instead,this,exception,is,ignored,e,return,new,simple,registry
DefaultCamelContext -> protected Registry createRegistry();1551167777;Lazily create a default implementation;protected Registry createRegistry() {_        JndiRegistry jndi = new JndiRegistry()__        try {_            _            jndi.getContext()__            return jndi__        } catch (Throwable e) {_            log.debug("Cannot create javax.naming.InitialContext due " + e.getMessage() + ". Will fallback and use SimpleRegistry instead. This exception is ignored.", e)__            return new SimpleRegistry()__        }_    };lazily,create,a,default,implementation;protected,registry,create,registry,jndi,registry,jndi,new,jndi,registry,try,jndi,get,context,return,jndi,catch,throwable,e,log,debug,cannot,create,javax,naming,initial,context,due,e,get,message,will,fallback,and,use,simple,registry,instead,this,exception,is,ignored,e,return,new,simple,registry
DefaultCamelContext -> protected Registry createRegistry();1551167777;Lazily create a default implementation;protected Registry createRegistry() {_        JndiRegistry jndi = new JndiRegistry()__        try {_            _            jndi.getContext()__            return jndi__        } catch (Throwable e) {_            log.debug("Cannot create javax.naming.InitialContext due " + e.getMessage() + ". Will fallback and use SimpleRegistry instead. This exception is ignored.", e)__            return new SimpleRegistry()__        }_    };lazily,create,a,default,implementation;protected,registry,create,registry,jndi,registry,jndi,new,jndi,registry,try,jndi,get,context,return,jndi,catch,throwable,e,log,debug,cannot,create,javax,naming,initial,context,due,e,get,message,will,fallback,and,use,simple,registry,instead,this,exception,is,ignored,e,return,new,simple,registry
DefaultCamelContext -> protected Registry createRegistry();1551167777;Lazily create a default implementation;protected Registry createRegistry() {_        return new DefaultRegistry()__    };lazily,create,a,default,implementation;protected,registry,create,registry,return,new,default,registry
DefaultCamelContext -> protected Registry createRegistry();1551167777;Lazily create a default implementation;protected Registry createRegistry() {_        return new DefaultRegistry()__    };lazily,create,a,default,implementation;protected,registry,create,registry,return,new,default,registry
DefaultCamelContext -> protected Registry createRegistry();1551167777;Lazily create a default implementation;protected Registry createRegistry() {_        return new DefaultRegistry()__    };lazily,create,a,default,implementation;protected,registry,create,registry,return,new,default,registry
DefaultCamelContext -> public DefaultCamelContext(Registry registry);1549264559;Creates the {@link CamelContext} using the given registry__@param registry the registry;public DefaultCamelContext(Registry registry) {_        super(registry)__    };creates,the,link,camel,context,using,the,given,registry,param,registry,the,registry;public,default,camel,context,registry,registry,super,registry
DefaultCamelContext -> public DefaultCamelContext(Registry registry);1551167777;Creates the {@link CamelContext} using the given registry__@param registry the registry;public DefaultCamelContext(Registry registry) {_        super(registry)__    };creates,the,link,camel,context,using,the,given,registry,param,registry,the,registry;public,default,camel,context,registry,registry,super,registry
DefaultCamelContext -> public DefaultCamelContext(Registry registry);1551167777;Creates the {@link CamelContext} using the given registry__@param registry the registry;public DefaultCamelContext(Registry registry) {_        super(registry)__    };creates,the,link,camel,context,using,the,given,registry,param,registry,the,registry;public,default,camel,context,registry,registry,super,registry
DefaultCamelContext -> public DefaultCamelContext(Registry registry);1551167777;Creates the {@link CamelContext} using the given registry__@param registry the registry;public DefaultCamelContext(Registry registry) {_        super(registry)__    };creates,the,link,camel,context,using,the,given,registry,param,registry,the,registry;public,default,camel,context,registry,registry,super,registry
DefaultCamelContext -> public DefaultCamelContext(Registry registry);1551167777;Creates the {@link CamelContext} using the given registry__@param registry the registry;public DefaultCamelContext(Registry registry) {_        super(registry)__    };creates,the,link,camel,context,using,the,given,registry,param,registry,the,registry;public,default,camel,context,registry,registry,super,registry
DefaultCamelContext -> public DefaultCamelContext(Registry registry);1551167777;Creates the {@link CamelContext} using the given registry__@param registry the registry;public DefaultCamelContext(Registry registry) {_        super(registry)__    };creates,the,link,camel,context,using,the,given,registry,param,registry,the,registry;public,default,camel,context,registry,registry,super,registry
DefaultCamelContext -> @Deprecated     public DefaultCamelContext(Context jndiContext);1551167777;Creates the {@link CamelContext} using the given JNDI context as the registry__@param jndiContext the JNDI context_@deprecated create a new {@link JndiRegistry} and use the constructor that accepts this registry.;@Deprecated_    public DefaultCamelContext(Context jndiContext) {_        this(new JndiRegistry(jndiContext))__    };creates,the,link,camel,context,using,the,given,jndi,context,as,the,registry,param,jndi,context,the,jndi,context,deprecated,create,a,new,link,jndi,registry,and,use,the,constructor,that,accepts,this,registry;deprecated,public,default,camel,context,context,jndi,context,this,new,jndi,registry,jndi,context
DefaultCamelContext -> @Deprecated     public DefaultCamelContext(Context jndiContext);1551167777;Creates the {@link CamelContext} using the given JNDI context as the registry__@param jndiContext the JNDI context_@deprecated create a new {@link JndiRegistry} and use the constructor that accepts this registry.;@Deprecated_    public DefaultCamelContext(Context jndiContext) {_        this(new JndiRegistry(jndiContext))__    };creates,the,link,camel,context,using,the,given,jndi,context,as,the,registry,param,jndi,context,the,jndi,context,deprecated,create,a,new,link,jndi,registry,and,use,the,constructor,that,accepts,this,registry;deprecated,public,default,camel,context,context,jndi,context,this,new,jndi,registry,jndi,context
DefaultCamelContext -> @Deprecated     public DefaultCamelContext(Context jndiContext);1551167777;Creates the {@link CamelContext} using the given JNDI context as the registry__@param jndiContext the JNDI context_@deprecated create a new {@link JndiRegistry} and use the constructor that accepts this registry.;@Deprecated_    public DefaultCamelContext(Context jndiContext) {_        this(new JndiRegistry(jndiContext))__    };creates,the,link,camel,context,using,the,given,jndi,context,as,the,registry,param,jndi,context,the,jndi,context,deprecated,create,a,new,link,jndi,registry,and,use,the,constructor,that,accepts,this,registry;deprecated,public,default,camel,context,context,jndi,context,this,new,jndi,registry,jndi,context
DefaultCamelContext -> @Deprecated     public DefaultCamelContext(Context jndiContext);1551167777;Creates the {@link CamelContext} using the given JNDI context as the registry__@param jndiContext the JNDI context_@deprecated create a new {@link JndiRegistry} and use the constructor that accepts this registry.;@Deprecated_    public DefaultCamelContext(Context jndiContext) {_        this(new JndiRegistry(jndiContext))__    };creates,the,link,camel,context,using,the,given,jndi,context,as,the,registry,param,jndi,context,the,jndi,context,deprecated,create,a,new,link,jndi,registry,and,use,the,constructor,that,accepts,this,registry;deprecated,public,default,camel,context,context,jndi,context,this,new,jndi,registry,jndi,context
DefaultCamelContext -> @Deprecated     public DefaultCamelContext(Context jndiContext);1551167777;Creates the {@link CamelContext} using the given JNDI context as the registry__@param jndiContext the JNDI context_@deprecated create a new {@link JndiRegistry} and use the constructor that accepts this registry.;@Deprecated_    public DefaultCamelContext(Context jndiContext) {_        this(new JndiRegistry(jndiContext))__    };creates,the,link,camel,context,using,the,given,jndi,context,as,the,registry,param,jndi,context,the,jndi,context,deprecated,create,a,new,link,jndi,registry,and,use,the,constructor,that,accepts,this,registry;deprecated,public,default,camel,context,context,jndi,context,this,new,jndi,registry,jndi,context
DefaultCamelContext -> public DefaultCamelContext(BeanRepository repository);1551167777;Creates the {@link CamelContext} using the given {@link BeanRepository}_as first-choice repository, and the {@link SimpleRegistry} as fallback, via_the {@link DefaultRegistry} implementation.__@param repository the bean repository.;public DefaultCamelContext(BeanRepository repository) {_        super(new DefaultRegistry(repository))__    };creates,the,link,camel,context,using,the,given,link,bean,repository,as,first,choice,repository,and,the,link,simple,registry,as,fallback,via,the,link,default,registry,implementation,param,repository,the,bean,repository;public,default,camel,context,bean,repository,repository,super,new,default,registry,repository
DefaultCamelContext -> public DefaultCamelContext(BeanRepository repository);1551167777;Creates the {@link CamelContext} using the given {@link BeanRepository}_as first-choice repository, and the {@link SimpleRegistry} as fallback, via_the {@link DefaultRegistry} implementation.__@param repository the bean repository.;public DefaultCamelContext(BeanRepository repository) {_        super(new DefaultRegistry(repository))__    };creates,the,link,camel,context,using,the,given,link,bean,repository,as,first,choice,repository,and,the,link,simple,registry,as,fallback,via,the,link,default,registry,implementation,param,repository,the,bean,repository;public,default,camel,context,bean,repository,repository,super,new,default,registry,repository
DefaultCamelContext -> public DefaultCamelContext(BeanRepository repository);1551167777;Creates the {@link CamelContext} using the given {@link BeanRepository}_as first-choice repository, and the {@link SimpleRegistry} as fallback, via_the {@link DefaultRegistry} implementation.__@param repository the bean repository.;public DefaultCamelContext(BeanRepository repository) {_        super(new DefaultRegistry(repository))__    };creates,the,link,camel,context,using,the,given,link,bean,repository,as,first,choice,repository,and,the,link,simple,registry,as,fallback,via,the,link,default,registry,implementation,param,repository,the,bean,repository;public,default,camel,context,bean,repository,repository,super,new,default,registry,repository
DefaultCamelContext -> public DefaultCamelContext(BeanRepository repository);1551167777;Creates the {@link CamelContext} using the given {@link BeanRepository}_as first-choice repository, and the {@link SimpleRegistry} as fallback, via_the {@link DefaultRegistry} implementation.__@param repository the bean repository.;public DefaultCamelContext(BeanRepository repository) {_        super(new DefaultRegistry(repository))__    };creates,the,link,camel,context,using,the,given,link,bean,repository,as,first,choice,repository,and,the,link,simple,registry,as,fallback,via,the,link,default,registry,implementation,param,repository,the,bean,repository;public,default,camel,context,bean,repository,repository,super,new,default,registry,repository
DefaultCamelContext -> public DefaultCamelContext(BeanRepository repository);1551167777;Creates the {@link CamelContext} using the given {@link BeanRepository}_as first-choice repository, and the {@link org.apache.camel.support.SimpleRegistry} as fallback, via_the {@link DefaultRegistry} implementation.__@param repository the bean repository.;public DefaultCamelContext(BeanRepository repository) {_        super(new DefaultRegistry(repository))__    };creates,the,link,camel,context,using,the,given,link,bean,repository,as,first,choice,repository,and,the,link,org,apache,camel,support,simple,registry,as,fallback,via,the,link,default,registry,implementation,param,repository,the,bean,repository;public,default,camel,context,bean,repository,repository,super,new,default,registry,repository
DefaultCamelContext -> protected ComponentResolver createComponentResolver();1549264559;Lazily create a default implementation;protected ComponentResolver createComponentResolver() {_        return new DefaultComponentResolver()__    };lazily,create,a,default,implementation;protected,component,resolver,create,component,resolver,return,new,default,component,resolver
DefaultCamelContext -> protected ComponentResolver createComponentResolver();1551167777;Lazily create a default implementation;protected ComponentResolver createComponentResolver() {_        return new DefaultComponentResolver()__    };lazily,create,a,default,implementation;protected,component,resolver,create,component,resolver,return,new,default,component,resolver
DefaultCamelContext -> protected ComponentResolver createComponentResolver();1551167777;Lazily create a default implementation;protected ComponentResolver createComponentResolver() {_        return new DefaultComponentResolver()__    };lazily,create,a,default,implementation;protected,component,resolver,create,component,resolver,return,new,default,component,resolver
DefaultCamelContext -> protected ComponentResolver createComponentResolver();1551167777;Lazily create a default implementation;protected ComponentResolver createComponentResolver() {_        return new DefaultComponentResolver()__    };lazily,create,a,default,implementation;protected,component,resolver,create,component,resolver,return,new,default,component,resolver
DefaultCamelContext -> protected ComponentResolver createComponentResolver();1551167777;Lazily create a default implementation;protected ComponentResolver createComponentResolver() {_        return new DefaultComponentResolver()__    };lazily,create,a,default,implementation;protected,component,resolver,create,component,resolver,return,new,default,component,resolver
DefaultCamelContext -> protected ComponentResolver createComponentResolver();1551167777;Lazily create a default implementation;protected ComponentResolver createComponentResolver() {_        return new DefaultComponentResolver()__    };lazily,create,a,default,implementation;protected,component,resolver,create,component,resolver,return,new,default,component,resolver
DefaultCamelContext -> public DefaultCamelContext();1549264559;Creates the {@link CamelContext} using {@link JndiRegistry} as registry,_but will silently fallback and use {@link SimpleRegistry} if JNDI cannot be used._<p/>_Use one of the other constructors to force use an explicit registry / JNDI.;public DefaultCamelContext() {_        super()__    };creates,the,link,camel,context,using,link,jndi,registry,as,registry,but,will,silently,fallback,and,use,link,simple,registry,if,jndi,cannot,be,used,p,use,one,of,the,other,constructors,to,force,use,an,explicit,registry,jndi;public,default,camel,context,super
DefaultCamelContext -> public DefaultCamelContext();1551167777;Creates the {@link CamelContext} using {@link DefaultRegistry} as registry._<p/>_Use one of the other constructors to force use an explicit registry.;public DefaultCamelContext() {_        super()__    };creates,the,link,camel,context,using,link,default,registry,as,registry,p,use,one,of,the,other,constructors,to,force,use,an,explicit,registry;public,default,camel,context,super
DefaultCamelContext -> public DefaultCamelContext();1551167777;Creates the {@link CamelContext} using {@link DefaultRegistry} as registry._<p/>_Use one of the other constructors to force use an explicit registry.;public DefaultCamelContext() {_        super()__    };creates,the,link,camel,context,using,link,default,registry,as,registry,p,use,one,of,the,other,constructors,to,force,use,an,explicit,registry;public,default,camel,context,super
DefaultCamelContext -> public DefaultCamelContext();1551167777;Creates the {@link CamelContext} using {@link DefaultRegistry} as registry._<p/>_Use one of the other constructors to force use an explicit registry.;public DefaultCamelContext() {_        super()__    };creates,the,link,camel,context,using,link,default,registry,as,registry,p,use,one,of,the,other,constructors,to,force,use,an,explicit,registry;public,default,camel,context,super
DefaultCamelContext -> public DefaultCamelContext();1551167777;Creates the {@link CamelContext} using {@link DefaultRegistry} as registry._<p/>_Use one of the other constructors to force use an explicit registry.;public DefaultCamelContext() {_        super()__    };creates,the,link,camel,context,using,link,default,registry,as,registry,p,use,one,of,the,other,constructors,to,force,use,an,explicit,registry;public,default,camel,context,super
DefaultCamelContext -> public DefaultCamelContext();1551167777;Creates the {@link CamelContext} using {@link DefaultRegistry} as registry._<p/>_Use one of the other constructors to force use an explicit registry.;public DefaultCamelContext() {_        super()__    };creates,the,link,camel,context,using,link,default,registry,as,registry,p,use,one,of,the,other,constructors,to,force,use,an,explicit,registry;public,default,camel,context,super
DefaultCamelContext -> public DefaultCamelContext(boolean init);1551167777;Creates the {@link CamelContext} and allows to control whether the context_should automatic initialize or not._<p/>_This is used by some Camel components such as camel-cdi and camel-blueprint, however_this constructor is not intended for regular Camel end users.__@param init whether to automatic initialize.;public DefaultCamelContext(boolean init) {_        super(init)__    };creates,the,link,camel,context,and,allows,to,control,whether,the,context,should,automatic,initialize,or,not,p,this,is,used,by,some,camel,components,such,as,camel,cdi,and,camel,blueprint,however,this,constructor,is,not,intended,for,regular,camel,end,users,param,init,whether,to,automatic,initialize;public,default,camel,context,boolean,init,super,init
DefaultCamelContext -> public DefaultCamelContext(boolean init);1551167777;Creates the {@link CamelContext} and allows to control whether the context_should automatic initialize or not._<p/>_This is used by some Camel components such as camel-cdi and camel-blueprint, however_this constructor is not intended for regular Camel end users.__@param init whether to automatic initialize.;public DefaultCamelContext(boolean init) {_        super(init)__    };creates,the,link,camel,context,and,allows,to,control,whether,the,context,should,automatic,initialize,or,not,p,this,is,used,by,some,camel,components,such,as,camel,cdi,and,camel,blueprint,however,this,constructor,is,not,intended,for,regular,camel,end,users,param,init,whether,to,automatic,initialize;public,default,camel,context,boolean,init,super,init
DefaultCamelContext -> public DefaultCamelContext(boolean init);1551167777;Creates the {@link CamelContext} and allows to control whether the context_should automatic initialize or not._<p/>_This is used by some Camel components such as camel-cdi and camel-blueprint, however_this constructor is not intended for regular Camel end users.__@param init whether to automatic initialize.;public DefaultCamelContext(boolean init) {_        super(init)__    };creates,the,link,camel,context,and,allows,to,control,whether,the,context,should,automatic,initialize,or,not,p,this,is,used,by,some,camel,components,such,as,camel,cdi,and,camel,blueprint,however,this,constructor,is,not,intended,for,regular,camel,end,users,param,init,whether,to,automatic,initialize;public,default,camel,context,boolean,init,super,init
DefaultCamelContext -> public DefaultCamelContext(boolean init);1551167777;Creates the {@link CamelContext} and allows to control whether the context_should automatic initialize or not._<p/>_This is used by some Camel components such as camel-cdi and camel-blueprint, however_this constructor is not intended for regular Camel end users.__@param init whether to automatic initialize.;public DefaultCamelContext(boolean init) {_        super(init)__    };creates,the,link,camel,context,and,allows,to,control,whether,the,context,should,automatic,initialize,or,not,p,this,is,used,by,some,camel,components,such,as,camel,cdi,and,camel,blueprint,however,this,constructor,is,not,intended,for,regular,camel,end,users,param,init,whether,to,automatic,initialize;public,default,camel,context,boolean,init,super,init
DefaultCamelContext -> protected TypeConverter createTypeConverter();1549264559;Lazily create a default implementation;protected TypeConverter createTypeConverter() {_        BaseTypeConverterRegistry answer__        answer = new DefaultTypeConverter(getPackageScanClassResolver(), getInjector(), getDefaultFactoryFinder(), isLoadTypeConverters())__        answer.setCamelContext(this)__        setTypeConverterRegistry(answer)__        return answer__    };lazily,create,a,default,implementation;protected,type,converter,create,type,converter,base,type,converter,registry,answer,answer,new,default,type,converter,get,package,scan,class,resolver,get,injector,get,default,factory,finder,is,load,type,converters,answer,set,camel,context,this,set,type,converter,registry,answer,return,answer
DefaultCamelContext -> protected TypeConverter createTypeConverter();1551167777;Lazily create a default implementation;protected TypeConverter createTypeConverter() {_        BaseTypeConverterRegistry answer__        answer = new DefaultTypeConverter(getPackageScanClassResolver(), getInjector(), getDefaultFactoryFinder(), isLoadTypeConverters())__        answer.setCamelContext(this)__        setTypeConverterRegistry(answer)__        return answer__    };lazily,create,a,default,implementation;protected,type,converter,create,type,converter,base,type,converter,registry,answer,answer,new,default,type,converter,get,package,scan,class,resolver,get,injector,get,default,factory,finder,is,load,type,converters,answer,set,camel,context,this,set,type,converter,registry,answer,return,answer
DefaultCamelContext -> protected TypeConverter createTypeConverter();1551167777;Lazily create a default implementation;protected TypeConverter createTypeConverter() {_        BaseTypeConverterRegistry answer__        answer = new DefaultTypeConverter(getPackageScanClassResolver(), getInjector(), getDefaultFactoryFinder(), isLoadTypeConverters())__        answer.setCamelContext(this)__        setTypeConverterRegistry(answer)__        return answer__    };lazily,create,a,default,implementation;protected,type,converter,create,type,converter,base,type,converter,registry,answer,answer,new,default,type,converter,get,package,scan,class,resolver,get,injector,get,default,factory,finder,is,load,type,converters,answer,set,camel,context,this,set,type,converter,registry,answer,return,answer
DefaultCamelContext -> protected TypeConverter createTypeConverter();1551167777;Lazily create a default implementation;protected TypeConverter createTypeConverter() {_        BaseTypeConverterRegistry answer__        answer = new DefaultTypeConverter(getPackageScanClassResolver(), getInjector(), getDefaultFactoryFinder(), isLoadTypeConverters())__        answer.setCamelContext(this)__        setTypeConverterRegistry(answer)__        return answer__    };lazily,create,a,default,implementation;protected,type,converter,create,type,converter,base,type,converter,registry,answer,answer,new,default,type,converter,get,package,scan,class,resolver,get,injector,get,default,factory,finder,is,load,type,converters,answer,set,camel,context,this,set,type,converter,registry,answer,return,answer
DefaultCamelContext -> protected TypeConverter createTypeConverter();1551167777;Lazily create a default implementation;protected TypeConverter createTypeConverter() {_        BaseTypeConverterRegistry answer__        answer = new DefaultTypeConverter(getPackageScanClassResolver(), getInjector(), getDefaultFactoryFinder(), isLoadTypeConverters())__        answer.setCamelContext(this)__        setTypeConverterRegistry(answer)__        return answer__    };lazily,create,a,default,implementation;protected,type,converter,create,type,converter,base,type,converter,registry,answer,answer,new,default,type,converter,get,package,scan,class,resolver,get,injector,get,default,factory,finder,is,load,type,converters,answer,set,camel,context,this,set,type,converter,registry,answer,return,answer
DefaultCamelContext -> protected TypeConverter createTypeConverter();1551167777;Lazily create a default implementation;protected TypeConverter createTypeConverter() {_        BaseTypeConverterRegistry answer__        answer = new DefaultTypeConverter(getPackageScanClassResolver(), getInjector(), getDefaultFactoryFinder(), isLoadTypeConverters())__        answer.setCamelContext(this)__        setTypeConverterRegistry(answer)__        return answer__    };lazily,create,a,default,implementation;protected,type,converter,create,type,converter,base,type,converter,registry,answer,answer,new,default,type,converter,get,package,scan,class,resolver,get,injector,get,default,factory,finder,is,load,type,converters,answer,set,camel,context,this,set,type,converter,registry,answer,return,answer
DefaultCamelContext -> protected Injector createInjector();1549264559;Lazily create a default implementation;protected Injector createInjector() {_        FactoryFinder finder = getDefaultFactoryFinder()__        try {_            return (Injector) finder.newInstance("Injector")__        } catch (NoFactoryAvailableException e) {_            _            return new DefaultInjector(this)__        }_    };lazily,create,a,default,implementation;protected,injector,create,injector,factory,finder,finder,get,default,factory,finder,try,return,injector,finder,new,instance,injector,catch,no,factory,available,exception,e,return,new,default,injector,this
DefaultCamelContext -> protected Injector createInjector();1551167777;Lazily create a default implementation;protected Injector createInjector() {_        FactoryFinder finder = getDefaultFactoryFinder()__        try {_            return (Injector) finder.newInstance("Injector")__        } catch (NoFactoryAvailableException e) {_            _            return new DefaultInjector(this)__        }_    };lazily,create,a,default,implementation;protected,injector,create,injector,factory,finder,finder,get,default,factory,finder,try,return,injector,finder,new,instance,injector,catch,no,factory,available,exception,e,return,new,default,injector,this
DefaultCamelContext -> protected Injector createInjector();1551167777;Lazily create a default implementation;protected Injector createInjector() {_        FactoryFinder finder = getDefaultFactoryFinder()__        try {_            return (Injector) finder.newInstance("Injector")__        } catch (NoFactoryAvailableException e) {_            _            return new DefaultInjector(this)__        }_    };lazily,create,a,default,implementation;protected,injector,create,injector,factory,finder,finder,get,default,factory,finder,try,return,injector,finder,new,instance,injector,catch,no,factory,available,exception,e,return,new,default,injector,this
DefaultCamelContext -> protected Injector createInjector();1551167777;Lazily create a default implementation;protected Injector createInjector() {_        FactoryFinder finder = getDefaultFactoryFinder()__        try {_            return (Injector) finder.newInstance("Injector")__        } catch (NoFactoryAvailableException e) {_            _            return new DefaultInjector(this)__        }_    };lazily,create,a,default,implementation;protected,injector,create,injector,factory,finder,finder,get,default,factory,finder,try,return,injector,finder,new,instance,injector,catch,no,factory,available,exception,e,return,new,default,injector,this
DefaultCamelContext -> protected Injector createInjector();1551167777;Lazily create a default implementation;protected Injector createInjector() {_        FactoryFinder finder = getDefaultFactoryFinder()__        try {_            return (Injector) finder.newInstance("Injector")__        } catch (NoFactoryAvailableException e) {_            _            return new DefaultInjector(this)__        }_    };lazily,create,a,default,implementation;protected,injector,create,injector,factory,finder,finder,get,default,factory,finder,try,return,injector,finder,new,instance,injector,catch,no,factory,available,exception,e,return,new,default,injector,this
DefaultCamelContext -> protected Injector createInjector();1551167777;Lazily create a default implementation;protected Injector createInjector() {_        FactoryFinder finder = getDefaultFactoryFinder()__        try {_            return (Injector) finder.newInstance("Injector")__        } catch (NoFactoryAvailableException e) {_            _            return new DefaultInjector(this)__        }_    };lazily,create,a,default,implementation;protected,injector,create,injector,factory,finder,finder,get,default,factory,finder,try,return,injector,finder,new,instance,injector,catch,no,factory,available,exception,e,return,new,default,injector,this
