commented;modifiers;parameterAmount;loc;comment;code
false;public;1;22;;@Override public Processor createProcessor(RouteContext routeContext) throws Exception {     Expression expression = definition.getExpression().createExpression(routeContext).     String delimiter = definition.getUriDelimiter() != null ? definition.getUriDelimiter() : DEFAULT_DELIMITER.     RoutingSlip routingSlip = new RoutingSlip(routeContext.getCamelContext(), expression, delimiter).     if (definition.getIgnoreInvalidEndpoints() != null) {         routingSlip.setIgnoreInvalidEndpoints(definition.getIgnoreInvalidEndpoints()).     }     if (definition.getCacheSize() != null) {         routingSlip.setCacheSize(definition.getCacheSize()).     }     // and wrap this in an error handler     ErrorHandlerFactory builder = ((RouteDefinition) routeContext.getRoute()).getErrorHandlerBuilder().     // create error handler (create error handler directly to keep it light weight,     // instead of using ProcessorDefinition.wrapInErrorHandler)     AsyncProcessor errorHandler = (AsyncProcessor) builder.createErrorHandler(routeContext, routingSlip.newRoutingSlipProcessorForErrorHandler()).     routingSlip.setErrorHandler(errorHandler).     return routingSlip. }
