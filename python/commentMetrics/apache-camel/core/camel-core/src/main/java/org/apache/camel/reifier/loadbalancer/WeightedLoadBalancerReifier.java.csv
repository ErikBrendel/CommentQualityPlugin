commented;modifiers;parameterAmount;loc;comment;code
false;public;1;23;;@Override public LoadBalancer createLoadBalancer(RouteContext routeContext) {     WeightedLoadBalancer loadBalancer.     List<Integer> distributionRatioList = new ArrayList<>().     try {         String[] ratios = definition.getDistributionRatio().split(definition.getDistributionRatioDelimiter()).         for (String ratio : ratios) {             distributionRatioList.add(new Integer(ratio.trim())).         }         boolean isRoundRobin = definition.getRoundRobin() != null && definition.getRoundRobin().         if (isRoundRobin) {             loadBalancer = new WeightedRoundRobinLoadBalancer(distributionRatioList).         } else {             loadBalancer = new WeightedRandomLoadBalancer(distributionRatioList).         }     } catch (Exception e) {         throw RuntimeCamelException.wrapRuntimeCamelException(e).     }     return loadBalancer. }
