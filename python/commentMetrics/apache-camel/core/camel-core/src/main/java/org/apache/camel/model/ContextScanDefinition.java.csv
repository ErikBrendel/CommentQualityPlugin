commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public Boolean getIncludeNonSingletons() {     return includeNonSingletons. }
true;public;1;3;/**  * Whether to include non-singleton beans (prototypes)  * <p/>  * By default only singleton beans is included in the context scan  */ ;/**  * Whether to include non-singleton beans (prototypes)  * <p/>  * By default only singleton beans is included in the context scan  */ public void setIncludeNonSingletons(Boolean includeNonSingletons) {     this.includeNonSingletons = includeNonSingletons. }
false;public;0;3;;public List<String> getExcludes() {     return excludes. }
true;public;1;3;/**  * Exclude finding route builder from these java package names.  */ ;/**  * Exclude finding route builder from these java package names.  */ public void setExcludes(List<String> excludes) {     this.excludes = excludes. }
false;public;0;3;;public List<String> getIncludes() {     return includes. }
true;public;1;3;/**  * Include finding route builder from these java package names.  */ ;/**  * Include finding route builder from these java package names.  */ public void setIncludes(List<String> includes) {     this.includes = includes. }
false;protected;0;4;;protected void clear() {     excludes.clear().     includes.clear(). }
