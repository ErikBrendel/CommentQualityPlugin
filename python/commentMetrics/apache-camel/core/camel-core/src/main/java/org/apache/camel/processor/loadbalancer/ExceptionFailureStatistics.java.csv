commented;modifiers;parameterAmount;loc;comment;code
false;public;1;7;;public void init(List<Class<?>> exceptions) {     if (exceptions != null) {         for (Class<?> exception : exceptions) {             counters.put(exception, new AtomicLong()).         }     } }
false;public;0;3;;public Iterator<Class<?>> getExceptions() {     return counters.keySet().iterator(). }
false;public;1;8;;public long getFailureCounter(Class<?> exception) {     AtomicLong counter = counters.get(exception).     if (counter != null) {         return counter.get().     } else {         return fallbackCounter.get().     } }
false;public;1;10;;public void onHandledFailure(Exception exception) {     Class<?> clazz = exception.getClass().     AtomicLong counter = counters.get(clazz).     if (counter != null) {         counter.incrementAndGet().     } else {         fallbackCounter.incrementAndGet().     } }
false;public;0;6;;public void reset() {     for (AtomicLong counter : counters.values()) {         counter.set(0).     }     fallbackCounter.set(0). }
