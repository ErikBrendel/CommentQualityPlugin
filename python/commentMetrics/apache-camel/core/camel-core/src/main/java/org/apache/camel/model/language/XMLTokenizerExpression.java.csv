commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public String getLanguage() {     return "xtokenize". }
false;public;0;3;;public String getHeaderName() {     return headerName. }
true;public;1;3;/**  * Name of header to tokenize instead of using the message body.  */ ;/**  * Name of header to tokenize instead of using the message body.  */ public void setHeaderName(String headerName) {     this.headerName = headerName. }
false;public;0;3;;public String getMode() {     return mode. }
true;public;1;3;/**  * The extraction mode. The available extraction modes are:  * <ul>  *     <li>i - injecting the contextual namespace bindings into the extracted token (default)</li>  *     <li>w - wrapping the extracted token in its ancestor context</li>  *     <li>u - unwrapping the extracted token to its child content</li>  *     <li>t - extracting the text content of the specified element</li>  * </ul>  */ ;/**  * The extraction mode. The available extraction modes are:  * <ul>  *     <li>i - injecting the contextual namespace bindings into the extracted token (default)</li>  *     <li>w - wrapping the extracted token in its ancestor context</li>  *     <li>u - unwrapping the extracted token to its child content</li>  *     <li>t - extracting the text content of the specified element</li>  * </ul>  */ public void setMode(String mode) {     this.mode = mode. }
false;public;0;3;;public Integer getGroup() {     return group. }
true;public;1;3;/**  * To group N parts together  */ ;/**  * To group N parts together  */ public void setGroup(Integer group) {     this.group = group. }
false;protected;2;13;;@Override protected void configureExpression(CamelContext camelContext, Expression expression) {     if (headerName != null) {         setProperty(expression, "headerName", headerName).     }     if (mode != null) {         setProperty(expression, "mode", mode).     }     if (group != null) {         setProperty(expression, "group", group).     }     super.configureExpression(camelContext, expression). }
false;protected;2;13;;@Override protected void configurePredicate(CamelContext camelContext, Predicate predicate) {     if (headerName != null) {         setProperty(predicate, "headerName", headerName).     }     if (mode != null) {         setProperty(predicate, "mode", mode).     }     if (group != null) {         setProperty(predicate, "group", group).     }     super.configurePredicate(camelContext, predicate). }
