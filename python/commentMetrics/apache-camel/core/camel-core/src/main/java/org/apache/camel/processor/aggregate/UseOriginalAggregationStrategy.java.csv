commented;modifiers;parameterAmount;loc;comment;code
true;public;1;3;/**  * Creates a new instance as a clone of this strategy with the new given original.  */ ;/**  * Creates a new instance as a clone of this strategy with the new given original.  */ public UseOriginalAggregationStrategy newInstance(Exchange original) {     return new UseOriginalAggregationStrategy(original, propagateException). }
false;public;2;13;;public Exchange aggregate(Exchange oldExchange, Exchange newExchange) {     if (propagateException) {         Exception exception = checkException(oldExchange, newExchange).         if (exception != null) {             if (original != null) {                 original.setException(exception).             } else {                 oldExchange.setException(exception).             }         }     }     return original != null ? original : oldExchange. }
false;protected;2;9;;protected Exception checkException(Exchange oldExchange, Exchange newExchange) {     if (oldExchange == null) {         return newExchange.getException().     } else {         return (newExchange != null && newExchange.getException() != null) ? newExchange.getException() : oldExchange.getException().     } }
false;public;0;3;;public Exchange getOriginal() {     return original. }
false;public;0;4;;@Override public String toString() {     return "UseOriginalAggregationStrategy". }
