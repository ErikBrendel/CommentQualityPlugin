commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;// ************************************************************************* // Properties // ************************************************************************* public List<String> getServers() {     return servers. }
true;public;1;3;/**  * Sets the server list.  * Each entry can be a list of servers separated by comma in the format:  *  *   [service@]host:port,[service@]host2:port,[service@]host3:port  *  * @param servers a list of servers.  * @return this instance  */ ;/**  * Sets the server list.  * Each entry can be a list of servers separated by comma in the format:  *  *   [service@]host:port,[service@]host2:port,[service@]host3:port  *  * @param servers a list of servers.  * @return this instance  */ public void setServers(List<String> servers) {     this.servers = servers. }
true;public;1;4;/**  * Sets the server list.  * Each entry can be a list of servers separated by comma in the format:  *  *   [service@]host:port,[service@]host2:port,[service@]host3:port  *  * @param servers a list of servers.  * @return this instance  */ ;// ************************************************************************* // Fluent API // ************************************************************************* /**  * Sets the server list.  * Each entry can be a list of servers separated by comma in the format:  *  *   [service@]host:port,[service@]host2:port,[service@]host3:port  *  * @param servers a list of servers.  * @return this instance  */ public StaticServiceCallServiceDiscoveryConfiguration servers(List<String> servers) {     setServers(servers).     return this. }
true;public;1;13;/**  * Sets the server list.  *  * @param servers a list of servers separated by comma in the format: [service@]host:port,[service@]host2:port,[service@]host3:port  * @return this instance  */ ;/**  * Sets the server list.  *  * @param servers a list of servers separated by comma in the format: [service@]host:port,[service@]host2:port,[service@]host3:port  * @return this instance  */ public StaticServiceCallServiceDiscoveryConfiguration servers(String servers) {     if (ObjectHelper.isNotEmpty(servers)) {         String[] parts = servers.split(",").         if (this.servers == null) {             this.servers = new ArrayList<>().         }         this.servers.addAll(Arrays.asList(parts)).     }     return this. }
false;protected;2;12;;// ************************************************************************* // Utilities // ************************************************************************* protected void postProcessFactoryParameters(CamelContext camelContext, Map<String, Object> parameters) throws Exception {     List<String> servers = List.class.cast(parameters.get("servers")).     if (ObjectHelper.isNotEmpty(servers)) {         final ListIterator<String> it = servers.listIterator().         while (it.hasNext()) {             it.set(camelContext.resolvePropertyPlaceholders(it.next())).         }         parameters.put("servers", servers).     } }
