commented;modifiers;parameterAmount;loc;comment;code
false;public;1;4;;public ThreadPoolBuilder poolSize(int poolSize) {     profile.setPoolSize(poolSize).     return this. }
false;public;1;4;;public ThreadPoolBuilder maxPoolSize(int maxPoolSize) {     profile.setMaxPoolSize(maxPoolSize).     return this. }
false;public;2;5;;public ThreadPoolBuilder keepAliveTime(long keepAliveTime, TimeUnit timeUnit) {     profile.setKeepAliveTime(keepAliveTime).     profile.setTimeUnit(timeUnit).     return this. }
false;public;1;4;;public ThreadPoolBuilder keepAliveTime(long keepAliveTime) {     profile.setKeepAliveTime(keepAliveTime).     return this. }
false;public;1;4;;public ThreadPoolBuilder maxQueueSize(int maxQueueSize) {     profile.setMaxQueueSize(maxQueueSize).     return this. }
false;public;1;4;;public ThreadPoolBuilder rejectedPolicy(ThreadPoolRejectedPolicy rejectedPolicy) {     profile.setRejectedPolicy(rejectedPolicy).     return this. }
true;public;0;3;/**  * Builds the new thread pool  *  * @return the created thread pool  * @throws Exception is thrown if error building the thread pool  */ ;/**  * Builds the new thread pool  *  * @return the created thread pool  * @throws Exception is thrown if error building the thread pool  */ public ExecutorService build() throws Exception {     return build(null, null). }
true;public;1;3;/**  * Builds the new thread pool  *  * @param name name which is appended to the thread name  * @return the created thread pool  * @throws Exception is thrown if error building the thread pool  */ ;/**  * Builds the new thread pool  *  * @param name name which is appended to the thread name  * @return the created thread pool  * @throws Exception is thrown if error building the thread pool  */ public ExecutorService build(String name) throws Exception {     return build(null, name). }
true;public;2;3;/**  * Builds the new thread pool  *  * @param source the source object, usually it should be <tt>this</tt> passed in as parameter  * @param name   name which is appended to the thread name  * @return the created thread pool  * @throws Exception is thrown if error building the thread pool  */ ;/**  * Builds the new thread pool  *  * @param source the source object, usually it should be <tt>this</tt> passed in as parameter  * @param name   name which is appended to the thread name  * @return the created thread pool  * @throws Exception is thrown if error building the thread pool  */ public ExecutorService build(Object source, String name) throws Exception {     return context.getExecutorServiceManager().newThreadPool(source, name, profile). }
true;public;0;3;/**  * Builds the new scheduled thread pool  *  * @return the created scheduled thread pool  * @throws Exception is thrown if error building the scheduled thread pool  */ ;/**  * Builds the new scheduled thread pool  *  * @return the created scheduled thread pool  * @throws Exception is thrown if error building the scheduled thread pool  */ public ScheduledExecutorService buildScheduled() throws Exception {     return buildScheduled(null, null). }
true;public;1;3;/**  * Builds the new scheduled thread pool  *  * @param name name which is appended to the thread name  * @return the created scheduled thread pool  * @throws Exception is thrown if error building the scheduled thread pool  */ ;/**  * Builds the new scheduled thread pool  *  * @param name name which is appended to the thread name  * @return the created scheduled thread pool  * @throws Exception is thrown if error building the scheduled thread pool  */ public ScheduledExecutorService buildScheduled(String name) throws Exception {     return buildScheduled(null, name). }
true;public;2;3;/**  * Builds the new scheduled thread pool  *  * @param source the source object, usually it should be <tt>this</tt> passed in as parameter  * @param name   name which is appended to the thread name  * @return the created scheduled thread pool  * @throws Exception is thrown if error building the scheduled thread pool  */ ;/**  * Builds the new scheduled thread pool  *  * @param source the source object, usually it should be <tt>this</tt> passed in as parameter  * @param name   name which is appended to the thread name  * @return the created scheduled thread pool  * @throws Exception is thrown if error building the scheduled thread pool  */ public ScheduledExecutorService buildScheduled(Object source, String name) throws Exception {     return context.getExecutorServiceManager().newScheduledThreadPool(source, name, profile). }
