commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public Boolean getSkipTrailingCharsUntilNewline() {     return skipTrailingCharsUntilNewline. }
true;public;1;3;/**  * Whether or not the trailing characters until new line must be ignored.  * <p/>  * The default value is false  */ ;/**  * Whether or not the trailing characters until new line must be ignored.  * <p/>  * The default value is false  */ public void setSkipTrailingCharsUntilNewline(Boolean skipTrailingCharsUntilNewline) {     this.skipTrailingCharsUntilNewline = skipTrailingCharsUntilNewline. }
false;public;0;3;;public Boolean getRecordEndsOnNewline() {     return recordEndsOnNewline. }
true;public;1;3;/**  * Whether or not the record ends on new line.  * <p/>  * The default value is false  */ ;/**  * Whether or not the record ends on new line.  * <p/>  * The default value is false  */ public void setRecordEndsOnNewline(Boolean recordEndsOnNewline) {     this.recordEndsOnNewline = recordEndsOnNewline. }
false;public;0;3;;public String getPadding() {     return padding. }
true;public;1;3;/**  * The padding character.  * <p/>  * The default value is a space  */ ;/**  * The padding character.  * <p/>  * The default value is a space  */ public void setPadding(String padding) {     this.padding = padding. }
false;protected;2;25;;@Override protected void configureDataFormat(DataFormat dataFormat, CamelContext camelContext) {     super.configureDataFormat(dataFormat, camelContext).     if (headers != null) {         int[] lengths = new int[headers.size()].         for (int i = 0. i < lengths.length. i++) {             Integer length = headers.get(i).getLength().             if (length == null) {                 throw new IllegalArgumentException("The length of all headers must be defined.").             }             lengths[i] = length.         }         setProperty(camelContext, dataFormat, "fieldLengths", lengths).     }     if (skipTrailingCharsUntilNewline != null) {         setProperty(camelContext, dataFormat, "skipTrailingCharsUntilNewline", skipTrailingCharsUntilNewline).     }     if (recordEndsOnNewline != null) {         setProperty(camelContext, dataFormat, "recordEndsOnNewline", recordEndsOnNewline).     }     if (padding != null) {         setProperty(camelContext, dataFormat, "padding", singleCharOf("padding", padding)).     } }
