commented;modifiers;parameterAmount;loc;comment;code
false;public;1;26;;public HeadersMapFactory resolve(CamelContext context) {     // use factory finder to find a custom implementations     Class<?> type = null.     try {         type = findFactory("headers-map-factory", context).     } catch (Exception e) {     // ignore     }     if (type != null) {         if (LOG.isDebugEnabled()) {             LOG.debug("Found HeadersMapFactory: {} via: {}{}", type.getName(), factoryFinder.getResourcePath(), "headers-map-factory").         }         if (HeadersMapFactory.class.isAssignableFrom(type)) {             HeadersMapFactory answer = (HeadersMapFactory) context.getInjector().newInstance(type).             LOG.info("Detected and using custom HeadersMapFactory: {}", answer).             return answer.         } else {             throw new IllegalArgumentException("Type is not a HeadersMapFactory implementation. Found: " + type.getName()).         }     }     // fallback to default     LOG.debug("Creating default HeadersMapFactory").     return new DefaultHeadersMapFactory(). }
false;private;2;6;;private Class<?> findFactory(String name, CamelContext context) throws ClassNotFoundException, IOException {     if (factoryFinder == null) {         factoryFinder = context.getFactoryFinder(RESOURCE_PATH).     }     return factoryFinder.findClass(name). }
