commented;modifiers;parameterAmount;loc;comment;code
false;public;1;4;;@Override public void process(Exchange exchange) throws Exception {     delegate.process(exchange). }
false;public;2;4;;@Override public boolean process(Exchange exchange, AsyncCallback callback) {     return delegate.process(exchange, callback). }
false;public;1;4;;@Override public CompletableFuture<Exchange> processAsync(Exchange exchange) {     return delegate.processAsync(exchange). }
false;public;0;3;;public Processor getProcessor() {     return delegate.getProcessor(). }
false;public;0;3;;public BeanHolder getBeanHolder() {     return delegate.getBeanHolder(). }
false;public;0;3;;public Object getBean() {     return delegate.getBean(). }
false;public;0;3;;public String getMethod() {     return delegate.getMethod(). }
false;public;0;3;;public Boolean getCache() {     return delegate.getCache(). }
false;public;1;3;;public void setCache(Boolean cache) {     delegate.setCache(cache). }
false;public;1;3;;public void setMethod(String method) {     delegate.setMethod(method). }
false;public;0;3;;public boolean isShorthandMethod() {     return delegate.isShorthandMethod(). }
false;public;1;3;;public void setShorthandMethod(boolean shorthandMethod) {     delegate.setShorthandMethod(shorthandMethod). }
false;protected;0;4;;@Override protected void doStart() throws Exception {     delegate.doStart(). }
false;protected;0;4;;@Override protected void doStop() throws Exception {     delegate.doStop(). }
