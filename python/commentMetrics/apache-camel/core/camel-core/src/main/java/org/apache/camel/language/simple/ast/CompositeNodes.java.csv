commented;modifiers;parameterAmount;loc;comment;code
false;public;0;8;;@Override public String toString() {     StringBuilder sb = new StringBuilder().     for (SimpleNode child : children) {         sb.append(child.toString()).     }     return sb.toString(). }
false;public;1;3;;public void addChild(SimpleNode child) {     children.add(child). }
false;public;0;3;;public List<SimpleNode> getChildren() {     return children. }
false;public;1;14;;@Override public Expression createExpression(String expression) {     if (children.isEmpty()) {         return null.     } else if (children.size() == 1) {         return children.get(0).createExpression(expression).     } else {         List<Expression> answer = new ArrayList<>().         for (SimpleNode child : children) {             answer.add(child.createExpression(expression)).         }         return ExpressionBuilder.concatExpression(answer).     } }
