commented;modifiers;parameterAmount;loc;comment;code
false;public;1;5;;@Override public void done(boolean doneSync) {     exchange.removeProperty(Exchange.REDELIVERY_EXHAUSTED).     callback.done(doneSync). }
false;public;2;10;;@Override public boolean process(final Exchange exchange, final AsyncCallback callback) {     return super.process(exchange, new AsyncCallback() {          @Override         public void done(boolean doneSync) {             exchange.removeProperty(Exchange.REDELIVERY_EXHAUSTED).             callback.done(doneSync).         }     }). }
false;public;0;8;;@Override public String toString() {     if (processor == null) {         // if no output then dont do any description         return "".     }     return "NoErrorHandler[" + processor + "]". }
false;public;2;23;;public Processor createErrorHandler(RouteContext routeContext, Processor processor) {     return new DelegateAsyncProcessor(processor) {          @Override         public boolean process(final Exchange exchange, final AsyncCallback callback) {             return super.process(exchange, new AsyncCallback() {                  @Override                 public void done(boolean doneSync) {                     exchange.removeProperty(Exchange.REDELIVERY_EXHAUSTED).                     callback.done(doneSync).                 }             }).         }          @Override         public String toString() {             if (processor == null) {                 // if no output then dont do any description                 return "".             }             return "NoErrorHandler[" + processor + "]".         }     }. }
false;public;0;3;;public boolean supportTransacted() {     return false. }
false;public;0;6;;@Override public ErrorHandlerBuilder cloneBuilder() {     NoErrorHandlerBuilder answer = new NoErrorHandlerBuilder().     cloneBuilder(answer).     return answer. }
