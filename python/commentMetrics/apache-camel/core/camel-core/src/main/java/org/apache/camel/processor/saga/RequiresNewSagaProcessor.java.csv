commented;modifiers;parameterAmount;loc;comment;code
false;public;2;15;;@Override public boolean process(Exchange exchange, AsyncCallback callback) {     getCurrentSagaCoordinator(exchange).whenComplete((existingCoordinator, ex) -> ifNotException(ex, exchange, callback, () -> sagaService.newSaga().whenComplete((newCoordinator, ex2) -> ifNotException(ex2, exchange, true, newCoordinator, existingCoordinator, callback, () -> {         setCurrentSagaCoordinator(exchange, newCoordinator).         newCoordinator.beginStep(exchange, step).whenComplete((done, ex3) -> ifNotException(ex3, exchange, true, newCoordinator, existingCoordinator, callback, () -> {             // Always finalizes the saga             super.process(exchange, doneSync -> handleSagaCompletion(exchange, newCoordinator, existingCoordinator, callback)).         })).     })))).     return false. }
