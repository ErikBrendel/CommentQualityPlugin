commented;modifiers;parameterAmount;loc;comment;code
false;public;1;19;;@Override public Processor createProcessor(RouteContext routeContext) {     if (definition.getRef() != null && definition.getException() == null) {         definition.setException(routeContext.getCamelContext().getRegistry().lookupByNameAndType(definition.getRef(), Exception.class)).     }     if (definition.getExceptionType() != null && definition.getExceptionClass() == null) {         try {             definition.setExceptionClass(routeContext.getCamelContext().getClassResolver().resolveMandatoryClass(definition.getExceptionType(), Exception.class)).         } catch (ClassNotFoundException e) {             throw RuntimeCamelException.wrapRuntimeCamelException(e).         }     }     if (definition.getException() == null && definition.getExceptionClass() == null) {         throw new IllegalArgumentException("exception or exceptionClass/exceptionType must be configured on: " + this).     }     return new ThrowExceptionProcessor(definition.getException(), definition.getExceptionClass(), definition.getMessage()). }
