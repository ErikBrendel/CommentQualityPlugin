commented;modifiers;parameterAmount;loc;comment;code
true;public;1;3;/**  * What data type to unmarshal as, can either be org.w3c.dom.Node or java.lang.String.  * <p/>  * Is by default org.w3c.dom.Node  */ ;/**  * What data type to unmarshal as, can either be org.w3c.dom.Node or java.lang.String.  * <p/>  * Is by default org.w3c.dom.Node  */ public void setDataObjectType(Class<?> dataObjectType) {     this.dataObjectType = dataObjectType. }
false;public;0;3;;public Class<?> getDataObjectType() {     return dataObjectType. }
false;public;0;3;;public String getDataObjectTypeName() {     return dataObjectTypeName. }
true;public;1;3;/**  * What data type to unmarshal as, can either be org.w3c.dom.Node or java.lang.String.  * <p/>  * Is by default org.w3c.dom.Node  */ ;/**  * What data type to unmarshal as, can either be org.w3c.dom.Node or java.lang.String.  * <p/>  * Is by default org.w3c.dom.Node  */ public void setDataObjectTypeName(String dataObjectTypeName) {     this.dataObjectTypeName = dataObjectTypeName. }
false;public;0;3;;public Boolean getOmitXmlDeclaration() {     return omitXmlDeclaration. }
true;public;1;3;/**  * When returning a String, do we omit the XML declaration in the top.  */ ;/**  * When returning a String, do we omit the XML declaration in the top.  */ public void setOmitXmlDeclaration(Boolean omitXmlDeclaration) {     this.omitXmlDeclaration = omitXmlDeclaration. }
false;protected;1;12;;@Override protected DataFormat createDataFormat(RouteContext routeContext) {     if (dataObjectType == null && dataObjectTypeName != null) {         try {             dataObjectType = routeContext.getCamelContext().getClassResolver().resolveMandatoryClass(dataObjectTypeName).         } catch (ClassNotFoundException e) {             throw RuntimeCamelException.wrapRuntimeCamelException(e).         }     }     return super.createDataFormat(routeContext). }
false;protected;2;9;;@Override protected void configureDataFormat(DataFormat dataFormat, CamelContext camelContext) {     if (dataObjectType != null) {         setProperty(camelContext, dataFormat, "dataObjectType", dataObjectType).     }     if (omitXmlDeclaration != null) {         setProperty(camelContext, dataFormat, "omitXmlDeclaration", omitXmlDeclaration).     } }
