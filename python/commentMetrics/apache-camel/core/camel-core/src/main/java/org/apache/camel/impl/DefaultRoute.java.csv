commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public String toString() {     return "Route " + getId(). }
false;public;0;3;;public String getId() {     return (String) properties.get(Route.ID_PROPERTY). }
false;public;0;3;;public String getGroup() {     return (String) properties.get(Route.GROUP_PROPERTY). }
false;public;0;7;;public String getUptime() {     long delta = getUptimeMillis().     if (delta == 0) {         return "".     }     return TimeUtils.printDuration(delta). }
false;public;0;6;;public long getUptimeMillis() {     if (startDate == null) {         return 0.     }     return new Date().getTime() - startDate.getTime(). }
false;public;0;3;;public Endpoint getEndpoint() {     return endpoint. }
false;public;0;3;;public RouteContext getRouteContext() {     return routeContext. }
false;public;0;3;;public Map<String, Object> getProperties() {     return properties. }
false;public;0;4;;public String getDescription() {     Object value = properties.get(Route.DESCRIPTION_PROPERTY).     return value != null ? value.toString() : null. }
false;public;1;3;;public void onStartingServices(List<Service> services) throws Exception {     addServices(services). }
false;public;0;3;;public List<Service> getServices() {     return services. }
false;public;1;5;;public void addService(Service service) {     if (!services.contains(service)) {         services.add(service).     } }
false;public;0;3;;public void warmUp() {     getServices().clear(). }
true;public;0;4;/**  * Do not invoke this method directly, use {@link org.apache.camel.spi.RouteController#startRoute(String)} to start a route.  */ ;/**  * Do not invoke this method directly, use {@link org.apache.camel.spi.RouteController#startRoute(String)} to start a route.  */ @Override public void start() throws Exception {     super.start(). }
true;public;0;4;/**  * Do not invoke this method directly, use {@link org.apache.camel.spi.RouteController#stopRoute(String)} to stop a route.  */ ;/**  * Do not invoke this method directly, use {@link org.apache.camel.spi.RouteController#stopRoute(String)} to stop a route.  */ @Override public void stop() throws Exception {     super.stop(). }
true;protected;1;2;/**  * Strategy method to allow derived classes to lazily load services for the route  */ ;/**  * Strategy method to allow derived classes to lazily load services for the route  */ protected void addServices(List<Service> services) throws Exception { }
false;protected;0;3;;protected void doStart() throws Exception {     startDate = new Date(). }
false;protected;0;4;;protected void doStop() throws Exception {     // and clear start date     startDate = null. }
false;protected;0;7;;@Override protected void doShutdown() throws Exception {     // and clear start date     startDate = null.     // clear services when shutting down     services.clear(). }
