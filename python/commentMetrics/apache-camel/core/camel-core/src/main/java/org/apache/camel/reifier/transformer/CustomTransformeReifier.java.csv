commented;modifiers;parameterAmount;loc;comment;code
false;protected;1;27;;@Override protected Transformer doCreateTransformer(CamelContext context) throws Exception {     if (definition.getRef() == null && definition.getClassName() == null) {         throw new IllegalArgumentException("'ref' or 'className' must be specified for customTransformer").     }     Transformer transformer.     if (definition.getRef() != null) {         transformer = context.getRegistry().lookupByNameAndType(definition.getRef(), Transformer.class).         if (transformer == null) {             throw new IllegalArgumentException("Cannot find transformer with ref:" + definition.getRef()).         }         if (transformer.getModel() != null || transformer.getFrom() != null || transformer.getTo() != null) {             throw new IllegalArgumentException(String.format("Transformer '%s' is already in use. Please check if duplicate transformer exists.", definition.getRef())).         }     } else {         Class<Transformer> transformerClass = context.getClassResolver().resolveMandatoryClass(definition.getClassName(), Transformer.class).         if (transformerClass == null) {             throw new IllegalArgumentException("Cannot find transformer class: " + definition.getClassName()).         }         transformer = context.getInjector().newInstance(transformerClass).     }     transformer.setCamelContext(context).     return transformer.setModel(definition.getScheme()).setFrom(definition.getFromType()).setTo(definition.getToType()). }
