commented;modifiers;parameterAmount;loc;comment;code
false;public;1;37;;@Override public LoadBalancer createLoadBalancer(RouteContext routeContext) {     FailOverLoadBalancer answer.     List<Class<?>> classes = new ArrayList<>().     if (!definition.getExceptionTypes().isEmpty()) {         classes.addAll(definition.getExceptionTypes()).     } else if (!definition.getExceptions().isEmpty()) {         for (String name : definition.getExceptions()) {             Class<?> type = routeContext.getCamelContext().getClassResolver().resolveClass(name).             if (type == null) {                 throw new IllegalArgumentException("Cannot find class: " + name + " in the classpath").             }             if (!ObjectHelper.isAssignableFrom(Throwable.class, type)) {                 throw new IllegalArgumentException("Class is not an instance of Throwable: " + type).             }             classes.add(type).         }     }     if (classes.isEmpty()) {         answer = new FailOverLoadBalancer().     } else {         answer = new FailOverLoadBalancer(classes).     }     if (definition.getMaximumFailoverAttempts() != null) {         answer.setMaximumFailoverAttempts(definition.getMaximumFailoverAttempts()).     }     if (definition.getRoundRobin() != null) {         answer.setRoundRobin(definition.getRoundRobin()).     }     if (definition.getSticky() != null) {         answer.setSticky(definition.getSticky()).     }     return answer. }
