commented;modifiers;parameterAmount;loc;comment;code
false;public;2;10;;public void populateMessage(Exchange exchange, long messageIndex) throws Exception {     Message in = exchange.getIn().     in.setBody(createMessageBody(messageIndex)).     in.setHeaders(getDefaultHeaders()).     applyHeaders(exchange, messageIndex).     if (outputTransformer != null) {         outputTransformer.process(exchange).     } }
false;public;4;9;;public void assertMessageExpected(DataSetEndpoint dataSetEndpoint, Exchange expected, Exchange actual, long index) throws Exception {     Object expectedBody = expected.getIn().getBody().     Object actualBody = actual.getIn().getBody().     if (expectedBody != null) {         // let's coerce to the correct type         actualBody = actual.getIn().getMandatoryBody(expectedBody.getClass()).     }     DataSetEndpoint.assertEquals("message body", expectedBody, actualBody, actual). }
false;public;0;3;;// Properties // ------------------------------------------------------------------------- public long getSize() {     return size. }
false;public;1;3;;public void setSize(long size) {     this.size = size. }
false;public;0;10;;public long getReportCount() {     if (reportCount <= 0) {         reportCount = getSize() / 5.     }     // report cannot be 0 then default to the size     if (reportCount == 0) {         reportCount = getSize().     }     return reportCount. }
true;public;1;3;/**  * Sets the number of messages in a group on which we will report that messages have been received.  */ ;/**  * Sets the number of messages in a group on which we will report that messages have been received.  */ public void setReportCount(long reportCount) {     this.reportCount = reportCount. }
false;public;0;7;;public Map<String, Object> getDefaultHeaders() {     if (defaultHeaders == null) {         defaultHeaders = new HashMap<>().         populateDefaultHeaders(defaultHeaders).     }     return defaultHeaders. }
false;public;1;3;;public void setDefaultHeaders(Map<String, Object> defaultHeaders) {     this.defaultHeaders = defaultHeaders. }
false;public;0;3;;public Processor getOutputTransformer() {     return outputTransformer. }
false;public;1;3;;public void setOutputTransformer(Processor outputTransformer) {     this.outputTransformer = outputTransformer. }
false;protected,abstract;1;1;;// Implementation methods // ------------------------------------------------------------------------- protected abstract Object createMessageBody(long messageIndex).
true;protected;2;2;/**  * Allows derived classes to add some custom headers for a given message  */ ;/**  * Allows derived classes to add some custom headers for a given message  */ protected void applyHeaders(Exchange exchange, long messageIndex) { }
true;protected;1;2;/**  * Allows derived classes to customize a default set of properties  */ ;/**  * Allows derived classes to customize a default set of properties  */ protected void populateDefaultHeaders(Map<String, Object> map) { }
