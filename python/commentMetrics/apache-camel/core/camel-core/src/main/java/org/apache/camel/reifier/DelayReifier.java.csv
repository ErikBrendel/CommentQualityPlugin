commented;modifiers;parameterAmount;loc;comment;code
false;public;1;21;;@Override public Processor createProcessor(RouteContext routeContext) throws Exception {     Processor childProcessor = this.createChildProcessor(routeContext, false).     Expression delay = createAbsoluteTimeDelayExpression(routeContext).     boolean async = definition.getAsyncDelayed() == null || definition.getAsyncDelayed().     boolean shutdownThreadPool = ProcessorDefinitionHelper.willCreateNewThreadPool(routeContext, definition, async).     ScheduledExecutorService threadPool = ProcessorDefinitionHelper.getConfiguredScheduledExecutorService(routeContext, "Delay", definition, async).     Delayer answer = new Delayer(routeContext.getCamelContext(), childProcessor, delay, threadPool, shutdownThreadPool).     if (definition.getAsyncDelayed() != null) {         answer.setAsyncDelayed(definition.getAsyncDelayed()).     }     if (definition.getCallerRunsWhenRejected() == null) {         // should be default true         answer.setCallerRunsWhenRejected(true).     } else {         answer.setCallerRunsWhenRejected(definition.getCallerRunsWhenRejected()).     }     return answer. }
false;private;1;7;;private Expression createAbsoluteTimeDelayExpression(RouteContext routeContext) {     ExpressionDefinition expr = definition.getExpression().     if (expr != null) {         return expr.createExpression(routeContext).     }     return null. }
