commented;modifiers;parameterAmount;loc;comment;code
false;public;1;7;;public Predicate createPredicate(String expression) {     expression = loadResource(expression).     XPathBuilder builder = XPathBuilder.xpath(expression).     configureBuilder(builder).     return builder. }
false;public;1;7;;public Expression createExpression(String expression) {     expression = loadResource(expression).     XPathBuilder builder = XPathBuilder.xpath(expression).     configureBuilder(builder).     return builder. }
false;public;0;3;;public QName getResultType() {     return resultType. }
false;public;1;3;;public void setResultType(QName resultType) {     this.resultType = resultType. }
false;public;0;3;;public XPathFactory getXpathFactory() {     return xpathFactory. }
false;public;1;3;;public void setXpathFactory(XPathFactory xpathFactory) {     this.xpathFactory = xpathFactory. }
false;public;1;3;;public void setUseSaxon(Boolean useSaxon) {     this.useSaxon = useSaxon. }
false;public;0;3;;public Boolean getUseSaxon() {     return useSaxon. }
false;public;0;3;;public Boolean isUseSaxon() {     return useSaxon != null && useSaxon. }
false;public;0;3;;public String getObjectModelUri() {     return objectModelUri. }
false;public;1;3;;public void setObjectModelUri(String objectModelUri) {     this.objectModelUri = objectModelUri. }
false;public;0;3;;public Boolean getThreadSafety() {     return threadSafety. }
false;public;1;3;;public void setThreadSafety(Boolean threadSafety) {     this.threadSafety = threadSafety. }
false;protected;1;19;;protected void configureBuilder(XPathBuilder builder) {     if (threadSafety != null) {         builder.setThreadSafety(threadSafety).     }     if (resultType != null) {         builder.setResultQName(resultType).     }     if (isUseSaxon()) {         builder.enableSaxon().     } else {         if (xpathFactory != null) {             builder.setXPathFactory(xpathFactory).         }         if (objectModelUri != null) {             builder.setObjectModelUri(objectModelUri).         }     } }
false;public;0;3;;public boolean isSingleton() {     return false. }
