commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public String toString() {     return "Bean[" + description() + "]". }
false;public;0;17;;public String description() {     if (ref != null) {         String methodText = "".         if (method != null) {             methodText = " method:" + method.         }         return "ref:" + ref + methodText.     } else if (bean != null) {         return bean.toString().     } else if (beanClass != null) {         return beanClass.getName().     } else if (beanType != null) {         return beanType.     } else {         return "".     } }
false;public;0;4;;@Override public String getShortName() {     return "bean". }
false;public;0;4;;@Override public String getLabel() {     return "bean[" + description() + "]". }
false;public;0;3;;public String getRef() {     return ref. }
true;public;1;3;/**  * Sets a reference to a bean to use  */ ;/**  * Sets a reference to a bean to use  */ public void setRef(String ref) {     this.ref = ref. }
false;public;0;3;;public String getMethod() {     return method. }
true;public;1;3;/**  * Sets the method name on the bean to use  */ ;/**  * Sets the method name on the bean to use  */ public void setMethod(String method) {     this.method = method. }
true;public;1;3;/**  * Sets an instance of the bean to use  */ ;/**  * Sets an instance of the bean to use  */ public void setBean(Object bean) {     this.bean = bean. }
false;public;0;3;;public Object getBean() {     return bean. }
false;public;0;3;;public String getBeanType() {     return beanType. }
true;public;1;3;/**  * Sets the Class of the bean  */ ;/**  * Sets the Class of the bean  */ public void setBeanType(String beanType) {     this.beanType = beanType. }
false;public;0;3;;public Class<?> getBeanClass() {     return beanClass. }
true;public;1;3;/**  * Sets the Class of the bean  */ ;/**  * Sets the Class of the bean  */ public void setBeanType(Class<?> beanType) {     this.beanClass = beanType. }
false;public;0;3;;public Boolean getCache() {     return cache. }
true;public;1;3;/**  * Caches the bean lookup, to avoid lookup up bean on every usage.  */ ;/**  * Caches the bean lookup, to avoid lookup up bean on every usage.  */ public void setCache(Boolean cache) {     this.cache = cache. }
