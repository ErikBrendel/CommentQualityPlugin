commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public String toString() {     return "Log[" + message + "]". }
false;public;0;4;;@Override public String getShortName() {     return "log". }
false;public;0;4;;@Override public String getLabel() {     return "log". }
false;public;0;3;;public LoggingLevel getLoggingLevel() {     return loggingLevel. }
true;public;1;3;/**  * Sets the logging level.  * <p/>  * The default value is INFO  */ ;/**  * Sets the logging level.  * <p/>  * The default value is INFO  */ public void setLoggingLevel(LoggingLevel loggingLevel) {     this.loggingLevel = loggingLevel. }
false;public;0;3;;public String getMessage() {     return message. }
true;public;1;3;/**  * Sets the log message (uses simple language)  */ ;/**  * Sets the log message (uses simple language)  */ public void setMessage(String message) {     this.message = message. }
false;public;0;3;;public String getLogName() {     return logName. }
true;public;1;3;/**  * Sets the name of the logger  */ ;/**  * Sets the name of the logger  */ public void setLogName(String logName) {     this.logName = logName. }
false;public;0;3;;public String getMarker() {     return marker. }
true;public;1;3;/**  * To use slf4j marker  */ ;/**  * To use slf4j marker  */ public void setMarker(String marker) {     this.marker = marker. }
false;public;0;3;;public String getLoggerRef() {     return loggerRef. }
true;public;1;3;/**  * To refer to a custom logger instance to lookup from the registry.  */ ;/**  * To refer to a custom logger instance to lookup from the registry.  */ public void setLoggerRef(String loggerRef) {     this.loggerRef = loggerRef. }
false;public;0;3;;public Logger getLogger() {     return logger. }
true;public;1;3;/**  * To use a custom logger instance  */ ;/**  * To use a custom logger instance  */ public void setLogger(Logger logger) {     this.logger = logger. }
