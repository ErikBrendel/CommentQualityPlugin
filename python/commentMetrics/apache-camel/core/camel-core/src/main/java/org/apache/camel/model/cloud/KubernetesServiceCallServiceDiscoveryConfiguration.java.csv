commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;// ************************************************************************* // Properties // ************************************************************************* public String getMasterUrl() {     return masterUrl. }
true;public;1;3;/**  * Sets the URL to the master when using client lookup  */ ;/**  * Sets the URL to the master when using client lookup  */ public void setMasterUrl(String masterUrl) {     this.masterUrl = masterUrl. }
false;public;0;3;;public String getNamespace() {     return namespace. }
true;public;1;3;/**  * Sets the namespace to use. Will by default use namespace from the ENV variable KUBERNETES_MASTER.  */ ;/**  * Sets the namespace to use. Will by default use namespace from the ENV variable KUBERNETES_MASTER.  */ public void setNamespace(String namespace) {     this.namespace = namespace. }
false;public;0;3;;public String getApiVersion() {     return apiVersion. }
true;public;1;3;/**  * Sets the API version when using client lookup  */ ;/**  * Sets the API version when using client lookup  */ public void setApiVersion(String apiVersion) {     this.apiVersion = apiVersion. }
false;public;0;3;;public String getLookup() {     return lookup. }
true;public;1;3;/**  * How to perform service lookup. Possible values: client, dns, environment.  * <p/>  * When using client, then the client queries the kubernetes master to obtain a list  * of active pods that provides the service, and then random (or round robin) select a pod.  * <p/>  * When using dns the service name is resolved as <tt>name.namespace.svc.dnsDomain</tt>.  * <p/>  * When using dnssrv the service name is resolved with SRV query for <tt>_<port_name>._<port_proto>.<serviceName>.<namespace>.svc.<zone>.</tt>.  * <p/>  * When using environment then environment variables are used to lookup the service.  * <p/>  * By default environment is used.  */ ;/**  * How to perform service lookup. Possible values: client, dns, environment.  * <p/>  * When using client, then the client queries the kubernetes master to obtain a list  * of active pods that provides the service, and then random (or round robin) select a pod.  * <p/>  * When using dns the service name is resolved as <tt>name.namespace.svc.dnsDomain</tt>.  * <p/>  * When using dnssrv the service name is resolved with SRV query for <tt>_<port_name>._<port_proto>.<serviceName>.<namespace>.svc.<zone>.</tt>.  * <p/>  * When using environment then environment variables are used to lookup the service.  * <p/>  * By default environment is used.  */ public void setLookup(String lookup) {     this.lookup = lookup. }
false;public;0;3;;public String getDnsDomain() {     return dnsDomain. }
true;public;1;3;/**  * Sets the DNS domain to use for DNS lookup.  */ ;/**  * Sets the DNS domain to use for DNS lookup.  */ public void setDnsDomain(String dnsDomain) {     this.dnsDomain = dnsDomain. }
false;public;0;3;;public String getPortName() {     return portName. }
true;public;1;3;/**  * Sets the Port Name to use for DNS/DNSSRV lookup.  */ ;/**  * Sets the Port Name to use for DNS/DNSSRV lookup.  */ public void setPortName(String portName) {     this.portName = portName. }
false;public;0;3;;public String getPortProtocol() {     return portProtocol. }
true;public;1;3;/**  * Sets the Port Protocol to use for DNS/DNSSRV lookup.  */ ;/**  * Sets the Port Protocol to use for DNS/DNSSRV lookup.  */ public void setPortProtocol(String portProtocol) {     this.portProtocol = portProtocol. }
false;public;0;3;;public String getUsername() {     return username. }
true;public;1;3;/**  * Sets the username for authentication when using client lookup  */ ;/**  * Sets the username for authentication when using client lookup  */ public void setUsername(String username) {     this.username = username. }
false;public;0;3;;public String getPassword() {     return password. }
true;public;1;3;/**  * Sets the password for authentication when using client lookup  */ ;/**  * Sets the password for authentication when using client lookup  */ public void setPassword(String password) {     this.password = password. }
false;public;0;3;;public String getOauthToken() {     return oauthToken. }
true;public;1;3;/**  * Sets the OAUTH token for authentication (instead of username/password) when using client lookup  */ ;/**  * Sets the OAUTH token for authentication (instead of username/password) when using client lookup  */ public void setOauthToken(String oauthToken) {     this.oauthToken = oauthToken. }
false;public;0;3;;public String getCaCertData() {     return caCertData. }
true;public;1;3;/**  * Sets the Certificate Authority data when using client lookup  */ ;/**  * Sets the Certificate Authority data when using client lookup  */ public void setCaCertData(String caCertData) {     this.caCertData = caCertData. }
false;public;0;3;;public String getCaCertFile() {     return caCertFile. }
true;public;1;3;/**  * Sets the Certificate Authority data that are loaded from the file when using client lookup  */ ;/**  * Sets the Certificate Authority data that are loaded from the file when using client lookup  */ public void setCaCertFile(String caCertFile) {     this.caCertFile = caCertFile. }
false;public;0;3;;public String getClientCertData() {     return clientCertData. }
true;public;1;3;/**  * Sets the Client Certificate data when using client lookup  */ ;/**  * Sets the Client Certificate data when using client lookup  */ public void setClientCertData(String clientCertData) {     this.clientCertData = clientCertData. }
false;public;0;3;;public String getClientCertFile() {     return clientCertFile. }
true;public;1;3;/**  * Sets the Client Certificate data that are loaded from the file when using client lookup  */ ;/**  * Sets the Client Certificate data that are loaded from the file when using client lookup  */ public void setClientCertFile(String clientCertFile) {     this.clientCertFile = clientCertFile. }
false;public;0;3;;public String getClientKeyAlgo() {     return clientKeyAlgo. }
true;public;1;3;/**  * Sets the Client Keystore algorithm, such as RSA when using client lookup  */ ;/**  * Sets the Client Keystore algorithm, such as RSA when using client lookup  */ public void setClientKeyAlgo(String clientKeyAlgo) {     this.clientKeyAlgo = clientKeyAlgo. }
false;public;0;3;;public String getClientKeyData() {     return clientKeyData. }
true;public;1;3;/**  * Sets the Client Keystore data when using client lookup  */ ;/**  * Sets the Client Keystore data when using client lookup  */ public void setClientKeyData(String clientKeyData) {     this.clientKeyData = clientKeyData. }
false;public;0;3;;public String getClientKeyFile() {     return clientKeyFile. }
true;public;1;3;/**  * Sets the Client Keystore data that are loaded from the file when using client lookup  */ ;/**  * Sets the Client Keystore data that are loaded from the file when using client lookup  */ public void setClientKeyFile(String clientKeyFile) {     this.clientKeyFile = clientKeyFile. }
false;public;0;3;;public String getClientKeyPassphrase() {     return clientKeyPassphrase. }
true;public;1;3;/**  * Sets the Client Keystore passphrase when using client lookup  */ ;/**  * Sets the Client Keystore passphrase when using client lookup  */ public void setClientKeyPassphrase(String clientKeyPassphrase) {     this.clientKeyPassphrase = clientKeyPassphrase. }
false;public;0;3;;public Boolean getTrustCerts() {     return trustCerts. }
true;public;1;3;/**  * Sets whether to turn on trust certificate check when using client lookup  */ ;/**  * Sets whether to turn on trust certificate check when using client lookup  */ public void setTrustCerts(Boolean trustCerts) {     this.trustCerts = trustCerts. }
true;public;1;4;/**  * Sets the URL to the master when using client lookup  */ ;// ************************************************************************* // Fluent API // ************************************************************************* /**  * Sets the URL to the master when using client lookup  */ public KubernetesServiceCallServiceDiscoveryConfiguration masterUrl(String masterUrl) {     setMasterUrl(masterUrl).     return this. }
true;public;1;4;/**  * Sets the namespace to use. Will by default use namespace from the ENV variable KUBERNETES_MASTER.  */ ;/**  * Sets the namespace to use. Will by default use namespace from the ENV variable KUBERNETES_MASTER.  */ public KubernetesServiceCallServiceDiscoveryConfiguration namespace(String namespace) {     setNamespace(namespace).     return this. }
true;public;1;4;/**  * Sets the API version when using client lookup  */ ;/**  * Sets the API version when using client lookup  */ public KubernetesServiceCallServiceDiscoveryConfiguration apiVersion(String apiVersion) {     setApiVersion(apiVersion).     return this. }
true;public;1;4;/**  * How to perform service lookup, @see {@link #setLookup(String)}.  */ ;/**  * How to perform service lookup, @see {@link #setLookup(String)}.  */ public KubernetesServiceCallServiceDiscoveryConfiguration lookup(String lookup) {     setLookup(lookup).     return this. }
true;public;1;4;/**  * Sets the DNS domain to use for DNS/SNDSRV lookup.  */ ;/**  * Sets the DNS domain to use for DNS/SNDSRV lookup.  */ public KubernetesServiceCallServiceDiscoveryConfiguration dnsDomain(String dnsDomain) {     setDnsDomain(dnsDomain).     return this. }
true;public;1;4;/**  * Sets Port Name to use for DNS/SNDSRV lookup.  */ ;/**  * Sets Port Name to use for DNS/SNDSRV lookup.  */ public KubernetesServiceCallServiceDiscoveryConfiguration portName(String portName) {     setPortName(portName).     return this. }
true;public;1;4;/**  * Sets Port Protocol to use for DNS/SNDSRV lookup.  */ ;/**  * Sets Port Protocol to use for DNS/SNDSRV lookup.  */ public KubernetesServiceCallServiceDiscoveryConfiguration portProtocol(String portProtocol) {     setPortProtocol(portProtocol).     return this. }
true;public;1;4;/**  * Sets the username for authentication when using client lookup  */ ;/**  * Sets the username for authentication when using client lookup  */ public KubernetesServiceCallServiceDiscoveryConfiguration username(String username) {     setUsername(username).     return this. }
true;public;1;4;/**  * Sets the password for authentication when using client lookup  */ ;/**  * Sets the password for authentication when using client lookup  */ public KubernetesServiceCallServiceDiscoveryConfiguration password(String password) {     setPassword(password).     return this. }
true;public;1;4;/**  * Sets the OAUTH token for authentication (instead of username/password) when using client lookup  */ ;/**  * Sets the OAUTH token for authentication (instead of username/password) when using client lookup  */ public KubernetesServiceCallServiceDiscoveryConfiguration oauthToken(String oauthToken) {     setOauthToken(oauthToken).     return this. }
true;public;1;4;/**  * Sets the Certificate Authority data when using client lookup  */ ;/**  * Sets the Certificate Authority data when using client lookup  */ public KubernetesServiceCallServiceDiscoveryConfiguration caCertData(String caCertData) {     setCaCertData(caCertData).     return this. }
true;public;1;4;/**  * Sets the Certificate Authority data that are loaded from the file when using client lookup  */ ;/**  * Sets the Certificate Authority data that are loaded from the file when using client lookup  */ public KubernetesServiceCallServiceDiscoveryConfiguration caCertFile(String caCertFile) {     setCaCertFile(caCertFile).     return this. }
true;public;1;4;/**  * Sets the Client Certificate data when using client lookup  */ ;/**  * Sets the Client Certificate data when using client lookup  */ public KubernetesServiceCallServiceDiscoveryConfiguration clientCertData(String clientCertData) {     setClientCertData(clientCertData).     return this. }
true;public;1;4;/**  * Sets the Client Certificate data that are loaded from the file when using client lookup  */ ;/**  * Sets the Client Certificate data that are loaded from the file when using client lookup  */ public KubernetesServiceCallServiceDiscoveryConfiguration clientCertFile(String clientCertFile) {     setClientCertFile(clientCertFile).     return this. }
true;public;1;4;/**  * Sets the Client Keystore algorithm, such as RSA when using client lookup  */ ;/**  * Sets the Client Keystore algorithm, such as RSA when using client lookup  */ public KubernetesServiceCallServiceDiscoveryConfiguration clientKeyAlgo(String clientKeyAlgo) {     setClientKeyAlgo(clientKeyAlgo).     return this. }
true;public;1;4;/**  * Sets the Client Keystore data when using client lookup  */ ;/**  * Sets the Client Keystore data when using client lookup  */ public KubernetesServiceCallServiceDiscoveryConfiguration clientKeyData(String clientKeyData) {     setClientKeyData(clientKeyData).     return this. }
true;public;1;4;/**  * Sets the Client Keystore data that are loaded from the file when using client lookup  */ ;/**  * Sets the Client Keystore data that are loaded from the file when using client lookup  */ public KubernetesServiceCallServiceDiscoveryConfiguration clientKeyFile(String clientKeyFile) {     setClientKeyFile(clientKeyFile).     return this. }
true;public;1;4;/**  * Sets the Client Keystore passphrase when using client lookup  */ ;/**  * Sets the Client Keystore passphrase when using client lookup  */ public KubernetesServiceCallServiceDiscoveryConfiguration clientKeyPassphrase(String clientKeyPassphrase) {     setClientKeyPassphrase(clientKeyPassphrase).     return this. }
true;public;1;4;/**  * Sets whether to turn on trust certificate check when using client lookup  */ ;/**  * Sets whether to turn on trust certificate check when using client lookup  */ public KubernetesServiceCallServiceDiscoveryConfiguration trustCerts(boolean trustCerts) {     setTrustCerts(trustCerts).     return this. }
