commented;modifiers;parameterAmount;loc;comment;code
true;protected;1;4;/**  * Creates the {@link FilterProcessor} from the expression node.  *  * @param routeContext  the route context  * @return the created {@link FilterProcessor}  * @throws Exception is thrown if error creating the processor  */ ;/**  * Creates the {@link FilterProcessor} from the expression node.  *  * @param routeContext  the route context  * @return the created {@link FilterProcessor}  * @throws Exception is thrown if error creating the processor  */ protected FilterProcessor createFilterProcessor(RouteContext routeContext) throws Exception {     Processor childProcessor = createOutputsProcessor(routeContext).     return new FilterProcessor(createPredicate(routeContext), childProcessor). }
true;protected;1;3;/**  * Creates the {@link Predicate} from the expression node.  *  * @param routeContext  the route context  * @return the created predicate  */ ;/**  * Creates the {@link Predicate} from the expression node.  *  * @param routeContext  the route context  * @return the created predicate  */ protected Predicate createPredicate(RouteContext routeContext) {     return definition.getExpression().createPredicate(routeContext). }
