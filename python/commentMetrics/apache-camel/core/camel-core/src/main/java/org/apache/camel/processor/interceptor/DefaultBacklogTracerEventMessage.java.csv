commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public long getUid() {     return uid. }
false;public;0;3;;public Date getTimestamp() {     return timestamp. }
false;public;0;3;;public String getRouteId() {     return routeId. }
false;public;0;3;;public String getToNode() {     return toNode. }
false;public;0;3;;public String getExchangeId() {     return exchangeId. }
false;public;0;3;;public String getMessageAsXml() {     return messageAsXml. }
false;public;0;4;;@Override public String toString() {     return "DefaultBacklogTracerEventMessage[" + exchangeId + " at " + toNode + "]". }
true;public;1;24;/**  * Dumps the event message as XML using the {@link #ROOT_TAG} as root tag.  * <p/>  * The <tt>timestamp</tt> tag is formatted in the format defined by {@link #TIMESTAMP_FORMAT}  *  * @return xml representation of this event  */ ;/**  * Dumps the event message as XML using the {@link #ROOT_TAG} as root tag.  * <p/>  * The <tt>timestamp</tt> tag is formatted in the format defined by {@link #TIMESTAMP_FORMAT}  *  * @return xml representation of this event  */ public String toXml(int indent) {     StringBuilder prefix = new StringBuilder().     for (int i = 0. i < indent. i++) {         prefix.append(" ").     }     StringBuilder sb = new StringBuilder().     sb.append(prefix).append("<").append(ROOT_TAG).append(">\n").     sb.append(prefix).append("  <uid>").append(uid).append("</uid>\n").     String ts = new SimpleDateFormat(TIMESTAMP_FORMAT).format(timestamp).     sb.append(prefix).append("  <timestamp>").append(ts).append("</timestamp>\n").     // route id is optional and we then use an empty value for no route id     sb.append(prefix).append("  <routeId>").append(routeId != null ? routeId : "").append("</routeId>\n").     if (toNode != null) {         sb.append(prefix).append("  <toNode>").append(toNode).append("</toNode>\n").     } else {         // if first message the use routeId as toNode         sb.append(prefix).append("  <toNode>").append(routeId).append("</toNode>\n").     }     sb.append(prefix).append("  <exchangeId>").append(exchangeId).append("</exchangeId>\n").     sb.append(prefix).append(messageAsXml).append("\n").     sb.append(prefix).append("</").append(ROOT_TAG).append(">").     return sb.toString(). }
