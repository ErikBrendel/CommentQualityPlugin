commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public String toString() {     return "bean: " + name. }
true;public;0;5;/**  * Creates a cached and constant {@link org.apache.camel.component.bean.BeanHolder} from this holder.  *  * @return a new {@link org.apache.camel.component.bean.BeanHolder} that has cached the lookup of the bean.  */ ;/**  * Creates a cached and constant {@link org.apache.camel.component.bean.BeanHolder} from this holder.  *  * @return a new {@link org.apache.camel.component.bean.BeanHolder} that has cached the lookup of the bean.  */ public ConstantBeanHolder createCacheHolder() {     Object bean = getBean().     BeanInfo info = createBeanInfo(bean).     return new ConstantBeanHolder(bean, info). }
false;public;0;26;;public Object getBean() throws NoSuchBeanException {     // must always lookup bean first     Object value = lookupBean().     if (value != null) {         // could be a class then create an instance of it         if (value instanceof Class) {             // bean is a class so create an instance of it             value = context.getInjector().newInstance((Class<?>) value).         }         return value.     }     // okay bean is not in registry, so try to resolve if its a class name and create a shared instance     if (clazz == null) {         clazz = context.getClassResolver().resolveClass(name).     }     if (clazz == null) {         // no its not a class then we cannot find the bean         throw new NoSuchBeanException(name).     }     // bean is a class so create an instance of it     return context.getInjector().newInstance(clazz). }
false;public;0;3;;public Processor getProcessor() {     return null. }
false;public;0;3;;public boolean supportProcessor() {     return false. }
false;public;0;7;;public BeanInfo getBeanInfo() {     if (beanInfo == null) {         Object bean = getBean().         this.beanInfo = createBeanInfo(bean).     }     return beanInfo. }
false;public;1;3;;public BeanInfo getBeanInfo(Object bean) {     return createBeanInfo(bean). }
false;public;0;3;;public String getName() {     return name. }
false;public;0;3;;public Registry getRegistry() {     return registry. }
false;public;0;3;;public CamelContext getContext() {     return context. }
false;public;0;6;;public ParameterMappingStrategy getParameterMappingStrategy() {     if (parameterMappingStrategy == null) {         parameterMappingStrategy = createParameterMappingStrategy().     }     return parameterMappingStrategy. }
false;public;1;3;;public void setParameterMappingStrategy(ParameterMappingStrategy parameterMappingStrategy) {     this.parameterMappingStrategy = parameterMappingStrategy. }
true;protected;1;3;// ------------------------------------------------------------------------- ;// Implementation methods // ------------------------------------------------------------------------- protected BeanInfo createBeanInfo(Object bean) {     return new BeanInfo(context, bean.getClass(), getParameterMappingStrategy()). }
false;protected;0;3;;protected ParameterMappingStrategy createParameterMappingStrategy() {     return BeanInfo.createParameterMappingStrategy(context). }
false;protected;0;3;;protected Object lookupBean() {     return registry.lookupByName(name). }
