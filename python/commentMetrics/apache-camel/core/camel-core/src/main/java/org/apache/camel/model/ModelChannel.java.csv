commented;modifiers;parameterAmount;loc;comment;code
true;;2;1;/**  * Initializes the channel.  *  * @param outputDefinition  the route definition the {@link Channel} represents  * @param routeContext      the route context  * @throws Exception is thrown if some error occurred  */ ;/**  * Initializes the channel.  *  * @param outputDefinition  the route definition the {@link Channel} represents  * @param routeContext      the route context  * @throws Exception is thrown if some error occurred  */ void initChannel(ProcessorDefinition<?> outputDefinition, RouteContext routeContext) throws Exception.
true;;2;1;/**  * Post initializes the channel.  *  * @param outputDefinition  the route definition the {@link Channel} represents  * @param routeContext      the route context  * @throws Exception is thrown if some error occurred  */ ;/**  * Post initializes the channel.  *  * @param outputDefinition  the route definition the {@link Channel} represents  * @param routeContext      the route context  * @throws Exception is thrown if some error occurred  */ void postInitChannel(ProcessorDefinition<?> outputDefinition, RouteContext routeContext) throws Exception.
true;;1;1;/**  * If the initialized output definition contained outputs (children) then we need to  * set the child so we can leverage fine grained tracing  *  * @param child the child  */ ;/**  * If the initialized output definition contained outputs (children) then we need to  * set the child so we can leverage fine grained tracing  *  * @param child the child  */ void setChildDefinition(ProcessorDefinition<?> child).
true;;0;1;/**  * Gets the definition of the next processor  *  * @return the processor definition  */ ;/**  * Gets the definition of the next processor  *  * @return the processor definition  */ ProcessorDefinition<?> getProcessorDefinition().
