commented;modifiers;parameterAmount;loc;comment;code
false;public;4;15;;@Override public Expression createExpression(CamelContext camelContext, Annotation annotation, LanguageAnnotation languageAnnotation, Class<?> expressionReturnType) {     String beanName = getFromAnnotation(annotation, "ref").     String method = getFromAnnotation(annotation, "method").     // ref is mandatory     StringHelper.notEmpty(beanName, "ref", annotation).     // method is optional but provide it as null to the bean expression     if (org.apache.camel.util.ObjectHelper.isEmpty(method)) {         method = null.     }     return new BeanExpression(beanName, method). }
false;protected;2;13;;protected String getFromAnnotation(Annotation annotation, String attribute) {     try {         Method method = annotation.getClass().getMethod(attribute).         Object value = ObjectHelper.invokeMethod(method, annotation).         if (value == null) {             throw new IllegalArgumentException("Cannot determine the " + attribute + " from the annotation: " + annotation).         }         return value.toString().     } catch (NoSuchMethodException e) {         throw new IllegalArgumentException("Cannot determine the " + attribute + " of the annotation: " + annotation + " as it does not have a " + attribute + "() method").     } }
