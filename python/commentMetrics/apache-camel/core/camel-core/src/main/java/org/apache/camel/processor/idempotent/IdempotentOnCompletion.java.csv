commented;modifiers;parameterAmount;loc;comment;code
false;public;1;9;;public void onComplete(Exchange exchange) {     if (ExchangeHelper.isFailureHandled(exchange)) {         // the exchange did not process successfully but was failure handled by the dead letter channel         // and thus moved to the dead letter queue. We should thus not consider it as complete.         onFailedMessage(exchange, messageId).     } else {         onCompletedMessage(exchange, messageId).     } }
false;public;1;3;;public void onFailure(Exchange exchange) {     onFailedMessage(exchange, messageId). }
true;protected;2;7;/**  * A strategy method to allow derived classes to overload the behavior of  * processing a completed message  *  * @param exchange  the exchange  * @param messageId the message ID of this exchange  */ ;/**  * A strategy method to allow derived classes to overload the behavior of  * processing a completed message  *  * @param exchange  the exchange  * @param messageId the message ID of this exchange  */ protected void onCompletedMessage(Exchange exchange, String messageId) {     if (!eager) {         // if not eager we should add the key when its complete         idempotentRepository.add(exchange, messageId).     }     idempotentRepository.confirm(exchange, messageId). }
true;protected;2;6;/**  * A strategy method to allow derived classes to overload the behavior of  * processing a failed message  *  * @param exchange  the exchange  * @param messageId the message ID of this exchange  */ ;/**  * A strategy method to allow derived classes to overload the behavior of  * processing a failed message  *  * @param exchange  the exchange  * @param messageId the message ID of this exchange  */ protected void onFailedMessage(Exchange exchange, String messageId) {     if (removeOnFailure) {         idempotentRepository.remove(exchange, messageId).         LOG.debug("Removed from repository as exchange failed: {} with id: {}", exchange, messageId).     } }
false;public;0;4;;@Override public String toString() {     return "IdempotentOnCompletion[" + messageId + ']'. }
