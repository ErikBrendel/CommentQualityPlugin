commented;modifiers;parameterAmount;loc;comment;code
false;public;0;9;;@Override public String toString() {     String desc = description().     if (org.apache.camel.util.ObjectHelper.isEmpty(desc)) {         return "Transacted".     } else {         return "Transacted[" + desc + "]".     } }
false;protected;0;9;;protected String description() {     if (ref != null) {         return "ref:" + ref.     } else if (policy != null) {         return policy.toString().     } else {         return "".     } }
false;public;0;4;;@Override public String getShortName() {     return "transacted". }
false;public;0;9;;@Override public String getLabel() {     String desc = description().     if (org.apache.camel.util.ObjectHelper.isEmpty(desc)) {         return "transacted".     } else {         return "transacted[" + desc + "]".     } }
false;public;0;4;;@Override public boolean isAbstract() {     return true. }
false;public;0;5;;@Override public boolean isTopLevelOnly() {     // transacted is top level as we only allow have it configured once per route     return true. }
false;public;0;4;;@Override public boolean isWrappingEntireOutput() {     return true. }
false;public;0;3;;public Policy getPolicy() {     return policy. }
false;public;0;3;;public String getRef() {     return ref. }
false;public;1;3;;public void setRef(String ref) {     this.ref = ref. }
false;public;0;3;;public Class<? extends Policy> getType() {     return type. }
true;public;1;3;/**  * Sets a policy type that this definition should scope within.  * <p/>  * Is used for convention over configuration situations where the policy  * should be automatic looked up in the registry and it should be based  * on this type. For instance a {@link org.apache.camel.spi.TransactedPolicy}  * can be set as type for easy transaction configuration.  * <p/>  * Will by default scope to the wide {@link Policy}  *  * @param type the policy type  */ ;/**  * Sets a policy type that this definition should scope within.  * <p/>  * Is used for convention over configuration situations where the policy  * should be automatic looked up in the registry and it should be based  * on this type. For instance a {@link org.apache.camel.spi.TransactedPolicy}  * can be set as type for easy transaction configuration.  * <p/>  * Will by default scope to the wide {@link Policy}  *  * @param type the policy type  */ public void setType(Class<? extends Policy> type) {     this.type = type. }
true;public;1;4;/**  * Sets a reference to use for lookup the policy in the registry.  *  * @param ref the reference  * @return the builder  */ ;/**  * Sets a reference to use for lookup the policy in the registry.  *  * @param ref the reference  * @return the builder  */ public TransactedDefinition ref(String ref) {     setRef(ref).     return this. }
