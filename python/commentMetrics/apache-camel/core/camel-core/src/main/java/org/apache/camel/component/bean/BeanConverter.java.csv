commented;modifiers;parameterAmount;loc;comment;code
false;public,static;4;28;;@FallbackConverter public static Object convertTo(Class<?> type, Exchange exchange, Object value, TypeConverterRegistry registry) {     // use a fallback type converter so we can convert the embedded body if the value is BeanInvocation     if (BeanInvocation.class.isAssignableFrom(value.getClass())) {         BeanInvocation bi = (BeanInvocation) value.         if (bi.getArgs() == null || bi.getArgs().length != 1) {             // not possible to convert at this time as we try to convert the data passed in at first argument             return MISS_VALUE.         }         Class<?> from = bi.getArgs()[0].getClass().         Object body = bi.getArgs()[0].         // maybe from is already the type we want         if (type.isAssignableFrom(from)) {             return body.         }         // no then try to lookup a type converter         TypeConverter tc = registry.lookup(type, from).         if (tc != null) {             return tc.convertTo(type, exchange, body).         }     }     return null. }
