commented;modifiers;parameterAmount;loc;comment;code
false;public;1;19;;@Override public Processor createProcessor(RouteContext routeContext) throws Exception {     Expression exp = definition.getExpression().createExpression(routeContext).     boolean isShareUnitOfWork = definition.getShareUnitOfWork() != null && definition.getShareUnitOfWork().     boolean isIgnoreInvalidEndpoint = definition.getIgnoreInvalidEndpoint() != null && definition.getIgnoreInvalidEndpoint().     Enricher enricher = new Enricher(exp).     enricher.setShareUnitOfWork(isShareUnitOfWork).     enricher.setIgnoreInvalidEndpoint(isIgnoreInvalidEndpoint).     AggregationStrategy strategy = createAggregationStrategy(routeContext).     if (strategy != null) {         enricher.setAggregationStrategy(strategy).     }     if (definition.getAggregateOnException() != null) {         enricher.setAggregateOnException(definition.getAggregateOnException()).     }     return enricher. }
false;private;1;24;;private AggregationStrategy createAggregationStrategy(RouteContext routeContext) {     AggregationStrategy strategy = definition.getAggregationStrategy().     if (strategy == null && definition.getAggregationStrategyRef() != null) {         Object aggStrategy = routeContext.lookup(definition.getAggregationStrategyRef(), Object.class).         if (aggStrategy instanceof AggregationStrategy) {             strategy = (AggregationStrategy) aggStrategy.         } else if (aggStrategy != null) {             AggregationStrategyBeanAdapter adapter = new AggregationStrategyBeanAdapter(aggStrategy, definition.getAggregationStrategyMethodName()).             if (definition.getAggregationStrategyMethodAllowNull() != null) {                 adapter.setAllowNullNewExchange(definition.getAggregationStrategyMethodAllowNull()).                 adapter.setAllowNullOldExchange(definition.getAggregationStrategyMethodAllowNull()).             }             strategy = adapter.         } else {             throw new IllegalArgumentException("Cannot find AggregationStrategy in Registry with name: " + definition.getAggregationStrategyRef()).         }     }     if (strategy instanceof CamelContextAware) {         ((CamelContextAware) strategy).setCamelContext(routeContext.getCamelContext()).     }     return strategy. }
