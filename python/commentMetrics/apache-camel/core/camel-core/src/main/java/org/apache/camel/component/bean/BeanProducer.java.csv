commented;modifiers;parameterAmount;loc;comment;code
false;public;2;4;;@Override public boolean process(Exchange exchange, AsyncCallback callback) {     return processor.process(exchange, callback). }
false;protected;0;14;;@Override protected void doStart() throws Exception {     super.doStart().     if (processor.getBeanHolder() instanceof ConstantBeanHolder) {         try {             // Start the bean if it implements Service interface and if cached             // so meant to be reused             ServiceHelper.startService(processor.getBean()).             beanStarted = true.         } catch (NoSuchBeanException e) {         }     } }
false;protected;0;14;;@Override protected void doStop() throws Exception {     if (beanStarted) {         try {             // Stop the bean if it implements Service interface and if cached             // so meant to be reused             ServiceHelper.stopService(processor.getBean()).             beanStarted = false.         } catch (NoSuchBeanException e) {         }     }     super.doStop(). }
