commented;modifiers;parameterAmount;loc;comment;code
false;protected;1;25;;@Override protected Validator doCreateValidator(CamelContext context) throws Exception {     if (definition.getRef() == null && definition.getClassName() == null) {         throw new IllegalArgumentException("'ref' or 'type' must be specified for customValidator").     }     Validator validator.     if (definition.getRef() != null) {         validator = context.getRegistry().lookupByNameAndType(definition.getRef(), Validator.class).         if (validator == null) {             throw new IllegalArgumentException("Cannot find validator with ref:" + definition.getRef()).         }         if (validator.getType() != null) {             throw new IllegalArgumentException(String.format("Validator '%s' is already in use. Please check if duplicate validator exists.", definition.getRef())).         }     } else {         Class<Validator> validatorClass = context.getClassResolver().resolveMandatoryClass(definition.getClassName(), Validator.class).         if (validatorClass == null) {             throw new IllegalArgumentException("Cannot find validator class: " + definition.getClassName()).         }         validator = context.getInjector().newInstance(validatorClass).     }     validator.setCamelContext(context).     return validator.setType(definition.getType()). }
