commented;modifiers;parameterAmount;loc;comment;code
false;public;1;50;;public Object resolveVariable(QName name) {     String uri = name.getNamespaceURI().     String localPart = name.getLocalPart().     Object answer = null.     Message in = exchange.get().getIn().     if (uri == null || uri.length() == 0) {         answer = variables.get(localPart).         if (answer == null) {             Message message = in.             if (message != null) {                 answer = message.getHeader(localPart).             }             if (answer == null) {                 answer = exchange.get().getProperty(localPart).             }         }     } else if (uri.equals(SYSTEM_PROPERTIES_NAMESPACE)) {         try {             answer = System.getProperty(localPart).         } catch (Exception e) {             LOG.debug("Security exception evaluating system property: " + localPart + ". Reason: " + e, e).         }     } else if (uri.equals(ENVIRONMENT_VARIABLES)) {         answer = System.getenv().get(localPart).     } else if (uri.equals(EXCHANGE_PROPERTY)) {         answer = exchange.get().getProperty(localPart).     } else if (uri.equals(IN_NAMESPACE)) {         answer = in.getHeader(localPart).         if (answer == null && localPart.equals("body")) {             answer = in.getBody().         }     } else if (uri.equals(OUT_NAMESPACE)) {         if (exchange.get().hasOut()) {             Message out = exchange.get().getOut().             answer = out.getHeader(localPart).             if (answer == null && localPart.equals("body")) {                 answer = out.getBody().             }         }     }     // if we return null, then the JDK default XPathEngine will throw an exception     if (answer == null) {         return "".     } else {         return answer.     } }
false;public;2;3;;public void addVariable(String localPart, Object value) {     variables.put(localPart, value). }
