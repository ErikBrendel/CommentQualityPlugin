commented;modifiers;parameterAmount;loc;comment;code
false;protected;1;8;;protected CompletableFuture<CamelSagaCoordinator> getCurrentSagaCoordinator(Exchange exchange) {     String currentSaga = exchange.getIn().getHeader(Exchange.SAGA_LONG_RUNNING_ACTION, String.class).     if (currentSaga != null) {         return sagaService.getSaga(currentSaga).     }     return CompletableFuture.completedFuture(null). }
false;protected;2;7;;protected void setCurrentSagaCoordinator(Exchange exchange, CamelSagaCoordinator coordinator) {     if (coordinator != null) {         exchange.getIn().setHeader(Exchange.SAGA_LONG_RUNNING_ACTION, coordinator.getId()).     } else {         exchange.getIn().removeHeader(Exchange.SAGA_LONG_RUNNING_ACTION).     } }
false;protected;4;20;;protected void handleSagaCompletion(Exchange exchange, CamelSagaCoordinator coordinator, CamelSagaCoordinator previousCoordinator, AsyncCallback callback) {     if (this.completionMode == SagaCompletionMode.AUTO) {         if (exchange.getException() != null) {             coordinator.compensate().whenComplete((done, ex) -> ifNotException(ex, exchange, callback, () -> {                 setCurrentSagaCoordinator(exchange, previousCoordinator).                 callback.done(false).             })).         } else {             coordinator.complete().whenComplete((done, ex) -> ifNotException(ex, exchange, callback, () -> {                 setCurrentSagaCoordinator(exchange, previousCoordinator).                 callback.done(false).             })).         }     } else if (this.completionMode == SagaCompletionMode.MANUAL) {         // Completion will be handled manually by the user         callback.done(false).     } else {         throw new IllegalStateException("Unsupported completion mode: " + this.completionMode).     } }
false;public;0;3;;public CamelSagaService getSagaService() {     return sagaService. }
false;public;0;4;;@Override public String toString() {     return "saga". }
false;protected;4;3;;protected void ifNotException(Throwable ex, Exchange exchange, AsyncCallback callback, Runnable code) {     ifNotException(ex, exchange, false, null, null, callback, code). }
false;protected;7;13;;protected void ifNotException(Throwable ex, Exchange exchange, boolean handleCompletion, CamelSagaCoordinator coordinator, CamelSagaCoordinator previousCoordinator, AsyncCallback callback, Runnable code) {     if (ex != null) {         exchange.setException(ex).         if (handleCompletion) {             handleSagaCompletion(exchange, coordinator, previousCoordinator, callback).         } else {             callback.done(false).         }     } else {         code.run().     } }
