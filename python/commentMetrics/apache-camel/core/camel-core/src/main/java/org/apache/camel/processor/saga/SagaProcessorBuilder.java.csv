commented;modifiers;parameterAmount;loc;comment;code
false;public;1;4;;public SagaProcessorBuilder camelContext(CamelContext camelContext) {     this.camelContext = camelContext.     return this. }
false;public;1;4;;public SagaProcessorBuilder childProcessor(Processor childProcessor) {     this.childProcessor = childProcessor.     return this. }
false;public;1;4;;public SagaProcessorBuilder sagaService(CamelSagaService sagaService) {     this.sagaService = sagaService.     return this. }
false;public;1;4;;public SagaProcessorBuilder step(CamelSagaStep step) {     this.step = step.     return this. }
false;public;1;4;;public SagaProcessorBuilder propagation(SagaPropagation propagation) {     this.propagation = propagation.     return this. }
false;public;1;4;;public SagaProcessorBuilder completionMode(SagaCompletionMode completionMode) {     this.completionMode = completionMode.     return this. }
false;public;0;22;;public SagaProcessor build() {     if (propagation == null) {         throw new IllegalStateException("A propagation mode has not been set").     }     switch(propagation) {         case REQUIRED:             return new RequiredSagaProcessor(camelContext, childProcessor, sagaService, completionMode, step).         case REQUIRES_NEW:             return new RequiresNewSagaProcessor(camelContext, childProcessor, sagaService, completionMode, step).         case SUPPORTS:             return new SupportsSagaProcessor(camelContext, childProcessor, sagaService, completionMode, step).         case NOT_SUPPORTED:             return new NotSupportedSagaProcessor(camelContext, childProcessor, sagaService, completionMode, step).         case NEVER:             return new NeverSagaProcessor(camelContext, childProcessor, sagaService, completionMode, step).         case MANDATORY:             return new MandatorySagaProcessor(camelContext, childProcessor, sagaService, completionMode, step).         default:             throw new IllegalStateException("Unsupported propagation mode: " + propagation).     } }
