commented;modifiers;parameterAmount;loc;comment;code
false;protected;2;9;;@Override protected void configureDataFormat(DataFormat dataFormat, CamelContext camelContext) {     if (usingIterator != null) {         setProperty(camelContext, dataFormat, "usingIterator", usingIterator).     }     if (this.clazzName != null) {         setProperty(camelContext, dataFormat, "clazzName", clazzName).     } }
false;public;0;3;;public Boolean getUsingIterator() {     return usingIterator. }
true;public;1;3;/**  * If the asn1 file has more then one entry, the setting this option to true, allows to work with the splitter EIP,  * to split the data using an iterator in a streaming mode.  */ ;/**  * If the asn1 file has more then one entry, the setting this option to true, allows to work with the splitter EIP,  * to split the data using an iterator in a streaming mode.  */ public void setUsingIterator(Boolean usingIterator) {     this.usingIterator = usingIterator. }
false;public;0;3;;public String getClazzName() {     return clazzName. }
true;public;1;3;/**  * Name of class to use when unmarshalling  */ ;/**  * Name of class to use when unmarshalling  */ public void setClazzName(String clazzName) {     this.clazzName = clazzName. }
