commented;modifiers;parameterAmount;loc;comment;code
false;public;3;11;;@Override public Object doInvokeProxy(Object proxy, Method method, Object[] args) throws Throwable {     int argsLength = (args == null) ? 0 : args.length.     if (argsLength != 1) {         throw new RuntimeCamelException(String.format("Error creating proxy for %s.%s Number of arguments must be 1 but is %d", method.getDeclaringClass().getName(), method.getName(), argsLength)).     }     final ExchangePattern pattern = method.getReturnType() != Void.TYPE ? ExchangePattern.InOut : ExchangePattern.InOnly.     return invokeWithBody(method, args[0], pattern). }
