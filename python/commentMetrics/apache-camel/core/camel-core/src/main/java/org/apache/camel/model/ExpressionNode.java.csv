commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public ExpressionDefinition getExpression() {     return expression. }
false;public;1;4;;public void setExpression(ExpressionDefinition expression) {     // favour using the helper to set the expression as it can unwrap some unwanted builders when using Java DSL     this.expression = expression. }
false;public;0;4;;@Override public List<ProcessorDefinition<?>> getOutputs() {     return outputs. }
false;public;1;3;;public void setOutputs(List<ProcessorDefinition<?>> outputs) {     this.outputs = outputs. }
false;public;0;4;;@Override public boolean isOutputSupported() {     return true. }
false;public;0;7;;@Override public String getLabel() {     if (getExpression() == null) {         return "".     }     return getExpression().getLabel(). }
false;public;1;5;;@Override public void configureChild(ProcessorDefinition<?> output) {     // reuse the logic from pre create processor     preCreateProcessor(). }
false;public;0;27;;@Override public void preCreateProcessor() {     Expression exp = getExpression().     if (getExpression() != null && getExpression().getExpressionValue() != null) {         exp = getExpression().getExpressionValue().     }     if (exp instanceof ExpressionClause) {         ExpressionClause<?> clause = (ExpressionClause<?>) exp.         if (clause.getExpressionType() != null) {             // if using the Java DSL then the expression may have been set using the             // ExpressionClause which is a fancy builder to define expressions and predicates             // using fluent builders in the DSL. However we need afterwards a callback to             // reset the expression to the expression type the ExpressionClause did build for us             setExpression(clause.getExpressionType()).         }     }     if (getExpression() != null && getExpression().getExpression() == null) {         // use toString from predicate or expression so we have some information to show in the route model         if (getExpression().getPredicate() != null) {             getExpression().setExpression(getExpression().getPredicate().toString()).         } else if (getExpression().getExpressionValue() != null) {             getExpression().setExpression(getExpression().getExpressionValue().toString()).         }     } }
