commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public String toString() {     return "InstanceMethodTypeConverter: " + method. }
false;public;0;4;;@Override public boolean allowNull() {     return allowNull. }
false;public;3;17;;@SuppressWarnings("unchecked") public <T> T convertTo(Class<T> type, Exchange exchange, Object value) {     Object instance = injector.newInstance().     if (instance == null) {         throw new RuntimeCamelException("Could not instantiate an instance of: " + type.getCanonicalName()).     }     // inject parent type converter     if (instance instanceof TypeConverterAware) {         if (registry instanceof TypeConverter) {             TypeConverter parentTypeConverter = (TypeConverter) registry.             ((TypeConverterAware) instance).setTypeConverter(parentTypeConverter).         }     }     return useExchange ? (T) ObjectHelper.invokeMethod(method, instance, value, exchange) : (T) ObjectHelper.invokeMethod(method, instance, value). }
