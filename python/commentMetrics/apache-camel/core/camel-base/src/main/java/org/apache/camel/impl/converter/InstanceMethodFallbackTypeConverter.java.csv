commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public String toString() {     return "InstanceMethodFallbackTypeConverter: " + method. }
false;public;0;4;;@Override public boolean allowNull() {     return allowNull. }
false;public;3;10;;@SuppressWarnings("unchecked") public <T> T convertTo(Class<T> type, Exchange exchange, Object value) {     Object instance = injector.newInstance().     if (instance == null) {         throw new RuntimeCamelException("Could not instantiate an instance of: " + type.getCanonicalName()).     }     return useExchange ? (T) ObjectHelper.invokeMethod(method, instance, type, exchange, value, registry) : (T) ObjectHelper.invokeMethod(method, instance, type, value, registry). }
