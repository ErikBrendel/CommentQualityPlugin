commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public void start() throws Exception { // noop }
false;public;0;4;;@Override public void stop() throws Exception {     cache.clear(). }
false;public;1;16;;@Override public String modelJSonSchema(String name) {     String answer = null.     if (caching) {         answer = (String) cache.get("model-" + name).     }     if (answer == null) {         answer = getJSonSchemaResolver().getModelJSonSchema(name).         if (caching) {             cache.put("model-" + name, answer).         }     }     return answer. }
false;public;1;16;;@Override public String componentJSonSchema(String name) {     String answer = null.     if (caching) {         answer = (String) cache.get("component-" + name).     }     if (answer == null) {         answer = getJSonSchemaResolver().getComponentJSonSchema(name).         if (caching) {             cache.put("component-" + name, answer).         }     }     return answer. }
false;public;1;16;;@Override public String dataFormatJSonSchema(String name) {     String answer = null.     if (caching) {         answer = (String) cache.get("dataformat-" + name).     }     if (answer == null) {         answer = getJSonSchemaResolver().getDataFormatJSonSchema(name).         if (caching) {             cache.put("dataformat-" + name, answer).         }     }     return answer. }
false;public;1;21;;@Override public String languageJSonSchema(String name) {     // if we try to look method then its in the bean.json file     if ("method".equals(name)) {         name = "bean".     }     String answer = null.     if (caching) {         answer = (String) cache.get("language-" + name).     }     if (answer == null) {         answer = getJSonSchemaResolver().getLanguageJSonSchema(name).         if (caching) {             cache.put("language-" + name, answer).         }     }     return answer. }
