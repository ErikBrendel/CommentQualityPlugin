commented;modifiers;parameterAmount;loc;comment;code
false;public;1;6;;public void process(Exchange exchange) throws Exception {     boolean answer = predicate.matches(exchange).     Message out = exchange.getOut().     out.copyFrom(exchange.getIn()).     out.setBody(answer). }
false;public,static;1;12;;@Converter public static Processor toProcessor(final Predicate predicate) {     return new Processor() {          public void process(Exchange exchange) throws Exception {             boolean answer = predicate.matches(exchange).             Message out = exchange.getOut().             out.copyFrom(exchange.getIn()).             out.setBody(answer).         }     }. }
false;public;1;6;;public void process(Exchange exchange) throws Exception {     Object answer = expression.evaluate(exchange, Object.class).     Message out = exchange.getOut().     out.copyFrom(exchange.getIn()).     out.setBody(answer). }
false;public,static;1;11;;@Converter public static Processor toProcessor(final Expression expression) {     return new Processor() {          public void process(Exchange exchange) throws Exception {             Object answer = expression.evaluate(exchange, Object.class).             Message out = exchange.getOut().             out.copyFrom(exchange.getIn()).             out.setBody(answer).         }     }. }
