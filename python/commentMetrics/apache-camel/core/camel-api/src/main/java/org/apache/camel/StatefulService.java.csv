commented;modifiers;parameterAmount;loc;comment;code
true;;0;1;/**  * Returns the current status  *  * @return the current status  */ ;/**  * Returns the current status  *  * @return the current status  */ ServiceStatus getStatus().
true;;0;1;/**  * Whether the service is started  *  * @return true if this service has been started  */ ;/**  * Whether the service is started  *  * @return true if this service has been started  */ boolean isStarted().
true;;0;1;/**  * Whether the service is starting  *  * @return true if this service is being started  */ ;/**  * Whether the service is starting  *  * @return true if this service is being started  */ boolean isStarting().
true;;0;1;/**  * Whether the service is stopping  *  * @return true if this service is in the process of stopping  */ ;/**  * Whether the service is stopping  *  * @return true if this service is in the process of stopping  */ boolean isStopping().
true;;0;1;/**  * Whether the service is stopped  *  * @return true if this service is stopped  */ ;/**  * Whether the service is stopped  *  * @return true if this service is stopped  */ boolean isStopped().
true;;0;1;/**  * Whether the service is suspending  *  * @return true if this service is in the process of suspending  */ ;/**  * Whether the service is suspending  *  * @return true if this service is in the process of suspending  */ boolean isSuspending().
true;;0;1;/**  * Helper methods so the service knows if it should keep running.  * Returns <tt>false</tt> if the service is being stopped or is stopped.  *  * @return <tt>true</tt> if the service should continue to run.  */ ;/**  * Helper methods so the service knows if it should keep running.  * Returns <tt>false</tt> if the service is being stopped or is stopped.  *  * @return <tt>true</tt> if the service should continue to run.  */ boolean isRunAllowed().
