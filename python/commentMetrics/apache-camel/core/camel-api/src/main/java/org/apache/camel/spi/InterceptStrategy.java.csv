commented;modifiers;parameterAmount;loc;comment;code
true;;4;2;/**  * This method is invoked by  * {@link org.apache.camel.model.ProcessorDefinition#wrapProcessor(RouteContext, Processor)}  * to give the implementor an opportunity to wrap the target processor  * in a route.  * <p/>  * <b>Important:</b> See the class javadoc for advice on letting interceptor be compatible with the  * asynchronous routing engine.  *  * @param context       Camel context  * @param definition    the model this interceptor represents  * @param target        the processor to be wrapped  * @param nextTarget    the next processor to be routed to  * @return processor    wrapped with an interceptor or not wrapped.  * @throws Exception can be thrown  */ ;// TODO: Camel 3.0 make this an internal API /**  * This method is invoked by  * {@link org.apache.camel.model.ProcessorDefinition#wrapProcessor(RouteContext, Processor)}  * to give the implementor an opportunity to wrap the target processor  * in a route.  * <p/>  * <b>Important:</b> See the class javadoc for advice on letting interceptor be compatible with the  * asynchronous routing engine.  *  * @param context       Camel context  * @param definition    the model this interceptor represents  * @param target        the processor to be wrapped  * @param nextTarget    the next processor to be routed to  * @return processor    wrapped with an interceptor or not wrapped.  * @throws Exception can be thrown  */ Processor wrapProcessorInInterceptors(CamelContext context, NamedNode definition, Processor target, Processor nextTarget) throws Exception.
