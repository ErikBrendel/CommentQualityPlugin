commented;modifiers;parameterAmount;loc;comment;code
true;;0;1;/**  * The endpoint uri  */ ;/**  * The endpoint uri  */ String getUri().
true;;0;1;/**  * The route id (if the endpoint is associated with a route)  */ ;/**  * The route id (if the endpoint is associated with a route)  */ String getRouteId().
true;;0;1;/**  * Whether the endpoint is used as input our output  * <p/>  * The returned value can either be <tt>in</tt> or <tt>out</tt>  */ ;/**  * Whether the endpoint is used as input our output  * <p/>  * The returned value can either be <tt>in</tt> or <tt>out</tt>  */ String getDirection().
true;;0;1;/**  * Usage of the endpoint, such as how many messages it has received / sent to  * <p/>  * This information is only available if {@link org.apache.camel.ManagementStatisticsLevel} is configured as  * {@link org.apache.camel.ManagementStatisticsLevel#Extended}.  */ ;/**  * Usage of the endpoint, such as how many messages it has received / sent to  * <p/>  * This information is only available if {@link org.apache.camel.ManagementStatisticsLevel} is configured as  * {@link org.apache.camel.ManagementStatisticsLevel#Extended}.  */ long getHits().
true;;0;1;/**  * Whether gathering runtime usage is enabled or not.  */ ;/**  * Whether gathering runtime usage is enabled or not.  */ boolean isEnabled().
true;;1;1;/**  * Sets whether gathering runtime usage is enabled or not.  */ ;/**  * Sets whether gathering runtime usage is enabled or not.  */ void setEnabled(boolean enabled).
true;;0;1;/**  * Maximum number of endpoints to keep in the cache per route.  * <p/>  * The default value is <tt>1000</tt>  */ ;/**  * Maximum number of endpoints to keep in the cache per route.  * <p/>  * The default value is <tt>1000</tt>  */ int getLimit().
true;;1;1;/**  * Sets the maximum number of endpoints to keep in the cache per route.  */ ;/**  * Sets the maximum number of endpoints to keep in the cache per route.  */ void setLimit(int limit).
true;;0;1;/**  * Clears the registry  */ ;/**  * Clears the registry  */ void clear().
true;;0;1;/**  * Reset the statistic counters  */ ;/**  * Reset the statistic counters  */ void reset().
true;;0;1;/**  * Number of endpoints currently in the cache.  */ ;/**  * Number of endpoints currently in the cache.  */ int size().
true;;1;1;/**  * Gets all the endpoint uris captured during runtime routing that are in-use of the routes.  *  * @param includeInputs whether to include route inputs  */ ;/**  * Gets all the endpoint uris captured during runtime routing that are in-use of the routes.  *  * @param includeInputs whether to include route inputs  */ List<String> getAllEndpoints(boolean includeInputs).
true;;2;1;/**  * Gets all the endpoint uris captured from the given route during runtime routing that are in-use of the routes.  *  * @param routeId       the route id  * @param includeInputs whether to include route inputs  */ ;/**  * Gets all the endpoint uris captured from the given route during runtime routing that are in-use of the routes.  *  * @param routeId       the route id  * @param includeInputs whether to include route inputs  */ List<String> getEndpointsPerRoute(String routeId, boolean includeInputs).
true;;0;1;/**  * Gets details about all the endpoint captured from the given route during runtime routing that are in-use of the routes.  */ ;/**  * Gets details about all the endpoint captured from the given route during runtime routing that are in-use of the routes.  */ List<Statistic> getEndpointStatistics().
