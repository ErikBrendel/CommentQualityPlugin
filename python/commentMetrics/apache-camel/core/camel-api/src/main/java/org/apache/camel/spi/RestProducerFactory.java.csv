commented;modifiers;parameterAmount;loc;comment;code
true;;10;3;/**  * Creates a new REST producer.  *  * @param camelContext        the camel context  * @param host                host in the syntax scheme:hostname:port, such as http:myserver:8080  * @param verb                HTTP verb such as GET, POST  * @param basePath            base path  * @param uriTemplate         uri template  * @param queryParameters     uri query parameters  * @param consumes            media-types for what the REST service consume as input (accept-type), is <tt>null</tt> or <tt>&#42./&#42.</tt> for anything  * @param produces            media-types for what the REST service produces as output, can be <tt>null</tt>  * @param configuration       REST configuration  * @param parameters          additional parameters  * @return a newly created REST producer  * @throws Exception can be thrown  */ ;/**  * Creates a new REST producer.  *  * @param camelContext        the camel context  * @param host                host in the syntax scheme:hostname:port, such as http:myserver:8080  * @param verb                HTTP verb such as GET, POST  * @param basePath            base path  * @param uriTemplate         uri template  * @param queryParameters     uri query parameters  * @param consumes            media-types for what the REST service consume as input (accept-type), is <tt>null</tt> or <tt>&#42./&#42.</tt> for anything  * @param produces            media-types for what the REST service produces as output, can be <tt>null</tt>  * @param configuration       REST configuration  * @param parameters          additional parameters  * @return a newly created REST producer  * @throws Exception can be thrown  */ Producer createProducer(CamelContext camelContext, String host, String verb, String basePath, String uriTemplate, String queryParameters, String consumes, String produces, RestConfiguration configuration, Map<String, Object> parameters) throws Exception.
