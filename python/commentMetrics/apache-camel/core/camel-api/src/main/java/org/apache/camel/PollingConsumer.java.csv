commented;modifiers;parameterAmount;loc;comment;code
true;;0;1;/**  * Waits until a message is available and then returns it. Warning that this  * method could block indefinitely if no messages are available.  * <p/>  * Will return <tt>null</tt> if the consumer is not started  * <p/>  * <b>Important: </b> See the class javadoc about the need for done the {@link org.apache.camel.spi.UnitOfWork}  * on the returned {@link Exchange}  *  * @return the message exchange received.  */ ;/**  * Waits until a message is available and then returns it. Warning that this  * method could block indefinitely if no messages are available.  * <p/>  * Will return <tt>null</tt> if the consumer is not started  * <p/>  * <b>Important: </b> See the class javadoc about the need for done the {@link org.apache.camel.spi.UnitOfWork}  * on the returned {@link Exchange}  *  * @return the message exchange received.  */ Exchange receive().
true;;0;1;/**  * Attempts to receive a message exchange immediately without waiting and  * returning <tt>null</tt> if a message exchange is not available yet.  * <p/>  * <b>Important: </b> See the class javadoc about the need for done the {@link org.apache.camel.spi.UnitOfWork}  * on the returned {@link Exchange}  *  * @return the message exchange if one is immediately available otherwise  *         <tt>null</tt>  */ ;/**  * Attempts to receive a message exchange immediately without waiting and  * returning <tt>null</tt> if a message exchange is not available yet.  * <p/>  * <b>Important: </b> See the class javadoc about the need for done the {@link org.apache.camel.spi.UnitOfWork}  * on the returned {@link Exchange}  *  * @return the message exchange if one is immediately available otherwise  *         <tt>null</tt>  */ Exchange receiveNoWait().
true;;1;1;/**  * Attempts to receive a message exchange, waiting up to the given timeout  * to expire if a message is not yet available.  * <p/>  * <b>Important: </b> See the class javadoc about the need for done the {@link org.apache.camel.spi.UnitOfWork}  * on the returned {@link Exchange}  *  * @param timeout the amount of time in milliseconds to wait for a message  *                before timing out and returning <tt>null</tt>  *  * @return the message exchange if one was available within the timeout  *         period, or <tt>null</tt> if the timeout expired  */ ;/**  * Attempts to receive a message exchange, waiting up to the given timeout  * to expire if a message is not yet available.  * <p/>  * <b>Important: </b> See the class javadoc about the need for done the {@link org.apache.camel.spi.UnitOfWork}  * on the returned {@link Exchange}  *  * @param timeout the amount of time in milliseconds to wait for a message  *                before timing out and returning <tt>null</tt>  *  * @return the message exchange if one was available within the timeout  *         period, or <tt>null</tt> if the timeout expired  */ Exchange receive(long timeout).
