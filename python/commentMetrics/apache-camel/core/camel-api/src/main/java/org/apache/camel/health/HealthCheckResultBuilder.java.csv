commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public String message() {     return this.message. }
false;public;1;4;;public HealthCheckResultBuilder message(String message) {     this.message = message.     return this. }
false;public;0;3;;public Throwable error() {     return this.error. }
false;public;1;4;;public HealthCheckResultBuilder error(Throwable error) {     this.error = error.     return this. }
false;public;1;3;;public Object detail(String key) {     return this.details != null ? this.details.get(key) : null. }
false;public;2;8;;public HealthCheckResultBuilder detail(String key, Object value) {     if (this.details == null) {         this.details = new HashMap<>().     }     this.details.put(key, value).     return this. }
false;public;1;7;;public HealthCheckResultBuilder details(Map<String, Object> details) {     if (ObjectHelper.isNotEmpty(details)) {         details.forEach(this::detail).     }     return this. }
false;public;0;3;;public HealthCheck.State state() {     return this.state. }
false;public;1;4;;public HealthCheckResultBuilder state(HealthCheck.State state) {     this.state = state.     return this. }
false;public;0;3;;public HealthCheckResultBuilder up() {     return state(HealthCheck.State.UP). }
false;public;0;3;;public HealthCheckResultBuilder down() {     return state(HealthCheck.State.DOWN). }
false;public;0;3;;public HealthCheckResultBuilder unknown() {     return state(HealthCheck.State.UNKNOWN). }
false;public;0;4;;@Override public HealthCheck getCheck() {     return check. }
false;public;0;4;;@Override public HealthCheck.State getState() {     return responseState. }
false;public;0;4;;@Override public Optional<String> getMessage() {     return responseMessage. }
false;public;0;4;;@Override public Optional<Throwable> getError() {     return responseError. }
false;public;0;4;;@Override public Map<String, Object> getDetails() {     return responseDetails. }
false;public;0;39;;@Override public HealthCheck.Result build() {     // Validation     ObjectHelper.notNull(this.state, "Response State").     final HealthCheck.State responseState = this.state.     final Optional<String> responseMessage = Optional.ofNullable(this.message).     final Optional<Throwable> responseError = Optional.ofNullable(this.error).     final Map<String, Object> responseDetails = HealthCheckResultBuilder.this.details != null ? Collections.unmodifiableMap(new HashMap<>(HealthCheckResultBuilder.this.details)) : Collections.emptyMap().     return new HealthCheck.Result() {          @Override         public HealthCheck getCheck() {             return check.         }          @Override         public HealthCheck.State getState() {             return responseState.         }          @Override         public Optional<String> getMessage() {             return responseMessage.         }          @Override         public Optional<Throwable> getError() {             return responseError.         }          @Override         public Map<String, Object> getDetails() {             return responseDetails.         }     }. }
false;public,static;1;3;;public static HealthCheckResultBuilder on(HealthCheck check) {     return new HealthCheckResultBuilder(check). }
