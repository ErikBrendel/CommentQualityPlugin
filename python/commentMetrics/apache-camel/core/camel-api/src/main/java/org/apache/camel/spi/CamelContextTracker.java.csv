commented;modifiers;parameterAmount;loc;comment;code
false;;1;1;;boolean accept(CamelContext camelContext).
false;default;1;4;;@Override default boolean test(CamelContext camelContext) {     return accept(camelContext). }
false;public;1;3;;public boolean accept(CamelContext camelContext) {     return !camelContext.getClass().getName().contains("Proxy"). }
true;public;1;3;/**  * Called to determine whether this tracker should accept the given context.  */ ;/**  * Called to determine whether this tracker should accept the given context.  */ public boolean accept(CamelContext camelContext) {     return filter == null || filter.accept(camelContext). }
true;public;1;3;/**  * Called when a context is created.  */ ;/**  * Called when a context is created.  */ public void contextCreated(CamelContext camelContext) { // do nothing }
false;public,final;0;3;;public final void open() {     TRACKERS.add(this). }
false;public,final;0;3;;public final void close() {     TRACKERS.remove(this). }
false;public,static,synchronized;1;11;;public static synchronized void notifyContextCreated(CamelContext camelContext) {     for (CamelContextTracker tracker : TRACKERS) {         try {             if (tracker.accept(camelContext)) {                 tracker.contextCreated(camelContext).             }         } catch (Exception e) {             LOG.warn("Error calling CamelContext tracker. This exception is ignored.", e).         }     } }
