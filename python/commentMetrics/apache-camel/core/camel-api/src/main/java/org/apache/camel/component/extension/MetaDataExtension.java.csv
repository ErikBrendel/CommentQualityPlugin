commented;modifiers;parameterAmount;loc;comment;code
true;;1;1;/**  * @param parameters  * @return the {@link MetaData}  */ ;/**  * @param parameters  * @return the {@link MetaData}  */ Optional<MetaData> meta(Map<String, Object> parameters).
true;;1;1;/**  * Returns an attribute associated with this meta data by name.  *  * @param name the attribute name  * @return the attribute  */ ;/**  * Returns an attribute associated with this meta data by name.  *  * @param name the attribute name  * @return the attribute  */ Object getAttribute(String name).
true;;0;1;/**  * @return a read-only list of attributes.  */ ;/**  * @return a read-only list of attributes.  */ Map<String, Object> getAttributes().
true;;2;1;/**  * Returns an attribute associated with this meta data by name and  * specifying the type required.  *  * @param name the attribute name  * @param type the type of the attribute  * @return the value of the given attribute or <tt>null</tt> if there is no attribute for the given name  * @throws TypeConversionException is thrown if error during type conversion  */ ;/**  * Returns an attribute associated with this meta data by name and  * specifying the type required.  *  * @param name the attribute name  * @param type the type of the attribute  * @return the value of the given attribute or <tt>null</tt> if there is no attribute for the given name  * @throws TypeConversionException is thrown if error during type conversion  */ <T> T getAttribute(String name, Class<T> type).
true;;0;1;/**  * Returns the payload of the meta data as a POJO.  *  * @return the body, can be <tt>null</tt>  */ ;/**  * Returns the payload of the meta data as a POJO.  *  * @return the body, can be <tt>null</tt>  */ Object getPayload().
true;;1;1;/**  * Returns the payload of the meta data as specified type.  *  * @param type the type that the payload should be converted yo.  * @return the payload of the meta data as the specified type.  * @throws TypeConversionException is thrown if error during type conversion  */ ;/**  * Returns the payload of the meta data as specified type.  *  * @param type the type that the payload should be converted yo.  * @return the payload of the meta data as the specified type.  * @throws TypeConversionException is thrown if error during type conversion  */ <T> T getPayload(Class<T> type).
