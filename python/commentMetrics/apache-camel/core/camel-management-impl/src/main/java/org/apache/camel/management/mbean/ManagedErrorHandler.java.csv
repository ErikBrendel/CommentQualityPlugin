commented;modifiers;parameterAmount;loc;comment;code
false;public;1;3;;public void init(ManagementStrategy strategy) { // do nothing }
false;public;0;3;;public RouteContext getRouteContext() {     return routeContext. }
false;public;0;3;;public Processor getErrorHandler() {     return errorHandler. }
false;public;0;3;;public ErrorHandlerFactory getErrorHandlerBuilder() {     return errorHandlerBuilder. }
false;public;0;3;;public String getCamelId() {     return routeContext.getCamelContext().getName(). }
false;public;0;3;;public String getCamelManagementName() {     return routeContext.getCamelContext().getManagementName(). }
false;public;0;3;;public boolean isSupportRedelivery() {     return errorHandler instanceof RedeliveryErrorHandler. }
false;public;0;8;;public boolean isDeadLetterChannel() {     if (!isSupportRedelivery()) {         return false.     }     RedeliveryErrorHandler redelivery = (RedeliveryErrorHandler) errorHandler.     return redelivery.getDeadLetter() != null. }
false;public;0;8;;public boolean isDeadLetterUseOriginalMessage() {     if (!isSupportRedelivery()) {         return false.     }     RedeliveryErrorHandler redelivery = (RedeliveryErrorHandler) errorHandler.     return redelivery.isUseOriginalMessagePolicy(). }
false;public;0;9;;public boolean isDeadLetterHandleNewException() {     if (!isSupportRedelivery()) {         return false.     }     // must be a dead letter channel     RedeliveryErrorHandler redelivery = (RedeliveryErrorHandler) errorHandler.     return isDeadLetterChannel() && redelivery.isDeadLetterHandleNewException(). }
false;public;0;8;;public boolean isSupportTransactions() {     if (errorHandler instanceof ErrorHandlerSupport) {         ErrorHandlerSupport ehs = (ErrorHandlerSupport) errorHandler.         return ehs.supportTransacted().     } else {         return false.     } }
false;public;0;8;;public String getDeadLetterChannelEndpointUri() {     if (!isSupportRedelivery()) {         return null.     }     RedeliveryErrorHandler redelivery = (RedeliveryErrorHandler) errorHandler.     return redelivery.getDeadLetterUri(). }
false;public;0;8;;public Integer getMaximumRedeliveries() {     if (!isSupportRedelivery()) {         return null.     }     RedeliveryErrorHandler redelivery = (RedeliveryErrorHandler) errorHandler.     return redelivery.getRedeliveryPolicy().getMaximumRedeliveries(). }
false;public;1;8;;public void setMaximumRedeliveries(Integer maximum) {     if (!isSupportRedelivery()) {         throw new IllegalArgumentException("This error handler does not support redelivery").     }     RedeliveryErrorHandler redelivery = (RedeliveryErrorHandler) errorHandler.     redelivery.getRedeliveryPolicy().setMaximumRedeliveries(maximum). }
false;public;0;8;;public Long getMaximumRedeliveryDelay() {     if (!isSupportRedelivery()) {         return null.     }     RedeliveryErrorHandler redelivery = (RedeliveryErrorHandler) errorHandler.     return redelivery.getRedeliveryPolicy().getMaximumRedeliveryDelay(). }
false;public;1;8;;public void setMaximumRedeliveryDelay(Long delay) {     if (!isSupportRedelivery()) {         throw new IllegalArgumentException("This error handler does not support redelivery").     }     RedeliveryErrorHandler redelivery = (RedeliveryErrorHandler) errorHandler.     redelivery.getRedeliveryPolicy().setMaximumRedeliveryDelay(delay). }
false;public;0;8;;public Long getRedeliveryDelay() {     if (!isSupportRedelivery()) {         return null.     }     RedeliveryErrorHandler redelivery = (RedeliveryErrorHandler) errorHandler.     return redelivery.getRedeliveryPolicy().getRedeliveryDelay(). }
false;public;1;8;;public void setRedeliveryDelay(Long delay) {     if (!isSupportRedelivery()) {         throw new IllegalArgumentException("This error handler does not support redelivery").     }     RedeliveryErrorHandler redelivery = (RedeliveryErrorHandler) errorHandler.     redelivery.getRedeliveryPolicy().setRedeliveryDelay(delay). }
false;public;0;8;;public Double getBackOffMultiplier() {     if (!isSupportRedelivery()) {         return null.     }     RedeliveryErrorHandler redelivery = (RedeliveryErrorHandler) errorHandler.     return redelivery.getRedeliveryPolicy().getBackOffMultiplier(). }
false;public;1;8;;public void setBackOffMultiplier(Double multiplier) {     if (!isSupportRedelivery()) {         throw new IllegalArgumentException("This error handler does not support redelivery").     }     RedeliveryErrorHandler redelivery = (RedeliveryErrorHandler) errorHandler.     redelivery.getRedeliveryPolicy().setBackOffMultiplier(multiplier). }
false;public;0;8;;public Double getCollisionAvoidanceFactor() {     if (!isSupportRedelivery()) {         return null.     }     RedeliveryErrorHandler redelivery = (RedeliveryErrorHandler) errorHandler.     return redelivery.getRedeliveryPolicy().getCollisionAvoidanceFactor(). }
false;public;1;8;;public void setCollisionAvoidanceFactor(Double factor) {     if (!isSupportRedelivery()) {         throw new IllegalArgumentException("This error handler does not support redelivery").     }     RedeliveryErrorHandler redelivery = (RedeliveryErrorHandler) errorHandler.     redelivery.getRedeliveryPolicy().setCollisionAvoidanceFactor(factor). }
false;public;0;8;;public Double getCollisionAvoidancePercent() {     if (!isSupportRedelivery()) {         return null.     }     RedeliveryErrorHandler redelivery = (RedeliveryErrorHandler) errorHandler.     return (double) redelivery.getRedeliveryPolicy().getCollisionAvoidancePercent(). }
false;public;1;8;;public void setCollisionAvoidancePercent(Double percent) {     if (!isSupportRedelivery()) {         throw new IllegalArgumentException("This error handler does not support redelivery").     }     RedeliveryErrorHandler redelivery = (RedeliveryErrorHandler) errorHandler.     redelivery.getRedeliveryPolicy().setCollisionAvoidancePercent(percent). }
false;public;0;8;;public String getDelayPattern() {     if (!isSupportRedelivery()) {         return null.     }     RedeliveryErrorHandler redelivery = (RedeliveryErrorHandler) errorHandler.     return redelivery.getRedeliveryPolicy().getDelayPattern(). }
false;public;1;8;;public void setDelayPattern(String pattern) {     if (!isSupportRedelivery()) {         throw new IllegalArgumentException("This error handler does not support redelivery").     }     RedeliveryErrorHandler redelivery = (RedeliveryErrorHandler) errorHandler.     redelivery.getRedeliveryPolicy().setDelayPattern(pattern). }
false;public;0;8;;public String getRetriesExhaustedLogLevel() {     if (!isSupportRedelivery()) {         return null.     }     RedeliveryErrorHandler redelivery = (RedeliveryErrorHandler) errorHandler.     return redelivery.getRedeliveryPolicy().getRetriesExhaustedLogLevel().name(). }
false;public;1;8;;public void setRetriesExhaustedLogLevel(String level) {     if (!isSupportRedelivery()) {         throw new IllegalArgumentException("This error handler does not support redelivery").     }     RedeliveryErrorHandler redelivery = (RedeliveryErrorHandler) errorHandler.     redelivery.getRedeliveryPolicy().setRetriesExhaustedLogLevel(LoggingLevel.valueOf(level)). }
false;public;0;8;;public String getRetryAttemptedLogLevel() {     if (!isSupportRedelivery()) {         return null.     }     RedeliveryErrorHandler redelivery = (RedeliveryErrorHandler) errorHandler.     return redelivery.getRedeliveryPolicy().getRetryAttemptedLogLevel().name(). }
false;public;1;8;;public void setRetryAttemptedLogLevel(String level) {     if (!isSupportRedelivery()) {         throw new IllegalArgumentException("This error handler does not support redelivery").     }     RedeliveryErrorHandler redelivery = (RedeliveryErrorHandler) errorHandler.     redelivery.getRedeliveryPolicy().setRetryAttemptedLogLevel(LoggingLevel.valueOf(level)). }
false;public;0;8;;public Boolean getLogStackTrace() {     if (!isSupportRedelivery()) {         return null.     }     RedeliveryErrorHandler redelivery = (RedeliveryErrorHandler) errorHandler.     return redelivery.getRedeliveryPolicy().isLogStackTrace(). }
false;public;1;8;;public void setLogStackTrace(Boolean log) {     if (!isSupportRedelivery()) {         throw new IllegalArgumentException("This error handler does not support redelivery").     }     RedeliveryErrorHandler redelivery = (RedeliveryErrorHandler) errorHandler.     redelivery.getRedeliveryPolicy().setLogStackTrace(log). }
false;public;0;8;;public Boolean getLogRetryStackTrace() {     if (!isSupportRedelivery()) {         return null.     }     RedeliveryErrorHandler redelivery = (RedeliveryErrorHandler) errorHandler.     return redelivery.getRedeliveryPolicy().isLogRetryStackTrace(). }
false;public;1;8;;public void setLogRetryStackTrace(Boolean log) {     if (!isSupportRedelivery()) {         throw new IllegalArgumentException("This error handler does not support redelivery").     }     RedeliveryErrorHandler redelivery = (RedeliveryErrorHandler) errorHandler.     redelivery.getRedeliveryPolicy().setLogRetryStackTrace(log). }
false;public;0;8;;public Boolean getLogHandled() {     if (!isSupportRedelivery()) {         return null.     }     RedeliveryErrorHandler redelivery = (RedeliveryErrorHandler) errorHandler.     return redelivery.getRedeliveryPolicy().isLogHandled(). }
false;public;1;8;;public void setLogHandled(Boolean log) {     if (!isSupportRedelivery()) {         throw new IllegalArgumentException("This error handler does not support redelivery").     }     RedeliveryErrorHandler redelivery = (RedeliveryErrorHandler) errorHandler.     redelivery.getRedeliveryPolicy().setLogHandled(log). }
false;public;0;8;;public Boolean getLogNewException() {     if (!isSupportRedelivery()) {         return null.     }     RedeliveryErrorHandler redelivery = (RedeliveryErrorHandler) errorHandler.     return redelivery.getRedeliveryPolicy().isLogNewException(). }
false;public;1;8;;public void setLogNewException(Boolean log) {     if (!isSupportRedelivery()) {         throw new IllegalArgumentException("This error handler does not support redelivery").     }     RedeliveryErrorHandler redelivery = (RedeliveryErrorHandler) errorHandler.     redelivery.getRedeliveryPolicy().setLogNewException(log). }
false;public;0;8;;public Boolean getLogExhaustedMessageHistory() {     if (!isSupportRedelivery()) {         throw new IllegalArgumentException("This error handler does not support redelivery").     }     RedeliveryErrorHandler redelivery = (RedeliveryErrorHandler) errorHandler.     return redelivery.getRedeliveryPolicy().isLogExhaustedMessageHistory(). }
false;public;1;8;;public void setLogExhaustedMessageHistory(Boolean log) {     if (!isSupportRedelivery()) {         throw new IllegalArgumentException("This error handler does not support redelivery").     }     RedeliveryErrorHandler redelivery = (RedeliveryErrorHandler) errorHandler.     redelivery.getRedeliveryPolicy().setLogExhaustedMessageHistory(log). }
false;public;0;8;;public Boolean getLogExhaustedMessageBody() {     if (!isSupportRedelivery()) {         throw new IllegalArgumentException("This error handler does not support redelivery").     }     RedeliveryErrorHandler redelivery = (RedeliveryErrorHandler) errorHandler.     return redelivery.getRedeliveryPolicy().isLogExhaustedMessageBody(). }
false;public;1;8;;public void setLogExhaustedMessageBody(Boolean log) {     if (!isSupportRedelivery()) {         throw new IllegalArgumentException("This error handler does not support redelivery").     }     RedeliveryErrorHandler redelivery = (RedeliveryErrorHandler) errorHandler.     redelivery.getRedeliveryPolicy().setLogExhaustedMessageBody(log). }
false;public;0;8;;public Boolean getLogContinued() {     if (!isSupportRedelivery()) {         return null.     }     RedeliveryErrorHandler redelivery = (RedeliveryErrorHandler) errorHandler.     return redelivery.getRedeliveryPolicy().isLogHandled(). }
false;public;1;8;;public void setLogContinued(Boolean log) {     if (!isSupportRedelivery()) {         throw new IllegalArgumentException("This error handler does not support redelivery").     }     RedeliveryErrorHandler redelivery = (RedeliveryErrorHandler) errorHandler.     redelivery.getRedeliveryPolicy().setLogContinued(log). }
false;public;0;8;;public Boolean getLogExhausted() {     if (!isSupportRedelivery()) {         return null.     }     RedeliveryErrorHandler redelivery = (RedeliveryErrorHandler) errorHandler.     return redelivery.getRedeliveryPolicy().isLogExhausted(). }
false;public;1;8;;public void setLogExhausted(Boolean log) {     if (!isSupportRedelivery()) {         throw new IllegalArgumentException("This error handler does not support redelivery").     }     RedeliveryErrorHandler redelivery = (RedeliveryErrorHandler) errorHandler.     redelivery.getRedeliveryPolicy().setLogExhausted(log). }
false;public;0;8;;public Boolean getUseCollisionAvoidance() {     if (!isSupportRedelivery()) {         return null.     }     RedeliveryErrorHandler redelivery = (RedeliveryErrorHandler) errorHandler.     return redelivery.getRedeliveryPolicy().isUseCollisionAvoidance(). }
false;public;1;8;;public void setUseCollisionAvoidance(Boolean avoidance) {     if (!isSupportRedelivery()) {         throw new IllegalArgumentException("This error handler does not support redelivery").     }     RedeliveryErrorHandler redelivery = (RedeliveryErrorHandler) errorHandler.     redelivery.getRedeliveryPolicy().setUseCollisionAvoidance(avoidance). }
false;public;0;8;;public Boolean getUseExponentialBackOff() {     if (!isSupportRedelivery()) {         return null.     }     RedeliveryErrorHandler redelivery = (RedeliveryErrorHandler) errorHandler.     return redelivery.getRedeliveryPolicy().isUseExponentialBackOff(). }
false;public;1;8;;public void setUseExponentialBackOff(Boolean backoff) {     if (!isSupportRedelivery()) {         throw new IllegalArgumentException("This error handler does not support redelivery").     }     RedeliveryErrorHandler redelivery = (RedeliveryErrorHandler) errorHandler.     redelivery.getRedeliveryPolicy().setUseExponentialBackOff(backoff). }
false;public;0;8;;public Boolean getAllowRedeliveryWhileStopping() {     if (!isSupportRedelivery()) {         return null.     }     RedeliveryErrorHandler redelivery = (RedeliveryErrorHandler) errorHandler.     return redelivery.getRedeliveryPolicy().isAllowRedeliveryWhileStopping(). }
false;public;1;8;;public void setAllowRedeliveryWhileStopping(Boolean allow) {     if (!isSupportRedelivery()) {         throw new IllegalArgumentException("This error handler does not support redelivery").     }     RedeliveryErrorHandler redelivery = (RedeliveryErrorHandler) errorHandler.     redelivery.getRedeliveryPolicy().setAllowRedeliveryWhileStopping(allow). }
false;public;0;8;;public Integer getPendingRedeliveryCount() {     if (!isSupportRedelivery()) {         return null.     }     RedeliveryErrorHandler redelivery = (RedeliveryErrorHandler) errorHandler.     return redelivery.getPendingRedeliveryCount(). }
