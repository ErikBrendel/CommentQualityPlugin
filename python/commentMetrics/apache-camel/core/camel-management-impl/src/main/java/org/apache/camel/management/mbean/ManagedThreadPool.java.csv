commented;modifiers;parameterAmount;loc;comment;code
false;public;1;3;;public void init(ManagementStrategy strategy) { // do nothing }
false;public;0;3;;public CamelContext getContext() {     return camelContext. }
false;public;0;3;;public ThreadPoolExecutor getThreadPool() {     return threadPool. }
false;public;0;3;;public String getCamelId() {     return camelContext.getName(). }
false;public;0;3;;public String getCamelManagementName() {     return camelContext.getManagementName(). }
false;public;0;3;;public String getId() {     return id. }
false;public;0;3;;public String getSourceId() {     return sourceId. }
false;public;0;3;;public String getRouteId() {     return routeId. }
false;public;0;3;;public String getThreadPoolProfileId() {     return threadPoolProfileId. }
false;public;0;3;;public int getCorePoolSize() {     return threadPool.getCorePoolSize(). }
false;public;1;3;;public void setCorePoolSize(int corePoolSize) {     threadPool.setCorePoolSize(corePoolSize). }
false;public;0;3;;public int getPoolSize() {     return threadPool.getPoolSize(). }
false;public;0;3;;public int getMaximumPoolSize() {     return threadPool.getMaximumPoolSize(). }
false;public;1;3;;public void setMaximumPoolSize(int maximumPoolSize) {     threadPool.setMaximumPoolSize(maximumPoolSize). }
false;public;0;3;;public int getLargestPoolSize() {     return threadPool.getLargestPoolSize(). }
false;public;0;3;;public int getActiveCount() {     return threadPool.getActiveCount(). }
false;public;0;3;;public long getTaskCount() {     return threadPool.getTaskCount(). }
false;public;0;3;;public long getCompletedTaskCount() {     return threadPool.getCompletedTaskCount(). }
false;public;0;7;;public long getTaskQueueSize() {     if (threadPool.getQueue() != null) {         return threadPool.getQueue().size().     } else {         return 0.     } }
false;public;0;7;;public boolean isTaskQueueEmpty() {     if (threadPool.getQueue() != null) {         return threadPool.getQueue().isEmpty().     } else {         return true.     } }
false;public;0;3;;public long getKeepAliveTime() {     return threadPool.getKeepAliveTime(TimeUnit.SECONDS). }
false;public;1;3;;public void setKeepAliveTime(long keepAliveTimeInSeconds) {     threadPool.setKeepAliveTime(keepAliveTimeInSeconds, TimeUnit.SECONDS). }
false;public;0;3;;public boolean isAllowCoreThreadTimeout() {     return threadPool.allowsCoreThreadTimeOut(). }
false;public;1;3;;public void setAllowCoreThreadTimeout(boolean allowCoreThreadTimeout) {     threadPool.allowCoreThreadTimeOut(allowCoreThreadTimeout). }
false;public;0;3;;public boolean isShutdown() {     return threadPool.isShutdown(). }
false;public;0;3;;public void purge() {     threadPool.purge(). }
false;public;0;8;;public int getTaskQueueRemainingCapacity() {     if (threadPool.getQueue() != null) {         return threadPool.getQueue().remainingCapacity().     } else {         // no queue found, so no capacity         return 0.     } }
