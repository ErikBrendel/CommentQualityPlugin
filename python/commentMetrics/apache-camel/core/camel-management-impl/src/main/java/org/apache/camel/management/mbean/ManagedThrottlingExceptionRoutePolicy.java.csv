commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public ThrottlingExceptionRoutePolicy getPolicy() {     return policy. }
false;public;0;4;;@Override public Long getHalfOpenAfter() {     return getPolicy().getHalfOpenAfter(). }
false;public;1;4;;@Override public void setHalfOpenAfter(Long milliseconds) {     getPolicy().setHalfOpenAfter(milliseconds). }
false;public;0;4;;@Override public Long getFailureWindow() {     return getPolicy().getFailureWindow(). }
false;public;1;4;;@Override public void setFailureWindow(Long milliseconds) {     getPolicy().setFailureWindow(milliseconds). }
false;public;0;4;;@Override public Integer getFailureThreshold() {     return getPolicy().getFailureThreshold(). }
false;public;1;4;;@Override public void setFailureThreshold(Integer numberOfFailures) {     getPolicy().setFailureThreshold(numberOfFailures). }
false;public;0;4;;@Override public String currentState() {     return getPolicy().dumpState(). }
false;public;0;9;;@Override public String getHalfOpenHandlerName() {     ThrottlingExceptionHalfOpenHandler obj = getPolicy().getHalfOpenHandler().     if (obj != null) {         return obj.getClass().getSimpleName().     } else {         return "".     } }
false;public;0;4;;@Override public Integer getCurrentFailures() {     return getPolicy().getFailures(). }
false;public;0;8;;@Override public Long getLastFailure() {     if (getPolicy().getLastFailure() == 0) {         return 0L.     } else {         return System.currentTimeMillis() - getPolicy().getLastFailure().     } }
false;public;0;8;;@Override public Long getOpenAt() {     if (getPolicy().getOpenedAt() == 0) {         return 0L.     } else {         return System.currentTimeMillis() - getPolicy().getOpenedAt().     } }
