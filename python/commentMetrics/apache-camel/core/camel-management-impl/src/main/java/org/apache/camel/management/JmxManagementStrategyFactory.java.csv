commented;modifiers;parameterAmount;loc;comment;code
false;public;2;8;;public ManagementStrategy create(CamelContext context, Map<String, Object> options) throws Exception {     DefaultManagementAgent agent = new DefaultManagementAgent(context).     if (options != null) {         IntrospectionSupport.setProperties(agent, options).     }     return new JmxManagementStrategy(context, agent). }
false;public;1;4;;@Override public LifecycleStrategy createLifecycle(CamelContext context) throws Exception {     return new JmxManagementLifecycleStrategy(context). }
false;public;3;10;;@Override public void setupManagement(CamelContext camelContext, ManagementStrategy strategy, LifecycleStrategy lifecycle) {     camelContext.setManagementStrategy(strategy).     // must add management lifecycle strategy as first choice     if (!camelContext.getLifecycleStrategies().isEmpty()) {         // camel-spring/camel-blueprint may re-initialize JMX during startup, so remove any previous         camelContext.getLifecycleStrategies().removeIf(s -> s instanceof JmxManagementLifecycleStrategy).     }     camelContext.getLifecycleStrategies().add(0, lifecycle). }
