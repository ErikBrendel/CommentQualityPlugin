commented;modifiers;parameterAmount;loc;comment;code
false;public;1;3;;public void init(ManagementStrategy strategy) { // do nothing }
false;public;0;3;;public CamelContext getContext() {     return context. }
false;public;0;3;;public EventNotifier getEventNotifier() {     return eventNotifier. }
false;public;0;3;;public boolean isIgnoreCamelContextEvents() {     return getEventNotifier().isIgnoreCamelContextEvents(). }
false;public;1;3;;public void setIgnoreCamelContextEvents(boolean ignoreCamelContextEvents) {     getEventNotifier().setIgnoreCamelContextEvents(ignoreCamelContextEvents). }
false;public;0;3;;public boolean isIgnoreRouteEvents() {     return getEventNotifier().isIgnoreRouteEvents(). }
false;public;1;3;;public void setIgnoreRouteEvents(boolean ignoreRouteEvents) {     getEventNotifier().setIgnoreRouteEvents(ignoreRouteEvents). }
false;public;0;3;;public boolean isIgnoreServiceEvents() {     return getEventNotifier().isIgnoreServiceEvents(). }
false;public;1;3;;public void setIgnoreServiceEvents(boolean ignoreServiceEvents) {     getEventNotifier().setIgnoreServiceEvents(ignoreServiceEvents). }
false;public;0;3;;public boolean isIgnoreExchangeEvents() {     return getEventNotifier().isIgnoreExchangeEvents(). }
false;public;1;3;;public void setIgnoreExchangeEvents(boolean ignoreExchangeEvents) {     getEventNotifier().setIgnoreExchangeEvents(ignoreExchangeEvents). }
false;public;0;3;;public boolean isIgnoreExchangeCreatedEvent() {     return getEventNotifier().isIgnoreExchangeCreatedEvent(). }
false;public;1;3;;public void setIgnoreExchangeCreatedEvent(boolean ignoreExchangeCreatedEvent) {     getEventNotifier().setIgnoreExchangeCreatedEvent(ignoreExchangeCreatedEvent). }
false;public;0;3;;public boolean isIgnoreExchangeCompletedEvent() {     return getEventNotifier().isIgnoreExchangeCompletedEvent(). }
false;public;1;3;;public void setIgnoreExchangeCompletedEvent(boolean ignoreExchangeCompletedEvent) {     getEventNotifier().setIgnoreExchangeCompletedEvent(ignoreExchangeCompletedEvent). }
false;public;0;3;;public boolean isIgnoreExchangeFailedEvents() {     return getEventNotifier().isIgnoreExchangeFailedEvents(). }
false;public;1;3;;public void setIgnoreExchangeFailedEvents(boolean ignoreExchangeFailedEvents) {     getEventNotifier().setIgnoreExchangeFailedEvents(ignoreExchangeFailedEvents). }
false;public;0;3;;public boolean isIgnoreExchangeRedeliveryEvents() {     return getEventNotifier().isIgnoreExchangeRedeliveryEvents(). }
false;public;1;3;;public void setIgnoreExchangeRedeliveryEvents(boolean ignoreExchangeRedeliveryEvents) {     getEventNotifier().setIgnoreExchangeRedeliveryEvents(ignoreExchangeRedeliveryEvents). }
false;public;0;3;;public boolean isIgnoreExchangeSentEvents() {     return getEventNotifier().isIgnoreExchangeSentEvents(). }
false;public;1;3;;public void setIgnoreExchangeSentEvents(boolean ignoreExchangeSentEvents) {     getEventNotifier().setIgnoreExchangeSentEvents(ignoreExchangeSentEvents). }
false;public;0;3;;public boolean isIgnoreExchangeSendingEvents() {     return getEventNotifier().isIgnoreExchangeSendingEvents(). }
false;public;1;3;;public void setIgnoreExchangeSendingEvents(boolean ignoreExchangeSendingEvents) {     getEventNotifier().setIgnoreExchangeSendingEvents(ignoreExchangeSendingEvents). }
false;public;0;18;;public MBeanNotificationInfo[] getNotificationInfo() {     // all the class names in the event package     String[] names = { "CamelContextStartedEvent", "CamelContextStartingEvent", "CamelContextStartupFailureEvent", "CamelContextStopFailureEvent", "CamelContextStoppedEvent", "CamelContextStoppingEvent", "CamelContextSuspendingEvent", "CamelContextSuspendedEvent", "CamelContextResumingEvent", "CamelContextResumedEvent", "CamelContextResumeFailureEvent", "ExchangeCompletedEvent", "ExchangeCreatedEvent", "ExchangeFailedEvent", "ExchangeFailureHandledEvent", "ExchangeRedeliveryEvents", "ExchangeSendingEvent", "ExchangeSentEvent", "RouteStartedEvent", "RouteStoppedEvent", "ServiceStartupFailureEvent", "ServiceStopFailureEvent" }.     List<MBeanNotificationInfo> infos = new ArrayList<>().     for (String name : names) {         MBeanNotificationInfo info = new MBeanNotificationInfo(new String[] { "org.apache.camel.management.event" }, "org.apache.camel.management.event." + name, "The event " + name + " occurred").         infos.add(info).     }     return infos.toArray(new MBeanNotificationInfo[infos.size()]). }
