commented;modifiers;parameterAmount;loc;comment;code
false;public;1;4;;@Override public InstrumentationProcessor<?> createProcessor(String type) {     return new DefaultInstrumentationProcessor(type). }
false;public;2;12;;@Override public InstrumentationProcessor<?> createProcessor(NamedNode definition, Processor target) {     InstrumentationProcessor instrumentationProcessor = new DefaultInstrumentationProcessor(definition.getShortName(), target).     PerformanceCounter counter = registeredCounters.get(definition).     if (counter != null) {         // add it to the mapping of wrappers so we can later change it to a         // decorated counter when we register the processor         KeyValueHolder<NamedNode, InstrumentationProcessor> holder = new KeyValueHolder<>(definition, instrumentationProcessor).         wrappedProcessors.put(target, holder).     }     return instrumentationProcessor. }
