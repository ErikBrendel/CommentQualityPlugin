commented;modifiers;parameterAmount;loc;comment;code
false;public;0;33;;@Test public void testUnregisterProducer() throws Exception {     // JMX tests dont work well on AIX CI servers (hangs them)     if (isPlatform("aix")) {         return.     }     getMockEndpoint("mock:result").expectedMessageCount(1).     template.sendBody("direct:start", "Hello World").     assertMockEndpointsSatisfied().     MBeanServer mbeanServer = getMBeanServer().     Set<ObjectName> set = mbeanServer.queryNames(new ObjectName("*:type=producers,*"), null).     assertEquals(1, set.size()).     ObjectName on = set.iterator().next().     assertTrue("Should be registered", mbeanServer.isRegistered(on)).     String uri = (String) mbeanServer.getAttribute(on, "EndpointUri").     assertEquals("mock://result", uri).     // TODO: populating route id on producers is not implemented yet     // String routeId = (String) mbeanServer.getAttribute(on, "RouteId").     // assertEquals("route1", routeId).     Boolean singleton = (Boolean) mbeanServer.getAttribute(on, "Singleton").     assertEquals(Boolean.TRUE, singleton).     context.stop().     assertFalse("Should no longer be registered", mbeanServer.isRegistered(on)). }
false;public;0;4;;@Override public void configure() throws Exception {     from("direct:start").to("mock:result"). }
false;protected;0;9;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").to("mock:result").         }     }. }
