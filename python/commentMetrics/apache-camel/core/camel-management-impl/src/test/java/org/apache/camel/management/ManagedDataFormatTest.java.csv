commented;modifiers;parameterAmount;loc;comment;code
false;public;0;31;;@Test public void testManageDataFormat() throws Exception {     // JMX tests dont work well on AIX CI servers (hangs them)     if (isPlatform("aix")) {         return.     }     MBeanServer mbeanServer = getMBeanServer().     // there should be 1 data format     Set<ObjectName> set = mbeanServer.queryNames(new ObjectName("*:type=dataformats,*"), null).     assertEquals(1, set.size()).     ObjectName on = set.iterator().next().     String json = (String) mbeanServer.invoke(on, "informationJson", null, null).     assertNotNull(json).     assertTrue(json.contains("\"title\": \"String Encoding\"")).     assertTrue(json.contains("\"modelJavaType\": \"org.apache.camel.model.dataformat.StringDataFormat\"")).     assertTrue(json.contains("\"charset\": { \"kind\": \"attribute\"")).     assertTrue(json.contains("\"value\": \"iso-8859-1\"")).     TabularData data = (TabularData) mbeanServer.invoke(on, "explain", new Object[] { true }, new String[] { "boolean" }).     assertNotNull(data).     assertEquals(3, data.size()).     data = (TabularData) mbeanServer.invoke(on, "explain", new Object[] { false }, new String[] { "boolean" }).     assertNotNull(data).     assertEquals(1, data.size()). }
false;public;0;6;;@Override public void configure() throws Exception {     from("seda:test").unmarshal().string("iso-8859-1").to("mock:result"). }
false;protected;0;11;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("seda:test").unmarshal().string("iso-8859-1").to("mock:result").         }     }. }
