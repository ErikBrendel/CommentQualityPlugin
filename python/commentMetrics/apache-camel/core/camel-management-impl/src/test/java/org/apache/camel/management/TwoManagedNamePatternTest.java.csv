commented;modifiers;parameterAmount;loc;comment;code
false;protected;2;6;;protected CamelContext createCamelContext(String name, String pattern) throws Exception {     DefaultCamelContext context = new DefaultCamelContext().     context.setName(name).     context.getManagementNameStrategy().setNamePattern(pattern).     return context. }
false;public;0;27;;@Test public void testManagedNamePattern() throws Exception {     // JMX tests dont work well on AIX CI servers (hangs them)     if (isPlatform("aix")) {         return.     }     camel1 = createCamelContext("foo", "aaa-#name#").     camel2 = createCamelContext("bar", "bbb-#name#").     camel1.start().     camel2.start().     MBeanServer mbeanServer = camel1.getManagementStrategy().getManagementAgent().getMBeanServer().     ObjectName on = ObjectName.getInstance("org.apache.camel:context=aaa-foo,type=context,name=\"foo\"").     assertTrue("Should be registered", mbeanServer.isRegistered(on)).     ObjectName on2 = ObjectName.getInstance("org.apache.camel:context=bbb-bar,type=context,name=\"bar\"").     assertTrue("Should be registered", mbeanServer.isRegistered(on2)).     camel1.stop().     camel2.stop().     assertFalse("Should be unregistered", mbeanServer.isRegistered(on)).     assertFalse("Should be unregistered", mbeanServer.isRegistered(on2)). }
false;public;0;11;;@Override @After public void tearDown() throws Exception {     if (camel1 != null) {         camel1.stop().     }     if (camel2 != null) {         camel2.stop().     }     super.tearDown(). }
