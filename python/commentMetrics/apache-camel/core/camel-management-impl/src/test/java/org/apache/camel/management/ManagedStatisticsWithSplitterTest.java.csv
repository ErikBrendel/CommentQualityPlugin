commented;modifiers;parameterAmount;loc;comment;code
false;public;0;44;;@Test public void testManageStatistics() throws Exception {     // JMX tests dont work well on AIX CI servers (hangs them)     if (isPlatform("aix")) {         return.     }     // get the status for the route     MBeanServer mbeanServer = getMBeanServer().     ObjectName on = ObjectName.getInstance("org.apache.camel:context=camel-1,type=routes,name=\"route-a\"").     // use route to get the total time     Long completed = (Long) mbeanServer.getAttribute(on, "ExchangesCompleted").     assertEquals(0, completed.longValue()).     // send in 2 messages     template.sendBody("direct:start", "A,B,C").     template.sendBody("direct:start", "D,E").     // should be 2 on the route     completed = (Long) mbeanServer.getAttribute(on, "ExchangesCompleted").     assertEquals(2, completed.longValue()).     // should be 2 on the foo     ObjectName foo = ObjectName.getInstance("org.apache.camel:context=camel-1,type=processors,name=\"foo\"").     completed = (Long) mbeanServer.getAttribute(foo, "ExchangesCompleted").     assertEquals(2, completed.longValue()).     // should be 5 on the split sub route     ObjectName bar = ObjectName.getInstance("org.apache.camel:context=camel-1,type=processors,name=\"bar\"").     completed = (Long) mbeanServer.getAttribute(bar, "ExchangesCompleted").     assertEquals(5, completed.longValue()).     // should be 2 on the mock     ObjectName mock = ObjectName.getInstance("org.apache.camel:context=camel-1,type=processors,name=\"mock\"").     completed = (Long) mbeanServer.getAttribute(mock, "ExchangesCompleted").     assertEquals(2, completed.longValue()).     // should be 5 on route-b     on = ObjectName.getInstance("org.apache.camel:context=camel-1,type=routes,name=\"route-b\"").     completed = (Long) mbeanServer.getAttribute(on, "ExchangesCompleted").     assertEquals(5, completed.longValue()). }
false;public;0;12;;@Override public void configure() throws Exception {     from("direct:start").routeId("route-a").to("log:foo").id("foo").split(body().tokenize(",")).to("direct:split").end().to("mock:result").id("mock").     from("direct:split").routeId("route-b").to("log:bar").id("bar"). }
false;protected;0;17;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").routeId("route-a").to("log:foo").id("foo").split(body().tokenize(",")).to("direct:split").end().to("mock:result").id("mock").             from("direct:split").routeId("route-b").to("log:bar").id("bar").         }     }. }
