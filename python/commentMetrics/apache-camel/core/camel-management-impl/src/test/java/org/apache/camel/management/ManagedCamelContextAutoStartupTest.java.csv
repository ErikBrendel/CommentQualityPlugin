commented;modifiers;parameterAmount;loc;comment;code
false;public;0;32;;@Test public void testManagedCamelContext() throws Exception {     // JMX tests dont work well on AIX CI servers (hangs them)     if (isPlatform("aix")) {         return.     }     MBeanServer mbeanServer = getMBeanServer().     ObjectName on = ObjectName.getInstance("org.apache.camel:context=camel-1,type=context,name=\"camel-1\"").     ObjectName onRoute = ObjectName.getInstance("org.apache.camel:context=camel-1,type=routes,name=\"foo\"").     assertTrue("Should be registered", mbeanServer.isRegistered(on)).     String name = (String) mbeanServer.getAttribute(on, "CamelId").     assertEquals("camel-1", name).     assertTrue("Should be registered", mbeanServer.isRegistered(onRoute)).     String state = (String) mbeanServer.getAttribute(onRoute, "State").     assertEquals("Stopped", state).     // start the route     mbeanServer.invoke(onRoute, "start", null, null).     state = (String) mbeanServer.getAttribute(onRoute, "State").     assertEquals("Started", state).     Object reply = mbeanServer.invoke(on, "requestBody", new Object[] { "direct:foo", "Hello World" }, new String[] { "java.lang.String", "java.lang.Object" }).     assertEquals("Bye World", reply).     // stop Camel     mbeanServer.invoke(on, "stop", null, null). }
false;public;0;6;;@Override public void configure() throws Exception {     context.setAutoStartup(false).     from("direct:foo").routeId("foo").transform(constant("Bye World")). }
false;protected;0;11;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             context.setAutoStartup(false).             from("direct:foo").routeId("foo").transform(constant("Bye World")).         }     }. }
