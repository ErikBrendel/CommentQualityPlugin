commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected boolean useJmx() {     return true. }
false;protected;0;13;;@Override protected boolean canRunOnThisPlatform() {     String os = System.getProperty("os.name").     boolean aix = os.toLowerCase(Locale.ENGLISH).contains("aix").     boolean windows = os.toLowerCase(Locale.ENGLISH).contains("windows").     boolean solaris = os.toLowerCase(Locale.ENGLISH).contains("sunos").     // windows CI servers is often slow/tricky so skip as well     return !aix && !solaris && !windows. }
false;public;0;13;;@Override @Before public void setUp() throws Exception {     registryPort = 30000 + new Random().nextInt(10000).     log.info("Using port " + registryPort).     url = "service:jmx:rmi:///jndi/rmi://localhost:" + registryPort + "/jmxrmi/camel".     // need to explicit set it to false to use non-platform mbs     System.setProperty(JmxSystemPropertyKeys.USE_PLATFORM_MBS, "false").     System.setProperty(JmxSystemPropertyKeys.CREATE_CONNECTOR, "true").     System.setProperty(JmxSystemPropertyKeys.REGISTRY_PORT, "" + registryPort).     super.setUp(). }
false;public;0;21;;@Override @After public void tearDown() throws Exception {     if (clientConnector != null) {         try {             clientConnector.close().         } catch (Exception e) {         // ignore         }         clientConnector = null.     }     // restore environment to original state     // the following properties may have been set by specialization of this test class     System.clearProperty(JmxSystemPropertyKeys.USE_PLATFORM_MBS).     System.clearProperty(JmxSystemPropertyKeys.DOMAIN).     System.clearProperty(JmxSystemPropertyKeys.MBEAN_DOMAIN).     System.clearProperty(JmxSystemPropertyKeys.CREATE_CONNECTOR).     System.clearProperty(JmxSystemPropertyKeys.REGISTRY_PORT).     super.tearDown(). }
false;protected;0;10;;@Override protected MBeanServerConnection getMBeanConnection() throws Exception {     if (mbsc == null) {         if (clientConnector == null) {             clientConnector = JMXConnectorFactory.connect(new JMXServiceURL(url), null).         }         mbsc = clientConnector.getMBeanServerConnection().     }     return mbsc. }
false;public;0;28;;@Test public void testRmiRegistryUnexported() throws Exception {     Registry registry = LocateRegistry.getRegistry(registryPort).     // before we stop the context the registry is still exported, so list() should work     Exception e.     try {         registry.list().         e = null.     } catch (NoSuchObjectException nsoe) {         e = nsoe.     }     assertNull(e).     // stop the Camel context     context.stop().     // stopping the Camel context unexported the registry, so list() should fail     Exception e2.     try {         registry.list().         e2 = null.     } catch (NoSuchObjectException nsoe) {         e2 = nsoe.     }     assertNotNull(e2). }
