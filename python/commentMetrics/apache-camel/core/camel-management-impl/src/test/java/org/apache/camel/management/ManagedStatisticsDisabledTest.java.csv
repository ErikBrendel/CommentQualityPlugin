commented;modifiers;parameterAmount;loc;comment;code
false;public;0;52;;@Test public void testManageStatisticsDisabled() throws Exception {     // JMX tests dont work well on AIX CI servers (hangs them)     if (isPlatform("aix")) {         return.     }     template.sendBody("direct:start", "Hello World").     template.sendBody("direct:start", "Bye World").     // get the stats for the route     MBeanServer mbeanServer = getMBeanServer().     Set<ObjectName> set = mbeanServer.queryNames(new ObjectName("*:type=routes,*"), null).     assertEquals(1, set.size()).     ObjectName on = set.iterator().next().     // use route to get the total time     Long completed = (Long) mbeanServer.getAttribute(on, "ExchangesCompleted").     assertEquals(2, completed.longValue()).     // disable statistics     mbeanServer.setAttribute(on, new Attribute("StatisticsEnabled", false)).     // send in another message     template.sendBody("direct:start", "Goodday World").     // should stay at 2     completed = (Long) mbeanServer.getAttribute(on, "ExchangesCompleted").     assertEquals(2, completed.longValue()).     // enable statistics     mbeanServer.setAttribute(on, new Attribute("StatisticsEnabled", true)).     // send in another message     template.sendBody("direct:start", "Hi World").     // should now be 3     completed = (Long) mbeanServer.getAttribute(on, "ExchangesCompleted").     assertEquals(3, completed.longValue()).     // now reset it     mbeanServer.invoke(on, "reset", null, null).     // send in another message     template.sendBody("direct:start", "Hallo World").     // should now be 1     completed = (Long) mbeanServer.getAttribute(on, "ExchangesCompleted").     assertEquals(1, completed.longValue()). }
false;public;0;4;;@Override public void configure() throws Exception {     from("direct:start").to("mock:result"). }
false;protected;0;9;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").to("mock:result").         }     }. }
