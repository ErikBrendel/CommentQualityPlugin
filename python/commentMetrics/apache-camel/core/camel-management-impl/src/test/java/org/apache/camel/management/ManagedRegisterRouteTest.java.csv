commented;modifiers;parameterAmount;loc;comment;code
false;public;0;48;;@Test public void testRoutes() throws Exception {     // JMX tests dont work well on AIX CI servers (hangs them)     if (isPlatform("aix")) {         return.     }     MBeanServer mbeanServer = getMBeanServer().     Set<ObjectName> set = mbeanServer.queryNames(new ObjectName("*:type=routes,*"), null).     assertEquals(1, set.size()).     ObjectName on = set.iterator().next().     boolean registered = mbeanServer.isRegistered(on).     assertEquals("Should be registered", true, registered).     String uri = (String) mbeanServer.getAttribute(on, "EndpointUri").     // the route has this starting endpoint uri     assertEquals("direct://start", uri).     String id = (String) mbeanServer.getAttribute(on, "RouteId").     assertEquals("myRoute", id).     String group = (String) mbeanServer.getAttribute(on, "RouteGroup").     assertEquals("myGroup", group).     String desc = (String) mbeanServer.getAttribute(on, "Description").     assertEquals("my cool route", desc).     Long val = (Long) mbeanServer.getAttribute(on, "ExchangesInflight").     // the route has no inflight exchanges     assertEquals(0L, val.longValue()).     // should be started     String state = (String) mbeanServer.getAttribute(on, "State").     assertEquals("Should be started", ServiceStatus.Started.name(), state).     // stop the route     context.getRouteController().stopRoute(context.getRouteDefinitions().get(0).getId()).     registered = mbeanServer.isRegistered(on).     assertEquals("Should be registered", true, registered).     // should be stopped, eg its removed     state = (String) mbeanServer.getAttribute(on, "State").     assertEquals("Should be stopped", ServiceStatus.Stopped.name(), state). }
false;public;0;5;;@Override public void configure() throws Exception {     from("direct:start").routeId("myRoute").routeGroup("myGroup").description("my cool route").to("log:foo").to("mock:result"). }
false;protected;0;10;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").routeId("myRoute").routeGroup("myGroup").description("my cool route").to("log:foo").to("mock:result").         }     }. }
