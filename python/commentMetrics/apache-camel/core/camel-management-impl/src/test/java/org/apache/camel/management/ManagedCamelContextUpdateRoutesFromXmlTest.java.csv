commented;modifiers;parameterAmount;loc;comment;code
false;public;0;49;;@Test public void testDumpAsXml() throws Exception {     // JMX tests dont work well on AIX CI servers (hangs them)     if (isPlatform("aix")) {         return.     }     MockEndpoint mock = getMockEndpoint("mock:result").     mock.expectedBodiesReceived("Hello World").     template.sendBody("direct:start", "Hello World").     assertMockEndpointsSatisfied().     MBeanServer mbeanServer = getMBeanServer().     // there should be 1 routes to start with     Set<ObjectName> set = mbeanServer.queryNames(new ObjectName("*:type=routes,*"), null).     assertEquals(1, set.size()).     // update existing route, and add a 2nd     String xml = "<routes id=\"myRoute\" xmlns=\"http://camel.apache.org/schema/spring\">" + "<route id=\"myRoute\">" + "  <from uri=\"direct:start\"/>" + "  <log message=\"This is a changed route saying ${body}\"/>" + "  <to uri=\"mock:changed\"/>" + "</route>" + "<route id=\"myOtherRoute\">" + "  <from uri=\"seda:bar\"/>" + "  <to uri=\"mock:bar\"/>" + "</route>" + "</routes>".     ObjectName on = ObjectName.getInstance("org.apache.camel:context=camel-1,type=context,name=\"camel-1\"").     mbeanServer.invoke(on, "addOrUpdateRoutesFromXml", new Object[] { xml }, new String[] { "java.lang.String" }).     // there should be 2 routes now     set = mbeanServer.queryNames(new ObjectName("*:type=routes,*"), null).     assertEquals(2, set.size()).     // test updated route     getMockEndpoint("mock:changed").expectedMessageCount(1).     template.sendBody("direct:start", "Bye World").     assertMockEndpointsSatisfied().     // test new route     getMockEndpoint("mock:bar").expectedMessageCount(1).     template.sendBody("seda:bar", "Hi Camel").     assertMockEndpointsSatisfied(). }
false;public;0;6;;@Override public void configure() throws Exception {     from("direct:start").routeId("myRoute").log("Got ${body}").to("mock:result"). }
false;protected;0;11;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").routeId("myRoute").log("Got ${body}").to("mock:result").         }     }. }
