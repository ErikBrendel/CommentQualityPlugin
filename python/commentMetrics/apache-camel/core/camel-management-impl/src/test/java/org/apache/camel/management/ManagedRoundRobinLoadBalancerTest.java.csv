commented;modifiers;parameterAmount;loc;comment;code
false;public;0;52;;@Test public void testManageRoundRobinLoadBalancer() throws Exception {     // JMX tests dont work well on AIX CI servers (hangs them)     if (isPlatform("aix")) {         return.     }     MockEndpoint foo = getMockEndpoint("mock:foo").     foo.expectedMessageCount(1).     MockEndpoint bar = getMockEndpoint("mock:bar").     bar.expectedMessageCount(1).     template.sendBodyAndHeader("direct:start", "Hello World", "foo", "123").     template.sendBodyAndHeader("direct:start", "Bye World", "foo", "123").     assertMockEndpointsSatisfied().     // get the stats for the route     MBeanServer mbeanServer = getMBeanServer().     // get the object name for the delayer     ObjectName on = ObjectName.getInstance("org.apache.camel:context=camel-1,type=processors,name=\"mysend\"").     // should be on route1     String routeId = (String) mbeanServer.getAttribute(on, "RouteId").     assertEquals("route1", routeId).     String camelId = (String) mbeanServer.getAttribute(on, "CamelId").     assertEquals("camel-1", camelId).     String state = (String) mbeanServer.getAttribute(on, "State").     assertEquals(ServiceStatus.Started.name(), state).     Integer size = (Integer) mbeanServer.getAttribute(on, "Size").     assertEquals(2, size.intValue()).     String last = (String) mbeanServer.getAttribute(on, "LastChosenProcessorId").     assertEquals("bar", last).     TabularData data = (TabularData) mbeanServer.invoke(on, "explain", new Object[] { false }, new String[] { "boolean" }).     assertNotNull(data).     assertEquals(2, data.size()).     data = (TabularData) mbeanServer.invoke(on, "explain", new Object[] { true }, new String[] { "boolean" }).     assertNotNull(data).     assertEquals(5, data.size()).     String json = (String) mbeanServer.invoke(on, "informationJson", null, null).     assertNotNull(json).     assertTrue(json.contains("\"description\": \"Balances message processing among a number of nodes")). }
false;public;0;6;;@Override public void configure() throws Exception {     from("direct:start").loadBalance().roundRobin().id("mysend").to("mock:foo").id("foo").to("mock:bar").id("bar"). }
false;protected;0;11;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").loadBalance().roundRobin().id("mysend").to("mock:foo").id("foo").to("mock:bar").id("bar").         }     }. }
