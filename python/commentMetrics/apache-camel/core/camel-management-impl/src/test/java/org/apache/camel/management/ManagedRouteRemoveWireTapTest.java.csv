commented;modifiers;parameterAmount;loc;comment;code
false;public;0;56;;@Test public void testRemove() throws Exception {     // JMX tests dont work well on AIX CI servers (hangs them)     if (isPlatform("aix")) {         return.     }     MBeanServer mbeanServer = getMBeanServer().     ObjectName on = ObjectName.getInstance("org.apache.camel:context=camel-1,type=routes,name=\"foo\"").     getMockEndpoint("mock:result").expectedMessageCount(1).     getMockEndpoint("mock:tap").expectedMessageCount(1).     template.sendBody("seda:foo", "Hello World").     assertMockEndpointsSatisfied().     // should be started     String state = (String) mbeanServer.getAttribute(on, "State").     assertEquals("Should be started", ServiceStatus.Started.name(), state).     // and a number of thread pools     Set<ObjectName> set = mbeanServer.queryNames(new ObjectName("*:type=threadpools,*"), null).     boolean wireTap = false.     for (ObjectName name : set) {         if (name.toString().contains("wireTap")) {             wireTap = true.             break.         }     }     assertTrue("Should have a wire tap thread pool", wireTap).     // stop     mbeanServer.invoke(on, "stop", null, null).     state = (String) mbeanServer.getAttribute(on, "State").     assertEquals("Should be stopped", ServiceStatus.Stopped.name(), state).     // remove     mbeanServer.invoke(on, "remove", null, null).     // should not be registered anymore     boolean registered = mbeanServer.isRegistered(on).     assertFalse("Route mbean should have been unregistered", registered).     // and a thread pool less     set = mbeanServer.queryNames(new ObjectName("*:type=threadpools,*"), null).     wireTap = false.     for (ObjectName name : set) {         if (name.toString().contains("wireTap")) {             wireTap = true.             break.         }     }     assertFalse("Should not have a wire tap thread pool", wireTap). }
false;public;0;6;;@Override public void configure() throws Exception {     from("seda:foo").routeId("foo").wireTap("direct:tap").to("mock:result").     from("direct:tap").routeId("tap").to("mock:tap"). }
false;protected;0;11;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("seda:foo").routeId("foo").wireTap("direct:tap").to("mock:result").             from("direct:tap").routeId("tap").to("mock:tap").         }     }. }
