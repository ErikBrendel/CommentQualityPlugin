commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;10;;@Override protected CamelContext createCamelContext() throws Exception {     CamelContext answer = super.createCamelContext().     PropertiesComponent pc = new PropertiesComponent().     pc.setLocation("classpath:org/apache/camel/management/rest.properties").     answer.addComponent("properties", pc).     return answer. }
false;public;0;30;;@Test public void testDumpAsXml() throws Exception {     // JMX tests dont work well on AIX CI servers (hangs them)     if (isPlatform("aix")) {         return.     }     MBeanServer mbeanServer = getMBeanServer().     ObjectName on = getRouteObjectName(mbeanServer).     MockEndpoint mock = getMockEndpoint("mock:result").     mock.expectedBodiesReceived("Hello World").     template.sendBody("direct:start", "Hello World").     assertMockEndpointsSatisfied().     // should be started     String routeId = (String) mbeanServer.getAttribute(on, "RouteId").     assertEquals("myRoute", routeId).     String xml = (String) mbeanServer.invoke(on, "dumpRouteAsXml", new Object[] { true }, new String[] { "boolean" }).     assertNotNull(xml).     log.info(xml).     assertTrue(xml.contains("direct:start")).     assertTrue(xml.contains("route")).     assertTrue(xml.contains("myRoute")).     assertTrue(xml.contains("mock:result")). }
false;static;1;6;;static ObjectName getRouteObjectName(MBeanServer mbeanServer) throws Exception {     Set<ObjectName> set = mbeanServer.queryNames(new ObjectName("*:type=routes,*"), null).     assertEquals(1, set.size()).     return set.iterator().next(). }
false;public;0;6;;@Override public void configure() throws Exception {     from("{{start}}").routeId("myRoute").log("Got ${body}").to("{{result}}"). }
false;protected;0;11;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("{{start}}").routeId("myRoute").log("Got ${body}").to("{{result}}").         }     }. }
