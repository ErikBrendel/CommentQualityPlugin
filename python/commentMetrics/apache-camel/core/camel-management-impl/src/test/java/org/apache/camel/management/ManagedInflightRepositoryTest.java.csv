commented;modifiers;parameterAmount;loc;comment;code
false;public;0;13;;@Test public void testInflightRepository() throws Exception {     // JMX tests dont work well on AIX CI servers (hangs them)     if (isPlatform("aix")) {         return.     }     getMockEndpoint("mock:result").expectedMessageCount(1).     template.sendBody("direct:start", "Hello World").     assertMockEndpointsSatisfied(). }
false;public;1;16;;@Override public void process(Exchange exchange) throws Exception {     MBeanServer mbeanServer = getMBeanServer().     ObjectName name = ObjectName.getInstance("org.apache.camel:context=camel-1,type=services,name=DefaultInflightRepository").     Integer size = (Integer) mbeanServer.getAttribute(name, "Size").     assertEquals(1, size.intValue()).     Integer routeSize = (Integer) mbeanServer.invoke(name, "size", new Object[] { "foo" }, new String[] { "java.lang.String" }).     assertEquals(1, routeSize.intValue()).     TabularData data = (TabularData) mbeanServer.invoke(name, "browse", null, null).     assertNotNull(data).     assertEquals(1, data.size()). }
false;public;0;24;;@Override public void configure() throws Exception {     from("direct:start").routeId("foo").to("mock:a").process(new Processor() {          @Override         public void process(Exchange exchange) throws Exception {             MBeanServer mbeanServer = getMBeanServer().             ObjectName name = ObjectName.getInstance("org.apache.camel:context=camel-1,type=services,name=DefaultInflightRepository").             Integer size = (Integer) mbeanServer.getAttribute(name, "Size").             assertEquals(1, size.intValue()).             Integer routeSize = (Integer) mbeanServer.invoke(name, "size", new Object[] { "foo" }, new String[] { "java.lang.String" }).             assertEquals(1, routeSize.intValue()).             TabularData data = (TabularData) mbeanServer.invoke(name, "browse", null, null).             assertNotNull(data).             assertEquals(1, data.size()).         }     }).id("myProcessor").to("mock:result"). }
false;protected;0;29;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").routeId("foo").to("mock:a").process(new Processor() {                  @Override                 public void process(Exchange exchange) throws Exception {                     MBeanServer mbeanServer = getMBeanServer().                     ObjectName name = ObjectName.getInstance("org.apache.camel:context=camel-1,type=services,name=DefaultInflightRepository").                     Integer size = (Integer) mbeanServer.getAttribute(name, "Size").                     assertEquals(1, size.intValue()).                     Integer routeSize = (Integer) mbeanServer.invoke(name, "size", new Object[] { "foo" }, new String[] { "java.lang.String" }).                     assertEquals(1, routeSize.intValue()).                     TabularData data = (TabularData) mbeanServer.invoke(name, "browse", null, null).                     assertNotNull(data).                     assertEquals(1, data.size()).                 }             }).id("myProcessor").to("mock:result").         }     }. }
