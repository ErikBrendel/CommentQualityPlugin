commented;modifiers;parameterAmount;loc;comment;code
false;public;0;46;;@Test public void testRemove() throws Exception {     // JMX tests dont work well on AIX CI servers (hangs them)     if (isPlatform("aix")) {         return.     }     MBeanServer mbeanServer = getMBeanServer().     ObjectName on = getRouteObjectName(mbeanServer).     MockEndpoint mock = getMockEndpoint("mock:result").     mock.expectedBodiesReceived("Hello World").     template.sendBody("seda:foo", "Hello World").     assertMockEndpointsSatisfied().     // should be started     String state = (String) mbeanServer.getAttribute(on, "State").     assertEquals("Should be started", ServiceStatus.Started.name(), state).     // and one context scoped error handler     Set<ObjectName> set = mbeanServer.queryNames(new ObjectName("*:type=errorhandlers,*"), null).     assertEquals(1, set.size()).     // stop     mbeanServer.invoke(on, "stop", null, null).     state = (String) mbeanServer.getAttribute(on, "State").     assertEquals("Should be stopped", ServiceStatus.Stopped.name(), state).     // remove     mbeanServer.invoke(on, "remove", null, null).     // should not be registered anymore     boolean registered = mbeanServer.isRegistered(on).     assertFalse("Route mbean should have been unregistered", registered).     // and no more routes     set = mbeanServer.queryNames(new ObjectName("*:type=routes,*"), null).     assertEquals(0, set.size()).     // but still 1 context scoped error handler     set = mbeanServer.queryNames(new ObjectName("*:type=errorhandlers,*"), null).     assertEquals(1, set.size()). }
false;static;1;6;;static ObjectName getRouteObjectName(MBeanServer mbeanServer) throws Exception {     Set<ObjectName> set = mbeanServer.queryNames(new ObjectName("*:type=routes,*"), null).     assertEquals(1, set.size()).     return set.iterator().next(). }
false;public;0;8;;@Override public void configure() throws Exception {     // context scoped error handler     errorHandler(deadLetterChannel("mock:dead")).     // which this route will use     from("seda:foo").to("mock:result"). }
false;protected;0;13;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             // context scoped error handler             errorHandler(deadLetterChannel("mock:dead")).             // which this route will use             from("seda:foo").to("mock:result").         }     }. }
