commented;modifiers;parameterAmount;loc;comment;code
false;public;0;28;;public void testRouteCoverageStats() throws Exception {     // JMX tests dont work well on AIX CI servers (hangs them)     if (isPlatform("aix")) {         return.     }     // get the stats for the route     MBeanServer mbeanServer = getMBeanServer().     ObjectName on = ObjectName.getInstance("org.apache.camel:context=camel-1,type=context,name=\"camel-1\"").     getMockEndpoint("mock:foo").expectedMessageCount(1).     getMockEndpoint("mock:bar").expectedMessageCount(2).     template.asyncSendBody("direct:start", "Hello World").     template.asyncSendBody("direct:bar", "Hi World").     template.asyncSendBody("direct:bar", "Bye World").     assertMockEndpointsSatisfied().     String xml = (String) mbeanServer.invoke(on, "dumpRoutesCoverageAsXml", null, null).     log.info(xml).     assertTrue(xml.contains("exchangesTotal=\"3\"")).     assertTrue(xml.contains("exchangesTotal=\"2\"")).     assertTrue(xml.contains("customId=\"true\"")).     // should be valid XML     Document doc = context.getTypeConverter().convertTo(Document.class, xml).     assertNotNull(doc). }
false;public;0;11;;@Override public void configure() throws Exception {     from("direct:start").routeId("foo").to("log:foo").delay(100).to("mock:foo").     from("direct:bar").routeId("bar").to("log:bar").to("mock:bar"). }
false;protected;0;16;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").routeId("foo").to("log:foo").delay(100).to("mock:foo").             from("direct:bar").routeId("bar").to("log:bar").to("mock:bar").         }     }. }
