commented;modifiers;parameterAmount;loc;comment;code
false;public;0;27;;@Test public void testPerformanceCounterStats() throws Exception {     // JMX tests dont work well on AIX CI servers (hangs them)     if (isPlatform("aix")) {         return.     }     // get the stats for the route     MBeanServer mbeanServer = getMBeanServer().     ObjectName on = ObjectName.getInstance("org.apache.camel:context=camel-1,type=routes,name=\"foo\"").     getMockEndpoint("mock:result").expectedMessageCount(1).     template.asyncSendBody("direct:start", "Hello World").     assertMockEndpointsSatisfied().     String xml = (String) mbeanServer.invoke(on, "dumpRouteStatsAsXml", new Object[] { false, true }, new String[] { "boolean", "boolean" }).     log.info(xml).     // should be valid XML     Document doc = context.getTypeConverter().convertTo(Document.class, xml).     assertNotNull(doc).     int processors = doc.getDocumentElement().getElementsByTagName("processorStat").getLength().     assertEquals(3, processors). }
false;public;0;7;;@Override public void configure() throws Exception {     from("direct:start").routeId("foo").to("log:foo").id("to-log").delay(100).to("mock:result").id("to-mock"). }
false;protected;0;12;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").routeId("foo").to("log:foo").id("to-log").delay(100).to("mock:result").id("to-mock").         }     }. }
