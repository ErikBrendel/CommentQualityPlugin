commented;modifiers;parameterAmount;loc;comment;code
false;public;0;37;;@Test public void testBrowseableEndpoint() throws Exception {     // JMX tests dont work well on AIX CI servers (hangs them)     if (isPlatform("aix")) {         return.     }     getMockEndpoint("mock:result").expectedMessageCount(2).     template.sendBody("direct:start", "Hello World").     template.sendBody("direct:start", "Bye World").     assertMockEndpointsSatisfied().     MBeanServer mbeanServer = getMBeanServer().     ObjectName name = ObjectName.getInstance("org.apache.camel:context=camel-1,type=endpoints,name=\"mock://result\"").     String uri = (String) mbeanServer.getAttribute(name, "EndpointUri").     assertEquals("mock://result", uri).     Long size = (Long) mbeanServer.invoke(name, "queueSize", null, null).     assertEquals(2, size.longValue()).     String out = (String) mbeanServer.invoke(name, "browseExchange", new Object[] { 0 }, new String[] { "java.lang.Integer" }).     assertNotNull(out).     // message body is not dumped when browsing exchange     assertFalse(out.contains("Hello World")).     out = (String) mbeanServer.invoke(name, "browseExchange", new Object[] { 1 }, new String[] { "java.lang.Integer" }).     assertNotNull(out).     // message body is not dumped when browsing exchange     assertFalse(out.contains("Bye World")).     out = (String) mbeanServer.invoke(name, "browseMessageBody", new Object[] { 1 }, new String[] { "java.lang.Integer" }).     assertNotNull(out).     assertEquals("Bye World", out). }
false;public;0;4;;@Override public void configure() throws Exception {     from("direct:start").to("log:foo").to("mock:result"). }
false;protected;0;9;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").to("log:foo").to("mock:result").         }     }. }
