commented;modifiers;parameterAmount;loc;comment;code
false;public;0;16;;@Test public void testManageWithInterceptFrom() throws Exception {     // JMX tests dont work well on AIX CI servers (hangs them)     if (isPlatform("aix")) {         return.     }     MockEndpoint foo = getMockEndpoint("mock:foo").     foo.expectedMessageCount(1).     MockEndpoint intercepted = getMockEndpoint("mock:intercepted").     intercepted.setExpectedMessageCount(1).     template.sendBodyAndHeader("direct:start", "Hello World", "foo", "123").     assertMockEndpointsSatisfied(). }
false;public;0;5;;@Override public void configure() throws Exception {     interceptFrom().when(simple("${header.foo} == '123'")).to("mock:intercepted").     from("direct:start").to("mock:foo"). }
false;protected;0;10;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             interceptFrom().when(simple("${header.foo} == '123'")).to("mock:intercepted").             from("direct:start").to("mock:foo").         }     }. }
