commented;modifiers;parameterAmount;loc;comment;code
false;public;0;24;;@Test public void testGetProperties() throws Exception {     // JMX tests don't work well on AIX CI servers (hangs them)     if (isPlatform("aix")) {         return.     }     MBeanServer mbeanServer = getMBeanServer().     ObjectName on = getRouteObjectName(mbeanServer).     // should be started     String routeId = (String) mbeanServer.getAttribute(on, "RouteId").     assertEquals("myRoute", routeId).     TabularData data = (TabularData) mbeanServer.invoke(on, "getRouteProperties", null, null).     assertNotNull(data).     assertTrue(data.containsKey(new Object[] { "key1" })).     assertEquals("key1", data.get(new Object[] { "key1" }).get("key")).     assertEquals("val1", data.get(new Object[] { "key1" }).get("value")).     assertTrue(data.containsKey(new Object[] { "key2" })).     assertEquals("key2", data.get(new Object[] { "key2" }).get("key")).     assertEquals("val2", data.get(new Object[] { "key2" }).get("value")). }
false;static;1;6;;static ObjectName getRouteObjectName(MBeanServer mbeanServer) throws Exception {     Set<ObjectName> set = mbeanServer.queryNames(new ObjectName("*:type=routes,*"), null).     assertEquals(1, set.size()).     return set.iterator().next(). }
false;public;0;8;;@Override public void configure() throws Exception {     from("direct:start").routeId("myRoute").routeProperty("key1", "val1").routeProperty("key2", "val2").to("mock:result"). }
false;protected;0;13;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").routeId("myRoute").routeProperty("key1", "val1").routeProperty("key2", "val2").to("mock:result").         }     }. }
