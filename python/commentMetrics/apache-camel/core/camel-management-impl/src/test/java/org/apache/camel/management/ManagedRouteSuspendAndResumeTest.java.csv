commented;modifiers;parameterAmount;loc;comment;code
false;public;0;6;;@Override @Before public void setUp() throws Exception {     deleteDirectory("target/data/managed").     super.setUp(). }
false;public;0;55;;@Test public void testSuspendAndResume() throws Exception {     // JMX tests dont work well on AIX CI servers (hangs them)     if (isPlatform("aix")) {         return.     }     MBeanServer mbeanServer = getMBeanServer().     ObjectName on = getRouteObjectName(mbeanServer).     MockEndpoint mock = getMockEndpoint("mock:result").     mock.expectedBodiesReceived("Hello World").     template.sendBodyAndHeader("file://target/data/managed", "Hello World", Exchange.FILE_NAME, "hello.txt").     assertMockEndpointsSatisfied().     // should be started     String state = (String) mbeanServer.getAttribute(on, "State").     assertEquals("Should be started", ServiceStatus.Started.name(), state).     // stop     mbeanServer.invoke(on, "suspend", null, null).     state = (String) mbeanServer.getAttribute(on, "State").     assertEquals("Should be suspended", ServiceStatus.Suspended.name(), state).     mock.reset().     mock.expectedBodiesReceived("Bye World").     // wait a little bit while route is stopped to verify that file was not consumed     mock.setResultWaitTime(250).     template.sendBodyAndHeader("file://target/data/managed", "Bye World", Exchange.FILE_NAME, "bye.txt").     // route is stopped so we do not get the file     mock.assertIsNotSatisfied().     // prepare mock for starting route     mock.reset().     mock.expectedBodiesReceived("Bye World").     // start     mbeanServer.invoke(on, "resume", null, null).     state = (String) mbeanServer.getAttribute(on, "State").     assertEquals("Should be started", ServiceStatus.Started.name(), state).     // this time the file is consumed     mock.assertIsSatisfied().     ManagedSuspendableRouteMBean route = context.getExtension(ManagedCamelContext.class).getManagedRoute("foo", ManagedSuspendableRouteMBean.class).     assertNotNull(route).     assertEquals(2, route.getExchangesCompleted()). }
false;static;1;6;;static ObjectName getRouteObjectName(MBeanServer mbeanServer) throws Exception {     Set<ObjectName> set = mbeanServer.queryNames(new ObjectName("*:type=routes,*"), null).     assertEquals(1, set.size()).     return set.iterator().next(). }
false;public;0;4;;@Override public void configure() throws Exception {     from("file://target/data/managed?initialDelay=0&delay=10").routeId("foo").to("mock:result"). }
false;protected;0;9;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("file://target/data/managed?initialDelay=0&delay=10").routeId("foo").to("mock:result").         }     }. }
