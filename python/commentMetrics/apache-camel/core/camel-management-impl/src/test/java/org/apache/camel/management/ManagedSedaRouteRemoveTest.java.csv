commented;modifiers;parameterAmount;loc;comment;code
false;public;0;62;;@Test public void testRemove() throws Exception {     // JMX tests dont work well on AIX CI servers (hangs them)     if (isPlatform("aix")) {         return.     }     MBeanServer mbeanServer = getMBeanServer().     ObjectName on = getRouteObjectName(mbeanServer).     MockEndpoint mock = getMockEndpoint("mock:result").     mock.expectedBodiesReceived("Hello World").     template.sendBody("seda:foo", "Hello World").     assertMockEndpointsSatisfied().     // should be started     String state = (String) mbeanServer.getAttribute(on, "State").     assertEquals("Should be started", ServiceStatus.Started.name(), state).     // and there should be 2 thread pools (1 default + 1 seda)     Set<ObjectName> set = mbeanServer.queryNames(new ObjectName("*:type=threadpools,*"), null).     // there should be a seda thread pool in there     boolean seda = false.     for (ObjectName names : set) {         if (names.toString().contains("Seda")) {             seda = true.             break.         }     }     assertTrue("There should be a seda thread pool", seda).     // stop     mbeanServer.invoke(on, "stop", null, null).     state = (String) mbeanServer.getAttribute(on, "State").     assertEquals("Should be stopped", ServiceStatus.Stopped.name(), state).     // remove     mbeanServer.invoke(on, "remove", null, null).     // should not be registered anymore     boolean registered = mbeanServer.isRegistered(on).     assertFalse("Route mbean should have been unregistered", registered).     // and no more routes     set = mbeanServer.queryNames(new ObjectName("*:type=routes,*"), null).     assertEquals(0, set.size()).     // and thread pool should be removed (shutdown creates a new thread pool as well)     set = mbeanServer.queryNames(new ObjectName("*:type=threadpools,*"), null).     // there should NOT be a seda thread pool in there     seda = false.     for (ObjectName names : set) {         if (names.toString().contains("Seda")) {             seda = true.             break.         }     }     assertFalse("There should not be a seda thread pool", seda). }
false;static;1;6;;static ObjectName getRouteObjectName(MBeanServer mbeanServer) throws Exception {     Set<ObjectName> set = mbeanServer.queryNames(new ObjectName("*:type=routes,*"), null).     assertEquals(1, set.size()).     return set.iterator().next(). }
false;public;0;4;;@Override public void configure() throws Exception {     from("seda:foo").to("mock:result"). }
false;protected;0;9;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("seda:foo").to("mock:result").         }     }. }
