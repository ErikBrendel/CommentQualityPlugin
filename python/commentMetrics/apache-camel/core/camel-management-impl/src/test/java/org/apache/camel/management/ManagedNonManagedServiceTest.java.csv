commented;modifiers;parameterAmount;loc;comment;code
false;public;0;21;;@Test public void testService() throws Exception {     // JMX tests dont work well on AIX CI servers (hangs them)     if (isPlatform("aix")) {         return.     }     // must enable always as CamelContext has been started     // and we add the service manually below     context.getManagementStrategy().getManagementAgent().setRegisterAlways(true).     MyService service = new MyService().     for (LifecycleStrategy strategy : context.getLifecycleStrategies()) {         strategy.onServiceAdd(context, service, null).     }     MBeanServer mbeanServer = getMBeanServer().     Set<ObjectName> set = mbeanServer.queryNames(new ObjectName("*:type=services,*"), null).     assertEquals(SERVICES + 1, set.size()). }
false;public;0;21;;@Test public void testNonManagedService() throws Exception {     // JMX tests dont work well on AIX CI servers (hangs them)     if (isPlatform("aix")) {         return.     }     // must enable always as CamelContext has been started     // and we add the service manually below     context.getManagementStrategy().getManagementAgent().setRegisterAlways(true).     MyNonService service = new MyNonService().     for (LifecycleStrategy strategy : context.getLifecycleStrategies()) {         strategy.onServiceAdd(context, service, null).     }     MBeanServer mbeanServer = getMBeanServer().     Set<ObjectName> set = mbeanServer.queryNames(new ObjectName("*:type=services,*"), null).     assertEquals(SERVICES, set.size()). }
false;public;0;5;;@Override public void configure() throws Exception {     from("direct:start").to("mock:result"). }
false;protected;0;10;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").to("mock:result").         }     }. }
false;protected;0;4;;@Override protected void doStart() throws Exception { // noop }
false;protected;0;4;;@Override protected void doStop() throws Exception { // noop }
false;protected;0;4;;@Override protected void doStart() throws Exception { // noop }
false;protected;0;4;;@Override protected void doStop() throws Exception { // noop }
