commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public void configure() throws Exception {     from("direct:start").routeId("foo").to("mock:result"). }
false;protected;0;9;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").routeId("foo").to("mock:result").         }     }. }
false;public;0;4;;@Override public void configure() throws Exception {     from("direct:bar").routeId("bar").to("mock:bar"). }
false;public;0;31;;@Test public void testRouteAddSecondRoute() throws Exception {     // JMX tests dont work well on AIX CI servers (hangs them)     if (isPlatform("aix")) {         return.     }     MBeanServer mbeanServer = getMBeanServer().     ObjectName route1 = ObjectName.getInstance("org.apache.camel:context=camel-1,type=routes,name=\"foo\"").     // should be started     String state = (String) mbeanServer.getAttribute(route1, "State").     assertEquals("Should be started", ServiceStatus.Started.name(), state).     log.info(">>>>>>>>>>>>>>>>> adding 2nd route <<<<<<<<<<<<<<").     // add a 2nd route     context.addRoutes(new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:bar").routeId("bar").to("mock:bar").         }     }).     log.info(">>>>>>>>>>>>>>>>> adding 2nd route DONE <<<<<<<<<<<<<<").     // find the 2nd route     ObjectName route2 = ObjectName.getInstance("org.apache.camel:context=camel-1,type=routes,name=\"bar\"").     // should be started     state = (String) mbeanServer.getAttribute(route2, "State").     assertEquals("Should be started", ServiceStatus.Started.name(), state). }
