commented;modifiers;parameterAmount;loc;comment;code
false;public;0;43;;@Test public void testManagedThreadPool() throws Exception {     // JMX tests dont work well on AIX CI servers (hangs them)     if (isPlatform("aix")) {         return.     }     MBeanServer mbeanServer = getMBeanServer().     ObjectName on = ObjectName.getInstance("org.apache.camel:context=camel-1,type=threadpools,name=\"myThreads(threads)\"").     Integer corePoolSize = (Integer) mbeanServer.getAttribute(on, "CorePoolSize").     assertEquals(15, corePoolSize.intValue()).     Integer maxPoolSize = (Integer) mbeanServer.getAttribute(on, "MaximumPoolSize").     assertEquals(30, maxPoolSize.intValue()).     String id = (String) mbeanServer.getAttribute(on, "Id").     assertEquals("myThreads", id).     String source = (String) mbeanServer.getAttribute(on, "SourceId").     assertEquals("threads", source).     String route = (String) mbeanServer.getAttribute(on, "RouteId").     assertEquals("route1", route).     on = ObjectName.getInstance("org.apache.camel:context=camel-1,type=threadpools,name=\"myOtherThreads(threads)\"").     corePoolSize = (Integer) mbeanServer.getAttribute(on, "CorePoolSize").     assertEquals(1, corePoolSize.intValue()).     maxPoolSize = (Integer) mbeanServer.getAttribute(on, "MaximumPoolSize").     assertEquals(2, maxPoolSize.intValue()).     id = (String) mbeanServer.getAttribute(on, "Id").     assertEquals("myOtherThreads", id).     source = (String) mbeanServer.getAttribute(on, "SourceId").     assertEquals("threads", source).     route = (String) mbeanServer.getAttribute(on, "RouteId").     assertEquals("route2", route). }
false;public;0;6;;@Override public void configure() throws Exception {     from("direct:start").threads(15, 30).id("myThreads").to("mock:result").     from("direct:foo").threads(1, 2).id("myOtherThreads").to("mock:foo"). }
false;protected;0;11;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").threads(15, 30).id("myThreads").to("mock:result").             from("direct:foo").threads(1, 2).id("myOtherThreads").to("mock:foo").         }     }. }
