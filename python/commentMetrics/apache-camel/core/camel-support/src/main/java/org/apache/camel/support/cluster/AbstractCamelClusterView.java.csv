commented;modifiers;parameterAmount;loc;comment;code
false;public;1;4;;@Override public void setCamelContext(CamelContext camelContext) {     this.camelContext = camelContext. }
false;public;0;4;;@Override public CamelContext getCamelContext() {     return camelContext. }
false;public;0;4;;@Override public CamelClusterService getClusterService() {     return this.clusterService. }
false;public;0;4;;@Override public String getNamespace() {     return this.namespace. }
false;public;1;30;;@Override public void addEventListener(CamelClusterEventListener listener) {     if (listener == null) {         return.     }     LockHelper.doWithWriteLock(lock, () -> {         listeners.add(listener).         if (isRunAllowed()) {             if (CamelClusterEventListener.Leadership.class.isInstance(listener)) {                 CamelClusterEventListener.Leadership.class.cast(listener).leadershipChanged(this, getLeader()).             }             if (CamelClusterEventListener.Membership.class.isInstance(listener)) {                 CamelClusterEventListener.Membership ml = CamelClusterEventListener.Membership.class.cast(listener).                 for (CamelClusterMember member : getMembers()) {                     ml.memberAdded(this, member).                 }             }         }     }). }
false;public;1;8;;@Override public void removeEventListener(CamelClusterEventListener listener) {     if (listener == null) {         return.     }     LockHelper.doWithWriteLock(lock, () -> listeners.removeIf(l -> l == listener)). }
false;private;2;14;;// ************************************** // Events // ************************************** private <T extends CamelClusterEventListener> void doWithListener(Class<T> type, Consumer<T> consumer) {     LockHelper.doWithReadLock(lock, () -> {         for (int i = 0. i < listeners.size(). i++) {             CamelClusterEventListener listener = listeners.get(i).             if (type.isInstance(listener)) {                 consumer.accept(type.cast(listener)).             }         }     }). }
false;protected;1;6;;protected void fireLeadershipChangedEvent(Optional<CamelClusterMember> leader) {     doWithListener(CamelClusterEventListener.Leadership.class, listener -> listener.leadershipChanged(this, leader)). }
false;protected;1;6;;protected void fireMemberAddedEvent(CamelClusterMember member) {     doWithListener(CamelClusterEventListener.Membership.class, listener -> listener.memberAdded(this, member)). }
false;protected;1;6;;protected void fireMemberRemovedEvent(CamelClusterMember member) {     doWithListener(CamelClusterEventListener.Membership.class, listener -> listener.memberRemoved(this, member)). }
