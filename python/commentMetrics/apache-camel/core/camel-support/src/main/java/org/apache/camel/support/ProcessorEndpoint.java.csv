commented;modifiers;parameterAmount;loc;comment;code
false;public;1;3;;public void process(Exchange exchange) throws Exception {     onExchange(exchange). }
false;public;0;7;;public Producer createProducer() throws Exception {     return new DefaultProducer(this) {          public void process(Exchange exchange) throws Exception {             onExchange(exchange).         }     }. }
false;public;0;6;;@Override public PollingConsumer createPollingConsumer() throws Exception {     PollingConsumer answer = new ProcessorPollingConsumer(this, getProcessor()).     configurePollingConsumer(answer).     return answer. }
false;public;0;6;;public Processor getProcessor() throws Exception {     if (processor == null) {         processor = createProcessor().     }     return processor. }
false;public;1;3;;public void setProcessor(Processor processor) {     this.processor = processor. }
false;public;1;3;;public void process(Exchange exchange) throws Exception {     onExchange(exchange). }
false;protected;0;7;;protected Processor createProcessor() throws Exception {     return new Processor() {          public void process(Exchange exchange) throws Exception {             onExchange(exchange).         }     }. }
false;protected;1;3;;protected void onExchange(Exchange exchange) throws Exception {     getProcessor().process(exchange). }
false;public;0;3;;public boolean isSingleton() {     return true. }
