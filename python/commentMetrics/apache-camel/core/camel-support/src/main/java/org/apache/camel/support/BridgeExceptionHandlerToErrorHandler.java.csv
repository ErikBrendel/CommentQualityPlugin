commented;modifiers;parameterAmount;loc;comment;code
false;public;1;4;;@Override public void handleException(Throwable exception) {     handleException(null, exception). }
false;public;2;4;;@Override public void handleException(String message, Throwable exception) {     handleException(message, null, exception). }
false;public;3;24;;@Override public void handleException(String message, Exchange exchange, Throwable exception) {     if (exchange == null) {         exchange = consumer.getEndpoint().createExchange().     }     // set the caused exception     exchange.setException(exception).     // and the message     exchange.getIn().setBody(message).     // and mark as redelivery exhausted as we cannot do redeliveries     exchange.setProperty(Exchange.REDELIVERY_EXHAUSTED, Boolean.TRUE).     // wrap in UoW     UnitOfWork uow = null.     try {         uow = consumer.createUoW(exchange).         bridge.process(exchange).     } catch (Exception e) {         fallback.handleException("Error handling exception " + exception.getMessage(), exchange, e).     } finally {         UnitOfWorkHelper.doneUow(uow, exchange).     } }
