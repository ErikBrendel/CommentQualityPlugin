commented;modifiers;parameterAmount;loc;comment;code
false;public;1;9;;@Override public void process(Exchange exchange) throws Exception {     final Processor processor = getProcessor(exchange).     if (processor != null) {         processor.process(exchange).     } else {         onMissingProcessor(exchange).     } }
true;protected,abstract;1;1;/**  * Determine the processor to use to handle the exchange.  *  * @param exchange the message exchange  * @return the processor to processes the message exchange  * @throws Exception  */ ;/**  * Determine the processor to use to handle the exchange.  *  * @param exchange the message exchange  * @return the processor to processes the message exchange  * @throws Exception  */ protected abstract Processor getProcessor(Exchange exchange) throws Exception.
true;protected,abstract;1;1;/**  * Invoked when no processor has been defined to process the message exchnage.  *  * @param exchange the message exchange  * @throws Exception  */ ;/**  * Invoked when no processor has been defined to process the message exchnage.  *  * @param exchange the message exchange  * @throws Exception  */ protected abstract void onMissingProcessor(Exchange exchange) throws Exception.
