commented;modifiers;parameterAmount;loc;comment;code
true;public;0;3;/**  * Returns the schema that failed  */ ;/**  * Returns the schema that failed  */ public Object getSchema() {     return schema. }
true;public;0;3;/**  * Returns the validation errors  */ ;/**  * Returns the validation errors  */ public List<SAXParseException> getErrors() {     return errors. }
true;public;0;3;/**  * Returns the fatal validation errors  */ ;/**  * Returns the fatal validation errors  */ public List<SAXParseException> getFatalErrors() {     return fatalErrors. }
true;public;0;3;/**  * Returns the validation warnings  */ ;/**  * Returns the validation warnings  */ public List<SAXParseException> getWarnings() {     return warnings. }
false;protected,static;4;23;;protected static String message(Object schema, List<SAXParseException> fatalErrors, List<SAXParseException> errors, List<SAXParseException> warnings) {     StringBuilder buffer = new StringBuilder("Validation failed for: ").append(schema).append("\n").     if (!fatalErrors.isEmpty()) {         buffer.append("fatal errors: [").append("\n").         appendDetails(buffer, fatalErrors).         buffer.append("]").append("\n").     }     if (!errors.isEmpty()) {         buffer.append("errors: [").append("\n").         appendDetails(buffer, errors).         buffer.append("]").     }     return buffer.toString(). }
false;private,static;2;8;;private static void appendDetails(StringBuilder buffer, List<SAXParseException> saxParseExceptions) {     for (SAXParseException e : saxParseExceptions) {         buffer.append(e.getClass().getName()).append(": ").         buffer.append(e.getMessage()).append(", ").         buffer.append("Line : ").append(e.getLineNumber()).append(", ").         buffer.append("Column : ").append(e.getColumnNumber()).append("\n").     } }
