commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public DataHandler getDataHandler() {     return dataHandler. }
false;public;1;12;;@Override public String getHeader(String name) {     if (headers != null) {         Object headerObject = headers.get(name).         if (headerObject instanceof String) {             return (String) headerObject.         } else if (headerObject instanceof Collection<?>) {             return CollectionHelper.collectionAsCommaDelimitedString((Collection<?>) headerObject).         }     }     return null. }
false;public;1;13;;@SuppressWarnings("unchecked") @Override public List<String> getHeaderAsList(String name) {     if (headers != null) {         Object headerObject = headers.get(name).         if (headerObject instanceof List<?>) {             return (List<String>) headerObject.         } else if (headerObject instanceof String) {             return Collections.singletonList((String) headerObject).         }     }     return null. }
false;public;2;7;;@Override public void addHeader(String headerName, String headerValue) {     if (headers == null) {         headers = createHeaders().     }     CollectionHelper.appendValue(headers, headerName, headerValue). }
false;public;2;7;;@Override public void setHeader(String headerName, String headerValue) {     if (headers == null) {         headers = createHeaders().     }     headers.put(headerName, headerValue). }
false;public;1;6;;@Override public void removeHeader(String headerName) {     if (headers != null) {         headers.remove(headerName).     } }
false;public;0;7;;@Override public Collection<String> getHeaderNames() {     if (headers == null) {         headers = createHeaders().     }     return headers.keySet(). }
false;public;0;3;;public void clearHeaders() {     headers = null. }
false;private;0;3;;private Map<String, Object> createHeaders() {     return new TreeMap<>(String.CASE_INSENSITIVE_ORDER). }
false;public;1;7;;public boolean equals(Object other) {     if (other instanceof Attachment) {         DataHandler otherDh = ((Attachment) other).getDataHandler().         return dataHandler.equals(otherDh).     }     return false. }
false;public;0;3;;public int hashCode() {     return dataHandler.hashCode(). }
