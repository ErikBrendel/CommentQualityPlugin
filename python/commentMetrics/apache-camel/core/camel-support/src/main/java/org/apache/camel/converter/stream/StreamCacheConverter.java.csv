commented;modifiers;parameterAmount;loc;comment;code
false;public,static;2;4;;@Converter public static StreamCache convertToStreamCache(StreamSource source, Exchange exchange) throws IOException {     return new StreamSourceCache(source, exchange). }
false;public,static;1;5;;@Converter public static StreamCache convertToStreamCache(StringSource source) {     // no need to do stream caching for a StringSource     return null. }
false;public,static;1;5;;@Converter public static StreamCache convertToStreamCache(BytesSource source) {     // no need to do stream caching for a BytesSource     return null. }
false;public,static;2;5;;@Converter public static StreamCache convertToStreamCache(SAXSource source, Exchange exchange) throws TransformerException {     String data = exchange.getContext().getTypeConverter().convertTo(String.class, exchange, source).     return new SourceCache(data). }
false;public,static;2;4;;@Converter public static StreamCache convertToStreamCache(ByteArrayInputStream stream, Exchange exchange) throws IOException {     return new ByteArrayInputStreamCache(stream). }
false;public,static;2;8;;@Converter public static StreamCache convertToStreamCache(InputStream stream, Exchange exchange) throws IOException {     // transfer the input stream to a cached output stream, and then creates a new stream cache view     // of the data, which ensures the input stream is cached and re-readable.     CachedOutputStream cos = new CachedOutputStream(exchange).     IOHelper.copyAndCloseInput(stream, cos).     return cos.newStreamCache(). }
false;public,static;2;4;;@Converter public static StreamCache convertToStreamCache(CachedOutputStream cos, Exchange exchange) throws IOException {     return cos.newStreamCache(). }
false;public,static;2;5;;@Converter public static StreamCache convertToStreamCache(Reader reader, Exchange exchange) throws IOException {     String data = exchange.getContext().getTypeConverter().convertTo(String.class, exchange, reader).     return new ReaderCache(data). }
false;public,static;2;5;;@Converter public static Serializable convertToSerializable(StreamCache cache, Exchange exchange) throws IOException {     byte[] data = convertToByteArray(cache, exchange).     return new BytesSource(data). }
false;public,static;2;7;;@Converter public static byte[] convertToByteArray(StreamCache cache, Exchange exchange) throws IOException {     // lets serialize it as a byte array     ByteArrayOutputStream os = new ByteArrayOutputStream().     cache.writeTo(os).     return os.toByteArray(). }
false;public,static;2;5;;@Converter public static ByteBuffer convertToByteBuffer(StreamCache cache, Exchange exchange) throws IOException {     byte[] array = convertToByteArray(cache, exchange).     return ByteBuffer.wrap(array). }
