commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public void close() { // Do not release the string for caching }
false;public;0;8;;@Override public void reset() {     try {         super.reset().     } catch (IOException e) {     // ignore     } }
false;public;1;3;;public void writeTo(OutputStream os) throws IOException {     os.write(data.getBytes()). }
false;public;1;3;;public StreamCache copy(Exchange exchange) throws IOException {     return new ReaderCache(data). }
false;public;0;3;;public boolean inMemory() {     return true. }
false;public;0;3;;public long length() {     return data.length(). }
false;;0;3;;String getData() {     return data. }
