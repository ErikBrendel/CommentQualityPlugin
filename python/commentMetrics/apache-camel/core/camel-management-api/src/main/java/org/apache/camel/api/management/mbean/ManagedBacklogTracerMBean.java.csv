commented;modifiers;parameterAmount;loc;comment;code
false;;0;2;;@ManagedAttribute(description = "Camel ID") String getCamelId().
false;;0;2;;@ManagedAttribute(description = "Camel ManagementName") String getCamelManagementName().
false;;0;2;;@ManagedAttribute(description = "Is tracing enabled") boolean isEnabled().
false;;1;2;;@ManagedAttribute(description = "Is tracing enabled") void setEnabled(boolean enabled).
false;;0;2;;@ManagedAttribute(description = "Number of maximum traced messages in total to keep in the backlog (FIFO queue)") int getBacklogSize().
false;;1;2;;@ManagedAttribute(description = "Number of maximum traced messages in total to keep in the backlog (FIFO queue)") void setBacklogSize(int backlogSize).
false;;0;2;;@ManagedAttribute(description = "Whether to remove traced message from backlog when dumping trace messages") boolean isRemoveOnDump().
false;;1;2;;@ManagedAttribute(description = "Whether to remove traced message from backlog when dumping trace messages") void setRemoveOnDump(boolean removeOnDump).
false;;1;2;;@ManagedAttribute(description = "To filter tracing by nodes (pattern)") void setTracePattern(String pattern).
false;;0;2;;@ManagedAttribute(description = "To filter tracing by nodes (pattern)") String getTracePattern().
false;;1;2;;@ManagedAttribute(description = "To filter tracing by predicate (uses simple language by default)") void setTraceFilter(String predicate).
false;;0;2;;@ManagedAttribute(description = "To filter tracing by predicate (uses simple language by default)") String getTraceFilter().
false;;0;2;;@ManagedAttribute(description = "Number of total traced messages") long getTraceCounter().
false;;0;2;;@ManagedOperation(description = "Resets the trace counter") void resetTraceCounter().
false;;0;2;;@ManagedAttribute(description = "Number of maximum chars in the message body in the trace message. Use zero or negative value to have unlimited size.") int getBodyMaxChars().
false;;1;2;;@ManagedAttribute(description = "Number of maximum chars in the message body in the trace message. Use zero or negative value to have unlimited size.") void setBodyMaxChars(int bodyMaxChars).
false;;0;2;;@ManagedAttribute(description = "Whether to include stream based message body in the trace message.") boolean isBodyIncludeStreams().
false;;1;2;;@ManagedAttribute(description = "Whether to include stream based message body in the trace message.") void setBodyIncludeStreams(boolean bodyIncludeStreams).
false;;0;2;;@ManagedAttribute(description = "Whether to include file based message body in the trace message.") boolean isBodyIncludeFiles().
false;;1;2;;@ManagedAttribute(description = "Whether to include file based message body in the trace message.") void setBodyIncludeFiles(boolean bodyIncludeFiles).
false;;1;2;;@ManagedOperation(description = "Dumps the traced messages for the given node or route") List<BacklogTracerEventMessage> dumpTracedMessages(String nodeOrRouteId).
false;;1;2;;@ManagedOperation(description = "Dumps the traced messages for the given node or route in xml format") String dumpTracedMessagesAsXml(String nodeOrRouteId).
false;;0;2;;@ManagedOperation(description = "Dumps all the traced messages") List<BacklogTracerEventMessage> dumpAllTracedMessages().
false;;0;2;;@ManagedOperation(description = "Dumps all the traced messages in xml format") String dumpAllTracedMessagesAsXml().
false;;0;2;;@ManagedOperation(description = "Clears the backlog") void clear().
