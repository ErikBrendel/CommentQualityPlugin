commented;modifiers;parameterAmount;loc;comment;code
true;;0;1;/**  * Gets the managed Camel CamelContext client api  */ ;/**  * Gets the managed Camel CamelContext client api  */ ManagedCamelContextMBean getManagedCamelContext().
true;default;1;3;/**  * Gets the managed processor client api from any of the routes which with the given id  *  * @param id id of the processor  * @return the processor or <tt>null</tt> if not found  */ ;/**  * Gets the managed processor client api from any of the routes which with the given id  *  * @param id id of the processor  * @return the processor or <tt>null</tt> if not found  */ default ManagedProcessorMBean getManagedProcessor(String id) {     return getManagedProcessor(id, ManagedProcessorMBean.class). }
true;;2;1;/**  * Gets the managed processor client api from any of the routes which with the given id  *  * @param id id of the processor  * @param type the managed processor type from the {@link org.apache.camel.api.management.mbean} package.  * @return the processor or <tt>null</tt> if not found  * @throws IllegalArgumentException if the type is not compliant  */ ;/**  * Gets the managed processor client api from any of the routes which with the given id  *  * @param id id of the processor  * @param type the managed processor type from the {@link org.apache.camel.api.management.mbean} package.  * @return the processor or <tt>null</tt> if not found  * @throws IllegalArgumentException if the type is not compliant  */ <T extends ManagedProcessorMBean> T getManagedProcessor(String id, Class<T> type).
true;default;1;3;/**  * Gets the managed route client api with the given route id  *  * @param routeId id of the route  * @return the route or <tt>null</tt> if not found  */ ;/**  * Gets the managed route client api with the given route id  *  * @param routeId id of the route  * @return the route or <tt>null</tt> if not found  */ default ManagedRouteMBean getManagedRoute(String routeId) {     return getManagedRoute(routeId, ManagedRouteMBean.class). }
true;;2;1;/**  * Gets the managed route client api with the given route id  *  * @param routeId id of the route  * @param type the managed route type from the {@link org.apache.camel.api.management.mbean} package.  * @return the route or <tt>null</tt> if not found  * @throws IllegalArgumentException if the type is not compliant  */ ;/**  * Gets the managed route client api with the given route id  *  * @param routeId id of the route  * @param type the managed route type from the {@link org.apache.camel.api.management.mbean} package.  * @return the route or <tt>null</tt> if not found  * @throws IllegalArgumentException if the type is not compliant  */ <T extends ManagedRouteMBean> T getManagedRoute(String routeId, Class<T> type).
