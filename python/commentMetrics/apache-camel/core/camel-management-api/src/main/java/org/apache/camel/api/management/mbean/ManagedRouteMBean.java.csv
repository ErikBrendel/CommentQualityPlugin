commented;modifiers;parameterAmount;loc;comment;code
false;;0;2;;@ManagedAttribute(description = "Route ID") String getRouteId().
false;;0;2;;@ManagedAttribute(description = "Route Group") String getRouteGroup().
false;;0;2;;@ManagedAttribute(description = "Route Properties") TabularData getRouteProperties().
false;;0;2;;@ManagedAttribute(description = "Route Description") String getDescription().
false;;0;2;;@ManagedAttribute(description = "Route Endpoint URI", mask = true) String getEndpointUri().
false;;0;2;;@ManagedAttribute(description = "Route State") String getState().
false;;0;2;;@ManagedAttribute(description = "Route Uptime [human readable text]") String getUptime().
false;;0;2;;@ManagedAttribute(description = "Route Uptime [milliseconds]") long getUptimeMillis().
false;;0;2;;@ManagedAttribute(description = "Camel ID") String getCamelId().
false;;0;2;;@ManagedAttribute(description = "Camel ManagementName") String getCamelManagementName().
false;;0;2;;@ManagedAttribute(description = "Tracing") Boolean getTracing().
false;;1;2;;@ManagedAttribute(description = "Tracing") void setTracing(Boolean tracing).
false;;0;2;;@ManagedAttribute(description = "Message History") Boolean getMessageHistory().
false;;0;2;;@ManagedAttribute(description = "Route Policy List") String getRoutePolicyList().
false;;0;2;;@ManagedAttribute(description = "Average load over the last minute") String getLoad01().
false;;0;2;;@ManagedAttribute(description = "Average load over the last five minutes") String getLoad05().
false;;0;2;;@ManagedAttribute(description = "Average load over the last fifteen minutes") String getLoad15().
false;;0;2;;@ManagedOperation(description = "Start route") void start() throws Exception.
false;;0;2;;@ManagedOperation(description = "Stop route") void stop() throws Exception.
false;;1;2;;@ManagedOperation(description = "Stop route (using timeout in seconds)") void stop(long timeout) throws Exception.
false;;2;2;;@ManagedOperation(description = "Stop route, abort stop after timeout (in seconds)") boolean stop(Long timeout, Boolean abortAfterTimeout) throws Exception.
true;;0;3;/**  * @deprecated will be removed in the near future. Use stop and remove instead  */ ;/**  * @deprecated will be removed in the near future. Use stop and remove instead  */ @ManagedOperation(description = "Shutdown route") @Deprecated void shutdown() throws Exception.
true;;1;3;/**  * @deprecated will be removed in the near future. Use stop and remove instead  */ ;/**  * @deprecated will be removed in the near future. Use stop and remove instead  */ @ManagedOperation(description = "Shutdown route (using timeout in seconds)") @Deprecated void shutdown(long timeout) throws Exception.
false;;0;2;;@ManagedOperation(description = "Remove route (must be stopped)") boolean remove() throws Exception.
false;;0;2;;@ManagedOperation(description = "Restarts route (1 second delay before starting)") void restart() throws Exception.
false;;1;2;;@ManagedOperation(description = "Restarts route (using delay in seconds before starting)") void restart(long delay) throws Exception.
false;;0;2;;@ManagedOperation(description = "Dumps the route as XML") String dumpRouteAsXml() throws Exception.
false;;1;2;;@ManagedOperation(description = "Dumps the route as XML") String dumpRouteAsXml(boolean resolvePlaceholders) throws Exception.
false;;1;2;;@ManagedOperation(description = "Updates the route from XML") void updateRouteFromXml(String xml) throws Exception.
false;;2;2;;@ManagedOperation(description = "Dumps the routes stats as XML") String dumpRouteStatsAsXml(boolean fullStats, boolean includeProcessors) throws Exception.
false;;1;2;;@ManagedOperation(description = "Reset counters") void reset(boolean includeProcessors) throws Exception.
false;;0;2;;@ManagedOperation(description = "Returns the JSON representation of all the static and dynamic endpoints defined in this route") String createRouteStaticEndpointJson().
false;;1;2;;@ManagedOperation(description = "Returns the JSON representation of all the static endpoints (and possible dynamic) defined in this route") String createRouteStaticEndpointJson(boolean includeDynamic).
false;;0;2;;@ManagedAttribute(description = "Oldest inflight exchange duration") Long getOldestInflightDuration().
false;;0;2;;@ManagedAttribute(description = "Oldest inflight exchange id") String getOldestInflightExchangeId().
false;;0;3;;@Experimental @ManagedAttribute(description = "Route controller") Boolean getHasRouteController().
false;;0;3;;@Experimental @ManagedAttribute(description = "Last error") RouteError getLastError().
