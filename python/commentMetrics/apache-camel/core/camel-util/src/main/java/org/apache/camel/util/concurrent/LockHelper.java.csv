commented;modifiers;parameterAmount;loc;comment;code
false;public,static;2;9;;public static void doWithReadLock(StampedLock lock, Runnable task) {     long stamp = lock.readLock().     try {         task.run().     } finally {         lock.unlockRead(stamp).     } }
false;public,static;2;9;;public static <R> R callWithReadLock(StampedLock lock, Callable<R> task) throws Exception {     long stamp = lock.readLock().     try {         return task.call().     } finally {         lock.unlockRead(stamp).     } }
false;public,static;2;9;;public static <T extends Throwable> void doWithReadLockT(StampedLock lock, ThrowingRunnable<T> task) throws T {     long stamp = lock.readLock().     try {         task.run().     } finally {         lock.unlockRead(stamp).     } }
false;public,static;2;9;;public static <R> R supplyWithReadLock(StampedLock lock, Supplier<R> task) {     long stamp = lock.readLock().     try {         return task.get().     } finally {         lock.unlockRead(stamp).     } }
false;public,static;2;9;;public static <R, T extends Throwable> R supplyWithReadLockT(StampedLock lock, ThrowingSupplier<R, T> task) throws T {     long stamp = lock.readLock().     try {         return task.get().     } finally {         lock.unlockRead(stamp).     } }
false;public,static;2;9;;public static void doWithWriteLock(StampedLock lock, Runnable task) {     long stamp = lock.writeLock().     try {         task.run().     } finally {         lock.unlockWrite(stamp).     } }
false;public,static;2;9;;public static <R> R callWithWriteLock(StampedLock lock, Callable<R> task) throws Exception {     long stamp = lock.writeLock().     try {         return task.call().     } finally {         lock.unlockWrite(stamp).     } }
false;public,static;2;9;;public static <R> R supplyWithWriteLock(StampedLock lock, Supplier<R> task) {     long stamp = lock.writeLock().     try {         return task.get().     } finally {         lock.unlockWrite(stamp).     } }
false;public,static;2;9;;public static <T extends Throwable> void doWithWriteLockT(StampedLock lock, ThrowingRunnable<T> task) throws T {     long stamp = lock.writeLock().     try {         task.run().     } finally {         lock.unlockWrite(stamp).     } }
false;public,static;2;9;;public static <R, T extends Throwable> R supplyWithWriteLockT(StampedLock lock, ThrowingSupplier<R, T> task) throws T {     long stamp = lock.writeLock().     try {         return task.get().     } finally {         lock.unlockWrite(stamp).     } }
