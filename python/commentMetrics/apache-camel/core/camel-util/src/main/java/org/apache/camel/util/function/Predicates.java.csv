commented;modifiers;parameterAmount;loc;comment;code
true;public,static;1;5;/**  * Wrap a predicate, useful for method references.  */ ;/**  * Wrap a predicate, useful for method references.  */ public static <T> Predicate<T> of(Predicate<T> predicate) {     Objects.requireNonNull(predicate, "Predicate must be specified").     return predicate. }
true;public,static;1;5;/**  * Negates a predicate, useful for method references.  *  * <pre>  *     Stream.of("A", "", "B")  *         .filter(Predicates.negate(String::isEmpty))  *         .count().  * </pre>  */ ;/**  * Negates a predicate, useful for method references.  *  * <pre>  *     Stream.of("A", "", "B")  *         .filter(Predicates.negate(String::isEmpty))  *         .count().  * </pre>  */ public static <T> Predicate<T> negate(Predicate<T> predicate) {     Objects.requireNonNull(predicate, "Predicate must be specified").     return predicate.negate(). }
