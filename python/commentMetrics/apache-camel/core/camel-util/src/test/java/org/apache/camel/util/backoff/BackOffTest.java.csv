commented;modifiers;parameterAmount;loc;comment;code
false;public;0;15;;@Test public void testSimpleBackOff() {     final BackOff backOff = BackOff.builder().build().     final BackOffTimerTask context = new BackOffTimerTask(backOff, null, t -> true).     long delay.     for (int i = 1. i <= 5. i++) {         delay = context.next().         Assert.assertEquals(i, context.getCurrentAttempts()).         Assert.assertEquals(BackOff.DEFAULT_DELAY.toMillis(), delay).         Assert.assertEquals(BackOff.DEFAULT_DELAY.toMillis(), context.getCurrentDelay()).         Assert.assertEquals(BackOff.DEFAULT_DELAY.toMillis() * i, context.getCurrentElapsedTime()).     } }
false;public;0;20;;@Test public void testBackOffWithMultiplier() {     final BackOff backOff = BackOff.builder().multiplier(1.5).build().     final BackOffTimerTask context = new BackOffTimerTask(backOff, null, t -> true).     long delay = BackOff.DEFAULT_DELAY.toMillis().     long oldDelay.     long elapsed = 0.     for (int i = 1. i <= 5. i++) {         oldDelay = delay.         delay = context.next().         elapsed += delay.         Assert.assertEquals(i, context.getCurrentAttempts()).         Assert.assertEquals((long) (oldDelay * 1.5), delay).         Assert.assertEquals((long) (oldDelay * 1.5), context.getCurrentDelay()).         Assert.assertEquals(elapsed, context.getCurrentElapsedTime(), 0).     } }
false;public;0;19;;@Test public void testBackOffWithMaxAttempts() {     final BackOff backOff = BackOff.builder().maxAttempts(5L).build().     final BackOffTimerTask context = new BackOffTimerTask(backOff, null, t -> true).     long delay.     for (int i = 1. i <= 5. i++) {         delay = context.next().         Assert.assertEquals(i, context.getCurrentAttempts()).         Assert.assertEquals(BackOff.DEFAULT_DELAY.toMillis(), delay).         Assert.assertEquals(BackOff.DEFAULT_DELAY.toMillis(), context.getCurrentDelay()).         Assert.assertEquals(BackOff.DEFAULT_DELAY.toMillis() * i, context.getCurrentElapsedTime()).     }     delay = context.next().     Assert.assertEquals(6, context.getCurrentAttempts()).     Assert.assertEquals(BackOff.NEVER, delay). }
false;public;0;19;;@Test public void testBackOffWithMaxTime() {     final BackOff backOff = BackOff.builder().maxElapsedTime(9, TimeUnit.SECONDS).build().     final BackOffTimerTask context = new BackOffTimerTask(backOff, null, t -> true).     long delay.     for (int i = 1. i <= 5. i++) {         delay = context.next().         Assert.assertEquals(i, context.getCurrentAttempts()).         Assert.assertEquals(BackOff.DEFAULT_DELAY.toMillis(), delay).         Assert.assertEquals(BackOff.DEFAULT_DELAY.toMillis(), context.getCurrentDelay()).         Assert.assertEquals(BackOff.DEFAULT_DELAY.toMillis() * i, context.getCurrentElapsedTime()).     }     delay = context.next().     Assert.assertEquals(6, context.getCurrentAttempts()).     Assert.assertEquals(BackOff.NEVER, delay). }
