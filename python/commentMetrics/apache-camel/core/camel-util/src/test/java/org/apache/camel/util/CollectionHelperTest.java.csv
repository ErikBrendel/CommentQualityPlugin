commented;modifiers;parameterAmount;loc;comment;code
false;public;0;8;;@Test public void testCollectionAsCommaDelimitedString() {     assertEquals("Claus,Willem,Jonathan", CollectionHelper.collectionAsCommaDelimitedString(Arrays.asList("Claus", "Willem", "Jonathan"))).     assertEquals("", CollectionHelper.collectionAsCommaDelimitedString(null)).     assertEquals("Claus", CollectionHelper.collectionAsCommaDelimitedString(Collections.singletonList("Claus"))). }
false;public;0;11;;@Test public void testSize() {     Map<String, Object> map = new HashMap<>().     map.put("foo", 123).     map.put("bar", 456).     assertEquals(2, CollectionHelper.size(map).intValue()).     String[] array = new String[] { "Claus", "Willem" }.     assertEquals(2, CollectionHelper.size(array).intValue()). }
false;public;0;20;;@Test public void testAppendValue() {     Map<String, Object> map = new HashMap<>().     CollectionHelper.appendValue(map, "foo", 123).     assertEquals(1, map.size()).     CollectionHelper.appendValue(map, "foo", 456).     assertEquals(1, map.size()).     CollectionHelper.appendValue(map, "bar", 789).     assertEquals(2, map.size()).     List<?> values = (List<?>) map.get("foo").     assertEquals(2, values.size()).     assertEquals(123, values.get(0)).     assertEquals(456, values.get(1)).     Integer value = (Integer) map.get("bar").     assertEquals(789, value.intValue()). }
false;public;0;8;;@Test public void testCreateSetContaining() throws Exception {     Set<String> set = CollectionHelper.createSetContaining("foo", "bar", "baz").     assertEquals(3, set.size()).     assertTrue(set.contains("foo")).     assertTrue(set.contains("bar")).     assertTrue(set.contains("baz")). }
false;public;0;19;;@Test public void testflattenKeysInMap() throws Exception {     Map<String, Object> root = new LinkedHashMap<>().     Map<String, Object> api = new LinkedHashMap<>().     Map<String, Object> contact = new LinkedHashMap<>().     contact.put("organization", "Apache Software Foundation").     api.put("version", "1.0.0").     api.put("title", "My cool API").     api.put("contact", contact).     root.put("api", api).     root.put("cors", true).     Map<String, Object> flattern = CollectionHelper.flattenKeysInMap(root, ".").     assertEquals(4, flattern.size()).     assertEquals(true, flattern.get("cors")).     assertEquals("1.0.0", flattern.get("api.version")).     assertEquals("My cool API", flattern.get("api.title")).     assertEquals("Apache Software Foundation", flattern.get("api.contact.organization")). }
