commented;modifiers;parameterAmount;loc;comment;code
false;public,static;0;5;;@BeforeClass public static void createCamelCatalog() {     catalog = new DefaultCamelCatalog().     catalog.setRuntimeProvider(new KarafRuntimeProvider()). }
false;public;0;9;;@Test public void testGetVersion() throws Exception {     String version = catalog.getCatalogVersion().     assertNotNull(version).     String loaded = catalog.getLoadedVersion().     assertNotNull(loaded).     assertEquals(version, loaded). }
false;public;0;4;;@Test public void testProviderName() throws Exception {     assertEquals("karaf", catalog.getRuntimeProvider().getProviderName()). }
false;public;0;12;;@Test public void testFindComponentNames() throws Exception {     List<String> names = catalog.findComponentNames().     assertNotNull(names).     assertFalse(names.isEmpty()).     assertTrue(names.contains("ftp")).     assertTrue(names.contains("paxlogging")).     // camel-ejb does not work in Karaf     assertFalse(names.contains("ejb")). }
false;public;0;11;;@Test public void testFindDataFormatNames() throws Exception {     List<String> names = catalog.findDataFormatNames().     assertNotNull(names).     assertFalse(names.isEmpty()).     assertTrue(names.contains("bindy-csv")).     assertTrue(names.contains("zip")).     assertTrue(names.contains("zipfile")). }
false;public;0;11;;@Test public void testFindLanguageNames() throws Exception {     List<String> names = catalog.findLanguageNames().     assertNotNull(names).     assertFalse(names.isEmpty()).     assertTrue(names.contains("simple")).     assertTrue(names.contains("spel")).     assertTrue(names.contains("xpath")). }
false;public;0;14;;@Test public void testFindOtherNames() throws Exception {     List<String> names = catalog.findOtherNames().     assertNotNull(names).     assertFalse(names.isEmpty()).     assertTrue(names.contains("blueprint")).     assertTrue(names.contains("hystrix")).     assertTrue(names.contains("swagger-java")).     assertTrue(names.contains("zipkin")).     assertFalse(names.contains("spring-boot")). }
