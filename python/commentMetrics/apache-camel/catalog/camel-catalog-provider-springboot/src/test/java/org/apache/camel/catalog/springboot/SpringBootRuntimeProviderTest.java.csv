commented;modifiers;parameterAmount;loc;comment;code
false;public,static;0;5;;@BeforeClass public static void createCamelCatalog() {     catalog = new DefaultCamelCatalog().     catalog.setRuntimeProvider(new SpringBootRuntimeProvider()). }
false;public;0;9;;@Test public void testGetVersion() throws Exception {     String version = catalog.getCatalogVersion().     assertNotNull(version).     String loaded = catalog.getLoadedVersion().     assertNotNull(loaded).     assertEquals(version, loaded). }
false;public;0;4;;@Test public void testProviderName() throws Exception {     assertEquals("springboot", catalog.getRuntimeProvider().getProviderName()). }
false;public;0;15;;@Test public void testFindComponentNames() throws Exception {     List<String> names = catalog.findComponentNames().     assertNotNull(names).     assertFalse(names.isEmpty()).     assertTrue(names.contains("file")).     assertTrue(names.contains("ftp")).     assertTrue(names.contains("jms")).     // camel-ejb does not work in spring-boot     assertFalse(names.contains("ejb")).     // camel-pac-logging does not work in spring-boot     assertFalse(names.contains("paxlogging")). }
false;public;0;11;;@Test public void testFindDataFormatNames() throws Exception {     List<String> names = catalog.findDataFormatNames().     assertNotNull(names).     assertFalse(names.isEmpty()).     assertTrue(names.contains("bindy-csv")).     assertTrue(names.contains("zip")).     assertTrue(names.contains("zipfile")). }
false;public;0;11;;@Test public void testFindLanguageNames() throws Exception {     List<String> names = catalog.findLanguageNames().     assertNotNull(names).     assertFalse(names.isEmpty()).     assertTrue(names.contains("simple")).     assertTrue(names.contains("spel")).     assertTrue(names.contains("xpath")). }
false;public;0;13;;@Test public void testFindOtherNames() throws Exception {     List<String> names = catalog.findOtherNames().     assertNotNull(names).     assertFalse(names.isEmpty()).     assertTrue(names.contains("hystrix")).     assertTrue(names.contains("spring-boot")).     assertTrue(names.contains("zipkin")).     assertFalse(names.contains("blueprint")). }
false;public;0;7;;@Test public void testComponentArtifactId() throws Exception {     String json = catalog.componentJSonSchema("ftp").     assertNotNull(json).     assertTrue(json.contains("camel-ftp-starter")). }
false;public;0;7;;@Test public void testDataFormatArtifactId() throws Exception {     String json = catalog.dataFormatJSonSchema("bindy-csv").     assertNotNull(json).     assertTrue(json.contains("camel-bindy-starter")). }
false;public;0;7;;@Test public void testLanguageArtifactId() throws Exception {     String json = catalog.languageJSonSchema("spel").     assertNotNull(json).     assertTrue(json.contains("camel-spring-starter")). }
false;public;0;7;;@Test public void testOtherArtifactId() throws Exception {     String json = catalog.otherJSonSchema("zipkin").     assertNotNull(json).     assertTrue(json.contains("camel-zipkin-starter")). }
