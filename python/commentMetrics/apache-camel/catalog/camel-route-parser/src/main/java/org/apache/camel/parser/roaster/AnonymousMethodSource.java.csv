commented;modifiers;parameterAmount;loc;comment;code
false;public;1;4;;@Override public MethodSource<JavaClassSource> setDefault(boolean b) {     return null. }
false;public;1;4;;@Override public MethodSource<JavaClassSource> setSynchronized(boolean b) {     return null. }
false;public;1;4;;@Override public MethodSource<JavaClassSource> setNative(boolean b) {     return null. }
false;public;1;4;;@Override public MethodSource<JavaClassSource> setReturnType(Class<?> aClass) {     return null. }
false;public;1;4;;@Override public MethodSource<JavaClassSource> setReturnType(String s) {     return null. }
false;public;1;4;;@Override public MethodSource<JavaClassSource> setReturnType(JavaType<?> javaType) {     return null. }
false;public;0;4;;@Override public MethodSource<JavaClassSource> setReturnTypeVoid() {     return null. }
false;public;1;4;;@Override public MethodSource<JavaClassSource> setBody(String s) {     return null. }
false;public;1;4;;@Override public MethodSource<JavaClassSource> setConstructor(boolean b) {     return null. }
false;public;1;4;;@Override public MethodSource<JavaClassSource> setParameters(String s) {     return null. }
false;public;1;4;;@Override public MethodSource<JavaClassSource> addThrows(String s) {     return null. }
false;public;1;4;;@Override public MethodSource<JavaClassSource> addThrows(Class<? extends Exception> aClass) {     return null. }
false;public;1;4;;@Override public MethodSource<JavaClassSource> removeThrows(String s) {     return null. }
false;public;1;4;;@Override public MethodSource<JavaClassSource> removeThrows(Class<? extends Exception> aClass) {     return null. }
false;public;0;4;;@Override public boolean isSynchronized() {     return false. }
false;public;0;4;;@Override public boolean isNative() {     return false. }
false;public;0;4;;@Override public String getBody() {     return null. }
false;public;0;4;;@Override public boolean isConstructor() {     return false. }
false;public;0;4;;@Override public Type<JavaClassSource> getReturnType() {     return null. }
false;public;0;4;;@Override public boolean isReturnTypeVoid() {     return false. }
false;public;0;4;;@Override public List<ParameterSource<JavaClassSource>> getParameters() {     return null. }
false;public;0;4;;@Override public String toSignature() {     return null. }
false;public;0;4;;@Override public List<String> getThrownExceptions() {     return null. }
false;public;0;4;;@Override public boolean isDefault() {     return false. }
false;public;2;4;;@Override public ParameterSource<JavaClassSource> addParameter(Class<?> aClass, String s) {     return null. }
false;public;2;4;;@Override public ParameterSource<JavaClassSource> addParameter(String s, String s1) {     return null. }
false;public;2;4;;@Override public ParameterSource<JavaClassSource> addParameter(JavaType<?> javaType, String s) {     return null. }
false;public;0;3;;@Override public void removeAllAnnotations() { }
false;public;1;4;;@Override public MethodSource<JavaClassSource> removeParameter(ParameterSource<JavaClassSource> parameterSource) {     return null. }
false;public;2;4;;@Override public MethodSource<JavaClassSource> removeParameter(Class<?> aClass, String s) {     return null. }
false;public;2;4;;@Override public MethodSource<JavaClassSource> removeParameter(String s, String s1) {     return null. }
false;public;2;4;;@Override public MethodSource<JavaClassSource> removeParameter(JavaType<?> javaType, String s) {     return null. }
false;public;1;4;;@Override public MethodSource<JavaClassSource> setAbstract(boolean b) {     return null. }
false;public;0;4;;@Override public List<AnnotationSource<JavaClassSource>> getAnnotations() {     return null. }
false;public;1;4;;@Override public boolean hasAnnotation(Class<? extends Annotation> aClass) {     return false. }
false;public;1;4;;@Override public boolean hasAnnotation(String s) {     return false. }
false;public;1;4;;@Override public AnnotationSource<JavaClassSource> getAnnotation(Class<? extends Annotation> aClass) {     return null. }
false;public;1;4;;@Override public AnnotationSource<JavaClassSource> getAnnotation(String s) {     return null. }
false;public;0;4;;@Override public AnnotationSource<JavaClassSource> addAnnotation() {     return null. }
false;public;1;4;;@Override public AnnotationSource<JavaClassSource> addAnnotation(Class<? extends Annotation> aClass) {     return null. }
false;public;1;4;;@Override public AnnotationSource<JavaClassSource> addAnnotation(String s) {     return null. }
false;public;1;4;;@Override public MethodSource<JavaClassSource> removeAnnotation(org.jboss.forge.roaster.model.Annotation<JavaClassSource> annotation) {     return null. }
false;public;0;4;;@Override public List<TypeVariableSource<JavaClassSource>> getTypeVariables() {     return null. }
false;public;1;4;;@Override public TypeVariableSource<JavaClassSource> getTypeVariable(String s) {     return null. }
false;public;0;4;;@Override public TypeVariableSource<JavaClassSource> addTypeVariable() {     return null. }
false;public;1;4;;@Override public TypeVariableSource<JavaClassSource> addTypeVariable(String s) {     return null. }
false;public;1;4;;@Override public MethodSource<JavaClassSource> removeTypeVariable(String s) {     return null. }
false;public;1;4;;@Override public MethodSource<JavaClassSource> removeTypeVariable(TypeVariable<?> typeVariable) {     return null. }
false;public;0;4;;@Override public boolean hasJavaDoc() {     return false. }
false;public;0;4;;@Override public boolean isAbstract() {     return false. }
false;public;1;4;;@Override public MethodSource<JavaClassSource> setFinal(boolean b) {     return null. }
false;public;0;4;;@Override public boolean isFinal() {     return false. }
false;public;0;4;;@Override public Object getInternal() {     return internal. }
false;public;0;4;;@Override public JavaDocSource<MethodSource<JavaClassSource>> getJavaDoc() {     return null. }
false;public;0;4;;@Override public MethodSource<JavaClassSource> removeJavaDoc() {     return null. }
false;public;1;4;;@Override public MethodSource<JavaClassSource> setName(String s) {     return null. }
false;public;0;4;;@Override public String getName() {     return null. }
false;public;0;4;;@Override public JavaClassSource getOrigin() {     return origin. }
false;public;1;4;;@Override public MethodSource<JavaClassSource> setStatic(boolean b) {     return null. }
false;public;0;4;;@Override public boolean isStatic() {     return false. }
false;public;0;4;;@Override public MethodSource<JavaClassSource> setPackagePrivate() {     return null. }
false;public;0;4;;@Override public MethodSource<JavaClassSource> setPublic() {     return null. }
false;public;0;4;;@Override public MethodSource<JavaClassSource> setPrivate() {     return null. }
false;public;0;4;;@Override public MethodSource<JavaClassSource> setProtected() {     return null. }
false;public;1;4;;@Override public MethodSource<JavaClassSource> setVisibility(Visibility visibility) {     return null. }
false;public;0;4;;@Override public boolean isPackagePrivate() {     return false. }
false;public;0;4;;@Override public boolean isPublic() {     return false. }
false;public;0;4;;@Override public boolean isPrivate() {     return false. }
false;public;0;4;;@Override public boolean isProtected() {     return false. }
false;public;0;4;;@Override public Visibility getVisibility() {     return null. }
false;public;0;4;;@Override public int getColumnNumber() {     return 0. }
false;public;0;4;;@Override public int getStartPosition() {     return 0. }
false;public;0;4;;@Override public int getEndPosition() {     return 0. }
false;public;0;4;;@Override public int getLineNumber() {     return 0. }
false;public;1;4;;@Override public boolean hasTypeVariable(String arg0) {     return false. }
false;public;1;4;;@Override public MethodSource<JavaClassSource> setReturnType(Type<?> arg0) {     return null. }
