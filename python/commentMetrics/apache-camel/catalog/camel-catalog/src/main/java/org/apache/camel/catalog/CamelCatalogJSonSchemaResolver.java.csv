commented;modifiers;parameterAmount;loc;comment;code
false;public;1;19;;@Override public String getComponentJSonSchema(String name) {     final String file = camelCatalog.getRuntimeProvider().getComponentJSonSchemaDirectory() + "/" + name + ".json".     final String fromVersionManager = loadResourceFromVersionManager(file).     if (fromVersionManager != null) {         return fromVersionManager.     }     // its maybe a third party so try to see if we have the json schema already     final String answer = extraComponentsJSonSchema.get(name).     if (answer != null) {         return answer.     }     // or if we can load it from the classpath     final String className = extraComponents.get(name).     return loadFromClasspath(className, name). }
false;public;1;19;;@Override public String getDataFormatJSonSchema(String name) {     final String file = camelCatalog.getRuntimeProvider().getDataFormatJSonSchemaDirectory() + "/" + name + ".json".     final String fromVersionManager = loadResourceFromVersionManager(file).     if (fromVersionManager != null) {         return fromVersionManager.     }     // its maybe a third party so try to see if we have the json schema already     final String schema = extraDataFormatsJSonSchema.get(name).     if (schema != null) {         return schema.     }     // or if we can load it from the classpath     final String className = extraDataFormats.get(name).     return loadFromClasspath(className, name). }
false;public;1;11;;@Override public String getLanguageJSonSchema(String name) {     // if we try to look method then its in the bean.json file     if ("method".equals(name)) {         name = "bean".     }     final String file = camelCatalog.getRuntimeProvider().getLanguageJSonSchemaDirectory() + "/" + name + ".json".     return loadResourceFromVersionManager(file). }
false;public;1;6;;@Override public String getModelJSonSchema(String name) {     final String file = MODEL_DIR + "/" + name + ".json".     return loadResourceFromVersionManager(file). }
false;public;1;6;;@Override public String getOtherJSonSchema(String name) {     final String file = camelCatalog.getRuntimeProvider().getOtherJSonSchemaDirectory() + "/" + name + ".json".     return loadResourceFromVersionManager(file). }
false;;2;11;;String loadFromClasspath(final String className, final String fileName) {     if (className != null) {         String packageName = className.substring(0, className.lastIndexOf('.')).         packageName = packageName.replace('.', '/').         final String path = packageName + "/" + fileName + ".json".         return loadResourceFromVersionManager(path).     }     return null. }
false;;1;11;;String loadResourceFromVersionManager(final String file) {     try (final InputStream is = camelCatalog.getVersionManager().getResourceAsStream(file)) {         if (is != null) {             return CatalogHelper.loadText(is).         }     } catch (IOException e) {     // ignore     }     return null. }
