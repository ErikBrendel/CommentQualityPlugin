commented;modifiers;parameterAmount;loc;comment;code
false;public;0;15;;@Test public void testExecute() throws IOException, MojoFailureException, MojoExecutionException {     // delete target file to begin     final File outFile = new File(OUT_DIR, PACKAGE_PATH + "VelocityContextApiMethod.java").     if (outFile.exists()) {         outFile.delete().     }     final JavadocApiMethodGeneratorMojo mojo = createGeneratorMojo().     mojo.execute().     // check target file was generated     assertExists(outFile). }
false;protected;0;18;;@Override protected JavadocApiMethodGeneratorMojo createGeneratorMojo() {     final JavadocApiMethodGeneratorMojo mojo = new JavadocApiMethodGeneratorMojo().     configureSourceGeneratorMojo(mojo).     // use VelocityEngine javadoc     mojo.proxyClass = VelocityContext.class.getCanonicalName().     Substitution substitution = new Substitution(".*", "key", "java.lang.Object", "applicationKey", false).     mojo.substitutions = new Substitution[] { substitution }.     mojo.extraOptions = new ExtraOption[1].     mojo.extraOptions[0] = new ExtraOption("java.util.Map<String, String>", "extraMap").     mojo.excludePackages = JavadocApiMethodGeneratorMojo.DEFAULT_EXCLUDE_PACKAGES.     mojo.includeMethods = ".+".     mojo.excludeMethods = "clone|Current|internal|icache".     return mojo. }
