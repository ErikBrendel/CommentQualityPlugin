commented;modifiers;parameterAmount;loc;comment;code
false;static;0;14;;static Stream<Arguments> getClassShortNameTypeVarations() {     return Stream.of(arguments("String", "String"), arguments("String", "java.lang.String"), arguments("List", "List<String>"), arguments("List", "java.util.List<String>"), arguments("List", "List<java.lang.String>"), arguments("List", "java.util.List.List<org.apache.camel.Exchange>"), arguments("List", "java.util.List<Map<String,Integer>>"), arguments("List", "java.util.List<Map<java.lang.String,Integer>>"), arguments("List", "java.util.List<Map<String,java.lang.Integer>>"), arguments("List", "java.util.List<Map<java.lang.String,java.lang.Integer>>"), arguments("List", "java.util.List<java.util.Map<java.lang.String,java.lang.Integer>>")). }
false;public;2;5;;@ParameterizedTest @MethodSource("getClassShortNameTypeVarations") public void getClassShortName(String expectedBaseClassName, String className) {     Assertions.assertEquals(expectedBaseClassName, StringHelper.getClassShortName(className)). }
