commented;modifiers;parameterAmount;loc;comment;code
false;public;0;5;;public Field setPublic() {     isPublic = true.     isPrivate = false.     return this. }
false;public;0;5;;public Field setPrivate() {     isPublic = false.     isPrivate = true.     return this. }
false;public;0;3;;public String getName() {     return null. }
false;public;1;4;;public Field setName(String name) {     this.name = name.     return this. }
false;public;0;3;;public GenericType getType() {     return type. }
false;public;1;3;;public Field setType(Class<?> type) {     return setType(new GenericType(type)). }
false;public;1;4;;public Field setType(GenericType type) {     this.type = type.     return this. }
false;public;1;4;;public Field setStatic(boolean isStatic) {     this.isStatic = isStatic.     return this. }
false;public;1;4;;public Field setFinal(boolean isFinal) {     this.isFinal = isFinal.     return this. }
false;public;0;3;;public String getLiteralInitializer() {     return literalInit. }
false;public;1;4;;public Field setLiteralInitializer(String init) {     this.literalInit = init.     return this. }
false;public;1;4;;public Field setStringInitializer(String init) {     this.literalInit = Annotation.quote(init).     return this. }
false;public;1;5;;public Annotation addAnnotation(Class<? extends java.lang.annotation.Annotation> clazz) {     Annotation ann = new Annotation(clazz).     this.annotations.add(ann).     return ann. }
false;public;1;3;;public boolean hasAnnotation(Class<? extends java.lang.annotation.Annotation> clazz) {     return annotations.stream().anyMatch(a -> Objects.equals(a.getType(), clazz)). }
false;public;1;3;;public Annotation getAnnotation(Class<? extends java.lang.annotation.Annotation> clazz) {     return annotations.stream().filter(a -> Objects.equals(a.getType(), clazz)).findAny().orElse(null). }
false;public;0;3;;public Javadoc getJavaDoc() {     return javadoc. }
