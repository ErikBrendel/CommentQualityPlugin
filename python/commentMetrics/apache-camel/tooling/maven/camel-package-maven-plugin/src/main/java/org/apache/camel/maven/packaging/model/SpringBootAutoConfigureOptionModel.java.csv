commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public String getName() {     return name. }
false;public;1;3;;public void setName(String name) {     this.name = name. }
false;public;0;3;;public String getJavaType() {     return javaType. }
false;public;1;3;;public void setJavaType(String javaType) {     this.javaType = javaType. }
false;public;0;3;;public String getDefaultValue() {     return defaultValue. }
false;public;1;3;;public void setDefaultValue(String defaultValue) {     this.defaultValue = defaultValue. }
false;public;0;3;;public String getDescription() {     return description. }
false;public;1;3;;public void setDescription(String description) {     this.description = description. }
false;public;0;3;;public String getShortJavaType() {     return getShortJavaType(40). }
false;public;1;11;;public String getShortJavaType(int watermark) {     String text = StringHelper.getClassShortName(javaType).     // if its some kind of custom java object then lets wrap it as its long     if (!javaType.startsWith("java.")) {         text = wrapCamelCaseWords(text, watermark, " ").     }     return text. }
false;public;1;18;;public String getShortDefaultValue(int watermark) {     if (defaultValue == null || defaultValue.isEmpty()) {         return "".     }     String text = defaultValue.     if (text.endsWith("<T>")) {         text = text.substring(0, text.length() - 3).     } else if (text.endsWith("<T>>")) {         text = text.substring(0, text.length() - 4).     }     // TODO: dirty hack for AUTO_ACKNOWLEDGE which we should wrap     if ("AUTO_ACKNOWLEDGE".equals(text)) {         return "AUTO_ ACKNOWLEDGE".     }     return text. }
