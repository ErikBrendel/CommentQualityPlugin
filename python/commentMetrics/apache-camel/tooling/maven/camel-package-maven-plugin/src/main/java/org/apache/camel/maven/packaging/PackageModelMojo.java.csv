# id;timestamp;commentText;codeText;commentWords;codeWords
PackageModelMojo -> public void execute() throws MojoExecutionException, MojoFailureException;1420035021;Execute goal.__@throws org.apache.maven.plugin.MojoExecutionException execution of the main class or one of the_threads it generated failed._@throws org.apache.maven.plugin.MojoFailureException something bad happened...;public void execute() throws MojoExecutionException, MojoFailureException {_        File camelMetaDir = new File(outDir, "META-INF/services/org/apache/camel/")___        Set<File> jsonFiles = new TreeSet<File>()___        _        if (buildDir != null && buildDir.isDirectory()) {_            File target = new File(buildDir, "classes/org/apache/camel/model")__            PackageHelper.findJsonFiles(target, jsonFiles, new PackageHelper.CamelComponentsModelFilter())__        }__        File outFile = new File(camelMetaDir, "model.properties")__        try {_            camelMetaDir.mkdirs()___            Properties properties = new Properties()__            properties.store(new FileWriter(outFile), "Generated by camel-package-maven-plugin")___            List<String> models = new ArrayList<String>()__            _            for (File file : jsonFiles) {_                String name = file.getName()__                if (name.endsWith(".json")) {_                    _                    String modelName = name.substring(0, name.length() - 5)__                    models.add(modelName)__                }_            }_            Collections.sort(models)___            FileOutputStream fos = new FileOutputStream(outFile, true)__            for (String name : models) {_                fos.write(name.getBytes())__                fos.write("\n".getBytes())__            }_            fos.close()___            getLog().info("Generated " + outFile + " containing " + models.size() + " Camel models")___            if (projectHelper != null) {_                List<String> includes = new ArrayList<String>()__                includes.add("**/model.properties")__                projectHelper.addResource(this.project, outDir.getPath(), includes, new ArrayList<String>())__                projectHelper.attachArtifact(this.project, "properties", "camelModel", outFile)__            }__        } catch (IOException e) {_            throw new MojoFailureException("Error writing to file " + outFile)__        }__    };execute,goal,throws,org,apache,maven,plugin,mojo,execution,exception,execution,of,the,main,class,or,one,of,the,threads,it,generated,failed,throws,org,apache,maven,plugin,mojo,failure,exception,something,bad,happened;public,void,execute,throws,mojo,execution,exception,mojo,failure,exception,file,camel,meta,dir,new,file,out,dir,meta,inf,services,org,apache,camel,set,file,json,files,new,tree,set,file,if,build,dir,null,build,dir,is,directory,file,target,new,file,build,dir,classes,org,apache,camel,model,package,helper,find,json,files,target,json,files,new,package,helper,camel,components,model,filter,file,out,file,new,file,camel,meta,dir,model,properties,try,camel,meta,dir,mkdirs,properties,properties,new,properties,properties,store,new,file,writer,out,file,generated,by,camel,package,maven,plugin,list,string,models,new,array,list,string,for,file,file,json,files,string,name,file,get,name,if,name,ends,with,json,string,model,name,name,substring,0,name,length,5,models,add,model,name,collections,sort,models,file,output,stream,fos,new,file,output,stream,out,file,true,for,string,name,models,fos,write,name,get,bytes,fos,write,n,get,bytes,fos,close,get,log,info,generated,out,file,containing,models,size,camel,models,if,project,helper,null,list,string,includes,new,array,list,string,includes,add,model,properties,project,helper,add,resource,this,project,out,dir,get,path,includes,new,array,list,string,project,helper,attach,artifact,this,project,properties,camel,model,out,file,catch,ioexception,e,throw,new,mojo,failure,exception,error,writing,to,file,out,file
PackageModelMojo -> public void execute() throws MojoExecutionException, MojoFailureException;1424297207;Execute goal.__@throws org.apache.maven.plugin.MojoExecutionException execution of the main class or one of the_threads it generated failed._@throws org.apache.maven.plugin.MojoFailureException something bad happened...;public void execute() throws MojoExecutionException, MojoFailureException {_        File camelMetaDir = new File(outDir, "META-INF/services/org/apache/camel/")___        Set<File> jsonFiles = new TreeSet<File>()___        _        if (buildDir != null && buildDir.isDirectory()) {_            File target = new File(buildDir, "classes/org/apache/camel/model")__            PackageHelper.findJsonFiles(target, jsonFiles, new PackageHelper.CamelComponentsModelFilter())__        }__        File outFile = new File(camelMetaDir, "model.properties")__        try {_            camelMetaDir.mkdirs()___            Properties properties = new Properties()__            properties.store(new FileWriter(outFile), "Generated by camel-package-maven-plugin")___            List<String> models = new ArrayList<String>()__            _            for (File file : jsonFiles) {_                String name = file.getName()__                if (name.endsWith(".json")) {_                    _                    String modelName = name.substring(0, name.length() - 5)__                    models.add(modelName)__                }_            }_            Collections.sort(models)___            FileOutputStream fos = new FileOutputStream(outFile, true)__            for (String name : models) {_                fos.write(name.getBytes())__                fos.write("\n".getBytes())__            }_            fos.close()___            getLog().info("Generated " + outFile + " containing " + models.size() + " Camel models")___            if (projectHelper != null) {_                List<String> includes = new ArrayList<String>()__                includes.add("**/model.properties")__                projectHelper.addResource(this.project, outDir.getPath(), includes, new ArrayList<String>())__                projectHelper.attachArtifact(this.project, "properties", "camelModel", outFile)__            }__        } catch (IOException e) {_            throw new MojoFailureException("Error writing to file " + outFile)__        }__    };execute,goal,throws,org,apache,maven,plugin,mojo,execution,exception,execution,of,the,main,class,or,one,of,the,threads,it,generated,failed,throws,org,apache,maven,plugin,mojo,failure,exception,something,bad,happened;public,void,execute,throws,mojo,execution,exception,mojo,failure,exception,file,camel,meta,dir,new,file,out,dir,meta,inf,services,org,apache,camel,set,file,json,files,new,tree,set,file,if,build,dir,null,build,dir,is,directory,file,target,new,file,build,dir,classes,org,apache,camel,model,package,helper,find,json,files,target,json,files,new,package,helper,camel,components,model,filter,file,out,file,new,file,camel,meta,dir,model,properties,try,camel,meta,dir,mkdirs,properties,properties,new,properties,properties,store,new,file,writer,out,file,generated,by,camel,package,maven,plugin,list,string,models,new,array,list,string,for,file,file,json,files,string,name,file,get,name,if,name,ends,with,json,string,model,name,name,substring,0,name,length,5,models,add,model,name,collections,sort,models,file,output,stream,fos,new,file,output,stream,out,file,true,for,string,name,models,fos,write,name,get,bytes,fos,write,n,get,bytes,fos,close,get,log,info,generated,out,file,containing,models,size,camel,models,if,project,helper,null,list,string,includes,new,array,list,string,includes,add,model,properties,project,helper,add,resource,this,project,out,dir,get,path,includes,new,array,list,string,project,helper,attach,artifact,this,project,properties,camel,model,out,file,catch,ioexception,e,throw,new,mojo,failure,exception,error,writing,to,file,out,file
PackageModelMojo -> public void execute() throws MojoExecutionException, MojoFailureException;1459673795;Execute goal.__@throws org.apache.maven.plugin.MojoExecutionException execution of the main class or one of the_threads it generated failed._@throws org.apache.maven.plugin.MojoFailureException something bad happened...;public void execute() throws MojoExecutionException, MojoFailureException {_        File camelMetaDir = new File(outDir, "META-INF/services/org/apache/camel/")___        Set<File> jsonFiles = new TreeSet<File>()___        _        if (buildDir != null && buildDir.isDirectory()) {_            File target = new File(buildDir, "classes/org/apache/camel/model")__            PackageHelper.findJsonFiles(target, jsonFiles, new PackageHelper.CamelComponentsModelFilter())__        }__        File outFile = new File(camelMetaDir, "model.properties")__        try {_            camelMetaDir.mkdirs()___            Properties properties = new Properties()__            properties.store(new FileWriter(outFile), "Generated by camel-package-maven-plugin")___            List<String> models = new ArrayList<String>()__            _            for (File file : jsonFiles) {_                String name = file.getName()__                if (name.endsWith(".json")) {_                    _                    String modelName = name.substring(0, name.length() - 5)__                    models.add(modelName)__                }_            }_            Collections.sort(models)___            FileOutputStream fos = new FileOutputStream(outFile, true)__            for (String name : models) {_                fos.write(name.getBytes())__                fos.write("\n".getBytes())__            }_            fos.close()___            getLog().info("Generated " + outFile + " containing " + models.size() + " Camel models")___        } catch (IOException e) {_            throw new MojoFailureException("Error writing to file " + outFile)__        }__    };execute,goal,throws,org,apache,maven,plugin,mojo,execution,exception,execution,of,the,main,class,or,one,of,the,threads,it,generated,failed,throws,org,apache,maven,plugin,mojo,failure,exception,something,bad,happened;public,void,execute,throws,mojo,execution,exception,mojo,failure,exception,file,camel,meta,dir,new,file,out,dir,meta,inf,services,org,apache,camel,set,file,json,files,new,tree,set,file,if,build,dir,null,build,dir,is,directory,file,target,new,file,build,dir,classes,org,apache,camel,model,package,helper,find,json,files,target,json,files,new,package,helper,camel,components,model,filter,file,out,file,new,file,camel,meta,dir,model,properties,try,camel,meta,dir,mkdirs,properties,properties,new,properties,properties,store,new,file,writer,out,file,generated,by,camel,package,maven,plugin,list,string,models,new,array,list,string,for,file,file,json,files,string,name,file,get,name,if,name,ends,with,json,string,model,name,name,substring,0,name,length,5,models,add,model,name,collections,sort,models,file,output,stream,fos,new,file,output,stream,out,file,true,for,string,name,models,fos,write,name,get,bytes,fos,write,n,get,bytes,fos,close,get,log,info,generated,out,file,containing,models,size,camel,models,catch,ioexception,e,throw,new,mojo,failure,exception,error,writing,to,file,out,file
PackageModelMojo -> public void execute() throws MojoExecutionException, MojoFailureException;1495536966;Execute goal.__@throws org.apache.maven.plugin.MojoExecutionException execution of the main class or one of the_threads it generated failed._@throws org.apache.maven.plugin.MojoFailureException something bad happened...;public void execute() throws MojoExecutionException, MojoFailureException {_        prepareModel(getLog(), project, projectHelper, outDir, buildDir, buildContext)__    };execute,goal,throws,org,apache,maven,plugin,mojo,execution,exception,execution,of,the,main,class,or,one,of,the,threads,it,generated,failed,throws,org,apache,maven,plugin,mojo,failure,exception,something,bad,happened;public,void,execute,throws,mojo,execution,exception,mojo,failure,exception,prepare,model,get,log,project,project,helper,out,dir,build,dir,build,context
PackageModelMojo -> public void execute() throws MojoExecutionException, MojoFailureException;1524063336;Execute goal.__@throws org.apache.maven.plugin.MojoExecutionException execution of the main class or one of the_threads it generated failed._@throws org.apache.maven.plugin.MojoFailureException something bad happened...;public void execute() throws MojoExecutionException, MojoFailureException {_        prepareModel(getLog(), project, projectHelper, outDir, buildDir, buildContext)__    };execute,goal,throws,org,apache,maven,plugin,mojo,execution,exception,execution,of,the,main,class,or,one,of,the,threads,it,generated,failed,throws,org,apache,maven,plugin,mojo,failure,exception,something,bad,happened;public,void,execute,throws,mojo,execution,exception,mojo,failure,exception,prepare,model,get,log,project,project,helper,out,dir,build,dir,build,context
PackageModelMojo -> public void execute() throws MojoExecutionException, MojoFailureException;1542904331;Execute goal.__@throws org.apache.maven.plugin.MojoExecutionException execution of the main class or one of the_threads it generated failed._@throws org.apache.maven.plugin.MojoFailureException something bad happened...;public void execute() throws MojoExecutionException, MojoFailureException {_        prepareModel(getLog(), project, projectHelper, outDir, buildDir, buildContext)__    };execute,goal,throws,org,apache,maven,plugin,mojo,execution,exception,execution,of,the,main,class,or,one,of,the,threads,it,generated,failed,throws,org,apache,maven,plugin,mojo,failure,exception,something,bad,happened;public,void,execute,throws,mojo,execution,exception,mojo,failure,exception,prepare,model,get,log,project,project,helper,out,dir,build,dir,build,context
PackageModelMojo -> public void execute() throws MojoExecutionException, MojoFailureException;1547240981;Execute goal.__@throws org.apache.maven.plugin.MojoExecutionException execution of the main class or one of the_threads it generated failed._@throws org.apache.maven.plugin.MojoFailureException something bad happened...;public void execute() throws MojoExecutionException, MojoFailureException {_        prepareModel(getLog(), project, projectHelper, outDir, buildDir, buildContext)__    };execute,goal,throws,org,apache,maven,plugin,mojo,execution,exception,execution,of,the,main,class,or,one,of,the,threads,it,generated,failed,throws,org,apache,maven,plugin,mojo,failure,exception,something,bad,happened;public,void,execute,throws,mojo,execution,exception,mojo,failure,exception,prepare,model,get,log,project,project,helper,out,dir,build,dir,build,context
PackageModelMojo -> public void execute() throws MojoExecutionException, MojoFailureException;1549899153;Execute goal.__@throws org.apache.maven.plugin.MojoExecutionException execution of the main class or one of the_threads it generated failed._@throws org.apache.maven.plugin.MojoFailureException something bad happened...;public void execute() throws MojoExecutionException, MojoFailureException {_        File camelMetaDir = new File(outDir, "META-INF/services/org/apache/camel/")__        camelMetaDir.mkdirs()___        Set<File> jsonFiles = new TreeSet<>()___        _        if (buildDir != null && buildDir.isDirectory()) {_            File target = new File(buildDir, "classes/org/apache/camel/model")__            PackageHelper.findJsonFiles(target, jsonFiles, new PackageHelper.CamelComponentsModelFilter())__        }__        List<String> models = new ArrayList<>()__        _        for (File file : jsonFiles) {_            String name = file.getName()__            if (name.endsWith(".json")) {_                _                String modelName = name.substring(0, name.length() - 5)__                models.add(modelName)__            }_        }_        Collections.sort(models)___        StringBuilder sb = new StringBuilder()__        sb.append("# " + GENERATED_MSG + NL)__        for (String name : models) {_            sb.append(name).append(NL)__        }__        Path outFile = camelMetaDir.toPath().resolve("model.properties")__        updateResource(outFile, sb.toString())__        getLog().info("Generated " + outFile + " containing " + models.size() + " Camel models")___        addResourceDirectory(outDir.toPath())__    };execute,goal,throws,org,apache,maven,plugin,mojo,execution,exception,execution,of,the,main,class,or,one,of,the,threads,it,generated,failed,throws,org,apache,maven,plugin,mojo,failure,exception,something,bad,happened;public,void,execute,throws,mojo,execution,exception,mojo,failure,exception,file,camel,meta,dir,new,file,out,dir,meta,inf,services,org,apache,camel,camel,meta,dir,mkdirs,set,file,json,files,new,tree,set,if,build,dir,null,build,dir,is,directory,file,target,new,file,build,dir,classes,org,apache,camel,model,package,helper,find,json,files,target,json,files,new,package,helper,camel,components,model,filter,list,string,models,new,array,list,for,file,file,json,files,string,name,file,get,name,if,name,ends,with,json,string,model,name,name,substring,0,name,length,5,models,add,model,name,collections,sort,models,string,builder,sb,new,string,builder,sb,append,nl,for,string,name,models,sb,append,name,append,nl,path,out,file,camel,meta,dir,to,path,resolve,model,properties,update,resource,out,file,sb,to,string,get,log,info,generated,out,file,containing,models,size,camel,models,add,resource,directory,out,dir,to,path
