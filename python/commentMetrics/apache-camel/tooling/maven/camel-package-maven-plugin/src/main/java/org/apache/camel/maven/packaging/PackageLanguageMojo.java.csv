# id;timestamp;commentText;codeText;commentWords;codeWords
PackageLanguageMojo -> public void execute() throws MojoExecutionException, MojoFailureException;1421246302;Execute goal.__@throws org.apache.maven.plugin.MojoExecutionException execution of the main class or one of the_threads it generated failed._@throws org.apache.maven.plugin.MojoFailureException   something bad happened...;public void execute() throws MojoExecutionException, MojoFailureException {_        File camelMetaDir = new File(outDir, "META-INF/services/org/apache/camel/")___        Map<String, String> javaTypes = new HashMap<String, String>()___        StringBuilder buffer = new StringBuilder()__        int count = 0__        for (Resource r : project.getBuild().getResources()) {_            File f = new File(r.getDirectory())__            if (!f.exists()) {_                f = new File(project.getBasedir(), r.getDirectory())__            }_            f = new File(f, "META-INF/services/org/apache/camel/language")___            if (f.exists() && f.isDirectory()) {_                File[] files = f.listFiles()__                if (files != null) {_                    for (File file : files) {_                        String name = file.getName()__                        if (name.charAt(0) != '.') {_                            count++__                            if (buffer.length() > 0) {_                                buffer.append(" ")__                            }_                            buffer.append(name)__                        }__                        _                        try {_                            String text = loadText(new FileInputStream(file))__                            Map<String, String> map = parseAsMap(text)__                            String javaType = map.get("class")__                            if (javaType != null) {_                                javaTypes.put(name, javaType)__                            }_                        } catch (IOException e) {_                            throw new MojoExecutionException("Failed to read file " + file + ". Reason: " + e, e)__                        }_                    }_                }_            }_        }__        _        _        try {_            Artifact camelCore = findCamelCoreArtifact(project)__            if (camelCore != null) {_                File core = camelCore.getFile()__                if (core != null) {_                    URL url = new URL("file", null, core.getAbsolutePath())__                    URLClassLoader loader = new URLClassLoader(new URL[]{url})__                    for (Map.Entry<String, String> entry : javaTypes.entrySet()) {_                        String name = entry.getKey()__                        String javaType = entry.getValue()__                        String modelName = asModelName(name)___                        InputStream is = loader.getResourceAsStream("org/apache/camel/model/language/" + modelName + ".json")__                        if (is == null) {_                            _                            is = new FileInputStream(new File(core, "org/apache/camel/model/language/" + modelName + ".json"))__                        }_                        String json = loadText(is)__                        if (json != null) {_                            LanguageModel languageModel = new LanguageModel()__                            languageModel.setName(name)__                            languageModel.setModelName(modelName)__                            languageModel.setLabel("")__                            languageModel.setDescription(project.getDescription())__                            languageModel.setJavaType(javaType)__                            languageModel.setGroupId(project.getGroupId())__                            languageModel.setArtifactId(project.getArtifactId())__                            languageModel.setVersion(project.getVersion())___                            List<Map<String, String>> rows = JSonSchemaHelper.parseJsonSchema("model", json, false)__                            for (Map<String, String> row : rows) {_                                if (row.containsKey("label")) {_                                    languageModel.setLabel(row.get("label"))__                                }_                                if (row.containsKey("javaType")) {_                                    languageModel.setModelJavaType(row.get("javaType"))__                                }_                                _                                if ("camel-core".equals(project.getArtifactId())) {_                                    if (row.containsKey("description")) {_                                        languageModel.setLabel(row.get("description"))__                                    }_                                }_                            }_                            getLog().debug("Model " + languageModel)___                            _                            String properties = after(json, "  \"properties\": {")__                            String schema = createParameterJsonSchema(languageModel, properties)__                            getLog().debug("JSon schema\n" + schema)___                            _                            File dir = new File(schemaOutDir, schemaSubDirectory(languageModel.getJavaType()))__                            dir.mkdirs()___                            File out = new File(dir, name + ".json")__                            FileOutputStream fos = new FileOutputStream(out, false)__                            fos.write(schema.getBytes())__                            fos.close()___                            getLog().info("Generated " + out + " containing JSon schema for " + name + " language")__                        }_                    }_                }_            }_        } catch (Exception e) {_            throw new MojoExecutionException("Error loading language model from camel-core. Reason: " + e, e)__        }__        if (count > 0) {_            Properties properties = new Properties()__            String names = buffer.toString()__            properties.put("languages", names)__            properties.put("groupId", project.getGroupId())__            properties.put("artifactId", project.getArtifactId())__            properties.put("version", project.getVersion())__            properties.put("projectName", project.getName())__            properties.put("projectDescription", project.getDescription())___            camelMetaDir.mkdirs()__            File outFile = new File(camelMetaDir, "language.properties")__            try {_                properties.store(new FileWriter(outFile), "Generated by camel-package-maven-plugin")__                getLog().info("Generated " + outFile + " containing " + count + " Camel " + (count > 1 ? "languages: " : "language: ") + names)___                if (projectHelper != null) {_                    List<String> includes = new ArrayList<String>()__                    includes.add("**/language.properties")__                    projectHelper.addResource(this.project, outDir.getPath(), includes, new ArrayList<String>())__                    projectHelper.attachArtifact(this.project, "properties", "camelLanguage", outFile)__                }_            } catch (IOException e) {_                throw new MojoExecutionException("Failed to write properties to " + outFile + ". Reason: " + e, e)__            }_        } else {_            getLog().debug("No META-INF/services/org/apache/camel/language directory found. Are you sure you have created a Camel language?")__        }_    };execute,goal,throws,org,apache,maven,plugin,mojo,execution,exception,execution,of,the,main,class,or,one,of,the,threads,it,generated,failed,throws,org,apache,maven,plugin,mojo,failure,exception,something,bad,happened;public,void,execute,throws,mojo,execution,exception,mojo,failure,exception,file,camel,meta,dir,new,file,out,dir,meta,inf,services,org,apache,camel,map,string,string,java,types,new,hash,map,string,string,string,builder,buffer,new,string,builder,int,count,0,for,resource,r,project,get,build,get,resources,file,f,new,file,r,get,directory,if,f,exists,f,new,file,project,get,basedir,r,get,directory,f,new,file,f,meta,inf,services,org,apache,camel,language,if,f,exists,f,is,directory,file,files,f,list,files,if,files,null,for,file,file,files,string,name,file,get,name,if,name,char,at,0,count,if,buffer,length,0,buffer,append,buffer,append,name,try,string,text,load,text,new,file,input,stream,file,map,string,string,map,parse,as,map,text,string,java,type,map,get,class,if,java,type,null,java,types,put,name,java,type,catch,ioexception,e,throw,new,mojo,execution,exception,failed,to,read,file,file,reason,e,e,try,artifact,camel,core,find,camel,core,artifact,project,if,camel,core,null,file,core,camel,core,get,file,if,core,null,url,url,new,url,file,null,core,get,absolute,path,urlclass,loader,loader,new,urlclass,loader,new,url,url,for,map,entry,string,string,entry,java,types,entry,set,string,name,entry,get,key,string,java,type,entry,get,value,string,model,name,as,model,name,name,input,stream,is,loader,get,resource,as,stream,org,apache,camel,model,language,model,name,json,if,is,null,is,new,file,input,stream,new,file,core,org,apache,camel,model,language,model,name,json,string,json,load,text,is,if,json,null,language,model,language,model,new,language,model,language,model,set,name,name,language,model,set,model,name,model,name,language,model,set,label,language,model,set,description,project,get,description,language,model,set,java,type,java,type,language,model,set,group,id,project,get,group,id,language,model,set,artifact,id,project,get,artifact,id,language,model,set,version,project,get,version,list,map,string,string,rows,json,schema,helper,parse,json,schema,model,json,false,for,map,string,string,row,rows,if,row,contains,key,label,language,model,set,label,row,get,label,if,row,contains,key,java,type,language,model,set,model,java,type,row,get,java,type,if,camel,core,equals,project,get,artifact,id,if,row,contains,key,description,language,model,set,label,row,get,description,get,log,debug,model,language,model,string,properties,after,json,properties,string,schema,create,parameter,json,schema,language,model,properties,get,log,debug,json,schema,n,schema,file,dir,new,file,schema,out,dir,schema,sub,directory,language,model,get,java,type,dir,mkdirs,file,out,new,file,dir,name,json,file,output,stream,fos,new,file,output,stream,out,false,fos,write,schema,get,bytes,fos,close,get,log,info,generated,out,containing,json,schema,for,name,language,catch,exception,e,throw,new,mojo,execution,exception,error,loading,language,model,from,camel,core,reason,e,e,if,count,0,properties,properties,new,properties,string,names,buffer,to,string,properties,put,languages,names,properties,put,group,id,project,get,group,id,properties,put,artifact,id,project,get,artifact,id,properties,put,version,project,get,version,properties,put,project,name,project,get,name,properties,put,project,description,project,get,description,camel,meta,dir,mkdirs,file,out,file,new,file,camel,meta,dir,language,properties,try,properties,store,new,file,writer,out,file,generated,by,camel,package,maven,plugin,get,log,info,generated,out,file,containing,count,camel,count,1,languages,language,names,if,project,helper,null,list,string,includes,new,array,list,string,includes,add,language,properties,project,helper,add,resource,this,project,out,dir,get,path,includes,new,array,list,string,project,helper,attach,artifact,this,project,properties,camel,language,out,file,catch,ioexception,e,throw,new,mojo,execution,exception,failed,to,write,properties,to,out,file,reason,e,e,else,get,log,debug,no,meta,inf,services,org,apache,camel,language,directory,found,are,you,sure,you,have,created,a,camel,language
PackageLanguageMojo -> public void execute() throws MojoExecutionException, MojoFailureException;1421246303;Execute goal.__@throws org.apache.maven.plugin.MojoExecutionException execution of the main class or one of the_threads it generated failed._@throws org.apache.maven.plugin.MojoFailureException   something bad happened...;public void execute() throws MojoExecutionException, MojoFailureException {_        File camelMetaDir = new File(outDir, "META-INF/services/org/apache/camel/")___        Map<String, String> javaTypes = new HashMap<String, String>()___        StringBuilder buffer = new StringBuilder()__        int count = 0__        for (Resource r : project.getBuild().getResources()) {_            File f = new File(r.getDirectory())__            if (!f.exists()) {_                f = new File(project.getBasedir(), r.getDirectory())__            }_            f = new File(f, "META-INF/services/org/apache/camel/language")___            if (f.exists() && f.isDirectory()) {_                File[] files = f.listFiles()__                if (files != null) {_                    for (File file : files) {_                        _                        if (file.isDirectory()) {_                            continue__                        }_                        String name = file.getName()__                        if (name.charAt(0) != '.') {_                            count++__                            if (buffer.length() > 0) {_                                buffer.append(" ")__                            }_                            buffer.append(name)__                        }__                        _                        try {_                            String text = loadText(new FileInputStream(file))__                            Map<String, String> map = parseAsMap(text)__                            String javaType = map.get("class")__                            if (javaType != null) {_                                javaTypes.put(name, javaType)__                            }_                        } catch (IOException e) {_                            throw new MojoExecutionException("Failed to read file " + file + ". Reason: " + e, e)__                        }_                    }_                }_            }_        }__        _        _        try {_            Artifact camelCore = findCamelCoreArtifact(project)__            if (camelCore != null) {_                File core = camelCore.getFile()__                if (core != null) {_                    URL url = new URL("file", null, core.getAbsolutePath())__                    URLClassLoader loader = new URLClassLoader(new URL[]{url})__                    for (Map.Entry<String, String> entry : javaTypes.entrySet()) {_                        String name = entry.getKey()__                        String javaType = entry.getValue()__                        String modelName = asModelName(name)___                        InputStream is = loader.getResourceAsStream("org/apache/camel/model/language/" + modelName + ".json")__                        if (is == null) {_                            _                            is = new FileInputStream(new File(core, "org/apache/camel/model/language/" + modelName + ".json"))__                        }_                        String json = loadText(is)__                        if (json != null) {_                            LanguageModel languageModel = new LanguageModel()__                            languageModel.setName(name)__                            languageModel.setModelName(modelName)__                            languageModel.setLabel("")__                            languageModel.setDescription(project.getDescription())__                            languageModel.setJavaType(javaType)__                            languageModel.setGroupId(project.getGroupId())__                            languageModel.setArtifactId(project.getArtifactId())__                            languageModel.setVersion(project.getVersion())___                            List<Map<String, String>> rows = JSonSchemaHelper.parseJsonSchema("model", json, false)__                            for (Map<String, String> row : rows) {_                                if (row.containsKey("label")) {_                                    languageModel.setLabel(row.get("label"))__                                }_                                if (row.containsKey("javaType")) {_                                    languageModel.setModelJavaType(row.get("javaType"))__                                }_                                _                                if ("camel-core".equals(project.getArtifactId())) {_                                    if (row.containsKey("description")) {_                                        languageModel.setLabel(row.get("description"))__                                    }_                                }_                            }_                            getLog().debug("Model " + languageModel)___                            _                            String properties = after(json, "  \"properties\": {")__                            String schema = createParameterJsonSchema(languageModel, properties)__                            getLog().debug("JSon schema\n" + schema)___                            _                            File dir = new File(schemaOutDir, schemaSubDirectory(languageModel.getJavaType()))__                            dir.mkdirs()___                            File out = new File(dir, name + ".json")__                            FileOutputStream fos = new FileOutputStream(out, false)__                            fos.write(schema.getBytes())__                            fos.close()___                            getLog().info("Generated " + out + " containing JSon schema for " + name + " language")__                        }_                    }_                }_            }_        } catch (Exception e) {_            throw new MojoExecutionException("Error loading language model from camel-core. Reason: " + e, e)__        }__        if (count > 0) {_            Properties properties = new Properties()__            String names = buffer.toString()__            properties.put("languages", names)__            properties.put("groupId", project.getGroupId())__            properties.put("artifactId", project.getArtifactId())__            properties.put("version", project.getVersion())__            properties.put("projectName", project.getName())__            properties.put("projectDescription", project.getDescription())___            camelMetaDir.mkdirs()__            File outFile = new File(camelMetaDir, "language.properties")__            try {_                properties.store(new FileWriter(outFile), "Generated by camel-package-maven-plugin")__                getLog().info("Generated " + outFile + " containing " + count + " Camel " + (count > 1 ? "languages: " : "language: ") + names)___                if (projectHelper != null) {_                    List<String> includes = new ArrayList<String>()__                    includes.add("**/language.properties")__                    projectHelper.addResource(this.project, outDir.getPath(), includes, new ArrayList<String>())__                    projectHelper.attachArtifact(this.project, "properties", "camelLanguage", outFile)__                }_            } catch (IOException e) {_                throw new MojoExecutionException("Failed to write properties to " + outFile + ". Reason: " + e, e)__            }_        } else {_            getLog().debug("No META-INF/services/org/apache/camel/language directory found. Are you sure you have created a Camel language?")__        }_    };execute,goal,throws,org,apache,maven,plugin,mojo,execution,exception,execution,of,the,main,class,or,one,of,the,threads,it,generated,failed,throws,org,apache,maven,plugin,mojo,failure,exception,something,bad,happened;public,void,execute,throws,mojo,execution,exception,mojo,failure,exception,file,camel,meta,dir,new,file,out,dir,meta,inf,services,org,apache,camel,map,string,string,java,types,new,hash,map,string,string,string,builder,buffer,new,string,builder,int,count,0,for,resource,r,project,get,build,get,resources,file,f,new,file,r,get,directory,if,f,exists,f,new,file,project,get,basedir,r,get,directory,f,new,file,f,meta,inf,services,org,apache,camel,language,if,f,exists,f,is,directory,file,files,f,list,files,if,files,null,for,file,file,files,if,file,is,directory,continue,string,name,file,get,name,if,name,char,at,0,count,if,buffer,length,0,buffer,append,buffer,append,name,try,string,text,load,text,new,file,input,stream,file,map,string,string,map,parse,as,map,text,string,java,type,map,get,class,if,java,type,null,java,types,put,name,java,type,catch,ioexception,e,throw,new,mojo,execution,exception,failed,to,read,file,file,reason,e,e,try,artifact,camel,core,find,camel,core,artifact,project,if,camel,core,null,file,core,camel,core,get,file,if,core,null,url,url,new,url,file,null,core,get,absolute,path,urlclass,loader,loader,new,urlclass,loader,new,url,url,for,map,entry,string,string,entry,java,types,entry,set,string,name,entry,get,key,string,java,type,entry,get,value,string,model,name,as,model,name,name,input,stream,is,loader,get,resource,as,stream,org,apache,camel,model,language,model,name,json,if,is,null,is,new,file,input,stream,new,file,core,org,apache,camel,model,language,model,name,json,string,json,load,text,is,if,json,null,language,model,language,model,new,language,model,language,model,set,name,name,language,model,set,model,name,model,name,language,model,set,label,language,model,set,description,project,get,description,language,model,set,java,type,java,type,language,model,set,group,id,project,get,group,id,language,model,set,artifact,id,project,get,artifact,id,language,model,set,version,project,get,version,list,map,string,string,rows,json,schema,helper,parse,json,schema,model,json,false,for,map,string,string,row,rows,if,row,contains,key,label,language,model,set,label,row,get,label,if,row,contains,key,java,type,language,model,set,model,java,type,row,get,java,type,if,camel,core,equals,project,get,artifact,id,if,row,contains,key,description,language,model,set,label,row,get,description,get,log,debug,model,language,model,string,properties,after,json,properties,string,schema,create,parameter,json,schema,language,model,properties,get,log,debug,json,schema,n,schema,file,dir,new,file,schema,out,dir,schema,sub,directory,language,model,get,java,type,dir,mkdirs,file,out,new,file,dir,name,json,file,output,stream,fos,new,file,output,stream,out,false,fos,write,schema,get,bytes,fos,close,get,log,info,generated,out,containing,json,schema,for,name,language,catch,exception,e,throw,new,mojo,execution,exception,error,loading,language,model,from,camel,core,reason,e,e,if,count,0,properties,properties,new,properties,string,names,buffer,to,string,properties,put,languages,names,properties,put,group,id,project,get,group,id,properties,put,artifact,id,project,get,artifact,id,properties,put,version,project,get,version,properties,put,project,name,project,get,name,properties,put,project,description,project,get,description,camel,meta,dir,mkdirs,file,out,file,new,file,camel,meta,dir,language,properties,try,properties,store,new,file,writer,out,file,generated,by,camel,package,maven,plugin,get,log,info,generated,out,file,containing,count,camel,count,1,languages,language,names,if,project,helper,null,list,string,includes,new,array,list,string,includes,add,language,properties,project,helper,add,resource,this,project,out,dir,get,path,includes,new,array,list,string,project,helper,attach,artifact,this,project,properties,camel,language,out,file,catch,ioexception,e,throw,new,mojo,execution,exception,failed,to,write,properties,to,out,file,reason,e,e,else,get,log,debug,no,meta,inf,services,org,apache,camel,language,directory,found,are,you,sure,you,have,created,a,camel,language
PackageLanguageMojo -> public void execute() throws MojoExecutionException, MojoFailureException;1421246303;Execute goal.__@throws org.apache.maven.plugin.MojoExecutionException execution of the main class or one of the_threads it generated failed._@throws org.apache.maven.plugin.MojoFailureException   something bad happened...;public void execute() throws MojoExecutionException, MojoFailureException {_        File camelMetaDir = new File(outDir, "META-INF/services/org/apache/camel/")___        Map<String, String> javaTypes = new HashMap<String, String>()___        StringBuilder buffer = new StringBuilder()__        int count = 0__        for (Resource r : project.getBuild().getResources()) {_            File f = new File(r.getDirectory())__            if (!f.exists()) {_                f = new File(project.getBasedir(), r.getDirectory())__            }_            f = new File(f, "META-INF/services/org/apache/camel/language")___            if (f.exists() && f.isDirectory()) {_                File[] files = f.listFiles()__                if (files != null) {_                    for (File file : files) {_                        _                        if (file.isDirectory()) {_                            continue__                        }_                        String name = file.getName()__                        if (name.charAt(0) != '.') {_                            count++__                            if (buffer.length() > 0) {_                                buffer.append(" ")__                            }_                            buffer.append(name)__                        }__                        _                        try {_                            String text = loadText(new FileInputStream(file))__                            Map<String, String> map = parseAsMap(text)__                            String javaType = map.get("class")__                            if (javaType != null) {_                                javaTypes.put(name, javaType)__                            }_                        } catch (IOException e) {_                            throw new MojoExecutionException("Failed to read file " + file + ". Reason: " + e, e)__                        }_                    }_                }_            }_        }__        _        _        try {_            if (count > 0) {_                Artifact camelCore = findCamelCoreArtifact(project)__                if (camelCore != null) {_                    File core = camelCore.getFile()__                    if (core != null) {_                        URL url = new URL("file", null, core.getAbsolutePath())__                        URLClassLoader loader = new URLClassLoader(new URL[]{url})__                        for (Map.Entry<String, String> entry : javaTypes.entrySet()) {_                            String name = entry.getKey()__                            String javaType = entry.getValue()__                            String modelName = asModelName(name)___                            InputStream is = loader.getResourceAsStream("org/apache/camel/model/language/" + modelName + ".json")__                            if (is == null) {_                                _                                is = new FileInputStream(new File(core, "org/apache/camel/model/language/" + modelName + ".json"))__                            }_                            String json = loadText(is)__                            if (json != null) {_                                LanguageModel languageModel = new LanguageModel()__                                languageModel.setName(name)__                                languageModel.setModelName(modelName)__                                languageModel.setLabel("")__                                languageModel.setDescription(project.getDescription())__                                languageModel.setJavaType(javaType)__                                languageModel.setGroupId(project.getGroupId())__                                languageModel.setArtifactId(project.getArtifactId())__                                languageModel.setVersion(project.getVersion())___                                List<Map<String, String>> rows = JSonSchemaHelper.parseJsonSchema("model", json, false)__                                for (Map<String, String> row : rows) {_                                    if (row.containsKey("label")) {_                                        languageModel.setLabel(row.get("label"))__                                    }_                                    if (row.containsKey("javaType")) {_                                        languageModel.setModelJavaType(row.get("javaType"))__                                    }_                                    _                                    if ("camel-core".equals(project.getArtifactId())) {_                                        if (row.containsKey("description")) {_                                            languageModel.setLabel(row.get("description"))__                                        }_                                    }_                                }_                                getLog().debug("Model " + languageModel)___                                _                                String properties = after(json, "  \"properties\": {")__                                String schema = createParameterJsonSchema(languageModel, properties)__                                getLog().debug("JSon schema\n" + schema)___                                _                                File dir = new File(schemaOutDir, schemaSubDirectory(languageModel.getJavaType()))__                                dir.mkdirs()___                                File out = new File(dir, name + ".json")__                                FileOutputStream fos = new FileOutputStream(out, false)__                                fos.write(schema.getBytes())__                                fos.close()___                                getLog().info("Generated " + out + " containing JSon schema for " + name + " language")__                            }_                        }_                    }_                }_            }_        } catch (Exception e) {_            throw new MojoExecutionException("Error loading language model from camel-core. Reason: " + e, e)__        }__        if (count > 0) {_            Properties properties = new Properties()__            String names = buffer.toString()__            properties.put("languages", names)__            properties.put("groupId", project.getGroupId())__            properties.put("artifactId", project.getArtifactId())__            properties.put("version", project.getVersion())__            properties.put("projectName", project.getName())__            properties.put("projectDescription", project.getDescription())___            camelMetaDir.mkdirs()__            File outFile = new File(camelMetaDir, "language.properties")__            try {_                properties.store(new FileWriter(outFile), "Generated by camel-package-maven-plugin")__                getLog().info("Generated " + outFile + " containing " + count + " Camel " + (count > 1 ? "languages: " : "language: ") + names)___                if (projectHelper != null) {_                    List<String> includes = new ArrayList<String>()__                    includes.add("**/language.properties")__                    projectHelper.addResource(this.project, outDir.getPath(), includes, new ArrayList<String>())__                    projectHelper.attachArtifact(this.project, "properties", "camelLanguage", outFile)__                }_            } catch (IOException e) {_                throw new MojoExecutionException("Failed to write properties to " + outFile + ". Reason: " + e, e)__            }_        } else {_            getLog().debug("No META-INF/services/org/apache/camel/language directory found. Are you sure you have created a Camel language?")__        }_    };execute,goal,throws,org,apache,maven,plugin,mojo,execution,exception,execution,of,the,main,class,or,one,of,the,threads,it,generated,failed,throws,org,apache,maven,plugin,mojo,failure,exception,something,bad,happened;public,void,execute,throws,mojo,execution,exception,mojo,failure,exception,file,camel,meta,dir,new,file,out,dir,meta,inf,services,org,apache,camel,map,string,string,java,types,new,hash,map,string,string,string,builder,buffer,new,string,builder,int,count,0,for,resource,r,project,get,build,get,resources,file,f,new,file,r,get,directory,if,f,exists,f,new,file,project,get,basedir,r,get,directory,f,new,file,f,meta,inf,services,org,apache,camel,language,if,f,exists,f,is,directory,file,files,f,list,files,if,files,null,for,file,file,files,if,file,is,directory,continue,string,name,file,get,name,if,name,char,at,0,count,if,buffer,length,0,buffer,append,buffer,append,name,try,string,text,load,text,new,file,input,stream,file,map,string,string,map,parse,as,map,text,string,java,type,map,get,class,if,java,type,null,java,types,put,name,java,type,catch,ioexception,e,throw,new,mojo,execution,exception,failed,to,read,file,file,reason,e,e,try,if,count,0,artifact,camel,core,find,camel,core,artifact,project,if,camel,core,null,file,core,camel,core,get,file,if,core,null,url,url,new,url,file,null,core,get,absolute,path,urlclass,loader,loader,new,urlclass,loader,new,url,url,for,map,entry,string,string,entry,java,types,entry,set,string,name,entry,get,key,string,java,type,entry,get,value,string,model,name,as,model,name,name,input,stream,is,loader,get,resource,as,stream,org,apache,camel,model,language,model,name,json,if,is,null,is,new,file,input,stream,new,file,core,org,apache,camel,model,language,model,name,json,string,json,load,text,is,if,json,null,language,model,language,model,new,language,model,language,model,set,name,name,language,model,set,model,name,model,name,language,model,set,label,language,model,set,description,project,get,description,language,model,set,java,type,java,type,language,model,set,group,id,project,get,group,id,language,model,set,artifact,id,project,get,artifact,id,language,model,set,version,project,get,version,list,map,string,string,rows,json,schema,helper,parse,json,schema,model,json,false,for,map,string,string,row,rows,if,row,contains,key,label,language,model,set,label,row,get,label,if,row,contains,key,java,type,language,model,set,model,java,type,row,get,java,type,if,camel,core,equals,project,get,artifact,id,if,row,contains,key,description,language,model,set,label,row,get,description,get,log,debug,model,language,model,string,properties,after,json,properties,string,schema,create,parameter,json,schema,language,model,properties,get,log,debug,json,schema,n,schema,file,dir,new,file,schema,out,dir,schema,sub,directory,language,model,get,java,type,dir,mkdirs,file,out,new,file,dir,name,json,file,output,stream,fos,new,file,output,stream,out,false,fos,write,schema,get,bytes,fos,close,get,log,info,generated,out,containing,json,schema,for,name,language,catch,exception,e,throw,new,mojo,execution,exception,error,loading,language,model,from,camel,core,reason,e,e,if,count,0,properties,properties,new,properties,string,names,buffer,to,string,properties,put,languages,names,properties,put,group,id,project,get,group,id,properties,put,artifact,id,project,get,artifact,id,properties,put,version,project,get,version,properties,put,project,name,project,get,name,properties,put,project,description,project,get,description,camel,meta,dir,mkdirs,file,out,file,new,file,camel,meta,dir,language,properties,try,properties,store,new,file,writer,out,file,generated,by,camel,package,maven,plugin,get,log,info,generated,out,file,containing,count,camel,count,1,languages,language,names,if,project,helper,null,list,string,includes,new,array,list,string,includes,add,language,properties,project,helper,add,resource,this,project,out,dir,get,path,includes,new,array,list,string,project,helper,attach,artifact,this,project,properties,camel,language,out,file,catch,ioexception,e,throw,new,mojo,execution,exception,failed,to,write,properties,to,out,file,reason,e,e,else,get,log,debug,no,meta,inf,services,org,apache,camel,language,directory,found,are,you,sure,you,have,created,a,camel,language
PackageLanguageMojo -> public void execute() throws MojoExecutionException, MojoFailureException;1421246303;Execute goal.__@throws org.apache.maven.plugin.MojoExecutionException execution of the main class or one of the_threads it generated failed._@throws org.apache.maven.plugin.MojoFailureException   something bad happened...;public void execute() throws MojoExecutionException, MojoFailureException {_        File camelMetaDir = new File(outDir, "META-INF/services/org/apache/camel/")___        Map<String, String> javaTypes = new HashMap<String, String>()___        StringBuilder buffer = new StringBuilder()__        int count = 0__        for (Resource r : project.getBuild().getResources()) {_            File f = new File(r.getDirectory())__            if (!f.exists()) {_                f = new File(project.getBasedir(), r.getDirectory())__            }_            f = new File(f, "META-INF/services/org/apache/camel/language")___            if (f.exists() && f.isDirectory()) {_                File[] files = f.listFiles()__                if (files != null) {_                    for (File file : files) {_                        _                        if (file.isDirectory()) {_                            continue__                        }_                        String name = file.getName()__                        if (name.charAt(0) != '.') {_                            count++__                            if (buffer.length() > 0) {_                                buffer.append(" ")__                            }_                            buffer.append(name)__                        }__                        _                        try {_                            String text = loadText(new FileInputStream(file))__                            Map<String, String> map = parseAsMap(text)__                            String javaType = map.get("class")__                            if (javaType != null) {_                                javaTypes.put(name, javaType)__                            }_                        } catch (IOException e) {_                            throw new MojoExecutionException("Failed to read file " + file + ". Reason: " + e, e)__                        }_                    }_                }_            }_        }__        _        _        try {_            if (count > 0) {_                Artifact camelCore = findCamelCoreArtifact(project)__                if (camelCore != null) {_                    File core = camelCore.getFile()__                    if (core != null) {_                        URL url = new URL("file", null, core.getAbsolutePath())__                        URLClassLoader loader = new URLClassLoader(new URL[]{url})__                        for (Map.Entry<String, String> entry : javaTypes.entrySet()) {_                            String name = entry.getKey()__                            String javaType = entry.getValue()__                            String modelName = asModelName(name)___                            InputStream is = loader.getResourceAsStream("org/apache/camel/model/language/" + modelName + ".json")__                            if (is == null) {_                                _                                is = new FileInputStream(new File(core, "org/apache/camel/model/language/" + modelName + ".json"))__                            }_                            String json = loadText(is)__                            if (json != null) {_                                LanguageModel languageModel = new LanguageModel()__                                languageModel.setName(name)__                                languageModel.setModelName(modelName)__                                languageModel.setLabel("")__                                languageModel.setDescription(project.getDescription())__                                languageModel.setJavaType(javaType)__                                languageModel.setGroupId(project.getGroupId())__                                languageModel.setArtifactId(project.getArtifactId())__                                languageModel.setVersion(project.getVersion())___                                List<Map<String, String>> rows = JSonSchemaHelper.parseJsonSchema("model", json, false)__                                for (Map<String, String> row : rows) {_                                    if (row.containsKey("label")) {_                                        languageModel.setLabel(row.get("label"))__                                    }_                                    if (row.containsKey("javaType")) {_                                        languageModel.setModelJavaType(row.get("javaType"))__                                    }_                                    _                                    if ("camel-core".equals(project.getArtifactId())) {_                                        if (row.containsKey("description")) {_                                            languageModel.setLabel(row.get("description"))__                                        }_                                    }_                                }_                                getLog().debug("Model " + languageModel)___                                _                                String properties = after(json, "  \"properties\": {")__                                String schema = createParameterJsonSchema(languageModel, properties)__                                getLog().debug("JSon schema\n" + schema)___                                _                                File dir = new File(schemaOutDir, schemaSubDirectory(languageModel.getJavaType()))__                                dir.mkdirs()___                                File out = new File(dir, name + ".json")__                                FileOutputStream fos = new FileOutputStream(out, false)__                                fos.write(schema.getBytes())__                                fos.close()___                                getLog().info("Generated " + out + " containing JSon schema for " + name + " language")__                            }_                        }_                    }_                }_            }_        } catch (Exception e) {_            throw new MojoExecutionException("Error loading language model from camel-core. Reason: " + e, e)__        }__        if (count > 0) {_            Properties properties = new Properties()__            String names = buffer.toString()__            properties.put("languages", names)__            properties.put("groupId", project.getGroupId())__            properties.put("artifactId", project.getArtifactId())__            properties.put("version", project.getVersion())__            properties.put("projectName", project.getName())__            properties.put("projectDescription", project.getDescription())___            camelMetaDir.mkdirs()__            File outFile = new File(camelMetaDir, "language.properties")__            try {_                properties.store(new FileWriter(outFile), "Generated by camel-package-maven-plugin")__                getLog().info("Generated " + outFile + " containing " + count + " Camel " + (count > 1 ? "languages: " : "language: ") + names)___                if (projectHelper != null) {_                    List<String> includes = new ArrayList<String>()__                    includes.add("**/language.properties")__                    projectHelper.addResource(this.project, outDir.getPath(), includes, new ArrayList<String>())__                    projectHelper.attachArtifact(this.project, "properties", "camelLanguage", outFile)__                }_            } catch (IOException e) {_                throw new MojoExecutionException("Failed to write properties to " + outFile + ". Reason: " + e, e)__            }_        } else {_            getLog().debug("No META-INF/services/org/apache/camel/language directory found. Are you sure you have created a Camel language?")__        }_    };execute,goal,throws,org,apache,maven,plugin,mojo,execution,exception,execution,of,the,main,class,or,one,of,the,threads,it,generated,failed,throws,org,apache,maven,plugin,mojo,failure,exception,something,bad,happened;public,void,execute,throws,mojo,execution,exception,mojo,failure,exception,file,camel,meta,dir,new,file,out,dir,meta,inf,services,org,apache,camel,map,string,string,java,types,new,hash,map,string,string,string,builder,buffer,new,string,builder,int,count,0,for,resource,r,project,get,build,get,resources,file,f,new,file,r,get,directory,if,f,exists,f,new,file,project,get,basedir,r,get,directory,f,new,file,f,meta,inf,services,org,apache,camel,language,if,f,exists,f,is,directory,file,files,f,list,files,if,files,null,for,file,file,files,if,file,is,directory,continue,string,name,file,get,name,if,name,char,at,0,count,if,buffer,length,0,buffer,append,buffer,append,name,try,string,text,load,text,new,file,input,stream,file,map,string,string,map,parse,as,map,text,string,java,type,map,get,class,if,java,type,null,java,types,put,name,java,type,catch,ioexception,e,throw,new,mojo,execution,exception,failed,to,read,file,file,reason,e,e,try,if,count,0,artifact,camel,core,find,camel,core,artifact,project,if,camel,core,null,file,core,camel,core,get,file,if,core,null,url,url,new,url,file,null,core,get,absolute,path,urlclass,loader,loader,new,urlclass,loader,new,url,url,for,map,entry,string,string,entry,java,types,entry,set,string,name,entry,get,key,string,java,type,entry,get,value,string,model,name,as,model,name,name,input,stream,is,loader,get,resource,as,stream,org,apache,camel,model,language,model,name,json,if,is,null,is,new,file,input,stream,new,file,core,org,apache,camel,model,language,model,name,json,string,json,load,text,is,if,json,null,language,model,language,model,new,language,model,language,model,set,name,name,language,model,set,model,name,model,name,language,model,set,label,language,model,set,description,project,get,description,language,model,set,java,type,java,type,language,model,set,group,id,project,get,group,id,language,model,set,artifact,id,project,get,artifact,id,language,model,set,version,project,get,version,list,map,string,string,rows,json,schema,helper,parse,json,schema,model,json,false,for,map,string,string,row,rows,if,row,contains,key,label,language,model,set,label,row,get,label,if,row,contains,key,java,type,language,model,set,model,java,type,row,get,java,type,if,camel,core,equals,project,get,artifact,id,if,row,contains,key,description,language,model,set,label,row,get,description,get,log,debug,model,language,model,string,properties,after,json,properties,string,schema,create,parameter,json,schema,language,model,properties,get,log,debug,json,schema,n,schema,file,dir,new,file,schema,out,dir,schema,sub,directory,language,model,get,java,type,dir,mkdirs,file,out,new,file,dir,name,json,file,output,stream,fos,new,file,output,stream,out,false,fos,write,schema,get,bytes,fos,close,get,log,info,generated,out,containing,json,schema,for,name,language,catch,exception,e,throw,new,mojo,execution,exception,error,loading,language,model,from,camel,core,reason,e,e,if,count,0,properties,properties,new,properties,string,names,buffer,to,string,properties,put,languages,names,properties,put,group,id,project,get,group,id,properties,put,artifact,id,project,get,artifact,id,properties,put,version,project,get,version,properties,put,project,name,project,get,name,properties,put,project,description,project,get,description,camel,meta,dir,mkdirs,file,out,file,new,file,camel,meta,dir,language,properties,try,properties,store,new,file,writer,out,file,generated,by,camel,package,maven,plugin,get,log,info,generated,out,file,containing,count,camel,count,1,languages,language,names,if,project,helper,null,list,string,includes,new,array,list,string,includes,add,language,properties,project,helper,add,resource,this,project,out,dir,get,path,includes,new,array,list,string,project,helper,attach,artifact,this,project,properties,camel,language,out,file,catch,ioexception,e,throw,new,mojo,execution,exception,failed,to,write,properties,to,out,file,reason,e,e,else,get,log,debug,no,meta,inf,services,org,apache,camel,language,directory,found,are,you,sure,you,have,created,a,camel,language
PackageLanguageMojo -> public void execute() throws MojoExecutionException, MojoFailureException;1421246304;Execute goal.__@throws org.apache.maven.plugin.MojoExecutionException execution of the main class or one of the_threads it generated failed._@throws org.apache.maven.plugin.MojoFailureException   something bad happened...;public void execute() throws MojoExecutionException, MojoFailureException {_        prepareLanguage(getLog(), project, projectHelper, languageOutDir, schemaOutDir)__    };execute,goal,throws,org,apache,maven,plugin,mojo,execution,exception,execution,of,the,main,class,or,one,of,the,threads,it,generated,failed,throws,org,apache,maven,plugin,mojo,failure,exception,something,bad,happened;public,void,execute,throws,mojo,execution,exception,mojo,failure,exception,prepare,language,get,log,project,project,helper,language,out,dir,schema,out,dir
PackageLanguageMojo -> public void execute() throws MojoExecutionException, MojoFailureException;1423148769;Execute goal.__@throws org.apache.maven.plugin.MojoExecutionException execution of the main class or one of the_threads it generated failed._@throws org.apache.maven.plugin.MojoFailureException   something bad happened...;public void execute() throws MojoExecutionException, MojoFailureException {_        prepareLanguage(getLog(), project, projectHelper, languageOutDir, schemaOutDir)__    };execute,goal,throws,org,apache,maven,plugin,mojo,execution,exception,execution,of,the,main,class,or,one,of,the,threads,it,generated,failed,throws,org,apache,maven,plugin,mojo,failure,exception,something,bad,happened;public,void,execute,throws,mojo,execution,exception,mojo,failure,exception,prepare,language,get,log,project,project,helper,language,out,dir,schema,out,dir
PackageLanguageMojo -> public void execute() throws MojoExecutionException, MojoFailureException;1424297207;Execute goal.__@throws org.apache.maven.plugin.MojoExecutionException execution of the main class or one of the_threads it generated failed._@throws org.apache.maven.plugin.MojoFailureException   something bad happened...;public void execute() throws MojoExecutionException, MojoFailureException {_        prepareLanguage(getLog(), project, projectHelper, languageOutDir, schemaOutDir)__    };execute,goal,throws,org,apache,maven,plugin,mojo,execution,exception,execution,of,the,main,class,or,one,of,the,threads,it,generated,failed,throws,org,apache,maven,plugin,mojo,failure,exception,something,bad,happened;public,void,execute,throws,mojo,execution,exception,mojo,failure,exception,prepare,language,get,log,project,project,helper,language,out,dir,schema,out,dir
PackageLanguageMojo -> public void execute() throws MojoExecutionException, MojoFailureException;1425464042;Execute goal.__@throws org.apache.maven.plugin.MojoExecutionException execution of the main class or one of the_threads it generated failed._@throws org.apache.maven.plugin.MojoFailureException   something bad happened...;public void execute() throws MojoExecutionException, MojoFailureException {_        prepareLanguage(getLog(), project, projectHelper, languageOutDir, schemaOutDir)__    };execute,goal,throws,org,apache,maven,plugin,mojo,execution,exception,execution,of,the,main,class,or,one,of,the,threads,it,generated,failed,throws,org,apache,maven,plugin,mojo,failure,exception,something,bad,happened;public,void,execute,throws,mojo,execution,exception,mojo,failure,exception,prepare,language,get,log,project,project,helper,language,out,dir,schema,out,dir
PackageLanguageMojo -> public void execute() throws MojoExecutionException, MojoFailureException;1427439105;Execute goal.__@throws org.apache.maven.plugin.MojoExecutionException execution of the main class or one of the_threads it generated failed._@throws org.apache.maven.plugin.MojoFailureException   something bad happened...;public void execute() throws MojoExecutionException, MojoFailureException {_        prepareLanguage(getLog(), project, projectHelper, languageOutDir, schemaOutDir)__    };execute,goal,throws,org,apache,maven,plugin,mojo,execution,exception,execution,of,the,main,class,or,one,of,the,threads,it,generated,failed,throws,org,apache,maven,plugin,mojo,failure,exception,something,bad,happened;public,void,execute,throws,mojo,execution,exception,mojo,failure,exception,prepare,language,get,log,project,project,helper,language,out,dir,schema,out,dir
PackageLanguageMojo -> public void execute() throws MojoExecutionException, MojoFailureException;1427558222;Execute goal.__@throws org.apache.maven.plugin.MojoExecutionException execution of the main class or one of the_threads it generated failed._@throws org.apache.maven.plugin.MojoFailureException   something bad happened...;public void execute() throws MojoExecutionException, MojoFailureException {_        prepareLanguage(getLog(), project, projectHelper, languageOutDir, schemaOutDir)__    };execute,goal,throws,org,apache,maven,plugin,mojo,execution,exception,execution,of,the,main,class,or,one,of,the,threads,it,generated,failed,throws,org,apache,maven,plugin,mojo,failure,exception,something,bad,happened;public,void,execute,throws,mojo,execution,exception,mojo,failure,exception,prepare,language,get,log,project,project,helper,language,out,dir,schema,out,dir
PackageLanguageMojo -> public void execute() throws MojoExecutionException, MojoFailureException;1432016440;Execute goal.__@throws org.apache.maven.plugin.MojoExecutionException execution of the main class or one of the_threads it generated failed._@throws org.apache.maven.plugin.MojoFailureException   something bad happened...;public void execute() throws MojoExecutionException, MojoFailureException {_        prepareLanguage(getLog(), project, projectHelper, languageOutDir, schemaOutDir, buildContext)__    };execute,goal,throws,org,apache,maven,plugin,mojo,execution,exception,execution,of,the,main,class,or,one,of,the,threads,it,generated,failed,throws,org,apache,maven,plugin,mojo,failure,exception,something,bad,happened;public,void,execute,throws,mojo,execution,exception,mojo,failure,exception,prepare,language,get,log,project,project,helper,language,out,dir,schema,out,dir,build,context
PackageLanguageMojo -> public void execute() throws MojoExecutionException, MojoFailureException;1432016441;Execute goal.__@throws org.apache.maven.plugin.MojoExecutionException execution of the main class or one of the_threads it generated failed._@throws org.apache.maven.plugin.MojoFailureException   something bad happened...;public void execute() throws MojoExecutionException, MojoFailureException {_        prepareLanguage(getLog(), project, projectHelper, languageOutDir, schemaOutDir, buildContext)__    };execute,goal,throws,org,apache,maven,plugin,mojo,execution,exception,execution,of,the,main,class,or,one,of,the,threads,it,generated,failed,throws,org,apache,maven,plugin,mojo,failure,exception,something,bad,happened;public,void,execute,throws,mojo,execution,exception,mojo,failure,exception,prepare,language,get,log,project,project,helper,language,out,dir,schema,out,dir,build,context
PackageLanguageMojo -> public void execute() throws MojoExecutionException, MojoFailureException;1432632902;Execute goal.__@throws org.apache.maven.plugin.MojoExecutionException execution of the main class or one of the_threads it generated failed._@throws org.apache.maven.plugin.MojoFailureException   something bad happened...;public void execute() throws MojoExecutionException, MojoFailureException {_        prepareLanguage(getLog(), project, projectHelper, languageOutDir, schemaOutDir, buildContext)__    };execute,goal,throws,org,apache,maven,plugin,mojo,execution,exception,execution,of,the,main,class,or,one,of,the,threads,it,generated,failed,throws,org,apache,maven,plugin,mojo,failure,exception,something,bad,happened;public,void,execute,throws,mojo,execution,exception,mojo,failure,exception,prepare,language,get,log,project,project,helper,language,out,dir,schema,out,dir,build,context
PackageLanguageMojo -> public void execute() throws MojoExecutionException, MojoFailureException;1432642613;Execute goal.__@throws org.apache.maven.plugin.MojoExecutionException execution of the main class or one of the_threads it generated failed._@throws org.apache.maven.plugin.MojoFailureException   something bad happened...;public void execute() throws MojoExecutionException, MojoFailureException {_        prepareLanguage(getLog(), project, projectHelper, languageOutDir, schemaOutDir, buildContext)__    };execute,goal,throws,org,apache,maven,plugin,mojo,execution,exception,execution,of,the,main,class,or,one,of,the,threads,it,generated,failed,throws,org,apache,maven,plugin,mojo,failure,exception,something,bad,happened;public,void,execute,throws,mojo,execution,exception,mojo,failure,exception,prepare,language,get,log,project,project,helper,language,out,dir,schema,out,dir,build,context
PackageLanguageMojo -> public void execute() throws MojoExecutionException, MojoFailureException;1436343898;Execute goal.__@throws org.apache.maven.plugin.MojoExecutionException execution of the main class or one of the_threads it generated failed._@throws org.apache.maven.plugin.MojoFailureException   something bad happened...;public void execute() throws MojoExecutionException, MojoFailureException {_        prepareLanguage(getLog(), project, projectHelper, languageOutDir, schemaOutDir, buildContext)__    };execute,goal,throws,org,apache,maven,plugin,mojo,execution,exception,execution,of,the,main,class,or,one,of,the,threads,it,generated,failed,throws,org,apache,maven,plugin,mojo,failure,exception,something,bad,happened;public,void,execute,throws,mojo,execution,exception,mojo,failure,exception,prepare,language,get,log,project,project,helper,language,out,dir,schema,out,dir,build,context
PackageLanguageMojo -> public void execute() throws MojoExecutionException, MojoFailureException;1437396698;Execute goal.__@throws org.apache.maven.plugin.MojoExecutionException execution of the main class or one of the_threads it generated failed._@throws org.apache.maven.plugin.MojoFailureException   something bad happened...;public void execute() throws MojoExecutionException, MojoFailureException {_        prepareLanguage(getLog(), project, projectHelper, languageOutDir, schemaOutDir, buildContext)__    };execute,goal,throws,org,apache,maven,plugin,mojo,execution,exception,execution,of,the,main,class,or,one,of,the,threads,it,generated,failed,throws,org,apache,maven,plugin,mojo,failure,exception,something,bad,happened;public,void,execute,throws,mojo,execution,exception,mojo,failure,exception,prepare,language,get,log,project,project,helper,language,out,dir,schema,out,dir,build,context
PackageLanguageMojo -> public void execute() throws MojoExecutionException, MojoFailureException;1443772296;Execute goal.__@throws org.apache.maven.plugin.MojoExecutionException execution of the main class or one of the_threads it generated failed._@throws org.apache.maven.plugin.MojoFailureException   something bad happened...;public void execute() throws MojoExecutionException, MojoFailureException {_        prepareLanguage(getLog(), project, projectHelper, languageOutDir, schemaOutDir, buildContext)__    };execute,goal,throws,org,apache,maven,plugin,mojo,execution,exception,execution,of,the,main,class,or,one,of,the,threads,it,generated,failed,throws,org,apache,maven,plugin,mojo,failure,exception,something,bad,happened;public,void,execute,throws,mojo,execution,exception,mojo,failure,exception,prepare,language,get,log,project,project,helper,language,out,dir,schema,out,dir,build,context
PackageLanguageMojo -> public void execute() throws MojoExecutionException, MojoFailureException;1459673795;Execute goal.__@throws org.apache.maven.plugin.MojoExecutionException execution of the main class or one of the_threads it generated failed._@throws org.apache.maven.plugin.MojoFailureException   something bad happened...;public void execute() throws MojoExecutionException, MojoFailureException {_        prepareLanguage(getLog(), project, projectHelper, languageOutDir, schemaOutDir, buildContext)__    };execute,goal,throws,org,apache,maven,plugin,mojo,execution,exception,execution,of,the,main,class,or,one,of,the,threads,it,generated,failed,throws,org,apache,maven,plugin,mojo,failure,exception,something,bad,happened;public,void,execute,throws,mojo,execution,exception,mojo,failure,exception,prepare,language,get,log,project,project,helper,language,out,dir,schema,out,dir,build,context
PackageLanguageMojo -> public void execute() throws MojoExecutionException, MojoFailureException;1485942931;Execute goal.__@throws org.apache.maven.plugin.MojoExecutionException execution of the main class or one of the_threads it generated failed._@throws org.apache.maven.plugin.MojoFailureException   something bad happened...;public void execute() throws MojoExecutionException, MojoFailureException {_        prepareLanguage(getLog(), project, projectHelper, languageOutDir, schemaOutDir, buildContext)__    };execute,goal,throws,org,apache,maven,plugin,mojo,execution,exception,execution,of,the,main,class,or,one,of,the,threads,it,generated,failed,throws,org,apache,maven,plugin,mojo,failure,exception,something,bad,happened;public,void,execute,throws,mojo,execution,exception,mojo,failure,exception,prepare,language,get,log,project,project,helper,language,out,dir,schema,out,dir,build,context
PackageLanguageMojo -> public void execute() throws MojoExecutionException, MojoFailureException;1489048730;Execute goal.__@throws org.apache.maven.plugin.MojoExecutionException execution of the main class or one of the_threads it generated failed._@throws org.apache.maven.plugin.MojoFailureException   something bad happened...;public void execute() throws MojoExecutionException, MojoFailureException {_        prepareLanguage(getLog(), project, projectHelper, languageOutDir, schemaOutDir, buildContext)__    };execute,goal,throws,org,apache,maven,plugin,mojo,execution,exception,execution,of,the,main,class,or,one,of,the,threads,it,generated,failed,throws,org,apache,maven,plugin,mojo,failure,exception,something,bad,happened;public,void,execute,throws,mojo,execution,exception,mojo,failure,exception,prepare,language,get,log,project,project,helper,language,out,dir,schema,out,dir,build,context
PackageLanguageMojo -> public void execute() throws MojoExecutionException, MojoFailureException;1491996634;Execute goal.__@throws org.apache.maven.plugin.MojoExecutionException execution of the main class or one of the_threads it generated failed._@throws org.apache.maven.plugin.MojoFailureException   something bad happened...;public void execute() throws MojoExecutionException, MojoFailureException {_        prepareLanguage(getLog(), project, projectHelper, languageOutDir, schemaOutDir, buildContext)__    };execute,goal,throws,org,apache,maven,plugin,mojo,execution,exception,execution,of,the,main,class,or,one,of,the,threads,it,generated,failed,throws,org,apache,maven,plugin,mojo,failure,exception,something,bad,happened;public,void,execute,throws,mojo,execution,exception,mojo,failure,exception,prepare,language,get,log,project,project,helper,language,out,dir,schema,out,dir,build,context
PackageLanguageMojo -> public void execute() throws MojoExecutionException, MojoFailureException;1500562101;Execute goal.__@throws org.apache.maven.plugin.MojoExecutionException execution of the main class or one of the_threads it generated failed._@throws org.apache.maven.plugin.MojoFailureException   something bad happened...;public void execute() throws MojoExecutionException, MojoFailureException {_        prepareLanguage(getLog(), project, projectHelper, languageOutDir, schemaOutDir, buildContext)__    };execute,goal,throws,org,apache,maven,plugin,mojo,execution,exception,execution,of,the,main,class,or,one,of,the,threads,it,generated,failed,throws,org,apache,maven,plugin,mojo,failure,exception,something,bad,happened;public,void,execute,throws,mojo,execution,exception,mojo,failure,exception,prepare,language,get,log,project,project,helper,language,out,dir,schema,out,dir,build,context
PackageLanguageMojo -> public void execute() throws MojoExecutionException, MojoFailureException;1511424277;Execute goal.__@throws org.apache.maven.plugin.MojoExecutionException execution of the main class or one of the_threads it generated failed._@throws org.apache.maven.plugin.MojoFailureException   something bad happened...;public void execute() throws MojoExecutionException, MojoFailureException {_        prepareLanguage(getLog(), project, projectHelper, languageOutDir, schemaOutDir, buildContext)__    };execute,goal,throws,org,apache,maven,plugin,mojo,execution,exception,execution,of,the,main,class,or,one,of,the,threads,it,generated,failed,throws,org,apache,maven,plugin,mojo,failure,exception,something,bad,happened;public,void,execute,throws,mojo,execution,exception,mojo,failure,exception,prepare,language,get,log,project,project,helper,language,out,dir,schema,out,dir,build,context
PackageLanguageMojo -> public void execute() throws MojoExecutionException, MojoFailureException;1524063336;Execute goal.__@throws org.apache.maven.plugin.MojoExecutionException execution of the main class or one of the_threads it generated failed._@throws org.apache.maven.plugin.MojoFailureException   something bad happened...;public void execute() throws MojoExecutionException, MojoFailureException {_        prepareLanguage(getLog(), project, projectHelper, languageOutDir, schemaOutDir, buildContext)__    };execute,goal,throws,org,apache,maven,plugin,mojo,execution,exception,execution,of,the,main,class,or,one,of,the,threads,it,generated,failed,throws,org,apache,maven,plugin,mojo,failure,exception,something,bad,happened;public,void,execute,throws,mojo,execution,exception,mojo,failure,exception,prepare,language,get,log,project,project,helper,language,out,dir,schema,out,dir,build,context
PackageLanguageMojo -> public void execute() throws MojoExecutionException, MojoFailureException;1526315151;Execute goal.__@throws org.apache.maven.plugin.MojoExecutionException execution of the main class or one of the_threads it generated failed._@throws org.apache.maven.plugin.MojoFailureException   something bad happened...;public void execute() throws MojoExecutionException, MojoFailureException {_        prepareLanguage(getLog(), project, projectHelper, languageOutDir, schemaOutDir, buildContext)__    };execute,goal,throws,org,apache,maven,plugin,mojo,execution,exception,execution,of,the,main,class,or,one,of,the,threads,it,generated,failed,throws,org,apache,maven,plugin,mojo,failure,exception,something,bad,happened;public,void,execute,throws,mojo,execution,exception,mojo,failure,exception,prepare,language,get,log,project,project,helper,language,out,dir,schema,out,dir,build,context
PackageLanguageMojo -> public void execute() throws MojoExecutionException, MojoFailureException;1542904331;Execute goal.__@throws org.apache.maven.plugin.MojoExecutionException execution of the main class or one of the_threads it generated failed._@throws org.apache.maven.plugin.MojoFailureException   something bad happened...;public void execute() throws MojoExecutionException, MojoFailureException {_        prepareLanguage(getLog(), project, projectHelper, languageOutDir, schemaOutDir, buildContext)__    };execute,goal,throws,org,apache,maven,plugin,mojo,execution,exception,execution,of,the,main,class,or,one,of,the,threads,it,generated,failed,throws,org,apache,maven,plugin,mojo,failure,exception,something,bad,happened;public,void,execute,throws,mojo,execution,exception,mojo,failure,exception,prepare,language,get,log,project,project,helper,language,out,dir,schema,out,dir,build,context
PackageLanguageMojo -> public void execute() throws MojoExecutionException, MojoFailureException;1547240981;Execute goal.__@throws org.apache.maven.plugin.MojoExecutionException execution of the main class or one of the_threads it generated failed._@throws org.apache.maven.plugin.MojoFailureException   something bad happened...;public void execute() throws MojoExecutionException, MojoFailureException {_        prepareLanguage(getLog(), project, projectHelper, languageOutDir, schemaOutDir, buildContext)__    };execute,goal,throws,org,apache,maven,plugin,mojo,execution,exception,execution,of,the,main,class,or,one,of,the,threads,it,generated,failed,throws,org,apache,maven,plugin,mojo,failure,exception,something,bad,happened;public,void,execute,throws,mojo,execution,exception,mojo,failure,exception,prepare,language,get,log,project,project,helper,language,out,dir,schema,out,dir,build,context
PackageLanguageMojo -> public void execute() throws MojoExecutionException, MojoFailureException;1547451845;Execute goal.__@throws org.apache.maven.plugin.MojoExecutionException execution of the main class or one of the_threads it generated failed._@throws org.apache.maven.plugin.MojoFailureException   something bad happened...;public void execute() throws MojoExecutionException, MojoFailureException {_        prepareLanguage(getLog(), project, projectHelper, languageOutDir, schemaOutDir, buildContext)__    };execute,goal,throws,org,apache,maven,plugin,mojo,execution,exception,execution,of,the,main,class,or,one,of,the,threads,it,generated,failed,throws,org,apache,maven,plugin,mojo,failure,exception,something,bad,happened;public,void,execute,throws,mojo,execution,exception,mojo,failure,exception,prepare,language,get,log,project,project,helper,language,out,dir,schema,out,dir,build,context
PackageLanguageMojo -> public void execute() throws MojoExecutionException, MojoFailureException;1547548930;Execute goal.__@throws org.apache.maven.plugin.MojoExecutionException execution of the main class or one of the_threads it generated failed._@throws org.apache.maven.plugin.MojoFailureException   something bad happened...;public void execute() throws MojoExecutionException, MojoFailureException {_        prepareLanguage(getLog(), project, projectHelper, languageOutDir, schemaOutDir, buildContext)__    };execute,goal,throws,org,apache,maven,plugin,mojo,execution,exception,execution,of,the,main,class,or,one,of,the,threads,it,generated,failed,throws,org,apache,maven,plugin,mojo,failure,exception,something,bad,happened;public,void,execute,throws,mojo,execution,exception,mojo,failure,exception,prepare,language,get,log,project,project,helper,language,out,dir,schema,out,dir,build,context
PackageLanguageMojo -> public void execute() throws MojoExecutionException, MojoFailureException;1548668317;Execute goal.__@throws org.apache.maven.plugin.MojoExecutionException execution of the main class or one of the_threads it generated failed._@throws org.apache.maven.plugin.MojoFailureException   something bad happened...;public void execute() throws MojoExecutionException, MojoFailureException {_        prepareLanguage(getLog(), project, projectHelper, languageOutDir, schemaOutDir, buildContext)__    };execute,goal,throws,org,apache,maven,plugin,mojo,execution,exception,execution,of,the,main,class,or,one,of,the,threads,it,generated,failed,throws,org,apache,maven,plugin,mojo,failure,exception,something,bad,happened;public,void,execute,throws,mojo,execution,exception,mojo,failure,exception,prepare,language,get,log,project,project,helper,language,out,dir,schema,out,dir,build,context
PackageLanguageMojo -> public void execute() throws MojoExecutionException, MojoFailureException;1549343905;Execute goal.__@throws org.apache.maven.plugin.MojoExecutionException execution of the main class or one of the_threads it generated failed._@throws org.apache.maven.plugin.MojoFailureException   something bad happened...;public void execute() throws MojoExecutionException, MojoFailureException {_        prepareLanguage(getLog(), project, projectHelper, languageOutDir, schemaOutDir, buildContext)__    };execute,goal,throws,org,apache,maven,plugin,mojo,execution,exception,execution,of,the,main,class,or,one,of,the,threads,it,generated,failed,throws,org,apache,maven,plugin,mojo,failure,exception,something,bad,happened;public,void,execute,throws,mojo,execution,exception,mojo,failure,exception,prepare,language,get,log,project,project,helper,language,out,dir,schema,out,dir,build,context
PackageLanguageMojo -> public void execute() throws MojoExecutionException, MojoFailureException;1549363153;Execute goal.__@throws org.apache.maven.plugin.MojoExecutionException execution of the main class or one of the_threads it generated failed._@throws org.apache.maven.plugin.MojoFailureException   something bad happened...;public void execute() throws MojoExecutionException, MojoFailureException {_        prepareLanguage(getLog(), project, projectHelper, languageOutDir, schemaOutDir, buildContext)__    };execute,goal,throws,org,apache,maven,plugin,mojo,execution,exception,execution,of,the,main,class,or,one,of,the,threads,it,generated,failed,throws,org,apache,maven,plugin,mojo,failure,exception,something,bad,happened;public,void,execute,throws,mojo,execution,exception,mojo,failure,exception,prepare,language,get,log,project,project,helper,language,out,dir,schema,out,dir,build,context
PackageLanguageMojo -> public void execute() throws MojoExecutionException, MojoFailureException;1549363643;Execute goal.__@throws org.apache.maven.plugin.MojoExecutionException execution of the main class or one of the_threads it generated failed._@throws org.apache.maven.plugin.MojoFailureException   something bad happened...;public void execute() throws MojoExecutionException, MojoFailureException {_        prepareLanguage(getLog(), project, projectHelper, languageOutDir, schemaOutDir, buildContext)__    };execute,goal,throws,org,apache,maven,plugin,mojo,execution,exception,execution,of,the,main,class,or,one,of,the,threads,it,generated,failed,throws,org,apache,maven,plugin,mojo,failure,exception,something,bad,happened;public,void,execute,throws,mojo,execution,exception,mojo,failure,exception,prepare,language,get,log,project,project,helper,language,out,dir,schema,out,dir,build,context
PackageLanguageMojo -> public void execute() throws MojoExecutionException, MojoFailureException;1549379455;Execute goal.__@throws org.apache.maven.plugin.MojoExecutionException execution of the main class or one of the_threads it generated failed._@throws org.apache.maven.plugin.MojoFailureException   something bad happened...;public void execute() throws MojoExecutionException, MojoFailureException {_        prepareLanguage(getLog(), project, projectHelper, languageOutDir, schemaOutDir, buildContext)__    };execute,goal,throws,org,apache,maven,plugin,mojo,execution,exception,execution,of,the,main,class,or,one,of,the,threads,it,generated,failed,throws,org,apache,maven,plugin,mojo,failure,exception,something,bad,happened;public,void,execute,throws,mojo,execution,exception,mojo,failure,exception,prepare,language,get,log,project,project,helper,language,out,dir,schema,out,dir,build,context
PackageLanguageMojo -> public void execute() throws MojoExecutionException, MojoFailureException;1549899153;Execute goal.__@throws org.apache.maven.plugin.MojoExecutionException execution of the main class or one of the_threads it generated failed._@throws org.apache.maven.plugin.MojoFailureException   something bad happened...;public void execute() throws MojoExecutionException, MojoFailureException {_        prepareLanguage(getLog(), project, projectHelper, languageOutDir, schemaOutDir, buildContext)__    };execute,goal,throws,org,apache,maven,plugin,mojo,execution,exception,execution,of,the,main,class,or,one,of,the,threads,it,generated,failed,throws,org,apache,maven,plugin,mojo,failure,exception,something,bad,happened;public,void,execute,throws,mojo,execution,exception,mojo,failure,exception,prepare,language,get,log,project,project,helper,language,out,dir,schema,out,dir,build,context
