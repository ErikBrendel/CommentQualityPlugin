commented;modifiers;parameterAmount;loc;comment;code
true;public;0;17;/**  * Execute goal.  *  * @throws MojoExecutionException execution of the main class or one of the  *                 threads it generated failed.  * @throws MojoFailureException something bad happened...  */ ;/**  * Execute goal.  *  * @throws MojoExecutionException execution of the main class or one of the  *                 threads it generated failed.  * @throws MojoFailureException something bad happened...  */ public void execute() throws MojoExecutionException, MojoFailureException {     File f = new File(project.getBasedir(), "target/classes").     File comp = new File(f, "META-INF/services/org/apache/camel/component").     if (comp.exists() && comp.isDirectory()) {         return.     }     File df = new File(f, "META-INF/services/org/apache/camel/dataformat").     if (df.exists() && df.isDirectory()) {         return.     }     File lan = new File(f, "META-INF/services/org/apache/camel/language").     if (lan.exists() && lan.isDirectory()) {         return.     }     prepareOthers(getLog(), project, projectHelper, otherOutDir, schemaOutDir, buildContext). }
false;public,static;6;62;;public static void prepareOthers(Log log, MavenProject project, MavenProjectHelper projectHelper, File otherOutDir, File schemaOutDir, BuildContext buildContext) throws MojoExecutionException {     // can stop the build before the end and eclipse always needs to know about that directory     if (projectHelper != null) {         projectHelper.addResource(project, otherOutDir.getPath(), Collections.singletonList("**/other.properties"), Collections.emptyList()).     }     String name = project.getArtifactId().     // strip leading camel-     if (name.startsWith("camel-")) {         name = name.substring(6).     }     try {         // create json model         OtherModel otherModel = new OtherModel().         otherModel.setName(name).         otherModel.setGroupId(project.getGroupId()).         otherModel.setArtifactId(project.getArtifactId()).         otherModel.setVersion(project.getVersion()).         otherModel.setDescription(project.getDescription()).         if (project.getName() != null && project.getName().contains("(deprecated)")) {             otherModel.setDeprecated("true").         } else {             otherModel.setDeprecated("false").         }         otherModel.setFirstVersion(project.getProperties().getProperty("firstVersion")).         otherModel.setLabel(project.getProperties().getProperty("label")).         String title = project.getProperties().getProperty("title").         if (title == null) {             title = camelDashToTitle(name).         }         otherModel.setTitle(title).         if (log.isDebugEnabled()) {             log.debug("Model: " + otherModel).         }         String schema = createJsonSchema(otherModel).         // write this to the directory         Path out = schemaOutDir.toPath().resolve(name + ".json").         updateResource(buildContext, out, schema).         if (log.isDebugEnabled()) {             log.debug("Generated " + out + " containing JSon schema for " + name + " other").         }     } catch (Exception e) {         throw new MojoExecutionException("Error loading other model. Reason: " + e, e).     }     // now create properties file     File camelMetaDir = new File(otherOutDir, "META-INF/services/org/apache/camel/").     Path outFile = camelMetaDir.toPath().resolve("other.properties").     String properties = createProperties(project, "name", name).     updateResource(buildContext, outFile, properties).     log.info("Generated " + outFile + " containing 1 Camel other: " + name). }
false;private,static;1;26;;private static String createJsonSchema(OtherModel otherModel) {     StringBuilder buffer = new StringBuilder("{").     // language model     buffer.append("\n \"other\": {").     buffer.append("\n    \"name\": \"").append(otherModel.getName()).append("\",").     buffer.append("\n    \"kind\": \"").append("other").append("\",").     if (otherModel.getTitle() != null) {         buffer.append("\n    \"title\": \"").append(otherModel.getTitle()).append("\",").     }     if (otherModel.getDescription() != null) {         buffer.append("\n    \"description\": \"").append(otherModel.getDescription()).append("\",").     }     buffer.append("\n    \"deprecated\": \"").append(otherModel.getDeprecated()).append("\",").     if (otherModel.getFirstVersion() != null) {         buffer.append("\n    \"firstVersion\": \"").append(otherModel.getFirstVersion()).append("\",").     }     if (otherModel.getLabel() != null) {         buffer.append("\n    \"label\": \"").append(otherModel.getLabel()).append("\",").     }     buffer.append("\n    \"groupId\": \"").append(otherModel.getGroupId()).append("\",").     buffer.append("\n    \"artifactId\": \"").append(otherModel.getArtifactId()).append("\",").     buffer.append("\n    \"version\": \"").append(otherModel.getVersion()).append("\"").     buffer.append("\n  }").     buffer.append("\n}").     return buffer.toString(). }
false;public;0;3;;public String getName() {     return name. }
false;public;1;3;;public void setName(String name) {     this.name = name. }
false;public;0;3;;public String getTitle() {     return title. }
false;public;1;3;;public void setTitle(String title) {     this.title = title. }
false;public;0;3;;public String getDescription() {     return description. }
false;public;1;3;;public void setDescription(String description) {     this.description = description. }
false;public;0;3;;public String getDeprecated() {     return deprecated. }
false;public;1;3;;public void setDeprecated(String deprecated) {     this.deprecated = deprecated. }
false;public;0;3;;public String getDeprecationNote() {     return deprecationNote. }
false;public;1;3;;public void setDeprecationNote(String deprecationNote) {     this.deprecationNote = deprecationNote. }
false;public;0;3;;public String getFirstVersion() {     return firstVersion. }
false;public;1;3;;public void setFirstVersion(String firstVersion) {     this.firstVersion = firstVersion. }
false;public;0;3;;public String getLabel() {     return label. }
false;public;1;3;;public void setLabel(String label) {     this.label = label. }
false;public;0;3;;public String getGroupId() {     return groupId. }
false;public;1;3;;public void setGroupId(String groupId) {     this.groupId = groupId. }
false;public;0;3;;public String getArtifactId() {     return artifactId. }
false;public;1;3;;public void setArtifactId(String artifactId) {     this.artifactId = artifactId. }
false;public;0;3;;public String getVersion() {     return version. }
false;public;1;3;;public void setVersion(String version) {     this.version = version. }
false;public;0;12;;@Override public String toString() {     return "OtherModel[" + "name='" + name + '\'' + ", title='" + title + '\'' + ", description='" + description + '\'' + ", label='" + label + '\'' + ", groupId='" + groupId + '\'' + ", artifactId='" + artifactId + '\'' + ", version='" + version + '\'' + ']'. }
