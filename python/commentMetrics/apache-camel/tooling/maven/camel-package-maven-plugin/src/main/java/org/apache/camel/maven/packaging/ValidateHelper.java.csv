# id;timestamp;commentText;codeText;commentWords;codeWords
ValidateHelper -> public static String asName(File file);1434728288;Returns the name of the component, data format or language from the given json file;public static String asName(File file) {_        String name = file.getName()__        if (name.endsWith(".json")) {_            return name.substring(0, name.length() - 5)__        }_        return name__    };returns,the,name,of,the,component,data,format,or,language,from,the,given,json,file;public,static,string,as,name,file,file,string,name,file,get,name,if,name,ends,with,json,return,name,substring,0,name,length,5,return,name
ValidateHelper -> public static String asName(File file);1434728288;Returns the name of the component, data format or language from the given json file;public static String asName(File file) {_        String name = file.getName()__        if (name.endsWith(".json")) {_            return name.substring(0, name.length() - 5)__        }_        return name__    };returns,the,name,of,the,component,data,format,or,language,from,the,given,json,file;public,static,string,as,name,file,file,string,name,file,get,name,if,name,ends,with,json,return,name,substring,0,name,length,5,return,name
ValidateHelper -> public static String asName(File file);1434966811;Returns the name of the component, data format or language from the given json file;public static String asName(File file) {_        String name = file.getName()__        if (name.endsWith(".json")) {_            return name.substring(0, name.length() - 5)__        }_        return name__    };returns,the,name,of,the,component,data,format,or,language,from,the,given,json,file;public,static,string,as,name,file,file,string,name,file,get,name,if,name,ends,with,json,return,name,substring,0,name,length,5,return,name
ValidateHelper -> public static void validate(File file, ErrorDetail errorDetail);1434728288;Validates the component json file__@param file        the json file_@param errorDetail details to add errors;public static void validate(File file, ErrorDetail errorDetail) {_        String name = asName(file)___        try {_            String json = loadText(new FileInputStream(file))___            boolean isComponent = json.contains("\"kind\": \"component\"")__            boolean isDataFormat = json.contains("\"kind\": \"dataformat\"")__            boolean isLanguage = json.contains("\"kind\": \"language\"")___            _            if (!isComponent && !isDataFormat && !isLanguage) {_                return__            }__            if (isComponent) {_                errorDetail.setKind("component")__            } else if (isDataFormat) {_                errorDetail.setKind("dataformat")__            } else if (isLanguage) {_                errorDetail.setKind("language")__            }__            List<Map<String, String>> rows = JSonSchemaHelper.parseJsonSchema(errorDetail.getKind(), json, false)__            boolean label = false__            boolean description = false__            boolean syntax = false__            for (Map<String, String> row : rows) {_                String value = row.get("label")__                if (!StringHelper.isEmpty(value)) {_                    label = true__                }_                value = row.get("description")__                if (!StringHelper.isEmpty(value)) {_                    description = true__                }_                value = row.get("syntax")__                if (!StringHelper.isEmpty(value)) {_                    syntax = true__                }_            }_            if (!label) {_                errorDetail.setMissingLabel(true)__            }_            if (!description) {_                errorDetail.setMissingDescription(true)__            }_            if (!syntax) {_                errorDetail.setMissingDescription(true)__            }__            if (isComponent) {_                _                rows = JSonSchemaHelper.parseJsonSchema("componentProperties", json, true)__                for (Map<String, String> row : rows) {_                    String key = row.get("name")__                    String doc = row.get("description")__                    if (doc == null || doc.isEmpty()) {_                        errorDetail.addMissingComponentDoc(key)__                    }_                }_            }__            _            rows = JSonSchemaHelper.parseJsonSchema("properties", json, true)__            boolean path = false__            for (Map<String, String> row : rows) {_                String key = row.get("name")__                String doc = row.get("description")__                if (doc == null || doc.isEmpty()) {_                    errorDetail.addMissingEndpointDoc(key)__                }_                String kind = row.get("kind")__                if ("path".equals(kind)) {_                    path = true__                }_            }_            if (isComponent && !path) {_                _                errorDetail.setMissingUriPath(true)__            }_        } catch (IOException e) {_            _        }_    };validates,the,component,json,file,param,file,the,json,file,param,error,detail,details,to,add,errors;public,static,void,validate,file,file,error,detail,error,detail,string,name,as,name,file,try,string,json,load,text,new,file,input,stream,file,boolean,is,component,json,contains,kind,component,boolean,is,data,format,json,contains,kind,dataformat,boolean,is,language,json,contains,kind,language,if,is,component,is,data,format,is,language,return,if,is,component,error,detail,set,kind,component,else,if,is,data,format,error,detail,set,kind,dataformat,else,if,is,language,error,detail,set,kind,language,list,map,string,string,rows,json,schema,helper,parse,json,schema,error,detail,get,kind,json,false,boolean,label,false,boolean,description,false,boolean,syntax,false,for,map,string,string,row,rows,string,value,row,get,label,if,string,helper,is,empty,value,label,true,value,row,get,description,if,string,helper,is,empty,value,description,true,value,row,get,syntax,if,string,helper,is,empty,value,syntax,true,if,label,error,detail,set,missing,label,true,if,description,error,detail,set,missing,description,true,if,syntax,error,detail,set,missing,description,true,if,is,component,rows,json,schema,helper,parse,json,schema,component,properties,json,true,for,map,string,string,row,rows,string,key,row,get,name,string,doc,row,get,description,if,doc,null,doc,is,empty,error,detail,add,missing,component,doc,key,rows,json,schema,helper,parse,json,schema,properties,json,true,boolean,path,false,for,map,string,string,row,rows,string,key,row,get,name,string,doc,row,get,description,if,doc,null,doc,is,empty,error,detail,add,missing,endpoint,doc,key,string,kind,row,get,kind,if,path,equals,kind,path,true,if,is,component,path,error,detail,set,missing,uri,path,true,catch,ioexception,e
ValidateHelper -> public static void validate(File file, ErrorDetail errorDetail);1434728288;Validates the component json file__@param file        the json file_@param errorDetail details to add errors;public static void validate(File file, ErrorDetail errorDetail) {_        try {_            String json = loadText(new FileInputStream(file))___            boolean isComponent = json.contains("\"kind\": \"component\"")__            boolean isDataFormat = json.contains("\"kind\": \"dataformat\"")__            boolean isLanguage = json.contains("\"kind\": \"language\"")___            _            if (!isComponent && !isDataFormat && !isLanguage) {_                return__            }__            if (isComponent) {_                errorDetail.setKind("component")__            } else if (isDataFormat) {_                errorDetail.setKind("dataformat")__            } else if (isLanguage) {_                errorDetail.setKind("language")__            }__            List<Map<String, String>> rows = JSonSchemaHelper.parseJsonSchema(errorDetail.getKind(), json, false)__            boolean label = false__            boolean description = false__            boolean syntax = false__            for (Map<String, String> row : rows) {_                String value = row.get("label")__                if (!StringHelper.isEmpty(value)) {_                    label = true__                }_                value = row.get("description")__                if (!StringHelper.isEmpty(value)) {_                    description = true__                }_                value = row.get("syntax")__                if (!StringHelper.isEmpty(value)) {_                    syntax = true__                }_            }_            if (!label) {_                errorDetail.setMissingLabel(true)__            }_            if (!description) {_                errorDetail.setMissingDescription(true)__            }_            if (!syntax) {_                errorDetail.setMissingSyntax(true)__            }__            if (isComponent) {_                _                rows = JSonSchemaHelper.parseJsonSchema("componentProperties", json, true)__                for (Map<String, String> row : rows) {_                    String key = row.get("name")__                    String doc = row.get("description")__                    if (doc == null || doc.isEmpty()) {_                        errorDetail.addMissingComponentDoc(key)__                    }_                }_            }__            _            rows = JSonSchemaHelper.parseJsonSchema("properties", json, true)__            boolean path = false__            for (Map<String, String> row : rows) {_                String key = row.get("name")__                String doc = row.get("description")__                if (doc == null || doc.isEmpty()) {_                    errorDetail.addMissingEndpointDoc(key)__                }_                String kind = row.get("kind")__                if ("path".equals(kind)) {_                    path = true__                }_            }_            if (isComponent && !path) {_                _                errorDetail.setMissingUriPath(true)__            }_        } catch (IOException e) {_            _        }_    };validates,the,component,json,file,param,file,the,json,file,param,error,detail,details,to,add,errors;public,static,void,validate,file,file,error,detail,error,detail,try,string,json,load,text,new,file,input,stream,file,boolean,is,component,json,contains,kind,component,boolean,is,data,format,json,contains,kind,dataformat,boolean,is,language,json,contains,kind,language,if,is,component,is,data,format,is,language,return,if,is,component,error,detail,set,kind,component,else,if,is,data,format,error,detail,set,kind,dataformat,else,if,is,language,error,detail,set,kind,language,list,map,string,string,rows,json,schema,helper,parse,json,schema,error,detail,get,kind,json,false,boolean,label,false,boolean,description,false,boolean,syntax,false,for,map,string,string,row,rows,string,value,row,get,label,if,string,helper,is,empty,value,label,true,value,row,get,description,if,string,helper,is,empty,value,description,true,value,row,get,syntax,if,string,helper,is,empty,value,syntax,true,if,label,error,detail,set,missing,label,true,if,description,error,detail,set,missing,description,true,if,syntax,error,detail,set,missing,syntax,true,if,is,component,rows,json,schema,helper,parse,json,schema,component,properties,json,true,for,map,string,string,row,rows,string,key,row,get,name,string,doc,row,get,description,if,doc,null,doc,is,empty,error,detail,add,missing,component,doc,key,rows,json,schema,helper,parse,json,schema,properties,json,true,boolean,path,false,for,map,string,string,row,rows,string,key,row,get,name,string,doc,row,get,description,if,doc,null,doc,is,empty,error,detail,add,missing,endpoint,doc,key,string,kind,row,get,kind,if,path,equals,kind,path,true,if,is,component,path,error,detail,set,missing,uri,path,true,catch,ioexception,e
ValidateHelper -> public static void validate(File file, ErrorDetail errorDetail);1434966811;Validates the component json file__@param file        the json file_@param errorDetail details to add errors;public static void validate(File file, ErrorDetail errorDetail) {_        try {_            String json = loadText(new FileInputStream(file))___            boolean isComponent = json.contains("\"kind\": \"component\"")__            boolean isDataFormat = json.contains("\"kind\": \"dataformat\"")__            boolean isLanguage = json.contains("\"kind\": \"language\"")___            _            if (!isComponent && !isDataFormat && !isLanguage) {_                return__            }__            if (isComponent) {_                errorDetail.setKind("component")__            } else if (isDataFormat) {_                errorDetail.setKind("dataformat")__            } else if (isLanguage) {_                errorDetail.setKind("language")__            }__            List<Map<String, String>> rows = JSonSchemaHelper.parseJsonSchema(errorDetail.getKind(), json, false)__            boolean label = false__            boolean description = false__            boolean syntax = false__            for (Map<String, String> row : rows) {_                String value = row.get("label")__                if (!StringHelper.isEmpty(value)) {_                    label = true__                }_                value = row.get("description")__                if (!StringHelper.isEmpty(value)) {_                    description = true__                }_                value = row.get("syntax")__                if (!StringHelper.isEmpty(value)) {_                    syntax = true__                }_            }_            _            if (!label) {_                errorDetail.setMissingLabel(true)__            }_            _            if (!description) {_                errorDetail.setMissingDescription(true)__            }__            _            if (!syntax && isComponent) {_                errorDetail.setMissingSyntax(true)__            }__            if (isComponent) {_                _                rows = JSonSchemaHelper.parseJsonSchema("componentProperties", json, true)__                for (Map<String, String> row : rows) {_                    String key = row.get("name")__                    String doc = row.get("description")__                    if (doc == null || doc.isEmpty()) {_                        errorDetail.addMissingComponentDoc(key)__                    }_                }_            }__            _            rows = JSonSchemaHelper.parseJsonSchema("properties", json, true)__            boolean path = false__            for (Map<String, String> row : rows) {_                String key = row.get("name")__                String doc = row.get("description")__                if (doc == null || doc.isEmpty()) {_                    errorDetail.addMissingEndpointDoc(key)__                }_                String kind = row.get("kind")__                if ("path".equals(kind)) {_                    path = true__                }_            }_            if (isComponent && !path) {_                _                errorDetail.setMissingUriPath(true)__            }_        } catch (IOException e) {_            _        }_    };validates,the,component,json,file,param,file,the,json,file,param,error,detail,details,to,add,errors;public,static,void,validate,file,file,error,detail,error,detail,try,string,json,load,text,new,file,input,stream,file,boolean,is,component,json,contains,kind,component,boolean,is,data,format,json,contains,kind,dataformat,boolean,is,language,json,contains,kind,language,if,is,component,is,data,format,is,language,return,if,is,component,error,detail,set,kind,component,else,if,is,data,format,error,detail,set,kind,dataformat,else,if,is,language,error,detail,set,kind,language,list,map,string,string,rows,json,schema,helper,parse,json,schema,error,detail,get,kind,json,false,boolean,label,false,boolean,description,false,boolean,syntax,false,for,map,string,string,row,rows,string,value,row,get,label,if,string,helper,is,empty,value,label,true,value,row,get,description,if,string,helper,is,empty,value,description,true,value,row,get,syntax,if,string,helper,is,empty,value,syntax,true,if,label,error,detail,set,missing,label,true,if,description,error,detail,set,missing,description,true,if,syntax,is,component,error,detail,set,missing,syntax,true,if,is,component,rows,json,schema,helper,parse,json,schema,component,properties,json,true,for,map,string,string,row,rows,string,key,row,get,name,string,doc,row,get,description,if,doc,null,doc,is,empty,error,detail,add,missing,component,doc,key,rows,json,schema,helper,parse,json,schema,properties,json,true,boolean,path,false,for,map,string,string,row,rows,string,key,row,get,name,string,doc,row,get,description,if,doc,null,doc,is,empty,error,detail,add,missing,endpoint,doc,key,string,kind,row,get,kind,if,path,equals,kind,path,true,if,is,component,path,error,detail,set,missing,uri,path,true,catch,ioexception,e
