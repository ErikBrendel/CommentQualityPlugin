commented;modifiers;parameterAmount;loc;comment;code
false;protected;1;3;;protected void addResourceDirectory(Path path) {     projectHelper.addResource(project, path.toString(), Collections.singletonList("**/*"), Collections.emptyList()). }
false;public;1;3;;public void refresh(Path file) {     refresh(buildContext, file). }
false;protected;2;3;;protected void updateResource(Path out, String data) {     updateResource(buildContext, out, data). }
false;protected;2;3;;protected String createProperties(String key, String val) {     return createProperties(project, key, val). }
false;public,static;3;15;;public static String createProperties(MavenProject project, String key, String val) {     String data.     StringBuilder properties = new StringBuilder().     properties.append("# " + GENERATED_MSG + NL).     properties.append(key).append("=").append(val).append(NL).     properties.append("groupId=").append(project.getGroupId()).append(NL).     properties.append("artifactId=").append(project.getArtifactId()).append(NL).     properties.append("version=").append(project.getVersion()).append(NL).     properties.append("projectName=").append(project.getName()).append(NL).     if (project.getDescription() != null) {         properties.append("projectDescription=").append(project.getDescription()).append(NL).     }     data = properties.toString().     return data. }
false;public,static;2;5;;public static void refresh(BuildContext buildContext, Path file) {     if (buildContext != null) {         buildContext.refresh(file.toFile()).     } }
false;public,static;3;24;;public static void updateResource(BuildContext buildContext, Path out, String data) {     try {         if (data == null) {             if (Files.isRegularFile(out)) {                 Files.delete(out).                 refresh(buildContext, out).             }         } else {             if (Files.isRegularFile(out) && Files.isReadable(out)) {                 String content = new String(Files.readAllBytes(out), StandardCharsets.UTF_8).                 if (Objects.equals(content, data)) {                     return.                 }             }             Files.createDirectories(out.getParent()).             try (Writer w = Files.newBufferedWriter(out, StandardCharsets.UTF_8)) {                 w.append(data).             }             refresh(buildContext, out).         }     } catch (IOException e) {         throw new IOError(e).     } }
