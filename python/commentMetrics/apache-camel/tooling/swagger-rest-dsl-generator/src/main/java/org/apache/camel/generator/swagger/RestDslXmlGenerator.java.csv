commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;public RestDslXmlGenerator withBlueprint() {     this.blueprint = true.     return this. }
false;public;1;31;;public String generate(final CamelContext context) throws Exception {     final RestDefinitionEmitter emitter = new RestDefinitionEmitter(context).     final PathVisitor<RestsDefinition> restDslStatement = new PathVisitor<>(swagger.getBasePath(), emitter, filter, destinationGenerator()).     swagger.getPaths().forEach(restDslStatement::visit).     RestsDefinition rests = emitter.result().     String xml = ModelHelper.dumpModelAsXml(context, rests).     if (blueprint) {         xml = xml.replace("http://camel.apache.org/schema/spring", "http://camel.apache.org/schema/blueprint").     }     // remove all customId attributes as we do not want them in the output     xml = xml.replaceAll(" customId=\"true\"", "").     xml = xml.replaceAll(" customId=\"false\"", "").     if (restComponent != null) {         String extra = "<restConfiguration component=\"" + restComponent + "\"".         if (restContextPath != null) {             extra = extra.concat(" contextPath=\"" + restContextPath + "\"").         }         if (ObjectHelper.isNotEmpty(apiContextPath)) {             extra = extra.concat(" apiContextPath=\"" + apiContextPath + "\"").         }         extra = extra.concat("/>").         xml = xml.replaceFirst("<rest>", extra + "\n    <rest>").         xml = xml.replaceFirst("<rest ", extra + "\n    <rest ").     }     return xml. }
