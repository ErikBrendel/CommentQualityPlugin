commented;modifiers;parameterAmount;loc;comment;code
false;public;0;8;;@Test public void shouldGenerateXml() throws Exception {     final CamelContext context = new DefaultCamelContext().     final String xml = RestDslGenerator.toXml(swagger).generate(context).     assertThat(xml).isNotEmpty().     assertThat(xml.contains("http://camel.apache.org/schema/spring")). }
false;public;0;8;;@Test public void shouldGenerateBlueprintXml() throws Exception {     final CamelContext context = new DefaultCamelContext().     final String xml = RestDslGenerator.toXml(swagger).withBlueprint().generate(context).     assertThat(xml).isNotEmpty().     assertThat(xml.contains("http://camel.apache.org/schema/blueprint")). }
false;public;0;11;;@Test public void shouldGenerateXmlWithDefaults() throws Exception {     final CamelContext context = new DefaultCamelContext().     final String xml = RestDslGenerator.toXml(swagger).generate(context).     final URI file = RestDslGeneratorTest.class.getResource("/SwaggerPetstoreXml.txt").toURI().     final String expectedContent = new String(Files.readAllBytes(Paths.get(file)), StandardCharsets.UTF_8).     assertThat(xml).isEqualToIgnoringWhitespace(expectedContent). }
false;public;0;11;;@Test public void shouldGenerateXmlWithRestComponent() throws Exception {     final CamelContext context = new DefaultCamelContext().     final String xml = RestDslGenerator.toXml(swagger).withRestComponent("servlet").withRestContextPath("/foo").generate(context).     final URI file = RestDslGeneratorTest.class.getResource("/SwaggerPetstoreWithRestComponentXml.txt").toURI().     final String expectedContent = new String(Files.readAllBytes(Paths.get(file)), StandardCharsets.UTF_8).     assertThat(xml).isEqualTo(expectedContent). }
