# id;timestamp;commentText;codeText;commentWords;codeWords
CoreEipAnnotationProcessorHelper -> private void processRefWhenClauses(ProcessingEnvironment processingEnv, RoundEnvironment roundEnv, TypeElement originalClassType, XmlElementRef elementRef,                                        VariableElement fieldElement, String fieldName, Set<EipOption> eipOptions, String prefix);1532078194;Special for processing an @XmlElementRef when field;private void processRefWhenClauses(ProcessingEnvironment processingEnv, RoundEnvironment roundEnv, TypeElement originalClassType, XmlElementRef elementRef,_                                       VariableElement fieldElement, String fieldName, Set<EipOption> eipOptions, String prefix) {_        Elements elementUtils = processingEnv.getElementUtils()___        if ("whenClauses".equals(fieldName)) {_            String kind = "element"__            String name = elementRef.name()__            if (isNullOrEmpty(name) || "##default".equals(name)) {_                name = fieldName__            }_            name = prefix + name__            TypeMirror fieldType = fieldElement.asType()__            String fieldTypeName = fieldType.toString()___            _            String docComment = findJavaDoc(elementUtils, fieldElement, fieldName, name, originalClassType, true)___            _            Set<String> oneOfTypes = new HashSet<>()__            oneOfTypes.add("when")___            _            boolean asPredicate = true___            String displayName = null__            Metadata metadata = fieldElement.getAnnotation(Metadata.class)__            if (metadata != null) {_                displayName = metadata.displayName()__            }_            boolean deprecated = fieldElement.getAnnotation(Deprecated.class) != null__            String deprecationNote = null__            if (metadata != null) {_                deprecationNote = metadata.deprecationNode()__            }__            EipOption ep = new EipOption(name, displayName, kind, fieldTypeName, false, "", docComment, deprecated, deprecationNote, false, null, true, oneOfTypes, asPredicate)__            eipOptions.add(ep)__        }_    };special,for,processing,an,xml,element,ref,when,field;private,void,process,ref,when,clauses,processing,environment,processing,env,round,environment,round,env,type,element,original,class,type,xml,element,ref,element,ref,variable,element,field,element,string,field,name,set,eip,option,eip,options,string,prefix,elements,element,utils,processing,env,get,element,utils,if,when,clauses,equals,field,name,string,kind,element,string,name,element,ref,name,if,is,null,or,empty,name,default,equals,name,name,field,name,name,prefix,name,type,mirror,field,type,field,element,as,type,string,field,type,name,field,type,to,string,string,doc,comment,find,java,doc,element,utils,field,element,field,name,name,original,class,type,true,set,string,one,of,types,new,hash,set,one,of,types,add,when,boolean,as,predicate,true,string,display,name,null,metadata,metadata,field,element,get,annotation,metadata,class,if,metadata,null,display,name,metadata,display,name,boolean,deprecated,field,element,get,annotation,deprecated,class,null,string,deprecation,note,null,if,metadata,null,deprecation,note,metadata,deprecation,node,eip,option,ep,new,eip,option,name,display,name,kind,field,type,name,false,doc,comment,deprecated,deprecation,note,false,null,true,one,of,types,as,predicate,eip,options,add,ep
CoreEipAnnotationProcessorHelper -> private void processRefWhenClauses(ProcessingEnvironment processingEnv, RoundEnvironment roundEnv, TypeElement originalClassType, XmlElementRef elementRef,                                        VariableElement fieldElement, String fieldName, Set<EipOption> eipOptions, String prefix);1547240981;Special for processing an @XmlElementRef when field;private void processRefWhenClauses(ProcessingEnvironment processingEnv, RoundEnvironment roundEnv, TypeElement originalClassType, XmlElementRef elementRef,_                                       VariableElement fieldElement, String fieldName, Set<EipOption> eipOptions, String prefix) {_        Elements elementUtils = processingEnv.getElementUtils()___        if ("whenClauses".equals(fieldName)) {_            String kind = "element"__            String name = elementRef.name()__            if (isNullOrEmpty(name) || "##default".equals(name)) {_                name = fieldName__            }_            name = prefix + name__            TypeMirror fieldType = fieldElement.asType()__            String fieldTypeName = fieldType.toString()___            _            String docComment = findJavaDoc(elementUtils, fieldElement, fieldName, name, originalClassType, true)___            _            Set<String> oneOfTypes = new HashSet<>()__            oneOfTypes.add("when")___            _            boolean asPredicate = true___            String displayName = null__            Metadata metadata = fieldElement.getAnnotation(Metadata.class)__            if (metadata != null) {_                displayName = metadata.displayName()__            }_            boolean deprecated = fieldElement.getAnnotation(Deprecated.class) != null__            String deprecationNote = null__            if (metadata != null) {_                deprecationNote = metadata.deprecationNode()__            }__            EipOption ep = new EipOption(name, displayName, kind, fieldTypeName, false, "", docComment, deprecated, deprecationNote, false, null, true, oneOfTypes, asPredicate)__            eipOptions.add(ep)__        }_    };special,for,processing,an,xml,element,ref,when,field;private,void,process,ref,when,clauses,processing,environment,processing,env,round,environment,round,env,type,element,original,class,type,xml,element,ref,element,ref,variable,element,field,element,string,field,name,set,eip,option,eip,options,string,prefix,elements,element,utils,processing,env,get,element,utils,if,when,clauses,equals,field,name,string,kind,element,string,name,element,ref,name,if,is,null,or,empty,name,default,equals,name,name,field,name,name,prefix,name,type,mirror,field,type,field,element,as,type,string,field,type,name,field,type,to,string,string,doc,comment,find,java,doc,element,utils,field,element,field,name,name,original,class,type,true,set,string,one,of,types,new,hash,set,one,of,types,add,when,boolean,as,predicate,true,string,display,name,null,metadata,metadata,field,element,get,annotation,metadata,class,if,metadata,null,display,name,metadata,display,name,boolean,deprecated,field,element,get,annotation,deprecated,class,null,string,deprecation,note,null,if,metadata,null,deprecation,note,metadata,deprecation,node,eip,option,ep,new,eip,option,name,display,name,kind,field,type,name,false,doc,comment,deprecated,deprecation,note,false,null,true,one,of,types,as,predicate,eip,options,add,ep
CoreEipAnnotationProcessorHelper -> private void processRefWhenClauses(ProcessingEnvironment processingEnv, RoundEnvironment roundEnv, TypeElement originalClassType, XmlElementRef elementRef,                                        VariableElement fieldElement, String fieldName, Set<EipOption> eipOptions, String prefix);1547240981;Special for processing an @XmlElementRef when field;private void processRefWhenClauses(ProcessingEnvironment processingEnv, RoundEnvironment roundEnv, TypeElement originalClassType, XmlElementRef elementRef,_                                       VariableElement fieldElement, String fieldName, Set<EipOption> eipOptions, String prefix) {_        Elements elementUtils = processingEnv.getElementUtils()___        if ("whenClauses".equals(fieldName)) {_            String kind = "element"__            String name = elementRef.name()__            if (isNullOrEmpty(name) || "##default".equals(name)) {_                name = fieldName__            }_            name = prefix + name__            TypeMirror fieldType = fieldElement.asType()__            String fieldTypeName = fieldType.toString()___            _            String docComment = findJavaDoc(elementUtils, fieldElement, fieldName, name, originalClassType, true)___            _            Set<String> oneOfTypes = new HashSet<>()__            oneOfTypes.add("when")___            _            boolean asPredicate = true___            String displayName = null__            Metadata metadata = fieldElement.getAnnotation(Metadata.class)__            if (metadata != null) {_                displayName = metadata.displayName()__            }_            boolean deprecated = fieldElement.getAnnotation(Deprecated.class) != null__            String deprecationNote = null__            if (metadata != null) {_                deprecationNote = metadata.deprecationNote()__            }__            EipOption ep = new EipOption(name, displayName, kind, fieldTypeName, false, "", docComment, deprecated, deprecationNote, false, null, true, oneOfTypes, asPredicate)__            eipOptions.add(ep)__        }_    };special,for,processing,an,xml,element,ref,when,field;private,void,process,ref,when,clauses,processing,environment,processing,env,round,environment,round,env,type,element,original,class,type,xml,element,ref,element,ref,variable,element,field,element,string,field,name,set,eip,option,eip,options,string,prefix,elements,element,utils,processing,env,get,element,utils,if,when,clauses,equals,field,name,string,kind,element,string,name,element,ref,name,if,is,null,or,empty,name,default,equals,name,name,field,name,name,prefix,name,type,mirror,field,type,field,element,as,type,string,field,type,name,field,type,to,string,string,doc,comment,find,java,doc,element,utils,field,element,field,name,name,original,class,type,true,set,string,one,of,types,new,hash,set,one,of,types,add,when,boolean,as,predicate,true,string,display,name,null,metadata,metadata,field,element,get,annotation,metadata,class,if,metadata,null,display,name,metadata,display,name,boolean,deprecated,field,element,get,annotation,deprecated,class,null,string,deprecation,note,null,if,metadata,null,deprecation,note,metadata,deprecation,note,eip,option,ep,new,eip,option,name,display,name,kind,field,type,name,false,doc,comment,deprecated,deprecation,note,false,null,true,one,of,types,as,predicate,eip,options,add,ep
CoreEipAnnotationProcessorHelper -> private void processRefWhenClauses(ProcessingEnvironment processingEnv, RoundEnvironment roundEnv, TypeElement originalClassType, XmlElementRef elementRef,                                        VariableElement fieldElement, String fieldName, Set<EipOption> eipOptions, String prefix);1547241294;Special for processing an @XmlElementRef when field;private void processRefWhenClauses(ProcessingEnvironment processingEnv, RoundEnvironment roundEnv, TypeElement originalClassType, XmlElementRef elementRef,_                                       VariableElement fieldElement, String fieldName, Set<EipOption> eipOptions, String prefix) {_        Elements elementUtils = processingEnv.getElementUtils()___        if ("whenClauses".equals(fieldName)) {_            String kind = "element"__            String name = elementRef.name()__            if (isNullOrEmpty(name) || "##default".equals(name)) {_                name = fieldName__            }_            name = prefix + name__            TypeMirror fieldType = fieldElement.asType()__            String fieldTypeName = fieldType.toString()___            _            String docComment = findJavaDoc(elementUtils, fieldElement, fieldName, name, originalClassType, true)___            _            Set<String> oneOfTypes = new HashSet<>()__            oneOfTypes.add("when")___            _            boolean asPredicate = true___            String displayName = null__            Metadata metadata = fieldElement.getAnnotation(Metadata.class)__            if (metadata != null) {_                displayName = metadata.displayName()__            }_            boolean deprecated = fieldElement.getAnnotation(Deprecated.class) != null__            String deprecationNote = null__            if (metadata != null) {_                deprecationNote = metadata.deprecationNote()__            }__            EipOption ep = new EipOption(name, displayName, kind, fieldTypeName, false, "", docComment, deprecated, deprecationNote, false, null, true, oneOfTypes, asPredicate)__            eipOptions.add(ep)__        }_    };special,for,processing,an,xml,element,ref,when,field;private,void,process,ref,when,clauses,processing,environment,processing,env,round,environment,round,env,type,element,original,class,type,xml,element,ref,element,ref,variable,element,field,element,string,field,name,set,eip,option,eip,options,string,prefix,elements,element,utils,processing,env,get,element,utils,if,when,clauses,equals,field,name,string,kind,element,string,name,element,ref,name,if,is,null,or,empty,name,default,equals,name,name,field,name,name,prefix,name,type,mirror,field,type,field,element,as,type,string,field,type,name,field,type,to,string,string,doc,comment,find,java,doc,element,utils,field,element,field,name,name,original,class,type,true,set,string,one,of,types,new,hash,set,one,of,types,add,when,boolean,as,predicate,true,string,display,name,null,metadata,metadata,field,element,get,annotation,metadata,class,if,metadata,null,display,name,metadata,display,name,boolean,deprecated,field,element,get,annotation,deprecated,class,null,string,deprecation,note,null,if,metadata,null,deprecation,note,metadata,deprecation,note,eip,option,ep,new,eip,option,name,display,name,kind,field,type,name,false,doc,comment,deprecated,deprecation,note,false,null,true,one,of,types,as,predicate,eip,options,add,ep
CoreEipAnnotationProcessorHelper -> private void processRefWhenClauses(ProcessingEnvironment processingEnv, RoundEnvironment roundEnv, TypeElement originalClassType, XmlElementRef elementRef,                                        VariableElement fieldElement, String fieldName, Set<EipOption> eipOptions, String prefix);1550051587;Special for processing an @XmlElementRef when field;private void processRefWhenClauses(ProcessingEnvironment processingEnv, RoundEnvironment roundEnv, TypeElement originalClassType, XmlElementRef elementRef,_                                       VariableElement fieldElement, String fieldName, Set<EipOption> eipOptions, String prefix) {_        Elements elementUtils = processingEnv.getElementUtils()___        if ("whenClauses".equals(fieldName)) {_            String kind = "element"__            String name = elementRef.name()__            if (isNullOrEmpty(name) || "##default".equals(name)) {_                name = fieldName__            }_            name = prefix + name__            TypeMirror fieldType = fieldElement.asType()__            String fieldTypeName = fieldType.toString()___            _            _            _            String docComment = findJavaDoc(elementUtils, fieldElement, fieldName, name, originalClassType, true)___            _            Set<String> oneOfTypes = new HashSet<>()__            oneOfTypes.add("when")___            _            boolean asPredicate = true___            String displayName = null__            Metadata metadata = fieldElement.getAnnotation(Metadata.class)__            if (metadata != null) {_                displayName = metadata.displayName()__            }_            boolean deprecated = fieldElement.getAnnotation(Deprecated.class) != null__            String deprecationNote = null__            if (metadata != null) {_                deprecationNote = metadata.deprecationNote()__            }__            EipOption ep = new EipOption(name, displayName, kind, fieldTypeName, false, "", docComment, deprecated, deprecationNote, false, null, true, oneOfTypes, asPredicate)__            eipOptions.add(ep)__        }_    };special,for,processing,an,xml,element,ref,when,field;private,void,process,ref,when,clauses,processing,environment,processing,env,round,environment,round,env,type,element,original,class,type,xml,element,ref,element,ref,variable,element,field,element,string,field,name,set,eip,option,eip,options,string,prefix,elements,element,utils,processing,env,get,element,utils,if,when,clauses,equals,field,name,string,kind,element,string,name,element,ref,name,if,is,null,or,empty,name,default,equals,name,name,field,name,name,prefix,name,type,mirror,field,type,field,element,as,type,string,field,type,name,field,type,to,string,string,doc,comment,find,java,doc,element,utils,field,element,field,name,name,original,class,type,true,set,string,one,of,types,new,hash,set,one,of,types,add,when,boolean,as,predicate,true,string,display,name,null,metadata,metadata,field,element,get,annotation,metadata,class,if,metadata,null,display,name,metadata,display,name,boolean,deprecated,field,element,get,annotation,deprecated,class,null,string,deprecation,note,null,if,metadata,null,deprecation,note,metadata,deprecation,note,eip,option,ep,new,eip,option,name,display,name,kind,field,type,name,false,doc,comment,deprecated,deprecation,note,false,null,true,one,of,types,as,predicate,eip,options,add,ep
CoreEipAnnotationProcessorHelper -> private static String asTitle(String name);1532078194;Capitializes the name as a title__@param name  the name_@return as a title;private static String asTitle(String name) {_        StringBuilder sb = new StringBuilder()__        for (char c : name.toCharArray()) {_            boolean upper = Character.isUpperCase(c)__            boolean first = sb.length() == 0__            if (first) {_                sb.append(Character.toUpperCase(c))__            } else if (upper) {_                sb.append(' ')__                sb.append(c)__            } else {_                sb.append(Character.toLowerCase(c))__            }_        }_        return sb.toString().trim()__    };capitializes,the,name,as,a,title,param,name,the,name,return,as,a,title;private,static,string,as,title,string,name,string,builder,sb,new,string,builder,for,char,c,name,to,char,array,boolean,upper,character,is,upper,case,c,boolean,first,sb,length,0,if,first,sb,append,character,to,upper,case,c,else,if,upper,sb,append,sb,append,c,else,sb,append,character,to,lower,case,c,return,sb,to,string,trim
CoreEipAnnotationProcessorHelper -> private static String asTitle(String name);1547240981;Capitializes the name as a title__@param name  the name_@return as a title;private static String asTitle(String name) {_        StringBuilder sb = new StringBuilder()__        for (char c : name.toCharArray()) {_            boolean upper = Character.isUpperCase(c)__            boolean first = sb.length() == 0__            if (first) {_                sb.append(Character.toUpperCase(c))__            } else if (upper) {_                sb.append(' ')__                sb.append(c)__            } else {_                sb.append(Character.toLowerCase(c))__            }_        }_        return sb.toString().trim()__    };capitializes,the,name,as,a,title,param,name,the,name,return,as,a,title;private,static,string,as,title,string,name,string,builder,sb,new,string,builder,for,char,c,name,to,char,array,boolean,upper,character,is,upper,case,c,boolean,first,sb,length,0,if,first,sb,append,character,to,upper,case,c,else,if,upper,sb,append,sb,append,c,else,sb,append,character,to,lower,case,c,return,sb,to,string,trim
CoreEipAnnotationProcessorHelper -> private static String asTitle(String name);1547240981;Capitializes the name as a title__@param name  the name_@return as a title;private static String asTitle(String name) {_        StringBuilder sb = new StringBuilder()__        for (char c : name.toCharArray()) {_            boolean upper = Character.isUpperCase(c)__            boolean first = sb.length() == 0__            if (first) {_                sb.append(Character.toUpperCase(c))__            } else if (upper) {_                sb.append(' ')__                sb.append(c)__            } else {_                sb.append(Character.toLowerCase(c))__            }_        }_        return sb.toString().trim()__    };capitializes,the,name,as,a,title,param,name,the,name,return,as,a,title;private,static,string,as,title,string,name,string,builder,sb,new,string,builder,for,char,c,name,to,char,array,boolean,upper,character,is,upper,case,c,boolean,first,sb,length,0,if,first,sb,append,character,to,upper,case,c,else,if,upper,sb,append,sb,append,c,else,sb,append,character,to,lower,case,c,return,sb,to,string,trim
CoreEipAnnotationProcessorHelper -> private static String asTitle(String name);1547241294;Capitializes the name as a title__@param name  the name_@return as a title;private static String asTitle(String name) {_        StringBuilder sb = new StringBuilder()__        for (char c : name.toCharArray()) {_            boolean upper = Character.isUpperCase(c)__            boolean first = sb.length() == 0__            if (first) {_                sb.append(Character.toUpperCase(c))__            } else if (upper) {_                sb.append(' ')__                sb.append(c)__            } else {_                sb.append(Character.toLowerCase(c))__            }_        }_        return sb.toString().trim()__    };capitializes,the,name,as,a,title,param,name,the,name,return,as,a,title;private,static,string,as,title,string,name,string,builder,sb,new,string,builder,for,char,c,name,to,char,array,boolean,upper,character,is,upper,case,c,boolean,first,sb,length,0,if,first,sb,append,character,to,upper,case,c,else,if,upper,sb,append,sb,append,c,else,sb,append,character,to,lower,case,c,return,sb,to,string,trim
CoreEipAnnotationProcessorHelper -> private static String asTitle(String name);1550051587;Capitializes the name as a title__@param name the name_@return as a title;private static String asTitle(String name) {_        StringBuilder sb = new StringBuilder()__        for (char c : name.toCharArray()) {_            boolean upper = Character.isUpperCase(c)__            boolean first = sb.length() == 0__            if (first) {_                sb.append(Character.toUpperCase(c))__            } else if (upper) {_                sb.append(' ')__                sb.append(c)__            } else {_                sb.append(Character.toLowerCase(c))__            }_        }_        return sb.toString().trim()__    };capitializes,the,name,as,a,title,param,name,the,name,return,as,a,title;private,static,string,as,title,string,name,string,builder,sb,new,string,builder,for,char,c,name,to,char,array,boolean,upper,character,is,upper,case,c,boolean,first,sb,length,0,if,first,sb,append,character,to,upper,case,c,else,if,upper,sb,append,sb,append,c,else,sb,append,character,to,lower,case,c,return,sb,to,string,trim
CoreEipAnnotationProcessorHelper -> private void processRests(RoundEnvironment roundEnv, TypeElement originalClassType, XmlElementRef elementRef,                                VariableElement fieldElement, String fieldName, Set<EipOption> eipOptions, String prefix);1532078194;Special for processing an @XmlElementRef rests field;private void processRests(RoundEnvironment roundEnv, TypeElement originalClassType, XmlElementRef elementRef,_                               VariableElement fieldElement, String fieldName, Set<EipOption> eipOptions, String prefix) {_        if ("rests".equals(fieldName)) {__            TypeMirror fieldType = fieldElement.asType()__            String fieldTypeName = fieldType.toString()___            Set<String> oneOfTypes = new TreeSet<>()__            oneOfTypes.add("rest")___            EipOption ep = new EipOption("rests", "Rests", "element", fieldTypeName, false, "", "Contains the rest services defined using the rest-dsl",_                false, null, false, null, true, oneOfTypes, false)__            eipOptions.add(ep)__        }_    };special,for,processing,an,xml,element,ref,rests,field;private,void,process,rests,round,environment,round,env,type,element,original,class,type,xml,element,ref,element,ref,variable,element,field,element,string,field,name,set,eip,option,eip,options,string,prefix,if,rests,equals,field,name,type,mirror,field,type,field,element,as,type,string,field,type,name,field,type,to,string,set,string,one,of,types,new,tree,set,one,of,types,add,rest,eip,option,ep,new,eip,option,rests,rests,element,field,type,name,false,contains,the,rest,services,defined,using,the,rest,dsl,false,null,false,null,true,one,of,types,false,eip,options,add,ep
CoreEipAnnotationProcessorHelper -> private void processRests(RoundEnvironment roundEnv, TypeElement originalClassType, XmlElementRef elementRef,                                VariableElement fieldElement, String fieldName, Set<EipOption> eipOptions, String prefix);1547240981;Special for processing an @XmlElementRef rests field;private void processRests(RoundEnvironment roundEnv, TypeElement originalClassType, XmlElementRef elementRef,_                               VariableElement fieldElement, String fieldName, Set<EipOption> eipOptions, String prefix) {_        if ("rests".equals(fieldName)) {__            TypeMirror fieldType = fieldElement.asType()__            String fieldTypeName = fieldType.toString()___            Set<String> oneOfTypes = new TreeSet<>()__            oneOfTypes.add("rest")___            EipOption ep = new EipOption("rests", "Rests", "element", fieldTypeName, false, "", "Contains the rest services defined using the rest-dsl",_                false, null, false, null, true, oneOfTypes, false)__            eipOptions.add(ep)__        }_    };special,for,processing,an,xml,element,ref,rests,field;private,void,process,rests,round,environment,round,env,type,element,original,class,type,xml,element,ref,element,ref,variable,element,field,element,string,field,name,set,eip,option,eip,options,string,prefix,if,rests,equals,field,name,type,mirror,field,type,field,element,as,type,string,field,type,name,field,type,to,string,set,string,one,of,types,new,tree,set,one,of,types,add,rest,eip,option,ep,new,eip,option,rests,rests,element,field,type,name,false,contains,the,rest,services,defined,using,the,rest,dsl,false,null,false,null,true,one,of,types,false,eip,options,add,ep
CoreEipAnnotationProcessorHelper -> private void processRests(RoundEnvironment roundEnv, TypeElement originalClassType, XmlElementRef elementRef,                                VariableElement fieldElement, String fieldName, Set<EipOption> eipOptions, String prefix);1547240981;Special for processing an @XmlElementRef rests field;private void processRests(RoundEnvironment roundEnv, TypeElement originalClassType, XmlElementRef elementRef,_                               VariableElement fieldElement, String fieldName, Set<EipOption> eipOptions, String prefix) {_        if ("rests".equals(fieldName)) {__            TypeMirror fieldType = fieldElement.asType()__            String fieldTypeName = fieldType.toString()___            Set<String> oneOfTypes = new TreeSet<>()__            oneOfTypes.add("rest")___            EipOption ep = new EipOption("rests", "Rests", "element", fieldTypeName, false, "", "Contains the rest services defined using the rest-dsl",_                false, null, false, null, true, oneOfTypes, false)__            eipOptions.add(ep)__        }_    };special,for,processing,an,xml,element,ref,rests,field;private,void,process,rests,round,environment,round,env,type,element,original,class,type,xml,element,ref,element,ref,variable,element,field,element,string,field,name,set,eip,option,eip,options,string,prefix,if,rests,equals,field,name,type,mirror,field,type,field,element,as,type,string,field,type,name,field,type,to,string,set,string,one,of,types,new,tree,set,one,of,types,add,rest,eip,option,ep,new,eip,option,rests,rests,element,field,type,name,false,contains,the,rest,services,defined,using,the,rest,dsl,false,null,false,null,true,one,of,types,false,eip,options,add,ep
CoreEipAnnotationProcessorHelper -> private void processRests(RoundEnvironment roundEnv, TypeElement originalClassType, XmlElementRef elementRef,                                VariableElement fieldElement, String fieldName, Set<EipOption> eipOptions, String prefix);1547241294;Special for processing an @XmlElementRef rests field;private void processRests(RoundEnvironment roundEnv, TypeElement originalClassType, XmlElementRef elementRef,_                               VariableElement fieldElement, String fieldName, Set<EipOption> eipOptions, String prefix) {_        if ("rests".equals(fieldName)) {__            TypeMirror fieldType = fieldElement.asType()__            String fieldTypeName = fieldType.toString()___            Set<String> oneOfTypes = new TreeSet<>()__            oneOfTypes.add("rest")___            EipOption ep = new EipOption("rests", "Rests", "element", fieldTypeName, false, "", "Contains the rest services defined using the rest-dsl",_                false, null, false, null, true, oneOfTypes, false)__            eipOptions.add(ep)__        }_    };special,for,processing,an,xml,element,ref,rests,field;private,void,process,rests,round,environment,round,env,type,element,original,class,type,xml,element,ref,element,ref,variable,element,field,element,string,field,name,set,eip,option,eip,options,string,prefix,if,rests,equals,field,name,type,mirror,field,type,field,element,as,type,string,field,type,name,field,type,to,string,set,string,one,of,types,new,tree,set,one,of,types,add,rest,eip,option,ep,new,eip,option,rests,rests,element,field,type,name,false,contains,the,rest,services,defined,using,the,rest,dsl,false,null,false,null,true,one,of,types,false,eip,options,add,ep
CoreEipAnnotationProcessorHelper -> private void processRoutes(RoundEnvironment roundEnv, TypeElement originalClassType, XmlElementRef elementRef,                                VariableElement fieldElement, String fieldName, Set<EipOption> eipOptions, String prefix);1532078194;Special for processing an @XmlElementRef routes field;private void processRoutes(RoundEnvironment roundEnv, TypeElement originalClassType, XmlElementRef elementRef,_                               VariableElement fieldElement, String fieldName, Set<EipOption> eipOptions, String prefix) {_        if ("routes".equals(fieldName)) {__            TypeMirror fieldType = fieldElement.asType()__            String fieldTypeName = fieldType.toString()___            Set<String> oneOfTypes = new TreeSet<>()__            oneOfTypes.add("route")___            EipOption ep = new EipOption("routes", "Routes", "element", fieldTypeName, false, "", "Contains the Camel routes",_                false, null, false, null, true, oneOfTypes, false)__            eipOptions.add(ep)__        }_    };special,for,processing,an,xml,element,ref,routes,field;private,void,process,routes,round,environment,round,env,type,element,original,class,type,xml,element,ref,element,ref,variable,element,field,element,string,field,name,set,eip,option,eip,options,string,prefix,if,routes,equals,field,name,type,mirror,field,type,field,element,as,type,string,field,type,name,field,type,to,string,set,string,one,of,types,new,tree,set,one,of,types,add,route,eip,option,ep,new,eip,option,routes,routes,element,field,type,name,false,contains,the,camel,routes,false,null,false,null,true,one,of,types,false,eip,options,add,ep
CoreEipAnnotationProcessorHelper -> private void processRoutes(RoundEnvironment roundEnv, TypeElement originalClassType, XmlElementRef elementRef,                                VariableElement fieldElement, String fieldName, Set<EipOption> eipOptions, String prefix);1547240981;Special for processing an @XmlElementRef routes field;private void processRoutes(RoundEnvironment roundEnv, TypeElement originalClassType, XmlElementRef elementRef,_                               VariableElement fieldElement, String fieldName, Set<EipOption> eipOptions, String prefix) {_        if ("routes".equals(fieldName)) {__            TypeMirror fieldType = fieldElement.asType()__            String fieldTypeName = fieldType.toString()___            Set<String> oneOfTypes = new TreeSet<>()__            oneOfTypes.add("route")___            EipOption ep = new EipOption("routes", "Routes", "element", fieldTypeName, false, "", "Contains the Camel routes",_                false, null, false, null, true, oneOfTypes, false)__            eipOptions.add(ep)__        }_    };special,for,processing,an,xml,element,ref,routes,field;private,void,process,routes,round,environment,round,env,type,element,original,class,type,xml,element,ref,element,ref,variable,element,field,element,string,field,name,set,eip,option,eip,options,string,prefix,if,routes,equals,field,name,type,mirror,field,type,field,element,as,type,string,field,type,name,field,type,to,string,set,string,one,of,types,new,tree,set,one,of,types,add,route,eip,option,ep,new,eip,option,routes,routes,element,field,type,name,false,contains,the,camel,routes,false,null,false,null,true,one,of,types,false,eip,options,add,ep
CoreEipAnnotationProcessorHelper -> private void processRoutes(RoundEnvironment roundEnv, TypeElement originalClassType, XmlElementRef elementRef,                                VariableElement fieldElement, String fieldName, Set<EipOption> eipOptions, String prefix);1547240981;Special for processing an @XmlElementRef routes field;private void processRoutes(RoundEnvironment roundEnv, TypeElement originalClassType, XmlElementRef elementRef,_                               VariableElement fieldElement, String fieldName, Set<EipOption> eipOptions, String prefix) {_        if ("routes".equals(fieldName)) {__            TypeMirror fieldType = fieldElement.asType()__            String fieldTypeName = fieldType.toString()___            Set<String> oneOfTypes = new TreeSet<>()__            oneOfTypes.add("route")___            EipOption ep = new EipOption("routes", "Routes", "element", fieldTypeName, false, "", "Contains the Camel routes",_                false, null, false, null, true, oneOfTypes, false)__            eipOptions.add(ep)__        }_    };special,for,processing,an,xml,element,ref,routes,field;private,void,process,routes,round,environment,round,env,type,element,original,class,type,xml,element,ref,element,ref,variable,element,field,element,string,field,name,set,eip,option,eip,options,string,prefix,if,routes,equals,field,name,type,mirror,field,type,field,element,as,type,string,field,type,name,field,type,to,string,set,string,one,of,types,new,tree,set,one,of,types,add,route,eip,option,ep,new,eip,option,routes,routes,element,field,type,name,false,contains,the,camel,routes,false,null,false,null,true,one,of,types,false,eip,options,add,ep
CoreEipAnnotationProcessorHelper -> private void processRoutes(RoundEnvironment roundEnv, TypeElement originalClassType, XmlElementRef elementRef,                                VariableElement fieldElement, String fieldName, Set<EipOption> eipOptions, String prefix);1547241294;Special for processing an @XmlElementRef routes field;private void processRoutes(RoundEnvironment roundEnv, TypeElement originalClassType, XmlElementRef elementRef,_                               VariableElement fieldElement, String fieldName, Set<EipOption> eipOptions, String prefix) {_        if ("routes".equals(fieldName)) {__            TypeMirror fieldType = fieldElement.asType()__            String fieldTypeName = fieldType.toString()___            Set<String> oneOfTypes = new TreeSet<>()__            oneOfTypes.add("route")___            EipOption ep = new EipOption("routes", "Routes", "element", fieldTypeName, false, "", "Contains the Camel routes",_                false, null, false, null, true, oneOfTypes, false)__            eipOptions.add(ep)__        }_    };special,for,processing,an,xml,element,ref,routes,field;private,void,process,routes,round,environment,round,env,type,element,original,class,type,xml,element,ref,element,ref,variable,element,field,element,string,field,name,set,eip,option,eip,options,string,prefix,if,routes,equals,field,name,type,mirror,field,type,field,element,as,type,string,field,type,name,field,type,to,string,set,string,one,of,types,new,tree,set,one,of,types,add,route,eip,option,ep,new,eip,option,routes,routes,element,field,type,name,false,contains,the,camel,routes,false,null,false,null,true,one,of,types,false,eip,options,add,ep
CoreEipAnnotationProcessorHelper -> private void processRefExpression(ProcessingEnvironment processingEnv, RoundEnvironment roundEnv, TypeElement originalClassType, TypeElement classElement,                                       XmlElementRef elementRef, VariableElement fieldElement,                                       String fieldName, Set<EipOption> eipOptions, String prefix);1532078194;Special for processing an @XmlElementRef expression field;private void processRefExpression(ProcessingEnvironment processingEnv, RoundEnvironment roundEnv, TypeElement originalClassType, TypeElement classElement,_                                      XmlElementRef elementRef, VariableElement fieldElement,_                                      String fieldName, Set<EipOption> eipOptions, String prefix) {_        Elements elementUtils = processingEnv.getElementUtils()___        if ("expression".equals(fieldName)) {_            String kind = "expression"__            String name = elementRef.name()__            if (isNullOrEmpty(name) || "##default".equals(name)) {_                name = fieldName__            }_            name = prefix + name__            TypeMirror fieldType = fieldElement.asType()__            String fieldTypeName = fieldType.toString()___            _            String docComment = findJavaDoc(elementUtils, fieldElement, fieldName, name, originalClassType, true)___            _            boolean asPredicate = fieldElement.getAnnotation(AsPredicate.class) != null__            if (!asPredicate) {_                asPredicate = classElement.getAnnotation(AsPredicate.class) != null__            }_            if (!asPredicate) {_                asPredicate = originalClassType.getAnnotation(AsPredicate.class) != null__            }__            _            Set<String> oneOfTypes = new TreeSet<>()__            for (String language : ONE_OF_LANGUAGES) {_                TypeElement languages = findTypeElement(processingEnv, roundEnv, language)__                String superClassName = canonicalClassName(languages.toString())__                _                Set<TypeElement> children = new LinkedHashSet<>()__                findTypeElementChildren(processingEnv, roundEnv, children, superClassName)__                for (TypeElement child : children) {_                    XmlRootElement rootElement = child.getAnnotation(XmlRootElement.class)__                    if (rootElement != null) {_                        String childName = rootElement.name()__                        oneOfTypes.add(childName)__                    }_                }_            }__            String displayName = null__            Metadata metadata = fieldElement.getAnnotation(Metadata.class)__            if (metadata != null) {_                displayName = metadata.displayName()__            }_            boolean deprecated = fieldElement.getAnnotation(Deprecated.class) != null__            String deprecationNote = null__            if (metadata != null) {_                deprecationNote = metadata.deprecationNode()__            }__            EipOption ep = new EipOption(name, displayName, kind, fieldTypeName, true, "", docComment, deprecated, deprecationNote, false, null, true, oneOfTypes, asPredicate)__            eipOptions.add(ep)__        }_    };special,for,processing,an,xml,element,ref,expression,field;private,void,process,ref,expression,processing,environment,processing,env,round,environment,round,env,type,element,original,class,type,type,element,class,element,xml,element,ref,element,ref,variable,element,field,element,string,field,name,set,eip,option,eip,options,string,prefix,elements,element,utils,processing,env,get,element,utils,if,expression,equals,field,name,string,kind,expression,string,name,element,ref,name,if,is,null,or,empty,name,default,equals,name,name,field,name,name,prefix,name,type,mirror,field,type,field,element,as,type,string,field,type,name,field,type,to,string,string,doc,comment,find,java,doc,element,utils,field,element,field,name,name,original,class,type,true,boolean,as,predicate,field,element,get,annotation,as,predicate,class,null,if,as,predicate,as,predicate,class,element,get,annotation,as,predicate,class,null,if,as,predicate,as,predicate,original,class,type,get,annotation,as,predicate,class,null,set,string,one,of,types,new,tree,set,for,string,language,type,element,languages,find,type,element,processing,env,round,env,language,string,super,class,name,canonical,class,name,languages,to,string,set,type,element,children,new,linked,hash,set,find,type,element,children,processing,env,round,env,children,super,class,name,for,type,element,child,children,xml,root,element,root,element,child,get,annotation,xml,root,element,class,if,root,element,null,string,child,name,root,element,name,one,of,types,add,child,name,string,display,name,null,metadata,metadata,field,element,get,annotation,metadata,class,if,metadata,null,display,name,metadata,display,name,boolean,deprecated,field,element,get,annotation,deprecated,class,null,string,deprecation,note,null,if,metadata,null,deprecation,note,metadata,deprecation,node,eip,option,ep,new,eip,option,name,display,name,kind,field,type,name,true,doc,comment,deprecated,deprecation,note,false,null,true,one,of,types,as,predicate,eip,options,add,ep
CoreEipAnnotationProcessorHelper -> private void processRefExpression(ProcessingEnvironment processingEnv, RoundEnvironment roundEnv, TypeElement originalClassType, TypeElement classElement,                                       XmlElementRef elementRef, VariableElement fieldElement,                                       String fieldName, Set<EipOption> eipOptions, String prefix);1547240981;Special for processing an @XmlElementRef expression field;private void processRefExpression(ProcessingEnvironment processingEnv, RoundEnvironment roundEnv, TypeElement originalClassType, TypeElement classElement,_                                      XmlElementRef elementRef, VariableElement fieldElement,_                                      String fieldName, Set<EipOption> eipOptions, String prefix) {_        Elements elementUtils = processingEnv.getElementUtils()___        if ("expression".equals(fieldName)) {_            String kind = "expression"__            String name = elementRef.name()__            if (isNullOrEmpty(name) || "##default".equals(name)) {_                name = fieldName__            }_            name = prefix + name__            TypeMirror fieldType = fieldElement.asType()__            String fieldTypeName = fieldType.toString()___            _            String docComment = findJavaDoc(elementUtils, fieldElement, fieldName, name, originalClassType, true)___            _            boolean asPredicate = fieldElement.getAnnotation(AsPredicate.class) != null__            if (!asPredicate) {_                asPredicate = classElement.getAnnotation(AsPredicate.class) != null__            }_            if (!asPredicate) {_                asPredicate = originalClassType.getAnnotation(AsPredicate.class) != null__            }__            _            Set<String> oneOfTypes = new TreeSet<>()__            for (String language : ONE_OF_LANGUAGES) {_                TypeElement languages = findTypeElement(processingEnv, roundEnv, language)__                String superClassName = canonicalClassName(languages.toString())__                _                Set<TypeElement> children = new LinkedHashSet<>()__                findTypeElementChildren(processingEnv, roundEnv, children, superClassName)__                for (TypeElement child : children) {_                    XmlRootElement rootElement = child.getAnnotation(XmlRootElement.class)__                    if (rootElement != null) {_                        String childName = rootElement.name()__                        oneOfTypes.add(childName)__                    }_                }_            }__            String displayName = null__            Metadata metadata = fieldElement.getAnnotation(Metadata.class)__            if (metadata != null) {_                displayName = metadata.displayName()__            }_            boolean deprecated = fieldElement.getAnnotation(Deprecated.class) != null__            String deprecationNote = null__            if (metadata != null) {_                deprecationNote = metadata.deprecationNode()__            }__            EipOption ep = new EipOption(name, displayName, kind, fieldTypeName, true, "", docComment, deprecated, deprecationNote, false, null, true, oneOfTypes, asPredicate)__            eipOptions.add(ep)__        }_    };special,for,processing,an,xml,element,ref,expression,field;private,void,process,ref,expression,processing,environment,processing,env,round,environment,round,env,type,element,original,class,type,type,element,class,element,xml,element,ref,element,ref,variable,element,field,element,string,field,name,set,eip,option,eip,options,string,prefix,elements,element,utils,processing,env,get,element,utils,if,expression,equals,field,name,string,kind,expression,string,name,element,ref,name,if,is,null,or,empty,name,default,equals,name,name,field,name,name,prefix,name,type,mirror,field,type,field,element,as,type,string,field,type,name,field,type,to,string,string,doc,comment,find,java,doc,element,utils,field,element,field,name,name,original,class,type,true,boolean,as,predicate,field,element,get,annotation,as,predicate,class,null,if,as,predicate,as,predicate,class,element,get,annotation,as,predicate,class,null,if,as,predicate,as,predicate,original,class,type,get,annotation,as,predicate,class,null,set,string,one,of,types,new,tree,set,for,string,language,type,element,languages,find,type,element,processing,env,round,env,language,string,super,class,name,canonical,class,name,languages,to,string,set,type,element,children,new,linked,hash,set,find,type,element,children,processing,env,round,env,children,super,class,name,for,type,element,child,children,xml,root,element,root,element,child,get,annotation,xml,root,element,class,if,root,element,null,string,child,name,root,element,name,one,of,types,add,child,name,string,display,name,null,metadata,metadata,field,element,get,annotation,metadata,class,if,metadata,null,display,name,metadata,display,name,boolean,deprecated,field,element,get,annotation,deprecated,class,null,string,deprecation,note,null,if,metadata,null,deprecation,note,metadata,deprecation,node,eip,option,ep,new,eip,option,name,display,name,kind,field,type,name,true,doc,comment,deprecated,deprecation,note,false,null,true,one,of,types,as,predicate,eip,options,add,ep
CoreEipAnnotationProcessorHelper -> private void processRefExpression(ProcessingEnvironment processingEnv, RoundEnvironment roundEnv, TypeElement originalClassType, TypeElement classElement,                                       XmlElementRef elementRef, VariableElement fieldElement,                                       String fieldName, Set<EipOption> eipOptions, String prefix);1547240981;Special for processing an @XmlElementRef expression field;private void processRefExpression(ProcessingEnvironment processingEnv, RoundEnvironment roundEnv, TypeElement originalClassType, TypeElement classElement,_                                      XmlElementRef elementRef, VariableElement fieldElement,_                                      String fieldName, Set<EipOption> eipOptions, String prefix) {_        Elements elementUtils = processingEnv.getElementUtils()___        if ("expression".equals(fieldName)) {_            String kind = "expression"__            String name = elementRef.name()__            if (isNullOrEmpty(name) || "##default".equals(name)) {_                name = fieldName__            }_            name = prefix + name__            TypeMirror fieldType = fieldElement.asType()__            String fieldTypeName = fieldType.toString()___            _            String docComment = findJavaDoc(elementUtils, fieldElement, fieldName, name, originalClassType, true)___            _            boolean asPredicate = fieldElement.getAnnotation(AsPredicate.class) != null__            if (!asPredicate) {_                asPredicate = classElement.getAnnotation(AsPredicate.class) != null__            }_            if (!asPredicate) {_                asPredicate = originalClassType.getAnnotation(AsPredicate.class) != null__            }__            _            Set<String> oneOfTypes = new TreeSet<>()__            for (String language : ONE_OF_LANGUAGES) {_                TypeElement languages = findTypeElement(processingEnv, roundEnv, language)__                String superClassName = canonicalClassName(languages.toString())__                _                Set<TypeElement> children = new LinkedHashSet<>()__                findTypeElementChildren(processingEnv, roundEnv, children, superClassName)__                for (TypeElement child : children) {_                    XmlRootElement rootElement = child.getAnnotation(XmlRootElement.class)__                    if (rootElement != null) {_                        String childName = rootElement.name()__                        oneOfTypes.add(childName)__                    }_                }_            }__            String displayName = null__            Metadata metadata = fieldElement.getAnnotation(Metadata.class)__            if (metadata != null) {_                displayName = metadata.displayName()__            }_            boolean deprecated = fieldElement.getAnnotation(Deprecated.class) != null__            String deprecationNote = null__            if (metadata != null) {_                deprecationNote = metadata.deprecationNote()__            }__            EipOption ep = new EipOption(name, displayName, kind, fieldTypeName, true, "", docComment, deprecated, deprecationNote, false, null, true, oneOfTypes, asPredicate)__            eipOptions.add(ep)__        }_    };special,for,processing,an,xml,element,ref,expression,field;private,void,process,ref,expression,processing,environment,processing,env,round,environment,round,env,type,element,original,class,type,type,element,class,element,xml,element,ref,element,ref,variable,element,field,element,string,field,name,set,eip,option,eip,options,string,prefix,elements,element,utils,processing,env,get,element,utils,if,expression,equals,field,name,string,kind,expression,string,name,element,ref,name,if,is,null,or,empty,name,default,equals,name,name,field,name,name,prefix,name,type,mirror,field,type,field,element,as,type,string,field,type,name,field,type,to,string,string,doc,comment,find,java,doc,element,utils,field,element,field,name,name,original,class,type,true,boolean,as,predicate,field,element,get,annotation,as,predicate,class,null,if,as,predicate,as,predicate,class,element,get,annotation,as,predicate,class,null,if,as,predicate,as,predicate,original,class,type,get,annotation,as,predicate,class,null,set,string,one,of,types,new,tree,set,for,string,language,type,element,languages,find,type,element,processing,env,round,env,language,string,super,class,name,canonical,class,name,languages,to,string,set,type,element,children,new,linked,hash,set,find,type,element,children,processing,env,round,env,children,super,class,name,for,type,element,child,children,xml,root,element,root,element,child,get,annotation,xml,root,element,class,if,root,element,null,string,child,name,root,element,name,one,of,types,add,child,name,string,display,name,null,metadata,metadata,field,element,get,annotation,metadata,class,if,metadata,null,display,name,metadata,display,name,boolean,deprecated,field,element,get,annotation,deprecated,class,null,string,deprecation,note,null,if,metadata,null,deprecation,note,metadata,deprecation,note,eip,option,ep,new,eip,option,name,display,name,kind,field,type,name,true,doc,comment,deprecated,deprecation,note,false,null,true,one,of,types,as,predicate,eip,options,add,ep
CoreEipAnnotationProcessorHelper -> private void processRefExpression(ProcessingEnvironment processingEnv, RoundEnvironment roundEnv, TypeElement originalClassType, TypeElement classElement,                                       XmlElementRef elementRef, VariableElement fieldElement,                                       String fieldName, Set<EipOption> eipOptions, String prefix);1547241294;Special for processing an @XmlElementRef expression field;private void processRefExpression(ProcessingEnvironment processingEnv, RoundEnvironment roundEnv, TypeElement originalClassType, TypeElement classElement,_                                      XmlElementRef elementRef, VariableElement fieldElement,_                                      String fieldName, Set<EipOption> eipOptions, String prefix) {_        Elements elementUtils = processingEnv.getElementUtils()___        if ("expression".equals(fieldName)) {_            String kind = "expression"__            String name = elementRef.name()__            if (isNullOrEmpty(name) || "##default".equals(name)) {_                name = fieldName__            }_            name = prefix + name__            TypeMirror fieldType = fieldElement.asType()__            String fieldTypeName = fieldType.toString()___            _            String docComment = findJavaDoc(elementUtils, fieldElement, fieldName, name, originalClassType, true)___            _            boolean asPredicate = fieldElement.getAnnotation(AsPredicate.class) != null__            if (!asPredicate) {_                asPredicate = classElement.getAnnotation(AsPredicate.class) != null__            }_            if (!asPredicate) {_                asPredicate = originalClassType.getAnnotation(AsPredicate.class) != null__            }__            _            Set<String> oneOfTypes = new TreeSet<>()__            for (String language : ONE_OF_LANGUAGES) {_                TypeElement languages = findTypeElement(processingEnv, roundEnv, language)__                String superClassName = canonicalClassName(languages.toString())__                _                Set<TypeElement> children = new LinkedHashSet<>()__                findTypeElementChildren(processingEnv, roundEnv, children, superClassName)__                for (TypeElement child : children) {_                    XmlRootElement rootElement = child.getAnnotation(XmlRootElement.class)__                    if (rootElement != null) {_                        String childName = rootElement.name()__                        oneOfTypes.add(childName)__                    }_                }_            }__            String displayName = null__            Metadata metadata = fieldElement.getAnnotation(Metadata.class)__            if (metadata != null) {_                displayName = metadata.displayName()__            }_            boolean deprecated = fieldElement.getAnnotation(Deprecated.class) != null__            String deprecationNote = null__            if (metadata != null) {_                deprecationNote = metadata.deprecationNote()__            }__            EipOption ep = new EipOption(name, displayName, kind, fieldTypeName, true, "", docComment, deprecated, deprecationNote, false, null, true, oneOfTypes, asPredicate)__            eipOptions.add(ep)__        }_    };special,for,processing,an,xml,element,ref,expression,field;private,void,process,ref,expression,processing,environment,processing,env,round,environment,round,env,type,element,original,class,type,type,element,class,element,xml,element,ref,element,ref,variable,element,field,element,string,field,name,set,eip,option,eip,options,string,prefix,elements,element,utils,processing,env,get,element,utils,if,expression,equals,field,name,string,kind,expression,string,name,element,ref,name,if,is,null,or,empty,name,default,equals,name,name,field,name,name,prefix,name,type,mirror,field,type,field,element,as,type,string,field,type,name,field,type,to,string,string,doc,comment,find,java,doc,element,utils,field,element,field,name,name,original,class,type,true,boolean,as,predicate,field,element,get,annotation,as,predicate,class,null,if,as,predicate,as,predicate,class,element,get,annotation,as,predicate,class,null,if,as,predicate,as,predicate,original,class,type,get,annotation,as,predicate,class,null,set,string,one,of,types,new,tree,set,for,string,language,type,element,languages,find,type,element,processing,env,round,env,language,string,super,class,name,canonical,class,name,languages,to,string,set,type,element,children,new,linked,hash,set,find,type,element,children,processing,env,round,env,children,super,class,name,for,type,element,child,children,xml,root,element,root,element,child,get,annotation,xml,root,element,class,if,root,element,null,string,child,name,root,element,name,one,of,types,add,child,name,string,display,name,null,metadata,metadata,field,element,get,annotation,metadata,class,if,metadata,null,display,name,metadata,display,name,boolean,deprecated,field,element,get,annotation,deprecated,class,null,string,deprecation,note,null,if,metadata,null,deprecation,note,metadata,deprecation,note,eip,option,ep,new,eip,option,name,display,name,kind,field,type,name,true,doc,comment,deprecated,deprecation,note,false,null,true,one,of,types,as,predicate,eip,options,add,ep
CoreEipAnnotationProcessorHelper -> private boolean supportOutputs(TypeElement classElement);1532078194;Whether the class supports outputs._<p/>_There are some classes which does not support outputs, even though they have a outputs element.;private boolean supportOutputs(TypeElement classElement) {_        String superclass = canonicalClassName(classElement.getSuperclass().toString())__        return !"org.apache.camel.model.NoOutputExpressionNode".equals(superclass)__    };whether,the,class,supports,outputs,p,there,are,some,classes,which,does,not,support,outputs,even,though,they,have,a,outputs,element;private,boolean,support,outputs,type,element,class,element,string,superclass,canonical,class,name,class,element,get,superclass,to,string,return,org,apache,camel,model,no,output,expression,node,equals,superclass
CoreEipAnnotationProcessorHelper -> private boolean supportOutputs(TypeElement classElement);1547240981;Whether the class supports outputs._<p/>_There are some classes which does not support outputs, even though they have a outputs element.;private boolean supportOutputs(TypeElement classElement) {_        String superclass = canonicalClassName(classElement.getSuperclass().toString())__        return !"org.apache.camel.model.NoOutputExpressionNode".equals(superclass)__    };whether,the,class,supports,outputs,p,there,are,some,classes,which,does,not,support,outputs,even,though,they,have,a,outputs,element;private,boolean,support,outputs,type,element,class,element,string,superclass,canonical,class,name,class,element,get,superclass,to,string,return,org,apache,camel,model,no,output,expression,node,equals,superclass
CoreEipAnnotationProcessorHelper -> private boolean supportOutputs(TypeElement classElement);1547240981;Whether the class supports outputs._<p/>_There are some classes which does not support outputs, even though they have a outputs element.;private boolean supportOutputs(TypeElement classElement) {_        String superclass = canonicalClassName(classElement.getSuperclass().toString())__        return !"org.apache.camel.model.NoOutputExpressionNode".equals(superclass)__    };whether,the,class,supports,outputs,p,there,are,some,classes,which,does,not,support,outputs,even,though,they,have,a,outputs,element;private,boolean,support,outputs,type,element,class,element,string,superclass,canonical,class,name,class,element,get,superclass,to,string,return,org,apache,camel,model,no,output,expression,node,equals,superclass
CoreEipAnnotationProcessorHelper -> private boolean supportOutputs(TypeElement classElement);1547241294;Whether the class supports outputs._<p/>_There are some classes which does not support outputs, even though they have a outputs element.;private boolean supportOutputs(TypeElement classElement) {_        String superclass = canonicalClassName(classElement.getSuperclass().toString())__        return !"org.apache.camel.model.NoOutputExpressionNode".equals(superclass)__    };whether,the,class,supports,outputs,p,there,are,some,classes,which,does,not,support,outputs,even,though,they,have,a,outputs,element;private,boolean,support,outputs,type,element,class,element,string,superclass,canonical,class,name,class,element,get,superclass,to,string,return,org,apache,camel,model,no,output,expression,node,equals,superclass
CoreEipAnnotationProcessorHelper -> private boolean supportOutputs(TypeElement classElement);1550051587;Whether the class supports outputs._<p/>_There are some classes which does not support outputs, even though they_have a outputs element.;private boolean supportOutputs(TypeElement classElement) {_        String superclass = canonicalClassName(classElement.getSuperclass().toString())__        return !"org.apache.camel.model.NoOutputExpressionNode".equals(superclass)__    };whether,the,class,supports,outputs,p,there,are,some,classes,which,does,not,support,outputs,even,though,they,have,a,outputs,element;private,boolean,support,outputs,type,element,class,element,string,superclass,canonical,class,name,class,element,get,superclass,to,string,return,org,apache,camel,model,no,output,expression,node,equals,superclass
CoreEipAnnotationProcessorHelper -> private void processVerbs(ProcessingEnvironment processingEnv, RoundEnvironment roundEnv, TypeElement originalClassType, XmlElementRef elementRef,                               VariableElement fieldElement, String fieldName, Set<EipOption> eipOptions, String prefix);1532078194;Special for processing an @XmlElementRef verbs field (rest-dsl);private void processVerbs(ProcessingEnvironment processingEnv, RoundEnvironment roundEnv, TypeElement originalClassType, XmlElementRef elementRef,_                              VariableElement fieldElement, String fieldName, Set<EipOption> eipOptions, String prefix) {__        Elements elementUtils = processingEnv.getElementUtils()___        if ("verbs".equals(fieldName) && supportOutputs(originalClassType)) {_            String kind = "element"__            String name = elementRef.name()__            if (isNullOrEmpty(name) || "##default".equals(name)) {_                name = fieldName__            }_            name = prefix + name__            TypeMirror fieldType = fieldElement.asType()__            String fieldTypeName = fieldType.toString()___            String docComment = findJavaDoc(elementUtils, fieldElement, fieldName, name, originalClassType, true)___            _            Set<String> oneOfTypes = new TreeSet<>()__            _            Set<TypeElement> children = new LinkedHashSet<>()__            for (String superclass : ONE_OF_VERBS) {_                findTypeElementChildren(processingEnv, roundEnv, children, superclass)__            }_            for (TypeElement child : children) {_                XmlRootElement rootElement = child.getAnnotation(XmlRootElement.class)__                if (rootElement != null) {_                    String childName = rootElement.name()__                    if (childName != null) {_                        oneOfTypes.add(childName)__                    }_                }_            }_            String displayName = null__            Metadata metadata = fieldElement.getAnnotation(Metadata.class)__            if (metadata != null) {_                displayName = metadata.displayName()__            }_            boolean deprecated = fieldElement.getAnnotation(Deprecated.class) != null__            String deprecationNote = null__            if (metadata != null) {_                deprecationNote = metadata.deprecationNode()__            }__            EipOption ep = new EipOption(name, displayName, kind, fieldTypeName, true, "", docComment, deprecated, deprecationNote, false, null, true, oneOfTypes, false)__            eipOptions.add(ep)__        }_    };special,for,processing,an,xml,element,ref,verbs,field,rest,dsl;private,void,process,verbs,processing,environment,processing,env,round,environment,round,env,type,element,original,class,type,xml,element,ref,element,ref,variable,element,field,element,string,field,name,set,eip,option,eip,options,string,prefix,elements,element,utils,processing,env,get,element,utils,if,verbs,equals,field,name,support,outputs,original,class,type,string,kind,element,string,name,element,ref,name,if,is,null,or,empty,name,default,equals,name,name,field,name,name,prefix,name,type,mirror,field,type,field,element,as,type,string,field,type,name,field,type,to,string,string,doc,comment,find,java,doc,element,utils,field,element,field,name,name,original,class,type,true,set,string,one,of,types,new,tree,set,set,type,element,children,new,linked,hash,set,for,string,superclass,find,type,element,children,processing,env,round,env,children,superclass,for,type,element,child,children,xml,root,element,root,element,child,get,annotation,xml,root,element,class,if,root,element,null,string,child,name,root,element,name,if,child,name,null,one,of,types,add,child,name,string,display,name,null,metadata,metadata,field,element,get,annotation,metadata,class,if,metadata,null,display,name,metadata,display,name,boolean,deprecated,field,element,get,annotation,deprecated,class,null,string,deprecation,note,null,if,metadata,null,deprecation,note,metadata,deprecation,node,eip,option,ep,new,eip,option,name,display,name,kind,field,type,name,true,doc,comment,deprecated,deprecation,note,false,null,true,one,of,types,false,eip,options,add,ep
CoreEipAnnotationProcessorHelper -> private void processVerbs(ProcessingEnvironment processingEnv, RoundEnvironment roundEnv, TypeElement originalClassType, XmlElementRef elementRef,                               VariableElement fieldElement, String fieldName, Set<EipOption> eipOptions, String prefix);1547240981;Special for processing an @XmlElementRef verbs field (rest-dsl);private void processVerbs(ProcessingEnvironment processingEnv, RoundEnvironment roundEnv, TypeElement originalClassType, XmlElementRef elementRef,_                              VariableElement fieldElement, String fieldName, Set<EipOption> eipOptions, String prefix) {__        Elements elementUtils = processingEnv.getElementUtils()___        if ("verbs".equals(fieldName) && supportOutputs(originalClassType)) {_            String kind = "element"__            String name = elementRef.name()__            if (isNullOrEmpty(name) || "##default".equals(name)) {_                name = fieldName__            }_            name = prefix + name__            TypeMirror fieldType = fieldElement.asType()__            String fieldTypeName = fieldType.toString()___            String docComment = findJavaDoc(elementUtils, fieldElement, fieldName, name, originalClassType, true)___            _            Set<String> oneOfTypes = new TreeSet<>()__            _            Set<TypeElement> children = new LinkedHashSet<>()__            for (String superclass : ONE_OF_VERBS) {_                findTypeElementChildren(processingEnv, roundEnv, children, superclass)__            }_            for (TypeElement child : children) {_                XmlRootElement rootElement = child.getAnnotation(XmlRootElement.class)__                if (rootElement != null) {_                    String childName = rootElement.name()__                    if (childName != null) {_                        oneOfTypes.add(childName)__                    }_                }_            }_            String displayName = null__            Metadata metadata = fieldElement.getAnnotation(Metadata.class)__            if (metadata != null) {_                displayName = metadata.displayName()__            }_            boolean deprecated = fieldElement.getAnnotation(Deprecated.class) != null__            String deprecationNote = null__            if (metadata != null) {_                deprecationNote = metadata.deprecationNode()__            }__            EipOption ep = new EipOption(name, displayName, kind, fieldTypeName, true, "", docComment, deprecated, deprecationNote, false, null, true, oneOfTypes, false)__            eipOptions.add(ep)__        }_    };special,for,processing,an,xml,element,ref,verbs,field,rest,dsl;private,void,process,verbs,processing,environment,processing,env,round,environment,round,env,type,element,original,class,type,xml,element,ref,element,ref,variable,element,field,element,string,field,name,set,eip,option,eip,options,string,prefix,elements,element,utils,processing,env,get,element,utils,if,verbs,equals,field,name,support,outputs,original,class,type,string,kind,element,string,name,element,ref,name,if,is,null,or,empty,name,default,equals,name,name,field,name,name,prefix,name,type,mirror,field,type,field,element,as,type,string,field,type,name,field,type,to,string,string,doc,comment,find,java,doc,element,utils,field,element,field,name,name,original,class,type,true,set,string,one,of,types,new,tree,set,set,type,element,children,new,linked,hash,set,for,string,superclass,find,type,element,children,processing,env,round,env,children,superclass,for,type,element,child,children,xml,root,element,root,element,child,get,annotation,xml,root,element,class,if,root,element,null,string,child,name,root,element,name,if,child,name,null,one,of,types,add,child,name,string,display,name,null,metadata,metadata,field,element,get,annotation,metadata,class,if,metadata,null,display,name,metadata,display,name,boolean,deprecated,field,element,get,annotation,deprecated,class,null,string,deprecation,note,null,if,metadata,null,deprecation,note,metadata,deprecation,node,eip,option,ep,new,eip,option,name,display,name,kind,field,type,name,true,doc,comment,deprecated,deprecation,note,false,null,true,one,of,types,false,eip,options,add,ep
CoreEipAnnotationProcessorHelper -> private void processVerbs(ProcessingEnvironment processingEnv, RoundEnvironment roundEnv, TypeElement originalClassType, XmlElementRef elementRef,                               VariableElement fieldElement, String fieldName, Set<EipOption> eipOptions, String prefix);1547240981;Special for processing an @XmlElementRef verbs field (rest-dsl);private void processVerbs(ProcessingEnvironment processingEnv, RoundEnvironment roundEnv, TypeElement originalClassType, XmlElementRef elementRef,_                              VariableElement fieldElement, String fieldName, Set<EipOption> eipOptions, String prefix) {__        Elements elementUtils = processingEnv.getElementUtils()___        if ("verbs".equals(fieldName) && supportOutputs(originalClassType)) {_            String kind = "element"__            String name = elementRef.name()__            if (isNullOrEmpty(name) || "##default".equals(name)) {_                name = fieldName__            }_            name = prefix + name__            TypeMirror fieldType = fieldElement.asType()__            String fieldTypeName = fieldType.toString()___            String docComment = findJavaDoc(elementUtils, fieldElement, fieldName, name, originalClassType, true)___            _            Set<String> oneOfTypes = new TreeSet<>()__            _            Set<TypeElement> children = new LinkedHashSet<>()__            for (String superclass : ONE_OF_VERBS) {_                findTypeElementChildren(processingEnv, roundEnv, children, superclass)__            }_            for (TypeElement child : children) {_                XmlRootElement rootElement = child.getAnnotation(XmlRootElement.class)__                if (rootElement != null) {_                    String childName = rootElement.name()__                    if (childName != null) {_                        oneOfTypes.add(childName)__                    }_                }_            }_            String displayName = null__            Metadata metadata = fieldElement.getAnnotation(Metadata.class)__            if (metadata != null) {_                displayName = metadata.displayName()__            }_            boolean deprecated = fieldElement.getAnnotation(Deprecated.class) != null__            String deprecationNote = null__            if (metadata != null) {_                deprecationNote = metadata.deprecationNote()__            }__            EipOption ep = new EipOption(name, displayName, kind, fieldTypeName, true, "", docComment, deprecated, deprecationNote, false, null, true, oneOfTypes, false)__            eipOptions.add(ep)__        }_    };special,for,processing,an,xml,element,ref,verbs,field,rest,dsl;private,void,process,verbs,processing,environment,processing,env,round,environment,round,env,type,element,original,class,type,xml,element,ref,element,ref,variable,element,field,element,string,field,name,set,eip,option,eip,options,string,prefix,elements,element,utils,processing,env,get,element,utils,if,verbs,equals,field,name,support,outputs,original,class,type,string,kind,element,string,name,element,ref,name,if,is,null,or,empty,name,default,equals,name,name,field,name,name,prefix,name,type,mirror,field,type,field,element,as,type,string,field,type,name,field,type,to,string,string,doc,comment,find,java,doc,element,utils,field,element,field,name,name,original,class,type,true,set,string,one,of,types,new,tree,set,set,type,element,children,new,linked,hash,set,for,string,superclass,find,type,element,children,processing,env,round,env,children,superclass,for,type,element,child,children,xml,root,element,root,element,child,get,annotation,xml,root,element,class,if,root,element,null,string,child,name,root,element,name,if,child,name,null,one,of,types,add,child,name,string,display,name,null,metadata,metadata,field,element,get,annotation,metadata,class,if,metadata,null,display,name,metadata,display,name,boolean,deprecated,field,element,get,annotation,deprecated,class,null,string,deprecation,note,null,if,metadata,null,deprecation,note,metadata,deprecation,note,eip,option,ep,new,eip,option,name,display,name,kind,field,type,name,true,doc,comment,deprecated,deprecation,note,false,null,true,one,of,types,false,eip,options,add,ep
CoreEipAnnotationProcessorHelper -> private void processVerbs(ProcessingEnvironment processingEnv, RoundEnvironment roundEnv, TypeElement originalClassType, XmlElementRef elementRef,                               VariableElement fieldElement, String fieldName, Set<EipOption> eipOptions, String prefix);1547241294;Special for processing an @XmlElementRef verbs field (rest-dsl);private void processVerbs(ProcessingEnvironment processingEnv, RoundEnvironment roundEnv, TypeElement originalClassType, XmlElementRef elementRef,_                              VariableElement fieldElement, String fieldName, Set<EipOption> eipOptions, String prefix) {__        Elements elementUtils = processingEnv.getElementUtils()___        if ("verbs".equals(fieldName) && supportOutputs(originalClassType)) {_            String kind = "element"__            String name = elementRef.name()__            if (isNullOrEmpty(name) || "##default".equals(name)) {_                name = fieldName__            }_            name = prefix + name__            TypeMirror fieldType = fieldElement.asType()__            String fieldTypeName = fieldType.toString()___            String docComment = findJavaDoc(elementUtils, fieldElement, fieldName, name, originalClassType, true)___            _            Set<String> oneOfTypes = new TreeSet<>()__            _            Set<TypeElement> children = new LinkedHashSet<>()__            for (String superclass : ONE_OF_VERBS) {_                findTypeElementChildren(processingEnv, roundEnv, children, superclass)__            }_            for (TypeElement child : children) {_                XmlRootElement rootElement = child.getAnnotation(XmlRootElement.class)__                if (rootElement != null) {_                    String childName = rootElement.name()__                    if (childName != null) {_                        oneOfTypes.add(childName)__                    }_                }_            }_            String displayName = null__            Metadata metadata = fieldElement.getAnnotation(Metadata.class)__            if (metadata != null) {_                displayName = metadata.displayName()__            }_            boolean deprecated = fieldElement.getAnnotation(Deprecated.class) != null__            String deprecationNote = null__            if (metadata != null) {_                deprecationNote = metadata.deprecationNote()__            }__            EipOption ep = new EipOption(name, displayName, kind, fieldTypeName, true, "", docComment, deprecated, deprecationNote, false, null, true, oneOfTypes, false)__            eipOptions.add(ep)__        }_    };special,for,processing,an,xml,element,ref,verbs,field,rest,dsl;private,void,process,verbs,processing,environment,processing,env,round,environment,round,env,type,element,original,class,type,xml,element,ref,element,ref,variable,element,field,element,string,field,name,set,eip,option,eip,options,string,prefix,elements,element,utils,processing,env,get,element,utils,if,verbs,equals,field,name,support,outputs,original,class,type,string,kind,element,string,name,element,ref,name,if,is,null,or,empty,name,default,equals,name,name,field,name,name,prefix,name,type,mirror,field,type,field,element,as,type,string,field,type,name,field,type,to,string,string,doc,comment,find,java,doc,element,utils,field,element,field,name,name,original,class,type,true,set,string,one,of,types,new,tree,set,set,type,element,children,new,linked,hash,set,for,string,superclass,find,type,element,children,processing,env,round,env,children,superclass,for,type,element,child,children,xml,root,element,root,element,child,get,annotation,xml,root,element,class,if,root,element,null,string,child,name,root,element,name,if,child,name,null,one,of,types,add,child,name,string,display,name,null,metadata,metadata,field,element,get,annotation,metadata,class,if,metadata,null,display,name,metadata,display,name,boolean,deprecated,field,element,get,annotation,deprecated,class,null,string,deprecation,note,null,if,metadata,null,deprecation,note,metadata,deprecation,note,eip,option,ep,new,eip,option,name,display,name,kind,field,type,name,true,doc,comment,deprecated,deprecation,note,false,null,true,one,of,types,false,eip,options,add,ep
CoreEipAnnotationProcessorHelper -> private void processOutputs(ProcessingEnvironment processingEnv, RoundEnvironment roundEnv, TypeElement originalClassType, XmlElementRef elementRef,                                 VariableElement fieldElement, String fieldName, Set<EipOption> eipOptions, String prefix);1532078194;Special for processing an @XmlElementRef outputs field;private void processOutputs(ProcessingEnvironment processingEnv, RoundEnvironment roundEnv, TypeElement originalClassType, XmlElementRef elementRef,_                                VariableElement fieldElement, String fieldName, Set<EipOption> eipOptions, String prefix) {_        if ("outputs".equals(fieldName) && supportOutputs(originalClassType)) {_            String kind = "element"__            String name = elementRef.name()__            if (isNullOrEmpty(name) || "##default".equals(name)) {_                name = fieldName__            }_            name = prefix + name__            TypeMirror fieldType = fieldElement.asType()__            String fieldTypeName = fieldType.toString()___            _            Set<String> oneOfTypes = new TreeSet<>()__            _            Set<TypeElement> children = new LinkedHashSet<>()__            for (String superclass : ONE_OF_OUTPUTS) {_                findTypeElementChildren(processingEnv, roundEnv, children, superclass)__            }_            for (TypeElement child : children) {_                XmlRootElement rootElement = child.getAnnotation(XmlRootElement.class)__                if (rootElement != null) {_                    String childName = rootElement.name()__                    oneOfTypes.add(childName)__                }_            }__            _            oneOfTypes.remove("route")__            String displayName = null__            Metadata metadata = fieldElement.getAnnotation(Metadata.class)__            if (metadata != null) {_                displayName = metadata.displayName()__            }_            boolean deprecated = fieldElement.getAnnotation(Deprecated.class) != null__            String deprecationNote = null__            if (metadata != null) {_                deprecationNote = metadata.deprecationNode()__            }__            EipOption ep = new EipOption(name, displayName, kind, fieldTypeName, true, "", "", deprecated, deprecationNote, false, null, true, oneOfTypes, false)__            eipOptions.add(ep)__        }_    };special,for,processing,an,xml,element,ref,outputs,field;private,void,process,outputs,processing,environment,processing,env,round,environment,round,env,type,element,original,class,type,xml,element,ref,element,ref,variable,element,field,element,string,field,name,set,eip,option,eip,options,string,prefix,if,outputs,equals,field,name,support,outputs,original,class,type,string,kind,element,string,name,element,ref,name,if,is,null,or,empty,name,default,equals,name,name,field,name,name,prefix,name,type,mirror,field,type,field,element,as,type,string,field,type,name,field,type,to,string,set,string,one,of,types,new,tree,set,set,type,element,children,new,linked,hash,set,for,string,superclass,find,type,element,children,processing,env,round,env,children,superclass,for,type,element,child,children,xml,root,element,root,element,child,get,annotation,xml,root,element,class,if,root,element,null,string,child,name,root,element,name,one,of,types,add,child,name,one,of,types,remove,route,string,display,name,null,metadata,metadata,field,element,get,annotation,metadata,class,if,metadata,null,display,name,metadata,display,name,boolean,deprecated,field,element,get,annotation,deprecated,class,null,string,deprecation,note,null,if,metadata,null,deprecation,note,metadata,deprecation,node,eip,option,ep,new,eip,option,name,display,name,kind,field,type,name,true,deprecated,deprecation,note,false,null,true,one,of,types,false,eip,options,add,ep
CoreEipAnnotationProcessorHelper -> private void processOutputs(ProcessingEnvironment processingEnv, RoundEnvironment roundEnv, TypeElement originalClassType, XmlElementRef elementRef,                                 VariableElement fieldElement, String fieldName, Set<EipOption> eipOptions, String prefix);1547240981;Special for processing an @XmlElementRef outputs field;private void processOutputs(ProcessingEnvironment processingEnv, RoundEnvironment roundEnv, TypeElement originalClassType, XmlElementRef elementRef,_                                VariableElement fieldElement, String fieldName, Set<EipOption> eipOptions, String prefix) {_        if ("outputs".equals(fieldName) && supportOutputs(originalClassType)) {_            String kind = "element"__            String name = elementRef.name()__            if (isNullOrEmpty(name) || "##default".equals(name)) {_                name = fieldName__            }_            name = prefix + name__            TypeMirror fieldType = fieldElement.asType()__            String fieldTypeName = fieldType.toString()___            _            Set<String> oneOfTypes = new TreeSet<>()__            _            Set<TypeElement> children = new LinkedHashSet<>()__            for (String superclass : ONE_OF_OUTPUTS) {_                findTypeElementChildren(processingEnv, roundEnv, children, superclass)__            }_            for (TypeElement child : children) {_                XmlRootElement rootElement = child.getAnnotation(XmlRootElement.class)__                if (rootElement != null) {_                    String childName = rootElement.name()__                    oneOfTypes.add(childName)__                }_            }__            _            oneOfTypes.remove("route")__            String displayName = null__            Metadata metadata = fieldElement.getAnnotation(Metadata.class)__            if (metadata != null) {_                displayName = metadata.displayName()__            }_            boolean deprecated = fieldElement.getAnnotation(Deprecated.class) != null__            String deprecationNote = null__            if (metadata != null) {_                deprecationNote = metadata.deprecationNode()__            }__            EipOption ep = new EipOption(name, displayName, kind, fieldTypeName, true, "", "", deprecated, deprecationNote, false, null, true, oneOfTypes, false)__            eipOptions.add(ep)__        }_    };special,for,processing,an,xml,element,ref,outputs,field;private,void,process,outputs,processing,environment,processing,env,round,environment,round,env,type,element,original,class,type,xml,element,ref,element,ref,variable,element,field,element,string,field,name,set,eip,option,eip,options,string,prefix,if,outputs,equals,field,name,support,outputs,original,class,type,string,kind,element,string,name,element,ref,name,if,is,null,or,empty,name,default,equals,name,name,field,name,name,prefix,name,type,mirror,field,type,field,element,as,type,string,field,type,name,field,type,to,string,set,string,one,of,types,new,tree,set,set,type,element,children,new,linked,hash,set,for,string,superclass,find,type,element,children,processing,env,round,env,children,superclass,for,type,element,child,children,xml,root,element,root,element,child,get,annotation,xml,root,element,class,if,root,element,null,string,child,name,root,element,name,one,of,types,add,child,name,one,of,types,remove,route,string,display,name,null,metadata,metadata,field,element,get,annotation,metadata,class,if,metadata,null,display,name,metadata,display,name,boolean,deprecated,field,element,get,annotation,deprecated,class,null,string,deprecation,note,null,if,metadata,null,deprecation,note,metadata,deprecation,node,eip,option,ep,new,eip,option,name,display,name,kind,field,type,name,true,deprecated,deprecation,note,false,null,true,one,of,types,false,eip,options,add,ep
CoreEipAnnotationProcessorHelper -> private void processOutputs(ProcessingEnvironment processingEnv, RoundEnvironment roundEnv, TypeElement originalClassType, XmlElementRef elementRef,                                 VariableElement fieldElement, String fieldName, Set<EipOption> eipOptions, String prefix);1547240981;Special for processing an @XmlElementRef outputs field;private void processOutputs(ProcessingEnvironment processingEnv, RoundEnvironment roundEnv, TypeElement originalClassType, XmlElementRef elementRef,_                                VariableElement fieldElement, String fieldName, Set<EipOption> eipOptions, String prefix) {_        if ("outputs".equals(fieldName) && supportOutputs(originalClassType)) {_            String kind = "element"__            String name = elementRef.name()__            if (isNullOrEmpty(name) || "##default".equals(name)) {_                name = fieldName__            }_            name = prefix + name__            TypeMirror fieldType = fieldElement.asType()__            String fieldTypeName = fieldType.toString()___            _            Set<String> oneOfTypes = new TreeSet<>()__            _            Set<TypeElement> children = new LinkedHashSet<>()__            for (String superclass : ONE_OF_OUTPUTS) {_                findTypeElementChildren(processingEnv, roundEnv, children, superclass)__            }_            for (TypeElement child : children) {_                XmlRootElement rootElement = child.getAnnotation(XmlRootElement.class)__                if (rootElement != null) {_                    String childName = rootElement.name()__                    oneOfTypes.add(childName)__                }_            }__            _            oneOfTypes.remove("route")__            String displayName = null__            Metadata metadata = fieldElement.getAnnotation(Metadata.class)__            if (metadata != null) {_                displayName = metadata.displayName()__            }_            boolean deprecated = fieldElement.getAnnotation(Deprecated.class) != null__            String deprecationNote = null__            if (metadata != null) {_                deprecationNote = metadata.deprecationNote()__            }__            EipOption ep = new EipOption(name, displayName, kind, fieldTypeName, true, "", "", deprecated, deprecationNote, false, null, true, oneOfTypes, false)__            eipOptions.add(ep)__        }_    };special,for,processing,an,xml,element,ref,outputs,field;private,void,process,outputs,processing,environment,processing,env,round,environment,round,env,type,element,original,class,type,xml,element,ref,element,ref,variable,element,field,element,string,field,name,set,eip,option,eip,options,string,prefix,if,outputs,equals,field,name,support,outputs,original,class,type,string,kind,element,string,name,element,ref,name,if,is,null,or,empty,name,default,equals,name,name,field,name,name,prefix,name,type,mirror,field,type,field,element,as,type,string,field,type,name,field,type,to,string,set,string,one,of,types,new,tree,set,set,type,element,children,new,linked,hash,set,for,string,superclass,find,type,element,children,processing,env,round,env,children,superclass,for,type,element,child,children,xml,root,element,root,element,child,get,annotation,xml,root,element,class,if,root,element,null,string,child,name,root,element,name,one,of,types,add,child,name,one,of,types,remove,route,string,display,name,null,metadata,metadata,field,element,get,annotation,metadata,class,if,metadata,null,display,name,metadata,display,name,boolean,deprecated,field,element,get,annotation,deprecated,class,null,string,deprecation,note,null,if,metadata,null,deprecation,note,metadata,deprecation,note,eip,option,ep,new,eip,option,name,display,name,kind,field,type,name,true,deprecated,deprecation,note,false,null,true,one,of,types,false,eip,options,add,ep
CoreEipAnnotationProcessorHelper -> private void processOutputs(ProcessingEnvironment processingEnv, RoundEnvironment roundEnv, TypeElement originalClassType, XmlElementRef elementRef,                                 VariableElement fieldElement, String fieldName, Set<EipOption> eipOptions, String prefix);1547241294;Special for processing an @XmlElementRef outputs field;private void processOutputs(ProcessingEnvironment processingEnv, RoundEnvironment roundEnv, TypeElement originalClassType, XmlElementRef elementRef,_                                VariableElement fieldElement, String fieldName, Set<EipOption> eipOptions, String prefix) {_        if ("outputs".equals(fieldName) && supportOutputs(originalClassType)) {_            String kind = "element"__            String name = elementRef.name()__            if (isNullOrEmpty(name) || "##default".equals(name)) {_                name = fieldName__            }_            name = prefix + name__            TypeMirror fieldType = fieldElement.asType()__            String fieldTypeName = fieldType.toString()___            _            Set<String> oneOfTypes = new TreeSet<>()__            _            Set<TypeElement> children = new LinkedHashSet<>()__            for (String superclass : ONE_OF_OUTPUTS) {_                findTypeElementChildren(processingEnv, roundEnv, children, superclass)__            }_            for (TypeElement child : children) {_                XmlRootElement rootElement = child.getAnnotation(XmlRootElement.class)__                if (rootElement != null) {_                    String childName = rootElement.name()__                    oneOfTypes.add(childName)__                }_            }__            _            oneOfTypes.remove("route")__            String displayName = null__            Metadata metadata = fieldElement.getAnnotation(Metadata.class)__            if (metadata != null) {_                displayName = metadata.displayName()__            }_            boolean deprecated = fieldElement.getAnnotation(Deprecated.class) != null__            String deprecationNote = null__            if (metadata != null) {_                deprecationNote = metadata.deprecationNote()__            }__            EipOption ep = new EipOption(name, displayName, kind, fieldTypeName, true, "", "", deprecated, deprecationNote, false, null, true, oneOfTypes, false)__            eipOptions.add(ep)__        }_    };special,for,processing,an,xml,element,ref,outputs,field;private,void,process,outputs,processing,environment,processing,env,round,environment,round,env,type,element,original,class,type,xml,element,ref,element,ref,variable,element,field,element,string,field,name,set,eip,option,eip,options,string,prefix,if,outputs,equals,field,name,support,outputs,original,class,type,string,kind,element,string,name,element,ref,name,if,is,null,or,empty,name,default,equals,name,name,field,name,name,prefix,name,type,mirror,field,type,field,element,as,type,string,field,type,name,field,type,to,string,set,string,one,of,types,new,tree,set,set,type,element,children,new,linked,hash,set,for,string,superclass,find,type,element,children,processing,env,round,env,children,superclass,for,type,element,child,children,xml,root,element,root,element,child,get,annotation,xml,root,element,class,if,root,element,null,string,child,name,root,element,name,one,of,types,add,child,name,one,of,types,remove,route,string,display,name,null,metadata,metadata,field,element,get,annotation,metadata,class,if,metadata,null,display,name,metadata,display,name,boolean,deprecated,field,element,get,annotation,deprecated,class,null,string,deprecation,note,null,if,metadata,null,deprecation,note,metadata,deprecation,note,eip,option,ep,new,eip,option,name,display,name,kind,field,type,name,true,deprecated,deprecation,note,false,null,true,one,of,types,false,eip,options,add,ep
CoreEipAnnotationProcessorHelper -> private void processOutputs(ProcessingEnvironment processingEnv, RoundEnvironment roundEnv, TypeElement originalClassType, XmlElementRef elementRef,                                 VariableElement fieldElement, String fieldName, Set<EipOption> eipOptions, String prefix);1550051587;Special for processing an @XmlElementRef outputs field;private void processOutputs(ProcessingEnvironment processingEnv, RoundEnvironment roundEnv, TypeElement originalClassType, XmlElementRef elementRef,_                                VariableElement fieldElement, String fieldName, Set<EipOption> eipOptions, String prefix) {_        if ("outputs".equals(fieldName) && supportOutputs(originalClassType)) {_            String kind = "element"__            String name = elementRef.name()__            if (isNullOrEmpty(name) || "##default".equals(name)) {_                name = fieldName__            }_            name = prefix + name__            TypeMirror fieldType = fieldElement.asType()__            String fieldTypeName = fieldType.toString()___            _            Set<String> oneOfTypes = new TreeSet<>()__            _            Set<TypeElement> children = new LinkedHashSet<>()__            for (String superclass : ONE_OF_OUTPUTS) {_                findTypeElementChildren(processingEnv, roundEnv, children, superclass)__            }_            for (TypeElement child : children) {_                XmlRootElement rootElement = child.getAnnotation(XmlRootElement.class)__                if (rootElement != null) {_                    String childName = rootElement.name()__                    oneOfTypes.add(childName)__                }_            }__            _            oneOfTypes.remove("route")__            String displayName = null__            Metadata metadata = fieldElement.getAnnotation(Metadata.class)__            if (metadata != null) {_                displayName = metadata.displayName()__            }_            boolean deprecated = fieldElement.getAnnotation(Deprecated.class) != null__            String deprecationNote = null__            if (metadata != null) {_                deprecationNote = metadata.deprecationNote()__            }__            EipOption ep = new EipOption(name, displayName, kind, fieldTypeName, true, "", "", deprecated, deprecationNote, false, null, true, oneOfTypes, false)__            eipOptions.add(ep)__        }_    };special,for,processing,an,xml,element,ref,outputs,field;private,void,process,outputs,processing,environment,processing,env,round,environment,round,env,type,element,original,class,type,xml,element,ref,element,ref,variable,element,field,element,string,field,name,set,eip,option,eip,options,string,prefix,if,outputs,equals,field,name,support,outputs,original,class,type,string,kind,element,string,name,element,ref,name,if,is,null,or,empty,name,default,equals,name,name,field,name,name,prefix,name,type,mirror,field,type,field,element,as,type,string,field,type,name,field,type,to,string,set,string,one,of,types,new,tree,set,set,type,element,children,new,linked,hash,set,for,string,superclass,find,type,element,children,processing,env,round,env,children,superclass,for,type,element,child,children,xml,root,element,root,element,child,get,annotation,xml,root,element,class,if,root,element,null,string,child,name,root,element,name,one,of,types,add,child,name,one,of,types,remove,route,string,display,name,null,metadata,metadata,field,element,get,annotation,metadata,class,if,metadata,null,display,name,metadata,display,name,boolean,deprecated,field,element,get,annotation,deprecated,class,null,string,deprecation,note,null,if,metadata,null,deprecation,note,metadata,deprecation,note,eip,option,ep,new,eip,option,name,display,name,kind,field,type,name,true,deprecated,deprecation,note,false,null,true,one,of,types,false,eip,options,add,ep
CoreEipAnnotationProcessorHelper -> private void processIdentified(ProcessingEnvironment processingEnv, RoundEnvironment roundEnv, TypeElement originalClassType, TypeElement classElement,                                    Set<EipOption> eipOptions, String prefix);1532078194;Special for process the OptionalIdentifiedDefinition;private void processIdentified(ProcessingEnvironment processingEnv, RoundEnvironment roundEnv, TypeElement originalClassType, TypeElement classElement,_                                   Set<EipOption> eipOptions, String prefix) {__        Elements elementUtils = processingEnv.getElementUtils()___        _        String docComment = findJavaDoc(elementUtils, null, "id", null, classElement, true)__        EipOption ep = new EipOption("id", "Id", "attribute", "java.lang.String", false, "", docComment,_            false, null, false, null, false, null, false)__        eipOptions.add(ep)___        _        docComment = findJavaDoc(elementUtils, null, "description", null, classElement, true)__        ep = new EipOption("description", "Description", "element", "org.apache.camel.model.DescriptionDefinition", false, "", docComment,_            false, null, false, null, false, null, false)__        eipOptions.add(ep)___        _        if (!skipUnwanted) {_            _            docComment = findJavaDoc(elementUtils, null, "customId", null, classElement, true)__            ep = new EipOption("customId", "Custom Id", "attribute", "java.lang.String", false, "", docComment,_                false, null, false, null, false, null, false)__            eipOptions.add(ep)__        }_    };special,for,process,the,optional,identified,definition;private,void,process,identified,processing,environment,processing,env,round,environment,round,env,type,element,original,class,type,type,element,class,element,set,eip,option,eip,options,string,prefix,elements,element,utils,processing,env,get,element,utils,string,doc,comment,find,java,doc,element,utils,null,id,null,class,element,true,eip,option,ep,new,eip,option,id,id,attribute,java,lang,string,false,doc,comment,false,null,false,null,false,null,false,eip,options,add,ep,doc,comment,find,java,doc,element,utils,null,description,null,class,element,true,ep,new,eip,option,description,description,element,org,apache,camel,model,description,definition,false,doc,comment,false,null,false,null,false,null,false,eip,options,add,ep,if,skip,unwanted,doc,comment,find,java,doc,element,utils,null,custom,id,null,class,element,true,ep,new,eip,option,custom,id,custom,id,attribute,java,lang,string,false,doc,comment,false,null,false,null,false,null,false,eip,options,add,ep
CoreEipAnnotationProcessorHelper -> private void processIdentified(ProcessingEnvironment processingEnv, RoundEnvironment roundEnv, TypeElement originalClassType, TypeElement classElement,                                    Set<EipOption> eipOptions, String prefix);1547240981;Special for process the OptionalIdentifiedDefinition;private void processIdentified(ProcessingEnvironment processingEnv, RoundEnvironment roundEnv, TypeElement originalClassType, TypeElement classElement,_                                   Set<EipOption> eipOptions, String prefix) {__        Elements elementUtils = processingEnv.getElementUtils()___        _        String docComment = findJavaDoc(elementUtils, null, "id", null, classElement, true)__        EipOption ep = new EipOption("id", "Id", "attribute", "java.lang.String", false, "", docComment,_            false, null, false, null, false, null, false)__        eipOptions.add(ep)___        _        docComment = findJavaDoc(elementUtils, null, "description", null, classElement, true)__        ep = new EipOption("description", "Description", "element", "org.apache.camel.model.DescriptionDefinition", false, "", docComment,_            false, null, false, null, false, null, false)__        eipOptions.add(ep)___        _        if (!skipUnwanted) {_            _            docComment = findJavaDoc(elementUtils, null, "customId", null, classElement, true)__            ep = new EipOption("customId", "Custom Id", "attribute", "java.lang.String", false, "", docComment,_                false, null, false, null, false, null, false)__            eipOptions.add(ep)__        }_    };special,for,process,the,optional,identified,definition;private,void,process,identified,processing,environment,processing,env,round,environment,round,env,type,element,original,class,type,type,element,class,element,set,eip,option,eip,options,string,prefix,elements,element,utils,processing,env,get,element,utils,string,doc,comment,find,java,doc,element,utils,null,id,null,class,element,true,eip,option,ep,new,eip,option,id,id,attribute,java,lang,string,false,doc,comment,false,null,false,null,false,null,false,eip,options,add,ep,doc,comment,find,java,doc,element,utils,null,description,null,class,element,true,ep,new,eip,option,description,description,element,org,apache,camel,model,description,definition,false,doc,comment,false,null,false,null,false,null,false,eip,options,add,ep,if,skip,unwanted,doc,comment,find,java,doc,element,utils,null,custom,id,null,class,element,true,ep,new,eip,option,custom,id,custom,id,attribute,java,lang,string,false,doc,comment,false,null,false,null,false,null,false,eip,options,add,ep
CoreEipAnnotationProcessorHelper -> private void processIdentified(ProcessingEnvironment processingEnv, RoundEnvironment roundEnv, TypeElement originalClassType, TypeElement classElement,                                    Set<EipOption> eipOptions, String prefix);1547240981;Special for process the OptionalIdentifiedDefinition;private void processIdentified(ProcessingEnvironment processingEnv, RoundEnvironment roundEnv, TypeElement originalClassType, TypeElement classElement,_                                   Set<EipOption> eipOptions, String prefix) {__        Elements elementUtils = processingEnv.getElementUtils()___        _        String docComment = findJavaDoc(elementUtils, null, "id", null, classElement, true)__        EipOption ep = new EipOption("id", "Id", "attribute", "java.lang.String", false, "", docComment,_            false, null, false, null, false, null, false)__        eipOptions.add(ep)___        _        docComment = findJavaDoc(elementUtils, null, "description", null, classElement, true)__        ep = new EipOption("description", "Description", "element", "org.apache.camel.model.DescriptionDefinition", false, "", docComment,_            false, null, false, null, false, null, false)__        eipOptions.add(ep)___        _        if (!skipUnwanted) {_            _            docComment = findJavaDoc(elementUtils, null, "customId", null, classElement, true)__            ep = new EipOption("customId", "Custom Id", "attribute", "java.lang.String", false, "", docComment,_                false, null, false, null, false, null, false)__            eipOptions.add(ep)__        }_    };special,for,process,the,optional,identified,definition;private,void,process,identified,processing,environment,processing,env,round,environment,round,env,type,element,original,class,type,type,element,class,element,set,eip,option,eip,options,string,prefix,elements,element,utils,processing,env,get,element,utils,string,doc,comment,find,java,doc,element,utils,null,id,null,class,element,true,eip,option,ep,new,eip,option,id,id,attribute,java,lang,string,false,doc,comment,false,null,false,null,false,null,false,eip,options,add,ep,doc,comment,find,java,doc,element,utils,null,description,null,class,element,true,ep,new,eip,option,description,description,element,org,apache,camel,model,description,definition,false,doc,comment,false,null,false,null,false,null,false,eip,options,add,ep,if,skip,unwanted,doc,comment,find,java,doc,element,utils,null,custom,id,null,class,element,true,ep,new,eip,option,custom,id,custom,id,attribute,java,lang,string,false,doc,comment,false,null,false,null,false,null,false,eip,options,add,ep
CoreEipAnnotationProcessorHelper -> private void processIdentified(ProcessingEnvironment processingEnv, RoundEnvironment roundEnv, TypeElement originalClassType, TypeElement classElement,                                    Set<EipOption> eipOptions, String prefix);1547241294;Special for process the OptionalIdentifiedDefinition;private void processIdentified(ProcessingEnvironment processingEnv, RoundEnvironment roundEnv, TypeElement originalClassType, TypeElement classElement,_                                   Set<EipOption> eipOptions, String prefix) {__        Elements elementUtils = processingEnv.getElementUtils()___        _        String docComment = findJavaDoc(elementUtils, null, "id", null, classElement, true)__        EipOption ep = new EipOption("id", "Id", "attribute", "java.lang.String", false, "", docComment,_            false, null, false, null, false, null, false)__        eipOptions.add(ep)___        _        docComment = findJavaDoc(elementUtils, null, "description", null, classElement, true)__        ep = new EipOption("description", "Description", "element", "org.apache.camel.model.DescriptionDefinition", false, "", docComment,_            false, null, false, null, false, null, false)__        eipOptions.add(ep)___        _        if (!skipUnwanted) {_            _            docComment = findJavaDoc(elementUtils, null, "customId", null, classElement, true)__            ep = new EipOption("customId", "Custom Id", "attribute", "java.lang.String", false, "", docComment,_                false, null, false, null, false, null, false)__            eipOptions.add(ep)__        }_    };special,for,process,the,optional,identified,definition;private,void,process,identified,processing,environment,processing,env,round,environment,round,env,type,element,original,class,type,type,element,class,element,set,eip,option,eip,options,string,prefix,elements,element,utils,processing,env,get,element,utils,string,doc,comment,find,java,doc,element,utils,null,id,null,class,element,true,eip,option,ep,new,eip,option,id,id,attribute,java,lang,string,false,doc,comment,false,null,false,null,false,null,false,eip,options,add,ep,doc,comment,find,java,doc,element,utils,null,description,null,class,element,true,ep,new,eip,option,description,description,element,org,apache,camel,model,description,definition,false,doc,comment,false,null,false,null,false,null,false,eip,options,add,ep,if,skip,unwanted,doc,comment,find,java,doc,element,utils,null,custom,id,null,class,element,true,ep,new,eip,option,custom,id,custom,id,attribute,java,lang,string,false,doc,comment,false,null,false,null,false,null,false,eip,options,add,ep
CoreEipAnnotationProcessorHelper -> private void processIdentified(ProcessingEnvironment processingEnv, RoundEnvironment roundEnv, TypeElement originalClassType, TypeElement classElement,                                    Set<EipOption> eipOptions, String prefix);1550051587;Special for process the OptionalIdentifiedDefinition;private void processIdentified(ProcessingEnvironment processingEnv, RoundEnvironment roundEnv, TypeElement originalClassType, TypeElement classElement,_                                   Set<EipOption> eipOptions, String prefix) {__        Elements elementUtils = processingEnv.getElementUtils()___        _        String docComment = findJavaDoc(elementUtils, null, "id", null, classElement, true)__        EipOption ep = new EipOption("id", "Id", "attribute", "java.lang.String", false, "", docComment, false, null, false, null, false, null, false)__        eipOptions.add(ep)___        _        docComment = findJavaDoc(elementUtils, null, "description", null, classElement, true)__        ep = new EipOption("description", "Description", "element", "org.apache.camel.model.DescriptionDefinition", false, "", docComment, false, null, false, null, false, null,_                           false)__        eipOptions.add(ep)___        _        if (!skipUnwanted) {_            _            docComment = findJavaDoc(elementUtils, null, "customId", null, classElement, true)__            ep = new EipOption("customId", "Custom Id", "attribute", "java.lang.String", false, "", docComment, false, null, false, null, false, null, false)__            eipOptions.add(ep)__        }_    };special,for,process,the,optional,identified,definition;private,void,process,identified,processing,environment,processing,env,round,environment,round,env,type,element,original,class,type,type,element,class,element,set,eip,option,eip,options,string,prefix,elements,element,utils,processing,env,get,element,utils,string,doc,comment,find,java,doc,element,utils,null,id,null,class,element,true,eip,option,ep,new,eip,option,id,id,attribute,java,lang,string,false,doc,comment,false,null,false,null,false,null,false,eip,options,add,ep,doc,comment,find,java,doc,element,utils,null,description,null,class,element,true,ep,new,eip,option,description,description,element,org,apache,camel,model,description,definition,false,doc,comment,false,null,false,null,false,null,false,eip,options,add,ep,if,skip,unwanted,doc,comment,find,java,doc,element,utils,null,custom,id,null,class,element,true,ep,new,eip,option,custom,id,custom,id,attribute,java,lang,string,false,doc,comment,false,null,false,null,false,null,false,eip,options,add,ep
