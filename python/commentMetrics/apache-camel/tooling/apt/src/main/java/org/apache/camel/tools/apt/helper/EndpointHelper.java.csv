# id;timestamp;commentText;codeText;commentWords;codeWords
EndpointHelper -> public static EndpointPathComparator createPathComparator(String syntax);1447672709;A comparator to sort the endpoint paths according to syntax.__@param syntax the endpoint uri syntax;public static EndpointPathComparator createPathComparator(String syntax) {_        return new EndpointPathComparator(syntax)__    };a,comparator,to,sort,the,endpoint,paths,according,to,syntax,param,syntax,the,endpoint,uri,syntax;public,static,endpoint,path,comparator,create,path,comparator,string,syntax,return,new,endpoint,path,comparator,syntax
EndpointHelper -> public static EndpointPathComparator createPathComparator(String syntax);1456503294;A comparator to sort the endpoint paths according to syntax.__@param syntax the endpoint uri syntax;public static EndpointPathComparator createPathComparator(String syntax) {_        return new EndpointPathComparator(syntax)__    };a,comparator,to,sort,the,endpoint,paths,according,to,syntax,param,syntax,the,endpoint,uri,syntax;public,static,endpoint,path,comparator,create,path,comparator,string,syntax,return,new,endpoint,path,comparator,syntax
EndpointHelper -> public static EndpointOptionGroupAndLabelComparator createGroupAndLabelComparator();1447316351;A comparator to sort the endpoint/component options according to group and label.;public static EndpointOptionGroupAndLabelComparator createGroupAndLabelComparator() {_        return new EndpointOptionGroupAndLabelComparator()__    };a,comparator,to,sort,the,endpoint,component,options,according,to,group,and,label;public,static,endpoint,option,group,and,label,comparator,create,group,and,label,comparator,return,new,endpoint,option,group,and,label,comparator
EndpointHelper -> public static EndpointOptionGroupAndLabelComparator createGroupAndLabelComparator();1447316352;A comparator to sort the endpoint/component options according to group and label.;public static EndpointOptionGroupAndLabelComparator createGroupAndLabelComparator() {_        return new EndpointOptionGroupAndLabelComparator()__    };a,comparator,to,sort,the,endpoint,component,options,according,to,group,and,label;public,static,endpoint,option,group,and,label,comparator,create,group,and,label,comparator,return,new,endpoint,option,group,and,label,comparator
EndpointHelper -> public static EndpointOptionGroupAndLabelComparator createGroupAndLabelComparator();1447316353;A comparator to sort the endpoint/component options according to group and label.;public static EndpointOptionGroupAndLabelComparator createGroupAndLabelComparator() {_        return new EndpointOptionGroupAndLabelComparator()__    };a,comparator,to,sort,the,endpoint,component,options,according,to,group,and,label;public,static,endpoint,option,group,and,label,comparator,create,group,and,label,comparator,return,new,endpoint,option,group,and,label,comparator
EndpointHelper -> public static EndpointOptionGroupAndLabelComparator createGroupAndLabelComparator();1447316357;A comparator to sort the endpoint/component options according to group and label.;public static EndpointOptionGroupAndLabelComparator createGroupAndLabelComparator() {_        return new EndpointOptionGroupAndLabelComparator()__    };a,comparator,to,sort,the,endpoint,component,options,according,to,group,and,label;public,static,endpoint,option,group,and,label,comparator,create,group,and,label,comparator,return,new,endpoint,option,group,and,label,comparator
EndpointHelper -> public static EndpointOptionGroupAndLabelComparator createGroupAndLabelComparator();1447672709;A comparator to sort the endpoint/component options according to group and label.;public static EndpointOptionGroupAndLabelComparator createGroupAndLabelComparator() {_        return new EndpointOptionGroupAndLabelComparator()__    };a,comparator,to,sort,the,endpoint,component,options,according,to,group,and,label;public,static,endpoint,option,group,and,label,comparator,create,group,and,label,comparator,return,new,endpoint,option,group,and,label,comparator
EndpointHelper -> public static EndpointOptionGroupAndLabelComparator createGroupAndLabelComparator();1456503294;A comparator to sort the endpoint/component options according to group and label.;public static EndpointOptionGroupAndLabelComparator createGroupAndLabelComparator() {_        return new EndpointOptionGroupAndLabelComparator()__    };a,comparator,to,sort,the,endpoint,component,options,according,to,group,and,label;public,static,endpoint,option,group,and,label,comparator,create,group,and,label,comparator,return,new,endpoint,option,group,and,label,comparator
EndpointHelper -> public static String labelAsGroupName(String label, boolean consumerOnly, boolean producerOnly);1447316351;Returns the group name from the given label._<p/>_The group name is a single name deducted from the label. The label can contain multiple names separated by comma._The group is the best guess as a group of those labels, so similar labels can be combined into the same group.__@param label          the label_@param consumerOnly   whether the component is consumer only_@param producerOnly   whether the component is producer only_@return the group name;public static String labelAsGroupName(String label, boolean consumerOnly, boolean producerOnly) {_        _        String answer = "common"__        if (consumerOnly) {_            answer = "consumer"__        } else if (producerOnly) {_            answer = "producer"__        }__        String value = label__        if (!Strings.isNullOrEmpty(value)) {__            _            value = value.replaceFirst("(\\w),(advanced)", "$1 (advanced)")___            String[] array = value.split(",")__            _            answer = array[array.length - 1]__            _            if (answer.equals("advanced") && consumerOnly) {_                answer = "consumer (advanced)"__            } else if (answer.equals("advanced") && producerOnly) {_                answer = "producer (advanced)"__            }_        }__        return answer__    };returns,the,group,name,from,the,given,label,p,the,group,name,is,a,single,name,deducted,from,the,label,the,label,can,contain,multiple,names,separated,by,comma,the,group,is,the,best,guess,as,a,group,of,those,labels,so,similar,labels,can,be,combined,into,the,same,group,param,label,the,label,param,consumer,only,whether,the,component,is,consumer,only,param,producer,only,whether,the,component,is,producer,only,return,the,group,name;public,static,string,label,as,group,name,string,label,boolean,consumer,only,boolean,producer,only,string,answer,common,if,consumer,only,answer,consumer,else,if,producer,only,answer,producer,string,value,label,if,strings,is,null,or,empty,value,value,value,replace,first,w,advanced,1,advanced,string,array,value,split,answer,array,array,length,1,if,answer,equals,advanced,consumer,only,answer,consumer,advanced,else,if,answer,equals,advanced,producer,only,answer,producer,advanced,return,answer
EndpointHelper -> public static String labelAsGroupName(String label, boolean consumerOnly, boolean producerOnly);1447316352;Returns the group name from the given label._<p/>_The group name is a single name deducted from the label. The label can contain multiple names separated by comma._The group is the best guess as a group of those labels, so similar labels can be combined into the same group.__@param label          the label_@param consumerOnly   whether the component is consumer only_@param producerOnly   whether the component is producer only_@return the group name;public static String labelAsGroupName(String label, boolean consumerOnly, boolean producerOnly) {_        _        String answer = "common"__        if (consumerOnly) {_            answer = "consumer"__        } else if (producerOnly) {_            answer = "producer"__        }__        String value = label__        if (!Strings.isNullOrEmpty(value)) {__            _            if (value.contains("advanced")) {_                value = value.replaceFirst("(\\w),(advanced)", "$1 (advanced)")__            }__            if (value.contains(",")) {_                String[] array = value.split(",")__                _                answer = array[array.length - 1]__            } else {_                answer = value__            }_            _            if (answer.equals("advanced") && consumerOnly) {_                answer = "consumer (advanced)"__            } else if (answer.equals("advanced") && producerOnly) {_                answer = "producer (advanced)"__            }_        }__        return answer__    };returns,the,group,name,from,the,given,label,p,the,group,name,is,a,single,name,deducted,from,the,label,the,label,can,contain,multiple,names,separated,by,comma,the,group,is,the,best,guess,as,a,group,of,those,labels,so,similar,labels,can,be,combined,into,the,same,group,param,label,the,label,param,consumer,only,whether,the,component,is,consumer,only,param,producer,only,whether,the,component,is,producer,only,return,the,group,name;public,static,string,label,as,group,name,string,label,boolean,consumer,only,boolean,producer,only,string,answer,common,if,consumer,only,answer,consumer,else,if,producer,only,answer,producer,string,value,label,if,strings,is,null,or,empty,value,if,value,contains,advanced,value,value,replace,first,w,advanced,1,advanced,if,value,contains,string,array,value,split,answer,array,array,length,1,else,answer,value,if,answer,equals,advanced,consumer,only,answer,consumer,advanced,else,if,answer,equals,advanced,producer,only,answer,producer,advanced,return,answer
EndpointHelper -> public static String labelAsGroupName(String label, boolean consumerOnly, boolean producerOnly);1447316353;Returns the group name from the given label._<p/>_The group name is a single name deducted from the label. The label can contain multiple names separated by comma._The group is the best guess as a group of those labels, so similar labels can be combined into the same group.__@param label          the label_@param consumerOnly   whether the component is consumer only_@param producerOnly   whether the component is producer only_@return the group name;public static String labelAsGroupName(String label, boolean consumerOnly, boolean producerOnly) {_        _        String answer = "common"__        if (consumerOnly) {_            answer = "consumer"__        } else if (producerOnly) {_            answer = "producer"__        }__        String value = label__        if (!Strings.isNullOrEmpty(value)) {__            _            if (value.contains("advanced")) {_                value = value.replaceFirst("(\\w),(advanced)", "$1 (advanced)")__            }__            if (value.contains(",")) {_                String[] array = value.split(",")__                _                answer = array[array.length - 1]__            } else {_                answer = value__            }_        }__        return answer__    };returns,the,group,name,from,the,given,label,p,the,group,name,is,a,single,name,deducted,from,the,label,the,label,can,contain,multiple,names,separated,by,comma,the,group,is,the,best,guess,as,a,group,of,those,labels,so,similar,labels,can,be,combined,into,the,same,group,param,label,the,label,param,consumer,only,whether,the,component,is,consumer,only,param,producer,only,whether,the,component,is,producer,only,return,the,group,name;public,static,string,label,as,group,name,string,label,boolean,consumer,only,boolean,producer,only,string,answer,common,if,consumer,only,answer,consumer,else,if,producer,only,answer,producer,string,value,label,if,strings,is,null,or,empty,value,if,value,contains,advanced,value,value,replace,first,w,advanced,1,advanced,if,value,contains,string,array,value,split,answer,array,array,length,1,else,answer,value,return,answer
EndpointHelper -> public static String labelAsGroupName(String label, boolean consumerOnly, boolean producerOnly);1447316357;Returns the group name from the given label._<p/>_The group name is a single name deducted from the label. The label can contain multiple names separated by comma._The group is the best guess as a group of those labels, so similar labels can be combined into the same group.__@param label          the label_@param consumerOnly   whether the component is consumer only_@param producerOnly   whether the component is producer only_@return the group name;public static String labelAsGroupName(String label, boolean consumerOnly, boolean producerOnly) {_        _        String answer = "common"__        if (consumerOnly) {_            answer = "consumer"__        } else if (producerOnly) {_            answer = "producer"__        }__        String value = label__        if (!Strings.isNullOrEmpty(value)) {__            _            if (value.contains("advanced")) {_                value = value.replaceFirst("(\\w),(advanced)", "$1 (advanced)")__            }__            if (value.contains(",")) {_                String[] array = value.split(",")__                _                answer = array[array.length - 1]__            } else {_                answer = value__            }_        }__        return answer__    };returns,the,group,name,from,the,given,label,p,the,group,name,is,a,single,name,deducted,from,the,label,the,label,can,contain,multiple,names,separated,by,comma,the,group,is,the,best,guess,as,a,group,of,those,labels,so,similar,labels,can,be,combined,into,the,same,group,param,label,the,label,param,consumer,only,whether,the,component,is,consumer,only,param,producer,only,whether,the,component,is,producer,only,return,the,group,name;public,static,string,label,as,group,name,string,label,boolean,consumer,only,boolean,producer,only,string,answer,common,if,consumer,only,answer,consumer,else,if,producer,only,answer,producer,string,value,label,if,strings,is,null,or,empty,value,if,value,contains,advanced,value,value,replace,first,w,advanced,1,advanced,if,value,contains,string,array,value,split,answer,array,array,length,1,else,answer,value,return,answer
EndpointHelper -> public static String labelAsGroupName(String label, boolean consumerOnly, boolean producerOnly);1447672709;Returns the group name from the given label._<p/>_The group name is a single name deducted from the label. The label can contain multiple names separated by comma._The group is the best guess as a group of those labels, so similar labels can be combined into the same group.__@param label          the label_@param consumerOnly   whether the component is consumer only_@param producerOnly   whether the component is producer only_@return the group name;public static String labelAsGroupName(String label, boolean consumerOnly, boolean producerOnly) {_        _        String answer = "common"__        if (consumerOnly) {_            answer = "consumer"__        } else if (producerOnly) {_            answer = "producer"__        }__        String value = label__        if (!Strings.isNullOrEmpty(value)) {__            _            if (value.contains("advanced")) {_                value = value.replaceFirst("(\\w),(advanced)", "$1 (advanced)")__            }__            if (value.contains(",")) {_                String[] array = value.split(",")__                _                answer = array[array.length - 1]__            } else {_                answer = value__            }_        }__        return answer__    };returns,the,group,name,from,the,given,label,p,the,group,name,is,a,single,name,deducted,from,the,label,the,label,can,contain,multiple,names,separated,by,comma,the,group,is,the,best,guess,as,a,group,of,those,labels,so,similar,labels,can,be,combined,into,the,same,group,param,label,the,label,param,consumer,only,whether,the,component,is,consumer,only,param,producer,only,whether,the,component,is,producer,only,return,the,group,name;public,static,string,label,as,group,name,string,label,boolean,consumer,only,boolean,producer,only,string,answer,common,if,consumer,only,answer,consumer,else,if,producer,only,answer,producer,string,value,label,if,strings,is,null,or,empty,value,if,value,contains,advanced,value,value,replace,first,w,advanced,1,advanced,if,value,contains,string,array,value,split,answer,array,array,length,1,else,answer,value,return,answer
EndpointHelper -> public static String labelAsGroupName(String label, boolean consumerOnly, boolean producerOnly);1456503294;Returns the group name from the given label._<p/>_The group name is a single name deducted from the label. The label can contain multiple names separated by comma._The group is the best guess as a group of those labels, so similar labels can be combined into the same group.__@param label          the label_@param consumerOnly   whether the component is consumer only_@param producerOnly   whether the component is producer only_@return the group name;public static String labelAsGroupName(String label, boolean consumerOnly, boolean producerOnly) {_        _        String answer = "common"__        if (consumerOnly) {_            answer = "consumer"__        } else if (producerOnly) {_            answer = "producer"__        }__        String value = label__        if (!Strings.isNullOrEmpty(value)) {__            _            if (value.contains("advanced")) {_                value = value.replaceFirst("(\\w),(advanced)", "$1 (advanced)")__            }__            if (value.contains(",")) {_                String[] array = value.split(",")__                _                answer = array[array.length - 1]__            } else {_                answer = value__            }_        }__        return answer__    };returns,the,group,name,from,the,given,label,p,the,group,name,is,a,single,name,deducted,from,the,label,the,label,can,contain,multiple,names,separated,by,comma,the,group,is,the,best,guess,as,a,group,of,those,labels,so,similar,labels,can,be,combined,into,the,same,group,param,label,the,label,param,consumer,only,whether,the,component,is,consumer,only,param,producer,only,whether,the,component,is,producer,only,return,the,group,name;public,static,string,label,as,group,name,string,label,boolean,consumer,only,boolean,producer,only,string,answer,common,if,consumer,only,answer,consumer,else,if,producer,only,answer,producer,string,value,label,if,strings,is,null,or,empty,value,if,value,contains,advanced,value,value,replace,first,w,advanced,1,advanced,if,value,contains,string,array,value,split,answer,array,array,length,1,else,answer,value,return,answer
