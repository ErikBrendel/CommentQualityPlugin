# id;timestamp;commentText;codeText;commentWords;codeWords
ScalaShellRemoteStreamEnvironment -> public ScalaShellRemoteStreamEnvironment( 		String host, 		int port, 		FlinkILoop flinkILoop, 		Configuration configuration, 		String... jarFiles);1461599432;Creates a new RemoteStreamEnvironment that points to the master_(JobManager) described by the given host name and port.__@param host	 The host name or address of the master (JobManager), where the_program should be executed._@param port	 The port of the master (JobManager), where the program should_be executed._@param configuration The configuration to be used for the environment_@param jarFiles The JAR files with code that needs to be shipped to the_cluster. If the program uses user-defined functions,_user-defined input formats, or any libraries, those must be;public ScalaShellRemoteStreamEnvironment(_		String host,_		int port,_		FlinkILoop flinkILoop,_		Configuration configuration,_		String... jarFiles) {__		super(host, port, configuration, jarFiles)__		this.flinkILoop = flinkILoop__	};creates,a,new,remote,stream,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,configuration,the,configuration,to,be,used,for,the,environment,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be;public,scala,shell,remote,stream,environment,string,host,int,port,flink,iloop,flink,iloop,configuration,configuration,string,jar,files,super,host,port,configuration,jar,files,this,flink,iloop,flink,iloop
ScalaShellRemoteStreamEnvironment -> public ScalaShellRemoteStreamEnvironment( 		String host, 		int port, 		FlinkILoop flinkILoop, 		Configuration configuration, 		String... jarFiles);1496260672;Creates a new RemoteStreamEnvironment that points to the master_(JobManager) described by the given host name and port.__@param host	 The host name or address of the master (JobManager), where the_program should be executed._@param port	 The port of the master (JobManager), where the program should_be executed._@param configuration The configuration to be used for the environment_@param jarFiles The JAR files with code that needs to be shipped to the_cluster. If the program uses user-defined functions,_user-defined input formats, or any libraries, those must be;public ScalaShellRemoteStreamEnvironment(_		String host,_		int port,_		FlinkILoop flinkILoop,_		Configuration configuration,_		String... jarFiles) {__		super(host, port, configuration, jarFiles)__		this.flinkILoop = flinkILoop__	};creates,a,new,remote,stream,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,configuration,the,configuration,to,be,used,for,the,environment,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be;public,scala,shell,remote,stream,environment,string,host,int,port,flink,iloop,flink,iloop,configuration,configuration,string,jar,files,super,host,port,configuration,jar,files,this,flink,iloop,flink,iloop
ScalaShellRemoteStreamEnvironment -> public ScalaShellRemoteStreamEnvironment( 		String host, 		int port, 		FlinkILoop flinkILoop, 		Configuration configuration, 		String... jarFiles);1529046538;Creates a new RemoteStreamEnvironment that points to the master_(JobManager) described by the given host name and port.__@param host	 The host name or address of the master (JobManager), where the_program should be executed._@param port	 The port of the master (JobManager), where the program should_be executed._@param configuration The configuration to be used for the environment_@param jarFiles The JAR files with code that needs to be shipped to the_cluster. If the program uses user-defined functions,_user-defined input formats, or any libraries, those must be;public ScalaShellRemoteStreamEnvironment(_		String host,_		int port,_		FlinkILoop flinkILoop,_		Configuration configuration,_		String... jarFiles) {__		super(host, port, configuration, jarFiles)__		this.flinkILoop = flinkILoop__	};creates,a,new,remote,stream,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,configuration,the,configuration,to,be,used,for,the,environment,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be;public,scala,shell,remote,stream,environment,string,host,int,port,flink,iloop,flink,iloop,configuration,configuration,string,jar,files,super,host,port,configuration,jar,files,this,flink,iloop,flink,iloop
ScalaShellRemoteStreamEnvironment -> @Override 	protected JobExecutionResult executeRemotely(StreamGraph streamGraph, List<URL> jarFiles) throws ProgramInvocationException;1461599432;Executes the remote job.__@param streamGraph_Stream Graph to execute_@param jarFiles_List of jar file URLs to ship to the cluster_@return The result of the job execution, containing elapsed time and accumulators.;@Override_	protected JobExecutionResult executeRemotely(StreamGraph streamGraph, List<URL> jarFiles) throws ProgramInvocationException {_		URL jarUrl__		try {_			jarUrl = flinkILoop.writeFilesToDisk().getAbsoluteFile().toURI().toURL()__		} catch (MalformedURLException e) {_			throw new ProgramInvocationException("Could not write the user code classes to disk.", e)__		}__		List<URL> allJarFiles = new ArrayList<>(jarFiles.size() + 1)__		allJarFiles.addAll(jarFiles)__		allJarFiles.add(jarUrl)___		return super.executeRemotely(streamGraph, allJarFiles)__	};executes,the,remote,job,param,stream,graph,stream,graph,to,execute,param,jar,files,list,of,jar,file,urls,to,ship,to,the,cluster,return,the,result,of,the,job,execution,containing,elapsed,time,and,accumulators;override,protected,job,execution,result,execute,remotely,stream,graph,stream,graph,list,url,jar,files,throws,program,invocation,exception,url,jar,url,try,jar,url,flink,iloop,write,files,to,disk,get,absolute,file,to,uri,to,url,catch,malformed,urlexception,e,throw,new,program,invocation,exception,could,not,write,the,user,code,classes,to,disk,e,list,url,all,jar,files,new,array,list,jar,files,size,1,all,jar,files,add,all,jar,files,all,jar,files,add,jar,url,return,super,execute,remotely,stream,graph,all,jar,files
ScalaShellRemoteStreamEnvironment -> @Override 	protected JobExecutionResult executeRemotely(StreamGraph streamGraph, List<URL> jarFiles) throws ProgramInvocationException;1496260672;Executes the remote job.__@param streamGraph_Stream Graph to execute_@param jarFiles_List of jar file URLs to ship to the cluster_@return The result of the job execution, containing elapsed time and accumulators.;@Override_	protected JobExecutionResult executeRemotely(StreamGraph streamGraph, List<URL> jarFiles) throws ProgramInvocationException {_		URL jarUrl__		try {_			jarUrl = flinkILoop.writeFilesToDisk().getAbsoluteFile().toURI().toURL()__		} catch (MalformedURLException e) {_			throw new ProgramInvocationException("Could not write the user code classes to disk.", e)__		}__		List<URL> allJarFiles = new ArrayList<>(jarFiles.size() + 1)__		allJarFiles.addAll(jarFiles)__		allJarFiles.add(jarUrl)___		return super.executeRemotely(streamGraph, allJarFiles)__	};executes,the,remote,job,param,stream,graph,stream,graph,to,execute,param,jar,files,list,of,jar,file,urls,to,ship,to,the,cluster,return,the,result,of,the,job,execution,containing,elapsed,time,and,accumulators;override,protected,job,execution,result,execute,remotely,stream,graph,stream,graph,list,url,jar,files,throws,program,invocation,exception,url,jar,url,try,jar,url,flink,iloop,write,files,to,disk,get,absolute,file,to,uri,to,url,catch,malformed,urlexception,e,throw,new,program,invocation,exception,could,not,write,the,user,code,classes,to,disk,e,list,url,all,jar,files,new,array,list,jar,files,size,1,all,jar,files,add,all,jar,files,all,jar,files,add,jar,url,return,super,execute,remotely,stream,graph,all,jar,files
ScalaShellRemoteStreamEnvironment -> @Override 	protected JobExecutionResult executeRemotely(StreamGraph streamGraph, List<URL> jarFiles) throws ProgramInvocationException;1529046538;Executes the remote job.__@param streamGraph_Stream Graph to execute_@param jarFiles_List of jar file URLs to ship to the cluster_@return The result of the job execution, containing elapsed time and accumulators.;@Override_	protected JobExecutionResult executeRemotely(StreamGraph streamGraph, List<URL> jarFiles) throws ProgramInvocationException {_		URL jarUrl__		try {_			jarUrl = flinkILoop.writeFilesToDisk().getAbsoluteFile().toURI().toURL()__		} catch (MalformedURLException e) {_			throw new ProgramInvocationException("Could not write the user code classes to disk.",_				streamGraph.getJobGraph().getJobID(), e)__		}__		List<URL> allJarFiles = new ArrayList<>(jarFiles.size() + 1)__		allJarFiles.addAll(jarFiles)__		allJarFiles.add(jarUrl)___		return super.executeRemotely(streamGraph, allJarFiles)__	};executes,the,remote,job,param,stream,graph,stream,graph,to,execute,param,jar,files,list,of,jar,file,urls,to,ship,to,the,cluster,return,the,result,of,the,job,execution,containing,elapsed,time,and,accumulators;override,protected,job,execution,result,execute,remotely,stream,graph,stream,graph,list,url,jar,files,throws,program,invocation,exception,url,jar,url,try,jar,url,flink,iloop,write,files,to,disk,get,absolute,file,to,uri,to,url,catch,malformed,urlexception,e,throw,new,program,invocation,exception,could,not,write,the,user,code,classes,to,disk,stream,graph,get,job,graph,get,job,id,e,list,url,all,jar,files,new,array,list,jar,files,size,1,all,jar,files,add,all,jar,files,all,jar,files,add,jar,url,return,super,execute,remotely,stream,graph,all,jar,files
