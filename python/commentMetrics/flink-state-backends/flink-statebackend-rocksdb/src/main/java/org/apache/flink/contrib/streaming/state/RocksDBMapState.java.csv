# id;timestamp;commentText;codeText;commentWords;codeWords
RocksDBMapState -> public RocksDBMapState(ColumnFamilyHandle columnFamily, 			TypeSerializer<N> namespaceSerializer, 			MapStateDescriptor<UK, UV> stateDesc, 			RocksDBKeyedStateBackend<K> backend);1519061869;Creates a new {@code RocksDBMapState}.__@param namespaceSerializer The serializer for the namespace._@param stateDesc The state identifier for the state.;public RocksDBMapState(ColumnFamilyHandle columnFamily,_			TypeSerializer<N> namespaceSerializer,_			MapStateDescriptor<UK, UV> stateDesc,_			RocksDBKeyedStateBackend<K> backend) {__		super(columnFamily, namespaceSerializer, stateDesc, backend)___		this.userKeySerializer = stateDesc.getKeySerializer()__		this.userValueSerializer = stateDesc.getValueSerializer()___		writeOptions = new WriteOptions()__		writeOptions.setDisableWAL(true)__	};creates,a,new,code,rocks,dbmap,state,param,namespace,serializer,the,serializer,for,the,namespace,param,state,desc,the,state,identifier,for,the,state;public,rocks,dbmap,state,column,family,handle,column,family,type,serializer,n,namespace,serializer,map,state,descriptor,uk,uv,state,desc,rocks,dbkeyed,state,backend,k,backend,super,column,family,namespace,serializer,state,desc,backend,this,user,key,serializer,state,desc,get,key,serializer,this,user,value,serializer,state,desc,get,value,serializer,write,options,new,write,options,write,options,set,disable,wal,true
RocksDBMapState -> public RocksDBMapState(ColumnFamilyHandle columnFamily, 			TypeSerializer<N> namespaceSerializer, 			MapStateDescriptor<UK, UV> stateDesc, 			RocksDBKeyedStateBackend<K> backend);1519311530;Creates a new {@code RocksDBMapState}.__@param namespaceSerializer The serializer for the namespace._@param stateDesc The state identifier for the state.;public RocksDBMapState(ColumnFamilyHandle columnFamily,_			TypeSerializer<N> namespaceSerializer,_			MapStateDescriptor<UK, UV> stateDesc,_			RocksDBKeyedStateBackend<K> backend) {__		super(columnFamily, namespaceSerializer, stateDesc, backend)___		this.userKeySerializer = stateDesc.getKeySerializer()__		this.userValueSerializer = stateDesc.getValueSerializer()___		writeOptions = new WriteOptions()__		writeOptions.setDisableWAL(true)__	};creates,a,new,code,rocks,dbmap,state,param,namespace,serializer,the,serializer,for,the,namespace,param,state,desc,the,state,identifier,for,the,state;public,rocks,dbmap,state,column,family,handle,column,family,type,serializer,n,namespace,serializer,map,state,descriptor,uk,uv,state,desc,rocks,dbkeyed,state,backend,k,backend,super,column,family,namespace,serializer,state,desc,backend,this,user,key,serializer,state,desc,get,key,serializer,this,user,value,serializer,state,desc,get,value,serializer,write,options,new,write,options,write,options,set,disable,wal,true
RocksDBMapState -> public RocksDBMapState(ColumnFamilyHandle columnFamily, 			TypeSerializer<N> namespaceSerializer, 			MapStateDescriptor<UK, UV> stateDesc, 			RocksDBKeyedStateBackend<K> backend);1519570795;Creates a new {@code RocksDBMapState}.__@param namespaceSerializer The serializer for the namespace._@param stateDesc The state identifier for the state.;public RocksDBMapState(ColumnFamilyHandle columnFamily,_			TypeSerializer<N> namespaceSerializer,_			MapStateDescriptor<UK, UV> stateDesc,_			RocksDBKeyedStateBackend<K> backend) {__		super(columnFamily, namespaceSerializer, stateDesc, backend)___		this.userKeySerializer = stateDesc.getKeySerializer()__		this.userValueSerializer = stateDesc.getValueSerializer()__	};creates,a,new,code,rocks,dbmap,state,param,namespace,serializer,the,serializer,for,the,namespace,param,state,desc,the,state,identifier,for,the,state;public,rocks,dbmap,state,column,family,handle,column,family,type,serializer,n,namespace,serializer,map,state,descriptor,uk,uv,state,desc,rocks,dbkeyed,state,backend,k,backend,super,column,family,namespace,serializer,state,desc,backend,this,user,key,serializer,state,desc,get,key,serializer,this,user,value,serializer,state,desc,get,value,serializer
RocksDBMapState -> public RocksDBMapState(ColumnFamilyHandle columnFamily, 			TypeSerializer<N> namespaceSerializer, 			MapStateDescriptor<UK, UV> stateDesc, 			RocksDBKeyedStateBackend<K> backend);1519570795;Creates a new {@code RocksDBMapState}.__@param namespaceSerializer The serializer for the namespace._@param stateDesc The state identifier for the state.;public RocksDBMapState(ColumnFamilyHandle columnFamily,_			TypeSerializer<N> namespaceSerializer,_			MapStateDescriptor<UK, UV> stateDesc,_			RocksDBKeyedStateBackend<K> backend) {__		super(columnFamily, namespaceSerializer, stateDesc, backend)___		this.userKeySerializer = stateDesc.getKeySerializer()__		this.userValueSerializer = stateDesc.getValueSerializer()__	};creates,a,new,code,rocks,dbmap,state,param,namespace,serializer,the,serializer,for,the,namespace,param,state,desc,the,state,identifier,for,the,state;public,rocks,dbmap,state,column,family,handle,column,family,type,serializer,n,namespace,serializer,map,state,descriptor,uk,uv,state,desc,rocks,dbkeyed,state,backend,k,backend,super,column,family,namespace,serializer,state,desc,backend,this,user,key,serializer,state,desc,get,key,serializer,this,user,value,serializer,state,desc,get,value,serializer
RocksDBMapState -> private RocksDBMapState( 			ColumnFamilyHandle columnFamily, 			TypeSerializer<N> namespaceSerializer, 			TypeSerializer<Map<UK, UV>> valueSerializer, 			Map<UK, UV> defaultValue, 			RocksDBKeyedStateBackend<K> backend);1529325710;Creates a new {@code RocksDBMapState}.__@param columnFamily The RocksDB column family that this state is associated to._@param namespaceSerializer The serializer for the namespace._@param valueSerializer The serializer for the state._@param defaultValue The default value for the state._@param backend The backend for which this state is bind to.;private RocksDBMapState(_			ColumnFamilyHandle columnFamily,_			TypeSerializer<N> namespaceSerializer,_			TypeSerializer<Map<UK, UV>> valueSerializer,_			Map<UK, UV> defaultValue,_			RocksDBKeyedStateBackend<K> backend) {__		super(columnFamily, namespaceSerializer, valueSerializer, defaultValue, backend)___		Preconditions.checkState(valueSerializer instanceof MapSerializer, "Unexpected serializer type.")___		MapSerializer<UK, UV> castedMapSerializer = (MapSerializer<UK, UV>) valueSerializer__		this.userKeySerializer = castedMapSerializer.getKeySerializer()__		this.userValueSerializer = castedMapSerializer.getValueSerializer()__	};creates,a,new,code,rocks,dbmap,state,param,column,family,the,rocks,db,column,family,that,this,state,is,associated,to,param,namespace,serializer,the,serializer,for,the,namespace,param,value,serializer,the,serializer,for,the,state,param,default,value,the,default,value,for,the,state,param,backend,the,backend,for,which,this,state,is,bind,to;private,rocks,dbmap,state,column,family,handle,column,family,type,serializer,n,namespace,serializer,type,serializer,map,uk,uv,value,serializer,map,uk,uv,default,value,rocks,dbkeyed,state,backend,k,backend,super,column,family,namespace,serializer,value,serializer,default,value,backend,preconditions,check,state,value,serializer,instanceof,map,serializer,unexpected,serializer,type,map,serializer,uk,uv,casted,map,serializer,map,serializer,uk,uv,value,serializer,this,user,key,serializer,casted,map,serializer,get,key,serializer,this,user,value,serializer,casted,map,serializer,get,value,serializer
RocksDBMapState -> private RocksDBMapState( 			ColumnFamilyHandle columnFamily, 			TypeSerializer<N> namespaceSerializer, 			TypeSerializer<Map<UK, UV>> valueSerializer, 			Map<UK, UV> defaultValue, 			RocksDBKeyedStateBackend<K> backend);1531771917;Creates a new {@code RocksDBMapState}.__@param columnFamily The RocksDB column family that this state is associated to._@param namespaceSerializer The serializer for the namespace._@param valueSerializer The serializer for the state._@param defaultValue The default value for the state._@param backend The backend for which this state is bind to.;private RocksDBMapState(_			ColumnFamilyHandle columnFamily,_			TypeSerializer<N> namespaceSerializer,_			TypeSerializer<Map<UK, UV>> valueSerializer,_			Map<UK, UV> defaultValue,_			RocksDBKeyedStateBackend<K> backend) {__		super(columnFamily, namespaceSerializer, valueSerializer, defaultValue, backend)___		Preconditions.checkState(valueSerializer instanceof MapSerializer, "Unexpected serializer type.")___		MapSerializer<UK, UV> castedMapSerializer = (MapSerializer<UK, UV>) valueSerializer__		this.userKeySerializer = castedMapSerializer.getKeySerializer()__		this.userValueSerializer = castedMapSerializer.getValueSerializer()__	};creates,a,new,code,rocks,dbmap,state,param,column,family,the,rocks,db,column,family,that,this,state,is,associated,to,param,namespace,serializer,the,serializer,for,the,namespace,param,value,serializer,the,serializer,for,the,state,param,default,value,the,default,value,for,the,state,param,backend,the,backend,for,which,this,state,is,bind,to;private,rocks,dbmap,state,column,family,handle,column,family,type,serializer,n,namespace,serializer,type,serializer,map,uk,uv,value,serializer,map,uk,uv,default,value,rocks,dbkeyed,state,backend,k,backend,super,column,family,namespace,serializer,value,serializer,default,value,backend,preconditions,check,state,value,serializer,instanceof,map,serializer,unexpected,serializer,type,map,serializer,uk,uv,casted,map,serializer,map,serializer,uk,uv,value,serializer,this,user,key,serializer,casted,map,serializer,get,key,serializer,this,user,value,serializer,casted,map,serializer,get,value,serializer
RocksDBMapState -> private RocksDBMapState( 			ColumnFamilyHandle columnFamily, 			TypeSerializer<N> namespaceSerializer, 			TypeSerializer<Map<UK, UV>> valueSerializer, 			Map<UK, UV> defaultValue, 			RocksDBKeyedStateBackend<K> backend);1533647766;Creates a new {@code RocksDBMapState}.__@param columnFamily The RocksDB column family that this state is associated to._@param namespaceSerializer The serializer for the namespace._@param valueSerializer The serializer for the state._@param defaultValue The default value for the state._@param backend The backend for which this state is bind to.;private RocksDBMapState(_			ColumnFamilyHandle columnFamily,_			TypeSerializer<N> namespaceSerializer,_			TypeSerializer<Map<UK, UV>> valueSerializer,_			Map<UK, UV> defaultValue,_			RocksDBKeyedStateBackend<K> backend) {__		super(columnFamily, namespaceSerializer, valueSerializer, defaultValue, backend)___		Preconditions.checkState(valueSerializer instanceof MapSerializer, "Unexpected serializer type.")___		MapSerializer<UK, UV> castedMapSerializer = (MapSerializer<UK, UV>) valueSerializer__		this.userKeySerializer = castedMapSerializer.getKeySerializer()__		this.userValueSerializer = castedMapSerializer.getValueSerializer()__	};creates,a,new,code,rocks,dbmap,state,param,column,family,the,rocks,db,column,family,that,this,state,is,associated,to,param,namespace,serializer,the,serializer,for,the,namespace,param,value,serializer,the,serializer,for,the,state,param,default,value,the,default,value,for,the,state,param,backend,the,backend,for,which,this,state,is,bind,to;private,rocks,dbmap,state,column,family,handle,column,family,type,serializer,n,namespace,serializer,type,serializer,map,uk,uv,value,serializer,map,uk,uv,default,value,rocks,dbkeyed,state,backend,k,backend,super,column,family,namespace,serializer,value,serializer,default,value,backend,preconditions,check,state,value,serializer,instanceof,map,serializer,unexpected,serializer,type,map,serializer,uk,uv,casted,map,serializer,map,serializer,uk,uv,value,serializer,this,user,key,serializer,casted,map,serializer,get,key,serializer,this,user,value,serializer,casted,map,serializer,get,value,serializer
RocksDBMapState -> private RocksDBMapState( 			ColumnFamilyHandle columnFamily, 			TypeSerializer<N> namespaceSerializer, 			TypeSerializer<Map<UK, UV>> valueSerializer, 			Map<UK, UV> defaultValue, 			RocksDBKeyedStateBackend<K> backend);1533924476;Creates a new {@code RocksDBMapState}.__@param columnFamily The RocksDB column family that this state is associated to._@param namespaceSerializer The serializer for the namespace._@param valueSerializer The serializer for the state._@param defaultValue The default value for the state._@param backend The backend for which this state is bind to.;private RocksDBMapState(_			ColumnFamilyHandle columnFamily,_			TypeSerializer<N> namespaceSerializer,_			TypeSerializer<Map<UK, UV>> valueSerializer,_			Map<UK, UV> defaultValue,_			RocksDBKeyedStateBackend<K> backend) {__		super(columnFamily, namespaceSerializer, valueSerializer, defaultValue, backend)___		Preconditions.checkState(valueSerializer instanceof MapSerializer, "Unexpected serializer type.")___		MapSerializer<UK, UV> castedMapSerializer = (MapSerializer<UK, UV>) valueSerializer__		this.userKeySerializer = castedMapSerializer.getKeySerializer()__		this.userValueSerializer = castedMapSerializer.getValueSerializer()__	};creates,a,new,code,rocks,dbmap,state,param,column,family,the,rocks,db,column,family,that,this,state,is,associated,to,param,namespace,serializer,the,serializer,for,the,namespace,param,value,serializer,the,serializer,for,the,state,param,default,value,the,default,value,for,the,state,param,backend,the,backend,for,which,this,state,is,bind,to;private,rocks,dbmap,state,column,family,handle,column,family,type,serializer,n,namespace,serializer,type,serializer,map,uk,uv,value,serializer,map,uk,uv,default,value,rocks,dbkeyed,state,backend,k,backend,super,column,family,namespace,serializer,value,serializer,default,value,backend,preconditions,check,state,value,serializer,instanceof,map,serializer,unexpected,serializer,type,map,serializer,uk,uv,casted,map,serializer,map,serializer,uk,uv,value,serializer,this,user,key,serializer,casted,map,serializer,get,key,serializer,this,user,value,serializer,casted,map,serializer,get,value,serializer
RocksDBMapState -> private RocksDBMapState( 			ColumnFamilyHandle columnFamily, 			TypeSerializer<N> namespaceSerializer, 			TypeSerializer<Map<UK, UV>> valueSerializer, 			Map<UK, UV> defaultValue, 			RocksDBKeyedStateBackend<K> backend);1534937605;Creates a new {@code RocksDBMapState}.__@param columnFamily The RocksDB column family that this state is associated to._@param namespaceSerializer The serializer for the namespace._@param valueSerializer The serializer for the state._@param defaultValue The default value for the state._@param backend The backend for which this state is bind to.;private RocksDBMapState(_			ColumnFamilyHandle columnFamily,_			TypeSerializer<N> namespaceSerializer,_			TypeSerializer<Map<UK, UV>> valueSerializer,_			Map<UK, UV> defaultValue,_			RocksDBKeyedStateBackend<K> backend) {__		super(columnFamily, namespaceSerializer, valueSerializer, defaultValue, backend)___		Preconditions.checkState(valueSerializer instanceof MapSerializer, "Unexpected serializer type.")___		MapSerializer<UK, UV> castedMapSerializer = (MapSerializer<UK, UV>) valueSerializer__		this.userKeySerializer = castedMapSerializer.getKeySerializer()__		this.userValueSerializer = castedMapSerializer.getValueSerializer()__	};creates,a,new,code,rocks,dbmap,state,param,column,family,the,rocks,db,column,family,that,this,state,is,associated,to,param,namespace,serializer,the,serializer,for,the,namespace,param,value,serializer,the,serializer,for,the,state,param,default,value,the,default,value,for,the,state,param,backend,the,backend,for,which,this,state,is,bind,to;private,rocks,dbmap,state,column,family,handle,column,family,type,serializer,n,namespace,serializer,type,serializer,map,uk,uv,value,serializer,map,uk,uv,default,value,rocks,dbkeyed,state,backend,k,backend,super,column,family,namespace,serializer,value,serializer,default,value,backend,preconditions,check,state,value,serializer,instanceof,map,serializer,unexpected,serializer,type,map,serializer,uk,uv,casted,map,serializer,map,serializer,uk,uv,value,serializer,this,user,key,serializer,casted,map,serializer,get,key,serializer,this,user,value,serializer,casted,map,serializer,get,value,serializer
RocksDBMapState -> private RocksDBMapState( 			ColumnFamilyHandle columnFamily, 			TypeSerializer<N> namespaceSerializer, 			TypeSerializer<Map<UK, UV>> valueSerializer, 			Map<UK, UV> defaultValue, 			RocksDBKeyedStateBackend<K> backend);1536672025;Creates a new {@code RocksDBMapState}.__@param columnFamily The RocksDB column family that this state is associated to._@param namespaceSerializer The serializer for the namespace._@param valueSerializer The serializer for the state._@param defaultValue The default value for the state._@param backend The backend for which this state is bind to.;private RocksDBMapState(_			ColumnFamilyHandle columnFamily,_			TypeSerializer<N> namespaceSerializer,_			TypeSerializer<Map<UK, UV>> valueSerializer,_			Map<UK, UV> defaultValue,_			RocksDBKeyedStateBackend<K> backend) {__		super(columnFamily, namespaceSerializer, valueSerializer, defaultValue, backend)___		Preconditions.checkState(valueSerializer instanceof MapSerializer, "Unexpected serializer type.")___		MapSerializer<UK, UV> castedMapSerializer = (MapSerializer<UK, UV>) valueSerializer__		this.userKeySerializer = castedMapSerializer.getKeySerializer()__		this.userValueSerializer = castedMapSerializer.getValueSerializer()__	};creates,a,new,code,rocks,dbmap,state,param,column,family,the,rocks,db,column,family,that,this,state,is,associated,to,param,namespace,serializer,the,serializer,for,the,namespace,param,value,serializer,the,serializer,for,the,state,param,default,value,the,default,value,for,the,state,param,backend,the,backend,for,which,this,state,is,bind,to;private,rocks,dbmap,state,column,family,handle,column,family,type,serializer,n,namespace,serializer,type,serializer,map,uk,uv,value,serializer,map,uk,uv,default,value,rocks,dbkeyed,state,backend,k,backend,super,column,family,namespace,serializer,value,serializer,default,value,backend,preconditions,check,state,value,serializer,instanceof,map,serializer,unexpected,serializer,type,map,serializer,uk,uv,casted,map,serializer,map,serializer,uk,uv,value,serializer,this,user,key,serializer,casted,map,serializer,get,key,serializer,this,user,value,serializer,casted,map,serializer,get,value,serializer
RocksDBMapState -> private RocksDBMapState( 			ColumnFamilyHandle columnFamily, 			TypeSerializer<N> namespaceSerializer, 			TypeSerializer<Map<UK, UV>> valueSerializer, 			Map<UK, UV> defaultValue, 			RocksDBKeyedStateBackend<K> backend);1546862341;Creates a new {@code RocksDBMapState}.__@param columnFamily The RocksDB column family that this state is associated to._@param namespaceSerializer The serializer for the namespace._@param valueSerializer The serializer for the state._@param defaultValue The default value for the state._@param backend The backend for which this state is bind to.;private RocksDBMapState(_			ColumnFamilyHandle columnFamily,_			TypeSerializer<N> namespaceSerializer,_			TypeSerializer<Map<UK, UV>> valueSerializer,_			Map<UK, UV> defaultValue,_			RocksDBKeyedStateBackend<K> backend) {__		super(columnFamily, namespaceSerializer, valueSerializer, defaultValue, backend)___		Preconditions.checkState(valueSerializer instanceof MapSerializer, "Unexpected serializer type.")___		MapSerializer<UK, UV> castedMapSerializer = (MapSerializer<UK, UV>) valueSerializer__		this.userKeySerializer = castedMapSerializer.getKeySerializer()__		this.userValueSerializer = castedMapSerializer.getValueSerializer()__	};creates,a,new,code,rocks,dbmap,state,param,column,family,the,rocks,db,column,family,that,this,state,is,associated,to,param,namespace,serializer,the,serializer,for,the,namespace,param,value,serializer,the,serializer,for,the,state,param,default,value,the,default,value,for,the,state,param,backend,the,backend,for,which,this,state,is,bind,to;private,rocks,dbmap,state,column,family,handle,column,family,type,serializer,n,namespace,serializer,type,serializer,map,uk,uv,value,serializer,map,uk,uv,default,value,rocks,dbkeyed,state,backend,k,backend,super,column,family,namespace,serializer,value,serializer,default,value,backend,preconditions,check,state,value,serializer,instanceof,map,serializer,unexpected,serializer,type,map,serializer,uk,uv,casted,map,serializer,map,serializer,uk,uv,value,serializer,this,user,key,serializer,casted,map,serializer,get,key,serializer,this,user,value,serializer,casted,map,serializer,get,value,serializer
RocksDBMapState -> private RocksDBMapState( 			ColumnFamilyHandle columnFamily, 			TypeSerializer<N> namespaceSerializer, 			TypeSerializer<Map<UK, UV>> valueSerializer, 			Map<UK, UV> defaultValue, 			RocksDBKeyedStateBackend<K> backend);1546862378;Creates a new {@code RocksDBMapState}.__@param columnFamily The RocksDB column family that this state is associated to._@param namespaceSerializer The serializer for the namespace._@param valueSerializer The serializer for the state._@param defaultValue The default value for the state._@param backend The backend for which this state is bind to.;private RocksDBMapState(_			ColumnFamilyHandle columnFamily,_			TypeSerializer<N> namespaceSerializer,_			TypeSerializer<Map<UK, UV>> valueSerializer,_			Map<UK, UV> defaultValue,_			RocksDBKeyedStateBackend<K> backend) {__		super(columnFamily, namespaceSerializer, valueSerializer, defaultValue, backend)___		Preconditions.checkState(valueSerializer instanceof MapSerializer, "Unexpected serializer type.")___		MapSerializer<UK, UV> castedMapSerializer = (MapSerializer<UK, UV>) valueSerializer__		this.userKeySerializer = castedMapSerializer.getKeySerializer()__		this.userValueSerializer = castedMapSerializer.getValueSerializer()__	};creates,a,new,code,rocks,dbmap,state,param,column,family,the,rocks,db,column,family,that,this,state,is,associated,to,param,namespace,serializer,the,serializer,for,the,namespace,param,value,serializer,the,serializer,for,the,state,param,default,value,the,default,value,for,the,state,param,backend,the,backend,for,which,this,state,is,bind,to;private,rocks,dbmap,state,column,family,handle,column,family,type,serializer,n,namespace,serializer,type,serializer,map,uk,uv,value,serializer,map,uk,uv,default,value,rocks,dbkeyed,state,backend,k,backend,super,column,family,namespace,serializer,value,serializer,default,value,backend,preconditions,check,state,value,serializer,instanceof,map,serializer,unexpected,serializer,type,map,serializer,uk,uv,casted,map,serializer,map,serializer,uk,uv,value,serializer,this,user,key,serializer,casted,map,serializer,get,key,serializer,this,user,value,serializer,casted,map,serializer,get,value,serializer
RocksDBMapState -> private RocksDBMapState( 			ColumnFamilyHandle columnFamily, 			TypeSerializer<N> namespaceSerializer, 			TypeSerializer<Map<UK, UV>> valueSerializer, 			Map<UK, UV> defaultValue, 			RocksDBKeyedStateBackend<K> backend);1546891740;Creates a new {@code RocksDBMapState}.__@param columnFamily The RocksDB column family that this state is associated to._@param namespaceSerializer The serializer for the namespace._@param valueSerializer The serializer for the state._@param defaultValue The default value for the state._@param backend The backend for which this state is bind to.;private RocksDBMapState(_			ColumnFamilyHandle columnFamily,_			TypeSerializer<N> namespaceSerializer,_			TypeSerializer<Map<UK, UV>> valueSerializer,_			Map<UK, UV> defaultValue,_			RocksDBKeyedStateBackend<K> backend) {__		super(columnFamily, namespaceSerializer, valueSerializer, defaultValue, backend)___		Preconditions.checkState(valueSerializer instanceof MapSerializer, "Unexpected serializer type.")___		MapSerializer<UK, UV> castedMapSerializer = (MapSerializer<UK, UV>) valueSerializer__		this.userKeySerializer = castedMapSerializer.getKeySerializer()__		this.userValueSerializer = castedMapSerializer.getValueSerializer()__	};creates,a,new,code,rocks,dbmap,state,param,column,family,the,rocks,db,column,family,that,this,state,is,associated,to,param,namespace,serializer,the,serializer,for,the,namespace,param,value,serializer,the,serializer,for,the,state,param,default,value,the,default,value,for,the,state,param,backend,the,backend,for,which,this,state,is,bind,to;private,rocks,dbmap,state,column,family,handle,column,family,type,serializer,n,namespace,serializer,type,serializer,map,uk,uv,value,serializer,map,uk,uv,default,value,rocks,dbkeyed,state,backend,k,backend,super,column,family,namespace,serializer,value,serializer,default,value,backend,preconditions,check,state,value,serializer,instanceof,map,serializer,unexpected,serializer,type,map,serializer,uk,uv,casted,map,serializer,map,serializer,uk,uv,value,serializer,this,user,key,serializer,casted,map,serializer,get,key,serializer,this,user,value,serializer,casted,map,serializer,get,value,serializer
RocksDBMapState -> private RocksDBMapState( 			ColumnFamilyHandle columnFamily, 			TypeSerializer<N> namespaceSerializer, 			TypeSerializer<Map<UK, UV>> valueSerializer, 			Map<UK, UV> defaultValue, 			RocksDBKeyedStateBackend<K> backend);1549553056;Creates a new {@code RocksDBMapState}.__@param columnFamily The RocksDB column family that this state is associated to._@param namespaceSerializer The serializer for the namespace._@param valueSerializer The serializer for the state._@param defaultValue The default value for the state._@param backend The backend for which this state is bind to.;private RocksDBMapState(_			ColumnFamilyHandle columnFamily,_			TypeSerializer<N> namespaceSerializer,_			TypeSerializer<Map<UK, UV>> valueSerializer,_			Map<UK, UV> defaultValue,_			RocksDBKeyedStateBackend<K> backend) {__		super(columnFamily, namespaceSerializer, valueSerializer, defaultValue, backend)___		Preconditions.checkState(valueSerializer instanceof MapSerializer, "Unexpected serializer type.")___		MapSerializer<UK, UV> castedMapSerializer = (MapSerializer<UK, UV>) valueSerializer__		this.userKeySerializer = castedMapSerializer.getKeySerializer()__		this.userValueSerializer = castedMapSerializer.getValueSerializer()__	};creates,a,new,code,rocks,dbmap,state,param,column,family,the,rocks,db,column,family,that,this,state,is,associated,to,param,namespace,serializer,the,serializer,for,the,namespace,param,value,serializer,the,serializer,for,the,state,param,default,value,the,default,value,for,the,state,param,backend,the,backend,for,which,this,state,is,bind,to;private,rocks,dbmap,state,column,family,handle,column,family,type,serializer,n,namespace,serializer,type,serializer,map,uk,uv,value,serializer,map,uk,uv,default,value,rocks,dbkeyed,state,backend,k,backend,super,column,family,namespace,serializer,value,serializer,default,value,backend,preconditions,check,state,value,serializer,instanceof,map,serializer,unexpected,serializer,type,map,serializer,uk,uv,casted,map,serializer,map,serializer,uk,uv,value,serializer,this,user,key,serializer,casted,map,serializer,get,key,serializer,this,user,value,serializer,casted,map,serializer,get,value,serializer
RocksDBMapState -> private RocksDBMapState( 			ColumnFamilyHandle columnFamily, 			TypeSerializer<N> namespaceSerializer, 			TypeSerializer<Map<UK, UV>> valueSerializer, 			Map<UK, UV> defaultValue, 			RocksDBKeyedStateBackend<K> backend);1550863001;Creates a new {@code RocksDBMapState}.__@param columnFamily The RocksDB column family that this state is associated to._@param namespaceSerializer The serializer for the namespace._@param valueSerializer The serializer for the state._@param defaultValue The default value for the state._@param backend The backend for which this state is bind to.;private RocksDBMapState(_			ColumnFamilyHandle columnFamily,_			TypeSerializer<N> namespaceSerializer,_			TypeSerializer<Map<UK, UV>> valueSerializer,_			Map<UK, UV> defaultValue,_			RocksDBKeyedStateBackend<K> backend) {__		super(columnFamily, namespaceSerializer, valueSerializer, defaultValue, backend)___		Preconditions.checkState(valueSerializer instanceof MapSerializer, "Unexpected serializer type.")___		MapSerializer<UK, UV> castedMapSerializer = (MapSerializer<UK, UV>) valueSerializer__		this.userKeySerializer = castedMapSerializer.getKeySerializer()__		this.userValueSerializer = castedMapSerializer.getValueSerializer()__	};creates,a,new,code,rocks,dbmap,state,param,column,family,the,rocks,db,column,family,that,this,state,is,associated,to,param,namespace,serializer,the,serializer,for,the,namespace,param,value,serializer,the,serializer,for,the,state,param,default,value,the,default,value,for,the,state,param,backend,the,backend,for,which,this,state,is,bind,to;private,rocks,dbmap,state,column,family,handle,column,family,type,serializer,n,namespace,serializer,type,serializer,map,uk,uv,value,serializer,map,uk,uv,default,value,rocks,dbkeyed,state,backend,k,backend,super,column,family,namespace,serializer,value,serializer,default,value,backend,preconditions,check,state,value,serializer,instanceof,map,serializer,unexpected,serializer,type,map,serializer,uk,uv,casted,map,serializer,map,serializer,uk,uv,value,serializer,this,user,key,serializer,casted,map,serializer,get,key,serializer,this,user,value,serializer,casted,map,serializer,get,value,serializer
RocksDBMapState -> public RocksDBMapState( 			ColumnFamilyHandle columnFamily, 			TypeSerializer<N> namespaceSerializer, 			MapStateDescriptor<UK, UV> stateDesc, 			RocksDBKeyedStateBackend<K> backend);1522337739;Creates a new {@code RocksDBMapState}.__@param namespaceSerializer The serializer for the namespace._@param stateDesc The state identifier for the state.;public RocksDBMapState(_			ColumnFamilyHandle columnFamily,_			TypeSerializer<N> namespaceSerializer,_			MapStateDescriptor<UK, UV> stateDesc,_			RocksDBKeyedStateBackend<K> backend) {__		super(columnFamily, namespaceSerializer, stateDesc, backend)___		this.userKeySerializer = stateDesc.getKeySerializer()__		this.userValueSerializer = stateDesc.getValueSerializer()__	};creates,a,new,code,rocks,dbmap,state,param,namespace,serializer,the,serializer,for,the,namespace,param,state,desc,the,state,identifier,for,the,state;public,rocks,dbmap,state,column,family,handle,column,family,type,serializer,n,namespace,serializer,map,state,descriptor,uk,uv,state,desc,rocks,dbkeyed,state,backend,k,backend,super,column,family,namespace,serializer,state,desc,backend,this,user,key,serializer,state,desc,get,key,serializer,this,user,value,serializer,state,desc,get,value,serializer
RocksDBMapState -> public RocksDBMapState( 			ColumnFamilyHandle columnFamily, 			TypeSerializer<N> namespaceSerializer, 			MapStateDescriptor<UK, UV> stateDesc, 			RocksDBKeyedStateBackend<K> backend);1523010728;Creates a new {@code RocksDBMapState}.__@param namespaceSerializer The serializer for the namespace._@param stateDesc The state identifier for the state.;public RocksDBMapState(_			ColumnFamilyHandle columnFamily,_			TypeSerializer<N> namespaceSerializer,_			MapStateDescriptor<UK, UV> stateDesc,_			RocksDBKeyedStateBackend<K> backend) {__		super(columnFamily, namespaceSerializer, stateDesc, backend)___		this.userKeySerializer = stateDesc.getKeySerializer()__		this.userValueSerializer = stateDesc.getValueSerializer()__	};creates,a,new,code,rocks,dbmap,state,param,namespace,serializer,the,serializer,for,the,namespace,param,state,desc,the,state,identifier,for,the,state;public,rocks,dbmap,state,column,family,handle,column,family,type,serializer,n,namespace,serializer,map,state,descriptor,uk,uv,state,desc,rocks,dbkeyed,state,backend,k,backend,super,column,family,namespace,serializer,state,desc,backend,this,user,key,serializer,state,desc,get,key,serializer,this,user,value,serializer,state,desc,get,value,serializer
RocksDBMapState -> public RocksDBMapState( 			ColumnFamilyHandle columnFamily, 			TypeSerializer<N> namespaceSerializer, 			MapStateDescriptor<UK, UV> stateDesc, 			RocksDBKeyedStateBackend<K> backend);1524760045;Creates a new {@code RocksDBMapState}.__@param namespaceSerializer The serializer for the namespace._@param stateDesc The state identifier for the state.;public RocksDBMapState(_			ColumnFamilyHandle columnFamily,_			TypeSerializer<N> namespaceSerializer,_			MapStateDescriptor<UK, UV> stateDesc,_			RocksDBKeyedStateBackend<K> backend) {__		super(columnFamily, namespaceSerializer, stateDesc, backend)___		this.userKeySerializer = stateDesc.getKeySerializer()__		this.userValueSerializer = stateDesc.getValueSerializer()__	};creates,a,new,code,rocks,dbmap,state,param,namespace,serializer,the,serializer,for,the,namespace,param,state,desc,the,state,identifier,for,the,state;public,rocks,dbmap,state,column,family,handle,column,family,type,serializer,n,namespace,serializer,map,state,descriptor,uk,uv,state,desc,rocks,dbkeyed,state,backend,k,backend,super,column,family,namespace,serializer,state,desc,backend,this,user,key,serializer,state,desc,get,key,serializer,this,user,value,serializer,state,desc,get,value,serializer
RocksDBMapState -> public RocksDBMapState( 			ColumnFamilyHandle columnFamily, 			TypeSerializer<N> namespaceSerializer, 			TypeSerializer<Map<UK, UV>> valueSerializer, 			Map<UK, UV> defaultValue, 			RocksDBKeyedStateBackend<K> backend);1524906327;Creates a new {@code RocksDBMapState}.__@param columnFamily The RocksDB column family that this state is associated to._@param namespaceSerializer The serializer for the namespace._@param valueSerializer The serializer for the state._@param defaultValue The default value for the state._@param backend The backend for which this state is bind to.;public RocksDBMapState(_			ColumnFamilyHandle columnFamily,_			TypeSerializer<N> namespaceSerializer,_			TypeSerializer<Map<UK, UV>> valueSerializer,_			Map<UK, UV> defaultValue,_			RocksDBKeyedStateBackend<K> backend) {__		super(columnFamily, namespaceSerializer, valueSerializer, defaultValue, backend)___		Preconditions.checkState(valueSerializer instanceof MapSerializer, "Unexpected serializer type.")___		MapSerializer<UK, UV> castedMapSerializer = (MapSerializer<UK, UV>) valueSerializer__		this.userKeySerializer = castedMapSerializer.getKeySerializer()__		this.userValueSerializer = castedMapSerializer.getValueSerializer()__	};creates,a,new,code,rocks,dbmap,state,param,column,family,the,rocks,db,column,family,that,this,state,is,associated,to,param,namespace,serializer,the,serializer,for,the,namespace,param,value,serializer,the,serializer,for,the,state,param,default,value,the,default,value,for,the,state,param,backend,the,backend,for,which,this,state,is,bind,to;public,rocks,dbmap,state,column,family,handle,column,family,type,serializer,n,namespace,serializer,type,serializer,map,uk,uv,value,serializer,map,uk,uv,default,value,rocks,dbkeyed,state,backend,k,backend,super,column,family,namespace,serializer,value,serializer,default,value,backend,preconditions,check,state,value,serializer,instanceof,map,serializer,unexpected,serializer,type,map,serializer,uk,uv,casted,map,serializer,map,serializer,uk,uv,value,serializer,this,user,key,serializer,casted,map,serializer,get,key,serializer,this,user,value,serializer,casted,map,serializer,get,value,serializer
RocksDBMapState -> public RocksDBMapState( 			ColumnFamilyHandle columnFamily, 			TypeSerializer<N> namespaceSerializer, 			TypeSerializer<Map<UK, UV>> valueSerializer, 			Map<UK, UV> defaultValue, 			RocksDBKeyedStateBackend<K> backend);1526301031;Creates a new {@code RocksDBMapState}.__@param columnFamily The RocksDB column family that this state is associated to._@param namespaceSerializer The serializer for the namespace._@param valueSerializer The serializer for the state._@param defaultValue The default value for the state._@param backend The backend for which this state is bind to.;public RocksDBMapState(_			ColumnFamilyHandle columnFamily,_			TypeSerializer<N> namespaceSerializer,_			TypeSerializer<Map<UK, UV>> valueSerializer,_			Map<UK, UV> defaultValue,_			RocksDBKeyedStateBackend<K> backend) {__		super(columnFamily, namespaceSerializer, valueSerializer, defaultValue, backend)___		Preconditions.checkState(valueSerializer instanceof MapSerializer, "Unexpected serializer type.")___		MapSerializer<UK, UV> castedMapSerializer = (MapSerializer<UK, UV>) valueSerializer__		this.userKeySerializer = castedMapSerializer.getKeySerializer()__		this.userValueSerializer = castedMapSerializer.getValueSerializer()__	};creates,a,new,code,rocks,dbmap,state,param,column,family,the,rocks,db,column,family,that,this,state,is,associated,to,param,namespace,serializer,the,serializer,for,the,namespace,param,value,serializer,the,serializer,for,the,state,param,default,value,the,default,value,for,the,state,param,backend,the,backend,for,which,this,state,is,bind,to;public,rocks,dbmap,state,column,family,handle,column,family,type,serializer,n,namespace,serializer,type,serializer,map,uk,uv,value,serializer,map,uk,uv,default,value,rocks,dbkeyed,state,backend,k,backend,super,column,family,namespace,serializer,value,serializer,default,value,backend,preconditions,check,state,value,serializer,instanceof,map,serializer,unexpected,serializer,type,map,serializer,uk,uv,casted,map,serializer,map,serializer,uk,uv,value,serializer,this,user,key,serializer,casted,map,serializer,get,key,serializer,this,user,value,serializer,casted,map,serializer,get,value,serializer
RocksDBMapState -> public RocksDBMapState( 			ColumnFamilyHandle columnFamily, 			TypeSerializer<N> namespaceSerializer, 			TypeSerializer<Map<UK, UV>> valueSerializer, 			Map<UK, UV> defaultValue, 			RocksDBKeyedStateBackend<K> backend);1526562913;Creates a new {@code RocksDBMapState}.__@param columnFamily The RocksDB column family that this state is associated to._@param namespaceSerializer The serializer for the namespace._@param valueSerializer The serializer for the state._@param defaultValue The default value for the state._@param backend The backend for which this state is bind to.;public RocksDBMapState(_			ColumnFamilyHandle columnFamily,_			TypeSerializer<N> namespaceSerializer,_			TypeSerializer<Map<UK, UV>> valueSerializer,_			Map<UK, UV> defaultValue,_			RocksDBKeyedStateBackend<K> backend) {__		super(columnFamily, namespaceSerializer, valueSerializer, defaultValue, backend)___		Preconditions.checkState(valueSerializer instanceof MapSerializer, "Unexpected serializer type.")___		MapSerializer<UK, UV> castedMapSerializer = (MapSerializer<UK, UV>) valueSerializer__		this.userKeySerializer = castedMapSerializer.getKeySerializer()__		this.userValueSerializer = castedMapSerializer.getValueSerializer()__	};creates,a,new,code,rocks,dbmap,state,param,column,family,the,rocks,db,column,family,that,this,state,is,associated,to,param,namespace,serializer,the,serializer,for,the,namespace,param,value,serializer,the,serializer,for,the,state,param,default,value,the,default,value,for,the,state,param,backend,the,backend,for,which,this,state,is,bind,to;public,rocks,dbmap,state,column,family,handle,column,family,type,serializer,n,namespace,serializer,type,serializer,map,uk,uv,value,serializer,map,uk,uv,default,value,rocks,dbkeyed,state,backend,k,backend,super,column,family,namespace,serializer,value,serializer,default,value,backend,preconditions,check,state,value,serializer,instanceof,map,serializer,unexpected,serializer,type,map,serializer,uk,uv,casted,map,serializer,map,serializer,uk,uv,value,serializer,this,user,key,serializer,casted,map,serializer,get,key,serializer,this,user,value,serializer,casted,map,serializer,get,value,serializer
RocksDBMapState -> public RocksDBMapState( 			ColumnFamilyHandle columnFamily, 			TypeSerializer<N> namespaceSerializer, 			TypeSerializer<Map<UK, UV>> valueSerializer, 			Map<UK, UV> defaultValue, 			RocksDBKeyedStateBackend<K> backend);1526634122;Creates a new {@code RocksDBMapState}.__@param columnFamily The RocksDB column family that this state is associated to._@param namespaceSerializer The serializer for the namespace._@param valueSerializer The serializer for the state._@param defaultValue The default value for the state._@param backend The backend for which this state is bind to.;public RocksDBMapState(_			ColumnFamilyHandle columnFamily,_			TypeSerializer<N> namespaceSerializer,_			TypeSerializer<Map<UK, UV>> valueSerializer,_			Map<UK, UV> defaultValue,_			RocksDBKeyedStateBackend<K> backend) {__		super(columnFamily, namespaceSerializer, valueSerializer, defaultValue, backend)___		Preconditions.checkState(valueSerializer instanceof MapSerializer, "Unexpected serializer type.")___		MapSerializer<UK, UV> castedMapSerializer = (MapSerializer<UK, UV>) valueSerializer__		this.userKeySerializer = castedMapSerializer.getKeySerializer()__		this.userValueSerializer = castedMapSerializer.getValueSerializer()__	};creates,a,new,code,rocks,dbmap,state,param,column,family,the,rocks,db,column,family,that,this,state,is,associated,to,param,namespace,serializer,the,serializer,for,the,namespace,param,value,serializer,the,serializer,for,the,state,param,default,value,the,default,value,for,the,state,param,backend,the,backend,for,which,this,state,is,bind,to;public,rocks,dbmap,state,column,family,handle,column,family,type,serializer,n,namespace,serializer,type,serializer,map,uk,uv,value,serializer,map,uk,uv,default,value,rocks,dbkeyed,state,backend,k,backend,super,column,family,namespace,serializer,value,serializer,default,value,backend,preconditions,check,state,value,serializer,instanceof,map,serializer,unexpected,serializer,type,map,serializer,uk,uv,casted,map,serializer,map,serializer,uk,uv,value,serializer,this,user,key,serializer,casted,map,serializer,get,key,serializer,this,user,value,serializer,casted,map,serializer,get,value,serializer
RocksDBMapState -> public RocksDBMapState( 			ColumnFamilyHandle columnFamily, 			TypeSerializer<N> namespaceSerializer, 			TypeSerializer<Map<UK, UV>> valueSerializer, 			Map<UK, UV> defaultValue, 			RocksDBKeyedStateBackend<K> backend);1527071274;Creates a new {@code RocksDBMapState}.__@param columnFamily The RocksDB column family that this state is associated to._@param namespaceSerializer The serializer for the namespace._@param valueSerializer The serializer for the state._@param defaultValue The default value for the state._@param backend The backend for which this state is bind to.;public RocksDBMapState(_			ColumnFamilyHandle columnFamily,_			TypeSerializer<N> namespaceSerializer,_			TypeSerializer<Map<UK, UV>> valueSerializer,_			Map<UK, UV> defaultValue,_			RocksDBKeyedStateBackend<K> backend) {__		super(columnFamily, namespaceSerializer, valueSerializer, defaultValue, backend)___		Preconditions.checkState(valueSerializer instanceof MapSerializer, "Unexpected serializer type.")___		MapSerializer<UK, UV> castedMapSerializer = (MapSerializer<UK, UV>) valueSerializer__		this.userKeySerializer = castedMapSerializer.getKeySerializer()__		this.userValueSerializer = castedMapSerializer.getValueSerializer()__	};creates,a,new,code,rocks,dbmap,state,param,column,family,the,rocks,db,column,family,that,this,state,is,associated,to,param,namespace,serializer,the,serializer,for,the,namespace,param,value,serializer,the,serializer,for,the,state,param,default,value,the,default,value,for,the,state,param,backend,the,backend,for,which,this,state,is,bind,to;public,rocks,dbmap,state,column,family,handle,column,family,type,serializer,n,namespace,serializer,type,serializer,map,uk,uv,value,serializer,map,uk,uv,default,value,rocks,dbkeyed,state,backend,k,backend,super,column,family,namespace,serializer,value,serializer,default,value,backend,preconditions,check,state,value,serializer,instanceof,map,serializer,unexpected,serializer,type,map,serializer,uk,uv,casted,map,serializer,map,serializer,uk,uv,value,serializer,this,user,key,serializer,casted,map,serializer,get,key,serializer,this,user,value,serializer,casted,map,serializer,get,value,serializer
RocksDBMapState -> public RocksDBMapState( 			ColumnFamilyHandle columnFamily, 			TypeSerializer<N> namespaceSerializer, 			TypeSerializer<Map<UK, UV>> valueSerializer, 			Map<UK, UV> defaultValue, 			RocksDBKeyedStateBackend<K> backend);1528969216;Creates a new {@code RocksDBMapState}.__@param columnFamily The RocksDB column family that this state is associated to._@param namespaceSerializer The serializer for the namespace._@param valueSerializer The serializer for the state._@param defaultValue The default value for the state._@param backend The backend for which this state is bind to.;public RocksDBMapState(_			ColumnFamilyHandle columnFamily,_			TypeSerializer<N> namespaceSerializer,_			TypeSerializer<Map<UK, UV>> valueSerializer,_			Map<UK, UV> defaultValue,_			RocksDBKeyedStateBackend<K> backend) {__		super(columnFamily, namespaceSerializer, valueSerializer, defaultValue, backend)___		Preconditions.checkState(valueSerializer instanceof MapSerializer, "Unexpected serializer type.")___		MapSerializer<UK, UV> castedMapSerializer = (MapSerializer<UK, UV>) valueSerializer__		this.userKeySerializer = castedMapSerializer.getKeySerializer()__		this.userValueSerializer = castedMapSerializer.getValueSerializer()__	};creates,a,new,code,rocks,dbmap,state,param,column,family,the,rocks,db,column,family,that,this,state,is,associated,to,param,namespace,serializer,the,serializer,for,the,namespace,param,value,serializer,the,serializer,for,the,state,param,default,value,the,default,value,for,the,state,param,backend,the,backend,for,which,this,state,is,bind,to;public,rocks,dbmap,state,column,family,handle,column,family,type,serializer,n,namespace,serializer,type,serializer,map,uk,uv,value,serializer,map,uk,uv,default,value,rocks,dbkeyed,state,backend,k,backend,super,column,family,namespace,serializer,value,serializer,default,value,backend,preconditions,check,state,value,serializer,instanceof,map,serializer,unexpected,serializer,type,map,serializer,uk,uv,casted,map,serializer,map,serializer,uk,uv,value,serializer,this,user,key,serializer,casted,map,serializer,get,key,serializer,this,user,value,serializer,casted,map,serializer,get,value,serializer
