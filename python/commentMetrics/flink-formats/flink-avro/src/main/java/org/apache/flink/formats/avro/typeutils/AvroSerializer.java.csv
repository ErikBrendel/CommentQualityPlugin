# id;timestamp;commentText;codeText;commentWords;codeWords
AvroSerializer -> @Deprecated 	@SuppressWarnings("unused") 	public AvroSerializer(Class<T> type, Class<? extends T> typeToInstantiate);1509991007;@deprecated Use {@link AvroSerializer#AvroSerializer(Class)} instead.;@Deprecated_	@SuppressWarnings("unused")_	public AvroSerializer(Class<T> type, Class<? extends T> typeToInstantiate) {_		this(type)__	};deprecated,use,link,avro,serializer,avro,serializer,class,instead;deprecated,suppress,warnings,unused,public,avro,serializer,class,t,type,class,extends,t,type,to,instantiate,this,type
AvroSerializer -> @Deprecated 	@SuppressWarnings("unused") 	public AvroSerializer(Class<T> type, Class<? extends T> typeToInstantiate);1520447729;@deprecated Use {@link AvroSerializer#AvroSerializer(Class)} instead.;@Deprecated_	@SuppressWarnings("unused")_	public AvroSerializer(Class<T> type, Class<? extends T> typeToInstantiate) {_		this(type)__	};deprecated,use,link,avro,serializer,avro,serializer,class,instead;deprecated,suppress,warnings,unused,public,avro,serializer,class,t,type,class,extends,t,type,to,instantiate,this,type
AvroSerializer -> @Deprecated 	@SuppressWarnings("unused") 	public AvroSerializer(Class<T> type, Class<? extends T> typeToInstantiate);1527085902;@deprecated Use {@link AvroSerializer#AvroSerializer(Class)} instead.;@Deprecated_	@SuppressWarnings("unused")_	public AvroSerializer(Class<T> type, Class<? extends T> typeToInstantiate) {_		this(type)__	};deprecated,use,link,avro,serializer,avro,serializer,class,instead;deprecated,suppress,warnings,unused,public,avro,serializer,class,t,type,class,extends,t,type,to,instantiate,this,type
AvroSerializer -> @Deprecated 	@SuppressWarnings("unused") 	public AvroSerializer(Class<T> type, Class<? extends T> typeToInstantiate);1539149027;@deprecated Use {@link AvroSerializer#AvroSerializer(Class)} instead.;@Deprecated_	@SuppressWarnings("unused")_	public AvroSerializer(Class<T> type, Class<? extends T> typeToInstantiate) {_		this(type)__	};deprecated,use,link,avro,serializer,avro,serializer,class,instead;deprecated,suppress,warnings,unused,public,avro,serializer,class,t,type,class,extends,t,type,to,instantiate,this,type
AvroSerializer -> @Deprecated 	@SuppressWarnings("unused") 	public AvroSerializer(Class<T> type, Class<? extends T> typeToInstantiate);1540907751;@deprecated Use {@link AvroSerializer#AvroSerializer(Class)} instead.;@Deprecated_	@SuppressWarnings("unused")_	public AvroSerializer(Class<T> type, Class<? extends T> typeToInstantiate) {_		this(type)__	};deprecated,use,link,avro,serializer,avro,serializer,class,instead;deprecated,suppress,warnings,unused,public,avro,serializer,class,t,type,class,extends,t,type,to,instantiate,this,type
AvroSerializer -> @Deprecated 	@SuppressWarnings("unused") 	public AvroSerializer(Class<T> type, Class<? extends T> typeToInstantiate);1548745569;@deprecated Use {@link AvroSerializer#AvroSerializer(Class)} instead.;@Deprecated_	@SuppressWarnings("unused")_	public AvroSerializer(Class<T> type, Class<? extends T> typeToInstantiate) {_		this(type)__	};deprecated,use,link,avro,serializer,avro,serializer,class,instead;deprecated,suppress,warnings,unused,public,avro,serializer,class,t,type,class,extends,t,type,to,instantiate,this,type
AvroSerializer -> @Deprecated 	@SuppressWarnings("unused") 	public AvroSerializer(Class<T> type, Class<? extends T> typeToInstantiate);1550652777;@deprecated Use {@link AvroSerializer#AvroSerializer(Class)} instead.;@Deprecated_	@SuppressWarnings("unused")_	public AvroSerializer(Class<T> type, Class<? extends T> typeToInstantiate) {_		this(type)__	};deprecated,use,link,avro,serializer,avro,serializer,class,instead;deprecated,suppress,warnings,unused,public,avro,serializer,class,t,type,class,extends,t,type,to,instantiate,this,type
AvroSerializer -> @Internal 	AvroSerializer(Class<T> type, SerializableAvroSchema newSchema, SerializableAvroSchema previousSchema);1548745569;Creates a new AvroSerializer for the type indicated by the given class.;@Internal_	AvroSerializer(Class<T> type, SerializableAvroSchema newSchema, SerializableAvroSchema previousSchema) {_		this.type = checkNotNull(type)__		this.schema = checkNotNull(newSchema)__		this.previousSchema = checkNotNull(previousSchema)__	};creates,a,new,avro,serializer,for,the,type,indicated,by,the,given,class;internal,avro,serializer,class,t,type,serializable,avro,schema,new,schema,serializable,avro,schema,previous,schema,this,type,check,not,null,type,this,schema,check,not,null,new,schema,this,previous,schema,check,not,null,previous,schema
AvroSerializer -> @Internal 	AvroSerializer(Class<T> type, SerializableAvroSchema newSchema, SerializableAvroSchema previousSchema);1550652777;Creates a new AvroSerializer for the type indicated by the given class.;@Internal_	AvroSerializer(Class<T> type, SerializableAvroSchema newSchema, SerializableAvroSchema previousSchema) {_		this.type = checkNotNull(type)__		this.schema = checkNotNull(newSchema)__		this.previousSchema = checkNotNull(previousSchema)__	};creates,a,new,avro,serializer,for,the,type,indicated,by,the,given,class;internal,avro,serializer,class,t,type,serializable,avro,schema,new,schema,serializable,avro,schema,previous,schema,this,type,check,not,null,type,this,schema,check,not,null,new,schema,this,previous,schema,check,not,null,previous,schema
AvroSerializer -> public AvroSerializer(Class<T> type);1509991007;Creates a new AvroSerializer for the type indicated by the given class.;public AvroSerializer(Class<T> type) {_		this.type = checkNotNull(type)__	};creates,a,new,avro,serializer,for,the,type,indicated,by,the,given,class;public,avro,serializer,class,t,type,this,type,check,not,null,type
AvroSerializer -> public AvroSerializer(Class<T> type);1520447729;Creates a new AvroSerializer for the type indicated by the given class.;public AvroSerializer(Class<T> type) {_		this.type = checkNotNull(type)__	};creates,a,new,avro,serializer,for,the,type,indicated,by,the,given,class;public,avro,serializer,class,t,type,this,type,check,not,null,type
AvroSerializer -> public AvroSerializer(Class<T> type);1527085902;Creates a new AvroSerializer for the type indicated by the given class._This constructor is intended to be used with {@link SpecificRecord} or reflection serializer._For serializing {@link GenericData.Record} use {@link AvroSerializer#AvroSerializer(Class, Schema)};public AvroSerializer(Class<T> type) {_		checkArgument(!isGenericRecord(type),_			"For GenericData.Record use constructor with explicit schema.")__		this.type = checkNotNull(type)__		this.schemaString = null__	};creates,a,new,avro,serializer,for,the,type,indicated,by,the,given,class,this,constructor,is,intended,to,be,used,with,link,specific,record,or,reflection,serializer,for,serializing,link,generic,data,record,use,link,avro,serializer,avro,serializer,class,schema;public,avro,serializer,class,t,type,check,argument,is,generic,record,type,for,generic,data,record,use,constructor,with,explicit,schema,this,type,check,not,null,type,this,schema,string,null
AvroSerializer -> public AvroSerializer(Class<T> type);1539149027;Creates a new AvroSerializer for the type indicated by the given class._This constructor is intended to be used with {@link SpecificRecord} or reflection serializer._For serializing {@link GenericData.Record} use {@link AvroSerializer#AvroSerializer(Class, Schema)};public AvroSerializer(Class<T> type) {_		checkArgument(!isGenericRecord(type),_			"For GenericData.Record use constructor with explicit schema.")__		this.type = checkNotNull(type)__		this.schemaString = null__	};creates,a,new,avro,serializer,for,the,type,indicated,by,the,given,class,this,constructor,is,intended,to,be,used,with,link,specific,record,or,reflection,serializer,for,serializing,link,generic,data,record,use,link,avro,serializer,avro,serializer,class,schema;public,avro,serializer,class,t,type,check,argument,is,generic,record,type,for,generic,data,record,use,constructor,with,explicit,schema,this,type,check,not,null,type,this,schema,string,null
AvroSerializer -> public AvroSerializer(Class<T> type);1540907751;Creates a new AvroSerializer for the type indicated by the given class._This constructor is intended to be used with {@link SpecificRecord} or reflection serializer._For serializing {@link GenericData.Record} use {@link AvroSerializer#AvroSerializer(Class, Schema)};public AvroSerializer(Class<T> type) {_		this(checkNotNull(type), new SerializableAvroSchema(), new SerializableAvroSchema())__		checkArgument(!isGenericRecord(type),_			"For GenericData.Record use constructor with explicit schema.")__	};creates,a,new,avro,serializer,for,the,type,indicated,by,the,given,class,this,constructor,is,intended,to,be,used,with,link,specific,record,or,reflection,serializer,for,serializing,link,generic,data,record,use,link,avro,serializer,avro,serializer,class,schema;public,avro,serializer,class,t,type,this,check,not,null,type,new,serializable,avro,schema,new,serializable,avro,schema,check,argument,is,generic,record,type,for,generic,data,record,use,constructor,with,explicit,schema
AvroSerializer -> public AvroSerializer(Class<T> type);1548745569;Creates a new AvroSerializer for the type indicated by the given class._This constructor is intended to be used with {@link SpecificRecord} or reflection serializer._For serializing {@link GenericData.Record} use {@link AvroSerializer#AvroSerializer(Class, Schema)};public AvroSerializer(Class<T> type) {_		this(checkNotNull(type), new SerializableAvroSchema(), new SerializableAvroSchema())__		checkArgument(!isGenericRecord(type),_			"For GenericData.Record use constructor with explicit schema.")__	};creates,a,new,avro,serializer,for,the,type,indicated,by,the,given,class,this,constructor,is,intended,to,be,used,with,link,specific,record,or,reflection,serializer,for,serializing,link,generic,data,record,use,link,avro,serializer,avro,serializer,class,schema;public,avro,serializer,class,t,type,this,check,not,null,type,new,serializable,avro,schema,new,serializable,avro,schema,check,argument,is,generic,record,type,for,generic,data,record,use,constructor,with,explicit,schema
AvroSerializer -> public AvroSerializer(Class<T> type);1550652777;Creates a new AvroSerializer for the type indicated by the given class._This constructor is intended to be used with {@link SpecificRecord} or reflection serializer._For serializing {@link GenericData.Record} use {@link AvroSerializer#AvroSerializer(Class, Schema)};public AvroSerializer(Class<T> type) {_		this(checkNotNull(type), new SerializableAvroSchema(), new SerializableAvroSchema())__		checkArgument(!isGenericRecord(type),_			"For GenericData.Record use constructor with explicit schema.")__	};creates,a,new,avro,serializer,for,the,type,indicated,by,the,given,class,this,constructor,is,intended,to,be,used,with,link,specific,record,or,reflection,serializer,for,serializing,link,generic,data,record,use,link,avro,serializer,avro,serializer,class,schema;public,avro,serializer,class,t,type,this,check,not,null,type,new,serializable,avro,schema,new,serializable,avro,schema,check,argument,is,generic,record,type,for,generic,data,record,use,constructor,with,explicit,schema
AvroSerializer -> public AvroSerializer(Class<T> type, Schema schema);1527085902;Creates a new AvroSerializer for the type indicated by the given class._This constructor is expected to be used only with {@link GenericData.Record}._For {@link SpecificRecord} or reflection serializer use_{@link AvroSerializer#AvroSerializer(Class)};public AvroSerializer(Class<T> type, Schema schema) {_		checkArgument(isGenericRecord(type),_			"For classes other than GenericData.Record use constructor without explicit schema.")__		this.type = checkNotNull(type)__		this.schema = checkNotNull(schema)__		this.schemaString = schema.toString()__	};creates,a,new,avro,serializer,for,the,type,indicated,by,the,given,class,this,constructor,is,expected,to,be,used,only,with,link,generic,data,record,for,link,specific,record,or,reflection,serializer,use,link,avro,serializer,avro,serializer,class;public,avro,serializer,class,t,type,schema,schema,check,argument,is,generic,record,type,for,classes,other,than,generic,data,record,use,constructor,without,explicit,schema,this,type,check,not,null,type,this,schema,check,not,null,schema,this,schema,string,schema,to,string
AvroSerializer -> public AvroSerializer(Class<T> type, Schema schema);1539149027;Creates a new AvroSerializer for the type indicated by the given class._This constructor is expected to be used only with {@link GenericData.Record}._For {@link SpecificRecord} or reflection serializer use_{@link AvroSerializer#AvroSerializer(Class)};public AvroSerializer(Class<T> type, Schema schema) {_		checkArgument(isGenericRecord(type),_			"For classes other than GenericData.Record use constructor without explicit schema.")__		this.type = checkNotNull(type)__		this.schema = checkNotNull(schema)__		this.schemaString = schema.toString()__	};creates,a,new,avro,serializer,for,the,type,indicated,by,the,given,class,this,constructor,is,expected,to,be,used,only,with,link,generic,data,record,for,link,specific,record,or,reflection,serializer,use,link,avro,serializer,avro,serializer,class;public,avro,serializer,class,t,type,schema,schema,check,argument,is,generic,record,type,for,classes,other,than,generic,data,record,use,constructor,without,explicit,schema,this,type,check,not,null,type,this,schema,check,not,null,schema,this,schema,string,schema,to,string
AvroSerializer -> public AvroSerializer(Class<T> type, Schema schema);1540907751;Creates a new AvroSerializer for the type indicated by the given class._This constructor is expected to be used only with {@link GenericData.Record}._For {@link SpecificRecord} or reflection serializer use_{@link AvroSerializer#AvroSerializer(Class)};public AvroSerializer(Class<T> type, Schema schema) {_		this(checkNotNull(type), new SerializableAvroSchema(checkNotNull(schema)), new SerializableAvroSchema())__		checkArgument(isGenericRecord(type),_			"For classes other than GenericData.Record use constructor without explicit schema.")__	};creates,a,new,avro,serializer,for,the,type,indicated,by,the,given,class,this,constructor,is,expected,to,be,used,only,with,link,generic,data,record,for,link,specific,record,or,reflection,serializer,use,link,avro,serializer,avro,serializer,class;public,avro,serializer,class,t,type,schema,schema,this,check,not,null,type,new,serializable,avro,schema,check,not,null,schema,new,serializable,avro,schema,check,argument,is,generic,record,type,for,classes,other,than,generic,data,record,use,constructor,without,explicit,schema
AvroSerializer -> public AvroSerializer(Class<T> type, Schema schema);1548745569;Creates a new AvroSerializer for the type indicated by the given class._This constructor is expected to be used only with {@link GenericData.Record}._For {@link SpecificRecord} or reflection serializer use_{@link AvroSerializer#AvroSerializer(Class)};public AvroSerializer(Class<T> type, Schema schema) {_		this(checkNotNull(type), new SerializableAvroSchema(checkNotNull(schema)), new SerializableAvroSchema())__		checkArgument(isGenericRecord(type),_			"For classes other than GenericData.Record use constructor without explicit schema.")__	};creates,a,new,avro,serializer,for,the,type,indicated,by,the,given,class,this,constructor,is,expected,to,be,used,only,with,link,generic,data,record,for,link,specific,record,or,reflection,serializer,use,link,avro,serializer,avro,serializer,class;public,avro,serializer,class,t,type,schema,schema,this,check,not,null,type,new,serializable,avro,schema,check,not,null,schema,new,serializable,avro,schema,check,argument,is,generic,record,type,for,classes,other,than,generic,data,record,use,constructor,without,explicit,schema
AvroSerializer -> public AvroSerializer(Class<T> type, Schema schema);1550652777;Creates a new AvroSerializer for the type indicated by the given class._This constructor is expected to be used only with {@link GenericData.Record}._For {@link SpecificRecord} or reflection serializer use_{@link AvroSerializer#AvroSerializer(Class)};public AvroSerializer(Class<T> type, Schema schema) {_		this(checkNotNull(type), new SerializableAvroSchema(checkNotNull(schema)), new SerializableAvroSchema())__		checkArgument(isGenericRecord(type),_			"For classes other than GenericData.Record use constructor without explicit schema.")__	};creates,a,new,avro,serializer,for,the,type,indicated,by,the,given,class,this,constructor,is,expected,to,be,used,only,with,link,generic,data,record,for,link,specific,record,or,reflection,serializer,use,link,avro,serializer,avro,serializer,class;public,avro,serializer,class,t,type,schema,schema,this,check,not,null,type,new,serializable,avro,schema,check,not,null,schema,new,serializable,avro,schema,check,argument,is,generic,record,type,for,classes,other,than,generic,data,record,use,constructor,without,explicit,schema
AvroSerializer -> AvroSchemaSerializerConfigSnapshot -> @SuppressWarnings("unused") 		public AvroSchemaSerializerConfigSnapshot();1509991007;Default constructor for instantiation via reflection.;@SuppressWarnings("unused")_		public AvroSchemaSerializerConfigSnapshot() {};default,constructor,for,instantiation,via,reflection;suppress,warnings,unused,public,avro,schema,serializer,config,snapshot
AvroSerializer -> AvroSchemaSerializerConfigSnapshot -> @SuppressWarnings("unused") 		public AvroSchemaSerializerConfigSnapshot();1520447729;Default constructor for instantiation via reflection.;@SuppressWarnings("unused")_		public AvroSchemaSerializerConfigSnapshot() {};default,constructor,for,instantiation,via,reflection;suppress,warnings,unused,public,avro,schema,serializer,config,snapshot
AvroSerializer -> AvroSchemaSerializerConfigSnapshot -> @SuppressWarnings("unused") 		public AvroSchemaSerializerConfigSnapshot();1527085902;Default constructor for instantiation via reflection.;@SuppressWarnings("unused")_		public AvroSchemaSerializerConfigSnapshot() {};default,constructor,for,instantiation,via,reflection;suppress,warnings,unused,public,avro,schema,serializer,config,snapshot
AvroSerializer -> AvroSchemaSerializerConfigSnapshot -> @SuppressWarnings("unused") 		public AvroSchemaSerializerConfigSnapshot();1539149027;Default constructor for instantiation via reflection.;@SuppressWarnings("unused")_		public AvroSchemaSerializerConfigSnapshot() {};default,constructor,for,instantiation,via,reflection;suppress,warnings,unused,public,avro,schema,serializer,config,snapshot
