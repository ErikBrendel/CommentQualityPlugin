# id;timestamp;commentText;codeText;commentWords;codeWords
AbstractTableInputFormat -> protected abstract String getTableName()_;1487150653;What table is to be read._Per instance of a TableInputFormat derivative only a single tablename is possible._@return The name of the table;protected abstract String getTableName()_;what,table,is,to,be,read,per,instance,of,a,table,input,format,derivative,only,a,single,tablename,is,possible,return,the,name,of,the,table;protected,abstract,string,get,table,name
AbstractTableInputFormat -> protected abstract String getTableName()_;1487150654;What table is to be read._Per instance of a TableInputFormat derivative only a single table name is possible.__@return The name of the table;protected abstract String getTableName()_;what,table,is,to,be,read,per,instance,of,a,table,input,format,derivative,only,a,single,table,name,is,possible,return,the,name,of,the,table;protected,abstract,string,get,table,name
AbstractTableInputFormat -> protected abstract String getTableName()_;1495923069;What table is to be read.__<p>Per instance of a TableInputFormat derivative only a single table name is possible.__@return The name of the table;protected abstract String getTableName()_;what,table,is,to,be,read,p,per,instance,of,a,table,input,format,derivative,only,a,single,table,name,is,possible,return,the,name,of,the,table;protected,abstract,string,get,table,name
AbstractTableInputFormat -> public abstract void configure(Configuration parameters)_;1487150653;Creates a {@link Scan} object and opens the {@link HTable} connection._These are opened here because they are needed in the createInputSplits_which is called before the openInputFormat method._So the connection is opened in {@link #configure(Configuration)} and closed in {@link #closeInputFormat()}.__@param parameters The configuration that is to be used_@see Configuration;public abstract void configure(Configuration parameters)_;creates,a,link,scan,object,and,opens,the,link,htable,connection,these,are,opened,here,because,they,are,needed,in,the,create,input,splits,which,is,called,before,the,open,input,format,method,so,the,connection,is,opened,in,link,configure,configuration,and,closed,in,link,close,input,format,param,parameters,the,configuration,that,is,to,be,used,see,configuration;public,abstract,void,configure,configuration,parameters
AbstractTableInputFormat -> public abstract void configure(Configuration parameters)_;1487150654;Creates a {@link Scan} object and opens the {@link HTable} connection._These are opened here because they are needed in the createInputSplits_which is called before the openInputFormat method.__The connection is opened in this method and closed in {@link #closeInputFormat()}.__@param parameters The configuration that is to be used_@see Configuration;public abstract void configure(Configuration parameters)_;creates,a,link,scan,object,and,opens,the,link,htable,connection,these,are,opened,here,because,they,are,needed,in,the,create,input,splits,which,is,called,before,the,open,input,format,method,the,connection,is,opened,in,this,method,and,closed,in,link,close,input,format,param,parameters,the,configuration,that,is,to,be,used,see,configuration;public,abstract,void,configure,configuration,parameters
AbstractTableInputFormat -> public abstract void configure(Configuration parameters)_;1495923069;Creates a {@link Scan} object and opens the {@link HTable} connection.__<p>These are opened here because they are needed in the createInputSplits_which is called before the openInputFormat method.__<p>The connection is opened in this method and closed in {@link #closeInputFormat()}.__@param parameters The configuration that is to be used_@see Configuration;public abstract void configure(Configuration parameters)_;creates,a,link,scan,object,and,opens,the,link,htable,connection,p,these,are,opened,here,because,they,are,needed,in,the,create,input,splits,which,is,called,before,the,open,input,format,method,p,the,connection,is,opened,in,this,method,and,closed,in,link,close,input,format,param,parameters,the,configuration,that,is,to,be,used,see,configuration;public,abstract,void,configure,configuration,parameters
AbstractTableInputFormat -> protected abstract T mapResultToOutType(Result r)_;1487150654;HBase returns an instance of {@link Result}.__This method maps the returned {@link Result} instance into the output type {@link T}.__@param r The Result instance from HBase that needs to be converted_@return The appropriate instance of {@link T} that contains the data of Result.;protected abstract T mapResultToOutType(Result r)_;hbase,returns,an,instance,of,link,result,this,method,maps,the,returned,link,result,instance,into,the,output,type,link,t,param,r,the,result,instance,from,hbase,that,needs,to,be,converted,return,the,appropriate,instance,of,link,t,that,contains,the,data,of,result;protected,abstract,t,map,result,to,out,type,result,r
AbstractTableInputFormat -> protected abstract T mapResultToOutType(Result r)_;1495923069;HBase returns an instance of {@link Result}.__<p>This method maps the returned {@link Result} instance into the output type {@link T}.__@param r The Result instance from HBase that needs to be converted_@return The appropriate instance of {@link T} that contains the data of Result.;protected abstract T mapResultToOutType(Result r)_;hbase,returns,an,instance,of,link,result,p,this,method,maps,the,returned,link,result,instance,into,the,output,type,link,t,param,r,the,result,instance,from,hbase,that,needs,to,be,converted,return,the,appropriate,instance,of,link,t,that,contains,the,data,of,result;protected,abstract,t,map,result,to,out,type,result,r
AbstractTableInputFormat -> protected abstract Scan getScanner()_;1487150653;Returns an instance of Scan that retrieves the required subset of records from the HBase table._@return The appropriate instance of Scan for this usecase.;protected abstract Scan getScanner()_;returns,an,instance,of,scan,that,retrieves,the,required,subset,of,records,from,the,hbase,table,return,the,appropriate,instance,of,scan,for,this,usecase;protected,abstract,scan,get,scanner
AbstractTableInputFormat -> protected abstract Scan getScanner()_;1487150654;Returns an instance of Scan that retrieves the required subset of records from the HBase table.__@return The appropriate instance of Scan for this use case.;protected abstract Scan getScanner()_;returns,an,instance,of,scan,that,retrieves,the,required,subset,of,records,from,the,hbase,table,return,the,appropriate,instance,of,scan,for,this,use,case;protected,abstract,scan,get,scanner
AbstractTableInputFormat -> protected abstract Scan getScanner()_;1495923069;Returns an instance of Scan that retrieves the required subset of records from the HBase table.__@return The appropriate instance of Scan for this use case.;protected abstract Scan getScanner()_;returns,an,instance,of,scan,that,retrieves,the,required,subset,of,records,from,the,hbase,table,return,the,appropriate,instance,of,scan,for,this,use,case;protected,abstract,scan,get,scanner
AbstractTableInputFormat -> protected boolean includeRegionInScan(final byte[] startKey, final byte[] endKey);1487150654;Test if the given region is to be included in the scan while splitting the regions of a table.__@param startKey Start key of the region_@param endKey   End key of the region_@return true, if this region needs to be included as part of the input (default).;protected boolean includeRegionInScan(final byte[] startKey, final byte[] endKey) {_		return true__	};test,if,the,given,region,is,to,be,included,in,the,scan,while,splitting,the,regions,of,a,table,param,start,key,start,key,of,the,region,param,end,key,end,key,of,the,region,return,true,if,this,region,needs,to,be,included,as,part,of,the,input,default;protected,boolean,include,region,in,scan,final,byte,start,key,final,byte,end,key,return,true
AbstractTableInputFormat -> protected boolean includeRegionInScan(final byte[] startKey, final byte[] endKey);1495923069;Test if the given region is to be included in the scan while splitting the regions of a table.__@param startKey Start key of the region_@param endKey   End key of the region_@return true, if this region needs to be included as part of the input (default).;protected boolean includeRegionInScan(final byte[] startKey, final byte[] endKey) {_		return true__	};test,if,the,given,region,is,to,be,included,in,the,scan,while,splitting,the,regions,of,a,table,param,start,key,start,key,of,the,region,param,end,key,end,key,of,the,region,return,true,if,this,region,needs,to,be,included,as,part,of,the,input,default;protected,boolean,include,region,in,scan,final,byte,start,key,final,byte,end,key,return,true
