# id;timestamp;commentText;codeText;commentWords;codeWords
AvroKeyValueSinkWriter -> AvroKeyValue -> public AvroKeyValue(GenericRecord keyValueRecord);1480685315;Wraps a GenericRecord that is a key value pair.;public AvroKeyValue(GenericRecord keyValueRecord) {_			mKeyValueRecord = keyValueRecord__		};wraps,a,generic,record,that,is,a,key,value,pair;public,avro,key,value,generic,record,key,value,record,m,key,value,record,key,value,record
AvroKeyValueSinkWriter -> AvroKeyValue -> public AvroKeyValue(GenericRecord keyValueRecord);1495923089;Wraps a GenericRecord that is a key value pair.;public AvroKeyValue(GenericRecord keyValueRecord) {_			mKeyValueRecord = keyValueRecord__		};wraps,a,generic,record,that,is,a,key,value,pair;public,avro,key,value,generic,record,key,value,record,m,key,value,record,key,value,record
AvroKeyValueSinkWriter -> AvroKeyValue -> public AvroKeyValue(GenericRecord keyValueRecord);1508854428;Wraps a GenericRecord that is a key value pair.;public AvroKeyValue(GenericRecord keyValueRecord) {_			mKeyValueRecord = keyValueRecord__		};wraps,a,generic,record,that,is,a,key,value,pair;public,avro,key,value,generic,record,key,value,record,m,key,value,record,key,value,record
AvroKeyValueSinkWriter -> AvroKeyValue -> public AvroKeyValue(GenericRecord keyValueRecord);1509723634;Wraps a GenericRecord that is a key value pair.;public AvroKeyValue(GenericRecord keyValueRecord) {_			mKeyValueRecord = keyValueRecord__		};wraps,a,generic,record,that,is,a,key,value,pair;public,avro,key,value,generic,record,key,value,record,m,key,value,record,key,value,record
AvroKeyValueSinkWriter -> AvroKeyValue -> public AvroKeyValue(GenericRecord keyValueRecord);1519675829;Wraps a GenericRecord that is a key value pair.;public AvroKeyValue(GenericRecord keyValueRecord) {_			mKeyValueRecord = keyValueRecord__		};wraps,a,generic,record,that,is,a,key,value,pair;public,avro,key,value,generic,record,key,value,record,m,key,value,record,key,value,record
AvroKeyValueSinkWriter -> AvroKeyValue -> public AvroKeyValue(GenericRecord keyValueRecord);1530796781;Wraps a GenericRecord that is a key value pair.;public AvroKeyValue(GenericRecord keyValueRecord) {_			mKeyValueRecord = keyValueRecord__		};wraps,a,generic,record,that,is,a,key,value,pair;public,avro,key,value,generic,record,key,value,record,m,key,value,record,key,value,record
AvroKeyValueSinkWriter -> AvroKeyValue -> public AvroKeyValue(GenericRecord keyValueRecord);1546865252;Wraps a GenericRecord that is a key value pair.;public AvroKeyValue(GenericRecord keyValueRecord) {_			mKeyValueRecord = keyValueRecord__		};wraps,a,generic,record,that,is,a,key,value,pair;public,avro,key,value,generic,record,key,value,record,m,key,value,record,key,value,record
AvroKeyValueSinkWriter -> AvroKeyValue -> public static Schema getSchema(Schema keySchema, Schema valueSchema);1480685315;Creates a KeyValuePair generic record schema.__@return A schema for a generic record with two fields: 'key' and_'value'.;public static Schema getSchema(Schema keySchema, Schema valueSchema) {_			Schema schema = Schema.createRecord(KEY_VALUE_PAIR_RECORD_NAME,_					"A key/value pair", KEY_VALUE_PAIR_RECORD_NAMESPACE, false)__			schema.setFields(Arrays.asList(new Schema.Field(KEY_FIELD,_					keySchema, "The key", null), new Schema.Field(VALUE_FIELD,_					valueSchema, "The value", null)))__			return schema__		};creates,a,key,value,pair,generic,record,schema,return,a,schema,for,a,generic,record,with,two,fields,key,and,value;public,static,schema,get,schema,schema,key,schema,schema,value,schema,schema,schema,schema,create,record,a,key,value,pair,false,schema,set,fields,arrays,as,list,new,schema,field,key,schema,the,key,null,new,schema,field,value,schema,the,value,null,return,schema
AvroKeyValueSinkWriter -> AvroKeyValue -> public static Schema getSchema(Schema keySchema, Schema valueSchema);1495923089;Creates a KeyValuePair generic record schema.__@return A schema for a generic record with two fields: 'key' and_'value'.;public static Schema getSchema(Schema keySchema, Schema valueSchema) {_			Schema schema = Schema.createRecord(KEY_VALUE_PAIR_RECORD_NAME,_					"A key/value pair", KEY_VALUE_PAIR_RECORD_NAMESPACE, false)__			schema.setFields(Arrays.asList(new Schema.Field(KEY_FIELD,_					keySchema, "The key", null), new Schema.Field(VALUE_FIELD,_					valueSchema, "The value", null)))__			return schema__		};creates,a,key,value,pair,generic,record,schema,return,a,schema,for,a,generic,record,with,two,fields,key,and,value;public,static,schema,get,schema,schema,key,schema,schema,value,schema,schema,schema,schema,create,record,a,key,value,pair,false,schema,set,fields,arrays,as,list,new,schema,field,key,schema,the,key,null,new,schema,field,value,schema,the,value,null,return,schema
AvroKeyValueSinkWriter -> AvroKeyValue -> public static Schema getSchema(Schema keySchema, Schema valueSchema);1508854428;Creates a KeyValuePair generic record schema.__@return A schema for a generic record with two fields: 'key' and_'value'.;public static Schema getSchema(Schema keySchema, Schema valueSchema) {_			Schema schema = Schema.createRecord(KEY_VALUE_PAIR_RECORD_NAME,_					"A key/value pair", KEY_VALUE_PAIR_RECORD_NAMESPACE, false)__			schema.setFields(Arrays.asList(new Schema.Field(KEY_FIELD,_					keySchema, "The key", null), new Schema.Field(VALUE_FIELD,_					valueSchema, "The value", null)))__			return schema__		};creates,a,key,value,pair,generic,record,schema,return,a,schema,for,a,generic,record,with,two,fields,key,and,value;public,static,schema,get,schema,schema,key,schema,schema,value,schema,schema,schema,schema,create,record,a,key,value,pair,false,schema,set,fields,arrays,as,list,new,schema,field,key,schema,the,key,null,new,schema,field,value,schema,the,value,null,return,schema
AvroKeyValueSinkWriter -> AvroKeyValue -> public static Schema getSchema(Schema keySchema, Schema valueSchema);1509723634;Creates a KeyValuePair generic record schema.__@return A schema for a generic record with two fields: 'key' and_'value'.;public static Schema getSchema(Schema keySchema, Schema valueSchema) {_			Schema schema = Schema.createRecord(KEY_VALUE_PAIR_RECORD_NAME,_					"A key/value pair", KEY_VALUE_PAIR_RECORD_NAMESPACE, false)__			schema.setFields(Arrays.asList(new Schema.Field(KEY_FIELD,_					keySchema, "The key", null), new Schema.Field(VALUE_FIELD,_					valueSchema, "The value", null)))__			return schema__		};creates,a,key,value,pair,generic,record,schema,return,a,schema,for,a,generic,record,with,two,fields,key,and,value;public,static,schema,get,schema,schema,key,schema,schema,value,schema,schema,schema,schema,create,record,a,key,value,pair,false,schema,set,fields,arrays,as,list,new,schema,field,key,schema,the,key,null,new,schema,field,value,schema,the,value,null,return,schema
AvroKeyValueSinkWriter -> AvroKeyValue -> public static Schema getSchema(Schema keySchema, Schema valueSchema);1519675829;Creates a KeyValuePair generic record schema.__@return A schema for a generic record with two fields: 'key' and_'value'.;public static Schema getSchema(Schema keySchema, Schema valueSchema) {_			Schema schema = Schema.createRecord(KEY_VALUE_PAIR_RECORD_NAME,_					"A key/value pair", KEY_VALUE_PAIR_RECORD_NAMESPACE, false)__			schema.setFields(Arrays.asList(new Schema.Field(KEY_FIELD,_					keySchema, "The key", null), new Schema.Field(VALUE_FIELD,_					valueSchema, "The value", null)))__			return schema__		};creates,a,key,value,pair,generic,record,schema,return,a,schema,for,a,generic,record,with,two,fields,key,and,value;public,static,schema,get,schema,schema,key,schema,schema,value,schema,schema,schema,schema,create,record,a,key,value,pair,false,schema,set,fields,arrays,as,list,new,schema,field,key,schema,the,key,null,new,schema,field,value,schema,the,value,null,return,schema
AvroKeyValueSinkWriter -> AvroKeyValue -> public static Schema getSchema(Schema keySchema, Schema valueSchema);1530796781;Creates a KeyValuePair generic record schema.__@return A schema for a generic record with two fields: 'key' and_'value'.;public static Schema getSchema(Schema keySchema, Schema valueSchema) {_			Schema schema = Schema.createRecord(KEY_VALUE_PAIR_RECORD_NAME,_					"A key/value pair", KEY_VALUE_PAIR_RECORD_NAMESPACE, false)__			schema.setFields(Arrays.asList(new Schema.Field(KEY_FIELD,_					keySchema, "The key", null), new Schema.Field(VALUE_FIELD,_					valueSchema, "The value", null)))__			return schema__		};creates,a,key,value,pair,generic,record,schema,return,a,schema,for,a,generic,record,with,two,fields,key,and,value;public,static,schema,get,schema,schema,key,schema,schema,value,schema,schema,schema,schema,create,record,a,key,value,pair,false,schema,set,fields,arrays,as,list,new,schema,field,key,schema,the,key,null,new,schema,field,value,schema,the,value,null,return,schema
AvroKeyValueSinkWriter -> AvroKeyValue -> public static Schema getSchema(Schema keySchema, Schema valueSchema);1546865252;Creates a KeyValuePair generic record schema.__@return A schema for a generic record with two fields: 'key' and_'value'.;public static Schema getSchema(Schema keySchema, Schema valueSchema) {_			Schema schema = Schema.createRecord(KEY_VALUE_PAIR_RECORD_NAME,_					"A key/value pair", KEY_VALUE_PAIR_RECORD_NAMESPACE, false)__			schema.setFields(Arrays.asList(new Schema.Field(KEY_FIELD,_					keySchema, "The key", null), new Schema.Field(VALUE_FIELD,_					valueSchema, "The value", null)))__			return schema__		};creates,a,key,value,pair,generic,record,schema,return,a,schema,for,a,generic,record,with,two,fields,key,and,value;public,static,schema,get,schema,schema,key,schema,schema,value,schema,schema,schema,schema,create,record,a,key,value,pair,false,schema,set,fields,arrays,as,list,new,schema,field,key,schema,the,key,null,new,schema,field,value,schema,the,value,null,return,schema
AvroKeyValueSinkWriter -> @SuppressWarnings("deprecation") 	public AvroKeyValueSinkWriter(Map<String, String> properties);1480685315;C'tor for the writer_<p>_You can provide different properties that will be used to configure avro key-value writer as simple properties map(see example above)_@param properties;@SuppressWarnings("deprecation")_	public AvroKeyValueSinkWriter(Map<String, String> properties) {_		this.properties = properties__		_		String keySchemaString = properties.get(CONF_OUTPUT_KEY_SCHEMA)__		if (keySchemaString == null) {_			throw new IllegalStateException("No key schema provided, set '" + CONF_OUTPUT_KEY_SCHEMA + "' property")__		}_		Schema.parse(keySchemaString)__		_		String valueSchemaString = properties.get(CONF_OUTPUT_VALUE_SCHEMA)__		if (valueSchemaString == null) {_			throw new IllegalStateException("No value schema provided, set '" + CONF_OUTPUT_VALUE_SCHEMA + "' property")__		}_		Schema.parse(valueSchemaString)__	};c,tor,for,the,writer,p,you,can,provide,different,properties,that,will,be,used,to,configure,avro,key,value,writer,as,simple,properties,map,see,example,above,param,properties;suppress,warnings,deprecation,public,avro,key,value,sink,writer,map,string,string,properties,this,properties,properties,string,key,schema,string,properties,get,if,key,schema,string,null,throw,new,illegal,state,exception,no,key,schema,provided,set,property,schema,parse,key,schema,string,string,value,schema,string,properties,get,if,value,schema,string,null,throw,new,illegal,state,exception,no,value,schema,provided,set,property,schema,parse,value,schema,string
AvroKeyValueSinkWriter -> @SuppressWarnings("deprecation") 	public AvroKeyValueSinkWriter(Map<String, String> properties);1495923089;C'tor for the writer.__<p>You can provide different properties that will be used to configure avro key-value writer as simple properties map(see example above)_@param properties;@SuppressWarnings("deprecation")_	public AvroKeyValueSinkWriter(Map<String, String> properties) {_		this.properties = properties___		String keySchemaString = properties.get(CONF_OUTPUT_KEY_SCHEMA)__		if (keySchemaString == null) {_			throw new IllegalStateException("No key schema provided, set '" + CONF_OUTPUT_KEY_SCHEMA + "' property")__		}_		Schema.parse(keySchemaString)_ __		String valueSchemaString = properties.get(CONF_OUTPUT_VALUE_SCHEMA)__		if (valueSchemaString == null) {_			throw new IllegalStateException("No value schema provided, set '" + CONF_OUTPUT_VALUE_SCHEMA + "' property")__		}_		Schema.parse(valueSchemaString)_ _	};c,tor,for,the,writer,p,you,can,provide,different,properties,that,will,be,used,to,configure,avro,key,value,writer,as,simple,properties,map,see,example,above,param,properties;suppress,warnings,deprecation,public,avro,key,value,sink,writer,map,string,string,properties,this,properties,properties,string,key,schema,string,properties,get,if,key,schema,string,null,throw,new,illegal,state,exception,no,key,schema,provided,set,property,schema,parse,key,schema,string,string,value,schema,string,properties,get,if,value,schema,string,null,throw,new,illegal,state,exception,no,value,schema,provided,set,property,schema,parse,value,schema,string
AvroKeyValueSinkWriter -> @SuppressWarnings("deprecation") 	public AvroKeyValueSinkWriter(Map<String, String> properties);1508854428;C'tor for the writer.__<p>You can provide different properties that will be used to configure avro key-value writer as simple properties map(see example above)_@param properties;@SuppressWarnings("deprecation")_	public AvroKeyValueSinkWriter(Map<String, String> properties) {_		this.properties = properties__		validateProperties()__	};c,tor,for,the,writer,p,you,can,provide,different,properties,that,will,be,used,to,configure,avro,key,value,writer,as,simple,properties,map,see,example,above,param,properties;suppress,warnings,deprecation,public,avro,key,value,sink,writer,map,string,string,properties,this,properties,properties,validate,properties
AvroKeyValueSinkWriter -> @SuppressWarnings("deprecation") 	public AvroKeyValueSinkWriter(Map<String, String> properties);1509723634;C'tor for the writer.__<p>You can provide different properties that will be used to configure avro key-value writer as simple properties map(see example above)_@param properties;@SuppressWarnings("deprecation")_	public AvroKeyValueSinkWriter(Map<String, String> properties) {_		this.properties = properties__		validateProperties()__	};c,tor,for,the,writer,p,you,can,provide,different,properties,that,will,be,used,to,configure,avro,key,value,writer,as,simple,properties,map,see,example,above,param,properties;suppress,warnings,deprecation,public,avro,key,value,sink,writer,map,string,string,properties,this,properties,properties,validate,properties
AvroKeyValueSinkWriter -> @SuppressWarnings("deprecation") 	public AvroKeyValueSinkWriter(Map<String, String> properties);1519675829;C'tor for the writer.__<p>You can provide different properties that will be used to configure avro key-value writer as simple properties map(see example above)_@param properties;@SuppressWarnings("deprecation")_	public AvroKeyValueSinkWriter(Map<String, String> properties) {_		this.properties = properties__		validateProperties()__	};c,tor,for,the,writer,p,you,can,provide,different,properties,that,will,be,used,to,configure,avro,key,value,writer,as,simple,properties,map,see,example,above,param,properties;suppress,warnings,deprecation,public,avro,key,value,sink,writer,map,string,string,properties,this,properties,properties,validate,properties
AvroKeyValueSinkWriter -> @SuppressWarnings("deprecation") 	public AvroKeyValueSinkWriter(Map<String, String> properties);1530796781;C'tor for the writer.__<p>You can provide different properties that will be used to configure avro key-value writer as simple properties map(see example above)_@param properties;@SuppressWarnings("deprecation")_	public AvroKeyValueSinkWriter(Map<String, String> properties) {_		this.properties = properties__		validateProperties()__	};c,tor,for,the,writer,p,you,can,provide,different,properties,that,will,be,used,to,configure,avro,key,value,writer,as,simple,properties,map,see,example,above,param,properties;suppress,warnings,deprecation,public,avro,key,value,sink,writer,map,string,string,properties,this,properties,properties,validate,properties
AvroKeyValueSinkWriter -> @SuppressWarnings("deprecation") 	public AvroKeyValueSinkWriter(Map<String, String> properties);1546865252;C'tor for the writer.__<p>You can provide different properties that will be used to configure avro key-value writer as simple properties map(see example above)_@param properties;@SuppressWarnings("deprecation")_	public AvroKeyValueSinkWriter(Map<String, String> properties) {_		this.properties = properties__		validateProperties()__	};c,tor,for,the,writer,p,you,can,provide,different,properties,that,will,be,used,to,configure,avro,key,value,writer,as,simple,properties,map,see,example,above,param,properties;suppress,warnings,deprecation,public,avro,key,value,sink,writer,map,string,string,properties,this,properties,properties,validate,properties
