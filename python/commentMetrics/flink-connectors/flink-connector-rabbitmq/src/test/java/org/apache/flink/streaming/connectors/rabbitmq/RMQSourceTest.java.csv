# id;timestamp;commentText;codeText;commentWords;codeWords
RMQSourceTest -> @Test 	public void testCheckpointingDisabled() throws Exception;1480685315;The source should not acknowledge ids in auto-commit mode or check for previously acknowledged ids;@Test_	public void testCheckpointingDisabled() throws Exception {_		source.autoAck = true__		sourceThread.start()___		while (DummySourceContext.numElementsCollected < 50) {_			_			Thread.sleep(5)__		}__		_	};the,source,should,not,acknowledge,ids,in,auto,commit,mode,or,check,for,previously,acknowledged,ids;test,public,void,test,checkpointing,disabled,throws,exception,source,auto,ack,true,source,thread,start,while,dummy,source,context,num,elements,collected,50,thread,sleep,5
RMQSourceTest -> @Test 	public void testCheckpointingDisabled() throws Exception;1481632698;The source should not acknowledge ids in auto-commit mode or check for previously acknowledged ids;@Test_	public void testCheckpointingDisabled() throws Exception {_		source.autoAck = true__		sourceThread.start()___		while (DummySourceContext.numElementsCollected < 50) {_			_			Thread.sleep(5)__		}__		_	};the,source,should,not,acknowledge,ids,in,auto,commit,mode,or,check,for,previously,acknowledged,ids;test,public,void,test,checkpointing,disabled,throws,exception,source,auto,ack,true,source,thread,start,while,dummy,source,context,num,elements,collected,50,thread,sleep,5
RMQSourceTest -> @Test 	public void testCheckpointingDisabled() throws Exception;1487783998;The source should not acknowledge ids in auto-commit mode or check for previously acknowledged ids;@Test_	public void testCheckpointingDisabled() throws Exception {_		source.autoAck = true__		sourceThread.start()___		while (DummySourceContext.numElementsCollected < 50) {_			_			Thread.sleep(5)__		}__		_	};the,source,should,not,acknowledge,ids,in,auto,commit,mode,or,check,for,previously,acknowledged,ids;test,public,void,test,checkpointing,disabled,throws,exception,source,auto,ack,true,source,thread,start,while,dummy,source,context,num,elements,collected,50,thread,sleep,5
RMQSourceTest -> @Test 	public void testCheckpointingDisabled() throws Exception;1489060855;The source should not acknowledge ids in auto-commit mode or check for previously acknowledged ids;@Test_	public void testCheckpointingDisabled() throws Exception {_		source.autoAck = true__		sourceThread.start()___		while (DummySourceContext.numElementsCollected < 50) {_			_			Thread.sleep(5)__		}__		_	};the,source,should,not,acknowledge,ids,in,auto,commit,mode,or,check,for,previously,acknowledged,ids;test,public,void,test,checkpointing,disabled,throws,exception,source,auto,ack,true,source,thread,start,while,dummy,source,context,num,elements,collected,50,thread,sleep,5
RMQSourceTest -> @Test 	public void testCheckpointingDisabled() throws Exception;1495923066;The source should not acknowledge ids in auto-commit mode or check for previously acknowledged ids.;@Test_	public void testCheckpointingDisabled() throws Exception {_		source.autoAck = true__		sourceThread.start()___		while (DummySourceContext.numElementsCollected < 50) {_			_			Thread.sleep(5)__		}__		_	};the,source,should,not,acknowledge,ids,in,auto,commit,mode,or,check,for,previously,acknowledged,ids;test,public,void,test,checkpointing,disabled,throws,exception,source,auto,ack,true,source,thread,start,while,dummy,source,context,num,elements,collected,50,thread,sleep,5
RMQSourceTest -> @Test 	public void testCheckpointingDisabled() throws Exception;1503047863;The source should not acknowledge ids in auto-commit mode or check for previously acknowledged ids.;@Test_	public void testCheckpointingDisabled() throws Exception {_		source.autoAck = true__		sourceThread.start()___		while (DummySourceContext.numElementsCollected < 50) {_			_			Thread.sleep(5)__		}__		_	};the,source,should,not,acknowledge,ids,in,auto,commit,mode,or,check,for,previously,acknowledged,ids;test,public,void,test,checkpointing,disabled,throws,exception,source,auto,ack,true,source,thread,start,while,dummy,source,context,num,elements,collected,50,thread,sleep,5
RMQSourceTest -> @Test 	public void testCheckpointingDisabled() throws Exception;1506441847;The source should not acknowledge ids in auto-commit mode or check for previously acknowledged ids.;@Test_	public void testCheckpointingDisabled() throws Exception {_		source.autoAck = true__		sourceThread.start()___		while (DummySourceContext.numElementsCollected < 50) {_			_			Thread.sleep(5)__		}__		_	};the,source,should,not,acknowledge,ids,in,auto,commit,mode,or,check,for,previously,acknowledged,ids;test,public,void,test,checkpointing,disabled,throws,exception,source,auto,ack,true,source,thread,start,while,dummy,source,context,num,elements,collected,50,thread,sleep,5
RMQSourceTest -> @Test 	public void testCheckpointingDisabled() throws Exception;1509723634;The source should not acknowledge ids in auto-commit mode or check for previously acknowledged ids.;@Test_	public void testCheckpointingDisabled() throws Exception {_		source.autoAck = true__		sourceThread.start()___		while (DummySourceContext.numElementsCollected < 50) {_			_			Thread.sleep(5)__		}__		_	};the,source,should,not,acknowledge,ids,in,auto,commit,mode,or,check,for,previously,acknowledged,ids;test,public,void,test,checkpointing,disabled,throws,exception,source,auto,ack,true,source,thread,start,while,dummy,source,context,num,elements,collected,50,thread,sleep,5
RMQSourceTest -> @Test 	public void testCheckpointingDisabled() throws Exception;1519567828;The source should not acknowledge ids in auto-commit mode or check for previously acknowledged ids.;@Test_	public void testCheckpointingDisabled() throws Exception {_		source.autoAck = true__		sourceThread.start()___		while (DummySourceContext.numElementsCollected < 50) {_			_			Thread.sleep(5)__		}__		_	};the,source,should,not,acknowledge,ids,in,auto,commit,mode,or,check,for,previously,acknowledged,ids;test,public,void,test,checkpointing,disabled,throws,exception,source,auto,ack,true,source,thread,start,while,dummy,source,context,num,elements,collected,50,thread,sleep,5
RMQSourceTest -> @Test 	public void testDuplicateId() throws Exception;1480685315;Checks whether recurring ids are processed again (they shouldn't be).;@Test_	public void testDuplicateId() throws Exception {_		source.autoAck = false__		sourceThread.start()___		while (messageId < 10) {_			_			Thread.sleep(5)__		}__		long oldMessageId__		synchronized (DummySourceContext.lock) {_			oldMessageId = messageId__			messageId = 0__		}__		while (messageId < 10) {_			_			Thread.sleep(5)__		}__		synchronized (DummySourceContext.lock) {_			assertEquals(Math.max(messageId, oldMessageId), DummySourceContext.numElementsCollected)__		}_	};checks,whether,recurring,ids,are,processed,again,they,shouldn,t,be;test,public,void,test,duplicate,id,throws,exception,source,auto,ack,false,source,thread,start,while,message,id,10,thread,sleep,5,long,old,message,id,synchronized,dummy,source,context,lock,old,message,id,message,id,message,id,0,while,message,id,10,thread,sleep,5,synchronized,dummy,source,context,lock,assert,equals,math,max,message,id,old,message,id,dummy,source,context,num,elements,collected
RMQSourceTest -> @Test 	public void testDuplicateId() throws Exception;1481632698;Checks whether recurring ids are processed again (they shouldn't be).;@Test_	public void testDuplicateId() throws Exception {_		source.autoAck = false__		sourceThread.start()___		while (messageId < 10) {_			_			Thread.sleep(5)__		}__		long oldMessageId__		synchronized (DummySourceContext.lock) {_			oldMessageId = messageId__			messageId = 0__		}__		while (messageId < 10) {_			_			Thread.sleep(5)__		}__		synchronized (DummySourceContext.lock) {_			assertEquals(Math.max(messageId, oldMessageId), DummySourceContext.numElementsCollected)__		}_	};checks,whether,recurring,ids,are,processed,again,they,shouldn,t,be;test,public,void,test,duplicate,id,throws,exception,source,auto,ack,false,source,thread,start,while,message,id,10,thread,sleep,5,long,old,message,id,synchronized,dummy,source,context,lock,old,message,id,message,id,message,id,0,while,message,id,10,thread,sleep,5,synchronized,dummy,source,context,lock,assert,equals,math,max,message,id,old,message,id,dummy,source,context,num,elements,collected
RMQSourceTest -> @Test 	public void testDuplicateId() throws Exception;1487783998;Checks whether recurring ids are processed again (they shouldn't be).;@Test_	public void testDuplicateId() throws Exception {_		source.autoAck = false__		sourceThread.start()___		while (messageId < 10) {_			_			Thread.sleep(5)__		}__		long oldMessageId__		synchronized (DummySourceContext.lock) {_			oldMessageId = messageId__			messageId = 0__		}__		while (messageId < 10) {_			_			Thread.sleep(5)__		}__		synchronized (DummySourceContext.lock) {_			assertEquals(Math.max(messageId, oldMessageId), DummySourceContext.numElementsCollected)__		}_	};checks,whether,recurring,ids,are,processed,again,they,shouldn,t,be;test,public,void,test,duplicate,id,throws,exception,source,auto,ack,false,source,thread,start,while,message,id,10,thread,sleep,5,long,old,message,id,synchronized,dummy,source,context,lock,old,message,id,message,id,message,id,0,while,message,id,10,thread,sleep,5,synchronized,dummy,source,context,lock,assert,equals,math,max,message,id,old,message,id,dummy,source,context,num,elements,collected
RMQSourceTest -> @Test 	public void testDuplicateId() throws Exception;1489060855;Checks whether recurring ids are processed again (they shouldn't be).;@Test_	public void testDuplicateId() throws Exception {_		source.autoAck = false__		sourceThread.start()___		while (messageId < 10) {_			_			Thread.sleep(5)__		}__		long oldMessageId__		synchronized (DummySourceContext.lock) {_			oldMessageId = messageId__			messageId = 0__		}__		while (messageId < 10) {_			_			Thread.sleep(5)__		}__		synchronized (DummySourceContext.lock) {_			assertEquals(Math.max(messageId, oldMessageId), DummySourceContext.numElementsCollected)__		}_	};checks,whether,recurring,ids,are,processed,again,they,shouldn,t,be;test,public,void,test,duplicate,id,throws,exception,source,auto,ack,false,source,thread,start,while,message,id,10,thread,sleep,5,long,old,message,id,synchronized,dummy,source,context,lock,old,message,id,message,id,message,id,0,while,message,id,10,thread,sleep,5,synchronized,dummy,source,context,lock,assert,equals,math,max,message,id,old,message,id,dummy,source,context,num,elements,collected
RMQSourceTest -> @Test 	public void testDuplicateId() throws Exception;1495923066;Checks whether recurring ids are processed again (they shouldn't be).;@Test_	public void testDuplicateId() throws Exception {_		source.autoAck = false__		sourceThread.start()___		while (messageId < 10) {_			_			Thread.sleep(5)__		}__		long oldMessageId__		synchronized (DummySourceContext.lock) {_			oldMessageId = messageId__			messageId = 0__		}__		while (messageId < 10) {_			_			Thread.sleep(5)__		}__		synchronized (DummySourceContext.lock) {_			assertEquals(Math.max(messageId, oldMessageId), DummySourceContext.numElementsCollected)__		}_	};checks,whether,recurring,ids,are,processed,again,they,shouldn,t,be;test,public,void,test,duplicate,id,throws,exception,source,auto,ack,false,source,thread,start,while,message,id,10,thread,sleep,5,long,old,message,id,synchronized,dummy,source,context,lock,old,message,id,message,id,message,id,0,while,message,id,10,thread,sleep,5,synchronized,dummy,source,context,lock,assert,equals,math,max,message,id,old,message,id,dummy,source,context,num,elements,collected
RMQSourceTest -> @Test 	public void testDuplicateId() throws Exception;1503047863;Checks whether recurring ids are processed again (they shouldn't be).;@Test_	public void testDuplicateId() throws Exception {_		source.autoAck = false__		sourceThread.start()___		while (messageId < 10) {_			_			Thread.sleep(5)__		}__		long oldMessageId__		synchronized (DummySourceContext.lock) {_			oldMessageId = messageId__			messageId = 0__		}__		while (messageId < 10) {_			_			Thread.sleep(5)__		}__		synchronized (DummySourceContext.lock) {_			assertEquals(Math.max(messageId, oldMessageId), DummySourceContext.numElementsCollected)__		}_	};checks,whether,recurring,ids,are,processed,again,they,shouldn,t,be;test,public,void,test,duplicate,id,throws,exception,source,auto,ack,false,source,thread,start,while,message,id,10,thread,sleep,5,long,old,message,id,synchronized,dummy,source,context,lock,old,message,id,message,id,message,id,0,while,message,id,10,thread,sleep,5,synchronized,dummy,source,context,lock,assert,equals,math,max,message,id,old,message,id,dummy,source,context,num,elements,collected
RMQSourceTest -> @Test 	public void testDuplicateId() throws Exception;1506441847;Checks whether recurring ids are processed again (they shouldn't be).;@Test_	public void testDuplicateId() throws Exception {_		source.autoAck = false__		sourceThread.start()___		while (messageId < 10) {_			_			Thread.sleep(5)__		}__		long oldMessageId__		synchronized (DummySourceContext.lock) {_			oldMessageId = messageId__			messageId = 0__		}__		while (messageId < 10) {_			_			Thread.sleep(5)__		}__		synchronized (DummySourceContext.lock) {_			assertEquals(Math.max(messageId, oldMessageId), DummySourceContext.numElementsCollected)__		}_	};checks,whether,recurring,ids,are,processed,again,they,shouldn,t,be;test,public,void,test,duplicate,id,throws,exception,source,auto,ack,false,source,thread,start,while,message,id,10,thread,sleep,5,long,old,message,id,synchronized,dummy,source,context,lock,old,message,id,message,id,message,id,0,while,message,id,10,thread,sleep,5,synchronized,dummy,source,context,lock,assert,equals,math,max,message,id,old,message,id,dummy,source,context,num,elements,collected
RMQSourceTest -> @Test 	public void testDuplicateId() throws Exception;1509723634;Checks whether recurring ids are processed again (they shouldn't be).;@Test_	public void testDuplicateId() throws Exception {_		source.autoAck = false__		sourceThread.start()___		while (messageId < 10) {_			_			Thread.sleep(5)__		}__		long oldMessageId__		synchronized (DummySourceContext.lock) {_			oldMessageId = messageId__			messageId = 0__		}__		while (messageId < 10) {_			_			Thread.sleep(5)__		}__		synchronized (DummySourceContext.lock) {_			assertEquals(Math.max(messageId, oldMessageId), DummySourceContext.numElementsCollected)__		}_	};checks,whether,recurring,ids,are,processed,again,they,shouldn,t,be;test,public,void,test,duplicate,id,throws,exception,source,auto,ack,false,source,thread,start,while,message,id,10,thread,sleep,5,long,old,message,id,synchronized,dummy,source,context,lock,old,message,id,message,id,message,id,0,while,message,id,10,thread,sleep,5,synchronized,dummy,source,context,lock,assert,equals,math,max,message,id,old,message,id,dummy,source,context,num,elements,collected
RMQSourceTest -> @Test 	public void testDuplicateId() throws Exception;1519567828;Checks whether recurring ids are processed again (they shouldn't be).;@Test_	public void testDuplicateId() throws Exception {_		source.autoAck = false__		sourceThread.start()___		while (messageId < 10) {_			_			Thread.sleep(5)__		}__		long oldMessageId__		synchronized (DummySourceContext.lock) {_			oldMessageId = messageId__			messageId = 0__		}__		while (messageId < 10) {_			_			Thread.sleep(5)__		}__		synchronized (DummySourceContext.lock) {_			assertEquals(Math.max(messageId, oldMessageId), DummySourceContext.numElementsCollected)__		}_	};checks,whether,recurring,ids,are,processed,again,they,shouldn,t,be;test,public,void,test,duplicate,id,throws,exception,source,auto,ack,false,source,thread,start,while,message,id,10,thread,sleep,5,long,old,message,id,synchronized,dummy,source,context,lock,old,message,id,message,id,message,id,0,while,message,id,10,thread,sleep,5,synchronized,dummy,source,context,lock,assert,equals,math,max,message,id,old,message,id,dummy,source,context,num,elements,collected
RMQSourceTest -> @Test 	public void testConstructorParams() throws Exception;1480685315;Tests whether constructor params are passed correctly.;@Test_	public void testConstructorParams() throws Exception {_		_		RMQConnectionConfig.Builder builder = new RMQConnectionConfig.Builder()__		builder.setHost("hostTest").setPort(999).setUserName("userTest").setPassword("passTest").setVirtualHost("/")__		ConstructorTestClass testObj = new ConstructorTestClass(_			builder.build(), "queueTest", false, new StringDeserializationScheme())___		try {_			testObj.open(new Configuration())__		} catch (Exception e) {_			_		}__		assertEquals("hostTest", testObj.getFactory().getHost())__		assertEquals(999, testObj.getFactory().getPort())__		assertEquals("userTest", testObj.getFactory().getUsername())__		assertEquals("passTest", testObj.getFactory().getPassword())__	};tests,whether,constructor,params,are,passed,correctly;test,public,void,test,constructor,params,throws,exception,rmqconnection,config,builder,builder,new,rmqconnection,config,builder,builder,set,host,host,test,set,port,999,set,user,name,user,test,set,password,pass,test,set,virtual,host,constructor,test,class,test,obj,new,constructor,test,class,builder,build,queue,test,false,new,string,deserialization,scheme,try,test,obj,open,new,configuration,catch,exception,e,assert,equals,host,test,test,obj,get,factory,get,host,assert,equals,999,test,obj,get,factory,get,port,assert,equals,user,test,test,obj,get,factory,get,username,assert,equals,pass,test,test,obj,get,factory,get,password
RMQSourceTest -> @Test 	public void testConstructorParams() throws Exception;1481632698;Tests whether constructor params are passed correctly.;@Test_	public void testConstructorParams() throws Exception {_		_		RMQConnectionConfig.Builder builder = new RMQConnectionConfig.Builder()__		builder.setHost("hostTest").setPort(999).setUserName("userTest").setPassword("passTest").setVirtualHost("/")__		ConstructorTestClass testObj = new ConstructorTestClass(_			builder.build(), "queueTest", false, new StringDeserializationScheme())___		try {_			testObj.open(new Configuration())__		} catch (Exception e) {_			_		}__		assertEquals("hostTest", testObj.getFactory().getHost())__		assertEquals(999, testObj.getFactory().getPort())__		assertEquals("userTest", testObj.getFactory().getUsername())__		assertEquals("passTest", testObj.getFactory().getPassword())__	};tests,whether,constructor,params,are,passed,correctly;test,public,void,test,constructor,params,throws,exception,rmqconnection,config,builder,builder,new,rmqconnection,config,builder,builder,set,host,host,test,set,port,999,set,user,name,user,test,set,password,pass,test,set,virtual,host,constructor,test,class,test,obj,new,constructor,test,class,builder,build,queue,test,false,new,string,deserialization,scheme,try,test,obj,open,new,configuration,catch,exception,e,assert,equals,host,test,test,obj,get,factory,get,host,assert,equals,999,test,obj,get,factory,get,port,assert,equals,user,test,test,obj,get,factory,get,username,assert,equals,pass,test,test,obj,get,factory,get,password
RMQSourceTest -> @Test 	public void testConstructorParams() throws Exception;1487783998;Tests whether constructor params are passed correctly.;@Test_	public void testConstructorParams() throws Exception {_		_		RMQConnectionConfig.Builder builder = new RMQConnectionConfig.Builder()__		builder.setHost("hostTest").setPort(999).setUserName("userTest").setPassword("passTest").setVirtualHost("/")__		ConstructorTestClass testObj = new ConstructorTestClass(_			builder.build(), "queueTest", false, new StringDeserializationScheme())___		try {_			testObj.open(new Configuration())__		} catch (Exception e) {_			_		}__		assertEquals("hostTest", testObj.getFactory().getHost())__		assertEquals(999, testObj.getFactory().getPort())__		assertEquals("userTest", testObj.getFactory().getUsername())__		assertEquals("passTest", testObj.getFactory().getPassword())__	};tests,whether,constructor,params,are,passed,correctly;test,public,void,test,constructor,params,throws,exception,rmqconnection,config,builder,builder,new,rmqconnection,config,builder,builder,set,host,host,test,set,port,999,set,user,name,user,test,set,password,pass,test,set,virtual,host,constructor,test,class,test,obj,new,constructor,test,class,builder,build,queue,test,false,new,string,deserialization,scheme,try,test,obj,open,new,configuration,catch,exception,e,assert,equals,host,test,test,obj,get,factory,get,host,assert,equals,999,test,obj,get,factory,get,port,assert,equals,user,test,test,obj,get,factory,get,username,assert,equals,pass,test,test,obj,get,factory,get,password
RMQSourceTest -> @Test 	public void testConstructorParams() throws Exception;1489060855;Tests whether constructor params are passed correctly.;@Test_	public void testConstructorParams() throws Exception {_		_		RMQConnectionConfig.Builder builder = new RMQConnectionConfig.Builder()__		builder.setHost("hostTest").setPort(999).setUserName("userTest").setPassword("passTest").setVirtualHost("/")__		ConstructorTestClass testObj = new ConstructorTestClass(_			builder.build(), "queueTest", false, new StringDeserializationScheme())___		try {_			testObj.open(new Configuration())__		} catch (Exception e) {_			_		}__		assertEquals("hostTest", testObj.getFactory().getHost())__		assertEquals(999, testObj.getFactory().getPort())__		assertEquals("userTest", testObj.getFactory().getUsername())__		assertEquals("passTest", testObj.getFactory().getPassword())__	};tests,whether,constructor,params,are,passed,correctly;test,public,void,test,constructor,params,throws,exception,rmqconnection,config,builder,builder,new,rmqconnection,config,builder,builder,set,host,host,test,set,port,999,set,user,name,user,test,set,password,pass,test,set,virtual,host,constructor,test,class,test,obj,new,constructor,test,class,builder,build,queue,test,false,new,string,deserialization,scheme,try,test,obj,open,new,configuration,catch,exception,e,assert,equals,host,test,test,obj,get,factory,get,host,assert,equals,999,test,obj,get,factory,get,port,assert,equals,user,test,test,obj,get,factory,get,username,assert,equals,pass,test,test,obj,get,factory,get,password
RMQSourceTest -> @Test 	public void testConstructorParams() throws Exception;1495923066;Tests whether constructor params are passed correctly.;@Test_	public void testConstructorParams() throws Exception {_		_		RMQConnectionConfig.Builder builder = new RMQConnectionConfig.Builder()__		builder.setHost("hostTest").setPort(999).setUserName("userTest").setPassword("passTest").setVirtualHost("/")__		ConstructorTestClass testObj = new ConstructorTestClass(_			builder.build(), "queueTest", false, new StringDeserializationScheme())___		try {_			testObj.open(new Configuration())__		} catch (Exception e) {_			_		}__		assertEquals("hostTest", testObj.getFactory().getHost())__		assertEquals(999, testObj.getFactory().getPort())__		assertEquals("userTest", testObj.getFactory().getUsername())__		assertEquals("passTest", testObj.getFactory().getPassword())__	};tests,whether,constructor,params,are,passed,correctly;test,public,void,test,constructor,params,throws,exception,rmqconnection,config,builder,builder,new,rmqconnection,config,builder,builder,set,host,host,test,set,port,999,set,user,name,user,test,set,password,pass,test,set,virtual,host,constructor,test,class,test,obj,new,constructor,test,class,builder,build,queue,test,false,new,string,deserialization,scheme,try,test,obj,open,new,configuration,catch,exception,e,assert,equals,host,test,test,obj,get,factory,get,host,assert,equals,999,test,obj,get,factory,get,port,assert,equals,user,test,test,obj,get,factory,get,username,assert,equals,pass,test,test,obj,get,factory,get,password
RMQSourceTest -> @Test 	public void testConstructorParams() throws Exception;1503047863;Tests whether constructor params are passed correctly.;@Test_	public void testConstructorParams() throws Exception {_		_		RMQConnectionConfig.Builder builder = new RMQConnectionConfig.Builder()__		builder.setHost("hostTest").setPort(999).setUserName("userTest").setPassword("passTest").setVirtualHost("/")__		ConstructorTestClass testObj = new ConstructorTestClass(_			builder.build(), "queueTest", false, new StringDeserializationScheme())___		try {_			testObj.open(new Configuration())__		} catch (Exception e) {_			_		}__		assertEquals("hostTest", testObj.getFactory().getHost())__		assertEquals(999, testObj.getFactory().getPort())__		assertEquals("userTest", testObj.getFactory().getUsername())__		assertEquals("passTest", testObj.getFactory().getPassword())__	};tests,whether,constructor,params,are,passed,correctly;test,public,void,test,constructor,params,throws,exception,rmqconnection,config,builder,builder,new,rmqconnection,config,builder,builder,set,host,host,test,set,port,999,set,user,name,user,test,set,password,pass,test,set,virtual,host,constructor,test,class,test,obj,new,constructor,test,class,builder,build,queue,test,false,new,string,deserialization,scheme,try,test,obj,open,new,configuration,catch,exception,e,assert,equals,host,test,test,obj,get,factory,get,host,assert,equals,999,test,obj,get,factory,get,port,assert,equals,user,test,test,obj,get,factory,get,username,assert,equals,pass,test,test,obj,get,factory,get,password
RMQSourceTest -> @Test 	public void testConstructorParams() throws Exception;1506441847;Tests whether constructor params are passed correctly.;@Test_	public void testConstructorParams() throws Exception {_		_		RMQConnectionConfig.Builder builder = new RMQConnectionConfig.Builder()__		builder.setHost("hostTest").setPort(999).setUserName("userTest").setPassword("passTest").setVirtualHost("/")__		ConstructorTestClass testObj = new ConstructorTestClass(_			builder.build(), "queueTest", false, new StringDeserializationScheme())___		try {_			testObj.open(new Configuration())__		} catch (Exception e) {_			_		}__		assertEquals("hostTest", testObj.getFactory().getHost())__		assertEquals(999, testObj.getFactory().getPort())__		assertEquals("userTest", testObj.getFactory().getUsername())__		assertEquals("passTest", testObj.getFactory().getPassword())__	};tests,whether,constructor,params,are,passed,correctly;test,public,void,test,constructor,params,throws,exception,rmqconnection,config,builder,builder,new,rmqconnection,config,builder,builder,set,host,host,test,set,port,999,set,user,name,user,test,set,password,pass,test,set,virtual,host,constructor,test,class,test,obj,new,constructor,test,class,builder,build,queue,test,false,new,string,deserialization,scheme,try,test,obj,open,new,configuration,catch,exception,e,assert,equals,host,test,test,obj,get,factory,get,host,assert,equals,999,test,obj,get,factory,get,port,assert,equals,user,test,test,obj,get,factory,get,username,assert,equals,pass,test,test,obj,get,factory,get,password
RMQSourceTest -> @Test 	public void testConstructorParams() throws Exception;1509723634;Tests whether constructor params are passed correctly.;@Test_	public void testConstructorParams() throws Exception {_		_		RMQConnectionConfig.Builder builder = new RMQConnectionConfig.Builder()__		builder.setHost("hostTest").setPort(999).setUserName("userTest").setPassword("passTest").setVirtualHost("/")__		ConstructorTestClass testObj = new ConstructorTestClass(_			builder.build(), "queueTest", false, new StringDeserializationScheme())___		try {_			testObj.open(new Configuration())__		} catch (Exception e) {_			_		}__		assertEquals("hostTest", testObj.getFactory().getHost())__		assertEquals(999, testObj.getFactory().getPort())__		assertEquals("userTest", testObj.getFactory().getUsername())__		assertEquals("passTest", testObj.getFactory().getPassword())__	};tests,whether,constructor,params,are,passed,correctly;test,public,void,test,constructor,params,throws,exception,rmqconnection,config,builder,builder,new,rmqconnection,config,builder,builder,set,host,host,test,set,port,999,set,user,name,user,test,set,password,pass,test,set,virtual,host,constructor,test,class,test,obj,new,constructor,test,class,builder,build,queue,test,false,new,string,deserialization,scheme,try,test,obj,open,new,configuration,catch,exception,e,assert,equals,host,test,test,obj,get,factory,get,host,assert,equals,999,test,obj,get,factory,get,port,assert,equals,user,test,test,obj,get,factory,get,username,assert,equals,pass,test,test,obj,get,factory,get,password
RMQSourceTest -> @Test 	public void testConstructorParams() throws Exception;1519567828;Tests whether constructor params are passed correctly.;@Test_	public void testConstructorParams() throws Exception {_		_		RMQConnectionConfig.Builder builder = new RMQConnectionConfig.Builder()__		builder.setHost("hostTest").setPort(999).setUserName("userTest").setPassword("passTest").setVirtualHost("/")__		ConstructorTestClass testObj = new ConstructorTestClass(_			builder.build(), "queueTest", false, new StringDeserializationScheme())___		try {_			testObj.open(new Configuration())__		} catch (Exception e) {_			_		}__		assertEquals("hostTest", testObj.getFactory().getHost())__		assertEquals(999, testObj.getFactory().getPort())__		assertEquals("userTest", testObj.getFactory().getUsername())__		assertEquals("passTest", testObj.getFactory().getPassword())__	};tests,whether,constructor,params,are,passed,correctly;test,public,void,test,constructor,params,throws,exception,rmqconnection,config,builder,builder,new,rmqconnection,config,builder,builder,set,host,host,test,set,port,999,set,user,name,user,test,set,password,pass,test,set,virtual,host,constructor,test,class,test,obj,new,constructor,test,class,builder,build,queue,test,false,new,string,deserialization,scheme,try,test,obj,open,new,configuration,catch,exception,e,assert,equals,host,test,test,obj,get,factory,get,host,assert,equals,999,test,obj,get,factory,get,port,assert,equals,user,test,test,obj,get,factory,get,username,assert,equals,pass,test,test,obj,get,factory,get,password
RMQSourceTest -> @Test 	public void testCorrelationIdNotSet() throws InterruptedException;1480685315;Tests error reporting in case of invalid correlation ids;@Test_	public void testCorrelationIdNotSet() throws InterruptedException {_		generateCorrelationIds = false__		source.autoAck = false__		sourceThread.start()___		sourceThread.join()___		assertNotNull(exception)__		assertTrue(exception instanceof NullPointerException)__	};tests,error,reporting,in,case,of,invalid,correlation,ids;test,public,void,test,correlation,id,not,set,throws,interrupted,exception,generate,correlation,ids,false,source,auto,ack,false,source,thread,start,source,thread,join,assert,not,null,exception,assert,true,exception,instanceof,null,pointer,exception
RMQSourceTest -> @Test 	public void testCorrelationIdNotSet() throws InterruptedException;1481632698;Tests error reporting in case of invalid correlation ids;@Test_	public void testCorrelationIdNotSet() throws InterruptedException {_		generateCorrelationIds = false__		source.autoAck = false__		sourceThread.start()___		sourceThread.join()___		assertNotNull(exception)__		assertTrue(exception instanceof NullPointerException)__	};tests,error,reporting,in,case,of,invalid,correlation,ids;test,public,void,test,correlation,id,not,set,throws,interrupted,exception,generate,correlation,ids,false,source,auto,ack,false,source,thread,start,source,thread,join,assert,not,null,exception,assert,true,exception,instanceof,null,pointer,exception
RMQSourceTest -> @Test 	public void testCorrelationIdNotSet() throws InterruptedException;1487783998;Tests error reporting in case of invalid correlation ids;@Test_	public void testCorrelationIdNotSet() throws InterruptedException {_		generateCorrelationIds = false__		source.autoAck = false__		sourceThread.start()___		sourceThread.join()___		assertNotNull(exception)__		assertTrue(exception instanceof NullPointerException)__	};tests,error,reporting,in,case,of,invalid,correlation,ids;test,public,void,test,correlation,id,not,set,throws,interrupted,exception,generate,correlation,ids,false,source,auto,ack,false,source,thread,start,source,thread,join,assert,not,null,exception,assert,true,exception,instanceof,null,pointer,exception
RMQSourceTest -> @Test 	public void testCorrelationIdNotSet() throws InterruptedException;1489060855;Tests error reporting in case of invalid correlation ids;@Test_	public void testCorrelationIdNotSet() throws InterruptedException {_		generateCorrelationIds = false__		source.autoAck = false__		sourceThread.start()___		sourceThread.join()___		assertNotNull(exception)__		assertTrue(exception instanceof NullPointerException)__	};tests,error,reporting,in,case,of,invalid,correlation,ids;test,public,void,test,correlation,id,not,set,throws,interrupted,exception,generate,correlation,ids,false,source,auto,ack,false,source,thread,start,source,thread,join,assert,not,null,exception,assert,true,exception,instanceof,null,pointer,exception
RMQSourceTest -> @Test 	public void testCorrelationIdNotSet() throws InterruptedException;1495923066;Tests error reporting in case of invalid correlation ids.;@Test_	public void testCorrelationIdNotSet() throws InterruptedException {_		generateCorrelationIds = false__		source.autoAck = false__		sourceThread.start()___		sourceThread.join()___		assertNotNull(exception)__		assertTrue(exception instanceof NullPointerException)__	};tests,error,reporting,in,case,of,invalid,correlation,ids;test,public,void,test,correlation,id,not,set,throws,interrupted,exception,generate,correlation,ids,false,source,auto,ack,false,source,thread,start,source,thread,join,assert,not,null,exception,assert,true,exception,instanceof,null,pointer,exception
RMQSourceTest -> @Test 	public void testCorrelationIdNotSet() throws InterruptedException;1503047863;Tests error reporting in case of invalid correlation ids.;@Test_	public void testCorrelationIdNotSet() throws InterruptedException {_		generateCorrelationIds = false__		source.autoAck = false__		sourceThread.start()___		sourceThread.join()___		assertNotNull(exception)__		assertTrue(exception instanceof NullPointerException)__	};tests,error,reporting,in,case,of,invalid,correlation,ids;test,public,void,test,correlation,id,not,set,throws,interrupted,exception,generate,correlation,ids,false,source,auto,ack,false,source,thread,start,source,thread,join,assert,not,null,exception,assert,true,exception,instanceof,null,pointer,exception
RMQSourceTest -> @Test 	public void testCorrelationIdNotSet() throws InterruptedException;1506441847;Tests error reporting in case of invalid correlation ids.;@Test_	public void testCorrelationIdNotSet() throws InterruptedException {_		generateCorrelationIds = false__		source.autoAck = false__		sourceThread.start()___		sourceThread.join()___		assertNotNull(exception)__		assertTrue(exception instanceof NullPointerException)__	};tests,error,reporting,in,case,of,invalid,correlation,ids;test,public,void,test,correlation,id,not,set,throws,interrupted,exception,generate,correlation,ids,false,source,auto,ack,false,source,thread,start,source,thread,join,assert,not,null,exception,assert,true,exception,instanceof,null,pointer,exception
RMQSourceTest -> @Test 	public void testCorrelationIdNotSet() throws InterruptedException;1509723634;Tests error reporting in case of invalid correlation ids.;@Test_	public void testCorrelationIdNotSet() throws InterruptedException {_		generateCorrelationIds = false__		source.autoAck = false__		sourceThread.start()___		sourceThread.join()___		assertNotNull(exception)__		assertTrue(exception instanceof NullPointerException)__	};tests,error,reporting,in,case,of,invalid,correlation,ids;test,public,void,test,correlation,id,not,set,throws,interrupted,exception,generate,correlation,ids,false,source,auto,ack,false,source,thread,start,source,thread,join,assert,not,null,exception,assert,true,exception,instanceof,null,pointer,exception
RMQSourceTest -> @Test 	public void testCorrelationIdNotSet() throws InterruptedException;1519567828;Tests error reporting in case of invalid correlation ids.;@Test_	public void testCorrelationIdNotSet() throws InterruptedException {_		generateCorrelationIds = false__		source.autoAck = false__		sourceThread.start()___		sourceThread.join()___		assertNotNull(exception)__		assertTrue(exception instanceof NullPointerException)__	};tests,error,reporting,in,case,of,invalid,correlation,ids;test,public,void,test,correlation,id,not,set,throws,interrupted,exception,generate,correlation,ids,false,source,auto,ack,false,source,thread,start,source,thread,join,assert,not,null,exception,assert,true,exception,instanceof,null,pointer,exception
