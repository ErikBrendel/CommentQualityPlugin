# id;timestamp;commentText;codeText;commentWords;codeWords
FlinkKafkaConsumer010 -> public FlinkKafkaConsumer010(List<String> topics, KeyedDeserializationSchema<T> deserializer, Properties props);1480685315;Creates a new Kafka streaming source consumer for Kafka 0.10.x__This constructor allows passing multiple topics and a key/value deserialization schema.__@param topics_The Kafka topics to read from._@param deserializer_The keyed de-/serializer used to convert between Kafka's byte messages and Flink's objects._@param props_The properties that are used to configure both the fetcher and the offset handler.;public FlinkKafkaConsumer010(List<String> topics, KeyedDeserializationSchema<T> deserializer, Properties props) {_		super(topics, deserializer, props)__	};creates,a,new,kafka,streaming,source,consumer,for,kafka,0,10,x,this,constructor,allows,passing,multiple,topics,and,a,key,value,deserialization,schema,param,topics,the,kafka,topics,to,read,from,param,deserializer,the,keyed,de,serializer,used,to,convert,between,kafka,s,byte,messages,and,flink,s,objects,param,props,the,properties,that,are,used,to,configure,both,the,fetcher,and,the,offset,handler;public,flink,kafka,consumer010,list,string,topics,keyed,deserialization,schema,t,deserializer,properties,props,super,topics,deserializer,props
FlinkKafkaConsumer010 -> public FlinkKafkaConsumer010(List<String> topics, KeyedDeserializationSchema<T> deserializer, Properties props);1487173364;Creates a new Kafka streaming source consumer for Kafka 0.10.x__This constructor allows passing multiple topics and a key/value deserialization schema.__@param topics_The Kafka topics to read from._@param deserializer_The keyed de-/serializer used to convert between Kafka's byte messages and Flink's objects._@param props_The properties that are used to configure both the fetcher and the offset handler.;public FlinkKafkaConsumer010(List<String> topics, KeyedDeserializationSchema<T> deserializer, Properties props) {_		super(topics, deserializer, props)__	};creates,a,new,kafka,streaming,source,consumer,for,kafka,0,10,x,this,constructor,allows,passing,multiple,topics,and,a,key,value,deserialization,schema,param,topics,the,kafka,topics,to,read,from,param,deserializer,the,keyed,de,serializer,used,to,convert,between,kafka,s,byte,messages,and,flink,s,objects,param,props,the,properties,that,are,used,to,configure,both,the,fetcher,and,the,offset,handler;public,flink,kafka,consumer010,list,string,topics,keyed,deserialization,schema,t,deserializer,properties,props,super,topics,deserializer,props
FlinkKafkaConsumer010 -> public FlinkKafkaConsumer010(List<String> topics, KeyedDeserializationSchema<T> deserializer, Properties props);1488214488;Creates a new Kafka streaming source consumer for Kafka 0.10.x__This constructor allows passing multiple topics and a key/value deserialization schema.__@param topics_The Kafka topics to read from._@param deserializer_The keyed de-/serializer used to convert between Kafka's byte messages and Flink's objects._@param props_The properties that are used to configure both the fetcher and the offset handler.;public FlinkKafkaConsumer010(List<String> topics, KeyedDeserializationSchema<T> deserializer, Properties props) {_		super(topics, deserializer, props)__	};creates,a,new,kafka,streaming,source,consumer,for,kafka,0,10,x,this,constructor,allows,passing,multiple,topics,and,a,key,value,deserialization,schema,param,topics,the,kafka,topics,to,read,from,param,deserializer,the,keyed,de,serializer,used,to,convert,between,kafka,s,byte,messages,and,flink,s,objects,param,props,the,properties,that,are,used,to,configure,both,the,fetcher,and,the,offset,handler;public,flink,kafka,consumer010,list,string,topics,keyed,deserialization,schema,t,deserializer,properties,props,super,topics,deserializer,props
FlinkKafkaConsumer010 -> public FlinkKafkaConsumer010(List<String> topics, KeyedDeserializationSchema<T> deserializer, Properties props);1489510697;Creates a new Kafka streaming source consumer for Kafka 0.10.x__This constructor allows passing multiple topics and a key/value deserialization schema.__@param topics_The Kafka topics to read from._@param deserializer_The keyed de-/serializer used to convert between Kafka's byte messages and Flink's objects._@param props_The properties that are used to configure both the fetcher and the offset handler.;public FlinkKafkaConsumer010(List<String> topics, KeyedDeserializationSchema<T> deserializer, Properties props) {_		super(topics, deserializer, props)__	};creates,a,new,kafka,streaming,source,consumer,for,kafka,0,10,x,this,constructor,allows,passing,multiple,topics,and,a,key,value,deserialization,schema,param,topics,the,kafka,topics,to,read,from,param,deserializer,the,keyed,de,serializer,used,to,convert,between,kafka,s,byte,messages,and,flink,s,objects,param,props,the,properties,that,are,used,to,configure,both,the,fetcher,and,the,offset,handler;public,flink,kafka,consumer010,list,string,topics,keyed,deserialization,schema,t,deserializer,properties,props,super,topics,deserializer,props
FlinkKafkaConsumer010 -> public FlinkKafkaConsumer010(List<String> topics, KeyedDeserializationSchema<T> deserializer, Properties props);1494830990;Creates a new Kafka streaming source consumer for Kafka 0.10.x__This constructor allows passing multiple topics and a key/value deserialization schema.__@param topics_The Kafka topics to read from._@param deserializer_The keyed de-/serializer used to convert between Kafka's byte messages and Flink's objects._@param props_The properties that are used to configure both the fetcher and the offset handler.;public FlinkKafkaConsumer010(List<String> topics, KeyedDeserializationSchema<T> deserializer, Properties props) {_		super(topics, deserializer, props)__	};creates,a,new,kafka,streaming,source,consumer,for,kafka,0,10,x,this,constructor,allows,passing,multiple,topics,and,a,key,value,deserialization,schema,param,topics,the,kafka,topics,to,read,from,param,deserializer,the,keyed,de,serializer,used,to,convert,between,kafka,s,byte,messages,and,flink,s,objects,param,props,the,properties,that,are,used,to,configure,both,the,fetcher,and,the,offset,handler;public,flink,kafka,consumer010,list,string,topics,keyed,deserialization,schema,t,deserializer,properties,props,super,topics,deserializer,props
FlinkKafkaConsumer010 -> public FlinkKafkaConsumer010(List<String> topics, KeyedDeserializationSchema<T> deserializer, Properties props);1495923077;Creates a new Kafka streaming source consumer for Kafka 0.10.x__<p>This constructor allows passing multiple topics and a key/value deserialization schema.__@param topics_The Kafka topics to read from._@param deserializer_The keyed de-/serializer used to convert between Kafka's byte messages and Flink's objects._@param props_The properties that are used to configure both the fetcher and the offset handler.;public FlinkKafkaConsumer010(List<String> topics, KeyedDeserializationSchema<T> deserializer, Properties props) {_		super(topics, deserializer, props)__	};creates,a,new,kafka,streaming,source,consumer,for,kafka,0,10,x,p,this,constructor,allows,passing,multiple,topics,and,a,key,value,deserialization,schema,param,topics,the,kafka,topics,to,read,from,param,deserializer,the,keyed,de,serializer,used,to,convert,between,kafka,s,byte,messages,and,flink,s,objects,param,props,the,properties,that,are,used,to,configure,both,the,fetcher,and,the,offset,handler;public,flink,kafka,consumer010,list,string,topics,keyed,deserialization,schema,t,deserializer,properties,props,super,topics,deserializer,props
FlinkKafkaConsumer010 -> public FlinkKafkaConsumer010(List<String> topics, KeyedDeserializationSchema<T> deserializer, Properties props);1498894422;Creates a new Kafka streaming source consumer for Kafka 0.10.x__<p>This constructor allows passing multiple topics and a key/value deserialization schema.__@param topics_The Kafka topics to read from._@param deserializer_The keyed de-/serializer used to convert between Kafka's byte messages and Flink's objects._@param props_The properties that are used to configure both the fetcher and the offset handler.;public FlinkKafkaConsumer010(List<String> topics, KeyedDeserializationSchema<T> deserializer, Properties props) {_		super(topics, deserializer, props)__	};creates,a,new,kafka,streaming,source,consumer,for,kafka,0,10,x,p,this,constructor,allows,passing,multiple,topics,and,a,key,value,deserialization,schema,param,topics,the,kafka,topics,to,read,from,param,deserializer,the,keyed,de,serializer,used,to,convert,between,kafka,s,byte,messages,and,flink,s,objects,param,props,the,properties,that,are,used,to,configure,both,the,fetcher,and,the,offset,handler;public,flink,kafka,consumer010,list,string,topics,keyed,deserialization,schema,t,deserializer,properties,props,super,topics,deserializer,props
FlinkKafkaConsumer010 -> public FlinkKafkaConsumer010(List<String> topics, KeyedDeserializationSchema<T> deserializer, Properties props);1500863105;Creates a new Kafka streaming source consumer for Kafka 0.10.x__<p>This constructor allows passing multiple topics and a key/value deserialization schema.__@param topics_The Kafka topics to read from._@param deserializer_The keyed de-/serializer used to convert between Kafka's byte messages and Flink's objects._@param props_The properties that are used to configure both the fetcher and the offset handler.;public FlinkKafkaConsumer010(List<String> topics, KeyedDeserializationSchema<T> deserializer, Properties props) {_		super(topics, deserializer, props)__	};creates,a,new,kafka,streaming,source,consumer,for,kafka,0,10,x,p,this,constructor,allows,passing,multiple,topics,and,a,key,value,deserialization,schema,param,topics,the,kafka,topics,to,read,from,param,deserializer,the,keyed,de,serializer,used,to,convert,between,kafka,s,byte,messages,and,flink,s,objects,param,props,the,properties,that,are,used,to,configure,both,the,fetcher,and,the,offset,handler;public,flink,kafka,consumer010,list,string,topics,keyed,deserialization,schema,t,deserializer,properties,props,super,topics,deserializer,props
FlinkKafkaConsumer010 -> public FlinkKafkaConsumer010(List<String> topics, KeyedDeserializationSchema<T> deserializer, Properties props);1509723634;Creates a new Kafka streaming source consumer for Kafka 0.10.x__<p>This constructor allows passing multiple topics and a key/value deserialization schema.__@param topics_The Kafka topics to read from._@param deserializer_The keyed de-/serializer used to convert between Kafka's byte messages and Flink's objects._@param props_The properties that are used to configure both the fetcher and the offset handler.;public FlinkKafkaConsumer010(List<String> topics, KeyedDeserializationSchema<T> deserializer, Properties props) {_		super(topics, deserializer, props)__	};creates,a,new,kafka,streaming,source,consumer,for,kafka,0,10,x,p,this,constructor,allows,passing,multiple,topics,and,a,key,value,deserialization,schema,param,topics,the,kafka,topics,to,read,from,param,deserializer,the,keyed,de,serializer,used,to,convert,between,kafka,s,byte,messages,and,flink,s,objects,param,props,the,properties,that,are,used,to,configure,both,the,fetcher,and,the,offset,handler;public,flink,kafka,consumer010,list,string,topics,keyed,deserialization,schema,t,deserializer,properties,props,super,topics,deserializer,props
FlinkKafkaConsumer010 -> public FlinkKafkaConsumer010(List<String> topics, KeyedDeserializationSchema<T> deserializer, Properties props);1512405117;Creates a new Kafka streaming source consumer for Kafka 0.10.x__<p>This constructor allows passing multiple topics and a key/value deserialization schema.__@param topics_The Kafka topics to read from._@param deserializer_The keyed de-/serializer used to convert between Kafka's byte messages and Flink's objects._@param props_The properties that are used to configure both the fetcher and the offset handler.;public FlinkKafkaConsumer010(List<String> topics, KeyedDeserializationSchema<T> deserializer, Properties props) {_		super(topics, deserializer, props)__	};creates,a,new,kafka,streaming,source,consumer,for,kafka,0,10,x,p,this,constructor,allows,passing,multiple,topics,and,a,key,value,deserialization,schema,param,topics,the,kafka,topics,to,read,from,param,deserializer,the,keyed,de,serializer,used,to,convert,between,kafka,s,byte,messages,and,flink,s,objects,param,props,the,properties,that,are,used,to,configure,both,the,fetcher,and,the,offset,handler;public,flink,kafka,consumer010,list,string,topics,keyed,deserialization,schema,t,deserializer,properties,props,super,topics,deserializer,props
FlinkKafkaConsumer010 -> public FlinkKafkaConsumer010(List<String> topics, KeyedDeserializationSchema<T> deserializer, Properties props);1515757409;Creates a new Kafka streaming source consumer for Kafka 0.10.x__<p>This constructor allows passing multiple topics and a key/value deserialization schema.__@param topics_The Kafka topics to read from._@param deserializer_The keyed de-/serializer used to convert between Kafka's byte messages and Flink's objects._@param props_The properties that are used to configure both the fetcher and the offset handler.;public FlinkKafkaConsumer010(List<String> topics, KeyedDeserializationSchema<T> deserializer, Properties props) {_		super(topics, deserializer, props)__	};creates,a,new,kafka,streaming,source,consumer,for,kafka,0,10,x,p,this,constructor,allows,passing,multiple,topics,and,a,key,value,deserialization,schema,param,topics,the,kafka,topics,to,read,from,param,deserializer,the,keyed,de,serializer,used,to,convert,between,kafka,s,byte,messages,and,flink,s,objects,param,props,the,properties,that,are,used,to,configure,both,the,fetcher,and,the,offset,handler;public,flink,kafka,consumer010,list,string,topics,keyed,deserialization,schema,t,deserializer,properties,props,super,topics,deserializer,props
FlinkKafkaConsumer010 -> public FlinkKafkaConsumer010(List<String> topics, KeyedDeserializationSchema<T> deserializer, Properties props);1517943538;Creates a new Kafka streaming source consumer for Kafka 0.10.x__<p>This constructor allows passing multiple topics and a key/value deserialization schema.__@param topics_The Kafka topics to read from._@param deserializer_The keyed de-/serializer used to convert between Kafka's byte messages and Flink's objects._@param props_The properties that are used to configure both the fetcher and the offset handler.;public FlinkKafkaConsumer010(List<String> topics, KeyedDeserializationSchema<T> deserializer, Properties props) {_		super(topics, deserializer, props)__	};creates,a,new,kafka,streaming,source,consumer,for,kafka,0,10,x,p,this,constructor,allows,passing,multiple,topics,and,a,key,value,deserialization,schema,param,topics,the,kafka,topics,to,read,from,param,deserializer,the,keyed,de,serializer,used,to,convert,between,kafka,s,byte,messages,and,flink,s,objects,param,props,the,properties,that,are,used,to,configure,both,the,fetcher,and,the,offset,handler;public,flink,kafka,consumer010,list,string,topics,keyed,deserialization,schema,t,deserializer,properties,props,super,topics,deserializer,props
FlinkKafkaConsumer010 -> public FlinkKafkaConsumer010(List<String> topics, KeyedDeserializationSchema<T> deserializer, Properties props);1519973085;Creates a new Kafka streaming source consumer for Kafka 0.10.x__<p>This constructor allows passing multiple topics and a key/value deserialization schema.__@param topics_The Kafka topics to read from._@param deserializer_The keyed de-/serializer used to convert between Kafka's byte messages and Flink's objects._@param props_The properties that are used to configure both the fetcher and the offset handler.;public FlinkKafkaConsumer010(List<String> topics, KeyedDeserializationSchema<T> deserializer, Properties props) {_		super(topics, deserializer, props)__	};creates,a,new,kafka,streaming,source,consumer,for,kafka,0,10,x,p,this,constructor,allows,passing,multiple,topics,and,a,key,value,deserialization,schema,param,topics,the,kafka,topics,to,read,from,param,deserializer,the,keyed,de,serializer,used,to,convert,between,kafka,s,byte,messages,and,flink,s,objects,param,props,the,properties,that,are,used,to,configure,both,the,fetcher,and,the,offset,handler;public,flink,kafka,consumer010,list,string,topics,keyed,deserialization,schema,t,deserializer,properties,props,super,topics,deserializer,props
FlinkKafkaConsumer010 -> public FlinkKafkaConsumer010(List<String> topics, KeyedDeserializationSchema<T> deserializer, Properties props);1519973085;Creates a new Kafka streaming source consumer for Kafka 0.10.x__<p>This constructor allows passing multiple topics and a key/value deserialization schema.__@param topics_The Kafka topics to read from._@param deserializer_The keyed de-/serializer used to convert between Kafka's byte messages and Flink's objects._@param props_The properties that are used to configure both the fetcher and the offset handler.;public FlinkKafkaConsumer010(List<String> topics, KeyedDeserializationSchema<T> deserializer, Properties props) {_		super(topics, deserializer, props)__	};creates,a,new,kafka,streaming,source,consumer,for,kafka,0,10,x,p,this,constructor,allows,passing,multiple,topics,and,a,key,value,deserialization,schema,param,topics,the,kafka,topics,to,read,from,param,deserializer,the,keyed,de,serializer,used,to,convert,between,kafka,s,byte,messages,and,flink,s,objects,param,props,the,properties,that,are,used,to,configure,both,the,fetcher,and,the,offset,handler;public,flink,kafka,consumer010,list,string,topics,keyed,deserialization,schema,t,deserializer,properties,props,super,topics,deserializer,props
FlinkKafkaConsumer010 -> public FlinkKafkaConsumer010(List<String> topics, KeyedDeserializationSchema<T> deserializer, Properties props);1548860009;Creates a new Kafka streaming source consumer for Kafka 0.10.x__<p>This constructor allows passing multiple topics and a key/value deserialization schema.__@param topics_The Kafka topics to read from._@param deserializer_The keyed de-/serializer used to convert between Kafka's byte messages and Flink's objects._@param props_The properties that are used to configure both the fetcher and the offset handler.;public FlinkKafkaConsumer010(List<String> topics, KeyedDeserializationSchema<T> deserializer, Properties props) {_		super(topics, deserializer, props)__	};creates,a,new,kafka,streaming,source,consumer,for,kafka,0,10,x,p,this,constructor,allows,passing,multiple,topics,and,a,key,value,deserialization,schema,param,topics,the,kafka,topics,to,read,from,param,deserializer,the,keyed,de,serializer,used,to,convert,between,kafka,s,byte,messages,and,flink,s,objects,param,props,the,properties,that,are,used,to,configure,both,the,fetcher,and,the,offset,handler;public,flink,kafka,consumer010,list,string,topics,keyed,deserialization,schema,t,deserializer,properties,props,super,topics,deserializer,props
FlinkKafkaConsumer010 -> public FlinkKafkaConsumer010(List<String> topics, KeyedDeserializationSchema<T> deserializer, Properties props);1550834388;Creates a new Kafka streaming source consumer for Kafka 0.10.x__<p>This constructor allows passing multiple topics and a key/value deserialization schema.__@param topics_The Kafka topics to read from._@param deserializer_The keyed de-/serializer used to convert between Kafka's byte messages and Flink's objects._@param props_The properties that are used to configure both the fetcher and the offset handler.;public FlinkKafkaConsumer010(List<String> topics, KeyedDeserializationSchema<T> deserializer, Properties props) {_		super(topics, deserializer, props)__	};creates,a,new,kafka,streaming,source,consumer,for,kafka,0,10,x,p,this,constructor,allows,passing,multiple,topics,and,a,key,value,deserialization,schema,param,topics,the,kafka,topics,to,read,from,param,deserializer,the,keyed,de,serializer,used,to,convert,between,kafka,s,byte,messages,and,flink,s,objects,param,props,the,properties,that,are,used,to,configure,both,the,fetcher,and,the,offset,handler;public,flink,kafka,consumer010,list,string,topics,keyed,deserialization,schema,t,deserializer,properties,props,super,topics,deserializer,props
FlinkKafkaConsumer010 -> @PublicEvolving 	public FlinkKafkaConsumer010(Pattern subscriptionPattern, DeserializationSchema<T> valueDeserializer, Properties props);1512405117;Creates a new Kafka streaming source consumer for Kafka 0.10.x. Use this constructor to_subscribe to multiple topics based on a regular expression pattern.__<p>If partition discovery is enabled (by setting a non-negative value for_{@link FlinkKafkaConsumer010#KEY_PARTITION_DISCOVERY_INTERVAL_MILLIS} in the properties), topics_with names matching the pattern will also be subscribed to as they are created on the fly.__@param subscriptionPattern_The regular expression for a pattern of topic names to subscribe to._@param valueDeserializer_The de-/serializer used to convert between Kafka's byte messages and Flink's objects._@param props_The properties used to configure the Kafka consumer client, and the ZooKeeper client.;@PublicEvolving_	public FlinkKafkaConsumer010(Pattern subscriptionPattern, DeserializationSchema<T> valueDeserializer, Properties props) {_		this(subscriptionPattern, new KeyedDeserializationSchemaWrapper<>(valueDeserializer), props)__	};creates,a,new,kafka,streaming,source,consumer,for,kafka,0,10,x,use,this,constructor,to,subscribe,to,multiple,topics,based,on,a,regular,expression,pattern,p,if,partition,discovery,is,enabled,by,setting,a,non,negative,value,for,link,flink,kafka,consumer010,in,the,properties,topics,with,names,matching,the,pattern,will,also,be,subscribed,to,as,they,are,created,on,the,fly,param,subscription,pattern,the,regular,expression,for,a,pattern,of,topic,names,to,subscribe,to,param,value,deserializer,the,de,serializer,used,to,convert,between,kafka,s,byte,messages,and,flink,s,objects,param,props,the,properties,used,to,configure,the,kafka,consumer,client,and,the,zoo,keeper,client;public,evolving,public,flink,kafka,consumer010,pattern,subscription,pattern,deserialization,schema,t,value,deserializer,properties,props,this,subscription,pattern,new,keyed,deserialization,schema,wrapper,value,deserializer,props
FlinkKafkaConsumer010 -> @PublicEvolving 	public FlinkKafkaConsumer010(Pattern subscriptionPattern, DeserializationSchema<T> valueDeserializer, Properties props);1515757409;Creates a new Kafka streaming source consumer for Kafka 0.10.x. Use this constructor to_subscribe to multiple topics based on a regular expression pattern.__<p>If partition discovery is enabled (by setting a non-negative value for_{@link FlinkKafkaConsumer010#KEY_PARTITION_DISCOVERY_INTERVAL_MILLIS} in the properties), topics_with names matching the pattern will also be subscribed to as they are created on the fly.__@param subscriptionPattern_The regular expression for a pattern of topic names to subscribe to._@param valueDeserializer_The de-/serializer used to convert between Kafka's byte messages and Flink's objects._@param props_The properties used to configure the Kafka consumer client, and the ZooKeeper client.;@PublicEvolving_	public FlinkKafkaConsumer010(Pattern subscriptionPattern, DeserializationSchema<T> valueDeserializer, Properties props) {_		this(subscriptionPattern, new KeyedDeserializationSchemaWrapper<>(valueDeserializer), props)__	};creates,a,new,kafka,streaming,source,consumer,for,kafka,0,10,x,use,this,constructor,to,subscribe,to,multiple,topics,based,on,a,regular,expression,pattern,p,if,partition,discovery,is,enabled,by,setting,a,non,negative,value,for,link,flink,kafka,consumer010,in,the,properties,topics,with,names,matching,the,pattern,will,also,be,subscribed,to,as,they,are,created,on,the,fly,param,subscription,pattern,the,regular,expression,for,a,pattern,of,topic,names,to,subscribe,to,param,value,deserializer,the,de,serializer,used,to,convert,between,kafka,s,byte,messages,and,flink,s,objects,param,props,the,properties,used,to,configure,the,kafka,consumer,client,and,the,zoo,keeper,client;public,evolving,public,flink,kafka,consumer010,pattern,subscription,pattern,deserialization,schema,t,value,deserializer,properties,props,this,subscription,pattern,new,keyed,deserialization,schema,wrapper,value,deserializer,props
FlinkKafkaConsumer010 -> @PublicEvolving 	public FlinkKafkaConsumer010(Pattern subscriptionPattern, DeserializationSchema<T> valueDeserializer, Properties props);1517943538;Creates a new Kafka streaming source consumer for Kafka 0.10.x. Use this constructor to_subscribe to multiple topics based on a regular expression pattern.__<p>If partition discovery is enabled (by setting a non-negative value for_{@link FlinkKafkaConsumer010#KEY_PARTITION_DISCOVERY_INTERVAL_MILLIS} in the properties), topics_with names matching the pattern will also be subscribed to as they are created on the fly.__@param subscriptionPattern_The regular expression for a pattern of topic names to subscribe to._@param valueDeserializer_The de-/serializer used to convert between Kafka's byte messages and Flink's objects._@param props_The properties used to configure the Kafka consumer client, and the ZooKeeper client.;@PublicEvolving_	public FlinkKafkaConsumer010(Pattern subscriptionPattern, DeserializationSchema<T> valueDeserializer, Properties props) {_		this(subscriptionPattern, new KeyedDeserializationSchemaWrapper<>(valueDeserializer), props)__	};creates,a,new,kafka,streaming,source,consumer,for,kafka,0,10,x,use,this,constructor,to,subscribe,to,multiple,topics,based,on,a,regular,expression,pattern,p,if,partition,discovery,is,enabled,by,setting,a,non,negative,value,for,link,flink,kafka,consumer010,in,the,properties,topics,with,names,matching,the,pattern,will,also,be,subscribed,to,as,they,are,created,on,the,fly,param,subscription,pattern,the,regular,expression,for,a,pattern,of,topic,names,to,subscribe,to,param,value,deserializer,the,de,serializer,used,to,convert,between,kafka,s,byte,messages,and,flink,s,objects,param,props,the,properties,used,to,configure,the,kafka,consumer,client,and,the,zoo,keeper,client;public,evolving,public,flink,kafka,consumer010,pattern,subscription,pattern,deserialization,schema,t,value,deserializer,properties,props,this,subscription,pattern,new,keyed,deserialization,schema,wrapper,value,deserializer,props
FlinkKafkaConsumer010 -> @PublicEvolving 	public FlinkKafkaConsumer010(Pattern subscriptionPattern, DeserializationSchema<T> valueDeserializer, Properties props);1519973085;Creates a new Kafka streaming source consumer for Kafka 0.10.x. Use this constructor to_subscribe to multiple topics based on a regular expression pattern.__<p>If partition discovery is enabled (by setting a non-negative value for_{@link FlinkKafkaConsumer010#KEY_PARTITION_DISCOVERY_INTERVAL_MILLIS} in the properties), topics_with names matching the pattern will also be subscribed to as they are created on the fly.__@param subscriptionPattern_The regular expression for a pattern of topic names to subscribe to._@param valueDeserializer_The de-/serializer used to convert between Kafka's byte messages and Flink's objects._@param props_The properties used to configure the Kafka consumer client, and the ZooKeeper client.;@PublicEvolving_	public FlinkKafkaConsumer010(Pattern subscriptionPattern, DeserializationSchema<T> valueDeserializer, Properties props) {_		this(subscriptionPattern, new KeyedDeserializationSchemaWrapper<>(valueDeserializer), props)__	};creates,a,new,kafka,streaming,source,consumer,for,kafka,0,10,x,use,this,constructor,to,subscribe,to,multiple,topics,based,on,a,regular,expression,pattern,p,if,partition,discovery,is,enabled,by,setting,a,non,negative,value,for,link,flink,kafka,consumer010,in,the,properties,topics,with,names,matching,the,pattern,will,also,be,subscribed,to,as,they,are,created,on,the,fly,param,subscription,pattern,the,regular,expression,for,a,pattern,of,topic,names,to,subscribe,to,param,value,deserializer,the,de,serializer,used,to,convert,between,kafka,s,byte,messages,and,flink,s,objects,param,props,the,properties,used,to,configure,the,kafka,consumer,client,and,the,zoo,keeper,client;public,evolving,public,flink,kafka,consumer010,pattern,subscription,pattern,deserialization,schema,t,value,deserializer,properties,props,this,subscription,pattern,new,keyed,deserialization,schema,wrapper,value,deserializer,props
FlinkKafkaConsumer010 -> @PublicEvolving 	public FlinkKafkaConsumer010(Pattern subscriptionPattern, DeserializationSchema<T> valueDeserializer, Properties props);1519973085;Creates a new Kafka streaming source consumer for Kafka 0.10.x. Use this constructor to_subscribe to multiple topics based on a regular expression pattern.__<p>If partition discovery is enabled (by setting a non-negative value for_{@link FlinkKafkaConsumer010#KEY_PARTITION_DISCOVERY_INTERVAL_MILLIS} in the properties), topics_with names matching the pattern will also be subscribed to as they are created on the fly.__@param subscriptionPattern_The regular expression for a pattern of topic names to subscribe to._@param valueDeserializer_The de-/serializer used to convert between Kafka's byte messages and Flink's objects._@param props_The properties used to configure the Kafka consumer client, and the ZooKeeper client.;@PublicEvolving_	public FlinkKafkaConsumer010(Pattern subscriptionPattern, DeserializationSchema<T> valueDeserializer, Properties props) {_		this(subscriptionPattern, new KeyedDeserializationSchemaWrapper<>(valueDeserializer), props)__	};creates,a,new,kafka,streaming,source,consumer,for,kafka,0,10,x,use,this,constructor,to,subscribe,to,multiple,topics,based,on,a,regular,expression,pattern,p,if,partition,discovery,is,enabled,by,setting,a,non,negative,value,for,link,flink,kafka,consumer010,in,the,properties,topics,with,names,matching,the,pattern,will,also,be,subscribed,to,as,they,are,created,on,the,fly,param,subscription,pattern,the,regular,expression,for,a,pattern,of,topic,names,to,subscribe,to,param,value,deserializer,the,de,serializer,used,to,convert,between,kafka,s,byte,messages,and,flink,s,objects,param,props,the,properties,used,to,configure,the,kafka,consumer,client,and,the,zoo,keeper,client;public,evolving,public,flink,kafka,consumer010,pattern,subscription,pattern,deserialization,schema,t,value,deserializer,properties,props,this,subscription,pattern,new,keyed,deserialization,schema,wrapper,value,deserializer,props
FlinkKafkaConsumer010 -> @PublicEvolving 	public FlinkKafkaConsumer010(Pattern subscriptionPattern, DeserializationSchema<T> valueDeserializer, Properties props);1548860009;Creates a new Kafka streaming source consumer for Kafka 0.10.x. Use this constructor to_subscribe to multiple topics based on a regular expression pattern.__<p>If partition discovery is enabled (by setting a non-negative value for_{@link FlinkKafkaConsumer010#KEY_PARTITION_DISCOVERY_INTERVAL_MILLIS} in the properties), topics_with names matching the pattern will also be subscribed to as they are created on the fly.__@param subscriptionPattern_The regular expression for a pattern of topic names to subscribe to._@param valueDeserializer_The de-/serializer used to convert between Kafka's byte messages and Flink's objects._@param props_The properties used to configure the Kafka consumer client, and the ZooKeeper client.;@PublicEvolving_	public FlinkKafkaConsumer010(Pattern subscriptionPattern, DeserializationSchema<T> valueDeserializer, Properties props) {_		this(subscriptionPattern, new KeyedDeserializationSchemaWrapper<>(valueDeserializer), props)__	};creates,a,new,kafka,streaming,source,consumer,for,kafka,0,10,x,use,this,constructor,to,subscribe,to,multiple,topics,based,on,a,regular,expression,pattern,p,if,partition,discovery,is,enabled,by,setting,a,non,negative,value,for,link,flink,kafka,consumer010,in,the,properties,topics,with,names,matching,the,pattern,will,also,be,subscribed,to,as,they,are,created,on,the,fly,param,subscription,pattern,the,regular,expression,for,a,pattern,of,topic,names,to,subscribe,to,param,value,deserializer,the,de,serializer,used,to,convert,between,kafka,s,byte,messages,and,flink,s,objects,param,props,the,properties,used,to,configure,the,kafka,consumer,client,and,the,zoo,keeper,client;public,evolving,public,flink,kafka,consumer010,pattern,subscription,pattern,deserialization,schema,t,value,deserializer,properties,props,this,subscription,pattern,new,keyed,deserialization,schema,wrapper,value,deserializer,props
FlinkKafkaConsumer010 -> @PublicEvolving 	public FlinkKafkaConsumer010(Pattern subscriptionPattern, DeserializationSchema<T> valueDeserializer, Properties props);1550834388;Creates a new Kafka streaming source consumer for Kafka 0.10.x. Use this constructor to_subscribe to multiple topics based on a regular expression pattern.__<p>If partition discovery is enabled (by setting a non-negative value for_{@link FlinkKafkaConsumer010#KEY_PARTITION_DISCOVERY_INTERVAL_MILLIS} in the properties), topics_with names matching the pattern will also be subscribed to as they are created on the fly.__@param subscriptionPattern_The regular expression for a pattern of topic names to subscribe to._@param valueDeserializer_The de-/serializer used to convert between Kafka's byte messages and Flink's objects._@param props_The properties used to configure the Kafka consumer client, and the ZooKeeper client.;@PublicEvolving_	public FlinkKafkaConsumer010(Pattern subscriptionPattern, DeserializationSchema<T> valueDeserializer, Properties props) {_		this(subscriptionPattern, new KeyedDeserializationSchemaWrapper<>(valueDeserializer), props)__	};creates,a,new,kafka,streaming,source,consumer,for,kafka,0,10,x,use,this,constructor,to,subscribe,to,multiple,topics,based,on,a,regular,expression,pattern,p,if,partition,discovery,is,enabled,by,setting,a,non,negative,value,for,link,flink,kafka,consumer010,in,the,properties,topics,with,names,matching,the,pattern,will,also,be,subscribed,to,as,they,are,created,on,the,fly,param,subscription,pattern,the,regular,expression,for,a,pattern,of,topic,names,to,subscribe,to,param,value,deserializer,the,de,serializer,used,to,convert,between,kafka,s,byte,messages,and,flink,s,objects,param,props,the,properties,used,to,configure,the,kafka,consumer,client,and,the,zoo,keeper,client;public,evolving,public,flink,kafka,consumer010,pattern,subscription,pattern,deserialization,schema,t,value,deserializer,properties,props,this,subscription,pattern,new,keyed,deserialization,schema,wrapper,value,deserializer,props
FlinkKafkaConsumer010 -> @PublicEvolving 	public FlinkKafkaConsumer010(Pattern subscriptionPattern, DeserializationSchema<T> valueDeserializer, Properties props);1550834396;Creates a new Kafka streaming source consumer for Kafka 0.10.x. Use this constructor to_subscribe to multiple topics based on a regular expression pattern.__<p>If partition discovery is enabled (by setting a non-negative value for_{@link FlinkKafkaConsumer010#KEY_PARTITION_DISCOVERY_INTERVAL_MILLIS} in the properties), topics_with names matching the pattern will also be subscribed to as they are created on the fly.__@param subscriptionPattern_The regular expression for a pattern of topic names to subscribe to._@param valueDeserializer_The de-/serializer used to convert between Kafka's byte messages and Flink's objects._@param props_The properties used to configure the Kafka consumer client, and the ZooKeeper client.;@PublicEvolving_	public FlinkKafkaConsumer010(Pattern subscriptionPattern, DeserializationSchema<T> valueDeserializer, Properties props) {_		this(subscriptionPattern, new KafkaDeserializationSchemaWrapper<>(valueDeserializer), props)__	};creates,a,new,kafka,streaming,source,consumer,for,kafka,0,10,x,use,this,constructor,to,subscribe,to,multiple,topics,based,on,a,regular,expression,pattern,p,if,partition,discovery,is,enabled,by,setting,a,non,negative,value,for,link,flink,kafka,consumer010,in,the,properties,topics,with,names,matching,the,pattern,will,also,be,subscribed,to,as,they,are,created,on,the,fly,param,subscription,pattern,the,regular,expression,for,a,pattern,of,topic,names,to,subscribe,to,param,value,deserializer,the,de,serializer,used,to,convert,between,kafka,s,byte,messages,and,flink,s,objects,param,props,the,properties,used,to,configure,the,kafka,consumer,client,and,the,zoo,keeper,client;public,evolving,public,flink,kafka,consumer010,pattern,subscription,pattern,deserialization,schema,t,value,deserializer,properties,props,this,subscription,pattern,new,kafka,deserialization,schema,wrapper,value,deserializer,props
FlinkKafkaConsumer010 -> @PublicEvolving 	public FlinkKafkaConsumer010(Pattern subscriptionPattern, KeyedDeserializationSchema<T> deserializer, Properties props);1512405117;Creates a new Kafka streaming source consumer for Kafka 0.10.x. Use this constructor to_subscribe to multiple topics based on a regular expression pattern.__<p>If partition discovery is enabled (by setting a non-negative value for_{@link FlinkKafkaConsumer010#KEY_PARTITION_DISCOVERY_INTERVAL_MILLIS} in the properties), topics_with names matching the pattern will also be subscribed to as they are created on the fly.__<p>This constructor allows passing a {@see KeyedDeserializationSchema} for reading key/value_pairs, offsets, and topic names from Kafka.__@param subscriptionPattern_The regular expression for a pattern of topic names to subscribe to._@param deserializer_The keyed de-/serializer used to convert between Kafka's byte messages and Flink's objects._@param props_The properties used to configure the Kafka consumer client, and the ZooKeeper client.;@PublicEvolving_	public FlinkKafkaConsumer010(Pattern subscriptionPattern, KeyedDeserializationSchema<T> deserializer, Properties props) {_		super(subscriptionPattern, deserializer, props)__	};creates,a,new,kafka,streaming,source,consumer,for,kafka,0,10,x,use,this,constructor,to,subscribe,to,multiple,topics,based,on,a,regular,expression,pattern,p,if,partition,discovery,is,enabled,by,setting,a,non,negative,value,for,link,flink,kafka,consumer010,in,the,properties,topics,with,names,matching,the,pattern,will,also,be,subscribed,to,as,they,are,created,on,the,fly,p,this,constructor,allows,passing,a,see,keyed,deserialization,schema,for,reading,key,value,pairs,offsets,and,topic,names,from,kafka,param,subscription,pattern,the,regular,expression,for,a,pattern,of,topic,names,to,subscribe,to,param,deserializer,the,keyed,de,serializer,used,to,convert,between,kafka,s,byte,messages,and,flink,s,objects,param,props,the,properties,used,to,configure,the,kafka,consumer,client,and,the,zoo,keeper,client;public,evolving,public,flink,kafka,consumer010,pattern,subscription,pattern,keyed,deserialization,schema,t,deserializer,properties,props,super,subscription,pattern,deserializer,props
FlinkKafkaConsumer010 -> @PublicEvolving 	public FlinkKafkaConsumer010(Pattern subscriptionPattern, KeyedDeserializationSchema<T> deserializer, Properties props);1515757409;Creates a new Kafka streaming source consumer for Kafka 0.10.x. Use this constructor to_subscribe to multiple topics based on a regular expression pattern.__<p>If partition discovery is enabled (by setting a non-negative value for_{@link FlinkKafkaConsumer010#KEY_PARTITION_DISCOVERY_INTERVAL_MILLIS} in the properties), topics_with names matching the pattern will also be subscribed to as they are created on the fly.__<p>This constructor allows passing a {@see KeyedDeserializationSchema} for reading key/value_pairs, offsets, and topic names from Kafka.__@param subscriptionPattern_The regular expression for a pattern of topic names to subscribe to._@param deserializer_The keyed de-/serializer used to convert between Kafka's byte messages and Flink's objects._@param props_The properties used to configure the Kafka consumer client, and the ZooKeeper client.;@PublicEvolving_	public FlinkKafkaConsumer010(Pattern subscriptionPattern, KeyedDeserializationSchema<T> deserializer, Properties props) {_		super(subscriptionPattern, deserializer, props)__	};creates,a,new,kafka,streaming,source,consumer,for,kafka,0,10,x,use,this,constructor,to,subscribe,to,multiple,topics,based,on,a,regular,expression,pattern,p,if,partition,discovery,is,enabled,by,setting,a,non,negative,value,for,link,flink,kafka,consumer010,in,the,properties,topics,with,names,matching,the,pattern,will,also,be,subscribed,to,as,they,are,created,on,the,fly,p,this,constructor,allows,passing,a,see,keyed,deserialization,schema,for,reading,key,value,pairs,offsets,and,topic,names,from,kafka,param,subscription,pattern,the,regular,expression,for,a,pattern,of,topic,names,to,subscribe,to,param,deserializer,the,keyed,de,serializer,used,to,convert,between,kafka,s,byte,messages,and,flink,s,objects,param,props,the,properties,used,to,configure,the,kafka,consumer,client,and,the,zoo,keeper,client;public,evolving,public,flink,kafka,consumer010,pattern,subscription,pattern,keyed,deserialization,schema,t,deserializer,properties,props,super,subscription,pattern,deserializer,props
FlinkKafkaConsumer010 -> @PublicEvolving 	public FlinkKafkaConsumer010(Pattern subscriptionPattern, KeyedDeserializationSchema<T> deserializer, Properties props);1517943538;Creates a new Kafka streaming source consumer for Kafka 0.10.x. Use this constructor to_subscribe to multiple topics based on a regular expression pattern.__<p>If partition discovery is enabled (by setting a non-negative value for_{@link FlinkKafkaConsumer010#KEY_PARTITION_DISCOVERY_INTERVAL_MILLIS} in the properties), topics_with names matching the pattern will also be subscribed to as they are created on the fly.__<p>This constructor allows passing a {@see KeyedDeserializationSchema} for reading key/value_pairs, offsets, and topic names from Kafka.__@param subscriptionPattern_The regular expression for a pattern of topic names to subscribe to._@param deserializer_The keyed de-/serializer used to convert between Kafka's byte messages and Flink's objects._@param props_The properties used to configure the Kafka consumer client, and the ZooKeeper client.;@PublicEvolving_	public FlinkKafkaConsumer010(Pattern subscriptionPattern, KeyedDeserializationSchema<T> deserializer, Properties props) {_		super(subscriptionPattern, deserializer, props)__	};creates,a,new,kafka,streaming,source,consumer,for,kafka,0,10,x,use,this,constructor,to,subscribe,to,multiple,topics,based,on,a,regular,expression,pattern,p,if,partition,discovery,is,enabled,by,setting,a,non,negative,value,for,link,flink,kafka,consumer010,in,the,properties,topics,with,names,matching,the,pattern,will,also,be,subscribed,to,as,they,are,created,on,the,fly,p,this,constructor,allows,passing,a,see,keyed,deserialization,schema,for,reading,key,value,pairs,offsets,and,topic,names,from,kafka,param,subscription,pattern,the,regular,expression,for,a,pattern,of,topic,names,to,subscribe,to,param,deserializer,the,keyed,de,serializer,used,to,convert,between,kafka,s,byte,messages,and,flink,s,objects,param,props,the,properties,used,to,configure,the,kafka,consumer,client,and,the,zoo,keeper,client;public,evolving,public,flink,kafka,consumer010,pattern,subscription,pattern,keyed,deserialization,schema,t,deserializer,properties,props,super,subscription,pattern,deserializer,props
FlinkKafkaConsumer010 -> @PublicEvolving 	public FlinkKafkaConsumer010(Pattern subscriptionPattern, KeyedDeserializationSchema<T> deserializer, Properties props);1519973085;Creates a new Kafka streaming source consumer for Kafka 0.10.x. Use this constructor to_subscribe to multiple topics based on a regular expression pattern.__<p>If partition discovery is enabled (by setting a non-negative value for_{@link FlinkKafkaConsumer010#KEY_PARTITION_DISCOVERY_INTERVAL_MILLIS} in the properties), topics_with names matching the pattern will also be subscribed to as they are created on the fly.__<p>This constructor allows passing a {@see KeyedDeserializationSchema} for reading key/value_pairs, offsets, and topic names from Kafka.__@param subscriptionPattern_The regular expression for a pattern of topic names to subscribe to._@param deserializer_The keyed de-/serializer used to convert between Kafka's byte messages and Flink's objects._@param props_The properties used to configure the Kafka consumer client, and the ZooKeeper client.;@PublicEvolving_	public FlinkKafkaConsumer010(Pattern subscriptionPattern, KeyedDeserializationSchema<T> deserializer, Properties props) {_		super(subscriptionPattern, deserializer, props)__	};creates,a,new,kafka,streaming,source,consumer,for,kafka,0,10,x,use,this,constructor,to,subscribe,to,multiple,topics,based,on,a,regular,expression,pattern,p,if,partition,discovery,is,enabled,by,setting,a,non,negative,value,for,link,flink,kafka,consumer010,in,the,properties,topics,with,names,matching,the,pattern,will,also,be,subscribed,to,as,they,are,created,on,the,fly,p,this,constructor,allows,passing,a,see,keyed,deserialization,schema,for,reading,key,value,pairs,offsets,and,topic,names,from,kafka,param,subscription,pattern,the,regular,expression,for,a,pattern,of,topic,names,to,subscribe,to,param,deserializer,the,keyed,de,serializer,used,to,convert,between,kafka,s,byte,messages,and,flink,s,objects,param,props,the,properties,used,to,configure,the,kafka,consumer,client,and,the,zoo,keeper,client;public,evolving,public,flink,kafka,consumer010,pattern,subscription,pattern,keyed,deserialization,schema,t,deserializer,properties,props,super,subscription,pattern,deserializer,props
FlinkKafkaConsumer010 -> @PublicEvolving 	public FlinkKafkaConsumer010(Pattern subscriptionPattern, KeyedDeserializationSchema<T> deserializer, Properties props);1519973085;Creates a new Kafka streaming source consumer for Kafka 0.10.x. Use this constructor to_subscribe to multiple topics based on a regular expression pattern.__<p>If partition discovery is enabled (by setting a non-negative value for_{@link FlinkKafkaConsumer010#KEY_PARTITION_DISCOVERY_INTERVAL_MILLIS} in the properties), topics_with names matching the pattern will also be subscribed to as they are created on the fly.__<p>This constructor allows passing a {@see KeyedDeserializationSchema} for reading key/value_pairs, offsets, and topic names from Kafka.__@param subscriptionPattern_The regular expression for a pattern of topic names to subscribe to._@param deserializer_The keyed de-/serializer used to convert between Kafka's byte messages and Flink's objects._@param props_The properties used to configure the Kafka consumer client, and the ZooKeeper client.;@PublicEvolving_	public FlinkKafkaConsumer010(Pattern subscriptionPattern, KeyedDeserializationSchema<T> deserializer, Properties props) {_		super(subscriptionPattern, deserializer, props)__	};creates,a,new,kafka,streaming,source,consumer,for,kafka,0,10,x,use,this,constructor,to,subscribe,to,multiple,topics,based,on,a,regular,expression,pattern,p,if,partition,discovery,is,enabled,by,setting,a,non,negative,value,for,link,flink,kafka,consumer010,in,the,properties,topics,with,names,matching,the,pattern,will,also,be,subscribed,to,as,they,are,created,on,the,fly,p,this,constructor,allows,passing,a,see,keyed,deserialization,schema,for,reading,key,value,pairs,offsets,and,topic,names,from,kafka,param,subscription,pattern,the,regular,expression,for,a,pattern,of,topic,names,to,subscribe,to,param,deserializer,the,keyed,de,serializer,used,to,convert,between,kafka,s,byte,messages,and,flink,s,objects,param,props,the,properties,used,to,configure,the,kafka,consumer,client,and,the,zoo,keeper,client;public,evolving,public,flink,kafka,consumer010,pattern,subscription,pattern,keyed,deserialization,schema,t,deserializer,properties,props,super,subscription,pattern,deserializer,props
FlinkKafkaConsumer010 -> @PublicEvolving 	public FlinkKafkaConsumer010(Pattern subscriptionPattern, KeyedDeserializationSchema<T> deserializer, Properties props);1548860009;Creates a new Kafka streaming source consumer for Kafka 0.10.x. Use this constructor to_subscribe to multiple topics based on a regular expression pattern.__<p>If partition discovery is enabled (by setting a non-negative value for_{@link FlinkKafkaConsumer010#KEY_PARTITION_DISCOVERY_INTERVAL_MILLIS} in the properties), topics_with names matching the pattern will also be subscribed to as they are created on the fly.__<p>This constructor allows passing a {@see KeyedDeserializationSchema} for reading key/value_pairs, offsets, and topic names from Kafka.__@param subscriptionPattern_The regular expression for a pattern of topic names to subscribe to._@param deserializer_The keyed de-/serializer used to convert between Kafka's byte messages and Flink's objects._@param props_The properties used to configure the Kafka consumer client, and the ZooKeeper client.;@PublicEvolving_	public FlinkKafkaConsumer010(Pattern subscriptionPattern, KeyedDeserializationSchema<T> deserializer, Properties props) {_		super(subscriptionPattern, deserializer, props)__	};creates,a,new,kafka,streaming,source,consumer,for,kafka,0,10,x,use,this,constructor,to,subscribe,to,multiple,topics,based,on,a,regular,expression,pattern,p,if,partition,discovery,is,enabled,by,setting,a,non,negative,value,for,link,flink,kafka,consumer010,in,the,properties,topics,with,names,matching,the,pattern,will,also,be,subscribed,to,as,they,are,created,on,the,fly,p,this,constructor,allows,passing,a,see,keyed,deserialization,schema,for,reading,key,value,pairs,offsets,and,topic,names,from,kafka,param,subscription,pattern,the,regular,expression,for,a,pattern,of,topic,names,to,subscribe,to,param,deserializer,the,keyed,de,serializer,used,to,convert,between,kafka,s,byte,messages,and,flink,s,objects,param,props,the,properties,used,to,configure,the,kafka,consumer,client,and,the,zoo,keeper,client;public,evolving,public,flink,kafka,consumer010,pattern,subscription,pattern,keyed,deserialization,schema,t,deserializer,properties,props,super,subscription,pattern,deserializer,props
FlinkKafkaConsumer010 -> @PublicEvolving 	public FlinkKafkaConsumer010(Pattern subscriptionPattern, KeyedDeserializationSchema<T> deserializer, Properties props);1550834388;Creates a new Kafka streaming source consumer for Kafka 0.10.x. Use this constructor to_subscribe to multiple topics based on a regular expression pattern.__<p>If partition discovery is enabled (by setting a non-negative value for_{@link FlinkKafkaConsumer010#KEY_PARTITION_DISCOVERY_INTERVAL_MILLIS} in the properties), topics_with names matching the pattern will also be subscribed to as they are created on the fly.__<p>This constructor allows passing a {@see KeyedDeserializationSchema} for reading key/value_pairs, offsets, and topic names from Kafka.__@param subscriptionPattern_The regular expression for a pattern of topic names to subscribe to._@param deserializer_The keyed de-/serializer used to convert between Kafka's byte messages and Flink's objects._@param props_The properties used to configure the Kafka consumer client, and the ZooKeeper client.;@PublicEvolving_	public FlinkKafkaConsumer010(Pattern subscriptionPattern, KeyedDeserializationSchema<T> deserializer, Properties props) {_		super(subscriptionPattern, deserializer, props)__	};creates,a,new,kafka,streaming,source,consumer,for,kafka,0,10,x,use,this,constructor,to,subscribe,to,multiple,topics,based,on,a,regular,expression,pattern,p,if,partition,discovery,is,enabled,by,setting,a,non,negative,value,for,link,flink,kafka,consumer010,in,the,properties,topics,with,names,matching,the,pattern,will,also,be,subscribed,to,as,they,are,created,on,the,fly,p,this,constructor,allows,passing,a,see,keyed,deserialization,schema,for,reading,key,value,pairs,offsets,and,topic,names,from,kafka,param,subscription,pattern,the,regular,expression,for,a,pattern,of,topic,names,to,subscribe,to,param,deserializer,the,keyed,de,serializer,used,to,convert,between,kafka,s,byte,messages,and,flink,s,objects,param,props,the,properties,used,to,configure,the,kafka,consumer,client,and,the,zoo,keeper,client;public,evolving,public,flink,kafka,consumer010,pattern,subscription,pattern,keyed,deserialization,schema,t,deserializer,properties,props,super,subscription,pattern,deserializer,props
FlinkKafkaConsumer010 -> public FlinkKafkaConsumer010(String topic, DeserializationSchema<T> valueDeserializer, Properties props);1480685315;Creates a new Kafka streaming source consumer for Kafka 0.10.x__@param topic_The name of the topic that should be consumed._@param valueDeserializer_The de-/serializer used to convert between Kafka's byte messages and Flink's objects._@param props_The properties used to configure the Kafka consumer client, and the ZooKeeper client.;public FlinkKafkaConsumer010(String topic, DeserializationSchema<T> valueDeserializer, Properties props) {_		this(Collections.singletonList(topic), valueDeserializer, props)__	};creates,a,new,kafka,streaming,source,consumer,for,kafka,0,10,x,param,topic,the,name,of,the,topic,that,should,be,consumed,param,value,deserializer,the,de,serializer,used,to,convert,between,kafka,s,byte,messages,and,flink,s,objects,param,props,the,properties,used,to,configure,the,kafka,consumer,client,and,the,zoo,keeper,client;public,flink,kafka,consumer010,string,topic,deserialization,schema,t,value,deserializer,properties,props,this,collections,singleton,list,topic,value,deserializer,props
FlinkKafkaConsumer010 -> public FlinkKafkaConsumer010(String topic, DeserializationSchema<T> valueDeserializer, Properties props);1487173364;Creates a new Kafka streaming source consumer for Kafka 0.10.x__@param topic_The name of the topic that should be consumed._@param valueDeserializer_The de-/serializer used to convert between Kafka's byte messages and Flink's objects._@param props_The properties used to configure the Kafka consumer client, and the ZooKeeper client.;public FlinkKafkaConsumer010(String topic, DeserializationSchema<T> valueDeserializer, Properties props) {_		this(Collections.singletonList(topic), valueDeserializer, props)__	};creates,a,new,kafka,streaming,source,consumer,for,kafka,0,10,x,param,topic,the,name,of,the,topic,that,should,be,consumed,param,value,deserializer,the,de,serializer,used,to,convert,between,kafka,s,byte,messages,and,flink,s,objects,param,props,the,properties,used,to,configure,the,kafka,consumer,client,and,the,zoo,keeper,client;public,flink,kafka,consumer010,string,topic,deserialization,schema,t,value,deserializer,properties,props,this,collections,singleton,list,topic,value,deserializer,props
FlinkKafkaConsumer010 -> public FlinkKafkaConsumer010(String topic, DeserializationSchema<T> valueDeserializer, Properties props);1488214488;Creates a new Kafka streaming source consumer for Kafka 0.10.x__@param topic_The name of the topic that should be consumed._@param valueDeserializer_The de-/serializer used to convert between Kafka's byte messages and Flink's objects._@param props_The properties used to configure the Kafka consumer client, and the ZooKeeper client.;public FlinkKafkaConsumer010(String topic, DeserializationSchema<T> valueDeserializer, Properties props) {_		this(Collections.singletonList(topic), valueDeserializer, props)__	};creates,a,new,kafka,streaming,source,consumer,for,kafka,0,10,x,param,topic,the,name,of,the,topic,that,should,be,consumed,param,value,deserializer,the,de,serializer,used,to,convert,between,kafka,s,byte,messages,and,flink,s,objects,param,props,the,properties,used,to,configure,the,kafka,consumer,client,and,the,zoo,keeper,client;public,flink,kafka,consumer010,string,topic,deserialization,schema,t,value,deserializer,properties,props,this,collections,singleton,list,topic,value,deserializer,props
FlinkKafkaConsumer010 -> public FlinkKafkaConsumer010(String topic, DeserializationSchema<T> valueDeserializer, Properties props);1489510697;Creates a new Kafka streaming source consumer for Kafka 0.10.x__@param topic_The name of the topic that should be consumed._@param valueDeserializer_The de-/serializer used to convert between Kafka's byte messages and Flink's objects._@param props_The properties used to configure the Kafka consumer client, and the ZooKeeper client.;public FlinkKafkaConsumer010(String topic, DeserializationSchema<T> valueDeserializer, Properties props) {_		this(Collections.singletonList(topic), valueDeserializer, props)__	};creates,a,new,kafka,streaming,source,consumer,for,kafka,0,10,x,param,topic,the,name,of,the,topic,that,should,be,consumed,param,value,deserializer,the,de,serializer,used,to,convert,between,kafka,s,byte,messages,and,flink,s,objects,param,props,the,properties,used,to,configure,the,kafka,consumer,client,and,the,zoo,keeper,client;public,flink,kafka,consumer010,string,topic,deserialization,schema,t,value,deserializer,properties,props,this,collections,singleton,list,topic,value,deserializer,props
FlinkKafkaConsumer010 -> public FlinkKafkaConsumer010(String topic, DeserializationSchema<T> valueDeserializer, Properties props);1494830990;Creates a new Kafka streaming source consumer for Kafka 0.10.x__@param topic_The name of the topic that should be consumed._@param valueDeserializer_The de-/serializer used to convert between Kafka's byte messages and Flink's objects._@param props_The properties used to configure the Kafka consumer client, and the ZooKeeper client.;public FlinkKafkaConsumer010(String topic, DeserializationSchema<T> valueDeserializer, Properties props) {_		this(Collections.singletonList(topic), valueDeserializer, props)__	};creates,a,new,kafka,streaming,source,consumer,for,kafka,0,10,x,param,topic,the,name,of,the,topic,that,should,be,consumed,param,value,deserializer,the,de,serializer,used,to,convert,between,kafka,s,byte,messages,and,flink,s,objects,param,props,the,properties,used,to,configure,the,kafka,consumer,client,and,the,zoo,keeper,client;public,flink,kafka,consumer010,string,topic,deserialization,schema,t,value,deserializer,properties,props,this,collections,singleton,list,topic,value,deserializer,props
FlinkKafkaConsumer010 -> public FlinkKafkaConsumer010(String topic, DeserializationSchema<T> valueDeserializer, Properties props);1495923077;Creates a new Kafka streaming source consumer for Kafka 0.10.x.__@param topic_The name of the topic that should be consumed._@param valueDeserializer_The de-/serializer used to convert between Kafka's byte messages and Flink's objects._@param props_The properties used to configure the Kafka consumer client, and the ZooKeeper client.;public FlinkKafkaConsumer010(String topic, DeserializationSchema<T> valueDeserializer, Properties props) {_		this(Collections.singletonList(topic), valueDeserializer, props)__	};creates,a,new,kafka,streaming,source,consumer,for,kafka,0,10,x,param,topic,the,name,of,the,topic,that,should,be,consumed,param,value,deserializer,the,de,serializer,used,to,convert,between,kafka,s,byte,messages,and,flink,s,objects,param,props,the,properties,used,to,configure,the,kafka,consumer,client,and,the,zoo,keeper,client;public,flink,kafka,consumer010,string,topic,deserialization,schema,t,value,deserializer,properties,props,this,collections,singleton,list,topic,value,deserializer,props
FlinkKafkaConsumer010 -> public FlinkKafkaConsumer010(String topic, DeserializationSchema<T> valueDeserializer, Properties props);1498894422;Creates a new Kafka streaming source consumer for Kafka 0.10.x.__@param topic_The name of the topic that should be consumed._@param valueDeserializer_The de-/serializer used to convert between Kafka's byte messages and Flink's objects._@param props_The properties used to configure the Kafka consumer client, and the ZooKeeper client.;public FlinkKafkaConsumer010(String topic, DeserializationSchema<T> valueDeserializer, Properties props) {_		this(Collections.singletonList(topic), valueDeserializer, props)__	};creates,a,new,kafka,streaming,source,consumer,for,kafka,0,10,x,param,topic,the,name,of,the,topic,that,should,be,consumed,param,value,deserializer,the,de,serializer,used,to,convert,between,kafka,s,byte,messages,and,flink,s,objects,param,props,the,properties,used,to,configure,the,kafka,consumer,client,and,the,zoo,keeper,client;public,flink,kafka,consumer010,string,topic,deserialization,schema,t,value,deserializer,properties,props,this,collections,singleton,list,topic,value,deserializer,props
FlinkKafkaConsumer010 -> public FlinkKafkaConsumer010(String topic, DeserializationSchema<T> valueDeserializer, Properties props);1500863105;Creates a new Kafka streaming source consumer for Kafka 0.10.x.__@param topic_The name of the topic that should be consumed._@param valueDeserializer_The de-/serializer used to convert between Kafka's byte messages and Flink's objects._@param props_The properties used to configure the Kafka consumer client, and the ZooKeeper client.;public FlinkKafkaConsumer010(String topic, DeserializationSchema<T> valueDeserializer, Properties props) {_		this(Collections.singletonList(topic), valueDeserializer, props)__	};creates,a,new,kafka,streaming,source,consumer,for,kafka,0,10,x,param,topic,the,name,of,the,topic,that,should,be,consumed,param,value,deserializer,the,de,serializer,used,to,convert,between,kafka,s,byte,messages,and,flink,s,objects,param,props,the,properties,used,to,configure,the,kafka,consumer,client,and,the,zoo,keeper,client;public,flink,kafka,consumer010,string,topic,deserialization,schema,t,value,deserializer,properties,props,this,collections,singleton,list,topic,value,deserializer,props
FlinkKafkaConsumer010 -> public FlinkKafkaConsumer010(String topic, DeserializationSchema<T> valueDeserializer, Properties props);1509723634;Creates a new Kafka streaming source consumer for Kafka 0.10.x.__@param topic_The name of the topic that should be consumed._@param valueDeserializer_The de-/serializer used to convert between Kafka's byte messages and Flink's objects._@param props_The properties used to configure the Kafka consumer client, and the ZooKeeper client.;public FlinkKafkaConsumer010(String topic, DeserializationSchema<T> valueDeserializer, Properties props) {_		this(Collections.singletonList(topic), valueDeserializer, props)__	};creates,a,new,kafka,streaming,source,consumer,for,kafka,0,10,x,param,topic,the,name,of,the,topic,that,should,be,consumed,param,value,deserializer,the,de,serializer,used,to,convert,between,kafka,s,byte,messages,and,flink,s,objects,param,props,the,properties,used,to,configure,the,kafka,consumer,client,and,the,zoo,keeper,client;public,flink,kafka,consumer010,string,topic,deserialization,schema,t,value,deserializer,properties,props,this,collections,singleton,list,topic,value,deserializer,props
FlinkKafkaConsumer010 -> public FlinkKafkaConsumer010(String topic, DeserializationSchema<T> valueDeserializer, Properties props);1512405117;Creates a new Kafka streaming source consumer for Kafka 0.10.x.__@param topic_The name of the topic that should be consumed._@param valueDeserializer_The de-/serializer used to convert between Kafka's byte messages and Flink's objects._@param props_The properties used to configure the Kafka consumer client, and the ZooKeeper client.;public FlinkKafkaConsumer010(String topic, DeserializationSchema<T> valueDeserializer, Properties props) {_		this(Collections.singletonList(topic), valueDeserializer, props)__	};creates,a,new,kafka,streaming,source,consumer,for,kafka,0,10,x,param,topic,the,name,of,the,topic,that,should,be,consumed,param,value,deserializer,the,de,serializer,used,to,convert,between,kafka,s,byte,messages,and,flink,s,objects,param,props,the,properties,used,to,configure,the,kafka,consumer,client,and,the,zoo,keeper,client;public,flink,kafka,consumer010,string,topic,deserialization,schema,t,value,deserializer,properties,props,this,collections,singleton,list,topic,value,deserializer,props
FlinkKafkaConsumer010 -> public FlinkKafkaConsumer010(String topic, DeserializationSchema<T> valueDeserializer, Properties props);1515757409;Creates a new Kafka streaming source consumer for Kafka 0.10.x.__@param topic_The name of the topic that should be consumed._@param valueDeserializer_The de-/serializer used to convert between Kafka's byte messages and Flink's objects._@param props_The properties used to configure the Kafka consumer client, and the ZooKeeper client.;public FlinkKafkaConsumer010(String topic, DeserializationSchema<T> valueDeserializer, Properties props) {_		this(Collections.singletonList(topic), valueDeserializer, props)__	};creates,a,new,kafka,streaming,source,consumer,for,kafka,0,10,x,param,topic,the,name,of,the,topic,that,should,be,consumed,param,value,deserializer,the,de,serializer,used,to,convert,between,kafka,s,byte,messages,and,flink,s,objects,param,props,the,properties,used,to,configure,the,kafka,consumer,client,and,the,zoo,keeper,client;public,flink,kafka,consumer010,string,topic,deserialization,schema,t,value,deserializer,properties,props,this,collections,singleton,list,topic,value,deserializer,props
FlinkKafkaConsumer010 -> public FlinkKafkaConsumer010(String topic, DeserializationSchema<T> valueDeserializer, Properties props);1517943538;Creates a new Kafka streaming source consumer for Kafka 0.10.x.__@param topic_The name of the topic that should be consumed._@param valueDeserializer_The de-/serializer used to convert between Kafka's byte messages and Flink's objects._@param props_The properties used to configure the Kafka consumer client, and the ZooKeeper client.;public FlinkKafkaConsumer010(String topic, DeserializationSchema<T> valueDeserializer, Properties props) {_		this(Collections.singletonList(topic), valueDeserializer, props)__	};creates,a,new,kafka,streaming,source,consumer,for,kafka,0,10,x,param,topic,the,name,of,the,topic,that,should,be,consumed,param,value,deserializer,the,de,serializer,used,to,convert,between,kafka,s,byte,messages,and,flink,s,objects,param,props,the,properties,used,to,configure,the,kafka,consumer,client,and,the,zoo,keeper,client;public,flink,kafka,consumer010,string,topic,deserialization,schema,t,value,deserializer,properties,props,this,collections,singleton,list,topic,value,deserializer,props
FlinkKafkaConsumer010 -> public FlinkKafkaConsumer010(String topic, DeserializationSchema<T> valueDeserializer, Properties props);1519973085;Creates a new Kafka streaming source consumer for Kafka 0.10.x.__@param topic_The name of the topic that should be consumed._@param valueDeserializer_The de-/serializer used to convert between Kafka's byte messages and Flink's objects._@param props_The properties used to configure the Kafka consumer client, and the ZooKeeper client.;public FlinkKafkaConsumer010(String topic, DeserializationSchema<T> valueDeserializer, Properties props) {_		this(Collections.singletonList(topic), valueDeserializer, props)__	};creates,a,new,kafka,streaming,source,consumer,for,kafka,0,10,x,param,topic,the,name,of,the,topic,that,should,be,consumed,param,value,deserializer,the,de,serializer,used,to,convert,between,kafka,s,byte,messages,and,flink,s,objects,param,props,the,properties,used,to,configure,the,kafka,consumer,client,and,the,zoo,keeper,client;public,flink,kafka,consumer010,string,topic,deserialization,schema,t,value,deserializer,properties,props,this,collections,singleton,list,topic,value,deserializer,props
FlinkKafkaConsumer010 -> public FlinkKafkaConsumer010(String topic, DeserializationSchema<T> valueDeserializer, Properties props);1519973085;Creates a new Kafka streaming source consumer for Kafka 0.10.x.__@param topic_The name of the topic that should be consumed._@param valueDeserializer_The de-/serializer used to convert between Kafka's byte messages and Flink's objects._@param props_The properties used to configure the Kafka consumer client, and the ZooKeeper client.;public FlinkKafkaConsumer010(String topic, DeserializationSchema<T> valueDeserializer, Properties props) {_		this(Collections.singletonList(topic), valueDeserializer, props)__	};creates,a,new,kafka,streaming,source,consumer,for,kafka,0,10,x,param,topic,the,name,of,the,topic,that,should,be,consumed,param,value,deserializer,the,de,serializer,used,to,convert,between,kafka,s,byte,messages,and,flink,s,objects,param,props,the,properties,used,to,configure,the,kafka,consumer,client,and,the,zoo,keeper,client;public,flink,kafka,consumer010,string,topic,deserialization,schema,t,value,deserializer,properties,props,this,collections,singleton,list,topic,value,deserializer,props
FlinkKafkaConsumer010 -> public FlinkKafkaConsumer010(String topic, DeserializationSchema<T> valueDeserializer, Properties props);1548860009;Creates a new Kafka streaming source consumer for Kafka 0.10.x.__@param topic_The name of the topic that should be consumed._@param valueDeserializer_The de-/serializer used to convert between Kafka's byte messages and Flink's objects._@param props_The properties used to configure the Kafka consumer client, and the ZooKeeper client.;public FlinkKafkaConsumer010(String topic, DeserializationSchema<T> valueDeserializer, Properties props) {_		this(Collections.singletonList(topic), valueDeserializer, props)__	};creates,a,new,kafka,streaming,source,consumer,for,kafka,0,10,x,param,topic,the,name,of,the,topic,that,should,be,consumed,param,value,deserializer,the,de,serializer,used,to,convert,between,kafka,s,byte,messages,and,flink,s,objects,param,props,the,properties,used,to,configure,the,kafka,consumer,client,and,the,zoo,keeper,client;public,flink,kafka,consumer010,string,topic,deserialization,schema,t,value,deserializer,properties,props,this,collections,singleton,list,topic,value,deserializer,props
FlinkKafkaConsumer010 -> public FlinkKafkaConsumer010(String topic, DeserializationSchema<T> valueDeserializer, Properties props);1550834388;Creates a new Kafka streaming source consumer for Kafka 0.10.x.__@param topic_The name of the topic that should be consumed._@param valueDeserializer_The de-/serializer used to convert between Kafka's byte messages and Flink's objects._@param props_The properties used to configure the Kafka consumer client, and the ZooKeeper client.;public FlinkKafkaConsumer010(String topic, DeserializationSchema<T> valueDeserializer, Properties props) {_		this(Collections.singletonList(topic), valueDeserializer, props)__	};creates,a,new,kafka,streaming,source,consumer,for,kafka,0,10,x,param,topic,the,name,of,the,topic,that,should,be,consumed,param,value,deserializer,the,de,serializer,used,to,convert,between,kafka,s,byte,messages,and,flink,s,objects,param,props,the,properties,used,to,configure,the,kafka,consumer,client,and,the,zoo,keeper,client;public,flink,kafka,consumer010,string,topic,deserialization,schema,t,value,deserializer,properties,props,this,collections,singleton,list,topic,value,deserializer,props
FlinkKafkaConsumer010 -> public FlinkKafkaConsumer010(String topic, DeserializationSchema<T> valueDeserializer, Properties props);1550834396;Creates a new Kafka streaming source consumer for Kafka 0.10.x.__@param topic_The name of the topic that should be consumed._@param valueDeserializer_The de-/serializer used to convert between Kafka's byte messages and Flink's objects._@param props_The properties used to configure the Kafka consumer client, and the ZooKeeper client.;public FlinkKafkaConsumer010(String topic, DeserializationSchema<T> valueDeserializer, Properties props) {_		this(Collections.singletonList(topic), valueDeserializer, props)__	};creates,a,new,kafka,streaming,source,consumer,for,kafka,0,10,x,param,topic,the,name,of,the,topic,that,should,be,consumed,param,value,deserializer,the,de,serializer,used,to,convert,between,kafka,s,byte,messages,and,flink,s,objects,param,props,the,properties,used,to,configure,the,kafka,consumer,client,and,the,zoo,keeper,client;public,flink,kafka,consumer010,string,topic,deserialization,schema,t,value,deserializer,properties,props,this,collections,singleton,list,topic,value,deserializer,props
FlinkKafkaConsumer010 -> public FlinkKafkaConsumer010(List<String> topics, DeserializationSchema<T> deserializer, Properties props);1480685315;Creates a new Kafka streaming source consumer for Kafka 0.10.x__This constructor allows passing multiple topics to the consumer.__@param topics_The Kafka topics to read from._@param deserializer_The de-/serializer used to convert between Kafka's byte messages and Flink's objects._@param props_The properties that are used to configure both the fetcher and the offset handler.;public FlinkKafkaConsumer010(List<String> topics, DeserializationSchema<T> deserializer, Properties props) {_		this(topics, new KeyedDeserializationSchemaWrapper<>(deserializer), props)__	};creates,a,new,kafka,streaming,source,consumer,for,kafka,0,10,x,this,constructor,allows,passing,multiple,topics,to,the,consumer,param,topics,the,kafka,topics,to,read,from,param,deserializer,the,de,serializer,used,to,convert,between,kafka,s,byte,messages,and,flink,s,objects,param,props,the,properties,that,are,used,to,configure,both,the,fetcher,and,the,offset,handler;public,flink,kafka,consumer010,list,string,topics,deserialization,schema,t,deserializer,properties,props,this,topics,new,keyed,deserialization,schema,wrapper,deserializer,props
FlinkKafkaConsumer010 -> public FlinkKafkaConsumer010(List<String> topics, DeserializationSchema<T> deserializer, Properties props);1487173364;Creates a new Kafka streaming source consumer for Kafka 0.10.x__This constructor allows passing multiple topics to the consumer.__@param topics_The Kafka topics to read from._@param deserializer_The de-/serializer used to convert between Kafka's byte messages and Flink's objects._@param props_The properties that are used to configure both the fetcher and the offset handler.;public FlinkKafkaConsumer010(List<String> topics, DeserializationSchema<T> deserializer, Properties props) {_		this(topics, new KeyedDeserializationSchemaWrapper<>(deserializer), props)__	};creates,a,new,kafka,streaming,source,consumer,for,kafka,0,10,x,this,constructor,allows,passing,multiple,topics,to,the,consumer,param,topics,the,kafka,topics,to,read,from,param,deserializer,the,de,serializer,used,to,convert,between,kafka,s,byte,messages,and,flink,s,objects,param,props,the,properties,that,are,used,to,configure,both,the,fetcher,and,the,offset,handler;public,flink,kafka,consumer010,list,string,topics,deserialization,schema,t,deserializer,properties,props,this,topics,new,keyed,deserialization,schema,wrapper,deserializer,props
FlinkKafkaConsumer010 -> public FlinkKafkaConsumer010(List<String> topics, DeserializationSchema<T> deserializer, Properties props);1488214488;Creates a new Kafka streaming source consumer for Kafka 0.10.x__This constructor allows passing multiple topics to the consumer.__@param topics_The Kafka topics to read from._@param deserializer_The de-/serializer used to convert between Kafka's byte messages and Flink's objects._@param props_The properties that are used to configure both the fetcher and the offset handler.;public FlinkKafkaConsumer010(List<String> topics, DeserializationSchema<T> deserializer, Properties props) {_		this(topics, new KeyedDeserializationSchemaWrapper<>(deserializer), props)__	};creates,a,new,kafka,streaming,source,consumer,for,kafka,0,10,x,this,constructor,allows,passing,multiple,topics,to,the,consumer,param,topics,the,kafka,topics,to,read,from,param,deserializer,the,de,serializer,used,to,convert,between,kafka,s,byte,messages,and,flink,s,objects,param,props,the,properties,that,are,used,to,configure,both,the,fetcher,and,the,offset,handler;public,flink,kafka,consumer010,list,string,topics,deserialization,schema,t,deserializer,properties,props,this,topics,new,keyed,deserialization,schema,wrapper,deserializer,props
FlinkKafkaConsumer010 -> public FlinkKafkaConsumer010(List<String> topics, DeserializationSchema<T> deserializer, Properties props);1489510697;Creates a new Kafka streaming source consumer for Kafka 0.10.x__This constructor allows passing multiple topics to the consumer.__@param topics_The Kafka topics to read from._@param deserializer_The de-/serializer used to convert between Kafka's byte messages and Flink's objects._@param props_The properties that are used to configure both the fetcher and the offset handler.;public FlinkKafkaConsumer010(List<String> topics, DeserializationSchema<T> deserializer, Properties props) {_		this(topics, new KeyedDeserializationSchemaWrapper<>(deserializer), props)__	};creates,a,new,kafka,streaming,source,consumer,for,kafka,0,10,x,this,constructor,allows,passing,multiple,topics,to,the,consumer,param,topics,the,kafka,topics,to,read,from,param,deserializer,the,de,serializer,used,to,convert,between,kafka,s,byte,messages,and,flink,s,objects,param,props,the,properties,that,are,used,to,configure,both,the,fetcher,and,the,offset,handler;public,flink,kafka,consumer010,list,string,topics,deserialization,schema,t,deserializer,properties,props,this,topics,new,keyed,deserialization,schema,wrapper,deserializer,props
FlinkKafkaConsumer010 -> public FlinkKafkaConsumer010(List<String> topics, DeserializationSchema<T> deserializer, Properties props);1494830990;Creates a new Kafka streaming source consumer for Kafka 0.10.x__This constructor allows passing multiple topics to the consumer.__@param topics_The Kafka topics to read from._@param deserializer_The de-/serializer used to convert between Kafka's byte messages and Flink's objects._@param props_The properties that are used to configure both the fetcher and the offset handler.;public FlinkKafkaConsumer010(List<String> topics, DeserializationSchema<T> deserializer, Properties props) {_		this(topics, new KeyedDeserializationSchemaWrapper<>(deserializer), props)__	};creates,a,new,kafka,streaming,source,consumer,for,kafka,0,10,x,this,constructor,allows,passing,multiple,topics,to,the,consumer,param,topics,the,kafka,topics,to,read,from,param,deserializer,the,de,serializer,used,to,convert,between,kafka,s,byte,messages,and,flink,s,objects,param,props,the,properties,that,are,used,to,configure,both,the,fetcher,and,the,offset,handler;public,flink,kafka,consumer010,list,string,topics,deserialization,schema,t,deserializer,properties,props,this,topics,new,keyed,deserialization,schema,wrapper,deserializer,props
FlinkKafkaConsumer010 -> public FlinkKafkaConsumer010(List<String> topics, DeserializationSchema<T> deserializer, Properties props);1495923077;Creates a new Kafka streaming source consumer for Kafka 0.10.x__<p>This constructor allows passing multiple topics to the consumer.__@param topics_The Kafka topics to read from._@param deserializer_The de-/serializer used to convert between Kafka's byte messages and Flink's objects._@param props_The properties that are used to configure both the fetcher and the offset handler.;public FlinkKafkaConsumer010(List<String> topics, DeserializationSchema<T> deserializer, Properties props) {_		this(topics, new KeyedDeserializationSchemaWrapper<>(deserializer), props)__	};creates,a,new,kafka,streaming,source,consumer,for,kafka,0,10,x,p,this,constructor,allows,passing,multiple,topics,to,the,consumer,param,topics,the,kafka,topics,to,read,from,param,deserializer,the,de,serializer,used,to,convert,between,kafka,s,byte,messages,and,flink,s,objects,param,props,the,properties,that,are,used,to,configure,both,the,fetcher,and,the,offset,handler;public,flink,kafka,consumer010,list,string,topics,deserialization,schema,t,deserializer,properties,props,this,topics,new,keyed,deserialization,schema,wrapper,deserializer,props
FlinkKafkaConsumer010 -> public FlinkKafkaConsumer010(List<String> topics, DeserializationSchema<T> deserializer, Properties props);1498894422;Creates a new Kafka streaming source consumer for Kafka 0.10.x__<p>This constructor allows passing multiple topics to the consumer.__@param topics_The Kafka topics to read from._@param deserializer_The de-/serializer used to convert between Kafka's byte messages and Flink's objects._@param props_The properties that are used to configure both the fetcher and the offset handler.;public FlinkKafkaConsumer010(List<String> topics, DeserializationSchema<T> deserializer, Properties props) {_		this(topics, new KeyedDeserializationSchemaWrapper<>(deserializer), props)__	};creates,a,new,kafka,streaming,source,consumer,for,kafka,0,10,x,p,this,constructor,allows,passing,multiple,topics,to,the,consumer,param,topics,the,kafka,topics,to,read,from,param,deserializer,the,de,serializer,used,to,convert,between,kafka,s,byte,messages,and,flink,s,objects,param,props,the,properties,that,are,used,to,configure,both,the,fetcher,and,the,offset,handler;public,flink,kafka,consumer010,list,string,topics,deserialization,schema,t,deserializer,properties,props,this,topics,new,keyed,deserialization,schema,wrapper,deserializer,props
FlinkKafkaConsumer010 -> public FlinkKafkaConsumer010(List<String> topics, DeserializationSchema<T> deserializer, Properties props);1500863105;Creates a new Kafka streaming source consumer for Kafka 0.10.x__<p>This constructor allows passing multiple topics to the consumer.__@param topics_The Kafka topics to read from._@param deserializer_The de-/serializer used to convert between Kafka's byte messages and Flink's objects._@param props_The properties that are used to configure both the fetcher and the offset handler.;public FlinkKafkaConsumer010(List<String> topics, DeserializationSchema<T> deserializer, Properties props) {_		this(topics, new KeyedDeserializationSchemaWrapper<>(deserializer), props)__	};creates,a,new,kafka,streaming,source,consumer,for,kafka,0,10,x,p,this,constructor,allows,passing,multiple,topics,to,the,consumer,param,topics,the,kafka,topics,to,read,from,param,deserializer,the,de,serializer,used,to,convert,between,kafka,s,byte,messages,and,flink,s,objects,param,props,the,properties,that,are,used,to,configure,both,the,fetcher,and,the,offset,handler;public,flink,kafka,consumer010,list,string,topics,deserialization,schema,t,deserializer,properties,props,this,topics,new,keyed,deserialization,schema,wrapper,deserializer,props
FlinkKafkaConsumer010 -> public FlinkKafkaConsumer010(List<String> topics, DeserializationSchema<T> deserializer, Properties props);1509723634;Creates a new Kafka streaming source consumer for Kafka 0.10.x__<p>This constructor allows passing multiple topics to the consumer.__@param topics_The Kafka topics to read from._@param deserializer_The de-/serializer used to convert between Kafka's byte messages and Flink's objects._@param props_The properties that are used to configure both the fetcher and the offset handler.;public FlinkKafkaConsumer010(List<String> topics, DeserializationSchema<T> deserializer, Properties props) {_		this(topics, new KeyedDeserializationSchemaWrapper<>(deserializer), props)__	};creates,a,new,kafka,streaming,source,consumer,for,kafka,0,10,x,p,this,constructor,allows,passing,multiple,topics,to,the,consumer,param,topics,the,kafka,topics,to,read,from,param,deserializer,the,de,serializer,used,to,convert,between,kafka,s,byte,messages,and,flink,s,objects,param,props,the,properties,that,are,used,to,configure,both,the,fetcher,and,the,offset,handler;public,flink,kafka,consumer010,list,string,topics,deserialization,schema,t,deserializer,properties,props,this,topics,new,keyed,deserialization,schema,wrapper,deserializer,props
FlinkKafkaConsumer010 -> public FlinkKafkaConsumer010(List<String> topics, DeserializationSchema<T> deserializer, Properties props);1512405117;Creates a new Kafka streaming source consumer for Kafka 0.10.x__<p>This constructor allows passing multiple topics to the consumer.__@param topics_The Kafka topics to read from._@param deserializer_The de-/serializer used to convert between Kafka's byte messages and Flink's objects._@param props_The properties that are used to configure both the fetcher and the offset handler.;public FlinkKafkaConsumer010(List<String> topics, DeserializationSchema<T> deserializer, Properties props) {_		this(topics, new KeyedDeserializationSchemaWrapper<>(deserializer), props)__	};creates,a,new,kafka,streaming,source,consumer,for,kafka,0,10,x,p,this,constructor,allows,passing,multiple,topics,to,the,consumer,param,topics,the,kafka,topics,to,read,from,param,deserializer,the,de,serializer,used,to,convert,between,kafka,s,byte,messages,and,flink,s,objects,param,props,the,properties,that,are,used,to,configure,both,the,fetcher,and,the,offset,handler;public,flink,kafka,consumer010,list,string,topics,deserialization,schema,t,deserializer,properties,props,this,topics,new,keyed,deserialization,schema,wrapper,deserializer,props
FlinkKafkaConsumer010 -> public FlinkKafkaConsumer010(List<String> topics, DeserializationSchema<T> deserializer, Properties props);1515757409;Creates a new Kafka streaming source consumer for Kafka 0.10.x__<p>This constructor allows passing multiple topics to the consumer.__@param topics_The Kafka topics to read from._@param deserializer_The de-/serializer used to convert between Kafka's byte messages and Flink's objects._@param props_The properties that are used to configure both the fetcher and the offset handler.;public FlinkKafkaConsumer010(List<String> topics, DeserializationSchema<T> deserializer, Properties props) {_		this(topics, new KeyedDeserializationSchemaWrapper<>(deserializer), props)__	};creates,a,new,kafka,streaming,source,consumer,for,kafka,0,10,x,p,this,constructor,allows,passing,multiple,topics,to,the,consumer,param,topics,the,kafka,topics,to,read,from,param,deserializer,the,de,serializer,used,to,convert,between,kafka,s,byte,messages,and,flink,s,objects,param,props,the,properties,that,are,used,to,configure,both,the,fetcher,and,the,offset,handler;public,flink,kafka,consumer010,list,string,topics,deserialization,schema,t,deserializer,properties,props,this,topics,new,keyed,deserialization,schema,wrapper,deserializer,props
FlinkKafkaConsumer010 -> public FlinkKafkaConsumer010(List<String> topics, DeserializationSchema<T> deserializer, Properties props);1517943538;Creates a new Kafka streaming source consumer for Kafka 0.10.x__<p>This constructor allows passing multiple topics to the consumer.__@param topics_The Kafka topics to read from._@param deserializer_The de-/serializer used to convert between Kafka's byte messages and Flink's objects._@param props_The properties that are used to configure both the fetcher and the offset handler.;public FlinkKafkaConsumer010(List<String> topics, DeserializationSchema<T> deserializer, Properties props) {_		this(topics, new KeyedDeserializationSchemaWrapper<>(deserializer), props)__	};creates,a,new,kafka,streaming,source,consumer,for,kafka,0,10,x,p,this,constructor,allows,passing,multiple,topics,to,the,consumer,param,topics,the,kafka,topics,to,read,from,param,deserializer,the,de,serializer,used,to,convert,between,kafka,s,byte,messages,and,flink,s,objects,param,props,the,properties,that,are,used,to,configure,both,the,fetcher,and,the,offset,handler;public,flink,kafka,consumer010,list,string,topics,deserialization,schema,t,deserializer,properties,props,this,topics,new,keyed,deserialization,schema,wrapper,deserializer,props
FlinkKafkaConsumer010 -> public FlinkKafkaConsumer010(List<String> topics, DeserializationSchema<T> deserializer, Properties props);1519973085;Creates a new Kafka streaming source consumer for Kafka 0.10.x__<p>This constructor allows passing multiple topics to the consumer.__@param topics_The Kafka topics to read from._@param deserializer_The de-/serializer used to convert between Kafka's byte messages and Flink's objects._@param props_The properties that are used to configure both the fetcher and the offset handler.;public FlinkKafkaConsumer010(List<String> topics, DeserializationSchema<T> deserializer, Properties props) {_		this(topics, new KeyedDeserializationSchemaWrapper<>(deserializer), props)__	};creates,a,new,kafka,streaming,source,consumer,for,kafka,0,10,x,p,this,constructor,allows,passing,multiple,topics,to,the,consumer,param,topics,the,kafka,topics,to,read,from,param,deserializer,the,de,serializer,used,to,convert,between,kafka,s,byte,messages,and,flink,s,objects,param,props,the,properties,that,are,used,to,configure,both,the,fetcher,and,the,offset,handler;public,flink,kafka,consumer010,list,string,topics,deserialization,schema,t,deserializer,properties,props,this,topics,new,keyed,deserialization,schema,wrapper,deserializer,props
FlinkKafkaConsumer010 -> public FlinkKafkaConsumer010(List<String> topics, DeserializationSchema<T> deserializer, Properties props);1519973085;Creates a new Kafka streaming source consumer for Kafka 0.10.x__<p>This constructor allows passing multiple topics to the consumer.__@param topics_The Kafka topics to read from._@param deserializer_The de-/serializer used to convert between Kafka's byte messages and Flink's objects._@param props_The properties that are used to configure both the fetcher and the offset handler.;public FlinkKafkaConsumer010(List<String> topics, DeserializationSchema<T> deserializer, Properties props) {_		this(topics, new KeyedDeserializationSchemaWrapper<>(deserializer), props)__	};creates,a,new,kafka,streaming,source,consumer,for,kafka,0,10,x,p,this,constructor,allows,passing,multiple,topics,to,the,consumer,param,topics,the,kafka,topics,to,read,from,param,deserializer,the,de,serializer,used,to,convert,between,kafka,s,byte,messages,and,flink,s,objects,param,props,the,properties,that,are,used,to,configure,both,the,fetcher,and,the,offset,handler;public,flink,kafka,consumer010,list,string,topics,deserialization,schema,t,deserializer,properties,props,this,topics,new,keyed,deserialization,schema,wrapper,deserializer,props
FlinkKafkaConsumer010 -> public FlinkKafkaConsumer010(List<String> topics, DeserializationSchema<T> deserializer, Properties props);1548860009;Creates a new Kafka streaming source consumer for Kafka 0.10.x__<p>This constructor allows passing multiple topics to the consumer.__@param topics_The Kafka topics to read from._@param deserializer_The de-/serializer used to convert between Kafka's byte messages and Flink's objects._@param props_The properties that are used to configure both the fetcher and the offset handler.;public FlinkKafkaConsumer010(List<String> topics, DeserializationSchema<T> deserializer, Properties props) {_		this(topics, new KeyedDeserializationSchemaWrapper<>(deserializer), props)__	};creates,a,new,kafka,streaming,source,consumer,for,kafka,0,10,x,p,this,constructor,allows,passing,multiple,topics,to,the,consumer,param,topics,the,kafka,topics,to,read,from,param,deserializer,the,de,serializer,used,to,convert,between,kafka,s,byte,messages,and,flink,s,objects,param,props,the,properties,that,are,used,to,configure,both,the,fetcher,and,the,offset,handler;public,flink,kafka,consumer010,list,string,topics,deserialization,schema,t,deserializer,properties,props,this,topics,new,keyed,deserialization,schema,wrapper,deserializer,props
FlinkKafkaConsumer010 -> public FlinkKafkaConsumer010(List<String> topics, DeserializationSchema<T> deserializer, Properties props);1550834388;Creates a new Kafka streaming source consumer for Kafka 0.10.x__<p>This constructor allows passing multiple topics to the consumer.__@param topics_The Kafka topics to read from._@param deserializer_The de-/serializer used to convert between Kafka's byte messages and Flink's objects._@param props_The properties that are used to configure both the fetcher and the offset handler.;public FlinkKafkaConsumer010(List<String> topics, DeserializationSchema<T> deserializer, Properties props) {_		this(topics, new KeyedDeserializationSchemaWrapper<>(deserializer), props)__	};creates,a,new,kafka,streaming,source,consumer,for,kafka,0,10,x,p,this,constructor,allows,passing,multiple,topics,to,the,consumer,param,topics,the,kafka,topics,to,read,from,param,deserializer,the,de,serializer,used,to,convert,between,kafka,s,byte,messages,and,flink,s,objects,param,props,the,properties,that,are,used,to,configure,both,the,fetcher,and,the,offset,handler;public,flink,kafka,consumer010,list,string,topics,deserialization,schema,t,deserializer,properties,props,this,topics,new,keyed,deserialization,schema,wrapper,deserializer,props
FlinkKafkaConsumer010 -> public FlinkKafkaConsumer010(List<String> topics, DeserializationSchema<T> deserializer, Properties props);1550834396;Creates a new Kafka streaming source consumer for Kafka 0.10.x__<p>This constructor allows passing multiple topics to the consumer.__@param topics_The Kafka topics to read from._@param deserializer_The de-/serializer used to convert between Kafka's byte messages and Flink's objects._@param props_The properties that are used to configure both the fetcher and the offset handler.;public FlinkKafkaConsumer010(List<String> topics, DeserializationSchema<T> deserializer, Properties props) {_		this(topics, new KafkaDeserializationSchemaWrapper<>(deserializer), props)__	};creates,a,new,kafka,streaming,source,consumer,for,kafka,0,10,x,p,this,constructor,allows,passing,multiple,topics,to,the,consumer,param,topics,the,kafka,topics,to,read,from,param,deserializer,the,de,serializer,used,to,convert,between,kafka,s,byte,messages,and,flink,s,objects,param,props,the,properties,that,are,used,to,configure,both,the,fetcher,and,the,offset,handler;public,flink,kafka,consumer010,list,string,topics,deserialization,schema,t,deserializer,properties,props,this,topics,new,kafka,deserialization,schema,wrapper,deserializer,props
FlinkKafkaConsumer010 -> public FlinkKafkaConsumer010(String topic, KeyedDeserializationSchema<T> deserializer, Properties props);1480685315;Creates a new Kafka streaming source consumer for Kafka 0.10.x__This constructor allows passing a {@see KeyedDeserializationSchema} for reading key/value_pairs, offsets, and topic names from Kafka.__@param topic_The name of the topic that should be consumed._@param deserializer_The keyed de-/serializer used to convert between Kafka's byte messages and Flink's objects._@param props_The properties used to configure the Kafka consumer client, and the ZooKeeper client.;public FlinkKafkaConsumer010(String topic, KeyedDeserializationSchema<T> deserializer, Properties props) {_		this(Collections.singletonList(topic), deserializer, props)__	};creates,a,new,kafka,streaming,source,consumer,for,kafka,0,10,x,this,constructor,allows,passing,a,see,keyed,deserialization,schema,for,reading,key,value,pairs,offsets,and,topic,names,from,kafka,param,topic,the,name,of,the,topic,that,should,be,consumed,param,deserializer,the,keyed,de,serializer,used,to,convert,between,kafka,s,byte,messages,and,flink,s,objects,param,props,the,properties,used,to,configure,the,kafka,consumer,client,and,the,zoo,keeper,client;public,flink,kafka,consumer010,string,topic,keyed,deserialization,schema,t,deserializer,properties,props,this,collections,singleton,list,topic,deserializer,props
FlinkKafkaConsumer010 -> public FlinkKafkaConsumer010(String topic, KeyedDeserializationSchema<T> deserializer, Properties props);1487173364;Creates a new Kafka streaming source consumer for Kafka 0.10.x__This constructor allows passing a {@see KeyedDeserializationSchema} for reading key/value_pairs, offsets, and topic names from Kafka.__@param topic_The name of the topic that should be consumed._@param deserializer_The keyed de-/serializer used to convert between Kafka's byte messages and Flink's objects._@param props_The properties used to configure the Kafka consumer client, and the ZooKeeper client.;public FlinkKafkaConsumer010(String topic, KeyedDeserializationSchema<T> deserializer, Properties props) {_		this(Collections.singletonList(topic), deserializer, props)__	};creates,a,new,kafka,streaming,source,consumer,for,kafka,0,10,x,this,constructor,allows,passing,a,see,keyed,deserialization,schema,for,reading,key,value,pairs,offsets,and,topic,names,from,kafka,param,topic,the,name,of,the,topic,that,should,be,consumed,param,deserializer,the,keyed,de,serializer,used,to,convert,between,kafka,s,byte,messages,and,flink,s,objects,param,props,the,properties,used,to,configure,the,kafka,consumer,client,and,the,zoo,keeper,client;public,flink,kafka,consumer010,string,topic,keyed,deserialization,schema,t,deserializer,properties,props,this,collections,singleton,list,topic,deserializer,props
FlinkKafkaConsumer010 -> public FlinkKafkaConsumer010(String topic, KeyedDeserializationSchema<T> deserializer, Properties props);1488214488;Creates a new Kafka streaming source consumer for Kafka 0.10.x__This constructor allows passing a {@see KeyedDeserializationSchema} for reading key/value_pairs, offsets, and topic names from Kafka.__@param topic_The name of the topic that should be consumed._@param deserializer_The keyed de-/serializer used to convert between Kafka's byte messages and Flink's objects._@param props_The properties used to configure the Kafka consumer client, and the ZooKeeper client.;public FlinkKafkaConsumer010(String topic, KeyedDeserializationSchema<T> deserializer, Properties props) {_		this(Collections.singletonList(topic), deserializer, props)__	};creates,a,new,kafka,streaming,source,consumer,for,kafka,0,10,x,this,constructor,allows,passing,a,see,keyed,deserialization,schema,for,reading,key,value,pairs,offsets,and,topic,names,from,kafka,param,topic,the,name,of,the,topic,that,should,be,consumed,param,deserializer,the,keyed,de,serializer,used,to,convert,between,kafka,s,byte,messages,and,flink,s,objects,param,props,the,properties,used,to,configure,the,kafka,consumer,client,and,the,zoo,keeper,client;public,flink,kafka,consumer010,string,topic,keyed,deserialization,schema,t,deserializer,properties,props,this,collections,singleton,list,topic,deserializer,props
FlinkKafkaConsumer010 -> public FlinkKafkaConsumer010(String topic, KeyedDeserializationSchema<T> deserializer, Properties props);1489510697;Creates a new Kafka streaming source consumer for Kafka 0.10.x__This constructor allows passing a {@see KeyedDeserializationSchema} for reading key/value_pairs, offsets, and topic names from Kafka.__@param topic_The name of the topic that should be consumed._@param deserializer_The keyed de-/serializer used to convert between Kafka's byte messages and Flink's objects._@param props_The properties used to configure the Kafka consumer client, and the ZooKeeper client.;public FlinkKafkaConsumer010(String topic, KeyedDeserializationSchema<T> deserializer, Properties props) {_		this(Collections.singletonList(topic), deserializer, props)__	};creates,a,new,kafka,streaming,source,consumer,for,kafka,0,10,x,this,constructor,allows,passing,a,see,keyed,deserialization,schema,for,reading,key,value,pairs,offsets,and,topic,names,from,kafka,param,topic,the,name,of,the,topic,that,should,be,consumed,param,deserializer,the,keyed,de,serializer,used,to,convert,between,kafka,s,byte,messages,and,flink,s,objects,param,props,the,properties,used,to,configure,the,kafka,consumer,client,and,the,zoo,keeper,client;public,flink,kafka,consumer010,string,topic,keyed,deserialization,schema,t,deserializer,properties,props,this,collections,singleton,list,topic,deserializer,props
FlinkKafkaConsumer010 -> public FlinkKafkaConsumer010(String topic, KeyedDeserializationSchema<T> deserializer, Properties props);1494830990;Creates a new Kafka streaming source consumer for Kafka 0.10.x__This constructor allows passing a {@see KeyedDeserializationSchema} for reading key/value_pairs, offsets, and topic names from Kafka.__@param topic_The name of the topic that should be consumed._@param deserializer_The keyed de-/serializer used to convert between Kafka's byte messages and Flink's objects._@param props_The properties used to configure the Kafka consumer client, and the ZooKeeper client.;public FlinkKafkaConsumer010(String topic, KeyedDeserializationSchema<T> deserializer, Properties props) {_		this(Collections.singletonList(topic), deserializer, props)__	};creates,a,new,kafka,streaming,source,consumer,for,kafka,0,10,x,this,constructor,allows,passing,a,see,keyed,deserialization,schema,for,reading,key,value,pairs,offsets,and,topic,names,from,kafka,param,topic,the,name,of,the,topic,that,should,be,consumed,param,deserializer,the,keyed,de,serializer,used,to,convert,between,kafka,s,byte,messages,and,flink,s,objects,param,props,the,properties,used,to,configure,the,kafka,consumer,client,and,the,zoo,keeper,client;public,flink,kafka,consumer010,string,topic,keyed,deserialization,schema,t,deserializer,properties,props,this,collections,singleton,list,topic,deserializer,props
FlinkKafkaConsumer010 -> public FlinkKafkaConsumer010(String topic, KeyedDeserializationSchema<T> deserializer, Properties props);1495923077;Creates a new Kafka streaming source consumer for Kafka 0.10.x__<p>This constructor allows passing a {@see KeyedDeserializationSchema} for reading key/value_pairs, offsets, and topic names from Kafka.__@param topic_The name of the topic that should be consumed._@param deserializer_The keyed de-/serializer used to convert between Kafka's byte messages and Flink's objects._@param props_The properties used to configure the Kafka consumer client, and the ZooKeeper client.;public FlinkKafkaConsumer010(String topic, KeyedDeserializationSchema<T> deserializer, Properties props) {_		this(Collections.singletonList(topic), deserializer, props)__	};creates,a,new,kafka,streaming,source,consumer,for,kafka,0,10,x,p,this,constructor,allows,passing,a,see,keyed,deserialization,schema,for,reading,key,value,pairs,offsets,and,topic,names,from,kafka,param,topic,the,name,of,the,topic,that,should,be,consumed,param,deserializer,the,keyed,de,serializer,used,to,convert,between,kafka,s,byte,messages,and,flink,s,objects,param,props,the,properties,used,to,configure,the,kafka,consumer,client,and,the,zoo,keeper,client;public,flink,kafka,consumer010,string,topic,keyed,deserialization,schema,t,deserializer,properties,props,this,collections,singleton,list,topic,deserializer,props
FlinkKafkaConsumer010 -> public FlinkKafkaConsumer010(String topic, KeyedDeserializationSchema<T> deserializer, Properties props);1498894422;Creates a new Kafka streaming source consumer for Kafka 0.10.x__<p>This constructor allows passing a {@see KeyedDeserializationSchema} for reading key/value_pairs, offsets, and topic names from Kafka.__@param topic_The name of the topic that should be consumed._@param deserializer_The keyed de-/serializer used to convert between Kafka's byte messages and Flink's objects._@param props_The properties used to configure the Kafka consumer client, and the ZooKeeper client.;public FlinkKafkaConsumer010(String topic, KeyedDeserializationSchema<T> deserializer, Properties props) {_		this(Collections.singletonList(topic), deserializer, props)__	};creates,a,new,kafka,streaming,source,consumer,for,kafka,0,10,x,p,this,constructor,allows,passing,a,see,keyed,deserialization,schema,for,reading,key,value,pairs,offsets,and,topic,names,from,kafka,param,topic,the,name,of,the,topic,that,should,be,consumed,param,deserializer,the,keyed,de,serializer,used,to,convert,between,kafka,s,byte,messages,and,flink,s,objects,param,props,the,properties,used,to,configure,the,kafka,consumer,client,and,the,zoo,keeper,client;public,flink,kafka,consumer010,string,topic,keyed,deserialization,schema,t,deserializer,properties,props,this,collections,singleton,list,topic,deserializer,props
FlinkKafkaConsumer010 -> public FlinkKafkaConsumer010(String topic, KeyedDeserializationSchema<T> deserializer, Properties props);1500863105;Creates a new Kafka streaming source consumer for Kafka 0.10.x__<p>This constructor allows passing a {@see KeyedDeserializationSchema} for reading key/value_pairs, offsets, and topic names from Kafka.__@param topic_The name of the topic that should be consumed._@param deserializer_The keyed de-/serializer used to convert between Kafka's byte messages and Flink's objects._@param props_The properties used to configure the Kafka consumer client, and the ZooKeeper client.;public FlinkKafkaConsumer010(String topic, KeyedDeserializationSchema<T> deserializer, Properties props) {_		this(Collections.singletonList(topic), deserializer, props)__	};creates,a,new,kafka,streaming,source,consumer,for,kafka,0,10,x,p,this,constructor,allows,passing,a,see,keyed,deserialization,schema,for,reading,key,value,pairs,offsets,and,topic,names,from,kafka,param,topic,the,name,of,the,topic,that,should,be,consumed,param,deserializer,the,keyed,de,serializer,used,to,convert,between,kafka,s,byte,messages,and,flink,s,objects,param,props,the,properties,used,to,configure,the,kafka,consumer,client,and,the,zoo,keeper,client;public,flink,kafka,consumer010,string,topic,keyed,deserialization,schema,t,deserializer,properties,props,this,collections,singleton,list,topic,deserializer,props
FlinkKafkaConsumer010 -> public FlinkKafkaConsumer010(String topic, KeyedDeserializationSchema<T> deserializer, Properties props);1509723634;Creates a new Kafka streaming source consumer for Kafka 0.10.x__<p>This constructor allows passing a {@see KeyedDeserializationSchema} for reading key/value_pairs, offsets, and topic names from Kafka.__@param topic_The name of the topic that should be consumed._@param deserializer_The keyed de-/serializer used to convert between Kafka's byte messages and Flink's objects._@param props_The properties used to configure the Kafka consumer client, and the ZooKeeper client.;public FlinkKafkaConsumer010(String topic, KeyedDeserializationSchema<T> deserializer, Properties props) {_		this(Collections.singletonList(topic), deserializer, props)__	};creates,a,new,kafka,streaming,source,consumer,for,kafka,0,10,x,p,this,constructor,allows,passing,a,see,keyed,deserialization,schema,for,reading,key,value,pairs,offsets,and,topic,names,from,kafka,param,topic,the,name,of,the,topic,that,should,be,consumed,param,deserializer,the,keyed,de,serializer,used,to,convert,between,kafka,s,byte,messages,and,flink,s,objects,param,props,the,properties,used,to,configure,the,kafka,consumer,client,and,the,zoo,keeper,client;public,flink,kafka,consumer010,string,topic,keyed,deserialization,schema,t,deserializer,properties,props,this,collections,singleton,list,topic,deserializer,props
FlinkKafkaConsumer010 -> public FlinkKafkaConsumer010(String topic, KeyedDeserializationSchema<T> deserializer, Properties props);1512405117;Creates a new Kafka streaming source consumer for Kafka 0.10.x__<p>This constructor allows passing a {@see KeyedDeserializationSchema} for reading key/value_pairs, offsets, and topic names from Kafka.__@param topic_The name of the topic that should be consumed._@param deserializer_The keyed de-/serializer used to convert between Kafka's byte messages and Flink's objects._@param props_The properties used to configure the Kafka consumer client, and the ZooKeeper client.;public FlinkKafkaConsumer010(String topic, KeyedDeserializationSchema<T> deserializer, Properties props) {_		this(Collections.singletonList(topic), deserializer, props)__	};creates,a,new,kafka,streaming,source,consumer,for,kafka,0,10,x,p,this,constructor,allows,passing,a,see,keyed,deserialization,schema,for,reading,key,value,pairs,offsets,and,topic,names,from,kafka,param,topic,the,name,of,the,topic,that,should,be,consumed,param,deserializer,the,keyed,de,serializer,used,to,convert,between,kafka,s,byte,messages,and,flink,s,objects,param,props,the,properties,used,to,configure,the,kafka,consumer,client,and,the,zoo,keeper,client;public,flink,kafka,consumer010,string,topic,keyed,deserialization,schema,t,deserializer,properties,props,this,collections,singleton,list,topic,deserializer,props
FlinkKafkaConsumer010 -> public FlinkKafkaConsumer010(String topic, KeyedDeserializationSchema<T> deserializer, Properties props);1515757409;Creates a new Kafka streaming source consumer for Kafka 0.10.x__<p>This constructor allows passing a {@see KeyedDeserializationSchema} for reading key/value_pairs, offsets, and topic names from Kafka.__@param topic_The name of the topic that should be consumed._@param deserializer_The keyed de-/serializer used to convert between Kafka's byte messages and Flink's objects._@param props_The properties used to configure the Kafka consumer client, and the ZooKeeper client.;public FlinkKafkaConsumer010(String topic, KeyedDeserializationSchema<T> deserializer, Properties props) {_		this(Collections.singletonList(topic), deserializer, props)__	};creates,a,new,kafka,streaming,source,consumer,for,kafka,0,10,x,p,this,constructor,allows,passing,a,see,keyed,deserialization,schema,for,reading,key,value,pairs,offsets,and,topic,names,from,kafka,param,topic,the,name,of,the,topic,that,should,be,consumed,param,deserializer,the,keyed,de,serializer,used,to,convert,between,kafka,s,byte,messages,and,flink,s,objects,param,props,the,properties,used,to,configure,the,kafka,consumer,client,and,the,zoo,keeper,client;public,flink,kafka,consumer010,string,topic,keyed,deserialization,schema,t,deserializer,properties,props,this,collections,singleton,list,topic,deserializer,props
FlinkKafkaConsumer010 -> public FlinkKafkaConsumer010(String topic, KeyedDeserializationSchema<T> deserializer, Properties props);1517943538;Creates a new Kafka streaming source consumer for Kafka 0.10.x__<p>This constructor allows passing a {@see KeyedDeserializationSchema} for reading key/value_pairs, offsets, and topic names from Kafka.__@param topic_The name of the topic that should be consumed._@param deserializer_The keyed de-/serializer used to convert between Kafka's byte messages and Flink's objects._@param props_The properties used to configure the Kafka consumer client, and the ZooKeeper client.;public FlinkKafkaConsumer010(String topic, KeyedDeserializationSchema<T> deserializer, Properties props) {_		this(Collections.singletonList(topic), deserializer, props)__	};creates,a,new,kafka,streaming,source,consumer,for,kafka,0,10,x,p,this,constructor,allows,passing,a,see,keyed,deserialization,schema,for,reading,key,value,pairs,offsets,and,topic,names,from,kafka,param,topic,the,name,of,the,topic,that,should,be,consumed,param,deserializer,the,keyed,de,serializer,used,to,convert,between,kafka,s,byte,messages,and,flink,s,objects,param,props,the,properties,used,to,configure,the,kafka,consumer,client,and,the,zoo,keeper,client;public,flink,kafka,consumer010,string,topic,keyed,deserialization,schema,t,deserializer,properties,props,this,collections,singleton,list,topic,deserializer,props
FlinkKafkaConsumer010 -> public FlinkKafkaConsumer010(String topic, KeyedDeserializationSchema<T> deserializer, Properties props);1519973085;Creates a new Kafka streaming source consumer for Kafka 0.10.x__<p>This constructor allows passing a {@see KeyedDeserializationSchema} for reading key/value_pairs, offsets, and topic names from Kafka.__@param topic_The name of the topic that should be consumed._@param deserializer_The keyed de-/serializer used to convert between Kafka's byte messages and Flink's objects._@param props_The properties used to configure the Kafka consumer client, and the ZooKeeper client.;public FlinkKafkaConsumer010(String topic, KeyedDeserializationSchema<T> deserializer, Properties props) {_		this(Collections.singletonList(topic), deserializer, props)__	};creates,a,new,kafka,streaming,source,consumer,for,kafka,0,10,x,p,this,constructor,allows,passing,a,see,keyed,deserialization,schema,for,reading,key,value,pairs,offsets,and,topic,names,from,kafka,param,topic,the,name,of,the,topic,that,should,be,consumed,param,deserializer,the,keyed,de,serializer,used,to,convert,between,kafka,s,byte,messages,and,flink,s,objects,param,props,the,properties,used,to,configure,the,kafka,consumer,client,and,the,zoo,keeper,client;public,flink,kafka,consumer010,string,topic,keyed,deserialization,schema,t,deserializer,properties,props,this,collections,singleton,list,topic,deserializer,props
FlinkKafkaConsumer010 -> public FlinkKafkaConsumer010(String topic, KeyedDeserializationSchema<T> deserializer, Properties props);1519973085;Creates a new Kafka streaming source consumer for Kafka 0.10.x__<p>This constructor allows passing a {@see KeyedDeserializationSchema} for reading key/value_pairs, offsets, and topic names from Kafka.__@param topic_The name of the topic that should be consumed._@param deserializer_The keyed de-/serializer used to convert between Kafka's byte messages and Flink's objects._@param props_The properties used to configure the Kafka consumer client, and the ZooKeeper client.;public FlinkKafkaConsumer010(String topic, KeyedDeserializationSchema<T> deserializer, Properties props) {_		this(Collections.singletonList(topic), deserializer, props)__	};creates,a,new,kafka,streaming,source,consumer,for,kafka,0,10,x,p,this,constructor,allows,passing,a,see,keyed,deserialization,schema,for,reading,key,value,pairs,offsets,and,topic,names,from,kafka,param,topic,the,name,of,the,topic,that,should,be,consumed,param,deserializer,the,keyed,de,serializer,used,to,convert,between,kafka,s,byte,messages,and,flink,s,objects,param,props,the,properties,used,to,configure,the,kafka,consumer,client,and,the,zoo,keeper,client;public,flink,kafka,consumer010,string,topic,keyed,deserialization,schema,t,deserializer,properties,props,this,collections,singleton,list,topic,deserializer,props
FlinkKafkaConsumer010 -> public FlinkKafkaConsumer010(String topic, KeyedDeserializationSchema<T> deserializer, Properties props);1548860009;Creates a new Kafka streaming source consumer for Kafka 0.10.x__<p>This constructor allows passing a {@see KeyedDeserializationSchema} for reading key/value_pairs, offsets, and topic names from Kafka.__@param topic_The name of the topic that should be consumed._@param deserializer_The keyed de-/serializer used to convert between Kafka's byte messages and Flink's objects._@param props_The properties used to configure the Kafka consumer client, and the ZooKeeper client.;public FlinkKafkaConsumer010(String topic, KeyedDeserializationSchema<T> deserializer, Properties props) {_		this(Collections.singletonList(topic), deserializer, props)__	};creates,a,new,kafka,streaming,source,consumer,for,kafka,0,10,x,p,this,constructor,allows,passing,a,see,keyed,deserialization,schema,for,reading,key,value,pairs,offsets,and,topic,names,from,kafka,param,topic,the,name,of,the,topic,that,should,be,consumed,param,deserializer,the,keyed,de,serializer,used,to,convert,between,kafka,s,byte,messages,and,flink,s,objects,param,props,the,properties,used,to,configure,the,kafka,consumer,client,and,the,zoo,keeper,client;public,flink,kafka,consumer010,string,topic,keyed,deserialization,schema,t,deserializer,properties,props,this,collections,singleton,list,topic,deserializer,props
FlinkKafkaConsumer010 -> public FlinkKafkaConsumer010(String topic, KeyedDeserializationSchema<T> deserializer, Properties props);1550834388;Creates a new Kafka streaming source consumer for Kafka 0.10.x__<p>This constructor allows passing a {@see KeyedDeserializationSchema} for reading key/value_pairs, offsets, and topic names from Kafka.__@param topic_The name of the topic that should be consumed._@param deserializer_The keyed de-/serializer used to convert between Kafka's byte messages and Flink's objects._@param props_The properties used to configure the Kafka consumer client, and the ZooKeeper client.;public FlinkKafkaConsumer010(String topic, KeyedDeserializationSchema<T> deserializer, Properties props) {_		this(Collections.singletonList(topic), deserializer, props)__	};creates,a,new,kafka,streaming,source,consumer,for,kafka,0,10,x,p,this,constructor,allows,passing,a,see,keyed,deserialization,schema,for,reading,key,value,pairs,offsets,and,topic,names,from,kafka,param,topic,the,name,of,the,topic,that,should,be,consumed,param,deserializer,the,keyed,de,serializer,used,to,convert,between,kafka,s,byte,messages,and,flink,s,objects,param,props,the,properties,used,to,configure,the,kafka,consumer,client,and,the,zoo,keeper,client;public,flink,kafka,consumer010,string,topic,keyed,deserialization,schema,t,deserializer,properties,props,this,collections,singleton,list,topic,deserializer,props
