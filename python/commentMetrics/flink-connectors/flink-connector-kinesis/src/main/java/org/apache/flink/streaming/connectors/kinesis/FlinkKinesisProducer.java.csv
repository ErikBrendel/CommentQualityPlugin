# id;timestamp;commentText;codeText;commentWords;codeWords
FlinkKinesisProducer -> public FlinkKinesisProducer(final SerializationSchema<OUT> schema, Properties configProps);1480685315;Create a new FlinkKinesisProducer._This is a constructor supporting Flink's {@see SerializationSchema}.__@param schema Serialization schema for the data type_@param configProps The properties used to configure AWS credentials and AWS region;public FlinkKinesisProducer(final SerializationSchema<OUT> schema, Properties configProps) {__		_		this(new KinesisSerializationSchema<OUT>() {_			@Override_			public ByteBuffer serialize(OUT element) {_				_				return ByteBuffer.wrap(schema.serialize(element))__			}_			_			@Override_			public String getTargetStream(OUT element) {_				return null__			}_		}, configProps)__	};create,a,new,flink,kinesis,producer,this,is,a,constructor,supporting,flink,s,see,serialization,schema,param,schema,serialization,schema,for,the,data,type,param,config,props,the,properties,used,to,configure,aws,credentials,and,aws,region;public,flink,kinesis,producer,final,serialization,schema,out,schema,properties,config,props,this,new,kinesis,serialization,schema,out,override,public,byte,buffer,serialize,out,element,return,byte,buffer,wrap,schema,serialize,element,override,public,string,get,target,stream,out,element,return,null,config,props
FlinkKinesisProducer -> public FlinkKinesisProducer(final SerializationSchema<OUT> schema, Properties configProps);1495923079;Create a new FlinkKinesisProducer._This is a constructor supporting Flink's {@see SerializationSchema}.__@param schema Serialization schema for the data type_@param configProps The properties used to configure AWS credentials and AWS region;public FlinkKinesisProducer(final SerializationSchema<OUT> schema, Properties configProps) {__		_		this(new KinesisSerializationSchema<OUT>() {_			@Override_			public ByteBuffer serialize(OUT element) {_				_				return ByteBuffer.wrap(schema.serialize(element))__			}_			__			@Override_			public String getTargetStream(OUT element) {_				return null__			}_		}, configProps)__	};create,a,new,flink,kinesis,producer,this,is,a,constructor,supporting,flink,s,see,serialization,schema,param,schema,serialization,schema,for,the,data,type,param,config,props,the,properties,used,to,configure,aws,credentials,and,aws,region;public,flink,kinesis,producer,final,serialization,schema,out,schema,properties,config,props,this,new,kinesis,serialization,schema,out,override,public,byte,buffer,serialize,out,element,return,byte,buffer,wrap,schema,serialize,element,override,public,string,get,target,stream,out,element,return,null,config,props
FlinkKinesisProducer -> public FlinkKinesisProducer(final SerializationSchema<OUT> schema, Properties configProps);1504760059;Create a new FlinkKinesisProducer._This is a constructor supporting Flink's {@see SerializationSchema}.__@param schema Serialization schema for the data type_@param configProps The properties used to configure AWS credentials and AWS region;public FlinkKinesisProducer(final SerializationSchema<OUT> schema, Properties configProps) {__		_		this(new KinesisSerializationSchema<OUT>() {_			@Override_			public ByteBuffer serialize(OUT element) {_				_				return ByteBuffer.wrap(schema.serialize(element))__			}_			__			@Override_			public String getTargetStream(OUT element) {_				return null__			}_		}, configProps)__	};create,a,new,flink,kinesis,producer,this,is,a,constructor,supporting,flink,s,see,serialization,schema,param,schema,serialization,schema,for,the,data,type,param,config,props,the,properties,used,to,configure,aws,credentials,and,aws,region;public,flink,kinesis,producer,final,serialization,schema,out,schema,properties,config,props,this,new,kinesis,serialization,schema,out,override,public,byte,buffer,serialize,out,element,return,byte,buffer,wrap,schema,serialize,element,override,public,string,get,target,stream,out,element,return,null,config,props
FlinkKinesisProducer -> public FlinkKinesisProducer(final SerializationSchema<OUT> schema, Properties configProps);1504760067;Create a new FlinkKinesisProducer._This is a constructor supporting Flink's {@see SerializationSchema}.__@param schema Serialization schema for the data type_@param configProps The properties used to configure KinesisProducer, including AWS credentials and AWS region;public FlinkKinesisProducer(final SerializationSchema<OUT> schema, Properties configProps) {__		_		this(new KinesisSerializationSchema<OUT>() {_			@Override_			public ByteBuffer serialize(OUT element) {_				_				return ByteBuffer.wrap(schema.serialize(element))__			}_			__			@Override_			public String getTargetStream(OUT element) {_				return null__			}_		}, configProps)__	};create,a,new,flink,kinesis,producer,this,is,a,constructor,supporting,flink,s,see,serialization,schema,param,schema,serialization,schema,for,the,data,type,param,config,props,the,properties,used,to,configure,kinesis,producer,including,aws,credentials,and,aws,region;public,flink,kinesis,producer,final,serialization,schema,out,schema,properties,config,props,this,new,kinesis,serialization,schema,out,override,public,byte,buffer,serialize,out,element,return,byte,buffer,wrap,schema,serialize,element,override,public,string,get,target,stream,out,element,return,null,config,props
FlinkKinesisProducer -> public FlinkKinesisProducer(final SerializationSchema<OUT> schema, Properties configProps);1506073434;Create a new FlinkKinesisProducer._This is a constructor supporting Flink's {@see SerializationSchema}.__@param schema Serialization schema for the data type_@param configProps The properties used to configure KinesisProducer, including AWS credentials and AWS region;public FlinkKinesisProducer(final SerializationSchema<OUT> schema, Properties configProps) {__		_		this(new KinesisSerializationSchema<OUT>() {_			@Override_			public ByteBuffer serialize(OUT element) {_				_				return ByteBuffer.wrap(schema.serialize(element))__			}_			__			@Override_			public String getTargetStream(OUT element) {_				return null__			}_		}, configProps)__	};create,a,new,flink,kinesis,producer,this,is,a,constructor,supporting,flink,s,see,serialization,schema,param,schema,serialization,schema,for,the,data,type,param,config,props,the,properties,used,to,configure,kinesis,producer,including,aws,credentials,and,aws,region;public,flink,kinesis,producer,final,serialization,schema,out,schema,properties,config,props,this,new,kinesis,serialization,schema,out,override,public,byte,buffer,serialize,out,element,return,byte,buffer,wrap,schema,serialize,element,override,public,string,get,target,stream,out,element,return,null,config,props
FlinkKinesisProducer -> public FlinkKinesisProducer(final SerializationSchema<OUT> schema, Properties configProps);1508928742;Create a new FlinkKinesisProducer._This is a constructor supporting Flink's {@see SerializationSchema}.__@param schema Serialization schema for the data type_@param configProps The properties used to configure KinesisProducer, including AWS credentials and AWS region;public FlinkKinesisProducer(final SerializationSchema<OUT> schema, Properties configProps) {__		_		this(new KinesisSerializationSchema<OUT>() {_			@Override_			public ByteBuffer serialize(OUT element) {_				_				return ByteBuffer.wrap(schema.serialize(element))__			}_			__			@Override_			public String getTargetStream(OUT element) {_				return null__			}_		}, configProps)__	};create,a,new,flink,kinesis,producer,this,is,a,constructor,supporting,flink,s,see,serialization,schema,param,schema,serialization,schema,for,the,data,type,param,config,props,the,properties,used,to,configure,kinesis,producer,including,aws,credentials,and,aws,region;public,flink,kinesis,producer,final,serialization,schema,out,schema,properties,config,props,this,new,kinesis,serialization,schema,out,override,public,byte,buffer,serialize,out,element,return,byte,buffer,wrap,schema,serialize,element,override,public,string,get,target,stream,out,element,return,null,config,props
FlinkKinesisProducer -> public FlinkKinesisProducer(final SerializationSchema<OUT> schema, Properties configProps);1508928794;Create a new FlinkKinesisProducer._This is a constructor supporting Flink's {@see SerializationSchema}.__@param schema Serialization schema for the data type_@param configProps The properties used to configure KinesisProducer, including AWS credentials and AWS region;public FlinkKinesisProducer(final SerializationSchema<OUT> schema, Properties configProps) {__		_		this(new KinesisSerializationSchema<OUT>() {_			@Override_			public ByteBuffer serialize(OUT element) {_				_				return ByteBuffer.wrap(schema.serialize(element))__			}_			__			@Override_			public String getTargetStream(OUT element) {_				return null__			}_		}, configProps)__	};create,a,new,flink,kinesis,producer,this,is,a,constructor,supporting,flink,s,see,serialization,schema,param,schema,serialization,schema,for,the,data,type,param,config,props,the,properties,used,to,configure,kinesis,producer,including,aws,credentials,and,aws,region;public,flink,kinesis,producer,final,serialization,schema,out,schema,properties,config,props,this,new,kinesis,serialization,schema,out,override,public,byte,buffer,serialize,out,element,return,byte,buffer,wrap,schema,serialize,element,override,public,string,get,target,stream,out,element,return,null,config,props
FlinkKinesisProducer -> public FlinkKinesisProducer(final SerializationSchema<OUT> schema, Properties configProps);1511347989;Create a new FlinkKinesisProducer._This is a constructor supporting Flink's {@see SerializationSchema}.__@param schema Serialization schema for the data type_@param configProps The properties used to configure KinesisProducer, including AWS credentials and AWS region;public FlinkKinesisProducer(final SerializationSchema<OUT> schema, Properties configProps) {__		_		this(new KinesisSerializationSchema<OUT>() {_			@Override_			public ByteBuffer serialize(OUT element) {_				_				return ByteBuffer.wrap(schema.serialize(element))__			}_			__			@Override_			public String getTargetStream(OUT element) {_				return null__			}_		}, configProps)__	};create,a,new,flink,kinesis,producer,this,is,a,constructor,supporting,flink,s,see,serialization,schema,param,schema,serialization,schema,for,the,data,type,param,config,props,the,properties,used,to,configure,kinesis,producer,including,aws,credentials,and,aws,region;public,flink,kinesis,producer,final,serialization,schema,out,schema,properties,config,props,this,new,kinesis,serialization,schema,out,override,public,byte,buffer,serialize,out,element,return,byte,buffer,wrap,schema,serialize,element,override,public,string,get,target,stream,out,element,return,null,config,props
FlinkKinesisProducer -> public FlinkKinesisProducer(final SerializationSchema<OUT> schema, Properties configProps);1512029104;Create a new FlinkKinesisProducer._This is a constructor supporting Flink's {@see SerializationSchema}.__@param schema Serialization schema for the data type_@param configProps The properties used to configure KinesisProducer, including AWS credentials and AWS region;public FlinkKinesisProducer(final SerializationSchema<OUT> schema, Properties configProps) {__		_		this(new KinesisSerializationSchema<OUT>() {_			@Override_			public ByteBuffer serialize(OUT element) {_				_				return ByteBuffer.wrap(schema.serialize(element))__			}_			__			@Override_			public String getTargetStream(OUT element) {_				return null__			}_		}, configProps)__	};create,a,new,flink,kinesis,producer,this,is,a,constructor,supporting,flink,s,see,serialization,schema,param,schema,serialization,schema,for,the,data,type,param,config,props,the,properties,used,to,configure,kinesis,producer,including,aws,credentials,and,aws,region;public,flink,kinesis,producer,final,serialization,schema,out,schema,properties,config,props,this,new,kinesis,serialization,schema,out,override,public,byte,buffer,serialize,out,element,return,byte,buffer,wrap,schema,serialize,element,override,public,string,get,target,stream,out,element,return,null,config,props
FlinkKinesisProducer -> public FlinkKinesisProducer(final SerializationSchema<OUT> schema, Properties configProps);1515757408;Create a new FlinkKinesisProducer._This is a constructor supporting Flink's {@see SerializationSchema}.__@param schema Serialization schema for the data type_@param configProps The properties used to configure KinesisProducer, including AWS credentials and AWS region;public FlinkKinesisProducer(final SerializationSchema<OUT> schema, Properties configProps) {__		_		this(new KinesisSerializationSchema<OUT>() {_			@Override_			public ByteBuffer serialize(OUT element) {_				_				return ByteBuffer.wrap(schema.serialize(element))__			}_			__			@Override_			public String getTargetStream(OUT element) {_				return null__			}_		}, configProps)__	};create,a,new,flink,kinesis,producer,this,is,a,constructor,supporting,flink,s,see,serialization,schema,param,schema,serialization,schema,for,the,data,type,param,config,props,the,properties,used,to,configure,kinesis,producer,including,aws,credentials,and,aws,region;public,flink,kinesis,producer,final,serialization,schema,out,schema,properties,config,props,this,new,kinesis,serialization,schema,out,override,public,byte,buffer,serialize,out,element,return,byte,buffer,wrap,schema,serialize,element,override,public,string,get,target,stream,out,element,return,null,config,props
FlinkKinesisProducer -> public FlinkKinesisProducer(final SerializationSchema<OUT> schema, Properties configProps);1529652658;Create a new FlinkKinesisProducer._This is a constructor supporting Flink's {@see SerializationSchema}.__@param schema Serialization schema for the data type_@param configProps The properties used to configure KinesisProducer, including AWS credentials and AWS region;public FlinkKinesisProducer(final SerializationSchema<OUT> schema, Properties configProps) {__		_		this(new KinesisSerializationSchema<OUT>() {_			@Override_			public ByteBuffer serialize(OUT element) {_				_				return ByteBuffer.wrap(schema.serialize(element))__			}_			__			@Override_			public String getTargetStream(OUT element) {_				return null__			}_		}, configProps)__	};create,a,new,flink,kinesis,producer,this,is,a,constructor,supporting,flink,s,see,serialization,schema,param,schema,serialization,schema,for,the,data,type,param,config,props,the,properties,used,to,configure,kinesis,producer,including,aws,credentials,and,aws,region;public,flink,kinesis,producer,final,serialization,schema,out,schema,properties,config,props,this,new,kinesis,serialization,schema,out,override,public,byte,buffer,serialize,out,element,return,byte,buffer,wrap,schema,serialize,element,override,public,string,get,target,stream,out,element,return,null,config,props
FlinkKinesisProducer -> private void checkAndPropagateAsyncError() throws Exception;1508928742;Check if there are any asynchronous exceptions. If so, rethrow the exception.;private void checkAndPropagateAsyncError() throws Exception {_		if (thrownException != null) {_			String errorMessages = ""__			if (thrownException instanceof UserRecordFailedException) {_				List<Attempt> attempts = ((UserRecordFailedException) thrownException).getResult().getAttempts()__				for (Attempt attempt: attempts) {_					if (attempt.getErrorMessage() != null) {_						errorMessages += attempt.getErrorMessage() + "\n"__					}_				}_			}_			if (failOnError) {_				throw new RuntimeException("An exception was thrown while processing a record: " + errorMessages, thrownException)__			} else {_				LOG.warn("An exception was thrown while processing a record: {}", thrownException, errorMessages)___				_				thrownException = null__			}_		}_	};check,if,there,are,any,asynchronous,exceptions,if,so,rethrow,the,exception;private,void,check,and,propagate,async,error,throws,exception,if,thrown,exception,null,string,error,messages,if,thrown,exception,instanceof,user,record,failed,exception,list,attempt,attempts,user,record,failed,exception,thrown,exception,get,result,get,attempts,for,attempt,attempt,attempts,if,attempt,get,error,message,null,error,messages,attempt,get,error,message,n,if,fail,on,error,throw,new,runtime,exception,an,exception,was,thrown,while,processing,a,record,error,messages,thrown,exception,else,log,warn,an,exception,was,thrown,while,processing,a,record,thrown,exception,error,messages,thrown,exception,null
FlinkKinesisProducer -> private void checkAndPropagateAsyncError() throws Exception;1508928794;Check if there are any asynchronous exceptions. If so, rethrow the exception.;private void checkAndPropagateAsyncError() throws Exception {_		if (thrownException != null) {_			String errorMessages = ""__			if (thrownException instanceof UserRecordFailedException) {_				List<Attempt> attempts = ((UserRecordFailedException) thrownException).getResult().getAttempts()__				for (Attempt attempt: attempts) {_					if (attempt.getErrorMessage() != null) {_						errorMessages += attempt.getErrorMessage() + "\n"__					}_				}_			}_			if (failOnError) {_				throw new RuntimeException("An exception was thrown while processing a record: " + errorMessages, thrownException)__			} else {_				LOG.warn("An exception was thrown while processing a record: {}", thrownException, errorMessages)___				_				thrownException = null__			}_		}_	};check,if,there,are,any,asynchronous,exceptions,if,so,rethrow,the,exception;private,void,check,and,propagate,async,error,throws,exception,if,thrown,exception,null,string,error,messages,if,thrown,exception,instanceof,user,record,failed,exception,list,attempt,attempts,user,record,failed,exception,thrown,exception,get,result,get,attempts,for,attempt,attempt,attempts,if,attempt,get,error,message,null,error,messages,attempt,get,error,message,n,if,fail,on,error,throw,new,runtime,exception,an,exception,was,thrown,while,processing,a,record,error,messages,thrown,exception,else,log,warn,an,exception,was,thrown,while,processing,a,record,thrown,exception,error,messages,thrown,exception,null
FlinkKinesisProducer -> private void checkAndPropagateAsyncError() throws Exception;1511347989;Check if there are any asynchronous exceptions. If so, rethrow the exception.;private void checkAndPropagateAsyncError() throws Exception {_		if (thrownException != null) {_			String errorMessages = ""__			if (thrownException instanceof UserRecordFailedException) {_				List<Attempt> attempts = ((UserRecordFailedException) thrownException).getResult().getAttempts()__				for (Attempt attempt: attempts) {_					if (attempt.getErrorMessage() != null) {_						errorMessages += attempt.getErrorMessage() + "\n"__					}_				}_			}_			if (failOnError) {_				throw new RuntimeException("An exception was thrown while processing a record: " + errorMessages, thrownException)__			} else {_				LOG.warn("An exception was thrown while processing a record: {}", thrownException, errorMessages)___				_				thrownException = null__			}_		}_	};check,if,there,are,any,asynchronous,exceptions,if,so,rethrow,the,exception;private,void,check,and,propagate,async,error,throws,exception,if,thrown,exception,null,string,error,messages,if,thrown,exception,instanceof,user,record,failed,exception,list,attempt,attempts,user,record,failed,exception,thrown,exception,get,result,get,attempts,for,attempt,attempt,attempts,if,attempt,get,error,message,null,error,messages,attempt,get,error,message,n,if,fail,on,error,throw,new,runtime,exception,an,exception,was,thrown,while,processing,a,record,error,messages,thrown,exception,else,log,warn,an,exception,was,thrown,while,processing,a,record,thrown,exception,error,messages,thrown,exception,null
FlinkKinesisProducer -> private void checkAndPropagateAsyncError() throws Exception;1512029104;Check if there are any asynchronous exceptions. If so, rethrow the exception.;private void checkAndPropagateAsyncError() throws Exception {_		if (thrownException != null) {_			String errorMessages = ""__			if (thrownException instanceof UserRecordFailedException) {_				List<Attempt> attempts = ((UserRecordFailedException) thrownException).getResult().getAttempts()__				for (Attempt attempt: attempts) {_					if (attempt.getErrorMessage() != null) {_						errorMessages += attempt.getErrorMessage() + "\n"__					}_				}_			}_			if (failOnError) {_				throw new RuntimeException("An exception was thrown while processing a record: " + errorMessages, thrownException)__			} else {_				LOG.warn("An exception was thrown while processing a record: {}", thrownException, errorMessages)___				_				thrownException = null__			}_		}_	};check,if,there,are,any,asynchronous,exceptions,if,so,rethrow,the,exception;private,void,check,and,propagate,async,error,throws,exception,if,thrown,exception,null,string,error,messages,if,thrown,exception,instanceof,user,record,failed,exception,list,attempt,attempts,user,record,failed,exception,thrown,exception,get,result,get,attempts,for,attempt,attempt,attempts,if,attempt,get,error,message,null,error,messages,attempt,get,error,message,n,if,fail,on,error,throw,new,runtime,exception,an,exception,was,thrown,while,processing,a,record,error,messages,thrown,exception,else,log,warn,an,exception,was,thrown,while,processing,a,record,thrown,exception,error,messages,thrown,exception,null
FlinkKinesisProducer -> private void checkAndPropagateAsyncError() throws Exception;1515757408;Check if there are any asynchronous exceptions. If so, rethrow the exception.;private void checkAndPropagateAsyncError() throws Exception {_		if (thrownException != null) {_			String errorMessages = ""__			if (thrownException instanceof UserRecordFailedException) {_				List<Attempt> attempts = ((UserRecordFailedException) thrownException).getResult().getAttempts()__				for (Attempt attempt: attempts) {_					if (attempt.getErrorMessage() != null) {_						errorMessages += attempt.getErrorMessage() + "\n"__					}_				}_			}_			if (failOnError) {_				throw new RuntimeException("An exception was thrown while processing a record: " + errorMessages, thrownException)__			} else {_				LOG.warn("An exception was thrown while processing a record: {}", thrownException, errorMessages)___				_				thrownException = null__			}_		}_	};check,if,there,are,any,asynchronous,exceptions,if,so,rethrow,the,exception;private,void,check,and,propagate,async,error,throws,exception,if,thrown,exception,null,string,error,messages,if,thrown,exception,instanceof,user,record,failed,exception,list,attempt,attempts,user,record,failed,exception,thrown,exception,get,result,get,attempts,for,attempt,attempt,attempts,if,attempt,get,error,message,null,error,messages,attempt,get,error,message,n,if,fail,on,error,throw,new,runtime,exception,an,exception,was,thrown,while,processing,a,record,error,messages,thrown,exception,else,log,warn,an,exception,was,thrown,while,processing,a,record,thrown,exception,error,messages,thrown,exception,null
FlinkKinesisProducer -> private void checkAndPropagateAsyncError() throws Exception;1529652658;Check if there are any asynchronous exceptions. If so, rethrow the exception.;private void checkAndPropagateAsyncError() throws Exception {_		if (thrownException != null) {_			String errorMessages = ""__			if (thrownException instanceof UserRecordFailedException) {_				List<Attempt> attempts = ((UserRecordFailedException) thrownException).getResult().getAttempts()__				for (Attempt attempt: attempts) {_					if (attempt.getErrorMessage() != null) {_						errorMessages += attempt.getErrorMessage() + "\n"__					}_				}_			}_			if (failOnError) {_				throw new RuntimeException("An exception was thrown while processing a record: " + errorMessages, thrownException)__			} else {_				LOG.warn("An exception was thrown while processing a record: {}", thrownException, errorMessages)___				_				thrownException = null__			}_		}_	};check,if,there,are,any,asynchronous,exceptions,if,so,rethrow,the,exception;private,void,check,and,propagate,async,error,throws,exception,if,thrown,exception,null,string,error,messages,if,thrown,exception,instanceof,user,record,failed,exception,list,attempt,attempts,user,record,failed,exception,thrown,exception,get,result,get,attempts,for,attempt,attempt,attempts,if,attempt,get,error,message,null,error,messages,attempt,get,error,message,n,if,fail,on,error,throw,new,runtime,exception,an,exception,was,thrown,while,processing,a,record,error,messages,thrown,exception,else,log,warn,an,exception,was,thrown,while,processing,a,record,thrown,exception,error,messages,thrown,exception,null
FlinkKinesisProducer -> public void setDefaultStream(String defaultStream);1480685315;Set a default stream name._@param defaultStream Name of the default Kinesis stream;public void setDefaultStream(String defaultStream) {_		this.defaultStream = defaultStream__	};set,a,default,stream,name,param,default,stream,name,of,the,default,kinesis,stream;public,void,set,default,stream,string,default,stream,this,default,stream,default,stream
FlinkKinesisProducer -> public void setDefaultStream(String defaultStream);1495923079;Set a default stream name._@param defaultStream Name of the default Kinesis stream;public void setDefaultStream(String defaultStream) {_		this.defaultStream = defaultStream__	};set,a,default,stream,name,param,default,stream,name,of,the,default,kinesis,stream;public,void,set,default,stream,string,default,stream,this,default,stream,default,stream
FlinkKinesisProducer -> public void setDefaultStream(String defaultStream);1504760059;Set a default stream name._@param defaultStream Name of the default Kinesis stream;public void setDefaultStream(String defaultStream) {_		this.defaultStream = defaultStream__	};set,a,default,stream,name,param,default,stream,name,of,the,default,kinesis,stream;public,void,set,default,stream,string,default,stream,this,default,stream,default,stream
FlinkKinesisProducer -> public void setDefaultStream(String defaultStream);1504760067;Set a default stream name._@param defaultStream Name of the default Kinesis stream;public void setDefaultStream(String defaultStream) {_		this.defaultStream = defaultStream__	};set,a,default,stream,name,param,default,stream,name,of,the,default,kinesis,stream;public,void,set,default,stream,string,default,stream,this,default,stream,default,stream
FlinkKinesisProducer -> public void setDefaultStream(String defaultStream);1506073434;Set a default stream name._@param defaultStream Name of the default Kinesis stream;public void setDefaultStream(String defaultStream) {_		this.defaultStream = defaultStream__	};set,a,default,stream,name,param,default,stream,name,of,the,default,kinesis,stream;public,void,set,default,stream,string,default,stream,this,default,stream,default,stream
FlinkKinesisProducer -> public void setDefaultStream(String defaultStream);1508928742;Set a default stream name._@param defaultStream Name of the default Kinesis stream;public void setDefaultStream(String defaultStream) {_		this.defaultStream = defaultStream__	};set,a,default,stream,name,param,default,stream,name,of,the,default,kinesis,stream;public,void,set,default,stream,string,default,stream,this,default,stream,default,stream
FlinkKinesisProducer -> public void setDefaultStream(String defaultStream);1508928794;Set a default stream name._@param defaultStream Name of the default Kinesis stream;public void setDefaultStream(String defaultStream) {_		this.defaultStream = defaultStream__	};set,a,default,stream,name,param,default,stream,name,of,the,default,kinesis,stream;public,void,set,default,stream,string,default,stream,this,default,stream,default,stream
FlinkKinesisProducer -> public void setDefaultStream(String defaultStream);1511347989;Set a default stream name._@param defaultStream Name of the default Kinesis stream;public void setDefaultStream(String defaultStream) {_		this.defaultStream = defaultStream__	};set,a,default,stream,name,param,default,stream,name,of,the,default,kinesis,stream;public,void,set,default,stream,string,default,stream,this,default,stream,default,stream
FlinkKinesisProducer -> public void setDefaultStream(String defaultStream);1512029104;Set a default stream name._@param defaultStream Name of the default Kinesis stream;public void setDefaultStream(String defaultStream) {_		this.defaultStream = defaultStream__	};set,a,default,stream,name,param,default,stream,name,of,the,default,kinesis,stream;public,void,set,default,stream,string,default,stream,this,default,stream,default,stream
FlinkKinesisProducer -> public void setDefaultStream(String defaultStream);1515757408;Set a default stream name._@param defaultStream Name of the default Kinesis stream;public void setDefaultStream(String defaultStream) {_		this.defaultStream = defaultStream__	};set,a,default,stream,name,param,default,stream,name,of,the,default,kinesis,stream;public,void,set,default,stream,string,default,stream,this,default,stream,default,stream
FlinkKinesisProducer -> public void setDefaultStream(String defaultStream);1529652658;Set a default stream name._@param defaultStream Name of the default Kinesis stream;public void setDefaultStream(String defaultStream) {_		this.defaultStream = defaultStream__	};set,a,default,stream,name,param,default,stream,name,of,the,default,kinesis,stream;public,void,set,default,stream,string,default,stream,this,default,stream,default,stream
FlinkKinesisProducer -> public void setDefaultPartition(String defaultPartition);1480685315;Set default partition id_@param defaultPartition Name of the default partition;public void setDefaultPartition(String defaultPartition) {_		this.defaultPartition = defaultPartition__	};set,default,partition,id,param,default,partition,name,of,the,default,partition;public,void,set,default,partition,string,default,partition,this,default,partition,default,partition
FlinkKinesisProducer -> public void setDefaultPartition(String defaultPartition);1495923079;Set default partition id._@param defaultPartition Name of the default partition;public void setDefaultPartition(String defaultPartition) {_		this.defaultPartition = defaultPartition__	};set,default,partition,id,param,default,partition,name,of,the,default,partition;public,void,set,default,partition,string,default,partition,this,default,partition,default,partition
FlinkKinesisProducer -> public void setDefaultPartition(String defaultPartition);1504760059;Set default partition id._@param defaultPartition Name of the default partition;public void setDefaultPartition(String defaultPartition) {_		this.defaultPartition = defaultPartition__	};set,default,partition,id,param,default,partition,name,of,the,default,partition;public,void,set,default,partition,string,default,partition,this,default,partition,default,partition
FlinkKinesisProducer -> public void setDefaultPartition(String defaultPartition);1504760067;Set default partition id._@param defaultPartition Name of the default partition;public void setDefaultPartition(String defaultPartition) {_		this.defaultPartition = defaultPartition__	};set,default,partition,id,param,default,partition,name,of,the,default,partition;public,void,set,default,partition,string,default,partition,this,default,partition,default,partition
FlinkKinesisProducer -> public void setDefaultPartition(String defaultPartition);1506073434;Set default partition id._@param defaultPartition Name of the default partition;public void setDefaultPartition(String defaultPartition) {_		this.defaultPartition = defaultPartition__	};set,default,partition,id,param,default,partition,name,of,the,default,partition;public,void,set,default,partition,string,default,partition,this,default,partition,default,partition
FlinkKinesisProducer -> public void setDefaultPartition(String defaultPartition);1508928742;Set default partition id._@param defaultPartition Name of the default partition;public void setDefaultPartition(String defaultPartition) {_		this.defaultPartition = defaultPartition__	};set,default,partition,id,param,default,partition,name,of,the,default,partition;public,void,set,default,partition,string,default,partition,this,default,partition,default,partition
FlinkKinesisProducer -> public void setDefaultPartition(String defaultPartition);1508928794;Set default partition id._@param defaultPartition Name of the default partition;public void setDefaultPartition(String defaultPartition) {_		this.defaultPartition = defaultPartition__	};set,default,partition,id,param,default,partition,name,of,the,default,partition;public,void,set,default,partition,string,default,partition,this,default,partition,default,partition
FlinkKinesisProducer -> public void setDefaultPartition(String defaultPartition);1511347989;Set default partition id._@param defaultPartition Name of the default partition;public void setDefaultPartition(String defaultPartition) {_		this.defaultPartition = defaultPartition__	};set,default,partition,id,param,default,partition,name,of,the,default,partition;public,void,set,default,partition,string,default,partition,this,default,partition,default,partition
FlinkKinesisProducer -> public void setDefaultPartition(String defaultPartition);1512029104;Set default partition id._@param defaultPartition Name of the default partition;public void setDefaultPartition(String defaultPartition) {_		this.defaultPartition = defaultPartition__	};set,default,partition,id,param,default,partition,name,of,the,default,partition;public,void,set,default,partition,string,default,partition,this,default,partition,default,partition
FlinkKinesisProducer -> public void setDefaultPartition(String defaultPartition);1515757408;Set default partition id._@param defaultPartition Name of the default partition;public void setDefaultPartition(String defaultPartition) {_		this.defaultPartition = defaultPartition__	};set,default,partition,id,param,default,partition,name,of,the,default,partition;public,void,set,default,partition,string,default,partition,this,default,partition,default,partition
FlinkKinesisProducer -> public void setDefaultPartition(String defaultPartition);1529652658;Set default partition id._@param defaultPartition Name of the default partition;public void setDefaultPartition(String defaultPartition) {_		this.defaultPartition = defaultPartition__	};set,default,partition,id,param,default,partition,name,of,the,default,partition;public,void,set,default,partition,string,default,partition,this,default,partition,default,partition
FlinkKinesisProducer -> public FlinkKinesisProducer(KinesisSerializationSchema<OUT> schema, Properties configProps);1480685315;Create a new FlinkKinesisProducer._This is a constructor supporting {@see KinesisSerializationSchema}.__@param schema Kinesis serialization schema for the data type_@param configProps The properties used to configure AWS credentials and AWS region;public FlinkKinesisProducer(KinesisSerializationSchema<OUT> schema, Properties configProps) {_		this.configProps = checkNotNull(configProps, "configProps can not be null")___		_		KinesisConfigUtil.validateProducerConfiguration(this.configProps)___		ClosureCleaner.ensureSerializable(Objects.requireNonNull(schema))__		this.schema = schema__	};create,a,new,flink,kinesis,producer,this,is,a,constructor,supporting,see,kinesis,serialization,schema,param,schema,kinesis,serialization,schema,for,the,data,type,param,config,props,the,properties,used,to,configure,aws,credentials,and,aws,region;public,flink,kinesis,producer,kinesis,serialization,schema,out,schema,properties,config,props,this,config,props,check,not,null,config,props,config,props,can,not,be,null,kinesis,config,util,validate,producer,configuration,this,config,props,closure,cleaner,ensure,serializable,objects,require,non,null,schema,this,schema,schema
FlinkKinesisProducer -> public FlinkKinesisProducer(KinesisSerializationSchema<OUT> schema, Properties configProps);1495923079;Create a new FlinkKinesisProducer._This is a constructor supporting {@see KinesisSerializationSchema}.__@param schema Kinesis serialization schema for the data type_@param configProps The properties used to configure AWS credentials and AWS region;public FlinkKinesisProducer(KinesisSerializationSchema<OUT> schema, Properties configProps) {_		this.configProps = checkNotNull(configProps, "configProps can not be null")___		_		KinesisConfigUtil.validateProducerConfiguration(this.configProps)___		ClosureCleaner.ensureSerializable(Objects.requireNonNull(schema))__		this.schema = schema__	};create,a,new,flink,kinesis,producer,this,is,a,constructor,supporting,see,kinesis,serialization,schema,param,schema,kinesis,serialization,schema,for,the,data,type,param,config,props,the,properties,used,to,configure,aws,credentials,and,aws,region;public,flink,kinesis,producer,kinesis,serialization,schema,out,schema,properties,config,props,this,config,props,check,not,null,config,props,config,props,can,not,be,null,kinesis,config,util,validate,producer,configuration,this,config,props,closure,cleaner,ensure,serializable,objects,require,non,null,schema,this,schema,schema
FlinkKinesisProducer -> public FlinkKinesisProducer(KinesisSerializationSchema<OUT> schema, Properties configProps);1504760059;Create a new FlinkKinesisProducer._This is a constructor supporting {@see KinesisSerializationSchema}.__@param schema Kinesis serialization schema for the data type_@param configProps The properties used to configure AWS credentials and AWS region;public FlinkKinesisProducer(KinesisSerializationSchema<OUT> schema, Properties configProps) {_		this.configProps = checkNotNull(configProps, "configProps can not be null")___		_		KinesisConfigUtil.validateProducerConfiguration(this.configProps)___		checkNotNull(schema, "serialization schema cannot be null")__		checkArgument(_			InstantiationUtil.isSerializable(schema),_			"The provided serialization schema is not serializable: " + schema.getClass().getName() + ". " +_				"Please check that it does not contain references to non-serializable instances.")__		this.schema = schema__	};create,a,new,flink,kinesis,producer,this,is,a,constructor,supporting,see,kinesis,serialization,schema,param,schema,kinesis,serialization,schema,for,the,data,type,param,config,props,the,properties,used,to,configure,aws,credentials,and,aws,region;public,flink,kinesis,producer,kinesis,serialization,schema,out,schema,properties,config,props,this,config,props,check,not,null,config,props,config,props,can,not,be,null,kinesis,config,util,validate,producer,configuration,this,config,props,check,not,null,schema,serialization,schema,cannot,be,null,check,argument,instantiation,util,is,serializable,schema,the,provided,serialization,schema,is,not,serializable,schema,get,class,get,name,please,check,that,it,does,not,contain,references,to,non,serializable,instances,this,schema,schema
FlinkKinesisProducer -> public FlinkKinesisProducer(KinesisSerializationSchema<OUT> schema, Properties configProps);1504760067;Create a new FlinkKinesisProducer._This is a constructor supporting {@see KinesisSerializationSchema}.__@param schema Kinesis serialization schema for the data type_@param configProps The properties used to configure KinesisProducer, including AWS credentials and AWS region;public FlinkKinesisProducer(KinesisSerializationSchema<OUT> schema, Properties configProps) {_		checkNotNull(configProps, "configProps can not be null")__		this.configProps = KinesisConfigUtil.replaceDeprecatedProducerKeys(configProps)___		checkNotNull(schema, "serialization schema cannot be null")__		checkArgument(_			InstantiationUtil.isSerializable(schema),_			"The provided serialization schema is not serializable: " + schema.getClass().getName() + ". " +_				"Please check that it does not contain references to non-serializable instances.")__		this.schema = schema__	};create,a,new,flink,kinesis,producer,this,is,a,constructor,supporting,see,kinesis,serialization,schema,param,schema,kinesis,serialization,schema,for,the,data,type,param,config,props,the,properties,used,to,configure,kinesis,producer,including,aws,credentials,and,aws,region;public,flink,kinesis,producer,kinesis,serialization,schema,out,schema,properties,config,props,check,not,null,config,props,config,props,can,not,be,null,this,config,props,kinesis,config,util,replace,deprecated,producer,keys,config,props,check,not,null,schema,serialization,schema,cannot,be,null,check,argument,instantiation,util,is,serializable,schema,the,provided,serialization,schema,is,not,serializable,schema,get,class,get,name,please,check,that,it,does,not,contain,references,to,non,serializable,instances,this,schema,schema
FlinkKinesisProducer -> public FlinkKinesisProducer(KinesisSerializationSchema<OUT> schema, Properties configProps);1506073434;Create a new FlinkKinesisProducer._This is a constructor supporting {@see KinesisSerializationSchema}.__@param schema Kinesis serialization schema for the data type_@param configProps The properties used to configure KinesisProducer, including AWS credentials and AWS region;public FlinkKinesisProducer(KinesisSerializationSchema<OUT> schema, Properties configProps) {_		checkNotNull(configProps, "configProps can not be null")__		this.configProps = KinesisConfigUtil.replaceDeprecatedProducerKeys(configProps)___		checkNotNull(schema, "serialization schema cannot be null")__		checkArgument(_			InstantiationUtil.isSerializable(schema),_			"The provided serialization schema is not serializable: " + schema.getClass().getName() + ". " +_				"Please check that it does not contain references to non-serializable instances.")__		this.schema = schema__	};create,a,new,flink,kinesis,producer,this,is,a,constructor,supporting,see,kinesis,serialization,schema,param,schema,kinesis,serialization,schema,for,the,data,type,param,config,props,the,properties,used,to,configure,kinesis,producer,including,aws,credentials,and,aws,region;public,flink,kinesis,producer,kinesis,serialization,schema,out,schema,properties,config,props,check,not,null,config,props,config,props,can,not,be,null,this,config,props,kinesis,config,util,replace,deprecated,producer,keys,config,props,check,not,null,schema,serialization,schema,cannot,be,null,check,argument,instantiation,util,is,serializable,schema,the,provided,serialization,schema,is,not,serializable,schema,get,class,get,name,please,check,that,it,does,not,contain,references,to,non,serializable,instances,this,schema,schema
FlinkKinesisProducer -> public FlinkKinesisProducer(KinesisSerializationSchema<OUT> schema, Properties configProps);1508928742;Create a new FlinkKinesisProducer._This is a constructor supporting {@see KinesisSerializationSchema}.__@param schema Kinesis serialization schema for the data type_@param configProps The properties used to configure KinesisProducer, including AWS credentials and AWS region;public FlinkKinesisProducer(KinesisSerializationSchema<OUT> schema, Properties configProps) {_		checkNotNull(configProps, "configProps can not be null")__		this.configProps = KinesisConfigUtil.replaceDeprecatedProducerKeys(configProps)___		checkNotNull(schema, "serialization schema cannot be null")__		checkArgument(_			InstantiationUtil.isSerializable(schema),_			"The provided serialization schema is not serializable: " + schema.getClass().getName() + ". " +_				"Please check that it does not contain references to non-serializable instances.")__		this.schema = schema__	};create,a,new,flink,kinesis,producer,this,is,a,constructor,supporting,see,kinesis,serialization,schema,param,schema,kinesis,serialization,schema,for,the,data,type,param,config,props,the,properties,used,to,configure,kinesis,producer,including,aws,credentials,and,aws,region;public,flink,kinesis,producer,kinesis,serialization,schema,out,schema,properties,config,props,check,not,null,config,props,config,props,can,not,be,null,this,config,props,kinesis,config,util,replace,deprecated,producer,keys,config,props,check,not,null,schema,serialization,schema,cannot,be,null,check,argument,instantiation,util,is,serializable,schema,the,provided,serialization,schema,is,not,serializable,schema,get,class,get,name,please,check,that,it,does,not,contain,references,to,non,serializable,instances,this,schema,schema
FlinkKinesisProducer -> public FlinkKinesisProducer(KinesisSerializationSchema<OUT> schema, Properties configProps);1508928794;Create a new FlinkKinesisProducer._This is a constructor supporting {@see KinesisSerializationSchema}.__@param schema Kinesis serialization schema for the data type_@param configProps The properties used to configure KinesisProducer, including AWS credentials and AWS region;public FlinkKinesisProducer(KinesisSerializationSchema<OUT> schema, Properties configProps) {_		checkNotNull(configProps, "configProps can not be null")__		this.configProps = KinesisConfigUtil.replaceDeprecatedProducerKeys(configProps)___		checkNotNull(schema, "serialization schema cannot be null")__		checkArgument(_			InstantiationUtil.isSerializable(schema),_			"The provided serialization schema is not serializable: " + schema.getClass().getName() + ". " +_				"Please check that it does not contain references to non-serializable instances.")__		this.schema = schema__	};create,a,new,flink,kinesis,producer,this,is,a,constructor,supporting,see,kinesis,serialization,schema,param,schema,kinesis,serialization,schema,for,the,data,type,param,config,props,the,properties,used,to,configure,kinesis,producer,including,aws,credentials,and,aws,region;public,flink,kinesis,producer,kinesis,serialization,schema,out,schema,properties,config,props,check,not,null,config,props,config,props,can,not,be,null,this,config,props,kinesis,config,util,replace,deprecated,producer,keys,config,props,check,not,null,schema,serialization,schema,cannot,be,null,check,argument,instantiation,util,is,serializable,schema,the,provided,serialization,schema,is,not,serializable,schema,get,class,get,name,please,check,that,it,does,not,contain,references,to,non,serializable,instances,this,schema,schema
FlinkKinesisProducer -> public FlinkKinesisProducer(KinesisSerializationSchema<OUT> schema, Properties configProps);1511347989;Create a new FlinkKinesisProducer._This is a constructor supporting {@see KinesisSerializationSchema}.__@param schema Kinesis serialization schema for the data type_@param configProps The properties used to configure KinesisProducer, including AWS credentials and AWS region;public FlinkKinesisProducer(KinesisSerializationSchema<OUT> schema, Properties configProps) {_		checkNotNull(configProps, "configProps can not be null")__		this.configProps = KinesisConfigUtil.replaceDeprecatedProducerKeys(configProps)___		checkNotNull(schema, "serialization schema cannot be null")__		checkArgument(_			InstantiationUtil.isSerializable(schema),_			"The provided serialization schema is not serializable: " + schema.getClass().getName() + ". " +_				"Please check that it does not contain references to non-serializable instances.")__		this.schema = schema__	};create,a,new,flink,kinesis,producer,this,is,a,constructor,supporting,see,kinesis,serialization,schema,param,schema,kinesis,serialization,schema,for,the,data,type,param,config,props,the,properties,used,to,configure,kinesis,producer,including,aws,credentials,and,aws,region;public,flink,kinesis,producer,kinesis,serialization,schema,out,schema,properties,config,props,check,not,null,config,props,config,props,can,not,be,null,this,config,props,kinesis,config,util,replace,deprecated,producer,keys,config,props,check,not,null,schema,serialization,schema,cannot,be,null,check,argument,instantiation,util,is,serializable,schema,the,provided,serialization,schema,is,not,serializable,schema,get,class,get,name,please,check,that,it,does,not,contain,references,to,non,serializable,instances,this,schema,schema
FlinkKinesisProducer -> public FlinkKinesisProducer(KinesisSerializationSchema<OUT> schema, Properties configProps);1512029104;Create a new FlinkKinesisProducer._This is a constructor supporting {@see KinesisSerializationSchema}.__@param schema Kinesis serialization schema for the data type_@param configProps The properties used to configure KinesisProducer, including AWS credentials and AWS region;public FlinkKinesisProducer(KinesisSerializationSchema<OUT> schema, Properties configProps) {_		checkNotNull(configProps, "configProps can not be null")__		this.configProps = KinesisConfigUtil.replaceDeprecatedProducerKeys(configProps)___		checkNotNull(schema, "serialization schema cannot be null")__		checkArgument(_			InstantiationUtil.isSerializable(schema),_			"The provided serialization schema is not serializable: " + schema.getClass().getName() + ". " +_				"Please check that it does not contain references to non-serializable instances.")__		this.schema = schema__	};create,a,new,flink,kinesis,producer,this,is,a,constructor,supporting,see,kinesis,serialization,schema,param,schema,kinesis,serialization,schema,for,the,data,type,param,config,props,the,properties,used,to,configure,kinesis,producer,including,aws,credentials,and,aws,region;public,flink,kinesis,producer,kinesis,serialization,schema,out,schema,properties,config,props,check,not,null,config,props,config,props,can,not,be,null,this,config,props,kinesis,config,util,replace,deprecated,producer,keys,config,props,check,not,null,schema,serialization,schema,cannot,be,null,check,argument,instantiation,util,is,serializable,schema,the,provided,serialization,schema,is,not,serializable,schema,get,class,get,name,please,check,that,it,does,not,contain,references,to,non,serializable,instances,this,schema,schema
FlinkKinesisProducer -> public FlinkKinesisProducer(KinesisSerializationSchema<OUT> schema, Properties configProps);1515757408;Create a new FlinkKinesisProducer._This is a constructor supporting {@see KinesisSerializationSchema}.__@param schema Kinesis serialization schema for the data type_@param configProps The properties used to configure KinesisProducer, including AWS credentials and AWS region;public FlinkKinesisProducer(KinesisSerializationSchema<OUT> schema, Properties configProps) {_		checkNotNull(configProps, "configProps can not be null")__		this.configProps = KinesisConfigUtil.replaceDeprecatedProducerKeys(configProps)___		checkNotNull(schema, "serialization schema cannot be null")__		checkArgument(_			InstantiationUtil.isSerializable(schema),_			"The provided serialization schema is not serializable: " + schema.getClass().getName() + ". " +_				"Please check that it does not contain references to non-serializable instances.")__		this.schema = schema__	};create,a,new,flink,kinesis,producer,this,is,a,constructor,supporting,see,kinesis,serialization,schema,param,schema,kinesis,serialization,schema,for,the,data,type,param,config,props,the,properties,used,to,configure,kinesis,producer,including,aws,credentials,and,aws,region;public,flink,kinesis,producer,kinesis,serialization,schema,out,schema,properties,config,props,check,not,null,config,props,config,props,can,not,be,null,this,config,props,kinesis,config,util,replace,deprecated,producer,keys,config,props,check,not,null,schema,serialization,schema,cannot,be,null,check,argument,instantiation,util,is,serializable,schema,the,provided,serialization,schema,is,not,serializable,schema,get,class,get,name,please,check,that,it,does,not,contain,references,to,non,serializable,instances,this,schema,schema
FlinkKinesisProducer -> public FlinkKinesisProducer(KinesisSerializationSchema<OUT> schema, Properties configProps);1529652658;Create a new FlinkKinesisProducer._This is a constructor supporting {@see KinesisSerializationSchema}.__@param schema Kinesis serialization schema for the data type_@param configProps The properties used to configure KinesisProducer, including AWS credentials and AWS region;public FlinkKinesisProducer(KinesisSerializationSchema<OUT> schema, Properties configProps) {_		checkNotNull(configProps, "configProps can not be null")__		this.configProps = KinesisConfigUtil.replaceDeprecatedProducerKeys(configProps)___		checkNotNull(schema, "serialization schema cannot be null")__		checkArgument(_			InstantiationUtil.isSerializable(schema),_			"The provided serialization schema is not serializable: " + schema.getClass().getName() + ". " +_				"Please check that it does not contain references to non-serializable instances.")__		this.schema = schema__	};create,a,new,flink,kinesis,producer,this,is,a,constructor,supporting,see,kinesis,serialization,schema,param,schema,kinesis,serialization,schema,for,the,data,type,param,config,props,the,properties,used,to,configure,kinesis,producer,including,aws,credentials,and,aws,region;public,flink,kinesis,producer,kinesis,serialization,schema,out,schema,properties,config,props,check,not,null,config,props,config,props,can,not,be,null,this,config,props,kinesis,config,util,replace,deprecated,producer,keys,config,props,check,not,null,schema,serialization,schema,cannot,be,null,check,argument,instantiation,util,is,serializable,schema,the,provided,serialization,schema,is,not,serializable,schema,get,class,get,name,please,check,that,it,does,not,contain,references,to,non,serializable,instances,this,schema,schema
FlinkKinesisProducer -> @VisibleForTesting 	protected KinesisProducer getKinesisProducer(KinesisProducerConfiguration producerConfig);1508928742;Creates a {@link KinesisProducer}._Exposed so that tests can inject mock producers easily.;@VisibleForTesting_	protected KinesisProducer getKinesisProducer(KinesisProducerConfiguration producerConfig) {_		return new KinesisProducer(producerConfig)__	};creates,a,link,kinesis,producer,exposed,so,that,tests,can,inject,mock,producers,easily;visible,for,testing,protected,kinesis,producer,get,kinesis,producer,kinesis,producer,configuration,producer,config,return,new,kinesis,producer,producer,config
FlinkKinesisProducer -> @VisibleForTesting 	protected KinesisProducer getKinesisProducer(KinesisProducerConfiguration producerConfig);1508928794;Creates a {@link KinesisProducer}._Exposed so that tests can inject mock producers easily.;@VisibleForTesting_	protected KinesisProducer getKinesisProducer(KinesisProducerConfiguration producerConfig) {_		return new KinesisProducer(producerConfig)__	};creates,a,link,kinesis,producer,exposed,so,that,tests,can,inject,mock,producers,easily;visible,for,testing,protected,kinesis,producer,get,kinesis,producer,kinesis,producer,configuration,producer,config,return,new,kinesis,producer,producer,config
FlinkKinesisProducer -> @VisibleForTesting 	protected KinesisProducer getKinesisProducer(KinesisProducerConfiguration producerConfig);1511347989;Creates a {@link KinesisProducer}._Exposed so that tests can inject mock producers easily.;@VisibleForTesting_	protected KinesisProducer getKinesisProducer(KinesisProducerConfiguration producerConfig) {_		return new KinesisProducer(producerConfig)__	};creates,a,link,kinesis,producer,exposed,so,that,tests,can,inject,mock,producers,easily;visible,for,testing,protected,kinesis,producer,get,kinesis,producer,kinesis,producer,configuration,producer,config,return,new,kinesis,producer,producer,config
FlinkKinesisProducer -> @VisibleForTesting 	protected KinesisProducer getKinesisProducer(KinesisProducerConfiguration producerConfig);1512029104;Creates a {@link KinesisProducer}._Exposed so that tests can inject mock producers easily.;@VisibleForTesting_	protected KinesisProducer getKinesisProducer(KinesisProducerConfiguration producerConfig) {_		return new KinesisProducer(producerConfig)__	};creates,a,link,kinesis,producer,exposed,so,that,tests,can,inject,mock,producers,easily;visible,for,testing,protected,kinesis,producer,get,kinesis,producer,kinesis,producer,configuration,producer,config,return,new,kinesis,producer,producer,config
FlinkKinesisProducer -> @VisibleForTesting 	protected KinesisProducer getKinesisProducer(KinesisProducerConfiguration producerConfig);1515757408;Creates a {@link KinesisProducer}._Exposed so that tests can inject mock producers easily.;@VisibleForTesting_	protected KinesisProducer getKinesisProducer(KinesisProducerConfiguration producerConfig) {_		return new KinesisProducer(producerConfig)__	};creates,a,link,kinesis,producer,exposed,so,that,tests,can,inject,mock,producers,easily;visible,for,testing,protected,kinesis,producer,get,kinesis,producer,kinesis,producer,configuration,producer,config,return,new,kinesis,producer,producer,config
FlinkKinesisProducer -> @VisibleForTesting 	protected KinesisProducer getKinesisProducer(KinesisProducerConfiguration producerConfig);1529652658;Creates a {@link KinesisProducer}._Exposed so that tests can inject mock producers easily.;@VisibleForTesting_	protected KinesisProducer getKinesisProducer(KinesisProducerConfiguration producerConfig) {_		return new KinesisProducer(producerConfig)__	};creates,a,link,kinesis,producer,exposed,so,that,tests,can,inject,mock,producers,easily;visible,for,testing,protected,kinesis,producer,get,kinesis,producer,kinesis,producer,configuration,producer,config,return,new,kinesis,producer,producer,config
FlinkKinesisProducer -> public void setFailOnError(boolean failOnError);1480685315;If set to true, the producer will immediately fail with an exception on any error._Otherwise, the errors are logged and the producer goes on.__@param failOnError Error behavior flag;public void setFailOnError(boolean failOnError) {_		this.failOnError = failOnError__	};if,set,to,true,the,producer,will,immediately,fail,with,an,exception,on,any,error,otherwise,the,errors,are,logged,and,the,producer,goes,on,param,fail,on,error,error,behavior,flag;public,void,set,fail,on,error,boolean,fail,on,error,this,fail,on,error,fail,on,error
FlinkKinesisProducer -> public void setFailOnError(boolean failOnError);1495923079;If set to true, the producer will immediately fail with an exception on any error._Otherwise, the errors are logged and the producer goes on.__@param failOnError Error behavior flag;public void setFailOnError(boolean failOnError) {_		this.failOnError = failOnError__	};if,set,to,true,the,producer,will,immediately,fail,with,an,exception,on,any,error,otherwise,the,errors,are,logged,and,the,producer,goes,on,param,fail,on,error,error,behavior,flag;public,void,set,fail,on,error,boolean,fail,on,error,this,fail,on,error,fail,on,error
FlinkKinesisProducer -> public void setFailOnError(boolean failOnError);1504760059;If set to true, the producer will immediately fail with an exception on any error._Otherwise, the errors are logged and the producer goes on.__@param failOnError Error behavior flag;public void setFailOnError(boolean failOnError) {_		this.failOnError = failOnError__	};if,set,to,true,the,producer,will,immediately,fail,with,an,exception,on,any,error,otherwise,the,errors,are,logged,and,the,producer,goes,on,param,fail,on,error,error,behavior,flag;public,void,set,fail,on,error,boolean,fail,on,error,this,fail,on,error,fail,on,error
FlinkKinesisProducer -> public void setFailOnError(boolean failOnError);1504760067;If set to true, the producer will immediately fail with an exception on any error._Otherwise, the errors are logged and the producer goes on.__@param failOnError Error behavior flag;public void setFailOnError(boolean failOnError) {_		this.failOnError = failOnError__	};if,set,to,true,the,producer,will,immediately,fail,with,an,exception,on,any,error,otherwise,the,errors,are,logged,and,the,producer,goes,on,param,fail,on,error,error,behavior,flag;public,void,set,fail,on,error,boolean,fail,on,error,this,fail,on,error,fail,on,error
FlinkKinesisProducer -> public void setFailOnError(boolean failOnError);1506073434;If set to true, the producer will immediately fail with an exception on any error._Otherwise, the errors are logged and the producer goes on.__@param failOnError Error behavior flag;public void setFailOnError(boolean failOnError) {_		this.failOnError = failOnError__	};if,set,to,true,the,producer,will,immediately,fail,with,an,exception,on,any,error,otherwise,the,errors,are,logged,and,the,producer,goes,on,param,fail,on,error,error,behavior,flag;public,void,set,fail,on,error,boolean,fail,on,error,this,fail,on,error,fail,on,error
FlinkKinesisProducer -> public void setFailOnError(boolean failOnError);1508928742;If set to true, the producer will immediately fail with an exception on any error._Otherwise, the errors are logged and the producer goes on.__@param failOnError Error behavior flag;public void setFailOnError(boolean failOnError) {_		this.failOnError = failOnError__	};if,set,to,true,the,producer,will,immediately,fail,with,an,exception,on,any,error,otherwise,the,errors,are,logged,and,the,producer,goes,on,param,fail,on,error,error,behavior,flag;public,void,set,fail,on,error,boolean,fail,on,error,this,fail,on,error,fail,on,error
FlinkKinesisProducer -> public void setFailOnError(boolean failOnError);1508928794;If set to true, the producer will immediately fail with an exception on any error._Otherwise, the errors are logged and the producer goes on.__@param failOnError Error behavior flag;public void setFailOnError(boolean failOnError) {_		this.failOnError = failOnError__	};if,set,to,true,the,producer,will,immediately,fail,with,an,exception,on,any,error,otherwise,the,errors,are,logged,and,the,producer,goes,on,param,fail,on,error,error,behavior,flag;public,void,set,fail,on,error,boolean,fail,on,error,this,fail,on,error,fail,on,error
FlinkKinesisProducer -> public void setFailOnError(boolean failOnError);1511347989;If set to true, the producer will immediately fail with an exception on any error._Otherwise, the errors are logged and the producer goes on.__@param failOnError Error behavior flag;public void setFailOnError(boolean failOnError) {_		this.failOnError = failOnError__	};if,set,to,true,the,producer,will,immediately,fail,with,an,exception,on,any,error,otherwise,the,errors,are,logged,and,the,producer,goes,on,param,fail,on,error,error,behavior,flag;public,void,set,fail,on,error,boolean,fail,on,error,this,fail,on,error,fail,on,error
FlinkKinesisProducer -> public void setFailOnError(boolean failOnError);1512029104;If set to true, the producer will immediately fail with an exception on any error._Otherwise, the errors are logged and the producer goes on.__@param failOnError Error behavior flag;public void setFailOnError(boolean failOnError) {_		this.failOnError = failOnError__	};if,set,to,true,the,producer,will,immediately,fail,with,an,exception,on,any,error,otherwise,the,errors,are,logged,and,the,producer,goes,on,param,fail,on,error,error,behavior,flag;public,void,set,fail,on,error,boolean,fail,on,error,this,fail,on,error,fail,on,error
FlinkKinesisProducer -> public void setFailOnError(boolean failOnError);1515757408;If set to true, the producer will immediately fail with an exception on any error._Otherwise, the errors are logged and the producer goes on.__@param failOnError Error behavior flag;public void setFailOnError(boolean failOnError) {_		this.failOnError = failOnError__	};if,set,to,true,the,producer,will,immediately,fail,with,an,exception,on,any,error,otherwise,the,errors,are,logged,and,the,producer,goes,on,param,fail,on,error,error,behavior,flag;public,void,set,fail,on,error,boolean,fail,on,error,this,fail,on,error,fail,on,error
FlinkKinesisProducer -> public void setFailOnError(boolean failOnError);1529652658;If set to true, the producer will immediately fail with an exception on any error._Otherwise, the errors are logged and the producer goes on.__@param failOnError Error behavior flag;public void setFailOnError(boolean failOnError) {_		this.failOnError = failOnError__	};if,set,to,true,the,producer,will,immediately,fail,with,an,exception,on,any,error,otherwise,the,errors,are,logged,and,the,producer,goes,on,param,fail,on,error,error,behavior,flag;public,void,set,fail,on,error,boolean,fail,on,error,this,fail,on,error,fail,on,error
FlinkKinesisProducer -> private void flushSync() throws Exception;1508928742;A reimplementation of {@link KinesisProducer#flushSync()}._This implementation releases the block on flushing if an interruption occurred.;private void flushSync() throws Exception {_		while (producer.getOutstandingRecordsCount() > 0) {_			producer.flush()__			try {_				Thread.sleep(500)__			} catch (InterruptedException e) {_				LOG.warn("Flushing was interrupted.")___				break__			}_		}_	};a,reimplementation,of,link,kinesis,producer,flush,sync,this,implementation,releases,the,block,on,flushing,if,an,interruption,occurred;private,void,flush,sync,throws,exception,while,producer,get,outstanding,records,count,0,producer,flush,try,thread,sleep,500,catch,interrupted,exception,e,log,warn,flushing,was,interrupted,break
FlinkKinesisProducer -> private void flushSync() throws Exception;1508928794;A reimplementation of {@link KinesisProducer#flushSync()}._This implementation releases the block on flushing if an interruption occurred.;private void flushSync() throws Exception {_		while (producer.getOutstandingRecordsCount() > 0) {_			producer.flush()__			try {_				Thread.sleep(500)__			} catch (InterruptedException e) {_				LOG.warn("Flushing was interrupted.")___				break__			}_		}_	};a,reimplementation,of,link,kinesis,producer,flush,sync,this,implementation,releases,the,block,on,flushing,if,an,interruption,occurred;private,void,flush,sync,throws,exception,while,producer,get,outstanding,records,count,0,producer,flush,try,thread,sleep,500,catch,interrupted,exception,e,log,warn,flushing,was,interrupted,break
FlinkKinesisProducer -> private void flushSync() throws Exception;1511347989;A reimplementation of {@link KinesisProducer#flushSync()}._This implementation releases the block on flushing if an interruption occurred.;private void flushSync() throws Exception {_		while (producer.getOutstandingRecordsCount() > 0) {_			producer.flush()__			try {_				Thread.sleep(500)__			} catch (InterruptedException e) {_				LOG.warn("Flushing was interrupted.")___				break__			}_		}_	};a,reimplementation,of,link,kinesis,producer,flush,sync,this,implementation,releases,the,block,on,flushing,if,an,interruption,occurred;private,void,flush,sync,throws,exception,while,producer,get,outstanding,records,count,0,producer,flush,try,thread,sleep,500,catch,interrupted,exception,e,log,warn,flushing,was,interrupted,break
FlinkKinesisProducer -> private void flushSync() throws Exception;1512029104;A reimplementation of {@link KinesisProducer#flushSync()}._This implementation releases the block on flushing if an interruption occurred.;private void flushSync() throws Exception {_		while (producer.getOutstandingRecordsCount() > 0) {_			producer.flush()__			try {_				Thread.sleep(500)__			} catch (InterruptedException e) {_				LOG.warn("Flushing was interrupted.")___				break__			}_		}_	};a,reimplementation,of,link,kinesis,producer,flush,sync,this,implementation,releases,the,block,on,flushing,if,an,interruption,occurred;private,void,flush,sync,throws,exception,while,producer,get,outstanding,records,count,0,producer,flush,try,thread,sleep,500,catch,interrupted,exception,e,log,warn,flushing,was,interrupted,break
FlinkKinesisProducer -> private void flushSync() throws Exception;1515757408;A reimplementation of {@link KinesisProducer#flushSync()}._This implementation releases the block on flushing if an interruption occurred.;private void flushSync() throws Exception {_		while (producer.getOutstandingRecordsCount() > 0) {_			producer.flush()__			try {_				Thread.sleep(500)__			} catch (InterruptedException e) {_				LOG.warn("Flushing was interrupted.")___				break__			}_		}_	};a,reimplementation,of,link,kinesis,producer,flush,sync,this,implementation,releases,the,block,on,flushing,if,an,interruption,occurred;private,void,flush,sync,throws,exception,while,producer,get,outstanding,records,count,0,producer,flush,try,thread,sleep,500,catch,interrupted,exception,e,log,warn,flushing,was,interrupted,break
FlinkKinesisProducer -> private void flushSync() throws Exception;1529652658;A reimplementation of {@link KinesisProducer#flushSync()}._This implementation releases the block on flushing if an interruption occurred.;private void flushSync() throws Exception {_		while (producer.getOutstandingRecordsCount() > 0) {_			producer.flush()__			try {_				Thread.sleep(500)__			} catch (InterruptedException e) {_				LOG.warn("Flushing was interrupted.")__				break__			}_		}_	};a,reimplementation,of,link,kinesis,producer,flush,sync,this,implementation,releases,the,block,on,flushing,if,an,interruption,occurred;private,void,flush,sync,throws,exception,while,producer,get,outstanding,records,count,0,producer,flush,try,thread,sleep,500,catch,interrupted,exception,e,log,warn,flushing,was,interrupted,break
