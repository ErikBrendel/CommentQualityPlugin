# id;timestamp;commentText;codeText;commentWords;codeWords
RowTypeInfo -> public static RowTypeInfo projectFields(RowTypeInfo rowType, int[] fieldMapping);1511388690;Creates a {@link RowTypeInfo} with projected fields.__@param rowType The original RowTypeInfo whose fields are projected_@param fieldMapping The field mapping of the projection_@return A RowTypeInfo with projected fields.;public static RowTypeInfo projectFields(RowTypeInfo rowType, int[] fieldMapping) {_		TypeInformation[] fieldTypes = new TypeInformation[fieldMapping.length]__		String[] fieldNames = new String[fieldMapping.length]__		for (int i = 0_ i < fieldMapping.length_ i++) {_			fieldTypes[i] = rowType.getTypeAt(fieldMapping[i])__			fieldNames[i] = rowType.getFieldNames()[fieldMapping[i]]__		}_		return new RowTypeInfo(fieldTypes, fieldNames)__	};creates,a,link,row,type,info,with,projected,fields,param,row,type,the,original,row,type,info,whose,fields,are,projected,param,field,mapping,the,field,mapping,of,the,projection,return,a,row,type,info,with,projected,fields;public,static,row,type,info,project,fields,row,type,info,row,type,int,field,mapping,type,information,field,types,new,type,information,field,mapping,length,string,field,names,new,string,field,mapping,length,for,int,i,0,i,field,mapping,length,i,field,types,i,row,type,get,type,at,field,mapping,i,field,names,i,row,type,get,field,names,field,mapping,i,return,new,row,type,info,field,types,field,names
RowTypeInfo -> public static RowTypeInfo projectFields(RowTypeInfo rowType, int[] fieldMapping);1530625244;Creates a {@link RowTypeInfo} with projected fields.__@param rowType The original RowTypeInfo whose fields are projected_@param fieldMapping The field mapping of the projection_@return A RowTypeInfo with projected fields.;public static RowTypeInfo projectFields(RowTypeInfo rowType, int[] fieldMapping) {_		TypeInformation[] fieldTypes = new TypeInformation[fieldMapping.length]__		String[] fieldNames = new String[fieldMapping.length]__		for (int i = 0_ i < fieldMapping.length_ i++) {_			fieldTypes[i] = rowType.getTypeAt(fieldMapping[i])__			fieldNames[i] = rowType.getFieldNames()[fieldMapping[i]]__		}_		return new RowTypeInfo(fieldTypes, fieldNames)__	};creates,a,link,row,type,info,with,projected,fields,param,row,type,the,original,row,type,info,whose,fields,are,projected,param,field,mapping,the,field,mapping,of,the,projection,return,a,row,type,info,with,projected,fields;public,static,row,type,info,project,fields,row,type,info,row,type,int,field,mapping,type,information,field,types,new,type,information,field,mapping,length,string,field,names,new,string,field,mapping,length,for,int,i,0,i,field,mapping,length,i,field,types,i,row,type,get,type,at,field,mapping,i,field,names,i,row,type,get,field,names,field,mapping,i,return,new,row,type,info,field,types,field,names
RowTypeInfo -> public TypeInformation<?>[] getFieldTypes();1493217721;Returns the field types of the row. The order matches the order of the field names.;public TypeInformation<?>[] getFieldTypes() {_		return types__	};returns,the,field,types,of,the,row,the,order,matches,the,order,of,the,field,names;public,type,information,get,field,types,return,types
RowTypeInfo -> public TypeInformation<?>[] getFieldTypes();1511388690;Returns the field types of the row. The order matches the order of the field names.;public TypeInformation<?>[] getFieldTypes() {_		return types__	};returns,the,field,types,of,the,row,the,order,matches,the,order,of,the,field,names;public,type,information,get,field,types,return,types
RowTypeInfo -> public TypeInformation<?>[] getFieldTypes();1530625244;Returns the field types of the row. The order matches the order of the field names.;public TypeInformation<?>[] getFieldTypes() {_		return types__	};returns,the,field,types,of,the,row,the,order,matches,the,order,of,the,field,names;public,type,information,get,field,types,return,types
