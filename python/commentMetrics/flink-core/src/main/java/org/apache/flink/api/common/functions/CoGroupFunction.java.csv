# id;timestamp;commentText;codeText;commentWords;codeWords
CoGroupFunction -> void coGroup(Iterable<IN1> first, Iterable<IN2> second, Collector<O> out) throws Exception_;1526630739;This method must be implemented to provide a user implementation of a_coGroup. It is called for each pair of element groups where the elements share the_same key.__@param first The records from the first input._@param second The records from the second._@param out A collector to return elements.__@throws Exception The function may throw Exceptions, which will cause the program to cancel,_and may trigger the recovery logic.;void coGroup(Iterable<IN1> first, Iterable<IN2> second, Collector<O> out) throws Exception_;this,method,must,be,implemented,to,provide,a,user,implementation,of,a,co,group,it,is,called,for,each,pair,of,element,groups,where,the,elements,share,the,same,key,param,first,the,records,from,the,first,input,param,second,the,records,from,the,second,param,out,a,collector,to,return,elements,throws,exception,the,function,may,throw,exceptions,which,will,cause,the,program,to,cancel,and,may,trigger,the,recovery,logic;void,co,group,iterable,in1,first,iterable,in2,second,collector,o,out,throws,exception
CoGroupFunction -> void coGroup(Iterable<IN1> first, Iterable<IN2> second, Collector<O> out) throws Exception_;1526630739;This method must be implemented to provide a user implementation of a_coGroup. It is called for each pair of element groups where the elements share the_same key.__@param first The records from the first input._@param second The records from the second._@param out A collector to return elements.__@throws Exception The function may throw Exceptions, which will cause the program to cancel,_and may trigger the recovery logic.;void coGroup(Iterable<IN1> first, Iterable<IN2> second, Collector<O> out) throws Exception_;this,method,must,be,implemented,to,provide,a,user,implementation,of,a,co,group,it,is,called,for,each,pair,of,element,groups,where,the,elements,share,the,same,key,param,first,the,records,from,the,first,input,param,second,the,records,from,the,second,param,out,a,collector,to,return,elements,throws,exception,the,function,may,throw,exceptions,which,will,cause,the,program,to,cancel,and,may,trigger,the,recovery,logic;void,co,group,iterable,in1,first,iterable,in2,second,collector,o,out,throws,exception
CoGroupFunction -> public void coGroup(Iterable<IN1> first, Iterable<IN2> second, Collector<O> out) throws Exception_;1406853229;This method must be implemented to provide a user implementation of a_coGroup. It is called for each pair of element groups where the elements share the_same key.__@param first The records from the first input._@param second The records from the second._@param out A collector to return elements.__@throws Exception The function may throw Exceptions, which will cause the program to cancel,_and may trigger the recovery logic.;public void coGroup(Iterable<IN1> first, Iterable<IN2> second, Collector<O> out) throws Exception_;this,method,must,be,implemented,to,provide,a,user,implementation,of,a,co,group,it,is,called,for,each,pair,of,element,groups,where,the,elements,share,the,same,key,param,first,the,records,from,the,first,input,param,second,the,records,from,the,second,param,out,a,collector,to,return,elements,throws,exception,the,function,may,throw,exceptions,which,will,cause,the,program,to,cancel,and,may,trigger,the,recovery,logic;public,void,co,group,iterable,in1,first,iterable,in2,second,collector,o,out,throws,exception
CoGroupFunction -> public void coGroup(Iterable<IN1> first, Iterable<IN2> second, Collector<O> out) throws Exception_;1411473593;This method must be implemented to provide a user implementation of a_coGroup. It is called for each pair of element groups where the elements share the_same key.__@param first The records from the first input._@param second The records from the second._@param out A collector to return elements.__@throws Exception The function may throw Exceptions, which will cause the program to cancel,_and may trigger the recovery logic.;public void coGroup(Iterable<IN1> first, Iterable<IN2> second, Collector<O> out) throws Exception_;this,method,must,be,implemented,to,provide,a,user,implementation,of,a,co,group,it,is,called,for,each,pair,of,element,groups,where,the,elements,share,the,same,key,param,first,the,records,from,the,first,input,param,second,the,records,from,the,second,param,out,a,collector,to,return,elements,throws,exception,the,function,may,throw,exceptions,which,will,cause,the,program,to,cancel,and,may,trigger,the,recovery,logic;public,void,co,group,iterable,in1,first,iterable,in2,second,collector,o,out,throws,exception
CoGroupFunction -> public void coGroup(Iterable<IN1> first, Iterable<IN2> second, Collector<O> out) throws Exception_;1446112342;This method must be implemented to provide a user implementation of a_coGroup. It is called for each pair of element groups where the elements share the_same key.__@param first The records from the first input._@param second The records from the second._@param out A collector to return elements.__@throws Exception The function may throw Exceptions, which will cause the program to cancel,_and may trigger the recovery logic.;public void coGroup(Iterable<IN1> first, Iterable<IN2> second, Collector<O> out) throws Exception_;this,method,must,be,implemented,to,provide,a,user,implementation,of,a,co,group,it,is,called,for,each,pair,of,element,groups,where,the,elements,share,the,same,key,param,first,the,records,from,the,first,input,param,second,the,records,from,the,second,param,out,a,collector,to,return,elements,throws,exception,the,function,may,throw,exceptions,which,will,cause,the,program,to,cancel,and,may,trigger,the,recovery,logic;public,void,co,group,iterable,in1,first,iterable,in2,second,collector,o,out,throws,exception
CoGroupFunction -> public void coGroup(Iterable<IN1> first, Iterable<IN2> second, Collector<O> out) throws Exception_;1452178883;This method must be implemented to provide a user implementation of a_coGroup. It is called for each pair of element groups where the elements share the_same key.__@param first The records from the first input._@param second The records from the second._@param out A collector to return elements.__@throws Exception The function may throw Exceptions, which will cause the program to cancel,_and may trigger the recovery logic.;public void coGroup(Iterable<IN1> first, Iterable<IN2> second, Collector<O> out) throws Exception_;this,method,must,be,implemented,to,provide,a,user,implementation,of,a,co,group,it,is,called,for,each,pair,of,element,groups,where,the,elements,share,the,same,key,param,first,the,records,from,the,first,input,param,second,the,records,from,the,second,param,out,a,collector,to,return,elements,throws,exception,the,function,may,throw,exceptions,which,will,cause,the,program,to,cancel,and,may,trigger,the,recovery,logic;public,void,co,group,iterable,in1,first,iterable,in2,second,collector,o,out,throws,exception
CoGroupFunction -> public void coGroup(Iterable<IN1> first, Iterable<IN2> second, Collector<O> out) throws Exception_;1517944847;This method must be implemented to provide a user implementation of a_coGroup. It is called for each pair of element groups where the elements share the_same key.__@param first The records from the first input._@param second The records from the second._@param out A collector to return elements.__@throws Exception The function may throw Exceptions, which will cause the program to cancel,_and may trigger the recovery logic.;public void coGroup(Iterable<IN1> first, Iterable<IN2> second, Collector<O> out) throws Exception_;this,method,must,be,implemented,to,provide,a,user,implementation,of,a,co,group,it,is,called,for,each,pair,of,element,groups,where,the,elements,share,the,same,key,param,first,the,records,from,the,first,input,param,second,the,records,from,the,second,param,out,a,collector,to,return,elements,throws,exception,the,function,may,throw,exceptions,which,will,cause,the,program,to,cancel,and,may,trigger,the,recovery,logic;public,void,co,group,iterable,in1,first,iterable,in2,second,collector,o,out,throws,exception
CoGroupFunction -> void coGroup(Iterator<V1> first, Iterator<V2> second, Collector<O> out) throws Exception_;1406821655;This method must be implemented to provide a user implementation of a_coGroup. It is called for each two key-value pairs that share the same_key and come from different inputs.__@param first The records from the first input which were paired with the key._@param second The records from the second input which were paired with the key._@param out A collector that collects all output pairs.;void coGroup(Iterator<V1> first, Iterator<V2> second, Collector<O> out) throws Exception_;this,method,must,be,implemented,to,provide,a,user,implementation,of,a,co,group,it,is,called,for,each,two,key,value,pairs,that,share,the,same,key,and,come,from,different,inputs,param,first,the,records,from,the,first,input,which,were,paired,with,the,key,param,second,the,records,from,the,second,input,which,were,paired,with,the,key,param,out,a,collector,that,collects,all,output,pairs;void,co,group,iterator,v1,first,iterator,v2,second,collector,o,out,throws,exception
CoGroupFunction -> void coGroup(Iterator<V1> first, Iterator<V2> second, Collector<O> out) throws Exception_;1406830680;This method must be implemented to provide a user implementation of a_coGroup. It is called for each pair of element groups where the elements share the_same key.__@param first The records from the first input._@param second The records from the second._@param out A collector to return elements.__@throws Exception The function may throw Exceptions, which will cause the program to cancel,_and may trigger the recovery logic.;void coGroup(Iterator<V1> first, Iterator<V2> second, Collector<O> out) throws Exception_;this,method,must,be,implemented,to,provide,a,user,implementation,of,a,co,group,it,is,called,for,each,pair,of,element,groups,where,the,elements,share,the,same,key,param,first,the,records,from,the,first,input,param,second,the,records,from,the,second,param,out,a,collector,to,return,elements,throws,exception,the,function,may,throw,exceptions,which,will,cause,the,program,to,cancel,and,may,trigger,the,recovery,logic;void,co,group,iterator,v1,first,iterator,v2,second,collector,o,out,throws,exception
