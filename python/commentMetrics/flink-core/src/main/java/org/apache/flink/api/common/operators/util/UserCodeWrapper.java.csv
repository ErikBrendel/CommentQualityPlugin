# id;timestamp;commentText;codeText;commentWords;codeWords
UserCodeWrapper -> public T getUserCodeObject(Class<? super T> superClass, ClassLoader cl)_;1405024514;Gets the user code object. In the case of a pact, that object will be the stub with the user function,_in the case of an input or output format, it will be the format object.__The subclass is supposed to just return the user code object or instantiate the class.__@return The class with the user code.;public T getUserCodeObject(Class<? super T> superClass, ClassLoader cl)_;gets,the,user,code,object,in,the,case,of,a,pact,that,object,will,be,the,stub,with,the,user,function,in,the,case,of,an,input,or,output,format,it,will,be,the,format,object,the,subclass,is,supposed,to,just,return,the,user,code,object,or,instantiate,the,class,return,the,class,with,the,user,code;public,t,get,user,code,object,class,super,t,super,class,class,loader,cl
UserCodeWrapper -> public T getUserCodeObject(Class<? super T> superClass, ClassLoader cl)_;1405090423;Gets the user code object. In the case of a pact, that object will be the stub with the user function,_in the case of an input or output format, it will be the format object.__The subclass is supposed to just return the user code object or instantiate the class.__@return The class with the user code.;public T getUserCodeObject(Class<? super T> superClass, ClassLoader cl)_;gets,the,user,code,object,in,the,case,of,a,pact,that,object,will,be,the,stub,with,the,user,function,in,the,case,of,an,input,or,output,format,it,will,be,the,format,object,the,subclass,is,supposed,to,just,return,the,user,code,object,or,instantiate,the,class,return,the,class,with,the,user,code;public,t,get,user,code,object,class,super,t,super,class,class,loader,cl
UserCodeWrapper -> public T getUserCodeObject(Class<? super T> superClass, ClassLoader cl)_;1411473593;Gets the user code object. In the case of a pact, that object will be the stub with the user function,_in the case of an input or output format, it will be the format object.__The subclass is supposed to just return the user code object or instantiate the class.__@return The class with the user code.;public T getUserCodeObject(Class<? super T> superClass, ClassLoader cl)_;gets,the,user,code,object,in,the,case,of,a,pact,that,object,will,be,the,stub,with,the,user,function,in,the,case,of,an,input,or,output,format,it,will,be,the,format,object,the,subclass,is,supposed,to,just,return,the,user,code,object,or,instantiate,the,class,return,the,class,with,the,user,code;public,t,get,user,code,object,class,super,t,super,class,class,loader,cl
UserCodeWrapper -> T getUserCodeObject(Class<? super T> superClass, ClassLoader cl)_;1417022098;Gets the user code object, which may be either a function or an input or output format._The subclass is supposed to just return the user code object or instantiate the class.__@return The class with the user code.;T getUserCodeObject(Class<? super T> superClass, ClassLoader cl)_;gets,the,user,code,object,which,may,be,either,a,function,or,an,input,or,output,format,the,subclass,is,supposed,to,just,return,the,user,code,object,or,instantiate,the,class,return,the,class,with,the,user,code;t,get,user,code,object,class,super,t,super,class,class,loader,cl
UserCodeWrapper -> T getUserCodeObject(Class<? super T> superClass, ClassLoader cl)_;1455479358;Gets the user code object, which may be either a function or an input or output format._The subclass is supposed to just return the user code object or instantiate the class.__@return The class with the user code.;T getUserCodeObject(Class<? super T> superClass, ClassLoader cl)_;gets,the,user,code,object,which,may,be,either,a,function,or,an,input,or,output,format,the,subclass,is,supposed,to,just,return,the,user,code,object,or,instantiate,the,class,return,the,class,with,the,user,code;t,get,user,code,object,class,super,t,super,class,class,loader,cl
UserCodeWrapper -> <A extends Annotation> A getUserCodeAnnotation(Class<A> annotationClass)_;1417022098;Gets an annotation that pertains to the user code class. By default, this method will look for_annotations statically present on the user code class. However, inheritors may override this_behavior to provide annotations dynamically.__@param annotationClass_the Class object corresponding to the annotation type_@return the annotation, or null if no annotation of the requested type was found;<A extends Annotation> A getUserCodeAnnotation(Class<A> annotationClass)_;gets,an,annotation,that,pertains,to,the,user,code,class,by,default,this,method,will,look,for,annotations,statically,present,on,the,user,code,class,however,inheritors,may,override,this,behavior,to,provide,annotations,dynamically,param,annotation,class,the,class,object,corresponding,to,the,annotation,type,return,the,annotation,or,null,if,no,annotation,of,the,requested,type,was,found;a,extends,annotation,a,get,user,code,annotation,class,a,annotation,class
UserCodeWrapper -> <A extends Annotation> A getUserCodeAnnotation(Class<A> annotationClass)_;1455479358;Gets an annotation that pertains to the user code class. By default, this method will look for_annotations statically present on the user code class. However, inheritors may override this_behavior to provide annotations dynamically.__@param annotationClass_the Class object corresponding to the annotation type_@return the annotation, or null if no annotation of the requested type was found;<A extends Annotation> A getUserCodeAnnotation(Class<A> annotationClass)_;gets,an,annotation,that,pertains,to,the,user,code,class,by,default,this,method,will,look,for,annotations,statically,present,on,the,user,code,class,however,inheritors,may,override,this,behavior,to,provide,annotations,dynamically,param,annotation,class,the,class,object,corresponding,to,the,annotation,type,return,the,annotation,or,null,if,no,annotation,of,the,requested,type,was,found;a,extends,annotation,a,get,user,code,annotation,class,a,annotation,class
UserCodeWrapper -> public Class<? extends T> getUserCodeClass ()_;1405024514;Gets the class of the user code. If the user code is provided as a class, this class is just returned._If the user code is provided as an object, {@link Object#getClass()} is called on the user code object.__@return The class of the user code object.;public Class<? extends T> getUserCodeClass ()_;gets,the,class,of,the,user,code,if,the,user,code,is,provided,as,a,class,this,class,is,just,returned,if,the,user,code,is,provided,as,an,object,link,object,get,class,is,called,on,the,user,code,object,return,the,class,of,the,user,code,object;public,class,extends,t,get,user,code,class
UserCodeWrapper -> public Class<? extends T> getUserCodeClass ()_;1405090423;Gets the class of the user code. If the user code is provided as a class, this class is just returned._If the user code is provided as an object, {@link Object#getClass()} is called on the user code object.__@return The class of the user code object.;public Class<? extends T> getUserCodeClass ()_;gets,the,class,of,the,user,code,if,the,user,code,is,provided,as,a,class,this,class,is,just,returned,if,the,user,code,is,provided,as,an,object,link,object,get,class,is,called,on,the,user,code,object,return,the,class,of,the,user,code,object;public,class,extends,t,get,user,code,class
UserCodeWrapper -> public Class<? extends T> getUserCodeClass ()_;1411473593;Gets the class of the user code. If the user code is provided as a class, this class is just returned._If the user code is provided as an object, {@link Object#getClass()} is called on the user code object.__@return The class of the user code object.;public Class<? extends T> getUserCodeClass ()_;gets,the,class,of,the,user,code,if,the,user,code,is,provided,as,a,class,this,class,is,just,returned,if,the,user,code,is,provided,as,an,object,link,object,get,class,is,called,on,the,user,code,object,return,the,class,of,the,user,code,object;public,class,extends,t,get,user,code,class
UserCodeWrapper -> public T getUserCodeObject()_;1405024514;Gets the user code object. In the case of a pact, that object will be the stub with the user function,_in the case of an input or output format, it will be the format object.__The subclass is supposed to just return the user code object or instantiate the class.__@return The class with the user code.;public T getUserCodeObject()_;gets,the,user,code,object,in,the,case,of,a,pact,that,object,will,be,the,stub,with,the,user,function,in,the,case,of,an,input,or,output,format,it,will,be,the,format,object,the,subclass,is,supposed,to,just,return,the,user,code,object,or,instantiate,the,class,return,the,class,with,the,user,code;public,t,get,user,code,object
UserCodeWrapper -> public T getUserCodeObject()_;1405090423;Gets the user code object. In the case of a pact, that object will be the stub with the user function,_in the case of an input or output format, it will be the format object.__The subclass is supposed to just return the user code object or instantiate the class.__@return The class with the user code.;public T getUserCodeObject()_;gets,the,user,code,object,in,the,case,of,a,pact,that,object,will,be,the,stub,with,the,user,function,in,the,case,of,an,input,or,output,format,it,will,be,the,format,object,the,subclass,is,supposed,to,just,return,the,user,code,object,or,instantiate,the,class,return,the,class,with,the,user,code;public,t,get,user,code,object
UserCodeWrapper -> public T getUserCodeObject()_;1411473593;Gets the user code object. In the case of a pact, that object will be the stub with the user function,_in the case of an input or output format, it will be the format object.__The subclass is supposed to just return the user code object or instantiate the class.__@return The class with the user code.;public T getUserCodeObject()_;gets,the,user,code,object,in,the,case,of,a,pact,that,object,will,be,the,stub,with,the,user,function,in,the,case,of,an,input,or,output,format,it,will,be,the,format,object,the,subclass,is,supposed,to,just,return,the,user,code,object,or,instantiate,the,class,return,the,class,with,the,user,code;public,t,get,user,code,object
UserCodeWrapper -> T getUserCodeObject()_;1417022098;Gets the user code object. In the case of a pact, that object will be the stub with the user function,_in the case of an input or output format, it will be the format object.__@return The class with the user code.;T getUserCodeObject()_;gets,the,user,code,object,in,the,case,of,a,pact,that,object,will,be,the,stub,with,the,user,function,in,the,case,of,an,input,or,output,format,it,will,be,the,format,object,return,the,class,with,the,user,code;t,get,user,code,object
UserCodeWrapper -> T getUserCodeObject()_;1455479358;Gets the user code object. In the case of a pact, that object will be the stub with the user function,_in the case of an input or output format, it will be the format object.__@return The class with the user code.;T getUserCodeObject()_;gets,the,user,code,object,in,the,case,of,a,pact,that,object,will,be,the,stub,with,the,user,function,in,the,case,of,an,input,or,output,format,it,will,be,the,format,object,return,the,class,with,the,user,code;t,get,user,code,object
UserCodeWrapper -> public <A extends Annotation> A getUserCodeAnnotation(Class<A> annotationClass)_;1405024514;Gets an annotation that pertains to the user code class. By default, this method will look for_annotations statically present on the user code class. However, inheritors may override this_behavior to provide annotations dynamically.__@param annotationClass_the Class object corresponding to the annotation type_@return the annotation, or null if no annotation of the requested type was found;public <A extends Annotation> A getUserCodeAnnotation(Class<A> annotationClass)_;gets,an,annotation,that,pertains,to,the,user,code,class,by,default,this,method,will,look,for,annotations,statically,present,on,the,user,code,class,however,inheritors,may,override,this,behavior,to,provide,annotations,dynamically,param,annotation,class,the,class,object,corresponding,to,the,annotation,type,return,the,annotation,or,null,if,no,annotation,of,the,requested,type,was,found;public,a,extends,annotation,a,get,user,code,annotation,class,a,annotation,class
UserCodeWrapper -> public <A extends Annotation> A getUserCodeAnnotation(Class<A> annotationClass)_;1405090423;Gets an annotation that pertains to the user code class. By default, this method will look for_annotations statically present on the user code class. However, inheritors may override this_behavior to provide annotations dynamically.__@param annotationClass_the Class object corresponding to the annotation type_@return the annotation, or null if no annotation of the requested type was found;public <A extends Annotation> A getUserCodeAnnotation(Class<A> annotationClass)_;gets,an,annotation,that,pertains,to,the,user,code,class,by,default,this,method,will,look,for,annotations,statically,present,on,the,user,code,class,however,inheritors,may,override,this,behavior,to,provide,annotations,dynamically,param,annotation,class,the,class,object,corresponding,to,the,annotation,type,return,the,annotation,or,null,if,no,annotation,of,the,requested,type,was,found;public,a,extends,annotation,a,get,user,code,annotation,class,a,annotation,class
UserCodeWrapper -> public <A extends Annotation> A getUserCodeAnnotation(Class<A> annotationClass)_;1411473593;Gets an annotation that pertains to the user code class. By default, this method will look for_annotations statically present on the user code class. However, inheritors may override this_behavior to provide annotations dynamically.__@param annotationClass_the Class object corresponding to the annotation type_@return the annotation, or null if no annotation of the requested type was found;public <A extends Annotation> A getUserCodeAnnotation(Class<A> annotationClass)_;gets,an,annotation,that,pertains,to,the,user,code,class,by,default,this,method,will,look,for,annotations,statically,present,on,the,user,code,class,however,inheritors,may,override,this,behavior,to,provide,annotations,dynamically,param,annotation,class,the,class,object,corresponding,to,the,annotation,type,return,the,annotation,or,null,if,no,annotation,of,the,requested,type,was,found;public,a,extends,annotation,a,get,user,code,annotation,class,a,annotation,class
UserCodeWrapper -> Class<? extends T> getUserCodeClass ()_;1417022098;Gets the class of the user code. If the user code is provided as a class, this class is just returned._If the user code is provided as an object, {@link Object#getClass()} is called on the user code object.__@return The class of the user code object.;Class<? extends T> getUserCodeClass ()_;gets,the,class,of,the,user,code,if,the,user,code,is,provided,as,a,class,this,class,is,just,returned,if,the,user,code,is,provided,as,an,object,link,object,get,class,is,called,on,the,user,code,object,return,the,class,of,the,user,code,object;class,extends,t,get,user,code,class
UserCodeWrapper -> Class<? extends T> getUserCodeClass ()_;1455479358;Gets the class of the user code. If the user code is provided as a class, this class is just returned._If the user code is provided as an object, {@link Object#getClass()} is called on the user code object.__@return The class of the user code object.;Class<? extends T> getUserCodeClass ()_;gets,the,class,of,the,user,code,if,the,user,code,is,provided,as,a,class,this,class,is,just,returned,if,the,user,code,is,provided,as,an,object,link,object,get,class,is,called,on,the,user,code,object,return,the,class,of,the,user,code,object;class,extends,t,get,user,code,class
UserCodeWrapper -> boolean hasObject()_;1417022098;Checks whether the wrapper already has an object, or whether it needs to instantiate it.__@return True, if the wrapper has already an object, false if it has only a class.;boolean hasObject()_;checks,whether,the,wrapper,already,has,an,object,or,whether,it,needs,to,instantiate,it,return,true,if,the,wrapper,has,already,an,object,false,if,it,has,only,a,class;boolean,has,object
UserCodeWrapper -> boolean hasObject()_;1455479358;Checks whether the wrapper already has an object, or whether it needs to instantiate it.__@return True, if the wrapper has already an object, false if it has only a class.;boolean hasObject()_;checks,whether,the,wrapper,already,has,an,object,or,whether,it,needs,to,instantiate,it,return,true,if,the,wrapper,has,already,an,object,false,if,it,has,only,a,class;boolean,has,object
