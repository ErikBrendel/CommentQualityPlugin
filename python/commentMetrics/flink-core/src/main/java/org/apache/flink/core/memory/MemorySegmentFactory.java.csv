# id;timestamp;commentText;codeText;commentWords;codeWords
MemorySegmentFactory -> public static MemorySegment wrapPooledOffHeapMemory(ByteBuffer memory, Object owner);1441738685;Creates a memory segment that wraps the off-heap memory backing the given ByteBuffer._Note that the ByteBuffer needs to be a <i>direct ByteBuffer</i>._<p>_This method is intended to be used for components which pool memory and create_memory segments around long-lived memory regions.__@param memory The byte buffer with the off-heap memory to be represented by the memory segment._@param owner The owner to associate with the memory segment._@return A new memory segment representing the given off-heap memory.;public static MemorySegment wrapPooledOffHeapMemory(ByteBuffer memory, Object owner) {_		ensureInitialized()__		return factory.wrapPooledOffHeapMemory(memory, owner)__	};creates,a,memory,segment,that,wraps,the,off,heap,memory,backing,the,given,byte,buffer,note,that,the,byte,buffer,needs,to,be,a,i,direct,byte,buffer,i,p,this,method,is,intended,to,be,used,for,components,which,pool,memory,and,create,memory,segments,around,long,lived,memory,regions,param,memory,the,byte,buffer,with,the,off,heap,memory,to,be,represented,by,the,memory,segment,param,owner,the,owner,to,associate,with,the,memory,segment,return,a,new,memory,segment,representing,the,given,off,heap,memory;public,static,memory,segment,wrap,pooled,off,heap,memory,byte,buffer,memory,object,owner,ensure,initialized,return,factory,wrap,pooled,off,heap,memory,memory,owner
MemorySegmentFactory -> public static MemorySegment wrapPooledOffHeapMemory(ByteBuffer memory, Object owner);1455479358;Creates a memory segment that wraps the off-heap memory backing the given ByteBuffer._Note that the ByteBuffer needs to be a <i>direct ByteBuffer</i>._<p>_This method is intended to be used for components which pool memory and create_memory segments around long-lived memory regions.__@param memory The byte buffer with the off-heap memory to be represented by the memory segment._@param owner The owner to associate with the memory segment._@return A new memory segment representing the given off-heap memory.;public static MemorySegment wrapPooledOffHeapMemory(ByteBuffer memory, Object owner) {_		ensureInitialized()__		return factory.wrapPooledOffHeapMemory(memory, owner)__	};creates,a,memory,segment,that,wraps,the,off,heap,memory,backing,the,given,byte,buffer,note,that,the,byte,buffer,needs,to,be,a,i,direct,byte,buffer,i,p,this,method,is,intended,to,be,used,for,components,which,pool,memory,and,create,memory,segments,around,long,lived,memory,regions,param,memory,the,byte,buffer,with,the,off,heap,memory,to,be,represented,by,the,memory,segment,param,owner,the,owner,to,associate,with,the,memory,segment,return,a,new,memory,segment,representing,the,given,off,heap,memory;public,static,memory,segment,wrap,pooled,off,heap,memory,byte,buffer,memory,object,owner,ensure,initialized,return,factory,wrap,pooled,off,heap,memory,memory,owner
MemorySegmentFactory -> public static MemorySegment wrapPooledOffHeapMemory(ByteBuffer memory, Object owner);1471362593;Creates a memory segment that wraps the off-heap memory backing the given ByteBuffer._Note that the ByteBuffer needs to be a <i>direct ByteBuffer</i>._<p>_This method is intended to be used for components which pool memory and create_memory segments around long-lived memory regions.__@param memory The byte buffer with the off-heap memory to be represented by the memory segment._@param owner The owner to associate with the memory segment._@return A new memory segment representing the given off-heap memory.;public static MemorySegment wrapPooledOffHeapMemory(ByteBuffer memory, Object owner) {_		ensureInitialized()__		return factory.wrapPooledOffHeapMemory(memory, owner)__	};creates,a,memory,segment,that,wraps,the,off,heap,memory,backing,the,given,byte,buffer,note,that,the,byte,buffer,needs,to,be,a,i,direct,byte,buffer,i,p,this,method,is,intended,to,be,used,for,components,which,pool,memory,and,create,memory,segments,around,long,lived,memory,regions,param,memory,the,byte,buffer,with,the,off,heap,memory,to,be,represented,by,the,memory,segment,param,owner,the,owner,to,associate,with,the,memory,segment,return,a,new,memory,segment,representing,the,given,off,heap,memory;public,static,memory,segment,wrap,pooled,off,heap,memory,byte,buffer,memory,object,owner,ensure,initialized,return,factory,wrap,pooled,off,heap,memory,memory,owner
MemorySegmentFactory -> public static MemorySegment wrapPooledOffHeapMemory(ByteBuffer memory, Object owner);1507315082;Creates a memory segment that wraps the off-heap memory backing the given ByteBuffer._Note that the ByteBuffer needs to be a <i>direct ByteBuffer</i>.__<p>This method is intended to be used for components which pool memory and create_memory segments around long-lived memory regions.__@param memory The byte buffer with the off-heap memory to be represented by the memory segment._@param owner The owner to associate with the memory segment._@return A new memory segment representing the given off-heap memory.;public static MemorySegment wrapPooledOffHeapMemory(ByteBuffer memory, Object owner) {_		ensureInitialized()__		return factory.wrapPooledOffHeapMemory(memory, owner)__	};creates,a,memory,segment,that,wraps,the,off,heap,memory,backing,the,given,byte,buffer,note,that,the,byte,buffer,needs,to,be,a,i,direct,byte,buffer,i,p,this,method,is,intended,to,be,used,for,components,which,pool,memory,and,create,memory,segments,around,long,lived,memory,regions,param,memory,the,byte,buffer,with,the,off,heap,memory,to,be,represented,by,the,memory,segment,param,owner,the,owner,to,associate,with,the,memory,segment,return,a,new,memory,segment,representing,the,given,off,heap,memory;public,static,memory,segment,wrap,pooled,off,heap,memory,byte,buffer,memory,object,owner,ensure,initialized,return,factory,wrap,pooled,off,heap,memory,memory,owner
MemorySegmentFactory -> public static MemorySegment wrapPooledOffHeapMemory(ByteBuffer memory, Object owner);1507316227;Creates a memory segment that wraps the off-heap memory backing the given ByteBuffer._Note that the ByteBuffer needs to be a <i>direct ByteBuffer</i>.__<p>This method is intended to be used for components which pool memory and create_memory segments around long-lived memory regions.__@param memory The byte buffer with the off-heap memory to be represented by the memory segment._@param owner The owner to associate with the memory segment._@return A new memory segment representing the given off-heap memory.;public static MemorySegment wrapPooledOffHeapMemory(ByteBuffer memory, Object owner) {_		return new HybridMemorySegment(memory, owner)__	};creates,a,memory,segment,that,wraps,the,off,heap,memory,backing,the,given,byte,buffer,note,that,the,byte,buffer,needs,to,be,a,i,direct,byte,buffer,i,p,this,method,is,intended,to,be,used,for,components,which,pool,memory,and,create,memory,segments,around,long,lived,memory,regions,param,memory,the,byte,buffer,with,the,off,heap,memory,to,be,represented,by,the,memory,segment,param,owner,the,owner,to,associate,with,the,memory,segment,return,a,new,memory,segment,representing,the,given,off,heap,memory;public,static,memory,segment,wrap,pooled,off,heap,memory,byte,buffer,memory,object,owner,return,new,hybrid,memory,segment,memory,owner
MemorySegmentFactory -> public static MemorySegment wrapPooledOffHeapMemory(ByteBuffer memory, Object owner);1538389013;Creates a memory segment that wraps the off-heap memory backing the given ByteBuffer._Note that the ByteBuffer needs to be a <i>direct ByteBuffer</i>.__<p>This method is intended to be used for components which pool memory and create_memory segments around long-lived memory regions.__@param memory The byte buffer with the off-heap memory to be represented by the memory segment._@param owner The owner to associate with the memory segment._@return A new memory segment representing the given off-heap memory.;public static MemorySegment wrapPooledOffHeapMemory(ByteBuffer memory, Object owner) {_		return new HybridMemorySegment(memory, owner)__	};creates,a,memory,segment,that,wraps,the,off,heap,memory,backing,the,given,byte,buffer,note,that,the,byte,buffer,needs,to,be,a,i,direct,byte,buffer,i,p,this,method,is,intended,to,be,used,for,components,which,pool,memory,and,create,memory,segments,around,long,lived,memory,regions,param,memory,the,byte,buffer,with,the,off,heap,memory,to,be,represented,by,the,memory,segment,param,owner,the,owner,to,associate,with,the,memory,segment,return,a,new,memory,segment,representing,the,given,off,heap,memory;public,static,memory,segment,wrap,pooled,off,heap,memory,byte,buffer,memory,object,owner,return,new,hybrid,memory,segment,memory,owner
MemorySegmentFactory -> public static MemorySegment wrapPooledHeapMemory(byte[] memory, Object owner);1441738685;Creates a memory segment that wraps the given byte array._<p>_This method is intended to be used for components which pool memory and create_memory segments around long-lived memory regions.___@param memory The heap memory to be represented by the memory segment._@param owner The owner to associate with the memory segment._@return A new memory segment representing the given heap memory.;public static MemorySegment wrapPooledHeapMemory(byte[] memory, Object owner) {_		ensureInitialized()__		return factory.wrapPooledHeapMemory(memory, owner)__	};creates,a,memory,segment,that,wraps,the,given,byte,array,p,this,method,is,intended,to,be,used,for,components,which,pool,memory,and,create,memory,segments,around,long,lived,memory,regions,param,memory,the,heap,memory,to,be,represented,by,the,memory,segment,param,owner,the,owner,to,associate,with,the,memory,segment,return,a,new,memory,segment,representing,the,given,heap,memory;public,static,memory,segment,wrap,pooled,heap,memory,byte,memory,object,owner,ensure,initialized,return,factory,wrap,pooled,heap,memory,memory,owner
MemorySegmentFactory -> public static MemorySegment wrapPooledHeapMemory(byte[] memory, Object owner);1455479358;Creates a memory segment that wraps the given byte array._<p>_This method is intended to be used for components which pool memory and create_memory segments around long-lived memory regions.___@param memory The heap memory to be represented by the memory segment._@param owner The owner to associate with the memory segment._@return A new memory segment representing the given heap memory.;public static MemorySegment wrapPooledHeapMemory(byte[] memory, Object owner) {_		ensureInitialized()__		return factory.wrapPooledHeapMemory(memory, owner)__	};creates,a,memory,segment,that,wraps,the,given,byte,array,p,this,method,is,intended,to,be,used,for,components,which,pool,memory,and,create,memory,segments,around,long,lived,memory,regions,param,memory,the,heap,memory,to,be,represented,by,the,memory,segment,param,owner,the,owner,to,associate,with,the,memory,segment,return,a,new,memory,segment,representing,the,given,heap,memory;public,static,memory,segment,wrap,pooled,heap,memory,byte,memory,object,owner,ensure,initialized,return,factory,wrap,pooled,heap,memory,memory,owner
MemorySegmentFactory -> public static MemorySegment wrapPooledHeapMemory(byte[] memory, Object owner);1471362593;Creates a memory segment that wraps the given byte array._<p>_This method is intended to be used for components which pool memory and create_memory segments around long-lived memory regions.___@param memory The heap memory to be represented by the memory segment._@param owner The owner to associate with the memory segment._@return A new memory segment representing the given heap memory.;public static MemorySegment wrapPooledHeapMemory(byte[] memory, Object owner) {_		ensureInitialized()__		return factory.wrapPooledHeapMemory(memory, owner)__	};creates,a,memory,segment,that,wraps,the,given,byte,array,p,this,method,is,intended,to,be,used,for,components,which,pool,memory,and,create,memory,segments,around,long,lived,memory,regions,param,memory,the,heap,memory,to,be,represented,by,the,memory,segment,param,owner,the,owner,to,associate,with,the,memory,segment,return,a,new,memory,segment,representing,the,given,heap,memory;public,static,memory,segment,wrap,pooled,heap,memory,byte,memory,object,owner,ensure,initialized,return,factory,wrap,pooled,heap,memory,memory,owner
MemorySegmentFactory -> public static MemorySegment wrapPooledHeapMemory(byte[] memory, Object owner);1507315082;Creates a memory segment that wraps the given byte array.__<p>This method is intended to be used for components which pool memory and create_memory segments around long-lived memory regions.__@param memory The heap memory to be represented by the memory segment._@param owner The owner to associate with the memory segment._@return A new memory segment representing the given heap memory.;public static MemorySegment wrapPooledHeapMemory(byte[] memory, Object owner) {_		ensureInitialized()__		return factory.wrapPooledHeapMemory(memory, owner)__	};creates,a,memory,segment,that,wraps,the,given,byte,array,p,this,method,is,intended,to,be,used,for,components,which,pool,memory,and,create,memory,segments,around,long,lived,memory,regions,param,memory,the,heap,memory,to,be,represented,by,the,memory,segment,param,owner,the,owner,to,associate,with,the,memory,segment,return,a,new,memory,segment,representing,the,given,heap,memory;public,static,memory,segment,wrap,pooled,heap,memory,byte,memory,object,owner,ensure,initialized,return,factory,wrap,pooled,heap,memory,memory,owner
MemorySegmentFactory -> public static MemorySegment wrapPooledHeapMemory(byte[] memory, Object owner);1507316227;Creates a memory segment that wraps the given byte array.__<p>This method is intended to be used for components which pool memory and create_memory segments around long-lived memory regions.__@param memory The heap memory to be represented by the memory segment._@param owner The owner to associate with the memory segment._@return A new memory segment representing the given heap memory.;public static MemorySegment wrapPooledHeapMemory(byte[] memory, Object owner) {_		return new HybridMemorySegment(memory, owner)__	};creates,a,memory,segment,that,wraps,the,given,byte,array,p,this,method,is,intended,to,be,used,for,components,which,pool,memory,and,create,memory,segments,around,long,lived,memory,regions,param,memory,the,heap,memory,to,be,represented,by,the,memory,segment,param,owner,the,owner,to,associate,with,the,memory,segment,return,a,new,memory,segment,representing,the,given,heap,memory;public,static,memory,segment,wrap,pooled,heap,memory,byte,memory,object,owner,return,new,hybrid,memory,segment,memory,owner
MemorySegmentFactory -> public static MemorySegment wrapPooledHeapMemory(byte[] memory, Object owner);1538389013;Creates a memory segment that wraps the given byte array.__<p>This method is intended to be used for components which pool memory and create_memory segments around long-lived memory regions.__@param memory The heap memory to be represented by the memory segment._@param owner The owner to associate with the memory segment._@return A new memory segment representing the given heap memory.;public static MemorySegment wrapPooledHeapMemory(byte[] memory, Object owner) {_		return new HybridMemorySegment(memory, owner)__	};creates,a,memory,segment,that,wraps,the,given,byte,array,p,this,method,is,intended,to,be,used,for,components,which,pool,memory,and,create,memory,segments,around,long,lived,memory,regions,param,memory,the,heap,memory,to,be,represented,by,the,memory,segment,param,owner,the,owner,to,associate,with,the,memory,segment,return,a,new,memory,segment,representing,the,given,heap,memory;public,static,memory,segment,wrap,pooled,heap,memory,byte,memory,object,owner,return,new,hybrid,memory,segment,memory,owner
MemorySegmentFactory -> public static boolean initializeIfNotInitialized(Factory f);1471362593;Initializes this factory with the given concrete factory, iff it is not yet initialized._This also checks if the factory is already initialized to the exact same concrete factory_as given.__@param f The concrete factory to use._@return True, if the factory is initialized with the given concrete factory, or if it was already_initialized with the exact same concrete factory. False, if it is already initialized with_a different concrete factory.;public static boolean initializeIfNotInitialized(Factory f) {_		checkNotNull(f)___		synchronized (MemorySegmentFactory.class) {_			if (factory == null) {_				factory = f__				return true__			} else {_				return factory == f__			}_		}_	};initializes,this,factory,with,the,given,concrete,factory,iff,it,is,not,yet,initialized,this,also,checks,if,the,factory,is,already,initialized,to,the,exact,same,concrete,factory,as,given,param,f,the,concrete,factory,to,use,return,true,if,the,factory,is,initialized,with,the,given,concrete,factory,or,if,it,was,already,initialized,with,the,exact,same,concrete,factory,false,if,it,is,already,initialized,with,a,different,concrete,factory;public,static,boolean,initialize,if,not,initialized,factory,f,check,not,null,f,synchronized,memory,segment,factory,class,if,factory,null,factory,f,return,true,else,return,factory,f
MemorySegmentFactory -> public static boolean initializeIfNotInitialized(Factory f);1507315082;Initializes this factory with the given concrete factory, iff it is not yet initialized._This also checks if the factory is already initialized to the exact same concrete factory_as given.__@param f The concrete factory to use._@return True, if the factory is initialized with the given concrete factory, or if it was already_initialized with the exact same concrete factory. False, if it is already initialized with_a different concrete factory.;public static boolean initializeIfNotInitialized(Factory f) {_		checkNotNull(f)___		synchronized (MemorySegmentFactory.class) {_			if (factory == null) {_				factory = f__				return true__			} else {_				return factory == f__			}_		}_	};initializes,this,factory,with,the,given,concrete,factory,iff,it,is,not,yet,initialized,this,also,checks,if,the,factory,is,already,initialized,to,the,exact,same,concrete,factory,as,given,param,f,the,concrete,factory,to,use,return,true,if,the,factory,is,initialized,with,the,given,concrete,factory,or,if,it,was,already,initialized,with,the,exact,same,concrete,factory,false,if,it,is,already,initialized,with,a,different,concrete,factory;public,static,boolean,initialize,if,not,initialized,factory,f,check,not,null,f,synchronized,memory,segment,factory,class,if,factory,null,factory,f,return,true,else,return,factory,f
MemorySegmentFactory -> public static Factory getFactory();1441738685;Gets the factory. May return null, if the factory has not been initialized.__@return The factory, or null, if the factory has not been initialized.;public static Factory getFactory() {_		return factory__	};gets,the,factory,may,return,null,if,the,factory,has,not,been,initialized,return,the,factory,or,null,if,the,factory,has,not,been,initialized;public,static,factory,get,factory,return,factory
MemorySegmentFactory -> public static Factory getFactory();1455479358;Gets the factory. May return null, if the factory has not been initialized.__@return The factory, or null, if the factory has not been initialized.;public static Factory getFactory() {_		return factory__	};gets,the,factory,may,return,null,if,the,factory,has,not,been,initialized,return,the,factory,or,null,if,the,factory,has,not,been,initialized;public,static,factory,get,factory,return,factory
MemorySegmentFactory -> public static Factory getFactory();1471362593;Gets the factory. May return null, if the factory has not been initialized.__@return The factory, or null, if the factory has not been initialized.;public static Factory getFactory() {_		return factory__	};gets,the,factory,may,return,null,if,the,factory,has,not,been,initialized,return,the,factory,or,null,if,the,factory,has,not,been,initialized;public,static,factory,get,factory,return,factory
MemorySegmentFactory -> public static Factory getFactory();1507315082;Gets the factory. May return null, if the factory has not been initialized.__@return The factory, or null, if the factory has not been initialized.;public static Factory getFactory() {_		return factory__	};gets,the,factory,may,return,null,if,the,factory,has,not,been,initialized,return,the,factory,or,null,if,the,factory,has,not,been,initialized;public,static,factory,get,factory,return,factory
MemorySegmentFactory -> public static void initializeFactory(Factory f);1441738685;Initializes this factory with the given concrete factory.__@param f The concrete factory to use._@throws java.lang.IllegalStateException Thrown, if this factory has been initialized before.;public static void initializeFactory(Factory f) {_		if (f == null) {_			throw new NullPointerException()__		}_	_		synchronized (MemorySegmentFactory.class) {_			if (factory == null) {_				factory = f__			}_			else {_				throw new IllegalStateException("Factory has already been initialized")__			}_		}_	};initializes,this,factory,with,the,given,concrete,factory,param,f,the,concrete,factory,to,use,throws,java,lang,illegal,state,exception,thrown,if,this,factory,has,been,initialized,before;public,static,void,initialize,factory,factory,f,if,f,null,throw,new,null,pointer,exception,synchronized,memory,segment,factory,class,if,factory,null,factory,f,else,throw,new,illegal,state,exception,factory,has,already,been,initialized
MemorySegmentFactory -> public static void initializeFactory(Factory f);1455479358;Initializes this factory with the given concrete factory.__@param f The concrete factory to use._@throws java.lang.IllegalStateException Thrown, if this factory has been initialized before.;public static void initializeFactory(Factory f) {_		if (f == null) {_			throw new NullPointerException()__		}_	_		synchronized (MemorySegmentFactory.class) {_			if (factory == null) {_				factory = f__			}_			else {_				throw new IllegalStateException("Factory has already been initialized")__			}_		}_	};initializes,this,factory,with,the,given,concrete,factory,param,f,the,concrete,factory,to,use,throws,java,lang,illegal,state,exception,thrown,if,this,factory,has,been,initialized,before;public,static,void,initialize,factory,factory,f,if,f,null,throw,new,null,pointer,exception,synchronized,memory,segment,factory,class,if,factory,null,factory,f,else,throw,new,illegal,state,exception,factory,has,already,been,initialized
MemorySegmentFactory -> public static MemorySegment wrap(byte[] buffer);1441738685;Creates a new memory segment that targets the given heap memory region._This method should be used to turn short lived byte arrays into memory segments.__@param buffer The heap memory region._@return A new memory segment that targets the given heap memory region.;public static MemorySegment wrap(byte[] buffer) {_		ensureInitialized()__		return factory.wrap(buffer)__	};creates,a,new,memory,segment,that,targets,the,given,heap,memory,region,this,method,should,be,used,to,turn,short,lived,byte,arrays,into,memory,segments,param,buffer,the,heap,memory,region,return,a,new,memory,segment,that,targets,the,given,heap,memory,region;public,static,memory,segment,wrap,byte,buffer,ensure,initialized,return,factory,wrap,buffer
MemorySegmentFactory -> public static MemorySegment wrap(byte[] buffer);1455479358;Creates a new memory segment that targets the given heap memory region._This method should be used to turn short lived byte arrays into memory segments.__@param buffer The heap memory region._@return A new memory segment that targets the given heap memory region.;public static MemorySegment wrap(byte[] buffer) {_		ensureInitialized()__		return factory.wrap(buffer)__	};creates,a,new,memory,segment,that,targets,the,given,heap,memory,region,this,method,should,be,used,to,turn,short,lived,byte,arrays,into,memory,segments,param,buffer,the,heap,memory,region,return,a,new,memory,segment,that,targets,the,given,heap,memory,region;public,static,memory,segment,wrap,byte,buffer,ensure,initialized,return,factory,wrap,buffer
MemorySegmentFactory -> public static MemorySegment wrap(byte[] buffer);1471362593;Creates a new memory segment that targets the given heap memory region._This method should be used to turn short lived byte arrays into memory segments.__@param buffer The heap memory region._@return A new memory segment that targets the given heap memory region.;public static MemorySegment wrap(byte[] buffer) {_		ensureInitialized()__		return factory.wrap(buffer)__	};creates,a,new,memory,segment,that,targets,the,given,heap,memory,region,this,method,should,be,used,to,turn,short,lived,byte,arrays,into,memory,segments,param,buffer,the,heap,memory,region,return,a,new,memory,segment,that,targets,the,given,heap,memory,region;public,static,memory,segment,wrap,byte,buffer,ensure,initialized,return,factory,wrap,buffer
MemorySegmentFactory -> public static MemorySegment wrap(byte[] buffer);1507315082;Creates a new memory segment that targets the given heap memory region._This method should be used to turn short lived byte arrays into memory segments.__@param buffer The heap memory region._@return A new memory segment that targets the given heap memory region.;public static MemorySegment wrap(byte[] buffer) {_		ensureInitialized()__		return factory.wrap(buffer)__	};creates,a,new,memory,segment,that,targets,the,given,heap,memory,region,this,method,should,be,used,to,turn,short,lived,byte,arrays,into,memory,segments,param,buffer,the,heap,memory,region,return,a,new,memory,segment,that,targets,the,given,heap,memory,region;public,static,memory,segment,wrap,byte,buffer,ensure,initialized,return,factory,wrap,buffer
MemorySegmentFactory -> public static MemorySegment wrap(byte[] buffer);1507316227;Creates a new memory segment that targets the given heap memory region.__<p>This method should be used to turn short lived byte arrays into memory segments.__@param buffer The heap memory region._@return A new memory segment that targets the given heap memory region.;public static MemorySegment wrap(byte[] buffer) {_		return new HybridMemorySegment(buffer)__	};creates,a,new,memory,segment,that,targets,the,given,heap,memory,region,p,this,method,should,be,used,to,turn,short,lived,byte,arrays,into,memory,segments,param,buffer,the,heap,memory,region,return,a,new,memory,segment,that,targets,the,given,heap,memory,region;public,static,memory,segment,wrap,byte,buffer,return,new,hybrid,memory,segment,buffer
MemorySegmentFactory -> public static MemorySegment wrap(byte[] buffer);1538389013;Creates a new memory segment that targets the given heap memory region.__<p>This method should be used to turn short lived byte arrays into memory segments.__@param buffer The heap memory region._@return A new memory segment that targets the given heap memory region.;public static MemorySegment wrap(byte[] buffer) {_		return new HybridMemorySegment(buffer)__	};creates,a,new,memory,segment,that,targets,the,given,heap,memory,region,p,this,method,should,be,used,to,turn,short,lived,byte,arrays,into,memory,segments,param,buffer,the,heap,memory,region,return,a,new,memory,segment,that,targets,the,given,heap,memory,region;public,static,memory,segment,wrap,byte,buffer,return,new,hybrid,memory,segment,buffer
MemorySegmentFactory -> Factory -> MemorySegment allocateUnpooledSegment(int size, Object owner)_;1441738685;Allocates some unpooled memory and creates a new memory segment that represents_that memory.__@param size The size of the memory segment to allocate._@param owner The owner to associate with the memory segment._@return A new memory segment, backed by unpooled heap memory.;MemorySegment allocateUnpooledSegment(int size, Object owner)_;allocates,some,unpooled,memory,and,creates,a,new,memory,segment,that,represents,that,memory,param,size,the,size,of,the,memory,segment,to,allocate,param,owner,the,owner,to,associate,with,the,memory,segment,return,a,new,memory,segment,backed,by,unpooled,heap,memory;memory,segment,allocate,unpooled,segment,int,size,object,owner
MemorySegmentFactory -> Factory -> MemorySegment allocateUnpooledSegment(int size, Object owner)_;1455479358;Allocates some unpooled memory and creates a new memory segment that represents_that memory.__@param size The size of the memory segment to allocate._@param owner The owner to associate with the memory segment._@return A new memory segment, backed by unpooled heap memory.;MemorySegment allocateUnpooledSegment(int size, Object owner)_;allocates,some,unpooled,memory,and,creates,a,new,memory,segment,that,represents,that,memory,param,size,the,size,of,the,memory,segment,to,allocate,param,owner,the,owner,to,associate,with,the,memory,segment,return,a,new,memory,segment,backed,by,unpooled,heap,memory;memory,segment,allocate,unpooled,segment,int,size,object,owner
MemorySegmentFactory -> Factory -> MemorySegment allocateUnpooledSegment(int size, Object owner)_;1471362593;Allocates some unpooled memory and creates a new memory segment that represents_that memory.__@param size The size of the memory segment to allocate._@param owner The owner to associate with the memory segment._@return A new memory segment, backed by unpooled heap memory.;MemorySegment allocateUnpooledSegment(int size, Object owner)_;allocates,some,unpooled,memory,and,creates,a,new,memory,segment,that,represents,that,memory,param,size,the,size,of,the,memory,segment,to,allocate,param,owner,the,owner,to,associate,with,the,memory,segment,return,a,new,memory,segment,backed,by,unpooled,heap,memory;memory,segment,allocate,unpooled,segment,int,size,object,owner
MemorySegmentFactory -> Factory -> MemorySegment allocateUnpooledSegment(int size, Object owner)_;1507315082;Allocates some unpooled memory and creates a new memory segment that represents_that memory.__@param size The size of the memory segment to allocate._@param owner The owner to associate with the memory segment._@return A new memory segment, backed by unpooled heap memory.;MemorySegment allocateUnpooledSegment(int size, Object owner)_;allocates,some,unpooled,memory,and,creates,a,new,memory,segment,that,represents,that,memory,param,size,the,size,of,the,memory,segment,to,allocate,param,owner,the,owner,to,associate,with,the,memory,segment,return,a,new,memory,segment,backed,by,unpooled,heap,memory;memory,segment,allocate,unpooled,segment,int,size,object,owner
MemorySegmentFactory -> public static boolean isInitialized();1441738685;Checks whether this memory segment factory has been initialized (with a type to produce).__@return True, if the factory has been initialized, false otherwise.;public static boolean isInitialized() {_		return factory != null__	};checks,whether,this,memory,segment,factory,has,been,initialized,with,a,type,to,produce,return,true,if,the,factory,has,been,initialized,false,otherwise;public,static,boolean,is,initialized,return,factory,null
MemorySegmentFactory -> public static boolean isInitialized();1455479358;Checks whether this memory segment factory has been initialized (with a type to produce).__@return True, if the factory has been initialized, false otherwise.;public static boolean isInitialized() {_		return factory != null__	};checks,whether,this,memory,segment,factory,has,been,initialized,with,a,type,to,produce,return,true,if,the,factory,has,been,initialized,false,otherwise;public,static,boolean,is,initialized,return,factory,null
MemorySegmentFactory -> public static boolean isInitialized();1471362593;Checks whether this memory segment factory has been initialized (with a type to produce).__@return True, if the factory has been initialized, false otherwise.;public static boolean isInitialized() {_		return factory != null__	};checks,whether,this,memory,segment,factory,has,been,initialized,with,a,type,to,produce,return,true,if,the,factory,has,been,initialized,false,otherwise;public,static,boolean,is,initialized,return,factory,null
MemorySegmentFactory -> public static boolean isInitialized();1507315082;Checks whether this memory segment factory has been initialized (with a type to produce).__@return True, if the factory has been initialized, false otherwise.;public static boolean isInitialized() {_		return factory != null__	};checks,whether,this,memory,segment,factory,has,been,initialized,with,a,type,to,produce,return,true,if,the,factory,has,been,initialized,false,otherwise;public,static,boolean,is,initialized,return,factory,null
MemorySegmentFactory -> Factory -> MemorySegment wrapPooledHeapMemory(byte[] memory, Object owner)_;1441738685;Creates a memory segment that wraps the given byte array._<p>_This method is intended to be used for components which pool memory and create_memory segments around long-lived memory regions.___@param memory The heap memory to be represented by the memory segment._@param owner The owner to associate with the memory segment._@return A new memory segment representing the given heap memory.;MemorySegment wrapPooledHeapMemory(byte[] memory, Object owner)_;creates,a,memory,segment,that,wraps,the,given,byte,array,p,this,method,is,intended,to,be,used,for,components,which,pool,memory,and,create,memory,segments,around,long,lived,memory,regions,param,memory,the,heap,memory,to,be,represented,by,the,memory,segment,param,owner,the,owner,to,associate,with,the,memory,segment,return,a,new,memory,segment,representing,the,given,heap,memory;memory,segment,wrap,pooled,heap,memory,byte,memory,object,owner
MemorySegmentFactory -> Factory -> MemorySegment wrapPooledHeapMemory(byte[] memory, Object owner)_;1455479358;Creates a memory segment that wraps the given byte array._<p>_This method is intended to be used for components which pool memory and create_memory segments around long-lived memory regions.___@param memory The heap memory to be represented by the memory segment._@param owner The owner to associate with the memory segment._@return A new memory segment representing the given heap memory.;MemorySegment wrapPooledHeapMemory(byte[] memory, Object owner)_;creates,a,memory,segment,that,wraps,the,given,byte,array,p,this,method,is,intended,to,be,used,for,components,which,pool,memory,and,create,memory,segments,around,long,lived,memory,regions,param,memory,the,heap,memory,to,be,represented,by,the,memory,segment,param,owner,the,owner,to,associate,with,the,memory,segment,return,a,new,memory,segment,representing,the,given,heap,memory;memory,segment,wrap,pooled,heap,memory,byte,memory,object,owner
MemorySegmentFactory -> Factory -> MemorySegment wrapPooledHeapMemory(byte[] memory, Object owner)_;1471362593;Creates a memory segment that wraps the given byte array._<p>_This method is intended to be used for components which pool memory and create_memory segments around long-lived memory regions.___@param memory The heap memory to be represented by the memory segment._@param owner The owner to associate with the memory segment._@return A new memory segment representing the given heap memory.;MemorySegment wrapPooledHeapMemory(byte[] memory, Object owner)_;creates,a,memory,segment,that,wraps,the,given,byte,array,p,this,method,is,intended,to,be,used,for,components,which,pool,memory,and,create,memory,segments,around,long,lived,memory,regions,param,memory,the,heap,memory,to,be,represented,by,the,memory,segment,param,owner,the,owner,to,associate,with,the,memory,segment,return,a,new,memory,segment,representing,the,given,heap,memory;memory,segment,wrap,pooled,heap,memory,byte,memory,object,owner
MemorySegmentFactory -> Factory -> MemorySegment wrapPooledHeapMemory(byte[] memory, Object owner)_;1507315082;Creates a memory segment that wraps the given byte array.__<p>This method is intended to be used for components which pool memory and create_memory segments around long-lived memory regions.___@param memory The heap memory to be represented by the memory segment._@param owner The owner to associate with the memory segment._@return A new memory segment representing the given heap memory.;MemorySegment wrapPooledHeapMemory(byte[] memory, Object owner)_;creates,a,memory,segment,that,wraps,the,given,byte,array,p,this,method,is,intended,to,be,used,for,components,which,pool,memory,and,create,memory,segments,around,long,lived,memory,regions,param,memory,the,heap,memory,to,be,represented,by,the,memory,segment,param,owner,the,owner,to,associate,with,the,memory,segment,return,a,new,memory,segment,representing,the,given,heap,memory;memory,segment,wrap,pooled,heap,memory,byte,memory,object,owner
MemorySegmentFactory -> public static MemorySegment allocateUnpooledSegment(int size, Object owner);1441738685;Allocates some unpooled memory and creates a new memory segment that represents_that memory._<p>_This method is similar to {@link #allocateUnpooledSegment(int)}, but additionally sets_the owner of the memory segment.__@param size The size of the memory segment to allocate._@param owner The owner to associate with the memory segment._@return A new memory segment, backed by unpooled heap memory.;public static MemorySegment allocateUnpooledSegment(int size, Object owner) {_		ensureInitialized()__		return factory.allocateUnpooledSegment(size, owner)__	};allocates,some,unpooled,memory,and,creates,a,new,memory,segment,that,represents,that,memory,p,this,method,is,similar,to,link,allocate,unpooled,segment,int,but,additionally,sets,the,owner,of,the,memory,segment,param,size,the,size,of,the,memory,segment,to,allocate,param,owner,the,owner,to,associate,with,the,memory,segment,return,a,new,memory,segment,backed,by,unpooled,heap,memory;public,static,memory,segment,allocate,unpooled,segment,int,size,object,owner,ensure,initialized,return,factory,allocate,unpooled,segment,size,owner
MemorySegmentFactory -> public static MemorySegment allocateUnpooledSegment(int size, Object owner);1455479358;Allocates some unpooled memory and creates a new memory segment that represents_that memory._<p>_This method is similar to {@link #allocateUnpooledSegment(int)}, but additionally sets_the owner of the memory segment.__@param size The size of the memory segment to allocate._@param owner The owner to associate with the memory segment._@return A new memory segment, backed by unpooled heap memory.;public static MemorySegment allocateUnpooledSegment(int size, Object owner) {_		ensureInitialized()__		return factory.allocateUnpooledSegment(size, owner)__	};allocates,some,unpooled,memory,and,creates,a,new,memory,segment,that,represents,that,memory,p,this,method,is,similar,to,link,allocate,unpooled,segment,int,but,additionally,sets,the,owner,of,the,memory,segment,param,size,the,size,of,the,memory,segment,to,allocate,param,owner,the,owner,to,associate,with,the,memory,segment,return,a,new,memory,segment,backed,by,unpooled,heap,memory;public,static,memory,segment,allocate,unpooled,segment,int,size,object,owner,ensure,initialized,return,factory,allocate,unpooled,segment,size,owner
MemorySegmentFactory -> public static MemorySegment allocateUnpooledSegment(int size, Object owner);1471362593;Allocates some unpooled memory and creates a new memory segment that represents_that memory._<p>_This method is similar to {@link #allocateUnpooledSegment(int)}, but additionally sets_the owner of the memory segment.__@param size The size of the memory segment to allocate._@param owner The owner to associate with the memory segment._@return A new memory segment, backed by unpooled heap memory.;public static MemorySegment allocateUnpooledSegment(int size, Object owner) {_		ensureInitialized()__		return factory.allocateUnpooledSegment(size, owner)__	};allocates,some,unpooled,memory,and,creates,a,new,memory,segment,that,represents,that,memory,p,this,method,is,similar,to,link,allocate,unpooled,segment,int,but,additionally,sets,the,owner,of,the,memory,segment,param,size,the,size,of,the,memory,segment,to,allocate,param,owner,the,owner,to,associate,with,the,memory,segment,return,a,new,memory,segment,backed,by,unpooled,heap,memory;public,static,memory,segment,allocate,unpooled,segment,int,size,object,owner,ensure,initialized,return,factory,allocate,unpooled,segment,size,owner
MemorySegmentFactory -> public static MemorySegment allocateUnpooledSegment(int size, Object owner);1507315082;Allocates some unpooled memory and creates a new memory segment that represents_that memory.__<p>This method is similar to {@link #allocateUnpooledSegment(int)}, but additionally sets_the owner of the memory segment.__@param size The size of the memory segment to allocate._@param owner The owner to associate with the memory segment._@return A new memory segment, backed by unpooled heap memory.;public static MemorySegment allocateUnpooledSegment(int size, Object owner) {_		ensureInitialized()__		return factory.allocateUnpooledSegment(size, owner)__	};allocates,some,unpooled,memory,and,creates,a,new,memory,segment,that,represents,that,memory,p,this,method,is,similar,to,link,allocate,unpooled,segment,int,but,additionally,sets,the,owner,of,the,memory,segment,param,size,the,size,of,the,memory,segment,to,allocate,param,owner,the,owner,to,associate,with,the,memory,segment,return,a,new,memory,segment,backed,by,unpooled,heap,memory;public,static,memory,segment,allocate,unpooled,segment,int,size,object,owner,ensure,initialized,return,factory,allocate,unpooled,segment,size,owner
MemorySegmentFactory -> public static MemorySegment allocateUnpooledSegment(int size, Object owner);1507316227;Allocates some unpooled memory and creates a new memory segment that represents_that memory.__<p>This method is similar to {@link #allocateUnpooledSegment(int)}, but additionally sets_the owner of the memory segment.__@param size The size of the memory segment to allocate._@param owner The owner to associate with the memory segment._@return A new memory segment, backed by unpooled heap memory.;public static MemorySegment allocateUnpooledSegment(int size, Object owner) {_		return new HybridMemorySegment(new byte[size], owner)__	};allocates,some,unpooled,memory,and,creates,a,new,memory,segment,that,represents,that,memory,p,this,method,is,similar,to,link,allocate,unpooled,segment,int,but,additionally,sets,the,owner,of,the,memory,segment,param,size,the,size,of,the,memory,segment,to,allocate,param,owner,the,owner,to,associate,with,the,memory,segment,return,a,new,memory,segment,backed,by,unpooled,heap,memory;public,static,memory,segment,allocate,unpooled,segment,int,size,object,owner,return,new,hybrid,memory,segment,new,byte,size,owner
MemorySegmentFactory -> public static MemorySegment allocateUnpooledSegment(int size, Object owner);1538389013;Allocates some unpooled memory and creates a new memory segment that represents_that memory.__<p>This method is similar to {@link #allocateUnpooledSegment(int)}, but additionally sets_the owner of the memory segment.__@param size The size of the memory segment to allocate._@param owner The owner to associate with the memory segment._@return A new memory segment, backed by unpooled heap memory.;public static MemorySegment allocateUnpooledSegment(int size, Object owner) {_		return new HybridMemorySegment(new byte[size], owner)__	};allocates,some,unpooled,memory,and,creates,a,new,memory,segment,that,represents,that,memory,p,this,method,is,similar,to,link,allocate,unpooled,segment,int,but,additionally,sets,the,owner,of,the,memory,segment,param,size,the,size,of,the,memory,segment,to,allocate,param,owner,the,owner,to,associate,with,the,memory,segment,return,a,new,memory,segment,backed,by,unpooled,heap,memory;public,static,memory,segment,allocate,unpooled,segment,int,size,object,owner,return,new,hybrid,memory,segment,new,byte,size,owner
MemorySegmentFactory -> Factory -> MemorySegment wrapPooledOffHeapMemory(ByteBuffer memory, Object owner)_;1441738685;Creates a memory segment that wraps the off-heap memory backing the given ByteBuffer._Note that the ByteBuffer needs to be a <i>direct ByteBuffer</i>._<p>_This method is intended to be used for components which pool memory and create_memory segments around long-lived memory regions.__@param memory The byte buffer with the off-heap memory to be represented by the memory segment._@param owner The owner to associate with the memory segment._@return A new memory segment representing the given off-heap memory.;MemorySegment wrapPooledOffHeapMemory(ByteBuffer memory, Object owner)_;creates,a,memory,segment,that,wraps,the,off,heap,memory,backing,the,given,byte,buffer,note,that,the,byte,buffer,needs,to,be,a,i,direct,byte,buffer,i,p,this,method,is,intended,to,be,used,for,components,which,pool,memory,and,create,memory,segments,around,long,lived,memory,regions,param,memory,the,byte,buffer,with,the,off,heap,memory,to,be,represented,by,the,memory,segment,param,owner,the,owner,to,associate,with,the,memory,segment,return,a,new,memory,segment,representing,the,given,off,heap,memory;memory,segment,wrap,pooled,off,heap,memory,byte,buffer,memory,object,owner
MemorySegmentFactory -> Factory -> MemorySegment wrapPooledOffHeapMemory(ByteBuffer memory, Object owner)_;1455479358;Creates a memory segment that wraps the off-heap memory backing the given ByteBuffer._Note that the ByteBuffer needs to be a <i>direct ByteBuffer</i>._<p>_This method is intended to be used for components which pool memory and create_memory segments around long-lived memory regions.__@param memory The byte buffer with the off-heap memory to be represented by the memory segment._@param owner The owner to associate with the memory segment._@return A new memory segment representing the given off-heap memory.;MemorySegment wrapPooledOffHeapMemory(ByteBuffer memory, Object owner)_;creates,a,memory,segment,that,wraps,the,off,heap,memory,backing,the,given,byte,buffer,note,that,the,byte,buffer,needs,to,be,a,i,direct,byte,buffer,i,p,this,method,is,intended,to,be,used,for,components,which,pool,memory,and,create,memory,segments,around,long,lived,memory,regions,param,memory,the,byte,buffer,with,the,off,heap,memory,to,be,represented,by,the,memory,segment,param,owner,the,owner,to,associate,with,the,memory,segment,return,a,new,memory,segment,representing,the,given,off,heap,memory;memory,segment,wrap,pooled,off,heap,memory,byte,buffer,memory,object,owner
MemorySegmentFactory -> Factory -> MemorySegment wrapPooledOffHeapMemory(ByteBuffer memory, Object owner)_;1471362593;Creates a memory segment that wraps the off-heap memory backing the given ByteBuffer._Note that the ByteBuffer needs to be a <i>direct ByteBuffer</i>._<p>_This method is intended to be used for components which pool memory and create_memory segments around long-lived memory regions.__@param memory The byte buffer with the off-heap memory to be represented by the memory segment._@param owner The owner to associate with the memory segment._@return A new memory segment representing the given off-heap memory.;MemorySegment wrapPooledOffHeapMemory(ByteBuffer memory, Object owner)_;creates,a,memory,segment,that,wraps,the,off,heap,memory,backing,the,given,byte,buffer,note,that,the,byte,buffer,needs,to,be,a,i,direct,byte,buffer,i,p,this,method,is,intended,to,be,used,for,components,which,pool,memory,and,create,memory,segments,around,long,lived,memory,regions,param,memory,the,byte,buffer,with,the,off,heap,memory,to,be,represented,by,the,memory,segment,param,owner,the,owner,to,associate,with,the,memory,segment,return,a,new,memory,segment,representing,the,given,off,heap,memory;memory,segment,wrap,pooled,off,heap,memory,byte,buffer,memory,object,owner
MemorySegmentFactory -> Factory -> MemorySegment wrapPooledOffHeapMemory(ByteBuffer memory, Object owner)_;1507315082;Creates a memory segment that wraps the off-heap memory backing the given ByteBuffer._Note that the ByteBuffer needs to be a <i>direct ByteBuffer</i>.__<p>This method is intended to be used for components which pool memory and create_memory segments around long-lived memory regions.__@param memory The byte buffer with the off-heap memory to be represented by the memory segment._@param owner The owner to associate with the memory segment._@return A new memory segment representing the given off-heap memory.;MemorySegment wrapPooledOffHeapMemory(ByteBuffer memory, Object owner)_;creates,a,memory,segment,that,wraps,the,off,heap,memory,backing,the,given,byte,buffer,note,that,the,byte,buffer,needs,to,be,a,i,direct,byte,buffer,i,p,this,method,is,intended,to,be,used,for,components,which,pool,memory,and,create,memory,segments,around,long,lived,memory,regions,param,memory,the,byte,buffer,with,the,off,heap,memory,to,be,represented,by,the,memory,segment,param,owner,the,owner,to,associate,with,the,memory,segment,return,a,new,memory,segment,representing,the,given,off,heap,memory;memory,segment,wrap,pooled,off,heap,memory,byte,buffer,memory,object,owner
MemorySegmentFactory -> public static MemorySegment allocateUnpooledSegment(int size);1441738685;Allocates some unpooled memory and creates a new memory segment that represents_that memory._<p>_This method is similar to {@link #allocateUnpooledSegment(int, Object)}, but the_memory segment will have null as the owner.__@param size The size of the memory segment to allocate._@return A new memory segment, backed by unpooled heap memory.;public static MemorySegment allocateUnpooledSegment(int size) {_		return allocateUnpooledSegment(size, null)__	};allocates,some,unpooled,memory,and,creates,a,new,memory,segment,that,represents,that,memory,p,this,method,is,similar,to,link,allocate,unpooled,segment,int,object,but,the,memory,segment,will,have,null,as,the,owner,param,size,the,size,of,the,memory,segment,to,allocate,return,a,new,memory,segment,backed,by,unpooled,heap,memory;public,static,memory,segment,allocate,unpooled,segment,int,size,return,allocate,unpooled,segment,size,null
MemorySegmentFactory -> public static MemorySegment allocateUnpooledSegment(int size);1455479358;Allocates some unpooled memory and creates a new memory segment that represents_that memory._<p>_This method is similar to {@link #allocateUnpooledSegment(int, Object)}, but the_memory segment will have null as the owner.__@param size The size of the memory segment to allocate._@return A new memory segment, backed by unpooled heap memory.;public static MemorySegment allocateUnpooledSegment(int size) {_		return allocateUnpooledSegment(size, null)__	};allocates,some,unpooled,memory,and,creates,a,new,memory,segment,that,represents,that,memory,p,this,method,is,similar,to,link,allocate,unpooled,segment,int,object,but,the,memory,segment,will,have,null,as,the,owner,param,size,the,size,of,the,memory,segment,to,allocate,return,a,new,memory,segment,backed,by,unpooled,heap,memory;public,static,memory,segment,allocate,unpooled,segment,int,size,return,allocate,unpooled,segment,size,null
MemorySegmentFactory -> public static MemorySegment allocateUnpooledSegment(int size);1471362593;Allocates some unpooled memory and creates a new memory segment that represents_that memory._<p>_This method is similar to {@link #allocateUnpooledSegment(int, Object)}, but the_memory segment will have null as the owner.__@param size The size of the memory segment to allocate._@return A new memory segment, backed by unpooled heap memory.;public static MemorySegment allocateUnpooledSegment(int size) {_		return allocateUnpooledSegment(size, null)__	};allocates,some,unpooled,memory,and,creates,a,new,memory,segment,that,represents,that,memory,p,this,method,is,similar,to,link,allocate,unpooled,segment,int,object,but,the,memory,segment,will,have,null,as,the,owner,param,size,the,size,of,the,memory,segment,to,allocate,return,a,new,memory,segment,backed,by,unpooled,heap,memory;public,static,memory,segment,allocate,unpooled,segment,int,size,return,allocate,unpooled,segment,size,null
MemorySegmentFactory -> public static MemorySegment allocateUnpooledSegment(int size);1507315082;Allocates some unpooled memory and creates a new memory segment that represents_that memory.__<p>This method is similar to {@link #allocateUnpooledSegment(int, Object)}, but the_memory segment will have null as the owner.__@param size The size of the memory segment to allocate._@return A new memory segment, backed by unpooled heap memory.;public static MemorySegment allocateUnpooledSegment(int size) {_		return allocateUnpooledSegment(size, null)__	};allocates,some,unpooled,memory,and,creates,a,new,memory,segment,that,represents,that,memory,p,this,method,is,similar,to,link,allocate,unpooled,segment,int,object,but,the,memory,segment,will,have,null,as,the,owner,param,size,the,size,of,the,memory,segment,to,allocate,return,a,new,memory,segment,backed,by,unpooled,heap,memory;public,static,memory,segment,allocate,unpooled,segment,int,size,return,allocate,unpooled,segment,size,null
MemorySegmentFactory -> public static MemorySegment allocateUnpooledSegment(int size);1507316227;Allocates some unpooled memory and creates a new memory segment that represents_that memory.__<p>This method is similar to {@link #allocateUnpooledSegment(int, Object)}, but the_memory segment will have null as the owner.__@param size The size of the memory segment to allocate._@return A new memory segment, backed by unpooled heap memory.;public static MemorySegment allocateUnpooledSegment(int size) {_		return allocateUnpooledSegment(size, null)__	};allocates,some,unpooled,memory,and,creates,a,new,memory,segment,that,represents,that,memory,p,this,method,is,similar,to,link,allocate,unpooled,segment,int,object,but,the,memory,segment,will,have,null,as,the,owner,param,size,the,size,of,the,memory,segment,to,allocate,return,a,new,memory,segment,backed,by,unpooled,heap,memory;public,static,memory,segment,allocate,unpooled,segment,int,size,return,allocate,unpooled,segment,size,null
MemorySegmentFactory -> public static MemorySegment allocateUnpooledSegment(int size);1538389013;Allocates some unpooled memory and creates a new memory segment that represents_that memory.__<p>This method is similar to {@link #allocateUnpooledSegment(int, Object)}, but the_memory segment will have null as the owner.__@param size The size of the memory segment to allocate._@return A new memory segment, backed by unpooled heap memory.;public static MemorySegment allocateUnpooledSegment(int size) {_		return allocateUnpooledSegment(size, null)__	};allocates,some,unpooled,memory,and,creates,a,new,memory,segment,that,represents,that,memory,p,this,method,is,similar,to,link,allocate,unpooled,segment,int,object,but,the,memory,segment,will,have,null,as,the,owner,param,size,the,size,of,the,memory,segment,to,allocate,return,a,new,memory,segment,backed,by,unpooled,heap,memory;public,static,memory,segment,allocate,unpooled,segment,int,size,return,allocate,unpooled,segment,size,null
MemorySegmentFactory -> Factory -> MemorySegment wrap(byte[] memory)_;1441738685;Creates a new memory segment that targets the given heap memory region.__@param memory The heap memory region._@return A new memory segment that targets the given heap memory region.;MemorySegment wrap(byte[] memory)_;creates,a,new,memory,segment,that,targets,the,given,heap,memory,region,param,memory,the,heap,memory,region,return,a,new,memory,segment,that,targets,the,given,heap,memory,region;memory,segment,wrap,byte,memory
MemorySegmentFactory -> Factory -> MemorySegment wrap(byte[] memory)_;1455479358;Creates a new memory segment that targets the given heap memory region.__@param memory The heap memory region._@return A new memory segment that targets the given heap memory region.;MemorySegment wrap(byte[] memory)_;creates,a,new,memory,segment,that,targets,the,given,heap,memory,region,param,memory,the,heap,memory,region,return,a,new,memory,segment,that,targets,the,given,heap,memory,region;memory,segment,wrap,byte,memory
MemorySegmentFactory -> Factory -> MemorySegment wrap(byte[] memory)_;1471362593;Creates a new memory segment that targets the given heap memory region.__@param memory The heap memory region._@return A new memory segment that targets the given heap memory region.;MemorySegment wrap(byte[] memory)_;creates,a,new,memory,segment,that,targets,the,given,heap,memory,region,param,memory,the,heap,memory,region,return,a,new,memory,segment,that,targets,the,given,heap,memory,region;memory,segment,wrap,byte,memory
MemorySegmentFactory -> Factory -> MemorySegment wrap(byte[] memory)_;1507315082;Creates a new memory segment that targets the given heap memory region.__@param memory The heap memory region._@return A new memory segment that targets the given heap memory region.;MemorySegment wrap(byte[] memory)_;creates,a,new,memory,segment,that,targets,the,given,heap,memory,region,param,memory,the,heap,memory,region,return,a,new,memory,segment,that,targets,the,given,heap,memory,region;memory,segment,wrap,byte,memory
MemorySegmentFactory -> private static void ensureInitialized();1471362593;Sets the factory to the {@link HeapMemorySegment#FACTORY} is no factory has been initialized, yet.;private static void ensureInitialized() {_		if (factory == null) {_			synchronized (MemorySegmentFactory.class) {_				if (factory == null) {_					factory = HeapMemorySegment.FACTORY__				}_			}_		}_	};sets,the,factory,to,the,link,heap,memory,segment,factory,is,no,factory,has,been,initialized,yet;private,static,void,ensure,initialized,if,factory,null,synchronized,memory,segment,factory,class,if,factory,null,factory,heap,memory,segment,factory
MemorySegmentFactory -> private static void ensureInitialized();1507315082;Sets the factory to the {@link HeapMemorySegment#FACTORY} if no factory has been initialized, yet.;private static void ensureInitialized() {_		if (factory == null) {_			synchronized (MemorySegmentFactory.class) {_				if (factory == null) {_					factory = HeapMemorySegment.FACTORY__				}_			}_		}_	};sets,the,factory,to,the,link,heap,memory,segment,factory,if,no,factory,has,been,initialized,yet;private,static,void,ensure,initialized,if,factory,null,synchronized,memory,segment,factory,class,if,factory,null,factory,heap,memory,segment,factory
