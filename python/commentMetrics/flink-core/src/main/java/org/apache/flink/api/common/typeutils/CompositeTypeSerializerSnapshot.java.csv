# id;timestamp;commentText;codeText;commentWords;codeWords
CompositeTypeSerializerSnapshot -> public CompositeTypeSerializerSnapshot(Class<S> correspondingSerializerClass);1546956803;Constructor to be used for read instantiation.__@param correspondingSerializerClass the expected class of the new serializer.;public CompositeTypeSerializerSnapshot(Class<S> correspondingSerializerClass) {_		this.correspondingSerializerClass = Preconditions.checkNotNull(correspondingSerializerClass)__	};constructor,to,be,used,for,read,instantiation,param,corresponding,serializer,class,the,expected,class,of,the,new,serializer;public,composite,type,serializer,snapshot,class,s,corresponding,serializer,class,this,corresponding,serializer,class,preconditions,check,not,null,corresponding,serializer,class
CompositeTypeSerializerSnapshot -> public CompositeTypeSerializerSnapshot(Class<S> correspondingSerializerClass);1546966116;Constructor to be used for read instantiation.__@param correspondingSerializerClass the expected class of the new serializer.;public CompositeTypeSerializerSnapshot(Class<S> correspondingSerializerClass) {_		this.correspondingSerializerClass = Preconditions.checkNotNull(correspondingSerializerClass)__	};constructor,to,be,used,for,read,instantiation,param,corresponding,serializer,class,the,expected,class,of,the,new,serializer;public,composite,type,serializer,snapshot,class,s,corresponding,serializer,class,this,corresponding,serializer,class,preconditions,check,not,null,corresponding,serializer,class
CompositeTypeSerializerSnapshot -> public CompositeTypeSerializerSnapshot(Class<S> correspondingSerializerClass);1547801274;Constructor to be used for read instantiation.__@param correspondingSerializerClass the expected class of the new serializer.;public CompositeTypeSerializerSnapshot(Class<S> correspondingSerializerClass) {_		this.correspondingSerializerClass = Preconditions.checkNotNull(correspondingSerializerClass)__	};constructor,to,be,used,for,read,instantiation,param,corresponding,serializer,class,the,expected,class,of,the,new,serializer;public,composite,type,serializer,snapshot,class,s,corresponding,serializer,class,this,corresponding,serializer,class,preconditions,check,not,null,corresponding,serializer,class
CompositeTypeSerializerSnapshot -> public CompositeTypeSerializerSnapshot(Class<S> correspondingSerializerClass);1550119574;Constructor to be used for read instantiation.__@param correspondingSerializerClass the expected class of the new serializer.;public CompositeTypeSerializerSnapshot(Class<S> correspondingSerializerClass) {_		this.correspondingSerializerClass = checkNotNull(correspondingSerializerClass)__	};constructor,to,be,used,for,read,instantiation,param,corresponding,serializer,class,the,expected,class,of,the,new,serializer;public,composite,type,serializer,snapshot,class,s,corresponding,serializer,class,this,corresponding,serializer,class,check,not,null,corresponding,serializer,class
CompositeTypeSerializerSnapshot -> public CompositeTypeSerializerSnapshot(Class<S> correspondingSerializerClass);1550821416;Constructor to be used for read instantiation.__@param correspondingSerializerClass the expected class of the new serializer.;public CompositeTypeSerializerSnapshot(Class<S> correspondingSerializerClass) {_		this.correspondingSerializerClass = checkNotNull(correspondingSerializerClass)__	};constructor,to,be,used,for,read,instantiation,param,corresponding,serializer,class,the,expected,class,of,the,new,serializer;public,composite,type,serializer,snapshot,class,s,corresponding,serializer,class,this,corresponding,serializer,class,check,not,null,corresponding,serializer,class
CompositeTypeSerializerSnapshot -> protected void readOuterSnapshot(int readOuterSnapshotVersion, DataInputView in, ClassLoader userCodeClassLoader) throws IOException;1546956803;Reads the outer snapshot, i.e. any information beyond the nested serializers of the outer serializer.__<p>The base implementation of this methods reads nothing, i.e. it assumes that the outer serializer_only has nested serializers and no extra information. Otherwise, if the outer serializer contains_some extra information that has been persisted as part of the serializer snapshot, this_must be overridden. Note that this method and the corresponding methods_{@link #writeOuterSnapshot(DataOutputView)}, {@link #isOuterSnapshotCompatible(TypeSerializer)}_needs to be implemented.__@param readOuterSnapshotVersion the read version of the outer snapshot._@param in the {@link DataInputView} to read the outer snapshot from._@param userCodeClassLoader the user code class loader.;protected void readOuterSnapshot(int readOuterSnapshotVersion, DataInputView in, ClassLoader userCodeClassLoader) throws IOException {};reads,the,outer,snapshot,i,e,any,information,beyond,the,nested,serializers,of,the,outer,serializer,p,the,base,implementation,of,this,methods,reads,nothing,i,e,it,assumes,that,the,outer,serializer,only,has,nested,serializers,and,no,extra,information,otherwise,if,the,outer,serializer,contains,some,extra,information,that,has,been,persisted,as,part,of,the,serializer,snapshot,this,must,be,overridden,note,that,this,method,and,the,corresponding,methods,link,write,outer,snapshot,data,output,view,link,is,outer,snapshot,compatible,type,serializer,needs,to,be,implemented,param,read,outer,snapshot,version,the,read,version,of,the,outer,snapshot,param,in,the,link,data,input,view,to,read,the,outer,snapshot,from,param,user,code,class,loader,the,user,code,class,loader;protected,void,read,outer,snapshot,int,read,outer,snapshot,version,data,input,view,in,class,loader,user,code,class,loader,throws,ioexception
CompositeTypeSerializerSnapshot -> protected void readOuterSnapshot(int readOuterSnapshotVersion, DataInputView in, ClassLoader userCodeClassLoader) throws IOException;1546966116;Reads the outer snapshot, i.e. any information beyond the nested serializers of the outer serializer.__<p>The base implementation of this methods reads nothing, i.e. it assumes that the outer serializer_only has nested serializers and no extra information. Otherwise, if the outer serializer contains_some extra information that has been persisted as part of the serializer snapshot, this_must be overridden. Note that this method and the corresponding methods_{@link #writeOuterSnapshot(DataOutputView)}, {@link #isOuterSnapshotCompatible(TypeSerializer)}_needs to be implemented.__@param readOuterSnapshotVersion the read version of the outer snapshot._@param in the {@link DataInputView} to read the outer snapshot from._@param userCodeClassLoader the user code class loader.;protected void readOuterSnapshot(int readOuterSnapshotVersion, DataInputView in, ClassLoader userCodeClassLoader) throws IOException {};reads,the,outer,snapshot,i,e,any,information,beyond,the,nested,serializers,of,the,outer,serializer,p,the,base,implementation,of,this,methods,reads,nothing,i,e,it,assumes,that,the,outer,serializer,only,has,nested,serializers,and,no,extra,information,otherwise,if,the,outer,serializer,contains,some,extra,information,that,has,been,persisted,as,part,of,the,serializer,snapshot,this,must,be,overridden,note,that,this,method,and,the,corresponding,methods,link,write,outer,snapshot,data,output,view,link,is,outer,snapshot,compatible,type,serializer,needs,to,be,implemented,param,read,outer,snapshot,version,the,read,version,of,the,outer,snapshot,param,in,the,link,data,input,view,to,read,the,outer,snapshot,from,param,user,code,class,loader,the,user,code,class,loader;protected,void,read,outer,snapshot,int,read,outer,snapshot,version,data,input,view,in,class,loader,user,code,class,loader,throws,ioexception
CompositeTypeSerializerSnapshot -> protected void readOuterSnapshot(int readOuterSnapshotVersion, DataInputView in, ClassLoader userCodeClassLoader) throws IOException;1547801274;Reads the outer snapshot, i.e. any information beyond the nested serializers of the outer serializer.__<p>The base implementation of this methods reads nothing, i.e. it assumes that the outer serializer_only has nested serializers and no extra information. Otherwise, if the outer serializer contains_some extra information that has been persisted as part of the serializer snapshot, this_must be overridden. Note that this method and the corresponding methods_{@link #writeOuterSnapshot(DataOutputView)}, {@link #isOuterSnapshotCompatible(TypeSerializer)}_needs to be implemented.__@param readOuterSnapshotVersion the read version of the outer snapshot._@param in the {@link DataInputView} to read the outer snapshot from._@param userCodeClassLoader the user code class loader.;protected void readOuterSnapshot(int readOuterSnapshotVersion, DataInputView in, ClassLoader userCodeClassLoader) throws IOException {};reads,the,outer,snapshot,i,e,any,information,beyond,the,nested,serializers,of,the,outer,serializer,p,the,base,implementation,of,this,methods,reads,nothing,i,e,it,assumes,that,the,outer,serializer,only,has,nested,serializers,and,no,extra,information,otherwise,if,the,outer,serializer,contains,some,extra,information,that,has,been,persisted,as,part,of,the,serializer,snapshot,this,must,be,overridden,note,that,this,method,and,the,corresponding,methods,link,write,outer,snapshot,data,output,view,link,is,outer,snapshot,compatible,type,serializer,needs,to,be,implemented,param,read,outer,snapshot,version,the,read,version,of,the,outer,snapshot,param,in,the,link,data,input,view,to,read,the,outer,snapshot,from,param,user,code,class,loader,the,user,code,class,loader;protected,void,read,outer,snapshot,int,read,outer,snapshot,version,data,input,view,in,class,loader,user,code,class,loader,throws,ioexception
CompositeTypeSerializerSnapshot -> protected void readOuterSnapshot(int readOuterSnapshotVersion, DataInputView in, ClassLoader userCodeClassLoader) throws IOException;1550119574;Reads the outer snapshot, i.e. any information beyond the nested serializers of the outer serializer.__<p>The base implementation of this methods reads nothing, i.e. it assumes that the outer serializer_only has nested serializers and no extra information. Otherwise, if the outer serializer contains_some extra information that has been persisted as part of the serializer snapshot, this_must be overridden. Note that this method and the corresponding methods_{@link #writeOuterSnapshot(DataOutputView)}, {@link #isOuterSnapshotCompatible(TypeSerializer)}_needs to be implemented.__@param readOuterSnapshotVersion the read version of the outer snapshot._@param in the {@link DataInputView} to read the outer snapshot from._@param userCodeClassLoader the user code class loader.;protected void readOuterSnapshot(int readOuterSnapshotVersion, DataInputView in, ClassLoader userCodeClassLoader) throws IOException {};reads,the,outer,snapshot,i,e,any,information,beyond,the,nested,serializers,of,the,outer,serializer,p,the,base,implementation,of,this,methods,reads,nothing,i,e,it,assumes,that,the,outer,serializer,only,has,nested,serializers,and,no,extra,information,otherwise,if,the,outer,serializer,contains,some,extra,information,that,has,been,persisted,as,part,of,the,serializer,snapshot,this,must,be,overridden,note,that,this,method,and,the,corresponding,methods,link,write,outer,snapshot,data,output,view,link,is,outer,snapshot,compatible,type,serializer,needs,to,be,implemented,param,read,outer,snapshot,version,the,read,version,of,the,outer,snapshot,param,in,the,link,data,input,view,to,read,the,outer,snapshot,from,param,user,code,class,loader,the,user,code,class,loader;protected,void,read,outer,snapshot,int,read,outer,snapshot,version,data,input,view,in,class,loader,user,code,class,loader,throws,ioexception
CompositeTypeSerializerSnapshot -> protected void readOuterSnapshot(int readOuterSnapshotVersion, DataInputView in, ClassLoader userCodeClassLoader) throws IOException;1550821416;Reads the outer snapshot, i.e. any information beyond the nested serializers of the outer serializer.__<p>The base implementation of this methods reads nothing, i.e. it assumes that the outer serializer_only has nested serializers and no extra information. Otherwise, if the outer serializer contains_some extra information that has been persisted as part of the serializer snapshot, this_must be overridden. Note that this method and the corresponding methods_{@link #writeOuterSnapshot(DataOutputView)}, {@link #isOuterSnapshotCompatible(TypeSerializer)}_needs to be implemented.__@param readOuterSnapshotVersion the read version of the outer snapshot._@param in the {@link DataInputView} to read the outer snapshot from._@param userCodeClassLoader the user code class loader.;protected void readOuterSnapshot(int readOuterSnapshotVersion, DataInputView in, ClassLoader userCodeClassLoader) throws IOException {};reads,the,outer,snapshot,i,e,any,information,beyond,the,nested,serializers,of,the,outer,serializer,p,the,base,implementation,of,this,methods,reads,nothing,i,e,it,assumes,that,the,outer,serializer,only,has,nested,serializers,and,no,extra,information,otherwise,if,the,outer,serializer,contains,some,extra,information,that,has,been,persisted,as,part,of,the,serializer,snapshot,this,must,be,overridden,note,that,this,method,and,the,corresponding,methods,link,write,outer,snapshot,data,output,view,link,is,outer,snapshot,compatible,type,serializer,needs,to,be,implemented,param,read,outer,snapshot,version,the,read,version,of,the,outer,snapshot,param,in,the,link,data,input,view,to,read,the,outer,snapshot,from,param,user,code,class,loader,the,user,code,class,loader;protected,void,read,outer,snapshot,int,read,outer,snapshot,version,data,input,view,in,class,loader,user,code,class,loader,throws,ioexception
CompositeTypeSerializerSnapshot -> protected boolean isOuterSnapshotCompatible(S newSerializer);1546956803;Checks whether the outer snapshot is compatible with a given new serializer.__<p>The base implementation of this method just returns {@code true}, i.e. it assumes that the outer serializer_only has nested serializers and no extra information, and therefore the result of the check must always_be true. Otherwise, if the outer serializer contains_some extra information that has been persisted as part of the serializer snapshot, this_must be overridden. Note that this method and the corresponding methods_{@link #writeOuterSnapshot(DataOutputView)}, {@link #readOuterSnapshot(int, DataInputView, ClassLoader)}_needs to be implemented.__@param newSerializer the new serializer, which contains the new outer information to check against.__@return a flag indicating whether or not the new serializer's outer information is compatible with the one_written in this snapshot.;protected boolean isOuterSnapshotCompatible(S newSerializer) {_		return true__	};checks,whether,the,outer,snapshot,is,compatible,with,a,given,new,serializer,p,the,base,implementation,of,this,method,just,returns,code,true,i,e,it,assumes,that,the,outer,serializer,only,has,nested,serializers,and,no,extra,information,and,therefore,the,result,of,the,check,must,always,be,true,otherwise,if,the,outer,serializer,contains,some,extra,information,that,has,been,persisted,as,part,of,the,serializer,snapshot,this,must,be,overridden,note,that,this,method,and,the,corresponding,methods,link,write,outer,snapshot,data,output,view,link,read,outer,snapshot,int,data,input,view,class,loader,needs,to,be,implemented,param,new,serializer,the,new,serializer,which,contains,the,new,outer,information,to,check,against,return,a,flag,indicating,whether,or,not,the,new,serializer,s,outer,information,is,compatible,with,the,one,written,in,this,snapshot;protected,boolean,is,outer,snapshot,compatible,s,new,serializer,return,true
CompositeTypeSerializerSnapshot -> protected boolean isOuterSnapshotCompatible(S newSerializer);1546966116;Checks whether the outer snapshot is compatible with a given new serializer.__<p>The base implementation of this method just returns {@code true}, i.e. it assumes that the outer serializer_only has nested serializers and no extra information, and therefore the result of the check must always_be true. Otherwise, if the outer serializer contains_some extra information that has been persisted as part of the serializer snapshot, this_must be overridden. Note that this method and the corresponding methods_{@link #writeOuterSnapshot(DataOutputView)}, {@link #readOuterSnapshot(int, DataInputView, ClassLoader)}_needs to be implemented.__@param newSerializer the new serializer, which contains the new outer information to check against.__@return a flag indicating whether or not the new serializer's outer information is compatible with the one_written in this snapshot.;protected boolean isOuterSnapshotCompatible(S newSerializer) {_		return true__	};checks,whether,the,outer,snapshot,is,compatible,with,a,given,new,serializer,p,the,base,implementation,of,this,method,just,returns,code,true,i,e,it,assumes,that,the,outer,serializer,only,has,nested,serializers,and,no,extra,information,and,therefore,the,result,of,the,check,must,always,be,true,otherwise,if,the,outer,serializer,contains,some,extra,information,that,has,been,persisted,as,part,of,the,serializer,snapshot,this,must,be,overridden,note,that,this,method,and,the,corresponding,methods,link,write,outer,snapshot,data,output,view,link,read,outer,snapshot,int,data,input,view,class,loader,needs,to,be,implemented,param,new,serializer,the,new,serializer,which,contains,the,new,outer,information,to,check,against,return,a,flag,indicating,whether,or,not,the,new,serializer,s,outer,information,is,compatible,with,the,one,written,in,this,snapshot;protected,boolean,is,outer,snapshot,compatible,s,new,serializer,return,true
CompositeTypeSerializerSnapshot -> protected boolean isOuterSnapshotCompatible(S newSerializer);1547801274;Checks whether the outer snapshot is compatible with a given new serializer.__<p>The base implementation of this method just returns {@code true}, i.e. it assumes that the outer serializer_only has nested serializers and no extra information, and therefore the result of the check must always_be true. Otherwise, if the outer serializer contains_some extra information that has been persisted as part of the serializer snapshot, this_must be overridden. Note that this method and the corresponding methods_{@link #writeOuterSnapshot(DataOutputView)}, {@link #readOuterSnapshot(int, DataInputView, ClassLoader)}_needs to be implemented.__@param newSerializer the new serializer, which contains the new outer information to check against.__@return a flag indicating whether or not the new serializer's outer information is compatible with the one_written in this snapshot.;protected boolean isOuterSnapshotCompatible(S newSerializer) {_		return true__	};checks,whether,the,outer,snapshot,is,compatible,with,a,given,new,serializer,p,the,base,implementation,of,this,method,just,returns,code,true,i,e,it,assumes,that,the,outer,serializer,only,has,nested,serializers,and,no,extra,information,and,therefore,the,result,of,the,check,must,always,be,true,otherwise,if,the,outer,serializer,contains,some,extra,information,that,has,been,persisted,as,part,of,the,serializer,snapshot,this,must,be,overridden,note,that,this,method,and,the,corresponding,methods,link,write,outer,snapshot,data,output,view,link,read,outer,snapshot,int,data,input,view,class,loader,needs,to,be,implemented,param,new,serializer,the,new,serializer,which,contains,the,new,outer,information,to,check,against,return,a,flag,indicating,whether,or,not,the,new,serializer,s,outer,information,is,compatible,with,the,one,written,in,this,snapshot;protected,boolean,is,outer,snapshot,compatible,s,new,serializer,return,true
CompositeTypeSerializerSnapshot -> protected boolean isOuterSnapshotCompatible(S newSerializer);1550119574;Checks whether the outer snapshot is compatible with a given new serializer.__<p>The base implementation of this method just returns {@code true}, i.e. it assumes that the outer serializer_only has nested serializers and no extra information, and therefore the result of the check must always_be true. Otherwise, if the outer serializer contains_some extra information that has been persisted as part of the serializer snapshot, this_must be overridden. Note that this method and the corresponding methods_{@link #writeOuterSnapshot(DataOutputView)}, {@link #readOuterSnapshot(int, DataInputView, ClassLoader)}_needs to be implemented.__@param newSerializer the new serializer, which contains the new outer information to check against.__@return a flag indicating whether or not the new serializer's outer information is compatible with the one_written in this snapshot.;protected boolean isOuterSnapshotCompatible(S newSerializer) {_		return true__	};checks,whether,the,outer,snapshot,is,compatible,with,a,given,new,serializer,p,the,base,implementation,of,this,method,just,returns,code,true,i,e,it,assumes,that,the,outer,serializer,only,has,nested,serializers,and,no,extra,information,and,therefore,the,result,of,the,check,must,always,be,true,otherwise,if,the,outer,serializer,contains,some,extra,information,that,has,been,persisted,as,part,of,the,serializer,snapshot,this,must,be,overridden,note,that,this,method,and,the,corresponding,methods,link,write,outer,snapshot,data,output,view,link,read,outer,snapshot,int,data,input,view,class,loader,needs,to,be,implemented,param,new,serializer,the,new,serializer,which,contains,the,new,outer,information,to,check,against,return,a,flag,indicating,whether,or,not,the,new,serializer,s,outer,information,is,compatible,with,the,one,written,in,this,snapshot;protected,boolean,is,outer,snapshot,compatible,s,new,serializer,return,true
CompositeTypeSerializerSnapshot -> protected boolean isOuterSnapshotCompatible(S newSerializer);1550821416;Checks whether the outer snapshot is compatible with a given new serializer.__<p>The base implementation of this method just returns {@code true}, i.e. it assumes that the outer serializer_only has nested serializers and no extra information, and therefore the result of the check must always_be true. Otherwise, if the outer serializer contains_some extra information that has been persisted as part of the serializer snapshot, this_must be overridden. Note that this method and the corresponding methods_{@link #writeOuterSnapshot(DataOutputView)}, {@link #readOuterSnapshot(int, DataInputView, ClassLoader)}_needs to be implemented.__@param newSerializer the new serializer, which contains the new outer information to check against.__@return a flag indicating whether or not the new serializer's outer information is compatible with the one_written in this snapshot.;protected boolean isOuterSnapshotCompatible(S newSerializer) {_		return true__	};checks,whether,the,outer,snapshot,is,compatible,with,a,given,new,serializer,p,the,base,implementation,of,this,method,just,returns,code,true,i,e,it,assumes,that,the,outer,serializer,only,has,nested,serializers,and,no,extra,information,and,therefore,the,result,of,the,check,must,always,be,true,otherwise,if,the,outer,serializer,contains,some,extra,information,that,has,been,persisted,as,part,of,the,serializer,snapshot,this,must,be,overridden,note,that,this,method,and,the,corresponding,methods,link,write,outer,snapshot,data,output,view,link,read,outer,snapshot,int,data,input,view,class,loader,needs,to,be,implemented,param,new,serializer,the,new,serializer,which,contains,the,new,outer,information,to,check,against,return,a,flag,indicating,whether,or,not,the,new,serializer,s,outer,information,is,compatible,with,the,one,written,in,this,snapshot;protected,boolean,is,outer,snapshot,compatible,s,new,serializer,return,true
CompositeTypeSerializerSnapshot -> protected abstract S createOuterSerializerWithNestedSerializers(TypeSerializer<?>[] nestedSerializers)_;1546956803;Creates an instance of the outer serializer with a given array of its nested serializers.__@param nestedSerializers array of nested serializers to create the outer serializer with.__@return an instance of the outer serializer.;protected abstract S createOuterSerializerWithNestedSerializers(TypeSerializer<?>[] nestedSerializers)_;creates,an,instance,of,the,outer,serializer,with,a,given,array,of,its,nested,serializers,param,nested,serializers,array,of,nested,serializers,to,create,the,outer,serializer,with,return,an,instance,of,the,outer,serializer;protected,abstract,s,create,outer,serializer,with,nested,serializers,type,serializer,nested,serializers
CompositeTypeSerializerSnapshot -> protected abstract S createOuterSerializerWithNestedSerializers(TypeSerializer<?>[] nestedSerializers)_;1546966116;Creates an instance of the outer serializer with a given array of its nested serializers.__@param nestedSerializers array of nested serializers to create the outer serializer with.__@return an instance of the outer serializer.;protected abstract S createOuterSerializerWithNestedSerializers(TypeSerializer<?>[] nestedSerializers)_;creates,an,instance,of,the,outer,serializer,with,a,given,array,of,its,nested,serializers,param,nested,serializers,array,of,nested,serializers,to,create,the,outer,serializer,with,return,an,instance,of,the,outer,serializer;protected,abstract,s,create,outer,serializer,with,nested,serializers,type,serializer,nested,serializers
CompositeTypeSerializerSnapshot -> protected abstract S createOuterSerializerWithNestedSerializers(TypeSerializer<?>[] nestedSerializers)_;1547801274;Creates an instance of the outer serializer with a given array of its nested serializers.__@param nestedSerializers array of nested serializers to create the outer serializer with.__@return an instance of the outer serializer.;protected abstract S createOuterSerializerWithNestedSerializers(TypeSerializer<?>[] nestedSerializers)_;creates,an,instance,of,the,outer,serializer,with,a,given,array,of,its,nested,serializers,param,nested,serializers,array,of,nested,serializers,to,create,the,outer,serializer,with,return,an,instance,of,the,outer,serializer;protected,abstract,s,create,outer,serializer,with,nested,serializers,type,serializer,nested,serializers
CompositeTypeSerializerSnapshot -> protected abstract S createOuterSerializerWithNestedSerializers(TypeSerializer<?>[] nestedSerializers)_;1550119574;Creates an instance of the outer serializer with a given array of its nested serializers.__@param nestedSerializers array of nested serializers to create the outer serializer with.__@return an instance of the outer serializer.;protected abstract S createOuterSerializerWithNestedSerializers(TypeSerializer<?>[] nestedSerializers)_;creates,an,instance,of,the,outer,serializer,with,a,given,array,of,its,nested,serializers,param,nested,serializers,array,of,nested,serializers,to,create,the,outer,serializer,with,return,an,instance,of,the,outer,serializer;protected,abstract,s,create,outer,serializer,with,nested,serializers,type,serializer,nested,serializers
CompositeTypeSerializerSnapshot -> protected abstract S createOuterSerializerWithNestedSerializers(TypeSerializer<?>[] nestedSerializers)_;1550821416;Creates an instance of the outer serializer with a given array of its nested serializers.__@param nestedSerializers array of nested serializers to create the outer serializer with.__@return an instance of the outer serializer.;protected abstract S createOuterSerializerWithNestedSerializers(TypeSerializer<?>[] nestedSerializers)_;creates,an,instance,of,the,outer,serializer,with,a,given,array,of,its,nested,serializers,param,nested,serializers,array,of,nested,serializers,to,create,the,outer,serializer,with,return,an,instance,of,the,outer,serializer;protected,abstract,s,create,outer,serializer,with,nested,serializers,type,serializer,nested,serializers
CompositeTypeSerializerSnapshot -> protected abstract int getCurrentOuterSnapshotVersion()_;1546956803;Returns the version of the current outer snapshot's written binary format.__@return the version of the current outer snapshot's written binary format.;protected abstract int getCurrentOuterSnapshotVersion()_;returns,the,version,of,the,current,outer,snapshot,s,written,binary,format,return,the,version,of,the,current,outer,snapshot,s,written,binary,format;protected,abstract,int,get,current,outer,snapshot,version
CompositeTypeSerializerSnapshot -> protected abstract int getCurrentOuterSnapshotVersion()_;1546966116;Returns the version of the current outer snapshot's written binary format.__@return the version of the current outer snapshot's written binary format.;protected abstract int getCurrentOuterSnapshotVersion()_;returns,the,version,of,the,current,outer,snapshot,s,written,binary,format,return,the,version,of,the,current,outer,snapshot,s,written,binary,format;protected,abstract,int,get,current,outer,snapshot,version
CompositeTypeSerializerSnapshot -> protected abstract int getCurrentOuterSnapshotVersion()_;1547801274;Returns the version of the current outer snapshot's written binary format.__@return the version of the current outer snapshot's written binary format.;protected abstract int getCurrentOuterSnapshotVersion()_;returns,the,version,of,the,current,outer,snapshot,s,written,binary,format,return,the,version,of,the,current,outer,snapshot,s,written,binary,format;protected,abstract,int,get,current,outer,snapshot,version
CompositeTypeSerializerSnapshot -> protected abstract int getCurrentOuterSnapshotVersion()_;1550119574;Returns the version of the current outer snapshot's written binary format.__@return the version of the current outer snapshot's written binary format.;protected abstract int getCurrentOuterSnapshotVersion()_;returns,the,version,of,the,current,outer,snapshot,s,written,binary,format,return,the,version,of,the,current,outer,snapshot,s,written,binary,format;protected,abstract,int,get,current,outer,snapshot,version
CompositeTypeSerializerSnapshot -> protected abstract int getCurrentOuterSnapshotVersion()_;1550821416;Returns the version of the current outer snapshot's written binary format.__@return the version of the current outer snapshot's written binary format.;protected abstract int getCurrentOuterSnapshotVersion()_;returns,the,version,of,the,current,outer,snapshot,s,written,binary,format,return,the,version,of,the,current,outer,snapshot,s,written,binary,format;protected,abstract,int,get,current,outer,snapshot,version
CompositeTypeSerializerSnapshot -> protected void writeOuterSnapshot(DataOutputView out) throws IOException;1546956803;Writes the outer snapshot, i.e. any information beyond the nested serializers of the outer serializer.__<p>The base implementation of this methods writes nothing, i.e. it assumes that the outer serializer_only has nested serializers and no extra information. Otherwise, if the outer serializer contains_some extra information that needs to be persisted as part of the serializer snapshot, this_must be overridden. Note that this method and the corresponding methods_{@link #readOuterSnapshot(int, DataInputView, ClassLoader)}, {@link #isOuterSnapshotCompatible(TypeSerializer)}_needs to be implemented.__@param out the {@link DataOutputView} to write the outer snapshot to.;protected void writeOuterSnapshot(DataOutputView out) throws IOException {};writes,the,outer,snapshot,i,e,any,information,beyond,the,nested,serializers,of,the,outer,serializer,p,the,base,implementation,of,this,methods,writes,nothing,i,e,it,assumes,that,the,outer,serializer,only,has,nested,serializers,and,no,extra,information,otherwise,if,the,outer,serializer,contains,some,extra,information,that,needs,to,be,persisted,as,part,of,the,serializer,snapshot,this,must,be,overridden,note,that,this,method,and,the,corresponding,methods,link,read,outer,snapshot,int,data,input,view,class,loader,link,is,outer,snapshot,compatible,type,serializer,needs,to,be,implemented,param,out,the,link,data,output,view,to,write,the,outer,snapshot,to;protected,void,write,outer,snapshot,data,output,view,out,throws,ioexception
CompositeTypeSerializerSnapshot -> protected void writeOuterSnapshot(DataOutputView out) throws IOException;1546966116;Writes the outer snapshot, i.e. any information beyond the nested serializers of the outer serializer.__<p>The base implementation of this methods writes nothing, i.e. it assumes that the outer serializer_only has nested serializers and no extra information. Otherwise, if the outer serializer contains_some extra information that needs to be persisted as part of the serializer snapshot, this_must be overridden. Note that this method and the corresponding methods_{@link #readOuterSnapshot(int, DataInputView, ClassLoader)}, {@link #isOuterSnapshotCompatible(TypeSerializer)}_needs to be implemented.__@param out the {@link DataOutputView} to write the outer snapshot to.;protected void writeOuterSnapshot(DataOutputView out) throws IOException {};writes,the,outer,snapshot,i,e,any,information,beyond,the,nested,serializers,of,the,outer,serializer,p,the,base,implementation,of,this,methods,writes,nothing,i,e,it,assumes,that,the,outer,serializer,only,has,nested,serializers,and,no,extra,information,otherwise,if,the,outer,serializer,contains,some,extra,information,that,needs,to,be,persisted,as,part,of,the,serializer,snapshot,this,must,be,overridden,note,that,this,method,and,the,corresponding,methods,link,read,outer,snapshot,int,data,input,view,class,loader,link,is,outer,snapshot,compatible,type,serializer,needs,to,be,implemented,param,out,the,link,data,output,view,to,write,the,outer,snapshot,to;protected,void,write,outer,snapshot,data,output,view,out,throws,ioexception
CompositeTypeSerializerSnapshot -> protected void writeOuterSnapshot(DataOutputView out) throws IOException;1547801274;Writes the outer snapshot, i.e. any information beyond the nested serializers of the outer serializer.__<p>The base implementation of this methods writes nothing, i.e. it assumes that the outer serializer_only has nested serializers and no extra information. Otherwise, if the outer serializer contains_some extra information that needs to be persisted as part of the serializer snapshot, this_must be overridden. Note that this method and the corresponding methods_{@link #readOuterSnapshot(int, DataInputView, ClassLoader)}, {@link #isOuterSnapshotCompatible(TypeSerializer)}_needs to be implemented.__@param out the {@link DataOutputView} to write the outer snapshot to.;protected void writeOuterSnapshot(DataOutputView out) throws IOException {};writes,the,outer,snapshot,i,e,any,information,beyond,the,nested,serializers,of,the,outer,serializer,p,the,base,implementation,of,this,methods,writes,nothing,i,e,it,assumes,that,the,outer,serializer,only,has,nested,serializers,and,no,extra,information,otherwise,if,the,outer,serializer,contains,some,extra,information,that,needs,to,be,persisted,as,part,of,the,serializer,snapshot,this,must,be,overridden,note,that,this,method,and,the,corresponding,methods,link,read,outer,snapshot,int,data,input,view,class,loader,link,is,outer,snapshot,compatible,type,serializer,needs,to,be,implemented,param,out,the,link,data,output,view,to,write,the,outer,snapshot,to;protected,void,write,outer,snapshot,data,output,view,out,throws,ioexception
CompositeTypeSerializerSnapshot -> protected void writeOuterSnapshot(DataOutputView out) throws IOException;1550119574;Writes the outer snapshot, i.e. any information beyond the nested serializers of the outer serializer.__<p>The base implementation of this methods writes nothing, i.e. it assumes that the outer serializer_only has nested serializers and no extra information. Otherwise, if the outer serializer contains_some extra information that needs to be persisted as part of the serializer snapshot, this_must be overridden. Note that this method and the corresponding methods_{@link #readOuterSnapshot(int, DataInputView, ClassLoader)}, {@link #isOuterSnapshotCompatible(TypeSerializer)}_needs to be implemented.__@param out the {@link DataOutputView} to write the outer snapshot to.;protected void writeOuterSnapshot(DataOutputView out) throws IOException {};writes,the,outer,snapshot,i,e,any,information,beyond,the,nested,serializers,of,the,outer,serializer,p,the,base,implementation,of,this,methods,writes,nothing,i,e,it,assumes,that,the,outer,serializer,only,has,nested,serializers,and,no,extra,information,otherwise,if,the,outer,serializer,contains,some,extra,information,that,needs,to,be,persisted,as,part,of,the,serializer,snapshot,this,must,be,overridden,note,that,this,method,and,the,corresponding,methods,link,read,outer,snapshot,int,data,input,view,class,loader,link,is,outer,snapshot,compatible,type,serializer,needs,to,be,implemented,param,out,the,link,data,output,view,to,write,the,outer,snapshot,to;protected,void,write,outer,snapshot,data,output,view,out,throws,ioexception
CompositeTypeSerializerSnapshot -> protected void writeOuterSnapshot(DataOutputView out) throws IOException;1550821416;Writes the outer snapshot, i.e. any information beyond the nested serializers of the outer serializer.__<p>The base implementation of this methods writes nothing, i.e. it assumes that the outer serializer_only has nested serializers and no extra information. Otherwise, if the outer serializer contains_some extra information that needs to be persisted as part of the serializer snapshot, this_must be overridden. Note that this method and the corresponding methods_{@link #readOuterSnapshot(int, DataInputView, ClassLoader)}, {@link #isOuterSnapshotCompatible(TypeSerializer)}_needs to be implemented.__@param out the {@link DataOutputView} to write the outer snapshot to.;protected void writeOuterSnapshot(DataOutputView out) throws IOException {};writes,the,outer,snapshot,i,e,any,information,beyond,the,nested,serializers,of,the,outer,serializer,p,the,base,implementation,of,this,methods,writes,nothing,i,e,it,assumes,that,the,outer,serializer,only,has,nested,serializers,and,no,extra,information,otherwise,if,the,outer,serializer,contains,some,extra,information,that,needs,to,be,persisted,as,part,of,the,serializer,snapshot,this,must,be,overridden,note,that,this,method,and,the,corresponding,methods,link,read,outer,snapshot,int,data,input,view,class,loader,link,is,outer,snapshot,compatible,type,serializer,needs,to,be,implemented,param,out,the,link,data,output,view,to,write,the,outer,snapshot,to;protected,void,write,outer,snapshot,data,output,view,out,throws,ioexception
CompositeTypeSerializerSnapshot -> @SuppressWarnings("unchecked") 	public CompositeTypeSerializerSnapshot(S serializerInstance);1546956803;Constructor to be used for writing the snapshot.__@param serializerInstance an instance of the originating serializer of this snapshot.;@SuppressWarnings("unchecked")_	public CompositeTypeSerializerSnapshot(S serializerInstance) {_		Preconditions.checkNotNull(serializerInstance)__		this.compositeSerializerSnapshot = new CompositeSerializerSnapshot(getNestedSerializers(serializerInstance))__		this.correspondingSerializerClass = (Class<S>) serializerInstance.getClass()__	};constructor,to,be,used,for,writing,the,snapshot,param,serializer,instance,an,instance,of,the,originating,serializer,of,this,snapshot;suppress,warnings,unchecked,public,composite,type,serializer,snapshot,s,serializer,instance,preconditions,check,not,null,serializer,instance,this,composite,serializer,snapshot,new,composite,serializer,snapshot,get,nested,serializers,serializer,instance,this,corresponding,serializer,class,class,s,serializer,instance,get,class
CompositeTypeSerializerSnapshot -> @SuppressWarnings("unchecked") 	public CompositeTypeSerializerSnapshot(S serializerInstance);1546966116;Constructor to be used for writing the snapshot.__@param serializerInstance an instance of the originating serializer of this snapshot.;@SuppressWarnings("unchecked")_	public CompositeTypeSerializerSnapshot(S serializerInstance) {_		Preconditions.checkNotNull(serializerInstance)__		this.nestedSerializersSnapshotDelegate = new NestedSerializersSnapshotDelegate(getNestedSerializers(serializerInstance))__		this.correspondingSerializerClass = (Class<S>) serializerInstance.getClass()__	};constructor,to,be,used,for,writing,the,snapshot,param,serializer,instance,an,instance,of,the,originating,serializer,of,this,snapshot;suppress,warnings,unchecked,public,composite,type,serializer,snapshot,s,serializer,instance,preconditions,check,not,null,serializer,instance,this,nested,serializers,snapshot,delegate,new,nested,serializers,snapshot,delegate,get,nested,serializers,serializer,instance,this,corresponding,serializer,class,class,s,serializer,instance,get,class
CompositeTypeSerializerSnapshot -> @SuppressWarnings("unchecked") 	public CompositeTypeSerializerSnapshot(S serializerInstance);1547801274;Constructor to be used for writing the snapshot.__@param serializerInstance an instance of the originating serializer of this snapshot.;@SuppressWarnings("unchecked")_	public CompositeTypeSerializerSnapshot(S serializerInstance) {_		Preconditions.checkNotNull(serializerInstance)__		this.nestedSerializersSnapshotDelegate = new NestedSerializersSnapshotDelegate(getNestedSerializers(serializerInstance))__		this.correspondingSerializerClass = (Class<S>) serializerInstance.getClass()__	};constructor,to,be,used,for,writing,the,snapshot,param,serializer,instance,an,instance,of,the,originating,serializer,of,this,snapshot;suppress,warnings,unchecked,public,composite,type,serializer,snapshot,s,serializer,instance,preconditions,check,not,null,serializer,instance,this,nested,serializers,snapshot,delegate,new,nested,serializers,snapshot,delegate,get,nested,serializers,serializer,instance,this,corresponding,serializer,class,class,s,serializer,instance,get,class
CompositeTypeSerializerSnapshot -> @SuppressWarnings("unchecked") 	public CompositeTypeSerializerSnapshot(S serializerInstance);1550119574;Constructor to be used for writing the snapshot.__@param serializerInstance an instance of the originating serializer of this snapshot.;@SuppressWarnings("unchecked")_	public CompositeTypeSerializerSnapshot(S serializerInstance) {_		checkNotNull(serializerInstance)__		this.nestedSerializersSnapshotDelegate = new NestedSerializersSnapshotDelegate(getNestedSerializers(serializerInstance))__		this.correspondingSerializerClass = (Class<S>) serializerInstance.getClass()__	};constructor,to,be,used,for,writing,the,snapshot,param,serializer,instance,an,instance,of,the,originating,serializer,of,this,snapshot;suppress,warnings,unchecked,public,composite,type,serializer,snapshot,s,serializer,instance,check,not,null,serializer,instance,this,nested,serializers,snapshot,delegate,new,nested,serializers,snapshot,delegate,get,nested,serializers,serializer,instance,this,corresponding,serializer,class,class,s,serializer,instance,get,class
CompositeTypeSerializerSnapshot -> @SuppressWarnings("unchecked") 	public CompositeTypeSerializerSnapshot(S serializerInstance);1550821416;Constructor to be used for writing the snapshot.__@param serializerInstance an instance of the originating serializer of this snapshot.;@SuppressWarnings("unchecked")_	public CompositeTypeSerializerSnapshot(S serializerInstance) {_		checkNotNull(serializerInstance)__		this.nestedSerializersSnapshotDelegate = new NestedSerializersSnapshotDelegate(getNestedSerializers(serializerInstance))__		this.correspondingSerializerClass = (Class<S>) serializerInstance.getClass()__	};constructor,to,be,used,for,writing,the,snapshot,param,serializer,instance,an,instance,of,the,originating,serializer,of,this,snapshot;suppress,warnings,unchecked,public,composite,type,serializer,snapshot,s,serializer,instance,check,not,null,serializer,instance,this,nested,serializers,snapshot,delegate,new,nested,serializers,snapshot,delegate,get,nested,serializers,serializer,instance,this,corresponding,serializer,class,class,s,serializer,instance,get,class
CompositeTypeSerializerSnapshot -> protected abstract TypeSerializer<?>[] getNestedSerializers(S outerSerializer)_;1546956803;Gets the nested serializers from the outer serializer.__@param outerSerializer the outer serializer.__@return the nested serializers.;protected abstract TypeSerializer<?>[] getNestedSerializers(S outerSerializer)_;gets,the,nested,serializers,from,the,outer,serializer,param,outer,serializer,the,outer,serializer,return,the,nested,serializers;protected,abstract,type,serializer,get,nested,serializers,s,outer,serializer
CompositeTypeSerializerSnapshot -> protected abstract TypeSerializer<?>[] getNestedSerializers(S outerSerializer)_;1546966116;Gets the nested serializers from the outer serializer.__@param outerSerializer the outer serializer.__@return the nested serializers.;protected abstract TypeSerializer<?>[] getNestedSerializers(S outerSerializer)_;gets,the,nested,serializers,from,the,outer,serializer,param,outer,serializer,the,outer,serializer,return,the,nested,serializers;protected,abstract,type,serializer,get,nested,serializers,s,outer,serializer
CompositeTypeSerializerSnapshot -> protected abstract TypeSerializer<?>[] getNestedSerializers(S outerSerializer)_;1547801274;Gets the nested serializers from the outer serializer.__@param outerSerializer the outer serializer.__@return the nested serializers.;protected abstract TypeSerializer<?>[] getNestedSerializers(S outerSerializer)_;gets,the,nested,serializers,from,the,outer,serializer,param,outer,serializer,the,outer,serializer,return,the,nested,serializers;protected,abstract,type,serializer,get,nested,serializers,s,outer,serializer
CompositeTypeSerializerSnapshot -> protected abstract TypeSerializer<?>[] getNestedSerializers(S outerSerializer)_;1550119574;Gets the nested serializers from the outer serializer.__@param outerSerializer the outer serializer.__@return the nested serializers.;protected abstract TypeSerializer<?>[] getNestedSerializers(S outerSerializer)_;gets,the,nested,serializers,from,the,outer,serializer,param,outer,serializer,the,outer,serializer,return,the,nested,serializers;protected,abstract,type,serializer,get,nested,serializers,s,outer,serializer
CompositeTypeSerializerSnapshot -> protected abstract TypeSerializer<?>[] getNestedSerializers(S outerSerializer)_;1550821416;Gets the nested serializers from the outer serializer.__@param outerSerializer the outer serializer.__@return the nested serializers.;protected abstract TypeSerializer<?>[] getNestedSerializers(S outerSerializer)_;gets,the,nested,serializers,from,the,outer,serializer,param,outer,serializer,the,outer,serializer,return,the,nested,serializers;protected,abstract,type,serializer,get,nested,serializers,s,outer,serializer
