# id;timestamp;commentText;codeText;commentWords;codeWords
NullableSerializer -> public static <T> TypeSerializer<T> wrapIfNullIsNotSupported( 		@Nonnull TypeSerializer<T> originalSerializer, boolean padNullValueIfFixedLen);1537531551;This method tries to serialize {@code null} value with the {@code originalSerializer}_and wraps it in case of {@link NullPointerException}, otherwise it returns the {@code originalSerializer}.__@param originalSerializer serializer to wrap and add {@code null} support_@param padNullValueIfFixedLen pad null value to preserve the fixed length of original serializer_@return serializer which supports {@code null} values;public static <T> TypeSerializer<T> wrapIfNullIsNotSupported(_		@Nonnull TypeSerializer<T> originalSerializer, boolean padNullValueIfFixedLen) {_		return checkIfNullSupported(originalSerializer) ?_			originalSerializer : wrap(originalSerializer, padNullValueIfFixedLen)__	};this,method,tries,to,serialize,code,null,value,with,the,code,original,serializer,and,wraps,it,in,case,of,link,null,pointer,exception,otherwise,it,returns,the,code,original,serializer,param,original,serializer,serializer,to,wrap,and,add,code,null,support,param,pad,null,value,if,fixed,len,pad,null,value,to,preserve,the,fixed,length,of,original,serializer,return,serializer,which,supports,code,null,values;public,static,t,type,serializer,t,wrap,if,null,is,not,supported,nonnull,type,serializer,t,original,serializer,boolean,pad,null,value,if,fixed,len,return,check,if,null,supported,original,serializer,original,serializer,wrap,original,serializer,pad,null,value,if,fixed,len
NullableSerializer -> public static <T> TypeSerializer<T> wrapIfNullIsNotSupported( 		@Nonnull TypeSerializer<T> originalSerializer, boolean padNullValueIfFixedLen);1548860007;This method tries to serialize {@code null} value with the {@code originalSerializer}_and wraps it in case of {@link NullPointerException}, otherwise it returns the {@code originalSerializer}.__@param originalSerializer     serializer to wrap and add {@code null} support_@param padNullValueIfFixedLen pad null value to preserve the fixed length of original serializer_@return serializer which supports {@code null} values;public static <T> TypeSerializer<T> wrapIfNullIsNotSupported(_		@Nonnull TypeSerializer<T> originalSerializer, boolean padNullValueIfFixedLen) {_		return checkIfNullSupported(originalSerializer) ?_			originalSerializer : wrap(originalSerializer, padNullValueIfFixedLen)__	};this,method,tries,to,serialize,code,null,value,with,the,code,original,serializer,and,wraps,it,in,case,of,link,null,pointer,exception,otherwise,it,returns,the,code,original,serializer,param,original,serializer,serializer,to,wrap,and,add,code,null,support,param,pad,null,value,if,fixed,len,pad,null,value,to,preserve,the,fixed,length,of,original,serializer,return,serializer,which,supports,code,null,values;public,static,t,type,serializer,t,wrap,if,null,is,not,supported,nonnull,type,serializer,t,original,serializer,boolean,pad,null,value,if,fixed,len,return,check,if,null,supported,original,serializer,original,serializer,wrap,original,serializer,pad,null,value,if,fixed,len
NullableSerializer -> public static <T> TypeSerializer<T> wrapIfNullIsNotSupported( 		@Nonnull TypeSerializer<T> originalSerializer, boolean padNullValueIfFixedLen);1550652777;This method tries to serialize {@code null} value with the {@code originalSerializer}_and wraps it in case of {@link NullPointerException}, otherwise it returns the {@code originalSerializer}.__@param originalSerializer     serializer to wrap and add {@code null} support_@param padNullValueIfFixedLen pad null value to preserve the fixed length of original serializer_@return serializer which supports {@code null} values;public static <T> TypeSerializer<T> wrapIfNullIsNotSupported(_		@Nonnull TypeSerializer<T> originalSerializer, boolean padNullValueIfFixedLen) {_		return checkIfNullSupported(originalSerializer) ?_			originalSerializer : wrap(originalSerializer, padNullValueIfFixedLen)__	};this,method,tries,to,serialize,code,null,value,with,the,code,original,serializer,and,wraps,it,in,case,of,link,null,pointer,exception,otherwise,it,returns,the,code,original,serializer,param,original,serializer,serializer,to,wrap,and,add,code,null,support,param,pad,null,value,if,fixed,len,pad,null,value,to,preserve,the,fixed,length,of,original,serializer,return,serializer,which,supports,code,null,values;public,static,t,type,serializer,t,wrap,if,null,is,not,supported,nonnull,type,serializer,t,original,serializer,boolean,pad,null,value,if,fixed,len,return,check,if,null,supported,original,serializer,original,serializer,wrap,original,serializer,pad,null,value,if,fixed,len
NullableSerializer -> public static <T> TypeSerializer<T> wrap( 		@Nonnull TypeSerializer<T> originalSerializer, boolean padNullValueIfFixedLen);1537531551;This method wraps the {@code originalSerializer} with the {@code NullableSerializer} if not already wrapped.__@param originalSerializer serializer to wrap and add {@code null} support_@param padNullValueIfFixedLen pad null value to preserve the fixed length of original serializer_@return wrapped serializer which supports {@code null} values;public static <T> TypeSerializer<T> wrap(_		@Nonnull TypeSerializer<T> originalSerializer, boolean padNullValueIfFixedLen) {_		return originalSerializer instanceof NullableSerializer ?_			originalSerializer : new NullableSerializer<>(originalSerializer, padNullValueIfFixedLen)__	};this,method,wraps,the,code,original,serializer,with,the,code,nullable,serializer,if,not,already,wrapped,param,original,serializer,serializer,to,wrap,and,add,code,null,support,param,pad,null,value,if,fixed,len,pad,null,value,to,preserve,the,fixed,length,of,original,serializer,return,wrapped,serializer,which,supports,code,null,values;public,static,t,type,serializer,t,wrap,nonnull,type,serializer,t,original,serializer,boolean,pad,null,value,if,fixed,len,return,original,serializer,instanceof,nullable,serializer,original,serializer,new,nullable,serializer,original,serializer,pad,null,value,if,fixed,len
NullableSerializer -> public static <T> TypeSerializer<T> wrap( 		@Nonnull TypeSerializer<T> originalSerializer, boolean padNullValueIfFixedLen);1548860007;This method wraps the {@code originalSerializer} with the {@code NullableSerializer} if not already wrapped.__@param originalSerializer     serializer to wrap and add {@code null} support_@param padNullValueIfFixedLen pad null value to preserve the fixed length of original serializer_@return wrapped serializer which supports {@code null} values;public static <T> TypeSerializer<T> wrap(_		@Nonnull TypeSerializer<T> originalSerializer, boolean padNullValueIfFixedLen) {_		return originalSerializer instanceof NullableSerializer ?_			originalSerializer : new NullableSerializer<>(originalSerializer, padNullValueIfFixedLen)__	};this,method,wraps,the,code,original,serializer,with,the,code,nullable,serializer,if,not,already,wrapped,param,original,serializer,serializer,to,wrap,and,add,code,null,support,param,pad,null,value,if,fixed,len,pad,null,value,to,preserve,the,fixed,length,of,original,serializer,return,wrapped,serializer,which,supports,code,null,values;public,static,t,type,serializer,t,wrap,nonnull,type,serializer,t,original,serializer,boolean,pad,null,value,if,fixed,len,return,original,serializer,instanceof,nullable,serializer,original,serializer,new,nullable,serializer,original,serializer,pad,null,value,if,fixed,len
NullableSerializer -> public static <T> TypeSerializer<T> wrap( 		@Nonnull TypeSerializer<T> originalSerializer, boolean padNullValueIfFixedLen);1550652777;This method wraps the {@code originalSerializer} with the {@code NullableSerializer} if not already wrapped.__@param originalSerializer     serializer to wrap and add {@code null} support_@param padNullValueIfFixedLen pad null value to preserve the fixed length of original serializer_@return wrapped serializer which supports {@code null} values;public static <T> TypeSerializer<T> wrap(_		@Nonnull TypeSerializer<T> originalSerializer, boolean padNullValueIfFixedLen) {_		return originalSerializer instanceof NullableSerializer ?_			originalSerializer : new NullableSerializer<>(originalSerializer, padNullValueIfFixedLen)__	};this,method,wraps,the,code,original,serializer,with,the,code,nullable,serializer,if,not,already,wrapped,param,original,serializer,serializer,to,wrap,and,add,code,null,support,param,pad,null,value,if,fixed,len,pad,null,value,to,preserve,the,fixed,length,of,original,serializer,return,wrapped,serializer,which,supports,code,null,values;public,static,t,type,serializer,t,wrap,nonnull,type,serializer,t,original,serializer,boolean,pad,null,value,if,fixed,len,return,original,serializer,instanceof,nullable,serializer,original,serializer,new,nullable,serializer,original,serializer,pad,null,value,if,fixed,len
NullableSerializer -> public static <T> boolean checkIfNullSupported(@Nonnull TypeSerializer<T> serializer);1537531551;This method checks if {@code serializer} supports {@code null} value.__@param serializer serializer to check;public static <T> boolean checkIfNullSupported(@Nonnull TypeSerializer<T> serializer) {_		int length = serializer.getLength() > 0 ? serializer.getLength() : 1__		DataOutputSerializer dos = new DataOutputSerializer(length)__		try {_			serializer.serialize(null, dos)__		} catch (IOException | RuntimeException e) {_			return false__		}_		Preconditions.checkArgument(_			serializer.getLength() < 0 || serializer.getLength() == dos.getCopyOfBuffer().length,_			"The serialized form of the null value should have the same length " +_				"as any other if the length is fixed in the serializer")__		DataInputDeserializer dis = new DataInputDeserializer(dos.getSharedBuffer())__		try {_			Preconditions.checkArgument(serializer.deserialize(dis) == null)__		} catch (IOException e) {_			throw new RuntimeException(_				String.format("Unexpected failure to deserialize just serialized null value with %s",_					serializer.getClass().getName()), e)__		}_		Preconditions.checkArgument(_			serializer.copy(null) == null,_			"Serializer %s has to be able properly copy null value if it can serialize it",_			serializer.getClass().getName())__		return true__	};this,method,checks,if,code,serializer,supports,code,null,value,param,serializer,serializer,to,check;public,static,t,boolean,check,if,null,supported,nonnull,type,serializer,t,serializer,int,length,serializer,get,length,0,serializer,get,length,1,data,output,serializer,dos,new,data,output,serializer,length,try,serializer,serialize,null,dos,catch,ioexception,runtime,exception,e,return,false,preconditions,check,argument,serializer,get,length,0,serializer,get,length,dos,get,copy,of,buffer,length,the,serialized,form,of,the,null,value,should,have,the,same,length,as,any,other,if,the,length,is,fixed,in,the,serializer,data,input,deserializer,dis,new,data,input,deserializer,dos,get,shared,buffer,try,preconditions,check,argument,serializer,deserialize,dis,null,catch,ioexception,e,throw,new,runtime,exception,string,format,unexpected,failure,to,deserialize,just,serialized,null,value,with,s,serializer,get,class,get,name,e,preconditions,check,argument,serializer,copy,null,null,serializer,s,has,to,be,able,properly,copy,null,value,if,it,can,serialize,it,serializer,get,class,get,name,return,true
NullableSerializer -> public static <T> boolean checkIfNullSupported(@Nonnull TypeSerializer<T> serializer);1548860007;This method checks if {@code serializer} supports {@code null} value.__@param serializer serializer to check;public static <T> boolean checkIfNullSupported(@Nonnull TypeSerializer<T> serializer) {_		int length = serializer.getLength() > 0 ? serializer.getLength() : 1__		DataOutputSerializer dos = new DataOutputSerializer(length)__		try {_			serializer.serialize(null, dos)__		}_		catch (IOException | RuntimeException e) {_			return false__		}_		checkArgument(_			serializer.getLength() < 0 || serializer.getLength() == dos.getCopyOfBuffer().length,_			"The serialized form of the null value should have the same length " +_				"as any other if the length is fixed in the serializer")__		DataInputDeserializer dis = new DataInputDeserializer(dos.getSharedBuffer())__		try {_			checkArgument(serializer.deserialize(dis) == null)__		}_		catch (IOException e) {_			throw new RuntimeException(_				String.format("Unexpected failure to deserialize just serialized null value with %s",_					serializer.getClass().getName()), e)__		}_		checkArgument(_			serializer.copy(null) == null,_			"Serializer %s has to be able properly copy null value if it can serialize it",_			serializer.getClass().getName())__		return true__	};this,method,checks,if,code,serializer,supports,code,null,value,param,serializer,serializer,to,check;public,static,t,boolean,check,if,null,supported,nonnull,type,serializer,t,serializer,int,length,serializer,get,length,0,serializer,get,length,1,data,output,serializer,dos,new,data,output,serializer,length,try,serializer,serialize,null,dos,catch,ioexception,runtime,exception,e,return,false,check,argument,serializer,get,length,0,serializer,get,length,dos,get,copy,of,buffer,length,the,serialized,form,of,the,null,value,should,have,the,same,length,as,any,other,if,the,length,is,fixed,in,the,serializer,data,input,deserializer,dis,new,data,input,deserializer,dos,get,shared,buffer,try,check,argument,serializer,deserialize,dis,null,catch,ioexception,e,throw,new,runtime,exception,string,format,unexpected,failure,to,deserialize,just,serialized,null,value,with,s,serializer,get,class,get,name,e,check,argument,serializer,copy,null,null,serializer,s,has,to,be,able,properly,copy,null,value,if,it,can,serialize,it,serializer,get,class,get,name,return,true
NullableSerializer -> public static <T> boolean checkIfNullSupported(@Nonnull TypeSerializer<T> serializer);1550652777;This method checks if {@code serializer} supports {@code null} value.__@param serializer serializer to check;public static <T> boolean checkIfNullSupported(@Nonnull TypeSerializer<T> serializer) {_		int length = serializer.getLength() > 0 ? serializer.getLength() : 1__		DataOutputSerializer dos = new DataOutputSerializer(length)__		try {_			serializer.serialize(null, dos)__		}_		catch (IOException | RuntimeException e) {_			return false__		}_		checkArgument(_			serializer.getLength() < 0 || serializer.getLength() == dos.getCopyOfBuffer().length,_			"The serialized form of the null value should have the same length " +_				"as any other if the length is fixed in the serializer")__		DataInputDeserializer dis = new DataInputDeserializer(dos.getSharedBuffer())__		try {_			checkArgument(serializer.deserialize(dis) == null)__		}_		catch (IOException e) {_			throw new RuntimeException(_				String.format("Unexpected failure to deserialize just serialized null value with %s",_					serializer.getClass().getName()), e)__		}_		checkArgument(_			serializer.copy(null) == null,_			"Serializer %s has to be able properly copy null value if it can serialize it",_			serializer.getClass().getName())__		return true__	};this,method,checks,if,code,serializer,supports,code,null,value,param,serializer,serializer,to,check;public,static,t,boolean,check,if,null,supported,nonnull,type,serializer,t,serializer,int,length,serializer,get,length,0,serializer,get,length,1,data,output,serializer,dos,new,data,output,serializer,length,try,serializer,serialize,null,dos,catch,ioexception,runtime,exception,e,return,false,check,argument,serializer,get,length,0,serializer,get,length,dos,get,copy,of,buffer,length,the,serialized,form,of,the,null,value,should,have,the,same,length,as,any,other,if,the,length,is,fixed,in,the,serializer,data,input,deserializer,dis,new,data,input,deserializer,dos,get,shared,buffer,try,check,argument,serializer,deserialize,dis,null,catch,ioexception,e,throw,new,runtime,exception,string,format,unexpected,failure,to,deserialize,just,serialized,null,value,with,s,serializer,get,class,get,name,e,check,argument,serializer,copy,null,null,serializer,s,has,to,be,able,properly,copy,null,value,if,it,can,serialize,it,serializer,get,class,get,name,return,true
NullableSerializer -> NullableSerializerConfigSnapshot -> public NullableSerializerConfigSnapshot();1548860007;This empty nullary constructor is required for deserializing the configuration.;public NullableSerializerConfigSnapshot() {_		};this,empty,nullary,constructor,is,required,for,deserializing,the,configuration;public,nullable,serializer,config,snapshot
NullableSerializer -> NullableSerializerConfigSnapshot -> public NullableSerializerConfigSnapshot();1550652777;This empty nullary constructor is required for deserializing the configuration.;public NullableSerializerConfigSnapshot() {_		};this,empty,nullary,constructor,is,required,for,deserializing,the,configuration;public,nullable,serializer,config,snapshot
