# id;timestamp;commentText;codeText;commentWords;codeWords
KryoSerializer -> private static LinkedHashMap<String, KryoRegistration> buildKryoRegistrations( 			Class<?> serializedType, 			LinkedHashSet<Class<?>> registeredTypes, 			LinkedHashMap<Class<?>, Class<? extends Serializer<?>>> registeredTypesWithSerializerClasses, 			LinkedHashMap<Class<?>, ExecutionConfig.SerializableSerializer<?>> registeredTypesWithSerializers);1494180263;Utility method that takes lists of registered types and their serializers, and resolve_them into a single list such that the result will resemble the final registration_result in Kryo.;private static LinkedHashMap<String, KryoRegistration> buildKryoRegistrations(_			Class<?> serializedType,_			LinkedHashSet<Class<?>> registeredTypes,_			LinkedHashMap<Class<?>, Class<? extends Serializer<?>>> registeredTypesWithSerializerClasses,_			LinkedHashMap<Class<?>, ExecutionConfig.SerializableSerializer<?>> registeredTypesWithSerializers) {__		final LinkedHashMap<String, KryoRegistration> kryoRegistrations = new LinkedHashMap<>()___		kryoRegistrations.put(serializedType.getName(), new KryoRegistration(serializedType))___		for (Class<?> registeredType : checkNotNull(registeredTypes)) {_			kryoRegistrations.put(registeredType.getName(), new KryoRegistration(registeredType))__		}__		for (Map.Entry<Class<?>, Class<? extends Serializer<?>>> registeredTypeWithSerializerClassEntry :_				checkNotNull(registeredTypesWithSerializerClasses).entrySet()) {__			kryoRegistrations.put(_					registeredTypeWithSerializerClassEntry.getKey().getName(),_					new KryoRegistration(_							registeredTypeWithSerializerClassEntry.getKey(),_							registeredTypeWithSerializerClassEntry.getValue()))__		}__		for (Map.Entry<Class<?>, ExecutionConfig.SerializableSerializer<?>> registeredTypeWithSerializerEntry :_				checkNotNull(registeredTypesWithSerializers).entrySet()) {__			kryoRegistrations.put(_					registeredTypeWithSerializerEntry.getKey().getName(),_					new KryoRegistration(_							registeredTypeWithSerializerEntry.getKey(),_							registeredTypeWithSerializerEntry.getValue()))__		}__		kryoRegistrations.put(_				GenericData.Array.class.getName(),_				new KryoRegistration(_						GenericData.Array.class,_						new ExecutionConfig.SerializableSerializer<>(new Serializers.SpecificInstanceCollectionSerializerForArrayList())))___		return kryoRegistrations__	};utility,method,that,takes,lists,of,registered,types,and,their,serializers,and,resolve,them,into,a,single,list,such,that,the,result,will,resemble,the,final,registration,result,in,kryo;private,static,linked,hash,map,string,kryo,registration,build,kryo,registrations,class,serialized,type,linked,hash,set,class,registered,types,linked,hash,map,class,class,extends,serializer,registered,types,with,serializer,classes,linked,hash,map,class,execution,config,serializable,serializer,registered,types,with,serializers,final,linked,hash,map,string,kryo,registration,kryo,registrations,new,linked,hash,map,kryo,registrations,put,serialized,type,get,name,new,kryo,registration,serialized,type,for,class,registered,type,check,not,null,registered,types,kryo,registrations,put,registered,type,get,name,new,kryo,registration,registered,type,for,map,entry,class,class,extends,serializer,registered,type,with,serializer,class,entry,check,not,null,registered,types,with,serializer,classes,entry,set,kryo,registrations,put,registered,type,with,serializer,class,entry,get,key,get,name,new,kryo,registration,registered,type,with,serializer,class,entry,get,key,registered,type,with,serializer,class,entry,get,value,for,map,entry,class,execution,config,serializable,serializer,registered,type,with,serializer,entry,check,not,null,registered,types,with,serializers,entry,set,kryo,registrations,put,registered,type,with,serializer,entry,get,key,get,name,new,kryo,registration,registered,type,with,serializer,entry,get,key,registered,type,with,serializer,entry,get,value,kryo,registrations,put,generic,data,array,class,get,name,new,kryo,registration,generic,data,array,class,new,execution,config,serializable,serializer,new,serializers,specific,instance,collection,serializer,for,array,list,return,kryo,registrations
KryoSerializer -> private static LinkedHashMap<String, KryoRegistration> buildKryoRegistrations( 			Class<?> serializedType, 			LinkedHashSet<Class<?>> registeredTypes, 			LinkedHashMap<Class<?>, Class<? extends Serializer<?>>> registeredTypesWithSerializerClasses, 			LinkedHashMap<Class<?>, ExecutionConfig.SerializableSerializer<?>> registeredTypesWithSerializers);1494658833;Utility method that takes lists of registered types and their serializers, and resolve_them into a single list such that the result will resemble the final registration_result in Kryo.;private static LinkedHashMap<String, KryoRegistration> buildKryoRegistrations(_			Class<?> serializedType,_			LinkedHashSet<Class<?>> registeredTypes,_			LinkedHashMap<Class<?>, Class<? extends Serializer<?>>> registeredTypesWithSerializerClasses,_			LinkedHashMap<Class<?>, ExecutionConfig.SerializableSerializer<?>> registeredTypesWithSerializers) {__		final LinkedHashMap<String, KryoRegistration> kryoRegistrations = new LinkedHashMap<>()___		kryoRegistrations.put(serializedType.getName(), new KryoRegistration(serializedType))___		for (Class<?> registeredType : checkNotNull(registeredTypes)) {_			kryoRegistrations.put(registeredType.getName(), new KryoRegistration(registeredType))__		}__		for (Map.Entry<Class<?>, Class<? extends Serializer<?>>> registeredTypeWithSerializerClassEntry :_				checkNotNull(registeredTypesWithSerializerClasses).entrySet()) {__			kryoRegistrations.put(_					registeredTypeWithSerializerClassEntry.getKey().getName(),_					new KryoRegistration(_							registeredTypeWithSerializerClassEntry.getKey(),_							registeredTypeWithSerializerClassEntry.getValue()))__		}__		for (Map.Entry<Class<?>, ExecutionConfig.SerializableSerializer<?>> registeredTypeWithSerializerEntry :_				checkNotNull(registeredTypesWithSerializers).entrySet()) {__			kryoRegistrations.put(_					registeredTypeWithSerializerEntry.getKey().getName(),_					new KryoRegistration(_							registeredTypeWithSerializerEntry.getKey(),_							registeredTypeWithSerializerEntry.getValue()))__		}__		kryoRegistrations.put(_				GenericData.Array.class.getName(),_				new KryoRegistration(_						GenericData.Array.class,_						new ExecutionConfig.SerializableSerializer<>(new Serializers.SpecificInstanceCollectionSerializerForArrayList())))___		return kryoRegistrations__	};utility,method,that,takes,lists,of,registered,types,and,their,serializers,and,resolve,them,into,a,single,list,such,that,the,result,will,resemble,the,final,registration,result,in,kryo;private,static,linked,hash,map,string,kryo,registration,build,kryo,registrations,class,serialized,type,linked,hash,set,class,registered,types,linked,hash,map,class,class,extends,serializer,registered,types,with,serializer,classes,linked,hash,map,class,execution,config,serializable,serializer,registered,types,with,serializers,final,linked,hash,map,string,kryo,registration,kryo,registrations,new,linked,hash,map,kryo,registrations,put,serialized,type,get,name,new,kryo,registration,serialized,type,for,class,registered,type,check,not,null,registered,types,kryo,registrations,put,registered,type,get,name,new,kryo,registration,registered,type,for,map,entry,class,class,extends,serializer,registered,type,with,serializer,class,entry,check,not,null,registered,types,with,serializer,classes,entry,set,kryo,registrations,put,registered,type,with,serializer,class,entry,get,key,get,name,new,kryo,registration,registered,type,with,serializer,class,entry,get,key,registered,type,with,serializer,class,entry,get,value,for,map,entry,class,execution,config,serializable,serializer,registered,type,with,serializer,entry,check,not,null,registered,types,with,serializers,entry,set,kryo,registrations,put,registered,type,with,serializer,entry,get,key,get,name,new,kryo,registration,registered,type,with,serializer,entry,get,key,registered,type,with,serializer,entry,get,value,kryo,registrations,put,generic,data,array,class,get,name,new,kryo,registration,generic,data,array,class,new,execution,config,serializable,serializer,new,serializers,specific,instance,collection,serializer,for,array,list,return,kryo,registrations
KryoSerializer -> private static LinkedHashMap<String, KryoRegistration> buildKryoRegistrations( 			Class<?> serializedType, 			LinkedHashSet<Class<?>> registeredTypes, 			LinkedHashMap<Class<?>, Class<? extends Serializer<?>>> registeredTypesWithSerializerClasses, 			LinkedHashMap<Class<?>, ExecutionConfig.SerializableSerializer<?>> registeredTypesWithSerializers);1495142377;Utility method that takes lists of registered types and their serializers, and resolve_them into a single list such that the result will resemble the final registration_result in Kryo.;private static LinkedHashMap<String, KryoRegistration> buildKryoRegistrations(_			Class<?> serializedType,_			LinkedHashSet<Class<?>> registeredTypes,_			LinkedHashMap<Class<?>, Class<? extends Serializer<?>>> registeredTypesWithSerializerClasses,_			LinkedHashMap<Class<?>, ExecutionConfig.SerializableSerializer<?>> registeredTypesWithSerializers) {__		final LinkedHashMap<String, KryoRegistration> kryoRegistrations = new LinkedHashMap<>()___		kryoRegistrations.put(serializedType.getName(), new KryoRegistration(serializedType))___		for (Class<?> registeredType : checkNotNull(registeredTypes)) {_			kryoRegistrations.put(registeredType.getName(), new KryoRegistration(registeredType))__		}__		for (Map.Entry<Class<?>, Class<? extends Serializer<?>>> registeredTypeWithSerializerClassEntry :_				checkNotNull(registeredTypesWithSerializerClasses).entrySet()) {__			kryoRegistrations.put(_					registeredTypeWithSerializerClassEntry.getKey().getName(),_					new KryoRegistration(_							registeredTypeWithSerializerClassEntry.getKey(),_							registeredTypeWithSerializerClassEntry.getValue()))__		}__		for (Map.Entry<Class<?>, ExecutionConfig.SerializableSerializer<?>> registeredTypeWithSerializerEntry :_				checkNotNull(registeredTypesWithSerializers).entrySet()) {__			kryoRegistrations.put(_					registeredTypeWithSerializerEntry.getKey().getName(),_					new KryoRegistration(_							registeredTypeWithSerializerEntry.getKey(),_							registeredTypeWithSerializerEntry.getValue()))__		}__		kryoRegistrations.put(_				GenericData.Array.class.getName(),_				new KryoRegistration(_						GenericData.Array.class,_						new ExecutionConfig.SerializableSerializer<>(new Serializers.SpecificInstanceCollectionSerializerForArrayList())))___		return kryoRegistrations__	};utility,method,that,takes,lists,of,registered,types,and,their,serializers,and,resolve,them,into,a,single,list,such,that,the,result,will,resemble,the,final,registration,result,in,kryo;private,static,linked,hash,map,string,kryo,registration,build,kryo,registrations,class,serialized,type,linked,hash,set,class,registered,types,linked,hash,map,class,class,extends,serializer,registered,types,with,serializer,classes,linked,hash,map,class,execution,config,serializable,serializer,registered,types,with,serializers,final,linked,hash,map,string,kryo,registration,kryo,registrations,new,linked,hash,map,kryo,registrations,put,serialized,type,get,name,new,kryo,registration,serialized,type,for,class,registered,type,check,not,null,registered,types,kryo,registrations,put,registered,type,get,name,new,kryo,registration,registered,type,for,map,entry,class,class,extends,serializer,registered,type,with,serializer,class,entry,check,not,null,registered,types,with,serializer,classes,entry,set,kryo,registrations,put,registered,type,with,serializer,class,entry,get,key,get,name,new,kryo,registration,registered,type,with,serializer,class,entry,get,key,registered,type,with,serializer,class,entry,get,value,for,map,entry,class,execution,config,serializable,serializer,registered,type,with,serializer,entry,check,not,null,registered,types,with,serializers,entry,set,kryo,registrations,put,registered,type,with,serializer,entry,get,key,get,name,new,kryo,registration,registered,type,with,serializer,entry,get,key,registered,type,with,serializer,entry,get,value,kryo,registrations,put,generic,data,array,class,get,name,new,kryo,registration,generic,data,array,class,new,execution,config,serializable,serializer,new,serializers,specific,instance,collection,serializer,for,array,list,return,kryo,registrations
KryoSerializer -> private static LinkedHashMap<String, KryoRegistration> buildKryoRegistrations( 			Class<?> serializedType, 			LinkedHashSet<Class<?>> registeredTypes, 			LinkedHashMap<Class<?>, Class<? extends Serializer<?>>> registeredTypesWithSerializerClasses, 			LinkedHashMap<Class<?>, ExecutionConfig.SerializableSerializer<?>> registeredTypesWithSerializers);1509723634;Utility method that takes lists of registered types and their serializers, and resolve_them into a single list such that the result will resemble the final registration_result in Kryo.;private static LinkedHashMap<String, KryoRegistration> buildKryoRegistrations(_			Class<?> serializedType,_			LinkedHashSet<Class<?>> registeredTypes,_			LinkedHashMap<Class<?>, Class<? extends Serializer<?>>> registeredTypesWithSerializerClasses,_			LinkedHashMap<Class<?>, ExecutionConfig.SerializableSerializer<?>> registeredTypesWithSerializers) {__		final LinkedHashMap<String, KryoRegistration> kryoRegistrations = new LinkedHashMap<>()___		kryoRegistrations.put(serializedType.getName(), new KryoRegistration(serializedType))___		for (Class<?> registeredType : checkNotNull(registeredTypes)) {_			kryoRegistrations.put(registeredType.getName(), new KryoRegistration(registeredType))__		}__		for (Map.Entry<Class<?>, Class<? extends Serializer<?>>> registeredTypeWithSerializerClassEntry :_				checkNotNull(registeredTypesWithSerializerClasses).entrySet()) {__			kryoRegistrations.put(_					registeredTypeWithSerializerClassEntry.getKey().getName(),_					new KryoRegistration(_							registeredTypeWithSerializerClassEntry.getKey(),_							registeredTypeWithSerializerClassEntry.getValue()))__		}__		for (Map.Entry<Class<?>, ExecutionConfig.SerializableSerializer<?>> registeredTypeWithSerializerEntry :_				checkNotNull(registeredTypesWithSerializers).entrySet()) {__			kryoRegistrations.put(_					registeredTypeWithSerializerEntry.getKey().getName(),_					new KryoRegistration(_							registeredTypeWithSerializerEntry.getKey(),_							registeredTypeWithSerializerEntry.getValue()))__		}__		_		Serializers.addAvroGenericDataArrayRegistration(kryoRegistrations)___		return kryoRegistrations__	};utility,method,that,takes,lists,of,registered,types,and,their,serializers,and,resolve,them,into,a,single,list,such,that,the,result,will,resemble,the,final,registration,result,in,kryo;private,static,linked,hash,map,string,kryo,registration,build,kryo,registrations,class,serialized,type,linked,hash,set,class,registered,types,linked,hash,map,class,class,extends,serializer,registered,types,with,serializer,classes,linked,hash,map,class,execution,config,serializable,serializer,registered,types,with,serializers,final,linked,hash,map,string,kryo,registration,kryo,registrations,new,linked,hash,map,kryo,registrations,put,serialized,type,get,name,new,kryo,registration,serialized,type,for,class,registered,type,check,not,null,registered,types,kryo,registrations,put,registered,type,get,name,new,kryo,registration,registered,type,for,map,entry,class,class,extends,serializer,registered,type,with,serializer,class,entry,check,not,null,registered,types,with,serializer,classes,entry,set,kryo,registrations,put,registered,type,with,serializer,class,entry,get,key,get,name,new,kryo,registration,registered,type,with,serializer,class,entry,get,key,registered,type,with,serializer,class,entry,get,value,for,map,entry,class,execution,config,serializable,serializer,registered,type,with,serializer,entry,check,not,null,registered,types,with,serializers,entry,set,kryo,registrations,put,registered,type,with,serializer,entry,get,key,get,name,new,kryo,registration,registered,type,with,serializer,entry,get,key,registered,type,with,serializer,entry,get,value,serializers,add,avro,generic,data,array,registration,kryo,registrations,return,kryo,registrations
KryoSerializer -> private static LinkedHashMap<String, KryoRegistration> buildKryoRegistrations( 			Class<?> serializedType, 			LinkedHashSet<Class<?>> registeredTypes, 			LinkedHashMap<Class<?>, Class<? extends Serializer<?>>> registeredTypesWithSerializerClasses, 			LinkedHashMap<Class<?>, ExecutionConfig.SerializableSerializer<?>> registeredTypesWithSerializers);1509723634;Utility method that takes lists of registered types and their serializers, and resolve_them into a single list such that the result will resemble the final registration_result in Kryo.;private static LinkedHashMap<String, KryoRegistration> buildKryoRegistrations(_			Class<?> serializedType,_			LinkedHashSet<Class<?>> registeredTypes,_			LinkedHashMap<Class<?>, Class<? extends Serializer<?>>> registeredTypesWithSerializerClasses,_			LinkedHashMap<Class<?>, ExecutionConfig.SerializableSerializer<?>> registeredTypesWithSerializers) {__		final LinkedHashMap<String, KryoRegistration> kryoRegistrations = new LinkedHashMap<>()___		kryoRegistrations.put(serializedType.getName(), new KryoRegistration(serializedType))___		for (Class<?> registeredType : checkNotNull(registeredTypes)) {_			kryoRegistrations.put(registeredType.getName(), new KryoRegistration(registeredType))__		}__		for (Map.Entry<Class<?>, Class<? extends Serializer<?>>> registeredTypeWithSerializerClassEntry :_				checkNotNull(registeredTypesWithSerializerClasses).entrySet()) {__			kryoRegistrations.put(_					registeredTypeWithSerializerClassEntry.getKey().getName(),_					new KryoRegistration(_							registeredTypeWithSerializerClassEntry.getKey(),_							registeredTypeWithSerializerClassEntry.getValue()))__		}__		for (Map.Entry<Class<?>, ExecutionConfig.SerializableSerializer<?>> registeredTypeWithSerializerEntry :_				checkNotNull(registeredTypesWithSerializers).entrySet()) {__			kryoRegistrations.put(_					registeredTypeWithSerializerEntry.getKey().getName(),_					new KryoRegistration(_							registeredTypeWithSerializerEntry.getKey(),_							registeredTypeWithSerializerEntry.getValue()))__		}__		_		AvroUtils.getAvroUtils().addAvroGenericDataArrayRegistration(kryoRegistrations)___		return kryoRegistrations__	};utility,method,that,takes,lists,of,registered,types,and,their,serializers,and,resolve,them,into,a,single,list,such,that,the,result,will,resemble,the,final,registration,result,in,kryo;private,static,linked,hash,map,string,kryo,registration,build,kryo,registrations,class,serialized,type,linked,hash,set,class,registered,types,linked,hash,map,class,class,extends,serializer,registered,types,with,serializer,classes,linked,hash,map,class,execution,config,serializable,serializer,registered,types,with,serializers,final,linked,hash,map,string,kryo,registration,kryo,registrations,new,linked,hash,map,kryo,registrations,put,serialized,type,get,name,new,kryo,registration,serialized,type,for,class,registered,type,check,not,null,registered,types,kryo,registrations,put,registered,type,get,name,new,kryo,registration,registered,type,for,map,entry,class,class,extends,serializer,registered,type,with,serializer,class,entry,check,not,null,registered,types,with,serializer,classes,entry,set,kryo,registrations,put,registered,type,with,serializer,class,entry,get,key,get,name,new,kryo,registration,registered,type,with,serializer,class,entry,get,key,registered,type,with,serializer,class,entry,get,value,for,map,entry,class,execution,config,serializable,serializer,registered,type,with,serializer,entry,check,not,null,registered,types,with,serializers,entry,set,kryo,registrations,put,registered,type,with,serializer,entry,get,key,get,name,new,kryo,registration,registered,type,with,serializer,entry,get,key,registered,type,with,serializer,entry,get,value,avro,utils,get,avro,utils,add,avro,generic,data,array,registration,kryo,registrations,return,kryo,registrations
KryoSerializer -> private static LinkedHashMap<String, KryoRegistration> buildKryoRegistrations( 			Class<?> serializedType, 			LinkedHashSet<Class<?>> registeredTypes, 			LinkedHashMap<Class<?>, Class<? extends Serializer<?>>> registeredTypesWithSerializerClasses, 			LinkedHashMap<Class<?>, ExecutionConfig.SerializableSerializer<?>> registeredTypesWithSerializers);1515177485;Utility method that takes lists of registered types and their serializers, and resolve_them into a single list such that the result will resemble the final registration_result in Kryo.;private static LinkedHashMap<String, KryoRegistration> buildKryoRegistrations(_			Class<?> serializedType,_			LinkedHashSet<Class<?>> registeredTypes,_			LinkedHashMap<Class<?>, Class<? extends Serializer<?>>> registeredTypesWithSerializerClasses,_			LinkedHashMap<Class<?>, ExecutionConfig.SerializableSerializer<?>> registeredTypesWithSerializers) {__		final LinkedHashMap<String, KryoRegistration> kryoRegistrations = new LinkedHashMap<>()___		kryoRegistrations.put(serializedType.getName(), new KryoRegistration(serializedType))___		for (Class<?> registeredType : checkNotNull(registeredTypes)) {_			kryoRegistrations.put(registeredType.getName(), new KryoRegistration(registeredType))__		}__		for (Map.Entry<Class<?>, Class<? extends Serializer<?>>> registeredTypeWithSerializerClassEntry :_				checkNotNull(registeredTypesWithSerializerClasses).entrySet()) {__			kryoRegistrations.put(_					registeredTypeWithSerializerClassEntry.getKey().getName(),_					new KryoRegistration(_							registeredTypeWithSerializerClassEntry.getKey(),_							registeredTypeWithSerializerClassEntry.getValue()))__		}__		for (Map.Entry<Class<?>, ExecutionConfig.SerializableSerializer<?>> registeredTypeWithSerializerEntry :_				checkNotNull(registeredTypesWithSerializers).entrySet()) {__			kryoRegistrations.put(_					registeredTypeWithSerializerEntry.getKey().getName(),_					new KryoRegistration(_							registeredTypeWithSerializerEntry.getKey(),_							registeredTypeWithSerializerEntry.getValue()))__		}__		_		AvroUtils.getAvroUtils().addAvroGenericDataArrayRegistration(kryoRegistrations)___		return kryoRegistrations__	};utility,method,that,takes,lists,of,registered,types,and,their,serializers,and,resolve,them,into,a,single,list,such,that,the,result,will,resemble,the,final,registration,result,in,kryo;private,static,linked,hash,map,string,kryo,registration,build,kryo,registrations,class,serialized,type,linked,hash,set,class,registered,types,linked,hash,map,class,class,extends,serializer,registered,types,with,serializer,classes,linked,hash,map,class,execution,config,serializable,serializer,registered,types,with,serializers,final,linked,hash,map,string,kryo,registration,kryo,registrations,new,linked,hash,map,kryo,registrations,put,serialized,type,get,name,new,kryo,registration,serialized,type,for,class,registered,type,check,not,null,registered,types,kryo,registrations,put,registered,type,get,name,new,kryo,registration,registered,type,for,map,entry,class,class,extends,serializer,registered,type,with,serializer,class,entry,check,not,null,registered,types,with,serializer,classes,entry,set,kryo,registrations,put,registered,type,with,serializer,class,entry,get,key,get,name,new,kryo,registration,registered,type,with,serializer,class,entry,get,key,registered,type,with,serializer,class,entry,get,value,for,map,entry,class,execution,config,serializable,serializer,registered,type,with,serializer,entry,check,not,null,registered,types,with,serializers,entry,set,kryo,registrations,put,registered,type,with,serializer,entry,get,key,get,name,new,kryo,registration,registered,type,with,serializer,entry,get,key,registered,type,with,serializer,entry,get,value,avro,utils,get,avro,utils,add,avro,generic,data,array,registration,kryo,registrations,return,kryo,registrations
KryoSerializer -> private static LinkedHashMap<String, KryoRegistration> buildKryoRegistrations( 			Class<?> serializedType, 			LinkedHashSet<Class<?>> registeredTypes, 			LinkedHashMap<Class<?>, Class<? extends Serializer<?>>> registeredTypesWithSerializerClasses, 			LinkedHashMap<Class<?>, ExecutionConfig.SerializableSerializer<?>> registeredTypesWithSerializers);1520442634;Utility method that takes lists of registered types and their serializers, and resolve_them into a single list such that the result will resemble the final registration_result in Kryo.;private static LinkedHashMap<String, KryoRegistration> buildKryoRegistrations(_			Class<?> serializedType,_			LinkedHashSet<Class<?>> registeredTypes,_			LinkedHashMap<Class<?>, Class<? extends Serializer<?>>> registeredTypesWithSerializerClasses,_			LinkedHashMap<Class<?>, ExecutionConfig.SerializableSerializer<?>> registeredTypesWithSerializers) {__		final LinkedHashMap<String, KryoRegistration> kryoRegistrations = new LinkedHashMap<>()___		kryoRegistrations.put(serializedType.getName(), new KryoRegistration(serializedType))___		for (Class<?> registeredType : checkNotNull(registeredTypes)) {_			kryoRegistrations.put(registeredType.getName(), new KryoRegistration(registeredType))__		}__		for (Map.Entry<Class<?>, Class<? extends Serializer<?>>> registeredTypeWithSerializerClassEntry :_				checkNotNull(registeredTypesWithSerializerClasses).entrySet()) {__			kryoRegistrations.put(_					registeredTypeWithSerializerClassEntry.getKey().getName(),_					new KryoRegistration(_							registeredTypeWithSerializerClassEntry.getKey(),_							registeredTypeWithSerializerClassEntry.getValue()))__		}__		for (Map.Entry<Class<?>, ExecutionConfig.SerializableSerializer<?>> registeredTypeWithSerializerEntry :_				checkNotNull(registeredTypesWithSerializers).entrySet()) {__			kryoRegistrations.put(_					registeredTypeWithSerializerEntry.getKey().getName(),_					new KryoRegistration(_							registeredTypeWithSerializerEntry.getKey(),_							registeredTypeWithSerializerEntry.getValue()))__		}__		_		AvroUtils.getAvroUtils().addAvroGenericDataArrayRegistration(kryoRegistrations)___		return kryoRegistrations__	};utility,method,that,takes,lists,of,registered,types,and,their,serializers,and,resolve,them,into,a,single,list,such,that,the,result,will,resemble,the,final,registration,result,in,kryo;private,static,linked,hash,map,string,kryo,registration,build,kryo,registrations,class,serialized,type,linked,hash,set,class,registered,types,linked,hash,map,class,class,extends,serializer,registered,types,with,serializer,classes,linked,hash,map,class,execution,config,serializable,serializer,registered,types,with,serializers,final,linked,hash,map,string,kryo,registration,kryo,registrations,new,linked,hash,map,kryo,registrations,put,serialized,type,get,name,new,kryo,registration,serialized,type,for,class,registered,type,check,not,null,registered,types,kryo,registrations,put,registered,type,get,name,new,kryo,registration,registered,type,for,map,entry,class,class,extends,serializer,registered,type,with,serializer,class,entry,check,not,null,registered,types,with,serializer,classes,entry,set,kryo,registrations,put,registered,type,with,serializer,class,entry,get,key,get,name,new,kryo,registration,registered,type,with,serializer,class,entry,get,key,registered,type,with,serializer,class,entry,get,value,for,map,entry,class,execution,config,serializable,serializer,registered,type,with,serializer,entry,check,not,null,registered,types,with,serializers,entry,set,kryo,registrations,put,registered,type,with,serializer,entry,get,key,get,name,new,kryo,registration,registered,type,with,serializer,entry,get,key,registered,type,with,serializer,entry,get,value,avro,utils,get,avro,utils,add,avro,generic,data,array,registration,kryo,registrations,return,kryo,registrations
KryoSerializer -> private static LinkedHashMap<String, KryoRegistration> buildKryoRegistrations( 			Class<?> serializedType, 			LinkedHashSet<Class<?>> registeredTypes, 			LinkedHashMap<Class<?>, Class<? extends Serializer<?>>> registeredTypesWithSerializerClasses, 			LinkedHashMap<Class<?>, ExecutionConfig.SerializableSerializer<?>> registeredTypesWithSerializers);1520442634;Utility method that takes lists of registered types and their serializers, and resolve_them into a single list such that the result will resemble the final registration_result in Kryo.;private static LinkedHashMap<String, KryoRegistration> buildKryoRegistrations(_			Class<?> serializedType,_			LinkedHashSet<Class<?>> registeredTypes,_			LinkedHashMap<Class<?>, Class<? extends Serializer<?>>> registeredTypesWithSerializerClasses,_			LinkedHashMap<Class<?>, ExecutionConfig.SerializableSerializer<?>> registeredTypesWithSerializers) {__		final LinkedHashMap<String, KryoRegistration> kryoRegistrations = new LinkedHashMap<>()___		kryoRegistrations.put(serializedType.getName(), new KryoRegistration(serializedType))___		for (Class<?> registeredType : checkNotNull(registeredTypes)) {_			kryoRegistrations.put(registeredType.getName(), new KryoRegistration(registeredType))__		}__		for (Map.Entry<Class<?>, Class<? extends Serializer<?>>> registeredTypeWithSerializerClassEntry :_				checkNotNull(registeredTypesWithSerializerClasses).entrySet()) {__			kryoRegistrations.put(_					registeredTypeWithSerializerClassEntry.getKey().getName(),_					new KryoRegistration(_							registeredTypeWithSerializerClassEntry.getKey(),_							registeredTypeWithSerializerClassEntry.getValue()))__		}__		for (Map.Entry<Class<?>, ExecutionConfig.SerializableSerializer<?>> registeredTypeWithSerializerEntry :_				checkNotNull(registeredTypesWithSerializers).entrySet()) {__			kryoRegistrations.put(_					registeredTypeWithSerializerEntry.getKey().getName(),_					new KryoRegistration(_							registeredTypeWithSerializerEntry.getKey(),_							registeredTypeWithSerializerEntry.getValue()))__		}__		_		AvroUtils.getAvroUtils().addAvroGenericDataArrayRegistration(kryoRegistrations)___		return kryoRegistrations__	};utility,method,that,takes,lists,of,registered,types,and,their,serializers,and,resolve,them,into,a,single,list,such,that,the,result,will,resemble,the,final,registration,result,in,kryo;private,static,linked,hash,map,string,kryo,registration,build,kryo,registrations,class,serialized,type,linked,hash,set,class,registered,types,linked,hash,map,class,class,extends,serializer,registered,types,with,serializer,classes,linked,hash,map,class,execution,config,serializable,serializer,registered,types,with,serializers,final,linked,hash,map,string,kryo,registration,kryo,registrations,new,linked,hash,map,kryo,registrations,put,serialized,type,get,name,new,kryo,registration,serialized,type,for,class,registered,type,check,not,null,registered,types,kryo,registrations,put,registered,type,get,name,new,kryo,registration,registered,type,for,map,entry,class,class,extends,serializer,registered,type,with,serializer,class,entry,check,not,null,registered,types,with,serializer,classes,entry,set,kryo,registrations,put,registered,type,with,serializer,class,entry,get,key,get,name,new,kryo,registration,registered,type,with,serializer,class,entry,get,key,registered,type,with,serializer,class,entry,get,value,for,map,entry,class,execution,config,serializable,serializer,registered,type,with,serializer,entry,check,not,null,registered,types,with,serializers,entry,set,kryo,registrations,put,registered,type,with,serializer,entry,get,key,get,name,new,kryo,registration,registered,type,with,serializer,entry,get,key,registered,type,with,serializer,entry,get,value,avro,utils,get,avro,utils,add,avro,generic,data,array,registration,kryo,registrations,return,kryo,registrations
KryoSerializer -> private static LinkedHashMap<String, KryoRegistration> buildKryoRegistrations( 			Class<?> serializedType, 			LinkedHashSet<Class<?>> registeredTypes, 			LinkedHashMap<Class<?>, Class<? extends Serializer<?>>> registeredTypesWithSerializerClasses, 			LinkedHashMap<Class<?>, ExecutionConfig.SerializableSerializer<?>> registeredTypesWithSerializers);1524241110;Utility method that takes lists of registered types and their serializers, and resolve_them into a single list such that the result will resemble the final registration_result in Kryo.;private static LinkedHashMap<String, KryoRegistration> buildKryoRegistrations(_			Class<?> serializedType,_			LinkedHashSet<Class<?>> registeredTypes,_			LinkedHashMap<Class<?>, Class<? extends Serializer<?>>> registeredTypesWithSerializerClasses,_			LinkedHashMap<Class<?>, ExecutionConfig.SerializableSerializer<?>> registeredTypesWithSerializers) {__		final LinkedHashMap<String, KryoRegistration> kryoRegistrations = new LinkedHashMap<>()___		kryoRegistrations.put(serializedType.getName(), new KryoRegistration(serializedType))___		for (Class<?> registeredType : checkNotNull(registeredTypes)) {_			kryoRegistrations.put(registeredType.getName(), new KryoRegistration(registeredType))__		}__		for (Map.Entry<Class<?>, Class<? extends Serializer<?>>> registeredTypeWithSerializerClassEntry :_				checkNotNull(registeredTypesWithSerializerClasses).entrySet()) {__			kryoRegistrations.put(_					registeredTypeWithSerializerClassEntry.getKey().getName(),_					new KryoRegistration(_							registeredTypeWithSerializerClassEntry.getKey(),_							registeredTypeWithSerializerClassEntry.getValue()))__		}__		for (Map.Entry<Class<?>, ExecutionConfig.SerializableSerializer<?>> registeredTypeWithSerializerEntry :_				checkNotNull(registeredTypesWithSerializers).entrySet()) {__			kryoRegistrations.put(_					registeredTypeWithSerializerEntry.getKey().getName(),_					new KryoRegistration(_							registeredTypeWithSerializerEntry.getKey(),_							registeredTypeWithSerializerEntry.getValue()))__		}__		_		AvroUtils.getAvroUtils().addAvroGenericDataArrayRegistration(kryoRegistrations)___		return kryoRegistrations__	};utility,method,that,takes,lists,of,registered,types,and,their,serializers,and,resolve,them,into,a,single,list,such,that,the,result,will,resemble,the,final,registration,result,in,kryo;private,static,linked,hash,map,string,kryo,registration,build,kryo,registrations,class,serialized,type,linked,hash,set,class,registered,types,linked,hash,map,class,class,extends,serializer,registered,types,with,serializer,classes,linked,hash,map,class,execution,config,serializable,serializer,registered,types,with,serializers,final,linked,hash,map,string,kryo,registration,kryo,registrations,new,linked,hash,map,kryo,registrations,put,serialized,type,get,name,new,kryo,registration,serialized,type,for,class,registered,type,check,not,null,registered,types,kryo,registrations,put,registered,type,get,name,new,kryo,registration,registered,type,for,map,entry,class,class,extends,serializer,registered,type,with,serializer,class,entry,check,not,null,registered,types,with,serializer,classes,entry,set,kryo,registrations,put,registered,type,with,serializer,class,entry,get,key,get,name,new,kryo,registration,registered,type,with,serializer,class,entry,get,key,registered,type,with,serializer,class,entry,get,value,for,map,entry,class,execution,config,serializable,serializer,registered,type,with,serializer,entry,check,not,null,registered,types,with,serializers,entry,set,kryo,registrations,put,registered,type,with,serializer,entry,get,key,get,name,new,kryo,registration,registered,type,with,serializer,entry,get,key,registered,type,with,serializer,entry,get,value,avro,utils,get,avro,utils,add,avro,generic,data,array,registration,kryo,registrations,return,kryo,registrations
KryoSerializer -> private static LinkedHashMap<String, KryoRegistration> buildKryoRegistrations( 			Class<?> serializedType, 			LinkedHashSet<Class<?>> registeredTypes, 			LinkedHashMap<Class<?>, Class<? extends Serializer<?>>> registeredTypesWithSerializerClasses, 			LinkedHashMap<Class<?>, ExecutionConfig.SerializableSerializer<?>> registeredTypesWithSerializers);1539149027;Utility method that takes lists of registered types and their serializers, and resolve_them into a single list such that the result will resemble the final registration_result in Kryo.;private static LinkedHashMap<String, KryoRegistration> buildKryoRegistrations(_			Class<?> serializedType,_			LinkedHashSet<Class<?>> registeredTypes,_			LinkedHashMap<Class<?>, Class<? extends Serializer<?>>> registeredTypesWithSerializerClasses,_			LinkedHashMap<Class<?>, ExecutionConfig.SerializableSerializer<?>> registeredTypesWithSerializers) {__		final LinkedHashMap<String, KryoRegistration> kryoRegistrations = new LinkedHashMap<>()___		kryoRegistrations.put(serializedType.getName(), new KryoRegistration(serializedType))___		for (Class<?> registeredType : checkNotNull(registeredTypes)) {_			kryoRegistrations.put(registeredType.getName(), new KryoRegistration(registeredType))__		}__		for (Map.Entry<Class<?>, Class<? extends Serializer<?>>> registeredTypeWithSerializerClassEntry :_				checkNotNull(registeredTypesWithSerializerClasses).entrySet()) {__			kryoRegistrations.put(_					registeredTypeWithSerializerClassEntry.getKey().getName(),_					new KryoRegistration(_							registeredTypeWithSerializerClassEntry.getKey(),_							registeredTypeWithSerializerClassEntry.getValue()))__		}__		for (Map.Entry<Class<?>, ExecutionConfig.SerializableSerializer<?>> registeredTypeWithSerializerEntry :_				checkNotNull(registeredTypesWithSerializers).entrySet()) {__			kryoRegistrations.put(_					registeredTypeWithSerializerEntry.getKey().getName(),_					new KryoRegistration(_							registeredTypeWithSerializerEntry.getKey(),_							registeredTypeWithSerializerEntry.getValue()))__		}__		_		AvroUtils.getAvroUtils().addAvroGenericDataArrayRegistration(kryoRegistrations)___		return kryoRegistrations__	};utility,method,that,takes,lists,of,registered,types,and,their,serializers,and,resolve,them,into,a,single,list,such,that,the,result,will,resemble,the,final,registration,result,in,kryo;private,static,linked,hash,map,string,kryo,registration,build,kryo,registrations,class,serialized,type,linked,hash,set,class,registered,types,linked,hash,map,class,class,extends,serializer,registered,types,with,serializer,classes,linked,hash,map,class,execution,config,serializable,serializer,registered,types,with,serializers,final,linked,hash,map,string,kryo,registration,kryo,registrations,new,linked,hash,map,kryo,registrations,put,serialized,type,get,name,new,kryo,registration,serialized,type,for,class,registered,type,check,not,null,registered,types,kryo,registrations,put,registered,type,get,name,new,kryo,registration,registered,type,for,map,entry,class,class,extends,serializer,registered,type,with,serializer,class,entry,check,not,null,registered,types,with,serializer,classes,entry,set,kryo,registrations,put,registered,type,with,serializer,class,entry,get,key,get,name,new,kryo,registration,registered,type,with,serializer,class,entry,get,key,registered,type,with,serializer,class,entry,get,value,for,map,entry,class,execution,config,serializable,serializer,registered,type,with,serializer,entry,check,not,null,registered,types,with,serializers,entry,set,kryo,registrations,put,registered,type,with,serializer,entry,get,key,get,name,new,kryo,registration,registered,type,with,serializer,entry,get,key,registered,type,with,serializer,entry,get,value,avro,utils,get,avro,utils,add,avro,generic,data,array,registration,kryo,registrations,return,kryo,registrations
KryoSerializer -> private static LinkedHashMap<String, KryoRegistration> buildKryoRegistrations( 			Class<?> serializedType, 			LinkedHashSet<Class<?>> registeredTypes, 			LinkedHashMap<Class<?>, Class<? extends Serializer<?>>> registeredTypesWithSerializerClasses, 			LinkedHashMap<Class<?>, ExecutionConfig.SerializableSerializer<?>> registeredTypesWithSerializers);1540981438;Utility method that takes lists of registered types and their serializers, and resolve_them into a single list such that the result will resemble the final registration_result in Kryo.;private static LinkedHashMap<String, KryoRegistration> buildKryoRegistrations(_			Class<?> serializedType,_			LinkedHashSet<Class<?>> registeredTypes,_			LinkedHashMap<Class<?>, Class<? extends Serializer<?>>> registeredTypesWithSerializerClasses,_			LinkedHashMap<Class<?>, ExecutionConfig.SerializableSerializer<?>> registeredTypesWithSerializers) {__		final LinkedHashMap<String, KryoRegistration> kryoRegistrations = new LinkedHashMap<>()___		kryoRegistrations.put(serializedType.getName(), new KryoRegistration(serializedType))___		for (Class<?> registeredType : checkNotNull(registeredTypes)) {_			kryoRegistrations.put(registeredType.getName(), new KryoRegistration(registeredType))__		}__		for (Map.Entry<Class<?>, Class<? extends Serializer<?>>> registeredTypeWithSerializerClassEntry :_				checkNotNull(registeredTypesWithSerializerClasses).entrySet()) {__			kryoRegistrations.put(_					registeredTypeWithSerializerClassEntry.getKey().getName(),_					new KryoRegistration(_							registeredTypeWithSerializerClassEntry.getKey(),_							registeredTypeWithSerializerClassEntry.getValue()))__		}__		for (Map.Entry<Class<?>, ExecutionConfig.SerializableSerializer<?>> registeredTypeWithSerializerEntry :_				checkNotNull(registeredTypesWithSerializers).entrySet()) {__			kryoRegistrations.put(_					registeredTypeWithSerializerEntry.getKey().getName(),_					new KryoRegistration(_							registeredTypeWithSerializerEntry.getKey(),_							registeredTypeWithSerializerEntry.getValue()))__		}__		_		AvroUtils.getAvroUtils().addAvroGenericDataArrayRegistration(kryoRegistrations)___		return kryoRegistrations__	};utility,method,that,takes,lists,of,registered,types,and,their,serializers,and,resolve,them,into,a,single,list,such,that,the,result,will,resemble,the,final,registration,result,in,kryo;private,static,linked,hash,map,string,kryo,registration,build,kryo,registrations,class,serialized,type,linked,hash,set,class,registered,types,linked,hash,map,class,class,extends,serializer,registered,types,with,serializer,classes,linked,hash,map,class,execution,config,serializable,serializer,registered,types,with,serializers,final,linked,hash,map,string,kryo,registration,kryo,registrations,new,linked,hash,map,kryo,registrations,put,serialized,type,get,name,new,kryo,registration,serialized,type,for,class,registered,type,check,not,null,registered,types,kryo,registrations,put,registered,type,get,name,new,kryo,registration,registered,type,for,map,entry,class,class,extends,serializer,registered,type,with,serializer,class,entry,check,not,null,registered,types,with,serializer,classes,entry,set,kryo,registrations,put,registered,type,with,serializer,class,entry,get,key,get,name,new,kryo,registration,registered,type,with,serializer,class,entry,get,key,registered,type,with,serializer,class,entry,get,value,for,map,entry,class,execution,config,serializable,serializer,registered,type,with,serializer,entry,check,not,null,registered,types,with,serializers,entry,set,kryo,registrations,put,registered,type,with,serializer,entry,get,key,get,name,new,kryo,registration,registered,type,with,serializer,entry,get,key,registered,type,with,serializer,entry,get,value,avro,utils,get,avro,utils,add,avro,generic,data,array,registration,kryo,registrations,return,kryo,registrations
KryoSerializer -> private static LinkedHashMap<String, KryoRegistration> buildKryoRegistrations( 			Class<?> serializedType, 			LinkedHashSet<Class<?>> registeredTypes, 			LinkedHashMap<Class<?>, Class<? extends Serializer<?>>> registeredTypesWithSerializerClasses, 			LinkedHashMap<Class<?>, ExecutionConfig.SerializableSerializer<?>> registeredTypesWithSerializers);1550652777;Utility method that takes lists of registered types and their serializers, and resolve_them into a single list such that the result will resemble the final registration_result in Kryo.;private static LinkedHashMap<String, KryoRegistration> buildKryoRegistrations(_			Class<?> serializedType,_			LinkedHashSet<Class<?>> registeredTypes,_			LinkedHashMap<Class<?>, Class<? extends Serializer<?>>> registeredTypesWithSerializerClasses,_			LinkedHashMap<Class<?>, ExecutionConfig.SerializableSerializer<?>> registeredTypesWithSerializers) {__		final LinkedHashMap<String, KryoRegistration> kryoRegistrations = new LinkedHashMap<>()___		kryoRegistrations.put(serializedType.getName(), new KryoRegistration(serializedType))___		for (Class<?> registeredType : checkNotNull(registeredTypes)) {_			kryoRegistrations.put(registeredType.getName(), new KryoRegistration(registeredType))__		}__		for (Map.Entry<Class<?>, Class<? extends Serializer<?>>> registeredTypeWithSerializerClassEntry :_				checkNotNull(registeredTypesWithSerializerClasses).entrySet()) {__			kryoRegistrations.put(_					registeredTypeWithSerializerClassEntry.getKey().getName(),_					new KryoRegistration(_							registeredTypeWithSerializerClassEntry.getKey(),_							registeredTypeWithSerializerClassEntry.getValue()))__		}__		for (Map.Entry<Class<?>, ExecutionConfig.SerializableSerializer<?>> registeredTypeWithSerializerEntry :_				checkNotNull(registeredTypesWithSerializers).entrySet()) {__			kryoRegistrations.put(_					registeredTypeWithSerializerEntry.getKey().getName(),_					new KryoRegistration(_							registeredTypeWithSerializerEntry.getKey(),_							registeredTypeWithSerializerEntry.getValue()))__		}__		_		AvroUtils.getAvroUtils().addAvroGenericDataArrayRegistration(kryoRegistrations)___		return kryoRegistrations__	};utility,method,that,takes,lists,of,registered,types,and,their,serializers,and,resolve,them,into,a,single,list,such,that,the,result,will,resemble,the,final,registration,result,in,kryo;private,static,linked,hash,map,string,kryo,registration,build,kryo,registrations,class,serialized,type,linked,hash,set,class,registered,types,linked,hash,map,class,class,extends,serializer,registered,types,with,serializer,classes,linked,hash,map,class,execution,config,serializable,serializer,registered,types,with,serializers,final,linked,hash,map,string,kryo,registration,kryo,registrations,new,linked,hash,map,kryo,registrations,put,serialized,type,get,name,new,kryo,registration,serialized,type,for,class,registered,type,check,not,null,registered,types,kryo,registrations,put,registered,type,get,name,new,kryo,registration,registered,type,for,map,entry,class,class,extends,serializer,registered,type,with,serializer,class,entry,check,not,null,registered,types,with,serializer,classes,entry,set,kryo,registrations,put,registered,type,with,serializer,class,entry,get,key,get,name,new,kryo,registration,registered,type,with,serializer,class,entry,get,key,registered,type,with,serializer,class,entry,get,value,for,map,entry,class,execution,config,serializable,serializer,registered,type,with,serializer,entry,check,not,null,registered,types,with,serializers,entry,set,kryo,registrations,put,registered,type,with,serializer,entry,get,key,get,name,new,kryo,registration,registered,type,with,serializer,entry,get,key,registered,type,with,serializer,entry,get,value,avro,utils,get,avro,utils,add,avro,generic,data,array,registration,kryo,registrations,return,kryo,registrations
KryoSerializer -> private static LinkedHashMap<String, KryoRegistration> buildKryoRegistrations( 			Class<?> serializedType, 			LinkedHashSet<Class<?>> registeredTypes, 			LinkedHashMap<Class<?>, Class<? extends Serializer<?>>> registeredTypesWithSerializerClasses, 			LinkedHashMap<Class<?>, ExecutionConfig.SerializableSerializer<?>> registeredTypesWithSerializers);1550821415;Utility method that takes lists of registered types and their serializers, and resolve_them into a single list such that the result will resemble the final registration_result in Kryo.;private static LinkedHashMap<String, KryoRegistration> buildKryoRegistrations(_			Class<?> serializedType,_			LinkedHashSet<Class<?>> registeredTypes,_			LinkedHashMap<Class<?>, Class<? extends Serializer<?>>> registeredTypesWithSerializerClasses,_			LinkedHashMap<Class<?>, ExecutionConfig.SerializableSerializer<?>> registeredTypesWithSerializers) {__		final LinkedHashMap<String, KryoRegistration> kryoRegistrations = new LinkedHashMap<>()___		kryoRegistrations.put(serializedType.getName(), new KryoRegistration(serializedType))___		for (Class<?> registeredType : checkNotNull(registeredTypes)) {_			kryoRegistrations.put(registeredType.getName(), new KryoRegistration(registeredType))__		}__		for (Map.Entry<Class<?>, Class<? extends Serializer<?>>> registeredTypeWithSerializerClassEntry :_				checkNotNull(registeredTypesWithSerializerClasses).entrySet()) {__			kryoRegistrations.put(_					registeredTypeWithSerializerClassEntry.getKey().getName(),_					new KryoRegistration(_							registeredTypeWithSerializerClassEntry.getKey(),_							registeredTypeWithSerializerClassEntry.getValue()))__		}__		for (Map.Entry<Class<?>, ExecutionConfig.SerializableSerializer<?>> registeredTypeWithSerializerEntry :_				checkNotNull(registeredTypesWithSerializers).entrySet()) {__			kryoRegistrations.put(_					registeredTypeWithSerializerEntry.getKey().getName(),_					new KryoRegistration(_							registeredTypeWithSerializerEntry.getKey(),_							registeredTypeWithSerializerEntry.getValue()))__		}__		_		AvroUtils.getAvroUtils().addAvroGenericDataArrayRegistration(kryoRegistrations)___		return kryoRegistrations__	};utility,method,that,takes,lists,of,registered,types,and,their,serializers,and,resolve,them,into,a,single,list,such,that,the,result,will,resemble,the,final,registration,result,in,kryo;private,static,linked,hash,map,string,kryo,registration,build,kryo,registrations,class,serialized,type,linked,hash,set,class,registered,types,linked,hash,map,class,class,extends,serializer,registered,types,with,serializer,classes,linked,hash,map,class,execution,config,serializable,serializer,registered,types,with,serializers,final,linked,hash,map,string,kryo,registration,kryo,registrations,new,linked,hash,map,kryo,registrations,put,serialized,type,get,name,new,kryo,registration,serialized,type,for,class,registered,type,check,not,null,registered,types,kryo,registrations,put,registered,type,get,name,new,kryo,registration,registered,type,for,map,entry,class,class,extends,serializer,registered,type,with,serializer,class,entry,check,not,null,registered,types,with,serializer,classes,entry,set,kryo,registrations,put,registered,type,with,serializer,class,entry,get,key,get,name,new,kryo,registration,registered,type,with,serializer,class,entry,get,key,registered,type,with,serializer,class,entry,get,value,for,map,entry,class,execution,config,serializable,serializer,registered,type,with,serializer,entry,check,not,null,registered,types,with,serializers,entry,set,kryo,registrations,put,registered,type,with,serializer,entry,get,key,get,name,new,kryo,registration,registered,type,with,serializer,entry,get,key,registered,type,with,serializer,entry,get,value,avro,utils,get,avro,utils,add,avro,generic,data,array,registration,kryo,registrations,return,kryo,registrations
KryoSerializer -> private Kryo getKryoInstance();1454428544;Returns the Chill Kryo Serializer which is implictly added to the classpath via flink-runtime._Falls back to the default Kryo serializer if it can't be found._@return The Kryo serializer instance.;private Kryo getKryoInstance() {__		try {_			_			_			Class<?> chillInstantiatorClazz = Class.forName("com.twitter.chill.ScalaKryoInstantiator")__			Object chillInstantiator = chillInstantiatorClazz.newInstance()___			_			Method m = chillInstantiatorClazz.getMethod("newKryo")___			return (Kryo) m.invoke(chillInstantiator)__		} catch (ClassNotFoundException | InstantiationException | NoSuchMethodException |_			IllegalAccessException | InvocationTargetException e) {__			LOG.warn("Falling back to default Kryo serializer because Chill serializer couldn't be found.", e)___			Kryo.DefaultInstantiatorStrategy initStrategy = new Kryo.DefaultInstantiatorStrategy()__			initStrategy.setFallbackInstantiatorStrategy(new StdInstantiatorStrategy())___			Kryo kryo = new Kryo()__			kryo.setInstantiatorStrategy(initStrategy)___			return kryo__		}_	};returns,the,chill,kryo,serializer,which,is,implictly,added,to,the,classpath,via,flink,runtime,falls,back,to,the,default,kryo,serializer,if,it,can,t,be,found,return,the,kryo,serializer,instance;private,kryo,get,kryo,instance,try,class,chill,instantiator,clazz,class,for,name,com,twitter,chill,scala,kryo,instantiator,object,chill,instantiator,chill,instantiator,clazz,new,instance,method,m,chill,instantiator,clazz,get,method,new,kryo,return,kryo,m,invoke,chill,instantiator,catch,class,not,found,exception,instantiation,exception,no,such,method,exception,illegal,access,exception,invocation,target,exception,e,log,warn,falling,back,to,default,kryo,serializer,because,chill,serializer,couldn,t,be,found,e,kryo,default,instantiator,strategy,init,strategy,new,kryo,default,instantiator,strategy,init,strategy,set,fallback,instantiator,strategy,new,std,instantiator,strategy,kryo,kryo,new,kryo,kryo,set,instantiator,strategy,init,strategy,return,kryo
KryoSerializer -> private Kryo getKryoInstance();1460741894;Returns the Chill Kryo Serializer which is implictly added to the classpath via flink-runtime._Falls back to the default Kryo serializer if it can't be found._@return The Kryo serializer instance.;private Kryo getKryoInstance() {__		try {_			_			_			Class<?> chillInstantiatorClazz = Class.forName("com.twitter.chill.ScalaKryoInstantiator")__			Object chillInstantiator = chillInstantiatorClazz.newInstance()___			_			Method m = chillInstantiatorClazz.getMethod("newKryo")___			return (Kryo) m.invoke(chillInstantiator)__		} catch (ClassNotFoundException | InstantiationException | NoSuchMethodException |_			IllegalAccessException | InvocationTargetException e) {__			LOG.warn("Falling back to default Kryo serializer because Chill serializer couldn't be found.", e)___			Kryo.DefaultInstantiatorStrategy initStrategy = new Kryo.DefaultInstantiatorStrategy()__			initStrategy.setFallbackInstantiatorStrategy(new StdInstantiatorStrategy())___			Kryo kryo = new Kryo()__			kryo.setInstantiatorStrategy(initStrategy)___			return kryo__		}_	};returns,the,chill,kryo,serializer,which,is,implictly,added,to,the,classpath,via,flink,runtime,falls,back,to,the,default,kryo,serializer,if,it,can,t,be,found,return,the,kryo,serializer,instance;private,kryo,get,kryo,instance,try,class,chill,instantiator,clazz,class,for,name,com,twitter,chill,scala,kryo,instantiator,object,chill,instantiator,chill,instantiator,clazz,new,instance,method,m,chill,instantiator,clazz,get,method,new,kryo,return,kryo,m,invoke,chill,instantiator,catch,class,not,found,exception,instantiation,exception,no,such,method,exception,illegal,access,exception,invocation,target,exception,e,log,warn,falling,back,to,default,kryo,serializer,because,chill,serializer,couldn,t,be,found,e,kryo,default,instantiator,strategy,init,strategy,new,kryo,default,instantiator,strategy,init,strategy,set,fallback,instantiator,strategy,new,std,instantiator,strategy,kryo,kryo,new,kryo,kryo,set,instantiator,strategy,init,strategy,return,kryo
KryoSerializer -> private Kryo getKryoInstance();1460741895;Returns the Chill Kryo Serializer which is implictly added to the classpath via flink-runtime._Falls back to the default Kryo serializer if it can't be found._@return The Kryo serializer instance.;private Kryo getKryoInstance() {__		try {_			_			_			Class<?> chillInstantiatorClazz = Class.forName("com.twitter.chill.ScalaKryoInstantiator")__			Object chillInstantiator = chillInstantiatorClazz.newInstance()___			_			Method m = chillInstantiatorClazz.getMethod("newKryo")___			return (Kryo) m.invoke(chillInstantiator)__		} catch (ClassNotFoundException | InstantiationException | NoSuchMethodException |_			IllegalAccessException | InvocationTargetException e) {__			LOG.warn("Falling back to default Kryo serializer because Chill serializer couldn't be found.", e)___			Kryo.DefaultInstantiatorStrategy initStrategy = new Kryo.DefaultInstantiatorStrategy()__			initStrategy.setFallbackInstantiatorStrategy(new StdInstantiatorStrategy())___			Kryo kryo = new Kryo()__			kryo.setInstantiatorStrategy(initStrategy)___			return kryo__		}_	};returns,the,chill,kryo,serializer,which,is,implictly,added,to,the,classpath,via,flink,runtime,falls,back,to,the,default,kryo,serializer,if,it,can,t,be,found,return,the,kryo,serializer,instance;private,kryo,get,kryo,instance,try,class,chill,instantiator,clazz,class,for,name,com,twitter,chill,scala,kryo,instantiator,object,chill,instantiator,chill,instantiator,clazz,new,instance,method,m,chill,instantiator,clazz,get,method,new,kryo,return,kryo,m,invoke,chill,instantiator,catch,class,not,found,exception,instantiation,exception,no,such,method,exception,illegal,access,exception,invocation,target,exception,e,log,warn,falling,back,to,default,kryo,serializer,because,chill,serializer,couldn,t,be,found,e,kryo,default,instantiator,strategy,init,strategy,new,kryo,default,instantiator,strategy,init,strategy,set,fallback,instantiator,strategy,new,std,instantiator,strategy,kryo,kryo,new,kryo,kryo,set,instantiator,strategy,init,strategy,return,kryo
KryoSerializer -> private Kryo getKryoInstance();1489419093;Returns the Chill Kryo Serializer which is implictly added to the classpath via flink-runtime._Falls back to the default Kryo serializer if it can't be found._@return The Kryo serializer instance.;private Kryo getKryoInstance() {__		try {_			_			_			Class<?> chillInstantiatorClazz = Class.forName("com.twitter.chill.ScalaKryoInstantiator")__			Object chillInstantiator = chillInstantiatorClazz.newInstance()___			_			Method m = chillInstantiatorClazz.getMethod("newKryo")___			return (Kryo) m.invoke(chillInstantiator)__		} catch (ClassNotFoundException | InstantiationException | NoSuchMethodException |_			IllegalAccessException | InvocationTargetException e) {__			LOG.warn("Falling back to default Kryo serializer because Chill serializer couldn't be found.", e)___			Kryo.DefaultInstantiatorStrategy initStrategy = new Kryo.DefaultInstantiatorStrategy()__			initStrategy.setFallbackInstantiatorStrategy(new StdInstantiatorStrategy())___			Kryo kryo = new Kryo()__			kryo.setInstantiatorStrategy(initStrategy)___			return kryo__		}_	};returns,the,chill,kryo,serializer,which,is,implictly,added,to,the,classpath,via,flink,runtime,falls,back,to,the,default,kryo,serializer,if,it,can,t,be,found,return,the,kryo,serializer,instance;private,kryo,get,kryo,instance,try,class,chill,instantiator,clazz,class,for,name,com,twitter,chill,scala,kryo,instantiator,object,chill,instantiator,chill,instantiator,clazz,new,instance,method,m,chill,instantiator,clazz,get,method,new,kryo,return,kryo,m,invoke,chill,instantiator,catch,class,not,found,exception,instantiation,exception,no,such,method,exception,illegal,access,exception,invocation,target,exception,e,log,warn,falling,back,to,default,kryo,serializer,because,chill,serializer,couldn,t,be,found,e,kryo,default,instantiator,strategy,init,strategy,new,kryo,default,instantiator,strategy,init,strategy,set,fallback,instantiator,strategy,new,std,instantiator,strategy,kryo,kryo,new,kryo,kryo,set,instantiator,strategy,init,strategy,return,kryo
KryoSerializer -> private Kryo getKryoInstance();1490330043;Returns the Chill Kryo Serializer which is implictly added to the classpath via flink-runtime._Falls back to the default Kryo serializer if it can't be found._@return The Kryo serializer instance.;private Kryo getKryoInstance() {__		try {_			_			_			Class<?> chillInstantiatorClazz = Class.forName("com.twitter.chill.ScalaKryoInstantiator")__			Object chillInstantiator = chillInstantiatorClazz.newInstance()___			_			Method m = chillInstantiatorClazz.getMethod("newKryo")___			return (Kryo) m.invoke(chillInstantiator)__		} catch (ClassNotFoundException | InstantiationException | NoSuchMethodException |_			IllegalAccessException | InvocationTargetException e) {__			LOG.warn("Falling back to default Kryo serializer because Chill serializer couldn't be found.", e)___			Kryo.DefaultInstantiatorStrategy initStrategy = new Kryo.DefaultInstantiatorStrategy()__			initStrategy.setFallbackInstantiatorStrategy(new StdInstantiatorStrategy())___			Kryo kryo = new Kryo()__			kryo.setInstantiatorStrategy(initStrategy)___			return kryo__		}_	};returns,the,chill,kryo,serializer,which,is,implictly,added,to,the,classpath,via,flink,runtime,falls,back,to,the,default,kryo,serializer,if,it,can,t,be,found,return,the,kryo,serializer,instance;private,kryo,get,kryo,instance,try,class,chill,instantiator,clazz,class,for,name,com,twitter,chill,scala,kryo,instantiator,object,chill,instantiator,chill,instantiator,clazz,new,instance,method,m,chill,instantiator,clazz,get,method,new,kryo,return,kryo,m,invoke,chill,instantiator,catch,class,not,found,exception,instantiation,exception,no,such,method,exception,illegal,access,exception,invocation,target,exception,e,log,warn,falling,back,to,default,kryo,serializer,because,chill,serializer,couldn,t,be,found,e,kryo,default,instantiator,strategy,init,strategy,new,kryo,default,instantiator,strategy,init,strategy,set,fallback,instantiator,strategy,new,std,instantiator,strategy,kryo,kryo,new,kryo,kryo,set,instantiator,strategy,init,strategy,return,kryo
KryoSerializer -> private Kryo getKryoInstance();1494180263;Returns the Chill Kryo Serializer which is implictly added to the classpath via flink-runtime._Falls back to the default Kryo serializer if it can't be found._@return The Kryo serializer instance.;private Kryo getKryoInstance() {__		try {_			_			_			Class<?> chillInstantiatorClazz = Class.forName("com.twitter.chill.ScalaKryoInstantiator")__			Object chillInstantiator = chillInstantiatorClazz.newInstance()___			_			Method m = chillInstantiatorClazz.getMethod("newKryo")___			return (Kryo) m.invoke(chillInstantiator)__		} catch (ClassNotFoundException | InstantiationException | NoSuchMethodException |_			IllegalAccessException | InvocationTargetException e) {__			LOG.warn("Falling back to default Kryo serializer because Chill serializer couldn't be found.", e)___			Kryo.DefaultInstantiatorStrategy initStrategy = new Kryo.DefaultInstantiatorStrategy()__			initStrategy.setFallbackInstantiatorStrategy(new StdInstantiatorStrategy())___			Kryo kryo = new Kryo()__			kryo.setInstantiatorStrategy(initStrategy)___			return kryo__		}_	};returns,the,chill,kryo,serializer,which,is,implictly,added,to,the,classpath,via,flink,runtime,falls,back,to,the,default,kryo,serializer,if,it,can,t,be,found,return,the,kryo,serializer,instance;private,kryo,get,kryo,instance,try,class,chill,instantiator,clazz,class,for,name,com,twitter,chill,scala,kryo,instantiator,object,chill,instantiator,chill,instantiator,clazz,new,instance,method,m,chill,instantiator,clazz,get,method,new,kryo,return,kryo,m,invoke,chill,instantiator,catch,class,not,found,exception,instantiation,exception,no,such,method,exception,illegal,access,exception,invocation,target,exception,e,log,warn,falling,back,to,default,kryo,serializer,because,chill,serializer,couldn,t,be,found,e,kryo,default,instantiator,strategy,init,strategy,new,kryo,default,instantiator,strategy,init,strategy,set,fallback,instantiator,strategy,new,std,instantiator,strategy,kryo,kryo,new,kryo,kryo,set,instantiator,strategy,init,strategy,return,kryo
KryoSerializer -> private Kryo getKryoInstance();1494658833;Returns the Chill Kryo Serializer which is implictly added to the classpath via flink-runtime._Falls back to the default Kryo serializer if it can't be found._@return The Kryo serializer instance.;private Kryo getKryoInstance() {__		try {_			_			_			Class<?> chillInstantiatorClazz = Class.forName("com.twitter.chill.ScalaKryoInstantiator")__			Object chillInstantiator = chillInstantiatorClazz.newInstance()___			_			Method m = chillInstantiatorClazz.getMethod("newKryo")___			return (Kryo) m.invoke(chillInstantiator)__		} catch (ClassNotFoundException | InstantiationException | NoSuchMethodException |_			IllegalAccessException | InvocationTargetException e) {__			LOG.warn("Falling back to default Kryo serializer because Chill serializer couldn't be found.", e)___			Kryo.DefaultInstantiatorStrategy initStrategy = new Kryo.DefaultInstantiatorStrategy()__			initStrategy.setFallbackInstantiatorStrategy(new StdInstantiatorStrategy())___			Kryo kryo = new Kryo()__			kryo.setInstantiatorStrategy(initStrategy)___			return kryo__		}_	};returns,the,chill,kryo,serializer,which,is,implictly,added,to,the,classpath,via,flink,runtime,falls,back,to,the,default,kryo,serializer,if,it,can,t,be,found,return,the,kryo,serializer,instance;private,kryo,get,kryo,instance,try,class,chill,instantiator,clazz,class,for,name,com,twitter,chill,scala,kryo,instantiator,object,chill,instantiator,chill,instantiator,clazz,new,instance,method,m,chill,instantiator,clazz,get,method,new,kryo,return,kryo,m,invoke,chill,instantiator,catch,class,not,found,exception,instantiation,exception,no,such,method,exception,illegal,access,exception,invocation,target,exception,e,log,warn,falling,back,to,default,kryo,serializer,because,chill,serializer,couldn,t,be,found,e,kryo,default,instantiator,strategy,init,strategy,new,kryo,default,instantiator,strategy,init,strategy,set,fallback,instantiator,strategy,new,std,instantiator,strategy,kryo,kryo,new,kryo,kryo,set,instantiator,strategy,init,strategy,return,kryo
KryoSerializer -> private Kryo getKryoInstance();1495142377;Returns the Chill Kryo Serializer which is implictly added to the classpath via flink-runtime._Falls back to the default Kryo serializer if it can't be found._@return The Kryo serializer instance.;private Kryo getKryoInstance() {__		try {_			_			_			Class<?> chillInstantiatorClazz = Class.forName("com.twitter.chill.ScalaKryoInstantiator")__			Object chillInstantiator = chillInstantiatorClazz.newInstance()___			_			Method m = chillInstantiatorClazz.getMethod("newKryo")___			return (Kryo) m.invoke(chillInstantiator)__		} catch (ClassNotFoundException | InstantiationException | NoSuchMethodException |_			IllegalAccessException | InvocationTargetException e) {__			LOG.warn("Falling back to default Kryo serializer because Chill serializer couldn't be found.", e)___			Kryo.DefaultInstantiatorStrategy initStrategy = new Kryo.DefaultInstantiatorStrategy()__			initStrategy.setFallbackInstantiatorStrategy(new StdInstantiatorStrategy())___			Kryo kryo = new Kryo()__			kryo.setInstantiatorStrategy(initStrategy)___			return kryo__		}_	};returns,the,chill,kryo,serializer,which,is,implictly,added,to,the,classpath,via,flink,runtime,falls,back,to,the,default,kryo,serializer,if,it,can,t,be,found,return,the,kryo,serializer,instance;private,kryo,get,kryo,instance,try,class,chill,instantiator,clazz,class,for,name,com,twitter,chill,scala,kryo,instantiator,object,chill,instantiator,chill,instantiator,clazz,new,instance,method,m,chill,instantiator,clazz,get,method,new,kryo,return,kryo,m,invoke,chill,instantiator,catch,class,not,found,exception,instantiation,exception,no,such,method,exception,illegal,access,exception,invocation,target,exception,e,log,warn,falling,back,to,default,kryo,serializer,because,chill,serializer,couldn,t,be,found,e,kryo,default,instantiator,strategy,init,strategy,new,kryo,default,instantiator,strategy,init,strategy,set,fallback,instantiator,strategy,new,std,instantiator,strategy,kryo,kryo,new,kryo,kryo,set,instantiator,strategy,init,strategy,return,kryo
KryoSerializer -> private Kryo getKryoInstance();1509723634;Returns the Chill Kryo Serializer which is implictly added to the classpath via flink-runtime._Falls back to the default Kryo serializer if it can't be found._@return The Kryo serializer instance.;private Kryo getKryoInstance() {__		try {_			_			_			Class<?> chillInstantiatorClazz = Class.forName("com.twitter.chill.ScalaKryoInstantiator")__			Object chillInstantiator = chillInstantiatorClazz.newInstance()___			_			Method m = chillInstantiatorClazz.getMethod("newKryo")___			return (Kryo) m.invoke(chillInstantiator)__		} catch (ClassNotFoundException | InstantiationException | NoSuchMethodException |_			IllegalAccessException | InvocationTargetException e) {__			LOG.warn("Falling back to default Kryo serializer because Chill serializer couldn't be found.", e)___			Kryo.DefaultInstantiatorStrategy initStrategy = new Kryo.DefaultInstantiatorStrategy()__			initStrategy.setFallbackInstantiatorStrategy(new StdInstantiatorStrategy())___			Kryo kryo = new Kryo()__			kryo.setInstantiatorStrategy(initStrategy)___			return kryo__		}_	};returns,the,chill,kryo,serializer,which,is,implictly,added,to,the,classpath,via,flink,runtime,falls,back,to,the,default,kryo,serializer,if,it,can,t,be,found,return,the,kryo,serializer,instance;private,kryo,get,kryo,instance,try,class,chill,instantiator,clazz,class,for,name,com,twitter,chill,scala,kryo,instantiator,object,chill,instantiator,chill,instantiator,clazz,new,instance,method,m,chill,instantiator,clazz,get,method,new,kryo,return,kryo,m,invoke,chill,instantiator,catch,class,not,found,exception,instantiation,exception,no,such,method,exception,illegal,access,exception,invocation,target,exception,e,log,warn,falling,back,to,default,kryo,serializer,because,chill,serializer,couldn,t,be,found,e,kryo,default,instantiator,strategy,init,strategy,new,kryo,default,instantiator,strategy,init,strategy,set,fallback,instantiator,strategy,new,std,instantiator,strategy,kryo,kryo,new,kryo,kryo,set,instantiator,strategy,init,strategy,return,kryo
KryoSerializer -> private Kryo getKryoInstance();1509723634;Returns the Chill Kryo Serializer which is implictly added to the classpath via flink-runtime._Falls back to the default Kryo serializer if it can't be found._@return The Kryo serializer instance.;private Kryo getKryoInstance() {__		try {_			_			_			Class<?> chillInstantiatorClazz = Class.forName("com.twitter.chill.ScalaKryoInstantiator")__			Object chillInstantiator = chillInstantiatorClazz.newInstance()___			_			Method m = chillInstantiatorClazz.getMethod("newKryo")___			return (Kryo) m.invoke(chillInstantiator)__		} catch (ClassNotFoundException | InstantiationException | NoSuchMethodException |_			IllegalAccessException | InvocationTargetException e) {__			LOG.warn("Falling back to default Kryo serializer because Chill serializer couldn't be found.", e)___			Kryo.DefaultInstantiatorStrategy initStrategy = new Kryo.DefaultInstantiatorStrategy()__			initStrategy.setFallbackInstantiatorStrategy(new StdInstantiatorStrategy())___			Kryo kryo = new Kryo()__			kryo.setInstantiatorStrategy(initStrategy)___			return kryo__		}_	};returns,the,chill,kryo,serializer,which,is,implictly,added,to,the,classpath,via,flink,runtime,falls,back,to,the,default,kryo,serializer,if,it,can,t,be,found,return,the,kryo,serializer,instance;private,kryo,get,kryo,instance,try,class,chill,instantiator,clazz,class,for,name,com,twitter,chill,scala,kryo,instantiator,object,chill,instantiator,chill,instantiator,clazz,new,instance,method,m,chill,instantiator,clazz,get,method,new,kryo,return,kryo,m,invoke,chill,instantiator,catch,class,not,found,exception,instantiation,exception,no,such,method,exception,illegal,access,exception,invocation,target,exception,e,log,warn,falling,back,to,default,kryo,serializer,because,chill,serializer,couldn,t,be,found,e,kryo,default,instantiator,strategy,init,strategy,new,kryo,default,instantiator,strategy,init,strategy,set,fallback,instantiator,strategy,new,std,instantiator,strategy,kryo,kryo,new,kryo,kryo,set,instantiator,strategy,init,strategy,return,kryo
KryoSerializer -> private Kryo getKryoInstance();1515177485;Returns the Chill Kryo Serializer which is implicitly added to the classpath via flink-runtime._Falls back to the default Kryo serializer if it can't be found._@return The Kryo serializer instance.;private Kryo getKryoInstance() {__		try {_			_			_			Class<?> chillInstantiatorClazz = Class.forName("com.twitter.chill.ScalaKryoInstantiator")__			Object chillInstantiator = chillInstantiatorClazz.newInstance()___			_			Method m = chillInstantiatorClazz.getMethod("newKryo")___			return (Kryo) m.invoke(chillInstantiator)__		} catch (ClassNotFoundException | InstantiationException | NoSuchMethodException |_			IllegalAccessException | InvocationTargetException e) {__			LOG.warn("Falling back to default Kryo serializer because Chill serializer couldn't be found.", e)___			Kryo.DefaultInstantiatorStrategy initStrategy = new Kryo.DefaultInstantiatorStrategy()__			initStrategy.setFallbackInstantiatorStrategy(new StdInstantiatorStrategy())___			Kryo kryo = new Kryo()__			kryo.setInstantiatorStrategy(initStrategy)___			return kryo__		}_	};returns,the,chill,kryo,serializer,which,is,implicitly,added,to,the,classpath,via,flink,runtime,falls,back,to,the,default,kryo,serializer,if,it,can,t,be,found,return,the,kryo,serializer,instance;private,kryo,get,kryo,instance,try,class,chill,instantiator,clazz,class,for,name,com,twitter,chill,scala,kryo,instantiator,object,chill,instantiator,chill,instantiator,clazz,new,instance,method,m,chill,instantiator,clazz,get,method,new,kryo,return,kryo,m,invoke,chill,instantiator,catch,class,not,found,exception,instantiation,exception,no,such,method,exception,illegal,access,exception,invocation,target,exception,e,log,warn,falling,back,to,default,kryo,serializer,because,chill,serializer,couldn,t,be,found,e,kryo,default,instantiator,strategy,init,strategy,new,kryo,default,instantiator,strategy,init,strategy,set,fallback,instantiator,strategy,new,std,instantiator,strategy,kryo,kryo,new,kryo,kryo,set,instantiator,strategy,init,strategy,return,kryo
KryoSerializer -> private Kryo getKryoInstance();1520442634;Returns the Chill Kryo Serializer which is implicitly added to the classpath via flink-runtime._Falls back to the default Kryo serializer if it can't be found._@return The Kryo serializer instance.;private Kryo getKryoInstance() {__		try {_			_			_			Class<?> chillInstantiatorClazz = Class.forName("com.twitter.chill.ScalaKryoInstantiator")__			Object chillInstantiator = chillInstantiatorClazz.newInstance()___			_			Method m = chillInstantiatorClazz.getMethod("newKryo")___			return (Kryo) m.invoke(chillInstantiator)__		} catch (ClassNotFoundException | InstantiationException | NoSuchMethodException |_			IllegalAccessException | InvocationTargetException e) {__			LOG.warn("Falling back to default Kryo serializer because Chill serializer couldn't be found.", e)___			Kryo.DefaultInstantiatorStrategy initStrategy = new Kryo.DefaultInstantiatorStrategy()__			initStrategy.setFallbackInstantiatorStrategy(new StdInstantiatorStrategy())___			Kryo kryo = new Kryo()__			kryo.setInstantiatorStrategy(initStrategy)___			return kryo__		}_	};returns,the,chill,kryo,serializer,which,is,implicitly,added,to,the,classpath,via,flink,runtime,falls,back,to,the,default,kryo,serializer,if,it,can,t,be,found,return,the,kryo,serializer,instance;private,kryo,get,kryo,instance,try,class,chill,instantiator,clazz,class,for,name,com,twitter,chill,scala,kryo,instantiator,object,chill,instantiator,chill,instantiator,clazz,new,instance,method,m,chill,instantiator,clazz,get,method,new,kryo,return,kryo,m,invoke,chill,instantiator,catch,class,not,found,exception,instantiation,exception,no,such,method,exception,illegal,access,exception,invocation,target,exception,e,log,warn,falling,back,to,default,kryo,serializer,because,chill,serializer,couldn,t,be,found,e,kryo,default,instantiator,strategy,init,strategy,new,kryo,default,instantiator,strategy,init,strategy,set,fallback,instantiator,strategy,new,std,instantiator,strategy,kryo,kryo,new,kryo,kryo,set,instantiator,strategy,init,strategy,return,kryo
KryoSerializer -> private Kryo getKryoInstance();1520442634;Returns the Chill Kryo Serializer which is implicitly added to the classpath via flink-runtime._Falls back to the default Kryo serializer if it can't be found._@return The Kryo serializer instance.;private Kryo getKryoInstance() {__		try {_			_			_			Class<?> chillInstantiatorClazz = Class.forName("com.twitter.chill.ScalaKryoInstantiator")__			Object chillInstantiator = chillInstantiatorClazz.newInstance()___			_			Method m = chillInstantiatorClazz.getMethod("newKryo")___			return (Kryo) m.invoke(chillInstantiator)__		} catch (ClassNotFoundException | InstantiationException | NoSuchMethodException |_			IllegalAccessException | InvocationTargetException e) {__			LOG.warn("Falling back to default Kryo serializer because Chill serializer couldn't be found.", e)___			Kryo.DefaultInstantiatorStrategy initStrategy = new Kryo.DefaultInstantiatorStrategy()__			initStrategy.setFallbackInstantiatorStrategy(new StdInstantiatorStrategy())___			Kryo kryo = new Kryo()__			kryo.setInstantiatorStrategy(initStrategy)___			return kryo__		}_	};returns,the,chill,kryo,serializer,which,is,implicitly,added,to,the,classpath,via,flink,runtime,falls,back,to,the,default,kryo,serializer,if,it,can,t,be,found,return,the,kryo,serializer,instance;private,kryo,get,kryo,instance,try,class,chill,instantiator,clazz,class,for,name,com,twitter,chill,scala,kryo,instantiator,object,chill,instantiator,chill,instantiator,clazz,new,instance,method,m,chill,instantiator,clazz,get,method,new,kryo,return,kryo,m,invoke,chill,instantiator,catch,class,not,found,exception,instantiation,exception,no,such,method,exception,illegal,access,exception,invocation,target,exception,e,log,warn,falling,back,to,default,kryo,serializer,because,chill,serializer,couldn,t,be,found,e,kryo,default,instantiator,strategy,init,strategy,new,kryo,default,instantiator,strategy,init,strategy,set,fallback,instantiator,strategy,new,std,instantiator,strategy,kryo,kryo,new,kryo,kryo,set,instantiator,strategy,init,strategy,return,kryo
KryoSerializer -> private Kryo getKryoInstance();1524241110;Returns the Chill Kryo Serializer which is implicitly added to the classpath via flink-runtime._Falls back to the default Kryo serializer if it can't be found._@return The Kryo serializer instance.;private Kryo getKryoInstance() {__		try {_			_			_			Class<?> chillInstantiatorClazz = Class.forName("com.twitter.chill.ScalaKryoInstantiator")__			Object chillInstantiator = chillInstantiatorClazz.newInstance()___			_			Method m = chillInstantiatorClazz.getMethod("newKryo")___			return (Kryo) m.invoke(chillInstantiator)__		} catch (ClassNotFoundException | InstantiationException | NoSuchMethodException |_			IllegalAccessException | InvocationTargetException e) {__			LOG.warn("Falling back to default Kryo serializer because Chill serializer couldn't be found.", e)___			Kryo.DefaultInstantiatorStrategy initStrategy = new Kryo.DefaultInstantiatorStrategy()__			initStrategy.setFallbackInstantiatorStrategy(new StdInstantiatorStrategy())___			Kryo kryo = new Kryo()__			kryo.setInstantiatorStrategy(initStrategy)___			return kryo__		}_	};returns,the,chill,kryo,serializer,which,is,implicitly,added,to,the,classpath,via,flink,runtime,falls,back,to,the,default,kryo,serializer,if,it,can,t,be,found,return,the,kryo,serializer,instance;private,kryo,get,kryo,instance,try,class,chill,instantiator,clazz,class,for,name,com,twitter,chill,scala,kryo,instantiator,object,chill,instantiator,chill,instantiator,clazz,new,instance,method,m,chill,instantiator,clazz,get,method,new,kryo,return,kryo,m,invoke,chill,instantiator,catch,class,not,found,exception,instantiation,exception,no,such,method,exception,illegal,access,exception,invocation,target,exception,e,log,warn,falling,back,to,default,kryo,serializer,because,chill,serializer,couldn,t,be,found,e,kryo,default,instantiator,strategy,init,strategy,new,kryo,default,instantiator,strategy,init,strategy,set,fallback,instantiator,strategy,new,std,instantiator,strategy,kryo,kryo,new,kryo,kryo,set,instantiator,strategy,init,strategy,return,kryo
KryoSerializer -> private Kryo getKryoInstance();1539149027;Returns the Chill Kryo Serializer which is implicitly added to the classpath via flink-runtime._Falls back to the default Kryo serializer if it can't be found._@return The Kryo serializer instance.;private Kryo getKryoInstance() {__		try {_			_			_			Class<?> chillInstantiatorClazz = Class.forName("com.twitter.chill.ScalaKryoInstantiator")__			Object chillInstantiator = chillInstantiatorClazz.newInstance()___			_			Method m = chillInstantiatorClazz.getMethod("newKryo")___			return (Kryo) m.invoke(chillInstantiator)__		} catch (ClassNotFoundException | InstantiationException | NoSuchMethodException |_			IllegalAccessException | InvocationTargetException e) {__			LOG.warn("Falling back to default Kryo serializer because Chill serializer couldn't be found.", e)___			Kryo.DefaultInstantiatorStrategy initStrategy = new Kryo.DefaultInstantiatorStrategy()__			initStrategy.setFallbackInstantiatorStrategy(new StdInstantiatorStrategy())___			Kryo kryo = new Kryo()__			kryo.setInstantiatorStrategy(initStrategy)___			return kryo__		}_	};returns,the,chill,kryo,serializer,which,is,implicitly,added,to,the,classpath,via,flink,runtime,falls,back,to,the,default,kryo,serializer,if,it,can,t,be,found,return,the,kryo,serializer,instance;private,kryo,get,kryo,instance,try,class,chill,instantiator,clazz,class,for,name,com,twitter,chill,scala,kryo,instantiator,object,chill,instantiator,chill,instantiator,clazz,new,instance,method,m,chill,instantiator,clazz,get,method,new,kryo,return,kryo,m,invoke,chill,instantiator,catch,class,not,found,exception,instantiation,exception,no,such,method,exception,illegal,access,exception,invocation,target,exception,e,log,warn,falling,back,to,default,kryo,serializer,because,chill,serializer,couldn,t,be,found,e,kryo,default,instantiator,strategy,init,strategy,new,kryo,default,instantiator,strategy,init,strategy,set,fallback,instantiator,strategy,new,std,instantiator,strategy,kryo,kryo,new,kryo,kryo,set,instantiator,strategy,init,strategy,return,kryo
KryoSerializer -> private Kryo getKryoInstance();1540981438;Returns the Chill Kryo Serializer which is implicitly added to the classpath via flink-runtime._Falls back to the default Kryo serializer if it can't be found._@return The Kryo serializer instance.;private Kryo getKryoInstance() {__		try {_			_			_			Class<?> chillInstantiatorClazz =_					Class.forName("org.apache.flink.runtime.types.FlinkScalaKryoInstantiator")__			Object chillInstantiator = chillInstantiatorClazz.newInstance()___			_			Method m = chillInstantiatorClazz.getMethod("newKryo")___			return (Kryo) m.invoke(chillInstantiator)__		} catch (ClassNotFoundException | InstantiationException | NoSuchMethodException |_			IllegalAccessException | InvocationTargetException e) {__			LOG.warn("Falling back to default Kryo serializer because Chill serializer couldn't be found.", e)___			Kryo.DefaultInstantiatorStrategy initStrategy = new Kryo.DefaultInstantiatorStrategy()__			initStrategy.setFallbackInstantiatorStrategy(new StdInstantiatorStrategy())___			Kryo kryo = new Kryo()__			kryo.setInstantiatorStrategy(initStrategy)___			return kryo__		}_	};returns,the,chill,kryo,serializer,which,is,implicitly,added,to,the,classpath,via,flink,runtime,falls,back,to,the,default,kryo,serializer,if,it,can,t,be,found,return,the,kryo,serializer,instance;private,kryo,get,kryo,instance,try,class,chill,instantiator,clazz,class,for,name,org,apache,flink,runtime,types,flink,scala,kryo,instantiator,object,chill,instantiator,chill,instantiator,clazz,new,instance,method,m,chill,instantiator,clazz,get,method,new,kryo,return,kryo,m,invoke,chill,instantiator,catch,class,not,found,exception,instantiation,exception,no,such,method,exception,illegal,access,exception,invocation,target,exception,e,log,warn,falling,back,to,default,kryo,serializer,because,chill,serializer,couldn,t,be,found,e,kryo,default,instantiator,strategy,init,strategy,new,kryo,default,instantiator,strategy,init,strategy,set,fallback,instantiator,strategy,new,std,instantiator,strategy,kryo,kryo,new,kryo,kryo,set,instantiator,strategy,init,strategy,return,kryo
KryoSerializer -> private Kryo getKryoInstance();1550652777;Returns the Chill Kryo Serializer which is implicitly added to the classpath via flink-runtime._Falls back to the default Kryo serializer if it can't be found._@return The Kryo serializer instance.;private Kryo getKryoInstance() {__		try {_			_			_			Class<?> chillInstantiatorClazz =_					Class.forName("org.apache.flink.runtime.types.FlinkScalaKryoInstantiator")__			Object chillInstantiator = chillInstantiatorClazz.newInstance()___			_			Method m = chillInstantiatorClazz.getMethod("newKryo")___			return (Kryo) m.invoke(chillInstantiator)__		} catch (ClassNotFoundException | InstantiationException | NoSuchMethodException |_			IllegalAccessException | InvocationTargetException e) {__			LOG.warn("Falling back to default Kryo serializer because Chill serializer couldn't be found.", e)___			Kryo.DefaultInstantiatorStrategy initStrategy = new Kryo.DefaultInstantiatorStrategy()__			initStrategy.setFallbackInstantiatorStrategy(new StdInstantiatorStrategy())___			Kryo kryo = new Kryo()__			kryo.setInstantiatorStrategy(initStrategy)___			return kryo__		}_	};returns,the,chill,kryo,serializer,which,is,implicitly,added,to,the,classpath,via,flink,runtime,falls,back,to,the,default,kryo,serializer,if,it,can,t,be,found,return,the,kryo,serializer,instance;private,kryo,get,kryo,instance,try,class,chill,instantiator,clazz,class,for,name,org,apache,flink,runtime,types,flink,scala,kryo,instantiator,object,chill,instantiator,chill,instantiator,clazz,new,instance,method,m,chill,instantiator,clazz,get,method,new,kryo,return,kryo,m,invoke,chill,instantiator,catch,class,not,found,exception,instantiation,exception,no,such,method,exception,illegal,access,exception,invocation,target,exception,e,log,warn,falling,back,to,default,kryo,serializer,because,chill,serializer,couldn,t,be,found,e,kryo,default,instantiator,strategy,init,strategy,new,kryo,default,instantiator,strategy,init,strategy,set,fallback,instantiator,strategy,new,std,instantiator,strategy,kryo,kryo,new,kryo,kryo,set,instantiator,strategy,init,strategy,return,kryo
KryoSerializer -> private Kryo getKryoInstance();1550821415;Returns the Chill Kryo Serializer which is implicitly added to the classpath via flink-runtime._Falls back to the default Kryo serializer if it can't be found._@return The Kryo serializer instance.;private Kryo getKryoInstance() {__		try {_			_			_			Class<?> chillInstantiatorClazz =_					Class.forName("org.apache.flink.runtime.types.FlinkScalaKryoInstantiator")__			Object chillInstantiator = chillInstantiatorClazz.newInstance()___			_			Method m = chillInstantiatorClazz.getMethod("newKryo")___			return (Kryo) m.invoke(chillInstantiator)__		} catch (ClassNotFoundException | InstantiationException | NoSuchMethodException |_			IllegalAccessException | InvocationTargetException e) {__			LOG.warn("Falling back to default Kryo serializer because Chill serializer couldn't be found.", e)___			Kryo.DefaultInstantiatorStrategy initStrategy = new Kryo.DefaultInstantiatorStrategy()__			initStrategy.setFallbackInstantiatorStrategy(new StdInstantiatorStrategy())___			Kryo kryo = new Kryo()__			kryo.setInstantiatorStrategy(initStrategy)___			return kryo__		}_	};returns,the,chill,kryo,serializer,which,is,implicitly,added,to,the,classpath,via,flink,runtime,falls,back,to,the,default,kryo,serializer,if,it,can,t,be,found,return,the,kryo,serializer,instance;private,kryo,get,kryo,instance,try,class,chill,instantiator,clazz,class,for,name,org,apache,flink,runtime,types,flink,scala,kryo,instantiator,object,chill,instantiator,chill,instantiator,clazz,new,instance,method,m,chill,instantiator,clazz,get,method,new,kryo,return,kryo,m,invoke,chill,instantiator,catch,class,not,found,exception,instantiation,exception,no,such,method,exception,illegal,access,exception,invocation,target,exception,e,log,warn,falling,back,to,default,kryo,serializer,because,chill,serializer,couldn,t,be,found,e,kryo,default,instantiator,strategy,init,strategy,new,kryo,default,instantiator,strategy,init,strategy,set,fallback,instantiator,strategy,new,std,instantiator,strategy,kryo,kryo,new,kryo,kryo,set,instantiator,strategy,init,strategy,return,kryo
KryoSerializer -> KryoSerializerConfigSnapshot -> public KryoSerializerConfigSnapshot();1494180263;This empty nullary constructor is required for deserializing the configuration.;public KryoSerializerConfigSnapshot() {};this,empty,nullary,constructor,is,required,for,deserializing,the,configuration;public,kryo,serializer,config,snapshot
KryoSerializer -> KryoSerializerConfigSnapshot -> public KryoSerializerConfigSnapshot();1494658833;This empty nullary constructor is required for deserializing the configuration.;public KryoSerializerConfigSnapshot() {};this,empty,nullary,constructor,is,required,for,deserializing,the,configuration;public,kryo,serializer,config,snapshot
KryoSerializer -> KryoSerializerConfigSnapshot -> public KryoSerializerConfigSnapshot();1495142377;This empty nullary constructor is required for deserializing the configuration.;public KryoSerializerConfigSnapshot() {};this,empty,nullary,constructor,is,required,for,deserializing,the,configuration;public,kryo,serializer,config,snapshot
KryoSerializer -> KryoSerializerConfigSnapshot -> public KryoSerializerConfigSnapshot();1509723634;This empty nullary constructor is required for deserializing the configuration.;public KryoSerializerConfigSnapshot() {};this,empty,nullary,constructor,is,required,for,deserializing,the,configuration;public,kryo,serializer,config,snapshot
KryoSerializer -> KryoSerializerConfigSnapshot -> public KryoSerializerConfigSnapshot();1509723634;This empty nullary constructor is required for deserializing the configuration.;public KryoSerializerConfigSnapshot() {};this,empty,nullary,constructor,is,required,for,deserializing,the,configuration;public,kryo,serializer,config,snapshot
KryoSerializer -> KryoSerializerConfigSnapshot -> public KryoSerializerConfigSnapshot();1515177485;This empty nullary constructor is required for deserializing the configuration.;public KryoSerializerConfigSnapshot() {};this,empty,nullary,constructor,is,required,for,deserializing,the,configuration;public,kryo,serializer,config,snapshot
KryoSerializer -> KryoSerializerConfigSnapshot -> public KryoSerializerConfigSnapshot();1520442634;This empty nullary constructor is required for deserializing the configuration.;public KryoSerializerConfigSnapshot() {};this,empty,nullary,constructor,is,required,for,deserializing,the,configuration;public,kryo,serializer,config,snapshot
KryoSerializer -> KryoSerializerConfigSnapshot -> public KryoSerializerConfigSnapshot();1520442634;This empty nullary constructor is required for deserializing the configuration.;public KryoSerializerConfigSnapshot() {};this,empty,nullary,constructor,is,required,for,deserializing,the,configuration;public,kryo,serializer,config,snapshot
KryoSerializer -> KryoSerializerConfigSnapshot -> public KryoSerializerConfigSnapshot();1524241110;This empty nullary constructor is required for deserializing the configuration.;public KryoSerializerConfigSnapshot() {};this,empty,nullary,constructor,is,required,for,deserializing,the,configuration;public,kryo,serializer,config,snapshot
KryoSerializer -> KryoSerializerConfigSnapshot -> public KryoSerializerConfigSnapshot();1539149027;This empty nullary constructor is required for deserializing the configuration.;public KryoSerializerConfigSnapshot() {};this,empty,nullary,constructor,is,required,for,deserializing,the,configuration;public,kryo,serializer,config,snapshot
KryoSerializer -> KryoSerializerConfigSnapshot -> public KryoSerializerConfigSnapshot();1540981438;This empty nullary constructor is required for deserializing the configuration.;public KryoSerializerConfigSnapshot() {};this,empty,nullary,constructor,is,required,for,deserializing,the,configuration;public,kryo,serializer,config,snapshot
KryoSerializer -> KryoSerializerConfigSnapshot -> public KryoSerializerConfigSnapshot();1550652777;This empty nullary constructor is required for deserializing the configuration.;public KryoSerializerConfigSnapshot() {};this,empty,nullary,constructor,is,required,for,deserializing,the,configuration;public,kryo,serializer,config,snapshot
KryoSerializer -> KryoSerializerConfigSnapshot -> public KryoSerializerConfigSnapshot();1550821415;This empty nullary constructor is required for deserializing the configuration.;public KryoSerializerConfigSnapshot() {};this,empty,nullary,constructor,is,required,for,deserializing,the,configuration;public,kryo,serializer,config,snapshot
KryoSerializer -> protected KryoSerializer(KryoSerializer<T> toCopy);1454428544;Copy-constructor that does not copy transient fields. They will be initialized once required.;protected KryoSerializer(KryoSerializer<T> toCopy) {_		registeredTypesWithSerializers = toCopy.registeredTypesWithSerializers__		registeredTypesWithSerializerClasses = toCopy.registeredTypesWithSerializerClasses__		defaultSerializers = toCopy.defaultSerializers__		defaultSerializerClasses = toCopy.defaultSerializerClasses__		registeredTypes = toCopy.registeredTypes___		type = toCopy.type__		if(type == null){_			throw new NullPointerException("Type class cannot be null.")__		}_	};copy,constructor,that,does,not,copy,transient,fields,they,will,be,initialized,once,required;protected,kryo,serializer,kryo,serializer,t,to,copy,registered,types,with,serializers,to,copy,registered,types,with,serializers,registered,types,with,serializer,classes,to,copy,registered,types,with,serializer,classes,default,serializers,to,copy,default,serializers,default,serializer,classes,to,copy,default,serializer,classes,registered,types,to,copy,registered,types,type,to,copy,type,if,type,null,throw,new,null,pointer,exception,type,class,cannot,be,null
KryoSerializer -> protected KryoSerializer(KryoSerializer<T> toCopy);1460741894;Copy-constructor that does not copy transient fields. They will be initialized once required.;protected KryoSerializer(KryoSerializer<T> toCopy) {_		registeredTypesWithSerializers = toCopy.registeredTypesWithSerializers__		registeredTypesWithSerializerClasses = toCopy.registeredTypesWithSerializerClasses__		defaultSerializers = toCopy.defaultSerializers__		defaultSerializerClasses = toCopy.defaultSerializerClasses__		registeredTypes = toCopy.registeredTypes___		type = toCopy.type__		if(type == null){_			throw new NullPointerException("Type class cannot be null.")__		}_	};copy,constructor,that,does,not,copy,transient,fields,they,will,be,initialized,once,required;protected,kryo,serializer,kryo,serializer,t,to,copy,registered,types,with,serializers,to,copy,registered,types,with,serializers,registered,types,with,serializer,classes,to,copy,registered,types,with,serializer,classes,default,serializers,to,copy,default,serializers,default,serializer,classes,to,copy,default,serializer,classes,registered,types,to,copy,registered,types,type,to,copy,type,if,type,null,throw,new,null,pointer,exception,type,class,cannot,be,null
KryoSerializer -> protected KryoSerializer(KryoSerializer<T> toCopy);1460741895;Copy-constructor that does not copy transient fields. They will be initialized once required.;protected KryoSerializer(KryoSerializer<T> toCopy) {_		registeredTypesWithSerializers = toCopy.registeredTypesWithSerializers__		registeredTypesWithSerializerClasses = toCopy.registeredTypesWithSerializerClasses__		defaultSerializers = toCopy.defaultSerializers__		defaultSerializerClasses = toCopy.defaultSerializerClasses__		registeredTypes = toCopy.registeredTypes___		type = toCopy.type__		if(type == null){_			throw new NullPointerException("Type class cannot be null.")__		}_	};copy,constructor,that,does,not,copy,transient,fields,they,will,be,initialized,once,required;protected,kryo,serializer,kryo,serializer,t,to,copy,registered,types,with,serializers,to,copy,registered,types,with,serializers,registered,types,with,serializer,classes,to,copy,registered,types,with,serializer,classes,default,serializers,to,copy,default,serializers,default,serializer,classes,to,copy,default,serializer,classes,registered,types,to,copy,registered,types,type,to,copy,type,if,type,null,throw,new,null,pointer,exception,type,class,cannot,be,null
KryoSerializer -> protected KryoSerializer(KryoSerializer<T> toCopy);1489419093;Copy-constructor that does not copy transient fields. They will be initialized once required.;protected KryoSerializer(KryoSerializer<T> toCopy) {_		registeredTypesWithSerializers = toCopy.registeredTypesWithSerializers__		registeredTypesWithSerializerClasses = toCopy.registeredTypesWithSerializerClasses__		defaultSerializers = toCopy.defaultSerializers__		defaultSerializerClasses = toCopy.defaultSerializerClasses__		registeredTypes = toCopy.registeredTypes___		type = toCopy.type__		if(type == null){_			throw new NullPointerException("Type class cannot be null.")__		}_	};copy,constructor,that,does,not,copy,transient,fields,they,will,be,initialized,once,required;protected,kryo,serializer,kryo,serializer,t,to,copy,registered,types,with,serializers,to,copy,registered,types,with,serializers,registered,types,with,serializer,classes,to,copy,registered,types,with,serializer,classes,default,serializers,to,copy,default,serializers,default,serializer,classes,to,copy,default,serializer,classes,registered,types,to,copy,registered,types,type,to,copy,type,if,type,null,throw,new,null,pointer,exception,type,class,cannot,be,null
KryoSerializer -> protected KryoSerializer(KryoSerializer<T> toCopy);1490330043;Copy-constructor that does not copy transient fields. They will be initialized once required.;protected KryoSerializer(KryoSerializer<T> toCopy) {_		registeredTypesWithSerializers = toCopy.registeredTypesWithSerializers__		registeredTypesWithSerializerClasses = toCopy.registeredTypesWithSerializerClasses__		defaultSerializers = toCopy.defaultSerializers__		defaultSerializerClasses = toCopy.defaultSerializerClasses__		registeredTypes = toCopy.registeredTypes___		type = toCopy.type__		if(type == null){_			throw new NullPointerException("Type class cannot be null.")__		}_	};copy,constructor,that,does,not,copy,transient,fields,they,will,be,initialized,once,required;protected,kryo,serializer,kryo,serializer,t,to,copy,registered,types,with,serializers,to,copy,registered,types,with,serializers,registered,types,with,serializer,classes,to,copy,registered,types,with,serializer,classes,default,serializers,to,copy,default,serializers,default,serializer,classes,to,copy,default,serializer,classes,registered,types,to,copy,registered,types,type,to,copy,type,if,type,null,throw,new,null,pointer,exception,type,class,cannot,be,null
KryoSerializer -> protected KryoSerializer(KryoSerializer<T> toCopy);1494180263;Copy-constructor that does not copy transient fields. They will be initialized once required.;protected KryoSerializer(KryoSerializer<T> toCopy) {_		defaultSerializers = toCopy.defaultSerializers__		defaultSerializerClasses = toCopy.defaultSerializerClasses___		kryoRegistrations = toCopy.kryoRegistrations___		type = toCopy.type__		if(type == null){_			throw new NullPointerException("Type class cannot be null.")__		}_	};copy,constructor,that,does,not,copy,transient,fields,they,will,be,initialized,once,required;protected,kryo,serializer,kryo,serializer,t,to,copy,default,serializers,to,copy,default,serializers,default,serializer,classes,to,copy,default,serializer,classes,kryo,registrations,to,copy,kryo,registrations,type,to,copy,type,if,type,null,throw,new,null,pointer,exception,type,class,cannot,be,null
KryoSerializer -> protected KryoSerializer(KryoSerializer<T> toCopy);1494658833;Copy-constructor that does not copy transient fields. They will be initialized once required.;protected KryoSerializer(KryoSerializer<T> toCopy) {_		defaultSerializers = toCopy.defaultSerializers__		defaultSerializerClasses = toCopy.defaultSerializerClasses___		kryoRegistrations = toCopy.kryoRegistrations___		type = toCopy.type__		if(type == null){_			throw new NullPointerException("Type class cannot be null.")__		}_	};copy,constructor,that,does,not,copy,transient,fields,they,will,be,initialized,once,required;protected,kryo,serializer,kryo,serializer,t,to,copy,default,serializers,to,copy,default,serializers,default,serializer,classes,to,copy,default,serializer,classes,kryo,registrations,to,copy,kryo,registrations,type,to,copy,type,if,type,null,throw,new,null,pointer,exception,type,class,cannot,be,null
KryoSerializer -> protected KryoSerializer(KryoSerializer<T> toCopy);1495142377;Copy-constructor that does not copy transient fields. They will be initialized once required.;protected KryoSerializer(KryoSerializer<T> toCopy) {_		defaultSerializers = toCopy.defaultSerializers__		defaultSerializerClasses = toCopy.defaultSerializerClasses___		kryoRegistrations = toCopy.kryoRegistrations___		type = toCopy.type__		if(type == null){_			throw new NullPointerException("Type class cannot be null.")__		}_	};copy,constructor,that,does,not,copy,transient,fields,they,will,be,initialized,once,required;protected,kryo,serializer,kryo,serializer,t,to,copy,default,serializers,to,copy,default,serializers,default,serializer,classes,to,copy,default,serializer,classes,kryo,registrations,to,copy,kryo,registrations,type,to,copy,type,if,type,null,throw,new,null,pointer,exception,type,class,cannot,be,null
KryoSerializer -> protected KryoSerializer(KryoSerializer<T> toCopy);1509723634;Copy-constructor that does not copy transient fields. They will be initialized once required.;protected KryoSerializer(KryoSerializer<T> toCopy) {_		defaultSerializers = toCopy.defaultSerializers__		defaultSerializerClasses = toCopy.defaultSerializerClasses___		kryoRegistrations = toCopy.kryoRegistrations___		type = toCopy.type__		if(type == null){_			throw new NullPointerException("Type class cannot be null.")__		}_	};copy,constructor,that,does,not,copy,transient,fields,they,will,be,initialized,once,required;protected,kryo,serializer,kryo,serializer,t,to,copy,default,serializers,to,copy,default,serializers,default,serializer,classes,to,copy,default,serializer,classes,kryo,registrations,to,copy,kryo,registrations,type,to,copy,type,if,type,null,throw,new,null,pointer,exception,type,class,cannot,be,null
KryoSerializer -> protected KryoSerializer(KryoSerializer<T> toCopy);1509723634;Copy-constructor that does not copy transient fields. They will be initialized once required.;protected KryoSerializer(KryoSerializer<T> toCopy) {_		defaultSerializers = toCopy.defaultSerializers__		defaultSerializerClasses = toCopy.defaultSerializerClasses___		kryoRegistrations = toCopy.kryoRegistrations___		type = toCopy.type__		if(type == null){_			throw new NullPointerException("Type class cannot be null.")__		}_	};copy,constructor,that,does,not,copy,transient,fields,they,will,be,initialized,once,required;protected,kryo,serializer,kryo,serializer,t,to,copy,default,serializers,to,copy,default,serializers,default,serializer,classes,to,copy,default,serializer,classes,kryo,registrations,to,copy,kryo,registrations,type,to,copy,type,if,type,null,throw,new,null,pointer,exception,type,class,cannot,be,null
KryoSerializer -> protected KryoSerializer(KryoSerializer<T> toCopy);1515177485;Copy-constructor that does not copy transient fields. They will be initialized once required.;protected KryoSerializer(KryoSerializer<T> toCopy) {_		defaultSerializers = toCopy.defaultSerializers__		defaultSerializerClasses = toCopy.defaultSerializerClasses___		kryoRegistrations = toCopy.kryoRegistrations___		type = toCopy.type__		if(type == null){_			throw new NullPointerException("Type class cannot be null.")__		}_	};copy,constructor,that,does,not,copy,transient,fields,they,will,be,initialized,once,required;protected,kryo,serializer,kryo,serializer,t,to,copy,default,serializers,to,copy,default,serializers,default,serializer,classes,to,copy,default,serializer,classes,kryo,registrations,to,copy,kryo,registrations,type,to,copy,type,if,type,null,throw,new,null,pointer,exception,type,class,cannot,be,null
KryoSerializer -> protected KryoSerializer(KryoSerializer<T> toCopy);1520442634;Copy-constructor that does not copy transient fields. They will be initialized once required.;protected KryoSerializer(KryoSerializer<T> toCopy) {_		defaultSerializers = toCopy.defaultSerializers__		defaultSerializerClasses = toCopy.defaultSerializerClasses___		kryoRegistrations = toCopy.kryoRegistrations___		type = toCopy.type__		if(type == null){_			throw new NullPointerException("Type class cannot be null.")__		}_	};copy,constructor,that,does,not,copy,transient,fields,they,will,be,initialized,once,required;protected,kryo,serializer,kryo,serializer,t,to,copy,default,serializers,to,copy,default,serializers,default,serializer,classes,to,copy,default,serializer,classes,kryo,registrations,to,copy,kryo,registrations,type,to,copy,type,if,type,null,throw,new,null,pointer,exception,type,class,cannot,be,null
KryoSerializer -> protected KryoSerializer(KryoSerializer<T> toCopy);1520442634;Copy-constructor that does not copy transient fields. They will be initialized once required.;protected KryoSerializer(KryoSerializer<T> toCopy) {_		defaultSerializers = toCopy.defaultSerializers__		defaultSerializerClasses = toCopy.defaultSerializerClasses___		kryoRegistrations = toCopy.kryoRegistrations___		type = toCopy.type__		if(type == null){_			throw new NullPointerException("Type class cannot be null.")__		}_	};copy,constructor,that,does,not,copy,transient,fields,they,will,be,initialized,once,required;protected,kryo,serializer,kryo,serializer,t,to,copy,default,serializers,to,copy,default,serializers,default,serializer,classes,to,copy,default,serializer,classes,kryo,registrations,to,copy,kryo,registrations,type,to,copy,type,if,type,null,throw,new,null,pointer,exception,type,class,cannot,be,null
KryoSerializer -> protected KryoSerializer(KryoSerializer<T> toCopy);1524241110;Copy-constructor that does not copy transient fields. They will be initialized once required.;protected KryoSerializer(KryoSerializer<T> toCopy) {__		this.type = checkNotNull(toCopy.type, "Type class cannot be null.")__		this.defaultSerializerClasses = toCopy.defaultSerializerClasses__		this.defaultSerializers = new LinkedHashMap<>(toCopy.defaultSerializers.size())__		this.kryoRegistrations = new LinkedHashMap<>(toCopy.kryoRegistrations.size())___		_		for (Map.Entry<Class<?>, ExecutionConfig.SerializableSerializer<?>> entry :_			toCopy.defaultSerializers.entrySet()) {__			this.defaultSerializers.put(entry.getKey(), deepCopySerializer(entry.getValue()))__		}__		_		for (Map.Entry<String, KryoRegistration> entry : toCopy.kryoRegistrations.entrySet()) {__			KryoRegistration kryoRegistration = entry.getValue()___			if (kryoRegistration.getSerializerDefinitionType() == KryoRegistration.SerializerDefinitionType.INSTANCE) {__				ExecutionConfig.SerializableSerializer<? extends Serializer<?>> serializerInstance =_					kryoRegistration.getSerializableSerializerInstance()___				if (serializerInstance != null) {_					kryoRegistration = new KryoRegistration(_						kryoRegistration.getRegisteredClass(),_						deepCopySerializer(serializerInstance))__				}_			}__			this.kryoRegistrations.put(entry.getKey(), kryoRegistration)__		}_	};copy,constructor,that,does,not,copy,transient,fields,they,will,be,initialized,once,required;protected,kryo,serializer,kryo,serializer,t,to,copy,this,type,check,not,null,to,copy,type,type,class,cannot,be,null,this,default,serializer,classes,to,copy,default,serializer,classes,this,default,serializers,new,linked,hash,map,to,copy,default,serializers,size,this,kryo,registrations,new,linked,hash,map,to,copy,kryo,registrations,size,for,map,entry,class,execution,config,serializable,serializer,entry,to,copy,default,serializers,entry,set,this,default,serializers,put,entry,get,key,deep,copy,serializer,entry,get,value,for,map,entry,string,kryo,registration,entry,to,copy,kryo,registrations,entry,set,kryo,registration,kryo,registration,entry,get,value,if,kryo,registration,get,serializer,definition,type,kryo,registration,serializer,definition,type,instance,execution,config,serializable,serializer,extends,serializer,serializer,instance,kryo,registration,get,serializable,serializer,instance,if,serializer,instance,null,kryo,registration,new,kryo,registration,kryo,registration,get,registered,class,deep,copy,serializer,serializer,instance,this,kryo,registrations,put,entry,get,key,kryo,registration
KryoSerializer -> protected KryoSerializer(KryoSerializer<T> toCopy);1539149027;Copy-constructor that does not copy transient fields. They will be initialized once required.;protected KryoSerializer(KryoSerializer<T> toCopy) {__		this.type = checkNotNull(toCopy.type, "Type class cannot be null.")__		this.defaultSerializerClasses = toCopy.defaultSerializerClasses__		this.defaultSerializers = new LinkedHashMap<>(toCopy.defaultSerializers.size())__		this.kryoRegistrations = new LinkedHashMap<>(toCopy.kryoRegistrations.size())___		_		for (Map.Entry<Class<?>, ExecutionConfig.SerializableSerializer<?>> entry :_			toCopy.defaultSerializers.entrySet()) {__			this.defaultSerializers.put(entry.getKey(), deepCopySerializer(entry.getValue()))__		}__		_		for (Map.Entry<String, KryoRegistration> entry : toCopy.kryoRegistrations.entrySet()) {__			KryoRegistration kryoRegistration = entry.getValue()___			if (kryoRegistration.getSerializerDefinitionType() == KryoRegistration.SerializerDefinitionType.INSTANCE) {__				ExecutionConfig.SerializableSerializer<? extends Serializer<?>> serializerInstance =_					kryoRegistration.getSerializableSerializerInstance()___				if (serializerInstance != null) {_					kryoRegistration = new KryoRegistration(_						kryoRegistration.getRegisteredClass(),_						deepCopySerializer(serializerInstance))__				}_			}__			this.kryoRegistrations.put(entry.getKey(), kryoRegistration)__		}_	};copy,constructor,that,does,not,copy,transient,fields,they,will,be,initialized,once,required;protected,kryo,serializer,kryo,serializer,t,to,copy,this,type,check,not,null,to,copy,type,type,class,cannot,be,null,this,default,serializer,classes,to,copy,default,serializer,classes,this,default,serializers,new,linked,hash,map,to,copy,default,serializers,size,this,kryo,registrations,new,linked,hash,map,to,copy,kryo,registrations,size,for,map,entry,class,execution,config,serializable,serializer,entry,to,copy,default,serializers,entry,set,this,default,serializers,put,entry,get,key,deep,copy,serializer,entry,get,value,for,map,entry,string,kryo,registration,entry,to,copy,kryo,registrations,entry,set,kryo,registration,kryo,registration,entry,get,value,if,kryo,registration,get,serializer,definition,type,kryo,registration,serializer,definition,type,instance,execution,config,serializable,serializer,extends,serializer,serializer,instance,kryo,registration,get,serializable,serializer,instance,if,serializer,instance,null,kryo,registration,new,kryo,registration,kryo,registration,get,registered,class,deep,copy,serializer,serializer,instance,this,kryo,registrations,put,entry,get,key,kryo,registration
KryoSerializer -> protected KryoSerializer(KryoSerializer<T> toCopy);1540981438;Copy-constructor that does not copy transient fields. They will be initialized once required.;protected KryoSerializer(KryoSerializer<T> toCopy) {__		this.type = checkNotNull(toCopy.type, "Type class cannot be null.")__		this.defaultSerializerClasses = toCopy.defaultSerializerClasses__		this.defaultSerializers = new LinkedHashMap<>(toCopy.defaultSerializers.size())__		this.kryoRegistrations = new LinkedHashMap<>(toCopy.kryoRegistrations.size())___		_		for (Map.Entry<Class<?>, ExecutionConfig.SerializableSerializer<?>> entry :_			toCopy.defaultSerializers.entrySet()) {__			this.defaultSerializers.put(entry.getKey(), deepCopySerializer(entry.getValue()))__		}__		_		for (Map.Entry<String, KryoRegistration> entry : toCopy.kryoRegistrations.entrySet()) {__			KryoRegistration kryoRegistration = entry.getValue()___			if (kryoRegistration.getSerializerDefinitionType() == KryoRegistration.SerializerDefinitionType.INSTANCE) {__				ExecutionConfig.SerializableSerializer<? extends Serializer<?>> serializerInstance =_					kryoRegistration.getSerializableSerializerInstance()___				if (serializerInstance != null) {_					kryoRegistration = new KryoRegistration(_						kryoRegistration.getRegisteredClass(),_						deepCopySerializer(serializerInstance))__				}_			}__			this.kryoRegistrations.put(entry.getKey(), kryoRegistration)__		}_	};copy,constructor,that,does,not,copy,transient,fields,they,will,be,initialized,once,required;protected,kryo,serializer,kryo,serializer,t,to,copy,this,type,check,not,null,to,copy,type,type,class,cannot,be,null,this,default,serializer,classes,to,copy,default,serializer,classes,this,default,serializers,new,linked,hash,map,to,copy,default,serializers,size,this,kryo,registrations,new,linked,hash,map,to,copy,kryo,registrations,size,for,map,entry,class,execution,config,serializable,serializer,entry,to,copy,default,serializers,entry,set,this,default,serializers,put,entry,get,key,deep,copy,serializer,entry,get,value,for,map,entry,string,kryo,registration,entry,to,copy,kryo,registrations,entry,set,kryo,registration,kryo,registration,entry,get,value,if,kryo,registration,get,serializer,definition,type,kryo,registration,serializer,definition,type,instance,execution,config,serializable,serializer,extends,serializer,serializer,instance,kryo,registration,get,serializable,serializer,instance,if,serializer,instance,null,kryo,registration,new,kryo,registration,kryo,registration,get,registered,class,deep,copy,serializer,serializer,instance,this,kryo,registrations,put,entry,get,key,kryo,registration
KryoSerializer -> protected KryoSerializer(KryoSerializer<T> toCopy);1550652777;Copy-constructor that does not copy transient fields. They will be initialized once required.;protected KryoSerializer(KryoSerializer<T> toCopy) {__		this.type = checkNotNull(toCopy.type, "Type class cannot be null.")__		this.defaultSerializerClasses = toCopy.defaultSerializerClasses__		this.defaultSerializers = new LinkedHashMap<>(toCopy.defaultSerializers.size())__		this.kryoRegistrations = new LinkedHashMap<>(toCopy.kryoRegistrations.size())___		_		for (Map.Entry<Class<?>, ExecutionConfig.SerializableSerializer<?>> entry :_			toCopy.defaultSerializers.entrySet()) {__			this.defaultSerializers.put(entry.getKey(), deepCopySerializer(entry.getValue()))__		}__		_		for (Map.Entry<String, KryoRegistration> entry : toCopy.kryoRegistrations.entrySet()) {__			KryoRegistration kryoRegistration = entry.getValue()___			if (kryoRegistration.getSerializerDefinitionType() == KryoRegistration.SerializerDefinitionType.INSTANCE) {__				ExecutionConfig.SerializableSerializer<? extends Serializer<?>> serializerInstance =_					kryoRegistration.getSerializableSerializerInstance()___				if (serializerInstance != null) {_					kryoRegistration = new KryoRegistration(_						kryoRegistration.getRegisteredClass(),_						deepCopySerializer(serializerInstance))__				}_			}__			this.kryoRegistrations.put(entry.getKey(), kryoRegistration)__		}_	};copy,constructor,that,does,not,copy,transient,fields,they,will,be,initialized,once,required;protected,kryo,serializer,kryo,serializer,t,to,copy,this,type,check,not,null,to,copy,type,type,class,cannot,be,null,this,default,serializer,classes,to,copy,default,serializer,classes,this,default,serializers,new,linked,hash,map,to,copy,default,serializers,size,this,kryo,registrations,new,linked,hash,map,to,copy,kryo,registrations,size,for,map,entry,class,execution,config,serializable,serializer,entry,to,copy,default,serializers,entry,set,this,default,serializers,put,entry,get,key,deep,copy,serializer,entry,get,value,for,map,entry,string,kryo,registration,entry,to,copy,kryo,registrations,entry,set,kryo,registration,kryo,registration,entry,get,value,if,kryo,registration,get,serializer,definition,type,kryo,registration,serializer,definition,type,instance,execution,config,serializable,serializer,extends,serializer,serializer,instance,kryo,registration,get,serializable,serializer,instance,if,serializer,instance,null,kryo,registration,new,kryo,registration,kryo,registration,get,registered,class,deep,copy,serializer,serializer,instance,this,kryo,registrations,put,entry,get,key,kryo,registration
KryoSerializer -> protected KryoSerializer(KryoSerializer<T> toCopy);1550821415;Copy-constructor that does not copy transient fields. They will be initialized once required.;protected KryoSerializer(KryoSerializer<T> toCopy) {__		this.type = checkNotNull(toCopy.type, "Type class cannot be null.")__		this.defaultSerializerClasses = toCopy.defaultSerializerClasses__		this.defaultSerializers = new LinkedHashMap<>(toCopy.defaultSerializers.size())__		this.kryoRegistrations = new LinkedHashMap<>(toCopy.kryoRegistrations.size())___		_		for (Map.Entry<Class<?>, ExecutionConfig.SerializableSerializer<?>> entry :_			toCopy.defaultSerializers.entrySet()) {__			this.defaultSerializers.put(entry.getKey(), deepCopySerializer(entry.getValue()))__		}__		_		for (Map.Entry<String, KryoRegistration> entry : toCopy.kryoRegistrations.entrySet()) {__			KryoRegistration kryoRegistration = entry.getValue()___			if (kryoRegistration.getSerializerDefinitionType() == KryoRegistration.SerializerDefinitionType.INSTANCE) {__				ExecutionConfig.SerializableSerializer<? extends Serializer<?>> serializerInstance =_					kryoRegistration.getSerializableSerializerInstance()___				if (serializerInstance != null) {_					kryoRegistration = new KryoRegistration(_						kryoRegistration.getRegisteredClass(),_						deepCopySerializer(serializerInstance))__				}_			}__			this.kryoRegistrations.put(entry.getKey(), kryoRegistration)__		}_	};copy,constructor,that,does,not,copy,transient,fields,they,will,be,initialized,once,required;protected,kryo,serializer,kryo,serializer,t,to,copy,this,type,check,not,null,to,copy,type,type,class,cannot,be,null,this,default,serializer,classes,to,copy,default,serializer,classes,this,default,serializers,new,linked,hash,map,to,copy,default,serializers,size,this,kryo,registrations,new,linked,hash,map,to,copy,kryo,registrations,size,for,map,entry,class,execution,config,serializable,serializer,entry,to,copy,default,serializers,entry,set,this,default,serializers,put,entry,get,key,deep,copy,serializer,entry,get,value,for,map,entry,string,kryo,registration,entry,to,copy,kryo,registrations,entry,set,kryo,registration,kryo,registration,entry,get,value,if,kryo,registration,get,serializer,definition,type,kryo,registration,serializer,definition,type,instance,execution,config,serializable,serializer,extends,serializer,serializer,instance,kryo,registration,get,serializable,serializer,instance,if,serializer,instance,null,kryo,registration,new,kryo,registration,kryo,registration,get,registered,class,deep,copy,serializer,serializer,instance,this,kryo,registrations,put,entry,get,key,kryo,registration
