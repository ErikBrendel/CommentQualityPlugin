# id;timestamp;commentText;codeText;commentWords;codeWords
AbstractID -> public long getLowerPart();1425053375;Gets the lower 64 bits of the ID.__@return The lower 64 bits of the ID.;public long getLowerPart() {_		return lowerPart__	};gets,the,lower,64,bits,of,the,id,return,the,lower,64,bits,of,the,id;public,long,get,lower,part,return,lower,part
AbstractID -> public long getLowerPart();1426697080;Gets the lower 64 bits of the ID.__@return The lower 64 bits of the ID.;public long getLowerPart() {_		return lowerPart__	};gets,the,lower,64,bits,of,the,id,return,the,lower,64,bits,of,the,id;public,long,get,lower,part,return,lower,part
AbstractID -> public long getLowerPart();1450210473;Gets the lower 64 bits of the ID.__@return The lower 64 bits of the ID.;public long getLowerPart() {_		return lowerPart__	};gets,the,lower,64,bits,of,the,id,return,the,lower,64,bits,of,the,id;public,long,get,lower,part,return,lower,part
AbstractID -> public long getLowerPart();1454959100;Gets the lower 64 bits of the ID.__@return The lower 64 bits of the ID.;public long getLowerPart() {_		return lowerPart__	};gets,the,lower,64,bits,of,the,id,return,the,lower,64,bits,of,the,id;public,long,get,lower,part,return,lower,part
AbstractID -> public long getLowerPart();1455479358;Gets the lower 64 bits of the ID.__@return The lower 64 bits of the ID.;public long getLowerPart() {_		return lowerPart__	};gets,the,lower,64,bits,of,the,id,return,the,lower,64,bits,of,the,id;public,long,get,lower,part,return,lower,part
AbstractID -> public long getLowerPart();1490128641;Gets the lower 64 bits of the ID.__@return The lower 64 bits of the ID.;public long getLowerPart() {_		return lowerPart__	};gets,the,lower,64,bits,of,the,id,return,the,lower,64,bits,of,the,id;public,long,get,lower,part,return,lower,part
AbstractID -> public long getLowerPart();1507728812;Gets the lower 64 bits of the ID.__@return The lower 64 bits of the ID.;public long getLowerPart() {_		return lowerPart__	};gets,the,lower,64,bits,of,the,id,return,the,lower,64,bits,of,the,id;public,long,get,lower,part,return,lower,part
AbstractID -> public long getLowerPart();1516295284;Gets the lower 64 bits of the ID.__@return The lower 64 bits of the ID.;public long getLowerPart() {_		return lowerPart__	};gets,the,lower,64,bits,of,the,id,return,the,lower,64,bits,of,the,id;public,long,get,lower,part,return,lower,part
AbstractID -> public long getLowerPart();1539956805;Gets the lower 64 bits of the ID.__@return The lower 64 bits of the ID.;public long getLowerPart() {_		return lowerPart__	};gets,the,lower,64,bits,of,the,id,return,the,lower,64,bits,of,the,id;public,long,get,lower,part,return,lower,part
AbstractID -> public long getLowerPart();1551195367;Gets the lower 64 bits of the ID.__@return The lower 64 bits of the ID.;public long getLowerPart() {_		return lowerPart__	};gets,the,lower,64,bits,of,the,id,return,the,lower,64,bits,of,the,id;public,long,get,lower,part,return,lower,part
AbstractID -> private static long byteArrayToLong(byte[] ba, int offset);1425053375;Converts the given byte array to a long.__@param ba the byte array to be converted_@param offset the offset indicating at which byte inside the array the conversion shall begin_@return the long variable;private static long byteArrayToLong(byte[] ba, int offset) {_		long l = 0___		for (int i = 0_ i < SIZE_OF_LONG_ ++i) {_			l |= (ba[offset + SIZE_OF_LONG - 1 - i] & 0xffL) << (i << 3)__		}__		return l__	};converts,the,given,byte,array,to,a,long,param,ba,the,byte,array,to,be,converted,param,offset,the,offset,indicating,at,which,byte,inside,the,array,the,conversion,shall,begin,return,the,long,variable;private,static,long,byte,array,to,long,byte,ba,int,offset,long,l,0,for,int,i,0,i,i,l,ba,offset,1,i,0xff,l,i,3,return,l
AbstractID -> private static long byteArrayToLong(byte[] ba, int offset);1426697080;Converts the given byte array to a long.__@param ba the byte array to be converted_@param offset the offset indicating at which byte inside the array the conversion shall begin_@return the long variable;private static long byteArrayToLong(byte[] ba, int offset) {_		long l = 0___		for (int i = 0_ i < SIZE_OF_LONG_ ++i) {_			l |= (ba[offset + SIZE_OF_LONG - 1 - i] & 0xffL) << (i << 3)__		}__		return l__	};converts,the,given,byte,array,to,a,long,param,ba,the,byte,array,to,be,converted,param,offset,the,offset,indicating,at,which,byte,inside,the,array,the,conversion,shall,begin,return,the,long,variable;private,static,long,byte,array,to,long,byte,ba,int,offset,long,l,0,for,int,i,0,i,i,l,ba,offset,1,i,0xff,l,i,3,return,l
AbstractID -> private static long byteArrayToLong(byte[] ba, int offset);1450210473;Converts the given byte array to a long.__@param ba the byte array to be converted_@param offset the offset indicating at which byte inside the array the conversion shall begin_@return the long variable;private static long byteArrayToLong(byte[] ba, int offset) {_		long l = 0___		for (int i = 0_ i < SIZE_OF_LONG_ ++i) {_			l |= (ba[offset + SIZE_OF_LONG - 1 - i] & 0xffL) << (i << 3)__		}__		return l__	};converts,the,given,byte,array,to,a,long,param,ba,the,byte,array,to,be,converted,param,offset,the,offset,indicating,at,which,byte,inside,the,array,the,conversion,shall,begin,return,the,long,variable;private,static,long,byte,array,to,long,byte,ba,int,offset,long,l,0,for,int,i,0,i,i,l,ba,offset,1,i,0xff,l,i,3,return,l
AbstractID -> private static long byteArrayToLong(byte[] ba, int offset);1454959100;Converts the given byte array to a long.__@param ba the byte array to be converted_@param offset the offset indicating at which byte inside the array the conversion shall begin_@return the long variable;private static long byteArrayToLong(byte[] ba, int offset) {_		long l = 0___		for (int i = 0_ i < SIZE_OF_LONG_ ++i) {_			l |= (ba[offset + SIZE_OF_LONG - 1 - i] & 0xffL) << (i << 3)__		}__		return l__	};converts,the,given,byte,array,to,a,long,param,ba,the,byte,array,to,be,converted,param,offset,the,offset,indicating,at,which,byte,inside,the,array,the,conversion,shall,begin,return,the,long,variable;private,static,long,byte,array,to,long,byte,ba,int,offset,long,l,0,for,int,i,0,i,i,l,ba,offset,1,i,0xff,l,i,3,return,l
AbstractID -> private static long byteArrayToLong(byte[] ba, int offset);1455479358;Converts the given byte array to a long.__@param ba the byte array to be converted_@param offset the offset indicating at which byte inside the array the conversion shall begin_@return the long variable;private static long byteArrayToLong(byte[] ba, int offset) {_		long l = 0___		for (int i = 0_ i < SIZE_OF_LONG_ ++i) {_			l |= (ba[offset + SIZE_OF_LONG - 1 - i] & 0xffL) << (i << 3)__		}__		return l__	};converts,the,given,byte,array,to,a,long,param,ba,the,byte,array,to,be,converted,param,offset,the,offset,indicating,at,which,byte,inside,the,array,the,conversion,shall,begin,return,the,long,variable;private,static,long,byte,array,to,long,byte,ba,int,offset,long,l,0,for,int,i,0,i,i,l,ba,offset,1,i,0xff,l,i,3,return,l
AbstractID -> private static long byteArrayToLong(byte[] ba, int offset);1490128641;Converts the given byte array to a long.__@param ba the byte array to be converted_@param offset the offset indicating at which byte inside the array the conversion shall begin_@return the long variable;private static long byteArrayToLong(byte[] ba, int offset) {_		long l = 0___		for (int i = 0_ i < SIZE_OF_LONG_ ++i) {_			l |= (ba[offset + SIZE_OF_LONG - 1 - i] & 0xffL) << (i << 3)__		}__		return l__	};converts,the,given,byte,array,to,a,long,param,ba,the,byte,array,to,be,converted,param,offset,the,offset,indicating,at,which,byte,inside,the,array,the,conversion,shall,begin,return,the,long,variable;private,static,long,byte,array,to,long,byte,ba,int,offset,long,l,0,for,int,i,0,i,i,l,ba,offset,1,i,0xff,l,i,3,return,l
AbstractID -> private static long byteArrayToLong(byte[] ba, int offset);1507728812;Converts the given byte array to a long.__@param ba the byte array to be converted_@param offset the offset indicating at which byte inside the array the conversion shall begin_@return the long variable;private static long byteArrayToLong(byte[] ba, int offset) {_		long l = 0___		for (int i = 0_ i < SIZE_OF_LONG_ ++i) {_			l |= (ba[offset + SIZE_OF_LONG - 1 - i] & 0xffL) << (i << 3)__		}__		return l__	};converts,the,given,byte,array,to,a,long,param,ba,the,byte,array,to,be,converted,param,offset,the,offset,indicating,at,which,byte,inside,the,array,the,conversion,shall,begin,return,the,long,variable;private,static,long,byte,array,to,long,byte,ba,int,offset,long,l,0,for,int,i,0,i,i,l,ba,offset,1,i,0xff,l,i,3,return,l
AbstractID -> private static long byteArrayToLong(byte[] ba, int offset);1516295284;Converts the given byte array to a long.__@param ba the byte array to be converted_@param offset the offset indicating at which byte inside the array the conversion shall begin_@return the long variable;private static long byteArrayToLong(byte[] ba, int offset) {_		long l = 0___		for (int i = 0_ i < SIZE_OF_LONG_ ++i) {_			l |= (ba[offset + SIZE_OF_LONG - 1 - i] & 0xffL) << (i << 3)__		}__		return l__	};converts,the,given,byte,array,to,a,long,param,ba,the,byte,array,to,be,converted,param,offset,the,offset,indicating,at,which,byte,inside,the,array,the,conversion,shall,begin,return,the,long,variable;private,static,long,byte,array,to,long,byte,ba,int,offset,long,l,0,for,int,i,0,i,i,l,ba,offset,1,i,0xff,l,i,3,return,l
AbstractID -> private static long byteArrayToLong(byte[] ba, int offset);1539956805;Converts the given byte array to a long.__@param ba the byte array to be converted_@param offset the offset indicating at which byte inside the array the conversion shall begin_@return the long variable;private static long byteArrayToLong(byte[] ba, int offset) {_		long l = 0___		for (int i = 0_ i < SIZE_OF_LONG_ ++i) {_			l |= (ba[offset + SIZE_OF_LONG - 1 - i] & 0xffL) << (i << 3)__		}__		return l__	};converts,the,given,byte,array,to,a,long,param,ba,the,byte,array,to,be,converted,param,offset,the,offset,indicating,at,which,byte,inside,the,array,the,conversion,shall,begin,return,the,long,variable;private,static,long,byte,array,to,long,byte,ba,int,offset,long,l,0,for,int,i,0,i,i,l,ba,offset,1,i,0xff,l,i,3,return,l
AbstractID -> private static long byteArrayToLong(byte[] ba, int offset);1551195367;Converts the given byte array to a long.__@param ba the byte array to be converted_@param offset the offset indicating at which byte inside the array the conversion shall begin_@return the long variable;private static long byteArrayToLong(byte[] ba, int offset) {_		long l = 0___		for (int i = 0_ i < SIZE_OF_LONG_ ++i) {_			l |= (ba[offset + SIZE_OF_LONG - 1 - i] & 0xffL) << (i << 3)__		}__		return l__	};converts,the,given,byte,array,to,a,long,param,ba,the,byte,array,to,be,converted,param,offset,the,offset,indicating,at,which,byte,inside,the,array,the,conversion,shall,begin,return,the,long,variable;private,static,long,byte,array,to,long,byte,ba,int,offset,long,l,0,for,int,i,0,i,i,l,ba,offset,1,i,0xff,l,i,3,return,l
AbstractID -> public long getUpperPart();1425053375;Gets the upper 64 bits of the ID.__@return The upper 64 bits of the ID.;public long getUpperPart() {_		return upperPart__	};gets,the,upper,64,bits,of,the,id,return,the,upper,64,bits,of,the,id;public,long,get,upper,part,return,upper,part
AbstractID -> public long getUpperPart();1426697080;Gets the upper 64 bits of the ID.__@return The upper 64 bits of the ID.;public long getUpperPart() {_		return upperPart__	};gets,the,upper,64,bits,of,the,id,return,the,upper,64,bits,of,the,id;public,long,get,upper,part,return,upper,part
AbstractID -> public long getUpperPart();1450210473;Gets the upper 64 bits of the ID.__@return The upper 64 bits of the ID.;public long getUpperPart() {_		return upperPart__	};gets,the,upper,64,bits,of,the,id,return,the,upper,64,bits,of,the,id;public,long,get,upper,part,return,upper,part
AbstractID -> public long getUpperPart();1454959100;Gets the upper 64 bits of the ID.__@return The upper 64 bits of the ID.;public long getUpperPart() {_		return upperPart__	};gets,the,upper,64,bits,of,the,id,return,the,upper,64,bits,of,the,id;public,long,get,upper,part,return,upper,part
AbstractID -> public long getUpperPart();1455479358;Gets the upper 64 bits of the ID.__@return The upper 64 bits of the ID.;public long getUpperPart() {_		return upperPart__	};gets,the,upper,64,bits,of,the,id,return,the,upper,64,bits,of,the,id;public,long,get,upper,part,return,upper,part
AbstractID -> public long getUpperPart();1490128641;Gets the upper 64 bits of the ID.__@return The upper 64 bits of the ID.;public long getUpperPart() {_		return upperPart__	};gets,the,upper,64,bits,of,the,id,return,the,upper,64,bits,of,the,id;public,long,get,upper,part,return,upper,part
AbstractID -> public long getUpperPart();1507728812;Gets the upper 64 bits of the ID.__@return The upper 64 bits of the ID.;public long getUpperPart() {_		return upperPart__	};gets,the,upper,64,bits,of,the,id,return,the,upper,64,bits,of,the,id;public,long,get,upper,part,return,upper,part
AbstractID -> public long getUpperPart();1516295284;Gets the upper 64 bits of the ID.__@return The upper 64 bits of the ID.;public long getUpperPart() {_		return upperPart__	};gets,the,upper,64,bits,of,the,id,return,the,upper,64,bits,of,the,id;public,long,get,upper,part,return,upper,part
AbstractID -> public long getUpperPart();1539956805;Gets the upper 64 bits of the ID.__@return The upper 64 bits of the ID.;public long getUpperPart() {_		return upperPart__	};gets,the,upper,64,bits,of,the,id,return,the,upper,64,bits,of,the,id;public,long,get,upper,part,return,upper,part
AbstractID -> public long getUpperPart();1551195367;Gets the upper 64 bits of the ID.__@return The upper 64 bits of the ID.;public long getUpperPart() {_		return upperPart__	};gets,the,upper,64,bits,of,the,id,return,the,upper,64,bits,of,the,id;public,long,get,upper,part,return,upper,part
AbstractID -> public AbstractID();1425053375;Constructs a new random ID from a uniform distribution.;public AbstractID() {_		this.lowerPart = RND.nextLong()__		this.upperPart = RND.nextLong()__	};constructs,a,new,random,id,from,a,uniform,distribution;public,abstract,id,this,lower,part,rnd,next,long,this,upper,part,rnd,next,long
AbstractID -> public AbstractID();1426697080;Constructs a new random ID from a uniform distribution.;public AbstractID() {_		this.lowerPart = RND.nextLong()__		this.upperPart = RND.nextLong()__	};constructs,a,new,random,id,from,a,uniform,distribution;public,abstract,id,this,lower,part,rnd,next,long,this,upper,part,rnd,next,long
AbstractID -> public AbstractID();1450210473;Constructs a new random ID from a uniform distribution.;public AbstractID() {_		this.lowerPart = RND.nextLong()__		this.upperPart = RND.nextLong()__	};constructs,a,new,random,id,from,a,uniform,distribution;public,abstract,id,this,lower,part,rnd,next,long,this,upper,part,rnd,next,long
AbstractID -> public AbstractID();1454959100;Constructs a new random ID from a uniform distribution.;public AbstractID() {_		this.lowerPart = RND.nextLong()__		this.upperPart = RND.nextLong()__	};constructs,a,new,random,id,from,a,uniform,distribution;public,abstract,id,this,lower,part,rnd,next,long,this,upper,part,rnd,next,long
AbstractID -> public AbstractID();1455479358;Constructs a new random ID from a uniform distribution.;public AbstractID() {_		this.lowerPart = RND.nextLong()__		this.upperPart = RND.nextLong()__	};constructs,a,new,random,id,from,a,uniform,distribution;public,abstract,id,this,lower,part,rnd,next,long,this,upper,part,rnd,next,long
AbstractID -> public AbstractID();1490128641;Constructs a new random ID from a uniform distribution.;public AbstractID() {_		this.lowerPart = RND.nextLong()__		this.upperPart = RND.nextLong()__	};constructs,a,new,random,id,from,a,uniform,distribution;public,abstract,id,this,lower,part,rnd,next,long,this,upper,part,rnd,next,long
AbstractID -> public AbstractID();1507728812;Constructs a new random ID from a uniform distribution.;public AbstractID() {_		this.lowerPart = RND.nextLong()__		this.upperPart = RND.nextLong()__	};constructs,a,new,random,id,from,a,uniform,distribution;public,abstract,id,this,lower,part,rnd,next,long,this,upper,part,rnd,next,long
AbstractID -> public AbstractID();1516295284;Constructs a new random ID from a uniform distribution.;public AbstractID() {_		this.lowerPart = RND.nextLong()__		this.upperPart = RND.nextLong()__	};constructs,a,new,random,id,from,a,uniform,distribution;public,abstract,id,this,lower,part,rnd,next,long,this,upper,part,rnd,next,long
AbstractID -> public AbstractID();1539956805;Constructs a new random ID from a uniform distribution.;public AbstractID() {_		this.lowerPart = RND.nextLong()__		this.upperPart = RND.nextLong()__	};constructs,a,new,random,id,from,a,uniform,distribution;public,abstract,id,this,lower,part,rnd,next,long,this,upper,part,rnd,next,long
AbstractID -> public AbstractID();1551195367;Constructs a new random ID from a uniform distribution.;public AbstractID() {_		this.lowerPart = RND.nextLong()__		this.upperPart = RND.nextLong()__	};constructs,a,new,random,id,from,a,uniform,distribution;public,abstract,id,this,lower,part,rnd,next,long,this,upper,part,rnd,next,long
AbstractID -> public byte[] getBytes();1425053375;Gets the bytes underlying this ID.__@return The bytes underlying this ID.;public byte[] getBytes() {_		byte[] bytes = new byte[SIZE]__		longToByteArray(lowerPart, bytes, 0)__		longToByteArray(upperPart, bytes, SIZE_OF_LONG)__		return bytes__	};gets,the,bytes,underlying,this,id,return,the,bytes,underlying,this,id;public,byte,get,bytes,byte,bytes,new,byte,size,long,to,byte,array,lower,part,bytes,0,long,to,byte,array,upper,part,bytes,return,bytes
AbstractID -> public byte[] getBytes();1426697080;Gets the bytes underlying this ID.__@return The bytes underlying this ID.;public byte[] getBytes() {_		byte[] bytes = new byte[SIZE]__		longToByteArray(lowerPart, bytes, 0)__		longToByteArray(upperPart, bytes, SIZE_OF_LONG)__		return bytes__	};gets,the,bytes,underlying,this,id,return,the,bytes,underlying,this,id;public,byte,get,bytes,byte,bytes,new,byte,size,long,to,byte,array,lower,part,bytes,0,long,to,byte,array,upper,part,bytes,return,bytes
AbstractID -> public byte[] getBytes();1450210473;Gets the bytes underlying this ID.__@return The bytes underlying this ID.;public byte[] getBytes() {_		byte[] bytes = new byte[SIZE]__		longToByteArray(lowerPart, bytes, 0)__		longToByteArray(upperPart, bytes, SIZE_OF_LONG)__		return bytes__	};gets,the,bytes,underlying,this,id,return,the,bytes,underlying,this,id;public,byte,get,bytes,byte,bytes,new,byte,size,long,to,byte,array,lower,part,bytes,0,long,to,byte,array,upper,part,bytes,return,bytes
AbstractID -> public byte[] getBytes();1454959100;Gets the bytes underlying this ID.__@return The bytes underlying this ID.;public byte[] getBytes() {_		byte[] bytes = new byte[SIZE]__		longToByteArray(lowerPart, bytes, 0)__		longToByteArray(upperPart, bytes, SIZE_OF_LONG)__		return bytes__	};gets,the,bytes,underlying,this,id,return,the,bytes,underlying,this,id;public,byte,get,bytes,byte,bytes,new,byte,size,long,to,byte,array,lower,part,bytes,0,long,to,byte,array,upper,part,bytes,return,bytes
AbstractID -> public byte[] getBytes();1455479358;Gets the bytes underlying this ID.__@return The bytes underlying this ID.;public byte[] getBytes() {_		byte[] bytes = new byte[SIZE]__		longToByteArray(lowerPart, bytes, 0)__		longToByteArray(upperPart, bytes, SIZE_OF_LONG)__		return bytes__	};gets,the,bytes,underlying,this,id,return,the,bytes,underlying,this,id;public,byte,get,bytes,byte,bytes,new,byte,size,long,to,byte,array,lower,part,bytes,0,long,to,byte,array,upper,part,bytes,return,bytes
AbstractID -> public byte[] getBytes();1490128641;Gets the bytes underlying this ID.__@return The bytes underlying this ID.;public byte[] getBytes() {_		byte[] bytes = new byte[SIZE]__		longToByteArray(lowerPart, bytes, 0)__		longToByteArray(upperPart, bytes, SIZE_OF_LONG)__		return bytes__	};gets,the,bytes,underlying,this,id,return,the,bytes,underlying,this,id;public,byte,get,bytes,byte,bytes,new,byte,size,long,to,byte,array,lower,part,bytes,0,long,to,byte,array,upper,part,bytes,return,bytes
AbstractID -> public byte[] getBytes();1507728812;Gets the bytes underlying this ID.__@return The bytes underlying this ID.;public byte[] getBytes() {_		byte[] bytes = new byte[SIZE]__		longToByteArray(lowerPart, bytes, 0)__		longToByteArray(upperPart, bytes, SIZE_OF_LONG)__		return bytes__	};gets,the,bytes,underlying,this,id,return,the,bytes,underlying,this,id;public,byte,get,bytes,byte,bytes,new,byte,size,long,to,byte,array,lower,part,bytes,0,long,to,byte,array,upper,part,bytes,return,bytes
AbstractID -> public byte[] getBytes();1516295284;Gets the bytes underlying this ID.__@return The bytes underlying this ID.;public byte[] getBytes() {_		byte[] bytes = new byte[SIZE]__		longToByteArray(lowerPart, bytes, 0)__		longToByteArray(upperPart, bytes, SIZE_OF_LONG)__		return bytes__	};gets,the,bytes,underlying,this,id,return,the,bytes,underlying,this,id;public,byte,get,bytes,byte,bytes,new,byte,size,long,to,byte,array,lower,part,bytes,0,long,to,byte,array,upper,part,bytes,return,bytes
AbstractID -> public byte[] getBytes();1539956805;Gets the bytes underlying this ID.__@return The bytes underlying this ID.;public byte[] getBytes() {_		byte[] bytes = new byte[SIZE]__		longToByteArray(lowerPart, bytes, 0)__		longToByteArray(upperPart, bytes, SIZE_OF_LONG)__		return bytes__	};gets,the,bytes,underlying,this,id,return,the,bytes,underlying,this,id;public,byte,get,bytes,byte,bytes,new,byte,size,long,to,byte,array,lower,part,bytes,0,long,to,byte,array,upper,part,bytes,return,bytes
AbstractID -> public byte[] getBytes();1551195367;Gets the bytes underlying this ID.__@return The bytes underlying this ID.;public byte[] getBytes() {_		byte[] bytes = new byte[SIZE]__		longToByteArray(lowerPart, bytes, 0)__		longToByteArray(upperPart, bytes, SIZE_OF_LONG)__		return bytes__	};gets,the,bytes,underlying,this,id,return,the,bytes,underlying,this,id;public,byte,get,bytes,byte,bytes,new,byte,size,long,to,byte,array,lower,part,bytes,0,long,to,byte,array,upper,part,bytes,return,bytes
AbstractID -> public AbstractID(long lowerPart, long upperPart);1425053375;Constructs a new abstract ID.__@param lowerPart the lower bytes of the ID_@param upperPart the higher bytes of the ID;public AbstractID(long lowerPart, long upperPart) {_		this.lowerPart = lowerPart__		this.upperPart = upperPart__	};constructs,a,new,abstract,id,param,lower,part,the,lower,bytes,of,the,id,param,upper,part,the,higher,bytes,of,the,id;public,abstract,id,long,lower,part,long,upper,part,this,lower,part,lower,part,this,upper,part,upper,part
AbstractID -> public AbstractID(long lowerPart, long upperPart);1426697080;Constructs a new abstract ID.__@param lowerPart the lower bytes of the ID_@param upperPart the higher bytes of the ID;public AbstractID(long lowerPart, long upperPart) {_		this.lowerPart = lowerPart__		this.upperPart = upperPart__	};constructs,a,new,abstract,id,param,lower,part,the,lower,bytes,of,the,id,param,upper,part,the,higher,bytes,of,the,id;public,abstract,id,long,lower,part,long,upper,part,this,lower,part,lower,part,this,upper,part,upper,part
AbstractID -> public AbstractID(long lowerPart, long upperPart);1450210473;Constructs a new abstract ID.__@param lowerPart the lower bytes of the ID_@param upperPart the higher bytes of the ID;public AbstractID(long lowerPart, long upperPart) {_		this.lowerPart = lowerPart__		this.upperPart = upperPart__	};constructs,a,new,abstract,id,param,lower,part,the,lower,bytes,of,the,id,param,upper,part,the,higher,bytes,of,the,id;public,abstract,id,long,lower,part,long,upper,part,this,lower,part,lower,part,this,upper,part,upper,part
AbstractID -> public AbstractID(long lowerPart, long upperPart);1454959100;Constructs a new abstract ID.__@param lowerPart the lower bytes of the ID_@param upperPart the higher bytes of the ID;public AbstractID(long lowerPart, long upperPart) {_		this.lowerPart = lowerPart__		this.upperPart = upperPart__	};constructs,a,new,abstract,id,param,lower,part,the,lower,bytes,of,the,id,param,upper,part,the,higher,bytes,of,the,id;public,abstract,id,long,lower,part,long,upper,part,this,lower,part,lower,part,this,upper,part,upper,part
AbstractID -> public AbstractID(long lowerPart, long upperPart);1455479358;Constructs a new abstract ID.__@param lowerPart the lower bytes of the ID_@param upperPart the higher bytes of the ID;public AbstractID(long lowerPart, long upperPart) {_		this.lowerPart = lowerPart__		this.upperPart = upperPart__	};constructs,a,new,abstract,id,param,lower,part,the,lower,bytes,of,the,id,param,upper,part,the,higher,bytes,of,the,id;public,abstract,id,long,lower,part,long,upper,part,this,lower,part,lower,part,this,upper,part,upper,part
AbstractID -> public AbstractID(long lowerPart, long upperPart);1490128641;Constructs a new abstract ID.__@param lowerPart the lower bytes of the ID_@param upperPart the higher bytes of the ID;public AbstractID(long lowerPart, long upperPart) {_		this.lowerPart = lowerPart__		this.upperPart = upperPart__	};constructs,a,new,abstract,id,param,lower,part,the,lower,bytes,of,the,id,param,upper,part,the,higher,bytes,of,the,id;public,abstract,id,long,lower,part,long,upper,part,this,lower,part,lower,part,this,upper,part,upper,part
AbstractID -> public AbstractID(long lowerPart, long upperPart);1507728812;Constructs a new abstract ID.__@param lowerPart the lower bytes of the ID_@param upperPart the higher bytes of the ID;public AbstractID(long lowerPart, long upperPart) {_		this.lowerPart = lowerPart__		this.upperPart = upperPart__	};constructs,a,new,abstract,id,param,lower,part,the,lower,bytes,of,the,id,param,upper,part,the,higher,bytes,of,the,id;public,abstract,id,long,lower,part,long,upper,part,this,lower,part,lower,part,this,upper,part,upper,part
AbstractID -> public AbstractID(long lowerPart, long upperPart);1516295284;Constructs a new abstract ID.__@param lowerPart the lower bytes of the ID_@param upperPart the higher bytes of the ID;public AbstractID(long lowerPart, long upperPart) {_		this.lowerPart = lowerPart__		this.upperPart = upperPart__	};constructs,a,new,abstract,id,param,lower,part,the,lower,bytes,of,the,id,param,upper,part,the,higher,bytes,of,the,id;public,abstract,id,long,lower,part,long,upper,part,this,lower,part,lower,part,this,upper,part,upper,part
AbstractID -> public AbstractID(long lowerPart, long upperPart);1539956805;Constructs a new abstract ID.__@param lowerPart the lower bytes of the ID_@param upperPart the higher bytes of the ID;public AbstractID(long lowerPart, long upperPart) {_		this.lowerPart = lowerPart__		this.upperPart = upperPart__	};constructs,a,new,abstract,id,param,lower,part,the,lower,bytes,of,the,id,param,upper,part,the,higher,bytes,of,the,id;public,abstract,id,long,lower,part,long,upper,part,this,lower,part,lower,part,this,upper,part,upper,part
AbstractID -> public AbstractID(long lowerPart, long upperPart);1551195367;Constructs a new abstract ID.__@param lowerPart the lower bytes of the ID_@param upperPart the higher bytes of the ID;public AbstractID(long lowerPart, long upperPart) {_		this.lowerPart = lowerPart__		this.upperPart = upperPart__	};constructs,a,new,abstract,id,param,lower,part,the,lower,bytes,of,the,id,param,upper,part,the,higher,bytes,of,the,id;public,abstract,id,long,lower,part,long,upper,part,this,lower,part,lower,part,this,upper,part,upper,part
AbstractID -> public AbstractID(AbstractID id);1425053375;Creates a new abstract ID from the given one._<p>_The given and the newly created abstract ID will be identical, i.e. a comparison by <code>equals</code> will_return <code>true</code> and both objects will have the same hash code.__@param id the abstract ID to copy;public AbstractID(AbstractID id) {_		if (id == null) {_			throw new IllegalArgumentException("Id must not be null.")__		}_		this.lowerPart = id.lowerPart__		this.upperPart = id.upperPart__	};creates,a,new,abstract,id,from,the,given,one,p,the,given,and,the,newly,created,abstract,id,will,be,identical,i,e,a,comparison,by,code,equals,code,will,return,code,true,code,and,both,objects,will,have,the,same,hash,code,param,id,the,abstract,id,to,copy;public,abstract,id,abstract,id,id,if,id,null,throw,new,illegal,argument,exception,id,must,not,be,null,this,lower,part,id,lower,part,this,upper,part,id,upper,part
AbstractID -> public AbstractID(AbstractID id);1426697080;Creates a new abstract ID from the given one._<p>_The given and the newly created abstract ID will be identical, i.e. a comparison by <code>equals</code> will_return <code>true</code> and both objects will have the same hash code.__@param id the abstract ID to copy;public AbstractID(AbstractID id) {_		if (id == null) {_			throw new IllegalArgumentException("Id must not be null.")__		}_		this.lowerPart = id.lowerPart__		this.upperPart = id.upperPart__	};creates,a,new,abstract,id,from,the,given,one,p,the,given,and,the,newly,created,abstract,id,will,be,identical,i,e,a,comparison,by,code,equals,code,will,return,code,true,code,and,both,objects,will,have,the,same,hash,code,param,id,the,abstract,id,to,copy;public,abstract,id,abstract,id,id,if,id,null,throw,new,illegal,argument,exception,id,must,not,be,null,this,lower,part,id,lower,part,this,upper,part,id,upper,part
AbstractID -> public AbstractID(AbstractID id);1450210473;Creates a new abstract ID from the given one._<p>_The given and the newly created abstract ID will be identical, i.e. a comparison by <code>equals</code> will_return <code>true</code> and both objects will have the same hash code.__@param id the abstract ID to copy;public AbstractID(AbstractID id) {_		if (id == null) {_			throw new IllegalArgumentException("Id must not be null.")__		}_		this.lowerPart = id.lowerPart__		this.upperPart = id.upperPart__	};creates,a,new,abstract,id,from,the,given,one,p,the,given,and,the,newly,created,abstract,id,will,be,identical,i,e,a,comparison,by,code,equals,code,will,return,code,true,code,and,both,objects,will,have,the,same,hash,code,param,id,the,abstract,id,to,copy;public,abstract,id,abstract,id,id,if,id,null,throw,new,illegal,argument,exception,id,must,not,be,null,this,lower,part,id,lower,part,this,upper,part,id,upper,part
AbstractID -> public AbstractID(AbstractID id);1454959100;Creates a new abstract ID from the given one._<p>_The given and the newly created abstract ID will be identical, i.e. a comparison by <code>equals</code> will_return <code>true</code> and both objects will have the same hash code.__@param id the abstract ID to copy;public AbstractID(AbstractID id) {_		if (id == null) {_			throw new IllegalArgumentException("Id must not be null.")__		}_		this.lowerPart = id.lowerPart__		this.upperPart = id.upperPart__	};creates,a,new,abstract,id,from,the,given,one,p,the,given,and,the,newly,created,abstract,id,will,be,identical,i,e,a,comparison,by,code,equals,code,will,return,code,true,code,and,both,objects,will,have,the,same,hash,code,param,id,the,abstract,id,to,copy;public,abstract,id,abstract,id,id,if,id,null,throw,new,illegal,argument,exception,id,must,not,be,null,this,lower,part,id,lower,part,this,upper,part,id,upper,part
AbstractID -> public AbstractID(AbstractID id);1455479358;Creates a new abstract ID from the given one._<p>_The given and the newly created abstract ID will be identical, i.e. a comparison by <code>equals</code> will_return <code>true</code> and both objects will have the same hash code.__@param id the abstract ID to copy;public AbstractID(AbstractID id) {_		if (id == null) {_			throw new IllegalArgumentException("Id must not be null.")__		}_		this.lowerPart = id.lowerPart__		this.upperPart = id.upperPart__	};creates,a,new,abstract,id,from,the,given,one,p,the,given,and,the,newly,created,abstract,id,will,be,identical,i,e,a,comparison,by,code,equals,code,will,return,code,true,code,and,both,objects,will,have,the,same,hash,code,param,id,the,abstract,id,to,copy;public,abstract,id,abstract,id,id,if,id,null,throw,new,illegal,argument,exception,id,must,not,be,null,this,lower,part,id,lower,part,this,upper,part,id,upper,part
AbstractID -> public AbstractID(AbstractID id);1490128641;Copy constructor: Creates a new abstract ID from the given one.__@param id the abstract ID to copy;public AbstractID(AbstractID id) {_		if (id == null) {_			throw new IllegalArgumentException("Id must not be null.")__		}_		this.lowerPart = id.lowerPart__		this.upperPart = id.upperPart__	};copy,constructor,creates,a,new,abstract,id,from,the,given,one,param,id,the,abstract,id,to,copy;public,abstract,id,abstract,id,id,if,id,null,throw,new,illegal,argument,exception,id,must,not,be,null,this,lower,part,id,lower,part,this,upper,part,id,upper,part
AbstractID -> public AbstractID(AbstractID id);1507728812;Copy constructor: Creates a new abstract ID from the given one.__@param id the abstract ID to copy;public AbstractID(AbstractID id) {_		if (id == null) {_			throw new IllegalArgumentException("Id must not be null.")__		}_		this.lowerPart = id.lowerPart__		this.upperPart = id.upperPart__	};copy,constructor,creates,a,new,abstract,id,from,the,given,one,param,id,the,abstract,id,to,copy;public,abstract,id,abstract,id,id,if,id,null,throw,new,illegal,argument,exception,id,must,not,be,null,this,lower,part,id,lower,part,this,upper,part,id,upper,part
AbstractID -> public AbstractID(AbstractID id);1516295284;Copy constructor: Creates a new abstract ID from the given one.__@param id the abstract ID to copy;public AbstractID(AbstractID id) {_		if (id == null) {_			throw new IllegalArgumentException("Id must not be null.")__		}_		this.lowerPart = id.lowerPart__		this.upperPart = id.upperPart__	};copy,constructor,creates,a,new,abstract,id,from,the,given,one,param,id,the,abstract,id,to,copy;public,abstract,id,abstract,id,id,if,id,null,throw,new,illegal,argument,exception,id,must,not,be,null,this,lower,part,id,lower,part,this,upper,part,id,upper,part
AbstractID -> public AbstractID(AbstractID id);1539956805;Copy constructor: Creates a new abstract ID from the given one.__@param id the abstract ID to copy;public AbstractID(AbstractID id) {_		if (id == null) {_			throw new IllegalArgumentException("Id must not be null.")__		}_		this.lowerPart = id.lowerPart__		this.upperPart = id.upperPart__	};copy,constructor,creates,a,new,abstract,id,from,the,given,one,param,id,the,abstract,id,to,copy;public,abstract,id,abstract,id,id,if,id,null,throw,new,illegal,argument,exception,id,must,not,be,null,this,lower,part,id,lower,part,this,upper,part,id,upper,part
AbstractID -> public AbstractID(AbstractID id);1551195367;Copy constructor: Creates a new abstract ID from the given one.__@param id the abstract ID to copy;public AbstractID(AbstractID id) {_		if (id == null) {_			throw new IllegalArgumentException("Id must not be null.")__		}_		this.lowerPart = id.lowerPart__		this.upperPart = id.upperPart__	};copy,constructor,creates,a,new,abstract,id,from,the,given,one,param,id,the,abstract,id,to,copy;public,abstract,id,abstract,id,id,if,id,null,throw,new,illegal,argument,exception,id,must,not,be,null,this,lower,part,id,lower,part,this,upper,part,id,upper,part
AbstractID -> private static void longToByteArray(long l, byte[] ba, int offset);1425053375;Converts a long to a byte array.__@param l the long variable to be converted_@param ba the byte array to store the result the of the conversion_@param offset offset indicating at what position inside the byte array the result of the conversion shall be stored;private static void longToByteArray(long l, byte[] ba, int offset) {_		for (int i = 0_ i < SIZE_OF_LONG_ ++i) {_			final int shift = i << 3_ _			ba[offset + SIZE_OF_LONG - 1 - i] = (byte) ((l & (0xffL << shift)) >>> shift)__		}_	};converts,a,long,to,a,byte,array,param,l,the,long,variable,to,be,converted,param,ba,the,byte,array,to,store,the,result,the,of,the,conversion,param,offset,offset,indicating,at,what,position,inside,the,byte,array,the,result,of,the,conversion,shall,be,stored;private,static,void,long,to,byte,array,long,l,byte,ba,int,offset,for,int,i,0,i,i,final,int,shift,i,3,ba,offset,1,i,byte,l,0xff,l,shift,shift
AbstractID -> private static void longToByteArray(long l, byte[] ba, int offset);1426697080;Converts a long to a byte array.__@param l the long variable to be converted_@param ba the byte array to store the result the of the conversion_@param offset offset indicating at what position inside the byte array the result of the conversion shall be stored;private static void longToByteArray(long l, byte[] ba, int offset) {_		for (int i = 0_ i < SIZE_OF_LONG_ ++i) {_			final int shift = i << 3_ _			ba[offset + SIZE_OF_LONG - 1 - i] = (byte) ((l & (0xffL << shift)) >>> shift)__		}_	};converts,a,long,to,a,byte,array,param,l,the,long,variable,to,be,converted,param,ba,the,byte,array,to,store,the,result,the,of,the,conversion,param,offset,offset,indicating,at,what,position,inside,the,byte,array,the,result,of,the,conversion,shall,be,stored;private,static,void,long,to,byte,array,long,l,byte,ba,int,offset,for,int,i,0,i,i,final,int,shift,i,3,ba,offset,1,i,byte,l,0xff,l,shift,shift
AbstractID -> private static void longToByteArray(long l, byte[] ba, int offset);1450210473;Converts a long to a byte array.__@param l the long variable to be converted_@param ba the byte array to store the result the of the conversion_@param offset offset indicating at what position inside the byte array the result of the conversion shall be stored;private static void longToByteArray(long l, byte[] ba, int offset) {_		for (int i = 0_ i < SIZE_OF_LONG_ ++i) {_			final int shift = i << 3_ _			ba[offset + SIZE_OF_LONG - 1 - i] = (byte) ((l & (0xffL << shift)) >>> shift)__		}_	};converts,a,long,to,a,byte,array,param,l,the,long,variable,to,be,converted,param,ba,the,byte,array,to,store,the,result,the,of,the,conversion,param,offset,offset,indicating,at,what,position,inside,the,byte,array,the,result,of,the,conversion,shall,be,stored;private,static,void,long,to,byte,array,long,l,byte,ba,int,offset,for,int,i,0,i,i,final,int,shift,i,3,ba,offset,1,i,byte,l,0xff,l,shift,shift
AbstractID -> private static void longToByteArray(long l, byte[] ba, int offset);1454959100;Converts a long to a byte array.__@param l the long variable to be converted_@param ba the byte array to store the result the of the conversion_@param offset offset indicating at what position inside the byte array the result of the conversion shall be stored;private static void longToByteArray(long l, byte[] ba, int offset) {_		for (int i = 0_ i < SIZE_OF_LONG_ ++i) {_			final int shift = i << 3_ _			ba[offset + SIZE_OF_LONG - 1 - i] = (byte) ((l & (0xffL << shift)) >>> shift)__		}_	};converts,a,long,to,a,byte,array,param,l,the,long,variable,to,be,converted,param,ba,the,byte,array,to,store,the,result,the,of,the,conversion,param,offset,offset,indicating,at,what,position,inside,the,byte,array,the,result,of,the,conversion,shall,be,stored;private,static,void,long,to,byte,array,long,l,byte,ba,int,offset,for,int,i,0,i,i,final,int,shift,i,3,ba,offset,1,i,byte,l,0xff,l,shift,shift
AbstractID -> private static void longToByteArray(long l, byte[] ba, int offset);1455479358;Converts a long to a byte array.__@param l the long variable to be converted_@param ba the byte array to store the result the of the conversion_@param offset offset indicating at what position inside the byte array the result of the conversion shall be stored;private static void longToByteArray(long l, byte[] ba, int offset) {_		for (int i = 0_ i < SIZE_OF_LONG_ ++i) {_			final int shift = i << 3_ _			ba[offset + SIZE_OF_LONG - 1 - i] = (byte) ((l & (0xffL << shift)) >>> shift)__		}_	};converts,a,long,to,a,byte,array,param,l,the,long,variable,to,be,converted,param,ba,the,byte,array,to,store,the,result,the,of,the,conversion,param,offset,offset,indicating,at,what,position,inside,the,byte,array,the,result,of,the,conversion,shall,be,stored;private,static,void,long,to,byte,array,long,l,byte,ba,int,offset,for,int,i,0,i,i,final,int,shift,i,3,ba,offset,1,i,byte,l,0xff,l,shift,shift
AbstractID -> private static void longToByteArray(long l, byte[] ba, int offset);1490128641;Converts a long to a byte array.__@param l the long variable to be converted_@param ba the byte array to store the result the of the conversion_@param offset offset indicating at what position inside the byte array the result of the conversion shall be stored;private static void longToByteArray(long l, byte[] ba, int offset) {_		for (int i = 0_ i < SIZE_OF_LONG_ ++i) {_			final int shift = i << 3_ _			ba[offset + SIZE_OF_LONG - 1 - i] = (byte) ((l & (0xffL << shift)) >>> shift)__		}_	};converts,a,long,to,a,byte,array,param,l,the,long,variable,to,be,converted,param,ba,the,byte,array,to,store,the,result,the,of,the,conversion,param,offset,offset,indicating,at,what,position,inside,the,byte,array,the,result,of,the,conversion,shall,be,stored;private,static,void,long,to,byte,array,long,l,byte,ba,int,offset,for,int,i,0,i,i,final,int,shift,i,3,ba,offset,1,i,byte,l,0xff,l,shift,shift
AbstractID -> private static void longToByteArray(long l, byte[] ba, int offset);1507728812;Converts a long to a byte array.__@param l the long variable to be converted_@param ba the byte array to store the result the of the conversion_@param offset offset indicating at what position inside the byte array the result of the conversion shall be stored;private static void longToByteArray(long l, byte[] ba, int offset) {_		for (int i = 0_ i < SIZE_OF_LONG_ ++i) {_			final int shift = i << 3_ _			ba[offset + SIZE_OF_LONG - 1 - i] = (byte) ((l & (0xffL << shift)) >>> shift)__		}_	};converts,a,long,to,a,byte,array,param,l,the,long,variable,to,be,converted,param,ba,the,byte,array,to,store,the,result,the,of,the,conversion,param,offset,offset,indicating,at,what,position,inside,the,byte,array,the,result,of,the,conversion,shall,be,stored;private,static,void,long,to,byte,array,long,l,byte,ba,int,offset,for,int,i,0,i,i,final,int,shift,i,3,ba,offset,1,i,byte,l,0xff,l,shift,shift
AbstractID -> private static void longToByteArray(long l, byte[] ba, int offset);1516295284;Converts a long to a byte array.__@param l the long variable to be converted_@param ba the byte array to store the result the of the conversion_@param offset offset indicating at what position inside the byte array the result of the conversion shall be stored;private static void longToByteArray(long l, byte[] ba, int offset) {_		for (int i = 0_ i < SIZE_OF_LONG_ ++i) {_			final int shift = i << 3_ _			ba[offset + SIZE_OF_LONG - 1 - i] = (byte) ((l & (0xffL << shift)) >>> shift)__		}_	};converts,a,long,to,a,byte,array,param,l,the,long,variable,to,be,converted,param,ba,the,byte,array,to,store,the,result,the,of,the,conversion,param,offset,offset,indicating,at,what,position,inside,the,byte,array,the,result,of,the,conversion,shall,be,stored;private,static,void,long,to,byte,array,long,l,byte,ba,int,offset,for,int,i,0,i,i,final,int,shift,i,3,ba,offset,1,i,byte,l,0xff,l,shift,shift
AbstractID -> private static void longToByteArray(long l, byte[] ba, int offset);1539956805;Converts a long to a byte array.__@param l the long variable to be converted_@param ba the byte array to store the result the of the conversion_@param offset offset indicating at what position inside the byte array the result of the conversion shall be stored;private static void longToByteArray(long l, byte[] ba, int offset) {_		for (int i = 0_ i < SIZE_OF_LONG_ ++i) {_			final int shift = i << 3_ _			ba[offset + SIZE_OF_LONG - 1 - i] = (byte) ((l & (0xffL << shift)) >>> shift)__		}_	};converts,a,long,to,a,byte,array,param,l,the,long,variable,to,be,converted,param,ba,the,byte,array,to,store,the,result,the,of,the,conversion,param,offset,offset,indicating,at,what,position,inside,the,byte,array,the,result,of,the,conversion,shall,be,stored;private,static,void,long,to,byte,array,long,l,byte,ba,int,offset,for,int,i,0,i,i,final,int,shift,i,3,ba,offset,1,i,byte,l,0xff,l,shift,shift
AbstractID -> private static void longToByteArray(long l, byte[] ba, int offset);1551195367;Converts a long to a byte array.__@param l the long variable to be converted_@param ba the byte array to store the result the of the conversion_@param offset offset indicating at what position inside the byte array the result of the conversion shall be stored;private static void longToByteArray(long l, byte[] ba, int offset) {_		for (int i = 0_ i < SIZE_OF_LONG_ ++i) {_			final int shift = i << 3_ _			ba[offset + SIZE_OF_LONG - 1 - i] = (byte) ((l & (0xffL << shift)) >>> shift)__		}_	};converts,a,long,to,a,byte,array,param,l,the,long,variable,to,be,converted,param,ba,the,byte,array,to,store,the,result,the,of,the,conversion,param,offset,offset,indicating,at,what,position,inside,the,byte,array,the,result,of,the,conversion,shall,be,stored;private,static,void,long,to,byte,array,long,l,byte,ba,int,offset,for,int,i,0,i,i,final,int,shift,i,3,ba,offset,1,i,byte,l,0xff,l,shift,shift
AbstractID -> public AbstractID(byte[] bytes);1425053375;Constructs a new ID with a specific bytes value.;public AbstractID(byte[] bytes) {_		if (bytes == null || bytes.length != SIZE) {_			throw new IllegalArgumentException("Argument bytes must by an array of " + SIZE + " bytes")__		}__		this.lowerPart = byteArrayToLong(bytes, 0)__		this.upperPart = byteArrayToLong(bytes, SIZE_OF_LONG)__	};constructs,a,new,id,with,a,specific,bytes,value;public,abstract,id,byte,bytes,if,bytes,null,bytes,length,size,throw,new,illegal,argument,exception,argument,bytes,must,by,an,array,of,size,bytes,this,lower,part,byte,array,to,long,bytes,0,this,upper,part,byte,array,to,long,bytes
AbstractID -> public AbstractID(byte[] bytes);1426697080;Constructs a new ID with a specific bytes value.;public AbstractID(byte[] bytes) {_		if (bytes == null || bytes.length != SIZE) {_			throw new IllegalArgumentException("Argument bytes must by an array of " + SIZE + " bytes")__		}__		this.lowerPart = byteArrayToLong(bytes, 0)__		this.upperPart = byteArrayToLong(bytes, SIZE_OF_LONG)__	};constructs,a,new,id,with,a,specific,bytes,value;public,abstract,id,byte,bytes,if,bytes,null,bytes,length,size,throw,new,illegal,argument,exception,argument,bytes,must,by,an,array,of,size,bytes,this,lower,part,byte,array,to,long,bytes,0,this,upper,part,byte,array,to,long,bytes
AbstractID -> public AbstractID(byte[] bytes);1450210473;Constructs a new ID with a specific bytes value.;public AbstractID(byte[] bytes) {_		if (bytes == null || bytes.length != SIZE) {_			throw new IllegalArgumentException("Argument bytes must by an array of " + SIZE + " bytes")__		}__		this.lowerPart = byteArrayToLong(bytes, 0)__		this.upperPart = byteArrayToLong(bytes, SIZE_OF_LONG)__	};constructs,a,new,id,with,a,specific,bytes,value;public,abstract,id,byte,bytes,if,bytes,null,bytes,length,size,throw,new,illegal,argument,exception,argument,bytes,must,by,an,array,of,size,bytes,this,lower,part,byte,array,to,long,bytes,0,this,upper,part,byte,array,to,long,bytes
AbstractID -> public AbstractID(byte[] bytes);1454959100;Constructs a new ID with a specific bytes value.;public AbstractID(byte[] bytes) {_		if (bytes == null || bytes.length != SIZE) {_			throw new IllegalArgumentException("Argument bytes must by an array of " + SIZE + " bytes")__		}__		this.lowerPart = byteArrayToLong(bytes, 0)__		this.upperPart = byteArrayToLong(bytes, SIZE_OF_LONG)__	};constructs,a,new,id,with,a,specific,bytes,value;public,abstract,id,byte,bytes,if,bytes,null,bytes,length,size,throw,new,illegal,argument,exception,argument,bytes,must,by,an,array,of,size,bytes,this,lower,part,byte,array,to,long,bytes,0,this,upper,part,byte,array,to,long,bytes
AbstractID -> public AbstractID(byte[] bytes);1455479358;Constructs a new ID with a specific bytes value.;public AbstractID(byte[] bytes) {_		if (bytes == null || bytes.length != SIZE) {_			throw new IllegalArgumentException("Argument bytes must by an array of " + SIZE + " bytes")__		}__		this.lowerPart = byteArrayToLong(bytes, 0)__		this.upperPart = byteArrayToLong(bytes, SIZE_OF_LONG)__	};constructs,a,new,id,with,a,specific,bytes,value;public,abstract,id,byte,bytes,if,bytes,null,bytes,length,size,throw,new,illegal,argument,exception,argument,bytes,must,by,an,array,of,size,bytes,this,lower,part,byte,array,to,long,bytes,0,this,upper,part,byte,array,to,long,bytes
AbstractID -> public AbstractID(byte[] bytes);1490128641;Constructs a new ID with a specific bytes value.;public AbstractID(byte[] bytes) {_		if (bytes == null || bytes.length != SIZE) {_			throw new IllegalArgumentException("Argument bytes must by an array of " + SIZE + " bytes")__		}__		this.lowerPart = byteArrayToLong(bytes, 0)__		this.upperPart = byteArrayToLong(bytes, SIZE_OF_LONG)__	};constructs,a,new,id,with,a,specific,bytes,value;public,abstract,id,byte,bytes,if,bytes,null,bytes,length,size,throw,new,illegal,argument,exception,argument,bytes,must,by,an,array,of,size,bytes,this,lower,part,byte,array,to,long,bytes,0,this,upper,part,byte,array,to,long,bytes
AbstractID -> public AbstractID(byte[] bytes);1507728812;Constructs a new ID with a specific bytes value.;public AbstractID(byte[] bytes) {_		if (bytes == null || bytes.length != SIZE) {_			throw new IllegalArgumentException("Argument bytes must by an array of " + SIZE + " bytes")__		}__		this.lowerPart = byteArrayToLong(bytes, 0)__		this.upperPart = byteArrayToLong(bytes, SIZE_OF_LONG)__	};constructs,a,new,id,with,a,specific,bytes,value;public,abstract,id,byte,bytes,if,bytes,null,bytes,length,size,throw,new,illegal,argument,exception,argument,bytes,must,by,an,array,of,size,bytes,this,lower,part,byte,array,to,long,bytes,0,this,upper,part,byte,array,to,long,bytes
AbstractID -> public AbstractID(byte[] bytes);1516295284;Constructs a new ID with a specific bytes value.;public AbstractID(byte[] bytes) {_		if (bytes == null || bytes.length != SIZE) {_			throw new IllegalArgumentException("Argument bytes must by an array of " + SIZE + " bytes")__		}__		this.lowerPart = byteArrayToLong(bytes, 0)__		this.upperPart = byteArrayToLong(bytes, SIZE_OF_LONG)__	};constructs,a,new,id,with,a,specific,bytes,value;public,abstract,id,byte,bytes,if,bytes,null,bytes,length,size,throw,new,illegal,argument,exception,argument,bytes,must,by,an,array,of,size,bytes,this,lower,part,byte,array,to,long,bytes,0,this,upper,part,byte,array,to,long,bytes
AbstractID -> public AbstractID(byte[] bytes);1539956805;Constructs a new ID with a specific bytes value.;public AbstractID(byte[] bytes) {_		if (bytes == null || bytes.length != SIZE) {_			throw new IllegalArgumentException("Argument bytes must by an array of " + SIZE + " bytes")__		}__		this.lowerPart = byteArrayToLong(bytes, 0)__		this.upperPart = byteArrayToLong(bytes, SIZE_OF_LONG)__	};constructs,a,new,id,with,a,specific,bytes,value;public,abstract,id,byte,bytes,if,bytes,null,bytes,length,size,throw,new,illegal,argument,exception,argument,bytes,must,by,an,array,of,size,bytes,this,lower,part,byte,array,to,long,bytes,0,this,upper,part,byte,array,to,long,bytes
AbstractID -> public AbstractID(byte[] bytes);1551195367;Constructs a new ID with a specific bytes value.;public AbstractID(byte[] bytes) {_		if (bytes == null || bytes.length != SIZE) {_			throw new IllegalArgumentException("Argument bytes must by an array of " + SIZE + " bytes")__		}__		this.lowerPart = byteArrayToLong(bytes, 0)__		this.upperPart = byteArrayToLong(bytes, SIZE_OF_LONG)__	};constructs,a,new,id,with,a,specific,bytes,value;public,abstract,id,byte,bytes,if,bytes,null,bytes,length,size,throw,new,illegal,argument,exception,argument,bytes,must,by,an,array,of,size,bytes,this,lower,part,byte,array,to,long,bytes,0,this,upper,part,byte,array,to,long,bytes
