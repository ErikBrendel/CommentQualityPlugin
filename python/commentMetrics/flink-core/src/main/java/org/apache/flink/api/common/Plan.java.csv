# id;timestamp;commentText;codeText;commentWords;codeWords
Plan -> public long getExecutionRetryDelay();1444215406;Gets the delay between retry failed task._@return The delay the system will wait to retry.;public long getExecutionRetryDelay() {_		return getExecutionConfig().getExecutionRetryDelay()__	};gets,the,delay,between,retry,failed,task,return,the,delay,the,system,will,wait,to,retry;public,long,get,execution,retry,delay,return,get,execution,config,get,execution,retry,delay
Plan -> public long getExecutionRetryDelay();1449526184;Gets the delay between retry failed task._@return The delay the system will wait to retry.;public long getExecutionRetryDelay() {_		return getExecutionConfig().getExecutionRetryDelay()__	};gets,the,delay,between,retry,failed,task,return,the,delay,the,system,will,wait,to,retry;public,long,get,execution,retry,delay,return,get,execution,config,get,execution,retry,delay
Plan -> public long getExecutionRetryDelay();1455479358;Gets the delay between retry failed task._@return The delay the system will wait to retry.;public long getExecutionRetryDelay() {_		return getExecutionConfig().getExecutionRetryDelay()__	};gets,the,delay,between,retry,failed,task,return,the,delay,the,system,will,wait,to,retry;public,long,get,execution,retry,delay,return,get,execution,config,get,execution,retry,delay
Plan -> public String getPostPassClassName();1405024514;Gets the optimizer post-pass class for this job. The post-pass typically creates utility classes_for data types and is specific to a particular data model (record, tuple, Scala, ...)__@return The name of the class implementing the optimizer post-pass.;public String getPostPassClassName() {_		return "org.apache.flink.compiler.postpass.RecordModelPostPass"__	};gets,the,optimizer,post,pass,class,for,this,job,the,post,pass,typically,creates,utility,classes,for,data,types,and,is,specific,to,a,particular,data,model,record,tuple,scala,return,the,name,of,the,class,implementing,the,optimizer,post,pass;public,string,get,post,pass,class,name,return,org,apache,flink,compiler,postpass,record,model,post,pass
Plan -> public String getPostPassClassName();1405090423;Gets the optimizer post-pass class for this job. The post-pass typically creates utility classes_for data types and is specific to a particular data model (record, tuple, Scala, ...)__@return The name of the class implementing the optimizer post-pass.;public String getPostPassClassName() {_		return "org.apache.flink.compiler.postpass.RecordModelPostPass"__	};gets,the,optimizer,post,pass,class,for,this,job,the,post,pass,typically,creates,utility,classes,for,data,types,and,is,specific,to,a,particular,data,model,record,tuple,scala,return,the,name,of,the,class,implementing,the,optimizer,post,pass;public,string,get,post,pass,class,name,return,org,apache,flink,compiler,postpass,record,model,post,pass
Plan -> public String getPostPassClassName();1411473593;Gets the optimizer post-pass class for this job. The post-pass typically creates utility classes_for data types and is specific to a particular data model (record, tuple, Scala, ...)__@return The name of the class implementing the optimizer post-pass.;public String getPostPassClassName() {_		return "org.apache.flink.compiler.postpass.RecordModelPostPass"__	};gets,the,optimizer,post,pass,class,for,this,job,the,post,pass,typically,creates,utility,classes,for,data,types,and,is,specific,to,a,particular,data,model,record,tuple,scala,return,the,name,of,the,class,implementing,the,optimizer,post,pass;public,string,get,post,pass,class,name,return,org,apache,flink,compiler,postpass,record,model,post,pass
Plan -> public String getPostPassClassName();1412346153;Gets the optimizer post-pass class for this job. The post-pass typically creates utility classes_for data types and is specific to a particular data model (record, tuple, Scala, ...)__@return The name of the class implementing the optimizer post-pass.;public String getPostPassClassName() {_		return "org.apache.flink.compiler.postpass.RecordModelPostPass"__	};gets,the,optimizer,post,pass,class,for,this,job,the,post,pass,typically,creates,utility,classes,for,data,types,and,is,specific,to,a,particular,data,model,record,tuple,scala,return,the,name,of,the,class,implementing,the,optimizer,post,pass;public,string,get,post,pass,class,name,return,org,apache,flink,compiler,postpass,record,model,post,pass
Plan -> public String getPostPassClassName();1415027294;Gets the optimizer post-pass class for this job. The post-pass typically creates utility classes_for data types and is specific to a particular data model (record, tuple, Scala, ...)__@return The name of the class implementing the optimizer post-pass.;public String getPostPassClassName() {_		return "org.apache.flink.compiler.postpass.RecordModelPostPass"__	};gets,the,optimizer,post,pass,class,for,this,job,the,post,pass,typically,creates,utility,classes,for,data,types,and,is,specific,to,a,particular,data,model,record,tuple,scala,return,the,name,of,the,class,implementing,the,optimizer,post,pass;public,string,get,post,pass,class,name,return,org,apache,flink,compiler,postpass,record,model,post,pass
Plan -> public String getPostPassClassName();1420654570;Gets the optimizer post-pass class for this job. The post-pass typically creates utility classes_for data types and is specific to a particular data model (record, tuple, Scala, ...)__@return The name of the class implementing the optimizer post-pass.;public String getPostPassClassName() {_		return "org.apache.flink.compiler.postpass.RecordModelPostPass"__	};gets,the,optimizer,post,pass,class,for,this,job,the,post,pass,typically,creates,utility,classes,for,data,types,and,is,specific,to,a,particular,data,model,record,tuple,scala,return,the,name,of,the,class,implementing,the,optimizer,post,pass;public,string,get,post,pass,class,name,return,org,apache,flink,compiler,postpass,record,model,post,pass
Plan -> public String getPostPassClassName();1420663430;Gets the optimizer post-pass class for this job. The post-pass typically creates utility classes_for data types and is specific to a particular data model (record, tuple, Scala, ...)__@return The name of the class implementing the optimizer post-pass.;public String getPostPassClassName() {_		return "org.apache.flink.compiler.postpass.RecordModelPostPass"__	};gets,the,optimizer,post,pass,class,for,this,job,the,post,pass,typically,creates,utility,classes,for,data,types,and,is,specific,to,a,particular,data,model,record,tuple,scala,return,the,name,of,the,class,implementing,the,optimizer,post,pass;public,string,get,post,pass,class,name,return,org,apache,flink,compiler,postpass,record,model,post,pass
Plan -> public String getPostPassClassName();1424115592;Gets the optimizer post-pass class for this job. The post-pass typically creates utility classes_for data types and is specific to a particular data model (record, tuple, Scala, ...)__@return The name of the class implementing the optimizer post-pass.;public String getPostPassClassName() {_		return "org.apache.flink.compiler.postpass.RecordModelPostPass"__	};gets,the,optimizer,post,pass,class,for,this,job,the,post,pass,typically,creates,utility,classes,for,data,types,and,is,specific,to,a,particular,data,model,record,tuple,scala,return,the,name,of,the,class,implementing,the,optimizer,post,pass;public,string,get,post,pass,class,name,return,org,apache,flink,compiler,postpass,record,model,post,pass
Plan -> public String getPostPassClassName();1426843273;Gets the optimizer post-pass class for this job. The post-pass typically creates utility classes_for data types and is specific to a particular data model (record, tuple, Scala, ...)__@return The name of the class implementing the optimizer post-pass.;public String getPostPassClassName() {_		return "org.apache.flink.optimizer.postpass.RecordModelPostPass"__	};gets,the,optimizer,post,pass,class,for,this,job,the,post,pass,typically,creates,utility,classes,for,data,types,and,is,specific,to,a,particular,data,model,record,tuple,scala,return,the,name,of,the,class,implementing,the,optimizer,post,pass;public,string,get,post,pass,class,name,return,org,apache,flink,optimizer,postpass,record,model,post,pass
Plan -> public String getPostPassClassName();1427097830;Gets the optimizer post-pass class for this job. The post-pass typically creates utility classes_for data types and is specific to a particular data model (record, tuple, Scala, ...)__@return The name of the class implementing the optimizer post-pass.;public String getPostPassClassName() {_		return "org.apache.flink.optimizer.postpass.RecordModelPostPass"__	};gets,the,optimizer,post,pass,class,for,this,job,the,post,pass,typically,creates,utility,classes,for,data,types,and,is,specific,to,a,particular,data,model,record,tuple,scala,return,the,name,of,the,class,implementing,the,optimizer,post,pass;public,string,get,post,pass,class,name,return,org,apache,flink,optimizer,postpass,record,model,post,pass
Plan -> public String getPostPassClassName();1431703039;Gets the optimizer post-pass class for this job. The post-pass typically creates utility classes_for data types and is specific to a particular data model (record, tuple, Scala, ...)__@return The name of the class implementing the optimizer post-pass.;public String getPostPassClassName() {_		return "org.apache.flink.optimizer.postpass.RecordModelPostPass"__	};gets,the,optimizer,post,pass,class,for,this,job,the,post,pass,typically,creates,utility,classes,for,data,types,and,is,specific,to,a,particular,data,model,record,tuple,scala,return,the,name,of,the,class,implementing,the,optimizer,post,pass;public,string,get,post,pass,class,name,return,org,apache,flink,optimizer,postpass,record,model,post,pass
Plan -> public String getPostPassClassName();1442944546;Gets the optimizer post-pass class for this job. The post-pass typically creates utility classes_for data types and is specific to a particular data model (record, tuple, Scala, ...)__@return The name of the class implementing the optimizer post-pass.;public String getPostPassClassName() {_		return "org.apache.flink.optimizer.postpass.RecordModelPostPass"__	};gets,the,optimizer,post,pass,class,for,this,job,the,post,pass,typically,creates,utility,classes,for,data,types,and,is,specific,to,a,particular,data,model,record,tuple,scala,return,the,name,of,the,class,implementing,the,optimizer,post,pass;public,string,get,post,pass,class,name,return,org,apache,flink,optimizer,postpass,record,model,post,pass
Plan -> public String getPostPassClassName();1444215406;Gets the optimizer post-pass class for this job. The post-pass typically creates utility classes_for data types and is specific to a particular data model (record, tuple, Scala, ...)__@return The name of the class implementing the optimizer post-pass.;public String getPostPassClassName() {_		return "org.apache.flink.optimizer.postpass.RecordModelPostPass"__	};gets,the,optimizer,post,pass,class,for,this,job,the,post,pass,typically,creates,utility,classes,for,data,types,and,is,specific,to,a,particular,data,model,record,tuple,scala,return,the,name,of,the,class,implementing,the,optimizer,post,pass;public,string,get,post,pass,class,name,return,org,apache,flink,optimizer,postpass,record,model,post,pass
Plan -> public String getPostPassClassName();1449526184;Gets the optimizer post-pass class for this job. The post-pass typically creates utility classes_for data types and is specific to a particular data model (record, tuple, Scala, ...)__@return The name of the class implementing the optimizer post-pass.;public String getPostPassClassName() {_		return "org.apache.flink.optimizer.postpass.JavaApiPostPass"__	};gets,the,optimizer,post,pass,class,for,this,job,the,post,pass,typically,creates,utility,classes,for,data,types,and,is,specific,to,a,particular,data,model,record,tuple,scala,return,the,name,of,the,class,implementing,the,optimizer,post,pass;public,string,get,post,pass,class,name,return,org,apache,flink,optimizer,postpass,java,api,post,pass
Plan -> public String getPostPassClassName();1455479358;Gets the optimizer post-pass class for this job. The post-pass typically creates utility classes_for data types and is specific to a particular data model (record, tuple, Scala, ...)__@return The name of the class implementing the optimizer post-pass.;public String getPostPassClassName() {_		return "org.apache.flink.optimizer.postpass.JavaApiPostPass"__	};gets,the,optimizer,post,pass,class,for,this,job,the,post,pass,typically,creates,utility,classes,for,data,types,and,is,specific,to,a,particular,data,model,record,tuple,scala,return,the,name,of,the,class,implementing,the,optimizer,post,pass;public,string,get,post,pass,class,name,return,org,apache,flink,optimizer,postpass,java,api,post,pass
Plan -> public String getPostPassClassName();1455548285;Gets the optimizer post-pass class for this job. The post-pass typically creates utility classes_for data types and is specific to a particular data model (record, tuple, Scala, ...)__@return The name of the class implementing the optimizer post-pass.;public String getPostPassClassName() {_		return "org.apache.flink.optimizer.postpass.JavaApiPostPass"__	};gets,the,optimizer,post,pass,class,for,this,job,the,post,pass,typically,creates,utility,classes,for,data,types,and,is,specific,to,a,particular,data,model,record,tuple,scala,return,the,name,of,the,class,implementing,the,optimizer,post,pass;public,string,get,post,pass,class,name,return,org,apache,flink,optimizer,postpass,java,api,post,pass
Plan -> public String getPostPassClassName();1457737669;Gets the optimizer post-pass class for this job. The post-pass typically creates utility classes_for data types and is specific to a particular data model (record, tuple, Scala, ...)__@return The name of the class implementing the optimizer post-pass.;public String getPostPassClassName() {_		return "org.apache.flink.optimizer.postpass.JavaApiPostPass"__	};gets,the,optimizer,post,pass,class,for,this,job,the,post,pass,typically,creates,utility,classes,for,data,types,and,is,specific,to,a,particular,data,model,record,tuple,scala,return,the,name,of,the,class,implementing,the,optimizer,post,pass;public,string,get,post,pass,class,name,return,org,apache,flink,optimizer,postpass,java,api,post,pass
Plan -> public String getPostPassClassName();1460472696;Gets the optimizer post-pass class for this job. The post-pass typically creates utility classes_for data types and is specific to a particular data model (record, tuple, Scala, ...)__@return The name of the class implementing the optimizer post-pass.;public String getPostPassClassName() {_		return "org.apache.flink.optimizer.postpass.JavaApiPostPass"__	};gets,the,optimizer,post,pass,class,for,this,job,the,post,pass,typically,creates,utility,classes,for,data,types,and,is,specific,to,a,particular,data,model,record,tuple,scala,return,the,name,of,the,class,implementing,the,optimizer,post,pass;public,string,get,post,pass,class,name,return,org,apache,flink,optimizer,postpass,java,api,post,pass
Plan -> public String getPostPassClassName();1460563153;Gets the optimizer post-pass class for this job. The post-pass typically creates utility classes_for data types and is specific to a particular data model (record, tuple, Scala, ...)__@return The name of the class implementing the optimizer post-pass.;public String getPostPassClassName() {_		return "org.apache.flink.optimizer.postpass.JavaApiPostPass"__	};gets,the,optimizer,post,pass,class,for,this,job,the,post,pass,typically,creates,utility,classes,for,data,types,and,is,specific,to,a,particular,data,model,record,tuple,scala,return,the,name,of,the,class,implementing,the,optimizer,post,pass;public,string,get,post,pass,class,name,return,org,apache,flink,optimizer,postpass,java,api,post,pass
Plan -> public String getPostPassClassName();1460741894;Gets the optimizer post-pass class for this job. The post-pass typically creates utility classes_for data types and is specific to a particular data model (record, tuple, Scala, ...)__@return The name of the class implementing the optimizer post-pass.;public String getPostPassClassName() {_		return "org.apache.flink.optimizer.postpass.JavaApiPostPass"__	};gets,the,optimizer,post,pass,class,for,this,job,the,post,pass,typically,creates,utility,classes,for,data,types,and,is,specific,to,a,particular,data,model,record,tuple,scala,return,the,name,of,the,class,implementing,the,optimizer,post,pass;public,string,get,post,pass,class,name,return,org,apache,flink,optimizer,postpass,java,api,post,pass
Plan -> public String getPostPassClassName();1500974874;Gets the optimizer post-pass class for this job. The post-pass typically creates utility classes_for data types and is specific to a particular data model (record, tuple, Scala, ...)__@return The name of the class implementing the optimizer post-pass.;public String getPostPassClassName() {_		return "org.apache.flink.optimizer.postpass.JavaApiPostPass"__	};gets,the,optimizer,post,pass,class,for,this,job,the,post,pass,typically,creates,utility,classes,for,data,types,and,is,specific,to,a,particular,data,model,record,tuple,scala,return,the,name,of,the,class,implementing,the,optimizer,post,pass;public,string,get,post,pass,class,name,return,org,apache,flink,optimizer,postpass,java,api,post,pass
Plan -> public String getPostPassClassName();1529583969;Gets the optimizer post-pass class for this job. The post-pass typically creates utility classes_for data types and is specific to a particular data model (record, tuple, Scala, ...)__@return The name of the class implementing the optimizer post-pass.;public String getPostPassClassName() {_		return "org.apache.flink.optimizer.postpass.JavaApiPostPass"__	};gets,the,optimizer,post,pass,class,for,this,job,the,post,pass,typically,creates,utility,classes,for,data,types,and,is,specific,to,a,particular,data,model,record,tuple,scala,return,the,name,of,the,class,implementing,the,optimizer,post,pass;public,string,get,post,pass,class,name,return,org,apache,flink,optimizer,postpass,java,api,post,pass
Plan -> public String getPostPassClassName();1544793776;Gets the optimizer post-pass class for this job. The post-pass typically creates utility classes_for data types and is specific to a particular data model (record, tuple, Scala, ...)__@return The name of the class implementing the optimizer post-pass.;public String getPostPassClassName() {_		return "org.apache.flink.optimizer.postpass.JavaApiPostPass"__	};gets,the,optimizer,post,pass,class,for,this,job,the,post,pass,typically,creates,utility,classes,for,data,types,and,is,specific,to,a,particular,data,model,record,tuple,scala,return,the,name,of,the,class,implementing,the,optimizer,post,pass;public,string,get,post,pass,class,name,return,org,apache,flink,optimizer,postpass,java,api,post,pass
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks);1405024514;Creates a new program plan, describing the data flow that ends at the_given data sinks. The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sinks The collection will the sinks of the data flow.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks) {_		this(sinks, DEFAULT_PARALELLISM)__	};creates,a,new,program,plan,describing,the,data,flow,that,ends,at,the,given,data,sinks,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sinks,the,collection,will,the,sinks,of,the,data,flow;public,plan,collection,extends,generic,data,sink,base,sinks,this,sinks
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks);1405090423;Creates a new program plan, describing the data flow that ends at the_given data sinks. The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sinks The collection will the sinks of the data flow.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks) {_		this(sinks, DEFAULT_PARALELLISM)__	};creates,a,new,program,plan,describing,the,data,flow,that,ends,at,the,given,data,sinks,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sinks,the,collection,will,the,sinks,of,the,data,flow;public,plan,collection,extends,generic,data,sink,base,sinks,this,sinks
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks);1411473593;Creates a new program plan, describing the data flow that ends at the_given data sinks. The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sinks The collection will the sinks of the data flow.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks) {_		this(sinks, DEFAULT_PARALELLISM)__	};creates,a,new,program,plan,describing,the,data,flow,that,ends,at,the,given,data,sinks,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sinks,the,collection,will,the,sinks,of,the,data,flow;public,plan,collection,extends,generic,data,sink,base,sinks,this,sinks
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks);1412346153;Creates a new program plan, describing the data flow that ends at the_given data sinks. The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sinks The collection will the sinks of the data flow.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks) {_		this(sinks, DEFAULT_PARALELLISM)__	};creates,a,new,program,plan,describing,the,data,flow,that,ends,at,the,given,data,sinks,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sinks,the,collection,will,the,sinks,of,the,data,flow;public,plan,collection,extends,generic,data,sink,base,sinks,this,sinks
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks);1415027294;Creates a new program plan, describing the data flow that ends at the_given data sinks. The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sinks The collection will the sinks of the data flow.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks) {_		this(sinks, DEFAULT_PARALELLISM)__	};creates,a,new,program,plan,describing,the,data,flow,that,ends,at,the,given,data,sinks,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sinks,the,collection,will,the,sinks,of,the,data,flow;public,plan,collection,extends,generic,data,sink,base,sinks,this,sinks
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks);1420654570;Creates a new program plan, describing the data flow that ends at the_given data sinks. The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sinks The collection will the sinks of the data flow.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks) {_		this(sinks, DEFAULT_PARALELLISM)__	};creates,a,new,program,plan,describing,the,data,flow,that,ends,at,the,given,data,sinks,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sinks,the,collection,will,the,sinks,of,the,data,flow;public,plan,collection,extends,generic,data,sink,base,sinks,this,sinks
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks);1420663430;Creates a new program plan, describing the data flow that ends at the_given data sinks. The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sinks The collection will the sinks of the data flow.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks) {_		this(sinks, DEFAULT_PARALELLISM)__	};creates,a,new,program,plan,describing,the,data,flow,that,ends,at,the,given,data,sinks,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sinks,the,collection,will,the,sinks,of,the,data,flow;public,plan,collection,extends,generic,data,sink,base,sinks,this,sinks
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks);1424115592;Creates a new program plan, describing the data flow that ends at the_given data sinks. The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sinks The collection will the sinks of the data flow.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks) {_		this(sinks, DEFAULT_PARALELLISM)__	};creates,a,new,program,plan,describing,the,data,flow,that,ends,at,the,given,data,sinks,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sinks,the,collection,will,the,sinks,of,the,data,flow;public,plan,collection,extends,generic,data,sink,base,sinks,this,sinks
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks);1426843273;Creates a new program plan, describing the data flow that ends at the_given data sinks. The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sinks The collection will the sinks of the data flow.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks) {_		this(sinks, DEFAULT_PARALELLISM)__	};creates,a,new,program,plan,describing,the,data,flow,that,ends,at,the,given,data,sinks,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sinks,the,collection,will,the,sinks,of,the,data,flow;public,plan,collection,extends,generic,data,sink,base,sinks,this,sinks
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks);1427097830;Creates a new program plan, describing the data flow that ends at the_given data sinks. The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sinks The collection will the sinks of the data flow.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks) {_		this(sinks, DEFAULT_PARALELLISM)__	};creates,a,new,program,plan,describing,the,data,flow,that,ends,at,the,given,data,sinks,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sinks,the,collection,will,the,sinks,of,the,data,flow;public,plan,collection,extends,generic,data,sink,base,sinks,this,sinks
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks);1431703039;Creates a new program plan, describing the data flow that ends at the_given data sinks. The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sinks The collection will the sinks of the data flow.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks) {_		this(sinks, DEFAULT_PARALELLISM)__	};creates,a,new,program,plan,describing,the,data,flow,that,ends,at,the,given,data,sinks,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sinks,the,collection,will,the,sinks,of,the,data,flow;public,plan,collection,extends,generic,data,sink,base,sinks,this,sinks
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks);1442944546;Creates a new program plan, describing the data flow that ends at the_given data sinks. The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sinks The collection will the sinks of the data flow.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks) {_		this(sinks, DEFAULT_PARALELLISM)__	};creates,a,new,program,plan,describing,the,data,flow,that,ends,at,the,given,data,sinks,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sinks,the,collection,will,the,sinks,of,the,data,flow;public,plan,collection,extends,generic,data,sink,base,sinks,this,sinks
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks);1444215406;Creates a new program plan, describing the data flow that ends at the_given data sinks. The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sinks The collection will the sinks of the data flow.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks) {_		this(sinks, DEFAULT_PARALELLISM)__	};creates,a,new,program,plan,describing,the,data,flow,that,ends,at,the,given,data,sinks,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sinks,the,collection,will,the,sinks,of,the,data,flow;public,plan,collection,extends,generic,data,sink,base,sinks,this,sinks
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks);1449526184;Creates a new program plan, describing the data flow that ends at the_given data sinks. The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sinks The collection will the sinks of the data flow.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks) {_		this(sinks, DEFAULT_PARALELLISM)__	};creates,a,new,program,plan,describing,the,data,flow,that,ends,at,the,given,data,sinks,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sinks,the,collection,will,the,sinks,of,the,data,flow;public,plan,collection,extends,generic,data,sink,base,sinks,this,sinks
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks);1455479358;Creates a new program plan, describing the data flow that ends at the_given data sinks. The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sinks The collection will the sinks of the data flow.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks) {_		this(sinks, DEFAULT_PARALELLISM)__	};creates,a,new,program,plan,describing,the,data,flow,that,ends,at,the,given,data,sinks,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sinks,the,collection,will,the,sinks,of,the,data,flow;public,plan,collection,extends,generic,data,sink,base,sinks,this,sinks
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks);1455548285;Creates a new program plan, describing the data flow that ends at the_given data sinks. The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sinks The collection will the sinks of the data flow.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks) {_		this(sinks, DEFAULT_PARALELLISM)__	};creates,a,new,program,plan,describing,the,data,flow,that,ends,at,the,given,data,sinks,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sinks,the,collection,will,the,sinks,of,the,data,flow;public,plan,collection,extends,generic,data,sink,base,sinks,this,sinks
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks);1457737669;Creates a new program plan, describing the data flow that ends at the_given data sinks. The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sinks The collection will the sinks of the data flow.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks) {_		this(sinks, DEFAULT_PARALELLISM)__	};creates,a,new,program,plan,describing,the,data,flow,that,ends,at,the,given,data,sinks,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sinks,the,collection,will,the,sinks,of,the,data,flow;public,plan,collection,extends,generic,data,sink,base,sinks,this,sinks
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks);1460472696;Creates a new program plan, describing the data flow that ends at the_given data sinks. The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sinks The collection will the sinks of the data flow.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks) {_		this(sinks, DEFAULT_PARALELLISM)__	};creates,a,new,program,plan,describing,the,data,flow,that,ends,at,the,given,data,sinks,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sinks,the,collection,will,the,sinks,of,the,data,flow;public,plan,collection,extends,generic,data,sink,base,sinks,this,sinks
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks);1460563153;Creates a new program plan, describing the data flow that ends at the_given data sinks. The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sinks The collection will the sinks of the data flow.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks) {_		this(sinks, ExecutionConfig.PARALLELISM_DEFAULT)__	};creates,a,new,program,plan,describing,the,data,flow,that,ends,at,the,given,data,sinks,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sinks,the,collection,will,the,sinks,of,the,data,flow;public,plan,collection,extends,generic,data,sink,base,sinks,this,sinks,execution,config
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks);1460741894;Creates a new program plan, describing the data flow that ends at the_given data sinks. The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sinks The collection will the sinks of the data flow.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks) {_		this(sinks, ExecutionConfig.PARALLELISM_DEFAULT)__	};creates,a,new,program,plan,describing,the,data,flow,that,ends,at,the,given,data,sinks,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sinks,the,collection,will,the,sinks,of,the,data,flow;public,plan,collection,extends,generic,data,sink,base,sinks,this,sinks,execution,config
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks);1500974874;Creates a new program plan, describing the data flow that ends at the_given data sinks. The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sinks The collection will the sinks of the data flow.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks) {_		this(sinks, ExecutionConfig.PARALLELISM_DEFAULT)__	};creates,a,new,program,plan,describing,the,data,flow,that,ends,at,the,given,data,sinks,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sinks,the,collection,will,the,sinks,of,the,data,flow;public,plan,collection,extends,generic,data,sink,base,sinks,this,sinks,execution,config
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks);1529583969;Creates a new program plan, describing the data flow that ends at the_given data sinks. The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sinks The collection will the sinks of the data flow.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks) {_		this(sinks, ExecutionConfig.PARALLELISM_DEFAULT)__	};creates,a,new,program,plan,describing,the,data,flow,that,ends,at,the,given,data,sinks,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sinks,the,collection,will,the,sinks,of,the,data,flow;public,plan,collection,extends,generic,data,sink,base,sinks,this,sinks,execution,config
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks);1544793776;Creates a new program plan, describing the data flow that ends at the_given data sinks. The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sinks The collection will the sinks of the data flow.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks) {_		this(sinks, ExecutionConfig.PARALLELISM_DEFAULT)__	};creates,a,new,program,plan,describing,the,data,flow,that,ends,at,the,given,data,sinks,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sinks,the,collection,will,the,sinks,of,the,data,flow;public,plan,collection,extends,generic,data,sink,base,sinks,this,sinks,execution,config
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName, int defaultParallelism);1405024514;Creates a new program plan with the given name and default parallelism, describing the data flow that ends_at the given data sinks._<p>_If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.__@param sinks The collection will the sinks of the job's data flow._@param jobName The name to display for the job._@param defaultParallelism The default degree of parallelism for the job.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName, int defaultParallelism) {_		this.sinks.addAll(sinks)__		this.jobName = jobName__		this.defaultParallelism = defaultParallelism__	};creates,a,new,program,plan,with,the,given,name,and,default,parallelism,describing,the,data,flow,that,ends,at,the,given,data,sinks,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,param,sinks,the,collection,will,the,sinks,of,the,job,s,data,flow,param,job,name,the,name,to,display,for,the,job,param,default,parallelism,the,default,degree,of,parallelism,for,the,job;public,plan,collection,extends,generic,data,sink,base,sinks,string,job,name,int,default,parallelism,this,sinks,add,all,sinks,this,job,name,job,name,this,default,parallelism,default,parallelism
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName, int defaultParallelism);1405090423;Creates a new program plan with the given name and default parallelism, describing the data flow that ends_at the given data sinks._<p>_If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.__@param sinks The collection will the sinks of the job's data flow._@param jobName The name to display for the job._@param defaultParallelism The default degree of parallelism for the job.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName, int defaultParallelism) {_		this.sinks.addAll(sinks)__		this.jobName = jobName__		this.defaultParallelism = defaultParallelism__	};creates,a,new,program,plan,with,the,given,name,and,default,parallelism,describing,the,data,flow,that,ends,at,the,given,data,sinks,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,param,sinks,the,collection,will,the,sinks,of,the,job,s,data,flow,param,job,name,the,name,to,display,for,the,job,param,default,parallelism,the,default,degree,of,parallelism,for,the,job;public,plan,collection,extends,generic,data,sink,base,sinks,string,job,name,int,default,parallelism,this,sinks,add,all,sinks,this,job,name,job,name,this,default,parallelism,default,parallelism
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName, int defaultParallelism);1411473593;Creates a new program plan with the given name and default parallelism, describing the data flow that ends_at the given data sinks._<p>_If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.__@param sinks The collection will the sinks of the job's data flow._@param jobName The name to display for the job._@param defaultParallelism The default degree of parallelism for the job.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName, int defaultParallelism) {_		this.sinks.addAll(sinks)__		this.jobName = jobName__		this.defaultParallelism = defaultParallelism__	};creates,a,new,program,plan,with,the,given,name,and,default,parallelism,describing,the,data,flow,that,ends,at,the,given,data,sinks,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,param,sinks,the,collection,will,the,sinks,of,the,job,s,data,flow,param,job,name,the,name,to,display,for,the,job,param,default,parallelism,the,default,degree,of,parallelism,for,the,job;public,plan,collection,extends,generic,data,sink,base,sinks,string,job,name,int,default,parallelism,this,sinks,add,all,sinks,this,job,name,job,name,this,default,parallelism,default,parallelism
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName, int defaultParallelism);1412346153;Creates a new program plan with the given name and default parallelism, describing the data flow that ends_at the given data sinks._<p>_If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.__@param sinks The collection will the sinks of the job's data flow._@param jobName The name to display for the job._@param defaultParallelism The default degree of parallelism for the job.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName, int defaultParallelism) {_		this.sinks.addAll(sinks)__		this.jobName = jobName__		this.defaultParallelism = defaultParallelism__	};creates,a,new,program,plan,with,the,given,name,and,default,parallelism,describing,the,data,flow,that,ends,at,the,given,data,sinks,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,param,sinks,the,collection,will,the,sinks,of,the,job,s,data,flow,param,job,name,the,name,to,display,for,the,job,param,default,parallelism,the,default,degree,of,parallelism,for,the,job;public,plan,collection,extends,generic,data,sink,base,sinks,string,job,name,int,default,parallelism,this,sinks,add,all,sinks,this,job,name,job,name,this,default,parallelism,default,parallelism
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName, int defaultParallelism);1415027294;Creates a new program plan with the given name and default parallelism, describing the data flow that ends_at the given data sinks._<p>_If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.__@param sinks The collection will the sinks of the job's data flow._@param jobName The name to display for the job._@param defaultParallelism The default degree of parallelism for the job.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName, int defaultParallelism) {_		this.sinks.addAll(sinks)__		this.jobName = jobName__		this.defaultParallelism = defaultParallelism__	};creates,a,new,program,plan,with,the,given,name,and,default,parallelism,describing,the,data,flow,that,ends,at,the,given,data,sinks,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,param,sinks,the,collection,will,the,sinks,of,the,job,s,data,flow,param,job,name,the,name,to,display,for,the,job,param,default,parallelism,the,default,degree,of,parallelism,for,the,job;public,plan,collection,extends,generic,data,sink,base,sinks,string,job,name,int,default,parallelism,this,sinks,add,all,sinks,this,job,name,job,name,this,default,parallelism,default,parallelism
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName, int defaultParallelism);1420654570;Creates a new program plan with the given name and default parallelism, describing the data flow that ends_at the given data sinks._<p>_If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.__@param sinks The collection will the sinks of the job's data flow._@param jobName The name to display for the job._@param defaultParallelism The default degree of parallelism for the job.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName, int defaultParallelism) {_		this.sinks.addAll(sinks)__		this.jobName = jobName__		this.defaultParallelism = defaultParallelism__	};creates,a,new,program,plan,with,the,given,name,and,default,parallelism,describing,the,data,flow,that,ends,at,the,given,data,sinks,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,param,sinks,the,collection,will,the,sinks,of,the,job,s,data,flow,param,job,name,the,name,to,display,for,the,job,param,default,parallelism,the,default,degree,of,parallelism,for,the,job;public,plan,collection,extends,generic,data,sink,base,sinks,string,job,name,int,default,parallelism,this,sinks,add,all,sinks,this,job,name,job,name,this,default,parallelism,default,parallelism
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName, int defaultParallelism);1420663430;Creates a new program plan with the given name and default parallelism, describing the data flow that ends_at the given data sinks._<p>_If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.__@param sinks The collection will the sinks of the job's data flow._@param jobName The name to display for the job._@param defaultParallelism The default degree of parallelism for the job.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName, int defaultParallelism) {_		this.sinks.addAll(sinks)__		this.jobName = jobName__		this.defaultParallelism = defaultParallelism__	};creates,a,new,program,plan,with,the,given,name,and,default,parallelism,describing,the,data,flow,that,ends,at,the,given,data,sinks,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,param,sinks,the,collection,will,the,sinks,of,the,job,s,data,flow,param,job,name,the,name,to,display,for,the,job,param,default,parallelism,the,default,degree,of,parallelism,for,the,job;public,plan,collection,extends,generic,data,sink,base,sinks,string,job,name,int,default,parallelism,this,sinks,add,all,sinks,this,job,name,job,name,this,default,parallelism,default,parallelism
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName, int defaultParallelism);1424115592;Creates a new program plan with the given name and default parallelism, describing the data flow that ends_at the given data sinks._<p>_If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.__@param sinks The collection will the sinks of the job's data flow._@param jobName The name to display for the job._@param defaultParallelism The default degree of parallelism for the job.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName, int defaultParallelism) {_		this.sinks.addAll(sinks)__		this.jobName = jobName__		this.defaultParallelism = defaultParallelism__	};creates,a,new,program,plan,with,the,given,name,and,default,parallelism,describing,the,data,flow,that,ends,at,the,given,data,sinks,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,param,sinks,the,collection,will,the,sinks,of,the,job,s,data,flow,param,job,name,the,name,to,display,for,the,job,param,default,parallelism,the,default,degree,of,parallelism,for,the,job;public,plan,collection,extends,generic,data,sink,base,sinks,string,job,name,int,default,parallelism,this,sinks,add,all,sinks,this,job,name,job,name,this,default,parallelism,default,parallelism
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName, int defaultParallelism);1426843273;Creates a new program plan with the given name and default parallelism, describing the data flow that ends_at the given data sinks._<p>_If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.__@param sinks The collection will the sinks of the job's data flow._@param jobName The name to display for the job._@param defaultParallelism The default degree of parallelism for the job.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName, int defaultParallelism) {_		this.sinks.addAll(sinks)__		this.jobName = jobName__		this.defaultParallelism = defaultParallelism__	};creates,a,new,program,plan,with,the,given,name,and,default,parallelism,describing,the,data,flow,that,ends,at,the,given,data,sinks,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,param,sinks,the,collection,will,the,sinks,of,the,job,s,data,flow,param,job,name,the,name,to,display,for,the,job,param,default,parallelism,the,default,degree,of,parallelism,for,the,job;public,plan,collection,extends,generic,data,sink,base,sinks,string,job,name,int,default,parallelism,this,sinks,add,all,sinks,this,job,name,job,name,this,default,parallelism,default,parallelism
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName, int defaultParallelism);1427097830;Creates a new program plan with the given name and default parallelism, describing the data flow that ends_at the given data sinks._<p>_If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.__@param sinks The collection will the sinks of the job's data flow._@param jobName The name to display for the job._@param defaultParallelism The default parallelism for the job.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName, int defaultParallelism) {_		this.sinks.addAll(sinks)__		this.jobName = jobName__		this.defaultParallelism = defaultParallelism__	};creates,a,new,program,plan,with,the,given,name,and,default,parallelism,describing,the,data,flow,that,ends,at,the,given,data,sinks,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,param,sinks,the,collection,will,the,sinks,of,the,job,s,data,flow,param,job,name,the,name,to,display,for,the,job,param,default,parallelism,the,default,parallelism,for,the,job;public,plan,collection,extends,generic,data,sink,base,sinks,string,job,name,int,default,parallelism,this,sinks,add,all,sinks,this,job,name,job,name,this,default,parallelism,default,parallelism
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName, int defaultParallelism);1431703039;Creates a new program plan with the given name and default parallelism, describing the data flow that ends_at the given data sinks._<p>_If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.__@param sinks The collection will the sinks of the job's data flow._@param jobName The name to display for the job._@param defaultParallelism The default parallelism for the job.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName, int defaultParallelism) {_		this.sinks.addAll(sinks)__		this.jobName = jobName__		this.defaultParallelism = defaultParallelism__	};creates,a,new,program,plan,with,the,given,name,and,default,parallelism,describing,the,data,flow,that,ends,at,the,given,data,sinks,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,param,sinks,the,collection,will,the,sinks,of,the,job,s,data,flow,param,job,name,the,name,to,display,for,the,job,param,default,parallelism,the,default,parallelism,for,the,job;public,plan,collection,extends,generic,data,sink,base,sinks,string,job,name,int,default,parallelism,this,sinks,add,all,sinks,this,job,name,job,name,this,default,parallelism,default,parallelism
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName, int defaultParallelism);1442944546;Creates a new program plan with the given name and default parallelism, describing the data flow that ends_at the given data sinks._<p>_If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.__@param sinks The collection will the sinks of the job's data flow._@param jobName The name to display for the job._@param defaultParallelism The default parallelism for the job.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName, int defaultParallelism) {_		this.sinks.addAll(sinks)__		this.jobName = jobName__		this.defaultParallelism = defaultParallelism__	};creates,a,new,program,plan,with,the,given,name,and,default,parallelism,describing,the,data,flow,that,ends,at,the,given,data,sinks,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,param,sinks,the,collection,will,the,sinks,of,the,job,s,data,flow,param,job,name,the,name,to,display,for,the,job,param,default,parallelism,the,default,parallelism,for,the,job;public,plan,collection,extends,generic,data,sink,base,sinks,string,job,name,int,default,parallelism,this,sinks,add,all,sinks,this,job,name,job,name,this,default,parallelism,default,parallelism
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName, int defaultParallelism);1444215406;Creates a new program plan with the given name and default parallelism, describing the data flow that ends_at the given data sinks._<p>_If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.__@param sinks The collection will the sinks of the job's data flow._@param jobName The name to display for the job._@param defaultParallelism The default parallelism for the job.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName, int defaultParallelism) {_		this.sinks.addAll(sinks)__		this.jobName = jobName__		this.defaultParallelism = defaultParallelism__	};creates,a,new,program,plan,with,the,given,name,and,default,parallelism,describing,the,data,flow,that,ends,at,the,given,data,sinks,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,param,sinks,the,collection,will,the,sinks,of,the,job,s,data,flow,param,job,name,the,name,to,display,for,the,job,param,default,parallelism,the,default,parallelism,for,the,job;public,plan,collection,extends,generic,data,sink,base,sinks,string,job,name,int,default,parallelism,this,sinks,add,all,sinks,this,job,name,job,name,this,default,parallelism,default,parallelism
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName, int defaultParallelism);1449526184;Creates a new program plan with the given name and default parallelism, describing the data flow that ends_at the given data sinks._<p>_If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.__@param sinks The collection will the sinks of the job's data flow._@param jobName The name to display for the job._@param defaultParallelism The default parallelism for the job.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName, int defaultParallelism) {_		this.sinks.addAll(sinks)__		this.jobName = jobName__		this.defaultParallelism = defaultParallelism__	};creates,a,new,program,plan,with,the,given,name,and,default,parallelism,describing,the,data,flow,that,ends,at,the,given,data,sinks,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,param,sinks,the,collection,will,the,sinks,of,the,job,s,data,flow,param,job,name,the,name,to,display,for,the,job,param,default,parallelism,the,default,parallelism,for,the,job;public,plan,collection,extends,generic,data,sink,base,sinks,string,job,name,int,default,parallelism,this,sinks,add,all,sinks,this,job,name,job,name,this,default,parallelism,default,parallelism
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName, int defaultParallelism);1455479358;Creates a new program plan with the given name and default parallelism, describing the data flow that ends_at the given data sinks._<p>_If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.__@param sinks The collection will the sinks of the job's data flow._@param jobName The name to display for the job._@param defaultParallelism The default parallelism for the job.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName, int defaultParallelism) {_		this.sinks.addAll(sinks)__		this.jobName = jobName__		this.defaultParallelism = defaultParallelism__	};creates,a,new,program,plan,with,the,given,name,and,default,parallelism,describing,the,data,flow,that,ends,at,the,given,data,sinks,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,param,sinks,the,collection,will,the,sinks,of,the,job,s,data,flow,param,job,name,the,name,to,display,for,the,job,param,default,parallelism,the,default,parallelism,for,the,job;public,plan,collection,extends,generic,data,sink,base,sinks,string,job,name,int,default,parallelism,this,sinks,add,all,sinks,this,job,name,job,name,this,default,parallelism,default,parallelism
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName, int defaultParallelism);1455548285;Creates a new program plan with the given name and default parallelism, describing the data flow that ends_at the given data sinks._<p>_If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.__@param sinks The collection will the sinks of the job's data flow._@param jobName The name to display for the job._@param defaultParallelism The default parallelism for the job.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName, int defaultParallelism) {_		this.sinks.addAll(sinks)__		this.jobName = jobName__		this.defaultParallelism = defaultParallelism__	};creates,a,new,program,plan,with,the,given,name,and,default,parallelism,describing,the,data,flow,that,ends,at,the,given,data,sinks,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,param,sinks,the,collection,will,the,sinks,of,the,job,s,data,flow,param,job,name,the,name,to,display,for,the,job,param,default,parallelism,the,default,parallelism,for,the,job;public,plan,collection,extends,generic,data,sink,base,sinks,string,job,name,int,default,parallelism,this,sinks,add,all,sinks,this,job,name,job,name,this,default,parallelism,default,parallelism
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName, int defaultParallelism);1457737669;Creates a new program plan with the given name and default parallelism, describing the data flow that ends_at the given data sinks._<p>_If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.__@param sinks The collection will the sinks of the job's data flow._@param jobName The name to display for the job._@param defaultParallelism The default parallelism for the job.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName, int defaultParallelism) {_		this.sinks.addAll(sinks)__		this.jobName = jobName__		this.defaultParallelism = defaultParallelism__	};creates,a,new,program,plan,with,the,given,name,and,default,parallelism,describing,the,data,flow,that,ends,at,the,given,data,sinks,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,param,sinks,the,collection,will,the,sinks,of,the,job,s,data,flow,param,job,name,the,name,to,display,for,the,job,param,default,parallelism,the,default,parallelism,for,the,job;public,plan,collection,extends,generic,data,sink,base,sinks,string,job,name,int,default,parallelism,this,sinks,add,all,sinks,this,job,name,job,name,this,default,parallelism,default,parallelism
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName, int defaultParallelism);1460472696;Creates a new program plan with the given name and default parallelism, describing the data flow that ends_at the given data sinks._<p>_If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.__@param sinks The collection will the sinks of the job's data flow._@param jobName The name to display for the job._@param defaultParallelism The default parallelism for the job.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName, int defaultParallelism) {_		this.sinks.addAll(sinks)__		this.jobName = jobName__		this.defaultParallelism = defaultParallelism__	};creates,a,new,program,plan,with,the,given,name,and,default,parallelism,describing,the,data,flow,that,ends,at,the,given,data,sinks,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,param,sinks,the,collection,will,the,sinks,of,the,job,s,data,flow,param,job,name,the,name,to,display,for,the,job,param,default,parallelism,the,default,parallelism,for,the,job;public,plan,collection,extends,generic,data,sink,base,sinks,string,job,name,int,default,parallelism,this,sinks,add,all,sinks,this,job,name,job,name,this,default,parallelism,default,parallelism
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName, int defaultParallelism);1460563153;Creates a new program plan with the given name and default parallelism, describing the data flow that ends_at the given data sinks._<p>_If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.__@param sinks The collection will the sinks of the job's data flow._@param jobName The name to display for the job._@param defaultParallelism The default parallelism for the job.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName, int defaultParallelism) {_		this.sinks.addAll(sinks)__		this.jobName = jobName__		this.defaultParallelism = defaultParallelism__	};creates,a,new,program,plan,with,the,given,name,and,default,parallelism,describing,the,data,flow,that,ends,at,the,given,data,sinks,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,param,sinks,the,collection,will,the,sinks,of,the,job,s,data,flow,param,job,name,the,name,to,display,for,the,job,param,default,parallelism,the,default,parallelism,for,the,job;public,plan,collection,extends,generic,data,sink,base,sinks,string,job,name,int,default,parallelism,this,sinks,add,all,sinks,this,job,name,job,name,this,default,parallelism,default,parallelism
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName, int defaultParallelism);1460741894;Creates a new program plan with the given name and default parallelism, describing the data flow that ends_at the given data sinks._<p>_If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.__@param sinks The collection will the sinks of the job's data flow._@param jobName The name to display for the job._@param defaultParallelism The default parallelism for the job.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName, int defaultParallelism) {_		this.sinks.addAll(sinks)__		this.jobName = jobName__		this.defaultParallelism = defaultParallelism__	};creates,a,new,program,plan,with,the,given,name,and,default,parallelism,describing,the,data,flow,that,ends,at,the,given,data,sinks,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,param,sinks,the,collection,will,the,sinks,of,the,job,s,data,flow,param,job,name,the,name,to,display,for,the,job,param,default,parallelism,the,default,parallelism,for,the,job;public,plan,collection,extends,generic,data,sink,base,sinks,string,job,name,int,default,parallelism,this,sinks,add,all,sinks,this,job,name,job,name,this,default,parallelism,default,parallelism
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName, int defaultParallelism);1500974874;Creates a new program plan with the given name and default parallelism, describing the data flow that ends_at the given data sinks._<p>_If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.__@param sinks The collection will the sinks of the job's data flow._@param jobName The name to display for the job._@param defaultParallelism The default parallelism for the job.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName, int defaultParallelism) {_		this.sinks.addAll(sinks)__		this.jobName = jobName__		this.defaultParallelism = defaultParallelism__	};creates,a,new,program,plan,with,the,given,name,and,default,parallelism,describing,the,data,flow,that,ends,at,the,given,data,sinks,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,param,sinks,the,collection,will,the,sinks,of,the,job,s,data,flow,param,job,name,the,name,to,display,for,the,job,param,default,parallelism,the,default,parallelism,for,the,job;public,plan,collection,extends,generic,data,sink,base,sinks,string,job,name,int,default,parallelism,this,sinks,add,all,sinks,this,job,name,job,name,this,default,parallelism,default,parallelism
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName, int defaultParallelism);1529583969;Creates a new program plan with the given name and default parallelism, describing the data flow that ends_at the given data sinks._<p>_If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.__@param sinks The collection will the sinks of the job's data flow._@param jobName The name to display for the job._@param defaultParallelism The default parallelism for the job.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName, int defaultParallelism) {_		this.sinks.addAll(sinks)__		this.jobName = jobName__		this.defaultParallelism = defaultParallelism__	};creates,a,new,program,plan,with,the,given,name,and,default,parallelism,describing,the,data,flow,that,ends,at,the,given,data,sinks,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,param,sinks,the,collection,will,the,sinks,of,the,job,s,data,flow,param,job,name,the,name,to,display,for,the,job,param,default,parallelism,the,default,parallelism,for,the,job;public,plan,collection,extends,generic,data,sink,base,sinks,string,job,name,int,default,parallelism,this,sinks,add,all,sinks,this,job,name,job,name,this,default,parallelism,default,parallelism
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName, int defaultParallelism);1544793776;Creates a new program plan with the given name and default parallelism, describing the data flow that ends_at the given data sinks._<p>_If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.__@param sinks The collection will the sinks of the job's data flow._@param jobName The name to display for the job._@param defaultParallelism The default parallelism for the job.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName, int defaultParallelism) {_		this.sinks.addAll(sinks)__		this.jobName = jobName__		this.defaultParallelism = defaultParallelism__	};creates,a,new,program,plan,with,the,given,name,and,default,parallelism,describing,the,data,flow,that,ends,at,the,given,data,sinks,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,param,sinks,the,collection,will,the,sinks,of,the,job,s,data,flow,param,job,name,the,name,to,display,for,the,job,param,default,parallelism,the,default,parallelism,for,the,job;public,plan,collection,extends,generic,data,sink,base,sinks,string,job,name,int,default,parallelism,this,sinks,add,all,sinks,this,job,name,job,name,this,default,parallelism,default,parallelism
Plan -> public JobID getJobId();1442944546;Gets the ID of the job that the dataflow plan belongs to._If this ID is not set, then the dataflow represents its own_independent job.__@return The ID of the job that the dataflow plan belongs to.;public JobID getJobId() {_		return jobId__	};gets,the,id,of,the,job,that,the,dataflow,plan,belongs,to,if,this,id,is,not,set,then,the,dataflow,represents,its,own,independent,job,return,the,id,of,the,job,that,the,dataflow,plan,belongs,to;public,job,id,get,job,id,return,job,id
Plan -> public JobID getJobId();1444215406;Gets the ID of the job that the dataflow plan belongs to._If this ID is not set, then the dataflow represents its own_independent job.__@return The ID of the job that the dataflow plan belongs to.;public JobID getJobId() {_		return jobId__	};gets,the,id,of,the,job,that,the,dataflow,plan,belongs,to,if,this,id,is,not,set,then,the,dataflow,represents,its,own,independent,job,return,the,id,of,the,job,that,the,dataflow,plan,belongs,to;public,job,id,get,job,id,return,job,id
Plan -> public JobID getJobId();1449526184;Gets the ID of the job that the dataflow plan belongs to._If this ID is not set, then the dataflow represents its own_independent job.__@return The ID of the job that the dataflow plan belongs to.;public JobID getJobId() {_		return jobId__	};gets,the,id,of,the,job,that,the,dataflow,plan,belongs,to,if,this,id,is,not,set,then,the,dataflow,represents,its,own,independent,job,return,the,id,of,the,job,that,the,dataflow,plan,belongs,to;public,job,id,get,job,id,return,job,id
Plan -> public JobID getJobId();1455479358;Gets the ID of the job that the dataflow plan belongs to._If this ID is not set, then the dataflow represents its own_independent job.__@return The ID of the job that the dataflow plan belongs to.;public JobID getJobId() {_		return jobId__	};gets,the,id,of,the,job,that,the,dataflow,plan,belongs,to,if,this,id,is,not,set,then,the,dataflow,represents,its,own,independent,job,return,the,id,of,the,job,that,the,dataflow,plan,belongs,to;public,job,id,get,job,id,return,job,id
Plan -> public JobID getJobId();1455548285;Gets the ID of the job that the dataflow plan belongs to._If this ID is not set, then the dataflow represents its own_independent job.__@return The ID of the job that the dataflow plan belongs to.;public JobID getJobId() {_		return jobId__	};gets,the,id,of,the,job,that,the,dataflow,plan,belongs,to,if,this,id,is,not,set,then,the,dataflow,represents,its,own,independent,job,return,the,id,of,the,job,that,the,dataflow,plan,belongs,to;public,job,id,get,job,id,return,job,id
Plan -> public JobID getJobId();1457737669;Gets the ID of the job that the dataflow plan belongs to._If this ID is not set, then the dataflow represents its own_independent job.__@return The ID of the job that the dataflow plan belongs to.;public JobID getJobId() {_		return jobId__	};gets,the,id,of,the,job,that,the,dataflow,plan,belongs,to,if,this,id,is,not,set,then,the,dataflow,represents,its,own,independent,job,return,the,id,of,the,job,that,the,dataflow,plan,belongs,to;public,job,id,get,job,id,return,job,id
Plan -> public JobID getJobId();1460472696;Gets the ID of the job that the dataflow plan belongs to._If this ID is not set, then the dataflow represents its own_independent job.__@return The ID of the job that the dataflow plan belongs to.;public JobID getJobId() {_		return jobId__	};gets,the,id,of,the,job,that,the,dataflow,plan,belongs,to,if,this,id,is,not,set,then,the,dataflow,represents,its,own,independent,job,return,the,id,of,the,job,that,the,dataflow,plan,belongs,to;public,job,id,get,job,id,return,job,id
Plan -> public JobID getJobId();1460563153;Gets the ID of the job that the dataflow plan belongs to._If this ID is not set, then the dataflow represents its own_independent job.__@return The ID of the job that the dataflow plan belongs to.;public JobID getJobId() {_		return jobId__	};gets,the,id,of,the,job,that,the,dataflow,plan,belongs,to,if,this,id,is,not,set,then,the,dataflow,represents,its,own,independent,job,return,the,id,of,the,job,that,the,dataflow,plan,belongs,to;public,job,id,get,job,id,return,job,id
Plan -> public JobID getJobId();1460741894;Gets the ID of the job that the dataflow plan belongs to._If this ID is not set, then the dataflow represents its own_independent job.__@return The ID of the job that the dataflow plan belongs to.;public JobID getJobId() {_		return jobId__	};gets,the,id,of,the,job,that,the,dataflow,plan,belongs,to,if,this,id,is,not,set,then,the,dataflow,represents,its,own,independent,job,return,the,id,of,the,job,that,the,dataflow,plan,belongs,to;public,job,id,get,job,id,return,job,id
Plan -> public JobID getJobId();1500974874;Gets the ID of the job that the dataflow plan belongs to._If this ID is not set, then the dataflow represents its own_independent job.__@return The ID of the job that the dataflow plan belongs to.;public JobID getJobId() {_		return jobId__	};gets,the,id,of,the,job,that,the,dataflow,plan,belongs,to,if,this,id,is,not,set,then,the,dataflow,represents,its,own,independent,job,return,the,id,of,the,job,that,the,dataflow,plan,belongs,to;public,job,id,get,job,id,return,job,id
Plan -> public JobID getJobId();1529583969;Gets the ID of the job that the dataflow plan belongs to._If this ID is not set, then the dataflow represents its own_independent job.__@return The ID of the job that the dataflow plan belongs to.;public JobID getJobId() {_		return jobId__	};gets,the,id,of,the,job,that,the,dataflow,plan,belongs,to,if,this,id,is,not,set,then,the,dataflow,represents,its,own,independent,job,return,the,id,of,the,job,that,the,dataflow,plan,belongs,to;public,job,id,get,job,id,return,job,id
Plan -> public JobID getJobId();1544793776;Gets the ID of the job that the dataflow plan belongs to._If this ID is not set, then the dataflow represents its own_independent job.__@return The ID of the job that the dataflow plan belongs to.;public JobID getJobId() {_		return jobId__	};gets,the,id,of,the,job,that,the,dataflow,plan,belongs,to,if,this,id,is,not,set,then,the,dataflow,represents,its,own,independent,job,return,the,id,of,the,job,that,the,dataflow,plan,belongs,to;public,job,id,get,job,id,return,job,id
Plan -> public void setJobId(JobID jobId);1442944546;Sets the ID of the job that the dataflow plan belongs to._If this ID is set to {@code null}, then the dataflow represents its own_independent job.__@param jobId The ID of the job that the dataflow plan belongs to.;public void setJobId(JobID jobId) {_		this.jobId = jobId__	};sets,the,id,of,the,job,that,the,dataflow,plan,belongs,to,if,this,id,is,set,to,code,null,then,the,dataflow,represents,its,own,independent,job,param,job,id,the,id,of,the,job,that,the,dataflow,plan,belongs,to;public,void,set,job,id,job,id,job,id,this,job,id,job,id
Plan -> public void setJobId(JobID jobId);1444215406;Sets the ID of the job that the dataflow plan belongs to._If this ID is set to {@code null}, then the dataflow represents its own_independent job.__@param jobId The ID of the job that the dataflow plan belongs to.;public void setJobId(JobID jobId) {_		this.jobId = jobId__	};sets,the,id,of,the,job,that,the,dataflow,plan,belongs,to,if,this,id,is,set,to,code,null,then,the,dataflow,represents,its,own,independent,job,param,job,id,the,id,of,the,job,that,the,dataflow,plan,belongs,to;public,void,set,job,id,job,id,job,id,this,job,id,job,id
Plan -> public void setJobId(JobID jobId);1449526184;Sets the ID of the job that the dataflow plan belongs to._If this ID is set to {@code null}, then the dataflow represents its own_independent job.__@param jobId The ID of the job that the dataflow plan belongs to.;public void setJobId(JobID jobId) {_		this.jobId = jobId__	};sets,the,id,of,the,job,that,the,dataflow,plan,belongs,to,if,this,id,is,set,to,code,null,then,the,dataflow,represents,its,own,independent,job,param,job,id,the,id,of,the,job,that,the,dataflow,plan,belongs,to;public,void,set,job,id,job,id,job,id,this,job,id,job,id
Plan -> public void setJobId(JobID jobId);1455479358;Sets the ID of the job that the dataflow plan belongs to._If this ID is set to {@code null}, then the dataflow represents its own_independent job.__@param jobId The ID of the job that the dataflow plan belongs to.;public void setJobId(JobID jobId) {_		this.jobId = jobId__	};sets,the,id,of,the,job,that,the,dataflow,plan,belongs,to,if,this,id,is,set,to,code,null,then,the,dataflow,represents,its,own,independent,job,param,job,id,the,id,of,the,job,that,the,dataflow,plan,belongs,to;public,void,set,job,id,job,id,job,id,this,job,id,job,id
Plan -> public void setJobId(JobID jobId);1455548285;Sets the ID of the job that the dataflow plan belongs to._If this ID is set to {@code null}, then the dataflow represents its own_independent job.__@param jobId The ID of the job that the dataflow plan belongs to.;public void setJobId(JobID jobId) {_		this.jobId = jobId__	};sets,the,id,of,the,job,that,the,dataflow,plan,belongs,to,if,this,id,is,set,to,code,null,then,the,dataflow,represents,its,own,independent,job,param,job,id,the,id,of,the,job,that,the,dataflow,plan,belongs,to;public,void,set,job,id,job,id,job,id,this,job,id,job,id
Plan -> public void setJobId(JobID jobId);1457737669;Sets the ID of the job that the dataflow plan belongs to._If this ID is set to {@code null}, then the dataflow represents its own_independent job.__@param jobId The ID of the job that the dataflow plan belongs to.;public void setJobId(JobID jobId) {_		this.jobId = jobId__	};sets,the,id,of,the,job,that,the,dataflow,plan,belongs,to,if,this,id,is,set,to,code,null,then,the,dataflow,represents,its,own,independent,job,param,job,id,the,id,of,the,job,that,the,dataflow,plan,belongs,to;public,void,set,job,id,job,id,job,id,this,job,id,job,id
Plan -> public void setJobId(JobID jobId);1460472696;Sets the ID of the job that the dataflow plan belongs to._If this ID is set to {@code null}, then the dataflow represents its own_independent job.__@param jobId The ID of the job that the dataflow plan belongs to.;public void setJobId(JobID jobId) {_		this.jobId = jobId__	};sets,the,id,of,the,job,that,the,dataflow,plan,belongs,to,if,this,id,is,set,to,code,null,then,the,dataflow,represents,its,own,independent,job,param,job,id,the,id,of,the,job,that,the,dataflow,plan,belongs,to;public,void,set,job,id,job,id,job,id,this,job,id,job,id
Plan -> public void setJobId(JobID jobId);1460563153;Sets the ID of the job that the dataflow plan belongs to._If this ID is set to {@code null}, then the dataflow represents its own_independent job.__@param jobId The ID of the job that the dataflow plan belongs to.;public void setJobId(JobID jobId) {_		this.jobId = jobId__	};sets,the,id,of,the,job,that,the,dataflow,plan,belongs,to,if,this,id,is,set,to,code,null,then,the,dataflow,represents,its,own,independent,job,param,job,id,the,id,of,the,job,that,the,dataflow,plan,belongs,to;public,void,set,job,id,job,id,job,id,this,job,id,job,id
Plan -> public void setJobId(JobID jobId);1460741894;Sets the ID of the job that the dataflow plan belongs to._If this ID is set to {@code null}, then the dataflow represents its own_independent job.__@param jobId The ID of the job that the dataflow plan belongs to.;public void setJobId(JobID jobId) {_		this.jobId = jobId__	};sets,the,id,of,the,job,that,the,dataflow,plan,belongs,to,if,this,id,is,set,to,code,null,then,the,dataflow,represents,its,own,independent,job,param,job,id,the,id,of,the,job,that,the,dataflow,plan,belongs,to;public,void,set,job,id,job,id,job,id,this,job,id,job,id
Plan -> public void setJobId(JobID jobId);1500974874;Sets the ID of the job that the dataflow plan belongs to._If this ID is set to {@code null}, then the dataflow represents its own_independent job.__@param jobId The ID of the job that the dataflow plan belongs to.;public void setJobId(JobID jobId) {_		this.jobId = jobId__	};sets,the,id,of,the,job,that,the,dataflow,plan,belongs,to,if,this,id,is,set,to,code,null,then,the,dataflow,represents,its,own,independent,job,param,job,id,the,id,of,the,job,that,the,dataflow,plan,belongs,to;public,void,set,job,id,job,id,job,id,this,job,id,job,id
Plan -> public void setJobId(JobID jobId);1529583969;Sets the ID of the job that the dataflow plan belongs to._If this ID is set to {@code null}, then the dataflow represents its own_independent job.__@param jobId The ID of the job that the dataflow plan belongs to.;public void setJobId(JobID jobId) {_		this.jobId = jobId__	};sets,the,id,of,the,job,that,the,dataflow,plan,belongs,to,if,this,id,is,set,to,code,null,then,the,dataflow,represents,its,own,independent,job,param,job,id,the,id,of,the,job,that,the,dataflow,plan,belongs,to;public,void,set,job,id,job,id,job,id,this,job,id,job,id
Plan -> public void setJobId(JobID jobId);1544793776;Sets the ID of the job that the dataflow plan belongs to._If this ID is set to {@code null}, then the dataflow represents its own_independent job.__@param jobId The ID of the job that the dataflow plan belongs to.;public void setJobId(JobID jobId) {_		this.jobId = jobId__	};sets,the,id,of,the,job,that,the,dataflow,plan,belongs,to,if,this,id,is,set,to,code,null,then,the,dataflow,represents,its,own,independent,job,param,job,id,the,id,of,the,job,that,the,dataflow,plan,belongs,to;public,void,set,job,id,job,id,job,id,this,job,id,job,id
Plan -> public Set<Entry<String,DistributedCacheEntry>> getCachedFiles();1405024514;return the registered caches files_@return Set of (name, filePath) pairs;public Set<Entry<String,DistributedCacheEntry>> getCachedFiles() {_		return this.cacheFile.entrySet()__	};return,the,registered,caches,files,return,set,of,name,file,path,pairs;public,set,entry,string,distributed,cache,entry,get,cached,files,return,this,cache,file,entry,set
Plan -> public Set<Entry<String,DistributedCacheEntry>> getCachedFiles();1405090423;return the registered caches files_@return Set of (name, filePath) pairs;public Set<Entry<String,DistributedCacheEntry>> getCachedFiles() {_		return this.cacheFile.entrySet()__	};return,the,registered,caches,files,return,set,of,name,file,path,pairs;public,set,entry,string,distributed,cache,entry,get,cached,files,return,this,cache,file,entry,set
Plan -> public Set<Entry<String,DistributedCacheEntry>> getCachedFiles();1411473593;return the registered caches files_@return Set of (name, filePath) pairs;public Set<Entry<String,DistributedCacheEntry>> getCachedFiles() {_		return this.cacheFile.entrySet()__	};return,the,registered,caches,files,return,set,of,name,file,path,pairs;public,set,entry,string,distributed,cache,entry,get,cached,files,return,this,cache,file,entry,set
Plan -> public Set<Entry<String,DistributedCacheEntry>> getCachedFiles();1412346153;return the registered caches files_@return Set of (name, filePath) pairs;public Set<Entry<String,DistributedCacheEntry>> getCachedFiles() {_		return this.cacheFile.entrySet()__	};return,the,registered,caches,files,return,set,of,name,file,path,pairs;public,set,entry,string,distributed,cache,entry,get,cached,files,return,this,cache,file,entry,set
Plan -> public Set<Entry<String,DistributedCacheEntry>> getCachedFiles();1415027294;return the registered caches files_@return Set of (name, filePath) pairs;public Set<Entry<String,DistributedCacheEntry>> getCachedFiles() {_		return this.cacheFile.entrySet()__	};return,the,registered,caches,files,return,set,of,name,file,path,pairs;public,set,entry,string,distributed,cache,entry,get,cached,files,return,this,cache,file,entry,set
Plan -> public Set<Entry<String,DistributedCacheEntry>> getCachedFiles();1420654570;return the registered caches files_@return Set of (name, filePath) pairs;public Set<Entry<String,DistributedCacheEntry>> getCachedFiles() {_		return this.cacheFile.entrySet()__	};return,the,registered,caches,files,return,set,of,name,file,path,pairs;public,set,entry,string,distributed,cache,entry,get,cached,files,return,this,cache,file,entry,set
Plan -> public Set<Entry<String,DistributedCacheEntry>> getCachedFiles();1420663430;return the registered caches files_@return Set of (name, filePath) pairs;public Set<Entry<String,DistributedCacheEntry>> getCachedFiles() {_		return this.cacheFile.entrySet()__	};return,the,registered,caches,files,return,set,of,name,file,path,pairs;public,set,entry,string,distributed,cache,entry,get,cached,files,return,this,cache,file,entry,set
Plan -> public Set<Entry<String,DistributedCacheEntry>> getCachedFiles();1424115592;return the registered caches files_@return Set of (name, filePath) pairs;public Set<Entry<String,DistributedCacheEntry>> getCachedFiles() {_		return this.cacheFile.entrySet()__	};return,the,registered,caches,files,return,set,of,name,file,path,pairs;public,set,entry,string,distributed,cache,entry,get,cached,files,return,this,cache,file,entry,set
Plan -> public Set<Entry<String,DistributedCacheEntry>> getCachedFiles();1426843273;return the registered caches files_@return Set of (name, filePath) pairs;public Set<Entry<String,DistributedCacheEntry>> getCachedFiles() {_		return this.cacheFile.entrySet()__	};return,the,registered,caches,files,return,set,of,name,file,path,pairs;public,set,entry,string,distributed,cache,entry,get,cached,files,return,this,cache,file,entry,set
Plan -> public Set<Entry<String,DistributedCacheEntry>> getCachedFiles();1427097830;return the registered caches files_@return Set of (name, filePath) pairs;public Set<Entry<String,DistributedCacheEntry>> getCachedFiles() {_		return this.cacheFile.entrySet()__	};return,the,registered,caches,files,return,set,of,name,file,path,pairs;public,set,entry,string,distributed,cache,entry,get,cached,files,return,this,cache,file,entry,set
Plan -> public Set<Entry<String,DistributedCacheEntry>> getCachedFiles();1431703039;return the registered caches files_@return Set of (name, filePath) pairs;public Set<Entry<String,DistributedCacheEntry>> getCachedFiles() {_		return this.cacheFile.entrySet()__	};return,the,registered,caches,files,return,set,of,name,file,path,pairs;public,set,entry,string,distributed,cache,entry,get,cached,files,return,this,cache,file,entry,set
Plan -> public Set<Entry<String,DistributedCacheEntry>> getCachedFiles();1442944546;return the registered caches files_@return Set of (name, filePath) pairs;public Set<Entry<String,DistributedCacheEntry>> getCachedFiles() {_		return this.cacheFile.entrySet()__	};return,the,registered,caches,files,return,set,of,name,file,path,pairs;public,set,entry,string,distributed,cache,entry,get,cached,files,return,this,cache,file,entry,set
Plan -> public Set<Entry<String,DistributedCacheEntry>> getCachedFiles();1444215406;return the registered caches files_@return Set of (name, filePath) pairs;public Set<Entry<String,DistributedCacheEntry>> getCachedFiles() {_		return this.cacheFile.entrySet()__	};return,the,registered,caches,files,return,set,of,name,file,path,pairs;public,set,entry,string,distributed,cache,entry,get,cached,files,return,this,cache,file,entry,set
Plan -> public Set<Entry<String,DistributedCacheEntry>> getCachedFiles();1449526184;return the registered caches files_@return Set of (name, filePath) pairs;public Set<Entry<String,DistributedCacheEntry>> getCachedFiles() {_		return this.cacheFile.entrySet()__	};return,the,registered,caches,files,return,set,of,name,file,path,pairs;public,set,entry,string,distributed,cache,entry,get,cached,files,return,this,cache,file,entry,set
Plan -> public Set<Entry<String,DistributedCacheEntry>> getCachedFiles();1455479358;return the registered caches files_@return Set of (name, filePath) pairs;public Set<Entry<String,DistributedCacheEntry>> getCachedFiles() {_		return this.cacheFile.entrySet()__	};return,the,registered,caches,files,return,set,of,name,file,path,pairs;public,set,entry,string,distributed,cache,entry,get,cached,files,return,this,cache,file,entry,set
Plan -> public Set<Entry<String,DistributedCacheEntry>> getCachedFiles();1455548285;return the registered caches files_@return Set of (name, filePath) pairs;public Set<Entry<String,DistributedCacheEntry>> getCachedFiles() {_		return this.cacheFile.entrySet()__	};return,the,registered,caches,files,return,set,of,name,file,path,pairs;public,set,entry,string,distributed,cache,entry,get,cached,files,return,this,cache,file,entry,set
Plan -> public Set<Entry<String,DistributedCacheEntry>> getCachedFiles();1457737669;return the registered caches files_@return Set of (name, filePath) pairs;public Set<Entry<String,DistributedCacheEntry>> getCachedFiles() {_		return this.cacheFile.entrySet()__	};return,the,registered,caches,files,return,set,of,name,file,path,pairs;public,set,entry,string,distributed,cache,entry,get,cached,files,return,this,cache,file,entry,set
Plan -> public Set<Entry<String,DistributedCacheEntry>> getCachedFiles();1460472696;return the registered caches files_@return Set of (name, filePath) pairs;public Set<Entry<String,DistributedCacheEntry>> getCachedFiles() {_		return this.cacheFile.entrySet()__	};return,the,registered,caches,files,return,set,of,name,file,path,pairs;public,set,entry,string,distributed,cache,entry,get,cached,files,return,this,cache,file,entry,set
Plan -> public Set<Entry<String,DistributedCacheEntry>> getCachedFiles();1460563153;return the registered caches files_@return Set of (name, filePath) pairs;public Set<Entry<String,DistributedCacheEntry>> getCachedFiles() {_		return this.cacheFile.entrySet()__	};return,the,registered,caches,files,return,set,of,name,file,path,pairs;public,set,entry,string,distributed,cache,entry,get,cached,files,return,this,cache,file,entry,set
Plan -> public Set<Entry<String,DistributedCacheEntry>> getCachedFiles();1460741894;return the registered caches files_@return Set of (name, filePath) pairs;public Set<Entry<String,DistributedCacheEntry>> getCachedFiles() {_		return this.cacheFile.entrySet()__	};return,the,registered,caches,files,return,set,of,name,file,path,pairs;public,set,entry,string,distributed,cache,entry,get,cached,files,return,this,cache,file,entry,set
Plan -> public Set<Entry<String,DistributedCacheEntry>> getCachedFiles();1500974874;return the registered caches files_@return Set of (name, filePath) pairs;public Set<Entry<String,DistributedCacheEntry>> getCachedFiles() {_		return this.cacheFile.entrySet()__	};return,the,registered,caches,files,return,set,of,name,file,path,pairs;public,set,entry,string,distributed,cache,entry,get,cached,files,return,this,cache,file,entry,set
Plan -> public Set<Entry<String,DistributedCacheEntry>> getCachedFiles();1529583969;return the registered caches files_@return Set of (name, filePath) pairs;public Set<Entry<String,DistributedCacheEntry>> getCachedFiles() {_		return this.cacheFile.entrySet()__	};return,the,registered,caches,files,return,set,of,name,file,path,pairs;public,set,entry,string,distributed,cache,entry,get,cached,files,return,this,cache,file,entry,set
Plan -> public Set<Entry<String,DistributedCacheEntry>> getCachedFiles();1544793776;return the registered caches files_@return Set of (name, filePath) pairs;public Set<Entry<String,DistributedCacheEntry>> getCachedFiles() {_		return this.cacheFile.entrySet()__	};return,the,registered,caches,files,return,set,of,name,file,path,pairs;public,set,entry,string,distributed,cache,entry,get,cached,files,return,this,cache,file,entry,set
Plan -> public void registerCachedFile(String name, DistributedCacheEntry entry) throws IOException;1405024514;register cache files in program level_@param entry contains all relevant information_@param name user defined name of that file_@throws java.io.IOException;public void registerCachedFile(String name, DistributedCacheEntry entry) throws IOException {_		if (!this.cacheFile.containsKey(name)) {_			try {_				URI u = new URI(entry.filePath)__				if (!u.getPath().startsWith("/")) {_					u = new File(entry.filePath).toURI()__				}_				FileSystem fs = FileSystem.get(u)__				if (fs.exists(new Path(u.getPath()))) {_					this.cacheFile.put(name, new DistributedCacheEntry(u.toString(), entry.isExecutable))__				} else {_					throw new IOException("File " + u.toString() + " doesn't exist.")__				}_			} catch (URISyntaxException ex) {_				throw new IOException("Invalid path: " + entry.filePath, ex)__			}_		} else {_			throw new IOException("cache file " + name + "already exists!")__		}_	};register,cache,files,in,program,level,param,entry,contains,all,relevant,information,param,name,user,defined,name,of,that,file,throws,java,io,ioexception;public,void,register,cached,file,string,name,distributed,cache,entry,entry,throws,ioexception,if,this,cache,file,contains,key,name,try,uri,u,new,uri,entry,file,path,if,u,get,path,starts,with,u,new,file,entry,file,path,to,uri,file,system,fs,file,system,get,u,if,fs,exists,new,path,u,get,path,this,cache,file,put,name,new,distributed,cache,entry,u,to,string,entry,is,executable,else,throw,new,ioexception,file,u,to,string,doesn,t,exist,catch,urisyntax,exception,ex,throw,new,ioexception,invalid,path,entry,file,path,ex,else,throw,new,ioexception,cache,file,name,already,exists
Plan -> public void registerCachedFile(String name, DistributedCacheEntry entry) throws IOException;1405090423;register cache files in program level_@param entry contains all relevant information_@param name user defined name of that file_@throws java.io.IOException;public void registerCachedFile(String name, DistributedCacheEntry entry) throws IOException {_		if (!this.cacheFile.containsKey(name)) {_			try {_				URI u = new URI(entry.filePath)__				if (!u.getPath().startsWith("/")) {_					u = new File(entry.filePath).toURI()__				}_				FileSystem fs = FileSystem.get(u)__				if (fs.exists(new Path(u.getPath()))) {_					this.cacheFile.put(name, new DistributedCacheEntry(u.toString(), entry.isExecutable))__				} else {_					throw new IOException("File " + u.toString() + " doesn't exist.")__				}_			} catch (URISyntaxException ex) {_				throw new IOException("Invalid path: " + entry.filePath, ex)__			}_		} else {_			throw new IOException("cache file " + name + "already exists!")__		}_	};register,cache,files,in,program,level,param,entry,contains,all,relevant,information,param,name,user,defined,name,of,that,file,throws,java,io,ioexception;public,void,register,cached,file,string,name,distributed,cache,entry,entry,throws,ioexception,if,this,cache,file,contains,key,name,try,uri,u,new,uri,entry,file,path,if,u,get,path,starts,with,u,new,file,entry,file,path,to,uri,file,system,fs,file,system,get,u,if,fs,exists,new,path,u,get,path,this,cache,file,put,name,new,distributed,cache,entry,u,to,string,entry,is,executable,else,throw,new,ioexception,file,u,to,string,doesn,t,exist,catch,urisyntax,exception,ex,throw,new,ioexception,invalid,path,entry,file,path,ex,else,throw,new,ioexception,cache,file,name,already,exists
Plan -> public void registerCachedFile(String name, DistributedCacheEntry entry) throws IOException;1411473593;register cache files in program level_@param entry contains all relevant information_@param name user defined name of that file_@throws java.io.IOException;public void registerCachedFile(String name, DistributedCacheEntry entry) throws IOException {_		if (!this.cacheFile.containsKey(name)) {_			try {_				URI u = new URI(entry.filePath)__				if (!u.getPath().startsWith("/")) {_					u = new File(entry.filePath).toURI()__				}_				FileSystem fs = FileSystem.get(u)__				if (fs.exists(new Path(u.getPath()))) {_					this.cacheFile.put(name, new DistributedCacheEntry(u.toString(), entry.isExecutable))__				} else {_					throw new IOException("File " + u.toString() + " doesn't exist.")__				}_			} catch (URISyntaxException ex) {_				throw new IOException("Invalid path: " + entry.filePath, ex)__			}_		} else {_			throw new IOException("cache file " + name + "already exists!")__		}_	};register,cache,files,in,program,level,param,entry,contains,all,relevant,information,param,name,user,defined,name,of,that,file,throws,java,io,ioexception;public,void,register,cached,file,string,name,distributed,cache,entry,entry,throws,ioexception,if,this,cache,file,contains,key,name,try,uri,u,new,uri,entry,file,path,if,u,get,path,starts,with,u,new,file,entry,file,path,to,uri,file,system,fs,file,system,get,u,if,fs,exists,new,path,u,get,path,this,cache,file,put,name,new,distributed,cache,entry,u,to,string,entry,is,executable,else,throw,new,ioexception,file,u,to,string,doesn,t,exist,catch,urisyntax,exception,ex,throw,new,ioexception,invalid,path,entry,file,path,ex,else,throw,new,ioexception,cache,file,name,already,exists
Plan -> public void registerCachedFile(String name, DistributedCacheEntry entry) throws IOException;1412346153;register cache files in program level_@param entry contains all relevant information_@param name user defined name of that file_@throws java.io.IOException;public void registerCachedFile(String name, DistributedCacheEntry entry) throws IOException {_		if (!this.cacheFile.containsKey(name)) {_			try {_				URI u = new URI(entry.filePath)__				if (!u.getPath().startsWith("/")) {_					u = new File(entry.filePath).toURI()__				}_				FileSystem fs = FileSystem.get(u)__				if (fs.exists(new Path(u.getPath()))) {_					this.cacheFile.put(name, new DistributedCacheEntry(u.toString(), entry.isExecutable))__				} else {_					throw new IOException("File " + u.toString() + " doesn't exist.")__				}_			} catch (URISyntaxException ex) {_				throw new IOException("Invalid path: " + entry.filePath, ex)__			}_		} else {_			throw new IOException("cache file " + name + "already exists!")__		}_	};register,cache,files,in,program,level,param,entry,contains,all,relevant,information,param,name,user,defined,name,of,that,file,throws,java,io,ioexception;public,void,register,cached,file,string,name,distributed,cache,entry,entry,throws,ioexception,if,this,cache,file,contains,key,name,try,uri,u,new,uri,entry,file,path,if,u,get,path,starts,with,u,new,file,entry,file,path,to,uri,file,system,fs,file,system,get,u,if,fs,exists,new,path,u,get,path,this,cache,file,put,name,new,distributed,cache,entry,u,to,string,entry,is,executable,else,throw,new,ioexception,file,u,to,string,doesn,t,exist,catch,urisyntax,exception,ex,throw,new,ioexception,invalid,path,entry,file,path,ex,else,throw,new,ioexception,cache,file,name,already,exists
Plan -> public void registerCachedFile(String name, DistributedCacheEntry entry) throws IOException;1415027294;register cache files in program level_@param entry contains all relevant information_@param name user defined name of that file_@throws java.io.IOException;public void registerCachedFile(String name, DistributedCacheEntry entry) throws IOException {_		if (!this.cacheFile.containsKey(name)) {_			try {_				URI u = new URI(entry.filePath)__				if (!u.getPath().startsWith("/")) {_					u = new File(entry.filePath).toURI()__				}_				FileSystem fs = FileSystem.get(u)__				if (fs.exists(new Path(u.getPath()))) {_					this.cacheFile.put(name, new DistributedCacheEntry(u.toString(), entry.isExecutable))__				} else {_					throw new IOException("File " + u.toString() + " doesn't exist.")__				}_			} catch (URISyntaxException ex) {_				throw new IOException("Invalid path: " + entry.filePath, ex)__			}_		} else {_			throw new IOException("cache file " + name + "already exists!")__		}_	};register,cache,files,in,program,level,param,entry,contains,all,relevant,information,param,name,user,defined,name,of,that,file,throws,java,io,ioexception;public,void,register,cached,file,string,name,distributed,cache,entry,entry,throws,ioexception,if,this,cache,file,contains,key,name,try,uri,u,new,uri,entry,file,path,if,u,get,path,starts,with,u,new,file,entry,file,path,to,uri,file,system,fs,file,system,get,u,if,fs,exists,new,path,u,get,path,this,cache,file,put,name,new,distributed,cache,entry,u,to,string,entry,is,executable,else,throw,new,ioexception,file,u,to,string,doesn,t,exist,catch,urisyntax,exception,ex,throw,new,ioexception,invalid,path,entry,file,path,ex,else,throw,new,ioexception,cache,file,name,already,exists
Plan -> public void registerCachedFile(String name, DistributedCacheEntry entry) throws IOException;1420654570;register cache files in program level_@param entry contains all relevant information_@param name user defined name of that file_@throws java.io.IOException;public void registerCachedFile(String name, DistributedCacheEntry entry) throws IOException {_		if (!this.cacheFile.containsKey(name)) {_			try {_				URI u = new URI(entry.filePath)__				if (!u.getPath().startsWith("/")) {_					u = new File(entry.filePath).toURI()__				}_				FileSystem fs = FileSystem.get(u)__				if (fs.exists(new Path(u.getPath()))) {_					this.cacheFile.put(name, new DistributedCacheEntry(u.toString(), entry.isExecutable))__				} else {_					throw new IOException("File " + u.toString() + " doesn't exist.")__				}_			} catch (URISyntaxException ex) {_				throw new IOException("Invalid path: " + entry.filePath, ex)__			}_		} else {_			throw new IOException("cache file " + name + "already exists!")__		}_	};register,cache,files,in,program,level,param,entry,contains,all,relevant,information,param,name,user,defined,name,of,that,file,throws,java,io,ioexception;public,void,register,cached,file,string,name,distributed,cache,entry,entry,throws,ioexception,if,this,cache,file,contains,key,name,try,uri,u,new,uri,entry,file,path,if,u,get,path,starts,with,u,new,file,entry,file,path,to,uri,file,system,fs,file,system,get,u,if,fs,exists,new,path,u,get,path,this,cache,file,put,name,new,distributed,cache,entry,u,to,string,entry,is,executable,else,throw,new,ioexception,file,u,to,string,doesn,t,exist,catch,urisyntax,exception,ex,throw,new,ioexception,invalid,path,entry,file,path,ex,else,throw,new,ioexception,cache,file,name,already,exists
Plan -> public void registerCachedFile(String name, DistributedCacheEntry entry) throws IOException;1420663430;register cache files in program level_@param entry contains all relevant information_@param name user defined name of that file_@throws java.io.IOException;public void registerCachedFile(String name, DistributedCacheEntry entry) throws IOException {_		if (!this.cacheFile.containsKey(name)) {_			try {_				URI u = new URI(entry.filePath)__				if (!u.getPath().startsWith("/")) {_					u = new File(entry.filePath).toURI()__				}_				FileSystem fs = FileSystem.get(u)__				if (fs.exists(new Path(u.getPath()))) {_					this.cacheFile.put(name, new DistributedCacheEntry(u.toString(), entry.isExecutable))__				} else {_					throw new IOException("File " + u.toString() + " doesn't exist.")__				}_			} catch (URISyntaxException ex) {_				throw new IOException("Invalid path: " + entry.filePath, ex)__			}_		} else {_			throw new IOException("cache file " + name + "already exists!")__		}_	};register,cache,files,in,program,level,param,entry,contains,all,relevant,information,param,name,user,defined,name,of,that,file,throws,java,io,ioexception;public,void,register,cached,file,string,name,distributed,cache,entry,entry,throws,ioexception,if,this,cache,file,contains,key,name,try,uri,u,new,uri,entry,file,path,if,u,get,path,starts,with,u,new,file,entry,file,path,to,uri,file,system,fs,file,system,get,u,if,fs,exists,new,path,u,get,path,this,cache,file,put,name,new,distributed,cache,entry,u,to,string,entry,is,executable,else,throw,new,ioexception,file,u,to,string,doesn,t,exist,catch,urisyntax,exception,ex,throw,new,ioexception,invalid,path,entry,file,path,ex,else,throw,new,ioexception,cache,file,name,already,exists
Plan -> public void registerCachedFile(String name, DistributedCacheEntry entry) throws IOException;1424115592;register cache files in program level_@param entry contains all relevant information_@param name user defined name of that file_@throws java.io.IOException;public void registerCachedFile(String name, DistributedCacheEntry entry) throws IOException {_		if (!this.cacheFile.containsKey(name)) {_			try {_				URI u = new URI(entry.filePath)__				if (!u.getPath().startsWith("/")) {_					u = new File(entry.filePath).toURI()__				}_				FileSystem fs = FileSystem.get(u)__				if (fs.exists(new Path(u.getPath()))) {_					this.cacheFile.put(name, new DistributedCacheEntry(u.toString(), entry.isExecutable))__				} else {_					throw new IOException("File " + u.toString() + " doesn't exist.")__				}_			} catch (URISyntaxException ex) {_				throw new IOException("Invalid path: " + entry.filePath, ex)__			}_		} else {_			throw new IOException("cache file " + name + "already exists!")__		}_	};register,cache,files,in,program,level,param,entry,contains,all,relevant,information,param,name,user,defined,name,of,that,file,throws,java,io,ioexception;public,void,register,cached,file,string,name,distributed,cache,entry,entry,throws,ioexception,if,this,cache,file,contains,key,name,try,uri,u,new,uri,entry,file,path,if,u,get,path,starts,with,u,new,file,entry,file,path,to,uri,file,system,fs,file,system,get,u,if,fs,exists,new,path,u,get,path,this,cache,file,put,name,new,distributed,cache,entry,u,to,string,entry,is,executable,else,throw,new,ioexception,file,u,to,string,doesn,t,exist,catch,urisyntax,exception,ex,throw,new,ioexception,invalid,path,entry,file,path,ex,else,throw,new,ioexception,cache,file,name,already,exists
Plan -> public void registerCachedFile(String name, DistributedCacheEntry entry) throws IOException;1426843273;register cache files in program level_@param entry contains all relevant information_@param name user defined name of that file_@throws java.io.IOException;public void registerCachedFile(String name, DistributedCacheEntry entry) throws IOException {_		if (!this.cacheFile.containsKey(name)) {_			try {_				URI u = new URI(entry.filePath)__				if (!u.getPath().startsWith("/")) {_					u = new File(entry.filePath).toURI()__				}_				FileSystem fs = FileSystem.get(u)__				if (fs.exists(new Path(u.getPath()))) {_					this.cacheFile.put(name, new DistributedCacheEntry(u.toString(), entry.isExecutable))__				} else {_					throw new IOException("File " + u.toString() + " doesn't exist.")__				}_			} catch (URISyntaxException ex) {_				throw new IOException("Invalid path: " + entry.filePath, ex)__			}_		} else {_			throw new IOException("cache file " + name + "already exists!")__		}_	};register,cache,files,in,program,level,param,entry,contains,all,relevant,information,param,name,user,defined,name,of,that,file,throws,java,io,ioexception;public,void,register,cached,file,string,name,distributed,cache,entry,entry,throws,ioexception,if,this,cache,file,contains,key,name,try,uri,u,new,uri,entry,file,path,if,u,get,path,starts,with,u,new,file,entry,file,path,to,uri,file,system,fs,file,system,get,u,if,fs,exists,new,path,u,get,path,this,cache,file,put,name,new,distributed,cache,entry,u,to,string,entry,is,executable,else,throw,new,ioexception,file,u,to,string,doesn,t,exist,catch,urisyntax,exception,ex,throw,new,ioexception,invalid,path,entry,file,path,ex,else,throw,new,ioexception,cache,file,name,already,exists
Plan -> public void registerCachedFile(String name, DistributedCacheEntry entry) throws IOException;1427097830;register cache files in program level_@param entry contains all relevant information_@param name user defined name of that file_@throws java.io.IOException;public void registerCachedFile(String name, DistributedCacheEntry entry) throws IOException {_		if (!this.cacheFile.containsKey(name)) {_			try {_				URI u = new URI(entry.filePath)__				if (!u.getPath().startsWith("/")) {_					u = new File(entry.filePath).toURI()__				}_				FileSystem fs = FileSystem.get(u)__				if (fs.exists(new Path(u.getPath()))) {_					this.cacheFile.put(name, new DistributedCacheEntry(u.toString(), entry.isExecutable))__				} else {_					throw new IOException("File " + u.toString() + " doesn't exist.")__				}_			} catch (URISyntaxException ex) {_				throw new IOException("Invalid path: " + entry.filePath, ex)__			}_		} else {_			throw new IOException("cache file " + name + "already exists!")__		}_	};register,cache,files,in,program,level,param,entry,contains,all,relevant,information,param,name,user,defined,name,of,that,file,throws,java,io,ioexception;public,void,register,cached,file,string,name,distributed,cache,entry,entry,throws,ioexception,if,this,cache,file,contains,key,name,try,uri,u,new,uri,entry,file,path,if,u,get,path,starts,with,u,new,file,entry,file,path,to,uri,file,system,fs,file,system,get,u,if,fs,exists,new,path,u,get,path,this,cache,file,put,name,new,distributed,cache,entry,u,to,string,entry,is,executable,else,throw,new,ioexception,file,u,to,string,doesn,t,exist,catch,urisyntax,exception,ex,throw,new,ioexception,invalid,path,entry,file,path,ex,else,throw,new,ioexception,cache,file,name,already,exists
Plan -> public void registerCachedFile(String name, DistributedCacheEntry entry) throws IOException;1431703039;register cache files in program level_@param entry contains all relevant information_@param name user defined name of that file_@throws java.io.IOException;public void registerCachedFile(String name, DistributedCacheEntry entry) throws IOException {_		if (!this.cacheFile.containsKey(name)) {_			try {_				URI u = new URI(entry.filePath)__				if (!u.getPath().startsWith("/")) {_					u = new File(entry.filePath).toURI()__				}_				FileSystem fs = FileSystem.get(u)__				if (fs.exists(new Path(u.getPath()))) {_					this.cacheFile.put(name, new DistributedCacheEntry(u.toString(), entry.isExecutable))__				} else {_					throw new IOException("File " + u.toString() + " doesn't exist.")__				}_			} catch (URISyntaxException ex) {_				throw new IOException("Invalid path: " + entry.filePath, ex)__			}_		} else {_			throw new IOException("cache file " + name + "already exists!")__		}_	};register,cache,files,in,program,level,param,entry,contains,all,relevant,information,param,name,user,defined,name,of,that,file,throws,java,io,ioexception;public,void,register,cached,file,string,name,distributed,cache,entry,entry,throws,ioexception,if,this,cache,file,contains,key,name,try,uri,u,new,uri,entry,file,path,if,u,get,path,starts,with,u,new,file,entry,file,path,to,uri,file,system,fs,file,system,get,u,if,fs,exists,new,path,u,get,path,this,cache,file,put,name,new,distributed,cache,entry,u,to,string,entry,is,executable,else,throw,new,ioexception,file,u,to,string,doesn,t,exist,catch,urisyntax,exception,ex,throw,new,ioexception,invalid,path,entry,file,path,ex,else,throw,new,ioexception,cache,file,name,already,exists
Plan -> public void registerCachedFile(String name, DistributedCacheEntry entry) throws IOException;1442944546;register cache files in program level_@param entry contains all relevant information_@param name user defined name of that file_@throws java.io.IOException;public void registerCachedFile(String name, DistributedCacheEntry entry) throws IOException {_		if (!this.cacheFile.containsKey(name)) {_			try {_				URI u = new URI(entry.filePath)__				if (!u.getPath().startsWith("/")) {_					u = new File(entry.filePath).toURI()__				}_				FileSystem fs = FileSystem.get(u)__				if (fs.exists(new Path(u.getPath()))) {_					this.cacheFile.put(name, new DistributedCacheEntry(u.toString(), entry.isExecutable))__				} else {_					throw new IOException("File " + u.toString() + " doesn't exist.")__				}_			} catch (URISyntaxException ex) {_				throw new IOException("Invalid path: " + entry.filePath, ex)__			}_		} else {_			throw new IOException("cache file " + name + "already exists!")__		}_	};register,cache,files,in,program,level,param,entry,contains,all,relevant,information,param,name,user,defined,name,of,that,file,throws,java,io,ioexception;public,void,register,cached,file,string,name,distributed,cache,entry,entry,throws,ioexception,if,this,cache,file,contains,key,name,try,uri,u,new,uri,entry,file,path,if,u,get,path,starts,with,u,new,file,entry,file,path,to,uri,file,system,fs,file,system,get,u,if,fs,exists,new,path,u,get,path,this,cache,file,put,name,new,distributed,cache,entry,u,to,string,entry,is,executable,else,throw,new,ioexception,file,u,to,string,doesn,t,exist,catch,urisyntax,exception,ex,throw,new,ioexception,invalid,path,entry,file,path,ex,else,throw,new,ioexception,cache,file,name,already,exists
Plan -> public void registerCachedFile(String name, DistributedCacheEntry entry) throws IOException;1444215406;register cache files in program level_@param entry contains all relevant information_@param name user defined name of that file_@throws java.io.IOException;public void registerCachedFile(String name, DistributedCacheEntry entry) throws IOException {_		if (!this.cacheFile.containsKey(name)) {_			try {_				URI u = new URI(entry.filePath)__				if (!u.getPath().startsWith("/")) {_					u = new File(entry.filePath).toURI()__				}_				FileSystem fs = FileSystem.get(u)__				if (fs.exists(new Path(u.getPath()))) {_					this.cacheFile.put(name, new DistributedCacheEntry(u.toString(), entry.isExecutable))__				} else {_					throw new IOException("File " + u.toString() + " doesn't exist.")__				}_			} catch (URISyntaxException ex) {_				throw new IOException("Invalid path: " + entry.filePath, ex)__			}_		} else {_			throw new IOException("cache file " + name + "already exists!")__		}_	};register,cache,files,in,program,level,param,entry,contains,all,relevant,information,param,name,user,defined,name,of,that,file,throws,java,io,ioexception;public,void,register,cached,file,string,name,distributed,cache,entry,entry,throws,ioexception,if,this,cache,file,contains,key,name,try,uri,u,new,uri,entry,file,path,if,u,get,path,starts,with,u,new,file,entry,file,path,to,uri,file,system,fs,file,system,get,u,if,fs,exists,new,path,u,get,path,this,cache,file,put,name,new,distributed,cache,entry,u,to,string,entry,is,executable,else,throw,new,ioexception,file,u,to,string,doesn,t,exist,catch,urisyntax,exception,ex,throw,new,ioexception,invalid,path,entry,file,path,ex,else,throw,new,ioexception,cache,file,name,already,exists
Plan -> public void registerCachedFile(String name, DistributedCacheEntry entry) throws IOException;1449526184;register cache files in program level_@param entry contains all relevant information_@param name user defined name of that file_@throws java.io.IOException;public void registerCachedFile(String name, DistributedCacheEntry entry) throws IOException {_		if (!this.cacheFile.containsKey(name)) {_			try {_				URI u = new URI(entry.filePath)__				if (!u.getPath().startsWith("/")) {_					u = new File(entry.filePath).toURI()__				}_				FileSystem fs = FileSystem.get(u)__				if (fs.exists(new Path(u.getPath()))) {_					this.cacheFile.put(name, new DistributedCacheEntry(u.toString(), entry.isExecutable))__				} else {_					throw new IOException("File " + u.toString() + " doesn't exist.")__				}_			} catch (URISyntaxException ex) {_				throw new IOException("Invalid path: " + entry.filePath, ex)__			}_		} else {_			throw new IOException("cache file " + name + "already exists!")__		}_	};register,cache,files,in,program,level,param,entry,contains,all,relevant,information,param,name,user,defined,name,of,that,file,throws,java,io,ioexception;public,void,register,cached,file,string,name,distributed,cache,entry,entry,throws,ioexception,if,this,cache,file,contains,key,name,try,uri,u,new,uri,entry,file,path,if,u,get,path,starts,with,u,new,file,entry,file,path,to,uri,file,system,fs,file,system,get,u,if,fs,exists,new,path,u,get,path,this,cache,file,put,name,new,distributed,cache,entry,u,to,string,entry,is,executable,else,throw,new,ioexception,file,u,to,string,doesn,t,exist,catch,urisyntax,exception,ex,throw,new,ioexception,invalid,path,entry,file,path,ex,else,throw,new,ioexception,cache,file,name,already,exists
Plan -> public void registerCachedFile(String name, DistributedCacheEntry entry) throws IOException;1455479358;register cache files in program level_@param entry contains all relevant information_@param name user defined name of that file_@throws java.io.IOException;public void registerCachedFile(String name, DistributedCacheEntry entry) throws IOException {_		if (!this.cacheFile.containsKey(name)) {_			try {_				URI u = new URI(entry.filePath)__				if (!u.getPath().startsWith("/")) {_					u = new File(entry.filePath).toURI()__				}_				FileSystem fs = FileSystem.get(u)__				if (fs.exists(new Path(u.getPath()))) {_					this.cacheFile.put(name, new DistributedCacheEntry(u.toString(), entry.isExecutable))__				} else {_					throw new IOException("File " + u.toString() + " doesn't exist.")__				}_			} catch (URISyntaxException ex) {_				throw new IOException("Invalid path: " + entry.filePath, ex)__			}_		} else {_			throw new IOException("cache file " + name + "already exists!")__		}_	};register,cache,files,in,program,level,param,entry,contains,all,relevant,information,param,name,user,defined,name,of,that,file,throws,java,io,ioexception;public,void,register,cached,file,string,name,distributed,cache,entry,entry,throws,ioexception,if,this,cache,file,contains,key,name,try,uri,u,new,uri,entry,file,path,if,u,get,path,starts,with,u,new,file,entry,file,path,to,uri,file,system,fs,file,system,get,u,if,fs,exists,new,path,u,get,path,this,cache,file,put,name,new,distributed,cache,entry,u,to,string,entry,is,executable,else,throw,new,ioexception,file,u,to,string,doesn,t,exist,catch,urisyntax,exception,ex,throw,new,ioexception,invalid,path,entry,file,path,ex,else,throw,new,ioexception,cache,file,name,already,exists
Plan -> public void registerCachedFile(String name, DistributedCacheEntry entry) throws IOException;1455548285;register cache files in program level_@param entry contains all relevant information_@param name user defined name of that file_@throws java.io.IOException;public void registerCachedFile(String name, DistributedCacheEntry entry) throws IOException {_		if (!this.cacheFile.containsKey(name)) {_			try {_				URI u = new URI(entry.filePath)__				if (!u.getPath().startsWith("/")) {_					u = new File(entry.filePath).toURI()__				}_				FileSystem fs = FileSystem.get(u)__				if (fs.exists(new Path(u.getPath()))) {_					this.cacheFile.put(name, new DistributedCacheEntry(u.toString(), entry.isExecutable))__				} else {_					throw new IOException("File " + u.toString() + " doesn't exist.")__				}_			} catch (URISyntaxException ex) {_				throw new IOException("Invalid path: " + entry.filePath, ex)__			}_		} else {_			throw new IOException("cache file " + name + "already exists!")__		}_	};register,cache,files,in,program,level,param,entry,contains,all,relevant,information,param,name,user,defined,name,of,that,file,throws,java,io,ioexception;public,void,register,cached,file,string,name,distributed,cache,entry,entry,throws,ioexception,if,this,cache,file,contains,key,name,try,uri,u,new,uri,entry,file,path,if,u,get,path,starts,with,u,new,file,entry,file,path,to,uri,file,system,fs,file,system,get,u,if,fs,exists,new,path,u,get,path,this,cache,file,put,name,new,distributed,cache,entry,u,to,string,entry,is,executable,else,throw,new,ioexception,file,u,to,string,doesn,t,exist,catch,urisyntax,exception,ex,throw,new,ioexception,invalid,path,entry,file,path,ex,else,throw,new,ioexception,cache,file,name,already,exists
Plan -> public void registerCachedFile(String name, DistributedCacheEntry entry) throws IOException;1457737669;register cache files in program level_@param entry contains all relevant information_@param name user defined name of that file_@throws java.io.IOException;public void registerCachedFile(String name, DistributedCacheEntry entry) throws IOException {_		if (!this.cacheFile.containsKey(name)) {_			try {_				URI u = new URI(entry.filePath)__				if (!u.getPath().startsWith("/")) {_					u = new File(entry.filePath).toURI()__				}_				FileSystem fs = FileSystem.get(u)__				if (fs.exists(new Path(u.getPath()))) {_					this.cacheFile.put(name, new DistributedCacheEntry(u.toString(), entry.isExecutable))__				} else {_					throw new IOException("File " + u.toString() + " doesn't exist.")__				}_			} catch (URISyntaxException ex) {_				throw new IOException("Invalid path: " + entry.filePath, ex)__			}_		} else {_			throw new IOException("cache file " + name + "already exists!")__		}_	};register,cache,files,in,program,level,param,entry,contains,all,relevant,information,param,name,user,defined,name,of,that,file,throws,java,io,ioexception;public,void,register,cached,file,string,name,distributed,cache,entry,entry,throws,ioexception,if,this,cache,file,contains,key,name,try,uri,u,new,uri,entry,file,path,if,u,get,path,starts,with,u,new,file,entry,file,path,to,uri,file,system,fs,file,system,get,u,if,fs,exists,new,path,u,get,path,this,cache,file,put,name,new,distributed,cache,entry,u,to,string,entry,is,executable,else,throw,new,ioexception,file,u,to,string,doesn,t,exist,catch,urisyntax,exception,ex,throw,new,ioexception,invalid,path,entry,file,path,ex,else,throw,new,ioexception,cache,file,name,already,exists
Plan -> public void registerCachedFile(String name, DistributedCacheEntry entry) throws IOException;1460472696;register cache files in program level_@param entry contains all relevant information_@param name user defined name of that file_@throws java.io.IOException;public void registerCachedFile(String name, DistributedCacheEntry entry) throws IOException {_		if (!this.cacheFile.containsKey(name)) {_			try {_				URI u = new URI(entry.filePath)__				if (!u.getPath().startsWith("/")) {_					u = new File(entry.filePath).toURI()__				}_				FileSystem fs = FileSystem.get(u)__				if (fs.exists(new Path(u.getPath()))) {_					this.cacheFile.put(name, new DistributedCacheEntry(u.toString(), entry.isExecutable))__				} else {_					throw new IOException("File " + u.toString() + " doesn't exist.")__				}_			} catch (URISyntaxException ex) {_				throw new IOException("Invalid path: " + entry.filePath, ex)__			}_		} else {_			throw new IOException("cache file " + name + "already exists!")__		}_	};register,cache,files,in,program,level,param,entry,contains,all,relevant,information,param,name,user,defined,name,of,that,file,throws,java,io,ioexception;public,void,register,cached,file,string,name,distributed,cache,entry,entry,throws,ioexception,if,this,cache,file,contains,key,name,try,uri,u,new,uri,entry,file,path,if,u,get,path,starts,with,u,new,file,entry,file,path,to,uri,file,system,fs,file,system,get,u,if,fs,exists,new,path,u,get,path,this,cache,file,put,name,new,distributed,cache,entry,u,to,string,entry,is,executable,else,throw,new,ioexception,file,u,to,string,doesn,t,exist,catch,urisyntax,exception,ex,throw,new,ioexception,invalid,path,entry,file,path,ex,else,throw,new,ioexception,cache,file,name,already,exists
Plan -> public void registerCachedFile(String name, DistributedCacheEntry entry) throws IOException;1460563153;register cache files in program level_@param entry contains all relevant information_@param name user defined name of that file_@throws java.io.IOException;public void registerCachedFile(String name, DistributedCacheEntry entry) throws IOException {_		if (!this.cacheFile.containsKey(name)) {_			try {_				URI u = new URI(entry.filePath)__				if (!u.getPath().startsWith("/")) {_					u = new File(entry.filePath).toURI()__				}_				FileSystem fs = FileSystem.get(u)__				if (fs.exists(new Path(u.getPath()))) {_					this.cacheFile.put(name, new DistributedCacheEntry(u.toString(), entry.isExecutable))__				} else {_					throw new IOException("File " + u.toString() + " doesn't exist.")__				}_			} catch (URISyntaxException ex) {_				throw new IOException("Invalid path: " + entry.filePath, ex)__			}_		} else {_			throw new IOException("cache file " + name + "already exists!")__		}_	};register,cache,files,in,program,level,param,entry,contains,all,relevant,information,param,name,user,defined,name,of,that,file,throws,java,io,ioexception;public,void,register,cached,file,string,name,distributed,cache,entry,entry,throws,ioexception,if,this,cache,file,contains,key,name,try,uri,u,new,uri,entry,file,path,if,u,get,path,starts,with,u,new,file,entry,file,path,to,uri,file,system,fs,file,system,get,u,if,fs,exists,new,path,u,get,path,this,cache,file,put,name,new,distributed,cache,entry,u,to,string,entry,is,executable,else,throw,new,ioexception,file,u,to,string,doesn,t,exist,catch,urisyntax,exception,ex,throw,new,ioexception,invalid,path,entry,file,path,ex,else,throw,new,ioexception,cache,file,name,already,exists
Plan -> public void registerCachedFile(String name, DistributedCacheEntry entry) throws IOException;1460741894;register cache files in program level_@param entry contains all relevant information_@param name user defined name of that file_@throws java.io.IOException;public void registerCachedFile(String name, DistributedCacheEntry entry) throws IOException {_		if (!this.cacheFile.containsKey(name)) {_			try {_				URI u = new URI(entry.filePath)__				if (!u.getPath().startsWith("/")) {_					u = new File(entry.filePath).toURI()__				}_				FileSystem fs = FileSystem.get(u)__				if (fs.exists(new Path(u.getPath()))) {_					this.cacheFile.put(name, new DistributedCacheEntry(u.toString(), entry.isExecutable))__				} else {_					throw new IOException("File " + u.toString() + " doesn't exist.")__				}_			} catch (URISyntaxException ex) {_				throw new IOException("Invalid path: " + entry.filePath, ex)__			}_		} else {_			throw new IOException("cache file " + name + "already exists!")__		}_	};register,cache,files,in,program,level,param,entry,contains,all,relevant,information,param,name,user,defined,name,of,that,file,throws,java,io,ioexception;public,void,register,cached,file,string,name,distributed,cache,entry,entry,throws,ioexception,if,this,cache,file,contains,key,name,try,uri,u,new,uri,entry,file,path,if,u,get,path,starts,with,u,new,file,entry,file,path,to,uri,file,system,fs,file,system,get,u,if,fs,exists,new,path,u,get,path,this,cache,file,put,name,new,distributed,cache,entry,u,to,string,entry,is,executable,else,throw,new,ioexception,file,u,to,string,doesn,t,exist,catch,urisyntax,exception,ex,throw,new,ioexception,invalid,path,entry,file,path,ex,else,throw,new,ioexception,cache,file,name,already,exists
Plan -> public void registerCachedFile(String name, DistributedCacheEntry entry) throws IOException;1500974874;register cache files in program level_@param entry contains all relevant information_@param name user defined name of that file_@throws java.io.IOException;public void registerCachedFile(String name, DistributedCacheEntry entry) throws IOException {_		if (!this.cacheFile.containsKey(name)) {_			try {_				URI u = new URI(entry.filePath)__				if (!u.getPath().startsWith("/")) {_					u = new File(entry.filePath).toURI()__				}_				FileSystem fs = FileSystem.get(u)__				if (fs.exists(new Path(u.getPath()))) {_					this.cacheFile.put(name, new DistributedCacheEntry(u.toString(), entry.isExecutable))__				} else {_					throw new IOException("File " + u.toString() + " doesn't exist.")__				}_			} catch (URISyntaxException ex) {_				throw new IOException("Invalid path: " + entry.filePath, ex)__			}_		} else {_			throw new IOException("cache file " + name + "already exists!")__		}_	};register,cache,files,in,program,level,param,entry,contains,all,relevant,information,param,name,user,defined,name,of,that,file,throws,java,io,ioexception;public,void,register,cached,file,string,name,distributed,cache,entry,entry,throws,ioexception,if,this,cache,file,contains,key,name,try,uri,u,new,uri,entry,file,path,if,u,get,path,starts,with,u,new,file,entry,file,path,to,uri,file,system,fs,file,system,get,u,if,fs,exists,new,path,u,get,path,this,cache,file,put,name,new,distributed,cache,entry,u,to,string,entry,is,executable,else,throw,new,ioexception,file,u,to,string,doesn,t,exist,catch,urisyntax,exception,ex,throw,new,ioexception,invalid,path,entry,file,path,ex,else,throw,new,ioexception,cache,file,name,already,exists
Plan -> public void registerCachedFile(String name, DistributedCacheEntry entry) throws IOException;1529583969;register cache files in program level_@param entry contains all relevant information_@param name user defined name of that file_@throws java.io.IOException;public void registerCachedFile(String name, DistributedCacheEntry entry) throws IOException {_		if (!this.cacheFile.containsKey(name)) {_			this.cacheFile.put(name, entry)__		} else {_			throw new IOException("cache file " + name + "already exists!")__		}_	};register,cache,files,in,program,level,param,entry,contains,all,relevant,information,param,name,user,defined,name,of,that,file,throws,java,io,ioexception;public,void,register,cached,file,string,name,distributed,cache,entry,entry,throws,ioexception,if,this,cache,file,contains,key,name,this,cache,file,put,name,entry,else,throw,new,ioexception,cache,file,name,already,exists
Plan -> public void registerCachedFile(String name, DistributedCacheEntry entry) throws IOException;1544793776;register cache files in program level_@param entry contains all relevant information_@param name user defined name of that file_@throws java.io.IOException;public void registerCachedFile(String name, DistributedCacheEntry entry) throws IOException {_		if (!this.cacheFile.containsKey(name)) {_			this.cacheFile.put(name, entry)__		} else {_			throw new IOException("cache file " + name + "already exists!")__		}_	};register,cache,files,in,program,level,param,entry,contains,all,relevant,information,param,name,user,defined,name,of,that,file,throws,java,io,ioexception;public,void,register,cached,file,string,name,distributed,cache,entry,entry,throws,ioexception,if,this,cache,file,contains,key,name,this,cache,file,put,name,entry,else,throw,new,ioexception,cache,file,name,already,exists
Plan -> public Collection<? extends GenericDataSinkBase<?>> getDataSinks();1405024514;Gets all the data sinks of this job.__@return All sinks of the program.;public Collection<? extends GenericDataSinkBase<?>> getDataSinks() {_		return this.sinks__	};gets,all,the,data,sinks,of,this,job,return,all,sinks,of,the,program;public,collection,extends,generic,data,sink,base,get,data,sinks,return,this,sinks
Plan -> public Collection<? extends GenericDataSinkBase<?>> getDataSinks();1405090423;Gets all the data sinks of this job.__@return All sinks of the program.;public Collection<? extends GenericDataSinkBase<?>> getDataSinks() {_		return this.sinks__	};gets,all,the,data,sinks,of,this,job,return,all,sinks,of,the,program;public,collection,extends,generic,data,sink,base,get,data,sinks,return,this,sinks
Plan -> public Collection<? extends GenericDataSinkBase<?>> getDataSinks();1411473593;Gets all the data sinks of this job.__@return All sinks of the program.;public Collection<? extends GenericDataSinkBase<?>> getDataSinks() {_		return this.sinks__	};gets,all,the,data,sinks,of,this,job,return,all,sinks,of,the,program;public,collection,extends,generic,data,sink,base,get,data,sinks,return,this,sinks
Plan -> public Collection<? extends GenericDataSinkBase<?>> getDataSinks();1412346153;Gets all the data sinks of this job.__@return All sinks of the program.;public Collection<? extends GenericDataSinkBase<?>> getDataSinks() {_		return this.sinks__	};gets,all,the,data,sinks,of,this,job,return,all,sinks,of,the,program;public,collection,extends,generic,data,sink,base,get,data,sinks,return,this,sinks
Plan -> public Collection<? extends GenericDataSinkBase<?>> getDataSinks();1415027294;Gets all the data sinks of this job.__@return All sinks of the program.;public Collection<? extends GenericDataSinkBase<?>> getDataSinks() {_		return this.sinks__	};gets,all,the,data,sinks,of,this,job,return,all,sinks,of,the,program;public,collection,extends,generic,data,sink,base,get,data,sinks,return,this,sinks
Plan -> public Collection<? extends GenericDataSinkBase<?>> getDataSinks();1420654570;Gets all the data sinks of this job.__@return All sinks of the program.;public Collection<? extends GenericDataSinkBase<?>> getDataSinks() {_		return this.sinks__	};gets,all,the,data,sinks,of,this,job,return,all,sinks,of,the,program;public,collection,extends,generic,data,sink,base,get,data,sinks,return,this,sinks
Plan -> public Collection<? extends GenericDataSinkBase<?>> getDataSinks();1420663430;Gets all the data sinks of this job.__@return All sinks of the program.;public Collection<? extends GenericDataSinkBase<?>> getDataSinks() {_		return this.sinks__	};gets,all,the,data,sinks,of,this,job,return,all,sinks,of,the,program;public,collection,extends,generic,data,sink,base,get,data,sinks,return,this,sinks
Plan -> public Collection<? extends GenericDataSinkBase<?>> getDataSinks();1424115592;Gets all the data sinks of this job.__@return All sinks of the program.;public Collection<? extends GenericDataSinkBase<?>> getDataSinks() {_		return this.sinks__	};gets,all,the,data,sinks,of,this,job,return,all,sinks,of,the,program;public,collection,extends,generic,data,sink,base,get,data,sinks,return,this,sinks
Plan -> public Collection<? extends GenericDataSinkBase<?>> getDataSinks();1426843273;Gets all the data sinks of this job.__@return All sinks of the program.;public Collection<? extends GenericDataSinkBase<?>> getDataSinks() {_		return this.sinks__	};gets,all,the,data,sinks,of,this,job,return,all,sinks,of,the,program;public,collection,extends,generic,data,sink,base,get,data,sinks,return,this,sinks
Plan -> public Collection<? extends GenericDataSinkBase<?>> getDataSinks();1427097830;Gets all the data sinks of this job.__@return All sinks of the program.;public Collection<? extends GenericDataSinkBase<?>> getDataSinks() {_		return this.sinks__	};gets,all,the,data,sinks,of,this,job,return,all,sinks,of,the,program;public,collection,extends,generic,data,sink,base,get,data,sinks,return,this,sinks
Plan -> public Collection<? extends GenericDataSinkBase<?>> getDataSinks();1431703039;Gets all the data sinks of this job.__@return All sinks of the program.;public Collection<? extends GenericDataSinkBase<?>> getDataSinks() {_		return this.sinks__	};gets,all,the,data,sinks,of,this,job,return,all,sinks,of,the,program;public,collection,extends,generic,data,sink,base,get,data,sinks,return,this,sinks
Plan -> public Collection<? extends GenericDataSinkBase<?>> getDataSinks();1442944546;Gets all the data sinks of this job.__@return All sinks of the program.;public Collection<? extends GenericDataSinkBase<?>> getDataSinks() {_		return this.sinks__	};gets,all,the,data,sinks,of,this,job,return,all,sinks,of,the,program;public,collection,extends,generic,data,sink,base,get,data,sinks,return,this,sinks
Plan -> public Collection<? extends GenericDataSinkBase<?>> getDataSinks();1444215406;Gets all the data sinks of this job.__@return All sinks of the program.;public Collection<? extends GenericDataSinkBase<?>> getDataSinks() {_		return this.sinks__	};gets,all,the,data,sinks,of,this,job,return,all,sinks,of,the,program;public,collection,extends,generic,data,sink,base,get,data,sinks,return,this,sinks
Plan -> public Collection<? extends GenericDataSinkBase<?>> getDataSinks();1449526184;Gets all the data sinks of this job.__@return All sinks of the program.;public Collection<? extends GenericDataSinkBase<?>> getDataSinks() {_		return this.sinks__	};gets,all,the,data,sinks,of,this,job,return,all,sinks,of,the,program;public,collection,extends,generic,data,sink,base,get,data,sinks,return,this,sinks
Plan -> public Collection<? extends GenericDataSinkBase<?>> getDataSinks();1455479358;Gets all the data sinks of this job.__@return All sinks of the program.;public Collection<? extends GenericDataSinkBase<?>> getDataSinks() {_		return this.sinks__	};gets,all,the,data,sinks,of,this,job,return,all,sinks,of,the,program;public,collection,extends,generic,data,sink,base,get,data,sinks,return,this,sinks
Plan -> public Collection<? extends GenericDataSinkBase<?>> getDataSinks();1455548285;Gets all the data sinks of this job.__@return All sinks of the program.;public Collection<? extends GenericDataSinkBase<?>> getDataSinks() {_		return this.sinks__	};gets,all,the,data,sinks,of,this,job,return,all,sinks,of,the,program;public,collection,extends,generic,data,sink,base,get,data,sinks,return,this,sinks
Plan -> public Collection<? extends GenericDataSinkBase<?>> getDataSinks();1457737669;Gets all the data sinks of this job.__@return All sinks of the program.;public Collection<? extends GenericDataSinkBase<?>> getDataSinks() {_		return this.sinks__	};gets,all,the,data,sinks,of,this,job,return,all,sinks,of,the,program;public,collection,extends,generic,data,sink,base,get,data,sinks,return,this,sinks
Plan -> public Collection<? extends GenericDataSinkBase<?>> getDataSinks();1460472696;Gets all the data sinks of this job.__@return All sinks of the program.;public Collection<? extends GenericDataSinkBase<?>> getDataSinks() {_		return this.sinks__	};gets,all,the,data,sinks,of,this,job,return,all,sinks,of,the,program;public,collection,extends,generic,data,sink,base,get,data,sinks,return,this,sinks
Plan -> public Collection<? extends GenericDataSinkBase<?>> getDataSinks();1460563153;Gets all the data sinks of this job.__@return All sinks of the program.;public Collection<? extends GenericDataSinkBase<?>> getDataSinks() {_		return this.sinks__	};gets,all,the,data,sinks,of,this,job,return,all,sinks,of,the,program;public,collection,extends,generic,data,sink,base,get,data,sinks,return,this,sinks
Plan -> public Collection<? extends GenericDataSinkBase<?>> getDataSinks();1460741894;Gets all the data sinks of this job.__@return All sinks of the program.;public Collection<? extends GenericDataSinkBase<?>> getDataSinks() {_		return this.sinks__	};gets,all,the,data,sinks,of,this,job,return,all,sinks,of,the,program;public,collection,extends,generic,data,sink,base,get,data,sinks,return,this,sinks
Plan -> public Collection<? extends GenericDataSinkBase<?>> getDataSinks();1500974874;Gets all the data sinks of this job.__@return All sinks of the program.;public Collection<? extends GenericDataSinkBase<?>> getDataSinks() {_		return this.sinks__	};gets,all,the,data,sinks,of,this,job,return,all,sinks,of,the,program;public,collection,extends,generic,data,sink,base,get,data,sinks,return,this,sinks
Plan -> public Collection<? extends GenericDataSinkBase<?>> getDataSinks();1529583969;Gets all the data sinks of this job.__@return All sinks of the program.;public Collection<? extends GenericDataSinkBase<?>> getDataSinks() {_		return this.sinks__	};gets,all,the,data,sinks,of,this,job,return,all,sinks,of,the,program;public,collection,extends,generic,data,sink,base,get,data,sinks,return,this,sinks
Plan -> public Collection<? extends GenericDataSinkBase<?>> getDataSinks();1544793776;Gets all the data sinks of this job.__@return All sinks of the program.;public Collection<? extends GenericDataSinkBase<?>> getDataSinks() {_		return this.sinks__	};gets,all,the,data,sinks,of,this,job,return,all,sinks,of,the,program;public,collection,extends,generic,data,sink,base,get,data,sinks,return,this,sinks
Plan -> @Override 	public void accept(Visitor<Operator<?>> visitor);1405024514;Traverses the job depth first from all data sinks on towards the sources.__@see Visitable#accept(Visitor);@Override_	public void accept(Visitor<Operator<?>> visitor) {_		for (GenericDataSinkBase<?> sink : this.sinks) {_			sink.accept(visitor)__		}_	};traverses,the,job,depth,first,from,all,data,sinks,on,towards,the,sources,see,visitable,accept,visitor;override,public,void,accept,visitor,operator,visitor,for,generic,data,sink,base,sink,this,sinks,sink,accept,visitor
Plan -> @Override 	public void accept(Visitor<Operator<?>> visitor);1405090423;Traverses the job depth first from all data sinks on towards the sources.__@see Visitable#accept(Visitor);@Override_	public void accept(Visitor<Operator<?>> visitor) {_		for (GenericDataSinkBase<?> sink : this.sinks) {_			sink.accept(visitor)__		}_	};traverses,the,job,depth,first,from,all,data,sinks,on,towards,the,sources,see,visitable,accept,visitor;override,public,void,accept,visitor,operator,visitor,for,generic,data,sink,base,sink,this,sinks,sink,accept,visitor
Plan -> @Override 	public void accept(Visitor<Operator<?>> visitor);1411473593;Traverses the job depth first from all data sinks on towards the sources.__@see Visitable#accept(Visitor);@Override_	public void accept(Visitor<Operator<?>> visitor) {_		for (GenericDataSinkBase<?> sink : this.sinks) {_			sink.accept(visitor)__		}_	};traverses,the,job,depth,first,from,all,data,sinks,on,towards,the,sources,see,visitable,accept,visitor;override,public,void,accept,visitor,operator,visitor,for,generic,data,sink,base,sink,this,sinks,sink,accept,visitor
Plan -> @Override 	public void accept(Visitor<Operator<?>> visitor);1412346153;Traverses the job depth first from all data sinks on towards the sources.__@see Visitable#accept(Visitor);@Override_	public void accept(Visitor<Operator<?>> visitor) {_		for (GenericDataSinkBase<?> sink : this.sinks) {_			sink.accept(visitor)__		}_	};traverses,the,job,depth,first,from,all,data,sinks,on,towards,the,sources,see,visitable,accept,visitor;override,public,void,accept,visitor,operator,visitor,for,generic,data,sink,base,sink,this,sinks,sink,accept,visitor
Plan -> @Override 	public void accept(Visitor<Operator<?>> visitor);1415027294;Traverses the job depth first from all data sinks on towards the sources.__@see Visitable#accept(Visitor);@Override_	public void accept(Visitor<Operator<?>> visitor) {_		for (GenericDataSinkBase<?> sink : this.sinks) {_			sink.accept(visitor)__		}_	};traverses,the,job,depth,first,from,all,data,sinks,on,towards,the,sources,see,visitable,accept,visitor;override,public,void,accept,visitor,operator,visitor,for,generic,data,sink,base,sink,this,sinks,sink,accept,visitor
Plan -> @Override 	public void accept(Visitor<Operator<?>> visitor);1420654570;Traverses the job depth first from all data sinks on towards the sources.__@see Visitable#accept(Visitor);@Override_	public void accept(Visitor<Operator<?>> visitor) {_		for (GenericDataSinkBase<?> sink : this.sinks) {_			sink.accept(visitor)__		}_	};traverses,the,job,depth,first,from,all,data,sinks,on,towards,the,sources,see,visitable,accept,visitor;override,public,void,accept,visitor,operator,visitor,for,generic,data,sink,base,sink,this,sinks,sink,accept,visitor
Plan -> @Override 	public void accept(Visitor<Operator<?>> visitor);1420663430;Traverses the job depth first from all data sinks on towards the sources.__@see Visitable#accept(Visitor);@Override_	public void accept(Visitor<Operator<?>> visitor) {_		for (GenericDataSinkBase<?> sink : this.sinks) {_			sink.accept(visitor)__		}_	};traverses,the,job,depth,first,from,all,data,sinks,on,towards,the,sources,see,visitable,accept,visitor;override,public,void,accept,visitor,operator,visitor,for,generic,data,sink,base,sink,this,sinks,sink,accept,visitor
Plan -> @Override 	public void accept(Visitor<Operator<?>> visitor);1424115592;Traverses the job depth first from all data sinks on towards the sources.__@see Visitable#accept(Visitor);@Override_	public void accept(Visitor<Operator<?>> visitor) {_		for (GenericDataSinkBase<?> sink : this.sinks) {_			sink.accept(visitor)__		}_	};traverses,the,job,depth,first,from,all,data,sinks,on,towards,the,sources,see,visitable,accept,visitor;override,public,void,accept,visitor,operator,visitor,for,generic,data,sink,base,sink,this,sinks,sink,accept,visitor
Plan -> @Override 	public void accept(Visitor<Operator<?>> visitor);1426843273;Traverses the job depth first from all data sinks on towards the sources.__@see Visitable#accept(Visitor);@Override_	public void accept(Visitor<Operator<?>> visitor) {_		for (GenericDataSinkBase<?> sink : this.sinks) {_			sink.accept(visitor)__		}_	};traverses,the,job,depth,first,from,all,data,sinks,on,towards,the,sources,see,visitable,accept,visitor;override,public,void,accept,visitor,operator,visitor,for,generic,data,sink,base,sink,this,sinks,sink,accept,visitor
Plan -> @Override 	public void accept(Visitor<Operator<?>> visitor);1427097830;Traverses the job depth first from all data sinks on towards the sources.__@see Visitable#accept(Visitor);@Override_	public void accept(Visitor<Operator<?>> visitor) {_		for (GenericDataSinkBase<?> sink : this.sinks) {_			sink.accept(visitor)__		}_	};traverses,the,job,depth,first,from,all,data,sinks,on,towards,the,sources,see,visitable,accept,visitor;override,public,void,accept,visitor,operator,visitor,for,generic,data,sink,base,sink,this,sinks,sink,accept,visitor
Plan -> @Override 	public void accept(Visitor<Operator<?>> visitor);1431703039;Traverses the job depth first from all data sinks on towards the sources.__@see Visitable#accept(Visitor);@Override_	public void accept(Visitor<Operator<?>> visitor) {_		for (GenericDataSinkBase<?> sink : this.sinks) {_			sink.accept(visitor)__		}_	};traverses,the,job,depth,first,from,all,data,sinks,on,towards,the,sources,see,visitable,accept,visitor;override,public,void,accept,visitor,operator,visitor,for,generic,data,sink,base,sink,this,sinks,sink,accept,visitor
Plan -> @Override 	public void accept(Visitor<Operator<?>> visitor);1442944546;Traverses the job depth first from all data sinks on towards the sources.__@see Visitable#accept(Visitor);@Override_	public void accept(Visitor<Operator<?>> visitor) {_		for (GenericDataSinkBase<?> sink : this.sinks) {_			sink.accept(visitor)__		}_	};traverses,the,job,depth,first,from,all,data,sinks,on,towards,the,sources,see,visitable,accept,visitor;override,public,void,accept,visitor,operator,visitor,for,generic,data,sink,base,sink,this,sinks,sink,accept,visitor
Plan -> @Override 	public void accept(Visitor<Operator<?>> visitor);1444215406;Traverses the job depth first from all data sinks on towards the sources.__@see Visitable#accept(Visitor);@Override_	public void accept(Visitor<Operator<?>> visitor) {_		for (GenericDataSinkBase<?> sink : this.sinks) {_			sink.accept(visitor)__		}_	};traverses,the,job,depth,first,from,all,data,sinks,on,towards,the,sources,see,visitable,accept,visitor;override,public,void,accept,visitor,operator,visitor,for,generic,data,sink,base,sink,this,sinks,sink,accept,visitor
Plan -> @Override 	public void accept(Visitor<Operator<?>> visitor);1449526184;Traverses the job depth first from all data sinks on towards the sources.__@see Visitable#accept(Visitor);@Override_	public void accept(Visitor<Operator<?>> visitor) {_		for (GenericDataSinkBase<?> sink : this.sinks) {_			sink.accept(visitor)__		}_	};traverses,the,job,depth,first,from,all,data,sinks,on,towards,the,sources,see,visitable,accept,visitor;override,public,void,accept,visitor,operator,visitor,for,generic,data,sink,base,sink,this,sinks,sink,accept,visitor
Plan -> @Override 	public void accept(Visitor<Operator<?>> visitor);1455479358;Traverses the job depth first from all data sinks on towards the sources.__@see Visitable#accept(Visitor);@Override_	public void accept(Visitor<Operator<?>> visitor) {_		for (GenericDataSinkBase<?> sink : this.sinks) {_			sink.accept(visitor)__		}_	};traverses,the,job,depth,first,from,all,data,sinks,on,towards,the,sources,see,visitable,accept,visitor;override,public,void,accept,visitor,operator,visitor,for,generic,data,sink,base,sink,this,sinks,sink,accept,visitor
Plan -> @Override 	public void accept(Visitor<Operator<?>> visitor);1455548285;Traverses the job depth first from all data sinks on towards the sources.__@see Visitable#accept(Visitor);@Override_	public void accept(Visitor<Operator<?>> visitor) {_		for (GenericDataSinkBase<?> sink : this.sinks) {_			sink.accept(visitor)__		}_	};traverses,the,job,depth,first,from,all,data,sinks,on,towards,the,sources,see,visitable,accept,visitor;override,public,void,accept,visitor,operator,visitor,for,generic,data,sink,base,sink,this,sinks,sink,accept,visitor
Plan -> @Override 	public void accept(Visitor<Operator<?>> visitor);1457737669;Traverses the job depth first from all data sinks on towards the sources.__@see Visitable#accept(Visitor);@Override_	public void accept(Visitor<Operator<?>> visitor) {_		for (GenericDataSinkBase<?> sink : this.sinks) {_			sink.accept(visitor)__		}_	};traverses,the,job,depth,first,from,all,data,sinks,on,towards,the,sources,see,visitable,accept,visitor;override,public,void,accept,visitor,operator,visitor,for,generic,data,sink,base,sink,this,sinks,sink,accept,visitor
Plan -> @Override 	public void accept(Visitor<Operator<?>> visitor);1460472696;Traverses the job depth first from all data sinks on towards the sources.__@see Visitable#accept(Visitor);@Override_	public void accept(Visitor<Operator<?>> visitor) {_		for (GenericDataSinkBase<?> sink : this.sinks) {_			sink.accept(visitor)__		}_	};traverses,the,job,depth,first,from,all,data,sinks,on,towards,the,sources,see,visitable,accept,visitor;override,public,void,accept,visitor,operator,visitor,for,generic,data,sink,base,sink,this,sinks,sink,accept,visitor
Plan -> @Override 	public void accept(Visitor<Operator<?>> visitor);1460563153;Traverses the job depth first from all data sinks on towards the sources.__@see Visitable#accept(Visitor);@Override_	public void accept(Visitor<Operator<?>> visitor) {_		for (GenericDataSinkBase<?> sink : this.sinks) {_			sink.accept(visitor)__		}_	};traverses,the,job,depth,first,from,all,data,sinks,on,towards,the,sources,see,visitable,accept,visitor;override,public,void,accept,visitor,operator,visitor,for,generic,data,sink,base,sink,this,sinks,sink,accept,visitor
Plan -> @Override 	public void accept(Visitor<Operator<?>> visitor);1460741894;Traverses the job depth first from all data sinks on towards the sources.__@see Visitable#accept(Visitor);@Override_	public void accept(Visitor<Operator<?>> visitor) {_		for (GenericDataSinkBase<?> sink : this.sinks) {_			sink.accept(visitor)__		}_	};traverses,the,job,depth,first,from,all,data,sinks,on,towards,the,sources,see,visitable,accept,visitor;override,public,void,accept,visitor,operator,visitor,for,generic,data,sink,base,sink,this,sinks,sink,accept,visitor
Plan -> @Override 	public void accept(Visitor<Operator<?>> visitor);1500974874;Traverses the job depth first from all data sinks on towards the sources.__@see Visitable#accept(Visitor);@Override_	public void accept(Visitor<Operator<?>> visitor) {_		for (GenericDataSinkBase<?> sink : this.sinks) {_			sink.accept(visitor)__		}_	};traverses,the,job,depth,first,from,all,data,sinks,on,towards,the,sources,see,visitable,accept,visitor;override,public,void,accept,visitor,operator,visitor,for,generic,data,sink,base,sink,this,sinks,sink,accept,visitor
Plan -> @Override 	public void accept(Visitor<Operator<?>> visitor);1529583969;Traverses the job depth first from all data sinks on towards the sources.__@see Visitable#accept(Visitor);@Override_	public void accept(Visitor<Operator<?>> visitor) {_		for (GenericDataSinkBase<?> sink : this.sinks) {_			sink.accept(visitor)__		}_	};traverses,the,job,depth,first,from,all,data,sinks,on,towards,the,sources,see,visitable,accept,visitor;override,public,void,accept,visitor,operator,visitor,for,generic,data,sink,base,sink,this,sinks,sink,accept,visitor
Plan -> @Override 	public void accept(Visitor<Operator<?>> visitor);1544793776;Traverses the job depth first from all data sinks on towards the sources.__@see Visitable#accept(Visitor);@Override_	public void accept(Visitor<Operator<?>> visitor) {_		for (GenericDataSinkBase<?> sink : this.sinks) {_			sink.accept(visitor)__		}_	};traverses,the,job,depth,first,from,all,data,sinks,on,towards,the,sources,see,visitable,accept,visitor;override,public,void,accept,visitor,operator,visitor,for,generic,data,sink,base,sink,this,sinks,sink,accept,visitor
Plan -> public void setJobName(String jobName);1405024514;Sets the jobName for this Plan.__@param jobName The jobName to set.;public void setJobName(String jobName) {_		checkNotNull(jobName, "The job name must not be null.")__		this.jobName = jobName__	};sets,the,job,name,for,this,plan,param,job,name,the,job,name,to,set;public,void,set,job,name,string,job,name,check,not,null,job,name,the,job,name,must,not,be,null,this,job,name,job,name
Plan -> public void setJobName(String jobName);1405090423;Sets the jobName for this Plan.__@param jobName The jobName to set.;public void setJobName(String jobName) {_		checkNotNull(jobName, "The job name must not be null.")__		this.jobName = jobName__	};sets,the,job,name,for,this,plan,param,job,name,the,job,name,to,set;public,void,set,job,name,string,job,name,check,not,null,job,name,the,job,name,must,not,be,null,this,job,name,job,name
Plan -> public void setJobName(String jobName);1411473593;Sets the jobName for this Plan.__@param jobName The jobName to set.;public void setJobName(String jobName) {_		checkNotNull(jobName, "The job name must not be null.")__		this.jobName = jobName__	};sets,the,job,name,for,this,plan,param,job,name,the,job,name,to,set;public,void,set,job,name,string,job,name,check,not,null,job,name,the,job,name,must,not,be,null,this,job,name,job,name
Plan -> public void setJobName(String jobName);1412346153;Sets the jobName for this Plan.__@param jobName The jobName to set.;public void setJobName(String jobName) {_		checkNotNull(jobName, "The job name must not be null.")__		this.jobName = jobName__	};sets,the,job,name,for,this,plan,param,job,name,the,job,name,to,set;public,void,set,job,name,string,job,name,check,not,null,job,name,the,job,name,must,not,be,null,this,job,name,job,name
Plan -> public void setJobName(String jobName);1415027294;Sets the jobName for this Plan.__@param jobName The jobName to set.;public void setJobName(String jobName) {_		checkNotNull(jobName, "The job name must not be null.")__		this.jobName = jobName__	};sets,the,job,name,for,this,plan,param,job,name,the,job,name,to,set;public,void,set,job,name,string,job,name,check,not,null,job,name,the,job,name,must,not,be,null,this,job,name,job,name
Plan -> public void setJobName(String jobName);1420654570;Sets the jobName for this Plan.__@param jobName The jobName to set.;public void setJobName(String jobName) {_		checkNotNull(jobName, "The job name must not be null.")__		this.jobName = jobName__	};sets,the,job,name,for,this,plan,param,job,name,the,job,name,to,set;public,void,set,job,name,string,job,name,check,not,null,job,name,the,job,name,must,not,be,null,this,job,name,job,name
Plan -> public void setJobName(String jobName);1420663430;Sets the jobName for this Plan.__@param jobName The jobName to set.;public void setJobName(String jobName) {_		checkNotNull(jobName, "The job name must not be null.")__		this.jobName = jobName__	};sets,the,job,name,for,this,plan,param,job,name,the,job,name,to,set;public,void,set,job,name,string,job,name,check,not,null,job,name,the,job,name,must,not,be,null,this,job,name,job,name
Plan -> public void setJobName(String jobName);1424115592;Sets the jobName for this Plan.__@param jobName The jobName to set.;public void setJobName(String jobName) {_		checkNotNull(jobName, "The job name must not be null.")__		this.jobName = jobName__	};sets,the,job,name,for,this,plan,param,job,name,the,job,name,to,set;public,void,set,job,name,string,job,name,check,not,null,job,name,the,job,name,must,not,be,null,this,job,name,job,name
Plan -> public void setJobName(String jobName);1426843273;Sets the jobName for this Plan.__@param jobName The jobName to set.;public void setJobName(String jobName) {_		checkNotNull(jobName, "The job name must not be null.")__		this.jobName = jobName__	};sets,the,job,name,for,this,plan,param,job,name,the,job,name,to,set;public,void,set,job,name,string,job,name,check,not,null,job,name,the,job,name,must,not,be,null,this,job,name,job,name
Plan -> public void setJobName(String jobName);1427097830;Sets the jobName for this Plan.__@param jobName The jobName to set.;public void setJobName(String jobName) {_		checkNotNull(jobName, "The job name must not be null.")__		this.jobName = jobName__	};sets,the,job,name,for,this,plan,param,job,name,the,job,name,to,set;public,void,set,job,name,string,job,name,check,not,null,job,name,the,job,name,must,not,be,null,this,job,name,job,name
Plan -> public void setJobName(String jobName);1431703039;Sets the jobName for this Plan.__@param jobName The jobName to set.;public void setJobName(String jobName) {_		checkNotNull(jobName, "The job name must not be null.")__		this.jobName = jobName__	};sets,the,job,name,for,this,plan,param,job,name,the,job,name,to,set;public,void,set,job,name,string,job,name,check,not,null,job,name,the,job,name,must,not,be,null,this,job,name,job,name
Plan -> public void setJobName(String jobName);1442944546;Sets the jobName for this Plan.__@param jobName The jobName to set.;public void setJobName(String jobName) {_		checkNotNull(jobName, "The job name must not be null.")__		this.jobName = jobName__	};sets,the,job,name,for,this,plan,param,job,name,the,job,name,to,set;public,void,set,job,name,string,job,name,check,not,null,job,name,the,job,name,must,not,be,null,this,job,name,job,name
Plan -> public void setJobName(String jobName);1444215406;Sets the jobName for this Plan.__@param jobName The jobName to set.;public void setJobName(String jobName) {_		checkNotNull(jobName, "The job name must not be null.")__		this.jobName = jobName__	};sets,the,job,name,for,this,plan,param,job,name,the,job,name,to,set;public,void,set,job,name,string,job,name,check,not,null,job,name,the,job,name,must,not,be,null,this,job,name,job,name
Plan -> public void setJobName(String jobName);1449526184;Sets the jobName for this Plan.__@param jobName The jobName to set.;public void setJobName(String jobName) {_		checkNotNull(jobName, "The job name must not be null.")__		this.jobName = jobName__	};sets,the,job,name,for,this,plan,param,job,name,the,job,name,to,set;public,void,set,job,name,string,job,name,check,not,null,job,name,the,job,name,must,not,be,null,this,job,name,job,name
Plan -> public void setJobName(String jobName);1455479358;Sets the jobName for this Plan.__@param jobName The jobName to set.;public void setJobName(String jobName) {_		checkNotNull(jobName, "The job name must not be null.")__		this.jobName = jobName__	};sets,the,job,name,for,this,plan,param,job,name,the,job,name,to,set;public,void,set,job,name,string,job,name,check,not,null,job,name,the,job,name,must,not,be,null,this,job,name,job,name
Plan -> public void setJobName(String jobName);1455548285;Sets the jobName for this Plan.__@param jobName The jobName to set.;public void setJobName(String jobName) {_		checkNotNull(jobName, "The job name must not be null.")__		this.jobName = jobName__	};sets,the,job,name,for,this,plan,param,job,name,the,job,name,to,set;public,void,set,job,name,string,job,name,check,not,null,job,name,the,job,name,must,not,be,null,this,job,name,job,name
Plan -> public void setJobName(String jobName);1457737669;Sets the jobName for this Plan.__@param jobName The jobName to set.;public void setJobName(String jobName) {_		checkNotNull(jobName, "The job name must not be null.")__		this.jobName = jobName__	};sets,the,job,name,for,this,plan,param,job,name,the,job,name,to,set;public,void,set,job,name,string,job,name,check,not,null,job,name,the,job,name,must,not,be,null,this,job,name,job,name
Plan -> public void setJobName(String jobName);1460472696;Sets the jobName for this Plan.__@param jobName The jobName to set.;public void setJobName(String jobName) {_		checkNotNull(jobName, "The job name must not be null.")__		this.jobName = jobName__	};sets,the,job,name,for,this,plan,param,job,name,the,job,name,to,set;public,void,set,job,name,string,job,name,check,not,null,job,name,the,job,name,must,not,be,null,this,job,name,job,name
Plan -> public void setJobName(String jobName);1460563153;Sets the jobName for this Plan.__@param jobName The jobName to set.;public void setJobName(String jobName) {_		checkNotNull(jobName, "The job name must not be null.")__		this.jobName = jobName__	};sets,the,job,name,for,this,plan,param,job,name,the,job,name,to,set;public,void,set,job,name,string,job,name,check,not,null,job,name,the,job,name,must,not,be,null,this,job,name,job,name
Plan -> public void setJobName(String jobName);1460741894;Sets the jobName for this Plan.__@param jobName The jobName to set.;public void setJobName(String jobName) {_		checkNotNull(jobName, "The job name must not be null.")__		this.jobName = jobName__	};sets,the,job,name,for,this,plan,param,job,name,the,job,name,to,set;public,void,set,job,name,string,job,name,check,not,null,job,name,the,job,name,must,not,be,null,this,job,name,job,name
Plan -> public void setJobName(String jobName);1500974874;Sets the jobName for this Plan.__@param jobName The jobName to set.;public void setJobName(String jobName) {_		checkNotNull(jobName, "The job name must not be null.")__		this.jobName = jobName__	};sets,the,job,name,for,this,plan,param,job,name,the,job,name,to,set;public,void,set,job,name,string,job,name,check,not,null,job,name,the,job,name,must,not,be,null,this,job,name,job,name
Plan -> public void setJobName(String jobName);1529583969;Sets the jobName for this Plan.__@param jobName The jobName to set.;public void setJobName(String jobName) {_		checkNotNull(jobName, "The job name must not be null.")__		this.jobName = jobName__	};sets,the,job,name,for,this,plan,param,job,name,the,job,name,to,set;public,void,set,job,name,string,job,name,check,not,null,job,name,the,job,name,must,not,be,null,this,job,name,job,name
Plan -> public void setJobName(String jobName);1544793776;Sets the jobName for this Plan.__@param jobName The jobName to set.;public void setJobName(String jobName) {_		checkNotNull(jobName, "The job name must not be null.")__		this.jobName = jobName__	};sets,the,job,name,for,this,plan,param,job,name,the,job,name,to,set;public,void,set,job,name,string,job,name,check,not,null,job,name,the,job,name,must,not,be,null,this,job,name,job,name
Plan -> public void setExecutionConfig(ExecutionConfig executionConfig);1420654570;Gets the runtime config object._@param executionConfig;public void setExecutionConfig(ExecutionConfig executionConfig) {_		this.executionConfig = executionConfig__	};gets,the,runtime,config,object,param,execution,config;public,void,set,execution,config,execution,config,execution,config,this,execution,config,execution,config
Plan -> public void setExecutionConfig(ExecutionConfig executionConfig);1420663430;Sets the runtime config object defining execution parameters.__@param executionConfig The execution config to use.;public void setExecutionConfig(ExecutionConfig executionConfig) {_		this.executionConfig = executionConfig__	};sets,the,runtime,config,object,defining,execution,parameters,param,execution,config,the,execution,config,to,use;public,void,set,execution,config,execution,config,execution,config,this,execution,config,execution,config
Plan -> public void setExecutionConfig(ExecutionConfig executionConfig);1424115592;Sets the runtime config object defining execution parameters.__@param executionConfig The execution config to use.;public void setExecutionConfig(ExecutionConfig executionConfig) {_		this.executionConfig = executionConfig__	};sets,the,runtime,config,object,defining,execution,parameters,param,execution,config,the,execution,config,to,use;public,void,set,execution,config,execution,config,execution,config,this,execution,config,execution,config
Plan -> public void setExecutionConfig(ExecutionConfig executionConfig);1426843273;Sets the runtime config object defining execution parameters.__@param executionConfig The execution config to use.;public void setExecutionConfig(ExecutionConfig executionConfig) {_		this.executionConfig = executionConfig__	};sets,the,runtime,config,object,defining,execution,parameters,param,execution,config,the,execution,config,to,use;public,void,set,execution,config,execution,config,execution,config,this,execution,config,execution,config
Plan -> public void setExecutionConfig(ExecutionConfig executionConfig);1427097830;Sets the runtime config object defining execution parameters.__@param executionConfig The execution config to use.;public void setExecutionConfig(ExecutionConfig executionConfig) {_		this.executionConfig = executionConfig__	};sets,the,runtime,config,object,defining,execution,parameters,param,execution,config,the,execution,config,to,use;public,void,set,execution,config,execution,config,execution,config,this,execution,config,execution,config
Plan -> public void setExecutionConfig(ExecutionConfig executionConfig);1431703039;Sets the runtime config object defining execution parameters.__@param executionConfig The execution config to use.;public void setExecutionConfig(ExecutionConfig executionConfig) {_		this.executionConfig = executionConfig__	};sets,the,runtime,config,object,defining,execution,parameters,param,execution,config,the,execution,config,to,use;public,void,set,execution,config,execution,config,execution,config,this,execution,config,execution,config
Plan -> public void setExecutionConfig(ExecutionConfig executionConfig);1442944546;Sets the runtime config object defining execution parameters.__@param executionConfig The execution config to use.;public void setExecutionConfig(ExecutionConfig executionConfig) {_		this.executionConfig = executionConfig__	};sets,the,runtime,config,object,defining,execution,parameters,param,execution,config,the,execution,config,to,use;public,void,set,execution,config,execution,config,execution,config,this,execution,config,execution,config
Plan -> public void setExecutionConfig(ExecutionConfig executionConfig);1444215406;Sets the runtime config object defining execution parameters.__@param executionConfig The execution config to use.;public void setExecutionConfig(ExecutionConfig executionConfig) {_		this.executionConfig = executionConfig__	};sets,the,runtime,config,object,defining,execution,parameters,param,execution,config,the,execution,config,to,use;public,void,set,execution,config,execution,config,execution,config,this,execution,config,execution,config
Plan -> public void setExecutionConfig(ExecutionConfig executionConfig);1449526184;Sets the runtime config object defining execution parameters.__@param executionConfig The execution config to use.;public void setExecutionConfig(ExecutionConfig executionConfig) {_		this.executionConfig = executionConfig__	};sets,the,runtime,config,object,defining,execution,parameters,param,execution,config,the,execution,config,to,use;public,void,set,execution,config,execution,config,execution,config,this,execution,config,execution,config
Plan -> public void setExecutionConfig(ExecutionConfig executionConfig);1455479358;Sets the runtime config object defining execution parameters.__@param executionConfig The execution config to use.;public void setExecutionConfig(ExecutionConfig executionConfig) {_		this.executionConfig = executionConfig__	};sets,the,runtime,config,object,defining,execution,parameters,param,execution,config,the,execution,config,to,use;public,void,set,execution,config,execution,config,execution,config,this,execution,config,execution,config
Plan -> public void setExecutionConfig(ExecutionConfig executionConfig);1455548285;Sets the runtime config object defining execution parameters.__@param executionConfig The execution config to use.;public void setExecutionConfig(ExecutionConfig executionConfig) {_		this.executionConfig = executionConfig__	};sets,the,runtime,config,object,defining,execution,parameters,param,execution,config,the,execution,config,to,use;public,void,set,execution,config,execution,config,execution,config,this,execution,config,execution,config
Plan -> public void setExecutionConfig(ExecutionConfig executionConfig);1457737669;Sets the runtime config object defining execution parameters.__@param executionConfig The execution config to use.;public void setExecutionConfig(ExecutionConfig executionConfig) {_		this.executionConfig = executionConfig__	};sets,the,runtime,config,object,defining,execution,parameters,param,execution,config,the,execution,config,to,use;public,void,set,execution,config,execution,config,execution,config,this,execution,config,execution,config
Plan -> public void setExecutionConfig(ExecutionConfig executionConfig);1460472696;Sets the runtime config object defining execution parameters.__@param executionConfig The execution config to use.;public void setExecutionConfig(ExecutionConfig executionConfig) {_		this.executionConfig = executionConfig__	};sets,the,runtime,config,object,defining,execution,parameters,param,execution,config,the,execution,config,to,use;public,void,set,execution,config,execution,config,execution,config,this,execution,config,execution,config
Plan -> public void setExecutionConfig(ExecutionConfig executionConfig);1460563153;Sets the runtime config object defining execution parameters.__@param executionConfig The execution config to use.;public void setExecutionConfig(ExecutionConfig executionConfig) {_		this.executionConfig = executionConfig__	};sets,the,runtime,config,object,defining,execution,parameters,param,execution,config,the,execution,config,to,use;public,void,set,execution,config,execution,config,execution,config,this,execution,config,execution,config
Plan -> public void setExecutionConfig(ExecutionConfig executionConfig);1460741894;Sets the runtime config object defining execution parameters.__@param executionConfig The execution config to use.;public void setExecutionConfig(ExecutionConfig executionConfig) {_		this.executionConfig = executionConfig__	};sets,the,runtime,config,object,defining,execution,parameters,param,execution,config,the,execution,config,to,use;public,void,set,execution,config,execution,config,execution,config,this,execution,config,execution,config
Plan -> public void setExecutionConfig(ExecutionConfig executionConfig);1500974874;Sets the runtime config object defining execution parameters.__@param executionConfig The execution config to use.;public void setExecutionConfig(ExecutionConfig executionConfig) {_		this.executionConfig = executionConfig__	};sets,the,runtime,config,object,defining,execution,parameters,param,execution,config,the,execution,config,to,use;public,void,set,execution,config,execution,config,execution,config,this,execution,config,execution,config
Plan -> public void setExecutionConfig(ExecutionConfig executionConfig);1529583969;Sets the runtime config object defining execution parameters.__@param executionConfig The execution config to use.;public void setExecutionConfig(ExecutionConfig executionConfig) {_		this.executionConfig = executionConfig__	};sets,the,runtime,config,object,defining,execution,parameters,param,execution,config,the,execution,config,to,use;public,void,set,execution,config,execution,config,execution,config,this,execution,config,execution,config
Plan -> public void setExecutionConfig(ExecutionConfig executionConfig);1544793776;Sets the runtime config object defining execution parameters.__@param executionConfig The execution config to use.;public void setExecutionConfig(ExecutionConfig executionConfig) {_		this.executionConfig = executionConfig__	};sets,the,runtime,config,object,defining,execution,parameters,param,execution,config,the,execution,config,to,use;public,void,set,execution,config,execution,config,execution,config,this,execution,config,execution,config
Plan -> public Plan(GenericDataSinkBase<?> sink, String jobName, int defaultParallelism);1405024514;Creates a new program plan with the given name and default parallelism, containing initially a single data_sink._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sink The data sink of the data flow._@param jobName The name to display for the job._@param defaultParallelism The default degree of parallelism for the job.;public Plan(GenericDataSinkBase<?> sink, String jobName, int defaultParallelism) {_		this(Collections.<GenericDataSinkBase<?>>singletonList(sink), jobName, defaultParallelism)__	};creates,a,new,program,plan,with,the,given,name,and,default,parallelism,containing,initially,a,single,data,sink,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sink,the,data,sink,of,the,data,flow,param,job,name,the,name,to,display,for,the,job,param,default,parallelism,the,default,degree,of,parallelism,for,the,job;public,plan,generic,data,sink,base,sink,string,job,name,int,default,parallelism,this,collections,generic,data,sink,base,singleton,list,sink,job,name,default,parallelism
Plan -> public Plan(GenericDataSinkBase<?> sink, String jobName, int defaultParallelism);1405090423;Creates a new program plan with the given name and default parallelism, containing initially a single data_sink._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sink The data sink of the data flow._@param jobName The name to display for the job._@param defaultParallelism The default degree of parallelism for the job.;public Plan(GenericDataSinkBase<?> sink, String jobName, int defaultParallelism) {_		this(Collections.<GenericDataSinkBase<?>>singletonList(sink), jobName, defaultParallelism)__	};creates,a,new,program,plan,with,the,given,name,and,default,parallelism,containing,initially,a,single,data,sink,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sink,the,data,sink,of,the,data,flow,param,job,name,the,name,to,display,for,the,job,param,default,parallelism,the,default,degree,of,parallelism,for,the,job;public,plan,generic,data,sink,base,sink,string,job,name,int,default,parallelism,this,collections,generic,data,sink,base,singleton,list,sink,job,name,default,parallelism
Plan -> public Plan(GenericDataSinkBase<?> sink, String jobName, int defaultParallelism);1411473593;Creates a new program plan with the given name and default parallelism, containing initially a single data_sink._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sink The data sink of the data flow._@param jobName The name to display for the job._@param defaultParallelism The default degree of parallelism for the job.;public Plan(GenericDataSinkBase<?> sink, String jobName, int defaultParallelism) {_		this(Collections.<GenericDataSinkBase<?>>singletonList(sink), jobName, defaultParallelism)__	};creates,a,new,program,plan,with,the,given,name,and,default,parallelism,containing,initially,a,single,data,sink,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sink,the,data,sink,of,the,data,flow,param,job,name,the,name,to,display,for,the,job,param,default,parallelism,the,default,degree,of,parallelism,for,the,job;public,plan,generic,data,sink,base,sink,string,job,name,int,default,parallelism,this,collections,generic,data,sink,base,singleton,list,sink,job,name,default,parallelism
Plan -> public Plan(GenericDataSinkBase<?> sink, String jobName, int defaultParallelism);1412346153;Creates a new program plan with the given name and default parallelism, containing initially a single data_sink._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sink The data sink of the data flow._@param jobName The name to display for the job._@param defaultParallelism The default degree of parallelism for the job.;public Plan(GenericDataSinkBase<?> sink, String jobName, int defaultParallelism) {_		this(Collections.<GenericDataSinkBase<?>>singletonList(sink), jobName, defaultParallelism)__	};creates,a,new,program,plan,with,the,given,name,and,default,parallelism,containing,initially,a,single,data,sink,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sink,the,data,sink,of,the,data,flow,param,job,name,the,name,to,display,for,the,job,param,default,parallelism,the,default,degree,of,parallelism,for,the,job;public,plan,generic,data,sink,base,sink,string,job,name,int,default,parallelism,this,collections,generic,data,sink,base,singleton,list,sink,job,name,default,parallelism
Plan -> public Plan(GenericDataSinkBase<?> sink, String jobName, int defaultParallelism);1415027294;Creates a new program plan with the given name and default parallelism, containing initially a single data_sink._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sink The data sink of the data flow._@param jobName The name to display for the job._@param defaultParallelism The default degree of parallelism for the job.;public Plan(GenericDataSinkBase<?> sink, String jobName, int defaultParallelism) {_		this(Collections.<GenericDataSinkBase<?>>singletonList(sink), jobName, defaultParallelism)__	};creates,a,new,program,plan,with,the,given,name,and,default,parallelism,containing,initially,a,single,data,sink,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sink,the,data,sink,of,the,data,flow,param,job,name,the,name,to,display,for,the,job,param,default,parallelism,the,default,degree,of,parallelism,for,the,job;public,plan,generic,data,sink,base,sink,string,job,name,int,default,parallelism,this,collections,generic,data,sink,base,singleton,list,sink,job,name,default,parallelism
Plan -> public Plan(GenericDataSinkBase<?> sink, String jobName, int defaultParallelism);1420654570;Creates a new program plan with the given name and default parallelism, containing initially a single data_sink._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sink The data sink of the data flow._@param jobName The name to display for the job._@param defaultParallelism The default degree of parallelism for the job.;public Plan(GenericDataSinkBase<?> sink, String jobName, int defaultParallelism) {_		this(Collections.<GenericDataSinkBase<?>>singletonList(sink), jobName, defaultParallelism)__	};creates,a,new,program,plan,with,the,given,name,and,default,parallelism,containing,initially,a,single,data,sink,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sink,the,data,sink,of,the,data,flow,param,job,name,the,name,to,display,for,the,job,param,default,parallelism,the,default,degree,of,parallelism,for,the,job;public,plan,generic,data,sink,base,sink,string,job,name,int,default,parallelism,this,collections,generic,data,sink,base,singleton,list,sink,job,name,default,parallelism
Plan -> public Plan(GenericDataSinkBase<?> sink, String jobName, int defaultParallelism);1420663430;Creates a new program plan with the given name and default parallelism, containing initially a single data_sink._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sink The data sink of the data flow._@param jobName The name to display for the job._@param defaultParallelism The default degree of parallelism for the job.;public Plan(GenericDataSinkBase<?> sink, String jobName, int defaultParallelism) {_		this(Collections.<GenericDataSinkBase<?>>singletonList(sink), jobName, defaultParallelism)__	};creates,a,new,program,plan,with,the,given,name,and,default,parallelism,containing,initially,a,single,data,sink,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sink,the,data,sink,of,the,data,flow,param,job,name,the,name,to,display,for,the,job,param,default,parallelism,the,default,degree,of,parallelism,for,the,job;public,plan,generic,data,sink,base,sink,string,job,name,int,default,parallelism,this,collections,generic,data,sink,base,singleton,list,sink,job,name,default,parallelism
Plan -> public Plan(GenericDataSinkBase<?> sink, String jobName, int defaultParallelism);1424115592;Creates a new program plan with the given name and default parallelism, containing initially a single data_sink._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sink The data sink of the data flow._@param jobName The name to display for the job._@param defaultParallelism The default degree of parallelism for the job.;public Plan(GenericDataSinkBase<?> sink, String jobName, int defaultParallelism) {_		this(Collections.<GenericDataSinkBase<?>>singletonList(sink), jobName, defaultParallelism)__	};creates,a,new,program,plan,with,the,given,name,and,default,parallelism,containing,initially,a,single,data,sink,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sink,the,data,sink,of,the,data,flow,param,job,name,the,name,to,display,for,the,job,param,default,parallelism,the,default,degree,of,parallelism,for,the,job;public,plan,generic,data,sink,base,sink,string,job,name,int,default,parallelism,this,collections,generic,data,sink,base,singleton,list,sink,job,name,default,parallelism
Plan -> public Plan(GenericDataSinkBase<?> sink, String jobName, int defaultParallelism);1426843273;Creates a new program plan with the given name and default parallelism, containing initially a single data_sink._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sink The data sink of the data flow._@param jobName The name to display for the job._@param defaultParallelism The default degree of parallelism for the job.;public Plan(GenericDataSinkBase<?> sink, String jobName, int defaultParallelism) {_		this(Collections.<GenericDataSinkBase<?>>singletonList(sink), jobName, defaultParallelism)__	};creates,a,new,program,plan,with,the,given,name,and,default,parallelism,containing,initially,a,single,data,sink,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sink,the,data,sink,of,the,data,flow,param,job,name,the,name,to,display,for,the,job,param,default,parallelism,the,default,degree,of,parallelism,for,the,job;public,plan,generic,data,sink,base,sink,string,job,name,int,default,parallelism,this,collections,generic,data,sink,base,singleton,list,sink,job,name,default,parallelism
Plan -> public Plan(GenericDataSinkBase<?> sink, String jobName, int defaultParallelism);1427097830;Creates a new program plan with the given name and default parallelism, containing initially a single data_sink._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sink The data sink of the data flow._@param jobName The name to display for the job._@param defaultParallelism The default parallelism for the job.;public Plan(GenericDataSinkBase<?> sink, String jobName, int defaultParallelism) {_		this(Collections.<GenericDataSinkBase<?>>singletonList(sink), jobName, defaultParallelism)__	};creates,a,new,program,plan,with,the,given,name,and,default,parallelism,containing,initially,a,single,data,sink,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sink,the,data,sink,of,the,data,flow,param,job,name,the,name,to,display,for,the,job,param,default,parallelism,the,default,parallelism,for,the,job;public,plan,generic,data,sink,base,sink,string,job,name,int,default,parallelism,this,collections,generic,data,sink,base,singleton,list,sink,job,name,default,parallelism
Plan -> public Plan(GenericDataSinkBase<?> sink, String jobName, int defaultParallelism);1431703039;Creates a new program plan with the given name and default parallelism, containing initially a single data_sink._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sink The data sink of the data flow._@param jobName The name to display for the job._@param defaultParallelism The default parallelism for the job.;public Plan(GenericDataSinkBase<?> sink, String jobName, int defaultParallelism) {_		this(Collections.<GenericDataSinkBase<?>>singletonList(sink), jobName, defaultParallelism)__	};creates,a,new,program,plan,with,the,given,name,and,default,parallelism,containing,initially,a,single,data,sink,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sink,the,data,sink,of,the,data,flow,param,job,name,the,name,to,display,for,the,job,param,default,parallelism,the,default,parallelism,for,the,job;public,plan,generic,data,sink,base,sink,string,job,name,int,default,parallelism,this,collections,generic,data,sink,base,singleton,list,sink,job,name,default,parallelism
Plan -> public Plan(GenericDataSinkBase<?> sink, String jobName, int defaultParallelism);1442944546;Creates a new program plan with the given name and default parallelism, containing initially a single data_sink._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sink The data sink of the data flow._@param jobName The name to display for the job._@param defaultParallelism The default parallelism for the job.;public Plan(GenericDataSinkBase<?> sink, String jobName, int defaultParallelism) {_		this(Collections.<GenericDataSinkBase<?>>singletonList(sink), jobName, defaultParallelism)__	};creates,a,new,program,plan,with,the,given,name,and,default,parallelism,containing,initially,a,single,data,sink,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sink,the,data,sink,of,the,data,flow,param,job,name,the,name,to,display,for,the,job,param,default,parallelism,the,default,parallelism,for,the,job;public,plan,generic,data,sink,base,sink,string,job,name,int,default,parallelism,this,collections,generic,data,sink,base,singleton,list,sink,job,name,default,parallelism
Plan -> public Plan(GenericDataSinkBase<?> sink, String jobName, int defaultParallelism);1444215406;Creates a new program plan with the given name and default parallelism, containing initially a single data_sink._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sink The data sink of the data flow._@param jobName The name to display for the job._@param defaultParallelism The default parallelism for the job.;public Plan(GenericDataSinkBase<?> sink, String jobName, int defaultParallelism) {_		this(Collections.<GenericDataSinkBase<?>>singletonList(sink), jobName, defaultParallelism)__	};creates,a,new,program,plan,with,the,given,name,and,default,parallelism,containing,initially,a,single,data,sink,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sink,the,data,sink,of,the,data,flow,param,job,name,the,name,to,display,for,the,job,param,default,parallelism,the,default,parallelism,for,the,job;public,plan,generic,data,sink,base,sink,string,job,name,int,default,parallelism,this,collections,generic,data,sink,base,singleton,list,sink,job,name,default,parallelism
Plan -> public Plan(GenericDataSinkBase<?> sink, String jobName, int defaultParallelism);1449526184;Creates a new program plan with the given name and default parallelism, containing initially a single data_sink._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sink The data sink of the data flow._@param jobName The name to display for the job._@param defaultParallelism The default parallelism for the job.;public Plan(GenericDataSinkBase<?> sink, String jobName, int defaultParallelism) {_		this(Collections.<GenericDataSinkBase<?>>singletonList(sink), jobName, defaultParallelism)__	};creates,a,new,program,plan,with,the,given,name,and,default,parallelism,containing,initially,a,single,data,sink,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sink,the,data,sink,of,the,data,flow,param,job,name,the,name,to,display,for,the,job,param,default,parallelism,the,default,parallelism,for,the,job;public,plan,generic,data,sink,base,sink,string,job,name,int,default,parallelism,this,collections,generic,data,sink,base,singleton,list,sink,job,name,default,parallelism
Plan -> public Plan(GenericDataSinkBase<?> sink, String jobName, int defaultParallelism);1455479358;Creates a new program plan with the given name and default parallelism, containing initially a single data_sink._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sink The data sink of the data flow._@param jobName The name to display for the job._@param defaultParallelism The default parallelism for the job.;public Plan(GenericDataSinkBase<?> sink, String jobName, int defaultParallelism) {_		this(Collections.<GenericDataSinkBase<?>>singletonList(sink), jobName, defaultParallelism)__	};creates,a,new,program,plan,with,the,given,name,and,default,parallelism,containing,initially,a,single,data,sink,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sink,the,data,sink,of,the,data,flow,param,job,name,the,name,to,display,for,the,job,param,default,parallelism,the,default,parallelism,for,the,job;public,plan,generic,data,sink,base,sink,string,job,name,int,default,parallelism,this,collections,generic,data,sink,base,singleton,list,sink,job,name,default,parallelism
Plan -> public Plan(GenericDataSinkBase<?> sink, String jobName, int defaultParallelism);1455548285;Creates a new program plan with the given name and default parallelism, containing initially a single data_sink._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sink The data sink of the data flow._@param jobName The name to display for the job._@param defaultParallelism The default parallelism for the job.;public Plan(GenericDataSinkBase<?> sink, String jobName, int defaultParallelism) {_		this(Collections.<GenericDataSinkBase<?>>singletonList(sink), jobName, defaultParallelism)__	};creates,a,new,program,plan,with,the,given,name,and,default,parallelism,containing,initially,a,single,data,sink,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sink,the,data,sink,of,the,data,flow,param,job,name,the,name,to,display,for,the,job,param,default,parallelism,the,default,parallelism,for,the,job;public,plan,generic,data,sink,base,sink,string,job,name,int,default,parallelism,this,collections,generic,data,sink,base,singleton,list,sink,job,name,default,parallelism
Plan -> public Plan(GenericDataSinkBase<?> sink, String jobName, int defaultParallelism);1457737669;Creates a new program plan with the given name and default parallelism, containing initially a single data_sink._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sink The data sink of the data flow._@param jobName The name to display for the job._@param defaultParallelism The default parallelism for the job.;public Plan(GenericDataSinkBase<?> sink, String jobName, int defaultParallelism) {_		this(Collections.<GenericDataSinkBase<?>>singletonList(sink), jobName, defaultParallelism)__	};creates,a,new,program,plan,with,the,given,name,and,default,parallelism,containing,initially,a,single,data,sink,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sink,the,data,sink,of,the,data,flow,param,job,name,the,name,to,display,for,the,job,param,default,parallelism,the,default,parallelism,for,the,job;public,plan,generic,data,sink,base,sink,string,job,name,int,default,parallelism,this,collections,generic,data,sink,base,singleton,list,sink,job,name,default,parallelism
Plan -> public Plan(GenericDataSinkBase<?> sink, String jobName, int defaultParallelism);1460472696;Creates a new program plan with the given name and default parallelism, containing initially a single data_sink._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sink The data sink of the data flow._@param jobName The name to display for the job._@param defaultParallelism The default parallelism for the job.;public Plan(GenericDataSinkBase<?> sink, String jobName, int defaultParallelism) {_		this(Collections.<GenericDataSinkBase<?>>singletonList(sink), jobName, defaultParallelism)__	};creates,a,new,program,plan,with,the,given,name,and,default,parallelism,containing,initially,a,single,data,sink,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sink,the,data,sink,of,the,data,flow,param,job,name,the,name,to,display,for,the,job,param,default,parallelism,the,default,parallelism,for,the,job;public,plan,generic,data,sink,base,sink,string,job,name,int,default,parallelism,this,collections,generic,data,sink,base,singleton,list,sink,job,name,default,parallelism
Plan -> public Plan(GenericDataSinkBase<?> sink, String jobName, int defaultParallelism);1460563153;Creates a new program plan with the given name and default parallelism, containing initially a single data_sink._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sink The data sink of the data flow._@param jobName The name to display for the job._@param defaultParallelism The default parallelism for the job.;public Plan(GenericDataSinkBase<?> sink, String jobName, int defaultParallelism) {_		this(Collections.<GenericDataSinkBase<?>>singletonList(sink), jobName, defaultParallelism)__	};creates,a,new,program,plan,with,the,given,name,and,default,parallelism,containing,initially,a,single,data,sink,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sink,the,data,sink,of,the,data,flow,param,job,name,the,name,to,display,for,the,job,param,default,parallelism,the,default,parallelism,for,the,job;public,plan,generic,data,sink,base,sink,string,job,name,int,default,parallelism,this,collections,generic,data,sink,base,singleton,list,sink,job,name,default,parallelism
Plan -> public Plan(GenericDataSinkBase<?> sink, String jobName, int defaultParallelism);1460741894;Creates a new program plan with the given name and default parallelism, containing initially a single data_sink._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sink The data sink of the data flow._@param jobName The name to display for the job._@param defaultParallelism The default parallelism for the job.;public Plan(GenericDataSinkBase<?> sink, String jobName, int defaultParallelism) {_		this(Collections.<GenericDataSinkBase<?>>singletonList(sink), jobName, defaultParallelism)__	};creates,a,new,program,plan,with,the,given,name,and,default,parallelism,containing,initially,a,single,data,sink,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sink,the,data,sink,of,the,data,flow,param,job,name,the,name,to,display,for,the,job,param,default,parallelism,the,default,parallelism,for,the,job;public,plan,generic,data,sink,base,sink,string,job,name,int,default,parallelism,this,collections,generic,data,sink,base,singleton,list,sink,job,name,default,parallelism
Plan -> public Plan(GenericDataSinkBase<?> sink, String jobName, int defaultParallelism);1500974874;Creates a new program plan with the given name and default parallelism, containing initially a single data_sink._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sink The data sink of the data flow._@param jobName The name to display for the job._@param defaultParallelism The default parallelism for the job.;public Plan(GenericDataSinkBase<?> sink, String jobName, int defaultParallelism) {_		this(Collections.<GenericDataSinkBase<?>>singletonList(sink), jobName, defaultParallelism)__	};creates,a,new,program,plan,with,the,given,name,and,default,parallelism,containing,initially,a,single,data,sink,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sink,the,data,sink,of,the,data,flow,param,job,name,the,name,to,display,for,the,job,param,default,parallelism,the,default,parallelism,for,the,job;public,plan,generic,data,sink,base,sink,string,job,name,int,default,parallelism,this,collections,generic,data,sink,base,singleton,list,sink,job,name,default,parallelism
Plan -> public Plan(GenericDataSinkBase<?> sink, String jobName, int defaultParallelism);1529583969;Creates a new program plan with the given name and default parallelism, containing initially a single data_sink._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sink The data sink of the data flow._@param jobName The name to display for the job._@param defaultParallelism The default parallelism for the job.;public Plan(GenericDataSinkBase<?> sink, String jobName, int defaultParallelism) {_		this(Collections.<GenericDataSinkBase<?>>singletonList(sink), jobName, defaultParallelism)__	};creates,a,new,program,plan,with,the,given,name,and,default,parallelism,containing,initially,a,single,data,sink,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sink,the,data,sink,of,the,data,flow,param,job,name,the,name,to,display,for,the,job,param,default,parallelism,the,default,parallelism,for,the,job;public,plan,generic,data,sink,base,sink,string,job,name,int,default,parallelism,this,collections,generic,data,sink,base,singleton,list,sink,job,name,default,parallelism
Plan -> public Plan(GenericDataSinkBase<?> sink, String jobName, int defaultParallelism);1544793776;Creates a new program plan with the given name and default parallelism, containing initially a single data_sink._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sink The data sink of the data flow._@param jobName The name to display for the job._@param defaultParallelism The default parallelism for the job.;public Plan(GenericDataSinkBase<?> sink, String jobName, int defaultParallelism) {_		this(Collections.<GenericDataSinkBase<?>>singletonList(sink), jobName, defaultParallelism)__	};creates,a,new,program,plan,with,the,given,name,and,default,parallelism,containing,initially,a,single,data,sink,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sink,the,data,sink,of,the,data,flow,param,job,name,the,name,to,display,for,the,job,param,default,parallelism,the,default,parallelism,for,the,job;public,plan,generic,data,sink,base,sink,string,job,name,int,default,parallelism,this,collections,generic,data,sink,base,singleton,list,sink,job,name,default,parallelism
Plan -> public void addDataSink(GenericDataSinkBase<?> sink);1405024514;Adds a data sink to the set of sinks in this program.__@param sink The data sink to add.;public void addDataSink(GenericDataSinkBase<?> sink) {_		checkNotNull(jobName, "The data sink must not be null.")__		_		if (!this.sinks.contains(sink)) {_			this.sinks.add(sink)__		}_	};adds,a,data,sink,to,the,set,of,sinks,in,this,program,param,sink,the,data,sink,to,add;public,void,add,data,sink,generic,data,sink,base,sink,check,not,null,job,name,the,data,sink,must,not,be,null,if,this,sinks,contains,sink,this,sinks,add,sink
Plan -> public void addDataSink(GenericDataSinkBase<?> sink);1405090423;Adds a data sink to the set of sinks in this program.__@param sink The data sink to add.;public void addDataSink(GenericDataSinkBase<?> sink) {_		checkNotNull(jobName, "The data sink must not be null.")__		_		if (!this.sinks.contains(sink)) {_			this.sinks.add(sink)__		}_	};adds,a,data,sink,to,the,set,of,sinks,in,this,program,param,sink,the,data,sink,to,add;public,void,add,data,sink,generic,data,sink,base,sink,check,not,null,job,name,the,data,sink,must,not,be,null,if,this,sinks,contains,sink,this,sinks,add,sink
Plan -> public void addDataSink(GenericDataSinkBase<?> sink);1411473593;Adds a data sink to the set of sinks in this program.__@param sink The data sink to add.;public void addDataSink(GenericDataSinkBase<?> sink) {_		checkNotNull(jobName, "The data sink must not be null.")__		_		if (!this.sinks.contains(sink)) {_			this.sinks.add(sink)__		}_	};adds,a,data,sink,to,the,set,of,sinks,in,this,program,param,sink,the,data,sink,to,add;public,void,add,data,sink,generic,data,sink,base,sink,check,not,null,job,name,the,data,sink,must,not,be,null,if,this,sinks,contains,sink,this,sinks,add,sink
Plan -> public void addDataSink(GenericDataSinkBase<?> sink);1412346153;Adds a data sink to the set of sinks in this program.__@param sink The data sink to add.;public void addDataSink(GenericDataSinkBase<?> sink) {_		checkNotNull(jobName, "The data sink must not be null.")__		_		if (!this.sinks.contains(sink)) {_			this.sinks.add(sink)__		}_	};adds,a,data,sink,to,the,set,of,sinks,in,this,program,param,sink,the,data,sink,to,add;public,void,add,data,sink,generic,data,sink,base,sink,check,not,null,job,name,the,data,sink,must,not,be,null,if,this,sinks,contains,sink,this,sinks,add,sink
Plan -> public void addDataSink(GenericDataSinkBase<?> sink);1415027294;Adds a data sink to the set of sinks in this program.__@param sink The data sink to add.;public void addDataSink(GenericDataSinkBase<?> sink) {_		checkNotNull(jobName, "The data sink must not be null.")__		_		if (!this.sinks.contains(sink)) {_			this.sinks.add(sink)__		}_	};adds,a,data,sink,to,the,set,of,sinks,in,this,program,param,sink,the,data,sink,to,add;public,void,add,data,sink,generic,data,sink,base,sink,check,not,null,job,name,the,data,sink,must,not,be,null,if,this,sinks,contains,sink,this,sinks,add,sink
Plan -> public void addDataSink(GenericDataSinkBase<?> sink);1420654570;Adds a data sink to the set of sinks in this program.__@param sink The data sink to add.;public void addDataSink(GenericDataSinkBase<?> sink) {_		checkNotNull(jobName, "The data sink must not be null.")__		_		if (!this.sinks.contains(sink)) {_			this.sinks.add(sink)__		}_	};adds,a,data,sink,to,the,set,of,sinks,in,this,program,param,sink,the,data,sink,to,add;public,void,add,data,sink,generic,data,sink,base,sink,check,not,null,job,name,the,data,sink,must,not,be,null,if,this,sinks,contains,sink,this,sinks,add,sink
Plan -> public void addDataSink(GenericDataSinkBase<?> sink);1420663430;Adds a data sink to the set of sinks in this program.__@param sink The data sink to add.;public void addDataSink(GenericDataSinkBase<?> sink) {_		checkNotNull(jobName, "The data sink must not be null.")__		_		if (!this.sinks.contains(sink)) {_			this.sinks.add(sink)__		}_	};adds,a,data,sink,to,the,set,of,sinks,in,this,program,param,sink,the,data,sink,to,add;public,void,add,data,sink,generic,data,sink,base,sink,check,not,null,job,name,the,data,sink,must,not,be,null,if,this,sinks,contains,sink,this,sinks,add,sink
Plan -> public void addDataSink(GenericDataSinkBase<?> sink);1424115592;Adds a data sink to the set of sinks in this program.__@param sink The data sink to add.;public void addDataSink(GenericDataSinkBase<?> sink) {_		checkNotNull(jobName, "The data sink must not be null.")__		_		if (!this.sinks.contains(sink)) {_			this.sinks.add(sink)__		}_	};adds,a,data,sink,to,the,set,of,sinks,in,this,program,param,sink,the,data,sink,to,add;public,void,add,data,sink,generic,data,sink,base,sink,check,not,null,job,name,the,data,sink,must,not,be,null,if,this,sinks,contains,sink,this,sinks,add,sink
Plan -> public void addDataSink(GenericDataSinkBase<?> sink);1426843273;Adds a data sink to the set of sinks in this program.__@param sink The data sink to add.;public void addDataSink(GenericDataSinkBase<?> sink) {_		checkNotNull(jobName, "The data sink must not be null.")__		_		if (!this.sinks.contains(sink)) {_			this.sinks.add(sink)__		}_	};adds,a,data,sink,to,the,set,of,sinks,in,this,program,param,sink,the,data,sink,to,add;public,void,add,data,sink,generic,data,sink,base,sink,check,not,null,job,name,the,data,sink,must,not,be,null,if,this,sinks,contains,sink,this,sinks,add,sink
Plan -> public void addDataSink(GenericDataSinkBase<?> sink);1427097830;Adds a data sink to the set of sinks in this program.__@param sink The data sink to add.;public void addDataSink(GenericDataSinkBase<?> sink) {_		checkNotNull(jobName, "The data sink must not be null.")__		_		if (!this.sinks.contains(sink)) {_			this.sinks.add(sink)__		}_	};adds,a,data,sink,to,the,set,of,sinks,in,this,program,param,sink,the,data,sink,to,add;public,void,add,data,sink,generic,data,sink,base,sink,check,not,null,job,name,the,data,sink,must,not,be,null,if,this,sinks,contains,sink,this,sinks,add,sink
Plan -> public void addDataSink(GenericDataSinkBase<?> sink);1431703039;Adds a data sink to the set of sinks in this program.__@param sink The data sink to add.;public void addDataSink(GenericDataSinkBase<?> sink) {_		checkNotNull(jobName, "The data sink must not be null.")__		_		if (!this.sinks.contains(sink)) {_			this.sinks.add(sink)__		}_	};adds,a,data,sink,to,the,set,of,sinks,in,this,program,param,sink,the,data,sink,to,add;public,void,add,data,sink,generic,data,sink,base,sink,check,not,null,job,name,the,data,sink,must,not,be,null,if,this,sinks,contains,sink,this,sinks,add,sink
Plan -> public void addDataSink(GenericDataSinkBase<?> sink);1442944546;Adds a data sink to the set of sinks in this program.__@param sink The data sink to add.;public void addDataSink(GenericDataSinkBase<?> sink) {_		checkNotNull(jobName, "The data sink must not be null.")__		_		if (!this.sinks.contains(sink)) {_			this.sinks.add(sink)__		}_	};adds,a,data,sink,to,the,set,of,sinks,in,this,program,param,sink,the,data,sink,to,add;public,void,add,data,sink,generic,data,sink,base,sink,check,not,null,job,name,the,data,sink,must,not,be,null,if,this,sinks,contains,sink,this,sinks,add,sink
Plan -> public void addDataSink(GenericDataSinkBase<?> sink);1444215406;Adds a data sink to the set of sinks in this program.__@param sink The data sink to add.;public void addDataSink(GenericDataSinkBase<?> sink) {_		checkNotNull(jobName, "The data sink must not be null.")__		_		if (!this.sinks.contains(sink)) {_			this.sinks.add(sink)__		}_	};adds,a,data,sink,to,the,set,of,sinks,in,this,program,param,sink,the,data,sink,to,add;public,void,add,data,sink,generic,data,sink,base,sink,check,not,null,job,name,the,data,sink,must,not,be,null,if,this,sinks,contains,sink,this,sinks,add,sink
Plan -> public void addDataSink(GenericDataSinkBase<?> sink);1449526184;Adds a data sink to the set of sinks in this program.__@param sink The data sink to add.;public void addDataSink(GenericDataSinkBase<?> sink) {_		checkNotNull(jobName, "The data sink must not be null.")__		_		if (!this.sinks.contains(sink)) {_			this.sinks.add(sink)__		}_	};adds,a,data,sink,to,the,set,of,sinks,in,this,program,param,sink,the,data,sink,to,add;public,void,add,data,sink,generic,data,sink,base,sink,check,not,null,job,name,the,data,sink,must,not,be,null,if,this,sinks,contains,sink,this,sinks,add,sink
Plan -> public void addDataSink(GenericDataSinkBase<?> sink);1455479358;Adds a data sink to the set of sinks in this program.__@param sink The data sink to add.;public void addDataSink(GenericDataSinkBase<?> sink) {_		checkNotNull(jobName, "The data sink must not be null.")__		_		if (!this.sinks.contains(sink)) {_			this.sinks.add(sink)__		}_	};adds,a,data,sink,to,the,set,of,sinks,in,this,program,param,sink,the,data,sink,to,add;public,void,add,data,sink,generic,data,sink,base,sink,check,not,null,job,name,the,data,sink,must,not,be,null,if,this,sinks,contains,sink,this,sinks,add,sink
Plan -> public void addDataSink(GenericDataSinkBase<?> sink);1455548285;Adds a data sink to the set of sinks in this program.__@param sink The data sink to add.;public void addDataSink(GenericDataSinkBase<?> sink) {_		checkNotNull(jobName, "The data sink must not be null.")__		_		if (!this.sinks.contains(sink)) {_			this.sinks.add(sink)__		}_	};adds,a,data,sink,to,the,set,of,sinks,in,this,program,param,sink,the,data,sink,to,add;public,void,add,data,sink,generic,data,sink,base,sink,check,not,null,job,name,the,data,sink,must,not,be,null,if,this,sinks,contains,sink,this,sinks,add,sink
Plan -> public void addDataSink(GenericDataSinkBase<?> sink);1457737669;Adds a data sink to the set of sinks in this program.__@param sink The data sink to add.;public void addDataSink(GenericDataSinkBase<?> sink) {_		checkNotNull(jobName, "The data sink must not be null.")__		_		if (!this.sinks.contains(sink)) {_			this.sinks.add(sink)__		}_	};adds,a,data,sink,to,the,set,of,sinks,in,this,program,param,sink,the,data,sink,to,add;public,void,add,data,sink,generic,data,sink,base,sink,check,not,null,job,name,the,data,sink,must,not,be,null,if,this,sinks,contains,sink,this,sinks,add,sink
Plan -> public void addDataSink(GenericDataSinkBase<?> sink);1460472696;Adds a data sink to the set of sinks in this program.__@param sink The data sink to add.;public void addDataSink(GenericDataSinkBase<?> sink) {_		checkNotNull(jobName, "The data sink must not be null.")__		_		if (!this.sinks.contains(sink)) {_			this.sinks.add(sink)__		}_	};adds,a,data,sink,to,the,set,of,sinks,in,this,program,param,sink,the,data,sink,to,add;public,void,add,data,sink,generic,data,sink,base,sink,check,not,null,job,name,the,data,sink,must,not,be,null,if,this,sinks,contains,sink,this,sinks,add,sink
Plan -> public void addDataSink(GenericDataSinkBase<?> sink);1460563153;Adds a data sink to the set of sinks in this program.__@param sink The data sink to add.;public void addDataSink(GenericDataSinkBase<?> sink) {_		checkNotNull(jobName, "The data sink must not be null.")__		_		if (!this.sinks.contains(sink)) {_			this.sinks.add(sink)__		}_	};adds,a,data,sink,to,the,set,of,sinks,in,this,program,param,sink,the,data,sink,to,add;public,void,add,data,sink,generic,data,sink,base,sink,check,not,null,job,name,the,data,sink,must,not,be,null,if,this,sinks,contains,sink,this,sinks,add,sink
Plan -> public void addDataSink(GenericDataSinkBase<?> sink);1460741894;Adds a data sink to the set of sinks in this program.__@param sink The data sink to add.;public void addDataSink(GenericDataSinkBase<?> sink) {_		checkNotNull(jobName, "The data sink must not be null.")__		_		if (!this.sinks.contains(sink)) {_			this.sinks.add(sink)__		}_	};adds,a,data,sink,to,the,set,of,sinks,in,this,program,param,sink,the,data,sink,to,add;public,void,add,data,sink,generic,data,sink,base,sink,check,not,null,job,name,the,data,sink,must,not,be,null,if,this,sinks,contains,sink,this,sinks,add,sink
Plan -> public void addDataSink(GenericDataSinkBase<?> sink);1500974874;Adds a data sink to the set of sinks in this program.__@param sink The data sink to add.;public void addDataSink(GenericDataSinkBase<?> sink) {_		checkNotNull(sink, "The data sink must not be null.")__		_		if (!this.sinks.contains(sink)) {_			this.sinks.add(sink)__		}_	};adds,a,data,sink,to,the,set,of,sinks,in,this,program,param,sink,the,data,sink,to,add;public,void,add,data,sink,generic,data,sink,base,sink,check,not,null,sink,the,data,sink,must,not,be,null,if,this,sinks,contains,sink,this,sinks,add,sink
Plan -> public void addDataSink(GenericDataSinkBase<?> sink);1529583969;Adds a data sink to the set of sinks in this program.__@param sink The data sink to add.;public void addDataSink(GenericDataSinkBase<?> sink) {_		checkNotNull(sink, "The data sink must not be null.")__		_		if (!this.sinks.contains(sink)) {_			this.sinks.add(sink)__		}_	};adds,a,data,sink,to,the,set,of,sinks,in,this,program,param,sink,the,data,sink,to,add;public,void,add,data,sink,generic,data,sink,base,sink,check,not,null,sink,the,data,sink,must,not,be,null,if,this,sinks,contains,sink,this,sinks,add,sink
Plan -> public void addDataSink(GenericDataSinkBase<?> sink);1544793776;Adds a data sink to the set of sinks in this program.__@param sink The data sink to add.;public void addDataSink(GenericDataSinkBase<?> sink) {_		checkNotNull(sink, "The data sink must not be null.")__		_		if (!this.sinks.contains(sink)) {_			this.sinks.add(sink)__		}_	};adds,a,data,sink,to,the,set,of,sinks,in,this,program,param,sink,the,data,sink,to,add;public,void,add,data,sink,generic,data,sink,base,sink,check,not,null,sink,the,data,sink,must,not,be,null,if,this,sinks,contains,sink,this,sinks,add,sink
Plan -> public void setDefaultParallelism(int defaultParallelism);1405024514;Sets the default degree of parallelism for this plan. That degree is always used when an operator_is not explicitly given a degree of parallelism.__@param defaultParallelism The default parallelism for the plan.;public void setDefaultParallelism(int defaultParallelism) {_		checkArgument(defaultParallelism >= 1 || defaultParallelism == -1,_			"The default degree of parallelism must be positive, or -1 if the system should use the globally comfigured default.")__		_		this.defaultParallelism = defaultParallelism__	};sets,the,default,degree,of,parallelism,for,this,plan,that,degree,is,always,used,when,an,operator,is,not,explicitly,given,a,degree,of,parallelism,param,default,parallelism,the,default,parallelism,for,the,plan;public,void,set,default,parallelism,int,default,parallelism,check,argument,default,parallelism,1,default,parallelism,1,the,default,degree,of,parallelism,must,be,positive,or,1,if,the,system,should,use,the,globally,comfigured,default,this,default,parallelism,default,parallelism
Plan -> public void setDefaultParallelism(int defaultParallelism);1405090423;Sets the default degree of parallelism for this plan. That degree is always used when an operator_is not explicitly given a degree of parallelism.__@param defaultParallelism The default parallelism for the plan.;public void setDefaultParallelism(int defaultParallelism) {_		checkArgument(defaultParallelism >= 1 || defaultParallelism == -1,_			"The default degree of parallelism must be positive, or -1 if the system should use the globally comfigured default.")__		_		this.defaultParallelism = defaultParallelism__	};sets,the,default,degree,of,parallelism,for,this,plan,that,degree,is,always,used,when,an,operator,is,not,explicitly,given,a,degree,of,parallelism,param,default,parallelism,the,default,parallelism,for,the,plan;public,void,set,default,parallelism,int,default,parallelism,check,argument,default,parallelism,1,default,parallelism,1,the,default,degree,of,parallelism,must,be,positive,or,1,if,the,system,should,use,the,globally,comfigured,default,this,default,parallelism,default,parallelism
Plan -> public void setDefaultParallelism(int defaultParallelism);1411473593;Sets the default degree of parallelism for this plan. That degree is always used when an operator_is not explicitly given a degree of parallelism.__@param defaultParallelism The default parallelism for the plan.;public void setDefaultParallelism(int defaultParallelism) {_		checkArgument(defaultParallelism >= 1 || defaultParallelism == -1,_			"The default degree of parallelism must be positive, or -1 if the system should use the globally comfigured default.")__		_		this.defaultParallelism = defaultParallelism__	};sets,the,default,degree,of,parallelism,for,this,plan,that,degree,is,always,used,when,an,operator,is,not,explicitly,given,a,degree,of,parallelism,param,default,parallelism,the,default,parallelism,for,the,plan;public,void,set,default,parallelism,int,default,parallelism,check,argument,default,parallelism,1,default,parallelism,1,the,default,degree,of,parallelism,must,be,positive,or,1,if,the,system,should,use,the,globally,comfigured,default,this,default,parallelism,default,parallelism
Plan -> public void setDefaultParallelism(int defaultParallelism);1412346153;Sets the default degree of parallelism for this plan. That degree is always used when an operator_is not explicitly given a degree of parallelism.__@param defaultParallelism The default parallelism for the plan.;public void setDefaultParallelism(int defaultParallelism) {_		checkArgument(defaultParallelism >= 1 || defaultParallelism == -1,_			"The default degree of parallelism must be positive, or -1 if the system should use the globally comfigured default.")__		_		this.defaultParallelism = defaultParallelism__	};sets,the,default,degree,of,parallelism,for,this,plan,that,degree,is,always,used,when,an,operator,is,not,explicitly,given,a,degree,of,parallelism,param,default,parallelism,the,default,parallelism,for,the,plan;public,void,set,default,parallelism,int,default,parallelism,check,argument,default,parallelism,1,default,parallelism,1,the,default,degree,of,parallelism,must,be,positive,or,1,if,the,system,should,use,the,globally,comfigured,default,this,default,parallelism,default,parallelism
Plan -> public void setDefaultParallelism(int defaultParallelism);1415027294;Sets the default degree of parallelism for this plan. That degree is always used when an operator_is not explicitly given a degree of parallelism.__@param defaultParallelism The default parallelism for the plan.;public void setDefaultParallelism(int defaultParallelism) {_		checkArgument(defaultParallelism >= 1 || defaultParallelism == -1,_			"The default degree of parallelism must be positive, or -1 if the system should use the globally comfigured default.")__		_		this.defaultParallelism = defaultParallelism__	};sets,the,default,degree,of,parallelism,for,this,plan,that,degree,is,always,used,when,an,operator,is,not,explicitly,given,a,degree,of,parallelism,param,default,parallelism,the,default,parallelism,for,the,plan;public,void,set,default,parallelism,int,default,parallelism,check,argument,default,parallelism,1,default,parallelism,1,the,default,degree,of,parallelism,must,be,positive,or,1,if,the,system,should,use,the,globally,comfigured,default,this,default,parallelism,default,parallelism
Plan -> public void setDefaultParallelism(int defaultParallelism);1420654570;Sets the default degree of parallelism for this plan. That degree is always used when an operator_is not explicitly given a degree of parallelism.__@param defaultParallelism The default parallelism for the plan.;public void setDefaultParallelism(int defaultParallelism) {_		checkArgument(defaultParallelism >= 1 || defaultParallelism == -1,_			"The default degree of parallelism must be positive, or -1 if the system should use the globally comfigured default.")__		_		this.defaultParallelism = defaultParallelism__	};sets,the,default,degree,of,parallelism,for,this,plan,that,degree,is,always,used,when,an,operator,is,not,explicitly,given,a,degree,of,parallelism,param,default,parallelism,the,default,parallelism,for,the,plan;public,void,set,default,parallelism,int,default,parallelism,check,argument,default,parallelism,1,default,parallelism,1,the,default,degree,of,parallelism,must,be,positive,or,1,if,the,system,should,use,the,globally,comfigured,default,this,default,parallelism,default,parallelism
Plan -> public void setDefaultParallelism(int defaultParallelism);1420663430;Sets the default degree of parallelism for this plan. That degree is always used when an operator_is not explicitly given a degree of parallelism.__@param defaultParallelism The default parallelism for the plan.;public void setDefaultParallelism(int defaultParallelism) {_		checkArgument(defaultParallelism >= 1 || defaultParallelism == -1,_			"The default degree of parallelism must be positive, or -1 if the system should use the globally comfigured default.")__		_		this.defaultParallelism = defaultParallelism__	};sets,the,default,degree,of,parallelism,for,this,plan,that,degree,is,always,used,when,an,operator,is,not,explicitly,given,a,degree,of,parallelism,param,default,parallelism,the,default,parallelism,for,the,plan;public,void,set,default,parallelism,int,default,parallelism,check,argument,default,parallelism,1,default,parallelism,1,the,default,degree,of,parallelism,must,be,positive,or,1,if,the,system,should,use,the,globally,comfigured,default,this,default,parallelism,default,parallelism
Plan -> public void setDefaultParallelism(int defaultParallelism);1424115592;Sets the default degree of parallelism for this plan. That degree is always used when an operator_is not explicitly given a degree of parallelism.__@param defaultParallelism The default parallelism for the plan.;public void setDefaultParallelism(int defaultParallelism) {_		checkArgument(defaultParallelism >= 1 || defaultParallelism == -1,_			"The default degree of parallelism must be positive, or -1 if the system should use the globally comfigured default.")__		_		this.defaultParallelism = defaultParallelism__	};sets,the,default,degree,of,parallelism,for,this,plan,that,degree,is,always,used,when,an,operator,is,not,explicitly,given,a,degree,of,parallelism,param,default,parallelism,the,default,parallelism,for,the,plan;public,void,set,default,parallelism,int,default,parallelism,check,argument,default,parallelism,1,default,parallelism,1,the,default,degree,of,parallelism,must,be,positive,or,1,if,the,system,should,use,the,globally,comfigured,default,this,default,parallelism,default,parallelism
Plan -> public void setDefaultParallelism(int defaultParallelism);1426843273;Sets the default degree of parallelism for this plan. That degree is always used when an operator_is not explicitly given a degree of parallelism.__@param defaultParallelism The default parallelism for the plan.;public void setDefaultParallelism(int defaultParallelism) {_		checkArgument(defaultParallelism >= 1 || defaultParallelism == -1,_			"The default degree of parallelism must be positive, or -1 if the system should use the globally comfigured default.")__		_		this.defaultParallelism = defaultParallelism__	};sets,the,default,degree,of,parallelism,for,this,plan,that,degree,is,always,used,when,an,operator,is,not,explicitly,given,a,degree,of,parallelism,param,default,parallelism,the,default,parallelism,for,the,plan;public,void,set,default,parallelism,int,default,parallelism,check,argument,default,parallelism,1,default,parallelism,1,the,default,degree,of,parallelism,must,be,positive,or,1,if,the,system,should,use,the,globally,comfigured,default,this,default,parallelism,default,parallelism
Plan -> public void setDefaultParallelism(int defaultParallelism);1427097830;Sets the default parallelism for this plan. That degree is always used when an operator_is not explicitly given a parallelism.__@param defaultParallelism The default parallelism for the plan.;public void setDefaultParallelism(int defaultParallelism) {_		checkArgument(defaultParallelism >= 1 || defaultParallelism == -1,_			"The default parallelism must be positive, or -1 if the system should use the globally comfigured default.")__		_		this.defaultParallelism = defaultParallelism__	};sets,the,default,parallelism,for,this,plan,that,degree,is,always,used,when,an,operator,is,not,explicitly,given,a,parallelism,param,default,parallelism,the,default,parallelism,for,the,plan;public,void,set,default,parallelism,int,default,parallelism,check,argument,default,parallelism,1,default,parallelism,1,the,default,parallelism,must,be,positive,or,1,if,the,system,should,use,the,globally,comfigured,default,this,default,parallelism,default,parallelism
Plan -> public void setDefaultParallelism(int defaultParallelism);1431703039;Sets the default parallelism for this plan. That degree is always used when an operator_is not explicitly given a parallelism.__@param defaultParallelism The default parallelism for the plan.;public void setDefaultParallelism(int defaultParallelism) {_		checkArgument(defaultParallelism >= 1 || defaultParallelism == -1,_			"The default parallelism must be positive, or -1 if the system should use the globally comfigured default.")__		_		this.defaultParallelism = defaultParallelism__	};sets,the,default,parallelism,for,this,plan,that,degree,is,always,used,when,an,operator,is,not,explicitly,given,a,parallelism,param,default,parallelism,the,default,parallelism,for,the,plan;public,void,set,default,parallelism,int,default,parallelism,check,argument,default,parallelism,1,default,parallelism,1,the,default,parallelism,must,be,positive,or,1,if,the,system,should,use,the,globally,comfigured,default,this,default,parallelism,default,parallelism
Plan -> public void setDefaultParallelism(int defaultParallelism);1442944546;Sets the default parallelism for this plan. That degree is always used when an operator_is not explicitly given a parallelism.__@param defaultParallelism The default parallelism for the plan.;public void setDefaultParallelism(int defaultParallelism) {_		checkArgument(defaultParallelism >= 1 || defaultParallelism == -1,_			"The default parallelism must be positive, or -1 if the system should use the globally comfigured default.")__		_		this.defaultParallelism = defaultParallelism__	};sets,the,default,parallelism,for,this,plan,that,degree,is,always,used,when,an,operator,is,not,explicitly,given,a,parallelism,param,default,parallelism,the,default,parallelism,for,the,plan;public,void,set,default,parallelism,int,default,parallelism,check,argument,default,parallelism,1,default,parallelism,1,the,default,parallelism,must,be,positive,or,1,if,the,system,should,use,the,globally,comfigured,default,this,default,parallelism,default,parallelism
Plan -> public void setDefaultParallelism(int defaultParallelism);1444215406;Sets the default parallelism for this plan. That degree is always used when an operator_is not explicitly given a parallelism.__@param defaultParallelism The default parallelism for the plan.;public void setDefaultParallelism(int defaultParallelism) {_		checkArgument(defaultParallelism >= 1 || defaultParallelism == -1,_			"The default parallelism must be positive, or -1 if the system should use the globally comfigured default.")__		_		this.defaultParallelism = defaultParallelism__	};sets,the,default,parallelism,for,this,plan,that,degree,is,always,used,when,an,operator,is,not,explicitly,given,a,parallelism,param,default,parallelism,the,default,parallelism,for,the,plan;public,void,set,default,parallelism,int,default,parallelism,check,argument,default,parallelism,1,default,parallelism,1,the,default,parallelism,must,be,positive,or,1,if,the,system,should,use,the,globally,comfigured,default,this,default,parallelism,default,parallelism
Plan -> public void setDefaultParallelism(int defaultParallelism);1449526184;Sets the default parallelism for this plan. That degree is always used when an operator_is not explicitly given a parallelism.__@param defaultParallelism The default parallelism for the plan.;public void setDefaultParallelism(int defaultParallelism) {_		checkArgument(defaultParallelism >= 1 || defaultParallelism == -1,_			"The default parallelism must be positive, or -1 if the system should use the globally comfigured default.")__		_		this.defaultParallelism = defaultParallelism__	};sets,the,default,parallelism,for,this,plan,that,degree,is,always,used,when,an,operator,is,not,explicitly,given,a,parallelism,param,default,parallelism,the,default,parallelism,for,the,plan;public,void,set,default,parallelism,int,default,parallelism,check,argument,default,parallelism,1,default,parallelism,1,the,default,parallelism,must,be,positive,or,1,if,the,system,should,use,the,globally,comfigured,default,this,default,parallelism,default,parallelism
Plan -> public void setDefaultParallelism(int defaultParallelism);1455479358;Sets the default parallelism for this plan. That degree is always used when an operator_is not explicitly given a parallelism.__@param defaultParallelism The default parallelism for the plan.;public void setDefaultParallelism(int defaultParallelism) {_		checkArgument(defaultParallelism >= 1 || defaultParallelism == -1,_			"The default parallelism must be positive, or -1 if the system should use the globally comfigured default.")__		_		this.defaultParallelism = defaultParallelism__	};sets,the,default,parallelism,for,this,plan,that,degree,is,always,used,when,an,operator,is,not,explicitly,given,a,parallelism,param,default,parallelism,the,default,parallelism,for,the,plan;public,void,set,default,parallelism,int,default,parallelism,check,argument,default,parallelism,1,default,parallelism,1,the,default,parallelism,must,be,positive,or,1,if,the,system,should,use,the,globally,comfigured,default,this,default,parallelism,default,parallelism
Plan -> public void setDefaultParallelism(int defaultParallelism);1455548285;Sets the default parallelism for this plan. That degree is always used when an operator_is not explicitly given a parallelism.__@param defaultParallelism The default parallelism for the plan.;public void setDefaultParallelism(int defaultParallelism) {_		checkArgument(defaultParallelism >= 1 || defaultParallelism == -1,_			"The default parallelism must be positive, or -1 if the system should use the globally comfigured default.")__		_		this.defaultParallelism = defaultParallelism__	};sets,the,default,parallelism,for,this,plan,that,degree,is,always,used,when,an,operator,is,not,explicitly,given,a,parallelism,param,default,parallelism,the,default,parallelism,for,the,plan;public,void,set,default,parallelism,int,default,parallelism,check,argument,default,parallelism,1,default,parallelism,1,the,default,parallelism,must,be,positive,or,1,if,the,system,should,use,the,globally,comfigured,default,this,default,parallelism,default,parallelism
Plan -> public void setDefaultParallelism(int defaultParallelism);1457737669;Sets the default parallelism for this plan. That degree is always used when an operator_is not explicitly given a parallelism.__@param defaultParallelism The default parallelism for the plan.;public void setDefaultParallelism(int defaultParallelism) {_		checkArgument(defaultParallelism >= 1 || defaultParallelism == -1,_			"The default parallelism must be positive, or -1 if the system should use the globally comfigured default.")__		_		this.defaultParallelism = defaultParallelism__	};sets,the,default,parallelism,for,this,plan,that,degree,is,always,used,when,an,operator,is,not,explicitly,given,a,parallelism,param,default,parallelism,the,default,parallelism,for,the,plan;public,void,set,default,parallelism,int,default,parallelism,check,argument,default,parallelism,1,default,parallelism,1,the,default,parallelism,must,be,positive,or,1,if,the,system,should,use,the,globally,comfigured,default,this,default,parallelism,default,parallelism
Plan -> public void setDefaultParallelism(int defaultParallelism);1460472696;Sets the default parallelism for this plan. That degree is always used when an operator_is not explicitly given a parallelism.__@param defaultParallelism The default parallelism for the plan.;public void setDefaultParallelism(int defaultParallelism) {_		checkArgument(defaultParallelism >= 1 || defaultParallelism == -1,_			"The default parallelism must be positive, or -1 if the system should use the globally configured default.")__		_		this.defaultParallelism = defaultParallelism__	};sets,the,default,parallelism,for,this,plan,that,degree,is,always,used,when,an,operator,is,not,explicitly,given,a,parallelism,param,default,parallelism,the,default,parallelism,for,the,plan;public,void,set,default,parallelism,int,default,parallelism,check,argument,default,parallelism,1,default,parallelism,1,the,default,parallelism,must,be,positive,or,1,if,the,system,should,use,the,globally,configured,default,this,default,parallelism,default,parallelism
Plan -> public void setDefaultParallelism(int defaultParallelism);1460563153;Sets the default parallelism for this plan. That degree is always used when an operator_is not explicitly given a parallelism.__@param defaultParallelism The default parallelism for the plan.;public void setDefaultParallelism(int defaultParallelism) {_		checkArgument(defaultParallelism >= 1 || defaultParallelism == ExecutionConfig.PARALLELISM_DEFAULT,_			"The default parallelism must be positive, or ExecutionConfig.PARALLELISM_DEFAULT if the system should use the globally configured default.")__		_		this.defaultParallelism = defaultParallelism__	};sets,the,default,parallelism,for,this,plan,that,degree,is,always,used,when,an,operator,is,not,explicitly,given,a,parallelism,param,default,parallelism,the,default,parallelism,for,the,plan;public,void,set,default,parallelism,int,default,parallelism,check,argument,default,parallelism,1,default,parallelism,execution,config,the,default,parallelism,must,be,positive,or,execution,config,if,the,system,should,use,the,globally,configured,default,this,default,parallelism,default,parallelism
Plan -> public void setDefaultParallelism(int defaultParallelism);1460741894;Sets the default parallelism for this plan. That degree is always used when an operator_is not explicitly given a parallelism.__@param defaultParallelism The default parallelism for the plan.;public void setDefaultParallelism(int defaultParallelism) {_		checkArgument(defaultParallelism >= 1 || defaultParallelism == ExecutionConfig.PARALLELISM_DEFAULT,_			"The default parallelism must be positive, or ExecutionConfig.PARALLELISM_DEFAULT if the system should use the globally configured default.")__		_		this.defaultParallelism = defaultParallelism__	};sets,the,default,parallelism,for,this,plan,that,degree,is,always,used,when,an,operator,is,not,explicitly,given,a,parallelism,param,default,parallelism,the,default,parallelism,for,the,plan;public,void,set,default,parallelism,int,default,parallelism,check,argument,default,parallelism,1,default,parallelism,execution,config,the,default,parallelism,must,be,positive,or,execution,config,if,the,system,should,use,the,globally,configured,default,this,default,parallelism,default,parallelism
Plan -> public void setDefaultParallelism(int defaultParallelism);1500974874;Sets the default parallelism for this plan. That degree is always used when an operator_is not explicitly given a parallelism.__@param defaultParallelism The default parallelism for the plan.;public void setDefaultParallelism(int defaultParallelism) {_		checkArgument(defaultParallelism >= 1 || defaultParallelism == ExecutionConfig.PARALLELISM_DEFAULT,_			"The default parallelism must be positive, or ExecutionConfig.PARALLELISM_DEFAULT if the system should use the globally configured default.")__		_		this.defaultParallelism = defaultParallelism__	};sets,the,default,parallelism,for,this,plan,that,degree,is,always,used,when,an,operator,is,not,explicitly,given,a,parallelism,param,default,parallelism,the,default,parallelism,for,the,plan;public,void,set,default,parallelism,int,default,parallelism,check,argument,default,parallelism,1,default,parallelism,execution,config,the,default,parallelism,must,be,positive,or,execution,config,if,the,system,should,use,the,globally,configured,default,this,default,parallelism,default,parallelism
Plan -> public void setDefaultParallelism(int defaultParallelism);1529583969;Sets the default parallelism for this plan. That degree is always used when an operator_is not explicitly given a parallelism.__@param defaultParallelism The default parallelism for the plan.;public void setDefaultParallelism(int defaultParallelism) {_		checkArgument(defaultParallelism >= 1 || defaultParallelism == ExecutionConfig.PARALLELISM_DEFAULT,_			"The default parallelism must be positive, or ExecutionConfig.PARALLELISM_DEFAULT if the system should use the globally configured default.")__		_		this.defaultParallelism = defaultParallelism__	};sets,the,default,parallelism,for,this,plan,that,degree,is,always,used,when,an,operator,is,not,explicitly,given,a,parallelism,param,default,parallelism,the,default,parallelism,for,the,plan;public,void,set,default,parallelism,int,default,parallelism,check,argument,default,parallelism,1,default,parallelism,execution,config,the,default,parallelism,must,be,positive,or,execution,config,if,the,system,should,use,the,globally,configured,default,this,default,parallelism,default,parallelism
Plan -> public void setDefaultParallelism(int defaultParallelism);1544793776;Sets the default parallelism for this plan. That degree is always used when an operator_is not explicitly given a parallelism.__@param defaultParallelism The default parallelism for the plan.;public void setDefaultParallelism(int defaultParallelism) {_		checkArgument(defaultParallelism >= 1 || defaultParallelism == ExecutionConfig.PARALLELISM_DEFAULT,_			"The default parallelism must be positive, or ExecutionConfig.PARALLELISM_DEFAULT if the system should use the globally configured default.")__		_		this.defaultParallelism = defaultParallelism__	};sets,the,default,parallelism,for,this,plan,that,degree,is,always,used,when,an,operator,is,not,explicitly,given,a,parallelism,param,default,parallelism,the,default,parallelism,for,the,plan;public,void,set,default,parallelism,int,default,parallelism,check,argument,default,parallelism,1,default,parallelism,execution,config,the,default,parallelism,must,be,positive,or,execution,config,if,the,system,should,use,the,globally,configured,default,this,default,parallelism,default,parallelism
Plan -> public ExecutionConfig getExecutionConfig();1420654570;Sets the runtime config object._@return;public ExecutionConfig getExecutionConfig() {_		return executionConfig__	};sets,the,runtime,config,object,return;public,execution,config,get,execution,config,return,execution,config
Plan -> public ExecutionConfig getExecutionConfig();1420663430;Gets the execution config object.__@return The execution config object.;public ExecutionConfig getExecutionConfig() {_		return executionConfig__	};gets,the,execution,config,object,return,the,execution,config,object;public,execution,config,get,execution,config,return,execution,config
Plan -> public ExecutionConfig getExecutionConfig();1424115592;Gets the execution config object.__@return The execution config object.;public ExecutionConfig getExecutionConfig() {_		return executionConfig__	};gets,the,execution,config,object,return,the,execution,config,object;public,execution,config,get,execution,config,return,execution,config
Plan -> public ExecutionConfig getExecutionConfig();1426843273;Gets the execution config object.__@return The execution config object.;public ExecutionConfig getExecutionConfig() {_		return executionConfig__	};gets,the,execution,config,object,return,the,execution,config,object;public,execution,config,get,execution,config,return,execution,config
Plan -> public ExecutionConfig getExecutionConfig();1427097830;Gets the execution config object.__@return The execution config object.;public ExecutionConfig getExecutionConfig() {_		return executionConfig__	};gets,the,execution,config,object,return,the,execution,config,object;public,execution,config,get,execution,config,return,execution,config
Plan -> public ExecutionConfig getExecutionConfig();1431703039;Gets the execution config object.__@return The execution config object.;public ExecutionConfig getExecutionConfig() {_		if(executionConfig == null) {_			throw new RuntimeException("Execution config has not been set properly for this plan")__		}_		return executionConfig__	};gets,the,execution,config,object,return,the,execution,config,object;public,execution,config,get,execution,config,if,execution,config,null,throw,new,runtime,exception,execution,config,has,not,been,set,properly,for,this,plan,return,execution,config
Plan -> public ExecutionConfig getExecutionConfig();1442944546;Gets the execution config object.__@return The execution config object.;public ExecutionConfig getExecutionConfig() {_		if(executionConfig == null) {_			throw new RuntimeException("Execution config has not been set properly for this plan")__		}_		return executionConfig__	};gets,the,execution,config,object,return,the,execution,config,object;public,execution,config,get,execution,config,if,execution,config,null,throw,new,runtime,exception,execution,config,has,not,been,set,properly,for,this,plan,return,execution,config
Plan -> public ExecutionConfig getExecutionConfig();1444215406;Gets the execution config object.__@return The execution config object.;public ExecutionConfig getExecutionConfig() {_		if(executionConfig == null) {_			throw new RuntimeException("Execution config has not been set properly for this plan")__		}_		return executionConfig__	};gets,the,execution,config,object,return,the,execution,config,object;public,execution,config,get,execution,config,if,execution,config,null,throw,new,runtime,exception,execution,config,has,not,been,set,properly,for,this,plan,return,execution,config
Plan -> public ExecutionConfig getExecutionConfig();1449526184;Gets the execution config object.__@return The execution config object.;public ExecutionConfig getExecutionConfig() {_		if(executionConfig == null) {_			throw new RuntimeException("Execution config has not been set properly for this plan")__		}_		return executionConfig__	};gets,the,execution,config,object,return,the,execution,config,object;public,execution,config,get,execution,config,if,execution,config,null,throw,new,runtime,exception,execution,config,has,not,been,set,properly,for,this,plan,return,execution,config
Plan -> public ExecutionConfig getExecutionConfig();1455479358;Gets the execution config object.__@return The execution config object.;public ExecutionConfig getExecutionConfig() {_		if(executionConfig == null) {_			throw new RuntimeException("Execution config has not been set properly for this plan")__		}_		return executionConfig__	};gets,the,execution,config,object,return,the,execution,config,object;public,execution,config,get,execution,config,if,execution,config,null,throw,new,runtime,exception,execution,config,has,not,been,set,properly,for,this,plan,return,execution,config
Plan -> public ExecutionConfig getExecutionConfig();1455548285;Gets the execution config object.__@return The execution config object.;public ExecutionConfig getExecutionConfig() {_		if(executionConfig == null) {_			throw new RuntimeException("Execution config has not been set properly for this plan")__		}_		return executionConfig__	};gets,the,execution,config,object,return,the,execution,config,object;public,execution,config,get,execution,config,if,execution,config,null,throw,new,runtime,exception,execution,config,has,not,been,set,properly,for,this,plan,return,execution,config
Plan -> public ExecutionConfig getExecutionConfig();1457737669;Gets the execution config object.__@return The execution config object.;public ExecutionConfig getExecutionConfig() {_		if(executionConfig == null) {_			throw new RuntimeException("Execution config has not been set properly for this plan")__		}_		return executionConfig__	};gets,the,execution,config,object,return,the,execution,config,object;public,execution,config,get,execution,config,if,execution,config,null,throw,new,runtime,exception,execution,config,has,not,been,set,properly,for,this,plan,return,execution,config
Plan -> public ExecutionConfig getExecutionConfig();1460472696;Gets the execution config object.__@return The execution config object.;public ExecutionConfig getExecutionConfig() {_		if(executionConfig == null) {_			throw new RuntimeException("Execution config has not been set properly for this plan")__		}_		return executionConfig__	};gets,the,execution,config,object,return,the,execution,config,object;public,execution,config,get,execution,config,if,execution,config,null,throw,new,runtime,exception,execution,config,has,not,been,set,properly,for,this,plan,return,execution,config
Plan -> public ExecutionConfig getExecutionConfig();1460563153;Gets the execution config object.__@return The execution config object.;public ExecutionConfig getExecutionConfig() {_		if(executionConfig == null) {_			throw new RuntimeException("Execution config has not been set properly for this plan")__		}_		return executionConfig__	};gets,the,execution,config,object,return,the,execution,config,object;public,execution,config,get,execution,config,if,execution,config,null,throw,new,runtime,exception,execution,config,has,not,been,set,properly,for,this,plan,return,execution,config
Plan -> public ExecutionConfig getExecutionConfig();1460741894;Gets the execution config object.__@return The execution config object.;public ExecutionConfig getExecutionConfig() {_		if(executionConfig == null) {_			throw new RuntimeException("Execution config has not been set properly for this plan")__		}_		return executionConfig__	};gets,the,execution,config,object,return,the,execution,config,object;public,execution,config,get,execution,config,if,execution,config,null,throw,new,runtime,exception,execution,config,has,not,been,set,properly,for,this,plan,return,execution,config
Plan -> public ExecutionConfig getExecutionConfig();1500974874;Gets the execution config object.__@return The execution config object.;public ExecutionConfig getExecutionConfig() {_		if(executionConfig == null) {_			throw new RuntimeException("Execution config has not been set properly for this plan")__		}_		return executionConfig__	};gets,the,execution,config,object,return,the,execution,config,object;public,execution,config,get,execution,config,if,execution,config,null,throw,new,runtime,exception,execution,config,has,not,been,set,properly,for,this,plan,return,execution,config
Plan -> public ExecutionConfig getExecutionConfig();1529583969;Gets the execution config object.__@return The execution config object.;public ExecutionConfig getExecutionConfig() {_		if(executionConfig == null) {_			throw new RuntimeException("Execution config has not been set properly for this plan")__		}_		return executionConfig__	};gets,the,execution,config,object,return,the,execution,config,object;public,execution,config,get,execution,config,if,execution,config,null,throw,new,runtime,exception,execution,config,has,not,been,set,properly,for,this,plan,return,execution,config
Plan -> public ExecutionConfig getExecutionConfig();1544793776;Gets the execution config object.__@return The execution config object.;public ExecutionConfig getExecutionConfig() {_		if(executionConfig == null) {_			throw new RuntimeException("Execution config has not been set properly for this plan")__		}_		return executionConfig__	};gets,the,execution,config,object,return,the,execution,config,object;public,execution,config,get,execution,config,if,execution,config,null,throw,new,runtime,exception,execution,config,has,not,been,set,properly,for,this,plan,return,execution,config
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName);1405024514;Creates a new program plan with the given name, describing the data flow that ends at the_given data sinks._<p>_If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.__@param sinks The collection will the sinks of the job's data flow._@param jobName The name to display for the job.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName) {_		this(sinks, jobName, DEFAULT_PARALELLISM)__	};creates,a,new,program,plan,with,the,given,name,describing,the,data,flow,that,ends,at,the,given,data,sinks,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,param,sinks,the,collection,will,the,sinks,of,the,job,s,data,flow,param,job,name,the,name,to,display,for,the,job;public,plan,collection,extends,generic,data,sink,base,sinks,string,job,name,this,sinks,job,name
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName);1405090423;Creates a new program plan with the given name, describing the data flow that ends at the_given data sinks._<p>_If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.__@param sinks The collection will the sinks of the job's data flow._@param jobName The name to display for the job.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName) {_		this(sinks, jobName, DEFAULT_PARALELLISM)__	};creates,a,new,program,plan,with,the,given,name,describing,the,data,flow,that,ends,at,the,given,data,sinks,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,param,sinks,the,collection,will,the,sinks,of,the,job,s,data,flow,param,job,name,the,name,to,display,for,the,job;public,plan,collection,extends,generic,data,sink,base,sinks,string,job,name,this,sinks,job,name
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName);1411473593;Creates a new program plan with the given name, describing the data flow that ends at the_given data sinks._<p>_If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.__@param sinks The collection will the sinks of the job's data flow._@param jobName The name to display for the job.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName) {_		this(sinks, jobName, DEFAULT_PARALELLISM)__	};creates,a,new,program,plan,with,the,given,name,describing,the,data,flow,that,ends,at,the,given,data,sinks,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,param,sinks,the,collection,will,the,sinks,of,the,job,s,data,flow,param,job,name,the,name,to,display,for,the,job;public,plan,collection,extends,generic,data,sink,base,sinks,string,job,name,this,sinks,job,name
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName);1412346153;Creates a new program plan with the given name, describing the data flow that ends at the_given data sinks._<p>_If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.__@param sinks The collection will the sinks of the job's data flow._@param jobName The name to display for the job.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName) {_		this(sinks, jobName, DEFAULT_PARALELLISM)__	};creates,a,new,program,plan,with,the,given,name,describing,the,data,flow,that,ends,at,the,given,data,sinks,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,param,sinks,the,collection,will,the,sinks,of,the,job,s,data,flow,param,job,name,the,name,to,display,for,the,job;public,plan,collection,extends,generic,data,sink,base,sinks,string,job,name,this,sinks,job,name
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName);1415027294;Creates a new program plan with the given name, describing the data flow that ends at the_given data sinks._<p>_If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.__@param sinks The collection will the sinks of the job's data flow._@param jobName The name to display for the job.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName) {_		this(sinks, jobName, DEFAULT_PARALELLISM)__	};creates,a,new,program,plan,with,the,given,name,describing,the,data,flow,that,ends,at,the,given,data,sinks,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,param,sinks,the,collection,will,the,sinks,of,the,job,s,data,flow,param,job,name,the,name,to,display,for,the,job;public,plan,collection,extends,generic,data,sink,base,sinks,string,job,name,this,sinks,job,name
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName);1420654570;Creates a new program plan with the given name, describing the data flow that ends at the_given data sinks._<p>_If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.__@param sinks The collection will the sinks of the job's data flow._@param jobName The name to display for the job.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName) {_		this(sinks, jobName, DEFAULT_PARALELLISM)__	};creates,a,new,program,plan,with,the,given,name,describing,the,data,flow,that,ends,at,the,given,data,sinks,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,param,sinks,the,collection,will,the,sinks,of,the,job,s,data,flow,param,job,name,the,name,to,display,for,the,job;public,plan,collection,extends,generic,data,sink,base,sinks,string,job,name,this,sinks,job,name
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName);1420663430;Creates a new program plan with the given name, describing the data flow that ends at the_given data sinks._<p>_If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.__@param sinks The collection will the sinks of the job's data flow._@param jobName The name to display for the job.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName) {_		this(sinks, jobName, DEFAULT_PARALELLISM)__	};creates,a,new,program,plan,with,the,given,name,describing,the,data,flow,that,ends,at,the,given,data,sinks,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,param,sinks,the,collection,will,the,sinks,of,the,job,s,data,flow,param,job,name,the,name,to,display,for,the,job;public,plan,collection,extends,generic,data,sink,base,sinks,string,job,name,this,sinks,job,name
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName);1424115592;Creates a new program plan with the given name, describing the data flow that ends at the_given data sinks._<p>_If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.__@param sinks The collection will the sinks of the job's data flow._@param jobName The name to display for the job.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName) {_		this(sinks, jobName, DEFAULT_PARALELLISM)__	};creates,a,new,program,plan,with,the,given,name,describing,the,data,flow,that,ends,at,the,given,data,sinks,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,param,sinks,the,collection,will,the,sinks,of,the,job,s,data,flow,param,job,name,the,name,to,display,for,the,job;public,plan,collection,extends,generic,data,sink,base,sinks,string,job,name,this,sinks,job,name
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName);1426843273;Creates a new program plan with the given name, describing the data flow that ends at the_given data sinks._<p>_If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.__@param sinks The collection will the sinks of the job's data flow._@param jobName The name to display for the job.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName) {_		this(sinks, jobName, DEFAULT_PARALELLISM)__	};creates,a,new,program,plan,with,the,given,name,describing,the,data,flow,that,ends,at,the,given,data,sinks,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,param,sinks,the,collection,will,the,sinks,of,the,job,s,data,flow,param,job,name,the,name,to,display,for,the,job;public,plan,collection,extends,generic,data,sink,base,sinks,string,job,name,this,sinks,job,name
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName);1427097830;Creates a new program plan with the given name, describing the data flow that ends at the_given data sinks._<p>_If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.__@param sinks The collection will the sinks of the job's data flow._@param jobName The name to display for the job.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName) {_		this(sinks, jobName, DEFAULT_PARALELLISM)__	};creates,a,new,program,plan,with,the,given,name,describing,the,data,flow,that,ends,at,the,given,data,sinks,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,param,sinks,the,collection,will,the,sinks,of,the,job,s,data,flow,param,job,name,the,name,to,display,for,the,job;public,plan,collection,extends,generic,data,sink,base,sinks,string,job,name,this,sinks,job,name
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName);1431703039;Creates a new program plan with the given name, describing the data flow that ends at the_given data sinks._<p>_If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.__@param sinks The collection will the sinks of the job's data flow._@param jobName The name to display for the job.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName) {_		this(sinks, jobName, DEFAULT_PARALELLISM)__	};creates,a,new,program,plan,with,the,given,name,describing,the,data,flow,that,ends,at,the,given,data,sinks,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,param,sinks,the,collection,will,the,sinks,of,the,job,s,data,flow,param,job,name,the,name,to,display,for,the,job;public,plan,collection,extends,generic,data,sink,base,sinks,string,job,name,this,sinks,job,name
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName);1442944546;Creates a new dataflow plan with the given name, describing the data flow that ends at the_given data sinks.__<p>If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.</p>__@param sinks The collection will the sinks of the job's data flow._@param jobName The name to display for the job.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName) {_		this(sinks, jobName, DEFAULT_PARALELLISM)__	};creates,a,new,dataflow,plan,with,the,given,name,describing,the,data,flow,that,ends,at,the,given,data,sinks,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,p,param,sinks,the,collection,will,the,sinks,of,the,job,s,data,flow,param,job,name,the,name,to,display,for,the,job;public,plan,collection,extends,generic,data,sink,base,sinks,string,job,name,this,sinks,job,name
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName);1444215406;Creates a new dataflow plan with the given name, describing the data flow that ends at the_given data sinks.__<p>If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.</p>__@param sinks The collection will the sinks of the job's data flow._@param jobName The name to display for the job.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName) {_		this(sinks, jobName, DEFAULT_PARALELLISM)__	};creates,a,new,dataflow,plan,with,the,given,name,describing,the,data,flow,that,ends,at,the,given,data,sinks,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,p,param,sinks,the,collection,will,the,sinks,of,the,job,s,data,flow,param,job,name,the,name,to,display,for,the,job;public,plan,collection,extends,generic,data,sink,base,sinks,string,job,name,this,sinks,job,name
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName);1449526184;Creates a new dataflow plan with the given name, describing the data flow that ends at the_given data sinks.__<p>If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.</p>__@param sinks The collection will the sinks of the job's data flow._@param jobName The name to display for the job.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName) {_		this(sinks, jobName, DEFAULT_PARALELLISM)__	};creates,a,new,dataflow,plan,with,the,given,name,describing,the,data,flow,that,ends,at,the,given,data,sinks,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,p,param,sinks,the,collection,will,the,sinks,of,the,job,s,data,flow,param,job,name,the,name,to,display,for,the,job;public,plan,collection,extends,generic,data,sink,base,sinks,string,job,name,this,sinks,job,name
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName);1455479358;Creates a new dataflow plan with the given name, describing the data flow that ends at the_given data sinks.__<p>If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.</p>__@param sinks The collection will the sinks of the job's data flow._@param jobName The name to display for the job.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName) {_		this(sinks, jobName, DEFAULT_PARALELLISM)__	};creates,a,new,dataflow,plan,with,the,given,name,describing,the,data,flow,that,ends,at,the,given,data,sinks,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,p,param,sinks,the,collection,will,the,sinks,of,the,job,s,data,flow,param,job,name,the,name,to,display,for,the,job;public,plan,collection,extends,generic,data,sink,base,sinks,string,job,name,this,sinks,job,name
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName);1455548285;Creates a new dataflow plan with the given name, describing the data flow that ends at the_given data sinks.__<p>If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.</p>__@param sinks The collection will the sinks of the job's data flow._@param jobName The name to display for the job.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName) {_		this(sinks, jobName, DEFAULT_PARALELLISM)__	};creates,a,new,dataflow,plan,with,the,given,name,describing,the,data,flow,that,ends,at,the,given,data,sinks,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,p,param,sinks,the,collection,will,the,sinks,of,the,job,s,data,flow,param,job,name,the,name,to,display,for,the,job;public,plan,collection,extends,generic,data,sink,base,sinks,string,job,name,this,sinks,job,name
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName);1457737669;Creates a new dataflow plan with the given name, describing the data flow that ends at the_given data sinks.__<p>If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.</p>__@param sinks The collection will the sinks of the job's data flow._@param jobName The name to display for the job.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName) {_		this(sinks, jobName, DEFAULT_PARALELLISM)__	};creates,a,new,dataflow,plan,with,the,given,name,describing,the,data,flow,that,ends,at,the,given,data,sinks,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,p,param,sinks,the,collection,will,the,sinks,of,the,job,s,data,flow,param,job,name,the,name,to,display,for,the,job;public,plan,collection,extends,generic,data,sink,base,sinks,string,job,name,this,sinks,job,name
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName);1460472696;Creates a new dataflow plan with the given name, describing the data flow that ends at the_given data sinks.__<p>If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.</p>__@param sinks The collection will the sinks of the job's data flow._@param jobName The name to display for the job.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName) {_		this(sinks, jobName, DEFAULT_PARALELLISM)__	};creates,a,new,dataflow,plan,with,the,given,name,describing,the,data,flow,that,ends,at,the,given,data,sinks,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,p,param,sinks,the,collection,will,the,sinks,of,the,job,s,data,flow,param,job,name,the,name,to,display,for,the,job;public,plan,collection,extends,generic,data,sink,base,sinks,string,job,name,this,sinks,job,name
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName);1460563153;Creates a new dataflow plan with the given name, describing the data flow that ends at the_given data sinks.__<p>If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.</p>__@param sinks The collection will the sinks of the job's data flow._@param jobName The name to display for the job.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName) {_		this(sinks, jobName, ExecutionConfig.PARALLELISM_DEFAULT)__	};creates,a,new,dataflow,plan,with,the,given,name,describing,the,data,flow,that,ends,at,the,given,data,sinks,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,p,param,sinks,the,collection,will,the,sinks,of,the,job,s,data,flow,param,job,name,the,name,to,display,for,the,job;public,plan,collection,extends,generic,data,sink,base,sinks,string,job,name,this,sinks,job,name,execution,config
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName);1460741894;Creates a new dataflow plan with the given name, describing the data flow that ends at the_given data sinks.__<p>If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.</p>__@param sinks The collection will the sinks of the job's data flow._@param jobName The name to display for the job.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName) {_		this(sinks, jobName, ExecutionConfig.PARALLELISM_DEFAULT)__	};creates,a,new,dataflow,plan,with,the,given,name,describing,the,data,flow,that,ends,at,the,given,data,sinks,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,p,param,sinks,the,collection,will,the,sinks,of,the,job,s,data,flow,param,job,name,the,name,to,display,for,the,job;public,plan,collection,extends,generic,data,sink,base,sinks,string,job,name,this,sinks,job,name,execution,config
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName);1500974874;Creates a new dataflow plan with the given name, describing the data flow that ends at the_given data sinks.__<p>If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.</p>__@param sinks The collection will the sinks of the job's data flow._@param jobName The name to display for the job.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName) {_		this(sinks, jobName, ExecutionConfig.PARALLELISM_DEFAULT)__	};creates,a,new,dataflow,plan,with,the,given,name,describing,the,data,flow,that,ends,at,the,given,data,sinks,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,p,param,sinks,the,collection,will,the,sinks,of,the,job,s,data,flow,param,job,name,the,name,to,display,for,the,job;public,plan,collection,extends,generic,data,sink,base,sinks,string,job,name,this,sinks,job,name,execution,config
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName);1529583969;Creates a new dataflow plan with the given name, describing the data flow that ends at the_given data sinks.__<p>If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.</p>__@param sinks The collection will the sinks of the job's data flow._@param jobName The name to display for the job.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName) {_		this(sinks, jobName, ExecutionConfig.PARALLELISM_DEFAULT)__	};creates,a,new,dataflow,plan,with,the,given,name,describing,the,data,flow,that,ends,at,the,given,data,sinks,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,p,param,sinks,the,collection,will,the,sinks,of,the,job,s,data,flow,param,job,name,the,name,to,display,for,the,job;public,plan,collection,extends,generic,data,sink,base,sinks,string,job,name,this,sinks,job,name,execution,config
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName);1544793776;Creates a new dataflow plan with the given name, describing the data flow that ends at the_given data sinks.__<p>If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.</p>__@param sinks The collection will the sinks of the job's data flow._@param jobName The name to display for the job.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, String jobName) {_		this(sinks, jobName, ExecutionConfig.PARALLELISM_DEFAULT)__	};creates,a,new,dataflow,plan,with,the,given,name,describing,the,data,flow,that,ends,at,the,given,data,sinks,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,p,param,sinks,the,collection,will,the,sinks,of,the,job,s,data,flow,param,job,name,the,name,to,display,for,the,job;public,plan,collection,extends,generic,data,sink,base,sinks,string,job,name,this,sinks,job,name,execution,config
Plan -> public String getJobName();1405024514;Gets the name of this job.__@return The name of the job.;public String getJobName() {_		return this.jobName__	};gets,the,name,of,this,job,return,the,name,of,the,job;public,string,get,job,name,return,this,job,name
Plan -> public String getJobName();1405090423;Gets the name of this job.__@return The name of the job.;public String getJobName() {_		return this.jobName__	};gets,the,name,of,this,job,return,the,name,of,the,job;public,string,get,job,name,return,this,job,name
Plan -> public String getJobName();1411473593;Gets the name of this job.__@return The name of the job.;public String getJobName() {_		return this.jobName__	};gets,the,name,of,this,job,return,the,name,of,the,job;public,string,get,job,name,return,this,job,name
Plan -> public String getJobName();1412346153;Gets the name of this job.__@return The name of the job.;public String getJobName() {_		return this.jobName__	};gets,the,name,of,this,job,return,the,name,of,the,job;public,string,get,job,name,return,this,job,name
Plan -> public String getJobName();1415027294;Gets the name of this job.__@return The name of the job.;public String getJobName() {_		return this.jobName__	};gets,the,name,of,this,job,return,the,name,of,the,job;public,string,get,job,name,return,this,job,name
Plan -> public String getJobName();1420654570;Gets the name of this job.__@return The name of the job.;public String getJobName() {_		return this.jobName__	};gets,the,name,of,this,job,return,the,name,of,the,job;public,string,get,job,name,return,this,job,name
Plan -> public String getJobName();1420663430;Gets the name of this job.__@return The name of the job.;public String getJobName() {_		return this.jobName__	};gets,the,name,of,this,job,return,the,name,of,the,job;public,string,get,job,name,return,this,job,name
Plan -> public String getJobName();1424115592;Gets the name of this job.__@return The name of the job.;public String getJobName() {_		return this.jobName__	};gets,the,name,of,this,job,return,the,name,of,the,job;public,string,get,job,name,return,this,job,name
Plan -> public String getJobName();1426843273;Gets the name of this job.__@return The name of the job.;public String getJobName() {_		return this.jobName__	};gets,the,name,of,this,job,return,the,name,of,the,job;public,string,get,job,name,return,this,job,name
Plan -> public String getJobName();1427097830;Gets the name of this job.__@return The name of the job.;public String getJobName() {_		return this.jobName__	};gets,the,name,of,this,job,return,the,name,of,the,job;public,string,get,job,name,return,this,job,name
Plan -> public String getJobName();1431703039;Gets the name of this job.__@return The name of the job.;public String getJobName() {_		return this.jobName__	};gets,the,name,of,this,job,return,the,name,of,the,job;public,string,get,job,name,return,this,job,name
Plan -> public String getJobName();1442944546;Gets the name of this job.__@return The name of the job.;public String getJobName() {_		return this.jobName__	};gets,the,name,of,this,job,return,the,name,of,the,job;public,string,get,job,name,return,this,job,name
Plan -> public String getJobName();1444215406;Gets the name of this job.__@return The name of the job.;public String getJobName() {_		return this.jobName__	};gets,the,name,of,this,job,return,the,name,of,the,job;public,string,get,job,name,return,this,job,name
Plan -> public String getJobName();1449526184;Gets the name of this job.__@return The name of the job.;public String getJobName() {_		return this.jobName__	};gets,the,name,of,this,job,return,the,name,of,the,job;public,string,get,job,name,return,this,job,name
Plan -> public String getJobName();1455479358;Gets the name of this job.__@return The name of the job.;public String getJobName() {_		return this.jobName__	};gets,the,name,of,this,job,return,the,name,of,the,job;public,string,get,job,name,return,this,job,name
Plan -> public String getJobName();1455548285;Gets the name of this job.__@return The name of the job.;public String getJobName() {_		return this.jobName__	};gets,the,name,of,this,job,return,the,name,of,the,job;public,string,get,job,name,return,this,job,name
Plan -> public String getJobName();1457737669;Gets the name of this job.__@return The name of the job.;public String getJobName() {_		return this.jobName__	};gets,the,name,of,this,job,return,the,name,of,the,job;public,string,get,job,name,return,this,job,name
Plan -> public String getJobName();1460472696;Gets the name of this job.__@return The name of the job.;public String getJobName() {_		return this.jobName__	};gets,the,name,of,this,job,return,the,name,of,the,job;public,string,get,job,name,return,this,job,name
Plan -> public String getJobName();1460563153;Gets the name of this job.__@return The name of the job.;public String getJobName() {_		return this.jobName__	};gets,the,name,of,this,job,return,the,name,of,the,job;public,string,get,job,name,return,this,job,name
Plan -> public String getJobName();1460741894;Gets the name of this job.__@return The name of the job.;public String getJobName() {_		return this.jobName__	};gets,the,name,of,this,job,return,the,name,of,the,job;public,string,get,job,name,return,this,job,name
Plan -> public String getJobName();1500974874;Gets the name of this job.__@return The name of the job.;public String getJobName() {_		return this.jobName__	};gets,the,name,of,this,job,return,the,name,of,the,job;public,string,get,job,name,return,this,job,name
Plan -> public String getJobName();1529583969;Gets the name of this job.__@return The name of the job.;public String getJobName() {_		return this.jobName__	};gets,the,name,of,this,job,return,the,name,of,the,job;public,string,get,job,name,return,this,job,name
Plan -> public String getJobName();1544793776;Gets the name of this job.__@return The name of the job.;public String getJobName() {_		return this.jobName__	};gets,the,name,of,this,job,return,the,name,of,the,job;public,string,get,job,name,return,this,job,name
Plan -> public int getDefaultParallelism();1405024514;Gets the default degree of parallelism for this job. That degree is always used when an operator_is not explicitly given a degree of parallelism.__@return The default parallelism for the plan.;public int getDefaultParallelism() {_		return this.defaultParallelism__	};gets,the,default,degree,of,parallelism,for,this,job,that,degree,is,always,used,when,an,operator,is,not,explicitly,given,a,degree,of,parallelism,return,the,default,parallelism,for,the,plan;public,int,get,default,parallelism,return,this,default,parallelism
Plan -> public int getDefaultParallelism();1405090423;Gets the default degree of parallelism for this job. That degree is always used when an operator_is not explicitly given a degree of parallelism.__@return The default parallelism for the plan.;public int getDefaultParallelism() {_		return this.defaultParallelism__	};gets,the,default,degree,of,parallelism,for,this,job,that,degree,is,always,used,when,an,operator,is,not,explicitly,given,a,degree,of,parallelism,return,the,default,parallelism,for,the,plan;public,int,get,default,parallelism,return,this,default,parallelism
Plan -> public int getDefaultParallelism();1411473593;Gets the default degree of parallelism for this job. That degree is always used when an operator_is not explicitly given a degree of parallelism.__@return The default parallelism for the plan.;public int getDefaultParallelism() {_		return this.defaultParallelism__	};gets,the,default,degree,of,parallelism,for,this,job,that,degree,is,always,used,when,an,operator,is,not,explicitly,given,a,degree,of,parallelism,return,the,default,parallelism,for,the,plan;public,int,get,default,parallelism,return,this,default,parallelism
Plan -> public int getDefaultParallelism();1412346153;Gets the default degree of parallelism for this job. That degree is always used when an operator_is not explicitly given a degree of parallelism.__@return The default parallelism for the plan.;public int getDefaultParallelism() {_		return this.defaultParallelism__	};gets,the,default,degree,of,parallelism,for,this,job,that,degree,is,always,used,when,an,operator,is,not,explicitly,given,a,degree,of,parallelism,return,the,default,parallelism,for,the,plan;public,int,get,default,parallelism,return,this,default,parallelism
Plan -> public int getDefaultParallelism();1415027294;Gets the default degree of parallelism for this job. That degree is always used when an operator_is not explicitly given a degree of parallelism.__@return The default parallelism for the plan.;public int getDefaultParallelism() {_		return this.defaultParallelism__	};gets,the,default,degree,of,parallelism,for,this,job,that,degree,is,always,used,when,an,operator,is,not,explicitly,given,a,degree,of,parallelism,return,the,default,parallelism,for,the,plan;public,int,get,default,parallelism,return,this,default,parallelism
Plan -> public int getDefaultParallelism();1420654570;Gets the default degree of parallelism for this job. That degree is always used when an operator_is not explicitly given a degree of parallelism.__@return The default parallelism for the plan.;public int getDefaultParallelism() {_		return this.defaultParallelism__	};gets,the,default,degree,of,parallelism,for,this,job,that,degree,is,always,used,when,an,operator,is,not,explicitly,given,a,degree,of,parallelism,return,the,default,parallelism,for,the,plan;public,int,get,default,parallelism,return,this,default,parallelism
Plan -> public int getDefaultParallelism();1420663430;Gets the default degree of parallelism for this job. That degree is always used when an operator_is not explicitly given a degree of parallelism.__@return The default parallelism for the plan.;public int getDefaultParallelism() {_		return this.defaultParallelism__	};gets,the,default,degree,of,parallelism,for,this,job,that,degree,is,always,used,when,an,operator,is,not,explicitly,given,a,degree,of,parallelism,return,the,default,parallelism,for,the,plan;public,int,get,default,parallelism,return,this,default,parallelism
Plan -> public int getDefaultParallelism();1424115592;Gets the default degree of parallelism for this job. That degree is always used when an operator_is not explicitly given a degree of parallelism.__@return The default parallelism for the plan.;public int getDefaultParallelism() {_		return this.defaultParallelism__	};gets,the,default,degree,of,parallelism,for,this,job,that,degree,is,always,used,when,an,operator,is,not,explicitly,given,a,degree,of,parallelism,return,the,default,parallelism,for,the,plan;public,int,get,default,parallelism,return,this,default,parallelism
Plan -> public int getDefaultParallelism();1426843273;Gets the default degree of parallelism for this job. That degree is always used when an operator_is not explicitly given a degree of parallelism.__@return The default parallelism for the plan.;public int getDefaultParallelism() {_		return this.defaultParallelism__	};gets,the,default,degree,of,parallelism,for,this,job,that,degree,is,always,used,when,an,operator,is,not,explicitly,given,a,degree,of,parallelism,return,the,default,parallelism,for,the,plan;public,int,get,default,parallelism,return,this,default,parallelism
Plan -> public int getDefaultParallelism();1427097830;Gets the default parallelism for this job. That degree is always used when an operator_is not explicitly given a parallelism.__@return The default parallelism for the plan.;public int getDefaultParallelism() {_		return this.defaultParallelism__	};gets,the,default,parallelism,for,this,job,that,degree,is,always,used,when,an,operator,is,not,explicitly,given,a,parallelism,return,the,default,parallelism,for,the,plan;public,int,get,default,parallelism,return,this,default,parallelism
Plan -> public int getDefaultParallelism();1431703039;Gets the default parallelism for this job. That degree is always used when an operator_is not explicitly given a parallelism.__@return The default parallelism for the plan.;public int getDefaultParallelism() {_		return this.defaultParallelism__	};gets,the,default,parallelism,for,this,job,that,degree,is,always,used,when,an,operator,is,not,explicitly,given,a,parallelism,return,the,default,parallelism,for,the,plan;public,int,get,default,parallelism,return,this,default,parallelism
Plan -> public int getDefaultParallelism();1442944546;Gets the default parallelism for this job. That degree is always used when an operator_is not explicitly given a parallelism.__@return The default parallelism for the plan.;public int getDefaultParallelism() {_		return this.defaultParallelism__	};gets,the,default,parallelism,for,this,job,that,degree,is,always,used,when,an,operator,is,not,explicitly,given,a,parallelism,return,the,default,parallelism,for,the,plan;public,int,get,default,parallelism,return,this,default,parallelism
Plan -> public int getDefaultParallelism();1444215406;Gets the default parallelism for this job. That degree is always used when an operator_is not explicitly given a parallelism.__@return The default parallelism for the plan.;public int getDefaultParallelism() {_		return this.defaultParallelism__	};gets,the,default,parallelism,for,this,job,that,degree,is,always,used,when,an,operator,is,not,explicitly,given,a,parallelism,return,the,default,parallelism,for,the,plan;public,int,get,default,parallelism,return,this,default,parallelism
Plan -> public int getDefaultParallelism();1449526184;Gets the default parallelism for this job. That degree is always used when an operator_is not explicitly given a parallelism.__@return The default parallelism for the plan.;public int getDefaultParallelism() {_		return this.defaultParallelism__	};gets,the,default,parallelism,for,this,job,that,degree,is,always,used,when,an,operator,is,not,explicitly,given,a,parallelism,return,the,default,parallelism,for,the,plan;public,int,get,default,parallelism,return,this,default,parallelism
Plan -> public int getDefaultParallelism();1455479358;Gets the default parallelism for this job. That degree is always used when an operator_is not explicitly given a parallelism.__@return The default parallelism for the plan.;public int getDefaultParallelism() {_		return this.defaultParallelism__	};gets,the,default,parallelism,for,this,job,that,degree,is,always,used,when,an,operator,is,not,explicitly,given,a,parallelism,return,the,default,parallelism,for,the,plan;public,int,get,default,parallelism,return,this,default,parallelism
Plan -> public int getDefaultParallelism();1455548285;Gets the default parallelism for this job. That degree is always used when an operator_is not explicitly given a parallelism.__@return The default parallelism for the plan.;public int getDefaultParallelism() {_		return this.defaultParallelism__	};gets,the,default,parallelism,for,this,job,that,degree,is,always,used,when,an,operator,is,not,explicitly,given,a,parallelism,return,the,default,parallelism,for,the,plan;public,int,get,default,parallelism,return,this,default,parallelism
Plan -> public int getDefaultParallelism();1457737669;Gets the default parallelism for this job. That degree is always used when an operator_is not explicitly given a parallelism.__@return The default parallelism for the plan.;public int getDefaultParallelism() {_		return this.defaultParallelism__	};gets,the,default,parallelism,for,this,job,that,degree,is,always,used,when,an,operator,is,not,explicitly,given,a,parallelism,return,the,default,parallelism,for,the,plan;public,int,get,default,parallelism,return,this,default,parallelism
Plan -> public int getDefaultParallelism();1460472696;Gets the default parallelism for this job. That degree is always used when an operator_is not explicitly given a parallelism.__@return The default parallelism for the plan.;public int getDefaultParallelism() {_		return this.defaultParallelism__	};gets,the,default,parallelism,for,this,job,that,degree,is,always,used,when,an,operator,is,not,explicitly,given,a,parallelism,return,the,default,parallelism,for,the,plan;public,int,get,default,parallelism,return,this,default,parallelism
Plan -> public int getDefaultParallelism();1460563153;Gets the default parallelism for this job. That degree is always used when an operator_is not explicitly given a parallelism.__@return The default parallelism for the plan.;public int getDefaultParallelism() {_		return this.defaultParallelism__	};gets,the,default,parallelism,for,this,job,that,degree,is,always,used,when,an,operator,is,not,explicitly,given,a,parallelism,return,the,default,parallelism,for,the,plan;public,int,get,default,parallelism,return,this,default,parallelism
Plan -> public int getDefaultParallelism();1460741894;Gets the default parallelism for this job. That degree is always used when an operator_is not explicitly given a parallelism.__@return The default parallelism for the plan.;public int getDefaultParallelism() {_		return this.defaultParallelism__	};gets,the,default,parallelism,for,this,job,that,degree,is,always,used,when,an,operator,is,not,explicitly,given,a,parallelism,return,the,default,parallelism,for,the,plan;public,int,get,default,parallelism,return,this,default,parallelism
Plan -> public int getDefaultParallelism();1500974874;Gets the default parallelism for this job. That degree is always used when an operator_is not explicitly given a parallelism.__@return The default parallelism for the plan.;public int getDefaultParallelism() {_		return this.defaultParallelism__	};gets,the,default,parallelism,for,this,job,that,degree,is,always,used,when,an,operator,is,not,explicitly,given,a,parallelism,return,the,default,parallelism,for,the,plan;public,int,get,default,parallelism,return,this,default,parallelism
Plan -> public int getDefaultParallelism();1529583969;Gets the default parallelism for this job. That degree is always used when an operator_is not explicitly given a parallelism.__@return The default parallelism for the plan.;public int getDefaultParallelism() {_		return this.defaultParallelism__	};gets,the,default,parallelism,for,this,job,that,degree,is,always,used,when,an,operator,is,not,explicitly,given,a,parallelism,return,the,default,parallelism,for,the,plan;public,int,get,default,parallelism,return,this,default,parallelism
Plan -> public int getDefaultParallelism();1544793776;Gets the default parallelism for this job. That degree is always used when an operator_is not explicitly given a parallelism.__@return The default parallelism for the plan.;public int getDefaultParallelism() {_		return this.defaultParallelism__	};gets,the,default,parallelism,for,this,job,that,degree,is,always,used,when,an,operator,is,not,explicitly,given,a,parallelism,return,the,default,parallelism,for,the,plan;public,int,get,default,parallelism,return,this,default,parallelism
Plan -> public Plan(GenericDataSinkBase<?> sink);1405024514;Creates a new program plan with single data sink._The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.__@param sink The data sink of the data flow.;public Plan(GenericDataSinkBase<?> sink) {_		this(sink, DEFAULT_PARALELLISM)__	};creates,a,new,program,plan,with,single,data,sink,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,param,sink,the,data,sink,of,the,data,flow;public,plan,generic,data,sink,base,sink,this,sink
Plan -> public Plan(GenericDataSinkBase<?> sink);1405090423;Creates a new program plan with single data sink._The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.__@param sink The data sink of the data flow.;public Plan(GenericDataSinkBase<?> sink) {_		this(sink, DEFAULT_PARALELLISM)__	};creates,a,new,program,plan,with,single,data,sink,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,param,sink,the,data,sink,of,the,data,flow;public,plan,generic,data,sink,base,sink,this,sink
Plan -> public Plan(GenericDataSinkBase<?> sink);1411473593;Creates a new program plan with single data sink._The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.__@param sink The data sink of the data flow.;public Plan(GenericDataSinkBase<?> sink) {_		this(sink, DEFAULT_PARALELLISM)__	};creates,a,new,program,plan,with,single,data,sink,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,param,sink,the,data,sink,of,the,data,flow;public,plan,generic,data,sink,base,sink,this,sink
Plan -> public Plan(GenericDataSinkBase<?> sink);1412346153;Creates a new program plan with single data sink._The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.__@param sink The data sink of the data flow.;public Plan(GenericDataSinkBase<?> sink) {_		this(sink, DEFAULT_PARALELLISM)__	};creates,a,new,program,plan,with,single,data,sink,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,param,sink,the,data,sink,of,the,data,flow;public,plan,generic,data,sink,base,sink,this,sink
Plan -> public Plan(GenericDataSinkBase<?> sink);1415027294;Creates a new program plan with single data sink._The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.__@param sink The data sink of the data flow.;public Plan(GenericDataSinkBase<?> sink) {_		this(sink, DEFAULT_PARALELLISM)__	};creates,a,new,program,plan,with,single,data,sink,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,param,sink,the,data,sink,of,the,data,flow;public,plan,generic,data,sink,base,sink,this,sink
Plan -> public Plan(GenericDataSinkBase<?> sink);1420654570;Creates a new program plan with single data sink._The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.__@param sink The data sink of the data flow.;public Plan(GenericDataSinkBase<?> sink) {_		this(sink, DEFAULT_PARALELLISM)__	};creates,a,new,program,plan,with,single,data,sink,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,param,sink,the,data,sink,of,the,data,flow;public,plan,generic,data,sink,base,sink,this,sink
Plan -> public Plan(GenericDataSinkBase<?> sink);1420663430;Creates a new program plan with single data sink._The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.__@param sink The data sink of the data flow.;public Plan(GenericDataSinkBase<?> sink) {_		this(sink, DEFAULT_PARALELLISM)__	};creates,a,new,program,plan,with,single,data,sink,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,param,sink,the,data,sink,of,the,data,flow;public,plan,generic,data,sink,base,sink,this,sink
Plan -> public Plan(GenericDataSinkBase<?> sink);1424115592;Creates a new program plan with single data sink._The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.__@param sink The data sink of the data flow.;public Plan(GenericDataSinkBase<?> sink) {_		this(sink, DEFAULT_PARALELLISM)__	};creates,a,new,program,plan,with,single,data,sink,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,param,sink,the,data,sink,of,the,data,flow;public,plan,generic,data,sink,base,sink,this,sink
Plan -> public Plan(GenericDataSinkBase<?> sink);1426843273;Creates a new program plan with single data sink._The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.__@param sink The data sink of the data flow.;public Plan(GenericDataSinkBase<?> sink) {_		this(sink, DEFAULT_PARALELLISM)__	};creates,a,new,program,plan,with,single,data,sink,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,param,sink,the,data,sink,of,the,data,flow;public,plan,generic,data,sink,base,sink,this,sink
Plan -> public Plan(GenericDataSinkBase<?> sink);1427097830;Creates a new program plan with single data sink._The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.__@param sink The data sink of the data flow.;public Plan(GenericDataSinkBase<?> sink) {_		this(sink, DEFAULT_PARALELLISM)__	};creates,a,new,program,plan,with,single,data,sink,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,param,sink,the,data,sink,of,the,data,flow;public,plan,generic,data,sink,base,sink,this,sink
Plan -> public Plan(GenericDataSinkBase<?> sink);1431703039;Creates a new program plan with single data sink._The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.__@param sink The data sink of the data flow.;public Plan(GenericDataSinkBase<?> sink) {_		this(sink, DEFAULT_PARALELLISM)__	};creates,a,new,program,plan,with,single,data,sink,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,param,sink,the,data,sink,of,the,data,flow;public,plan,generic,data,sink,base,sink,this,sink
Plan -> public Plan(GenericDataSinkBase<?> sink);1442944546;Creates a new program plan with single data sink._The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.__@param sink The data sink of the data flow.;public Plan(GenericDataSinkBase<?> sink) {_		this(sink, DEFAULT_PARALELLISM)__	};creates,a,new,program,plan,with,single,data,sink,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,param,sink,the,data,sink,of,the,data,flow;public,plan,generic,data,sink,base,sink,this,sink
Plan -> public Plan(GenericDataSinkBase<?> sink);1444215406;Creates a new program plan with single data sink._The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.__@param sink The data sink of the data flow.;public Plan(GenericDataSinkBase<?> sink) {_		this(sink, DEFAULT_PARALELLISM)__	};creates,a,new,program,plan,with,single,data,sink,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,param,sink,the,data,sink,of,the,data,flow;public,plan,generic,data,sink,base,sink,this,sink
Plan -> public Plan(GenericDataSinkBase<?> sink);1449526184;Creates a new program plan with single data sink._The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.__@param sink The data sink of the data flow.;public Plan(GenericDataSinkBase<?> sink) {_		this(sink, DEFAULT_PARALELLISM)__	};creates,a,new,program,plan,with,single,data,sink,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,param,sink,the,data,sink,of,the,data,flow;public,plan,generic,data,sink,base,sink,this,sink
Plan -> public Plan(GenericDataSinkBase<?> sink);1455479358;Creates a new program plan with single data sink._The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.__@param sink The data sink of the data flow.;public Plan(GenericDataSinkBase<?> sink) {_		this(sink, DEFAULT_PARALELLISM)__	};creates,a,new,program,plan,with,single,data,sink,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,param,sink,the,data,sink,of,the,data,flow;public,plan,generic,data,sink,base,sink,this,sink
Plan -> public Plan(GenericDataSinkBase<?> sink);1455548285;Creates a new program plan with single data sink._The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.__@param sink The data sink of the data flow.;public Plan(GenericDataSinkBase<?> sink) {_		this(sink, DEFAULT_PARALELLISM)__	};creates,a,new,program,plan,with,single,data,sink,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,param,sink,the,data,sink,of,the,data,flow;public,plan,generic,data,sink,base,sink,this,sink
Plan -> public Plan(GenericDataSinkBase<?> sink);1457737669;Creates a new program plan with single data sink._The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.__@param sink The data sink of the data flow.;public Plan(GenericDataSinkBase<?> sink) {_		this(sink, DEFAULT_PARALELLISM)__	};creates,a,new,program,plan,with,single,data,sink,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,param,sink,the,data,sink,of,the,data,flow;public,plan,generic,data,sink,base,sink,this,sink
Plan -> public Plan(GenericDataSinkBase<?> sink);1460472696;Creates a new program plan with single data sink._The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.__@param sink The data sink of the data flow.;public Plan(GenericDataSinkBase<?> sink) {_		this(sink, DEFAULT_PARALELLISM)__	};creates,a,new,program,plan,with,single,data,sink,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,param,sink,the,data,sink,of,the,data,flow;public,plan,generic,data,sink,base,sink,this,sink
Plan -> public Plan(GenericDataSinkBase<?> sink);1460563153;Creates a new program plan with single data sink._The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.__@param sink The data sink of the data flow.;public Plan(GenericDataSinkBase<?> sink) {_		this(sink, ExecutionConfig.PARALLELISM_DEFAULT)__	};creates,a,new,program,plan,with,single,data,sink,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,param,sink,the,data,sink,of,the,data,flow;public,plan,generic,data,sink,base,sink,this,sink,execution,config
Plan -> public Plan(GenericDataSinkBase<?> sink);1460741894;Creates a new program plan with single data sink._The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.__@param sink The data sink of the data flow.;public Plan(GenericDataSinkBase<?> sink) {_		this(sink, ExecutionConfig.PARALLELISM_DEFAULT)__	};creates,a,new,program,plan,with,single,data,sink,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,param,sink,the,data,sink,of,the,data,flow;public,plan,generic,data,sink,base,sink,this,sink,execution,config
Plan -> public Plan(GenericDataSinkBase<?> sink);1500974874;Creates a new program plan with single data sink._The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.__@param sink The data sink of the data flow.;public Plan(GenericDataSinkBase<?> sink) {_		this(sink, ExecutionConfig.PARALLELISM_DEFAULT)__	};creates,a,new,program,plan,with,single,data,sink,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,param,sink,the,data,sink,of,the,data,flow;public,plan,generic,data,sink,base,sink,this,sink,execution,config
Plan -> public Plan(GenericDataSinkBase<?> sink);1529583969;Creates a new program plan with single data sink._The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.__@param sink The data sink of the data flow.;public Plan(GenericDataSinkBase<?> sink) {_		this(sink, ExecutionConfig.PARALLELISM_DEFAULT)__	};creates,a,new,program,plan,with,single,data,sink,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,param,sink,the,data,sink,of,the,data,flow;public,plan,generic,data,sink,base,sink,this,sink,execution,config
Plan -> public Plan(GenericDataSinkBase<?> sink);1544793776;Creates a new program plan with single data sink._The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.__@param sink The data sink of the data flow.;public Plan(GenericDataSinkBase<?> sink) {_		this(sink, ExecutionConfig.PARALLELISM_DEFAULT)__	};creates,a,new,program,plan,with,single,data,sink,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,param,sink,the,data,sink,of,the,data,flow;public,plan,generic,data,sink,base,sink,this,sink,execution,config
Plan -> public int getNumberOfExecutionRetries();1415027294;Gets the number of times the system will try to re-execute failed tasks. A value_of {@code -1} indicates that the system default value (as defined in the configuration)_should be used.__@return The number of times the system will try to re-execute failed tasks.;public int getNumberOfExecutionRetries() {_		return numberOfExecutionRetries__	};gets,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks,a,value,of,code,1,indicates,that,the,system,default,value,as,defined,in,the,configuration,should,be,used,return,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks;public,int,get,number,of,execution,retries,return,number,of,execution,retries
Plan -> public int getNumberOfExecutionRetries();1420654570;Gets the number of times the system will try to re-execute failed tasks. A value_of {@code -1} indicates that the system default value (as defined in the configuration)_should be used.__@return The number of times the system will try to re-execute failed tasks.;public int getNumberOfExecutionRetries() {_		return executionConfig.getNumberOfExecutionRetries()__	};gets,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks,a,value,of,code,1,indicates,that,the,system,default,value,as,defined,in,the,configuration,should,be,used,return,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks;public,int,get,number,of,execution,retries,return,execution,config,get,number,of,execution,retries
Plan -> public int getNumberOfExecutionRetries();1420663430;Gets the number of times the system will try to re-execute failed tasks. A value_of {@code -1} indicates that the system default value (as defined in the configuration)_should be used.__@return The number of times the system will try to re-execute failed tasks.;public int getNumberOfExecutionRetries() {_		return executionConfig.getNumberOfExecutionRetries()__	};gets,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks,a,value,of,code,1,indicates,that,the,system,default,value,as,defined,in,the,configuration,should,be,used,return,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks;public,int,get,number,of,execution,retries,return,execution,config,get,number,of,execution,retries
Plan -> public int getNumberOfExecutionRetries();1424115592;Gets the number of times the system will try to re-execute failed tasks. A value_of {@code -1} indicates that the system default value (as defined in the configuration)_should be used.__@return The number of times the system will try to re-execute failed tasks.;public int getNumberOfExecutionRetries() {_		return executionConfig.getNumberOfExecutionRetries()__	};gets,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks,a,value,of,code,1,indicates,that,the,system,default,value,as,defined,in,the,configuration,should,be,used,return,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks;public,int,get,number,of,execution,retries,return,execution,config,get,number,of,execution,retries
Plan -> public int getNumberOfExecutionRetries();1426843273;Gets the number of times the system will try to re-execute failed tasks. A value_of {@code -1} indicates that the system default value (as defined in the configuration)_should be used.__@return The number of times the system will try to re-execute failed tasks.;public int getNumberOfExecutionRetries() {_		return executionConfig.getNumberOfExecutionRetries()__	};gets,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks,a,value,of,code,1,indicates,that,the,system,default,value,as,defined,in,the,configuration,should,be,used,return,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks;public,int,get,number,of,execution,retries,return,execution,config,get,number,of,execution,retries
Plan -> public int getNumberOfExecutionRetries();1427097830;Gets the number of times the system will try to re-execute failed tasks. A value_of {@code -1} indicates that the system default value (as defined in the configuration)_should be used.__@return The number of times the system will try to re-execute failed tasks.;public int getNumberOfExecutionRetries() {_		return executionConfig.getNumberOfExecutionRetries()__	};gets,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks,a,value,of,code,1,indicates,that,the,system,default,value,as,defined,in,the,configuration,should,be,used,return,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks;public,int,get,number,of,execution,retries,return,execution,config,get,number,of,execution,retries
Plan -> public int getNumberOfExecutionRetries();1431703039;Gets the number of times the system will try to re-execute failed tasks. A value_of {@code -1} indicates that the system default value (as defined in the configuration)_should be used.__@return The number of times the system will try to re-execute failed tasks.;public int getNumberOfExecutionRetries() {_		return getExecutionConfig().getNumberOfExecutionRetries()__	};gets,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks,a,value,of,code,1,indicates,that,the,system,default,value,as,defined,in,the,configuration,should,be,used,return,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks;public,int,get,number,of,execution,retries,return,get,execution,config,get,number,of,execution,retries
Plan -> public int getNumberOfExecutionRetries();1442944546;Gets the number of times the system will try to re-execute failed tasks. A value_of {@code -1} indicates that the system default value (as defined in the configuration)_should be used.__@return The number of times the system will try to re-execute failed tasks.;public int getNumberOfExecutionRetries() {_		return getExecutionConfig().getNumberOfExecutionRetries()__	};gets,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks,a,value,of,code,1,indicates,that,the,system,default,value,as,defined,in,the,configuration,should,be,used,return,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks;public,int,get,number,of,execution,retries,return,get,execution,config,get,number,of,execution,retries
Plan -> public int getNumberOfExecutionRetries();1444215406;Gets the number of times the system will try to re-execute failed tasks. A value_of {@code -1} indicates that the system default value (as defined in the configuration)_should be used.__@return The number of times the system will try to re-execute failed tasks.;public int getNumberOfExecutionRetries() {_		return getExecutionConfig().getNumberOfExecutionRetries()__	};gets,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks,a,value,of,code,1,indicates,that,the,system,default,value,as,defined,in,the,configuration,should,be,used,return,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks;public,int,get,number,of,execution,retries,return,get,execution,config,get,number,of,execution,retries
Plan -> public int getNumberOfExecutionRetries();1449526184;Gets the number of times the system will try to re-execute failed tasks. A value_of {@code -1} indicates that the system default value (as defined in the configuration)_should be used.__@return The number of times the system will try to re-execute failed tasks.;public int getNumberOfExecutionRetries() {_		return getExecutionConfig().getNumberOfExecutionRetries()__	};gets,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks,a,value,of,code,1,indicates,that,the,system,default,value,as,defined,in,the,configuration,should,be,used,return,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks;public,int,get,number,of,execution,retries,return,get,execution,config,get,number,of,execution,retries
Plan -> public int getNumberOfExecutionRetries();1455479358;Gets the number of times the system will try to re-execute failed tasks. A value_of {@code -1} indicates that the system default value (as defined in the configuration)_should be used.__@return The number of times the system will try to re-execute failed tasks.;public int getNumberOfExecutionRetries() {_		return getExecutionConfig().getNumberOfExecutionRetries()__	};gets,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks,a,value,of,code,1,indicates,that,the,system,default,value,as,defined,in,the,configuration,should,be,used,return,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks;public,int,get,number,of,execution,retries,return,get,execution,config,get,number,of,execution,retries
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, int defaultParallelism);1405024514;Creates a new program plan with the given default parallelism, describing the data flow that ends at the_given data sinks. The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sinks The collection will the sinks of the data flow._@param defaultParallelism The default degree of parallelism for the job.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, int defaultParallelism) {_		this(sinks, "Flink Job at " + Calendar.getInstance().getTime(), defaultParallelism)__	};creates,a,new,program,plan,with,the,given,default,parallelism,describing,the,data,flow,that,ends,at,the,given,data,sinks,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sinks,the,collection,will,the,sinks,of,the,data,flow,param,default,parallelism,the,default,degree,of,parallelism,for,the,job;public,plan,collection,extends,generic,data,sink,base,sinks,int,default,parallelism,this,sinks,flink,job,at,calendar,get,instance,get,time,default,parallelism
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, int defaultParallelism);1405090423;Creates a new program plan with the given default parallelism, describing the data flow that ends at the_given data sinks. The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sinks The collection will the sinks of the data flow._@param defaultParallelism The default degree of parallelism for the job.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, int defaultParallelism) {_		this(sinks, "Flink Job at " + Calendar.getInstance().getTime(), defaultParallelism)__	};creates,a,new,program,plan,with,the,given,default,parallelism,describing,the,data,flow,that,ends,at,the,given,data,sinks,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sinks,the,collection,will,the,sinks,of,the,data,flow,param,default,parallelism,the,default,degree,of,parallelism,for,the,job;public,plan,collection,extends,generic,data,sink,base,sinks,int,default,parallelism,this,sinks,flink,job,at,calendar,get,instance,get,time,default,parallelism
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, int defaultParallelism);1411473593;Creates a new program plan with the given default parallelism, describing the data flow that ends at the_given data sinks. The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sinks The collection will the sinks of the data flow._@param defaultParallelism The default degree of parallelism for the job.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, int defaultParallelism) {_		this(sinks, "Flink Job at " + Calendar.getInstance().getTime(), defaultParallelism)__	};creates,a,new,program,plan,with,the,given,default,parallelism,describing,the,data,flow,that,ends,at,the,given,data,sinks,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sinks,the,collection,will,the,sinks,of,the,data,flow,param,default,parallelism,the,default,degree,of,parallelism,for,the,job;public,plan,collection,extends,generic,data,sink,base,sinks,int,default,parallelism,this,sinks,flink,job,at,calendar,get,instance,get,time,default,parallelism
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, int defaultParallelism);1412346153;Creates a new program plan with the given default parallelism, describing the data flow that ends at the_given data sinks. The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sinks The collection will the sinks of the data flow._@param defaultParallelism The default degree of parallelism for the job.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, int defaultParallelism) {_		this(sinks, "Flink Job at " + Calendar.getInstance().getTime(), defaultParallelism)__	};creates,a,new,program,plan,with,the,given,default,parallelism,describing,the,data,flow,that,ends,at,the,given,data,sinks,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sinks,the,collection,will,the,sinks,of,the,data,flow,param,default,parallelism,the,default,degree,of,parallelism,for,the,job;public,plan,collection,extends,generic,data,sink,base,sinks,int,default,parallelism,this,sinks,flink,job,at,calendar,get,instance,get,time,default,parallelism
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, int defaultParallelism);1415027294;Creates a new program plan with the given default parallelism, describing the data flow that ends at the_given data sinks. The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sinks The collection will the sinks of the data flow._@param defaultParallelism The default degree of parallelism for the job.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, int defaultParallelism) {_		this(sinks, "Flink Job at " + Calendar.getInstance().getTime(), defaultParallelism)__	};creates,a,new,program,plan,with,the,given,default,parallelism,describing,the,data,flow,that,ends,at,the,given,data,sinks,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sinks,the,collection,will,the,sinks,of,the,data,flow,param,default,parallelism,the,default,degree,of,parallelism,for,the,job;public,plan,collection,extends,generic,data,sink,base,sinks,int,default,parallelism,this,sinks,flink,job,at,calendar,get,instance,get,time,default,parallelism
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, int defaultParallelism);1420654570;Creates a new program plan with the given default parallelism, describing the data flow that ends at the_given data sinks. The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sinks The collection will the sinks of the data flow._@param defaultParallelism The default degree of parallelism for the job.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, int defaultParallelism) {_		this(sinks, "Flink Job at " + Calendar.getInstance().getTime(), defaultParallelism)__	};creates,a,new,program,plan,with,the,given,default,parallelism,describing,the,data,flow,that,ends,at,the,given,data,sinks,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sinks,the,collection,will,the,sinks,of,the,data,flow,param,default,parallelism,the,default,degree,of,parallelism,for,the,job;public,plan,collection,extends,generic,data,sink,base,sinks,int,default,parallelism,this,sinks,flink,job,at,calendar,get,instance,get,time,default,parallelism
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, int defaultParallelism);1420663430;Creates a new program plan with the given default parallelism, describing the data flow that ends at the_given data sinks. The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sinks The collection will the sinks of the data flow._@param defaultParallelism The default degree of parallelism for the job.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, int defaultParallelism) {_		this(sinks, "Flink Job at " + Calendar.getInstance().getTime(), defaultParallelism)__	};creates,a,new,program,plan,with,the,given,default,parallelism,describing,the,data,flow,that,ends,at,the,given,data,sinks,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sinks,the,collection,will,the,sinks,of,the,data,flow,param,default,parallelism,the,default,degree,of,parallelism,for,the,job;public,plan,collection,extends,generic,data,sink,base,sinks,int,default,parallelism,this,sinks,flink,job,at,calendar,get,instance,get,time,default,parallelism
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, int defaultParallelism);1424115592;Creates a new program plan with the given default parallelism, describing the data flow that ends at the_given data sinks. The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sinks The collection will the sinks of the data flow._@param defaultParallelism The default degree of parallelism for the job.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, int defaultParallelism) {_		this(sinks, "Flink Job at " + Calendar.getInstance().getTime(), defaultParallelism)__	};creates,a,new,program,plan,with,the,given,default,parallelism,describing,the,data,flow,that,ends,at,the,given,data,sinks,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sinks,the,collection,will,the,sinks,of,the,data,flow,param,default,parallelism,the,default,degree,of,parallelism,for,the,job;public,plan,collection,extends,generic,data,sink,base,sinks,int,default,parallelism,this,sinks,flink,job,at,calendar,get,instance,get,time,default,parallelism
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, int defaultParallelism);1426843273;Creates a new program plan with the given default parallelism, describing the data flow that ends at the_given data sinks. The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sinks The collection will the sinks of the data flow._@param defaultParallelism The default degree of parallelism for the job.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, int defaultParallelism) {_		this(sinks, "Flink Job at " + Calendar.getInstance().getTime(), defaultParallelism)__	};creates,a,new,program,plan,with,the,given,default,parallelism,describing,the,data,flow,that,ends,at,the,given,data,sinks,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sinks,the,collection,will,the,sinks,of,the,data,flow,param,default,parallelism,the,default,degree,of,parallelism,for,the,job;public,plan,collection,extends,generic,data,sink,base,sinks,int,default,parallelism,this,sinks,flink,job,at,calendar,get,instance,get,time,default,parallelism
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, int defaultParallelism);1427097830;Creates a new program plan with the given default parallelism, describing the data flow that ends at the_given data sinks. The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sinks The collection will the sinks of the data flow._@param defaultParallelism The default parallelism for the job.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, int defaultParallelism) {_		this(sinks, "Flink Job at " + Calendar.getInstance().getTime(), defaultParallelism)__	};creates,a,new,program,plan,with,the,given,default,parallelism,describing,the,data,flow,that,ends,at,the,given,data,sinks,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sinks,the,collection,will,the,sinks,of,the,data,flow,param,default,parallelism,the,default,parallelism,for,the,job;public,plan,collection,extends,generic,data,sink,base,sinks,int,default,parallelism,this,sinks,flink,job,at,calendar,get,instance,get,time,default,parallelism
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, int defaultParallelism);1431703039;Creates a new program plan with the given default parallelism, describing the data flow that ends at the_given data sinks. The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sinks The collection will the sinks of the data flow._@param defaultParallelism The default parallelism for the job.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, int defaultParallelism) {_		this(sinks, "Flink Job at " + Calendar.getInstance().getTime(), defaultParallelism)__	};creates,a,new,program,plan,with,the,given,default,parallelism,describing,the,data,flow,that,ends,at,the,given,data,sinks,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sinks,the,collection,will,the,sinks,of,the,data,flow,param,default,parallelism,the,default,parallelism,for,the,job;public,plan,collection,extends,generic,data,sink,base,sinks,int,default,parallelism,this,sinks,flink,job,at,calendar,get,instance,get,time,default,parallelism
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, int defaultParallelism);1442944546;Creates a new program plan with the given default parallelism, describing the data flow that ends at the_given data sinks. The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sinks The collection will the sinks of the data flow._@param defaultParallelism The default parallelism for the job.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, int defaultParallelism) {_		this(sinks, "Flink Job at " + Calendar.getInstance().getTime(), defaultParallelism)__	};creates,a,new,program,plan,with,the,given,default,parallelism,describing,the,data,flow,that,ends,at,the,given,data,sinks,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sinks,the,collection,will,the,sinks,of,the,data,flow,param,default,parallelism,the,default,parallelism,for,the,job;public,plan,collection,extends,generic,data,sink,base,sinks,int,default,parallelism,this,sinks,flink,job,at,calendar,get,instance,get,time,default,parallelism
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, int defaultParallelism);1444215406;Creates a new program plan with the given default parallelism, describing the data flow that ends at the_given data sinks. The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sinks The collection will the sinks of the data flow._@param defaultParallelism The default parallelism for the job.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, int defaultParallelism) {_		this(sinks, "Flink Job at " + Calendar.getInstance().getTime(), defaultParallelism)__	};creates,a,new,program,plan,with,the,given,default,parallelism,describing,the,data,flow,that,ends,at,the,given,data,sinks,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sinks,the,collection,will,the,sinks,of,the,data,flow,param,default,parallelism,the,default,parallelism,for,the,job;public,plan,collection,extends,generic,data,sink,base,sinks,int,default,parallelism,this,sinks,flink,job,at,calendar,get,instance,get,time,default,parallelism
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, int defaultParallelism);1449526184;Creates a new program plan with the given default parallelism, describing the data flow that ends at the_given data sinks. The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sinks The collection will the sinks of the data flow._@param defaultParallelism The default parallelism for the job.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, int defaultParallelism) {_		this(sinks, "Flink Job at " + Calendar.getInstance().getTime(), defaultParallelism)__	};creates,a,new,program,plan,with,the,given,default,parallelism,describing,the,data,flow,that,ends,at,the,given,data,sinks,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sinks,the,collection,will,the,sinks,of,the,data,flow,param,default,parallelism,the,default,parallelism,for,the,job;public,plan,collection,extends,generic,data,sink,base,sinks,int,default,parallelism,this,sinks,flink,job,at,calendar,get,instance,get,time,default,parallelism
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, int defaultParallelism);1455479358;Creates a new program plan with the given default parallelism, describing the data flow that ends at the_given data sinks. The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sinks The collection will the sinks of the data flow._@param defaultParallelism The default parallelism for the job.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, int defaultParallelism) {_		this(sinks, "Flink Job at " + Calendar.getInstance().getTime(), defaultParallelism)__	};creates,a,new,program,plan,with,the,given,default,parallelism,describing,the,data,flow,that,ends,at,the,given,data,sinks,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sinks,the,collection,will,the,sinks,of,the,data,flow,param,default,parallelism,the,default,parallelism,for,the,job;public,plan,collection,extends,generic,data,sink,base,sinks,int,default,parallelism,this,sinks,flink,job,at,calendar,get,instance,get,time,default,parallelism
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, int defaultParallelism);1455548285;Creates a new program plan with the given default parallelism, describing the data flow that ends at the_given data sinks. The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sinks The collection will the sinks of the data flow._@param defaultParallelism The default parallelism for the job.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, int defaultParallelism) {_		this(sinks, "Flink Job at " + Calendar.getInstance().getTime(), defaultParallelism)__	};creates,a,new,program,plan,with,the,given,default,parallelism,describing,the,data,flow,that,ends,at,the,given,data,sinks,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sinks,the,collection,will,the,sinks,of,the,data,flow,param,default,parallelism,the,default,parallelism,for,the,job;public,plan,collection,extends,generic,data,sink,base,sinks,int,default,parallelism,this,sinks,flink,job,at,calendar,get,instance,get,time,default,parallelism
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, int defaultParallelism);1457737669;Creates a new program plan with the given default parallelism, describing the data flow that ends at the_given data sinks. The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sinks The collection will the sinks of the data flow._@param defaultParallelism The default parallelism for the job.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, int defaultParallelism) {_		this(sinks, "Flink Job at " + Calendar.getInstance().getTime(), defaultParallelism)__	};creates,a,new,program,plan,with,the,given,default,parallelism,describing,the,data,flow,that,ends,at,the,given,data,sinks,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sinks,the,collection,will,the,sinks,of,the,data,flow,param,default,parallelism,the,default,parallelism,for,the,job;public,plan,collection,extends,generic,data,sink,base,sinks,int,default,parallelism,this,sinks,flink,job,at,calendar,get,instance,get,time,default,parallelism
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, int defaultParallelism);1460472696;Creates a new program plan with the given default parallelism, describing the data flow that ends at the_given data sinks. The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sinks The collection will the sinks of the data flow._@param defaultParallelism The default parallelism for the job.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, int defaultParallelism) {_		this(sinks, "Flink Job at " + Calendar.getInstance().getTime(), defaultParallelism)__	};creates,a,new,program,plan,with,the,given,default,parallelism,describing,the,data,flow,that,ends,at,the,given,data,sinks,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sinks,the,collection,will,the,sinks,of,the,data,flow,param,default,parallelism,the,default,parallelism,for,the,job;public,plan,collection,extends,generic,data,sink,base,sinks,int,default,parallelism,this,sinks,flink,job,at,calendar,get,instance,get,time,default,parallelism
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, int defaultParallelism);1460563153;Creates a new program plan with the given default parallelism, describing the data flow that ends at the_given data sinks. The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sinks The collection will the sinks of the data flow._@param defaultParallelism The default parallelism for the job.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, int defaultParallelism) {_		this(sinks, "Flink Job at " + Calendar.getInstance().getTime(), defaultParallelism)__	};creates,a,new,program,plan,with,the,given,default,parallelism,describing,the,data,flow,that,ends,at,the,given,data,sinks,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sinks,the,collection,will,the,sinks,of,the,data,flow,param,default,parallelism,the,default,parallelism,for,the,job;public,plan,collection,extends,generic,data,sink,base,sinks,int,default,parallelism,this,sinks,flink,job,at,calendar,get,instance,get,time,default,parallelism
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, int defaultParallelism);1460741894;Creates a new program plan with the given default parallelism, describing the data flow that ends at the_given data sinks. The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sinks The collection will the sinks of the data flow._@param defaultParallelism The default parallelism for the job.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, int defaultParallelism) {_		this(sinks, "Flink Job at " + Calendar.getInstance().getTime(), defaultParallelism)__	};creates,a,new,program,plan,with,the,given,default,parallelism,describing,the,data,flow,that,ends,at,the,given,data,sinks,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sinks,the,collection,will,the,sinks,of,the,data,flow,param,default,parallelism,the,default,parallelism,for,the,job;public,plan,collection,extends,generic,data,sink,base,sinks,int,default,parallelism,this,sinks,flink,job,at,calendar,get,instance,get,time,default,parallelism
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, int defaultParallelism);1500974874;Creates a new program plan with the given default parallelism, describing the data flow that ends at the_given data sinks. The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sinks The collection will the sinks of the data flow._@param defaultParallelism The default parallelism for the job.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, int defaultParallelism) {_		this(sinks, "Flink Job at " + Calendar.getInstance().getTime(), defaultParallelism)__	};creates,a,new,program,plan,with,the,given,default,parallelism,describing,the,data,flow,that,ends,at,the,given,data,sinks,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sinks,the,collection,will,the,sinks,of,the,data,flow,param,default,parallelism,the,default,parallelism,for,the,job;public,plan,collection,extends,generic,data,sink,base,sinks,int,default,parallelism,this,sinks,flink,job,at,calendar,get,instance,get,time,default,parallelism
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, int defaultParallelism);1529583969;Creates a new program plan with the given default parallelism, describing the data flow that ends at the_given data sinks. The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sinks The collection will the sinks of the data flow._@param defaultParallelism The default parallelism for the job.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, int defaultParallelism) {_		this(sinks, "Flink Job at " + Calendar.getInstance().getTime(), defaultParallelism)__	};creates,a,new,program,plan,with,the,given,default,parallelism,describing,the,data,flow,that,ends,at,the,given,data,sinks,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sinks,the,collection,will,the,sinks,of,the,data,flow,param,default,parallelism,the,default,parallelism,for,the,job;public,plan,collection,extends,generic,data,sink,base,sinks,int,default,parallelism,this,sinks,flink,job,at,calendar,get,instance,get,time,default,parallelism
Plan -> public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, int defaultParallelism);1544793776;Creates a new program plan with the given default parallelism, describing the data flow that ends at the_given data sinks. The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sinks The collection will the sinks of the data flow._@param defaultParallelism The default parallelism for the job.;public Plan(Collection<? extends GenericDataSinkBase<?>> sinks, int defaultParallelism) {_		this(sinks, "Flink Job at " + Calendar.getInstance().getTime(), defaultParallelism)__	};creates,a,new,program,plan,with,the,given,default,parallelism,describing,the,data,flow,that,ends,at,the,given,data,sinks,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sinks,the,collection,will,the,sinks,of,the,data,flow,param,default,parallelism,the,default,parallelism,for,the,job;public,plan,collection,extends,generic,data,sink,base,sinks,int,default,parallelism,this,sinks,flink,job,at,calendar,get,instance,get,time,default,parallelism
Plan -> public Plan(GenericDataSinkBase<?> sink, String jobName);1405024514;Creates a new program plan with the given name, containing initially a single data sink._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sink The data sink of the data flow._@param jobName The name to display for the job.;public Plan(GenericDataSinkBase<?> sink, String jobName) {_		this(sink, jobName, DEFAULT_PARALELLISM)__	};creates,a,new,program,plan,with,the,given,name,containing,initially,a,single,data,sink,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sink,the,data,sink,of,the,data,flow,param,job,name,the,name,to,display,for,the,job;public,plan,generic,data,sink,base,sink,string,job,name,this,sink,job,name
Plan -> public Plan(GenericDataSinkBase<?> sink, String jobName);1405090423;Creates a new program plan with the given name, containing initially a single data sink._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sink The data sink of the data flow._@param jobName The name to display for the job.;public Plan(GenericDataSinkBase<?> sink, String jobName) {_		this(sink, jobName, DEFAULT_PARALELLISM)__	};creates,a,new,program,plan,with,the,given,name,containing,initially,a,single,data,sink,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sink,the,data,sink,of,the,data,flow,param,job,name,the,name,to,display,for,the,job;public,plan,generic,data,sink,base,sink,string,job,name,this,sink,job,name
Plan -> public Plan(GenericDataSinkBase<?> sink, String jobName);1411473593;Creates a new program plan with the given name, containing initially a single data sink._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sink The data sink of the data flow._@param jobName The name to display for the job.;public Plan(GenericDataSinkBase<?> sink, String jobName) {_		this(sink, jobName, DEFAULT_PARALELLISM)__	};creates,a,new,program,plan,with,the,given,name,containing,initially,a,single,data,sink,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sink,the,data,sink,of,the,data,flow,param,job,name,the,name,to,display,for,the,job;public,plan,generic,data,sink,base,sink,string,job,name,this,sink,job,name
Plan -> public Plan(GenericDataSinkBase<?> sink, String jobName);1412346153;Creates a new program plan with the given name, containing initially a single data sink._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sink The data sink of the data flow._@param jobName The name to display for the job.;public Plan(GenericDataSinkBase<?> sink, String jobName) {_		this(sink, jobName, DEFAULT_PARALELLISM)__	};creates,a,new,program,plan,with,the,given,name,containing,initially,a,single,data,sink,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sink,the,data,sink,of,the,data,flow,param,job,name,the,name,to,display,for,the,job;public,plan,generic,data,sink,base,sink,string,job,name,this,sink,job,name
Plan -> public Plan(GenericDataSinkBase<?> sink, String jobName);1415027294;Creates a new program plan with the given name, containing initially a single data sink._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sink The data sink of the data flow._@param jobName The name to display for the job.;public Plan(GenericDataSinkBase<?> sink, String jobName) {_		this(sink, jobName, DEFAULT_PARALELLISM)__	};creates,a,new,program,plan,with,the,given,name,containing,initially,a,single,data,sink,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sink,the,data,sink,of,the,data,flow,param,job,name,the,name,to,display,for,the,job;public,plan,generic,data,sink,base,sink,string,job,name,this,sink,job,name
Plan -> public Plan(GenericDataSinkBase<?> sink, String jobName);1420654570;Creates a new program plan with the given name, containing initially a single data sink._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sink The data sink of the data flow._@param jobName The name to display for the job.;public Plan(GenericDataSinkBase<?> sink, String jobName) {_		this(sink, jobName, DEFAULT_PARALELLISM)__	};creates,a,new,program,plan,with,the,given,name,containing,initially,a,single,data,sink,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sink,the,data,sink,of,the,data,flow,param,job,name,the,name,to,display,for,the,job;public,plan,generic,data,sink,base,sink,string,job,name,this,sink,job,name
Plan -> public Plan(GenericDataSinkBase<?> sink, String jobName);1420663430;Creates a new program plan with the given name, containing initially a single data sink._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sink The data sink of the data flow._@param jobName The name to display for the job.;public Plan(GenericDataSinkBase<?> sink, String jobName) {_		this(sink, jobName, DEFAULT_PARALELLISM)__	};creates,a,new,program,plan,with,the,given,name,containing,initially,a,single,data,sink,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sink,the,data,sink,of,the,data,flow,param,job,name,the,name,to,display,for,the,job;public,plan,generic,data,sink,base,sink,string,job,name,this,sink,job,name
Plan -> public Plan(GenericDataSinkBase<?> sink, String jobName);1424115592;Creates a new program plan with the given name, containing initially a single data sink._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sink The data sink of the data flow._@param jobName The name to display for the job.;public Plan(GenericDataSinkBase<?> sink, String jobName) {_		this(sink, jobName, DEFAULT_PARALELLISM)__	};creates,a,new,program,plan,with,the,given,name,containing,initially,a,single,data,sink,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sink,the,data,sink,of,the,data,flow,param,job,name,the,name,to,display,for,the,job;public,plan,generic,data,sink,base,sink,string,job,name,this,sink,job,name
Plan -> public Plan(GenericDataSinkBase<?> sink, String jobName);1426843273;Creates a new program plan with the given name, containing initially a single data sink._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sink The data sink of the data flow._@param jobName The name to display for the job.;public Plan(GenericDataSinkBase<?> sink, String jobName) {_		this(sink, jobName, DEFAULT_PARALELLISM)__	};creates,a,new,program,plan,with,the,given,name,containing,initially,a,single,data,sink,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sink,the,data,sink,of,the,data,flow,param,job,name,the,name,to,display,for,the,job;public,plan,generic,data,sink,base,sink,string,job,name,this,sink,job,name
Plan -> public Plan(GenericDataSinkBase<?> sink, String jobName);1427097830;Creates a new program plan with the given name, containing initially a single data sink._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sink The data sink of the data flow._@param jobName The name to display for the job.;public Plan(GenericDataSinkBase<?> sink, String jobName) {_		this(sink, jobName, DEFAULT_PARALELLISM)__	};creates,a,new,program,plan,with,the,given,name,containing,initially,a,single,data,sink,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sink,the,data,sink,of,the,data,flow,param,job,name,the,name,to,display,for,the,job;public,plan,generic,data,sink,base,sink,string,job,name,this,sink,job,name
Plan -> public Plan(GenericDataSinkBase<?> sink, String jobName);1431703039;Creates a new program plan with the given name, containing initially a single data sink._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sink The data sink of the data flow._@param jobName The name to display for the job.;public Plan(GenericDataSinkBase<?> sink, String jobName) {_		this(sink, jobName, DEFAULT_PARALELLISM)__	};creates,a,new,program,plan,with,the,given,name,containing,initially,a,single,data,sink,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sink,the,data,sink,of,the,data,flow,param,job,name,the,name,to,display,for,the,job;public,plan,generic,data,sink,base,sink,string,job,name,this,sink,job,name
Plan -> public Plan(GenericDataSinkBase<?> sink, String jobName);1442944546;Creates a new program plan with the given name, containing initially a single data sink._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sink The data sink of the data flow._@param jobName The name to display for the job.;public Plan(GenericDataSinkBase<?> sink, String jobName) {_		this(sink, jobName, DEFAULT_PARALELLISM)__	};creates,a,new,program,plan,with,the,given,name,containing,initially,a,single,data,sink,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sink,the,data,sink,of,the,data,flow,param,job,name,the,name,to,display,for,the,job;public,plan,generic,data,sink,base,sink,string,job,name,this,sink,job,name
Plan -> public Plan(GenericDataSinkBase<?> sink, String jobName);1444215406;Creates a new program plan with the given name, containing initially a single data sink._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sink The data sink of the data flow._@param jobName The name to display for the job.;public Plan(GenericDataSinkBase<?> sink, String jobName) {_		this(sink, jobName, DEFAULT_PARALELLISM)__	};creates,a,new,program,plan,with,the,given,name,containing,initially,a,single,data,sink,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sink,the,data,sink,of,the,data,flow,param,job,name,the,name,to,display,for,the,job;public,plan,generic,data,sink,base,sink,string,job,name,this,sink,job,name
Plan -> public Plan(GenericDataSinkBase<?> sink, String jobName);1449526184;Creates a new program plan with the given name, containing initially a single data sink._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sink The data sink of the data flow._@param jobName The name to display for the job.;public Plan(GenericDataSinkBase<?> sink, String jobName) {_		this(sink, jobName, DEFAULT_PARALELLISM)__	};creates,a,new,program,plan,with,the,given,name,containing,initially,a,single,data,sink,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sink,the,data,sink,of,the,data,flow,param,job,name,the,name,to,display,for,the,job;public,plan,generic,data,sink,base,sink,string,job,name,this,sink,job,name
Plan -> public Plan(GenericDataSinkBase<?> sink, String jobName);1455479358;Creates a new program plan with the given name, containing initially a single data sink._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sink The data sink of the data flow._@param jobName The name to display for the job.;public Plan(GenericDataSinkBase<?> sink, String jobName) {_		this(sink, jobName, DEFAULT_PARALELLISM)__	};creates,a,new,program,plan,with,the,given,name,containing,initially,a,single,data,sink,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sink,the,data,sink,of,the,data,flow,param,job,name,the,name,to,display,for,the,job;public,plan,generic,data,sink,base,sink,string,job,name,this,sink,job,name
Plan -> public Plan(GenericDataSinkBase<?> sink, String jobName);1455548285;Creates a new program plan with the given name, containing initially a single data sink._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sink The data sink of the data flow._@param jobName The name to display for the job.;public Plan(GenericDataSinkBase<?> sink, String jobName) {_		this(sink, jobName, DEFAULT_PARALELLISM)__	};creates,a,new,program,plan,with,the,given,name,containing,initially,a,single,data,sink,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sink,the,data,sink,of,the,data,flow,param,job,name,the,name,to,display,for,the,job;public,plan,generic,data,sink,base,sink,string,job,name,this,sink,job,name
Plan -> public Plan(GenericDataSinkBase<?> sink, String jobName);1457737669;Creates a new program plan with the given name, containing initially a single data sink._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sink The data sink of the data flow._@param jobName The name to display for the job.;public Plan(GenericDataSinkBase<?> sink, String jobName) {_		this(sink, jobName, DEFAULT_PARALELLISM)__	};creates,a,new,program,plan,with,the,given,name,containing,initially,a,single,data,sink,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sink,the,data,sink,of,the,data,flow,param,job,name,the,name,to,display,for,the,job;public,plan,generic,data,sink,base,sink,string,job,name,this,sink,job,name
Plan -> public Plan(GenericDataSinkBase<?> sink, String jobName);1460472696;Creates a new program plan with the given name, containing initially a single data sink._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sink The data sink of the data flow._@param jobName The name to display for the job.;public Plan(GenericDataSinkBase<?> sink, String jobName) {_		this(sink, jobName, DEFAULT_PARALELLISM)__	};creates,a,new,program,plan,with,the,given,name,containing,initially,a,single,data,sink,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sink,the,data,sink,of,the,data,flow,param,job,name,the,name,to,display,for,the,job;public,plan,generic,data,sink,base,sink,string,job,name,this,sink,job,name
Plan -> public Plan(GenericDataSinkBase<?> sink, String jobName);1460563153;Creates a new program plan with the given name, containing initially a single data sink._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sink The data sink of the data flow._@param jobName The name to display for the job.;public Plan(GenericDataSinkBase<?> sink, String jobName) {_		this(sink, jobName, ExecutionConfig.PARALLELISM_DEFAULT)__	};creates,a,new,program,plan,with,the,given,name,containing,initially,a,single,data,sink,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sink,the,data,sink,of,the,data,flow,param,job,name,the,name,to,display,for,the,job;public,plan,generic,data,sink,base,sink,string,job,name,this,sink,job,name,execution,config
Plan -> public Plan(GenericDataSinkBase<?> sink, String jobName);1460741894;Creates a new program plan with the given name, containing initially a single data sink._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sink The data sink of the data flow._@param jobName The name to display for the job.;public Plan(GenericDataSinkBase<?> sink, String jobName) {_		this(sink, jobName, ExecutionConfig.PARALLELISM_DEFAULT)__	};creates,a,new,program,plan,with,the,given,name,containing,initially,a,single,data,sink,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sink,the,data,sink,of,the,data,flow,param,job,name,the,name,to,display,for,the,job;public,plan,generic,data,sink,base,sink,string,job,name,this,sink,job,name,execution,config
Plan -> public Plan(GenericDataSinkBase<?> sink, String jobName);1500974874;Creates a new program plan with the given name, containing initially a single data sink._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sink The data sink of the data flow._@param jobName The name to display for the job.;public Plan(GenericDataSinkBase<?> sink, String jobName) {_		this(sink, jobName, ExecutionConfig.PARALLELISM_DEFAULT)__	};creates,a,new,program,plan,with,the,given,name,containing,initially,a,single,data,sink,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sink,the,data,sink,of,the,data,flow,param,job,name,the,name,to,display,for,the,job;public,plan,generic,data,sink,base,sink,string,job,name,this,sink,job,name,execution,config
Plan -> public Plan(GenericDataSinkBase<?> sink, String jobName);1529583969;Creates a new program plan with the given name, containing initially a single data sink._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sink The data sink of the data flow._@param jobName The name to display for the job.;public Plan(GenericDataSinkBase<?> sink, String jobName) {_		this(sink, jobName, ExecutionConfig.PARALLELISM_DEFAULT)__	};creates,a,new,program,plan,with,the,given,name,containing,initially,a,single,data,sink,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sink,the,data,sink,of,the,data,flow,param,job,name,the,name,to,display,for,the,job;public,plan,generic,data,sink,base,sink,string,job,name,this,sink,job,name,execution,config
Plan -> public Plan(GenericDataSinkBase<?> sink, String jobName);1544793776;Creates a new program plan with the given name, containing initially a single data sink._<p>_If not all of the sinks of a data flow are given, the flow might_not be translated entirely, but only the parts of the flow reachable by traversing backwards_from the given data sinks.__@param sink The data sink of the data flow._@param jobName The name to display for the job.;public Plan(GenericDataSinkBase<?> sink, String jobName) {_		this(sink, jobName, ExecutionConfig.PARALLELISM_DEFAULT)__	};creates,a,new,program,plan,with,the,given,name,containing,initially,a,single,data,sink,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,the,flow,might,not,be,translated,entirely,but,only,the,parts,of,the,flow,reachable,by,traversing,backwards,from,the,given,data,sinks,param,sink,the,data,sink,of,the,data,flow,param,job,name,the,name,to,display,for,the,job;public,plan,generic,data,sink,base,sink,string,job,name,this,sink,job,name,execution,config
Plan -> public Plan(GenericDataSinkBase<?> sink, int defaultParallelism);1405024514;Creates a new program plan with single data sink and the given default parallelism._The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.__@param sink The data sink of the data flow._@param defaultParallelism The default degree of parallelism for the job.;public Plan(GenericDataSinkBase<?> sink, int defaultParallelism) {_		this(sink, "Flink Job at " + Calendar.getInstance().getTime(), defaultParallelism)__	};creates,a,new,program,plan,with,single,data,sink,and,the,given,default,parallelism,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,param,sink,the,data,sink,of,the,data,flow,param,default,parallelism,the,default,degree,of,parallelism,for,the,job;public,plan,generic,data,sink,base,sink,int,default,parallelism,this,sink,flink,job,at,calendar,get,instance,get,time,default,parallelism
Plan -> public Plan(GenericDataSinkBase<?> sink, int defaultParallelism);1405090423;Creates a new program plan with single data sink and the given default parallelism._The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.__@param sink The data sink of the data flow._@param defaultParallelism The default degree of parallelism for the job.;public Plan(GenericDataSinkBase<?> sink, int defaultParallelism) {_		this(sink, "Flink Job at " + Calendar.getInstance().getTime(), defaultParallelism)__	};creates,a,new,program,plan,with,single,data,sink,and,the,given,default,parallelism,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,param,sink,the,data,sink,of,the,data,flow,param,default,parallelism,the,default,degree,of,parallelism,for,the,job;public,plan,generic,data,sink,base,sink,int,default,parallelism,this,sink,flink,job,at,calendar,get,instance,get,time,default,parallelism
Plan -> public Plan(GenericDataSinkBase<?> sink, int defaultParallelism);1411473593;Creates a new program plan with single data sink and the given default parallelism._The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.__@param sink The data sink of the data flow._@param defaultParallelism The default degree of parallelism for the job.;public Plan(GenericDataSinkBase<?> sink, int defaultParallelism) {_		this(sink, "Flink Job at " + Calendar.getInstance().getTime(), defaultParallelism)__	};creates,a,new,program,plan,with,single,data,sink,and,the,given,default,parallelism,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,param,sink,the,data,sink,of,the,data,flow,param,default,parallelism,the,default,degree,of,parallelism,for,the,job;public,plan,generic,data,sink,base,sink,int,default,parallelism,this,sink,flink,job,at,calendar,get,instance,get,time,default,parallelism
Plan -> public Plan(GenericDataSinkBase<?> sink, int defaultParallelism);1412346153;Creates a new program plan with single data sink and the given default parallelism._The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.__@param sink The data sink of the data flow._@param defaultParallelism The default degree of parallelism for the job.;public Plan(GenericDataSinkBase<?> sink, int defaultParallelism) {_		this(sink, "Flink Job at " + Calendar.getInstance().getTime(), defaultParallelism)__	};creates,a,new,program,plan,with,single,data,sink,and,the,given,default,parallelism,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,param,sink,the,data,sink,of,the,data,flow,param,default,parallelism,the,default,degree,of,parallelism,for,the,job;public,plan,generic,data,sink,base,sink,int,default,parallelism,this,sink,flink,job,at,calendar,get,instance,get,time,default,parallelism
Plan -> public Plan(GenericDataSinkBase<?> sink, int defaultParallelism);1415027294;Creates a new program plan with single data sink and the given default parallelism._The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.__@param sink The data sink of the data flow._@param defaultParallelism The default degree of parallelism for the job.;public Plan(GenericDataSinkBase<?> sink, int defaultParallelism) {_		this(sink, "Flink Job at " + Calendar.getInstance().getTime(), defaultParallelism)__	};creates,a,new,program,plan,with,single,data,sink,and,the,given,default,parallelism,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,param,sink,the,data,sink,of,the,data,flow,param,default,parallelism,the,default,degree,of,parallelism,for,the,job;public,plan,generic,data,sink,base,sink,int,default,parallelism,this,sink,flink,job,at,calendar,get,instance,get,time,default,parallelism
Plan -> public Plan(GenericDataSinkBase<?> sink, int defaultParallelism);1420654570;Creates a new program plan with single data sink and the given default parallelism._The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.__@param sink The data sink of the data flow._@param defaultParallelism The default degree of parallelism for the job.;public Plan(GenericDataSinkBase<?> sink, int defaultParallelism) {_		this(sink, "Flink Job at " + Calendar.getInstance().getTime(), defaultParallelism)__	};creates,a,new,program,plan,with,single,data,sink,and,the,given,default,parallelism,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,param,sink,the,data,sink,of,the,data,flow,param,default,parallelism,the,default,degree,of,parallelism,for,the,job;public,plan,generic,data,sink,base,sink,int,default,parallelism,this,sink,flink,job,at,calendar,get,instance,get,time,default,parallelism
Plan -> public Plan(GenericDataSinkBase<?> sink, int defaultParallelism);1420663430;Creates a new program plan with single data sink and the given default parallelism._The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.__@param sink The data sink of the data flow._@param defaultParallelism The default degree of parallelism for the job.;public Plan(GenericDataSinkBase<?> sink, int defaultParallelism) {_		this(sink, "Flink Job at " + Calendar.getInstance().getTime(), defaultParallelism)__	};creates,a,new,program,plan,with,single,data,sink,and,the,given,default,parallelism,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,param,sink,the,data,sink,of,the,data,flow,param,default,parallelism,the,default,degree,of,parallelism,for,the,job;public,plan,generic,data,sink,base,sink,int,default,parallelism,this,sink,flink,job,at,calendar,get,instance,get,time,default,parallelism
Plan -> public Plan(GenericDataSinkBase<?> sink, int defaultParallelism);1424115592;Creates a new program plan with single data sink and the given default parallelism._The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.__@param sink The data sink of the data flow._@param defaultParallelism The default degree of parallelism for the job.;public Plan(GenericDataSinkBase<?> sink, int defaultParallelism) {_		this(sink, "Flink Job at " + Calendar.getInstance().getTime(), defaultParallelism)__	};creates,a,new,program,plan,with,single,data,sink,and,the,given,default,parallelism,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,param,sink,the,data,sink,of,the,data,flow,param,default,parallelism,the,default,degree,of,parallelism,for,the,job;public,plan,generic,data,sink,base,sink,int,default,parallelism,this,sink,flink,job,at,calendar,get,instance,get,time,default,parallelism
Plan -> public Plan(GenericDataSinkBase<?> sink, int defaultParallelism);1426843273;Creates a new program plan with single data sink and the given default parallelism._The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.__@param sink The data sink of the data flow._@param defaultParallelism The default degree of parallelism for the job.;public Plan(GenericDataSinkBase<?> sink, int defaultParallelism) {_		this(sink, "Flink Job at " + Calendar.getInstance().getTime(), defaultParallelism)__	};creates,a,new,program,plan,with,single,data,sink,and,the,given,default,parallelism,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,param,sink,the,data,sink,of,the,data,flow,param,default,parallelism,the,default,degree,of,parallelism,for,the,job;public,plan,generic,data,sink,base,sink,int,default,parallelism,this,sink,flink,job,at,calendar,get,instance,get,time,default,parallelism
Plan -> public Plan(GenericDataSinkBase<?> sink, int defaultParallelism);1427097830;Creates a new program plan with single data sink and the given default parallelism._The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.__@param sink The data sink of the data flow._@param defaultParallelism The default parallelism for the job.;public Plan(GenericDataSinkBase<?> sink, int defaultParallelism) {_		this(sink, "Flink Job at " + Calendar.getInstance().getTime(), defaultParallelism)__	};creates,a,new,program,plan,with,single,data,sink,and,the,given,default,parallelism,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,param,sink,the,data,sink,of,the,data,flow,param,default,parallelism,the,default,parallelism,for,the,job;public,plan,generic,data,sink,base,sink,int,default,parallelism,this,sink,flink,job,at,calendar,get,instance,get,time,default,parallelism
Plan -> public Plan(GenericDataSinkBase<?> sink, int defaultParallelism);1431703039;Creates a new program plan with single data sink and the given default parallelism._The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.__@param sink The data sink of the data flow._@param defaultParallelism The default parallelism for the job.;public Plan(GenericDataSinkBase<?> sink, int defaultParallelism) {_		this(sink, "Flink Job at " + Calendar.getInstance().getTime(), defaultParallelism)__	};creates,a,new,program,plan,with,single,data,sink,and,the,given,default,parallelism,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,param,sink,the,data,sink,of,the,data,flow,param,default,parallelism,the,default,parallelism,for,the,job;public,plan,generic,data,sink,base,sink,int,default,parallelism,this,sink,flink,job,at,calendar,get,instance,get,time,default,parallelism
Plan -> public Plan(GenericDataSinkBase<?> sink, int defaultParallelism);1442944546;Creates a new program plan with single data sink and the given default parallelism._The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.__@param sink The data sink of the data flow._@param defaultParallelism The default parallelism for the job.;public Plan(GenericDataSinkBase<?> sink, int defaultParallelism) {_		this(sink, "Flink Job at " + Calendar.getInstance().getTime(), defaultParallelism)__	};creates,a,new,program,plan,with,single,data,sink,and,the,given,default,parallelism,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,param,sink,the,data,sink,of,the,data,flow,param,default,parallelism,the,default,parallelism,for,the,job;public,plan,generic,data,sink,base,sink,int,default,parallelism,this,sink,flink,job,at,calendar,get,instance,get,time,default,parallelism
Plan -> public Plan(GenericDataSinkBase<?> sink, int defaultParallelism);1444215406;Creates a new program plan with single data sink and the given default parallelism._The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.__@param sink The data sink of the data flow._@param defaultParallelism The default parallelism for the job.;public Plan(GenericDataSinkBase<?> sink, int defaultParallelism) {_		this(sink, "Flink Job at " + Calendar.getInstance().getTime(), defaultParallelism)__	};creates,a,new,program,plan,with,single,data,sink,and,the,given,default,parallelism,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,param,sink,the,data,sink,of,the,data,flow,param,default,parallelism,the,default,parallelism,for,the,job;public,plan,generic,data,sink,base,sink,int,default,parallelism,this,sink,flink,job,at,calendar,get,instance,get,time,default,parallelism
Plan -> public Plan(GenericDataSinkBase<?> sink, int defaultParallelism);1449526184;Creates a new program plan with single data sink and the given default parallelism._The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.__@param sink The data sink of the data flow._@param defaultParallelism The default parallelism for the job.;public Plan(GenericDataSinkBase<?> sink, int defaultParallelism) {_		this(sink, "Flink Job at " + Calendar.getInstance().getTime(), defaultParallelism)__	};creates,a,new,program,plan,with,single,data,sink,and,the,given,default,parallelism,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,param,sink,the,data,sink,of,the,data,flow,param,default,parallelism,the,default,parallelism,for,the,job;public,plan,generic,data,sink,base,sink,int,default,parallelism,this,sink,flink,job,at,calendar,get,instance,get,time,default,parallelism
Plan -> public Plan(GenericDataSinkBase<?> sink, int defaultParallelism);1455479358;Creates a new program plan with single data sink and the given default parallelism._The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.__@param sink The data sink of the data flow._@param defaultParallelism The default parallelism for the job.;public Plan(GenericDataSinkBase<?> sink, int defaultParallelism) {_		this(sink, "Flink Job at " + Calendar.getInstance().getTime(), defaultParallelism)__	};creates,a,new,program,plan,with,single,data,sink,and,the,given,default,parallelism,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,param,sink,the,data,sink,of,the,data,flow,param,default,parallelism,the,default,parallelism,for,the,job;public,plan,generic,data,sink,base,sink,int,default,parallelism,this,sink,flink,job,at,calendar,get,instance,get,time,default,parallelism
Plan -> public Plan(GenericDataSinkBase<?> sink, int defaultParallelism);1455548285;Creates a new program plan with single data sink and the given default parallelism._The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.__@param sink The data sink of the data flow._@param defaultParallelism The default parallelism for the job.;public Plan(GenericDataSinkBase<?> sink, int defaultParallelism) {_		this(sink, "Flink Job at " + Calendar.getInstance().getTime(), defaultParallelism)__	};creates,a,new,program,plan,with,single,data,sink,and,the,given,default,parallelism,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,param,sink,the,data,sink,of,the,data,flow,param,default,parallelism,the,default,parallelism,for,the,job;public,plan,generic,data,sink,base,sink,int,default,parallelism,this,sink,flink,job,at,calendar,get,instance,get,time,default,parallelism
Plan -> public Plan(GenericDataSinkBase<?> sink, int defaultParallelism);1457737669;Creates a new program plan with single data sink and the given default parallelism._The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.__@param sink The data sink of the data flow._@param defaultParallelism The default parallelism for the job.;public Plan(GenericDataSinkBase<?> sink, int defaultParallelism) {_		this(sink, "Flink Job at " + Calendar.getInstance().getTime(), defaultParallelism)__	};creates,a,new,program,plan,with,single,data,sink,and,the,given,default,parallelism,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,param,sink,the,data,sink,of,the,data,flow,param,default,parallelism,the,default,parallelism,for,the,job;public,plan,generic,data,sink,base,sink,int,default,parallelism,this,sink,flink,job,at,calendar,get,instance,get,time,default,parallelism
Plan -> public Plan(GenericDataSinkBase<?> sink, int defaultParallelism);1460472696;Creates a new program plan with single data sink and the given default parallelism._The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.__@param sink The data sink of the data flow._@param defaultParallelism The default parallelism for the job.;public Plan(GenericDataSinkBase<?> sink, int defaultParallelism) {_		this(sink, "Flink Job at " + Calendar.getInstance().getTime(), defaultParallelism)__	};creates,a,new,program,plan,with,single,data,sink,and,the,given,default,parallelism,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,param,sink,the,data,sink,of,the,data,flow,param,default,parallelism,the,default,parallelism,for,the,job;public,plan,generic,data,sink,base,sink,int,default,parallelism,this,sink,flink,job,at,calendar,get,instance,get,time,default,parallelism
Plan -> public Plan(GenericDataSinkBase<?> sink, int defaultParallelism);1460563153;Creates a new program plan with single data sink and the given default parallelism._The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.__@param sink The data sink of the data flow._@param defaultParallelism The default parallelism for the job.;public Plan(GenericDataSinkBase<?> sink, int defaultParallelism) {_		this(sink, "Flink Job at " + Calendar.getInstance().getTime(), defaultParallelism)__	};creates,a,new,program,plan,with,single,data,sink,and,the,given,default,parallelism,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,param,sink,the,data,sink,of,the,data,flow,param,default,parallelism,the,default,parallelism,for,the,job;public,plan,generic,data,sink,base,sink,int,default,parallelism,this,sink,flink,job,at,calendar,get,instance,get,time,default,parallelism
Plan -> public Plan(GenericDataSinkBase<?> sink, int defaultParallelism);1460741894;Creates a new program plan with single data sink and the given default parallelism._The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.__@param sink The data sink of the data flow._@param defaultParallelism The default parallelism for the job.;public Plan(GenericDataSinkBase<?> sink, int defaultParallelism) {_		this(sink, "Flink Job at " + Calendar.getInstance().getTime(), defaultParallelism)__	};creates,a,new,program,plan,with,single,data,sink,and,the,given,default,parallelism,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,param,sink,the,data,sink,of,the,data,flow,param,default,parallelism,the,default,parallelism,for,the,job;public,plan,generic,data,sink,base,sink,int,default,parallelism,this,sink,flink,job,at,calendar,get,instance,get,time,default,parallelism
Plan -> public Plan(GenericDataSinkBase<?> sink, int defaultParallelism);1500974874;Creates a new program plan with single data sink and the given default parallelism._The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.__@param sink The data sink of the data flow._@param defaultParallelism The default parallelism for the job.;public Plan(GenericDataSinkBase<?> sink, int defaultParallelism) {_		this(sink, "Flink Job at " + Calendar.getInstance().getTime(), defaultParallelism)__	};creates,a,new,program,plan,with,single,data,sink,and,the,given,default,parallelism,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,param,sink,the,data,sink,of,the,data,flow,param,default,parallelism,the,default,parallelism,for,the,job;public,plan,generic,data,sink,base,sink,int,default,parallelism,this,sink,flink,job,at,calendar,get,instance,get,time,default,parallelism
Plan -> public Plan(GenericDataSinkBase<?> sink, int defaultParallelism);1529583969;Creates a new program plan with single data sink and the given default parallelism._The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.__@param sink The data sink of the data flow._@param defaultParallelism The default parallelism for the job.;public Plan(GenericDataSinkBase<?> sink, int defaultParallelism) {_		this(sink, "Flink Job at " + Calendar.getInstance().getTime(), defaultParallelism)__	};creates,a,new,program,plan,with,single,data,sink,and,the,given,default,parallelism,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,param,sink,the,data,sink,of,the,data,flow,param,default,parallelism,the,default,parallelism,for,the,job;public,plan,generic,data,sink,base,sink,int,default,parallelism,this,sink,flink,job,at,calendar,get,instance,get,time,default,parallelism
Plan -> public Plan(GenericDataSinkBase<?> sink, int defaultParallelism);1544793776;Creates a new program plan with single data sink and the given default parallelism._The display name for the job is generated using a timestamp._<p>_If not all of the sinks of a data flow are given to the plan, the flow might_not be translated entirely.__@param sink The data sink of the data flow._@param defaultParallelism The default parallelism for the job.;public Plan(GenericDataSinkBase<?> sink, int defaultParallelism) {_		this(sink, "Flink Job at " + Calendar.getInstance().getTime(), defaultParallelism)__	};creates,a,new,program,plan,with,single,data,sink,and,the,given,default,parallelism,the,display,name,for,the,job,is,generated,using,a,timestamp,p,if,not,all,of,the,sinks,of,a,data,flow,are,given,to,the,plan,the,flow,might,not,be,translated,entirely,param,sink,the,data,sink,of,the,data,flow,param,default,parallelism,the,default,parallelism,for,the,job;public,plan,generic,data,sink,base,sink,int,default,parallelism,this,sink,flink,job,at,calendar,get,instance,get,time,default,parallelism
