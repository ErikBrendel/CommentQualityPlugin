# id;timestamp;commentText;codeText;commentWords;codeWords
Visitable -> void accept(Visitor<T> visitor)_;1405024514;Contains the logic to invoke the visitor and continue the traversal._Typically invokes the pre-visit method of the visitor, then sends the visitor to the children (or predecessors)_and then invokes the post-visit method._<p>_A typical code example is the following:_<code>_public void accept(Visitor<Operator> visitor) {_boolean descend = visitor.preVisit(this)__if (descend) {_if (this.input != null) {_this.input.accept(visitor)___visitor.postVisit(this)____</code>__@param visitor The visitor to be called with this object as the parameter.__@see Visitor#preVisit(Visitable)_@see Visitor#postVisit(Visitable);void accept(Visitor<T> visitor)_;contains,the,logic,to,invoke,the,visitor,and,continue,the,traversal,typically,invokes,the,pre,visit,method,of,the,visitor,then,sends,the,visitor,to,the,children,or,predecessors,and,then,invokes,the,post,visit,method,p,a,typical,code,example,is,the,following,code,public,void,accept,visitor,operator,visitor,boolean,descend,visitor,pre,visit,this,if,descend,if,this,input,null,this,input,accept,visitor,visitor,post,visit,this,code,param,visitor,the,visitor,to,be,called,with,this,object,as,the,parameter,see,visitor,pre,visit,visitable,see,visitor,post,visit,visitable;void,accept,visitor,t,visitor
Visitable -> void accept(Visitor<T> visitor)_;1405090423;Contains the logic to invoke the visitor and continue the traversal._Typically invokes the pre-visit method of the visitor, then sends the visitor to the children (or predecessors)_and then invokes the post-visit method._<p>_A typical code example is the following:_<code>_public void accept(Visitor<Operator> visitor) {_boolean descend = visitor.preVisit(this)__if (descend) {_if (this.input != null) {_this.input.accept(visitor)___visitor.postVisit(this)____</code>__@param visitor The visitor to be called with this object as the parameter.__@see Visitor#preVisit(Visitable)_@see Visitor#postVisit(Visitable);void accept(Visitor<T> visitor)_;contains,the,logic,to,invoke,the,visitor,and,continue,the,traversal,typically,invokes,the,pre,visit,method,of,the,visitor,then,sends,the,visitor,to,the,children,or,predecessors,and,then,invokes,the,post,visit,method,p,a,typical,code,example,is,the,following,code,public,void,accept,visitor,operator,visitor,boolean,descend,visitor,pre,visit,this,if,descend,if,this,input,null,this,input,accept,visitor,visitor,post,visit,this,code,param,visitor,the,visitor,to,be,called,with,this,object,as,the,parameter,see,visitor,pre,visit,visitable,see,visitor,post,visit,visitable;void,accept,visitor,t,visitor
Visitable -> void accept(Visitor<T> visitor)_;1411473593;Contains the logic to invoke the visitor and continue the traversal._Typically invokes the pre-visit method of the visitor, then sends the visitor to the children (or predecessors)_and then invokes the post-visit method._<p>_A typical code example is the following:_<code>_public void accept(Visitor<Operator> visitor) {_boolean descend = visitor.preVisit(this)__if (descend) {_if (this.input != null) {_this.input.accept(visitor)___visitor.postVisit(this)____</code>__@param visitor The visitor to be called with this object as the parameter.__@see Visitor#preVisit(Visitable)_@see Visitor#postVisit(Visitable);void accept(Visitor<T> visitor)_;contains,the,logic,to,invoke,the,visitor,and,continue,the,traversal,typically,invokes,the,pre,visit,method,of,the,visitor,then,sends,the,visitor,to,the,children,or,predecessors,and,then,invokes,the,post,visit,method,p,a,typical,code,example,is,the,following,code,public,void,accept,visitor,operator,visitor,boolean,descend,visitor,pre,visit,this,if,descend,if,this,input,null,this,input,accept,visitor,visitor,post,visit,this,code,param,visitor,the,visitor,to,be,called,with,this,object,as,the,parameter,see,visitor,pre,visit,visitable,see,visitor,post,visit,visitable;void,accept,visitor,t,visitor
Visitable -> void accept(Visitor<T> visitor)_;1446112342;Contains the logic to invoke the visitor and continue the traversal._Typically invokes the pre-visit method of the visitor, then sends the visitor to the children (or predecessors)_and then invokes the post-visit method._<p>_A typical code example is the following:_<pre>{@code_public void accept(Visitor<Operator> visitor) {_boolean descend = visitor.preVisit(this)__if (descend) {_if (this.input != null) {_this.input.accept(visitor)___visitor.postVisit(this)____}</pre>__@param visitor The visitor to be called with this object as the parameter.__@see Visitor#preVisit(Visitable)_@see Visitor#postVisit(Visitable);void accept(Visitor<T> visitor)_;contains,the,logic,to,invoke,the,visitor,and,continue,the,traversal,typically,invokes,the,pre,visit,method,of,the,visitor,then,sends,the,visitor,to,the,children,or,predecessors,and,then,invokes,the,post,visit,method,p,a,typical,code,example,is,the,following,pre,code,public,void,accept,visitor,operator,visitor,boolean,descend,visitor,pre,visit,this,if,descend,if,this,input,null,this,input,accept,visitor,visitor,post,visit,this,pre,param,visitor,the,visitor,to,be,called,with,this,object,as,the,parameter,see,visitor,pre,visit,visitable,see,visitor,post,visit,visitable;void,accept,visitor,t,visitor
Visitable -> void accept(Visitor<T> visitor)_;1455479358;Contains the logic to invoke the visitor and continue the traversal._Typically invokes the pre-visit method of the visitor, then sends the visitor to the children (or predecessors)_and then invokes the post-visit method._<p>_A typical code example is the following:_<pre>{@code_public void accept(Visitor<Operator> visitor) {_boolean descend = visitor.preVisit(this)__if (descend) {_if (this.input != null) {_this.input.accept(visitor)___visitor.postVisit(this)____}</pre>__@param visitor The visitor to be called with this object as the parameter.__@see Visitor#preVisit(Visitable)_@see Visitor#postVisit(Visitable);void accept(Visitor<T> visitor)_;contains,the,logic,to,invoke,the,visitor,and,continue,the,traversal,typically,invokes,the,pre,visit,method,of,the,visitor,then,sends,the,visitor,to,the,children,or,predecessors,and,then,invokes,the,post,visit,method,p,a,typical,code,example,is,the,following,pre,code,public,void,accept,visitor,operator,visitor,boolean,descend,visitor,pre,visit,this,if,descend,if,this,input,null,this,input,accept,visitor,visitor,post,visit,this,pre,param,visitor,the,visitor,to,be,called,with,this,object,as,the,parameter,see,visitor,pre,visit,visitable,see,visitor,post,visit,visitable;void,accept,visitor,t,visitor
Visitable -> void accept(Visitor<T> visitor)_;1516295284;Contains the logic to invoke the visitor and continue the traversal._Typically invokes the pre-visit method of the visitor, then sends the visitor to the children (or predecessors)_and then invokes the post-visit method.__<p>A typical code example is the following:_<pre>{@code_public void accept(Visitor<Operator> visitor) {_boolean descend = visitor.preVisit(this)__if (descend) {_if (this.input != null) {_this.input.accept(visitor)___visitor.postVisit(this)____}</pre>__@param visitor The visitor to be called with this object as the parameter.__@see Visitor#preVisit(Visitable)_@see Visitor#postVisit(Visitable);void accept(Visitor<T> visitor)_;contains,the,logic,to,invoke,the,visitor,and,continue,the,traversal,typically,invokes,the,pre,visit,method,of,the,visitor,then,sends,the,visitor,to,the,children,or,predecessors,and,then,invokes,the,post,visit,method,p,a,typical,code,example,is,the,following,pre,code,public,void,accept,visitor,operator,visitor,boolean,descend,visitor,pre,visit,this,if,descend,if,this,input,null,this,input,accept,visitor,visitor,post,visit,this,pre,param,visitor,the,visitor,to,be,called,with,this,object,as,the,parameter,see,visitor,pre,visit,visitable,see,visitor,post,visit,visitable;void,accept,visitor,t,visitor
