# id;timestamp;commentText;codeText;commentWords;codeWords
KryoUtils -> public static <T> T copy(T from, T reuse, Kryo kryo, TypeSerializer<T> serializer);1454428544;Tries to copy the given record from using the provided Kryo instance. If this fails, then_the record from is copied by serializing it into a byte buffer and deserializing it from_there.__@param from Element to copy_@param reuse Reuse element for the deserialization_@param kryo Kryo instance to use_@param serializer TypeSerializer which is used in case of a Kryo failure_@param <T> Type of the element to be copied_@return Copied element;public static <T> T copy(T from, T reuse, Kryo kryo, TypeSerializer<T> serializer) {_		try {_			return kryo.copy(from)__		} catch (KryoException ke) {_			_			try {_				byte[] byteArray = InstantiationUtil.serializeToByteArray(serializer, from)___				return InstantiationUtil.deserializeFromByteArray(serializer, reuse, byteArray)__			} catch (IOException ioe) {_				throw new RuntimeException("Could not copy object by serializing/deserializing" +_					" it.", ioe)__			}_		}_	};tries,to,copy,the,given,record,from,using,the,provided,kryo,instance,if,this,fails,then,the,record,from,is,copied,by,serializing,it,into,a,byte,buffer,and,deserializing,it,from,there,param,from,element,to,copy,param,reuse,reuse,element,for,the,deserialization,param,kryo,kryo,instance,to,use,param,serializer,type,serializer,which,is,used,in,case,of,a,kryo,failure,param,t,type,of,the,element,to,be,copied,return,copied,element;public,static,t,t,copy,t,from,t,reuse,kryo,kryo,type,serializer,t,serializer,try,return,kryo,copy,from,catch,kryo,exception,ke,try,byte,byte,array,instantiation,util,serialize,to,byte,array,serializer,from,return,instantiation,util,deserialize,from,byte,array,serializer,reuse,byte,array,catch,ioexception,ioe,throw,new,runtime,exception,could,not,copy,object,by,serializing,deserializing,it,ioe
KryoUtils -> public static <T> T copy(T from, T reuse, Kryo kryo, TypeSerializer<T> serializer);1455479358;Tries to copy the given record from using the provided Kryo instance. If this fails, then_the record from is copied by serializing it into a byte buffer and deserializing it from_there.__@param from Element to copy_@param reuse Reuse element for the deserialization_@param kryo Kryo instance to use_@param serializer TypeSerializer which is used in case of a Kryo failure_@param <T> Type of the element to be copied_@return Copied element;public static <T> T copy(T from, T reuse, Kryo kryo, TypeSerializer<T> serializer) {_		try {_			return kryo.copy(from)__		} catch (KryoException ke) {_			_			try {_				byte[] byteArray = InstantiationUtil.serializeToByteArray(serializer, from)___				return InstantiationUtil.deserializeFromByteArray(serializer, reuse, byteArray)__			} catch (IOException ioe) {_				throw new RuntimeException("Could not copy object by serializing/deserializing" +_					" it.", ioe)__			}_		}_	};tries,to,copy,the,given,record,from,using,the,provided,kryo,instance,if,this,fails,then,the,record,from,is,copied,by,serializing,it,into,a,byte,buffer,and,deserializing,it,from,there,param,from,element,to,copy,param,reuse,reuse,element,for,the,deserialization,param,kryo,kryo,instance,to,use,param,serializer,type,serializer,which,is,used,in,case,of,a,kryo,failure,param,t,type,of,the,element,to,be,copied,return,copied,element;public,static,t,t,copy,t,from,t,reuse,kryo,kryo,type,serializer,t,serializer,try,return,kryo,copy,from,catch,kryo,exception,ke,try,byte,byte,array,instantiation,util,serialize,to,byte,array,serializer,from,return,instantiation,util,deserialize,from,byte,array,serializer,reuse,byte,array,catch,ioexception,ioe,throw,new,runtime,exception,could,not,copy,object,by,serializing,deserializing,it,ioe
KryoUtils -> public static <T> T copy(T from, T reuse, Kryo kryo, TypeSerializer<T> serializer);1494180263;Tries to copy the given record from using the provided Kryo instance. If this fails, then_the record from is copied by serializing it into a byte buffer and deserializing it from_there.__@param from Element to copy_@param reuse Reuse element for the deserialization_@param kryo Kryo instance to use_@param serializer TypeSerializer which is used in case of a Kryo failure_@param <T> Type of the element to be copied_@return Copied element;public static <T> T copy(T from, T reuse, Kryo kryo, TypeSerializer<T> serializer) {_		try {_			return kryo.copy(from)__		} catch (KryoException ke) {_			_			try {_				byte[] byteArray = InstantiationUtil.serializeToByteArray(serializer, from)___				return InstantiationUtil.deserializeFromByteArray(serializer, reuse, byteArray)__			} catch (IOException ioe) {_				throw new RuntimeException("Could not copy object by serializing/deserializing" +_					" it.", ioe)__			}_		}_	};tries,to,copy,the,given,record,from,using,the,provided,kryo,instance,if,this,fails,then,the,record,from,is,copied,by,serializing,it,into,a,byte,buffer,and,deserializing,it,from,there,param,from,element,to,copy,param,reuse,reuse,element,for,the,deserialization,param,kryo,kryo,instance,to,use,param,serializer,type,serializer,which,is,used,in,case,of,a,kryo,failure,param,t,type,of,the,element,to,be,copied,return,copied,element;public,static,t,t,copy,t,from,t,reuse,kryo,kryo,type,serializer,t,serializer,try,return,kryo,copy,from,catch,kryo,exception,ke,try,byte,byte,array,instantiation,util,serialize,to,byte,array,serializer,from,return,instantiation,util,deserialize,from,byte,array,serializer,reuse,byte,array,catch,ioexception,ioe,throw,new,runtime,exception,could,not,copy,object,by,serializing,deserializing,it,ioe
KryoUtils -> public static <T> T copy(T from, Kryo kryo, TypeSerializer<T> serializer);1454428544;Tries to copy the given record from using the provided Kryo instance. If this fails, then_the record from is copied by serializing it into a byte buffer and deserializing it from_there.__@param from Element to copy_@param kryo Kryo instance to use_@param serializer TypeSerializer which is used in case of a Kryo failure_@param <T> Type of the element to be copied_@return Copied element;public static <T> T copy(T from, Kryo kryo, TypeSerializer<T> serializer) {_		try {_			return kryo.copy(from)__		} catch (KryoException ke) {_			_			try {_				byte[] byteArray = InstantiationUtil.serializeToByteArray(serializer, from)___				return InstantiationUtil.deserializeFromByteArray(serializer, byteArray)__			} catch (IOException ioe) {_				throw new RuntimeException("Could not copy object by serializing/deserializing" +_					" it.", ioe)__			}_		}_	};tries,to,copy,the,given,record,from,using,the,provided,kryo,instance,if,this,fails,then,the,record,from,is,copied,by,serializing,it,into,a,byte,buffer,and,deserializing,it,from,there,param,from,element,to,copy,param,kryo,kryo,instance,to,use,param,serializer,type,serializer,which,is,used,in,case,of,a,kryo,failure,param,t,type,of,the,element,to,be,copied,return,copied,element;public,static,t,t,copy,t,from,kryo,kryo,type,serializer,t,serializer,try,return,kryo,copy,from,catch,kryo,exception,ke,try,byte,byte,array,instantiation,util,serialize,to,byte,array,serializer,from,return,instantiation,util,deserialize,from,byte,array,serializer,byte,array,catch,ioexception,ioe,throw,new,runtime,exception,could,not,copy,object,by,serializing,deserializing,it,ioe
KryoUtils -> public static <T> T copy(T from, Kryo kryo, TypeSerializer<T> serializer);1455479358;Tries to copy the given record from using the provided Kryo instance. If this fails, then_the record from is copied by serializing it into a byte buffer and deserializing it from_there.__@param from Element to copy_@param kryo Kryo instance to use_@param serializer TypeSerializer which is used in case of a Kryo failure_@param <T> Type of the element to be copied_@return Copied element;public static <T> T copy(T from, Kryo kryo, TypeSerializer<T> serializer) {_		try {_			return kryo.copy(from)__		} catch (KryoException ke) {_			_			try {_				byte[] byteArray = InstantiationUtil.serializeToByteArray(serializer, from)___				return InstantiationUtil.deserializeFromByteArray(serializer, byteArray)__			} catch (IOException ioe) {_				throw new RuntimeException("Could not copy object by serializing/deserializing" +_					" it.", ioe)__			}_		}_	};tries,to,copy,the,given,record,from,using,the,provided,kryo,instance,if,this,fails,then,the,record,from,is,copied,by,serializing,it,into,a,byte,buffer,and,deserializing,it,from,there,param,from,element,to,copy,param,kryo,kryo,instance,to,use,param,serializer,type,serializer,which,is,used,in,case,of,a,kryo,failure,param,t,type,of,the,element,to,be,copied,return,copied,element;public,static,t,t,copy,t,from,kryo,kryo,type,serializer,t,serializer,try,return,kryo,copy,from,catch,kryo,exception,ke,try,byte,byte,array,instantiation,util,serialize,to,byte,array,serializer,from,return,instantiation,util,deserialize,from,byte,array,serializer,byte,array,catch,ioexception,ioe,throw,new,runtime,exception,could,not,copy,object,by,serializing,deserializing,it,ioe
KryoUtils -> public static <T> T copy(T from, Kryo kryo, TypeSerializer<T> serializer);1494180263;Tries to copy the given record from using the provided Kryo instance. If this fails, then_the record from is copied by serializing it into a byte buffer and deserializing it from_there.__@param from Element to copy_@param kryo Kryo instance to use_@param serializer TypeSerializer which is used in case of a Kryo failure_@param <T> Type of the element to be copied_@return Copied element;public static <T> T copy(T from, Kryo kryo, TypeSerializer<T> serializer) {_		try {_			return kryo.copy(from)__		} catch (KryoException ke) {_			_			try {_				byte[] byteArray = InstantiationUtil.serializeToByteArray(serializer, from)___				return InstantiationUtil.deserializeFromByteArray(serializer, byteArray)__			} catch (IOException ioe) {_				throw new RuntimeException("Could not copy object by serializing/deserializing" +_					" it.", ioe)__			}_		}_	};tries,to,copy,the,given,record,from,using,the,provided,kryo,instance,if,this,fails,then,the,record,from,is,copied,by,serializing,it,into,a,byte,buffer,and,deserializing,it,from,there,param,from,element,to,copy,param,kryo,kryo,instance,to,use,param,serializer,type,serializer,which,is,used,in,case,of,a,kryo,failure,param,t,type,of,the,element,to,be,copied,return,copied,element;public,static,t,t,copy,t,from,kryo,kryo,type,serializer,t,serializer,try,return,kryo,copy,from,catch,kryo,exception,ke,try,byte,byte,array,instantiation,util,serialize,to,byte,array,serializer,from,return,instantiation,util,deserialize,from,byte,array,serializer,byte,array,catch,ioexception,ioe,throw,new,runtime,exception,could,not,copy,object,by,serializing,deserializing,it,ioe
