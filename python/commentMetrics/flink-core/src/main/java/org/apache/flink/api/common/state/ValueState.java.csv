# id;timestamp;commentText;codeText;commentWords;codeWords
ValueState -> void update(T value) throws IOException_;1454527671;Updates the operator state accessible by {@link #value()} to the given_value. The next time {@link #value()} is called (for the same state_partition) the returned state will represent the updated value. When a_partitioned state is updated with null, the state for the current key_will be removed and the default value is returned on the next access.__@param value_The new value for the state.__@throws IOException Thrown if the system cannot access the state.;void update(T value) throws IOException_;updates,the,operator,state,accessible,by,link,value,to,the,given,value,the,next,time,link,value,is,called,for,the,same,state,partition,the,returned,state,will,represent,the,updated,value,when,a,partitioned,state,is,updated,with,null,the,state,for,the,current,key,will,be,removed,and,the,default,value,is,returned,on,the,next,access,param,value,the,new,value,for,the,state,throws,ioexception,thrown,if,the,system,cannot,access,the,state;void,update,t,value,throws,ioexception
ValueState -> void update(T value) throws IOException_;1455479358;Updates the operator state accessible by {@link #value()} to the given_value. The next time {@link #value()} is called (for the same state_partition) the returned state will represent the updated value. When a_partitioned state is updated with null, the state for the current key_will be removed and the default value is returned on the next access.__@param value_The new value for the state.__@throws IOException Thrown if the system cannot access the state.;void update(T value) throws IOException_;updates,the,operator,state,accessible,by,link,value,to,the,given,value,the,next,time,link,value,is,called,for,the,same,state,partition,the,returned,state,will,represent,the,updated,value,when,a,partitioned,state,is,updated,with,null,the,state,for,the,current,key,will,be,removed,and,the,default,value,is,returned,on,the,next,access,param,value,the,new,value,for,the,state,throws,ioexception,thrown,if,the,system,cannot,access,the,state;void,update,t,value,throws,ioexception
ValueState -> void update(T value) throws IOException_;1475231926;Updates the operator state accessible by {@link #value()} to the given_value. The next time {@link #value()} is called (for the same state_partition) the returned state will represent the updated value. When a_partitioned state is updated with null, the state for the current key_will be removed and the default value is returned on the next access.__@param value_The new value for the state.__@throws IOException Thrown if the system cannot access the state.;void update(T value) throws IOException_;updates,the,operator,state,accessible,by,link,value,to,the,given,value,the,next,time,link,value,is,called,for,the,same,state,partition,the,returned,state,will,represent,the,updated,value,when,a,partitioned,state,is,updated,with,null,the,state,for,the,current,key,will,be,removed,and,the,default,value,is,returned,on,the,next,access,param,value,the,new,value,for,the,state,throws,ioexception,thrown,if,the,system,cannot,access,the,state;void,update,t,value,throws,ioexception
ValueState -> void update(T value) throws IOException_;1484303457;Updates the operator state accessible by {@link #value()} to the given_value. The next time {@link #value()} is called (for the same state_partition) the returned state will represent the updated value. When a_partitioned state is updated with null, the state for the current key_will be removed and the default value is returned on the next access.__@param value The new value for the state.__@throws IOException Thrown if the system cannot access the state.;void update(T value) throws IOException_;updates,the,operator,state,accessible,by,link,value,to,the,given,value,the,next,time,link,value,is,called,for,the,same,state,partition,the,returned,state,will,represent,the,updated,value,when,a,partitioned,state,is,updated,with,null,the,state,for,the,current,key,will,be,removed,and,the,default,value,is,returned,on,the,next,access,param,value,the,new,value,for,the,state,throws,ioexception,thrown,if,the,system,cannot,access,the,state;void,update,t,value,throws,ioexception
ValueState -> void update(T value) throws IOException_;1499314317;Updates the operator state accessible by {@link #value()} to the given_value. The next time {@link #value()} is called (for the same state_partition) the returned state will represent the updated value. When a_partitioned state is updated with null, the state for the current key_will be removed and the default value is returned on the next access.__@param value The new value for the state.__@throws IOException Thrown if the system cannot access the state.;void update(T value) throws IOException_;updates,the,operator,state,accessible,by,link,value,to,the,given,value,the,next,time,link,value,is,called,for,the,same,state,partition,the,returned,state,will,represent,the,updated,value,when,a,partitioned,state,is,updated,with,null,the,state,for,the,current,key,will,be,removed,and,the,default,value,is,returned,on,the,next,access,param,value,the,new,value,for,the,state,throws,ioexception,thrown,if,the,system,cannot,access,the,state;void,update,t,value,throws,ioexception
ValueState -> void update(T value) throws IOException_;1521628649;Updates the operator state accessible by {@link #value()} to the given_value. The next time {@link #value()} is called (for the same state_partition) the returned state will represent the updated value. When a_partitioned state is updated with null, the state for the current key_will be removed and the default value is returned on the next access.__@param value The new value for the state.__@throws IOException Thrown if the system cannot access the state.;void update(T value) throws IOException_;updates,the,operator,state,accessible,by,link,value,to,the,given,value,the,next,time,link,value,is,called,for,the,same,state,partition,the,returned,state,will,represent,the,updated,value,when,a,partitioned,state,is,updated,with,null,the,state,for,the,current,key,will,be,removed,and,the,default,value,is,returned,on,the,next,access,param,value,the,new,value,for,the,state,throws,ioexception,thrown,if,the,system,cannot,access,the,state;void,update,t,value,throws,ioexception
ValueState -> T value() throws IOException_;1454527671;Returns the current value for the state. When the state is not_partitioned the returned value is the same for all inputs in a given_operator instance. If state partitioning is applied, the value returned_depends on the current operator input, as the operator maintains an_independent state for each partition.__@return The operator state value corresponding to the current input.__@throws IOException Thrown if the system cannot access the state.;T value() throws IOException_;returns,the,current,value,for,the,state,when,the,state,is,not,partitioned,the,returned,value,is,the,same,for,all,inputs,in,a,given,operator,instance,if,state,partitioning,is,applied,the,value,returned,depends,on,the,current,operator,input,as,the,operator,maintains,an,independent,state,for,each,partition,return,the,operator,state,value,corresponding,to,the,current,input,throws,ioexception,thrown,if,the,system,cannot,access,the,state;t,value,throws,ioexception
ValueState -> T value() throws IOException_;1455479358;Returns the current value for the state. When the state is not_partitioned the returned value is the same for all inputs in a given_operator instance. If state partitioning is applied, the value returned_depends on the current operator input, as the operator maintains an_independent state for each partition.__@return The operator state value corresponding to the current input.__@throws IOException Thrown if the system cannot access the state.;T value() throws IOException_;returns,the,current,value,for,the,state,when,the,state,is,not,partitioned,the,returned,value,is,the,same,for,all,inputs,in,a,given,operator,instance,if,state,partitioning,is,applied,the,value,returned,depends,on,the,current,operator,input,as,the,operator,maintains,an,independent,state,for,each,partition,return,the,operator,state,value,corresponding,to,the,current,input,throws,ioexception,thrown,if,the,system,cannot,access,the,state;t,value,throws,ioexception
ValueState -> T value() throws IOException_;1475231926;Returns the current value for the state. When the state is not_partitioned the returned value is the same for all inputs in a given_operator instance. If state partitioning is applied, the value returned_depends on the current operator input, as the operator maintains an_independent state for each partition.__@return The operator state value corresponding to the current input.__@throws IOException Thrown if the system cannot access the state.;T value() throws IOException_;returns,the,current,value,for,the,state,when,the,state,is,not,partitioned,the,returned,value,is,the,same,for,all,inputs,in,a,given,operator,instance,if,state,partitioning,is,applied,the,value,returned,depends,on,the,current,operator,input,as,the,operator,maintains,an,independent,state,for,each,partition,return,the,operator,state,value,corresponding,to,the,current,input,throws,ioexception,thrown,if,the,system,cannot,access,the,state;t,value,throws,ioexception
ValueState -> T value() throws IOException_;1484303457;Returns the current value for the state. When the state is not_partitioned the returned value is the same for all inputs in a given_operator instance. If state partitioning is applied, the value returned_depends on the current operator input, as the operator maintains an_independent state for each partition.__<p>If you didn't specify a default value when creating the {@link ValueStateDescriptor}_this will return {@code null} when to value was previously set using {@link #update(Object)}.__@return The state value corresponding to the current input.__@throws IOException Thrown if the system cannot access the state.;T value() throws IOException_;returns,the,current,value,for,the,state,when,the,state,is,not,partitioned,the,returned,value,is,the,same,for,all,inputs,in,a,given,operator,instance,if,state,partitioning,is,applied,the,value,returned,depends,on,the,current,operator,input,as,the,operator,maintains,an,independent,state,for,each,partition,p,if,you,didn,t,specify,a,default,value,when,creating,the,link,value,state,descriptor,this,will,return,code,null,when,to,value,was,previously,set,using,link,update,object,return,the,state,value,corresponding,to,the,current,input,throws,ioexception,thrown,if,the,system,cannot,access,the,state;t,value,throws,ioexception
ValueState -> T value() throws IOException_;1499314317;Returns the current value for the state. When the state is not_partitioned the returned value is the same for all inputs in a given_operator instance. If state partitioning is applied, the value returned_depends on the current operator input, as the operator maintains an_independent state for each partition.__<p>If you didn't specify a default value when creating the {@link ValueStateDescriptor}_this will return {@code null} when to value was previously set using {@link #update(Object)}.__@return The state value corresponding to the current input.__@throws IOException Thrown if the system cannot access the state.;T value() throws IOException_;returns,the,current,value,for,the,state,when,the,state,is,not,partitioned,the,returned,value,is,the,same,for,all,inputs,in,a,given,operator,instance,if,state,partitioning,is,applied,the,value,returned,depends,on,the,current,operator,input,as,the,operator,maintains,an,independent,state,for,each,partition,p,if,you,didn,t,specify,a,default,value,when,creating,the,link,value,state,descriptor,this,will,return,code,null,when,to,value,was,previously,set,using,link,update,object,return,the,state,value,corresponding,to,the,current,input,throws,ioexception,thrown,if,the,system,cannot,access,the,state;t,value,throws,ioexception
ValueState -> T value() throws IOException_;1521628649;Returns the current value for the state. When the state is not_partitioned the returned value is the same for all inputs in a given_operator instance. If state partitioning is applied, the value returned_depends on the current operator input, as the operator maintains an_independent state for each partition.__<p>If you didn't specify a default value when creating the {@link ValueStateDescriptor}_this will return {@code null} when to value was previously set using {@link #update(Object)}.__@return The state value corresponding to the current input.__@throws IOException Thrown if the system cannot access the state.;T value() throws IOException_;returns,the,current,value,for,the,state,when,the,state,is,not,partitioned,the,returned,value,is,the,same,for,all,inputs,in,a,given,operator,instance,if,state,partitioning,is,applied,the,value,returned,depends,on,the,current,operator,input,as,the,operator,maintains,an,independent,state,for,each,partition,p,if,you,didn,t,specify,a,default,value,when,creating,the,link,value,state,descriptor,this,will,return,code,null,when,to,value,was,previously,set,using,link,update,object,return,the,state,value,corresponding,to,the,current,input,throws,ioexception,thrown,if,the,system,cannot,access,the,state;t,value,throws,ioexception
