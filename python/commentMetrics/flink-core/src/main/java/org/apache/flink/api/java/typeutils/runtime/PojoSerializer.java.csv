# id;timestamp;commentText;codeText;commentWords;codeWords
PojoSerializer -> private int findField(String fieldName);1497328697;Finds and returns the order (0-based) of a POJO field._Returns -1 if the field does not exist for this POJO.;private int findField(String fieldName) {_		int foundIndex = 0__		for (Field field : fields) {_			if (fieldName.equals(field.getName())) {_				return foundIndex__			}__			foundIndex++__		}__		return -1__	};finds,and,returns,the,order,0,based,of,a,pojo,field,returns,1,if,the,field,does,not,exist,for,this,pojo;private,int,find,field,string,field,name,int,found,index,0,for,field,field,fields,if,field,name,equals,field,get,name,return,found,index,found,index,return,1
PojoSerializer -> private int findField(String fieldName);1497328697;Finds and returns the order (0-based) of a POJO field._Returns -1 if the field does not exist for this POJO.;private int findField(String fieldName) {_		int foundIndex = 0__		for (Field field : fields) {_			if (field != null && fieldName.equals(field.getName())) {_				return foundIndex__			}__			foundIndex++__		}__		return -1__	};finds,and,returns,the,order,0,based,of,a,pojo,field,returns,1,if,the,field,does,not,exist,for,this,pojo;private,int,find,field,string,field,name,int,found,index,0,for,field,field,fields,if,field,null,field,name,equals,field,get,name,return,found,index,found,index,return,1
PojoSerializer -> private int findField(String fieldName);1525657109;Finds and returns the order (0-based) of a POJO field._Returns -1 if the field does not exist for this POJO.;private int findField(String fieldName) {_		int foundIndex = 0__		for (Field field : fields) {_			if (field != null && fieldName.equals(field.getName())) {_				return foundIndex__			}__			foundIndex++__		}__		return -1__	};finds,and,returns,the,order,0,based,of,a,pojo,field,returns,1,if,the,field,does,not,exist,for,this,pojo;private,int,find,field,string,field,name,int,found,index,0,for,field,field,fields,if,field,null,field,name,equals,field,get,name,return,found,index,found,index,return,1
PojoSerializer -> private int findField(String fieldName);1539149027;Finds and returns the order (0-based) of a POJO field._Returns -1 if the field does not exist for this POJO.;private int findField(String fieldName) {_		int foundIndex = 0__		for (Field field : fields) {_			if (field != null && fieldName.equals(field.getName())) {_				return foundIndex__			}__			foundIndex++__		}__		return -1__	};finds,and,returns,the,order,0,based,of,a,pojo,field,returns,1,if,the,field,does,not,exist,for,this,pojo;private,int,find,field,string,field,name,int,found,index,0,for,field,field,fields,if,field,null,field,name,equals,field,get,name,return,found,index,found,index,return,1
PojoSerializer -> private int findField(String fieldName);1539149040;Finds and returns the order (0-based) of a POJO field._Returns -1 if the field does not exist for this POJO.;private int findField(String fieldName) {_		int foundIndex = 0__		for (Field field : fields) {_			if (field != null && fieldName.equals(field.getName())) {_				return foundIndex__			}__			foundIndex++__		}__		return -1__	};finds,and,returns,the,order,0,based,of,a,pojo,field,returns,1,if,the,field,does,not,exist,for,this,pojo;private,int,find,field,string,field,name,int,found,index,0,for,field,field,fields,if,field,null,field,name,equals,field,get,name,return,found,index,found,index,return,1
PojoSerializer -> private int findField(String fieldName);1539149114;Finds and returns the order (0-based) of a POJO field._Returns -1 if the field does not exist for this POJO.;private int findField(String fieldName) {_		int foundIndex = 0__		for (Field field : fields) {_			if (field != null && fieldName.equals(field.getName())) {_				return foundIndex__			}__			foundIndex++__		}__		return -1__	};finds,and,returns,the,order,0,based,of,a,pojo,field,returns,1,if,the,field,does,not,exist,for,this,pojo;private,int,find,field,string,field,name,int,found,index,0,for,field,field,fields,if,field,null,field,name,equals,field,get,name,return,found,index,found,index,return,1
PojoSerializer -> private int findField(String fieldName);1542041081;Finds and returns the order (0-based) of a POJO field._Returns -1 if the field does not exist for this POJO.;private int findField(String fieldName) {_		int foundIndex = 0__		for (Field field : fields) {_			if (field != null && fieldName.equals(field.getName())) {_				return foundIndex__			}__			foundIndex++__		}__		return -1__	};finds,and,returns,the,order,0,based,of,a,pojo,field,returns,1,if,the,field,does,not,exist,for,this,pojo;private,int,find,field,string,field,name,int,found,index,0,for,field,field,fields,if,field,null,field,name,equals,field,get,name,return,found,index,found,index,return,1
PojoSerializer -> private int findField(String fieldName);1550652777;Finds and returns the order (0-based) of a POJO field._Returns -1 if the field does not exist for this POJO.;private int findField(String fieldName) {_		int foundIndex = 0__		for (Field field : fields) {_			if (field != null && fieldName.equals(field.getName())) {_				return foundIndex__			}__			foundIndex++__		}__		return -1__	};finds,and,returns,the,order,0,based,of,a,pojo,field,returns,1,if,the,field,does,not,exist,for,this,pojo;private,int,find,field,string,field,name,int,found,index,0,for,field,field,fields,if,field,null,field,name,equals,field,get,name,return,found,index,found,index,return,1
PojoSerializer -> private int findField(String fieldName);1550821416;Finds and returns the order (0-based) of a POJO field._Returns -1 if the field does not exist for this POJO.;private int findField(String fieldName) {_		int foundIndex = 0__		for (Field field : fields) {_			if (field != null && fieldName.equals(field.getName())) {_				return foundIndex__			}__			foundIndex++__		}__		return -1__	};finds,and,returns,the,order,0,based,of,a,pojo,field,returns,1,if,the,field,does,not,exist,for,this,pojo;private,int,find,field,string,field,name,int,found,index,0,for,field,field,fields,if,field,null,field,name,equals,field,get,name,return,found,index,found,index,return,1
PojoSerializer -> private int findField(String fieldName);1550821417;Finds and returns the order (0-based) of a POJO field._Returns -1 if the field does not exist for this POJO.;private int findField(String fieldName) {_		int foundIndex = 0__		for (Field field : fields) {_			if (field != null && fieldName.equals(field.getName())) {_				return foundIndex__			}__			foundIndex++__		}__		return -1__	};finds,and,returns,the,order,0,based,of,a,pojo,field,returns,1,if,the,field,does,not,exist,for,this,pojo;private,int,find,field,string,field,name,int,found,index,0,for,field,field,fields,if,field,null,field,name,equals,field,get,name,return,found,index,found,index,return,1
PojoSerializer -> private int findField(String fieldName);1550821418;Finds and returns the order (0-based) of a POJO field._Returns -1 if the field does not exist for this POJO.;private int findField(String fieldName) {_		int foundIndex = 0__		for (Field field : fields) {_			if (field != null && fieldName.equals(field.getName())) {_				return foundIndex__			}__			foundIndex++__		}__		return -1__	};finds,and,returns,the,order,0,based,of,a,pojo,field,returns,1,if,the,field,does,not,exist,for,this,pojo;private,int,find,field,string,field,name,int,found,index,0,for,field,field,fields,if,field,null,field,name,equals,field,get,name,return,found,index,found,index,return,1
PojoSerializer -> private static <T> PojoSerializerConfigSnapshot<T> buildConfigSnapshot( 			Class<T> pojoType, 			LinkedHashMap<Class<?>, Integer> registeredSubclassesToTags, 			TypeSerializer<?>[] registeredSubclassSerializers, 			Field[] fields, 			TypeSerializer<?>[] fieldSerializers, 			HashMap<Class<?>, TypeSerializer<?>> nonRegisteredSubclassSerializerCache);1494180263;Build and return a snapshot of the serializer's parameters and currently cached serializers.;private static <T> PojoSerializerConfigSnapshot<T> buildConfigSnapshot(_			Class<T> pojoType,_			LinkedHashMap<Class<?>, Integer> registeredSubclassesToTags,_			TypeSerializer<?>[] registeredSubclassSerializers,_			Field[] fields,_			TypeSerializer<?>[] fieldSerializers,_			HashMap<Class<?>, TypeSerializer<?>> nonRegisteredSubclassSerializerCache) {__		final LinkedHashMap<Field, TypeSerializerConfigSnapshot> fieldToSerializerConfigSnapshots =_			new LinkedHashMap<>(fields.length)___		for (int i = 0_ i < fields.length_ i++) {_			fieldToSerializerConfigSnapshots.put(fields[i], fieldSerializers[i].snapshotConfiguration())__		}__		final LinkedHashMap<Class<?>, TypeSerializerConfigSnapshot> registeredSubclassesToSerializerConfigSnapshots =_				new LinkedHashMap<>(registeredSubclassesToTags.size())___		for (Map.Entry<Class<?>, Integer> entry : registeredSubclassesToTags.entrySet()) {_			registeredSubclassesToSerializerConfigSnapshots.put(_					entry.getKey(),_					registeredSubclassSerializers[entry.getValue()].snapshotConfiguration())__		}__		final HashMap<Class<?>, TypeSerializerConfigSnapshot> nonRegisteredSubclassesToSerializerConfigSnapshots =_				new LinkedHashMap<>(nonRegisteredSubclassSerializerCache.size())___		for (Map.Entry<Class<?>, TypeSerializer<?>> entry : nonRegisteredSubclassSerializerCache.entrySet()) {_			nonRegisteredSubclassesToSerializerConfigSnapshots.put(entry.getKey(), entry.getValue().snapshotConfiguration())__		}__		return new PojoSerializerConfigSnapshot<>(_				pojoType,_				fieldToSerializerConfigSnapshots,_				registeredSubclassesToSerializerConfigSnapshots,_				nonRegisteredSubclassesToSerializerConfigSnapshots)__	};build,and,return,a,snapshot,of,the,serializer,s,parameters,and,currently,cached,serializers;private,static,t,pojo,serializer,config,snapshot,t,build,config,snapshot,class,t,pojo,type,linked,hash,map,class,integer,registered,subclasses,to,tags,type,serializer,registered,subclass,serializers,field,fields,type,serializer,field,serializers,hash,map,class,type,serializer,non,registered,subclass,serializer,cache,final,linked,hash,map,field,type,serializer,config,snapshot,field,to,serializer,config,snapshots,new,linked,hash,map,fields,length,for,int,i,0,i,fields,length,i,field,to,serializer,config,snapshots,put,fields,i,field,serializers,i,snapshot,configuration,final,linked,hash,map,class,type,serializer,config,snapshot,registered,subclasses,to,serializer,config,snapshots,new,linked,hash,map,registered,subclasses,to,tags,size,for,map,entry,class,integer,entry,registered,subclasses,to,tags,entry,set,registered,subclasses,to,serializer,config,snapshots,put,entry,get,key,registered,subclass,serializers,entry,get,value,snapshot,configuration,final,hash,map,class,type,serializer,config,snapshot,non,registered,subclasses,to,serializer,config,snapshots,new,linked,hash,map,non,registered,subclass,serializer,cache,size,for,map,entry,class,type,serializer,entry,non,registered,subclass,serializer,cache,entry,set,non,registered,subclasses,to,serializer,config,snapshots,put,entry,get,key,entry,get,value,snapshot,configuration,return,new,pojo,serializer,config,snapshot,pojo,type,field,to,serializer,config,snapshots,registered,subclasses,to,serializer,config,snapshots,non,registered,subclasses,to,serializer,config,snapshots
PojoSerializer -> private static <T> PojoSerializerConfigSnapshot<T> buildConfigSnapshot( 			Class<T> pojoType, 			LinkedHashMap<Class<?>, Integer> registeredSubclassesToTags, 			TypeSerializer<?>[] registeredSubclassSerializers, 			Field[] fields, 			TypeSerializer<?>[] fieldSerializers, 			HashMap<Class<?>, TypeSerializer<?>> nonRegisteredSubclassSerializerCache);1494658833;Build and return a snapshot of the serializer's parameters and currently cached serializers.;private static <T> PojoSerializerConfigSnapshot<T> buildConfigSnapshot(_			Class<T> pojoType,_			LinkedHashMap<Class<?>, Integer> registeredSubclassesToTags,_			TypeSerializer<?>[] registeredSubclassSerializers,_			Field[] fields,_			TypeSerializer<?>[] fieldSerializers,_			HashMap<Class<?>, TypeSerializer<?>> nonRegisteredSubclassSerializerCache) {__		final LinkedHashMap<Field, TypeSerializerConfigSnapshot> fieldToSerializerConfigSnapshots =_			new LinkedHashMap<>(fields.length)___		for (int i = 0_ i < fields.length_ i++) {_			fieldToSerializerConfigSnapshots.put(fields[i], fieldSerializers[i].snapshotConfiguration())__		}__		final LinkedHashMap<Class<?>, TypeSerializerConfigSnapshot> registeredSubclassesToSerializerConfigSnapshots =_				new LinkedHashMap<>(registeredSubclassesToTags.size())___		for (Map.Entry<Class<?>, Integer> entry : registeredSubclassesToTags.entrySet()) {_			registeredSubclassesToSerializerConfigSnapshots.put(_					entry.getKey(),_					registeredSubclassSerializers[entry.getValue()].snapshotConfiguration())__		}__		final HashMap<Class<?>, TypeSerializerConfigSnapshot> nonRegisteredSubclassesToSerializerConfigSnapshots =_				new LinkedHashMap<>(nonRegisteredSubclassSerializerCache.size())___		for (Map.Entry<Class<?>, TypeSerializer<?>> entry : nonRegisteredSubclassSerializerCache.entrySet()) {_			nonRegisteredSubclassesToSerializerConfigSnapshots.put(entry.getKey(), entry.getValue().snapshotConfiguration())__		}__		return new PojoSerializerConfigSnapshot<>(_				pojoType,_				fieldToSerializerConfigSnapshots,_				registeredSubclassesToSerializerConfigSnapshots,_				nonRegisteredSubclassesToSerializerConfigSnapshots)__	};build,and,return,a,snapshot,of,the,serializer,s,parameters,and,currently,cached,serializers;private,static,t,pojo,serializer,config,snapshot,t,build,config,snapshot,class,t,pojo,type,linked,hash,map,class,integer,registered,subclasses,to,tags,type,serializer,registered,subclass,serializers,field,fields,type,serializer,field,serializers,hash,map,class,type,serializer,non,registered,subclass,serializer,cache,final,linked,hash,map,field,type,serializer,config,snapshot,field,to,serializer,config,snapshots,new,linked,hash,map,fields,length,for,int,i,0,i,fields,length,i,field,to,serializer,config,snapshots,put,fields,i,field,serializers,i,snapshot,configuration,final,linked,hash,map,class,type,serializer,config,snapshot,registered,subclasses,to,serializer,config,snapshots,new,linked,hash,map,registered,subclasses,to,tags,size,for,map,entry,class,integer,entry,registered,subclasses,to,tags,entry,set,registered,subclasses,to,serializer,config,snapshots,put,entry,get,key,registered,subclass,serializers,entry,get,value,snapshot,configuration,final,hash,map,class,type,serializer,config,snapshot,non,registered,subclasses,to,serializer,config,snapshots,new,linked,hash,map,non,registered,subclass,serializer,cache,size,for,map,entry,class,type,serializer,entry,non,registered,subclass,serializer,cache,entry,set,non,registered,subclasses,to,serializer,config,snapshots,put,entry,get,key,entry,get,value,snapshot,configuration,return,new,pojo,serializer,config,snapshot,pojo,type,field,to,serializer,config,snapshots,registered,subclasses,to,serializer,config,snapshots,non,registered,subclasses,to,serializer,config,snapshots
PojoSerializer -> private static <T> PojoSerializerConfigSnapshot<T> buildConfigSnapshot( 			Class<T> pojoType, 			LinkedHashMap<Class<?>, Integer> registeredSubclassesToTags, 			TypeSerializer<?>[] registeredSubclassSerializers, 			Field[] fields, 			TypeSerializer<?>[] fieldSerializers, 			HashMap<Class<?>, TypeSerializer<?>> nonRegisteredSubclassSerializerCache);1495466666;Build and return a snapshot of the serializer's parameters and currently cached serializers.;private static <T> PojoSerializerConfigSnapshot<T> buildConfigSnapshot(_			Class<T> pojoType,_			LinkedHashMap<Class<?>, Integer> registeredSubclassesToTags,_			TypeSerializer<?>[] registeredSubclassSerializers,_			Field[] fields,_			TypeSerializer<?>[] fieldSerializers,_			HashMap<Class<?>, TypeSerializer<?>> nonRegisteredSubclassSerializerCache) {__		final LinkedHashMap<Field, Tuple2<TypeSerializer<?>, TypeSerializerConfigSnapshot>> fieldToSerializerConfigSnapshots =_			new LinkedHashMap<>(fields.length)___		for (int i = 0_ i < fields.length_ i++) {_			fieldToSerializerConfigSnapshots.put(_				fields[i],_				new Tuple2<TypeSerializer<?>, TypeSerializerConfigSnapshot>(fieldSerializers[i], fieldSerializers[i].snapshotConfiguration()))__		}__		final LinkedHashMap<Class<?>, Tuple2<TypeSerializer<?>, TypeSerializerConfigSnapshot>> registeredSubclassesToSerializerConfigSnapshots =_				new LinkedHashMap<>(registeredSubclassesToTags.size())___		for (Map.Entry<Class<?>, Integer> entry : registeredSubclassesToTags.entrySet()) {_			registeredSubclassesToSerializerConfigSnapshots.put(_					entry.getKey(),_					new Tuple2<TypeSerializer<?>, TypeSerializerConfigSnapshot>(_						registeredSubclassSerializers[entry.getValue()],_						registeredSubclassSerializers[entry.getValue()].snapshotConfiguration()))__		}__		final HashMap<Class<?>, Tuple2<TypeSerializer<?>, TypeSerializerConfigSnapshot>> nonRegisteredSubclassesToSerializerConfigSnapshots =_				new LinkedHashMap<>(nonRegisteredSubclassSerializerCache.size())___		for (Map.Entry<Class<?>, TypeSerializer<?>> entry : nonRegisteredSubclassSerializerCache.entrySet()) {_			nonRegisteredSubclassesToSerializerConfigSnapshots.put(_				entry.getKey(),_				new Tuple2<TypeSerializer<?>, TypeSerializerConfigSnapshot>(_					entry.getValue(),_					entry.getValue().snapshotConfiguration()))__		}__		return new PojoSerializerConfigSnapshot<>(_				pojoType,_				fieldToSerializerConfigSnapshots,_				registeredSubclassesToSerializerConfigSnapshots,_				nonRegisteredSubclassesToSerializerConfigSnapshots)__	};build,and,return,a,snapshot,of,the,serializer,s,parameters,and,currently,cached,serializers;private,static,t,pojo,serializer,config,snapshot,t,build,config,snapshot,class,t,pojo,type,linked,hash,map,class,integer,registered,subclasses,to,tags,type,serializer,registered,subclass,serializers,field,fields,type,serializer,field,serializers,hash,map,class,type,serializer,non,registered,subclass,serializer,cache,final,linked,hash,map,field,tuple2,type,serializer,type,serializer,config,snapshot,field,to,serializer,config,snapshots,new,linked,hash,map,fields,length,for,int,i,0,i,fields,length,i,field,to,serializer,config,snapshots,put,fields,i,new,tuple2,type,serializer,type,serializer,config,snapshot,field,serializers,i,field,serializers,i,snapshot,configuration,final,linked,hash,map,class,tuple2,type,serializer,type,serializer,config,snapshot,registered,subclasses,to,serializer,config,snapshots,new,linked,hash,map,registered,subclasses,to,tags,size,for,map,entry,class,integer,entry,registered,subclasses,to,tags,entry,set,registered,subclasses,to,serializer,config,snapshots,put,entry,get,key,new,tuple2,type,serializer,type,serializer,config,snapshot,registered,subclass,serializers,entry,get,value,registered,subclass,serializers,entry,get,value,snapshot,configuration,final,hash,map,class,tuple2,type,serializer,type,serializer,config,snapshot,non,registered,subclasses,to,serializer,config,snapshots,new,linked,hash,map,non,registered,subclass,serializer,cache,size,for,map,entry,class,type,serializer,entry,non,registered,subclass,serializer,cache,entry,set,non,registered,subclasses,to,serializer,config,snapshots,put,entry,get,key,new,tuple2,type,serializer,type,serializer,config,snapshot,entry,get,value,entry,get,value,snapshot,configuration,return,new,pojo,serializer,config,snapshot,pojo,type,field,to,serializer,config,snapshots,registered,subclasses,to,serializer,config,snapshots,non,registered,subclasses,to,serializer,config,snapshots
PojoSerializer -> private static <T> PojoSerializerConfigSnapshot<T> buildConfigSnapshot( 			Class<T> pojoType, 			LinkedHashMap<Class<?>, Integer> registeredSubclassesToTags, 			TypeSerializer<?>[] registeredSubclassSerializers, 			Field[] fields, 			TypeSerializer<?>[] fieldSerializers, 			HashMap<Class<?>, TypeSerializer<?>> nonRegisteredSubclassSerializerCache);1497328697;Build and return a snapshot of the serializer's parameters and currently cached serializers.;private static <T> PojoSerializerConfigSnapshot<T> buildConfigSnapshot(_			Class<T> pojoType,_			LinkedHashMap<Class<?>, Integer> registeredSubclassesToTags,_			TypeSerializer<?>[] registeredSubclassSerializers,_			Field[] fields,_			TypeSerializer<?>[] fieldSerializers,_			HashMap<Class<?>, TypeSerializer<?>> nonRegisteredSubclassSerializerCache) {__		final LinkedHashMap<String, Tuple2<TypeSerializer<?>, TypeSerializerConfigSnapshot>> fieldToSerializerConfigSnapshots =_			new LinkedHashMap<>(fields.length)___		for (int i = 0_ i < fields.length_ i++) {_			fieldToSerializerConfigSnapshots.put(_				fields[i].getName(),_				new Tuple2<TypeSerializer<?>, TypeSerializerConfigSnapshot>(fieldSerializers[i], fieldSerializers[i].snapshotConfiguration()))__		}__		final LinkedHashMap<Class<?>, Tuple2<TypeSerializer<?>, TypeSerializerConfigSnapshot>> registeredSubclassesToSerializerConfigSnapshots =_				new LinkedHashMap<>(registeredSubclassesToTags.size())___		for (Map.Entry<Class<?>, Integer> entry : registeredSubclassesToTags.entrySet()) {_			registeredSubclassesToSerializerConfigSnapshots.put(_					entry.getKey(),_					new Tuple2<TypeSerializer<?>, TypeSerializerConfigSnapshot>(_						registeredSubclassSerializers[entry.getValue()],_						registeredSubclassSerializers[entry.getValue()].snapshotConfiguration()))__		}__		final HashMap<Class<?>, Tuple2<TypeSerializer<?>, TypeSerializerConfigSnapshot>> nonRegisteredSubclassesToSerializerConfigSnapshots =_				new LinkedHashMap<>(nonRegisteredSubclassSerializerCache.size())___		for (Map.Entry<Class<?>, TypeSerializer<?>> entry : nonRegisteredSubclassSerializerCache.entrySet()) {_			nonRegisteredSubclassesToSerializerConfigSnapshots.put(_				entry.getKey(),_				new Tuple2<TypeSerializer<?>, TypeSerializerConfigSnapshot>(_					entry.getValue(),_					entry.getValue().snapshotConfiguration()))__		}__		return new PojoSerializerConfigSnapshot<>(_				pojoType,_				fieldToSerializerConfigSnapshots,_				registeredSubclassesToSerializerConfigSnapshots,_				nonRegisteredSubclassesToSerializerConfigSnapshots)__	};build,and,return,a,snapshot,of,the,serializer,s,parameters,and,currently,cached,serializers;private,static,t,pojo,serializer,config,snapshot,t,build,config,snapshot,class,t,pojo,type,linked,hash,map,class,integer,registered,subclasses,to,tags,type,serializer,registered,subclass,serializers,field,fields,type,serializer,field,serializers,hash,map,class,type,serializer,non,registered,subclass,serializer,cache,final,linked,hash,map,string,tuple2,type,serializer,type,serializer,config,snapshot,field,to,serializer,config,snapshots,new,linked,hash,map,fields,length,for,int,i,0,i,fields,length,i,field,to,serializer,config,snapshots,put,fields,i,get,name,new,tuple2,type,serializer,type,serializer,config,snapshot,field,serializers,i,field,serializers,i,snapshot,configuration,final,linked,hash,map,class,tuple2,type,serializer,type,serializer,config,snapshot,registered,subclasses,to,serializer,config,snapshots,new,linked,hash,map,registered,subclasses,to,tags,size,for,map,entry,class,integer,entry,registered,subclasses,to,tags,entry,set,registered,subclasses,to,serializer,config,snapshots,put,entry,get,key,new,tuple2,type,serializer,type,serializer,config,snapshot,registered,subclass,serializers,entry,get,value,registered,subclass,serializers,entry,get,value,snapshot,configuration,final,hash,map,class,tuple2,type,serializer,type,serializer,config,snapshot,non,registered,subclasses,to,serializer,config,snapshots,new,linked,hash,map,non,registered,subclass,serializer,cache,size,for,map,entry,class,type,serializer,entry,non,registered,subclass,serializer,cache,entry,set,non,registered,subclasses,to,serializer,config,snapshots,put,entry,get,key,new,tuple2,type,serializer,type,serializer,config,snapshot,entry,get,value,entry,get,value,snapshot,configuration,return,new,pojo,serializer,config,snapshot,pojo,type,field,to,serializer,config,snapshots,registered,subclasses,to,serializer,config,snapshots,non,registered,subclasses,to,serializer,config,snapshots
PojoSerializer -> private static <T> PojoSerializerConfigSnapshot<T> buildConfigSnapshot( 			Class<T> pojoType, 			LinkedHashMap<Class<?>, Integer> registeredSubclassesToTags, 			TypeSerializer<?>[] registeredSubclassSerializers, 			Field[] fields, 			TypeSerializer<?>[] fieldSerializers, 			HashMap<Class<?>, TypeSerializer<?>> nonRegisteredSubclassSerializerCache);1497328697;Build and return a snapshot of the serializer's parameters and currently cached serializers.;private static <T> PojoSerializerConfigSnapshot<T> buildConfigSnapshot(_			Class<T> pojoType,_			LinkedHashMap<Class<?>, Integer> registeredSubclassesToTags,_			TypeSerializer<?>[] registeredSubclassSerializers,_			Field[] fields,_			TypeSerializer<?>[] fieldSerializers,_			HashMap<Class<?>, TypeSerializer<?>> nonRegisteredSubclassSerializerCache) {__		final LinkedHashMap<String, Tuple2<TypeSerializer<?>, TypeSerializerConfigSnapshot>> fieldToSerializerConfigSnapshots =_			new LinkedHashMap<>(fields.length)___		for (int i = 0_ i < fields.length_ i++) {_			fieldToSerializerConfigSnapshots.put(_				fields[i].getName(),_				new Tuple2<TypeSerializer<?>, TypeSerializerConfigSnapshot>(fieldSerializers[i], fieldSerializers[i].snapshotConfiguration()))__		}__		final LinkedHashMap<Class<?>, Tuple2<TypeSerializer<?>, TypeSerializerConfigSnapshot>> registeredSubclassesToSerializerConfigSnapshots =_				new LinkedHashMap<>(registeredSubclassesToTags.size())___		for (Map.Entry<Class<?>, Integer> entry : registeredSubclassesToTags.entrySet()) {_			registeredSubclassesToSerializerConfigSnapshots.put(_					entry.getKey(),_					new Tuple2<TypeSerializer<?>, TypeSerializerConfigSnapshot>(_						registeredSubclassSerializers[entry.getValue()],_						registeredSubclassSerializers[entry.getValue()].snapshotConfiguration()))__		}__		final HashMap<Class<?>, Tuple2<TypeSerializer<?>, TypeSerializerConfigSnapshot>> nonRegisteredSubclassesToSerializerConfigSnapshots =_				new LinkedHashMap<>(nonRegisteredSubclassSerializerCache.size())___		for (Map.Entry<Class<?>, TypeSerializer<?>> entry : nonRegisteredSubclassSerializerCache.entrySet()) {_			nonRegisteredSubclassesToSerializerConfigSnapshots.put(_				entry.getKey(),_				new Tuple2<TypeSerializer<?>, TypeSerializerConfigSnapshot>(_					entry.getValue(),_					entry.getValue().snapshotConfiguration()))__		}__		return new PojoSerializerConfigSnapshot<>(_				pojoType,_				fieldToSerializerConfigSnapshots,_				registeredSubclassesToSerializerConfigSnapshots,_				nonRegisteredSubclassesToSerializerConfigSnapshots)__	};build,and,return,a,snapshot,of,the,serializer,s,parameters,and,currently,cached,serializers;private,static,t,pojo,serializer,config,snapshot,t,build,config,snapshot,class,t,pojo,type,linked,hash,map,class,integer,registered,subclasses,to,tags,type,serializer,registered,subclass,serializers,field,fields,type,serializer,field,serializers,hash,map,class,type,serializer,non,registered,subclass,serializer,cache,final,linked,hash,map,string,tuple2,type,serializer,type,serializer,config,snapshot,field,to,serializer,config,snapshots,new,linked,hash,map,fields,length,for,int,i,0,i,fields,length,i,field,to,serializer,config,snapshots,put,fields,i,get,name,new,tuple2,type,serializer,type,serializer,config,snapshot,field,serializers,i,field,serializers,i,snapshot,configuration,final,linked,hash,map,class,tuple2,type,serializer,type,serializer,config,snapshot,registered,subclasses,to,serializer,config,snapshots,new,linked,hash,map,registered,subclasses,to,tags,size,for,map,entry,class,integer,entry,registered,subclasses,to,tags,entry,set,registered,subclasses,to,serializer,config,snapshots,put,entry,get,key,new,tuple2,type,serializer,type,serializer,config,snapshot,registered,subclass,serializers,entry,get,value,registered,subclass,serializers,entry,get,value,snapshot,configuration,final,hash,map,class,tuple2,type,serializer,type,serializer,config,snapshot,non,registered,subclasses,to,serializer,config,snapshots,new,linked,hash,map,non,registered,subclass,serializer,cache,size,for,map,entry,class,type,serializer,entry,non,registered,subclass,serializer,cache,entry,set,non,registered,subclasses,to,serializer,config,snapshots,put,entry,get,key,new,tuple2,type,serializer,type,serializer,config,snapshot,entry,get,value,entry,get,value,snapshot,configuration,return,new,pojo,serializer,config,snapshot,pojo,type,field,to,serializer,config,snapshots,registered,subclasses,to,serializer,config,snapshots,non,registered,subclasses,to,serializer,config,snapshots
PojoSerializer -> private static <T> PojoSerializerConfigSnapshot<T> buildConfigSnapshot( 			Class<T> pojoType, 			LinkedHashMap<Class<?>, Integer> registeredSubclassesToTags, 			TypeSerializer<?>[] registeredSubclassSerializers, 			Field[] fields, 			TypeSerializer<?>[] fieldSerializers, 			HashMap<Class<?>, TypeSerializer<?>> nonRegisteredSubclassSerializerCache);1525657109;Build and return a snapshot of the serializer's parameters and currently cached serializers.;private static <T> PojoSerializerConfigSnapshot<T> buildConfigSnapshot(_			Class<T> pojoType,_			LinkedHashMap<Class<?>, Integer> registeredSubclassesToTags,_			TypeSerializer<?>[] registeredSubclassSerializers,_			Field[] fields,_			TypeSerializer<?>[] fieldSerializers,_			HashMap<Class<?>, TypeSerializer<?>> nonRegisteredSubclassSerializerCache) {__		final LinkedHashMap<String, Tuple2<TypeSerializer<?>, TypeSerializerConfigSnapshot>> fieldToSerializerConfigSnapshots =_			new LinkedHashMap<>(fields.length)___		for (int i = 0_ i < fields.length_ i++) {_			fieldToSerializerConfigSnapshots.put(_				fields[i].getName(),_				new Tuple2<TypeSerializer<?>, TypeSerializerConfigSnapshot>(fieldSerializers[i], fieldSerializers[i].snapshotConfiguration()))__		}__		final LinkedHashMap<Class<?>, Tuple2<TypeSerializer<?>, TypeSerializerConfigSnapshot>> registeredSubclassesToSerializerConfigSnapshots =_				new LinkedHashMap<>(registeredSubclassesToTags.size())___		for (Map.Entry<Class<?>, Integer> entry : registeredSubclassesToTags.entrySet()) {_			registeredSubclassesToSerializerConfigSnapshots.put(_					entry.getKey(),_					new Tuple2<TypeSerializer<?>, TypeSerializerConfigSnapshot>(_						registeredSubclassSerializers[entry.getValue()],_						registeredSubclassSerializers[entry.getValue()].snapshotConfiguration()))__		}__		final HashMap<Class<?>, Tuple2<TypeSerializer<?>, TypeSerializerConfigSnapshot>> nonRegisteredSubclassesToSerializerConfigSnapshots =_				new LinkedHashMap<>(nonRegisteredSubclassSerializerCache.size())___		for (Map.Entry<Class<?>, TypeSerializer<?>> entry : nonRegisteredSubclassSerializerCache.entrySet()) {_			nonRegisteredSubclassesToSerializerConfigSnapshots.put(_				entry.getKey(),_				new Tuple2<TypeSerializer<?>, TypeSerializerConfigSnapshot>(_					entry.getValue(),_					entry.getValue().snapshotConfiguration()))__		}__		return new PojoSerializerConfigSnapshot<>(_				pojoType,_				fieldToSerializerConfigSnapshots,_				registeredSubclassesToSerializerConfigSnapshots,_				nonRegisteredSubclassesToSerializerConfigSnapshots)__	};build,and,return,a,snapshot,of,the,serializer,s,parameters,and,currently,cached,serializers;private,static,t,pojo,serializer,config,snapshot,t,build,config,snapshot,class,t,pojo,type,linked,hash,map,class,integer,registered,subclasses,to,tags,type,serializer,registered,subclass,serializers,field,fields,type,serializer,field,serializers,hash,map,class,type,serializer,non,registered,subclass,serializer,cache,final,linked,hash,map,string,tuple2,type,serializer,type,serializer,config,snapshot,field,to,serializer,config,snapshots,new,linked,hash,map,fields,length,for,int,i,0,i,fields,length,i,field,to,serializer,config,snapshots,put,fields,i,get,name,new,tuple2,type,serializer,type,serializer,config,snapshot,field,serializers,i,field,serializers,i,snapshot,configuration,final,linked,hash,map,class,tuple2,type,serializer,type,serializer,config,snapshot,registered,subclasses,to,serializer,config,snapshots,new,linked,hash,map,registered,subclasses,to,tags,size,for,map,entry,class,integer,entry,registered,subclasses,to,tags,entry,set,registered,subclasses,to,serializer,config,snapshots,put,entry,get,key,new,tuple2,type,serializer,type,serializer,config,snapshot,registered,subclass,serializers,entry,get,value,registered,subclass,serializers,entry,get,value,snapshot,configuration,final,hash,map,class,tuple2,type,serializer,type,serializer,config,snapshot,non,registered,subclasses,to,serializer,config,snapshots,new,linked,hash,map,non,registered,subclass,serializer,cache,size,for,map,entry,class,type,serializer,entry,non,registered,subclass,serializer,cache,entry,set,non,registered,subclasses,to,serializer,config,snapshots,put,entry,get,key,new,tuple2,type,serializer,type,serializer,config,snapshot,entry,get,value,entry,get,value,snapshot,configuration,return,new,pojo,serializer,config,snapshot,pojo,type,field,to,serializer,config,snapshots,registered,subclasses,to,serializer,config,snapshots,non,registered,subclasses,to,serializer,config,snapshots
PojoSerializer -> private static <T> PojoSerializerConfigSnapshot<T> buildConfigSnapshot( 			Class<T> pojoType, 			LinkedHashMap<Class<?>, Integer> registeredSubclassesToTags, 			TypeSerializer<?>[] registeredSubclassSerializers, 			Field[] fields, 			TypeSerializer<?>[] fieldSerializers, 			HashMap<Class<?>, TypeSerializer<?>> nonRegisteredSubclassSerializerCache);1539149027;Build and return a snapshot of the serializer's parameters and currently cached serializers.;private static <T> PojoSerializerConfigSnapshot<T> buildConfigSnapshot(_			Class<T> pojoType,_			LinkedHashMap<Class<?>, Integer> registeredSubclassesToTags,_			TypeSerializer<?>[] registeredSubclassSerializers,_			Field[] fields,_			TypeSerializer<?>[] fieldSerializers,_			HashMap<Class<?>, TypeSerializer<?>> nonRegisteredSubclassSerializerCache) {__		final LinkedHashMap<String, Tuple2<TypeSerializer<?>, TypeSerializerConfigSnapshot>> fieldToSerializerConfigSnapshots =_			new LinkedHashMap<>(fields.length)___		for (int i = 0_ i < fields.length_ i++) {_			fieldToSerializerConfigSnapshots.put(_				fields[i].getName(),_				new Tuple2<TypeSerializer<?>, TypeSerializerConfigSnapshot>(fieldSerializers[i], fieldSerializers[i].snapshotConfiguration()))__		}__		final LinkedHashMap<Class<?>, Tuple2<TypeSerializer<?>, TypeSerializerConfigSnapshot>> registeredSubclassesToSerializerConfigSnapshots =_				new LinkedHashMap<>(registeredSubclassesToTags.size())___		for (Map.Entry<Class<?>, Integer> entry : registeredSubclassesToTags.entrySet()) {_			registeredSubclassesToSerializerConfigSnapshots.put(_					entry.getKey(),_					new Tuple2<TypeSerializer<?>, TypeSerializerConfigSnapshot>(_						registeredSubclassSerializers[entry.getValue()],_						registeredSubclassSerializers[entry.getValue()].snapshotConfiguration()))__		}__		final HashMap<Class<?>, Tuple2<TypeSerializer<?>, TypeSerializerConfigSnapshot>> nonRegisteredSubclassesToSerializerConfigSnapshots =_				new LinkedHashMap<>(nonRegisteredSubclassSerializerCache.size())___		for (Map.Entry<Class<?>, TypeSerializer<?>> entry : nonRegisteredSubclassSerializerCache.entrySet()) {_			nonRegisteredSubclassesToSerializerConfigSnapshots.put(_				entry.getKey(),_				new Tuple2<TypeSerializer<?>, TypeSerializerConfigSnapshot>(_					entry.getValue(),_					entry.getValue().snapshotConfiguration()))__		}__		return new PojoSerializerConfigSnapshot<>(_				pojoType,_				fieldToSerializerConfigSnapshots,_				registeredSubclassesToSerializerConfigSnapshots,_				nonRegisteredSubclassesToSerializerConfigSnapshots)__	};build,and,return,a,snapshot,of,the,serializer,s,parameters,and,currently,cached,serializers;private,static,t,pojo,serializer,config,snapshot,t,build,config,snapshot,class,t,pojo,type,linked,hash,map,class,integer,registered,subclasses,to,tags,type,serializer,registered,subclass,serializers,field,fields,type,serializer,field,serializers,hash,map,class,type,serializer,non,registered,subclass,serializer,cache,final,linked,hash,map,string,tuple2,type,serializer,type,serializer,config,snapshot,field,to,serializer,config,snapshots,new,linked,hash,map,fields,length,for,int,i,0,i,fields,length,i,field,to,serializer,config,snapshots,put,fields,i,get,name,new,tuple2,type,serializer,type,serializer,config,snapshot,field,serializers,i,field,serializers,i,snapshot,configuration,final,linked,hash,map,class,tuple2,type,serializer,type,serializer,config,snapshot,registered,subclasses,to,serializer,config,snapshots,new,linked,hash,map,registered,subclasses,to,tags,size,for,map,entry,class,integer,entry,registered,subclasses,to,tags,entry,set,registered,subclasses,to,serializer,config,snapshots,put,entry,get,key,new,tuple2,type,serializer,type,serializer,config,snapshot,registered,subclass,serializers,entry,get,value,registered,subclass,serializers,entry,get,value,snapshot,configuration,final,hash,map,class,tuple2,type,serializer,type,serializer,config,snapshot,non,registered,subclasses,to,serializer,config,snapshots,new,linked,hash,map,non,registered,subclass,serializer,cache,size,for,map,entry,class,type,serializer,entry,non,registered,subclass,serializer,cache,entry,set,non,registered,subclasses,to,serializer,config,snapshots,put,entry,get,key,new,tuple2,type,serializer,type,serializer,config,snapshot,entry,get,value,entry,get,value,snapshot,configuration,return,new,pojo,serializer,config,snapshot,pojo,type,field,to,serializer,config,snapshots,registered,subclasses,to,serializer,config,snapshots,non,registered,subclasses,to,serializer,config,snapshots
PojoSerializer -> private static <T> PojoSerializerConfigSnapshot<T> buildConfigSnapshot( 			Class<T> pojoType, 			LinkedHashMap<Class<?>, Integer> registeredSubclassesToTags, 			TypeSerializer<?>[] registeredSubclassSerializers, 			Field[] fields, 			TypeSerializer<?>[] fieldSerializers, 			HashMap<Class<?>, TypeSerializer<?>> nonRegisteredSubclassSerializerCache);1539149040;Build and return a snapshot of the serializer's parameters and currently cached serializers.;private static <T> PojoSerializerConfigSnapshot<T> buildConfigSnapshot(_			Class<T> pojoType,_			LinkedHashMap<Class<?>, Integer> registeredSubclassesToTags,_			TypeSerializer<?>[] registeredSubclassSerializers,_			Field[] fields,_			TypeSerializer<?>[] fieldSerializers,_			HashMap<Class<?>, TypeSerializer<?>> nonRegisteredSubclassSerializerCache) {__		final LinkedHashMap<String, Tuple2<TypeSerializer<?>, TypeSerializerConfigSnapshot>> fieldToSerializerConfigSnapshots =_			new LinkedHashMap<>(fields.length)___		for (int i = 0_ i < fields.length_ i++) {_			fieldToSerializerConfigSnapshots.put(_				fields[i].getName(),_				new Tuple2<TypeSerializer<?>, TypeSerializerConfigSnapshot>(fieldSerializers[i], fieldSerializers[i].snapshotConfiguration()))__		}__		final LinkedHashMap<Class<?>, Tuple2<TypeSerializer<?>, TypeSerializerConfigSnapshot>> registeredSubclassesToSerializerConfigSnapshots =_				new LinkedHashMap<>(registeredSubclassesToTags.size())___		for (Map.Entry<Class<?>, Integer> entry : registeredSubclassesToTags.entrySet()) {_			registeredSubclassesToSerializerConfigSnapshots.put(_					entry.getKey(),_					new Tuple2<TypeSerializer<?>, TypeSerializerConfigSnapshot>(_						registeredSubclassSerializers[entry.getValue()],_						registeredSubclassSerializers[entry.getValue()].snapshotConfiguration()))__		}__		final HashMap<Class<?>, Tuple2<TypeSerializer<?>, TypeSerializerConfigSnapshot>> nonRegisteredSubclassesToSerializerConfigSnapshots =_				new LinkedHashMap<>(nonRegisteredSubclassSerializerCache.size())___		for (Map.Entry<Class<?>, TypeSerializer<?>> entry : nonRegisteredSubclassSerializerCache.entrySet()) {_			nonRegisteredSubclassesToSerializerConfigSnapshots.put(_				entry.getKey(),_				new Tuple2<TypeSerializer<?>, TypeSerializerConfigSnapshot>(_					entry.getValue(),_					entry.getValue().snapshotConfiguration()))__		}__		return new PojoSerializerConfigSnapshot<>(_				pojoType,_				fieldToSerializerConfigSnapshots,_				registeredSubclassesToSerializerConfigSnapshots,_				nonRegisteredSubclassesToSerializerConfigSnapshots)__	};build,and,return,a,snapshot,of,the,serializer,s,parameters,and,currently,cached,serializers;private,static,t,pojo,serializer,config,snapshot,t,build,config,snapshot,class,t,pojo,type,linked,hash,map,class,integer,registered,subclasses,to,tags,type,serializer,registered,subclass,serializers,field,fields,type,serializer,field,serializers,hash,map,class,type,serializer,non,registered,subclass,serializer,cache,final,linked,hash,map,string,tuple2,type,serializer,type,serializer,config,snapshot,field,to,serializer,config,snapshots,new,linked,hash,map,fields,length,for,int,i,0,i,fields,length,i,field,to,serializer,config,snapshots,put,fields,i,get,name,new,tuple2,type,serializer,type,serializer,config,snapshot,field,serializers,i,field,serializers,i,snapshot,configuration,final,linked,hash,map,class,tuple2,type,serializer,type,serializer,config,snapshot,registered,subclasses,to,serializer,config,snapshots,new,linked,hash,map,registered,subclasses,to,tags,size,for,map,entry,class,integer,entry,registered,subclasses,to,tags,entry,set,registered,subclasses,to,serializer,config,snapshots,put,entry,get,key,new,tuple2,type,serializer,type,serializer,config,snapshot,registered,subclass,serializers,entry,get,value,registered,subclass,serializers,entry,get,value,snapshot,configuration,final,hash,map,class,tuple2,type,serializer,type,serializer,config,snapshot,non,registered,subclasses,to,serializer,config,snapshots,new,linked,hash,map,non,registered,subclass,serializer,cache,size,for,map,entry,class,type,serializer,entry,non,registered,subclass,serializer,cache,entry,set,non,registered,subclasses,to,serializer,config,snapshots,put,entry,get,key,new,tuple2,type,serializer,type,serializer,config,snapshot,entry,get,value,entry,get,value,snapshot,configuration,return,new,pojo,serializer,config,snapshot,pojo,type,field,to,serializer,config,snapshots,registered,subclasses,to,serializer,config,snapshots,non,registered,subclasses,to,serializer,config,snapshots
PojoSerializer -> private static <T> PojoSerializerConfigSnapshot<T> buildConfigSnapshot( 			Class<T> pojoType, 			LinkedHashMap<Class<?>, Integer> registeredSubclassesToTags, 			TypeSerializer<?>[] registeredSubclassSerializers, 			Field[] fields, 			TypeSerializer<?>[] fieldSerializers, 			HashMap<Class<?>, TypeSerializer<?>> nonRegisteredSubclassSerializerCache);1539149114;Build and return a snapshot of the serializer's parameters and currently cached serializers.;private static <T> PojoSerializerConfigSnapshot<T> buildConfigSnapshot(_			Class<T> pojoType,_			LinkedHashMap<Class<?>, Integer> registeredSubclassesToTags,_			TypeSerializer<?>[] registeredSubclassSerializers,_			Field[] fields,_			TypeSerializer<?>[] fieldSerializers,_			HashMap<Class<?>, TypeSerializer<?>> nonRegisteredSubclassSerializerCache) {__		final LinkedHashMap<String, Tuple2<TypeSerializer<?>, TypeSerializerSnapshot<?>>> fieldToSerializerConfigSnapshots =_			new LinkedHashMap<>(fields.length)___		for (int i = 0_ i < fields.length_ i++) {_			fieldToSerializerConfigSnapshots.put(_				fields[i].getName(),_				new Tuple2<>(fieldSerializers[i], fieldSerializers[i].snapshotConfiguration()))__		}__		final LinkedHashMap<Class<?>, Tuple2<TypeSerializer<?>, TypeSerializerSnapshot<?>>> registeredSubclassesToSerializerConfigSnapshots =_				new LinkedHashMap<>(registeredSubclassesToTags.size())___		for (Map.Entry<Class<?>, Integer> entry : registeredSubclassesToTags.entrySet()) {_			registeredSubclassesToSerializerConfigSnapshots.put(_					entry.getKey(),_					new Tuple2<>(_						registeredSubclassSerializers[entry.getValue()],_						registeredSubclassSerializers[entry.getValue()].snapshotConfiguration()))__		}__		final HashMap<Class<?>, Tuple2<TypeSerializer<?>, TypeSerializerSnapshot<?>>> nonRegisteredSubclassesToSerializerConfigSnapshots =_				new LinkedHashMap<>(nonRegisteredSubclassSerializerCache.size())___		for (Map.Entry<Class<?>, TypeSerializer<?>> entry : nonRegisteredSubclassSerializerCache.entrySet()) {_			nonRegisteredSubclassesToSerializerConfigSnapshots.put(_				entry.getKey(),_				new Tuple2<>(entry.getValue(), entry.getValue().snapshotConfiguration()))__		}__		return new PojoSerializerConfigSnapshot<>(_				pojoType,_				fieldToSerializerConfigSnapshots,_				registeredSubclassesToSerializerConfigSnapshots,_				nonRegisteredSubclassesToSerializerConfigSnapshots)__	};build,and,return,a,snapshot,of,the,serializer,s,parameters,and,currently,cached,serializers;private,static,t,pojo,serializer,config,snapshot,t,build,config,snapshot,class,t,pojo,type,linked,hash,map,class,integer,registered,subclasses,to,tags,type,serializer,registered,subclass,serializers,field,fields,type,serializer,field,serializers,hash,map,class,type,serializer,non,registered,subclass,serializer,cache,final,linked,hash,map,string,tuple2,type,serializer,type,serializer,snapshot,field,to,serializer,config,snapshots,new,linked,hash,map,fields,length,for,int,i,0,i,fields,length,i,field,to,serializer,config,snapshots,put,fields,i,get,name,new,tuple2,field,serializers,i,field,serializers,i,snapshot,configuration,final,linked,hash,map,class,tuple2,type,serializer,type,serializer,snapshot,registered,subclasses,to,serializer,config,snapshots,new,linked,hash,map,registered,subclasses,to,tags,size,for,map,entry,class,integer,entry,registered,subclasses,to,tags,entry,set,registered,subclasses,to,serializer,config,snapshots,put,entry,get,key,new,tuple2,registered,subclass,serializers,entry,get,value,registered,subclass,serializers,entry,get,value,snapshot,configuration,final,hash,map,class,tuple2,type,serializer,type,serializer,snapshot,non,registered,subclasses,to,serializer,config,snapshots,new,linked,hash,map,non,registered,subclass,serializer,cache,size,for,map,entry,class,type,serializer,entry,non,registered,subclass,serializer,cache,entry,set,non,registered,subclasses,to,serializer,config,snapshots,put,entry,get,key,new,tuple2,entry,get,value,entry,get,value,snapshot,configuration,return,new,pojo,serializer,config,snapshot,pojo,type,field,to,serializer,config,snapshots,registered,subclasses,to,serializer,config,snapshots,non,registered,subclasses,to,serializer,config,snapshots
PojoSerializer -> private static <T> PojoSerializerConfigSnapshot<T> buildConfigSnapshot( 			Class<T> pojoType, 			LinkedHashMap<Class<?>, Integer> registeredSubclassesToTags, 			TypeSerializer<?>[] registeredSubclassSerializers, 			Field[] fields, 			TypeSerializer<?>[] fieldSerializers, 			HashMap<Class<?>, TypeSerializer<?>> nonRegisteredSubclassSerializerCache);1542041081;Build and return a snapshot of the serializer's parameters and currently cached serializers.;private static <T> PojoSerializerConfigSnapshot<T> buildConfigSnapshot(_			Class<T> pojoType,_			LinkedHashMap<Class<?>, Integer> registeredSubclassesToTags,_			TypeSerializer<?>[] registeredSubclassSerializers,_			Field[] fields,_			TypeSerializer<?>[] fieldSerializers,_			HashMap<Class<?>, TypeSerializer<?>> nonRegisteredSubclassSerializerCache) {__		final LinkedHashMap<String, Tuple2<TypeSerializer<?>, TypeSerializerSnapshot<?>>> fieldToSerializerConfigSnapshots =_			new LinkedHashMap<>(fields.length)___		for (int i = 0_ i < fields.length_ i++) {_			fieldToSerializerConfigSnapshots.put(_				fields[i].getName(),_				new Tuple2<>(fieldSerializers[i], fieldSerializers[i].snapshotConfiguration()))__		}__		final LinkedHashMap<Class<?>, Tuple2<TypeSerializer<?>, TypeSerializerSnapshot<?>>> registeredSubclassesToSerializerConfigSnapshots =_				new LinkedHashMap<>(registeredSubclassesToTags.size())___		for (Map.Entry<Class<?>, Integer> entry : registeredSubclassesToTags.entrySet()) {_			registeredSubclassesToSerializerConfigSnapshots.put(_					entry.getKey(),_					new Tuple2<>(_						registeredSubclassSerializers[entry.getValue()],_						registeredSubclassSerializers[entry.getValue()].snapshotConfiguration()))__		}__		final HashMap<Class<?>, Tuple2<TypeSerializer<?>, TypeSerializerSnapshot<?>>> nonRegisteredSubclassesToSerializerConfigSnapshots =_				new LinkedHashMap<>(nonRegisteredSubclassSerializerCache.size())___		for (Map.Entry<Class<?>, TypeSerializer<?>> entry : nonRegisteredSubclassSerializerCache.entrySet()) {_			nonRegisteredSubclassesToSerializerConfigSnapshots.put(_				entry.getKey(),_				new Tuple2<>(entry.getValue(), entry.getValue().snapshotConfiguration()))__		}__		return new PojoSerializerConfigSnapshot<>(_				pojoType,_				fieldToSerializerConfigSnapshots,_				registeredSubclassesToSerializerConfigSnapshots,_				nonRegisteredSubclassesToSerializerConfigSnapshots)__	};build,and,return,a,snapshot,of,the,serializer,s,parameters,and,currently,cached,serializers;private,static,t,pojo,serializer,config,snapshot,t,build,config,snapshot,class,t,pojo,type,linked,hash,map,class,integer,registered,subclasses,to,tags,type,serializer,registered,subclass,serializers,field,fields,type,serializer,field,serializers,hash,map,class,type,serializer,non,registered,subclass,serializer,cache,final,linked,hash,map,string,tuple2,type,serializer,type,serializer,snapshot,field,to,serializer,config,snapshots,new,linked,hash,map,fields,length,for,int,i,0,i,fields,length,i,field,to,serializer,config,snapshots,put,fields,i,get,name,new,tuple2,field,serializers,i,field,serializers,i,snapshot,configuration,final,linked,hash,map,class,tuple2,type,serializer,type,serializer,snapshot,registered,subclasses,to,serializer,config,snapshots,new,linked,hash,map,registered,subclasses,to,tags,size,for,map,entry,class,integer,entry,registered,subclasses,to,tags,entry,set,registered,subclasses,to,serializer,config,snapshots,put,entry,get,key,new,tuple2,registered,subclass,serializers,entry,get,value,registered,subclass,serializers,entry,get,value,snapshot,configuration,final,hash,map,class,tuple2,type,serializer,type,serializer,snapshot,non,registered,subclasses,to,serializer,config,snapshots,new,linked,hash,map,non,registered,subclass,serializer,cache,size,for,map,entry,class,type,serializer,entry,non,registered,subclass,serializer,cache,entry,set,non,registered,subclasses,to,serializer,config,snapshots,put,entry,get,key,new,tuple2,entry,get,value,entry,get,value,snapshot,configuration,return,new,pojo,serializer,config,snapshot,pojo,type,field,to,serializer,config,snapshots,registered,subclasses,to,serializer,config,snapshots,non,registered,subclasses,to,serializer,config,snapshots
PojoSerializer -> private static <T> PojoSerializerConfigSnapshot<T> buildConfigSnapshot( 			Class<T> pojoType, 			LinkedHashMap<Class<?>, Integer> registeredSubclassesToTags, 			TypeSerializer<?>[] registeredSubclassSerializers, 			Field[] fields, 			TypeSerializer<?>[] fieldSerializers, 			HashMap<Class<?>, TypeSerializer<?>> nonRegisteredSubclassSerializerCache);1550652777;Build and return a snapshot of the serializer's parameters and currently cached serializers.;private static <T> PojoSerializerConfigSnapshot<T> buildConfigSnapshot(_			Class<T> pojoType,_			LinkedHashMap<Class<?>, Integer> registeredSubclassesToTags,_			TypeSerializer<?>[] registeredSubclassSerializers,_			Field[] fields,_			TypeSerializer<?>[] fieldSerializers,_			HashMap<Class<?>, TypeSerializer<?>> nonRegisteredSubclassSerializerCache) {__		final LinkedHashMap<String, Tuple2<TypeSerializer<?>, TypeSerializerSnapshot<?>>> fieldToSerializerConfigSnapshots =_			new LinkedHashMap<>(fields.length)___		for (int i = 0_ i < fields.length_ i++) {_			fieldToSerializerConfigSnapshots.put(_				fields[i].getName(),_				new Tuple2<>(fieldSerializers[i], fieldSerializers[i].snapshotConfiguration()))__		}__		final LinkedHashMap<Class<?>, Tuple2<TypeSerializer<?>, TypeSerializerSnapshot<?>>> registeredSubclassesToSerializerConfigSnapshots =_				new LinkedHashMap<>(registeredSubclassesToTags.size())___		for (Map.Entry<Class<?>, Integer> entry : registeredSubclassesToTags.entrySet()) {_			registeredSubclassesToSerializerConfigSnapshots.put(_					entry.getKey(),_					new Tuple2<>(_						registeredSubclassSerializers[entry.getValue()],_						registeredSubclassSerializers[entry.getValue()].snapshotConfiguration()))__		}__		final HashMap<Class<?>, Tuple2<TypeSerializer<?>, TypeSerializerSnapshot<?>>> nonRegisteredSubclassesToSerializerConfigSnapshots =_				new LinkedHashMap<>(nonRegisteredSubclassSerializerCache.size())___		for (Map.Entry<Class<?>, TypeSerializer<?>> entry : nonRegisteredSubclassSerializerCache.entrySet()) {_			nonRegisteredSubclassesToSerializerConfigSnapshots.put(_				entry.getKey(),_				new Tuple2<>(entry.getValue(), entry.getValue().snapshotConfiguration()))__		}__		return new PojoSerializerConfigSnapshot<>(_				pojoType,_				fieldToSerializerConfigSnapshots,_				registeredSubclassesToSerializerConfigSnapshots,_				nonRegisteredSubclassesToSerializerConfigSnapshots)__	};build,and,return,a,snapshot,of,the,serializer,s,parameters,and,currently,cached,serializers;private,static,t,pojo,serializer,config,snapshot,t,build,config,snapshot,class,t,pojo,type,linked,hash,map,class,integer,registered,subclasses,to,tags,type,serializer,registered,subclass,serializers,field,fields,type,serializer,field,serializers,hash,map,class,type,serializer,non,registered,subclass,serializer,cache,final,linked,hash,map,string,tuple2,type,serializer,type,serializer,snapshot,field,to,serializer,config,snapshots,new,linked,hash,map,fields,length,for,int,i,0,i,fields,length,i,field,to,serializer,config,snapshots,put,fields,i,get,name,new,tuple2,field,serializers,i,field,serializers,i,snapshot,configuration,final,linked,hash,map,class,tuple2,type,serializer,type,serializer,snapshot,registered,subclasses,to,serializer,config,snapshots,new,linked,hash,map,registered,subclasses,to,tags,size,for,map,entry,class,integer,entry,registered,subclasses,to,tags,entry,set,registered,subclasses,to,serializer,config,snapshots,put,entry,get,key,new,tuple2,registered,subclass,serializers,entry,get,value,registered,subclass,serializers,entry,get,value,snapshot,configuration,final,hash,map,class,tuple2,type,serializer,type,serializer,snapshot,non,registered,subclasses,to,serializer,config,snapshots,new,linked,hash,map,non,registered,subclass,serializer,cache,size,for,map,entry,class,type,serializer,entry,non,registered,subclass,serializer,cache,entry,set,non,registered,subclasses,to,serializer,config,snapshots,put,entry,get,key,new,tuple2,entry,get,value,entry,get,value,snapshot,configuration,return,new,pojo,serializer,config,snapshot,pojo,type,field,to,serializer,config,snapshots,registered,subclasses,to,serializer,config,snapshots,non,registered,subclasses,to,serializer,config,snapshots
PojoSerializer -> private static <T> PojoSerializerConfigSnapshot<T> buildConfigSnapshot( 			Class<T> pojoType, 			LinkedHashMap<Class<?>, Integer> registeredSubclassesToTags, 			TypeSerializer<?>[] registeredSubclassSerializers, 			Field[] fields, 			TypeSerializer<?>[] fieldSerializers, 			HashMap<Class<?>, TypeSerializer<?>> nonRegisteredSubclassSerializerCache);1550821416;Build and return a snapshot of the serializer's parameters and currently cached serializers.;private static <T> PojoSerializerConfigSnapshot<T> buildConfigSnapshot(_			Class<T> pojoType,_			LinkedHashMap<Class<?>, Integer> registeredSubclassesToTags,_			TypeSerializer<?>[] registeredSubclassSerializers,_			Field[] fields,_			TypeSerializer<?>[] fieldSerializers,_			HashMap<Class<?>, TypeSerializer<?>> nonRegisteredSubclassSerializerCache) {__		final LinkedHashMap<String, Tuple2<TypeSerializer<?>, TypeSerializerSnapshot<?>>> fieldToSerializerConfigSnapshots =_			new LinkedHashMap<>(fields.length)___		for (int i = 0_ i < fields.length_ i++) {_			fieldToSerializerConfigSnapshots.put(_				fields[i].getName(),_				new Tuple2<>(fieldSerializers[i], fieldSerializers[i].snapshotConfiguration()))__		}__		final LinkedHashMap<Class<?>, Tuple2<TypeSerializer<?>, TypeSerializerSnapshot<?>>> registeredSubclassesToSerializerConfigSnapshots =_				new LinkedHashMap<>(registeredSubclassesToTags.size())___		for (Map.Entry<Class<?>, Integer> entry : registeredSubclassesToTags.entrySet()) {_			registeredSubclassesToSerializerConfigSnapshots.put(_					entry.getKey(),_					new Tuple2<>(_						registeredSubclassSerializers[entry.getValue()],_						registeredSubclassSerializers[entry.getValue()].snapshotConfiguration()))__		}__		final HashMap<Class<?>, Tuple2<TypeSerializer<?>, TypeSerializerSnapshot<?>>> nonRegisteredSubclassesToSerializerConfigSnapshots =_				new LinkedHashMap<>(nonRegisteredSubclassSerializerCache.size())___		for (Map.Entry<Class<?>, TypeSerializer<?>> entry : nonRegisteredSubclassSerializerCache.entrySet()) {_			nonRegisteredSubclassesToSerializerConfigSnapshots.put(_				entry.getKey(),_				new Tuple2<>(entry.getValue(), entry.getValue().snapshotConfiguration()))__		}__		return new PojoSerializerConfigSnapshot<>(_				pojoType,_				fieldToSerializerConfigSnapshots,_				registeredSubclassesToSerializerConfigSnapshots,_				nonRegisteredSubclassesToSerializerConfigSnapshots)__	};build,and,return,a,snapshot,of,the,serializer,s,parameters,and,currently,cached,serializers;private,static,t,pojo,serializer,config,snapshot,t,build,config,snapshot,class,t,pojo,type,linked,hash,map,class,integer,registered,subclasses,to,tags,type,serializer,registered,subclass,serializers,field,fields,type,serializer,field,serializers,hash,map,class,type,serializer,non,registered,subclass,serializer,cache,final,linked,hash,map,string,tuple2,type,serializer,type,serializer,snapshot,field,to,serializer,config,snapshots,new,linked,hash,map,fields,length,for,int,i,0,i,fields,length,i,field,to,serializer,config,snapshots,put,fields,i,get,name,new,tuple2,field,serializers,i,field,serializers,i,snapshot,configuration,final,linked,hash,map,class,tuple2,type,serializer,type,serializer,snapshot,registered,subclasses,to,serializer,config,snapshots,new,linked,hash,map,registered,subclasses,to,tags,size,for,map,entry,class,integer,entry,registered,subclasses,to,tags,entry,set,registered,subclasses,to,serializer,config,snapshots,put,entry,get,key,new,tuple2,registered,subclass,serializers,entry,get,value,registered,subclass,serializers,entry,get,value,snapshot,configuration,final,hash,map,class,tuple2,type,serializer,type,serializer,snapshot,non,registered,subclasses,to,serializer,config,snapshots,new,linked,hash,map,non,registered,subclass,serializer,cache,size,for,map,entry,class,type,serializer,entry,non,registered,subclass,serializer,cache,entry,set,non,registered,subclasses,to,serializer,config,snapshots,put,entry,get,key,new,tuple2,entry,get,value,entry,get,value,snapshot,configuration,return,new,pojo,serializer,config,snapshot,pojo,type,field,to,serializer,config,snapshots,registered,subclasses,to,serializer,config,snapshots,non,registered,subclasses,to,serializer,config,snapshots
PojoSerializer -> private static TypeSerializer<?>[] createRegisteredSubclassSerializers( 			LinkedHashSet<Class<?>> registeredSubclasses, 			ExecutionConfig executionConfig);1494180263;Creates an array of serializers for provided list of registered subclasses._Order of returned serializers will correspond to order of provided subclasses.;private static TypeSerializer<?>[] createRegisteredSubclassSerializers(_			LinkedHashSet<Class<?>> registeredSubclasses,_			ExecutionConfig executionConfig) {__		final TypeSerializer<?>[] subclassSerializers = new TypeSerializer[registeredSubclasses.size()]___		int i = 0__		for (Class<?> registeredClass : registeredSubclasses) {_			subclassSerializers[i] = TypeExtractor.createTypeInfo(registeredClass).createSerializer(executionConfig)__			i++__		}__		return subclassSerializers__	};creates,an,array,of,serializers,for,provided,list,of,registered,subclasses,order,of,returned,serializers,will,correspond,to,order,of,provided,subclasses;private,static,type,serializer,create,registered,subclass,serializers,linked,hash,set,class,registered,subclasses,execution,config,execution,config,final,type,serializer,subclass,serializers,new,type,serializer,registered,subclasses,size,int,i,0,for,class,registered,class,registered,subclasses,subclass,serializers,i,type,extractor,create,type,info,registered,class,create,serializer,execution,config,i,return,subclass,serializers
PojoSerializer -> private static TypeSerializer<?>[] createRegisteredSubclassSerializers( 			LinkedHashSet<Class<?>> registeredSubclasses, 			ExecutionConfig executionConfig);1494658833;Creates an array of serializers for provided list of registered subclasses._Order of returned serializers will correspond to order of provided subclasses.;private static TypeSerializer<?>[] createRegisteredSubclassSerializers(_			LinkedHashSet<Class<?>> registeredSubclasses,_			ExecutionConfig executionConfig) {__		final TypeSerializer<?>[] subclassSerializers = new TypeSerializer[registeredSubclasses.size()]___		int i = 0__		for (Class<?> registeredClass : registeredSubclasses) {_			subclassSerializers[i] = TypeExtractor.createTypeInfo(registeredClass).createSerializer(executionConfig)__			i++__		}__		return subclassSerializers__	};creates,an,array,of,serializers,for,provided,list,of,registered,subclasses,order,of,returned,serializers,will,correspond,to,order,of,provided,subclasses;private,static,type,serializer,create,registered,subclass,serializers,linked,hash,set,class,registered,subclasses,execution,config,execution,config,final,type,serializer,subclass,serializers,new,type,serializer,registered,subclasses,size,int,i,0,for,class,registered,class,registered,subclasses,subclass,serializers,i,type,extractor,create,type,info,registered,class,create,serializer,execution,config,i,return,subclass,serializers
PojoSerializer -> private static TypeSerializer<?>[] createRegisteredSubclassSerializers( 			LinkedHashSet<Class<?>> registeredSubclasses, 			ExecutionConfig executionConfig);1495466666;Creates an array of serializers for provided list of registered subclasses._Order of returned serializers will correspond to order of provided subclasses.;private static TypeSerializer<?>[] createRegisteredSubclassSerializers(_			LinkedHashSet<Class<?>> registeredSubclasses,_			ExecutionConfig executionConfig) {__		final TypeSerializer<?>[] subclassSerializers = new TypeSerializer[registeredSubclasses.size()]___		int i = 0__		for (Class<?> registeredClass : registeredSubclasses) {_			subclassSerializers[i] = TypeExtractor.createTypeInfo(registeredClass).createSerializer(executionConfig)__			i++__		}__		return subclassSerializers__	};creates,an,array,of,serializers,for,provided,list,of,registered,subclasses,order,of,returned,serializers,will,correspond,to,order,of,provided,subclasses;private,static,type,serializer,create,registered,subclass,serializers,linked,hash,set,class,registered,subclasses,execution,config,execution,config,final,type,serializer,subclass,serializers,new,type,serializer,registered,subclasses,size,int,i,0,for,class,registered,class,registered,subclasses,subclass,serializers,i,type,extractor,create,type,info,registered,class,create,serializer,execution,config,i,return,subclass,serializers
PojoSerializer -> private static TypeSerializer<?>[] createRegisteredSubclassSerializers( 			LinkedHashSet<Class<?>> registeredSubclasses, 			ExecutionConfig executionConfig);1497328697;Creates an array of serializers for provided list of registered subclasses._Order of returned serializers will correspond to order of provided subclasses.;private static TypeSerializer<?>[] createRegisteredSubclassSerializers(_			LinkedHashSet<Class<?>> registeredSubclasses,_			ExecutionConfig executionConfig) {__		final TypeSerializer<?>[] subclassSerializers = new TypeSerializer[registeredSubclasses.size()]___		int i = 0__		for (Class<?> registeredClass : registeredSubclasses) {_			subclassSerializers[i] = TypeExtractor.createTypeInfo(registeredClass).createSerializer(executionConfig)__			i++__		}__		return subclassSerializers__	};creates,an,array,of,serializers,for,provided,list,of,registered,subclasses,order,of,returned,serializers,will,correspond,to,order,of,provided,subclasses;private,static,type,serializer,create,registered,subclass,serializers,linked,hash,set,class,registered,subclasses,execution,config,execution,config,final,type,serializer,subclass,serializers,new,type,serializer,registered,subclasses,size,int,i,0,for,class,registered,class,registered,subclasses,subclass,serializers,i,type,extractor,create,type,info,registered,class,create,serializer,execution,config,i,return,subclass,serializers
PojoSerializer -> private static TypeSerializer<?>[] createRegisteredSubclassSerializers( 			LinkedHashSet<Class<?>> registeredSubclasses, 			ExecutionConfig executionConfig);1497328697;Creates an array of serializers for provided list of registered subclasses._Order of returned serializers will correspond to order of provided subclasses.;private static TypeSerializer<?>[] createRegisteredSubclassSerializers(_			LinkedHashSet<Class<?>> registeredSubclasses,_			ExecutionConfig executionConfig) {__		final TypeSerializer<?>[] subclassSerializers = new TypeSerializer[registeredSubclasses.size()]___		int i = 0__		for (Class<?> registeredClass : registeredSubclasses) {_			subclassSerializers[i] = TypeExtractor.createTypeInfo(registeredClass).createSerializer(executionConfig)__			i++__		}__		return subclassSerializers__	};creates,an,array,of,serializers,for,provided,list,of,registered,subclasses,order,of,returned,serializers,will,correspond,to,order,of,provided,subclasses;private,static,type,serializer,create,registered,subclass,serializers,linked,hash,set,class,registered,subclasses,execution,config,execution,config,final,type,serializer,subclass,serializers,new,type,serializer,registered,subclasses,size,int,i,0,for,class,registered,class,registered,subclasses,subclass,serializers,i,type,extractor,create,type,info,registered,class,create,serializer,execution,config,i,return,subclass,serializers
PojoSerializer -> private static TypeSerializer<?>[] createRegisteredSubclassSerializers( 			LinkedHashSet<Class<?>> registeredSubclasses, 			ExecutionConfig executionConfig);1525657109;Creates an array of serializers for provided list of registered subclasses._Order of returned serializers will correspond to order of provided subclasses.;private static TypeSerializer<?>[] createRegisteredSubclassSerializers(_			LinkedHashSet<Class<?>> registeredSubclasses,_			ExecutionConfig executionConfig) {__		final TypeSerializer<?>[] subclassSerializers = new TypeSerializer[registeredSubclasses.size()]___		int i = 0__		for (Class<?> registeredClass : registeredSubclasses) {_			subclassSerializers[i] = TypeExtractor.createTypeInfo(registeredClass).createSerializer(executionConfig)__			i++__		}__		return subclassSerializers__	};creates,an,array,of,serializers,for,provided,list,of,registered,subclasses,order,of,returned,serializers,will,correspond,to,order,of,provided,subclasses;private,static,type,serializer,create,registered,subclass,serializers,linked,hash,set,class,registered,subclasses,execution,config,execution,config,final,type,serializer,subclass,serializers,new,type,serializer,registered,subclasses,size,int,i,0,for,class,registered,class,registered,subclasses,subclass,serializers,i,type,extractor,create,type,info,registered,class,create,serializer,execution,config,i,return,subclass,serializers
PojoSerializer -> private static TypeSerializer<?>[] createRegisteredSubclassSerializers( 			LinkedHashSet<Class<?>> registeredSubclasses, 			ExecutionConfig executionConfig);1539149027;Creates an array of serializers for provided list of registered subclasses._Order of returned serializers will correspond to order of provided subclasses.;private static TypeSerializer<?>[] createRegisteredSubclassSerializers(_			LinkedHashSet<Class<?>> registeredSubclasses,_			ExecutionConfig executionConfig) {__		final TypeSerializer<?>[] subclassSerializers = new TypeSerializer[registeredSubclasses.size()]___		int i = 0__		for (Class<?> registeredClass : registeredSubclasses) {_			subclassSerializers[i] = TypeExtractor.createTypeInfo(registeredClass).createSerializer(executionConfig)__			i++__		}__		return subclassSerializers__	};creates,an,array,of,serializers,for,provided,list,of,registered,subclasses,order,of,returned,serializers,will,correspond,to,order,of,provided,subclasses;private,static,type,serializer,create,registered,subclass,serializers,linked,hash,set,class,registered,subclasses,execution,config,execution,config,final,type,serializer,subclass,serializers,new,type,serializer,registered,subclasses,size,int,i,0,for,class,registered,class,registered,subclasses,subclass,serializers,i,type,extractor,create,type,info,registered,class,create,serializer,execution,config,i,return,subclass,serializers
PojoSerializer -> private static TypeSerializer<?>[] createRegisteredSubclassSerializers( 			LinkedHashSet<Class<?>> registeredSubclasses, 			ExecutionConfig executionConfig);1539149040;Creates an array of serializers for provided list of registered subclasses._Order of returned serializers will correspond to order of provided subclasses.;private static TypeSerializer<?>[] createRegisteredSubclassSerializers(_			LinkedHashSet<Class<?>> registeredSubclasses,_			ExecutionConfig executionConfig) {__		final TypeSerializer<?>[] subclassSerializers = new TypeSerializer[registeredSubclasses.size()]___		int i = 0__		for (Class<?> registeredClass : registeredSubclasses) {_			subclassSerializers[i] = TypeExtractor.createTypeInfo(registeredClass).createSerializer(executionConfig)__			i++__		}__		return subclassSerializers__	};creates,an,array,of,serializers,for,provided,list,of,registered,subclasses,order,of,returned,serializers,will,correspond,to,order,of,provided,subclasses;private,static,type,serializer,create,registered,subclass,serializers,linked,hash,set,class,registered,subclasses,execution,config,execution,config,final,type,serializer,subclass,serializers,new,type,serializer,registered,subclasses,size,int,i,0,for,class,registered,class,registered,subclasses,subclass,serializers,i,type,extractor,create,type,info,registered,class,create,serializer,execution,config,i,return,subclass,serializers
PojoSerializer -> private static TypeSerializer<?>[] createRegisteredSubclassSerializers( 			LinkedHashSet<Class<?>> registeredSubclasses, 			ExecutionConfig executionConfig);1539149114;Creates an array of serializers for provided list of registered subclasses._Order of returned serializers will correspond to order of provided subclasses.;private static TypeSerializer<?>[] createRegisteredSubclassSerializers(_			LinkedHashSet<Class<?>> registeredSubclasses,_			ExecutionConfig executionConfig) {__		final TypeSerializer<?>[] subclassSerializers = new TypeSerializer[registeredSubclasses.size()]___		int i = 0__		for (Class<?> registeredClass : registeredSubclasses) {_			subclassSerializers[i] = TypeExtractor.createTypeInfo(registeredClass).createSerializer(executionConfig)__			i++__		}__		return subclassSerializers__	};creates,an,array,of,serializers,for,provided,list,of,registered,subclasses,order,of,returned,serializers,will,correspond,to,order,of,provided,subclasses;private,static,type,serializer,create,registered,subclass,serializers,linked,hash,set,class,registered,subclasses,execution,config,execution,config,final,type,serializer,subclass,serializers,new,type,serializer,registered,subclasses,size,int,i,0,for,class,registered,class,registered,subclasses,subclass,serializers,i,type,extractor,create,type,info,registered,class,create,serializer,execution,config,i,return,subclass,serializers
PojoSerializer -> private static TypeSerializer<?>[] createRegisteredSubclassSerializers( 			LinkedHashSet<Class<?>> registeredSubclasses, 			ExecutionConfig executionConfig);1542041081;Creates an array of serializers for provided list of registered subclasses._Order of returned serializers will correspond to order of provided subclasses.;private static TypeSerializer<?>[] createRegisteredSubclassSerializers(_			LinkedHashSet<Class<?>> registeredSubclasses,_			ExecutionConfig executionConfig) {__		final TypeSerializer<?>[] subclassSerializers = new TypeSerializer[registeredSubclasses.size()]___		int i = 0__		for (Class<?> registeredClass : registeredSubclasses) {_			subclassSerializers[i] = TypeExtractor.createTypeInfo(registeredClass).createSerializer(executionConfig)__			i++__		}__		return subclassSerializers__	};creates,an,array,of,serializers,for,provided,list,of,registered,subclasses,order,of,returned,serializers,will,correspond,to,order,of,provided,subclasses;private,static,type,serializer,create,registered,subclass,serializers,linked,hash,set,class,registered,subclasses,execution,config,execution,config,final,type,serializer,subclass,serializers,new,type,serializer,registered,subclasses,size,int,i,0,for,class,registered,class,registered,subclasses,subclass,serializers,i,type,extractor,create,type,info,registered,class,create,serializer,execution,config,i,return,subclass,serializers
PojoSerializer -> private static TypeSerializer<?>[] createRegisteredSubclassSerializers( 			LinkedHashSet<Class<?>> registeredSubclasses, 			ExecutionConfig executionConfig);1550652777;Creates an array of serializers for provided list of registered subclasses._Order of returned serializers will correspond to order of provided subclasses.;private static TypeSerializer<?>[] createRegisteredSubclassSerializers(_			LinkedHashSet<Class<?>> registeredSubclasses,_			ExecutionConfig executionConfig) {__		final TypeSerializer<?>[] subclassSerializers = new TypeSerializer[registeredSubclasses.size()]___		int i = 0__		for (Class<?> registeredClass : registeredSubclasses) {_			subclassSerializers[i] = TypeExtractor.createTypeInfo(registeredClass).createSerializer(executionConfig)__			i++__		}__		return subclassSerializers__	};creates,an,array,of,serializers,for,provided,list,of,registered,subclasses,order,of,returned,serializers,will,correspond,to,order,of,provided,subclasses;private,static,type,serializer,create,registered,subclass,serializers,linked,hash,set,class,registered,subclasses,execution,config,execution,config,final,type,serializer,subclass,serializers,new,type,serializer,registered,subclasses,size,int,i,0,for,class,registered,class,registered,subclasses,subclass,serializers,i,type,extractor,create,type,info,registered,class,create,serializer,execution,config,i,return,subclass,serializers
PojoSerializer -> private static TypeSerializer<?>[] createRegisteredSubclassSerializers( 			LinkedHashSet<Class<?>> registeredSubclasses, 			ExecutionConfig executionConfig);1550821416;Creates an array of serializers for provided list of registered subclasses._Order of returned serializers will correspond to order of provided subclasses.;private static TypeSerializer<?>[] createRegisteredSubclassSerializers(_			LinkedHashSet<Class<?>> registeredSubclasses,_			ExecutionConfig executionConfig) {__		final TypeSerializer<?>[] subclassSerializers = new TypeSerializer[registeredSubclasses.size()]___		int i = 0__		for (Class<?> registeredClass : registeredSubclasses) {_			subclassSerializers[i] = TypeExtractor.createTypeInfo(registeredClass).createSerializer(executionConfig)__			i++__		}__		return subclassSerializers__	};creates,an,array,of,serializers,for,provided,list,of,registered,subclasses,order,of,returned,serializers,will,correspond,to,order,of,provided,subclasses;private,static,type,serializer,create,registered,subclass,serializers,linked,hash,set,class,registered,subclasses,execution,config,execution,config,final,type,serializer,subclass,serializers,new,type,serializer,registered,subclasses,size,int,i,0,for,class,registered,class,registered,subclasses,subclass,serializers,i,type,extractor,create,type,info,registered,class,create,serializer,execution,config,i,return,subclass,serializers
PojoSerializer -> private static TypeSerializer<?>[] createRegisteredSubclassSerializers( 			LinkedHashSet<Class<?>> registeredSubclasses, 			ExecutionConfig executionConfig);1550821417;Creates an array of serializers for provided list of registered subclasses._Order of returned serializers will correspond to order of provided subclasses.;private static TypeSerializer<?>[] createRegisteredSubclassSerializers(_			LinkedHashSet<Class<?>> registeredSubclasses,_			ExecutionConfig executionConfig) {__		final TypeSerializer<?>[] subclassSerializers = new TypeSerializer[registeredSubclasses.size()]___		int i = 0__		for (Class<?> registeredClass : registeredSubclasses) {_			subclassSerializers[i] = TypeExtractor.createTypeInfo(registeredClass).createSerializer(executionConfig)__			i++__		}__		return subclassSerializers__	};creates,an,array,of,serializers,for,provided,list,of,registered,subclasses,order,of,returned,serializers,will,correspond,to,order,of,provided,subclasses;private,static,type,serializer,create,registered,subclass,serializers,linked,hash,set,class,registered,subclasses,execution,config,execution,config,final,type,serializer,subclass,serializers,new,type,serializer,registered,subclasses,size,int,i,0,for,class,registered,class,registered,subclasses,subclass,serializers,i,type,extractor,create,type,info,registered,class,create,serializer,execution,config,i,return,subclass,serializers
PojoSerializer -> private static TypeSerializer<?>[] createRegisteredSubclassSerializers( 			LinkedHashSet<Class<?>> registeredSubclasses, 			ExecutionConfig executionConfig);1550821418;Creates an array of serializers for provided list of registered subclasses._Order of returned serializers will correspond to order of provided subclasses.;private static TypeSerializer<?>[] createRegisteredSubclassSerializers(_			LinkedHashSet<Class<?>> registeredSubclasses,_			ExecutionConfig executionConfig) {__		final TypeSerializer<?>[] subclassSerializers = new TypeSerializer[registeredSubclasses.size()]___		int i = 0__		for (Class<?> registeredClass : registeredSubclasses) {_			subclassSerializers[i] = TypeExtractor.createTypeInfo(registeredClass).createSerializer(executionConfig)__			i++__		}__		return subclassSerializers__	};creates,an,array,of,serializers,for,provided,list,of,registered,subclasses,order,of,returned,serializers,will,correspond,to,order,of,provided,subclasses;private,static,type,serializer,create,registered,subclass,serializers,linked,hash,set,class,registered,subclasses,execution,config,execution,config,final,type,serializer,subclass,serializers,new,type,serializer,registered,subclasses,size,int,i,0,for,class,registered,class,registered,subclasses,subclass,serializers,i,type,extractor,create,type,info,registered,class,create,serializer,execution,config,i,return,subclass,serializers
PojoSerializer -> @SuppressWarnings("unchecked") 	public PojoSerializer( 			Class<T> clazz, 			TypeSerializer<?>[] fieldSerializers, 			Field[] fields, 			ExecutionConfig executionConfig);1550821416;Constructor to create a new {@link PojoSerializer}.;@SuppressWarnings("unchecked")_	public PojoSerializer(_			Class<T> clazz,_			TypeSerializer<?>[] fieldSerializers,_			Field[] fields,_			ExecutionConfig executionConfig) {__		this.clazz = checkNotNull(clazz)__		this.fieldSerializers = (TypeSerializer<Object>[]) checkNotNull(fieldSerializers)__		this.fields = checkNotNull(fields)__		this.numFields = fieldSerializers.length__		this.executionConfig = checkNotNull(executionConfig)___		for (int i = 0_ i < numFields_ i++) {_			this.fields[i].setAccessible(true)__		}__		cl = Thread.currentThread().getContextClassLoader()___		_		LinkedHashSet<Class<?>> registeredSubclasses =_				getRegisteredSubclassesFromExecutionConfig(clazz, executionConfig)___		this.registeredClasses = createRegisteredSubclassTags(registeredSubclasses)__		this.registeredSerializers = createRegisteredSubclassSerializers(registeredSubclasses, executionConfig)___		this.subclassSerializerCache = new HashMap<>()__	};constructor,to,create,a,new,link,pojo,serializer;suppress,warnings,unchecked,public,pojo,serializer,class,t,clazz,type,serializer,field,serializers,field,fields,execution,config,execution,config,this,clazz,check,not,null,clazz,this,field,serializers,type,serializer,object,check,not,null,field,serializers,this,fields,check,not,null,fields,this,num,fields,field,serializers,length,this,execution,config,check,not,null,execution,config,for,int,i,0,i,num,fields,i,this,fields,i,set,accessible,true,cl,thread,current,thread,get,context,class,loader,linked,hash,set,class,registered,subclasses,get,registered,subclasses,from,execution,config,clazz,execution,config,this,registered,classes,create,registered,subclass,tags,registered,subclasses,this,registered,serializers,create,registered,subclass,serializers,registered,subclasses,execution,config,this,subclass,serializer,cache,new,hash,map
PojoSerializer -> @SuppressWarnings("unchecked") 	public PojoSerializer( 			Class<T> clazz, 			TypeSerializer<?>[] fieldSerializers, 			Field[] fields, 			ExecutionConfig executionConfig);1550821417;Constructor to create a new {@link PojoSerializer}.;@SuppressWarnings("unchecked")_	public PojoSerializer(_			Class<T> clazz,_			TypeSerializer<?>[] fieldSerializers,_			Field[] fields,_			ExecutionConfig executionConfig) {__		this.clazz = checkNotNull(clazz)__		this.fieldSerializers = (TypeSerializer<Object>[]) checkNotNull(fieldSerializers)__		this.fields = checkNotNull(fields)__		this.numFields = fieldSerializers.length__		this.executionConfig = checkNotNull(executionConfig)___		for (int i = 0_ i < numFields_ i++) {_			this.fields[i].setAccessible(true)__		}__		cl = Thread.currentThread().getContextClassLoader()___		_		LinkedHashSet<Class<?>> registeredSubclasses =_				getRegisteredSubclassesFromExecutionConfig(clazz, executionConfig)___		this.registeredClasses = createRegisteredSubclassTags(registeredSubclasses)__		this.registeredSerializers = createRegisteredSubclassSerializers(registeredSubclasses, executionConfig)___		this.subclassSerializerCache = new HashMap<>()__	};constructor,to,create,a,new,link,pojo,serializer;suppress,warnings,unchecked,public,pojo,serializer,class,t,clazz,type,serializer,field,serializers,field,fields,execution,config,execution,config,this,clazz,check,not,null,clazz,this,field,serializers,type,serializer,object,check,not,null,field,serializers,this,fields,check,not,null,fields,this,num,fields,field,serializers,length,this,execution,config,check,not,null,execution,config,for,int,i,0,i,num,fields,i,this,fields,i,set,accessible,true,cl,thread,current,thread,get,context,class,loader,linked,hash,set,class,registered,subclasses,get,registered,subclasses,from,execution,config,clazz,execution,config,this,registered,classes,create,registered,subclass,tags,registered,subclasses,this,registered,serializers,create,registered,subclass,serializers,registered,subclasses,execution,config,this,subclass,serializer,cache,new,hash,map
PojoSerializer -> @SuppressWarnings("unchecked") 	public PojoSerializer( 			Class<T> clazz, 			TypeSerializer<?>[] fieldSerializers, 			Field[] fields, 			ExecutionConfig executionConfig);1550821418;Constructor to create a new {@link PojoSerializer}.;@SuppressWarnings("unchecked")_	public PojoSerializer(_			Class<T> clazz,_			TypeSerializer<?>[] fieldSerializers,_			Field[] fields,_			ExecutionConfig executionConfig) {__		this.clazz = checkNotNull(clazz)__		this.fieldSerializers = (TypeSerializer<Object>[]) checkNotNull(fieldSerializers)__		this.fields = checkNotNull(fields)__		this.numFields = fieldSerializers.length__		this.executionConfig = checkNotNull(executionConfig)___		for (int i = 0_ i < numFields_ i++) {_			this.fields[i].setAccessible(true)__		}__		cl = Thread.currentThread().getContextClassLoader()___		_		LinkedHashSet<Class<?>> registeredSubclasses =_				getRegisteredSubclassesFromExecutionConfig(clazz, executionConfig)___		this.registeredClasses = createRegisteredSubclassTags(registeredSubclasses)__		this.registeredSerializers = createRegisteredSubclassSerializers(registeredSubclasses, executionConfig)___		this.subclassSerializerCache = new HashMap<>()__	};constructor,to,create,a,new,link,pojo,serializer;suppress,warnings,unchecked,public,pojo,serializer,class,t,clazz,type,serializer,field,serializers,field,fields,execution,config,execution,config,this,clazz,check,not,null,clazz,this,field,serializers,type,serializer,object,check,not,null,field,serializers,this,fields,check,not,null,fields,this,num,fields,field,serializers,length,this,execution,config,check,not,null,execution,config,for,int,i,0,i,num,fields,i,this,fields,i,set,accessible,true,cl,thread,current,thread,get,context,class,loader,linked,hash,set,class,registered,subclasses,get,registered,subclasses,from,execution,config,clazz,execution,config,this,registered,classes,create,registered,subclass,tags,registered,subclasses,this,registered,serializers,create,registered,subclass,serializers,registered,subclasses,execution,config,this,subclass,serializer,cache,new,hash,map
PojoSerializer -> PojoSerializer( 			Class<T> clazz, 			Field[] fields, 			TypeSerializer<Object>[] fieldSerializers, 			LinkedHashMap<Class<?>, Integer> registeredClasses, 			TypeSerializer<?>[] registeredSerializers, 			HashMap<Class<?>, TypeSerializer<?>> subclassSerializerCache, 			ExecutionConfig executionConfig);1550821416;Constructor to create a restore serializer or a reconfigured serializer_from a {@link PojoSerializerSnapshot}.;PojoSerializer(_			Class<T> clazz,_			Field[] fields,_			TypeSerializer<Object>[] fieldSerializers,_			LinkedHashMap<Class<?>, Integer> registeredClasses,_			TypeSerializer<?>[] registeredSerializers,_			HashMap<Class<?>, TypeSerializer<?>> subclassSerializerCache,_			ExecutionConfig executionConfig) {__		this.clazz = checkNotNull(clazz)__		this.fields = checkNotNull(fields)__		this.numFields = fields.length__		this.fieldSerializers = checkNotNull(fieldSerializers)__		this.registeredClasses = checkNotNull(registeredClasses)__		this.registeredSerializers = checkNotNull(registeredSerializers)__		this.subclassSerializerCache = checkNotNull(subclassSerializerCache)__		this.executionConfig = checkNotNull(executionConfig)__	};constructor,to,create,a,restore,serializer,or,a,reconfigured,serializer,from,a,link,pojo,serializer,snapshot;pojo,serializer,class,t,clazz,field,fields,type,serializer,object,field,serializers,linked,hash,map,class,integer,registered,classes,type,serializer,registered,serializers,hash,map,class,type,serializer,subclass,serializer,cache,execution,config,execution,config,this,clazz,check,not,null,clazz,this,fields,check,not,null,fields,this,num,fields,fields,length,this,field,serializers,check,not,null,field,serializers,this,registered,classes,check,not,null,registered,classes,this,registered,serializers,check,not,null,registered,serializers,this,subclass,serializer,cache,check,not,null,subclass,serializer,cache,this,execution,config,check,not,null,execution,config
PojoSerializer -> PojoSerializer( 			Class<T> clazz, 			Field[] fields, 			TypeSerializer<Object>[] fieldSerializers, 			LinkedHashMap<Class<?>, Integer> registeredClasses, 			TypeSerializer<?>[] registeredSerializers, 			HashMap<Class<?>, TypeSerializer<?>> subclassSerializerCache, 			ExecutionConfig executionConfig);1550821417;Constructor to create a restore serializer or a reconfigured serializer_from a {@link PojoSerializerSnapshot}.;PojoSerializer(_			Class<T> clazz,_			Field[] fields,_			TypeSerializer<Object>[] fieldSerializers,_			LinkedHashMap<Class<?>, Integer> registeredClasses,_			TypeSerializer<?>[] registeredSerializers,_			HashMap<Class<?>, TypeSerializer<?>> subclassSerializerCache,_			ExecutionConfig executionConfig) {__		this.clazz = checkNotNull(clazz)__		this.fields = checkNotNull(fields)__		this.numFields = fields.length__		this.fieldSerializers = checkNotNull(fieldSerializers)__		this.registeredClasses = checkNotNull(registeredClasses)__		this.registeredSerializers = checkNotNull(registeredSerializers)__		this.subclassSerializerCache = checkNotNull(subclassSerializerCache)__		this.executionConfig = checkNotNull(executionConfig)__	};constructor,to,create,a,restore,serializer,or,a,reconfigured,serializer,from,a,link,pojo,serializer,snapshot;pojo,serializer,class,t,clazz,field,fields,type,serializer,object,field,serializers,linked,hash,map,class,integer,registered,classes,type,serializer,registered,serializers,hash,map,class,type,serializer,subclass,serializer,cache,execution,config,execution,config,this,clazz,check,not,null,clazz,this,fields,check,not,null,fields,this,num,fields,fields,length,this,field,serializers,check,not,null,field,serializers,this,registered,classes,check,not,null,registered,classes,this,registered,serializers,check,not,null,registered,serializers,this,subclass,serializer,cache,check,not,null,subclass,serializer,cache,this,execution,config,check,not,null,execution,config
PojoSerializer -> private int findField(Field f);1494180263;Finds and returns the order (0-based) of a POJO field._Returns -1 if the field does not exist for this POJO.;private int findField(Field f) {_		int foundIndex = 0__		for (Field field : fields) {_			if (f.equals(field)) {_				return foundIndex__			}__			foundIndex++__		}__		return -1__	};finds,and,returns,the,order,0,based,of,a,pojo,field,returns,1,if,the,field,does,not,exist,for,this,pojo;private,int,find,field,field,f,int,found,index,0,for,field,field,fields,if,f,equals,field,return,found,index,found,index,return,1
PojoSerializer -> private int findField(Field f);1494658833;Finds and returns the order (0-based) of a POJO field._Returns -1 if the field does not exist for this POJO.;private int findField(Field f) {_		int foundIndex = 0__		for (Field field : fields) {_			if (f.equals(field)) {_				return foundIndex__			}__			foundIndex++__		}__		return -1__	};finds,and,returns,the,order,0,based,of,a,pojo,field,returns,1,if,the,field,does,not,exist,for,this,pojo;private,int,find,field,field,f,int,found,index,0,for,field,field,fields,if,f,equals,field,return,found,index,found,index,return,1
PojoSerializer -> private int findField(Field f);1495466666;Finds and returns the order (0-based) of a POJO field._Returns -1 if the field does not exist for this POJO.;private int findField(Field f) {_		int foundIndex = 0__		for (Field field : fields) {_			if (f.equals(field)) {_				return foundIndex__			}__			foundIndex++__		}__		return -1__	};finds,and,returns,the,order,0,based,of,a,pojo,field,returns,1,if,the,field,does,not,exist,for,this,pojo;private,int,find,field,field,f,int,found,index,0,for,field,field,fields,if,f,equals,field,return,found,index,found,index,return,1
PojoSerializer -> private static LinkedHashSet<Class<?>> getRegisteredSubclassesFromExecutionConfig( 			Class<?> basePojoClass, 			ExecutionConfig executionConfig);1494180263;Extracts the subclasses of the base POJO class registered in the execution config.;private static LinkedHashSet<Class<?>> getRegisteredSubclassesFromExecutionConfig(_			Class<?> basePojoClass,_			ExecutionConfig executionConfig) {__		LinkedHashSet<Class<?>> subclassesInRegistrationOrder = new LinkedHashSet<>(executionConfig.getRegisteredPojoTypes().size())__		for (Class<?> registeredClass : executionConfig.getRegisteredPojoTypes()) {_			if (registeredClass.equals(basePojoClass)) {_				continue__			}_			if (!basePojoClass.isAssignableFrom(registeredClass)) {_				continue__			}_			subclassesInRegistrationOrder.add(registeredClass)__		}__		return subclassesInRegistrationOrder__	};extracts,the,subclasses,of,the,base,pojo,class,registered,in,the,execution,config;private,static,linked,hash,set,class,get,registered,subclasses,from,execution,config,class,base,pojo,class,execution,config,execution,config,linked,hash,set,class,subclasses,in,registration,order,new,linked,hash,set,execution,config,get,registered,pojo,types,size,for,class,registered,class,execution,config,get,registered,pojo,types,if,registered,class,equals,base,pojo,class,continue,if,base,pojo,class,is,assignable,from,registered,class,continue,subclasses,in,registration,order,add,registered,class,return,subclasses,in,registration,order
PojoSerializer -> private static LinkedHashSet<Class<?>> getRegisteredSubclassesFromExecutionConfig( 			Class<?> basePojoClass, 			ExecutionConfig executionConfig);1494658833;Extracts the subclasses of the base POJO class registered in the execution config.;private static LinkedHashSet<Class<?>> getRegisteredSubclassesFromExecutionConfig(_			Class<?> basePojoClass,_			ExecutionConfig executionConfig) {__		LinkedHashSet<Class<?>> subclassesInRegistrationOrder = new LinkedHashSet<>(executionConfig.getRegisteredPojoTypes().size())__		for (Class<?> registeredClass : executionConfig.getRegisteredPojoTypes()) {_			if (registeredClass.equals(basePojoClass)) {_				continue__			}_			if (!basePojoClass.isAssignableFrom(registeredClass)) {_				continue__			}_			subclassesInRegistrationOrder.add(registeredClass)__		}__		return subclassesInRegistrationOrder__	};extracts,the,subclasses,of,the,base,pojo,class,registered,in,the,execution,config;private,static,linked,hash,set,class,get,registered,subclasses,from,execution,config,class,base,pojo,class,execution,config,execution,config,linked,hash,set,class,subclasses,in,registration,order,new,linked,hash,set,execution,config,get,registered,pojo,types,size,for,class,registered,class,execution,config,get,registered,pojo,types,if,registered,class,equals,base,pojo,class,continue,if,base,pojo,class,is,assignable,from,registered,class,continue,subclasses,in,registration,order,add,registered,class,return,subclasses,in,registration,order
PojoSerializer -> private static LinkedHashSet<Class<?>> getRegisteredSubclassesFromExecutionConfig( 			Class<?> basePojoClass, 			ExecutionConfig executionConfig);1495466666;Extracts the subclasses of the base POJO class registered in the execution config.;private static LinkedHashSet<Class<?>> getRegisteredSubclassesFromExecutionConfig(_			Class<?> basePojoClass,_			ExecutionConfig executionConfig) {__		LinkedHashSet<Class<?>> subclassesInRegistrationOrder = new LinkedHashSet<>(executionConfig.getRegisteredPojoTypes().size())__		for (Class<?> registeredClass : executionConfig.getRegisteredPojoTypes()) {_			if (registeredClass.equals(basePojoClass)) {_				continue__			}_			if (!basePojoClass.isAssignableFrom(registeredClass)) {_				continue__			}_			subclassesInRegistrationOrder.add(registeredClass)__		}__		return subclassesInRegistrationOrder__	};extracts,the,subclasses,of,the,base,pojo,class,registered,in,the,execution,config;private,static,linked,hash,set,class,get,registered,subclasses,from,execution,config,class,base,pojo,class,execution,config,execution,config,linked,hash,set,class,subclasses,in,registration,order,new,linked,hash,set,execution,config,get,registered,pojo,types,size,for,class,registered,class,execution,config,get,registered,pojo,types,if,registered,class,equals,base,pojo,class,continue,if,base,pojo,class,is,assignable,from,registered,class,continue,subclasses,in,registration,order,add,registered,class,return,subclasses,in,registration,order
PojoSerializer -> private static LinkedHashSet<Class<?>> getRegisteredSubclassesFromExecutionConfig( 			Class<?> basePojoClass, 			ExecutionConfig executionConfig);1497328697;Extracts the subclasses of the base POJO class registered in the execution config.;private static LinkedHashSet<Class<?>> getRegisteredSubclassesFromExecutionConfig(_			Class<?> basePojoClass,_			ExecutionConfig executionConfig) {__		LinkedHashSet<Class<?>> subclassesInRegistrationOrder = new LinkedHashSet<>(executionConfig.getRegisteredPojoTypes().size())__		for (Class<?> registeredClass : executionConfig.getRegisteredPojoTypes()) {_			if (registeredClass.equals(basePojoClass)) {_				continue__			}_			if (!basePojoClass.isAssignableFrom(registeredClass)) {_				continue__			}_			subclassesInRegistrationOrder.add(registeredClass)__		}__		return subclassesInRegistrationOrder__	};extracts,the,subclasses,of,the,base,pojo,class,registered,in,the,execution,config;private,static,linked,hash,set,class,get,registered,subclasses,from,execution,config,class,base,pojo,class,execution,config,execution,config,linked,hash,set,class,subclasses,in,registration,order,new,linked,hash,set,execution,config,get,registered,pojo,types,size,for,class,registered,class,execution,config,get,registered,pojo,types,if,registered,class,equals,base,pojo,class,continue,if,base,pojo,class,is,assignable,from,registered,class,continue,subclasses,in,registration,order,add,registered,class,return,subclasses,in,registration,order
PojoSerializer -> private static LinkedHashSet<Class<?>> getRegisteredSubclassesFromExecutionConfig( 			Class<?> basePojoClass, 			ExecutionConfig executionConfig);1497328697;Extracts the subclasses of the base POJO class registered in the execution config.;private static LinkedHashSet<Class<?>> getRegisteredSubclassesFromExecutionConfig(_			Class<?> basePojoClass,_			ExecutionConfig executionConfig) {__		LinkedHashSet<Class<?>> subclassesInRegistrationOrder = new LinkedHashSet<>(executionConfig.getRegisteredPojoTypes().size())__		for (Class<?> registeredClass : executionConfig.getRegisteredPojoTypes()) {_			if (registeredClass.equals(basePojoClass)) {_				continue__			}_			if (!basePojoClass.isAssignableFrom(registeredClass)) {_				continue__			}_			subclassesInRegistrationOrder.add(registeredClass)__		}__		return subclassesInRegistrationOrder__	};extracts,the,subclasses,of,the,base,pojo,class,registered,in,the,execution,config;private,static,linked,hash,set,class,get,registered,subclasses,from,execution,config,class,base,pojo,class,execution,config,execution,config,linked,hash,set,class,subclasses,in,registration,order,new,linked,hash,set,execution,config,get,registered,pojo,types,size,for,class,registered,class,execution,config,get,registered,pojo,types,if,registered,class,equals,base,pojo,class,continue,if,base,pojo,class,is,assignable,from,registered,class,continue,subclasses,in,registration,order,add,registered,class,return,subclasses,in,registration,order
PojoSerializer -> private static LinkedHashSet<Class<?>> getRegisteredSubclassesFromExecutionConfig( 			Class<?> basePojoClass, 			ExecutionConfig executionConfig);1525657109;Extracts the subclasses of the base POJO class registered in the execution config.;private static LinkedHashSet<Class<?>> getRegisteredSubclassesFromExecutionConfig(_			Class<?> basePojoClass,_			ExecutionConfig executionConfig) {__		LinkedHashSet<Class<?>> subclassesInRegistrationOrder = new LinkedHashSet<>(executionConfig.getRegisteredPojoTypes().size())__		for (Class<?> registeredClass : executionConfig.getRegisteredPojoTypes()) {_			if (registeredClass.equals(basePojoClass)) {_				continue__			}_			if (!basePojoClass.isAssignableFrom(registeredClass)) {_				continue__			}_			subclassesInRegistrationOrder.add(registeredClass)__		}__		return subclassesInRegistrationOrder__	};extracts,the,subclasses,of,the,base,pojo,class,registered,in,the,execution,config;private,static,linked,hash,set,class,get,registered,subclasses,from,execution,config,class,base,pojo,class,execution,config,execution,config,linked,hash,set,class,subclasses,in,registration,order,new,linked,hash,set,execution,config,get,registered,pojo,types,size,for,class,registered,class,execution,config,get,registered,pojo,types,if,registered,class,equals,base,pojo,class,continue,if,base,pojo,class,is,assignable,from,registered,class,continue,subclasses,in,registration,order,add,registered,class,return,subclasses,in,registration,order
PojoSerializer -> private static LinkedHashSet<Class<?>> getRegisteredSubclassesFromExecutionConfig( 			Class<?> basePojoClass, 			ExecutionConfig executionConfig);1539149027;Extracts the subclasses of the base POJO class registered in the execution config.;private static LinkedHashSet<Class<?>> getRegisteredSubclassesFromExecutionConfig(_			Class<?> basePojoClass,_			ExecutionConfig executionConfig) {__		LinkedHashSet<Class<?>> subclassesInRegistrationOrder = new LinkedHashSet<>(executionConfig.getRegisteredPojoTypes().size())__		for (Class<?> registeredClass : executionConfig.getRegisteredPojoTypes()) {_			if (registeredClass.equals(basePojoClass)) {_				continue__			}_			if (!basePojoClass.isAssignableFrom(registeredClass)) {_				continue__			}_			subclassesInRegistrationOrder.add(registeredClass)__		}__		return subclassesInRegistrationOrder__	};extracts,the,subclasses,of,the,base,pojo,class,registered,in,the,execution,config;private,static,linked,hash,set,class,get,registered,subclasses,from,execution,config,class,base,pojo,class,execution,config,execution,config,linked,hash,set,class,subclasses,in,registration,order,new,linked,hash,set,execution,config,get,registered,pojo,types,size,for,class,registered,class,execution,config,get,registered,pojo,types,if,registered,class,equals,base,pojo,class,continue,if,base,pojo,class,is,assignable,from,registered,class,continue,subclasses,in,registration,order,add,registered,class,return,subclasses,in,registration,order
PojoSerializer -> private static LinkedHashSet<Class<?>> getRegisteredSubclassesFromExecutionConfig( 			Class<?> basePojoClass, 			ExecutionConfig executionConfig);1539149040;Extracts the subclasses of the base POJO class registered in the execution config.;private static LinkedHashSet<Class<?>> getRegisteredSubclassesFromExecutionConfig(_			Class<?> basePojoClass,_			ExecutionConfig executionConfig) {__		LinkedHashSet<Class<?>> subclassesInRegistrationOrder = new LinkedHashSet<>(executionConfig.getRegisteredPojoTypes().size())__		for (Class<?> registeredClass : executionConfig.getRegisteredPojoTypes()) {_			if (registeredClass.equals(basePojoClass)) {_				continue__			}_			if (!basePojoClass.isAssignableFrom(registeredClass)) {_				continue__			}_			subclassesInRegistrationOrder.add(registeredClass)__		}__		return subclassesInRegistrationOrder__	};extracts,the,subclasses,of,the,base,pojo,class,registered,in,the,execution,config;private,static,linked,hash,set,class,get,registered,subclasses,from,execution,config,class,base,pojo,class,execution,config,execution,config,linked,hash,set,class,subclasses,in,registration,order,new,linked,hash,set,execution,config,get,registered,pojo,types,size,for,class,registered,class,execution,config,get,registered,pojo,types,if,registered,class,equals,base,pojo,class,continue,if,base,pojo,class,is,assignable,from,registered,class,continue,subclasses,in,registration,order,add,registered,class,return,subclasses,in,registration,order
PojoSerializer -> private static LinkedHashSet<Class<?>> getRegisteredSubclassesFromExecutionConfig( 			Class<?> basePojoClass, 			ExecutionConfig executionConfig);1539149114;Extracts the subclasses of the base POJO class registered in the execution config.;private static LinkedHashSet<Class<?>> getRegisteredSubclassesFromExecutionConfig(_			Class<?> basePojoClass,_			ExecutionConfig executionConfig) {__		LinkedHashSet<Class<?>> subclassesInRegistrationOrder = new LinkedHashSet<>(executionConfig.getRegisteredPojoTypes().size())__		for (Class<?> registeredClass : executionConfig.getRegisteredPojoTypes()) {_			if (registeredClass.equals(basePojoClass)) {_				continue__			}_			if (!basePojoClass.isAssignableFrom(registeredClass)) {_				continue__			}_			subclassesInRegistrationOrder.add(registeredClass)__		}__		return subclassesInRegistrationOrder__	};extracts,the,subclasses,of,the,base,pojo,class,registered,in,the,execution,config;private,static,linked,hash,set,class,get,registered,subclasses,from,execution,config,class,base,pojo,class,execution,config,execution,config,linked,hash,set,class,subclasses,in,registration,order,new,linked,hash,set,execution,config,get,registered,pojo,types,size,for,class,registered,class,execution,config,get,registered,pojo,types,if,registered,class,equals,base,pojo,class,continue,if,base,pojo,class,is,assignable,from,registered,class,continue,subclasses,in,registration,order,add,registered,class,return,subclasses,in,registration,order
PojoSerializer -> private static LinkedHashSet<Class<?>> getRegisteredSubclassesFromExecutionConfig( 			Class<?> basePojoClass, 			ExecutionConfig executionConfig);1542041081;Extracts the subclasses of the base POJO class registered in the execution config.;private static LinkedHashSet<Class<?>> getRegisteredSubclassesFromExecutionConfig(_			Class<?> basePojoClass,_			ExecutionConfig executionConfig) {__		LinkedHashSet<Class<?>> subclassesInRegistrationOrder = new LinkedHashSet<>(executionConfig.getRegisteredPojoTypes().size())__		for (Class<?> registeredClass : executionConfig.getRegisteredPojoTypes()) {_			if (registeredClass.equals(basePojoClass)) {_				continue__			}_			if (!basePojoClass.isAssignableFrom(registeredClass)) {_				continue__			}_			subclassesInRegistrationOrder.add(registeredClass)__		}__		return subclassesInRegistrationOrder__	};extracts,the,subclasses,of,the,base,pojo,class,registered,in,the,execution,config;private,static,linked,hash,set,class,get,registered,subclasses,from,execution,config,class,base,pojo,class,execution,config,execution,config,linked,hash,set,class,subclasses,in,registration,order,new,linked,hash,set,execution,config,get,registered,pojo,types,size,for,class,registered,class,execution,config,get,registered,pojo,types,if,registered,class,equals,base,pojo,class,continue,if,base,pojo,class,is,assignable,from,registered,class,continue,subclasses,in,registration,order,add,registered,class,return,subclasses,in,registration,order
PojoSerializer -> private static LinkedHashSet<Class<?>> getRegisteredSubclassesFromExecutionConfig( 			Class<?> basePojoClass, 			ExecutionConfig executionConfig);1550652777;Extracts the subclasses of the base POJO class registered in the execution config.;private static LinkedHashSet<Class<?>> getRegisteredSubclassesFromExecutionConfig(_			Class<?> basePojoClass,_			ExecutionConfig executionConfig) {__		LinkedHashSet<Class<?>> subclassesInRegistrationOrder = new LinkedHashSet<>(executionConfig.getRegisteredPojoTypes().size())__		for (Class<?> registeredClass : executionConfig.getRegisteredPojoTypes()) {_			if (registeredClass.equals(basePojoClass)) {_				continue__			}_			if (!basePojoClass.isAssignableFrom(registeredClass)) {_				continue__			}_			subclassesInRegistrationOrder.add(registeredClass)__		}__		return subclassesInRegistrationOrder__	};extracts,the,subclasses,of,the,base,pojo,class,registered,in,the,execution,config;private,static,linked,hash,set,class,get,registered,subclasses,from,execution,config,class,base,pojo,class,execution,config,execution,config,linked,hash,set,class,subclasses,in,registration,order,new,linked,hash,set,execution,config,get,registered,pojo,types,size,for,class,registered,class,execution,config,get,registered,pojo,types,if,registered,class,equals,base,pojo,class,continue,if,base,pojo,class,is,assignable,from,registered,class,continue,subclasses,in,registration,order,add,registered,class,return,subclasses,in,registration,order
PojoSerializer -> private static LinkedHashSet<Class<?>> getRegisteredSubclassesFromExecutionConfig( 			Class<?> basePojoClass, 			ExecutionConfig executionConfig);1550821416;Extracts the subclasses of the base POJO class registered in the execution config.;private static LinkedHashSet<Class<?>> getRegisteredSubclassesFromExecutionConfig(_			Class<?> basePojoClass,_			ExecutionConfig executionConfig) {__		LinkedHashSet<Class<?>> subclassesInRegistrationOrder = new LinkedHashSet<>(executionConfig.getRegisteredPojoTypes().size())__		for (Class<?> registeredClass : executionConfig.getRegisteredPojoTypes()) {_			if (registeredClass.equals(basePojoClass)) {_				continue__			}_			if (!basePojoClass.isAssignableFrom(registeredClass)) {_				continue__			}_			subclassesInRegistrationOrder.add(registeredClass)__		}__		return subclassesInRegistrationOrder__	};extracts,the,subclasses,of,the,base,pojo,class,registered,in,the,execution,config;private,static,linked,hash,set,class,get,registered,subclasses,from,execution,config,class,base,pojo,class,execution,config,execution,config,linked,hash,set,class,subclasses,in,registration,order,new,linked,hash,set,execution,config,get,registered,pojo,types,size,for,class,registered,class,execution,config,get,registered,pojo,types,if,registered,class,equals,base,pojo,class,continue,if,base,pojo,class,is,assignable,from,registered,class,continue,subclasses,in,registration,order,add,registered,class,return,subclasses,in,registration,order
PojoSerializer -> private static LinkedHashSet<Class<?>> getRegisteredSubclassesFromExecutionConfig( 			Class<?> basePojoClass, 			ExecutionConfig executionConfig);1550821417;Extracts the subclasses of the base POJO class registered in the execution config.;private static LinkedHashSet<Class<?>> getRegisteredSubclassesFromExecutionConfig(_			Class<?> basePojoClass,_			ExecutionConfig executionConfig) {__		LinkedHashSet<Class<?>> subclassesInRegistrationOrder = new LinkedHashSet<>(executionConfig.getRegisteredPojoTypes().size())__		for (Class<?> registeredClass : executionConfig.getRegisteredPojoTypes()) {_			if (registeredClass.equals(basePojoClass)) {_				continue__			}_			if (!basePojoClass.isAssignableFrom(registeredClass)) {_				continue__			}_			subclassesInRegistrationOrder.add(registeredClass)__		}__		return subclassesInRegistrationOrder__	};extracts,the,subclasses,of,the,base,pojo,class,registered,in,the,execution,config;private,static,linked,hash,set,class,get,registered,subclasses,from,execution,config,class,base,pojo,class,execution,config,execution,config,linked,hash,set,class,subclasses,in,registration,order,new,linked,hash,set,execution,config,get,registered,pojo,types,size,for,class,registered,class,execution,config,get,registered,pojo,types,if,registered,class,equals,base,pojo,class,continue,if,base,pojo,class,is,assignable,from,registered,class,continue,subclasses,in,registration,order,add,registered,class,return,subclasses,in,registration,order
PojoSerializer -> private static LinkedHashSet<Class<?>> getRegisteredSubclassesFromExecutionConfig( 			Class<?> basePojoClass, 			ExecutionConfig executionConfig);1550821418;Extracts the subclasses of the base POJO class registered in the execution config.;private static LinkedHashSet<Class<?>> getRegisteredSubclassesFromExecutionConfig(_			Class<?> basePojoClass,_			ExecutionConfig executionConfig) {__		LinkedHashSet<Class<?>> subclassesInRegistrationOrder = new LinkedHashSet<>(executionConfig.getRegisteredPojoTypes().size())__		for (Class<?> registeredClass : executionConfig.getRegisteredPojoTypes()) {_			if (registeredClass.equals(basePojoClass)) {_				continue__			}_			if (!basePojoClass.isAssignableFrom(registeredClass)) {_				continue__			}_			subclassesInRegistrationOrder.add(registeredClass)__		}__		return subclassesInRegistrationOrder__	};extracts,the,subclasses,of,the,base,pojo,class,registered,in,the,execution,config;private,static,linked,hash,set,class,get,registered,subclasses,from,execution,config,class,base,pojo,class,execution,config,execution,config,linked,hash,set,class,subclasses,in,registration,order,new,linked,hash,set,execution,config,get,registered,pojo,types,size,for,class,registered,class,execution,config,get,registered,pojo,types,if,registered,class,equals,base,pojo,class,continue,if,base,pojo,class,is,assignable,from,registered,class,continue,subclasses,in,registration,order,add,registered,class,return,subclasses,in,registration,order
PojoSerializer -> private static LinkedHashMap<Class<?>, Integer> createRegisteredSubclassTags(LinkedHashSet<Class<?>> registeredSubclasses);1494180263;Builds map of registered subclasses to their class tags._Class tags will be integers starting from 0, assigned incrementally with the order of provided subclasses.;private static LinkedHashMap<Class<?>, Integer> createRegisteredSubclassTags(LinkedHashSet<Class<?>> registeredSubclasses) {_		final LinkedHashMap<Class<?>, Integer> classToTag = new LinkedHashMap<>()___		int id = 0__		for (Class<?> registeredClass : registeredSubclasses) {_			classToTag.put(registeredClass, id)__			id ++__		}__		return classToTag__	};builds,map,of,registered,subclasses,to,their,class,tags,class,tags,will,be,integers,starting,from,0,assigned,incrementally,with,the,order,of,provided,subclasses;private,static,linked,hash,map,class,integer,create,registered,subclass,tags,linked,hash,set,class,registered,subclasses,final,linked,hash,map,class,integer,class,to,tag,new,linked,hash,map,int,id,0,for,class,registered,class,registered,subclasses,class,to,tag,put,registered,class,id,id,return,class,to,tag
PojoSerializer -> private static LinkedHashMap<Class<?>, Integer> createRegisteredSubclassTags(LinkedHashSet<Class<?>> registeredSubclasses);1494658833;Builds map of registered subclasses to their class tags._Class tags will be integers starting from 0, assigned incrementally with the order of provided subclasses.;private static LinkedHashMap<Class<?>, Integer> createRegisteredSubclassTags(LinkedHashSet<Class<?>> registeredSubclasses) {_		final LinkedHashMap<Class<?>, Integer> classToTag = new LinkedHashMap<>()___		int id = 0__		for (Class<?> registeredClass : registeredSubclasses) {_			classToTag.put(registeredClass, id)__			id ++__		}__		return classToTag__	};builds,map,of,registered,subclasses,to,their,class,tags,class,tags,will,be,integers,starting,from,0,assigned,incrementally,with,the,order,of,provided,subclasses;private,static,linked,hash,map,class,integer,create,registered,subclass,tags,linked,hash,set,class,registered,subclasses,final,linked,hash,map,class,integer,class,to,tag,new,linked,hash,map,int,id,0,for,class,registered,class,registered,subclasses,class,to,tag,put,registered,class,id,id,return,class,to,tag
PojoSerializer -> private static LinkedHashMap<Class<?>, Integer> createRegisteredSubclassTags(LinkedHashSet<Class<?>> registeredSubclasses);1495466666;Builds map of registered subclasses to their class tags._Class tags will be integers starting from 0, assigned incrementally with the order of provided subclasses.;private static LinkedHashMap<Class<?>, Integer> createRegisteredSubclassTags(LinkedHashSet<Class<?>> registeredSubclasses) {_		final LinkedHashMap<Class<?>, Integer> classToTag = new LinkedHashMap<>()___		int id = 0__		for (Class<?> registeredClass : registeredSubclasses) {_			classToTag.put(registeredClass, id)__			id ++__		}__		return classToTag__	};builds,map,of,registered,subclasses,to,their,class,tags,class,tags,will,be,integers,starting,from,0,assigned,incrementally,with,the,order,of,provided,subclasses;private,static,linked,hash,map,class,integer,create,registered,subclass,tags,linked,hash,set,class,registered,subclasses,final,linked,hash,map,class,integer,class,to,tag,new,linked,hash,map,int,id,0,for,class,registered,class,registered,subclasses,class,to,tag,put,registered,class,id,id,return,class,to,tag
PojoSerializer -> private static LinkedHashMap<Class<?>, Integer> createRegisteredSubclassTags(LinkedHashSet<Class<?>> registeredSubclasses);1497328697;Builds map of registered subclasses to their class tags._Class tags will be integers starting from 0, assigned incrementally with the order of provided subclasses.;private static LinkedHashMap<Class<?>, Integer> createRegisteredSubclassTags(LinkedHashSet<Class<?>> registeredSubclasses) {_		final LinkedHashMap<Class<?>, Integer> classToTag = new LinkedHashMap<>()___		int id = 0__		for (Class<?> registeredClass : registeredSubclasses) {_			classToTag.put(registeredClass, id)__			id ++__		}__		return classToTag__	};builds,map,of,registered,subclasses,to,their,class,tags,class,tags,will,be,integers,starting,from,0,assigned,incrementally,with,the,order,of,provided,subclasses;private,static,linked,hash,map,class,integer,create,registered,subclass,tags,linked,hash,set,class,registered,subclasses,final,linked,hash,map,class,integer,class,to,tag,new,linked,hash,map,int,id,0,for,class,registered,class,registered,subclasses,class,to,tag,put,registered,class,id,id,return,class,to,tag
PojoSerializer -> private static LinkedHashMap<Class<?>, Integer> createRegisteredSubclassTags(LinkedHashSet<Class<?>> registeredSubclasses);1497328697;Builds map of registered subclasses to their class tags._Class tags will be integers starting from 0, assigned incrementally with the order of provided subclasses.;private static LinkedHashMap<Class<?>, Integer> createRegisteredSubclassTags(LinkedHashSet<Class<?>> registeredSubclasses) {_		final LinkedHashMap<Class<?>, Integer> classToTag = new LinkedHashMap<>()___		int id = 0__		for (Class<?> registeredClass : registeredSubclasses) {_			classToTag.put(registeredClass, id)__			id ++__		}__		return classToTag__	};builds,map,of,registered,subclasses,to,their,class,tags,class,tags,will,be,integers,starting,from,0,assigned,incrementally,with,the,order,of,provided,subclasses;private,static,linked,hash,map,class,integer,create,registered,subclass,tags,linked,hash,set,class,registered,subclasses,final,linked,hash,map,class,integer,class,to,tag,new,linked,hash,map,int,id,0,for,class,registered,class,registered,subclasses,class,to,tag,put,registered,class,id,id,return,class,to,tag
PojoSerializer -> private static LinkedHashMap<Class<?>, Integer> createRegisteredSubclassTags(LinkedHashSet<Class<?>> registeredSubclasses);1525657109;Builds map of registered subclasses to their class tags._Class tags will be integers starting from 0, assigned incrementally with the order of provided subclasses.;private static LinkedHashMap<Class<?>, Integer> createRegisteredSubclassTags(LinkedHashSet<Class<?>> registeredSubclasses) {_		final LinkedHashMap<Class<?>, Integer> classToTag = new LinkedHashMap<>()___		int id = 0__		for (Class<?> registeredClass : registeredSubclasses) {_			classToTag.put(registeredClass, id)__			id ++__		}__		return classToTag__	};builds,map,of,registered,subclasses,to,their,class,tags,class,tags,will,be,integers,starting,from,0,assigned,incrementally,with,the,order,of,provided,subclasses;private,static,linked,hash,map,class,integer,create,registered,subclass,tags,linked,hash,set,class,registered,subclasses,final,linked,hash,map,class,integer,class,to,tag,new,linked,hash,map,int,id,0,for,class,registered,class,registered,subclasses,class,to,tag,put,registered,class,id,id,return,class,to,tag
PojoSerializer -> private static LinkedHashMap<Class<?>, Integer> createRegisteredSubclassTags(LinkedHashSet<Class<?>> registeredSubclasses);1539149027;Builds map of registered subclasses to their class tags._Class tags will be integers starting from 0, assigned incrementally with the order of provided subclasses.;private static LinkedHashMap<Class<?>, Integer> createRegisteredSubclassTags(LinkedHashSet<Class<?>> registeredSubclasses) {_		final LinkedHashMap<Class<?>, Integer> classToTag = new LinkedHashMap<>()___		int id = 0__		for (Class<?> registeredClass : registeredSubclasses) {_			classToTag.put(registeredClass, id)__			id ++__		}__		return classToTag__	};builds,map,of,registered,subclasses,to,their,class,tags,class,tags,will,be,integers,starting,from,0,assigned,incrementally,with,the,order,of,provided,subclasses;private,static,linked,hash,map,class,integer,create,registered,subclass,tags,linked,hash,set,class,registered,subclasses,final,linked,hash,map,class,integer,class,to,tag,new,linked,hash,map,int,id,0,for,class,registered,class,registered,subclasses,class,to,tag,put,registered,class,id,id,return,class,to,tag
PojoSerializer -> private static LinkedHashMap<Class<?>, Integer> createRegisteredSubclassTags(LinkedHashSet<Class<?>> registeredSubclasses);1539149040;Builds map of registered subclasses to their class tags._Class tags will be integers starting from 0, assigned incrementally with the order of provided subclasses.;private static LinkedHashMap<Class<?>, Integer> createRegisteredSubclassTags(LinkedHashSet<Class<?>> registeredSubclasses) {_		final LinkedHashMap<Class<?>, Integer> classToTag = new LinkedHashMap<>()___		int id = 0__		for (Class<?> registeredClass : registeredSubclasses) {_			classToTag.put(registeredClass, id)__			id ++__		}__		return classToTag__	};builds,map,of,registered,subclasses,to,their,class,tags,class,tags,will,be,integers,starting,from,0,assigned,incrementally,with,the,order,of,provided,subclasses;private,static,linked,hash,map,class,integer,create,registered,subclass,tags,linked,hash,set,class,registered,subclasses,final,linked,hash,map,class,integer,class,to,tag,new,linked,hash,map,int,id,0,for,class,registered,class,registered,subclasses,class,to,tag,put,registered,class,id,id,return,class,to,tag
PojoSerializer -> private static LinkedHashMap<Class<?>, Integer> createRegisteredSubclassTags(LinkedHashSet<Class<?>> registeredSubclasses);1539149114;Builds map of registered subclasses to their class tags._Class tags will be integers starting from 0, assigned incrementally with the order of provided subclasses.;private static LinkedHashMap<Class<?>, Integer> createRegisteredSubclassTags(LinkedHashSet<Class<?>> registeredSubclasses) {_		final LinkedHashMap<Class<?>, Integer> classToTag = new LinkedHashMap<>()___		int id = 0__		for (Class<?> registeredClass : registeredSubclasses) {_			classToTag.put(registeredClass, id)__			id ++__		}__		return classToTag__	};builds,map,of,registered,subclasses,to,their,class,tags,class,tags,will,be,integers,starting,from,0,assigned,incrementally,with,the,order,of,provided,subclasses;private,static,linked,hash,map,class,integer,create,registered,subclass,tags,linked,hash,set,class,registered,subclasses,final,linked,hash,map,class,integer,class,to,tag,new,linked,hash,map,int,id,0,for,class,registered,class,registered,subclasses,class,to,tag,put,registered,class,id,id,return,class,to,tag
PojoSerializer -> private static LinkedHashMap<Class<?>, Integer> createRegisteredSubclassTags(LinkedHashSet<Class<?>> registeredSubclasses);1542041081;Builds map of registered subclasses to their class tags._Class tags will be integers starting from 0, assigned incrementally with the order of provided subclasses.;private static LinkedHashMap<Class<?>, Integer> createRegisteredSubclassTags(LinkedHashSet<Class<?>> registeredSubclasses) {_		final LinkedHashMap<Class<?>, Integer> classToTag = new LinkedHashMap<>()___		int id = 0__		for (Class<?> registeredClass : registeredSubclasses) {_			classToTag.put(registeredClass, id)__			id ++__		}__		return classToTag__	};builds,map,of,registered,subclasses,to,their,class,tags,class,tags,will,be,integers,starting,from,0,assigned,incrementally,with,the,order,of,provided,subclasses;private,static,linked,hash,map,class,integer,create,registered,subclass,tags,linked,hash,set,class,registered,subclasses,final,linked,hash,map,class,integer,class,to,tag,new,linked,hash,map,int,id,0,for,class,registered,class,registered,subclasses,class,to,tag,put,registered,class,id,id,return,class,to,tag
PojoSerializer -> private static LinkedHashMap<Class<?>, Integer> createRegisteredSubclassTags(LinkedHashSet<Class<?>> registeredSubclasses);1550652777;Builds map of registered subclasses to their class tags._Class tags will be integers starting from 0, assigned incrementally with the order of provided subclasses.;private static LinkedHashMap<Class<?>, Integer> createRegisteredSubclassTags(LinkedHashSet<Class<?>> registeredSubclasses) {_		final LinkedHashMap<Class<?>, Integer> classToTag = new LinkedHashMap<>()___		int id = 0__		for (Class<?> registeredClass : registeredSubclasses) {_			classToTag.put(registeredClass, id)__			id ++__		}__		return classToTag__	};builds,map,of,registered,subclasses,to,their,class,tags,class,tags,will,be,integers,starting,from,0,assigned,incrementally,with,the,order,of,provided,subclasses;private,static,linked,hash,map,class,integer,create,registered,subclass,tags,linked,hash,set,class,registered,subclasses,final,linked,hash,map,class,integer,class,to,tag,new,linked,hash,map,int,id,0,for,class,registered,class,registered,subclasses,class,to,tag,put,registered,class,id,id,return,class,to,tag
PojoSerializer -> private static LinkedHashMap<Class<?>, Integer> createRegisteredSubclassTags(LinkedHashSet<Class<?>> registeredSubclasses);1550821416;Builds map of registered subclasses to their class tags._Class tags will be integers starting from 0, assigned incrementally with the order of provided subclasses.;private static LinkedHashMap<Class<?>, Integer> createRegisteredSubclassTags(LinkedHashSet<Class<?>> registeredSubclasses) {_		final LinkedHashMap<Class<?>, Integer> classToTag = new LinkedHashMap<>()___		int id = 0__		for (Class<?> registeredClass : registeredSubclasses) {_			classToTag.put(registeredClass, id)__			id ++__		}__		return classToTag__	};builds,map,of,registered,subclasses,to,their,class,tags,class,tags,will,be,integers,starting,from,0,assigned,incrementally,with,the,order,of,provided,subclasses;private,static,linked,hash,map,class,integer,create,registered,subclass,tags,linked,hash,set,class,registered,subclasses,final,linked,hash,map,class,integer,class,to,tag,new,linked,hash,map,int,id,0,for,class,registered,class,registered,subclasses,class,to,tag,put,registered,class,id,id,return,class,to,tag
PojoSerializer -> private static LinkedHashMap<Class<?>, Integer> createRegisteredSubclassTags(LinkedHashSet<Class<?>> registeredSubclasses);1550821417;Builds map of registered subclasses to their class tags._Class tags will be integers starting from 0, assigned incrementally with the order of provided subclasses.;private static LinkedHashMap<Class<?>, Integer> createRegisteredSubclassTags(LinkedHashSet<Class<?>> registeredSubclasses) {_		final LinkedHashMap<Class<?>, Integer> classToTag = new LinkedHashMap<>()___		int id = 0__		for (Class<?> registeredClass : registeredSubclasses) {_			classToTag.put(registeredClass, id)__			id ++__		}__		return classToTag__	};builds,map,of,registered,subclasses,to,their,class,tags,class,tags,will,be,integers,starting,from,0,assigned,incrementally,with,the,order,of,provided,subclasses;private,static,linked,hash,map,class,integer,create,registered,subclass,tags,linked,hash,set,class,registered,subclasses,final,linked,hash,map,class,integer,class,to,tag,new,linked,hash,map,int,id,0,for,class,registered,class,registered,subclasses,class,to,tag,put,registered,class,id,id,return,class,to,tag
PojoSerializer -> private static LinkedHashMap<Class<?>, Integer> createRegisteredSubclassTags(LinkedHashSet<Class<?>> registeredSubclasses);1550821418;Builds map of registered subclasses to their class tags._Class tags will be integers starting from 0, assigned incrementally with the order of provided subclasses.;private static LinkedHashMap<Class<?>, Integer> createRegisteredSubclassTags(LinkedHashSet<Class<?>> registeredSubclasses) {_		final LinkedHashMap<Class<?>, Integer> classToTag = new LinkedHashMap<>()___		int id = 0__		for (Class<?> registeredClass : registeredSubclasses) {_			classToTag.put(registeredClass, id)__			id ++__		}__		return classToTag__	};builds,map,of,registered,subclasses,to,their,class,tags,class,tags,will,be,integers,starting,from,0,assigned,incrementally,with,the,order,of,provided,subclasses;private,static,linked,hash,map,class,integer,create,registered,subclass,tags,linked,hash,set,class,registered,subclasses,final,linked,hash,map,class,integer,class,to,tag,new,linked,hash,map,int,id,0,for,class,registered,class,registered,subclasses,class,to,tag,put,registered,class,id,id,return,class,to,tag
PojoSerializer -> TypeSerializer<?> getSubclassSerializer(Class<?> subclass);1494180263;Fetches cached serializer for a non-registered subclass__also creates the serializer if it doesn't exist yet.__This method is also exposed to package-private access_for testing purposes.;TypeSerializer<?> getSubclassSerializer(Class<?> subclass) {_		TypeSerializer<?> result = subclassSerializerCache.get(subclass)__		if (result == null) {_			result = createSubclassSerializer(subclass)__			subclassSerializerCache.put(subclass, result)__		}_		return result__	};fetches,cached,serializer,for,a,non,registered,subclass,also,creates,the,serializer,if,it,doesn,t,exist,yet,this,method,is,also,exposed,to,package,private,access,for,testing,purposes;type,serializer,get,subclass,serializer,class,subclass,type,serializer,result,subclass,serializer,cache,get,subclass,if,result,null,result,create,subclass,serializer,subclass,subclass,serializer,cache,put,subclass,result,return,result
PojoSerializer -> TypeSerializer<?> getSubclassSerializer(Class<?> subclass);1494658833;Fetches cached serializer for a non-registered subclass__also creates the serializer if it doesn't exist yet.__This method is also exposed to package-private access_for testing purposes.;TypeSerializer<?> getSubclassSerializer(Class<?> subclass) {_		TypeSerializer<?> result = subclassSerializerCache.get(subclass)__		if (result == null) {_			result = createSubclassSerializer(subclass)__			subclassSerializerCache.put(subclass, result)__		}_		return result__	};fetches,cached,serializer,for,a,non,registered,subclass,also,creates,the,serializer,if,it,doesn,t,exist,yet,this,method,is,also,exposed,to,package,private,access,for,testing,purposes;type,serializer,get,subclass,serializer,class,subclass,type,serializer,result,subclass,serializer,cache,get,subclass,if,result,null,result,create,subclass,serializer,subclass,subclass,serializer,cache,put,subclass,result,return,result
PojoSerializer -> TypeSerializer<?> getSubclassSerializer(Class<?> subclass);1495466666;Fetches cached serializer for a non-registered subclass__also creates the serializer if it doesn't exist yet.__This method is also exposed to package-private access_for testing purposes.;TypeSerializer<?> getSubclassSerializer(Class<?> subclass) {_		TypeSerializer<?> result = subclassSerializerCache.get(subclass)__		if (result == null) {_			result = createSubclassSerializer(subclass)__			subclassSerializerCache.put(subclass, result)__		}_		return result__	};fetches,cached,serializer,for,a,non,registered,subclass,also,creates,the,serializer,if,it,doesn,t,exist,yet,this,method,is,also,exposed,to,package,private,access,for,testing,purposes;type,serializer,get,subclass,serializer,class,subclass,type,serializer,result,subclass,serializer,cache,get,subclass,if,result,null,result,create,subclass,serializer,subclass,subclass,serializer,cache,put,subclass,result,return,result
PojoSerializer -> TypeSerializer<?> getSubclassSerializer(Class<?> subclass);1497328697;Fetches cached serializer for a non-registered subclass__also creates the serializer if it doesn't exist yet.__This method is also exposed to package-private access_for testing purposes.;TypeSerializer<?> getSubclassSerializer(Class<?> subclass) {_		TypeSerializer<?> result = subclassSerializerCache.get(subclass)__		if (result == null) {_			result = createSubclassSerializer(subclass)__			subclassSerializerCache.put(subclass, result)__		}_		return result__	};fetches,cached,serializer,for,a,non,registered,subclass,also,creates,the,serializer,if,it,doesn,t,exist,yet,this,method,is,also,exposed,to,package,private,access,for,testing,purposes;type,serializer,get,subclass,serializer,class,subclass,type,serializer,result,subclass,serializer,cache,get,subclass,if,result,null,result,create,subclass,serializer,subclass,subclass,serializer,cache,put,subclass,result,return,result
PojoSerializer -> TypeSerializer<?> getSubclassSerializer(Class<?> subclass);1497328697;Fetches cached serializer for a non-registered subclass__also creates the serializer if it doesn't exist yet.__This method is also exposed to package-private access_for testing purposes.;TypeSerializer<?> getSubclassSerializer(Class<?> subclass) {_		TypeSerializer<?> result = subclassSerializerCache.get(subclass)__		if (result == null) {_			result = createSubclassSerializer(subclass)__			subclassSerializerCache.put(subclass, result)__		}_		return result__	};fetches,cached,serializer,for,a,non,registered,subclass,also,creates,the,serializer,if,it,doesn,t,exist,yet,this,method,is,also,exposed,to,package,private,access,for,testing,purposes;type,serializer,get,subclass,serializer,class,subclass,type,serializer,result,subclass,serializer,cache,get,subclass,if,result,null,result,create,subclass,serializer,subclass,subclass,serializer,cache,put,subclass,result,return,result
PojoSerializer -> TypeSerializer<?> getSubclassSerializer(Class<?> subclass);1525657109;Fetches cached serializer for a non-registered subclass__also creates the serializer if it doesn't exist yet.__This method is also exposed to package-private access_for testing purposes.;TypeSerializer<?> getSubclassSerializer(Class<?> subclass) {_		TypeSerializer<?> result = subclassSerializerCache.get(subclass)__		if (result == null) {_			result = createSubclassSerializer(subclass)__			subclassSerializerCache.put(subclass, result)__		}_		return result__	};fetches,cached,serializer,for,a,non,registered,subclass,also,creates,the,serializer,if,it,doesn,t,exist,yet,this,method,is,also,exposed,to,package,private,access,for,testing,purposes;type,serializer,get,subclass,serializer,class,subclass,type,serializer,result,subclass,serializer,cache,get,subclass,if,result,null,result,create,subclass,serializer,subclass,subclass,serializer,cache,put,subclass,result,return,result
PojoSerializer -> TypeSerializer<?> getSubclassSerializer(Class<?> subclass);1539149027;Fetches cached serializer for a non-registered subclass__also creates the serializer if it doesn't exist yet.__This method is also exposed to package-private access_for testing purposes.;TypeSerializer<?> getSubclassSerializer(Class<?> subclass) {_		TypeSerializer<?> result = subclassSerializerCache.get(subclass)__		if (result == null) {_			result = createSubclassSerializer(subclass)__			subclassSerializerCache.put(subclass, result)__		}_		return result__	};fetches,cached,serializer,for,a,non,registered,subclass,also,creates,the,serializer,if,it,doesn,t,exist,yet,this,method,is,also,exposed,to,package,private,access,for,testing,purposes;type,serializer,get,subclass,serializer,class,subclass,type,serializer,result,subclass,serializer,cache,get,subclass,if,result,null,result,create,subclass,serializer,subclass,subclass,serializer,cache,put,subclass,result,return,result
PojoSerializer -> TypeSerializer<?> getSubclassSerializer(Class<?> subclass);1539149040;Fetches cached serializer for a non-registered subclass__also creates the serializer if it doesn't exist yet.__This method is also exposed to package-private access_for testing purposes.;TypeSerializer<?> getSubclassSerializer(Class<?> subclass) {_		TypeSerializer<?> result = subclassSerializerCache.get(subclass)__		if (result == null) {_			result = createSubclassSerializer(subclass)__			subclassSerializerCache.put(subclass, result)__		}_		return result__	};fetches,cached,serializer,for,a,non,registered,subclass,also,creates,the,serializer,if,it,doesn,t,exist,yet,this,method,is,also,exposed,to,package,private,access,for,testing,purposes;type,serializer,get,subclass,serializer,class,subclass,type,serializer,result,subclass,serializer,cache,get,subclass,if,result,null,result,create,subclass,serializer,subclass,subclass,serializer,cache,put,subclass,result,return,result
PojoSerializer -> TypeSerializer<?> getSubclassSerializer(Class<?> subclass);1539149114;Fetches cached serializer for a non-registered subclass__also creates the serializer if it doesn't exist yet.__This method is also exposed to package-private access_for testing purposes.;TypeSerializer<?> getSubclassSerializer(Class<?> subclass) {_		TypeSerializer<?> result = subclassSerializerCache.get(subclass)__		if (result == null) {_			result = createSubclassSerializer(subclass)__			subclassSerializerCache.put(subclass, result)__		}_		return result__	};fetches,cached,serializer,for,a,non,registered,subclass,also,creates,the,serializer,if,it,doesn,t,exist,yet,this,method,is,also,exposed,to,package,private,access,for,testing,purposes;type,serializer,get,subclass,serializer,class,subclass,type,serializer,result,subclass,serializer,cache,get,subclass,if,result,null,result,create,subclass,serializer,subclass,subclass,serializer,cache,put,subclass,result,return,result
PojoSerializer -> TypeSerializer<?> getSubclassSerializer(Class<?> subclass);1542041081;Fetches cached serializer for a non-registered subclass__also creates the serializer if it doesn't exist yet.__This method is also exposed to package-private access_for testing purposes.;TypeSerializer<?> getSubclassSerializer(Class<?> subclass) {_		TypeSerializer<?> result = subclassSerializerCache.get(subclass)__		if (result == null) {_			result = createSubclassSerializer(subclass)__			subclassSerializerCache.put(subclass, result)__		}_		return result__	};fetches,cached,serializer,for,a,non,registered,subclass,also,creates,the,serializer,if,it,doesn,t,exist,yet,this,method,is,also,exposed,to,package,private,access,for,testing,purposes;type,serializer,get,subclass,serializer,class,subclass,type,serializer,result,subclass,serializer,cache,get,subclass,if,result,null,result,create,subclass,serializer,subclass,subclass,serializer,cache,put,subclass,result,return,result
PojoSerializer -> TypeSerializer<?> getSubclassSerializer(Class<?> subclass);1550652777;Fetches cached serializer for a non-registered subclass__also creates the serializer if it doesn't exist yet.__This method is also exposed to package-private access_for testing purposes.;TypeSerializer<?> getSubclassSerializer(Class<?> subclass) {_		TypeSerializer<?> result = subclassSerializerCache.get(subclass)__		if (result == null) {_			result = createSubclassSerializer(subclass)__			subclassSerializerCache.put(subclass, result)__		}_		return result__	};fetches,cached,serializer,for,a,non,registered,subclass,also,creates,the,serializer,if,it,doesn,t,exist,yet,this,method,is,also,exposed,to,package,private,access,for,testing,purposes;type,serializer,get,subclass,serializer,class,subclass,type,serializer,result,subclass,serializer,cache,get,subclass,if,result,null,result,create,subclass,serializer,subclass,subclass,serializer,cache,put,subclass,result,return,result
PojoSerializer -> TypeSerializer<?> getSubclassSerializer(Class<?> subclass);1550821416;Fetches cached serializer for a non-registered subclass__also creates the serializer if it doesn't exist yet.__This method is also exposed to package-private access_for testing purposes.;TypeSerializer<?> getSubclassSerializer(Class<?> subclass) {_		TypeSerializer<?> result = subclassSerializerCache.get(subclass)__		if (result == null) {_			result = createSubclassSerializer(subclass)__			subclassSerializerCache.put(subclass, result)__		}_		return result__	};fetches,cached,serializer,for,a,non,registered,subclass,also,creates,the,serializer,if,it,doesn,t,exist,yet,this,method,is,also,exposed,to,package,private,access,for,testing,purposes;type,serializer,get,subclass,serializer,class,subclass,type,serializer,result,subclass,serializer,cache,get,subclass,if,result,null,result,create,subclass,serializer,subclass,subclass,serializer,cache,put,subclass,result,return,result
PojoSerializer -> TypeSerializer<?> getSubclassSerializer(Class<?> subclass);1550821417;Fetches cached serializer for a non-registered subclass__also creates the serializer if it doesn't exist yet.__This method is also exposed to package-private access_for testing purposes.;TypeSerializer<?> getSubclassSerializer(Class<?> subclass) {_		TypeSerializer<?> result = subclassSerializerCache.get(subclass)__		if (result == null) {_			result = createSubclassSerializer(subclass)__			subclassSerializerCache.put(subclass, result)__		}_		return result__	};fetches,cached,serializer,for,a,non,registered,subclass,also,creates,the,serializer,if,it,doesn,t,exist,yet,this,method,is,also,exposed,to,package,private,access,for,testing,purposes;type,serializer,get,subclass,serializer,class,subclass,type,serializer,result,subclass,serializer,cache,get,subclass,if,result,null,result,create,subclass,serializer,subclass,subclass,serializer,cache,put,subclass,result,return,result
PojoSerializer -> TypeSerializer<?> getSubclassSerializer(Class<?> subclass);1550821418;Fetches cached serializer for a non-registered subclass__also creates the serializer if it doesn't exist yet.__This method is also exposed to package-private access_for testing purposes.;TypeSerializer<?> getSubclassSerializer(Class<?> subclass) {_		TypeSerializer<?> result = subclassSerializerCache.get(subclass)__		if (result == null) {_			result = createSubclassSerializer(subclass)__			subclassSerializerCache.put(subclass, result)__		}_		return result__	};fetches,cached,serializer,for,a,non,registered,subclass,also,creates,the,serializer,if,it,doesn,t,exist,yet,this,method,is,also,exposed,to,package,private,access,for,testing,purposes;type,serializer,get,subclass,serializer,class,subclass,type,serializer,result,subclass,serializer,cache,get,subclass,if,result,null,result,create,subclass,serializer,subclass,subclass,serializer,cache,put,subclass,result,return,result
PojoSerializer -> PojoSerializerConfigSnapshot -> public PojoSerializerConfigSnapshot();1494180263;This empty nullary constructor is required for deserializing the configuration.;public PojoSerializerConfigSnapshot() {};this,empty,nullary,constructor,is,required,for,deserializing,the,configuration;public,pojo,serializer,config,snapshot
PojoSerializer -> PojoSerializerConfigSnapshot -> public PojoSerializerConfigSnapshot();1494658833;This empty nullary constructor is required for deserializing the configuration.;public PojoSerializerConfigSnapshot() {};this,empty,nullary,constructor,is,required,for,deserializing,the,configuration;public,pojo,serializer,config,snapshot
PojoSerializer -> PojoSerializerConfigSnapshot -> public PojoSerializerConfigSnapshot();1495466666;This empty nullary constructor is required for deserializing the configuration.;public PojoSerializerConfigSnapshot() {};this,empty,nullary,constructor,is,required,for,deserializing,the,configuration;public,pojo,serializer,config,snapshot
PojoSerializer -> PojoSerializerConfigSnapshot -> public PojoSerializerConfigSnapshot();1497328697;This empty nullary constructor is required for deserializing the configuration.;public PojoSerializerConfigSnapshot() {};this,empty,nullary,constructor,is,required,for,deserializing,the,configuration;public,pojo,serializer,config,snapshot
PojoSerializer -> PojoSerializerConfigSnapshot -> public PojoSerializerConfigSnapshot();1497328697;This empty nullary constructor is required for deserializing the configuration.;public PojoSerializerConfigSnapshot() {};this,empty,nullary,constructor,is,required,for,deserializing,the,configuration;public,pojo,serializer,config,snapshot
PojoSerializer -> PojoSerializerConfigSnapshot -> public PojoSerializerConfigSnapshot();1525657109;This empty nullary constructor is required for deserializing the configuration.;public PojoSerializerConfigSnapshot() {};this,empty,nullary,constructor,is,required,for,deserializing,the,configuration;public,pojo,serializer,config,snapshot
PojoSerializer -> PojoSerializerConfigSnapshot -> public PojoSerializerConfigSnapshot();1539149027;This empty nullary constructor is required for deserializing the configuration.;public PojoSerializerConfigSnapshot() {};this,empty,nullary,constructor,is,required,for,deserializing,the,configuration;public,pojo,serializer,config,snapshot
PojoSerializer -> PojoSerializerConfigSnapshot -> public PojoSerializerConfigSnapshot();1539149040;This empty nullary constructor is required for deserializing the configuration.;public PojoSerializerConfigSnapshot() {};this,empty,nullary,constructor,is,required,for,deserializing,the,configuration;public,pojo,serializer,config,snapshot
PojoSerializer -> PojoSerializerConfigSnapshot -> public PojoSerializerConfigSnapshot();1539149114;This empty nullary constructor is required for deserializing the configuration.;public PojoSerializerConfigSnapshot() {};this,empty,nullary,constructor,is,required,for,deserializing,the,configuration;public,pojo,serializer,config,snapshot
PojoSerializer -> PojoSerializerConfigSnapshot -> public PojoSerializerConfigSnapshot();1542041081;This empty nullary constructor is required for deserializing the configuration.;public PojoSerializerConfigSnapshot() {};this,empty,nullary,constructor,is,required,for,deserializing,the,configuration;public,pojo,serializer,config,snapshot
PojoSerializer -> PojoSerializerConfigSnapshot -> public PojoSerializerConfigSnapshot();1550652777;This empty nullary constructor is required for deserializing the configuration.;public PojoSerializerConfigSnapshot() {};this,empty,nullary,constructor,is,required,for,deserializing,the,configuration;public,pojo,serializer,config,snapshot
PojoSerializer -> PojoSerializerConfigSnapshot -> public PojoSerializerConfigSnapshot();1550821416;This empty nullary constructor is required for deserializing the configuration.;public PojoSerializerConfigSnapshot() {};this,empty,nullary,constructor,is,required,for,deserializing,the,configuration;public,pojo,serializer,config,snapshot
PojoSerializer -> PojoSerializerConfigSnapshot -> public PojoSerializerConfigSnapshot();1550821417;This empty nullary constructor is required for deserializing the configuration.;public PojoSerializerConfigSnapshot() {};this,empty,nullary,constructor,is,required,for,deserializing,the,configuration;public,pojo,serializer,config,snapshot
PojoSerializer -> PojoSerializerConfigSnapshot -> public PojoSerializerConfigSnapshot();1550821418;This empty nullary constructor is required for deserializing the configuration.;public PojoSerializerConfigSnapshot() {};this,empty,nullary,constructor,is,required,for,deserializing,the,configuration;public,pojo,serializer,config,snapshot
PojoSerializer -> PojoSerializerConfigSnapshot -> @Override 		public TypeSerializerSchemaCompatibility<T> resolveSchemaCompatibility(TypeSerializer<T> newSerializer);1550821417;This legacy snapshot delegates compatibility checks to the {@link PojoSerializerSnapshot}.;@Override_		public TypeSerializerSchemaCompatibility<T> resolveSchemaCompatibility(TypeSerializer<T> newSerializer) {_			LinkedHashMap<String, TypeSerializerSnapshot<?>> legacyFieldSerializerSnapshots =_				preprocessLegacySerializerSnapshotTuples(fieldToSerializerConfigSnapshot)___			int numFields = legacyFieldSerializerSnapshots.size()__			ArrayList<Field> fields = new ArrayList<>(numFields)__			ArrayList<TypeSerializerSnapshot<?>> fieldSerializerSnapshots = new ArrayList<>(numFields)__			legacyFieldSerializerSnapshots.forEach((fieldName, fieldSerializerSnapshot) -> {_				fields.add(PojoFieldUtils.getField(fieldName, getTypeClass()))__				fieldSerializerSnapshots.add(fieldSerializerSnapshot)__			})___			PojoSerializerSnapshot<T> newSnapshot = new PojoSerializerSnapshot<>(_				getTypeClass(),_				fields.toArray(new Field[numFields]),_				fieldSerializerSnapshots.toArray(new TypeSerializerSnapshot[numFields]),_				preprocessLegacySerializerSnapshotTuples(registeredSubclassesToSerializerConfigSnapshots),_				preprocessLegacySerializerSnapshotTuples(nonRegisteredSubclassesToSerializerConfigSnapshots))___			return newSnapshot.resolveSchemaCompatibility(newSerializer)__		};this,legacy,snapshot,delegates,compatibility,checks,to,the,link,pojo,serializer,snapshot;override,public,type,serializer,schema,compatibility,t,resolve,schema,compatibility,type,serializer,t,new,serializer,linked,hash,map,string,type,serializer,snapshot,legacy,field,serializer,snapshots,preprocess,legacy,serializer,snapshot,tuples,field,to,serializer,config,snapshot,int,num,fields,legacy,field,serializer,snapshots,size,array,list,field,fields,new,array,list,num,fields,array,list,type,serializer,snapshot,field,serializer,snapshots,new,array,list,num,fields,legacy,field,serializer,snapshots,for,each,field,name,field,serializer,snapshot,fields,add,pojo,field,utils,get,field,field,name,get,type,class,field,serializer,snapshots,add,field,serializer,snapshot,pojo,serializer,snapshot,t,new,snapshot,new,pojo,serializer,snapshot,get,type,class,fields,to,array,new,field,num,fields,field,serializer,snapshots,to,array,new,type,serializer,snapshot,num,fields,preprocess,legacy,serializer,snapshot,tuples,registered,subclasses,to,serializer,config,snapshots,preprocess,legacy,serializer,snapshot,tuples,non,registered,subclasses,to,serializer,config,snapshots,return,new,snapshot,resolve,schema,compatibility,new,serializer
PojoSerializer -> PojoSerializerConfigSnapshot -> @Override 		public TypeSerializerSchemaCompatibility<T> resolveSchemaCompatibility(TypeSerializer<T> newSerializer);1550821418;This legacy snapshot delegates compatibility checks to the {@link PojoSerializerSnapshot}.;@Override_		public TypeSerializerSchemaCompatibility<T> resolveSchemaCompatibility(TypeSerializer<T> newSerializer) {_			LinkedHashMap<String, TypeSerializerSnapshot<?>> legacyFieldSerializerSnapshots =_				preprocessLegacySerializerSnapshotTuples(fieldToSerializerConfigSnapshot)___			int numFields = legacyFieldSerializerSnapshots.size()__			ArrayList<Field> fields = new ArrayList<>(numFields)__			ArrayList<TypeSerializerSnapshot<?>> fieldSerializerSnapshots = new ArrayList<>(numFields)__			legacyFieldSerializerSnapshots.forEach((fieldName, fieldSerializerSnapshot) -> {_				fields.add(PojoFieldUtils.getField(fieldName, getTypeClass()))__				fieldSerializerSnapshots.add(fieldSerializerSnapshot)__			})___			PojoSerializerSnapshot<T> newSnapshot = new PojoSerializerSnapshot<>(_				getTypeClass(),_				fields.toArray(new Field[numFields]),_				fieldSerializerSnapshots.toArray(new TypeSerializerSnapshot[numFields]),_				preprocessLegacySerializerSnapshotTuples(registeredSubclassesToSerializerConfigSnapshots),_				preprocessLegacySerializerSnapshotTuples(nonRegisteredSubclassesToSerializerConfigSnapshots))___			return newSnapshot.resolveSchemaCompatibility(newSerializer)__		};this,legacy,snapshot,delegates,compatibility,checks,to,the,link,pojo,serializer,snapshot;override,public,type,serializer,schema,compatibility,t,resolve,schema,compatibility,type,serializer,t,new,serializer,linked,hash,map,string,type,serializer,snapshot,legacy,field,serializer,snapshots,preprocess,legacy,serializer,snapshot,tuples,field,to,serializer,config,snapshot,int,num,fields,legacy,field,serializer,snapshots,size,array,list,field,fields,new,array,list,num,fields,array,list,type,serializer,snapshot,field,serializer,snapshots,new,array,list,num,fields,legacy,field,serializer,snapshots,for,each,field,name,field,serializer,snapshot,fields,add,pojo,field,utils,get,field,field,name,get,type,class,field,serializer,snapshots,add,field,serializer,snapshot,pojo,serializer,snapshot,t,new,snapshot,new,pojo,serializer,snapshot,get,type,class,fields,to,array,new,field,num,fields,field,serializer,snapshots,to,array,new,type,serializer,snapshot,num,fields,preprocess,legacy,serializer,snapshot,tuples,registered,subclasses,to,serializer,config,snapshots,preprocess,legacy,serializer,snapshot,tuples,non,registered,subclasses,to,serializer,config,snapshots,return,new,snapshot,resolve,schema,compatibility,new,serializer
