# id;timestamp;commentText;codeText;commentWords;codeWords
Deadline -> public boolean isOverdue();1520781440;Determines whether the deadline is in the past, i.e. whether the time left is negative.;public boolean isOverdue() {_		return timeNanos - System.nanoTime() < 0__	};determines,whether,the,deadline,is,in,the,past,i,e,whether,the,time,left,is,negative;public,boolean,is,overdue,return,time,nanos,system,nano,time,0
Deadline -> public boolean isOverdue();1524407314;Determines whether the deadline is in the past, i.e. whether the time left is negative.;public boolean isOverdue() {_		return timeNanos - System.nanoTime() < 0__	};determines,whether,the,deadline,is,in,the,past,i,e,whether,the,time,left,is,negative;public,boolean,is,overdue,return,time,nanos,system,nano,time,0
Deadline -> public boolean isOverdue();1524407314;Determines whether the deadline is in the past, i.e. whether the time left is negative.;public boolean isOverdue() {_		return timeNanos < System.nanoTime()__	};determines,whether,the,deadline,is,in,the,past,i,e,whether,the,time,left,is,negative;public,boolean,is,overdue,return,time,nanos,system,nano,time
Deadline -> public static Deadline now();1520781440;Constructs a {@link Deadline} that has now as the deadline. Use this and then extend via_{@link #plus(Duration)} to specify a deadline in the future.;public static Deadline now() {_		return new Deadline(Duration.ofNanos(System.nanoTime()))__	};constructs,a,link,deadline,that,has,now,as,the,deadline,use,this,and,then,extend,via,link,plus,duration,to,specify,a,deadline,in,the,future;public,static,deadline,now,return,new,deadline,duration,of,nanos,system,nano,time
Deadline -> public static Deadline now();1524407314;Constructs a {@link Deadline} that has now as the deadline. Use this and then extend via_{@link #plus(Duration)} to specify a deadline in the future.;public static Deadline now() {_		return new Deadline(Duration.ofNanos(System.nanoTime()))__	};constructs,a,link,deadline,that,has,now,as,the,deadline,use,this,and,then,extend,via,link,plus,duration,to,specify,a,deadline,in,the,future;public,static,deadline,now,return,new,deadline,duration,of,nanos,system,nano,time
Deadline -> public static Deadline now();1524407314;Constructs a {@link Deadline} that has now as the deadline. Use this and then extend via_{@link #plus(Duration)} to specify a deadline in the future.;public static Deadline now() {_		return new Deadline(System.nanoTime())__	};constructs,a,link,deadline,that,has,now,as,the,deadline,use,this,and,then,extend,via,link,plus,duration,to,specify,a,deadline,in,the,future;public,static,deadline,now,return,new,deadline,system,nano,time
Deadline -> public Duration timeLeft();1520781440;Returns the time left between the deadline and now. The result is negative if the deadline_has passed.;public Duration timeLeft() {_		return Duration.ofNanos(timeNanos).minus(Duration.ofNanos(System.nanoTime()))__	};returns,the,time,left,between,the,deadline,and,now,the,result,is,negative,if,the,deadline,has,passed;public,duration,time,left,return,duration,of,nanos,time,nanos,minus,duration,of,nanos,system,nano,time
Deadline -> public Duration timeLeft();1524407314;Returns the time left between the deadline and now. The result is negative if the deadline_has passed.;public Duration timeLeft() {_		return Duration.ofNanos(timeNanos).minus(Duration.ofNanos(System.nanoTime()))__	};returns,the,time,left,between,the,deadline,and,now,the,result,is,negative,if,the,deadline,has,passed;public,duration,time,left,return,duration,of,nanos,time,nanos,minus,duration,of,nanos,system,nano,time
Deadline -> public Duration timeLeft();1524407314;Returns the time left between the deadline and now. The result is negative if the deadline_has passed.;public Duration timeLeft() {_		return Duration.ofNanos(Math.subtractExact(timeNanos, System.nanoTime()))__	};returns,the,time,left,between,the,deadline,and,now,the,result,is,negative,if,the,deadline,has,passed;public,duration,time,left,return,duration,of,nanos,math,subtract,exact,time,nanos,system,nano,time
Deadline -> public boolean hasTimeLeft();1520781440;Returns whether there is any time left between the deadline and now.;public boolean hasTimeLeft() {_		return !isOverdue()__	};returns,whether,there,is,any,time,left,between,the,deadline,and,now;public,boolean,has,time,left,return,is,overdue
Deadline -> public boolean hasTimeLeft();1524407314;Returns whether there is any time left between the deadline and now.;public boolean hasTimeLeft() {_		return !isOverdue()__	};returns,whether,there,is,any,time,left,between,the,deadline,and,now;public,boolean,has,time,left,return,is,overdue
Deadline -> public boolean hasTimeLeft();1524407314;Returns whether there is any time left between the deadline and now.;public boolean hasTimeLeft() {_		return !isOverdue()__	};returns,whether,there,is,any,time,left,between,the,deadline,and,now;public,boolean,has,time,left,return,is,overdue
