# id;timestamp;commentText;codeText;commentWords;codeWords
TypeSerializerSerializationUtilTest -> @Test 	public void testSerializerSerializationWithInvalidClass() throws Exception;1495466666;Verifies deserialization failure cases when reading a serializer from bytes, in the_case of a {@link InvalidClassException}.;@Test_	public void testSerializerSerializationWithInvalidClass() throws Exception {__		TypeSerializer<?> serializer = IntSerializer.INSTANCE___		byte[] serialized__		try (ByteArrayOutputStreamWithPos out = new ByteArrayOutputStreamWithPos()) {_			TypeSerializerSerializationUtil.writeSerializer(new DataOutputViewStreamWrapper(out), serializer)__			serialized = out.toByteArray()__		}__		TypeSerializer<?> deserializedSerializer___		_		TypeSerializerSerializationUtil.TypeSerializerSerializationProxy<?> mockProxy =_				mock(TypeSerializerSerializationUtil.TypeSerializerSerializationProxy.class)__		doThrow(new IOException()).when(mockProxy).read(any(DataInputViewStreamWrapper.class))__		PowerMockito.whenNew(TypeSerializerSerializationUtil.TypeSerializerSerializationProxy.class).withAnyArguments().thenReturn(mockProxy)___		try (ByteArrayInputStreamWithPos in = new ByteArrayInputStreamWithPos(serialized)) {_			deserializedSerializer = TypeSerializerSerializationUtil.tryReadSerializer(_				new DataInputViewStreamWrapper(in), Thread.currentThread().getContextClassLoader())__		}_		Assert.assertEquals(null, deserializedSerializer)__	};verifies,deserialization,failure,cases,when,reading,a,serializer,from,bytes,in,the,case,of,a,link,invalid,class,exception;test,public,void,test,serializer,serialization,with,invalid,class,throws,exception,type,serializer,serializer,int,serializer,instance,byte,serialized,try,byte,array,output,stream,with,pos,out,new,byte,array,output,stream,with,pos,type,serializer,serialization,util,write,serializer,new,data,output,view,stream,wrapper,out,serializer,serialized,out,to,byte,array,type,serializer,deserialized,serializer,type,serializer,serialization,util,type,serializer,serialization,proxy,mock,proxy,mock,type,serializer,serialization,util,type,serializer,serialization,proxy,class,do,throw,new,ioexception,when,mock,proxy,read,any,data,input,view,stream,wrapper,class,power,mockito,when,new,type,serializer,serialization,util,type,serializer,serialization,proxy,class,with,any,arguments,then,return,mock,proxy,try,byte,array,input,stream,with,pos,in,new,byte,array,input,stream,with,pos,serialized,deserialized,serializer,type,serializer,serialization,util,try,read,serializer,new,data,input,view,stream,wrapper,in,thread,current,thread,get,context,class,loader,assert,assert,equals,null,deserialized,serializer
TypeSerializerSerializationUtilTest -> @Test 	public void testSerializerSerializationWithInvalidClass() throws Exception;1497328621;Verifies deserialization failure cases when reading a serializer from bytes, in the_case of a {@link InvalidClassException}.;@Test_	public void testSerializerSerializationWithInvalidClass() throws Exception {__		TypeSerializer<?> serializer = IntSerializer.INSTANCE___		byte[] serialized__		try (ByteArrayOutputStreamWithPos out = new ByteArrayOutputStreamWithPos()) {_			TypeSerializerSerializationUtil.writeSerializer(new DataOutputViewStreamWrapper(out), serializer)__			serialized = out.toByteArray()__		}__		TypeSerializer<?> deserializedSerializer___		_		TypeSerializerSerializationUtil.TypeSerializerSerializationProxy<?> mockProxy =_				mock(TypeSerializerSerializationUtil.TypeSerializerSerializationProxy.class)__		doThrow(new IOException()).when(mockProxy).read(any(DataInputViewStreamWrapper.class))__		PowerMockito.whenNew(TypeSerializerSerializationUtil.TypeSerializerSerializationProxy.class).withAnyArguments().thenReturn(mockProxy)___		try (ByteArrayInputStreamWithPos in = new ByteArrayInputStreamWithPos(serialized)) {_			deserializedSerializer = TypeSerializerSerializationUtil.tryReadSerializer(_				new DataInputViewStreamWrapper(in), Thread.currentThread().getContextClassLoader())__		}_		Assert.assertEquals(null, deserializedSerializer)__	};verifies,deserialization,failure,cases,when,reading,a,serializer,from,bytes,in,the,case,of,a,link,invalid,class,exception;test,public,void,test,serializer,serialization,with,invalid,class,throws,exception,type,serializer,serializer,int,serializer,instance,byte,serialized,try,byte,array,output,stream,with,pos,out,new,byte,array,output,stream,with,pos,type,serializer,serialization,util,write,serializer,new,data,output,view,stream,wrapper,out,serializer,serialized,out,to,byte,array,type,serializer,deserialized,serializer,type,serializer,serialization,util,type,serializer,serialization,proxy,mock,proxy,mock,type,serializer,serialization,util,type,serializer,serialization,proxy,class,do,throw,new,ioexception,when,mock,proxy,read,any,data,input,view,stream,wrapper,class,power,mockito,when,new,type,serializer,serialization,util,type,serializer,serialization,proxy,class,with,any,arguments,then,return,mock,proxy,try,byte,array,input,stream,with,pos,in,new,byte,array,input,stream,with,pos,serialized,deserialized,serializer,type,serializer,serialization,util,try,read,serializer,new,data,input,view,stream,wrapper,in,thread,current,thread,get,context,class,loader,assert,assert,equals,null,deserialized,serializer
TypeSerializerSerializationUtilTest -> @Test 	public void testSerializerSerializationWithInvalidClass() throws Exception;1525657109;Verifies deserialization failure cases when reading a serializer from bytes, in the_case of a {@link InvalidClassException}.;@Test_	public void testSerializerSerializationWithInvalidClass() throws Exception {__		TypeSerializer<?> serializer = IntSerializer.INSTANCE___		byte[] serialized__		try (ByteArrayOutputStreamWithPos out = new ByteArrayOutputStreamWithPos()) {_			TypeSerializerSerializationUtil.writeSerializer(new DataOutputViewStreamWrapper(out), serializer)__			serialized = out.toByteArray()__		}__		TypeSerializer<?> deserializedSerializer___		try (ByteArrayInputStreamWithPos in = new ByteArrayInputStreamWithPos(serialized)) {_			deserializedSerializer = TypeSerializerSerializationUtil.tryReadSerializer(_				new DataInputViewStreamWrapper(in),_				new ArtificialCNFExceptionThrowingClassLoader(_					Thread.currentThread().getContextClassLoader(),_					Collections.singleton(IntSerializer.class.getName())),_				true)__		}_		Assert.assertTrue(deserializedSerializer instanceof UnloadableDummyTypeSerializer)__	};verifies,deserialization,failure,cases,when,reading,a,serializer,from,bytes,in,the,case,of,a,link,invalid,class,exception;test,public,void,test,serializer,serialization,with,invalid,class,throws,exception,type,serializer,serializer,int,serializer,instance,byte,serialized,try,byte,array,output,stream,with,pos,out,new,byte,array,output,stream,with,pos,type,serializer,serialization,util,write,serializer,new,data,output,view,stream,wrapper,out,serializer,serialized,out,to,byte,array,type,serializer,deserialized,serializer,try,byte,array,input,stream,with,pos,in,new,byte,array,input,stream,with,pos,serialized,deserialized,serializer,type,serializer,serialization,util,try,read,serializer,new,data,input,view,stream,wrapper,in,new,artificial,cnfexception,throwing,class,loader,thread,current,thread,get,context,class,loader,collections,singleton,int,serializer,class,get,name,true,assert,assert,true,deserialized,serializer,instanceof,unloadable,dummy,type,serializer
TypeSerializerSerializationUtilTest -> @Test 	public void testSerializerSerializationWithInvalidClass() throws Exception;1539149027;Verifies deserialization failure cases when reading a serializer from bytes, in the_case of a {@link InvalidClassException}.;@Test_	public void testSerializerSerializationWithInvalidClass() throws Exception {__		TypeSerializer<?> serializer = IntSerializer.INSTANCE___		byte[] serialized__		try (ByteArrayOutputStreamWithPos out = new ByteArrayOutputStreamWithPos()) {_			TypeSerializerSerializationUtil.writeSerializer(new DataOutputViewStreamWrapper(out), serializer)__			serialized = out.toByteArray()__		}__		TypeSerializer<?> deserializedSerializer___		try (ByteArrayInputStreamWithPos in = new ByteArrayInputStreamWithPos(serialized)) {_			deserializedSerializer = TypeSerializerSerializationUtil.tryReadSerializer(_				new DataInputViewStreamWrapper(in),_				new ArtificialCNFExceptionThrowingClassLoader(_					Thread.currentThread().getContextClassLoader(),_					Collections.singleton(IntSerializer.class.getName())),_				true)__		}_		Assert.assertTrue(deserializedSerializer instanceof UnloadableDummyTypeSerializer)__	};verifies,deserialization,failure,cases,when,reading,a,serializer,from,bytes,in,the,case,of,a,link,invalid,class,exception;test,public,void,test,serializer,serialization,with,invalid,class,throws,exception,type,serializer,serializer,int,serializer,instance,byte,serialized,try,byte,array,output,stream,with,pos,out,new,byte,array,output,stream,with,pos,type,serializer,serialization,util,write,serializer,new,data,output,view,stream,wrapper,out,serializer,serialized,out,to,byte,array,type,serializer,deserialized,serializer,try,byte,array,input,stream,with,pos,in,new,byte,array,input,stream,with,pos,serialized,deserialized,serializer,type,serializer,serialization,util,try,read,serializer,new,data,input,view,stream,wrapper,in,new,artificial,cnfexception,throwing,class,loader,thread,current,thread,get,context,class,loader,collections,singleton,int,serializer,class,get,name,true,assert,assert,true,deserialized,serializer,instanceof,unloadable,dummy,type,serializer
TypeSerializerSerializationUtilTest -> @Test 	public void testSerializerSerializationWithInvalidClass() throws Exception;1539149040;Verifies deserialization failure cases when reading a serializer from bytes, in the_case of a {@link InvalidClassException}.;@Test_	public void testSerializerSerializationWithInvalidClass() throws Exception {__		TypeSerializer<?> serializer = IntSerializer.INSTANCE___		byte[] serialized__		try (ByteArrayOutputStreamWithPos out = new ByteArrayOutputStreamWithPos()) {_			TypeSerializerSerializationUtil.writeSerializer(new DataOutputViewStreamWrapper(out), serializer)__			serialized = out.toByteArray()__		}__		TypeSerializer<?> deserializedSerializer___		try (ByteArrayInputStreamWithPos in = new ByteArrayInputStreamWithPos(serialized)) {_			deserializedSerializer = TypeSerializerSerializationUtil.tryReadSerializer(_				new DataInputViewStreamWrapper(in),_				new ArtificialCNFExceptionThrowingClassLoader(_					Thread.currentThread().getContextClassLoader(),_					Collections.singleton(IntSerializer.class.getName())),_				true)__		}_		Assert.assertTrue(deserializedSerializer instanceof UnloadableDummyTypeSerializer)__	};verifies,deserialization,failure,cases,when,reading,a,serializer,from,bytes,in,the,case,of,a,link,invalid,class,exception;test,public,void,test,serializer,serialization,with,invalid,class,throws,exception,type,serializer,serializer,int,serializer,instance,byte,serialized,try,byte,array,output,stream,with,pos,out,new,byte,array,output,stream,with,pos,type,serializer,serialization,util,write,serializer,new,data,output,view,stream,wrapper,out,serializer,serialized,out,to,byte,array,type,serializer,deserialized,serializer,try,byte,array,input,stream,with,pos,in,new,byte,array,input,stream,with,pos,serialized,deserialized,serializer,type,serializer,serialization,util,try,read,serializer,new,data,input,view,stream,wrapper,in,new,artificial,cnfexception,throwing,class,loader,thread,current,thread,get,context,class,loader,collections,singleton,int,serializer,class,get,name,true,assert,assert,true,deserialized,serializer,instanceof,unloadable,dummy,type,serializer
TypeSerializerSerializationUtilTest -> @Test 	public void testSerializerSerializationWithInvalidClass() throws Exception;1539149047;Verifies deserialization failure cases when reading a serializer from bytes, in the_case of a {@link InvalidClassException}.;@Test_	public void testSerializerSerializationWithInvalidClass() throws Exception {__		TypeSerializer<?> serializer = IntSerializer.INSTANCE___		byte[] serialized__		try (ByteArrayOutputStreamWithPos out = new ByteArrayOutputStreamWithPos()) {_			TypeSerializerSerializationUtil.writeSerializer(new DataOutputViewStreamWrapper(out), serializer)__			serialized = out.toByteArray()__		}__		TypeSerializer<?> deserializedSerializer___		try (ByteArrayInputStreamWithPos in = new ByteArrayInputStreamWithPos(serialized)) {_			deserializedSerializer = TypeSerializerSerializationUtil.tryReadSerializer(_				new DataInputViewStreamWrapper(in),_				new ArtificialCNFExceptionThrowingClassLoader(_					Thread.currentThread().getContextClassLoader(),_					Collections.singleton(IntSerializer.class.getName())),_				true)__		}_		Assert.assertTrue(deserializedSerializer instanceof UnloadableDummyTypeSerializer)__	};verifies,deserialization,failure,cases,when,reading,a,serializer,from,bytes,in,the,case,of,a,link,invalid,class,exception;test,public,void,test,serializer,serialization,with,invalid,class,throws,exception,type,serializer,serializer,int,serializer,instance,byte,serialized,try,byte,array,output,stream,with,pos,out,new,byte,array,output,stream,with,pos,type,serializer,serialization,util,write,serializer,new,data,output,view,stream,wrapper,out,serializer,serialized,out,to,byte,array,type,serializer,deserialized,serializer,try,byte,array,input,stream,with,pos,in,new,byte,array,input,stream,with,pos,serialized,deserialized,serializer,type,serializer,serialization,util,try,read,serializer,new,data,input,view,stream,wrapper,in,new,artificial,cnfexception,throwing,class,loader,thread,current,thread,get,context,class,loader,collections,singleton,int,serializer,class,get,name,true,assert,assert,true,deserialized,serializer,instanceof,unloadable,dummy,type,serializer
TypeSerializerSerializationUtilTest -> @Test 	public void testSerializerSerializationWithInvalidClass() throws Exception;1539149114;Verifies deserialization failure cases when reading a serializer from bytes, in the_case of a {@link InvalidClassException}.;@Test_	public void testSerializerSerializationWithInvalidClass() throws Exception {__		TypeSerializer<?> serializer = IntSerializer.INSTANCE___		byte[] serialized__		try (ByteArrayOutputStreamWithPos out = new ByteArrayOutputStreamWithPos()) {_			TypeSerializerSerializationUtil.writeSerializer(new DataOutputViewStreamWrapper(out), serializer)__			serialized = out.toByteArray()__		}__		TypeSerializer<?> deserializedSerializer___		try (ByteArrayInputStreamWithPos in = new ByteArrayInputStreamWithPos(serialized)) {_			deserializedSerializer = TypeSerializerSerializationUtil.tryReadSerializer(_				new DataInputViewStreamWrapper(in),_				new ArtificialCNFExceptionThrowingClassLoader(_					Thread.currentThread().getContextClassLoader(),_					Collections.singleton(IntSerializer.class.getName())),_				true)__		}_		Assert.assertTrue(deserializedSerializer instanceof UnloadableDummyTypeSerializer)__	};verifies,deserialization,failure,cases,when,reading,a,serializer,from,bytes,in,the,case,of,a,link,invalid,class,exception;test,public,void,test,serializer,serialization,with,invalid,class,throws,exception,type,serializer,serializer,int,serializer,instance,byte,serialized,try,byte,array,output,stream,with,pos,out,new,byte,array,output,stream,with,pos,type,serializer,serialization,util,write,serializer,new,data,output,view,stream,wrapper,out,serializer,serialized,out,to,byte,array,type,serializer,deserialized,serializer,try,byte,array,input,stream,with,pos,in,new,byte,array,input,stream,with,pos,serialized,deserialized,serializer,type,serializer,serialization,util,try,read,serializer,new,data,input,view,stream,wrapper,in,new,artificial,cnfexception,throwing,class,loader,thread,current,thread,get,context,class,loader,collections,singleton,int,serializer,class,get,name,true,assert,assert,true,deserialized,serializer,instanceof,unloadable,dummy,type,serializer
TypeSerializerSerializationUtilTest -> @Test 	public void testSerializerSerializationWithInvalidClass() throws Exception;1540907751;Verifies deserialization failure cases when reading a serializer from bytes, in the_case of a {@link InvalidClassException}.;@Test_	public void testSerializerSerializationWithInvalidClass() throws Exception {__		TypeSerializer<?> serializer = IntSerializer.INSTANCE___		byte[] serialized__		try (ByteArrayOutputStreamWithPos out = new ByteArrayOutputStreamWithPos()) {_			TypeSerializerSerializationUtil.writeSerializer(new DataOutputViewStreamWrapper(out), serializer)__			serialized = out.toByteArray()__		}__		TypeSerializer<?> deserializedSerializer___		try (ByteArrayInputStreamWithPos in = new ByteArrayInputStreamWithPos(serialized)) {_			deserializedSerializer = TypeSerializerSerializationUtil.tryReadSerializer(_				new DataInputViewStreamWrapper(in),_				new ArtificialCNFExceptionThrowingClassLoader(_					Thread.currentThread().getContextClassLoader(),_					Collections.singleton(IntSerializer.class.getName())),_				true)__		}_		Assert.assertTrue(deserializedSerializer instanceof UnloadableDummyTypeSerializer)__	};verifies,deserialization,failure,cases,when,reading,a,serializer,from,bytes,in,the,case,of,a,link,invalid,class,exception;test,public,void,test,serializer,serialization,with,invalid,class,throws,exception,type,serializer,serializer,int,serializer,instance,byte,serialized,try,byte,array,output,stream,with,pos,out,new,byte,array,output,stream,with,pos,type,serializer,serialization,util,write,serializer,new,data,output,view,stream,wrapper,out,serializer,serialized,out,to,byte,array,type,serializer,deserialized,serializer,try,byte,array,input,stream,with,pos,in,new,byte,array,input,stream,with,pos,serialized,deserialized,serializer,type,serializer,serialization,util,try,read,serializer,new,data,input,view,stream,wrapper,in,new,artificial,cnfexception,throwing,class,loader,thread,current,thread,get,context,class,loader,collections,singleton,int,serializer,class,get,name,true,assert,assert,true,deserialized,serializer,instanceof,unloadable,dummy,type,serializer
TypeSerializerSerializationUtilTest -> @Test 	public void testSerializerSerializationWithInvalidClass() throws Exception;1550652777;Verifies deserialization failure cases when reading a serializer from bytes, in the_case of a {@link InvalidClassException}.;@Test_	public void testSerializerSerializationWithInvalidClass() throws Exception {__		TypeSerializer<?> serializer = IntSerializer.INSTANCE___		byte[] serialized__		try (ByteArrayOutputStreamWithPos out = new ByteArrayOutputStreamWithPos()) {_			TypeSerializerSerializationUtil.writeSerializer(new DataOutputViewStreamWrapper(out), serializer)__			serialized = out.toByteArray()__		}__		TypeSerializer<?> deserializedSerializer___		try (ByteArrayInputStreamWithPos in = new ByteArrayInputStreamWithPos(serialized)) {_			deserializedSerializer = TypeSerializerSerializationUtil.tryReadSerializer(_				new DataInputViewStreamWrapper(in),_				new ArtificialCNFExceptionThrowingClassLoader(_					Thread.currentThread().getContextClassLoader(),_					Collections.singleton(IntSerializer.class.getName())),_				true)__		}_		Assert.assertTrue(deserializedSerializer instanceof UnloadableDummyTypeSerializer)__	};verifies,deserialization,failure,cases,when,reading,a,serializer,from,bytes,in,the,case,of,a,link,invalid,class,exception;test,public,void,test,serializer,serialization,with,invalid,class,throws,exception,type,serializer,serializer,int,serializer,instance,byte,serialized,try,byte,array,output,stream,with,pos,out,new,byte,array,output,stream,with,pos,type,serializer,serialization,util,write,serializer,new,data,output,view,stream,wrapper,out,serializer,serialized,out,to,byte,array,type,serializer,deserialized,serializer,try,byte,array,input,stream,with,pos,in,new,byte,array,input,stream,with,pos,serialized,deserialized,serializer,type,serializer,serialization,util,try,read,serializer,new,data,input,view,stream,wrapper,in,new,artificial,cnfexception,throwing,class,loader,thread,current,thread,get,context,class,loader,collections,singleton,int,serializer,class,get,name,true,assert,assert,true,deserialized,serializer,instanceof,unloadable,dummy,type,serializer
TypeSerializerSerializationUtilTest -> @Test 	public void testSerializerSerializationWithClassNotFound() throws Exception;1495466666;Verifies deserialization failure cases when reading a serializer from bytes, in the_case of a {@link ClassNotFoundException}.;@Test_	public void testSerializerSerializationWithClassNotFound() throws Exception {__		TypeSerializer<?> serializer = IntSerializer.INSTANCE___		byte[] serialized__		try (ByteArrayOutputStreamWithPos out = new ByteArrayOutputStreamWithPos()) {_			TypeSerializerSerializationUtil.writeSerializer(new DataOutputViewStreamWrapper(out), serializer)__			serialized = out.toByteArray()__		}__		TypeSerializer<?> deserializedSerializer___		try (ByteArrayInputStreamWithPos in = new ByteArrayInputStreamWithPos(serialized)) {_			deserializedSerializer = TypeSerializerSerializationUtil.tryReadSerializer(_				new DataInputViewStreamWrapper(in), new URLClassLoader(new URL[0], null))__		}_		Assert.assertEquals(null, deserializedSerializer)___		try (ByteArrayInputStreamWithPos in = new ByteArrayInputStreamWithPos(serialized)) {_			deserializedSerializer = TypeSerializerSerializationUtil.tryReadSerializer(_				new DataInputViewStreamWrapper(in), new URLClassLoader(new URL[0], null), true)__		}_		Assert.assertTrue(deserializedSerializer instanceof UnloadableDummyTypeSerializer)___		Assert.assertArrayEquals(_				InstantiationUtil.serializeObject(serializer),_				((UnloadableDummyTypeSerializer<?>) deserializedSerializer).getActualBytes())__	};verifies,deserialization,failure,cases,when,reading,a,serializer,from,bytes,in,the,case,of,a,link,class,not,found,exception;test,public,void,test,serializer,serialization,with,class,not,found,throws,exception,type,serializer,serializer,int,serializer,instance,byte,serialized,try,byte,array,output,stream,with,pos,out,new,byte,array,output,stream,with,pos,type,serializer,serialization,util,write,serializer,new,data,output,view,stream,wrapper,out,serializer,serialized,out,to,byte,array,type,serializer,deserialized,serializer,try,byte,array,input,stream,with,pos,in,new,byte,array,input,stream,with,pos,serialized,deserialized,serializer,type,serializer,serialization,util,try,read,serializer,new,data,input,view,stream,wrapper,in,new,urlclass,loader,new,url,0,null,assert,assert,equals,null,deserialized,serializer,try,byte,array,input,stream,with,pos,in,new,byte,array,input,stream,with,pos,serialized,deserialized,serializer,type,serializer,serialization,util,try,read,serializer,new,data,input,view,stream,wrapper,in,new,urlclass,loader,new,url,0,null,true,assert,assert,true,deserialized,serializer,instanceof,unloadable,dummy,type,serializer,assert,assert,array,equals,instantiation,util,serialize,object,serializer,unloadable,dummy,type,serializer,deserialized,serializer,get,actual,bytes
TypeSerializerSerializationUtilTest -> @Test 	public void testSerializerSerializationWithClassNotFound() throws Exception;1497328621;Verifies deserialization failure cases when reading a serializer from bytes, in the_case of a {@link ClassNotFoundException}.;@Test_	public void testSerializerSerializationWithClassNotFound() throws Exception {__		TypeSerializer<?> serializer = IntSerializer.INSTANCE___		byte[] serialized__		try (ByteArrayOutputStreamWithPos out = new ByteArrayOutputStreamWithPos()) {_			TypeSerializerSerializationUtil.writeSerializer(new DataOutputViewStreamWrapper(out), serializer)__			serialized = out.toByteArray()__		}__		TypeSerializer<?> deserializedSerializer___		try (ByteArrayInputStreamWithPos in = new ByteArrayInputStreamWithPos(serialized)) {_			deserializedSerializer = TypeSerializerSerializationUtil.tryReadSerializer(_				new DataInputViewStreamWrapper(in), new URLClassLoader(new URL[0], null))__		}_		Assert.assertEquals(null, deserializedSerializer)___		try (ByteArrayInputStreamWithPos in = new ByteArrayInputStreamWithPos(serialized)) {_			deserializedSerializer = TypeSerializerSerializationUtil.tryReadSerializer(_				new DataInputViewStreamWrapper(in), new URLClassLoader(new URL[0], null), true)__		}_		Assert.assertTrue(deserializedSerializer instanceof UnloadableDummyTypeSerializer)___		Assert.assertArrayEquals(_				InstantiationUtil.serializeObject(serializer),_				((UnloadableDummyTypeSerializer<?>) deserializedSerializer).getActualBytes())__	};verifies,deserialization,failure,cases,when,reading,a,serializer,from,bytes,in,the,case,of,a,link,class,not,found,exception;test,public,void,test,serializer,serialization,with,class,not,found,throws,exception,type,serializer,serializer,int,serializer,instance,byte,serialized,try,byte,array,output,stream,with,pos,out,new,byte,array,output,stream,with,pos,type,serializer,serialization,util,write,serializer,new,data,output,view,stream,wrapper,out,serializer,serialized,out,to,byte,array,type,serializer,deserialized,serializer,try,byte,array,input,stream,with,pos,in,new,byte,array,input,stream,with,pos,serialized,deserialized,serializer,type,serializer,serialization,util,try,read,serializer,new,data,input,view,stream,wrapper,in,new,urlclass,loader,new,url,0,null,assert,assert,equals,null,deserialized,serializer,try,byte,array,input,stream,with,pos,in,new,byte,array,input,stream,with,pos,serialized,deserialized,serializer,type,serializer,serialization,util,try,read,serializer,new,data,input,view,stream,wrapper,in,new,urlclass,loader,new,url,0,null,true,assert,assert,true,deserialized,serializer,instanceof,unloadable,dummy,type,serializer,assert,assert,array,equals,instantiation,util,serialize,object,serializer,unloadable,dummy,type,serializer,deserialized,serializer,get,actual,bytes
TypeSerializerSerializationUtilTest -> @Test 	public void testSerializerSerializationWithClassNotFound() throws Exception;1525657109;Verifies deserialization failure cases when reading a serializer from bytes, in the_case of a {@link ClassNotFoundException}.;@Test_	public void testSerializerSerializationWithClassNotFound() throws Exception {__		TypeSerializer<?> serializer = IntSerializer.INSTANCE___		byte[] serialized__		try (ByteArrayOutputStreamWithPos out = new ByteArrayOutputStreamWithPos()) {_			TypeSerializerSerializationUtil.writeSerializer(new DataOutputViewStreamWrapper(out), serializer)__			serialized = out.toByteArray()__		}__		TypeSerializer<?> deserializedSerializer___		try (ByteArrayInputStreamWithPos in = new ByteArrayInputStreamWithPos(serialized)) {_			deserializedSerializer = TypeSerializerSerializationUtil.tryReadSerializer(_				new DataInputViewStreamWrapper(in),_				new ArtificialCNFExceptionThrowingClassLoader(_					Thread.currentThread().getContextClassLoader(),_					Collections.singleton(IntSerializer.class.getName())),_				true)__		}_		Assert.assertTrue(deserializedSerializer instanceof UnloadableDummyTypeSerializer)___		Assert.assertArrayEquals(_				InstantiationUtil.serializeObject(serializer),_				((UnloadableDummyTypeSerializer<?>) deserializedSerializer).getActualBytes())__	};verifies,deserialization,failure,cases,when,reading,a,serializer,from,bytes,in,the,case,of,a,link,class,not,found,exception;test,public,void,test,serializer,serialization,with,class,not,found,throws,exception,type,serializer,serializer,int,serializer,instance,byte,serialized,try,byte,array,output,stream,with,pos,out,new,byte,array,output,stream,with,pos,type,serializer,serialization,util,write,serializer,new,data,output,view,stream,wrapper,out,serializer,serialized,out,to,byte,array,type,serializer,deserialized,serializer,try,byte,array,input,stream,with,pos,in,new,byte,array,input,stream,with,pos,serialized,deserialized,serializer,type,serializer,serialization,util,try,read,serializer,new,data,input,view,stream,wrapper,in,new,artificial,cnfexception,throwing,class,loader,thread,current,thread,get,context,class,loader,collections,singleton,int,serializer,class,get,name,true,assert,assert,true,deserialized,serializer,instanceof,unloadable,dummy,type,serializer,assert,assert,array,equals,instantiation,util,serialize,object,serializer,unloadable,dummy,type,serializer,deserialized,serializer,get,actual,bytes
TypeSerializerSerializationUtilTest -> @Test 	public void testSerializerSerializationWithClassNotFound() throws Exception;1539149027;Verifies deserialization failure cases when reading a serializer from bytes, in the_case of a {@link ClassNotFoundException}.;@Test_	public void testSerializerSerializationWithClassNotFound() throws Exception {__		TypeSerializer<?> serializer = IntSerializer.INSTANCE___		byte[] serialized__		try (ByteArrayOutputStreamWithPos out = new ByteArrayOutputStreamWithPos()) {_			TypeSerializerSerializationUtil.writeSerializer(new DataOutputViewStreamWrapper(out), serializer)__			serialized = out.toByteArray()__		}__		TypeSerializer<?> deserializedSerializer___		try (ByteArrayInputStreamWithPos in = new ByteArrayInputStreamWithPos(serialized)) {_			deserializedSerializer = TypeSerializerSerializationUtil.tryReadSerializer(_				new DataInputViewStreamWrapper(in),_				new ArtificialCNFExceptionThrowingClassLoader(_					Thread.currentThread().getContextClassLoader(),_					Collections.singleton(IntSerializer.class.getName())),_				true)__		}_		Assert.assertTrue(deserializedSerializer instanceof UnloadableDummyTypeSerializer)___		Assert.assertArrayEquals(_				InstantiationUtil.serializeObject(serializer),_				((UnloadableDummyTypeSerializer<?>) deserializedSerializer).getActualBytes())__	};verifies,deserialization,failure,cases,when,reading,a,serializer,from,bytes,in,the,case,of,a,link,class,not,found,exception;test,public,void,test,serializer,serialization,with,class,not,found,throws,exception,type,serializer,serializer,int,serializer,instance,byte,serialized,try,byte,array,output,stream,with,pos,out,new,byte,array,output,stream,with,pos,type,serializer,serialization,util,write,serializer,new,data,output,view,stream,wrapper,out,serializer,serialized,out,to,byte,array,type,serializer,deserialized,serializer,try,byte,array,input,stream,with,pos,in,new,byte,array,input,stream,with,pos,serialized,deserialized,serializer,type,serializer,serialization,util,try,read,serializer,new,data,input,view,stream,wrapper,in,new,artificial,cnfexception,throwing,class,loader,thread,current,thread,get,context,class,loader,collections,singleton,int,serializer,class,get,name,true,assert,assert,true,deserialized,serializer,instanceof,unloadable,dummy,type,serializer,assert,assert,array,equals,instantiation,util,serialize,object,serializer,unloadable,dummy,type,serializer,deserialized,serializer,get,actual,bytes
TypeSerializerSerializationUtilTest -> @Test 	public void testSerializerSerializationWithClassNotFound() throws Exception;1539149040;Verifies deserialization failure cases when reading a serializer from bytes, in the_case of a {@link ClassNotFoundException}.;@Test_	public void testSerializerSerializationWithClassNotFound() throws Exception {__		TypeSerializer<?> serializer = IntSerializer.INSTANCE___		byte[] serialized__		try (ByteArrayOutputStreamWithPos out = new ByteArrayOutputStreamWithPos()) {_			TypeSerializerSerializationUtil.writeSerializer(new DataOutputViewStreamWrapper(out), serializer)__			serialized = out.toByteArray()__		}__		TypeSerializer<?> deserializedSerializer___		try (ByteArrayInputStreamWithPos in = new ByteArrayInputStreamWithPos(serialized)) {_			deserializedSerializer = TypeSerializerSerializationUtil.tryReadSerializer(_				new DataInputViewStreamWrapper(in),_				new ArtificialCNFExceptionThrowingClassLoader(_					Thread.currentThread().getContextClassLoader(),_					Collections.singleton(IntSerializer.class.getName())),_				true)__		}_		Assert.assertTrue(deserializedSerializer instanceof UnloadableDummyTypeSerializer)___		Assert.assertArrayEquals(_				InstantiationUtil.serializeObject(serializer),_				((UnloadableDummyTypeSerializer<?>) deserializedSerializer).getActualBytes())__	};verifies,deserialization,failure,cases,when,reading,a,serializer,from,bytes,in,the,case,of,a,link,class,not,found,exception;test,public,void,test,serializer,serialization,with,class,not,found,throws,exception,type,serializer,serializer,int,serializer,instance,byte,serialized,try,byte,array,output,stream,with,pos,out,new,byte,array,output,stream,with,pos,type,serializer,serialization,util,write,serializer,new,data,output,view,stream,wrapper,out,serializer,serialized,out,to,byte,array,type,serializer,deserialized,serializer,try,byte,array,input,stream,with,pos,in,new,byte,array,input,stream,with,pos,serialized,deserialized,serializer,type,serializer,serialization,util,try,read,serializer,new,data,input,view,stream,wrapper,in,new,artificial,cnfexception,throwing,class,loader,thread,current,thread,get,context,class,loader,collections,singleton,int,serializer,class,get,name,true,assert,assert,true,deserialized,serializer,instanceof,unloadable,dummy,type,serializer,assert,assert,array,equals,instantiation,util,serialize,object,serializer,unloadable,dummy,type,serializer,deserialized,serializer,get,actual,bytes
TypeSerializerSerializationUtilTest -> @Test 	public void testSerializerSerializationWithClassNotFound() throws Exception;1539149047;Verifies deserialization failure cases when reading a serializer from bytes, in the_case of a {@link ClassNotFoundException}.;@Test_	public void testSerializerSerializationWithClassNotFound() throws Exception {__		TypeSerializer<?> serializer = IntSerializer.INSTANCE___		byte[] serialized__		try (ByteArrayOutputStreamWithPos out = new ByteArrayOutputStreamWithPos()) {_			TypeSerializerSerializationUtil.writeSerializer(new DataOutputViewStreamWrapper(out), serializer)__			serialized = out.toByteArray()__		}__		TypeSerializer<?> deserializedSerializer___		try (ByteArrayInputStreamWithPos in = new ByteArrayInputStreamWithPos(serialized)) {_			deserializedSerializer = TypeSerializerSerializationUtil.tryReadSerializer(_				new DataInputViewStreamWrapper(in),_				new ArtificialCNFExceptionThrowingClassLoader(_					Thread.currentThread().getContextClassLoader(),_					Collections.singleton(IntSerializer.class.getName())),_				true)__		}_		Assert.assertTrue(deserializedSerializer instanceof UnloadableDummyTypeSerializer)___		Assert.assertArrayEquals(_				InstantiationUtil.serializeObject(serializer),_				((UnloadableDummyTypeSerializer<?>) deserializedSerializer).getActualBytes())__	};verifies,deserialization,failure,cases,when,reading,a,serializer,from,bytes,in,the,case,of,a,link,class,not,found,exception;test,public,void,test,serializer,serialization,with,class,not,found,throws,exception,type,serializer,serializer,int,serializer,instance,byte,serialized,try,byte,array,output,stream,with,pos,out,new,byte,array,output,stream,with,pos,type,serializer,serialization,util,write,serializer,new,data,output,view,stream,wrapper,out,serializer,serialized,out,to,byte,array,type,serializer,deserialized,serializer,try,byte,array,input,stream,with,pos,in,new,byte,array,input,stream,with,pos,serialized,deserialized,serializer,type,serializer,serialization,util,try,read,serializer,new,data,input,view,stream,wrapper,in,new,artificial,cnfexception,throwing,class,loader,thread,current,thread,get,context,class,loader,collections,singleton,int,serializer,class,get,name,true,assert,assert,true,deserialized,serializer,instanceof,unloadable,dummy,type,serializer,assert,assert,array,equals,instantiation,util,serialize,object,serializer,unloadable,dummy,type,serializer,deserialized,serializer,get,actual,bytes
TypeSerializerSerializationUtilTest -> @Test 	public void testSerializerSerializationWithClassNotFound() throws Exception;1539149114;Verifies deserialization failure cases when reading a serializer from bytes, in the_case of a {@link ClassNotFoundException}.;@Test_	public void testSerializerSerializationWithClassNotFound() throws Exception {__		TypeSerializer<?> serializer = IntSerializer.INSTANCE___		byte[] serialized__		try (ByteArrayOutputStreamWithPos out = new ByteArrayOutputStreamWithPos()) {_			TypeSerializerSerializationUtil.writeSerializer(new DataOutputViewStreamWrapper(out), serializer)__			serialized = out.toByteArray()__		}__		TypeSerializer<?> deserializedSerializer___		try (ByteArrayInputStreamWithPos in = new ByteArrayInputStreamWithPos(serialized)) {_			deserializedSerializer = TypeSerializerSerializationUtil.tryReadSerializer(_				new DataInputViewStreamWrapper(in),_				new ArtificialCNFExceptionThrowingClassLoader(_					Thread.currentThread().getContextClassLoader(),_					Collections.singleton(IntSerializer.class.getName())),_				true)__		}_		Assert.assertTrue(deserializedSerializer instanceof UnloadableDummyTypeSerializer)___		Assert.assertArrayEquals(_				InstantiationUtil.serializeObject(serializer),_				((UnloadableDummyTypeSerializer<?>) deserializedSerializer).getActualBytes())__	};verifies,deserialization,failure,cases,when,reading,a,serializer,from,bytes,in,the,case,of,a,link,class,not,found,exception;test,public,void,test,serializer,serialization,with,class,not,found,throws,exception,type,serializer,serializer,int,serializer,instance,byte,serialized,try,byte,array,output,stream,with,pos,out,new,byte,array,output,stream,with,pos,type,serializer,serialization,util,write,serializer,new,data,output,view,stream,wrapper,out,serializer,serialized,out,to,byte,array,type,serializer,deserialized,serializer,try,byte,array,input,stream,with,pos,in,new,byte,array,input,stream,with,pos,serialized,deserialized,serializer,type,serializer,serialization,util,try,read,serializer,new,data,input,view,stream,wrapper,in,new,artificial,cnfexception,throwing,class,loader,thread,current,thread,get,context,class,loader,collections,singleton,int,serializer,class,get,name,true,assert,assert,true,deserialized,serializer,instanceof,unloadable,dummy,type,serializer,assert,assert,array,equals,instantiation,util,serialize,object,serializer,unloadable,dummy,type,serializer,deserialized,serializer,get,actual,bytes
TypeSerializerSerializationUtilTest -> @Test 	public void testSerializerSerializationWithClassNotFound() throws Exception;1540907751;Verifies deserialization failure cases when reading a serializer from bytes, in the_case of a {@link ClassNotFoundException}.;@Test_	public void testSerializerSerializationWithClassNotFound() throws Exception {__		TypeSerializer<?> serializer = IntSerializer.INSTANCE___		byte[] serialized__		try (ByteArrayOutputStreamWithPos out = new ByteArrayOutputStreamWithPos()) {_			TypeSerializerSerializationUtil.writeSerializer(new DataOutputViewStreamWrapper(out), serializer)__			serialized = out.toByteArray()__		}__		TypeSerializer<?> deserializedSerializer___		try (ByteArrayInputStreamWithPos in = new ByteArrayInputStreamWithPos(serialized)) {_			deserializedSerializer = TypeSerializerSerializationUtil.tryReadSerializer(_				new DataInputViewStreamWrapper(in),_				new ArtificialCNFExceptionThrowingClassLoader(_					Thread.currentThread().getContextClassLoader(),_					Collections.singleton(IntSerializer.class.getName())),_				true)__		}_		Assert.assertTrue(deserializedSerializer instanceof UnloadableDummyTypeSerializer)___		Assert.assertArrayEquals(_				InstantiationUtil.serializeObject(serializer),_				((UnloadableDummyTypeSerializer<?>) deserializedSerializer).getActualBytes())__	};verifies,deserialization,failure,cases,when,reading,a,serializer,from,bytes,in,the,case,of,a,link,class,not,found,exception;test,public,void,test,serializer,serialization,with,class,not,found,throws,exception,type,serializer,serializer,int,serializer,instance,byte,serialized,try,byte,array,output,stream,with,pos,out,new,byte,array,output,stream,with,pos,type,serializer,serialization,util,write,serializer,new,data,output,view,stream,wrapper,out,serializer,serialized,out,to,byte,array,type,serializer,deserialized,serializer,try,byte,array,input,stream,with,pos,in,new,byte,array,input,stream,with,pos,serialized,deserialized,serializer,type,serializer,serialization,util,try,read,serializer,new,data,input,view,stream,wrapper,in,new,artificial,cnfexception,throwing,class,loader,thread,current,thread,get,context,class,loader,collections,singleton,int,serializer,class,get,name,true,assert,assert,true,deserialized,serializer,instanceof,unloadable,dummy,type,serializer,assert,assert,array,equals,instantiation,util,serialize,object,serializer,unloadable,dummy,type,serializer,deserialized,serializer,get,actual,bytes
TypeSerializerSerializationUtilTest -> @Test 	public void testSerializerSerializationWithClassNotFound() throws Exception;1550652777;Verifies deserialization failure cases when reading a serializer from bytes, in the_case of a {@link ClassNotFoundException}.;@Test_	public void testSerializerSerializationWithClassNotFound() throws Exception {__		TypeSerializer<?> serializer = IntSerializer.INSTANCE___		byte[] serialized__		try (ByteArrayOutputStreamWithPos out = new ByteArrayOutputStreamWithPos()) {_			TypeSerializerSerializationUtil.writeSerializer(new DataOutputViewStreamWrapper(out), serializer)__			serialized = out.toByteArray()__		}__		TypeSerializer<?> deserializedSerializer___		try (ByteArrayInputStreamWithPos in = new ByteArrayInputStreamWithPos(serialized)) {_			deserializedSerializer = TypeSerializerSerializationUtil.tryReadSerializer(_				new DataInputViewStreamWrapper(in),_				new ArtificialCNFExceptionThrowingClassLoader(_					Thread.currentThread().getContextClassLoader(),_					Collections.singleton(IntSerializer.class.getName())),_				true)__		}_		Assert.assertTrue(deserializedSerializer instanceof UnloadableDummyTypeSerializer)___		Assert.assertArrayEquals(_				InstantiationUtil.serializeObject(serializer),_				((UnloadableDummyTypeSerializer<?>) deserializedSerializer).getActualBytes())__	};verifies,deserialization,failure,cases,when,reading,a,serializer,from,bytes,in,the,case,of,a,link,class,not,found,exception;test,public,void,test,serializer,serialization,with,class,not,found,throws,exception,type,serializer,serializer,int,serializer,instance,byte,serialized,try,byte,array,output,stream,with,pos,out,new,byte,array,output,stream,with,pos,type,serializer,serialization,util,write,serializer,new,data,output,view,stream,wrapper,out,serializer,serialized,out,to,byte,array,type,serializer,deserialized,serializer,try,byte,array,input,stream,with,pos,in,new,byte,array,input,stream,with,pos,serialized,deserialized,serializer,type,serializer,serialization,util,try,read,serializer,new,data,input,view,stream,wrapper,in,new,artificial,cnfexception,throwing,class,loader,thread,current,thread,get,context,class,loader,collections,singleton,int,serializer,class,get,name,true,assert,assert,true,deserialized,serializer,instanceof,unloadable,dummy,type,serializer,assert,assert,array,equals,instantiation,util,serialize,object,serializer,unloadable,dummy,type,serializer,deserialized,serializer,get,actual,bytes
TypeSerializerSerializationUtilTest -> @Test 	public void testSerializeConfigurationSnapshots() throws Exception;1495466666;Verifies that reading and writing configuration snapshots work correctly.;@Test_	public void testSerializeConfigurationSnapshots() throws Exception {_		TypeSerializerSerializationUtilTest.TestConfigSnapshot configSnapshot1 =_			new TypeSerializerSerializationUtilTest.TestConfigSnapshot(1, "foo")___		TypeSerializerSerializationUtilTest.TestConfigSnapshot configSnapshot2 =_			new TypeSerializerSerializationUtilTest.TestConfigSnapshot(2, "bar")___		byte[] serializedConfig__		try (ByteArrayOutputStream out = new ByteArrayOutputStream()) {_			TypeSerializerSerializationUtil.writeSerializerConfigSnapshots(_				new DataOutputViewStreamWrapper(out),_				configSnapshot1,_				configSnapshot2)___			serializedConfig = out.toByteArray()__		}__		TypeSerializerConfigSnapshot[] restoredConfigs__		try (ByteArrayInputStream in = new ByteArrayInputStream(serializedConfig)) {_			restoredConfigs = TypeSerializerSerializationUtil.readSerializerConfigSnapshots(_				new DataInputViewStreamWrapper(in), Thread.currentThread().getContextClassLoader())__		}__		assertEquals(2, restoredConfigs.length)__		assertEquals(configSnapshot1, restoredConfigs[0])__		assertEquals(configSnapshot2, restoredConfigs[1])__	};verifies,that,reading,and,writing,configuration,snapshots,work,correctly;test,public,void,test,serialize,configuration,snapshots,throws,exception,type,serializer,serialization,util,test,test,config,snapshot,config,snapshot1,new,type,serializer,serialization,util,test,test,config,snapshot,1,foo,type,serializer,serialization,util,test,test,config,snapshot,config,snapshot2,new,type,serializer,serialization,util,test,test,config,snapshot,2,bar,byte,serialized,config,try,byte,array,output,stream,out,new,byte,array,output,stream,type,serializer,serialization,util,write,serializer,config,snapshots,new,data,output,view,stream,wrapper,out,config,snapshot1,config,snapshot2,serialized,config,out,to,byte,array,type,serializer,config,snapshot,restored,configs,try,byte,array,input,stream,in,new,byte,array,input,stream,serialized,config,restored,configs,type,serializer,serialization,util,read,serializer,config,snapshots,new,data,input,view,stream,wrapper,in,thread,current,thread,get,context,class,loader,assert,equals,2,restored,configs,length,assert,equals,config,snapshot1,restored,configs,0,assert,equals,config,snapshot2,restored,configs,1
TypeSerializerSerializationUtilTest -> @Test 	public void testSerializeConfigurationSnapshots() throws Exception;1497328621;Verifies that reading and writing configuration snapshots work correctly.;@Test_	public void testSerializeConfigurationSnapshots() throws Exception {_		TypeSerializerSerializationUtilTest.TestConfigSnapshot configSnapshot1 =_			new TypeSerializerSerializationUtilTest.TestConfigSnapshot(1, "foo")___		TypeSerializerSerializationUtilTest.TestConfigSnapshot configSnapshot2 =_			new TypeSerializerSerializationUtilTest.TestConfigSnapshot(2, "bar")___		byte[] serializedConfig__		try (ByteArrayOutputStream out = new ByteArrayOutputStream()) {_			TypeSerializerSerializationUtil.writeSerializerConfigSnapshots(_				new DataOutputViewStreamWrapper(out),_				configSnapshot1,_				configSnapshot2)___			serializedConfig = out.toByteArray()__		}__		TypeSerializerConfigSnapshot[] restoredConfigs__		try (ByteArrayInputStream in = new ByteArrayInputStream(serializedConfig)) {_			restoredConfigs = TypeSerializerSerializationUtil.readSerializerConfigSnapshots(_				new DataInputViewStreamWrapper(in), Thread.currentThread().getContextClassLoader())__		}__		assertEquals(2, restoredConfigs.length)__		assertEquals(configSnapshot1, restoredConfigs[0])__		assertEquals(configSnapshot2, restoredConfigs[1])__	};verifies,that,reading,and,writing,configuration,snapshots,work,correctly;test,public,void,test,serialize,configuration,snapshots,throws,exception,type,serializer,serialization,util,test,test,config,snapshot,config,snapshot1,new,type,serializer,serialization,util,test,test,config,snapshot,1,foo,type,serializer,serialization,util,test,test,config,snapshot,config,snapshot2,new,type,serializer,serialization,util,test,test,config,snapshot,2,bar,byte,serialized,config,try,byte,array,output,stream,out,new,byte,array,output,stream,type,serializer,serialization,util,write,serializer,config,snapshots,new,data,output,view,stream,wrapper,out,config,snapshot1,config,snapshot2,serialized,config,out,to,byte,array,type,serializer,config,snapshot,restored,configs,try,byte,array,input,stream,in,new,byte,array,input,stream,serialized,config,restored,configs,type,serializer,serialization,util,read,serializer,config,snapshots,new,data,input,view,stream,wrapper,in,thread,current,thread,get,context,class,loader,assert,equals,2,restored,configs,length,assert,equals,config,snapshot1,restored,configs,0,assert,equals,config,snapshot2,restored,configs,1
TypeSerializerSerializationUtilTest -> @Test 	public void testSerializeConfigurationSnapshots() throws Exception;1525657109;Verifies that reading and writing configuration snapshots work correctly.;@Test_	public void testSerializeConfigurationSnapshots() throws Exception {_		TypeSerializerSerializationUtilTest.TestConfigSnapshot configSnapshot1 =_			new TypeSerializerSerializationUtilTest.TestConfigSnapshot(1, "foo")___		TypeSerializerSerializationUtilTest.TestConfigSnapshot configSnapshot2 =_			new TypeSerializerSerializationUtilTest.TestConfigSnapshot(2, "bar")___		byte[] serializedConfig__		try (ByteArrayOutputStream out = new ByteArrayOutputStream()) {_			TypeSerializerSerializationUtil.writeSerializerConfigSnapshots(_				new DataOutputViewStreamWrapper(out),_				configSnapshot1,_				configSnapshot2)___			serializedConfig = out.toByteArray()__		}__		TypeSerializerConfigSnapshot[] restoredConfigs__		try (ByteArrayInputStream in = new ByteArrayInputStream(serializedConfig)) {_			restoredConfigs = TypeSerializerSerializationUtil.readSerializerConfigSnapshots(_				new DataInputViewStreamWrapper(in), Thread.currentThread().getContextClassLoader())__		}__		assertEquals(2, restoredConfigs.length)__		assertEquals(configSnapshot1, restoredConfigs[0])__		assertEquals(configSnapshot2, restoredConfigs[1])__	};verifies,that,reading,and,writing,configuration,snapshots,work,correctly;test,public,void,test,serialize,configuration,snapshots,throws,exception,type,serializer,serialization,util,test,test,config,snapshot,config,snapshot1,new,type,serializer,serialization,util,test,test,config,snapshot,1,foo,type,serializer,serialization,util,test,test,config,snapshot,config,snapshot2,new,type,serializer,serialization,util,test,test,config,snapshot,2,bar,byte,serialized,config,try,byte,array,output,stream,out,new,byte,array,output,stream,type,serializer,serialization,util,write,serializer,config,snapshots,new,data,output,view,stream,wrapper,out,config,snapshot1,config,snapshot2,serialized,config,out,to,byte,array,type,serializer,config,snapshot,restored,configs,try,byte,array,input,stream,in,new,byte,array,input,stream,serialized,config,restored,configs,type,serializer,serialization,util,read,serializer,config,snapshots,new,data,input,view,stream,wrapper,in,thread,current,thread,get,context,class,loader,assert,equals,2,restored,configs,length,assert,equals,config,snapshot1,restored,configs,0,assert,equals,config,snapshot2,restored,configs,1
TypeSerializerSerializationUtilTest -> @Test 	public void testSerializeConfigurationSnapshots() throws Exception;1539149027;Verifies that reading and writing configuration snapshots work correctly.;@Test_	public void testSerializeConfigurationSnapshots() throws Exception {_		TypeSerializerSerializationUtilTest.TestConfigSnapshot<String> configSnapshot1 =_			new TypeSerializerSerializationUtilTest.TestConfigSnapshot<>(1, "foo")___		byte[] serializedConfig__		try (ByteArrayOutputStream out = new ByteArrayOutputStream()) {_			TypeSerializerSerializationUtil.writeSerializerConfigSnapshot(_				new DataOutputViewStreamWrapper(out),_				configSnapshot1,_				StringSerializer.INSTANCE)___			serializedConfig = out.toByteArray()__		}__		TypeSerializerConfigSnapshot[] restoredConfigs__		try (ByteArrayInputStream in = new ByteArrayInputStream(serializedConfig)) {_			restoredConfigs = TypeSerializerSerializationUtil.readSerializerConfigSnapshots(_				new DataInputViewStreamWrapper(in), Thread.currentThread().getContextClassLoader())__		}__		assertEquals(2, restoredConfigs.length)__		assertEquals(configSnapshot1, restoredConfigs[0])__	};verifies,that,reading,and,writing,configuration,snapshots,work,correctly;test,public,void,test,serialize,configuration,snapshots,throws,exception,type,serializer,serialization,util,test,test,config,snapshot,string,config,snapshot1,new,type,serializer,serialization,util,test,test,config,snapshot,1,foo,byte,serialized,config,try,byte,array,output,stream,out,new,byte,array,output,stream,type,serializer,serialization,util,write,serializer,config,snapshot,new,data,output,view,stream,wrapper,out,config,snapshot1,string,serializer,instance,serialized,config,out,to,byte,array,type,serializer,config,snapshot,restored,configs,try,byte,array,input,stream,in,new,byte,array,input,stream,serialized,config,restored,configs,type,serializer,serialization,util,read,serializer,config,snapshots,new,data,input,view,stream,wrapper,in,thread,current,thread,get,context,class,loader,assert,equals,2,restored,configs,length,assert,equals,config,snapshot1,restored,configs,0
TypeSerializerSerializationUtilTest -> @Test 	public void testSerializeConfigurationSnapshots() throws Exception;1539149040;Verifies that reading and writing configuration snapshots work correctly.;@Test_	public void testSerializeConfigurationSnapshots() throws Exception {_		TypeSerializerSerializationUtilTest.TestConfigSnapshot<String> configSnapshot1 =_			new TypeSerializerSerializationUtilTest.TestConfigSnapshot<>(1, "foo")___		byte[] serializedConfig__		try (ByteArrayOutputStream out = new ByteArrayOutputStream()) {_			TypeSerializerConfigSnapshotSerializationUtil.writeSerializerConfigSnapshot(_				new DataOutputViewStreamWrapper(out),_				configSnapshot1,_				StringSerializer.INSTANCE)___			serializedConfig = out.toByteArray()__		}__		TypeSerializerConfigSnapshot<?> restoredConfigs__		try (ByteArrayInputStream in = new ByteArrayInputStream(serializedConfig)) {_			restoredConfigs = TypeSerializerConfigSnapshotSerializationUtil.readSerializerConfigSnapshot(_				new DataInputViewStreamWrapper(in), Thread.currentThread().getContextClassLoader())__		}__		assertEquals(configSnapshot1, restoredConfigs)__	};verifies,that,reading,and,writing,configuration,snapshots,work,correctly;test,public,void,test,serialize,configuration,snapshots,throws,exception,type,serializer,serialization,util,test,test,config,snapshot,string,config,snapshot1,new,type,serializer,serialization,util,test,test,config,snapshot,1,foo,byte,serialized,config,try,byte,array,output,stream,out,new,byte,array,output,stream,type,serializer,config,snapshot,serialization,util,write,serializer,config,snapshot,new,data,output,view,stream,wrapper,out,config,snapshot1,string,serializer,instance,serialized,config,out,to,byte,array,type,serializer,config,snapshot,restored,configs,try,byte,array,input,stream,in,new,byte,array,input,stream,serialized,config,restored,configs,type,serializer,config,snapshot,serialization,util,read,serializer,config,snapshot,new,data,input,view,stream,wrapper,in,thread,current,thread,get,context,class,loader,assert,equals,config,snapshot1,restored,configs
TypeSerializerSerializationUtilTest -> @Test 	public void testSerializeConfigurationSnapshots() throws Exception;1539149047;Verifies that reading and writing configuration snapshots work correctly.;@Test_	public void testSerializeConfigurationSnapshots() throws Exception {_		TypeSerializerSerializationUtilTest.TestConfigSnapshot<String> configSnapshot1 =_			new TypeSerializerSerializationUtilTest.TestConfigSnapshot<>(1, "foo")___		byte[] serializedConfig__		try (ByteArrayOutputStream out = new ByteArrayOutputStream()) {_			TypeSerializerConfigSnapshotSerializationUtil.writeSerializerConfigSnapshot(_				new DataOutputViewStreamWrapper(out),_				configSnapshot1,_				StringSerializer.INSTANCE)___			serializedConfig = out.toByteArray()__		}__		TypeSerializerConfigSnapshot<?> restoredConfigs__		try (ByteArrayInputStream in = new ByteArrayInputStream(serializedConfig)) {_			restoredConfigs = TypeSerializerConfigSnapshotSerializationUtil.readSerializerConfigSnapshot(_				new DataInputViewStreamWrapper(in), Thread.currentThread().getContextClassLoader())__		}__		assertEquals(configSnapshot1, restoredConfigs)__	};verifies,that,reading,and,writing,configuration,snapshots,work,correctly;test,public,void,test,serialize,configuration,snapshots,throws,exception,type,serializer,serialization,util,test,test,config,snapshot,string,config,snapshot1,new,type,serializer,serialization,util,test,test,config,snapshot,1,foo,byte,serialized,config,try,byte,array,output,stream,out,new,byte,array,output,stream,type,serializer,config,snapshot,serialization,util,write,serializer,config,snapshot,new,data,output,view,stream,wrapper,out,config,snapshot1,string,serializer,instance,serialized,config,out,to,byte,array,type,serializer,config,snapshot,restored,configs,try,byte,array,input,stream,in,new,byte,array,input,stream,serialized,config,restored,configs,type,serializer,config,snapshot,serialization,util,read,serializer,config,snapshot,new,data,input,view,stream,wrapper,in,thread,current,thread,get,context,class,loader,assert,equals,config,snapshot1,restored,configs
TypeSerializerSerializationUtilTest -> @Test 	public void testSerializeConfigurationSnapshots() throws Exception;1539149114;Verifies that reading and writing configuration snapshots work correctly.;@Test_	public void testSerializeConfigurationSnapshots() throws Exception {_		TypeSerializerSerializationUtilTest.TestConfigSnapshot<String> configSnapshot1 =_			new TypeSerializerSerializationUtilTest.TestConfigSnapshot<>(1, "foo")___		byte[] serializedConfig__		try (ByteArrayOutputStream out = new ByteArrayOutputStream()) {_			TypeSerializerSnapshotSerializationUtil.writeSerializerSnapshot(_				new DataOutputViewStreamWrapper(out),_				configSnapshot1,_				StringSerializer.INSTANCE)___			serializedConfig = out.toByteArray()__		}__		TypeSerializerSnapshot<?> restoredConfigs__		try (ByteArrayInputStream in = new ByteArrayInputStream(serializedConfig)) {_			restoredConfigs = TypeSerializerSnapshotSerializationUtil.readSerializerSnapshot(_				new DataInputViewStreamWrapper(in), Thread.currentThread().getContextClassLoader(), null)__		}__		assertEquals(configSnapshot1, restoredConfigs)__	};verifies,that,reading,and,writing,configuration,snapshots,work,correctly;test,public,void,test,serialize,configuration,snapshots,throws,exception,type,serializer,serialization,util,test,test,config,snapshot,string,config,snapshot1,new,type,serializer,serialization,util,test,test,config,snapshot,1,foo,byte,serialized,config,try,byte,array,output,stream,out,new,byte,array,output,stream,type,serializer,snapshot,serialization,util,write,serializer,snapshot,new,data,output,view,stream,wrapper,out,config,snapshot1,string,serializer,instance,serialized,config,out,to,byte,array,type,serializer,snapshot,restored,configs,try,byte,array,input,stream,in,new,byte,array,input,stream,serialized,config,restored,configs,type,serializer,snapshot,serialization,util,read,serializer,snapshot,new,data,input,view,stream,wrapper,in,thread,current,thread,get,context,class,loader,null,assert,equals,config,snapshot1,restored,configs
TypeSerializerSerializationUtilTest -> @Test 	public void testSerializeConfigurationSnapshots() throws Exception;1540907751;Verifies that reading and writing configuration snapshots work correctly.;@Test_	public void testSerializeConfigurationSnapshots() throws Exception {_		TypeSerializerSerializationUtilTest.TestConfigSnapshot<String> configSnapshot1 =_			new TypeSerializerSerializationUtilTest.TestConfigSnapshot<>(1, "foo")___		byte[] serializedConfig__		try (ByteArrayOutputStream out = new ByteArrayOutputStream()) {_			TypeSerializerSnapshotSerializationUtil.writeSerializerSnapshot(_				new DataOutputViewStreamWrapper(out),_				configSnapshot1,_				StringSerializer.INSTANCE)___			serializedConfig = out.toByteArray()__		}__		TypeSerializerSnapshot<?> restoredConfigs__		try (ByteArrayInputStream in = new ByteArrayInputStream(serializedConfig)) {_			restoredConfigs = TypeSerializerSnapshotSerializationUtil.readSerializerSnapshot(_				new DataInputViewStreamWrapper(in), Thread.currentThread().getContextClassLoader(), null)__		}__		assertEquals(configSnapshot1, restoredConfigs)__	};verifies,that,reading,and,writing,configuration,snapshots,work,correctly;test,public,void,test,serialize,configuration,snapshots,throws,exception,type,serializer,serialization,util,test,test,config,snapshot,string,config,snapshot1,new,type,serializer,serialization,util,test,test,config,snapshot,1,foo,byte,serialized,config,try,byte,array,output,stream,out,new,byte,array,output,stream,type,serializer,snapshot,serialization,util,write,serializer,snapshot,new,data,output,view,stream,wrapper,out,config,snapshot1,string,serializer,instance,serialized,config,out,to,byte,array,type,serializer,snapshot,restored,configs,try,byte,array,input,stream,in,new,byte,array,input,stream,serialized,config,restored,configs,type,serializer,snapshot,serialization,util,read,serializer,snapshot,new,data,input,view,stream,wrapper,in,thread,current,thread,get,context,class,loader,null,assert,equals,config,snapshot1,restored,configs
TypeSerializerSerializationUtilTest -> @Test 	public void testSerializeConfigurationSnapshots() throws Exception;1550652777;Verifies that reading and writing configuration snapshots work correctly.;@Test_	public void testSerializeConfigurationSnapshots() throws Exception {_		TypeSerializerSerializationUtilTest.TestConfigSnapshot<String> configSnapshot1 =_			new TypeSerializerSerializationUtilTest.TestConfigSnapshot<>(1, "foo")___		byte[] serializedConfig__		try (ByteArrayOutputStream out = new ByteArrayOutputStream()) {_			TypeSerializerSnapshotSerializationUtil.writeSerializerSnapshot(_				new DataOutputViewStreamWrapper(out),_				configSnapshot1,_				StringSerializer.INSTANCE)___			serializedConfig = out.toByteArray()__		}__		TypeSerializerSnapshot<?> restoredConfigs__		try (ByteArrayInputStream in = new ByteArrayInputStream(serializedConfig)) {_			restoredConfigs = TypeSerializerSnapshotSerializationUtil.readSerializerSnapshot(_				new DataInputViewStreamWrapper(in), Thread.currentThread().getContextClassLoader(), null)__		}__		assertEquals(configSnapshot1, restoredConfigs)__	};verifies,that,reading,and,writing,configuration,snapshots,work,correctly;test,public,void,test,serialize,configuration,snapshots,throws,exception,type,serializer,serialization,util,test,test,config,snapshot,string,config,snapshot1,new,type,serializer,serialization,util,test,test,config,snapshot,1,foo,byte,serialized,config,try,byte,array,output,stream,out,new,byte,array,output,stream,type,serializer,snapshot,serialization,util,write,serializer,snapshot,new,data,output,view,stream,wrapper,out,config,snapshot1,string,serializer,instance,serialized,config,out,to,byte,array,type,serializer,snapshot,restored,configs,try,byte,array,input,stream,in,new,byte,array,input,stream,serialized,config,restored,configs,type,serializer,snapshot,serialization,util,read,serializer,snapshot,new,data,input,view,stream,wrapper,in,thread,current,thread,get,context,class,loader,null,assert,equals,config,snapshot1,restored,configs
TypeSerializerSerializationUtilTest -> @Test 	public void testFailsWhenConfigurationSnapshotClassNotFound() throws Exception;1495466666;Verifies that deserializing config snapshots fail if the config class could not be found.;@Test_	public void testFailsWhenConfigurationSnapshotClassNotFound() throws Exception {_		byte[] serializedConfig__		try (ByteArrayOutputStream out = new ByteArrayOutputStream()) {_			TypeSerializerSerializationUtil.writeSerializerConfigSnapshot(_				new DataOutputViewStreamWrapper(out), new TypeSerializerSerializationUtilTest.TestConfigSnapshot(123, "foobar"))__			serializedConfig = out.toByteArray()__		}__		try (ByteArrayInputStream in = new ByteArrayInputStream(serializedConfig)) {_			_			TypeSerializerSerializationUtil.readSerializerConfigSnapshot(_				new DataInputViewStreamWrapper(in), new URLClassLoader(new URL[0], null))__			fail("Expected a ClassNotFoundException wrapped in IOException")__		} catch (IOException expected) {_			_		}_	};verifies,that,deserializing,config,snapshots,fail,if,the,config,class,could,not,be,found;test,public,void,test,fails,when,configuration,snapshot,class,not,found,throws,exception,byte,serialized,config,try,byte,array,output,stream,out,new,byte,array,output,stream,type,serializer,serialization,util,write,serializer,config,snapshot,new,data,output,view,stream,wrapper,out,new,type,serializer,serialization,util,test,test,config,snapshot,123,foobar,serialized,config,out,to,byte,array,try,byte,array,input,stream,in,new,byte,array,input,stream,serialized,config,type,serializer,serialization,util,read,serializer,config,snapshot,new,data,input,view,stream,wrapper,in,new,urlclass,loader,new,url,0,null,fail,expected,a,class,not,found,exception,wrapped,in,ioexception,catch,ioexception,expected
TypeSerializerSerializationUtilTest -> @Test 	public void testFailsWhenConfigurationSnapshotClassNotFound() throws Exception;1497328621;Verifies that deserializing config snapshots fail if the config class could not be found.;@Test_	public void testFailsWhenConfigurationSnapshotClassNotFound() throws Exception {_		byte[] serializedConfig__		try (ByteArrayOutputStream out = new ByteArrayOutputStream()) {_			TypeSerializerSerializationUtil.writeSerializerConfigSnapshot(_				new DataOutputViewStreamWrapper(out), new TypeSerializerSerializationUtilTest.TestConfigSnapshot(123, "foobar"))__			serializedConfig = out.toByteArray()__		}__		try (ByteArrayInputStream in = new ByteArrayInputStream(serializedConfig)) {_			_			TypeSerializerSerializationUtil.readSerializerConfigSnapshot(_				new DataInputViewStreamWrapper(in), new URLClassLoader(new URL[0], null))__			fail("Expected a ClassNotFoundException wrapped in IOException")__		} catch (IOException expected) {_			_		}_	};verifies,that,deserializing,config,snapshots,fail,if,the,config,class,could,not,be,found;test,public,void,test,fails,when,configuration,snapshot,class,not,found,throws,exception,byte,serialized,config,try,byte,array,output,stream,out,new,byte,array,output,stream,type,serializer,serialization,util,write,serializer,config,snapshot,new,data,output,view,stream,wrapper,out,new,type,serializer,serialization,util,test,test,config,snapshot,123,foobar,serialized,config,out,to,byte,array,try,byte,array,input,stream,in,new,byte,array,input,stream,serialized,config,type,serializer,serialization,util,read,serializer,config,snapshot,new,data,input,view,stream,wrapper,in,new,urlclass,loader,new,url,0,null,fail,expected,a,class,not,found,exception,wrapped,in,ioexception,catch,ioexception,expected
TypeSerializerSerializationUtilTest -> @Test 	public void testFailsWhenConfigurationSnapshotClassNotFound() throws Exception;1525657109;Verifies that deserializing config snapshots fail if the config class could not be found.;@Test_	public void testFailsWhenConfigurationSnapshotClassNotFound() throws Exception {_		byte[] serializedConfig__		try (ByteArrayOutputStream out = new ByteArrayOutputStream()) {_			TypeSerializerSerializationUtil.writeSerializerConfigSnapshot(_				new DataOutputViewStreamWrapper(out), new TypeSerializerSerializationUtilTest.TestConfigSnapshot(123, "foobar"))__			serializedConfig = out.toByteArray()__		}__		try (ByteArrayInputStream in = new ByteArrayInputStream(serializedConfig)) {_			_			TypeSerializerSerializationUtil.readSerializerConfigSnapshot(_				new DataInputViewStreamWrapper(in), new URLClassLoader(new URL[0], null))__			fail("Expected a ClassNotFoundException wrapped in IOException")__		} catch (IOException expected) {_			_		}_	};verifies,that,deserializing,config,snapshots,fail,if,the,config,class,could,not,be,found;test,public,void,test,fails,when,configuration,snapshot,class,not,found,throws,exception,byte,serialized,config,try,byte,array,output,stream,out,new,byte,array,output,stream,type,serializer,serialization,util,write,serializer,config,snapshot,new,data,output,view,stream,wrapper,out,new,type,serializer,serialization,util,test,test,config,snapshot,123,foobar,serialized,config,out,to,byte,array,try,byte,array,input,stream,in,new,byte,array,input,stream,serialized,config,type,serializer,serialization,util,read,serializer,config,snapshot,new,data,input,view,stream,wrapper,in,new,urlclass,loader,new,url,0,null,fail,expected,a,class,not,found,exception,wrapped,in,ioexception,catch,ioexception,expected
TypeSerializerSerializationUtilTest -> @Test 	public void testFailsWhenConfigurationSnapshotClassNotFound() throws Exception;1539149027;Verifies that deserializing config snapshots fail if the config class could not be found.;@Test_	public void testFailsWhenConfigurationSnapshotClassNotFound() throws Exception {_		byte[] serializedConfig__		try (ByteArrayOutputStream out = new ByteArrayOutputStream()) {_			TypeSerializerSerializationUtil.writeSerializerConfigSnapshot(_				new DataOutputViewStreamWrapper(out),_				new TypeSerializerSerializationUtilTest.TestConfigSnapshot<>(123, "foobar"),_				StringSerializer.INSTANCE)__			serializedConfig = out.toByteArray()__		}__		try (ByteArrayInputStream in = new ByteArrayInputStream(serializedConfig)) {_			_			TypeSerializerSerializationUtil.readSerializerConfigSnapshot(_				new DataInputViewStreamWrapper(in), new URLClassLoader(new URL[0], null))__			fail("Expected a ClassNotFoundException wrapped in IOException")__		} catch (IOException expected) {_			_		}_	};verifies,that,deserializing,config,snapshots,fail,if,the,config,class,could,not,be,found;test,public,void,test,fails,when,configuration,snapshot,class,not,found,throws,exception,byte,serialized,config,try,byte,array,output,stream,out,new,byte,array,output,stream,type,serializer,serialization,util,write,serializer,config,snapshot,new,data,output,view,stream,wrapper,out,new,type,serializer,serialization,util,test,test,config,snapshot,123,foobar,string,serializer,instance,serialized,config,out,to,byte,array,try,byte,array,input,stream,in,new,byte,array,input,stream,serialized,config,type,serializer,serialization,util,read,serializer,config,snapshot,new,data,input,view,stream,wrapper,in,new,urlclass,loader,new,url,0,null,fail,expected,a,class,not,found,exception,wrapped,in,ioexception,catch,ioexception,expected
TypeSerializerSerializationUtilTest -> @Test 	public void testFailsWhenConfigurationSnapshotClassNotFound() throws Exception;1539149040;Verifies that deserializing config snapshots fail if the config class could not be found.;@Test_	public void testFailsWhenConfigurationSnapshotClassNotFound() throws Exception {_		byte[] serializedConfig__		try (ByteArrayOutputStream out = new ByteArrayOutputStream()) {_			TypeSerializerConfigSnapshotSerializationUtil.writeSerializerConfigSnapshot(_				new DataOutputViewStreamWrapper(out),_				new TypeSerializerSerializationUtilTest.TestConfigSnapshot<>(123, "foobar"),_				StringSerializer.INSTANCE)__			serializedConfig = out.toByteArray()__		}__		try (ByteArrayInputStream in = new ByteArrayInputStream(serializedConfig)) {_			_			TypeSerializerConfigSnapshotSerializationUtil.readSerializerConfigSnapshot(_				new DataInputViewStreamWrapper(in), new URLClassLoader(new URL[0], null))__			fail("Expected a ClassNotFoundException wrapped in IOException")__		} catch (IOException expected) {_			_		}_	};verifies,that,deserializing,config,snapshots,fail,if,the,config,class,could,not,be,found;test,public,void,test,fails,when,configuration,snapshot,class,not,found,throws,exception,byte,serialized,config,try,byte,array,output,stream,out,new,byte,array,output,stream,type,serializer,config,snapshot,serialization,util,write,serializer,config,snapshot,new,data,output,view,stream,wrapper,out,new,type,serializer,serialization,util,test,test,config,snapshot,123,foobar,string,serializer,instance,serialized,config,out,to,byte,array,try,byte,array,input,stream,in,new,byte,array,input,stream,serialized,config,type,serializer,config,snapshot,serialization,util,read,serializer,config,snapshot,new,data,input,view,stream,wrapper,in,new,urlclass,loader,new,url,0,null,fail,expected,a,class,not,found,exception,wrapped,in,ioexception,catch,ioexception,expected
TypeSerializerSerializationUtilTest -> @Test 	public void testFailsWhenConfigurationSnapshotClassNotFound() throws Exception;1539149047;Verifies that deserializing config snapshots fail if the config class could not be found.;@Test_	public void testFailsWhenConfigurationSnapshotClassNotFound() throws Exception {_		byte[] serializedConfig__		try (ByteArrayOutputStream out = new ByteArrayOutputStream()) {_			TypeSerializerConfigSnapshotSerializationUtil.writeSerializerConfigSnapshot(_				new DataOutputViewStreamWrapper(out),_				new TypeSerializerSerializationUtilTest.TestConfigSnapshot<>(123, "foobar"),_				StringSerializer.INSTANCE)__			serializedConfig = out.toByteArray()__		}__		try (ByteArrayInputStream in = new ByteArrayInputStream(serializedConfig)) {_			_			TypeSerializerConfigSnapshotSerializationUtil.readSerializerConfigSnapshot(_				new DataInputViewStreamWrapper(in), new URLClassLoader(new URL[0], null))__			fail("Expected a ClassNotFoundException wrapped in IOException")__		} catch (IOException expected) {_			_		}_	};verifies,that,deserializing,config,snapshots,fail,if,the,config,class,could,not,be,found;test,public,void,test,fails,when,configuration,snapshot,class,not,found,throws,exception,byte,serialized,config,try,byte,array,output,stream,out,new,byte,array,output,stream,type,serializer,config,snapshot,serialization,util,write,serializer,config,snapshot,new,data,output,view,stream,wrapper,out,new,type,serializer,serialization,util,test,test,config,snapshot,123,foobar,string,serializer,instance,serialized,config,out,to,byte,array,try,byte,array,input,stream,in,new,byte,array,input,stream,serialized,config,type,serializer,config,snapshot,serialization,util,read,serializer,config,snapshot,new,data,input,view,stream,wrapper,in,new,urlclass,loader,new,url,0,null,fail,expected,a,class,not,found,exception,wrapped,in,ioexception,catch,ioexception,expected
TypeSerializerSerializationUtilTest -> @Test 	public void testAnonymousSerializerClassWithChangedSerialVersionUID() throws Exception;1497328621;Verifies that serializers of anonymous classes can be deserialized, even if serialVersionUID changes.;@Test_	public void testAnonymousSerializerClassWithChangedSerialVersionUID() throws Exception {__		TypeSerializer anonymousClassSerializer = new AbstractIntSerializer() {}__		_		Assert.assertTrue(anonymousClassSerializer.getClass().isAnonymousClass())___		byte[] anonymousSerializerBytes__		try (ByteArrayOutputStream out = new ByteArrayOutputStream()) {_			TypeSerializerSerializationUtil.writeSerializer(new DataOutputViewStreamWrapper(out), anonymousClassSerializer)__			anonymousSerializerBytes = out.toByteArray()__		}__		long newSerialVersionUID = 1234567L__		_		Assert.assertNotEquals(ObjectStreamClass.lookup(anonymousClassSerializer.getClass()).getSerialVersionUID(), newSerialVersionUID)__		modifySerialVersionUID(anonymousSerializerBytes, anonymousClassSerializer.getClass().getName(), newSerialVersionUID)___		try (ByteArrayInputStream in = new ByteArrayInputStream(anonymousSerializerBytes)) {_			anonymousClassSerializer = TypeSerializerSerializationUtil.tryReadSerializer(new DataInputViewStreamWrapper(in), Thread.currentThread().getContextClassLoader())__		}__		_		Assert.assertNotNull(anonymousClassSerializer)__		Assert.assertTrue(anonymousClassSerializer.getClass().isAnonymousClass())__	};verifies,that,serializers,of,anonymous,classes,can,be,deserialized,even,if,serial,version,uid,changes;test,public,void,test,anonymous,serializer,class,with,changed,serial,version,uid,throws,exception,type,serializer,anonymous,class,serializer,new,abstract,int,serializer,assert,assert,true,anonymous,class,serializer,get,class,is,anonymous,class,byte,anonymous,serializer,bytes,try,byte,array,output,stream,out,new,byte,array,output,stream,type,serializer,serialization,util,write,serializer,new,data,output,view,stream,wrapper,out,anonymous,class,serializer,anonymous,serializer,bytes,out,to,byte,array,long,new,serial,version,uid,1234567l,assert,assert,not,equals,object,stream,class,lookup,anonymous,class,serializer,get,class,get,serial,version,uid,new,serial,version,uid,modify,serial,version,uid,anonymous,serializer,bytes,anonymous,class,serializer,get,class,get,name,new,serial,version,uid,try,byte,array,input,stream,in,new,byte,array,input,stream,anonymous,serializer,bytes,anonymous,class,serializer,type,serializer,serialization,util,try,read,serializer,new,data,input,view,stream,wrapper,in,thread,current,thread,get,context,class,loader,assert,assert,not,null,anonymous,class,serializer,assert,assert,true,anonymous,class,serializer,get,class,is,anonymous,class
TypeSerializerSerializationUtilTest -> @Test 	public void testAnonymousSerializerClassWithChangedSerialVersionUID() throws Exception;1525657109;Verifies that serializers of anonymous classes can be deserialized, even if serialVersionUID changes.;@Test_	public void testAnonymousSerializerClassWithChangedSerialVersionUID() throws Exception {__		TypeSerializer anonymousClassSerializer = new AbstractIntSerializer() {}__		_		Assert.assertTrue(anonymousClassSerializer.getClass().isAnonymousClass())___		byte[] anonymousSerializerBytes__		try (ByteArrayOutputStream out = new ByteArrayOutputStream()) {_			TypeSerializerSerializationUtil.writeSerializer(new DataOutputViewStreamWrapper(out), anonymousClassSerializer)__			anonymousSerializerBytes = out.toByteArray()__		}__		long newSerialVersionUID = 1234567L__		_		Assert.assertNotEquals(ObjectStreamClass.lookup(anonymousClassSerializer.getClass()).getSerialVersionUID(), newSerialVersionUID)__		modifySerialVersionUID(anonymousSerializerBytes, anonymousClassSerializer.getClass().getName(), newSerialVersionUID)___		try (ByteArrayInputStream in = new ByteArrayInputStream(anonymousSerializerBytes)) {_			anonymousClassSerializer = TypeSerializerSerializationUtil.tryReadSerializer(new DataInputViewStreamWrapper(in), Thread.currentThread().getContextClassLoader())__		}__		_		Assert.assertNotNull(anonymousClassSerializer)__		Assert.assertTrue(anonymousClassSerializer.getClass().isAnonymousClass())__	};verifies,that,serializers,of,anonymous,classes,can,be,deserialized,even,if,serial,version,uid,changes;test,public,void,test,anonymous,serializer,class,with,changed,serial,version,uid,throws,exception,type,serializer,anonymous,class,serializer,new,abstract,int,serializer,assert,assert,true,anonymous,class,serializer,get,class,is,anonymous,class,byte,anonymous,serializer,bytes,try,byte,array,output,stream,out,new,byte,array,output,stream,type,serializer,serialization,util,write,serializer,new,data,output,view,stream,wrapper,out,anonymous,class,serializer,anonymous,serializer,bytes,out,to,byte,array,long,new,serial,version,uid,1234567l,assert,assert,not,equals,object,stream,class,lookup,anonymous,class,serializer,get,class,get,serial,version,uid,new,serial,version,uid,modify,serial,version,uid,anonymous,serializer,bytes,anonymous,class,serializer,get,class,get,name,new,serial,version,uid,try,byte,array,input,stream,in,new,byte,array,input,stream,anonymous,serializer,bytes,anonymous,class,serializer,type,serializer,serialization,util,try,read,serializer,new,data,input,view,stream,wrapper,in,thread,current,thread,get,context,class,loader,assert,assert,not,null,anonymous,class,serializer,assert,assert,true,anonymous,class,serializer,get,class,is,anonymous,class
TypeSerializerSerializationUtilTest -> @Test 	public void testAnonymousSerializerClassWithChangedSerialVersionUID() throws Exception;1539149027;Verifies that serializers of anonymous classes can be deserialized, even if serialVersionUID changes.;@Test_	public void testAnonymousSerializerClassWithChangedSerialVersionUID() throws Exception {__		TypeSerializer anonymousClassSerializer = new AbstractIntSerializer() {}__		_		Assert.assertTrue(anonymousClassSerializer.getClass().isAnonymousClass())___		byte[] anonymousSerializerBytes__		try (ByteArrayOutputStream out = new ByteArrayOutputStream()) {_			TypeSerializerSerializationUtil.writeSerializer(new DataOutputViewStreamWrapper(out), anonymousClassSerializer)__			anonymousSerializerBytes = out.toByteArray()__		}__		long newSerialVersionUID = 1234567L__		_		Assert.assertNotEquals(ObjectStreamClass.lookup(anonymousClassSerializer.getClass()).getSerialVersionUID(), newSerialVersionUID)__		modifySerialVersionUID(anonymousSerializerBytes, anonymousClassSerializer.getClass().getName(), newSerialVersionUID)___		try (ByteArrayInputStream in = new ByteArrayInputStream(anonymousSerializerBytes)) {_			anonymousClassSerializer = TypeSerializerSerializationUtil.tryReadSerializer(new DataInputViewStreamWrapper(in), Thread.currentThread().getContextClassLoader())__		}__		_		Assert.assertNotNull(anonymousClassSerializer)__		Assert.assertTrue(anonymousClassSerializer.getClass().isAnonymousClass())__	};verifies,that,serializers,of,anonymous,classes,can,be,deserialized,even,if,serial,version,uid,changes;test,public,void,test,anonymous,serializer,class,with,changed,serial,version,uid,throws,exception,type,serializer,anonymous,class,serializer,new,abstract,int,serializer,assert,assert,true,anonymous,class,serializer,get,class,is,anonymous,class,byte,anonymous,serializer,bytes,try,byte,array,output,stream,out,new,byte,array,output,stream,type,serializer,serialization,util,write,serializer,new,data,output,view,stream,wrapper,out,anonymous,class,serializer,anonymous,serializer,bytes,out,to,byte,array,long,new,serial,version,uid,1234567l,assert,assert,not,equals,object,stream,class,lookup,anonymous,class,serializer,get,class,get,serial,version,uid,new,serial,version,uid,modify,serial,version,uid,anonymous,serializer,bytes,anonymous,class,serializer,get,class,get,name,new,serial,version,uid,try,byte,array,input,stream,in,new,byte,array,input,stream,anonymous,serializer,bytes,anonymous,class,serializer,type,serializer,serialization,util,try,read,serializer,new,data,input,view,stream,wrapper,in,thread,current,thread,get,context,class,loader,assert,assert,not,null,anonymous,class,serializer,assert,assert,true,anonymous,class,serializer,get,class,is,anonymous,class
TypeSerializerSerializationUtilTest -> @Test 	public void testAnonymousSerializerClassWithChangedSerialVersionUID() throws Exception;1539149040;Verifies that serializers of anonymous classes can be deserialized, even if serialVersionUID changes.;@Test_	public void testAnonymousSerializerClassWithChangedSerialVersionUID() throws Exception {__		TypeSerializer anonymousClassSerializer = new AbstractIntSerializer() {}__		_		Assert.assertTrue(anonymousClassSerializer.getClass().isAnonymousClass())___		byte[] anonymousSerializerBytes__		try (ByteArrayOutputStream out = new ByteArrayOutputStream()) {_			TypeSerializerSerializationUtil.writeSerializer(new DataOutputViewStreamWrapper(out), anonymousClassSerializer)__			anonymousSerializerBytes = out.toByteArray()__		}__		long newSerialVersionUID = 1234567L__		_		Assert.assertNotEquals(ObjectStreamClass.lookup(anonymousClassSerializer.getClass()).getSerialVersionUID(), newSerialVersionUID)__		modifySerialVersionUID(anonymousSerializerBytes, anonymousClassSerializer.getClass().getName(), newSerialVersionUID)___		try (ByteArrayInputStream in = new ByteArrayInputStream(anonymousSerializerBytes)) {_			anonymousClassSerializer = TypeSerializerSerializationUtil.tryReadSerializer(new DataInputViewStreamWrapper(in), Thread.currentThread().getContextClassLoader())__		}__		_		Assert.assertNotNull(anonymousClassSerializer)__		Assert.assertTrue(anonymousClassSerializer.getClass().isAnonymousClass())__	};verifies,that,serializers,of,anonymous,classes,can,be,deserialized,even,if,serial,version,uid,changes;test,public,void,test,anonymous,serializer,class,with,changed,serial,version,uid,throws,exception,type,serializer,anonymous,class,serializer,new,abstract,int,serializer,assert,assert,true,anonymous,class,serializer,get,class,is,anonymous,class,byte,anonymous,serializer,bytes,try,byte,array,output,stream,out,new,byte,array,output,stream,type,serializer,serialization,util,write,serializer,new,data,output,view,stream,wrapper,out,anonymous,class,serializer,anonymous,serializer,bytes,out,to,byte,array,long,new,serial,version,uid,1234567l,assert,assert,not,equals,object,stream,class,lookup,anonymous,class,serializer,get,class,get,serial,version,uid,new,serial,version,uid,modify,serial,version,uid,anonymous,serializer,bytes,anonymous,class,serializer,get,class,get,name,new,serial,version,uid,try,byte,array,input,stream,in,new,byte,array,input,stream,anonymous,serializer,bytes,anonymous,class,serializer,type,serializer,serialization,util,try,read,serializer,new,data,input,view,stream,wrapper,in,thread,current,thread,get,context,class,loader,assert,assert,not,null,anonymous,class,serializer,assert,assert,true,anonymous,class,serializer,get,class,is,anonymous,class
TypeSerializerSerializationUtilTest -> @Test 	public void testAnonymousSerializerClassWithChangedSerialVersionUID() throws Exception;1539149047;Verifies that serializers of anonymous classes can be deserialized, even if serialVersionUID changes.;@Test_	public void testAnonymousSerializerClassWithChangedSerialVersionUID() throws Exception {__		TypeSerializer anonymousClassSerializer = new AbstractIntSerializer() {}__		_		Assert.assertTrue(anonymousClassSerializer.getClass().isAnonymousClass())___		byte[] anonymousSerializerBytes__		try (ByteArrayOutputStream out = new ByteArrayOutputStream()) {_			TypeSerializerSerializationUtil.writeSerializer(new DataOutputViewStreamWrapper(out), anonymousClassSerializer)__			anonymousSerializerBytes = out.toByteArray()__		}__		long newSerialVersionUID = 1234567L__		_		Assert.assertNotEquals(ObjectStreamClass.lookup(anonymousClassSerializer.getClass()).getSerialVersionUID(), newSerialVersionUID)__		modifySerialVersionUID(anonymousSerializerBytes, anonymousClassSerializer.getClass().getName(), newSerialVersionUID)___		try (ByteArrayInputStream in = new ByteArrayInputStream(anonymousSerializerBytes)) {_			anonymousClassSerializer = TypeSerializerSerializationUtil.tryReadSerializer(new DataInputViewStreamWrapper(in), Thread.currentThread().getContextClassLoader())__		}__		_		Assert.assertNotNull(anonymousClassSerializer)__		Assert.assertTrue(anonymousClassSerializer.getClass().isAnonymousClass())__	};verifies,that,serializers,of,anonymous,classes,can,be,deserialized,even,if,serial,version,uid,changes;test,public,void,test,anonymous,serializer,class,with,changed,serial,version,uid,throws,exception,type,serializer,anonymous,class,serializer,new,abstract,int,serializer,assert,assert,true,anonymous,class,serializer,get,class,is,anonymous,class,byte,anonymous,serializer,bytes,try,byte,array,output,stream,out,new,byte,array,output,stream,type,serializer,serialization,util,write,serializer,new,data,output,view,stream,wrapper,out,anonymous,class,serializer,anonymous,serializer,bytes,out,to,byte,array,long,new,serial,version,uid,1234567l,assert,assert,not,equals,object,stream,class,lookup,anonymous,class,serializer,get,class,get,serial,version,uid,new,serial,version,uid,modify,serial,version,uid,anonymous,serializer,bytes,anonymous,class,serializer,get,class,get,name,new,serial,version,uid,try,byte,array,input,stream,in,new,byte,array,input,stream,anonymous,serializer,bytes,anonymous,class,serializer,type,serializer,serialization,util,try,read,serializer,new,data,input,view,stream,wrapper,in,thread,current,thread,get,context,class,loader,assert,assert,not,null,anonymous,class,serializer,assert,assert,true,anonymous,class,serializer,get,class,is,anonymous,class
TypeSerializerSerializationUtilTest -> @Test 	public void testAnonymousSerializerClassWithChangedSerialVersionUID() throws Exception;1539149114;Verifies that serializers of anonymous classes can be deserialized, even if serialVersionUID changes.;@Test_	public void testAnonymousSerializerClassWithChangedSerialVersionUID() throws Exception {__		TypeSerializer anonymousClassSerializer = new AbstractIntSerializer() {}__		_		Assert.assertTrue(anonymousClassSerializer.getClass().isAnonymousClass())___		byte[] anonymousSerializerBytes__		try (ByteArrayOutputStream out = new ByteArrayOutputStream()) {_			TypeSerializerSerializationUtil.writeSerializer(new DataOutputViewStreamWrapper(out), anonymousClassSerializer)__			anonymousSerializerBytes = out.toByteArray()__		}__		long newSerialVersionUID = 1234567L__		_		Assert.assertNotEquals(ObjectStreamClass.lookup(anonymousClassSerializer.getClass()).getSerialVersionUID(), newSerialVersionUID)__		modifySerialVersionUID(anonymousSerializerBytes, anonymousClassSerializer.getClass().getName(), newSerialVersionUID)___		try (ByteArrayInputStream in = new ByteArrayInputStream(anonymousSerializerBytes)) {_			anonymousClassSerializer = TypeSerializerSerializationUtil.tryReadSerializer(new DataInputViewStreamWrapper(in), Thread.currentThread().getContextClassLoader())__		}__		_		Assert.assertNotNull(anonymousClassSerializer)__		Assert.assertTrue(anonymousClassSerializer.getClass().isAnonymousClass())__	};verifies,that,serializers,of,anonymous,classes,can,be,deserialized,even,if,serial,version,uid,changes;test,public,void,test,anonymous,serializer,class,with,changed,serial,version,uid,throws,exception,type,serializer,anonymous,class,serializer,new,abstract,int,serializer,assert,assert,true,anonymous,class,serializer,get,class,is,anonymous,class,byte,anonymous,serializer,bytes,try,byte,array,output,stream,out,new,byte,array,output,stream,type,serializer,serialization,util,write,serializer,new,data,output,view,stream,wrapper,out,anonymous,class,serializer,anonymous,serializer,bytes,out,to,byte,array,long,new,serial,version,uid,1234567l,assert,assert,not,equals,object,stream,class,lookup,anonymous,class,serializer,get,class,get,serial,version,uid,new,serial,version,uid,modify,serial,version,uid,anonymous,serializer,bytes,anonymous,class,serializer,get,class,get,name,new,serial,version,uid,try,byte,array,input,stream,in,new,byte,array,input,stream,anonymous,serializer,bytes,anonymous,class,serializer,type,serializer,serialization,util,try,read,serializer,new,data,input,view,stream,wrapper,in,thread,current,thread,get,context,class,loader,assert,assert,not,null,anonymous,class,serializer,assert,assert,true,anonymous,class,serializer,get,class,is,anonymous,class
TypeSerializerSerializationUtilTest -> @Test 	public void testAnonymousSerializerClassWithChangedSerialVersionUID() throws Exception;1540907751;Verifies that serializers of anonymous classes can be deserialized, even if serialVersionUID changes.;@Test_	public void testAnonymousSerializerClassWithChangedSerialVersionUID() throws Exception {__		TypeSerializer anonymousClassSerializer = new AbstractIntSerializer() {}__		_		Assert.assertTrue(anonymousClassSerializer.getClass().isAnonymousClass())___		byte[] anonymousSerializerBytes__		try (ByteArrayOutputStream out = new ByteArrayOutputStream()) {_			TypeSerializerSerializationUtil.writeSerializer(new DataOutputViewStreamWrapper(out), anonymousClassSerializer)__			anonymousSerializerBytes = out.toByteArray()__		}__		long newSerialVersionUID = 1234567L__		_		Assert.assertNotEquals(ObjectStreamClass.lookup(anonymousClassSerializer.getClass()).getSerialVersionUID(), newSerialVersionUID)__		modifySerialVersionUID(anonymousSerializerBytes, anonymousClassSerializer.getClass().getName(), newSerialVersionUID)___		try (ByteArrayInputStream in = new ByteArrayInputStream(anonymousSerializerBytes)) {_			anonymousClassSerializer = TypeSerializerSerializationUtil.tryReadSerializer(new DataInputViewStreamWrapper(in), Thread.currentThread().getContextClassLoader())__		}__		_		Assert.assertNotNull(anonymousClassSerializer)__		Assert.assertTrue(anonymousClassSerializer.getClass().isAnonymousClass())__	};verifies,that,serializers,of,anonymous,classes,can,be,deserialized,even,if,serial,version,uid,changes;test,public,void,test,anonymous,serializer,class,with,changed,serial,version,uid,throws,exception,type,serializer,anonymous,class,serializer,new,abstract,int,serializer,assert,assert,true,anonymous,class,serializer,get,class,is,anonymous,class,byte,anonymous,serializer,bytes,try,byte,array,output,stream,out,new,byte,array,output,stream,type,serializer,serialization,util,write,serializer,new,data,output,view,stream,wrapper,out,anonymous,class,serializer,anonymous,serializer,bytes,out,to,byte,array,long,new,serial,version,uid,1234567l,assert,assert,not,equals,object,stream,class,lookup,anonymous,class,serializer,get,class,get,serial,version,uid,new,serial,version,uid,modify,serial,version,uid,anonymous,serializer,bytes,anonymous,class,serializer,get,class,get,name,new,serial,version,uid,try,byte,array,input,stream,in,new,byte,array,input,stream,anonymous,serializer,bytes,anonymous,class,serializer,type,serializer,serialization,util,try,read,serializer,new,data,input,view,stream,wrapper,in,thread,current,thread,get,context,class,loader,assert,assert,not,null,anonymous,class,serializer,assert,assert,true,anonymous,class,serializer,get,class,is,anonymous,class
TypeSerializerSerializationUtilTest -> @Test 	public void testAnonymousSerializerClassWithChangedSerialVersionUID() throws Exception;1550652777;Verifies that serializers of anonymous classes can be deserialized, even if serialVersionUID changes.;@Test_	public void testAnonymousSerializerClassWithChangedSerialVersionUID() throws Exception {__		TypeSerializer anonymousClassSerializer = new AbstractIntSerializer() {}__		_		Assert.assertTrue(anonymousClassSerializer.getClass().isAnonymousClass())___		byte[] anonymousSerializerBytes__		try (ByteArrayOutputStream out = new ByteArrayOutputStream()) {_			TypeSerializerSerializationUtil.writeSerializer(new DataOutputViewStreamWrapper(out), anonymousClassSerializer)__			anonymousSerializerBytes = out.toByteArray()__		}__		long newSerialVersionUID = 1234567L__		_		Assert.assertNotEquals(ObjectStreamClass.lookup(anonymousClassSerializer.getClass()).getSerialVersionUID(), newSerialVersionUID)__		modifySerialVersionUID(anonymousSerializerBytes, anonymousClassSerializer.getClass().getName(), newSerialVersionUID)___		try (ByteArrayInputStream in = new ByteArrayInputStream(anonymousSerializerBytes)) {_			anonymousClassSerializer = TypeSerializerSerializationUtil.tryReadSerializer(new DataInputViewStreamWrapper(in), Thread.currentThread().getContextClassLoader())__		}__		_		Assert.assertNotNull(anonymousClassSerializer)__		Assert.assertTrue(anonymousClassSerializer.getClass().isAnonymousClass())__	};verifies,that,serializers,of,anonymous,classes,can,be,deserialized,even,if,serial,version,uid,changes;test,public,void,test,anonymous,serializer,class,with,changed,serial,version,uid,throws,exception,type,serializer,anonymous,class,serializer,new,abstract,int,serializer,assert,assert,true,anonymous,class,serializer,get,class,is,anonymous,class,byte,anonymous,serializer,bytes,try,byte,array,output,stream,out,new,byte,array,output,stream,type,serializer,serialization,util,write,serializer,new,data,output,view,stream,wrapper,out,anonymous,class,serializer,anonymous,serializer,bytes,out,to,byte,array,long,new,serial,version,uid,1234567l,assert,assert,not,equals,object,stream,class,lookup,anonymous,class,serializer,get,class,get,serial,version,uid,new,serial,version,uid,modify,serial,version,uid,anonymous,serializer,bytes,anonymous,class,serializer,get,class,get,name,new,serial,version,uid,try,byte,array,input,stream,in,new,byte,array,input,stream,anonymous,serializer,bytes,anonymous,class,serializer,type,serializer,serialization,util,try,read,serializer,new,data,input,view,stream,wrapper,in,thread,current,thread,get,context,class,loader,assert,assert,not,null,anonymous,class,serializer,assert,assert,true,anonymous,class,serializer,get,class,is,anonymous,class
TypeSerializerSerializationUtilTest -> @Test 	public void testSerializerSerialization() throws Exception;1495466666;Verifies that reading and writing serializers work correctly.;@Test_	public void testSerializerSerialization() throws Exception {__		TypeSerializer<?> serializer = IntSerializer.INSTANCE___		byte[] serialized__		try (ByteArrayOutputStreamWithPos out = new ByteArrayOutputStreamWithPos()) {_			TypeSerializerSerializationUtil.writeSerializer(new DataOutputViewStreamWrapper(out), serializer)__			serialized = out.toByteArray()__		}__		TypeSerializer<?> deserializedSerializer__		try (ByteArrayInputStreamWithPos in = new ByteArrayInputStreamWithPos(serialized)) {_			deserializedSerializer = TypeSerializerSerializationUtil.tryReadSerializer(_				new DataInputViewStreamWrapper(in), Thread.currentThread().getContextClassLoader())__		}__		Assert.assertEquals(serializer, deserializedSerializer)__	};verifies,that,reading,and,writing,serializers,work,correctly;test,public,void,test,serializer,serialization,throws,exception,type,serializer,serializer,int,serializer,instance,byte,serialized,try,byte,array,output,stream,with,pos,out,new,byte,array,output,stream,with,pos,type,serializer,serialization,util,write,serializer,new,data,output,view,stream,wrapper,out,serializer,serialized,out,to,byte,array,type,serializer,deserialized,serializer,try,byte,array,input,stream,with,pos,in,new,byte,array,input,stream,with,pos,serialized,deserialized,serializer,type,serializer,serialization,util,try,read,serializer,new,data,input,view,stream,wrapper,in,thread,current,thread,get,context,class,loader,assert,assert,equals,serializer,deserialized,serializer
TypeSerializerSerializationUtilTest -> @Test 	public void testSerializerSerialization() throws Exception;1497328621;Verifies that reading and writing serializers work correctly.;@Test_	public void testSerializerSerialization() throws Exception {__		TypeSerializer<?> serializer = IntSerializer.INSTANCE___		byte[] serialized__		try (ByteArrayOutputStreamWithPos out = new ByteArrayOutputStreamWithPos()) {_			TypeSerializerSerializationUtil.writeSerializer(new DataOutputViewStreamWrapper(out), serializer)__			serialized = out.toByteArray()__		}__		TypeSerializer<?> deserializedSerializer__		try (ByteArrayInputStreamWithPos in = new ByteArrayInputStreamWithPos(serialized)) {_			deserializedSerializer = TypeSerializerSerializationUtil.tryReadSerializer(_				new DataInputViewStreamWrapper(in), Thread.currentThread().getContextClassLoader())__		}__		Assert.assertEquals(serializer, deserializedSerializer)__	};verifies,that,reading,and,writing,serializers,work,correctly;test,public,void,test,serializer,serialization,throws,exception,type,serializer,serializer,int,serializer,instance,byte,serialized,try,byte,array,output,stream,with,pos,out,new,byte,array,output,stream,with,pos,type,serializer,serialization,util,write,serializer,new,data,output,view,stream,wrapper,out,serializer,serialized,out,to,byte,array,type,serializer,deserialized,serializer,try,byte,array,input,stream,with,pos,in,new,byte,array,input,stream,with,pos,serialized,deserialized,serializer,type,serializer,serialization,util,try,read,serializer,new,data,input,view,stream,wrapper,in,thread,current,thread,get,context,class,loader,assert,assert,equals,serializer,deserialized,serializer
TypeSerializerSerializationUtilTest -> @Test 	public void testSerializerSerialization() throws Exception;1525657109;Verifies that reading and writing serializers work correctly.;@Test_	public void testSerializerSerialization() throws Exception {__		TypeSerializer<?> serializer = IntSerializer.INSTANCE___		byte[] serialized__		try (ByteArrayOutputStreamWithPos out = new ByteArrayOutputStreamWithPos()) {_			TypeSerializerSerializationUtil.writeSerializer(new DataOutputViewStreamWrapper(out), serializer)__			serialized = out.toByteArray()__		}__		TypeSerializer<?> deserializedSerializer__		try (ByteArrayInputStreamWithPos in = new ByteArrayInputStreamWithPos(serialized)) {_			deserializedSerializer = TypeSerializerSerializationUtil.tryReadSerializer(_				new DataInputViewStreamWrapper(in), Thread.currentThread().getContextClassLoader())__		}__		Assert.assertEquals(serializer, deserializedSerializer)__	};verifies,that,reading,and,writing,serializers,work,correctly;test,public,void,test,serializer,serialization,throws,exception,type,serializer,serializer,int,serializer,instance,byte,serialized,try,byte,array,output,stream,with,pos,out,new,byte,array,output,stream,with,pos,type,serializer,serialization,util,write,serializer,new,data,output,view,stream,wrapper,out,serializer,serialized,out,to,byte,array,type,serializer,deserialized,serializer,try,byte,array,input,stream,with,pos,in,new,byte,array,input,stream,with,pos,serialized,deserialized,serializer,type,serializer,serialization,util,try,read,serializer,new,data,input,view,stream,wrapper,in,thread,current,thread,get,context,class,loader,assert,assert,equals,serializer,deserialized,serializer
TypeSerializerSerializationUtilTest -> @Test 	public void testSerializerSerialization() throws Exception;1539149027;Verifies that reading and writing serializers work correctly.;@Test_	public void testSerializerSerialization() throws Exception {__		TypeSerializer<?> serializer = IntSerializer.INSTANCE___		byte[] serialized__		try (ByteArrayOutputStreamWithPos out = new ByteArrayOutputStreamWithPos()) {_			TypeSerializerSerializationUtil.writeSerializer(new DataOutputViewStreamWrapper(out), serializer)__			serialized = out.toByteArray()__		}__		TypeSerializer<?> deserializedSerializer__		try (ByteArrayInputStreamWithPos in = new ByteArrayInputStreamWithPos(serialized)) {_			deserializedSerializer = TypeSerializerSerializationUtil.tryReadSerializer(_				new DataInputViewStreamWrapper(in), Thread.currentThread().getContextClassLoader())__		}__		Assert.assertEquals(serializer, deserializedSerializer)__	};verifies,that,reading,and,writing,serializers,work,correctly;test,public,void,test,serializer,serialization,throws,exception,type,serializer,serializer,int,serializer,instance,byte,serialized,try,byte,array,output,stream,with,pos,out,new,byte,array,output,stream,with,pos,type,serializer,serialization,util,write,serializer,new,data,output,view,stream,wrapper,out,serializer,serialized,out,to,byte,array,type,serializer,deserialized,serializer,try,byte,array,input,stream,with,pos,in,new,byte,array,input,stream,with,pos,serialized,deserialized,serializer,type,serializer,serialization,util,try,read,serializer,new,data,input,view,stream,wrapper,in,thread,current,thread,get,context,class,loader,assert,assert,equals,serializer,deserialized,serializer
TypeSerializerSerializationUtilTest -> @Test 	public void testSerializerSerialization() throws Exception;1539149040;Verifies that reading and writing serializers work correctly.;@Test_	public void testSerializerSerialization() throws Exception {__		TypeSerializer<?> serializer = IntSerializer.INSTANCE___		byte[] serialized__		try (ByteArrayOutputStreamWithPos out = new ByteArrayOutputStreamWithPos()) {_			TypeSerializerSerializationUtil.writeSerializer(new DataOutputViewStreamWrapper(out), serializer)__			serialized = out.toByteArray()__		}__		TypeSerializer<?> deserializedSerializer__		try (ByteArrayInputStreamWithPos in = new ByteArrayInputStreamWithPos(serialized)) {_			deserializedSerializer = TypeSerializerSerializationUtil.tryReadSerializer(_				new DataInputViewStreamWrapper(in), Thread.currentThread().getContextClassLoader())__		}__		Assert.assertEquals(serializer, deserializedSerializer)__	};verifies,that,reading,and,writing,serializers,work,correctly;test,public,void,test,serializer,serialization,throws,exception,type,serializer,serializer,int,serializer,instance,byte,serialized,try,byte,array,output,stream,with,pos,out,new,byte,array,output,stream,with,pos,type,serializer,serialization,util,write,serializer,new,data,output,view,stream,wrapper,out,serializer,serialized,out,to,byte,array,type,serializer,deserialized,serializer,try,byte,array,input,stream,with,pos,in,new,byte,array,input,stream,with,pos,serialized,deserialized,serializer,type,serializer,serialization,util,try,read,serializer,new,data,input,view,stream,wrapper,in,thread,current,thread,get,context,class,loader,assert,assert,equals,serializer,deserialized,serializer
TypeSerializerSerializationUtilTest -> @Test 	public void testSerializerSerialization() throws Exception;1539149047;Verifies that reading and writing serializers work correctly.;@Test_	public void testSerializerSerialization() throws Exception {__		TypeSerializer<?> serializer = IntSerializer.INSTANCE___		byte[] serialized__		try (ByteArrayOutputStreamWithPos out = new ByteArrayOutputStreamWithPos()) {_			TypeSerializerSerializationUtil.writeSerializer(new DataOutputViewStreamWrapper(out), serializer)__			serialized = out.toByteArray()__		}__		TypeSerializer<?> deserializedSerializer__		try (ByteArrayInputStreamWithPos in = new ByteArrayInputStreamWithPos(serialized)) {_			deserializedSerializer = TypeSerializerSerializationUtil.tryReadSerializer(_				new DataInputViewStreamWrapper(in), Thread.currentThread().getContextClassLoader())__		}__		Assert.assertEquals(serializer, deserializedSerializer)__	};verifies,that,reading,and,writing,serializers,work,correctly;test,public,void,test,serializer,serialization,throws,exception,type,serializer,serializer,int,serializer,instance,byte,serialized,try,byte,array,output,stream,with,pos,out,new,byte,array,output,stream,with,pos,type,serializer,serialization,util,write,serializer,new,data,output,view,stream,wrapper,out,serializer,serialized,out,to,byte,array,type,serializer,deserialized,serializer,try,byte,array,input,stream,with,pos,in,new,byte,array,input,stream,with,pos,serialized,deserialized,serializer,type,serializer,serialization,util,try,read,serializer,new,data,input,view,stream,wrapper,in,thread,current,thread,get,context,class,loader,assert,assert,equals,serializer,deserialized,serializer
TypeSerializerSerializationUtilTest -> @Test 	public void testSerializerSerialization() throws Exception;1539149114;Verifies that reading and writing serializers work correctly.;@Test_	public void testSerializerSerialization() throws Exception {__		TypeSerializer<?> serializer = IntSerializer.INSTANCE___		byte[] serialized__		try (ByteArrayOutputStreamWithPos out = new ByteArrayOutputStreamWithPos()) {_			TypeSerializerSerializationUtil.writeSerializer(new DataOutputViewStreamWrapper(out), serializer)__			serialized = out.toByteArray()__		}__		TypeSerializer<?> deserializedSerializer__		try (ByteArrayInputStreamWithPos in = new ByteArrayInputStreamWithPos(serialized)) {_			deserializedSerializer = TypeSerializerSerializationUtil.tryReadSerializer(_				new DataInputViewStreamWrapper(in), Thread.currentThread().getContextClassLoader())__		}__		Assert.assertEquals(serializer, deserializedSerializer)__	};verifies,that,reading,and,writing,serializers,work,correctly;test,public,void,test,serializer,serialization,throws,exception,type,serializer,serializer,int,serializer,instance,byte,serialized,try,byte,array,output,stream,with,pos,out,new,byte,array,output,stream,with,pos,type,serializer,serialization,util,write,serializer,new,data,output,view,stream,wrapper,out,serializer,serialized,out,to,byte,array,type,serializer,deserialized,serializer,try,byte,array,input,stream,with,pos,in,new,byte,array,input,stream,with,pos,serialized,deserialized,serializer,type,serializer,serialization,util,try,read,serializer,new,data,input,view,stream,wrapper,in,thread,current,thread,get,context,class,loader,assert,assert,equals,serializer,deserialized,serializer
TypeSerializerSerializationUtilTest -> @Test 	public void testSerializerSerialization() throws Exception;1540907751;Verifies that reading and writing serializers work correctly.;@Test_	public void testSerializerSerialization() throws Exception {__		TypeSerializer<?> serializer = IntSerializer.INSTANCE___		byte[] serialized__		try (ByteArrayOutputStreamWithPos out = new ByteArrayOutputStreamWithPos()) {_			TypeSerializerSerializationUtil.writeSerializer(new DataOutputViewStreamWrapper(out), serializer)__			serialized = out.toByteArray()__		}__		TypeSerializer<?> deserializedSerializer__		try (ByteArrayInputStreamWithPos in = new ByteArrayInputStreamWithPos(serialized)) {_			deserializedSerializer = TypeSerializerSerializationUtil.tryReadSerializer(_				new DataInputViewStreamWrapper(in), Thread.currentThread().getContextClassLoader())__		}__		Assert.assertEquals(serializer, deserializedSerializer)__	};verifies,that,reading,and,writing,serializers,work,correctly;test,public,void,test,serializer,serialization,throws,exception,type,serializer,serializer,int,serializer,instance,byte,serialized,try,byte,array,output,stream,with,pos,out,new,byte,array,output,stream,with,pos,type,serializer,serialization,util,write,serializer,new,data,output,view,stream,wrapper,out,serializer,serialized,out,to,byte,array,type,serializer,deserialized,serializer,try,byte,array,input,stream,with,pos,in,new,byte,array,input,stream,with,pos,serialized,deserialized,serializer,type,serializer,serialization,util,try,read,serializer,new,data,input,view,stream,wrapper,in,thread,current,thread,get,context,class,loader,assert,assert,equals,serializer,deserialized,serializer
TypeSerializerSerializationUtilTest -> @Test 	public void testSerializerSerialization() throws Exception;1550652777;Verifies that reading and writing serializers work correctly.;@Test_	public void testSerializerSerialization() throws Exception {__		TypeSerializer<?> serializer = IntSerializer.INSTANCE___		byte[] serialized__		try (ByteArrayOutputStreamWithPos out = new ByteArrayOutputStreamWithPos()) {_			TypeSerializerSerializationUtil.writeSerializer(new DataOutputViewStreamWrapper(out), serializer)__			serialized = out.toByteArray()__		}__		TypeSerializer<?> deserializedSerializer__		try (ByteArrayInputStreamWithPos in = new ByteArrayInputStreamWithPos(serialized)) {_			deserializedSerializer = TypeSerializerSerializationUtil.tryReadSerializer(_				new DataInputViewStreamWrapper(in), Thread.currentThread().getContextClassLoader())__		}__		Assert.assertEquals(serializer, deserializedSerializer)__	};verifies,that,reading,and,writing,serializers,work,correctly;test,public,void,test,serializer,serialization,throws,exception,type,serializer,serializer,int,serializer,instance,byte,serialized,try,byte,array,output,stream,with,pos,out,new,byte,array,output,stream,with,pos,type,serializer,serialization,util,write,serializer,new,data,output,view,stream,wrapper,out,serializer,serialized,out,to,byte,array,type,serializer,deserialized,serializer,try,byte,array,input,stream,with,pos,in,new,byte,array,input,stream,with,pos,serialized,deserialized,serializer,type,serializer,serialization,util,try,read,serializer,new,data,input,view,stream,wrapper,in,thread,current,thread,get,context,class,loader,assert,assert,equals,serializer,deserialized,serializer
TypeSerializerSerializationUtilTest -> @Test(expected = IOException.class) 	public void testFailsWhenConfigurationSnapshotClassNotFound() throws Exception;1539149114;Verifies that deserializing config snapshots fail if the config class could not be found.;@Test(expected = IOException.class)_	public void testFailsWhenConfigurationSnapshotClassNotFound() throws Exception {_		byte[] serializedConfig__		try (ByteArrayOutputStream out = new ByteArrayOutputStream()) {_			TypeSerializerSnapshotSerializationUtil.writeSerializerSnapshot(_				new DataOutputViewStreamWrapper(out),_				new TypeSerializerSerializationUtilTest.TestConfigSnapshot<>(123, "foobar"),_				StringSerializer.INSTANCE)__			serializedConfig = out.toByteArray()__		}__		try (ByteArrayInputStream in = new ByteArrayInputStream(serializedConfig)) {_			_			TypeSerializerSnapshotSerializationUtil.readSerializerSnapshot(_				new DataInputViewStreamWrapper(in), new URLClassLoader(new URL[0], null), null)__		}__		fail("Expected a ClassNotFoundException wrapped in IOException")__	};verifies,that,deserializing,config,snapshots,fail,if,the,config,class,could,not,be,found;test,expected,ioexception,class,public,void,test,fails,when,configuration,snapshot,class,not,found,throws,exception,byte,serialized,config,try,byte,array,output,stream,out,new,byte,array,output,stream,type,serializer,snapshot,serialization,util,write,serializer,snapshot,new,data,output,view,stream,wrapper,out,new,type,serializer,serialization,util,test,test,config,snapshot,123,foobar,string,serializer,instance,serialized,config,out,to,byte,array,try,byte,array,input,stream,in,new,byte,array,input,stream,serialized,config,type,serializer,snapshot,serialization,util,read,serializer,snapshot,new,data,input,view,stream,wrapper,in,new,urlclass,loader,new,url,0,null,null,fail,expected,a,class,not,found,exception,wrapped,in,ioexception
TypeSerializerSerializationUtilTest -> @Test(expected = IOException.class) 	public void testFailsWhenConfigurationSnapshotClassNotFound() throws Exception;1540907751;Verifies that deserializing config snapshots fail if the config class could not be found.;@Test(expected = IOException.class)_	public void testFailsWhenConfigurationSnapshotClassNotFound() throws Exception {_		byte[] serializedConfig__		try (ByteArrayOutputStream out = new ByteArrayOutputStream()) {_			TypeSerializerSnapshotSerializationUtil.writeSerializerSnapshot(_				new DataOutputViewStreamWrapper(out),_				new TypeSerializerSerializationUtilTest.TestConfigSnapshot<>(123, "foobar"),_				StringSerializer.INSTANCE)__			serializedConfig = out.toByteArray()__		}__		try (ByteArrayInputStream in = new ByteArrayInputStream(serializedConfig)) {_			_			TypeSerializerSnapshotSerializationUtil.readSerializerSnapshot(_				new DataInputViewStreamWrapper(in), new URLClassLoader(new URL[0], null), null)__		}__		fail("Expected a ClassNotFoundException wrapped in IOException")__	};verifies,that,deserializing,config,snapshots,fail,if,the,config,class,could,not,be,found;test,expected,ioexception,class,public,void,test,fails,when,configuration,snapshot,class,not,found,throws,exception,byte,serialized,config,try,byte,array,output,stream,out,new,byte,array,output,stream,type,serializer,snapshot,serialization,util,write,serializer,snapshot,new,data,output,view,stream,wrapper,out,new,type,serializer,serialization,util,test,test,config,snapshot,123,foobar,string,serializer,instance,serialized,config,out,to,byte,array,try,byte,array,input,stream,in,new,byte,array,input,stream,serialized,config,type,serializer,snapshot,serialization,util,read,serializer,snapshot,new,data,input,view,stream,wrapper,in,new,urlclass,loader,new,url,0,null,null,fail,expected,a,class,not,found,exception,wrapped,in,ioexception
TypeSerializerSerializationUtilTest -> @Test(expected = IOException.class) 	public void testFailsWhenConfigurationSnapshotClassNotFound() throws Exception;1550652777;Verifies that deserializing config snapshots fail if the config class could not be found.;@Test(expected = IOException.class)_	public void testFailsWhenConfigurationSnapshotClassNotFound() throws Exception {_		byte[] serializedConfig__		try (ByteArrayOutputStream out = new ByteArrayOutputStream()) {_			TypeSerializerSnapshotSerializationUtil.writeSerializerSnapshot(_				new DataOutputViewStreamWrapper(out),_				new TypeSerializerSerializationUtilTest.TestConfigSnapshot<>(123, "foobar"),_				StringSerializer.INSTANCE)__			serializedConfig = out.toByteArray()__		}__		try (ByteArrayInputStream in = new ByteArrayInputStream(serializedConfig)) {_			_			TypeSerializerSnapshotSerializationUtil.readSerializerSnapshot(_				new DataInputViewStreamWrapper(in), new URLClassLoader(new URL[0], null), null)__		}__		fail("Expected a ClassNotFoundException wrapped in IOException")__	};verifies,that,deserializing,config,snapshots,fail,if,the,config,class,could,not,be,found;test,expected,ioexception,class,public,void,test,fails,when,configuration,snapshot,class,not,found,throws,exception,byte,serialized,config,try,byte,array,output,stream,out,new,byte,array,output,stream,type,serializer,snapshot,serialization,util,write,serializer,snapshot,new,data,output,view,stream,wrapper,out,new,type,serializer,serialization,util,test,test,config,snapshot,123,foobar,string,serializer,instance,serialized,config,out,to,byte,array,try,byte,array,input,stream,in,new,byte,array,input,stream,serialized,config,type,serializer,snapshot,serialization,util,read,serializer,snapshot,new,data,input,view,stream,wrapper,in,new,urlclass,loader,new,url,0,null,null,fail,expected,a,class,not,found,exception,wrapped,in,ioexception
TypeSerializerSerializationUtilTest -> @Test 	public void testSerializerAndConfigPairsSerializationWithSerializerDeserializationFailures() throws Exception;1495466666;Verifies resilience to serializer deserialization failures when writing and reading_serializer and config snapshot pairs.;@Test_	public void testSerializerAndConfigPairsSerializationWithSerializerDeserializationFailures() throws Exception {_		List<Tuple2<TypeSerializer<?>, TypeSerializerConfigSnapshot>> serializersAndConfigs = Arrays.asList(_			new Tuple2<TypeSerializer<?>, TypeSerializerConfigSnapshot>(_				IntSerializer.INSTANCE, IntSerializer.INSTANCE.snapshotConfiguration()),_			new Tuple2<TypeSerializer<?>, TypeSerializerConfigSnapshot>(_				DoubleSerializer.INSTANCE, DoubleSerializer.INSTANCE.snapshotConfiguration()))___		byte[] serializedSerializersAndConfigs__		try (ByteArrayOutputStream out = new ByteArrayOutputStream()) {_			TypeSerializerSerializationUtil.writeSerializersAndConfigsWithResilience(_					new DataOutputViewStreamWrapper(out), serializersAndConfigs)__			serializedSerializersAndConfigs = out.toByteArray()__		}__		_		TypeSerializerSerializationUtil.TypeSerializerSerializationProxy<?> mockProxy =_				mock(TypeSerializerSerializationUtil.TypeSerializerSerializationProxy.class)__		doThrow(new IOException()).when(mockProxy).read(any(DataInputViewStreamWrapper.class))__		PowerMockito.whenNew(TypeSerializerSerializationUtil.TypeSerializerSerializationProxy.class).withAnyArguments().thenReturn(mockProxy)___		List<Tuple2<TypeSerializer<?>, TypeSerializerConfigSnapshot>> restored__		try (ByteArrayInputStream in = new ByteArrayInputStream(serializedSerializersAndConfigs)) {_			restored = TypeSerializerSerializationUtil.readSerializersAndConfigsWithResilience(_				new DataInputViewStreamWrapper(in), Thread.currentThread().getContextClassLoader())__		}__		Assert.assertEquals(2, restored.size())__		Assert.assertEquals(null, restored.get(0).f0)__		Assert.assertEquals(IntSerializer.INSTANCE.snapshotConfiguration(), restored.get(0).f1)__		Assert.assertEquals(null, restored.get(1).f0)__		Assert.assertEquals(DoubleSerializer.INSTANCE.snapshotConfiguration(), restored.get(1).f1)__	};verifies,resilience,to,serializer,deserialization,failures,when,writing,and,reading,serializer,and,config,snapshot,pairs;test,public,void,test,serializer,and,config,pairs,serialization,with,serializer,deserialization,failures,throws,exception,list,tuple2,type,serializer,type,serializer,config,snapshot,serializers,and,configs,arrays,as,list,new,tuple2,type,serializer,type,serializer,config,snapshot,int,serializer,instance,int,serializer,instance,snapshot,configuration,new,tuple2,type,serializer,type,serializer,config,snapshot,double,serializer,instance,double,serializer,instance,snapshot,configuration,byte,serialized,serializers,and,configs,try,byte,array,output,stream,out,new,byte,array,output,stream,type,serializer,serialization,util,write,serializers,and,configs,with,resilience,new,data,output,view,stream,wrapper,out,serializers,and,configs,serialized,serializers,and,configs,out,to,byte,array,type,serializer,serialization,util,type,serializer,serialization,proxy,mock,proxy,mock,type,serializer,serialization,util,type,serializer,serialization,proxy,class,do,throw,new,ioexception,when,mock,proxy,read,any,data,input,view,stream,wrapper,class,power,mockito,when,new,type,serializer,serialization,util,type,serializer,serialization,proxy,class,with,any,arguments,then,return,mock,proxy,list,tuple2,type,serializer,type,serializer,config,snapshot,restored,try,byte,array,input,stream,in,new,byte,array,input,stream,serialized,serializers,and,configs,restored,type,serializer,serialization,util,read,serializers,and,configs,with,resilience,new,data,input,view,stream,wrapper,in,thread,current,thread,get,context,class,loader,assert,assert,equals,2,restored,size,assert,assert,equals,null,restored,get,0,f0,assert,assert,equals,int,serializer,instance,snapshot,configuration,restored,get,0,f1,assert,assert,equals,null,restored,get,1,f0,assert,assert,equals,double,serializer,instance,snapshot,configuration,restored,get,1,f1
TypeSerializerSerializationUtilTest -> @Test 	public void testSerializerAndConfigPairsSerializationWithSerializerDeserializationFailures() throws Exception;1497328621;Verifies resilience to serializer deserialization failures when writing and reading_serializer and config snapshot pairs.;@Test_	public void testSerializerAndConfigPairsSerializationWithSerializerDeserializationFailures() throws Exception {_		List<Tuple2<TypeSerializer<?>, TypeSerializerConfigSnapshot>> serializersAndConfigs = Arrays.asList(_			new Tuple2<TypeSerializer<?>, TypeSerializerConfigSnapshot>(_				IntSerializer.INSTANCE, IntSerializer.INSTANCE.snapshotConfiguration()),_			new Tuple2<TypeSerializer<?>, TypeSerializerConfigSnapshot>(_				DoubleSerializer.INSTANCE, DoubleSerializer.INSTANCE.snapshotConfiguration()))___		byte[] serializedSerializersAndConfigs__		try (ByteArrayOutputStream out = new ByteArrayOutputStream()) {_			TypeSerializerSerializationUtil.writeSerializersAndConfigsWithResilience(_					new DataOutputViewStreamWrapper(out), serializersAndConfigs)__			serializedSerializersAndConfigs = out.toByteArray()__		}__		_		TypeSerializerSerializationUtil.TypeSerializerSerializationProxy<?> mockProxy =_				mock(TypeSerializerSerializationUtil.TypeSerializerSerializationProxy.class)__		doThrow(new IOException()).when(mockProxy).read(any(DataInputViewStreamWrapper.class))__		PowerMockito.whenNew(TypeSerializerSerializationUtil.TypeSerializerSerializationProxy.class).withAnyArguments().thenReturn(mockProxy)___		List<Tuple2<TypeSerializer<?>, TypeSerializerConfigSnapshot>> restored__		try (ByteArrayInputStream in = new ByteArrayInputStream(serializedSerializersAndConfigs)) {_			restored = TypeSerializerSerializationUtil.readSerializersAndConfigsWithResilience(_				new DataInputViewStreamWrapper(in), Thread.currentThread().getContextClassLoader())__		}__		Assert.assertEquals(2, restored.size())__		Assert.assertEquals(null, restored.get(0).f0)__		Assert.assertEquals(IntSerializer.INSTANCE.snapshotConfiguration(), restored.get(0).f1)__		Assert.assertEquals(null, restored.get(1).f0)__		Assert.assertEquals(DoubleSerializer.INSTANCE.snapshotConfiguration(), restored.get(1).f1)__	};verifies,resilience,to,serializer,deserialization,failures,when,writing,and,reading,serializer,and,config,snapshot,pairs;test,public,void,test,serializer,and,config,pairs,serialization,with,serializer,deserialization,failures,throws,exception,list,tuple2,type,serializer,type,serializer,config,snapshot,serializers,and,configs,arrays,as,list,new,tuple2,type,serializer,type,serializer,config,snapshot,int,serializer,instance,int,serializer,instance,snapshot,configuration,new,tuple2,type,serializer,type,serializer,config,snapshot,double,serializer,instance,double,serializer,instance,snapshot,configuration,byte,serialized,serializers,and,configs,try,byte,array,output,stream,out,new,byte,array,output,stream,type,serializer,serialization,util,write,serializers,and,configs,with,resilience,new,data,output,view,stream,wrapper,out,serializers,and,configs,serialized,serializers,and,configs,out,to,byte,array,type,serializer,serialization,util,type,serializer,serialization,proxy,mock,proxy,mock,type,serializer,serialization,util,type,serializer,serialization,proxy,class,do,throw,new,ioexception,when,mock,proxy,read,any,data,input,view,stream,wrapper,class,power,mockito,when,new,type,serializer,serialization,util,type,serializer,serialization,proxy,class,with,any,arguments,then,return,mock,proxy,list,tuple2,type,serializer,type,serializer,config,snapshot,restored,try,byte,array,input,stream,in,new,byte,array,input,stream,serialized,serializers,and,configs,restored,type,serializer,serialization,util,read,serializers,and,configs,with,resilience,new,data,input,view,stream,wrapper,in,thread,current,thread,get,context,class,loader,assert,assert,equals,2,restored,size,assert,assert,equals,null,restored,get,0,f0,assert,assert,equals,int,serializer,instance,snapshot,configuration,restored,get,0,f1,assert,assert,equals,null,restored,get,1,f0,assert,assert,equals,double,serializer,instance,snapshot,configuration,restored,get,1,f1
TypeSerializerSerializationUtilTest -> @Test 	public void testSerializerAndConfigPairsSerializationWithSerializerDeserializationFailures() throws Exception;1525657109;Verifies resilience to serializer deserialization failures when writing and reading_serializer and config snapshot pairs.;@Test_	public void testSerializerAndConfigPairsSerializationWithSerializerDeserializationFailures() throws Exception {_		List<Tuple2<TypeSerializer<?>, TypeSerializerConfigSnapshot>> serializersAndConfigs = Arrays.asList(_			new Tuple2<TypeSerializer<?>, TypeSerializerConfigSnapshot>(_				IntSerializer.INSTANCE, IntSerializer.INSTANCE.snapshotConfiguration()),_			new Tuple2<TypeSerializer<?>, TypeSerializerConfigSnapshot>(_				DoubleSerializer.INSTANCE, DoubleSerializer.INSTANCE.snapshotConfiguration()))___		byte[] serializedSerializersAndConfigs__		try (ByteArrayOutputStream out = new ByteArrayOutputStream()) {_			TypeSerializerSerializationUtil.writeSerializersAndConfigsWithResilience(_					new DataOutputViewStreamWrapper(out), serializersAndConfigs)__			serializedSerializersAndConfigs = out.toByteArray()__		}__		Set<String> cnfThrowingClassnames = new HashSet<>()__		cnfThrowingClassnames.add(IntSerializer.class.getName())__		cnfThrowingClassnames.add(DoubleSerializer.class.getName())___		List<Tuple2<TypeSerializer<?>, TypeSerializerConfigSnapshot>> restored__		try (ByteArrayInputStream in = new ByteArrayInputStream(serializedSerializersAndConfigs)) {_			restored = TypeSerializerSerializationUtil.readSerializersAndConfigsWithResilience(_				new DataInputViewStreamWrapper(in),_				new ArtificialCNFExceptionThrowingClassLoader(_					Thread.currentThread().getContextClassLoader(),_					cnfThrowingClassnames))__		}__		Assert.assertEquals(2, restored.size())__		Assert.assertTrue(restored.get(0).f0 instanceof UnloadableDummyTypeSerializer)__		Assert.assertEquals(IntSerializer.INSTANCE.snapshotConfiguration(), restored.get(0).f1)__		Assert.assertTrue(restored.get(1).f0 instanceof UnloadableDummyTypeSerializer)__		Assert.assertEquals(DoubleSerializer.INSTANCE.snapshotConfiguration(), restored.get(1).f1)__	};verifies,resilience,to,serializer,deserialization,failures,when,writing,and,reading,serializer,and,config,snapshot,pairs;test,public,void,test,serializer,and,config,pairs,serialization,with,serializer,deserialization,failures,throws,exception,list,tuple2,type,serializer,type,serializer,config,snapshot,serializers,and,configs,arrays,as,list,new,tuple2,type,serializer,type,serializer,config,snapshot,int,serializer,instance,int,serializer,instance,snapshot,configuration,new,tuple2,type,serializer,type,serializer,config,snapshot,double,serializer,instance,double,serializer,instance,snapshot,configuration,byte,serialized,serializers,and,configs,try,byte,array,output,stream,out,new,byte,array,output,stream,type,serializer,serialization,util,write,serializers,and,configs,with,resilience,new,data,output,view,stream,wrapper,out,serializers,and,configs,serialized,serializers,and,configs,out,to,byte,array,set,string,cnf,throwing,classnames,new,hash,set,cnf,throwing,classnames,add,int,serializer,class,get,name,cnf,throwing,classnames,add,double,serializer,class,get,name,list,tuple2,type,serializer,type,serializer,config,snapshot,restored,try,byte,array,input,stream,in,new,byte,array,input,stream,serialized,serializers,and,configs,restored,type,serializer,serialization,util,read,serializers,and,configs,with,resilience,new,data,input,view,stream,wrapper,in,new,artificial,cnfexception,throwing,class,loader,thread,current,thread,get,context,class,loader,cnf,throwing,classnames,assert,assert,equals,2,restored,size,assert,assert,true,restored,get,0,f0,instanceof,unloadable,dummy,type,serializer,assert,assert,equals,int,serializer,instance,snapshot,configuration,restored,get,0,f1,assert,assert,true,restored,get,1,f0,instanceof,unloadable,dummy,type,serializer,assert,assert,equals,double,serializer,instance,snapshot,configuration,restored,get,1,f1
TypeSerializerSerializationUtilTest -> @Test 	public void testSerializerAndConfigPairsSerializationWithSerializerDeserializationFailures() throws Exception;1539149027;Verifies resilience to serializer deserialization failures when writing and reading_serializer and config snapshot pairs.;@Test_	public void testSerializerAndConfigPairsSerializationWithSerializerDeserializationFailures() throws Exception {_		List<Tuple2<TypeSerializer<?>, TypeSerializerConfigSnapshot>> serializersAndConfigs = Arrays.asList(_			new Tuple2<TypeSerializer<?>, TypeSerializerConfigSnapshot>(_				IntSerializer.INSTANCE, IntSerializer.INSTANCE.snapshotConfiguration()),_			new Tuple2<TypeSerializer<?>, TypeSerializerConfigSnapshot>(_				DoubleSerializer.INSTANCE, DoubleSerializer.INSTANCE.snapshotConfiguration()))___		byte[] serializedSerializersAndConfigs__		try (ByteArrayOutputStream out = new ByteArrayOutputStream()) {_			TypeSerializerSerializationUtil.writeSerializersAndConfigsWithResilience(_					new DataOutputViewStreamWrapper(out), serializersAndConfigs)__			serializedSerializersAndConfigs = out.toByteArray()__		}__		Set<String> cnfThrowingClassnames = new HashSet<>()__		cnfThrowingClassnames.add(IntSerializer.class.getName())__		cnfThrowingClassnames.add(DoubleSerializer.class.getName())___		List<Tuple2<TypeSerializer<?>, TypeSerializerConfigSnapshot>> restored__		try (ByteArrayInputStream in = new ByteArrayInputStream(serializedSerializersAndConfigs)) {_			restored = TypeSerializerSerializationUtil.readSerializersAndConfigsWithResilience(_				new DataInputViewStreamWrapper(in),_				new ArtificialCNFExceptionThrowingClassLoader(_					Thread.currentThread().getContextClassLoader(),_					cnfThrowingClassnames))__		}__		Assert.assertEquals(2, restored.size())__		Assert.assertTrue(restored.get(0).f0 instanceof UnloadableDummyTypeSerializer)__		Assert.assertEquals(IntSerializer.INSTANCE.snapshotConfiguration(), restored.get(0).f1)__		Assert.assertTrue(restored.get(1).f0 instanceof UnloadableDummyTypeSerializer)__		Assert.assertEquals(DoubleSerializer.INSTANCE.snapshotConfiguration(), restored.get(1).f1)__	};verifies,resilience,to,serializer,deserialization,failures,when,writing,and,reading,serializer,and,config,snapshot,pairs;test,public,void,test,serializer,and,config,pairs,serialization,with,serializer,deserialization,failures,throws,exception,list,tuple2,type,serializer,type,serializer,config,snapshot,serializers,and,configs,arrays,as,list,new,tuple2,type,serializer,type,serializer,config,snapshot,int,serializer,instance,int,serializer,instance,snapshot,configuration,new,tuple2,type,serializer,type,serializer,config,snapshot,double,serializer,instance,double,serializer,instance,snapshot,configuration,byte,serialized,serializers,and,configs,try,byte,array,output,stream,out,new,byte,array,output,stream,type,serializer,serialization,util,write,serializers,and,configs,with,resilience,new,data,output,view,stream,wrapper,out,serializers,and,configs,serialized,serializers,and,configs,out,to,byte,array,set,string,cnf,throwing,classnames,new,hash,set,cnf,throwing,classnames,add,int,serializer,class,get,name,cnf,throwing,classnames,add,double,serializer,class,get,name,list,tuple2,type,serializer,type,serializer,config,snapshot,restored,try,byte,array,input,stream,in,new,byte,array,input,stream,serialized,serializers,and,configs,restored,type,serializer,serialization,util,read,serializers,and,configs,with,resilience,new,data,input,view,stream,wrapper,in,new,artificial,cnfexception,throwing,class,loader,thread,current,thread,get,context,class,loader,cnf,throwing,classnames,assert,assert,equals,2,restored,size,assert,assert,true,restored,get,0,f0,instanceof,unloadable,dummy,type,serializer,assert,assert,equals,int,serializer,instance,snapshot,configuration,restored,get,0,f1,assert,assert,true,restored,get,1,f0,instanceof,unloadable,dummy,type,serializer,assert,assert,equals,double,serializer,instance,snapshot,configuration,restored,get,1,f1
TypeSerializerSerializationUtilTest -> @Test 	public void testSerializerAndConfigPairsSerializationWithSerializerDeserializationFailures() throws Exception;1539149040;Verifies resilience to serializer deserialization failures when writing and reading_serializer and config snapshot pairs.;@Test_	public void testSerializerAndConfigPairsSerializationWithSerializerDeserializationFailures() throws Exception {_		List<Tuple2<TypeSerializer<?>, TypeSerializerConfigSnapshot>> serializersAndConfigs = Arrays.asList(_			new Tuple2<TypeSerializer<?>, TypeSerializerConfigSnapshot>(_				IntSerializer.INSTANCE, IntSerializer.INSTANCE.snapshotConfiguration()),_			new Tuple2<TypeSerializer<?>, TypeSerializerConfigSnapshot>(_				DoubleSerializer.INSTANCE, DoubleSerializer.INSTANCE.snapshotConfiguration()))___		byte[] serializedSerializersAndConfigs__		try (ByteArrayOutputStream out = new ByteArrayOutputStream()) {_			TypeSerializerSerializationUtil.writeSerializersAndConfigsWithResilience(_					new DataOutputViewStreamWrapper(out), serializersAndConfigs)__			serializedSerializersAndConfigs = out.toByteArray()__		}__		Set<String> cnfThrowingClassnames = new HashSet<>()__		cnfThrowingClassnames.add(IntSerializer.class.getName())__		cnfThrowingClassnames.add(DoubleSerializer.class.getName())___		List<Tuple2<TypeSerializer<?>, TypeSerializerConfigSnapshot>> restored__		try (ByteArrayInputStream in = new ByteArrayInputStream(serializedSerializersAndConfigs)) {_			restored = TypeSerializerSerializationUtil.readSerializersAndConfigsWithResilience(_				new DataInputViewStreamWrapper(in),_				new ArtificialCNFExceptionThrowingClassLoader(_					Thread.currentThread().getContextClassLoader(),_					cnfThrowingClassnames))__		}__		Assert.assertEquals(2, restored.size())__		Assert.assertTrue(restored.get(0).f0 instanceof UnloadableDummyTypeSerializer)__		Assert.assertEquals(IntSerializer.INSTANCE.snapshotConfiguration(), restored.get(0).f1)__		Assert.assertTrue(restored.get(1).f0 instanceof UnloadableDummyTypeSerializer)__		Assert.assertEquals(DoubleSerializer.INSTANCE.snapshotConfiguration(), restored.get(1).f1)__	};verifies,resilience,to,serializer,deserialization,failures,when,writing,and,reading,serializer,and,config,snapshot,pairs;test,public,void,test,serializer,and,config,pairs,serialization,with,serializer,deserialization,failures,throws,exception,list,tuple2,type,serializer,type,serializer,config,snapshot,serializers,and,configs,arrays,as,list,new,tuple2,type,serializer,type,serializer,config,snapshot,int,serializer,instance,int,serializer,instance,snapshot,configuration,new,tuple2,type,serializer,type,serializer,config,snapshot,double,serializer,instance,double,serializer,instance,snapshot,configuration,byte,serialized,serializers,and,configs,try,byte,array,output,stream,out,new,byte,array,output,stream,type,serializer,serialization,util,write,serializers,and,configs,with,resilience,new,data,output,view,stream,wrapper,out,serializers,and,configs,serialized,serializers,and,configs,out,to,byte,array,set,string,cnf,throwing,classnames,new,hash,set,cnf,throwing,classnames,add,int,serializer,class,get,name,cnf,throwing,classnames,add,double,serializer,class,get,name,list,tuple2,type,serializer,type,serializer,config,snapshot,restored,try,byte,array,input,stream,in,new,byte,array,input,stream,serialized,serializers,and,configs,restored,type,serializer,serialization,util,read,serializers,and,configs,with,resilience,new,data,input,view,stream,wrapper,in,new,artificial,cnfexception,throwing,class,loader,thread,current,thread,get,context,class,loader,cnf,throwing,classnames,assert,assert,equals,2,restored,size,assert,assert,true,restored,get,0,f0,instanceof,unloadable,dummy,type,serializer,assert,assert,equals,int,serializer,instance,snapshot,configuration,restored,get,0,f1,assert,assert,true,restored,get,1,f0,instanceof,unloadable,dummy,type,serializer,assert,assert,equals,double,serializer,instance,snapshot,configuration,restored,get,1,f1
TypeSerializerSerializationUtilTest -> @Test 	public void testSerializerAndConfigPairsSerializationWithSerializerDeserializationFailures() throws Exception;1539149047;Verifies resilience to serializer deserialization failures when writing and reading_serializer and config snapshot pairs.;@Test_	public void testSerializerAndConfigPairsSerializationWithSerializerDeserializationFailures() throws Exception {_		List<Tuple2<TypeSerializer<?>, TypeSerializerConfigSnapshot>> serializersAndConfigs = Arrays.asList(_			new Tuple2<TypeSerializer<?>, TypeSerializerConfigSnapshot>(_				IntSerializer.INSTANCE, IntSerializer.INSTANCE.snapshotConfiguration()),_			new Tuple2<TypeSerializer<?>, TypeSerializerConfigSnapshot>(_				DoubleSerializer.INSTANCE, DoubleSerializer.INSTANCE.snapshotConfiguration()))___		byte[] serializedSerializersAndConfigs__		try (ByteArrayOutputStream out = new ByteArrayOutputStream()) {_			TypeSerializerSerializationUtil.writeSerializersAndConfigsWithResilience(_					new DataOutputViewStreamWrapper(out), serializersAndConfigs)__			serializedSerializersAndConfigs = out.toByteArray()__		}__		Set<String> cnfThrowingClassnames = new HashSet<>()__		cnfThrowingClassnames.add(IntSerializer.class.getName())__		cnfThrowingClassnames.add(DoubleSerializer.class.getName())___		List<Tuple2<TypeSerializer<?>, TypeSerializerConfigSnapshot>> restored__		try (ByteArrayInputStream in = new ByteArrayInputStream(serializedSerializersAndConfigs)) {_			restored = TypeSerializerSerializationUtil.readSerializersAndConfigsWithResilience(_				new DataInputViewStreamWrapper(in),_				new ArtificialCNFExceptionThrowingClassLoader(_					Thread.currentThread().getContextClassLoader(),_					cnfThrowingClassnames))__		}__		Assert.assertEquals(2, restored.size())__		Assert.assertTrue(restored.get(0).f0 instanceof UnloadableDummyTypeSerializer)__		Assert.assertEquals(_			IntSerializer.INSTANCE.snapshotConfiguration(),_			((BackwardsCompatibleConfigSnapshot) restored.get(0).f1).getWrappedConfigSnapshot())__		Assert.assertTrue(restored.get(1).f0 instanceof UnloadableDummyTypeSerializer)__		Assert.assertEquals(_			DoubleSerializer.INSTANCE.snapshotConfiguration(),_			((BackwardsCompatibleConfigSnapshot) restored.get(1).f1).getWrappedConfigSnapshot())__	};verifies,resilience,to,serializer,deserialization,failures,when,writing,and,reading,serializer,and,config,snapshot,pairs;test,public,void,test,serializer,and,config,pairs,serialization,with,serializer,deserialization,failures,throws,exception,list,tuple2,type,serializer,type,serializer,config,snapshot,serializers,and,configs,arrays,as,list,new,tuple2,type,serializer,type,serializer,config,snapshot,int,serializer,instance,int,serializer,instance,snapshot,configuration,new,tuple2,type,serializer,type,serializer,config,snapshot,double,serializer,instance,double,serializer,instance,snapshot,configuration,byte,serialized,serializers,and,configs,try,byte,array,output,stream,out,new,byte,array,output,stream,type,serializer,serialization,util,write,serializers,and,configs,with,resilience,new,data,output,view,stream,wrapper,out,serializers,and,configs,serialized,serializers,and,configs,out,to,byte,array,set,string,cnf,throwing,classnames,new,hash,set,cnf,throwing,classnames,add,int,serializer,class,get,name,cnf,throwing,classnames,add,double,serializer,class,get,name,list,tuple2,type,serializer,type,serializer,config,snapshot,restored,try,byte,array,input,stream,in,new,byte,array,input,stream,serialized,serializers,and,configs,restored,type,serializer,serialization,util,read,serializers,and,configs,with,resilience,new,data,input,view,stream,wrapper,in,new,artificial,cnfexception,throwing,class,loader,thread,current,thread,get,context,class,loader,cnf,throwing,classnames,assert,assert,equals,2,restored,size,assert,assert,true,restored,get,0,f0,instanceof,unloadable,dummy,type,serializer,assert,assert,equals,int,serializer,instance,snapshot,configuration,backwards,compatible,config,snapshot,restored,get,0,f1,get,wrapped,config,snapshot,assert,assert,true,restored,get,1,f0,instanceof,unloadable,dummy,type,serializer,assert,assert,equals,double,serializer,instance,snapshot,configuration,backwards,compatible,config,snapshot,restored,get,1,f1,get,wrapped,config,snapshot
TypeSerializerSerializationUtilTest -> @Test 	public void testSerializerAndConfigPairsSerializationWithSerializerDeserializationFailures() throws Exception;1539149114;Verifies resilience to serializer deserialization failures when writing and reading_serializer and config snapshot pairs.;@Test_	public void testSerializerAndConfigPairsSerializationWithSerializerDeserializationFailures() throws Exception {_		List<Tuple2<TypeSerializer<?>, TypeSerializerSnapshot<?>>> serializersAndConfigs = Arrays.asList(_			new Tuple2<TypeSerializer<?>, TypeSerializerSnapshot<?>>(_				IntSerializer.INSTANCE, IntSerializer.INSTANCE.snapshotConfiguration()),_			new Tuple2<TypeSerializer<?>, TypeSerializerSnapshot<?>>(_				DoubleSerializer.INSTANCE, DoubleSerializer.INSTANCE.snapshotConfiguration()))___		byte[] serializedSerializersAndConfigs__		try (ByteArrayOutputStream out = new ByteArrayOutputStream()) {_			TypeSerializerSerializationUtil.writeSerializersAndConfigsWithResilience(_					new DataOutputViewStreamWrapper(out), serializersAndConfigs)__			serializedSerializersAndConfigs = out.toByteArray()__		}__		Set<String> cnfThrowingClassnames = new HashSet<>()__		cnfThrowingClassnames.add(IntSerializer.class.getName())__		cnfThrowingClassnames.add(DoubleSerializer.class.getName())___		List<Tuple2<TypeSerializer<?>, TypeSerializerSnapshot<?>>> restored__		try (ByteArrayInputStream in = new ByteArrayInputStream(serializedSerializersAndConfigs)) {_			restored = TypeSerializerSerializationUtil.readSerializersAndConfigsWithResilience(_				new DataInputViewStreamWrapper(in),_				new ArtificialCNFExceptionThrowingClassLoader(_					Thread.currentThread().getContextClassLoader(),_					cnfThrowingClassnames))__		}__		Assert.assertEquals(2, restored.size())__		Assert.assertTrue(restored.get(0).f0 instanceof UnloadableDummyTypeSerializer)__		Assert.assertEquals(_			IntSerializer.INSTANCE.snapshotConfiguration(),_			restored.get(0).f1)__		Assert.assertTrue(restored.get(1).f0 instanceof UnloadableDummyTypeSerializer)__		Assert.assertEquals(_			DoubleSerializer.INSTANCE.snapshotConfiguration(),_			restored.get(1).f1)__	};verifies,resilience,to,serializer,deserialization,failures,when,writing,and,reading,serializer,and,config,snapshot,pairs;test,public,void,test,serializer,and,config,pairs,serialization,with,serializer,deserialization,failures,throws,exception,list,tuple2,type,serializer,type,serializer,snapshot,serializers,and,configs,arrays,as,list,new,tuple2,type,serializer,type,serializer,snapshot,int,serializer,instance,int,serializer,instance,snapshot,configuration,new,tuple2,type,serializer,type,serializer,snapshot,double,serializer,instance,double,serializer,instance,snapshot,configuration,byte,serialized,serializers,and,configs,try,byte,array,output,stream,out,new,byte,array,output,stream,type,serializer,serialization,util,write,serializers,and,configs,with,resilience,new,data,output,view,stream,wrapper,out,serializers,and,configs,serialized,serializers,and,configs,out,to,byte,array,set,string,cnf,throwing,classnames,new,hash,set,cnf,throwing,classnames,add,int,serializer,class,get,name,cnf,throwing,classnames,add,double,serializer,class,get,name,list,tuple2,type,serializer,type,serializer,snapshot,restored,try,byte,array,input,stream,in,new,byte,array,input,stream,serialized,serializers,and,configs,restored,type,serializer,serialization,util,read,serializers,and,configs,with,resilience,new,data,input,view,stream,wrapper,in,new,artificial,cnfexception,throwing,class,loader,thread,current,thread,get,context,class,loader,cnf,throwing,classnames,assert,assert,equals,2,restored,size,assert,assert,true,restored,get,0,f0,instanceof,unloadable,dummy,type,serializer,assert,assert,equals,int,serializer,instance,snapshot,configuration,restored,get,0,f1,assert,assert,true,restored,get,1,f0,instanceof,unloadable,dummy,type,serializer,assert,assert,equals,double,serializer,instance,snapshot,configuration,restored,get,1,f1
TypeSerializerSerializationUtilTest -> @Test 	public void testSerializerAndConfigPairsSerializationWithSerializerDeserializationFailures() throws Exception;1540907751;Verifies resilience to serializer deserialization failures when writing and reading_serializer and config snapshot pairs.;@Test_	public void testSerializerAndConfigPairsSerializationWithSerializerDeserializationFailures() throws Exception {_		TestIntSerializer serializer = new TestIntSerializer()___		List<Tuple2<TypeSerializer<?>, TypeSerializerSnapshot<?>>> serializersAndConfigs = Arrays.asList(_			new Tuple2<TypeSerializer<?>, TypeSerializerSnapshot<?>>(_				serializer, serializer.snapshotConfiguration()))___		byte[] serializedSerializersAndConfigs__		try (ByteArrayOutputStream out = new ByteArrayOutputStream()) {_			TypeSerializerSerializationUtil.writeSerializersAndConfigsWithResilience(_					new DataOutputViewStreamWrapper(out), serializersAndConfigs)__			serializedSerializersAndConfigs = out.toByteArray()__		}__		Set<String> cnfThrowingClassnames = new HashSet<>()__		cnfThrowingClassnames.add(TestIntSerializer.class.getName())___		List<Tuple2<TypeSerializer<?>, TypeSerializerSnapshot<?>>> restored__		try (ByteArrayInputStream in = new ByteArrayInputStream(serializedSerializersAndConfigs)) {_			restored = TypeSerializerSerializationUtil.readSerializersAndConfigsWithResilience(_				new DataInputViewStreamWrapper(in),_				new ArtificialCNFExceptionThrowingClassLoader(_					Thread.currentThread().getContextClassLoader(),_					cnfThrowingClassnames))__		}__		Assert.assertEquals(1, restored.size())__		Assert.assertTrue(restored.get(0).f0 instanceof UnloadableDummyTypeSerializer)__		Assert.assertThat(restored.get(0).f1, Matchers.instanceOf(SimpleTypeSerializerSnapshot.class))__	};verifies,resilience,to,serializer,deserialization,failures,when,writing,and,reading,serializer,and,config,snapshot,pairs;test,public,void,test,serializer,and,config,pairs,serialization,with,serializer,deserialization,failures,throws,exception,test,int,serializer,serializer,new,test,int,serializer,list,tuple2,type,serializer,type,serializer,snapshot,serializers,and,configs,arrays,as,list,new,tuple2,type,serializer,type,serializer,snapshot,serializer,serializer,snapshot,configuration,byte,serialized,serializers,and,configs,try,byte,array,output,stream,out,new,byte,array,output,stream,type,serializer,serialization,util,write,serializers,and,configs,with,resilience,new,data,output,view,stream,wrapper,out,serializers,and,configs,serialized,serializers,and,configs,out,to,byte,array,set,string,cnf,throwing,classnames,new,hash,set,cnf,throwing,classnames,add,test,int,serializer,class,get,name,list,tuple2,type,serializer,type,serializer,snapshot,restored,try,byte,array,input,stream,in,new,byte,array,input,stream,serialized,serializers,and,configs,restored,type,serializer,serialization,util,read,serializers,and,configs,with,resilience,new,data,input,view,stream,wrapper,in,new,artificial,cnfexception,throwing,class,loader,thread,current,thread,get,context,class,loader,cnf,throwing,classnames,assert,assert,equals,1,restored,size,assert,assert,true,restored,get,0,f0,instanceof,unloadable,dummy,type,serializer,assert,assert,that,restored,get,0,f1,matchers,instance,of,simple,type,serializer,snapshot,class
TypeSerializerSerializationUtilTest -> @Test 	public void testSerializerAndConfigPairsSerializationWithSerializerDeserializationFailures() throws Exception;1550652777;Verifies resilience to serializer deserialization failures when writing and reading_serializer and config snapshot pairs.;@Test_	public void testSerializerAndConfigPairsSerializationWithSerializerDeserializationFailures() throws Exception {_		TestIntSerializer serializer = new TestIntSerializer()___		List<Tuple2<TypeSerializer<?>, TypeSerializerSnapshot<?>>> serializersAndConfigs = Arrays.asList(_			new Tuple2<TypeSerializer<?>, TypeSerializerSnapshot<?>>(_				serializer, serializer.snapshotConfiguration()))___		byte[] serializedSerializersAndConfigs__		try (ByteArrayOutputStream out = new ByteArrayOutputStream()) {_			TypeSerializerSerializationUtil.writeSerializersAndConfigsWithResilience(_					new DataOutputViewStreamWrapper(out), serializersAndConfigs)__			serializedSerializersAndConfigs = out.toByteArray()__		}__		Set<String> cnfThrowingClassnames = new HashSet<>()__		cnfThrowingClassnames.add(TestIntSerializer.class.getName())___		List<Tuple2<TypeSerializer<?>, TypeSerializerSnapshot<?>>> restored__		try (ByteArrayInputStream in = new ByteArrayInputStream(serializedSerializersAndConfigs)) {_			restored = TypeSerializerSerializationUtil.readSerializersAndConfigsWithResilience(_				new DataInputViewStreamWrapper(in),_				new ArtificialCNFExceptionThrowingClassLoader(_					Thread.currentThread().getContextClassLoader(),_					cnfThrowingClassnames))__		}__		Assert.assertEquals(1, restored.size())__		Assert.assertTrue(restored.get(0).f0 instanceof UnloadableDummyTypeSerializer)__		Assert.assertThat(restored.get(0).f1, Matchers.instanceOf(SimpleTypeSerializerSnapshot.class))__	};verifies,resilience,to,serializer,deserialization,failures,when,writing,and,reading,serializer,and,config,snapshot,pairs;test,public,void,test,serializer,and,config,pairs,serialization,with,serializer,deserialization,failures,throws,exception,test,int,serializer,serializer,new,test,int,serializer,list,tuple2,type,serializer,type,serializer,snapshot,serializers,and,configs,arrays,as,list,new,tuple2,type,serializer,type,serializer,snapshot,serializer,serializer,snapshot,configuration,byte,serialized,serializers,and,configs,try,byte,array,output,stream,out,new,byte,array,output,stream,type,serializer,serialization,util,write,serializers,and,configs,with,resilience,new,data,output,view,stream,wrapper,out,serializers,and,configs,serialized,serializers,and,configs,out,to,byte,array,set,string,cnf,throwing,classnames,new,hash,set,cnf,throwing,classnames,add,test,int,serializer,class,get,name,list,tuple2,type,serializer,type,serializer,snapshot,restored,try,byte,array,input,stream,in,new,byte,array,input,stream,serialized,serializers,and,configs,restored,type,serializer,serialization,util,read,serializers,and,configs,with,resilience,new,data,input,view,stream,wrapper,in,new,artificial,cnfexception,throwing,class,loader,thread,current,thread,get,context,class,loader,cnf,throwing,classnames,assert,assert,equals,1,restored,size,assert,assert,true,restored,get,0,f0,instanceof,unloadable,dummy,type,serializer,assert,assert,that,restored,get,0,f1,matchers,instance,of,simple,type,serializer,snapshot,class
