# id;timestamp;commentText;codeText;commentWords;codeWords
GlobalConfigurationTest -> @Test 	public void testConfigurationXML();1405024514;This test creates several configuration files with values and cross-checks the resulting_{@link GlobalConfiguration} object.;@Test_	public void testConfigurationXML() {__		_		final File tmpDir = getTmpDir()__		final File confFile1 = createRandomFile(tmpDir, ".xml")__		final File confFile2 = createRandomFile(tmpDir, ".xml")___		try {_			try {_				final PrintWriter pw1 = new PrintWriter(confFile1)__				final PrintWriter pw2 = new PrintWriter(confFile2)___				pw1.append("<configuration>")__				pw2.append("<configuration>")___				pw1.append("<property><key>mykey1</key><value>myvalue1</value></property>")__				pw1.append("<property></property>")__				pw1.append("<property><key></key><value></value></property>")__				pw1.append("<property><key>hello</key><value></value></property>")__				pw1.append("<property><key>mykey2</key><value>myvalue2</value></property>")__				pw2.append("<property><key>mykey3</key><value>myvalue3</value></property>")__				pw2.append("<property><key>mykey4</key><value>myvalue4</value></property>")___				pw1.append("</configuration>")__				pw2.append("</configuration>")__				pw1.close()__				pw2.close()__			} catch (FileNotFoundException e) {_				fail(e.getMessage())__			}__			GlobalConfiguration.loadConfiguration(tmpDir.getAbsolutePath())___			final Configuration co = GlobalConfiguration.getConfiguration()___			assertEquals(co.getString("mykey1", "null"), "myvalue1")__			assertEquals(co.getString("mykey2", "null"), "myvalue2")__			assertEquals(co.getString("mykey3", "null"), "myvalue3")__			assertEquals(co.getString("mykey4", "null"), "myvalue4")___			_			_			_			_			__			_			final Configuration newconf = new Configuration()__			newconf.setInteger("mynewinteger", 1000)__			GlobalConfiguration.includeConfiguration(newconf)__			assertEquals(GlobalConfiguration.getInteger("mynewinteger", 0), 1000)___			_			final String[] configparams = { "mykey1", "mykey2" }__			Configuration newconf2 = GlobalConfiguration.getConfiguration(configparams)___			assertEquals(newconf2.keySet().size(), 2)__			assertEquals(newconf2.getString("mykey1", "null"), "myvalue1")__			assertEquals(newconf2.getString("mykey2", "null"), "myvalue2")__		} finally {_			_			confFile1.delete()__			confFile2.delete()__			tmpDir.delete()__		}_	};this,test,creates,several,configuration,files,with,values,and,cross,checks,the,resulting,link,global,configuration,object;test,public,void,test,configuration,xml,final,file,tmp,dir,get,tmp,dir,final,file,conf,file1,create,random,file,tmp,dir,xml,final,file,conf,file2,create,random,file,tmp,dir,xml,try,try,final,print,writer,pw1,new,print,writer,conf,file1,final,print,writer,pw2,new,print,writer,conf,file2,pw1,append,configuration,pw2,append,configuration,pw1,append,property,key,mykey1,key,value,myvalue1,value,property,pw1,append,property,property,pw1,append,property,key,key,value,value,property,pw1,append,property,key,hello,key,value,value,property,pw1,append,property,key,mykey2,key,value,myvalue2,value,property,pw2,append,property,key,mykey3,key,value,myvalue3,value,property,pw2,append,property,key,mykey4,key,value,myvalue4,value,property,pw1,append,configuration,pw2,append,configuration,pw1,close,pw2,close,catch,file,not,found,exception,e,fail,e,get,message,global,configuration,load,configuration,tmp,dir,get,absolute,path,final,configuration,co,global,configuration,get,configuration,assert,equals,co,get,string,mykey1,null,myvalue1,assert,equals,co,get,string,mykey2,null,myvalue2,assert,equals,co,get,string,mykey3,null,myvalue3,assert,equals,co,get,string,mykey4,null,myvalue4,final,configuration,newconf,new,configuration,newconf,set,integer,mynewinteger,1000,global,configuration,include,configuration,newconf,assert,equals,global,configuration,get,integer,mynewinteger,0,1000,final,string,configparams,mykey1,mykey2,configuration,newconf2,global,configuration,get,configuration,configparams,assert,equals,newconf2,key,set,size,2,assert,equals,newconf2,get,string,mykey1,null,myvalue1,assert,equals,newconf2,get,string,mykey2,null,myvalue2,finally,conf,file1,delete,conf,file2,delete,tmp,dir,delete
GlobalConfigurationTest -> @Test 	public void testConfigurationXML();1405090423;This test creates several configuration files with values and cross-checks the resulting_{@link GlobalConfiguration} object.;@Test_	public void testConfigurationXML() {__		_		final File tmpDir = getTmpDir()__		final File confFile1 = createRandomFile(tmpDir, ".xml")__		final File confFile2 = createRandomFile(tmpDir, ".xml")___		try {_			try {_				final PrintWriter pw1 = new PrintWriter(confFile1)__				final PrintWriter pw2 = new PrintWriter(confFile2)___				pw1.append("<configuration>")__				pw2.append("<configuration>")___				pw1.append("<property><key>mykey1</key><value>myvalue1</value></property>")__				pw1.append("<property></property>")__				pw1.append("<property><key></key><value></value></property>")__				pw1.append("<property><key>hello</key><value></value></property>")__				pw1.append("<property><key>mykey2</key><value>myvalue2</value></property>")__				pw2.append("<property><key>mykey3</key><value>myvalue3</value></property>")__				pw2.append("<property><key>mykey4</key><value>myvalue4</value></property>")___				pw1.append("</configuration>")__				pw2.append("</configuration>")__				pw1.close()__				pw2.close()__			} catch (FileNotFoundException e) {_				fail(e.getMessage())__			}__			GlobalConfiguration.loadConfiguration(tmpDir.getAbsolutePath())___			final Configuration co = GlobalConfiguration.getConfiguration()___			assertEquals(co.getString("mykey1", "null"), "myvalue1")__			assertEquals(co.getString("mykey2", "null"), "myvalue2")__			assertEquals(co.getString("mykey3", "null"), "myvalue3")__			assertEquals(co.getString("mykey4", "null"), "myvalue4")___			_			_			_			_			__			_			final Configuration newconf = new Configuration()__			newconf.setInteger("mynewinteger", 1000)__			GlobalConfiguration.includeConfiguration(newconf)__			assertEquals(GlobalConfiguration.getInteger("mynewinteger", 0), 1000)___			_			final String[] configparams = { "mykey1", "mykey2" }__			Configuration newconf2 = GlobalConfiguration.getConfiguration(configparams)___			assertEquals(newconf2.keySet().size(), 2)__			assertEquals(newconf2.getString("mykey1", "null"), "myvalue1")__			assertEquals(newconf2.getString("mykey2", "null"), "myvalue2")__		} finally {_			_			confFile1.delete()__			confFile2.delete()__			tmpDir.delete()__		}_	};this,test,creates,several,configuration,files,with,values,and,cross,checks,the,resulting,link,global,configuration,object;test,public,void,test,configuration,xml,final,file,tmp,dir,get,tmp,dir,final,file,conf,file1,create,random,file,tmp,dir,xml,final,file,conf,file2,create,random,file,tmp,dir,xml,try,try,final,print,writer,pw1,new,print,writer,conf,file1,final,print,writer,pw2,new,print,writer,conf,file2,pw1,append,configuration,pw2,append,configuration,pw1,append,property,key,mykey1,key,value,myvalue1,value,property,pw1,append,property,property,pw1,append,property,key,key,value,value,property,pw1,append,property,key,hello,key,value,value,property,pw1,append,property,key,mykey2,key,value,myvalue2,value,property,pw2,append,property,key,mykey3,key,value,myvalue3,value,property,pw2,append,property,key,mykey4,key,value,myvalue4,value,property,pw1,append,configuration,pw2,append,configuration,pw1,close,pw2,close,catch,file,not,found,exception,e,fail,e,get,message,global,configuration,load,configuration,tmp,dir,get,absolute,path,final,configuration,co,global,configuration,get,configuration,assert,equals,co,get,string,mykey1,null,myvalue1,assert,equals,co,get,string,mykey2,null,myvalue2,assert,equals,co,get,string,mykey3,null,myvalue3,assert,equals,co,get,string,mykey4,null,myvalue4,final,configuration,newconf,new,configuration,newconf,set,integer,mynewinteger,1000,global,configuration,include,configuration,newconf,assert,equals,global,configuration,get,integer,mynewinteger,0,1000,final,string,configparams,mykey1,mykey2,configuration,newconf2,global,configuration,get,configuration,configparams,assert,equals,newconf2,key,set,size,2,assert,equals,newconf2,get,string,mykey1,null,myvalue1,assert,equals,newconf2,get,string,mykey2,null,myvalue2,finally,conf,file1,delete,conf,file2,delete,tmp,dir,delete
GlobalConfigurationTest -> @Test 	public void testConfigurationXML();1409911022;This test creates several configuration files with values and cross-checks the resulting_{@link GlobalConfiguration} object.;@Test_	public void testConfigurationXML() {__		_		final File tmpDir = getTmpDir()__		final File confFile1 = createRandomFile(tmpDir, ".xml")__		final File confFile2 = createRandomFile(tmpDir, ".xml")___		try {_			try {_				final PrintWriter pw1 = new PrintWriter(confFile1)__				final PrintWriter pw2 = new PrintWriter(confFile2)___				pw1.append("<configuration>")__				pw2.append("<configuration>")___				pw1.append("<property><key>mykey1</key><value>myvalue1</value></property>")__				pw1.append("<property></property>")__				pw1.append("<property><key></key><value></value></property>")__				pw1.append("<property><key>hello</key><value></value></property>")__				pw1.append("<property><key>mykey2</key><value>myvalue2</value></property>")__				pw2.append("<property><key>mykey3</key><value>myvalue3</value></property>")__				pw2.append("<property><key>mykey4</key><value>myvalue4</value></property>")___				pw1.append("</configuration>")__				pw2.append("</configuration>")__				pw1.close()__				pw2.close()__			} catch (FileNotFoundException e) {_				fail(e.getMessage())__			}__			GlobalConfiguration.loadConfiguration(tmpDir.getAbsolutePath())___			final Configuration co = GlobalConfiguration.getConfiguration()___			assertEquals(co.getString("mykey1", "null"), "myvalue1")__			assertEquals(co.getString("mykey2", "null"), "myvalue2")__			assertEquals(co.getString("mykey3", "null"), "myvalue3")__			assertEquals(co.getString("mykey4", "null"), "myvalue4")___			_			_			_			_			__			_			final Configuration newconf = new Configuration()__			newconf.setInteger("mynewinteger", 1000)__			GlobalConfiguration.includeConfiguration(newconf)__			assertEquals(GlobalConfiguration.getInteger("mynewinteger", 0), 1000)___			_			final String[] configparams = { "mykey1", "mykey2" }__			Configuration newconf2 = GlobalConfiguration.getConfiguration(configparams)___			assertEquals(newconf2.keySet().size(), 2)__			assertEquals(newconf2.getString("mykey1", "null"), "myvalue1")__			assertEquals(newconf2.getString("mykey2", "null"), "myvalue2")__		} finally {_			_			confFile1.delete()__			confFile2.delete()__			tmpDir.delete()__		}_	};this,test,creates,several,configuration,files,with,values,and,cross,checks,the,resulting,link,global,configuration,object;test,public,void,test,configuration,xml,final,file,tmp,dir,get,tmp,dir,final,file,conf,file1,create,random,file,tmp,dir,xml,final,file,conf,file2,create,random,file,tmp,dir,xml,try,try,final,print,writer,pw1,new,print,writer,conf,file1,final,print,writer,pw2,new,print,writer,conf,file2,pw1,append,configuration,pw2,append,configuration,pw1,append,property,key,mykey1,key,value,myvalue1,value,property,pw1,append,property,property,pw1,append,property,key,key,value,value,property,pw1,append,property,key,hello,key,value,value,property,pw1,append,property,key,mykey2,key,value,myvalue2,value,property,pw2,append,property,key,mykey3,key,value,myvalue3,value,property,pw2,append,property,key,mykey4,key,value,myvalue4,value,property,pw1,append,configuration,pw2,append,configuration,pw1,close,pw2,close,catch,file,not,found,exception,e,fail,e,get,message,global,configuration,load,configuration,tmp,dir,get,absolute,path,final,configuration,co,global,configuration,get,configuration,assert,equals,co,get,string,mykey1,null,myvalue1,assert,equals,co,get,string,mykey2,null,myvalue2,assert,equals,co,get,string,mykey3,null,myvalue3,assert,equals,co,get,string,mykey4,null,myvalue4,final,configuration,newconf,new,configuration,newconf,set,integer,mynewinteger,1000,global,configuration,include,configuration,newconf,assert,equals,global,configuration,get,integer,mynewinteger,0,1000,final,string,configparams,mykey1,mykey2,configuration,newconf2,global,configuration,get,configuration,configparams,assert,equals,newconf2,key,set,size,2,assert,equals,newconf2,get,string,mykey1,null,myvalue1,assert,equals,newconf2,get,string,mykey2,null,myvalue2,finally,conf,file1,delete,conf,file2,delete,tmp,dir,delete
GlobalConfigurationTest -> @Test 	public void testConfigurationXML();1411473593;This test creates several configuration files with values and cross-checks the resulting_{@link GlobalConfiguration} object.;@Test_	public void testConfigurationXML() {__		_		final File tmpDir = getTmpDir()__		final File confFile1 = createRandomFile(tmpDir, ".xml")__		final File confFile2 = createRandomFile(tmpDir, ".xml")___		try {_			try {_				final PrintWriter pw1 = new PrintWriter(confFile1)__				final PrintWriter pw2 = new PrintWriter(confFile2)___				pw1.append("<configuration>")__				pw2.append("<configuration>")___				pw1.append("<property><key>mykey1</key><value>myvalue1</value></property>")__				pw1.append("<property></property>")__				pw1.append("<property><key></key><value></value></property>")__				pw1.append("<property><key>hello</key><value></value></property>")__				pw1.append("<property><key>mykey2</key><value>myvalue2</value></property>")__				pw2.append("<property><key>mykey3</key><value>myvalue3</value></property>")__				pw2.append("<property><key>mykey4</key><value>myvalue4</value></property>")___				pw1.append("</configuration>")__				pw2.append("</configuration>")__				pw1.close()__				pw2.close()__			} catch (FileNotFoundException e) {_				fail(e.getMessage())__			}__			GlobalConfiguration.loadConfiguration(tmpDir.getAbsolutePath())___			final Configuration co = GlobalConfiguration.getConfiguration()___			assertEquals(co.getString("mykey1", "null"), "myvalue1")__			assertEquals(co.getString("mykey2", "null"), "myvalue2")__			assertEquals(co.getString("mykey3", "null"), "myvalue3")__			assertEquals(co.getString("mykey4", "null"), "myvalue4")___			_			_			_			_			__			_			final Configuration newconf = new Configuration()__			newconf.setInteger("mynewinteger", 1000)__			GlobalConfiguration.includeConfiguration(newconf)__			assertEquals(GlobalConfiguration.getInteger("mynewinteger", 0), 1000)___			_			final String[] configparams = { "mykey1", "mykey2" }__			Configuration newconf2 = GlobalConfiguration.getConfiguration(configparams)___			assertEquals(newconf2.keySet().size(), 2)__			assertEquals(newconf2.getString("mykey1", "null"), "myvalue1")__			assertEquals(newconf2.getString("mykey2", "null"), "myvalue2")__		} finally {_			_			confFile1.delete()__			confFile2.delete()__			tmpDir.delete()__		}_	};this,test,creates,several,configuration,files,with,values,and,cross,checks,the,resulting,link,global,configuration,object;test,public,void,test,configuration,xml,final,file,tmp,dir,get,tmp,dir,final,file,conf,file1,create,random,file,tmp,dir,xml,final,file,conf,file2,create,random,file,tmp,dir,xml,try,try,final,print,writer,pw1,new,print,writer,conf,file1,final,print,writer,pw2,new,print,writer,conf,file2,pw1,append,configuration,pw2,append,configuration,pw1,append,property,key,mykey1,key,value,myvalue1,value,property,pw1,append,property,property,pw1,append,property,key,key,value,value,property,pw1,append,property,key,hello,key,value,value,property,pw1,append,property,key,mykey2,key,value,myvalue2,value,property,pw2,append,property,key,mykey3,key,value,myvalue3,value,property,pw2,append,property,key,mykey4,key,value,myvalue4,value,property,pw1,append,configuration,pw2,append,configuration,pw1,close,pw2,close,catch,file,not,found,exception,e,fail,e,get,message,global,configuration,load,configuration,tmp,dir,get,absolute,path,final,configuration,co,global,configuration,get,configuration,assert,equals,co,get,string,mykey1,null,myvalue1,assert,equals,co,get,string,mykey2,null,myvalue2,assert,equals,co,get,string,mykey3,null,myvalue3,assert,equals,co,get,string,mykey4,null,myvalue4,final,configuration,newconf,new,configuration,newconf,set,integer,mynewinteger,1000,global,configuration,include,configuration,newconf,assert,equals,global,configuration,get,integer,mynewinteger,0,1000,final,string,configparams,mykey1,mykey2,configuration,newconf2,global,configuration,get,configuration,configparams,assert,equals,newconf2,key,set,size,2,assert,equals,newconf2,get,string,mykey1,null,myvalue1,assert,equals,newconf2,get,string,mykey2,null,myvalue2,finally,conf,file1,delete,conf,file2,delete,tmp,dir,delete
GlobalConfigurationTest -> @Test 	public void testConfigurationXML();1412338914;This test creates several configuration files with values and cross-checks the resulting_{@link GlobalConfiguration} object.;@Test_	public void testConfigurationXML() {__		_		final File tmpDir = getTmpDir()__		final File confFile1 = createRandomFile(tmpDir, ".xml")__		final File confFile2 = createRandomFile(tmpDir, ".xml")___		try {_			try {_				final PrintWriter pw1 = new PrintWriter(confFile1)__				final PrintWriter pw2 = new PrintWriter(confFile2)___				pw1.append("<configuration>")__				pw2.append("<configuration>")___				pw1.append("<property><key>mykey1</key><value>myvalue1</value></property>")__				pw1.append("<property></property>")__				pw1.append("<property><key></key><value></value></property>")__				pw1.append("<property><key>hello</key><value></value></property>")__				pw1.append("<property><key>mykey2</key><value>myvalue2</value></property>")__				pw2.append("<property><key>mykey3</key><value>myvalue3</value></property>")__				pw2.append("<property><key>mykey4</key><value>myvalue4</value></property>")___				pw1.append("</configuration>")__				pw2.append("</configuration>")__				pw1.close()__				pw2.close()__			} catch (FileNotFoundException e) {_				fail(e.getMessage())__			}__			GlobalConfiguration.loadConfiguration(tmpDir.getAbsolutePath())___			final Configuration co = GlobalConfiguration.getConfiguration()___			assertEquals(co.getString("mykey1", "null"), "myvalue1")__			assertEquals(co.getString("mykey2", "null"), "myvalue2")__			assertEquals(co.getString("mykey3", "null"), "myvalue3")__			assertEquals(co.getString("mykey4", "null"), "myvalue4")___			_			_			_			_			__			_			final Configuration newconf = new Configuration()__			newconf.setInteger("mynewinteger", 1000)__			GlobalConfiguration.includeConfiguration(newconf)__			assertEquals(GlobalConfiguration.getInteger("mynewinteger", 0), 1000)__		} finally {_			_			confFile1.delete()__			confFile2.delete()__			tmpDir.delete()__		}_	};this,test,creates,several,configuration,files,with,values,and,cross,checks,the,resulting,link,global,configuration,object;test,public,void,test,configuration,xml,final,file,tmp,dir,get,tmp,dir,final,file,conf,file1,create,random,file,tmp,dir,xml,final,file,conf,file2,create,random,file,tmp,dir,xml,try,try,final,print,writer,pw1,new,print,writer,conf,file1,final,print,writer,pw2,new,print,writer,conf,file2,pw1,append,configuration,pw2,append,configuration,pw1,append,property,key,mykey1,key,value,myvalue1,value,property,pw1,append,property,property,pw1,append,property,key,key,value,value,property,pw1,append,property,key,hello,key,value,value,property,pw1,append,property,key,mykey2,key,value,myvalue2,value,property,pw2,append,property,key,mykey3,key,value,myvalue3,value,property,pw2,append,property,key,mykey4,key,value,myvalue4,value,property,pw1,append,configuration,pw2,append,configuration,pw1,close,pw2,close,catch,file,not,found,exception,e,fail,e,get,message,global,configuration,load,configuration,tmp,dir,get,absolute,path,final,configuration,co,global,configuration,get,configuration,assert,equals,co,get,string,mykey1,null,myvalue1,assert,equals,co,get,string,mykey2,null,myvalue2,assert,equals,co,get,string,mykey3,null,myvalue3,assert,equals,co,get,string,mykey4,null,myvalue4,final,configuration,newconf,new,configuration,newconf,set,integer,mynewinteger,1000,global,configuration,include,configuration,newconf,assert,equals,global,configuration,get,integer,mynewinteger,0,1000,finally,conf,file1,delete,conf,file2,delete,tmp,dir,delete
GlobalConfigurationTest -> @Test 	public void testConfigurationXML();1439897702;This test creates several configuration files with values and cross-checks the resulting_{@link GlobalConfiguration} object.;@Test_	public void testConfigurationXML() {__		_		final File tmpDir = getTmpDir()__		final File confFile1 = createRandomFile(tmpDir, ".xml")__		final File confFile2 = createRandomFile(tmpDir, ".xml")___		try {_			try {_				final PrintWriter pw1 = new PrintWriter(confFile1)__				final PrintWriter pw2 = new PrintWriter(confFile2)___				pw1.append("<configuration>")__				pw2.append("<configuration>")___				pw1.append("<property><key>mykey1</key><value>myvalue1</value></property>")__				pw1.append("<property></property>")__				pw1.append("<property><key></key><value></value></property>")__				pw1.append("<property><key>hello</key><value></value></property>")__				pw1.append("<property><key>mykey2</key><value>myvalue2</value></property>")__				pw2.append("<property><key>mykey3</key><value>myvalue3</value></property>")__				pw2.append("<property><key>mykey4</key><value>myvalue4</value></property>")___				pw1.append("</configuration>")__				pw2.append("</configuration>")__				pw1.close()__				pw2.close()__			} catch (FileNotFoundException e) {_				fail(e.getMessage())__			}__			GlobalConfiguration.loadConfiguration(tmpDir.getAbsolutePath())___			final Configuration co = GlobalConfiguration.getConfiguration()___			assertEquals(co.getString("mykey1", "null"), "myvalue1")__			assertEquals(co.getString("mykey2", "null"), "myvalue2")__			assertEquals(co.getString("mykey3", "null"), "myvalue3")__			assertEquals(co.getString("mykey4", "null"), "myvalue4")___			_			_			_			_			__			_			final Configuration newconf = new Configuration()__			newconf.setInteger("mynewinteger", 1000)__			GlobalConfiguration.includeConfiguration(newconf)__			assertEquals(GlobalConfiguration.getInteger("mynewinteger", 0), 1000)__		} finally {_			_			confFile1.delete()__			confFile2.delete()__			tmpDir.delete()__		}_	};this,test,creates,several,configuration,files,with,values,and,cross,checks,the,resulting,link,global,configuration,object;test,public,void,test,configuration,xml,final,file,tmp,dir,get,tmp,dir,final,file,conf,file1,create,random,file,tmp,dir,xml,final,file,conf,file2,create,random,file,tmp,dir,xml,try,try,final,print,writer,pw1,new,print,writer,conf,file1,final,print,writer,pw2,new,print,writer,conf,file2,pw1,append,configuration,pw2,append,configuration,pw1,append,property,key,mykey1,key,value,myvalue1,value,property,pw1,append,property,property,pw1,append,property,key,key,value,value,property,pw1,append,property,key,hello,key,value,value,property,pw1,append,property,key,mykey2,key,value,myvalue2,value,property,pw2,append,property,key,mykey3,key,value,myvalue3,value,property,pw2,append,property,key,mykey4,key,value,myvalue4,value,property,pw1,append,configuration,pw2,append,configuration,pw1,close,pw2,close,catch,file,not,found,exception,e,fail,e,get,message,global,configuration,load,configuration,tmp,dir,get,absolute,path,final,configuration,co,global,configuration,get,configuration,assert,equals,co,get,string,mykey1,null,myvalue1,assert,equals,co,get,string,mykey2,null,myvalue2,assert,equals,co,get,string,mykey3,null,myvalue3,assert,equals,co,get,string,mykey4,null,myvalue4,final,configuration,newconf,new,configuration,newconf,set,integer,mynewinteger,1000,global,configuration,include,configuration,newconf,assert,equals,global,configuration,get,integer,mynewinteger,0,1000,finally,conf,file1,delete,conf,file2,delete,tmp,dir,delete
GlobalConfigurationTest -> @Test 	public void testConfigurationXML();1455632624;This test creates several configuration files with values and cross-checks the resulting_{@link GlobalConfiguration} object.;@Test_	public void testConfigurationXML() {__		_		final File tmpDir = getTmpDir()__		final File confFile1 = createRandomFile(tmpDir, ".xml")__		final File confFile2 = createRandomFile(tmpDir, ".xml")___		try {_			try {_				final PrintWriter pw1 = new PrintWriter(confFile1)__				final PrintWriter pw2 = new PrintWriter(confFile2)___				pw1.append("<configuration>")__				pw2.append("<configuration>")___				pw1.append("<property><key>mykey1</key><value>myvalue1</value></property>")__				pw1.append("<property></property>")__				pw1.append("<property><key></key><value></value></property>")__				pw1.append("<property><key>hello</key><value></value></property>")__				pw1.append("<property><key>mykey2</key><value>myvalue2</value></property>")__				pw2.append("<property><key>mykey3</key><value>myvalue3</value></property>")__				pw2.append("<property><key>mykey4</key><value>myvalue4</value></property>")___				pw1.append("</configuration>")__				pw2.append("</configuration>")__				pw1.close()__				pw2.close()__			} catch (FileNotFoundException e) {_				fail(e.getMessage())__			}__			GlobalConfiguration.loadConfiguration(tmpDir.getAbsolutePath())___			final Configuration co = GlobalConfiguration.getConfiguration()___			assertEquals(co.getString("mykey1", "null"), "myvalue1")__			assertEquals(co.getString("mykey2", "null"), "myvalue2")__			assertEquals(co.getString("mykey3", "null"), "myvalue3")__			assertEquals(co.getString("mykey4", "null"), "myvalue4")___			_			_			_			_			__			_			final Configuration newconf = new Configuration()__			newconf.setInteger("mynewinteger", 1000)__			GlobalConfiguration.includeConfiguration(newconf)__			assertEquals(GlobalConfiguration.getInteger("mynewinteger", 0), 1000)__		} finally {_			_			confFile1.delete()__			confFile2.delete()__			tmpDir.delete()__		}_	};this,test,creates,several,configuration,files,with,values,and,cross,checks,the,resulting,link,global,configuration,object;test,public,void,test,configuration,xml,final,file,tmp,dir,get,tmp,dir,final,file,conf,file1,create,random,file,tmp,dir,xml,final,file,conf,file2,create,random,file,tmp,dir,xml,try,try,final,print,writer,pw1,new,print,writer,conf,file1,final,print,writer,pw2,new,print,writer,conf,file2,pw1,append,configuration,pw2,append,configuration,pw1,append,property,key,mykey1,key,value,myvalue1,value,property,pw1,append,property,property,pw1,append,property,key,key,value,value,property,pw1,append,property,key,hello,key,value,value,property,pw1,append,property,key,mykey2,key,value,myvalue2,value,property,pw2,append,property,key,mykey3,key,value,myvalue3,value,property,pw2,append,property,key,mykey4,key,value,myvalue4,value,property,pw1,append,configuration,pw2,append,configuration,pw1,close,pw2,close,catch,file,not,found,exception,e,fail,e,get,message,global,configuration,load,configuration,tmp,dir,get,absolute,path,final,configuration,co,global,configuration,get,configuration,assert,equals,co,get,string,mykey1,null,myvalue1,assert,equals,co,get,string,mykey2,null,myvalue2,assert,equals,co,get,string,mykey3,null,myvalue3,assert,equals,co,get,string,mykey4,null,myvalue4,final,configuration,newconf,new,configuration,newconf,set,integer,mynewinteger,1000,global,configuration,include,configuration,newconf,assert,equals,global,configuration,get,integer,mynewinteger,0,1000,finally,conf,file1,delete,conf,file2,delete,tmp,dir,delete
GlobalConfigurationTest -> @Test 	public void testConfigurationXML();1467726586;This test creates several configuration files with values and cross-checks the resulting_{@link GlobalConfiguration} object.;@Test_	public void testConfigurationXML() {__		_		final File tmpDir = getTmpDir()__		final File confFile1 = createRandomFile(tmpDir, ".xml")__		final File confFile2 = createRandomFile(tmpDir, ".xml")___		try {_			try {_				final PrintWriter pw1 = new PrintWriter(confFile1)__				final PrintWriter pw2 = new PrintWriter(confFile2)___				pw1.append("<configuration>")__				pw2.append("<configuration>")___				pw1.append("<property><key>mykey1</key><value>myvalue1</value></property>")__				pw1.append("<property></property>")__				pw1.append("<property><key></key><value></value></property>")__				pw1.append("<property><key>hello</key><value></value></property>")__				pw1.append("<property><key>mykey2</key><value>myvalue2</value></property>")__				pw2.append("<property><key>mykey3</key><value>myvalue3</value></property>")__				pw2.append("<property><key>mykey4</key><value>myvalue4</value></property>")___				pw1.append("</configuration>")__				pw2.append("</configuration>")__				pw1.close()__				pw2.close()__			} catch (FileNotFoundException e) {_				fail(e.getMessage())__			}__			GlobalConfiguration.loadConfiguration(tmpDir.getAbsolutePath())___			final Configuration co = GlobalConfiguration.getConfiguration()___			assertEquals(co.getString("mykey1", "null"), "myvalue1")__			assertEquals(co.getString("mykey2", "null"), "myvalue2")__			assertEquals(co.getString("mykey3", "null"), "myvalue3")__			assertEquals(co.getString("mykey4", "null"), "myvalue4")___			_			_			_			_			__			_			final Configuration newconf = new Configuration()__			newconf.setInteger("mynewinteger", 1000)__			GlobalConfiguration.includeConfiguration(newconf)__			assertEquals(GlobalConfiguration.getInteger("mynewinteger", 0), 1000)__		} finally {_			_			confFile1.delete()__			confFile2.delete()__			tmpDir.delete()__		}_	};this,test,creates,several,configuration,files,with,values,and,cross,checks,the,resulting,link,global,configuration,object;test,public,void,test,configuration,xml,final,file,tmp,dir,get,tmp,dir,final,file,conf,file1,create,random,file,tmp,dir,xml,final,file,conf,file2,create,random,file,tmp,dir,xml,try,try,final,print,writer,pw1,new,print,writer,conf,file1,final,print,writer,pw2,new,print,writer,conf,file2,pw1,append,configuration,pw2,append,configuration,pw1,append,property,key,mykey1,key,value,myvalue1,value,property,pw1,append,property,property,pw1,append,property,key,key,value,value,property,pw1,append,property,key,hello,key,value,value,property,pw1,append,property,key,mykey2,key,value,myvalue2,value,property,pw2,append,property,key,mykey3,key,value,myvalue3,value,property,pw2,append,property,key,mykey4,key,value,myvalue4,value,property,pw1,append,configuration,pw2,append,configuration,pw1,close,pw2,close,catch,file,not,found,exception,e,fail,e,get,message,global,configuration,load,configuration,tmp,dir,get,absolute,path,final,configuration,co,global,configuration,get,configuration,assert,equals,co,get,string,mykey1,null,myvalue1,assert,equals,co,get,string,mykey2,null,myvalue2,assert,equals,co,get,string,mykey3,null,myvalue3,assert,equals,co,get,string,mykey4,null,myvalue4,final,configuration,newconf,new,configuration,newconf,set,integer,mynewinteger,1000,global,configuration,include,configuration,newconf,assert,equals,global,configuration,get,integer,mynewinteger,0,1000,finally,conf,file1,delete,conf,file2,delete,tmp,dir,delete
