# id;timestamp;commentText;codeText;commentWords;codeWords
ConfigurationTest -> @Test 	public void testConfigurationSerialization();1405024514;This test checks the serialization/deserialization of configuration objects.;@Test_	public void testConfigurationSerialization() {__		_		final Configuration orig = new Configuration()__		orig.setString("mykey", "myvalue")__		orig.setBoolean("shouldbetrue", true)__		orig.setInteger("mynumber", 100)__		orig.setClass("myclass", this.getClass())___		try {_			final Configuration copy = (Configuration) CommonTestUtils.createCopy(orig)___			assertEquals(copy.getString("mykey", "null"), "myvalue")__			assertEquals(copy.getBoolean("shouldbetrue", false), true)__			assertEquals(copy.getInteger("mynumber", 0), 100)__			assertEquals(copy.getClass("myclass", null).toString(), this.getClass().toString())__			assertTrue(orig.equals(copy))__			assertTrue(orig.keySet().equals(copy.keySet()))___		} catch (IOException e) {_			fail(e.getMessage())__		}_	};this,test,checks,the,serialization,deserialization,of,configuration,objects;test,public,void,test,configuration,serialization,final,configuration,orig,new,configuration,orig,set,string,mykey,myvalue,orig,set,boolean,shouldbetrue,true,orig,set,integer,mynumber,100,orig,set,class,myclass,this,get,class,try,final,configuration,copy,configuration,common,test,utils,create,copy,orig,assert,equals,copy,get,string,mykey,null,myvalue,assert,equals,copy,get,boolean,shouldbetrue,false,true,assert,equals,copy,get,integer,mynumber,0,100,assert,equals,copy,get,class,myclass,null,to,string,this,get,class,to,string,assert,true,orig,equals,copy,assert,true,orig,key,set,equals,copy,key,set,catch,ioexception,e,fail,e,get,message
ConfigurationTest -> @Test 	public void testConfigurationSerialization();1405090423;This test checks the serialization/deserialization of configuration objects.;@Test_	public void testConfigurationSerialization() {__		_		final Configuration orig = new Configuration()__		orig.setString("mykey", "myvalue")__		orig.setBoolean("shouldbetrue", true)__		orig.setInteger("mynumber", 100)__		orig.setClass("myclass", this.getClass())___		try {_			final Configuration copy = (Configuration) CommonTestUtils.createCopy(orig)___			assertEquals(copy.getString("mykey", "null"), "myvalue")__			assertEquals(copy.getBoolean("shouldbetrue", false), true)__			assertEquals(copy.getInteger("mynumber", 0), 100)__			assertEquals(copy.getClass("myclass", null).toString(), this.getClass().toString())__			assertTrue(orig.equals(copy))__			assertTrue(orig.keySet().equals(copy.keySet()))___		} catch (IOException e) {_			fail(e.getMessage())__		}_	};this,test,checks,the,serialization,deserialization,of,configuration,objects;test,public,void,test,configuration,serialization,final,configuration,orig,new,configuration,orig,set,string,mykey,myvalue,orig,set,boolean,shouldbetrue,true,orig,set,integer,mynumber,100,orig,set,class,myclass,this,get,class,try,final,configuration,copy,configuration,common,test,utils,create,copy,orig,assert,equals,copy,get,string,mykey,null,myvalue,assert,equals,copy,get,boolean,shouldbetrue,false,true,assert,equals,copy,get,integer,mynumber,0,100,assert,equals,copy,get,class,myclass,null,to,string,this,get,class,to,string,assert,true,orig,equals,copy,assert,true,orig,key,set,equals,copy,key,set,catch,ioexception,e,fail,e,get,message
ConfigurationTest -> @Test 	public void testConfigurationSerialization();1411473593;This test checks the serialization/deserialization of configuration objects.;@Test_	public void testConfigurationSerialization() {__		_		final Configuration orig = new Configuration()__		orig.setString("mykey", "myvalue")__		orig.setBoolean("shouldbetrue", true)__		orig.setInteger("mynumber", 100)__		orig.setClass("myclass", this.getClass())___		try {_			final Configuration copy = (Configuration) CommonTestUtils.createCopy(orig)___			assertEquals(copy.getString("mykey", "null"), "myvalue")__			assertEquals(copy.getBoolean("shouldbetrue", false), true)__			assertEquals(copy.getInteger("mynumber", 0), 100)__			assertEquals(copy.getClass("myclass", null).toString(), this.getClass().toString())__			assertTrue(orig.equals(copy))__			assertTrue(orig.keySet().equals(copy.keySet()))___		} catch (IOException e) {_			fail(e.getMessage())__		}_	};this,test,checks,the,serialization,deserialization,of,configuration,objects;test,public,void,test,configuration,serialization,final,configuration,orig,new,configuration,orig,set,string,mykey,myvalue,orig,set,boolean,shouldbetrue,true,orig,set,integer,mynumber,100,orig,set,class,myclass,this,get,class,try,final,configuration,copy,configuration,common,test,utils,create,copy,orig,assert,equals,copy,get,string,mykey,null,myvalue,assert,equals,copy,get,boolean,shouldbetrue,false,true,assert,equals,copy,get,integer,mynumber,0,100,assert,equals,copy,get,class,myclass,null,to,string,this,get,class,to,string,assert,true,orig,equals,copy,assert,true,orig,key,set,equals,copy,key,set,catch,ioexception,e,fail,e,get,message
ConfigurationTest -> @Test 	public void testConfigurationSerializationAndGetters();1412338914;This test checks the serialization/deserialization of configuration objects.;@Test_	public void testConfigurationSerializationAndGetters() {_		try {_			final Configuration orig = new Configuration()__			orig.setString("mykey", "myvalue")__			orig.setInteger("mynumber", 100)__			orig.setLong("longvalue", 478236947162389746L)__			orig.setFloat("PI", 3.1415926f)__			orig.setDouble("E", Math.E)__			orig.setBoolean("shouldbetrue", true)__			orig.setBytes("bytes sequence", new byte[] { 1, 2, 3, 4, 5 } )__			orig.setClass("myclass", this.getClass())__	_			final Configuration copy = (Configuration) CommonTestUtils.createCopy(orig)__			assertEquals("myvalue", copy.getString("mykey", "null"))__			assertEquals(100, copy.getInteger("mynumber", 0))__			assertEquals(478236947162389746L, copy.getLong("longvalue", 0L))__			assertEquals(3.1415926f, copy.getFloat("PI", 3.1415926f), 0.0)__			assertEquals(Math.E, copy.getDouble("E", 0.0), 0.0)__			assertEquals(true, copy.getBoolean("shouldbetrue", false))__			assertArrayEquals(new byte[] { 1, 2, 3, 4, 5 }, copy.getBytes("bytes sequence", null))__			assertEquals(getClass(), copy.getClass("myclass", null, getClass().getClassLoader()))__			_			assertEquals(orig, copy)__			assertEquals(orig.keySet(), copy.keySet())__			assertEquals(orig.hashCode(), copy.hashCode())___		} catch (Exception e) {_			e.printStackTrace()__			fail(e.getMessage())__		}_	};this,test,checks,the,serialization,deserialization,of,configuration,objects;test,public,void,test,configuration,serialization,and,getters,try,final,configuration,orig,new,configuration,orig,set,string,mykey,myvalue,orig,set,integer,mynumber,100,orig,set,long,longvalue,478236947162389746l,orig,set,float,pi,3,1415926f,orig,set,double,e,math,e,orig,set,boolean,shouldbetrue,true,orig,set,bytes,bytes,sequence,new,byte,1,2,3,4,5,orig,set,class,myclass,this,get,class,final,configuration,copy,configuration,common,test,utils,create,copy,orig,assert,equals,myvalue,copy,get,string,mykey,null,assert,equals,100,copy,get,integer,mynumber,0,assert,equals,478236947162389746l,copy,get,long,longvalue,0l,assert,equals,3,1415926f,copy,get,float,pi,3,1415926f,0,0,assert,equals,math,e,copy,get,double,e,0,0,0,0,assert,equals,true,copy,get,boolean,shouldbetrue,false,assert,array,equals,new,byte,1,2,3,4,5,copy,get,bytes,bytes,sequence,null,assert,equals,get,class,copy,get,class,myclass,null,get,class,get,class,loader,assert,equals,orig,copy,assert,equals,orig,key,set,copy,key,set,assert,equals,orig,hash,code,copy,hash,code,catch,exception,e,e,print,stack,trace,fail,e,get,message
ConfigurationTest -> @Test 	public void testConfigurationSerializationAndGetters();1432280541;This test checks the serialization/deserialization of configuration objects.;@Test_	public void testConfigurationSerializationAndGetters() {_		try {_			final Configuration orig = new Configuration()__			orig.setString("mykey", "myvalue")__			orig.setInteger("mynumber", 100)__			orig.setLong("longvalue", 478236947162389746L)__			orig.setFloat("PI", 3.1415926f)__			orig.setDouble("E", Math.E)__			orig.setBoolean("shouldbetrue", true)__			orig.setBytes("bytes sequence", new byte[] { 1, 2, 3, 4, 5 } )__			orig.setClass("myclass", this.getClass())__	_			final Configuration copy = (Configuration) CommonTestUtils.createCopy(orig)__			assertEquals("myvalue", copy.getString("mykey", "null"))__			assertEquals(100, copy.getInteger("mynumber", 0))__			assertEquals(478236947162389746L, copy.getLong("longvalue", 0L))__			assertEquals(3.1415926f, copy.getFloat("PI", 3.1415926f), 0.0)__			assertEquals(Math.E, copy.getDouble("E", 0.0), 0.0)__			assertEquals(true, copy.getBoolean("shouldbetrue", false))__			assertArrayEquals(new byte[] { 1, 2, 3, 4, 5 }, copy.getBytes("bytes sequence", null))__			assertEquals(getClass(), copy.getClass("myclass", null, getClass().getClassLoader()))__			_			assertEquals(orig, copy)__			assertEquals(orig.keySet(), copy.keySet())__			assertEquals(orig.hashCode(), copy.hashCode())___		} catch (Exception e) {_			e.printStackTrace()__			fail(e.getMessage())__		}_	};this,test,checks,the,serialization,deserialization,of,configuration,objects;test,public,void,test,configuration,serialization,and,getters,try,final,configuration,orig,new,configuration,orig,set,string,mykey,myvalue,orig,set,integer,mynumber,100,orig,set,long,longvalue,478236947162389746l,orig,set,float,pi,3,1415926f,orig,set,double,e,math,e,orig,set,boolean,shouldbetrue,true,orig,set,bytes,bytes,sequence,new,byte,1,2,3,4,5,orig,set,class,myclass,this,get,class,final,configuration,copy,configuration,common,test,utils,create,copy,orig,assert,equals,myvalue,copy,get,string,mykey,null,assert,equals,100,copy,get,integer,mynumber,0,assert,equals,478236947162389746l,copy,get,long,longvalue,0l,assert,equals,3,1415926f,copy,get,float,pi,3,1415926f,0,0,assert,equals,math,e,copy,get,double,e,0,0,0,0,assert,equals,true,copy,get,boolean,shouldbetrue,false,assert,array,equals,new,byte,1,2,3,4,5,copy,get,bytes,bytes,sequence,null,assert,equals,get,class,copy,get,class,myclass,null,get,class,get,class,loader,assert,equals,orig,copy,assert,equals,orig,key,set,copy,key,set,assert,equals,orig,hash,code,copy,hash,code,catch,exception,e,e,print,stack,trace,fail,e,get,message
ConfigurationTest -> @Test 	public void testConfigurationSerializationAndGetters();1432284171;This test checks the serialization/deserialization of configuration objects.;@Test_	public void testConfigurationSerializationAndGetters() {_		try {_			final Configuration orig = new Configuration()__			orig.setString("mykey", "myvalue")__			orig.setInteger("mynumber", 100)__			orig.setLong("longvalue", 478236947162389746L)__			orig.setFloat("PI", 3.1415926f)__			orig.setDouble("E", Math.E)__			orig.setBoolean("shouldbetrue", true)__			orig.setBytes("bytes sequence", new byte[] { 1, 2, 3, 4, 5 } )__			orig.setClass("myclass", this.getClass())__	_			final Configuration copy = (Configuration) CommonTestUtils.createCopy(orig)__			assertEquals("myvalue", copy.getString("mykey", "null"))__			assertEquals(100, copy.getInteger("mynumber", 0))__			assertEquals(478236947162389746L, copy.getLong("longvalue", 0L))__			assertEquals(3.1415926f, copy.getFloat("PI", 3.1415926f), 0.0)__			assertEquals(Math.E, copy.getDouble("E", 0.0), 0.0)__			assertEquals(true, copy.getBoolean("shouldbetrue", false))__			assertArrayEquals(new byte[] { 1, 2, 3, 4, 5 }, copy.getBytes("bytes sequence", null))__			assertEquals(getClass(), copy.getClass("myclass", null, getClass().getClassLoader()))__			_			assertEquals(orig, copy)__			assertEquals(orig.keySet(), copy.keySet())__			assertEquals(orig.hashCode(), copy.hashCode())___		} catch (Exception e) {_			e.printStackTrace()__			fail(e.getMessage())__		}_	};this,test,checks,the,serialization,deserialization,of,configuration,objects;test,public,void,test,configuration,serialization,and,getters,try,final,configuration,orig,new,configuration,orig,set,string,mykey,myvalue,orig,set,integer,mynumber,100,orig,set,long,longvalue,478236947162389746l,orig,set,float,pi,3,1415926f,orig,set,double,e,math,e,orig,set,boolean,shouldbetrue,true,orig,set,bytes,bytes,sequence,new,byte,1,2,3,4,5,orig,set,class,myclass,this,get,class,final,configuration,copy,configuration,common,test,utils,create,copy,orig,assert,equals,myvalue,copy,get,string,mykey,null,assert,equals,100,copy,get,integer,mynumber,0,assert,equals,478236947162389746l,copy,get,long,longvalue,0l,assert,equals,3,1415926f,copy,get,float,pi,3,1415926f,0,0,assert,equals,math,e,copy,get,double,e,0,0,0,0,assert,equals,true,copy,get,boolean,shouldbetrue,false,assert,array,equals,new,byte,1,2,3,4,5,copy,get,bytes,bytes,sequence,null,assert,equals,get,class,copy,get,class,myclass,null,get,class,get,class,loader,assert,equals,orig,copy,assert,equals,orig,key,set,copy,key,set,assert,equals,orig,hash,code,copy,hash,code,catch,exception,e,e,print,stack,trace,fail,e,get,message
ConfigurationTest -> @Test 	public void testConfigurationSerializationAndGetters();1438620487;This test checks the serialization/deserialization of configuration objects.;@Test_	public void testConfigurationSerializationAndGetters() {_		try {_			final Configuration orig = new Configuration()__			orig.setString("mykey", "myvalue")__			orig.setInteger("mynumber", 100)__			orig.setLong("longvalue", 478236947162389746L)__			orig.setFloat("PI", 3.1415926f)__			orig.setDouble("E", Math.E)__			orig.setBoolean("shouldbetrue", true)__			orig.setBytes("bytes sequence", new byte[] { 1, 2, 3, 4, 5 } )__			orig.setClass("myclass", this.getClass())__	_			final Configuration copy = (Configuration) CommonTestUtils.createCopy(orig)__			assertEquals("myvalue", copy.getString("mykey", "null"))__			assertEquals(100, copy.getInteger("mynumber", 0))__			assertEquals(478236947162389746L, copy.getLong("longvalue", 0L))__			assertEquals(3.1415926f, copy.getFloat("PI", 3.1415926f), 0.0)__			assertEquals(Math.E, copy.getDouble("E", 0.0), 0.0)__			assertEquals(true, copy.getBoolean("shouldbetrue", false))__			assertArrayEquals(new byte[] { 1, 2, 3, 4, 5 }, copy.getBytes("bytes sequence", null))__			assertEquals(getClass(), copy.getClass("myclass", null, getClass().getClassLoader()))__			_			assertEquals(orig, copy)__			assertEquals(orig.keySet(), copy.keySet())__			assertEquals(orig.hashCode(), copy.hashCode())___		} catch (Exception e) {_			e.printStackTrace()__			fail(e.getMessage())__		}_	};this,test,checks,the,serialization,deserialization,of,configuration,objects;test,public,void,test,configuration,serialization,and,getters,try,final,configuration,orig,new,configuration,orig,set,string,mykey,myvalue,orig,set,integer,mynumber,100,orig,set,long,longvalue,478236947162389746l,orig,set,float,pi,3,1415926f,orig,set,double,e,math,e,orig,set,boolean,shouldbetrue,true,orig,set,bytes,bytes,sequence,new,byte,1,2,3,4,5,orig,set,class,myclass,this,get,class,final,configuration,copy,configuration,common,test,utils,create,copy,orig,assert,equals,myvalue,copy,get,string,mykey,null,assert,equals,100,copy,get,integer,mynumber,0,assert,equals,478236947162389746l,copy,get,long,longvalue,0l,assert,equals,3,1415926f,copy,get,float,pi,3,1415926f,0,0,assert,equals,math,e,copy,get,double,e,0,0,0,0,assert,equals,true,copy,get,boolean,shouldbetrue,false,assert,array,equals,new,byte,1,2,3,4,5,copy,get,bytes,bytes,sequence,null,assert,equals,get,class,copy,get,class,myclass,null,get,class,get,class,loader,assert,equals,orig,copy,assert,equals,orig,key,set,copy,key,set,assert,equals,orig,hash,code,copy,hash,code,catch,exception,e,e,print,stack,trace,fail,e,get,message
ConfigurationTest -> @Test 	public void testConfigurationSerializationAndGetters();1439897702;This test checks the serialization/deserialization of configuration objects.;@Test_	public void testConfigurationSerializationAndGetters() {_		try {_			final Configuration orig = new Configuration()__			orig.setString("mykey", "myvalue")__			orig.setInteger("mynumber", 100)__			orig.setLong("longvalue", 478236947162389746L)__			orig.setFloat("PI", 3.1415926f)__			orig.setDouble("E", Math.E)__			orig.setBoolean("shouldbetrue", true)__			orig.setBytes("bytes sequence", new byte[] { 1, 2, 3, 4, 5 } )__			orig.setClass("myclass", this.getClass())__	_			final Configuration copy = (Configuration) CommonTestUtils.createCopy(orig)__			assertEquals("myvalue", copy.getString("mykey", "null"))__			assertEquals(100, copy.getInteger("mynumber", 0))__			assertEquals(478236947162389746L, copy.getLong("longvalue", 0L))__			assertEquals(3.1415926f, copy.getFloat("PI", 3.1415926f), 0.0)__			assertEquals(Math.E, copy.getDouble("E", 0.0), 0.0)__			assertEquals(true, copy.getBoolean("shouldbetrue", false))__			assertArrayEquals(new byte[] { 1, 2, 3, 4, 5 }, copy.getBytes("bytes sequence", null))__			assertEquals(getClass(), copy.getClass("myclass", null, getClass().getClassLoader()))__			_			assertEquals(orig, copy)__			assertEquals(orig.keySet(), copy.keySet())__			assertEquals(orig.hashCode(), copy.hashCode())___		} catch (Exception e) {_			e.printStackTrace()__			fail(e.getMessage())__		}_	};this,test,checks,the,serialization,deserialization,of,configuration,objects;test,public,void,test,configuration,serialization,and,getters,try,final,configuration,orig,new,configuration,orig,set,string,mykey,myvalue,orig,set,integer,mynumber,100,orig,set,long,longvalue,478236947162389746l,orig,set,float,pi,3,1415926f,orig,set,double,e,math,e,orig,set,boolean,shouldbetrue,true,orig,set,bytes,bytes,sequence,new,byte,1,2,3,4,5,orig,set,class,myclass,this,get,class,final,configuration,copy,configuration,common,test,utils,create,copy,orig,assert,equals,myvalue,copy,get,string,mykey,null,assert,equals,100,copy,get,integer,mynumber,0,assert,equals,478236947162389746l,copy,get,long,longvalue,0l,assert,equals,3,1415926f,copy,get,float,pi,3,1415926f,0,0,assert,equals,math,e,copy,get,double,e,0,0,0,0,assert,equals,true,copy,get,boolean,shouldbetrue,false,assert,array,equals,new,byte,1,2,3,4,5,copy,get,bytes,bytes,sequence,null,assert,equals,get,class,copy,get,class,myclass,null,get,class,get,class,loader,assert,equals,orig,copy,assert,equals,orig,key,set,copy,key,set,assert,equals,orig,hash,code,copy,hash,code,catch,exception,e,e,print,stack,trace,fail,e,get,message
ConfigurationTest -> @Test 	public void testConfigurationSerializationAndGetters();1441027768;This test checks the serialization/deserialization of configuration objects.;@Test_	public void testConfigurationSerializationAndGetters() {_		try {_			final Configuration orig = new Configuration()__			orig.setString("mykey", "myvalue")__			orig.setInteger("mynumber", 100)__			orig.setLong("longvalue", 478236947162389746L)__			orig.setFloat("PI", 3.1415926f)__			orig.setDouble("E", Math.E)__			orig.setBoolean("shouldbetrue", true)__			orig.setBytes("bytes sequence", new byte[] { 1, 2, 3, 4, 5 } )__			orig.setClass("myclass", this.getClass())__	_			final Configuration copy = CommonTestUtils.createCopyWritable(orig)__			assertEquals("myvalue", copy.getString("mykey", "null"))__			assertEquals(100, copy.getInteger("mynumber", 0))__			assertEquals(478236947162389746L, copy.getLong("longvalue", 0L))__			assertEquals(3.1415926f, copy.getFloat("PI", 3.1415926f), 0.0)__			assertEquals(Math.E, copy.getDouble("E", 0.0), 0.0)__			assertEquals(true, copy.getBoolean("shouldbetrue", false))__			assertArrayEquals(new byte[] { 1, 2, 3, 4, 5 }, copy.getBytes("bytes sequence", null))__			assertEquals(getClass(), copy.getClass("myclass", null, getClass().getClassLoader()))__			_			assertEquals(orig, copy)__			assertEquals(orig.keySet(), copy.keySet())__			assertEquals(orig.hashCode(), copy.hashCode())___		} catch (Exception e) {_			e.printStackTrace()__			fail(e.getMessage())__		}_	};this,test,checks,the,serialization,deserialization,of,configuration,objects;test,public,void,test,configuration,serialization,and,getters,try,final,configuration,orig,new,configuration,orig,set,string,mykey,myvalue,orig,set,integer,mynumber,100,orig,set,long,longvalue,478236947162389746l,orig,set,float,pi,3,1415926f,orig,set,double,e,math,e,orig,set,boolean,shouldbetrue,true,orig,set,bytes,bytes,sequence,new,byte,1,2,3,4,5,orig,set,class,myclass,this,get,class,final,configuration,copy,common,test,utils,create,copy,writable,orig,assert,equals,myvalue,copy,get,string,mykey,null,assert,equals,100,copy,get,integer,mynumber,0,assert,equals,478236947162389746l,copy,get,long,longvalue,0l,assert,equals,3,1415926f,copy,get,float,pi,3,1415926f,0,0,assert,equals,math,e,copy,get,double,e,0,0,0,0,assert,equals,true,copy,get,boolean,shouldbetrue,false,assert,array,equals,new,byte,1,2,3,4,5,copy,get,bytes,bytes,sequence,null,assert,equals,get,class,copy,get,class,myclass,null,get,class,get,class,loader,assert,equals,orig,copy,assert,equals,orig,key,set,copy,key,set,assert,equals,orig,hash,code,copy,hash,code,catch,exception,e,e,print,stack,trace,fail,e,get,message
ConfigurationTest -> @Test 	public void testConfigurationSerializationAndGetters();1467726586;This test checks the serialization/deserialization of configuration objects.;@Test_	public void testConfigurationSerializationAndGetters() {_		try {_			final Configuration orig = new Configuration()__			orig.setString("mykey", "myvalue")__			orig.setInteger("mynumber", 100)__			orig.setLong("longvalue", 478236947162389746L)__			orig.setFloat("PI", 3.1415926f)__			orig.setDouble("E", Math.E)__			orig.setBoolean("shouldbetrue", true)__			orig.setBytes("bytes sequence", new byte[] { 1, 2, 3, 4, 5 } )__			orig.setClass("myclass", this.getClass())__	_			final Configuration copy = InstantiationUtil.createCopyWritable(orig)__			assertEquals("myvalue", copy.getString("mykey", "null"))__			assertEquals(100, copy.getInteger("mynumber", 0))__			assertEquals(478236947162389746L, copy.getLong("longvalue", 0L))__			assertEquals(3.1415926f, copy.getFloat("PI", 3.1415926f), 0.0)__			assertEquals(Math.E, copy.getDouble("E", 0.0), 0.0)__			assertEquals(true, copy.getBoolean("shouldbetrue", false))__			assertArrayEquals(new byte[] { 1, 2, 3, 4, 5 }, copy.getBytes("bytes sequence", null))__			assertEquals(getClass(), copy.getClass("myclass", null, getClass().getClassLoader()))__			_			assertEquals(orig, copy)__			assertEquals(orig.keySet(), copy.keySet())__			assertEquals(orig.hashCode(), copy.hashCode())___		} catch (Exception e) {_			e.printStackTrace()__			fail(e.getMessage())__		}_	};this,test,checks,the,serialization,deserialization,of,configuration,objects;test,public,void,test,configuration,serialization,and,getters,try,final,configuration,orig,new,configuration,orig,set,string,mykey,myvalue,orig,set,integer,mynumber,100,orig,set,long,longvalue,478236947162389746l,orig,set,float,pi,3,1415926f,orig,set,double,e,math,e,orig,set,boolean,shouldbetrue,true,orig,set,bytes,bytes,sequence,new,byte,1,2,3,4,5,orig,set,class,myclass,this,get,class,final,configuration,copy,instantiation,util,create,copy,writable,orig,assert,equals,myvalue,copy,get,string,mykey,null,assert,equals,100,copy,get,integer,mynumber,0,assert,equals,478236947162389746l,copy,get,long,longvalue,0l,assert,equals,3,1415926f,copy,get,float,pi,3,1415926f,0,0,assert,equals,math,e,copy,get,double,e,0,0,0,0,assert,equals,true,copy,get,boolean,shouldbetrue,false,assert,array,equals,new,byte,1,2,3,4,5,copy,get,bytes,bytes,sequence,null,assert,equals,get,class,copy,get,class,myclass,null,get,class,get,class,loader,assert,equals,orig,copy,assert,equals,orig,key,set,copy,key,set,assert,equals,orig,hash,code,copy,hash,code,catch,exception,e,e,print,stack,trace,fail,e,get,message
ConfigurationTest -> @Test 	public void testConfigurationSerializationAndGetters();1476095651;This test checks the serialization/deserialization of configuration objects.;@Test_	public void testConfigurationSerializationAndGetters() {_		try {_			final Configuration orig = new Configuration()__			orig.setString("mykey", "myvalue")__			orig.setInteger("mynumber", 100)__			orig.setLong("longvalue", 478236947162389746L)__			orig.setFloat("PI", 3.1415926f)__			orig.setDouble("E", Math.E)__			orig.setBoolean("shouldbetrue", true)__			orig.setBytes("bytes sequence", new byte[] { 1, 2, 3, 4, 5 } )__			orig.setClass("myclass", this.getClass())__	_			final Configuration copy = InstantiationUtil.createCopyWritable(orig)__			assertEquals("myvalue", copy.getString("mykey", "null"))__			assertEquals(100, copy.getInteger("mynumber", 0))__			assertEquals(478236947162389746L, copy.getLong("longvalue", 0L))__			assertEquals(3.1415926f, copy.getFloat("PI", 3.1415926f), 0.0)__			assertEquals(Math.E, copy.getDouble("E", 0.0), 0.0)__			assertEquals(true, copy.getBoolean("shouldbetrue", false))__			assertArrayEquals(new byte[] { 1, 2, 3, 4, 5 }, copy.getBytes("bytes sequence", null))__			assertEquals(getClass(), copy.getClass("myclass", null, getClass().getClassLoader()))__			_			assertEquals(orig, copy)__			assertEquals(orig.keySet(), copy.keySet())__			assertEquals(orig.hashCode(), copy.hashCode())___		} catch (Exception e) {_			e.printStackTrace()__			fail(e.getMessage())__		}_	};this,test,checks,the,serialization,deserialization,of,configuration,objects;test,public,void,test,configuration,serialization,and,getters,try,final,configuration,orig,new,configuration,orig,set,string,mykey,myvalue,orig,set,integer,mynumber,100,orig,set,long,longvalue,478236947162389746l,orig,set,float,pi,3,1415926f,orig,set,double,e,math,e,orig,set,boolean,shouldbetrue,true,orig,set,bytes,bytes,sequence,new,byte,1,2,3,4,5,orig,set,class,myclass,this,get,class,final,configuration,copy,instantiation,util,create,copy,writable,orig,assert,equals,myvalue,copy,get,string,mykey,null,assert,equals,100,copy,get,integer,mynumber,0,assert,equals,478236947162389746l,copy,get,long,longvalue,0l,assert,equals,3,1415926f,copy,get,float,pi,3,1415926f,0,0,assert,equals,math,e,copy,get,double,e,0,0,0,0,assert,equals,true,copy,get,boolean,shouldbetrue,false,assert,array,equals,new,byte,1,2,3,4,5,copy,get,bytes,bytes,sequence,null,assert,equals,get,class,copy,get,class,myclass,null,get,class,get,class,loader,assert,equals,orig,copy,assert,equals,orig,key,set,copy,key,set,assert,equals,orig,hash,code,copy,hash,code,catch,exception,e,e,print,stack,trace,fail,e,get,message
ConfigurationTest -> @Test 	public void testConfigurationSerializationAndGetters();1499940742;This test checks the serialization/deserialization of configuration objects.;@Test_	public void testConfigurationSerializationAndGetters() {_		try {_			final Configuration orig = new Configuration()__			orig.setString("mykey", "myvalue")__			orig.setInteger("mynumber", 100)__			orig.setLong("longvalue", 478236947162389746L)__			orig.setFloat("PI", 3.1415926f)__			orig.setDouble("E", Math.E)__			orig.setBoolean("shouldbetrue", true)__			orig.setBytes("bytes sequence", new byte[] { 1, 2, 3, 4, 5 } )__			orig.setClass("myclass", this.getClass())__	_			final Configuration copy = InstantiationUtil.createCopyWritable(orig)__			assertEquals("myvalue", copy.getString("mykey", "null"))__			assertEquals(100, copy.getInteger("mynumber", 0))__			assertEquals(478236947162389746L, copy.getLong("longvalue", 0L))__			assertEquals(3.1415926f, copy.getFloat("PI", 3.1415926f), 0.0)__			assertEquals(Math.E, copy.getDouble("E", 0.0), 0.0)__			assertEquals(true, copy.getBoolean("shouldbetrue", false))__			assertArrayEquals(new byte[] { 1, 2, 3, 4, 5 }, copy.getBytes("bytes sequence", null))__			assertEquals(getClass(), copy.getClass("myclass", null, getClass().getClassLoader()))__			_			assertEquals(orig, copy)__			assertEquals(orig.keySet(), copy.keySet())__			assertEquals(orig.hashCode(), copy.hashCode())___		} catch (Exception e) {_			e.printStackTrace()__			fail(e.getMessage())__		}_	};this,test,checks,the,serialization,deserialization,of,configuration,objects;test,public,void,test,configuration,serialization,and,getters,try,final,configuration,orig,new,configuration,orig,set,string,mykey,myvalue,orig,set,integer,mynumber,100,orig,set,long,longvalue,478236947162389746l,orig,set,float,pi,3,1415926f,orig,set,double,e,math,e,orig,set,boolean,shouldbetrue,true,orig,set,bytes,bytes,sequence,new,byte,1,2,3,4,5,orig,set,class,myclass,this,get,class,final,configuration,copy,instantiation,util,create,copy,writable,orig,assert,equals,myvalue,copy,get,string,mykey,null,assert,equals,100,copy,get,integer,mynumber,0,assert,equals,478236947162389746l,copy,get,long,longvalue,0l,assert,equals,3,1415926f,copy,get,float,pi,3,1415926f,0,0,assert,equals,math,e,copy,get,double,e,0,0,0,0,assert,equals,true,copy,get,boolean,shouldbetrue,false,assert,array,equals,new,byte,1,2,3,4,5,copy,get,bytes,bytes,sequence,null,assert,equals,get,class,copy,get,class,myclass,null,get,class,get,class,loader,assert,equals,orig,copy,assert,equals,orig,key,set,copy,key,set,assert,equals,orig,hash,code,copy,hash,code,catch,exception,e,e,print,stack,trace,fail,e,get,message
ConfigurationTest -> @Test 	public void testConfigurationSerializationAndGetters();1516295284;This test checks the serialization/deserialization of configuration objects.;@Test_	public void testConfigurationSerializationAndGetters() {_		try {_			final Configuration orig = new Configuration()__			orig.setString("mykey", "myvalue")__			orig.setInteger("mynumber", 100)__			orig.setLong("longvalue", 478236947162389746L)__			orig.setFloat("PI", 3.1415926f)__			orig.setDouble("E", Math.E)__			orig.setBoolean("shouldbetrue", true)__			orig.setBytes("bytes sequence", new byte[] { 1, 2, 3, 4, 5 })__			orig.setClass("myclass", this.getClass())___			final Configuration copy = InstantiationUtil.createCopyWritable(orig)__			assertEquals("myvalue", copy.getString("mykey", "null"))__			assertEquals(100, copy.getInteger("mynumber", 0))__			assertEquals(478236947162389746L, copy.getLong("longvalue", 0L))__			assertEquals(3.1415926f, copy.getFloat("PI", 3.1415926f), 0.0)__			assertEquals(Math.E, copy.getDouble("E", 0.0), 0.0)__			assertEquals(true, copy.getBoolean("shouldbetrue", false))__			assertArrayEquals(new byte[] { 1, 2, 3, 4, 5 }, copy.getBytes("bytes sequence", null))__			assertEquals(getClass(), copy.getClass("myclass", null, getClass().getClassLoader()))___			assertEquals(orig, copy)__			assertEquals(orig.keySet(), copy.keySet())__			assertEquals(orig.hashCode(), copy.hashCode())___		} catch (Exception e) {_			e.printStackTrace()__			fail(e.getMessage())__		}_	};this,test,checks,the,serialization,deserialization,of,configuration,objects;test,public,void,test,configuration,serialization,and,getters,try,final,configuration,orig,new,configuration,orig,set,string,mykey,myvalue,orig,set,integer,mynumber,100,orig,set,long,longvalue,478236947162389746l,orig,set,float,pi,3,1415926f,orig,set,double,e,math,e,orig,set,boolean,shouldbetrue,true,orig,set,bytes,bytes,sequence,new,byte,1,2,3,4,5,orig,set,class,myclass,this,get,class,final,configuration,copy,instantiation,util,create,copy,writable,orig,assert,equals,myvalue,copy,get,string,mykey,null,assert,equals,100,copy,get,integer,mynumber,0,assert,equals,478236947162389746l,copy,get,long,longvalue,0l,assert,equals,3,1415926f,copy,get,float,pi,3,1415926f,0,0,assert,equals,math,e,copy,get,double,e,0,0,0,0,assert,equals,true,copy,get,boolean,shouldbetrue,false,assert,array,equals,new,byte,1,2,3,4,5,copy,get,bytes,bytes,sequence,null,assert,equals,get,class,copy,get,class,myclass,null,get,class,get,class,loader,assert,equals,orig,copy,assert,equals,orig,key,set,copy,key,set,assert,equals,orig,hash,code,copy,hash,code,catch,exception,e,e,print,stack,trace,fail,e,get,message
ConfigurationTest -> @Test 	public void testConfigurationSerializationAndGetters();1531993383;This test checks the serialization/deserialization of configuration objects.;@Test_	public void testConfigurationSerializationAndGetters() {_		try {_			final Configuration orig = new Configuration()__			orig.setString("mykey", "myvalue")__			orig.setInteger("mynumber", 100)__			orig.setLong("longvalue", 478236947162389746L)__			orig.setFloat("PI", 3.1415926f)__			orig.setDouble("E", Math.E)__			orig.setBoolean("shouldbetrue", true)__			orig.setBytes("bytes sequence", new byte[] { 1, 2, 3, 4, 5 })__			orig.setClass("myclass", this.getClass())___			final Configuration copy = InstantiationUtil.createCopyWritable(orig)__			assertEquals("myvalue", copy.getString("mykey", "null"))__			assertEquals(100, copy.getInteger("mynumber", 0))__			assertEquals(478236947162389746L, copy.getLong("longvalue", 0L))__			assertEquals(3.1415926f, copy.getFloat("PI", 3.1415926f), 0.0)__			assertEquals(Math.E, copy.getDouble("E", 0.0), 0.0)__			assertEquals(true, copy.getBoolean("shouldbetrue", false))__			assertArrayEquals(new byte[] { 1, 2, 3, 4, 5 }, copy.getBytes("bytes sequence", null))__			assertEquals(getClass(), copy.getClass("myclass", null, getClass().getClassLoader()))___			assertEquals(orig, copy)__			assertEquals(orig.keySet(), copy.keySet())__			assertEquals(orig.hashCode(), copy.hashCode())___		} catch (Exception e) {_			e.printStackTrace()__			fail(e.getMessage())__		}_	};this,test,checks,the,serialization,deserialization,of,configuration,objects;test,public,void,test,configuration,serialization,and,getters,try,final,configuration,orig,new,configuration,orig,set,string,mykey,myvalue,orig,set,integer,mynumber,100,orig,set,long,longvalue,478236947162389746l,orig,set,float,pi,3,1415926f,orig,set,double,e,math,e,orig,set,boolean,shouldbetrue,true,orig,set,bytes,bytes,sequence,new,byte,1,2,3,4,5,orig,set,class,myclass,this,get,class,final,configuration,copy,instantiation,util,create,copy,writable,orig,assert,equals,myvalue,copy,get,string,mykey,null,assert,equals,100,copy,get,integer,mynumber,0,assert,equals,478236947162389746l,copy,get,long,longvalue,0l,assert,equals,3,1415926f,copy,get,float,pi,3,1415926f,0,0,assert,equals,math,e,copy,get,double,e,0,0,0,0,assert,equals,true,copy,get,boolean,shouldbetrue,false,assert,array,equals,new,byte,1,2,3,4,5,copy,get,bytes,bytes,sequence,null,assert,equals,get,class,copy,get,class,myclass,null,get,class,get,class,loader,assert,equals,orig,copy,assert,equals,orig,key,set,copy,key,set,assert,equals,orig,hash,code,copy,hash,code,catch,exception,e,e,print,stack,trace,fail,e,get,message
ConfigurationTest -> @Test 	public void testConfigurationSerializationAndGetters();1547030016;This test checks the serialization/deserialization of configuration objects.;@Test_	public void testConfigurationSerializationAndGetters() {_		try {_			final Configuration orig = new Configuration()__			orig.setString("mykey", "myvalue")__			orig.setInteger("mynumber", 100)__			orig.setLong("longvalue", 478236947162389746L)__			orig.setFloat("PI", 3.1415926f)__			orig.setDouble("E", Math.E)__			orig.setBoolean("shouldbetrue", true)__			orig.setBytes("bytes sequence", new byte[] { 1, 2, 3, 4, 5 })__			orig.setClass("myclass", this.getClass())___			final Configuration copy = InstantiationUtil.createCopyWritable(orig)__			assertEquals("myvalue", copy.getString("mykey", "null"))__			assertEquals(100, copy.getInteger("mynumber", 0))__			assertEquals(478236947162389746L, copy.getLong("longvalue", 0L))__			assertEquals(3.1415926f, copy.getFloat("PI", 3.1415926f), 0.0)__			assertEquals(Math.E, copy.getDouble("E", 0.0), 0.0)__			assertEquals(true, copy.getBoolean("shouldbetrue", false))__			assertArrayEquals(new byte[] { 1, 2, 3, 4, 5 }, copy.getBytes("bytes sequence", null))__			assertEquals(getClass(), copy.getClass("myclass", null, getClass().getClassLoader()))___			assertEquals(orig, copy)__			assertEquals(orig.keySet(), copy.keySet())__			assertEquals(orig.hashCode(), copy.hashCode())___		} catch (Exception e) {_			e.printStackTrace()__			fail(e.getMessage())__		}_	};this,test,checks,the,serialization,deserialization,of,configuration,objects;test,public,void,test,configuration,serialization,and,getters,try,final,configuration,orig,new,configuration,orig,set,string,mykey,myvalue,orig,set,integer,mynumber,100,orig,set,long,longvalue,478236947162389746l,orig,set,float,pi,3,1415926f,orig,set,double,e,math,e,orig,set,boolean,shouldbetrue,true,orig,set,bytes,bytes,sequence,new,byte,1,2,3,4,5,orig,set,class,myclass,this,get,class,final,configuration,copy,instantiation,util,create,copy,writable,orig,assert,equals,myvalue,copy,get,string,mykey,null,assert,equals,100,copy,get,integer,mynumber,0,assert,equals,478236947162389746l,copy,get,long,longvalue,0l,assert,equals,3,1415926f,copy,get,float,pi,3,1415926f,0,0,assert,equals,math,e,copy,get,double,e,0,0,0,0,assert,equals,true,copy,get,boolean,shouldbetrue,false,assert,array,equals,new,byte,1,2,3,4,5,copy,get,bytes,bytes,sequence,null,assert,equals,get,class,copy,get,class,myclass,null,get,class,get,class,loader,assert,equals,orig,copy,assert,equals,orig,key,set,copy,key,set,assert,equals,orig,hash,code,copy,hash,code,catch,exception,e,e,print,stack,trace,fail,e,get,message
ConfigurationTest -> @Test 	public void testConfigurationSerializationAndGetters();1550069559;This test checks the serialization/deserialization of configuration objects.;@Test_	public void testConfigurationSerializationAndGetters() {_		try {_			final Configuration orig = new Configuration()__			orig.setString("mykey", "myvalue")__			orig.setInteger("mynumber", 100)__			orig.setLong("longvalue", 478236947162389746L)__			orig.setFloat("PI", 3.1415926f)__			orig.setDouble("E", Math.E)__			orig.setBoolean("shouldbetrue", true)__			orig.setBytes("bytes sequence", new byte[] { 1, 2, 3, 4, 5 })__			orig.setClass("myclass", this.getClass())___			final Configuration copy = InstantiationUtil.createCopyWritable(orig)__			assertEquals("myvalue", copy.getString("mykey", "null"))__			assertEquals(100, copy.getInteger("mynumber", 0))__			assertEquals(478236947162389746L, copy.getLong("longvalue", 0L))__			assertEquals(3.1415926f, copy.getFloat("PI", 3.1415926f), 0.0)__			assertEquals(Math.E, copy.getDouble("E", 0.0), 0.0)__			assertEquals(true, copy.getBoolean("shouldbetrue", false))__			assertArrayEquals(new byte[] { 1, 2, 3, 4, 5 }, copy.getBytes("bytes sequence", null))__			assertEquals(getClass(), copy.getClass("myclass", null, getClass().getClassLoader()))___			assertEquals(orig, copy)__			assertEquals(orig.keySet(), copy.keySet())__			assertEquals(orig.hashCode(), copy.hashCode())___		} catch (Exception e) {_			e.printStackTrace()__			fail(e.getMessage())__		}_	};this,test,checks,the,serialization,deserialization,of,configuration,objects;test,public,void,test,configuration,serialization,and,getters,try,final,configuration,orig,new,configuration,orig,set,string,mykey,myvalue,orig,set,integer,mynumber,100,orig,set,long,longvalue,478236947162389746l,orig,set,float,pi,3,1415926f,orig,set,double,e,math,e,orig,set,boolean,shouldbetrue,true,orig,set,bytes,bytes,sequence,new,byte,1,2,3,4,5,orig,set,class,myclass,this,get,class,final,configuration,copy,instantiation,util,create,copy,writable,orig,assert,equals,myvalue,copy,get,string,mykey,null,assert,equals,100,copy,get,integer,mynumber,0,assert,equals,478236947162389746l,copy,get,long,longvalue,0l,assert,equals,3,1415926f,copy,get,float,pi,3,1415926f,0,0,assert,equals,math,e,copy,get,double,e,0,0,0,0,assert,equals,true,copy,get,boolean,shouldbetrue,false,assert,array,equals,new,byte,1,2,3,4,5,copy,get,bytes,bytes,sequence,null,assert,equals,get,class,copy,get,class,myclass,null,get,class,get,class,loader,assert,equals,orig,copy,assert,equals,orig,key,set,copy,key,set,assert,equals,orig,hash,code,copy,hash,code,catch,exception,e,e,print,stack,trace,fail,e,get,message
