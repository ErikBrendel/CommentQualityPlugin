# id;timestamp;commentText;codeText;commentWords;codeWords
SlidingEventTimeWindows -> public static SlidingEventTimeWindows of(Time size, Time slide);1456774151;Creates a new {@code SlidingEventTimeWindows} {@link WindowAssigner} that assigns_elements to sliding time windows based on the element timestamp.__@param size The size of the generated windows._@param slide The slide interval of the generated windows._@return The time policy.;public static SlidingEventTimeWindows of(Time size, Time slide) {_		return new SlidingEventTimeWindows(size.toMilliseconds(), slide.toMilliseconds())__	};creates,a,new,code,sliding,event,time,windows,link,window,assigner,that,assigns,elements,to,sliding,time,windows,based,on,the,element,timestamp,param,size,the,size,of,the,generated,windows,param,slide,the,slide,interval,of,the,generated,windows,return,the,time,policy;public,static,sliding,event,time,windows,of,time,size,time,slide,return,new,sliding,event,time,windows,size,to,milliseconds,slide,to,milliseconds
SlidingEventTimeWindows -> public static SlidingEventTimeWindows of(Time size, Time slide);1466504046;Creates a new {@code SlidingEventTimeWindows} {@link WindowAssigner} that assigns_elements to sliding time windows based on the element timestamp.__@param size The size of the generated windows._@param slide The slide interval of the generated windows._@return The time policy.;public static SlidingEventTimeWindows of(Time size, Time slide) {_		return new SlidingEventTimeWindows(size.toMilliseconds(), slide.toMilliseconds())__	};creates,a,new,code,sliding,event,time,windows,link,window,assigner,that,assigns,elements,to,sliding,time,windows,based,on,the,element,timestamp,param,size,the,size,of,the,generated,windows,param,slide,the,slide,interval,of,the,generated,windows,return,the,time,policy;public,static,sliding,event,time,windows,of,time,size,time,slide,return,new,sliding,event,time,windows,size,to,milliseconds,slide,to,milliseconds
SlidingEventTimeWindows -> public static SlidingEventTimeWindows of(Time size, Time slide);1467040572;Creates a new {@code SlidingEventTimeWindows} {@link WindowAssigner} that assigns_elements to sliding time windows based on the element timestamp.__@param size The size of the generated windows._@param slide The slide interval of the generated windows._@return The time policy.;public static SlidingEventTimeWindows of(Time size, Time slide) {_		return new SlidingEventTimeWindows(size.toMilliseconds(), slide.toMilliseconds())__	};creates,a,new,code,sliding,event,time,windows,link,window,assigner,that,assigns,elements,to,sliding,time,windows,based,on,the,element,timestamp,param,size,the,size,of,the,generated,windows,param,slide,the,slide,interval,of,the,generated,windows,return,the,time,policy;public,static,sliding,event,time,windows,of,time,size,time,slide,return,new,sliding,event,time,windows,size,to,milliseconds,slide,to,milliseconds
SlidingEventTimeWindows -> public static SlidingEventTimeWindows of(Time size, Time slide);1471623818;Creates a new {@code SlidingEventTimeWindows} {@link WindowAssigner} that assigns_elements to sliding time windows based on the element timestamp.__@param size The size of the generated windows._@param slide The slide interval of the generated windows._@return The time policy.;public static SlidingEventTimeWindows of(Time size, Time slide) {_		return new SlidingEventTimeWindows(size.toMilliseconds(), slide.toMilliseconds(), 0)__	};creates,a,new,code,sliding,event,time,windows,link,window,assigner,that,assigns,elements,to,sliding,time,windows,based,on,the,element,timestamp,param,size,the,size,of,the,generated,windows,param,slide,the,slide,interval,of,the,generated,windows,return,the,time,policy;public,static,sliding,event,time,windows,of,time,size,time,slide,return,new,sliding,event,time,windows,size,to,milliseconds,slide,to,milliseconds,0
SlidingEventTimeWindows -> public static SlidingEventTimeWindows of(Time size, Time slide);1485250954;Creates a new {@code SlidingEventTimeWindows} {@link WindowAssigner} that assigns_elements to sliding time windows based on the element timestamp.__@param size The size of the generated windows._@param slide The slide interval of the generated windows._@return The time policy.;public static SlidingEventTimeWindows of(Time size, Time slide) {_		return new SlidingEventTimeWindows(size.toMilliseconds(), slide.toMilliseconds(), 0)__	};creates,a,new,code,sliding,event,time,windows,link,window,assigner,that,assigns,elements,to,sliding,time,windows,based,on,the,element,timestamp,param,size,the,size,of,the,generated,windows,param,slide,the,slide,interval,of,the,generated,windows,return,the,time,policy;public,static,sliding,event,time,windows,of,time,size,time,slide,return,new,sliding,event,time,windows,size,to,milliseconds,slide,to,milliseconds,0
SlidingEventTimeWindows -> public static SlidingEventTimeWindows of(Time size, Time slide);1493195810;Creates a new {@code SlidingEventTimeWindows} {@link WindowAssigner} that assigns_elements to sliding time windows based on the element timestamp.__@param size The size of the generated windows._@param slide The slide interval of the generated windows._@return The time policy.;public static SlidingEventTimeWindows of(Time size, Time slide) {_		return new SlidingEventTimeWindows(size.toMilliseconds(), slide.toMilliseconds(), 0)__	};creates,a,new,code,sliding,event,time,windows,link,window,assigner,that,assigns,elements,to,sliding,time,windows,based,on,the,element,timestamp,param,size,the,size,of,the,generated,windows,param,slide,the,slide,interval,of,the,generated,windows,return,the,time,policy;public,static,sliding,event,time,windows,of,time,size,time,slide,return,new,sliding,event,time,windows,size,to,milliseconds,slide,to,milliseconds,0
SlidingEventTimeWindows -> public static SlidingEventTimeWindows of(Time size, Time slide);1493195810;Creates a new {@code SlidingEventTimeWindows} {@link WindowAssigner} that assigns_elements to sliding time windows based on the element timestamp.__@param size The size of the generated windows._@param slide The slide interval of the generated windows._@return The time policy.;public static SlidingEventTimeWindows of(Time size, Time slide) {_		return new SlidingEventTimeWindows(size.toMilliseconds(), slide.toMilliseconds(), 0)__	};creates,a,new,code,sliding,event,time,windows,link,window,assigner,that,assigns,elements,to,sliding,time,windows,based,on,the,element,timestamp,param,size,the,size,of,the,generated,windows,param,slide,the,slide,interval,of,the,generated,windows,return,the,time,policy;public,static,sliding,event,time,windows,of,time,size,time,slide,return,new,sliding,event,time,windows,size,to,milliseconds,slide,to,milliseconds,0
SlidingEventTimeWindows -> public static SlidingEventTimeWindows of(Time size, Time slide);1495484544;Creates a new {@code SlidingEventTimeWindows} {@link WindowAssigner} that assigns_elements to sliding time windows based on the element timestamp.__@param size The size of the generated windows._@param slide The slide interval of the generated windows._@return The time policy.;public static SlidingEventTimeWindows of(Time size, Time slide) {_		return new SlidingEventTimeWindows(size.toMilliseconds(), slide.toMilliseconds(), 0)__	};creates,a,new,code,sliding,event,time,windows,link,window,assigner,that,assigns,elements,to,sliding,time,windows,based,on,the,element,timestamp,param,size,the,size,of,the,generated,windows,param,slide,the,slide,interval,of,the,generated,windows,return,the,time,policy;public,static,sliding,event,time,windows,of,time,size,time,slide,return,new,sliding,event,time,windows,size,to,milliseconds,slide,to,milliseconds,0
SlidingEventTimeWindows -> public static SlidingEventTimeWindows of(Time size, Time slide);1548835846;Creates a new {@code SlidingEventTimeWindows} {@link WindowAssigner} that assigns_elements to sliding time windows based on the element timestamp.__@param size The size of the generated windows._@param slide The slide interval of the generated windows._@return The time policy.;public static SlidingEventTimeWindows of(Time size, Time slide) {_		return new SlidingEventTimeWindows(size.toMilliseconds(), slide.toMilliseconds(), 0)__	};creates,a,new,code,sliding,event,time,windows,link,window,assigner,that,assigns,elements,to,sliding,time,windows,based,on,the,element,timestamp,param,size,the,size,of,the,generated,windows,param,slide,the,slide,interval,of,the,generated,windows,return,the,time,policy;public,static,sliding,event,time,windows,of,time,size,time,slide,return,new,sliding,event,time,windows,size,to,milliseconds,slide,to,milliseconds,0
SlidingEventTimeWindows -> public static SlidingEventTimeWindows of(Time size, Time slide, Time offset);1471623818;Creates a new {@code SlidingEventTimeWindows} {@link WindowAssigner} that assigns_elements to time windows based on the element timestamp and offset._<p>_For example, if you want window a stream by hour,but window begins at the 15th minutes_of each hour, you can use {@code of(Time.hours(1),Time.minutes(15))},then you will get_time windows start at 0:15:00,1:15:00,2:15:00,etc._</p>__<p>_Rather than that,if you are living in somewhere which is not using UTCÂ±00:00 time,_such as China which is using UTC+08:00,and you want a time window with size of one day,_and window begins at every 00:00:00 of local time,you may use {@code of(Time.days(1),Time.hours(-8))}._The parameter of offset is {@code Time.hours(-8))} since UTC+08:00 is 8 hours earlier than UTC time._</p>_@param size The size of the generated windows._@param slide  The slide interval of the generated windows._@param offset The offset which window start would be shifted by._@return The time policy.;public static SlidingEventTimeWindows of(Time size, Time slide, Time offset) {_		return new SlidingEventTimeWindows(size.toMilliseconds(), slide.toMilliseconds(),_			offset.toMilliseconds() % slide.toMilliseconds())__	};creates,a,new,code,sliding,event,time,windows,link,window,assigner,that,assigns,elements,to,time,windows,based,on,the,element,timestamp,and,offset,p,for,example,if,you,want,window,a,stream,by,hour,but,window,begins,at,the,15th,minutes,of,each,hour,you,can,use,code,of,time,hours,1,time,minutes,15,then,you,will,get,time,windows,start,at,0,15,00,1,15,00,2,15,00,etc,p,p,rather,than,that,if,you,are,living,in,somewhere,which,is,not,using,utc,00,00,time,such,as,china,which,is,using,utc,08,00,and,you,want,a,time,window,with,size,of,one,day,and,window,begins,at,every,00,00,00,of,local,time,you,may,use,code,of,time,days,1,time,hours,8,the,parameter,of,offset,is,code,time,hours,8,since,utc,08,00,is,8,hours,earlier,than,utc,time,p,param,size,the,size,of,the,generated,windows,param,slide,the,slide,interval,of,the,generated,windows,param,offset,the,offset,which,window,start,would,be,shifted,by,return,the,time,policy;public,static,sliding,event,time,windows,of,time,size,time,slide,time,offset,return,new,sliding,event,time,windows,size,to,milliseconds,slide,to,milliseconds,offset,to,milliseconds,slide,to,milliseconds
SlidingEventTimeWindows -> public static SlidingEventTimeWindows of(Time size, Time slide, Time offset);1485250954;Creates a new {@code SlidingEventTimeWindows} {@link WindowAssigner} that assigns_elements to time windows based on the element timestamp and offset.__<p>For example, if you want window a stream by hour,but window begins at the 15th minutes_of each hour, you can use {@code of(Time.hours(1),Time.minutes(15))},then you will get_time windows start at 0:15:00,1:15:00,2:15:00,etc.__<p>Rather than that,if you are living in somewhere which is not using UTCÂ±00:00 time,_such as China which is using UTC+08:00,and you want a time window with size of one day,_and window begins at every 00:00:00 of local time,you may use {@code of(Time.days(1),Time.hours(-8))}._The parameter of offset is {@code Time.hours(-8))} since UTC+08:00 is 8 hours earlier than UTC time.__@param size The size of the generated windows._@param slide  The slide interval of the generated windows._@param offset The offset which window start would be shifted by._@return The time policy.;public static SlidingEventTimeWindows of(Time size, Time slide, Time offset) {_		return new SlidingEventTimeWindows(size.toMilliseconds(), slide.toMilliseconds(),_			offset.toMilliseconds() % slide.toMilliseconds())__	};creates,a,new,code,sliding,event,time,windows,link,window,assigner,that,assigns,elements,to,time,windows,based,on,the,element,timestamp,and,offset,p,for,example,if,you,want,window,a,stream,by,hour,but,window,begins,at,the,15th,minutes,of,each,hour,you,can,use,code,of,time,hours,1,time,minutes,15,then,you,will,get,time,windows,start,at,0,15,00,1,15,00,2,15,00,etc,p,rather,than,that,if,you,are,living,in,somewhere,which,is,not,using,utc,00,00,time,such,as,china,which,is,using,utc,08,00,and,you,want,a,time,window,with,size,of,one,day,and,window,begins,at,every,00,00,00,of,local,time,you,may,use,code,of,time,days,1,time,hours,8,the,parameter,of,offset,is,code,time,hours,8,since,utc,08,00,is,8,hours,earlier,than,utc,time,param,size,the,size,of,the,generated,windows,param,slide,the,slide,interval,of,the,generated,windows,param,offset,the,offset,which,window,start,would,be,shifted,by,return,the,time,policy;public,static,sliding,event,time,windows,of,time,size,time,slide,time,offset,return,new,sliding,event,time,windows,size,to,milliseconds,slide,to,milliseconds,offset,to,milliseconds,slide,to,milliseconds
SlidingEventTimeWindows -> public static SlidingEventTimeWindows of(Time size, Time slide, Time offset);1493195810;Creates a new {@code SlidingEventTimeWindows} {@link WindowAssigner} that assigns_elements to time windows based on the element timestamp and offset.__<p>For example, if you want window a stream by hour,but window begins at the 15th minutes_of each hour, you can use {@code of(Time.hours(1),Time.minutes(15))},then you will get_time windows start at 0:15:00,1:15:00,2:15:00,etc.__<p>Rather than that,if you are living in somewhere which is not using UTCÂ±00:00 time,_such as China which is using UTC+08:00,and you want a time window with size of one day,_and window begins at every 00:00:00 of local time,you may use {@code of(Time.days(1),Time.hours(-8))}._The parameter of offset is {@code Time.hours(-8))} since UTC+08:00 is 8 hours earlier than UTC time.__@param size The size of the generated windows._@param slide  The slide interval of the generated windows._@param offset The offset which window start would be shifted by._@return The time policy.;public static SlidingEventTimeWindows of(Time size, Time slide, Time offset) {_		return new SlidingEventTimeWindows(size.toMilliseconds(), slide.toMilliseconds(),_			offset.toMilliseconds() % slide.toMilliseconds())__	};creates,a,new,code,sliding,event,time,windows,link,window,assigner,that,assigns,elements,to,time,windows,based,on,the,element,timestamp,and,offset,p,for,example,if,you,want,window,a,stream,by,hour,but,window,begins,at,the,15th,minutes,of,each,hour,you,can,use,code,of,time,hours,1,time,minutes,15,then,you,will,get,time,windows,start,at,0,15,00,1,15,00,2,15,00,etc,p,rather,than,that,if,you,are,living,in,somewhere,which,is,not,using,utc,00,00,time,such,as,china,which,is,using,utc,08,00,and,you,want,a,time,window,with,size,of,one,day,and,window,begins,at,every,00,00,00,of,local,time,you,may,use,code,of,time,days,1,time,hours,8,the,parameter,of,offset,is,code,time,hours,8,since,utc,08,00,is,8,hours,earlier,than,utc,time,param,size,the,size,of,the,generated,windows,param,slide,the,slide,interval,of,the,generated,windows,param,offset,the,offset,which,window,start,would,be,shifted,by,return,the,time,policy;public,static,sliding,event,time,windows,of,time,size,time,slide,time,offset,return,new,sliding,event,time,windows,size,to,milliseconds,slide,to,milliseconds,offset,to,milliseconds,slide,to,milliseconds
SlidingEventTimeWindows -> public static SlidingEventTimeWindows of(Time size, Time slide, Time offset);1493195810;Creates a new {@code SlidingEventTimeWindows} {@link WindowAssigner} that assigns_elements to time windows based on the element timestamp and offset.__<p>For example, if you want window a stream by hour,but window begins at the 15th minutes_of each hour, you can use {@code of(Time.hours(1),Time.minutes(15))},then you will get_time windows start at 0:15:00,1:15:00,2:15:00,etc.__<p>Rather than that,if you are living in somewhere which is not using UTCÂ±00:00 time,_such as China which is using UTC+08:00,and you want a time window with size of one day,_and window begins at every 00:00:00 of local time,you may use {@code of(Time.days(1),Time.hours(-8))}._The parameter of offset is {@code Time.hours(-8))} since UTC+08:00 is 8 hours earlier than UTC time.__@param size The size of the generated windows._@param slide  The slide interval of the generated windows._@param offset The offset which window start would be shifted by._@return The time policy.;public static SlidingEventTimeWindows of(Time size, Time slide, Time offset) {_		return new SlidingEventTimeWindows(size.toMilliseconds(), slide.toMilliseconds(),_			offset.toMilliseconds() % slide.toMilliseconds())__	};creates,a,new,code,sliding,event,time,windows,link,window,assigner,that,assigns,elements,to,time,windows,based,on,the,element,timestamp,and,offset,p,for,example,if,you,want,window,a,stream,by,hour,but,window,begins,at,the,15th,minutes,of,each,hour,you,can,use,code,of,time,hours,1,time,minutes,15,then,you,will,get,time,windows,start,at,0,15,00,1,15,00,2,15,00,etc,p,rather,than,that,if,you,are,living,in,somewhere,which,is,not,using,utc,00,00,time,such,as,china,which,is,using,utc,08,00,and,you,want,a,time,window,with,size,of,one,day,and,window,begins,at,every,00,00,00,of,local,time,you,may,use,code,of,time,days,1,time,hours,8,the,parameter,of,offset,is,code,time,hours,8,since,utc,08,00,is,8,hours,earlier,than,utc,time,param,size,the,size,of,the,generated,windows,param,slide,the,slide,interval,of,the,generated,windows,param,offset,the,offset,which,window,start,would,be,shifted,by,return,the,time,policy;public,static,sliding,event,time,windows,of,time,size,time,slide,time,offset,return,new,sliding,event,time,windows,size,to,milliseconds,slide,to,milliseconds,offset,to,milliseconds,slide,to,milliseconds
SlidingEventTimeWindows -> public static SlidingEventTimeWindows of(Time size, Time slide, Time offset);1495484544;Creates a new {@code SlidingEventTimeWindows} {@link WindowAssigner} that assigns_elements to time windows based on the element timestamp and offset.__<p>For example, if you want window a stream by hour,but window begins at the 15th minutes_of each hour, you can use {@code of(Time.hours(1),Time.minutes(15))},then you will get_time windows start at 0:15:00,1:15:00,2:15:00,etc.__<p>Rather than that,if you are living in somewhere which is not using UTCÂ±00:00 time,_such as China which is using UTC+08:00,and you want a time window with size of one day,_and window begins at every 00:00:00 of local time,you may use {@code of(Time.days(1),Time.hours(-8))}._The parameter of offset is {@code Time.hours(-8))} since UTC+08:00 is 8 hours earlier than UTC time.__@param size The size of the generated windows._@param slide  The slide interval of the generated windows._@param offset The offset which window start would be shifted by._@return The time policy.;public static SlidingEventTimeWindows of(Time size, Time slide, Time offset) {_		return new SlidingEventTimeWindows(size.toMilliseconds(), slide.toMilliseconds(),_			offset.toMilliseconds() % slide.toMilliseconds())__	};creates,a,new,code,sliding,event,time,windows,link,window,assigner,that,assigns,elements,to,time,windows,based,on,the,element,timestamp,and,offset,p,for,example,if,you,want,window,a,stream,by,hour,but,window,begins,at,the,15th,minutes,of,each,hour,you,can,use,code,of,time,hours,1,time,minutes,15,then,you,will,get,time,windows,start,at,0,15,00,1,15,00,2,15,00,etc,p,rather,than,that,if,you,are,living,in,somewhere,which,is,not,using,utc,00,00,time,such,as,china,which,is,using,utc,08,00,and,you,want,a,time,window,with,size,of,one,day,and,window,begins,at,every,00,00,00,of,local,time,you,may,use,code,of,time,days,1,time,hours,8,the,parameter,of,offset,is,code,time,hours,8,since,utc,08,00,is,8,hours,earlier,than,utc,time,param,size,the,size,of,the,generated,windows,param,slide,the,slide,interval,of,the,generated,windows,param,offset,the,offset,which,window,start,would,be,shifted,by,return,the,time,policy;public,static,sliding,event,time,windows,of,time,size,time,slide,time,offset,return,new,sliding,event,time,windows,size,to,milliseconds,slide,to,milliseconds,offset,to,milliseconds,slide,to,milliseconds
SlidingEventTimeWindows -> public static SlidingEventTimeWindows of(Time size, Time slide, Time offset);1548835846;Creates a new {@code SlidingEventTimeWindows} {@link WindowAssigner} that assigns_elements to time windows based on the element timestamp and offset.__<p>For example, if you want window a stream by hour,but window begins at the 15th minutes_of each hour, you can use {@code of(Time.hours(1),Time.minutes(15))},then you will get_time windows start at 0:15:00,1:15:00,2:15:00,etc.__<p>Rather than that,if you are living in somewhere which is not using UTCÂ±00:00 time,_such as China which is using UTC+08:00,and you want a time window with size of one day,_and window begins at every 00:00:00 of local time,you may use {@code of(Time.days(1),Time.hours(-8))}._The parameter of offset is {@code Time.hours(-8))} since UTC+08:00 is 8 hours earlier than UTC time.__@param size The size of the generated windows._@param slide  The slide interval of the generated windows._@param offset The offset which window start would be shifted by._@return The time policy.;public static SlidingEventTimeWindows of(Time size, Time slide, Time offset) {_		return new SlidingEventTimeWindows(size.toMilliseconds(), slide.toMilliseconds(), offset.toMilliseconds())__	};creates,a,new,code,sliding,event,time,windows,link,window,assigner,that,assigns,elements,to,time,windows,based,on,the,element,timestamp,and,offset,p,for,example,if,you,want,window,a,stream,by,hour,but,window,begins,at,the,15th,minutes,of,each,hour,you,can,use,code,of,time,hours,1,time,minutes,15,then,you,will,get,time,windows,start,at,0,15,00,1,15,00,2,15,00,etc,p,rather,than,that,if,you,are,living,in,somewhere,which,is,not,using,utc,00,00,time,such,as,china,which,is,using,utc,08,00,and,you,want,a,time,window,with,size,of,one,day,and,window,begins,at,every,00,00,00,of,local,time,you,may,use,code,of,time,days,1,time,hours,8,the,parameter,of,offset,is,code,time,hours,8,since,utc,08,00,is,8,hours,earlier,than,utc,time,param,size,the,size,of,the,generated,windows,param,slide,the,slide,interval,of,the,generated,windows,param,offset,the,offset,which,window,start,would,be,shifted,by,return,the,time,policy;public,static,sliding,event,time,windows,of,time,size,time,slide,time,offset,return,new,sliding,event,time,windows,size,to,milliseconds,slide,to,milliseconds,offset,to,milliseconds
