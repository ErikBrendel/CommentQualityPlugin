# id;timestamp;commentText;codeText;commentWords;codeWords
StreamingFileSink -> RowFormatBuilder -> public StreamingFileSink<IN> build();1532095949;Creates the actual sink.;public StreamingFileSink<IN> build() {_			return new StreamingFileSink<>(this, bucketCheckInterval)__		};creates,the,actual,sink;public,streaming,file,sink,in,build,return,new,streaming,file,sink,this,bucket,check,interval
StreamingFileSink -> RowFormatBuilder -> public StreamingFileSink<IN> build();1532348102;Creates the actual sink.;public StreamingFileSink<IN> build() {_			return new StreamingFileSink<>(this, bucketCheckInterval)__		};creates,the,actual,sink;public,streaming,file,sink,in,build,return,new,streaming,file,sink,this,bucket,check,interval
StreamingFileSink -> RowFormatBuilder -> public StreamingFileSink<IN> build();1533028935;Creates the actual sink.;public StreamingFileSink<IN> build() {_			return new StreamingFileSink<>(this, bucketCheckInterval)__		};creates,the,actual,sink;public,streaming,file,sink,in,build,return,new,streaming,file,sink,this,bucket,check,interval
StreamingFileSink -> RowFormatBuilder -> public StreamingFileSink<IN> build();1533029605;Creates the actual sink.;public StreamingFileSink<IN> build() {_			return new StreamingFileSink<>(this, bucketCheckInterval)__		};creates,the,actual,sink;public,streaming,file,sink,in,build,return,new,streaming,file,sink,this,bucket,check,interval
StreamingFileSink -> RowFormatBuilder -> public StreamingFileSink<IN> build();1533029605;Creates the actual sink.;public StreamingFileSink<IN> build() {_			return new StreamingFileSink<>(this, bucketCheckInterval)__		};creates,the,actual,sink;public,streaming,file,sink,in,build,return,new,streaming,file,sink,this,bucket,check,interval
StreamingFileSink -> RowFormatBuilder -> public StreamingFileSink<IN> build();1533229113;Creates the actual sink.;public StreamingFileSink<IN> build() {_			return new StreamingFileSink<>(this, bucketCheckInterval)__		};creates,the,actual,sink;public,streaming,file,sink,in,build,return,new,streaming,file,sink,this,bucket,check,interval
StreamingFileSink -> RowFormatBuilder -> public StreamingFileSink<IN> build();1540463363;Creates the actual sink.;public StreamingFileSink<IN> build() {_			return new StreamingFileSink<>(this, bucketCheckInterval)__		};creates,the,actual,sink;public,streaming,file,sink,in,build,return,new,streaming,file,sink,this,bucket,check,interval
StreamingFileSink -> RowFormatBuilder -> public StreamingFileSink<IN> build();1541059170;Creates the actual sink.;public StreamingFileSink<IN> build() {_			return new StreamingFileSink<>(this, bucketCheckInterval)__		};creates,the,actual,sink;public,streaming,file,sink,in,build,return,new,streaming,file,sink,this,bucket,check,interval
StreamingFileSink -> private StreamingFileSink( 			final StreamingFileSink.BucketsBuilder<IN, ?> bucketsBuilder, 			final long bucketCheckInterval);1532095949;Creates a new {@code StreamingFileSink} that writes files to the given base directory.;private StreamingFileSink(_			final StreamingFileSink.BucketsBuilder<IN, ?> bucketsBuilder,_			final long bucketCheckInterval) {__		Preconditions.checkArgument(bucketCheckInterval > 0L)___		this.bucketsBuilder = Preconditions.checkNotNull(bucketsBuilder)__		this.bucketCheckInterval = bucketCheckInterval__	};creates,a,new,code,streaming,file,sink,that,writes,files,to,the,given,base,directory;private,streaming,file,sink,final,streaming,file,sink,buckets,builder,in,buckets,builder,final,long,bucket,check,interval,preconditions,check,argument,bucket,check,interval,0l,this,buckets,builder,preconditions,check,not,null,buckets,builder,this,bucket,check,interval,bucket,check,interval
StreamingFileSink -> private StreamingFileSink( 			final StreamingFileSink.BucketsBuilder<IN, ?> bucketsBuilder, 			final long bucketCheckInterval);1532348102;Creates a new {@code StreamingFileSink} that writes files to the given base directory.;private StreamingFileSink(_			final StreamingFileSink.BucketsBuilder<IN, ?> bucketsBuilder,_			final long bucketCheckInterval) {__		Preconditions.checkArgument(bucketCheckInterval > 0L)___		this.bucketsBuilder = Preconditions.checkNotNull(bucketsBuilder)__		this.bucketCheckInterval = bucketCheckInterval__	};creates,a,new,code,streaming,file,sink,that,writes,files,to,the,given,base,directory;private,streaming,file,sink,final,streaming,file,sink,buckets,builder,in,buckets,builder,final,long,bucket,check,interval,preconditions,check,argument,bucket,check,interval,0l,this,buckets,builder,preconditions,check,not,null,buckets,builder,this,bucket,check,interval,bucket,check,interval
StreamingFileSink -> private StreamingFileSink( 			final StreamingFileSink.BucketsBuilder<IN, ?> bucketsBuilder, 			final long bucketCheckInterval);1533028935;Creates a new {@code StreamingFileSink} that writes files to the given base directory.;private StreamingFileSink(_			final StreamingFileSink.BucketsBuilder<IN, ?> bucketsBuilder,_			final long bucketCheckInterval) {__		Preconditions.checkArgument(bucketCheckInterval > 0L)___		this.bucketsBuilder = Preconditions.checkNotNull(bucketsBuilder)__		this.bucketCheckInterval = bucketCheckInterval__	};creates,a,new,code,streaming,file,sink,that,writes,files,to,the,given,base,directory;private,streaming,file,sink,final,streaming,file,sink,buckets,builder,in,buckets,builder,final,long,bucket,check,interval,preconditions,check,argument,bucket,check,interval,0l,this,buckets,builder,preconditions,check,not,null,buckets,builder,this,bucket,check,interval,bucket,check,interval
StreamingFileSink -> private StreamingFileSink( 			final StreamingFileSink.BucketsBuilder<IN, ?> bucketsBuilder, 			final long bucketCheckInterval);1533029605;Creates a new {@code StreamingFileSink} that writes files to the given base directory.;private StreamingFileSink(_			final StreamingFileSink.BucketsBuilder<IN, ?> bucketsBuilder,_			final long bucketCheckInterval) {__		Preconditions.checkArgument(bucketCheckInterval > 0L)___		this.bucketsBuilder = Preconditions.checkNotNull(bucketsBuilder)__		this.bucketCheckInterval = bucketCheckInterval__	};creates,a,new,code,streaming,file,sink,that,writes,files,to,the,given,base,directory;private,streaming,file,sink,final,streaming,file,sink,buckets,builder,in,buckets,builder,final,long,bucket,check,interval,preconditions,check,argument,bucket,check,interval,0l,this,buckets,builder,preconditions,check,not,null,buckets,builder,this,bucket,check,interval,bucket,check,interval
StreamingFileSink -> private StreamingFileSink( 			final StreamingFileSink.BucketsBuilder<IN, ?> bucketsBuilder, 			final long bucketCheckInterval);1533029605;Creates a new {@code StreamingFileSink} that writes files to the given base directory.;private StreamingFileSink(_			final StreamingFileSink.BucketsBuilder<IN, ?> bucketsBuilder,_			final long bucketCheckInterval) {__		Preconditions.checkArgument(bucketCheckInterval > 0L)___		this.bucketsBuilder = Preconditions.checkNotNull(bucketsBuilder)__		this.bucketCheckInterval = bucketCheckInterval__	};creates,a,new,code,streaming,file,sink,that,writes,files,to,the,given,base,directory;private,streaming,file,sink,final,streaming,file,sink,buckets,builder,in,buckets,builder,final,long,bucket,check,interval,preconditions,check,argument,bucket,check,interval,0l,this,buckets,builder,preconditions,check,not,null,buckets,builder,this,bucket,check,interval,bucket,check,interval
StreamingFileSink -> private StreamingFileSink( 			final StreamingFileSink.BucketsBuilder<IN, ?> bucketsBuilder, 			final long bucketCheckInterval);1533229113;Creates a new {@code StreamingFileSink} that writes files to the given base directory.;private StreamingFileSink(_			final StreamingFileSink.BucketsBuilder<IN, ?> bucketsBuilder,_			final long bucketCheckInterval) {__		Preconditions.checkArgument(bucketCheckInterval > 0L)___		this.bucketsBuilder = Preconditions.checkNotNull(bucketsBuilder)__		this.bucketCheckInterval = bucketCheckInterval__	};creates,a,new,code,streaming,file,sink,that,writes,files,to,the,given,base,directory;private,streaming,file,sink,final,streaming,file,sink,buckets,builder,in,buckets,builder,final,long,bucket,check,interval,preconditions,check,argument,bucket,check,interval,0l,this,buckets,builder,preconditions,check,not,null,buckets,builder,this,bucket,check,interval,bucket,check,interval
StreamingFileSink -> private StreamingFileSink( 			final StreamingFileSink.BucketsBuilder<IN, ?> bucketsBuilder, 			final long bucketCheckInterval);1540463363;Creates a new {@code StreamingFileSink} that writes files to the given base directory.;private StreamingFileSink(_			final StreamingFileSink.BucketsBuilder<IN, ?> bucketsBuilder,_			final long bucketCheckInterval) {__		Preconditions.checkArgument(bucketCheckInterval > 0L)___		this.bucketsBuilder = Preconditions.checkNotNull(bucketsBuilder)__		this.bucketCheckInterval = bucketCheckInterval__	};creates,a,new,code,streaming,file,sink,that,writes,files,to,the,given,base,directory;private,streaming,file,sink,final,streaming,file,sink,buckets,builder,in,buckets,builder,final,long,bucket,check,interval,preconditions,check,argument,bucket,check,interval,0l,this,buckets,builder,preconditions,check,not,null,buckets,builder,this,bucket,check,interval,bucket,check,interval
StreamingFileSink -> private StreamingFileSink( 			final StreamingFileSink.BucketsBuilder<IN, ?> bucketsBuilder, 			final long bucketCheckInterval);1541059170;Creates a new {@code StreamingFileSink} that writes files to the given base directory.;private StreamingFileSink(_			final StreamingFileSink.BucketsBuilder<IN, ?> bucketsBuilder,_			final long bucketCheckInterval) {__		Preconditions.checkArgument(bucketCheckInterval > 0L)___		this.bucketsBuilder = Preconditions.checkNotNull(bucketsBuilder)__		this.bucketCheckInterval = bucketCheckInterval__	};creates,a,new,code,streaming,file,sink,that,writes,files,to,the,given,base,directory;private,streaming,file,sink,final,streaming,file,sink,buckets,builder,in,buckets,builder,final,long,bucket,check,interval,preconditions,check,argument,bucket,check,interval,0l,this,buckets,builder,preconditions,check,not,null,buckets,builder,this,bucket,check,interval,bucket,check,interval
StreamingFileSink -> BulkFormatBuilder -> public StreamingFileSink<IN> build();1532095949;Creates the actual sink.;public StreamingFileSink<IN> build() {_			return new StreamingFileSink<>(this, bucketCheckInterval)__		};creates,the,actual,sink;public,streaming,file,sink,in,build,return,new,streaming,file,sink,this,bucket,check,interval
StreamingFileSink -> BulkFormatBuilder -> public StreamingFileSink<IN> build();1532348102;Creates the actual sink.;public StreamingFileSink<IN> build() {_			return new StreamingFileSink<>(this, bucketCheckInterval)__		};creates,the,actual,sink;public,streaming,file,sink,in,build,return,new,streaming,file,sink,this,bucket,check,interval
StreamingFileSink -> BulkFormatBuilder -> public StreamingFileSink<IN> build();1533028935;Creates the actual sink.;public StreamingFileSink<IN> build() {_			return new StreamingFileSink<>(this, bucketCheckInterval)__		};creates,the,actual,sink;public,streaming,file,sink,in,build,return,new,streaming,file,sink,this,bucket,check,interval
StreamingFileSink -> BulkFormatBuilder -> public StreamingFileSink<IN> build();1533029605;Creates the actual sink.;public StreamingFileSink<IN> build() {_			return new StreamingFileSink<>(this, bucketCheckInterval)__		};creates,the,actual,sink;public,streaming,file,sink,in,build,return,new,streaming,file,sink,this,bucket,check,interval
StreamingFileSink -> BulkFormatBuilder -> public StreamingFileSink<IN> build();1533029605;Creates the actual sink.;public StreamingFileSink<IN> build() {_			return new StreamingFileSink<>(this, bucketCheckInterval)__		};creates,the,actual,sink;public,streaming,file,sink,in,build,return,new,streaming,file,sink,this,bucket,check,interval
StreamingFileSink -> BulkFormatBuilder -> public StreamingFileSink<IN> build();1533229113;Creates the actual sink.;public StreamingFileSink<IN> build() {_			return new StreamingFileSink<>(this, bucketCheckInterval)__		};creates,the,actual,sink;public,streaming,file,sink,in,build,return,new,streaming,file,sink,this,bucket,check,interval
StreamingFileSink -> BulkFormatBuilder -> public StreamingFileSink<IN> build();1540463363;Creates the actual sink.;public StreamingFileSink<IN> build() {_			return new StreamingFileSink<>(this, bucketCheckInterval)__		};creates,the,actual,sink;public,streaming,file,sink,in,build,return,new,streaming,file,sink,this,bucket,check,interval
StreamingFileSink -> BulkFormatBuilder -> public StreamingFileSink<IN> build();1541059170;Creates the actual sink.;public StreamingFileSink<IN> build() {_			return new StreamingFileSink<>(this, bucketCheckInterval)__		};creates,the,actual,sink;public,streaming,file,sink,in,build,return,new,streaming,file,sink,this,bucket,check,interval
StreamingFileSink -> public static <IN> StreamingFileSink.BulkFormatBuilder<IN, String> forBulkFormat( 			final Path basePath, final BulkWriter.Factory<IN> writerFactory);1532095949;Creates the builder for a {@link StreamingFileSink} with row-encoding format._@param basePath the base path where all the buckets are going to be created as sub-directories._@param writerFactory the {@link BulkWriter.Factory} to be used when writing elements in the buckets._@param <IN> the type of incoming elements_@return The builder where the remaining of the configuration parameters for the sink can be configured._In order to instantiate the sink, call {@link RowFormatBuilder#build()} after specifying the desired parameters.;public static <IN> StreamingFileSink.BulkFormatBuilder<IN, String> forBulkFormat(_			final Path basePath, final BulkWriter.Factory<IN> writerFactory) {_		return new StreamingFileSink.BulkFormatBuilder<>(basePath, writerFactory, new DateTimeBucketer<>())__	};creates,the,builder,for,a,link,streaming,file,sink,with,row,encoding,format,param,base,path,the,base,path,where,all,the,buckets,are,going,to,be,created,as,sub,directories,param,writer,factory,the,link,bulk,writer,factory,to,be,used,when,writing,elements,in,the,buckets,param,in,the,type,of,incoming,elements,return,the,builder,where,the,remaining,of,the,configuration,parameters,for,the,sink,can,be,configured,in,order,to,instantiate,the,sink,call,link,row,format,builder,build,after,specifying,the,desired,parameters;public,static,in,streaming,file,sink,bulk,format,builder,in,string,for,bulk,format,final,path,base,path,final,bulk,writer,factory,in,writer,factory,return,new,streaming,file,sink,bulk,format,builder,base,path,writer,factory,new,date,time,bucketer
StreamingFileSink -> public static <IN> StreamingFileSink.BulkFormatBuilder<IN, String> forBulkFormat( 			final Path basePath, final BulkWriter.Factory<IN> writerFactory);1532348102;Creates the builder for a {@link StreamingFileSink} with row-encoding format._@param basePath the base path where all the buckets are going to be created as sub-directories._@param writerFactory the {@link BulkWriter.Factory} to be used when writing elements in the buckets._@param <IN> the type of incoming elements_@return The builder where the remaining of the configuration parameters for the sink can be configured._In order to instantiate the sink, call {@link RowFormatBuilder#build()} after specifying the desired parameters.;public static <IN> StreamingFileSink.BulkFormatBuilder<IN, String> forBulkFormat(_			final Path basePath, final BulkWriter.Factory<IN> writerFactory) {_		return new StreamingFileSink.BulkFormatBuilder<>(basePath, writerFactory, new DateTimeBucketer<>())__	};creates,the,builder,for,a,link,streaming,file,sink,with,row,encoding,format,param,base,path,the,base,path,where,all,the,buckets,are,going,to,be,created,as,sub,directories,param,writer,factory,the,link,bulk,writer,factory,to,be,used,when,writing,elements,in,the,buckets,param,in,the,type,of,incoming,elements,return,the,builder,where,the,remaining,of,the,configuration,parameters,for,the,sink,can,be,configured,in,order,to,instantiate,the,sink,call,link,row,format,builder,build,after,specifying,the,desired,parameters;public,static,in,streaming,file,sink,bulk,format,builder,in,string,for,bulk,format,final,path,base,path,final,bulk,writer,factory,in,writer,factory,return,new,streaming,file,sink,bulk,format,builder,base,path,writer,factory,new,date,time,bucketer
StreamingFileSink -> public static <IN> StreamingFileSink.BulkFormatBuilder<IN, String> forBulkFormat( 			final Path basePath, final BulkWriter.Factory<IN> writerFactory);1533028935;Creates the builder for a {@link StreamingFileSink} with row-encoding format._@param basePath the base path where all the buckets are going to be created as sub-directories._@param writerFactory the {@link BulkWriter.Factory} to be used when writing elements in the buckets._@param <IN> the type of incoming elements_@return The builder where the remaining of the configuration parameters for the sink can be configured._In order to instantiate the sink, call {@link RowFormatBuilder#build()} after specifying the desired parameters.;public static <IN> StreamingFileSink.BulkFormatBuilder<IN, String> forBulkFormat(_			final Path basePath, final BulkWriter.Factory<IN> writerFactory) {_		return new StreamingFileSink.BulkFormatBuilder<>(basePath, writerFactory, new DateTimeBucketer<>())__	};creates,the,builder,for,a,link,streaming,file,sink,with,row,encoding,format,param,base,path,the,base,path,where,all,the,buckets,are,going,to,be,created,as,sub,directories,param,writer,factory,the,link,bulk,writer,factory,to,be,used,when,writing,elements,in,the,buckets,param,in,the,type,of,incoming,elements,return,the,builder,where,the,remaining,of,the,configuration,parameters,for,the,sink,can,be,configured,in,order,to,instantiate,the,sink,call,link,row,format,builder,build,after,specifying,the,desired,parameters;public,static,in,streaming,file,sink,bulk,format,builder,in,string,for,bulk,format,final,path,base,path,final,bulk,writer,factory,in,writer,factory,return,new,streaming,file,sink,bulk,format,builder,base,path,writer,factory,new,date,time,bucketer
StreamingFileSink -> public static <IN> StreamingFileSink.BulkFormatBuilder<IN, String> forBulkFormat( 			final Path basePath, final BulkWriter.Factory<IN> writerFactory);1533029605;Creates the builder for a {@link StreamingFileSink} with row-encoding format._@param basePath the base path where all the buckets are going to be created as sub-directories._@param writerFactory the {@link BulkWriter.Factory} to be used when writing elements in the buckets._@param <IN> the type of incoming elements_@return The builder where the remaining of the configuration parameters for the sink can be configured._In order to instantiate the sink, call {@link RowFormatBuilder#build()} after specifying the desired parameters.;public static <IN> StreamingFileSink.BulkFormatBuilder<IN, String> forBulkFormat(_			final Path basePath, final BulkWriter.Factory<IN> writerFactory) {_		return new StreamingFileSink.BulkFormatBuilder<>(basePath, writerFactory, new DateTimeBucketer<>())__	};creates,the,builder,for,a,link,streaming,file,sink,with,row,encoding,format,param,base,path,the,base,path,where,all,the,buckets,are,going,to,be,created,as,sub,directories,param,writer,factory,the,link,bulk,writer,factory,to,be,used,when,writing,elements,in,the,buckets,param,in,the,type,of,incoming,elements,return,the,builder,where,the,remaining,of,the,configuration,parameters,for,the,sink,can,be,configured,in,order,to,instantiate,the,sink,call,link,row,format,builder,build,after,specifying,the,desired,parameters;public,static,in,streaming,file,sink,bulk,format,builder,in,string,for,bulk,format,final,path,base,path,final,bulk,writer,factory,in,writer,factory,return,new,streaming,file,sink,bulk,format,builder,base,path,writer,factory,new,date,time,bucketer
StreamingFileSink -> public static <IN> StreamingFileSink.BulkFormatBuilder<IN, String> forBulkFormat( 			final Path basePath, final BulkWriter.Factory<IN> writerFactory);1533029605;Creates the builder for a {@link StreamingFileSink} with row-encoding format._@param basePath the base path where all the buckets are going to be created as sub-directories._@param writerFactory the {@link BulkWriter.Factory} to be used when writing elements in the buckets._@param <IN> the type of incoming elements_@return The builder where the remaining of the configuration parameters for the sink can be configured._In order to instantiate the sink, call {@link RowFormatBuilder#build()} after specifying the desired parameters.;public static <IN> StreamingFileSink.BulkFormatBuilder<IN, String> forBulkFormat(_			final Path basePath, final BulkWriter.Factory<IN> writerFactory) {_		return new StreamingFileSink.BulkFormatBuilder<>(basePath, writerFactory, new DateTimeBucketer<>())__	};creates,the,builder,for,a,link,streaming,file,sink,with,row,encoding,format,param,base,path,the,base,path,where,all,the,buckets,are,going,to,be,created,as,sub,directories,param,writer,factory,the,link,bulk,writer,factory,to,be,used,when,writing,elements,in,the,buckets,param,in,the,type,of,incoming,elements,return,the,builder,where,the,remaining,of,the,configuration,parameters,for,the,sink,can,be,configured,in,order,to,instantiate,the,sink,call,link,row,format,builder,build,after,specifying,the,desired,parameters;public,static,in,streaming,file,sink,bulk,format,builder,in,string,for,bulk,format,final,path,base,path,final,bulk,writer,factory,in,writer,factory,return,new,streaming,file,sink,bulk,format,builder,base,path,writer,factory,new,date,time,bucketer
StreamingFileSink -> public static <IN> StreamingFileSink.BulkFormatBuilder<IN, String> forBulkFormat( 			final Path basePath, final BulkWriter.Factory<IN> writerFactory);1533229113;Creates the builder for a {@link StreamingFileSink} with row-encoding format._@param basePath the base path where all the buckets are going to be created as sub-directories._@param writerFactory the {@link BulkWriter.Factory} to be used when writing elements in the buckets._@param <IN> the type of incoming elements_@return The builder where the remaining of the configuration parameters for the sink can be configured._In order to instantiate the sink, call {@link RowFormatBuilder#build()} after specifying the desired parameters.;public static <IN> StreamingFileSink.BulkFormatBuilder<IN, String> forBulkFormat(_			final Path basePath, final BulkWriter.Factory<IN> writerFactory) {_		return new StreamingFileSink.BulkFormatBuilder<>(basePath, writerFactory, new DateTimeBucketAssigner<>())__	};creates,the,builder,for,a,link,streaming,file,sink,with,row,encoding,format,param,base,path,the,base,path,where,all,the,buckets,are,going,to,be,created,as,sub,directories,param,writer,factory,the,link,bulk,writer,factory,to,be,used,when,writing,elements,in,the,buckets,param,in,the,type,of,incoming,elements,return,the,builder,where,the,remaining,of,the,configuration,parameters,for,the,sink,can,be,configured,in,order,to,instantiate,the,sink,call,link,row,format,builder,build,after,specifying,the,desired,parameters;public,static,in,streaming,file,sink,bulk,format,builder,in,string,for,bulk,format,final,path,base,path,final,bulk,writer,factory,in,writer,factory,return,new,streaming,file,sink,bulk,format,builder,base,path,writer,factory,new,date,time,bucket,assigner
StreamingFileSink -> public static <IN> StreamingFileSink.BulkFormatBuilder<IN, String> forBulkFormat( 			final Path basePath, final BulkWriter.Factory<IN> writerFactory);1540463363;Creates the builder for a {@link StreamingFileSink} with row-encoding format._@param basePath the base path where all the buckets are going to be created as sub-directories._@param writerFactory the {@link BulkWriter.Factory} to be used when writing elements in the buckets._@param <IN> the type of incoming elements_@return The builder where the remaining of the configuration parameters for the sink can be configured._In order to instantiate the sink, call {@link RowFormatBuilder#build()} after specifying the desired parameters.;public static <IN> StreamingFileSink.BulkFormatBuilder<IN, String> forBulkFormat(_			final Path basePath, final BulkWriter.Factory<IN> writerFactory) {_		return new StreamingFileSink.BulkFormatBuilder<>(basePath, writerFactory, new DateTimeBucketAssigner<>())__	};creates,the,builder,for,a,link,streaming,file,sink,with,row,encoding,format,param,base,path,the,base,path,where,all,the,buckets,are,going,to,be,created,as,sub,directories,param,writer,factory,the,link,bulk,writer,factory,to,be,used,when,writing,elements,in,the,buckets,param,in,the,type,of,incoming,elements,return,the,builder,where,the,remaining,of,the,configuration,parameters,for,the,sink,can,be,configured,in,order,to,instantiate,the,sink,call,link,row,format,builder,build,after,specifying,the,desired,parameters;public,static,in,streaming,file,sink,bulk,format,builder,in,string,for,bulk,format,final,path,base,path,final,bulk,writer,factory,in,writer,factory,return,new,streaming,file,sink,bulk,format,builder,base,path,writer,factory,new,date,time,bucket,assigner
StreamingFileSink -> public static <IN> StreamingFileSink.BulkFormatBuilder<IN, String> forBulkFormat( 			final Path basePath, final BulkWriter.Factory<IN> writerFactory);1541059170;Creates the builder for a {@link StreamingFileSink} with row-encoding format._@param basePath the base path where all the buckets are going to be created as sub-directories._@param writerFactory the {@link BulkWriter.Factory} to be used when writing elements in the buckets._@param <IN> the type of incoming elements_@return The builder where the remaining of the configuration parameters for the sink can be configured._In order to instantiate the sink, call {@link RowFormatBuilder#build()} after specifying the desired parameters.;public static <IN> StreamingFileSink.BulkFormatBuilder<IN, String> forBulkFormat(_			final Path basePath, final BulkWriter.Factory<IN> writerFactory) {_		return new StreamingFileSink.BulkFormatBuilder<>(basePath, writerFactory, new DateTimeBucketAssigner<>())__	};creates,the,builder,for,a,link,streaming,file,sink,with,row,encoding,format,param,base,path,the,base,path,where,all,the,buckets,are,going,to,be,created,as,sub,directories,param,writer,factory,the,link,bulk,writer,factory,to,be,used,when,writing,elements,in,the,buckets,param,in,the,type,of,incoming,elements,return,the,builder,where,the,remaining,of,the,configuration,parameters,for,the,sink,can,be,configured,in,order,to,instantiate,the,sink,call,link,row,format,builder,build,after,specifying,the,desired,parameters;public,static,in,streaming,file,sink,bulk,format,builder,in,string,for,bulk,format,final,path,base,path,final,bulk,writer,factory,in,writer,factory,return,new,streaming,file,sink,bulk,format,builder,base,path,writer,factory,new,date,time,bucket,assigner
StreamingFileSink -> public StreamingFileSink(Path basePath);1531767242;Creates a new {@code StreamingFileSink} that writes files to the given base directory.__<p>This uses a {@link DateTimeBucketer} as {@link Bucketer} and a {@link SimpleStringEncoder} as a writer.__@param basePath The directory to which to write the bucket files.;public StreamingFileSink(Path basePath) {_		this(basePath, new DefaultBucketFactory<>())__	};creates,a,new,code,streaming,file,sink,that,writes,files,to,the,given,base,directory,p,this,uses,a,link,date,time,bucketer,as,link,bucketer,and,a,link,simple,string,encoder,as,a,writer,param,base,path,the,directory,to,which,to,write,the,bucket,files;public,streaming,file,sink,path,base,path,this,base,path,new,default,bucket,factory
StreamingFileSink -> public StreamingFileSink(Path basePath);1531861667;Creates a new {@code StreamingFileSink} that writes files to the given base directory.__<p>This uses a {@link DateTimeBucketer} as {@link Bucketer} and a {@link SimpleStringEncoder} as a writer.__@param basePath The directory to which to write the bucket files.;public StreamingFileSink(Path basePath) {_		this(basePath, new DefaultBucketFactory<>())__	};creates,a,new,code,streaming,file,sink,that,writes,files,to,the,given,base,directory,p,this,uses,a,link,date,time,bucketer,as,link,bucketer,and,a,link,simple,string,encoder,as,a,writer,param,base,path,the,directory,to,which,to,write,the,bucket,files;public,streaming,file,sink,path,base,path,this,base,path,new,default,bucket,factory
StreamingFileSink -> public static <IN> StreamingFileSink.RowFormatBuilder<IN, String> forRowFormat( 			final Path basePath, final Encoder<IN> encoder);1532095949;Creates the builder for a {@code StreamingFileSink} with row-encoding format._@param basePath the base path where all the buckets are going to be created as sub-directories._@param encoder the {@link Encoder} to be used when writing elements in the buckets._@param <IN> the type of incoming elements_@return The builder where the remaining of the configuration parameters for the sink can be configured._In order to instantiate the sink, call {@link RowFormatBuilder#build()} after specifying the desired parameters.;public static <IN> StreamingFileSink.RowFormatBuilder<IN, String> forRowFormat(_			final Path basePath, final Encoder<IN> encoder) {_		return new StreamingFileSink.RowFormatBuilder<>(basePath, encoder, new DateTimeBucketer<>())__	};creates,the,builder,for,a,code,streaming,file,sink,with,row,encoding,format,param,base,path,the,base,path,where,all,the,buckets,are,going,to,be,created,as,sub,directories,param,encoder,the,link,encoder,to,be,used,when,writing,elements,in,the,buckets,param,in,the,type,of,incoming,elements,return,the,builder,where,the,remaining,of,the,configuration,parameters,for,the,sink,can,be,configured,in,order,to,instantiate,the,sink,call,link,row,format,builder,build,after,specifying,the,desired,parameters;public,static,in,streaming,file,sink,row,format,builder,in,string,for,row,format,final,path,base,path,final,encoder,in,encoder,return,new,streaming,file,sink,row,format,builder,base,path,encoder,new,date,time,bucketer
StreamingFileSink -> public static <IN> StreamingFileSink.RowFormatBuilder<IN, String> forRowFormat( 			final Path basePath, final Encoder<IN> encoder);1532348102;Creates the builder for a {@code StreamingFileSink} with row-encoding format._@param basePath the base path where all the buckets are going to be created as sub-directories._@param encoder the {@link Encoder} to be used when writing elements in the buckets._@param <IN> the type of incoming elements_@return The builder where the remaining of the configuration parameters for the sink can be configured._In order to instantiate the sink, call {@link RowFormatBuilder#build()} after specifying the desired parameters.;public static <IN> StreamingFileSink.RowFormatBuilder<IN, String> forRowFormat(_			final Path basePath, final Encoder<IN> encoder) {_		return new StreamingFileSink.RowFormatBuilder<>(basePath, encoder, new DateTimeBucketer<>())__	};creates,the,builder,for,a,code,streaming,file,sink,with,row,encoding,format,param,base,path,the,base,path,where,all,the,buckets,are,going,to,be,created,as,sub,directories,param,encoder,the,link,encoder,to,be,used,when,writing,elements,in,the,buckets,param,in,the,type,of,incoming,elements,return,the,builder,where,the,remaining,of,the,configuration,parameters,for,the,sink,can,be,configured,in,order,to,instantiate,the,sink,call,link,row,format,builder,build,after,specifying,the,desired,parameters;public,static,in,streaming,file,sink,row,format,builder,in,string,for,row,format,final,path,base,path,final,encoder,in,encoder,return,new,streaming,file,sink,row,format,builder,base,path,encoder,new,date,time,bucketer
StreamingFileSink -> public static <IN> StreamingFileSink.RowFormatBuilder<IN, String> forRowFormat( 			final Path basePath, final Encoder<IN> encoder);1533028935;Creates the builder for a {@code StreamingFileSink} with row-encoding format._@param basePath the base path where all the buckets are going to be created as sub-directories._@param encoder the {@link Encoder} to be used when writing elements in the buckets._@param <IN> the type of incoming elements_@return The builder where the remaining of the configuration parameters for the sink can be configured._In order to instantiate the sink, call {@link RowFormatBuilder#build()} after specifying the desired parameters.;public static <IN> StreamingFileSink.RowFormatBuilder<IN, String> forRowFormat(_			final Path basePath, final Encoder<IN> encoder) {_		return new StreamingFileSink.RowFormatBuilder<>(basePath, encoder, new DateTimeBucketer<>())__	};creates,the,builder,for,a,code,streaming,file,sink,with,row,encoding,format,param,base,path,the,base,path,where,all,the,buckets,are,going,to,be,created,as,sub,directories,param,encoder,the,link,encoder,to,be,used,when,writing,elements,in,the,buckets,param,in,the,type,of,incoming,elements,return,the,builder,where,the,remaining,of,the,configuration,parameters,for,the,sink,can,be,configured,in,order,to,instantiate,the,sink,call,link,row,format,builder,build,after,specifying,the,desired,parameters;public,static,in,streaming,file,sink,row,format,builder,in,string,for,row,format,final,path,base,path,final,encoder,in,encoder,return,new,streaming,file,sink,row,format,builder,base,path,encoder,new,date,time,bucketer
StreamingFileSink -> public static <IN> StreamingFileSink.RowFormatBuilder<IN, String> forRowFormat( 			final Path basePath, final Encoder<IN> encoder);1533029605;Creates the builder for a {@code StreamingFileSink} with row-encoding format._@param basePath the base path where all the buckets are going to be created as sub-directories._@param encoder the {@link Encoder} to be used when writing elements in the buckets._@param <IN> the type of incoming elements_@return The builder where the remaining of the configuration parameters for the sink can be configured._In order to instantiate the sink, call {@link RowFormatBuilder#build()} after specifying the desired parameters.;public static <IN> StreamingFileSink.RowFormatBuilder<IN, String> forRowFormat(_			final Path basePath, final Encoder<IN> encoder) {_		return new StreamingFileSink.RowFormatBuilder<>(basePath, encoder, new DateTimeBucketer<>())__	};creates,the,builder,for,a,code,streaming,file,sink,with,row,encoding,format,param,base,path,the,base,path,where,all,the,buckets,are,going,to,be,created,as,sub,directories,param,encoder,the,link,encoder,to,be,used,when,writing,elements,in,the,buckets,param,in,the,type,of,incoming,elements,return,the,builder,where,the,remaining,of,the,configuration,parameters,for,the,sink,can,be,configured,in,order,to,instantiate,the,sink,call,link,row,format,builder,build,after,specifying,the,desired,parameters;public,static,in,streaming,file,sink,row,format,builder,in,string,for,row,format,final,path,base,path,final,encoder,in,encoder,return,new,streaming,file,sink,row,format,builder,base,path,encoder,new,date,time,bucketer
StreamingFileSink -> public static <IN> StreamingFileSink.RowFormatBuilder<IN, String> forRowFormat( 			final Path basePath, final Encoder<IN> encoder);1533029605;Creates the builder for a {@code StreamingFileSink} with row-encoding format._@param basePath the base path where all the buckets are going to be created as sub-directories._@param encoder the {@link Encoder} to be used when writing elements in the buckets._@param <IN> the type of incoming elements_@return The builder where the remaining of the configuration parameters for the sink can be configured._In order to instantiate the sink, call {@link RowFormatBuilder#build()} after specifying the desired parameters.;public static <IN> StreamingFileSink.RowFormatBuilder<IN, String> forRowFormat(_			final Path basePath, final Encoder<IN> encoder) {_		return new StreamingFileSink.RowFormatBuilder<>(basePath, encoder, new DateTimeBucketer<>())__	};creates,the,builder,for,a,code,streaming,file,sink,with,row,encoding,format,param,base,path,the,base,path,where,all,the,buckets,are,going,to,be,created,as,sub,directories,param,encoder,the,link,encoder,to,be,used,when,writing,elements,in,the,buckets,param,in,the,type,of,incoming,elements,return,the,builder,where,the,remaining,of,the,configuration,parameters,for,the,sink,can,be,configured,in,order,to,instantiate,the,sink,call,link,row,format,builder,build,after,specifying,the,desired,parameters;public,static,in,streaming,file,sink,row,format,builder,in,string,for,row,format,final,path,base,path,final,encoder,in,encoder,return,new,streaming,file,sink,row,format,builder,base,path,encoder,new,date,time,bucketer
StreamingFileSink -> public static <IN> StreamingFileSink.RowFormatBuilder<IN, String> forRowFormat( 			final Path basePath, final Encoder<IN> encoder);1533229113;Creates the builder for a {@code StreamingFileSink} with row-encoding format._@param basePath the base path where all the buckets are going to be created as sub-directories._@param encoder the {@link Encoder} to be used when writing elements in the buckets._@param <IN> the type of incoming elements_@return The builder where the remaining of the configuration parameters for the sink can be configured._In order to instantiate the sink, call {@link RowFormatBuilder#build()} after specifying the desired parameters.;public static <IN> StreamingFileSink.RowFormatBuilder<IN, String> forRowFormat(_			final Path basePath, final Encoder<IN> encoder) {_		return new StreamingFileSink.RowFormatBuilder<>(basePath, encoder, new DateTimeBucketAssigner<>())__	};creates,the,builder,for,a,code,streaming,file,sink,with,row,encoding,format,param,base,path,the,base,path,where,all,the,buckets,are,going,to,be,created,as,sub,directories,param,encoder,the,link,encoder,to,be,used,when,writing,elements,in,the,buckets,param,in,the,type,of,incoming,elements,return,the,builder,where,the,remaining,of,the,configuration,parameters,for,the,sink,can,be,configured,in,order,to,instantiate,the,sink,call,link,row,format,builder,build,after,specifying,the,desired,parameters;public,static,in,streaming,file,sink,row,format,builder,in,string,for,row,format,final,path,base,path,final,encoder,in,encoder,return,new,streaming,file,sink,row,format,builder,base,path,encoder,new,date,time,bucket,assigner
StreamingFileSink -> public static <IN> StreamingFileSink.RowFormatBuilder<IN, String> forRowFormat( 			final Path basePath, final Encoder<IN> encoder);1540463363;Creates the builder for a {@code StreamingFileSink} with row-encoding format._@param basePath the base path where all the buckets are going to be created as sub-directories._@param encoder the {@link Encoder} to be used when writing elements in the buckets._@param <IN> the type of incoming elements_@return The builder where the remaining of the configuration parameters for the sink can be configured._In order to instantiate the sink, call {@link RowFormatBuilder#build()} after specifying the desired parameters.;public static <IN> StreamingFileSink.RowFormatBuilder<IN, String> forRowFormat(_			final Path basePath, final Encoder<IN> encoder) {_		return new StreamingFileSink.RowFormatBuilder<>(basePath, encoder, new DateTimeBucketAssigner<>())__	};creates,the,builder,for,a,code,streaming,file,sink,with,row,encoding,format,param,base,path,the,base,path,where,all,the,buckets,are,going,to,be,created,as,sub,directories,param,encoder,the,link,encoder,to,be,used,when,writing,elements,in,the,buckets,param,in,the,type,of,incoming,elements,return,the,builder,where,the,remaining,of,the,configuration,parameters,for,the,sink,can,be,configured,in,order,to,instantiate,the,sink,call,link,row,format,builder,build,after,specifying,the,desired,parameters;public,static,in,streaming,file,sink,row,format,builder,in,string,for,row,format,final,path,base,path,final,encoder,in,encoder,return,new,streaming,file,sink,row,format,builder,base,path,encoder,new,date,time,bucket,assigner
StreamingFileSink -> public static <IN> StreamingFileSink.RowFormatBuilder<IN, String> forRowFormat( 			final Path basePath, final Encoder<IN> encoder);1541059170;Creates the builder for a {@code StreamingFileSink} with row-encoding format._@param basePath the base path where all the buckets are going to be created as sub-directories._@param encoder the {@link Encoder} to be used when writing elements in the buckets._@param <IN> the type of incoming elements_@return The builder where the remaining of the configuration parameters for the sink can be configured._In order to instantiate the sink, call {@link RowFormatBuilder#build()} after specifying the desired parameters.;public static <IN> StreamingFileSink.RowFormatBuilder<IN, String> forRowFormat(_			final Path basePath, final Encoder<IN> encoder) {_		return new StreamingFileSink.RowFormatBuilder<>(basePath, encoder, new DateTimeBucketAssigner<>())__	};creates,the,builder,for,a,code,streaming,file,sink,with,row,encoding,format,param,base,path,the,base,path,where,all,the,buckets,are,going,to,be,created,as,sub,directories,param,encoder,the,link,encoder,to,be,used,when,writing,elements,in,the,buckets,param,in,the,type,of,incoming,elements,return,the,builder,where,the,remaining,of,the,configuration,parameters,for,the,sink,can,be,configured,in,order,to,instantiate,the,sink,call,link,row,format,builder,build,after,specifying,the,desired,parameters;public,static,in,streaming,file,sink,row,format,builder,in,string,for,row,format,final,path,base,path,final,encoder,in,encoder,return,new,streaming,file,sink,row,format,builder,base,path,encoder,new,date,time,bucket,assigner
