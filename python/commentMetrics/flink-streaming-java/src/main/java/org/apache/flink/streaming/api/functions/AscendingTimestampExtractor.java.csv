# id;timestamp;commentText;codeText;commentWords;codeWords
AscendingTimestampExtractor -> public abstract long extractAscendingTimestamp(T element, long currentTimestamp)_;1445418103;Extracts a timestamp from an element. The timestamp must be monotonically increasing.__@param element The element that the timestamp is extracted from._@param currentTimestamp The current internal timestamp of the element._@return The new timestamp.;public abstract long extractAscendingTimestamp(T element, long currentTimestamp)_;extracts,a,timestamp,from,an,element,the,timestamp,must,be,monotonically,increasing,param,element,the,element,that,the,timestamp,is,extracted,from,param,current,timestamp,the,current,internal,timestamp,of,the,element,return,the,new,timestamp;public,abstract,long,extract,ascending,timestamp,t,element,long,current,timestamp
AscendingTimestampExtractor -> public abstract long extractAscendingTimestamp(T element, long currentTimestamp)_;1455486690;Extracts a timestamp from an element. The timestamp must be monotonically increasing.__@param element The element that the timestamp is extracted from._@param currentTimestamp The current internal timestamp of the element._@return The new timestamp.;public abstract long extractAscendingTimestamp(T element, long currentTimestamp)_;extracts,a,timestamp,from,an,element,the,timestamp,must,be,monotonically,increasing,param,element,the,element,that,the,timestamp,is,extracted,from,param,current,timestamp,the,current,internal,timestamp,of,the,element,return,the,new,timestamp;public,abstract,long,extract,ascending,timestamp,t,element,long,current,timestamp
AscendingTimestampExtractor -> public AscendingTimestampExtractor<T> withViolationHandler(MonotonyViolationHandler handler);1455705336;Sets the handler for violations to the ascending timestamp order.__@param handler The violation handler to use._@return This extractor.;public AscendingTimestampExtractor<T> withViolationHandler(MonotonyViolationHandler handler) {_		this.violationHandler = requireNonNull(handler)__		return this__	};sets,the,handler,for,violations,to,the,ascending,timestamp,order,param,handler,the,violation,handler,to,use,return,this,extractor;public,ascending,timestamp,extractor,t,with,violation,handler,monotony,violation,handler,handler,this,violation,handler,require,non,null,handler,return,this
AscendingTimestampExtractor -> public AscendingTimestampExtractor<T> withViolationHandler(MonotonyViolationHandler handler);1456347641;Sets the handler for violations to the ascending timestamp order.__@param handler The violation handler to use._@return This extractor.;public AscendingTimestampExtractor<T> withViolationHandler(MonotonyViolationHandler handler) {_		this.violationHandler = requireNonNull(handler)__		return this__	};sets,the,handler,for,violations,to,the,ascending,timestamp,order,param,handler,the,violation,handler,to,use,return,this,extractor;public,ascending,timestamp,extractor,t,with,violation,handler,monotony,violation,handler,handler,this,violation,handler,require,non,null,handler,return,this
AscendingTimestampExtractor -> MonotonyViolationHandler -> void handleViolation(long elementTimestamp, long lastTimestamp)_;1455705336;Called when the property of monotonously ascending timestamps is violated, i.e.,_when {@code elementTimestamp < lastTimestamp}.__@param elementTimestamp The timestamp of the current element._@param lastTimestamp The last timestamp.;void handleViolation(long elementTimestamp, long lastTimestamp)_;called,when,the,property,of,monotonously,ascending,timestamps,is,violated,i,e,when,code,element,timestamp,last,timestamp,param,element,timestamp,the,timestamp,of,the,current,element,param,last,timestamp,the,last,timestamp;void,handle,violation,long,element,timestamp,long,last,timestamp
AscendingTimestampExtractor -> MonotonyViolationHandler -> void handleViolation(long elementTimestamp, long lastTimestamp)_;1456347641;Called when the property of monotonously ascending timestamps is violated, i.e.,_when {@code elementTimestamp < lastTimestamp}.__@param elementTimestamp The timestamp of the current element._@param lastTimestamp The last timestamp.;void handleViolation(long elementTimestamp, long lastTimestamp)_;called,when,the,property,of,monotonously,ascending,timestamps,is,violated,i,e,when,code,element,timestamp,last,timestamp,param,element,timestamp,the,timestamp,of,the,current,element,param,last,timestamp,the,last,timestamp;void,handle,violation,long,element,timestamp,long,last,timestamp
