# id;timestamp;commentText;codeText;commentWords;codeWords
LocalStreamEnvironment -> public LocalStreamEnvironment(Configuration config);1445418103;Creates a new local stream environment that configures its local executor with the given configuration.__@param config The configuration used to configure the local executor.;public LocalStreamEnvironment(Configuration config) {_		if (!ExecutionEnvironment.areExplicitEnvironmentsAllowed()) {_			throw new InvalidProgramException(_					"The LocalStreamEnvironment cannot be used when submitting a program through a client, " +_							"or running in a TestEnvironment context.")__		}_		_		this.conf = config == null ? new Configuration() : config__	};creates,a,new,local,stream,environment,that,configures,its,local,executor,with,the,given,configuration,param,config,the,configuration,used,to,configure,the,local,executor;public,local,stream,environment,configuration,config,if,execution,environment,are,explicit,environments,allowed,throw,new,invalid,program,exception,the,local,stream,environment,cannot,be,used,when,submitting,a,program,through,a,client,or,running,in,a,test,environment,context,this,conf,config,null,new,configuration,config
LocalStreamEnvironment -> public LocalStreamEnvironment(Configuration config);1446400804;Creates a new local stream environment that configures its local executor with the given configuration.__@param config The configuration used to configure the local executor.;public LocalStreamEnvironment(Configuration config) {_		if (!ExecutionEnvironment.areExplicitEnvironmentsAllowed()) {_			throw new InvalidProgramException(_					"The LocalStreamEnvironment cannot be used when submitting a program through a client, " +_							"or running in a TestEnvironment context.")__		}_		_		this.conf = config == null ? new Configuration() : config__	};creates,a,new,local,stream,environment,that,configures,its,local,executor,with,the,given,configuration,param,config,the,configuration,used,to,configure,the,local,executor;public,local,stream,environment,configuration,config,if,execution,environment,are,explicit,environments,allowed,throw,new,invalid,program,exception,the,local,stream,environment,cannot,be,used,when,submitting,a,program,through,a,client,or,running,in,a,test,environment,context,this,conf,config,null,new,configuration,config
LocalStreamEnvironment -> public LocalStreamEnvironment(Configuration config);1448299950;Creates a new local stream environment that configures its local executor with the given configuration.__@param config The configuration used to configure the local executor.;public LocalStreamEnvironment(Configuration config) {_		if (!ExecutionEnvironment.areExplicitEnvironmentsAllowed()) {_			throw new InvalidProgramException(_					"The LocalStreamEnvironment cannot be used when submitting a program through a client, " +_							"or running in a TestEnvironment context.")__		}_		_		this.conf = config == null ? new Configuration() : config__	};creates,a,new,local,stream,environment,that,configures,its,local,executor,with,the,given,configuration,param,config,the,configuration,used,to,configure,the,local,executor;public,local,stream,environment,configuration,config,if,execution,environment,are,explicit,environments,allowed,throw,new,invalid,program,exception,the,local,stream,environment,cannot,be,used,when,submitting,a,program,through,a,client,or,running,in,a,test,environment,context,this,conf,config,null,new,configuration,config
LocalStreamEnvironment -> public LocalStreamEnvironment(Configuration config);1449671590;Creates a new local stream environment that configures its local executor with the given configuration.__@param config The configuration used to configure the local executor.;public LocalStreamEnvironment(Configuration config) {_		if (!ExecutionEnvironment.areExplicitEnvironmentsAllowed()) {_			throw new InvalidProgramException(_					"The LocalStreamEnvironment cannot be used when submitting a program through a client, " +_							"or running in a TestEnvironment context.")__		}_		_		this.conf = config == null ? new Configuration() : config__	};creates,a,new,local,stream,environment,that,configures,its,local,executor,with,the,given,configuration,param,config,the,configuration,used,to,configure,the,local,executor;public,local,stream,environment,configuration,config,if,execution,environment,are,explicit,environments,allowed,throw,new,invalid,program,exception,the,local,stream,environment,cannot,be,used,when,submitting,a,program,through,a,client,or,running,in,a,test,environment,context,this,conf,config,null,new,configuration,config
LocalStreamEnvironment -> public LocalStreamEnvironment(Configuration config);1454679829;Creates a new local stream environment that configures its local executor with the given configuration.__@param config The configuration used to configure the local executor.;public LocalStreamEnvironment(Configuration config) {_		if (!ExecutionEnvironment.areExplicitEnvironmentsAllowed()) {_			throw new InvalidProgramException(_					"The LocalStreamEnvironment cannot be used when submitting a program through a client, " +_							"or running in a TestEnvironment context.")__		}_		_		this.conf = config == null ? new Configuration() : config__	};creates,a,new,local,stream,environment,that,configures,its,local,executor,with,the,given,configuration,param,config,the,configuration,used,to,configure,the,local,executor;public,local,stream,environment,configuration,config,if,execution,environment,are,explicit,environments,allowed,throw,new,invalid,program,exception,the,local,stream,environment,cannot,be,used,when,submitting,a,program,through,a,client,or,running,in,a,test,environment,context,this,conf,config,null,new,configuration,config
LocalStreamEnvironment -> public LocalStreamEnvironment(Configuration config);1489782894;Creates a new local stream environment that configures its local executor with the given configuration.__@param config The configuration used to configure the local executor.;public LocalStreamEnvironment(Configuration config) {_		this(config, defaultLocalParallelism)__	};creates,a,new,local,stream,environment,that,configures,its,local,executor,with,the,given,configuration,param,config,the,configuration,used,to,configure,the,local,executor;public,local,stream,environment,configuration,config,this,config,default,local,parallelism
LocalStreamEnvironment -> public LocalStreamEnvironment(Configuration config);1491500150;Creates a new local stream environment that configures its local executor with the given configuration.__@param config The configuration used to configure the local executor.;public LocalStreamEnvironment(Configuration config) {_		this(config, defaultLocalParallelism)__	};creates,a,new,local,stream,environment,that,configures,its,local,executor,with,the,given,configuration,param,config,the,configuration,used,to,configure,the,local,executor;public,local,stream,environment,configuration,config,this,config,default,local,parallelism
LocalStreamEnvironment -> public LocalStreamEnvironment(Configuration config);1492530130;Creates a new local stream environment that configures its local executor with the given configuration.__@param config The configuration used to configure the local executor.;public LocalStreamEnvironment(Configuration config) {_		if (!ExecutionEnvironment.areExplicitEnvironmentsAllowed()) {_			throw new InvalidProgramException(_					"The LocalStreamEnvironment cannot be used when submitting a program through a client, " +_							"or running in a TestEnvironment context.")__		}_		_		this.conf = config == null ? new Configuration() : config__	};creates,a,new,local,stream,environment,that,configures,its,local,executor,with,the,given,configuration,param,config,the,configuration,used,to,configure,the,local,executor;public,local,stream,environment,configuration,config,if,execution,environment,are,explicit,environments,allowed,throw,new,invalid,program,exception,the,local,stream,environment,cannot,be,used,when,submitting,a,program,through,a,client,or,running,in,a,test,environment,context,this,conf,config,null,new,configuration,config
LocalStreamEnvironment -> public LocalStreamEnvironment(Configuration config);1493195810;Creates a new local stream environment that configures its local executor with the given configuration.__@param config The configuration used to configure the local executor.;public LocalStreamEnvironment(Configuration config) {_		if (!ExecutionEnvironment.areExplicitEnvironmentsAllowed()) {_			throw new InvalidProgramException(_					"The LocalStreamEnvironment cannot be used when submitting a program through a client, " +_							"or running in a TestEnvironment context.")__		}_		_		this.conf = config == null ? new Configuration() : config__	};creates,a,new,local,stream,environment,that,configures,its,local,executor,with,the,given,configuration,param,config,the,configuration,used,to,configure,the,local,executor;public,local,stream,environment,configuration,config,if,execution,environment,are,explicit,environments,allowed,throw,new,invalid,program,exception,the,local,stream,environment,cannot,be,used,when,submitting,a,program,through,a,client,or,running,in,a,test,environment,context,this,conf,config,null,new,configuration,config
LocalStreamEnvironment -> public LocalStreamEnvironment(Configuration config);1493195810;Creates a new local stream environment that configures its local executor with the given configuration.__@param config The configuration used to configure the local executor.;public LocalStreamEnvironment(Configuration config) {_		if (!ExecutionEnvironment.areExplicitEnvironmentsAllowed()) {_			throw new InvalidProgramException(_					"The LocalStreamEnvironment cannot be used when submitting a program through a client, " +_							"or running in a TestEnvironment context.")__		}__		this.conf = config == null ? new Configuration() : config__	};creates,a,new,local,stream,environment,that,configures,its,local,executor,with,the,given,configuration,param,config,the,configuration,used,to,configure,the,local,executor;public,local,stream,environment,configuration,config,if,execution,environment,are,explicit,environments,allowed,throw,new,invalid,program,exception,the,local,stream,environment,cannot,be,used,when,submitting,a,program,through,a,client,or,running,in,a,test,environment,context,this,conf,config,null,new,configuration,config
LocalStreamEnvironment -> public LocalStreamEnvironment(Configuration config);1495484544;Creates a new local stream environment that configures its local executor with the given configuration.__@param config The configuration used to configure the local executor.;public LocalStreamEnvironment(Configuration config) {_		if (!ExecutionEnvironment.areExplicitEnvironmentsAllowed()) {_			throw new InvalidProgramException(_					"The LocalStreamEnvironment cannot be used when submitting a program through a client, " +_							"or running in a TestEnvironment context.")__		}__		this.conf = config == null ? new Configuration() : config__	};creates,a,new,local,stream,environment,that,configures,its,local,executor,with,the,given,configuration,param,config,the,configuration,used,to,configure,the,local,executor;public,local,stream,environment,configuration,config,if,execution,environment,are,explicit,environments,allowed,throw,new,invalid,program,exception,the,local,stream,environment,cannot,be,used,when,submitting,a,program,through,a,client,or,running,in,a,test,environment,context,this,conf,config,null,new,configuration,config
LocalStreamEnvironment -> public LocalStreamEnvironment(Configuration config);1519121817;Creates a new local stream environment that configures its local executor with the given configuration.__@param config The configuration used to configure the local executor.;public LocalStreamEnvironment(Configuration config) {_		if (!ExecutionEnvironment.areExplicitEnvironmentsAllowed()) {_			throw new InvalidProgramException(_					"The LocalStreamEnvironment cannot be used when submitting a program through a client, " +_							"or running in a TestEnvironment context.")__		}__		this.conf = config == null ? new Configuration() : config__	};creates,a,new,local,stream,environment,that,configures,its,local,executor,with,the,given,configuration,param,config,the,configuration,used,to,configure,the,local,executor;public,local,stream,environment,configuration,config,if,execution,environment,are,explicit,environments,allowed,throw,new,invalid,program,exception,the,local,stream,environment,cannot,be,used,when,submitting,a,program,through,a,client,or,running,in,a,test,environment,context,this,conf,config,null,new,configuration,config
LocalStreamEnvironment -> @Override 	public JobExecutionResult execute(String jobName) throws Exception;1445418103;Executes the JobGraph of the on a mini cluster of CLusterUtil with a user_specified name.__@param jobName_name of the job_@return The result of the job execution, containing elapsed time and accumulators.;@Override_	public JobExecutionResult execute(String jobName) throws Exception {_		_		JobGraph jobGraph = getStreamGraph().getJobGraph(jobName)__		_		Configuration configuration = new Configuration()__		configuration.addAll(jobGraph.getJobConfiguration())___		configuration.setLong(ConfigConstants.TASK_MANAGER_MEMORY_SIZE_KEY, -1L)__		configuration.setInteger(ConfigConstants.TASK_MANAGER_NUM_TASK_SLOTS, getParallelism())__		_		_		configuration.addAll(this.conf)__		_		if (LOG.isInfoEnabled()) {_			LOG.info("Running job on local embedded Flink mini cluster")__		}__		LocalFlinkMiniCluster exec = new LocalFlinkMiniCluster(configuration, true, StreamingMode.STREAMING)__		try {_			exec.start()__			return exec.submitJobAndWait(jobGraph, getConfig().isSysoutLoggingEnabled())__		}_		finally {_			transformations.clear()__			exec.stop()__		}_	};executes,the,job,graph,of,the,on,a,mini,cluster,of,cluster,util,with,a,user,specified,name,param,job,name,name,of,the,job,return,the,result,of,the,job,execution,containing,elapsed,time,and,accumulators;override,public,job,execution,result,execute,string,job,name,throws,exception,job,graph,job,graph,get,stream,graph,get,job,graph,job,name,configuration,configuration,new,configuration,configuration,add,all,job,graph,get,job,configuration,configuration,set,long,config,constants,1l,configuration,set,integer,config,constants,get,parallelism,configuration,add,all,this,conf,if,log,is,info,enabled,log,info,running,job,on,local,embedded,flink,mini,cluster,local,flink,mini,cluster,exec,new,local,flink,mini,cluster,configuration,true,streaming,mode,streaming,try,exec,start,return,exec,submit,job,and,wait,job,graph,get,config,is,sysout,logging,enabled,finally,transformations,clear,exec,stop
LocalStreamEnvironment -> @Override 	public JobExecutionResult execute(String jobName) throws Exception;1446400804;Executes the JobGraph of the on a mini cluster of CLusterUtil with a user_specified name.__@param jobName_name of the job_@return The result of the job execution, containing elapsed time and accumulators.;@Override_	public JobExecutionResult execute(String jobName) throws Exception {_		_		StreamGraph streamGraph = getStreamGraph()__		streamGraph.setJobName(jobName)___		JobGraph jobGraph = streamGraph.getJobGraph()___		Configuration configuration = new Configuration()__		configuration.addAll(jobGraph.getJobConfiguration())___		configuration.setLong(ConfigConstants.TASK_MANAGER_MEMORY_SIZE_KEY, -1L)__		configuration.setInteger(ConfigConstants.TASK_MANAGER_NUM_TASK_SLOTS, getParallelism())__		_		_		configuration.addAll(this.conf)__		_		if (LOG.isInfoEnabled()) {_			LOG.info("Running job on local embedded Flink mini cluster")__		}__		LocalFlinkMiniCluster exec = new LocalFlinkMiniCluster(configuration, true, StreamingMode.STREAMING)__		try {_			exec.start()__			return exec.submitJobAndWait(jobGraph, getConfig().isSysoutLoggingEnabled())__		}_		finally {_			transformations.clear()__			exec.stop()__		}_	};executes,the,job,graph,of,the,on,a,mini,cluster,of,cluster,util,with,a,user,specified,name,param,job,name,name,of,the,job,return,the,result,of,the,job,execution,containing,elapsed,time,and,accumulators;override,public,job,execution,result,execute,string,job,name,throws,exception,stream,graph,stream,graph,get,stream,graph,stream,graph,set,job,name,job,name,job,graph,job,graph,stream,graph,get,job,graph,configuration,configuration,new,configuration,configuration,add,all,job,graph,get,job,configuration,configuration,set,long,config,constants,1l,configuration,set,integer,config,constants,get,parallelism,configuration,add,all,this,conf,if,log,is,info,enabled,log,info,running,job,on,local,embedded,flink,mini,cluster,local,flink,mini,cluster,exec,new,local,flink,mini,cluster,configuration,true,streaming,mode,streaming,try,exec,start,return,exec,submit,job,and,wait,job,graph,get,config,is,sysout,logging,enabled,finally,transformations,clear,exec,stop
LocalStreamEnvironment -> @Override 	public JobExecutionResult execute(String jobName) throws Exception;1448299950;Executes the JobGraph of the on a mini cluster of CLusterUtil with a user_specified name.__@param jobName_name of the job_@return The result of the job execution, containing elapsed time and accumulators.;@Override_	public JobExecutionResult execute(String jobName) throws Exception {_		_		StreamGraph streamGraph = getStreamGraph()__		streamGraph.setJobName(jobName)___		JobGraph jobGraph = streamGraph.getJobGraph()___		Configuration configuration = new Configuration()__		configuration.addAll(jobGraph.getJobConfiguration())___		configuration.setLong(ConfigConstants.TASK_MANAGER_MEMORY_SIZE_KEY, -1L)__		configuration.setInteger(ConfigConstants.TASK_MANAGER_NUM_TASK_SLOTS, jobGraph.getMaximumParallelism())__		_		_		configuration.addAll(this.conf)__		_		if (LOG.isInfoEnabled()) {_			LOG.info("Running job on local embedded Flink mini cluster")__		}__		LocalFlinkMiniCluster exec = new LocalFlinkMiniCluster(configuration, true, StreamingMode.STREAMING)__		try {_			exec.start()__			return exec.submitJobAndWait(jobGraph, getConfig().isSysoutLoggingEnabled())__		}_		finally {_			transformations.clear()__			exec.stop()__		}_	};executes,the,job,graph,of,the,on,a,mini,cluster,of,cluster,util,with,a,user,specified,name,param,job,name,name,of,the,job,return,the,result,of,the,job,execution,containing,elapsed,time,and,accumulators;override,public,job,execution,result,execute,string,job,name,throws,exception,stream,graph,stream,graph,get,stream,graph,stream,graph,set,job,name,job,name,job,graph,job,graph,stream,graph,get,job,graph,configuration,configuration,new,configuration,configuration,add,all,job,graph,get,job,configuration,configuration,set,long,config,constants,1l,configuration,set,integer,config,constants,job,graph,get,maximum,parallelism,configuration,add,all,this,conf,if,log,is,info,enabled,log,info,running,job,on,local,embedded,flink,mini,cluster,local,flink,mini,cluster,exec,new,local,flink,mini,cluster,configuration,true,streaming,mode,streaming,try,exec,start,return,exec,submit,job,and,wait,job,graph,get,config,is,sysout,logging,enabled,finally,transformations,clear,exec,stop
LocalStreamEnvironment -> @Override 	public JobExecutionResult execute(String jobName) throws Exception;1449671590;Executes the JobGraph of the on a mini cluster of CLusterUtil with a user_specified name.__@param jobName_name of the job_@return The result of the job execution, containing elapsed time and accumulators.;@Override_	public JobExecutionResult execute(String jobName) throws Exception {_		_		StreamGraph streamGraph = getStreamGraph()__		streamGraph.setJobName(jobName)___		JobGraph jobGraph = streamGraph.getJobGraph()___		Configuration configuration = new Configuration()__		configuration.addAll(jobGraph.getJobConfiguration())___		configuration.setLong(ConfigConstants.TASK_MANAGER_MEMORY_SIZE_KEY, -1L)__		configuration.setInteger(ConfigConstants.TASK_MANAGER_NUM_TASK_SLOTS, jobGraph.getMaximumParallelism())__		_		_		configuration.addAll(this.conf)__		_		if (LOG.isInfoEnabled()) {_			LOG.info("Running job on local embedded Flink mini cluster")__		}__		LocalFlinkMiniCluster exec = new LocalFlinkMiniCluster(configuration, true)__		try {_			exec.start()__			return exec.submitJobAndWait(jobGraph, getConfig().isSysoutLoggingEnabled())__		}_		finally {_			transformations.clear()__			exec.stop()__		}_	};executes,the,job,graph,of,the,on,a,mini,cluster,of,cluster,util,with,a,user,specified,name,param,job,name,name,of,the,job,return,the,result,of,the,job,execution,containing,elapsed,time,and,accumulators;override,public,job,execution,result,execute,string,job,name,throws,exception,stream,graph,stream,graph,get,stream,graph,stream,graph,set,job,name,job,name,job,graph,job,graph,stream,graph,get,job,graph,configuration,configuration,new,configuration,configuration,add,all,job,graph,get,job,configuration,configuration,set,long,config,constants,1l,configuration,set,integer,config,constants,job,graph,get,maximum,parallelism,configuration,add,all,this,conf,if,log,is,info,enabled,log,info,running,job,on,local,embedded,flink,mini,cluster,local,flink,mini,cluster,exec,new,local,flink,mini,cluster,configuration,true,try,exec,start,return,exec,submit,job,and,wait,job,graph,get,config,is,sysout,logging,enabled,finally,transformations,clear,exec,stop
LocalStreamEnvironment -> @Override 	public JobExecutionResult execute(String jobName) throws Exception;1454679829;Executes the JobGraph of the on a mini cluster of CLusterUtil with a user_specified name.__@param jobName_name of the job_@return The result of the job execution, containing elapsed time and accumulators.;@Override_	public JobExecutionResult execute(String jobName) throws Exception {_		_		StreamGraph streamGraph = getStreamGraph()__		streamGraph.setJobName(jobName)___		JobGraph jobGraph = streamGraph.getJobGraph()___		Configuration configuration = new Configuration()__		configuration.addAll(jobGraph.getJobConfiguration())___		configuration.setLong(ConfigConstants.TASK_MANAGER_MEMORY_SIZE_KEY, -1L)__		configuration.setInteger(ConfigConstants.TASK_MANAGER_NUM_TASK_SLOTS, jobGraph.getMaximumParallelism())__		_		_		configuration.addAll(this.conf)__		_		if (LOG.isInfoEnabled()) {_			LOG.info("Running job on local embedded Flink mini cluster")__		}__		LocalFlinkMiniCluster exec = new LocalFlinkMiniCluster(configuration, true)__		try {_			exec.start()__			return exec.submitJobAndWait(jobGraph, getConfig().isSysoutLoggingEnabled())__		}_		finally {_			transformations.clear()__			exec.stop()__		}_	};executes,the,job,graph,of,the,on,a,mini,cluster,of,cluster,util,with,a,user,specified,name,param,job,name,name,of,the,job,return,the,result,of,the,job,execution,containing,elapsed,time,and,accumulators;override,public,job,execution,result,execute,string,job,name,throws,exception,stream,graph,stream,graph,get,stream,graph,stream,graph,set,job,name,job,name,job,graph,job,graph,stream,graph,get,job,graph,configuration,configuration,new,configuration,configuration,add,all,job,graph,get,job,configuration,configuration,set,long,config,constants,1l,configuration,set,integer,config,constants,job,graph,get,maximum,parallelism,configuration,add,all,this,conf,if,log,is,info,enabled,log,info,running,job,on,local,embedded,flink,mini,cluster,local,flink,mini,cluster,exec,new,local,flink,mini,cluster,configuration,true,try,exec,start,return,exec,submit,job,and,wait,job,graph,get,config,is,sysout,logging,enabled,finally,transformations,clear,exec,stop
LocalStreamEnvironment -> @Override 	public JobExecutionResult execute(String jobName) throws Exception;1489782894;Executes the JobGraph of the on a mini cluster of CLusterUtil with a user_specified name.__@param jobName_name of the job_@return The result of the job execution, containing elapsed time and accumulators.;@Override_	public JobExecutionResult execute(String jobName) throws Exception {_		_		StreamGraph streamGraph = getStreamGraph()__		streamGraph.setJobName(jobName)___		JobGraph jobGraph = streamGraph.getJobGraph()___		Configuration configuration = new Configuration()__		configuration.addAll(jobGraph.getJobConfiguration())___		configuration.setLong(ConfigConstants.TASK_MANAGER_MEMORY_SIZE_KEY, -1L)__		configuration.setInteger(ConfigConstants.TASK_MANAGER_NUM_TASK_SLOTS, jobGraph.getMaximumParallelism())__		_		_		configuration.addAll(this.conf)__		_		if (LOG.isInfoEnabled()) {_			LOG.info("Running job on local embedded Flink mini cluster")__		}__		LocalFlinkMiniCluster exec = new LocalFlinkMiniCluster(configuration, true)__		try {_			exec.start()__			return exec.submitJobAndWait(jobGraph, getConfig().isSysoutLoggingEnabled())__		}_		finally {_			transformations.clear()__			exec.stop()__		}_	};executes,the,job,graph,of,the,on,a,mini,cluster,of,cluster,util,with,a,user,specified,name,param,job,name,name,of,the,job,return,the,result,of,the,job,execution,containing,elapsed,time,and,accumulators;override,public,job,execution,result,execute,string,job,name,throws,exception,stream,graph,stream,graph,get,stream,graph,stream,graph,set,job,name,job,name,job,graph,job,graph,stream,graph,get,job,graph,configuration,configuration,new,configuration,configuration,add,all,job,graph,get,job,configuration,configuration,set,long,config,constants,1l,configuration,set,integer,config,constants,job,graph,get,maximum,parallelism,configuration,add,all,this,conf,if,log,is,info,enabled,log,info,running,job,on,local,embedded,flink,mini,cluster,local,flink,mini,cluster,exec,new,local,flink,mini,cluster,configuration,true,try,exec,start,return,exec,submit,job,and,wait,job,graph,get,config,is,sysout,logging,enabled,finally,transformations,clear,exec,stop
LocalStreamEnvironment -> @Override 	public JobExecutionResult execute(String jobName) throws Exception;1491500150;Executes the JobGraph of the on a mini cluster of CLusterUtil with a user_specified name.__@param jobName_name of the job_@return The result of the job execution, containing elapsed time and accumulators.;@Override_	public JobExecutionResult execute(String jobName) throws Exception {_		_		StreamGraph streamGraph = getStreamGraph()__		streamGraph.setJobName(jobName)___		JobGraph jobGraph = streamGraph.getJobGraph()___		Configuration configuration = new Configuration()__		configuration.addAll(jobGraph.getJobConfiguration())___		configuration.setLong(TaskManagerOptions.MANAGED_MEMORY_SIZE, -1L)__		configuration.setInteger(ConfigConstants.TASK_MANAGER_NUM_TASK_SLOTS, jobGraph.getMaximumParallelism())__		_		_		configuration.addAll(this.conf)__		_		if (LOG.isInfoEnabled()) {_			LOG.info("Running job on local embedded Flink mini cluster")__		}__		LocalFlinkMiniCluster exec = new LocalFlinkMiniCluster(configuration, true)__		try {_			exec.start()__			return exec.submitJobAndWait(jobGraph, getConfig().isSysoutLoggingEnabled())__		}_		finally {_			transformations.clear()__			exec.stop()__		}_	};executes,the,job,graph,of,the,on,a,mini,cluster,of,cluster,util,with,a,user,specified,name,param,job,name,name,of,the,job,return,the,result,of,the,job,execution,containing,elapsed,time,and,accumulators;override,public,job,execution,result,execute,string,job,name,throws,exception,stream,graph,stream,graph,get,stream,graph,stream,graph,set,job,name,job,name,job,graph,job,graph,stream,graph,get,job,graph,configuration,configuration,new,configuration,configuration,add,all,job,graph,get,job,configuration,configuration,set,long,task,manager,options,1l,configuration,set,integer,config,constants,job,graph,get,maximum,parallelism,configuration,add,all,this,conf,if,log,is,info,enabled,log,info,running,job,on,local,embedded,flink,mini,cluster,local,flink,mini,cluster,exec,new,local,flink,mini,cluster,configuration,true,try,exec,start,return,exec,submit,job,and,wait,job,graph,get,config,is,sysout,logging,enabled,finally,transformations,clear,exec,stop
LocalStreamEnvironment -> @Override 	public JobExecutionResult execute(String jobName) throws Exception;1492530130;Executes the JobGraph of the on a mini cluster of CLusterUtil with a user_specified name.__@param jobName_name of the job_@return The result of the job execution, containing elapsed time and accumulators.;@Override_	public JobExecutionResult execute(String jobName) throws Exception {_		_		StreamGraph streamGraph = getStreamGraph()__		streamGraph.setJobName(jobName)___		JobGraph jobGraph = streamGraph.getJobGraph()___		Configuration configuration = new Configuration()__		configuration.addAll(jobGraph.getJobConfiguration())___		configuration.setLong(TaskManagerOptions.MANAGED_MEMORY_SIZE, -1L)__		configuration.setInteger(ConfigConstants.TASK_MANAGER_NUM_TASK_SLOTS, jobGraph.getMaximumParallelism())__		_		_		configuration.addAll(this.conf)__		_		if (LOG.isInfoEnabled()) {_			LOG.info("Running job on local embedded Flink mini cluster")__		}__		LocalFlinkMiniCluster exec = new LocalFlinkMiniCluster(configuration, true)__		try {_			exec.start()__			return exec.submitJobAndWait(jobGraph, getConfig().isSysoutLoggingEnabled())__		}_		finally {_			transformations.clear()__			exec.stop()__		}_	};executes,the,job,graph,of,the,on,a,mini,cluster,of,cluster,util,with,a,user,specified,name,param,job,name,name,of,the,job,return,the,result,of,the,job,execution,containing,elapsed,time,and,accumulators;override,public,job,execution,result,execute,string,job,name,throws,exception,stream,graph,stream,graph,get,stream,graph,stream,graph,set,job,name,job,name,job,graph,job,graph,stream,graph,get,job,graph,configuration,configuration,new,configuration,configuration,add,all,job,graph,get,job,configuration,configuration,set,long,task,manager,options,1l,configuration,set,integer,config,constants,job,graph,get,maximum,parallelism,configuration,add,all,this,conf,if,log,is,info,enabled,log,info,running,job,on,local,embedded,flink,mini,cluster,local,flink,mini,cluster,exec,new,local,flink,mini,cluster,configuration,true,try,exec,start,return,exec,submit,job,and,wait,job,graph,get,config,is,sysout,logging,enabled,finally,transformations,clear,exec,stop
LocalStreamEnvironment -> @Override 	public JobExecutionResult execute(String jobName) throws Exception;1493195810;Executes the JobGraph of the on a mini cluster of CLusterUtil with a user_specified name.__@param jobName_name of the job_@return The result of the job execution, containing elapsed time and accumulators.;@Override_	public JobExecutionResult execute(String jobName) throws Exception {_		_		StreamGraph streamGraph = getStreamGraph()__		streamGraph.setJobName(jobName)___		JobGraph jobGraph = streamGraph.getJobGraph()___		Configuration configuration = new Configuration()__		configuration.addAll(jobGraph.getJobConfiguration())___		configuration.setLong(TaskManagerOptions.MANAGED_MEMORY_SIZE, -1L)__		configuration.setInteger(ConfigConstants.TASK_MANAGER_NUM_TASK_SLOTS, jobGraph.getMaximumParallelism())__		_		_		configuration.addAll(this.conf)__		_		if (LOG.isInfoEnabled()) {_			LOG.info("Running job on local embedded Flink mini cluster")__		}__		LocalFlinkMiniCluster exec = new LocalFlinkMiniCluster(configuration, true)__		try {_			exec.start()__			return exec.submitJobAndWait(jobGraph, getConfig().isSysoutLoggingEnabled())__		}_		finally {_			transformations.clear()__			exec.stop()__		}_	};executes,the,job,graph,of,the,on,a,mini,cluster,of,cluster,util,with,a,user,specified,name,param,job,name,name,of,the,job,return,the,result,of,the,job,execution,containing,elapsed,time,and,accumulators;override,public,job,execution,result,execute,string,job,name,throws,exception,stream,graph,stream,graph,get,stream,graph,stream,graph,set,job,name,job,name,job,graph,job,graph,stream,graph,get,job,graph,configuration,configuration,new,configuration,configuration,add,all,job,graph,get,job,configuration,configuration,set,long,task,manager,options,1l,configuration,set,integer,config,constants,job,graph,get,maximum,parallelism,configuration,add,all,this,conf,if,log,is,info,enabled,log,info,running,job,on,local,embedded,flink,mini,cluster,local,flink,mini,cluster,exec,new,local,flink,mini,cluster,configuration,true,try,exec,start,return,exec,submit,job,and,wait,job,graph,get,config,is,sysout,logging,enabled,finally,transformations,clear,exec,stop
LocalStreamEnvironment -> @Override 	public JobExecutionResult execute(String jobName) throws Exception;1493195810;Executes the JobGraph of the on a mini cluster of CLusterUtil with a user_specified name.__@param jobName_name of the job_@return The result of the job execution, containing elapsed time and accumulators.;@Override_	public JobExecutionResult execute(String jobName) throws Exception {_		_		StreamGraph streamGraph = getStreamGraph()__		streamGraph.setJobName(jobName)___		JobGraph jobGraph = streamGraph.getJobGraph()___		Configuration configuration = new Configuration()__		configuration.addAll(jobGraph.getJobConfiguration())___		configuration.setLong(TaskManagerOptions.MANAGED_MEMORY_SIZE, -1L)__		configuration.setInteger(ConfigConstants.TASK_MANAGER_NUM_TASK_SLOTS, jobGraph.getMaximumParallelism())___		_		configuration.addAll(this.conf)___		if (LOG.isInfoEnabled()) {_			LOG.info("Running job on local embedded Flink mini cluster")__		}__		LocalFlinkMiniCluster exec = new LocalFlinkMiniCluster(configuration, true)__		try {_			exec.start()__			return exec.submitJobAndWait(jobGraph, getConfig().isSysoutLoggingEnabled())__		}_		finally {_			transformations.clear()__			exec.stop()__		}_	};executes,the,job,graph,of,the,on,a,mini,cluster,of,cluster,util,with,a,user,specified,name,param,job,name,name,of,the,job,return,the,result,of,the,job,execution,containing,elapsed,time,and,accumulators;override,public,job,execution,result,execute,string,job,name,throws,exception,stream,graph,stream,graph,get,stream,graph,stream,graph,set,job,name,job,name,job,graph,job,graph,stream,graph,get,job,graph,configuration,configuration,new,configuration,configuration,add,all,job,graph,get,job,configuration,configuration,set,long,task,manager,options,1l,configuration,set,integer,config,constants,job,graph,get,maximum,parallelism,configuration,add,all,this,conf,if,log,is,info,enabled,log,info,running,job,on,local,embedded,flink,mini,cluster,local,flink,mini,cluster,exec,new,local,flink,mini,cluster,configuration,true,try,exec,start,return,exec,submit,job,and,wait,job,graph,get,config,is,sysout,logging,enabled,finally,transformations,clear,exec,stop
LocalStreamEnvironment -> @Override 	public JobExecutionResult execute(String jobName) throws Exception;1495484544;Executes the JobGraph of the on a mini cluster of CLusterUtil with a user_specified name.__@param jobName_name of the job_@return The result of the job execution, containing elapsed time and accumulators.;@Override_	public JobExecutionResult execute(String jobName) throws Exception {_		_		StreamGraph streamGraph = getStreamGraph()__		streamGraph.setJobName(jobName)___		JobGraph jobGraph = streamGraph.getJobGraph()___		Configuration configuration = new Configuration()__		configuration.addAll(jobGraph.getJobConfiguration())___		configuration.setLong(TaskManagerOptions.MANAGED_MEMORY_SIZE, -1L)__		configuration.setInteger(ConfigConstants.TASK_MANAGER_NUM_TASK_SLOTS, jobGraph.getMaximumParallelism())___		_		configuration.addAll(this.conf)___		if (LOG.isInfoEnabled()) {_			LOG.info("Running job on local embedded Flink mini cluster")__		}__		LocalFlinkMiniCluster exec = new LocalFlinkMiniCluster(configuration, true)__		try {_			exec.start()__			return exec.submitJobAndWait(jobGraph, getConfig().isSysoutLoggingEnabled())__		}_		finally {_			transformations.clear()__			exec.stop()__		}_	};executes,the,job,graph,of,the,on,a,mini,cluster,of,cluster,util,with,a,user,specified,name,param,job,name,name,of,the,job,return,the,result,of,the,job,execution,containing,elapsed,time,and,accumulators;override,public,job,execution,result,execute,string,job,name,throws,exception,stream,graph,stream,graph,get,stream,graph,stream,graph,set,job,name,job,name,job,graph,job,graph,stream,graph,get,job,graph,configuration,configuration,new,configuration,configuration,add,all,job,graph,get,job,configuration,configuration,set,long,task,manager,options,1l,configuration,set,integer,config,constants,job,graph,get,maximum,parallelism,configuration,add,all,this,conf,if,log,is,info,enabled,log,info,running,job,on,local,embedded,flink,mini,cluster,local,flink,mini,cluster,exec,new,local,flink,mini,cluster,configuration,true,try,exec,start,return,exec,submit,job,and,wait,job,graph,get,config,is,sysout,logging,enabled,finally,transformations,clear,exec,stop
LocalStreamEnvironment -> @Override 	public JobExecutionResult execute(String jobName) throws Exception;1519121817;Executes the JobGraph of the on a mini cluster of CLusterUtil with a user_specified name.__@param jobName_name of the job_@return The result of the job execution, containing elapsed time and accumulators.;@Override_	public JobExecutionResult execute(String jobName) throws Exception {_		_		StreamGraph streamGraph = getStreamGraph()__		streamGraph.setJobName(jobName)___		JobGraph jobGraph = streamGraph.getJobGraph()___		Configuration configuration = new Configuration()__		configuration.addAll(jobGraph.getJobConfiguration())___		configuration.setLong(TaskManagerOptions.MANAGED_MEMORY_SIZE, -1L)__		configuration.setInteger(ConfigConstants.TASK_MANAGER_NUM_TASK_SLOTS, jobGraph.getMaximumParallelism())___		_		configuration.addAll(this.conf)___		if (LOG.isInfoEnabled()) {_			LOG.info("Running job on local embedded Flink mini cluster")__		}__		LocalFlinkMiniCluster exec = new LocalFlinkMiniCluster(configuration, true)__		try {_			exec.start()__			return exec.submitJobAndWait(jobGraph, getConfig().isSysoutLoggingEnabled())__		}_		finally {_			transformations.clear()__			exec.stop()__		}_	};executes,the,job,graph,of,the,on,a,mini,cluster,of,cluster,util,with,a,user,specified,name,param,job,name,name,of,the,job,return,the,result,of,the,job,execution,containing,elapsed,time,and,accumulators;override,public,job,execution,result,execute,string,job,name,throws,exception,stream,graph,stream,graph,get,stream,graph,stream,graph,set,job,name,job,name,job,graph,job,graph,stream,graph,get,job,graph,configuration,configuration,new,configuration,configuration,add,all,job,graph,get,job,configuration,configuration,set,long,task,manager,options,1l,configuration,set,integer,config,constants,job,graph,get,maximum,parallelism,configuration,add,all,this,conf,if,log,is,info,enabled,log,info,running,job,on,local,embedded,flink,mini,cluster,local,flink,mini,cluster,exec,new,local,flink,mini,cluster,configuration,true,try,exec,start,return,exec,submit,job,and,wait,job,graph,get,config,is,sysout,logging,enabled,finally,transformations,clear,exec,stop
LocalStreamEnvironment -> @Override 	public JobExecutionResult execute(String jobName) throws Exception;1522681180;Executes the JobGraph of the on a mini cluster of CLusterUtil with a user_specified name.__@param jobName_name of the job_@return The result of the job execution, containing elapsed time and accumulators.;@Override_	public JobExecutionResult execute(String jobName) throws Exception {_		_		StreamGraph streamGraph = getStreamGraph()__		streamGraph.setJobName(jobName)___		JobGraph jobGraph = streamGraph.getJobGraph()__		jobGraph.setAllowQueuedScheduling(true)___		Configuration configuration = new Configuration()__		configuration.addAll(jobGraph.getJobConfiguration())__		configuration.setLong(TaskManagerOptions.MANAGED_MEMORY_SIZE, -1L)___		_		configuration.addAll(this.configuration)___		configuration.setInteger(RestOptions.REST_PORT, 0)___		MiniClusterConfiguration cfg = new MiniClusterConfiguration.Builder()_			.setConfiguration(configuration)_			.setNumSlotsPerTaskManager(jobGraph.getMaximumParallelism())_			.build()___		if (LOG.isInfoEnabled()) {_			LOG.info("Running job on local embedded Flink mini cluster")__		}__		MiniCluster miniCluster = new MiniCluster(cfg)___		try {_			miniCluster.start()__			configuration.setInteger(RestOptions.REST_PORT, miniCluster.getRestAddress().getPort())___			return miniCluster.executeJobBlocking(jobGraph)__		}_		finally {_			transformations.clear()__			miniCluster.close()__		}_	};executes,the,job,graph,of,the,on,a,mini,cluster,of,cluster,util,with,a,user,specified,name,param,job,name,name,of,the,job,return,the,result,of,the,job,execution,containing,elapsed,time,and,accumulators;override,public,job,execution,result,execute,string,job,name,throws,exception,stream,graph,stream,graph,get,stream,graph,stream,graph,set,job,name,job,name,job,graph,job,graph,stream,graph,get,job,graph,job,graph,set,allow,queued,scheduling,true,configuration,configuration,new,configuration,configuration,add,all,job,graph,get,job,configuration,configuration,set,long,task,manager,options,1l,configuration,add,all,this,configuration,configuration,set,integer,rest,options,0,mini,cluster,configuration,cfg,new,mini,cluster,configuration,builder,set,configuration,configuration,set,num,slots,per,task,manager,job,graph,get,maximum,parallelism,build,if,log,is,info,enabled,log,info,running,job,on,local,embedded,flink,mini,cluster,mini,cluster,mini,cluster,new,mini,cluster,cfg,try,mini,cluster,start,configuration,set,integer,rest,options,mini,cluster,get,rest,address,get,port,return,mini,cluster,execute,job,blocking,job,graph,finally,transformations,clear,mini,cluster,close
LocalStreamEnvironment -> @Override 	public JobExecutionResult execute(String jobName) throws Exception;1523906274;Executes the JobGraph of the on a mini cluster of CLusterUtil with a user_specified name.__@param jobName_name of the job_@return The result of the job execution, containing elapsed time and accumulators.;@Override_	public JobExecutionResult execute(String jobName) throws Exception {_		_		StreamGraph streamGraph = getStreamGraph()__		streamGraph.setJobName(jobName)___		JobGraph jobGraph = streamGraph.getJobGraph()__		jobGraph.setAllowQueuedScheduling(true)___		Configuration configuration = new Configuration()__		configuration.addAll(jobGraph.getJobConfiguration())__		configuration.setLong(TaskManagerOptions.MANAGED_MEMORY_SIZE, -1L)___		_		configuration.addAll(this.configuration)___		if (!configuration.contains(RestOptions.REST_PORT)) {_			configuration.setInteger(RestOptions.REST_PORT, 0)__		}__		MiniClusterConfiguration cfg = new MiniClusterConfiguration.Builder()_			.setConfiguration(configuration)_			.setNumSlotsPerTaskManager(jobGraph.getMaximumParallelism())_			.build()___		if (LOG.isInfoEnabled()) {_			LOG.info("Running job on local embedded Flink mini cluster")__		}__		MiniCluster miniCluster = new MiniCluster(cfg)___		try {_			miniCluster.start()__			configuration.setInteger(RestOptions.REST_PORT, miniCluster.getRestAddress().getPort())___			return miniCluster.executeJobBlocking(jobGraph)__		}_		finally {_			transformations.clear()__			miniCluster.close()__		}_	};executes,the,job,graph,of,the,on,a,mini,cluster,of,cluster,util,with,a,user,specified,name,param,job,name,name,of,the,job,return,the,result,of,the,job,execution,containing,elapsed,time,and,accumulators;override,public,job,execution,result,execute,string,job,name,throws,exception,stream,graph,stream,graph,get,stream,graph,stream,graph,set,job,name,job,name,job,graph,job,graph,stream,graph,get,job,graph,job,graph,set,allow,queued,scheduling,true,configuration,configuration,new,configuration,configuration,add,all,job,graph,get,job,configuration,configuration,set,long,task,manager,options,1l,configuration,add,all,this,configuration,if,configuration,contains,rest,options,configuration,set,integer,rest,options,0,mini,cluster,configuration,cfg,new,mini,cluster,configuration,builder,set,configuration,configuration,set,num,slots,per,task,manager,job,graph,get,maximum,parallelism,build,if,log,is,info,enabled,log,info,running,job,on,local,embedded,flink,mini,cluster,mini,cluster,mini,cluster,new,mini,cluster,cfg,try,mini,cluster,start,configuration,set,integer,rest,options,mini,cluster,get,rest,address,get,port,return,mini,cluster,execute,job,blocking,job,graph,finally,transformations,clear,mini,cluster,close
LocalStreamEnvironment -> @Override 	public JobExecutionResult execute(String jobName) throws Exception;1524124694;Executes the JobGraph of the on a mini cluster of CLusterUtil with a user_specified name.__@param jobName_name of the job_@return The result of the job execution, containing elapsed time and accumulators.;@Override_	public JobExecutionResult execute(String jobName) throws Exception {_		_		StreamGraph streamGraph = getStreamGraph()__		streamGraph.setJobName(jobName)___		JobGraph jobGraph = streamGraph.getJobGraph()__		jobGraph.setAllowQueuedScheduling(true)___		Configuration configuration = new Configuration()__		configuration.addAll(jobGraph.getJobConfiguration())__		configuration.setLong(TaskManagerOptions.MANAGED_MEMORY_SIZE, -1L)___		_		configuration.addAll(this.configuration)___		if (!configuration.contains(RestOptions.PORT)) {_			configuration.setInteger(RestOptions.PORT, 0)__		}__		MiniClusterConfiguration cfg = new MiniClusterConfiguration.Builder()_			.setConfiguration(configuration)_			.setNumSlotsPerTaskManager(jobGraph.getMaximumParallelism())_			.build()___		if (LOG.isInfoEnabled()) {_			LOG.info("Running job on local embedded Flink mini cluster")__		}__		MiniCluster miniCluster = new MiniCluster(cfg)___		try {_			miniCluster.start()__			configuration.setInteger(RestOptions.PORT, miniCluster.getRestAddress().getPort())___			return miniCluster.executeJobBlocking(jobGraph)__		}_		finally {_			transformations.clear()__			miniCluster.close()__		}_	};executes,the,job,graph,of,the,on,a,mini,cluster,of,cluster,util,with,a,user,specified,name,param,job,name,name,of,the,job,return,the,result,of,the,job,execution,containing,elapsed,time,and,accumulators;override,public,job,execution,result,execute,string,job,name,throws,exception,stream,graph,stream,graph,get,stream,graph,stream,graph,set,job,name,job,name,job,graph,job,graph,stream,graph,get,job,graph,job,graph,set,allow,queued,scheduling,true,configuration,configuration,new,configuration,configuration,add,all,job,graph,get,job,configuration,configuration,set,long,task,manager,options,1l,configuration,add,all,this,configuration,if,configuration,contains,rest,options,port,configuration,set,integer,rest,options,port,0,mini,cluster,configuration,cfg,new,mini,cluster,configuration,builder,set,configuration,configuration,set,num,slots,per,task,manager,job,graph,get,maximum,parallelism,build,if,log,is,info,enabled,log,info,running,job,on,local,embedded,flink,mini,cluster,mini,cluster,mini,cluster,new,mini,cluster,cfg,try,mini,cluster,start,configuration,set,integer,rest,options,port,mini,cluster,get,rest,address,get,port,return,mini,cluster,execute,job,blocking,job,graph,finally,transformations,clear,mini,cluster,close
LocalStreamEnvironment -> @Override 	public JobExecutionResult execute(String jobName) throws Exception;1527579230;Executes the JobGraph of the on a mini cluster of CLusterUtil with a user_specified name.__@param jobName_name of the job_@return The result of the job execution, containing elapsed time and accumulators.;@Override_	public JobExecutionResult execute(String jobName) throws Exception {_		_		StreamGraph streamGraph = getStreamGraph()__		streamGraph.setJobName(jobName)___		JobGraph jobGraph = streamGraph.getJobGraph()__		jobGraph.setAllowQueuedScheduling(true)___		Configuration configuration = new Configuration()__		configuration.addAll(jobGraph.getJobConfiguration())__		configuration.setLong(TaskManagerOptions.MANAGED_MEMORY_SIZE, -1L)___		_		configuration.addAll(this.configuration)___		if (!configuration.contains(RestOptions.PORT)) {_			configuration.setInteger(RestOptions.PORT, 0)__		}__		int numSlotsPerTaskManager = configuration.getInteger(TaskManagerOptions.NUM_TASK_SLOTS, jobGraph.getMaximumParallelism())___		MiniClusterConfiguration cfg = new MiniClusterConfiguration.Builder()_			.setConfiguration(configuration)_			.setNumSlotsPerTaskManager(numSlotsPerTaskManager)_			.build()___		if (LOG.isInfoEnabled()) {_			LOG.info("Running job on local embedded Flink mini cluster")__		}__		MiniCluster miniCluster = new MiniCluster(cfg)___		try {_			miniCluster.start()__			configuration.setInteger(RestOptions.PORT, miniCluster.getRestAddress().getPort())___			return miniCluster.executeJobBlocking(jobGraph)__		}_		finally {_			transformations.clear()__			miniCluster.close()__		}_	};executes,the,job,graph,of,the,on,a,mini,cluster,of,cluster,util,with,a,user,specified,name,param,job,name,name,of,the,job,return,the,result,of,the,job,execution,containing,elapsed,time,and,accumulators;override,public,job,execution,result,execute,string,job,name,throws,exception,stream,graph,stream,graph,get,stream,graph,stream,graph,set,job,name,job,name,job,graph,job,graph,stream,graph,get,job,graph,job,graph,set,allow,queued,scheduling,true,configuration,configuration,new,configuration,configuration,add,all,job,graph,get,job,configuration,configuration,set,long,task,manager,options,1l,configuration,add,all,this,configuration,if,configuration,contains,rest,options,port,configuration,set,integer,rest,options,port,0,int,num,slots,per,task,manager,configuration,get,integer,task,manager,options,job,graph,get,maximum,parallelism,mini,cluster,configuration,cfg,new,mini,cluster,configuration,builder,set,configuration,configuration,set,num,slots,per,task,manager,num,slots,per,task,manager,build,if,log,is,info,enabled,log,info,running,job,on,local,embedded,flink,mini,cluster,mini,cluster,mini,cluster,new,mini,cluster,cfg,try,mini,cluster,start,configuration,set,integer,rest,options,port,mini,cluster,get,rest,address,get,port,return,mini,cluster,execute,job,blocking,job,graph,finally,transformations,clear,mini,cluster,close
LocalStreamEnvironment -> @Override 	public JobExecutionResult execute(String jobName) throws Exception;1530798894;Executes the JobGraph of the on a mini cluster of CLusterUtil with a user_specified name.__@param jobName_name of the job_@return The result of the job execution, containing elapsed time and accumulators.;@Override_	public JobExecutionResult execute(String jobName) throws Exception {_		_		StreamGraph streamGraph = getStreamGraph()__		streamGraph.setJobName(jobName)___		JobGraph jobGraph = streamGraph.getJobGraph()__		jobGraph.setAllowQueuedScheduling(true)___		Configuration configuration = new Configuration()__		configuration.addAll(jobGraph.getJobConfiguration())__		configuration.setString(TaskManagerOptions.MANAGED_MEMORY_SIZE, "0")___		_		configuration.addAll(this.configuration)___		if (!configuration.contains(RestOptions.PORT)) {_			configuration.setInteger(RestOptions.PORT, 0)__		}__		int numSlotsPerTaskManager = configuration.getInteger(TaskManagerOptions.NUM_TASK_SLOTS, jobGraph.getMaximumParallelism())___		MiniClusterConfiguration cfg = new MiniClusterConfiguration.Builder()_			.setConfiguration(configuration)_			.setNumSlotsPerTaskManager(numSlotsPerTaskManager)_			.build()___		if (LOG.isInfoEnabled()) {_			LOG.info("Running job on local embedded Flink mini cluster")__		}__		MiniCluster miniCluster = new MiniCluster(cfg)___		try {_			miniCluster.start()__			configuration.setInteger(RestOptions.PORT, miniCluster.getRestAddress().getPort())___			return miniCluster.executeJobBlocking(jobGraph)__		}_		finally {_			transformations.clear()__			miniCluster.close()__		}_	};executes,the,job,graph,of,the,on,a,mini,cluster,of,cluster,util,with,a,user,specified,name,param,job,name,name,of,the,job,return,the,result,of,the,job,execution,containing,elapsed,time,and,accumulators;override,public,job,execution,result,execute,string,job,name,throws,exception,stream,graph,stream,graph,get,stream,graph,stream,graph,set,job,name,job,name,job,graph,job,graph,stream,graph,get,job,graph,job,graph,set,allow,queued,scheduling,true,configuration,configuration,new,configuration,configuration,add,all,job,graph,get,job,configuration,configuration,set,string,task,manager,options,0,configuration,add,all,this,configuration,if,configuration,contains,rest,options,port,configuration,set,integer,rest,options,port,0,int,num,slots,per,task,manager,configuration,get,integer,task,manager,options,job,graph,get,maximum,parallelism,mini,cluster,configuration,cfg,new,mini,cluster,configuration,builder,set,configuration,configuration,set,num,slots,per,task,manager,num,slots,per,task,manager,build,if,log,is,info,enabled,log,info,running,job,on,local,embedded,flink,mini,cluster,mini,cluster,mini,cluster,new,mini,cluster,cfg,try,mini,cluster,start,configuration,set,integer,rest,options,port,mini,cluster,get,rest,address,get,port,return,mini,cluster,execute,job,blocking,job,graph,finally,transformations,clear,mini,cluster,close
LocalStreamEnvironment -> @Override 	public JobExecutionResult execute(String jobName) throws Exception;1549360057;Executes the JobGraph of the on a mini cluster of CLusterUtil with a user_specified name.__@param jobName_name of the job_@return The result of the job execution, containing elapsed time and accumulators.;@Override_	public JobExecutionResult execute(String jobName) throws Exception {_		_		StreamGraph streamGraph = getStreamGraph()__		streamGraph.setJobName(jobName)___		JobGraph jobGraph = streamGraph.getJobGraph()__		jobGraph.setAllowQueuedScheduling(true)___		Configuration configuration = new Configuration()__		configuration.addAll(jobGraph.getJobConfiguration())__		configuration.setString(TaskManagerOptions.MANAGED_MEMORY_SIZE, "0")___		_		configuration.addAll(this.configuration)___		if (!configuration.contains(RestOptions.PORT)) {_			configuration.setInteger(RestOptions.PORT, 0)__		}__		int numSlotsPerTaskManager = configuration.getInteger(TaskManagerOptions.NUM_TASK_SLOTS, jobGraph.getMaximumParallelism())___		MiniClusterConfiguration cfg = new MiniClusterConfiguration.Builder()_			.setConfiguration(configuration)_			.setNumSlotsPerTaskManager(numSlotsPerTaskManager)_			.build()___		if (LOG.isInfoEnabled()) {_			LOG.info("Running job on local embedded Flink mini cluster")__		}__		MiniCluster miniCluster = new MiniCluster(cfg)___		try {_			miniCluster.start()__			configuration.setInteger(RestOptions.PORT, miniCluster.getRestAddress().get().getPort())___			return miniCluster.executeJobBlocking(jobGraph)__		}_		finally {_			transformations.clear()__			miniCluster.close()__		}_	};executes,the,job,graph,of,the,on,a,mini,cluster,of,cluster,util,with,a,user,specified,name,param,job,name,name,of,the,job,return,the,result,of,the,job,execution,containing,elapsed,time,and,accumulators;override,public,job,execution,result,execute,string,job,name,throws,exception,stream,graph,stream,graph,get,stream,graph,stream,graph,set,job,name,job,name,job,graph,job,graph,stream,graph,get,job,graph,job,graph,set,allow,queued,scheduling,true,configuration,configuration,new,configuration,configuration,add,all,job,graph,get,job,configuration,configuration,set,string,task,manager,options,0,configuration,add,all,this,configuration,if,configuration,contains,rest,options,port,configuration,set,integer,rest,options,port,0,int,num,slots,per,task,manager,configuration,get,integer,task,manager,options,job,graph,get,maximum,parallelism,mini,cluster,configuration,cfg,new,mini,cluster,configuration,builder,set,configuration,configuration,set,num,slots,per,task,manager,num,slots,per,task,manager,build,if,log,is,info,enabled,log,info,running,job,on,local,embedded,flink,mini,cluster,mini,cluster,mini,cluster,new,mini,cluster,cfg,try,mini,cluster,start,configuration,set,integer,rest,options,port,mini,cluster,get,rest,address,get,get,port,return,mini,cluster,execute,job,blocking,job,graph,finally,transformations,clear,mini,cluster,close
LocalStreamEnvironment -> @Override 	public JobExecutionResult execute(String jobName) throws Exception;1550222817;Executes the JobGraph of the on a mini cluster of CLusterUtil with a user_specified name.__@param jobName_name of the job_@return The result of the job execution, containing elapsed time and accumulators.;@Override_	public JobExecutionResult execute(String jobName) throws Exception {_		_		StreamGraph streamGraph = getStreamGraph()__		streamGraph.setJobName(jobName)___		JobGraph jobGraph = streamGraph.getJobGraph()__		jobGraph.setAllowQueuedScheduling(true)___		Configuration configuration = new Configuration()__		configuration.addAll(jobGraph.getJobConfiguration())__		configuration.setString(TaskManagerOptions.MANAGED_MEMORY_SIZE, "0")___		_		configuration.addAll(this.configuration)___		if (!configuration.contains(RestOptions.BIND_PORT)) {_			configuration.setString(RestOptions.BIND_PORT, "0")__		}__		int numSlotsPerTaskManager = configuration.getInteger(TaskManagerOptions.NUM_TASK_SLOTS, jobGraph.getMaximumParallelism())___		MiniClusterConfiguration cfg = new MiniClusterConfiguration.Builder()_			.setConfiguration(configuration)_			.setNumSlotsPerTaskManager(numSlotsPerTaskManager)_			.build()___		if (LOG.isInfoEnabled()) {_			LOG.info("Running job on local embedded Flink mini cluster")__		}__		MiniCluster miniCluster = new MiniCluster(cfg)___		try {_			miniCluster.start()__			configuration.setInteger(RestOptions.PORT, miniCluster.getRestAddress().get().getPort())___			return miniCluster.executeJobBlocking(jobGraph)__		}_		finally {_			transformations.clear()__			miniCluster.close()__		}_	};executes,the,job,graph,of,the,on,a,mini,cluster,of,cluster,util,with,a,user,specified,name,param,job,name,name,of,the,job,return,the,result,of,the,job,execution,containing,elapsed,time,and,accumulators;override,public,job,execution,result,execute,string,job,name,throws,exception,stream,graph,stream,graph,get,stream,graph,stream,graph,set,job,name,job,name,job,graph,job,graph,stream,graph,get,job,graph,job,graph,set,allow,queued,scheduling,true,configuration,configuration,new,configuration,configuration,add,all,job,graph,get,job,configuration,configuration,set,string,task,manager,options,0,configuration,add,all,this,configuration,if,configuration,contains,rest,options,configuration,set,string,rest,options,0,int,num,slots,per,task,manager,configuration,get,integer,task,manager,options,job,graph,get,maximum,parallelism,mini,cluster,configuration,cfg,new,mini,cluster,configuration,builder,set,configuration,configuration,set,num,slots,per,task,manager,num,slots,per,task,manager,build,if,log,is,info,enabled,log,info,running,job,on,local,embedded,flink,mini,cluster,mini,cluster,mini,cluster,new,mini,cluster,cfg,try,mini,cluster,start,configuration,set,integer,rest,options,port,mini,cluster,get,rest,address,get,get,port,return,mini,cluster,execute,job,blocking,job,graph,finally,transformations,clear,mini,cluster,close
LocalStreamEnvironment -> public LocalStreamEnvironment(@Nonnull Configuration configuration);1522681180;Creates a new mini cluster stream environment that configures its local executor with the given configuration.__@param configuration The configuration used to configure the local executor.;public LocalStreamEnvironment(@Nonnull Configuration configuration) {_		if (!ExecutionEnvironment.areExplicitEnvironmentsAllowed()) {_			throw new InvalidProgramException(_				"The LocalStreamEnvironment cannot be used when submitting a program through a client, " +_					"or running in a TestEnvironment context.")__		}_		this.configuration = configuration__		setParallelism(1)__	};creates,a,new,mini,cluster,stream,environment,that,configures,its,local,executor,with,the,given,configuration,param,configuration,the,configuration,used,to,configure,the,local,executor;public,local,stream,environment,nonnull,configuration,configuration,if,execution,environment,are,explicit,environments,allowed,throw,new,invalid,program,exception,the,local,stream,environment,cannot,be,used,when,submitting,a,program,through,a,client,or,running,in,a,test,environment,context,this,configuration,configuration,set,parallelism,1
LocalStreamEnvironment -> public LocalStreamEnvironment(@Nonnull Configuration configuration);1523906274;Creates a new mini cluster stream environment that configures its local executor with the given configuration.__@param configuration The configuration used to configure the local executor.;public LocalStreamEnvironment(@Nonnull Configuration configuration) {_		if (!ExecutionEnvironment.areExplicitEnvironmentsAllowed()) {_			throw new InvalidProgramException(_				"The LocalStreamEnvironment cannot be used when submitting a program through a client, " +_					"or running in a TestEnvironment context.")__		}_		this.configuration = configuration__		setParallelism(1)__	};creates,a,new,mini,cluster,stream,environment,that,configures,its,local,executor,with,the,given,configuration,param,configuration,the,configuration,used,to,configure,the,local,executor;public,local,stream,environment,nonnull,configuration,configuration,if,execution,environment,are,explicit,environments,allowed,throw,new,invalid,program,exception,the,local,stream,environment,cannot,be,used,when,submitting,a,program,through,a,client,or,running,in,a,test,environment,context,this,configuration,configuration,set,parallelism,1
LocalStreamEnvironment -> public LocalStreamEnvironment(@Nonnull Configuration configuration);1524124694;Creates a new mini cluster stream environment that configures its local executor with the given configuration.__@param configuration The configuration used to configure the local executor.;public LocalStreamEnvironment(@Nonnull Configuration configuration) {_		if (!ExecutionEnvironment.areExplicitEnvironmentsAllowed()) {_			throw new InvalidProgramException(_				"The LocalStreamEnvironment cannot be used when submitting a program through a client, " +_					"or running in a TestEnvironment context.")__		}_		this.configuration = configuration__		setParallelism(1)__	};creates,a,new,mini,cluster,stream,environment,that,configures,its,local,executor,with,the,given,configuration,param,configuration,the,configuration,used,to,configure,the,local,executor;public,local,stream,environment,nonnull,configuration,configuration,if,execution,environment,are,explicit,environments,allowed,throw,new,invalid,program,exception,the,local,stream,environment,cannot,be,used,when,submitting,a,program,through,a,client,or,running,in,a,test,environment,context,this,configuration,configuration,set,parallelism,1
LocalStreamEnvironment -> public LocalStreamEnvironment(@Nonnull Configuration configuration);1527579230;Creates a new mini cluster stream environment that configures its local executor with the given configuration.__@param configuration The configuration used to configure the local executor.;public LocalStreamEnvironment(@Nonnull Configuration configuration) {_		if (!ExecutionEnvironment.areExplicitEnvironmentsAllowed()) {_			throw new InvalidProgramException(_				"The LocalStreamEnvironment cannot be used when submitting a program through a client, " +_					"or running in a TestEnvironment context.")__		}_		this.configuration = configuration__		setParallelism(1)__	};creates,a,new,mini,cluster,stream,environment,that,configures,its,local,executor,with,the,given,configuration,param,configuration,the,configuration,used,to,configure,the,local,executor;public,local,stream,environment,nonnull,configuration,configuration,if,execution,environment,are,explicit,environments,allowed,throw,new,invalid,program,exception,the,local,stream,environment,cannot,be,used,when,submitting,a,program,through,a,client,or,running,in,a,test,environment,context,this,configuration,configuration,set,parallelism,1
LocalStreamEnvironment -> public LocalStreamEnvironment(@Nonnull Configuration configuration);1530798894;Creates a new mini cluster stream environment that configures its local executor with the given configuration.__@param configuration The configuration used to configure the local executor.;public LocalStreamEnvironment(@Nonnull Configuration configuration) {_		if (!ExecutionEnvironment.areExplicitEnvironmentsAllowed()) {_			throw new InvalidProgramException(_				"The LocalStreamEnvironment cannot be used when submitting a program through a client, " +_					"or running in a TestEnvironment context.")__		}_		this.configuration = configuration__		setParallelism(1)__	};creates,a,new,mini,cluster,stream,environment,that,configures,its,local,executor,with,the,given,configuration,param,configuration,the,configuration,used,to,configure,the,local,executor;public,local,stream,environment,nonnull,configuration,configuration,if,execution,environment,are,explicit,environments,allowed,throw,new,invalid,program,exception,the,local,stream,environment,cannot,be,used,when,submitting,a,program,through,a,client,or,running,in,a,test,environment,context,this,configuration,configuration,set,parallelism,1
LocalStreamEnvironment -> public LocalStreamEnvironment(@Nonnull Configuration configuration);1549360057;Creates a new mini cluster stream environment that configures its local executor with the given configuration.__@param configuration The configuration used to configure the local executor.;public LocalStreamEnvironment(@Nonnull Configuration configuration) {_		if (!ExecutionEnvironment.areExplicitEnvironmentsAllowed()) {_			throw new InvalidProgramException(_				"The LocalStreamEnvironment cannot be used when submitting a program through a client, " +_					"or running in a TestEnvironment context.")__		}_		this.configuration = configuration__		setParallelism(1)__	};creates,a,new,mini,cluster,stream,environment,that,configures,its,local,executor,with,the,given,configuration,param,configuration,the,configuration,used,to,configure,the,local,executor;public,local,stream,environment,nonnull,configuration,configuration,if,execution,environment,are,explicit,environments,allowed,throw,new,invalid,program,exception,the,local,stream,environment,cannot,be,used,when,submitting,a,program,through,a,client,or,running,in,a,test,environment,context,this,configuration,configuration,set,parallelism,1
LocalStreamEnvironment -> public LocalStreamEnvironment(@Nonnull Configuration configuration);1550222817;Creates a new mini cluster stream environment that configures its local executor with the given configuration.__@param configuration The configuration used to configure the local executor.;public LocalStreamEnvironment(@Nonnull Configuration configuration) {_		if (!ExecutionEnvironment.areExplicitEnvironmentsAllowed()) {_			throw new InvalidProgramException(_				"The LocalStreamEnvironment cannot be used when submitting a program through a client, " +_					"or running in a TestEnvironment context.")__		}_		this.configuration = configuration__		setParallelism(1)__	};creates,a,new,mini,cluster,stream,environment,that,configures,its,local,executor,with,the,given,configuration,param,configuration,the,configuration,used,to,configure,the,local,executor;public,local,stream,environment,nonnull,configuration,configuration,if,execution,environment,are,explicit,environments,allowed,throw,new,invalid,program,exception,the,local,stream,environment,cannot,be,used,when,submitting,a,program,through,a,client,or,running,in,a,test,environment,context,this,configuration,configuration,set,parallelism,1
LocalStreamEnvironment -> public LocalStreamEnvironment();1445418103;Creates a new local stream environment that uses the default configuration.;public LocalStreamEnvironment() {_		this(null)__	};creates,a,new,local,stream,environment,that,uses,the,default,configuration;public,local,stream,environment,this,null
LocalStreamEnvironment -> public LocalStreamEnvironment();1446400804;Creates a new local stream environment that uses the default configuration.;public LocalStreamEnvironment() {_		this(null)__	};creates,a,new,local,stream,environment,that,uses,the,default,configuration;public,local,stream,environment,this,null
LocalStreamEnvironment -> public LocalStreamEnvironment();1448299950;Creates a new local stream environment that uses the default configuration.;public LocalStreamEnvironment() {_		this(null)__	};creates,a,new,local,stream,environment,that,uses,the,default,configuration;public,local,stream,environment,this,null
LocalStreamEnvironment -> public LocalStreamEnvironment();1449671590;Creates a new local stream environment that uses the default configuration.;public LocalStreamEnvironment() {_		this(null)__	};creates,a,new,local,stream,environment,that,uses,the,default,configuration;public,local,stream,environment,this,null
LocalStreamEnvironment -> public LocalStreamEnvironment();1454679829;Creates a new local stream environment that uses the default configuration.;public LocalStreamEnvironment() {_		this(null)__	};creates,a,new,local,stream,environment,that,uses,the,default,configuration;public,local,stream,environment,this,null
LocalStreamEnvironment -> public LocalStreamEnvironment();1489782894;Creates a new local stream environment that uses the default configuration.;public LocalStreamEnvironment() {_		this(defaultLocalParallelism)__	};creates,a,new,local,stream,environment,that,uses,the,default,configuration;public,local,stream,environment,this,default,local,parallelism
LocalStreamEnvironment -> public LocalStreamEnvironment();1491500150;Creates a new local stream environment that uses the default configuration.;public LocalStreamEnvironment() {_		this(defaultLocalParallelism)__	};creates,a,new,local,stream,environment,that,uses,the,default,configuration;public,local,stream,environment,this,default,local,parallelism
LocalStreamEnvironment -> public LocalStreamEnvironment();1492530130;Creates a new local stream environment that uses the default configuration.;public LocalStreamEnvironment() {_		this(null)__	};creates,a,new,local,stream,environment,that,uses,the,default,configuration;public,local,stream,environment,this,null
LocalStreamEnvironment -> public LocalStreamEnvironment();1493195810;Creates a new local stream environment that uses the default configuration.;public LocalStreamEnvironment() {_		this(null)__	};creates,a,new,local,stream,environment,that,uses,the,default,configuration;public,local,stream,environment,this,null
LocalStreamEnvironment -> public LocalStreamEnvironment();1493195810;Creates a new local stream environment that uses the default configuration.;public LocalStreamEnvironment() {_		this(null)__	};creates,a,new,local,stream,environment,that,uses,the,default,configuration;public,local,stream,environment,this,null
LocalStreamEnvironment -> public LocalStreamEnvironment();1495484544;Creates a new local stream environment that uses the default configuration.;public LocalStreamEnvironment() {_		this(null)__	};creates,a,new,local,stream,environment,that,uses,the,default,configuration;public,local,stream,environment,this,null
LocalStreamEnvironment -> public LocalStreamEnvironment();1519121817;Creates a new local stream environment that uses the default configuration.;public LocalStreamEnvironment() {_		this(null)__	};creates,a,new,local,stream,environment,that,uses,the,default,configuration;public,local,stream,environment,this,null
LocalStreamEnvironment -> public LocalStreamEnvironment();1522681180;Creates a new mini cluster stream environment that uses the default configuration.;public LocalStreamEnvironment() {_		this(new Configuration())__	};creates,a,new,mini,cluster,stream,environment,that,uses,the,default,configuration;public,local,stream,environment,this,new,configuration
LocalStreamEnvironment -> public LocalStreamEnvironment();1523906274;Creates a new mini cluster stream environment that uses the default configuration.;public LocalStreamEnvironment() {_		this(new Configuration())__	};creates,a,new,mini,cluster,stream,environment,that,uses,the,default,configuration;public,local,stream,environment,this,new,configuration
LocalStreamEnvironment -> public LocalStreamEnvironment();1524124694;Creates a new mini cluster stream environment that uses the default configuration.;public LocalStreamEnvironment() {_		this(new Configuration())__	};creates,a,new,mini,cluster,stream,environment,that,uses,the,default,configuration;public,local,stream,environment,this,new,configuration
LocalStreamEnvironment -> public LocalStreamEnvironment();1527579230;Creates a new mini cluster stream environment that uses the default configuration.;public LocalStreamEnvironment() {_		this(new Configuration())__	};creates,a,new,mini,cluster,stream,environment,that,uses,the,default,configuration;public,local,stream,environment,this,new,configuration
LocalStreamEnvironment -> public LocalStreamEnvironment();1530798894;Creates a new mini cluster stream environment that uses the default configuration.;public LocalStreamEnvironment() {_		this(new Configuration())__	};creates,a,new,mini,cluster,stream,environment,that,uses,the,default,configuration;public,local,stream,environment,this,new,configuration
LocalStreamEnvironment -> public LocalStreamEnvironment();1549360057;Creates a new mini cluster stream environment that uses the default configuration.;public LocalStreamEnvironment() {_		this(new Configuration())__	};creates,a,new,mini,cluster,stream,environment,that,uses,the,default,configuration;public,local,stream,environment,this,new,configuration
LocalStreamEnvironment -> public LocalStreamEnvironment();1550222817;Creates a new mini cluster stream environment that uses the default configuration.;public LocalStreamEnvironment() {_		this(new Configuration())__	};creates,a,new,mini,cluster,stream,environment,that,uses,the,default,configuration;public,local,stream,environment,this,new,configuration
LocalStreamEnvironment -> public LocalStreamEnvironment(Configuration config, int parallelism);1489782894;Creates a new local stream environment that configures its local executor with the given configuration.__@param config The configuration used to configure the local executor.;public LocalStreamEnvironment(Configuration config, int parallelism) {_		super(parallelism)__		if (!ExecutionEnvironment.areExplicitEnvironmentsAllowed()) {_			throw new InvalidProgramException(_					"The LocalStreamEnvironment cannot be used when submitting a program through a client, " +_							"or running in a TestEnvironment context.")__		}__		this.conf = config == null ? new Configuration() : config__	};creates,a,new,local,stream,environment,that,configures,its,local,executor,with,the,given,configuration,param,config,the,configuration,used,to,configure,the,local,executor;public,local,stream,environment,configuration,config,int,parallelism,super,parallelism,if,execution,environment,are,explicit,environments,allowed,throw,new,invalid,program,exception,the,local,stream,environment,cannot,be,used,when,submitting,a,program,through,a,client,or,running,in,a,test,environment,context,this,conf,config,null,new,configuration,config
LocalStreamEnvironment -> public LocalStreamEnvironment(Configuration config, int parallelism);1491500150;Creates a new local stream environment that configures its local executor with the given configuration.__@param config The configuration used to configure the local executor.;public LocalStreamEnvironment(Configuration config, int parallelism) {_		super(parallelism)__		if (!ExecutionEnvironment.areExplicitEnvironmentsAllowed()) {_			throw new InvalidProgramException(_					"The LocalStreamEnvironment cannot be used when submitting a program through a client, " +_							"or running in a TestEnvironment context.")__		}__		this.conf = config == null ? new Configuration() : config__	};creates,a,new,local,stream,environment,that,configures,its,local,executor,with,the,given,configuration,param,config,the,configuration,used,to,configure,the,local,executor;public,local,stream,environment,configuration,config,int,parallelism,super,parallelism,if,execution,environment,are,explicit,environments,allowed,throw,new,invalid,program,exception,the,local,stream,environment,cannot,be,used,when,submitting,a,program,through,a,client,or,running,in,a,test,environment,context,this,conf,config,null,new,configuration,config
LocalStreamEnvironment -> public LocalStreamEnvironment(int parallelism);1489782894;Creates a new local stream environment that uses the default configuration.;public LocalStreamEnvironment(int parallelism) {_		this(null, parallelism)__	};creates,a,new,local,stream,environment,that,uses,the,default,configuration;public,local,stream,environment,int,parallelism,this,null,parallelism
LocalStreamEnvironment -> public LocalStreamEnvironment(int parallelism);1491500150;Creates a new local stream environment that uses the default configuration.;public LocalStreamEnvironment(int parallelism) {_		this(null, parallelism)__	};creates,a,new,local,stream,environment,that,uses,the,default,configuration;public,local,stream,environment,int,parallelism,this,null,parallelism
