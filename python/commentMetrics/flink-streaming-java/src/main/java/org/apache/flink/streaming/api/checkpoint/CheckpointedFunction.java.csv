# id;timestamp;commentText;codeText;commentWords;codeWords
CheckpointedFunction -> void initializeState(OperatorStateStore stateStore) throws Exception_;1475231926;This method is called when an operator is opened, so that the function can set the state backend to which it_hands it's state on snapshot.__@param stateStore the state store to which this function stores it's state_@throws Exception;void initializeState(OperatorStateStore stateStore) throws Exception_;this,method,is,called,when,an,operator,is,opened,so,that,the,function,can,set,the,state,backend,to,which,it,hands,it,s,state,on,snapshot,param,state,store,the,state,store,to,which,this,function,stores,it,s,state,throws,exception;void,initialize,state,operator,state,store,state,store,throws,exception
CheckpointedFunction -> void initializeState(OperatorStateStore stateStore) throws Exception_;1475688973;This method is called when an operator is opened, so that the function can set the state backend to which it_hands it's state on snapshot.__@param stateStore the state store to which this function stores it's state_@throws Exception;void initializeState(OperatorStateStore stateStore) throws Exception_;this,method,is,called,when,an,operator,is,opened,so,that,the,function,can,set,the,state,backend,to,which,it,hands,it,s,state,on,snapshot,param,state,store,the,state,store,to,which,this,function,stores,it,s,state,throws,exception;void,initialize,state,operator,state,store,state,store,throws,exception
CheckpointedFunction -> void snapshotState(FunctionSnapshotContext context) throws Exception_;1476972861;This method is called when a snapshot for a checkpoint is requested. This acts as a hook to the function to_ensure that all state is exposed by means previously offered through {@link FunctionInitializationContext} when_the Function was initialized, or offered now by {@link FunctionSnapshotContext} itself.__@param context the context for drawing a snapshot of the operator_@throws Exception;void snapshotState(FunctionSnapshotContext context) throws Exception_;this,method,is,called,when,a,snapshot,for,a,checkpoint,is,requested,this,acts,as,a,hook,to,the,function,to,ensure,that,all,state,is,exposed,by,means,previously,offered,through,link,function,initialization,context,when,the,function,was,initialized,or,offered,now,by,link,function,snapshot,context,itself,param,context,the,context,for,drawing,a,snapshot,of,the,operator,throws,exception;void,snapshot,state,function,snapshot,context,context,throws,exception
CheckpointedFunction -> void snapshotState(FunctionSnapshotContext context) throws Exception_;1485274812;This method is called when a snapshot for a checkpoint is requested. This acts as a hook to the function to_ensure that all state is exposed by means previously offered through {@link FunctionInitializationContext} when_the Function was initialized, or offered now by {@link FunctionSnapshotContext} itself.__@param context the context for drawing a snapshot of the operator_@throws Exception;void snapshotState(FunctionSnapshotContext context) throws Exception_;this,method,is,called,when,a,snapshot,for,a,checkpoint,is,requested,this,acts,as,a,hook,to,the,function,to,ensure,that,all,state,is,exposed,by,means,previously,offered,through,link,function,initialization,context,when,the,function,was,initialized,or,offered,now,by,link,function,snapshot,context,itself,param,context,the,context,for,drawing,a,snapshot,of,the,operator,throws,exception;void,snapshot,state,function,snapshot,context,context,throws,exception
CheckpointedFunction -> void snapshotState(FunctionSnapshotContext context) throws Exception_;1493195810;This method is called when a snapshot for a checkpoint is requested. This acts as a hook to the function to_ensure that all state is exposed by means previously offered through {@link FunctionInitializationContext} when_the Function was initialized, or offered now by {@link FunctionSnapshotContext} itself.__@param context the context for drawing a snapshot of the operator_@throws Exception;void snapshotState(FunctionSnapshotContext context) throws Exception_;this,method,is,called,when,a,snapshot,for,a,checkpoint,is,requested,this,acts,as,a,hook,to,the,function,to,ensure,that,all,state,is,exposed,by,means,previously,offered,through,link,function,initialization,context,when,the,function,was,initialized,or,offered,now,by,link,function,snapshot,context,itself,param,context,the,context,for,drawing,a,snapshot,of,the,operator,throws,exception;void,snapshot,state,function,snapshot,context,context,throws,exception
CheckpointedFunction -> void snapshotState(FunctionSnapshotContext context) throws Exception_;1493195810;This method is called when a snapshot for a checkpoint is requested. This acts as a hook to the function to_ensure that all state is exposed by means previously offered through {@link FunctionInitializationContext} when_the Function was initialized, or offered now by {@link FunctionSnapshotContext} itself.__@param context the context for drawing a snapshot of the operator_@throws Exception;void snapshotState(FunctionSnapshotContext context) throws Exception_;this,method,is,called,when,a,snapshot,for,a,checkpoint,is,requested,this,acts,as,a,hook,to,the,function,to,ensure,that,all,state,is,exposed,by,means,previously,offered,through,link,function,initialization,context,when,the,function,was,initialized,or,offered,now,by,link,function,snapshot,context,itself,param,context,the,context,for,drawing,a,snapshot,of,the,operator,throws,exception;void,snapshot,state,function,snapshot,context,context,throws,exception
CheckpointedFunction -> void snapshotState(FunctionSnapshotContext context) throws Exception_;1549467949;This method is called when a snapshot for a checkpoint is requested. This acts as a hook to the function to_ensure that all state is exposed by means previously offered through {@link FunctionInitializationContext} when_the Function was initialized, or offered now by {@link FunctionSnapshotContext} itself.__@param context the context for drawing a snapshot of the operator_@throws Exception;void snapshotState(FunctionSnapshotContext context) throws Exception_;this,method,is,called,when,a,snapshot,for,a,checkpoint,is,requested,this,acts,as,a,hook,to,the,function,to,ensure,that,all,state,is,exposed,by,means,previously,offered,through,link,function,initialization,context,when,the,function,was,initialized,or,offered,now,by,link,function,snapshot,context,itself,param,context,the,context,for,drawing,a,snapshot,of,the,operator,throws,exception;void,snapshot,state,function,snapshot,context,context,throws,exception
CheckpointedFunction -> void initializeState(FunctionInitializationContext context) throws Exception_;1476972861;This method is called when an operator is initialized, so that the function can set up it's state through_the provided context. Initialization typically includes registering user states through the state stores_that the context offers.__@param context the context for initializing the operator_@throws Exception;void initializeState(FunctionInitializationContext context) throws Exception_;this,method,is,called,when,an,operator,is,initialized,so,that,the,function,can,set,up,it,s,state,through,the,provided,context,initialization,typically,includes,registering,user,states,through,the,state,stores,that,the,context,offers,param,context,the,context,for,initializing,the,operator,throws,exception;void,initialize,state,function,initialization,context,context,throws,exception
CheckpointedFunction -> void initializeState(FunctionInitializationContext context) throws Exception_;1485274812;This method is called when the parallel function instance is created during distributed_execution. Functions typically set up their state storing data structures in this method.__@param context the context for initializing the operator_@throws Exception;void initializeState(FunctionInitializationContext context) throws Exception_;this,method,is,called,when,the,parallel,function,instance,is,created,during,distributed,execution,functions,typically,set,up,their,state,storing,data,structures,in,this,method,param,context,the,context,for,initializing,the,operator,throws,exception;void,initialize,state,function,initialization,context,context,throws,exception
CheckpointedFunction -> void initializeState(FunctionInitializationContext context) throws Exception_;1493195810;This method is called when the parallel function instance is created during distributed_execution. Functions typically set up their state storing data structures in this method.__@param context the context for initializing the operator_@throws Exception;void initializeState(FunctionInitializationContext context) throws Exception_;this,method,is,called,when,the,parallel,function,instance,is,created,during,distributed,execution,functions,typically,set,up,their,state,storing,data,structures,in,this,method,param,context,the,context,for,initializing,the,operator,throws,exception;void,initialize,state,function,initialization,context,context,throws,exception
CheckpointedFunction -> void initializeState(FunctionInitializationContext context) throws Exception_;1493195810;This method is called when the parallel function instance is created during distributed_execution. Functions typically set up their state storing data structures in this method.__@param context the context for initializing the operator_@throws Exception;void initializeState(FunctionInitializationContext context) throws Exception_;this,method,is,called,when,the,parallel,function,instance,is,created,during,distributed,execution,functions,typically,set,up,their,state,storing,data,structures,in,this,method,param,context,the,context,for,initializing,the,operator,throws,exception;void,initialize,state,function,initialization,context,context,throws,exception
CheckpointedFunction -> void initializeState(FunctionInitializationContext context) throws Exception_;1549467949;This method is called when the parallel function instance is created during distributed_execution. Functions typically set up their state storing data structures in this method.__@param context the context for initializing the operator_@throws Exception;void initializeState(FunctionInitializationContext context) throws Exception_;this,method,is,called,when,the,parallel,function,instance,is,created,during,distributed,execution,functions,typically,set,up,their,state,storing,data,structures,in,this,method,param,context,the,context,for,initializing,the,operator,throws,exception;void,initialize,state,function,initialization,context,context,throws,exception
CheckpointedFunction -> void prepareSnapshot(long checkpointId, long timestamp) throws Exception_;1475231926;This method is called when state should be stored for a checkpoint. The state can be registered and written to_the provided backend.__@param checkpointId Id of the checkpoint to perform_@param timestamp Timestamp of the checkpoint_@throws Exception;void prepareSnapshot(long checkpointId, long timestamp) throws Exception_;this,method,is,called,when,state,should,be,stored,for,a,checkpoint,the,state,can,be,registered,and,written,to,the,provided,backend,param,checkpoint,id,id,of,the,checkpoint,to,perform,param,timestamp,timestamp,of,the,checkpoint,throws,exception;void,prepare,snapshot,long,checkpoint,id,long,timestamp,throws,exception
CheckpointedFunction -> void prepareSnapshot(long checkpointId, long timestamp) throws Exception_;1475688973;This method is called when state should be stored for a checkpoint. The state can be registered and written to_the provided backend.__@param checkpointId Id of the checkpoint to perform_@param timestamp Timestamp of the checkpoint_@throws Exception;void prepareSnapshot(long checkpointId, long timestamp) throws Exception_;this,method,is,called,when,state,should,be,stored,for,a,checkpoint,the,state,can,be,registered,and,written,to,the,provided,backend,param,checkpoint,id,id,of,the,checkpoint,to,perform,param,timestamp,timestamp,of,the,checkpoint,throws,exception;void,prepare,snapshot,long,checkpoint,id,long,timestamp,throws,exception
