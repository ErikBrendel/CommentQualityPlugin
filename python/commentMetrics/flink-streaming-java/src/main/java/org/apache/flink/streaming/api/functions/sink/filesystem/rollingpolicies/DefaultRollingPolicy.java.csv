# id;timestamp;commentText;codeText;commentWords;codeWords
DefaultRollingPolicy -> PolicyBuilder -> public DefaultRollingPolicy.PolicyBuilder withMaxPartSize(final long size);1533229113;Sets the part size above which a part file will have to roll._@param size the allowed part size.;public DefaultRollingPolicy.PolicyBuilder withMaxPartSize(final long size) {_			Preconditions.checkState(size > 0L)__			return new PolicyBuilder(size, rolloverInterval, inactivityInterval)__		};sets,the,part,size,above,which,a,part,file,will,have,to,roll,param,size,the,allowed,part,size;public,default,rolling,policy,policy,builder,with,max,part,size,final,long,size,preconditions,check,state,size,0l,return,new,policy,builder,size,rollover,interval,inactivity,interval
DefaultRollingPolicy -> PolicyBuilder -> public DefaultRollingPolicy.PolicyBuilder withMaxPartSize(final long size);1541059170;Sets the part size above which a part file will have to roll._@param size the allowed part size.;public DefaultRollingPolicy.PolicyBuilder withMaxPartSize(final long size) {_			Preconditions.checkState(size > 0L)__			return new PolicyBuilder(size, rolloverInterval, inactivityInterval)__		};sets,the,part,size,above,which,a,part,file,will,have,to,roll,param,size,the,allowed,part,size;public,default,rolling,policy,policy,builder,with,max,part,size,final,long,size,preconditions,check,state,size,0l,return,new,policy,builder,size,rollover,interval,inactivity,interval
DefaultRollingPolicy -> PolicyBuilder -> public DefaultRollingPolicy.PolicyBuilder withInactivityInterval(final long interval);1533229113;Sets the interval of allowed inactivity after which a part file will have to roll._@param interval the allowed inactivity interval.;public DefaultRollingPolicy.PolicyBuilder withInactivityInterval(final long interval) {_			Preconditions.checkState(interval > 0L)__			return new PolicyBuilder(partSize, rolloverInterval, interval)__		};sets,the,interval,of,allowed,inactivity,after,which,a,part,file,will,have,to,roll,param,interval,the,allowed,inactivity,interval;public,default,rolling,policy,policy,builder,with,inactivity,interval,final,long,interval,preconditions,check,state,interval,0l,return,new,policy,builder,part,size,rollover,interval,interval
DefaultRollingPolicy -> PolicyBuilder -> public DefaultRollingPolicy.PolicyBuilder withInactivityInterval(final long interval);1541059170;Sets the interval of allowed inactivity after which a part file will have to roll._@param interval the allowed inactivity interval.;public DefaultRollingPolicy.PolicyBuilder withInactivityInterval(final long interval) {_			Preconditions.checkState(interval > 0L)__			return new PolicyBuilder(partSize, rolloverInterval, interval)__		};sets,the,interval,of,allowed,inactivity,after,which,a,part,file,will,have,to,roll,param,interval,the,allowed,inactivity,interval;public,default,rolling,policy,policy,builder,with,inactivity,interval,final,long,interval,preconditions,check,state,interval,0l,return,new,policy,builder,part,size,rollover,interval,interval
DefaultRollingPolicy -> private DefaultRollingPolicy(long partSize, long rolloverInterval, long inactivityInterval);1533029605;Private constructor to avoid direct instantiation.;private DefaultRollingPolicy(long partSize, long rolloverInterval, long inactivityInterval) {_		Preconditions.checkArgument(partSize > 0L)__		Preconditions.checkArgument(rolloverInterval > 0L)__		Preconditions.checkArgument(inactivityInterval > 0L)___		this.partSize = partSize__		this.rolloverInterval = rolloverInterval__		this.inactivityInterval = inactivityInterval__	};private,constructor,to,avoid,direct,instantiation;private,default,rolling,policy,long,part,size,long,rollover,interval,long,inactivity,interval,preconditions,check,argument,part,size,0l,preconditions,check,argument,rollover,interval,0l,preconditions,check,argument,inactivity,interval,0l,this,part,size,part,size,this,rollover,interval,rollover,interval,this,inactivity,interval,inactivity,interval
DefaultRollingPolicy -> private DefaultRollingPolicy(long partSize, long rolloverInterval, long inactivityInterval);1533229113;Private constructor to avoid direct instantiation.;private DefaultRollingPolicy(long partSize, long rolloverInterval, long inactivityInterval) {_		Preconditions.checkArgument(partSize > 0L)__		Preconditions.checkArgument(rolloverInterval > 0L)__		Preconditions.checkArgument(inactivityInterval > 0L)___		this.partSize = partSize__		this.rolloverInterval = rolloverInterval__		this.inactivityInterval = inactivityInterval__	};private,constructor,to,avoid,direct,instantiation;private,default,rolling,policy,long,part,size,long,rollover,interval,long,inactivity,interval,preconditions,check,argument,part,size,0l,preconditions,check,argument,rollover,interval,0l,preconditions,check,argument,inactivity,interval,0l,this,part,size,part,size,this,rollover,interval,rollover,interval,this,inactivity,interval,inactivity,interval
DefaultRollingPolicy -> private DefaultRollingPolicy(long partSize, long rolloverInterval, long inactivityInterval);1541059170;Private constructor to avoid direct instantiation.;private DefaultRollingPolicy(long partSize, long rolloverInterval, long inactivityInterval) {_		Preconditions.checkArgument(partSize > 0L)__		Preconditions.checkArgument(rolloverInterval > 0L)__		Preconditions.checkArgument(inactivityInterval > 0L)___		this.partSize = partSize__		this.rolloverInterval = rolloverInterval__		this.inactivityInterval = inactivityInterval__	};private,constructor,to,avoid,direct,instantiation;private,default,rolling,policy,long,part,size,long,rollover,interval,long,inactivity,interval,preconditions,check,argument,part,size,0l,preconditions,check,argument,rollover,interval,0l,preconditions,check,argument,inactivity,interval,0l,this,part,size,part,size,this,rollover,interval,rollover,interval,this,inactivity,interval,inactivity,interval
DefaultRollingPolicy -> public static DefaultRollingPolicy.PolicyBuilder create();1533029605;Initiates the instantiation of a {@code DefaultRollingPolicy}._To finalize it and have the actual policy, call {@code .create()}.;public static DefaultRollingPolicy.PolicyBuilder create() {_		return new DefaultRollingPolicy.PolicyBuilder()__	};initiates,the,instantiation,of,a,code,default,rolling,policy,to,finalize,it,and,have,the,actual,policy,call,code,create;public,static,default,rolling,policy,policy,builder,create,return,new,default,rolling,policy,policy,builder
DefaultRollingPolicy -> public static DefaultRollingPolicy.PolicyBuilder create();1533229113;Initiates the instantiation of a {@code DefaultRollingPolicy}._To finalize it and have the actual policy, call {@code .create()}.;public static DefaultRollingPolicy.PolicyBuilder create() {_		return new DefaultRollingPolicy.PolicyBuilder(_				DEFAULT_MAX_PART_SIZE,_				DEFAULT_ROLLOVER_INTERVAL,_				DEFAULT_INACTIVITY_INTERVAL)__	};initiates,the,instantiation,of,a,code,default,rolling,policy,to,finalize,it,and,have,the,actual,policy,call,code,create;public,static,default,rolling,policy,policy,builder,create,return,new,default,rolling,policy,policy,builder
DefaultRollingPolicy -> public static DefaultRollingPolicy.PolicyBuilder create();1541059170;Initiates the instantiation of a {@code DefaultRollingPolicy}._To finalize it and have the actual policy, call {@code .create()}.;public static DefaultRollingPolicy.PolicyBuilder create() {_		return new DefaultRollingPolicy.PolicyBuilder(_				DEFAULT_MAX_PART_SIZE,_				DEFAULT_ROLLOVER_INTERVAL,_				DEFAULT_INACTIVITY_INTERVAL)__	};initiates,the,instantiation,of,a,code,default,rolling,policy,to,finalize,it,and,have,the,actual,policy,call,code,create;public,static,default,rolling,policy,policy,builder,create,return,new,default,rolling,policy,policy,builder
DefaultRollingPolicy -> PolicyBuilder -> public <IN, BucketID> DefaultRollingPolicy<IN, BucketID> build();1533029605;Creates the actual policy.;public <IN, BucketID> DefaultRollingPolicy<IN, BucketID> build() {_			return new DefaultRollingPolicy<>(partSize, rolloverInterval, inactivityInterval)__		};creates,the,actual,policy;public,in,bucket,id,default,rolling,policy,in,bucket,id,build,return,new,default,rolling,policy,part,size,rollover,interval,inactivity,interval
DefaultRollingPolicy -> PolicyBuilder -> public <IN, BucketID> DefaultRollingPolicy<IN, BucketID> build();1533229113;Creates the actual policy.;public <IN, BucketID> DefaultRollingPolicy<IN, BucketID> build() {_			return new DefaultRollingPolicy<>(partSize, rolloverInterval, inactivityInterval)__		};creates,the,actual,policy;public,in,bucket,id,default,rolling,policy,in,bucket,id,build,return,new,default,rolling,policy,part,size,rollover,interval,inactivity,interval
DefaultRollingPolicy -> PolicyBuilder -> public <IN, BucketID> DefaultRollingPolicy<IN, BucketID> build();1541059170;Creates the actual policy.;public <IN, BucketID> DefaultRollingPolicy<IN, BucketID> build() {_			return new DefaultRollingPolicy<>(partSize, rolloverInterval, inactivityInterval)__		};creates,the,actual,policy;public,in,bucket,id,default,rolling,policy,in,bucket,id,build,return,new,default,rolling,policy,part,size,rollover,interval,inactivity,interval
DefaultRollingPolicy -> PolicyBuilder -> public DefaultRollingPolicy.PolicyBuilder withRolloverInterval(final long interval);1533229113;Sets the max time a part file can stay open before having to roll._@param interval the desired rollover interval.;public DefaultRollingPolicy.PolicyBuilder withRolloverInterval(final long interval) {_			Preconditions.checkState(interval > 0L)__			return new PolicyBuilder(partSize, interval, inactivityInterval)__		};sets,the,max,time,a,part,file,can,stay,open,before,having,to,roll,param,interval,the,desired,rollover,interval;public,default,rolling,policy,policy,builder,with,rollover,interval,final,long,interval,preconditions,check,state,interval,0l,return,new,policy,builder,part,size,interval,inactivity,interval
DefaultRollingPolicy -> PolicyBuilder -> public DefaultRollingPolicy.PolicyBuilder withRolloverInterval(final long interval);1541059170;Sets the max time a part file can stay open before having to roll._@param interval the desired rollover interval.;public DefaultRollingPolicy.PolicyBuilder withRolloverInterval(final long interval) {_			Preconditions.checkState(interval > 0L)__			return new PolicyBuilder(partSize, interval, inactivityInterval)__		};sets,the,max,time,a,part,file,can,stay,open,before,having,to,roll,param,interval,the,desired,rollover,interval;public,default,rolling,policy,policy,builder,with,rollover,interval,final,long,interval,preconditions,check,state,interval,0l,return,new,policy,builder,part,size,interval,inactivity,interval
