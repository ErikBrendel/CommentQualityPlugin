# id;timestamp;commentText;codeText;commentWords;codeWords
RegularWindowOperatorContractTest -> private <W extends Window, ACC, OUT> KeyedOneInputStreamOperatorTestHarness<Integer, Integer, OUT> createWindowOperator( 			WindowAssigner<Integer, W> assigner, 			Trigger<Integer, W> trigger, 			long allowedLatenss, 			StateDescriptor<? extends AppendingState<Integer, ACC>, ?> stateDescriptor, 			InternalWindowFunction<ACC, OUT, Integer, W> windowFunction) throws Exception;1490282941;Special method for creating a {@link WindowOperator} with a custom {@link StateDescriptor}_for the window contents state.;private <W extends Window, ACC, OUT> KeyedOneInputStreamOperatorTestHarness<Integer, Integer, OUT> createWindowOperator(_			WindowAssigner<Integer, W> assigner,_			Trigger<Integer, W> trigger,_			long allowedLatenss,_			StateDescriptor<? extends AppendingState<Integer, ACC>, ?> stateDescriptor,_			InternalWindowFunction<ACC, OUT, Integer, W> windowFunction) throws Exception {__		KeySelector<Integer, Integer> keySelector = new KeySelector<Integer, Integer>() {_			private static final long serialVersionUID = 1L___			@Override_			public Integer getKey(Integer value) throws Exception {_				return value__			}_		}___		@SuppressWarnings("unchecked")_		WindowOperator<Integer, Integer, ACC, OUT, W> operator = new WindowOperator<>(_				assigner,_				assigner.getWindowSerializer(new ExecutionConfig()),_				keySelector,_				IntSerializer.INSTANCE,_				stateDescriptor,_				windowFunction,_				trigger,_				allowedLatenss,_				null )___		return new KeyedOneInputStreamOperatorTestHarness<>(_				operator,_				keySelector,_				BasicTypeInfo.INT_TYPE_INFO)__	};special,method,for,creating,a,link,window,operator,with,a,custom,link,state,descriptor,for,the,window,contents,state;private,w,extends,window,acc,out,keyed,one,input,stream,operator,test,harness,integer,integer,out,create,window,operator,window,assigner,integer,w,assigner,trigger,integer,w,trigger,long,allowed,latenss,state,descriptor,extends,appending,state,integer,acc,state,descriptor,internal,window,function,acc,out,integer,w,window,function,throws,exception,key,selector,integer,integer,key,selector,new,key,selector,integer,integer,private,static,final,long,serial,version,uid,1l,override,public,integer,get,key,integer,value,throws,exception,return,value,suppress,warnings,unchecked,window,operator,integer,integer,acc,out,w,operator,new,window,operator,assigner,assigner,get,window,serializer,new,execution,config,key,selector,int,serializer,instance,state,descriptor,window,function,trigger,allowed,latenss,null,return,new,keyed,one,input,stream,operator,test,harness,operator,key,selector,basic,type,info
RegularWindowOperatorContractTest -> private <W extends Window, ACC, OUT> KeyedOneInputStreamOperatorTestHarness<Integer, Integer, OUT> createWindowOperator( 			WindowAssigner<Integer, W> assigner, 			Trigger<Integer, W> trigger, 			long allowedLatenss, 			StateDescriptor<? extends AppendingState<Integer, ACC>, ?> stateDescriptor, 			InternalWindowFunction<ACC, OUT, Integer, W> windowFunction) throws Exception;1490457557;Special method for creating a {@link WindowOperator} with a custom {@link StateDescriptor}_for the window contents state.;private <W extends Window, ACC, OUT> KeyedOneInputStreamOperatorTestHarness<Integer, Integer, OUT> createWindowOperator(_			WindowAssigner<Integer, W> assigner,_			Trigger<Integer, W> trigger,_			long allowedLatenss,_			StateDescriptor<? extends AppendingState<Integer, ACC>, ?> stateDescriptor,_			InternalWindowFunction<ACC, OUT, Integer, W> windowFunction) throws Exception {__		KeySelector<Integer, Integer> keySelector = new KeySelector<Integer, Integer>() {_			private static final long serialVersionUID = 1L___			@Override_			public Integer getKey(Integer value) throws Exception {_				return value__			}_		}___		@SuppressWarnings("unchecked")_		WindowOperator<Integer, Integer, ACC, OUT, W> operator = new WindowOperator<>(_				assigner,_				assigner.getWindowSerializer(new ExecutionConfig()),_				keySelector,_				IntSerializer.INSTANCE,_				stateDescriptor,_				windowFunction,_				trigger,_				allowedLatenss,_				null )___		return new KeyedOneInputStreamOperatorTestHarness<>(_				operator,_				keySelector,_				BasicTypeInfo.INT_TYPE_INFO)__	};special,method,for,creating,a,link,window,operator,with,a,custom,link,state,descriptor,for,the,window,contents,state;private,w,extends,window,acc,out,keyed,one,input,stream,operator,test,harness,integer,integer,out,create,window,operator,window,assigner,integer,w,assigner,trigger,integer,w,trigger,long,allowed,latenss,state,descriptor,extends,appending,state,integer,acc,state,descriptor,internal,window,function,acc,out,integer,w,window,function,throws,exception,key,selector,integer,integer,key,selector,new,key,selector,integer,integer,private,static,final,long,serial,version,uid,1l,override,public,integer,get,key,integer,value,throws,exception,return,value,suppress,warnings,unchecked,window,operator,integer,integer,acc,out,w,operator,new,window,operator,assigner,assigner,get,window,serializer,new,execution,config,key,selector,int,serializer,instance,state,descriptor,window,function,trigger,allowed,latenss,null,return,new,keyed,one,input,stream,operator,test,harness,operator,key,selector,basic,type,info
RegularWindowOperatorContractTest -> private <W extends Window, ACC, OUT> KeyedOneInputStreamOperatorTestHarness<Integer, Integer, OUT> createWindowOperator( 			WindowAssigner<Integer, W> assigner, 			Trigger<Integer, W> trigger, 			long allowedLatenss, 			StateDescriptor<? extends AppendingState<Integer, ACC>, ?> stateDescriptor, 			InternalWindowFunction<ACC, OUT, Integer, W> windowFunction) throws Exception;1495484544;Special method for creating a {@link WindowOperator} with a custom {@link StateDescriptor}_for the window contents state.;private <W extends Window, ACC, OUT> KeyedOneInputStreamOperatorTestHarness<Integer, Integer, OUT> createWindowOperator(_			WindowAssigner<Integer, W> assigner,_			Trigger<Integer, W> trigger,_			long allowedLatenss,_			StateDescriptor<? extends AppendingState<Integer, ACC>, ?> stateDescriptor,_			InternalWindowFunction<ACC, OUT, Integer, W> windowFunction) throws Exception {__		KeySelector<Integer, Integer> keySelector = new KeySelector<Integer, Integer>() {_			private static final long serialVersionUID = 1L___			@Override_			public Integer getKey(Integer value) throws Exception {_				return value__			}_		}___		@SuppressWarnings("unchecked")_		WindowOperator<Integer, Integer, ACC, OUT, W> operator = new WindowOperator<>(_				assigner,_				assigner.getWindowSerializer(new ExecutionConfig()),_				keySelector,_				IntSerializer.INSTANCE,_				stateDescriptor,_				windowFunction,_				trigger,_				allowedLatenss,_				null )___		return new KeyedOneInputStreamOperatorTestHarness<>(_				operator,_				keySelector,_				BasicTypeInfo.INT_TYPE_INFO)__	};special,method,for,creating,a,link,window,operator,with,a,custom,link,state,descriptor,for,the,window,contents,state;private,w,extends,window,acc,out,keyed,one,input,stream,operator,test,harness,integer,integer,out,create,window,operator,window,assigner,integer,w,assigner,trigger,integer,w,trigger,long,allowed,latenss,state,descriptor,extends,appending,state,integer,acc,state,descriptor,internal,window,function,acc,out,integer,w,window,function,throws,exception,key,selector,integer,integer,key,selector,new,key,selector,integer,integer,private,static,final,long,serial,version,uid,1l,override,public,integer,get,key,integer,value,throws,exception,return,value,suppress,warnings,unchecked,window,operator,integer,integer,acc,out,w,operator,new,window,operator,assigner,assigner,get,window,serializer,new,execution,config,key,selector,int,serializer,instance,state,descriptor,window,function,trigger,allowed,latenss,null,return,new,keyed,one,input,stream,operator,test,harness,operator,key,selector,basic,type,info
