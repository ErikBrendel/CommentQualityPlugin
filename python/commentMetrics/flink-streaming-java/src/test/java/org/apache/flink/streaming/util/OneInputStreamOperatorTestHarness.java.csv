# id;timestamp;commentText;codeText;commentWords;codeWords
OneInputStreamOperatorTestHarness -> public void initializeState(OperatorStateHandles operatorStateHandles) throws Exception;1476972861;Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#initializeState(OperatorStateHandles)}._Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#setup(StreamTask, StreamConfig, Output)}_if it was not called before.;public void initializeState(OperatorStateHandles operatorStateHandles) throws Exception {_		if (!setupCalled) {_			setup()__		}_		operator.initializeState(operatorStateHandles)__		initializeCalled = true__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,initialize,state,operator,state,handles,calls,link,org,apache,flink,streaming,api,operators,stream,operator,setup,stream,task,stream,config,output,if,it,was,not,called,before;public,void,initialize,state,operator,state,handles,operator,state,handles,throws,exception,if,setup,called,setup,operator,initialize,state,operator,state,handles,initialize,called,true
OneInputStreamOperatorTestHarness -> public void initializeState(OperatorStateHandles operatorStateHandles) throws Exception;1477069384;Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#initializeState(OperatorStateHandles)}._Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#setup(StreamTask, StreamConfig, Output)}_if it was not called before.;public void initializeState(OperatorStateHandles operatorStateHandles) throws Exception {_		if (!setupCalled) {_			setup()__		}_		operator.initializeState(operatorStateHandles)__		initializeCalled = true__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,initialize,state,operator,state,handles,calls,link,org,apache,flink,streaming,api,operators,stream,operator,setup,stream,task,stream,config,output,if,it,was,not,called,before;public,void,initialize,state,operator,state,handles,operator,state,handles,throws,exception,if,setup,called,setup,operator,initialize,state,operator,state,handles,initialize,called,true
OneInputStreamOperatorTestHarness -> public void initializeState(OperatorStateHandles operatorStateHandles) throws Exception;1477069384;Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#initializeState(OperatorStateHandles)}._Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#setup(StreamTask, StreamConfig, Output)}_if it was not called before.;public void initializeState(OperatorStateHandles operatorStateHandles) throws Exception {_		if (!setupCalled) {_			setup()__		}_		operator.initializeState(operatorStateHandles)__		initializeCalled = true__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,initialize,state,operator,state,handles,calls,link,org,apache,flink,streaming,api,operators,stream,operator,setup,stream,task,stream,config,output,if,it,was,not,called,before;public,void,initialize,state,operator,state,handles,operator,state,handles,throws,exception,if,setup,called,setup,operator,initialize,state,operator,state,handles,initialize,called,true
OneInputStreamOperatorTestHarness -> public void initializeState(OperatorStateHandles operatorStateHandles) throws Exception;1477069384;Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#initializeState(OperatorStateHandles)}._Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#setup(StreamTask, StreamConfig, Output)}_if it was not called before.;public void initializeState(OperatorStateHandles operatorStateHandles) throws Exception {_		if (!setupCalled) {_			setup()__		}_		operator.initializeState(operatorStateHandles)__		initializeCalled = true__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,initialize,state,operator,state,handles,calls,link,org,apache,flink,streaming,api,operators,stream,operator,setup,stream,task,stream,config,output,if,it,was,not,called,before;public,void,initialize,state,operator,state,handles,operator,state,handles,throws,exception,if,setup,called,setup,operator,initialize,state,operator,state,handles,initialize,called,true
OneInputStreamOperatorTestHarness -> public void notifyOfCompletedCheckpoint(long checkpointId) throws Exception;1472546392;Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#notifyOfCompletedCheckpoint(long)};public void notifyOfCompletedCheckpoint(long checkpointId) throws Exception {_		operator.notifyOfCompletedCheckpoint(checkpointId)__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,notify,of,completed,checkpoint,long;public,void,notify,of,completed,checkpoint,long,checkpoint,id,throws,exception,operator,notify,of,completed,checkpoint,checkpoint,id
OneInputStreamOperatorTestHarness -> public void notifyOfCompletedCheckpoint(long checkpointId) throws Exception;1472663401;Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#notifyOfCompletedCheckpoint(long)} ()};public void notifyOfCompletedCheckpoint(long checkpointId) throws Exception {_		operator.notifyOfCompletedCheckpoint(checkpointId)__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,notify,of,completed,checkpoint,long;public,void,notify,of,completed,checkpoint,long,checkpoint,id,throws,exception,operator,notify,of,completed,checkpoint,checkpoint,id
OneInputStreamOperatorTestHarness -> public void notifyOfCompletedCheckpoint(long checkpointId) throws Exception;1472663401;Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#notifyOfCompletedCheckpoint(long)} ()};public void notifyOfCompletedCheckpoint(long checkpointId) throws Exception {_		operator.notifyOfCompletedCheckpoint(checkpointId)__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,notify,of,completed,checkpoint,long;public,void,notify,of,completed,checkpoint,long,checkpoint,id,throws,exception,operator,notify,of,completed,checkpoint,checkpoint,id
OneInputStreamOperatorTestHarness -> public void notifyOfCompletedCheckpoint(long checkpointId) throws Exception;1472663401;Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#notifyOfCompletedCheckpoint(long)} ()};public void notifyOfCompletedCheckpoint(long checkpointId) throws Exception {_		operator.notifyOfCompletedCheckpoint(checkpointId)__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,notify,of,completed,checkpoint,long;public,void,notify,of,completed,checkpoint,long,checkpoint,id,throws,exception,operator,notify,of,completed,checkpoint,checkpoint,id
OneInputStreamOperatorTestHarness -> public void notifyOfCompletedCheckpoint(long checkpointId) throws Exception;1474635666;Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#notifyOfCompletedCheckpoint(long)} ()};public void notifyOfCompletedCheckpoint(long checkpointId) throws Exception {_		operator.notifyOfCompletedCheckpoint(checkpointId)__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,notify,of,completed,checkpoint,long;public,void,notify,of,completed,checkpoint,long,checkpoint,id,throws,exception,operator,notify,of,completed,checkpoint,checkpoint,id
OneInputStreamOperatorTestHarness -> public void notifyOfCompletedCheckpoint(long checkpointId) throws Exception;1474635666;Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#notifyOfCompletedCheckpoint(long)} ()};public void notifyOfCompletedCheckpoint(long checkpointId) throws Exception {_		operator.notifyOfCompletedCheckpoint(checkpointId)__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,notify,of,completed,checkpoint,long;public,void,notify,of,completed,checkpoint,long,checkpoint,id,throws,exception,operator,notify,of,completed,checkpoint,checkpoint,id
OneInputStreamOperatorTestHarness -> public void notifyOfCompletedCheckpoint(long checkpointId) throws Exception;1474635667;Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#notifyOfCompletedCheckpoint(long)} ()};public void notifyOfCompletedCheckpoint(long checkpointId) throws Exception {_		operator.notifyOfCompletedCheckpoint(checkpointId)__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,notify,of,completed,checkpoint,long;public,void,notify,of,completed,checkpoint,long,checkpoint,id,throws,exception,operator,notify,of,completed,checkpoint,checkpoint,id
OneInputStreamOperatorTestHarness -> public void notifyOfCompletedCheckpoint(long checkpointId) throws Exception;1475231926;Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#notifyOfCompletedCheckpoint(long)} ()};public void notifyOfCompletedCheckpoint(long checkpointId) throws Exception {_		operator.notifyOfCompletedCheckpoint(checkpointId)__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,notify,of,completed,checkpoint,long;public,void,notify,of,completed,checkpoint,long,checkpoint,id,throws,exception,operator,notify,of,completed,checkpoint,checkpoint,id
OneInputStreamOperatorTestHarness -> public void notifyOfCompletedCheckpoint(long checkpointId) throws Exception;1475688973;Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#notifyOfCompletedCheckpoint(long)} ()};public void notifyOfCompletedCheckpoint(long checkpointId) throws Exception {_		operator.notifyOfCompletedCheckpoint(checkpointId)__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,notify,of,completed,checkpoint,long;public,void,notify,of,completed,checkpoint,long,checkpoint,id,throws,exception,operator,notify,of,completed,checkpoint,checkpoint,id
OneInputStreamOperatorTestHarness -> public void notifyOfCompletedCheckpoint(long checkpointId) throws Exception;1475688973;Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#notifyOfCompletedCheckpoint(long)} ()};public void notifyOfCompletedCheckpoint(long checkpointId) throws Exception {_		operator.notifyOfCompletedCheckpoint(checkpointId)__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,notify,of,completed,checkpoint,long;public,void,notify,of,completed,checkpoint,long,checkpoint,id,throws,exception,operator,notify,of,completed,checkpoint,checkpoint,id
OneInputStreamOperatorTestHarness -> public void notifyOfCompletedCheckpoint(long checkpointId) throws Exception;1476448412;Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#notifyOfCompletedCheckpoint(long)} ()};public void notifyOfCompletedCheckpoint(long checkpointId) throws Exception {_		operator.notifyOfCompletedCheckpoint(checkpointId)__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,notify,of,completed,checkpoint,long;public,void,notify,of,completed,checkpoint,long,checkpoint,id,throws,exception,operator,notify,of,completed,checkpoint,checkpoint,id
OneInputStreamOperatorTestHarness -> public void notifyOfCompletedCheckpoint(long checkpointId) throws Exception;1476972861;Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#notifyOfCompletedCheckpoint(long)} ()};public void notifyOfCompletedCheckpoint(long checkpointId) throws Exception {_		operator.notifyOfCompletedCheckpoint(checkpointId)__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,notify,of,completed,checkpoint,long;public,void,notify,of,completed,checkpoint,long,checkpoint,id,throws,exception,operator,notify,of,completed,checkpoint,checkpoint,id
OneInputStreamOperatorTestHarness -> public void notifyOfCompletedCheckpoint(long checkpointId) throws Exception;1477069384;Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#notifyOfCompletedCheckpoint(long)} ()};public void notifyOfCompletedCheckpoint(long checkpointId) throws Exception {_		operator.notifyOfCompletedCheckpoint(checkpointId)__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,notify,of,completed,checkpoint,long;public,void,notify,of,completed,checkpoint,long,checkpoint,id,throws,exception,operator,notify,of,completed,checkpoint,checkpoint,id
OneInputStreamOperatorTestHarness -> public void notifyOfCompletedCheckpoint(long checkpointId) throws Exception;1477069384;Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#notifyOfCompletedCheckpoint(long)} ()};public void notifyOfCompletedCheckpoint(long checkpointId) throws Exception {_		operator.notifyOfCompletedCheckpoint(checkpointId)__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,notify,of,completed,checkpoint,long;public,void,notify,of,completed,checkpoint,long,checkpoint,id,throws,exception,operator,notify,of,completed,checkpoint,checkpoint,id
OneInputStreamOperatorTestHarness -> public void notifyOfCompletedCheckpoint(long checkpointId) throws Exception;1477069384;Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#notifyOfCompletedCheckpoint(long)} ()};public void notifyOfCompletedCheckpoint(long checkpointId) throws Exception {_		operator.notifyOfCompletedCheckpoint(checkpointId)__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,notify,of,completed,checkpoint,long;public,void,notify,of,completed,checkpoint,long,checkpoint,id,throws,exception,operator,notify,of,completed,checkpoint,checkpoint,id
OneInputStreamOperatorTestHarness -> public void close() throws Exception;1445418103;Calls close on the operator.;public void close() throws Exception {_		operator.close()__	};calls,close,on,the,operator;public,void,close,throws,exception,operator,close
OneInputStreamOperatorTestHarness -> public void close() throws Exception;1453987157;Calls close and dispose on the operator.;public void close() throws Exception {_		operator.close()__		operator.dispose()__	};calls,close,and,dispose,on,the,operator;public,void,close,throws,exception,operator,close,operator,dispose
OneInputStreamOperatorTestHarness -> public void close() throws Exception;1454527671;Calls close and dispose on the operator.;public void close() throws Exception {_		operator.close()__		operator.dispose()__	};calls,close,and,dispose,on,the,operator;public,void,close,throws,exception,operator,close,operator,dispose
OneInputStreamOperatorTestHarness -> public void close() throws Exception;1455704943;Calls close and dispose on the operator.;public void close() throws Exception {_		operator.close()__		operator.dispose()__	};calls,close,and,dispose,on,the,operator;public,void,close,throws,exception,operator,close,operator,dispose
OneInputStreamOperatorTestHarness -> public void close() throws Exception;1456848141;Calls close and dispose on the operator.;public void close() throws Exception {_		operator.close()__		operator.dispose()__	};calls,close,and,dispose,on,the,operator;public,void,close,throws,exception,operator,close,operator,dispose
OneInputStreamOperatorTestHarness -> public void close() throws Exception;1461572320;Calls close and dispose on the operator.;public void close() throws Exception {_		operator.close()__		operator.dispose()__		setupCalled = false__	};calls,close,and,dispose,on,the,operator;public,void,close,throws,exception,operator,close,operator,dispose,setup,called,false
OneInputStreamOperatorTestHarness -> public void close() throws Exception;1465920682;Calls close and dispose on the operator.;public void close() throws Exception {_		operator.close()__		operator.dispose()__		setupCalled = false__	};calls,close,and,dispose,on,the,operator;public,void,close,throws,exception,operator,close,operator,dispose,setup,called,false
OneInputStreamOperatorTestHarness -> public void close() throws Exception;1467040572;Calls close and dispose on the operator.;public void close() throws Exception {_		operator.close()__		operator.dispose()__		if (timeServiceProvider != null) {_			timeServiceProvider.shutdownService()__		}_		setupCalled = false__	};calls,close,and,dispose,on,the,operator;public,void,close,throws,exception,operator,close,operator,dispose,if,time,service,provider,null,time,service,provider,shutdown,service,setup,called,false
OneInputStreamOperatorTestHarness -> public void close() throws Exception;1467040572;Calls close and dispose on the operator.;public void close() throws Exception {_		operator.close()__		operator.dispose()__		if (timeServiceProvider != null) {_			timeServiceProvider.shutdownService()__		}_		setupCalled = false__	};calls,close,and,dispose,on,the,operator;public,void,close,throws,exception,operator,close,operator,dispose,if,time,service,provider,null,time,service,provider,shutdown,service,setup,called,false
OneInputStreamOperatorTestHarness -> public void close() throws Exception;1468339633;Calls close and dispose on the operator.;public void close() throws Exception {_		operator.close()__		operator.dispose()__		if (timeServiceProvider != null) {_			timeServiceProvider.shutdownService()__		}_		setupCalled = false__	};calls,close,and,dispose,on,the,operator;public,void,close,throws,exception,operator,close,operator,dispose,if,time,service,provider,null,time,service,provider,shutdown,service,setup,called,false
OneInputStreamOperatorTestHarness -> public void close() throws Exception;1468523508;Calls close and dispose on the operator.;public void close() throws Exception {_		operator.close()__		operator.dispose()__		if (timeServiceProvider != null) {_			timeServiceProvider.shutdownService()__		}_		setupCalled = false__	};calls,close,and,dispose,on,the,operator;public,void,close,throws,exception,operator,close,operator,dispose,if,time,service,provider,null,time,service,provider,shutdown,service,setup,called,false
OneInputStreamOperatorTestHarness -> public void close() throws Exception;1468833363;Calls close and dispose on the operator.;public void close() throws Exception {_		operator.close()__		operator.dispose()__		if (timeServiceProvider != null) {_			timeServiceProvider.shutdownService()__		}_		setupCalled = false__	};calls,close,and,dispose,on,the,operator;public,void,close,throws,exception,operator,close,operator,dispose,if,time,service,provider,null,time,service,provider,shutdown,service,setup,called,false
OneInputStreamOperatorTestHarness -> public void close() throws Exception;1472546392;Calls close and dispose on the operator.;public void close() throws Exception {_		operator.close()__		operator.dispose()__		if (timeServiceProvider != null) {_			timeServiceProvider.shutdownService()__		}_		setupCalled = false__	};calls,close,and,dispose,on,the,operator;public,void,close,throws,exception,operator,close,operator,dispose,if,time,service,provider,null,time,service,provider,shutdown,service,setup,called,false
OneInputStreamOperatorTestHarness -> public void close() throws Exception;1472663401;Calls close and dispose on the operator.;public void close() throws Exception {_		operator.close()__		operator.dispose()__		if (timeServiceProvider != null) {_			timeServiceProvider.shutdownService()__		}_		setupCalled = false__	};calls,close,and,dispose,on,the,operator;public,void,close,throws,exception,operator,close,operator,dispose,if,time,service,provider,null,time,service,provider,shutdown,service,setup,called,false
OneInputStreamOperatorTestHarness -> public void close() throws Exception;1472663401;Calls close and dispose on the operator.;public void close() throws Exception {_		operator.close()__		operator.dispose()__		if (timeServiceProvider != null) {_			timeServiceProvider.shutdownService()__		}_		setupCalled = false__	};calls,close,and,dispose,on,the,operator;public,void,close,throws,exception,operator,close,operator,dispose,if,time,service,provider,null,time,service,provider,shutdown,service,setup,called,false
OneInputStreamOperatorTestHarness -> public void close() throws Exception;1472663401;Calls close and dispose on the operator.;public void close() throws Exception {_		operator.close()__		operator.dispose()__		if (timeServiceProvider != null) {_			timeServiceProvider.shutdownService()__		}_		setupCalled = false__	};calls,close,and,dispose,on,the,operator;public,void,close,throws,exception,operator,close,operator,dispose,if,time,service,provider,null,time,service,provider,shutdown,service,setup,called,false
OneInputStreamOperatorTestHarness -> public void close() throws Exception;1474635666;Calls close and dispose on the operator.;public void close() throws Exception {_		operator.close()__		operator.dispose()__		if (timeServiceProvider != null) {_			timeServiceProvider.shutdownService()__		}_		setupCalled = false__	};calls,close,and,dispose,on,the,operator;public,void,close,throws,exception,operator,close,operator,dispose,if,time,service,provider,null,time,service,provider,shutdown,service,setup,called,false
OneInputStreamOperatorTestHarness -> public void close() throws Exception;1474635666;Calls close and dispose on the operator.;public void close() throws Exception {_		operator.close()__		operator.dispose()__		if (timeServiceProvider != null) {_			timeServiceProvider.shutdownService()__		}_		setupCalled = false__	};calls,close,and,dispose,on,the,operator;public,void,close,throws,exception,operator,close,operator,dispose,if,time,service,provider,null,time,service,provider,shutdown,service,setup,called,false
OneInputStreamOperatorTestHarness -> public void close() throws Exception;1474635667;Calls close and dispose on the operator.;public void close() throws Exception {_		operator.close()__		operator.dispose()__		if (timeServiceProvider != null) {_			timeServiceProvider.shutdownService()__		}_		setupCalled = false__	};calls,close,and,dispose,on,the,operator;public,void,close,throws,exception,operator,close,operator,dispose,if,time,service,provider,null,time,service,provider,shutdown,service,setup,called,false
OneInputStreamOperatorTestHarness -> public void close() throws Exception;1475231926;Calls close and dispose on the operator.;public void close() throws Exception {_		operator.close()__		operator.dispose()__		if (timeServiceProvider != null) {_			timeServiceProvider.shutdownService()__		}_		setupCalled = false__	};calls,close,and,dispose,on,the,operator;public,void,close,throws,exception,operator,close,operator,dispose,if,time,service,provider,null,time,service,provider,shutdown,service,setup,called,false
OneInputStreamOperatorTestHarness -> public void close() throws Exception;1475688973;Calls close and dispose on the operator.;public void close() throws Exception {_		operator.close()__		operator.dispose()__		if (timeServiceProvider != null) {_			timeServiceProvider.shutdownService()__		}_		setupCalled = false__	};calls,close,and,dispose,on,the,operator;public,void,close,throws,exception,operator,close,operator,dispose,if,time,service,provider,null,time,service,provider,shutdown,service,setup,called,false
OneInputStreamOperatorTestHarness -> public void close() throws Exception;1475688973;Calls close and dispose on the operator.;public void close() throws Exception {_		operator.close()__		operator.dispose()__		if (timeServiceProvider != null) {_			timeServiceProvider.shutdownService()__		}_		setupCalled = false__	};calls,close,and,dispose,on,the,operator;public,void,close,throws,exception,operator,close,operator,dispose,if,time,service,provider,null,time,service,provider,shutdown,service,setup,called,false
OneInputStreamOperatorTestHarness -> public void close() throws Exception;1476448412;Calls close and dispose on the operator.;public void close() throws Exception {_		operator.close()__		operator.dispose()__		if (timeServiceProvider != null) {_			timeServiceProvider.shutdownService()__		}_		setupCalled = false__	};calls,close,and,dispose,on,the,operator;public,void,close,throws,exception,operator,close,operator,dispose,if,time,service,provider,null,time,service,provider,shutdown,service,setup,called,false
OneInputStreamOperatorTestHarness -> public void close() throws Exception;1476972861;Calls close and dispose on the operator.;public void close() throws Exception {_		operator.close()__		operator.dispose()__		if (timeServiceProvider != null) {_			timeServiceProvider.shutdownService()__		}_		setupCalled = false__	};calls,close,and,dispose,on,the,operator;public,void,close,throws,exception,operator,close,operator,dispose,if,time,service,provider,null,time,service,provider,shutdown,service,setup,called,false
OneInputStreamOperatorTestHarness -> public void close() throws Exception;1477069384;Calls close and dispose on the operator.;public void close() throws Exception {_		operator.close()__		operator.dispose()__		if (processingTimeService != null) {_			processingTimeService.shutdownService()__		}_		setupCalled = false__	};calls,close,and,dispose,on,the,operator;public,void,close,throws,exception,operator,close,operator,dispose,if,processing,time,service,null,processing,time,service,shutdown,service,setup,called,false
OneInputStreamOperatorTestHarness -> public void close() throws Exception;1477069384;Calls close and dispose on the operator.;public void close() throws Exception {_		operator.close()__		operator.dispose()__		if (processingTimeService != null) {_			processingTimeService.shutdownService()__		}_		setupCalled = false__	};calls,close,and,dispose,on,the,operator;public,void,close,throws,exception,operator,close,operator,dispose,if,processing,time,service,null,processing,time,service,shutdown,service,setup,called,false
OneInputStreamOperatorTestHarness -> public void close() throws Exception;1477069384;Calls close and dispose on the operator.;public void close() throws Exception {_		operator.close()__		operator.dispose()__		if (processingTimeService != null) {_			processingTimeService.shutdownService()__		}_		setupCalled = false__	};calls,close,and,dispose,on,the,operator;public,void,close,throws,exception,operator,close,operator,dispose,if,processing,time,service,null,processing,time,service,shutdown,service,setup,called,false
OneInputStreamOperatorTestHarness -> public StreamTaskState snapshot(long checkpointId, long timestamp) throws Exception;1461572320;Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#snapshotOperatorState(long, long)} ()};public StreamTaskState snapshot(long checkpointId, long timestamp) throws Exception {_		return operator.snapshotOperatorState(checkpointId, timestamp)__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,snapshot,operator,state,long,long;public,stream,task,state,snapshot,long,checkpoint,id,long,timestamp,throws,exception,return,operator,snapshot,operator,state,checkpoint,id,timestamp
OneInputStreamOperatorTestHarness -> public StreamTaskState snapshot(long checkpointId, long timestamp) throws Exception;1465920682;Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#snapshotOperatorState(long, long)} ()};public StreamTaskState snapshot(long checkpointId, long timestamp) throws Exception {_		return operator.snapshotOperatorState(checkpointId, timestamp)__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,snapshot,operator,state,long,long;public,stream,task,state,snapshot,long,checkpoint,id,long,timestamp,throws,exception,return,operator,snapshot,operator,state,checkpoint,id,timestamp
OneInputStreamOperatorTestHarness -> public StreamTaskState snapshot(long checkpointId, long timestamp) throws Exception;1467040572;Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#snapshotOperatorState(long, long)} ()};public StreamTaskState snapshot(long checkpointId, long timestamp) throws Exception {_		return operator.snapshotOperatorState(checkpointId, timestamp)__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,snapshot,operator,state,long,long;public,stream,task,state,snapshot,long,checkpoint,id,long,timestamp,throws,exception,return,operator,snapshot,operator,state,checkpoint,id,timestamp
OneInputStreamOperatorTestHarness -> public StreamTaskState snapshot(long checkpointId, long timestamp) throws Exception;1467040572;Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#snapshotOperatorState(long, long)} ()};public StreamTaskState snapshot(long checkpointId, long timestamp) throws Exception {_		return operator.snapshotOperatorState(checkpointId, timestamp)__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,snapshot,operator,state,long,long;public,stream,task,state,snapshot,long,checkpoint,id,long,timestamp,throws,exception,return,operator,snapshot,operator,state,checkpoint,id,timestamp
OneInputStreamOperatorTestHarness -> public StreamTaskState snapshot(long checkpointId, long timestamp) throws Exception;1468339633;Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#snapshotOperatorState(long, long)} ()};public StreamTaskState snapshot(long checkpointId, long timestamp) throws Exception {_		return operator.snapshotOperatorState(checkpointId, timestamp)__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,snapshot,operator,state,long,long;public,stream,task,state,snapshot,long,checkpoint,id,long,timestamp,throws,exception,return,operator,snapshot,operator,state,checkpoint,id,timestamp
OneInputStreamOperatorTestHarness -> public StreamTaskState snapshot(long checkpointId, long timestamp) throws Exception;1468523508;Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#snapshotOperatorState(long, long)} ()};public StreamTaskState snapshot(long checkpointId, long timestamp) throws Exception {_		return operator.snapshotOperatorState(checkpointId, timestamp)__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,snapshot,operator,state,long,long;public,stream,task,state,snapshot,long,checkpoint,id,long,timestamp,throws,exception,return,operator,snapshot,operator,state,checkpoint,id,timestamp
OneInputStreamOperatorTestHarness -> public StreamTaskState snapshot(long checkpointId, long timestamp) throws Exception;1468833363;Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#snapshotOperatorState(long, long)} ()};public StreamTaskState snapshot(long checkpointId, long timestamp) throws Exception {_		StreamTaskState snapshot = operator.snapshotOperatorState(checkpointId, timestamp)__		_		if (snapshot != null) {_			if (snapshot.getFunctionState() instanceof AsynchronousStateHandle) {_				AsynchronousStateHandle<Serializable> asyncState = (AsynchronousStateHandle<Serializable>) snapshot.getFunctionState()__				snapshot.setFunctionState(asyncState.materialize())__			}_			if (snapshot.getOperatorState() instanceof AsynchronousStateHandle) {_				AsynchronousStateHandle<?> asyncState = (AsynchronousStateHandle<?>) snapshot.getOperatorState()__				snapshot.setOperatorState(asyncState.materialize())__			}_			if (snapshot.getKvStates() != null) {_				Set<String> keys = snapshot.getKvStates().keySet()__				HashMap<String, KvStateSnapshot<?, ?, ?, ?, ?>> kvStates = snapshot.getKvStates()__				for (String key: keys) {_					if (kvStates.get(key) instanceof AsynchronousKvStateSnapshot) {_						AsynchronousKvStateSnapshot<?, ?, ?, ?, ?> asyncHandle = (AsynchronousKvStateSnapshot<?, ?, ?, ?, ?>) kvStates.get(key)__						kvStates.put(key, asyncHandle.materialize())__					}_				}_			}__		}_		return snapshot__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,snapshot,operator,state,long,long;public,stream,task,state,snapshot,long,checkpoint,id,long,timestamp,throws,exception,stream,task,state,snapshot,operator,snapshot,operator,state,checkpoint,id,timestamp,if,snapshot,null,if,snapshot,get,function,state,instanceof,asynchronous,state,handle,asynchronous,state,handle,serializable,async,state,asynchronous,state,handle,serializable,snapshot,get,function,state,snapshot,set,function,state,async,state,materialize,if,snapshot,get,operator,state,instanceof,asynchronous,state,handle,asynchronous,state,handle,async,state,asynchronous,state,handle,snapshot,get,operator,state,snapshot,set,operator,state,async,state,materialize,if,snapshot,get,kv,states,null,set,string,keys,snapshot,get,kv,states,key,set,hash,map,string,kv,state,snapshot,kv,states,snapshot,get,kv,states,for,string,key,keys,if,kv,states,get,key,instanceof,asynchronous,kv,state,snapshot,asynchronous,kv,state,snapshot,async,handle,asynchronous,kv,state,snapshot,kv,states,get,key,kv,states,put,key,async,handle,materialize,return,snapshot
OneInputStreamOperatorTestHarness -> public StreamTaskState snapshot(long checkpointId, long timestamp) throws Exception;1472546392;Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#snapshotOperatorState(long, long)};public StreamTaskState snapshot(long checkpointId, long timestamp) throws Exception {_		StreamTaskState snapshot = operator.snapshotOperatorState(checkpointId, timestamp)__		_		if (snapshot != null) {_			if (snapshot.getFunctionState() instanceof AsynchronousStateHandle) {_				AsynchronousStateHandle<Serializable> asyncState = (AsynchronousStateHandle<Serializable>) snapshot.getFunctionState()__				snapshot.setFunctionState(asyncState.materialize())__			}_			if (snapshot.getOperatorState() instanceof AsynchronousStateHandle) {_				AsynchronousStateHandle<?> asyncState = (AsynchronousStateHandle<?>) snapshot.getOperatorState()__				snapshot.setOperatorState(asyncState.materialize())__			}_			if (snapshot.getKvStates() != null) {_				Set<String> keys = snapshot.getKvStates().keySet()__				HashMap<String, KvStateSnapshot<?, ?, ?, ?, ?>> kvStates = snapshot.getKvStates()__				for (String key: keys) {_					if (kvStates.get(key) instanceof AsynchronousKvStateSnapshot) {_						AsynchronousKvStateSnapshot<?, ?, ?, ?, ?> asyncHandle = (AsynchronousKvStateSnapshot<?, ?, ?, ?, ?>) kvStates.get(key)__						kvStates.put(key, asyncHandle.materialize())__					}_				}_			}__		}_		return snapshot__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,snapshot,operator,state,long,long;public,stream,task,state,snapshot,long,checkpoint,id,long,timestamp,throws,exception,stream,task,state,snapshot,operator,snapshot,operator,state,checkpoint,id,timestamp,if,snapshot,null,if,snapshot,get,function,state,instanceof,asynchronous,state,handle,asynchronous,state,handle,serializable,async,state,asynchronous,state,handle,serializable,snapshot,get,function,state,snapshot,set,function,state,async,state,materialize,if,snapshot,get,operator,state,instanceof,asynchronous,state,handle,asynchronous,state,handle,async,state,asynchronous,state,handle,snapshot,get,operator,state,snapshot,set,operator,state,async,state,materialize,if,snapshot,get,kv,states,null,set,string,keys,snapshot,get,kv,states,key,set,hash,map,string,kv,state,snapshot,kv,states,snapshot,get,kv,states,for,string,key,keys,if,kv,states,get,key,instanceof,asynchronous,kv,state,snapshot,asynchronous,kv,state,snapshot,async,handle,asynchronous,kv,state,snapshot,kv,states,get,key,kv,states,put,key,async,handle,materialize,return,snapshot
OneInputStreamOperatorTestHarness -> public void setup() throws Exception;1461572320;Calls_{@link org.apache.flink.streaming.api.operators.StreamOperator#setup(StreamTask, StreamConfig, Output)} ()};public void setup() throws Exception {_		operator.setup(mockTask, config, new MockOutput())__		setupCalled = true__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,setup,stream,task,stream,config,output;public,void,setup,throws,exception,operator,setup,mock,task,config,new,mock,output,setup,called,true
OneInputStreamOperatorTestHarness -> public void setup() throws Exception;1465920682;Calls_{@link org.apache.flink.streaming.api.operators.StreamOperator#setup(StreamTask, StreamConfig, Output)} ()};public void setup() throws Exception {_		operator.setup(mockTask, config, new MockOutput())__		setupCalled = true__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,setup,stream,task,stream,config,output;public,void,setup,throws,exception,operator,setup,mock,task,config,new,mock,output,setup,called,true
OneInputStreamOperatorTestHarness -> public void setup() throws Exception;1467040572;Calls_{@link org.apache.flink.streaming.api.operators.StreamOperator#setup(StreamTask, StreamConfig, Output)} ()};public void setup() throws Exception {_		operator.setup(mockTask, config, new MockOutput())__		setupCalled = true__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,setup,stream,task,stream,config,output;public,void,setup,throws,exception,operator,setup,mock,task,config,new,mock,output,setup,called,true
OneInputStreamOperatorTestHarness -> public void setup() throws Exception;1467040572;Calls_{@link org.apache.flink.streaming.api.operators.StreamOperator#setup(StreamTask, StreamConfig, Output)} ()};public void setup() throws Exception {_		operator.setup(mockTask, config, new MockOutput())__		setupCalled = true__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,setup,stream,task,stream,config,output;public,void,setup,throws,exception,operator,setup,mock,task,config,new,mock,output,setup,called,true
OneInputStreamOperatorTestHarness -> public void setup() throws Exception;1468339633;Calls_{@link org.apache.flink.streaming.api.operators.StreamOperator#setup(StreamTask, StreamConfig, Output)} ()};public void setup() throws Exception {_		operator.setup(mockTask, config, new MockOutput())__		setupCalled = true__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,setup,stream,task,stream,config,output;public,void,setup,throws,exception,operator,setup,mock,task,config,new,mock,output,setup,called,true
OneInputStreamOperatorTestHarness -> public void setup() throws Exception;1468523508;Calls_{@link org.apache.flink.streaming.api.operators.StreamOperator#setup(StreamTask, StreamConfig, Output)} ()};public void setup() throws Exception {_		operator.setup(mockTask, config, new MockOutput())__		setupCalled = true__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,setup,stream,task,stream,config,output;public,void,setup,throws,exception,operator,setup,mock,task,config,new,mock,output,setup,called,true
OneInputStreamOperatorTestHarness -> public void setup() throws Exception;1468833363;Calls_{@link org.apache.flink.streaming.api.operators.StreamOperator#setup(StreamTask, StreamConfig, Output)} ()};public void setup() throws Exception {_		operator.setup(mockTask, config, new MockOutput())__		setupCalled = true__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,setup,stream,task,stream,config,output;public,void,setup,throws,exception,operator,setup,mock,task,config,new,mock,output,setup,called,true
OneInputStreamOperatorTestHarness -> public void setup() throws Exception;1472546392;Calls_{@link org.apache.flink.streaming.api.operators.StreamOperator#setup(StreamTask, StreamConfig, Output)} ()};public void setup() throws Exception {_		operator.setup(mockTask, config, new MockOutput())__		setupCalled = true__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,setup,stream,task,stream,config,output;public,void,setup,throws,exception,operator,setup,mock,task,config,new,mock,output,setup,called,true
OneInputStreamOperatorTestHarness -> public void setup() throws Exception;1472663401;Calls_{@link org.apache.flink.streaming.api.operators.StreamOperator#setup(StreamTask, StreamConfig, Output)} ()};public void setup() throws Exception {_		operator.setup(mockTask, config, new MockOutput())__		setupCalled = true__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,setup,stream,task,stream,config,output;public,void,setup,throws,exception,operator,setup,mock,task,config,new,mock,output,setup,called,true
OneInputStreamOperatorTestHarness -> public void setup() throws Exception;1472663401;Calls_{@link org.apache.flink.streaming.api.operators.StreamOperator#setup(StreamTask, StreamConfig, Output)} ()};public void setup() throws Exception {_		operator.setup(mockTask, config, new MockOutput())__		setupCalled = true__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,setup,stream,task,stream,config,output;public,void,setup,throws,exception,operator,setup,mock,task,config,new,mock,output,setup,called,true
OneInputStreamOperatorTestHarness -> public void setup() throws Exception;1472663401;Calls_{@link org.apache.flink.streaming.api.operators.StreamOperator#setup(StreamTask, StreamConfig, Output)} ()};public void setup() throws Exception {_		operator.setup(mockTask, config, new MockOutput())__		setupCalled = true__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,setup,stream,task,stream,config,output;public,void,setup,throws,exception,operator,setup,mock,task,config,new,mock,output,setup,called,true
OneInputStreamOperatorTestHarness -> public void setup() throws Exception;1474635666;Calls_{@link org.apache.flink.streaming.api.operators.StreamOperator#setup(StreamTask, StreamConfig, Output)} ()};public void setup() throws Exception {_		operator.setup(mockTask, config, new MockOutput())__		setupCalled = true__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,setup,stream,task,stream,config,output;public,void,setup,throws,exception,operator,setup,mock,task,config,new,mock,output,setup,called,true
OneInputStreamOperatorTestHarness -> public void setup() throws Exception;1474635666;Calls_{@link org.apache.flink.streaming.api.operators.StreamOperator#setup(StreamTask, StreamConfig, Output)} ()};public void setup() throws Exception {_		operator.setup(mockTask, config, new MockOutput())__		setupCalled = true__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,setup,stream,task,stream,config,output;public,void,setup,throws,exception,operator,setup,mock,task,config,new,mock,output,setup,called,true
OneInputStreamOperatorTestHarness -> public void setup() throws Exception;1474635667;Calls_{@link org.apache.flink.streaming.api.operators.StreamOperator#setup(StreamTask, StreamConfig, Output)} ()};public void setup() throws Exception {_		operator.setup(mockTask, config, new MockOutput())__		setupCalled = true__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,setup,stream,task,stream,config,output;public,void,setup,throws,exception,operator,setup,mock,task,config,new,mock,output,setup,called,true
OneInputStreamOperatorTestHarness -> public void setup() throws Exception;1475231926;Calls_{@link org.apache.flink.streaming.api.operators.StreamOperator#setup(StreamTask, StreamConfig, Output)} ()};public void setup() throws Exception {_		operator.setup(mockTask, config, new MockOutput())__		setupCalled = true__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,setup,stream,task,stream,config,output;public,void,setup,throws,exception,operator,setup,mock,task,config,new,mock,output,setup,called,true
OneInputStreamOperatorTestHarness -> public void setup() throws Exception;1475688973;Calls_{@link org.apache.flink.streaming.api.operators.StreamOperator#setup(StreamTask, StreamConfig, Output)} ()};public void setup() throws Exception {_		operator.setup(mockTask, config, new MockOutput())__		setupCalled = true__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,setup,stream,task,stream,config,output;public,void,setup,throws,exception,operator,setup,mock,task,config,new,mock,output,setup,called,true
OneInputStreamOperatorTestHarness -> public void setup() throws Exception;1475688973;Calls_{@link org.apache.flink.streaming.api.operators.StreamOperator#setup(StreamTask, StreamConfig, Output)} ()};public void setup() throws Exception {_		operator.setup(mockTask, config, new MockOutput())__		setupCalled = true__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,setup,stream,task,stream,config,output;public,void,setup,throws,exception,operator,setup,mock,task,config,new,mock,output,setup,called,true
OneInputStreamOperatorTestHarness -> public void setup() throws Exception;1476448412;Calls_{@link org.apache.flink.streaming.api.operators.StreamOperator#setup(StreamTask, StreamConfig, Output)} ()};public void setup() throws Exception {_		operator.setup(mockTask, config, new MockOutput())__		setupCalled = true__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,setup,stream,task,stream,config,output;public,void,setup,throws,exception,operator,setup,mock,task,config,new,mock,output,setup,called,true
OneInputStreamOperatorTestHarness -> public void setup() throws Exception;1476972861;Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#setup(StreamTask, StreamConfig, Output)} ()};public void setup() throws Exception {_		operator.setup(mockTask, config, new MockOutput())__		setupCalled = true__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,setup,stream,task,stream,config,output;public,void,setup,throws,exception,operator,setup,mock,task,config,new,mock,output,setup,called,true
OneInputStreamOperatorTestHarness -> public void setup() throws Exception;1477069384;Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#setup(StreamTask, StreamConfig, Output)} ()};public void setup() throws Exception {_		operator.setup(mockTask, config, new MockOutput())__		setupCalled = true__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,setup,stream,task,stream,config,output;public,void,setup,throws,exception,operator,setup,mock,task,config,new,mock,output,setup,called,true
OneInputStreamOperatorTestHarness -> public void setup() throws Exception;1477069384;Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#setup(StreamTask, StreamConfig, Output)} ()};public void setup() throws Exception {_		operator.setup(mockTask, config, new MockOutput())__		setupCalled = true__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,setup,stream,task,stream,config,output;public,void,setup,throws,exception,operator,setup,mock,task,config,new,mock,output,setup,called,true
OneInputStreamOperatorTestHarness -> public void setup() throws Exception;1477069384;Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#setup(StreamTask, StreamConfig, Output)} ()};public void setup() throws Exception {_		operator.setup(mockTask, config, new MockOutput())__		setupCalled = true__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,setup,stream,task,stream,config,output;public,void,setup,throws,exception,operator,setup,mock,task,config,new,mock,output,setup,called,true
OneInputStreamOperatorTestHarness -> public StreamStateHandle snapshot(long checkpointId, long timestamp) throws Exception;1472663401;Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#snapshotState(org.apache.flink.core.fs.FSDataOutputStream, long, long)} ()};public StreamStateHandle snapshot(long checkpointId, long timestamp) throws Exception {_		_		MemoryStateBackend backend = new MemoryStateBackend()__		AbstractStateBackend.CheckpointStateOutputStream outStream =_				backend.createCheckpointStateOutputStream(checkpointId, timestamp)__		operator.snapshotState(outStream, checkpointId, timestamp)__		return outStream.closeAndGetHandle()__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,snapshot,state,org,apache,flink,core,fs,fsdata,output,stream,long,long;public,stream,state,handle,snapshot,long,checkpoint,id,long,timestamp,throws,exception,memory,state,backend,backend,new,memory,state,backend,abstract,state,backend,checkpoint,state,output,stream,out,stream,backend,create,checkpoint,state,output,stream,checkpoint,id,timestamp,operator,snapshot,state,out,stream,checkpoint,id,timestamp,return,out,stream,close,and,get,handle
OneInputStreamOperatorTestHarness -> public StreamStateHandle snapshot(long checkpointId, long timestamp) throws Exception;1472663401;Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#snapshotState(FSDataOutputStream, long, long)} ()};public StreamStateHandle snapshot(long checkpointId, long timestamp) throws Exception {_		CheckpointStreamFactory.CheckpointStateOutputStream outStream = stateBackend.createStreamFactory(_				new JobID(),_				"test_op").createCheckpointStateOutputStream(checkpointId, timestamp)__		operator.snapshotState(outStream, checkpointId, timestamp)__		return outStream.closeAndGetHandle()__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,snapshot,state,fsdata,output,stream,long,long;public,stream,state,handle,snapshot,long,checkpoint,id,long,timestamp,throws,exception,checkpoint,stream,factory,checkpoint,state,output,stream,out,stream,state,backend,create,stream,factory,new,job,id,create,checkpoint,state,output,stream,checkpoint,id,timestamp,operator,snapshot,state,out,stream,checkpoint,id,timestamp,return,out,stream,close,and,get,handle
OneInputStreamOperatorTestHarness -> public StreamStateHandle snapshot(long checkpointId, long timestamp) throws Exception;1472663401;Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#snapshotState(FSDataOutputStream, long, long)} ()};public StreamStateHandle snapshot(long checkpointId, long timestamp) throws Exception {_		CheckpointStreamFactory.CheckpointStateOutputStream outStream = stateBackend.createStreamFactory(_				new JobID(),_				"test_op").createCheckpointStateOutputStream(checkpointId, timestamp)__		operator.snapshotState(outStream, checkpointId, timestamp)__		return outStream.closeAndGetHandle()__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,snapshot,state,fsdata,output,stream,long,long;public,stream,state,handle,snapshot,long,checkpoint,id,long,timestamp,throws,exception,checkpoint,stream,factory,checkpoint,state,output,stream,out,stream,state,backend,create,stream,factory,new,job,id,create,checkpoint,state,output,stream,checkpoint,id,timestamp,operator,snapshot,state,out,stream,checkpoint,id,timestamp,return,out,stream,close,and,get,handle
OneInputStreamOperatorTestHarness -> public StreamStateHandle snapshot(long checkpointId, long timestamp) throws Exception;1474635666;Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#snapshotState(FSDataOutputStream, long, long)} ()};public StreamStateHandle snapshot(long checkpointId, long timestamp) throws Exception {_		CheckpointStreamFactory.CheckpointStateOutputStream outStream = stateBackend.createStreamFactory(_				new JobID(),_				"test_op").createCheckpointStateOutputStream(checkpointId, timestamp)__		operator.snapshotState(outStream, checkpointId, timestamp)__		return outStream.closeAndGetHandle()__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,snapshot,state,fsdata,output,stream,long,long;public,stream,state,handle,snapshot,long,checkpoint,id,long,timestamp,throws,exception,checkpoint,stream,factory,checkpoint,state,output,stream,out,stream,state,backend,create,stream,factory,new,job,id,create,checkpoint,state,output,stream,checkpoint,id,timestamp,operator,snapshot,state,out,stream,checkpoint,id,timestamp,return,out,stream,close,and,get,handle
OneInputStreamOperatorTestHarness -> public StreamStateHandle snapshot(long checkpointId, long timestamp) throws Exception;1474635666;Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#snapshotState(FSDataOutputStream, long, long)} ()};public StreamStateHandle snapshot(long checkpointId, long timestamp) throws Exception {_		CheckpointStreamFactory.CheckpointStateOutputStream outStream = stateBackend.createStreamFactory(_				new JobID(),_				"test_op").createCheckpointStateOutputStream(checkpointId, timestamp)__		operator.snapshotState(outStream, checkpointId, timestamp)__		return outStream.closeAndGetHandle()__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,snapshot,state,fsdata,output,stream,long,long;public,stream,state,handle,snapshot,long,checkpoint,id,long,timestamp,throws,exception,checkpoint,stream,factory,checkpoint,state,output,stream,out,stream,state,backend,create,stream,factory,new,job,id,create,checkpoint,state,output,stream,checkpoint,id,timestamp,operator,snapshot,state,out,stream,checkpoint,id,timestamp,return,out,stream,close,and,get,handle
OneInputStreamOperatorTestHarness -> public StreamStateHandle snapshot(long checkpointId, long timestamp) throws Exception;1474635667;Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#snapshotState(FSDataOutputStream, long, long)} ()};public StreamStateHandle snapshot(long checkpointId, long timestamp) throws Exception {_		CheckpointStreamFactory.CheckpointStateOutputStream outStream = stateBackend.createStreamFactory(_				new JobID(),_				"test_op").createCheckpointStateOutputStream(checkpointId, timestamp)__		operator.snapshotState(outStream, checkpointId, timestamp)__		return outStream.closeAndGetHandle()__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,snapshot,state,fsdata,output,stream,long,long;public,stream,state,handle,snapshot,long,checkpoint,id,long,timestamp,throws,exception,checkpoint,stream,factory,checkpoint,state,output,stream,out,stream,state,backend,create,stream,factory,new,job,id,create,checkpoint,state,output,stream,checkpoint,id,timestamp,operator,snapshot,state,out,stream,checkpoint,id,timestamp,return,out,stream,close,and,get,handle
OneInputStreamOperatorTestHarness -> public StreamStateHandle snapshot(long checkpointId, long timestamp) throws Exception;1475231926;;public StreamStateHandle snapshot(long checkpointId, long timestamp) throws Exception {_		CheckpointStreamFactory.CheckpointStateOutputStream outStream = stateBackend.createStreamFactory(_				new JobID(),_				"test_op").createCheckpointStateOutputStream(checkpointId, timestamp)__		if(operator instanceof StreamCheckpointedOperator) {_			((StreamCheckpointedOperator) operator).snapshotState(outStream, checkpointId, timestamp)__			return outStream.closeAndGetHandle()__		} else {_			throw new RuntimeException("Operator is not StreamCheckpointedOperator")__		}_	};;public,stream,state,handle,snapshot,long,checkpoint,id,long,timestamp,throws,exception,checkpoint,stream,factory,checkpoint,state,output,stream,out,stream,state,backend,create,stream,factory,new,job,id,create,checkpoint,state,output,stream,checkpoint,id,timestamp,if,operator,instanceof,stream,checkpointed,operator,stream,checkpointed,operator,operator,snapshot,state,out,stream,checkpoint,id,timestamp,return,out,stream,close,and,get,handle,else,throw,new,runtime,exception,operator,is,not,stream,checkpointed,operator
OneInputStreamOperatorTestHarness -> public StreamStateHandle snapshot(long checkpointId, long timestamp) throws Exception;1475688973;;public StreamStateHandle snapshot(long checkpointId, long timestamp) throws Exception {_		CheckpointStreamFactory.CheckpointStateOutputStream outStream = stateBackend.createStreamFactory(_				new JobID(),_				"test_op").createCheckpointStateOutputStream(checkpointId, timestamp)__		if(operator instanceof StreamCheckpointedOperator) {_			((StreamCheckpointedOperator) operator).snapshotState(outStream, checkpointId, timestamp)__			return outStream.closeAndGetHandle()__		} else {_			throw new RuntimeException("Operator is not StreamCheckpointedOperator")__		}_	};;public,stream,state,handle,snapshot,long,checkpoint,id,long,timestamp,throws,exception,checkpoint,stream,factory,checkpoint,state,output,stream,out,stream,state,backend,create,stream,factory,new,job,id,create,checkpoint,state,output,stream,checkpoint,id,timestamp,if,operator,instanceof,stream,checkpointed,operator,stream,checkpointed,operator,operator,snapshot,state,out,stream,checkpoint,id,timestamp,return,out,stream,close,and,get,handle,else,throw,new,runtime,exception,operator,is,not,stream,checkpointed,operator
OneInputStreamOperatorTestHarness -> public StreamStateHandle snapshot(long checkpointId, long timestamp) throws Exception;1475688973;;public StreamStateHandle snapshot(long checkpointId, long timestamp) throws Exception {_		CheckpointStreamFactory.CheckpointStateOutputStream outStream = stateBackend.createStreamFactory(_				new JobID(),_				"test_op").createCheckpointStateOutputStream(checkpointId, timestamp)__		if(operator instanceof StreamCheckpointedOperator) {_			((StreamCheckpointedOperator) operator).snapshotState(outStream, checkpointId, timestamp)__			return outStream.closeAndGetHandle()__		} else {_			throw new RuntimeException("Operator is not StreamCheckpointedOperator")__		}_	};;public,stream,state,handle,snapshot,long,checkpoint,id,long,timestamp,throws,exception,checkpoint,stream,factory,checkpoint,state,output,stream,out,stream,state,backend,create,stream,factory,new,job,id,create,checkpoint,state,output,stream,checkpoint,id,timestamp,if,operator,instanceof,stream,checkpointed,operator,stream,checkpointed,operator,operator,snapshot,state,out,stream,checkpoint,id,timestamp,return,out,stream,close,and,get,handle,else,throw,new,runtime,exception,operator,is,not,stream,checkpointed,operator
OneInputStreamOperatorTestHarness -> public StreamStateHandle snapshot(long checkpointId, long timestamp) throws Exception;1476448412;;public StreamStateHandle snapshot(long checkpointId, long timestamp) throws Exception {_		CheckpointStreamFactory.CheckpointStateOutputStream outStream = stateBackend.createStreamFactory(_				new JobID(),_				"test_op").createCheckpointStateOutputStream(checkpointId, timestamp)__		if(operator instanceof StreamCheckpointedOperator) {_			((StreamCheckpointedOperator) operator).snapshotState(outStream, checkpointId, timestamp)__			return outStream.closeAndGetHandle()__		} else {_			throw new RuntimeException("Operator is not StreamCheckpointedOperator")__		}_	};;public,stream,state,handle,snapshot,long,checkpoint,id,long,timestamp,throws,exception,checkpoint,stream,factory,checkpoint,state,output,stream,out,stream,state,backend,create,stream,factory,new,job,id,create,checkpoint,state,output,stream,checkpoint,id,timestamp,if,operator,instanceof,stream,checkpointed,operator,stream,checkpointed,operator,operator,snapshot,state,out,stream,checkpoint,id,timestamp,return,out,stream,close,and,get,handle,else,throw,new,runtime,exception,operator,is,not,stream,checkpointed,operator
OneInputStreamOperatorTestHarness -> public void restore(StreamStateHandle snapshot) throws Exception;1472663401;Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#restoreState(org.apache.flink.core.fs.FSDataInputStream)} ()};public void restore(StreamStateHandle snapshot) throws Exception {_		operator.restoreState(snapshot.openInputStream())__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,restore,state,org,apache,flink,core,fs,fsdata,input,stream;public,void,restore,stream,state,handle,snapshot,throws,exception,operator,restore,state,snapshot,open,input,stream
OneInputStreamOperatorTestHarness -> public void restore(StreamStateHandle snapshot) throws Exception;1472663401;Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#restoreState(org.apache.flink.core.fs.FSDataInputStream)} ()};public void restore(StreamStateHandle snapshot) throws Exception {_		operator.restoreState(snapshot.openInputStream())__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,restore,state,org,apache,flink,core,fs,fsdata,input,stream;public,void,restore,stream,state,handle,snapshot,throws,exception,operator,restore,state,snapshot,open,input,stream
OneInputStreamOperatorTestHarness -> public void restore(StreamStateHandle snapshot) throws Exception;1472663401;Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#restoreState(org.apache.flink.core.fs.FSDataInputStream)} ()};public void restore(StreamStateHandle snapshot) throws Exception {_		operator.restoreState(snapshot.openInputStream())__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,restore,state,org,apache,flink,core,fs,fsdata,input,stream;public,void,restore,stream,state,handle,snapshot,throws,exception,operator,restore,state,snapshot,open,input,stream
OneInputStreamOperatorTestHarness -> public void restore(StreamStateHandle snapshot) throws Exception;1474635666;Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#restoreState(org.apache.flink.core.fs.FSDataInputStream)} ()};public void restore(StreamStateHandle snapshot) throws Exception {_		operator.restoreState(snapshot.openInputStream())__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,restore,state,org,apache,flink,core,fs,fsdata,input,stream;public,void,restore,stream,state,handle,snapshot,throws,exception,operator,restore,state,snapshot,open,input,stream
OneInputStreamOperatorTestHarness -> public void restore(StreamStateHandle snapshot) throws Exception;1474635666;Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#restoreState(org.apache.flink.core.fs.FSDataInputStream)} ()};public void restore(StreamStateHandle snapshot) throws Exception {_		operator.restoreState(snapshot.openInputStream())__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,restore,state,org,apache,flink,core,fs,fsdata,input,stream;public,void,restore,stream,state,handle,snapshot,throws,exception,operator,restore,state,snapshot,open,input,stream
OneInputStreamOperatorTestHarness -> public void restore(StreamStateHandle snapshot) throws Exception;1474635667;Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#restoreState(org.apache.flink.core.fs.FSDataInputStream)} ()};public void restore(StreamStateHandle snapshot) throws Exception {_		operator.restoreState(snapshot.openInputStream())__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,restore,state,org,apache,flink,core,fs,fsdata,input,stream;public,void,restore,stream,state,handle,snapshot,throws,exception,operator,restore,state,snapshot,open,input,stream
OneInputStreamOperatorTestHarness -> public void restore(StreamStateHandle snapshot) throws Exception;1475231926;;public void restore(StreamStateHandle snapshot) throws Exception {_		if(operator instanceof StreamCheckpointedOperator) {_			try (FSDataInputStream in = snapshot.openInputStream()) {_				((StreamCheckpointedOperator) operator).restoreState(in)__			}_		} else {_			throw new RuntimeException("Operator is not StreamCheckpointedOperator")__		}_	};;public,void,restore,stream,state,handle,snapshot,throws,exception,if,operator,instanceof,stream,checkpointed,operator,try,fsdata,input,stream,in,snapshot,open,input,stream,stream,checkpointed,operator,operator,restore,state,in,else,throw,new,runtime,exception,operator,is,not,stream,checkpointed,operator
OneInputStreamOperatorTestHarness -> public void restore(StreamStateHandle snapshot) throws Exception;1475688973;;public void restore(StreamStateHandle snapshot) throws Exception {_		if(operator instanceof StreamCheckpointedOperator) {_			try (FSDataInputStream in = snapshot.openInputStream()) {_				((StreamCheckpointedOperator) operator).restoreState(in)__			}_		} else {_			throw new RuntimeException("Operator is not StreamCheckpointedOperator")__		}_	};;public,void,restore,stream,state,handle,snapshot,throws,exception,if,operator,instanceof,stream,checkpointed,operator,try,fsdata,input,stream,in,snapshot,open,input,stream,stream,checkpointed,operator,operator,restore,state,in,else,throw,new,runtime,exception,operator,is,not,stream,checkpointed,operator
OneInputStreamOperatorTestHarness -> public void restore(StreamStateHandle snapshot) throws Exception;1475688973;;public void restore(StreamStateHandle snapshot) throws Exception {_		if(operator instanceof StreamCheckpointedOperator) {_			try (FSDataInputStream in = snapshot.openInputStream()) {_				((StreamCheckpointedOperator) operator).restoreState(in)__			}_		} else {_			throw new RuntimeException("Operator is not StreamCheckpointedOperator")__		}_	};;public,void,restore,stream,state,handle,snapshot,throws,exception,if,operator,instanceof,stream,checkpointed,operator,try,fsdata,input,stream,in,snapshot,open,input,stream,stream,checkpointed,operator,operator,restore,state,in,else,throw,new,runtime,exception,operator,is,not,stream,checkpointed,operator
OneInputStreamOperatorTestHarness -> public void restore(StreamStateHandle snapshot) throws Exception;1476448412;;public void restore(StreamStateHandle snapshot) throws Exception {_		if(operator instanceof StreamCheckpointedOperator) {_			try (FSDataInputStream in = snapshot.openInputStream()) {_				((StreamCheckpointedOperator) operator).restoreState(in)__			}_		} else {_			throw new RuntimeException("Operator is not StreamCheckpointedOperator")__		}_	};;public,void,restore,stream,state,handle,snapshot,throws,exception,if,operator,instanceof,stream,checkpointed,operator,try,fsdata,input,stream,in,snapshot,open,input,stream,stream,checkpointed,operator,operator,restore,state,in,else,throw,new,runtime,exception,operator,is,not,stream,checkpointed,operator
OneInputStreamOperatorTestHarness -> public void open() throws Exception;1445418103;Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#open()};public void open() throws Exception {_		operator.open()__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,open;public,void,open,throws,exception,operator,open
OneInputStreamOperatorTestHarness -> public void open() throws Exception;1453987157;Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#open()};public void open() throws Exception {_		operator.open()__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,open;public,void,open,throws,exception,operator,open
OneInputStreamOperatorTestHarness -> public void open() throws Exception;1454527671;Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#open()};public void open() throws Exception {_		operator.setup(mockTask, config, new MockOutput())___		operator.open()__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,open;public,void,open,throws,exception,operator,setup,mock,task,config,new,mock,output,operator,open
OneInputStreamOperatorTestHarness -> public void open() throws Exception;1455704943;Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#open()};public void open() throws Exception {_		operator.setup(mockTask, config, new MockOutput())___		operator.open()__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,open;public,void,open,throws,exception,operator,setup,mock,task,config,new,mock,output,operator,open
OneInputStreamOperatorTestHarness -> public void open() throws Exception;1456848141;Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#open()};public void open() throws Exception {_		operator.setup(mockTask, config, new MockOutput())___		operator.open()__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,open;public,void,open,throws,exception,operator,setup,mock,task,config,new,mock,output,operator,open
OneInputStreamOperatorTestHarness -> public void open() throws Exception;1461572320;Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#open()}. This also_calls {@link org.apache.flink.streaming.api.operators.StreamOperator#setup(StreamTask, StreamConfig, Output)}_if it was not called before.;public void open() throws Exception {_		if (!setupCalled) {_			setup()__		}_		operator.open()__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,open,this,also,calls,link,org,apache,flink,streaming,api,operators,stream,operator,setup,stream,task,stream,config,output,if,it,was,not,called,before;public,void,open,throws,exception,if,setup,called,setup,operator,open
OneInputStreamOperatorTestHarness -> public void open() throws Exception;1465920682;Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#open()}. This also_calls {@link org.apache.flink.streaming.api.operators.StreamOperator#setup(StreamTask, StreamConfig, Output)}_if it was not called before.;public void open() throws Exception {_		if (!setupCalled) {_			setup()__		}_		operator.open()__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,open,this,also,calls,link,org,apache,flink,streaming,api,operators,stream,operator,setup,stream,task,stream,config,output,if,it,was,not,called,before;public,void,open,throws,exception,if,setup,called,setup,operator,open
OneInputStreamOperatorTestHarness -> public void open() throws Exception;1467040572;Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#open()}. This also_calls {@link org.apache.flink.streaming.api.operators.StreamOperator#setup(StreamTask, StreamConfig, Output)}_if it was not called before.;public void open() throws Exception {_		if (!setupCalled) {_			setup()__		}_		operator.open()__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,open,this,also,calls,link,org,apache,flink,streaming,api,operators,stream,operator,setup,stream,task,stream,config,output,if,it,was,not,called,before;public,void,open,throws,exception,if,setup,called,setup,operator,open
OneInputStreamOperatorTestHarness -> public void open() throws Exception;1467040572;Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#open()}. This also_calls {@link org.apache.flink.streaming.api.operators.StreamOperator#setup(StreamTask, StreamConfig, Output)}_if it was not called before.;public void open() throws Exception {_		if (!setupCalled) {_			setup()__		}_		operator.open()__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,open,this,also,calls,link,org,apache,flink,streaming,api,operators,stream,operator,setup,stream,task,stream,config,output,if,it,was,not,called,before;public,void,open,throws,exception,if,setup,called,setup,operator,open
OneInputStreamOperatorTestHarness -> public void open() throws Exception;1468339633;Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#open()}. This also_calls {@link org.apache.flink.streaming.api.operators.StreamOperator#setup(StreamTask, StreamConfig, Output)}_if it was not called before.;public void open() throws Exception {_		if (!setupCalled) {_			setup()__		}_		operator.open()__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,open,this,also,calls,link,org,apache,flink,streaming,api,operators,stream,operator,setup,stream,task,stream,config,output,if,it,was,not,called,before;public,void,open,throws,exception,if,setup,called,setup,operator,open
OneInputStreamOperatorTestHarness -> public void open() throws Exception;1468523508;Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#open()}. This also_calls {@link org.apache.flink.streaming.api.operators.StreamOperator#setup(StreamTask, StreamConfig, Output)}_if it was not called before.;public void open() throws Exception {_		if (!setupCalled) {_			setup()__		}_		operator.open()__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,open,this,also,calls,link,org,apache,flink,streaming,api,operators,stream,operator,setup,stream,task,stream,config,output,if,it,was,not,called,before;public,void,open,throws,exception,if,setup,called,setup,operator,open
OneInputStreamOperatorTestHarness -> public void open() throws Exception;1468833363;Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#open()}. This also_calls {@link org.apache.flink.streaming.api.operators.StreamOperator#setup(StreamTask, StreamConfig, Output)}_if it was not called before.;public void open() throws Exception {_		if (!setupCalled) {_			setup()__		}_		operator.open()__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,open,this,also,calls,link,org,apache,flink,streaming,api,operators,stream,operator,setup,stream,task,stream,config,output,if,it,was,not,called,before;public,void,open,throws,exception,if,setup,called,setup,operator,open
OneInputStreamOperatorTestHarness -> public void open() throws Exception;1472546392;Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#open()}. This also_calls {@link org.apache.flink.streaming.api.operators.StreamOperator#setup(StreamTask, StreamConfig, Output)}_if it was not called before.;public void open() throws Exception {_		if (!setupCalled) {_			setup()__		}_		operator.open()__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,open,this,also,calls,link,org,apache,flink,streaming,api,operators,stream,operator,setup,stream,task,stream,config,output,if,it,was,not,called,before;public,void,open,throws,exception,if,setup,called,setup,operator,open
OneInputStreamOperatorTestHarness -> public void open() throws Exception;1472663401;Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#open()}. This also_calls {@link org.apache.flink.streaming.api.operators.StreamOperator#setup(StreamTask, StreamConfig, Output)}_if it was not called before.;public void open() throws Exception {_		if (!setupCalled) {_			setup()__		}_		operator.open()__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,open,this,also,calls,link,org,apache,flink,streaming,api,operators,stream,operator,setup,stream,task,stream,config,output,if,it,was,not,called,before;public,void,open,throws,exception,if,setup,called,setup,operator,open
OneInputStreamOperatorTestHarness -> public void open() throws Exception;1472663401;Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#open()}. This also_calls {@link org.apache.flink.streaming.api.operators.StreamOperator#setup(StreamTask, StreamConfig, Output)}_if it was not called before.;public void open() throws Exception {_		if (!setupCalled) {_			setup()__		}_		operator.open()__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,open,this,also,calls,link,org,apache,flink,streaming,api,operators,stream,operator,setup,stream,task,stream,config,output,if,it,was,not,called,before;public,void,open,throws,exception,if,setup,called,setup,operator,open
OneInputStreamOperatorTestHarness -> public void open() throws Exception;1472663401;Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#open()}. This also_calls {@link org.apache.flink.streaming.api.operators.StreamOperator#setup(StreamTask, StreamConfig, Output)}_if it was not called before.;public void open() throws Exception {_		if (!setupCalled) {_			setup()__		}_		operator.open()__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,open,this,also,calls,link,org,apache,flink,streaming,api,operators,stream,operator,setup,stream,task,stream,config,output,if,it,was,not,called,before;public,void,open,throws,exception,if,setup,called,setup,operator,open
OneInputStreamOperatorTestHarness -> public void open() throws Exception;1474635666;Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#open()}. This also_calls {@link org.apache.flink.streaming.api.operators.StreamOperator#setup(StreamTask, StreamConfig, Output)}_if it was not called before.;public void open() throws Exception {_		if (!setupCalled) {_			setup()__		}_		operator.open()__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,open,this,also,calls,link,org,apache,flink,streaming,api,operators,stream,operator,setup,stream,task,stream,config,output,if,it,was,not,called,before;public,void,open,throws,exception,if,setup,called,setup,operator,open
OneInputStreamOperatorTestHarness -> public void open() throws Exception;1474635666;Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#open()}. This also_calls {@link org.apache.flink.streaming.api.operators.StreamOperator#setup(StreamTask, StreamConfig, Output)}_if it was not called before.;public void open() throws Exception {_		if (!setupCalled) {_			setup()__		}_		operator.open()__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,open,this,also,calls,link,org,apache,flink,streaming,api,operators,stream,operator,setup,stream,task,stream,config,output,if,it,was,not,called,before;public,void,open,throws,exception,if,setup,called,setup,operator,open
OneInputStreamOperatorTestHarness -> public void open() throws Exception;1474635667;Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#open()}. This also_calls {@link org.apache.flink.streaming.api.operators.StreamOperator#setup(StreamTask, StreamConfig, Output)}_if it was not called before.;public void open() throws Exception {_		if (!setupCalled) {_			setup()__		}_		operator.open()__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,open,this,also,calls,link,org,apache,flink,streaming,api,operators,stream,operator,setup,stream,task,stream,config,output,if,it,was,not,called,before;public,void,open,throws,exception,if,setup,called,setup,operator,open
OneInputStreamOperatorTestHarness -> public void open() throws Exception;1475231926;Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#open()}. This also_calls {@link org.apache.flink.streaming.api.operators.StreamOperator#setup(StreamTask, StreamConfig, Output)}_if it was not called before.;public void open() throws Exception {_		if (!setupCalled) {_			setup()__		}_		operator.open()__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,open,this,also,calls,link,org,apache,flink,streaming,api,operators,stream,operator,setup,stream,task,stream,config,output,if,it,was,not,called,before;public,void,open,throws,exception,if,setup,called,setup,operator,open
OneInputStreamOperatorTestHarness -> public void open() throws Exception;1475688973;Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#open()}. This also_calls {@link org.apache.flink.streaming.api.operators.StreamOperator#setup(StreamTask, StreamConfig, Output)}_if it was not called before.;public void open() throws Exception {_		if (!setupCalled) {_			setup()__		}_		operator.open()__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,open,this,also,calls,link,org,apache,flink,streaming,api,operators,stream,operator,setup,stream,task,stream,config,output,if,it,was,not,called,before;public,void,open,throws,exception,if,setup,called,setup,operator,open
OneInputStreamOperatorTestHarness -> public void open() throws Exception;1475688973;Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#open()}. This also_calls {@link org.apache.flink.streaming.api.operators.StreamOperator#setup(StreamTask, StreamConfig, Output)}_if it was not called before.;public void open() throws Exception {_		if (!setupCalled) {_			setup()__		}_		operator.open()__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,open,this,also,calls,link,org,apache,flink,streaming,api,operators,stream,operator,setup,stream,task,stream,config,output,if,it,was,not,called,before;public,void,open,throws,exception,if,setup,called,setup,operator,open
OneInputStreamOperatorTestHarness -> public void open() throws Exception;1476448412;Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#open()}. This also_calls {@link org.apache.flink.streaming.api.operators.StreamOperator#setup(StreamTask, StreamConfig, Output)}_if it was not called before.;public void open() throws Exception {_		if (!setupCalled) {_			setup()__		}_		operator.open()__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,open,this,also,calls,link,org,apache,flink,streaming,api,operators,stream,operator,setup,stream,task,stream,config,output,if,it,was,not,called,before;public,void,open,throws,exception,if,setup,called,setup,operator,open
OneInputStreamOperatorTestHarness -> public void open() throws Exception;1476972861;Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#open()}._Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#initializeState(OperatorStateHandles)} if it_was not called before.;public void open() throws Exception {_		if (!initializeCalled) {_			initializeState(null)__		}_		operator.open()__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,open,calls,link,org,apache,flink,streaming,api,operators,stream,operator,initialize,state,operator,state,handles,if,it,was,not,called,before;public,void,open,throws,exception,if,initialize,called,initialize,state,null,operator,open
OneInputStreamOperatorTestHarness -> public void open() throws Exception;1477069384;Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#open()}._Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#initializeState(OperatorStateHandles)} if it_was not called before.;public void open() throws Exception {_		if (!initializeCalled) {_			initializeState(null)__		}_		operator.open()__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,open,calls,link,org,apache,flink,streaming,api,operators,stream,operator,initialize,state,operator,state,handles,if,it,was,not,called,before;public,void,open,throws,exception,if,initialize,called,initialize,state,null,operator,open
OneInputStreamOperatorTestHarness -> public void open() throws Exception;1477069384;Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#open()}._Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#initializeState(OperatorStateHandles)} if it_was not called before.;public void open() throws Exception {_		if (!initializeCalled) {_			initializeState(null)__		}_		operator.open()__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,open,calls,link,org,apache,flink,streaming,api,operators,stream,operator,initialize,state,operator,state,handles,if,it,was,not,called,before;public,void,open,throws,exception,if,initialize,called,initialize,state,null,operator,open
OneInputStreamOperatorTestHarness -> public void open() throws Exception;1477069384;Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#open()}._Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#initializeState(OperatorStateHandles)} if it_was not called before.;public void open() throws Exception {_		if (!initializeCalled) {_			initializeState(null)__		}_		operator.open()__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,open,calls,link,org,apache,flink,streaming,api,operators,stream,operator,initialize,state,operator,state,handles,if,it,was,not,called,before;public,void,open,throws,exception,if,initialize,called,initialize,state,null,operator,open
OneInputStreamOperatorTestHarness -> @Deprecated 	public void restore(StreamStateHandle snapshot) throws Exception;1476972861;;@Deprecated_	public void restore(StreamStateHandle snapshot) throws Exception {_		if(operator instanceof StreamCheckpointedOperator) {_			try (FSDataInputStream in = snapshot.openInputStream()) {_				((StreamCheckpointedOperator) operator).restoreState(in)__			}_		} else {_			throw new RuntimeException("Operator is not StreamCheckpointedOperator")__		}_	};;deprecated,public,void,restore,stream,state,handle,snapshot,throws,exception,if,operator,instanceof,stream,checkpointed,operator,try,fsdata,input,stream,in,snapshot,open,input,stream,stream,checkpointed,operator,operator,restore,state,in,else,throw,new,runtime,exception,operator,is,not,stream,checkpointed,operator
OneInputStreamOperatorTestHarness -> @Deprecated 	public void restore(StreamStateHandle snapshot) throws Exception;1477069384;;@Deprecated_	public void restore(StreamStateHandle snapshot) throws Exception {_		if(operator instanceof StreamCheckpointedOperator) {_			try (FSDataInputStream in = snapshot.openInputStream()) {_				((StreamCheckpointedOperator) operator).restoreState(in)__			}_		} else {_			throw new RuntimeException("Operator is not StreamCheckpointedOperator")__		}_	};;deprecated,public,void,restore,stream,state,handle,snapshot,throws,exception,if,operator,instanceof,stream,checkpointed,operator,try,fsdata,input,stream,in,snapshot,open,input,stream,stream,checkpointed,operator,operator,restore,state,in,else,throw,new,runtime,exception,operator,is,not,stream,checkpointed,operator
OneInputStreamOperatorTestHarness -> @Deprecated 	public void restore(StreamStateHandle snapshot) throws Exception;1477069384;;@Deprecated_	public void restore(StreamStateHandle snapshot) throws Exception {_		if(operator instanceof StreamCheckpointedOperator) {_			try (FSDataInputStream in = snapshot.openInputStream()) {_				((StreamCheckpointedOperator) operator).restoreState(in)__			}_		} else {_			throw new RuntimeException("Operator is not StreamCheckpointedOperator")__		}_	};;deprecated,public,void,restore,stream,state,handle,snapshot,throws,exception,if,operator,instanceof,stream,checkpointed,operator,try,fsdata,input,stream,in,snapshot,open,input,stream,stream,checkpointed,operator,operator,restore,state,in,else,throw,new,runtime,exception,operator,is,not,stream,checkpointed,operator
OneInputStreamOperatorTestHarness -> @Deprecated 	public void restore(StreamStateHandle snapshot) throws Exception;1477069384;;@Deprecated_	public void restore(StreamStateHandle snapshot) throws Exception {_		if(operator instanceof StreamCheckpointedOperator) {_			try (FSDataInputStream in = snapshot.openInputStream()) {_				((StreamCheckpointedOperator) operator).restoreState(in)__			}_		} else {_			throw new RuntimeException("Operator is not StreamCheckpointedOperator")__		}_	};;deprecated,public,void,restore,stream,state,handle,snapshot,throws,exception,if,operator,instanceof,stream,checkpointed,operator,try,fsdata,input,stream,in,snapshot,open,input,stream,stream,checkpointed,operator,operator,restore,state,in,else,throw,new,runtime,exception,operator,is,not,stream,checkpointed,operator
OneInputStreamOperatorTestHarness -> public void restore(StreamTaskState snapshot, long recoveryTimestamp) throws Exception;1461572320;Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#restoreState(StreamTaskState, long)} ()};public void restore(StreamTaskState snapshot, long recoveryTimestamp) throws Exception {_		operator.restoreState(snapshot, recoveryTimestamp)__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,restore,state,stream,task,state,long;public,void,restore,stream,task,state,snapshot,long,recovery,timestamp,throws,exception,operator,restore,state,snapshot,recovery,timestamp
OneInputStreamOperatorTestHarness -> public void restore(StreamTaskState snapshot, long recoveryTimestamp) throws Exception;1465920682;Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#restoreState(StreamTaskState, long)} ()};public void restore(StreamTaskState snapshot, long recoveryTimestamp) throws Exception {_		operator.restoreState(snapshot, recoveryTimestamp)__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,restore,state,stream,task,state,long;public,void,restore,stream,task,state,snapshot,long,recovery,timestamp,throws,exception,operator,restore,state,snapshot,recovery,timestamp
OneInputStreamOperatorTestHarness -> public void restore(StreamTaskState snapshot, long recoveryTimestamp) throws Exception;1467040572;Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#restoreState(StreamTaskState, long)} ()};public void restore(StreamTaskState snapshot, long recoveryTimestamp) throws Exception {_		operator.restoreState(snapshot, recoveryTimestamp)__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,restore,state,stream,task,state,long;public,void,restore,stream,task,state,snapshot,long,recovery,timestamp,throws,exception,operator,restore,state,snapshot,recovery,timestamp
OneInputStreamOperatorTestHarness -> public void restore(StreamTaskState snapshot, long recoveryTimestamp) throws Exception;1467040572;Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#restoreState(StreamTaskState, long)} ()};public void restore(StreamTaskState snapshot, long recoveryTimestamp) throws Exception {_		operator.restoreState(snapshot, recoveryTimestamp)__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,restore,state,stream,task,state,long;public,void,restore,stream,task,state,snapshot,long,recovery,timestamp,throws,exception,operator,restore,state,snapshot,recovery,timestamp
OneInputStreamOperatorTestHarness -> public void restore(StreamTaskState snapshot, long recoveryTimestamp) throws Exception;1468339633;Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#restoreState(StreamTaskState, long)} ()};public void restore(StreamTaskState snapshot, long recoveryTimestamp) throws Exception {_		operator.restoreState(snapshot, recoveryTimestamp)__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,restore,state,stream,task,state,long;public,void,restore,stream,task,state,snapshot,long,recovery,timestamp,throws,exception,operator,restore,state,snapshot,recovery,timestamp
OneInputStreamOperatorTestHarness -> public void restore(StreamTaskState snapshot, long recoveryTimestamp) throws Exception;1468523508;Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#restoreState(StreamTaskState)} ()};public void restore(StreamTaskState snapshot, long recoveryTimestamp) throws Exception {_		operator.restoreState(snapshot)__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,restore,state,stream,task,state;public,void,restore,stream,task,state,snapshot,long,recovery,timestamp,throws,exception,operator,restore,state,snapshot
OneInputStreamOperatorTestHarness -> public void restore(StreamTaskState snapshot, long recoveryTimestamp) throws Exception;1468833363;Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#restoreState(StreamTaskState)} ()};public void restore(StreamTaskState snapshot, long recoveryTimestamp) throws Exception {_		operator.restoreState(snapshot)__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,restore,state,stream,task,state;public,void,restore,stream,task,state,snapshot,long,recovery,timestamp,throws,exception,operator,restore,state,snapshot
OneInputStreamOperatorTestHarness -> public void restore(StreamTaskState snapshot, long recoveryTimestamp) throws Exception;1472546392;Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#restoreState(StreamTaskState)};public void restore(StreamTaskState snapshot, long recoveryTimestamp) throws Exception {_		operator.restoreState(snapshot)__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,restore,state,stream,task,state;public,void,restore,stream,task,state,snapshot,long,recovery,timestamp,throws,exception,operator,restore,state,snapshot
OneInputStreamOperatorTestHarness -> @SuppressWarnings("unchecked") 	public List<StreamRecord<? extends OUT>> extractOutputStreamRecords();1477069384;Get all the output from the task and clear the output buffer._This contains only StreamRecords.;@SuppressWarnings("unchecked")_	public List<StreamRecord<? extends OUT>> extractOutputStreamRecords() {_		List<StreamRecord<? extends OUT>> resultElements = new LinkedList<>()__		for (Object e: getOutput()) {_			if (e instanceof StreamRecord) {_				resultElements.add((StreamRecord<OUT>) e)__			}_		}_		return resultElements__	};get,all,the,output,from,the,task,and,clear,the,output,buffer,this,contains,only,stream,records;suppress,warnings,unchecked,public,list,stream,record,extends,out,extract,output,stream,records,list,stream,record,extends,out,result,elements,new,linked,list,for,object,e,get,output,if,e,instanceof,stream,record,result,elements,add,stream,record,out,e,return,result,elements
OneInputStreamOperatorTestHarness -> @SuppressWarnings("unchecked") 	public List<StreamRecord<? extends OUT>> extractOutputStreamRecords();1477069384;Get all the output from the task and clear the output buffer._This contains only StreamRecords.;@SuppressWarnings("unchecked")_	public List<StreamRecord<? extends OUT>> extractOutputStreamRecords() {_		List<StreamRecord<? extends OUT>> resultElements = new LinkedList<>()__		for (Object e: getOutput()) {_			if (e instanceof StreamRecord) {_				resultElements.add((StreamRecord<OUT>) e)__			}_		}_		return resultElements__	};get,all,the,output,from,the,task,and,clear,the,output,buffer,this,contains,only,stream,records;suppress,warnings,unchecked,public,list,stream,record,extends,out,extract,output,stream,records,list,stream,record,extends,out,result,elements,new,linked,list,for,object,e,get,output,if,e,instanceof,stream,record,result,elements,add,stream,record,out,e,return,result,elements
OneInputStreamOperatorTestHarness -> public OperatorSnapshotResult snapshot(long checkpointId, long timestamp) throws Exception;1476972861;;public OperatorSnapshotResult snapshot(long checkpointId, long timestamp) throws Exception {__		CheckpointStreamFactory streamFactory = stateBackend.createStreamFactory(_				new JobID(),_				"test_op")___		return operator.snapshotState(checkpointId, timestamp, streamFactory)__	};;public,operator,snapshot,result,snapshot,long,checkpoint,id,long,timestamp,throws,exception,checkpoint,stream,factory,stream,factory,state,backend,create,stream,factory,new,job,id,return,operator,snapshot,state,checkpoint,id,timestamp,stream,factory
OneInputStreamOperatorTestHarness -> public OperatorSnapshotResult snapshot(long checkpointId, long timestamp) throws Exception;1477069384;;public OperatorSnapshotResult snapshot(long checkpointId, long timestamp) throws Exception {__		CheckpointStreamFactory streamFactory = stateBackend.createStreamFactory(_				new JobID(),_				"test_op")___		return operator.snapshotState(checkpointId, timestamp, streamFactory)__	};;public,operator,snapshot,result,snapshot,long,checkpoint,id,long,timestamp,throws,exception,checkpoint,stream,factory,stream,factory,state,backend,create,stream,factory,new,job,id,return,operator,snapshot,state,checkpoint,id,timestamp,stream,factory
OneInputStreamOperatorTestHarness -> public OperatorSnapshotResult snapshot(long checkpointId, long timestamp) throws Exception;1477069384;;public OperatorSnapshotResult snapshot(long checkpointId, long timestamp) throws Exception {__		CheckpointStreamFactory streamFactory = stateBackend.createStreamFactory(_				new JobID(),_				"test_op")___		return operator.snapshotState(checkpointId, timestamp, streamFactory)__	};;public,operator,snapshot,result,snapshot,long,checkpoint,id,long,timestamp,throws,exception,checkpoint,stream,factory,stream,factory,state,backend,create,stream,factory,new,job,id,return,operator,snapshot,state,checkpoint,id,timestamp,stream,factory
OneInputStreamOperatorTestHarness -> public OperatorSnapshotResult snapshot(long checkpointId, long timestamp) throws Exception;1477069384;;public OperatorSnapshotResult snapshot(long checkpointId, long timestamp) throws Exception {__		CheckpointStreamFactory streamFactory = stateBackend.createStreamFactory(_				new JobID(),_				"test_op")___		return operator.snapshotState(checkpointId, timestamp, streamFactory)__	};;public,operator,snapshot,result,snapshot,long,checkpoint,id,long,timestamp,throws,exception,checkpoint,stream,factory,stream,factory,state,backend,create,stream,factory,new,job,id,return,operator,snapshot,state,checkpoint,id,timestamp,stream,factory
OneInputStreamOperatorTestHarness -> @Deprecated 	public StreamStateHandle snapshotLegacy(long checkpointId, long timestamp) throws Exception;1476972861;;@Deprecated_	public StreamStateHandle snapshotLegacy(long checkpointId, long timestamp) throws Exception {__		CheckpointStreamFactory.CheckpointStateOutputStream outStream = stateBackend.createStreamFactory(_				new JobID(),_				"test_op").createCheckpointStateOutputStream(checkpointId, timestamp)__		if(operator instanceof StreamCheckpointedOperator) {_			((StreamCheckpointedOperator) operator).snapshotState(outStream, checkpointId, timestamp)__			return outStream.closeAndGetHandle()__		} else {_			throw new RuntimeException("Operator is not StreamCheckpointedOperator")__		}_	};;deprecated,public,stream,state,handle,snapshot,legacy,long,checkpoint,id,long,timestamp,throws,exception,checkpoint,stream,factory,checkpoint,state,output,stream,out,stream,state,backend,create,stream,factory,new,job,id,create,checkpoint,state,output,stream,checkpoint,id,timestamp,if,operator,instanceof,stream,checkpointed,operator,stream,checkpointed,operator,operator,snapshot,state,out,stream,checkpoint,id,timestamp,return,out,stream,close,and,get,handle,else,throw,new,runtime,exception,operator,is,not,stream,checkpointed,operator
OneInputStreamOperatorTestHarness -> @Deprecated 	public StreamStateHandle snapshotLegacy(long checkpointId, long timestamp) throws Exception;1477069384;;@Deprecated_	public StreamStateHandle snapshotLegacy(long checkpointId, long timestamp) throws Exception {__		CheckpointStreamFactory.CheckpointStateOutputStream outStream = stateBackend.createStreamFactory(_				new JobID(),_				"test_op").createCheckpointStateOutputStream(checkpointId, timestamp)__		if(operator instanceof StreamCheckpointedOperator) {_			((StreamCheckpointedOperator) operator).snapshotState(outStream, checkpointId, timestamp)__			return outStream.closeAndGetHandle()__		} else {_			throw new RuntimeException("Operator is not StreamCheckpointedOperator")__		}_	};;deprecated,public,stream,state,handle,snapshot,legacy,long,checkpoint,id,long,timestamp,throws,exception,checkpoint,stream,factory,checkpoint,state,output,stream,out,stream,state,backend,create,stream,factory,new,job,id,create,checkpoint,state,output,stream,checkpoint,id,timestamp,if,operator,instanceof,stream,checkpointed,operator,stream,checkpointed,operator,operator,snapshot,state,out,stream,checkpoint,id,timestamp,return,out,stream,close,and,get,handle,else,throw,new,runtime,exception,operator,is,not,stream,checkpointed,operator
OneInputStreamOperatorTestHarness -> @Deprecated 	public StreamStateHandle snapshotLegacy(long checkpointId, long timestamp) throws Exception;1477069384;;@Deprecated_	public StreamStateHandle snapshotLegacy(long checkpointId, long timestamp) throws Exception {__		CheckpointStreamFactory.CheckpointStateOutputStream outStream = stateBackend.createStreamFactory(_				new JobID(),_				"test_op").createCheckpointStateOutputStream(checkpointId, timestamp)__		if(operator instanceof StreamCheckpointedOperator) {_			((StreamCheckpointedOperator) operator).snapshotState(outStream, checkpointId, timestamp)__			return outStream.closeAndGetHandle()__		} else {_			throw new RuntimeException("Operator is not StreamCheckpointedOperator")__		}_	};;deprecated,public,stream,state,handle,snapshot,legacy,long,checkpoint,id,long,timestamp,throws,exception,checkpoint,stream,factory,checkpoint,state,output,stream,out,stream,state,backend,create,stream,factory,new,job,id,create,checkpoint,state,output,stream,checkpoint,id,timestamp,if,operator,instanceof,stream,checkpointed,operator,stream,checkpointed,operator,operator,snapshot,state,out,stream,checkpoint,id,timestamp,return,out,stream,close,and,get,handle,else,throw,new,runtime,exception,operator,is,not,stream,checkpointed,operator
OneInputStreamOperatorTestHarness -> @Deprecated 	public StreamStateHandle snapshotLegacy(long checkpointId, long timestamp) throws Exception;1477069384;;@Deprecated_	public StreamStateHandle snapshotLegacy(long checkpointId, long timestamp) throws Exception {__		CheckpointStreamFactory.CheckpointStateOutputStream outStream = stateBackend.createStreamFactory(_				new JobID(),_				"test_op").createCheckpointStateOutputStream(checkpointId, timestamp)__		if(operator instanceof StreamCheckpointedOperator) {_			((StreamCheckpointedOperator) operator).snapshotState(outStream, checkpointId, timestamp)__			return outStream.closeAndGetHandle()__		} else {_			throw new RuntimeException("Operator is not StreamCheckpointedOperator")__		}_	};;deprecated,public,stream,state,handle,snapshot,legacy,long,checkpoint,id,long,timestamp,throws,exception,checkpoint,stream,factory,checkpoint,state,output,stream,out,stream,state,backend,create,stream,factory,new,job,id,create,checkpoint,state,output,stream,checkpoint,id,timestamp,if,operator,instanceof,stream,checkpointed,operator,stream,checkpointed,operator,operator,snapshot,state,out,stream,checkpoint,id,timestamp,return,out,stream,close,and,get,handle,else,throw,new,runtime,exception,operator,is,not,stream,checkpointed,operator
OneInputStreamOperatorTestHarness -> public ConcurrentLinkedQueue<Object> getOutput();1445418103;Get all the output from the task. This contains StreamRecords and Events interleaved. Use_{@link org.apache.flink.streaming.util.TestHarnessUtil#getStreamRecordsFromOutput(java.util.List)}_to extract only the StreamRecords.;public ConcurrentLinkedQueue<Object> getOutput() {_		return outputList__	};get,all,the,output,from,the,task,this,contains,stream,records,and,events,interleaved,use,link,org,apache,flink,streaming,util,test,harness,util,get,stream,records,from,output,java,util,list,to,extract,only,the,stream,records;public,concurrent,linked,queue,object,get,output,return,output,list
OneInputStreamOperatorTestHarness -> public ConcurrentLinkedQueue<Object> getOutput();1453987157;Get all the output from the task. This contains StreamRecords and Events interleaved. Use_{@link org.apache.flink.streaming.util.TestHarnessUtil#getStreamRecordsFromOutput(java.util.List)}_to extract only the StreamRecords.;public ConcurrentLinkedQueue<Object> getOutput() {_		return outputList__	};get,all,the,output,from,the,task,this,contains,stream,records,and,events,interleaved,use,link,org,apache,flink,streaming,util,test,harness,util,get,stream,records,from,output,java,util,list,to,extract,only,the,stream,records;public,concurrent,linked,queue,object,get,output,return,output,list
OneInputStreamOperatorTestHarness -> public ConcurrentLinkedQueue<Object> getOutput();1454527671;Get all the output from the task. This contains StreamRecords and Events interleaved. Use_{@link org.apache.flink.streaming.util.TestHarnessUtil#getStreamRecordsFromOutput(java.util.List)}_to extract only the StreamRecords.;public ConcurrentLinkedQueue<Object> getOutput() {_		return outputList__	};get,all,the,output,from,the,task,this,contains,stream,records,and,events,interleaved,use,link,org,apache,flink,streaming,util,test,harness,util,get,stream,records,from,output,java,util,list,to,extract,only,the,stream,records;public,concurrent,linked,queue,object,get,output,return,output,list
OneInputStreamOperatorTestHarness -> public ConcurrentLinkedQueue<Object> getOutput();1455704943;Get all the output from the task. This contains StreamRecords and Events interleaved. Use_{@link org.apache.flink.streaming.util.TestHarnessUtil#getStreamRecordsFromOutput(java.util.List)}_to extract only the StreamRecords.;public ConcurrentLinkedQueue<Object> getOutput() {_		return outputList__	};get,all,the,output,from,the,task,this,contains,stream,records,and,events,interleaved,use,link,org,apache,flink,streaming,util,test,harness,util,get,stream,records,from,output,java,util,list,to,extract,only,the,stream,records;public,concurrent,linked,queue,object,get,output,return,output,list
OneInputStreamOperatorTestHarness -> public ConcurrentLinkedQueue<Object> getOutput();1456848141;Get all the output from the task. This contains StreamRecords and Events interleaved. Use_{@link org.apache.flink.streaming.util.TestHarnessUtil#getStreamRecordsFromOutput(java.util.List)}_to extract only the StreamRecords.;public ConcurrentLinkedQueue<Object> getOutput() {_		return outputList__	};get,all,the,output,from,the,task,this,contains,stream,records,and,events,interleaved,use,link,org,apache,flink,streaming,util,test,harness,util,get,stream,records,from,output,java,util,list,to,extract,only,the,stream,records;public,concurrent,linked,queue,object,get,output,return,output,list
OneInputStreamOperatorTestHarness -> public ConcurrentLinkedQueue<Object> getOutput();1461572320;Get all the output from the task. This contains StreamRecords and Events interleaved. Use_{@link org.apache.flink.streaming.util.TestHarnessUtil#getStreamRecordsFromOutput(java.util.List)}_to extract only the StreamRecords.;public ConcurrentLinkedQueue<Object> getOutput() {_		return outputList__	};get,all,the,output,from,the,task,this,contains,stream,records,and,events,interleaved,use,link,org,apache,flink,streaming,util,test,harness,util,get,stream,records,from,output,java,util,list,to,extract,only,the,stream,records;public,concurrent,linked,queue,object,get,output,return,output,list
OneInputStreamOperatorTestHarness -> public ConcurrentLinkedQueue<Object> getOutput();1465920682;Get all the output from the task. This contains StreamRecords and Events interleaved. Use_{@link org.apache.flink.streaming.util.TestHarnessUtil#getStreamRecordsFromOutput(java.util.List)}_to extract only the StreamRecords.;public ConcurrentLinkedQueue<Object> getOutput() {_		return outputList__	};get,all,the,output,from,the,task,this,contains,stream,records,and,events,interleaved,use,link,org,apache,flink,streaming,util,test,harness,util,get,stream,records,from,output,java,util,list,to,extract,only,the,stream,records;public,concurrent,linked,queue,object,get,output,return,output,list
OneInputStreamOperatorTestHarness -> public ConcurrentLinkedQueue<Object> getOutput();1467040572;Get all the output from the task. This contains StreamRecords and Events interleaved. Use_{@link org.apache.flink.streaming.util.TestHarnessUtil#getStreamRecordsFromOutput(java.util.List)}_to extract only the StreamRecords.;public ConcurrentLinkedQueue<Object> getOutput() {_		return outputList__	};get,all,the,output,from,the,task,this,contains,stream,records,and,events,interleaved,use,link,org,apache,flink,streaming,util,test,harness,util,get,stream,records,from,output,java,util,list,to,extract,only,the,stream,records;public,concurrent,linked,queue,object,get,output,return,output,list
OneInputStreamOperatorTestHarness -> public ConcurrentLinkedQueue<Object> getOutput();1467040572;Get all the output from the task. This contains StreamRecords and Events interleaved. Use_{@link org.apache.flink.streaming.util.TestHarnessUtil#getStreamRecordsFromOutput(java.util.List)}_to extract only the StreamRecords.;public ConcurrentLinkedQueue<Object> getOutput() {_		return outputList__	};get,all,the,output,from,the,task,this,contains,stream,records,and,events,interleaved,use,link,org,apache,flink,streaming,util,test,harness,util,get,stream,records,from,output,java,util,list,to,extract,only,the,stream,records;public,concurrent,linked,queue,object,get,output,return,output,list
OneInputStreamOperatorTestHarness -> public ConcurrentLinkedQueue<Object> getOutput();1468339633;Get all the output from the task. This contains StreamRecords and Events interleaved. Use_{@link org.apache.flink.streaming.util.TestHarnessUtil#getStreamRecordsFromOutput(java.util.List)}_to extract only the StreamRecords.;public ConcurrentLinkedQueue<Object> getOutput() {_		return outputList__	};get,all,the,output,from,the,task,this,contains,stream,records,and,events,interleaved,use,link,org,apache,flink,streaming,util,test,harness,util,get,stream,records,from,output,java,util,list,to,extract,only,the,stream,records;public,concurrent,linked,queue,object,get,output,return,output,list
OneInputStreamOperatorTestHarness -> public ConcurrentLinkedQueue<Object> getOutput();1468523508;Get all the output from the task. This contains StreamRecords and Events interleaved. Use_{@link org.apache.flink.streaming.util.TestHarnessUtil#getStreamRecordsFromOutput(java.util.List)}_to extract only the StreamRecords.;public ConcurrentLinkedQueue<Object> getOutput() {_		return outputList__	};get,all,the,output,from,the,task,this,contains,stream,records,and,events,interleaved,use,link,org,apache,flink,streaming,util,test,harness,util,get,stream,records,from,output,java,util,list,to,extract,only,the,stream,records;public,concurrent,linked,queue,object,get,output,return,output,list
OneInputStreamOperatorTestHarness -> public ConcurrentLinkedQueue<Object> getOutput();1468833363;Get all the output from the task. This contains StreamRecords and Events interleaved. Use_{@link org.apache.flink.streaming.util.TestHarnessUtil#getStreamRecordsFromOutput(java.util.List)}_to extract only the StreamRecords.;public ConcurrentLinkedQueue<Object> getOutput() {_		return outputList__	};get,all,the,output,from,the,task,this,contains,stream,records,and,events,interleaved,use,link,org,apache,flink,streaming,util,test,harness,util,get,stream,records,from,output,java,util,list,to,extract,only,the,stream,records;public,concurrent,linked,queue,object,get,output,return,output,list
OneInputStreamOperatorTestHarness -> public ConcurrentLinkedQueue<Object> getOutput();1472546392;Get all the output from the task. This contains StreamRecords and Events interleaved. Use_{@link org.apache.flink.streaming.util.TestHarnessUtil#getStreamRecordsFromOutput(java.util.List)}_to extract only the StreamRecords.;public ConcurrentLinkedQueue<Object> getOutput() {_		return outputList__	};get,all,the,output,from,the,task,this,contains,stream,records,and,events,interleaved,use,link,org,apache,flink,streaming,util,test,harness,util,get,stream,records,from,output,java,util,list,to,extract,only,the,stream,records;public,concurrent,linked,queue,object,get,output,return,output,list
OneInputStreamOperatorTestHarness -> public ConcurrentLinkedQueue<Object> getOutput();1472663401;Get all the output from the task. This contains StreamRecords and Events interleaved. Use_{@link org.apache.flink.streaming.util.TestHarnessUtil#getStreamRecordsFromOutput(java.util.List)}_to extract only the StreamRecords.;public ConcurrentLinkedQueue<Object> getOutput() {_		return outputList__	};get,all,the,output,from,the,task,this,contains,stream,records,and,events,interleaved,use,link,org,apache,flink,streaming,util,test,harness,util,get,stream,records,from,output,java,util,list,to,extract,only,the,stream,records;public,concurrent,linked,queue,object,get,output,return,output,list
OneInputStreamOperatorTestHarness -> public ConcurrentLinkedQueue<Object> getOutput();1472663401;Get all the output from the task. This contains StreamRecords and Events interleaved. Use_{@link org.apache.flink.streaming.util.TestHarnessUtil#getStreamRecordsFromOutput(java.util.List)}_to extract only the StreamRecords.;public ConcurrentLinkedQueue<Object> getOutput() {_		return outputList__	};get,all,the,output,from,the,task,this,contains,stream,records,and,events,interleaved,use,link,org,apache,flink,streaming,util,test,harness,util,get,stream,records,from,output,java,util,list,to,extract,only,the,stream,records;public,concurrent,linked,queue,object,get,output,return,output,list
OneInputStreamOperatorTestHarness -> public ConcurrentLinkedQueue<Object> getOutput();1472663401;Get all the output from the task. This contains StreamRecords and Events interleaved. Use_{@link org.apache.flink.streaming.util.TestHarnessUtil#getStreamRecordsFromOutput(java.util.List)}_to extract only the StreamRecords.;public ConcurrentLinkedQueue<Object> getOutput() {_		return outputList__	};get,all,the,output,from,the,task,this,contains,stream,records,and,events,interleaved,use,link,org,apache,flink,streaming,util,test,harness,util,get,stream,records,from,output,java,util,list,to,extract,only,the,stream,records;public,concurrent,linked,queue,object,get,output,return,output,list
OneInputStreamOperatorTestHarness -> public ConcurrentLinkedQueue<Object> getOutput();1474635666;Get all the output from the task. This contains StreamRecords and Events interleaved. Use_{@link org.apache.flink.streaming.util.TestHarnessUtil#getStreamRecordsFromOutput(java.util.List)}_to extract only the StreamRecords.;public ConcurrentLinkedQueue<Object> getOutput() {_		return outputList__	};get,all,the,output,from,the,task,this,contains,stream,records,and,events,interleaved,use,link,org,apache,flink,streaming,util,test,harness,util,get,stream,records,from,output,java,util,list,to,extract,only,the,stream,records;public,concurrent,linked,queue,object,get,output,return,output,list
OneInputStreamOperatorTestHarness -> public ConcurrentLinkedQueue<Object> getOutput();1474635666;Get all the output from the task. This contains StreamRecords and Events interleaved. Use_{@link org.apache.flink.streaming.util.TestHarnessUtil#getStreamRecordsFromOutput(java.util.List)}_to extract only the StreamRecords.;public ConcurrentLinkedQueue<Object> getOutput() {_		return outputList__	};get,all,the,output,from,the,task,this,contains,stream,records,and,events,interleaved,use,link,org,apache,flink,streaming,util,test,harness,util,get,stream,records,from,output,java,util,list,to,extract,only,the,stream,records;public,concurrent,linked,queue,object,get,output,return,output,list
OneInputStreamOperatorTestHarness -> public ConcurrentLinkedQueue<Object> getOutput();1474635667;Get all the output from the task. This contains StreamRecords and Events interleaved. Use_{@link org.apache.flink.streaming.util.TestHarnessUtil#getStreamRecordsFromOutput(java.util.List)}_to extract only the StreamRecords.;public ConcurrentLinkedQueue<Object> getOutput() {_		return outputList__	};get,all,the,output,from,the,task,this,contains,stream,records,and,events,interleaved,use,link,org,apache,flink,streaming,util,test,harness,util,get,stream,records,from,output,java,util,list,to,extract,only,the,stream,records;public,concurrent,linked,queue,object,get,output,return,output,list
OneInputStreamOperatorTestHarness -> public ConcurrentLinkedQueue<Object> getOutput();1475231926;Get all the output from the task. This contains StreamRecords and Events interleaved. Use_{@link org.apache.flink.streaming.util.TestHarnessUtil#getStreamRecordsFromOutput(java.util.List)}_to extract only the StreamRecords.;public ConcurrentLinkedQueue<Object> getOutput() {_		return outputList__	};get,all,the,output,from,the,task,this,contains,stream,records,and,events,interleaved,use,link,org,apache,flink,streaming,util,test,harness,util,get,stream,records,from,output,java,util,list,to,extract,only,the,stream,records;public,concurrent,linked,queue,object,get,output,return,output,list
OneInputStreamOperatorTestHarness -> public ConcurrentLinkedQueue<Object> getOutput();1475688973;Get all the output from the task. This contains StreamRecords and Events interleaved. Use_{@link org.apache.flink.streaming.util.TestHarnessUtil#getStreamRecordsFromOutput(java.util.List)}_to extract only the StreamRecords.;public ConcurrentLinkedQueue<Object> getOutput() {_		return outputList__	};get,all,the,output,from,the,task,this,contains,stream,records,and,events,interleaved,use,link,org,apache,flink,streaming,util,test,harness,util,get,stream,records,from,output,java,util,list,to,extract,only,the,stream,records;public,concurrent,linked,queue,object,get,output,return,output,list
OneInputStreamOperatorTestHarness -> public ConcurrentLinkedQueue<Object> getOutput();1475688973;Get all the output from the task. This contains StreamRecords and Events interleaved. Use_{@link org.apache.flink.streaming.util.TestHarnessUtil#getStreamRecordsFromOutput(java.util.List)}_to extract only the StreamRecords.;public ConcurrentLinkedQueue<Object> getOutput() {_		return outputList__	};get,all,the,output,from,the,task,this,contains,stream,records,and,events,interleaved,use,link,org,apache,flink,streaming,util,test,harness,util,get,stream,records,from,output,java,util,list,to,extract,only,the,stream,records;public,concurrent,linked,queue,object,get,output,return,output,list
OneInputStreamOperatorTestHarness -> public ConcurrentLinkedQueue<Object> getOutput();1476448412;Get all the output from the task. This contains StreamRecords and Events interleaved. Use_{@link org.apache.flink.streaming.util.TestHarnessUtil#getStreamRecordsFromOutput(java.util.List)}_to extract only the StreamRecords.;public ConcurrentLinkedQueue<Object> getOutput() {_		return outputList__	};get,all,the,output,from,the,task,this,contains,stream,records,and,events,interleaved,use,link,org,apache,flink,streaming,util,test,harness,util,get,stream,records,from,output,java,util,list,to,extract,only,the,stream,records;public,concurrent,linked,queue,object,get,output,return,output,list
OneInputStreamOperatorTestHarness -> public ConcurrentLinkedQueue<Object> getOutput();1476972861;Get all the output from the task. This contains StreamRecords and Events interleaved. Use_{@link org.apache.flink.streaming.util.TestHarnessUtil#getStreamRecordsFromOutput(java.util.List)}_to extract only the StreamRecords.;public ConcurrentLinkedQueue<Object> getOutput() {_		return outputList__	};get,all,the,output,from,the,task,this,contains,stream,records,and,events,interleaved,use,link,org,apache,flink,streaming,util,test,harness,util,get,stream,records,from,output,java,util,list,to,extract,only,the,stream,records;public,concurrent,linked,queue,object,get,output,return,output,list
OneInputStreamOperatorTestHarness -> public ConcurrentLinkedQueue<Object> getOutput();1477069384;Get all the output from the task. This contains StreamRecords and Events interleaved.;public ConcurrentLinkedQueue<Object> getOutput() {_		return outputList__	};get,all,the,output,from,the,task,this,contains,stream,records,and,events,interleaved;public,concurrent,linked,queue,object,get,output,return,output,list
OneInputStreamOperatorTestHarness -> public ConcurrentLinkedQueue<Object> getOutput();1477069384;Get all the output from the task. This contains StreamRecords and Events interleaved.;public ConcurrentLinkedQueue<Object> getOutput() {_		return outputList__	};get,all,the,output,from,the,task,this,contains,stream,records,and,events,interleaved;public,concurrent,linked,queue,object,get,output,return,output,list
OneInputStreamOperatorTestHarness -> public ConcurrentLinkedQueue<Object> getOutput();1477069384;Get all the output from the task. This contains StreamRecords and Events interleaved.;public ConcurrentLinkedQueue<Object> getOutput() {_		return outputList__	};get,all,the,output,from,the,task,this,contains,stream,records,and,events,interleaved;public,concurrent,linked,queue,object,get,output,return,output,list
