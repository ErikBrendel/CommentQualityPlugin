# id;timestamp;commentText;codeText;commentWords;codeWords
StateSnapshotContextSynchronousImplTest -> @Test 	public void testStreamClosingWhenClosing() throws Exception;1485189169;Tests that closing the StateSnapshotContextSynchronousImpl will also close the associated_output streams.;@Test_	public void testStreamClosingWhenClosing() throws Exception {_		long checkpointId = 42L__		long checkpointTimestamp = 1L___		CheckpointStreamFactory.CheckpointStateOutputStream outputStream1 = mock(CheckpointStreamFactory.CheckpointStateOutputStream.class)__		CheckpointStreamFactory.CheckpointStateOutputStream outputStream2 = mock(CheckpointStreamFactory.CheckpointStateOutputStream.class)___		CheckpointStreamFactory streamFactory = mock(CheckpointStreamFactory.class)__		when(streamFactory.createCheckpointStateOutputStream(eq(checkpointId), eq(checkpointTimestamp))).thenReturn(outputStream1, outputStream2)___		InsightCloseableRegistry closableRegistry = new InsightCloseableRegistry()___		KeyGroupRange keyGroupRange = new KeyGroupRange(0, 2)___		StateSnapshotContextSynchronousImpl context = new StateSnapshotContextSynchronousImpl(_			checkpointId,_			checkpointTimestamp,_			streamFactory,_			keyGroupRange,_			closableRegistry)___		_		context.getRawKeyedOperatorStateOutput()__		context.getRawOperatorStateOutput()___		verify(streamFactory, times(2)).createCheckpointStateOutputStream(eq(checkpointId), eq(checkpointTimestamp))___		assertEquals(2, closableRegistry.size())__		assertTrue(closableRegistry.contains(outputStream1))__		assertTrue(closableRegistry.contains(outputStream2))___		context.close()___		verify(outputStream1).close()__		verify(outputStream2).close()___		assertEquals(0, closableRegistry.size())__	};tests,that,closing,the,state,snapshot,context,synchronous,impl,will,also,close,the,associated,output,streams;test,public,void,test,stream,closing,when,closing,throws,exception,long,checkpoint,id,42l,long,checkpoint,timestamp,1l,checkpoint,stream,factory,checkpoint,state,output,stream,output,stream1,mock,checkpoint,stream,factory,checkpoint,state,output,stream,class,checkpoint,stream,factory,checkpoint,state,output,stream,output,stream2,mock,checkpoint,stream,factory,checkpoint,state,output,stream,class,checkpoint,stream,factory,stream,factory,mock,checkpoint,stream,factory,class,when,stream,factory,create,checkpoint,state,output,stream,eq,checkpoint,id,eq,checkpoint,timestamp,then,return,output,stream1,output,stream2,insight,closeable,registry,closable,registry,new,insight,closeable,registry,key,group,range,key,group,range,new,key,group,range,0,2,state,snapshot,context,synchronous,impl,context,new,state,snapshot,context,synchronous,impl,checkpoint,id,checkpoint,timestamp,stream,factory,key,group,range,closable,registry,context,get,raw,keyed,operator,state,output,context,get,raw,operator,state,output,verify,stream,factory,times,2,create,checkpoint,state,output,stream,eq,checkpoint,id,eq,checkpoint,timestamp,assert,equals,2,closable,registry,size,assert,true,closable,registry,contains,output,stream1,assert,true,closable,registry,contains,output,stream2,context,close,verify,output,stream1,close,verify,output,stream2,close,assert,equals,0,closable,registry,size
StateSnapshotContextSynchronousImplTest -> @Test 	public void testStreamClosingWhenClosing() throws Exception;1495484544;Tests that closing the StateSnapshotContextSynchronousImpl will also close the associated_output streams.;@Test_	public void testStreamClosingWhenClosing() throws Exception {_		long checkpointId = 42L__		long checkpointTimestamp = 1L___		CheckpointStreamFactory.CheckpointStateOutputStream outputStream1 = mock(CheckpointStreamFactory.CheckpointStateOutputStream.class)__		CheckpointStreamFactory.CheckpointStateOutputStream outputStream2 = mock(CheckpointStreamFactory.CheckpointStateOutputStream.class)___		CheckpointStreamFactory streamFactory = mock(CheckpointStreamFactory.class)__		when(streamFactory.createCheckpointStateOutputStream(eq(checkpointId), eq(checkpointTimestamp))).thenReturn(outputStream1, outputStream2)___		InsightCloseableRegistry closableRegistry = new InsightCloseableRegistry()___		KeyGroupRange keyGroupRange = new KeyGroupRange(0, 2)___		StateSnapshotContextSynchronousImpl context = new StateSnapshotContextSynchronousImpl(_			checkpointId,_			checkpointTimestamp,_			streamFactory,_			keyGroupRange,_			closableRegistry)___		_		context.getRawKeyedOperatorStateOutput()__		context.getRawOperatorStateOutput()___		verify(streamFactory, times(2)).createCheckpointStateOutputStream(eq(checkpointId), eq(checkpointTimestamp))___		assertEquals(2, closableRegistry.size())__		assertTrue(closableRegistry.contains(outputStream1))__		assertTrue(closableRegistry.contains(outputStream2))___		context.close()___		verify(outputStream1).close()__		verify(outputStream2).close()___		assertEquals(0, closableRegistry.size())__	};tests,that,closing,the,state,snapshot,context,synchronous,impl,will,also,close,the,associated,output,streams;test,public,void,test,stream,closing,when,closing,throws,exception,long,checkpoint,id,42l,long,checkpoint,timestamp,1l,checkpoint,stream,factory,checkpoint,state,output,stream,output,stream1,mock,checkpoint,stream,factory,checkpoint,state,output,stream,class,checkpoint,stream,factory,checkpoint,state,output,stream,output,stream2,mock,checkpoint,stream,factory,checkpoint,state,output,stream,class,checkpoint,stream,factory,stream,factory,mock,checkpoint,stream,factory,class,when,stream,factory,create,checkpoint,state,output,stream,eq,checkpoint,id,eq,checkpoint,timestamp,then,return,output,stream1,output,stream2,insight,closeable,registry,closable,registry,new,insight,closeable,registry,key,group,range,key,group,range,new,key,group,range,0,2,state,snapshot,context,synchronous,impl,context,new,state,snapshot,context,synchronous,impl,checkpoint,id,checkpoint,timestamp,stream,factory,key,group,range,closable,registry,context,get,raw,keyed,operator,state,output,context,get,raw,operator,state,output,verify,stream,factory,times,2,create,checkpoint,state,output,stream,eq,checkpoint,id,eq,checkpoint,timestamp,assert,equals,2,closable,registry,size,assert,true,closable,registry,contains,output,stream1,assert,true,closable,registry,contains,output,stream2,context,close,verify,output,stream1,close,verify,output,stream2,close,assert,equals,0,closable,registry,size
StateSnapshotContextSynchronousImplTest -> @Test 	public void testStreamClosingWhenClosing() throws Exception;1506348246;Tests that closing the StateSnapshotContextSynchronousImpl will also close the associated_output streams.;@Test_	public void testStreamClosingWhenClosing() throws Exception {_		long checkpointId = 42L__		long checkpointTimestamp = 1L___		CheckpointStreamFactory.CheckpointStateOutputStream outputStream1 = mock(CheckpointStreamFactory.CheckpointStateOutputStream.class)__		CheckpointStreamFactory.CheckpointStateOutputStream outputStream2 = mock(CheckpointStreamFactory.CheckpointStateOutputStream.class)___		CheckpointStreamFactory streamFactory = mock(CheckpointStreamFactory.class)__		when(streamFactory.createCheckpointStateOutputStream(eq(checkpointId), eq(checkpointTimestamp))).thenReturn(outputStream1, outputStream2)___		InsightCloseableRegistry closableRegistry = new InsightCloseableRegistry()___		KeyGroupRange keyGroupRange = new KeyGroupRange(0, 2)___		StateSnapshotContextSynchronousImpl context = new StateSnapshotContextSynchronousImpl(_			checkpointId,_			checkpointTimestamp,_			streamFactory,_			keyGroupRange,_			closableRegistry)___		_		context.getRawKeyedOperatorStateOutput()__		context.getRawOperatorStateOutput()___		verify(streamFactory, times(2)).createCheckpointStateOutputStream(eq(checkpointId), eq(checkpointTimestamp))___		assertEquals(2, closableRegistry.size())__		assertTrue(closableRegistry.contains(outputStream1))__		assertTrue(closableRegistry.contains(outputStream2))___		context.close()___		verify(outputStream1).close()__		verify(outputStream2).close()___		assertEquals(0, closableRegistry.size())__	};tests,that,closing,the,state,snapshot,context,synchronous,impl,will,also,close,the,associated,output,streams;test,public,void,test,stream,closing,when,closing,throws,exception,long,checkpoint,id,42l,long,checkpoint,timestamp,1l,checkpoint,stream,factory,checkpoint,state,output,stream,output,stream1,mock,checkpoint,stream,factory,checkpoint,state,output,stream,class,checkpoint,stream,factory,checkpoint,state,output,stream,output,stream2,mock,checkpoint,stream,factory,checkpoint,state,output,stream,class,checkpoint,stream,factory,stream,factory,mock,checkpoint,stream,factory,class,when,stream,factory,create,checkpoint,state,output,stream,eq,checkpoint,id,eq,checkpoint,timestamp,then,return,output,stream1,output,stream2,insight,closeable,registry,closable,registry,new,insight,closeable,registry,key,group,range,key,group,range,new,key,group,range,0,2,state,snapshot,context,synchronous,impl,context,new,state,snapshot,context,synchronous,impl,checkpoint,id,checkpoint,timestamp,stream,factory,key,group,range,closable,registry,context,get,raw,keyed,operator,state,output,context,get,raw,operator,state,output,verify,stream,factory,times,2,create,checkpoint,state,output,stream,eq,checkpoint,id,eq,checkpoint,timestamp,assert,equals,2,closable,registry,size,assert,true,closable,registry,contains,output,stream1,assert,true,closable,registry,contains,output,stream2,context,close,verify,output,stream1,close,verify,output,stream2,close,assert,equals,0,closable,registry,size
StateSnapshotContextSynchronousImplTest -> @Test 	public void testStreamClosingWhenClosing() throws Exception;1517489695;Tests that closing the StateSnapshotContextSynchronousImpl will also close the associated_output streams.;@Test_	public void testStreamClosingWhenClosing() throws Exception {_		long checkpointId = 42L__		long checkpointTimestamp = 1L___		CheckpointStreamFactory.CheckpointStateOutputStream outputStream1 = mock(CheckpointStreamFactory.CheckpointStateOutputStream.class)__		CheckpointStreamFactory.CheckpointStateOutputStream outputStream2 = mock(CheckpointStreamFactory.CheckpointStateOutputStream.class)___		CheckpointStreamFactory streamFactory = mock(CheckpointStreamFactory.class)__		when(streamFactory.createCheckpointStateOutputStream(CheckpointedStateScope.EXCLUSIVE)).thenReturn(outputStream1, outputStream2)___		InsightCloseableRegistry closableRegistry = new InsightCloseableRegistry()___		KeyGroupRange keyGroupRange = new KeyGroupRange(0, 2)___		StateSnapshotContextSynchronousImpl context = new StateSnapshotContextSynchronousImpl(_			checkpointId,_			checkpointTimestamp,_			streamFactory,_			keyGroupRange,_			closableRegistry)___		_		context.getRawKeyedOperatorStateOutput()__		context.getRawOperatorStateOutput()___		verify(streamFactory, times(2)).createCheckpointStateOutputStream(CheckpointedStateScope.EXCLUSIVE)___		assertEquals(2, closableRegistry.size())__		assertTrue(closableRegistry.contains(outputStream1))__		assertTrue(closableRegistry.contains(outputStream2))___		context.close()___		verify(outputStream1).close()__		verify(outputStream2).close()___		assertEquals(0, closableRegistry.size())__	};tests,that,closing,the,state,snapshot,context,synchronous,impl,will,also,close,the,associated,output,streams;test,public,void,test,stream,closing,when,closing,throws,exception,long,checkpoint,id,42l,long,checkpoint,timestamp,1l,checkpoint,stream,factory,checkpoint,state,output,stream,output,stream1,mock,checkpoint,stream,factory,checkpoint,state,output,stream,class,checkpoint,stream,factory,checkpoint,state,output,stream,output,stream2,mock,checkpoint,stream,factory,checkpoint,state,output,stream,class,checkpoint,stream,factory,stream,factory,mock,checkpoint,stream,factory,class,when,stream,factory,create,checkpoint,state,output,stream,checkpointed,state,scope,exclusive,then,return,output,stream1,output,stream2,insight,closeable,registry,closable,registry,new,insight,closeable,registry,key,group,range,key,group,range,new,key,group,range,0,2,state,snapshot,context,synchronous,impl,context,new,state,snapshot,context,synchronous,impl,checkpoint,id,checkpoint,timestamp,stream,factory,key,group,range,closable,registry,context,get,raw,keyed,operator,state,output,context,get,raw,operator,state,output,verify,stream,factory,times,2,create,checkpoint,state,output,stream,checkpointed,state,scope,exclusive,assert,equals,2,closable,registry,size,assert,true,closable,registry,contains,output,stream1,assert,true,closable,registry,contains,output,stream2,context,close,verify,output,stream1,close,verify,output,stream2,close,assert,equals,0,closable,registry,size
