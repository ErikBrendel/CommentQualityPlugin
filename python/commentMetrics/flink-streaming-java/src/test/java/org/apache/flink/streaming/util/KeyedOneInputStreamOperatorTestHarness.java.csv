# id;timestamp;commentText;codeText;commentWords;codeWords
KeyedOneInputStreamOperatorTestHarness -> @Override 	public void restore(StreamStateHandle snapshot) throws Exception;1472663401;Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#restoreState(org.apache.flink.core.fs.FSDataInputStream)} ()};@Override_	public void restore(StreamStateHandle snapshot) throws Exception {_		FSDataInputStream inStream = snapshot.openInputStream()__		operator.restoreState(inStream)___		byte keyedStatePresent = (byte) inStream.read()__		if (keyedStatePresent == 1) {_			ObjectInputStream ois = new ObjectInputStream(inStream)__			this.restoredKeyedState = (KeyGroupsStateHandle) ois.readObject()__		}_	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,restore,state,org,apache,flink,core,fs,fsdata,input,stream;override,public,void,restore,stream,state,handle,snapshot,throws,exception,fsdata,input,stream,in,stream,snapshot,open,input,stream,operator,restore,state,in,stream,byte,keyed,state,present,byte,in,stream,read,if,keyed,state,present,1,object,input,stream,ois,new,object,input,stream,in,stream,this,restored,keyed,state,key,groups,state,handle,ois,read,object
KeyedOneInputStreamOperatorTestHarness -> @Override 	public void restore(StreamStateHandle snapshot) throws Exception;1472663401;Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#restoreState(org.apache.flink.core.fs.FSDataInputStream)} ()};@Override_	public void restore(StreamStateHandle snapshot) throws Exception {_		FSDataInputStream inStream = snapshot.openInputStream()__		operator.restoreState(inStream)___		byte keyedStatePresent = (byte) inStream.read()__		if (keyedStatePresent == 1) {_			ObjectInputStream ois = new ObjectInputStream(inStream)__			this.restoredKeyedState = (KeyGroupsStateHandle) ois.readObject()__		}_	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,restore,state,org,apache,flink,core,fs,fsdata,input,stream;override,public,void,restore,stream,state,handle,snapshot,throws,exception,fsdata,input,stream,in,stream,snapshot,open,input,stream,operator,restore,state,in,stream,byte,keyed,state,present,byte,in,stream,read,if,keyed,state,present,1,object,input,stream,ois,new,object,input,stream,in,stream,this,restored,keyed,state,key,groups,state,handle,ois,read,object
KeyedOneInputStreamOperatorTestHarness -> @Override 	public void restore(StreamStateHandle snapshot) throws Exception;1472663402;Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#restoreState(org.apache.flink.core.fs.FSDataInputStream)} ()};@Override_	public void restore(StreamStateHandle snapshot) throws Exception {_		FSDataInputStream inStream = snapshot.openInputStream()__		operator.restoreState(inStream)___		byte keyedStatePresent = (byte) inStream.read()__		if (keyedStatePresent == 1) {_			ObjectInputStream ois = new ObjectInputStream(inStream)__			this.restoredKeyedState = (KeyGroupsStateHandle) ois.readObject()__		}_	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,restore,state,org,apache,flink,core,fs,fsdata,input,stream;override,public,void,restore,stream,state,handle,snapshot,throws,exception,fsdata,input,stream,in,stream,snapshot,open,input,stream,operator,restore,state,in,stream,byte,keyed,state,present,byte,in,stream,read,if,keyed,state,present,1,object,input,stream,ois,new,object,input,stream,in,stream,this,restored,keyed,state,key,groups,state,handle,ois,read,object
KeyedOneInputStreamOperatorTestHarness -> @Override 	public void restore(StreamStateHandle snapshot) throws Exception;1474635666;Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#restoreState(org.apache.flink.core.fs.FSDataInputStream)} ()};@Override_	public void restore(StreamStateHandle snapshot) throws Exception {_		FSDataInputStream inStream = snapshot.openInputStream()__		operator.restoreState(inStream)___		byte keyedStatePresent = (byte) inStream.read()__		if (keyedStatePresent == 1) {_			ObjectInputStream ois = new ObjectInputStream(inStream)__			this.restoredKeyedState = (KeyGroupsStateHandle) ois.readObject()__		}_	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,restore,state,org,apache,flink,core,fs,fsdata,input,stream;override,public,void,restore,stream,state,handle,snapshot,throws,exception,fsdata,input,stream,in,stream,snapshot,open,input,stream,operator,restore,state,in,stream,byte,keyed,state,present,byte,in,stream,read,if,keyed,state,present,1,object,input,stream,ois,new,object,input,stream,in,stream,this,restored,keyed,state,key,groups,state,handle,ois,read,object
KeyedOneInputStreamOperatorTestHarness -> @Override 	public void restore(StreamStateHandle snapshot) throws Exception;1475231926;;@Override_	public void restore(StreamStateHandle snapshot) throws Exception {_		try (FSDataInputStream inStream = snapshot.openInputStream()) {__			if (operator instanceof StreamCheckpointedOperator) {_				((StreamCheckpointedOperator) operator).restoreState(inStream)__			}__			byte keyedStatePresent = (byte) inStream.read()__			if (keyedStatePresent == 1) {_				ObjectInputStream ois = new ObjectInputStream(inStream)__				this.restoredKeyedState = (KeyGroupsStateHandle) ois.readObject()__			}_		}_	};;override,public,void,restore,stream,state,handle,snapshot,throws,exception,try,fsdata,input,stream,in,stream,snapshot,open,input,stream,if,operator,instanceof,stream,checkpointed,operator,stream,checkpointed,operator,operator,restore,state,in,stream,byte,keyed,state,present,byte,in,stream,read,if,keyed,state,present,1,object,input,stream,ois,new,object,input,stream,in,stream,this,restored,keyed,state,key,groups,state,handle,ois,read,object
KeyedOneInputStreamOperatorTestHarness -> @Override 	public void restore(StreamStateHandle snapshot) throws Exception;1475688973;;@Override_	public void restore(StreamStateHandle snapshot) throws Exception {_		try (FSDataInputStream inStream = snapshot.openInputStream()) {__			if (operator instanceof StreamCheckpointedOperator) {_				((StreamCheckpointedOperator) operator).restoreState(inStream)__			}__			byte keyedStatePresent = (byte) inStream.read()__			if (keyedStatePresent == 1) {_				ObjectInputStream ois = new ObjectInputStream(inStream)__				this.restoredKeyedState = (KeyGroupsStateHandle) ois.readObject()__			}_		}_	};;override,public,void,restore,stream,state,handle,snapshot,throws,exception,try,fsdata,input,stream,in,stream,snapshot,open,input,stream,if,operator,instanceof,stream,checkpointed,operator,stream,checkpointed,operator,operator,restore,state,in,stream,byte,keyed,state,present,byte,in,stream,read,if,keyed,state,present,1,object,input,stream,ois,new,object,input,stream,in,stream,this,restored,keyed,state,key,groups,state,handle,ois,read,object
KeyedOneInputStreamOperatorTestHarness -> @Override 	public void restore(StreamStateHandle snapshot) throws Exception;1476972861;;@Override_	public void restore(StreamStateHandle snapshot) throws Exception {_		try (FSDataInputStream inStream = snapshot.openInputStream()) {__			if (operator instanceof StreamCheckpointedOperator) {_				((StreamCheckpointedOperator) operator).restoreState(inStream)__			}__			byte keyedStatePresent = (byte) inStream.read()__			if (keyedStatePresent == 1) {_				ObjectInputStream ois = new ObjectInputStream(inStream)__				this.restoredKeyedState = Collections.singletonList((KeyGroupsStateHandle) ois.readObject())__			}_		}_	};;override,public,void,restore,stream,state,handle,snapshot,throws,exception,try,fsdata,input,stream,in,stream,snapshot,open,input,stream,if,operator,instanceof,stream,checkpointed,operator,stream,checkpointed,operator,operator,restore,state,in,stream,byte,keyed,state,present,byte,in,stream,read,if,keyed,state,present,1,object,input,stream,ois,new,object,input,stream,in,stream,this,restored,keyed,state,collections,singleton,list,key,groups,state,handle,ois,read,object
KeyedOneInputStreamOperatorTestHarness -> @Override 	public void restore(StreamStateHandle snapshot) throws Exception;1477069384;;@Override_	public void restore(StreamStateHandle snapshot) throws Exception {_		try (FSDataInputStream inStream = snapshot.openInputStream()) {__			if (operator instanceof StreamCheckpointedOperator) {_				((StreamCheckpointedOperator) operator).restoreState(inStream)__			}__			byte keyedStatePresent = (byte) inStream.read()__			if (keyedStatePresent == 1) {_				ObjectInputStream ois = new ObjectInputStream(inStream)__				this.restoredKeyedState = Collections.singletonList((KeyGroupsStateHandle) ois.readObject())__			}_		}_	};;override,public,void,restore,stream,state,handle,snapshot,throws,exception,try,fsdata,input,stream,in,stream,snapshot,open,input,stream,if,operator,instanceof,stream,checkpointed,operator,stream,checkpointed,operator,operator,restore,state,in,stream,byte,keyed,state,present,byte,in,stream,read,if,keyed,state,present,1,object,input,stream,ois,new,object,input,stream,in,stream,this,restored,keyed,state,collections,singleton,list,key,groups,state,handle,ois,read,object
KeyedOneInputStreamOperatorTestHarness -> @Override 	public void restore(StreamStateHandle snapshot) throws Exception;1477069384;;@Override_	public void restore(StreamStateHandle snapshot) throws Exception {_		try (FSDataInputStream inStream = snapshot.openInputStream()) {__			if (operator instanceof StreamCheckpointedOperator) {_				((StreamCheckpointedOperator) operator).restoreState(inStream)__			}__			byte keyedStatePresent = (byte) inStream.read()__			if (keyedStatePresent == 1) {_				ObjectInputStream ois = new ObjectInputStream(inStream)__				this.restoredKeyedState = Collections.singletonList((KeyGroupsStateHandle) ois.readObject())__			}_		}_	};;override,public,void,restore,stream,state,handle,snapshot,throws,exception,try,fsdata,input,stream,in,stream,snapshot,open,input,stream,if,operator,instanceof,stream,checkpointed,operator,stream,checkpointed,operator,operator,restore,state,in,stream,byte,keyed,state,present,byte,in,stream,read,if,keyed,state,present,1,object,input,stream,ois,new,object,input,stream,in,stream,this,restored,keyed,state,collections,singleton,list,key,groups,state,handle,ois,read,object
KeyedOneInputStreamOperatorTestHarness -> @Override 	public void restore(StreamStateHandle snapshot) throws Exception;1477069385;;@Override_	public void restore(StreamStateHandle snapshot) throws Exception {_		try (FSDataInputStream inStream = snapshot.openInputStream()) {__			if (operator instanceof StreamCheckpointedOperator) {_				((StreamCheckpointedOperator) operator).restoreState(inStream)__			}__			byte keyedStatePresent = (byte) inStream.read()__			if (keyedStatePresent == 1) {_				ObjectInputStream ois = new ObjectInputStream(inStream)__				this.restoredKeyedState = Collections.singletonList((KeyGroupsStateHandle) ois.readObject())__			}_		}_	};;override,public,void,restore,stream,state,handle,snapshot,throws,exception,try,fsdata,input,stream,in,stream,snapshot,open,input,stream,if,operator,instanceof,stream,checkpointed,operator,stream,checkpointed,operator,operator,restore,state,in,stream,byte,keyed,state,present,byte,in,stream,read,if,keyed,state,present,1,object,input,stream,ois,new,object,input,stream,in,stream,this,restored,keyed,state,collections,singleton,list,key,groups,state,handle,ois,read,object
KeyedOneInputStreamOperatorTestHarness -> @Override 	public void restore(StreamStateHandle snapshot) throws Exception;1477517188;;@Override_	public void restore(StreamStateHandle snapshot) throws Exception {_		try (FSDataInputStream inStream = snapshot.openInputStream()) {__			if (operator instanceof StreamCheckpointedOperator) {_				((StreamCheckpointedOperator) operator).restoreState(inStream)__			}__			byte keyedStatePresent = (byte) inStream.read()__			if (keyedStatePresent == 1) {_				ObjectInputStream ois = new ObjectInputStream(inStream)__				this.restoredKeyedState = Collections.singletonList((KeyGroupsStateHandle) ois.readObject())__			}_		}_	};;override,public,void,restore,stream,state,handle,snapshot,throws,exception,try,fsdata,input,stream,in,stream,snapshot,open,input,stream,if,operator,instanceof,stream,checkpointed,operator,stream,checkpointed,operator,operator,restore,state,in,stream,byte,keyed,state,present,byte,in,stream,read,if,keyed,state,present,1,object,input,stream,ois,new,object,input,stream,in,stream,this,restored,keyed,state,collections,singleton,list,key,groups,state,handle,ois,read,object
KeyedOneInputStreamOperatorTestHarness -> @Override 	public void restore(StreamStateHandle snapshot) throws Exception;1477517188;;@Override_	public void restore(StreamStateHandle snapshot) throws Exception {_		try (FSDataInputStream inStream = snapshot.openInputStream()) {__			if (operator instanceof StreamCheckpointedOperator) {_				((StreamCheckpointedOperator) operator).restoreState(inStream)__			}__			byte keyedStatePresent = (byte) inStream.read()__			if (keyedStatePresent == 1) {_				ObjectInputStream ois = new ObjectInputStream(inStream)__				this.restoredKeyedState = Collections.singletonList((KeyGroupsStateHandle) ois.readObject())__			}_		}_	};;override,public,void,restore,stream,state,handle,snapshot,throws,exception,try,fsdata,input,stream,in,stream,snapshot,open,input,stream,if,operator,instanceof,stream,checkpointed,operator,stream,checkpointed,operator,operator,restore,state,in,stream,byte,keyed,state,present,byte,in,stream,read,if,keyed,state,present,1,object,input,stream,ois,new,object,input,stream,in,stream,this,restored,keyed,state,collections,singleton,list,key,groups,state,handle,ois,read,object
KeyedOneInputStreamOperatorTestHarness -> @Override 	public void restore(StreamStateHandle snapshot) throws Exception;1477517188;;@Override_	public void restore(StreamStateHandle snapshot) throws Exception {_		try (FSDataInputStream inStream = snapshot.openInputStream()) {__			if (operator instanceof StreamCheckpointedOperator) {_				((StreamCheckpointedOperator) operator).restoreState(inStream)__			}__			byte keyedStatePresent = (byte) inStream.read()__			if (keyedStatePresent == 1) {_				ObjectInputStream ois = new ObjectInputStream(inStream)__				this.restoredKeyedState = Collections.singletonList((KeyGroupsStateHandle) ois.readObject())__			}_		}_	};;override,public,void,restore,stream,state,handle,snapshot,throws,exception,try,fsdata,input,stream,in,stream,snapshot,open,input,stream,if,operator,instanceof,stream,checkpointed,operator,stream,checkpointed,operator,operator,restore,state,in,stream,byte,keyed,state,present,byte,in,stream,read,if,keyed,state,present,1,object,input,stream,ois,new,object,input,stream,in,stream,this,restored,keyed,state,collections,singleton,list,key,groups,state,handle,ois,read,object
KeyedOneInputStreamOperatorTestHarness -> @Override 	public void restore(StreamStateHandle snapshot) throws Exception;1482244973;;@Override_	public void restore(StreamStateHandle snapshot) throws Exception {_		try (FSDataInputStream inStream = snapshot.openInputStream()) {__			if (operator instanceof StreamCheckpointedOperator) {_				((StreamCheckpointedOperator) operator).restoreState(inStream)__			}__			byte keyedStatePresent = (byte) inStream.read()__			if (keyedStatePresent == 1) {_				ObjectInputStream ois = new ObjectInputStream(inStream)__				this.restoredKeyedState = Collections.singletonList((KeyGroupsStateHandle) ois.readObject())__			}_		}_	};;override,public,void,restore,stream,state,handle,snapshot,throws,exception,try,fsdata,input,stream,in,stream,snapshot,open,input,stream,if,operator,instanceof,stream,checkpointed,operator,stream,checkpointed,operator,operator,restore,state,in,stream,byte,keyed,state,present,byte,in,stream,read,if,keyed,state,present,1,object,input,stream,ois,new,object,input,stream,in,stream,this,restored,keyed,state,collections,singleton,list,key,groups,state,handle,ois,read,object
KeyedOneInputStreamOperatorTestHarness -> @Override 	public void restore(StreamStateHandle snapshot) throws Exception;1484216798;;@Override_	public void restore(StreamStateHandle snapshot) throws Exception {_		try (FSDataInputStream inStream = snapshot.openInputStream()) {__			if (operator instanceof StreamCheckpointedOperator) {_				((StreamCheckpointedOperator) operator).restoreState(inStream)__			}__			byte keyedStatePresent = (byte) inStream.read()__			if (keyedStatePresent == 1) {_				ObjectInputStream ois = new ObjectInputStream(inStream)__				this.restoredKeyedState = Collections.singletonList((KeyGroupsStateHandle) ois.readObject())__			}_		}_	};;override,public,void,restore,stream,state,handle,snapshot,throws,exception,try,fsdata,input,stream,in,stream,snapshot,open,input,stream,if,operator,instanceof,stream,checkpointed,operator,stream,checkpointed,operator,operator,restore,state,in,stream,byte,keyed,state,present,byte,in,stream,read,if,keyed,state,present,1,object,input,stream,ois,new,object,input,stream,in,stream,this,restored,keyed,state,collections,singleton,list,key,groups,state,handle,ois,read,object
KeyedOneInputStreamOperatorTestHarness -> @Override 	public void restore(StreamStateHandle snapshot) throws Exception;1485250954;;@Override_	public void restore(StreamStateHandle snapshot) throws Exception {_		try (FSDataInputStream inStream = snapshot.openInputStream()) {__			if (operator instanceof StreamCheckpointedOperator) {_				((StreamCheckpointedOperator) operator).restoreState(inStream)__			}__			byte keyedStatePresent = (byte) inStream.read()__			if (keyedStatePresent == 1) {_				ObjectInputStream ois = new ObjectInputStream(inStream)__				this.restoredKeyedState = Collections.singletonList((KeyGroupsStateHandle) ois.readObject())__			}_		}_	};;override,public,void,restore,stream,state,handle,snapshot,throws,exception,try,fsdata,input,stream,in,stream,snapshot,open,input,stream,if,operator,instanceof,stream,checkpointed,operator,stream,checkpointed,operator,operator,restore,state,in,stream,byte,keyed,state,present,byte,in,stream,read,if,keyed,state,present,1,object,input,stream,ois,new,object,input,stream,in,stream,this,restored,keyed,state,collections,singleton,list,key,groups,state,handle,ois,read,object
KeyedOneInputStreamOperatorTestHarness -> @Override 	public void restore(StreamStateHandle snapshot) throws Exception;1487871589;;@Override_	public void restore(StreamStateHandle snapshot) throws Exception {_		try (FSDataInputStream inStream = snapshot.openInputStream()) {__			if (operator instanceof StreamCheckpointedOperator) {_				((StreamCheckpointedOperator) operator).restoreState(inStream)__			}__			byte keyedStatePresent = (byte) inStream.read()__			if (keyedStatePresent == 1) {_				ObjectInputStream ois = new ObjectInputStream(inStream)__				this.restoredKeyedState = Collections.singletonList((KeyGroupsStateHandle) ois.readObject())__			}_		}_	};;override,public,void,restore,stream,state,handle,snapshot,throws,exception,try,fsdata,input,stream,in,stream,snapshot,open,input,stream,if,operator,instanceof,stream,checkpointed,operator,stream,checkpointed,operator,operator,restore,state,in,stream,byte,keyed,state,present,byte,in,stream,read,if,keyed,state,present,1,object,input,stream,ois,new,object,input,stream,in,stream,this,restored,keyed,state,collections,singleton,list,key,groups,state,handle,ois,read,object
KeyedOneInputStreamOperatorTestHarness -> @Override 	public void restore(StreamStateHandle snapshot) throws Exception;1489149057;;@Override_	public void restore(StreamStateHandle snapshot) throws Exception {_		try (FSDataInputStream inStream = snapshot.openInputStream()) {__			if (operator instanceof StreamCheckpointedOperator) {_				((StreamCheckpointedOperator) operator).restoreState(inStream)__			}__			byte keyedStatePresent = (byte) inStream.read()__			if (keyedStatePresent == 1) {_				ObjectInputStream ois = new ObjectInputStream(inStream)__				this.restoredKeyedState = Collections.singletonList((KeyGroupsStateHandle) ois.readObject())__			}_		}_	};;override,public,void,restore,stream,state,handle,snapshot,throws,exception,try,fsdata,input,stream,in,stream,snapshot,open,input,stream,if,operator,instanceof,stream,checkpointed,operator,stream,checkpointed,operator,operator,restore,state,in,stream,byte,keyed,state,present,byte,in,stream,read,if,keyed,state,present,1,object,input,stream,ois,new,object,input,stream,in,stream,this,restored,keyed,state,collections,singleton,list,key,groups,state,handle,ois,read,object
KeyedOneInputStreamOperatorTestHarness -> @Override 	public void restore(StreamStateHandle snapshot) throws Exception;1490724328;;@Override_	public void restore(StreamStateHandle snapshot) throws Exception {_		try (FSDataInputStream inStream = snapshot.openInputStream()) {__			if (operator instanceof StreamCheckpointedOperator) {_				((StreamCheckpointedOperator) operator).restoreState(inStream)__			}__			byte keyedStatePresent = (byte) inStream.read()__			if (keyedStatePresent == 1) {_				ObjectInputStream ois = new ObjectInputStream(inStream)__				this.restoredKeyedState = Collections.singletonList((KeyedStateHandle) ois.readObject())__			}_		}_	};;override,public,void,restore,stream,state,handle,snapshot,throws,exception,try,fsdata,input,stream,in,stream,snapshot,open,input,stream,if,operator,instanceof,stream,checkpointed,operator,stream,checkpointed,operator,operator,restore,state,in,stream,byte,keyed,state,present,byte,in,stream,read,if,keyed,state,present,1,object,input,stream,ois,new,object,input,stream,in,stream,this,restored,keyed,state,collections,singleton,list,keyed,state,handle,ois,read,object
KeyedOneInputStreamOperatorTestHarness -> @Override 	public void restore(StreamStateHandle snapshot) throws Exception;1493994606;;@Override_	public void restore(StreamStateHandle snapshot) throws Exception {_		try (FSDataInputStream inStream = snapshot.openInputStream()) {__			if (operator instanceof StreamCheckpointedOperator) {_				((StreamCheckpointedOperator) operator).restoreState(inStream)__			}__			byte keyedStatePresent = (byte) inStream.read()__			if (keyedStatePresent == 1) {_				ObjectInputStream ois = new ObjectInputStream(inStream)__				this.restoredKeyedState = Collections.singletonList((KeyedStateHandle) ois.readObject())__			}_		}_	};;override,public,void,restore,stream,state,handle,snapshot,throws,exception,try,fsdata,input,stream,in,stream,snapshot,open,input,stream,if,operator,instanceof,stream,checkpointed,operator,stream,checkpointed,operator,operator,restore,state,in,stream,byte,keyed,state,present,byte,in,stream,read,if,keyed,state,present,1,object,input,stream,ois,new,object,input,stream,in,stream,this,restored,keyed,state,collections,singleton,list,keyed,state,handle,ois,read,object
KeyedOneInputStreamOperatorTestHarness -> @Override 	public void restore(StreamStateHandle snapshot) throws Exception;1495484544;;@Override_	public void restore(StreamStateHandle snapshot) throws Exception {_		try (FSDataInputStream inStream = snapshot.openInputStream()) {__			if (operator instanceof StreamCheckpointedOperator) {_				((StreamCheckpointedOperator) operator).restoreState(inStream)__			}__			byte keyedStatePresent = (byte) inStream.read()__			if (keyedStatePresent == 1) {_				ObjectInputStream ois = new ObjectInputStream(inStream)__				this.restoredKeyedState = Collections.singletonList((KeyedStateHandle) ois.readObject())__			}_		}_	};;override,public,void,restore,stream,state,handle,snapshot,throws,exception,try,fsdata,input,stream,in,stream,snapshot,open,input,stream,if,operator,instanceof,stream,checkpointed,operator,stream,checkpointed,operator,operator,restore,state,in,stream,byte,keyed,state,present,byte,in,stream,read,if,keyed,state,present,1,object,input,stream,ois,new,object,input,stream,in,stream,this,restored,keyed,state,collections,singleton,list,keyed,state,handle,ois,read,object
KeyedOneInputStreamOperatorTestHarness -> @Override 	public void restore(StreamStateHandle snapshot) throws Exception;1497328696;;@Override_	public void restore(StreamStateHandle snapshot) throws Exception {_		try (FSDataInputStream inStream = snapshot.openInputStream()) {__			if (operator instanceof StreamCheckpointedOperator) {_				((StreamCheckpointedOperator) operator).restoreState(inStream)__			}__			byte keyedStatePresent = (byte) inStream.read()__			if (keyedStatePresent == 1) {_				ObjectInputStream ois = new ObjectInputStream(inStream)__				this.restoredKeyedState = Collections.singletonList((KeyedStateHandle) ois.readObject())__			}_		}_	};;override,public,void,restore,stream,state,handle,snapshot,throws,exception,try,fsdata,input,stream,in,stream,snapshot,open,input,stream,if,operator,instanceof,stream,checkpointed,operator,stream,checkpointed,operator,operator,restore,state,in,stream,byte,keyed,state,present,byte,in,stream,read,if,keyed,state,present,1,object,input,stream,ois,new,object,input,stream,in,stream,this,restored,keyed,state,collections,singleton,list,keyed,state,handle,ois,read,object
KeyedOneInputStreamOperatorTestHarness -> public void close() throws Exception;1472663401;Calls close and dispose on the operator.;public void close() throws Exception {_		super.close()__	};calls,close,and,dispose,on,the,operator;public,void,close,throws,exception,super,close
KeyedOneInputStreamOperatorTestHarness -> public void close() throws Exception;1472663401;Calls close and dispose on the operator.;public void close() throws Exception {_		super.close()__	};calls,close,and,dispose,on,the,operator;public,void,close,throws,exception,super,close
KeyedOneInputStreamOperatorTestHarness -> public void close() throws Exception;1472663402;Calls close and dispose on the operator.;public void close() throws Exception {_		super.close()__		if(keyedStateBackend != null) {_			keyedStateBackend.close()__		}_	};calls,close,and,dispose,on,the,operator;public,void,close,throws,exception,super,close,if,keyed,state,backend,null,keyed,state,backend,close
KeyedOneInputStreamOperatorTestHarness -> public void close() throws Exception;1474635666;Calls close and dispose on the operator.;public void close() throws Exception {_		super.close()__		if(keyedStateBackend != null) {_			keyedStateBackend.close()__		}_	};calls,close,and,dispose,on,the,operator;public,void,close,throws,exception,super,close,if,keyed,state,backend,null,keyed,state,backend,close
KeyedOneInputStreamOperatorTestHarness -> public void close() throws Exception;1475231926;Calls close and dispose on the operator.;public void close() throws Exception {_		super.close()__		if(keyedStateBackend != null) {_			keyedStateBackend.dispose()__		}_	};calls,close,and,dispose,on,the,operator;public,void,close,throws,exception,super,close,if,keyed,state,backend,null,keyed,state,backend,dispose
KeyedOneInputStreamOperatorTestHarness -> public void close() throws Exception;1475688973;Calls close and dispose on the operator.;public void close() throws Exception {_		super.close()__		if(keyedStateBackend != null) {_			keyedStateBackend.dispose()__		}_	};calls,close,and,dispose,on,the,operator;public,void,close,throws,exception,super,close,if,keyed,state,backend,null,keyed,state,backend,dispose
KeyedOneInputStreamOperatorTestHarness -> public void close() throws Exception;1476972861;Calls close and dispose on the operator.;public void close() throws Exception {_		super.close()__		if (keyedStateBackend != null) {_			keyedStateBackend.dispose()__		}_	};calls,close,and,dispose,on,the,operator;public,void,close,throws,exception,super,close,if,keyed,state,backend,null,keyed,state,backend,dispose
KeyedOneInputStreamOperatorTestHarness -> public void close() throws Exception;1477069384;Calls close and dispose on the operator.;public void close() throws Exception {_		super.close()__		if (keyedStateBackend != null) {_			keyedStateBackend.dispose()__		}_	};calls,close,and,dispose,on,the,operator;public,void,close,throws,exception,super,close,if,keyed,state,backend,null,keyed,state,backend,dispose
KeyedOneInputStreamOperatorTestHarness -> public void close() throws Exception;1477069384;Calls close and dispose on the operator.;public void close() throws Exception {_		super.close()__		if (keyedStateBackend != null) {_			keyedStateBackend.dispose()__		}_	};calls,close,and,dispose,on,the,operator;public,void,close,throws,exception,super,close,if,keyed,state,backend,null,keyed,state,backend,dispose
KeyedOneInputStreamOperatorTestHarness -> @Override 	public StreamStateHandle snapshotLegacy(long checkpointId, long timestamp) throws Exception;1476972861;;@Override_	public StreamStateHandle snapshotLegacy(long checkpointId, long timestamp) throws Exception {_		_		MemoryStateBackend backend = new MemoryStateBackend()___		CheckpointStreamFactory streamFactory = backend.createStreamFactory(new JobID(), "test_op")__		CheckpointStreamFactory.CheckpointStateOutputStream outStream =_				streamFactory.createCheckpointStateOutputStream(checkpointId, timestamp)___		if (operator instanceof StreamCheckpointedOperator) {_			((StreamCheckpointedOperator) operator).snapshotState(outStream, checkpointId, timestamp)__		}__		if (keyedStateBackend != null) {_			RunnableFuture<KeyGroupsStateHandle> keyedSnapshotRunnable = keyedStateBackend.snapshot(checkpointId,_					timestamp,_					streamFactory)__			if(!keyedSnapshotRunnable.isDone()) {_				Thread runner = new Thread(keyedSnapshotRunnable)__				runner.start()__			}_			outStream.write(1)__			ObjectOutputStream oos = new ObjectOutputStream(outStream)__			oos.writeObject(keyedSnapshotRunnable.get())__			oos.flush()__		} else {_			outStream.write(0)__		}_		return outStream.closeAndGetHandle()__	};;override,public,stream,state,handle,snapshot,legacy,long,checkpoint,id,long,timestamp,throws,exception,memory,state,backend,backend,new,memory,state,backend,checkpoint,stream,factory,stream,factory,backend,create,stream,factory,new,job,id,checkpoint,stream,factory,checkpoint,state,output,stream,out,stream,stream,factory,create,checkpoint,state,output,stream,checkpoint,id,timestamp,if,operator,instanceof,stream,checkpointed,operator,stream,checkpointed,operator,operator,snapshot,state,out,stream,checkpoint,id,timestamp,if,keyed,state,backend,null,runnable,future,key,groups,state,handle,keyed,snapshot,runnable,keyed,state,backend,snapshot,checkpoint,id,timestamp,stream,factory,if,keyed,snapshot,runnable,is,done,thread,runner,new,thread,keyed,snapshot,runnable,runner,start,out,stream,write,1,object,output,stream,oos,new,object,output,stream,out,stream,oos,write,object,keyed,snapshot,runnable,get,oos,flush,else,out,stream,write,0,return,out,stream,close,and,get,handle
KeyedOneInputStreamOperatorTestHarness -> @Override 	public StreamStateHandle snapshotLegacy(long checkpointId, long timestamp) throws Exception;1477069384;;@Override_	public StreamStateHandle snapshotLegacy(long checkpointId, long timestamp) throws Exception {_		_		MemoryStateBackend backend = new MemoryStateBackend()___		CheckpointStreamFactory streamFactory = backend.createStreamFactory(new JobID(), "test_op")__		CheckpointStreamFactory.CheckpointStateOutputStream outStream =_				streamFactory.createCheckpointStateOutputStream(checkpointId, timestamp)___		if (operator instanceof StreamCheckpointedOperator) {_			((StreamCheckpointedOperator) operator).snapshotState(outStream, checkpointId, timestamp)__		}__		if (keyedStateBackend != null) {_			RunnableFuture<KeyGroupsStateHandle> keyedSnapshotRunnable = keyedStateBackend.snapshot(checkpointId,_					timestamp,_					streamFactory)__			if(!keyedSnapshotRunnable.isDone()) {_				Thread runner = new Thread(keyedSnapshotRunnable)__				runner.start()__			}_			outStream.write(1)__			ObjectOutputStream oos = new ObjectOutputStream(outStream)__			oos.writeObject(keyedSnapshotRunnable.get())__			oos.flush()__		} else {_			outStream.write(0)__		}_		return outStream.closeAndGetHandle()__	};;override,public,stream,state,handle,snapshot,legacy,long,checkpoint,id,long,timestamp,throws,exception,memory,state,backend,backend,new,memory,state,backend,checkpoint,stream,factory,stream,factory,backend,create,stream,factory,new,job,id,checkpoint,stream,factory,checkpoint,state,output,stream,out,stream,stream,factory,create,checkpoint,state,output,stream,checkpoint,id,timestamp,if,operator,instanceof,stream,checkpointed,operator,stream,checkpointed,operator,operator,snapshot,state,out,stream,checkpoint,id,timestamp,if,keyed,state,backend,null,runnable,future,key,groups,state,handle,keyed,snapshot,runnable,keyed,state,backend,snapshot,checkpoint,id,timestamp,stream,factory,if,keyed,snapshot,runnable,is,done,thread,runner,new,thread,keyed,snapshot,runnable,runner,start,out,stream,write,1,object,output,stream,oos,new,object,output,stream,out,stream,oos,write,object,keyed,snapshot,runnable,get,oos,flush,else,out,stream,write,0,return,out,stream,close,and,get,handle
KeyedOneInputStreamOperatorTestHarness -> @Override 	public StreamStateHandle snapshotLegacy(long checkpointId, long timestamp) throws Exception;1477069384;;@Override_	public StreamStateHandle snapshotLegacy(long checkpointId, long timestamp) throws Exception {_		_		MemoryStateBackend backend = new MemoryStateBackend()___		CheckpointStreamFactory streamFactory = backend.createStreamFactory(new JobID(), "test_op")__		CheckpointStreamFactory.CheckpointStateOutputStream outStream =_				streamFactory.createCheckpointStateOutputStream(checkpointId, timestamp)___		if (operator instanceof StreamCheckpointedOperator) {_			((StreamCheckpointedOperator) operator).snapshotState(outStream, checkpointId, timestamp)__		}__		if (keyedStateBackend != null) {_			RunnableFuture<KeyGroupsStateHandle> keyedSnapshotRunnable = keyedStateBackend.snapshot(checkpointId,_					timestamp,_					streamFactory)__			if(!keyedSnapshotRunnable.isDone()) {_				Thread runner = new Thread(keyedSnapshotRunnable)__				runner.start()__			}_			outStream.write(1)__			ObjectOutputStream oos = new ObjectOutputStream(outStream)__			oos.writeObject(keyedSnapshotRunnable.get())__			oos.flush()__		} else {_			outStream.write(0)__		}_		return outStream.closeAndGetHandle()__	};;override,public,stream,state,handle,snapshot,legacy,long,checkpoint,id,long,timestamp,throws,exception,memory,state,backend,backend,new,memory,state,backend,checkpoint,stream,factory,stream,factory,backend,create,stream,factory,new,job,id,checkpoint,stream,factory,checkpoint,state,output,stream,out,stream,stream,factory,create,checkpoint,state,output,stream,checkpoint,id,timestamp,if,operator,instanceof,stream,checkpointed,operator,stream,checkpointed,operator,operator,snapshot,state,out,stream,checkpoint,id,timestamp,if,keyed,state,backend,null,runnable,future,key,groups,state,handle,keyed,snapshot,runnable,keyed,state,backend,snapshot,checkpoint,id,timestamp,stream,factory,if,keyed,snapshot,runnable,is,done,thread,runner,new,thread,keyed,snapshot,runnable,runner,start,out,stream,write,1,object,output,stream,oos,new,object,output,stream,out,stream,oos,write,object,keyed,snapshot,runnable,get,oos,flush,else,out,stream,write,0,return,out,stream,close,and,get,handle
KeyedOneInputStreamOperatorTestHarness -> @Override 	public StreamStateHandle snapshotLegacy(long checkpointId, long timestamp) throws Exception;1477069385;;@Override_	public StreamStateHandle snapshotLegacy(long checkpointId, long timestamp) throws Exception {_		_		MemoryStateBackend backend = new MemoryStateBackend()___		CheckpointStreamFactory streamFactory = backend.createStreamFactory(new JobID(), "test_op")__		CheckpointStreamFactory.CheckpointStateOutputStream outStream =_				streamFactory.createCheckpointStateOutputStream(checkpointId, timestamp)___		if (operator instanceof StreamCheckpointedOperator) {_			((StreamCheckpointedOperator) operator).snapshotState(outStream, checkpointId, timestamp)__		}__		if (keyedStateBackend != null) {_			RunnableFuture<KeyGroupsStateHandle> keyedSnapshotRunnable = keyedStateBackend.snapshot(checkpointId,_					timestamp,_					streamFactory)__			if(!keyedSnapshotRunnable.isDone()) {_				Thread runner = new Thread(keyedSnapshotRunnable)__				runner.start()__			}_			outStream.write(1)__			ObjectOutputStream oos = new ObjectOutputStream(outStream)__			oos.writeObject(keyedSnapshotRunnable.get())__			oos.flush()__		} else {_			outStream.write(0)__		}_		return outStream.closeAndGetHandle()__	};;override,public,stream,state,handle,snapshot,legacy,long,checkpoint,id,long,timestamp,throws,exception,memory,state,backend,backend,new,memory,state,backend,checkpoint,stream,factory,stream,factory,backend,create,stream,factory,new,job,id,checkpoint,stream,factory,checkpoint,state,output,stream,out,stream,stream,factory,create,checkpoint,state,output,stream,checkpoint,id,timestamp,if,operator,instanceof,stream,checkpointed,operator,stream,checkpointed,operator,operator,snapshot,state,out,stream,checkpoint,id,timestamp,if,keyed,state,backend,null,runnable,future,key,groups,state,handle,keyed,snapshot,runnable,keyed,state,backend,snapshot,checkpoint,id,timestamp,stream,factory,if,keyed,snapshot,runnable,is,done,thread,runner,new,thread,keyed,snapshot,runnable,runner,start,out,stream,write,1,object,output,stream,oos,new,object,output,stream,out,stream,oos,write,object,keyed,snapshot,runnable,get,oos,flush,else,out,stream,write,0,return,out,stream,close,and,get,handle
KeyedOneInputStreamOperatorTestHarness -> @Override 	public StreamStateHandle snapshotLegacy(long checkpointId, long timestamp) throws Exception;1477517188;;@Override_	public StreamStateHandle snapshotLegacy(long checkpointId, long timestamp) throws Exception {_		_		MemoryStateBackend backend = new MemoryStateBackend()___		CheckpointStreamFactory streamFactory = backend.createStreamFactory(new JobID(), "test_op")__		CheckpointStreamFactory.CheckpointStateOutputStream outStream =_				streamFactory.createCheckpointStateOutputStream(checkpointId, timestamp)___		if (operator instanceof StreamCheckpointedOperator) {_			((StreamCheckpointedOperator) operator).snapshotState(outStream, checkpointId, timestamp)__		}__		if (keyedStateBackend != null) {_			RunnableFuture<KeyGroupsStateHandle> keyedSnapshotRunnable = keyedStateBackend.snapshot(checkpointId,_					timestamp,_					streamFactory)__			if(!keyedSnapshotRunnable.isDone()) {_				Thread runner = new Thread(keyedSnapshotRunnable)__				runner.start()__			}_			outStream.write(1)__			ObjectOutputStream oos = new ObjectOutputStream(outStream)__			oos.writeObject(keyedSnapshotRunnable.get())__			oos.flush()__		} else {_			outStream.write(0)__		}_		return outStream.closeAndGetHandle()__	};;override,public,stream,state,handle,snapshot,legacy,long,checkpoint,id,long,timestamp,throws,exception,memory,state,backend,backend,new,memory,state,backend,checkpoint,stream,factory,stream,factory,backend,create,stream,factory,new,job,id,checkpoint,stream,factory,checkpoint,state,output,stream,out,stream,stream,factory,create,checkpoint,state,output,stream,checkpoint,id,timestamp,if,operator,instanceof,stream,checkpointed,operator,stream,checkpointed,operator,operator,snapshot,state,out,stream,checkpoint,id,timestamp,if,keyed,state,backend,null,runnable,future,key,groups,state,handle,keyed,snapshot,runnable,keyed,state,backend,snapshot,checkpoint,id,timestamp,stream,factory,if,keyed,snapshot,runnable,is,done,thread,runner,new,thread,keyed,snapshot,runnable,runner,start,out,stream,write,1,object,output,stream,oos,new,object,output,stream,out,stream,oos,write,object,keyed,snapshot,runnable,get,oos,flush,else,out,stream,write,0,return,out,stream,close,and,get,handle
KeyedOneInputStreamOperatorTestHarness -> @Override 	public StreamStateHandle snapshotLegacy(long checkpointId, long timestamp) throws Exception;1477517188;;@Override_	public StreamStateHandle snapshotLegacy(long checkpointId, long timestamp) throws Exception {_		_		MemoryStateBackend backend = new MemoryStateBackend()___		CheckpointStreamFactory streamFactory = backend.createStreamFactory(new JobID(), "test_op")__		CheckpointStreamFactory.CheckpointStateOutputStream outStream =_				streamFactory.createCheckpointStateOutputStream(checkpointId, timestamp)___		if (operator instanceof StreamCheckpointedOperator) {_			((StreamCheckpointedOperator) operator).snapshotState(outStream, checkpointId, timestamp)__		}__		if (keyedStateBackend != null) {_			RunnableFuture<KeyGroupsStateHandle> keyedSnapshotRunnable = keyedStateBackend.snapshot(checkpointId,_					timestamp,_					streamFactory)__			if(!keyedSnapshotRunnable.isDone()) {_				Thread runner = new Thread(keyedSnapshotRunnable)__				runner.start()__			}_			outStream.write(1)__			ObjectOutputStream oos = new ObjectOutputStream(outStream)__			oos.writeObject(keyedSnapshotRunnable.get())__			oos.flush()__		} else {_			outStream.write(0)__		}_		return outStream.closeAndGetHandle()__	};;override,public,stream,state,handle,snapshot,legacy,long,checkpoint,id,long,timestamp,throws,exception,memory,state,backend,backend,new,memory,state,backend,checkpoint,stream,factory,stream,factory,backend,create,stream,factory,new,job,id,checkpoint,stream,factory,checkpoint,state,output,stream,out,stream,stream,factory,create,checkpoint,state,output,stream,checkpoint,id,timestamp,if,operator,instanceof,stream,checkpointed,operator,stream,checkpointed,operator,operator,snapshot,state,out,stream,checkpoint,id,timestamp,if,keyed,state,backend,null,runnable,future,key,groups,state,handle,keyed,snapshot,runnable,keyed,state,backend,snapshot,checkpoint,id,timestamp,stream,factory,if,keyed,snapshot,runnable,is,done,thread,runner,new,thread,keyed,snapshot,runnable,runner,start,out,stream,write,1,object,output,stream,oos,new,object,output,stream,out,stream,oos,write,object,keyed,snapshot,runnable,get,oos,flush,else,out,stream,write,0,return,out,stream,close,and,get,handle
KeyedOneInputStreamOperatorTestHarness -> @Override 	public StreamStateHandle snapshotLegacy(long checkpointId, long timestamp) throws Exception;1477517188;;@Override_	public StreamStateHandle snapshotLegacy(long checkpointId, long timestamp) throws Exception {_		_		MemoryStateBackend backend = new MemoryStateBackend()___		CheckpointStreamFactory streamFactory = backend.createStreamFactory(new JobID(), "test_op")__		CheckpointStreamFactory.CheckpointStateOutputStream outStream =_				streamFactory.createCheckpointStateOutputStream(checkpointId, timestamp)___		if (operator instanceof StreamCheckpointedOperator) {_			((StreamCheckpointedOperator) operator).snapshotState(outStream, checkpointId, timestamp)__		}__		if (keyedStateBackend != null) {_			RunnableFuture<KeyGroupsStateHandle> keyedSnapshotRunnable = keyedStateBackend.snapshot(checkpointId,_					timestamp,_					streamFactory)__			if(!keyedSnapshotRunnable.isDone()) {_				Thread runner = new Thread(keyedSnapshotRunnable)__				runner.start()__			}_			outStream.write(1)__			ObjectOutputStream oos = new ObjectOutputStream(outStream)__			oos.writeObject(keyedSnapshotRunnable.get())__			oos.flush()__		} else {_			outStream.write(0)__		}_		return outStream.closeAndGetHandle()__	};;override,public,stream,state,handle,snapshot,legacy,long,checkpoint,id,long,timestamp,throws,exception,memory,state,backend,backend,new,memory,state,backend,checkpoint,stream,factory,stream,factory,backend,create,stream,factory,new,job,id,checkpoint,stream,factory,checkpoint,state,output,stream,out,stream,stream,factory,create,checkpoint,state,output,stream,checkpoint,id,timestamp,if,operator,instanceof,stream,checkpointed,operator,stream,checkpointed,operator,operator,snapshot,state,out,stream,checkpoint,id,timestamp,if,keyed,state,backend,null,runnable,future,key,groups,state,handle,keyed,snapshot,runnable,keyed,state,backend,snapshot,checkpoint,id,timestamp,stream,factory,if,keyed,snapshot,runnable,is,done,thread,runner,new,thread,keyed,snapshot,runnable,runner,start,out,stream,write,1,object,output,stream,oos,new,object,output,stream,out,stream,oos,write,object,keyed,snapshot,runnable,get,oos,flush,else,out,stream,write,0,return,out,stream,close,and,get,handle
KeyedOneInputStreamOperatorTestHarness -> @Override 	public StreamStateHandle snapshotLegacy(long checkpointId, long timestamp) throws Exception;1482244973;;@Override_	public StreamStateHandle snapshotLegacy(long checkpointId, long timestamp) throws Exception {_		_		MemoryStateBackend backend = new MemoryStateBackend()___		CheckpointStreamFactory streamFactory = backend.createStreamFactory(new JobID(), "test_op")__		CheckpointStreamFactory.CheckpointStateOutputStream outStream =_				streamFactory.createCheckpointStateOutputStream(checkpointId, timestamp)___		if (operator instanceof StreamCheckpointedOperator) {_			((StreamCheckpointedOperator) operator).snapshotState(outStream, checkpointId, timestamp)__		}__		if (keyedStateBackend != null) {_			RunnableFuture<KeyGroupsStateHandle> keyedSnapshotRunnable = keyedStateBackend.snapshot(checkpointId,_					timestamp,_					streamFactory)__			if(!keyedSnapshotRunnable.isDone()) {_				Thread runner = new Thread(keyedSnapshotRunnable)__				runner.start()__			}_			outStream.write(1)__			ObjectOutputStream oos = new ObjectOutputStream(outStream)__			oos.writeObject(keyedSnapshotRunnable.get())__			oos.flush()__		} else {_			outStream.write(0)__		}_		return outStream.closeAndGetHandle()__	};;override,public,stream,state,handle,snapshot,legacy,long,checkpoint,id,long,timestamp,throws,exception,memory,state,backend,backend,new,memory,state,backend,checkpoint,stream,factory,stream,factory,backend,create,stream,factory,new,job,id,checkpoint,stream,factory,checkpoint,state,output,stream,out,stream,stream,factory,create,checkpoint,state,output,stream,checkpoint,id,timestamp,if,operator,instanceof,stream,checkpointed,operator,stream,checkpointed,operator,operator,snapshot,state,out,stream,checkpoint,id,timestamp,if,keyed,state,backend,null,runnable,future,key,groups,state,handle,keyed,snapshot,runnable,keyed,state,backend,snapshot,checkpoint,id,timestamp,stream,factory,if,keyed,snapshot,runnable,is,done,thread,runner,new,thread,keyed,snapshot,runnable,runner,start,out,stream,write,1,object,output,stream,oos,new,object,output,stream,out,stream,oos,write,object,keyed,snapshot,runnable,get,oos,flush,else,out,stream,write,0,return,out,stream,close,and,get,handle
KeyedOneInputStreamOperatorTestHarness -> @Override 	public StreamStateHandle snapshotLegacy(long checkpointId, long timestamp) throws Exception;1484216798;;@Override_	public StreamStateHandle snapshotLegacy(long checkpointId, long timestamp) throws Exception {_		_		MemoryStateBackend backend = new MemoryStateBackend()___		CheckpointStreamFactory streamFactory = backend.createStreamFactory(new JobID(), "test_op")__		CheckpointStreamFactory.CheckpointStateOutputStream outStream =_				streamFactory.createCheckpointStateOutputStream(checkpointId, timestamp)___		if (operator instanceof StreamCheckpointedOperator) {_			((StreamCheckpointedOperator) operator).snapshotState(outStream, checkpointId, timestamp)__		}__		if (keyedStateBackend != null) {_			RunnableFuture<KeyGroupsStateHandle> keyedSnapshotRunnable = keyedStateBackend.snapshot(checkpointId,_					timestamp,_					streamFactory)__			if(!keyedSnapshotRunnable.isDone()) {_				Thread runner = new Thread(keyedSnapshotRunnable)__				runner.start()__			}_			outStream.write(1)__			ObjectOutputStream oos = new ObjectOutputStream(outStream)__			oos.writeObject(keyedSnapshotRunnable.get())__			oos.flush()__		} else {_			outStream.write(0)__		}_		return outStream.closeAndGetHandle()__	};;override,public,stream,state,handle,snapshot,legacy,long,checkpoint,id,long,timestamp,throws,exception,memory,state,backend,backend,new,memory,state,backend,checkpoint,stream,factory,stream,factory,backend,create,stream,factory,new,job,id,checkpoint,stream,factory,checkpoint,state,output,stream,out,stream,stream,factory,create,checkpoint,state,output,stream,checkpoint,id,timestamp,if,operator,instanceof,stream,checkpointed,operator,stream,checkpointed,operator,operator,snapshot,state,out,stream,checkpoint,id,timestamp,if,keyed,state,backend,null,runnable,future,key,groups,state,handle,keyed,snapshot,runnable,keyed,state,backend,snapshot,checkpoint,id,timestamp,stream,factory,if,keyed,snapshot,runnable,is,done,thread,runner,new,thread,keyed,snapshot,runnable,runner,start,out,stream,write,1,object,output,stream,oos,new,object,output,stream,out,stream,oos,write,object,keyed,snapshot,runnable,get,oos,flush,else,out,stream,write,0,return,out,stream,close,and,get,handle
KeyedOneInputStreamOperatorTestHarness -> @Override 	public StreamStateHandle snapshotLegacy(long checkpointId, long timestamp) throws Exception;1485250954;;@Override_	public StreamStateHandle snapshotLegacy(long checkpointId, long timestamp) throws Exception {_		_		MemoryStateBackend backend = new MemoryStateBackend()___		CheckpointStreamFactory streamFactory = backend.createStreamFactory(new JobID(), "test_op")__		CheckpointStreamFactory.CheckpointStateOutputStream outStream =_				streamFactory.createCheckpointStateOutputStream(checkpointId, timestamp)___		if (operator instanceof StreamCheckpointedOperator) {_			((StreamCheckpointedOperator) operator).snapshotState(outStream, checkpointId, timestamp)__		}__		if (keyedStateBackend != null) {_			RunnableFuture<KeyGroupsStateHandle> keyedSnapshotRunnable = keyedStateBackend.snapshot(checkpointId,_					timestamp,_					streamFactory)__			if(!keyedSnapshotRunnable.isDone()) {_				Thread runner = new Thread(keyedSnapshotRunnable)__				runner.start()__			}_			outStream.write(1)__			ObjectOutputStream oos = new ObjectOutputStream(outStream)__			oos.writeObject(keyedSnapshotRunnable.get())__			oos.flush()__		} else {_			outStream.write(0)__		}_		return outStream.closeAndGetHandle()__	};;override,public,stream,state,handle,snapshot,legacy,long,checkpoint,id,long,timestamp,throws,exception,memory,state,backend,backend,new,memory,state,backend,checkpoint,stream,factory,stream,factory,backend,create,stream,factory,new,job,id,checkpoint,stream,factory,checkpoint,state,output,stream,out,stream,stream,factory,create,checkpoint,state,output,stream,checkpoint,id,timestamp,if,operator,instanceof,stream,checkpointed,operator,stream,checkpointed,operator,operator,snapshot,state,out,stream,checkpoint,id,timestamp,if,keyed,state,backend,null,runnable,future,key,groups,state,handle,keyed,snapshot,runnable,keyed,state,backend,snapshot,checkpoint,id,timestamp,stream,factory,if,keyed,snapshot,runnable,is,done,thread,runner,new,thread,keyed,snapshot,runnable,runner,start,out,stream,write,1,object,output,stream,oos,new,object,output,stream,out,stream,oos,write,object,keyed,snapshot,runnable,get,oos,flush,else,out,stream,write,0,return,out,stream,close,and,get,handle
KeyedOneInputStreamOperatorTestHarness -> @Override 	public StreamStateHandle snapshotLegacy(long checkpointId, long timestamp) throws Exception;1487871589;;@Override_	public StreamStateHandle snapshotLegacy(long checkpointId, long timestamp) throws Exception {_		_		MemoryStateBackend backend = new MemoryStateBackend()___		CheckpointStreamFactory streamFactory = backend.createStreamFactory(new JobID(), "test_op")__		CheckpointStreamFactory.CheckpointStateOutputStream outStream =_				streamFactory.createCheckpointStateOutputStream(checkpointId, timestamp)___		if (operator instanceof StreamCheckpointedOperator) {_			((StreamCheckpointedOperator) operator).snapshotState(outStream, checkpointId, timestamp)__		}__		if (keyedStateBackend != null) {_			RunnableFuture<KeyGroupsStateHandle> keyedSnapshotRunnable = keyedStateBackend.snapshot(_					checkpointId,_					timestamp,_					streamFactory,_					CheckpointOptions.forFullCheckpoint())__			if(!keyedSnapshotRunnable.isDone()) {_				Thread runner = new Thread(keyedSnapshotRunnable)__				runner.start()__			}_			outStream.write(1)__			ObjectOutputStream oos = new ObjectOutputStream(outStream)__			oos.writeObject(keyedSnapshotRunnable.get())__			oos.flush()__		} else {_			outStream.write(0)__		}_		return outStream.closeAndGetHandle()__	};;override,public,stream,state,handle,snapshot,legacy,long,checkpoint,id,long,timestamp,throws,exception,memory,state,backend,backend,new,memory,state,backend,checkpoint,stream,factory,stream,factory,backend,create,stream,factory,new,job,id,checkpoint,stream,factory,checkpoint,state,output,stream,out,stream,stream,factory,create,checkpoint,state,output,stream,checkpoint,id,timestamp,if,operator,instanceof,stream,checkpointed,operator,stream,checkpointed,operator,operator,snapshot,state,out,stream,checkpoint,id,timestamp,if,keyed,state,backend,null,runnable,future,key,groups,state,handle,keyed,snapshot,runnable,keyed,state,backend,snapshot,checkpoint,id,timestamp,stream,factory,checkpoint,options,for,full,checkpoint,if,keyed,snapshot,runnable,is,done,thread,runner,new,thread,keyed,snapshot,runnable,runner,start,out,stream,write,1,object,output,stream,oos,new,object,output,stream,out,stream,oos,write,object,keyed,snapshot,runnable,get,oos,flush,else,out,stream,write,0,return,out,stream,close,and,get,handle
KeyedOneInputStreamOperatorTestHarness -> @Override 	public StreamStateHandle snapshotLegacy(long checkpointId, long timestamp) throws Exception;1489149057;;@Override_	public StreamStateHandle snapshotLegacy(long checkpointId, long timestamp) throws Exception {_		_		MemoryStateBackend backend = new MemoryStateBackend()___		CheckpointStreamFactory streamFactory = backend.createStreamFactory(new JobID(), "test_op")__		CheckpointStreamFactory.CheckpointStateOutputStream outStream =_				streamFactory.createCheckpointStateOutputStream(checkpointId, timestamp)___		if (operator instanceof StreamCheckpointedOperator) {_			((StreamCheckpointedOperator) operator).snapshotState(outStream, checkpointId, timestamp)__		}__		if (keyedStateBackend != null) {_			RunnableFuture<KeyGroupsStateHandle> keyedSnapshotRunnable = keyedStateBackend.snapshot(_					checkpointId,_					timestamp,_					streamFactory,_					CheckpointOptions.forFullCheckpoint())__			if(!keyedSnapshotRunnable.isDone()) {_				Thread runner = new Thread(keyedSnapshotRunnable)__				runner.start()__			}_			outStream.write(1)__			ObjectOutputStream oos = new ObjectOutputStream(outStream)__			oos.writeObject(keyedSnapshotRunnable.get())__			oos.flush()__		} else {_			outStream.write(0)__		}_		return outStream.closeAndGetHandle()__	};;override,public,stream,state,handle,snapshot,legacy,long,checkpoint,id,long,timestamp,throws,exception,memory,state,backend,backend,new,memory,state,backend,checkpoint,stream,factory,stream,factory,backend,create,stream,factory,new,job,id,checkpoint,stream,factory,checkpoint,state,output,stream,out,stream,stream,factory,create,checkpoint,state,output,stream,checkpoint,id,timestamp,if,operator,instanceof,stream,checkpointed,operator,stream,checkpointed,operator,operator,snapshot,state,out,stream,checkpoint,id,timestamp,if,keyed,state,backend,null,runnable,future,key,groups,state,handle,keyed,snapshot,runnable,keyed,state,backend,snapshot,checkpoint,id,timestamp,stream,factory,checkpoint,options,for,full,checkpoint,if,keyed,snapshot,runnable,is,done,thread,runner,new,thread,keyed,snapshot,runnable,runner,start,out,stream,write,1,object,output,stream,oos,new,object,output,stream,out,stream,oos,write,object,keyed,snapshot,runnable,get,oos,flush,else,out,stream,write,0,return,out,stream,close,and,get,handle
KeyedOneInputStreamOperatorTestHarness -> @Override 	public StreamStateHandle snapshotLegacy(long checkpointId, long timestamp) throws Exception;1490724328;;@Override_	public StreamStateHandle snapshotLegacy(long checkpointId, long timestamp) throws Exception {_		_		MemoryStateBackend backend = new MemoryStateBackend()___		CheckpointStreamFactory streamFactory = backend.createStreamFactory(new JobID(), "test_op")__		CheckpointStreamFactory.CheckpointStateOutputStream outStream =_				streamFactory.createCheckpointStateOutputStream(checkpointId, timestamp)___		if (operator instanceof StreamCheckpointedOperator) {_			((StreamCheckpointedOperator) operator).snapshotState(outStream, checkpointId, timestamp)__		}__		if (keyedStateBackend != null) {_			RunnableFuture<KeyedStateHandle> keyedSnapshotRunnable = keyedStateBackend.snapshot(_					checkpointId,_					timestamp,_					streamFactory,_					CheckpointOptions.forFullCheckpoint())__			if(!keyedSnapshotRunnable.isDone()) {_				Thread runner = new Thread(keyedSnapshotRunnable)__				runner.start()__			}_			outStream.write(1)__			ObjectOutputStream oos = new ObjectOutputStream(outStream)__			oos.writeObject(keyedSnapshotRunnable.get())__			oos.flush()__		} else {_			outStream.write(0)__		}_		return outStream.closeAndGetHandle()__	};;override,public,stream,state,handle,snapshot,legacy,long,checkpoint,id,long,timestamp,throws,exception,memory,state,backend,backend,new,memory,state,backend,checkpoint,stream,factory,stream,factory,backend,create,stream,factory,new,job,id,checkpoint,stream,factory,checkpoint,state,output,stream,out,stream,stream,factory,create,checkpoint,state,output,stream,checkpoint,id,timestamp,if,operator,instanceof,stream,checkpointed,operator,stream,checkpointed,operator,operator,snapshot,state,out,stream,checkpoint,id,timestamp,if,keyed,state,backend,null,runnable,future,keyed,state,handle,keyed,snapshot,runnable,keyed,state,backend,snapshot,checkpoint,id,timestamp,stream,factory,checkpoint,options,for,full,checkpoint,if,keyed,snapshot,runnable,is,done,thread,runner,new,thread,keyed,snapshot,runnable,runner,start,out,stream,write,1,object,output,stream,oos,new,object,output,stream,out,stream,oos,write,object,keyed,snapshot,runnable,get,oos,flush,else,out,stream,write,0,return,out,stream,close,and,get,handle
KeyedOneInputStreamOperatorTestHarness -> @Override 	public StreamStateHandle snapshotLegacy(long checkpointId, long timestamp) throws Exception;1493994606;;@Override_	public StreamStateHandle snapshotLegacy(long checkpointId, long timestamp) throws Exception {_		_		MemoryStateBackend backend = new MemoryStateBackend()___		CheckpointStreamFactory streamFactory = backend.createStreamFactory(new JobID(), "test_op")__		CheckpointStreamFactory.CheckpointStateOutputStream outStream =_				streamFactory.createCheckpointStateOutputStream(checkpointId, timestamp)___		if (operator instanceof StreamCheckpointedOperator) {_			((StreamCheckpointedOperator) operator).snapshotState(outStream, checkpointId, timestamp)__		}__		if (keyedStateBackend != null) {_			RunnableFuture<KeyedStateHandle> keyedSnapshotRunnable = keyedStateBackend.snapshot(_					checkpointId,_					timestamp,_					streamFactory,_					CheckpointOptions.forFullCheckpoint())__			if(!keyedSnapshotRunnable.isDone()) {_				Thread runner = new Thread(keyedSnapshotRunnable)__				runner.start()__			}_			outStream.write(1)__			ObjectOutputStream oos = new ObjectOutputStream(outStream)__			oos.writeObject(keyedSnapshotRunnable.get())__			oos.flush()__		} else {_			outStream.write(0)__		}_		return outStream.closeAndGetHandle()__	};;override,public,stream,state,handle,snapshot,legacy,long,checkpoint,id,long,timestamp,throws,exception,memory,state,backend,backend,new,memory,state,backend,checkpoint,stream,factory,stream,factory,backend,create,stream,factory,new,job,id,checkpoint,stream,factory,checkpoint,state,output,stream,out,stream,stream,factory,create,checkpoint,state,output,stream,checkpoint,id,timestamp,if,operator,instanceof,stream,checkpointed,operator,stream,checkpointed,operator,operator,snapshot,state,out,stream,checkpoint,id,timestamp,if,keyed,state,backend,null,runnable,future,keyed,state,handle,keyed,snapshot,runnable,keyed,state,backend,snapshot,checkpoint,id,timestamp,stream,factory,checkpoint,options,for,full,checkpoint,if,keyed,snapshot,runnable,is,done,thread,runner,new,thread,keyed,snapshot,runnable,runner,start,out,stream,write,1,object,output,stream,oos,new,object,output,stream,out,stream,oos,write,object,keyed,snapshot,runnable,get,oos,flush,else,out,stream,write,0,return,out,stream,close,and,get,handle
KeyedOneInputStreamOperatorTestHarness -> @Override 	public StreamStateHandle snapshotLegacy(long checkpointId, long timestamp) throws Exception;1495484544;;@Override_	public StreamStateHandle snapshotLegacy(long checkpointId, long timestamp) throws Exception {_		_		MemoryStateBackend backend = new MemoryStateBackend()___		CheckpointStreamFactory streamFactory = backend.createStreamFactory(new JobID(), "test_op")__		CheckpointStreamFactory.CheckpointStateOutputStream outStream =_				streamFactory.createCheckpointStateOutputStream(checkpointId, timestamp)___		if (operator instanceof StreamCheckpointedOperator) {_			((StreamCheckpointedOperator) operator).snapshotState(outStream, checkpointId, timestamp)__		}__		if (keyedStateBackend != null) {_			RunnableFuture<KeyedStateHandle> keyedSnapshotRunnable = keyedStateBackend.snapshot(_					checkpointId,_					timestamp,_					streamFactory,_					CheckpointOptions.forFullCheckpoint())__			if (!keyedSnapshotRunnable.isDone()) {_				Thread runner = new Thread(keyedSnapshotRunnable)__				runner.start()__			}_			outStream.write(1)__			ObjectOutputStream oos = new ObjectOutputStream(outStream)__			oos.writeObject(keyedSnapshotRunnable.get())__			oos.flush()__		} else {_			outStream.write(0)__		}_		return outStream.closeAndGetHandle()__	};;override,public,stream,state,handle,snapshot,legacy,long,checkpoint,id,long,timestamp,throws,exception,memory,state,backend,backend,new,memory,state,backend,checkpoint,stream,factory,stream,factory,backend,create,stream,factory,new,job,id,checkpoint,stream,factory,checkpoint,state,output,stream,out,stream,stream,factory,create,checkpoint,state,output,stream,checkpoint,id,timestamp,if,operator,instanceof,stream,checkpointed,operator,stream,checkpointed,operator,operator,snapshot,state,out,stream,checkpoint,id,timestamp,if,keyed,state,backend,null,runnable,future,keyed,state,handle,keyed,snapshot,runnable,keyed,state,backend,snapshot,checkpoint,id,timestamp,stream,factory,checkpoint,options,for,full,checkpoint,if,keyed,snapshot,runnable,is,done,thread,runner,new,thread,keyed,snapshot,runnable,runner,start,out,stream,write,1,object,output,stream,oos,new,object,output,stream,out,stream,oos,write,object,keyed,snapshot,runnable,get,oos,flush,else,out,stream,write,0,return,out,stream,close,and,get,handle
KeyedOneInputStreamOperatorTestHarness -> @Override 	public StreamStateHandle snapshotLegacy(long checkpointId, long timestamp) throws Exception;1497328696;;@Override_	public StreamStateHandle snapshotLegacy(long checkpointId, long timestamp) throws Exception {_		_		MemoryStateBackend backend = new MemoryStateBackend()___		CheckpointStreamFactory streamFactory = backend.createStreamFactory(new JobID(), "test_op")__		CheckpointStreamFactory.CheckpointStateOutputStream outStream =_				streamFactory.createCheckpointStateOutputStream(checkpointId, timestamp)___		if (operator instanceof StreamCheckpointedOperator) {_			((StreamCheckpointedOperator) operator).snapshotState(outStream, checkpointId, timestamp)__		}__		if (keyedStateBackend != null) {_			RunnableFuture<KeyedStateHandle> keyedSnapshotRunnable = keyedStateBackend.snapshot(_					checkpointId,_					timestamp,_					streamFactory,_					CheckpointOptions.forFullCheckpoint())__			if (!keyedSnapshotRunnable.isDone()) {_				Thread runner = new Thread(keyedSnapshotRunnable)__				runner.start()__			}_			outStream.write(1)__			ObjectOutputStream oos = new ObjectOutputStream(outStream)__			oos.writeObject(keyedSnapshotRunnable.get())__			oos.flush()__		} else {_			outStream.write(0)__		}_		return outStream.closeAndGetHandle()__	};;override,public,stream,state,handle,snapshot,legacy,long,checkpoint,id,long,timestamp,throws,exception,memory,state,backend,backend,new,memory,state,backend,checkpoint,stream,factory,stream,factory,backend,create,stream,factory,new,job,id,checkpoint,stream,factory,checkpoint,state,output,stream,out,stream,stream,factory,create,checkpoint,state,output,stream,checkpoint,id,timestamp,if,operator,instanceof,stream,checkpointed,operator,stream,checkpointed,operator,operator,snapshot,state,out,stream,checkpoint,id,timestamp,if,keyed,state,backend,null,runnable,future,keyed,state,handle,keyed,snapshot,runnable,keyed,state,backend,snapshot,checkpoint,id,timestamp,stream,factory,checkpoint,options,for,full,checkpoint,if,keyed,snapshot,runnable,is,done,thread,runner,new,thread,keyed,snapshot,runnable,runner,start,out,stream,write,1,object,output,stream,oos,new,object,output,stream,out,stream,oos,write,object,keyed,snapshot,runnable,get,oos,flush,else,out,stream,write,0,return,out,stream,close,and,get,handle
KeyedOneInputStreamOperatorTestHarness -> @Override 	public StreamStateHandle snapshot(long checkpointId, long timestamp) throws Exception;1472663401;Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#snapshotState(org.apache.flink.core.fs.FSDataOutputStream, long, long)} ()};@Override_	public StreamStateHandle snapshot(long checkpointId, long timestamp) throws Exception {_		_		MemoryStateBackend backend = new MemoryStateBackend()___		CheckpointStreamFactory streamFactory = backend.createStreamFactory(new JobID(), "test_op")__		CheckpointStreamFactory.CheckpointStateOutputStream outStream =_				streamFactory.createCheckpointStateOutputStream(checkpointId, timestamp)___		operator.snapshotState(outStream, checkpointId, timestamp)___		if (keyedStateBackend != null) {_			RunnableFuture<KeyGroupsStateHandle> keyedSnapshotRunnable = keyedStateBackend.snapshot(checkpointId,_					timestamp,_					streamFactory)__			if(!keyedSnapshotRunnable.isDone()) {_				Thread runner = new Thread(keyedSnapshotRunnable)__				runner.start()__			}_			outStream.write(1)__			ObjectOutputStream oos = new ObjectOutputStream(outStream)__			oos.writeObject(keyedSnapshotRunnable.get())__			oos.flush()__		} else {_			outStream.write(0)__		}_		return outStream.closeAndGetHandle()__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,snapshot,state,org,apache,flink,core,fs,fsdata,output,stream,long,long;override,public,stream,state,handle,snapshot,long,checkpoint,id,long,timestamp,throws,exception,memory,state,backend,backend,new,memory,state,backend,checkpoint,stream,factory,stream,factory,backend,create,stream,factory,new,job,id,checkpoint,stream,factory,checkpoint,state,output,stream,out,stream,stream,factory,create,checkpoint,state,output,stream,checkpoint,id,timestamp,operator,snapshot,state,out,stream,checkpoint,id,timestamp,if,keyed,state,backend,null,runnable,future,key,groups,state,handle,keyed,snapshot,runnable,keyed,state,backend,snapshot,checkpoint,id,timestamp,stream,factory,if,keyed,snapshot,runnable,is,done,thread,runner,new,thread,keyed,snapshot,runnable,runner,start,out,stream,write,1,object,output,stream,oos,new,object,output,stream,out,stream,oos,write,object,keyed,snapshot,runnable,get,oos,flush,else,out,stream,write,0,return,out,stream,close,and,get,handle
KeyedOneInputStreamOperatorTestHarness -> @Override 	public StreamStateHandle snapshot(long checkpointId, long timestamp) throws Exception;1472663401;Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#snapshotState(org.apache.flink.core.fs.FSDataOutputStream, long, long)} ()};@Override_	public StreamStateHandle snapshot(long checkpointId, long timestamp) throws Exception {_		_		MemoryStateBackend backend = new MemoryStateBackend()___		CheckpointStreamFactory streamFactory = backend.createStreamFactory(new JobID(), "test_op")__		CheckpointStreamFactory.CheckpointStateOutputStream outStream =_				streamFactory.createCheckpointStateOutputStream(checkpointId, timestamp)___		operator.snapshotState(outStream, checkpointId, timestamp)___		if (keyedStateBackend != null) {_			RunnableFuture<KeyGroupsStateHandle> keyedSnapshotRunnable = keyedStateBackend.snapshot(checkpointId,_					timestamp,_					streamFactory)__			if(!keyedSnapshotRunnable.isDone()) {_				Thread runner = new Thread(keyedSnapshotRunnable)__				runner.start()__			}_			outStream.write(1)__			ObjectOutputStream oos = new ObjectOutputStream(outStream)__			oos.writeObject(keyedSnapshotRunnable.get())__			oos.flush()__		} else {_			outStream.write(0)__		}_		return outStream.closeAndGetHandle()__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,snapshot,state,org,apache,flink,core,fs,fsdata,output,stream,long,long;override,public,stream,state,handle,snapshot,long,checkpoint,id,long,timestamp,throws,exception,memory,state,backend,backend,new,memory,state,backend,checkpoint,stream,factory,stream,factory,backend,create,stream,factory,new,job,id,checkpoint,stream,factory,checkpoint,state,output,stream,out,stream,stream,factory,create,checkpoint,state,output,stream,checkpoint,id,timestamp,operator,snapshot,state,out,stream,checkpoint,id,timestamp,if,keyed,state,backend,null,runnable,future,key,groups,state,handle,keyed,snapshot,runnable,keyed,state,backend,snapshot,checkpoint,id,timestamp,stream,factory,if,keyed,snapshot,runnable,is,done,thread,runner,new,thread,keyed,snapshot,runnable,runner,start,out,stream,write,1,object,output,stream,oos,new,object,output,stream,out,stream,oos,write,object,keyed,snapshot,runnable,get,oos,flush,else,out,stream,write,0,return,out,stream,close,and,get,handle
KeyedOneInputStreamOperatorTestHarness -> @Override 	public StreamStateHandle snapshot(long checkpointId, long timestamp) throws Exception;1472663402;Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#snapshotState(org.apache.flink.core.fs.FSDataOutputStream, long, long)} ()};@Override_	public StreamStateHandle snapshot(long checkpointId, long timestamp) throws Exception {_		_		MemoryStateBackend backend = new MemoryStateBackend()___		CheckpointStreamFactory streamFactory = backend.createStreamFactory(new JobID(), "test_op")__		CheckpointStreamFactory.CheckpointStateOutputStream outStream =_				streamFactory.createCheckpointStateOutputStream(checkpointId, timestamp)___		operator.snapshotState(outStream, checkpointId, timestamp)___		if (keyedStateBackend != null) {_			RunnableFuture<KeyGroupsStateHandle> keyedSnapshotRunnable = keyedStateBackend.snapshot(checkpointId,_					timestamp,_					streamFactory)__			if(!keyedSnapshotRunnable.isDone()) {_				Thread runner = new Thread(keyedSnapshotRunnable)__				runner.start()__			}_			outStream.write(1)__			ObjectOutputStream oos = new ObjectOutputStream(outStream)__			oos.writeObject(keyedSnapshotRunnable.get())__			oos.flush()__		} else {_			outStream.write(0)__		}_		return outStream.closeAndGetHandle()__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,snapshot,state,org,apache,flink,core,fs,fsdata,output,stream,long,long;override,public,stream,state,handle,snapshot,long,checkpoint,id,long,timestamp,throws,exception,memory,state,backend,backend,new,memory,state,backend,checkpoint,stream,factory,stream,factory,backend,create,stream,factory,new,job,id,checkpoint,stream,factory,checkpoint,state,output,stream,out,stream,stream,factory,create,checkpoint,state,output,stream,checkpoint,id,timestamp,operator,snapshot,state,out,stream,checkpoint,id,timestamp,if,keyed,state,backend,null,runnable,future,key,groups,state,handle,keyed,snapshot,runnable,keyed,state,backend,snapshot,checkpoint,id,timestamp,stream,factory,if,keyed,snapshot,runnable,is,done,thread,runner,new,thread,keyed,snapshot,runnable,runner,start,out,stream,write,1,object,output,stream,oos,new,object,output,stream,out,stream,oos,write,object,keyed,snapshot,runnable,get,oos,flush,else,out,stream,write,0,return,out,stream,close,and,get,handle
KeyedOneInputStreamOperatorTestHarness -> @Override 	public StreamStateHandle snapshot(long checkpointId, long timestamp) throws Exception;1474635666;Calls {@link org.apache.flink.streaming.api.operators.StreamOperator#snapshotState(org.apache.flink.core.fs.FSDataOutputStream, long, long)} ()};@Override_	public StreamStateHandle snapshot(long checkpointId, long timestamp) throws Exception {_		_		MemoryStateBackend backend = new MemoryStateBackend()___		CheckpointStreamFactory streamFactory = backend.createStreamFactory(new JobID(), "test_op")__		CheckpointStreamFactory.CheckpointStateOutputStream outStream =_				streamFactory.createCheckpointStateOutputStream(checkpointId, timestamp)___		operator.snapshotState(outStream, checkpointId, timestamp)___		if (keyedStateBackend != null) {_			RunnableFuture<KeyGroupsStateHandle> keyedSnapshotRunnable = keyedStateBackend.snapshot(checkpointId,_					timestamp,_					streamFactory)__			if(!keyedSnapshotRunnable.isDone()) {_				Thread runner = new Thread(keyedSnapshotRunnable)__				runner.start()__			}_			outStream.write(1)__			ObjectOutputStream oos = new ObjectOutputStream(outStream)__			oos.writeObject(keyedSnapshotRunnable.get())__			oos.flush()__		} else {_			outStream.write(0)__		}_		return outStream.closeAndGetHandle()__	};calls,link,org,apache,flink,streaming,api,operators,stream,operator,snapshot,state,org,apache,flink,core,fs,fsdata,output,stream,long,long;override,public,stream,state,handle,snapshot,long,checkpoint,id,long,timestamp,throws,exception,memory,state,backend,backend,new,memory,state,backend,checkpoint,stream,factory,stream,factory,backend,create,stream,factory,new,job,id,checkpoint,stream,factory,checkpoint,state,output,stream,out,stream,stream,factory,create,checkpoint,state,output,stream,checkpoint,id,timestamp,operator,snapshot,state,out,stream,checkpoint,id,timestamp,if,keyed,state,backend,null,runnable,future,key,groups,state,handle,keyed,snapshot,runnable,keyed,state,backend,snapshot,checkpoint,id,timestamp,stream,factory,if,keyed,snapshot,runnable,is,done,thread,runner,new,thread,keyed,snapshot,runnable,runner,start,out,stream,write,1,object,output,stream,oos,new,object,output,stream,out,stream,oos,write,object,keyed,snapshot,runnable,get,oos,flush,else,out,stream,write,0,return,out,stream,close,and,get,handle
KeyedOneInputStreamOperatorTestHarness -> @Override 	public StreamStateHandle snapshot(long checkpointId, long timestamp) throws Exception;1475231926;;@Override_	public StreamStateHandle snapshot(long checkpointId, long timestamp) throws Exception {_		_		MemoryStateBackend backend = new MemoryStateBackend()___		CheckpointStreamFactory streamFactory = backend.createStreamFactory(new JobID(), "test_op")__		CheckpointStreamFactory.CheckpointStateOutputStream outStream =_				streamFactory.createCheckpointStateOutputStream(checkpointId, timestamp)___		if (operator instanceof StreamCheckpointedOperator) {_			((StreamCheckpointedOperator) operator).snapshotState(outStream, checkpointId, timestamp)__		}__		if (keyedStateBackend != null) {_			RunnableFuture<KeyGroupsStateHandle> keyedSnapshotRunnable = keyedStateBackend.snapshot(checkpointId,_					timestamp,_					streamFactory)__			if(!keyedSnapshotRunnable.isDone()) {_				Thread runner = new Thread(keyedSnapshotRunnable)__				runner.start()__			}_			outStream.write(1)__			ObjectOutputStream oos = new ObjectOutputStream(outStream)__			oos.writeObject(keyedSnapshotRunnable.get())__			oos.flush()__		} else {_			outStream.write(0)__		}_		return outStream.closeAndGetHandle()__	};;override,public,stream,state,handle,snapshot,long,checkpoint,id,long,timestamp,throws,exception,memory,state,backend,backend,new,memory,state,backend,checkpoint,stream,factory,stream,factory,backend,create,stream,factory,new,job,id,checkpoint,stream,factory,checkpoint,state,output,stream,out,stream,stream,factory,create,checkpoint,state,output,stream,checkpoint,id,timestamp,if,operator,instanceof,stream,checkpointed,operator,stream,checkpointed,operator,operator,snapshot,state,out,stream,checkpoint,id,timestamp,if,keyed,state,backend,null,runnable,future,key,groups,state,handle,keyed,snapshot,runnable,keyed,state,backend,snapshot,checkpoint,id,timestamp,stream,factory,if,keyed,snapshot,runnable,is,done,thread,runner,new,thread,keyed,snapshot,runnable,runner,start,out,stream,write,1,object,output,stream,oos,new,object,output,stream,out,stream,oos,write,object,keyed,snapshot,runnable,get,oos,flush,else,out,stream,write,0,return,out,stream,close,and,get,handle
KeyedOneInputStreamOperatorTestHarness -> @Override 	public StreamStateHandle snapshot(long checkpointId, long timestamp) throws Exception;1475688973;;@Override_	public StreamStateHandle snapshot(long checkpointId, long timestamp) throws Exception {_		_		MemoryStateBackend backend = new MemoryStateBackend()___		CheckpointStreamFactory streamFactory = backend.createStreamFactory(new JobID(), "test_op")__		CheckpointStreamFactory.CheckpointStateOutputStream outStream =_				streamFactory.createCheckpointStateOutputStream(checkpointId, timestamp)___		if (operator instanceof StreamCheckpointedOperator) {_			((StreamCheckpointedOperator) operator).snapshotState(outStream, checkpointId, timestamp)__		}__		if (keyedStateBackend != null) {_			RunnableFuture<KeyGroupsStateHandle> keyedSnapshotRunnable = keyedStateBackend.snapshot(checkpointId,_					timestamp,_					streamFactory)__			if(!keyedSnapshotRunnable.isDone()) {_				Thread runner = new Thread(keyedSnapshotRunnable)__				runner.start()__			}_			outStream.write(1)__			ObjectOutputStream oos = new ObjectOutputStream(outStream)__			oos.writeObject(keyedSnapshotRunnable.get())__			oos.flush()__		} else {_			outStream.write(0)__		}_		return outStream.closeAndGetHandle()__	};;override,public,stream,state,handle,snapshot,long,checkpoint,id,long,timestamp,throws,exception,memory,state,backend,backend,new,memory,state,backend,checkpoint,stream,factory,stream,factory,backend,create,stream,factory,new,job,id,checkpoint,stream,factory,checkpoint,state,output,stream,out,stream,stream,factory,create,checkpoint,state,output,stream,checkpoint,id,timestamp,if,operator,instanceof,stream,checkpointed,operator,stream,checkpointed,operator,operator,snapshot,state,out,stream,checkpoint,id,timestamp,if,keyed,state,backend,null,runnable,future,key,groups,state,handle,keyed,snapshot,runnable,keyed,state,backend,snapshot,checkpoint,id,timestamp,stream,factory,if,keyed,snapshot,runnable,is,done,thread,runner,new,thread,keyed,snapshot,runnable,runner,start,out,stream,write,1,object,output,stream,oos,new,object,output,stream,out,stream,oos,write,object,keyed,snapshot,runnable,get,oos,flush,else,out,stream,write,0,return,out,stream,close,and,get,handle
