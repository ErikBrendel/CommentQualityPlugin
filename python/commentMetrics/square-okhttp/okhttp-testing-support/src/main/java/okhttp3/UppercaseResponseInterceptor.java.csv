commented;modifiers;parameterAmount;loc;comment;code
false;public;1;3;;@Override public Response intercept(Chain chain) throws IOException {     return uppercaseResponse(chain.proceed(chain.request())). }
false;public;0;3;;@Override public BufferedSource source() {     return Okio.buffer(uppercaseSource(delegate().source())). }
false;private;1;10;;private Response uppercaseResponse(Response response) {     ResponseBody uppercaseBody = new ForwardingResponseBody(response.body()) {          @Override         public BufferedSource source() {             return Okio.buffer(uppercaseSource(delegate().source())).         }     }.     return response.newBuilder().body(uppercaseBody).build(). }
false;public;2;6;;@Override public long read(Buffer sink, long byteCount) throws IOException {     Buffer buffer = new Buffer().     long read = delegate().read(buffer, byteCount).     if (read != -1L)         sink.write(buffer.readByteString().toAsciiUppercase()).     return read. }
false;private;1;10;;private ForwardingSource uppercaseSource(BufferedSource source) {     return new ForwardingSource(source) {          @Override         public long read(Buffer sink, long byteCount) throws IOException {             Buffer buffer = new Buffer().             long read = delegate().read(buffer, byteCount).             if (read != -1L)                 sink.write(buffer.readByteString().toAsciiUppercase()).             return read.         }     }. }
