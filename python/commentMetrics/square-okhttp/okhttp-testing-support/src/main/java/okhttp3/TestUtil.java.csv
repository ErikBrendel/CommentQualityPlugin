commented;modifiers;parameterAmount;loc;comment;code
true;public,static;0;7;/**  * Returns an OkHttpClient for all tests to use as a starting point.  *  * <p>The shared instance allows all tests to share a single connection pool, which prevents idle  * connections from consuming unnecessary resources while connections wait to be evicted.  *  * <p>This client is also configured to be slightly more deterministic, returning a single IP  * address for all hosts, regardless of the actual number of IP addresses reported by DNS.  */ ;/**  * Returns an OkHttpClient for all tests to use as a starting point.  *  * <p>The shared instance allows all tests to share a single connection pool, which prevents idle  * connections from consuming unnecessary resources while connections wait to be evicted.  *  * <p>This client is also configured to be slightly more deterministic, returning a single IP  * address for all hosts, regardless of the actual number of IP addresses reported by DNS.  */ public static OkHttpClient defaultClient() {     return new OkHttpClient.Builder().connectionPool(connectionPool).dispatcher(dispatcher).dns(// Prevent unexpected fallback addresses.     SINGLE_INET_ADDRESS_DNS).build(). }
false;public,static;1;7;;public static List<Header> headerEntries(String... elements) {     List<Header> result = new ArrayList<>(elements.length / 2).     for (int i = 0. i < elements.length. i += 2) {         result.add(new Header(elements[i], elements[i + 1])).     }     return result. }
false;public,static;2;5;;public static String repeat(char c, int count) {     char[] array = new char[count].     Arrays.fill(array, c).     return new String(array). }
true;public,static;0;5;/**  * See FinalizationTester for discussion on how to best trigger GC in tests.  * https://android.googlesource.com/platform/libcore/+/master/support/src/test/java/libcore/  * java/lang/ref/FinalizationTester.java  */ ;/**  * See FinalizationTester for discussion on how to best trigger GC in tests.  * https://android.googlesource.com/platform/libcore/+/master/support/src/test/java/libcore/  * java/lang/ref/FinalizationTester.java  */ public static void awaitGarbageCollection() throws Exception {     Runtime.getRuntime().gc().     Thread.sleep(100).     System.runFinalization(). }
false;public,static;1;4;;public static void ensureAllConnectionsReleased(OkHttpClient client) {     client.connectionPool().evictAll().     assertEquals(0, client.connectionPool().idleConnectionCount()). }
