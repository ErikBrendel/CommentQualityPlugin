commented;modifiers;parameterAmount;loc;comment;code
false;public;1;22;;@Override public void testRunStarted(Description description) {     System.err.println("Installing aggressive uncaught exception handler").     oldDefaultUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler().     Thread.setDefaultUncaughtExceptionHandler((thread, throwable) -> {         StringWriter errorText = new StringWriter(256).         errorText.append("Uncaught exception in OkHttp thread \"").         errorText.append(thread.getName()).         errorText.append("\"\n").         throwable.printStackTrace(new PrintWriter(errorText)).         errorText.append("\n").         if (lastTestStarted != null) {             errorText.append("Last test to start was: ").             errorText.append(lastTestStarted.getDisplayName()).             errorText.append("\n").         }         System.err.print(errorText.toString()).         synchronized (exceptions) {             exceptions.put(throwable, lastTestStarted.getDisplayName()).         }     }). }
false;public;1;3;;@Override public void testStarted(Description description) {     lastTestStarted = description. }
false;public;1;10;;@Override public void testRunFinished(Result result) throws Exception {     Thread.setDefaultUncaughtExceptionHandler(oldDefaultUncaughtExceptionHandler).     System.err.println("Uninstalled aggressive uncaught exception handler").     synchronized (exceptions) {         if (!exceptions.isEmpty()) {             throw Throwables.rethrowAsException(exceptions.keySet().iterator().next()).         }     } }
