commented;modifiers;parameterAmount;loc;comment;code
false;public;1;6;;@Override public void callStart(Call call) {     startNs = System.nanoTime().     logWithTime("callStart: " + call.request()). }
false;public;2;4;;@Override public void dnsStart(Call call, String domainName) {     logWithTime("dnsStart: " + domainName). }
false;public;3;4;;@Override public void dnsEnd(Call call, String domainName, List<InetAddress> inetAddressList) {     logWithTime("dnsEnd: " + inetAddressList). }
false;public;3;4;;@Override public void connectStart(Call call, InetSocketAddress inetSocketAddress, Proxy proxy) {     logWithTime("connectStart: " + inetSocketAddress + " " + proxy). }
false;public;1;4;;@Override public void secureConnectStart(Call call) {     logWithTime("secureConnectStart"). }
false;public;2;4;;@Override public void secureConnectEnd(Call call, @Nullable Handshake handshake) {     logWithTime("secureConnectEnd: " + handshake). }
false;public;4;5;;@Override public void connectEnd(Call call, InetSocketAddress inetSocketAddress, Proxy proxy, @Nullable Protocol protocol) {     logWithTime("connectEnd: " + protocol). }
false;public;5;9;;@Override public void connectFailed(Call call, InetSocketAddress inetSocketAddress, Proxy proxy, @Nullable Protocol protocol, IOException ioe) {     logWithTime("connectFailed: " + protocol + " " + ioe). }
false;public;2;4;;@Override public void connectionAcquired(Call call, Connection connection) {     logWithTime("connectionAcquired: " + connection). }
false;public;2;4;;@Override public void connectionReleased(Call call, Connection connection) {     logWithTime("connectionReleased"). }
false;public;1;4;;@Override public void requestHeadersStart(Call call) {     logWithTime("requestHeadersStart"). }
false;public;2;4;;@Override public void requestHeadersEnd(Call call, Request request) {     logWithTime("requestHeadersEnd"). }
false;public;1;4;;@Override public void requestBodyStart(Call call) {     logWithTime("requestBodyStart"). }
false;public;2;4;;@Override public void requestBodyEnd(Call call, long byteCount) {     logWithTime("requestBodyEnd: byteCount=" + byteCount). }
false;public;2;4;;@Override public void requestFailed(Call call, IOException ioe) {     logWithTime("requestFailed: " + ioe). }
false;public;1;4;;@Override public void responseHeadersStart(Call call) {     logWithTime("responseHeadersStart"). }
false;public;2;4;;@Override public void responseHeadersEnd(Call call, Response response) {     logWithTime("responseHeadersEnd: " + response). }
false;public;1;4;;@Override public void responseBodyStart(Call call) {     logWithTime("responseBodyStart"). }
false;public;2;4;;@Override public void responseBodyEnd(Call call, long byteCount) {     logWithTime("responseBodyEnd: byteCount=" + byteCount). }
false;public;2;4;;@Override public void responseFailed(Call call, IOException ioe) {     logWithTime("responseFailed: " + ioe). }
false;public;1;4;;@Override public void callEnd(Call call) {     logWithTime("callEnd"). }
false;public;2;4;;@Override public void callFailed(Call call, IOException ioe) {     logWithTime("callFailed: " + ioe). }
false;private;1;4;;private void logWithTime(String message) {     long timeMs = TimeUnit.NANOSECONDS.toMillis(System.nanoTime() - startNs).     logger.log("[" + timeMs + " ms] " + message). }
false;public;1;4;;@Override public EventListener create(Call call) {     return new LoggingEventListener(logger). }
