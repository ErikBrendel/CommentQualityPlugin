commented;modifiers;parameterAmount;loc;comment;code
false;private,static;1;3;;private static Story readStory(InputStream jsonResource) throws IOException {     return STORY_JSON_ADAPTER.fromJson(Okio.buffer(Okio.source(jsonResource))). }
false;private,static;1;3;;private static Story readStory(File file) throws IOException {     return STORY_JSON_ADAPTER.fromJson(Okio.buffer(Okio.source(file))). }
true;public,static;0;17;/**  * Iterate through the hpack-test-case resources, only picking stories for the current draft.  */ ;/**  * Iterate through the hpack-test-case resources, only picking stories for the current draft.  */ public static String[] storiesForCurrentDraft() throws URISyntaxException {     File testCaseDirectory = new File(HpackJsonUtil.class.getResource("/hpack-test-case").toURI()).     List<String> storyNames = new ArrayList<>().     for (File path : testCaseDirectory.listFiles()) {         if (path.isDirectory() && Arrays.asList(path.list()).contains("story_00.json")) {             try {                 Story firstStory = readStory(new File(path, "story_00.json")).                 if (firstStory.getDraft() >= BASE_DRAFT) {                     storyNames.add(path.getName()).                 }             } catch (IOException ignored) {             // Skip this path.             }         }     }     return storyNames.toArray(new String[storyNames.size()]). }
true;public,static;1;20;/**  * Reads stories named "story_xx.json" from the folder provided.  */ ;/**  * Reads stories named "story_xx.json" from the folder provided.  */ public static List<Story> readStories(String testFolderName) throws Exception {     List<Story> result = new ArrayList<>().     int i = 0.     while (true) {         // break after last test.         String storyResourceName = String.format(STORY_RESOURCE_FORMAT, testFolderName, i).         InputStream storyInputStream = HpackJsonUtil.class.getResourceAsStream(storyResourceName).         if (storyInputStream == null) {             break.         }         try {             Story story = readStory(storyInputStream).             story.setFileName(storyResourceName).             result.add(story).             i++.         } finally {             storyInputStream.close().         }     }     return result. }
