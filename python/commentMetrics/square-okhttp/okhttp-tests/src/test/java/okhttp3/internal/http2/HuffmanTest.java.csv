commented;modifiers;parameterAmount;loc;comment;code
false;public;0;11;;@Test public void roundTripForRequestAndResponse() throws IOException {     String s = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".     for (int i = 0. i < s.length(). i++) {         assertRoundTrip(ByteString.encodeUtf8(s.substring(0, i))).     }     Random random = new Random(123456789L).     byte[] buf = new byte[4096].     random.nextBytes(buf).     assertRoundTrip(ByteString.of(buf)). }
false;private;1;8;;private void assertRoundTrip(ByteString data) throws IOException {     Buffer buffer = new Buffer().     Huffman.get().encode(data, buffer).     assertEquals(buffer.size(), Huffman.get().encodedLength(data)).     byte[] decodedBytes = Huffman.get().decode(buffer.readByteArray()).     assertArrayEquals(data.toByteArray(), decodedBytes). }
