commented;modifiers;parameterAmount;loc;comment;code
false;public;0;15;;@Test public void emptyBuilderIsEmpty() throws Exception {     CacheControl cacheControl = new CacheControl.Builder().build().     assertEquals("", cacheControl.toString()).     assertFalse(cacheControl.noCache()).     assertFalse(cacheControl.noStore()).     assertEquals(-1, cacheControl.maxAgeSeconds()).     assertEquals(-1, cacheControl.sMaxAgeSeconds()).     assertFalse(cacheControl.isPrivate()).     assertFalse(cacheControl.isPublic()).     assertFalse(cacheControl.mustRevalidate()).     assertEquals(-1, cacheControl.maxStaleSeconds()).     assertEquals(-1, cacheControl.minFreshSeconds()).     assertFalse(cacheControl.onlyIfCached()).     assertFalse(cacheControl.mustRevalidate()). }
false;public;0;28;;@Test public void completeBuilder() throws Exception {     CacheControl cacheControl = new CacheControl.Builder().noCache().noStore().maxAge(1, TimeUnit.SECONDS).maxStale(2, TimeUnit.SECONDS).minFresh(3, TimeUnit.SECONDS).onlyIfCached().noTransform().immutable().build().     assertEquals("no-cache, no-store, max-age=1, max-stale=2, min-fresh=3, only-if-cached, " + "no-transform, immutable", cacheControl.toString()).     assertTrue(cacheControl.noCache()).     assertTrue(cacheControl.noStore()).     assertEquals(1, cacheControl.maxAgeSeconds()).     assertEquals(2, cacheControl.maxStaleSeconds()).     assertEquals(3, cacheControl.minFreshSeconds()).     assertTrue(cacheControl.onlyIfCached()).     assertTrue(cacheControl.noTransform()).     assertTrue(cacheControl.immutable()).     // These members are accessible to response headers only.     assertEquals(-1, cacheControl.sMaxAgeSeconds()).     assertFalse(cacheControl.isPrivate()).     assertFalse(cacheControl.isPublic()).     assertFalse(cacheControl.mustRevalidate()). }
false;public;0;15;;@Test public void parseEmpty() throws Exception {     CacheControl cacheControl = CacheControl.parse(new Headers.Builder().set("Cache-Control", "").build()).     assertEquals("", cacheControl.toString()).     assertFalse(cacheControl.noCache()).     assertFalse(cacheControl.noStore()).     assertEquals(-1, cacheControl.maxAgeSeconds()).     assertEquals(-1, cacheControl.sMaxAgeSeconds()).     assertFalse(cacheControl.isPublic()).     assertFalse(cacheControl.mustRevalidate()).     assertEquals(-1, cacheControl.maxStaleSeconds()).     assertEquals(-1, cacheControl.minFreshSeconds()).     assertFalse(cacheControl.onlyIfCached()).     assertFalse(cacheControl.mustRevalidate()). }
false;public;0;19;;@Test public void parse() throws Exception {     String header = "no-cache, no-store, max-age=1, s-maxage=2, private, public, must-revalidate, " + "max-stale=3, min-fresh=4, only-if-cached, no-transform".     CacheControl cacheControl = CacheControl.parse(new Headers.Builder().set("Cache-Control", header).build()).     assertTrue(cacheControl.noCache()).     assertTrue(cacheControl.noStore()).     assertEquals(1, cacheControl.maxAgeSeconds()).     assertEquals(2, cacheControl.sMaxAgeSeconds()).     assertTrue(cacheControl.isPrivate()).     assertTrue(cacheControl.isPublic()).     assertTrue(cacheControl.mustRevalidate()).     assertEquals(3, cacheControl.maxStaleSeconds()).     assertEquals(4, cacheControl.minFreshSeconds()).     assertTrue(cacheControl.onlyIfCached()).     assertTrue(cacheControl.noTransform()).     assertEquals(header, cacheControl.toString()). }
false;public;0;20;;@Test public void parseIgnoreCacheControlExtensions() throws Exception {     // Example from http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9.6     String header = "private, community=\"UCI\"".     CacheControl cacheControl = CacheControl.parse(new Headers.Builder().set("Cache-Control", header).build()).     assertFalse(cacheControl.noCache()).     assertFalse(cacheControl.noStore()).     assertEquals(-1, cacheControl.maxAgeSeconds()).     assertEquals(-1, cacheControl.sMaxAgeSeconds()).     assertTrue(cacheControl.isPrivate()).     assertFalse(cacheControl.isPublic()).     assertFalse(cacheControl.mustRevalidate()).     assertEquals(-1, cacheControl.maxStaleSeconds()).     assertEquals(-1, cacheControl.minFreshSeconds()).     assertFalse(cacheControl.onlyIfCached()).     assertFalse(cacheControl.noTransform()).     assertFalse(cacheControl.immutable()).     assertEquals(header, cacheControl.toString()). }
false;public;0;6;;@Test public void parseCacheControlAndPragmaAreCombined() {     Headers headers = Headers.of("Cache-Control", "max-age=12", "Pragma", "must-revalidate", "Pragma", "public").     CacheControl cacheControl = CacheControl.parse(headers).     assertEquals("max-age=12, public, must-revalidate", cacheControl.toString()). }
false;public;0;7;;// Testing instance equality. @SuppressWarnings("RedundantStringConstructorCall") @Test public void parseCacheControlHeaderValueIsRetained() {     String value = new String("max-age=12").     Headers headers = Headers.of("Cache-Control", value).     CacheControl cacheControl = CacheControl.parse(headers).     assertSame(value, cacheControl.toString()). }
false;public;0;5;;@Test public void parseCacheControlHeaderValueInvalidatedByPragma() {     Headers headers = Headers.of("Cache-Control", "max-age=12", "Pragma", "must-revalidate").     CacheControl cacheControl = CacheControl.parse(headers).     assertNull(cacheControl.headerValue). }
false;public;0;5;;@Test public void parseCacheControlHeaderValueInvalidatedByTwoValues() {     Headers headers = Headers.of("Cache-Control", "max-age=12", "Cache-Control", "must-revalidate").     CacheControl cacheControl = CacheControl.parse(headers).     assertNull(cacheControl.headerValue). }
false;public;0;5;;@Test public void parsePragmaHeaderValueIsNotRetained() {     Headers headers = Headers.of("Pragma", "must-revalidate").     CacheControl cacheControl = CacheControl.parse(headers).     assertNull(cacheControl.headerValue). }
false;public;0;10;;@Test public void computedHeaderValueIsCached() {     CacheControl cacheControl = new CacheControl.Builder().maxAge(2, TimeUnit.DAYS).build().     assertNull(cacheControl.headerValue).     assertEquals("max-age=172800", cacheControl.toString()).     assertEquals("max-age=172800", cacheControl.headerValue).     cacheControl.headerValue = "Hi".     assertEquals("Hi", cacheControl.toString()). }
false;public;0;6;;@Test public void timeDurationTruncatedToMaxValue() throws Exception {     CacheControl cacheControl = new CacheControl.Builder().maxAge(365 * 100, // Longer than Integer.MAX_VALUE seconds.     TimeUnit.DAYS).build().     assertEquals(Integer.MAX_VALUE, cacheControl.maxAgeSeconds()). }
false;public;0;8;;@Test public void secondsMustBeNonNegative() throws Exception {     CacheControl.Builder builder = new CacheControl.Builder().     try {         builder.maxAge(-1, TimeUnit.SECONDS).         fail().     } catch (IllegalArgumentException expected) {     } }
false;public;0;6;;@Test public void timePrecisionIsTruncatedToSeconds() throws Exception {     CacheControl cacheControl = new CacheControl.Builder().maxAge(4999, TimeUnit.MILLISECONDS).build().     assertEquals(4, cacheControl.maxAgeSeconds()). }
