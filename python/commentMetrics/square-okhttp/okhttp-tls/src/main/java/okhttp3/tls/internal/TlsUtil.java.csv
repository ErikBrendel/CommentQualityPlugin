commented;modifiers;parameterAmount;loc;comment;code
true;public,static,synchronized;0;20;/**  * Returns an SSL client for this host's localhost address.  */ ;/**  * Returns an SSL client for this host's localhost address.  */ public static synchronized HandshakeCertificates localhost() {     if (localhost != null)         return localhost.     try {         // Generate a self-signed cert for the server to serve and the client to trust.         HeldCertificate heldCertificate = new HeldCertificate.Builder().commonName("localhost").addSubjectAlternativeName(InetAddress.getByName("localhost").getCanonicalHostName()).build().         localhost = new HandshakeCertificates.Builder().heldCertificate(heldCertificate).addTrustedCertificate(heldCertificate.certificate()).build().         return localhost.     } catch (UnknownHostException e) {         throw new RuntimeException(e).     } }
true;public,static;2;15;/**  * Returns a trust manager that trusts {@code trustedCertificates}.  */ ;/**  * Returns a trust manager that trusts {@code trustedCertificates}.  */ public static X509TrustManager newTrustManager(String keyStoreType, List<X509Certificate> trustedCertificates) throws GeneralSecurityException {     KeyStore trustStore = newEmptyKeyStore(keyStoreType).     for (int i = 0. i < trustedCertificates.size(). i++) {         trustStore.setCertificateEntry("cert_" + i, trustedCertificates.get(i)).     }     TrustManagerFactory factory = TrustManagerFactory.getInstance(TrustManagerFactory.getDefaultAlgorithm()).     factory.init(trustStore).     TrustManager[] result = factory.getTrustManagers().     if (result.length != 1 || !(result[0] instanceof X509TrustManager)) {         throw new IllegalStateException("Unexpected trust managers:" + Arrays.toString(result)).     }     return (X509TrustManager) result[0]. }
true;public,static;3;20;/**  * Returns a key manager for the held certificate and its chain. Returns an empty key manager if  * {@code heldCertificate} is null.  */ ;/**  * Returns a key manager for the held certificate and its chain. Returns an empty key manager if  * {@code heldCertificate} is null.  */ public static X509KeyManager newKeyManager(String keyStoreType, HeldCertificate heldCertificate, X509Certificate... intermediates) throws GeneralSecurityException {     KeyStore keyStore = newEmptyKeyStore(keyStoreType).     if (heldCertificate != null) {         Certificate[] chain = new Certificate[1 + intermediates.length].         chain[0] = heldCertificate.certificate().         System.arraycopy(intermediates, 0, chain, 1, intermediates.length).         keyStore.setKeyEntry("private", heldCertificate.keyPair().getPrivate(), password, chain).     }     KeyManagerFactory factory = KeyManagerFactory.getInstance(KeyManagerFactory.getDefaultAlgorithm()).     factory.init(keyStore, password).     KeyManager[] result = factory.getKeyManagers().     if (result.length != 1 || !(result[0] instanceof X509KeyManager)) {         throw new IllegalStateException("Unexpected key managers:" + Arrays.toString(result)).     }     return (X509KeyManager) result[0]. }
false;private,static;1;14;;private static KeyStore newEmptyKeyStore(String keyStoreType) throws GeneralSecurityException {     if (keyStoreType == null) {         keyStoreType = KeyStore.getDefaultType().     }     try {         KeyStore keyStore = KeyStore.getInstance(keyStoreType).         // By convention, 'null' creates an empty key store.         InputStream in = null.         keyStore.load(in, password).         return keyStore.     } catch (IOException e) {         throw new AssertionError(e).     } }
