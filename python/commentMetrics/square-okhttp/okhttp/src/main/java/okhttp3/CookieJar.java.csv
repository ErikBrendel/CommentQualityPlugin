commented;modifiers;parameterAmount;loc;comment;code
false;public;2;2;;@Override public void saveFromResponse(HttpUrl url, List<Cookie> cookies) { }
false;public;1;3;;@Override public List<Cookie> loadForRequest(HttpUrl url) {     return Collections.emptyList(). }
true;;2;1;/**  * Saves {@code cookies} from an HTTP response to this store according to this jar's policy.  *  * <p>Note that this method may be called a second time for a single HTTP response if the response  * includes a trailer. For this obscure HTTP feature, {@code cookies} contains only the trailer's  * cookies.  */ ;/**  * Saves {@code cookies} from an HTTP response to this store according to this jar's policy.  *  * <p>Note that this method may be called a second time for a single HTTP response if the response  * includes a trailer. For this obscure HTTP feature, {@code cookies} contains only the trailer's  * cookies.  */ void saveFromResponse(HttpUrl url, List<Cookie> cookies).
true;;1;1;/**  * Load cookies from the jar for an HTTP request to {@code url}. This method returns a possibly  * empty list of cookies for the network request.  *  * <p>Simple implementations will return the accepted cookies that have not yet expired and that  * {@linkplain Cookie#matches match} {@code url}.  */ ;/**  * Load cookies from the jar for an HTTP request to {@code url}. This method returns a possibly  * empty list of cookies for the network request.  *  * <p>Simple implementations will return the accepted cookies that have not yet expired and that  * {@linkplain Cookie#matches match} {@code url}.  */ List<Cookie> loadForRequest(HttpUrl url).
