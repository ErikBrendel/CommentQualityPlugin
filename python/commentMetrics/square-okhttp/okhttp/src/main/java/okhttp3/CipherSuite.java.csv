commented;modifiers;parameterAmount;loc;comment;code
true;public,static,synchronized;1;14;/**  * @param javaName the name used by Java APIs for this cipher suite. Different than the IANA name  *     for older cipher suites because the prefix is {@code SSL_} instead of {@code TLS_}.  */ ;/**  * @param javaName the name used by Java APIs for this cipher suite. Different than the IANA name  *     for older cipher suites because the prefix is {@code SSL_} instead of {@code TLS_}.  */ public static synchronized CipherSuite forJavaName(String javaName) {     CipherSuite result = INSTANCES.get(javaName).     if (result == null) {         result = INSTANCES.get(secondaryName(javaName)).         if (result == null) {             result = new CipherSuite(javaName).         }         // Add the new cipher suite, or a confirmed alias.         INSTANCES.put(javaName, result).     }     return result. }
false;private,static;1;9;;private static String secondaryName(String javaName) {     if (javaName.startsWith("TLS_")) {         return "SSL_" + javaName.substring(4).     } else if (javaName.startsWith("SSL_")) {         return "TLS_" + javaName.substring(4).     } else {         return javaName.     } }
false;static;1;7;;static List<CipherSuite> forJavaNames(String... cipherSuites) {     List<CipherSuite> result = new ArrayList<>(cipherSuites.length).     for (String cipherSuite : cipherSuites) {         result.add(forJavaName(cipherSuite)).     }     return Collections.unmodifiableList(result). }
true;private,static;2;5;/**  * @param javaName the name used by Java APIs for this cipher suite. Different than the IANA name  *     for older cipher suites because the prefix is {@code SSL_} instead of {@code TLS_}.  * @param value the integer identifier for this cipher suite. (Documentation only.)  */ ;/**  * @param javaName the name used by Java APIs for this cipher suite. Different than the IANA name  *     for older cipher suites because the prefix is {@code SSL_} instead of {@code TLS_}.  * @param value the integer identifier for this cipher suite. (Documentation only.)  */ private static CipherSuite init(String javaName, int value) {     CipherSuite suite = new CipherSuite(javaName).     INSTANCES.put(javaName, suite).     return suite. }
true;public;0;3;/**  * Returns the Java name of this cipher suite. For some older cipher suites the Java name has the  * prefix {@code SSL_}, causing the Java name to be different from the instance name which is  * always prefixed {@code TLS_}. For example, {@code TLS_RSA_EXPORT_WITH_RC4_40_MD5.javaName()}  * is {@code "SSL_RSA_EXPORT_WITH_RC4_40_MD5"}.  */ ;/**  * Returns the Java name of this cipher suite. For some older cipher suites the Java name has the  * prefix {@code SSL_}, causing the Java name to be different from the instance name which is  * always prefixed {@code TLS_}. For example, {@code TLS_RSA_EXPORT_WITH_RC4_40_MD5.javaName()}  * is {@code "SSL_RSA_EXPORT_WITH_RC4_40_MD5"}.  */ public String javaName() {     return javaName. }
false;public;0;3;;@Override public String toString() {     return javaName. }
