commented;modifiers;parameterAmount;loc;comment;code
true;;0;1;/**  * Returns the route used by this connection.  */ ;/**  * Returns the route used by this connection.  */ Route route().
true;;0;1;/**  * Returns the socket that this connection is using. Returns an {@linkplain  * javax.net.ssl.SSLSocket SSL socket} if this connection is HTTPS. If this is an HTTP/2  * connection the socket may be shared by multiple concurrent calls.  */ ;/**  * Returns the socket that this connection is using. Returns an {@linkplain  * javax.net.ssl.SSLSocket SSL socket} if this connection is HTTPS. If this is an HTTP/2  * connection the socket may be shared by multiple concurrent calls.  */ Socket socket().
true;;0;1;/**  * Returns the TLS handshake used to establish this connection, or null if the connection is not  * HTTPS.  */ ;/**  * Returns the TLS handshake used to establish this connection, or null if the connection is not  * HTTPS.  */ @Nullable Handshake handshake().
true;;0;1;/**  * Returns the protocol negotiated by this connection, or {@link Protocol#HTTP_1_1} if no protocol  * has been negotiated. This method returns {@link Protocol#HTTP_1_1} even if the remote peer is  * using {@link Protocol#HTTP_1_0}.  */ ;/**  * Returns the protocol negotiated by this connection, or {@link Protocol#HTTP_1_1} if no protocol  * has been negotiated. This method returns {@link Protocol#HTTP_1_1} even if the remote peer is  * using {@link Protocol#HTTP_1_0}.  */ Protocol protocol().
