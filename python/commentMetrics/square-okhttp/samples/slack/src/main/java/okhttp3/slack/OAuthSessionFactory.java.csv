commented;modifiers;parameterAmount;loc;comment;code
false;public;0;7;;public void start() throws Exception {     if (mockWebServer != null)         throw new IllegalStateException().     mockWebServer = new MockWebServer().     mockWebServer.setDispatcher(this).     mockWebServer.start(slackApi.port). }
false;public;3;10;;public HttpUrl newAuthorizeUrl(String scopes, String team, Listener listener) {     if (mockWebServer == null)         throw new IllegalStateException().     ByteString state = randomToken().     synchronized (this) {         listeners.put(state, listener).     }     return slackApi.authorizeUrl(scopes, redirectUrl(), state, team). }
false;private;0;5;;private ByteString randomToken() {     byte[] bytes = new byte[16].     secureRandom.nextBytes(bytes).     return ByteString.of(bytes). }
false;private;0;3;;private HttpUrl redirectUrl() {     return mockWebServer.url("/oauth/"). }
true;public;1;35;/**  * When the browser hits the redirect URL, use the provided code to ask Slack for a session.  */ ;/**  * When the browser hits the redirect URL, use the provided code to ask Slack for a session.  */ @Override public MockResponse dispatch(RecordedRequest request) {     HttpUrl requestUrl = mockWebServer.url(request.getPath()).     String code = requestUrl.queryParameter("code").     String stateString = requestUrl.queryParameter("state").     ByteString state = stateString != null ? ByteString.decodeBase64(stateString) : null.     Listener listener.     synchronized (this) {         listener = listeners.get(state).     }     if (code == null || listener == null) {         return new MockResponse().setResponseCode(404).setBody("unexpected request").     }     try {         OAuthSession session = slackApi.exchangeCode(code, redirectUrl()).         listener.sessionGranted(session).     } catch (IOException e) {         return new MockResponse().setResponseCode(400).setBody("code exchange failed: " + e.getMessage()).     }     synchronized (this) {         listeners.remove(state).     }     // Success!     return new MockResponse().setResponseCode(302).addHeader("Location", "https://twitter.com/CuteEmergency/status/789457462864863232"). }
false;;1;1;;void sessionGranted(OAuthSession session).
false;public;0;7;;@Override public void close() {     if (mockWebServer == null)         throw new IllegalStateException().     try {         mockWebServer.close().     } catch (IOException ignored) {     } }
