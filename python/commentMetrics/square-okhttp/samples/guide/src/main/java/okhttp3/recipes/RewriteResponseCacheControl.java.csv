commented;modifiers;parameterAmount;loc;comment;code
false;public;0;29;;public void run() throws Exception {     for (int i = 0. i < 5. i++) {         System.out.println("    Request: " + i).         Request request = new Request.Builder().url("https://api.github.com/search/repositories?q=http").build().         OkHttpClient clientForCall.         if (i == 2) {             // Force this request's response to be written to the cache. This way, subsequent responses             // can be read from the cache.             System.out.println("Force cache: true").             clientForCall = client.newBuilder().addNetworkInterceptor(REWRITE_CACHE_CONTROL_INTERCEPTOR).build().         } else {             System.out.println("Force cache: false").             clientForCall = client.         }         try (Response response = clientForCall.newCall(request).execute()) {             if (!response.isSuccessful())                 throw new IOException("Unexpected code " + response).             System.out.println("    Network: " + (response.networkResponse() != null)).             System.out.println().         }     } }
false;public,static;1;3;;public static void main(String... args) throws Exception {     new RewriteResponseCacheControl(new File("RewriteResponseCacheControl.tmp")).run(). }
