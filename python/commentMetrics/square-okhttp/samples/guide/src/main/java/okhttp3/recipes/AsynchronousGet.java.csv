commented;modifiers;parameterAmount;loc;comment;code
false;public;2;3;;@Override public void onFailure(Call call, IOException e) {     e.printStackTrace(). }
false;public;2;12;;@Override public void onResponse(Call call, Response response) throws IOException {     try (ResponseBody responseBody = response.body()) {         if (!response.isSuccessful())             throw new IOException("Unexpected code " + response).         Headers responseHeaders = response.headers().         for (int i = 0, size = responseHeaders.size(). i < size. i++) {             System.out.println(responseHeaders.name(i) + ": " + responseHeaders.value(i)).         }         System.out.println(responseBody.string()).     } }
false;public;0;24;;public void run() throws Exception {     Request request = new Request.Builder().url("http://publicobject.com/helloworld.txt").build().     client.newCall(request).enqueue(new Callback() {          @Override         public void onFailure(Call call, IOException e) {             e.printStackTrace().         }          @Override         public void onResponse(Call call, Response response) throws IOException {             try (ResponseBody responseBody = response.body()) {                 if (!response.isSuccessful())                     throw new IOException("Unexpected code " + response).                 Headers responseHeaders = response.headers().                 for (int i = 0, size = responseHeaders.size(). i < size. i++) {                     System.out.println(responseHeaders.name(i) + ": " + responseHeaders.value(i)).                 }                 System.out.println(responseBody.string()).             }         }     }). }
false;public,static;1;3;;public static void main(String... args) throws Exception {     new AsynchronousGet().run(). }
