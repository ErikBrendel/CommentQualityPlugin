# id;timestamp;commentText;codeText;commentWords;codeWords
WikipediaEditsSourceTest -> @Test(timeout = 120 * 1000) 	public void testWikipediaEditsSource() throws Exception;1460502655;NOTE: if you are behind a firewall you may need to use a SOCKS Proxy for this test__@see <a href="http://docs.oracle.com/javase/8/docs/technotes/guides/net/proxies.html">Socks Proxy</a>;@Test(timeout = 120 * 1000)_	public void testWikipediaEditsSource() throws Exception {__		StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment()__		env.getConfig().disableSysoutLogging()___		DataStream<WikipediaEditEvent> edits = env.addSource(new WikipediaEditsSource())___		edits.addSink(new SinkFunction<WikipediaEditEvent>() {_			@Override_			public void invoke(WikipediaEditEvent value) throws Exception {_				throw new Exception("Expected test exception")__			}_		})___		try {_			env.execute()__			fail("Did not throw expected Exception.")__		}_		catch (Exception e) {_			assertNotNull(e.getCause())__			assertEquals("Expected test exception", e.getCause().getMessage())__		}_	};note,if,you,are,behind,a,firewall,you,may,need,to,use,a,socks,proxy,for,this,test,see,a,href,http,docs,oracle,com,javase,8,docs,technotes,guides,net,proxies,html,socks,proxy,a;test,timeout,120,1000,public,void,test,wikipedia,edits,source,throws,exception,stream,execution,environment,env,stream,execution,environment,get,execution,environment,env,get,config,disable,sysout,logging,data,stream,wikipedia,edit,event,edits,env,add,source,new,wikipedia,edits,source,edits,add,sink,new,sink,function,wikipedia,edit,event,override,public,void,invoke,wikipedia,edit,event,value,throws,exception,throw,new,exception,expected,test,exception,try,env,execute,fail,did,not,throw,expected,exception,catch,exception,e,assert,not,null,e,get,cause,assert,equals,expected,test,exception,e,get,cause,get,message
WikipediaEditsSourceTest -> @Test(timeout = 120 * 1000) 	public void testWikipediaEditsSource() throws Exception;1462361860;NOTE: if you are behind a firewall you may need to use a SOCKS Proxy for this test.__We first check the connection to the IRC server. If it fails, this test_is effectively ignored.__@see <a href="http://docs.oracle.com/javase/8/docs/technotes/guides/net/proxies.html">Socks Proxy</a>;@Test(timeout = 120 * 1000)_	public void testWikipediaEditsSource() throws Exception {_		final int numRetries = 5__		final int waitBetweenRetriesMillis = 2000__		final int connectTimeout = 1000___		boolean success = false___		for (int i = 0_ i < numRetries && !success_ i++) {_			_			boolean canConnect = false___			String host = WikipediaEditsSource.DEFAULT_HOST__			int port = WikipediaEditsSource.DEFAULT_PORT___			try (Socket s = new Socket()) {_				s.connect(new InetSocketAddress(host, port), connectTimeout)__				canConnect = s.isConnected()__			} catch (Throwable ignored) {_			}__			if (canConnect) {_				StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment()__				env.getConfig().disableSysoutLogging()___				DataStream<WikipediaEditEvent> edits = env.addSource(new WikipediaEditsSource())___				edits.addSink(new SinkFunction<WikipediaEditEvent>() {_					@Override_					public void invoke(WikipediaEditEvent value) throws Exception {_						throw new Exception("Expected test exception")__					}_				})___				try {_					env.execute()__					fail("Did not throw expected Exception.")__				} catch (Exception e) {_					assertNotNull(e.getCause())__					assertEquals("Expected test exception", e.getCause().getMessage())__				}__				success = true__			} else {_				LOG.info("Failed to connect to IRC server ({}/{}). Retrying in {} ms.",_						i + 1,_						numRetries,_						waitBetweenRetriesMillis)___				Thread.sleep(waitBetweenRetriesMillis)__			}_		}__		if (success) {_			LOG.info("Successfully ran test.")__		} else {_			LOG.info("Skipped test, because not able to connect to IRC server.")__		}_	};note,if,you,are,behind,a,firewall,you,may,need,to,use,a,socks,proxy,for,this,test,we,first,check,the,connection,to,the,irc,server,if,it,fails,this,test,is,effectively,ignored,see,a,href,http,docs,oracle,com,javase,8,docs,technotes,guides,net,proxies,html,socks,proxy,a;test,timeout,120,1000,public,void,test,wikipedia,edits,source,throws,exception,final,int,num,retries,5,final,int,wait,between,retries,millis,2000,final,int,connect,timeout,1000,boolean,success,false,for,int,i,0,i,num,retries,success,i,boolean,can,connect,false,string,host,wikipedia,edits,source,int,port,wikipedia,edits,source,try,socket,s,new,socket,s,connect,new,inet,socket,address,host,port,connect,timeout,can,connect,s,is,connected,catch,throwable,ignored,if,can,connect,stream,execution,environment,env,stream,execution,environment,get,execution,environment,env,get,config,disable,sysout,logging,data,stream,wikipedia,edit,event,edits,env,add,source,new,wikipedia,edits,source,edits,add,sink,new,sink,function,wikipedia,edit,event,override,public,void,invoke,wikipedia,edit,event,value,throws,exception,throw,new,exception,expected,test,exception,try,env,execute,fail,did,not,throw,expected,exception,catch,exception,e,assert,not,null,e,get,cause,assert,equals,expected,test,exception,e,get,cause,get,message,success,true,else,log,info,failed,to,connect,to,irc,server,retrying,in,ms,i,1,num,retries,wait,between,retries,millis,thread,sleep,wait,between,retries,millis,if,success,log,info,successfully,ran,test,else,log,info,skipped,test,because,not,able,to,connect,to,irc,server
WikipediaEditsSourceTest -> @Test(timeout = 120 * 1000) 	public void testWikipediaEditsSource() throws Exception;1496308451;NOTE: if you are behind a firewall you may need to use a SOCKS Proxy for this test.__<p>We first check the connection to the IRC server. If it fails, this test_is effectively ignored.__@see <a href="http://docs.oracle.com/javase/8/docs/technotes/guides/net/proxies.html">Socks Proxy</a>;@Test(timeout = 120 * 1000)_	public void testWikipediaEditsSource() throws Exception {_		final int numRetries = 5__		final int waitBetweenRetriesMillis = 2000__		final int connectTimeout = 1000___		boolean success = false___		for (int i = 0_ i < numRetries && !success_ i++) {_			_			boolean canConnect = false___			String host = WikipediaEditsSource.DEFAULT_HOST__			int port = WikipediaEditsSource.DEFAULT_PORT___			try (Socket s = new Socket()) {_				s.connect(new InetSocketAddress(host, port), connectTimeout)__				canConnect = s.isConnected()__			} catch (Throwable ignored) {_			}__			if (canConnect) {_				StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment()__				env.getConfig().disableSysoutLogging()___				DataStream<WikipediaEditEvent> edits = env.addSource(new WikipediaEditsSource())___				edits.addSink(new SinkFunction<WikipediaEditEvent>() {_					@Override_					public void invoke(WikipediaEditEvent value) throws Exception {_						throw new Exception("Expected test exception")__					}_				})___				try {_					env.execute()__					fail("Did not throw expected Exception.")__				} catch (Exception e) {_					assertNotNull(e.getCause())__					assertEquals("Expected test exception", e.getCause().getMessage())__				}__				success = true__			} else {_				LOG.info("Failed to connect to IRC server ({}/{}). Retrying in {} ms.",_						i + 1,_						numRetries,_						waitBetweenRetriesMillis)___				Thread.sleep(waitBetweenRetriesMillis)__			}_		}__		if (success) {_			LOG.info("Successfully ran test.")__		} else {_			LOG.info("Skipped test, because not able to connect to IRC server.")__		}_	};note,if,you,are,behind,a,firewall,you,may,need,to,use,a,socks,proxy,for,this,test,p,we,first,check,the,connection,to,the,irc,server,if,it,fails,this,test,is,effectively,ignored,see,a,href,http,docs,oracle,com,javase,8,docs,technotes,guides,net,proxies,html,socks,proxy,a;test,timeout,120,1000,public,void,test,wikipedia,edits,source,throws,exception,final,int,num,retries,5,final,int,wait,between,retries,millis,2000,final,int,connect,timeout,1000,boolean,success,false,for,int,i,0,i,num,retries,success,i,boolean,can,connect,false,string,host,wikipedia,edits,source,int,port,wikipedia,edits,source,try,socket,s,new,socket,s,connect,new,inet,socket,address,host,port,connect,timeout,can,connect,s,is,connected,catch,throwable,ignored,if,can,connect,stream,execution,environment,env,stream,execution,environment,get,execution,environment,env,get,config,disable,sysout,logging,data,stream,wikipedia,edit,event,edits,env,add,source,new,wikipedia,edits,source,edits,add,sink,new,sink,function,wikipedia,edit,event,override,public,void,invoke,wikipedia,edit,event,value,throws,exception,throw,new,exception,expected,test,exception,try,env,execute,fail,did,not,throw,expected,exception,catch,exception,e,assert,not,null,e,get,cause,assert,equals,expected,test,exception,e,get,cause,get,message,success,true,else,log,info,failed,to,connect,to,irc,server,retrying,in,ms,i,1,num,retries,wait,between,retries,millis,thread,sleep,wait,between,retries,millis,if,success,log,info,successfully,ran,test,else,log,info,skipped,test,because,not,able,to,connect,to,irc,server
WikipediaEditsSourceTest -> @Test 	@RetryOnFailure(times = 1) 	public void testWikipediaEditsSource() throws Exception;1512394141;We first check the connection to the IRC server. If it fails, this test is ignored.;@Test_	@RetryOnFailure(times = 1)_	public void testWikipediaEditsSource() throws Exception {_		if (canConnect(1, TimeUnit.SECONDS)) {_			final Time testTimeout = Time.seconds(60)__			final WikipediaEditsSource wikipediaEditsSource = new WikipediaEditsSource()___			ExecutorService executorService = null__			try {_				executorService = Executors.newSingleThreadExecutor()__				BlockingQueue<Object> collectedEvents = new ArrayBlockingQueue<>(1)__				AtomicReference<Exception> asyncError = new AtomicReference<>()___				_				_				_				_				executorService.execute(() -> {_					try {_						wikipediaEditsSource.run(new CollectingSourceContext<>(collectedEvents))__					} catch (Exception e) {_						boolean interrupted = e instanceof InterruptedException__						if (!interrupted) {_							LOG.warn("Failure in WikipediaEditsSource", e)__						}__						asyncError.compareAndSet(null, e)__					}_				})___				long deadline = deadlineNanos(testTimeout)___				Object event = null__				Exception error = null___				_				while (event == null && error == null && System.nanoTime() < deadline) {_					event = collectedEvents.poll(1, TimeUnit.SECONDS)__					error = asyncError.get()__				}__				if (error != null) {_					_					fail("Failure in WikipediaEditsSource: " + error.getMessage())__				}__				assertNotNull("Did not receive a WikipediaEditEvent within the desired timeout", event)__				assertTrue("Received unexpected event " + event, event instanceof WikipediaEditEvent)__			} finally {_				wikipediaEditsSource.cancel()___				if (executorService != null) {_					executorService.shutdownNow()__					executorService.awaitTermination(1, TimeUnit.SECONDS)__				}_			}_		} else {_			LOG.info("Skipping test, because not able to connect to IRC server.")__		}_	};we,first,check,the,connection,to,the,irc,server,if,it,fails,this,test,is,ignored;test,retry,on,failure,times,1,public,void,test,wikipedia,edits,source,throws,exception,if,can,connect,1,time,unit,seconds,final,time,test,timeout,time,seconds,60,final,wikipedia,edits,source,wikipedia,edits,source,new,wikipedia,edits,source,executor,service,executor,service,null,try,executor,service,executors,new,single,thread,executor,blocking,queue,object,collected,events,new,array,blocking,queue,1,atomic,reference,exception,async,error,new,atomic,reference,executor,service,execute,try,wikipedia,edits,source,run,new,collecting,source,context,collected,events,catch,exception,e,boolean,interrupted,e,instanceof,interrupted,exception,if,interrupted,log,warn,failure,in,wikipedia,edits,source,e,async,error,compare,and,set,null,e,long,deadline,deadline,nanos,test,timeout,object,event,null,exception,error,null,while,event,null,error,null,system,nano,time,deadline,event,collected,events,poll,1,time,unit,seconds,error,async,error,get,if,error,null,fail,failure,in,wikipedia,edits,source,error,get,message,assert,not,null,did,not,receive,a,wikipedia,edit,event,within,the,desired,timeout,event,assert,true,received,unexpected,event,event,event,instanceof,wikipedia,edit,event,finally,wikipedia,edits,source,cancel,if,executor,service,null,executor,service,shutdown,now,executor,service,await,termination,1,time,unit,seconds,else,log,info,skipping,test,because,not,able,to,connect,to,irc,server
WikipediaEditsSourceTest -> @Test 	@RetryOnFailure(times = 1) 	public void testWikipediaEditsSource() throws Exception;1515177485;We first check the connection to the IRC server. If it fails, this test is ignored.;@Test_	@RetryOnFailure(times = 1)_	public void testWikipediaEditsSource() throws Exception {_		if (canConnect(1, TimeUnit.SECONDS)) {_			final Time testTimeout = Time.seconds(60)__			final WikipediaEditsSource wikipediaEditsSource = new WikipediaEditsSource()___			ExecutorService executorService = null__			try {_				executorService = Executors.newSingleThreadExecutor()__				BlockingQueue<Object> collectedEvents = new ArrayBlockingQueue<>(1)__				AtomicReference<Exception> asyncError = new AtomicReference<>()___				_				_				_				_				executorService.execute(() -> {_					try {_						wikipediaEditsSource.run(new CollectingSourceContext<>(collectedEvents))__					} catch (Exception e) {_						boolean interrupted = e instanceof InterruptedException__						if (!interrupted) {_							LOG.warn("Failure in WikipediaEditsSource", e)__						}__						asyncError.compareAndSet(null, e)__					}_				})___				long deadline = deadlineNanos(testTimeout)___				Object event = null__				Exception error = null___				_				while (event == null && error == null && System.nanoTime() < deadline) {_					event = collectedEvents.poll(1, TimeUnit.SECONDS)__					error = asyncError.get()__				}__				if (error != null) {_					_					fail("Failure in WikipediaEditsSource: " + error.getMessage())__				}__				assertNotNull("Did not receive a WikipediaEditEvent within the desired timeout", event)__				assertTrue("Received unexpected event " + event, event instanceof WikipediaEditEvent)__			} finally {_				wikipediaEditsSource.cancel()___				if (executorService != null) {_					executorService.shutdownNow()__					executorService.awaitTermination(1, TimeUnit.SECONDS)__				}_			}_		} else {_			LOG.info("Skipping test, because not able to connect to IRC server.")__		}_	};we,first,check,the,connection,to,the,irc,server,if,it,fails,this,test,is,ignored;test,retry,on,failure,times,1,public,void,test,wikipedia,edits,source,throws,exception,if,can,connect,1,time,unit,seconds,final,time,test,timeout,time,seconds,60,final,wikipedia,edits,source,wikipedia,edits,source,new,wikipedia,edits,source,executor,service,executor,service,null,try,executor,service,executors,new,single,thread,executor,blocking,queue,object,collected,events,new,array,blocking,queue,1,atomic,reference,exception,async,error,new,atomic,reference,executor,service,execute,try,wikipedia,edits,source,run,new,collecting,source,context,collected,events,catch,exception,e,boolean,interrupted,e,instanceof,interrupted,exception,if,interrupted,log,warn,failure,in,wikipedia,edits,source,e,async,error,compare,and,set,null,e,long,deadline,deadline,nanos,test,timeout,object,event,null,exception,error,null,while,event,null,error,null,system,nano,time,deadline,event,collected,events,poll,1,time,unit,seconds,error,async,error,get,if,error,null,fail,failure,in,wikipedia,edits,source,error,get,message,assert,not,null,did,not,receive,a,wikipedia,edit,event,within,the,desired,timeout,event,assert,true,received,unexpected,event,event,event,instanceof,wikipedia,edit,event,finally,wikipedia,edits,source,cancel,if,executor,service,null,executor,service,shutdown,now,executor,service,await,termination,1,time,unit,seconds,else,log,info,skipping,test,because,not,able,to,connect,to,irc,server
