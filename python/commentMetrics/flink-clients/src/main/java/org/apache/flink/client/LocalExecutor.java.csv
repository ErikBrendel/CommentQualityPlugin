# id;timestamp;commentText;codeText;commentWords;codeWords
LocalExecutor -> public static void setLoggingLevel(Level lvl);1405024514;Utility method for logging;public static void setLoggingLevel(Level lvl) {_		LogUtils.initializeDefaultConsoleLogger(lvl)__	};utility,method,for,logging;public,static,void,set,logging,level,level,lvl,log,utils,initialize,default,console,logger,lvl
LocalExecutor -> public static void setLoggingLevel(Level lvl);1405090423;Utility method for logging;public static void setLoggingLevel(Level lvl) {_		LogUtils.initializeDefaultConsoleLogger(lvl)__	};utility,method,for,logging;public,static,void,set,logging,level,level,lvl,log,utils,initialize,default,console,logger,lvl
LocalExecutor -> public static void setOverwriteFilesByDefault(boolean overwriteByDefault);1405024514;By default, local environments do not overwrite existing files.__NOTE: This method must be called prior to initializing the LocalExecutor or a_{@link org.apache.flink.api.java.LocalEnvironment}.__@param overwriteByDefault True to overwrite by default, false to not overwrite by default.;public static void setOverwriteFilesByDefault(boolean overwriteByDefault) {_		DEFAULT_OVERWRITE = overwriteByDefault__	};by,default,local,environments,do,not,overwrite,existing,files,note,this,method,must,be,called,prior,to,initializing,the,local,executor,or,a,link,org,apache,flink,api,java,local,environment,param,overwrite,by,default,true,to,overwrite,by,default,false,to,not,overwrite,by,default;public,static,void,set,overwrite,files,by,default,boolean,overwrite,by,default,overwrite,by,default
LocalExecutor -> public static void setOverwriteFilesByDefault(boolean overwriteByDefault);1405090423;By default, local environments do not overwrite existing files.__NOTE: This method must be called prior to initializing the LocalExecutor or a_{@link org.apache.flink.api.java.LocalEnvironment}.__@param overwriteByDefault True to overwrite by default, false to not overwrite by default.;public static void setOverwriteFilesByDefault(boolean overwriteByDefault) {_		DEFAULT_OVERWRITE = overwriteByDefault__	};by,default,local,environments,do,not,overwrite,existing,files,note,this,method,must,be,called,prior,to,initializing,the,local,executor,or,a,link,org,apache,flink,api,java,local,environment,param,overwrite,by,default,true,to,overwrite,by,default,false,to,not,overwrite,by,default;public,static,void,set,overwrite,files,by,default,boolean,overwrite,by,default,overwrite,by,default
LocalExecutor -> public static void setOverwriteFilesByDefault(boolean overwriteByDefault);1409911022;By default, local environments do not overwrite existing files.__NOTE: This method must be called prior to initializing the LocalExecutor or a_{@link org.apache.flink.api.java.LocalEnvironment}.__@param overwriteByDefault True to overwrite by default, false to not overwrite by default.;public static void setOverwriteFilesByDefault(boolean overwriteByDefault) {_		DEFAULT_OVERWRITE = overwriteByDefault__	};by,default,local,environments,do,not,overwrite,existing,files,note,this,method,must,be,called,prior,to,initializing,the,local,executor,or,a,link,org,apache,flink,api,java,local,environment,param,overwrite,by,default,true,to,overwrite,by,default,false,to,not,overwrite,by,default;public,static,void,set,overwrite,files,by,default,boolean,overwrite,by,default,overwrite,by,default
LocalExecutor -> public static void setOverwriteFilesByDefault(boolean overwriteByDefault);1411473593;By default, local environments do not overwrite existing files.__NOTE: This method must be called prior to initializing the LocalExecutor or a_{@link org.apache.flink.api.java.LocalEnvironment}.__@param overwriteByDefault True to overwrite by default, false to not overwrite by default.;public static void setOverwriteFilesByDefault(boolean overwriteByDefault) {_		DEFAULT_OVERWRITE = overwriteByDefault__	};by,default,local,environments,do,not,overwrite,existing,files,note,this,method,must,be,called,prior,to,initializing,the,local,executor,or,a,link,org,apache,flink,api,java,local,environment,param,overwrite,by,default,true,to,overwrite,by,default,false,to,not,overwrite,by,default;public,static,void,set,overwrite,files,by,default,boolean,overwrite,by,default,overwrite,by,default
LocalExecutor -> public static void setOverwriteFilesByDefault(boolean overwriteByDefault);1418925507;By default, local environments do not overwrite existing files.__NOTE: This method must be called prior to initializing the LocalExecutor or a_{@link org.apache.flink.api.java.LocalEnvironment}.__@param overwriteByDefault True to overwrite by default, false to not overwrite by default.;public static void setOverwriteFilesByDefault(boolean overwriteByDefault) {_		DEFAULT_OVERWRITE = overwriteByDefault__	};by,default,local,environments,do,not,overwrite,existing,files,note,this,method,must,be,called,prior,to,initializing,the,local,executor,or,a,link,org,apache,flink,api,java,local,environment,param,overwrite,by,default,true,to,overwrite,by,default,false,to,not,overwrite,by,default;public,static,void,set,overwrite,files,by,default,boolean,overwrite,by,default,overwrite,by,default
LocalExecutor -> public static void setOverwriteFilesByDefault(boolean overwriteByDefault);1418925507;By default, local environments do not overwrite existing files.__NOTE: This method must be called prior to initializing the LocalExecutor or a_{@link org.apache.flink.api.java.LocalEnvironment}.__@param overwriteByDefault True to overwrite by default, false to not overwrite by default.;public static void setOverwriteFilesByDefault(boolean overwriteByDefault) {_		DEFAULT_OVERWRITE = overwriteByDefault__	};by,default,local,environments,do,not,overwrite,existing,files,note,this,method,must,be,called,prior,to,initializing,the,local,executor,or,a,link,org,apache,flink,api,java,local,environment,param,overwrite,by,default,true,to,overwrite,by,default,false,to,not,overwrite,by,default;public,static,void,set,overwrite,files,by,default,boolean,overwrite,by,default,overwrite,by,default
LocalExecutor -> public static void setOverwriteFilesByDefault(boolean overwriteByDefault);1418925508;By default, local environments do not overwrite existing files.__NOTE: This method must be called prior to initializing the LocalExecutor or a_{@link org.apache.flink.api.java.LocalEnvironment}.__@param overwriteByDefault True to overwrite by default, false to not overwrite by default.;public static void setOverwriteFilesByDefault(boolean overwriteByDefault) {_		DEFAULT_OVERWRITE = overwriteByDefault__	};by,default,local,environments,do,not,overwrite,existing,files,note,this,method,must,be,called,prior,to,initializing,the,local,executor,or,a,link,org,apache,flink,api,java,local,environment,param,overwrite,by,default,true,to,overwrite,by,default,false,to,not,overwrite,by,default;public,static,void,set,overwrite,files,by,default,boolean,overwrite,by,default,overwrite,by,default
LocalExecutor -> public static void setOverwriteFilesByDefault(boolean overwriteByDefault);1418925508;By default, local environments do not overwrite existing files.__NOTE: This method must be called prior to initializing the LocalExecutor or a_{@link org.apache.flink.api.java.LocalEnvironment}.__@param overwriteByDefault True to overwrite by default, false to not overwrite by default.;public static void setOverwriteFilesByDefault(boolean overwriteByDefault) {_		DEFAULT_OVERWRITE = overwriteByDefault__	};by,default,local,environments,do,not,overwrite,existing,files,note,this,method,must,be,called,prior,to,initializing,the,local,executor,or,a,link,org,apache,flink,api,java,local,environment,param,overwrite,by,default,true,to,overwrite,by,default,false,to,not,overwrite,by,default;public,static,void,set,overwrite,files,by,default,boolean,overwrite,by,default,overwrite,by,default
LocalExecutor -> public static void setOverwriteFilesByDefault(boolean overwriteByDefault);1418925510;By default, local environments do not overwrite existing files.__NOTE: This method must be called prior to initializing the LocalExecutor or a_{@link org.apache.flink.api.java.LocalEnvironment}.__@param overwriteByDefault True to overwrite by default, false to not overwrite by default.;public static void setOverwriteFilesByDefault(boolean overwriteByDefault) {_		DEFAULT_OVERWRITE = overwriteByDefault__	};by,default,local,environments,do,not,overwrite,existing,files,note,this,method,must,be,called,prior,to,initializing,the,local,executor,or,a,link,org,apache,flink,api,java,local,environment,param,overwrite,by,default,true,to,overwrite,by,default,false,to,not,overwrite,by,default;public,static,void,set,overwrite,files,by,default,boolean,overwrite,by,default,overwrite,by,default
LocalExecutor -> public static void setOverwriteFilesByDefault(boolean overwriteByDefault);1418925511;By default, local environments do not overwrite existing files.__NOTE: This method must be called prior to initializing the LocalExecutor or a_{@link org.apache.flink.api.java.LocalEnvironment}.__@param overwriteByDefault True to overwrite by default, false to not overwrite by default.;public static void setOverwriteFilesByDefault(boolean overwriteByDefault) {_		DEFAULT_OVERWRITE = overwriteByDefault__	};by,default,local,environments,do,not,overwrite,existing,files,note,this,method,must,be,called,prior,to,initializing,the,local,executor,or,a,link,org,apache,flink,api,java,local,environment,param,overwrite,by,default,true,to,overwrite,by,default,false,to,not,overwrite,by,default;public,static,void,set,overwrite,files,by,default,boolean,overwrite,by,default,overwrite,by,default
LocalExecutor -> public static void setOverwriteFilesByDefault(boolean overwriteByDefault);1418925512;By default, local environments do not overwrite existing files.__NOTE: This method must be called prior to initializing the LocalExecutor or a_{@link org.apache.flink.api.java.LocalEnvironment}.__@param overwriteByDefault True to overwrite by default, false to not overwrite by default.;public static void setOverwriteFilesByDefault(boolean overwriteByDefault) {_		DEFAULT_OVERWRITE = overwriteByDefault__	};by,default,local,environments,do,not,overwrite,existing,files,note,this,method,must,be,called,prior,to,initializing,the,local,executor,or,a,link,org,apache,flink,api,java,local,environment,param,overwrite,by,default,true,to,overwrite,by,default,false,to,not,overwrite,by,default;public,static,void,set,overwrite,files,by,default,boolean,overwrite,by,default,overwrite,by,default
LocalExecutor -> public static void setOverwriteFilesByDefault(boolean overwriteByDefault);1418925513;By default, local environments do not overwrite existing files.__NOTE: This method must be called prior to initializing the LocalExecutor or a_{@link org.apache.flink.api.java.LocalEnvironment}.__@param overwriteByDefault True to overwrite by default, false to not overwrite by default.;public static void setOverwriteFilesByDefault(boolean overwriteByDefault) {_		DEFAULT_OVERWRITE = overwriteByDefault__	};by,default,local,environments,do,not,overwrite,existing,files,note,this,method,must,be,called,prior,to,initializing,the,local,executor,or,a,link,org,apache,flink,api,java,local,environment,param,overwrite,by,default,true,to,overwrite,by,default,false,to,not,overwrite,by,default;public,static,void,set,overwrite,files,by,default,boolean,overwrite,by,default,overwrite,by,default
LocalExecutor -> public static void setOverwriteFilesByDefault(boolean overwriteByDefault);1426843273;By default, local environments do not overwrite existing files.__NOTE: This method must be called prior to initializing the LocalExecutor or a_{@link org.apache.flink.api.java.LocalEnvironment}.__@param overwriteByDefault True to overwrite by default, false to not overwrite by default.;public static void setOverwriteFilesByDefault(boolean overwriteByDefault) {_		DEFAULT_OVERWRITE = overwriteByDefault__	};by,default,local,environments,do,not,overwrite,existing,files,note,this,method,must,be,called,prior,to,initializing,the,local,executor,or,a,link,org,apache,flink,api,java,local,environment,param,overwrite,by,default,true,to,overwrite,by,default,false,to,not,overwrite,by,default;public,static,void,set,overwrite,files,by,default,boolean,overwrite,by,default,overwrite,by,default
LocalExecutor -> public static void setOverwriteFilesByDefault(boolean overwriteByDefault);1426843274;By default, local environments do not overwrite existing files.__NOTE: This method must be called prior to initializing the LocalExecutor or a_{@link org.apache.flink.api.java.LocalEnvironment}.__@param overwriteByDefault True to overwrite by default, false to not overwrite by default.;public static void setOverwriteFilesByDefault(boolean overwriteByDefault) {_		DEFAULT_OVERWRITE = overwriteByDefault__	};by,default,local,environments,do,not,overwrite,existing,files,note,this,method,must,be,called,prior,to,initializing,the,local,executor,or,a,link,org,apache,flink,api,java,local,environment,param,overwrite,by,default,true,to,overwrite,by,default,false,to,not,overwrite,by,default;public,static,void,set,overwrite,files,by,default,boolean,overwrite,by,default,overwrite,by,default
LocalExecutor -> public static void setOverwriteFilesByDefault(boolean overwriteByDefault);1426843274;By default, local environments do not overwrite existing files.__NOTE: This method must be called prior to initializing the LocalExecutor or a_{@link org.apache.flink.api.java.LocalEnvironment}.__@param overwriteByDefault True to overwrite by default, false to not overwrite by default.;public static void setOverwriteFilesByDefault(boolean overwriteByDefault) {_		DEFAULT_OVERWRITE = overwriteByDefault__	};by,default,local,environments,do,not,overwrite,existing,files,note,this,method,must,be,called,prior,to,initializing,the,local,executor,or,a,link,org,apache,flink,api,java,local,environment,param,overwrite,by,default,true,to,overwrite,by,default,false,to,not,overwrite,by,default;public,static,void,set,overwrite,files,by,default,boolean,overwrite,by,default,overwrite,by,default
LocalExecutor -> public static void setOverwriteFilesByDefault(boolean overwriteByDefault);1427784999;By default, local environments do not overwrite existing files.__NOTE: This method must be called prior to initializing the LocalExecutor or a_{@link org.apache.flink.api.java.LocalEnvironment}.__@param overwriteByDefault True to overwrite by default, false to not overwrite by default.;public static void setOverwriteFilesByDefault(boolean overwriteByDefault) {_		DEFAULT_OVERWRITE = overwriteByDefault__	};by,default,local,environments,do,not,overwrite,existing,files,note,this,method,must,be,called,prior,to,initializing,the,local,executor,or,a,link,org,apache,flink,api,java,local,environment,param,overwrite,by,default,true,to,overwrite,by,default,false,to,not,overwrite,by,default;public,static,void,set,overwrite,files,by,default,boolean,overwrite,by,default,overwrite,by,default
LocalExecutor -> public static void setOverwriteFilesByDefault(boolean overwriteByDefault);1427958028;By default, local environments do not overwrite existing files.__NOTE: This method must be called prior to initializing the LocalExecutor or a_{@link org.apache.flink.api.java.LocalEnvironment}.__@param overwriteByDefault True to overwrite by default, false to not overwrite by default.;public static void setOverwriteFilesByDefault(boolean overwriteByDefault) {_		DEFAULT_OVERWRITE = overwriteByDefault__	};by,default,local,environments,do,not,overwrite,existing,files,note,this,method,must,be,called,prior,to,initializing,the,local,executor,or,a,link,org,apache,flink,api,java,local,environment,param,overwrite,by,default,true,to,overwrite,by,default,false,to,not,overwrite,by,default;public,static,void,set,overwrite,files,by,default,boolean,overwrite,by,default,overwrite,by,default
LocalExecutor -> public static void setOverwriteFilesByDefault(boolean overwriteByDefault);1428663519;By default, local environments do not overwrite existing files.__NOTE: This method must be called prior to initializing the LocalExecutor or a_{@link org.apache.flink.api.java.LocalEnvironment}.__@param overwriteByDefault True to overwrite by default, false to not overwrite by default.;public static void setOverwriteFilesByDefault(boolean overwriteByDefault) {_		DEFAULT_OVERWRITE = overwriteByDefault__	};by,default,local,environments,do,not,overwrite,existing,files,note,this,method,must,be,called,prior,to,initializing,the,local,executor,or,a,link,org,apache,flink,api,java,local,environment,param,overwrite,by,default,true,to,overwrite,by,default,false,to,not,overwrite,by,default;public,static,void,set,overwrite,files,by,default,boolean,overwrite,by,default,overwrite,by,default
LocalExecutor -> public static void setOverwriteFilesByDefault(boolean overwriteByDefault);1428935901;By default, local environments do not overwrite existing files.__NOTE: This method must be called prior to initializing the LocalExecutor or a_{@link org.apache.flink.api.java.LocalEnvironment}.__@param overwriteByDefault True to overwrite by default, false to not overwrite by default.;public static void setOverwriteFilesByDefault(boolean overwriteByDefault) {_		DEFAULT_OVERWRITE = overwriteByDefault__	};by,default,local,environments,do,not,overwrite,existing,files,note,this,method,must,be,called,prior,to,initializing,the,local,executor,or,a,link,org,apache,flink,api,java,local,environment,param,overwrite,by,default,true,to,overwrite,by,default,false,to,not,overwrite,by,default;public,static,void,set,overwrite,files,by,default,boolean,overwrite,by,default,overwrite,by,default
LocalExecutor -> public static String optimizerPlanAsJSON(Plan plan) throws Exception;1405024514;Returns a JSON dump of the optimized plan.__@param plan_The program's plan._@return JSON dump of the optimized plan._@throws Exception;public static String optimizerPlanAsJSON(Plan plan) throws Exception {_		LocalExecutor exec = new LocalExecutor()__		try {_			exec.start()__			PactCompiler pc = new PactCompiler(new DataStatistics())__			OptimizedPlan op = pc.compile(plan)__			PlanJSONDumpGenerator gen = new PlanJSONDumpGenerator()___			return gen.getOptimizerPlanAsJSON(op)__		} finally {_			exec.stop()__		}_	};returns,a,json,dump,of,the,optimized,plan,param,plan,the,program,s,plan,return,json,dump,of,the,optimized,plan,throws,exception;public,static,string,optimizer,plan,as,json,plan,plan,throws,exception,local,executor,exec,new,local,executor,try,exec,start,pact,compiler,pc,new,pact,compiler,new,data,statistics,optimized,plan,op,pc,compile,plan,plan,jsondump,generator,gen,new,plan,jsondump,generator,return,gen,get,optimizer,plan,as,json,op,finally,exec,stop
LocalExecutor -> public static String optimizerPlanAsJSON(Plan plan) throws Exception;1405090423;Returns a JSON dump of the optimized plan.__@param plan_The program's plan._@return JSON dump of the optimized plan._@throws Exception;public static String optimizerPlanAsJSON(Plan plan) throws Exception {_		LocalExecutor exec = new LocalExecutor()__		try {_			exec.start()__			PactCompiler pc = new PactCompiler(new DataStatistics())__			OptimizedPlan op = pc.compile(plan)__			PlanJSONDumpGenerator gen = new PlanJSONDumpGenerator()___			return gen.getOptimizerPlanAsJSON(op)__		} finally {_			exec.stop()__		}_	};returns,a,json,dump,of,the,optimized,plan,param,plan,the,program,s,plan,return,json,dump,of,the,optimized,plan,throws,exception;public,static,string,optimizer,plan,as,json,plan,plan,throws,exception,local,executor,exec,new,local,executor,try,exec,start,pact,compiler,pc,new,pact,compiler,new,data,statistics,optimized,plan,op,pc,compile,plan,plan,jsondump,generator,gen,new,plan,jsondump,generator,return,gen,get,optimizer,plan,as,json,op,finally,exec,stop
LocalExecutor -> public static String optimizerPlanAsJSON(Plan plan) throws Exception;1409911022;Returns a JSON dump of the optimized plan.__@param plan_The program's plan._@return JSON dump of the optimized plan._@throws Exception;public static String optimizerPlanAsJSON(Plan plan) throws Exception {_		LocalExecutor exec = new LocalExecutor()__		try {_			exec.start()__			PactCompiler pc = new PactCompiler(new DataStatistics())__			OptimizedPlan op = pc.compile(plan)__			PlanJSONDumpGenerator gen = new PlanJSONDumpGenerator()___			return gen.getOptimizerPlanAsJSON(op)__		} finally {_			exec.stop()__		}_	};returns,a,json,dump,of,the,optimized,plan,param,plan,the,program,s,plan,return,json,dump,of,the,optimized,plan,throws,exception;public,static,string,optimizer,plan,as,json,plan,plan,throws,exception,local,executor,exec,new,local,executor,try,exec,start,pact,compiler,pc,new,pact,compiler,new,data,statistics,optimized,plan,op,pc,compile,plan,plan,jsondump,generator,gen,new,plan,jsondump,generator,return,gen,get,optimizer,plan,as,json,op,finally,exec,stop
LocalExecutor -> public static String optimizerPlanAsJSON(Plan plan) throws Exception;1411473593;Returns a JSON dump of the optimized plan.__@param plan_The program's plan._@return JSON dump of the optimized plan._@throws Exception;public static String optimizerPlanAsJSON(Plan plan) throws Exception {_		LocalExecutor exec = new LocalExecutor()__		try {_			exec.start()__			PactCompiler pc = new PactCompiler(new DataStatistics())__			OptimizedPlan op = pc.compile(plan)__			PlanJSONDumpGenerator gen = new PlanJSONDumpGenerator()___			return gen.getOptimizerPlanAsJSON(op)__		} finally {_			exec.stop()__		}_	};returns,a,json,dump,of,the,optimized,plan,param,plan,the,program,s,plan,return,json,dump,of,the,optimized,plan,throws,exception;public,static,string,optimizer,plan,as,json,plan,plan,throws,exception,local,executor,exec,new,local,executor,try,exec,start,pact,compiler,pc,new,pact,compiler,new,data,statistics,optimized,plan,op,pc,compile,plan,plan,jsondump,generator,gen,new,plan,jsondump,generator,return,gen,get,optimizer,plan,as,json,op,finally,exec,stop
LocalExecutor -> public static String optimizerPlanAsJSON(Plan plan) throws Exception;1418925507;Returns a JSON dump of the optimized plan.__@param plan_The program's plan._@return JSON dump of the optimized plan._@throws Exception;public static String optimizerPlanAsJSON(Plan plan) throws Exception {_		LocalExecutor exec = new LocalExecutor()__		try {_			exec.start()__			PactCompiler pc = new PactCompiler(new DataStatistics())__			OptimizedPlan op = pc.compile(plan)__			PlanJSONDumpGenerator gen = new PlanJSONDumpGenerator()___			return gen.getOptimizerPlanAsJSON(op)__		} finally {_			exec.stop()__		}_	};returns,a,json,dump,of,the,optimized,plan,param,plan,the,program,s,plan,return,json,dump,of,the,optimized,plan,throws,exception;public,static,string,optimizer,plan,as,json,plan,plan,throws,exception,local,executor,exec,new,local,executor,try,exec,start,pact,compiler,pc,new,pact,compiler,new,data,statistics,optimized,plan,op,pc,compile,plan,plan,jsondump,generator,gen,new,plan,jsondump,generator,return,gen,get,optimizer,plan,as,json,op,finally,exec,stop
LocalExecutor -> public static String optimizerPlanAsJSON(Plan plan) throws Exception;1418925507;Returns a JSON dump of the optimized plan.__@param plan_The program's plan._@return JSON dump of the optimized plan._@throws Exception;public static String optimizerPlanAsJSON(Plan plan) throws Exception {_		LocalExecutor exec = new LocalExecutor()__		try {_			exec.start()__			PactCompiler pc = new PactCompiler(new DataStatistics())__			OptimizedPlan op = pc.compile(plan)__			PlanJSONDumpGenerator gen = new PlanJSONDumpGenerator()___			return gen.getOptimizerPlanAsJSON(op)__		} finally {_			exec.stop()__		}_	};returns,a,json,dump,of,the,optimized,plan,param,plan,the,program,s,plan,return,json,dump,of,the,optimized,plan,throws,exception;public,static,string,optimizer,plan,as,json,plan,plan,throws,exception,local,executor,exec,new,local,executor,try,exec,start,pact,compiler,pc,new,pact,compiler,new,data,statistics,optimized,plan,op,pc,compile,plan,plan,jsondump,generator,gen,new,plan,jsondump,generator,return,gen,get,optimizer,plan,as,json,op,finally,exec,stop
LocalExecutor -> public static String optimizerPlanAsJSON(Plan plan) throws Exception;1418925508;Returns a JSON dump of the optimized plan.__@param plan_The program's plan._@return JSON dump of the optimized plan._@throws Exception;public static String optimizerPlanAsJSON(Plan plan) throws Exception {_		LocalExecutor exec = new LocalExecutor()__		try {_			exec.start()__			PactCompiler pc = new PactCompiler(new DataStatistics())__			OptimizedPlan op = pc.compile(plan)__			PlanJSONDumpGenerator gen = new PlanJSONDumpGenerator()___			return gen.getOptimizerPlanAsJSON(op)__		} finally {_			exec.stop()__		}_	};returns,a,json,dump,of,the,optimized,plan,param,plan,the,program,s,plan,return,json,dump,of,the,optimized,plan,throws,exception;public,static,string,optimizer,plan,as,json,plan,plan,throws,exception,local,executor,exec,new,local,executor,try,exec,start,pact,compiler,pc,new,pact,compiler,new,data,statistics,optimized,plan,op,pc,compile,plan,plan,jsondump,generator,gen,new,plan,jsondump,generator,return,gen,get,optimizer,plan,as,json,op,finally,exec,stop
LocalExecutor -> public static String optimizerPlanAsJSON(Plan plan) throws Exception;1418925508;Returns a JSON dump of the optimized plan.__@param plan_The program's plan._@return JSON dump of the optimized plan._@throws Exception;public static String optimizerPlanAsJSON(Plan plan) throws Exception {_		LocalExecutor exec = new LocalExecutor()__		try {_			exec.start()__			PactCompiler pc = new PactCompiler(new DataStatistics())__			OptimizedPlan op = pc.compile(plan)__			PlanJSONDumpGenerator gen = new PlanJSONDumpGenerator()___			return gen.getOptimizerPlanAsJSON(op)__		} finally {_			exec.stop()__		}_	};returns,a,json,dump,of,the,optimized,plan,param,plan,the,program,s,plan,return,json,dump,of,the,optimized,plan,throws,exception;public,static,string,optimizer,plan,as,json,plan,plan,throws,exception,local,executor,exec,new,local,executor,try,exec,start,pact,compiler,pc,new,pact,compiler,new,data,statistics,optimized,plan,op,pc,compile,plan,plan,jsondump,generator,gen,new,plan,jsondump,generator,return,gen,get,optimizer,plan,as,json,op,finally,exec,stop
LocalExecutor -> public static String optimizerPlanAsJSON(Plan plan) throws Exception;1418925510;Returns a JSON dump of the optimized plan.__@param plan_The program's plan._@return JSON dump of the optimized plan._@throws Exception;public static String optimizerPlanAsJSON(Plan plan) throws Exception {_		LocalExecutor exec = new LocalExecutor()__		try {_			exec.start()__			PactCompiler pc = new PactCompiler(new DataStatistics())__			OptimizedPlan op = pc.compile(plan)__			PlanJSONDumpGenerator gen = new PlanJSONDumpGenerator()___			return gen.getOptimizerPlanAsJSON(op)__		} finally {_			exec.stop()__		}_	};returns,a,json,dump,of,the,optimized,plan,param,plan,the,program,s,plan,return,json,dump,of,the,optimized,plan,throws,exception;public,static,string,optimizer,plan,as,json,plan,plan,throws,exception,local,executor,exec,new,local,executor,try,exec,start,pact,compiler,pc,new,pact,compiler,new,data,statistics,optimized,plan,op,pc,compile,plan,plan,jsondump,generator,gen,new,plan,jsondump,generator,return,gen,get,optimizer,plan,as,json,op,finally,exec,stop
LocalExecutor -> public static String optimizerPlanAsJSON(Plan plan) throws Exception;1418925511;Returns a JSON dump of the optimized plan.__@param plan_The program's plan._@return JSON dump of the optimized plan._@throws Exception;public static String optimizerPlanAsJSON(Plan plan) throws Exception {_		LocalExecutor exec = new LocalExecutor()__		try {_			exec.start()__			PactCompiler pc = new PactCompiler(new DataStatistics())__			OptimizedPlan op = pc.compile(plan)__			PlanJSONDumpGenerator gen = new PlanJSONDumpGenerator()___			return gen.getOptimizerPlanAsJSON(op)__		} finally {_			exec.stop()__		}_	};returns,a,json,dump,of,the,optimized,plan,param,plan,the,program,s,plan,return,json,dump,of,the,optimized,plan,throws,exception;public,static,string,optimizer,plan,as,json,plan,plan,throws,exception,local,executor,exec,new,local,executor,try,exec,start,pact,compiler,pc,new,pact,compiler,new,data,statistics,optimized,plan,op,pc,compile,plan,plan,jsondump,generator,gen,new,plan,jsondump,generator,return,gen,get,optimizer,plan,as,json,op,finally,exec,stop
LocalExecutor -> public static String optimizerPlanAsJSON(Plan plan) throws Exception;1418925512;Returns a JSON dump of the optimized plan.__@param plan_The program's plan._@return JSON dump of the optimized plan._@throws Exception;public static String optimizerPlanAsJSON(Plan plan) throws Exception {_		LocalExecutor exec = new LocalExecutor()__		try {_			exec.start()__			PactCompiler pc = new PactCompiler(new DataStatistics())__			OptimizedPlan op = pc.compile(plan)__			PlanJSONDumpGenerator gen = new PlanJSONDumpGenerator()___			return gen.getOptimizerPlanAsJSON(op)__		} finally {_			exec.stop()__		}_	};returns,a,json,dump,of,the,optimized,plan,param,plan,the,program,s,plan,return,json,dump,of,the,optimized,plan,throws,exception;public,static,string,optimizer,plan,as,json,plan,plan,throws,exception,local,executor,exec,new,local,executor,try,exec,start,pact,compiler,pc,new,pact,compiler,new,data,statistics,optimized,plan,op,pc,compile,plan,plan,jsondump,generator,gen,new,plan,jsondump,generator,return,gen,get,optimizer,plan,as,json,op,finally,exec,stop
LocalExecutor -> public static String optimizerPlanAsJSON(Plan plan) throws Exception;1418925513;Returns a JSON dump of the optimized plan.__@param plan_The program's plan._@return JSON dump of the optimized plan._@throws Exception;public static String optimizerPlanAsJSON(Plan plan) throws Exception {_		LocalExecutor exec = new LocalExecutor()__		try {_			exec.start()__			PactCompiler pc = new PactCompiler(new DataStatistics())__			OptimizedPlan op = pc.compile(plan)__			PlanJSONDumpGenerator gen = new PlanJSONDumpGenerator()___			return gen.getOptimizerPlanAsJSON(op)__		} finally {_			exec.stop()__		}_	};returns,a,json,dump,of,the,optimized,plan,param,plan,the,program,s,plan,return,json,dump,of,the,optimized,plan,throws,exception;public,static,string,optimizer,plan,as,json,plan,plan,throws,exception,local,executor,exec,new,local,executor,try,exec,start,pact,compiler,pc,new,pact,compiler,new,data,statistics,optimized,plan,op,pc,compile,plan,plan,jsondump,generator,gen,new,plan,jsondump,generator,return,gen,get,optimizer,plan,as,json,op,finally,exec,stop
LocalExecutor -> public static String optimizerPlanAsJSON(Plan plan) throws Exception;1426843273;Returns a JSON dump of the optimized plan.__@param plan_The program's plan._@return JSON dump of the optimized plan._@throws Exception;public static String optimizerPlanAsJSON(Plan plan) throws Exception {_		LocalExecutor exec = new LocalExecutor()__		try {_			exec.start()__			PactCompiler pc = new PactCompiler(new DataStatistics())__			OptimizedPlan op = pc.compile(plan)__			PlanJSONDumpGenerator gen = new PlanJSONDumpGenerator()___			return gen.getOptimizerPlanAsJSON(op)__		} finally {_			exec.stop()__		}_	};returns,a,json,dump,of,the,optimized,plan,param,plan,the,program,s,plan,return,json,dump,of,the,optimized,plan,throws,exception;public,static,string,optimizer,plan,as,json,plan,plan,throws,exception,local,executor,exec,new,local,executor,try,exec,start,pact,compiler,pc,new,pact,compiler,new,data,statistics,optimized,plan,op,pc,compile,plan,plan,jsondump,generator,gen,new,plan,jsondump,generator,return,gen,get,optimizer,plan,as,json,op,finally,exec,stop
LocalExecutor -> public static String optimizerPlanAsJSON(Plan plan) throws Exception;1426843274;Returns a JSON dump of the optimized plan.__@param plan_The program's plan._@return JSON dump of the optimized plan._@throws Exception;public static String optimizerPlanAsJSON(Plan plan) throws Exception {_		LocalExecutor exec = new LocalExecutor()__		try {_			exec.start()__			PactCompiler pc = new PactCompiler(new DataStatistics())__			OptimizedPlan op = pc.compile(plan)__			PlanJSONDumpGenerator gen = new PlanJSONDumpGenerator()___			return gen.getOptimizerPlanAsJSON(op)__		} finally {_			exec.stop()__		}_	};returns,a,json,dump,of,the,optimized,plan,param,plan,the,program,s,plan,return,json,dump,of,the,optimized,plan,throws,exception;public,static,string,optimizer,plan,as,json,plan,plan,throws,exception,local,executor,exec,new,local,executor,try,exec,start,pact,compiler,pc,new,pact,compiler,new,data,statistics,optimized,plan,op,pc,compile,plan,plan,jsondump,generator,gen,new,plan,jsondump,generator,return,gen,get,optimizer,plan,as,json,op,finally,exec,stop
LocalExecutor -> public static String optimizerPlanAsJSON(Plan plan) throws Exception;1426843274;Returns a JSON dump of the optimized plan.__@param plan_The program's plan._@return JSON dump of the optimized plan._@throws Exception;public static String optimizerPlanAsJSON(Plan plan) throws Exception {_		LocalExecutor exec = new LocalExecutor()__		try {_			exec.start()__			Optimizer pc = new Optimizer(new DataStatistics())__			OptimizedPlan op = pc.compile(plan)__			PlanJSONDumpGenerator gen = new PlanJSONDumpGenerator()___			return gen.getOptimizerPlanAsJSON(op)__		} finally {_			exec.stop()__		}_	};returns,a,json,dump,of,the,optimized,plan,param,plan,the,program,s,plan,return,json,dump,of,the,optimized,plan,throws,exception;public,static,string,optimizer,plan,as,json,plan,plan,throws,exception,local,executor,exec,new,local,executor,try,exec,start,optimizer,pc,new,optimizer,new,data,statistics,optimized,plan,op,pc,compile,plan,plan,jsondump,generator,gen,new,plan,jsondump,generator,return,gen,get,optimizer,plan,as,json,op,finally,exec,stop
LocalExecutor -> public static String optimizerPlanAsJSON(Plan plan) throws Exception;1427784999;Returns a JSON dump of the optimized plan.__@param plan_The program's plan._@return JSON dump of the optimized plan._@throws Exception;public static String optimizerPlanAsJSON(Plan plan) throws Exception {_		LocalExecutor exec = new LocalExecutor()__		try {_			exec.start()__			Optimizer pc = new Optimizer(new DataStatistics(), exec.flink.getConfiguration())__			OptimizedPlan op = pc.compile(plan)__			PlanJSONDumpGenerator gen = new PlanJSONDumpGenerator()___			return gen.getOptimizerPlanAsJSON(op)__		} finally {_			exec.stop()__		}_	};returns,a,json,dump,of,the,optimized,plan,param,plan,the,program,s,plan,return,json,dump,of,the,optimized,plan,throws,exception;public,static,string,optimizer,plan,as,json,plan,plan,throws,exception,local,executor,exec,new,local,executor,try,exec,start,optimizer,pc,new,optimizer,new,data,statistics,exec,flink,get,configuration,optimized,plan,op,pc,compile,plan,plan,jsondump,generator,gen,new,plan,jsondump,generator,return,gen,get,optimizer,plan,as,json,op,finally,exec,stop
LocalExecutor -> public static String optimizerPlanAsJSON(Plan plan) throws Exception;1427958028;Returns a JSON dump of the optimized plan.__@param plan_The program's plan._@return JSON dump of the optimized plan._@throws Exception;public static String optimizerPlanAsJSON(Plan plan) throws Exception {_		LocalExecutor exec = new LocalExecutor()__		try {_			exec.start()__			Optimizer pc = new Optimizer(new DataStatistics(), exec.flink.getConfiguration())__			OptimizedPlan op = pc.compile(plan)__			PlanJSONDumpGenerator gen = new PlanJSONDumpGenerator()___			return gen.getOptimizerPlanAsJSON(op)__		} finally {_			exec.stop()__		}_	};returns,a,json,dump,of,the,optimized,plan,param,plan,the,program,s,plan,return,json,dump,of,the,optimized,plan,throws,exception;public,static,string,optimizer,plan,as,json,plan,plan,throws,exception,local,executor,exec,new,local,executor,try,exec,start,optimizer,pc,new,optimizer,new,data,statistics,exec,flink,get,configuration,optimized,plan,op,pc,compile,plan,plan,jsondump,generator,gen,new,plan,jsondump,generator,return,gen,get,optimizer,plan,as,json,op,finally,exec,stop
LocalExecutor -> public static String optimizerPlanAsJSON(Plan plan) throws Exception;1428663519;Returns a JSON dump of the optimized plan.__@param plan_The program's plan._@return JSON dump of the optimized plan._@throws Exception;public static String optimizerPlanAsJSON(Plan plan) throws Exception {_		LocalExecutor exec = new LocalExecutor()__		try {_			exec.start()__			Optimizer pc = new Optimizer(new DataStatistics(), exec.flink.getConfiguration())__			OptimizedPlan op = pc.compile(plan)__			PlanJSONDumpGenerator gen = new PlanJSONDumpGenerator()___			return gen.getOptimizerPlanAsJSON(op)__		} finally {_			exec.stop()__		}_	};returns,a,json,dump,of,the,optimized,plan,param,plan,the,program,s,plan,return,json,dump,of,the,optimized,plan,throws,exception;public,static,string,optimizer,plan,as,json,plan,plan,throws,exception,local,executor,exec,new,local,executor,try,exec,start,optimizer,pc,new,optimizer,new,data,statistics,exec,flink,get,configuration,optimized,plan,op,pc,compile,plan,plan,jsondump,generator,gen,new,plan,jsondump,generator,return,gen,get,optimizer,plan,as,json,op,finally,exec,stop
LocalExecutor -> public static String optimizerPlanAsJSON(Plan plan) throws Exception;1428935901;Returns a JSON dump of the optimized plan.__@param plan_The program's plan._@return JSON dump of the optimized plan._@throws Exception;public static String optimizerPlanAsJSON(Plan plan) throws Exception {_		LocalExecutor exec = new LocalExecutor()__		try {_			exec.start()__			Optimizer pc = new Optimizer(new DataStatistics(), exec.flink.getConfiguration())__			OptimizedPlan op = pc.compile(plan)__			PlanJSONDumpGenerator gen = new PlanJSONDumpGenerator()___			return gen.getOptimizerPlanAsJSON(op)__		} finally {_			exec.stop()__		}_	};returns,a,json,dump,of,the,optimized,plan,param,plan,the,program,s,plan,return,json,dump,of,the,optimized,plan,throws,exception;public,static,string,optimizer,plan,as,json,plan,plan,throws,exception,local,executor,exec,new,local,executor,try,exec,start,optimizer,pc,new,optimizer,new,data,statistics,exec,flink,get,configuration,optimized,plan,op,pc,compile,plan,plan,jsondump,generator,gen,new,plan,jsondump,generator,return,gen,get,optimizer,plan,as,json,op,finally,exec,stop
LocalExecutor -> public static String optimizerPlanAsJSON(Plan plan) throws Exception;1428935901;Returns a JSON dump of the optimized plan.__@param plan_The program's plan._@return JSON dump of the optimized plan._@throws Exception;public static String optimizerPlanAsJSON(Plan plan) throws Exception {_		LocalExecutor exec = new LocalExecutor()__		try {_			exec.start()__			Optimizer pc = new Optimizer(new DataStatistics(), exec.flink.getConfiguration())__			OptimizedPlan op = pc.compile(plan)__			PlanJSONDumpGenerator gen = new PlanJSONDumpGenerator()___			return gen.getOptimizerPlanAsJSON(op)__		} finally {_			exec.stop()__		}_	};returns,a,json,dump,of,the,optimized,plan,param,plan,the,program,s,plan,return,json,dump,of,the,optimized,plan,throws,exception;public,static,string,optimizer,plan,as,json,plan,plan,throws,exception,local,executor,exec,new,local,executor,try,exec,start,optimizer,pc,new,optimizer,new,data,statistics,exec,flink,get,configuration,optimized,plan,op,pc,compile,plan,plan,jsondump,generator,gen,new,plan,jsondump,generator,return,gen,get,optimizer,plan,as,json,op,finally,exec,stop
LocalExecutor -> public static String optimizerPlanAsJSON(Plan plan) throws Exception;1440951699;Returns a JSON dump of the optimized plan.__@param plan_The program's plan._@return JSON dump of the optimized plan._@throws Exception;public static String optimizerPlanAsJSON(Plan plan) throws Exception {_		LocalExecutor exec = new LocalExecutor()__		try {_			exec.start()__			Optimizer pc = new Optimizer(new DataStatistics(), exec.flink.getConfiguration())__			OptimizedPlan op = pc.compile(plan)__			PlanJSONDumpGenerator gen = new PlanJSONDumpGenerator()___			return gen.getOptimizerPlanAsJSON(op)__		} finally {_			exec.stop()__		}_	};returns,a,json,dump,of,the,optimized,plan,param,plan,the,program,s,plan,return,json,dump,of,the,optimized,plan,throws,exception;public,static,string,optimizer,plan,as,json,plan,plan,throws,exception,local,executor,exec,new,local,executor,try,exec,start,optimizer,pc,new,optimizer,new,data,statistics,exec,flink,get,configuration,optimized,plan,op,pc,compile,plan,plan,jsondump,generator,gen,new,plan,jsondump,generator,return,gen,get,optimizer,plan,as,json,op,finally,exec,stop
LocalExecutor -> public static String optimizerPlanAsJSON(Plan plan) throws Exception;1441011751;Returns a JSON dump of the optimized plan.__@param plan_The program's plan._@return JSON dump of the optimized plan._@throws Exception;public static String optimizerPlanAsJSON(Plan plan) throws Exception {_		LocalExecutor exec = new LocalExecutor()__		try {_			exec.start()__			Optimizer pc = new Optimizer(new DataStatistics(), exec.flink.configuration())__			OptimizedPlan op = pc.compile(plan)__			PlanJSONDumpGenerator gen = new PlanJSONDumpGenerator()___			return gen.getOptimizerPlanAsJSON(op)__		} finally {_			exec.stop()__		}_	};returns,a,json,dump,of,the,optimized,plan,param,plan,the,program,s,plan,return,json,dump,of,the,optimized,plan,throws,exception;public,static,string,optimizer,plan,as,json,plan,plan,throws,exception,local,executor,exec,new,local,executor,try,exec,start,optimizer,pc,new,optimizer,new,data,statistics,exec,flink,configuration,optimized,plan,op,pc,compile,plan,plan,jsondump,generator,gen,new,plan,jsondump,generator,return,gen,get,optimizer,plan,as,json,op,finally,exec,stop
LocalExecutor -> public static String optimizerPlanAsJSON(Plan plan) throws Exception;1441614857;Returns a JSON dump of the optimized plan.__@param plan_The program's plan._@return JSON dump of the optimized plan._@throws Exception;public static String optimizerPlanAsJSON(Plan plan) throws Exception {_		LocalExecutor exec = new LocalExecutor()__		try {_			exec.start()__			Optimizer pc = new Optimizer(new DataStatistics(), exec.flink.configuration())__			OptimizedPlan op = pc.compile(plan)__			PlanJSONDumpGenerator gen = new PlanJSONDumpGenerator()___			return gen.getOptimizerPlanAsJSON(op)__		} finally {_			exec.stop()__		}_	};returns,a,json,dump,of,the,optimized,plan,param,plan,the,program,s,plan,return,json,dump,of,the,optimized,plan,throws,exception;public,static,string,optimizer,plan,as,json,plan,plan,throws,exception,local,executor,exec,new,local,executor,try,exec,start,optimizer,pc,new,optimizer,new,data,statistics,exec,flink,configuration,optimized,plan,op,pc,compile,plan,plan,jsondump,generator,gen,new,plan,jsondump,generator,return,gen,get,optimizer,plan,as,json,op,finally,exec,stop
LocalExecutor -> public static String optimizerPlanAsJSON(Plan plan) throws Exception;1442944546;Creates a JSON representation of the given dataflow's execution plan.__@param plan The dataflow plan._@return The dataflow's execution plan, as a JSON string._@throws Exception Thrown, if the optimization process that creates the execution plan failed.;public static String optimizerPlanAsJSON(Plan plan) throws Exception {_		final int parallelism = plan.getDefaultParallelism() == -1 ? 1 : plan.getDefaultParallelism()___		Optimizer pc = new Optimizer(new DataStatistics(), new Configuration())__		pc.setDefaultParallelism(parallelism)__		OptimizedPlan op = pc.compile(plan)___		return new PlanJSONDumpGenerator().getOptimizerPlanAsJSON(op)__	};creates,a,json,representation,of,the,given,dataflow,s,execution,plan,param,plan,the,dataflow,plan,return,the,dataflow,s,execution,plan,as,a,json,string,throws,exception,thrown,if,the,optimization,process,that,creates,the,execution,plan,failed;public,static,string,optimizer,plan,as,json,plan,plan,throws,exception,final,int,parallelism,plan,get,default,parallelism,1,1,plan,get,default,parallelism,optimizer,pc,new,optimizer,new,data,statistics,new,configuration,pc,set,default,parallelism,parallelism,optimized,plan,op,pc,compile,plan,return,new,plan,jsondump,generator,get,optimizer,plan,as,json,op
LocalExecutor -> public static String optimizerPlanAsJSON(Plan plan) throws Exception;1443682842;Creates a JSON representation of the given dataflow's execution plan.__@param plan The dataflow plan._@return The dataflow's execution plan, as a JSON string._@throws Exception Thrown, if the optimization process that creates the execution plan failed.;public static String optimizerPlanAsJSON(Plan plan) throws Exception {_		final int parallelism = plan.getDefaultParallelism() == -1 ? 1 : plan.getDefaultParallelism()___		Optimizer pc = new Optimizer(new DataStatistics(), new Configuration())__		pc.setDefaultParallelism(parallelism)__		OptimizedPlan op = pc.compile(plan)___		return new PlanJSONDumpGenerator().getOptimizerPlanAsJSON(op)__	};creates,a,json,representation,of,the,given,dataflow,s,execution,plan,param,plan,the,dataflow,plan,return,the,dataflow,s,execution,plan,as,a,json,string,throws,exception,thrown,if,the,optimization,process,that,creates,the,execution,plan,failed;public,static,string,optimizer,plan,as,json,plan,plan,throws,exception,final,int,parallelism,plan,get,default,parallelism,1,1,plan,get,default,parallelism,optimizer,pc,new,optimizer,new,data,statistics,new,configuration,pc,set,default,parallelism,parallelism,optimized,plan,op,pc,compile,plan,return,new,plan,jsondump,generator,get,optimizer,plan,as,json,op
LocalExecutor -> public static String optimizerPlanAsJSON(Plan plan) throws Exception;1460563153;Creates a JSON representation of the given dataflow's execution plan.__@param plan The dataflow plan._@return The dataflow's execution plan, as a JSON string._@throws Exception Thrown, if the optimization process that creates the execution plan failed.;public static String optimizerPlanAsJSON(Plan plan) throws Exception {_		final int parallelism = plan.getDefaultParallelism() == ExecutionConfig.PARALLELISM_DEFAULT ? 1 : plan.getDefaultParallelism()___		Optimizer pc = new Optimizer(new DataStatistics(), new Configuration())__		pc.setDefaultParallelism(parallelism)__		OptimizedPlan op = pc.compile(plan)___		return new PlanJSONDumpGenerator().getOptimizerPlanAsJSON(op)__	};creates,a,json,representation,of,the,given,dataflow,s,execution,plan,param,plan,the,dataflow,plan,return,the,dataflow,s,execution,plan,as,a,json,string,throws,exception,thrown,if,the,optimization,process,that,creates,the,execution,plan,failed;public,static,string,optimizer,plan,as,json,plan,plan,throws,exception,final,int,parallelism,plan,get,default,parallelism,execution,config,1,plan,get,default,parallelism,optimizer,pc,new,optimizer,new,data,statistics,new,configuration,pc,set,default,parallelism,parallelism,optimized,plan,op,pc,compile,plan,return,new,plan,jsondump,generator,get,optimizer,plan,as,json,op
LocalExecutor -> public static String optimizerPlanAsJSON(Plan plan) throws Exception;1477989375;Creates a JSON representation of the given dataflow's execution plan.__@param plan The dataflow plan._@return The dataflow's execution plan, as a JSON string._@throws Exception Thrown, if the optimization process that creates the execution plan failed.;public static String optimizerPlanAsJSON(Plan plan) throws Exception {_		final int parallelism = plan.getDefaultParallelism() == ExecutionConfig.PARALLELISM_DEFAULT ? 1 : plan.getDefaultParallelism()___		Optimizer pc = new Optimizer(new DataStatistics(), new Configuration())__		pc.setDefaultParallelism(parallelism)__		OptimizedPlan op = pc.compile(plan)___		return new PlanJSONDumpGenerator().getOptimizerPlanAsJSON(op)__	};creates,a,json,representation,of,the,given,dataflow,s,execution,plan,param,plan,the,dataflow,plan,return,the,dataflow,s,execution,plan,as,a,json,string,throws,exception,thrown,if,the,optimization,process,that,creates,the,execution,plan,failed;public,static,string,optimizer,plan,as,json,plan,plan,throws,exception,final,int,parallelism,plan,get,default,parallelism,execution,config,1,plan,get,default,parallelism,optimizer,pc,new,optimizer,new,data,statistics,new,configuration,pc,set,default,parallelism,parallelism,optimized,plan,op,pc,compile,plan,return,new,plan,jsondump,generator,get,optimizer,plan,as,json,op
LocalExecutor -> public static String optimizerPlanAsJSON(Plan plan) throws Exception;1492269386;Creates a JSON representation of the given dataflow's execution plan.__@param plan The dataflow plan._@return The dataflow's execution plan, as a JSON string._@throws Exception Thrown, if the optimization process that creates the execution plan failed.;public static String optimizerPlanAsJSON(Plan plan) throws Exception {_		final int parallelism = plan.getDefaultParallelism() == ExecutionConfig.PARALLELISM_DEFAULT ? 1 : plan.getDefaultParallelism()___		Optimizer pc = new Optimizer(new DataStatistics(), new Configuration())__		pc.setDefaultParallelism(parallelism)__		OptimizedPlan op = pc.compile(plan)___		return new PlanJSONDumpGenerator().getOptimizerPlanAsJSON(op)__	};creates,a,json,representation,of,the,given,dataflow,s,execution,plan,param,plan,the,dataflow,plan,return,the,dataflow,s,execution,plan,as,a,json,string,throws,exception,thrown,if,the,optimization,process,that,creates,the,execution,plan,failed;public,static,string,optimizer,plan,as,json,plan,plan,throws,exception,final,int,parallelism,plan,get,default,parallelism,execution,config,1,plan,get,default,parallelism,optimizer,pc,new,optimizer,new,data,statistics,new,configuration,pc,set,default,parallelism,parallelism,optimized,plan,op,pc,compile,plan,return,new,plan,jsondump,generator,get,optimizer,plan,as,json,op
LocalExecutor -> public static String optimizerPlanAsJSON(Plan plan) throws Exception;1495778594;Creates a JSON representation of the given dataflow's execution plan.__@param plan The dataflow plan._@return The dataflow's execution plan, as a JSON string._@throws Exception Thrown, if the optimization process that creates the execution plan failed.;public static String optimizerPlanAsJSON(Plan plan) throws Exception {_		final int parallelism = plan.getDefaultParallelism() == ExecutionConfig.PARALLELISM_DEFAULT ? 1 : plan.getDefaultParallelism()___		Optimizer pc = new Optimizer(new DataStatistics(), new Configuration())__		pc.setDefaultParallelism(parallelism)__		OptimizedPlan op = pc.compile(plan)___		return new PlanJSONDumpGenerator().getOptimizerPlanAsJSON(op)__	};creates,a,json,representation,of,the,given,dataflow,s,execution,plan,param,plan,the,dataflow,plan,return,the,dataflow,s,execution,plan,as,a,json,string,throws,exception,thrown,if,the,optimization,process,that,creates,the,execution,plan,failed;public,static,string,optimizer,plan,as,json,plan,plan,throws,exception,final,int,parallelism,plan,get,default,parallelism,execution,config,1,plan,get,default,parallelism,optimizer,pc,new,optimizer,new,data,statistics,new,configuration,pc,set,default,parallelism,parallelism,optimized,plan,op,pc,compile,plan,return,new,plan,jsondump,generator,get,optimizer,plan,as,json,op
LocalExecutor -> public static String optimizerPlanAsJSON(Plan plan) throws Exception;1499075301;Creates a JSON representation of the given dataflow's execution plan.__@param plan The dataflow plan._@return The dataflow's execution plan, as a JSON string._@throws Exception Thrown, if the optimization process that creates the execution plan failed.;public static String optimizerPlanAsJSON(Plan plan) throws Exception {_		final int parallelism = plan.getDefaultParallelism() == ExecutionConfig.PARALLELISM_DEFAULT ? 1 : plan.getDefaultParallelism()___		Optimizer pc = new Optimizer(new DataStatistics(), new Configuration())__		pc.setDefaultParallelism(parallelism)__		OptimizedPlan op = pc.compile(plan)___		return new PlanJSONDumpGenerator().getOptimizerPlanAsJSON(op)__	};creates,a,json,representation,of,the,given,dataflow,s,execution,plan,param,plan,the,dataflow,plan,return,the,dataflow,s,execution,plan,as,a,json,string,throws,exception,thrown,if,the,optimization,process,that,creates,the,execution,plan,failed;public,static,string,optimizer,plan,as,json,plan,plan,throws,exception,final,int,parallelism,plan,get,default,parallelism,execution,config,1,plan,get,default,parallelism,optimizer,pc,new,optimizer,new,data,statistics,new,configuration,pc,set,default,parallelism,parallelism,optimized,plan,op,pc,compile,plan,return,new,plan,jsondump,generator,get,optimizer,plan,as,json,op
LocalExecutor -> public static String optimizerPlanAsJSON(Plan plan) throws Exception;1518605788;Creates a JSON representation of the given dataflow's execution plan.__@param plan The dataflow plan._@return The dataflow's execution plan, as a JSON string._@throws Exception Thrown, if the optimization process that creates the execution plan failed.;public static String optimizerPlanAsJSON(Plan plan) throws Exception {_		final int parallelism = plan.getDefaultParallelism() == ExecutionConfig.PARALLELISM_DEFAULT ? 1 : plan.getDefaultParallelism()___		Optimizer pc = new Optimizer(new DataStatistics(), new Configuration())__		pc.setDefaultParallelism(parallelism)__		OptimizedPlan op = pc.compile(plan)___		return new PlanJSONDumpGenerator().getOptimizerPlanAsJSON(op)__	};creates,a,json,representation,of,the,given,dataflow,s,execution,plan,param,plan,the,dataflow,plan,return,the,dataflow,s,execution,plan,as,a,json,string,throws,exception,thrown,if,the,optimization,process,that,creates,the,execution,plan,failed;public,static,string,optimizer,plan,as,json,plan,plan,throws,exception,final,int,parallelism,plan,get,default,parallelism,execution,config,1,plan,get,default,parallelism,optimizer,pc,new,optimizer,new,data,statistics,new,configuration,pc,set,default,parallelism,parallelism,optimized,plan,op,pc,compile,plan,return,new,plan,jsondump,generator,get,optimizer,plan,as,json,op
LocalExecutor -> public static String optimizerPlanAsJSON(Plan plan) throws Exception;1519121818;Creates a JSON representation of the given dataflow's execution plan.__@param plan The dataflow plan._@return The dataflow's execution plan, as a JSON string._@throws Exception Thrown, if the optimization process that creates the execution plan failed.;public static String optimizerPlanAsJSON(Plan plan) throws Exception {_		final int parallelism = plan.getDefaultParallelism() == ExecutionConfig.PARALLELISM_DEFAULT ? 1 : plan.getDefaultParallelism()___		Optimizer pc = new Optimizer(new DataStatistics(), new Configuration())__		pc.setDefaultParallelism(parallelism)__		OptimizedPlan op = pc.compile(plan)___		return new PlanJSONDumpGenerator().getOptimizerPlanAsJSON(op)__	};creates,a,json,representation,of,the,given,dataflow,s,execution,plan,param,plan,the,dataflow,plan,return,the,dataflow,s,execution,plan,as,a,json,string,throws,exception,thrown,if,the,optimization,process,that,creates,the,execution,plan,failed;public,static,string,optimizer,plan,as,json,plan,plan,throws,exception,final,int,parallelism,plan,get,default,parallelism,execution,config,1,plan,get,default,parallelism,optimizer,pc,new,optimizer,new,data,statistics,new,configuration,pc,set,default,parallelism,parallelism,optimized,plan,op,pc,compile,plan,return,new,plan,jsondump,generator,get,optimizer,plan,as,json,op
LocalExecutor -> public static String optimizerPlanAsJSON(Plan plan) throws Exception;1519249745;Creates a JSON representation of the given dataflow's execution plan.__@param plan The dataflow plan._@return The dataflow's execution plan, as a JSON string._@throws Exception Thrown, if the optimization process that creates the execution plan failed.;public static String optimizerPlanAsJSON(Plan plan) throws Exception {_		final int parallelism = plan.getDefaultParallelism() == ExecutionConfig.PARALLELISM_DEFAULT ? 1 : plan.getDefaultParallelism()___		Optimizer pc = new Optimizer(new DataStatistics(), new Configuration())__		pc.setDefaultParallelism(parallelism)__		OptimizedPlan op = pc.compile(plan)___		return new PlanJSONDumpGenerator().getOptimizerPlanAsJSON(op)__	};creates,a,json,representation,of,the,given,dataflow,s,execution,plan,param,plan,the,dataflow,plan,return,the,dataflow,s,execution,plan,as,a,json,string,throws,exception,thrown,if,the,optimization,process,that,creates,the,execution,plan,failed;public,static,string,optimizer,plan,as,json,plan,plan,throws,exception,final,int,parallelism,plan,get,default,parallelism,execution,config,1,plan,get,default,parallelism,optimizer,pc,new,optimizer,new,data,statistics,new,configuration,pc,set,default,parallelism,parallelism,optimized,plan,op,pc,compile,plan,return,new,plan,jsondump,generator,get,optimizer,plan,as,json,op
LocalExecutor -> public static String optimizerPlanAsJSON(Plan plan) throws Exception;1522681180;Creates a JSON representation of the given dataflow's execution plan.__@param plan The dataflow plan._@return The dataflow's execution plan, as a JSON string._@throws Exception Thrown, if the optimization process that creates the execution plan failed.;public static String optimizerPlanAsJSON(Plan plan) throws Exception {_		final int parallelism = plan.getDefaultParallelism() == ExecutionConfig.PARALLELISM_DEFAULT ? 1 : plan.getDefaultParallelism()___		Optimizer pc = new Optimizer(new DataStatistics(), new Configuration())__		pc.setDefaultParallelism(parallelism)__		OptimizedPlan op = pc.compile(plan)___		return new PlanJSONDumpGenerator().getOptimizerPlanAsJSON(op)__	};creates,a,json,representation,of,the,given,dataflow,s,execution,plan,param,plan,the,dataflow,plan,return,the,dataflow,s,execution,plan,as,a,json,string,throws,exception,thrown,if,the,optimization,process,that,creates,the,execution,plan,failed;public,static,string,optimizer,plan,as,json,plan,plan,throws,exception,final,int,parallelism,plan,get,default,parallelism,execution,config,1,plan,get,default,parallelism,optimizer,pc,new,optimizer,new,data,statistics,new,configuration,pc,set,default,parallelism,parallelism,optimized,plan,op,pc,compile,plan,return,new,plan,jsondump,generator,get,optimizer,plan,as,json,op
LocalExecutor -> public static String optimizerPlanAsJSON(Plan plan) throws Exception;1524085355;Creates a JSON representation of the given dataflow's execution plan.__@param plan The dataflow plan._@return The dataflow's execution plan, as a JSON string._@throws Exception Thrown, if the optimization process that creates the execution plan failed.;public static String optimizerPlanAsJSON(Plan plan) throws Exception {_		final int parallelism = plan.getDefaultParallelism() == ExecutionConfig.PARALLELISM_DEFAULT ? 1 : plan.getDefaultParallelism()___		Optimizer pc = new Optimizer(new DataStatistics(), new Configuration())__		pc.setDefaultParallelism(parallelism)__		OptimizedPlan op = pc.compile(plan)___		return new PlanJSONDumpGenerator().getOptimizerPlanAsJSON(op)__	};creates,a,json,representation,of,the,given,dataflow,s,execution,plan,param,plan,the,dataflow,plan,return,the,dataflow,s,execution,plan,as,a,json,string,throws,exception,thrown,if,the,optimization,process,that,creates,the,execution,plan,failed;public,static,string,optimizer,plan,as,json,plan,plan,throws,exception,final,int,parallelism,plan,get,default,parallelism,execution,config,1,plan,get,default,parallelism,optimizer,pc,new,optimizer,new,data,statistics,new,configuration,pc,set,default,parallelism,parallelism,optimized,plan,op,pc,compile,plan,return,new,plan,jsondump,generator,get,optimizer,plan,as,json,op
LocalExecutor -> public static String optimizerPlanAsJSON(Plan plan) throws Exception;1524124694;Creates a JSON representation of the given dataflow's execution plan.__@param plan The dataflow plan._@return The dataflow's execution plan, as a JSON string._@throws Exception Thrown, if the optimization process that creates the execution plan failed.;public static String optimizerPlanAsJSON(Plan plan) throws Exception {_		final int parallelism = plan.getDefaultParallelism() == ExecutionConfig.PARALLELISM_DEFAULT ? 1 : plan.getDefaultParallelism()___		Optimizer pc = new Optimizer(new DataStatistics(), new Configuration())__		pc.setDefaultParallelism(parallelism)__		OptimizedPlan op = pc.compile(plan)___		return new PlanJSONDumpGenerator().getOptimizerPlanAsJSON(op)__	};creates,a,json,representation,of,the,given,dataflow,s,execution,plan,param,plan,the,dataflow,plan,return,the,dataflow,s,execution,plan,as,a,json,string,throws,exception,thrown,if,the,optimization,process,that,creates,the,execution,plan,failed;public,static,string,optimizer,plan,as,json,plan,plan,throws,exception,final,int,parallelism,plan,get,default,parallelism,execution,config,1,plan,get,default,parallelism,optimizer,pc,new,optimizer,new,data,statistics,new,configuration,pc,set,default,parallelism,parallelism,optimized,plan,op,pc,compile,plan,return,new,plan,jsondump,generator,get,optimizer,plan,as,json,op
LocalExecutor -> public static String optimizerPlanAsJSON(Plan plan) throws Exception;1524570317;Creates a JSON representation of the given dataflow's execution plan.__@param plan The dataflow plan._@return The dataflow's execution plan, as a JSON string._@throws Exception Thrown, if the optimization process that creates the execution plan failed.;public static String optimizerPlanAsJSON(Plan plan) throws Exception {_		final int parallelism = plan.getDefaultParallelism() == ExecutionConfig.PARALLELISM_DEFAULT ? 1 : plan.getDefaultParallelism()___		Optimizer pc = new Optimizer(new DataStatistics(), new Configuration())__		pc.setDefaultParallelism(parallelism)__		OptimizedPlan op = pc.compile(plan)___		return new PlanJSONDumpGenerator().getOptimizerPlanAsJSON(op)__	};creates,a,json,representation,of,the,given,dataflow,s,execution,plan,param,plan,the,dataflow,plan,return,the,dataflow,s,execution,plan,as,a,json,string,throws,exception,thrown,if,the,optimization,process,that,creates,the,execution,plan,failed;public,static,string,optimizer,plan,as,json,plan,plan,throws,exception,final,int,parallelism,plan,get,default,parallelism,execution,config,1,plan,get,default,parallelism,optimizer,pc,new,optimizer,new,data,statistics,new,configuration,pc,set,default,parallelism,parallelism,optimized,plan,op,pc,compile,plan,return,new,plan,jsondump,generator,get,optimizer,plan,as,json,op
LocalExecutor -> public static String optimizerPlanAsJSON(Plan plan) throws Exception;1529682304;Creates a JSON representation of the given dataflow's execution plan.__@param plan The dataflow plan._@return The dataflow's execution plan, as a JSON string._@throws Exception Thrown, if the optimization process that creates the execution plan failed.;public static String optimizerPlanAsJSON(Plan plan) throws Exception {_		final int parallelism = plan.getDefaultParallelism() == ExecutionConfig.PARALLELISM_DEFAULT ? 1 : plan.getDefaultParallelism()___		Optimizer pc = new Optimizer(new DataStatistics(), new Configuration())__		pc.setDefaultParallelism(parallelism)__		OptimizedPlan op = pc.compile(plan)___		return new PlanJSONDumpGenerator().getOptimizerPlanAsJSON(op)__	};creates,a,json,representation,of,the,given,dataflow,s,execution,plan,param,plan,the,dataflow,plan,return,the,dataflow,s,execution,plan,as,a,json,string,throws,exception,thrown,if,the,optimization,process,that,creates,the,execution,plan,failed;public,static,string,optimizer,plan,as,json,plan,plan,throws,exception,final,int,parallelism,plan,get,default,parallelism,execution,config,1,plan,get,default,parallelism,optimizer,pc,new,optimizer,new,data,statistics,new,configuration,pc,set,default,parallelism,parallelism,optimized,plan,op,pc,compile,plan,return,new,plan,jsondump,generator,get,optimizer,plan,as,json,op
LocalExecutor -> public static String optimizerPlanAsJSON(Plan plan) throws Exception;1538135826;Creates a JSON representation of the given dataflow's execution plan.__@param plan The dataflow plan._@return The dataflow's execution plan, as a JSON string._@throws Exception Thrown, if the optimization process that creates the execution plan failed.;public static String optimizerPlanAsJSON(Plan plan) throws Exception {_		final int parallelism = plan.getDefaultParallelism() == ExecutionConfig.PARALLELISM_DEFAULT ? 1 : plan.getDefaultParallelism()___		Optimizer pc = new Optimizer(new DataStatistics(), new Configuration())__		pc.setDefaultParallelism(parallelism)__		OptimizedPlan op = pc.compile(plan)___		return new PlanJSONDumpGenerator().getOptimizerPlanAsJSON(op)__	};creates,a,json,representation,of,the,given,dataflow,s,execution,plan,param,plan,the,dataflow,plan,return,the,dataflow,s,execution,plan,as,a,json,string,throws,exception,thrown,if,the,optimization,process,that,creates,the,execution,plan,failed;public,static,string,optimizer,plan,as,json,plan,plan,throws,exception,final,int,parallelism,plan,get,default,parallelism,execution,config,1,plan,get,default,parallelism,optimizer,pc,new,optimizer,new,data,statistics,new,configuration,pc,set,default,parallelism,parallelism,optimized,plan,op,pc,compile,plan,return,new,plan,jsondump,generator,get,optimizer,plan,as,json,op
LocalExecutor -> public static String optimizerPlanAsJSON(Plan plan) throws Exception;1549360057;Creates a JSON representation of the given dataflow's execution plan.__@param plan The dataflow plan._@return The dataflow's execution plan, as a JSON string._@throws Exception Thrown, if the optimization process that creates the execution plan failed.;public static String optimizerPlanAsJSON(Plan plan) throws Exception {_		final int parallelism = plan.getDefaultParallelism() == ExecutionConfig.PARALLELISM_DEFAULT ? 1 : plan.getDefaultParallelism()___		Optimizer pc = new Optimizer(new DataStatistics(), new Configuration())__		pc.setDefaultParallelism(parallelism)__		OptimizedPlan op = pc.compile(plan)___		return new PlanJSONDumpGenerator().getOptimizerPlanAsJSON(op)__	};creates,a,json,representation,of,the,given,dataflow,s,execution,plan,param,plan,the,dataflow,plan,return,the,dataflow,s,execution,plan,as,a,json,string,throws,exception,thrown,if,the,optimization,process,that,creates,the,execution,plan,failed;public,static,string,optimizer,plan,as,json,plan,plan,throws,exception,final,int,parallelism,plan,get,default,parallelism,execution,config,1,plan,get,default,parallelism,optimizer,pc,new,optimizer,new,data,statistics,new,configuration,pc,set,default,parallelism,parallelism,optimized,plan,op,pc,compile,plan,return,new,plan,jsondump,generator,get,optimizer,plan,as,json,op
LocalExecutor -> public static String optimizerPlanAsJSON(Plan plan) throws Exception;1550222817;Creates a JSON representation of the given dataflow's execution plan.__@param plan The dataflow plan._@return The dataflow's execution plan, as a JSON string._@throws Exception Thrown, if the optimization process that creates the execution plan failed.;public static String optimizerPlanAsJSON(Plan plan) throws Exception {_		final int parallelism = plan.getDefaultParallelism() == ExecutionConfig.PARALLELISM_DEFAULT ? 1 : plan.getDefaultParallelism()___		Optimizer pc = new Optimizer(new DataStatistics(), new Configuration())__		pc.setDefaultParallelism(parallelism)__		OptimizedPlan op = pc.compile(plan)___		return new PlanJSONDumpGenerator().getOptimizerPlanAsJSON(op)__	};creates,a,json,representation,of,the,given,dataflow,s,execution,plan,param,plan,the,dataflow,plan,return,the,dataflow,s,execution,plan,as,a,json,string,throws,exception,thrown,if,the,optimization,process,that,creates,the,execution,plan,failed;public,static,string,optimizer,plan,as,json,plan,plan,throws,exception,final,int,parallelism,plan,get,default,parallelism,execution,config,1,plan,get,default,parallelism,optimizer,pc,new,optimizer,new,data,statistics,new,configuration,pc,set,default,parallelism,parallelism,optimized,plan,op,pc,compile,plan,return,new,plan,jsondump,generator,get,optimizer,plan,as,json,op
LocalExecutor -> public static String getPlanAsJSON(Plan plan);1405024514;Return unoptimized plan as JSON.__@param plan The program plan._@return The plan as a JSON object.;public static String getPlanAsJSON(Plan plan) {_		PlanJSONDumpGenerator gen = new PlanJSONDumpGenerator()__		List<DataSinkNode> sinks = PactCompiler.createPreOptimizedPlan(plan)__		return gen.getPactPlanAsJSON(sinks)__	};return,unoptimized,plan,as,json,param,plan,the,program,plan,return,the,plan,as,a,json,object;public,static,string,get,plan,as,json,plan,plan,plan,jsondump,generator,gen,new,plan,jsondump,generator,list,data,sink,node,sinks,pact,compiler,create,pre,optimized,plan,plan,return,gen,get,pact,plan,as,json,sinks
LocalExecutor -> public static String getPlanAsJSON(Plan plan);1405090423;Return unoptimized plan as JSON.__@param plan The program plan._@return The plan as a JSON object.;public static String getPlanAsJSON(Plan plan) {_		PlanJSONDumpGenerator gen = new PlanJSONDumpGenerator()__		List<DataSinkNode> sinks = PactCompiler.createPreOptimizedPlan(plan)__		return gen.getPactPlanAsJSON(sinks)__	};return,unoptimized,plan,as,json,param,plan,the,program,plan,return,the,plan,as,a,json,object;public,static,string,get,plan,as,json,plan,plan,plan,jsondump,generator,gen,new,plan,jsondump,generator,list,data,sink,node,sinks,pact,compiler,create,pre,optimized,plan,plan,return,gen,get,pact,plan,as,json,sinks
LocalExecutor -> public static String getPlanAsJSON(Plan plan);1409911022;Return unoptimized plan as JSON.__@param plan The program plan._@return The plan as a JSON object.;public static String getPlanAsJSON(Plan plan) {_		PlanJSONDumpGenerator gen = new PlanJSONDumpGenerator()__		List<DataSinkNode> sinks = PactCompiler.createPreOptimizedPlan(plan)__		return gen.getPactPlanAsJSON(sinks)__	};return,unoptimized,plan,as,json,param,plan,the,program,plan,return,the,plan,as,a,json,object;public,static,string,get,plan,as,json,plan,plan,plan,jsondump,generator,gen,new,plan,jsondump,generator,list,data,sink,node,sinks,pact,compiler,create,pre,optimized,plan,plan,return,gen,get,pact,plan,as,json,sinks
LocalExecutor -> public static String getPlanAsJSON(Plan plan);1411473593;Return unoptimized plan as JSON.__@param plan The program plan._@return The plan as a JSON object.;public static String getPlanAsJSON(Plan plan) {_		PlanJSONDumpGenerator gen = new PlanJSONDumpGenerator()__		List<DataSinkNode> sinks = PactCompiler.createPreOptimizedPlan(plan)__		return gen.getPactPlanAsJSON(sinks)__	};return,unoptimized,plan,as,json,param,plan,the,program,plan,return,the,plan,as,a,json,object;public,static,string,get,plan,as,json,plan,plan,plan,jsondump,generator,gen,new,plan,jsondump,generator,list,data,sink,node,sinks,pact,compiler,create,pre,optimized,plan,plan,return,gen,get,pact,plan,as,json,sinks
LocalExecutor -> public static String getPlanAsJSON(Plan plan);1418925507;Return unoptimized plan as JSON.__@param plan The program plan._@return The plan as a JSON object.;public static String getPlanAsJSON(Plan plan) {_		PlanJSONDumpGenerator gen = new PlanJSONDumpGenerator()__		List<DataSinkNode> sinks = PactCompiler.createPreOptimizedPlan(plan)__		return gen.getPactPlanAsJSON(sinks)__	};return,unoptimized,plan,as,json,param,plan,the,program,plan,return,the,plan,as,a,json,object;public,static,string,get,plan,as,json,plan,plan,plan,jsondump,generator,gen,new,plan,jsondump,generator,list,data,sink,node,sinks,pact,compiler,create,pre,optimized,plan,plan,return,gen,get,pact,plan,as,json,sinks
LocalExecutor -> public static String getPlanAsJSON(Plan plan);1418925507;Return unoptimized plan as JSON.__@param plan The program plan._@return The plan as a JSON object.;public static String getPlanAsJSON(Plan plan) {_		PlanJSONDumpGenerator gen = new PlanJSONDumpGenerator()__		List<DataSinkNode> sinks = PactCompiler.createPreOptimizedPlan(plan)__		return gen.getPactPlanAsJSON(sinks)__	};return,unoptimized,plan,as,json,param,plan,the,program,plan,return,the,plan,as,a,json,object;public,static,string,get,plan,as,json,plan,plan,plan,jsondump,generator,gen,new,plan,jsondump,generator,list,data,sink,node,sinks,pact,compiler,create,pre,optimized,plan,plan,return,gen,get,pact,plan,as,json,sinks
LocalExecutor -> public static String getPlanAsJSON(Plan plan);1418925508;Return unoptimized plan as JSON.__@param plan The program plan._@return The plan as a JSON object.;public static String getPlanAsJSON(Plan plan) {_		PlanJSONDumpGenerator gen = new PlanJSONDumpGenerator()__		List<DataSinkNode> sinks = PactCompiler.createPreOptimizedPlan(plan)__		return gen.getPactPlanAsJSON(sinks)__	};return,unoptimized,plan,as,json,param,plan,the,program,plan,return,the,plan,as,a,json,object;public,static,string,get,plan,as,json,plan,plan,plan,jsondump,generator,gen,new,plan,jsondump,generator,list,data,sink,node,sinks,pact,compiler,create,pre,optimized,plan,plan,return,gen,get,pact,plan,as,json,sinks
LocalExecutor -> public static String getPlanAsJSON(Plan plan);1418925508;Return unoptimized plan as JSON.__@param plan The program plan._@return The plan as a JSON object.;public static String getPlanAsJSON(Plan plan) {_		PlanJSONDumpGenerator gen = new PlanJSONDumpGenerator()__		List<DataSinkNode> sinks = PactCompiler.createPreOptimizedPlan(plan)__		return gen.getPactPlanAsJSON(sinks)__	};return,unoptimized,plan,as,json,param,plan,the,program,plan,return,the,plan,as,a,json,object;public,static,string,get,plan,as,json,plan,plan,plan,jsondump,generator,gen,new,plan,jsondump,generator,list,data,sink,node,sinks,pact,compiler,create,pre,optimized,plan,plan,return,gen,get,pact,plan,as,json,sinks
LocalExecutor -> public static String getPlanAsJSON(Plan plan);1418925510;Return unoptimized plan as JSON.__@param plan The program plan._@return The plan as a JSON object.;public static String getPlanAsJSON(Plan plan) {_		PlanJSONDumpGenerator gen = new PlanJSONDumpGenerator()__		List<DataSinkNode> sinks = PactCompiler.createPreOptimizedPlan(plan)__		return gen.getPactPlanAsJSON(sinks)__	};return,unoptimized,plan,as,json,param,plan,the,program,plan,return,the,plan,as,a,json,object;public,static,string,get,plan,as,json,plan,plan,plan,jsondump,generator,gen,new,plan,jsondump,generator,list,data,sink,node,sinks,pact,compiler,create,pre,optimized,plan,plan,return,gen,get,pact,plan,as,json,sinks
LocalExecutor -> public static String getPlanAsJSON(Plan plan);1418925511;Return unoptimized plan as JSON.__@param plan The program plan._@return The plan as a JSON object.;public static String getPlanAsJSON(Plan plan) {_		PlanJSONDumpGenerator gen = new PlanJSONDumpGenerator()__		List<DataSinkNode> sinks = PactCompiler.createPreOptimizedPlan(plan)__		return gen.getPactPlanAsJSON(sinks)__	};return,unoptimized,plan,as,json,param,plan,the,program,plan,return,the,plan,as,a,json,object;public,static,string,get,plan,as,json,plan,plan,plan,jsondump,generator,gen,new,plan,jsondump,generator,list,data,sink,node,sinks,pact,compiler,create,pre,optimized,plan,plan,return,gen,get,pact,plan,as,json,sinks
LocalExecutor -> public static String getPlanAsJSON(Plan plan);1418925512;Return unoptimized plan as JSON.__@param plan The program plan._@return The plan as a JSON object.;public static String getPlanAsJSON(Plan plan) {_		PlanJSONDumpGenerator gen = new PlanJSONDumpGenerator()__		List<DataSinkNode> sinks = PactCompiler.createPreOptimizedPlan(plan)__		return gen.getPactPlanAsJSON(sinks)__	};return,unoptimized,plan,as,json,param,plan,the,program,plan,return,the,plan,as,a,json,object;public,static,string,get,plan,as,json,plan,plan,plan,jsondump,generator,gen,new,plan,jsondump,generator,list,data,sink,node,sinks,pact,compiler,create,pre,optimized,plan,plan,return,gen,get,pact,plan,as,json,sinks
LocalExecutor -> public static String getPlanAsJSON(Plan plan);1418925513;Return unoptimized plan as JSON.__@param plan The program plan._@return The plan as a JSON object.;public static String getPlanAsJSON(Plan plan) {_		PlanJSONDumpGenerator gen = new PlanJSONDumpGenerator()__		List<DataSinkNode> sinks = PactCompiler.createPreOptimizedPlan(plan)__		return gen.getPactPlanAsJSON(sinks)__	};return,unoptimized,plan,as,json,param,plan,the,program,plan,return,the,plan,as,a,json,object;public,static,string,get,plan,as,json,plan,plan,plan,jsondump,generator,gen,new,plan,jsondump,generator,list,data,sink,node,sinks,pact,compiler,create,pre,optimized,plan,plan,return,gen,get,pact,plan,as,json,sinks
LocalExecutor -> public static String getPlanAsJSON(Plan plan);1426843273;Return unoptimized plan as JSON.__@param plan The program plan._@return The plan as a JSON object.;public static String getPlanAsJSON(Plan plan) {_		PlanJSONDumpGenerator gen = new PlanJSONDumpGenerator()__		List<DataSinkNode> sinks = PactCompiler.createPreOptimizedPlan(plan)__		return gen.getPactPlanAsJSON(sinks)__	};return,unoptimized,plan,as,json,param,plan,the,program,plan,return,the,plan,as,a,json,object;public,static,string,get,plan,as,json,plan,plan,plan,jsondump,generator,gen,new,plan,jsondump,generator,list,data,sink,node,sinks,pact,compiler,create,pre,optimized,plan,plan,return,gen,get,pact,plan,as,json,sinks
LocalExecutor -> public static String getPlanAsJSON(Plan plan);1426843274;Return unoptimized plan as JSON.__@param plan The program plan._@return The plan as a JSON object.;public static String getPlanAsJSON(Plan plan) {_		PlanJSONDumpGenerator gen = new PlanJSONDumpGenerator()__		List<DataSinkNode> sinks = PactCompiler.createPreOptimizedPlan(plan)__		return gen.getPactPlanAsJSON(sinks)__	};return,unoptimized,plan,as,json,param,plan,the,program,plan,return,the,plan,as,a,json,object;public,static,string,get,plan,as,json,plan,plan,plan,jsondump,generator,gen,new,plan,jsondump,generator,list,data,sink,node,sinks,pact,compiler,create,pre,optimized,plan,plan,return,gen,get,pact,plan,as,json,sinks
LocalExecutor -> public static String getPlanAsJSON(Plan plan);1426843274;Return unoptimized plan as JSON.__@param plan The program plan._@return The plan as a JSON object.;public static String getPlanAsJSON(Plan plan) {_		PlanJSONDumpGenerator gen = new PlanJSONDumpGenerator()__		List<DataSinkNode> sinks = Optimizer.createPreOptimizedPlan(plan)__		return gen.getPactPlanAsJSON(sinks)__	};return,unoptimized,plan,as,json,param,plan,the,program,plan,return,the,plan,as,a,json,object;public,static,string,get,plan,as,json,plan,plan,plan,jsondump,generator,gen,new,plan,jsondump,generator,list,data,sink,node,sinks,optimizer,create,pre,optimized,plan,plan,return,gen,get,pact,plan,as,json,sinks
LocalExecutor -> public static String getPlanAsJSON(Plan plan);1427784999;Return unoptimized plan as JSON.__@param plan The program plan._@return The plan as a JSON object.;public static String getPlanAsJSON(Plan plan) {_		PlanJSONDumpGenerator gen = new PlanJSONDumpGenerator()__		List<DataSinkNode> sinks = Optimizer.createPreOptimizedPlan(plan)__		return gen.getPactPlanAsJSON(sinks)__	};return,unoptimized,plan,as,json,param,plan,the,program,plan,return,the,plan,as,a,json,object;public,static,string,get,plan,as,json,plan,plan,plan,jsondump,generator,gen,new,plan,jsondump,generator,list,data,sink,node,sinks,optimizer,create,pre,optimized,plan,plan,return,gen,get,pact,plan,as,json,sinks
LocalExecutor -> public static String getPlanAsJSON(Plan plan);1427958028;Return unoptimized plan as JSON.__@param plan The program plan._@return The plan as a JSON object.;public static String getPlanAsJSON(Plan plan) {_		PlanJSONDumpGenerator gen = new PlanJSONDumpGenerator()__		List<DataSinkNode> sinks = Optimizer.createPreOptimizedPlan(plan)__		return gen.getPactPlanAsJSON(sinks)__	};return,unoptimized,plan,as,json,param,plan,the,program,plan,return,the,plan,as,a,json,object;public,static,string,get,plan,as,json,plan,plan,plan,jsondump,generator,gen,new,plan,jsondump,generator,list,data,sink,node,sinks,optimizer,create,pre,optimized,plan,plan,return,gen,get,pact,plan,as,json,sinks
LocalExecutor -> public static String getPlanAsJSON(Plan plan);1428663519;Return unoptimized plan as JSON.__@param plan The program plan._@return The plan as a JSON object.;public static String getPlanAsJSON(Plan plan) {_		PlanJSONDumpGenerator gen = new PlanJSONDumpGenerator()__		List<DataSinkNode> sinks = Optimizer.createPreOptimizedPlan(plan)__		return gen.getPactPlanAsJSON(sinks)__	};return,unoptimized,plan,as,json,param,plan,the,program,plan,return,the,plan,as,a,json,object;public,static,string,get,plan,as,json,plan,plan,plan,jsondump,generator,gen,new,plan,jsondump,generator,list,data,sink,node,sinks,optimizer,create,pre,optimized,plan,plan,return,gen,get,pact,plan,as,json,sinks
LocalExecutor -> public static String getPlanAsJSON(Plan plan);1428935901;Return unoptimized plan as JSON.__@param plan The program plan._@return The plan as a JSON object.;public static String getPlanAsJSON(Plan plan) {_		PlanJSONDumpGenerator gen = new PlanJSONDumpGenerator()__		List<DataSinkNode> sinks = Optimizer.createPreOptimizedPlan(plan)__		return gen.getPactPlanAsJSON(sinks)__	};return,unoptimized,plan,as,json,param,plan,the,program,plan,return,the,plan,as,a,json,object;public,static,string,get,plan,as,json,plan,plan,plan,jsondump,generator,gen,new,plan,jsondump,generator,list,data,sink,node,sinks,optimizer,create,pre,optimized,plan,plan,return,gen,get,pact,plan,as,json,sinks
LocalExecutor -> public static String getPlanAsJSON(Plan plan);1428935901;Return unoptimized plan as JSON.__@param plan The program plan._@return The plan as a JSON object.;public static String getPlanAsJSON(Plan plan) {_		PlanJSONDumpGenerator gen = new PlanJSONDumpGenerator()__		List<DataSinkNode> sinks = Optimizer.createPreOptimizedPlan(plan)__		return gen.getPactPlanAsJSON(sinks)__	};return,unoptimized,plan,as,json,param,plan,the,program,plan,return,the,plan,as,a,json,object;public,static,string,get,plan,as,json,plan,plan,plan,jsondump,generator,gen,new,plan,jsondump,generator,list,data,sink,node,sinks,optimizer,create,pre,optimized,plan,plan,return,gen,get,pact,plan,as,json,sinks
LocalExecutor -> public static String getPlanAsJSON(Plan plan);1440951699;Return unoptimized plan as JSON.__@param plan The program plan._@return The plan as a JSON object.;public static String getPlanAsJSON(Plan plan) {_		PlanJSONDumpGenerator gen = new PlanJSONDumpGenerator()__		List<DataSinkNode> sinks = Optimizer.createPreOptimizedPlan(plan)__		return gen.getPactPlanAsJSON(sinks)__	};return,unoptimized,plan,as,json,param,plan,the,program,plan,return,the,plan,as,a,json,object;public,static,string,get,plan,as,json,plan,plan,plan,jsondump,generator,gen,new,plan,jsondump,generator,list,data,sink,node,sinks,optimizer,create,pre,optimized,plan,plan,return,gen,get,pact,plan,as,json,sinks
LocalExecutor -> public static String getPlanAsJSON(Plan plan);1441011751;Return unoptimized plan as JSON.__@param plan The program plan._@return The plan as a JSON object.;public static String getPlanAsJSON(Plan plan) {_		PlanJSONDumpGenerator gen = new PlanJSONDumpGenerator()__		List<DataSinkNode> sinks = Optimizer.createPreOptimizedPlan(plan)__		return gen.getPactPlanAsJSON(sinks)__	};return,unoptimized,plan,as,json,param,plan,the,program,plan,return,the,plan,as,a,json,object;public,static,string,get,plan,as,json,plan,plan,plan,jsondump,generator,gen,new,plan,jsondump,generator,list,data,sink,node,sinks,optimizer,create,pre,optimized,plan,plan,return,gen,get,pact,plan,as,json,sinks
LocalExecutor -> public static String getPlanAsJSON(Plan plan);1441614857;Return unoptimized plan as JSON.__@param plan The program plan._@return The plan as a JSON object.;public static String getPlanAsJSON(Plan plan) {_		PlanJSONDumpGenerator gen = new PlanJSONDumpGenerator()__		List<DataSinkNode> sinks = Optimizer.createPreOptimizedPlan(plan)__		return gen.getPactPlanAsJSON(sinks)__	};return,unoptimized,plan,as,json,param,plan,the,program,plan,return,the,plan,as,a,json,object;public,static,string,get,plan,as,json,plan,plan,plan,jsondump,generator,gen,new,plan,jsondump,generator,list,data,sink,node,sinks,optimizer,create,pre,optimized,plan,plan,return,gen,get,pact,plan,as,json,sinks
LocalExecutor -> public static String getPlanAsJSON(Plan plan);1442944546;Creates a JSON representation of the given dataflow plan.__@param plan The dataflow plan._@return The dataflow plan (prior to optimization) as a JSON string.;public static String getPlanAsJSON(Plan plan) {_		List<DataSinkNode> sinks = Optimizer.createPreOptimizedPlan(plan)__		return new PlanJSONDumpGenerator().getPactPlanAsJSON(sinks)__	};creates,a,json,representation,of,the,given,dataflow,plan,param,plan,the,dataflow,plan,return,the,dataflow,plan,prior,to,optimization,as,a,json,string;public,static,string,get,plan,as,json,plan,plan,list,data,sink,node,sinks,optimizer,create,pre,optimized,plan,plan,return,new,plan,jsondump,generator,get,pact,plan,as,json,sinks
LocalExecutor -> public static String getPlanAsJSON(Plan plan);1443682842;Creates a JSON representation of the given dataflow plan.__@param plan The dataflow plan._@return The dataflow plan (prior to optimization) as a JSON string.;public static String getPlanAsJSON(Plan plan) {_		List<DataSinkNode> sinks = Optimizer.createPreOptimizedPlan(plan)__		return new PlanJSONDumpGenerator().getPactPlanAsJSON(sinks)__	};creates,a,json,representation,of,the,given,dataflow,plan,param,plan,the,dataflow,plan,return,the,dataflow,plan,prior,to,optimization,as,a,json,string;public,static,string,get,plan,as,json,plan,plan,list,data,sink,node,sinks,optimizer,create,pre,optimized,plan,plan,return,new,plan,jsondump,generator,get,pact,plan,as,json,sinks
LocalExecutor -> public static String getPlanAsJSON(Plan plan);1460563153;Creates a JSON representation of the given dataflow plan.__@param plan The dataflow plan._@return The dataflow plan (prior to optimization) as a JSON string.;public static String getPlanAsJSON(Plan plan) {_		List<DataSinkNode> sinks = Optimizer.createPreOptimizedPlan(plan)__		return new PlanJSONDumpGenerator().getPactPlanAsJSON(sinks)__	};creates,a,json,representation,of,the,given,dataflow,plan,param,plan,the,dataflow,plan,return,the,dataflow,plan,prior,to,optimization,as,a,json,string;public,static,string,get,plan,as,json,plan,plan,list,data,sink,node,sinks,optimizer,create,pre,optimized,plan,plan,return,new,plan,jsondump,generator,get,pact,plan,as,json,sinks
LocalExecutor -> public static String getPlanAsJSON(Plan plan);1477989375;Creates a JSON representation of the given dataflow plan.__@param plan The dataflow plan._@return The dataflow plan (prior to optimization) as a JSON string.;public static String getPlanAsJSON(Plan plan) {_		List<DataSinkNode> sinks = Optimizer.createPreOptimizedPlan(plan)__		return new PlanJSONDumpGenerator().getPactPlanAsJSON(sinks)__	};creates,a,json,representation,of,the,given,dataflow,plan,param,plan,the,dataflow,plan,return,the,dataflow,plan,prior,to,optimization,as,a,json,string;public,static,string,get,plan,as,json,plan,plan,list,data,sink,node,sinks,optimizer,create,pre,optimized,plan,plan,return,new,plan,jsondump,generator,get,pact,plan,as,json,sinks
LocalExecutor -> public static String getPlanAsJSON(Plan plan);1492269386;Creates a JSON representation of the given dataflow plan.__@param plan The dataflow plan._@return The dataflow plan (prior to optimization) as a JSON string.;public static String getPlanAsJSON(Plan plan) {_		List<DataSinkNode> sinks = Optimizer.createPreOptimizedPlan(plan)__		return new PlanJSONDumpGenerator().getPactPlanAsJSON(sinks)__	};creates,a,json,representation,of,the,given,dataflow,plan,param,plan,the,dataflow,plan,return,the,dataflow,plan,prior,to,optimization,as,a,json,string;public,static,string,get,plan,as,json,plan,plan,list,data,sink,node,sinks,optimizer,create,pre,optimized,plan,plan,return,new,plan,jsondump,generator,get,pact,plan,as,json,sinks
LocalExecutor -> public static String getPlanAsJSON(Plan plan);1495778594;Creates a JSON representation of the given dataflow plan.__@param plan The dataflow plan._@return The dataflow plan (prior to optimization) as a JSON string.;public static String getPlanAsJSON(Plan plan) {_		List<DataSinkNode> sinks = Optimizer.createPreOptimizedPlan(plan)__		return new PlanJSONDumpGenerator().getPactPlanAsJSON(sinks)__	};creates,a,json,representation,of,the,given,dataflow,plan,param,plan,the,dataflow,plan,return,the,dataflow,plan,prior,to,optimization,as,a,json,string;public,static,string,get,plan,as,json,plan,plan,list,data,sink,node,sinks,optimizer,create,pre,optimized,plan,plan,return,new,plan,jsondump,generator,get,pact,plan,as,json,sinks
LocalExecutor -> public static String getPlanAsJSON(Plan plan);1499075301;Creates a JSON representation of the given dataflow plan.__@param plan The dataflow plan._@return The dataflow plan (prior to optimization) as a JSON string.;public static String getPlanAsJSON(Plan plan) {_		List<DataSinkNode> sinks = Optimizer.createPreOptimizedPlan(plan)__		return new PlanJSONDumpGenerator().getPactPlanAsJSON(sinks)__	};creates,a,json,representation,of,the,given,dataflow,plan,param,plan,the,dataflow,plan,return,the,dataflow,plan,prior,to,optimization,as,a,json,string;public,static,string,get,plan,as,json,plan,plan,list,data,sink,node,sinks,optimizer,create,pre,optimized,plan,plan,return,new,plan,jsondump,generator,get,pact,plan,as,json,sinks
LocalExecutor -> public static String getPlanAsJSON(Plan plan);1518605788;Creates a JSON representation of the given dataflow plan.__@param plan The dataflow plan._@return The dataflow plan (prior to optimization) as a JSON string.;public static String getPlanAsJSON(Plan plan) {_		List<DataSinkNode> sinks = Optimizer.createPreOptimizedPlan(plan)__		return new PlanJSONDumpGenerator().getPactPlanAsJSON(sinks)__	};creates,a,json,representation,of,the,given,dataflow,plan,param,plan,the,dataflow,plan,return,the,dataflow,plan,prior,to,optimization,as,a,json,string;public,static,string,get,plan,as,json,plan,plan,list,data,sink,node,sinks,optimizer,create,pre,optimized,plan,plan,return,new,plan,jsondump,generator,get,pact,plan,as,json,sinks
LocalExecutor -> public static String getPlanAsJSON(Plan plan);1519121818;Creates a JSON representation of the given dataflow plan.__@param plan The dataflow plan._@return The dataflow plan (prior to optimization) as a JSON string.;public static String getPlanAsJSON(Plan plan) {_		List<DataSinkNode> sinks = Optimizer.createPreOptimizedPlan(plan)__		return new PlanJSONDumpGenerator().getPactPlanAsJSON(sinks)__	};creates,a,json,representation,of,the,given,dataflow,plan,param,plan,the,dataflow,plan,return,the,dataflow,plan,prior,to,optimization,as,a,json,string;public,static,string,get,plan,as,json,plan,plan,list,data,sink,node,sinks,optimizer,create,pre,optimized,plan,plan,return,new,plan,jsondump,generator,get,pact,plan,as,json,sinks
LocalExecutor -> public static String getPlanAsJSON(Plan plan);1519249745;Creates a JSON representation of the given dataflow plan.__@param plan The dataflow plan._@return The dataflow plan (prior to optimization) as a JSON string.;public static String getPlanAsJSON(Plan plan) {_		List<DataSinkNode> sinks = Optimizer.createPreOptimizedPlan(plan)__		return new PlanJSONDumpGenerator().getPactPlanAsJSON(sinks)__	};creates,a,json,representation,of,the,given,dataflow,plan,param,plan,the,dataflow,plan,return,the,dataflow,plan,prior,to,optimization,as,a,json,string;public,static,string,get,plan,as,json,plan,plan,list,data,sink,node,sinks,optimizer,create,pre,optimized,plan,plan,return,new,plan,jsondump,generator,get,pact,plan,as,json,sinks
LocalExecutor -> public static String getPlanAsJSON(Plan plan);1522681180;Creates a JSON representation of the given dataflow plan.__@param plan The dataflow plan._@return The dataflow plan (prior to optimization) as a JSON string.;public static String getPlanAsJSON(Plan plan) {_		List<DataSinkNode> sinks = Optimizer.createPreOptimizedPlan(plan)__		return new PlanJSONDumpGenerator().getPactPlanAsJSON(sinks)__	};creates,a,json,representation,of,the,given,dataflow,plan,param,plan,the,dataflow,plan,return,the,dataflow,plan,prior,to,optimization,as,a,json,string;public,static,string,get,plan,as,json,plan,plan,list,data,sink,node,sinks,optimizer,create,pre,optimized,plan,plan,return,new,plan,jsondump,generator,get,pact,plan,as,json,sinks
LocalExecutor -> public static String getPlanAsJSON(Plan plan);1524085355;Creates a JSON representation of the given dataflow plan.__@param plan The dataflow plan._@return The dataflow plan (prior to optimization) as a JSON string.;public static String getPlanAsJSON(Plan plan) {_		List<DataSinkNode> sinks = Optimizer.createPreOptimizedPlan(plan)__		return new PlanJSONDumpGenerator().getPactPlanAsJSON(sinks)__	};creates,a,json,representation,of,the,given,dataflow,plan,param,plan,the,dataflow,plan,return,the,dataflow,plan,prior,to,optimization,as,a,json,string;public,static,string,get,plan,as,json,plan,plan,list,data,sink,node,sinks,optimizer,create,pre,optimized,plan,plan,return,new,plan,jsondump,generator,get,pact,plan,as,json,sinks
LocalExecutor -> public static String getPlanAsJSON(Plan plan);1524124694;Creates a JSON representation of the given dataflow plan.__@param plan The dataflow plan._@return The dataflow plan (prior to optimization) as a JSON string.;public static String getPlanAsJSON(Plan plan) {_		List<DataSinkNode> sinks = Optimizer.createPreOptimizedPlan(plan)__		return new PlanJSONDumpGenerator().getPactPlanAsJSON(sinks)__	};creates,a,json,representation,of,the,given,dataflow,plan,param,plan,the,dataflow,plan,return,the,dataflow,plan,prior,to,optimization,as,a,json,string;public,static,string,get,plan,as,json,plan,plan,list,data,sink,node,sinks,optimizer,create,pre,optimized,plan,plan,return,new,plan,jsondump,generator,get,pact,plan,as,json,sinks
LocalExecutor -> public static String getPlanAsJSON(Plan plan);1524570317;Creates a JSON representation of the given dataflow plan.__@param plan The dataflow plan._@return The dataflow plan (prior to optimization) as a JSON string.;public static String getPlanAsJSON(Plan plan) {_		List<DataSinkNode> sinks = Optimizer.createPreOptimizedPlan(plan)__		return new PlanJSONDumpGenerator().getPactPlanAsJSON(sinks)__	};creates,a,json,representation,of,the,given,dataflow,plan,param,plan,the,dataflow,plan,return,the,dataflow,plan,prior,to,optimization,as,a,json,string;public,static,string,get,plan,as,json,plan,plan,list,data,sink,node,sinks,optimizer,create,pre,optimized,plan,plan,return,new,plan,jsondump,generator,get,pact,plan,as,json,sinks
LocalExecutor -> public static String getPlanAsJSON(Plan plan);1529682304;Creates a JSON representation of the given dataflow plan.__@param plan The dataflow plan._@return The dataflow plan (prior to optimization) as a JSON string.;public static String getPlanAsJSON(Plan plan) {_		List<DataSinkNode> sinks = Optimizer.createPreOptimizedPlan(plan)__		return new PlanJSONDumpGenerator().getPactPlanAsJSON(sinks)__	};creates,a,json,representation,of,the,given,dataflow,plan,param,plan,the,dataflow,plan,return,the,dataflow,plan,prior,to,optimization,as,a,json,string;public,static,string,get,plan,as,json,plan,plan,list,data,sink,node,sinks,optimizer,create,pre,optimized,plan,plan,return,new,plan,jsondump,generator,get,pact,plan,as,json,sinks
LocalExecutor -> public static String getPlanAsJSON(Plan plan);1538135826;Creates a JSON representation of the given dataflow plan.__@param plan The dataflow plan._@return The dataflow plan (prior to optimization) as a JSON string.;public static String getPlanAsJSON(Plan plan) {_		List<DataSinkNode> sinks = Optimizer.createPreOptimizedPlan(plan)__		return new PlanJSONDumpGenerator().getPactPlanAsJSON(sinks)__	};creates,a,json,representation,of,the,given,dataflow,plan,param,plan,the,dataflow,plan,return,the,dataflow,plan,prior,to,optimization,as,a,json,string;public,static,string,get,plan,as,json,plan,plan,list,data,sink,node,sinks,optimizer,create,pre,optimized,plan,plan,return,new,plan,jsondump,generator,get,pact,plan,as,json,sinks
LocalExecutor -> public static String getPlanAsJSON(Plan plan);1549360057;Creates a JSON representation of the given dataflow plan.__@param plan The dataflow plan._@return The dataflow plan (prior to optimization) as a JSON string.;public static String getPlanAsJSON(Plan plan) {_		List<DataSinkNode> sinks = Optimizer.createPreOptimizedPlan(plan)__		return new PlanJSONDumpGenerator().getPactPlanAsJSON(sinks)__	};creates,a,json,representation,of,the,given,dataflow,plan,param,plan,the,dataflow,plan,return,the,dataflow,plan,prior,to,optimization,as,a,json,string;public,static,string,get,plan,as,json,plan,plan,list,data,sink,node,sinks,optimizer,create,pre,optimized,plan,plan,return,new,plan,jsondump,generator,get,pact,plan,as,json,sinks
LocalExecutor -> public static String getPlanAsJSON(Plan plan);1550222817;Creates a JSON representation of the given dataflow plan.__@param plan The dataflow plan._@return The dataflow plan (prior to optimization) as a JSON string.;public static String getPlanAsJSON(Plan plan) {_		List<DataSinkNode> sinks = Optimizer.createPreOptimizedPlan(plan)__		return new PlanJSONDumpGenerator().getPactPlanAsJSON(sinks)__	};creates,a,json,representation,of,the,given,dataflow,plan,param,plan,the,dataflow,plan,return,the,dataflow,plan,prior,to,optimization,as,a,json,string;public,static,string,get,plan,as,json,plan,plan,list,data,sink,node,sinks,optimizer,create,pre,optimized,plan,plan,return,new,plan,jsondump,generator,get,pact,plan,as,json,sinks
LocalExecutor -> public String getOptimizerPlanAsJSON(Plan plan) throws Exception;1405024514;Returns a JSON dump of the optimized plan.__@param plan_The program's plan._@return JSON dump of the optimized plan._@throws Exception;public String getOptimizerPlanAsJSON(Plan plan) throws Exception {_		PactCompiler pc = new PactCompiler(new DataStatistics())__		OptimizedPlan op = pc.compile(plan)__		PlanJSONDumpGenerator gen = new PlanJSONDumpGenerator()__	_		return gen.getOptimizerPlanAsJSON(op)__	};returns,a,json,dump,of,the,optimized,plan,param,plan,the,program,s,plan,return,json,dump,of,the,optimized,plan,throws,exception;public,string,get,optimizer,plan,as,json,plan,plan,throws,exception,pact,compiler,pc,new,pact,compiler,new,data,statistics,optimized,plan,op,pc,compile,plan,plan,jsondump,generator,gen,new,plan,jsondump,generator,return,gen,get,optimizer,plan,as,json,op
LocalExecutor -> public String getOptimizerPlanAsJSON(Plan plan) throws Exception;1405090423;Returns a JSON dump of the optimized plan.__@param plan_The program's plan._@return JSON dump of the optimized plan._@throws Exception;public String getOptimizerPlanAsJSON(Plan plan) throws Exception {_		PactCompiler pc = new PactCompiler(new DataStatistics())__		OptimizedPlan op = pc.compile(plan)__		PlanJSONDumpGenerator gen = new PlanJSONDumpGenerator()__	_		return gen.getOptimizerPlanAsJSON(op)__	};returns,a,json,dump,of,the,optimized,plan,param,plan,the,program,s,plan,return,json,dump,of,the,optimized,plan,throws,exception;public,string,get,optimizer,plan,as,json,plan,plan,throws,exception,pact,compiler,pc,new,pact,compiler,new,data,statistics,optimized,plan,op,pc,compile,plan,plan,jsondump,generator,gen,new,plan,jsondump,generator,return,gen,get,optimizer,plan,as,json,op
LocalExecutor -> public String getOptimizerPlanAsJSON(Plan plan) throws Exception;1409911022;Returns a JSON dump of the optimized plan.__@param plan_The program's plan._@return JSON dump of the optimized plan._@throws Exception;public String getOptimizerPlanAsJSON(Plan plan) throws Exception {_		PactCompiler pc = new PactCompiler(new DataStatistics())__		OptimizedPlan op = pc.compile(plan)__		PlanJSONDumpGenerator gen = new PlanJSONDumpGenerator()__	_		return gen.getOptimizerPlanAsJSON(op)__	};returns,a,json,dump,of,the,optimized,plan,param,plan,the,program,s,plan,return,json,dump,of,the,optimized,plan,throws,exception;public,string,get,optimizer,plan,as,json,plan,plan,throws,exception,pact,compiler,pc,new,pact,compiler,new,data,statistics,optimized,plan,op,pc,compile,plan,plan,jsondump,generator,gen,new,plan,jsondump,generator,return,gen,get,optimizer,plan,as,json,op
LocalExecutor -> public String getOptimizerPlanAsJSON(Plan plan) throws Exception;1411473593;Returns a JSON dump of the optimized plan.__@param plan_The program's plan._@return JSON dump of the optimized plan._@throws Exception;public String getOptimizerPlanAsJSON(Plan plan) throws Exception {_		PactCompiler pc = new PactCompiler(new DataStatistics())__		OptimizedPlan op = pc.compile(plan)__		PlanJSONDumpGenerator gen = new PlanJSONDumpGenerator()__	_		return gen.getOptimizerPlanAsJSON(op)__	};returns,a,json,dump,of,the,optimized,plan,param,plan,the,program,s,plan,return,json,dump,of,the,optimized,plan,throws,exception;public,string,get,optimizer,plan,as,json,plan,plan,throws,exception,pact,compiler,pc,new,pact,compiler,new,data,statistics,optimized,plan,op,pc,compile,plan,plan,jsondump,generator,gen,new,plan,jsondump,generator,return,gen,get,optimizer,plan,as,json,op
LocalExecutor -> public String getOptimizerPlanAsJSON(Plan plan) throws Exception;1418925507;Returns a JSON dump of the optimized plan.__@param plan_The program's plan._@return JSON dump of the optimized plan._@throws Exception;public String getOptimizerPlanAsJSON(Plan plan) throws Exception {_		PactCompiler pc = new PactCompiler(new DataStatistics())__		OptimizedPlan op = pc.compile(plan)__		PlanJSONDumpGenerator gen = new PlanJSONDumpGenerator()__	_		return gen.getOptimizerPlanAsJSON(op)__	};returns,a,json,dump,of,the,optimized,plan,param,plan,the,program,s,plan,return,json,dump,of,the,optimized,plan,throws,exception;public,string,get,optimizer,plan,as,json,plan,plan,throws,exception,pact,compiler,pc,new,pact,compiler,new,data,statistics,optimized,plan,op,pc,compile,plan,plan,jsondump,generator,gen,new,plan,jsondump,generator,return,gen,get,optimizer,plan,as,json,op
LocalExecutor -> public String getOptimizerPlanAsJSON(Plan plan) throws Exception;1418925507;Returns a JSON dump of the optimized plan.__@param plan_The program's plan._@return JSON dump of the optimized plan._@throws Exception;public String getOptimizerPlanAsJSON(Plan plan) throws Exception {_		PactCompiler pc = new PactCompiler(new DataStatistics())__		OptimizedPlan op = pc.compile(plan)__		PlanJSONDumpGenerator gen = new PlanJSONDumpGenerator()__	_		return gen.getOptimizerPlanAsJSON(op)__	};returns,a,json,dump,of,the,optimized,plan,param,plan,the,program,s,plan,return,json,dump,of,the,optimized,plan,throws,exception;public,string,get,optimizer,plan,as,json,plan,plan,throws,exception,pact,compiler,pc,new,pact,compiler,new,data,statistics,optimized,plan,op,pc,compile,plan,plan,jsondump,generator,gen,new,plan,jsondump,generator,return,gen,get,optimizer,plan,as,json,op
LocalExecutor -> public String getOptimizerPlanAsJSON(Plan plan) throws Exception;1418925508;Returns a JSON dump of the optimized plan.__@param plan_The program's plan._@return JSON dump of the optimized plan._@throws Exception;public String getOptimizerPlanAsJSON(Plan plan) throws Exception {_		PactCompiler pc = new PactCompiler(new DataStatistics())__		OptimizedPlan op = pc.compile(plan)__		PlanJSONDumpGenerator gen = new PlanJSONDumpGenerator()__	_		return gen.getOptimizerPlanAsJSON(op)__	};returns,a,json,dump,of,the,optimized,plan,param,plan,the,program,s,plan,return,json,dump,of,the,optimized,plan,throws,exception;public,string,get,optimizer,plan,as,json,plan,plan,throws,exception,pact,compiler,pc,new,pact,compiler,new,data,statistics,optimized,plan,op,pc,compile,plan,plan,jsondump,generator,gen,new,plan,jsondump,generator,return,gen,get,optimizer,plan,as,json,op
LocalExecutor -> public String getOptimizerPlanAsJSON(Plan plan) throws Exception;1418925508;Returns a JSON dump of the optimized plan.__@param plan_The program's plan._@return JSON dump of the optimized plan._@throws Exception;public String getOptimizerPlanAsJSON(Plan plan) throws Exception {_		PactCompiler pc = new PactCompiler(new DataStatistics())__		OptimizedPlan op = pc.compile(plan)__		PlanJSONDumpGenerator gen = new PlanJSONDumpGenerator()__	_		return gen.getOptimizerPlanAsJSON(op)__	};returns,a,json,dump,of,the,optimized,plan,param,plan,the,program,s,plan,return,json,dump,of,the,optimized,plan,throws,exception;public,string,get,optimizer,plan,as,json,plan,plan,throws,exception,pact,compiler,pc,new,pact,compiler,new,data,statistics,optimized,plan,op,pc,compile,plan,plan,jsondump,generator,gen,new,plan,jsondump,generator,return,gen,get,optimizer,plan,as,json,op
LocalExecutor -> public String getOptimizerPlanAsJSON(Plan plan) throws Exception;1418925510;Returns a JSON dump of the optimized plan.__@param plan_The program's plan._@return JSON dump of the optimized plan._@throws Exception;public String getOptimizerPlanAsJSON(Plan plan) throws Exception {_		PactCompiler pc = new PactCompiler(new DataStatistics())__		OptimizedPlan op = pc.compile(plan)__		PlanJSONDumpGenerator gen = new PlanJSONDumpGenerator()__	_		return gen.getOptimizerPlanAsJSON(op)__	};returns,a,json,dump,of,the,optimized,plan,param,plan,the,program,s,plan,return,json,dump,of,the,optimized,plan,throws,exception;public,string,get,optimizer,plan,as,json,plan,plan,throws,exception,pact,compiler,pc,new,pact,compiler,new,data,statistics,optimized,plan,op,pc,compile,plan,plan,jsondump,generator,gen,new,plan,jsondump,generator,return,gen,get,optimizer,plan,as,json,op
LocalExecutor -> public String getOptimizerPlanAsJSON(Plan plan) throws Exception;1418925511;Returns a JSON dump of the optimized plan.__@param plan_The program's plan._@return JSON dump of the optimized plan._@throws Exception;public String getOptimizerPlanAsJSON(Plan plan) throws Exception {_		PactCompiler pc = new PactCompiler(new DataStatistics())__		OptimizedPlan op = pc.compile(plan)__		PlanJSONDumpGenerator gen = new PlanJSONDumpGenerator()__	_		return gen.getOptimizerPlanAsJSON(op)__	};returns,a,json,dump,of,the,optimized,plan,param,plan,the,program,s,plan,return,json,dump,of,the,optimized,plan,throws,exception;public,string,get,optimizer,plan,as,json,plan,plan,throws,exception,pact,compiler,pc,new,pact,compiler,new,data,statistics,optimized,plan,op,pc,compile,plan,plan,jsondump,generator,gen,new,plan,jsondump,generator,return,gen,get,optimizer,plan,as,json,op
LocalExecutor -> public String getOptimizerPlanAsJSON(Plan plan) throws Exception;1418925512;Returns a JSON dump of the optimized plan.__@param plan_The program's plan._@return JSON dump of the optimized plan._@throws Exception;public String getOptimizerPlanAsJSON(Plan plan) throws Exception {_		PactCompiler pc = new PactCompiler(new DataStatistics())__		OptimizedPlan op = pc.compile(plan)__		PlanJSONDumpGenerator gen = new PlanJSONDumpGenerator()__	_		return gen.getOptimizerPlanAsJSON(op)__	};returns,a,json,dump,of,the,optimized,plan,param,plan,the,program,s,plan,return,json,dump,of,the,optimized,plan,throws,exception;public,string,get,optimizer,plan,as,json,plan,plan,throws,exception,pact,compiler,pc,new,pact,compiler,new,data,statistics,optimized,plan,op,pc,compile,plan,plan,jsondump,generator,gen,new,plan,jsondump,generator,return,gen,get,optimizer,plan,as,json,op
LocalExecutor -> public String getOptimizerPlanAsJSON(Plan plan) throws Exception;1418925513;Returns a JSON dump of the optimized plan.__@param plan_The program's plan._@return JSON dump of the optimized plan._@throws Exception;public String getOptimizerPlanAsJSON(Plan plan) throws Exception {_		PactCompiler pc = new PactCompiler(new DataStatistics())__		OptimizedPlan op = pc.compile(plan)__		PlanJSONDumpGenerator gen = new PlanJSONDumpGenerator()__	_		return gen.getOptimizerPlanAsJSON(op)__	};returns,a,json,dump,of,the,optimized,plan,param,plan,the,program,s,plan,return,json,dump,of,the,optimized,plan,throws,exception;public,string,get,optimizer,plan,as,json,plan,plan,throws,exception,pact,compiler,pc,new,pact,compiler,new,data,statistics,optimized,plan,op,pc,compile,plan,plan,jsondump,generator,gen,new,plan,jsondump,generator,return,gen,get,optimizer,plan,as,json,op
LocalExecutor -> public String getOptimizerPlanAsJSON(Plan plan) throws Exception;1426843273;Returns a JSON dump of the optimized plan.__@param plan_The program's plan._@return JSON dump of the optimized plan._@throws Exception;public String getOptimizerPlanAsJSON(Plan plan) throws Exception {_		PactCompiler pc = new PactCompiler(new DataStatistics())__		OptimizedPlan op = pc.compile(plan)__		PlanJSONDumpGenerator gen = new PlanJSONDumpGenerator()__	_		return gen.getOptimizerPlanAsJSON(op)__	};returns,a,json,dump,of,the,optimized,plan,param,plan,the,program,s,plan,return,json,dump,of,the,optimized,plan,throws,exception;public,string,get,optimizer,plan,as,json,plan,plan,throws,exception,pact,compiler,pc,new,pact,compiler,new,data,statistics,optimized,plan,op,pc,compile,plan,plan,jsondump,generator,gen,new,plan,jsondump,generator,return,gen,get,optimizer,plan,as,json,op
LocalExecutor -> public String getOptimizerPlanAsJSON(Plan plan) throws Exception;1426843274;Returns a JSON dump of the optimized plan.__@param plan_The program's plan._@return JSON dump of the optimized plan._@throws Exception;public String getOptimizerPlanAsJSON(Plan plan) throws Exception {_		PactCompiler pc = new PactCompiler(new DataStatistics())__		OptimizedPlan op = pc.compile(plan)__		PlanJSONDumpGenerator gen = new PlanJSONDumpGenerator()__	_		return gen.getOptimizerPlanAsJSON(op)__	};returns,a,json,dump,of,the,optimized,plan,param,plan,the,program,s,plan,return,json,dump,of,the,optimized,plan,throws,exception;public,string,get,optimizer,plan,as,json,plan,plan,throws,exception,pact,compiler,pc,new,pact,compiler,new,data,statistics,optimized,plan,op,pc,compile,plan,plan,jsondump,generator,gen,new,plan,jsondump,generator,return,gen,get,optimizer,plan,as,json,op
LocalExecutor -> public String getOptimizerPlanAsJSON(Plan plan) throws Exception;1426843274;Returns a JSON dump of the optimized plan.__@param plan_The program's plan._@return JSON dump of the optimized plan._@throws Exception;public String getOptimizerPlanAsJSON(Plan plan) throws Exception {_		Optimizer pc = new Optimizer(new DataStatistics())__		OptimizedPlan op = pc.compile(plan)__		PlanJSONDumpGenerator gen = new PlanJSONDumpGenerator()__	_		return gen.getOptimizerPlanAsJSON(op)__	};returns,a,json,dump,of,the,optimized,plan,param,plan,the,program,s,plan,return,json,dump,of,the,optimized,plan,throws,exception;public,string,get,optimizer,plan,as,json,plan,plan,throws,exception,optimizer,pc,new,optimizer,new,data,statistics,optimized,plan,op,pc,compile,plan,plan,jsondump,generator,gen,new,plan,jsondump,generator,return,gen,get,optimizer,plan,as,json,op
LocalExecutor -> public String getOptimizerPlanAsJSON(Plan plan) throws Exception;1427784999;Returns a JSON dump of the optimized plan.__@param plan_The program's plan._@return JSON dump of the optimized plan._@throws Exception;public String getOptimizerPlanAsJSON(Plan plan) throws Exception {_		Optimizer pc = new Optimizer(new DataStatistics(), getConfiguration(this))__		OptimizedPlan op = pc.compile(plan)__		PlanJSONDumpGenerator gen = new PlanJSONDumpGenerator()__	_		return gen.getOptimizerPlanAsJSON(op)__	};returns,a,json,dump,of,the,optimized,plan,param,plan,the,program,s,plan,return,json,dump,of,the,optimized,plan,throws,exception;public,string,get,optimizer,plan,as,json,plan,plan,throws,exception,optimizer,pc,new,optimizer,new,data,statistics,get,configuration,this,optimized,plan,op,pc,compile,plan,plan,jsondump,generator,gen,new,plan,jsondump,generator,return,gen,get,optimizer,plan,as,json,op
LocalExecutor -> public static JobExecutionResult execute(Plan plan) throws Exception;1405024514;Executes the program represented by the given Pact plan.__@param plan The program's plan._@return The net runtime of the program, in milliseconds.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public static JobExecutionResult execute(Plan plan) throws Exception {_		LocalExecutor exec = new LocalExecutor()__		try {_			exec.start()__			return exec.executePlan(plan)__		} finally {_			exec.stop()__		}_	};executes,the,program,represented,by,the,given,pact,plan,param,plan,the,program,s,plan,return,the,net,runtime,of,the,program,in,milliseconds,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,static,job,execution,result,execute,plan,plan,throws,exception,local,executor,exec,new,local,executor,try,exec,start,return,exec,execute,plan,plan,finally,exec,stop
LocalExecutor -> public static JobExecutionResult execute(Plan plan) throws Exception;1405090423;Executes the program represented by the given Pact plan.__@param plan The program's plan._@return The net runtime of the program, in milliseconds.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public static JobExecutionResult execute(Plan plan) throws Exception {_		LocalExecutor exec = new LocalExecutor()__		try {_			exec.start()__			return exec.executePlan(plan)__		} finally {_			exec.stop()__		}_	};executes,the,program,represented,by,the,given,pact,plan,param,plan,the,program,s,plan,return,the,net,runtime,of,the,program,in,milliseconds,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,static,job,execution,result,execute,plan,plan,throws,exception,local,executor,exec,new,local,executor,try,exec,start,return,exec,execute,plan,plan,finally,exec,stop
LocalExecutor -> public static JobExecutionResult execute(Plan plan) throws Exception;1409911022;Executes the program represented by the given Pact plan.__@param plan The program's plan._@return The net runtime of the program, in milliseconds.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public static JobExecutionResult execute(Plan plan) throws Exception {_		LocalExecutor exec = new LocalExecutor()__		try {_			exec.start()__			return exec.executePlan(plan)__		} finally {_			exec.stop()__		}_	};executes,the,program,represented,by,the,given,pact,plan,param,plan,the,program,s,plan,return,the,net,runtime,of,the,program,in,milliseconds,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,static,job,execution,result,execute,plan,plan,throws,exception,local,executor,exec,new,local,executor,try,exec,start,return,exec,execute,plan,plan,finally,exec,stop
LocalExecutor -> public static JobExecutionResult execute(Plan plan) throws Exception;1411473593;Executes the program represented by the given Pact plan.__@param plan The program's plan._@return The net runtime of the program, in milliseconds.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public static JobExecutionResult execute(Plan plan) throws Exception {_		LocalExecutor exec = new LocalExecutor()__		try {_			exec.start()__			return exec.executePlan(plan)__		} finally {_			exec.stop()__		}_	};executes,the,program,represented,by,the,given,pact,plan,param,plan,the,program,s,plan,return,the,net,runtime,of,the,program,in,milliseconds,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,static,job,execution,result,execute,plan,plan,throws,exception,local,executor,exec,new,local,executor,try,exec,start,return,exec,execute,plan,plan,finally,exec,stop
LocalExecutor -> public static JobExecutionResult execute(Plan plan) throws Exception;1418925507;Executes the program represented by the given Pact plan.__@param plan The program's plan._@return The net runtime of the program, in milliseconds.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public static JobExecutionResult execute(Plan plan) throws Exception {_		LocalExecutor exec = new LocalExecutor()__		try {_			exec.start()__			return exec.executePlan(plan)__		} finally {_			exec.stop()__		}_	};executes,the,program,represented,by,the,given,pact,plan,param,plan,the,program,s,plan,return,the,net,runtime,of,the,program,in,milliseconds,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,static,job,execution,result,execute,plan,plan,throws,exception,local,executor,exec,new,local,executor,try,exec,start,return,exec,execute,plan,plan,finally,exec,stop
LocalExecutor -> public static JobExecutionResult execute(Plan plan) throws Exception;1418925507;Executes the program represented by the given Pact plan.__@param plan The program's plan._@return The net runtime of the program, in milliseconds.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public static JobExecutionResult execute(Plan plan) throws Exception {_		LocalExecutor exec = new LocalExecutor()__		try {_			exec.start()__			return exec.executePlan(plan)__		} finally {_			exec.stop()__		}_	};executes,the,program,represented,by,the,given,pact,plan,param,plan,the,program,s,plan,return,the,net,runtime,of,the,program,in,milliseconds,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,static,job,execution,result,execute,plan,plan,throws,exception,local,executor,exec,new,local,executor,try,exec,start,return,exec,execute,plan,plan,finally,exec,stop
LocalExecutor -> public static JobExecutionResult execute(Plan plan) throws Exception;1418925508;Executes the program represented by the given Pact plan.__@param plan The program's plan._@return The net runtime of the program, in milliseconds.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public static JobExecutionResult execute(Plan plan) throws Exception {_		LocalExecutor exec = new LocalExecutor()__		try {_			exec.start()__			return exec.executePlan(plan)__		} finally {_			exec.stop()__		}_	};executes,the,program,represented,by,the,given,pact,plan,param,plan,the,program,s,plan,return,the,net,runtime,of,the,program,in,milliseconds,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,static,job,execution,result,execute,plan,plan,throws,exception,local,executor,exec,new,local,executor,try,exec,start,return,exec,execute,plan,plan,finally,exec,stop
LocalExecutor -> public static JobExecutionResult execute(Plan plan) throws Exception;1418925508;Executes the program represented by the given Pact plan.__@param plan The program's plan._@return The net runtime of the program, in milliseconds.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public static JobExecutionResult execute(Plan plan) throws Exception {_		LocalExecutor exec = new LocalExecutor()__		try {_			exec.start()__			return exec.executePlan(plan)__		} finally {_			exec.stop()__		}_	};executes,the,program,represented,by,the,given,pact,plan,param,plan,the,program,s,plan,return,the,net,runtime,of,the,program,in,milliseconds,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,static,job,execution,result,execute,plan,plan,throws,exception,local,executor,exec,new,local,executor,try,exec,start,return,exec,execute,plan,plan,finally,exec,stop
LocalExecutor -> public static JobExecutionResult execute(Plan plan) throws Exception;1418925510;Executes the program represented by the given Pact plan.__@param plan The program's plan._@return The net runtime of the program, in milliseconds.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public static JobExecutionResult execute(Plan plan) throws Exception {_		LocalExecutor exec = new LocalExecutor()__		try {_			exec.start()__			return exec.executePlan(plan)__		} finally {_			exec.stop()__		}_	};executes,the,program,represented,by,the,given,pact,plan,param,plan,the,program,s,plan,return,the,net,runtime,of,the,program,in,milliseconds,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,static,job,execution,result,execute,plan,plan,throws,exception,local,executor,exec,new,local,executor,try,exec,start,return,exec,execute,plan,plan,finally,exec,stop
LocalExecutor -> public static JobExecutionResult execute(Plan plan) throws Exception;1418925511;Executes the program represented by the given Pact plan.__@param plan The program's plan._@return The net runtime of the program, in milliseconds.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public static JobExecutionResult execute(Plan plan) throws Exception {_		LocalExecutor exec = new LocalExecutor()__		try {_			exec.start()__			return exec.executePlan(plan)__		} finally {_			exec.stop()__		}_	};executes,the,program,represented,by,the,given,pact,plan,param,plan,the,program,s,plan,return,the,net,runtime,of,the,program,in,milliseconds,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,static,job,execution,result,execute,plan,plan,throws,exception,local,executor,exec,new,local,executor,try,exec,start,return,exec,execute,plan,plan,finally,exec,stop
LocalExecutor -> public static JobExecutionResult execute(Plan plan) throws Exception;1418925512;Executes the program represented by the given Pact plan.__@param plan The program's plan._@return The net runtime of the program, in milliseconds.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public static JobExecutionResult execute(Plan plan) throws Exception {_		LocalExecutor exec = new LocalExecutor()__		try {_			exec.start()__			return exec.executePlan(plan)__		} finally {_			exec.stop()__		}_	};executes,the,program,represented,by,the,given,pact,plan,param,plan,the,program,s,plan,return,the,net,runtime,of,the,program,in,milliseconds,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,static,job,execution,result,execute,plan,plan,throws,exception,local,executor,exec,new,local,executor,try,exec,start,return,exec,execute,plan,plan,finally,exec,stop
LocalExecutor -> public static JobExecutionResult execute(Plan plan) throws Exception;1418925513;Executes the program represented by the given Pact plan.__@param plan The program's plan._@return The net runtime of the program, in milliseconds.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public static JobExecutionResult execute(Plan plan) throws Exception {_		LocalExecutor exec = new LocalExecutor()__		try {_			exec.start()__			return exec.executePlan(plan)__		} finally {_			exec.stop()__		}_	};executes,the,program,represented,by,the,given,pact,plan,param,plan,the,program,s,plan,return,the,net,runtime,of,the,program,in,milliseconds,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,static,job,execution,result,execute,plan,plan,throws,exception,local,executor,exec,new,local,executor,try,exec,start,return,exec,execute,plan,plan,finally,exec,stop
LocalExecutor -> public static JobExecutionResult execute(Plan plan) throws Exception;1426843273;Executes the program represented by the given Pact plan.__@param plan The program's plan._@return The net runtime of the program, in milliseconds.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public static JobExecutionResult execute(Plan plan) throws Exception {_		LocalExecutor exec = new LocalExecutor()__		try {_			exec.start()__			return exec.executePlan(plan)__		} finally {_			exec.stop()__		}_	};executes,the,program,represented,by,the,given,pact,plan,param,plan,the,program,s,plan,return,the,net,runtime,of,the,program,in,milliseconds,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,static,job,execution,result,execute,plan,plan,throws,exception,local,executor,exec,new,local,executor,try,exec,start,return,exec,execute,plan,plan,finally,exec,stop
LocalExecutor -> public static JobExecutionResult execute(Plan plan) throws Exception;1426843274;Executes the program represented by the given Pact plan.__@param plan The program's plan._@return The net runtime of the program, in milliseconds.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public static JobExecutionResult execute(Plan plan) throws Exception {_		LocalExecutor exec = new LocalExecutor()__		try {_			exec.start()__			return exec.executePlan(plan)__		} finally {_			exec.stop()__		}_	};executes,the,program,represented,by,the,given,pact,plan,param,plan,the,program,s,plan,return,the,net,runtime,of,the,program,in,milliseconds,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,static,job,execution,result,execute,plan,plan,throws,exception,local,executor,exec,new,local,executor,try,exec,start,return,exec,execute,plan,plan,finally,exec,stop
LocalExecutor -> public static JobExecutionResult execute(Plan plan) throws Exception;1426843274;Executes the program represented by the given Pact plan.__@param plan The program's plan._@return The net runtime of the program, in milliseconds.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public static JobExecutionResult execute(Plan plan) throws Exception {_		LocalExecutor exec = new LocalExecutor()__		try {_			exec.start()__			return exec.executePlan(plan)__		} finally {_			exec.stop()__		}_	};executes,the,program,represented,by,the,given,pact,plan,param,plan,the,program,s,plan,return,the,net,runtime,of,the,program,in,milliseconds,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,static,job,execution,result,execute,plan,plan,throws,exception,local,executor,exec,new,local,executor,try,exec,start,return,exec,execute,plan,plan,finally,exec,stop
LocalExecutor -> public static JobExecutionResult execute(Plan plan) throws Exception;1427784999;Executes the program represented by the given Pact plan.__@param plan The program's plan._@return The net runtime of the program, in milliseconds.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public static JobExecutionResult execute(Plan plan) throws Exception {_		LocalExecutor exec = new LocalExecutor()__		try {_			exec.start()__			return exec.executePlan(plan)__		} finally {_			exec.stop()__		}_	};executes,the,program,represented,by,the,given,pact,plan,param,plan,the,program,s,plan,return,the,net,runtime,of,the,program,in,milliseconds,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,static,job,execution,result,execute,plan,plan,throws,exception,local,executor,exec,new,local,executor,try,exec,start,return,exec,execute,plan,plan,finally,exec,stop
LocalExecutor -> public static JobExecutionResult execute(Plan plan) throws Exception;1427958028;Executes the program represented by the given Pact plan.__@param plan The program's plan._@return The net runtime of the program, in milliseconds.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public static JobExecutionResult execute(Plan plan) throws Exception {_		LocalExecutor exec = new LocalExecutor()__		try {_			exec.start()__			return exec.executePlan(plan)__		} finally {_			exec.stop()__		}_	};executes,the,program,represented,by,the,given,pact,plan,param,plan,the,program,s,plan,return,the,net,runtime,of,the,program,in,milliseconds,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,static,job,execution,result,execute,plan,plan,throws,exception,local,executor,exec,new,local,executor,try,exec,start,return,exec,execute,plan,plan,finally,exec,stop
LocalExecutor -> public static JobExecutionResult execute(Plan plan) throws Exception;1428663519;Executes the program represented by the given Pact plan.__@param plan The program's plan._@return The net runtime of the program, in milliseconds.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public static JobExecutionResult execute(Plan plan) throws Exception {_		LocalExecutor exec = new LocalExecutor()__		try {_			exec.start()__			return exec.executePlan(plan)__		} finally {_			exec.stop()__		}_	};executes,the,program,represented,by,the,given,pact,plan,param,plan,the,program,s,plan,return,the,net,runtime,of,the,program,in,milliseconds,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,static,job,execution,result,execute,plan,plan,throws,exception,local,executor,exec,new,local,executor,try,exec,start,return,exec,execute,plan,plan,finally,exec,stop
LocalExecutor -> public static JobExecutionResult execute(Plan plan) throws Exception;1428935901;Executes the program represented by the given Pact plan.__@param plan The program's plan._@return The net runtime of the program, in milliseconds.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public static JobExecutionResult execute(Plan plan) throws Exception {_		LocalExecutor exec = new LocalExecutor()__		try {_			exec.start()__			return exec.executePlan(plan)__		} finally {_			exec.stop()__		}_	};executes,the,program,represented,by,the,given,pact,plan,param,plan,the,program,s,plan,return,the,net,runtime,of,the,program,in,milliseconds,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,static,job,execution,result,execute,plan,plan,throws,exception,local,executor,exec,new,local,executor,try,exec,start,return,exec,execute,plan,plan,finally,exec,stop
LocalExecutor -> public static JobExecutionResult execute(Plan plan) throws Exception;1428935901;Executes the program represented by the given Pact plan.__@param plan The program's plan._@return The net runtime of the program, in milliseconds.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public static JobExecutionResult execute(Plan plan) throws Exception {_		LocalExecutor exec = new LocalExecutor()__		try {_			exec.start()__			return exec.executePlan(plan)__		} finally {_			exec.stop()__		}_	};executes,the,program,represented,by,the,given,pact,plan,param,plan,the,program,s,plan,return,the,net,runtime,of,the,program,in,milliseconds,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,static,job,execution,result,execute,plan,plan,throws,exception,local,executor,exec,new,local,executor,try,exec,start,return,exec,execute,plan,plan,finally,exec,stop
LocalExecutor -> public static JobExecutionResult execute(Plan plan) throws Exception;1440951699;Executes the program represented by the given Pact plan.__@param plan The program's plan._@return The net runtime of the program, in milliseconds.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public static JobExecutionResult execute(Plan plan) throws Exception {_		LocalExecutor exec = new LocalExecutor()__		try {_			exec.start()__			return exec.executePlan(plan)__		} finally {_			exec.stop()__		}_	};executes,the,program,represented,by,the,given,pact,plan,param,plan,the,program,s,plan,return,the,net,runtime,of,the,program,in,milliseconds,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,static,job,execution,result,execute,plan,plan,throws,exception,local,executor,exec,new,local,executor,try,exec,start,return,exec,execute,plan,plan,finally,exec,stop
LocalExecutor -> public static JobExecutionResult execute(Plan plan) throws Exception;1441011751;Executes the program represented by the given Pact plan.__@param plan The program's plan._@return The net runtime of the program, in milliseconds.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public static JobExecutionResult execute(Plan plan) throws Exception {_		LocalExecutor exec = new LocalExecutor()__		try {_			exec.start()__			return exec.executePlan(plan)__		} finally {_			exec.stop()__		}_	};executes,the,program,represented,by,the,given,pact,plan,param,plan,the,program,s,plan,return,the,net,runtime,of,the,program,in,milliseconds,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,static,job,execution,result,execute,plan,plan,throws,exception,local,executor,exec,new,local,executor,try,exec,start,return,exec,execute,plan,plan,finally,exec,stop
LocalExecutor -> public static JobExecutionResult execute(Plan plan) throws Exception;1441614857;Executes the program represented by the given Pact plan.__@param plan The program's plan._@return The net runtime of the program, in milliseconds.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public static JobExecutionResult execute(Plan plan) throws Exception {_		LocalExecutor exec = new LocalExecutor()__		try {_			exec.start()__			return exec.executePlan(plan)__		} finally {_			exec.stop()__		}_	};executes,the,program,represented,by,the,given,pact,plan,param,plan,the,program,s,plan,return,the,net,runtime,of,the,program,in,milliseconds,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,static,job,execution,result,execute,plan,plan,throws,exception,local,executor,exec,new,local,executor,try,exec,start,return,exec,execute,plan,plan,finally,exec,stop
LocalExecutor -> public static JobExecutionResult execute(Plan plan) throws Exception;1442944546;Executes the given dataflow plan.__@param plan The dataflow plan._@return The execution result.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public static JobExecutionResult execute(Plan plan) throws Exception {_		return new LocalExecutor().executePlan(plan)__	};executes,the,given,dataflow,plan,param,plan,the,dataflow,plan,return,the,execution,result,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,static,job,execution,result,execute,plan,plan,throws,exception,return,new,local,executor,execute,plan,plan
LocalExecutor -> public static JobExecutionResult execute(Plan plan) throws Exception;1443682842;Executes the given dataflow plan.__@param plan The dataflow plan._@return The execution result.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public static JobExecutionResult execute(Plan plan) throws Exception {_		return new LocalExecutor().executePlan(plan)__	};executes,the,given,dataflow,plan,param,plan,the,dataflow,plan,return,the,execution,result,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,static,job,execution,result,execute,plan,plan,throws,exception,return,new,local,executor,execute,plan,plan
LocalExecutor -> public static JobExecutionResult execute(Plan plan) throws Exception;1460563153;Executes the given dataflow plan.__@param plan The dataflow plan._@return The execution result.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public static JobExecutionResult execute(Plan plan) throws Exception {_		return new LocalExecutor().executePlan(plan)__	};executes,the,given,dataflow,plan,param,plan,the,dataflow,plan,return,the,execution,result,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,static,job,execution,result,execute,plan,plan,throws,exception,return,new,local,executor,execute,plan,plan
LocalExecutor -> public static JobExecutionResult execute(Plan plan) throws Exception;1477989375;Executes the given dataflow plan.__@param plan The dataflow plan._@return The execution result.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public static JobExecutionResult execute(Plan plan) throws Exception {_		return new LocalExecutor().executePlan(plan)__	};executes,the,given,dataflow,plan,param,plan,the,dataflow,plan,return,the,execution,result,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,static,job,execution,result,execute,plan,plan,throws,exception,return,new,local,executor,execute,plan,plan
LocalExecutor -> public static JobExecutionResult execute(Plan plan) throws Exception;1492269386;Executes the given dataflow plan.__@param plan The dataflow plan._@return The execution result.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public static JobExecutionResult execute(Plan plan) throws Exception {_		return new LocalExecutor().executePlan(plan)__	};executes,the,given,dataflow,plan,param,plan,the,dataflow,plan,return,the,execution,result,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,static,job,execution,result,execute,plan,plan,throws,exception,return,new,local,executor,execute,plan,plan
LocalExecutor -> public static JobExecutionResult execute(Plan plan) throws Exception;1495778594;Executes the given dataflow plan.__@param plan The dataflow plan._@return The execution result.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public static JobExecutionResult execute(Plan plan) throws Exception {_		return new LocalExecutor().executePlan(plan)__	};executes,the,given,dataflow,plan,param,plan,the,dataflow,plan,return,the,execution,result,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,static,job,execution,result,execute,plan,plan,throws,exception,return,new,local,executor,execute,plan,plan
LocalExecutor -> public static JobExecutionResult execute(Plan plan) throws Exception;1499075301;Executes the given dataflow plan.__@param plan The dataflow plan._@return The execution result.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public static JobExecutionResult execute(Plan plan) throws Exception {_		return new LocalExecutor().executePlan(plan)__	};executes,the,given,dataflow,plan,param,plan,the,dataflow,plan,return,the,execution,result,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,static,job,execution,result,execute,plan,plan,throws,exception,return,new,local,executor,execute,plan,plan
LocalExecutor -> public static JobExecutionResult execute(Plan plan) throws Exception;1518605788;Executes the given dataflow plan.__@param plan The dataflow plan._@return The execution result.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public static JobExecutionResult execute(Plan plan) throws Exception {_		return new LocalExecutor().executePlan(plan)__	};executes,the,given,dataflow,plan,param,plan,the,dataflow,plan,return,the,execution,result,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,static,job,execution,result,execute,plan,plan,throws,exception,return,new,local,executor,execute,plan,plan
LocalExecutor -> public static JobExecutionResult execute(Plan plan) throws Exception;1519121818;Executes the given dataflow plan.__@param plan The dataflow plan._@return The execution result.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public static JobExecutionResult execute(Plan plan) throws Exception {_		return new LocalExecutor().executePlan(plan)__	};executes,the,given,dataflow,plan,param,plan,the,dataflow,plan,return,the,execution,result,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,static,job,execution,result,execute,plan,plan,throws,exception,return,new,local,executor,execute,plan,plan
LocalExecutor -> public static JobExecutionResult execute(Plan plan) throws Exception;1519249745;Executes the given dataflow plan.__@param plan The dataflow plan._@return The execution result.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public static JobExecutionResult execute(Plan plan) throws Exception {_		return new LocalExecutor().executePlan(plan)__	};executes,the,given,dataflow,plan,param,plan,the,dataflow,plan,return,the,execution,result,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,static,job,execution,result,execute,plan,plan,throws,exception,return,new,local,executor,execute,plan,plan
LocalExecutor -> public static JobExecutionResult execute(Plan plan) throws Exception;1522681180;Executes the given dataflow plan.__@param plan The dataflow plan._@return The execution result.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public static JobExecutionResult execute(Plan plan) throws Exception {_		return new LocalExecutor().executePlan(plan)__	};executes,the,given,dataflow,plan,param,plan,the,dataflow,plan,return,the,execution,result,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,static,job,execution,result,execute,plan,plan,throws,exception,return,new,local,executor,execute,plan,plan
LocalExecutor -> public static JobExecutionResult execute(Plan plan) throws Exception;1524085355;Executes the given dataflow plan.__@param plan The dataflow plan._@return The execution result.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public static JobExecutionResult execute(Plan plan) throws Exception {_		return new LocalExecutor().executePlan(plan)__	};executes,the,given,dataflow,plan,param,plan,the,dataflow,plan,return,the,execution,result,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,static,job,execution,result,execute,plan,plan,throws,exception,return,new,local,executor,execute,plan,plan
LocalExecutor -> public static JobExecutionResult execute(Plan plan) throws Exception;1524124694;Executes the given dataflow plan.__@param plan The dataflow plan._@return The execution result.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public static JobExecutionResult execute(Plan plan) throws Exception {_		return new LocalExecutor().executePlan(plan)__	};executes,the,given,dataflow,plan,param,plan,the,dataflow,plan,return,the,execution,result,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,static,job,execution,result,execute,plan,plan,throws,exception,return,new,local,executor,execute,plan,plan
LocalExecutor -> public static JobExecutionResult execute(Plan plan) throws Exception;1524570317;Executes the given dataflow plan.__@param plan The dataflow plan._@return The execution result.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public static JobExecutionResult execute(Plan plan) throws Exception {_		return new LocalExecutor().executePlan(plan)__	};executes,the,given,dataflow,plan,param,plan,the,dataflow,plan,return,the,execution,result,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,static,job,execution,result,execute,plan,plan,throws,exception,return,new,local,executor,execute,plan,plan
LocalExecutor -> public static JobExecutionResult execute(Plan plan) throws Exception;1529682304;Executes the given dataflow plan.__@param plan The dataflow plan._@return The execution result.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public static JobExecutionResult execute(Plan plan) throws Exception {_		return new LocalExecutor().executePlan(plan)__	};executes,the,given,dataflow,plan,param,plan,the,dataflow,plan,return,the,execution,result,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,static,job,execution,result,execute,plan,plan,throws,exception,return,new,local,executor,execute,plan,plan
LocalExecutor -> public static JobExecutionResult execute(Plan plan) throws Exception;1538135826;Executes the given dataflow plan.__@param plan The dataflow plan._@return The execution result.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public static JobExecutionResult execute(Plan plan) throws Exception {_		return new LocalExecutor().executePlan(plan)__	};executes,the,given,dataflow,plan,param,plan,the,dataflow,plan,return,the,execution,result,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,static,job,execution,result,execute,plan,plan,throws,exception,return,new,local,executor,execute,plan,plan
LocalExecutor -> public static JobExecutionResult execute(Plan plan) throws Exception;1549360057;Executes the given dataflow plan.__@param plan The dataflow plan._@return The execution result.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public static JobExecutionResult execute(Plan plan) throws Exception {_		return new LocalExecutor().executePlan(plan)__	};executes,the,given,dataflow,plan,param,plan,the,dataflow,plan,return,the,execution,result,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,static,job,execution,result,execute,plan,plan,throws,exception,return,new,local,executor,execute,plan,plan
LocalExecutor -> public static JobExecutionResult execute(Plan plan) throws Exception;1550222817;Executes the given dataflow plan.__@param plan The dataflow plan._@return The execution result.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public static JobExecutionResult execute(Plan plan) throws Exception {_		return new LocalExecutor().executePlan(plan)__	};executes,the,given,dataflow,plan,param,plan,the,dataflow,plan,return,the,execution,result,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,static,job,execution,result,execute,plan,plan,throws,exception,return,new,local,executor,execute,plan,plan
LocalExecutor -> @Override 	public String getOptimizerPlanAsJSON(Plan plan) throws Exception;1427958028;Returns a JSON dump of the optimized plan.__@param plan_The program's plan._@return JSON dump of the optimized plan._@throws Exception;@Override_	public String getOptimizerPlanAsJSON(Plan plan) throws Exception {_		Optimizer pc = new Optimizer(new DataStatistics(), createConfiguration(this))__		OptimizedPlan op = pc.compile(plan)__		PlanJSONDumpGenerator gen = new PlanJSONDumpGenerator()__	_		return gen.getOptimizerPlanAsJSON(op)__	};returns,a,json,dump,of,the,optimized,plan,param,plan,the,program,s,plan,return,json,dump,of,the,optimized,plan,throws,exception;override,public,string,get,optimizer,plan,as,json,plan,plan,throws,exception,optimizer,pc,new,optimizer,new,data,statistics,create,configuration,this,optimized,plan,op,pc,compile,plan,plan,jsondump,generator,gen,new,plan,jsondump,generator,return,gen,get,optimizer,plan,as,json,op
LocalExecutor -> @Override 	public String getOptimizerPlanAsJSON(Plan plan) throws Exception;1428663519;Returns a JSON dump of the optimized plan.__@param plan_The program's plan._@return JSON dump of the optimized plan._@throws Exception;@Override_	public String getOptimizerPlanAsJSON(Plan plan) throws Exception {_		Optimizer pc = new Optimizer(new DataStatistics(), createConfiguration(this))__		OptimizedPlan op = pc.compile(plan)__		PlanJSONDumpGenerator gen = new PlanJSONDumpGenerator()__	_		return gen.getOptimizerPlanAsJSON(op)__	};returns,a,json,dump,of,the,optimized,plan,param,plan,the,program,s,plan,return,json,dump,of,the,optimized,plan,throws,exception;override,public,string,get,optimizer,plan,as,json,plan,plan,throws,exception,optimizer,pc,new,optimizer,new,data,statistics,create,configuration,this,optimized,plan,op,pc,compile,plan,plan,jsondump,generator,gen,new,plan,jsondump,generator,return,gen,get,optimizer,plan,as,json,op
LocalExecutor -> @Override 	public String getOptimizerPlanAsJSON(Plan plan) throws Exception;1428935901;Returns a JSON dump of the optimized plan.__@param plan_The program's plan._@return JSON dump of the optimized plan._@throws Exception;@Override_	public String getOptimizerPlanAsJSON(Plan plan) throws Exception {_		Optimizer pc = new Optimizer(new DataStatistics(), createConfiguration(this))__		OptimizedPlan op = pc.compile(plan)__		PlanJSONDumpGenerator gen = new PlanJSONDumpGenerator()__	_		return gen.getOptimizerPlanAsJSON(op)__	};returns,a,json,dump,of,the,optimized,plan,param,plan,the,program,s,plan,return,json,dump,of,the,optimized,plan,throws,exception;override,public,string,get,optimizer,plan,as,json,plan,plan,throws,exception,optimizer,pc,new,optimizer,new,data,statistics,create,configuration,this,optimized,plan,op,pc,compile,plan,plan,jsondump,generator,gen,new,plan,jsondump,generator,return,gen,get,optimizer,plan,as,json,op
LocalExecutor -> @Override 	public String getOptimizerPlanAsJSON(Plan plan) throws Exception;1428935901;Returns a JSON dump of the optimized plan.__@param plan_The program's plan._@return JSON dump of the optimized plan._@throws Exception;@Override_	public String getOptimizerPlanAsJSON(Plan plan) throws Exception {_		Optimizer pc = new Optimizer(new DataStatistics(), createConfiguration(this))__		OptimizedPlan op = pc.compile(plan)__		PlanJSONDumpGenerator gen = new PlanJSONDumpGenerator()__	_		return gen.getOptimizerPlanAsJSON(op)__	};returns,a,json,dump,of,the,optimized,plan,param,plan,the,program,s,plan,return,json,dump,of,the,optimized,plan,throws,exception;override,public,string,get,optimizer,plan,as,json,plan,plan,throws,exception,optimizer,pc,new,optimizer,new,data,statistics,create,configuration,this,optimized,plan,op,pc,compile,plan,plan,jsondump,generator,gen,new,plan,jsondump,generator,return,gen,get,optimizer,plan,as,json,op
LocalExecutor -> @Override 	public String getOptimizerPlanAsJSON(Plan plan) throws Exception;1440951699;Returns a JSON dump of the optimized plan.__@param plan_The program's plan._@return JSON dump of the optimized plan._@throws Exception;@Override_	public String getOptimizerPlanAsJSON(Plan plan) throws Exception {_		Optimizer pc = new Optimizer(new DataStatistics(), createConfiguration(this))__		OptimizedPlan op = pc.compile(plan)__		PlanJSONDumpGenerator gen = new PlanJSONDumpGenerator()__	_		return gen.getOptimizerPlanAsJSON(op)__	};returns,a,json,dump,of,the,optimized,plan,param,plan,the,program,s,plan,return,json,dump,of,the,optimized,plan,throws,exception;override,public,string,get,optimizer,plan,as,json,plan,plan,throws,exception,optimizer,pc,new,optimizer,new,data,statistics,create,configuration,this,optimized,plan,op,pc,compile,plan,plan,jsondump,generator,gen,new,plan,jsondump,generator,return,gen,get,optimizer,plan,as,json,op
LocalExecutor -> @Override 	public String getOptimizerPlanAsJSON(Plan plan) throws Exception;1441011751;Returns a JSON dump of the optimized plan.__@param plan_The program's plan._@return JSON dump of the optimized plan._@throws Exception;@Override_	public String getOptimizerPlanAsJSON(Plan plan) throws Exception {_		Optimizer pc = new Optimizer(new DataStatistics(), createConfiguration(this))__		OptimizedPlan op = pc.compile(plan)__		PlanJSONDumpGenerator gen = new PlanJSONDumpGenerator()__	_		return gen.getOptimizerPlanAsJSON(op)__	};returns,a,json,dump,of,the,optimized,plan,param,plan,the,program,s,plan,return,json,dump,of,the,optimized,plan,throws,exception;override,public,string,get,optimizer,plan,as,json,plan,plan,throws,exception,optimizer,pc,new,optimizer,new,data,statistics,create,configuration,this,optimized,plan,op,pc,compile,plan,plan,jsondump,generator,gen,new,plan,jsondump,generator,return,gen,get,optimizer,plan,as,json,op
LocalExecutor -> @Override 	public String getOptimizerPlanAsJSON(Plan plan) throws Exception;1441614857;Returns a JSON dump of the optimized plan.__@param plan_The program's plan._@return JSON dump of the optimized plan._@throws Exception;@Override_	public String getOptimizerPlanAsJSON(Plan plan) throws Exception {_		Optimizer pc = new Optimizer(new DataStatistics(), createConfiguration(this))__		OptimizedPlan op = pc.compile(plan)__		PlanJSONDumpGenerator gen = new PlanJSONDumpGenerator()__	_		return gen.getOptimizerPlanAsJSON(op)__	};returns,a,json,dump,of,the,optimized,plan,param,plan,the,program,s,plan,return,json,dump,of,the,optimized,plan,throws,exception;override,public,string,get,optimizer,plan,as,json,plan,plan,throws,exception,optimizer,pc,new,optimizer,new,data,statistics,create,configuration,this,optimized,plan,op,pc,compile,plan,plan,jsondump,generator,gen,new,plan,jsondump,generator,return,gen,get,optimizer,plan,as,json,op
LocalExecutor -> @Override 	public String getOptimizerPlanAsJSON(Plan plan) throws Exception;1442944546;Creates a JSON representation of the given dataflow's execution plan.__@param plan The dataflow plan._@return The dataflow's execution plan, as a JSON string._@throws Exception Thrown, if the optimization process that creates the execution plan failed.;@Override_	public String getOptimizerPlanAsJSON(Plan plan) throws Exception {_		final int parallelism = plan.getDefaultParallelism() == -1 ? 1 : plan.getDefaultParallelism()___		Optimizer pc = new Optimizer(new DataStatistics(), this.configuration)__		pc.setDefaultParallelism(parallelism)__		OptimizedPlan op = pc.compile(plan)___		return new PlanJSONDumpGenerator().getOptimizerPlanAsJSON(op)__	};creates,a,json,representation,of,the,given,dataflow,s,execution,plan,param,plan,the,dataflow,plan,return,the,dataflow,s,execution,plan,as,a,json,string,throws,exception,thrown,if,the,optimization,process,that,creates,the,execution,plan,failed;override,public,string,get,optimizer,plan,as,json,plan,plan,throws,exception,final,int,parallelism,plan,get,default,parallelism,1,1,plan,get,default,parallelism,optimizer,pc,new,optimizer,new,data,statistics,this,configuration,pc,set,default,parallelism,parallelism,optimized,plan,op,pc,compile,plan,return,new,plan,jsondump,generator,get,optimizer,plan,as,json,op
LocalExecutor -> @Override 	public String getOptimizerPlanAsJSON(Plan plan) throws Exception;1443682842;Creates a JSON representation of the given dataflow's execution plan.__@param plan The dataflow plan._@return The dataflow's execution plan, as a JSON string._@throws Exception Thrown, if the optimization process that creates the execution plan failed.;@Override_	public String getOptimizerPlanAsJSON(Plan plan) throws Exception {_		final int parallelism = plan.getDefaultParallelism() == -1 ? 1 : plan.getDefaultParallelism()___		Optimizer pc = new Optimizer(new DataStatistics(), this.configuration)__		pc.setDefaultParallelism(parallelism)__		OptimizedPlan op = pc.compile(plan)___		return new PlanJSONDumpGenerator().getOptimizerPlanAsJSON(op)__	};creates,a,json,representation,of,the,given,dataflow,s,execution,plan,param,plan,the,dataflow,plan,return,the,dataflow,s,execution,plan,as,a,json,string,throws,exception,thrown,if,the,optimization,process,that,creates,the,execution,plan,failed;override,public,string,get,optimizer,plan,as,json,plan,plan,throws,exception,final,int,parallelism,plan,get,default,parallelism,1,1,plan,get,default,parallelism,optimizer,pc,new,optimizer,new,data,statistics,this,configuration,pc,set,default,parallelism,parallelism,optimized,plan,op,pc,compile,plan,return,new,plan,jsondump,generator,get,optimizer,plan,as,json,op
LocalExecutor -> @Override 	public String getOptimizerPlanAsJSON(Plan plan) throws Exception;1460563153;Creates a JSON representation of the given dataflow's execution plan.__@param plan The dataflow plan._@return The dataflow's execution plan, as a JSON string._@throws Exception Thrown, if the optimization process that creates the execution plan failed.;@Override_	public String getOptimizerPlanAsJSON(Plan plan) throws Exception {_		final int parallelism = plan.getDefaultParallelism() == ExecutionConfig.PARALLELISM_DEFAULT ? 1 : plan.getDefaultParallelism()___		Optimizer pc = new Optimizer(new DataStatistics(), this.configuration)__		pc.setDefaultParallelism(parallelism)__		OptimizedPlan op = pc.compile(plan)___		return new PlanJSONDumpGenerator().getOptimizerPlanAsJSON(op)__	};creates,a,json,representation,of,the,given,dataflow,s,execution,plan,param,plan,the,dataflow,plan,return,the,dataflow,s,execution,plan,as,a,json,string,throws,exception,thrown,if,the,optimization,process,that,creates,the,execution,plan,failed;override,public,string,get,optimizer,plan,as,json,plan,plan,throws,exception,final,int,parallelism,plan,get,default,parallelism,execution,config,1,plan,get,default,parallelism,optimizer,pc,new,optimizer,new,data,statistics,this,configuration,pc,set,default,parallelism,parallelism,optimized,plan,op,pc,compile,plan,return,new,plan,jsondump,generator,get,optimizer,plan,as,json,op
LocalExecutor -> @Override 	public String getOptimizerPlanAsJSON(Plan plan) throws Exception;1477989375;Creates a JSON representation of the given dataflow's execution plan.__@param plan The dataflow plan._@return The dataflow's execution plan, as a JSON string._@throws Exception Thrown, if the optimization process that creates the execution plan failed.;@Override_	public String getOptimizerPlanAsJSON(Plan plan) throws Exception {_		final int parallelism = plan.getDefaultParallelism() == ExecutionConfig.PARALLELISM_DEFAULT ? 1 : plan.getDefaultParallelism()___		Optimizer pc = new Optimizer(new DataStatistics(), this.configuration)__		pc.setDefaultParallelism(parallelism)__		OptimizedPlan op = pc.compile(plan)___		return new PlanJSONDumpGenerator().getOptimizerPlanAsJSON(op)__	};creates,a,json,representation,of,the,given,dataflow,s,execution,plan,param,plan,the,dataflow,plan,return,the,dataflow,s,execution,plan,as,a,json,string,throws,exception,thrown,if,the,optimization,process,that,creates,the,execution,plan,failed;override,public,string,get,optimizer,plan,as,json,plan,plan,throws,exception,final,int,parallelism,plan,get,default,parallelism,execution,config,1,plan,get,default,parallelism,optimizer,pc,new,optimizer,new,data,statistics,this,configuration,pc,set,default,parallelism,parallelism,optimized,plan,op,pc,compile,plan,return,new,plan,jsondump,generator,get,optimizer,plan,as,json,op
LocalExecutor -> @Override 	public String getOptimizerPlanAsJSON(Plan plan) throws Exception;1492269386;Creates a JSON representation of the given dataflow's execution plan.__@param plan The dataflow plan._@return The dataflow's execution plan, as a JSON string._@throws Exception Thrown, if the optimization process that creates the execution plan failed.;@Override_	public String getOptimizerPlanAsJSON(Plan plan) throws Exception {_		final int parallelism = plan.getDefaultParallelism() == ExecutionConfig.PARALLELISM_DEFAULT ? 1 : plan.getDefaultParallelism()___		Optimizer pc = new Optimizer(new DataStatistics(), this.configuration)__		pc.setDefaultParallelism(parallelism)__		OptimizedPlan op = pc.compile(plan)___		return new PlanJSONDumpGenerator().getOptimizerPlanAsJSON(op)__	};creates,a,json,representation,of,the,given,dataflow,s,execution,plan,param,plan,the,dataflow,plan,return,the,dataflow,s,execution,plan,as,a,json,string,throws,exception,thrown,if,the,optimization,process,that,creates,the,execution,plan,failed;override,public,string,get,optimizer,plan,as,json,plan,plan,throws,exception,final,int,parallelism,plan,get,default,parallelism,execution,config,1,plan,get,default,parallelism,optimizer,pc,new,optimizer,new,data,statistics,this,configuration,pc,set,default,parallelism,parallelism,optimized,plan,op,pc,compile,plan,return,new,plan,jsondump,generator,get,optimizer,plan,as,json,op
LocalExecutor -> @Override 	public String getOptimizerPlanAsJSON(Plan plan) throws Exception;1495778594;Creates a JSON representation of the given dataflow's execution plan.__@param plan The dataflow plan._@return The dataflow's execution plan, as a JSON string._@throws Exception Thrown, if the optimization process that creates the execution plan failed.;@Override_	public String getOptimizerPlanAsJSON(Plan plan) throws Exception {_		final int parallelism = plan.getDefaultParallelism() == ExecutionConfig.PARALLELISM_DEFAULT ? 1 : plan.getDefaultParallelism()___		Optimizer pc = new Optimizer(new DataStatistics(), this.configuration)__		pc.setDefaultParallelism(parallelism)__		OptimizedPlan op = pc.compile(plan)___		return new PlanJSONDumpGenerator().getOptimizerPlanAsJSON(op)__	};creates,a,json,representation,of,the,given,dataflow,s,execution,plan,param,plan,the,dataflow,plan,return,the,dataflow,s,execution,plan,as,a,json,string,throws,exception,thrown,if,the,optimization,process,that,creates,the,execution,plan,failed;override,public,string,get,optimizer,plan,as,json,plan,plan,throws,exception,final,int,parallelism,plan,get,default,parallelism,execution,config,1,plan,get,default,parallelism,optimizer,pc,new,optimizer,new,data,statistics,this,configuration,pc,set,default,parallelism,parallelism,optimized,plan,op,pc,compile,plan,return,new,plan,jsondump,generator,get,optimizer,plan,as,json,op
LocalExecutor -> @Override 	public String getOptimizerPlanAsJSON(Plan plan) throws Exception;1499075301;Creates a JSON representation of the given dataflow's execution plan.__@param plan The dataflow plan._@return The dataflow's execution plan, as a JSON string._@throws Exception Thrown, if the optimization process that creates the execution plan failed.;@Override_	public String getOptimizerPlanAsJSON(Plan plan) throws Exception {_		final int parallelism = plan.getDefaultParallelism() == ExecutionConfig.PARALLELISM_DEFAULT ? 1 : plan.getDefaultParallelism()___		Optimizer pc = new Optimizer(new DataStatistics(), this.configuration)__		pc.setDefaultParallelism(parallelism)__		OptimizedPlan op = pc.compile(plan)___		return new PlanJSONDumpGenerator().getOptimizerPlanAsJSON(op)__	};creates,a,json,representation,of,the,given,dataflow,s,execution,plan,param,plan,the,dataflow,plan,return,the,dataflow,s,execution,plan,as,a,json,string,throws,exception,thrown,if,the,optimization,process,that,creates,the,execution,plan,failed;override,public,string,get,optimizer,plan,as,json,plan,plan,throws,exception,final,int,parallelism,plan,get,default,parallelism,execution,config,1,plan,get,default,parallelism,optimizer,pc,new,optimizer,new,data,statistics,this,configuration,pc,set,default,parallelism,parallelism,optimized,plan,op,pc,compile,plan,return,new,plan,jsondump,generator,get,optimizer,plan,as,json,op
LocalExecutor -> @Override 	public String getOptimizerPlanAsJSON(Plan plan) throws Exception;1518605788;Creates a JSON representation of the given dataflow's execution plan.__@param plan The dataflow plan._@return The dataflow's execution plan, as a JSON string._@throws Exception Thrown, if the optimization process that creates the execution plan failed.;@Override_	public String getOptimizerPlanAsJSON(Plan plan) throws Exception {_		final int parallelism = plan.getDefaultParallelism() == ExecutionConfig.PARALLELISM_DEFAULT ? 1 : plan.getDefaultParallelism()___		Optimizer pc = new Optimizer(new DataStatistics(), this.configuration)__		pc.setDefaultParallelism(parallelism)__		OptimizedPlan op = pc.compile(plan)___		return new PlanJSONDumpGenerator().getOptimizerPlanAsJSON(op)__	};creates,a,json,representation,of,the,given,dataflow,s,execution,plan,param,plan,the,dataflow,plan,return,the,dataflow,s,execution,plan,as,a,json,string,throws,exception,thrown,if,the,optimization,process,that,creates,the,execution,plan,failed;override,public,string,get,optimizer,plan,as,json,plan,plan,throws,exception,final,int,parallelism,plan,get,default,parallelism,execution,config,1,plan,get,default,parallelism,optimizer,pc,new,optimizer,new,data,statistics,this,configuration,pc,set,default,parallelism,parallelism,optimized,plan,op,pc,compile,plan,return,new,plan,jsondump,generator,get,optimizer,plan,as,json,op
LocalExecutor -> @Override 	public String getOptimizerPlanAsJSON(Plan plan) throws Exception;1519121818;Creates a JSON representation of the given dataflow's execution plan.__@param plan The dataflow plan._@return The dataflow's execution plan, as a JSON string._@throws Exception Thrown, if the optimization process that creates the execution plan failed.;@Override_	public String getOptimizerPlanAsJSON(Plan plan) throws Exception {_		final int parallelism = plan.getDefaultParallelism() == ExecutionConfig.PARALLELISM_DEFAULT ? 1 : plan.getDefaultParallelism()___		Optimizer pc = new Optimizer(new DataStatistics(), this.baseConfiguration)__		pc.setDefaultParallelism(parallelism)__		OptimizedPlan op = pc.compile(plan)___		return new PlanJSONDumpGenerator().getOptimizerPlanAsJSON(op)__	};creates,a,json,representation,of,the,given,dataflow,s,execution,plan,param,plan,the,dataflow,plan,return,the,dataflow,s,execution,plan,as,a,json,string,throws,exception,thrown,if,the,optimization,process,that,creates,the,execution,plan,failed;override,public,string,get,optimizer,plan,as,json,plan,plan,throws,exception,final,int,parallelism,plan,get,default,parallelism,execution,config,1,plan,get,default,parallelism,optimizer,pc,new,optimizer,new,data,statistics,this,base,configuration,pc,set,default,parallelism,parallelism,optimized,plan,op,pc,compile,plan,return,new,plan,jsondump,generator,get,optimizer,plan,as,json,op
LocalExecutor -> @Override 	public String getOptimizerPlanAsJSON(Plan plan) throws Exception;1519249745;Creates a JSON representation of the given dataflow's execution plan.__@param plan The dataflow plan._@return The dataflow's execution plan, as a JSON string._@throws Exception Thrown, if the optimization process that creates the execution plan failed.;@Override_	public String getOptimizerPlanAsJSON(Plan plan) throws Exception {_		final int parallelism = plan.getDefaultParallelism() == ExecutionConfig.PARALLELISM_DEFAULT ? 1 : plan.getDefaultParallelism()___		Optimizer pc = new Optimizer(new DataStatistics(), this.baseConfiguration)__		pc.setDefaultParallelism(parallelism)__		OptimizedPlan op = pc.compile(plan)___		return new PlanJSONDumpGenerator().getOptimizerPlanAsJSON(op)__	};creates,a,json,representation,of,the,given,dataflow,s,execution,plan,param,plan,the,dataflow,plan,return,the,dataflow,s,execution,plan,as,a,json,string,throws,exception,thrown,if,the,optimization,process,that,creates,the,execution,plan,failed;override,public,string,get,optimizer,plan,as,json,plan,plan,throws,exception,final,int,parallelism,plan,get,default,parallelism,execution,config,1,plan,get,default,parallelism,optimizer,pc,new,optimizer,new,data,statistics,this,base,configuration,pc,set,default,parallelism,parallelism,optimized,plan,op,pc,compile,plan,return,new,plan,jsondump,generator,get,optimizer,plan,as,json,op
LocalExecutor -> @Override 	public String getOptimizerPlanAsJSON(Plan plan) throws Exception;1522681180;Creates a JSON representation of the given dataflow's execution plan.__@param plan The dataflow plan._@return The dataflow's execution plan, as a JSON string._@throws Exception Thrown, if the optimization process that creates the execution plan failed.;@Override_	public String getOptimizerPlanAsJSON(Plan plan) throws Exception {_		final int parallelism = plan.getDefaultParallelism() == ExecutionConfig.PARALLELISM_DEFAULT ? 1 : plan.getDefaultParallelism()___		Optimizer pc = new Optimizer(new DataStatistics(), this.baseConfiguration)__		pc.setDefaultParallelism(parallelism)__		OptimizedPlan op = pc.compile(plan)___		return new PlanJSONDumpGenerator().getOptimizerPlanAsJSON(op)__	};creates,a,json,representation,of,the,given,dataflow,s,execution,plan,param,plan,the,dataflow,plan,return,the,dataflow,s,execution,plan,as,a,json,string,throws,exception,thrown,if,the,optimization,process,that,creates,the,execution,plan,failed;override,public,string,get,optimizer,plan,as,json,plan,plan,throws,exception,final,int,parallelism,plan,get,default,parallelism,execution,config,1,plan,get,default,parallelism,optimizer,pc,new,optimizer,new,data,statistics,this,base,configuration,pc,set,default,parallelism,parallelism,optimized,plan,op,pc,compile,plan,return,new,plan,jsondump,generator,get,optimizer,plan,as,json,op
LocalExecutor -> @Override 	public String getOptimizerPlanAsJSON(Plan plan) throws Exception;1524085355;Creates a JSON representation of the given dataflow's execution plan.__@param plan The dataflow plan._@return The dataflow's execution plan, as a JSON string._@throws Exception Thrown, if the optimization process that creates the execution plan failed.;@Override_	public String getOptimizerPlanAsJSON(Plan plan) throws Exception {_		final int parallelism = plan.getDefaultParallelism() == ExecutionConfig.PARALLELISM_DEFAULT ? 1 : plan.getDefaultParallelism()___		Optimizer pc = new Optimizer(new DataStatistics(), this.baseConfiguration)__		pc.setDefaultParallelism(parallelism)__		OptimizedPlan op = pc.compile(plan)___		return new PlanJSONDumpGenerator().getOptimizerPlanAsJSON(op)__	};creates,a,json,representation,of,the,given,dataflow,s,execution,plan,param,plan,the,dataflow,plan,return,the,dataflow,s,execution,plan,as,a,json,string,throws,exception,thrown,if,the,optimization,process,that,creates,the,execution,plan,failed;override,public,string,get,optimizer,plan,as,json,plan,plan,throws,exception,final,int,parallelism,plan,get,default,parallelism,execution,config,1,plan,get,default,parallelism,optimizer,pc,new,optimizer,new,data,statistics,this,base,configuration,pc,set,default,parallelism,parallelism,optimized,plan,op,pc,compile,plan,return,new,plan,jsondump,generator,get,optimizer,plan,as,json,op
LocalExecutor -> @Override 	public String getOptimizerPlanAsJSON(Plan plan) throws Exception;1524124694;Creates a JSON representation of the given dataflow's execution plan.__@param plan The dataflow plan._@return The dataflow's execution plan, as a JSON string._@throws Exception Thrown, if the optimization process that creates the execution plan failed.;@Override_	public String getOptimizerPlanAsJSON(Plan plan) throws Exception {_		final int parallelism = plan.getDefaultParallelism() == ExecutionConfig.PARALLELISM_DEFAULT ? 1 : plan.getDefaultParallelism()___		Optimizer pc = new Optimizer(new DataStatistics(), this.baseConfiguration)__		pc.setDefaultParallelism(parallelism)__		OptimizedPlan op = pc.compile(plan)___		return new PlanJSONDumpGenerator().getOptimizerPlanAsJSON(op)__	};creates,a,json,representation,of,the,given,dataflow,s,execution,plan,param,plan,the,dataflow,plan,return,the,dataflow,s,execution,plan,as,a,json,string,throws,exception,thrown,if,the,optimization,process,that,creates,the,execution,plan,failed;override,public,string,get,optimizer,plan,as,json,plan,plan,throws,exception,final,int,parallelism,plan,get,default,parallelism,execution,config,1,plan,get,default,parallelism,optimizer,pc,new,optimizer,new,data,statistics,this,base,configuration,pc,set,default,parallelism,parallelism,optimized,plan,op,pc,compile,plan,return,new,plan,jsondump,generator,get,optimizer,plan,as,json,op
LocalExecutor -> @Override 	public String getOptimizerPlanAsJSON(Plan plan) throws Exception;1524570317;Creates a JSON representation of the given dataflow's execution plan.__@param plan The dataflow plan._@return The dataflow's execution plan, as a JSON string._@throws Exception Thrown, if the optimization process that creates the execution plan failed.;@Override_	public String getOptimizerPlanAsJSON(Plan plan) throws Exception {_		final int parallelism = plan.getDefaultParallelism() == ExecutionConfig.PARALLELISM_DEFAULT ? 1 : plan.getDefaultParallelism()___		Optimizer pc = new Optimizer(new DataStatistics(), this.baseConfiguration)__		pc.setDefaultParallelism(parallelism)__		OptimizedPlan op = pc.compile(plan)___		return new PlanJSONDumpGenerator().getOptimizerPlanAsJSON(op)__	};creates,a,json,representation,of,the,given,dataflow,s,execution,plan,param,plan,the,dataflow,plan,return,the,dataflow,s,execution,plan,as,a,json,string,throws,exception,thrown,if,the,optimization,process,that,creates,the,execution,plan,failed;override,public,string,get,optimizer,plan,as,json,plan,plan,throws,exception,final,int,parallelism,plan,get,default,parallelism,execution,config,1,plan,get,default,parallelism,optimizer,pc,new,optimizer,new,data,statistics,this,base,configuration,pc,set,default,parallelism,parallelism,optimized,plan,op,pc,compile,plan,return,new,plan,jsondump,generator,get,optimizer,plan,as,json,op
LocalExecutor -> @Override 	public String getOptimizerPlanAsJSON(Plan plan) throws Exception;1529682304;Creates a JSON representation of the given dataflow's execution plan.__@param plan The dataflow plan._@return The dataflow's execution plan, as a JSON string._@throws Exception Thrown, if the optimization process that creates the execution plan failed.;@Override_	public String getOptimizerPlanAsJSON(Plan plan) throws Exception {_		final int parallelism = plan.getDefaultParallelism() == ExecutionConfig.PARALLELISM_DEFAULT ? 1 : plan.getDefaultParallelism()___		Optimizer pc = new Optimizer(new DataStatistics(), this.baseConfiguration)__		pc.setDefaultParallelism(parallelism)__		OptimizedPlan op = pc.compile(plan)___		return new PlanJSONDumpGenerator().getOptimizerPlanAsJSON(op)__	};creates,a,json,representation,of,the,given,dataflow,s,execution,plan,param,plan,the,dataflow,plan,return,the,dataflow,s,execution,plan,as,a,json,string,throws,exception,thrown,if,the,optimization,process,that,creates,the,execution,plan,failed;override,public,string,get,optimizer,plan,as,json,plan,plan,throws,exception,final,int,parallelism,plan,get,default,parallelism,execution,config,1,plan,get,default,parallelism,optimizer,pc,new,optimizer,new,data,statistics,this,base,configuration,pc,set,default,parallelism,parallelism,optimized,plan,op,pc,compile,plan,return,new,plan,jsondump,generator,get,optimizer,plan,as,json,op
LocalExecutor -> @Override 	public String getOptimizerPlanAsJSON(Plan plan) throws Exception;1538135826;Creates a JSON representation of the given dataflow's execution plan.__@param plan The dataflow plan._@return The dataflow's execution plan, as a JSON string._@throws Exception Thrown, if the optimization process that creates the execution plan failed.;@Override_	public String getOptimizerPlanAsJSON(Plan plan) throws Exception {_		final int parallelism = plan.getDefaultParallelism() == ExecutionConfig.PARALLELISM_DEFAULT ? 1 : plan.getDefaultParallelism()___		Optimizer pc = new Optimizer(new DataStatistics(), this.baseConfiguration)__		pc.setDefaultParallelism(parallelism)__		OptimizedPlan op = pc.compile(plan)___		return new PlanJSONDumpGenerator().getOptimizerPlanAsJSON(op)__	};creates,a,json,representation,of,the,given,dataflow,s,execution,plan,param,plan,the,dataflow,plan,return,the,dataflow,s,execution,plan,as,a,json,string,throws,exception,thrown,if,the,optimization,process,that,creates,the,execution,plan,failed;override,public,string,get,optimizer,plan,as,json,plan,plan,throws,exception,final,int,parallelism,plan,get,default,parallelism,execution,config,1,plan,get,default,parallelism,optimizer,pc,new,optimizer,new,data,statistics,this,base,configuration,pc,set,default,parallelism,parallelism,optimized,plan,op,pc,compile,plan,return,new,plan,jsondump,generator,get,optimizer,plan,as,json,op
LocalExecutor -> @Override 	public String getOptimizerPlanAsJSON(Plan plan) throws Exception;1549360057;Creates a JSON representation of the given dataflow's execution plan.__@param plan The dataflow plan._@return The dataflow's execution plan, as a JSON string._@throws Exception Thrown, if the optimization process that creates the execution plan failed.;@Override_	public String getOptimizerPlanAsJSON(Plan plan) throws Exception {_		final int parallelism = plan.getDefaultParallelism() == ExecutionConfig.PARALLELISM_DEFAULT ? 1 : plan.getDefaultParallelism()___		Optimizer pc = new Optimizer(new DataStatistics(), this.baseConfiguration)__		pc.setDefaultParallelism(parallelism)__		OptimizedPlan op = pc.compile(plan)___		return new PlanJSONDumpGenerator().getOptimizerPlanAsJSON(op)__	};creates,a,json,representation,of,the,given,dataflow,s,execution,plan,param,plan,the,dataflow,plan,return,the,dataflow,s,execution,plan,as,a,json,string,throws,exception,thrown,if,the,optimization,process,that,creates,the,execution,plan,failed;override,public,string,get,optimizer,plan,as,json,plan,plan,throws,exception,final,int,parallelism,plan,get,default,parallelism,execution,config,1,plan,get,default,parallelism,optimizer,pc,new,optimizer,new,data,statistics,this,base,configuration,pc,set,default,parallelism,parallelism,optimized,plan,op,pc,compile,plan,return,new,plan,jsondump,generator,get,optimizer,plan,as,json,op
LocalExecutor -> @Override 	public String getOptimizerPlanAsJSON(Plan plan) throws Exception;1550222817;Creates a JSON representation of the given dataflow's execution plan.__@param plan The dataflow plan._@return The dataflow's execution plan, as a JSON string._@throws Exception Thrown, if the optimization process that creates the execution plan failed.;@Override_	public String getOptimizerPlanAsJSON(Plan plan) throws Exception {_		final int parallelism = plan.getDefaultParallelism() == ExecutionConfig.PARALLELISM_DEFAULT ? 1 : plan.getDefaultParallelism()___		Optimizer pc = new Optimizer(new DataStatistics(), this.baseConfiguration)__		pc.setDefaultParallelism(parallelism)__		OptimizedPlan op = pc.compile(plan)___		return new PlanJSONDumpGenerator().getOptimizerPlanAsJSON(op)__	};creates,a,json,representation,of,the,given,dataflow,s,execution,plan,param,plan,the,dataflow,plan,return,the,dataflow,s,execution,plan,as,a,json,string,throws,exception,thrown,if,the,optimization,process,that,creates,the,execution,plan,failed;override,public,string,get,optimizer,plan,as,json,plan,plan,throws,exception,final,int,parallelism,plan,get,default,parallelism,execution,config,1,plan,get,default,parallelism,optimizer,pc,new,optimizer,new,data,statistics,this,base,configuration,pc,set,default,parallelism,parallelism,optimized,plan,op,pc,compile,plan,return,new,plan,jsondump,generator,get,optimizer,plan,as,json,op
LocalExecutor -> @Override 	public JobExecutionResult executePlan(Plan plan) throws Exception;1427958028;Execute the given plan on the local Nephele instance, wait for the job to_finish and return the runtime in milliseconds.__@param plan The plan of the program to execute._@return The net runtime of the program, in milliseconds.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;@Override_	public JobExecutionResult executePlan(Plan plan) throws Exception {_		if (plan == null) {_			throw new IllegalArgumentException("The plan may not be null.")__		}_		_		synchronized (this.lock) {_			_			_			final boolean shutDownAtEnd__			if (this.flink == null) {_				_				shutDownAtEnd = true__				_				_				if (this.taskManagerNumSlots == DEFAULT_TASK_MANAGER_NUM_SLOTS) {_					int maxParallelism = plan.getMaximumParallelism()__					if (maxParallelism > 0) {_						this.taskManagerNumSlots = maxParallelism__					}_				}_				_				start()__			} else {_				_				shutDownAtEnd = false__			}__			try {_				Optimizer pc = new Optimizer(new DataStatistics(), this.flink.getConfiguration())__				OptimizedPlan op = pc.compile(plan)__				_				JobGraphGenerator jgg = new JobGraphGenerator()__				JobGraph jobGraph = jgg.compileJobGraph(op)___				ActorRef jobClient = flink.getJobClient()___				return JobClient.submitJobAndWait(jobGraph, printStatusDuringExecution,_						jobClient, flink.timeout())__			}_			finally {_				if (shutDownAtEnd) {_					stop()__				}_			}_		}_	};execute,the,given,plan,on,the,local,nephele,instance,wait,for,the,job,to,finish,and,return,the,runtime,in,milliseconds,param,plan,the,plan,of,the,program,to,execute,return,the,net,runtime,of,the,program,in,milliseconds,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;override,public,job,execution,result,execute,plan,plan,plan,throws,exception,if,plan,null,throw,new,illegal,argument,exception,the,plan,may,not,be,null,synchronized,this,lock,final,boolean,shut,down,at,end,if,this,flink,null,shut,down,at,end,true,if,this,task,manager,num,slots,int,max,parallelism,plan,get,maximum,parallelism,if,max,parallelism,0,this,task,manager,num,slots,max,parallelism,start,else,shut,down,at,end,false,try,optimizer,pc,new,optimizer,new,data,statistics,this,flink,get,configuration,optimized,plan,op,pc,compile,plan,job,graph,generator,jgg,new,job,graph,generator,job,graph,job,graph,jgg,compile,job,graph,op,actor,ref,job,client,flink,get,job,client,return,job,client,submit,job,and,wait,job,graph,print,status,during,execution,job,client,flink,timeout,finally,if,shut,down,at,end,stop
LocalExecutor -> @Override 	public JobExecutionResult executePlan(Plan plan) throws Exception;1428663519;Execute the given plan on the local Nephele instance, wait for the job to_finish and return the runtime in milliseconds.__@param plan The plan of the program to execute._@return The net runtime of the program, in milliseconds.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;@Override_	public JobExecutionResult executePlan(Plan plan) throws Exception {_		if (plan == null) {_			throw new IllegalArgumentException("The plan may not be null.")__		}_		_		synchronized (this.lock) {_			_			_			final boolean shutDownAtEnd__			if (this.flink == null) {_				_				shutDownAtEnd = true__				_				_				if (this.taskManagerNumSlots == DEFAULT_TASK_MANAGER_NUM_SLOTS) {_					int maxParallelism = plan.getMaximumParallelism()__					if (maxParallelism > 0) {_						this.taskManagerNumSlots = maxParallelism__					}_				}_				_				start()__			} else {_				_				shutDownAtEnd = false__			}__			try {_				Optimizer pc = new Optimizer(new DataStatistics(), this.flink.getConfiguration())__				OptimizedPlan op = pc.compile(plan)__				_				JobGraphGenerator jgg = new JobGraphGenerator()__				JobGraph jobGraph = jgg.compileJobGraph(op)___				ActorRef jobClient = flink.getJobClient()___				SerializedJobExecutionResult result =_						JobClient.submitJobAndWait(jobGraph, printStatusDuringExecution, jobClient, flink.timeout())___				return result.toJobExecutionResult(ClassLoader.getSystemClassLoader())__			}_			finally {_				if (shutDownAtEnd) {_					stop()__				}_			}_		}_	};execute,the,given,plan,on,the,local,nephele,instance,wait,for,the,job,to,finish,and,return,the,runtime,in,milliseconds,param,plan,the,plan,of,the,program,to,execute,return,the,net,runtime,of,the,program,in,milliseconds,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;override,public,job,execution,result,execute,plan,plan,plan,throws,exception,if,plan,null,throw,new,illegal,argument,exception,the,plan,may,not,be,null,synchronized,this,lock,final,boolean,shut,down,at,end,if,this,flink,null,shut,down,at,end,true,if,this,task,manager,num,slots,int,max,parallelism,plan,get,maximum,parallelism,if,max,parallelism,0,this,task,manager,num,slots,max,parallelism,start,else,shut,down,at,end,false,try,optimizer,pc,new,optimizer,new,data,statistics,this,flink,get,configuration,optimized,plan,op,pc,compile,plan,job,graph,generator,jgg,new,job,graph,generator,job,graph,job,graph,jgg,compile,job,graph,op,actor,ref,job,client,flink,get,job,client,serialized,job,execution,result,result,job,client,submit,job,and,wait,job,graph,print,status,during,execution,job,client,flink,timeout,return,result,to,job,execution,result,class,loader,get,system,class,loader,finally,if,shut,down,at,end,stop
LocalExecutor -> @Override 	public JobExecutionResult executePlan(Plan plan) throws Exception;1428935901;Execute the given plan on the local Nephele instance, wait for the job to_finish and return the runtime in milliseconds.__@param plan The plan of the program to execute._@return The net runtime of the program, in milliseconds.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;@Override_	public JobExecutionResult executePlan(Plan plan) throws Exception {_		if (plan == null) {_			throw new IllegalArgumentException("The plan may not be null.")__		}_		_		synchronized (this.lock) {_			_			_			final boolean shutDownAtEnd__			if (this.flink == null) {_				_				shutDownAtEnd = true__				_				_				if (this.taskManagerNumSlots == DEFAULT_TASK_MANAGER_NUM_SLOTS) {_					int maxParallelism = plan.getMaximumParallelism()__					if (maxParallelism > 0) {_						this.taskManagerNumSlots = maxParallelism__					}_				}_				_				start()__			} else {_				_				shutDownAtEnd = false__			}__			try {_				Optimizer pc = new Optimizer(new DataStatistics(), this.flink.getConfiguration())__				OptimizedPlan op = pc.compile(plan)__				_				JobGraphGenerator jgg = new JobGraphGenerator()__				JobGraph jobGraph = jgg.compileJobGraph(op)__				_				SerializedJobExecutionResult result = flink.submitJobAndWait(jobGraph, printStatusDuringExecution)__				return result.toJobExecutionResult(ClassLoader.getSystemClassLoader())__			}_			finally {_				if (shutDownAtEnd) {_					stop()__				}_			}_		}_	};execute,the,given,plan,on,the,local,nephele,instance,wait,for,the,job,to,finish,and,return,the,runtime,in,milliseconds,param,plan,the,plan,of,the,program,to,execute,return,the,net,runtime,of,the,program,in,milliseconds,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;override,public,job,execution,result,execute,plan,plan,plan,throws,exception,if,plan,null,throw,new,illegal,argument,exception,the,plan,may,not,be,null,synchronized,this,lock,final,boolean,shut,down,at,end,if,this,flink,null,shut,down,at,end,true,if,this,task,manager,num,slots,int,max,parallelism,plan,get,maximum,parallelism,if,max,parallelism,0,this,task,manager,num,slots,max,parallelism,start,else,shut,down,at,end,false,try,optimizer,pc,new,optimizer,new,data,statistics,this,flink,get,configuration,optimized,plan,op,pc,compile,plan,job,graph,generator,jgg,new,job,graph,generator,job,graph,job,graph,jgg,compile,job,graph,op,serialized,job,execution,result,result,flink,submit,job,and,wait,job,graph,print,status,during,execution,return,result,to,job,execution,result,class,loader,get,system,class,loader,finally,if,shut,down,at,end,stop
LocalExecutor -> @Override 	public JobExecutionResult executePlan(Plan plan) throws Exception;1428935901;Execute the given plan on the local Nephele instance, wait for the job to_finish and return the runtime in milliseconds.__@param plan The plan of the program to execute._@return The net runtime of the program, in milliseconds.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;@Override_	public JobExecutionResult executePlan(Plan plan) throws Exception {_		if (plan == null) {_			throw new IllegalArgumentException("The plan may not be null.")__		}_		_		synchronized (this.lock) {_			_			_			final boolean shutDownAtEnd__			if (this.flink == null) {_				_				shutDownAtEnd = true__				_				_				if (this.taskManagerNumSlots == DEFAULT_TASK_MANAGER_NUM_SLOTS) {_					int maxParallelism = plan.getMaximumParallelism()__					if (maxParallelism > 0) {_						this.taskManagerNumSlots = maxParallelism__					}_				}_				_				start()__			} else {_				_				shutDownAtEnd = false__			}__			try {_				Optimizer pc = new Optimizer(new DataStatistics(), this.flink.getConfiguration())__				OptimizedPlan op = pc.compile(plan)__				_				JobGraphGenerator jgg = new JobGraphGenerator()__				JobGraph jobGraph = jgg.compileJobGraph(op)__				_				boolean sysoutPrint = isPrintingStatusDuringExecution()__				SerializedJobExecutionResult result = flink.submitJobAndWait(jobGraph,sysoutPrint)__				return result.toJobExecutionResult(ClassLoader.getSystemClassLoader())__			}_			finally {_				if (shutDownAtEnd) {_					stop()__				}_			}_		}_	};execute,the,given,plan,on,the,local,nephele,instance,wait,for,the,job,to,finish,and,return,the,runtime,in,milliseconds,param,plan,the,plan,of,the,program,to,execute,return,the,net,runtime,of,the,program,in,milliseconds,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;override,public,job,execution,result,execute,plan,plan,plan,throws,exception,if,plan,null,throw,new,illegal,argument,exception,the,plan,may,not,be,null,synchronized,this,lock,final,boolean,shut,down,at,end,if,this,flink,null,shut,down,at,end,true,if,this,task,manager,num,slots,int,max,parallelism,plan,get,maximum,parallelism,if,max,parallelism,0,this,task,manager,num,slots,max,parallelism,start,else,shut,down,at,end,false,try,optimizer,pc,new,optimizer,new,data,statistics,this,flink,get,configuration,optimized,plan,op,pc,compile,plan,job,graph,generator,jgg,new,job,graph,generator,job,graph,job,graph,jgg,compile,job,graph,op,boolean,sysout,print,is,printing,status,during,execution,serialized,job,execution,result,result,flink,submit,job,and,wait,job,graph,sysout,print,return,result,to,job,execution,result,class,loader,get,system,class,loader,finally,if,shut,down,at,end,stop
LocalExecutor -> @Override 	public JobExecutionResult executePlan(Plan plan) throws Exception;1440951699;Execute the given plan on the local Nephele instance, wait for the job to_finish and return the runtime in milliseconds.__@param plan The plan of the program to execute._@return The net runtime of the program, in milliseconds.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;@Override_	public JobExecutionResult executePlan(Plan plan) throws Exception {_		if (plan == null) {_			throw new IllegalArgumentException("The plan may not be null.")__		}_		_		synchronized (this.lock) {_			_			_			final boolean shutDownAtEnd__			if (this.flink == null) {_				_				shutDownAtEnd = true__				_				_				if (this.taskManagerNumSlots == DEFAULT_TASK_MANAGER_NUM_SLOTS) {_					int maxParallelism = plan.getMaximumParallelism()__					if (maxParallelism > 0) {_						this.taskManagerNumSlots = maxParallelism__					}_				}_				_				start()__			} else {_				_				shutDownAtEnd = false__			}__			try {_				Optimizer pc = new Optimizer(new DataStatistics(), this.flink.getConfiguration())__				OptimizedPlan op = pc.compile(plan)__				_				JobGraphGenerator jgg = new JobGraphGenerator()__				JobGraph jobGraph = jgg.compileJobGraph(op)__				_				boolean sysoutPrint = isPrintingStatusDuringExecution()__				return flink.submitJobAndWait(jobGraph, sysoutPrint)__			}_			finally {_				if (shutDownAtEnd) {_					stop()__				}_			}_		}_	};execute,the,given,plan,on,the,local,nephele,instance,wait,for,the,job,to,finish,and,return,the,runtime,in,milliseconds,param,plan,the,plan,of,the,program,to,execute,return,the,net,runtime,of,the,program,in,milliseconds,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;override,public,job,execution,result,execute,plan,plan,plan,throws,exception,if,plan,null,throw,new,illegal,argument,exception,the,plan,may,not,be,null,synchronized,this,lock,final,boolean,shut,down,at,end,if,this,flink,null,shut,down,at,end,true,if,this,task,manager,num,slots,int,max,parallelism,plan,get,maximum,parallelism,if,max,parallelism,0,this,task,manager,num,slots,max,parallelism,start,else,shut,down,at,end,false,try,optimizer,pc,new,optimizer,new,data,statistics,this,flink,get,configuration,optimized,plan,op,pc,compile,plan,job,graph,generator,jgg,new,job,graph,generator,job,graph,job,graph,jgg,compile,job,graph,op,boolean,sysout,print,is,printing,status,during,execution,return,flink,submit,job,and,wait,job,graph,sysout,print,finally,if,shut,down,at,end,stop
LocalExecutor -> @Override 	public JobExecutionResult executePlan(Plan plan) throws Exception;1441011751;Execute the given plan on the local Nephele instance, wait for the job to_finish and return the runtime in milliseconds.__@param plan The plan of the program to execute._@return The net runtime of the program, in milliseconds.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;@Override_	public JobExecutionResult executePlan(Plan plan) throws Exception {_		if (plan == null) {_			throw new IllegalArgumentException("The plan may not be null.")__		}_		_		synchronized (this.lock) {_			_			_			final boolean shutDownAtEnd__			if (this.flink == null) {_				_				shutDownAtEnd = true__				_				_				if (this.taskManagerNumSlots == DEFAULT_TASK_MANAGER_NUM_SLOTS) {_					int maxParallelism = plan.getMaximumParallelism()__					if (maxParallelism > 0) {_						this.taskManagerNumSlots = maxParallelism__					}_				}_				_				start()__			} else {_				_				shutDownAtEnd = false__			}__			try {_				Optimizer pc = new Optimizer(new DataStatistics(), this.flink.configuration())__				OptimizedPlan op = pc.compile(plan)__				_				JobGraphGenerator jgg = new JobGraphGenerator()__				JobGraph jobGraph = jgg.compileJobGraph(op)__				_				boolean sysoutPrint = isPrintingStatusDuringExecution()__				return flink.submitJobAndWait(jobGraph, sysoutPrint)__			}_			finally {_				if (shutDownAtEnd) {_					stop()__				}_			}_		}_	};execute,the,given,plan,on,the,local,nephele,instance,wait,for,the,job,to,finish,and,return,the,runtime,in,milliseconds,param,plan,the,plan,of,the,program,to,execute,return,the,net,runtime,of,the,program,in,milliseconds,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;override,public,job,execution,result,execute,plan,plan,plan,throws,exception,if,plan,null,throw,new,illegal,argument,exception,the,plan,may,not,be,null,synchronized,this,lock,final,boolean,shut,down,at,end,if,this,flink,null,shut,down,at,end,true,if,this,task,manager,num,slots,int,max,parallelism,plan,get,maximum,parallelism,if,max,parallelism,0,this,task,manager,num,slots,max,parallelism,start,else,shut,down,at,end,false,try,optimizer,pc,new,optimizer,new,data,statistics,this,flink,configuration,optimized,plan,op,pc,compile,plan,job,graph,generator,jgg,new,job,graph,generator,job,graph,job,graph,jgg,compile,job,graph,op,boolean,sysout,print,is,printing,status,during,execution,return,flink,submit,job,and,wait,job,graph,sysout,print,finally,if,shut,down,at,end,stop
LocalExecutor -> @Override 	public JobExecutionResult executePlan(Plan plan) throws Exception;1441614857;Execute the given plan on the local Nephele instance, wait for the job to_finish and return the runtime in milliseconds.__@param plan The plan of the program to execute._@return The net runtime of the program, in milliseconds.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;@Override_	public JobExecutionResult executePlan(Plan plan) throws Exception {_		if (plan == null) {_			throw new IllegalArgumentException("The plan may not be null.")__		}_		_		synchronized (this.lock) {_			_			_			final boolean shutDownAtEnd__			if (this.flink == null) {_				_				shutDownAtEnd = true__				_				_				if (this.taskManagerNumSlots == DEFAULT_TASK_MANAGER_NUM_SLOTS) {_					int maxParallelism = plan.getMaximumParallelism()__					if (maxParallelism > 0) {_						this.taskManagerNumSlots = maxParallelism__					}_				}_				_				start()__			} else {_				_				shutDownAtEnd = false__			}__			try {_				Configuration configuration = this.flink.configuration()___				Optimizer pc = new Optimizer(new DataStatistics(), configuration)__				OptimizedPlan op = pc.compile(plan)__				_				JobGraphGenerator jgg = new JobGraphGenerator(configuration)__				JobGraph jobGraph = jgg.compileJobGraph(op)__				_				boolean sysoutPrint = isPrintingStatusDuringExecution()__				return flink.submitJobAndWait(jobGraph, sysoutPrint)__			}_			finally {_				if (shutDownAtEnd) {_					stop()__				}_			}_		}_	};execute,the,given,plan,on,the,local,nephele,instance,wait,for,the,job,to,finish,and,return,the,runtime,in,milliseconds,param,plan,the,plan,of,the,program,to,execute,return,the,net,runtime,of,the,program,in,milliseconds,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;override,public,job,execution,result,execute,plan,plan,plan,throws,exception,if,plan,null,throw,new,illegal,argument,exception,the,plan,may,not,be,null,synchronized,this,lock,final,boolean,shut,down,at,end,if,this,flink,null,shut,down,at,end,true,if,this,task,manager,num,slots,int,max,parallelism,plan,get,maximum,parallelism,if,max,parallelism,0,this,task,manager,num,slots,max,parallelism,start,else,shut,down,at,end,false,try,configuration,configuration,this,flink,configuration,optimizer,pc,new,optimizer,new,data,statistics,configuration,optimized,plan,op,pc,compile,plan,job,graph,generator,jgg,new,job,graph,generator,configuration,job,graph,job,graph,jgg,compile,job,graph,op,boolean,sysout,print,is,printing,status,during,execution,return,flink,submit,job,and,wait,job,graph,sysout,print,finally,if,shut,down,at,end,stop
LocalExecutor -> @Override 	public JobExecutionResult executePlan(Plan plan) throws Exception;1442944546;Executes the given program on a local runtime and waits for the job to finish.__<p>If the executor has not been started before, this starts the executor and shuts it down_after the job finished. If the job runs in session mode, the executor is kept alive until_no more references to the executor exist.</p>__@param plan The plan of the program to execute._@return The net runtime of the program, in milliseconds.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;@Override_	public JobExecutionResult executePlan(Plan plan) throws Exception {_		if (plan == null) {_			throw new IllegalArgumentException("The plan may not be null.")__		}__		synchronized (this.lock) {__			_			final boolean shutDownAtEnd___			if (flink == null) {_				shutDownAtEnd = true___				_				if (this.taskManagerNumSlots == DEFAULT_TASK_MANAGER_NUM_SLOTS) {_					int maxParallelism = plan.getMaximumParallelism()__					if (maxParallelism > 0) {_						this.taskManagerNumSlots = maxParallelism__					}_				}__				_				start()__			}_			else {_				_				shutDownAtEnd = false__			}__			try {_				Configuration configuration = this.flink.configuration()___				Optimizer pc = new Optimizer(new DataStatistics(), configuration)__				OptimizedPlan op = pc.compile(plan)___				JobGraphGenerator jgg = new JobGraphGenerator(configuration)__				JobGraph jobGraph = jgg.compileJobGraph(op, plan.getJobId())___				boolean sysoutPrint = isPrintingStatusDuringExecution()__				return flink.submitJobAndWait(jobGraph, sysoutPrint)__			}_			finally {_				if (shutDownAtEnd) {_					stop()__				}_			}_		}_	};executes,the,given,program,on,a,local,runtime,and,waits,for,the,job,to,finish,p,if,the,executor,has,not,been,started,before,this,starts,the,executor,and,shuts,it,down,after,the,job,finished,if,the,job,runs,in,session,mode,the,executor,is,kept,alive,until,no,more,references,to,the,executor,exist,p,param,plan,the,plan,of,the,program,to,execute,return,the,net,runtime,of,the,program,in,milliseconds,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;override,public,job,execution,result,execute,plan,plan,plan,throws,exception,if,plan,null,throw,new,illegal,argument,exception,the,plan,may,not,be,null,synchronized,this,lock,final,boolean,shut,down,at,end,if,flink,null,shut,down,at,end,true,if,this,task,manager,num,slots,int,max,parallelism,plan,get,maximum,parallelism,if,max,parallelism,0,this,task,manager,num,slots,max,parallelism,start,else,shut,down,at,end,false,try,configuration,configuration,this,flink,configuration,optimizer,pc,new,optimizer,new,data,statistics,configuration,optimized,plan,op,pc,compile,plan,job,graph,generator,jgg,new,job,graph,generator,configuration,job,graph,job,graph,jgg,compile,job,graph,op,plan,get,job,id,boolean,sysout,print,is,printing,status,during,execution,return,flink,submit,job,and,wait,job,graph,sysout,print,finally,if,shut,down,at,end,stop
LocalExecutor -> @Override 	public JobExecutionResult executePlan(Plan plan) throws Exception;1443682842;Executes the given program on a local runtime and waits for the job to finish.__<p>If the executor has not been started before, this starts the executor and shuts it down_after the job finished. If the job runs in session mode, the executor is kept alive until_no more references to the executor exist.</p>__@param plan The plan of the program to execute._@return The net runtime of the program, in milliseconds.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;@Override_	public JobExecutionResult executePlan(Plan plan) throws Exception {_		if (plan == null) {_			throw new IllegalArgumentException("The plan may not be null.")__		}__		synchronized (this.lock) {__			_			final boolean shutDownAtEnd___			if (flink == null) {_				shutDownAtEnd = true___				_				if (this.taskManagerNumSlots == DEFAULT_TASK_MANAGER_NUM_SLOTS) {_					int maxParallelism = plan.getMaximumParallelism()__					if (maxParallelism > 0) {_						this.taskManagerNumSlots = maxParallelism__					}_				}__				_				start()__			}_			else {_				_				shutDownAtEnd = false__			}__			try {_				Configuration configuration = this.flink.configuration()___				Optimizer pc = new Optimizer(new DataStatistics(), configuration)__				OptimizedPlan op = pc.compile(plan)___				JobGraphGenerator jgg = new JobGraphGenerator(configuration)__				JobGraph jobGraph = jgg.compileJobGraph(op, plan.getJobId())___				boolean sysoutPrint = isPrintingStatusDuringExecution()__				return flink.submitJobAndWait(jobGraph, sysoutPrint)__			}_			finally {_				if (shutDownAtEnd) {_					stop()__				}_			}_		}_	};executes,the,given,program,on,a,local,runtime,and,waits,for,the,job,to,finish,p,if,the,executor,has,not,been,started,before,this,starts,the,executor,and,shuts,it,down,after,the,job,finished,if,the,job,runs,in,session,mode,the,executor,is,kept,alive,until,no,more,references,to,the,executor,exist,p,param,plan,the,plan,of,the,program,to,execute,return,the,net,runtime,of,the,program,in,milliseconds,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;override,public,job,execution,result,execute,plan,plan,plan,throws,exception,if,plan,null,throw,new,illegal,argument,exception,the,plan,may,not,be,null,synchronized,this,lock,final,boolean,shut,down,at,end,if,flink,null,shut,down,at,end,true,if,this,task,manager,num,slots,int,max,parallelism,plan,get,maximum,parallelism,if,max,parallelism,0,this,task,manager,num,slots,max,parallelism,start,else,shut,down,at,end,false,try,configuration,configuration,this,flink,configuration,optimizer,pc,new,optimizer,new,data,statistics,configuration,optimized,plan,op,pc,compile,plan,job,graph,generator,jgg,new,job,graph,generator,configuration,job,graph,job,graph,jgg,compile,job,graph,op,plan,get,job,id,boolean,sysout,print,is,printing,status,during,execution,return,flink,submit,job,and,wait,job,graph,sysout,print,finally,if,shut,down,at,end,stop
LocalExecutor -> @Override 	public JobExecutionResult executePlan(Plan plan) throws Exception;1460563153;Executes the given program on a local runtime and waits for the job to finish.__<p>If the executor has not been started before, this starts the executor and shuts it down_after the job finished. If the job runs in session mode, the executor is kept alive until_no more references to the executor exist.</p>__@param plan The plan of the program to execute._@return The net runtime of the program, in milliseconds.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;@Override_	public JobExecutionResult executePlan(Plan plan) throws Exception {_		if (plan == null) {_			throw new IllegalArgumentException("The plan may not be null.")__		}__		synchronized (this.lock) {__			_			final boolean shutDownAtEnd___			if (flink == null) {_				shutDownAtEnd = true___				_				if (this.taskManagerNumSlots == DEFAULT_TASK_MANAGER_NUM_SLOTS) {_					int maxParallelism = plan.getMaximumParallelism()__					if (maxParallelism > 0) {_						this.taskManagerNumSlots = maxParallelism__					}_				}__				_				start()__			}_			else {_				_				shutDownAtEnd = false__			}__			try {_				Configuration configuration = this.flink.configuration()___				Optimizer pc = new Optimizer(new DataStatistics(), configuration)__				OptimizedPlan op = pc.compile(plan)___				JobGraphGenerator jgg = new JobGraphGenerator(configuration)__				JobGraph jobGraph = jgg.compileJobGraph(op, plan.getJobId())___				boolean sysoutPrint = isPrintingStatusDuringExecution()__				return flink.submitJobAndWait(jobGraph, sysoutPrint)__			}_			finally {_				if (shutDownAtEnd) {_					stop()__				}_			}_		}_	};executes,the,given,program,on,a,local,runtime,and,waits,for,the,job,to,finish,p,if,the,executor,has,not,been,started,before,this,starts,the,executor,and,shuts,it,down,after,the,job,finished,if,the,job,runs,in,session,mode,the,executor,is,kept,alive,until,no,more,references,to,the,executor,exist,p,param,plan,the,plan,of,the,program,to,execute,return,the,net,runtime,of,the,program,in,milliseconds,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;override,public,job,execution,result,execute,plan,plan,plan,throws,exception,if,plan,null,throw,new,illegal,argument,exception,the,plan,may,not,be,null,synchronized,this,lock,final,boolean,shut,down,at,end,if,flink,null,shut,down,at,end,true,if,this,task,manager,num,slots,int,max,parallelism,plan,get,maximum,parallelism,if,max,parallelism,0,this,task,manager,num,slots,max,parallelism,start,else,shut,down,at,end,false,try,configuration,configuration,this,flink,configuration,optimizer,pc,new,optimizer,new,data,statistics,configuration,optimized,plan,op,pc,compile,plan,job,graph,generator,jgg,new,job,graph,generator,configuration,job,graph,job,graph,jgg,compile,job,graph,op,plan,get,job,id,boolean,sysout,print,is,printing,status,during,execution,return,flink,submit,job,and,wait,job,graph,sysout,print,finally,if,shut,down,at,end,stop
LocalExecutor -> @Override 	public JobExecutionResult executePlan(Plan plan) throws Exception;1477989375;Executes the given program on a local runtime and waits for the job to finish.__<p>If the executor has not been started before, this starts the executor and shuts it down_after the job finished. If the job runs in session mode, the executor is kept alive until_no more references to the executor exist.</p>__@param plan The plan of the program to execute._@return The net runtime of the program, in milliseconds.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;@Override_	public JobExecutionResult executePlan(Plan plan) throws Exception {_		if (plan == null) {_			throw new IllegalArgumentException("The plan may not be null.")__		}__		synchronized (this.lock) {__			_			final boolean shutDownAtEnd___			if (flink == null) {_				shutDownAtEnd = true___				_				if (this.taskManagerNumSlots == DEFAULT_TASK_MANAGER_NUM_SLOTS) {_					int maxParallelism = plan.getMaximumParallelism()__					if (maxParallelism > 0) {_						this.taskManagerNumSlots = maxParallelism__					}_				}__				_				start()__			}_			else {_				_				shutDownAtEnd = false__			}__			try {_				Configuration configuration = this.flink.configuration()___				Optimizer pc = new Optimizer(new DataStatistics(), configuration)__				OptimizedPlan op = pc.compile(plan)___				JobGraphGenerator jgg = new JobGraphGenerator(configuration)__				JobGraph jobGraph = jgg.compileJobGraph(op, plan.getJobId())___				boolean sysoutPrint = isPrintingStatusDuringExecution()__				return flink.submitJobAndWait(jobGraph, sysoutPrint)__			}_			finally {_				if (shutDownAtEnd) {_					stop()__				}_			}_		}_	};executes,the,given,program,on,a,local,runtime,and,waits,for,the,job,to,finish,p,if,the,executor,has,not,been,started,before,this,starts,the,executor,and,shuts,it,down,after,the,job,finished,if,the,job,runs,in,session,mode,the,executor,is,kept,alive,until,no,more,references,to,the,executor,exist,p,param,plan,the,plan,of,the,program,to,execute,return,the,net,runtime,of,the,program,in,milliseconds,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;override,public,job,execution,result,execute,plan,plan,plan,throws,exception,if,plan,null,throw,new,illegal,argument,exception,the,plan,may,not,be,null,synchronized,this,lock,final,boolean,shut,down,at,end,if,flink,null,shut,down,at,end,true,if,this,task,manager,num,slots,int,max,parallelism,plan,get,maximum,parallelism,if,max,parallelism,0,this,task,manager,num,slots,max,parallelism,start,else,shut,down,at,end,false,try,configuration,configuration,this,flink,configuration,optimizer,pc,new,optimizer,new,data,statistics,configuration,optimized,plan,op,pc,compile,plan,job,graph,generator,jgg,new,job,graph,generator,configuration,job,graph,job,graph,jgg,compile,job,graph,op,plan,get,job,id,boolean,sysout,print,is,printing,status,during,execution,return,flink,submit,job,and,wait,job,graph,sysout,print,finally,if,shut,down,at,end,stop
LocalExecutor -> @Override 	public JobExecutionResult executePlan(Plan plan) throws Exception;1492269386;Executes the given program on a local runtime and waits for the job to finish.__<p>If the executor has not been started before, this starts the executor and shuts it down_after the job finished. If the job runs in session mode, the executor is kept alive until_no more references to the executor exist.</p>__@param plan The plan of the program to execute._@return The net runtime of the program, in milliseconds.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;@Override_	public JobExecutionResult executePlan(Plan plan) throws Exception {_		if (plan == null) {_			throw new IllegalArgumentException("The plan may not be null.")__		}__		synchronized (this.lock) {__			_			final boolean shutDownAtEnd___			if (flink == null) {_				shutDownAtEnd = true___				_				if (this.taskManagerNumSlots == DEFAULT_TASK_MANAGER_NUM_SLOTS) {_					int maxParallelism = plan.getMaximumParallelism()__					if (maxParallelism > 0) {_						this.taskManagerNumSlots = maxParallelism__					}_				}__				_				start()__			}_			else {_				_				shutDownAtEnd = false__			}__			try {_				Configuration configuration = this.flink.configuration()___				Optimizer pc = new Optimizer(new DataStatistics(), configuration)__				OptimizedPlan op = pc.compile(plan)___				JobGraphGenerator jgg = new JobGraphGenerator(configuration)__				JobGraph jobGraph = jgg.compileJobGraph(op, plan.getJobId())___				boolean sysoutPrint = isPrintingStatusDuringExecution()__				return flink.submitJobAndWait(jobGraph, sysoutPrint)__			}_			finally {_				if (shutDownAtEnd) {_					stop()__				}_			}_		}_	};executes,the,given,program,on,a,local,runtime,and,waits,for,the,job,to,finish,p,if,the,executor,has,not,been,started,before,this,starts,the,executor,and,shuts,it,down,after,the,job,finished,if,the,job,runs,in,session,mode,the,executor,is,kept,alive,until,no,more,references,to,the,executor,exist,p,param,plan,the,plan,of,the,program,to,execute,return,the,net,runtime,of,the,program,in,milliseconds,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;override,public,job,execution,result,execute,plan,plan,plan,throws,exception,if,plan,null,throw,new,illegal,argument,exception,the,plan,may,not,be,null,synchronized,this,lock,final,boolean,shut,down,at,end,if,flink,null,shut,down,at,end,true,if,this,task,manager,num,slots,int,max,parallelism,plan,get,maximum,parallelism,if,max,parallelism,0,this,task,manager,num,slots,max,parallelism,start,else,shut,down,at,end,false,try,configuration,configuration,this,flink,configuration,optimizer,pc,new,optimizer,new,data,statistics,configuration,optimized,plan,op,pc,compile,plan,job,graph,generator,jgg,new,job,graph,generator,configuration,job,graph,job,graph,jgg,compile,job,graph,op,plan,get,job,id,boolean,sysout,print,is,printing,status,during,execution,return,flink,submit,job,and,wait,job,graph,sysout,print,finally,if,shut,down,at,end,stop
LocalExecutor -> @Override 	public JobExecutionResult executePlan(Plan plan) throws Exception;1495778594;Executes the given program on a local runtime and waits for the job to finish.__<p>If the executor has not been started before, this starts the executor and shuts it down_after the job finished. If the job runs in session mode, the executor is kept alive until_no more references to the executor exist.</p>__@param plan The plan of the program to execute._@return The net runtime of the program, in milliseconds.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;@Override_	public JobExecutionResult executePlan(Plan plan) throws Exception {_		if (plan == null) {_			throw new IllegalArgumentException("The plan may not be null.")__		}__		synchronized (this.lock) {__			_			final boolean shutDownAtEnd___			if (flink == null) {_				shutDownAtEnd = true___				_				if (this.taskManagerNumSlots == DEFAULT_TASK_MANAGER_NUM_SLOTS) {_					int maxParallelism = plan.getMaximumParallelism()__					if (maxParallelism > 0) {_						this.taskManagerNumSlots = maxParallelism__					}_				}__				_				start()__			}_			else {_				_				shutDownAtEnd = false__			}__			try {_				Configuration configuration = this.flink.configuration()___				Optimizer pc = new Optimizer(new DataStatistics(), configuration)__				OptimizedPlan op = pc.compile(plan)___				JobGraphGenerator jgg = new JobGraphGenerator(configuration)__				JobGraph jobGraph = jgg.compileJobGraph(op, plan.getJobId())___				boolean sysoutPrint = isPrintingStatusDuringExecution()__				return flink.submitJobAndWait(jobGraph, sysoutPrint)__			}_			finally {_				if (shutDownAtEnd) {_					stop()__				}_			}_		}_	};executes,the,given,program,on,a,local,runtime,and,waits,for,the,job,to,finish,p,if,the,executor,has,not,been,started,before,this,starts,the,executor,and,shuts,it,down,after,the,job,finished,if,the,job,runs,in,session,mode,the,executor,is,kept,alive,until,no,more,references,to,the,executor,exist,p,param,plan,the,plan,of,the,program,to,execute,return,the,net,runtime,of,the,program,in,milliseconds,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;override,public,job,execution,result,execute,plan,plan,plan,throws,exception,if,plan,null,throw,new,illegal,argument,exception,the,plan,may,not,be,null,synchronized,this,lock,final,boolean,shut,down,at,end,if,flink,null,shut,down,at,end,true,if,this,task,manager,num,slots,int,max,parallelism,plan,get,maximum,parallelism,if,max,parallelism,0,this,task,manager,num,slots,max,parallelism,start,else,shut,down,at,end,false,try,configuration,configuration,this,flink,configuration,optimizer,pc,new,optimizer,new,data,statistics,configuration,optimized,plan,op,pc,compile,plan,job,graph,generator,jgg,new,job,graph,generator,configuration,job,graph,job,graph,jgg,compile,job,graph,op,plan,get,job,id,boolean,sysout,print,is,printing,status,during,execution,return,flink,submit,job,and,wait,job,graph,sysout,print,finally,if,shut,down,at,end,stop
LocalExecutor -> @Override 	public JobExecutionResult executePlan(Plan plan) throws Exception;1499075301;Executes the given program on a local runtime and waits for the job to finish.__<p>If the executor has not been started before, this starts the executor and shuts it down_after the job finished. If the job runs in session mode, the executor is kept alive until_no more references to the executor exist.</p>__@param plan The plan of the program to execute._@return The net runtime of the program, in milliseconds.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;@Override_	public JobExecutionResult executePlan(Plan plan) throws Exception {_		if (plan == null) {_			throw new IllegalArgumentException("The plan may not be null.")__		}__		synchronized (this.lock) {__			_			final boolean shutDownAtEnd___			if (flink == null) {_				shutDownAtEnd = true___				_				if (this.taskManagerNumSlots == DEFAULT_TASK_MANAGER_NUM_SLOTS) {_					int maxParallelism = plan.getMaximumParallelism()__					if (maxParallelism > 0) {_						this.taskManagerNumSlots = maxParallelism__					}_				}__				_				start()__			}_			else {_				_				shutDownAtEnd = false__			}__			try {_				Configuration configuration = this.flink.configuration()___				Optimizer pc = new Optimizer(new DataStatistics(), configuration)__				OptimizedPlan op = pc.compile(plan)___				JobGraphGenerator jgg = new JobGraphGenerator(configuration)__				JobGraph jobGraph = jgg.compileJobGraph(op, plan.getJobId())___				boolean sysoutPrint = isPrintingStatusDuringExecution()__				return flink.submitJobAndWait(jobGraph, sysoutPrint)__			}_			finally {_				if (shutDownAtEnd) {_					stop()__				}_			}_		}_	};executes,the,given,program,on,a,local,runtime,and,waits,for,the,job,to,finish,p,if,the,executor,has,not,been,started,before,this,starts,the,executor,and,shuts,it,down,after,the,job,finished,if,the,job,runs,in,session,mode,the,executor,is,kept,alive,until,no,more,references,to,the,executor,exist,p,param,plan,the,plan,of,the,program,to,execute,return,the,net,runtime,of,the,program,in,milliseconds,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;override,public,job,execution,result,execute,plan,plan,plan,throws,exception,if,plan,null,throw,new,illegal,argument,exception,the,plan,may,not,be,null,synchronized,this,lock,final,boolean,shut,down,at,end,if,flink,null,shut,down,at,end,true,if,this,task,manager,num,slots,int,max,parallelism,plan,get,maximum,parallelism,if,max,parallelism,0,this,task,manager,num,slots,max,parallelism,start,else,shut,down,at,end,false,try,configuration,configuration,this,flink,configuration,optimizer,pc,new,optimizer,new,data,statistics,configuration,optimized,plan,op,pc,compile,plan,job,graph,generator,jgg,new,job,graph,generator,configuration,job,graph,job,graph,jgg,compile,job,graph,op,plan,get,job,id,boolean,sysout,print,is,printing,status,during,execution,return,flink,submit,job,and,wait,job,graph,sysout,print,finally,if,shut,down,at,end,stop
LocalExecutor -> @Override 	public JobExecutionResult executePlan(Plan plan) throws Exception;1518605788;Executes the given program on a local runtime and waits for the job to finish.__<p>If the executor has not been started before, this starts the executor and shuts it down_after the job finished. If the job runs in session mode, the executor is kept alive until_no more references to the executor exist.</p>__@param plan The plan of the program to execute._@return The net runtime of the program, in milliseconds.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;@Override_	public JobExecutionResult executePlan(Plan plan) throws Exception {_		if (plan == null) {_			throw new IllegalArgumentException("The plan may not be null.")__		}__		synchronized (this.lock) {__			_			final boolean shutDownAtEnd___			if (flink == null) {_				shutDownAtEnd = true___				_				if (this.taskManagerNumSlots == DEFAULT_TASK_MANAGER_NUM_SLOTS) {_					int maxParallelism = plan.getMaximumParallelism()__					if (maxParallelism > 0) {_						this.taskManagerNumSlots = maxParallelism__					}_				}__				_				start()__			}_			else {_				_				shutDownAtEnd = false__			}__			try {_				Configuration configuration = this.flink.configuration()___				Optimizer pc = new Optimizer(new DataStatistics(), configuration)__				OptimizedPlan op = pc.compile(plan)___				JobGraphGenerator jgg = new JobGraphGenerator(configuration)__				JobGraph jobGraph = jgg.compileJobGraph(op, plan.getJobId())___				boolean sysoutPrint = isPrintingStatusDuringExecution()__				return flink.submitJobAndWait(jobGraph, sysoutPrint)__			}_			finally {_				if (shutDownAtEnd) {_					stop()__				}_			}_		}_	};executes,the,given,program,on,a,local,runtime,and,waits,for,the,job,to,finish,p,if,the,executor,has,not,been,started,before,this,starts,the,executor,and,shuts,it,down,after,the,job,finished,if,the,job,runs,in,session,mode,the,executor,is,kept,alive,until,no,more,references,to,the,executor,exist,p,param,plan,the,plan,of,the,program,to,execute,return,the,net,runtime,of,the,program,in,milliseconds,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;override,public,job,execution,result,execute,plan,plan,plan,throws,exception,if,plan,null,throw,new,illegal,argument,exception,the,plan,may,not,be,null,synchronized,this,lock,final,boolean,shut,down,at,end,if,flink,null,shut,down,at,end,true,if,this,task,manager,num,slots,int,max,parallelism,plan,get,maximum,parallelism,if,max,parallelism,0,this,task,manager,num,slots,max,parallelism,start,else,shut,down,at,end,false,try,configuration,configuration,this,flink,configuration,optimizer,pc,new,optimizer,new,data,statistics,configuration,optimized,plan,op,pc,compile,plan,job,graph,generator,jgg,new,job,graph,generator,configuration,job,graph,job,graph,jgg,compile,job,graph,op,plan,get,job,id,boolean,sysout,print,is,printing,status,during,execution,return,flink,submit,job,and,wait,job,graph,sysout,print,finally,if,shut,down,at,end,stop
LocalExecutor -> @Override 	public JobExecutionResult executePlan(Plan plan) throws Exception;1519121818;Executes the given program on a local runtime and waits for the job to finish.__<p>If the executor has not been started before, this starts the executor and shuts it down_after the job finished. If the job runs in session mode, the executor is kept alive until_no more references to the executor exist.</p>__@param plan The plan of the program to execute._@return The net runtime of the program, in milliseconds.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;@Override_	public JobExecutionResult executePlan(Plan plan) throws Exception {_		if (plan == null) {_			throw new IllegalArgumentException("The plan may not be null.")__		}__		synchronized (this.lock) {__			_			final boolean shutDownAtEnd___			if (jobExecutorService == null) {_				shutDownAtEnd = true___				_				if (this.taskManagerNumSlots == DEFAULT_TASK_MANAGER_NUM_SLOTS) {_					int maxParallelism = plan.getMaximumParallelism()__					if (maxParallelism > 0) {_						this.taskManagerNumSlots = maxParallelism__					}_				}__				_				start()__			}_			else {_				_				shutDownAtEnd = false__			}__			try {_				_				final int slotsPerTaskManager = jobExecutorServiceConfiguration.getInteger(ConfigConstants.TASK_MANAGER_NUM_TASK_SLOTS, taskManagerNumSlots)__				final int numTaskManagers = jobExecutorServiceConfiguration.getInteger(ConfigConstants.LOCAL_NUMBER_TASK_MANAGER, 1)__				plan.setDefaultParallelism(slotsPerTaskManager * numTaskManagers)___				Optimizer pc = new Optimizer(new DataStatistics(), jobExecutorServiceConfiguration)__				OptimizedPlan op = pc.compile(plan)___				JobGraphGenerator jgg = new JobGraphGenerator(jobExecutorServiceConfiguration)__				JobGraph jobGraph = jgg.compileJobGraph(op, plan.getJobId())___				return jobExecutorService.executeJobBlocking(jobGraph)__			}_			finally {_				if (shutDownAtEnd) {_					stop()__				}_			}_		}_	};executes,the,given,program,on,a,local,runtime,and,waits,for,the,job,to,finish,p,if,the,executor,has,not,been,started,before,this,starts,the,executor,and,shuts,it,down,after,the,job,finished,if,the,job,runs,in,session,mode,the,executor,is,kept,alive,until,no,more,references,to,the,executor,exist,p,param,plan,the,plan,of,the,program,to,execute,return,the,net,runtime,of,the,program,in,milliseconds,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;override,public,job,execution,result,execute,plan,plan,plan,throws,exception,if,plan,null,throw,new,illegal,argument,exception,the,plan,may,not,be,null,synchronized,this,lock,final,boolean,shut,down,at,end,if,job,executor,service,null,shut,down,at,end,true,if,this,task,manager,num,slots,int,max,parallelism,plan,get,maximum,parallelism,if,max,parallelism,0,this,task,manager,num,slots,max,parallelism,start,else,shut,down,at,end,false,try,final,int,slots,per,task,manager,job,executor,service,configuration,get,integer,config,constants,task,manager,num,slots,final,int,num,task,managers,job,executor,service,configuration,get,integer,config,constants,1,plan,set,default,parallelism,slots,per,task,manager,num,task,managers,optimizer,pc,new,optimizer,new,data,statistics,job,executor,service,configuration,optimized,plan,op,pc,compile,plan,job,graph,generator,jgg,new,job,graph,generator,job,executor,service,configuration,job,graph,job,graph,jgg,compile,job,graph,op,plan,get,job,id,return,job,executor,service,execute,job,blocking,job,graph,finally,if,shut,down,at,end,stop
LocalExecutor -> @Override 	public JobExecutionResult executePlan(Plan plan) throws Exception;1519249745;Executes the given program on a local runtime and waits for the job to finish.__<p>If the executor has not been started before, this starts the executor and shuts it down_after the job finished. If the job runs in session mode, the executor is kept alive until_no more references to the executor exist.</p>__@param plan The plan of the program to execute._@return The net runtime of the program, in milliseconds.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;@Override_	public JobExecutionResult executePlan(Plan plan) throws Exception {_		if (plan == null) {_			throw new IllegalArgumentException("The plan may not be null.")__		}__		synchronized (this.lock) {__			_			final boolean shutDownAtEnd___			if (jobExecutorService == null) {_				shutDownAtEnd = true___				_				if (this.taskManagerNumSlots == DEFAULT_TASK_MANAGER_NUM_SLOTS) {_					int maxParallelism = plan.getMaximumParallelism()__					if (maxParallelism > 0) {_						this.taskManagerNumSlots = maxParallelism__					}_				}__				_				start()__			}_			else {_				_				shutDownAtEnd = false__			}__			try {_				_				final int slotsPerTaskManager = jobExecutorServiceConfiguration.getInteger(ConfigConstants.TASK_MANAGER_NUM_TASK_SLOTS, taskManagerNumSlots)__				final int numTaskManagers = jobExecutorServiceConfiguration.getInteger(ConfigConstants.LOCAL_NUMBER_TASK_MANAGER, 1)__				plan.setDefaultParallelism(slotsPerTaskManager * numTaskManagers)___				Optimizer pc = new Optimizer(new DataStatistics(), jobExecutorServiceConfiguration)__				OptimizedPlan op = pc.compile(plan)___				JobGraphGenerator jgg = new JobGraphGenerator(jobExecutorServiceConfiguration)__				JobGraph jobGraph = jgg.compileJobGraph(op, plan.getJobId())___				return jobExecutorService.executeJobBlocking(jobGraph)__			}_			finally {_				if (shutDownAtEnd) {_					stop()__				}_			}_		}_	};executes,the,given,program,on,a,local,runtime,and,waits,for,the,job,to,finish,p,if,the,executor,has,not,been,started,before,this,starts,the,executor,and,shuts,it,down,after,the,job,finished,if,the,job,runs,in,session,mode,the,executor,is,kept,alive,until,no,more,references,to,the,executor,exist,p,param,plan,the,plan,of,the,program,to,execute,return,the,net,runtime,of,the,program,in,milliseconds,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;override,public,job,execution,result,execute,plan,plan,plan,throws,exception,if,plan,null,throw,new,illegal,argument,exception,the,plan,may,not,be,null,synchronized,this,lock,final,boolean,shut,down,at,end,if,job,executor,service,null,shut,down,at,end,true,if,this,task,manager,num,slots,int,max,parallelism,plan,get,maximum,parallelism,if,max,parallelism,0,this,task,manager,num,slots,max,parallelism,start,else,shut,down,at,end,false,try,final,int,slots,per,task,manager,job,executor,service,configuration,get,integer,config,constants,task,manager,num,slots,final,int,num,task,managers,job,executor,service,configuration,get,integer,config,constants,1,plan,set,default,parallelism,slots,per,task,manager,num,task,managers,optimizer,pc,new,optimizer,new,data,statistics,job,executor,service,configuration,optimized,plan,op,pc,compile,plan,job,graph,generator,jgg,new,job,graph,generator,job,executor,service,configuration,job,graph,job,graph,jgg,compile,job,graph,op,plan,get,job,id,return,job,executor,service,execute,job,blocking,job,graph,finally,if,shut,down,at,end,stop
LocalExecutor -> @Override 	public JobExecutionResult executePlan(Plan plan) throws Exception;1522681180;Executes the given program on a local runtime and waits for the job to finish.__<p>If the executor has not been started before, this starts the executor and shuts it down_after the job finished. If the job runs in session mode, the executor is kept alive until_no more references to the executor exist.</p>__@param plan The plan of the program to execute._@return The net runtime of the program, in milliseconds.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;@Override_	public JobExecutionResult executePlan(Plan plan) throws Exception {_		if (plan == null) {_			throw new IllegalArgumentException("The plan may not be null.")__		}__		synchronized (this.lock) {__			_			final boolean shutDownAtEnd___			if (jobExecutorService == null) {_				shutDownAtEnd = true___				_				if (this.taskManagerNumSlots == DEFAULT_TASK_MANAGER_NUM_SLOTS) {_					int maxParallelism = plan.getMaximumParallelism()__					if (maxParallelism > 0) {_						this.taskManagerNumSlots = maxParallelism__					}_				}__				_				start()__			}_			else {_				_				shutDownAtEnd = false__			}__			try {_				_				final int slotsPerTaskManager = jobExecutorServiceConfiguration.getInteger(ConfigConstants.TASK_MANAGER_NUM_TASK_SLOTS, taskManagerNumSlots)__				final int numTaskManagers = jobExecutorServiceConfiguration.getInteger(ConfigConstants.LOCAL_NUMBER_TASK_MANAGER, 1)__				plan.setDefaultParallelism(slotsPerTaskManager * numTaskManagers)___				Optimizer pc = new Optimizer(new DataStatistics(), jobExecutorServiceConfiguration)__				OptimizedPlan op = pc.compile(plan)___				JobGraphGenerator jgg = new JobGraphGenerator(jobExecutorServiceConfiguration)__				JobGraph jobGraph = jgg.compileJobGraph(op, plan.getJobId())___				return jobExecutorService.executeJobBlocking(jobGraph)__			}_			finally {_				if (shutDownAtEnd) {_					stop()__				}_			}_		}_	};executes,the,given,program,on,a,local,runtime,and,waits,for,the,job,to,finish,p,if,the,executor,has,not,been,started,before,this,starts,the,executor,and,shuts,it,down,after,the,job,finished,if,the,job,runs,in,session,mode,the,executor,is,kept,alive,until,no,more,references,to,the,executor,exist,p,param,plan,the,plan,of,the,program,to,execute,return,the,net,runtime,of,the,program,in,milliseconds,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;override,public,job,execution,result,execute,plan,plan,plan,throws,exception,if,plan,null,throw,new,illegal,argument,exception,the,plan,may,not,be,null,synchronized,this,lock,final,boolean,shut,down,at,end,if,job,executor,service,null,shut,down,at,end,true,if,this,task,manager,num,slots,int,max,parallelism,plan,get,maximum,parallelism,if,max,parallelism,0,this,task,manager,num,slots,max,parallelism,start,else,shut,down,at,end,false,try,final,int,slots,per,task,manager,job,executor,service,configuration,get,integer,config,constants,task,manager,num,slots,final,int,num,task,managers,job,executor,service,configuration,get,integer,config,constants,1,plan,set,default,parallelism,slots,per,task,manager,num,task,managers,optimizer,pc,new,optimizer,new,data,statistics,job,executor,service,configuration,optimized,plan,op,pc,compile,plan,job,graph,generator,jgg,new,job,graph,generator,job,executor,service,configuration,job,graph,job,graph,jgg,compile,job,graph,op,plan,get,job,id,return,job,executor,service,execute,job,blocking,job,graph,finally,if,shut,down,at,end,stop
LocalExecutor -> @Override 	public JobExecutionResult executePlan(Plan plan) throws Exception;1524085355;Executes the given program on a local runtime and waits for the job to finish.__<p>If the executor has not been started before, this starts the executor and shuts it down_after the job finished. If the job runs in session mode, the executor is kept alive until_no more references to the executor exist.</p>__@param plan The plan of the program to execute._@return The net runtime of the program, in milliseconds.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;@Override_	public JobExecutionResult executePlan(Plan plan) throws Exception {_		if (plan == null) {_			throw new IllegalArgumentException("The plan may not be null.")__		}__		synchronized (this.lock) {__			_			final boolean shutDownAtEnd___			if (jobExecutorService == null) {_				shutDownAtEnd = true___				_				if (this.taskManagerNumSlots == DEFAULT_TASK_MANAGER_NUM_SLOTS) {_					int maxParallelism = plan.getMaximumParallelism()__					if (maxParallelism > 0) {_						this.taskManagerNumSlots = maxParallelism__					}_				}__				_				start()__			}_			else {_				_				shutDownAtEnd = false__			}__			try {_				_				final int slotsPerTaskManager = jobExecutorServiceConfiguration.getInteger(ConfigConstants.TASK_MANAGER_NUM_TASK_SLOTS, taskManagerNumSlots)__				final int numTaskManagers = jobExecutorServiceConfiguration.getInteger(ConfigConstants.LOCAL_NUMBER_TASK_MANAGER, 1)__				plan.setDefaultParallelism(slotsPerTaskManager * numTaskManagers)___				Optimizer pc = new Optimizer(new DataStatistics(), jobExecutorServiceConfiguration)__				OptimizedPlan op = pc.compile(plan)___				JobGraphGenerator jgg = new JobGraphGenerator(jobExecutorServiceConfiguration)__				JobGraph jobGraph = jgg.compileJobGraph(op, plan.getJobId())___				return jobExecutorService.executeJobBlocking(jobGraph)__			}_			finally {_				if (shutDownAtEnd) {_					stop()__				}_			}_		}_	};executes,the,given,program,on,a,local,runtime,and,waits,for,the,job,to,finish,p,if,the,executor,has,not,been,started,before,this,starts,the,executor,and,shuts,it,down,after,the,job,finished,if,the,job,runs,in,session,mode,the,executor,is,kept,alive,until,no,more,references,to,the,executor,exist,p,param,plan,the,plan,of,the,program,to,execute,return,the,net,runtime,of,the,program,in,milliseconds,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;override,public,job,execution,result,execute,plan,plan,plan,throws,exception,if,plan,null,throw,new,illegal,argument,exception,the,plan,may,not,be,null,synchronized,this,lock,final,boolean,shut,down,at,end,if,job,executor,service,null,shut,down,at,end,true,if,this,task,manager,num,slots,int,max,parallelism,plan,get,maximum,parallelism,if,max,parallelism,0,this,task,manager,num,slots,max,parallelism,start,else,shut,down,at,end,false,try,final,int,slots,per,task,manager,job,executor,service,configuration,get,integer,config,constants,task,manager,num,slots,final,int,num,task,managers,job,executor,service,configuration,get,integer,config,constants,1,plan,set,default,parallelism,slots,per,task,manager,num,task,managers,optimizer,pc,new,optimizer,new,data,statistics,job,executor,service,configuration,optimized,plan,op,pc,compile,plan,job,graph,generator,jgg,new,job,graph,generator,job,executor,service,configuration,job,graph,job,graph,jgg,compile,job,graph,op,plan,get,job,id,return,job,executor,service,execute,job,blocking,job,graph,finally,if,shut,down,at,end,stop
LocalExecutor -> @Override 	public JobExecutionResult executePlan(Plan plan) throws Exception;1524124694;Executes the given program on a local runtime and waits for the job to finish.__<p>If the executor has not been started before, this starts the executor and shuts it down_after the job finished. If the job runs in session mode, the executor is kept alive until_no more references to the executor exist.</p>__@param plan The plan of the program to execute._@return The net runtime of the program, in milliseconds.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;@Override_	public JobExecutionResult executePlan(Plan plan) throws Exception {_		if (plan == null) {_			throw new IllegalArgumentException("The plan may not be null.")__		}__		synchronized (this.lock) {__			_			final boolean shutDownAtEnd___			if (jobExecutorService == null) {_				shutDownAtEnd = true___				_				if (this.taskManagerNumSlots == DEFAULT_TASK_MANAGER_NUM_SLOTS) {_					int maxParallelism = plan.getMaximumParallelism()__					if (maxParallelism > 0) {_						this.taskManagerNumSlots = maxParallelism__					}_				}__				_				start()__			}_			else {_				_				shutDownAtEnd = false__			}__			try {_				_				final int slotsPerTaskManager = jobExecutorServiceConfiguration.getInteger(ConfigConstants.TASK_MANAGER_NUM_TASK_SLOTS, taskManagerNumSlots)__				final int numTaskManagers = jobExecutorServiceConfiguration.getInteger(ConfigConstants.LOCAL_NUMBER_TASK_MANAGER, 1)__				plan.setDefaultParallelism(slotsPerTaskManager * numTaskManagers)___				Optimizer pc = new Optimizer(new DataStatistics(), jobExecutorServiceConfiguration)__				OptimizedPlan op = pc.compile(plan)___				JobGraphGenerator jgg = new JobGraphGenerator(jobExecutorServiceConfiguration)__				JobGraph jobGraph = jgg.compileJobGraph(op, plan.getJobId())___				return jobExecutorService.executeJobBlocking(jobGraph)__			}_			finally {_				if (shutDownAtEnd) {_					stop()__				}_			}_		}_	};executes,the,given,program,on,a,local,runtime,and,waits,for,the,job,to,finish,p,if,the,executor,has,not,been,started,before,this,starts,the,executor,and,shuts,it,down,after,the,job,finished,if,the,job,runs,in,session,mode,the,executor,is,kept,alive,until,no,more,references,to,the,executor,exist,p,param,plan,the,plan,of,the,program,to,execute,return,the,net,runtime,of,the,program,in,milliseconds,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;override,public,job,execution,result,execute,plan,plan,plan,throws,exception,if,plan,null,throw,new,illegal,argument,exception,the,plan,may,not,be,null,synchronized,this,lock,final,boolean,shut,down,at,end,if,job,executor,service,null,shut,down,at,end,true,if,this,task,manager,num,slots,int,max,parallelism,plan,get,maximum,parallelism,if,max,parallelism,0,this,task,manager,num,slots,max,parallelism,start,else,shut,down,at,end,false,try,final,int,slots,per,task,manager,job,executor,service,configuration,get,integer,config,constants,task,manager,num,slots,final,int,num,task,managers,job,executor,service,configuration,get,integer,config,constants,1,plan,set,default,parallelism,slots,per,task,manager,num,task,managers,optimizer,pc,new,optimizer,new,data,statistics,job,executor,service,configuration,optimized,plan,op,pc,compile,plan,job,graph,generator,jgg,new,job,graph,generator,job,executor,service,configuration,job,graph,job,graph,jgg,compile,job,graph,op,plan,get,job,id,return,job,executor,service,execute,job,blocking,job,graph,finally,if,shut,down,at,end,stop
LocalExecutor -> @Override 	public JobExecutionResult executePlan(Plan plan) throws Exception;1524570317;Executes the given program on a local runtime and waits for the job to finish.__<p>If the executor has not been started before, this starts the executor and shuts it down_after the job finished. If the job runs in session mode, the executor is kept alive until_no more references to the executor exist.</p>__@param plan The plan of the program to execute._@return The net runtime of the program, in milliseconds.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;@Override_	public JobExecutionResult executePlan(Plan plan) throws Exception {_		if (plan == null) {_			throw new IllegalArgumentException("The plan may not be null.")__		}__		synchronized (this.lock) {__			_			final boolean shutDownAtEnd___			if (jobExecutorService == null) {_				shutDownAtEnd = true___				_				if (this.taskManagerNumSlots == DEFAULT_TASK_MANAGER_NUM_SLOTS) {_					int maxParallelism = plan.getMaximumParallelism()__					if (maxParallelism > 0) {_						this.taskManagerNumSlots = maxParallelism__					}_				}__				_				start()__			}_			else {_				_				shutDownAtEnd = false__			}__			try {_				_				final int slotsPerTaskManager = jobExecutorServiceConfiguration.getInteger(TaskManagerOptions.NUM_TASK_SLOTS, taskManagerNumSlots)__				final int numTaskManagers = jobExecutorServiceConfiguration.getInteger(ConfigConstants.LOCAL_NUMBER_TASK_MANAGER, 1)__				plan.setDefaultParallelism(slotsPerTaskManager * numTaskManagers)___				Optimizer pc = new Optimizer(new DataStatistics(), jobExecutorServiceConfiguration)__				OptimizedPlan op = pc.compile(plan)___				JobGraphGenerator jgg = new JobGraphGenerator(jobExecutorServiceConfiguration)__				JobGraph jobGraph = jgg.compileJobGraph(op, plan.getJobId())___				return jobExecutorService.executeJobBlocking(jobGraph)__			}_			finally {_				if (shutDownAtEnd) {_					stop()__				}_			}_		}_	};executes,the,given,program,on,a,local,runtime,and,waits,for,the,job,to,finish,p,if,the,executor,has,not,been,started,before,this,starts,the,executor,and,shuts,it,down,after,the,job,finished,if,the,job,runs,in,session,mode,the,executor,is,kept,alive,until,no,more,references,to,the,executor,exist,p,param,plan,the,plan,of,the,program,to,execute,return,the,net,runtime,of,the,program,in,milliseconds,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;override,public,job,execution,result,execute,plan,plan,plan,throws,exception,if,plan,null,throw,new,illegal,argument,exception,the,plan,may,not,be,null,synchronized,this,lock,final,boolean,shut,down,at,end,if,job,executor,service,null,shut,down,at,end,true,if,this,task,manager,num,slots,int,max,parallelism,plan,get,maximum,parallelism,if,max,parallelism,0,this,task,manager,num,slots,max,parallelism,start,else,shut,down,at,end,false,try,final,int,slots,per,task,manager,job,executor,service,configuration,get,integer,task,manager,options,task,manager,num,slots,final,int,num,task,managers,job,executor,service,configuration,get,integer,config,constants,1,plan,set,default,parallelism,slots,per,task,manager,num,task,managers,optimizer,pc,new,optimizer,new,data,statistics,job,executor,service,configuration,optimized,plan,op,pc,compile,plan,job,graph,generator,jgg,new,job,graph,generator,job,executor,service,configuration,job,graph,job,graph,jgg,compile,job,graph,op,plan,get,job,id,return,job,executor,service,execute,job,blocking,job,graph,finally,if,shut,down,at,end,stop
LocalExecutor -> @Override 	public JobExecutionResult executePlan(Plan plan) throws Exception;1529682304;Executes the given program on a local runtime and waits for the job to finish.__<p>If the executor has not been started before, this starts the executor and shuts it down_after the job finished. If the job runs in session mode, the executor is kept alive until_no more references to the executor exist.</p>__@param plan The plan of the program to execute._@return The net runtime of the program, in milliseconds.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;@Override_	public JobExecutionResult executePlan(Plan plan) throws Exception {_		if (plan == null) {_			throw new IllegalArgumentException("The plan may not be null.")__		}__		synchronized (this.lock) {__			_			final boolean shutDownAtEnd___			if (jobExecutorService == null) {_				shutDownAtEnd = true___				_				if (this.taskManagerNumSlots == DEFAULT_TASK_MANAGER_NUM_SLOTS) {_					int maxParallelism = plan.getMaximumParallelism()__					if (maxParallelism > 0) {_						this.taskManagerNumSlots = maxParallelism__					}_				}__				_				start()__			}_			else {_				_				shutDownAtEnd = false__			}__			try {_				_				final int slotsPerTaskManager = jobExecutorServiceConfiguration.getInteger(TaskManagerOptions.NUM_TASK_SLOTS, taskManagerNumSlots)__				final int numTaskManagers = jobExecutorServiceConfiguration.getInteger(ConfigConstants.LOCAL_NUMBER_TASK_MANAGER, 1)__				plan.setDefaultParallelism(slotsPerTaskManager * numTaskManagers)___				Optimizer pc = new Optimizer(new DataStatistics(), jobExecutorServiceConfiguration)__				OptimizedPlan op = pc.compile(plan)___				JobGraphGenerator jgg = new JobGraphGenerator(jobExecutorServiceConfiguration)__				JobGraph jobGraph = jgg.compileJobGraph(op, plan.getJobId())___				return jobExecutorService.executeJobBlocking(jobGraph)__			}_			finally {_				if (shutDownAtEnd) {_					stop()__				}_			}_		}_	};executes,the,given,program,on,a,local,runtime,and,waits,for,the,job,to,finish,p,if,the,executor,has,not,been,started,before,this,starts,the,executor,and,shuts,it,down,after,the,job,finished,if,the,job,runs,in,session,mode,the,executor,is,kept,alive,until,no,more,references,to,the,executor,exist,p,param,plan,the,plan,of,the,program,to,execute,return,the,net,runtime,of,the,program,in,milliseconds,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;override,public,job,execution,result,execute,plan,plan,plan,throws,exception,if,plan,null,throw,new,illegal,argument,exception,the,plan,may,not,be,null,synchronized,this,lock,final,boolean,shut,down,at,end,if,job,executor,service,null,shut,down,at,end,true,if,this,task,manager,num,slots,int,max,parallelism,plan,get,maximum,parallelism,if,max,parallelism,0,this,task,manager,num,slots,max,parallelism,start,else,shut,down,at,end,false,try,final,int,slots,per,task,manager,job,executor,service,configuration,get,integer,task,manager,options,task,manager,num,slots,final,int,num,task,managers,job,executor,service,configuration,get,integer,config,constants,1,plan,set,default,parallelism,slots,per,task,manager,num,task,managers,optimizer,pc,new,optimizer,new,data,statistics,job,executor,service,configuration,optimized,plan,op,pc,compile,plan,job,graph,generator,jgg,new,job,graph,generator,job,executor,service,configuration,job,graph,job,graph,jgg,compile,job,graph,op,plan,get,job,id,return,job,executor,service,execute,job,blocking,job,graph,finally,if,shut,down,at,end,stop
LocalExecutor -> @Override 	public JobExecutionResult executePlan(Plan plan) throws Exception;1538135826;Executes the given program on a local runtime and waits for the job to finish.__<p>If the executor has not been started before, this starts the executor and shuts it down_after the job finished. If the job runs in session mode, the executor is kept alive until_no more references to the executor exist.</p>__@param plan The plan of the program to execute._@return The net runtime of the program, in milliseconds.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;@Override_	public JobExecutionResult executePlan(Plan plan) throws Exception {_		if (plan == null) {_			throw new IllegalArgumentException("The plan may not be null.")__		}__		synchronized (this.lock) {__			_			final boolean shutDownAtEnd___			if (jobExecutorService == null) {_				shutDownAtEnd = true___				_				if (this.taskManagerNumSlots == DEFAULT_TASK_MANAGER_NUM_SLOTS) {_					int maxParallelism = plan.getMaximumParallelism()__					if (maxParallelism > 0) {_						this.taskManagerNumSlots = maxParallelism__					}_				}__				_				start()__			}_			else {_				_				shutDownAtEnd = false__			}__			try {_				_				final int slotsPerTaskManager = jobExecutorServiceConfiguration.getInteger(TaskManagerOptions.NUM_TASK_SLOTS, taskManagerNumSlots)__				final int numTaskManagers = jobExecutorServiceConfiguration.getInteger(ConfigConstants.LOCAL_NUMBER_TASK_MANAGER, 1)__				plan.setDefaultParallelism(slotsPerTaskManager * numTaskManagers)___				Optimizer pc = new Optimizer(new DataStatistics(), jobExecutorServiceConfiguration)__				OptimizedPlan op = pc.compile(plan)___				JobGraphGenerator jgg = new JobGraphGenerator(jobExecutorServiceConfiguration)__				JobGraph jobGraph = jgg.compileJobGraph(op, plan.getJobId())___				return jobExecutorService.executeJobBlocking(jobGraph)__			}_			finally {_				if (shutDownAtEnd) {_					stop()__				}_			}_		}_	};executes,the,given,program,on,a,local,runtime,and,waits,for,the,job,to,finish,p,if,the,executor,has,not,been,started,before,this,starts,the,executor,and,shuts,it,down,after,the,job,finished,if,the,job,runs,in,session,mode,the,executor,is,kept,alive,until,no,more,references,to,the,executor,exist,p,param,plan,the,plan,of,the,program,to,execute,return,the,net,runtime,of,the,program,in,milliseconds,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;override,public,job,execution,result,execute,plan,plan,plan,throws,exception,if,plan,null,throw,new,illegal,argument,exception,the,plan,may,not,be,null,synchronized,this,lock,final,boolean,shut,down,at,end,if,job,executor,service,null,shut,down,at,end,true,if,this,task,manager,num,slots,int,max,parallelism,plan,get,maximum,parallelism,if,max,parallelism,0,this,task,manager,num,slots,max,parallelism,start,else,shut,down,at,end,false,try,final,int,slots,per,task,manager,job,executor,service,configuration,get,integer,task,manager,options,task,manager,num,slots,final,int,num,task,managers,job,executor,service,configuration,get,integer,config,constants,1,plan,set,default,parallelism,slots,per,task,manager,num,task,managers,optimizer,pc,new,optimizer,new,data,statistics,job,executor,service,configuration,optimized,plan,op,pc,compile,plan,job,graph,generator,jgg,new,job,graph,generator,job,executor,service,configuration,job,graph,job,graph,jgg,compile,job,graph,op,plan,get,job,id,return,job,executor,service,execute,job,blocking,job,graph,finally,if,shut,down,at,end,stop
LocalExecutor -> @Override 	public JobExecutionResult executePlan(Plan plan) throws Exception;1549360057;Executes the given program on a local runtime and waits for the job to finish.__<p>If the executor has not been started before, this starts the executor and shuts it down_after the job finished. If the job runs in session mode, the executor is kept alive until_no more references to the executor exist.</p>__@param plan The plan of the program to execute._@return The net runtime of the program, in milliseconds.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;@Override_	public JobExecutionResult executePlan(Plan plan) throws Exception {_		if (plan == null) {_			throw new IllegalArgumentException("The plan may not be null.")__		}__		synchronized (this.lock) {__			_			final boolean shutDownAtEnd___			if (jobExecutorService == null) {_				shutDownAtEnd = true___				_				if (this.taskManagerNumSlots == DEFAULT_TASK_MANAGER_NUM_SLOTS) {_					int maxParallelism = plan.getMaximumParallelism()__					if (maxParallelism > 0) {_						this.taskManagerNumSlots = maxParallelism__					}_				}__				_				start()__			}_			else {_				_				shutDownAtEnd = false__			}__			try {_				_				final int slotsPerTaskManager = jobExecutorServiceConfiguration.getInteger(TaskManagerOptions.NUM_TASK_SLOTS, taskManagerNumSlots)__				final int numTaskManagers = jobExecutorServiceConfiguration.getInteger(ConfigConstants.LOCAL_NUMBER_TASK_MANAGER, 1)__				plan.setDefaultParallelism(slotsPerTaskManager * numTaskManagers)___				Optimizer pc = new Optimizer(new DataStatistics(), jobExecutorServiceConfiguration)__				OptimizedPlan op = pc.compile(plan)___				JobGraphGenerator jgg = new JobGraphGenerator(jobExecutorServiceConfiguration)__				JobGraph jobGraph = jgg.compileJobGraph(op, plan.getJobId())___				return jobExecutorService.executeJobBlocking(jobGraph)__			}_			finally {_				if (shutDownAtEnd) {_					stop()__				}_			}_		}_	};executes,the,given,program,on,a,local,runtime,and,waits,for,the,job,to,finish,p,if,the,executor,has,not,been,started,before,this,starts,the,executor,and,shuts,it,down,after,the,job,finished,if,the,job,runs,in,session,mode,the,executor,is,kept,alive,until,no,more,references,to,the,executor,exist,p,param,plan,the,plan,of,the,program,to,execute,return,the,net,runtime,of,the,program,in,milliseconds,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;override,public,job,execution,result,execute,plan,plan,plan,throws,exception,if,plan,null,throw,new,illegal,argument,exception,the,plan,may,not,be,null,synchronized,this,lock,final,boolean,shut,down,at,end,if,job,executor,service,null,shut,down,at,end,true,if,this,task,manager,num,slots,int,max,parallelism,plan,get,maximum,parallelism,if,max,parallelism,0,this,task,manager,num,slots,max,parallelism,start,else,shut,down,at,end,false,try,final,int,slots,per,task,manager,job,executor,service,configuration,get,integer,task,manager,options,task,manager,num,slots,final,int,num,task,managers,job,executor,service,configuration,get,integer,config,constants,1,plan,set,default,parallelism,slots,per,task,manager,num,task,managers,optimizer,pc,new,optimizer,new,data,statistics,job,executor,service,configuration,optimized,plan,op,pc,compile,plan,job,graph,generator,jgg,new,job,graph,generator,job,executor,service,configuration,job,graph,job,graph,jgg,compile,job,graph,op,plan,get,job,id,return,job,executor,service,execute,job,blocking,job,graph,finally,if,shut,down,at,end,stop
LocalExecutor -> @Override 	public JobExecutionResult executePlan(Plan plan) throws Exception;1550222817;Executes the given program on a local runtime and waits for the job to finish.__<p>If the executor has not been started before, this starts the executor and shuts it down_after the job finished. If the job runs in session mode, the executor is kept alive until_no more references to the executor exist.</p>__@param plan The plan of the program to execute._@return The net runtime of the program, in milliseconds.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;@Override_	public JobExecutionResult executePlan(Plan plan) throws Exception {_		if (plan == null) {_			throw new IllegalArgumentException("The plan may not be null.")__		}__		synchronized (this.lock) {__			_			final boolean shutDownAtEnd___			if (jobExecutorService == null) {_				shutDownAtEnd = true___				_				if (this.taskManagerNumSlots == DEFAULT_TASK_MANAGER_NUM_SLOTS) {_					int maxParallelism = plan.getMaximumParallelism()__					if (maxParallelism > 0) {_						this.taskManagerNumSlots = maxParallelism__					}_				}__				_				start()__			}_			else {_				_				shutDownAtEnd = false__			}__			try {_				_				final int slotsPerTaskManager = jobExecutorServiceConfiguration.getInteger(TaskManagerOptions.NUM_TASK_SLOTS, taskManagerNumSlots)__				final int numTaskManagers = jobExecutorServiceConfiguration.getInteger(ConfigConstants.LOCAL_NUMBER_TASK_MANAGER, 1)__				plan.setDefaultParallelism(slotsPerTaskManager * numTaskManagers)___				Optimizer pc = new Optimizer(new DataStatistics(), jobExecutorServiceConfiguration)__				OptimizedPlan op = pc.compile(plan)___				JobGraphGenerator jgg = new JobGraphGenerator(jobExecutorServiceConfiguration)__				JobGraph jobGraph = jgg.compileJobGraph(op, plan.getJobId())___				return jobExecutorService.executeJobBlocking(jobGraph)__			}_			finally {_				if (shutDownAtEnd) {_					stop()__				}_			}_		}_	};executes,the,given,program,on,a,local,runtime,and,waits,for,the,job,to,finish,p,if,the,executor,has,not,been,started,before,this,starts,the,executor,and,shuts,it,down,after,the,job,finished,if,the,job,runs,in,session,mode,the,executor,is,kept,alive,until,no,more,references,to,the,executor,exist,p,param,plan,the,plan,of,the,program,to,execute,return,the,net,runtime,of,the,program,in,milliseconds,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;override,public,job,execution,result,execute,plan,plan,plan,throws,exception,if,plan,null,throw,new,illegal,argument,exception,the,plan,may,not,be,null,synchronized,this,lock,final,boolean,shut,down,at,end,if,job,executor,service,null,shut,down,at,end,true,if,this,task,manager,num,slots,int,max,parallelism,plan,get,maximum,parallelism,if,max,parallelism,0,this,task,manager,num,slots,max,parallelism,start,else,shut,down,at,end,false,try,final,int,slots,per,task,manager,job,executor,service,configuration,get,integer,task,manager,options,task,manager,num,slots,final,int,num,task,managers,job,executor,service,configuration,get,integer,config,constants,1,plan,set,default,parallelism,slots,per,task,manager,num,task,managers,optimizer,pc,new,optimizer,new,data,statistics,job,executor,service,configuration,optimized,plan,op,pc,compile,plan,job,graph,generator,jgg,new,job,graph,generator,job,executor,service,configuration,job,graph,job,graph,jgg,compile,job,graph,op,plan,get,job,id,return,job,executor,service,execute,job,blocking,job,graph,finally,if,shut,down,at,end,stop
LocalExecutor -> public static JobExecutionResult execute(Program pa, String... args) throws Exception;1405024514;Executes the program described by the given plan assembler.__@param pa The program's plan assembler._@param args The parameters._@return The net runtime of the program, in milliseconds.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public static JobExecutionResult execute(Program pa, String... args) throws Exception {_		return execute(pa.getPlan(args))__	};executes,the,program,described,by,the,given,plan,assembler,param,pa,the,program,s,plan,assembler,param,args,the,parameters,return,the,net,runtime,of,the,program,in,milliseconds,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,static,job,execution,result,execute,program,pa,string,args,throws,exception,return,execute,pa,get,plan,args
LocalExecutor -> public static JobExecutionResult execute(Program pa, String... args) throws Exception;1405090423;Executes the program described by the given plan assembler.__@param pa The program's plan assembler._@param args The parameters._@return The net runtime of the program, in milliseconds.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public static JobExecutionResult execute(Program pa, String... args) throws Exception {_		return execute(pa.getPlan(args))__	};executes,the,program,described,by,the,given,plan,assembler,param,pa,the,program,s,plan,assembler,param,args,the,parameters,return,the,net,runtime,of,the,program,in,milliseconds,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,static,job,execution,result,execute,program,pa,string,args,throws,exception,return,execute,pa,get,plan,args
LocalExecutor -> public static JobExecutionResult execute(Program pa, String... args) throws Exception;1409911022;Executes the program described by the given plan assembler.__@param pa The program's plan assembler._@param args The parameters._@return The net runtime of the program, in milliseconds.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public static JobExecutionResult execute(Program pa, String... args) throws Exception {_		return execute(pa.getPlan(args))__	};executes,the,program,described,by,the,given,plan,assembler,param,pa,the,program,s,plan,assembler,param,args,the,parameters,return,the,net,runtime,of,the,program,in,milliseconds,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,static,job,execution,result,execute,program,pa,string,args,throws,exception,return,execute,pa,get,plan,args
LocalExecutor -> public static JobExecutionResult execute(Program pa, String... args) throws Exception;1411473593;Executes the program described by the given plan assembler.__@param pa The program's plan assembler._@param args The parameters._@return The net runtime of the program, in milliseconds.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public static JobExecutionResult execute(Program pa, String... args) throws Exception {_		return execute(pa.getPlan(args))__	};executes,the,program,described,by,the,given,plan,assembler,param,pa,the,program,s,plan,assembler,param,args,the,parameters,return,the,net,runtime,of,the,program,in,milliseconds,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,static,job,execution,result,execute,program,pa,string,args,throws,exception,return,execute,pa,get,plan,args
LocalExecutor -> public static JobExecutionResult execute(Program pa, String... args) throws Exception;1418925507;Executes the program described by the given plan assembler.__@param pa The program's plan assembler._@param args The parameters._@return The net runtime of the program, in milliseconds.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public static JobExecutionResult execute(Program pa, String... args) throws Exception {_		return execute(pa.getPlan(args))__	};executes,the,program,described,by,the,given,plan,assembler,param,pa,the,program,s,plan,assembler,param,args,the,parameters,return,the,net,runtime,of,the,program,in,milliseconds,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,static,job,execution,result,execute,program,pa,string,args,throws,exception,return,execute,pa,get,plan,args
LocalExecutor -> public static JobExecutionResult execute(Program pa, String... args) throws Exception;1418925507;Executes the program described by the given plan assembler.__@param pa The program's plan assembler._@param args The parameters._@return The net runtime of the program, in milliseconds.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public static JobExecutionResult execute(Program pa, String... args) throws Exception {_		return execute(pa.getPlan(args))__	};executes,the,program,described,by,the,given,plan,assembler,param,pa,the,program,s,plan,assembler,param,args,the,parameters,return,the,net,runtime,of,the,program,in,milliseconds,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,static,job,execution,result,execute,program,pa,string,args,throws,exception,return,execute,pa,get,plan,args
LocalExecutor -> public static JobExecutionResult execute(Program pa, String... args) throws Exception;1418925508;Executes the program described by the given plan assembler.__@param pa The program's plan assembler._@param args The parameters._@return The net runtime of the program, in milliseconds.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public static JobExecutionResult execute(Program pa, String... args) throws Exception {_		return execute(pa.getPlan(args))__	};executes,the,program,described,by,the,given,plan,assembler,param,pa,the,program,s,plan,assembler,param,args,the,parameters,return,the,net,runtime,of,the,program,in,milliseconds,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,static,job,execution,result,execute,program,pa,string,args,throws,exception,return,execute,pa,get,plan,args
LocalExecutor -> public static JobExecutionResult execute(Program pa, String... args) throws Exception;1418925508;Executes the program described by the given plan assembler.__@param pa The program's plan assembler._@param args The parameters._@return The net runtime of the program, in milliseconds.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public static JobExecutionResult execute(Program pa, String... args) throws Exception {_		return execute(pa.getPlan(args))__	};executes,the,program,described,by,the,given,plan,assembler,param,pa,the,program,s,plan,assembler,param,args,the,parameters,return,the,net,runtime,of,the,program,in,milliseconds,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,static,job,execution,result,execute,program,pa,string,args,throws,exception,return,execute,pa,get,plan,args
LocalExecutor -> public static JobExecutionResult execute(Program pa, String... args) throws Exception;1418925510;Executes the program described by the given plan assembler.__@param pa The program's plan assembler._@param args The parameters._@return The net runtime of the program, in milliseconds.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public static JobExecutionResult execute(Program pa, String... args) throws Exception {_		return execute(pa.getPlan(args))__	};executes,the,program,described,by,the,given,plan,assembler,param,pa,the,program,s,plan,assembler,param,args,the,parameters,return,the,net,runtime,of,the,program,in,milliseconds,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,static,job,execution,result,execute,program,pa,string,args,throws,exception,return,execute,pa,get,plan,args
LocalExecutor -> public static JobExecutionResult execute(Program pa, String... args) throws Exception;1418925511;Executes the program described by the given plan assembler.__@param pa The program's plan assembler._@param args The parameters._@return The net runtime of the program, in milliseconds.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public static JobExecutionResult execute(Program pa, String... args) throws Exception {_		return execute(pa.getPlan(args))__	};executes,the,program,described,by,the,given,plan,assembler,param,pa,the,program,s,plan,assembler,param,args,the,parameters,return,the,net,runtime,of,the,program,in,milliseconds,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,static,job,execution,result,execute,program,pa,string,args,throws,exception,return,execute,pa,get,plan,args
LocalExecutor -> public static JobExecutionResult execute(Program pa, String... args) throws Exception;1418925512;Executes the program described by the given plan assembler.__@param pa The program's plan assembler._@param args The parameters._@return The net runtime of the program, in milliseconds.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public static JobExecutionResult execute(Program pa, String... args) throws Exception {_		return execute(pa.getPlan(args))__	};executes,the,program,described,by,the,given,plan,assembler,param,pa,the,program,s,plan,assembler,param,args,the,parameters,return,the,net,runtime,of,the,program,in,milliseconds,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,static,job,execution,result,execute,program,pa,string,args,throws,exception,return,execute,pa,get,plan,args
LocalExecutor -> public static JobExecutionResult execute(Program pa, String... args) throws Exception;1418925513;Executes the program described by the given plan assembler.__@param pa The program's plan assembler._@param args The parameters._@return The net runtime of the program, in milliseconds.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public static JobExecutionResult execute(Program pa, String... args) throws Exception {_		return execute(pa.getPlan(args))__	};executes,the,program,described,by,the,given,plan,assembler,param,pa,the,program,s,plan,assembler,param,args,the,parameters,return,the,net,runtime,of,the,program,in,milliseconds,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,static,job,execution,result,execute,program,pa,string,args,throws,exception,return,execute,pa,get,plan,args
LocalExecutor -> public static JobExecutionResult execute(Program pa, String... args) throws Exception;1426843273;Executes the program described by the given plan assembler.__@param pa The program's plan assembler._@param args The parameters._@return The net runtime of the program, in milliseconds.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public static JobExecutionResult execute(Program pa, String... args) throws Exception {_		return execute(pa.getPlan(args))__	};executes,the,program,described,by,the,given,plan,assembler,param,pa,the,program,s,plan,assembler,param,args,the,parameters,return,the,net,runtime,of,the,program,in,milliseconds,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,static,job,execution,result,execute,program,pa,string,args,throws,exception,return,execute,pa,get,plan,args
LocalExecutor -> public static JobExecutionResult execute(Program pa, String... args) throws Exception;1426843274;Executes the program described by the given plan assembler.__@param pa The program's plan assembler._@param args The parameters._@return The net runtime of the program, in milliseconds.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public static JobExecutionResult execute(Program pa, String... args) throws Exception {_		return execute(pa.getPlan(args))__	};executes,the,program,described,by,the,given,plan,assembler,param,pa,the,program,s,plan,assembler,param,args,the,parameters,return,the,net,runtime,of,the,program,in,milliseconds,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,static,job,execution,result,execute,program,pa,string,args,throws,exception,return,execute,pa,get,plan,args
LocalExecutor -> public static JobExecutionResult execute(Program pa, String... args) throws Exception;1426843274;Executes the program described by the given plan assembler.__@param pa The program's plan assembler._@param args The parameters._@return The net runtime of the program, in milliseconds.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public static JobExecutionResult execute(Program pa, String... args) throws Exception {_		return execute(pa.getPlan(args))__	};executes,the,program,described,by,the,given,plan,assembler,param,pa,the,program,s,plan,assembler,param,args,the,parameters,return,the,net,runtime,of,the,program,in,milliseconds,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,static,job,execution,result,execute,program,pa,string,args,throws,exception,return,execute,pa,get,plan,args
LocalExecutor -> public static JobExecutionResult execute(Program pa, String... args) throws Exception;1427784999;Executes the program described by the given plan assembler.__@param pa The program's plan assembler._@param args The parameters._@return The net runtime of the program, in milliseconds.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public static JobExecutionResult execute(Program pa, String... args) throws Exception {_		return execute(pa.getPlan(args))__	};executes,the,program,described,by,the,given,plan,assembler,param,pa,the,program,s,plan,assembler,param,args,the,parameters,return,the,net,runtime,of,the,program,in,milliseconds,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,static,job,execution,result,execute,program,pa,string,args,throws,exception,return,execute,pa,get,plan,args
LocalExecutor -> public static JobExecutionResult execute(Program pa, String... args) throws Exception;1427958028;Executes the program described by the given plan assembler.__@param pa The program's plan assembler._@param args The parameters._@return The net runtime of the program, in milliseconds.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public static JobExecutionResult execute(Program pa, String... args) throws Exception {_		return execute(pa.getPlan(args))__	};executes,the,program,described,by,the,given,plan,assembler,param,pa,the,program,s,plan,assembler,param,args,the,parameters,return,the,net,runtime,of,the,program,in,milliseconds,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,static,job,execution,result,execute,program,pa,string,args,throws,exception,return,execute,pa,get,plan,args
LocalExecutor -> public static JobExecutionResult execute(Program pa, String... args) throws Exception;1428663519;Executes the program described by the given plan assembler.__@param pa The program's plan assembler._@param args The parameters._@return The net runtime of the program, in milliseconds.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public static JobExecutionResult execute(Program pa, String... args) throws Exception {_		return execute(pa.getPlan(args))__	};executes,the,program,described,by,the,given,plan,assembler,param,pa,the,program,s,plan,assembler,param,args,the,parameters,return,the,net,runtime,of,the,program,in,milliseconds,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,static,job,execution,result,execute,program,pa,string,args,throws,exception,return,execute,pa,get,plan,args
LocalExecutor -> public static JobExecutionResult execute(Program pa, String... args) throws Exception;1428935901;Executes the program described by the given plan assembler.__@param pa The program's plan assembler._@param args The parameters._@return The net runtime of the program, in milliseconds.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public static JobExecutionResult execute(Program pa, String... args) throws Exception {_		return execute(pa.getPlan(args))__	};executes,the,program,described,by,the,given,plan,assembler,param,pa,the,program,s,plan,assembler,param,args,the,parameters,return,the,net,runtime,of,the,program,in,milliseconds,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,static,job,execution,result,execute,program,pa,string,args,throws,exception,return,execute,pa,get,plan,args
LocalExecutor -> public static JobExecutionResult execute(Program pa, String... args) throws Exception;1428935901;Executes the program described by the given plan assembler.__@param pa The program's plan assembler._@param args The parameters._@return The net runtime of the program, in milliseconds.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public static JobExecutionResult execute(Program pa, String... args) throws Exception {_		return execute(pa.getPlan(args))__	};executes,the,program,described,by,the,given,plan,assembler,param,pa,the,program,s,plan,assembler,param,args,the,parameters,return,the,net,runtime,of,the,program,in,milliseconds,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,static,job,execution,result,execute,program,pa,string,args,throws,exception,return,execute,pa,get,plan,args
LocalExecutor -> public static JobExecutionResult execute(Program pa, String... args) throws Exception;1440951699;Executes the program described by the given plan assembler.__@param pa The program's plan assembler._@param args The parameters._@return The net runtime of the program, in milliseconds.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public static JobExecutionResult execute(Program pa, String... args) throws Exception {_		return execute(pa.getPlan(args))__	};executes,the,program,described,by,the,given,plan,assembler,param,pa,the,program,s,plan,assembler,param,args,the,parameters,return,the,net,runtime,of,the,program,in,milliseconds,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,static,job,execution,result,execute,program,pa,string,args,throws,exception,return,execute,pa,get,plan,args
LocalExecutor -> public static JobExecutionResult execute(Program pa, String... args) throws Exception;1441011751;Executes the program described by the given plan assembler.__@param pa The program's plan assembler._@param args The parameters._@return The net runtime of the program, in milliseconds.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public static JobExecutionResult execute(Program pa, String... args) throws Exception {_		return execute(pa.getPlan(args))__	};executes,the,program,described,by,the,given,plan,assembler,param,pa,the,program,s,plan,assembler,param,args,the,parameters,return,the,net,runtime,of,the,program,in,milliseconds,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,static,job,execution,result,execute,program,pa,string,args,throws,exception,return,execute,pa,get,plan,args
LocalExecutor -> public static JobExecutionResult execute(Program pa, String... args) throws Exception;1441614857;Executes the program described by the given plan assembler.__@param pa The program's plan assembler._@param args The parameters._@return The net runtime of the program, in milliseconds.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public static JobExecutionResult execute(Program pa, String... args) throws Exception {_		return execute(pa.getPlan(args))__	};executes,the,program,described,by,the,given,plan,assembler,param,pa,the,program,s,plan,assembler,param,args,the,parameters,return,the,net,runtime,of,the,program,in,milliseconds,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,static,job,execution,result,execute,program,pa,string,args,throws,exception,return,execute,pa,get,plan,args
LocalExecutor -> public static JobExecutionResult execute(Program pa, String... args) throws Exception;1442944546;Executes the given program.__@param pa The program._@param args The parameters._@return The execution result of the program.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public static JobExecutionResult execute(Program pa, String... args) throws Exception {_		return execute(pa.getPlan(args))__	};executes,the,given,program,param,pa,the,program,param,args,the,parameters,return,the,execution,result,of,the,program,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,static,job,execution,result,execute,program,pa,string,args,throws,exception,return,execute,pa,get,plan,args
LocalExecutor -> public static JobExecutionResult execute(Program pa, String... args) throws Exception;1443682842;Executes the given program.__@param pa The program._@param args The parameters._@return The execution result of the program.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public static JobExecutionResult execute(Program pa, String... args) throws Exception {_		return execute(pa.getPlan(args))__	};executes,the,given,program,param,pa,the,program,param,args,the,parameters,return,the,execution,result,of,the,program,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,static,job,execution,result,execute,program,pa,string,args,throws,exception,return,execute,pa,get,plan,args
LocalExecutor -> public static JobExecutionResult execute(Program pa, String... args) throws Exception;1460563153;Executes the given program.__@param pa The program._@param args The parameters._@return The execution result of the program.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public static JobExecutionResult execute(Program pa, String... args) throws Exception {_		return execute(pa.getPlan(args))__	};executes,the,given,program,param,pa,the,program,param,args,the,parameters,return,the,execution,result,of,the,program,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,static,job,execution,result,execute,program,pa,string,args,throws,exception,return,execute,pa,get,plan,args
LocalExecutor -> public static JobExecutionResult execute(Program pa, String... args) throws Exception;1477989375;Executes the given program.__@param pa The program._@param args The parameters._@return The execution result of the program.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public static JobExecutionResult execute(Program pa, String... args) throws Exception {_		return execute(pa.getPlan(args))__	};executes,the,given,program,param,pa,the,program,param,args,the,parameters,return,the,execution,result,of,the,program,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,static,job,execution,result,execute,program,pa,string,args,throws,exception,return,execute,pa,get,plan,args
LocalExecutor -> public static JobExecutionResult execute(Program pa, String... args) throws Exception;1492269386;Executes the given program.__@param pa The program._@param args The parameters._@return The execution result of the program.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public static JobExecutionResult execute(Program pa, String... args) throws Exception {_		return execute(pa.getPlan(args))__	};executes,the,given,program,param,pa,the,program,param,args,the,parameters,return,the,execution,result,of,the,program,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,static,job,execution,result,execute,program,pa,string,args,throws,exception,return,execute,pa,get,plan,args
LocalExecutor -> public static JobExecutionResult execute(Program pa, String... args) throws Exception;1495778594;Executes the given program.__@param pa The program._@param args The parameters._@return The execution result of the program.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public static JobExecutionResult execute(Program pa, String... args) throws Exception {_		return execute(pa.getPlan(args))__	};executes,the,given,program,param,pa,the,program,param,args,the,parameters,return,the,execution,result,of,the,program,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,static,job,execution,result,execute,program,pa,string,args,throws,exception,return,execute,pa,get,plan,args
LocalExecutor -> public static JobExecutionResult execute(Program pa, String... args) throws Exception;1499075301;Executes the given program.__@param pa The program._@param args The parameters._@return The execution result of the program.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public static JobExecutionResult execute(Program pa, String... args) throws Exception {_		return execute(pa.getPlan(args))__	};executes,the,given,program,param,pa,the,program,param,args,the,parameters,return,the,execution,result,of,the,program,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,static,job,execution,result,execute,program,pa,string,args,throws,exception,return,execute,pa,get,plan,args
LocalExecutor -> public static JobExecutionResult execute(Program pa, String... args) throws Exception;1518605788;Executes the given program.__@param pa The program._@param args The parameters._@return The execution result of the program.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public static JobExecutionResult execute(Program pa, String... args) throws Exception {_		return execute(pa.getPlan(args))__	};executes,the,given,program,param,pa,the,program,param,args,the,parameters,return,the,execution,result,of,the,program,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,static,job,execution,result,execute,program,pa,string,args,throws,exception,return,execute,pa,get,plan,args
LocalExecutor -> public static JobExecutionResult execute(Program pa, String... args) throws Exception;1519121818;Executes the given program.__@param pa The program._@param args The parameters._@return The execution result of the program.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public static JobExecutionResult execute(Program pa, String... args) throws Exception {_		return execute(pa.getPlan(args))__	};executes,the,given,program,param,pa,the,program,param,args,the,parameters,return,the,execution,result,of,the,program,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,static,job,execution,result,execute,program,pa,string,args,throws,exception,return,execute,pa,get,plan,args
LocalExecutor -> public static JobExecutionResult execute(Program pa, String... args) throws Exception;1519249745;Executes the given program.__@param pa The program._@param args The parameters._@return The execution result of the program.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public static JobExecutionResult execute(Program pa, String... args) throws Exception {_		return execute(pa.getPlan(args))__	};executes,the,given,program,param,pa,the,program,param,args,the,parameters,return,the,execution,result,of,the,program,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,static,job,execution,result,execute,program,pa,string,args,throws,exception,return,execute,pa,get,plan,args
LocalExecutor -> public static JobExecutionResult execute(Program pa, String... args) throws Exception;1522681180;Executes the given program.__@param pa The program._@param args The parameters._@return The execution result of the program.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public static JobExecutionResult execute(Program pa, String... args) throws Exception {_		return execute(pa.getPlan(args))__	};executes,the,given,program,param,pa,the,program,param,args,the,parameters,return,the,execution,result,of,the,program,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,static,job,execution,result,execute,program,pa,string,args,throws,exception,return,execute,pa,get,plan,args
LocalExecutor -> public static JobExecutionResult execute(Program pa, String... args) throws Exception;1524085355;Executes the given program.__@param pa The program._@param args The parameters._@return The execution result of the program.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public static JobExecutionResult execute(Program pa, String... args) throws Exception {_		return execute(pa.getPlan(args))__	};executes,the,given,program,param,pa,the,program,param,args,the,parameters,return,the,execution,result,of,the,program,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,static,job,execution,result,execute,program,pa,string,args,throws,exception,return,execute,pa,get,plan,args
LocalExecutor -> public static JobExecutionResult execute(Program pa, String... args) throws Exception;1524124694;Executes the given program.__@param pa The program._@param args The parameters._@return The execution result of the program.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public static JobExecutionResult execute(Program pa, String... args) throws Exception {_		return execute(pa.getPlan(args))__	};executes,the,given,program,param,pa,the,program,param,args,the,parameters,return,the,execution,result,of,the,program,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,static,job,execution,result,execute,program,pa,string,args,throws,exception,return,execute,pa,get,plan,args
LocalExecutor -> public static JobExecutionResult execute(Program pa, String... args) throws Exception;1524570317;Executes the given program.__@param pa The program._@param args The parameters._@return The execution result of the program.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public static JobExecutionResult execute(Program pa, String... args) throws Exception {_		return execute(pa.getPlan(args))__	};executes,the,given,program,param,pa,the,program,param,args,the,parameters,return,the,execution,result,of,the,program,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,static,job,execution,result,execute,program,pa,string,args,throws,exception,return,execute,pa,get,plan,args
LocalExecutor -> public static JobExecutionResult execute(Program pa, String... args) throws Exception;1529682304;Executes the given program.__@param pa The program._@param args The parameters._@return The execution result of the program.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public static JobExecutionResult execute(Program pa, String... args) throws Exception {_		return execute(pa.getPlan(args))__	};executes,the,given,program,param,pa,the,program,param,args,the,parameters,return,the,execution,result,of,the,program,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,static,job,execution,result,execute,program,pa,string,args,throws,exception,return,execute,pa,get,plan,args
LocalExecutor -> public static JobExecutionResult execute(Program pa, String... args) throws Exception;1538135826;Executes the given program.__@param pa The program._@param args The parameters._@return The execution result of the program.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public static JobExecutionResult execute(Program pa, String... args) throws Exception {_		return execute(pa.getPlan(args))__	};executes,the,given,program,param,pa,the,program,param,args,the,parameters,return,the,execution,result,of,the,program,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,static,job,execution,result,execute,program,pa,string,args,throws,exception,return,execute,pa,get,plan,args
LocalExecutor -> public static JobExecutionResult execute(Program pa, String... args) throws Exception;1549360057;Executes the given program.__@param pa The program._@param args The parameters._@return The execution result of the program.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public static JobExecutionResult execute(Program pa, String... args) throws Exception {_		return execute(pa.getPlan(args))__	};executes,the,given,program,param,pa,the,program,param,args,the,parameters,return,the,execution,result,of,the,program,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,static,job,execution,result,execute,program,pa,string,args,throws,exception,return,execute,pa,get,plan,args
LocalExecutor -> public static JobExecutionResult execute(Program pa, String... args) throws Exception;1550222817;Executes the given program.__@param pa The program._@param args The parameters._@return The execution result of the program.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public static JobExecutionResult execute(Program pa, String... args) throws Exception {_		return execute(pa.getPlan(args))__	};executes,the,given,program,param,pa,the,program,param,args,the,parameters,return,the,execution,result,of,the,program,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,static,job,execution,result,execute,program,pa,string,args,throws,exception,return,execute,pa,get,plan,args
LocalExecutor -> public JobExecutionResult executePlan(Plan plan) throws Exception;1405024514;Execute the given plan on the local Nephele instance, wait for the job to_finish and return the runtime in milliseconds.__@param plan The plan of the program to execute._@return The net runtime of the program, in milliseconds.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public JobExecutionResult executePlan(Plan plan) throws Exception {_		if (plan == null) {_			throw new IllegalArgumentException("The plan may not be null.")__		}_		_		ContextChecker checker = new ContextChecker()__		checker.check(plan)__		_		synchronized (this.lock) {_			_			_			final boolean shutDownAtEnd__			if (this.nephele == null) {_				_				shutDownAtEnd = true__				_				_				if (this.taskManagerNumSlots == DEFAULT_TASK_MANAGER_NUM_SLOTS) {_					int maxParallelism = plan.getMaximumParallelism()__					if (maxParallelism > 0) {_						this.taskManagerNumSlots = maxParallelism__					}_				}_				_				start()__			} else {_				_				shutDownAtEnd = false__			}__			try {_				PactCompiler pc = new PactCompiler(new DataStatistics())__				OptimizedPlan op = pc.compile(plan)__				_				NepheleJobGraphGenerator jgg = new NepheleJobGraphGenerator()__				JobGraph jobGraph = jgg.compileJobGraph(op)__				_				JobClient jobClient = this.nephele.getJobClient(jobGraph)__				JobExecutionResult result = jobClient.submitJobAndWait()__				return result__			}_			finally {_				if (shutDownAtEnd) {_					stop()__				}_			}_		}_	};execute,the,given,plan,on,the,local,nephele,instance,wait,for,the,job,to,finish,and,return,the,runtime,in,milliseconds,param,plan,the,plan,of,the,program,to,execute,return,the,net,runtime,of,the,program,in,milliseconds,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,job,execution,result,execute,plan,plan,plan,throws,exception,if,plan,null,throw,new,illegal,argument,exception,the,plan,may,not,be,null,context,checker,checker,new,context,checker,checker,check,plan,synchronized,this,lock,final,boolean,shut,down,at,end,if,this,nephele,null,shut,down,at,end,true,if,this,task,manager,num,slots,int,max,parallelism,plan,get,maximum,parallelism,if,max,parallelism,0,this,task,manager,num,slots,max,parallelism,start,else,shut,down,at,end,false,try,pact,compiler,pc,new,pact,compiler,new,data,statistics,optimized,plan,op,pc,compile,plan,nephele,job,graph,generator,jgg,new,nephele,job,graph,generator,job,graph,job,graph,jgg,compile,job,graph,op,job,client,job,client,this,nephele,get,job,client,job,graph,job,execution,result,result,job,client,submit,job,and,wait,return,result,finally,if,shut,down,at,end,stop
LocalExecutor -> public JobExecutionResult executePlan(Plan plan) throws Exception;1405090423;Execute the given plan on the local Nephele instance, wait for the job to_finish and return the runtime in milliseconds.__@param plan The plan of the program to execute._@return The net runtime of the program, in milliseconds.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public JobExecutionResult executePlan(Plan plan) throws Exception {_		if (plan == null) {_			throw new IllegalArgumentException("The plan may not be null.")__		}_		_		ContextChecker checker = new ContextChecker()__		checker.check(plan)__		_		synchronized (this.lock) {_			_			_			final boolean shutDownAtEnd__			if (this.nephele == null) {_				_				shutDownAtEnd = true__				_				_				if (this.taskManagerNumSlots == DEFAULT_TASK_MANAGER_NUM_SLOTS) {_					int maxParallelism = plan.getMaximumParallelism()__					if (maxParallelism > 0) {_						this.taskManagerNumSlots = maxParallelism__					}_				}_				_				start()__			} else {_				_				shutDownAtEnd = false__			}__			try {_				PactCompiler pc = new PactCompiler(new DataStatistics())__				OptimizedPlan op = pc.compile(plan)__				_				NepheleJobGraphGenerator jgg = new NepheleJobGraphGenerator()__				JobGraph jobGraph = jgg.compileJobGraph(op)__				_				JobClient jobClient = this.nephele.getJobClient(jobGraph)__				JobExecutionResult result = jobClient.submitJobAndWait()__				return result__			}_			finally {_				if (shutDownAtEnd) {_					stop()__				}_			}_		}_	};execute,the,given,plan,on,the,local,nephele,instance,wait,for,the,job,to,finish,and,return,the,runtime,in,milliseconds,param,plan,the,plan,of,the,program,to,execute,return,the,net,runtime,of,the,program,in,milliseconds,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,job,execution,result,execute,plan,plan,plan,throws,exception,if,plan,null,throw,new,illegal,argument,exception,the,plan,may,not,be,null,context,checker,checker,new,context,checker,checker,check,plan,synchronized,this,lock,final,boolean,shut,down,at,end,if,this,nephele,null,shut,down,at,end,true,if,this,task,manager,num,slots,int,max,parallelism,plan,get,maximum,parallelism,if,max,parallelism,0,this,task,manager,num,slots,max,parallelism,start,else,shut,down,at,end,false,try,pact,compiler,pc,new,pact,compiler,new,data,statistics,optimized,plan,op,pc,compile,plan,nephele,job,graph,generator,jgg,new,nephele,job,graph,generator,job,graph,job,graph,jgg,compile,job,graph,op,job,client,job,client,this,nephele,get,job,client,job,graph,job,execution,result,result,job,client,submit,job,and,wait,return,result,finally,if,shut,down,at,end,stop
LocalExecutor -> public JobExecutionResult executePlan(Plan plan) throws Exception;1409911022;Execute the given plan on the local Nephele instance, wait for the job to_finish and return the runtime in milliseconds.__@param plan The plan of the program to execute._@return The net runtime of the program, in milliseconds.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public JobExecutionResult executePlan(Plan plan) throws Exception {_		if (plan == null) {_			throw new IllegalArgumentException("The plan may not be null.")__		}_		_		ContextChecker checker = new ContextChecker()__		checker.check(plan)__		_		synchronized (this.lock) {_			_			_			final boolean shutDownAtEnd__			if (this.nephele == null) {_				_				shutDownAtEnd = true__				_				_				if (this.taskManagerNumSlots == DEFAULT_TASK_MANAGER_NUM_SLOTS) {_					int maxParallelism = plan.getMaximumParallelism()__					if (maxParallelism > 0) {_						this.taskManagerNumSlots = maxParallelism__					}_				}_				_				start()__			} else {_				_				shutDownAtEnd = false__			}__			try {_				PactCompiler pc = new PactCompiler(new DataStatistics())__				OptimizedPlan op = pc.compile(plan)__				_				NepheleJobGraphGenerator jgg = new NepheleJobGraphGenerator()__				JobGraph jobGraph = jgg.compileJobGraph(op)__				_				JobClient jobClient = this.nephele.getJobClient(jobGraph)__				JobExecutionResult result = jobClient.submitJobAndWait()__				return result__			}_			finally {_				if (shutDownAtEnd) {_					stop()__				}_			}_		}_	};execute,the,given,plan,on,the,local,nephele,instance,wait,for,the,job,to,finish,and,return,the,runtime,in,milliseconds,param,plan,the,plan,of,the,program,to,execute,return,the,net,runtime,of,the,program,in,milliseconds,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,job,execution,result,execute,plan,plan,plan,throws,exception,if,plan,null,throw,new,illegal,argument,exception,the,plan,may,not,be,null,context,checker,checker,new,context,checker,checker,check,plan,synchronized,this,lock,final,boolean,shut,down,at,end,if,this,nephele,null,shut,down,at,end,true,if,this,task,manager,num,slots,int,max,parallelism,plan,get,maximum,parallelism,if,max,parallelism,0,this,task,manager,num,slots,max,parallelism,start,else,shut,down,at,end,false,try,pact,compiler,pc,new,pact,compiler,new,data,statistics,optimized,plan,op,pc,compile,plan,nephele,job,graph,generator,jgg,new,nephele,job,graph,generator,job,graph,job,graph,jgg,compile,job,graph,op,job,client,job,client,this,nephele,get,job,client,job,graph,job,execution,result,result,job,client,submit,job,and,wait,return,result,finally,if,shut,down,at,end,stop
LocalExecutor -> public JobExecutionResult executePlan(Plan plan) throws Exception;1411473593;Execute the given plan on the local Nephele instance, wait for the job to_finish and return the runtime in milliseconds.__@param plan The plan of the program to execute._@return The net runtime of the program, in milliseconds.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public JobExecutionResult executePlan(Plan plan) throws Exception {_		if (plan == null) {_			throw new IllegalArgumentException("The plan may not be null.")__		}_		_		ContextChecker checker = new ContextChecker()__		checker.check(plan)__		_		synchronized (this.lock) {_			_			_			final boolean shutDownAtEnd__			if (this.nephele == null) {_				_				shutDownAtEnd = true__				_				_				if (this.taskManagerNumSlots == DEFAULT_TASK_MANAGER_NUM_SLOTS) {_					int maxParallelism = plan.getMaximumParallelism()__					if (maxParallelism > 0) {_						this.taskManagerNumSlots = maxParallelism__					}_				}_				_				start()__			} else {_				_				shutDownAtEnd = false__			}__			try {_				PactCompiler pc = new PactCompiler(new DataStatistics())__				OptimizedPlan op = pc.compile(plan)__				_				NepheleJobGraphGenerator jgg = new NepheleJobGraphGenerator()__				JobGraph jobGraph = jgg.compileJobGraph(op)__				_				JobClient jobClient = this.nephele.getJobClient(jobGraph)__				JobExecutionResult result = jobClient.submitJobAndWait()__				return result__			}_			finally {_				if (shutDownAtEnd) {_					stop()__				}_			}_		}_	};execute,the,given,plan,on,the,local,nephele,instance,wait,for,the,job,to,finish,and,return,the,runtime,in,milliseconds,param,plan,the,plan,of,the,program,to,execute,return,the,net,runtime,of,the,program,in,milliseconds,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,job,execution,result,execute,plan,plan,plan,throws,exception,if,plan,null,throw,new,illegal,argument,exception,the,plan,may,not,be,null,context,checker,checker,new,context,checker,checker,check,plan,synchronized,this,lock,final,boolean,shut,down,at,end,if,this,nephele,null,shut,down,at,end,true,if,this,task,manager,num,slots,int,max,parallelism,plan,get,maximum,parallelism,if,max,parallelism,0,this,task,manager,num,slots,max,parallelism,start,else,shut,down,at,end,false,try,pact,compiler,pc,new,pact,compiler,new,data,statistics,optimized,plan,op,pc,compile,plan,nephele,job,graph,generator,jgg,new,nephele,job,graph,generator,job,graph,job,graph,jgg,compile,job,graph,op,job,client,job,client,this,nephele,get,job,client,job,graph,job,execution,result,result,job,client,submit,job,and,wait,return,result,finally,if,shut,down,at,end,stop
LocalExecutor -> public JobExecutionResult executePlan(Plan plan) throws Exception;1418925507;Execute the given plan on the local Nephele instance, wait for the job to_finish and return the runtime in milliseconds.__@param plan The plan of the program to execute._@return The net runtime of the program, in milliseconds.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public JobExecutionResult executePlan(Plan plan) throws Exception {_		if (plan == null) {_			throw new IllegalArgumentException("The plan may not be null.")__		}_		_		ContextChecker checker = new ContextChecker()__		checker.check(plan)__		_		synchronized (this.lock) {_			_			_			final boolean shutDownAtEnd__			if (this.nephele == null) {_				_				shutDownAtEnd = true__				_				_				if (this.taskManagerNumSlots == DEFAULT_TASK_MANAGER_NUM_SLOTS) {_					int maxParallelism = plan.getMaximumParallelism()__					if (maxParallelism > 0) {_						this.taskManagerNumSlots = maxParallelism__					}_				}_				_				start()__			} else {_				_				shutDownAtEnd = false__			}__			try {_				PactCompiler pc = new PactCompiler(new DataStatistics())__				OptimizedPlan op = pc.compile(plan)__				_				NepheleJobGraphGenerator jgg = new NepheleJobGraphGenerator()__				JobGraph jobGraph = jgg.compileJobGraph(op)__				_				JobClient jobClient = this.nephele.getJobClient(jobGraph)__				JobExecutionResult result = jobClient.submitJobAndWait()__				return result__			}_			finally {_				if (shutDownAtEnd) {_					stop()__				}_			}_		}_	};execute,the,given,plan,on,the,local,nephele,instance,wait,for,the,job,to,finish,and,return,the,runtime,in,milliseconds,param,plan,the,plan,of,the,program,to,execute,return,the,net,runtime,of,the,program,in,milliseconds,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,job,execution,result,execute,plan,plan,plan,throws,exception,if,plan,null,throw,new,illegal,argument,exception,the,plan,may,not,be,null,context,checker,checker,new,context,checker,checker,check,plan,synchronized,this,lock,final,boolean,shut,down,at,end,if,this,nephele,null,shut,down,at,end,true,if,this,task,manager,num,slots,int,max,parallelism,plan,get,maximum,parallelism,if,max,parallelism,0,this,task,manager,num,slots,max,parallelism,start,else,shut,down,at,end,false,try,pact,compiler,pc,new,pact,compiler,new,data,statistics,optimized,plan,op,pc,compile,plan,nephele,job,graph,generator,jgg,new,nephele,job,graph,generator,job,graph,job,graph,jgg,compile,job,graph,op,job,client,job,client,this,nephele,get,job,client,job,graph,job,execution,result,result,job,client,submit,job,and,wait,return,result,finally,if,shut,down,at,end,stop
LocalExecutor -> public JobExecutionResult executePlan(Plan plan) throws Exception;1418925507;Execute the given plan on the local Nephele instance, wait for the job to_finish and return the runtime in milliseconds.__@param plan The plan of the program to execute._@return The net runtime of the program, in milliseconds.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public JobExecutionResult executePlan(Plan plan) throws Exception {_		if (plan == null) {_			throw new IllegalArgumentException("The plan may not be null.")__		}_		_		ContextChecker checker = new ContextChecker()__		checker.check(plan)__		_		synchronized (this.lock) {_			_			_			final boolean shutDownAtEnd__			if (this.flink == null) {_				_				shutDownAtEnd = true__				_				_				if (this.taskManagerNumSlots == DEFAULT_TASK_MANAGER_NUM_SLOTS) {_					int maxParallelism = plan.getMaximumParallelism()__					if (maxParallelism > 0) {_						this.taskManagerNumSlots = maxParallelism__					}_				}_				_				start()__			} else {_				_				shutDownAtEnd = false__			}__			try {_				PactCompiler pc = new PactCompiler(new DataStatistics())__				OptimizedPlan op = pc.compile(plan)__				_				NepheleJobGraphGenerator jgg = new NepheleJobGraphGenerator()__				JobGraph jobGraph = jgg.compileJobGraph(op)__				_				JobClient jobClient = this.flink.getJobClient(jobGraph)__				JobExecutionResult result = jobClient.submitJobAndWait()__				return result__			}_			finally {_				if (shutDownAtEnd) {_					stop()__				}_			}_		}_	};execute,the,given,plan,on,the,local,nephele,instance,wait,for,the,job,to,finish,and,return,the,runtime,in,milliseconds,param,plan,the,plan,of,the,program,to,execute,return,the,net,runtime,of,the,program,in,milliseconds,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,job,execution,result,execute,plan,plan,plan,throws,exception,if,plan,null,throw,new,illegal,argument,exception,the,plan,may,not,be,null,context,checker,checker,new,context,checker,checker,check,plan,synchronized,this,lock,final,boolean,shut,down,at,end,if,this,flink,null,shut,down,at,end,true,if,this,task,manager,num,slots,int,max,parallelism,plan,get,maximum,parallelism,if,max,parallelism,0,this,task,manager,num,slots,max,parallelism,start,else,shut,down,at,end,false,try,pact,compiler,pc,new,pact,compiler,new,data,statistics,optimized,plan,op,pc,compile,plan,nephele,job,graph,generator,jgg,new,nephele,job,graph,generator,job,graph,job,graph,jgg,compile,job,graph,op,job,client,job,client,this,flink,get,job,client,job,graph,job,execution,result,result,job,client,submit,job,and,wait,return,result,finally,if,shut,down,at,end,stop
LocalExecutor -> public JobExecutionResult executePlan(Plan plan) throws Exception;1418925508;Execute the given plan on the local Nephele instance, wait for the job to_finish and return the runtime in milliseconds.__@param plan The plan of the program to execute._@return The net runtime of the program, in milliseconds.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public JobExecutionResult executePlan(Plan plan) throws Exception {_		if (plan == null) {_			throw new IllegalArgumentException("The plan may not be null.")__		}_		_		ContextChecker checker = new ContextChecker()__		checker.check(plan)__		_		synchronized (this.lock) {_			_			_			final boolean shutDownAtEnd__			if (this.flink == null) {_				_				shutDownAtEnd = true__				_				_				if (this.taskManagerNumSlots == DEFAULT_TASK_MANAGER_NUM_SLOTS) {_					int maxParallelism = plan.getMaximumParallelism()__					if (maxParallelism > 0) {_						this.taskManagerNumSlots = maxParallelism__					}_				}_				_				start()__			} else {_				_				shutDownAtEnd = false__			}__			try {_				PactCompiler pc = new PactCompiler(new DataStatistics())__				OptimizedPlan op = pc.compile(plan)__				_				NepheleJobGraphGenerator jgg = new NepheleJobGraphGenerator()__				JobGraph jobGraph = jgg.compileJobGraph(op)__				_				JobClient jobClient = this.flink.getJobClient(jobGraph)__				JobExecutionResult result = jobClient.submitJobAndWait()__				return result__			}_			finally {_				if (shutDownAtEnd) {_					stop()__				}_			}_		}_	};execute,the,given,plan,on,the,local,nephele,instance,wait,for,the,job,to,finish,and,return,the,runtime,in,milliseconds,param,plan,the,plan,of,the,program,to,execute,return,the,net,runtime,of,the,program,in,milliseconds,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,job,execution,result,execute,plan,plan,plan,throws,exception,if,plan,null,throw,new,illegal,argument,exception,the,plan,may,not,be,null,context,checker,checker,new,context,checker,checker,check,plan,synchronized,this,lock,final,boolean,shut,down,at,end,if,this,flink,null,shut,down,at,end,true,if,this,task,manager,num,slots,int,max,parallelism,plan,get,maximum,parallelism,if,max,parallelism,0,this,task,manager,num,slots,max,parallelism,start,else,shut,down,at,end,false,try,pact,compiler,pc,new,pact,compiler,new,data,statistics,optimized,plan,op,pc,compile,plan,nephele,job,graph,generator,jgg,new,nephele,job,graph,generator,job,graph,job,graph,jgg,compile,job,graph,op,job,client,job,client,this,flink,get,job,client,job,graph,job,execution,result,result,job,client,submit,job,and,wait,return,result,finally,if,shut,down,at,end,stop
LocalExecutor -> public JobExecutionResult executePlan(Plan plan) throws Exception;1418925508;Execute the given plan on the local Nephele instance, wait for the job to_finish and return the runtime in milliseconds.__@param plan The plan of the program to execute._@return The net runtime of the program, in milliseconds.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public JobExecutionResult executePlan(Plan plan) throws Exception {_		if (plan == null) {_			throw new IllegalArgumentException("The plan may not be null.")__		}_		_		ContextChecker checker = new ContextChecker()__		checker.check(plan)__		_		synchronized (this.lock) {_			_			_			final boolean shutDownAtEnd__			if (this.flink == null) {_				_				shutDownAtEnd = true__				_				_				if (this.taskManagerNumSlots == DEFAULT_TASK_MANAGER_NUM_SLOTS) {_					int maxParallelism = plan.getMaximumParallelism()__					if (maxParallelism > 0) {_						this.taskManagerNumSlots = maxParallelism__					}_				}_				_				start()__			} else {_				_				shutDownAtEnd = false__			}__			try {_				PactCompiler pc = new PactCompiler(new DataStatistics())__				OptimizedPlan op = pc.compile(plan)__				_				NepheleJobGraphGenerator jgg = new NepheleJobGraphGenerator()__				JobGraph jobGraph = jgg.compileJobGraph(op)___				ActorRef jobClient = flink.getJobClient()___				return JobClient.submitJobAndWait(jobGraph, true, jobClient)__			}_			finally {_				if (shutDownAtEnd) {_					stop()__				}_			}_		}_	};execute,the,given,plan,on,the,local,nephele,instance,wait,for,the,job,to,finish,and,return,the,runtime,in,milliseconds,param,plan,the,plan,of,the,program,to,execute,return,the,net,runtime,of,the,program,in,milliseconds,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,job,execution,result,execute,plan,plan,plan,throws,exception,if,plan,null,throw,new,illegal,argument,exception,the,plan,may,not,be,null,context,checker,checker,new,context,checker,checker,check,plan,synchronized,this,lock,final,boolean,shut,down,at,end,if,this,flink,null,shut,down,at,end,true,if,this,task,manager,num,slots,int,max,parallelism,plan,get,maximum,parallelism,if,max,parallelism,0,this,task,manager,num,slots,max,parallelism,start,else,shut,down,at,end,false,try,pact,compiler,pc,new,pact,compiler,new,data,statistics,optimized,plan,op,pc,compile,plan,nephele,job,graph,generator,jgg,new,nephele,job,graph,generator,job,graph,job,graph,jgg,compile,job,graph,op,actor,ref,job,client,flink,get,job,client,return,job,client,submit,job,and,wait,job,graph,true,job,client,finally,if,shut,down,at,end,stop
LocalExecutor -> public JobExecutionResult executePlan(Plan plan) throws Exception;1418925510;Execute the given plan on the local Nephele instance, wait for the job to_finish and return the runtime in milliseconds.__@param plan The plan of the program to execute._@return The net runtime of the program, in milliseconds.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public JobExecutionResult executePlan(Plan plan) throws Exception {_		if (plan == null) {_			throw new IllegalArgumentException("The plan may not be null.")__		}_		_		ContextChecker checker = new ContextChecker()__		checker.check(plan)__		_		synchronized (this.lock) {_			_			_			final boolean shutDownAtEnd__			if (this.flink == null) {_				_				shutDownAtEnd = true__				_				_				if (this.taskManagerNumSlots == DEFAULT_TASK_MANAGER_NUM_SLOTS) {_					int maxParallelism = plan.getMaximumParallelism()__					if (maxParallelism > 0) {_						this.taskManagerNumSlots = maxParallelism__					}_				}_				_				start()__			} else {_				_				shutDownAtEnd = false__			}__			try {_				PactCompiler pc = new PactCompiler(new DataStatistics())__				OptimizedPlan op = pc.compile(plan)__				_				NepheleJobGraphGenerator jgg = new NepheleJobGraphGenerator()__				JobGraph jobGraph = jgg.compileJobGraph(op)___				ActorRef jobClient = flink.getJobClient()___				return JobClient.submitJobAndWait(jobGraph, true, jobClient)__			}_			finally {_				if (shutDownAtEnd) {_					stop()__				}_			}_		}_	};execute,the,given,plan,on,the,local,nephele,instance,wait,for,the,job,to,finish,and,return,the,runtime,in,milliseconds,param,plan,the,plan,of,the,program,to,execute,return,the,net,runtime,of,the,program,in,milliseconds,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,job,execution,result,execute,plan,plan,plan,throws,exception,if,plan,null,throw,new,illegal,argument,exception,the,plan,may,not,be,null,context,checker,checker,new,context,checker,checker,check,plan,synchronized,this,lock,final,boolean,shut,down,at,end,if,this,flink,null,shut,down,at,end,true,if,this,task,manager,num,slots,int,max,parallelism,plan,get,maximum,parallelism,if,max,parallelism,0,this,task,manager,num,slots,max,parallelism,start,else,shut,down,at,end,false,try,pact,compiler,pc,new,pact,compiler,new,data,statistics,optimized,plan,op,pc,compile,plan,nephele,job,graph,generator,jgg,new,nephele,job,graph,generator,job,graph,job,graph,jgg,compile,job,graph,op,actor,ref,job,client,flink,get,job,client,return,job,client,submit,job,and,wait,job,graph,true,job,client,finally,if,shut,down,at,end,stop
LocalExecutor -> public JobExecutionResult executePlan(Plan plan) throws Exception;1418925511;Execute the given plan on the local Nephele instance, wait for the job to_finish and return the runtime in milliseconds.__@param plan The plan of the program to execute._@return The net runtime of the program, in milliseconds.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public JobExecutionResult executePlan(Plan plan) throws Exception {_		if (plan == null) {_			throw new IllegalArgumentException("The plan may not be null.")__		}_		_		ContextChecker checker = new ContextChecker()__		checker.check(plan)__		_		synchronized (this.lock) {_			_			_			final boolean shutDownAtEnd__			if (this.flink == null) {_				_				shutDownAtEnd = true__				_				_				if (this.taskManagerNumSlots == DEFAULT_TASK_MANAGER_NUM_SLOTS) {_					int maxParallelism = plan.getMaximumParallelism()__					if (maxParallelism > 0) {_						this.taskManagerNumSlots = maxParallelism__					}_				}_				_				start()__			} else {_				_				shutDownAtEnd = false__			}__			try {_				PactCompiler pc = new PactCompiler(new DataStatistics())__				OptimizedPlan op = pc.compile(plan)__				_				NepheleJobGraphGenerator jgg = new NepheleJobGraphGenerator()__				JobGraph jobGraph = jgg.compileJobGraph(op)___				ActorRef jobClient = flink.getJobClient()___				return JobClient.submitJobAndWait(jobGraph, printStatusDuringExecution, jobClient)__			}_			finally {_				if (shutDownAtEnd) {_					stop()__				}_			}_		}_	};execute,the,given,plan,on,the,local,nephele,instance,wait,for,the,job,to,finish,and,return,the,runtime,in,milliseconds,param,plan,the,plan,of,the,program,to,execute,return,the,net,runtime,of,the,program,in,milliseconds,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,job,execution,result,execute,plan,plan,plan,throws,exception,if,plan,null,throw,new,illegal,argument,exception,the,plan,may,not,be,null,context,checker,checker,new,context,checker,checker,check,plan,synchronized,this,lock,final,boolean,shut,down,at,end,if,this,flink,null,shut,down,at,end,true,if,this,task,manager,num,slots,int,max,parallelism,plan,get,maximum,parallelism,if,max,parallelism,0,this,task,manager,num,slots,max,parallelism,start,else,shut,down,at,end,false,try,pact,compiler,pc,new,pact,compiler,new,data,statistics,optimized,plan,op,pc,compile,plan,nephele,job,graph,generator,jgg,new,nephele,job,graph,generator,job,graph,job,graph,jgg,compile,job,graph,op,actor,ref,job,client,flink,get,job,client,return,job,client,submit,job,and,wait,job,graph,print,status,during,execution,job,client,finally,if,shut,down,at,end,stop
LocalExecutor -> public JobExecutionResult executePlan(Plan plan) throws Exception;1418925512;Execute the given plan on the local Nephele instance, wait for the job to_finish and return the runtime in milliseconds.__@param plan The plan of the program to execute._@return The net runtime of the program, in milliseconds.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public JobExecutionResult executePlan(Plan plan) throws Exception {_		if (plan == null) {_			throw new IllegalArgumentException("The plan may not be null.")__		}_		_		ContextChecker checker = new ContextChecker()__		checker.check(plan)__		_		synchronized (this.lock) {_			_			_			final boolean shutDownAtEnd__			if (this.flink == null) {_				_				shutDownAtEnd = true__				_				_				if (this.taskManagerNumSlots == DEFAULT_TASK_MANAGER_NUM_SLOTS) {_					int maxParallelism = plan.getMaximumParallelism()__					if (maxParallelism > 0) {_						this.taskManagerNumSlots = maxParallelism__					}_				}_				_				start()__			} else {_				_				shutDownAtEnd = false__			}__			try {_				PactCompiler pc = new PactCompiler(new DataStatistics())__				OptimizedPlan op = pc.compile(plan)__				_				NepheleJobGraphGenerator jgg = new NepheleJobGraphGenerator()__				JobGraph jobGraph = jgg.compileJobGraph(op)___				ActorRef jobClient = flink.getJobClient()___				return JobClient.submitJobAndWait(jobGraph, printStatusDuringExecution, jobClient)__			}_			finally {_				if (shutDownAtEnd) {_					stop()__				}_			}_		}_	};execute,the,given,plan,on,the,local,nephele,instance,wait,for,the,job,to,finish,and,return,the,runtime,in,milliseconds,param,plan,the,plan,of,the,program,to,execute,return,the,net,runtime,of,the,program,in,milliseconds,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,job,execution,result,execute,plan,plan,plan,throws,exception,if,plan,null,throw,new,illegal,argument,exception,the,plan,may,not,be,null,context,checker,checker,new,context,checker,checker,check,plan,synchronized,this,lock,final,boolean,shut,down,at,end,if,this,flink,null,shut,down,at,end,true,if,this,task,manager,num,slots,int,max,parallelism,plan,get,maximum,parallelism,if,max,parallelism,0,this,task,manager,num,slots,max,parallelism,start,else,shut,down,at,end,false,try,pact,compiler,pc,new,pact,compiler,new,data,statistics,optimized,plan,op,pc,compile,plan,nephele,job,graph,generator,jgg,new,nephele,job,graph,generator,job,graph,job,graph,jgg,compile,job,graph,op,actor,ref,job,client,flink,get,job,client,return,job,client,submit,job,and,wait,job,graph,print,status,during,execution,job,client,finally,if,shut,down,at,end,stop
LocalExecutor -> public JobExecutionResult executePlan(Plan plan) throws Exception;1418925513;Execute the given plan on the local Nephele instance, wait for the job to_finish and return the runtime in milliseconds.__@param plan The plan of the program to execute._@return The net runtime of the program, in milliseconds.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public JobExecutionResult executePlan(Plan plan) throws Exception {_		if (plan == null) {_			throw new IllegalArgumentException("The plan may not be null.")__		}_		_		ContextChecker checker = new ContextChecker()__		checker.check(plan)__		_		synchronized (this.lock) {_			_			_			final boolean shutDownAtEnd__			if (this.flink == null) {_				_				shutDownAtEnd = true__				_				_				if (this.taskManagerNumSlots == DEFAULT_TASK_MANAGER_NUM_SLOTS) {_					int maxParallelism = plan.getMaximumParallelism()__					if (maxParallelism > 0) {_						this.taskManagerNumSlots = maxParallelism__					}_				}_				_				start()__			} else {_				_				shutDownAtEnd = false__			}__			try {_				PactCompiler pc = new PactCompiler(new DataStatistics())__				OptimizedPlan op = pc.compile(plan)__				_				NepheleJobGraphGenerator jgg = new NepheleJobGraphGenerator()__				JobGraph jobGraph = jgg.compileJobGraph(op)___				ActorRef jobClient = flink.getJobClient()___				return JobClient.submitJobAndWait(jobGraph, printStatusDuringExecution,_						jobClient, flink.timeout())__			}_			finally {_				if (shutDownAtEnd) {_					stop()__				}_			}_		}_	};execute,the,given,plan,on,the,local,nephele,instance,wait,for,the,job,to,finish,and,return,the,runtime,in,milliseconds,param,plan,the,plan,of,the,program,to,execute,return,the,net,runtime,of,the,program,in,milliseconds,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,job,execution,result,execute,plan,plan,plan,throws,exception,if,plan,null,throw,new,illegal,argument,exception,the,plan,may,not,be,null,context,checker,checker,new,context,checker,checker,check,plan,synchronized,this,lock,final,boolean,shut,down,at,end,if,this,flink,null,shut,down,at,end,true,if,this,task,manager,num,slots,int,max,parallelism,plan,get,maximum,parallelism,if,max,parallelism,0,this,task,manager,num,slots,max,parallelism,start,else,shut,down,at,end,false,try,pact,compiler,pc,new,pact,compiler,new,data,statistics,optimized,plan,op,pc,compile,plan,nephele,job,graph,generator,jgg,new,nephele,job,graph,generator,job,graph,job,graph,jgg,compile,job,graph,op,actor,ref,job,client,flink,get,job,client,return,job,client,submit,job,and,wait,job,graph,print,status,during,execution,job,client,flink,timeout,finally,if,shut,down,at,end,stop
LocalExecutor -> public JobExecutionResult executePlan(Plan plan) throws Exception;1426843273;Execute the given plan on the local Nephele instance, wait for the job to_finish and return the runtime in milliseconds.__@param plan The plan of the program to execute._@return The net runtime of the program, in milliseconds.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public JobExecutionResult executePlan(Plan plan) throws Exception {_		if (plan == null) {_			throw new IllegalArgumentException("The plan may not be null.")__		}_		_		ContextChecker checker = new ContextChecker()__		checker.check(plan)__		_		synchronized (this.lock) {_			_			_			final boolean shutDownAtEnd__			if (this.flink == null) {_				_				shutDownAtEnd = true__				_				_				if (this.taskManagerNumSlots == DEFAULT_TASK_MANAGER_NUM_SLOTS) {_					int maxParallelism = plan.getMaximumParallelism()__					if (maxParallelism > 0) {_						this.taskManagerNumSlots = maxParallelism__					}_				}_				_				start()__			} else {_				_				shutDownAtEnd = false__			}__			try {_				PactCompiler pc = new PactCompiler(new DataStatistics())__				OptimizedPlan op = pc.compile(plan)__				_				NepheleJobGraphGenerator jgg = new NepheleJobGraphGenerator()__				JobGraph jobGraph = jgg.compileJobGraph(op)___				ActorRef jobClient = flink.getJobClient()___				return JobClient.submitJobAndWait(jobGraph, printStatusDuringExecution,_						jobClient, flink.timeout())__			}_			finally {_				if (shutDownAtEnd) {_					stop()__				}_			}_		}_	};execute,the,given,plan,on,the,local,nephele,instance,wait,for,the,job,to,finish,and,return,the,runtime,in,milliseconds,param,plan,the,plan,of,the,program,to,execute,return,the,net,runtime,of,the,program,in,milliseconds,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,job,execution,result,execute,plan,plan,plan,throws,exception,if,plan,null,throw,new,illegal,argument,exception,the,plan,may,not,be,null,context,checker,checker,new,context,checker,checker,check,plan,synchronized,this,lock,final,boolean,shut,down,at,end,if,this,flink,null,shut,down,at,end,true,if,this,task,manager,num,slots,int,max,parallelism,plan,get,maximum,parallelism,if,max,parallelism,0,this,task,manager,num,slots,max,parallelism,start,else,shut,down,at,end,false,try,pact,compiler,pc,new,pact,compiler,new,data,statistics,optimized,plan,op,pc,compile,plan,nephele,job,graph,generator,jgg,new,nephele,job,graph,generator,job,graph,job,graph,jgg,compile,job,graph,op,actor,ref,job,client,flink,get,job,client,return,job,client,submit,job,and,wait,job,graph,print,status,during,execution,job,client,flink,timeout,finally,if,shut,down,at,end,stop
LocalExecutor -> public JobExecutionResult executePlan(Plan plan) throws Exception;1426843274;Execute the given plan on the local Nephele instance, wait for the job to_finish and return the runtime in milliseconds.__@param plan The plan of the program to execute._@return The net runtime of the program, in milliseconds.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public JobExecutionResult executePlan(Plan plan) throws Exception {_		if (plan == null) {_			throw new IllegalArgumentException("The plan may not be null.")__		}_		_		synchronized (this.lock) {_			_			_			final boolean shutDownAtEnd__			if (this.flink == null) {_				_				shutDownAtEnd = true__				_				_				if (this.taskManagerNumSlots == DEFAULT_TASK_MANAGER_NUM_SLOTS) {_					int maxParallelism = plan.getMaximumParallelism()__					if (maxParallelism > 0) {_						this.taskManagerNumSlots = maxParallelism__					}_				}_				_				start()__			} else {_				_				shutDownAtEnd = false__			}__			try {_				PactCompiler pc = new PactCompiler(new DataStatistics())__				OptimizedPlan op = pc.compile(plan)__				_				NepheleJobGraphGenerator jgg = new NepheleJobGraphGenerator()__				JobGraph jobGraph = jgg.compileJobGraph(op)___				ActorRef jobClient = flink.getJobClient()___				return JobClient.submitJobAndWait(jobGraph, printStatusDuringExecution,_						jobClient, flink.timeout())__			}_			finally {_				if (shutDownAtEnd) {_					stop()__				}_			}_		}_	};execute,the,given,plan,on,the,local,nephele,instance,wait,for,the,job,to,finish,and,return,the,runtime,in,milliseconds,param,plan,the,plan,of,the,program,to,execute,return,the,net,runtime,of,the,program,in,milliseconds,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,job,execution,result,execute,plan,plan,plan,throws,exception,if,plan,null,throw,new,illegal,argument,exception,the,plan,may,not,be,null,synchronized,this,lock,final,boolean,shut,down,at,end,if,this,flink,null,shut,down,at,end,true,if,this,task,manager,num,slots,int,max,parallelism,plan,get,maximum,parallelism,if,max,parallelism,0,this,task,manager,num,slots,max,parallelism,start,else,shut,down,at,end,false,try,pact,compiler,pc,new,pact,compiler,new,data,statistics,optimized,plan,op,pc,compile,plan,nephele,job,graph,generator,jgg,new,nephele,job,graph,generator,job,graph,job,graph,jgg,compile,job,graph,op,actor,ref,job,client,flink,get,job,client,return,job,client,submit,job,and,wait,job,graph,print,status,during,execution,job,client,flink,timeout,finally,if,shut,down,at,end,stop
LocalExecutor -> public JobExecutionResult executePlan(Plan plan) throws Exception;1426843274;Execute the given plan on the local Nephele instance, wait for the job to_finish and return the runtime in milliseconds.__@param plan The plan of the program to execute._@return The net runtime of the program, in milliseconds.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public JobExecutionResult executePlan(Plan plan) throws Exception {_		if (plan == null) {_			throw new IllegalArgumentException("The plan may not be null.")__		}_		_		synchronized (this.lock) {_			_			_			final boolean shutDownAtEnd__			if (this.flink == null) {_				_				shutDownAtEnd = true__				_				_				if (this.taskManagerNumSlots == DEFAULT_TASK_MANAGER_NUM_SLOTS) {_					int maxParallelism = plan.getMaximumParallelism()__					if (maxParallelism > 0) {_						this.taskManagerNumSlots = maxParallelism__					}_				}_				_				start()__			} else {_				_				shutDownAtEnd = false__			}__			try {_				Optimizer pc = new Optimizer(new DataStatistics())__				OptimizedPlan op = pc.compile(plan)__				_				JobGraphGenerator jgg = new JobGraphGenerator()__				JobGraph jobGraph = jgg.compileJobGraph(op)___				ActorRef jobClient = flink.getJobClient()___				return JobClient.submitJobAndWait(jobGraph, printStatusDuringExecution,_						jobClient, flink.timeout())__			}_			finally {_				if (shutDownAtEnd) {_					stop()__				}_			}_		}_	};execute,the,given,plan,on,the,local,nephele,instance,wait,for,the,job,to,finish,and,return,the,runtime,in,milliseconds,param,plan,the,plan,of,the,program,to,execute,return,the,net,runtime,of,the,program,in,milliseconds,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,job,execution,result,execute,plan,plan,plan,throws,exception,if,plan,null,throw,new,illegal,argument,exception,the,plan,may,not,be,null,synchronized,this,lock,final,boolean,shut,down,at,end,if,this,flink,null,shut,down,at,end,true,if,this,task,manager,num,slots,int,max,parallelism,plan,get,maximum,parallelism,if,max,parallelism,0,this,task,manager,num,slots,max,parallelism,start,else,shut,down,at,end,false,try,optimizer,pc,new,optimizer,new,data,statistics,optimized,plan,op,pc,compile,plan,job,graph,generator,jgg,new,job,graph,generator,job,graph,job,graph,jgg,compile,job,graph,op,actor,ref,job,client,flink,get,job,client,return,job,client,submit,job,and,wait,job,graph,print,status,during,execution,job,client,flink,timeout,finally,if,shut,down,at,end,stop
LocalExecutor -> public JobExecutionResult executePlan(Plan plan) throws Exception;1427784999;Execute the given plan on the local Nephele instance, wait for the job to_finish and return the runtime in milliseconds.__@param plan The plan of the program to execute._@return The net runtime of the program, in milliseconds.__@throws Exception Thrown, if either the startup of the local execution context, or the execution_caused an exception.;public JobExecutionResult executePlan(Plan plan) throws Exception {_		if (plan == null) {_			throw new IllegalArgumentException("The plan may not be null.")__		}_		_		synchronized (this.lock) {_			_			_			final boolean shutDownAtEnd__			if (this.flink == null) {_				_				shutDownAtEnd = true__				_				_				if (this.taskManagerNumSlots == DEFAULT_TASK_MANAGER_NUM_SLOTS) {_					int maxParallelism = plan.getMaximumParallelism()__					if (maxParallelism > 0) {_						this.taskManagerNumSlots = maxParallelism__					}_				}_				_				start()__			} else {_				_				shutDownAtEnd = false__			}__			try {_				Optimizer pc = new Optimizer(new DataStatistics(), this.flink.getConfiguration())__				OptimizedPlan op = pc.compile(plan)__				_				JobGraphGenerator jgg = new JobGraphGenerator()__				JobGraph jobGraph = jgg.compileJobGraph(op)___				ActorRef jobClient = flink.getJobClient()___				return JobClient.submitJobAndWait(jobGraph, printStatusDuringExecution,_						jobClient, flink.timeout())__			}_			finally {_				if (shutDownAtEnd) {_					stop()__				}_			}_		}_	};execute,the,given,plan,on,the,local,nephele,instance,wait,for,the,job,to,finish,and,return,the,runtime,in,milliseconds,param,plan,the,plan,of,the,program,to,execute,return,the,net,runtime,of,the,program,in,milliseconds,throws,exception,thrown,if,either,the,startup,of,the,local,execution,context,or,the,execution,caused,an,exception;public,job,execution,result,execute,plan,plan,plan,throws,exception,if,plan,null,throw,new,illegal,argument,exception,the,plan,may,not,be,null,synchronized,this,lock,final,boolean,shut,down,at,end,if,this,flink,null,shut,down,at,end,true,if,this,task,manager,num,slots,int,max,parallelism,plan,get,maximum,parallelism,if,max,parallelism,0,this,task,manager,num,slots,max,parallelism,start,else,shut,down,at,end,false,try,optimizer,pc,new,optimizer,new,data,statistics,this,flink,get,configuration,optimized,plan,op,pc,compile,plan,job,graph,generator,jgg,new,job,graph,generator,job,graph,job,graph,jgg,compile,job,graph,op,actor,ref,job,client,flink,get,job,client,return,job,client,submit,job,and,wait,job,graph,print,status,during,execution,job,client,flink,timeout,finally,if,shut,down,at,end,stop
LocalExecutor -> public void stop() throws Exception;1405024514;Stop the local executor instance. You should not call executePlan after this.;public void stop() throws Exception {_		synchronized (this.lock) {_			if (this.nephele != null) {_				this.nephele.stop()__				this.nephele = null__			} else {_				throw new IllegalStateException("The local executor was not started.")__			}_		}_	};stop,the,local,executor,instance,you,should,not,call,execute,plan,after,this;public,void,stop,throws,exception,synchronized,this,lock,if,this,nephele,null,this,nephele,stop,this,nephele,null,else,throw,new,illegal,state,exception,the,local,executor,was,not,started
LocalExecutor -> public void stop() throws Exception;1405090423;Stop the local executor instance. You should not call executePlan after this.;public void stop() throws Exception {_		synchronized (this.lock) {_			if (this.nephele != null) {_				this.nephele.stop()__				this.nephele = null__			} else {_				throw new IllegalStateException("The local executor was not started.")__			}_		}_	};stop,the,local,executor,instance,you,should,not,call,execute,plan,after,this;public,void,stop,throws,exception,synchronized,this,lock,if,this,nephele,null,this,nephele,stop,this,nephele,null,else,throw,new,illegal,state,exception,the,local,executor,was,not,started
LocalExecutor -> public void stop() throws Exception;1409911022;Stop the local executor instance. You should not call executePlan after this.;public void stop() throws Exception {_		synchronized (this.lock) {_			if (this.nephele != null) {_				this.nephele.stop()__				this.nephele = null__			} else {_				throw new IllegalStateException("The local executor was not started.")__			}_		}_	};stop,the,local,executor,instance,you,should,not,call,execute,plan,after,this;public,void,stop,throws,exception,synchronized,this,lock,if,this,nephele,null,this,nephele,stop,this,nephele,null,else,throw,new,illegal,state,exception,the,local,executor,was,not,started
LocalExecutor -> public void stop() throws Exception;1411473593;Stop the local executor instance. You should not call executePlan after this.;public void stop() throws Exception {_		synchronized (this.lock) {_			if (this.nephele != null) {_				this.nephele.stop()__				this.nephele = null__			} else {_				throw new IllegalStateException("The local executor was not started.")__			}_		}_	};stop,the,local,executor,instance,you,should,not,call,execute,plan,after,this;public,void,stop,throws,exception,synchronized,this,lock,if,this,nephele,null,this,nephele,stop,this,nephele,null,else,throw,new,illegal,state,exception,the,local,executor,was,not,started
LocalExecutor -> public void stop() throws Exception;1418925507;Stop the local executor instance. You should not call executePlan after this.;public void stop() throws Exception {_		synchronized (this.lock) {_			if (this.nephele != null) {_				this.nephele.stop()__				this.nephele = null__			} else {_				throw new IllegalStateException("The local executor was not started.")__			}_		}_	};stop,the,local,executor,instance,you,should,not,call,execute,plan,after,this;public,void,stop,throws,exception,synchronized,this,lock,if,this,nephele,null,this,nephele,stop,this,nephele,null,else,throw,new,illegal,state,exception,the,local,executor,was,not,started
LocalExecutor -> public void stop() throws Exception;1418925507;Stop the local executor instance. You should not call executePlan after this.;public void stop() throws Exception {_		synchronized (this.lock) {_			if (this.flink != null) {_				this.flink.stop()__				this.flink = null__			} else {_				throw new IllegalStateException("The local executor was not started.")__			}_		}_	};stop,the,local,executor,instance,you,should,not,call,execute,plan,after,this;public,void,stop,throws,exception,synchronized,this,lock,if,this,flink,null,this,flink,stop,this,flink,null,else,throw,new,illegal,state,exception,the,local,executor,was,not,started
LocalExecutor -> public void stop() throws Exception;1418925508;Stop the local executor instance. You should not call executePlan after this.;public void stop() throws Exception {_		synchronized (this.lock) {_			if (this.flink != null) {_				this.flink.stop()__				this.flink = null__			} else {_				throw new IllegalStateException("The local executor was not started.")__			}_		}_	};stop,the,local,executor,instance,you,should,not,call,execute,plan,after,this;public,void,stop,throws,exception,synchronized,this,lock,if,this,flink,null,this,flink,stop,this,flink,null,else,throw,new,illegal,state,exception,the,local,executor,was,not,started
LocalExecutor -> public void stop() throws Exception;1418925508;Stop the local executor instance. You should not call executePlan after this.;public void stop() throws Exception {_		synchronized (this.lock) {_			if (this.flink != null) {_				this.flink.stop()__				this.flink = null__			} else {_				throw new IllegalStateException("The local executor was not started.")__			}_		}_	};stop,the,local,executor,instance,you,should,not,call,execute,plan,after,this;public,void,stop,throws,exception,synchronized,this,lock,if,this,flink,null,this,flink,stop,this,flink,null,else,throw,new,illegal,state,exception,the,local,executor,was,not,started
LocalExecutor -> public void stop() throws Exception;1418925510;Stop the local executor instance. You should not call executePlan after this.;public void stop() throws Exception {_		synchronized (this.lock) {_			if (this.flink != null) {_				this.flink.stop()__				this.flink = null__			} else {_				throw new IllegalStateException("The local executor was not started.")__			}_		}_	};stop,the,local,executor,instance,you,should,not,call,execute,plan,after,this;public,void,stop,throws,exception,synchronized,this,lock,if,this,flink,null,this,flink,stop,this,flink,null,else,throw,new,illegal,state,exception,the,local,executor,was,not,started
LocalExecutor -> public void stop() throws Exception;1418925511;Stop the local executor instance. You should not call executePlan after this.;public void stop() throws Exception {_		synchronized (this.lock) {_			if (this.flink != null) {_				this.flink.stop()__				this.flink = null__			} else {_				throw new IllegalStateException("The local executor was not started.")__			}_		}_	};stop,the,local,executor,instance,you,should,not,call,execute,plan,after,this;public,void,stop,throws,exception,synchronized,this,lock,if,this,flink,null,this,flink,stop,this,flink,null,else,throw,new,illegal,state,exception,the,local,executor,was,not,started
LocalExecutor -> public void stop() throws Exception;1418925512;Stop the local executor instance. You should not call executePlan after this.;public void stop() throws Exception {_		synchronized (this.lock) {_			if (this.flink != null) {_				this.flink.stop()__				this.flink = null__			} else {_				throw new IllegalStateException("The local executor was not started.")__			}_		}_	};stop,the,local,executor,instance,you,should,not,call,execute,plan,after,this;public,void,stop,throws,exception,synchronized,this,lock,if,this,flink,null,this,flink,stop,this,flink,null,else,throw,new,illegal,state,exception,the,local,executor,was,not,started
LocalExecutor -> public void stop() throws Exception;1418925513;Stop the local executor instance. You should not call executePlan after this.;public void stop() throws Exception {_		synchronized (this.lock) {_			if (this.flink != null) {_				this.flink.stop()__				this.flink = null__			} else {_				throw new IllegalStateException("The local executor was not started.")__			}_		}_	};stop,the,local,executor,instance,you,should,not,call,execute,plan,after,this;public,void,stop,throws,exception,synchronized,this,lock,if,this,flink,null,this,flink,stop,this,flink,null,else,throw,new,illegal,state,exception,the,local,executor,was,not,started
LocalExecutor -> public void stop() throws Exception;1426843273;Stop the local executor instance. You should not call executePlan after this.;public void stop() throws Exception {_		synchronized (this.lock) {_			if (this.flink != null) {_				this.flink.stop()__				this.flink = null__			} else {_				throw new IllegalStateException("The local executor was not started.")__			}_		}_	};stop,the,local,executor,instance,you,should,not,call,execute,plan,after,this;public,void,stop,throws,exception,synchronized,this,lock,if,this,flink,null,this,flink,stop,this,flink,null,else,throw,new,illegal,state,exception,the,local,executor,was,not,started
LocalExecutor -> public void stop() throws Exception;1426843274;Stop the local executor instance. You should not call executePlan after this.;public void stop() throws Exception {_		synchronized (this.lock) {_			if (this.flink != null) {_				this.flink.stop()__				this.flink = null__			} else {_				throw new IllegalStateException("The local executor was not started.")__			}_		}_	};stop,the,local,executor,instance,you,should,not,call,execute,plan,after,this;public,void,stop,throws,exception,synchronized,this,lock,if,this,flink,null,this,flink,stop,this,flink,null,else,throw,new,illegal,state,exception,the,local,executor,was,not,started
LocalExecutor -> public void stop() throws Exception;1426843274;Stop the local executor instance. You should not call executePlan after this.;public void stop() throws Exception {_		synchronized (this.lock) {_			if (this.flink != null) {_				this.flink.stop()__				this.flink = null__			} else {_				throw new IllegalStateException("The local executor was not started.")__			}_		}_	};stop,the,local,executor,instance,you,should,not,call,execute,plan,after,this;public,void,stop,throws,exception,synchronized,this,lock,if,this,flink,null,this,flink,stop,this,flink,null,else,throw,new,illegal,state,exception,the,local,executor,was,not,started
LocalExecutor -> public void stop() throws Exception;1427784999;Stop the local executor instance. You should not call executePlan after this.;public void stop() throws Exception {_		synchronized (this.lock) {_			if (this.flink != null) {_				this.flink.stop()__				this.flink = null__			} else {_				throw new IllegalStateException("The local executor was not started.")__			}_		}_	};stop,the,local,executor,instance,you,should,not,call,execute,plan,after,this;public,void,stop,throws,exception,synchronized,this,lock,if,this,flink,null,this,flink,stop,this,flink,null,else,throw,new,illegal,state,exception,the,local,executor,was,not,started
LocalExecutor -> public void stop() throws Exception;1427958028;Stop the local executor instance. You should not call executePlan after this.;public void stop() throws Exception {_		synchronized (this.lock) {_			if (this.flink != null) {_				this.flink.stop()__				this.flink = null__			} else {_				throw new IllegalStateException("The local executor was not started.")__			}_		}_	};stop,the,local,executor,instance,you,should,not,call,execute,plan,after,this;public,void,stop,throws,exception,synchronized,this,lock,if,this,flink,null,this,flink,stop,this,flink,null,else,throw,new,illegal,state,exception,the,local,executor,was,not,started
LocalExecutor -> public void stop() throws Exception;1428663519;Stop the local executor instance. You should not call executePlan after this.;public void stop() throws Exception {_		synchronized (this.lock) {_			if (this.flink != null) {_				this.flink.stop()__				this.flink = null__			} else {_				throw new IllegalStateException("The local executor was not started.")__			}_		}_	};stop,the,local,executor,instance,you,should,not,call,execute,plan,after,this;public,void,stop,throws,exception,synchronized,this,lock,if,this,flink,null,this,flink,stop,this,flink,null,else,throw,new,illegal,state,exception,the,local,executor,was,not,started
LocalExecutor -> public void stop() throws Exception;1428935901;Stop the local executor instance. You should not call executePlan after this.;public void stop() throws Exception {_		synchronized (this.lock) {_			if (this.flink != null) {_				this.flink.stop()__				this.flink = null__			} else {_				throw new IllegalStateException("The local executor was not started.")__			}_		}_	};stop,the,local,executor,instance,you,should,not,call,execute,plan,after,this;public,void,stop,throws,exception,synchronized,this,lock,if,this,flink,null,this,flink,stop,this,flink,null,else,throw,new,illegal,state,exception,the,local,executor,was,not,started
LocalExecutor -> public void stop() throws Exception;1428935901;Stop the local executor instance. You should not call executePlan after this.;public void stop() throws Exception {_		synchronized (this.lock) {_			if (this.flink != null) {_				this.flink.stop()__				this.flink = null__			} else {_				throw new IllegalStateException("The local executor was not started.")__			}_		}_	};stop,the,local,executor,instance,you,should,not,call,execute,plan,after,this;public,void,stop,throws,exception,synchronized,this,lock,if,this,flink,null,this,flink,stop,this,flink,null,else,throw,new,illegal,state,exception,the,local,executor,was,not,started
LocalExecutor -> public void stop() throws Exception;1440951699;Stop the local executor instance. You should not call executePlan after this.;public void stop() throws Exception {_		synchronized (this.lock) {_			if (this.flink != null) {_				this.flink.stop()__				this.flink = null__			} else {_				throw new IllegalStateException("The local executor was not started.")__			}_		}_	};stop,the,local,executor,instance,you,should,not,call,execute,plan,after,this;public,void,stop,throws,exception,synchronized,this,lock,if,this,flink,null,this,flink,stop,this,flink,null,else,throw,new,illegal,state,exception,the,local,executor,was,not,started
LocalExecutor -> public void stop() throws Exception;1441011751;Stop the local executor instance. You should not call executePlan after this.;public void stop() throws Exception {_		synchronized (this.lock) {_			if (this.flink != null) {_				this.flink.stop()__				this.flink = null__			} else {_				throw new IllegalStateException("The local executor was not started.")__			}_		}_	};stop,the,local,executor,instance,you,should,not,call,execute,plan,after,this;public,void,stop,throws,exception,synchronized,this,lock,if,this,flink,null,this,flink,stop,this,flink,null,else,throw,new,illegal,state,exception,the,local,executor,was,not,started
LocalExecutor -> public void stop() throws Exception;1441614857;Stop the local executor instance. You should not call executePlan after this.;public void stop() throws Exception {_		synchronized (this.lock) {_			if (this.flink != null) {_				this.flink.stop()__				this.flink = null__			} else {_				throw new IllegalStateException("The local executor was not started.")__			}_		}_	};stop,the,local,executor,instance,you,should,not,call,execute,plan,after,this;public,void,stop,throws,exception,synchronized,this,lock,if,this,flink,null,this,flink,stop,this,flink,null,else,throw,new,illegal,state,exception,the,local,executor,was,not,started
