# id;timestamp;commentText;codeText;commentWords;codeWords
CliFrontendPackageProgramTest -> @Test 	public void testPlanWithExternalClass() throws Exception;1515770042;Ensure that we will never have the following error.__<pre>_org.apache.flink.client.program.ProgramInvocationException: The main method caused an error._at org.apache.flink.client.program.PackagedProgram.callMainMethod(PackagedProgram.java:398)_at org.apache.flink.client.program.PackagedProgram.invokeInteractiveModeForExecution(PackagedProgram.java:301)_at org.apache.flink.client.program.Client.getOptimizedPlan(Client.java:140)_at org.apache.flink.client.program.Client.getOptimizedPlanAsJson(Client.java:125)_at org.apache.flink.client.cli.CliFrontend.info(CliFrontend.java:439)_at org.apache.flink.client.cli.CliFrontend.parseParameters(CliFrontend.java:931)_at org.apache.flink.client.cli.CliFrontend.main(CliFrontend.java:951)_Caused by: java.io.IOException: java.lang.RuntimeException: java.lang.ClassNotFoundException: org.apache.hadoop.hive.ql.io.RCFileInputFormat_at org.apache.hcatalog.mapreduce.HCatInputFormat.setInput(HCatInputFormat.java:102)_at org.apache.hcatalog.mapreduce.HCatInputFormat.setInput(HCatInputFormat.java:54)_at tlabs.CDR_In_Report.createHCatInputFormat(CDR_In_Report.java:322)_at tlabs.CDR_Out_Report.main(CDR_Out_Report.java:380)_at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)_at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)_at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)_at java.lang.reflect.Method.invoke(Method.java:622)_at org.apache.flink.client.program.PackagedProgram.callMainMethod(PackagedProgram.java:383)_</pre>__<p>The test works as follows:__<ul>_<li> Use the CliFrontend to invoke a jar file that loads a class which is only available_in the jarfile itself (via a custom classloader)_<li> Change the Usercode classloader of the PackagedProgram to a special classloader for this test_<li> the classloader will accept the special class (and return a String.class)_</ul>;@Test_	public void testPlanWithExternalClass() throws Exception {_		final boolean[] callme = { false }_ __		try {_			String[] arguments = {_					"--classpath", "file:///tmp/foo",_					"--classpath", "file:///tmp/bar",_					"-c", TEST_JAR_CLASSLOADERTEST_CLASS, getTestJarPath(),_					"true", "arg1", "arg2" }__			URL[] classpath = new URL[] { new URL("file:///tmp/foo"), new URL("file:///tmp/bar") }__			String[] reducedArguments = { "true", "arg1", "arg2" }___			RunOptions options = CliFrontendParser.parseRunCommand(arguments)__			assertEquals(getTestJarPath(), options.getJarFilePath())__			assertArrayEquals(classpath, options.getClasspaths().toArray())__			assertEquals(TEST_JAR_CLASSLOADERTEST_CLASS, options.getEntryPointClassName())__			assertArrayEquals(reducedArguments, options.getProgramArgs())___			PackagedProgram prog = spy(frontend.buildProgram(options))___			ClassLoader testClassLoader = new ClassLoader(prog.getUserCodeClassLoader()) {_				@Override_				public Class<?> loadClass(String name) throws ClassNotFoundException {_					if ("org.apache.hadoop.hive.ql.io.RCFileInputFormat".equals(name)) {_						callme[0] = true__						return String.class_ _					} else {_						return super.loadClass(name)__					}_				}_			}__			when(prog.getUserCodeClassLoader()).thenReturn(testClassLoader)___			assertEquals(TEST_JAR_CLASSLOADERTEST_CLASS, prog.getMainClassName())__			assertArrayEquals(reducedArguments, prog.getArguments())___			Configuration c = new Configuration()__			Optimizer compiler = new Optimizer(new DataStatistics(), new DefaultCostEstimator(), c)___			_			ClusterClient.getOptimizedPlanAsJson(compiler, prog, 666)__			fail("Should have failed with a ClassNotFoundException")__		}_		catch (ProgramInvocationException e) {_			if (!(e.getCause() instanceof ClassNotFoundException)) {_				e.printStackTrace()__				fail("Program didn't throw ClassNotFoundException")__			}_			assertTrue("Classloader was not called", callme[0])__		}_	};ensure,that,we,will,never,have,the,following,error,pre,org,apache,flink,client,program,program,invocation,exception,the,main,method,caused,an,error,at,org,apache,flink,client,program,packaged,program,call,main,method,packaged,program,java,398,at,org,apache,flink,client,program,packaged,program,invoke,interactive,mode,for,execution,packaged,program,java,301,at,org,apache,flink,client,program,client,get,optimized,plan,client,java,140,at,org,apache,flink,client,program,client,get,optimized,plan,as,json,client,java,125,at,org,apache,flink,client,cli,cli,frontend,info,cli,frontend,java,439,at,org,apache,flink,client,cli,cli,frontend,parse,parameters,cli,frontend,java,931,at,org,apache,flink,client,cli,cli,frontend,main,cli,frontend,java,951,caused,by,java,io,ioexception,java,lang,runtime,exception,java,lang,class,not,found,exception,org,apache,hadoop,hive,ql,io,rcfile,input,format,at,org,apache,hcatalog,mapreduce,hcat,input,format,set,input,hcat,input,format,java,102,at,org,apache,hcatalog,mapreduce,hcat,input,format,set,input,hcat,input,format,java,54,at,tlabs,create,hcat,input,format,java,322,at,tlabs,main,java,380,at,sun,reflect,native,method,accessor,impl,invoke0,native,method,at,sun,reflect,native,method,accessor,impl,invoke,native,method,accessor,impl,java,57,at,sun,reflect,delegating,method,accessor,impl,invoke,delegating,method,accessor,impl,java,43,at,java,lang,reflect,method,invoke,method,java,622,at,org,apache,flink,client,program,packaged,program,call,main,method,packaged,program,java,383,pre,p,the,test,works,as,follows,ul,li,use,the,cli,frontend,to,invoke,a,jar,file,that,loads,a,class,which,is,only,available,in,the,jarfile,itself,via,a,custom,classloader,li,change,the,usercode,classloader,of,the,packaged,program,to,a,special,classloader,for,this,test,li,the,classloader,will,accept,the,special,class,and,return,a,string,class,ul;test,public,void,test,plan,with,external,class,throws,exception,final,boolean,callme,false,try,string,arguments,classpath,file,tmp,foo,classpath,file,tmp,bar,c,get,test,jar,path,true,arg1,arg2,url,classpath,new,url,new,url,file,tmp,foo,new,url,file,tmp,bar,string,reduced,arguments,true,arg1,arg2,run,options,options,cli,frontend,parser,parse,run,command,arguments,assert,equals,get,test,jar,path,options,get,jar,file,path,assert,array,equals,classpath,options,get,classpaths,to,array,assert,equals,options,get,entry,point,class,name,assert,array,equals,reduced,arguments,options,get,program,args,packaged,program,prog,spy,frontend,build,program,options,class,loader,test,class,loader,new,class,loader,prog,get,user,code,class,loader,override,public,class,load,class,string,name,throws,class,not,found,exception,if,org,apache,hadoop,hive,ql,io,rcfile,input,format,equals,name,callme,0,true,return,string,class,else,return,super,load,class,name,when,prog,get,user,code,class,loader,then,return,test,class,loader,assert,equals,prog,get,main,class,name,assert,array,equals,reduced,arguments,prog,get,arguments,configuration,c,new,configuration,optimizer,compiler,new,optimizer,new,data,statistics,new,default,cost,estimator,c,cluster,client,get,optimized,plan,as,json,compiler,prog,666,fail,should,have,failed,with,a,class,not,found,exception,catch,program,invocation,exception,e,if,e,get,cause,instanceof,class,not,found,exception,e,print,stack,trace,fail,program,didn,t,throw,class,not,found,exception,assert,true,classloader,was,not,called,callme,0
CliFrontendPackageProgramTest -> @Test 	public void testPlanWithExternalClass() throws Exception;1521056783;Ensure that we will never have the following error.__<pre>_org.apache.flink.client.program.ProgramInvocationException: The main method caused an error._at org.apache.flink.client.program.PackagedProgram.callMainMethod(PackagedProgram.java:398)_at org.apache.flink.client.program.PackagedProgram.invokeInteractiveModeForExecution(PackagedProgram.java:301)_at org.apache.flink.client.program.Client.getOptimizedPlan(Client.java:140)_at org.apache.flink.client.program.Client.getOptimizedPlanAsJson(Client.java:125)_at org.apache.flink.client.cli.CliFrontend.info(CliFrontend.java:439)_at org.apache.flink.client.cli.CliFrontend.parseParameters(CliFrontend.java:931)_at org.apache.flink.client.cli.CliFrontend.main(CliFrontend.java:951)_Caused by: java.io.IOException: java.lang.RuntimeException: java.lang.ClassNotFoundException: org.apache.hadoop.hive.ql.io.RCFileInputFormat_at org.apache.hcatalog.mapreduce.HCatInputFormat.setInput(HCatInputFormat.java:102)_at org.apache.hcatalog.mapreduce.HCatInputFormat.setInput(HCatInputFormat.java:54)_at tlabs.CDR_In_Report.createHCatInputFormat(CDR_In_Report.java:322)_at tlabs.CDR_Out_Report.main(CDR_Out_Report.java:380)_at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)_at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)_at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)_at java.lang.reflect.Method.invoke(Method.java:622)_at org.apache.flink.client.program.PackagedProgram.callMainMethod(PackagedProgram.java:383)_</pre>__<p>The test works as follows:__<ul>_<li> Use the CliFrontend to invoke a jar file that loads a class which is only available_in the jarfile itself (via a custom classloader)_<li> Change the Usercode classloader of the PackagedProgram to a special classloader for this test_<li> the classloader will accept the special class (and return a String.class)_</ul>;@Test_	public void testPlanWithExternalClass() throws Exception {_		final boolean[] callme = { false }_ __		try {_			String[] arguments = {_					"--classpath", "file:///tmp/foo",_					"--classpath", "file:///tmp/bar",_					"-c", TEST_JAR_CLASSLOADERTEST_CLASS, getTestJarPath(),_					"true", "arg1", "arg2" }__			URL[] classpath = new URL[] { new URL("file:///tmp/foo"), new URL("file:///tmp/bar") }__			String[] reducedArguments = { "true", "arg1", "arg2" }___			RunOptions options = CliFrontendParser.parseRunCommand(arguments)__			assertEquals(getTestJarPath(), options.getJarFilePath())__			assertArrayEquals(classpath, options.getClasspaths().toArray())__			assertEquals(TEST_JAR_CLASSLOADERTEST_CLASS, options.getEntryPointClassName())__			assertArrayEquals(reducedArguments, options.getProgramArgs())___			PackagedProgram prog = spy(frontend.buildProgram(options))___			ClassLoader testClassLoader = new ClassLoader(prog.getUserCodeClassLoader()) {_				@Override_				public Class<?> loadClass(String name) throws ClassNotFoundException {_					if ("org.apache.hadoop.hive.ql.io.RCFileInputFormat".equals(name)) {_						callme[0] = true__						return String.class_ _					} else {_						return super.loadClass(name)__					}_				}_			}__			when(prog.getUserCodeClassLoader()).thenReturn(testClassLoader)___			assertEquals(TEST_JAR_CLASSLOADERTEST_CLASS, prog.getMainClassName())__			assertArrayEquals(reducedArguments, prog.getArguments())___			Configuration c = new Configuration()__			Optimizer compiler = new Optimizer(new DataStatistics(), new DefaultCostEstimator(), c)___			_			ClusterClient.getOptimizedPlanAsJson(compiler, prog, 666)__			fail("Should have failed with a ClassNotFoundException")__		}_		catch (ProgramInvocationException e) {_			if (!(e.getCause() instanceof ClassNotFoundException)) {_				e.printStackTrace()__				fail("Program didn't throw ClassNotFoundException")__			}_			assertTrue("Classloader was not called", callme[0])__		}_	};ensure,that,we,will,never,have,the,following,error,pre,org,apache,flink,client,program,program,invocation,exception,the,main,method,caused,an,error,at,org,apache,flink,client,program,packaged,program,call,main,method,packaged,program,java,398,at,org,apache,flink,client,program,packaged,program,invoke,interactive,mode,for,execution,packaged,program,java,301,at,org,apache,flink,client,program,client,get,optimized,plan,client,java,140,at,org,apache,flink,client,program,client,get,optimized,plan,as,json,client,java,125,at,org,apache,flink,client,cli,cli,frontend,info,cli,frontend,java,439,at,org,apache,flink,client,cli,cli,frontend,parse,parameters,cli,frontend,java,931,at,org,apache,flink,client,cli,cli,frontend,main,cli,frontend,java,951,caused,by,java,io,ioexception,java,lang,runtime,exception,java,lang,class,not,found,exception,org,apache,hadoop,hive,ql,io,rcfile,input,format,at,org,apache,hcatalog,mapreduce,hcat,input,format,set,input,hcat,input,format,java,102,at,org,apache,hcatalog,mapreduce,hcat,input,format,set,input,hcat,input,format,java,54,at,tlabs,create,hcat,input,format,java,322,at,tlabs,main,java,380,at,sun,reflect,native,method,accessor,impl,invoke0,native,method,at,sun,reflect,native,method,accessor,impl,invoke,native,method,accessor,impl,java,57,at,sun,reflect,delegating,method,accessor,impl,invoke,delegating,method,accessor,impl,java,43,at,java,lang,reflect,method,invoke,method,java,622,at,org,apache,flink,client,program,packaged,program,call,main,method,packaged,program,java,383,pre,p,the,test,works,as,follows,ul,li,use,the,cli,frontend,to,invoke,a,jar,file,that,loads,a,class,which,is,only,available,in,the,jarfile,itself,via,a,custom,classloader,li,change,the,usercode,classloader,of,the,packaged,program,to,a,special,classloader,for,this,test,li,the,classloader,will,accept,the,special,class,and,return,a,string,class,ul;test,public,void,test,plan,with,external,class,throws,exception,final,boolean,callme,false,try,string,arguments,classpath,file,tmp,foo,classpath,file,tmp,bar,c,get,test,jar,path,true,arg1,arg2,url,classpath,new,url,new,url,file,tmp,foo,new,url,file,tmp,bar,string,reduced,arguments,true,arg1,arg2,run,options,options,cli,frontend,parser,parse,run,command,arguments,assert,equals,get,test,jar,path,options,get,jar,file,path,assert,array,equals,classpath,options,get,classpaths,to,array,assert,equals,options,get,entry,point,class,name,assert,array,equals,reduced,arguments,options,get,program,args,packaged,program,prog,spy,frontend,build,program,options,class,loader,test,class,loader,new,class,loader,prog,get,user,code,class,loader,override,public,class,load,class,string,name,throws,class,not,found,exception,if,org,apache,hadoop,hive,ql,io,rcfile,input,format,equals,name,callme,0,true,return,string,class,else,return,super,load,class,name,when,prog,get,user,code,class,loader,then,return,test,class,loader,assert,equals,prog,get,main,class,name,assert,array,equals,reduced,arguments,prog,get,arguments,configuration,c,new,configuration,optimizer,compiler,new,optimizer,new,data,statistics,new,default,cost,estimator,c,cluster,client,get,optimized,plan,as,json,compiler,prog,666,fail,should,have,failed,with,a,class,not,found,exception,catch,program,invocation,exception,e,if,e,get,cause,instanceof,class,not,found,exception,e,print,stack,trace,fail,program,didn,t,throw,class,not,found,exception,assert,true,classloader,was,not,called,callme,0
CliFrontendPackageProgramTest -> @Test 	public void testPlanWithExternalClass() throws Exception;1522681180;Ensure that we will never have the following error.__<pre>_org.apache.flink.client.program.ProgramInvocationException: The main method caused an error._at org.apache.flink.client.program.PackagedProgram.callMainMethod(PackagedProgram.java:398)_at org.apache.flink.client.program.PackagedProgram.invokeInteractiveModeForExecution(PackagedProgram.java:301)_at org.apache.flink.client.program.Client.getOptimizedPlan(Client.java:140)_at org.apache.flink.client.program.Client.getOptimizedPlanAsJson(Client.java:125)_at org.apache.flink.client.cli.CliFrontend.info(CliFrontend.java:439)_at org.apache.flink.client.cli.CliFrontend.parseParameters(CliFrontend.java:931)_at org.apache.flink.client.cli.CliFrontend.main(CliFrontend.java:951)_Caused by: java.io.IOException: java.lang.RuntimeException: java.lang.ClassNotFoundException: org.apache.hadoop.hive.ql.io.RCFileInputFormat_at org.apache.hcatalog.mapreduce.HCatInputFormat.setInput(HCatInputFormat.java:102)_at org.apache.hcatalog.mapreduce.HCatInputFormat.setInput(HCatInputFormat.java:54)_at tlabs.CDR_In_Report.createHCatInputFormat(CDR_In_Report.java:322)_at tlabs.CDR_Out_Report.main(CDR_Out_Report.java:380)_at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)_at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)_at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)_at java.lang.reflect.Method.invoke(Method.java:622)_at org.apache.flink.client.program.PackagedProgram.callMainMethod(PackagedProgram.java:383)_</pre>__<p>The test works as follows:__<ul>_<li> Use the CliFrontend to invoke a jar file that loads a class which is only available_in the jarfile itself (via a custom classloader)_<li> Change the Usercode classloader of the PackagedProgram to a special classloader for this test_<li> the classloader will accept the special class (and return a String.class)_</ul>;@Test_	public void testPlanWithExternalClass() throws Exception {_		final boolean[] callme = { false }_ __		try {_			String[] arguments = {_					"--classpath", "file:///tmp/foo",_					"--classpath", "file:///tmp/bar",_					"-c", TEST_JAR_CLASSLOADERTEST_CLASS, getTestJarPath(),_					"true", "arg1", "arg2" }__			URL[] classpath = new URL[] { new URL("file:///tmp/foo"), new URL("file:///tmp/bar") }__			String[] reducedArguments = { "true", "arg1", "arg2" }___			RunOptions options = CliFrontendParser.parseRunCommand(arguments)__			assertEquals(getTestJarPath(), options.getJarFilePath())__			assertArrayEquals(classpath, options.getClasspaths().toArray())__			assertEquals(TEST_JAR_CLASSLOADERTEST_CLASS, options.getEntryPointClassName())__			assertArrayEquals(reducedArguments, options.getProgramArgs())___			PackagedProgram prog = spy(frontend.buildProgram(options))___			ClassLoader testClassLoader = new ClassLoader(prog.getUserCodeClassLoader()) {_				@Override_				public Class<?> loadClass(String name) throws ClassNotFoundException {_					if ("org.apache.hadoop.hive.ql.io.RCFileInputFormat".equals(name)) {_						callme[0] = true__						return String.class_ _					} else {_						return super.loadClass(name)__					}_				}_			}__			when(prog.getUserCodeClassLoader()).thenReturn(testClassLoader)___			assertEquals(TEST_JAR_CLASSLOADERTEST_CLASS, prog.getMainClassName())__			assertArrayEquals(reducedArguments, prog.getArguments())___			Configuration c = new Configuration()__			Optimizer compiler = new Optimizer(new DataStatistics(), new DefaultCostEstimator(), c)___			_			ClusterClient.getOptimizedPlanAsJson(compiler, prog, 666)__			fail("Should have failed with a ClassNotFoundException")__		}_		catch (ProgramInvocationException e) {_			if (!(e.getCause() instanceof ClassNotFoundException)) {_				e.printStackTrace()__				fail("Program didn't throw ClassNotFoundException")__			}_			assertTrue("Classloader was not called", callme[0])__		}_	};ensure,that,we,will,never,have,the,following,error,pre,org,apache,flink,client,program,program,invocation,exception,the,main,method,caused,an,error,at,org,apache,flink,client,program,packaged,program,call,main,method,packaged,program,java,398,at,org,apache,flink,client,program,packaged,program,invoke,interactive,mode,for,execution,packaged,program,java,301,at,org,apache,flink,client,program,client,get,optimized,plan,client,java,140,at,org,apache,flink,client,program,client,get,optimized,plan,as,json,client,java,125,at,org,apache,flink,client,cli,cli,frontend,info,cli,frontend,java,439,at,org,apache,flink,client,cli,cli,frontend,parse,parameters,cli,frontend,java,931,at,org,apache,flink,client,cli,cli,frontend,main,cli,frontend,java,951,caused,by,java,io,ioexception,java,lang,runtime,exception,java,lang,class,not,found,exception,org,apache,hadoop,hive,ql,io,rcfile,input,format,at,org,apache,hcatalog,mapreduce,hcat,input,format,set,input,hcat,input,format,java,102,at,org,apache,hcatalog,mapreduce,hcat,input,format,set,input,hcat,input,format,java,54,at,tlabs,create,hcat,input,format,java,322,at,tlabs,main,java,380,at,sun,reflect,native,method,accessor,impl,invoke0,native,method,at,sun,reflect,native,method,accessor,impl,invoke,native,method,accessor,impl,java,57,at,sun,reflect,delegating,method,accessor,impl,invoke,delegating,method,accessor,impl,java,43,at,java,lang,reflect,method,invoke,method,java,622,at,org,apache,flink,client,program,packaged,program,call,main,method,packaged,program,java,383,pre,p,the,test,works,as,follows,ul,li,use,the,cli,frontend,to,invoke,a,jar,file,that,loads,a,class,which,is,only,available,in,the,jarfile,itself,via,a,custom,classloader,li,change,the,usercode,classloader,of,the,packaged,program,to,a,special,classloader,for,this,test,li,the,classloader,will,accept,the,special,class,and,return,a,string,class,ul;test,public,void,test,plan,with,external,class,throws,exception,final,boolean,callme,false,try,string,arguments,classpath,file,tmp,foo,classpath,file,tmp,bar,c,get,test,jar,path,true,arg1,arg2,url,classpath,new,url,new,url,file,tmp,foo,new,url,file,tmp,bar,string,reduced,arguments,true,arg1,arg2,run,options,options,cli,frontend,parser,parse,run,command,arguments,assert,equals,get,test,jar,path,options,get,jar,file,path,assert,array,equals,classpath,options,get,classpaths,to,array,assert,equals,options,get,entry,point,class,name,assert,array,equals,reduced,arguments,options,get,program,args,packaged,program,prog,spy,frontend,build,program,options,class,loader,test,class,loader,new,class,loader,prog,get,user,code,class,loader,override,public,class,load,class,string,name,throws,class,not,found,exception,if,org,apache,hadoop,hive,ql,io,rcfile,input,format,equals,name,callme,0,true,return,string,class,else,return,super,load,class,name,when,prog,get,user,code,class,loader,then,return,test,class,loader,assert,equals,prog,get,main,class,name,assert,array,equals,reduced,arguments,prog,get,arguments,configuration,c,new,configuration,optimizer,compiler,new,optimizer,new,data,statistics,new,default,cost,estimator,c,cluster,client,get,optimized,plan,as,json,compiler,prog,666,fail,should,have,failed,with,a,class,not,found,exception,catch,program,invocation,exception,e,if,e,get,cause,instanceof,class,not,found,exception,e,print,stack,trace,fail,program,didn,t,throw,class,not,found,exception,assert,true,classloader,was,not,called,callme,0
CliFrontendPackageProgramTest -> @Test 	public void testPlanWithExternalClass() throws Exception;1539695715;Ensure that we will never have the following error.__<pre>_org.apache.flink.client.program.ProgramInvocationException: The main method caused an error._at org.apache.flink.client.program.PackagedProgram.callMainMethod(PackagedProgram.java:398)_at org.apache.flink.client.program.PackagedProgram.invokeInteractiveModeForExecution(PackagedProgram.java:301)_at org.apache.flink.client.program.Client.getOptimizedPlan(Client.java:140)_at org.apache.flink.client.program.Client.getOptimizedPlanAsJson(Client.java:125)_at org.apache.flink.client.cli.CliFrontend.info(CliFrontend.java:439)_at org.apache.flink.client.cli.CliFrontend.parseParameters(CliFrontend.java:931)_at org.apache.flink.client.cli.CliFrontend.main(CliFrontend.java:951)_Caused by: java.io.IOException: java.lang.RuntimeException: java.lang.ClassNotFoundException: org.apache.hadoop.hive.ql.io.RCFileInputFormat_at org.apache.hcatalog.mapreduce.HCatInputFormat.setInput(HCatInputFormat.java:102)_at org.apache.hcatalog.mapreduce.HCatInputFormat.setInput(HCatInputFormat.java:54)_at tlabs.CDR_In_Report.createHCatInputFormat(CDR_In_Report.java:322)_at tlabs.CDR_Out_Report.main(CDR_Out_Report.java:380)_at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)_at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)_at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)_at java.lang.reflect.Method.invoke(Method.java:622)_at org.apache.flink.client.program.PackagedProgram.callMainMethod(PackagedProgram.java:383)_</pre>__<p>The test works as follows:__<ul>_<li> Use the CliFrontend to invoke a jar file that loads a class which is only available_in the jarfile itself (via a custom classloader)_<li> Change the Usercode classloader of the PackagedProgram to a special classloader for this test_<li> the classloader will accept the special class (and return a String.class)_</ul>;@Test_	public void testPlanWithExternalClass() throws Exception {_		final boolean[] callme = { false }_ __		try {_			String[] arguments = {_					"--classpath", "file:///tmp/foo",_					"--classpath", "file:///tmp/bar",_					"-c", TEST_JAR_CLASSLOADERTEST_CLASS, getTestJarPath(),_					"true", "arg1", "arg2" }__			URL[] classpath = new URL[] { new URL("file:///tmp/foo"), new URL("file:///tmp/bar") }__			String[] reducedArguments = { "true", "arg1", "arg2" }___			RunOptions options = CliFrontendParser.parseRunCommand(arguments)__			assertEquals(getTestJarPath(), options.getJarFilePath())__			assertArrayEquals(classpath, options.getClasspaths().toArray())__			assertEquals(TEST_JAR_CLASSLOADERTEST_CLASS, options.getEntryPointClassName())__			assertArrayEquals(reducedArguments, options.getProgramArgs())___			PackagedProgram prog = spy(frontend.buildProgram(options))___			ClassLoader testClassLoader = new ClassLoader(prog.getUserCodeClassLoader()) {_				@Override_				public Class<?> loadClass(String name) throws ClassNotFoundException {_					if ("org.apache.hadoop.hive.ql.io.RCFileInputFormat".equals(name)) {_						callme[0] = true__						return String.class_ _					} else {_						return super.loadClass(name)__					}_				}_			}__			when(prog.getUserCodeClassLoader()).thenReturn(testClassLoader)___			assertEquals(TEST_JAR_CLASSLOADERTEST_CLASS, prog.getMainClassName())__			assertArrayEquals(reducedArguments, prog.getArguments())___			Configuration c = new Configuration()__			Optimizer compiler = new Optimizer(new DataStatistics(), new DefaultCostEstimator(), c)___			_			ClusterClient.getOptimizedPlanAsJson(compiler, prog, 666)__			fail("Should have failed with a ClassNotFoundException")__		}_		catch (ProgramInvocationException e) {_			if (!(e.getCause() instanceof ClassNotFoundException)) {_				e.printStackTrace()__				fail("Program didn't throw ClassNotFoundException")__			}_			assertTrue("Classloader was not called", callme[0])__		}_	};ensure,that,we,will,never,have,the,following,error,pre,org,apache,flink,client,program,program,invocation,exception,the,main,method,caused,an,error,at,org,apache,flink,client,program,packaged,program,call,main,method,packaged,program,java,398,at,org,apache,flink,client,program,packaged,program,invoke,interactive,mode,for,execution,packaged,program,java,301,at,org,apache,flink,client,program,client,get,optimized,plan,client,java,140,at,org,apache,flink,client,program,client,get,optimized,plan,as,json,client,java,125,at,org,apache,flink,client,cli,cli,frontend,info,cli,frontend,java,439,at,org,apache,flink,client,cli,cli,frontend,parse,parameters,cli,frontend,java,931,at,org,apache,flink,client,cli,cli,frontend,main,cli,frontend,java,951,caused,by,java,io,ioexception,java,lang,runtime,exception,java,lang,class,not,found,exception,org,apache,hadoop,hive,ql,io,rcfile,input,format,at,org,apache,hcatalog,mapreduce,hcat,input,format,set,input,hcat,input,format,java,102,at,org,apache,hcatalog,mapreduce,hcat,input,format,set,input,hcat,input,format,java,54,at,tlabs,create,hcat,input,format,java,322,at,tlabs,main,java,380,at,sun,reflect,native,method,accessor,impl,invoke0,native,method,at,sun,reflect,native,method,accessor,impl,invoke,native,method,accessor,impl,java,57,at,sun,reflect,delegating,method,accessor,impl,invoke,delegating,method,accessor,impl,java,43,at,java,lang,reflect,method,invoke,method,java,622,at,org,apache,flink,client,program,packaged,program,call,main,method,packaged,program,java,383,pre,p,the,test,works,as,follows,ul,li,use,the,cli,frontend,to,invoke,a,jar,file,that,loads,a,class,which,is,only,available,in,the,jarfile,itself,via,a,custom,classloader,li,change,the,usercode,classloader,of,the,packaged,program,to,a,special,classloader,for,this,test,li,the,classloader,will,accept,the,special,class,and,return,a,string,class,ul;test,public,void,test,plan,with,external,class,throws,exception,final,boolean,callme,false,try,string,arguments,classpath,file,tmp,foo,classpath,file,tmp,bar,c,get,test,jar,path,true,arg1,arg2,url,classpath,new,url,new,url,file,tmp,foo,new,url,file,tmp,bar,string,reduced,arguments,true,arg1,arg2,run,options,options,cli,frontend,parser,parse,run,command,arguments,assert,equals,get,test,jar,path,options,get,jar,file,path,assert,array,equals,classpath,options,get,classpaths,to,array,assert,equals,options,get,entry,point,class,name,assert,array,equals,reduced,arguments,options,get,program,args,packaged,program,prog,spy,frontend,build,program,options,class,loader,test,class,loader,new,class,loader,prog,get,user,code,class,loader,override,public,class,load,class,string,name,throws,class,not,found,exception,if,org,apache,hadoop,hive,ql,io,rcfile,input,format,equals,name,callme,0,true,return,string,class,else,return,super,load,class,name,when,prog,get,user,code,class,loader,then,return,test,class,loader,assert,equals,prog,get,main,class,name,assert,array,equals,reduced,arguments,prog,get,arguments,configuration,c,new,configuration,optimizer,compiler,new,optimizer,new,data,statistics,new,default,cost,estimator,c,cluster,client,get,optimized,plan,as,json,compiler,prog,666,fail,should,have,failed,with,a,class,not,found,exception,catch,program,invocation,exception,e,if,e,get,cause,instanceof,class,not,found,exception,e,print,stack,trace,fail,program,didn,t,throw,class,not,found,exception,assert,true,classloader,was,not,called,callme,0
CliFrontendPackageProgramTest -> @Test 	public void testPlanWithExternalClass() throws CompilerException, ProgramInvocationException;1515699581;Ensure that we will never have the following error.__<pre>_org.apache.flink.client.program.ProgramInvocationException: The main method caused an error._at org.apache.flink.client.program.PackagedProgram.callMainMethod(PackagedProgram.java:398)_at org.apache.flink.client.program.PackagedProgram.invokeInteractiveModeForExecution(PackagedProgram.java:301)_at org.apache.flink.client.program.Client.getOptimizedPlan(Client.java:140)_at org.apache.flink.client.program.Client.getOptimizedPlanAsJson(Client.java:125)_at org.apache.flink.client.cli.CliFrontend.info(CliFrontend.java:439)_at org.apache.flink.client.cli.CliFrontend.parseParameters(CliFrontend.java:931)_at org.apache.flink.client.cli.CliFrontend.main(CliFrontend.java:951)_Caused by: java.io.IOException: java.lang.RuntimeException: java.lang.ClassNotFoundException: org.apache.hadoop.hive.ql.io.RCFileInputFormat_at org.apache.hcatalog.mapreduce.HCatInputFormat.setInput(HCatInputFormat.java:102)_at org.apache.hcatalog.mapreduce.HCatInputFormat.setInput(HCatInputFormat.java:54)_at tlabs.CDR_In_Report.createHCatInputFormat(CDR_In_Report.java:322)_at tlabs.CDR_Out_Report.main(CDR_Out_Report.java:380)_at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)_at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)_at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)_at java.lang.reflect.Method.invoke(Method.java:622)_at org.apache.flink.client.program.PackagedProgram.callMainMethod(PackagedProgram.java:383)_</pre>__<p>The test works as follows:__<ul>_<li> Use the CliFrontend to invoke a jar file that loads a class which is only available_in the jarfile itself (via a custom classloader)_<li> Change the Usercode classloader of the PackagedProgram to a special classloader for this test_<li> the classloader will accept the special class (and return a String.class)_</ul>;@Test_	public void testPlanWithExternalClass() throws CompilerException, ProgramInvocationException {_		final boolean[] callme = { false }_ __		try {_			String[] arguments = {_					"--classpath", "file:///tmp/foo",_					"--classpath", "file:///tmp/bar",_					"-c", TEST_JAR_CLASSLOADERTEST_CLASS, getTestJarPath(),_					"true", "arg1", "arg2" }__			URL[] classpath = new URL[] { new URL("file:///tmp/foo"), new URL("file:///tmp/bar") }__			String[] reducedArguments = { "true", "arg1", "arg2" }___			RunOptions options = CliFrontendParser.parseRunCommand(arguments)__			assertEquals(getTestJarPath(), options.getJarFilePath())__			assertArrayEquals(classpath, options.getClasspaths().toArray())__			assertEquals(TEST_JAR_CLASSLOADERTEST_CLASS, options.getEntryPointClassName())__			assertArrayEquals(reducedArguments, options.getProgramArgs())___			CliFrontend frontend = new CliFrontend(CliFrontendTestUtils.getConfigDir())__			PackagedProgram prog = spy(frontend.buildProgram(options))___			ClassLoader testClassLoader = new ClassLoader(prog.getUserCodeClassLoader()) {_				@Override_				public Class<?> loadClass(String name) throws ClassNotFoundException {_					if ("org.apache.hadoop.hive.ql.io.RCFileInputFormat".equals(name)) {_						callme[0] = true__						return String.class_ _					} else {_						return super.loadClass(name)__					}_				}_			}__			when(prog.getUserCodeClassLoader()).thenReturn(testClassLoader)___			assertEquals(TEST_JAR_CLASSLOADERTEST_CLASS, prog.getMainClassName())__			assertArrayEquals(reducedArguments, prog.getArguments())___			Configuration c = new Configuration()__			Optimizer compiler = new Optimizer(new DataStatistics(), new DefaultCostEstimator(), c)___			_			ClusterClient.getOptimizedPlanAsJson(compiler, prog, 666)__			fail("Should have failed with a ClassNotFoundException")__		}_		catch (ProgramInvocationException e) {_			if (!(e.getCause() instanceof ClassNotFoundException)) {_				e.printStackTrace()__				fail("Program didn't throw ClassNotFoundException")__			}_			assertTrue("Classloader was not called", callme[0])__		}_		catch (Exception e) {_			e.printStackTrace()__			fail("Program failed with the wrong exception: " + e.getClass().getName())__		}_	};ensure,that,we,will,never,have,the,following,error,pre,org,apache,flink,client,program,program,invocation,exception,the,main,method,caused,an,error,at,org,apache,flink,client,program,packaged,program,call,main,method,packaged,program,java,398,at,org,apache,flink,client,program,packaged,program,invoke,interactive,mode,for,execution,packaged,program,java,301,at,org,apache,flink,client,program,client,get,optimized,plan,client,java,140,at,org,apache,flink,client,program,client,get,optimized,plan,as,json,client,java,125,at,org,apache,flink,client,cli,cli,frontend,info,cli,frontend,java,439,at,org,apache,flink,client,cli,cli,frontend,parse,parameters,cli,frontend,java,931,at,org,apache,flink,client,cli,cli,frontend,main,cli,frontend,java,951,caused,by,java,io,ioexception,java,lang,runtime,exception,java,lang,class,not,found,exception,org,apache,hadoop,hive,ql,io,rcfile,input,format,at,org,apache,hcatalog,mapreduce,hcat,input,format,set,input,hcat,input,format,java,102,at,org,apache,hcatalog,mapreduce,hcat,input,format,set,input,hcat,input,format,java,54,at,tlabs,create,hcat,input,format,java,322,at,tlabs,main,java,380,at,sun,reflect,native,method,accessor,impl,invoke0,native,method,at,sun,reflect,native,method,accessor,impl,invoke,native,method,accessor,impl,java,57,at,sun,reflect,delegating,method,accessor,impl,invoke,delegating,method,accessor,impl,java,43,at,java,lang,reflect,method,invoke,method,java,622,at,org,apache,flink,client,program,packaged,program,call,main,method,packaged,program,java,383,pre,p,the,test,works,as,follows,ul,li,use,the,cli,frontend,to,invoke,a,jar,file,that,loads,a,class,which,is,only,available,in,the,jarfile,itself,via,a,custom,classloader,li,change,the,usercode,classloader,of,the,packaged,program,to,a,special,classloader,for,this,test,li,the,classloader,will,accept,the,special,class,and,return,a,string,class,ul;test,public,void,test,plan,with,external,class,throws,compiler,exception,program,invocation,exception,final,boolean,callme,false,try,string,arguments,classpath,file,tmp,foo,classpath,file,tmp,bar,c,get,test,jar,path,true,arg1,arg2,url,classpath,new,url,new,url,file,tmp,foo,new,url,file,tmp,bar,string,reduced,arguments,true,arg1,arg2,run,options,options,cli,frontend,parser,parse,run,command,arguments,assert,equals,get,test,jar,path,options,get,jar,file,path,assert,array,equals,classpath,options,get,classpaths,to,array,assert,equals,options,get,entry,point,class,name,assert,array,equals,reduced,arguments,options,get,program,args,cli,frontend,frontend,new,cli,frontend,cli,frontend,test,utils,get,config,dir,packaged,program,prog,spy,frontend,build,program,options,class,loader,test,class,loader,new,class,loader,prog,get,user,code,class,loader,override,public,class,load,class,string,name,throws,class,not,found,exception,if,org,apache,hadoop,hive,ql,io,rcfile,input,format,equals,name,callme,0,true,return,string,class,else,return,super,load,class,name,when,prog,get,user,code,class,loader,then,return,test,class,loader,assert,equals,prog,get,main,class,name,assert,array,equals,reduced,arguments,prog,get,arguments,configuration,c,new,configuration,optimizer,compiler,new,optimizer,new,data,statistics,new,default,cost,estimator,c,cluster,client,get,optimized,plan,as,json,compiler,prog,666,fail,should,have,failed,with,a,class,not,found,exception,catch,program,invocation,exception,e,if,e,get,cause,instanceof,class,not,found,exception,e,print,stack,trace,fail,program,didn,t,throw,class,not,found,exception,assert,true,classloader,was,not,called,callme,0,catch,exception,e,e,print,stack,trace,fail,program,failed,with,the,wrong,exception,e,get,class,get,name
CliFrontendPackageProgramTest -> @Test 	public void testPlanWithExternalClass() throws CompilerException, ProgramInvocationException;1515699597;Ensure that we will never have the following error.__<pre>_org.apache.flink.client.program.ProgramInvocationException: The main method caused an error._at org.apache.flink.client.program.PackagedProgram.callMainMethod(PackagedProgram.java:398)_at org.apache.flink.client.program.PackagedProgram.invokeInteractiveModeForExecution(PackagedProgram.java:301)_at org.apache.flink.client.program.Client.getOptimizedPlan(Client.java:140)_at org.apache.flink.client.program.Client.getOptimizedPlanAsJson(Client.java:125)_at org.apache.flink.client.cli.CliFrontend.info(CliFrontend.java:439)_at org.apache.flink.client.cli.CliFrontend.parseParameters(CliFrontend.java:931)_at org.apache.flink.client.cli.CliFrontend.main(CliFrontend.java:951)_Caused by: java.io.IOException: java.lang.RuntimeException: java.lang.ClassNotFoundException: org.apache.hadoop.hive.ql.io.RCFileInputFormat_at org.apache.hcatalog.mapreduce.HCatInputFormat.setInput(HCatInputFormat.java:102)_at org.apache.hcatalog.mapreduce.HCatInputFormat.setInput(HCatInputFormat.java:54)_at tlabs.CDR_In_Report.createHCatInputFormat(CDR_In_Report.java:322)_at tlabs.CDR_Out_Report.main(CDR_Out_Report.java:380)_at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)_at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)_at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)_at java.lang.reflect.Method.invoke(Method.java:622)_at org.apache.flink.client.program.PackagedProgram.callMainMethod(PackagedProgram.java:383)_</pre>__<p>The test works as follows:__<ul>_<li> Use the CliFrontend to invoke a jar file that loads a class which is only available_in the jarfile itself (via a custom classloader)_<li> Change the Usercode classloader of the PackagedProgram to a special classloader for this test_<li> the classloader will accept the special class (and return a String.class)_</ul>;@Test_	public void testPlanWithExternalClass() throws CompilerException, ProgramInvocationException {_		final boolean[] callme = { false }_ __		try {_			String[] arguments = {_					"--classpath", "file:///tmp/foo",_					"--classpath", "file:///tmp/bar",_					"-c", TEST_JAR_CLASSLOADERTEST_CLASS, getTestJarPath(),_					"true", "arg1", "arg2" }__			URL[] classpath = new URL[] { new URL("file:///tmp/foo"), new URL("file:///tmp/bar") }__			String[] reducedArguments = { "true", "arg1", "arg2" }___			RunOptions options = CliFrontendParser.parseRunCommand(arguments)__			assertEquals(getTestJarPath(), options.getJarFilePath())__			assertArrayEquals(classpath, options.getClasspaths().toArray())__			assertEquals(TEST_JAR_CLASSLOADERTEST_CLASS, options.getEntryPointClassName())__			assertArrayEquals(reducedArguments, options.getProgramArgs())___			PackagedProgram prog = spy(frontend.buildProgram(options))___			ClassLoader testClassLoader = new ClassLoader(prog.getUserCodeClassLoader()) {_				@Override_				public Class<?> loadClass(String name) throws ClassNotFoundException {_					if ("org.apache.hadoop.hive.ql.io.RCFileInputFormat".equals(name)) {_						callme[0] = true__						return String.class_ _					} else {_						return super.loadClass(name)__					}_				}_			}__			when(prog.getUserCodeClassLoader()).thenReturn(testClassLoader)___			assertEquals(TEST_JAR_CLASSLOADERTEST_CLASS, prog.getMainClassName())__			assertArrayEquals(reducedArguments, prog.getArguments())___			Configuration c = new Configuration()__			Optimizer compiler = new Optimizer(new DataStatistics(), new DefaultCostEstimator(), c)___			_			ClusterClient.getOptimizedPlanAsJson(compiler, prog, 666)__			fail("Should have failed with a ClassNotFoundException")__		}_		catch (ProgramInvocationException e) {_			if (!(e.getCause() instanceof ClassNotFoundException)) {_				e.printStackTrace()__				fail("Program didn't throw ClassNotFoundException")__			}_			assertTrue("Classloader was not called", callme[0])__		}_		catch (Exception e) {_			e.printStackTrace()__			fail("Program failed with the wrong exception: " + e.getClass().getName())__		}_	};ensure,that,we,will,never,have,the,following,error,pre,org,apache,flink,client,program,program,invocation,exception,the,main,method,caused,an,error,at,org,apache,flink,client,program,packaged,program,call,main,method,packaged,program,java,398,at,org,apache,flink,client,program,packaged,program,invoke,interactive,mode,for,execution,packaged,program,java,301,at,org,apache,flink,client,program,client,get,optimized,plan,client,java,140,at,org,apache,flink,client,program,client,get,optimized,plan,as,json,client,java,125,at,org,apache,flink,client,cli,cli,frontend,info,cli,frontend,java,439,at,org,apache,flink,client,cli,cli,frontend,parse,parameters,cli,frontend,java,931,at,org,apache,flink,client,cli,cli,frontend,main,cli,frontend,java,951,caused,by,java,io,ioexception,java,lang,runtime,exception,java,lang,class,not,found,exception,org,apache,hadoop,hive,ql,io,rcfile,input,format,at,org,apache,hcatalog,mapreduce,hcat,input,format,set,input,hcat,input,format,java,102,at,org,apache,hcatalog,mapreduce,hcat,input,format,set,input,hcat,input,format,java,54,at,tlabs,create,hcat,input,format,java,322,at,tlabs,main,java,380,at,sun,reflect,native,method,accessor,impl,invoke0,native,method,at,sun,reflect,native,method,accessor,impl,invoke,native,method,accessor,impl,java,57,at,sun,reflect,delegating,method,accessor,impl,invoke,delegating,method,accessor,impl,java,43,at,java,lang,reflect,method,invoke,method,java,622,at,org,apache,flink,client,program,packaged,program,call,main,method,packaged,program,java,383,pre,p,the,test,works,as,follows,ul,li,use,the,cli,frontend,to,invoke,a,jar,file,that,loads,a,class,which,is,only,available,in,the,jarfile,itself,via,a,custom,classloader,li,change,the,usercode,classloader,of,the,packaged,program,to,a,special,classloader,for,this,test,li,the,classloader,will,accept,the,special,class,and,return,a,string,class,ul;test,public,void,test,plan,with,external,class,throws,compiler,exception,program,invocation,exception,final,boolean,callme,false,try,string,arguments,classpath,file,tmp,foo,classpath,file,tmp,bar,c,get,test,jar,path,true,arg1,arg2,url,classpath,new,url,new,url,file,tmp,foo,new,url,file,tmp,bar,string,reduced,arguments,true,arg1,arg2,run,options,options,cli,frontend,parser,parse,run,command,arguments,assert,equals,get,test,jar,path,options,get,jar,file,path,assert,array,equals,classpath,options,get,classpaths,to,array,assert,equals,options,get,entry,point,class,name,assert,array,equals,reduced,arguments,options,get,program,args,packaged,program,prog,spy,frontend,build,program,options,class,loader,test,class,loader,new,class,loader,prog,get,user,code,class,loader,override,public,class,load,class,string,name,throws,class,not,found,exception,if,org,apache,hadoop,hive,ql,io,rcfile,input,format,equals,name,callme,0,true,return,string,class,else,return,super,load,class,name,when,prog,get,user,code,class,loader,then,return,test,class,loader,assert,equals,prog,get,main,class,name,assert,array,equals,reduced,arguments,prog,get,arguments,configuration,c,new,configuration,optimizer,compiler,new,optimizer,new,data,statistics,new,default,cost,estimator,c,cluster,client,get,optimized,plan,as,json,compiler,prog,666,fail,should,have,failed,with,a,class,not,found,exception,catch,program,invocation,exception,e,if,e,get,cause,instanceof,class,not,found,exception,e,print,stack,trace,fail,program,didn,t,throw,class,not,found,exception,assert,true,classloader,was,not,called,callme,0,catch,exception,e,e,print,stack,trace,fail,program,failed,with,the,wrong,exception,e,get,class,get,name
CliFrontendPackageProgramTest -> @Test 	public void testPlanWithExternalClass() throws CompilerException, ProgramInvocationException;1515699606;Ensure that we will never have the following error.__<pre>_org.apache.flink.client.program.ProgramInvocationException: The main method caused an error._at org.apache.flink.client.program.PackagedProgram.callMainMethod(PackagedProgram.java:398)_at org.apache.flink.client.program.PackagedProgram.invokeInteractiveModeForExecution(PackagedProgram.java:301)_at org.apache.flink.client.program.Client.getOptimizedPlan(Client.java:140)_at org.apache.flink.client.program.Client.getOptimizedPlanAsJson(Client.java:125)_at org.apache.flink.client.cli.CliFrontend.info(CliFrontend.java:439)_at org.apache.flink.client.cli.CliFrontend.parseParameters(CliFrontend.java:931)_at org.apache.flink.client.cli.CliFrontend.main(CliFrontend.java:951)_Caused by: java.io.IOException: java.lang.RuntimeException: java.lang.ClassNotFoundException: org.apache.hadoop.hive.ql.io.RCFileInputFormat_at org.apache.hcatalog.mapreduce.HCatInputFormat.setInput(HCatInputFormat.java:102)_at org.apache.hcatalog.mapreduce.HCatInputFormat.setInput(HCatInputFormat.java:54)_at tlabs.CDR_In_Report.createHCatInputFormat(CDR_In_Report.java:322)_at tlabs.CDR_Out_Report.main(CDR_Out_Report.java:380)_at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)_at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)_at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)_at java.lang.reflect.Method.invoke(Method.java:622)_at org.apache.flink.client.program.PackagedProgram.callMainMethod(PackagedProgram.java:383)_</pre>__<p>The test works as follows:__<ul>_<li> Use the CliFrontend to invoke a jar file that loads a class which is only available_in the jarfile itself (via a custom classloader)_<li> Change the Usercode classloader of the PackagedProgram to a special classloader for this test_<li> the classloader will accept the special class (and return a String.class)_</ul>;@Test_	public void testPlanWithExternalClass() throws CompilerException, ProgramInvocationException {_		final boolean[] callme = { false }_ __		try {_			String[] arguments = {_					"--classpath", "file:///tmp/foo",_					"--classpath", "file:///tmp/bar",_					"-c", TEST_JAR_CLASSLOADERTEST_CLASS, getTestJarPath(),_					"true", "arg1", "arg2" }__			URL[] classpath = new URL[] { new URL("file:///tmp/foo"), new URL("file:///tmp/bar") }__			String[] reducedArguments = { "true", "arg1", "arg2" }___			RunOptions options = CliFrontendParser.parseRunCommand(arguments)__			assertEquals(getTestJarPath(), options.getJarFilePath())__			assertArrayEquals(classpath, options.getClasspaths().toArray())__			assertEquals(TEST_JAR_CLASSLOADERTEST_CLASS, options.getEntryPointClassName())__			assertArrayEquals(reducedArguments, options.getProgramArgs())___			PackagedProgram prog = spy(frontend.buildProgram(options))___			ClassLoader testClassLoader = new ClassLoader(prog.getUserCodeClassLoader()) {_				@Override_				public Class<?> loadClass(String name) throws ClassNotFoundException {_					if ("org.apache.hadoop.hive.ql.io.RCFileInputFormat".equals(name)) {_						callme[0] = true__						return String.class_ _					} else {_						return super.loadClass(name)__					}_				}_			}__			when(prog.getUserCodeClassLoader()).thenReturn(testClassLoader)___			assertEquals(TEST_JAR_CLASSLOADERTEST_CLASS, prog.getMainClassName())__			assertArrayEquals(reducedArguments, prog.getArguments())___			Configuration c = new Configuration()__			Optimizer compiler = new Optimizer(new DataStatistics(), new DefaultCostEstimator(), c)___			_			ClusterClient.getOptimizedPlanAsJson(compiler, prog, 666)__			fail("Should have failed with a ClassNotFoundException")__		}_		catch (ProgramInvocationException e) {_			if (!(e.getCause() instanceof ClassNotFoundException)) {_				e.printStackTrace()__				fail("Program didn't throw ClassNotFoundException")__			}_			assertTrue("Classloader was not called", callme[0])__		}_		catch (Exception e) {_			e.printStackTrace()__			fail("Program failed with the wrong exception: " + e.getClass().getName())__		}_	};ensure,that,we,will,never,have,the,following,error,pre,org,apache,flink,client,program,program,invocation,exception,the,main,method,caused,an,error,at,org,apache,flink,client,program,packaged,program,call,main,method,packaged,program,java,398,at,org,apache,flink,client,program,packaged,program,invoke,interactive,mode,for,execution,packaged,program,java,301,at,org,apache,flink,client,program,client,get,optimized,plan,client,java,140,at,org,apache,flink,client,program,client,get,optimized,plan,as,json,client,java,125,at,org,apache,flink,client,cli,cli,frontend,info,cli,frontend,java,439,at,org,apache,flink,client,cli,cli,frontend,parse,parameters,cli,frontend,java,931,at,org,apache,flink,client,cli,cli,frontend,main,cli,frontend,java,951,caused,by,java,io,ioexception,java,lang,runtime,exception,java,lang,class,not,found,exception,org,apache,hadoop,hive,ql,io,rcfile,input,format,at,org,apache,hcatalog,mapreduce,hcat,input,format,set,input,hcat,input,format,java,102,at,org,apache,hcatalog,mapreduce,hcat,input,format,set,input,hcat,input,format,java,54,at,tlabs,create,hcat,input,format,java,322,at,tlabs,main,java,380,at,sun,reflect,native,method,accessor,impl,invoke0,native,method,at,sun,reflect,native,method,accessor,impl,invoke,native,method,accessor,impl,java,57,at,sun,reflect,delegating,method,accessor,impl,invoke,delegating,method,accessor,impl,java,43,at,java,lang,reflect,method,invoke,method,java,622,at,org,apache,flink,client,program,packaged,program,call,main,method,packaged,program,java,383,pre,p,the,test,works,as,follows,ul,li,use,the,cli,frontend,to,invoke,a,jar,file,that,loads,a,class,which,is,only,available,in,the,jarfile,itself,via,a,custom,classloader,li,change,the,usercode,classloader,of,the,packaged,program,to,a,special,classloader,for,this,test,li,the,classloader,will,accept,the,special,class,and,return,a,string,class,ul;test,public,void,test,plan,with,external,class,throws,compiler,exception,program,invocation,exception,final,boolean,callme,false,try,string,arguments,classpath,file,tmp,foo,classpath,file,tmp,bar,c,get,test,jar,path,true,arg1,arg2,url,classpath,new,url,new,url,file,tmp,foo,new,url,file,tmp,bar,string,reduced,arguments,true,arg1,arg2,run,options,options,cli,frontend,parser,parse,run,command,arguments,assert,equals,get,test,jar,path,options,get,jar,file,path,assert,array,equals,classpath,options,get,classpaths,to,array,assert,equals,options,get,entry,point,class,name,assert,array,equals,reduced,arguments,options,get,program,args,packaged,program,prog,spy,frontend,build,program,options,class,loader,test,class,loader,new,class,loader,prog,get,user,code,class,loader,override,public,class,load,class,string,name,throws,class,not,found,exception,if,org,apache,hadoop,hive,ql,io,rcfile,input,format,equals,name,callme,0,true,return,string,class,else,return,super,load,class,name,when,prog,get,user,code,class,loader,then,return,test,class,loader,assert,equals,prog,get,main,class,name,assert,array,equals,reduced,arguments,prog,get,arguments,configuration,c,new,configuration,optimizer,compiler,new,optimizer,new,data,statistics,new,default,cost,estimator,c,cluster,client,get,optimized,plan,as,json,compiler,prog,666,fail,should,have,failed,with,a,class,not,found,exception,catch,program,invocation,exception,e,if,e,get,cause,instanceof,class,not,found,exception,e,print,stack,trace,fail,program,didn,t,throw,class,not,found,exception,assert,true,classloader,was,not,called,callme,0,catch,exception,e,e,print,stack,trace,fail,program,failed,with,the,wrong,exception,e,get,class,get,name
