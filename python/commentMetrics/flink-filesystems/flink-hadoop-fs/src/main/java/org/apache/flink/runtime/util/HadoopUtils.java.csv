# id;timestamp;commentText;codeText;commentWords;codeWords
HadoopUtils -> public static boolean isMinHadoopVersion(int major, int minor) throws FlinkRuntimeException;1531689536;Checks if the Hadoop dependency is at least of the given version.;public static boolean isMinHadoopVersion(int major, int minor) throws FlinkRuntimeException {_		String versionString = VersionInfo.getVersion()__		String[] versionParts = versionString.split("\\.")___		if (versionParts.length < 2) {_			throw new FlinkRuntimeException(_					"Cannot determine version of Hadoop, unexpected version string: " + versionString)__		}__		int maj = Integer.parseInt(versionParts[0])__		int min = Integer.parseInt(versionParts[1])___		return maj > major || (maj == major && min >= minor)__	};checks,if,the,hadoop,dependency,is,at,least,of,the,given,version;public,static,boolean,is,min,hadoop,version,int,major,int,minor,throws,flink,runtime,exception,string,version,string,version,info,get,version,string,version,parts,version,string,split,if,version,parts,length,2,throw,new,flink,runtime,exception,cannot,determine,version,of,hadoop,unexpected,version,string,version,string,int,maj,integer,parse,int,version,parts,0,int,min,integer,parse,int,version,parts,1,return,maj,major,maj,major,min,minor
HadoopUtils -> public static boolean isMinHadoopVersion(int major, int minor) throws FlinkRuntimeException;1531689637;Checks if the Hadoop dependency is at least of the given version.;public static boolean isMinHadoopVersion(int major, int minor) throws FlinkRuntimeException {_		String versionString = VersionInfo.getVersion()__		String[] versionParts = versionString.split("\\.")___		if (versionParts.length < 2) {_			throw new FlinkRuntimeException(_					"Cannot determine version of Hadoop, unexpected version string: " + versionString)__		}__		int maj = Integer.parseInt(versionParts[0])__		int min = Integer.parseInt(versionParts[1])___		return maj > major || (maj == major && min >= minor)__	};checks,if,the,hadoop,dependency,is,at,least,of,the,given,version;public,static,boolean,is,min,hadoop,version,int,major,int,minor,throws,flink,runtime,exception,string,version,string,version,info,get,version,string,version,parts,version,string,split,if,version,parts,length,2,throw,new,flink,runtime,exception,cannot,determine,version,of,hadoop,unexpected,version,string,version,string,int,maj,integer,parse,int,version,parts,0,int,min,integer,parse,int,version,parts,1,return,maj,major,maj,major,min,minor
HadoopUtils -> public static boolean isMinHadoopVersion(int major, int minor) throws FlinkRuntimeException;1537293240;Checks if the Hadoop dependency is at least of the given version.;public static boolean isMinHadoopVersion(int major, int minor) throws FlinkRuntimeException {_		String versionString = VersionInfo.getVersion()__		String[] versionParts = versionString.split("\\.")___		if (versionParts.length < 2) {_			throw new FlinkRuntimeException(_					"Cannot determine version of Hadoop, unexpected version string: " + versionString)__		}__		int maj = Integer.parseInt(versionParts[0])__		int min = Integer.parseInt(versionParts[1])___		return maj > major || (maj == major && min >= minor)__	};checks,if,the,hadoop,dependency,is,at,least,of,the,given,version;public,static,boolean,is,min,hadoop,version,int,major,int,minor,throws,flink,runtime,exception,string,version,string,version,info,get,version,string,version,parts,version,string,split,if,version,parts,length,2,throw,new,flink,runtime,exception,cannot,determine,version,of,hadoop,unexpected,version,string,version,string,int,maj,integer,parse,int,version,parts,0,int,min,integer,parse,int,version,parts,1,return,maj,major,maj,major,min,minor
HadoopUtils -> public static boolean hasHDFSDelegationToken() throws Exception;1507304713;Indicates whether the current user has an HDFS delegation token.;public static boolean hasHDFSDelegationToken() throws Exception {_		UserGroupInformation loginUser = UserGroupInformation.getCurrentUser()__		Collection<Token<? extends TokenIdentifier>> usrTok = loginUser.getTokens()__		for (Token<? extends TokenIdentifier> token : usrTok) {_			if (token.getKind().equals(HDFS_DELEGATION_TOKEN_KIND)) {_				return true__			}_		}_		return false__	};indicates,whether,the,current,user,has,an,hdfs,delegation,token;public,static,boolean,has,hdfsdelegation,token,throws,exception,user,group,information,login,user,user,group,information,get,current,user,collection,token,extends,token,identifier,usr,tok,login,user,get,tokens,for,token,extends,token,identifier,token,usr,tok,if,token,get,kind,equals,return,true,return,false
HadoopUtils -> public static boolean hasHDFSDelegationToken() throws Exception;1509631466;Indicates whether the current user has an HDFS delegation token.;public static boolean hasHDFSDelegationToken() throws Exception {_		UserGroupInformation loginUser = UserGroupInformation.getCurrentUser()__		Collection<Token<? extends TokenIdentifier>> usrTok = loginUser.getTokens()__		for (Token<? extends TokenIdentifier> token : usrTok) {_			if (token.getKind().equals(HDFS_DELEGATION_TOKEN_KIND)) {_				return true__			}_		}_		return false__	};indicates,whether,the,current,user,has,an,hdfs,delegation,token;public,static,boolean,has,hdfsdelegation,token,throws,exception,user,group,information,login,user,user,group,information,get,current,user,collection,token,extends,token,identifier,usr,tok,login,user,get,tokens,for,token,extends,token,identifier,token,usr,tok,if,token,get,kind,equals,return,true,return,false
HadoopUtils -> public static boolean hasHDFSDelegationToken() throws Exception;1531689536;Indicates whether the current user has an HDFS delegation token.;public static boolean hasHDFSDelegationToken() throws Exception {_		UserGroupInformation loginUser = UserGroupInformation.getCurrentUser()__		Collection<Token<? extends TokenIdentifier>> usrTok = loginUser.getTokens()__		for (Token<? extends TokenIdentifier> token : usrTok) {_			if (token.getKind().equals(HDFS_DELEGATION_TOKEN_KIND)) {_				return true__			}_		}_		return false__	};indicates,whether,the,current,user,has,an,hdfs,delegation,token;public,static,boolean,has,hdfsdelegation,token,throws,exception,user,group,information,login,user,user,group,information,get,current,user,collection,token,extends,token,identifier,usr,tok,login,user,get,tokens,for,token,extends,token,identifier,token,usr,tok,if,token,get,kind,equals,return,true,return,false
HadoopUtils -> public static boolean hasHDFSDelegationToken() throws Exception;1531689637;Indicates whether the current user has an HDFS delegation token.;public static boolean hasHDFSDelegationToken() throws Exception {_		UserGroupInformation loginUser = UserGroupInformation.getCurrentUser()__		Collection<Token<? extends TokenIdentifier>> usrTok = loginUser.getTokens()__		for (Token<? extends TokenIdentifier> token : usrTok) {_			if (token.getKind().equals(HDFS_DELEGATION_TOKEN_KIND)) {_				return true__			}_		}_		return false__	};indicates,whether,the,current,user,has,an,hdfs,delegation,token;public,static,boolean,has,hdfsdelegation,token,throws,exception,user,group,information,login,user,user,group,information,get,current,user,collection,token,extends,token,identifier,usr,tok,login,user,get,tokens,for,token,extends,token,identifier,token,usr,tok,if,token,get,kind,equals,return,true,return,false
HadoopUtils -> public static boolean hasHDFSDelegationToken() throws Exception;1537293240;Indicates whether the current user has an HDFS delegation token.;public static boolean hasHDFSDelegationToken() throws Exception {_		UserGroupInformation loginUser = UserGroupInformation.getCurrentUser()__		Collection<Token<? extends TokenIdentifier>> usrTok = loginUser.getTokens()__		for (Token<? extends TokenIdentifier> token : usrTok) {_			if (token.getKind().equals(HDFS_DELEGATION_TOKEN_KIND)) {_				return true__			}_		}_		return false__	};indicates,whether,the,current,user,has,an,hdfs,delegation,token;public,static,boolean,has,hdfsdelegation,token,throws,exception,user,group,information,login,user,user,group,information,get,current,user,collection,token,extends,token,identifier,usr,tok,login,user,get,tokens,for,token,extends,token,identifier,token,usr,tok,if,token,get,kind,equals,return,true,return,false
