# id;timestamp;commentText;codeText;commentWords;codeWords
CoGroupITCase -> @Test 	public void testCoGroupTuplesWithKeyFieldSelector() throws Exception;1496173247;CoGroup on tuples with key field selector;@Test_	public void testCoGroupTuplesWithKeyFieldSelector() throws Exception {__		final ExecutionEnvironment env = ExecutionEnvironment.getExecutionEnvironment()___		DataSet<Tuple5<Integer, Long, Integer, String, Long>> ds = CollectionDataSets.get5TupleDataSet(env)__		DataSet<Tuple5<Integer, Long, Integer, String, Long>> ds2 = CollectionDataSets.get5TupleDataSet(env)__		DataSet<Tuple2<Integer, Integer>> coGroupDs = ds.coGroup(ds2).where(0).equalTo(0).with(new Tuple5CoGroup())___		List<Tuple2<Integer, Integer>> result = coGroupDs.collect()___		String expected = "1,0\n" +_				"2,6\n" +_				"3,24\n" +_				"4,60\n" +_				"5,120\n"___		compareResultAsTuples(result, expected)__	};co,group,on,tuples,with,key,field,selector;test,public,void,test,co,group,tuples,with,key,field,selector,throws,exception,final,execution,environment,env,execution,environment,get,execution,environment,data,set,tuple5,integer,long,integer,string,long,ds,collection,data,sets,get5tuple,data,set,env,data,set,tuple5,integer,long,integer,string,long,ds2,collection,data,sets,get5tuple,data,set,env,data,set,tuple2,integer,integer,co,group,ds,ds,co,group,ds2,where,0,equal,to,0,with,new,tuple5co,group,list,tuple2,integer,integer,result,co,group,ds,collect,string,expected,1,0,n,2,6,n,3,24,n,4,60,n,5,120,n,compare,result,as,tuples,result,expected
CoGroupITCase -> @Test 	public void testCoGroupTuplesWithKeyFieldSelector() throws Exception;1528109383;CoGroup on tuples with key field selector;@Test_	public void testCoGroupTuplesWithKeyFieldSelector() throws Exception {__		final ExecutionEnvironment env = ExecutionEnvironment.getExecutionEnvironment()___		DataSet<Tuple5<Integer, Long, Integer, String, Long>> ds = CollectionDataSets.get5TupleDataSet(env)__		DataSet<Tuple5<Integer, Long, Integer, String, Long>> ds2 = CollectionDataSets.get5TupleDataSet(env)__		DataSet<Tuple2<Integer, Integer>> coGroupDs = ds.coGroup(ds2).where(0).equalTo(0).with(new Tuple5CoGroup())___		List<Tuple2<Integer, Integer>> result = coGroupDs.collect()___		String expected = "1,0\n" +_				"2,6\n" +_				"3,24\n" +_				"4,60\n" +_				"5,120\n"___		compareResultAsTuples(result, expected)__	};co,group,on,tuples,with,key,field,selector;test,public,void,test,co,group,tuples,with,key,field,selector,throws,exception,final,execution,environment,env,execution,environment,get,execution,environment,data,set,tuple5,integer,long,integer,string,long,ds,collection,data,sets,get5tuple,data,set,env,data,set,tuple5,integer,long,integer,string,long,ds2,collection,data,sets,get5tuple,data,set,env,data,set,tuple2,integer,integer,co,group,ds,ds,co,group,ds2,where,0,equal,to,0,with,new,tuple5co,group,list,tuple2,integer,integer,result,co,group,ds,collect,string,expected,1,0,n,2,6,n,3,24,n,4,60,n,5,120,n,compare,result,as,tuples,result,expected
