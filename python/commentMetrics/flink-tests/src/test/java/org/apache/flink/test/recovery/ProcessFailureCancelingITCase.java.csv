# id;timestamp;commentText;codeText;commentWords;codeWords
ProcessFailureCancelingITCase -> static DispatcherGateway retrieveDispatcherGateway(RpcService rpcService, HighAvailabilityServices haServices) throws Exception;1537459194;Helper method to wait until the {@link Dispatcher} has set its fencing token.__@param rpcService to use to connect to the dispatcher_@param haServices high availability services to connect to the dispatcher_@return {@link DispatcherGateway}_@throws Exception if something goes wrong;static DispatcherGateway retrieveDispatcherGateway(RpcService rpcService, HighAvailabilityServices haServices) throws Exception {_		final LeaderConnectionInfo leaderConnectionInfo = LeaderRetrievalUtils.retrieveLeaderConnectionInfo(haServices.getDispatcherLeaderRetriever(), Time.seconds(10L))___		return rpcService.connect(_			leaderConnectionInfo.getAddress(),_			DispatcherId.fromUuid(leaderConnectionInfo.getLeaderSessionID()),_			DispatcherGateway.class).get()__	};helper,method,to,wait,until,the,link,dispatcher,has,set,its,fencing,token,param,rpc,service,to,use,to,connect,to,the,dispatcher,param,ha,services,high,availability,services,to,connect,to,the,dispatcher,return,link,dispatcher,gateway,throws,exception,if,something,goes,wrong;static,dispatcher,gateway,retrieve,dispatcher,gateway,rpc,service,rpc,service,high,availability,services,ha,services,throws,exception,final,leader,connection,info,leader,connection,info,leader,retrieval,utils,retrieve,leader,connection,info,ha,services,get,dispatcher,leader,retriever,time,seconds,10l,return,rpc,service,connect,leader,connection,info,get,address,dispatcher,id,from,uuid,leader,connection,info,get,leader,session,id,dispatcher,gateway,class,get
ProcessFailureCancelingITCase -> static DispatcherGateway retrieveDispatcherGateway(RpcService rpcService, HighAvailabilityServices haServices) throws Exception;1539269331;Helper method to wait until the {@link Dispatcher} has set its fencing token.__@param rpcService to use to connect to the dispatcher_@param haServices high availability services to connect to the dispatcher_@return {@link DispatcherGateway}_@throws Exception if something goes wrong;static DispatcherGateway retrieveDispatcherGateway(RpcService rpcService, HighAvailabilityServices haServices) throws Exception {_		final LeaderConnectionInfo leaderConnectionInfo = LeaderRetrievalUtils.retrieveLeaderConnectionInfo(haServices.getDispatcherLeaderRetriever(), Time.seconds(10L))___		return rpcService.connect(_			leaderConnectionInfo.getAddress(),_			DispatcherId.fromUuid(leaderConnectionInfo.getLeaderSessionID()),_			DispatcherGateway.class).get()__	};helper,method,to,wait,until,the,link,dispatcher,has,set,its,fencing,token,param,rpc,service,to,use,to,connect,to,the,dispatcher,param,ha,services,high,availability,services,to,connect,to,the,dispatcher,return,link,dispatcher,gateway,throws,exception,if,something,goes,wrong;static,dispatcher,gateway,retrieve,dispatcher,gateway,rpc,service,rpc,service,high,availability,services,ha,services,throws,exception,final,leader,connection,info,leader,connection,info,leader,retrieval,utils,retrieve,leader,connection,info,ha,services,get,dispatcher,leader,retriever,time,seconds,10l,return,rpc,service,connect,leader,connection,info,get,address,dispatcher,id,from,uuid,leader,connection,info,get,leader,session,id,dispatcher,gateway,class,get
ProcessFailureCancelingITCase -> static DispatcherGateway retrieveDispatcherGateway(RpcService rpcService, HighAvailabilityServices haServices) throws Exception;1539864635;Helper method to wait until the {@link Dispatcher} has set its fencing token.__@param rpcService to use to connect to the dispatcher_@param haServices high availability services to connect to the dispatcher_@return {@link DispatcherGateway}_@throws Exception if something goes wrong;static DispatcherGateway retrieveDispatcherGateway(RpcService rpcService, HighAvailabilityServices haServices) throws Exception {_		final LeaderConnectionInfo leaderConnectionInfo = LeaderRetrievalUtils.retrieveLeaderConnectionInfo(haServices.getDispatcherLeaderRetriever(), Time.seconds(10L))___		return rpcService.connect(_			leaderConnectionInfo.getAddress(),_			DispatcherId.fromUuid(leaderConnectionInfo.getLeaderSessionID()),_			DispatcherGateway.class).get()__	};helper,method,to,wait,until,the,link,dispatcher,has,set,its,fencing,token,param,rpc,service,to,use,to,connect,to,the,dispatcher,param,ha,services,high,availability,services,to,connect,to,the,dispatcher,return,link,dispatcher,gateway,throws,exception,if,something,goes,wrong;static,dispatcher,gateway,retrieve,dispatcher,gateway,rpc,service,rpc,service,high,availability,services,ha,services,throws,exception,final,leader,connection,info,leader,connection,info,leader,retrieval,utils,retrieve,leader,connection,info,ha,services,get,dispatcher,leader,retriever,time,seconds,10l,return,rpc,service,connect,leader,connection,info,get,address,dispatcher,id,from,uuid,leader,connection,info,get,leader,session,id,dispatcher,gateway,class,get
ProcessFailureCancelingITCase -> static DispatcherGateway retrieveDispatcherGateway(RpcService rpcService, HighAvailabilityServices haServices) throws Exception;1541086088;Helper method to wait until the {@link Dispatcher} has set its fencing token.__@param rpcService to use to connect to the dispatcher_@param haServices high availability services to connect to the dispatcher_@return {@link DispatcherGateway}_@throws Exception if something goes wrong;static DispatcherGateway retrieveDispatcherGateway(RpcService rpcService, HighAvailabilityServices haServices) throws Exception {_		final LeaderConnectionInfo leaderConnectionInfo = LeaderRetrievalUtils.retrieveLeaderConnectionInfo(haServices.getDispatcherLeaderRetriever(), Time.seconds(10L))___		return rpcService.connect(_			leaderConnectionInfo.getAddress(),_			DispatcherId.fromUuid(leaderConnectionInfo.getLeaderSessionID()),_			DispatcherGateway.class).get()__	};helper,method,to,wait,until,the,link,dispatcher,has,set,its,fencing,token,param,rpc,service,to,use,to,connect,to,the,dispatcher,param,ha,services,high,availability,services,to,connect,to,the,dispatcher,return,link,dispatcher,gateway,throws,exception,if,something,goes,wrong;static,dispatcher,gateway,retrieve,dispatcher,gateway,rpc,service,rpc,service,high,availability,services,ha,services,throws,exception,final,leader,connection,info,leader,connection,info,leader,retrieval,utils,retrieve,leader,connection,info,ha,services,get,dispatcher,leader,retriever,time,seconds,10l,return,rpc,service,connect,leader,connection,info,get,address,dispatcher,id,from,uuid,leader,connection,info,get,leader,session,id,dispatcher,gateway,class,get
ProcessFailureCancelingITCase -> static DispatcherGateway retrieveDispatcherGateway(RpcService rpcService, HighAvailabilityServices haServices) throws Exception;1542192035;Helper method to wait until the {@link Dispatcher} has set its fencing token.__@param rpcService to use to connect to the dispatcher_@param haServices high availability services to connect to the dispatcher_@return {@link DispatcherGateway}_@throws Exception if something goes wrong;static DispatcherGateway retrieveDispatcherGateway(RpcService rpcService, HighAvailabilityServices haServices) throws Exception {_		final LeaderConnectionInfo leaderConnectionInfo = LeaderRetrievalUtils.retrieveLeaderConnectionInfo(haServices.getDispatcherLeaderRetriever(), Time.seconds(10L))___		return rpcService.connect(_			leaderConnectionInfo.getAddress(),_			DispatcherId.fromUuid(leaderConnectionInfo.getLeaderSessionID()),_			DispatcherGateway.class).get()__	};helper,method,to,wait,until,the,link,dispatcher,has,set,its,fencing,token,param,rpc,service,to,use,to,connect,to,the,dispatcher,param,ha,services,high,availability,services,to,connect,to,the,dispatcher,return,link,dispatcher,gateway,throws,exception,if,something,goes,wrong;static,dispatcher,gateway,retrieve,dispatcher,gateway,rpc,service,rpc,service,high,availability,services,ha,services,throws,exception,final,leader,connection,info,leader,connection,info,leader,retrieval,utils,retrieve,leader,connection,info,ha,services,get,dispatcher,leader,retriever,time,seconds,10l,return,rpc,service,connect,leader,connection,info,get,address,dispatcher,id,from,uuid,leader,connection,info,get,leader,session,id,dispatcher,gateway,class,get
ProcessFailureCancelingITCase -> static DispatcherGateway retrieveDispatcherGateway(RpcService rpcService, HighAvailabilityServices haServices) throws Exception;1543336374;Helper method to wait until the {@link Dispatcher} has set its fencing token.__@param rpcService to use to connect to the dispatcher_@param haServices high availability services to connect to the dispatcher_@return {@link DispatcherGateway}_@throws Exception if something goes wrong;static DispatcherGateway retrieveDispatcherGateway(RpcService rpcService, HighAvailabilityServices haServices) throws Exception {_		final LeaderConnectionInfo leaderConnectionInfo = LeaderRetrievalUtils.retrieveLeaderConnectionInfo(haServices.getDispatcherLeaderRetriever(), Time.seconds(10L))___		return rpcService.connect(_			leaderConnectionInfo.getAddress(),_			DispatcherId.fromUuid(leaderConnectionInfo.getLeaderSessionID()),_			DispatcherGateway.class).get()__	};helper,method,to,wait,until,the,link,dispatcher,has,set,its,fencing,token,param,rpc,service,to,use,to,connect,to,the,dispatcher,param,ha,services,high,availability,services,to,connect,to,the,dispatcher,return,link,dispatcher,gateway,throws,exception,if,something,goes,wrong;static,dispatcher,gateway,retrieve,dispatcher,gateway,rpc,service,rpc,service,high,availability,services,ha,services,throws,exception,final,leader,connection,info,leader,connection,info,leader,retrieval,utils,retrieve,leader,connection,info,ha,services,get,dispatcher,leader,retriever,time,seconds,10l,return,rpc,service,connect,leader,connection,info,get,address,dispatcher,id,from,uuid,leader,connection,info,get,leader,session,id,dispatcher,gateway,class,get
ProcessFailureCancelingITCase -> static DispatcherGateway retrieveDispatcherGateway(RpcService rpcService, HighAvailabilityServices haServices) throws Exception;1545219916;Helper method to wait until the {@link Dispatcher} has set its fencing token.__@param rpcService to use to connect to the dispatcher_@param haServices high availability services to connect to the dispatcher_@return {@link DispatcherGateway}_@throws Exception if something goes wrong;static DispatcherGateway retrieveDispatcherGateway(RpcService rpcService, HighAvailabilityServices haServices) throws Exception {_		final LeaderConnectionInfo leaderConnectionInfo = LeaderRetrievalUtils.retrieveLeaderConnectionInfo(haServices.getDispatcherLeaderRetriever(), Time.seconds(10L))___		return rpcService.connect(_			leaderConnectionInfo.getAddress(),_			DispatcherId.fromUuid(leaderConnectionInfo.getLeaderSessionID()),_			DispatcherGateway.class).get()__	};helper,method,to,wait,until,the,link,dispatcher,has,set,its,fencing,token,param,rpc,service,to,use,to,connect,to,the,dispatcher,param,ha,services,high,availability,services,to,connect,to,the,dispatcher,return,link,dispatcher,gateway,throws,exception,if,something,goes,wrong;static,dispatcher,gateway,retrieve,dispatcher,gateway,rpc,service,rpc,service,high,availability,services,ha,services,throws,exception,final,leader,connection,info,leader,connection,info,leader,retrieval,utils,retrieve,leader,connection,info,ha,services,get,dispatcher,leader,retriever,time,seconds,10l,return,rpc,service,connect,leader,connection,info,get,address,dispatcher,id,from,uuid,leader,connection,info,get,leader,session,id,dispatcher,gateway,class,get
ProcessFailureCancelingITCase -> static DispatcherGateway retrieveDispatcherGateway(RpcService rpcService, HighAvailabilityServices haServices) throws Exception;1549983516;Helper method to wait until the {@link Dispatcher} has set its fencing token.__@param rpcService to use to connect to the dispatcher_@param haServices high availability services to connect to the dispatcher_@return {@link DispatcherGateway}_@throws Exception if something goes wrong;static DispatcherGateway retrieveDispatcherGateway(RpcService rpcService, HighAvailabilityServices haServices) throws Exception {_		final LeaderConnectionInfo leaderConnectionInfo = LeaderRetrievalUtils.retrieveLeaderConnectionInfo(haServices.getDispatcherLeaderRetriever(), Time.seconds(10L))___		return rpcService.connect(_			leaderConnectionInfo.getAddress(),_			DispatcherId.fromUuid(leaderConnectionInfo.getLeaderSessionID()),_			DispatcherGateway.class).get()__	};helper,method,to,wait,until,the,link,dispatcher,has,set,its,fencing,token,param,rpc,service,to,use,to,connect,to,the,dispatcher,param,ha,services,high,availability,services,to,connect,to,the,dispatcher,return,link,dispatcher,gateway,throws,exception,if,something,goes,wrong;static,dispatcher,gateway,retrieve,dispatcher,gateway,rpc,service,rpc,service,high,availability,services,ha,services,throws,exception,final,leader,connection,info,leader,connection,info,leader,retrieval,utils,retrieve,leader,connection,info,ha,services,get,dispatcher,leader,retriever,time,seconds,10l,return,rpc,service,connect,leader,connection,info,get,address,dispatcher,id,from,uuid,leader,connection,info,get,leader,session,id,dispatcher,gateway,class,get
