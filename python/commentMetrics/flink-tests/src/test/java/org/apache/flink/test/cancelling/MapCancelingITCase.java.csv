# id;timestamp;commentText;codeText;commentWords;codeWords
MapCancelingITCase -> public void testMapWithLongCancellingResponse() throws Exception;1404986750;@Test;public void testMapWithLongCancellingResponse() throws Exception {_		GenericDataSource<InfiniteIntegerInputFormat> source = new GenericDataSource<InfiniteIntegerInputFormat>(_																		new InfiniteIntegerInputFormat(), "Source")__		MapOperator mapper = MapOperator.builder(LongCancelTimeIdentityMapper.class)_			.input(source)_			.name("Long Cancelling Time Mapper")_			.build()__		GenericDataSink sink = new GenericDataSink(new DiscardingOutputFormat(), mapper, "Sink")__		_		_		Plan p = new Plan(sink)__		p.setDefaultParallelism(DOP)__		_		runAndCancelJob(p, 10 * 1000, 10 * 1000)__	};test;public,void,test,map,with,long,cancelling,response,throws,exception,generic,data,source,infinite,integer,input,format,source,new,generic,data,source,infinite,integer,input,format,new,infinite,integer,input,format,source,map,operator,mapper,map,operator,builder,long,cancel,time,identity,mapper,class,input,source,name,long,cancelling,time,mapper,build,generic,data,sink,sink,new,generic,data,sink,new,discarding,output,format,mapper,sink,plan,p,new,plan,sink,p,set,default,parallelism,dop,run,and,cancel,job,p,10,1000,10,1000
MapCancelingITCase -> public void testMapWithLongCancellingResponse() throws Exception;1405088715;@Test;public void testMapWithLongCancellingResponse() throws Exception {_		GenericDataSource<InfiniteIntegerInputFormat> source = new GenericDataSource<InfiniteIntegerInputFormat>(_																		new InfiniteIntegerInputFormat(), "Source")__		MapOperator mapper = MapOperator.builder(LongCancelTimeIdentityMapper.class)_			.input(source)_			.name("Long Cancelling Time Mapper")_			.build()__		GenericDataSink sink = new GenericDataSink(new DiscardingOutputFormat(), mapper, "Sink")__		_		_		Plan p = new Plan(sink)__		p.setDefaultParallelism(DOP)__		_		runAndCancelJob(p, 10 * 1000, 10 * 1000)__	};test;public,void,test,map,with,long,cancelling,response,throws,exception,generic,data,source,infinite,integer,input,format,source,new,generic,data,source,infinite,integer,input,format,new,infinite,integer,input,format,source,map,operator,mapper,map,operator,builder,long,cancel,time,identity,mapper,class,input,source,name,long,cancelling,time,mapper,build,generic,data,sink,sink,new,generic,data,sink,new,discarding,output,format,mapper,sink,plan,p,new,plan,sink,p,set,default,parallelism,dop,run,and,cancel,job,p,10,1000,10,1000
MapCancelingITCase -> public void testMapWithLongCancellingResponse() throws Exception;1410904939;@Test;public void testMapWithLongCancellingResponse() throws Exception {_		GenericDataSource<InfiniteIntegerInputFormat> source = new GenericDataSource<InfiniteIntegerInputFormat>(_																		new InfiniteIntegerInputFormat(), "Source")__		MapOperator mapper = MapOperator.builder(LongCancelTimeIdentityMapper.class)_			.input(source)_			.name("Long Cancelling Time Mapper")_			.build()__		GenericDataSink sink = new GenericDataSink(new DiscardingOutputFormat(), mapper, "Sink")__		_		_		Plan p = new Plan(sink)__		p.setDefaultParallelism(DOP)__		_		runAndCancelJob(p, 10 * 1000, 10 * 1000)__	};test;public,void,test,map,with,long,cancelling,response,throws,exception,generic,data,source,infinite,integer,input,format,source,new,generic,data,source,infinite,integer,input,format,new,infinite,integer,input,format,source,map,operator,mapper,map,operator,builder,long,cancel,time,identity,mapper,class,input,source,name,long,cancelling,time,mapper,build,generic,data,sink,sink,new,generic,data,sink,new,discarding,output,format,mapper,sink,plan,p,new,plan,sink,p,set,default,parallelism,dop,run,and,cancel,job,p,10,1000,10,1000
MapCancelingITCase -> public void testMapWithLongCancellingResponse() throws Exception;1411473561;@Test;public void testMapWithLongCancellingResponse() throws Exception {_		GenericDataSource<InfiniteIntegerInputFormat> source = new GenericDataSource<InfiniteIntegerInputFormat>(_																		new InfiniteIntegerInputFormat(), "Source")__		MapOperator mapper = MapOperator.builder(LongCancelTimeIdentityMapper.class)_			.input(source)_			.name("Long Cancelling Time Mapper")_			.build()__		GenericDataSink sink = new GenericDataSink(new DiscardingOutputFormat(), mapper, "Sink")__		_		_		Plan p = new Plan(sink)__		p.setDefaultParallelism(DOP)__		_		runAndCancelJob(p, 10 * 1000, 10 * 1000)__	};test;public,void,test,map,with,long,cancelling,response,throws,exception,generic,data,source,infinite,integer,input,format,source,new,generic,data,source,infinite,integer,input,format,new,infinite,integer,input,format,source,map,operator,mapper,map,operator,builder,long,cancel,time,identity,mapper,class,input,source,name,long,cancelling,time,mapper,build,generic,data,sink,sink,new,generic,data,sink,new,discarding,output,format,mapper,sink,plan,p,new,plan,sink,p,set,default,parallelism,dop,run,and,cancel,job,p,10,1000,10,1000
MapCancelingITCase -> public void testMapWithLongCancellingResponse() throws Exception;1413224675;@Test;public void testMapWithLongCancellingResponse() throws Exception {_		GenericDataSource<InfiniteIntegerInputFormat> source = new GenericDataSource<InfiniteIntegerInputFormat>(_																		new InfiniteIntegerInputFormat(), "Source")__		MapOperator mapper = MapOperator.builder(LongCancelTimeIdentityMapper.class)_			.input(source)_			.name("Long Cancelling Time Mapper")_			.build()__		GenericDataSink sink = new GenericDataSink(new DiscardingOutputFormat(), mapper, "Sink")__		_		_		Plan p = new Plan(sink)__		p.setDefaultParallelism(DOP)__		_		runAndCancelJob(p, 10 * 1000, 10 * 1000)__	};test;public,void,test,map,with,long,cancelling,response,throws,exception,generic,data,source,infinite,integer,input,format,source,new,generic,data,source,infinite,integer,input,format,new,infinite,integer,input,format,source,map,operator,mapper,map,operator,builder,long,cancel,time,identity,mapper,class,input,source,name,long,cancelling,time,mapper,build,generic,data,sink,sink,new,generic,data,sink,new,discarding,output,format,mapper,sink,plan,p,new,plan,sink,p,set,default,parallelism,dop,run,and,cancel,job,p,10,1000,10,1000
MapCancelingITCase -> public void testMapWithLongCancellingResponse() throws Exception;1426671883;@Test;public void testMapWithLongCancellingResponse() throws Exception {_		GenericDataSource<InfiniteIntegerInputFormat> source = new GenericDataSource<InfiniteIntegerInputFormat>(_																		new InfiniteIntegerInputFormat(), "Source")__		MapOperator mapper = MapOperator.builder(LongCancelTimeIdentityMapper.class)_			.input(source)_			.name("Long Cancelling Time Mapper")_			.build()__		GenericDataSink sink = new GenericDataSink(new DiscardingOutputFormat(), mapper, "Sink")__		_		_		Plan p = new Plan(sink)__		p.setDefaultParallelism(parallelism)__		_		runAndCancelJob(p, 10 * 1000, 10 * 1000)__	};test;public,void,test,map,with,long,cancelling,response,throws,exception,generic,data,source,infinite,integer,input,format,source,new,generic,data,source,infinite,integer,input,format,new,infinite,integer,input,format,source,map,operator,mapper,map,operator,builder,long,cancel,time,identity,mapper,class,input,source,name,long,cancelling,time,mapper,build,generic,data,sink,sink,new,generic,data,sink,new,discarding,output,format,mapper,sink,plan,p,new,plan,sink,p,set,default,parallelism,parallelism,run,and,cancel,job,p,10,1000,10,1000
MapCancelingITCase -> public void testMapPriorToFirstRecordReading() throws Exception;1404986750;@Test;public void testMapPriorToFirstRecordReading() throws Exception {_		GenericDataSource<InfiniteIntegerInputFormat> source = new GenericDataSource<InfiniteIntegerInputFormat>(_																		new InfiniteIntegerInputFormat(), "Source")__		MapOperator mapper = MapOperator.builder(StuckInOpenIdentityMapper.class)_			.input(source)_			.name("Stuck-In-Open Mapper")_			.build()__		GenericDataSink sink = new GenericDataSink(new DiscardingOutputFormat(), mapper, "Sink")__		_		_		Plan p = new Plan(sink)__		p.setDefaultParallelism(DOP)__		_		runAndCancelJob(p, 10 * 1000, 10 * 1000)__	};test;public,void,test,map,prior,to,first,record,reading,throws,exception,generic,data,source,infinite,integer,input,format,source,new,generic,data,source,infinite,integer,input,format,new,infinite,integer,input,format,source,map,operator,mapper,map,operator,builder,stuck,in,open,identity,mapper,class,input,source,name,stuck,in,open,mapper,build,generic,data,sink,sink,new,generic,data,sink,new,discarding,output,format,mapper,sink,plan,p,new,plan,sink,p,set,default,parallelism,dop,run,and,cancel,job,p,10,1000,10,1000
MapCancelingITCase -> public void testMapPriorToFirstRecordReading() throws Exception;1405088715;@Test;public void testMapPriorToFirstRecordReading() throws Exception {_		GenericDataSource<InfiniteIntegerInputFormat> source = new GenericDataSource<InfiniteIntegerInputFormat>(_																		new InfiniteIntegerInputFormat(), "Source")__		MapOperator mapper = MapOperator.builder(StuckInOpenIdentityMapper.class)_			.input(source)_			.name("Stuck-In-Open Mapper")_			.build()__		GenericDataSink sink = new GenericDataSink(new DiscardingOutputFormat(), mapper, "Sink")__		_		_		Plan p = new Plan(sink)__		p.setDefaultParallelism(DOP)__		_		runAndCancelJob(p, 10 * 1000, 10 * 1000)__	};test;public,void,test,map,prior,to,first,record,reading,throws,exception,generic,data,source,infinite,integer,input,format,source,new,generic,data,source,infinite,integer,input,format,new,infinite,integer,input,format,source,map,operator,mapper,map,operator,builder,stuck,in,open,identity,mapper,class,input,source,name,stuck,in,open,mapper,build,generic,data,sink,sink,new,generic,data,sink,new,discarding,output,format,mapper,sink,plan,p,new,plan,sink,p,set,default,parallelism,dop,run,and,cancel,job,p,10,1000,10,1000
MapCancelingITCase -> public void testMapPriorToFirstRecordReading() throws Exception;1410904939;@Test;public void testMapPriorToFirstRecordReading() throws Exception {_		GenericDataSource<InfiniteIntegerInputFormat> source = new GenericDataSource<InfiniteIntegerInputFormat>(_																		new InfiniteIntegerInputFormat(), "Source")__		MapOperator mapper = MapOperator.builder(StuckInOpenIdentityMapper.class)_			.input(source)_			.name("Stuck-In-Open Mapper")_			.build()__		GenericDataSink sink = new GenericDataSink(new DiscardingOutputFormat(), mapper, "Sink")__		_		_		Plan p = new Plan(sink)__		p.setDefaultParallelism(DOP)__		_		runAndCancelJob(p, 10 * 1000, 10 * 1000)__	};test;public,void,test,map,prior,to,first,record,reading,throws,exception,generic,data,source,infinite,integer,input,format,source,new,generic,data,source,infinite,integer,input,format,new,infinite,integer,input,format,source,map,operator,mapper,map,operator,builder,stuck,in,open,identity,mapper,class,input,source,name,stuck,in,open,mapper,build,generic,data,sink,sink,new,generic,data,sink,new,discarding,output,format,mapper,sink,plan,p,new,plan,sink,p,set,default,parallelism,dop,run,and,cancel,job,p,10,1000,10,1000
MapCancelingITCase -> public void testMapPriorToFirstRecordReading() throws Exception;1411473561;@Test;public void testMapPriorToFirstRecordReading() throws Exception {_		GenericDataSource<InfiniteIntegerInputFormat> source = new GenericDataSource<InfiniteIntegerInputFormat>(_																		new InfiniteIntegerInputFormat(), "Source")__		MapOperator mapper = MapOperator.builder(StuckInOpenIdentityMapper.class)_			.input(source)_			.name("Stuck-In-Open Mapper")_			.build()__		GenericDataSink sink = new GenericDataSink(new DiscardingOutputFormat(), mapper, "Sink")__		_		_		Plan p = new Plan(sink)__		p.setDefaultParallelism(DOP)__		_		runAndCancelJob(p, 10 * 1000, 10 * 1000)__	};test;public,void,test,map,prior,to,first,record,reading,throws,exception,generic,data,source,infinite,integer,input,format,source,new,generic,data,source,infinite,integer,input,format,new,infinite,integer,input,format,source,map,operator,mapper,map,operator,builder,stuck,in,open,identity,mapper,class,input,source,name,stuck,in,open,mapper,build,generic,data,sink,sink,new,generic,data,sink,new,discarding,output,format,mapper,sink,plan,p,new,plan,sink,p,set,default,parallelism,dop,run,and,cancel,job,p,10,1000,10,1000
MapCancelingITCase -> public void testMapPriorToFirstRecordReading() throws Exception;1413224675;@Test;public void testMapPriorToFirstRecordReading() throws Exception {_		GenericDataSource<InfiniteIntegerInputFormat> source = new GenericDataSource<InfiniteIntegerInputFormat>(_																		new InfiniteIntegerInputFormat(), "Source")__		MapOperator mapper = MapOperator.builder(StuckInOpenIdentityMapper.class)_			.input(source)_			.name("Stuck-In-Open Mapper")_			.build()__		GenericDataSink sink = new GenericDataSink(new DiscardingOutputFormat(), mapper, "Sink")__		_		_		Plan p = new Plan(sink)__		p.setDefaultParallelism(DOP)__		_		runAndCancelJob(p, 10 * 1000, 10 * 1000)__	};test;public,void,test,map,prior,to,first,record,reading,throws,exception,generic,data,source,infinite,integer,input,format,source,new,generic,data,source,infinite,integer,input,format,new,infinite,integer,input,format,source,map,operator,mapper,map,operator,builder,stuck,in,open,identity,mapper,class,input,source,name,stuck,in,open,mapper,build,generic,data,sink,sink,new,generic,data,sink,new,discarding,output,format,mapper,sink,plan,p,new,plan,sink,p,set,default,parallelism,dop,run,and,cancel,job,p,10,1000,10,1000
MapCancelingITCase -> public void testMapPriorToFirstRecordReading() throws Exception;1426671883;@Test;public void testMapPriorToFirstRecordReading() throws Exception {_		GenericDataSource<InfiniteIntegerInputFormat> source = new GenericDataSource<InfiniteIntegerInputFormat>(_																		new InfiniteIntegerInputFormat(), "Source")__		MapOperator mapper = MapOperator.builder(StuckInOpenIdentityMapper.class)_			.input(source)_			.name("Stuck-In-Open Mapper")_			.build()__		GenericDataSink sink = new GenericDataSink(new DiscardingOutputFormat(), mapper, "Sink")__		_		_		Plan p = new Plan(sink)__		p.setDefaultParallelism(parallelism)__		_		runAndCancelJob(p, 10 * 1000, 10 * 1000)__	};test;public,void,test,map,prior,to,first,record,reading,throws,exception,generic,data,source,infinite,integer,input,format,source,new,generic,data,source,infinite,integer,input,format,new,infinite,integer,input,format,source,map,operator,mapper,map,operator,builder,stuck,in,open,identity,mapper,class,input,source,name,stuck,in,open,mapper,build,generic,data,sink,sink,new,generic,data,sink,new,discarding,output,format,mapper,sink,plan,p,new,plan,sink,p,set,default,parallelism,parallelism,run,and,cancel,job,p,10,1000,10,1000
MapCancelingITCase -> public void testMapCancelling() throws Exception;1404986750;@Test;public void testMapCancelling() throws Exception {_		GenericDataSource<InfiniteIntegerInputFormat> source = new GenericDataSource<InfiniteIntegerInputFormat>(_																		new InfiniteIntegerInputFormat(), "Source")__		MapOperator mapper = MapOperator.builder(IdentityMapper.class)_			.input(source)_			.name("Identity Mapper")_			.build()__		GenericDataSink sink = new GenericDataSink(new DiscardingOutputFormat(), mapper, "Sink")__		_		_		Plan p = new Plan(sink)__		p.setDefaultParallelism(DOP)__		_		runAndCancelJob(p, 5 * 1000, 10 * 1000)__	};test;public,void,test,map,cancelling,throws,exception,generic,data,source,infinite,integer,input,format,source,new,generic,data,source,infinite,integer,input,format,new,infinite,integer,input,format,source,map,operator,mapper,map,operator,builder,identity,mapper,class,input,source,name,identity,mapper,build,generic,data,sink,sink,new,generic,data,sink,new,discarding,output,format,mapper,sink,plan,p,new,plan,sink,p,set,default,parallelism,dop,run,and,cancel,job,p,5,1000,10,1000
MapCancelingITCase -> public void testMapCancelling() throws Exception;1405088715;@Test;public void testMapCancelling() throws Exception {_		GenericDataSource<InfiniteIntegerInputFormat> source = new GenericDataSource<InfiniteIntegerInputFormat>(_																		new InfiniteIntegerInputFormat(), "Source")__		MapOperator mapper = MapOperator.builder(IdentityMapper.class)_			.input(source)_			.name("Identity Mapper")_			.build()__		GenericDataSink sink = new GenericDataSink(new DiscardingOutputFormat(), mapper, "Sink")__		_		_		Plan p = new Plan(sink)__		p.setDefaultParallelism(DOP)__		_		runAndCancelJob(p, 5 * 1000, 10 * 1000)__	};test;public,void,test,map,cancelling,throws,exception,generic,data,source,infinite,integer,input,format,source,new,generic,data,source,infinite,integer,input,format,new,infinite,integer,input,format,source,map,operator,mapper,map,operator,builder,identity,mapper,class,input,source,name,identity,mapper,build,generic,data,sink,sink,new,generic,data,sink,new,discarding,output,format,mapper,sink,plan,p,new,plan,sink,p,set,default,parallelism,dop,run,and,cancel,job,p,5,1000,10,1000
MapCancelingITCase -> public void testMapCancelling() throws Exception;1410904939;@Test;public void testMapCancelling() throws Exception {_		GenericDataSource<InfiniteIntegerInputFormat> source = new GenericDataSource<InfiniteIntegerInputFormat>(_																		new InfiniteIntegerInputFormat(), "Source")__		MapOperator mapper = MapOperator.builder(IdentityMapper.class)_			.input(source)_			.name("Identity Mapper")_			.build()__		GenericDataSink sink = new GenericDataSink(new DiscardingOutputFormat(), mapper, "Sink")__		_		_		Plan p = new Plan(sink)__		p.setDefaultParallelism(DOP)__		_		runAndCancelJob(p, 5 * 1000, 10 * 1000)__	};test;public,void,test,map,cancelling,throws,exception,generic,data,source,infinite,integer,input,format,source,new,generic,data,source,infinite,integer,input,format,new,infinite,integer,input,format,source,map,operator,mapper,map,operator,builder,identity,mapper,class,input,source,name,identity,mapper,build,generic,data,sink,sink,new,generic,data,sink,new,discarding,output,format,mapper,sink,plan,p,new,plan,sink,p,set,default,parallelism,dop,run,and,cancel,job,p,5,1000,10,1000
MapCancelingITCase -> public void testMapCancelling() throws Exception;1411473561;@Test;public void testMapCancelling() throws Exception {_		GenericDataSource<InfiniteIntegerInputFormat> source = new GenericDataSource<InfiniteIntegerInputFormat>(_																		new InfiniteIntegerInputFormat(), "Source")__		MapOperator mapper = MapOperator.builder(IdentityMapper.class)_			.input(source)_			.name("Identity Mapper")_			.build()__		GenericDataSink sink = new GenericDataSink(new DiscardingOutputFormat(), mapper, "Sink")__		_		_		Plan p = new Plan(sink)__		p.setDefaultParallelism(DOP)__		_		runAndCancelJob(p, 5 * 1000, 10 * 1000)__	};test;public,void,test,map,cancelling,throws,exception,generic,data,source,infinite,integer,input,format,source,new,generic,data,source,infinite,integer,input,format,new,infinite,integer,input,format,source,map,operator,mapper,map,operator,builder,identity,mapper,class,input,source,name,identity,mapper,build,generic,data,sink,sink,new,generic,data,sink,new,discarding,output,format,mapper,sink,plan,p,new,plan,sink,p,set,default,parallelism,dop,run,and,cancel,job,p,5,1000,10,1000
MapCancelingITCase -> public void testMapCancelling() throws Exception;1413224675;@Test;public void testMapCancelling() throws Exception {_		GenericDataSource<InfiniteIntegerInputFormat> source = new GenericDataSource<InfiniteIntegerInputFormat>(_																		new InfiniteIntegerInputFormat(), "Source")__		MapOperator mapper = MapOperator.builder(IdentityMapper.class)_			.input(source)_			.name("Identity Mapper")_			.build()__		GenericDataSink sink = new GenericDataSink(new DiscardingOutputFormat(), mapper, "Sink")__		_		_		Plan p = new Plan(sink)__		p.setDefaultParallelism(DOP)__		_		runAndCancelJob(p, 5 * 1000, 10 * 1000)__	};test;public,void,test,map,cancelling,throws,exception,generic,data,source,infinite,integer,input,format,source,new,generic,data,source,infinite,integer,input,format,new,infinite,integer,input,format,source,map,operator,mapper,map,operator,builder,identity,mapper,class,input,source,name,identity,mapper,build,generic,data,sink,sink,new,generic,data,sink,new,discarding,output,format,mapper,sink,plan,p,new,plan,sink,p,set,default,parallelism,dop,run,and,cancel,job,p,5,1000,10,1000
MapCancelingITCase -> public void testMapCancelling() throws Exception;1426671883;@Test;public void testMapCancelling() throws Exception {_		GenericDataSource<InfiniteIntegerInputFormat> source = new GenericDataSource<InfiniteIntegerInputFormat>(_																		new InfiniteIntegerInputFormat(), "Source")__		MapOperator mapper = MapOperator.builder(IdentityMapper.class)_			.input(source)_			.name("Identity Mapper")_			.build()__		GenericDataSink sink = new GenericDataSink(new DiscardingOutputFormat(), mapper, "Sink")__		_		_		Plan p = new Plan(sink)__		p.setDefaultParallelism(parallelism)__		_		runAndCancelJob(p, 5 * 1000, 10 * 1000)__	};test;public,void,test,map,cancelling,throws,exception,generic,data,source,infinite,integer,input,format,source,new,generic,data,source,infinite,integer,input,format,new,infinite,integer,input,format,source,map,operator,mapper,map,operator,builder,identity,mapper,class,input,source,name,identity,mapper,build,generic,data,sink,sink,new,generic,data,sink,new,discarding,output,format,mapper,sink,plan,p,new,plan,sink,p,set,default,parallelism,parallelism,run,and,cancel,job,p,5,1000,10,1000
MapCancelingITCase -> public void testSlowMapCancelling() throws Exception;1404986750;@Test;public void testSlowMapCancelling() throws Exception {_		GenericDataSource<InfiniteIntegerInputFormat> source = new GenericDataSource<InfiniteIntegerInputFormat>(_																		new InfiniteIntegerInputFormat(), "Source")__		MapOperator mapper = MapOperator.builder(DelayingIdentityMapper.class)_			.input(source)_			.name("Delay Mapper")_			.build()__		GenericDataSink sink = new GenericDataSink(new DiscardingOutputFormat(), mapper, "Sink")__		_		_		Plan p = new Plan(sink)__		p.setDefaultParallelism(DOP)__		_		runAndCancelJob(p, 5 * 1000, 10 * 1000)__	};test;public,void,test,slow,map,cancelling,throws,exception,generic,data,source,infinite,integer,input,format,source,new,generic,data,source,infinite,integer,input,format,new,infinite,integer,input,format,source,map,operator,mapper,map,operator,builder,delaying,identity,mapper,class,input,source,name,delay,mapper,build,generic,data,sink,sink,new,generic,data,sink,new,discarding,output,format,mapper,sink,plan,p,new,plan,sink,p,set,default,parallelism,dop,run,and,cancel,job,p,5,1000,10,1000
MapCancelingITCase -> public void testSlowMapCancelling() throws Exception;1405088715;@Test;public void testSlowMapCancelling() throws Exception {_		GenericDataSource<InfiniteIntegerInputFormat> source = new GenericDataSource<InfiniteIntegerInputFormat>(_																		new InfiniteIntegerInputFormat(), "Source")__		MapOperator mapper = MapOperator.builder(DelayingIdentityMapper.class)_			.input(source)_			.name("Delay Mapper")_			.build()__		GenericDataSink sink = new GenericDataSink(new DiscardingOutputFormat(), mapper, "Sink")__		_		_		Plan p = new Plan(sink)__		p.setDefaultParallelism(DOP)__		_		runAndCancelJob(p, 5 * 1000, 10 * 1000)__	};test;public,void,test,slow,map,cancelling,throws,exception,generic,data,source,infinite,integer,input,format,source,new,generic,data,source,infinite,integer,input,format,new,infinite,integer,input,format,source,map,operator,mapper,map,operator,builder,delaying,identity,mapper,class,input,source,name,delay,mapper,build,generic,data,sink,sink,new,generic,data,sink,new,discarding,output,format,mapper,sink,plan,p,new,plan,sink,p,set,default,parallelism,dop,run,and,cancel,job,p,5,1000,10,1000
MapCancelingITCase -> public void testSlowMapCancelling() throws Exception;1410904939;@Test;public void testSlowMapCancelling() throws Exception {_		GenericDataSource<InfiniteIntegerInputFormat> source = new GenericDataSource<InfiniteIntegerInputFormat>(_																		new InfiniteIntegerInputFormat(), "Source")__		MapOperator mapper = MapOperator.builder(DelayingIdentityMapper.class)_			.input(source)_			.name("Delay Mapper")_			.build()__		GenericDataSink sink = new GenericDataSink(new DiscardingOutputFormat(), mapper, "Sink")__		_		_		Plan p = new Plan(sink)__		p.setDefaultParallelism(DOP)__		_		runAndCancelJob(p, 5 * 1000, 10 * 1000)__	};test;public,void,test,slow,map,cancelling,throws,exception,generic,data,source,infinite,integer,input,format,source,new,generic,data,source,infinite,integer,input,format,new,infinite,integer,input,format,source,map,operator,mapper,map,operator,builder,delaying,identity,mapper,class,input,source,name,delay,mapper,build,generic,data,sink,sink,new,generic,data,sink,new,discarding,output,format,mapper,sink,plan,p,new,plan,sink,p,set,default,parallelism,dop,run,and,cancel,job,p,5,1000,10,1000
MapCancelingITCase -> public void testSlowMapCancelling() throws Exception;1411473561;@Test;public void testSlowMapCancelling() throws Exception {_		GenericDataSource<InfiniteIntegerInputFormat> source = new GenericDataSource<InfiniteIntegerInputFormat>(_																		new InfiniteIntegerInputFormat(), "Source")__		MapOperator mapper = MapOperator.builder(DelayingIdentityMapper.class)_			.input(source)_			.name("Delay Mapper")_			.build()__		GenericDataSink sink = new GenericDataSink(new DiscardingOutputFormat(), mapper, "Sink")__		_		_		Plan p = new Plan(sink)__		p.setDefaultParallelism(DOP)__		_		runAndCancelJob(p, 5 * 1000, 10 * 1000)__	};test;public,void,test,slow,map,cancelling,throws,exception,generic,data,source,infinite,integer,input,format,source,new,generic,data,source,infinite,integer,input,format,new,infinite,integer,input,format,source,map,operator,mapper,map,operator,builder,delaying,identity,mapper,class,input,source,name,delay,mapper,build,generic,data,sink,sink,new,generic,data,sink,new,discarding,output,format,mapper,sink,plan,p,new,plan,sink,p,set,default,parallelism,dop,run,and,cancel,job,p,5,1000,10,1000
MapCancelingITCase -> public void testSlowMapCancelling() throws Exception;1413224675;@Test;public void testSlowMapCancelling() throws Exception {_		GenericDataSource<InfiniteIntegerInputFormat> source = new GenericDataSource<InfiniteIntegerInputFormat>(_																		new InfiniteIntegerInputFormat(), "Source")__		MapOperator mapper = MapOperator.builder(DelayingIdentityMapper.class)_			.input(source)_			.name("Delay Mapper")_			.build()__		GenericDataSink sink = new GenericDataSink(new DiscardingOutputFormat(), mapper, "Sink")__		_		_		Plan p = new Plan(sink)__		p.setDefaultParallelism(DOP)__		_		runAndCancelJob(p, 5 * 1000, 10 * 1000)__	};test;public,void,test,slow,map,cancelling,throws,exception,generic,data,source,infinite,integer,input,format,source,new,generic,data,source,infinite,integer,input,format,new,infinite,integer,input,format,source,map,operator,mapper,map,operator,builder,delaying,identity,mapper,class,input,source,name,delay,mapper,build,generic,data,sink,sink,new,generic,data,sink,new,discarding,output,format,mapper,sink,plan,p,new,plan,sink,p,set,default,parallelism,dop,run,and,cancel,job,p,5,1000,10,1000
MapCancelingITCase -> public void testSlowMapCancelling() throws Exception;1426671883;@Test;public void testSlowMapCancelling() throws Exception {_		GenericDataSource<InfiniteIntegerInputFormat> source = new GenericDataSource<InfiniteIntegerInputFormat>(_																		new InfiniteIntegerInputFormat(), "Source")__		MapOperator mapper = MapOperator.builder(DelayingIdentityMapper.class)_			.input(source)_			.name("Delay Mapper")_			.build()__		GenericDataSink sink = new GenericDataSink(new DiscardingOutputFormat(), mapper, "Sink")__		_		_		Plan p = new Plan(sink)__		p.setDefaultParallelism(parallelism)__		_		runAndCancelJob(p, 5 * 1000, 10 * 1000)__	};test;public,void,test,slow,map,cancelling,throws,exception,generic,data,source,infinite,integer,input,format,source,new,generic,data,source,infinite,integer,input,format,new,infinite,integer,input,format,source,map,operator,mapper,map,operator,builder,delaying,identity,mapper,class,input,source,name,delay,mapper,build,generic,data,sink,sink,new,generic,data,sink,new,discarding,output,format,mapper,sink,plan,p,new,plan,sink,p,set,default,parallelism,parallelism,run,and,cancel,job,p,5,1000,10,1000
