# id;timestamp;commentText;codeText;commentWords;codeWords
DataStreamPojoITCase -> @Test 	public void testCompositeKeyOnNestedPojo() throws Exception;1463939330;Test composite key on the Data POJO (with nested fields);@Test_	public void testCompositeKeyOnNestedPojo() throws Exception {_		StreamExecutionEnvironment see = StreamExecutionEnvironment.getExecutionEnvironment()__		see.getConfig().disableObjectReuse()__		see.setParallelism(3)___		DataStream<Data> dataStream = see.fromCollection(elements)___		DataStream<Data> summedStream = dataStream_				.keyBy("aaa", "abc", "wxyz")_				.sum("sum")_				.keyBy("aaa", "abc", "wxyz")_				.flatMap(new FlatMapFunction<Data, Data>() {_					private static final long serialVersionUID = 788865239171396315L__					Data[] first = new Data[3]__					@Override_					public void flatMap(Data value, Collector<Data> out) throws Exception {_						if(first[value.aaa] == null) {_							first[value.aaa] = value__							if(value.sum != 1) {_								throw new RuntimeException("Expected the sum to be one")__							}_						} else {_							if(value.sum != 2) {_								throw new RuntimeException("Expected the sum to be two")__							}_							if(first[value.aaa].aaa != value.aaa) {_								throw new RuntimeException("aaa key wrong")__							}_							if(first[value.aaa].abc != value.abc) {_								throw new RuntimeException("abc key wrong")__							}_							if(first[value.aaa].wxyz != value.wxyz) {_								throw new RuntimeException("wxyz key wrong")__							}_						}_					}_				})___		summedStream.print()___		see.execute()__	};test,composite,key,on,the,data,pojo,with,nested,fields;test,public,void,test,composite,key,on,nested,pojo,throws,exception,stream,execution,environment,see,stream,execution,environment,get,execution,environment,see,get,config,disable,object,reuse,see,set,parallelism,3,data,stream,data,data,stream,see,from,collection,elements,data,stream,data,summed,stream,data,stream,key,by,aaa,abc,wxyz,sum,sum,key,by,aaa,abc,wxyz,flat,map,new,flat,map,function,data,data,private,static,final,long,serial,version,uid,788865239171396315l,data,first,new,data,3,override,public,void,flat,map,data,value,collector,data,out,throws,exception,if,first,value,aaa,null,first,value,aaa,value,if,value,sum,1,throw,new,runtime,exception,expected,the,sum,to,be,one,else,if,value,sum,2,throw,new,runtime,exception,expected,the,sum,to,be,two,if,first,value,aaa,aaa,value,aaa,throw,new,runtime,exception,aaa,key,wrong,if,first,value,aaa,abc,value,abc,throw,new,runtime,exception,abc,key,wrong,if,first,value,aaa,wxyz,value,wxyz,throw,new,runtime,exception,wxyz,key,wrong,summed,stream,print,see,execute
DataStreamPojoITCase -> @Test 	public void testCompositeKeyOnNestedPojo() throws Exception;1465604047;Test composite key on the Data POJO (with nested fields);@Test_	public void testCompositeKeyOnNestedPojo() throws Exception {_		StreamExecutionEnvironment see = StreamExecutionEnvironment.getExecutionEnvironment()__		see.getConfig().disableObjectReuse()__		see.setParallelism(3)___		DataStream<Data> dataStream = see.fromCollection(elements)___		DataStream<Data> summedStream = dataStream_				.keyBy("aaa", "abc", "wxyz")_				.sum("sum")_				.keyBy("aaa", "abc", "wxyz")_				.flatMap(new FlatMapFunction<Data, Data>() {_					Data[] first = new Data[3]__					@Override_					public void flatMap(Data value, Collector<Data> out) throws Exception {_						if(first[value.aaa] == null) {_							first[value.aaa] = value__							if(value.sum != 1) {_								throw new RuntimeException("Expected the sum to be one")__							}_						} else {_							if(value.sum != 2) {_								throw new RuntimeException("Expected the sum to be two")__							}_							if(first[value.aaa].aaa != value.aaa) {_								throw new RuntimeException("aaa key wrong")__							}_							if(first[value.aaa].abc != value.abc) {_								throw new RuntimeException("abc key wrong")__							}_							if(first[value.aaa].wxyz != value.wxyz) {_								throw new RuntimeException("wxyz key wrong")__							}_						}_					}_				})___		summedStream.print()___		see.execute()__	};test,composite,key,on,the,data,pojo,with,nested,fields;test,public,void,test,composite,key,on,nested,pojo,throws,exception,stream,execution,environment,see,stream,execution,environment,get,execution,environment,see,get,config,disable,object,reuse,see,set,parallelism,3,data,stream,data,data,stream,see,from,collection,elements,data,stream,data,summed,stream,data,stream,key,by,aaa,abc,wxyz,sum,sum,key,by,aaa,abc,wxyz,flat,map,new,flat,map,function,data,data,data,first,new,data,3,override,public,void,flat,map,data,value,collector,data,out,throws,exception,if,first,value,aaa,null,first,value,aaa,value,if,value,sum,1,throw,new,runtime,exception,expected,the,sum,to,be,one,else,if,value,sum,2,throw,new,runtime,exception,expected,the,sum,to,be,two,if,first,value,aaa,aaa,value,aaa,throw,new,runtime,exception,aaa,key,wrong,if,first,value,aaa,abc,value,abc,throw,new,runtime,exception,abc,key,wrong,if,first,value,aaa,wxyz,value,wxyz,throw,new,runtime,exception,wxyz,key,wrong,summed,stream,print,see,execute
DataStreamPojoITCase -> @Test 	public void testCompositeKeyOnNestedPojo() throws Exception;1469711304;Test composite key on the Data POJO (with nested fields);@Test_	public void testCompositeKeyOnNestedPojo() throws Exception {_		StreamExecutionEnvironment see = StreamExecutionEnvironment.getExecutionEnvironment()__		see.getConfig().disableObjectReuse()__		see.setParallelism(3)___		DataStream<Data> dataStream = see.fromCollection(elements)___		DataStream<Data> summedStream = dataStream_				.keyBy("aaa", "abc", "wxyz")_				.sum("sum")_				.keyBy("aaa", "abc", "wxyz")_				.flatMap(new FlatMapFunction<Data, Data>() {_					private static final long serialVersionUID = 788865239171396315L__					Data[] first = new Data[3]__					@Override_					public void flatMap(Data value, Collector<Data> out) throws Exception {_						if(first[value.aaa] == null) {_							first[value.aaa] = value__							if(value.sum != 1) {_								throw new RuntimeException("Expected the sum to be one")__							}_						} else {_							if(value.sum != 2) {_								throw new RuntimeException("Expected the sum to be two")__							}_							if(first[value.aaa].aaa != value.aaa) {_								throw new RuntimeException("aaa key wrong")__							}_							if(first[value.aaa].abc != value.abc) {_								throw new RuntimeException("abc key wrong")__							}_							if(first[value.aaa].wxyz != value.wxyz) {_								throw new RuntimeException("wxyz key wrong")__							}_						}_					}_				})___		summedStream.print()___		see.execute()__	};test,composite,key,on,the,data,pojo,with,nested,fields;test,public,void,test,composite,key,on,nested,pojo,throws,exception,stream,execution,environment,see,stream,execution,environment,get,execution,environment,see,get,config,disable,object,reuse,see,set,parallelism,3,data,stream,data,data,stream,see,from,collection,elements,data,stream,data,summed,stream,data,stream,key,by,aaa,abc,wxyz,sum,sum,key,by,aaa,abc,wxyz,flat,map,new,flat,map,function,data,data,private,static,final,long,serial,version,uid,788865239171396315l,data,first,new,data,3,override,public,void,flat,map,data,value,collector,data,out,throws,exception,if,first,value,aaa,null,first,value,aaa,value,if,value,sum,1,throw,new,runtime,exception,expected,the,sum,to,be,one,else,if,value,sum,2,throw,new,runtime,exception,expected,the,sum,to,be,two,if,first,value,aaa,aaa,value,aaa,throw,new,runtime,exception,aaa,key,wrong,if,first,value,aaa,abc,value,abc,throw,new,runtime,exception,abc,key,wrong,if,first,value,aaa,wxyz,value,wxyz,throw,new,runtime,exception,wxyz,key,wrong,summed,stream,print,see,execute
DataStreamPojoITCase -> @Test 	public void testCompositeKeyOnNestedPojo() throws Exception;1478186266;Test composite key on the Data POJO (with nested fields);@Test_	public void testCompositeKeyOnNestedPojo() throws Exception {_		StreamExecutionEnvironment see = StreamExecutionEnvironment.getExecutionEnvironment()__		see.getConfig().disableObjectReuse()__		see.setParallelism(3)___		DataStream<Data> dataStream = see.fromCollection(elements)___		DataStream<Data> summedStream = dataStream_				.keyBy("aaa", "abc", "wxyz")_				.sum("sum")_				.keyBy("aaa", "abc", "wxyz")_				.flatMap(new FlatMapFunction<Data, Data>() {_					private static final long serialVersionUID = 788865239171396315L__					Data[] first = new Data[3]__					@Override_					public void flatMap(Data value, Collector<Data> out) throws Exception {_						if(first[value.aaa] == null) {_							first[value.aaa] = value__							if(value.sum != 1) {_								throw new RuntimeException("Expected the sum to be one")__							}_						} else {_							if(value.sum != 2) {_								throw new RuntimeException("Expected the sum to be two")__							}_							if(first[value.aaa].aaa != value.aaa) {_								throw new RuntimeException("aaa key wrong")__							}_							if(first[value.aaa].abc != value.abc) {_								throw new RuntimeException("abc key wrong")__							}_							if(first[value.aaa].wxyz != value.wxyz) {_								throw new RuntimeException("wxyz key wrong")__							}_						}_					}_				})___		summedStream.print()___		see.execute()__	};test,composite,key,on,the,data,pojo,with,nested,fields;test,public,void,test,composite,key,on,nested,pojo,throws,exception,stream,execution,environment,see,stream,execution,environment,get,execution,environment,see,get,config,disable,object,reuse,see,set,parallelism,3,data,stream,data,data,stream,see,from,collection,elements,data,stream,data,summed,stream,data,stream,key,by,aaa,abc,wxyz,sum,sum,key,by,aaa,abc,wxyz,flat,map,new,flat,map,function,data,data,private,static,final,long,serial,version,uid,788865239171396315l,data,first,new,data,3,override,public,void,flat,map,data,value,collector,data,out,throws,exception,if,first,value,aaa,null,first,value,aaa,value,if,value,sum,1,throw,new,runtime,exception,expected,the,sum,to,be,one,else,if,value,sum,2,throw,new,runtime,exception,expected,the,sum,to,be,two,if,first,value,aaa,aaa,value,aaa,throw,new,runtime,exception,aaa,key,wrong,if,first,value,aaa,abc,value,abc,throw,new,runtime,exception,abc,key,wrong,if,first,value,aaa,wxyz,value,wxyz,throw,new,runtime,exception,wxyz,key,wrong,summed,stream,print,see,execute
DataStreamPojoITCase -> @Test 	public void testCompositeKeyOnNestedPojo() throws Exception;1496173247;Test composite key on the Data POJO (with nested fields).;@Test_	public void testCompositeKeyOnNestedPojo() throws Exception {_		StreamExecutionEnvironment see = StreamExecutionEnvironment.getExecutionEnvironment()__		see.getConfig().disableObjectReuse()__		see.setParallelism(3)___		DataStream<Data> dataStream = see.fromCollection(elements)___		DataStream<Data> summedStream = dataStream_				.keyBy("aaa", "abc", "wxyz")_				.sum("sum")_				.keyBy("aaa", "abc", "wxyz")_				.flatMap(new FlatMapFunction<Data, Data>() {_					private static final long serialVersionUID = 788865239171396315L__					Data[] first = new Data[3]__					@Override_					public void flatMap(Data value, Collector<Data> out) throws Exception {_						if (first[value.aaa] == null) {_							first[value.aaa] = value__							if (value.sum != 1) {_								throw new RuntimeException("Expected the sum to be one")__							}_						} else {_							if (value.sum != 2) {_								throw new RuntimeException("Expected the sum to be two")__							}_							if (first[value.aaa].aaa != value.aaa) {_								throw new RuntimeException("aaa key wrong")__							}_							if (first[value.aaa].abc != value.abc) {_								throw new RuntimeException("abc key wrong")__							}_							if (first[value.aaa].wxyz != value.wxyz) {_								throw new RuntimeException("wxyz key wrong")__							}_						}_					}_				})___		summedStream.print()___		see.execute()__	};test,composite,key,on,the,data,pojo,with,nested,fields;test,public,void,test,composite,key,on,nested,pojo,throws,exception,stream,execution,environment,see,stream,execution,environment,get,execution,environment,see,get,config,disable,object,reuse,see,set,parallelism,3,data,stream,data,data,stream,see,from,collection,elements,data,stream,data,summed,stream,data,stream,key,by,aaa,abc,wxyz,sum,sum,key,by,aaa,abc,wxyz,flat,map,new,flat,map,function,data,data,private,static,final,long,serial,version,uid,788865239171396315l,data,first,new,data,3,override,public,void,flat,map,data,value,collector,data,out,throws,exception,if,first,value,aaa,null,first,value,aaa,value,if,value,sum,1,throw,new,runtime,exception,expected,the,sum,to,be,one,else,if,value,sum,2,throw,new,runtime,exception,expected,the,sum,to,be,two,if,first,value,aaa,aaa,value,aaa,throw,new,runtime,exception,aaa,key,wrong,if,first,value,aaa,abc,value,abc,throw,new,runtime,exception,abc,key,wrong,if,first,value,aaa,wxyz,value,wxyz,throw,new,runtime,exception,wxyz,key,wrong,summed,stream,print,see,execute
DataStreamPojoITCase -> @Test 	public void testCompositeKeyOnNestedPojo() throws Exception;1508854815;Test composite key on the Data POJO (with nested fields).;@Test_	public void testCompositeKeyOnNestedPojo() throws Exception {_		StreamExecutionEnvironment see = StreamExecutionEnvironment.getExecutionEnvironment()__		see.getConfig().disableObjectReuse()__		see.setParallelism(3)___		DataStream<Data> dataStream = see.fromCollection(elements)___		DataStream<Data> summedStream = dataStream_				.keyBy("aaa", "abc", "wxyz")_				.sum("sum")_				.keyBy("aaa", "abc", "wxyz")_				.flatMap(new FlatMapFunction<Data, Data>() {_					private static final long serialVersionUID = 788865239171396315L__					Data[] first = new Data[3]__					@Override_					public void flatMap(Data value, Collector<Data> out) throws Exception {_						if (first[value.aaa] == null) {_							first[value.aaa] = value__							if (value.sum != 1) {_								throw new RuntimeException("Expected the sum to be one")__							}_						} else {_							if (value.sum != 2) {_								throw new RuntimeException("Expected the sum to be two")__							}_							if (first[value.aaa].aaa != value.aaa) {_								throw new RuntimeException("aaa key wrong")__							}_							if (first[value.aaa].abc != value.abc) {_								throw new RuntimeException("abc key wrong")__							}_							if (first[value.aaa].wxyz != value.wxyz) {_								throw new RuntimeException("wxyz key wrong")__							}_						}_					}_				})___		summedStream.print()___		see.execute()__	};test,composite,key,on,the,data,pojo,with,nested,fields;test,public,void,test,composite,key,on,nested,pojo,throws,exception,stream,execution,environment,see,stream,execution,environment,get,execution,environment,see,get,config,disable,object,reuse,see,set,parallelism,3,data,stream,data,data,stream,see,from,collection,elements,data,stream,data,summed,stream,data,stream,key,by,aaa,abc,wxyz,sum,sum,key,by,aaa,abc,wxyz,flat,map,new,flat,map,function,data,data,private,static,final,long,serial,version,uid,788865239171396315l,data,first,new,data,3,override,public,void,flat,map,data,value,collector,data,out,throws,exception,if,first,value,aaa,null,first,value,aaa,value,if,value,sum,1,throw,new,runtime,exception,expected,the,sum,to,be,one,else,if,value,sum,2,throw,new,runtime,exception,expected,the,sum,to,be,two,if,first,value,aaa,aaa,value,aaa,throw,new,runtime,exception,aaa,key,wrong,if,first,value,aaa,abc,value,abc,throw,new,runtime,exception,abc,key,wrong,if,first,value,aaa,wxyz,value,wxyz,throw,new,runtime,exception,wxyz,key,wrong,summed,stream,print,see,execute
DataStreamPojoITCase -> @Test(expected = IllegalArgumentException.class) 	public void testFailOnNestedPojoFieldAccessor() throws Exception;1465604047;As per FLINK-3702 Flink doesn't support nested pojo fields for sum();@Test(expected = IllegalArgumentException.class)_	public void testFailOnNestedPojoFieldAccessor() throws Exception {_		StreamExecutionEnvironment see = StreamExecutionEnvironment.getExecutionEnvironment()___		DataStream<Data> dataStream = see.fromCollection(elements)__		dataStream.keyBy("aaa", "stats.count").sum("stats.count")__	};as,per,flink,3702,flink,doesn,t,support,nested,pojo,fields,for,sum;test,expected,illegal,argument,exception,class,public,void,test,fail,on,nested,pojo,field,accessor,throws,exception,stream,execution,environment,see,stream,execution,environment,get,execution,environment,data,stream,data,data,stream,see,from,collection,elements,data,stream,key,by,aaa,stats,count,sum,stats,count
DataStreamPojoITCase -> @Test(expected = IllegalArgumentException.class) 	public void testFailOnNestedPojoFieldAccessor() throws Exception;1469711304;As per FLINK-3702 Flink doesn't support nested pojo fields for sum();@Test(expected = IllegalArgumentException.class)_	public void testFailOnNestedPojoFieldAccessor() throws Exception {_		StreamExecutionEnvironment see = StreamExecutionEnvironment.getExecutionEnvironment()___		DataStream<Data> dataStream = see.fromCollection(elements)__		dataStream.keyBy("aaa", "stats.count").sum("stats.count")__	};as,per,flink,3702,flink,doesn,t,support,nested,pojo,fields,for,sum;test,expected,illegal,argument,exception,class,public,void,test,fail,on,nested,pojo,field,accessor,throws,exception,stream,execution,environment,see,stream,execution,environment,get,execution,environment,data,stream,data,data,stream,see,from,collection,elements,data,stream,key,by,aaa,stats,count,sum,stats,count
DataStreamPojoITCase -> @Test 	public void testNestedKeyOnNestedPojo() throws Exception;1463939330;Test composite & nested key on the Data POJO;@Test_	public void testNestedKeyOnNestedPojo() throws Exception {_		StreamExecutionEnvironment see = StreamExecutionEnvironment.getExecutionEnvironment()__		see.getConfig().disableObjectReuse()__		see.setParallelism(4)___		DataStream<Data> dataStream = see.fromCollection(elements)___		DataStream<Data> summedStream = dataStream_				.keyBy("aaa", "stats.count")_				.sum("sum")_				.keyBy("aaa", "stats.count")_				.flatMap(new FlatMapFunction<Data, Data>() {_					private static final long serialVersionUID = -3678267280397950258L__					Data[] first = new Data[3]__					@Override_					public void flatMap(Data value, Collector<Data> out) throws Exception {_						if(value.stats.count != 123) {_							throw new RuntimeException("Wrong value for value.stats.count")__						}_						if(first[value.aaa] == null) {_							first[value.aaa] = value__							if(value.sum != 1) {_								throw new RuntimeException("Expected the sum to be one")__							}_						} else {_							if(value.sum != 2) {_								throw new RuntimeException("Expected the sum to be two")__							}_							if(first[value.aaa].aaa != value.aaa) {_								throw new RuntimeException("aaa key wrong")__							}_							if(first[value.aaa].abc != value.abc) {_								throw new RuntimeException("abc key wrong")__							}_							if(first[value.aaa].wxyz != value.wxyz) {_								throw new RuntimeException("wxyz key wrong")__							}_						}_					}_				})___		summedStream.print()___		see.execute()__	};test,composite,nested,key,on,the,data,pojo;test,public,void,test,nested,key,on,nested,pojo,throws,exception,stream,execution,environment,see,stream,execution,environment,get,execution,environment,see,get,config,disable,object,reuse,see,set,parallelism,4,data,stream,data,data,stream,see,from,collection,elements,data,stream,data,summed,stream,data,stream,key,by,aaa,stats,count,sum,sum,key,by,aaa,stats,count,flat,map,new,flat,map,function,data,data,private,static,final,long,serial,version,uid,3678267280397950258l,data,first,new,data,3,override,public,void,flat,map,data,value,collector,data,out,throws,exception,if,value,stats,count,123,throw,new,runtime,exception,wrong,value,for,value,stats,count,if,first,value,aaa,null,first,value,aaa,value,if,value,sum,1,throw,new,runtime,exception,expected,the,sum,to,be,one,else,if,value,sum,2,throw,new,runtime,exception,expected,the,sum,to,be,two,if,first,value,aaa,aaa,value,aaa,throw,new,runtime,exception,aaa,key,wrong,if,first,value,aaa,abc,value,abc,throw,new,runtime,exception,abc,key,wrong,if,first,value,aaa,wxyz,value,wxyz,throw,new,runtime,exception,wxyz,key,wrong,summed,stream,print,see,execute
DataStreamPojoITCase -> @Test 	public void testNestedKeyOnNestedPojo() throws Exception;1465604047;Test composite & nested key on the Data POJO;@Test_	public void testNestedKeyOnNestedPojo() throws Exception {_		StreamExecutionEnvironment see = StreamExecutionEnvironment.getExecutionEnvironment()__		see.getConfig().disableObjectReuse()__		see.setParallelism(4)___		DataStream<Data> dataStream = see.fromCollection(elements)___		DataStream<Data> summedStream = dataStream_				.keyBy("aaa", "stats.count")_				.sum("sum")_				.keyBy("aaa", "stats.count")_				.flatMap(new FlatMapFunction<Data, Data>() {_					Data[] first = new Data[3]__					@Override_					public void flatMap(Data value, Collector<Data> out) throws Exception {_						if(value.stats.count != 123) {_							throw new RuntimeException("Wrong value for value.stats.count")__						}_						if(first[value.aaa] == null) {_							first[value.aaa] = value__							if(value.sum != 1) {_								throw new RuntimeException("Expected the sum to be one")__							}_						} else {_							if(value.sum != 2) {_								throw new RuntimeException("Expected the sum to be two")__							}_							if(first[value.aaa].aaa != value.aaa) {_								throw new RuntimeException("aaa key wrong")__							}_							if(first[value.aaa].abc != value.abc) {_								throw new RuntimeException("abc key wrong")__							}_							if(first[value.aaa].wxyz != value.wxyz) {_								throw new RuntimeException("wxyz key wrong")__							}_						}_					}_				})___		summedStream.print()___		see.execute()__	};test,composite,nested,key,on,the,data,pojo;test,public,void,test,nested,key,on,nested,pojo,throws,exception,stream,execution,environment,see,stream,execution,environment,get,execution,environment,see,get,config,disable,object,reuse,see,set,parallelism,4,data,stream,data,data,stream,see,from,collection,elements,data,stream,data,summed,stream,data,stream,key,by,aaa,stats,count,sum,sum,key,by,aaa,stats,count,flat,map,new,flat,map,function,data,data,data,first,new,data,3,override,public,void,flat,map,data,value,collector,data,out,throws,exception,if,value,stats,count,123,throw,new,runtime,exception,wrong,value,for,value,stats,count,if,first,value,aaa,null,first,value,aaa,value,if,value,sum,1,throw,new,runtime,exception,expected,the,sum,to,be,one,else,if,value,sum,2,throw,new,runtime,exception,expected,the,sum,to,be,two,if,first,value,aaa,aaa,value,aaa,throw,new,runtime,exception,aaa,key,wrong,if,first,value,aaa,abc,value,abc,throw,new,runtime,exception,abc,key,wrong,if,first,value,aaa,wxyz,value,wxyz,throw,new,runtime,exception,wxyz,key,wrong,summed,stream,print,see,execute
DataStreamPojoITCase -> @Test 	public void testNestedKeyOnNestedPojo() throws Exception;1469711304;Test composite & nested key on the Data POJO;@Test_	public void testNestedKeyOnNestedPojo() throws Exception {_		StreamExecutionEnvironment see = StreamExecutionEnvironment.getExecutionEnvironment()__		see.getConfig().disableObjectReuse()__		see.setParallelism(4)___		DataStream<Data> dataStream = see.fromCollection(elements)___		DataStream<Data> summedStream = dataStream_				.keyBy("aaa", "stats.count")_				.sum("sum")_				.keyBy("aaa", "stats.count")_				.flatMap(new FlatMapFunction<Data, Data>() {_					private static final long serialVersionUID = -3678267280397950258L__					Data[] first = new Data[3]__					@Override_					public void flatMap(Data value, Collector<Data> out) throws Exception {_						if(value.stats.count != 123) {_							throw new RuntimeException("Wrong value for value.stats.count")__						}_						if(first[value.aaa] == null) {_							first[value.aaa] = value__							if(value.sum != 1) {_								throw new RuntimeException("Expected the sum to be one")__							}_						} else {_							if(value.sum != 2) {_								throw new RuntimeException("Expected the sum to be two")__							}_							if(first[value.aaa].aaa != value.aaa) {_								throw new RuntimeException("aaa key wrong")__							}_							if(first[value.aaa].abc != value.abc) {_								throw new RuntimeException("abc key wrong")__							}_							if(first[value.aaa].wxyz != value.wxyz) {_								throw new RuntimeException("wxyz key wrong")__							}_						}_					}_				})___		summedStream.print()___		see.execute()__	};test,composite,nested,key,on,the,data,pojo;test,public,void,test,nested,key,on,nested,pojo,throws,exception,stream,execution,environment,see,stream,execution,environment,get,execution,environment,see,get,config,disable,object,reuse,see,set,parallelism,4,data,stream,data,data,stream,see,from,collection,elements,data,stream,data,summed,stream,data,stream,key,by,aaa,stats,count,sum,sum,key,by,aaa,stats,count,flat,map,new,flat,map,function,data,data,private,static,final,long,serial,version,uid,3678267280397950258l,data,first,new,data,3,override,public,void,flat,map,data,value,collector,data,out,throws,exception,if,value,stats,count,123,throw,new,runtime,exception,wrong,value,for,value,stats,count,if,first,value,aaa,null,first,value,aaa,value,if,value,sum,1,throw,new,runtime,exception,expected,the,sum,to,be,one,else,if,value,sum,2,throw,new,runtime,exception,expected,the,sum,to,be,two,if,first,value,aaa,aaa,value,aaa,throw,new,runtime,exception,aaa,key,wrong,if,first,value,aaa,abc,value,abc,throw,new,runtime,exception,abc,key,wrong,if,first,value,aaa,wxyz,value,wxyz,throw,new,runtime,exception,wxyz,key,wrong,summed,stream,print,see,execute
DataStreamPojoITCase -> @Test 	public void testNestedKeyOnNestedPojo() throws Exception;1478186266;Test composite & nested key on the Data POJO;@Test_	public void testNestedKeyOnNestedPojo() throws Exception {_		StreamExecutionEnvironment see = StreamExecutionEnvironment.getExecutionEnvironment()__		see.getConfig().disableObjectReuse()__		see.setParallelism(4)___		DataStream<Data> dataStream = see.fromCollection(elements)___		DataStream<Data> summedStream = dataStream_				.keyBy("aaa", "stats.count")_				.sum("sum")_				.keyBy("aaa", "stats.count")_				.flatMap(new FlatMapFunction<Data, Data>() {_					private static final long serialVersionUID = -3678267280397950258L__					Data[] first = new Data[3]__					@Override_					public void flatMap(Data value, Collector<Data> out) throws Exception {_						if(value.stats.count != 123) {_							throw new RuntimeException("Wrong value for value.stats.count")__						}_						if(first[value.aaa] == null) {_							first[value.aaa] = value__							if(value.sum != 1) {_								throw new RuntimeException("Expected the sum to be one")__							}_						} else {_							if(value.sum != 2) {_								throw new RuntimeException("Expected the sum to be two")__							}_							if(first[value.aaa].aaa != value.aaa) {_								throw new RuntimeException("aaa key wrong")__							}_							if(first[value.aaa].abc != value.abc) {_								throw new RuntimeException("abc key wrong")__							}_							if(first[value.aaa].wxyz != value.wxyz) {_								throw new RuntimeException("wxyz key wrong")__							}_						}_					}_				})___		summedStream.print()___		see.execute()__	};test,composite,nested,key,on,the,data,pojo;test,public,void,test,nested,key,on,nested,pojo,throws,exception,stream,execution,environment,see,stream,execution,environment,get,execution,environment,see,get,config,disable,object,reuse,see,set,parallelism,4,data,stream,data,data,stream,see,from,collection,elements,data,stream,data,summed,stream,data,stream,key,by,aaa,stats,count,sum,sum,key,by,aaa,stats,count,flat,map,new,flat,map,function,data,data,private,static,final,long,serial,version,uid,3678267280397950258l,data,first,new,data,3,override,public,void,flat,map,data,value,collector,data,out,throws,exception,if,value,stats,count,123,throw,new,runtime,exception,wrong,value,for,value,stats,count,if,first,value,aaa,null,first,value,aaa,value,if,value,sum,1,throw,new,runtime,exception,expected,the,sum,to,be,one,else,if,value,sum,2,throw,new,runtime,exception,expected,the,sum,to,be,two,if,first,value,aaa,aaa,value,aaa,throw,new,runtime,exception,aaa,key,wrong,if,first,value,aaa,abc,value,abc,throw,new,runtime,exception,abc,key,wrong,if,first,value,aaa,wxyz,value,wxyz,throw,new,runtime,exception,wxyz,key,wrong,summed,stream,print,see,execute
DataStreamPojoITCase -> @Test 	public void testNestedKeyOnNestedPojo() throws Exception;1496173247;Test composite & nested key on the Data POJO.;@Test_	public void testNestedKeyOnNestedPojo() throws Exception {_		StreamExecutionEnvironment see = StreamExecutionEnvironment.getExecutionEnvironment()__		see.getConfig().disableObjectReuse()__		see.setParallelism(4)___		DataStream<Data> dataStream = see.fromCollection(elements)___		DataStream<Data> summedStream = dataStream_				.keyBy("aaa", "stats.count")_				.sum("sum")_				.keyBy("aaa", "stats.count")_				.flatMap(new FlatMapFunction<Data, Data>() {_					private static final long serialVersionUID = -3678267280397950258L__					Data[] first = new Data[3]__					@Override_					public void flatMap(Data value, Collector<Data> out) throws Exception {_						if (value.stats.count != 123) {_							throw new RuntimeException("Wrong value for value.stats.count")__						}_						if (first[value.aaa] == null) {_							first[value.aaa] = value__							if (value.sum != 1) {_								throw new RuntimeException("Expected the sum to be one")__							}_						} else {_							if (value.sum != 2) {_								throw new RuntimeException("Expected the sum to be two")__							}_							if (first[value.aaa].aaa != value.aaa) {_								throw new RuntimeException("aaa key wrong")__							}_							if (first[value.aaa].abc != value.abc) {_								throw new RuntimeException("abc key wrong")__							}_							if (first[value.aaa].wxyz != value.wxyz) {_								throw new RuntimeException("wxyz key wrong")__							}_						}_					}_				})___		summedStream.print()___		see.execute()__	};test,composite,nested,key,on,the,data,pojo;test,public,void,test,nested,key,on,nested,pojo,throws,exception,stream,execution,environment,see,stream,execution,environment,get,execution,environment,see,get,config,disable,object,reuse,see,set,parallelism,4,data,stream,data,data,stream,see,from,collection,elements,data,stream,data,summed,stream,data,stream,key,by,aaa,stats,count,sum,sum,key,by,aaa,stats,count,flat,map,new,flat,map,function,data,data,private,static,final,long,serial,version,uid,3678267280397950258l,data,first,new,data,3,override,public,void,flat,map,data,value,collector,data,out,throws,exception,if,value,stats,count,123,throw,new,runtime,exception,wrong,value,for,value,stats,count,if,first,value,aaa,null,first,value,aaa,value,if,value,sum,1,throw,new,runtime,exception,expected,the,sum,to,be,one,else,if,value,sum,2,throw,new,runtime,exception,expected,the,sum,to,be,two,if,first,value,aaa,aaa,value,aaa,throw,new,runtime,exception,aaa,key,wrong,if,first,value,aaa,abc,value,abc,throw,new,runtime,exception,abc,key,wrong,if,first,value,aaa,wxyz,value,wxyz,throw,new,runtime,exception,wxyz,key,wrong,summed,stream,print,see,execute
DataStreamPojoITCase -> @Test 	public void testNestedKeyOnNestedPojo() throws Exception;1508854815;Test composite & nested key on the Data POJO.;@Test_	public void testNestedKeyOnNestedPojo() throws Exception {_		StreamExecutionEnvironment see = StreamExecutionEnvironment.getExecutionEnvironment()__		see.getConfig().disableObjectReuse()__		see.setParallelism(4)___		DataStream<Data> dataStream = see.fromCollection(elements)___		DataStream<Data> summedStream = dataStream_				.keyBy("aaa", "stats.count")_				.sum("sum")_				.keyBy("aaa", "stats.count")_				.flatMap(new FlatMapFunction<Data, Data>() {_					private static final long serialVersionUID = -3678267280397950258L__					Data[] first = new Data[3]__					@Override_					public void flatMap(Data value, Collector<Data> out) throws Exception {_						if (value.stats.count != 123) {_							throw new RuntimeException("Wrong value for value.stats.count")__						}_						if (first[value.aaa] == null) {_							first[value.aaa] = value__							if (value.sum != 1) {_								throw new RuntimeException("Expected the sum to be one")__							}_						} else {_							if (value.sum != 2) {_								throw new RuntimeException("Expected the sum to be two")__							}_							if (first[value.aaa].aaa != value.aaa) {_								throw new RuntimeException("aaa key wrong")__							}_							if (first[value.aaa].abc != value.abc) {_								throw new RuntimeException("abc key wrong")__							}_							if (first[value.aaa].wxyz != value.wxyz) {_								throw new RuntimeException("wxyz key wrong")__							}_						}_					}_				})___		summedStream.print()___		see.execute()__	};test,composite,nested,key,on,the,data,pojo;test,public,void,test,nested,key,on,nested,pojo,throws,exception,stream,execution,environment,see,stream,execution,environment,get,execution,environment,see,get,config,disable,object,reuse,see,set,parallelism,4,data,stream,data,data,stream,see,from,collection,elements,data,stream,data,summed,stream,data,stream,key,by,aaa,stats,count,sum,sum,key,by,aaa,stats,count,flat,map,new,flat,map,function,data,data,private,static,final,long,serial,version,uid,3678267280397950258l,data,first,new,data,3,override,public,void,flat,map,data,value,collector,data,out,throws,exception,if,value,stats,count,123,throw,new,runtime,exception,wrong,value,for,value,stats,count,if,first,value,aaa,null,first,value,aaa,value,if,value,sum,1,throw,new,runtime,exception,expected,the,sum,to,be,one,else,if,value,sum,2,throw,new,runtime,exception,expected,the,sum,to,be,two,if,first,value,aaa,aaa,value,aaa,throw,new,runtime,exception,aaa,key,wrong,if,first,value,aaa,abc,value,abc,throw,new,runtime,exception,abc,key,wrong,if,first,value,aaa,wxyz,value,wxyz,throw,new,runtime,exception,wxyz,key,wrong,summed,stream,print,see,execute
