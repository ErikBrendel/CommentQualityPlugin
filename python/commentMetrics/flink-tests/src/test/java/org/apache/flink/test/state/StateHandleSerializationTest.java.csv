# id;timestamp;commentText;codeText;commentWords;codeWords
StateHandleSerializationTest -> @Test 	public void ensureStateHandlesHaveSerialVersionUID();1468502052;This test validates that all subclasses of {@link StateHandle} have a proper_serial version UID.;@Test_	public void ensureStateHandlesHaveSerialVersionUID() {_		try {_			Reflections reflections = new Reflections("org.apache.flink")___			__			@SuppressWarnings("unchecked")_			Set<Class<?>> stateHandleImplementations = (Set<Class<?>>) (Set<?>)_					reflections.getSubTypesOf(StateHandle.class)___			for (Class<?> clazz : stateHandleImplementations) {_				validataSerialVersionUID(clazz)__			}__			__			@SuppressWarnings("unchecked")_			Set<Class<?>> kvStateSnapshotImplementations = (Set<Class<?>>) (Set<?>)_					reflections.getSubTypesOf(KvStateSnapshot.class)___			System.out.println(kvStateSnapshotImplementations)__			_			for (Class<?> clazz : kvStateSnapshotImplementations) {_				validataSerialVersionUID(clazz)__			}_		}_		catch (Exception e) {_			e.printStackTrace()__			fail(e.getMessage())__		}_	};this,test,validates,that,all,subclasses,of,link,state,handle,have,a,proper,serial,version,uid;test,public,void,ensure,state,handles,have,serial,version,uid,try,reflections,reflections,new,reflections,org,apache,flink,suppress,warnings,unchecked,set,class,state,handle,implementations,set,class,set,reflections,get,sub,types,of,state,handle,class,for,class,clazz,state,handle,implementations,validata,serial,version,uid,clazz,suppress,warnings,unchecked,set,class,kv,state,snapshot,implementations,set,class,set,reflections,get,sub,types,of,kv,state,snapshot,class,system,out,println,kv,state,snapshot,implementations,for,class,clazz,kv,state,snapshot,implementations,validata,serial,version,uid,clazz,catch,exception,e,e,print,stack,trace,fail,e,get,message
StateHandleSerializationTest -> @Test 	public void ensureStateHandlesHaveSerialVersionUID();1470847490;This test validates that all subclasses of {@link StateObject} have a proper_serial version UID.;@Test_	public void ensureStateHandlesHaveSerialVersionUID() {_		try {_			Reflections reflections = new Reflections("org.apache.flink")___			__			@SuppressWarnings("unchecked")_			Set<Class<?>> stateHandleImplementations = (Set<Class<?>>) (Set<?>)_					reflections.getSubTypesOf(StateObject.class)___			for (Class<?> clazz : stateHandleImplementations) {_				validataSerialVersionUID(clazz)__			}_		}_		catch (Exception e) {_			e.printStackTrace()__			fail(e.getMessage())__		}_	};this,test,validates,that,all,subclasses,of,link,state,object,have,a,proper,serial,version,uid;test,public,void,ensure,state,handles,have,serial,version,uid,try,reflections,reflections,new,reflections,org,apache,flink,suppress,warnings,unchecked,set,class,state,handle,implementations,set,class,set,reflections,get,sub,types,of,state,object,class,for,class,clazz,state,handle,implementations,validata,serial,version,uid,clazz,catch,exception,e,e,print,stack,trace,fail,e,get,message
StateHandleSerializationTest -> @Test 	public void ensureStateHandlesHaveSerialVersionUID();1470909547;This test validates that all subclasses of {@link StateObject} have a proper_serial version UID.;@Test_	public void ensureStateHandlesHaveSerialVersionUID() {_		try {_			Reflections reflections = new Reflections("org.apache.flink")___			__			@SuppressWarnings("unchecked")_			Set<Class<?>> stateHandleImplementations = (Set<Class<?>>) (Set<?>)_					reflections.getSubTypesOf(StateObject.class)___			for (Class<?> clazz : stateHandleImplementations) {_				validataSerialVersionUID(clazz)__			}__			__			@SuppressWarnings("unchecked")_			Set<Class<?>> kvStateSnapshotImplementations = (Set<Class<?>>) (Set<?>)_					reflections.getSubTypesOf(KvStateSnapshot.class)___			System.out.println(kvStateSnapshotImplementations)__			_			for (Class<?> clazz : kvStateSnapshotImplementations) {_				validataSerialVersionUID(clazz)__			}_		}_		catch (Exception e) {_			e.printStackTrace()__			fail(e.getMessage())__		}_	};this,test,validates,that,all,subclasses,of,link,state,object,have,a,proper,serial,version,uid;test,public,void,ensure,state,handles,have,serial,version,uid,try,reflections,reflections,new,reflections,org,apache,flink,suppress,warnings,unchecked,set,class,state,handle,implementations,set,class,set,reflections,get,sub,types,of,state,object,class,for,class,clazz,state,handle,implementations,validata,serial,version,uid,clazz,suppress,warnings,unchecked,set,class,kv,state,snapshot,implementations,set,class,set,reflections,get,sub,types,of,kv,state,snapshot,class,system,out,println,kv,state,snapshot,implementations,for,class,clazz,kv,state,snapshot,implementations,validata,serial,version,uid,clazz,catch,exception,e,e,print,stack,trace,fail,e,get,message
