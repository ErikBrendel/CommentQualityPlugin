# id;timestamp;commentText;codeText;commentWords;codeWords
BigUserProgramJobSubmitITCase -> @Test 	public void bigDataInMap() throws Exception;1507284174;Use a map function that references a 100MB byte array.;@Test_	public void bigDataInMap() throws Exception {__		final byte[] data = new byte[100 * 1024 * 1024]_ _		rnd.nextBytes(data)_ _		data[1] = 0__		data[3] = 0__		data[5] = 0___		TestListResultSink<String> resultSink = new TestListResultSink<>()___		StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment()___		DataStream<Integer> src = env.fromElements(1, 3, 5)___		src.map(new MapFunction<Integer, String>() {_			private static final long serialVersionUID = 1L___			@Override_			public String map(Integer value) throws Exception {_				return "x " + value + " " + data[value]__			}_		}).addSink(resultSink)___		env.execute()___		List<String> expected = Arrays.asList("x 1 0", "x 3 0", "x 5 0")___		List<String> result = resultSink.getResult()___		Collections.sort(expected)__		Collections.sort(result)___		assertEquals(expected, result)__	};use,a,map,function,that,references,a,100mb,byte,array;test,public,void,big,data,in,map,throws,exception,final,byte,data,new,byte,100,1024,1024,rnd,next,bytes,data,data,1,0,data,3,0,data,5,0,test,list,result,sink,string,result,sink,new,test,list,result,sink,stream,execution,environment,env,stream,execution,environment,get,execution,environment,data,stream,integer,src,env,from,elements,1,3,5,src,map,new,map,function,integer,string,private,static,final,long,serial,version,uid,1l,override,public,string,map,integer,value,throws,exception,return,x,value,data,value,add,sink,result,sink,env,execute,list,string,expected,arrays,as,list,x,1,0,x,3,0,x,5,0,list,string,result,result,sink,get,result,collections,sort,expected,collections,sort,result,assert,equals,expected,result
BigUserProgramJobSubmitITCase -> @Test 	public void bigDataInMap() throws Exception;1519146171;Use a map function that references a 100MB byte array.;@Test_	public void bigDataInMap() throws Exception {__		final byte[] data = new byte[16 * 1024 * 1024]_ _		rnd.nextBytes(data)_ _		data[1] = 0__		data[3] = 0__		data[5] = 0___		CollectingSink resultSink = new CollectingSink()___		StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment()__		env.setParallelism(1)___		DataStream<Integer> src = env.fromElements(1, 3, 5)___		src.map(new MapFunction<Integer, String>() {_			private static final long serialVersionUID = 1L___			@Override_			public String map(Integer value) throws Exception {_				return "x " + value + " " + data[value]__			}_		}).addSink(resultSink)___		JobGraph jobGraph = StreamingJobGraphGenerator.createJobGraph(env.getStreamGraph())__		CLIENT.setDetached(false)__		CLIENT.submitJob(jobGraph, BigUserProgramJobSubmitITCase.class.getClassLoader())___		List<String> expected = Arrays.asList("x 1 0", "x 3 0", "x 5 0")___		List<String> result = CollectingSink.result___		Collections.sort(expected)__		Collections.sort(result)___		assertEquals(expected, result)__	};use,a,map,function,that,references,a,100mb,byte,array;test,public,void,big,data,in,map,throws,exception,final,byte,data,new,byte,16,1024,1024,rnd,next,bytes,data,data,1,0,data,3,0,data,5,0,collecting,sink,result,sink,new,collecting,sink,stream,execution,environment,env,stream,execution,environment,get,execution,environment,env,set,parallelism,1,data,stream,integer,src,env,from,elements,1,3,5,src,map,new,map,function,integer,string,private,static,final,long,serial,version,uid,1l,override,public,string,map,integer,value,throws,exception,return,x,value,data,value,add,sink,result,sink,job,graph,job,graph,streaming,job,graph,generator,create,job,graph,env,get,stream,graph,client,set,detached,false,client,submit,job,job,graph,big,user,program,job,submit,itcase,class,get,class,loader,list,string,expected,arrays,as,list,x,1,0,x,3,0,x,5,0,list,string,result,collecting,sink,result,collections,sort,expected,collections,sort,result,assert,equals,expected,result
BigUserProgramJobSubmitITCase -> @Test 	public void bigDataInMap() throws Exception;1523933540;Use a map function that references a 100MB byte array.;@Test_	public void bigDataInMap() throws Exception {__		final byte[] data = new byte[16 * 1024 * 1024]_ _		rnd.nextBytes(data)_ _		data[1] = 0__		data[3] = 0__		data[5] = 0___		CollectingSink resultSink = new CollectingSink()___		StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment()__		env.setParallelism(1)___		DataStream<Integer> src = env.fromElements(1, 3, 5)___		src.map(new MapFunction<Integer, String>() {_			private static final long serialVersionUID = 1L___			@Override_			public String map(Integer value) throws Exception {_				return "x " + value + " " + data[value]__			}_		}).addSink(resultSink)___		JobGraph jobGraph = StreamingJobGraphGenerator.createJobGraph(env.getStreamGraph())__		CLIENT.setDetached(false)__		CLIENT.submitJob(jobGraph, BigUserProgramJobSubmitITCase.class.getClassLoader())___		List<String> expected = Arrays.asList("x 1 0", "x 3 0", "x 5 0")___		List<String> result = CollectingSink.result___		Collections.sort(expected)__		Collections.sort(result)___		assertEquals(expected, result)__	};use,a,map,function,that,references,a,100mb,byte,array;test,public,void,big,data,in,map,throws,exception,final,byte,data,new,byte,16,1024,1024,rnd,next,bytes,data,data,1,0,data,3,0,data,5,0,collecting,sink,result,sink,new,collecting,sink,stream,execution,environment,env,stream,execution,environment,get,execution,environment,env,set,parallelism,1,data,stream,integer,src,env,from,elements,1,3,5,src,map,new,map,function,integer,string,private,static,final,long,serial,version,uid,1l,override,public,string,map,integer,value,throws,exception,return,x,value,data,value,add,sink,result,sink,job,graph,job,graph,streaming,job,graph,generator,create,job,graph,env,get,stream,graph,client,set,detached,false,client,submit,job,job,graph,big,user,program,job,submit,itcase,class,get,class,loader,list,string,expected,arrays,as,list,x,1,0,x,3,0,x,5,0,list,string,result,collecting,sink,result,collections,sort,expected,collections,sort,result,assert,equals,expected,result
BigUserProgramJobSubmitITCase -> @Test 	public void bigDataInMap() throws Exception;1526285928;Use a map function that references a 100MB byte array.;@Test_	public void bigDataInMap() throws Exception {__		final byte[] data = new byte[16 * 1024 * 1024]_ _		rnd.nextBytes(data)_ _		data[1] = 0__		data[3] = 0__		data[5] = 0___		CollectingSink resultSink = new CollectingSink()___		StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment()__		env.setParallelism(1)___		DataStream<Integer> src = env.fromElements(1, 3, 5)___		src.map(new MapFunction<Integer, String>() {_			private static final long serialVersionUID = 1L___			@Override_			public String map(Integer value) throws Exception {_				return "x " + value + " " + data[value]__			}_		}).addSink(resultSink)___		JobGraph jobGraph = StreamingJobGraphGenerator.createJobGraph(env.getStreamGraph())__		CLIENT.setDetached(false)__		CLIENT.submitJob(jobGraph, BigUserProgramJobSubmitITCase.class.getClassLoader())___		List<String> expected = Arrays.asList("x 1 0", "x 3 0", "x 5 0")___		List<String> result = CollectingSink.result___		Collections.sort(expected)__		Collections.sort(result)___		assertEquals(expected, result)__	};use,a,map,function,that,references,a,100mb,byte,array;test,public,void,big,data,in,map,throws,exception,final,byte,data,new,byte,16,1024,1024,rnd,next,bytes,data,data,1,0,data,3,0,data,5,0,collecting,sink,result,sink,new,collecting,sink,stream,execution,environment,env,stream,execution,environment,get,execution,environment,env,set,parallelism,1,data,stream,integer,src,env,from,elements,1,3,5,src,map,new,map,function,integer,string,private,static,final,long,serial,version,uid,1l,override,public,string,map,integer,value,throws,exception,return,x,value,data,value,add,sink,result,sink,job,graph,job,graph,streaming,job,graph,generator,create,job,graph,env,get,stream,graph,client,set,detached,false,client,submit,job,job,graph,big,user,program,job,submit,itcase,class,get,class,loader,list,string,expected,arrays,as,list,x,1,0,x,3,0,x,5,0,list,string,result,collecting,sink,result,collections,sort,expected,collections,sort,result,assert,equals,expected,result
BigUserProgramJobSubmitITCase -> @Test 	public void bigDataInMap() throws Exception;1540216840;Use a map function that references a 100MB byte array.;@Test_	public void bigDataInMap() throws Exception {__		final byte[] data = new byte[16 * 1024 * 1024]_ _		rnd.nextBytes(data)_ _		data[1] = 0__		data[3] = 0__		data[5] = 0___		CollectingSink resultSink = new CollectingSink()___		StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment()__		env.setParallelism(1)___		DataStream<Integer> src = env.fromElements(1, 3, 5)___		src.map(new MapFunction<Integer, String>() {_			private static final long serialVersionUID = 1L___			@Override_			public String map(Integer value) throws Exception {_				return "x " + value + " " + data[value]__			}_		}).addSink(resultSink)___		JobGraph jobGraph = StreamingJobGraphGenerator.createJobGraph(env.getStreamGraph())___		final RestClusterClient<StandaloneClusterId> restClusterClient = new RestClusterClient<>(_			MINI_CLUSTER_RESOURCE.getClientConfiguration(),_			StandaloneClusterId.getInstance())___		try {_			restClusterClient.setDetached(false)__			restClusterClient.submitJob(jobGraph, BigUserProgramJobSubmitITCase.class.getClassLoader())___			List<String> expected = Arrays.asList("x 1 0", "x 3 0", "x 5 0")___			List<String> result = CollectingSink.result___			Collections.sort(expected)__			Collections.sort(result)___			assertEquals(expected, result)__		} finally {_			restClusterClient.shutdown()__		}_	};use,a,map,function,that,references,a,100mb,byte,array;test,public,void,big,data,in,map,throws,exception,final,byte,data,new,byte,16,1024,1024,rnd,next,bytes,data,data,1,0,data,3,0,data,5,0,collecting,sink,result,sink,new,collecting,sink,stream,execution,environment,env,stream,execution,environment,get,execution,environment,env,set,parallelism,1,data,stream,integer,src,env,from,elements,1,3,5,src,map,new,map,function,integer,string,private,static,final,long,serial,version,uid,1l,override,public,string,map,integer,value,throws,exception,return,x,value,data,value,add,sink,result,sink,job,graph,job,graph,streaming,job,graph,generator,create,job,graph,env,get,stream,graph,final,rest,cluster,client,standalone,cluster,id,rest,cluster,client,new,rest,cluster,client,get,client,configuration,standalone,cluster,id,get,instance,try,rest,cluster,client,set,detached,false,rest,cluster,client,submit,job,job,graph,big,user,program,job,submit,itcase,class,get,class,loader,list,string,expected,arrays,as,list,x,1,0,x,3,0,x,5,0,list,string,result,collecting,sink,result,collections,sort,expected,collections,sort,result,assert,equals,expected,result,finally,rest,cluster,client,shutdown
