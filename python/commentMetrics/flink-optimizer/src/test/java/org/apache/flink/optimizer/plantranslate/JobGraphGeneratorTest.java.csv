# id;timestamp;commentText;codeText;commentWords;codeWords
JobGraphGeneratorTest -> @Test 	public void testResourcesForDeltaIteration() throws Exception;1489671807;Verifies that the resources are set onto each job vertex correctly when generating job graph_which covers the delta iteration case;@Test_	public void testResourcesForDeltaIteration() throws Exception{_		ResourceSpec resource1 = new ResourceSpec(0.1, 100)__		ResourceSpec resource2 = new ResourceSpec(0.2, 200)__		ResourceSpec resource3 = new ResourceSpec(0.3, 300)__		ResourceSpec resource4 = new ResourceSpec(0.4, 400)__		ResourceSpec resource5 = new ResourceSpec(0.5, 500)__		ResourceSpec resource6 = new ResourceSpec(0.6, 600)___		Method opMethod = Operator.class.getDeclaredMethod("setResources", ResourceSpec.class)__		opMethod.setAccessible(true)___		Method deltaMethod = DeltaIteration.class.getDeclaredMethod("setResources", ResourceSpec.class)__		deltaMethod.setAccessible(true)___		Method sinkMethod = DataSink.class.getDeclaredMethod("setResources", ResourceSpec.class)__		sinkMethod.setAccessible(true)___		MapFunction<Tuple2<Long, Long>, Tuple2<Long, Long>> mapFunction = new MapFunction<Tuple2<Long, Long>, Tuple2<Long, Long>>() {_			@Override_			public Tuple2<Long, Long> map(Tuple2<Long, Long> value) throws Exception {_				return value__			}_		}___		FilterFunction<Tuple2<Long, Long>> filterFunction = new FilterFunction<Tuple2<Long, Long>>() {_			@Override_			public boolean filter(Tuple2<Long, Long> value) throws Exception {_				return false__			}_		}___		ExecutionEnvironment env = ExecutionEnvironment.getExecutionEnvironment()___		DataSet<Tuple2<Long, Long>> input = env.fromElements(new Tuple2<>(1L, 2L))__		opMethod.invoke(input, resource1)___		_		DataSet<Tuple2<Long, Long>> map = input.map(mapFunction)__		opMethod.invoke(map, resource2)___		DeltaIteration<Tuple2<Long, Long>, Tuple2<Long, Long>> iteration = map.iterateDelta(map, 100, 0)._				registerAggregator("test", new LongSumAggregator())__		deltaMethod.invoke(iteration, resource3)___		DataSet<Tuple2<Long, Long>> delta = iteration.getWorkset().map(mapFunction)__		opMethod.invoke(delta, resource4)___		DataSet<Tuple2<Long, Long>> feedback = delta.filter(filterFunction)__		opMethod.invoke(feedback, resource5)___		DataSink<Tuple2<Long, Long>> sink = iteration.closeWith(delta, feedback)._				output(new DiscardingOutputFormat<Tuple2<Long, Long>>())__		sinkMethod.invoke(sink, resource6)___		Plan plan = env.createProgramPlan()__		Optimizer pc = new Optimizer(new Configuration())__		OptimizedPlan op = pc.compile(plan)___		JobGraphGenerator jgg = new JobGraphGenerator()__		JobGraph jobGraph = jgg.compileJobGraph(op)___		JobVertex sourceMapVertex = jobGraph.getVerticesSortedTopologicallyFromSources().get(0)__		JobVertex iterationHeadVertex = jobGraph.getVerticesSortedTopologicallyFromSources().get(1)__		JobVertex deltaVertex = jobGraph.getVerticesSortedTopologicallyFromSources().get(2)__		JobVertex iterationTailVertex = jobGraph.getVerticesSortedTopologicallyFromSources().get(3)__		JobVertex feedbackVertex = jobGraph.getVerticesSortedTopologicallyFromSources().get(4)__		JobVertex sinkVertex = jobGraph.getVerticesSortedTopologicallyFromSources().get(5)__		JobVertex iterationSyncVertex = jobGraph.getVerticesSortedTopologicallyFromSources().get(6)___		assertTrue(sourceMapVertex.getMinResources().equals(resource1.merge(resource2)))__		assertTrue(iterationHeadVertex.getPreferredResources().equals(resource3))__		assertTrue(deltaVertex.getMinResources().equals(resource4))__		_		assertTrue(iterationTailVertex.getPreferredResources().equals(ResourceSpec.DEFAULT))__		assertTrue(feedbackVertex.getMinResources().equals(resource5))__		assertTrue(sinkVertex.getPreferredResources().equals(resource6))__		assertTrue(iterationSyncVertex.getMinResources().equals(resource3))__	};verifies,that,the,resources,are,set,onto,each,job,vertex,correctly,when,generating,job,graph,which,covers,the,delta,iteration,case;test,public,void,test,resources,for,delta,iteration,throws,exception,resource,spec,resource1,new,resource,spec,0,1,100,resource,spec,resource2,new,resource,spec,0,2,200,resource,spec,resource3,new,resource,spec,0,3,300,resource,spec,resource4,new,resource,spec,0,4,400,resource,spec,resource5,new,resource,spec,0,5,500,resource,spec,resource6,new,resource,spec,0,6,600,method,op,method,operator,class,get,declared,method,set,resources,resource,spec,class,op,method,set,accessible,true,method,delta,method,delta,iteration,class,get,declared,method,set,resources,resource,spec,class,delta,method,set,accessible,true,method,sink,method,data,sink,class,get,declared,method,set,resources,resource,spec,class,sink,method,set,accessible,true,map,function,tuple2,long,long,tuple2,long,long,map,function,new,map,function,tuple2,long,long,tuple2,long,long,override,public,tuple2,long,long,map,tuple2,long,long,value,throws,exception,return,value,filter,function,tuple2,long,long,filter,function,new,filter,function,tuple2,long,long,override,public,boolean,filter,tuple2,long,long,value,throws,exception,return,false,execution,environment,env,execution,environment,get,execution,environment,data,set,tuple2,long,long,input,env,from,elements,new,tuple2,1l,2l,op,method,invoke,input,resource1,data,set,tuple2,long,long,map,input,map,map,function,op,method,invoke,map,resource2,delta,iteration,tuple2,long,long,tuple2,long,long,iteration,map,iterate,delta,map,100,0,register,aggregator,test,new,long,sum,aggregator,delta,method,invoke,iteration,resource3,data,set,tuple2,long,long,delta,iteration,get,workset,map,map,function,op,method,invoke,delta,resource4,data,set,tuple2,long,long,feedback,delta,filter,filter,function,op,method,invoke,feedback,resource5,data,sink,tuple2,long,long,sink,iteration,close,with,delta,feedback,output,new,discarding,output,format,tuple2,long,long,sink,method,invoke,sink,resource6,plan,plan,env,create,program,plan,optimizer,pc,new,optimizer,new,configuration,optimized,plan,op,pc,compile,plan,job,graph,generator,jgg,new,job,graph,generator,job,graph,job,graph,jgg,compile,job,graph,op,job,vertex,source,map,vertex,job,graph,get,vertices,sorted,topologically,from,sources,get,0,job,vertex,iteration,head,vertex,job,graph,get,vertices,sorted,topologically,from,sources,get,1,job,vertex,delta,vertex,job,graph,get,vertices,sorted,topologically,from,sources,get,2,job,vertex,iteration,tail,vertex,job,graph,get,vertices,sorted,topologically,from,sources,get,3,job,vertex,feedback,vertex,job,graph,get,vertices,sorted,topologically,from,sources,get,4,job,vertex,sink,vertex,job,graph,get,vertices,sorted,topologically,from,sources,get,5,job,vertex,iteration,sync,vertex,job,graph,get,vertices,sorted,topologically,from,sources,get,6,assert,true,source,map,vertex,get,min,resources,equals,resource1,merge,resource2,assert,true,iteration,head,vertex,get,preferred,resources,equals,resource3,assert,true,delta,vertex,get,min,resources,equals,resource4,assert,true,iteration,tail,vertex,get,preferred,resources,equals,resource,spec,default,assert,true,feedback,vertex,get,min,resources,equals,resource5,assert,true,sink,vertex,get,preferred,resources,equals,resource6,assert,true,iteration,sync,vertex,get,min,resources,equals,resource3
JobGraphGeneratorTest -> @Test 	public void testResourcesForDeltaIteration() throws Exception;1513261900;Verifies that the resources are set onto each job vertex correctly when generating job graph_which covers the delta iteration case;@Test_	public void testResourcesForDeltaIteration() throws Exception{_		ResourceSpec resource1 = ResourceSpec.newBuilder().setCpuCores(0.1).setHeapMemoryInMB(100).build()__		ResourceSpec resource2 = ResourceSpec.newBuilder().setCpuCores(0.2).setHeapMemoryInMB(200).build()__		ResourceSpec resource3 = ResourceSpec.newBuilder().setCpuCores(0.3).setHeapMemoryInMB(300).build()__		ResourceSpec resource4 = ResourceSpec.newBuilder().setCpuCores(0.4).setHeapMemoryInMB(400).build()__		ResourceSpec resource5 = ResourceSpec.newBuilder().setCpuCores(0.5).setHeapMemoryInMB(500).build()__		ResourceSpec resource6 = ResourceSpec.newBuilder().setCpuCores(0.6).setHeapMemoryInMB(600).build()___		Method opMethod = Operator.class.getDeclaredMethod("setResources", ResourceSpec.class)__		opMethod.setAccessible(true)___		Method deltaMethod = DeltaIteration.class.getDeclaredMethod("setResources", ResourceSpec.class)__		deltaMethod.setAccessible(true)___		Method sinkMethod = DataSink.class.getDeclaredMethod("setResources", ResourceSpec.class)__		sinkMethod.setAccessible(true)___		MapFunction<Tuple2<Long, Long>, Tuple2<Long, Long>> mapFunction = new MapFunction<Tuple2<Long, Long>, Tuple2<Long, Long>>() {_			@Override_			public Tuple2<Long, Long> map(Tuple2<Long, Long> value) throws Exception {_				return value__			}_		}___		FilterFunction<Tuple2<Long, Long>> filterFunction = new FilterFunction<Tuple2<Long, Long>>() {_			@Override_			public boolean filter(Tuple2<Long, Long> value) throws Exception {_				return false__			}_		}___		ExecutionEnvironment env = ExecutionEnvironment.getExecutionEnvironment()___		DataSet<Tuple2<Long, Long>> input = env.fromElements(new Tuple2<>(1L, 2L))__		opMethod.invoke(input, resource1)___		_		DataSet<Tuple2<Long, Long>> map = input.map(mapFunction)__		opMethod.invoke(map, resource2)___		DeltaIteration<Tuple2<Long, Long>, Tuple2<Long, Long>> iteration = map.iterateDelta(map, 100, 0)._				registerAggregator("test", new LongSumAggregator())__		deltaMethod.invoke(iteration, resource3)___		DataSet<Tuple2<Long, Long>> delta = iteration.getWorkset().map(mapFunction)__		opMethod.invoke(delta, resource4)___		DataSet<Tuple2<Long, Long>> feedback = delta.filter(filterFunction)__		opMethod.invoke(feedback, resource5)___		DataSink<Tuple2<Long, Long>> sink = iteration.closeWith(delta, feedback)._				output(new DiscardingOutputFormat<Tuple2<Long, Long>>())__		sinkMethod.invoke(sink, resource6)___		Plan plan = env.createProgramPlan()__		Optimizer pc = new Optimizer(new Configuration())__		OptimizedPlan op = pc.compile(plan)___		JobGraphGenerator jgg = new JobGraphGenerator()__		JobGraph jobGraph = jgg.compileJobGraph(op)___		JobVertex sourceMapVertex = jobGraph.getVerticesSortedTopologicallyFromSources().get(0)__		JobVertex iterationHeadVertex = jobGraph.getVerticesSortedTopologicallyFromSources().get(1)__		JobVertex deltaVertex = jobGraph.getVerticesSortedTopologicallyFromSources().get(2)__		JobVertex iterationTailVertex = jobGraph.getVerticesSortedTopologicallyFromSources().get(3)__		JobVertex feedbackVertex = jobGraph.getVerticesSortedTopologicallyFromSources().get(4)__		JobVertex sinkVertex = jobGraph.getVerticesSortedTopologicallyFromSources().get(5)__		JobVertex iterationSyncVertex = jobGraph.getVerticesSortedTopologicallyFromSources().get(6)___		assertTrue(sourceMapVertex.getMinResources().equals(resource1.merge(resource2)))__		assertTrue(iterationHeadVertex.getPreferredResources().equals(resource3))__		assertTrue(deltaVertex.getMinResources().equals(resource4))__		_		assertTrue(iterationTailVertex.getPreferredResources().equals(ResourceSpec.DEFAULT))__		assertTrue(feedbackVertex.getMinResources().equals(resource5))__		assertTrue(sinkVertex.getPreferredResources().equals(resource6))__		assertTrue(iterationSyncVertex.getMinResources().equals(resource3))__	};verifies,that,the,resources,are,set,onto,each,job,vertex,correctly,when,generating,job,graph,which,covers,the,delta,iteration,case;test,public,void,test,resources,for,delta,iteration,throws,exception,resource,spec,resource1,resource,spec,new,builder,set,cpu,cores,0,1,set,heap,memory,in,mb,100,build,resource,spec,resource2,resource,spec,new,builder,set,cpu,cores,0,2,set,heap,memory,in,mb,200,build,resource,spec,resource3,resource,spec,new,builder,set,cpu,cores,0,3,set,heap,memory,in,mb,300,build,resource,spec,resource4,resource,spec,new,builder,set,cpu,cores,0,4,set,heap,memory,in,mb,400,build,resource,spec,resource5,resource,spec,new,builder,set,cpu,cores,0,5,set,heap,memory,in,mb,500,build,resource,spec,resource6,resource,spec,new,builder,set,cpu,cores,0,6,set,heap,memory,in,mb,600,build,method,op,method,operator,class,get,declared,method,set,resources,resource,spec,class,op,method,set,accessible,true,method,delta,method,delta,iteration,class,get,declared,method,set,resources,resource,spec,class,delta,method,set,accessible,true,method,sink,method,data,sink,class,get,declared,method,set,resources,resource,spec,class,sink,method,set,accessible,true,map,function,tuple2,long,long,tuple2,long,long,map,function,new,map,function,tuple2,long,long,tuple2,long,long,override,public,tuple2,long,long,map,tuple2,long,long,value,throws,exception,return,value,filter,function,tuple2,long,long,filter,function,new,filter,function,tuple2,long,long,override,public,boolean,filter,tuple2,long,long,value,throws,exception,return,false,execution,environment,env,execution,environment,get,execution,environment,data,set,tuple2,long,long,input,env,from,elements,new,tuple2,1l,2l,op,method,invoke,input,resource1,data,set,tuple2,long,long,map,input,map,map,function,op,method,invoke,map,resource2,delta,iteration,tuple2,long,long,tuple2,long,long,iteration,map,iterate,delta,map,100,0,register,aggregator,test,new,long,sum,aggregator,delta,method,invoke,iteration,resource3,data,set,tuple2,long,long,delta,iteration,get,workset,map,map,function,op,method,invoke,delta,resource4,data,set,tuple2,long,long,feedback,delta,filter,filter,function,op,method,invoke,feedback,resource5,data,sink,tuple2,long,long,sink,iteration,close,with,delta,feedback,output,new,discarding,output,format,tuple2,long,long,sink,method,invoke,sink,resource6,plan,plan,env,create,program,plan,optimizer,pc,new,optimizer,new,configuration,optimized,plan,op,pc,compile,plan,job,graph,generator,jgg,new,job,graph,generator,job,graph,job,graph,jgg,compile,job,graph,op,job,vertex,source,map,vertex,job,graph,get,vertices,sorted,topologically,from,sources,get,0,job,vertex,iteration,head,vertex,job,graph,get,vertices,sorted,topologically,from,sources,get,1,job,vertex,delta,vertex,job,graph,get,vertices,sorted,topologically,from,sources,get,2,job,vertex,iteration,tail,vertex,job,graph,get,vertices,sorted,topologically,from,sources,get,3,job,vertex,feedback,vertex,job,graph,get,vertices,sorted,topologically,from,sources,get,4,job,vertex,sink,vertex,job,graph,get,vertices,sorted,topologically,from,sources,get,5,job,vertex,iteration,sync,vertex,job,graph,get,vertices,sorted,topologically,from,sources,get,6,assert,true,source,map,vertex,get,min,resources,equals,resource1,merge,resource2,assert,true,iteration,head,vertex,get,preferred,resources,equals,resource3,assert,true,delta,vertex,get,min,resources,equals,resource4,assert,true,iteration,tail,vertex,get,preferred,resources,equals,resource,spec,default,assert,true,feedback,vertex,get,min,resources,equals,resource5,assert,true,sink,vertex,get,preferred,resources,equals,resource6,assert,true,iteration,sync,vertex,get,min,resources,equals,resource3
JobGraphGeneratorTest -> @Test 	public void testResourcesForDeltaIteration() throws Exception;1529583969;Verifies that the resources are set onto each job vertex correctly when generating job graph_which covers the delta iteration case;@Test_	public void testResourcesForDeltaIteration() throws Exception{_		ResourceSpec resource1 = ResourceSpec.newBuilder().setCpuCores(0.1).setHeapMemoryInMB(100).build()__		ResourceSpec resource2 = ResourceSpec.newBuilder().setCpuCores(0.2).setHeapMemoryInMB(200).build()__		ResourceSpec resource3 = ResourceSpec.newBuilder().setCpuCores(0.3).setHeapMemoryInMB(300).build()__		ResourceSpec resource4 = ResourceSpec.newBuilder().setCpuCores(0.4).setHeapMemoryInMB(400).build()__		ResourceSpec resource5 = ResourceSpec.newBuilder().setCpuCores(0.5).setHeapMemoryInMB(500).build()__		ResourceSpec resource6 = ResourceSpec.newBuilder().setCpuCores(0.6).setHeapMemoryInMB(600).build()___		Method opMethod = Operator.class.getDeclaredMethod("setResources", ResourceSpec.class)__		opMethod.setAccessible(true)___		Method deltaMethod = DeltaIteration.class.getDeclaredMethod("setResources", ResourceSpec.class)__		deltaMethod.setAccessible(true)___		Method sinkMethod = DataSink.class.getDeclaredMethod("setResources", ResourceSpec.class)__		sinkMethod.setAccessible(true)___		MapFunction<Tuple2<Long, Long>, Tuple2<Long, Long>> mapFunction = new MapFunction<Tuple2<Long, Long>, Tuple2<Long, Long>>() {_			@Override_			public Tuple2<Long, Long> map(Tuple2<Long, Long> value) throws Exception {_				return value__			}_		}___		FilterFunction<Tuple2<Long, Long>> filterFunction = new FilterFunction<Tuple2<Long, Long>>() {_			@Override_			public boolean filter(Tuple2<Long, Long> value) throws Exception {_				return false__			}_		}___		ExecutionEnvironment env = ExecutionEnvironment.getExecutionEnvironment()___		DataSet<Tuple2<Long, Long>> input = env.fromElements(new Tuple2<>(1L, 2L))__		opMethod.invoke(input, resource1)___		_		DataSet<Tuple2<Long, Long>> map = input.map(mapFunction)__		opMethod.invoke(map, resource2)___		DeltaIteration<Tuple2<Long, Long>, Tuple2<Long, Long>> iteration = map.iterateDelta(map, 100, 0)._				registerAggregator("test", new LongSumAggregator())__		deltaMethod.invoke(iteration, resource3)___		DataSet<Tuple2<Long, Long>> delta = iteration.getWorkset().map(mapFunction)__		opMethod.invoke(delta, resource4)___		DataSet<Tuple2<Long, Long>> feedback = delta.filter(filterFunction)__		opMethod.invoke(feedback, resource5)___		DataSink<Tuple2<Long, Long>> sink = iteration.closeWith(delta, feedback)._				output(new DiscardingOutputFormat<Tuple2<Long, Long>>())__		sinkMethod.invoke(sink, resource6)___		Plan plan = env.createProgramPlan()__		Optimizer pc = new Optimizer(new Configuration())__		OptimizedPlan op = pc.compile(plan)___		JobGraphGenerator jgg = new JobGraphGenerator()__		JobGraph jobGraph = jgg.compileJobGraph(op)___		JobVertex sourceMapVertex = jobGraph.getVerticesSortedTopologicallyFromSources().get(0)__		JobVertex iterationHeadVertex = jobGraph.getVerticesSortedTopologicallyFromSources().get(1)__		JobVertex deltaVertex = jobGraph.getVerticesSortedTopologicallyFromSources().get(2)__		JobVertex iterationTailVertex = jobGraph.getVerticesSortedTopologicallyFromSources().get(3)__		JobVertex feedbackVertex = jobGraph.getVerticesSortedTopologicallyFromSources().get(4)__		JobVertex sinkVertex = jobGraph.getVerticesSortedTopologicallyFromSources().get(5)__		JobVertex iterationSyncVertex = jobGraph.getVerticesSortedTopologicallyFromSources().get(6)___		assertTrue(sourceMapVertex.getMinResources().equals(resource1.merge(resource2)))__		assertTrue(iterationHeadVertex.getPreferredResources().equals(resource3))__		assertTrue(deltaVertex.getMinResources().equals(resource4))__		_		assertTrue(iterationTailVertex.getPreferredResources().equals(ResourceSpec.DEFAULT))__		assertTrue(feedbackVertex.getMinResources().equals(resource5))__		assertTrue(sinkVertex.getPreferredResources().equals(resource6))__		assertTrue(iterationSyncVertex.getMinResources().equals(resource3))__	};verifies,that,the,resources,are,set,onto,each,job,vertex,correctly,when,generating,job,graph,which,covers,the,delta,iteration,case;test,public,void,test,resources,for,delta,iteration,throws,exception,resource,spec,resource1,resource,spec,new,builder,set,cpu,cores,0,1,set,heap,memory,in,mb,100,build,resource,spec,resource2,resource,spec,new,builder,set,cpu,cores,0,2,set,heap,memory,in,mb,200,build,resource,spec,resource3,resource,spec,new,builder,set,cpu,cores,0,3,set,heap,memory,in,mb,300,build,resource,spec,resource4,resource,spec,new,builder,set,cpu,cores,0,4,set,heap,memory,in,mb,400,build,resource,spec,resource5,resource,spec,new,builder,set,cpu,cores,0,5,set,heap,memory,in,mb,500,build,resource,spec,resource6,resource,spec,new,builder,set,cpu,cores,0,6,set,heap,memory,in,mb,600,build,method,op,method,operator,class,get,declared,method,set,resources,resource,spec,class,op,method,set,accessible,true,method,delta,method,delta,iteration,class,get,declared,method,set,resources,resource,spec,class,delta,method,set,accessible,true,method,sink,method,data,sink,class,get,declared,method,set,resources,resource,spec,class,sink,method,set,accessible,true,map,function,tuple2,long,long,tuple2,long,long,map,function,new,map,function,tuple2,long,long,tuple2,long,long,override,public,tuple2,long,long,map,tuple2,long,long,value,throws,exception,return,value,filter,function,tuple2,long,long,filter,function,new,filter,function,tuple2,long,long,override,public,boolean,filter,tuple2,long,long,value,throws,exception,return,false,execution,environment,env,execution,environment,get,execution,environment,data,set,tuple2,long,long,input,env,from,elements,new,tuple2,1l,2l,op,method,invoke,input,resource1,data,set,tuple2,long,long,map,input,map,map,function,op,method,invoke,map,resource2,delta,iteration,tuple2,long,long,tuple2,long,long,iteration,map,iterate,delta,map,100,0,register,aggregator,test,new,long,sum,aggregator,delta,method,invoke,iteration,resource3,data,set,tuple2,long,long,delta,iteration,get,workset,map,map,function,op,method,invoke,delta,resource4,data,set,tuple2,long,long,feedback,delta,filter,filter,function,op,method,invoke,feedback,resource5,data,sink,tuple2,long,long,sink,iteration,close,with,delta,feedback,output,new,discarding,output,format,tuple2,long,long,sink,method,invoke,sink,resource6,plan,plan,env,create,program,plan,optimizer,pc,new,optimizer,new,configuration,optimized,plan,op,pc,compile,plan,job,graph,generator,jgg,new,job,graph,generator,job,graph,job,graph,jgg,compile,job,graph,op,job,vertex,source,map,vertex,job,graph,get,vertices,sorted,topologically,from,sources,get,0,job,vertex,iteration,head,vertex,job,graph,get,vertices,sorted,topologically,from,sources,get,1,job,vertex,delta,vertex,job,graph,get,vertices,sorted,topologically,from,sources,get,2,job,vertex,iteration,tail,vertex,job,graph,get,vertices,sorted,topologically,from,sources,get,3,job,vertex,feedback,vertex,job,graph,get,vertices,sorted,topologically,from,sources,get,4,job,vertex,sink,vertex,job,graph,get,vertices,sorted,topologically,from,sources,get,5,job,vertex,iteration,sync,vertex,job,graph,get,vertices,sorted,topologically,from,sources,get,6,assert,true,source,map,vertex,get,min,resources,equals,resource1,merge,resource2,assert,true,iteration,head,vertex,get,preferred,resources,equals,resource3,assert,true,delta,vertex,get,min,resources,equals,resource4,assert,true,iteration,tail,vertex,get,preferred,resources,equals,resource,spec,default,assert,true,feedback,vertex,get,min,resources,equals,resource5,assert,true,sink,vertex,get,preferred,resources,equals,resource6,assert,true,iteration,sync,vertex,get,min,resources,equals,resource3
JobGraphGeneratorTest -> @Test 	public void testResourcesForChainedOperators() throws Exception;1489671807;Verifies that the resources are merged correctly for chained operators when_generating job graph;@Test_	public void testResourcesForChainedOperators() throws Exception {_		ResourceSpec resource1 = new ResourceSpec(0.1, 100)__		ResourceSpec resource2 = new ResourceSpec(0.2, 200)__		ResourceSpec resource3 = new ResourceSpec(0.3, 300)__		ResourceSpec resource4 = new ResourceSpec(0.4, 400)__		ResourceSpec resource5 = new ResourceSpec(0.5, 500)__		ResourceSpec resource6 = new ResourceSpec(0.6, 600)__		ResourceSpec resource7 = new ResourceSpec(0.7, 700)___		Method opMethod = Operator.class.getDeclaredMethod("setResources", ResourceSpec.class)__		opMethod.setAccessible(true)___		Method sinkMethod = DataSink.class.getDeclaredMethod("setResources", ResourceSpec.class)__		sinkMethod.setAccessible(true)___		MapFunction<Long, Long> mapFunction = new MapFunction<Long, Long>() {_			@Override_			public Long map(Long value) throws Exception {_				return value__			}_		}___		FilterFunction<Long> filterFunction = new FilterFunction<Long>() {_			@Override_			public boolean filter(Long value) throws Exception {_				return false__			}_		}___		ExecutionEnvironment env = ExecutionEnvironment.getExecutionEnvironment()___		DataSet<Long> input = env.fromElements(1L, 2L, 3L)__		opMethod.invoke(input, resource1)___		DataSet<Long> map1 = input.map(mapFunction)__		opMethod.invoke(map1, resource2)___		_		DataSet<Long> filter1 = map1.filter(filterFunction)__		opMethod.invoke(filter1, resource3)___		IterativeDataSet<Long> startOfIteration = filter1.iterate(10)__		opMethod.invoke(startOfIteration, resource4)___		DataSet<Long> map2 = startOfIteration.map(mapFunction)__		opMethod.invoke(map2, resource5)___		_		DataSet<Long> feedback = map2.filter(filterFunction)__		opMethod.invoke(feedback, resource6)___		DataSink<Long> sink = startOfIteration.closeWith(feedback).output(new DiscardingOutputFormat<Long>())__		sinkMethod.invoke(sink, resource7)___		Plan plan = env.createProgramPlan()__		Optimizer pc = new Optimizer(new Configuration())__		OptimizedPlan op = pc.compile(plan)___		JobGraphGenerator jgg = new JobGraphGenerator()__		JobGraph jobGraph = jgg.compileJobGraph(op)___		JobVertex sourceMapFilterVertex = jobGraph.getVerticesSortedTopologicallyFromSources().get(0)__		JobVertex iterationHeadVertex = jobGraph.getVerticesSortedTopologicallyFromSources().get(1)__		JobVertex feedbackVertex = jobGraph.getVerticesSortedTopologicallyFromSources().get(2)__		JobVertex sinkVertex = jobGraph.getVerticesSortedTopologicallyFromSources().get(3)__		JobVertex iterationSyncVertex = jobGraph.getVerticesSortedTopologicallyFromSources().get(4)___		assertTrue(sourceMapFilterVertex.getMinResources().equals(resource1.merge(resource2).merge(resource3)))__		assertTrue(iterationHeadVertex.getPreferredResources().equals(resource4))__		assertTrue(feedbackVertex.getMinResources().equals(resource5.merge(resource6)))__		assertTrue(sinkVertex.getPreferredResources().equals(resource7))__		assertTrue(iterationSyncVertex.getMinResources().equals(resource4))__	};verifies,that,the,resources,are,merged,correctly,for,chained,operators,when,generating,job,graph;test,public,void,test,resources,for,chained,operators,throws,exception,resource,spec,resource1,new,resource,spec,0,1,100,resource,spec,resource2,new,resource,spec,0,2,200,resource,spec,resource3,new,resource,spec,0,3,300,resource,spec,resource4,new,resource,spec,0,4,400,resource,spec,resource5,new,resource,spec,0,5,500,resource,spec,resource6,new,resource,spec,0,6,600,resource,spec,resource7,new,resource,spec,0,7,700,method,op,method,operator,class,get,declared,method,set,resources,resource,spec,class,op,method,set,accessible,true,method,sink,method,data,sink,class,get,declared,method,set,resources,resource,spec,class,sink,method,set,accessible,true,map,function,long,long,map,function,new,map,function,long,long,override,public,long,map,long,value,throws,exception,return,value,filter,function,long,filter,function,new,filter,function,long,override,public,boolean,filter,long,value,throws,exception,return,false,execution,environment,env,execution,environment,get,execution,environment,data,set,long,input,env,from,elements,1l,2l,3l,op,method,invoke,input,resource1,data,set,long,map1,input,map,map,function,op,method,invoke,map1,resource2,data,set,long,filter1,map1,filter,filter,function,op,method,invoke,filter1,resource3,iterative,data,set,long,start,of,iteration,filter1,iterate,10,op,method,invoke,start,of,iteration,resource4,data,set,long,map2,start,of,iteration,map,map,function,op,method,invoke,map2,resource5,data,set,long,feedback,map2,filter,filter,function,op,method,invoke,feedback,resource6,data,sink,long,sink,start,of,iteration,close,with,feedback,output,new,discarding,output,format,long,sink,method,invoke,sink,resource7,plan,plan,env,create,program,plan,optimizer,pc,new,optimizer,new,configuration,optimized,plan,op,pc,compile,plan,job,graph,generator,jgg,new,job,graph,generator,job,graph,job,graph,jgg,compile,job,graph,op,job,vertex,source,map,filter,vertex,job,graph,get,vertices,sorted,topologically,from,sources,get,0,job,vertex,iteration,head,vertex,job,graph,get,vertices,sorted,topologically,from,sources,get,1,job,vertex,feedback,vertex,job,graph,get,vertices,sorted,topologically,from,sources,get,2,job,vertex,sink,vertex,job,graph,get,vertices,sorted,topologically,from,sources,get,3,job,vertex,iteration,sync,vertex,job,graph,get,vertices,sorted,topologically,from,sources,get,4,assert,true,source,map,filter,vertex,get,min,resources,equals,resource1,merge,resource2,merge,resource3,assert,true,iteration,head,vertex,get,preferred,resources,equals,resource4,assert,true,feedback,vertex,get,min,resources,equals,resource5,merge,resource6,assert,true,sink,vertex,get,preferred,resources,equals,resource7,assert,true,iteration,sync,vertex,get,min,resources,equals,resource4
JobGraphGeneratorTest -> @Test 	public void testResourcesForChainedOperators() throws Exception;1513261900;Verifies that the resources are merged correctly for chained operators when_generating job graph;@Test_	public void testResourcesForChainedOperators() throws Exception {_		ResourceSpec resource1 = ResourceSpec.newBuilder().setCpuCores(0.1).setHeapMemoryInMB(100).build()__		ResourceSpec resource2 = ResourceSpec.newBuilder().setCpuCores(0.2).setHeapMemoryInMB(200).build()__		ResourceSpec resource3 = ResourceSpec.newBuilder().setCpuCores(0.3).setHeapMemoryInMB(300).build()__		ResourceSpec resource4 = ResourceSpec.newBuilder().setCpuCores(0.4).setHeapMemoryInMB(400).build()__		ResourceSpec resource5 = ResourceSpec.newBuilder().setCpuCores(0.5).setHeapMemoryInMB(500).build()__		ResourceSpec resource6 = ResourceSpec.newBuilder().setCpuCores(0.6).setHeapMemoryInMB(600).build()__		ResourceSpec resource7 = ResourceSpec.newBuilder().setCpuCores(0.7).setHeapMemoryInMB(700).build()___		Method opMethod = Operator.class.getDeclaredMethod("setResources", ResourceSpec.class)__		opMethod.setAccessible(true)___		Method sinkMethod = DataSink.class.getDeclaredMethod("setResources", ResourceSpec.class)__		sinkMethod.setAccessible(true)___		MapFunction<Long, Long> mapFunction = new MapFunction<Long, Long>() {_			@Override_			public Long map(Long value) throws Exception {_				return value__			}_		}___		FilterFunction<Long> filterFunction = new FilterFunction<Long>() {_			@Override_			public boolean filter(Long value) throws Exception {_				return false__			}_		}___		ExecutionEnvironment env = ExecutionEnvironment.getExecutionEnvironment()___		DataSet<Long> input = env.fromElements(1L, 2L, 3L)__		opMethod.invoke(input, resource1)___		DataSet<Long> map1 = input.map(mapFunction)__		opMethod.invoke(map1, resource2)___		_		DataSet<Long> filter1 = map1.filter(filterFunction)__		opMethod.invoke(filter1, resource3)___		IterativeDataSet<Long> startOfIteration = filter1.iterate(10)__		opMethod.invoke(startOfIteration, resource4)___		DataSet<Long> map2 = startOfIteration.map(mapFunction)__		opMethod.invoke(map2, resource5)___		_		DataSet<Long> feedback = map2.filter(filterFunction)__		opMethod.invoke(feedback, resource6)___		DataSink<Long> sink = startOfIteration.closeWith(feedback).output(new DiscardingOutputFormat<Long>())__		sinkMethod.invoke(sink, resource7)___		Plan plan = env.createProgramPlan()__		Optimizer pc = new Optimizer(new Configuration())__		OptimizedPlan op = pc.compile(plan)___		JobGraphGenerator jgg = new JobGraphGenerator()__		JobGraph jobGraph = jgg.compileJobGraph(op)___		JobVertex sourceMapFilterVertex = jobGraph.getVerticesSortedTopologicallyFromSources().get(0)__		JobVertex iterationHeadVertex = jobGraph.getVerticesSortedTopologicallyFromSources().get(1)__		JobVertex feedbackVertex = jobGraph.getVerticesSortedTopologicallyFromSources().get(2)__		JobVertex sinkVertex = jobGraph.getVerticesSortedTopologicallyFromSources().get(3)__		JobVertex iterationSyncVertex = jobGraph.getVerticesSortedTopologicallyFromSources().get(4)___		assertTrue(sourceMapFilterVertex.getMinResources().equals(resource1.merge(resource2).merge(resource3)))__		assertTrue(iterationHeadVertex.getPreferredResources().equals(resource4))__		assertTrue(feedbackVertex.getMinResources().equals(resource5.merge(resource6)))__		assertTrue(sinkVertex.getPreferredResources().equals(resource7))__		assertTrue(iterationSyncVertex.getMinResources().equals(resource4))__	};verifies,that,the,resources,are,merged,correctly,for,chained,operators,when,generating,job,graph;test,public,void,test,resources,for,chained,operators,throws,exception,resource,spec,resource1,resource,spec,new,builder,set,cpu,cores,0,1,set,heap,memory,in,mb,100,build,resource,spec,resource2,resource,spec,new,builder,set,cpu,cores,0,2,set,heap,memory,in,mb,200,build,resource,spec,resource3,resource,spec,new,builder,set,cpu,cores,0,3,set,heap,memory,in,mb,300,build,resource,spec,resource4,resource,spec,new,builder,set,cpu,cores,0,4,set,heap,memory,in,mb,400,build,resource,spec,resource5,resource,spec,new,builder,set,cpu,cores,0,5,set,heap,memory,in,mb,500,build,resource,spec,resource6,resource,spec,new,builder,set,cpu,cores,0,6,set,heap,memory,in,mb,600,build,resource,spec,resource7,resource,spec,new,builder,set,cpu,cores,0,7,set,heap,memory,in,mb,700,build,method,op,method,operator,class,get,declared,method,set,resources,resource,spec,class,op,method,set,accessible,true,method,sink,method,data,sink,class,get,declared,method,set,resources,resource,spec,class,sink,method,set,accessible,true,map,function,long,long,map,function,new,map,function,long,long,override,public,long,map,long,value,throws,exception,return,value,filter,function,long,filter,function,new,filter,function,long,override,public,boolean,filter,long,value,throws,exception,return,false,execution,environment,env,execution,environment,get,execution,environment,data,set,long,input,env,from,elements,1l,2l,3l,op,method,invoke,input,resource1,data,set,long,map1,input,map,map,function,op,method,invoke,map1,resource2,data,set,long,filter1,map1,filter,filter,function,op,method,invoke,filter1,resource3,iterative,data,set,long,start,of,iteration,filter1,iterate,10,op,method,invoke,start,of,iteration,resource4,data,set,long,map2,start,of,iteration,map,map,function,op,method,invoke,map2,resource5,data,set,long,feedback,map2,filter,filter,function,op,method,invoke,feedback,resource6,data,sink,long,sink,start,of,iteration,close,with,feedback,output,new,discarding,output,format,long,sink,method,invoke,sink,resource7,plan,plan,env,create,program,plan,optimizer,pc,new,optimizer,new,configuration,optimized,plan,op,pc,compile,plan,job,graph,generator,jgg,new,job,graph,generator,job,graph,job,graph,jgg,compile,job,graph,op,job,vertex,source,map,filter,vertex,job,graph,get,vertices,sorted,topologically,from,sources,get,0,job,vertex,iteration,head,vertex,job,graph,get,vertices,sorted,topologically,from,sources,get,1,job,vertex,feedback,vertex,job,graph,get,vertices,sorted,topologically,from,sources,get,2,job,vertex,sink,vertex,job,graph,get,vertices,sorted,topologically,from,sources,get,3,job,vertex,iteration,sync,vertex,job,graph,get,vertices,sorted,topologically,from,sources,get,4,assert,true,source,map,filter,vertex,get,min,resources,equals,resource1,merge,resource2,merge,resource3,assert,true,iteration,head,vertex,get,preferred,resources,equals,resource4,assert,true,feedback,vertex,get,min,resources,equals,resource5,merge,resource6,assert,true,sink,vertex,get,preferred,resources,equals,resource7,assert,true,iteration,sync,vertex,get,min,resources,equals,resource4
JobGraphGeneratorTest -> @Test 	public void testResourcesForChainedOperators() throws Exception;1529583969;Verifies that the resources are merged correctly for chained operators when_generating job graph;@Test_	public void testResourcesForChainedOperators() throws Exception {_		ResourceSpec resource1 = ResourceSpec.newBuilder().setCpuCores(0.1).setHeapMemoryInMB(100).build()__		ResourceSpec resource2 = ResourceSpec.newBuilder().setCpuCores(0.2).setHeapMemoryInMB(200).build()__		ResourceSpec resource3 = ResourceSpec.newBuilder().setCpuCores(0.3).setHeapMemoryInMB(300).build()__		ResourceSpec resource4 = ResourceSpec.newBuilder().setCpuCores(0.4).setHeapMemoryInMB(400).build()__		ResourceSpec resource5 = ResourceSpec.newBuilder().setCpuCores(0.5).setHeapMemoryInMB(500).build()__		ResourceSpec resource6 = ResourceSpec.newBuilder().setCpuCores(0.6).setHeapMemoryInMB(600).build()__		ResourceSpec resource7 = ResourceSpec.newBuilder().setCpuCores(0.7).setHeapMemoryInMB(700).build()___		Method opMethod = Operator.class.getDeclaredMethod("setResources", ResourceSpec.class)__		opMethod.setAccessible(true)___		Method sinkMethod = DataSink.class.getDeclaredMethod("setResources", ResourceSpec.class)__		sinkMethod.setAccessible(true)___		MapFunction<Long, Long> mapFunction = new MapFunction<Long, Long>() {_			@Override_			public Long map(Long value) throws Exception {_				return value__			}_		}___		FilterFunction<Long> filterFunction = new FilterFunction<Long>() {_			@Override_			public boolean filter(Long value) throws Exception {_				return false__			}_		}___		ExecutionEnvironment env = ExecutionEnvironment.getExecutionEnvironment()___		DataSet<Long> input = env.fromElements(1L, 2L, 3L)__		opMethod.invoke(input, resource1)___		DataSet<Long> map1 = input.map(mapFunction)__		opMethod.invoke(map1, resource2)___		_		DataSet<Long> filter1 = map1.filter(filterFunction)__		opMethod.invoke(filter1, resource3)___		IterativeDataSet<Long> startOfIteration = filter1.iterate(10)__		opMethod.invoke(startOfIteration, resource4)___		DataSet<Long> map2 = startOfIteration.map(mapFunction)__		opMethod.invoke(map2, resource5)___		_		DataSet<Long> feedback = map2.filter(filterFunction)__		opMethod.invoke(feedback, resource6)___		DataSink<Long> sink = startOfIteration.closeWith(feedback).output(new DiscardingOutputFormat<Long>())__		sinkMethod.invoke(sink, resource7)___		Plan plan = env.createProgramPlan()__		Optimizer pc = new Optimizer(new Configuration())__		OptimizedPlan op = pc.compile(plan)___		JobGraphGenerator jgg = new JobGraphGenerator()__		JobGraph jobGraph = jgg.compileJobGraph(op)___		JobVertex sourceMapFilterVertex = jobGraph.getVerticesSortedTopologicallyFromSources().get(0)__		JobVertex iterationHeadVertex = jobGraph.getVerticesSortedTopologicallyFromSources().get(1)__		JobVertex feedbackVertex = jobGraph.getVerticesSortedTopologicallyFromSources().get(2)__		JobVertex sinkVertex = jobGraph.getVerticesSortedTopologicallyFromSources().get(3)__		JobVertex iterationSyncVertex = jobGraph.getVerticesSortedTopologicallyFromSources().get(4)___		assertTrue(sourceMapFilterVertex.getMinResources().equals(resource1.merge(resource2).merge(resource3)))__		assertTrue(iterationHeadVertex.getPreferredResources().equals(resource4))__		assertTrue(feedbackVertex.getMinResources().equals(resource5.merge(resource6)))__		assertTrue(sinkVertex.getPreferredResources().equals(resource7))__		assertTrue(iterationSyncVertex.getMinResources().equals(resource4))__	};verifies,that,the,resources,are,merged,correctly,for,chained,operators,when,generating,job,graph;test,public,void,test,resources,for,chained,operators,throws,exception,resource,spec,resource1,resource,spec,new,builder,set,cpu,cores,0,1,set,heap,memory,in,mb,100,build,resource,spec,resource2,resource,spec,new,builder,set,cpu,cores,0,2,set,heap,memory,in,mb,200,build,resource,spec,resource3,resource,spec,new,builder,set,cpu,cores,0,3,set,heap,memory,in,mb,300,build,resource,spec,resource4,resource,spec,new,builder,set,cpu,cores,0,4,set,heap,memory,in,mb,400,build,resource,spec,resource5,resource,spec,new,builder,set,cpu,cores,0,5,set,heap,memory,in,mb,500,build,resource,spec,resource6,resource,spec,new,builder,set,cpu,cores,0,6,set,heap,memory,in,mb,600,build,resource,spec,resource7,resource,spec,new,builder,set,cpu,cores,0,7,set,heap,memory,in,mb,700,build,method,op,method,operator,class,get,declared,method,set,resources,resource,spec,class,op,method,set,accessible,true,method,sink,method,data,sink,class,get,declared,method,set,resources,resource,spec,class,sink,method,set,accessible,true,map,function,long,long,map,function,new,map,function,long,long,override,public,long,map,long,value,throws,exception,return,value,filter,function,long,filter,function,new,filter,function,long,override,public,boolean,filter,long,value,throws,exception,return,false,execution,environment,env,execution,environment,get,execution,environment,data,set,long,input,env,from,elements,1l,2l,3l,op,method,invoke,input,resource1,data,set,long,map1,input,map,map,function,op,method,invoke,map1,resource2,data,set,long,filter1,map1,filter,filter,function,op,method,invoke,filter1,resource3,iterative,data,set,long,start,of,iteration,filter1,iterate,10,op,method,invoke,start,of,iteration,resource4,data,set,long,map2,start,of,iteration,map,map,function,op,method,invoke,map2,resource5,data,set,long,feedback,map2,filter,filter,function,op,method,invoke,feedback,resource6,data,sink,long,sink,start,of,iteration,close,with,feedback,output,new,discarding,output,format,long,sink,method,invoke,sink,resource7,plan,plan,env,create,program,plan,optimizer,pc,new,optimizer,new,configuration,optimized,plan,op,pc,compile,plan,job,graph,generator,jgg,new,job,graph,generator,job,graph,job,graph,jgg,compile,job,graph,op,job,vertex,source,map,filter,vertex,job,graph,get,vertices,sorted,topologically,from,sources,get,0,job,vertex,iteration,head,vertex,job,graph,get,vertices,sorted,topologically,from,sources,get,1,job,vertex,feedback,vertex,job,graph,get,vertices,sorted,topologically,from,sources,get,2,job,vertex,sink,vertex,job,graph,get,vertices,sorted,topologically,from,sources,get,3,job,vertex,iteration,sync,vertex,job,graph,get,vertices,sorted,topologically,from,sources,get,4,assert,true,source,map,filter,vertex,get,min,resources,equals,resource1,merge,resource2,merge,resource3,assert,true,iteration,head,vertex,get,preferred,resources,equals,resource4,assert,true,feedback,vertex,get,min,resources,equals,resource5,merge,resource6,assert,true,sink,vertex,get,preferred,resources,equals,resource7,assert,true,iteration,sync,vertex,get,min,resources,equals,resource4
