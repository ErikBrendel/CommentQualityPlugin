# id;timestamp;commentText;codeText;commentWords;codeWords
RequestedGlobalProperties -> public DataDistribution getDataDistribution();1426843274;Gets the data distribution.__@return The data distribution.;public DataDistribution getDataDistribution() {_		return this.dataDistribution__	};gets,the,data,distribution,return,the,data,distribution;public,data,distribution,get,data,distribution,return,this,data,distribution
RequestedGlobalProperties -> public DataDistribution getDataDistribution();1427097830;Gets the data distribution.__@return The data distribution.;public DataDistribution getDataDistribution() {_		return this.dataDistribution__	};gets,the,data,distribution,return,the,data,distribution;public,data,distribution,get,data,distribution,return,this,data,distribution
RequestedGlobalProperties -> public DataDistribution getDataDistribution();1511814440;Gets the data distribution.__@return The data distribution.;public DataDistribution getDataDistribution() {_		return this.dataDistribution__	};gets,the,data,distribution,return,the,data,distribution;public,data,distribution,get,data,distribution,return,this,data,distribution
RequestedGlobalProperties -> public Ordering getOrdering();1426843274;Gets the key order.__@return The key order.;public Ordering getOrdering() {_		return this.ordering__	};gets,the,key,order,return,the,key,order;public,ordering,get,ordering,return,this,ordering
RequestedGlobalProperties -> public Ordering getOrdering();1427097830;Gets the key order.__@return The key order.;public Ordering getOrdering() {_		return this.ordering__	};gets,the,key,order,return,the,key,order;public,ordering,get,ordering,return,this,ordering
RequestedGlobalProperties -> public Ordering getOrdering();1511814440;Gets the key order.__@return The key order.;public Ordering getOrdering() {_		return this.ordering__	};gets,the,key,order,return,the,key,order;public,ordering,get,ordering,return,this,ordering
RequestedGlobalProperties -> public boolean isTrivial();1426843274;Checks, if the properties in this object are trivial, i.e. only standard values.;public boolean isTrivial() {_		return this.partitioning == null || this.partitioning == PartitioningProperty.RANDOM_PARTITIONED__	};checks,if,the,properties,in,this,object,are,trivial,i,e,only,standard,values;public,boolean,is,trivial,return,this,partitioning,null,this,partitioning,partitioning,property
RequestedGlobalProperties -> public boolean isTrivial();1427097830;Checks, if the properties in this object are trivial, i.e. only standard values.;public boolean isTrivial() {_		return this.partitioning == null || this.partitioning == PartitioningProperty.RANDOM_PARTITIONED__	};checks,if,the,properties,in,this,object,are,trivial,i,e,only,standard,values;public,boolean,is,trivial,return,this,partitioning,null,this,partitioning,partitioning,property
RequestedGlobalProperties -> public boolean isTrivial();1511814440;Checks, if the properties in this object are trivial, i.e. only standard values.;public boolean isTrivial() {_		return this.partitioning == null || this.partitioning == PartitioningProperty.RANDOM_PARTITIONED__	};checks,if,the,properties,in,this,object,are,trivial,i,e,only,standard,values;public,boolean,is,trivial,return,this,partitioning,null,this,partitioning,partitioning,property
RequestedGlobalProperties -> public PartitioningProperty getPartitioning();1426843274;Gets the partitioning property.__@return The partitioning property.;public PartitioningProperty getPartitioning() {_		return partitioning__	};gets,the,partitioning,property,return,the,partitioning,property;public,partitioning,property,get,partitioning,return,partitioning
RequestedGlobalProperties -> public PartitioningProperty getPartitioning();1427097830;Gets the partitioning property.__@return The partitioning property.;public PartitioningProperty getPartitioning() {_		return partitioning__	};gets,the,partitioning,property,return,the,partitioning,property;public,partitioning,property,get,partitioning,return,partitioning
RequestedGlobalProperties -> public PartitioningProperty getPartitioning();1511814440;Gets the partitioning property.__@return The partitioning property.;public PartitioningProperty getPartitioning() {_		return partitioning__	};gets,the,partitioning,property,return,the,partitioning,property;public,partitioning,property,get,partitioning,return,partitioning
RequestedGlobalProperties -> public FieldSet getPartitionedFields();1426843274;Gets the fields on which the data is partitioned.__@return The partitioning fields.;public FieldSet getPartitionedFields() {_		return this.partitioningFields__	};gets,the,fields,on,which,the,data,is,partitioned,return,the,partitioning,fields;public,field,set,get,partitioned,fields,return,this,partitioning,fields
RequestedGlobalProperties -> public FieldSet getPartitionedFields();1427097830;Gets the fields on which the data is partitioned.__@return The partitioning fields.;public FieldSet getPartitionedFields() {_		return this.partitioningFields__	};gets,the,fields,on,which,the,data,is,partitioned,return,the,partitioning,fields;public,field,set,get,partitioned,fields,return,this,partitioning,fields
RequestedGlobalProperties -> public FieldSet getPartitionedFields();1511814440;Gets the fields on which the data is partitioned.__@return The partitioning fields.;public FieldSet getPartitionedFields() {_		return this.partitioningFields__	};gets,the,fields,on,which,the,data,is,partitioned,return,the,partitioning,fields;public,field,set,get,partitioned,fields,return,this,partitioning,fields
RequestedGlobalProperties -> public void setCustomPartitioned(FieldSet partitionedFields, Partitioner<?> partitioner);1426843274;Sets these properties to request a custom partitioning with the given {@link Partitioner} instance.__If the fields are provided as {@link FieldSet}, then any permutation of the fields is a_valid partitioning, including subsets. If the fields are given as a {@link FieldList},_then only an exact partitioning on the fields matches this requested partitioning.__@param partitionedFields The key fields for the partitioning.;public void setCustomPartitioned(FieldSet partitionedFields, Partitioner<?> partitioner) {_		if (partitionedFields == null || partitioner == null) {_			throw new NullPointerException()__		}_		_		this.partitioning = PartitioningProperty.CUSTOM_PARTITIONING__		this.partitioningFields = partitionedFields__		this.ordering = null__		this.customPartitioner = partitioner__	};sets,these,properties,to,request,a,custom,partitioning,with,the,given,link,partitioner,instance,if,the,fields,are,provided,as,link,field,set,then,any,permutation,of,the,fields,is,a,valid,partitioning,including,subsets,if,the,fields,are,given,as,a,link,field,list,then,only,an,exact,partitioning,on,the,fields,matches,this,requested,partitioning,param,partitioned,fields,the,key,fields,for,the,partitioning;public,void,set,custom,partitioned,field,set,partitioned,fields,partitioner,partitioner,if,partitioned,fields,null,partitioner,null,throw,new,null,pointer,exception,this,partitioning,partitioning,property,this,partitioning,fields,partitioned,fields,this,ordering,null,this,custom,partitioner,partitioner
RequestedGlobalProperties -> public void setCustomPartitioned(FieldSet partitionedFields, Partitioner<?> partitioner);1427097830;Sets these properties to request a custom partitioning with the given {@link Partitioner} instance.__If the fields are provided as {@link FieldSet}, then any permutation of the fields is a_valid partitioning, including subsets. If the fields are given as a {@link FieldList},_then only an exact partitioning on the fields matches this requested partitioning.__@param partitionedFields The key fields for the partitioning.;public void setCustomPartitioned(FieldSet partitionedFields, Partitioner<?> partitioner) {_		if (partitionedFields == null || partitioner == null) {_			throw new NullPointerException()__		}_		_		this.partitioning = PartitioningProperty.CUSTOM_PARTITIONING__		this.partitioningFields = partitionedFields__		this.ordering = null__		this.customPartitioner = partitioner__	};sets,these,properties,to,request,a,custom,partitioning,with,the,given,link,partitioner,instance,if,the,fields,are,provided,as,link,field,set,then,any,permutation,of,the,fields,is,a,valid,partitioning,including,subsets,if,the,fields,are,given,as,a,link,field,list,then,only,an,exact,partitioning,on,the,fields,matches,this,requested,partitioning,param,partitioned,fields,the,key,fields,for,the,partitioning;public,void,set,custom,partitioned,field,set,partitioned,fields,partitioner,partitioner,if,partitioned,fields,null,partitioner,null,throw,new,null,pointer,exception,this,partitioning,partitioning,property,this,partitioning,fields,partitioned,fields,this,ordering,null,this,custom,partitioner,partitioner
RequestedGlobalProperties -> public void setCustomPartitioned(FieldSet partitionedFields, Partitioner<?> partitioner);1511814440;Sets these properties to request a custom partitioning with the given {@link Partitioner} instance.__If the fields are provided as {@link FieldSet}, then any permutation of the fields is a_valid partitioning, including subsets. If the fields are given as a {@link FieldList},_then only an exact partitioning on the fields matches this requested partitioning.__@param partitionedFields The key fields for the partitioning.;public void setCustomPartitioned(FieldSet partitionedFields, Partitioner<?> partitioner) {_		if (partitionedFields == null || partitioner == null) {_			throw new NullPointerException()__		}_		_		this.partitioning = PartitioningProperty.CUSTOM_PARTITIONING__		this.partitioningFields = partitionedFields__		this.ordering = null__		this.customPartitioner = partitioner__	};sets,these,properties,to,request,a,custom,partitioning,with,the,given,link,partitioner,instance,if,the,fields,are,provided,as,link,field,set,then,any,permutation,of,the,fields,is,a,valid,partitioning,including,subsets,if,the,fields,are,given,as,a,link,field,list,then,only,an,exact,partitioning,on,the,fields,matches,this,requested,partitioning,param,partitioned,fields,the,key,fields,for,the,partitioning;public,void,set,custom,partitioned,field,set,partitioned,fields,partitioner,partitioner,if,partitioned,fields,null,partitioner,null,throw,new,null,pointer,exception,this,partitioning,partitioning,property,this,partitioning,fields,partitioned,fields,this,ordering,null,this,custom,partitioner,partitioner
RequestedGlobalProperties -> public RequestedGlobalProperties filterBySemanticProperties(SemanticProperties props, int input);1426843274;Filters these properties by what can be preserved by the given SemanticProperties when propagated down_to the given input.__@param props The SemanticProperties which define which fields are preserved._@param input The index of the operator's input._@return The filtered RequestedGlobalProperties;public RequestedGlobalProperties filterBySemanticProperties(SemanticProperties props, int input) {_		_		if (props == null) {_			throw new NullPointerException("SemanticProperties may not be null.")__		}__		RequestedGlobalProperties rgProp = new RequestedGlobalProperties()___		switch(this.partitioning) {_			case FULL_REPLICATION:_			case FORCED_REBALANCED:_			case CUSTOM_PARTITIONING:_			case RANDOM_PARTITIONED:_			case ANY_DISTRIBUTION:_				_				return null__			case HASH_PARTITIONED:_			case ANY_PARTITIONING:_				FieldSet newFields__				if(this.partitioningFields instanceof FieldList) {_					newFields = new FieldList()__				} else {_					newFields = new FieldSet()__				}__				for (Integer targetField : this.partitioningFields) {_					int sourceField = props.getForwardingSourceField(input, targetField)__					if (sourceField >= 0) {_						newFields = newFields.addField(sourceField)__					} else {_						_						return null__					}_				}_				rgProp.partitioning = this.partitioning__				rgProp.partitioningFields = newFields__				return rgProp__			case RANGE_PARTITIONED:_				_				Ordering newOrdering = new Ordering()__				for (int i = 0_ i < this.ordering.getInvolvedIndexes().size()_ i++) {_					int value = this.ordering.getInvolvedIndexes().get(i)__					int sourceField = props.getForwardingSourceField(input, value)__					if (sourceField >= 0) {_						newOrdering.appendOrdering(sourceField, this.ordering.getType(i), this.ordering.getOrder(i))__					} else {_						return null__					}_				}_				rgProp.partitioning = this.partitioning__				rgProp.ordering = newOrdering__				rgProp.dataDistribution = this.dataDistribution__				return rgProp__			default:_				throw new RuntimeException("Unknown partitioning type encountered.")__		}_	};filters,these,properties,by,what,can,be,preserved,by,the,given,semantic,properties,when,propagated,down,to,the,given,input,param,props,the,semantic,properties,which,define,which,fields,are,preserved,param,input,the,index,of,the,operator,s,input,return,the,filtered,requested,global,properties;public,requested,global,properties,filter,by,semantic,properties,semantic,properties,props,int,input,if,props,null,throw,new,null,pointer,exception,semantic,properties,may,not,be,null,requested,global,properties,rg,prop,new,requested,global,properties,switch,this,partitioning,case,case,case,case,case,return,null,case,case,field,set,new,fields,if,this,partitioning,fields,instanceof,field,list,new,fields,new,field,list,else,new,fields,new,field,set,for,integer,target,field,this,partitioning,fields,int,source,field,props,get,forwarding,source,field,input,target,field,if,source,field,0,new,fields,new,fields,add,field,source,field,else,return,null,rg,prop,partitioning,this,partitioning,rg,prop,partitioning,fields,new,fields,return,rg,prop,case,ordering,new,ordering,new,ordering,for,int,i,0,i,this,ordering,get,involved,indexes,size,i,int,value,this,ordering,get,involved,indexes,get,i,int,source,field,props,get,forwarding,source,field,input,value,if,source,field,0,new,ordering,append,ordering,source,field,this,ordering,get,type,i,this,ordering,get,order,i,else,return,null,rg,prop,partitioning,this,partitioning,rg,prop,ordering,new,ordering,rg,prop,data,distribution,this,data,distribution,return,rg,prop,default,throw,new,runtime,exception,unknown,partitioning,type,encountered
RequestedGlobalProperties -> public RequestedGlobalProperties filterBySemanticProperties(SemanticProperties props, int input);1427097830;Filters these properties by what can be preserved by the given SemanticProperties when propagated down_to the given input.__@param props The SemanticProperties which define which fields are preserved._@param input The index of the operator's input._@return The filtered RequestedGlobalProperties;public RequestedGlobalProperties filterBySemanticProperties(SemanticProperties props, int input) {_		_		if (props == null) {_			throw new NullPointerException("SemanticProperties may not be null.")__		}__		RequestedGlobalProperties rgProp = new RequestedGlobalProperties()___		switch(this.partitioning) {_			case FULL_REPLICATION:_			case FORCED_REBALANCED:_			case CUSTOM_PARTITIONING:_			case RANDOM_PARTITIONED:_			case ANY_DISTRIBUTION:_				_				return null__			case HASH_PARTITIONED:_			case ANY_PARTITIONING:_				FieldSet newFields__				if(this.partitioningFields instanceof FieldList) {_					newFields = new FieldList()__				} else {_					newFields = new FieldSet()__				}__				for (Integer targetField : this.partitioningFields) {_					int sourceField = props.getForwardingSourceField(input, targetField)__					if (sourceField >= 0) {_						newFields = newFields.addField(sourceField)__					} else {_						_						return null__					}_				}_				rgProp.partitioning = this.partitioning__				rgProp.partitioningFields = newFields__				return rgProp__			case RANGE_PARTITIONED:_				_				Ordering newOrdering = new Ordering()__				for (int i = 0_ i < this.ordering.getInvolvedIndexes().size()_ i++) {_					int value = this.ordering.getInvolvedIndexes().get(i)__					int sourceField = props.getForwardingSourceField(input, value)__					if (sourceField >= 0) {_						newOrdering.appendOrdering(sourceField, this.ordering.getType(i), this.ordering.getOrder(i))__					} else {_						return null__					}_				}_				rgProp.partitioning = this.partitioning__				rgProp.ordering = newOrdering__				rgProp.dataDistribution = this.dataDistribution__				return rgProp__			default:_				throw new RuntimeException("Unknown partitioning type encountered.")__		}_	};filters,these,properties,by,what,can,be,preserved,by,the,given,semantic,properties,when,propagated,down,to,the,given,input,param,props,the,semantic,properties,which,define,which,fields,are,preserved,param,input,the,index,of,the,operator,s,input,return,the,filtered,requested,global,properties;public,requested,global,properties,filter,by,semantic,properties,semantic,properties,props,int,input,if,props,null,throw,new,null,pointer,exception,semantic,properties,may,not,be,null,requested,global,properties,rg,prop,new,requested,global,properties,switch,this,partitioning,case,case,case,case,case,return,null,case,case,field,set,new,fields,if,this,partitioning,fields,instanceof,field,list,new,fields,new,field,list,else,new,fields,new,field,set,for,integer,target,field,this,partitioning,fields,int,source,field,props,get,forwarding,source,field,input,target,field,if,source,field,0,new,fields,new,fields,add,field,source,field,else,return,null,rg,prop,partitioning,this,partitioning,rg,prop,partitioning,fields,new,fields,return,rg,prop,case,ordering,new,ordering,new,ordering,for,int,i,0,i,this,ordering,get,involved,indexes,size,i,int,value,this,ordering,get,involved,indexes,get,i,int,source,field,props,get,forwarding,source,field,input,value,if,source,field,0,new,ordering,append,ordering,source,field,this,ordering,get,type,i,this,ordering,get,order,i,else,return,null,rg,prop,partitioning,this,partitioning,rg,prop,ordering,new,ordering,rg,prop,data,distribution,this,data,distribution,return,rg,prop,default,throw,new,runtime,exception,unknown,partitioning,type,encountered
RequestedGlobalProperties -> public RequestedGlobalProperties filterBySemanticProperties(SemanticProperties props, int input);1511814440;Filters these properties by what can be preserved by the given SemanticProperties when propagated down_to the given input.__@param props The SemanticProperties which define which fields are preserved._@param input The index of the operator's input._@return The filtered RequestedGlobalProperties;public RequestedGlobalProperties filterBySemanticProperties(SemanticProperties props, int input) {_		_		if (props == null) {_			throw new NullPointerException("SemanticProperties may not be null.")__		}__		RequestedGlobalProperties rgProp = new RequestedGlobalProperties()___		switch(this.partitioning) {_			case FULL_REPLICATION:_			case FORCED_REBALANCED:_			case CUSTOM_PARTITIONING:_			case RANDOM_PARTITIONED:_			case ANY_DISTRIBUTION:_				_				return null__			case HASH_PARTITIONED:_			case ANY_PARTITIONING:_				FieldSet newFields__				if(this.partitioningFields instanceof FieldList) {_					newFields = new FieldList()__				} else {_					newFields = new FieldSet()__				}__				for (Integer targetField : this.partitioningFields) {_					int sourceField = props.getForwardingSourceField(input, targetField)__					if (sourceField >= 0) {_						newFields = newFields.addField(sourceField)__					} else {_						_						return null__					}_				}_				rgProp.partitioning = this.partitioning__				rgProp.partitioningFields = newFields__				return rgProp__			case RANGE_PARTITIONED:_				_				Ordering newOrdering = new Ordering()__				for (int i = 0_ i < this.ordering.getInvolvedIndexes().size()_ i++) {_					int value = this.ordering.getInvolvedIndexes().get(i)__					int sourceField = props.getForwardingSourceField(input, value)__					if (sourceField >= 0) {_						newOrdering.appendOrdering(sourceField, this.ordering.getType(i), this.ordering.getOrder(i))__					} else {_						return null__					}_				}_				rgProp.partitioning = this.partitioning__				rgProp.ordering = newOrdering__				rgProp.dataDistribution = this.dataDistribution__				return rgProp__			default:_				throw new RuntimeException("Unknown partitioning type encountered.")__		}_	};filters,these,properties,by,what,can,be,preserved,by,the,given,semantic,properties,when,propagated,down,to,the,given,input,param,props,the,semantic,properties,which,define,which,fields,are,preserved,param,input,the,index,of,the,operator,s,input,return,the,filtered,requested,global,properties;public,requested,global,properties,filter,by,semantic,properties,semantic,properties,props,int,input,if,props,null,throw,new,null,pointer,exception,semantic,properties,may,not,be,null,requested,global,properties,rg,prop,new,requested,global,properties,switch,this,partitioning,case,case,case,case,case,return,null,case,case,field,set,new,fields,if,this,partitioning,fields,instanceof,field,list,new,fields,new,field,list,else,new,fields,new,field,set,for,integer,target,field,this,partitioning,fields,int,source,field,props,get,forwarding,source,field,input,target,field,if,source,field,0,new,fields,new,fields,add,field,source,field,else,return,null,rg,prop,partitioning,this,partitioning,rg,prop,partitioning,fields,new,fields,return,rg,prop,case,ordering,new,ordering,new,ordering,for,int,i,0,i,this,ordering,get,involved,indexes,size,i,int,value,this,ordering,get,involved,indexes,get,i,int,source,field,props,get,forwarding,source,field,input,value,if,source,field,0,new,ordering,append,ordering,source,field,this,ordering,get,type,i,this,ordering,get,order,i,else,return,null,rg,prop,partitioning,this,partitioning,rg,prop,ordering,new,ordering,rg,prop,data,distribution,this,data,distribution,return,rg,prop,default,throw,new,runtime,exception,unknown,partitioning,type,encountered
RequestedGlobalProperties -> public void reset();1426843274;This method resets the properties to a state where no properties are given.;public void reset() {_		this.partitioning = PartitioningProperty.RANDOM_PARTITIONED__		this.ordering = null__		this.partitioningFields = null__		this.dataDistribution = null__		this.customPartitioner = null__	};this,method,resets,the,properties,to,a,state,where,no,properties,are,given;public,void,reset,this,partitioning,partitioning,property,this,ordering,null,this,partitioning,fields,null,this,data,distribution,null,this,custom,partitioner,null
RequestedGlobalProperties -> public void reset();1427097830;This method resets the properties to a state where no properties are given.;public void reset() {_		this.partitioning = PartitioningProperty.RANDOM_PARTITIONED__		this.ordering = null__		this.partitioningFields = null__		this.dataDistribution = null__		this.customPartitioner = null__	};this,method,resets,the,properties,to,a,state,where,no,properties,are,given;public,void,reset,this,partitioning,partitioning,property,this,ordering,null,this,partitioning,fields,null,this,data,distribution,null,this,custom,partitioner,null
RequestedGlobalProperties -> public void reset();1511814440;This method resets the properties to a state where no properties are given.;public void reset() {_		this.partitioning = PartitioningProperty.RANDOM_PARTITIONED__		this.ordering = null__		this.partitioningFields = null__		this.dataDistribution = null__		this.customPartitioner = null__	};this,method,resets,the,properties,to,a,state,where,no,properties,are,given;public,void,reset,this,partitioning,partitioning,property,this,ordering,null,this,partitioning,fields,null,this,data,distribution,null,this,custom,partitioner,null
RequestedGlobalProperties -> public void parameterizeChannel(Channel channel, boolean globalDopChange, 									ExecutionMode exchangeMode, boolean breakPipeline);1426843274;Parametrizes the ship strategy fields of a channel such that the channel produces_the desired global properties.__@param channel The channel to parametrize._@param globalDopChange Flag indicating whether the degree of parallelism changes_between sender and receiver._@param exchangeMode The mode of data exchange (pipelined, always batch,_batch only on shuffle, ...)_@param breakPipeline Indicates whether this data exchange should break_pipelines (unless pipelines are forced).;public void parameterizeChannel(Channel channel, boolean globalDopChange,_									ExecutionMode exchangeMode, boolean breakPipeline) {__		_		if (channel.getSource().getGlobalProperties().isFullyReplicated() &&_				!(this.partitioning == PartitioningProperty.FULL_REPLICATION ||_					this.partitioning == PartitioningProperty.ANY_DISTRIBUTION))_		{_			throw new CompilerException("Fully replicated input must be preserved " +_					"and may not be converted into another global property.")__		}__		_		_		if (isTrivial() || this.partitioning == PartitioningProperty.ANY_DISTRIBUTION) {_			ShipStrategyType shipStrategy = globalDopChange ? ShipStrategyType.PARTITION_RANDOM :_																ShipStrategyType.FORWARD___			DataExchangeMode em = DataExchangeMode.select(exchangeMode, shipStrategy, breakPipeline)__			channel.setShipStrategy(shipStrategy, em)__			return__		}_		_		final GlobalProperties inGlobals = channel.getSource().getGlobalProperties()__		_		if (!globalDopChange && isMetBy(inGlobals)) {_			DataExchangeMode em = DataExchangeMode.select(exchangeMode, ShipStrategyType.FORWARD, breakPipeline)__			channel.setShipStrategy(ShipStrategyType.FORWARD, em)__			return__		}_		_		_		ShipStrategyType shipType__		FieldList partitionKeys__		boolean[] sortDirection__		Partitioner<?> partitioner___		switch (this.partitioning) {_			case FULL_REPLICATION:_				shipType = ShipStrategyType.BROADCAST__				partitionKeys = null__				sortDirection = null__				partitioner = null__				break___			case ANY_PARTITIONING:_			case HASH_PARTITIONED:_				shipType = ShipStrategyType.PARTITION_HASH__				partitionKeys = Utils.createOrderedFromSet(this.partitioningFields)__				sortDirection = null__				partitioner = null__				break__			_			case RANGE_PARTITIONED:_				shipType = ShipStrategyType.PARTITION_RANGE__				partitionKeys = this.ordering.getInvolvedIndexes()__				sortDirection = this.ordering.getFieldSortDirections()__				partitioner = null___				if (this.dataDistribution != null) {_					channel.setDataDistribution(this.dataDistribution)__				}_				break___			case FORCED_REBALANCED:_				shipType = ShipStrategyType.PARTITION_FORCED_REBALANCE__				partitionKeys = null__				sortDirection = null__				partitioner = null__				break___			case CUSTOM_PARTITIONING:_				shipType = ShipStrategyType.PARTITION_CUSTOM__				partitionKeys = Utils.createOrderedFromSet(this.partitioningFields)__				sortDirection = null__				partitioner = this.customPartitioner__				break___			default:_				throw new CompilerException("Invalid partitioning to create through a data exchange: "_											+ this.partitioning.name())__		}__		DataExchangeMode exMode = DataExchangeMode.select(exchangeMode, shipType, breakPipeline)__		channel.setShipStrategy(shipType, partitionKeys, sortDirection, partitioner, exMode)__	};parametrizes,the,ship,strategy,fields,of,a,channel,such,that,the,channel,produces,the,desired,global,properties,param,channel,the,channel,to,parametrize,param,global,dop,change,flag,indicating,whether,the,degree,of,parallelism,changes,between,sender,and,receiver,param,exchange,mode,the,mode,of,data,exchange,pipelined,always,batch,batch,only,on,shuffle,param,break,pipeline,indicates,whether,this,data,exchange,should,break,pipelines,unless,pipelines,are,forced;public,void,parameterize,channel,channel,channel,boolean,global,dop,change,execution,mode,exchange,mode,boolean,break,pipeline,if,channel,get,source,get,global,properties,is,fully,replicated,this,partitioning,partitioning,property,this,partitioning,partitioning,property,throw,new,compiler,exception,fully,replicated,input,must,be,preserved,and,may,not,be,converted,into,another,global,property,if,is,trivial,this,partitioning,partitioning,property,ship,strategy,type,ship,strategy,global,dop,change,ship,strategy,type,ship,strategy,type,forward,data,exchange,mode,em,data,exchange,mode,select,exchange,mode,ship,strategy,break,pipeline,channel,set,ship,strategy,ship,strategy,em,return,final,global,properties,in,globals,channel,get,source,get,global,properties,if,global,dop,change,is,met,by,in,globals,data,exchange,mode,em,data,exchange,mode,select,exchange,mode,ship,strategy,type,forward,break,pipeline,channel,set,ship,strategy,ship,strategy,type,forward,em,return,ship,strategy,type,ship,type,field,list,partition,keys,boolean,sort,direction,partitioner,partitioner,switch,this,partitioning,case,ship,type,ship,strategy,type,broadcast,partition,keys,null,sort,direction,null,partitioner,null,break,case,case,ship,type,ship,strategy,type,partition,keys,utils,create,ordered,from,set,this,partitioning,fields,sort,direction,null,partitioner,null,break,case,ship,type,ship,strategy,type,partition,keys,this,ordering,get,involved,indexes,sort,direction,this,ordering,get,field,sort,directions,partitioner,null,if,this,data,distribution,null,channel,set,data,distribution,this,data,distribution,break,case,ship,type,ship,strategy,type,partition,keys,null,sort,direction,null,partitioner,null,break,case,ship,type,ship,strategy,type,partition,keys,utils,create,ordered,from,set,this,partitioning,fields,sort,direction,null,partitioner,this,custom,partitioner,break,default,throw,new,compiler,exception,invalid,partitioning,to,create,through,a,data,exchange,this,partitioning,name,data,exchange,mode,ex,mode,data,exchange,mode,select,exchange,mode,ship,type,break,pipeline,channel,set,ship,strategy,ship,type,partition,keys,sort,direction,partitioner,ex,mode
RequestedGlobalProperties -> public void parameterizeChannel(Channel channel, boolean globalDopChange, 									ExecutionMode exchangeMode, boolean breakPipeline);1427097830;Parametrizes the ship strategy fields of a channel such that the channel produces_the desired global properties.__@param channel The channel to parametrize._@param globalDopChange Flag indicating whether the parallelism changes_between sender and receiver._@param exchangeMode The mode of data exchange (pipelined, always batch,_batch only on shuffle, ...)_@param breakPipeline Indicates whether this data exchange should break_pipelines (unless pipelines are forced).;public void parameterizeChannel(Channel channel, boolean globalDopChange,_									ExecutionMode exchangeMode, boolean breakPipeline) {__		_		if (channel.getSource().getGlobalProperties().isFullyReplicated() &&_				!(this.partitioning == PartitioningProperty.FULL_REPLICATION ||_					this.partitioning == PartitioningProperty.ANY_DISTRIBUTION))_		{_			throw new CompilerException("Fully replicated input must be preserved " +_					"and may not be converted into another global property.")__		}__		_		_		if (isTrivial() || this.partitioning == PartitioningProperty.ANY_DISTRIBUTION) {_			ShipStrategyType shipStrategy = globalDopChange ? ShipStrategyType.PARTITION_RANDOM :_																ShipStrategyType.FORWARD___			DataExchangeMode em = DataExchangeMode.select(exchangeMode, shipStrategy, breakPipeline)__			channel.setShipStrategy(shipStrategy, em)__			return__		}_		_		final GlobalProperties inGlobals = channel.getSource().getGlobalProperties()__		_		if (!globalDopChange && isMetBy(inGlobals)) {_			DataExchangeMode em = DataExchangeMode.select(exchangeMode, ShipStrategyType.FORWARD, breakPipeline)__			channel.setShipStrategy(ShipStrategyType.FORWARD, em)__			return__		}_		_		_		ShipStrategyType shipType__		FieldList partitionKeys__		boolean[] sortDirection__		Partitioner<?> partitioner___		switch (this.partitioning) {_			case FULL_REPLICATION:_				shipType = ShipStrategyType.BROADCAST__				partitionKeys = null__				sortDirection = null__				partitioner = null__				break___			case ANY_PARTITIONING:_			case HASH_PARTITIONED:_				shipType = ShipStrategyType.PARTITION_HASH__				partitionKeys = Utils.createOrderedFromSet(this.partitioningFields)__				sortDirection = null__				partitioner = null__				break__			_			case RANGE_PARTITIONED:_				shipType = ShipStrategyType.PARTITION_RANGE__				partitionKeys = this.ordering.getInvolvedIndexes()__				sortDirection = this.ordering.getFieldSortDirections()__				partitioner = null___				if (this.dataDistribution != null) {_					channel.setDataDistribution(this.dataDistribution)__				}_				break___			case FORCED_REBALANCED:_				shipType = ShipStrategyType.PARTITION_FORCED_REBALANCE__				partitionKeys = null__				sortDirection = null__				partitioner = null__				break___			case CUSTOM_PARTITIONING:_				shipType = ShipStrategyType.PARTITION_CUSTOM__				partitionKeys = Utils.createOrderedFromSet(this.partitioningFields)__				sortDirection = null__				partitioner = this.customPartitioner__				break___			default:_				throw new CompilerException("Invalid partitioning to create through a data exchange: "_											+ this.partitioning.name())__		}__		DataExchangeMode exMode = DataExchangeMode.select(exchangeMode, shipType, breakPipeline)__		channel.setShipStrategy(shipType, partitionKeys, sortDirection, partitioner, exMode)__	};parametrizes,the,ship,strategy,fields,of,a,channel,such,that,the,channel,produces,the,desired,global,properties,param,channel,the,channel,to,parametrize,param,global,dop,change,flag,indicating,whether,the,parallelism,changes,between,sender,and,receiver,param,exchange,mode,the,mode,of,data,exchange,pipelined,always,batch,batch,only,on,shuffle,param,break,pipeline,indicates,whether,this,data,exchange,should,break,pipelines,unless,pipelines,are,forced;public,void,parameterize,channel,channel,channel,boolean,global,dop,change,execution,mode,exchange,mode,boolean,break,pipeline,if,channel,get,source,get,global,properties,is,fully,replicated,this,partitioning,partitioning,property,this,partitioning,partitioning,property,throw,new,compiler,exception,fully,replicated,input,must,be,preserved,and,may,not,be,converted,into,another,global,property,if,is,trivial,this,partitioning,partitioning,property,ship,strategy,type,ship,strategy,global,dop,change,ship,strategy,type,ship,strategy,type,forward,data,exchange,mode,em,data,exchange,mode,select,exchange,mode,ship,strategy,break,pipeline,channel,set,ship,strategy,ship,strategy,em,return,final,global,properties,in,globals,channel,get,source,get,global,properties,if,global,dop,change,is,met,by,in,globals,data,exchange,mode,em,data,exchange,mode,select,exchange,mode,ship,strategy,type,forward,break,pipeline,channel,set,ship,strategy,ship,strategy,type,forward,em,return,ship,strategy,type,ship,type,field,list,partition,keys,boolean,sort,direction,partitioner,partitioner,switch,this,partitioning,case,ship,type,ship,strategy,type,broadcast,partition,keys,null,sort,direction,null,partitioner,null,break,case,case,ship,type,ship,strategy,type,partition,keys,utils,create,ordered,from,set,this,partitioning,fields,sort,direction,null,partitioner,null,break,case,ship,type,ship,strategy,type,partition,keys,this,ordering,get,involved,indexes,sort,direction,this,ordering,get,field,sort,directions,partitioner,null,if,this,data,distribution,null,channel,set,data,distribution,this,data,distribution,break,case,ship,type,ship,strategy,type,partition,keys,null,sort,direction,null,partitioner,null,break,case,ship,type,ship,strategy,type,partition,keys,utils,create,ordered,from,set,this,partitioning,fields,sort,direction,null,partitioner,this,custom,partitioner,break,default,throw,new,compiler,exception,invalid,partitioning,to,create,through,a,data,exchange,this,partitioning,name,data,exchange,mode,ex,mode,data,exchange,mode,select,exchange,mode,ship,type,break,pipeline,channel,set,ship,strategy,ship,type,partition,keys,sort,direction,partitioner,ex,mode
RequestedGlobalProperties -> public void parameterizeChannel(Channel channel, boolean globalDopChange, 									ExecutionMode exchangeMode, boolean breakPipeline);1511814440;Parametrizes the ship strategy fields of a channel such that the channel produces_the desired global properties.__@param channel The channel to parametrize._@param globalDopChange Flag indicating whether the parallelism changes_between sender and receiver._@param exchangeMode The mode of data exchange (pipelined, always batch,_batch only on shuffle, ...)_@param breakPipeline Indicates whether this data exchange should break_pipelines (unless pipelines are forced).;public void parameterizeChannel(Channel channel, boolean globalDopChange,_									ExecutionMode exchangeMode, boolean breakPipeline) {__		_		if (channel.getSource().getGlobalProperties().isFullyReplicated() &&_				!(this.partitioning == PartitioningProperty.FULL_REPLICATION ||_					this.partitioning == PartitioningProperty.ANY_DISTRIBUTION))_		{_			throw new CompilerException("Fully replicated input must be preserved " +_					"and may not be converted into another global property.")__		}__		_		_		if (isTrivial() || this.partitioning == PartitioningProperty.ANY_DISTRIBUTION) {_			ShipStrategyType shipStrategy = globalDopChange ? ShipStrategyType.PARTITION_RANDOM :_																ShipStrategyType.FORWARD___			DataExchangeMode em = DataExchangeMode.select(exchangeMode, shipStrategy, breakPipeline)__			channel.setShipStrategy(shipStrategy, em)__			return__		}_		_		final GlobalProperties inGlobals = channel.getSource().getGlobalProperties()__		_		if (!globalDopChange && isMetBy(inGlobals)) {_			DataExchangeMode em = DataExchangeMode.select(exchangeMode, ShipStrategyType.FORWARD, breakPipeline)__			channel.setShipStrategy(ShipStrategyType.FORWARD, em)__			return__		}_		_		_		ShipStrategyType shipType__		FieldList partitionKeys__		boolean[] sortDirection__		Partitioner<?> partitioner___		switch (this.partitioning) {_			case FULL_REPLICATION:_				shipType = ShipStrategyType.BROADCAST__				partitionKeys = null__				sortDirection = null__				partitioner = null__				break___			case ANY_PARTITIONING:_			case HASH_PARTITIONED:_				shipType = ShipStrategyType.PARTITION_HASH__				partitionKeys = Utils.createOrderedFromSet(this.partitioningFields)__				sortDirection = null__				partitioner = null__				break__			_			case RANGE_PARTITIONED:_				shipType = ShipStrategyType.PARTITION_RANGE__				partitionKeys = this.ordering.getInvolvedIndexes()__				sortDirection = this.ordering.getFieldSortDirections()__				partitioner = null___				if (this.dataDistribution != null) {_					channel.setDataDistribution(this.dataDistribution)__				}_				break___			case FORCED_REBALANCED:_				shipType = ShipStrategyType.PARTITION_FORCED_REBALANCE__				partitionKeys = null__				sortDirection = null__				partitioner = null__				break___			case CUSTOM_PARTITIONING:_				shipType = ShipStrategyType.PARTITION_CUSTOM__				partitionKeys = Utils.createOrderedFromSet(this.partitioningFields)__				sortDirection = null__				partitioner = this.customPartitioner__				break___			default:_				throw new CompilerException("Invalid partitioning to create through a data exchange: "_											+ this.partitioning.name())__		}__		DataExchangeMode exMode = DataExchangeMode.select(exchangeMode, shipType, breakPipeline)__		channel.setShipStrategy(shipType, partitionKeys, sortDirection, partitioner, exMode)__	};parametrizes,the,ship,strategy,fields,of,a,channel,such,that,the,channel,produces,the,desired,global,properties,param,channel,the,channel,to,parametrize,param,global,dop,change,flag,indicating,whether,the,parallelism,changes,between,sender,and,receiver,param,exchange,mode,the,mode,of,data,exchange,pipelined,always,batch,batch,only,on,shuffle,param,break,pipeline,indicates,whether,this,data,exchange,should,break,pipelines,unless,pipelines,are,forced;public,void,parameterize,channel,channel,channel,boolean,global,dop,change,execution,mode,exchange,mode,boolean,break,pipeline,if,channel,get,source,get,global,properties,is,fully,replicated,this,partitioning,partitioning,property,this,partitioning,partitioning,property,throw,new,compiler,exception,fully,replicated,input,must,be,preserved,and,may,not,be,converted,into,another,global,property,if,is,trivial,this,partitioning,partitioning,property,ship,strategy,type,ship,strategy,global,dop,change,ship,strategy,type,ship,strategy,type,forward,data,exchange,mode,em,data,exchange,mode,select,exchange,mode,ship,strategy,break,pipeline,channel,set,ship,strategy,ship,strategy,em,return,final,global,properties,in,globals,channel,get,source,get,global,properties,if,global,dop,change,is,met,by,in,globals,data,exchange,mode,em,data,exchange,mode,select,exchange,mode,ship,strategy,type,forward,break,pipeline,channel,set,ship,strategy,ship,strategy,type,forward,em,return,ship,strategy,type,ship,type,field,list,partition,keys,boolean,sort,direction,partitioner,partitioner,switch,this,partitioning,case,ship,type,ship,strategy,type,broadcast,partition,keys,null,sort,direction,null,partitioner,null,break,case,case,ship,type,ship,strategy,type,partition,keys,utils,create,ordered,from,set,this,partitioning,fields,sort,direction,null,partitioner,null,break,case,ship,type,ship,strategy,type,partition,keys,this,ordering,get,involved,indexes,sort,direction,this,ordering,get,field,sort,directions,partitioner,null,if,this,data,distribution,null,channel,set,data,distribution,this,data,distribution,break,case,ship,type,ship,strategy,type,partition,keys,null,sort,direction,null,partitioner,null,break,case,ship,type,ship,strategy,type,partition,keys,utils,create,ordered,from,set,this,partitioning,fields,sort,direction,null,partitioner,this,custom,partitioner,break,default,throw,new,compiler,exception,invalid,partitioning,to,create,through,a,data,exchange,this,partitioning,name,data,exchange,mode,ex,mode,data,exchange,mode,select,exchange,mode,ship,type,break,pipeline,channel,set,ship,strategy,ship,type,partition,keys,sort,direction,partitioner,ex,mode
RequestedGlobalProperties -> public void setAnyPartitioning(FieldSet partitionedFields);1426843274;Sets these properties to request some partitioning on the given fields. This will allow_both hash partitioning and range partitioning to match.__If the fields are provided as {@link FieldSet}, then any permutation of the fields is a_valid partitioning, including subsets. If the fields are given as a {@link FieldList},_then only an exact partitioning on the fields matches this requested partitioning.__@param partitionedFields The key fields for the partitioning.;public void setAnyPartitioning(FieldSet partitionedFields) {_		if (partitionedFields == null) {_			throw new NullPointerException()__		}_		this.partitioning = PartitioningProperty.ANY_PARTITIONING__		this.partitioningFields = partitionedFields__		this.ordering = null__	};sets,these,properties,to,request,some,partitioning,on,the,given,fields,this,will,allow,both,hash,partitioning,and,range,partitioning,to,match,if,the,fields,are,provided,as,link,field,set,then,any,permutation,of,the,fields,is,a,valid,partitioning,including,subsets,if,the,fields,are,given,as,a,link,field,list,then,only,an,exact,partitioning,on,the,fields,matches,this,requested,partitioning,param,partitioned,fields,the,key,fields,for,the,partitioning;public,void,set,any,partitioning,field,set,partitioned,fields,if,partitioned,fields,null,throw,new,null,pointer,exception,this,partitioning,partitioning,property,this,partitioning,fields,partitioned,fields,this,ordering,null
RequestedGlobalProperties -> public void setAnyPartitioning(FieldSet partitionedFields);1427097830;Sets these properties to request some partitioning on the given fields. This will allow_both hash partitioning and range partitioning to match.__If the fields are provided as {@link FieldSet}, then any permutation of the fields is a_valid partitioning, including subsets. If the fields are given as a {@link FieldList},_then only an exact partitioning on the fields matches this requested partitioning.__@param partitionedFields The key fields for the partitioning.;public void setAnyPartitioning(FieldSet partitionedFields) {_		if (partitionedFields == null) {_			throw new NullPointerException()__		}_		this.partitioning = PartitioningProperty.ANY_PARTITIONING__		this.partitioningFields = partitionedFields__		this.ordering = null__	};sets,these,properties,to,request,some,partitioning,on,the,given,fields,this,will,allow,both,hash,partitioning,and,range,partitioning,to,match,if,the,fields,are,provided,as,link,field,set,then,any,permutation,of,the,fields,is,a,valid,partitioning,including,subsets,if,the,fields,are,given,as,a,link,field,list,then,only,an,exact,partitioning,on,the,fields,matches,this,requested,partitioning,param,partitioned,fields,the,key,fields,for,the,partitioning;public,void,set,any,partitioning,field,set,partitioned,fields,if,partitioned,fields,null,throw,new,null,pointer,exception,this,partitioning,partitioning,property,this,partitioning,fields,partitioned,fields,this,ordering,null
RequestedGlobalProperties -> public void setAnyPartitioning(FieldSet partitionedFields);1511814440;Sets these properties to request some partitioning on the given fields. This will allow_both hash partitioning and range partitioning to match.__If the fields are provided as {@link FieldSet}, then any permutation of the fields is a_valid partitioning, including subsets. If the fields are given as a {@link FieldList},_then only an exact partitioning on the fields matches this requested partitioning.__@param partitionedFields The key fields for the partitioning.;public void setAnyPartitioning(FieldSet partitionedFields) {_		if (partitionedFields == null) {_			throw new NullPointerException()__		}_		this.partitioning = PartitioningProperty.ANY_PARTITIONING__		this.partitioningFields = partitionedFields__		this.ordering = null__	};sets,these,properties,to,request,some,partitioning,on,the,given,fields,this,will,allow,both,hash,partitioning,and,range,partitioning,to,match,if,the,fields,are,provided,as,link,field,set,then,any,permutation,of,the,fields,is,a,valid,partitioning,including,subsets,if,the,fields,are,given,as,a,link,field,list,then,only,an,exact,partitioning,on,the,fields,matches,this,requested,partitioning,param,partitioned,fields,the,key,fields,for,the,partitioning;public,void,set,any,partitioning,field,set,partitioned,fields,if,partitioned,fields,null,throw,new,null,pointer,exception,this,partitioning,partitioning,property,this,partitioning,fields,partitioned,fields,this,ordering,null
RequestedGlobalProperties -> public boolean isMetBy(GlobalProperties props);1426843274;Checks, if this set of interesting properties, is met by the given_produced properties.__@param props The properties for which to check whether they meet these properties._@return True, if the properties are met, false otherwise.;public boolean isMetBy(GlobalProperties props) {_		if (this.partitioning == PartitioningProperty.ANY_DISTRIBUTION) {_			return true__		} else if (this.partitioning == PartitioningProperty.FULL_REPLICATION) {_			return props.isFullyReplicated()__		}_		else if (props.isFullyReplicated()) {_			return false__		}_		else if (this.partitioning == PartitioningProperty.RANDOM_PARTITIONED) {_			return true__		}_		else if (this.partitioning == PartitioningProperty.ANY_PARTITIONING) {_			return checkCompatiblePartitioningFields(props)__		}_		else if (this.partitioning == PartitioningProperty.HASH_PARTITIONED) {_			return props.getPartitioning() == PartitioningProperty.HASH_PARTITIONED &&_					checkCompatiblePartitioningFields(props)__		}_		else if (this.partitioning == PartitioningProperty.RANGE_PARTITIONED) {_			return props.getPartitioning() == PartitioningProperty.RANGE_PARTITIONED &&_					props.matchesOrderedPartitioning(this.ordering)__		}_		else if (this.partitioning == PartitioningProperty.FORCED_REBALANCED) {_			return props.getPartitioning() == PartitioningProperty.FORCED_REBALANCED__		}_		else if (this.partitioning == PartitioningProperty.CUSTOM_PARTITIONING) {_			return props.getPartitioning() == PartitioningProperty.CUSTOM_PARTITIONING &&_					checkCompatiblePartitioningFields(props) &&_					props.getCustomPartitioner().equals(this.customPartitioner)___		}_		else {_			throw new CompilerException("Properties matching logic leaves open cases.")__		}_	};checks,if,this,set,of,interesting,properties,is,met,by,the,given,produced,properties,param,props,the,properties,for,which,to,check,whether,they,meet,these,properties,return,true,if,the,properties,are,met,false,otherwise;public,boolean,is,met,by,global,properties,props,if,this,partitioning,partitioning,property,return,true,else,if,this,partitioning,partitioning,property,return,props,is,fully,replicated,else,if,props,is,fully,replicated,return,false,else,if,this,partitioning,partitioning,property,return,true,else,if,this,partitioning,partitioning,property,return,check,compatible,partitioning,fields,props,else,if,this,partitioning,partitioning,property,return,props,get,partitioning,partitioning,property,check,compatible,partitioning,fields,props,else,if,this,partitioning,partitioning,property,return,props,get,partitioning,partitioning,property,props,matches,ordered,partitioning,this,ordering,else,if,this,partitioning,partitioning,property,return,props,get,partitioning,partitioning,property,else,if,this,partitioning,partitioning,property,return,props,get,partitioning,partitioning,property,check,compatible,partitioning,fields,props,props,get,custom,partitioner,equals,this,custom,partitioner,else,throw,new,compiler,exception,properties,matching,logic,leaves,open,cases
RequestedGlobalProperties -> public boolean isMetBy(GlobalProperties props);1427097830;Checks, if this set of interesting properties, is met by the given_produced properties.__@param props The properties for which to check whether they meet these properties._@return True, if the properties are met, false otherwise.;public boolean isMetBy(GlobalProperties props) {_		if (this.partitioning == PartitioningProperty.ANY_DISTRIBUTION) {_			return true__		} else if (this.partitioning == PartitioningProperty.FULL_REPLICATION) {_			return props.isFullyReplicated()__		}_		else if (props.isFullyReplicated()) {_			return false__		}_		else if (this.partitioning == PartitioningProperty.RANDOM_PARTITIONED) {_			return true__		}_		else if (this.partitioning == PartitioningProperty.ANY_PARTITIONING) {_			return checkCompatiblePartitioningFields(props)__		}_		else if (this.partitioning == PartitioningProperty.HASH_PARTITIONED) {_			return props.getPartitioning() == PartitioningProperty.HASH_PARTITIONED &&_					checkCompatiblePartitioningFields(props)__		}_		else if (this.partitioning == PartitioningProperty.RANGE_PARTITIONED) {_			return props.getPartitioning() == PartitioningProperty.RANGE_PARTITIONED &&_					props.matchesOrderedPartitioning(this.ordering)__		}_		else if (this.partitioning == PartitioningProperty.FORCED_REBALANCED) {_			return props.getPartitioning() == PartitioningProperty.FORCED_REBALANCED__		}_		else if (this.partitioning == PartitioningProperty.CUSTOM_PARTITIONING) {_			return props.getPartitioning() == PartitioningProperty.CUSTOM_PARTITIONING &&_					checkCompatiblePartitioningFields(props) &&_					props.getCustomPartitioner().equals(this.customPartitioner)___		}_		else {_			throw new CompilerException("Properties matching logic leaves open cases.")__		}_	};checks,if,this,set,of,interesting,properties,is,met,by,the,given,produced,properties,param,props,the,properties,for,which,to,check,whether,they,meet,these,properties,return,true,if,the,properties,are,met,false,otherwise;public,boolean,is,met,by,global,properties,props,if,this,partitioning,partitioning,property,return,true,else,if,this,partitioning,partitioning,property,return,props,is,fully,replicated,else,if,props,is,fully,replicated,return,false,else,if,this,partitioning,partitioning,property,return,true,else,if,this,partitioning,partitioning,property,return,check,compatible,partitioning,fields,props,else,if,this,partitioning,partitioning,property,return,props,get,partitioning,partitioning,property,check,compatible,partitioning,fields,props,else,if,this,partitioning,partitioning,property,return,props,get,partitioning,partitioning,property,props,matches,ordered,partitioning,this,ordering,else,if,this,partitioning,partitioning,property,return,props,get,partitioning,partitioning,property,else,if,this,partitioning,partitioning,property,return,props,get,partitioning,partitioning,property,check,compatible,partitioning,fields,props,props,get,custom,partitioner,equals,this,custom,partitioner,else,throw,new,compiler,exception,properties,matching,logic,leaves,open,cases
RequestedGlobalProperties -> public boolean isMetBy(GlobalProperties props);1511814440;Checks, if this set of interesting properties, is met by the given_produced properties.__@param props The properties for which to check whether they meet these properties._@return True, if the properties are met, false otherwise.;public boolean isMetBy(GlobalProperties props) {_		if (this.partitioning == PartitioningProperty.ANY_DISTRIBUTION) {_			return true__		} else if (this.partitioning == PartitioningProperty.FULL_REPLICATION) {_			return props.isFullyReplicated()__		}_		else if (props.isFullyReplicated()) {_			return false__		}_		else if (this.partitioning == PartitioningProperty.RANDOM_PARTITIONED) {_			return true__		}_		else if (this.partitioning == PartitioningProperty.ANY_PARTITIONING) {_			return checkCompatiblePartitioningFields(props)__		}_		else if (this.partitioning == PartitioningProperty.HASH_PARTITIONED) {_			return props.getPartitioning() == PartitioningProperty.HASH_PARTITIONED &&_					checkCompatiblePartitioningFields(props)__		}_		else if (this.partitioning == PartitioningProperty.RANGE_PARTITIONED) {_			return props.getPartitioning() == PartitioningProperty.RANGE_PARTITIONED &&_					props.matchesOrderedPartitioning(this.ordering)__		}_		else if (this.partitioning == PartitioningProperty.FORCED_REBALANCED) {_			return props.getPartitioning() == PartitioningProperty.FORCED_REBALANCED__		}_		else if (this.partitioning == PartitioningProperty.CUSTOM_PARTITIONING) {_			return props.getPartitioning() == PartitioningProperty.CUSTOM_PARTITIONING &&_					checkCompatiblePartitioningFields(props) &&_					props.getCustomPartitioner().equals(this.customPartitioner)___		}_		else {_			throw new CompilerException("Properties matching logic leaves open cases.")__		}_	};checks,if,this,set,of,interesting,properties,is,met,by,the,given,produced,properties,param,props,the,properties,for,which,to,check,whether,they,meet,these,properties,return,true,if,the,properties,are,met,false,otherwise;public,boolean,is,met,by,global,properties,props,if,this,partitioning,partitioning,property,return,true,else,if,this,partitioning,partitioning,property,return,props,is,fully,replicated,else,if,props,is,fully,replicated,return,false,else,if,this,partitioning,partitioning,property,return,true,else,if,this,partitioning,partitioning,property,return,check,compatible,partitioning,fields,props,else,if,this,partitioning,partitioning,property,return,props,get,partitioning,partitioning,property,check,compatible,partitioning,fields,props,else,if,this,partitioning,partitioning,property,return,props,get,partitioning,partitioning,property,props,matches,ordered,partitioning,this,ordering,else,if,this,partitioning,partitioning,property,return,props,get,partitioning,partitioning,property,else,if,this,partitioning,partitioning,property,return,props,get,partitioning,partitioning,property,check,compatible,partitioning,fields,props,props,get,custom,partitioner,equals,this,custom,partitioner,else,throw,new,compiler,exception,properties,matching,logic,leaves,open,cases
RequestedGlobalProperties -> public RequestedGlobalProperties();1426843274;Initializes the global properties with no partitioning.;public RequestedGlobalProperties() {_		this.partitioning = PartitioningProperty.RANDOM_PARTITIONED__	};initializes,the,global,properties,with,no,partitioning;public,requested,global,properties,this,partitioning,partitioning,property
RequestedGlobalProperties -> public RequestedGlobalProperties();1427097830;Initializes the global properties with no partitioning.;public RequestedGlobalProperties() {_		this.partitioning = PartitioningProperty.RANDOM_PARTITIONED__	};initializes,the,global,properties,with,no,partitioning;public,requested,global,properties,this,partitioning,partitioning,property
RequestedGlobalProperties -> public RequestedGlobalProperties();1511814440;Initializes the global properties with no partitioning.;public RequestedGlobalProperties() {_		this.partitioning = PartitioningProperty.RANDOM_PARTITIONED__	};initializes,the,global,properties,with,no,partitioning;public,requested,global,properties,this,partitioning,partitioning,property
RequestedGlobalProperties -> public void setHashPartitioned(FieldSet partitionedFields);1426843274;Sets these properties to request a hash partitioning on the given fields.__If the fields are provided as {@link FieldSet}, then any permutation of the fields is a_valid partitioning, including subsets. If the fields are given as a {@link FieldList},_then only an exact partitioning on the fields matches this requested partitioning.__@param partitionedFields The key fields for the partitioning.;public void setHashPartitioned(FieldSet partitionedFields) {_		if (partitionedFields == null) {_			throw new NullPointerException()__		}_		this.partitioning = PartitioningProperty.HASH_PARTITIONED__		this.partitioningFields = partitionedFields__		this.ordering = null__	};sets,these,properties,to,request,a,hash,partitioning,on,the,given,fields,if,the,fields,are,provided,as,link,field,set,then,any,permutation,of,the,fields,is,a,valid,partitioning,including,subsets,if,the,fields,are,given,as,a,link,field,list,then,only,an,exact,partitioning,on,the,fields,matches,this,requested,partitioning,param,partitioned,fields,the,key,fields,for,the,partitioning;public,void,set,hash,partitioned,field,set,partitioned,fields,if,partitioned,fields,null,throw,new,null,pointer,exception,this,partitioning,partitioning,property,this,partitioning,fields,partitioned,fields,this,ordering,null
RequestedGlobalProperties -> public void setHashPartitioned(FieldSet partitionedFields);1427097830;Sets these properties to request a hash partitioning on the given fields.__If the fields are provided as {@link FieldSet}, then any permutation of the fields is a_valid partitioning, including subsets. If the fields are given as a {@link FieldList},_then only an exact partitioning on the fields matches this requested partitioning.__@param partitionedFields The key fields for the partitioning.;public void setHashPartitioned(FieldSet partitionedFields) {_		if (partitionedFields == null) {_			throw new NullPointerException()__		}_		this.partitioning = PartitioningProperty.HASH_PARTITIONED__		this.partitioningFields = partitionedFields__		this.ordering = null__	};sets,these,properties,to,request,a,hash,partitioning,on,the,given,fields,if,the,fields,are,provided,as,link,field,set,then,any,permutation,of,the,fields,is,a,valid,partitioning,including,subsets,if,the,fields,are,given,as,a,link,field,list,then,only,an,exact,partitioning,on,the,fields,matches,this,requested,partitioning,param,partitioned,fields,the,key,fields,for,the,partitioning;public,void,set,hash,partitioned,field,set,partitioned,fields,if,partitioned,fields,null,throw,new,null,pointer,exception,this,partitioning,partitioning,property,this,partitioning,fields,partitioned,fields,this,ordering,null
RequestedGlobalProperties -> public void setHashPartitioned(FieldSet partitionedFields);1511814440;Sets these properties to request a hash partitioning on the given fields.__If the fields are provided as {@link FieldSet}, then any permutation of the fields is a_valid partitioning, including subsets. If the fields are given as a {@link FieldList},_then only an exact partitioning on the fields matches this requested partitioning.__@param partitionedFields The key fields for the partitioning.;public void setHashPartitioned(FieldSet partitionedFields) {_		if (partitionedFields == null) {_			throw new NullPointerException()__		}_		this.partitioning = PartitioningProperty.HASH_PARTITIONED__		this.partitioningFields = partitionedFields__		this.ordering = null__	};sets,these,properties,to,request,a,hash,partitioning,on,the,given,fields,if,the,fields,are,provided,as,link,field,set,then,any,permutation,of,the,fields,is,a,valid,partitioning,including,subsets,if,the,fields,are,given,as,a,link,field,list,then,only,an,exact,partitioning,on,the,fields,matches,this,requested,partitioning,param,partitioned,fields,the,key,fields,for,the,partitioning;public,void,set,hash,partitioned,field,set,partitioned,fields,if,partitioned,fields,null,throw,new,null,pointer,exception,this,partitioning,partitioning,property,this,partitioning,fields,partitioned,fields,this,ordering,null
RequestedGlobalProperties -> public Partitioner<?> getCustomPartitioner();1426843274;Gets the custom partitioner associated with these properties.__@return The custom partitioner associated with these properties.;public Partitioner<?> getCustomPartitioner() {_		return customPartitioner__	};gets,the,custom,partitioner,associated,with,these,properties,return,the,custom,partitioner,associated,with,these,properties;public,partitioner,get,custom,partitioner,return,custom,partitioner
RequestedGlobalProperties -> public Partitioner<?> getCustomPartitioner();1427097830;Gets the custom partitioner associated with these properties.__@return The custom partitioner associated with these properties.;public Partitioner<?> getCustomPartitioner() {_		return customPartitioner__	};gets,the,custom,partitioner,associated,with,these,properties,return,the,custom,partitioner,associated,with,these,properties;public,partitioner,get,custom,partitioner,return,custom,partitioner
RequestedGlobalProperties -> public Partitioner<?> getCustomPartitioner();1511814440;Gets the custom partitioner associated with these properties.__@return The custom partitioner associated with these properties.;public Partitioner<?> getCustomPartitioner() {_		return customPartitioner__	};gets,the,custom,partitioner,associated,with,these,properties,return,the,custom,partitioner,associated,with,these,properties;public,partitioner,get,custom,partitioner,return,custom,partitioner
