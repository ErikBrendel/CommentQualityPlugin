# id;timestamp;commentText;codeText;commentWords;codeWords
GroupReduceNode -> public GroupReduceNode(GroupReduceOperatorBase<?, ?, ?> operator);1426843274;Creates a new optimizer node for the given operator.__@param operator The reduce operation.;public GroupReduceNode(GroupReduceOperatorBase<?, ?, ?> operator) {_		super(operator)__		_		if (this.keys == null) {_			_			setDegreeOfParallelism(1)__		}_		_		this.possibleProperties = initPossibleProperties(operator.getCustomPartitioner())__	};creates,a,new,optimizer,node,for,the,given,operator,param,operator,the,reduce,operation;public,group,reduce,node,group,reduce,operator,base,operator,super,operator,if,this,keys,null,set,degree,of,parallelism,1,this,possible,properties,init,possible,properties,operator,get,custom,partitioner
GroupReduceNode -> public GroupReduceNode(GroupReduceOperatorBase<?, ?, ?> operator);1427097830;Creates a new optimizer node for the given operator.__@param operator The reduce operation.;public GroupReduceNode(GroupReduceOperatorBase<?, ?, ?> operator) {_		super(operator)__		_		if (this.keys == null) {_			_			setParallelism(1)__		}_		_		this.possibleProperties = initPossibleProperties(operator.getCustomPartitioner())__	};creates,a,new,optimizer,node,for,the,given,operator,param,operator,the,reduce,operation;public,group,reduce,node,group,reduce,operator,base,operator,super,operator,if,this,keys,null,set,parallelism,1,this,possible,properties,init,possible,properties,operator,get,custom,partitioner
GroupReduceNode -> public GroupReduceNode(GroupReduceOperatorBase<?, ?, ?> operator);1428086387;Creates a new optimizer node for the given operator.__@param operator The reduce operation.;public GroupReduceNode(GroupReduceOperatorBase<?, ?, ?> operator) {_		super(operator)__		_		if (this.keys == null) {_			_			setParallelism(1)__		}_		_		this.possibleProperties = initPossibleProperties(operator.getCustomPartitioner())__	};creates,a,new,optimizer,node,for,the,given,operator,param,operator,the,reduce,operation;public,group,reduce,node,group,reduce,operator,base,operator,super,operator,if,this,keys,null,set,parallelism,1,this,possible,properties,init,possible,properties,operator,get,custom,partitioner
GroupReduceNode -> public GroupReduceNode(GroupReduceOperatorBase<?, ?, ?> operator);1442492509;Creates a new optimizer node for the given operator.__@param operator The reduce operation.;public GroupReduceNode(GroupReduceOperatorBase<?, ?, ?> operator) {_		super(operator)__		this.operatorName = "GroupReduce"__		_		if (this.keys == null) {_			_			setParallelism(1)__		}_		_		this.possibleProperties = initPossibleProperties(operator.getCustomPartitioner())__	};creates,a,new,optimizer,node,for,the,given,operator,param,operator,the,reduce,operation;public,group,reduce,node,group,reduce,operator,base,operator,super,operator,this,operator,name,group,reduce,if,this,keys,null,set,parallelism,1,this,possible,properties,init,possible,properties,operator,get,custom,partitioner
GroupReduceNode -> public GroupReduceNode(GroupReduceOperatorBase<?, ?, ?> operator);1517317681;Creates a new optimizer node for the given operator.__@param operator The reduce operation.;public GroupReduceNode(GroupReduceOperatorBase<?, ?, ?> operator) {_		super(operator)__		this.operatorName = "GroupReduce"__		_		if (this.keys == null) {_			_			setParallelism(1)__		}_		_		this.possibleProperties = initPossibleProperties(operator.getCustomPartitioner())__	};creates,a,new,optimizer,node,for,the,given,operator,param,operator,the,reduce,operation;public,group,reduce,node,group,reduce,operator,base,operator,super,operator,this,operator,name,group,reduce,if,this,keys,null,set,parallelism,1,this,possible,properties,init,possible,properties,operator,get,custom,partitioner
GroupReduceNode -> public boolean isCombineable();1426843274;Checks, whether a combiner function has been given for the function encapsulated_by this reduce contract.__@return True, if a combiner has been given, false otherwise.;public boolean isCombineable() {_		return getOperator().isCombinable()__	};checks,whether,a,combiner,function,has,been,given,for,the,function,encapsulated,by,this,reduce,contract,return,true,if,a,combiner,has,been,given,false,otherwise;public,boolean,is,combineable,return,get,operator,is,combinable
GroupReduceNode -> public boolean isCombineable();1427097830;Checks, whether a combiner function has been given for the function encapsulated_by this reduce contract.__@return True, if a combiner has been given, false otherwise.;public boolean isCombineable() {_		return getOperator().isCombinable()__	};checks,whether,a,combiner,function,has,been,given,for,the,function,encapsulated,by,this,reduce,contract,return,true,if,a,combiner,has,been,given,false,otherwise;public,boolean,is,combineable,return,get,operator,is,combinable
GroupReduceNode -> public boolean isCombineable();1428086387;Checks, whether a combiner function has been given for the function encapsulated_by this reduce contract.__@return True, if a combiner has been given, false otherwise.;public boolean isCombineable() {_		return getOperator().isCombinable()__	};checks,whether,a,combiner,function,has,been,given,for,the,function,encapsulated,by,this,reduce,contract,return,true,if,a,combiner,has,been,given,false,otherwise;public,boolean,is,combineable,return,get,operator,is,combinable
GroupReduceNode -> public boolean isCombineable();1442492509;Checks, whether a combiner function has been given for the function encapsulated_by this reduce contract.__@return True, if a combiner has been given, false otherwise.;public boolean isCombineable() {_		return getOperator().isCombinable()__	};checks,whether,a,combiner,function,has,been,given,for,the,function,encapsulated,by,this,reduce,contract,return,true,if,a,combiner,has,been,given,false,otherwise;public,boolean,is,combineable,return,get,operator,is,combinable
GroupReduceNode -> public boolean isCombineable();1517317681;Checks, whether a combiner function has been given for the function encapsulated_by this reduce contract.__@return True, if a combiner has been given, false otherwise.;public boolean isCombineable() {_		return getOperator().isCombinable()__	};checks,whether,a,combiner,function,has,been,given,for,the,function,encapsulated,by,this,reduce,contract,return,true,if,a,combiner,has,been,given,false,otherwise;public,boolean,is,combineable,return,get,operator,is,combinable
GroupReduceNode -> @Override 	public GroupReduceOperatorBase<?, ?, ?> getOperator();1426843274;Gets the operator represented by this optimizer node.__@return The operator represented by this optimizer node.;@Override_	public GroupReduceOperatorBase<?, ?, ?> getOperator() {_		return (GroupReduceOperatorBase<?, ?, ?>) super.getOperator()__	};gets,the,operator,represented,by,this,optimizer,node,return,the,operator,represented,by,this,optimizer,node;override,public,group,reduce,operator,base,get,operator,return,group,reduce,operator,base,super,get,operator
GroupReduceNode -> @Override 	public GroupReduceOperatorBase<?, ?, ?> getOperator();1427097830;Gets the operator represented by this optimizer node.__@return The operator represented by this optimizer node.;@Override_	public GroupReduceOperatorBase<?, ?, ?> getOperator() {_		return (GroupReduceOperatorBase<?, ?, ?>) super.getOperator()__	};gets,the,operator,represented,by,this,optimizer,node,return,the,operator,represented,by,this,optimizer,node;override,public,group,reduce,operator,base,get,operator,return,group,reduce,operator,base,super,get,operator
GroupReduceNode -> @Override 	public GroupReduceOperatorBase<?, ?, ?> getOperator();1428086387;Gets the operator represented by this optimizer node.__@return The operator represented by this optimizer node.;@Override_	public GroupReduceOperatorBase<?, ?, ?> getOperator() {_		return (GroupReduceOperatorBase<?, ?, ?>) super.getOperator()__	};gets,the,operator,represented,by,this,optimizer,node,return,the,operator,represented,by,this,optimizer,node;override,public,group,reduce,operator,base,get,operator,return,group,reduce,operator,base,super,get,operator
GroupReduceNode -> @Override 	public GroupReduceOperatorBase<?, ?, ?> getOperator();1442492509;Gets the operator represented by this optimizer node.__@return The operator represented by this optimizer node.;@Override_	public GroupReduceOperatorBase<?, ?, ?> getOperator() {_		return (GroupReduceOperatorBase<?, ?, ?>) super.getOperator()__	};gets,the,operator,represented,by,this,optimizer,node,return,the,operator,represented,by,this,optimizer,node;override,public,group,reduce,operator,base,get,operator,return,group,reduce,operator,base,super,get,operator
GroupReduceNode -> @Override 	public GroupReduceOperatorBase<?, ?, ?> getOperator();1517317681;Gets the operator represented by this optimizer node.__@return The operator represented by this optimizer node.;@Override_	public GroupReduceOperatorBase<?, ?, ?> getOperator() {_		return (GroupReduceOperatorBase<?, ?, ?>) super.getOperator()__	};gets,the,operator,represented,by,this,optimizer,node,return,the,operator,represented,by,this,optimizer,node;override,public,group,reduce,operator,base,get,operator,return,group,reduce,operator,base,super,get,operator
