# id;timestamp;commentText;codeText;commentWords;codeWords
ScalaCsvOutputFormat -> public ScalaCsvOutputFormat(Path outputPath, String recordDelimiter, String fieldDelimiter);1411372797;Creates an instance of CsvOutputFormat.__@param outputPath The path where the CSV file is written._@param recordDelimiter_The delimiter that is used to separate the tuples._@param fieldDelimiter_The delimiter that is used to separate fields in a tuple.;public ScalaCsvOutputFormat(Path outputPath, String recordDelimiter, String fieldDelimiter) {_		super(outputPath)__		if (recordDelimiter == null) {_			throw new IllegalArgumentException("RecordDelmiter shall not be null.")__		}__		if (fieldDelimiter == null) {_			throw new IllegalArgumentException("FieldDelimiter shall not be null.")__		}__		this.fieldDelimiter = fieldDelimiter__		this.recordDelimiter = recordDelimiter__		this.allowNullValues = false__	};creates,an,instance,of,csv,output,format,param,output,path,the,path,where,the,csv,file,is,written,param,record,delimiter,the,delimiter,that,is,used,to,separate,the,tuples,param,field,delimiter,the,delimiter,that,is,used,to,separate,fields,in,a,tuple;public,scala,csv,output,format,path,output,path,string,record,delimiter,string,field,delimiter,super,output,path,if,record,delimiter,null,throw,new,illegal,argument,exception,record,delmiter,shall,not,be,null,if,field,delimiter,null,throw,new,illegal,argument,exception,field,delimiter,shall,not,be,null,this,field,delimiter,field,delimiter,this,record,delimiter,record,delimiter,this,allow,null,values,false
ScalaCsvOutputFormat -> public ScalaCsvOutputFormat(Path outputPath, String recordDelimiter, String fieldDelimiter);1411399886;Creates an instance of CsvOutputFormat.__@param outputPath The path where the CSV file is written._@param recordDelimiter_The delimiter that is used to separate the tuples._@param fieldDelimiter_The delimiter that is used to separate fields in a tuple.;public ScalaCsvOutputFormat(Path outputPath, String recordDelimiter, String fieldDelimiter) {_		super(outputPath)__		if (recordDelimiter == null) {_			throw new IllegalArgumentException("RecordDelmiter shall not be null.")__		}__		if (fieldDelimiter == null) {_			throw new IllegalArgumentException("FieldDelimiter shall not be null.")__		}__		this.fieldDelimiter = fieldDelimiter__		this.recordDelimiter = recordDelimiter__		this.allowNullValues = false__	};creates,an,instance,of,csv,output,format,param,output,path,the,path,where,the,csv,file,is,written,param,record,delimiter,the,delimiter,that,is,used,to,separate,the,tuples,param,field,delimiter,the,delimiter,that,is,used,to,separate,fields,in,a,tuple;public,scala,csv,output,format,path,output,path,string,record,delimiter,string,field,delimiter,super,output,path,if,record,delimiter,null,throw,new,illegal,argument,exception,record,delmiter,shall,not,be,null,if,field,delimiter,null,throw,new,illegal,argument,exception,field,delimiter,shall,not,be,null,this,field,delimiter,field,delimiter,this,record,delimiter,record,delimiter,this,allow,null,values,false
ScalaCsvOutputFormat -> public ScalaCsvOutputFormat(Path outputPath, String recordDelimiter, String fieldDelimiter);1411473593;Creates an instance of CsvOutputFormat.__@param outputPath The path where the CSV file is written._@param recordDelimiter_The delimiter that is used to separate the tuples._@param fieldDelimiter_The delimiter that is used to separate fields in a tuple.;public ScalaCsvOutputFormat(Path outputPath, String recordDelimiter, String fieldDelimiter) {_		super(outputPath)__		if (recordDelimiter == null) {_			throw new IllegalArgumentException("RecordDelmiter shall not be null.")__		}__		if (fieldDelimiter == null) {_			throw new IllegalArgumentException("FieldDelimiter shall not be null.")__		}__		this.fieldDelimiter = fieldDelimiter__		this.recordDelimiter = recordDelimiter__		this.allowNullValues = false__	};creates,an,instance,of,csv,output,format,param,output,path,the,path,where,the,csv,file,is,written,param,record,delimiter,the,delimiter,that,is,used,to,separate,the,tuples,param,field,delimiter,the,delimiter,that,is,used,to,separate,fields,in,a,tuple;public,scala,csv,output,format,path,output,path,string,record,delimiter,string,field,delimiter,super,output,path,if,record,delimiter,null,throw,new,illegal,argument,exception,record,delmiter,shall,not,be,null,if,field,delimiter,null,throw,new,illegal,argument,exception,field,delimiter,shall,not,be,null,this,field,delimiter,field,delimiter,this,record,delimiter,record,delimiter,this,allow,null,values,false
ScalaCsvOutputFormat -> public ScalaCsvOutputFormat(Path outputPath, String recordDelimiter, String fieldDelimiter);1412605211;Creates an instance of CsvOutputFormat.__@param outputPath The path where the CSV file is written._@param recordDelimiter_The delimiter that is used to separate the tuples._@param fieldDelimiter_The delimiter that is used to separate fields in a tuple.;public ScalaCsvOutputFormat(Path outputPath, String recordDelimiter, String fieldDelimiter) {_		super(outputPath)__		if (recordDelimiter == null) {_			throw new IllegalArgumentException("RecordDelmiter shall not be null.")__		}__		if (fieldDelimiter == null) {_			throw new IllegalArgumentException("FieldDelimiter shall not be null.")__		}__		this.fieldDelimiter = fieldDelimiter__		this.recordDelimiter = recordDelimiter__		this.allowNullValues = false__	};creates,an,instance,of,csv,output,format,param,output,path,the,path,where,the,csv,file,is,written,param,record,delimiter,the,delimiter,that,is,used,to,separate,the,tuples,param,field,delimiter,the,delimiter,that,is,used,to,separate,fields,in,a,tuple;public,scala,csv,output,format,path,output,path,string,record,delimiter,string,field,delimiter,super,output,path,if,record,delimiter,null,throw,new,illegal,argument,exception,record,delmiter,shall,not,be,null,if,field,delimiter,null,throw,new,illegal,argument,exception,field,delimiter,shall,not,be,null,this,field,delimiter,field,delimiter,this,record,delimiter,record,delimiter,this,allow,null,values,false
ScalaCsvOutputFormat -> public ScalaCsvOutputFormat(Path outputPath, String recordDelimiter, String fieldDelimiter);1423570503;Creates an instance of CsvOutputFormat.__@param outputPath The path where the CSV file is written._@param recordDelimiter_The delimiter that is used to separate the tuples._@param fieldDelimiter_The delimiter that is used to separate fields in a tuple.;public ScalaCsvOutputFormat(Path outputPath, String recordDelimiter, String fieldDelimiter) {_		super(outputPath)__		if (recordDelimiter == null) {_			throw new IllegalArgumentException("RecordDelmiter shall not be null.")__		}__		if (fieldDelimiter == null) {_			throw new IllegalArgumentException("FieldDelimiter shall not be null.")__		}__		this.fieldDelimiter = fieldDelimiter__		this.recordDelimiter = recordDelimiter__		this.allowNullValues = false__	};creates,an,instance,of,csv,output,format,param,output,path,the,path,where,the,csv,file,is,written,param,record,delimiter,the,delimiter,that,is,used,to,separate,the,tuples,param,field,delimiter,the,delimiter,that,is,used,to,separate,fields,in,a,tuple;public,scala,csv,output,format,path,output,path,string,record,delimiter,string,field,delimiter,super,output,path,if,record,delimiter,null,throw,new,illegal,argument,exception,record,delmiter,shall,not,be,null,if,field,delimiter,null,throw,new,illegal,argument,exception,field,delimiter,shall,not,be,null,this,field,delimiter,field,delimiter,this,record,delimiter,record,delimiter,this,allow,null,values,false
ScalaCsvOutputFormat -> public ScalaCsvOutputFormat(Path outputPath, String recordDelimiter, String fieldDelimiter);1443435747;Creates an instance of CsvOutputFormat.__@param outputPath The path where the CSV file is written._@param recordDelimiter_The delimiter that is used to separate the tuples._@param fieldDelimiter_The delimiter that is used to separate fields in a tuple.;public ScalaCsvOutputFormat(Path outputPath, String recordDelimiter, String fieldDelimiter) {_		super(outputPath)__		if (recordDelimiter == null) {_			throw new IllegalArgumentException("RecordDelmiter shall not be null.")__		}__		if (fieldDelimiter == null) {_			throw new IllegalArgumentException("FieldDelimiter shall not be null.")__		}__		this.fieldDelimiter = fieldDelimiter__		this.recordDelimiter = recordDelimiter__		this.allowNullValues = false__	};creates,an,instance,of,csv,output,format,param,output,path,the,path,where,the,csv,file,is,written,param,record,delimiter,the,delimiter,that,is,used,to,separate,the,tuples,param,field,delimiter,the,delimiter,that,is,used,to,separate,fields,in,a,tuple;public,scala,csv,output,format,path,output,path,string,record,delimiter,string,field,delimiter,super,output,path,if,record,delimiter,null,throw,new,illegal,argument,exception,record,delmiter,shall,not,be,null,if,field,delimiter,null,throw,new,illegal,argument,exception,field,delimiter,shall,not,be,null,this,field,delimiter,field,delimiter,this,record,delimiter,record,delimiter,this,allow,null,values,false
ScalaCsvOutputFormat -> public ScalaCsvOutputFormat(Path outputPath, String recordDelimiter, String fieldDelimiter);1447879320;Creates an instance of CsvOutputFormat.__@param outputPath The path where the CSV file is written._@param recordDelimiter_The delimiter that is used to separate the tuples._@param fieldDelimiter_The delimiter that is used to separate fields in a tuple.;public ScalaCsvOutputFormat(Path outputPath, String recordDelimiter, String fieldDelimiter) {_		super(outputPath)__		if (recordDelimiter == null) {_			throw new IllegalArgumentException("RecordDelmiter shall not be null.")__		}__		if (fieldDelimiter == null) {_			throw new IllegalArgumentException("FieldDelimiter shall not be null.")__		}__		this.fieldDelimiter = fieldDelimiter__		this.recordDelimiter = recordDelimiter__		this.allowNullValues = false__	};creates,an,instance,of,csv,output,format,param,output,path,the,path,where,the,csv,file,is,written,param,record,delimiter,the,delimiter,that,is,used,to,separate,the,tuples,param,field,delimiter,the,delimiter,that,is,used,to,separate,fields,in,a,tuple;public,scala,csv,output,format,path,output,path,string,record,delimiter,string,field,delimiter,super,output,path,if,record,delimiter,null,throw,new,illegal,argument,exception,record,delmiter,shall,not,be,null,if,field,delimiter,null,throw,new,illegal,argument,exception,field,delimiter,shall,not,be,null,this,field,delimiter,field,delimiter,this,record,delimiter,record,delimiter,this,allow,null,values,false
ScalaCsvOutputFormat -> public ScalaCsvOutputFormat(Path outputPath, String recordDelimiter, String fieldDelimiter);1455477986;Creates an instance of CsvOutputFormat.__@param outputPath The path where the CSV file is written._@param recordDelimiter_The delimiter that is used to separate the tuples._@param fieldDelimiter_The delimiter that is used to separate fields in a tuple.;public ScalaCsvOutputFormat(Path outputPath, String recordDelimiter, String fieldDelimiter) {_		super(outputPath)__		if (recordDelimiter == null) {_			throw new IllegalArgumentException("RecordDelmiter shall not be null.")__		}__		if (fieldDelimiter == null) {_			throw new IllegalArgumentException("FieldDelimiter shall not be null.")__		}__		this.fieldDelimiter = fieldDelimiter__		this.recordDelimiter = recordDelimiter__		this.allowNullValues = false__	};creates,an,instance,of,csv,output,format,param,output,path,the,path,where,the,csv,file,is,written,param,record,delimiter,the,delimiter,that,is,used,to,separate,the,tuples,param,field,delimiter,the,delimiter,that,is,used,to,separate,fields,in,a,tuple;public,scala,csv,output,format,path,output,path,string,record,delimiter,string,field,delimiter,super,output,path,if,record,delimiter,null,throw,new,illegal,argument,exception,record,delmiter,shall,not,be,null,if,field,delimiter,null,throw,new,illegal,argument,exception,field,delimiter,shall,not,be,null,this,field,delimiter,field,delimiter,this,record,delimiter,record,delimiter,this,allow,null,values,false
ScalaCsvOutputFormat -> public ScalaCsvOutputFormat(Path outputPath, String recordDelimiter, String fieldDelimiter);1496260727;Creates an instance of CsvOutputFormat.__@param outputPath The path where the CSV file is written._@param recordDelimiter_The delimiter that is used to separate the tuples._@param fieldDelimiter_The delimiter that is used to separate fields in a tuple.;public ScalaCsvOutputFormat(Path outputPath, String recordDelimiter, String fieldDelimiter) {_		super(outputPath)__		if (recordDelimiter == null) {_			throw new IllegalArgumentException("RecordDelmiter shall not be null.")__		}__		if (fieldDelimiter == null) {_			throw new IllegalArgumentException("FieldDelimiter shall not be null.")__		}__		this.fieldDelimiter = fieldDelimiter__		this.recordDelimiter = recordDelimiter__		this.allowNullValues = false__	};creates,an,instance,of,csv,output,format,param,output,path,the,path,where,the,csv,file,is,written,param,record,delimiter,the,delimiter,that,is,used,to,separate,the,tuples,param,field,delimiter,the,delimiter,that,is,used,to,separate,fields,in,a,tuple;public,scala,csv,output,format,path,output,path,string,record,delimiter,string,field,delimiter,super,output,path,if,record,delimiter,null,throw,new,illegal,argument,exception,record,delmiter,shall,not,be,null,if,field,delimiter,null,throw,new,illegal,argument,exception,field,delimiter,shall,not,be,null,this,field,delimiter,field,delimiter,this,record,delimiter,record,delimiter,this,allow,null,values,false
ScalaCsvOutputFormat -> @Override 	public void setInputType(TypeInformation<?> type);1411372797;The purpose of this method is solely to check whether the data type to be processed_is in fact a tuple type.;@Override_	public void setInputType(TypeInformation<?> type) {_		if (!type.isTupleType()) {_			throw new InvalidProgramException("The " + ScalaCsvOutputFormat.class.getSimpleName() +_				" can only be used to write tuple data sets.")__		}_	};the,purpose,of,this,method,is,solely,to,check,whether,the,data,type,to,be,processed,is,in,fact,a,tuple,type;override,public,void,set,input,type,type,information,type,if,type,is,tuple,type,throw,new,invalid,program,exception,the,scala,csv,output,format,class,get,simple,name,can,only,be,used,to,write,tuple,data,sets
ScalaCsvOutputFormat -> @Override 	public void setInputType(TypeInformation<?> type);1411399886;The purpose of this method is solely to check whether the data type to be processed_is in fact a tuple type.;@Override_	public void setInputType(TypeInformation<?> type) {_		if (!type.isTupleType()) {_			throw new InvalidProgramException("The " + ScalaCsvOutputFormat.class.getSimpleName() +_				" can only be used to write tuple data sets.")__		}_	};the,purpose,of,this,method,is,solely,to,check,whether,the,data,type,to,be,processed,is,in,fact,a,tuple,type;override,public,void,set,input,type,type,information,type,if,type,is,tuple,type,throw,new,invalid,program,exception,the,scala,csv,output,format,class,get,simple,name,can,only,be,used,to,write,tuple,data,sets
ScalaCsvOutputFormat -> @Override 	public void setInputType(TypeInformation<?> type);1411473593;The purpose of this method is solely to check whether the data type to be processed_is in fact a tuple type.;@Override_	public void setInputType(TypeInformation<?> type) {_		if (!type.isTupleType()) {_			throw new InvalidProgramException("The " + ScalaCsvOutputFormat.class.getSimpleName() +_				" can only be used to write tuple data sets.")__		}_	};the,purpose,of,this,method,is,solely,to,check,whether,the,data,type,to,be,processed,is,in,fact,a,tuple,type;override,public,void,set,input,type,type,information,type,if,type,is,tuple,type,throw,new,invalid,program,exception,the,scala,csv,output,format,class,get,simple,name,can,only,be,used,to,write,tuple,data,sets
ScalaCsvOutputFormat -> @Override 	public void setInputType(TypeInformation<?> type);1412605211;The purpose of this method is solely to check whether the data type to be processed_is in fact a tuple type.;@Override_	public void setInputType(TypeInformation<?> type) {_		if (!type.isTupleType()) {_			throw new InvalidProgramException("The " + ScalaCsvOutputFormat.class.getSimpleName() +_				" can only be used to write tuple data sets.")__		}_	};the,purpose,of,this,method,is,solely,to,check,whether,the,data,type,to,be,processed,is,in,fact,a,tuple,type;override,public,void,set,input,type,type,information,type,if,type,is,tuple,type,throw,new,invalid,program,exception,the,scala,csv,output,format,class,get,simple,name,can,only,be,used,to,write,tuple,data,sets
ScalaCsvOutputFormat -> public ScalaCsvOutputFormat(Path outputPath, String fieldDelimiter);1411372797;Creates an instance of CsvOutputFormat. Lines are separated by the newline character '\n',_fields by the given field delimiter.__@param outputPath The path where the CSV file is written._@param fieldDelimiter_The delimiter that is used to separate fields in a tuple.;public ScalaCsvOutputFormat(Path outputPath, String fieldDelimiter) {_		this(outputPath, DEFAULT_LINE_DELIMITER, fieldDelimiter)__	};creates,an,instance,of,csv,output,format,lines,are,separated,by,the,newline,character,n,fields,by,the,given,field,delimiter,param,output,path,the,path,where,the,csv,file,is,written,param,field,delimiter,the,delimiter,that,is,used,to,separate,fields,in,a,tuple;public,scala,csv,output,format,path,output,path,string,field,delimiter,this,output,path,field,delimiter
ScalaCsvOutputFormat -> public ScalaCsvOutputFormat(Path outputPath, String fieldDelimiter);1411399886;Creates an instance of CsvOutputFormat. Lines are separated by the newline character '\n',_fields by the given field delimiter.__@param outputPath The path where the CSV file is written._@param fieldDelimiter_The delimiter that is used to separate fields in a tuple.;public ScalaCsvOutputFormat(Path outputPath, String fieldDelimiter) {_		this(outputPath, DEFAULT_LINE_DELIMITER, fieldDelimiter)__	};creates,an,instance,of,csv,output,format,lines,are,separated,by,the,newline,character,n,fields,by,the,given,field,delimiter,param,output,path,the,path,where,the,csv,file,is,written,param,field,delimiter,the,delimiter,that,is,used,to,separate,fields,in,a,tuple;public,scala,csv,output,format,path,output,path,string,field,delimiter,this,output,path,field,delimiter
ScalaCsvOutputFormat -> public ScalaCsvOutputFormat(Path outputPath, String fieldDelimiter);1411473593;Creates an instance of CsvOutputFormat. Lines are separated by the newline character '\n',_fields by the given field delimiter.__@param outputPath The path where the CSV file is written._@param fieldDelimiter_The delimiter that is used to separate fields in a tuple.;public ScalaCsvOutputFormat(Path outputPath, String fieldDelimiter) {_		this(outputPath, DEFAULT_LINE_DELIMITER, fieldDelimiter)__	};creates,an,instance,of,csv,output,format,lines,are,separated,by,the,newline,character,n,fields,by,the,given,field,delimiter,param,output,path,the,path,where,the,csv,file,is,written,param,field,delimiter,the,delimiter,that,is,used,to,separate,fields,in,a,tuple;public,scala,csv,output,format,path,output,path,string,field,delimiter,this,output,path,field,delimiter
ScalaCsvOutputFormat -> public ScalaCsvOutputFormat(Path outputPath, String fieldDelimiter);1412605211;Creates an instance of CsvOutputFormat. Lines are separated by the newline character '\n',_fields by the given field delimiter.__@param outputPath The path where the CSV file is written._@param fieldDelimiter_The delimiter that is used to separate fields in a tuple.;public ScalaCsvOutputFormat(Path outputPath, String fieldDelimiter) {_		this(outputPath, DEFAULT_LINE_DELIMITER, fieldDelimiter)__	};creates,an,instance,of,csv,output,format,lines,are,separated,by,the,newline,character,n,fields,by,the,given,field,delimiter,param,output,path,the,path,where,the,csv,file,is,written,param,field,delimiter,the,delimiter,that,is,used,to,separate,fields,in,a,tuple;public,scala,csv,output,format,path,output,path,string,field,delimiter,this,output,path,field,delimiter
ScalaCsvOutputFormat -> public ScalaCsvOutputFormat(Path outputPath, String fieldDelimiter);1423570503;Creates an instance of CsvOutputFormat. Lines are separated by the newline character '\n',_fields by the given field delimiter.__@param outputPath The path where the CSV file is written._@param fieldDelimiter_The delimiter that is used to separate fields in a tuple.;public ScalaCsvOutputFormat(Path outputPath, String fieldDelimiter) {_		this(outputPath, DEFAULT_LINE_DELIMITER, fieldDelimiter)__	};creates,an,instance,of,csv,output,format,lines,are,separated,by,the,newline,character,n,fields,by,the,given,field,delimiter,param,output,path,the,path,where,the,csv,file,is,written,param,field,delimiter,the,delimiter,that,is,used,to,separate,fields,in,a,tuple;public,scala,csv,output,format,path,output,path,string,field,delimiter,this,output,path,field,delimiter
ScalaCsvOutputFormat -> public ScalaCsvOutputFormat(Path outputPath, String fieldDelimiter);1443435747;Creates an instance of CsvOutputFormat. Lines are separated by the newline character '\n',_fields by the given field delimiter.__@param outputPath The path where the CSV file is written._@param fieldDelimiter_The delimiter that is used to separate fields in a tuple.;public ScalaCsvOutputFormat(Path outputPath, String fieldDelimiter) {_		this(outputPath, DEFAULT_LINE_DELIMITER, fieldDelimiter)__	};creates,an,instance,of,csv,output,format,lines,are,separated,by,the,newline,character,n,fields,by,the,given,field,delimiter,param,output,path,the,path,where,the,csv,file,is,written,param,field,delimiter,the,delimiter,that,is,used,to,separate,fields,in,a,tuple;public,scala,csv,output,format,path,output,path,string,field,delimiter,this,output,path,field,delimiter
ScalaCsvOutputFormat -> public ScalaCsvOutputFormat(Path outputPath, String fieldDelimiter);1447879320;Creates an instance of CsvOutputFormat. Lines are separated by the newline character '\n',_fields by the given field delimiter.__@param outputPath The path where the CSV file is written._@param fieldDelimiter_The delimiter that is used to separate fields in a tuple.;public ScalaCsvOutputFormat(Path outputPath, String fieldDelimiter) {_		this(outputPath, DEFAULT_LINE_DELIMITER, fieldDelimiter)__	};creates,an,instance,of,csv,output,format,lines,are,separated,by,the,newline,character,n,fields,by,the,given,field,delimiter,param,output,path,the,path,where,the,csv,file,is,written,param,field,delimiter,the,delimiter,that,is,used,to,separate,fields,in,a,tuple;public,scala,csv,output,format,path,output,path,string,field,delimiter,this,output,path,field,delimiter
ScalaCsvOutputFormat -> public ScalaCsvOutputFormat(Path outputPath, String fieldDelimiter);1455477986;Creates an instance of CsvOutputFormat. Lines are separated by the newline character '\n',_fields by the given field delimiter.__@param outputPath The path where the CSV file is written._@param fieldDelimiter_The delimiter that is used to separate fields in a tuple.;public ScalaCsvOutputFormat(Path outputPath, String fieldDelimiter) {_		this(outputPath, DEFAULT_LINE_DELIMITER, fieldDelimiter)__	};creates,an,instance,of,csv,output,format,lines,are,separated,by,the,newline,character,n,fields,by,the,given,field,delimiter,param,output,path,the,path,where,the,csv,file,is,written,param,field,delimiter,the,delimiter,that,is,used,to,separate,fields,in,a,tuple;public,scala,csv,output,format,path,output,path,string,field,delimiter,this,output,path,field,delimiter
ScalaCsvOutputFormat -> public ScalaCsvOutputFormat(Path outputPath, String fieldDelimiter);1496260727;Creates an instance of CsvOutputFormat. Lines are separated by the newline character '\n',_fields by the given field delimiter.__@param outputPath The path where the CSV file is written._@param fieldDelimiter_The delimiter that is used to separate fields in a tuple.;public ScalaCsvOutputFormat(Path outputPath, String fieldDelimiter) {_		this(outputPath, DEFAULT_LINE_DELIMITER, fieldDelimiter)__	};creates,an,instance,of,csv,output,format,lines,are,separated,by,the,newline,character,n,fields,by,the,given,field,delimiter,param,output,path,the,path,where,the,csv,file,is,written,param,field,delimiter,the,delimiter,that,is,used,to,separate,fields,in,a,tuple;public,scala,csv,output,format,path,output,path,string,field,delimiter,this,output,path,field,delimiter
ScalaCsvOutputFormat -> public void setAllowNullValues(boolean allowNulls);1411372797;Configures the format to either allow null values (writing an empty field),_or to throw an exception when encountering a null field._<p>_by default, null values are allowed.__@param allowNulls Flag to indicate whether the output format should accept null values.;public void setAllowNullValues(boolean allowNulls) {_		this.allowNullValues = allowNulls__	};configures,the,format,to,either,allow,null,values,writing,an,empty,field,or,to,throw,an,exception,when,encountering,a,null,field,p,by,default,null,values,are,allowed,param,allow,nulls,flag,to,indicate,whether,the,output,format,should,accept,null,values;public,void,set,allow,null,values,boolean,allow,nulls,this,allow,null,values,allow,nulls
ScalaCsvOutputFormat -> public void setAllowNullValues(boolean allowNulls);1411399886;Configures the format to either allow null values (writing an empty field),_or to throw an exception when encountering a null field._<p>_by default, null values are allowed.__@param allowNulls Flag to indicate whether the output format should accept null values.;public void setAllowNullValues(boolean allowNulls) {_		this.allowNullValues = allowNulls__	};configures,the,format,to,either,allow,null,values,writing,an,empty,field,or,to,throw,an,exception,when,encountering,a,null,field,p,by,default,null,values,are,allowed,param,allow,nulls,flag,to,indicate,whether,the,output,format,should,accept,null,values;public,void,set,allow,null,values,boolean,allow,nulls,this,allow,null,values,allow,nulls
ScalaCsvOutputFormat -> public void setAllowNullValues(boolean allowNulls);1411473593;Configures the format to either allow null values (writing an empty field),_or to throw an exception when encountering a null field._<p>_by default, null values are allowed.__@param allowNulls Flag to indicate whether the output format should accept null values.;public void setAllowNullValues(boolean allowNulls) {_		this.allowNullValues = allowNulls__	};configures,the,format,to,either,allow,null,values,writing,an,empty,field,or,to,throw,an,exception,when,encountering,a,null,field,p,by,default,null,values,are,allowed,param,allow,nulls,flag,to,indicate,whether,the,output,format,should,accept,null,values;public,void,set,allow,null,values,boolean,allow,nulls,this,allow,null,values,allow,nulls
ScalaCsvOutputFormat -> public void setAllowNullValues(boolean allowNulls);1412605211;Configures the format to either allow null values (writing an empty field),_or to throw an exception when encountering a null field._<p>_by default, null values are allowed.__@param allowNulls Flag to indicate whether the output format should accept null values.;public void setAllowNullValues(boolean allowNulls) {_		this.allowNullValues = allowNulls__	};configures,the,format,to,either,allow,null,values,writing,an,empty,field,or,to,throw,an,exception,when,encountering,a,null,field,p,by,default,null,values,are,allowed,param,allow,nulls,flag,to,indicate,whether,the,output,format,should,accept,null,values;public,void,set,allow,null,values,boolean,allow,nulls,this,allow,null,values,allow,nulls
ScalaCsvOutputFormat -> public void setAllowNullValues(boolean allowNulls);1423570503;Configures the format to either allow null values (writing an empty field),_or to throw an exception when encountering a null field._<p>_by default, null values are allowed.__@param allowNulls Flag to indicate whether the output format should accept null values.;public void setAllowNullValues(boolean allowNulls) {_		this.allowNullValues = allowNulls__	};configures,the,format,to,either,allow,null,values,writing,an,empty,field,or,to,throw,an,exception,when,encountering,a,null,field,p,by,default,null,values,are,allowed,param,allow,nulls,flag,to,indicate,whether,the,output,format,should,accept,null,values;public,void,set,allow,null,values,boolean,allow,nulls,this,allow,null,values,allow,nulls
ScalaCsvOutputFormat -> public void setAllowNullValues(boolean allowNulls);1443435747;Configures the format to either allow null values (writing an empty field),_or to throw an exception when encountering a null field._<p>_by default, null values are allowed.__@param allowNulls Flag to indicate whether the output format should accept null values.;public void setAllowNullValues(boolean allowNulls) {_		this.allowNullValues = allowNulls__	};configures,the,format,to,either,allow,null,values,writing,an,empty,field,or,to,throw,an,exception,when,encountering,a,null,field,p,by,default,null,values,are,allowed,param,allow,nulls,flag,to,indicate,whether,the,output,format,should,accept,null,values;public,void,set,allow,null,values,boolean,allow,nulls,this,allow,null,values,allow,nulls
ScalaCsvOutputFormat -> public void setAllowNullValues(boolean allowNulls);1447879320;Configures the format to either allow null values (writing an empty field),_or to throw an exception when encountering a null field._<p>_by default, null values are allowed.__@param allowNulls Flag to indicate whether the output format should accept null values.;public void setAllowNullValues(boolean allowNulls) {_		this.allowNullValues = allowNulls__	};configures,the,format,to,either,allow,null,values,writing,an,empty,field,or,to,throw,an,exception,when,encountering,a,null,field,p,by,default,null,values,are,allowed,param,allow,nulls,flag,to,indicate,whether,the,output,format,should,accept,null,values;public,void,set,allow,null,values,boolean,allow,nulls,this,allow,null,values,allow,nulls
ScalaCsvOutputFormat -> public void setAllowNullValues(boolean allowNulls);1455477986;Configures the format to either allow null values (writing an empty field),_or to throw an exception when encountering a null field._<p>_by default, null values are allowed.__@param allowNulls Flag to indicate whether the output format should accept null values.;public void setAllowNullValues(boolean allowNulls) {_		this.allowNullValues = allowNulls__	};configures,the,format,to,either,allow,null,values,writing,an,empty,field,or,to,throw,an,exception,when,encountering,a,null,field,p,by,default,null,values,are,allowed,param,allow,nulls,flag,to,indicate,whether,the,output,format,should,accept,null,values;public,void,set,allow,null,values,boolean,allow,nulls,this,allow,null,values,allow,nulls
ScalaCsvOutputFormat -> public void setAllowNullValues(boolean allowNulls);1496260727;Configures the format to either allow null values (writing an empty field),_or to throw an exception when encountering a null field.__<p>By default, null values are allowed.__@param allowNulls Flag to indicate whether the output format should accept null values.;public void setAllowNullValues(boolean allowNulls) {_		this.allowNullValues = allowNulls__	};configures,the,format,to,either,allow,null,values,writing,an,empty,field,or,to,throw,an,exception,when,encountering,a,null,field,p,by,default,null,values,are,allowed,param,allow,nulls,flag,to,indicate,whether,the,output,format,should,accept,null,values;public,void,set,allow,null,values,boolean,allow,nulls,this,allow,null,values,allow,nulls
ScalaCsvOutputFormat -> public ScalaCsvOutputFormat(Path outputPath);1411372797;Creates an instance of CsvOutputFormat. Lines are separated by the newline character '\n',_fields are separated by ','.__@param outputPath The path where the CSV file is written.;public ScalaCsvOutputFormat(Path outputPath) {_		this(outputPath, DEFAULT_LINE_DELIMITER, DEFAULT_FIELD_DELIMITER)__	};creates,an,instance,of,csv,output,format,lines,are,separated,by,the,newline,character,n,fields,are,separated,by,param,output,path,the,path,where,the,csv,file,is,written;public,scala,csv,output,format,path,output,path,this,output,path
ScalaCsvOutputFormat -> public ScalaCsvOutputFormat(Path outputPath);1411399886;Creates an instance of CsvOutputFormat. Lines are separated by the newline character '\n',_fields are separated by ','.__@param outputPath The path where the CSV file is written.;public ScalaCsvOutputFormat(Path outputPath) {_		this(outputPath, DEFAULT_LINE_DELIMITER, DEFAULT_FIELD_DELIMITER)__	};creates,an,instance,of,csv,output,format,lines,are,separated,by,the,newline,character,n,fields,are,separated,by,param,output,path,the,path,where,the,csv,file,is,written;public,scala,csv,output,format,path,output,path,this,output,path
ScalaCsvOutputFormat -> public ScalaCsvOutputFormat(Path outputPath);1411473593;Creates an instance of CsvOutputFormat. Lines are separated by the newline character '\n',_fields are separated by ','.__@param outputPath The path where the CSV file is written.;public ScalaCsvOutputFormat(Path outputPath) {_		this(outputPath, DEFAULT_LINE_DELIMITER, DEFAULT_FIELD_DELIMITER)__	};creates,an,instance,of,csv,output,format,lines,are,separated,by,the,newline,character,n,fields,are,separated,by,param,output,path,the,path,where,the,csv,file,is,written;public,scala,csv,output,format,path,output,path,this,output,path
ScalaCsvOutputFormat -> public ScalaCsvOutputFormat(Path outputPath);1412605211;Creates an instance of CsvOutputFormat. Lines are separated by the newline character '\n',_fields are separated by ','.__@param outputPath The path where the CSV file is written.;public ScalaCsvOutputFormat(Path outputPath) {_		this(outputPath, DEFAULT_LINE_DELIMITER, DEFAULT_FIELD_DELIMITER)__	};creates,an,instance,of,csv,output,format,lines,are,separated,by,the,newline,character,n,fields,are,separated,by,param,output,path,the,path,where,the,csv,file,is,written;public,scala,csv,output,format,path,output,path,this,output,path
ScalaCsvOutputFormat -> public ScalaCsvOutputFormat(Path outputPath);1423570503;Creates an instance of CsvOutputFormat. Lines are separated by the newline character '\n',_fields are separated by ','.__@param outputPath The path where the CSV file is written.;public ScalaCsvOutputFormat(Path outputPath) {_		this(outputPath, DEFAULT_LINE_DELIMITER, DEFAULT_FIELD_DELIMITER)__	};creates,an,instance,of,csv,output,format,lines,are,separated,by,the,newline,character,n,fields,are,separated,by,param,output,path,the,path,where,the,csv,file,is,written;public,scala,csv,output,format,path,output,path,this,output,path
ScalaCsvOutputFormat -> public ScalaCsvOutputFormat(Path outputPath);1443435747;Creates an instance of CsvOutputFormat. Lines are separated by the newline character '\n',_fields are separated by ','.__@param outputPath The path where the CSV file is written.;public ScalaCsvOutputFormat(Path outputPath) {_		this(outputPath, DEFAULT_LINE_DELIMITER, DEFAULT_FIELD_DELIMITER)__	};creates,an,instance,of,csv,output,format,lines,are,separated,by,the,newline,character,n,fields,are,separated,by,param,output,path,the,path,where,the,csv,file,is,written;public,scala,csv,output,format,path,output,path,this,output,path
ScalaCsvOutputFormat -> public ScalaCsvOutputFormat(Path outputPath);1447879320;Creates an instance of CsvOutputFormat. Lines are separated by the newline character '\n',_fields are separated by ','.__@param outputPath The path where the CSV file is written.;public ScalaCsvOutputFormat(Path outputPath) {_		this(outputPath, DEFAULT_LINE_DELIMITER, DEFAULT_FIELD_DELIMITER)__	};creates,an,instance,of,csv,output,format,lines,are,separated,by,the,newline,character,n,fields,are,separated,by,param,output,path,the,path,where,the,csv,file,is,written;public,scala,csv,output,format,path,output,path,this,output,path
ScalaCsvOutputFormat -> public ScalaCsvOutputFormat(Path outputPath);1455477986;Creates an instance of CsvOutputFormat. Lines are separated by the newline character '\n',_fields are separated by ','.__@param outputPath The path where the CSV file is written.;public ScalaCsvOutputFormat(Path outputPath) {_		this(outputPath, DEFAULT_LINE_DELIMITER, DEFAULT_FIELD_DELIMITER)__	};creates,an,instance,of,csv,output,format,lines,are,separated,by,the,newline,character,n,fields,are,separated,by,param,output,path,the,path,where,the,csv,file,is,written;public,scala,csv,output,format,path,output,path,this,output,path
ScalaCsvOutputFormat -> public ScalaCsvOutputFormat(Path outputPath);1496260727;Creates an instance of CsvOutputFormat. Lines are separated by the newline character '\n',_fields are separated by ','.__@param outputPath The path where the CSV file is written.;public ScalaCsvOutputFormat(Path outputPath) {_		this(outputPath, DEFAULT_LINE_DELIMITER, DEFAULT_FIELD_DELIMITER)__	};creates,an,instance,of,csv,output,format,lines,are,separated,by,the,newline,character,n,fields,are,separated,by,param,output,path,the,path,where,the,csv,file,is,written;public,scala,csv,output,format,path,output,path,this,output,path
ScalaCsvOutputFormat -> public void setQuoteStrings(boolean quoteStrings);1411372797;Configures whether the output format should quote string values. String values are fields_of type {@link String} and {@link org.apache.flink.types.StringValue}, as well as_all subclasses of the latter._<p>_By default, strings are not quoted.__@param quoteStrings Flag indicating whether string fields should be quoted.;public void setQuoteStrings(boolean quoteStrings) {_		this.quoteStrings = quoteStrings__	};configures,whether,the,output,format,should,quote,string,values,string,values,are,fields,of,type,link,string,and,link,org,apache,flink,types,string,value,as,well,as,all,subclasses,of,the,latter,p,by,default,strings,are,not,quoted,param,quote,strings,flag,indicating,whether,string,fields,should,be,quoted;public,void,set,quote,strings,boolean,quote,strings,this,quote,strings,quote,strings
ScalaCsvOutputFormat -> public void setQuoteStrings(boolean quoteStrings);1411399886;Configures whether the output format should quote string values. String values are fields_of type {@link String} and {@link org.apache.flink.types.StringValue}, as well as_all subclasses of the latter._<p>_By default, strings are not quoted.__@param quoteStrings Flag indicating whether string fields should be quoted.;public void setQuoteStrings(boolean quoteStrings) {_		this.quoteStrings = quoteStrings__	};configures,whether,the,output,format,should,quote,string,values,string,values,are,fields,of,type,link,string,and,link,org,apache,flink,types,string,value,as,well,as,all,subclasses,of,the,latter,p,by,default,strings,are,not,quoted,param,quote,strings,flag,indicating,whether,string,fields,should,be,quoted;public,void,set,quote,strings,boolean,quote,strings,this,quote,strings,quote,strings
ScalaCsvOutputFormat -> public void setQuoteStrings(boolean quoteStrings);1411473593;Configures whether the output format should quote string values. String values are fields_of type {@link String} and {@link org.apache.flink.types.StringValue}, as well as_all subclasses of the latter._<p>_By default, strings are not quoted.__@param quoteStrings Flag indicating whether string fields should be quoted.;public void setQuoteStrings(boolean quoteStrings) {_		this.quoteStrings = quoteStrings__	};configures,whether,the,output,format,should,quote,string,values,string,values,are,fields,of,type,link,string,and,link,org,apache,flink,types,string,value,as,well,as,all,subclasses,of,the,latter,p,by,default,strings,are,not,quoted,param,quote,strings,flag,indicating,whether,string,fields,should,be,quoted;public,void,set,quote,strings,boolean,quote,strings,this,quote,strings,quote,strings
ScalaCsvOutputFormat -> public void setQuoteStrings(boolean quoteStrings);1412605211;Configures whether the output format should quote string values. String values are fields_of type {@link String} and {@link org.apache.flink.types.StringValue}, as well as_all subclasses of the latter._<p>_By default, strings are not quoted.__@param quoteStrings Flag indicating whether string fields should be quoted.;public void setQuoteStrings(boolean quoteStrings) {_		this.quoteStrings = quoteStrings__	};configures,whether,the,output,format,should,quote,string,values,string,values,are,fields,of,type,link,string,and,link,org,apache,flink,types,string,value,as,well,as,all,subclasses,of,the,latter,p,by,default,strings,are,not,quoted,param,quote,strings,flag,indicating,whether,string,fields,should,be,quoted;public,void,set,quote,strings,boolean,quote,strings,this,quote,strings,quote,strings
ScalaCsvOutputFormat -> public void setQuoteStrings(boolean quoteStrings);1423570503;Configures whether the output format should quote string values. String values are fields_of type {@link String} and {@link org.apache.flink.types.StringValue}, as well as_all subclasses of the latter._<p>_By default, strings are not quoted.__@param quoteStrings Flag indicating whether string fields should be quoted.;public void setQuoteStrings(boolean quoteStrings) {_		this.quoteStrings = quoteStrings__	};configures,whether,the,output,format,should,quote,string,values,string,values,are,fields,of,type,link,string,and,link,org,apache,flink,types,string,value,as,well,as,all,subclasses,of,the,latter,p,by,default,strings,are,not,quoted,param,quote,strings,flag,indicating,whether,string,fields,should,be,quoted;public,void,set,quote,strings,boolean,quote,strings,this,quote,strings,quote,strings
ScalaCsvOutputFormat -> public void setQuoteStrings(boolean quoteStrings);1443435747;Configures whether the output format should quote string values. String values are fields_of type {@link String} and {@link org.apache.flink.types.StringValue}, as well as_all subclasses of the latter._<p>_By default, strings are not quoted.__@param quoteStrings Flag indicating whether string fields should be quoted.;public void setQuoteStrings(boolean quoteStrings) {_		this.quoteStrings = quoteStrings__	};configures,whether,the,output,format,should,quote,string,values,string,values,are,fields,of,type,link,string,and,link,org,apache,flink,types,string,value,as,well,as,all,subclasses,of,the,latter,p,by,default,strings,are,not,quoted,param,quote,strings,flag,indicating,whether,string,fields,should,be,quoted;public,void,set,quote,strings,boolean,quote,strings,this,quote,strings,quote,strings
ScalaCsvOutputFormat -> public void setQuoteStrings(boolean quoteStrings);1447879320;Configures whether the output format should quote string values. String values are fields_of type {@link String} and {@link org.apache.flink.types.StringValue}, as well as_all subclasses of the latter._<p>_By default, strings are not quoted.__@param quoteStrings Flag indicating whether string fields should be quoted.;public void setQuoteStrings(boolean quoteStrings) {_		this.quoteStrings = quoteStrings__	};configures,whether,the,output,format,should,quote,string,values,string,values,are,fields,of,type,link,string,and,link,org,apache,flink,types,string,value,as,well,as,all,subclasses,of,the,latter,p,by,default,strings,are,not,quoted,param,quote,strings,flag,indicating,whether,string,fields,should,be,quoted;public,void,set,quote,strings,boolean,quote,strings,this,quote,strings,quote,strings
ScalaCsvOutputFormat -> public void setQuoteStrings(boolean quoteStrings);1455477986;Configures whether the output format should quote string values. String values are fields_of type {@link String} and {@link org.apache.flink.types.StringValue}, as well as_all subclasses of the latter._<p>_By default, strings are not quoted.__@param quoteStrings Flag indicating whether string fields should be quoted.;public void setQuoteStrings(boolean quoteStrings) {_		this.quoteStrings = quoteStrings__	};configures,whether,the,output,format,should,quote,string,values,string,values,are,fields,of,type,link,string,and,link,org,apache,flink,types,string,value,as,well,as,all,subclasses,of,the,latter,p,by,default,strings,are,not,quoted,param,quote,strings,flag,indicating,whether,string,fields,should,be,quoted;public,void,set,quote,strings,boolean,quote,strings,this,quote,strings,quote,strings
ScalaCsvOutputFormat -> public void setQuoteStrings(boolean quoteStrings);1496260727;Configures whether the output format should quote string values. String values are fields_of type {@link String} and {@link org.apache.flink.types.StringValue}, as well as_all subclasses of the latter.__<p>By default, strings are not quoted.__@param quoteStrings Flag indicating whether string fields should be quoted.;public void setQuoteStrings(boolean quoteStrings) {_		this.quoteStrings = quoteStrings__	};configures,whether,the,output,format,should,quote,string,values,string,values,are,fields,of,type,link,string,and,link,org,apache,flink,types,string,value,as,well,as,all,subclasses,of,the,latter,p,by,default,strings,are,not,quoted,param,quote,strings,flag,indicating,whether,string,fields,should,be,quoted;public,void,set,quote,strings,boolean,quote,strings,this,quote,strings,quote,strings
ScalaCsvOutputFormat -> public void setCharsetName(String charsetName);1411372797;Sets the charset with which the CSV strings are written to the file._If not specified, the output format uses the systems default character encoding.__@param charsetName The name of charset to use for encoding the output.;public void setCharsetName(String charsetName) {_		this.charsetName = charsetName__	};sets,the,charset,with,which,the,csv,strings,are,written,to,the,file,if,not,specified,the,output,format,uses,the,systems,default,character,encoding,param,charset,name,the,name,of,charset,to,use,for,encoding,the,output;public,void,set,charset,name,string,charset,name,this,charset,name,charset,name
ScalaCsvOutputFormat -> public void setCharsetName(String charsetName);1411399886;Sets the charset with which the CSV strings are written to the file._If not specified, the output format uses the systems default character encoding.__@param charsetName The name of charset to use for encoding the output.;public void setCharsetName(String charsetName) {_		this.charsetName = charsetName__	};sets,the,charset,with,which,the,csv,strings,are,written,to,the,file,if,not,specified,the,output,format,uses,the,systems,default,character,encoding,param,charset,name,the,name,of,charset,to,use,for,encoding,the,output;public,void,set,charset,name,string,charset,name,this,charset,name,charset,name
ScalaCsvOutputFormat -> public void setCharsetName(String charsetName);1411473593;Sets the charset with which the CSV strings are written to the file._If not specified, the output format uses the systems default character encoding.__@param charsetName The name of charset to use for encoding the output.;public void setCharsetName(String charsetName) {_		this.charsetName = charsetName__	};sets,the,charset,with,which,the,csv,strings,are,written,to,the,file,if,not,specified,the,output,format,uses,the,systems,default,character,encoding,param,charset,name,the,name,of,charset,to,use,for,encoding,the,output;public,void,set,charset,name,string,charset,name,this,charset,name,charset,name
ScalaCsvOutputFormat -> public void setCharsetName(String charsetName);1412605211;Sets the charset with which the CSV strings are written to the file._If not specified, the output format uses the systems default character encoding.__@param charsetName The name of charset to use for encoding the output.;public void setCharsetName(String charsetName) {_		this.charsetName = charsetName__	};sets,the,charset,with,which,the,csv,strings,are,written,to,the,file,if,not,specified,the,output,format,uses,the,systems,default,character,encoding,param,charset,name,the,name,of,charset,to,use,for,encoding,the,output;public,void,set,charset,name,string,charset,name,this,charset,name,charset,name
ScalaCsvOutputFormat -> public void setCharsetName(String charsetName);1423570503;Sets the charset with which the CSV strings are written to the file._If not specified, the output format uses the systems default character encoding.__@param charsetName The name of charset to use for encoding the output.;public void setCharsetName(String charsetName) {_		this.charsetName = charsetName__	};sets,the,charset,with,which,the,csv,strings,are,written,to,the,file,if,not,specified,the,output,format,uses,the,systems,default,character,encoding,param,charset,name,the,name,of,charset,to,use,for,encoding,the,output;public,void,set,charset,name,string,charset,name,this,charset,name,charset,name
ScalaCsvOutputFormat -> public void setCharsetName(String charsetName);1443435747;Sets the charset with which the CSV strings are written to the file._If not specified, the output format uses the systems default character encoding.__@param charsetName The name of charset to use for encoding the output.;public void setCharsetName(String charsetName) {_		this.charsetName = charsetName__	};sets,the,charset,with,which,the,csv,strings,are,written,to,the,file,if,not,specified,the,output,format,uses,the,systems,default,character,encoding,param,charset,name,the,name,of,charset,to,use,for,encoding,the,output;public,void,set,charset,name,string,charset,name,this,charset,name,charset,name
ScalaCsvOutputFormat -> public void setCharsetName(String charsetName);1447879320;Sets the charset with which the CSV strings are written to the file._If not specified, the output format uses the systems default character encoding.__@param charsetName The name of charset to use for encoding the output.;public void setCharsetName(String charsetName) {_		this.charsetName = charsetName__	};sets,the,charset,with,which,the,csv,strings,are,written,to,the,file,if,not,specified,the,output,format,uses,the,systems,default,character,encoding,param,charset,name,the,name,of,charset,to,use,for,encoding,the,output;public,void,set,charset,name,string,charset,name,this,charset,name,charset,name
ScalaCsvOutputFormat -> public void setCharsetName(String charsetName);1455477986;Sets the charset with which the CSV strings are written to the file._If not specified, the output format uses the systems default character encoding.__@param charsetName The name of charset to use for encoding the output.;public void setCharsetName(String charsetName) {_		this.charsetName = charsetName__	};sets,the,charset,with,which,the,csv,strings,are,written,to,the,file,if,not,specified,the,output,format,uses,the,systems,default,character,encoding,param,charset,name,the,name,of,charset,to,use,for,encoding,the,output;public,void,set,charset,name,string,charset,name,this,charset,name,charset,name
ScalaCsvOutputFormat -> public void setCharsetName(String charsetName);1496260727;Sets the charset with which the CSV strings are written to the file._If not specified, the output format uses the systems default character encoding.__@param charsetName The name of charset to use for encoding the output.;public void setCharsetName(String charsetName) {_		this.charsetName = charsetName__	};sets,the,charset,with,which,the,csv,strings,are,written,to,the,file,if,not,specified,the,output,format,uses,the,systems,default,character,encoding,param,charset,name,the,name,of,charset,to,use,for,encoding,the,output;public,void,set,charset,name,string,charset,name,this,charset,name,charset,name
ScalaCsvOutputFormat -> @Override 	public void setInputType(TypeInformation<?> type, ExecutionConfig executionConfig);1423570503;The purpose of this method is solely to check whether the data type to be processed_is in fact a tuple type.;@Override_	public void setInputType(TypeInformation<?> type, ExecutionConfig executionConfig) {_		if (!type.isTupleType()) {_			throw new InvalidProgramException("The " + ScalaCsvOutputFormat.class.getSimpleName() +_				" can only be used to write tuple data sets.")__		}_	};the,purpose,of,this,method,is,solely,to,check,whether,the,data,type,to,be,processed,is,in,fact,a,tuple,type;override,public,void,set,input,type,type,information,type,execution,config,execution,config,if,type,is,tuple,type,throw,new,invalid,program,exception,the,scala,csv,output,format,class,get,simple,name,can,only,be,used,to,write,tuple,data,sets
ScalaCsvOutputFormat -> @Override 	public void setInputType(TypeInformation<?> type, ExecutionConfig executionConfig);1443435747;The purpose of this method is solely to check whether the data type to be processed_is in fact a tuple type.;@Override_	public void setInputType(TypeInformation<?> type, ExecutionConfig executionConfig) {_		if (!type.isTupleType()) {_			throw new InvalidProgramException("The " + ScalaCsvOutputFormat.class.getSimpleName() +_				" can only be used to write tuple data sets.")__		}_	};the,purpose,of,this,method,is,solely,to,check,whether,the,data,type,to,be,processed,is,in,fact,a,tuple,type;override,public,void,set,input,type,type,information,type,execution,config,execution,config,if,type,is,tuple,type,throw,new,invalid,program,exception,the,scala,csv,output,format,class,get,simple,name,can,only,be,used,to,write,tuple,data,sets
ScalaCsvOutputFormat -> @Override 	public void setInputType(TypeInformation<?> type, ExecutionConfig executionConfig);1447879320;The purpose of this method is solely to check whether the data type to be processed_is in fact a tuple type.;@Override_	public void setInputType(TypeInformation<?> type, ExecutionConfig executionConfig) {_		if (!type.isTupleType()) {_			throw new InvalidProgramException("The " + ScalaCsvOutputFormat.class.getSimpleName() +_				" can only be used to write tuple data sets.")__		}_	};the,purpose,of,this,method,is,solely,to,check,whether,the,data,type,to,be,processed,is,in,fact,a,tuple,type;override,public,void,set,input,type,type,information,type,execution,config,execution,config,if,type,is,tuple,type,throw,new,invalid,program,exception,the,scala,csv,output,format,class,get,simple,name,can,only,be,used,to,write,tuple,data,sets
ScalaCsvOutputFormat -> @Override 	public void setInputType(TypeInformation<?> type, ExecutionConfig executionConfig);1455477986;The purpose of this method is solely to check whether the data type to be processed_is in fact a tuple type.;@Override_	public void setInputType(TypeInformation<?> type, ExecutionConfig executionConfig) {_		if (!type.isTupleType()) {_			throw new InvalidProgramException("The " + ScalaCsvOutputFormat.class.getSimpleName() +_				" can only be used to write tuple data sets.")__		}_	};the,purpose,of,this,method,is,solely,to,check,whether,the,data,type,to,be,processed,is,in,fact,a,tuple,type;override,public,void,set,input,type,type,information,type,execution,config,execution,config,if,type,is,tuple,type,throw,new,invalid,program,exception,the,scala,csv,output,format,class,get,simple,name,can,only,be,used,to,write,tuple,data,sets
ScalaCsvOutputFormat -> @Override 	public void setInputType(TypeInformation<?> type, ExecutionConfig executionConfig);1496260727;The purpose of this method is solely to check whether the data type to be processed_is in fact a tuple type.;@Override_	public void setInputType(TypeInformation<?> type, ExecutionConfig executionConfig) {_		if (!type.isTupleType()) {_			throw new InvalidProgramException("The " + ScalaCsvOutputFormat.class.getSimpleName() +_				" can only be used to write tuple data sets.")__		}_	};the,purpose,of,this,method,is,solely,to,check,whether,the,data,type,to,be,processed,is,in,fact,a,tuple,type;override,public,void,set,input,type,type,information,type,execution,config,execution,config,if,type,is,tuple,type,throw,new,invalid,program,exception,the,scala,csv,output,format,class,get,simple,name,can,only,be,used,to,write,tuple,data,sets
