# id;timestamp;commentText;codeText;commentWords;codeWords
GridGraph -> Dimension -> public Dimension(String field);1490973365;Configuration string to be parsed. The size integer and endpoint_wrapping boolean must be separated by a colon.__@param field configuration string;public Dimension(String field) {_			ProgramParametrizationException exception = new ProgramParametrizationException("Grid dimension must use " +_				"a colon to separate the integer size and boolean indicating whether the dimension endpoints are " +_				"connected: '" + field + "'")___			if (! field.contains(":")) {_				throw exception__			}__			String[] parts = field.split(":")___			if (parts.length != 2) {_				throw exception__			}__			try {_				size = Long.parseLong(parts[0])__				wrapEndpoints = Boolean.parseBoolean(parts[1])__			} catch(NumberFormatException ex) {_				throw exception__			}_		};configuration,string,to,be,parsed,the,size,integer,and,endpoint,wrapping,boolean,must,be,separated,by,a,colon,param,field,configuration,string;public,dimension,string,field,program,parametrization,exception,exception,new,program,parametrization,exception,grid,dimension,must,use,a,colon,to,separate,the,integer,size,and,boolean,indicating,whether,the,dimension,endpoints,are,connected,field,if,field,contains,throw,exception,string,parts,field,split,if,parts,length,2,throw,exception,try,size,long,parse,long,parts,0,wrap,endpoints,boolean,parse,boolean,parts,1,catch,number,format,exception,ex,throw,exception
GridGraph -> Dimension -> public Dimension(String field);1493649310;Configuration string to be parsed. The size integer and endpoint_wrapping boolean must be separated by a colon.__@param field configuration string;public Dimension(String field) {_			ProgramParametrizationException exception = new ProgramParametrizationException("Grid dimension must use " +_				"a colon to separate the integer size and boolean indicating whether the dimension endpoints are " +_				"connected: '" + field + "'")___			if (! field.contains(":")) {_				throw exception__			}__			String[] parts = field.split(":")___			if (parts.length != 2) {_				throw exception__			}__			try {_				size = Long.parseLong(parts[0])__				wrapEndpoints = Boolean.parseBoolean(parts[1])__			} catch(NumberFormatException ex) {_				throw exception__			}_		};configuration,string,to,be,parsed,the,size,integer,and,endpoint,wrapping,boolean,must,be,separated,by,a,colon,param,field,configuration,string;public,dimension,string,field,program,parametrization,exception,exception,new,program,parametrization,exception,grid,dimension,must,use,a,colon,to,separate,the,integer,size,and,boolean,indicating,whether,the,dimension,endpoints,are,connected,field,if,field,contains,throw,exception,string,parts,field,split,if,parts,length,2,throw,exception,try,size,long,parse,long,parts,0,wrap,endpoints,boolean,parse,boolean,parts,1,catch,number,format,exception,ex,throw,exception
GridGraph -> Dimension -> public Dimension(String field);1494520945;Configuration string to be parsed. The size integer and endpoint_wrapping boolean must be separated by a colon.__@param field configuration string;public Dimension(String field) {_			ProgramParametrizationException exception = new ProgramParametrizationException("Grid dimension must use " +_				"a colon to separate the integer size and boolean indicating whether the dimension endpoints are " +_				"connected: '" + field + "'")___			if (! field.contains(":")) {_				throw exception__			}__			String[] parts = field.split(":")___			if (parts.length != 2) {_				throw exception__			}__			try {_				size = Long.parseLong(parts[0])__				wrapEndpoints = Boolean.parseBoolean(parts[1])__			} catch(NumberFormatException ex) {_				throw exception__			}_		};configuration,string,to,be,parsed,the,size,integer,and,endpoint,wrapping,boolean,must,be,separated,by,a,colon,param,field,configuration,string;public,dimension,string,field,program,parametrization,exception,exception,new,program,parametrization,exception,grid,dimension,must,use,a,colon,to,separate,the,integer,size,and,boolean,indicating,whether,the,dimension,endpoints,are,connected,field,if,field,contains,throw,exception,string,parts,field,split,if,parts,length,2,throw,exception,try,size,long,parse,long,parts,0,wrap,endpoints,boolean,parse,boolean,parts,1,catch,number,format,exception,ex,throw,exception
GridGraph -> Dimension -> public Dimension(String field);1495819075;Configuration string to be parsed. The size integer and endpoint_wrapping boolean must be separated by a colon.__@param field configuration string;public Dimension(String field) {_			ProgramParametrizationException exception = new ProgramParametrizationException("Grid dimension must use " +_				"a colon to separate the integer size and boolean indicating whether the dimension endpoints are " +_				"connected: '" + field + "'")___			if (!field.contains(":")) {_				throw exception__			}__			String[] parts = field.split(":")___			if (parts.length != 2) {_				throw exception__			}__			try {_				size = Long.parseLong(parts[0])__				wrapEndpoints = Boolean.parseBoolean(parts[1])__			} catch (NumberFormatException ex) {_				throw exception__			}_		};configuration,string,to,be,parsed,the,size,integer,and,endpoint,wrapping,boolean,must,be,separated,by,a,colon,param,field,configuration,string;public,dimension,string,field,program,parametrization,exception,exception,new,program,parametrization,exception,grid,dimension,must,use,a,colon,to,separate,the,integer,size,and,boolean,indicating,whether,the,dimension,endpoints,are,connected,field,if,field,contains,throw,exception,string,parts,field,split,if,parts,length,2,throw,exception,try,size,long,parse,long,parts,0,wrap,endpoints,boolean,parse,boolean,parts,1,catch,number,format,exception,ex,throw,exception
GridGraph -> Dimension -> public Dimension(String field);1498733142;Configuration string to be parsed. The size integer and endpoint_wrapping boolean must be separated by a colon.__@param field configuration string;public Dimension(String field) {_			ProgramParametrizationException exception = new ProgramParametrizationException("Grid dimension must use " +_				"a colon to separate the integer size and boolean indicating whether the dimension endpoints are " +_				"connected: '" + field + "'")___			if (!field.contains(":")) {_				throw exception__			}__			String[] parts = field.split(":")___			if (parts.length != 2) {_				throw exception__			}__			try {_				size = Long.parseLong(parts[0])__				wrapEndpoints = Boolean.parseBoolean(parts[1])__			} catch (NumberFormatException ex) {_				throw exception__			}_		};configuration,string,to,be,parsed,the,size,integer,and,endpoint,wrapping,boolean,must,be,separated,by,a,colon,param,field,configuration,string;public,dimension,string,field,program,parametrization,exception,exception,new,program,parametrization,exception,grid,dimension,must,use,a,colon,to,separate,the,integer,size,and,boolean,indicating,whether,the,dimension,endpoints,are,connected,field,if,field,contains,throw,exception,string,parts,field,split,if,parts,length,2,throw,exception,try,size,long,parse,long,parts,0,wrap,endpoints,boolean,parse,boolean,parts,1,catch,number,format,exception,ex,throw,exception
GridGraph -> Dimension -> public Dimension(String field);1499777483;Configuration string to be parsed. The size integer and endpoint_wrapping boolean must be separated by a colon.__@param field configuration string;public Dimension(String field) {_			ProgramParametrizationException exception = new ProgramParametrizationException("Grid dimension must use " +_				"a colon to separate the integer size and boolean indicating whether the dimension endpoints are " +_				"connected: '" + field + "'")___			if (!field.contains(":")) {_				throw exception__			}__			String[] parts = field.split(":")___			if (parts.length != 2) {_				throw exception__			}__			try {_				size = Long.parseLong(parts[0])__				wrapEndpoints = Boolean.parseBoolean(parts[1])__			} catch (NumberFormatException ex) {_				throw exception__			}_		};configuration,string,to,be,parsed,the,size,integer,and,endpoint,wrapping,boolean,must,be,separated,by,a,colon,param,field,configuration,string;public,dimension,string,field,program,parametrization,exception,exception,new,program,parametrization,exception,grid,dimension,must,use,a,colon,to,separate,the,integer,size,and,boolean,indicating,whether,the,dimension,endpoints,are,connected,field,if,field,contains,throw,exception,string,parts,field,split,if,parts,length,2,throw,exception,try,size,long,parse,long,parts,0,wrap,endpoints,boolean,parse,boolean,parts,1,catch,number,format,exception,ex,throw,exception
GridGraph -> Dimension -> public Dimension(String field);1501079480;Configuration string to be parsed. The size integer and endpoint_wrapping boolean must be separated by a colon.__@param field configuration string;public Dimension(String field) {_			ProgramParametrizationException exception = new ProgramParametrizationException("Grid dimension must use " +_				"a colon to separate the integer size and boolean indicating whether the dimension endpoints are " +_				"connected: '" + field + "'")___			if (!field.contains(":")) {_				throw exception__			}__			String[] parts = field.split(":")___			if (parts.length != 2) {_				throw exception__			}__			try {_				size = Long.parseLong(parts[0])__				wrapEndpoints = Boolean.parseBoolean(parts[1])__			} catch (NumberFormatException ex) {_				throw exception__			}_		};configuration,string,to,be,parsed,the,size,integer,and,endpoint,wrapping,boolean,must,be,separated,by,a,colon,param,field,configuration,string;public,dimension,string,field,program,parametrization,exception,exception,new,program,parametrization,exception,grid,dimension,must,use,a,colon,to,separate,the,integer,size,and,boolean,indicating,whether,the,dimension,endpoints,are,connected,field,if,field,contains,throw,exception,string,parts,field,split,if,parts,length,2,throw,exception,try,size,long,parse,long,parts,0,wrap,endpoints,boolean,parse,boolean,parts,1,catch,number,format,exception,ex,throw,exception
GridGraph -> Dimension -> public Dimension(String field);1505445925;Configuration string to be parsed. The size integer and endpoint_wrapping boolean must be separated by a colon.__@param field configuration string;public Dimension(String field) {_			ProgramParametrizationException exception = new ProgramParametrizationException("Grid dimension must use " +_				"a colon to separate the integer size and boolean indicating whether the dimension endpoints are " +_				"connected: '" + field + "'")___			if (!field.contains(":")) {_				throw exception__			}__			String[] parts = field.split(":")___			if (parts.length != 2) {_				throw exception__			}__			try {_				size = Long.parseLong(parts[0])__				wrapEndpoints = Boolean.parseBoolean(parts[1])__			} catch (NumberFormatException ex) {_				throw exception__			}_		};configuration,string,to,be,parsed,the,size,integer,and,endpoint,wrapping,boolean,must,be,separated,by,a,colon,param,field,configuration,string;public,dimension,string,field,program,parametrization,exception,exception,new,program,parametrization,exception,grid,dimension,must,use,a,colon,to,separate,the,integer,size,and,boolean,indicating,whether,the,dimension,endpoints,are,connected,field,if,field,contains,throw,exception,string,parts,field,split,if,parts,length,2,throw,exception,try,size,long,parse,long,parts,0,wrap,endpoints,boolean,parse,boolean,parts,1,catch,number,format,exception,ex,throw,exception
