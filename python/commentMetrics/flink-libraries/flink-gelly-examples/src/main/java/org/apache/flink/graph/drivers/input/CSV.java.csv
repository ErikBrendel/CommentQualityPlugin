# id;timestamp;commentText;codeText;commentWords;codeWords
CSV -> public Graph<K, NullValue, NullValue> create(ExecutionEnvironment env) throws Exception;1490623739;Generate the graph as configured.__@param env execution environment_@return input graph;public Graph<K, NullValue, NullValue> create(ExecutionEnvironment env) throws Exception {_		GraphCsvReader reader = Graph.fromCsvReader(inputFilename.getValue(), env)_			.ignoreCommentsEdges(commentPrefix.getValue())_			.lineDelimiterEdges(lineDelimiter.getValue())_			.fieldDelimiterEdges(fieldDelimiter.getValue())___		Graph<K, NullValue, NullValue> graph___		switch (type.getValue()) {_			case INTEGER:_				graph = (Graph<K, NullValue, NullValue>) reader_					.keyType(IntValue.class)__				break___			case LONG:_				graph = (Graph<K, NullValue, NullValue>) reader_					.keyType(LongValue.class)__				break___			case STRING:_				graph = (Graph<K, NullValue, NullValue>) reader_					.keyType(StringValue.class)__				break___			default:_				throw new ProgramParametrizationException("Unknown type '" + type.getValue() + "'")__		}__		return simplify.simplify(graph)__	};generate,the,graph,as,configured,param,env,execution,environment,return,input,graph;public,graph,k,null,value,null,value,create,execution,environment,env,throws,exception,graph,csv,reader,reader,graph,from,csv,reader,input,filename,get,value,env,ignore,comments,edges,comment,prefix,get,value,line,delimiter,edges,line,delimiter,get,value,field,delimiter,edges,field,delimiter,get,value,graph,k,null,value,null,value,graph,switch,type,get,value,case,integer,graph,graph,k,null,value,null,value,reader,key,type,int,value,class,break,case,long,graph,graph,k,null,value,null,value,reader,key,type,long,value,class,break,case,string,graph,graph,k,null,value,null,value,reader,key,type,string,value,class,break,default,throw,new,program,parametrization,exception,unknown,type,type,get,value,return,simplify,simplify,graph
CSV -> public Graph<K, NullValue, NullValue> create(ExecutionEnvironment env) throws Exception;1495653033;Generate the graph as configured.__@param env execution environment_@return input graph;public Graph<K, NullValue, NullValue> create(ExecutionEnvironment env) throws Exception {_		GraphCsvReader reader = Graph.fromCsvReader(inputFilename.getValue(), env)_			.ignoreCommentsEdges(commentPrefix.getValue())_			.lineDelimiterEdges(lineDelimiter.getValue())_			.fieldDelimiterEdges(fieldDelimiter.getValue())___		Graph<K, NullValue, NullValue> graph___		switch (type.getValue()) {_			case INTEGER:_				graph = (Graph<K, NullValue, NullValue>) reader_					.keyType(IntValue.class)__				break___			case LONG:_				graph = (Graph<K, NullValue, NullValue>) reader_					.keyType(LongValue.class)__				break___			case STRING:_				graph = (Graph<K, NullValue, NullValue>) reader_					.keyType(StringValue.class)__				break___			default:_				throw new ProgramParametrizationException("Unknown type '" + type.getValue() + "'")__		}__		return simplify.simplify(graph)__	};generate,the,graph,as,configured,param,env,execution,environment,return,input,graph;public,graph,k,null,value,null,value,create,execution,environment,env,throws,exception,graph,csv,reader,reader,graph,from,csv,reader,input,filename,get,value,env,ignore,comments,edges,comment,prefix,get,value,line,delimiter,edges,line,delimiter,get,value,field,delimiter,edges,field,delimiter,get,value,graph,k,null,value,null,value,graph,switch,type,get,value,case,integer,graph,graph,k,null,value,null,value,reader,key,type,int,value,class,break,case,long,graph,graph,k,null,value,null,value,reader,key,type,long,value,class,break,case,string,graph,graph,k,null,value,null,value,reader,key,type,string,value,class,break,default,throw,new,program,parametrization,exception,unknown,type,type,get,value,return,simplify,simplify,graph
CSV -> public Graph<K, NullValue, NullValue> create(ExecutionEnvironment env) throws Exception;1498231743;Generate the graph as configured.__@param env execution environment_@return input graph;public Graph<K, NullValue, NullValue> create(ExecutionEnvironment env) throws Exception {_		GraphCsvReader reader = Graph.fromCsvReader(inputFilename.getValue(), env)_			.ignoreCommentsEdges(commentPrefix.getValue())_			.lineDelimiterEdges(lineDelimiter.getValue())_			.fieldDelimiterEdges(fieldDelimiter.getValue())___		Graph<K, NullValue, NullValue> graph___		switch (type.getValue()) {_			case INTEGER:_				graph = (Graph<K, NullValue, NullValue>) reader_					.keyType(IntValue.class)__				break___			case LONG:_				graph = (Graph<K, NullValue, NullValue>) reader_					.keyType(LongValue.class)__				break___			case STRING:_				graph = (Graph<K, NullValue, NullValue>) reader_					.keyType(StringValue.class)__				break___			default:_				throw new ProgramParametrizationException("Unknown type '" + type.getValue() + "'")__		}__		return simplify.simplify(graph)__	};generate,the,graph,as,configured,param,env,execution,environment,return,input,graph;public,graph,k,null,value,null,value,create,execution,environment,env,throws,exception,graph,csv,reader,reader,graph,from,csv,reader,input,filename,get,value,env,ignore,comments,edges,comment,prefix,get,value,line,delimiter,edges,line,delimiter,get,value,field,delimiter,edges,field,delimiter,get,value,graph,k,null,value,null,value,graph,switch,type,get,value,case,integer,graph,graph,k,null,value,null,value,reader,key,type,int,value,class,break,case,long,graph,graph,k,null,value,null,value,reader,key,type,long,value,class,break,case,string,graph,graph,k,null,value,null,value,reader,key,type,string,value,class,break,default,throw,new,program,parametrization,exception,unknown,type,type,get,value,return,simplify,simplify,graph
