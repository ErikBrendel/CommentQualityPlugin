# id;timestamp;commentText;codeText;commentWords;codeWords
VertexMetrics -> Result -> public long getNumberOfTriplets();1464172872;Get the number of triplets.__@return number of triplets;public long getNumberOfTriplets() {_			return tripletCount__		};get,the,number,of,triplets,return,number,of,triplets;public,long,get,number,of,triplets,return,triplet,count
VertexMetrics -> Result -> public long getNumberOfTriplets();1467751657;Get the number of triplets.__@return number of triplets;public long getNumberOfTriplets() {_			return tripletCount__		};get,the,number,of,triplets,return,number,of,triplets;public,long,get,number,of,triplets,return,triplet,count
VertexMetrics -> Result -> public long getNumberOfTriplets();1469043894;Get the number of triplets.__@return number of triplets;public long getNumberOfTriplets() {_			return tripletCount__		};get,the,number,of,triplets,return,number,of,triplets;public,long,get,number,of,triplets,return,triplet,count
VertexMetrics -> Result -> public long getNumberOfTriplets();1472052763;Get the number of triplets.__@return number of triplets;public long getNumberOfTriplets() {_			return tripletCount__		};get,the,number,of,triplets,return,number,of,triplets;public,long,get,number,of,triplets,return,triplet,count
VertexMetrics -> Result -> public long getNumberOfTriplets();1477672121;Get the number of triplets.__@return number of triplets;public long getNumberOfTriplets() {_			return tripletCount__		};get,the,number,of,triplets,return,number,of,triplets;public,long,get,number,of,triplets,return,triplet,count
VertexMetrics -> Result -> public long getNumberOfTriplets();1477924473;Get the number of triplets.__@return number of triplets;public long getNumberOfTriplets() {_			return tripletCount__		};get,the,number,of,triplets,return,number,of,triplets;public,long,get,number,of,triplets,return,triplet,count
VertexMetrics -> Result -> public long getNumberOfTriplets();1484763793;Get the number of triplets.__@return number of triplets;public long getNumberOfTriplets() {_			return tripletCount__		};get,the,number,of,triplets,return,number,of,triplets;public,long,get,number,of,triplets,return,triplet,count
VertexMetrics -> Result -> public long getNumberOfTriplets();1488305420;Get the number of triplets.__@return number of triplets;public long getNumberOfTriplets() {_			return tripletCount__		};get,the,number,of,triplets,return,number,of,triplets;public,long,get,number,of,triplets,return,triplet,count
VertexMetrics -> Result -> public long getNumberOfTriplets();1495653033;Get the number of triplets.__@return number of triplets;public long getNumberOfTriplets() {_			return tripletCount__		};get,the,number,of,triplets,return,number,of,triplets;public,long,get,number,of,triplets,return,triplet,count
VertexMetrics -> Result -> public long getNumberOfTriplets();1498486910;Get the number of triplets.__@return number of triplets;public long getNumberOfTriplets() {_			return tripletCount__		};get,the,number,of,triplets,return,number,of,triplets;public,long,get,number,of,triplets,return,triplet,count
VertexMetrics -> Result -> public long getNumberOfTriplets();1501064632;Get the number of triplets.__@return number of triplets;public long getNumberOfTriplets() {_			return tripletCount__		};get,the,number,of,triplets,return,number,of,triplets;public,long,get,number,of,triplets,return,triplet,count
VertexMetrics -> Result -> public long getNumberOfVertices();1464172872;Get the number of vertices.__@return number of vertices;public long getNumberOfVertices() {_			return vertexCount__		};get,the,number,of,vertices,return,number,of,vertices;public,long,get,number,of,vertices,return,vertex,count
VertexMetrics -> Result -> public long getNumberOfVertices();1467751657;Get the number of vertices.__@return number of vertices;public long getNumberOfVertices() {_			return vertexCount__		};get,the,number,of,vertices,return,number,of,vertices;public,long,get,number,of,vertices,return,vertex,count
VertexMetrics -> Result -> public long getNumberOfVertices();1469043894;Get the number of vertices.__@return number of vertices;public long getNumberOfVertices() {_			return vertexCount__		};get,the,number,of,vertices,return,number,of,vertices;public,long,get,number,of,vertices,return,vertex,count
VertexMetrics -> Result -> public long getNumberOfVertices();1472052763;Get the number of vertices.__@return number of vertices;public long getNumberOfVertices() {_			return vertexCount__		};get,the,number,of,vertices,return,number,of,vertices;public,long,get,number,of,vertices,return,vertex,count
VertexMetrics -> Result -> public long getNumberOfVertices();1477672121;Get the number of vertices.__@return number of vertices;public long getNumberOfVertices() {_			return vertexCount__		};get,the,number,of,vertices,return,number,of,vertices;public,long,get,number,of,vertices,return,vertex,count
VertexMetrics -> Result -> public long getNumberOfVertices();1477924473;Get the number of vertices.__@return number of vertices;public long getNumberOfVertices() {_			return vertexCount__		};get,the,number,of,vertices,return,number,of,vertices;public,long,get,number,of,vertices,return,vertex,count
VertexMetrics -> Result -> public long getNumberOfVertices();1484763793;Get the number of vertices.__@return number of vertices;public long getNumberOfVertices() {_			return vertexCount__		};get,the,number,of,vertices,return,number,of,vertices;public,long,get,number,of,vertices,return,vertex,count
VertexMetrics -> Result -> public long getNumberOfVertices();1488305420;Get the number of vertices.__@return number of vertices;public long getNumberOfVertices() {_			return vertexCount__		};get,the,number,of,vertices,return,number,of,vertices;public,long,get,number,of,vertices,return,vertex,count
VertexMetrics -> Result -> public long getNumberOfVertices();1495653033;Get the number of vertices.__@return number of vertices;public long getNumberOfVertices() {_			return vertexCount__		};get,the,number,of,vertices,return,number,of,vertices;public,long,get,number,of,vertices,return,vertex,count
VertexMetrics -> Result -> public long getNumberOfVertices();1498486910;Get the number of vertices.__@return number of vertices;public long getNumberOfVertices() {_			return vertexCount__		};get,the,number,of,vertices,return,number,of,vertices;public,long,get,number,of,vertices,return,vertex,count
VertexMetrics -> Result -> public long getNumberOfVertices();1501064632;Get the number of vertices.__@return number of vertices;public long getNumberOfVertices() {_			return vertexCount__		};get,the,number,of,vertices,return,number,of,vertices;public,long,get,number,of,vertices,return,vertex,count
VertexMetrics -> Result -> public double getDensity();1488305420;Get the density, the ratio of actual to potential edges between vertices.__A result of {@code Float.NaN} is returned for a graph with fewer than_two vertices for which the number of edges is zero.__@return density;public double getDensity() {_			return vertexCount <= 1 ? Double.NaN : getNumberOfEdges() / (double)(vertexCount*(vertexCount-1))__		};get,the,density,the,ratio,of,actual,to,potential,edges,between,vertices,a,result,of,code,float,na,n,is,returned,for,a,graph,with,fewer,than,two,vertices,for,which,the,number,of,edges,is,zero,return,density;public,double,get,density,return,vertex,count,1,double,na,n,get,number,of,edges,double,vertex,count,vertex,count,1
VertexMetrics -> Result -> public double getDensity();1495653033;Get the density, the ratio of actual to potential edges between vertices.__<p>A result of {@code Float.NaN} is returned for a graph with fewer than_two vertices for which the number of edges is zero.__@return density;public double getDensity() {_			return vertexCount <= 1 ? Double.NaN : getNumberOfEdges() / (double) (vertexCount * (vertexCount - 1))__		};get,the,density,the,ratio,of,actual,to,potential,edges,between,vertices,p,a,result,of,code,float,na,n,is,returned,for,a,graph,with,fewer,than,two,vertices,for,which,the,number,of,edges,is,zero,return,density;public,double,get,density,return,vertex,count,1,double,na,n,get,number,of,edges,double,vertex,count,vertex,count,1
VertexMetrics -> Result -> public double getDensity();1498486910;Get the density, the ratio of actual to potential edges between vertices.__<p>A result of {@code Float.NaN} is returned for a graph with fewer than_two vertices for which the number of edges is zero.__@return density;public double getDensity() {_			return vertexCount <= 1 ? Double.NaN : getNumberOfEdges() / (double) (vertexCount * (vertexCount - 1))__		};get,the,density,the,ratio,of,actual,to,potential,edges,between,vertices,p,a,result,of,code,float,na,n,is,returned,for,a,graph,with,fewer,than,two,vertices,for,which,the,number,of,edges,is,zero,return,density;public,double,get,density,return,vertex,count,1,double,na,n,get,number,of,edges,double,vertex,count,vertex,count,1
VertexMetrics -> Result -> public double getDensity();1501064632;Get the density, the ratio of actual to potential edges between vertices.__<p>A result of {@code Float.NaN} is returned for a graph with fewer than_two vertices for which the number of edges is zero.__@return density;public double getDensity() {_			return vertexCount <= 1 ? Double.NaN : getNumberOfEdges() / (double) (vertexCount * (vertexCount - 1))__		};get,the,density,the,ratio,of,actual,to,potential,edges,between,vertices,p,a,result,of,code,float,na,n,is,returned,for,a,graph,with,fewer,than,two,vertices,for,which,the,number,of,edges,is,zero,return,density;public,double,get,density,return,vertex,count,1,double,na,n,get,number,of,edges,double,vertex,count,vertex,count,1
VertexMetrics -> Result -> public double getAverageDegree();1488305420;Get the average degree, the average number of in- plus out-edges per vertex.__A result of {@code Float.NaN} is returned for an empty graph for_which both the number of edges and number of vertices is zero.__@return average degree;public double getAverageDegree() {_			return vertexCount == 0 ? Double.NaN : getNumberOfEdges() / (double)vertexCount__		};get,the,average,degree,the,average,number,of,in,plus,out,edges,per,vertex,a,result,of,code,float,na,n,is,returned,for,an,empty,graph,for,which,both,the,number,of,edges,and,number,of,vertices,is,zero,return,average,degree;public,double,get,average,degree,return,vertex,count,0,double,na,n,get,number,of,edges,double,vertex,count
VertexMetrics -> Result -> public double getAverageDegree();1495653033;Get the average degree, the average number of in- plus out-edges per vertex.__<p>A result of {@code Float.NaN} is returned for an empty graph for_which both the number of edges and number of vertices is zero.__@return average degree;public double getAverageDegree() {_			return vertexCount == 0 ? Double.NaN : getNumberOfEdges() / (double) vertexCount__		};get,the,average,degree,the,average,number,of,in,plus,out,edges,per,vertex,p,a,result,of,code,float,na,n,is,returned,for,an,empty,graph,for,which,both,the,number,of,edges,and,number,of,vertices,is,zero,return,average,degree;public,double,get,average,degree,return,vertex,count,0,double,na,n,get,number,of,edges,double,vertex,count
VertexMetrics -> Result -> public double getAverageDegree();1498486910;Get the average degree, the average number of in- plus out-edges per vertex.__<p>A result of {@code Float.NaN} is returned for an empty graph for_which both the number of edges and number of vertices is zero.__@return average degree;public double getAverageDegree() {_			return vertexCount == 0 ? Double.NaN : getNumberOfEdges() / (double) vertexCount__		};get,the,average,degree,the,average,number,of,in,plus,out,edges,per,vertex,p,a,result,of,code,float,na,n,is,returned,for,an,empty,graph,for,which,both,the,number,of,edges,and,number,of,vertices,is,zero,return,average,degree;public,double,get,average,degree,return,vertex,count,0,double,na,n,get,number,of,edges,double,vertex,count
VertexMetrics -> Result -> public double getAverageDegree();1501064632;Get the average degree, the average number of in- plus out-edges per vertex.__<p>A result of {@code Float.NaN} is returned for an empty graph for_which both the number of edges and number of vertices is zero.__@return average degree;public double getAverageDegree() {_			return vertexCount == 0 ? Double.NaN : getNumberOfEdges() / (double) vertexCount__		};get,the,average,degree,the,average,number,of,in,plus,out,edges,per,vertex,p,a,result,of,code,float,na,n,is,returned,for,an,empty,graph,for,which,both,the,number,of,edges,and,number,of,vertices,is,zero,return,average,degree;public,double,get,average,degree,return,vertex,count,0,double,na,n,get,number,of,edges,double,vertex,count
VertexMetrics -> Result -> public long getMaximumDegree();1469043894;Get the maximum degree.__@return maximum degree;public long getMaximumDegree() {_			return maximumDegree__		};get,the,maximum,degree,return,maximum,degree;public,long,get,maximum,degree,return,maximum,degree
VertexMetrics -> Result -> public long getMaximumDegree();1472052763;Get the maximum degree.__@return maximum degree;public long getMaximumDegree() {_			return maximumDegree__		};get,the,maximum,degree,return,maximum,degree;public,long,get,maximum,degree,return,maximum,degree
VertexMetrics -> Result -> public long getMaximumDegree();1477672121;Get the maximum degree.__@return maximum degree;public long getMaximumDegree() {_			return maximumDegree__		};get,the,maximum,degree,return,maximum,degree;public,long,get,maximum,degree,return,maximum,degree
VertexMetrics -> Result -> public long getMaximumDegree();1477924473;Get the maximum degree.__@return maximum degree;public long getMaximumDegree() {_			return maximumDegree__		};get,the,maximum,degree,return,maximum,degree;public,long,get,maximum,degree,return,maximum,degree
VertexMetrics -> Result -> public long getMaximumDegree();1484763793;Get the maximum degree.__@return maximum degree;public long getMaximumDegree() {_			return maximumDegree__		};get,the,maximum,degree,return,maximum,degree;public,long,get,maximum,degree,return,maximum,degree
VertexMetrics -> Result -> public long getMaximumDegree();1488305420;Get the maximum degree.__@return maximum degree;public long getMaximumDegree() {_			return maximumDegree__		};get,the,maximum,degree,return,maximum,degree;public,long,get,maximum,degree,return,maximum,degree
VertexMetrics -> Result -> public long getMaximumDegree();1495653033;Get the maximum degree.__@return maximum degree;public long getMaximumDegree() {_			return maximumDegree__		};get,the,maximum,degree,return,maximum,degree;public,long,get,maximum,degree,return,maximum,degree
VertexMetrics -> Result -> public long getMaximumDegree();1498486910;Get the maximum degree.__@return maximum degree;public long getMaximumDegree() {_			return maximumDegree__		};get,the,maximum,degree,return,maximum,degree;public,long,get,maximum,degree,return,maximum,degree
VertexMetrics -> Result -> public long getMaximumDegree();1501064632;Get the maximum degree.__@return maximum degree;public long getMaximumDegree() {_			return maximumDegree__		};get,the,maximum,degree,return,maximum,degree;public,long,get,maximum,degree,return,maximum,degree
VertexMetrics -> Result -> public long getMaximumOutDegree();1469043894;Get the maximum out degree.__@return maximum out degree;public long getMaximumOutDegree() {_			return maximumOutDegree__		};get,the,maximum,out,degree,return,maximum,out,degree;public,long,get,maximum,out,degree,return,maximum,out,degree
VertexMetrics -> Result -> public long getMaximumOutDegree();1472052763;Get the maximum out degree.__@return maximum out degree;public long getMaximumOutDegree() {_			return maximumOutDegree__		};get,the,maximum,out,degree,return,maximum,out,degree;public,long,get,maximum,out,degree,return,maximum,out,degree
VertexMetrics -> Result -> public long getMaximumOutDegree();1477672121;Get the maximum out degree.__@return maximum out degree;public long getMaximumOutDegree() {_			return maximumOutDegree__		};get,the,maximum,out,degree,return,maximum,out,degree;public,long,get,maximum,out,degree,return,maximum,out,degree
VertexMetrics -> Result -> public long getMaximumOutDegree();1477924473;Get the maximum out degree.__@return maximum out degree;public long getMaximumOutDegree() {_			return maximumOutDegree__		};get,the,maximum,out,degree,return,maximum,out,degree;public,long,get,maximum,out,degree,return,maximum,out,degree
VertexMetrics -> Result -> public long getMaximumOutDegree();1484763793;Get the maximum out degree.__@return maximum out degree;public long getMaximumOutDegree() {_			return maximumOutDegree__		};get,the,maximum,out,degree,return,maximum,out,degree;public,long,get,maximum,out,degree,return,maximum,out,degree
VertexMetrics -> Result -> public long getMaximumOutDegree();1488305420;Get the maximum out degree.__@return maximum out degree;public long getMaximumOutDegree() {_			return maximumOutDegree__		};get,the,maximum,out,degree,return,maximum,out,degree;public,long,get,maximum,out,degree,return,maximum,out,degree
VertexMetrics -> Result -> public long getMaximumOutDegree();1495653033;Get the maximum out degree.__@return maximum out degree;public long getMaximumOutDegree() {_			return maximumOutDegree__		};get,the,maximum,out,degree,return,maximum,out,degree;public,long,get,maximum,out,degree,return,maximum,out,degree
VertexMetrics -> Result -> public long getMaximumOutDegree();1498486910;Get the maximum out degree.__@return maximum out degree;public long getMaximumOutDegree() {_			return maximumOutDegree__		};get,the,maximum,out,degree,return,maximum,out,degree;public,long,get,maximum,out,degree,return,maximum,out,degree
VertexMetrics -> Result -> public long getMaximumOutDegree();1501064632;Get the maximum out degree.__@return maximum out degree;public long getMaximumOutDegree() {_			return maximumOutDegree__		};get,the,maximum,out,degree,return,maximum,out,degree;public,long,get,maximum,out,degree,return,maximum,out,degree
VertexMetrics -> Result -> public long getNumberOfEdges();1464172872;Get the number of edges.__@return number of edges;public long getNumberOfEdges() {_			return edgeCount__		};get,the,number,of,edges,return,number,of,edges;public,long,get,number,of,edges,return,edge,count
VertexMetrics -> Result -> public long getNumberOfEdges();1467751657;Get the number of edges.__@return number of edges;public long getNumberOfEdges() {_			return edgeCount__		};get,the,number,of,edges,return,number,of,edges;public,long,get,number,of,edges,return,edge,count
VertexMetrics -> Result -> public long getNumberOfEdges();1469043894;Get the number of edges.__@return number of edges;public long getNumberOfEdges() {_			return edgeCount__		};get,the,number,of,edges,return,number,of,edges;public,long,get,number,of,edges,return,edge,count
VertexMetrics -> Result -> public long getNumberOfEdges();1472052763;Get the number of edges.__@return number of edges;public long getNumberOfEdges() {_			return edgeCount__		};get,the,number,of,edges,return,number,of,edges;public,long,get,number,of,edges,return,edge,count
VertexMetrics -> Result -> public long getNumberOfEdges();1477672121;Get the number of edges.__@return number of edges;public long getNumberOfEdges() {_			return unidirectionalEdgeCount + 2 * bidirectionalEdgeCount__		};get,the,number,of,edges,return,number,of,edges;public,long,get,number,of,edges,return,unidirectional,edge,count,2,bidirectional,edge,count
VertexMetrics -> Result -> public long getNumberOfEdges();1477924473;Get the number of edges.__@return number of edges;public long getNumberOfEdges() {_			return unidirectionalEdgeCount + 2 * bidirectionalEdgeCount__		};get,the,number,of,edges,return,number,of,edges;public,long,get,number,of,edges,return,unidirectional,edge,count,2,bidirectional,edge,count
VertexMetrics -> Result -> public long getNumberOfEdges();1484763793;Get the number of edges.__@return number of edges;public long getNumberOfEdges() {_			return unidirectionalEdgeCount + 2 * bidirectionalEdgeCount__		};get,the,number,of,edges,return,number,of,edges;public,long,get,number,of,edges,return,unidirectional,edge,count,2,bidirectional,edge,count
VertexMetrics -> Result -> public long getNumberOfEdges();1488305420;Get the number of edges.__@return number of edges;public long getNumberOfEdges() {_			return unidirectionalEdgeCount + 2 * bidirectionalEdgeCount__		};get,the,number,of,edges,return,number,of,edges;public,long,get,number,of,edges,return,unidirectional,edge,count,2,bidirectional,edge,count
VertexMetrics -> Result -> public long getNumberOfEdges();1495653033;Get the number of edges.__@return number of edges;public long getNumberOfEdges() {_			return unidirectionalEdgeCount + 2 * bidirectionalEdgeCount__		};get,the,number,of,edges,return,number,of,edges;public,long,get,number,of,edges,return,unidirectional,edge,count,2,bidirectional,edge,count
VertexMetrics -> Result -> public long getNumberOfEdges();1498486910;Get the number of edges.__@return number of edges;public long getNumberOfEdges() {_			return unidirectionalEdgeCount + 2 * bidirectionalEdgeCount__		};get,the,number,of,edges,return,number,of,edges;public,long,get,number,of,edges,return,unidirectional,edge,count,2,bidirectional,edge,count
VertexMetrics -> Result -> public long getNumberOfEdges();1501064632;Get the number of edges.__@return number of edges;public long getNumberOfEdges() {_			return unidirectionalEdgeCount + 2 * bidirectionalEdgeCount__		};get,the,number,of,edges,return,number,of,edges;public,long,get,number,of,edges,return,unidirectional,edge,count,2,bidirectional,edge,count
VertexMetrics -> Result -> public long getMaximumTriplets();1469043894;Get the maximum triplets.__@return maximum triplets;public long getMaximumTriplets() {_			return maximumTriplets__		};get,the,maximum,triplets,return,maximum,triplets;public,long,get,maximum,triplets,return,maximum,triplets
VertexMetrics -> Result -> public long getMaximumTriplets();1472052763;Get the maximum triplets.__@return maximum triplets;public long getMaximumTriplets() {_			return maximumTriplets__		};get,the,maximum,triplets,return,maximum,triplets;public,long,get,maximum,triplets,return,maximum,triplets
VertexMetrics -> Result -> public long getMaximumTriplets();1477672121;Get the maximum triplets.__@return maximum triplets;public long getMaximumTriplets() {_			return maximumTriplets__		};get,the,maximum,triplets,return,maximum,triplets;public,long,get,maximum,triplets,return,maximum,triplets
VertexMetrics -> Result -> public long getMaximumTriplets();1477924473;Get the maximum triplets.__@return maximum triplets;public long getMaximumTriplets() {_			return maximumTriplets__		};get,the,maximum,triplets,return,maximum,triplets;public,long,get,maximum,triplets,return,maximum,triplets
VertexMetrics -> Result -> public long getMaximumTriplets();1484763793;Get the maximum triplets.__@return maximum triplets;public long getMaximumTriplets() {_			return maximumTriplets__		};get,the,maximum,triplets,return,maximum,triplets;public,long,get,maximum,triplets,return,maximum,triplets
VertexMetrics -> Result -> public long getMaximumTriplets();1488305420;Get the maximum triplets.__@return maximum triplets;public long getMaximumTriplets() {_			return maximumTriplets__		};get,the,maximum,triplets,return,maximum,triplets;public,long,get,maximum,triplets,return,maximum,triplets
VertexMetrics -> Result -> public long getMaximumTriplets();1495653033;Get the maximum triplets.__@return maximum triplets;public long getMaximumTriplets() {_			return maximumTriplets__		};get,the,maximum,triplets,return,maximum,triplets;public,long,get,maximum,triplets,return,maximum,triplets
VertexMetrics -> Result -> public long getMaximumTriplets();1498486910;Get the maximum triplets.__@return maximum triplets;public long getMaximumTriplets() {_			return maximumTriplets__		};get,the,maximum,triplets,return,maximum,triplets;public,long,get,maximum,triplets,return,maximum,triplets
VertexMetrics -> Result -> public long getMaximumTriplets();1501064632;Get the maximum triplets.__@return maximum triplets;public long getMaximumTriplets() {_			return maximumTriplets__		};get,the,maximum,triplets,return,maximum,triplets;public,long,get,maximum,triplets,return,maximum,triplets
VertexMetrics -> public VertexMetrics<K, VV, EV> setParallelism(int parallelism);1464172872;Override the operator parallelism.__@param parallelism operator parallelism_@return this;public VertexMetrics<K, VV, EV> setParallelism(int parallelism) {_		this.parallelism = parallelism___		return this__	};override,the,operator,parallelism,param,parallelism,operator,parallelism,return,this;public,vertex,metrics,k,vv,ev,set,parallelism,int,parallelism,this,parallelism,parallelism,return,this
VertexMetrics -> public VertexMetrics<K, VV, EV> setParallelism(int parallelism);1467751657;Override the operator parallelism.__@param parallelism operator parallelism_@return this;public VertexMetrics<K, VV, EV> setParallelism(int parallelism) {_		this.parallelism = parallelism___		return this__	};override,the,operator,parallelism,param,parallelism,operator,parallelism,return,this;public,vertex,metrics,k,vv,ev,set,parallelism,int,parallelism,this,parallelism,parallelism,return,this
VertexMetrics -> public VertexMetrics<K, VV, EV> setParallelism(int parallelism);1469043894;Override the operator parallelism.__@param parallelism operator parallelism_@return this;public VertexMetrics<K, VV, EV> setParallelism(int parallelism) {_		this.parallelism = parallelism___		return this__	};override,the,operator,parallelism,param,parallelism,operator,parallelism,return,this;public,vertex,metrics,k,vv,ev,set,parallelism,int,parallelism,this,parallelism,parallelism,return,this
VertexMetrics -> public VertexMetrics<K, VV, EV> setParallelism(int parallelism);1472052763;Override the operator parallelism.__@param parallelism operator parallelism_@return this;public VertexMetrics<K, VV, EV> setParallelism(int parallelism) {_		this.parallelism = parallelism___		return this__	};override,the,operator,parallelism,param,parallelism,operator,parallelism,return,this;public,vertex,metrics,k,vv,ev,set,parallelism,int,parallelism,this,parallelism,parallelism,return,this
VertexMetrics -> public VertexMetrics<K, VV, EV> setParallelism(int parallelism);1477672121;Override the operator parallelism.__@param parallelism operator parallelism_@return this;public VertexMetrics<K, VV, EV> setParallelism(int parallelism) {_		this.parallelism = parallelism___		return this__	};override,the,operator,parallelism,param,parallelism,operator,parallelism,return,this;public,vertex,metrics,k,vv,ev,set,parallelism,int,parallelism,this,parallelism,parallelism,return,this
VertexMetrics -> public VertexMetrics<K, VV, EV> setParallelism(int parallelism);1477924473;Override the operator parallelism.__@param parallelism operator parallelism_@return this;public VertexMetrics<K, VV, EV> setParallelism(int parallelism) {_		this.parallelism = parallelism___		return this__	};override,the,operator,parallelism,param,parallelism,operator,parallelism,return,this;public,vertex,metrics,k,vv,ev,set,parallelism,int,parallelism,this,parallelism,parallelism,return,this
VertexMetrics -> public VertexMetrics<K, VV, EV> setParallelism(int parallelism);1484763793;Override the operator parallelism.__@param parallelism operator parallelism_@return this;public VertexMetrics<K, VV, EV> setParallelism(int parallelism) {_		this.parallelism = parallelism___		return this__	};override,the,operator,parallelism,param,parallelism,operator,parallelism,return,this;public,vertex,metrics,k,vv,ev,set,parallelism,int,parallelism,this,parallelism,parallelism,return,this
VertexMetrics -> public VertexMetrics<K, VV, EV> setParallelism(int parallelism);1488305420;Override the operator parallelism.__@param parallelism operator parallelism_@return this;public VertexMetrics<K, VV, EV> setParallelism(int parallelism) {_		this.parallelism = parallelism___		return this__	};override,the,operator,parallelism,param,parallelism,operator,parallelism,return,this;public,vertex,metrics,k,vv,ev,set,parallelism,int,parallelism,this,parallelism,parallelism,return,this
VertexMetrics -> public VertexMetrics<K, VV, EV> setParallelism(int parallelism);1495653033;Override the operator parallelism.__@param parallelism operator parallelism_@return this;public VertexMetrics<K, VV, EV> setParallelism(int parallelism) {_		this.parallelism = parallelism___		return this__	};override,the,operator,parallelism,param,parallelism,operator,parallelism,return,this;public,vertex,metrics,k,vv,ev,set,parallelism,int,parallelism,this,parallelism,parallelism,return,this
VertexMetrics -> Result -> public long getMaximumInDegree();1469043894;Get the maximum in degree.__@return maximum in degree;public long getMaximumInDegree() {_			return maximumInDegree__		};get,the,maximum,in,degree,return,maximum,in,degree;public,long,get,maximum,in,degree,return,maximum,in,degree
VertexMetrics -> Result -> public long getMaximumInDegree();1472052763;Get the maximum in degree.__@return maximum in degree;public long getMaximumInDegree() {_			return maximumInDegree__		};get,the,maximum,in,degree,return,maximum,in,degree;public,long,get,maximum,in,degree,return,maximum,in,degree
VertexMetrics -> Result -> public long getMaximumInDegree();1477672121;Get the maximum in degree.__@return maximum in degree;public long getMaximumInDegree() {_			return maximumInDegree__		};get,the,maximum,in,degree,return,maximum,in,degree;public,long,get,maximum,in,degree,return,maximum,in,degree
VertexMetrics -> Result -> public long getMaximumInDegree();1477924473;Get the maximum in degree.__@return maximum in degree;public long getMaximumInDegree() {_			return maximumInDegree__		};get,the,maximum,in,degree,return,maximum,in,degree;public,long,get,maximum,in,degree,return,maximum,in,degree
VertexMetrics -> Result -> public long getMaximumInDegree();1484763793;Get the maximum in degree.__@return maximum in degree;public long getMaximumInDegree() {_			return maximumInDegree__		};get,the,maximum,in,degree,return,maximum,in,degree;public,long,get,maximum,in,degree,return,maximum,in,degree
VertexMetrics -> Result -> public long getMaximumInDegree();1488305420;Get the maximum in degree.__@return maximum in degree;public long getMaximumInDegree() {_			return maximumInDegree__		};get,the,maximum,in,degree,return,maximum,in,degree;public,long,get,maximum,in,degree,return,maximum,in,degree
VertexMetrics -> Result -> public long getMaximumInDegree();1495653033;Get the maximum in degree.__@return maximum in degree;public long getMaximumInDegree() {_			return maximumInDegree__		};get,the,maximum,in,degree,return,maximum,in,degree;public,long,get,maximum,in,degree,return,maximum,in,degree
VertexMetrics -> Result -> public long getMaximumInDegree();1498486910;Get the maximum in degree.__@return maximum in degree;public long getMaximumInDegree() {_			return maximumInDegree__		};get,the,maximum,in,degree,return,maximum,in,degree;public,long,get,maximum,in,degree,return,maximum,in,degree
VertexMetrics -> Result -> public long getMaximumInDegree();1501064632;Get the maximum in degree.__@return maximum in degree;public long getMaximumInDegree() {_			return maximumInDegree__		};get,the,maximum,in,degree,return,maximum,in,degree;public,long,get,maximum,in,degree,return,maximum,in,degree
VertexMetrics -> public VertexMetrics<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices);1464172872;By default only the edge set is processed for the computation of degree._When this flag is set an additional join is performed against the vertex_set in order to output vertices with a degree of zero.__@param includeZeroDegreeVertices whether to output vertices with a_degree of zero_@return this;public VertexMetrics<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices) {_		this.includeZeroDegreeVertices = includeZeroDegreeVertices___		return this__	};by,default,only,the,edge,set,is,processed,for,the,computation,of,degree,when,this,flag,is,set,an,additional,join,is,performed,against,the,vertex,set,in,order,to,output,vertices,with,a,degree,of,zero,param,include,zero,degree,vertices,whether,to,output,vertices,with,a,degree,of,zero,return,this;public,vertex,metrics,k,vv,ev,set,include,zero,degree,vertices,boolean,include,zero,degree,vertices,this,include,zero,degree,vertices,include,zero,degree,vertices,return,this
VertexMetrics -> public VertexMetrics<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices);1467751657;By default only the edge set is processed for the computation of degree._When this flag is set an additional join is performed against the vertex_set in order to output vertices with a degree of zero.__@param includeZeroDegreeVertices whether to output vertices with a_degree of zero_@return this;public VertexMetrics<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices) {_		this.includeZeroDegreeVertices = includeZeroDegreeVertices___		return this__	};by,default,only,the,edge,set,is,processed,for,the,computation,of,degree,when,this,flag,is,set,an,additional,join,is,performed,against,the,vertex,set,in,order,to,output,vertices,with,a,degree,of,zero,param,include,zero,degree,vertices,whether,to,output,vertices,with,a,degree,of,zero,return,this;public,vertex,metrics,k,vv,ev,set,include,zero,degree,vertices,boolean,include,zero,degree,vertices,this,include,zero,degree,vertices,include,zero,degree,vertices,return,this
VertexMetrics -> public VertexMetrics<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices);1469043894;By default only the edge set is processed for the computation of degree._When this flag is set an additional join is performed against the vertex_set in order to output vertices with a degree of zero.__@param includeZeroDegreeVertices whether to output vertices with a_degree of zero_@return this;public VertexMetrics<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices) {_		this.includeZeroDegreeVertices = includeZeroDegreeVertices___		return this__	};by,default,only,the,edge,set,is,processed,for,the,computation,of,degree,when,this,flag,is,set,an,additional,join,is,performed,against,the,vertex,set,in,order,to,output,vertices,with,a,degree,of,zero,param,include,zero,degree,vertices,whether,to,output,vertices,with,a,degree,of,zero,return,this;public,vertex,metrics,k,vv,ev,set,include,zero,degree,vertices,boolean,include,zero,degree,vertices,this,include,zero,degree,vertices,include,zero,degree,vertices,return,this
VertexMetrics -> public VertexMetrics<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices);1472052763;By default only the edge set is processed for the computation of degree._When this flag is set an additional join is performed against the vertex_set in order to output vertices with a degree of zero.__@param includeZeroDegreeVertices whether to output vertices with a_degree of zero_@return this;public VertexMetrics<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices) {_		this.includeZeroDegreeVertices = includeZeroDegreeVertices___		return this__	};by,default,only,the,edge,set,is,processed,for,the,computation,of,degree,when,this,flag,is,set,an,additional,join,is,performed,against,the,vertex,set,in,order,to,output,vertices,with,a,degree,of,zero,param,include,zero,degree,vertices,whether,to,output,vertices,with,a,degree,of,zero,return,this;public,vertex,metrics,k,vv,ev,set,include,zero,degree,vertices,boolean,include,zero,degree,vertices,this,include,zero,degree,vertices,include,zero,degree,vertices,return,this
VertexMetrics -> public VertexMetrics<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices);1477672121;By default only the edge set is processed for the computation of degree._When this flag is set an additional join is performed against the vertex_set in order to output vertices with a degree of zero.__@param includeZeroDegreeVertices whether to output vertices with a_degree of zero_@return this;public VertexMetrics<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices) {_		this.includeZeroDegreeVertices = includeZeroDegreeVertices___		return this__	};by,default,only,the,edge,set,is,processed,for,the,computation,of,degree,when,this,flag,is,set,an,additional,join,is,performed,against,the,vertex,set,in,order,to,output,vertices,with,a,degree,of,zero,param,include,zero,degree,vertices,whether,to,output,vertices,with,a,degree,of,zero,return,this;public,vertex,metrics,k,vv,ev,set,include,zero,degree,vertices,boolean,include,zero,degree,vertices,this,include,zero,degree,vertices,include,zero,degree,vertices,return,this
VertexMetrics -> public VertexMetrics<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices);1477924473;By default only the edge set is processed for the computation of degree._When this flag is set an additional join is performed against the vertex_set in order to output vertices with a degree of zero.__@param includeZeroDegreeVertices whether to output vertices with a_degree of zero_@return this;public VertexMetrics<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices) {_		this.includeZeroDegreeVertices = includeZeroDegreeVertices___		return this__	};by,default,only,the,edge,set,is,processed,for,the,computation,of,degree,when,this,flag,is,set,an,additional,join,is,performed,against,the,vertex,set,in,order,to,output,vertices,with,a,degree,of,zero,param,include,zero,degree,vertices,whether,to,output,vertices,with,a,degree,of,zero,return,this;public,vertex,metrics,k,vv,ev,set,include,zero,degree,vertices,boolean,include,zero,degree,vertices,this,include,zero,degree,vertices,include,zero,degree,vertices,return,this
VertexMetrics -> public VertexMetrics<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices);1484763793;By default only the edge set is processed for the computation of degree._When this flag is set an additional join is performed against the vertex_set in order to output vertices with a degree of zero.__@param includeZeroDegreeVertices whether to output vertices with a_degree of zero_@return this;public VertexMetrics<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices) {_		this.includeZeroDegreeVertices = includeZeroDegreeVertices___		return this__	};by,default,only,the,edge,set,is,processed,for,the,computation,of,degree,when,this,flag,is,set,an,additional,join,is,performed,against,the,vertex,set,in,order,to,output,vertices,with,a,degree,of,zero,param,include,zero,degree,vertices,whether,to,output,vertices,with,a,degree,of,zero,return,this;public,vertex,metrics,k,vv,ev,set,include,zero,degree,vertices,boolean,include,zero,degree,vertices,this,include,zero,degree,vertices,include,zero,degree,vertices,return,this
VertexMetrics -> public VertexMetrics<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices);1488305420;By default only the edge set is processed for the computation of degree._When this flag is set an additional join is performed against the vertex_set in order to output vertices with a degree of zero.__@param includeZeroDegreeVertices whether to output vertices with a_degree of zero_@return this;public VertexMetrics<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices) {_		this.includeZeroDegreeVertices = includeZeroDegreeVertices___		return this__	};by,default,only,the,edge,set,is,processed,for,the,computation,of,degree,when,this,flag,is,set,an,additional,join,is,performed,against,the,vertex,set,in,order,to,output,vertices,with,a,degree,of,zero,param,include,zero,degree,vertices,whether,to,output,vertices,with,a,degree,of,zero,return,this;public,vertex,metrics,k,vv,ev,set,include,zero,degree,vertices,boolean,include,zero,degree,vertices,this,include,zero,degree,vertices,include,zero,degree,vertices,return,this
VertexMetrics -> public VertexMetrics<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices);1495653033;By default only the edge set is processed for the computation of degree._When this flag is set an additional join is performed against the vertex_set in order to output vertices with a degree of zero.__@param includeZeroDegreeVertices whether to output vertices with a_degree of zero_@return this;public VertexMetrics<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices) {_		this.includeZeroDegreeVertices = includeZeroDegreeVertices___		return this__	};by,default,only,the,edge,set,is,processed,for,the,computation,of,degree,when,this,flag,is,set,an,additional,join,is,performed,against,the,vertex,set,in,order,to,output,vertices,with,a,degree,of,zero,param,include,zero,degree,vertices,whether,to,output,vertices,with,a,degree,of,zero,return,this;public,vertex,metrics,k,vv,ev,set,include,zero,degree,vertices,boolean,include,zero,degree,vertices,this,include,zero,degree,vertices,include,zero,degree,vertices,return,this
VertexMetrics -> public VertexMetrics<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices);1498486910;By default only the edge set is processed for the computation of degree._When this flag is set an additional join is performed against the vertex_set in order to output vertices with a degree of zero.__@param includeZeroDegreeVertices whether to output vertices with a_degree of zero_@return this;public VertexMetrics<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices) {_		this.includeZeroDegreeVertices = includeZeroDegreeVertices___		return this__	};by,default,only,the,edge,set,is,processed,for,the,computation,of,degree,when,this,flag,is,set,an,additional,join,is,performed,against,the,vertex,set,in,order,to,output,vertices,with,a,degree,of,zero,param,include,zero,degree,vertices,whether,to,output,vertices,with,a,degree,of,zero,return,this;public,vertex,metrics,k,vv,ev,set,include,zero,degree,vertices,boolean,include,zero,degree,vertices,this,include,zero,degree,vertices,include,zero,degree,vertices,return,this
VertexMetrics -> public VertexMetrics<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices);1501064632;By default only the edge set is processed for the computation of degree._When this flag is set an additional join is performed against the vertex_set in order to output vertices with a degree of zero.__@param includeZeroDegreeVertices whether to output vertices with a_degree of zero_@return this;public VertexMetrics<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices) {_		this.includeZeroDegreeVertices = includeZeroDegreeVertices___		return this__	};by,default,only,the,edge,set,is,processed,for,the,computation,of,degree,when,this,flag,is,set,an,additional,join,is,performed,against,the,vertex,set,in,order,to,output,vertices,with,a,degree,of,zero,param,include,zero,degree,vertices,whether,to,output,vertices,with,a,degree,of,zero,return,this;public,vertex,metrics,k,vv,ev,set,include,zero,degree,vertices,boolean,include,zero,degree,vertices,this,include,zero,degree,vertices,include,zero,degree,vertices,return,this
VertexMetrics -> Result -> public long getNumberOfUndirectedEdges();1477672121;Get the number of bidirectional edges.__@return number of bidirectional edges;public long getNumberOfUndirectedEdges() {_			return bidirectionalEdgeCount__		};get,the,number,of,bidirectional,edges,return,number,of,bidirectional,edges;public,long,get,number,of,undirected,edges,return,bidirectional,edge,count
VertexMetrics -> Result -> public long getNumberOfUndirectedEdges();1477924473;Get the number of bidirectional edges.__@return number of bidirectional edges;public long getNumberOfUndirectedEdges() {_			return bidirectionalEdgeCount__		};get,the,number,of,bidirectional,edges,return,number,of,bidirectional,edges;public,long,get,number,of,undirected,edges,return,bidirectional,edge,count
VertexMetrics -> Result -> public long getNumberOfUndirectedEdges();1484763793;Get the number of bidirectional edges.__@return number of bidirectional edges;public long getNumberOfUndirectedEdges() {_			return bidirectionalEdgeCount__		};get,the,number,of,bidirectional,edges,return,number,of,bidirectional,edges;public,long,get,number,of,undirected,edges,return,bidirectional,edge,count
VertexMetrics -> Result -> public long getNumberOfUndirectedEdges();1488305420;Get the number of bidirectional edges.__@return number of bidirectional edges;public long getNumberOfUndirectedEdges() {_			return bidirectionalEdgeCount__		};get,the,number,of,bidirectional,edges,return,number,of,bidirectional,edges;public,long,get,number,of,undirected,edges,return,bidirectional,edge,count
VertexMetrics -> Result -> public long getNumberOfUndirectedEdges();1495653033;Get the number of bidirectional edges.__@return number of bidirectional edges;public long getNumberOfUndirectedEdges() {_			return bidirectionalEdgeCount__		};get,the,number,of,bidirectional,edges,return,number,of,bidirectional,edges;public,long,get,number,of,undirected,edges,return,bidirectional,edge,count
VertexMetrics -> Result -> public long getNumberOfUndirectedEdges();1498486910;Get the number of bidirectional edges.__@return number of bidirectional edges;public long getNumberOfUndirectedEdges() {_			return bidirectionalEdgeCount__		};get,the,number,of,bidirectional,edges,return,number,of,bidirectional,edges;public,long,get,number,of,undirected,edges,return,bidirectional,edge,count
VertexMetrics -> Result -> public long getNumberOfUndirectedEdges();1501064632;Get the number of bidirectional edges.__@return number of bidirectional edges;public long getNumberOfUndirectedEdges() {_			return bidirectionalEdgeCount__		};get,the,number,of,bidirectional,edges,return,number,of,bidirectional,edges;public,long,get,number,of,undirected,edges,return,bidirectional,edge,count
VertexMetrics -> Result -> public float getAverageDegree();1472052763;Get the average degree.__@return average degree;public float getAverageDegree() {_			return edgeCount / (float)vertexCount__		};get,the,average,degree,return,average,degree;public,float,get,average,degree,return,edge,count,float,vertex,count
VertexMetrics -> Result -> public float getAverageDegree();1477672121;Get the average degree.__@return average degree;public float getAverageDegree() {_			return getNumberOfEdges() / (float)vertexCount__		};get,the,average,degree,return,average,degree;public,float,get,average,degree,return,get,number,of,edges,float,vertex,count
VertexMetrics -> Result -> public float getAverageDegree();1477924473;Get the average degree.__@return average degree;public float getAverageDegree() {_			return getNumberOfEdges() / (float)vertexCount__		};get,the,average,degree,return,average,degree;public,float,get,average,degree,return,get,number,of,edges,float,vertex,count
VertexMetrics -> Result -> public float getAverageDegree();1484763793;Get the average degree, the average number of in- plus out-edges per vertex.__A result of {@code Float.NaN} is returned for an empty graph for_which both the number of edges and number of vertices is zero.__@return average degree;public float getAverageDegree() {_			return vertexCount == 0 ? Float.NaN : getNumberOfEdges() / (float)vertexCount__		};get,the,average,degree,the,average,number,of,in,plus,out,edges,per,vertex,a,result,of,code,float,na,n,is,returned,for,an,empty,graph,for,which,both,the,number,of,edges,and,number,of,vertices,is,zero,return,average,degree;public,float,get,average,degree,return,vertex,count,0,float,na,n,get,number,of,edges,float,vertex,count
VertexMetrics -> Result -> public long getNumberOfDirectedEdges();1477672121;Get the number of unidirectional edges.__@return number of unidirectional edges;public long getNumberOfDirectedEdges() {_			return unidirectionalEdgeCount__		};get,the,number,of,unidirectional,edges,return,number,of,unidirectional,edges;public,long,get,number,of,directed,edges,return,unidirectional,edge,count
VertexMetrics -> Result -> public long getNumberOfDirectedEdges();1477924473;Get the number of unidirectional edges.__@return number of unidirectional edges;public long getNumberOfDirectedEdges() {_			return unidirectionalEdgeCount__		};get,the,number,of,unidirectional,edges,return,number,of,unidirectional,edges;public,long,get,number,of,directed,edges,return,unidirectional,edge,count
VertexMetrics -> Result -> public long getNumberOfDirectedEdges();1484763793;Get the number of unidirectional edges.__@return number of unidirectional edges;public long getNumberOfDirectedEdges() {_			return unidirectionalEdgeCount__		};get,the,number,of,unidirectional,edges,return,number,of,unidirectional,edges;public,long,get,number,of,directed,edges,return,unidirectional,edge,count
VertexMetrics -> Result -> public long getNumberOfDirectedEdges();1488305420;Get the number of unidirectional edges.__@return number of unidirectional edges;public long getNumberOfDirectedEdges() {_			return unidirectionalEdgeCount__		};get,the,number,of,unidirectional,edges,return,number,of,unidirectional,edges;public,long,get,number,of,directed,edges,return,unidirectional,edge,count
VertexMetrics -> Result -> public long getNumberOfDirectedEdges();1495653033;Get the number of unidirectional edges.__@return number of unidirectional edges;public long getNumberOfDirectedEdges() {_			return unidirectionalEdgeCount__		};get,the,number,of,unidirectional,edges,return,number,of,unidirectional,edges;public,long,get,number,of,directed,edges,return,unidirectional,edge,count
VertexMetrics -> Result -> public long getNumberOfDirectedEdges();1498486910;Get the number of unidirectional edges.__@return number of unidirectional edges;public long getNumberOfDirectedEdges() {_			return unidirectionalEdgeCount__		};get,the,number,of,unidirectional,edges,return,number,of,unidirectional,edges;public,long,get,number,of,directed,edges,return,unidirectional,edge,count
VertexMetrics -> Result -> public long getNumberOfDirectedEdges();1501064632;Get the number of unidirectional edges.__@return number of unidirectional edges;public long getNumberOfDirectedEdges() {_			return unidirectionalEdgeCount__		};get,the,number,of,unidirectional,edges,return,number,of,unidirectional,edges;public,long,get,number,of,directed,edges,return,unidirectional,edge,count
VertexMetrics -> VertexMetricsHelper -> public VertexMetricsHelper(String id);1464172872;This helper class collects vertex metrics by scanning over and_discarding elements from the given DataSet.__The unique id is required because Flink's accumulator namespace is_among all operators.__@param id unique string used for accumulator names;public VertexMetricsHelper(String id) {_			this.id = id__		};this,helper,class,collects,vertex,metrics,by,scanning,over,and,discarding,elements,from,the,given,data,set,the,unique,id,is,required,because,flink,s,accumulator,namespace,is,among,all,operators,param,id,unique,string,used,for,accumulator,names;public,vertex,metrics,helper,string,id,this,id,id
VertexMetrics -> VertexMetricsHelper -> public VertexMetricsHelper(String id);1467751657;This helper class collects vertex metrics by scanning over and_discarding elements from the given DataSet.__The unique id is required because Flink's accumulator namespace is_among all operators.__@param id unique string used for accumulator names;public VertexMetricsHelper(String id) {_			this.id = id__		};this,helper,class,collects,vertex,metrics,by,scanning,over,and,discarding,elements,from,the,given,data,set,the,unique,id,is,required,because,flink,s,accumulator,namespace,is,among,all,operators,param,id,unique,string,used,for,accumulator,names;public,vertex,metrics,helper,string,id,this,id,id
VertexMetrics -> VertexMetricsHelper -> public VertexMetricsHelper(String id);1469043894;This helper class collects vertex metrics by scanning over and_discarding elements from the given DataSet.__The unique id is required because Flink's accumulator namespace is_shared among all operators.__@param id unique string used for accumulator names;public VertexMetricsHelper(String id) {_			this.id = id__		};this,helper,class,collects,vertex,metrics,by,scanning,over,and,discarding,elements,from,the,given,data,set,the,unique,id,is,required,because,flink,s,accumulator,namespace,is,shared,among,all,operators,param,id,unique,string,used,for,accumulator,names;public,vertex,metrics,helper,string,id,this,id,id
VertexMetrics -> VertexMetricsHelper -> public VertexMetricsHelper(String id);1472052763;This helper class collects vertex metrics by scanning over and_discarding elements from the given DataSet.__The unique id is required because Flink's accumulator namespace is_shared among all operators.__@param id unique string used for accumulator names;public VertexMetricsHelper(String id) {_			this.id = id__		};this,helper,class,collects,vertex,metrics,by,scanning,over,and,discarding,elements,from,the,given,data,set,the,unique,id,is,required,because,flink,s,accumulator,namespace,is,shared,among,all,operators,param,id,unique,string,used,for,accumulator,names;public,vertex,metrics,helper,string,id,this,id,id
