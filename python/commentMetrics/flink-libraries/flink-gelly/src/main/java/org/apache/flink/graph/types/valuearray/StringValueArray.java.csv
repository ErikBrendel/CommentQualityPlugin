# id;timestamp;commentText;codeText;commentWords;codeWords
StringValueArray -> public StringValueArray();1487695222;Initializes an expandable array with default capacity.;public StringValueArray() {_		isBounded = false__		initialize(DEFAULT_CAPACITY_IN_BYTES)__	};initializes,an,expandable,array,with,default,capacity;public,string,value,array,is,bounded,false,initialize
StringValueArray -> public StringValueArray();1495653033;Initializes an expandable array with default capacity.;public StringValueArray() {_		isBounded = false__		initialize(DEFAULT_CAPACITY_IN_BYTES)__	};initializes,an,expandable,array,with,default,capacity;public,string,value,array,is,bounded,false,initialize
StringValueArray -> public StringValueArray();1498618461;Initializes an expandable array with default capacity.;public StringValueArray() {_		isBounded = false__		initialize(DEFAULT_CAPACITY_IN_BYTES)__	};initializes,an,expandable,array,with,default,capacity;public,string,value,array,is,bounded,false,initialize
StringValueArray -> public StringValueArray(int bytes);1487695222;Initializes a fixed-size array with the provided number of bytes.__@param bytes number of bytes of the encapsulated array;public StringValueArray(int bytes) {_		isBounded = true__		boundedLength = bytes__		initialize(bytes)__	};initializes,a,fixed,size,array,with,the,provided,number,of,bytes,param,bytes,number,of,bytes,of,the,encapsulated,array;public,string,value,array,int,bytes,is,bounded,true,bounded,length,bytes,initialize,bytes
StringValueArray -> public StringValueArray(int bytes);1495653033;Initializes a fixed-size array with the provided number of bytes.__@param bytes number of bytes of the encapsulated array;public StringValueArray(int bytes) {_		isBounded = true__		boundedLength = bytes__		initialize(bytes)__	};initializes,a,fixed,size,array,with,the,provided,number,of,bytes,param,bytes,number,of,bytes,of,the,encapsulated,array;public,string,value,array,int,bytes,is,bounded,true,bounded,length,bytes,initialize,bytes
StringValueArray -> public StringValueArray(int bytes);1498618461;Initializes a fixed-size array with the provided number of bytes.__@param bytes number of bytes of the encapsulated array;public StringValueArray(int bytes) {_		isBounded = true__		boundedLength = bytes__		initialize(bytes)__	};initializes,a,fixed,size,array,with,the,provided,number,of,bytes,param,bytes,number,of,bytes,of,the,encapsulated,array;public,string,value,array,int,bytes,is,bounded,true,bounded,length,bytes,initialize,bytes
StringValueArray -> private void initialize(int bytes);1487695222;Initializes the array with the provided number of bytes.__@param bytes initial size of the encapsulated array in bytes;private void initialize(int bytes) {_		Preconditions.checkArgument(bytes > 0, "Requested array with zero capacity")__		Preconditions.checkArgument(bytes <= MAX_ARRAY_SIZE, "Requested capacity exceeds limit of " + MAX_ARRAY_SIZE)___		data = new byte[bytes]__	};initializes,the,array,with,the,provided,number,of,bytes,param,bytes,initial,size,of,the,encapsulated,array,in,bytes;private,void,initialize,int,bytes,preconditions,check,argument,bytes,0,requested,array,with,zero,capacity,preconditions,check,argument,bytes,requested,capacity,exceeds,limit,of,data,new,byte,bytes
StringValueArray -> private void initialize(int bytes);1495653033;Initializes the array with the provided number of bytes.__@param bytes initial size of the encapsulated array in bytes;private void initialize(int bytes) {_		Preconditions.checkArgument(bytes > 0, "Requested array with zero capacity")__		Preconditions.checkArgument(bytes <= MAX_ARRAY_SIZE, "Requested capacity exceeds limit of " + MAX_ARRAY_SIZE)___		data = new byte[bytes]__	};initializes,the,array,with,the,provided,number,of,bytes,param,bytes,initial,size,of,the,encapsulated,array,in,bytes;private,void,initialize,int,bytes,preconditions,check,argument,bytes,0,requested,array,with,zero,capacity,preconditions,check,argument,bytes,requested,capacity,exceeds,limit,of,data,new,byte,bytes
StringValueArray -> private void initialize(int bytes);1498618461;Initializes the array with the provided number of bytes.__@param bytes initial size of the encapsulated array in bytes;private void initialize(int bytes) {_		Preconditions.checkArgument(bytes > 0, "Requested array with zero capacity")__		Preconditions.checkArgument(bytes <= MAX_ARRAY_SIZE, "Requested capacity exceeds limit of " + MAX_ARRAY_SIZE)___		data = new byte[bytes]__	};initializes,the,array,with,the,provided,number,of,bytes,param,bytes,initial,size,of,the,encapsulated,array,in,bytes;private,void,initialize,int,bytes,preconditions,check,argument,bytes,0,requested,array,with,zero,capacity,preconditions,check,argument,bytes,requested,capacity,exceeds,limit,of,data,new,byte,bytes
StringValueArray -> private void ensureCapacity(int minCapacity);1487695222;If the size of the array is insufficient to hold the given capacity then_copy the array into a new, larger array.__@param minCapacity minimum required number of elements;private void ensureCapacity(int minCapacity) {_		long currentCapacity = data.length___		if (minCapacity <= currentCapacity) {_			return__		}__		_		long expandedCapacity = Math.max(minCapacity, currentCapacity + (currentCapacity >> 1))__		int newCapacity = (int) Math.min(MAX_ARRAY_SIZE, expandedCapacity)___		if (newCapacity < minCapacity) {_			_			throw new RuntimeException("Requested array size " + minCapacity + " exceeds limit of " + MAX_ARRAY_SIZE)__		}__		data = Arrays.copyOf(data, newCapacity)__	};if,the,size,of,the,array,is,insufficient,to,hold,the,given,capacity,then,copy,the,array,into,a,new,larger,array,param,min,capacity,minimum,required,number,of,elements;private,void,ensure,capacity,int,min,capacity,long,current,capacity,data,length,if,min,capacity,current,capacity,return,long,expanded,capacity,math,max,min,capacity,current,capacity,current,capacity,1,int,new,capacity,int,math,min,expanded,capacity,if,new,capacity,min,capacity,throw,new,runtime,exception,requested,array,size,min,capacity,exceeds,limit,of,data,arrays,copy,of,data,new,capacity
StringValueArray -> private void ensureCapacity(int minCapacity);1495653033;If the size of the array is insufficient to hold the given capacity then_copy the array into a new, larger array.__@param minCapacity minimum required number of elements;private void ensureCapacity(int minCapacity) {_		long currentCapacity = data.length___		if (minCapacity <= currentCapacity) {_			return__		}__		_		long expandedCapacity = Math.max(minCapacity, currentCapacity + (currentCapacity >> 1))__		int newCapacity = (int) Math.min(MAX_ARRAY_SIZE, expandedCapacity)___		if (newCapacity < minCapacity) {_			_			throw new RuntimeException("Requested array size " + minCapacity + " exceeds limit of " + MAX_ARRAY_SIZE)__		}__		data = Arrays.copyOf(data, newCapacity)__	};if,the,size,of,the,array,is,insufficient,to,hold,the,given,capacity,then,copy,the,array,into,a,new,larger,array,param,min,capacity,minimum,required,number,of,elements;private,void,ensure,capacity,int,min,capacity,long,current,capacity,data,length,if,min,capacity,current,capacity,return,long,expanded,capacity,math,max,min,capacity,current,capacity,current,capacity,1,int,new,capacity,int,math,min,expanded,capacity,if,new,capacity,min,capacity,throw,new,runtime,exception,requested,array,size,min,capacity,exceeds,limit,of,data,arrays,copy,of,data,new,capacity
StringValueArray -> private void ensureCapacity(int minCapacity);1498618461;If the size of the array is insufficient to hold the given capacity then_copy the array into a new, larger array.__@param minCapacity minimum required number of elements;private void ensureCapacity(int minCapacity) {_		long currentCapacity = data.length___		if (minCapacity <= currentCapacity) {_			return__		}__		_		long expandedCapacity = Math.max(minCapacity, currentCapacity + (currentCapacity >> 1))__		int newCapacity = (int) Math.min(MAX_ARRAY_SIZE, expandedCapacity)___		if (newCapacity < minCapacity) {_			_			throw new RuntimeException("Requested array size " + minCapacity + " exceeds limit of " + MAX_ARRAY_SIZE)__		}__		data = Arrays.copyOf(data, newCapacity)__	};if,the,size,of,the,array,is,insufficient,to,hold,the,given,capacity,then,copy,the,array,into,a,new,larger,array,param,min,capacity,minimum,required,number,of,elements;private,void,ensure,capacity,int,min,capacity,long,current,capacity,data,length,if,min,capacity,current,capacity,return,long,expanded,capacity,math,max,min,capacity,current,capacity,current,capacity,1,int,new,capacity,int,math,min,expanded,capacity,if,new,capacity,min,capacity,throw,new,runtime,exception,requested,array,size,min,capacity,exceeds,limit,of,data,arrays,copy,of,data,new,capacity
