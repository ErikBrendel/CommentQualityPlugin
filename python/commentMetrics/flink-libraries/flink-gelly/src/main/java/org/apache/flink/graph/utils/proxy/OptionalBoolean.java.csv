# id;timestamp;commentText;codeText;commentWords;codeWords
OptionalBoolean -> public boolean get();1464173021;Get the boolean state.__@return boolean state;public boolean get() {_		switch (state) {_			case UNSET:_				return valueIfUnset__			case FALSE:_				return false__			case TRUE:_				return true__			case CONFLICTING:_				return valueIfConflicting__			default:_				throw new RuntimeException("Unknown state")__		}_	};get,the,boolean,state,return,boolean,state;public,boolean,get,switch,state,case,unset,return,value,if,unset,case,false,return,false,case,true,return,true,case,conflicting,return,value,if,conflicting,default,throw,new,runtime,exception,unknown,state
OptionalBoolean -> public boolean get();1487885205;Get the boolean state.__@return boolean state;public boolean get() {_		switch (state) {_			case UNSET:_				return valueIfUnset__			case FALSE:_				return false__			case TRUE:_				return true__			case CONFLICTING:_				return valueIfConflicting__			default:_				throw new RuntimeException("Unknown state")__		}_	};get,the,boolean,state,return,boolean,state;public,boolean,get,switch,state,case,unset,return,value,if,unset,case,false,return,false,case,true,return,true,case,conflicting,return,value,if,conflicting,default,throw,new,runtime,exception,unknown,state
OptionalBoolean -> public boolean get();1495653033;Get the boolean state.__@return boolean state;public boolean get() {_		switch (state) {_			case UNSET:_				return valueIfUnset__			case FALSE:_				return false__			case TRUE:_				return true__			case CONFLICTING:_				return valueIfConflicting__			default:_				throw new RuntimeException("Unknown state")__		}_	};get,the,boolean,state,return,boolean,state;public,boolean,get,switch,state,case,unset,return,value,if,unset,case,false,return,false,case,true,return,true,case,conflicting,return,value,if,conflicting,default,throw,new,runtime,exception,unknown,state
OptionalBoolean -> public OptionalBoolean(boolean valueIfUnset, boolean valueIfConflicting);1464173021;An {@code OptionalBoolean} has three possible states: true, false, and_"unset". The value is set when merged with a value of true or false. The_state returns to unset either explicitly or when true is merged with false.__@param valueIfUnset the value to return when the object's state is unset_@param valueIfConflicting the value to return when the object's state is conflicting;public OptionalBoolean(boolean valueIfUnset, boolean valueIfConflicting) {_		this.valueIfUnset = valueIfUnset__		this.valueIfConflicting = valueIfConflicting__	};an,code,optional,boolean,has,three,possible,states,true,false,and,unset,the,value,is,set,when,merged,with,a,value,of,true,or,false,the,state,returns,to,unset,either,explicitly,or,when,true,is,merged,with,false,param,value,if,unset,the,value,to,return,when,the,object,s,state,is,unset,param,value,if,conflicting,the,value,to,return,when,the,object,s,state,is,conflicting;public,optional,boolean,boolean,value,if,unset,boolean,value,if,conflicting,this,value,if,unset,value,if,unset,this,value,if,conflicting,value,if,conflicting
OptionalBoolean -> public OptionalBoolean(boolean valueIfUnset, boolean valueIfConflicting);1487885205;An {@code OptionalBoolean} has three possible states: true, false, and_"unset". The value is set when merged with a value of true or false. The_state returns to unset either explicitly or when true is merged with false.__@param valueIfUnset the value to return when the object's state is unset_@param valueIfConflicting the value to return when the object's state is conflicting;public OptionalBoolean(boolean valueIfUnset, boolean valueIfConflicting) {_		this.valueIfUnset = valueIfUnset__		this.valueIfConflicting = valueIfConflicting__	};an,code,optional,boolean,has,three,possible,states,true,false,and,unset,the,value,is,set,when,merged,with,a,value,of,true,or,false,the,state,returns,to,unset,either,explicitly,or,when,true,is,merged,with,false,param,value,if,unset,the,value,to,return,when,the,object,s,state,is,unset,param,value,if,conflicting,the,value,to,return,when,the,object,s,state,is,conflicting;public,optional,boolean,boolean,value,if,unset,boolean,value,if,conflicting,this,value,if,unset,value,if,unset,this,value,if,conflicting,value,if,conflicting
OptionalBoolean -> public OptionalBoolean(boolean valueIfUnset, boolean valueIfConflicting);1495653033;An {@code OptionalBoolean} has three possible states: true, false, and_"unset". The value is set when merged with a value of true or false. The_state returns to unset either explicitly or when true is merged with false.__@param valueIfUnset the value to return when the object's state is unset_@param valueIfConflicting the value to return when the object's state is conflicting;public OptionalBoolean(boolean valueIfUnset, boolean valueIfConflicting) {_		this.valueIfUnset = valueIfUnset__		this.valueIfConflicting = valueIfConflicting__	};an,code,optional,boolean,has,three,possible,states,true,false,and,unset,the,value,is,set,when,merged,with,a,value,of,true,or,false,the,state,returns,to,unset,either,explicitly,or,when,true,is,merged,with,false,param,value,if,unset,the,value,to,return,when,the,object,s,state,is,unset,param,value,if,conflicting,the,value,to,return,when,the,object,s,state,is,conflicting;public,optional,boolean,boolean,value,if,unset,boolean,value,if,conflicting,this,value,if,unset,value,if,unset,this,value,if,conflicting,value,if,conflicting
OptionalBoolean -> public void unset();1464173021;Reset to the unset state.;public void unset() {_		this.state = State.UNSET__	};reset,to,the,unset,state;public,void,unset,this,state,state,unset
OptionalBoolean -> public void unset();1487885205;Reset to the unset state.;public void unset() {_		this.state = State.UNSET__	};reset,to,the,unset,state;public,void,unset,this,state,state,unset
OptionalBoolean -> public void unset();1495653033;Reset to the unset state.;public void unset() {_		this.state = State.UNSET__	};reset,to,the,unset,state;public,void,unset,this,state,state,unset
OptionalBoolean -> public void mergeWith(OptionalBoolean other);1464173021;State transitions:_if the states are the same then no change_if either state is unset then change to the other state_if the states are conflicting then set to the conflicting state__@param other object from which to merge state;public void mergeWith(OptionalBoolean other) {_		if (state == other.state) {_			_		} else if (state == State.UNSET) {_			state = other.state__		} else if (other.state == State.UNSET) {_			_		} else {_			state = State.CONFLICTING__		}_	};state,transitions,if,the,states,are,the,same,then,no,change,if,either,state,is,unset,then,change,to,the,other,state,if,the,states,are,conflicting,then,set,to,the,conflicting,state,param,other,object,from,which,to,merge,state;public,void,merge,with,optional,boolean,other,if,state,other,state,else,if,state,state,unset,state,other,state,else,if,other,state,state,unset,else,state,state,conflicting
OptionalBoolean -> public void mergeWith(OptionalBoolean other);1487885205;State transitions:_if the states are the same then no change_if either state is unset then change to the other state_if the states are conflicting then set to the conflicting state__@param other object from which to merge state;public void mergeWith(OptionalBoolean other) {_		if (state == other.state) {_			_		} else if (state == State.UNSET) {_			state = other.state__		} else if (other.state == State.UNSET) {_			_		} else {_			state = State.CONFLICTING__		}_	};state,transitions,if,the,states,are,the,same,then,no,change,if,either,state,is,unset,then,change,to,the,other,state,if,the,states,are,conflicting,then,set,to,the,conflicting,state,param,other,object,from,which,to,merge,state;public,void,merge,with,optional,boolean,other,if,state,other,state,else,if,state,state,unset,state,other,state,else,if,other,state,state,unset,else,state,state,conflicting
OptionalBoolean -> public void mergeWith(OptionalBoolean other);1495653033;State transitions._- if the states are the same then no change_- if either state is unset then change to the other state_- if the states are conflicting then set to the conflicting state__@param other object from which to merge state;public void mergeWith(OptionalBoolean other) {_		if (state == other.state) {_			_		} else if (state == State.UNSET) {_			state = other.state__		} else if (other.state == State.UNSET) {_			_		} else {_			state = State.CONFLICTING__		}_	};state,transitions,if,the,states,are,the,same,then,no,change,if,either,state,is,unset,then,change,to,the,other,state,if,the,states,are,conflicting,then,set,to,the,conflicting,state,param,other,object,from,which,to,merge,state;public,void,merge,with,optional,boolean,other,if,state,other,state,else,if,state,state,unset,state,other,state,else,if,other,state,state,unset,else,state,state,conflicting
OptionalBoolean -> public boolean conflictsWith(OptionalBoolean other);1464173021;The conflicting states are true with false and false with true.__@param other object to test with_@return whether the objects conflict;public boolean conflictsWith(OptionalBoolean other) {_		return state == State.CONFLICTING_			|| other.state == State.CONFLICTING_			|| (state == State.TRUE && other.state == State.FALSE)_			|| (state == State.FALSE && other.state == State.TRUE)__	};the,conflicting,states,are,true,with,false,and,false,with,true,param,other,object,to,test,with,return,whether,the,objects,conflict;public,boolean,conflicts,with,optional,boolean,other,return,state,state,conflicting,other,state,state,conflicting,state,state,true,other,state,state,false,state,state,false,other,state,state,true
OptionalBoolean -> public boolean conflictsWith(OptionalBoolean other);1487885205;The conflicting states are true with false and false with true.__@param other object to test with_@return whether the objects conflict;public boolean conflictsWith(OptionalBoolean other) {_		return state == State.CONFLICTING_			|| other.state == State.CONFLICTING_			|| (state == State.TRUE && other.state == State.FALSE)_			|| (state == State.FALSE && other.state == State.TRUE)__	};the,conflicting,states,are,true,with,false,and,false,with,true,param,other,object,to,test,with,return,whether,the,objects,conflict;public,boolean,conflicts,with,optional,boolean,other,return,state,state,conflicting,other,state,state,conflicting,state,state,true,other,state,state,false,state,state,false,other,state,state,true
OptionalBoolean -> public boolean conflictsWith(OptionalBoolean other);1495653033;The conflicting states are true with false and false with true.__@param other object to test with_@return whether the objects conflict;public boolean conflictsWith(OptionalBoolean other) {_		return state == State.CONFLICTING_			|| other.state == State.CONFLICTING_			|| (state == State.TRUE && other.state == State.FALSE)_			|| (state == State.FALSE && other.state == State.TRUE)__	};the,conflicting,states,are,true,with,false,and,false,with,true,param,other,object,to,test,with,return,whether,the,objects,conflict;public,boolean,conflicts,with,optional,boolean,other,return,state,state,conflicting,other,state,state,conflicting,state,state,true,other,state,state,false,state,state,false,other,state,state,true
OptionalBoolean -> public void set(boolean value);1464173021;Set the boolean state.__@param value boolean state;public void set(boolean value) {_		this.state = (value ? State.TRUE : State.FALSE)__	};set,the,boolean,state,param,value,boolean,state;public,void,set,boolean,value,this,state,value,state,true,state,false
OptionalBoolean -> public void set(boolean value);1487885205;Set the boolean state.__@param value boolean state;public void set(boolean value) {_		this.state = (value ? State.TRUE : State.FALSE)__	};set,the,boolean,state,param,value,boolean,state;public,void,set,boolean,value,this,state,value,state,true,state,false
OptionalBoolean -> public void set(boolean value);1495653033;Set the boolean state.__@param value boolean state;public void set(boolean value) {_		this.state = (value ? State.TRUE : State.FALSE)__	};set,the,boolean,state,param,value,boolean,state;public,void,set,boolean,value,this,state,value,state,true,state,false
OptionalBoolean -> protected State getState();1464173021;Get the actual state.__@return actual state;protected State getState() {_		return state__	};get,the,actual,state,return,actual,state;protected,state,get,state,return,state
OptionalBoolean -> protected State getState();1487885205;Get the actual state.__@return actual state;protected State getState() {_		return state__	};get,the,actual,state,return,actual,state;protected,state,get,state,return,state
OptionalBoolean -> protected State getState();1495653033;Get the actual state.__@return actual state;protected State getState() {_		return state__	};get,the,actual,state,return,actual,state;protected,state,get,state,return,state
