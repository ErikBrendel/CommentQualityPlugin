# id;timestamp;commentText;codeText;commentWords;codeWords
Simplify -> public Simplify<K, VV, EV> setParallelism(int parallelism);1464173021;Override the operator parallelism.__@param parallelism operator parallelism_@return this;public Simplify<K, VV, EV> setParallelism(int parallelism) {_		Preconditions.checkArgument(parallelism > 0 || parallelism == PARALLELISM_DEFAULT,_			"The parallelism must be greater than zero.")___		this.parallelism = parallelism___		return this__	};override,the,operator,parallelism,param,parallelism,operator,parallelism,return,this;public,simplify,k,vv,ev,set,parallelism,int,parallelism,preconditions,check,argument,parallelism,0,parallelism,the,parallelism,must,be,greater,than,zero,this,parallelism,parallelism,return,this
Simplify -> public Simplify<K, VV, EV> setParallelism(int parallelism);1464897660;Override the operator parallelism.__@param parallelism operator parallelism_@return this;public Simplify<K, VV, EV> setParallelism(int parallelism) {_		Preconditions.checkArgument(parallelism > 0 || parallelism == PARALLELISM_DEFAULT,_			"The parallelism must be greater than zero.")___		this.parallelism = parallelism___		return this__	};override,the,operator,parallelism,param,parallelism,operator,parallelism,return,this;public,simplify,k,vv,ev,set,parallelism,int,parallelism,preconditions,check,argument,parallelism,0,parallelism,the,parallelism,must,be,greater,than,zero,this,parallelism,parallelism,return,this
Simplify -> public Simplify<K, VV, EV> setParallelism(int parallelism);1467751657;Override the operator parallelism.__@param parallelism operator parallelism_@return this;public Simplify<K, VV, EV> setParallelism(int parallelism) {_		Preconditions.checkArgument(parallelism > 0 || parallelism == PARALLELISM_DEFAULT,_			"The parallelism must be greater than zero.")___		this.parallelism = parallelism___		return this__	};override,the,operator,parallelism,param,parallelism,operator,parallelism,return,this;public,simplify,k,vv,ev,set,parallelism,int,parallelism,preconditions,check,argument,parallelism,0,parallelism,the,parallelism,must,be,greater,than,zero,this,parallelism,parallelism,return,this
Simplify -> public Simplify<K, VV, EV> setParallelism(int parallelism);1469452167;Override the operator parallelism.__@param parallelism operator parallelism_@return this;public Simplify<K, VV, EV> setParallelism(int parallelism) {_		Preconditions.checkArgument(parallelism > 0 || parallelism == PARALLELISM_DEFAULT,_			"The parallelism must be greater than zero.")___		this.parallelism = parallelism___		return this__	};override,the,operator,parallelism,param,parallelism,operator,parallelism,return,this;public,simplify,k,vv,ev,set,parallelism,int,parallelism,preconditions,check,argument,parallelism,0,parallelism,the,parallelism,must,be,greater,than,zero,this,parallelism,parallelism,return,this
Simplify -> public Simplify<K, VV, EV> setParallelism(int parallelism);1472831588;Override the operator parallelism.__@param parallelism operator parallelism_@return this;public Simplify<K, VV, EV> setParallelism(int parallelism) {_		Preconditions.checkArgument(parallelism > 0 || parallelism == PARALLELISM_DEFAULT,_			"The parallelism must be greater than zero.")___		this.parallelism = parallelism___		return this__	};override,the,operator,parallelism,param,parallelism,operator,parallelism,return,this;public,simplify,k,vv,ev,set,parallelism,int,parallelism,preconditions,check,argument,parallelism,0,parallelism,the,parallelism,must,be,greater,than,zero,this,parallelism,parallelism,return,this
Simplify -> public Simplify<K, VV, EV> setParallelism(int parallelism);1488305420;Override the operator parallelism.__@param parallelism operator parallelism_@return this;public Simplify<K, VV, EV> setParallelism(int parallelism) {_		Preconditions.checkArgument(parallelism > 0 || parallelism == PARALLELISM_DEFAULT,_			"The parallelism must be greater than zero.")___		this.parallelism = parallelism___		return this__	};override,the,operator,parallelism,param,parallelism,operator,parallelism,return,this;public,simplify,k,vv,ev,set,parallelism,int,parallelism,preconditions,check,argument,parallelism,0,parallelism,the,parallelism,must,be,greater,than,zero,this,parallelism,parallelism,return,this
Simplify -> public Simplify<K, VV, EV> setParallelism(int parallelism);1495653033;Override the operator parallelism.__@param parallelism operator parallelism_@return this;public Simplify<K, VV, EV> setParallelism(int parallelism) {_		Preconditions.checkArgument(parallelism > 0 || parallelism == PARALLELISM_DEFAULT,_			"The parallelism must be greater than zero.")___		this.parallelism = parallelism___		return this__	};override,the,operator,parallelism,param,parallelism,operator,parallelism,return,this;public,simplify,k,vv,ev,set,parallelism,int,parallelism,preconditions,check,argument,parallelism,0,parallelism,the,parallelism,must,be,greater,than,zero,this,parallelism,parallelism,return,this
Simplify -> public Simplify<K, VV, EV> setParallelism(int parallelism);1498486910;Override the operator parallelism.__@param parallelism operator parallelism_@return this;public Simplify<K, VV, EV> setParallelism(int parallelism) {_		Preconditions.checkArgument(parallelism > 0 || parallelism == PARALLELISM_DEFAULT,_			"The parallelism must be greater than zero.")___		this.parallelism = parallelism___		return this__	};override,the,operator,parallelism,param,parallelism,operator,parallelism,return,this;public,simplify,k,vv,ev,set,parallelism,int,parallelism,preconditions,check,argument,parallelism,0,parallelism,the,parallelism,must,be,greater,than,zero,this,parallelism,parallelism,return,this
Simplify -> public Simplify(boolean clipAndFlip);1464173021;Simplifies an undirected graph by adding reverse edges and removing_self-loops and duplicate edges.__When clip-and-flip is set, edges where source < target are removed_before symmetrizing the graph.__@param clipAndFlip method for generating simple graph;public Simplify(boolean clipAndFlip) {_		this.clipAndFlip = clipAndFlip__	};simplifies,an,undirected,graph,by,adding,reverse,edges,and,removing,self,loops,and,duplicate,edges,when,clip,and,flip,is,set,edges,where,source,target,are,removed,before,symmetrizing,the,graph,param,clip,and,flip,method,for,generating,simple,graph;public,simplify,boolean,clip,and,flip,this,clip,and,flip,clip,and,flip
Simplify -> public Simplify(boolean clipAndFlip);1464897660;Simplifies an undirected graph by adding reverse edges and removing_self-loops and duplicate edges.__When clip-and-flip is set, edges where source < target are removed_before symmetrizing the graph.__@param clipAndFlip method for generating simple graph;public Simplify(boolean clipAndFlip) {_		this.clipAndFlip = clipAndFlip__	};simplifies,an,undirected,graph,by,adding,reverse,edges,and,removing,self,loops,and,duplicate,edges,when,clip,and,flip,is,set,edges,where,source,target,are,removed,before,symmetrizing,the,graph,param,clip,and,flip,method,for,generating,simple,graph;public,simplify,boolean,clip,and,flip,this,clip,and,flip,clip,and,flip
Simplify -> public Simplify(boolean clipAndFlip);1467751657;Simplifies an undirected graph by adding reverse edges and removing_self-loops and duplicate edges.__When clip-and-flip is set, edges where source < target are removed_before symmetrizing the graph.__@param clipAndFlip method for generating simple graph;public Simplify(boolean clipAndFlip) {_		this.clipAndFlip = clipAndFlip__	};simplifies,an,undirected,graph,by,adding,reverse,edges,and,removing,self,loops,and,duplicate,edges,when,clip,and,flip,is,set,edges,where,source,target,are,removed,before,symmetrizing,the,graph,param,clip,and,flip,method,for,generating,simple,graph;public,simplify,boolean,clip,and,flip,this,clip,and,flip,clip,and,flip
Simplify -> public Simplify(boolean clipAndFlip);1469452167;Simplifies an undirected graph by adding reverse edges and removing_self-loops and duplicate edges.__When clip-and-flip is set, edges where source < target are removed_before symmetrizing the graph.__@param clipAndFlip method for generating simple graph;public Simplify(boolean clipAndFlip) {_		this.clipAndFlip = clipAndFlip__	};simplifies,an,undirected,graph,by,adding,reverse,edges,and,removing,self,loops,and,duplicate,edges,when,clip,and,flip,is,set,edges,where,source,target,are,removed,before,symmetrizing,the,graph,param,clip,and,flip,method,for,generating,simple,graph;public,simplify,boolean,clip,and,flip,this,clip,and,flip,clip,and,flip
Simplify -> public Simplify(boolean clipAndFlip);1472831588;Simplifies an undirected graph by adding reverse edges and removing_self-loops and duplicate edges.__When clip-and-flip is set, edges where source < target are removed_before symmetrizing the graph.__@param clipAndFlip method for generating simple graph;public Simplify(boolean clipAndFlip) {_		this.clipAndFlip = clipAndFlip__	};simplifies,an,undirected,graph,by,adding,reverse,edges,and,removing,self,loops,and,duplicate,edges,when,clip,and,flip,is,set,edges,where,source,target,are,removed,before,symmetrizing,the,graph,param,clip,and,flip,method,for,generating,simple,graph;public,simplify,boolean,clip,and,flip,this,clip,and,flip,clip,and,flip
Simplify -> public Simplify(boolean clipAndFlip);1488305420;Simplifies an undirected graph by adding reverse edges and removing_self-loops and duplicate edges.__When clip-and-flip is set, edges where source < target are removed_before symmetrizing the graph.__@param clipAndFlip method for generating simple graph;public Simplify(boolean clipAndFlip) {_		this.clipAndFlip = clipAndFlip__	};simplifies,an,undirected,graph,by,adding,reverse,edges,and,removing,self,loops,and,duplicate,edges,when,clip,and,flip,is,set,edges,where,source,target,are,removed,before,symmetrizing,the,graph,param,clip,and,flip,method,for,generating,simple,graph;public,simplify,boolean,clip,and,flip,this,clip,and,flip,clip,and,flip
Simplify -> public Simplify(boolean clipAndFlip);1495653033;Simplifies an undirected graph by adding reverse edges and removing_self-loops and duplicate edges.__<p>When clip-and-flip is set, edges where source < target are removed_before symmetrizing the graph.__@param clipAndFlip method for generating simple graph;public Simplify(boolean clipAndFlip) {_		this.clipAndFlip = clipAndFlip__	};simplifies,an,undirected,graph,by,adding,reverse,edges,and,removing,self,loops,and,duplicate,edges,p,when,clip,and,flip,is,set,edges,where,source,target,are,removed,before,symmetrizing,the,graph,param,clip,and,flip,method,for,generating,simple,graph;public,simplify,boolean,clip,and,flip,this,clip,and,flip,clip,and,flip
Simplify -> public Simplify(boolean clipAndFlip);1498486910;Simplifies an undirected graph by adding reverse edges and removing_self-loops and duplicate edges.__<p>When clip-and-flip is set, edges where source < target are removed_before symmetrizing the graph.__@param clipAndFlip method for generating simple graph;public Simplify(boolean clipAndFlip) {_		this.clipAndFlip = clipAndFlip__	};simplifies,an,undirected,graph,by,adding,reverse,edges,and,removing,self,loops,and,duplicate,edges,p,when,clip,and,flip,is,set,edges,where,source,target,are,removed,before,symmetrizing,the,graph,param,clip,and,flip,method,for,generating,simple,graph;public,simplify,boolean,clip,and,flip,this,clip,and,flip,clip,and,flip
Simplify -> public Simplify(boolean clipAndFlip);1498486910;Simplifies an undirected graph by adding reverse edges and removing_self-loops and duplicate edges.__<p>When clip-and-flip is set, edges where source < target are removed_before symmetrizing the graph.__@param clipAndFlip method for generating simple graph;public Simplify(boolean clipAndFlip) {_		this.clipAndFlip = clipAndFlip__	};simplifies,an,undirected,graph,by,adding,reverse,edges,and,removing,self,loops,and,duplicate,edges,p,when,clip,and,flip,is,set,edges,where,source,target,are,removed,before,symmetrizing,the,graph,param,clip,and,flip,method,for,generating,simple,graph;public,simplify,boolean,clip,and,flip,this,clip,and,flip,clip,and,flip
Simplify -> public Simplify(boolean clipAndFlip);1500204299;Simplifies an undirected graph by adding reverse edges and removing_self-loops and duplicate edges.__<p>When clip-and-flip is set, edges where source < target are removed_before symmetrizing the graph.__@param clipAndFlip method for generating simple graph;public Simplify(boolean clipAndFlip) {_		this.clipAndFlip = clipAndFlip__	};simplifies,an,undirected,graph,by,adding,reverse,edges,and,removing,self,loops,and,duplicate,edges,p,when,clip,and,flip,is,set,edges,where,source,target,are,removed,before,symmetrizing,the,graph,param,clip,and,flip,method,for,generating,simple,graph;public,simplify,boolean,clip,and,flip,this,clip,and,flip,clip,and,flip
Simplify -> public Simplify(boolean clipAndFlip);1501532946;Simplifies an undirected graph by adding reverse edges and removing_self-loops and duplicate edges.__<p>When clip-and-flip is set, edges where source < target are removed_before symmetrizing the graph.__@param clipAndFlip method for generating simple graph;public Simplify(boolean clipAndFlip) {_		this.clipAndFlip = clipAndFlip__	};simplifies,an,undirected,graph,by,adding,reverse,edges,and,removing,self,loops,and,duplicate,edges,p,when,clip,and,flip,is,set,edges,where,source,target,are,removed,before,symmetrizing,the,graph,param,clip,and,flip,method,for,generating,simple,graph;public,simplify,boolean,clip,and,flip,this,clip,and,flip,clip,and,flip
