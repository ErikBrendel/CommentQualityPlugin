# id;timestamp;commentText;codeText;commentWords;codeWords
EchoGraph -> public EchoGraph(ExecutionEnvironment env, long vertexCount, long vertexDegree);1493296913;An undirected {@link Graph} whose vertices have the same degree.__@param env the Flink execution environment_@param vertexCount number of vertices_@param vertexDegree degree of vertices;public EchoGraph(ExecutionEnvironment env, long vertexCount, long vertexDegree) {_		Preconditions.checkArgument(vertexCount >= MINIMUM_VERTEX_COUNT,_			"Vertex count must be at least " + MINIMUM_VERTEX_COUNT)__		Preconditions.checkArgument(vertexDegree >= MINIMUM_VERTEX_DEGREE,_			"Vertex degree must be at least " + MINIMUM_VERTEX_DEGREE)__		Preconditions.checkArgument(vertexDegree < vertexCount,_			"Vertex degree must be less than the vertex count.")__		Preconditions.checkArgument(vertexCount % 2 == 0 ^ vertexDegree % 2 == 0,_			"Vertex count or vertex degree must be an even number but not both.")___		this.env = env__		this.vertexCount = vertexCount__		this.vertexDegree = vertexDegree__	};an,undirected,link,graph,whose,vertices,have,the,same,degree,param,env,the,flink,execution,environment,param,vertex,count,number,of,vertices,param,vertex,degree,degree,of,vertices;public,echo,graph,execution,environment,env,long,vertex,count,long,vertex,degree,preconditions,check,argument,vertex,count,vertex,count,must,be,at,least,preconditions,check,argument,vertex,degree,vertex,degree,must,be,at,least,preconditions,check,argument,vertex,degree,vertex,count,vertex,degree,must,be,less,than,the,vertex,count,preconditions,check,argument,vertex,count,2,0,vertex,degree,2,0,vertex,count,or,vertex,degree,must,be,an,even,number,but,not,both,this,env,env,this,vertex,count,vertex,count,this,vertex,degree,vertex,degree
EchoGraph -> public EchoGraph(ExecutionEnvironment env, long vertexCount, long vertexDegree);1495653033;An undirected {@link Graph} whose vertices have the same degree.__@param env the Flink execution environment_@param vertexCount number of vertices_@param vertexDegree degree of vertices;public EchoGraph(ExecutionEnvironment env, long vertexCount, long vertexDegree) {_		Preconditions.checkArgument(vertexCount >= MINIMUM_VERTEX_COUNT,_			"Vertex count must be at least " + MINIMUM_VERTEX_COUNT)__		Preconditions.checkArgument(vertexDegree >= MINIMUM_VERTEX_DEGREE,_			"Vertex degree must be at least " + MINIMUM_VERTEX_DEGREE)__		Preconditions.checkArgument(vertexDegree < vertexCount,_			"Vertex degree must be less than the vertex count.")__		Preconditions.checkArgument(vertexCount % 2 == 0 ^ vertexDegree % 2 == 0,_			"Vertex count or vertex degree must be an even number but not both.")___		this.env = env__		this.vertexCount = vertexCount__		this.vertexDegree = vertexDegree__	};an,undirected,link,graph,whose,vertices,have,the,same,degree,param,env,the,flink,execution,environment,param,vertex,count,number,of,vertices,param,vertex,degree,degree,of,vertices;public,echo,graph,execution,environment,env,long,vertex,count,long,vertex,degree,preconditions,check,argument,vertex,count,vertex,count,must,be,at,least,preconditions,check,argument,vertex,degree,vertex,degree,must,be,at,least,preconditions,check,argument,vertex,degree,vertex,count,vertex,degree,must,be,less,than,the,vertex,count,preconditions,check,argument,vertex,count,2,0,vertex,degree,2,0,vertex,count,or,vertex,degree,must,be,an,even,number,but,not,both,this,env,env,this,vertex,count,vertex,count,this,vertex,degree,vertex,degree
EchoGraph -> public EchoGraph(ExecutionEnvironment env, long vertexCount, long vertexDegree);1501064632;An undirected {@link Graph} whose vertices have the same degree.__@param env the Flink execution environment_@param vertexCount number of vertices_@param vertexDegree degree of vertices;public EchoGraph(ExecutionEnvironment env, long vertexCount, long vertexDegree) {_		Preconditions.checkArgument(vertexCount >= MINIMUM_VERTEX_COUNT,_			"Vertex count must be at least " + MINIMUM_VERTEX_COUNT)__		Preconditions.checkArgument(vertexDegree >= MINIMUM_VERTEX_DEGREE,_			"Vertex degree must be at least " + MINIMUM_VERTEX_DEGREE)__		Preconditions.checkArgument(vertexDegree < vertexCount,_			"Vertex degree must be less than the vertex count.")__		Preconditions.checkArgument(vertexCount % 2 == 0 ^ vertexDegree % 2 == 0,_			"Vertex count or vertex degree must be an even number but not both.")___		this.env = env__		this.vertexCount = vertexCount__		this.vertexDegree = vertexDegree__	};an,undirected,link,graph,whose,vertices,have,the,same,degree,param,env,the,flink,execution,environment,param,vertex,count,number,of,vertices,param,vertex,degree,degree,of,vertices;public,echo,graph,execution,environment,env,long,vertex,count,long,vertex,degree,preconditions,check,argument,vertex,count,vertex,count,must,be,at,least,preconditions,check,argument,vertex,degree,vertex,degree,must,be,at,least,preconditions,check,argument,vertex,degree,vertex,count,vertex,degree,must,be,less,than,the,vertex,count,preconditions,check,argument,vertex,count,2,0,vertex,degree,2,0,vertex,count,or,vertex,degree,must,be,an,even,number,but,not,both,this,env,env,this,vertex,count,vertex,count,this,vertex,degree,vertex,degree
