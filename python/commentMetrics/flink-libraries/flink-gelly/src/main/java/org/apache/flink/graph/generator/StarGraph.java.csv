# id;timestamp;commentText;codeText;commentWords;codeWords
StarGraph -> public StarGraph(ExecutionEnvironment env, long vertexCount);1458075542;An undirected {@link Graph} containing a single central {@link Vertex} connected to all other leaf vertices.__@param env the Flink execution environment_@param vertexCount number of vertices;public StarGraph(ExecutionEnvironment env, long vertexCount) {_		if (vertexCount <= 0) {_			throw new IllegalArgumentException("Vertex count must be greater than zero")__		}__		this.env = env__		this.vertexCount = vertexCount__	};an,undirected,link,graph,containing,a,single,central,link,vertex,connected,to,all,other,leaf,vertices,param,env,the,flink,execution,environment,param,vertex,count,number,of,vertices;public,star,graph,execution,environment,env,long,vertex,count,if,vertex,count,0,throw,new,illegal,argument,exception,vertex,count,must,be,greater,than,zero,this,env,env,this,vertex,count,vertex,count
StarGraph -> public StarGraph(ExecutionEnvironment env, long vertexCount);1484681137;An undirected {@link Graph} containing a single central {@link Vertex} connected to all other leaf vertices.__@param env the Flink execution environment_@param vertexCount number of vertices;public StarGraph(ExecutionEnvironment env, long vertexCount) {_		if (vertexCount <= 0) {_			throw new IllegalArgumentException("Vertex count must be greater than zero")__		}__		this.env = env__		this.vertexCount = vertexCount__	};an,undirected,link,graph,containing,a,single,central,link,vertex,connected,to,all,other,leaf,vertices,param,env,the,flink,execution,environment,param,vertex,count,number,of,vertices;public,star,graph,execution,environment,env,long,vertex,count,if,vertex,count,0,throw,new,illegal,argument,exception,vertex,count,must,be,greater,than,zero,this,env,env,this,vertex,count,vertex,count
StarGraph -> public StarGraph(ExecutionEnvironment env, long vertexCount);1488305420;An undirected {@link Graph} containing a single central {@link Vertex} connected to all other leaf vertices.__@param env the Flink execution environment_@param vertexCount number of vertices;public StarGraph(ExecutionEnvironment env, long vertexCount) {_		Preconditions.checkArgument(vertexCount >= MINIMUM_VERTEX_COUNT,_			"Vertex count must be at least " + MINIMUM_VERTEX_COUNT)___		this.env = env__		this.vertexCount = vertexCount__	};an,undirected,link,graph,containing,a,single,central,link,vertex,connected,to,all,other,leaf,vertices,param,env,the,flink,execution,environment,param,vertex,count,number,of,vertices;public,star,graph,execution,environment,env,long,vertex,count,preconditions,check,argument,vertex,count,vertex,count,must,be,at,least,this,env,env,this,vertex,count,vertex,count
StarGraph -> public StarGraph(ExecutionEnvironment env, long vertexCount);1493134568;An undirected {@link Graph} containing a single central {@link Vertex} connected to all other leaf vertices.__@param env the Flink execution environment_@param vertexCount number of vertices;public StarGraph(ExecutionEnvironment env, long vertexCount) {_		Preconditions.checkArgument(vertexCount >= MINIMUM_VERTEX_COUNT,_			"Vertex count must be at least " + MINIMUM_VERTEX_COUNT)___		this.env = env__		this.vertexCount = vertexCount__	};an,undirected,link,graph,containing,a,single,central,link,vertex,connected,to,all,other,leaf,vertices,param,env,the,flink,execution,environment,param,vertex,count,number,of,vertices;public,star,graph,execution,environment,env,long,vertex,count,preconditions,check,argument,vertex,count,vertex,count,must,be,at,least,this,env,env,this,vertex,count,vertex,count
StarGraph -> public StarGraph(ExecutionEnvironment env, long vertexCount);1494261919;An undirected {@Graph} with {@code n} vertices where the single central_node has degree {@code n-1}, connecting to the other {@code n-1}_vertices which have degree {@code 1}.__@param env the Flink execution environment_@param vertexCount number of vertices;public StarGraph(ExecutionEnvironment env, long vertexCount) {_		Preconditions.checkArgument(vertexCount >= MINIMUM_VERTEX_COUNT,_			"Vertex count must be at least " + MINIMUM_VERTEX_COUNT)___		this.env = env__		this.vertexCount = vertexCount__	};an,undirected,graph,with,code,n,vertices,where,the,single,central,node,has,degree,code,n,1,connecting,to,the,other,code,n,1,vertices,which,have,degree,code,1,param,env,the,flink,execution,environment,param,vertex,count,number,of,vertices;public,star,graph,execution,environment,env,long,vertex,count,preconditions,check,argument,vertex,count,vertex,count,must,be,at,least,this,env,env,this,vertex,count,vertex,count
StarGraph -> public StarGraph(ExecutionEnvironment env, long vertexCount);1495653033;An undirected {@Graph} with {@code n} vertices where the single central_node has degree {@code n-1}, connecting to the other {@code n-1}_vertices which have degree {@code 1}.__@param env the Flink execution environment_@param vertexCount number of vertices;public StarGraph(ExecutionEnvironment env, long vertexCount) {_		Preconditions.checkArgument(vertexCount >= MINIMUM_VERTEX_COUNT,_			"Vertex count must be at least " + MINIMUM_VERTEX_COUNT)___		this.env = env__		this.vertexCount = vertexCount__	};an,undirected,graph,with,code,n,vertices,where,the,single,central,node,has,degree,code,n,1,connecting,to,the,other,code,n,1,vertices,which,have,degree,code,1,param,env,the,flink,execution,environment,param,vertex,count,number,of,vertices;public,star,graph,execution,environment,env,long,vertex,count,preconditions,check,argument,vertex,count,vertex,count,must,be,at,least,this,env,env,this,vertex,count,vertex,count
StarGraph -> public StarGraph(ExecutionEnvironment env, long vertexCount);1501064632;An undirected {@link Graph} with {@code n} vertices where the single_central node has degree {@code n-1}, connecting to the other {@code n-1}_vertices which have degree {@code 1}.__@param env the Flink execution environment_@param vertexCount number of vertices;public StarGraph(ExecutionEnvironment env, long vertexCount) {_		Preconditions.checkArgument(vertexCount >= MINIMUM_VERTEX_COUNT,_			"Vertex count must be at least " + MINIMUM_VERTEX_COUNT)___		this.env = env__		this.vertexCount = vertexCount__	};an,undirected,link,graph,with,code,n,vertices,where,the,single,central,node,has,degree,code,n,1,connecting,to,the,other,code,n,1,vertices,which,have,degree,code,1,param,env,the,flink,execution,environment,param,vertex,count,number,of,vertices;public,star,graph,execution,environment,env,long,vertex,count,preconditions,check,argument,vertex,count,vertex,count,must,be,at,least,this,env,env,this,vertex,count,vertex,count
