# id;timestamp;commentText;codeText;commentWords;codeWords
EdgeTargetDegree -> public EdgeTargetDegree<K, VV, EV> setParallelism(int parallelism);1462796709;Override the operator parallelism.__@param parallelism operator parallelism_@return this;public EdgeTargetDegree<K, VV, EV> setParallelism(int parallelism) {_		this.parallelism = parallelism___		return this__	};override,the,operator,parallelism,param,parallelism,operator,parallelism,return,this;public,edge,target,degree,k,vv,ev,set,parallelism,int,parallelism,this,parallelism,parallelism,return,this
EdgeTargetDegree -> public EdgeTargetDegree<K, VV, EV> setParallelism(int parallelism);1463775456;Override the operator parallelism.__@param parallelism operator parallelism_@return this;public EdgeTargetDegree<K, VV, EV> setParallelism(int parallelism) {_		this.parallelism = parallelism___		return this__	};override,the,operator,parallelism,param,parallelism,operator,parallelism,return,this;public,edge,target,degree,k,vv,ev,set,parallelism,int,parallelism,this,parallelism,parallelism,return,this
EdgeTargetDegree -> public EdgeTargetDegree<K, VV, EV> setParallelism(int parallelism);1464877349;Override the operator parallelism.__@param parallelism operator parallelism_@return this;public EdgeTargetDegree<K, VV, EV> setParallelism(int parallelism) {_		this.parallelism = parallelism___		return this__	};override,the,operator,parallelism,param,parallelism,operator,parallelism,return,this;public,edge,target,degree,k,vv,ev,set,parallelism,int,parallelism,this,parallelism,parallelism,return,this
EdgeTargetDegree -> public EdgeTargetDegree<K, VV, EV> setParallelism(int parallelism);1465304462;Override the operator parallelism.__@param parallelism operator parallelism_@return this;public EdgeTargetDegree<K, VV, EV> setParallelism(int parallelism) {_		Preconditions.checkArgument(parallelism > 0 || parallelism == PARALLELISM_DEFAULT,_			"The parallelism must be greater than zero.")___		this.parallelism = parallelism___		return this__	};override,the,operator,parallelism,param,parallelism,operator,parallelism,return,this;public,edge,target,degree,k,vv,ev,set,parallelism,int,parallelism,preconditions,check,argument,parallelism,0,parallelism,the,parallelism,must,be,greater,than,zero,this,parallelism,parallelism,return,this
EdgeTargetDegree -> public EdgeTargetDegree<K, VV, EV> setParallelism(int parallelism);1467398142;Override the operator parallelism.__@param parallelism operator parallelism_@return this;public EdgeTargetDegree<K, VV, EV> setParallelism(int parallelism) {_		Preconditions.checkArgument(parallelism > 0 || parallelism == PARALLELISM_DEFAULT,_			"The parallelism must be greater than zero.")___		this.parallelism = parallelism___		return this__	};override,the,operator,parallelism,param,parallelism,operator,parallelism,return,this;public,edge,target,degree,k,vv,ev,set,parallelism,int,parallelism,preconditions,check,argument,parallelism,0,parallelism,the,parallelism,must,be,greater,than,zero,this,parallelism,parallelism,return,this
EdgeTargetDegree -> public EdgeTargetDegree<K, VV, EV> setParallelism(int parallelism);1473368789;Override the operator parallelism.__@param parallelism operator parallelism_@return this;public EdgeTargetDegree<K, VV, EV> setParallelism(int parallelism) {_		Preconditions.checkArgument(parallelism > 0 || parallelism == PARALLELISM_DEFAULT,_			"The parallelism must be greater than zero.")___		this.parallelism = parallelism___		return this__	};override,the,operator,parallelism,param,parallelism,operator,parallelism,return,this;public,edge,target,degree,k,vv,ev,set,parallelism,int,parallelism,preconditions,check,argument,parallelism,0,parallelism,the,parallelism,must,be,greater,than,zero,this,parallelism,parallelism,return,this
EdgeTargetDegree -> public EdgeTargetDegree<K, VV, EV> setParallelism(int parallelism);1473368789;Override the operator parallelism.__@param parallelism operator parallelism_@return this;public EdgeTargetDegree<K, VV, EV> setParallelism(int parallelism) {_		Preconditions.checkArgument(parallelism > 0 || parallelism == PARALLELISM_DEFAULT,_			"The parallelism must be greater than zero.")___		this.parallelism = parallelism___		return this__	};override,the,operator,parallelism,param,parallelism,operator,parallelism,return,this;public,edge,target,degree,k,vv,ev,set,parallelism,int,parallelism,preconditions,check,argument,parallelism,0,parallelism,the,parallelism,must,be,greater,than,zero,this,parallelism,parallelism,return,this
EdgeTargetDegree -> public EdgeTargetDegree<K, VV, EV> setParallelism(int parallelism);1495819075;Override the operator parallelism.__@param parallelism operator parallelism_@return this;public EdgeTargetDegree<K, VV, EV> setParallelism(int parallelism) {_		Preconditions.checkArgument(parallelism > 0 || parallelism == PARALLELISM_DEFAULT,_			"The parallelism must be greater than zero.")___		this.parallelism = parallelism___		return this__	};override,the,operator,parallelism,param,parallelism,operator,parallelism,return,this;public,edge,target,degree,k,vv,ev,set,parallelism,int,parallelism,preconditions,check,argument,parallelism,0,parallelism,the,parallelism,must,be,greater,than,zero,this,parallelism,parallelism,return,this
EdgeTargetDegree -> public EdgeTargetDegree<K, VV, EV> setParallelism(int parallelism);1499282568;Override the operator parallelism.__@param parallelism operator parallelism_@return this;public EdgeTargetDegree<K, VV, EV> setParallelism(int parallelism) {_		Preconditions.checkArgument(parallelism > 0 || parallelism == PARALLELISM_DEFAULT,_			"The parallelism must be greater than zero.")___		this.parallelism = parallelism___		return this__	};override,the,operator,parallelism,param,parallelism,operator,parallelism,return,this;public,edge,target,degree,k,vv,ev,set,parallelism,int,parallelism,preconditions,check,argument,parallelism,0,parallelism,the,parallelism,must,be,greater,than,zero,this,parallelism,parallelism,return,this
EdgeTargetDegree -> public EdgeTargetDegree<K, VV, EV> setReduceOnSourceId(boolean reduceOnSourceId);1462796709;The degree can be counted from either the edge source or target IDs._By default the target IDs are counted. Reducing on source IDs may_optimize the algorithm if the input edge list is sorted by source ID.__@param reduceOnSourceId set to {@code true} if the input edge list_is sorted by target ID_@return this;public EdgeTargetDegree<K, VV, EV> setReduceOnSourceId(boolean reduceOnSourceId) {_		this.reduceOnSourceId = reduceOnSourceId___		return this__	};the,degree,can,be,counted,from,either,the,edge,source,or,target,ids,by,default,the,target,ids,are,counted,reducing,on,source,ids,may,optimize,the,algorithm,if,the,input,edge,list,is,sorted,by,source,id,param,reduce,on,source,id,set,to,code,true,if,the,input,edge,list,is,sorted,by,target,id,return,this;public,edge,target,degree,k,vv,ev,set,reduce,on,source,id,boolean,reduce,on,source,id,this,reduce,on,source,id,reduce,on,source,id,return,this
EdgeTargetDegree -> public EdgeTargetDegree<K, VV, EV> setReduceOnSourceId(boolean reduceOnSourceId);1463775456;The degree can be counted from either the edge source or target IDs._By default the target IDs are counted. Reducing on source IDs may_optimize the algorithm if the input edge list is sorted by source ID.__@param reduceOnSourceId set to {@code true} if the input edge list_is sorted by target ID_@return this;public EdgeTargetDegree<K, VV, EV> setReduceOnSourceId(boolean reduceOnSourceId) {_		this.reduceOnSourceId = reduceOnSourceId___		return this__	};the,degree,can,be,counted,from,either,the,edge,source,or,target,ids,by,default,the,target,ids,are,counted,reducing,on,source,ids,may,optimize,the,algorithm,if,the,input,edge,list,is,sorted,by,source,id,param,reduce,on,source,id,set,to,code,true,if,the,input,edge,list,is,sorted,by,target,id,return,this;public,edge,target,degree,k,vv,ev,set,reduce,on,source,id,boolean,reduce,on,source,id,this,reduce,on,source,id,reduce,on,source,id,return,this
EdgeTargetDegree -> public EdgeTargetDegree<K, VV, EV> setReduceOnSourceId(boolean reduceOnSourceId);1464877349;The degree can be counted from either the edge source or target IDs._By default the target IDs are counted. Reducing on source IDs may_optimize the algorithm if the input edge list is sorted by source ID.__@param reduceOnSourceId set to {@code true} if the input edge list_is sorted by target ID_@return this;public EdgeTargetDegree<K, VV, EV> setReduceOnSourceId(boolean reduceOnSourceId) {_		this.reduceOnSourceId = reduceOnSourceId___		return this__	};the,degree,can,be,counted,from,either,the,edge,source,or,target,ids,by,default,the,target,ids,are,counted,reducing,on,source,ids,may,optimize,the,algorithm,if,the,input,edge,list,is,sorted,by,source,id,param,reduce,on,source,id,set,to,code,true,if,the,input,edge,list,is,sorted,by,target,id,return,this;public,edge,target,degree,k,vv,ev,set,reduce,on,source,id,boolean,reduce,on,source,id,this,reduce,on,source,id,reduce,on,source,id,return,this
EdgeTargetDegree -> public EdgeTargetDegree<K, VV, EV> setReduceOnSourceId(boolean reduceOnSourceId);1465304462;The degree can be counted from either the edge source or target IDs._By default the target IDs are counted. Reducing on source IDs may_optimize the algorithm if the input edge list is sorted by source ID.__@param reduceOnSourceId set to {@code true} if the input edge list_is sorted by target ID_@return this;public EdgeTargetDegree<K, VV, EV> setReduceOnSourceId(boolean reduceOnSourceId) {_		this.reduceOnSourceId = reduceOnSourceId___		return this__	};the,degree,can,be,counted,from,either,the,edge,source,or,target,ids,by,default,the,target,ids,are,counted,reducing,on,source,ids,may,optimize,the,algorithm,if,the,input,edge,list,is,sorted,by,source,id,param,reduce,on,source,id,set,to,code,true,if,the,input,edge,list,is,sorted,by,target,id,return,this;public,edge,target,degree,k,vv,ev,set,reduce,on,source,id,boolean,reduce,on,source,id,this,reduce,on,source,id,reduce,on,source,id,return,this
EdgeTargetDegree -> public EdgeTargetDegree<K, VV, EV> setReduceOnSourceId(boolean reduceOnSourceId);1467398142;The degree can be counted from either the edge source or target IDs._By default the target IDs are counted. Reducing on source IDs may_optimize the algorithm if the input edge list is sorted by source ID.__@param reduceOnSourceId set to {@code true} if the input edge list_is sorted by target ID_@return this;public EdgeTargetDegree<K, VV, EV> setReduceOnSourceId(boolean reduceOnSourceId) {_		this.reduceOnSourceId.set(reduceOnSourceId)___		return this__	};the,degree,can,be,counted,from,either,the,edge,source,or,target,ids,by,default,the,target,ids,are,counted,reducing,on,source,ids,may,optimize,the,algorithm,if,the,input,edge,list,is,sorted,by,source,id,param,reduce,on,source,id,set,to,code,true,if,the,input,edge,list,is,sorted,by,target,id,return,this;public,edge,target,degree,k,vv,ev,set,reduce,on,source,id,boolean,reduce,on,source,id,this,reduce,on,source,id,set,reduce,on,source,id,return,this
EdgeTargetDegree -> public EdgeTargetDegree<K, VV, EV> setReduceOnSourceId(boolean reduceOnSourceId);1473368789;The degree can be counted from either the edge source or target IDs._By default the target IDs are counted. Reducing on source IDs may_optimize the algorithm if the input edge list is sorted by source ID.__@param reduceOnSourceId set to {@code true} if the input edge list_is sorted by target ID_@return this;public EdgeTargetDegree<K, VV, EV> setReduceOnSourceId(boolean reduceOnSourceId) {_		this.reduceOnSourceId.set(reduceOnSourceId)___		return this__	};the,degree,can,be,counted,from,either,the,edge,source,or,target,ids,by,default,the,target,ids,are,counted,reducing,on,source,ids,may,optimize,the,algorithm,if,the,input,edge,list,is,sorted,by,source,id,param,reduce,on,source,id,set,to,code,true,if,the,input,edge,list,is,sorted,by,target,id,return,this;public,edge,target,degree,k,vv,ev,set,reduce,on,source,id,boolean,reduce,on,source,id,this,reduce,on,source,id,set,reduce,on,source,id,return,this
EdgeTargetDegree -> public EdgeTargetDegree<K, VV, EV> setReduceOnSourceId(boolean reduceOnSourceId);1473368789;The degree can be counted from either the edge source or target IDs._By default the target IDs are counted. Reducing on source IDs may_optimize the algorithm if the input edge list is sorted by source ID.__@param reduceOnSourceId set to {@code true} if the input edge list_is sorted by target ID_@return this;public EdgeTargetDegree<K, VV, EV> setReduceOnSourceId(boolean reduceOnSourceId) {_		this.reduceOnSourceId.set(reduceOnSourceId)___		return this__	};the,degree,can,be,counted,from,either,the,edge,source,or,target,ids,by,default,the,target,ids,are,counted,reducing,on,source,ids,may,optimize,the,algorithm,if,the,input,edge,list,is,sorted,by,source,id,param,reduce,on,source,id,set,to,code,true,if,the,input,edge,list,is,sorted,by,target,id,return,this;public,edge,target,degree,k,vv,ev,set,reduce,on,source,id,boolean,reduce,on,source,id,this,reduce,on,source,id,set,reduce,on,source,id,return,this
EdgeTargetDegree -> public EdgeTargetDegree<K, VV, EV> setReduceOnSourceId(boolean reduceOnSourceId);1495819075;The degree can be counted from either the edge source or target IDs._By default the target IDs are counted. Reducing on source IDs may_optimize the algorithm if the input edge list is sorted by source ID.__@param reduceOnSourceId set to {@code true} if the input edge list_is sorted by target ID_@return this;public EdgeTargetDegree<K, VV, EV> setReduceOnSourceId(boolean reduceOnSourceId) {_		this.reduceOnSourceId.set(reduceOnSourceId)___		return this__	};the,degree,can,be,counted,from,either,the,edge,source,or,target,ids,by,default,the,target,ids,are,counted,reducing,on,source,ids,may,optimize,the,algorithm,if,the,input,edge,list,is,sorted,by,source,id,param,reduce,on,source,id,set,to,code,true,if,the,input,edge,list,is,sorted,by,target,id,return,this;public,edge,target,degree,k,vv,ev,set,reduce,on,source,id,boolean,reduce,on,source,id,this,reduce,on,source,id,set,reduce,on,source,id,return,this
EdgeTargetDegree -> public EdgeTargetDegree<K, VV, EV> setReduceOnSourceId(boolean reduceOnSourceId);1499282568;The degree can be counted from either the edge source or target IDs._By default the target IDs are counted. Reducing on source IDs may_optimize the algorithm if the input edge list is sorted by source ID.__@param reduceOnSourceId set to {@code true} if the input edge list_is sorted by target ID_@return this;public EdgeTargetDegree<K, VV, EV> setReduceOnSourceId(boolean reduceOnSourceId) {_		this.reduceOnSourceId.set(reduceOnSourceId)___		return this__	};the,degree,can,be,counted,from,either,the,edge,source,or,target,ids,by,default,the,target,ids,are,counted,reducing,on,source,ids,may,optimize,the,algorithm,if,the,input,edge,list,is,sorted,by,source,id,param,reduce,on,source,id,set,to,code,true,if,the,input,edge,list,is,sorted,by,target,id,return,this;public,edge,target,degree,k,vv,ev,set,reduce,on,source,id,boolean,reduce,on,source,id,this,reduce,on,source,id,set,reduce,on,source,id,return,this
EdgeTargetDegree -> public EdgeTargetDegree<K, VV, EV> setReduceOnSourceId(boolean reduceOnSourceId);1499777483;The degree can be counted from either the edge source or target IDs._By default the target IDs are counted. Reducing on source IDs may_optimize the algorithm if the input edge list is sorted by source ID.__@param reduceOnSourceId set to {@code true} if the input edge list_is sorted by target ID_@return this;public EdgeTargetDegree<K, VV, EV> setReduceOnSourceId(boolean reduceOnSourceId) {_		this.reduceOnSourceId.set(reduceOnSourceId)___		return this__	};the,degree,can,be,counted,from,either,the,edge,source,or,target,ids,by,default,the,target,ids,are,counted,reducing,on,source,ids,may,optimize,the,algorithm,if,the,input,edge,list,is,sorted,by,source,id,param,reduce,on,source,id,set,to,code,true,if,the,input,edge,list,is,sorted,by,target,id,return,this;public,edge,target,degree,k,vv,ev,set,reduce,on,source,id,boolean,reduce,on,source,id,this,reduce,on,source,id,set,reduce,on,source,id,return,this
EdgeTargetDegree -> public EdgeTargetDegree<K, VV, EV> setReduceOnSourceId(boolean reduceOnSourceId);1502111816;The degree can be counted from either the edge source or target IDs._By default the target IDs are counted. Reducing on source IDs may_optimize the algorithm if the input edge list is sorted by source ID.__@param reduceOnSourceId set to {@code true} if the input edge list_is sorted by target ID_@return this;public EdgeTargetDegree<K, VV, EV> setReduceOnSourceId(boolean reduceOnSourceId) {_		this.reduceOnSourceId.set(reduceOnSourceId)___		return this__	};the,degree,can,be,counted,from,either,the,edge,source,or,target,ids,by,default,the,target,ids,are,counted,reducing,on,source,ids,may,optimize,the,algorithm,if,the,input,edge,list,is,sorted,by,source,id,param,reduce,on,source,id,set,to,code,true,if,the,input,edge,list,is,sorted,by,target,id,return,this;public,edge,target,degree,k,vv,ev,set,reduce,on,source,id,boolean,reduce,on,source,id,this,reduce,on,source,id,set,reduce,on,source,id,return,this
