# id;timestamp;commentText;codeText;commentWords;codeWords
EmptyGraph -> public EmptyGraph(ExecutionEnvironment env, long vertexCount);1460571929;The {@link Graph} containing no edges.__@param env the Flink execution environment_@param vertexCount number of vertices;public EmptyGraph(ExecutionEnvironment env, long vertexCount) {_		if (vertexCount <= 0) {_			throw new IllegalArgumentException("Vertex count must be greater than zero")__		}__		this.env = env__		this.vertexCount = vertexCount__	};the,link,graph,containing,no,edges,param,env,the,flink,execution,environment,param,vertex,count,number,of,vertices;public,empty,graph,execution,environment,env,long,vertex,count,if,vertex,count,0,throw,new,illegal,argument,exception,vertex,count,must,be,greater,than,zero,this,env,env,this,vertex,count,vertex,count
EmptyGraph -> public EmptyGraph(ExecutionEnvironment env, long vertexCount);1484685504;The {@link Graph} containing no edges.__@param env the Flink execution environment_@param vertexCount number of vertices;public EmptyGraph(ExecutionEnvironment env, long vertexCount) {_		if (vertexCount <= 0) {_			throw new IllegalArgumentException("Vertex count must be greater than zero")__		}__		this.env = env__		this.vertexCount = vertexCount__	};the,link,graph,containing,no,edges,param,env,the,flink,execution,environment,param,vertex,count,number,of,vertices;public,empty,graph,execution,environment,env,long,vertex,count,if,vertex,count,0,throw,new,illegal,argument,exception,vertex,count,must,be,greater,than,zero,this,env,env,this,vertex,count,vertex,count
EmptyGraph -> public EmptyGraph(ExecutionEnvironment env, long vertexCount);1489068942;The {@link Graph} containing no edges.__@param env the Flink execution environment_@param vertexCount number of vertices;public EmptyGraph(ExecutionEnvironment env, long vertexCount) {_		Preconditions.checkArgument(vertexCount >= MINIMUM_VERTEX_COUNT,_			"Vertex count must be at least " + MINIMUM_VERTEX_COUNT)___		this.env = env__		this.vertexCount = vertexCount__	};the,link,graph,containing,no,edges,param,env,the,flink,execution,environment,param,vertex,count,number,of,vertices;public,empty,graph,execution,environment,env,long,vertex,count,preconditions,check,argument,vertex,count,vertex,count,must,be,at,least,this,env,env,this,vertex,count,vertex,count
EmptyGraph -> public EmptyGraph(ExecutionEnvironment env, long vertexCount);1494520945;The {@link Graph} containing no edges.__@param env the Flink execution environment_@param vertexCount number of vertices;public EmptyGraph(ExecutionEnvironment env, long vertexCount) {_		Preconditions.checkArgument(vertexCount >= MINIMUM_VERTEX_COUNT,_			"Vertex count must be at least " + MINIMUM_VERTEX_COUNT)___		this.env = env__		this.vertexCount = vertexCount__	};the,link,graph,containing,no,edges,param,env,the,flink,execution,environment,param,vertex,count,number,of,vertices;public,empty,graph,execution,environment,env,long,vertex,count,preconditions,check,argument,vertex,count,vertex,count,must,be,at,least,this,env,env,this,vertex,count,vertex,count
EmptyGraph -> public EmptyGraph(ExecutionEnvironment env, long vertexCount);1495819075;The {@link Graph} containing no edges.__@param env the Flink execution environment_@param vertexCount number of vertices;public EmptyGraph(ExecutionEnvironment env, long vertexCount) {_		Preconditions.checkArgument(vertexCount >= MINIMUM_VERTEX_COUNT,_			"Vertex count must be at least " + MINIMUM_VERTEX_COUNT)___		this.env = env__		this.vertexCount = vertexCount__	};the,link,graph,containing,no,edges,param,env,the,flink,execution,environment,param,vertex,count,number,of,vertices;public,empty,graph,execution,environment,env,long,vertex,count,preconditions,check,argument,vertex,count,vertex,count,must,be,at,least,this,env,env,this,vertex,count,vertex,count
EmptyGraph -> public EmptyGraph(ExecutionEnvironment env, long vertexCount);1505445925;The {@link Graph} containing no edges.__@param env the Flink execution environment_@param vertexCount number of vertices;public EmptyGraph(ExecutionEnvironment env, long vertexCount) {_		Preconditions.checkArgument(vertexCount >= MINIMUM_VERTEX_COUNT,_			"Vertex count must be at least " + MINIMUM_VERTEX_COUNT)___		this.env = env__		this.vertexCount = vertexCount__	};the,link,graph,containing,no,edges,param,env,the,flink,execution,environment,param,vertex,count,number,of,vertices;public,empty,graph,execution,environment,env,long,vertex,count,preconditions,check,argument,vertex,count,vertex,count,must,be,at,least,this,env,env,this,vertex,count,vertex,count
