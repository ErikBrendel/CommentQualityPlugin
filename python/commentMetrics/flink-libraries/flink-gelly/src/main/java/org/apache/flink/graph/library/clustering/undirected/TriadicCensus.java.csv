# id;timestamp;commentText;codeText;commentWords;codeWords
TriadicCensus -> Result -> public BigInteger[] getCounts();1477509530;Get the array of counts.__The order of the counts is from least to most connected:_03, 12, 21, 30__@return array of counts;public BigInteger[] getCounts() {_			return counts__		};get,the,array,of,counts,the,order,of,the,counts,is,from,least,to,most,connected,03,12,21,30,return,array,of,counts;public,big,integer,get,counts,return,counts
TriadicCensus -> Result -> public BigInteger[] getCounts();1477924473;Get the array of counts.__The order of the counts is from least to most connected:_03, 12, 21, 30__@return array of counts;public BigInteger[] getCounts() {_			return counts__		};get,the,array,of,counts,the,order,of,the,counts,is,from,least,to,most,connected,03,12,21,30,return,array,of,counts;public,big,integer,get,counts,return,counts
TriadicCensus -> Result -> public BigInteger[] getCounts();1487885205;Get the array of counts.__The order of the counts is from least to most connected:_03, 12, 21, 30__@return array of counts;public BigInteger[] getCounts() {_			return counts__		};get,the,array,of,counts,the,order,of,the,counts,is,from,least,to,most,connected,03,12,21,30,return,array,of,counts;public,big,integer,get,counts,return,counts
TriadicCensus -> Result -> public BigInteger[] getCounts();1488305420;Get the array of counts.__The order of the counts is from least to most connected:_03, 12, 21, 30__@return array of counts;public BigInteger[] getCounts() {_			return counts__		};get,the,array,of,counts,the,order,of,the,counts,is,from,least,to,most,connected,03,12,21,30,return,array,of,counts;public,big,integer,get,counts,return,counts
TriadicCensus -> Result -> public BigInteger[] getCounts();1495653033;Get the array of counts.__<p>The order of the counts is from least to most connected:_03, 12, 21, 30__@return array of counts;public BigInteger[] getCounts() {_			return counts__		};get,the,array,of,counts,p,the,order,of,the,counts,is,from,least,to,most,connected,03,12,21,30,return,array,of,counts;public,big,integer,get,counts,return,counts
TriadicCensus -> Result -> public BigInteger[] getCounts();1498486910;Get the array of counts.__<p>The order of the counts is from least to most connected:_03, 12, 21, 30__@return array of counts;public BigInteger[] getCounts() {_			return counts__		};get,the,array,of,counts,p,the,order,of,the,counts,is,from,least,to,most,connected,03,12,21,30,return,array,of,counts;public,big,integer,get,counts,return,counts
TriadicCensus -> Result -> public BigInteger[] getCounts();1501064632;Get the array of counts.__<p>The order of the counts is from least to most connected:_03, 12, 21, 30__@return array of counts;public BigInteger[] getCounts() {_			return counts__		};get,the,array,of,counts,p,the,order,of,the,counts,is,from,least,to,most,connected,03,12,21,30,return,array,of,counts;public,big,integer,get,counts,return,counts
TriadicCensus -> Result -> public BigInteger getCount30();1477509530;Get the count of "30" triads which have three edges among the vertices_and form a closed triplet, a triangle.__@return count of "30" triads;public BigInteger getCount30() {_			return counts[3]__		};get,the,count,of,30,triads,which,have,three,edges,among,the,vertices,and,form,a,closed,triplet,a,triangle,return,count,of,30,triads;public,big,integer,get,count30,return,counts,3
TriadicCensus -> Result -> public BigInteger getCount30();1477924473;Get the count of "30" triads which have three edges among the vertices_and form a closed triplet, a triangle.__@return count of "30" triads;public BigInteger getCount30() {_			return counts[3]__		};get,the,count,of,30,triads,which,have,three,edges,among,the,vertices,and,form,a,closed,triplet,a,triangle,return,count,of,30,triads;public,big,integer,get,count30,return,counts,3
TriadicCensus -> Result -> public BigInteger getCount30();1487885205;Get the count of "30" triads which have three edges among the vertices_and form a closed triplet, a triangle.__@return count of "30" triads;public BigInteger getCount30() {_			return counts[3]__		};get,the,count,of,30,triads,which,have,three,edges,among,the,vertices,and,form,a,closed,triplet,a,triangle,return,count,of,30,triads;public,big,integer,get,count30,return,counts,3
TriadicCensus -> Result -> public BigInteger getCount30();1488305420;Get the count of "30" triads which have three edges among the vertices_and form a closed triplet, a triangle.__@return count of "30" triads;public BigInteger getCount30() {_			return counts[3]__		};get,the,count,of,30,triads,which,have,three,edges,among,the,vertices,and,form,a,closed,triplet,a,triangle,return,count,of,30,triads;public,big,integer,get,count30,return,counts,3
TriadicCensus -> Result -> public BigInteger getCount30();1495653033;Get the count of "30" triads which have three edges among the vertices_and form a closed triplet, a triangle.__@return count of "30" triads;public BigInteger getCount30() {_			return counts[3]__		};get,the,count,of,30,triads,which,have,three,edges,among,the,vertices,and,form,a,closed,triplet,a,triangle,return,count,of,30,triads;public,big,integer,get,count30,return,counts,3
TriadicCensus -> Result -> public BigInteger getCount30();1498486910;Get the count of "30" triads which have three edges among the vertices_and form a closed triplet, a triangle.__@return count of "30" triads;public BigInteger getCount30() {_			return counts[3]__		};get,the,count,of,30,triads,which,have,three,edges,among,the,vertices,and,form,a,closed,triplet,a,triangle,return,count,of,30,triads;public,big,integer,get,count30,return,counts,3
TriadicCensus -> Result -> public BigInteger getCount30();1501064632;Get the count of "30" triads which have three edges among the vertices_and form a closed triplet, a triangle.__@return count of "30" triads;public BigInteger getCount30() {_			return counts[3]__		};get,the,count,of,30,triads,which,have,three,edges,among,the,vertices,and,form,a,closed,triplet,a,triangle,return,count,of,30,triads;public,big,integer,get,count30,return,counts,3
TriadicCensus -> Result -> public BigInteger getCount21();1477509530;Get the count of "21" triads which have two edges among the vertices_and form a open triplet.__@return count of "21" triads;public BigInteger getCount21() {_			return counts[2]__		};get,the,count,of,21,triads,which,have,two,edges,among,the,vertices,and,form,a,open,triplet,return,count,of,21,triads;public,big,integer,get,count21,return,counts,2
TriadicCensus -> Result -> public BigInteger getCount21();1477924473;Get the count of "21" triads which have two edges among the vertices_and form a open triplet.__@return count of "21" triads;public BigInteger getCount21() {_			return counts[2]__		};get,the,count,of,21,triads,which,have,two,edges,among,the,vertices,and,form,a,open,triplet,return,count,of,21,triads;public,big,integer,get,count21,return,counts,2
TriadicCensus -> Result -> public BigInteger getCount21();1487885205;Get the count of "21" triads which have two edges among the vertices_and form a open triplet.__@return count of "21" triads;public BigInteger getCount21() {_			return counts[2]__		};get,the,count,of,21,triads,which,have,two,edges,among,the,vertices,and,form,a,open,triplet,return,count,of,21,triads;public,big,integer,get,count21,return,counts,2
TriadicCensus -> Result -> public BigInteger getCount21();1488305420;Get the count of "21" triads which have two edges among the vertices_and form a open triplet.__@return count of "21" triads;public BigInteger getCount21() {_			return counts[2]__		};get,the,count,of,21,triads,which,have,two,edges,among,the,vertices,and,form,a,open,triplet,return,count,of,21,triads;public,big,integer,get,count21,return,counts,2
TriadicCensus -> Result -> public BigInteger getCount21();1495653033;Get the count of "21" triads which have two edges among the vertices_and form a open triplet.__@return count of "21" triads;public BigInteger getCount21() {_			return counts[2]__		};get,the,count,of,21,triads,which,have,two,edges,among,the,vertices,and,form,a,open,triplet,return,count,of,21,triads;public,big,integer,get,count21,return,counts,2
TriadicCensus -> Result -> public BigInteger getCount21();1498486910;Get the count of "21" triads which have two edges among the vertices_and form a open triplet.__@return count of "21" triads;public BigInteger getCount21() {_			return counts[2]__		};get,the,count,of,21,triads,which,have,two,edges,among,the,vertices,and,form,a,open,triplet,return,count,of,21,triads;public,big,integer,get,count21,return,counts,2
TriadicCensus -> Result -> public BigInteger getCount21();1501064632;Get the count of "21" triads which have two edges among the vertices_and form a open triplet.__@return count of "21" triads;public BigInteger getCount21() {_			return counts[2]__		};get,the,count,of,21,triads,which,have,two,edges,among,the,vertices,and,form,a,open,triplet,return,count,of,21,triads;public,big,integer,get,count21,return,counts,2
TriadicCensus -> Result -> public BigInteger getCount03();1477509530;Get the count of "03" triads which have zero connecting vertices.__@return count of "03" triads;public BigInteger getCount03() {_			return counts[0]__		};get,the,count,of,03,triads,which,have,zero,connecting,vertices,return,count,of,03,triads;public,big,integer,get,count03,return,counts,0
TriadicCensus -> Result -> public BigInteger getCount03();1477924473;Get the count of "03" triads which have zero connecting vertices.__@return count of "03" triads;public BigInteger getCount03() {_			return counts[0]__		};get,the,count,of,03,triads,which,have,zero,connecting,vertices,return,count,of,03,triads;public,big,integer,get,count03,return,counts,0
TriadicCensus -> Result -> public BigInteger getCount03();1487885205;Get the count of "03" triads which have zero connecting vertices.__@return count of "03" triads;public BigInteger getCount03() {_			return counts[0]__		};get,the,count,of,03,triads,which,have,zero,connecting,vertices,return,count,of,03,triads;public,big,integer,get,count03,return,counts,0
TriadicCensus -> Result -> public BigInteger getCount03();1488305420;Get the count of "03" triads which have zero connecting vertices.__@return count of "03" triads;public BigInteger getCount03() {_			return counts[0]__		};get,the,count,of,03,triads,which,have,zero,connecting,vertices,return,count,of,03,triads;public,big,integer,get,count03,return,counts,0
TriadicCensus -> Result -> public BigInteger getCount03();1495653033;Get the count of "03" triads which have zero connecting vertices.__@return count of "03" triads;public BigInteger getCount03() {_			return counts[0]__		};get,the,count,of,03,triads,which,have,zero,connecting,vertices,return,count,of,03,triads;public,big,integer,get,count03,return,counts,0
TriadicCensus -> Result -> public BigInteger getCount03();1498486910;Get the count of "03" triads which have zero connecting vertices.__@return count of "03" triads;public BigInteger getCount03() {_			return counts[0]__		};get,the,count,of,03,triads,which,have,zero,connecting,vertices,return,count,of,03,triads;public,big,integer,get,count03,return,counts,0
TriadicCensus -> Result -> public BigInteger getCount03();1501064632;Get the count of "03" triads which have zero connecting vertices.__@return count of "03" triads;public BigInteger getCount03() {_			return counts[0]__		};get,the,count,of,03,triads,which,have,zero,connecting,vertices,return,count,of,03,triads;public,big,integer,get,count03,return,counts,0
TriadicCensus -> Result -> public BigInteger getCount12();1477509530;Get the count of "12" triads which have one edge among the vertices.__@return count of "12" triads;public BigInteger getCount12() {_			return counts[1]__		};get,the,count,of,12,triads,which,have,one,edge,among,the,vertices,return,count,of,12,triads;public,big,integer,get,count12,return,counts,1
TriadicCensus -> Result -> public BigInteger getCount12();1477924473;Get the count of "12" triads which have one edge among the vertices.__@return count of "12" triads;public BigInteger getCount12() {_			return counts[1]__		};get,the,count,of,12,triads,which,have,one,edge,among,the,vertices,return,count,of,12,triads;public,big,integer,get,count12,return,counts,1
TriadicCensus -> Result -> public BigInteger getCount12();1487885205;Get the count of "12" triads which have one edge among the vertices.__@return count of "12" triads;public BigInteger getCount12() {_			return counts[1]__		};get,the,count,of,12,triads,which,have,one,edge,among,the,vertices,return,count,of,12,triads;public,big,integer,get,count12,return,counts,1
TriadicCensus -> Result -> public BigInteger getCount12();1488305420;Get the count of "12" triads which have one edge among the vertices.__@return count of "12" triads;public BigInteger getCount12() {_			return counts[1]__		};get,the,count,of,12,triads,which,have,one,edge,among,the,vertices,return,count,of,12,triads;public,big,integer,get,count12,return,counts,1
TriadicCensus -> Result -> public BigInteger getCount12();1495653033;Get the count of "12" triads which have one edge among the vertices.__@return count of "12" triads;public BigInteger getCount12() {_			return counts[1]__		};get,the,count,of,12,triads,which,have,one,edge,among,the,vertices,return,count,of,12,triads;public,big,integer,get,count12,return,counts,1
TriadicCensus -> Result -> public BigInteger getCount12();1498486910;Get the count of "12" triads which have one edge among the vertices.__@return count of "12" triads;public BigInteger getCount12() {_			return counts[1]__		};get,the,count,of,12,triads,which,have,one,edge,among,the,vertices,return,count,of,12,triads;public,big,integer,get,count12,return,counts,1
TriadicCensus -> Result -> public BigInteger getCount12();1501064632;Get the count of "12" triads which have one edge among the vertices.__@return count of "12" triads;public BigInteger getCount12() {_			return counts[1]__		};get,the,count,of,12,triads,which,have,one,edge,among,the,vertices,return,count,of,12,triads;public,big,integer,get,count12,return,counts,1
TriadicCensus -> public TriadicCensus<K, VV, EV> setLittleParallelism(int littleParallelism);1477509530;Override the parallelism of operators processing small amounts of data.__@param littleParallelism operator parallelism_@return this;public TriadicCensus<K, VV, EV> setLittleParallelism(int littleParallelism) {_		this.littleParallelism = littleParallelism___		return this__	};override,the,parallelism,of,operators,processing,small,amounts,of,data,param,little,parallelism,operator,parallelism,return,this;public,triadic,census,k,vv,ev,set,little,parallelism,int,little,parallelism,this,little,parallelism,little,parallelism,return,this
TriadicCensus -> public TriadicCensus<K, VV, EV> setLittleParallelism(int littleParallelism);1477924473;Override the parallelism of operators processing small amounts of data.__@param littleParallelism operator parallelism_@return this;public TriadicCensus<K, VV, EV> setLittleParallelism(int littleParallelism) {_		this.littleParallelism = littleParallelism___		return this__	};override,the,parallelism,of,operators,processing,small,amounts,of,data,param,little,parallelism,operator,parallelism,return,this;public,triadic,census,k,vv,ev,set,little,parallelism,int,little,parallelism,this,little,parallelism,little,parallelism,return,this
TriadicCensus -> public TriadicCensus<K, VV, EV> setLittleParallelism(int littleParallelism);1487885205;Override the parallelism of operators processing small amounts of data.__@param littleParallelism operator parallelism_@return this;public TriadicCensus<K, VV, EV> setLittleParallelism(int littleParallelism) {_		this.littleParallelism = littleParallelism___		return this__	};override,the,parallelism,of,operators,processing,small,amounts,of,data,param,little,parallelism,operator,parallelism,return,this;public,triadic,census,k,vv,ev,set,little,parallelism,int,little,parallelism,this,little,parallelism,little,parallelism,return,this
TriadicCensus -> public TriadicCensus<K, VV, EV> setLittleParallelism(int littleParallelism);1488305420;Override the parallelism of operators processing small amounts of data.__@param littleParallelism operator parallelism_@return this;public TriadicCensus<K, VV, EV> setLittleParallelism(int littleParallelism) {_		this.littleParallelism = littleParallelism___		return this__	};override,the,parallelism,of,operators,processing,small,amounts,of,data,param,little,parallelism,operator,parallelism,return,this;public,triadic,census,k,vv,ev,set,little,parallelism,int,little,parallelism,this,little,parallelism,little,parallelism,return,this
TriadicCensus -> public TriadicCensus<K, VV, EV> setLittleParallelism(int littleParallelism);1495653033;Override the parallelism of operators processing small amounts of data.__@param littleParallelism operator parallelism_@return this;public TriadicCensus<K, VV, EV> setLittleParallelism(int littleParallelism) {_		this.littleParallelism = littleParallelism___		return this__	};override,the,parallelism,of,operators,processing,small,amounts,of,data,param,little,parallelism,operator,parallelism,return,this;public,triadic,census,k,vv,ev,set,little,parallelism,int,little,parallelism,this,little,parallelism,little,parallelism,return,this
