# id;timestamp;commentText;codeText;commentWords;codeWords
TriangleListing -> Result -> public Result(T value0, T value1, T value2, ByteValue value3);1466789678;Populates parent tuple with constructor parameters.__@param value0 1st triangle vertex ID_@param value1 2nd triangle vertex ID_@param value2 3rd triangle vertex ID_@param value3 bitmask indicating presence of six possible edges between triangle vertices;public Result(T value0, T value1, T value2, ByteValue value3) {_			super(value0, value1, value2, value3)__		};populates,parent,tuple,with,constructor,parameters,param,value0,1st,triangle,vertex,id,param,value1,2nd,triangle,vertex,id,param,value2,3rd,triangle,vertex,id,param,value3,bitmask,indicating,presence,of,six,possible,edges,between,triangle,vertices;public,result,t,value0,t,value1,t,value2,byte,value,value3,super,value0,value1,value2,value3
TriangleListing -> Result -> public Result(T value0, T value1, T value2, ByteValue value3);1467398142;Populates parent tuple with constructor parameters.__@param value0 1st triangle vertex ID_@param value1 2nd triangle vertex ID_@param value2 3rd triangle vertex ID_@param value3 bitmask indicating presence of six possible edges between triangle vertices;public Result(T value0, T value1, T value2, ByteValue value3) {_			super(value0, value1, value2, value3)__		};populates,parent,tuple,with,constructor,parameters,param,value0,1st,triangle,vertex,id,param,value1,2nd,triangle,vertex,id,param,value2,3rd,triangle,vertex,id,param,value3,bitmask,indicating,presence,of,six,possible,edges,between,triangle,vertices;public,result,t,value0,t,value1,t,value2,byte,value,value3,super,value0,value1,value2,value3
TriangleListing -> Result -> public Result(T value0, T value1, T value2, ByteValue value3);1473368789;Populates parent tuple with constructor parameters.__@param value0 1st triangle vertex ID_@param value1 2nd triangle vertex ID_@param value2 3rd triangle vertex ID_@param value3 bitmask indicating presence of six possible edges between triangle vertices;public Result(T value0, T value1, T value2, ByteValue value3) {_			super(value0, value1, value2, value3)__		};populates,parent,tuple,with,constructor,parameters,param,value0,1st,triangle,vertex,id,param,value1,2nd,triangle,vertex,id,param,value2,3rd,triangle,vertex,id,param,value3,bitmask,indicating,presence,of,six,possible,edges,between,triangle,vertices;public,result,t,value0,t,value1,t,value2,byte,value,value3,super,value0,value1,value2,value3
TriangleListing -> Result -> public Result(T value0, T value1, T value2, ByteValue value3);1473368789;Populates parent tuple with constructor parameters.__@param value0 1st triangle vertex ID_@param value1 2nd triangle vertex ID_@param value2 3rd triangle vertex ID_@param value3 bitmask indicating presence of six possible edges between triangle vertices;public Result(T value0, T value1, T value2, ByteValue value3) {_			super(value0, value1, value2, value3)__		};populates,parent,tuple,with,constructor,parameters,param,value0,1st,triangle,vertex,id,param,value1,2nd,triangle,vertex,id,param,value2,3rd,triangle,vertex,id,param,value3,bitmask,indicating,presence,of,six,possible,edges,between,triangle,vertices;public,result,t,value0,t,value1,t,value2,byte,value,value3,super,value0,value1,value2,value3
TriangleListing -> Result -> public Result(T value0, T value1, T value2, ByteValue value3);1485176584;Populates parent tuple with constructor parameters.__@param value0 1st triangle vertex ID_@param value1 2nd triangle vertex ID_@param value2 3rd triangle vertex ID_@param value3 bitmask indicating presence of six possible edges between triangle vertices;public Result(T value0, T value1, T value2, ByteValue value3) {_			super(value0, value1, value2, value3)__		};populates,parent,tuple,with,constructor,parameters,param,value0,1st,triangle,vertex,id,param,value1,2nd,triangle,vertex,id,param,value2,3rd,triangle,vertex,id,param,value3,bitmask,indicating,presence,of,six,possible,edges,between,triangle,vertices;public,result,t,value0,t,value1,t,value2,byte,value,value3,super,value0,value1,value2,value3
TriangleListing -> Result -> public Result(T value0, T value1, T value2, ByteValue value3);1488490978;Populates parent tuple with constructor parameters.__@param value0 1st triangle vertex ID_@param value1 2nd triangle vertex ID_@param value2 3rd triangle vertex ID_@param value3 bitmask indicating presence of six possible edges between triangle vertices;public Result(T value0, T value1, T value2, ByteValue value3) {_			super(value0, value1, value2, value3)__		};populates,parent,tuple,with,constructor,parameters,param,value0,1st,triangle,vertex,id,param,value1,2nd,triangle,vertex,id,param,value2,3rd,triangle,vertex,id,param,value3,bitmask,indicating,presence,of,six,possible,edges,between,triangle,vertices;public,result,t,value0,t,value1,t,value2,byte,value,value3,super,value0,value1,value2,value3
TriangleListing -> public TriangleListing<K, VV, EV> setLittleParallelism(int littleParallelism);1466789678;Override the parallelism of operators processing small amounts of data.__@param littleParallelism operator parallelism_@return this;public TriangleListing<K, VV, EV> setLittleParallelism(int littleParallelism) {_		Preconditions.checkArgument(littleParallelism > 0 || littleParallelism == PARALLELISM_DEFAULT,_			"The parallelism must be greater than zero.")___		this.littleParallelism = littleParallelism___		return this__	};override,the,parallelism,of,operators,processing,small,amounts,of,data,param,little,parallelism,operator,parallelism,return,this;public,triangle,listing,k,vv,ev,set,little,parallelism,int,little,parallelism,preconditions,check,argument,little,parallelism,0,little,parallelism,the,parallelism,must,be,greater,than,zero,this,little,parallelism,little,parallelism,return,this
TriangleListing -> public TriangleListing<K, VV, EV> setLittleParallelism(int littleParallelism);1467398142;Override the parallelism of operators processing small amounts of data.__@param littleParallelism operator parallelism_@return this;public TriangleListing<K, VV, EV> setLittleParallelism(int littleParallelism) {_		Preconditions.checkArgument(littleParallelism > 0 || littleParallelism == PARALLELISM_DEFAULT,_			"The parallelism must be greater than zero.")___		this.littleParallelism = littleParallelism___		return this__	};override,the,parallelism,of,operators,processing,small,amounts,of,data,param,little,parallelism,operator,parallelism,return,this;public,triangle,listing,k,vv,ev,set,little,parallelism,int,little,parallelism,preconditions,check,argument,little,parallelism,0,little,parallelism,the,parallelism,must,be,greater,than,zero,this,little,parallelism,little,parallelism,return,this
TriangleListing -> public TriangleListing<K, VV, EV> setLittleParallelism(int littleParallelism);1473368789;Override the parallelism of operators processing small amounts of data.__@param littleParallelism operator parallelism_@return this;public TriangleListing<K, VV, EV> setLittleParallelism(int littleParallelism) {_		Preconditions.checkArgument(littleParallelism > 0 || littleParallelism == PARALLELISM_DEFAULT,_			"The parallelism must be greater than zero.")___		this.littleParallelism = littleParallelism___		return this__	};override,the,parallelism,of,operators,processing,small,amounts,of,data,param,little,parallelism,operator,parallelism,return,this;public,triangle,listing,k,vv,ev,set,little,parallelism,int,little,parallelism,preconditions,check,argument,little,parallelism,0,little,parallelism,the,parallelism,must,be,greater,than,zero,this,little,parallelism,little,parallelism,return,this
TriangleListing -> public TriangleListing<K, VV, EV> setLittleParallelism(int littleParallelism);1473368789;Override the parallelism of operators processing small amounts of data.__@param littleParallelism operator parallelism_@return this;public TriangleListing<K, VV, EV> setLittleParallelism(int littleParallelism) {_		Preconditions.checkArgument(littleParallelism > 0 || littleParallelism == PARALLELISM_DEFAULT,_			"The parallelism must be greater than zero.")___		this.littleParallelism = littleParallelism___		return this__	};override,the,parallelism,of,operators,processing,small,amounts,of,data,param,little,parallelism,operator,parallelism,return,this;public,triangle,listing,k,vv,ev,set,little,parallelism,int,little,parallelism,preconditions,check,argument,little,parallelism,0,little,parallelism,the,parallelism,must,be,greater,than,zero,this,little,parallelism,little,parallelism,return,this
TriangleListing -> public TriangleListing<K, VV, EV> setLittleParallelism(int littleParallelism);1485176584;Override the parallelism of operators processing small amounts of data.__@param littleParallelism operator parallelism_@return this;public TriangleListing<K, VV, EV> setLittleParallelism(int littleParallelism) {_		Preconditions.checkArgument(littleParallelism > 0 || littleParallelism == PARALLELISM_DEFAULT,_			"The parallelism must be greater than zero.")___		this.littleParallelism = littleParallelism___		return this__	};override,the,parallelism,of,operators,processing,small,amounts,of,data,param,little,parallelism,operator,parallelism,return,this;public,triangle,listing,k,vv,ev,set,little,parallelism,int,little,parallelism,preconditions,check,argument,little,parallelism,0,little,parallelism,the,parallelism,must,be,greater,than,zero,this,little,parallelism,little,parallelism,return,this
TriangleListing -> public TriangleListing<K, VV, EV> setLittleParallelism(int littleParallelism);1488490978;Override the parallelism of operators processing small amounts of data.__@param littleParallelism operator parallelism_@return this;public TriangleListing<K, VV, EV> setLittleParallelism(int littleParallelism) {_		Preconditions.checkArgument(littleParallelism > 0 || littleParallelism == PARALLELISM_DEFAULT,_			"The parallelism must be greater than zero.")___		this.littleParallelism = littleParallelism___		return this__	};override,the,parallelism,of,operators,processing,small,amounts,of,data,param,little,parallelism,operator,parallelism,return,this;public,triangle,listing,k,vv,ev,set,little,parallelism,int,little,parallelism,preconditions,check,argument,little,parallelism,0,little,parallelism,the,parallelism,must,be,greater,than,zero,this,little,parallelism,little,parallelism,return,this
TriangleListing -> public TriangleListing<K, VV, EV> setLittleParallelism(int littleParallelism);1489068942;Override the parallelism of operators processing small amounts of data.__@param littleParallelism operator parallelism_@return this;public TriangleListing<K, VV, EV> setLittleParallelism(int littleParallelism) {_		Preconditions.checkArgument(littleParallelism > 0 || littleParallelism == PARALLELISM_DEFAULT,_			"The parallelism must be greater than zero.")___		this.littleParallelism = littleParallelism___		return this__	};override,the,parallelism,of,operators,processing,small,amounts,of,data,param,little,parallelism,operator,parallelism,return,this;public,triangle,listing,k,vv,ev,set,little,parallelism,int,little,parallelism,preconditions,check,argument,little,parallelism,0,little,parallelism,the,parallelism,must,be,greater,than,zero,this,little,parallelism,little,parallelism,return,this
TriangleListing -> public TriangleListing<K, VV, EV> setLittleParallelism(int littleParallelism);1490973446;Override the parallelism of operators processing small amounts of data.__@param littleParallelism operator parallelism_@return this;public TriangleListing<K, VV, EV> setLittleParallelism(int littleParallelism) {_		Preconditions.checkArgument(littleParallelism > 0 || littleParallelism == PARALLELISM_DEFAULT,_			"The parallelism must be greater than zero.")___		this.littleParallelism = littleParallelism___		return this__	};override,the,parallelism,of,operators,processing,small,amounts,of,data,param,little,parallelism,operator,parallelism,return,this;public,triangle,listing,k,vv,ev,set,little,parallelism,int,little,parallelism,preconditions,check,argument,little,parallelism,0,little,parallelism,the,parallelism,must,be,greater,than,zero,this,little,parallelism,little,parallelism,return,this
TriangleListing -> public TriangleListing<K, VV, EV> setLittleParallelism(int littleParallelism);1492103503;Override the parallelism of operators processing small amounts of data.__@param littleParallelism operator parallelism_@return this;public TriangleListing<K, VV, EV> setLittleParallelism(int littleParallelism) {_		Preconditions.checkArgument(littleParallelism > 0 || littleParallelism == PARALLELISM_DEFAULT,_			"The parallelism must be greater than zero.")___		this.littleParallelism = littleParallelism___		return this__	};override,the,parallelism,of,operators,processing,small,amounts,of,data,param,little,parallelism,operator,parallelism,return,this;public,triangle,listing,k,vv,ev,set,little,parallelism,int,little,parallelism,preconditions,check,argument,little,parallelism,0,little,parallelism,the,parallelism,must,be,greater,than,zero,this,little,parallelism,little,parallelism,return,this
TriangleListing -> public TriangleListing<K, VV, EV> setLittleParallelism(int littleParallelism);1495819075;Override the parallelism of operators processing small amounts of data.__@param littleParallelism operator parallelism_@return this;public TriangleListing<K, VV, EV> setLittleParallelism(int littleParallelism) {_		Preconditions.checkArgument(littleParallelism > 0 || littleParallelism == PARALLELISM_DEFAULT,_			"The parallelism must be greater than zero.")___		this.littleParallelism = littleParallelism___		return this__	};override,the,parallelism,of,operators,processing,small,amounts,of,data,param,little,parallelism,operator,parallelism,return,this;public,triangle,listing,k,vv,ev,set,little,parallelism,int,little,parallelism,preconditions,check,argument,little,parallelism,0,little,parallelism,the,parallelism,must,be,greater,than,zero,this,little,parallelism,little,parallelism,return,this
TriangleListing -> Result -> public void setBitmask(ByteValue bitmask);1499282568;Set the bitmask indicating the presence of the six potential_connecting edges.__@param bitmask the edge bitmask__@see EdgeOrder;public void setBitmask(ByteValue bitmask) {_			this.bitmask = bitmask__		};set,the,bitmask,indicating,the,presence,of,the,six,potential,connecting,edges,param,bitmask,the,edge,bitmask,see,edge,order;public,void,set,bitmask,byte,value,bitmask,this,bitmask,bitmask
TriangleListing -> Result -> public void setBitmask(ByteValue bitmask);1499777483;Set the bitmask indicating the presence of the six potential_connecting edges.__@param bitmask the edge bitmask__@see EdgeOrder;public void setBitmask(ByteValue bitmask) {_			this.bitmask = bitmask__		};set,the,bitmask,indicating,the,presence,of,the,six,potential,connecting,edges,param,bitmask,the,edge,bitmask,see,edge,order;public,void,set,bitmask,byte,value,bitmask,this,bitmask,bitmask
TriangleListing -> Result -> public void setBitmask(ByteValue bitmask);1501079480;Set the bitmask indicating the presence of the six potential_connecting edges.__@param bitmask the edge bitmask__@see EdgeOrder;public void setBitmask(ByteValue bitmask) {_			this.bitmask = bitmask__		};set,the,bitmask,indicating,the,presence,of,the,six,potential,connecting,edges,param,bitmask,the,edge,bitmask,see,edge,order;public,void,set,bitmask,byte,value,bitmask,this,bitmask,bitmask
TriangleListing -> Result -> public void setBitmask(ByteValue bitmask);1502111816;Set the bitmask indicating the presence of the six potential_connecting edges.__@param bitmask the edge bitmask__@see EdgeOrder;public void setBitmask(ByteValue bitmask) {_			this.bitmask = bitmask__		};set,the,bitmask,indicating,the,presence,of,the,six,potential,connecting,edges,param,bitmask,the,edge,bitmask,see,edge,order;public,void,set,bitmask,byte,value,bitmask,this,bitmask,bitmask
TriangleListing -> Result -> public ByteValue getBitmask();1489068942;Get the bitmask indicating the presence of the six potential_connecting edges.__@return the edge bitmask__@see EdgeOrder;public ByteValue getBitmask() {_			return f3__		};get,the,bitmask,indicating,the,presence,of,the,six,potential,connecting,edges,return,the,edge,bitmask,see,edge,order;public,byte,value,get,bitmask,return,f3
TriangleListing -> Result -> public ByteValue getBitmask();1490973446;Get the bitmask indicating the presence of the six potential_connecting edges.__@return the edge bitmask__@see EdgeOrder;public ByteValue getBitmask() {_			return f3__		};get,the,bitmask,indicating,the,presence,of,the,six,potential,connecting,edges,return,the,edge,bitmask,see,edge,order;public,byte,value,get,bitmask,return,f3
TriangleListing -> Result -> public ByteValue getBitmask();1492103503;Get the bitmask indicating the presence of the six potential_connecting edges.__@return the edge bitmask__@see EdgeOrder;public ByteValue getBitmask() {_			return f3__		};get,the,bitmask,indicating,the,presence,of,the,six,potential,connecting,edges,return,the,edge,bitmask,see,edge,order;public,byte,value,get,bitmask,return,f3
TriangleListing -> Result -> public ByteValue getBitmask();1495819075;Get the bitmask indicating the presence of the six potential_connecting edges.__@return the edge bitmask__@see EdgeOrder;public ByteValue getBitmask() {_			return f3__		};get,the,bitmask,indicating,the,presence,of,the,six,potential,connecting,edges,return,the,edge,bitmask,see,edge,order;public,byte,value,get,bitmask,return,f3
TriangleListing -> Result -> public ByteValue getBitmask();1499282568;Get the bitmask indicating the presence of the six potential_connecting edges.__@return the edge bitmask__@see EdgeOrder;public ByteValue getBitmask() {_			return bitmask__		};get,the,bitmask,indicating,the,presence,of,the,six,potential,connecting,edges,return,the,edge,bitmask,see,edge,order;public,byte,value,get,bitmask,return,bitmask
TriangleListing -> Result -> public ByteValue getBitmask();1499777483;Get the bitmask indicating the presence of the six potential_connecting edges.__@return the edge bitmask__@see EdgeOrder;public ByteValue getBitmask() {_			return bitmask__		};get,the,bitmask,indicating,the,presence,of,the,six,potential,connecting,edges,return,the,edge,bitmask,see,edge,order;public,byte,value,get,bitmask,return,bitmask
TriangleListing -> Result -> public ByteValue getBitmask();1501079480;Get the bitmask indicating the presence of the six potential_connecting edges.__@return the edge bitmask__@see EdgeOrder;public ByteValue getBitmask() {_			return bitmask__		};get,the,bitmask,indicating,the,presence,of,the,six,potential,connecting,edges,return,the,edge,bitmask,see,edge,order;public,byte,value,get,bitmask,return,bitmask
TriangleListing -> Result -> public ByteValue getBitmask();1502111816;Get the bitmask indicating the presence of the six potential_connecting edges.__@return the edge bitmask__@see EdgeOrder;public ByteValue getBitmask() {_			return bitmask__		};get,the,bitmask,indicating,the,presence,of,the,six,potential,connecting,edges,return,the,edge,bitmask,see,edge,order;public,byte,value,get,bitmask,return,bitmask
TriangleListing -> Result -> public String toPrintableString();1489068942;Format values into a human-readable string.__@return verbose string;public String toPrintableString() {_			byte bitmask = f3.getValue()___			return "1st vertex ID: " + getVertexId0()_				+ ", 2nd vertex ID: " + getVertexId1()_				+ ", 3rd vertex ID: " + getVertexId2()_				+ ", edge directions: " + getVertexId0() + maskToString(bitmask, 4) + getVertexId1()_				+ ", " + getVertexId0() + maskToString(bitmask, 2) + getVertexId2()_				+ ", " + getVertexId1() + maskToString(bitmask, 0) + getVertexId2()__		};format,values,into,a,human,readable,string,return,verbose,string;public,string,to,printable,string,byte,bitmask,f3,get,value,return,1st,vertex,id,get,vertex,id0,2nd,vertex,id,get,vertex,id1,3rd,vertex,id,get,vertex,id2,edge,directions,get,vertex,id0,mask,to,string,bitmask,4,get,vertex,id1,get,vertex,id0,mask,to,string,bitmask,2,get,vertex,id2,get,vertex,id1,mask,to,string,bitmask,0,get,vertex,id2
TriangleListing -> Result -> public String toPrintableString();1490973446;Format values into a human-readable string.__@return verbose string;public String toPrintableString() {_			byte bitmask = f3.getValue()___			return "1st vertex ID: " + getVertexId0()_				+ ", 2nd vertex ID: " + getVertexId1()_				+ ", 3rd vertex ID: " + getVertexId2()_				+ ", edge directions: " + getVertexId0() + maskToString(bitmask, 4) + getVertexId1()_				+ ", " + getVertexId0() + maskToString(bitmask, 2) + getVertexId2()_				+ ", " + getVertexId1() + maskToString(bitmask, 0) + getVertexId2()__		};format,values,into,a,human,readable,string,return,verbose,string;public,string,to,printable,string,byte,bitmask,f3,get,value,return,1st,vertex,id,get,vertex,id0,2nd,vertex,id,get,vertex,id1,3rd,vertex,id,get,vertex,id2,edge,directions,get,vertex,id0,mask,to,string,bitmask,4,get,vertex,id1,get,vertex,id0,mask,to,string,bitmask,2,get,vertex,id2,get,vertex,id1,mask,to,string,bitmask,0,get,vertex,id2
TriangleListing -> Result -> public String toPrintableString();1492103503;Format values into a human-readable string.__@return verbose string;public String toPrintableString() {_			byte bitmask = f3.getValue()___			return "1st vertex ID: " + getVertexId0()_				+ ", 2nd vertex ID: " + getVertexId1()_				+ ", 3rd vertex ID: " + getVertexId2()_				+ ", edge directions: " + getVertexId0() + maskToString(bitmask, 4) + getVertexId1()_				+ ", " + getVertexId0() + maskToString(bitmask, 2) + getVertexId2()_				+ ", " + getVertexId1() + maskToString(bitmask, 0) + getVertexId2()__		};format,values,into,a,human,readable,string,return,verbose,string;public,string,to,printable,string,byte,bitmask,f3,get,value,return,1st,vertex,id,get,vertex,id0,2nd,vertex,id,get,vertex,id1,3rd,vertex,id,get,vertex,id2,edge,directions,get,vertex,id0,mask,to,string,bitmask,4,get,vertex,id1,get,vertex,id0,mask,to,string,bitmask,2,get,vertex,id2,get,vertex,id1,mask,to,string,bitmask,0,get,vertex,id2
TriangleListing -> Result -> public String toPrintableString();1495819075;Format values into a human-readable string.__@return verbose string;public String toPrintableString() {_			byte bitmask = f3.getValue()___			return "1st vertex ID: " + getVertexId0()_				+ ", 2nd vertex ID: " + getVertexId1()_				+ ", 3rd vertex ID: " + getVertexId2()_				+ ", edge directions: " + getVertexId0() + maskToString(bitmask, 4) + getVertexId1()_				+ ", " + getVertexId0() + maskToString(bitmask, 2) + getVertexId2()_				+ ", " + getVertexId1() + maskToString(bitmask, 0) + getVertexId2()__		};format,values,into,a,human,readable,string,return,verbose,string;public,string,to,printable,string,byte,bitmask,f3,get,value,return,1st,vertex,id,get,vertex,id0,2nd,vertex,id,get,vertex,id1,3rd,vertex,id,get,vertex,id2,edge,directions,get,vertex,id0,mask,to,string,bitmask,4,get,vertex,id1,get,vertex,id0,mask,to,string,bitmask,2,get,vertex,id2,get,vertex,id1,mask,to,string,bitmask,0,get,vertex,id2
TriangleListing -> Result -> public Result();1466789678;No-args constructor.;public Result() {};no,args,constructor;public,result
TriangleListing -> Result -> public Result();1467398142;No-args constructor.;public Result() {};no,args,constructor;public,result
TriangleListing -> Result -> public Result();1473368789;No-args constructor.;public Result() {};no,args,constructor;public,result
TriangleListing -> Result -> public Result();1473368789;No-args constructor.;public Result() {};no,args,constructor;public,result
TriangleListing -> Result -> public Result();1485176584;No-args constructor.;public Result() {};no,args,constructor;public,result
TriangleListing -> Result -> public Result();1488490978;No-args constructor.;public Result() {};no,args,constructor;public,result
TriangleListing -> Result -> public Result();1489068942;No-args constructor.;public Result() {_			f3 = new ByteValue()__		};no,args,constructor;public,result,f3,new,byte,value
TriangleListing -> Result -> public Result();1490973446;No-args constructor.;public Result() {_			f3 = new ByteValue()__		};no,args,constructor;public,result,f3,new,byte,value
TriangleListing -> Result -> public Result();1492103503;No-args constructor.;public Result() {_			f3 = new ByteValue()__		};no,args,constructor;public,result,f3,new,byte,value
TriangleListing -> Result -> public Result();1495819075;No-args constructor.;public Result() {_			f3 = new ByteValue()__		};no,args,constructor;public,result,f3,new,byte,value
TriangleListing -> public TriangleListing<K, VV, EV> setSortTriangleVertices(boolean sortTriangleVertices);1466789678;Normalize the triangle listing such that for each result (K0, K1, K2)_the vertex IDs are sorted K0 < K1 < K2.__@param sortTriangleVertices whether to output each triangle's vertices in sorted order_@return this;public TriangleListing<K, VV, EV> setSortTriangleVertices(boolean sortTriangleVertices) {_		this.sortTriangleVertices = sortTriangleVertices___		return this__	};normalize,the,triangle,listing,such,that,for,each,result,k0,k1,k2,the,vertex,ids,are,sorted,k0,k1,k2,param,sort,triangle,vertices,whether,to,output,each,triangle,s,vertices,in,sorted,order,return,this;public,triangle,listing,k,vv,ev,set,sort,triangle,vertices,boolean,sort,triangle,vertices,this,sort,triangle,vertices,sort,triangle,vertices,return,this
TriangleListing -> public TriangleListing<K, VV, EV> setSortTriangleVertices(boolean sortTriangleVertices);1467398142;Normalize the triangle listing such that for each result (K0, K1, K2)_the vertex IDs are sorted K0 < K1 < K2.__@param sortTriangleVertices whether to output each triangle's vertices in sorted order_@return this;public TriangleListing<K, VV, EV> setSortTriangleVertices(boolean sortTriangleVertices) {_		this.sortTriangleVertices.set(sortTriangleVertices)___		return this__	};normalize,the,triangle,listing,such,that,for,each,result,k0,k1,k2,the,vertex,ids,are,sorted,k0,k1,k2,param,sort,triangle,vertices,whether,to,output,each,triangle,s,vertices,in,sorted,order,return,this;public,triangle,listing,k,vv,ev,set,sort,triangle,vertices,boolean,sort,triangle,vertices,this,sort,triangle,vertices,set,sort,triangle,vertices,return,this
TriangleListing -> public TriangleListing<K, VV, EV> setSortTriangleVertices(boolean sortTriangleVertices);1473368789;Normalize the triangle listing such that for each result (K0, K1, K2)_the vertex IDs are sorted K0 < K1 < K2.__@param sortTriangleVertices whether to output each triangle's vertices in sorted order_@return this;public TriangleListing<K, VV, EV> setSortTriangleVertices(boolean sortTriangleVertices) {_		this.sortTriangleVertices.set(sortTriangleVertices)___		return this__	};normalize,the,triangle,listing,such,that,for,each,result,k0,k1,k2,the,vertex,ids,are,sorted,k0,k1,k2,param,sort,triangle,vertices,whether,to,output,each,triangle,s,vertices,in,sorted,order,return,this;public,triangle,listing,k,vv,ev,set,sort,triangle,vertices,boolean,sort,triangle,vertices,this,sort,triangle,vertices,set,sort,triangle,vertices,return,this
TriangleListing -> public TriangleListing<K, VV, EV> setSortTriangleVertices(boolean sortTriangleVertices);1473368789;Normalize the triangle listing such that for each result (K0, K1, K2)_the vertex IDs are sorted K0 < K1 < K2.__@param sortTriangleVertices whether to output each triangle's vertices in sorted order_@return this;public TriangleListing<K, VV, EV> setSortTriangleVertices(boolean sortTriangleVertices) {_		this.sortTriangleVertices.set(sortTriangleVertices)___		return this__	};normalize,the,triangle,listing,such,that,for,each,result,k0,k1,k2,the,vertex,ids,are,sorted,k0,k1,k2,param,sort,triangle,vertices,whether,to,output,each,triangle,s,vertices,in,sorted,order,return,this;public,triangle,listing,k,vv,ev,set,sort,triangle,vertices,boolean,sort,triangle,vertices,this,sort,triangle,vertices,set,sort,triangle,vertices,return,this
TriangleListing -> public TriangleListing<K, VV, EV> setSortTriangleVertices(boolean sortTriangleVertices);1485176584;Normalize the triangle listing such that for each result (K0, K1, K2)_the vertex IDs are sorted K0 < K1 < K2.__@param sortTriangleVertices whether to output each triangle's vertices in sorted order_@return this;public TriangleListing<K, VV, EV> setSortTriangleVertices(boolean sortTriangleVertices) {_		this.sortTriangleVertices.set(sortTriangleVertices)___		return this__	};normalize,the,triangle,listing,such,that,for,each,result,k0,k1,k2,the,vertex,ids,are,sorted,k0,k1,k2,param,sort,triangle,vertices,whether,to,output,each,triangle,s,vertices,in,sorted,order,return,this;public,triangle,listing,k,vv,ev,set,sort,triangle,vertices,boolean,sort,triangle,vertices,this,sort,triangle,vertices,set,sort,triangle,vertices,return,this
TriangleListing -> public TriangleListing<K, VV, EV> setSortTriangleVertices(boolean sortTriangleVertices);1488490978;Normalize the triangle listing such that for each result (K0, K1, K2)_the vertex IDs are sorted K0 < K1 < K2.__@param sortTriangleVertices whether to output each triangle's vertices in sorted order_@return this;public TriangleListing<K, VV, EV> setSortTriangleVertices(boolean sortTriangleVertices) {_		this.sortTriangleVertices.set(sortTriangleVertices)___		return this__	};normalize,the,triangle,listing,such,that,for,each,result,k0,k1,k2,the,vertex,ids,are,sorted,k0,k1,k2,param,sort,triangle,vertices,whether,to,output,each,triangle,s,vertices,in,sorted,order,return,this;public,triangle,listing,k,vv,ev,set,sort,triangle,vertices,boolean,sort,triangle,vertices,this,sort,triangle,vertices,set,sort,triangle,vertices,return,this
TriangleListing -> public TriangleListing<K, VV, EV> setSortTriangleVertices(boolean sortTriangleVertices);1489068942;Normalize the triangle listing such that for each result (K0, K1, K2)_the vertex IDs are sorted K0 < K1 < K2.__@param sortTriangleVertices whether to output each triangle's vertices in sorted order_@return this;public TriangleListing<K, VV, EV> setSortTriangleVertices(boolean sortTriangleVertices) {_		this.sortTriangleVertices.set(sortTriangleVertices)___		return this__	};normalize,the,triangle,listing,such,that,for,each,result,k0,k1,k2,the,vertex,ids,are,sorted,k0,k1,k2,param,sort,triangle,vertices,whether,to,output,each,triangle,s,vertices,in,sorted,order,return,this;public,triangle,listing,k,vv,ev,set,sort,triangle,vertices,boolean,sort,triangle,vertices,this,sort,triangle,vertices,set,sort,triangle,vertices,return,this
TriangleListing -> public TriangleListing<K, VV, EV> setSortTriangleVertices(boolean sortTriangleVertices);1490973446;Normalize the triangle listing such that for each result (K0, K1, K2)_the vertex IDs are sorted K0 < K1 < K2.__@param sortTriangleVertices whether to output each triangle's vertices in sorted order_@return this;public TriangleListing<K, VV, EV> setSortTriangleVertices(boolean sortTriangleVertices) {_		this.sortTriangleVertices.set(sortTriangleVertices)___		return this__	};normalize,the,triangle,listing,such,that,for,each,result,k0,k1,k2,the,vertex,ids,are,sorted,k0,k1,k2,param,sort,triangle,vertices,whether,to,output,each,triangle,s,vertices,in,sorted,order,return,this;public,triangle,listing,k,vv,ev,set,sort,triangle,vertices,boolean,sort,triangle,vertices,this,sort,triangle,vertices,set,sort,triangle,vertices,return,this
TriangleListing -> public TriangleListing<K, VV, EV> setSortTriangleVertices(boolean sortTriangleVertices);1492103503;Normalize the triangle listing such that for each result (K0, K1, K2)_the vertex IDs are sorted K0 < K1 < K2.__@param sortTriangleVertices whether to output each triangle's vertices in sorted order_@return this;public TriangleListing<K, VV, EV> setSortTriangleVertices(boolean sortTriangleVertices) {_		this.sortTriangleVertices.set(sortTriangleVertices)___		return this__	};normalize,the,triangle,listing,such,that,for,each,result,k0,k1,k2,the,vertex,ids,are,sorted,k0,k1,k2,param,sort,triangle,vertices,whether,to,output,each,triangle,s,vertices,in,sorted,order,return,this;public,triangle,listing,k,vv,ev,set,sort,triangle,vertices,boolean,sort,triangle,vertices,this,sort,triangle,vertices,set,sort,triangle,vertices,return,this
TriangleListing -> public TriangleListing<K, VV, EV> setSortTriangleVertices(boolean sortTriangleVertices);1495819075;Normalize the triangle listing such that for each result (K0, K1, K2)_the vertex IDs are sorted K0 < K1 < K2.__@param sortTriangleVertices whether to output each triangle's vertices in sorted order_@return this;public TriangleListing<K, VV, EV> setSortTriangleVertices(boolean sortTriangleVertices) {_		this.sortTriangleVertices.set(sortTriangleVertices)___		return this__	};normalize,the,triangle,listing,such,that,for,each,result,k0,k1,k2,the,vertex,ids,are,sorted,k0,k1,k2,param,sort,triangle,vertices,whether,to,output,each,triangle,s,vertices,in,sorted,order,return,this;public,triangle,listing,k,vv,ev,set,sort,triangle,vertices,boolean,sort,triangle,vertices,this,sort,triangle,vertices,set,sort,triangle,vertices,return,this
TriangleListing -> Result -> public String toVerboseString();1466789678;Format values into a human-readable string.__@return verbose string;public String toVerboseString() {_			byte bitmask = f3.getValue()___			return "1st vertex ID: " + f0_				+ ", 2nd vertex ID: " + f1_				+ ", 3rd vertex ID: " + f2_				+ ", edge directions: " + f0 + maskToString(bitmask, 4) + f1_				+ ", " + f0 + maskToString(bitmask, 2) + f2_				+ ", " + f1 + maskToString(bitmask, 0) + f2__		};format,values,into,a,human,readable,string,return,verbose,string;public,string,to,verbose,string,byte,bitmask,f3,get,value,return,1st,vertex,id,f0,2nd,vertex,id,f1,3rd,vertex,id,f2,edge,directions,f0,mask,to,string,bitmask,4,f1,f0,mask,to,string,bitmask,2,f2,f1,mask,to,string,bitmask,0,f2
TriangleListing -> Result -> public String toVerboseString();1467398142;Format values into a human-readable string.__@return verbose string;public String toVerboseString() {_			byte bitmask = f3.getValue()___			return "1st vertex ID: " + f0_				+ ", 2nd vertex ID: " + f1_				+ ", 3rd vertex ID: " + f2_				+ ", edge directions: " + f0 + maskToString(bitmask, 4) + f1_				+ ", " + f0 + maskToString(bitmask, 2) + f2_				+ ", " + f1 + maskToString(bitmask, 0) + f2__		};format,values,into,a,human,readable,string,return,verbose,string;public,string,to,verbose,string,byte,bitmask,f3,get,value,return,1st,vertex,id,f0,2nd,vertex,id,f1,3rd,vertex,id,f2,edge,directions,f0,mask,to,string,bitmask,4,f1,f0,mask,to,string,bitmask,2,f2,f1,mask,to,string,bitmask,0,f2
TriangleListing -> Result -> public String toVerboseString();1473368789;Format values into a human-readable string.__@return verbose string;public String toVerboseString() {_			byte bitmask = f3.getValue()___			return "1st vertex ID: " + f0_				+ ", 2nd vertex ID: " + f1_				+ ", 3rd vertex ID: " + f2_				+ ", edge directions: " + f0 + maskToString(bitmask, 4) + f1_				+ ", " + f0 + maskToString(bitmask, 2) + f2_				+ ", " + f1 + maskToString(bitmask, 0) + f2__		};format,values,into,a,human,readable,string,return,verbose,string;public,string,to,verbose,string,byte,bitmask,f3,get,value,return,1st,vertex,id,f0,2nd,vertex,id,f1,3rd,vertex,id,f2,edge,directions,f0,mask,to,string,bitmask,4,f1,f0,mask,to,string,bitmask,2,f2,f1,mask,to,string,bitmask,0,f2
TriangleListing -> Result -> public String toVerboseString();1473368789;Format values into a human-readable string.__@return verbose string;public String toVerboseString() {_			byte bitmask = f3.getValue()___			return "1st vertex ID: " + f0_				+ ", 2nd vertex ID: " + f1_				+ ", 3rd vertex ID: " + f2_				+ ", edge directions: " + f0 + maskToString(bitmask, 4) + f1_				+ ", " + f0 + maskToString(bitmask, 2) + f2_				+ ", " + f1 + maskToString(bitmask, 0) + f2__		};format,values,into,a,human,readable,string,return,verbose,string;public,string,to,verbose,string,byte,bitmask,f3,get,value,return,1st,vertex,id,f0,2nd,vertex,id,f1,3rd,vertex,id,f2,edge,directions,f0,mask,to,string,bitmask,4,f1,f0,mask,to,string,bitmask,2,f2,f1,mask,to,string,bitmask,0,f2
TriangleListing -> Result -> public String toVerboseString();1485176584;Format values into a human-readable string.__@return verbose string;public String toVerboseString() {_			byte bitmask = f3.getValue()___			return "1st vertex ID: " + f0_				+ ", 2nd vertex ID: " + f1_				+ ", 3rd vertex ID: " + f2_				+ ", edge directions: " + f0 + maskToString(bitmask, 4) + f1_				+ ", " + f0 + maskToString(bitmask, 2) + f2_				+ ", " + f1 + maskToString(bitmask, 0) + f2__		};format,values,into,a,human,readable,string,return,verbose,string;public,string,to,verbose,string,byte,bitmask,f3,get,value,return,1st,vertex,id,f0,2nd,vertex,id,f1,3rd,vertex,id,f2,edge,directions,f0,mask,to,string,bitmask,4,f1,f0,mask,to,string,bitmask,2,f2,f1,mask,to,string,bitmask,0,f2
TriangleListing -> Result -> public String toVerboseString();1488490978;Format values into a human-readable string.__@return verbose string;public String toVerboseString() {_			byte bitmask = f3.getValue()___			return "1st vertex ID: " + f0_				+ ", 2nd vertex ID: " + f1_				+ ", 3rd vertex ID: " + f2_				+ ", edge directions: " + f0 + maskToString(bitmask, 4) + f1_				+ ", " + f0 + maskToString(bitmask, 2) + f2_				+ ", " + f1 + maskToString(bitmask, 0) + f2__		};format,values,into,a,human,readable,string,return,verbose,string;public,string,to,verbose,string,byte,bitmask,f3,get,value,return,1st,vertex,id,f0,2nd,vertex,id,f1,3rd,vertex,id,f2,edge,directions,f0,mask,to,string,bitmask,4,f1,f0,mask,to,string,bitmask,2,f2,f1,mask,to,string,bitmask,0,f2
