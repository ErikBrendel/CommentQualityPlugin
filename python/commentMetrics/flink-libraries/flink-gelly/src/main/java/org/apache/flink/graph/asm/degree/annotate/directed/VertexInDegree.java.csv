# id;timestamp;commentText;codeText;commentWords;codeWords
VertexInDegree -> public VertexInDegree<K, VV, EV> setParallelism(int parallelism);1460817058;Override the operator parallelism.__@param parallelism operator parallelism_@return this;public VertexInDegree<K, VV, EV> setParallelism(int parallelism) {_		this.parallelism = parallelism___		return this__	};override,the,operator,parallelism,param,parallelism,operator,parallelism,return,this;public,vertex,in,degree,k,vv,ev,set,parallelism,int,parallelism,this,parallelism,parallelism,return,this
VertexInDegree -> public VertexInDegree<K, VV, EV> setParallelism(int parallelism);1463763256;Override the operator parallelism.__@param parallelism operator parallelism_@return this;public VertexInDegree<K, VV, EV> setParallelism(int parallelism) {_		this.parallelism = parallelism___		return this__	};override,the,operator,parallelism,param,parallelism,operator,parallelism,return,this;public,vertex,in,degree,k,vv,ev,set,parallelism,int,parallelism,this,parallelism,parallelism,return,this
VertexInDegree -> public VertexInDegree<K, VV, EV> setParallelism(int parallelism);1464173021;Override the operator parallelism.__@param parallelism operator parallelism_@return this;public VertexInDegree<K, VV, EV> setParallelism(int parallelism) {_		Preconditions.checkArgument(parallelism > 0 || parallelism == PARALLELISM_DEFAULT,_			"The parallelism must be greater than zero.")___		this.parallelism = parallelism___		return this__	};override,the,operator,parallelism,param,parallelism,operator,parallelism,return,this;public,vertex,in,degree,k,vv,ev,set,parallelism,int,parallelism,preconditions,check,argument,parallelism,0,parallelism,the,parallelism,must,be,greater,than,zero,this,parallelism,parallelism,return,this
VertexInDegree -> public VertexInDegree<K, VV, EV> setParallelism(int parallelism);1464291269;Override the operator parallelism.__@param parallelism operator parallelism_@return this;public VertexInDegree<K, VV, EV> setParallelism(int parallelism) {_		Preconditions.checkArgument(parallelism > 0 || parallelism == PARALLELISM_DEFAULT,_			"The parallelism must be greater than zero.")___		this.parallelism = parallelism___		return this__	};override,the,operator,parallelism,param,parallelism,operator,parallelism,return,this;public,vertex,in,degree,k,vv,ev,set,parallelism,int,parallelism,preconditions,check,argument,parallelism,0,parallelism,the,parallelism,must,be,greater,than,zero,this,parallelism,parallelism,return,this
VertexInDegree -> public VertexInDegree<K, VV, EV> setParallelism(int parallelism);1468503542;Override the operator parallelism.__@param parallelism operator parallelism_@return this;public VertexInDegree<K, VV, EV> setParallelism(int parallelism) {_		Preconditions.checkArgument(parallelism > 0 || parallelism == PARALLELISM_DEFAULT,_			"The parallelism must be greater than zero.")___		this.parallelism = parallelism___		return this__	};override,the,operator,parallelism,param,parallelism,operator,parallelism,return,this;public,vertex,in,degree,k,vv,ev,set,parallelism,int,parallelism,preconditions,check,argument,parallelism,0,parallelism,the,parallelism,must,be,greater,than,zero,this,parallelism,parallelism,return,this
VertexInDegree -> public VertexInDegree<K, VV, EV> setParallelism(int parallelism);1469452167;Override the operator parallelism.__@param parallelism operator parallelism_@return this;public VertexInDegree<K, VV, EV> setParallelism(int parallelism) {_		Preconditions.checkArgument(parallelism > 0 || parallelism == PARALLELISM_DEFAULT,_			"The parallelism must be greater than zero.")___		this.parallelism = parallelism___		return this__	};override,the,operator,parallelism,param,parallelism,operator,parallelism,return,this;public,vertex,in,degree,k,vv,ev,set,parallelism,int,parallelism,preconditions,check,argument,parallelism,0,parallelism,the,parallelism,must,be,greater,than,zero,this,parallelism,parallelism,return,this
VertexInDegree -> public VertexInDegree<K, VV, EV> setParallelism(int parallelism);1472831588;Override the operator parallelism.__@param parallelism operator parallelism_@return this;public VertexInDegree<K, VV, EV> setParallelism(int parallelism) {_		Preconditions.checkArgument(parallelism > 0 || parallelism == PARALLELISM_DEFAULT,_			"The parallelism must be greater than zero.")___		this.parallelism = parallelism___		return this__	};override,the,operator,parallelism,param,parallelism,operator,parallelism,return,this;public,vertex,in,degree,k,vv,ev,set,parallelism,int,parallelism,preconditions,check,argument,parallelism,0,parallelism,the,parallelism,must,be,greater,than,zero,this,parallelism,parallelism,return,this
VertexInDegree -> public VertexInDegree<K, VV, EV> setParallelism(int parallelism);1477498003;Override the operator parallelism.__@param parallelism operator parallelism_@return this;public VertexInDegree<K, VV, EV> setParallelism(int parallelism) {_		Preconditions.checkArgument(parallelism > 0 || parallelism == PARALLELISM_DEFAULT,_			"The parallelism must be greater than zero.")___		this.parallelism = parallelism___		return this__	};override,the,operator,parallelism,param,parallelism,operator,parallelism,return,this;public,vertex,in,degree,k,vv,ev,set,parallelism,int,parallelism,preconditions,check,argument,parallelism,0,parallelism,the,parallelism,must,be,greater,than,zero,this,parallelism,parallelism,return,this
VertexInDegree -> public VertexInDegree<K, VV, EV> setParallelism(int parallelism);1495653033;Override the operator parallelism.__@param parallelism operator parallelism_@return this;public VertexInDegree<K, VV, EV> setParallelism(int parallelism) {_		Preconditions.checkArgument(parallelism > 0 || parallelism == PARALLELISM_DEFAULT,_			"The parallelism must be greater than zero.")___		this.parallelism = parallelism___		return this__	};override,the,operator,parallelism,param,parallelism,operator,parallelism,return,this;public,vertex,in,degree,k,vv,ev,set,parallelism,int,parallelism,preconditions,check,argument,parallelism,0,parallelism,the,parallelism,must,be,greater,than,zero,this,parallelism,parallelism,return,this
VertexInDegree -> public VertexInDegree<K, VV, EV> setParallelism(int parallelism);1498486910;Override the operator parallelism.__@param parallelism operator parallelism_@return this;public VertexInDegree<K, VV, EV> setParallelism(int parallelism) {_		Preconditions.checkArgument(parallelism > 0 || parallelism == PARALLELISM_DEFAULT,_			"The parallelism must be greater than zero.")___		this.parallelism = parallelism___		return this__	};override,the,operator,parallelism,param,parallelism,operator,parallelism,return,this;public,vertex,in,degree,k,vv,ev,set,parallelism,int,parallelism,preconditions,check,argument,parallelism,0,parallelism,the,parallelism,must,be,greater,than,zero,this,parallelism,parallelism,return,this
VertexInDegree -> public VertexInDegree<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices);1460817058;By default only the edge set is processed for the computation of degree._When this flag is set an additional join is performed against the vertex_set in order to output vertices with an in-degree of zero.__@param includeZeroDegreeVertices whether to output vertices with an_in-degree of zero_@return this;public VertexInDegree<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices) {_		this.includeZeroDegreeVertices = includeZeroDegreeVertices___		return this__	};by,default,only,the,edge,set,is,processed,for,the,computation,of,degree,when,this,flag,is,set,an,additional,join,is,performed,against,the,vertex,set,in,order,to,output,vertices,with,an,in,degree,of,zero,param,include,zero,degree,vertices,whether,to,output,vertices,with,an,in,degree,of,zero,return,this;public,vertex,in,degree,k,vv,ev,set,include,zero,degree,vertices,boolean,include,zero,degree,vertices,this,include,zero,degree,vertices,include,zero,degree,vertices,return,this
VertexInDegree -> public VertexInDegree<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices);1463763256;By default only the edge set is processed for the computation of degree._When this flag is set an additional join is performed against the vertex_set in order to output vertices with an in-degree of zero.__@param includeZeroDegreeVertices whether to output vertices with an_in-degree of zero_@return this;public VertexInDegree<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices) {_		this.includeZeroDegreeVertices = includeZeroDegreeVertices___		return this__	};by,default,only,the,edge,set,is,processed,for,the,computation,of,degree,when,this,flag,is,set,an,additional,join,is,performed,against,the,vertex,set,in,order,to,output,vertices,with,an,in,degree,of,zero,param,include,zero,degree,vertices,whether,to,output,vertices,with,an,in,degree,of,zero,return,this;public,vertex,in,degree,k,vv,ev,set,include,zero,degree,vertices,boolean,include,zero,degree,vertices,this,include,zero,degree,vertices,include,zero,degree,vertices,return,this
VertexInDegree -> public VertexInDegree<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices);1464173021;By default only the edge set is processed for the computation of degree._When this flag is set an additional join is performed against the vertex_set in order to output vertices with an in-degree of zero.__@param includeZeroDegreeVertices whether to output vertices with an_in-degree of zero_@return this;public VertexInDegree<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices) {_		this.includeZeroDegreeVertices.set(includeZeroDegreeVertices)___		return this__	};by,default,only,the,edge,set,is,processed,for,the,computation,of,degree,when,this,flag,is,set,an,additional,join,is,performed,against,the,vertex,set,in,order,to,output,vertices,with,an,in,degree,of,zero,param,include,zero,degree,vertices,whether,to,output,vertices,with,an,in,degree,of,zero,return,this;public,vertex,in,degree,k,vv,ev,set,include,zero,degree,vertices,boolean,include,zero,degree,vertices,this,include,zero,degree,vertices,set,include,zero,degree,vertices,return,this
VertexInDegree -> public VertexInDegree<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices);1464291269;By default only the edge set is processed for the computation of degree._When this flag is set an additional join is performed against the vertex_set in order to output vertices with an in-degree of zero.__@param includeZeroDegreeVertices whether to output vertices with an_in-degree of zero_@return this;public VertexInDegree<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices) {_		this.includeZeroDegreeVertices = includeZeroDegreeVertices___		return this__	};by,default,only,the,edge,set,is,processed,for,the,computation,of,degree,when,this,flag,is,set,an,additional,join,is,performed,against,the,vertex,set,in,order,to,output,vertices,with,an,in,degree,of,zero,param,include,zero,degree,vertices,whether,to,output,vertices,with,an,in,degree,of,zero,return,this;public,vertex,in,degree,k,vv,ev,set,include,zero,degree,vertices,boolean,include,zero,degree,vertices,this,include,zero,degree,vertices,include,zero,degree,vertices,return,this
VertexInDegree -> public VertexInDegree<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices);1468503542;By default only the edge set is processed for the computation of degree._When this flag is set an additional join is performed against the vertex_set in order to output vertices with an in-degree of zero.__@param includeZeroDegreeVertices whether to output vertices with an_in-degree of zero_@return this;public VertexInDegree<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices) {_		this.includeZeroDegreeVertices.set(includeZeroDegreeVertices)___		return this__	};by,default,only,the,edge,set,is,processed,for,the,computation,of,degree,when,this,flag,is,set,an,additional,join,is,performed,against,the,vertex,set,in,order,to,output,vertices,with,an,in,degree,of,zero,param,include,zero,degree,vertices,whether,to,output,vertices,with,an,in,degree,of,zero,return,this;public,vertex,in,degree,k,vv,ev,set,include,zero,degree,vertices,boolean,include,zero,degree,vertices,this,include,zero,degree,vertices,set,include,zero,degree,vertices,return,this
VertexInDegree -> public VertexInDegree<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices);1469452167;By default only the edge set is processed for the computation of degree._When this flag is set an additional join is performed against the vertex_set in order to output vertices with an in-degree of zero.__@param includeZeroDegreeVertices whether to output vertices with an_in-degree of zero_@return this;public VertexInDegree<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices) {_		this.includeZeroDegreeVertices.set(includeZeroDegreeVertices)___		return this__	};by,default,only,the,edge,set,is,processed,for,the,computation,of,degree,when,this,flag,is,set,an,additional,join,is,performed,against,the,vertex,set,in,order,to,output,vertices,with,an,in,degree,of,zero,param,include,zero,degree,vertices,whether,to,output,vertices,with,an,in,degree,of,zero,return,this;public,vertex,in,degree,k,vv,ev,set,include,zero,degree,vertices,boolean,include,zero,degree,vertices,this,include,zero,degree,vertices,set,include,zero,degree,vertices,return,this
VertexInDegree -> public VertexInDegree<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices);1472831588;By default only the edge set is processed for the computation of degree._When this flag is set an additional join is performed against the vertex_set in order to output vertices with an in-degree of zero.__@param includeZeroDegreeVertices whether to output vertices with an_in-degree of zero_@return this;public VertexInDegree<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices) {_		this.includeZeroDegreeVertices.set(includeZeroDegreeVertices)___		return this__	};by,default,only,the,edge,set,is,processed,for,the,computation,of,degree,when,this,flag,is,set,an,additional,join,is,performed,against,the,vertex,set,in,order,to,output,vertices,with,an,in,degree,of,zero,param,include,zero,degree,vertices,whether,to,output,vertices,with,an,in,degree,of,zero,return,this;public,vertex,in,degree,k,vv,ev,set,include,zero,degree,vertices,boolean,include,zero,degree,vertices,this,include,zero,degree,vertices,set,include,zero,degree,vertices,return,this
VertexInDegree -> public VertexInDegree<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices);1477498003;By default only the edge set is processed for the computation of degree._When this flag is set an additional join is performed against the vertex_set in order to output vertices with an in-degree of zero.__@param includeZeroDegreeVertices whether to output vertices with an_in-degree of zero_@return this;public VertexInDegree<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices) {_		this.includeZeroDegreeVertices.set(includeZeroDegreeVertices)___		return this__	};by,default,only,the,edge,set,is,processed,for,the,computation,of,degree,when,this,flag,is,set,an,additional,join,is,performed,against,the,vertex,set,in,order,to,output,vertices,with,an,in,degree,of,zero,param,include,zero,degree,vertices,whether,to,output,vertices,with,an,in,degree,of,zero,return,this;public,vertex,in,degree,k,vv,ev,set,include,zero,degree,vertices,boolean,include,zero,degree,vertices,this,include,zero,degree,vertices,set,include,zero,degree,vertices,return,this
VertexInDegree -> public VertexInDegree<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices);1495653033;By default only the edge set is processed for the computation of degree._When this flag is set an additional join is performed against the vertex_set in order to output vertices with an in-degree of zero.__@param includeZeroDegreeVertices whether to output vertices with an_in-degree of zero_@return this;public VertexInDegree<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices) {_		this.includeZeroDegreeVertices.set(includeZeroDegreeVertices)___		return this__	};by,default,only,the,edge,set,is,processed,for,the,computation,of,degree,when,this,flag,is,set,an,additional,join,is,performed,against,the,vertex,set,in,order,to,output,vertices,with,an,in,degree,of,zero,param,include,zero,degree,vertices,whether,to,output,vertices,with,an,in,degree,of,zero,return,this;public,vertex,in,degree,k,vv,ev,set,include,zero,degree,vertices,boolean,include,zero,degree,vertices,this,include,zero,degree,vertices,set,include,zero,degree,vertices,return,this
VertexInDegree -> public VertexInDegree<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices);1498486910;By default only the edge set is processed for the computation of degree._When this flag is set an additional join is performed against the vertex_set in order to output vertices with an in-degree of zero.__@param includeZeroDegreeVertices whether to output vertices with an_in-degree of zero_@return this;public VertexInDegree<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices) {_		this.includeZeroDegreeVertices.set(includeZeroDegreeVertices)___		return this__	};by,default,only,the,edge,set,is,processed,for,the,computation,of,degree,when,this,flag,is,set,an,additional,join,is,performed,against,the,vertex,set,in,order,to,output,vertices,with,an,in,degree,of,zero,param,include,zero,degree,vertices,whether,to,output,vertices,with,an,in,degree,of,zero,return,this;public,vertex,in,degree,k,vv,ev,set,include,zero,degree,vertices,boolean,include,zero,degree,vertices,this,include,zero,degree,vertices,set,include,zero,degree,vertices,return,this
VertexInDegree -> public VertexInDegree<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices);1498486910;By default only the edge set is processed for the computation of degree._When this flag is set an additional join is performed against the vertex_set in order to output vertices with an in-degree of zero.__@param includeZeroDegreeVertices whether to output vertices with an_in-degree of zero_@return this;public VertexInDegree<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices) {_		this.includeZeroDegreeVertices.set(includeZeroDegreeVertices)___		return this__	};by,default,only,the,edge,set,is,processed,for,the,computation,of,degree,when,this,flag,is,set,an,additional,join,is,performed,against,the,vertex,set,in,order,to,output,vertices,with,an,in,degree,of,zero,param,include,zero,degree,vertices,whether,to,output,vertices,with,an,in,degree,of,zero,return,this;public,vertex,in,degree,k,vv,ev,set,include,zero,degree,vertices,boolean,include,zero,degree,vertices,this,include,zero,degree,vertices,set,include,zero,degree,vertices,return,this
VertexInDegree -> public VertexInDegree<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices);1501532946;By default only the edge set is processed for the computation of degree._When this flag is set an additional join is performed against the vertex_set in order to output vertices with an in-degree of zero.__@param includeZeroDegreeVertices whether to output vertices with an_in-degree of zero_@return this;public VertexInDegree<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices) {_		this.includeZeroDegreeVertices.set(includeZeroDegreeVertices)___		return this__	};by,default,only,the,edge,set,is,processed,for,the,computation,of,degree,when,this,flag,is,set,an,additional,join,is,performed,against,the,vertex,set,in,order,to,output,vertices,with,an,in,degree,of,zero,param,include,zero,degree,vertices,whether,to,output,vertices,with,an,in,degree,of,zero,return,this;public,vertex,in,degree,k,vv,ev,set,include,zero,degree,vertices,boolean,include,zero,degree,vertices,this,include,zero,degree,vertices,set,include,zero,degree,vertices,return,this
