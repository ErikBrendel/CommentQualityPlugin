# id;timestamp;commentText;codeText;commentWords;codeWords
GraphAlgorithmWrappingDataSet -> protected abstract DataSet<T> runInternal(Graph<K, VV, EV> input) throws Exception_;1469452167;The implementation of the algorithm, renamed from {@link GraphAlgorithm#run(Graph)}.__@param input the input graph_@return the algorithm's output_@throws Exception;protected abstract DataSet<T> runInternal(Graph<K, VV, EV> input) throws Exception_;the,implementation,of,the,algorithm,renamed,from,link,graph,algorithm,run,graph,param,input,the,input,graph,return,the,algorithm,s,output,throws,exception;protected,abstract,data,set,t,run,internal,graph,k,vv,ev,input,throws,exception
GraphAlgorithmWrappingDataSet -> protected abstract DataSet<T> runInternal(Graph<K, VV, EV> input) throws Exception_;1484681137;The implementation of the algorithm, renamed from {@link GraphAlgorithm#run(Graph)}.__@param input the input graph_@return the algorithm's output_@throws Exception;protected abstract DataSet<T> runInternal(Graph<K, VV, EV> input) throws Exception_;the,implementation,of,the,algorithm,renamed,from,link,graph,algorithm,run,graph,param,input,the,input,graph,return,the,algorithm,s,output,throws,exception;protected,abstract,data,set,t,run,internal,graph,k,vv,ev,input,throws,exception
GraphAlgorithmWrappingDataSet -> protected abstract DataSet<T> runInternal(Graph<K, VV, EV> input) throws Exception_;1495653033;The implementation of the algorithm, renamed from {@link GraphAlgorithm#run(Graph)}.__@param input the input graph_@return the algorithm's output_@throws Exception;protected abstract DataSet<T> runInternal(Graph<K, VV, EV> input) throws Exception_;the,implementation,of,the,algorithm,renamed,from,link,graph,algorithm,run,graph,param,input,the,input,graph,return,the,algorithm,s,output,throws,exception;protected,abstract,data,set,t,run,internal,graph,k,vv,ev,input,throws,exception
GraphAlgorithmWrappingDataSet -> protected abstract DataSet<T> runInternal(Graph<K, VV, EV> input) throws Exception_;1498486910;The implementation of the algorithm, renamed from {@link GraphAlgorithm#run(Graph)}.__@param input the input graph_@return the algorithm's output_@throws Exception;protected abstract DataSet<T> runInternal(Graph<K, VV, EV> input) throws Exception_;the,implementation,of,the,algorithm,renamed,from,link,graph,algorithm,run,graph,param,input,the,input,graph,return,the,algorithm,s,output,throws,exception;protected,abstract,data,set,t,run,internal,graph,k,vv,ev,input,throws,exception
GraphAlgorithmWrappingDataSet -> protected abstract DataSet<T> runInternal(Graph<K, VV, EV> input) throws Exception_;1498486910;The implementation of the algorithm, renamed from {@link GraphAlgorithm#run(Graph)}.__@param input the input graph_@return the algorithm's output_@throws Exception;protected abstract DataSet<T> runInternal(Graph<K, VV, EV> input) throws Exception_;the,implementation,of,the,algorithm,renamed,from,link,graph,algorithm,run,graph,param,input,the,input,graph,return,the,algorithm,s,output,throws,exception;protected,abstract,data,set,t,run,internal,graph,k,vv,ev,input,throws,exception
GraphAlgorithmWrappingDataSet -> protected abstract String getAlgorithmName()_;1469452167;Algorithms are identified by name rather than by class to allow subclassing.__@return name of the algorithm, which may be shared by multiple classes_implementing the same algorithm and generating the same output;protected abstract String getAlgorithmName()_;algorithms,are,identified,by,name,rather,than,by,class,to,allow,subclassing,return,name,of,the,algorithm,which,may,be,shared,by,multiple,classes,implementing,the,same,algorithm,and,generating,the,same,output;protected,abstract,string,get,algorithm,name
GraphAlgorithmWrappingDataSet -> protected abstract String getAlgorithmName()_;1484681137;Algorithms are identified by name rather than by class to allow subclassing.__@return name of the algorithm, which may be shared by multiple classes_implementing the same algorithm and generating the same output;protected abstract String getAlgorithmName()_;algorithms,are,identified,by,name,rather,than,by,class,to,allow,subclassing,return,name,of,the,algorithm,which,may,be,shared,by,multiple,classes,implementing,the,same,algorithm,and,generating,the,same,output;protected,abstract,string,get,algorithm,name
GraphAlgorithmWrappingDataSet -> protected abstract String getAlgorithmName()_;1495653033;Algorithms are identified by name rather than by class to allow subclassing.__@return name of the algorithm, which may be shared by multiple classes_implementing the same algorithm and generating the same output;protected abstract String getAlgorithmName()_;algorithms,are,identified,by,name,rather,than,by,class,to,allow,subclassing,return,name,of,the,algorithm,which,may,be,shared,by,multiple,classes,implementing,the,same,algorithm,and,generating,the,same,output;protected,abstract,string,get,algorithm,name
GraphAlgorithmWrappingDataSet -> protected abstract boolean mergeConfiguration(GraphAlgorithmWrappingDataSet other)_;1469452167;An algorithm must first test whether the configurations can be merged_before merging individual fields.__@param other the algorithm with which to compare and merge_@return true if and only if configuration has been merged and the_algorithm's output can be reused;protected abstract boolean mergeConfiguration(GraphAlgorithmWrappingDataSet other)_;an,algorithm,must,first,test,whether,the,configurations,can,be,merged,before,merging,individual,fields,param,other,the,algorithm,with,which,to,compare,and,merge,return,true,if,and,only,if,configuration,has,been,merged,and,the,algorithm,s,output,can,be,reused;protected,abstract,boolean,merge,configuration,graph,algorithm,wrapping,data,set,other
GraphAlgorithmWrappingDataSet -> protected abstract boolean mergeConfiguration(GraphAlgorithmWrappingDataSet other)_;1484681137;An algorithm must first test whether the configurations can be merged_before merging individual fields.__@param other the algorithm with which to compare and merge_@return true if and only if configuration has been merged and the_algorithm's output can be reused;protected abstract boolean mergeConfiguration(GraphAlgorithmWrappingDataSet other)_;an,algorithm,must,first,test,whether,the,configurations,can,be,merged,before,merging,individual,fields,param,other,the,algorithm,with,which,to,compare,and,merge,return,true,if,and,only,if,configuration,has,been,merged,and,the,algorithm,s,output,can,be,reused;protected,abstract,boolean,merge,configuration,graph,algorithm,wrapping,data,set,other
GraphAlgorithmWrappingDataSet -> protected abstract boolean mergeConfiguration(GraphAlgorithmWrappingDataSet other)_;1495653033;An algorithm must first test whether the configurations can be merged_before merging individual fields.__@param other the algorithm with which to compare and merge_@return true if and only if configuration has been merged and the_algorithm's output can be reused;protected abstract boolean mergeConfiguration(GraphAlgorithmWrappingDataSet other)_;an,algorithm,must,first,test,whether,the,configurations,can,be,merged,before,merging,individual,fields,param,other,the,algorithm,with,which,to,compare,and,merge,return,true,if,and,only,if,configuration,has,been,merged,and,the,algorithm,s,output,can,be,reused;protected,abstract,boolean,merge,configuration,graph,algorithm,wrapping,data,set,other
