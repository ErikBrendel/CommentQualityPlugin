# id;timestamp;commentText;codeText;commentWords;codeWords
PageRankTest -> @Test 	public void testWithRMatGraph() 			throws Exception;1495653033;This test result can be verified with the following Python script.__import networkx as nx__graph=nx.read_edgelist('directedRMatGraph.csv', delimiter=',', create_using=nx.DiGraph())_pagerank=nx.algorithms.link_analysis.pagerank(graph)__for key in [0, 1, 2, 8, 13, 29, 109, 394, 652, 1020]:_print('{}: {}'.format(key, pagerank[str(key)]));@Test_	public void testWithRMatGraph()_			throws Exception {_		DataSet<Result<LongValue>> pr = new PageRank<LongValue, NullValue, NullValue>(DAMPING_FACTOR, 0.000001)_			.run(directedRMatGraph(10, 16))___		Map<Long, Result<LongValue>> results = new HashMap<>()__		for (Result<LongValue> result :  new Collect<Result<LongValue>>().run(pr).execute()) {_			results.put(result.getVertexId0().getValue(), result)__		}__		assertEquals(902, results.size())___		Map<Long, Double> expectedResults = new HashMap<>()__		_		expectedResults.put(0L, 0.027111807822)__		expectedResults.put(1L, 0.0132842310382)__		expectedResults.put(2L, 0.0121818392504)__		expectedResults.put(8L, 0.0115916809743)__		expectedResults.put(13L, 0.00183249490033)__		expectedResults.put(29L, 0.000848095047082)__		expectedResults.put(109L, 0.000308507844048)__		expectedResults.put(394L, 0.000828743280246)__		expectedResults.put(652L, 0.000684102931253)__		expectedResults.put(1020L, 0.000250487135148)___		for (Map.Entry<Long, Double> expected : expectedResults.entrySet()) {_			double value = results.get(expected.getKey()).getPageRankScore().getValue()___			assertEquals(expected.getValue(), value, 0.00001)__		}_	};this,test,result,can,be,verified,with,the,following,python,script,import,networkx,as,nx,graph,nx,directed,rmat,graph,csv,delimiter,nx,di,graph,pagerank,nx,algorithms,pagerank,graph,for,key,in,0,1,2,8,13,29,109,394,652,1020,print,format,key,pagerank,str,key;test,public,void,test,with,rmat,graph,throws,exception,data,set,result,long,value,pr,new,page,rank,long,value,null,value,null,value,0,000001,run,directed,rmat,graph,10,16,map,long,result,long,value,results,new,hash,map,for,result,long,value,result,new,collect,result,long,value,run,pr,execute,results,put,result,get,vertex,id0,get,value,result,assert,equals,902,results,size,map,long,double,expected,results,new,hash,map,expected,results,put,0l,0,027111807822,expected,results,put,1l,0,0132842310382,expected,results,put,2l,0,0121818392504,expected,results,put,8l,0,0115916809743,expected,results,put,13l,0,00183249490033,expected,results,put,29l,0,000848095047082,expected,results,put,109l,0,000308507844048,expected,results,put,394l,0,000828743280246,expected,results,put,652l,0,000684102931253,expected,results,put,1020l,0,000250487135148,for,map,entry,long,double,expected,expected,results,entry,set,double,value,results,get,expected,get,key,get,page,rank,score,get,value,assert,equals,expected,get,value,value,0,00001
PageRankTest -> @Test 	public void testWithRMatGraph() 			throws Exception;1498486910;This test result can be verified with the following Python script.__import networkx as nx__graph=nx.read_edgelist('directedRMatGraph.csv', delimiter=',', create_using=nx.DiGraph())_pagerank=nx.algorithms.link_analysis.pagerank(graph)__for key in [0, 1, 2, 8, 13, 29, 109, 394, 652, 1020]:_print('{}: {}'.format(key, pagerank[str(key)]));@Test_	public void testWithRMatGraph()_			throws Exception {_		DataSet<Result<LongValue>> pr = new PageRank<LongValue, NullValue, NullValue>(DAMPING_FACTOR, 0.000001)_			.run(directedRMatGraph(10, 16))___		Map<Long, Result<LongValue>> results = new HashMap<>()__		for (Result<LongValue> result :  new Collect<Result<LongValue>>().run(pr).execute()) {_			results.put(result.getVertexId0().getValue(), result)__		}__		assertEquals(902, results.size())___		Map<Long, Double> expectedResults = new HashMap<>()__		_		expectedResults.put(0L, 0.027111807822)__		expectedResults.put(1L, 0.0132842310382)__		expectedResults.put(2L, 0.0121818392504)__		expectedResults.put(8L, 0.0115916809743)__		expectedResults.put(13L, 0.00183249490033)__		expectedResults.put(29L, 0.000848095047082)__		expectedResults.put(109L, 0.000308507844048)__		expectedResults.put(394L, 0.000828743280246)__		expectedResults.put(652L, 0.000684102931253)__		expectedResults.put(1020L, 0.000250487135148)___		for (Map.Entry<Long, Double> expected : expectedResults.entrySet()) {_			double value = results.get(expected.getKey()).getPageRankScore().getValue()___			assertEquals(expected.getValue(), value, 0.00001)__		}_	};this,test,result,can,be,verified,with,the,following,python,script,import,networkx,as,nx,graph,nx,directed,rmat,graph,csv,delimiter,nx,di,graph,pagerank,nx,algorithms,pagerank,graph,for,key,in,0,1,2,8,13,29,109,394,652,1020,print,format,key,pagerank,str,key;test,public,void,test,with,rmat,graph,throws,exception,data,set,result,long,value,pr,new,page,rank,long,value,null,value,null,value,0,000001,run,directed,rmat,graph,10,16,map,long,result,long,value,results,new,hash,map,for,result,long,value,result,new,collect,result,long,value,run,pr,execute,results,put,result,get,vertex,id0,get,value,result,assert,equals,902,results,size,map,long,double,expected,results,new,hash,map,expected,results,put,0l,0,027111807822,expected,results,put,1l,0,0132842310382,expected,results,put,2l,0,0121818392504,expected,results,put,8l,0,0115916809743,expected,results,put,13l,0,00183249490033,expected,results,put,29l,0,000848095047082,expected,results,put,109l,0,000308507844048,expected,results,put,394l,0,000828743280246,expected,results,put,652l,0,000684102931253,expected,results,put,1020l,0,000250487135148,for,map,entry,long,double,expected,expected,results,entry,set,double,value,results,get,expected,get,key,get,page,rank,score,get,value,assert,equals,expected,get,value,value,0,00001
PageRankTest -> @Test 	public void testWithSimpleGraph() 			throws Exception;1495653033;This test result can be verified with the following Python script.__import networkx as nx__graph=nx.read_edgelist('directedSimpleGraph.csv', delimiter=',', create_using=nx.DiGraph())_pagerank=nx.algorithms.link_analysis.pagerank(graph)__for key in sorted(pagerank):_print('{}: {}'.format(key, pagerank[key]));@Test_	public void testWithSimpleGraph()_			throws Exception {_		DataSet<Result<IntValue>> pr = new PageRank<IntValue, NullValue, NullValue>(DAMPING_FACTOR, 10)_			.run(directedSimpleGraph)___		List<Double> expectedResults = new ArrayList<>()__		expectedResults.add(0.09091296131286301)__		expectedResults.add(0.27951855944178117)__		expectedResults.add(0.12956847924535586)__		expectedResults.add(0.22329643739217675)__		expectedResults.add(0.18579060129496028)__		expectedResults.add(0.09091296131286301)___		for (Tuple2<IntValue, DoubleValue> result : pr.collect()) {_			int id = result.f0.getValue()__			assertEquals(expectedResults.get(id), result.f1.getValue(), 0.000001)__		}_	};this,test,result,can,be,verified,with,the,following,python,script,import,networkx,as,nx,graph,nx,directed,simple,graph,csv,delimiter,nx,di,graph,pagerank,nx,algorithms,pagerank,graph,for,key,in,sorted,pagerank,print,format,key,pagerank,key;test,public,void,test,with,simple,graph,throws,exception,data,set,result,int,value,pr,new,page,rank,int,value,null,value,null,value,10,run,directed,simple,graph,list,double,expected,results,new,array,list,expected,results,add,0,09091296131286301,expected,results,add,0,27951855944178117,expected,results,add,0,12956847924535586,expected,results,add,0,22329643739217675,expected,results,add,0,18579060129496028,expected,results,add,0,09091296131286301,for,tuple2,int,value,double,value,result,pr,collect,int,id,result,f0,get,value,assert,equals,expected,results,get,id,result,f1,get,value,0,000001
PageRankTest -> @Test 	public void testWithSimpleGraph() 			throws Exception;1498486910;This test result can be verified with the following Python script.__import networkx as nx__graph=nx.read_edgelist('directedSimpleGraph.csv', delimiter=',', create_using=nx.DiGraph())_pagerank=nx.algorithms.link_analysis.pagerank(graph)__for key in sorted(pagerank):_print('{}: {}'.format(key, pagerank[key]));@Test_	public void testWithSimpleGraph()_			throws Exception {_		DataSet<Result<IntValue>> pr = new PageRank<IntValue, NullValue, NullValue>(DAMPING_FACTOR, 10)_			.run(directedSimpleGraph)___		List<Double> expectedResults = new ArrayList<>()__		expectedResults.add(0.09091296131286301)__		expectedResults.add(0.27951855944178117)__		expectedResults.add(0.12956847924535586)__		expectedResults.add(0.22329643739217675)__		expectedResults.add(0.18579060129496028)__		expectedResults.add(0.09091296131286301)___		for (Result<IntValue> result : pr.collect()) {_			int id = result.getVertexId0().getValue()__			assertEquals(expectedResults.get(id), result.getPageRankScore().getValue(), 0.000001)__		}_	};this,test,result,can,be,verified,with,the,following,python,script,import,networkx,as,nx,graph,nx,directed,simple,graph,csv,delimiter,nx,di,graph,pagerank,nx,algorithms,pagerank,graph,for,key,in,sorted,pagerank,print,format,key,pagerank,key;test,public,void,test,with,simple,graph,throws,exception,data,set,result,int,value,pr,new,page,rank,int,value,null,value,null,value,10,run,directed,simple,graph,list,double,expected,results,new,array,list,expected,results,add,0,09091296131286301,expected,results,add,0,27951855944178117,expected,results,add,0,12956847924535586,expected,results,add,0,22329643739217675,expected,results,add,0,18579060129496028,expected,results,add,0,09091296131286301,for,result,int,value,result,pr,collect,int,id,result,get,vertex,id0,get,value,assert,equals,expected,results,get,id,result,get,page,rank,score,get,value,0,000001
