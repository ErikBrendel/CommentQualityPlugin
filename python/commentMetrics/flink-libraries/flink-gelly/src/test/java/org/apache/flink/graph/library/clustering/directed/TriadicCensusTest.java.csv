# id;timestamp;commentText;codeText;commentWords;codeWords
TriadicCensusTest -> @Test 	public void testWithDirectedRMatGraph() 			throws Exception;1477924473;This test result can be verified with the following Python script.__import networkx as nx__graph=nx.read_edgelist('directedRMatGraph.csv', delimiter=',', create_using=nx.DiGraph())_census=nx.algorithms.triads.triadic_census(graph)_for key in ['003', '012', '102', '021D', '021U', '021C', '111D', '111U', \_'030T', '030C', '201', '120D', '120U', '120C', '210', '300']:_print('{}: {}'.format(key, census[key]));@Test_	public void testWithDirectedRMatGraph()_			throws Exception {_		Result expectedResult = new Result(_			113_435_893, 6_632_528, 983_535, 118_574,_			118_566, 237_767, 129_773, 130_041,_			16_981, 5_535, 43_574, 7_449,_			7_587, 15_178, 17_368, 4_951)___		Result triadCensus = new TriadicCensus<LongValue, NullValue, NullValue>()_			.run(directedRMatGraph)_			.execute()___		assertEquals(expectedResult, triadCensus)__	};this,test,result,can,be,verified,with,the,following,python,script,import,networkx,as,nx,graph,nx,directed,rmat,graph,csv,delimiter,nx,di,graph,census,nx,algorithms,triads,graph,for,key,in,003,012,102,021d,021u,021c,111d,111u,030t,030c,201,120d,120u,120c,210,300,print,format,key,census,key;test,public,void,test,with,directed,rmat,graph,throws,exception,result,expected,result,new,result,result,triad,census,new,triadic,census,long,value,null,value,null,value,run,directed,rmat,graph,execute,assert,equals,expected,result,triad,census
TriadicCensusTest -> @Test 	public void testWithDirectedRMatGraph() 			throws Exception;1492096187;This test result can be verified with the following Python script.__import networkx as nx__graph=nx.read_edgelist('directedRMatGraph.csv', delimiter=',', create_using=nx.DiGraph())_census=nx.algorithms.triads.triadic_census(graph)_for key in ['003', '012', '102', '021D', '021U', '021C', '111D', '111U', \_'030T', '030C', '201', '120D', '120U', '120C', '210', '300']:_print('{}: {}'.format(key, census[key]));@Test_	public void testWithDirectedRMatGraph()_			throws Exception {_		Result expectedResult = new Result(_			113_435_893, 6_632_528, 983_535, 118_574,_			118_566, 237_767, 129_773, 130_041,_			16_981, 5_535, 43_574, 7_449,_			7_587, 15_178, 17_368, 4_951)___		Result triadCensus = new TriadicCensus<LongValue, NullValue, NullValue>()_			.run(directedRMatGraph(10, 16))_			.execute()___		assertEquals(expectedResult, triadCensus)__	};this,test,result,can,be,verified,with,the,following,python,script,import,networkx,as,nx,graph,nx,directed,rmat,graph,csv,delimiter,nx,di,graph,census,nx,algorithms,triads,graph,for,key,in,003,012,102,021d,021u,021c,111d,111u,030t,030c,201,120d,120u,120c,210,300,print,format,key,census,key;test,public,void,test,with,directed,rmat,graph,throws,exception,result,expected,result,new,result,result,triad,census,new,triadic,census,long,value,null,value,null,value,run,directed,rmat,graph,10,16,execute,assert,equals,expected,result,triad,census
TriadicCensusTest -> @Test 	public void testWithDirectedRMatGraph() 			throws Exception;1495653033;This test result can be verified with the following Python script.__import networkx as nx__graph=nx.read_edgelist('directedRMatGraph.csv', delimiter=',', create_using=nx.DiGraph())_census=nx.algorithms.triads.triadic_census(graph)_for key in ['003', '012', '102', '021D', '021U', '021C', '111D', '111U', \_'030T', '030C', '201', '120D', '120U', '120C', '210', '300']:_print('{}: {}'.format(key, census[key]));@Test_	public void testWithDirectedRMatGraph()_			throws Exception {_		Result expectedResult = new Result(_			113_435_893, 6_632_528, 983_535, 118_574,_			118_566, 237_767, 129_773, 130_041,_			16_981, 5_535, 43_574, 7_449,_			7_587, 15_178, 17_368, 4_951)___		Result triadCensus = new TriadicCensus<LongValue, NullValue, NullValue>()_			.run(directedRMatGraph(10, 16))_			.execute()___		assertEquals(expectedResult, triadCensus)__	};this,test,result,can,be,verified,with,the,following,python,script,import,networkx,as,nx,graph,nx,directed,rmat,graph,csv,delimiter,nx,di,graph,census,nx,algorithms,triads,graph,for,key,in,003,012,102,021d,021u,021c,111d,111u,030t,030c,201,120d,120u,120c,210,300,print,format,key,census,key;test,public,void,test,with,directed,rmat,graph,throws,exception,result,expected,result,new,result,result,triad,census,new,triadic,census,long,value,null,value,null,value,run,directed,rmat,graph,10,16,execute,assert,equals,expected,result,triad,census
