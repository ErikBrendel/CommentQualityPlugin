# id;timestamp;commentText;codeText;commentWords;codeWords
TriadicCensusTest -> @Test 	public void testWithRMatGraph() 			throws Exception;1477924473;This test result can be verified with the following Python script.__import networkx as nx__graph=nx.read_edgelist('undirectedRMatGraph.csv', delimiter=',', create_using=nx.DiGraph())_census=nx.algorithms.triads.triadic_census(graph)_for key in ['003', '102', '201', '300']:_print('{}: {}'.format(key, census[key]));@Test_	public void testWithRMatGraph()_			throws Exception {_		Result expectedResult = new Result(113_435_893, 7_616_063, 778_295, 75_049)___		Result triadCensus = new TriadicCensus<LongValue, NullValue, NullValue>()_			.run(undirectedRMatGraph)_			.execute()___		assertEquals(expectedResult, triadCensus)__	};this,test,result,can,be,verified,with,the,following,python,script,import,networkx,as,nx,graph,nx,undirected,rmat,graph,csv,delimiter,nx,di,graph,census,nx,algorithms,triads,graph,for,key,in,003,102,201,300,print,format,key,census,key;test,public,void,test,with,rmat,graph,throws,exception,result,expected,result,new,result,result,triad,census,new,triadic,census,long,value,null,value,null,value,run,undirected,rmat,graph,execute,assert,equals,expected,result,triad,census
TriadicCensusTest -> @Test 	public void testWithRMatGraph() 			throws Exception;1492096187;This test result can be verified with the following Python script.__import networkx as nx__graph=nx.read_edgelist('undirectedRMatGraph.csv', delimiter=',', create_using=nx.DiGraph())_census=nx.algorithms.triads.triadic_census(graph)_for key in ['003', '102', '201', '300']:_print('{}: {}'.format(key, census[key]));@Test_	public void testWithRMatGraph()_			throws Exception {_		Result expectedResult = new Result(113_435_893, 7_616_063, 778_295, 75_049)___		Result triadCensus = new TriadicCensus<LongValue, NullValue, NullValue>()_			.run(undirectedRMatGraph(10, 16))_			.execute()___		assertEquals(expectedResult, triadCensus)__	};this,test,result,can,be,verified,with,the,following,python,script,import,networkx,as,nx,graph,nx,undirected,rmat,graph,csv,delimiter,nx,di,graph,census,nx,algorithms,triads,graph,for,key,in,003,102,201,300,print,format,key,census,key;test,public,void,test,with,rmat,graph,throws,exception,result,expected,result,new,result,result,triad,census,new,triadic,census,long,value,null,value,null,value,run,undirected,rmat,graph,10,16,execute,assert,equals,expected,result,triad,census
TriadicCensusTest -> @Test 	public void testWithRMatGraph() 			throws Exception;1495653033;This test result can be verified with the following Python script.__import networkx as nx__graph=nx.read_edgelist('undirectedRMatGraph.csv', delimiter=',', create_using=nx.DiGraph())_census=nx.algorithms.triads.triadic_census(graph)_for key in ['003', '102', '201', '300']:_print('{}: {}'.format(key, census[key]));@Test_	public void testWithRMatGraph()_			throws Exception {_		Result expectedResult = new Result(113_435_893, 7_616_063, 778_295, 75_049)___		Result triadCensus = new TriadicCensus<LongValue, NullValue, NullValue>()_			.run(undirectedRMatGraph(10, 16))_			.execute()___		assertEquals(expectedResult, triadCensus)__	};this,test,result,can,be,verified,with,the,following,python,script,import,networkx,as,nx,graph,nx,undirected,rmat,graph,csv,delimiter,nx,di,graph,census,nx,algorithms,triads,graph,for,key,in,003,102,201,300,print,format,key,census,key;test,public,void,test,with,rmat,graph,throws,exception,result,expected,result,new,result,result,triad,census,new,triadic,census,long,value,null,value,null,value,run,undirected,rmat,graph,10,16,execute,assert,equals,expected,result,triad,census
