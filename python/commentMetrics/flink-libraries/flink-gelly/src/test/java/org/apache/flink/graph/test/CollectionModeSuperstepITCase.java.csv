# id;timestamp;commentText;codeText;commentWords;codeWords
CollectionModeSuperstepITCase -> @Test 	public void testProgram() throws Exception;1444297686;Dummy iteration to test that the supersteps are correctly incremented_and can be retrieved from inside the updated and messaging functions._All vertices start with value 1 and increase their value by 1_in each iteration.;@Test_	public void testProgram() throws Exception {_		ExecutionEnvironment env = ExecutionEnvironment.createCollectionsEnvironment()__		_		Graph<Long, Long, Long> graph = Graph.fromCollection(TestGraphUtils.getLongLongVertices(), _				TestGraphUtils.getLongLongEdges(), env).mapVertices(new AssignOneMapper())__		_		Graph<Long, Long, Long> result = graph.runVertexCentricIteration(_				new UpdateFunction(), new MessageFunction(), 10)___		result.getVertices().map(_				new VertexToTuple2Map<Long, Long>()).output(_						new DiscardingOutputFormat<Tuple2<Long, Long>>())__		env.execute()__	};dummy,iteration,to,test,that,the,supersteps,are,correctly,incremented,and,can,be,retrieved,from,inside,the,updated,and,messaging,functions,all,vertices,start,with,value,1,and,increase,their,value,by,1,in,each,iteration;test,public,void,test,program,throws,exception,execution,environment,env,execution,environment,create,collections,environment,graph,long,long,long,graph,graph,from,collection,test,graph,utils,get,long,long,vertices,test,graph,utils,get,long,long,edges,env,map,vertices,new,assign,one,mapper,graph,long,long,long,result,graph,run,vertex,centric,iteration,new,update,function,new,message,function,10,result,get,vertices,map,new,vertex,to,tuple2map,long,long,output,new,discarding,output,format,tuple2,long,long,env,execute
CollectionModeSuperstepITCase -> @Test 	public void testProgram() throws Exception;1447616654;Dummy iteration to test that the supersteps are correctly incremented_and can be retrieved from inside the updated and messaging functions._All vertices start with value 1 and increase their value by 1_in each iteration.;@Test_	public void testProgram() throws Exception {_		ExecutionEnvironment env = ExecutionEnvironment.createCollectionsEnvironment()__		_		Graph<Long, Long, Long> graph = Graph.fromCollection(TestGraphUtils.getLongLongVertices(), _				TestGraphUtils.getLongLongEdges(), env).mapVertices(new AssignOneMapper())__		_		Graph<Long, Long, Long> result = graph.runVertexCentricIteration(_				new UpdateFunction(), new MessageFunction(), 10)___		result.getVertices().map(_				new VertexToTuple2Map<Long, Long>()).output(_						new DiscardingOutputFormat<Tuple2<Long, Long>>())__		env.execute()__	};dummy,iteration,to,test,that,the,supersteps,are,correctly,incremented,and,can,be,retrieved,from,inside,the,updated,and,messaging,functions,all,vertices,start,with,value,1,and,increase,their,value,by,1,in,each,iteration;test,public,void,test,program,throws,exception,execution,environment,env,execution,environment,create,collections,environment,graph,long,long,long,graph,graph,from,collection,test,graph,utils,get,long,long,vertices,test,graph,utils,get,long,long,edges,env,map,vertices,new,assign,one,mapper,graph,long,long,long,result,graph,run,vertex,centric,iteration,new,update,function,new,message,function,10,result,get,vertices,map,new,vertex,to,tuple2map,long,long,output,new,discarding,output,format,tuple2,long,long,env,execute
CollectionModeSuperstepITCase -> @Test 	public void testProgram() throws Exception;1452884884;Dummy iteration to test that the supersteps are correctly incremented_and can be retrieved from inside the updated and messaging functions._All vertices start with value 1 and increase their value by 1_in each iteration.;@Test_	public void testProgram() throws Exception {_		ExecutionEnvironment env = ExecutionEnvironment.createCollectionsEnvironment()__		_		Graph<Long, Long, Long> graph = Graph.fromCollection(TestGraphUtils.getLongLongVertices(), _				TestGraphUtils.getLongLongEdges(), env).mapVertices(new AssignOneMapper())__		_		Graph<Long, Long, Long> result = graph.runScatterGatherIteration(_				new UpdateFunction(), new MessageFunction(), 10)___		result.getVertices().map(_				new VertexToTuple2Map<Long, Long>()).output(_						new DiscardingOutputFormat<Tuple2<Long, Long>>())__		env.execute()__	};dummy,iteration,to,test,that,the,supersteps,are,correctly,incremented,and,can,be,retrieved,from,inside,the,updated,and,messaging,functions,all,vertices,start,with,value,1,and,increase,their,value,by,1,in,each,iteration;test,public,void,test,program,throws,exception,execution,environment,env,execution,environment,create,collections,environment,graph,long,long,long,graph,graph,from,collection,test,graph,utils,get,long,long,vertices,test,graph,utils,get,long,long,edges,env,map,vertices,new,assign,one,mapper,graph,long,long,long,result,graph,run,scatter,gather,iteration,new,update,function,new,message,function,10,result,get,vertices,map,new,vertex,to,tuple2map,long,long,output,new,discarding,output,format,tuple2,long,long,env,execute
CollectionModeSuperstepITCase -> @Test 	public void testProgram() throws Exception;1462563578;Dummy iteration to test that the supersteps are correctly incremented_and can be retrieved from inside the scatter and gather functions._All vertices start with value 1 and increase their value by 1_in each iteration.;@Test_	public void testProgram() throws Exception {_		ExecutionEnvironment env = ExecutionEnvironment.createCollectionsEnvironment()___		Graph<Long, Long, Long> graph = Graph.fromCollection(TestGraphUtils.getLongLongVertices(),_				TestGraphUtils.getLongLongEdges(), env).mapVertices(new AssignOneMapper())___		Graph<Long, Long, Long> result = graph.runScatterGatherIteration(_				new MessageFunction(), new UpdateFunction(), 10)___		result.getVertices().map(_				new VertexToTuple2Map<Long, Long>()).output(_						new DiscardingOutputFormat<Tuple2<Long, Long>>())__		env.execute()__	};dummy,iteration,to,test,that,the,supersteps,are,correctly,incremented,and,can,be,retrieved,from,inside,the,scatter,and,gather,functions,all,vertices,start,with,value,1,and,increase,their,value,by,1,in,each,iteration;test,public,void,test,program,throws,exception,execution,environment,env,execution,environment,create,collections,environment,graph,long,long,long,graph,graph,from,collection,test,graph,utils,get,long,long,vertices,test,graph,utils,get,long,long,edges,env,map,vertices,new,assign,one,mapper,graph,long,long,long,result,graph,run,scatter,gather,iteration,new,message,function,new,update,function,10,result,get,vertices,map,new,vertex,to,tuple2map,long,long,output,new,discarding,output,format,tuple2,long,long,env,execute
CollectionModeSuperstepITCase -> @Test 	public void testProgram() throws Exception;1491988143;Dummy iteration to test that the supersteps are correctly incremented_and can be retrieved from inside the scatter and gather functions._All vertices start with value 1 and increase their value by 1_in each iteration.;@Test_	public void testProgram() throws Exception {_		ExecutionEnvironment env = ExecutionEnvironment.createCollectionsEnvironment()___		Graph<Long, Long, Long> graph = Graph.fromCollection(TestGraphUtils.getLongLongVertices(),_				TestGraphUtils.getLongLongEdges(), env).mapVertices(new AssignOneMapper())___		Graph<Long, Long, Long> result = graph.runScatterGatherIteration(_				new MessageFunction(), new UpdateFunction(), 10)___		result.getVertices().map(_				new VertexToTuple2Map<Long, Long>()).output(_						new DiscardingOutputFormat<Tuple2<Long, Long>>())__		env.execute()__	};dummy,iteration,to,test,that,the,supersteps,are,correctly,incremented,and,can,be,retrieved,from,inside,the,scatter,and,gather,functions,all,vertices,start,with,value,1,and,increase,their,value,by,1,in,each,iteration;test,public,void,test,program,throws,exception,execution,environment,env,execution,environment,create,collections,environment,graph,long,long,long,graph,graph,from,collection,test,graph,utils,get,long,long,vertices,test,graph,utils,get,long,long,edges,env,map,vertices,new,assign,one,mapper,graph,long,long,long,result,graph,run,scatter,gather,iteration,new,message,function,new,update,function,10,result,get,vertices,map,new,vertex,to,tuple2map,long,long,output,new,discarding,output,format,tuple2,long,long,env,execute
