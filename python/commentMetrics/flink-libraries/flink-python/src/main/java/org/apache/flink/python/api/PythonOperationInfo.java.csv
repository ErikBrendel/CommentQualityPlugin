# id;timestamp;commentText;codeText;commentWords;codeWords
PythonOperationInfo -> private static String[] normalizeKeys(Object keys);1447351482;====Utility=======================================================================================================;private static String[] normalizeKeys(Object keys) {_		if (keys instanceof Tuple) {_			Tuple tupleKeys = (Tuple) keys__			if (tupleKeys.getArity() == 0) {_				return new String[0]__			}_			if (tupleKeys.getField(0) instanceof Integer) {_				String[] stringKeys = new String[tupleKeys.getArity()]__				for (int x = 0_ x < stringKeys.length_ x++) {_					stringKeys[x] = "f" + (Integer) tupleKeys.getField(x)__				}_				return stringKeys__			}_			if (tupleKeys.getField(0) instanceof String) {_				return tupleToStringArray(tupleKeys)__			}_			throw new RuntimeException("Key argument contains field that is neither an int nor a String.")__		}_		if (keys instanceof int[]) {_			int[] intKeys = (int[]) keys__			String[] stringKeys = new String[intKeys.length]__			for (int x = 0_ x < stringKeys.length_ x++) {_				stringKeys[x] = "f" + intKeys[x]__			}_			return stringKeys__		}_		throw new RuntimeException("Key argument is neither an int[] nor a Tuple.")__	};utility;private,static,string,normalize,keys,object,keys,if,keys,instanceof,tuple,tuple,tuple,keys,tuple,keys,if,tuple,keys,get,arity,0,return,new,string,0,if,tuple,keys,get,field,0,instanceof,integer,string,string,keys,new,string,tuple,keys,get,arity,for,int,x,0,x,string,keys,length,x,string,keys,x,f,integer,tuple,keys,get,field,x,return,string,keys,if,tuple,keys,get,field,0,instanceof,string,return,tuple,to,string,array,tuple,keys,throw,new,runtime,exception,key,argument,contains,field,that,is,neither,an,int,nor,a,string,if,keys,instanceof,int,int,int,keys,int,keys,string,string,keys,new,string,int,keys,length,for,int,x,0,x,string,keys,length,x,string,keys,x,f,int,keys,x,return,string,keys,throw,new,runtime,exception,key,argument,is,neither,an,int,nor,a,tuple
PythonOperationInfo -> private static String[] normalizeKeys(Object keys);1448205809;====Utility=======================================================================================================;private static String[] normalizeKeys(Object keys) {_		if (keys instanceof Tuple) {_			Tuple tupleKeys = (Tuple) keys__			if (tupleKeys.getArity() == 0) {_				return new String[0]__			}_			if (tupleKeys.getField(0) instanceof Integer) {_				String[] stringKeys = new String[tupleKeys.getArity()]__				for (int x = 0_ x < stringKeys.length_ x++) {_					stringKeys[x] = "f" + (Integer) tupleKeys.getField(x)__				}_				return stringKeys__			}_			if (tupleKeys.getField(0) instanceof String) {_				return tupleToStringArray(tupleKeys)__			}_			throw new RuntimeException("Key argument contains field that is neither an int nor a String.")__		}_		if (keys instanceof int[]) {_			int[] intKeys = (int[]) keys__			String[] stringKeys = new String[intKeys.length]__			for (int x = 0_ x < stringKeys.length_ x++) {_				stringKeys[x] = "f" + intKeys[x]__			}_			return stringKeys__		}_		throw new RuntimeException("Key argument is neither an int[] nor a Tuple.")__	};utility;private,static,string,normalize,keys,object,keys,if,keys,instanceof,tuple,tuple,tuple,keys,tuple,keys,if,tuple,keys,get,arity,0,return,new,string,0,if,tuple,keys,get,field,0,instanceof,integer,string,string,keys,new,string,tuple,keys,get,arity,for,int,x,0,x,string,keys,length,x,string,keys,x,f,integer,tuple,keys,get,field,x,return,string,keys,if,tuple,keys,get,field,0,instanceof,string,return,tuple,to,string,array,tuple,keys,throw,new,runtime,exception,key,argument,contains,field,that,is,neither,an,int,nor,a,string,if,keys,instanceof,int,int,int,keys,int,keys,string,string,keys,new,string,int,keys,length,for,int,x,0,x,string,keys,length,x,string,keys,x,f,int,keys,x,return,string,keys,throw,new,runtime,exception,key,argument,is,neither,an,int,nor,a,tuple
PythonOperationInfo -> private static String[] normalizeKeys(Object keys);1448303250;====Utility=======================================================================================================;private static String[] normalizeKeys(Object keys) {_		if (keys instanceof Tuple) {_			Tuple tupleKeys = (Tuple) keys__			if (tupleKeys.getArity() == 0) {_				return new String[0]__			}_			if (tupleKeys.getField(0) instanceof Integer) {_				String[] stringKeys = new String[tupleKeys.getArity()]__				for (int x = 0_ x < stringKeys.length_ x++) {_					stringKeys[x] = "f" + (Integer) tupleKeys.getField(x)__				}_				return stringKeys__			}_			if (tupleKeys.getField(0) instanceof String) {_				return tupleToStringArray(tupleKeys)__			}_			throw new RuntimeException("Key argument contains field that is neither an int nor a String.")__		}_		if (keys instanceof int[]) {_			int[] intKeys = (int[]) keys__			String[] stringKeys = new String[intKeys.length]__			for (int x = 0_ x < stringKeys.length_ x++) {_				stringKeys[x] = "f" + intKeys[x]__			}_			return stringKeys__		}_		throw new RuntimeException("Key argument is neither an int[] nor a Tuple.")__	};utility;private,static,string,normalize,keys,object,keys,if,keys,instanceof,tuple,tuple,tuple,keys,tuple,keys,if,tuple,keys,get,arity,0,return,new,string,0,if,tuple,keys,get,field,0,instanceof,integer,string,string,keys,new,string,tuple,keys,get,arity,for,int,x,0,x,string,keys,length,x,string,keys,x,f,integer,tuple,keys,get,field,x,return,string,keys,if,tuple,keys,get,field,0,instanceof,string,return,tuple,to,string,array,tuple,keys,throw,new,runtime,exception,key,argument,contains,field,that,is,neither,an,int,nor,a,string,if,keys,instanceof,int,int,int,keys,int,keys,string,string,keys,new,string,int,keys,length,for,int,x,0,x,string,keys,length,x,string,keys,x,f,int,keys,x,return,string,keys,throw,new,runtime,exception,key,argument,is,neither,an,int,nor,a,tuple
PythonOperationInfo -> private static String[] normalizeKeys(Object keys);1453297853;====Utility=======================================================================================================;private static String[] normalizeKeys(Object keys) {_		if (keys instanceof Tuple) {_			Tuple tupleKeys = (Tuple) keys__			if (tupleKeys.getArity() == 0) {_				return new String[0]__			}_			if (tupleKeys.getField(0) instanceof Integer) {_				String[] stringKeys = new String[tupleKeys.getArity()]__				for (int x = 0_ x < stringKeys.length_ x++) {_					stringKeys[x] = "f0.f" + (Integer) tupleKeys.getField(x)__				}_				return stringKeys__			}_			if (tupleKeys.getField(0) instanceof String) {_				return tupleToStringArray(tupleKeys)__			}_			throw new RuntimeException("Key argument contains field that is neither an int nor a String: " + tupleKeys)__		}_		if (keys instanceof int[]) {_			int[] intKeys = (int[]) keys__			String[] stringKeys = new String[intKeys.length]__			for (int x = 0_ x < stringKeys.length_ x++) {_				stringKeys[x] = "f0.f" + intKeys[x]__			}_			return stringKeys__		}_		throw new RuntimeException("Key argument is neither an int[] nor a Tuple: " + keys.toString())__	};utility;private,static,string,normalize,keys,object,keys,if,keys,instanceof,tuple,tuple,tuple,keys,tuple,keys,if,tuple,keys,get,arity,0,return,new,string,0,if,tuple,keys,get,field,0,instanceof,integer,string,string,keys,new,string,tuple,keys,get,arity,for,int,x,0,x,string,keys,length,x,string,keys,x,f0,f,integer,tuple,keys,get,field,x,return,string,keys,if,tuple,keys,get,field,0,instanceof,string,return,tuple,to,string,array,tuple,keys,throw,new,runtime,exception,key,argument,contains,field,that,is,neither,an,int,nor,a,string,tuple,keys,if,keys,instanceof,int,int,int,keys,int,keys,string,string,keys,new,string,int,keys,length,for,int,x,0,x,string,keys,length,x,string,keys,x,f0,f,int,keys,x,return,string,keys,throw,new,runtime,exception,key,argument,is,neither,an,int,nor,a,tuple,keys,to,string
PythonOperationInfo -> private static String[] normalizeKeys(Object keys);1453902747;====Utility=======================================================================================================;private static String[] normalizeKeys(Object keys) {_		if (keys instanceof Tuple) {_			Tuple tupleKeys = (Tuple) keys__			if (tupleKeys.getArity() == 0) {_				return new String[0]__			}_			if (tupleKeys.getField(0) instanceof Integer) {_				String[] stringKeys = new String[tupleKeys.getArity()]__				for (int x = 0_ x < stringKeys.length_ x++) {_					stringKeys[x] = "f0.f" + (Integer) tupleKeys.getField(x)__				}_				return stringKeys__			}_			if (tupleKeys.getField(0) instanceof String) {_				return tupleToStringArray(tupleKeys)__			}_			throw new RuntimeException("Key argument contains field that is neither an int nor a String: " + tupleKeys)__		}_		if (keys instanceof int[]) {_			int[] intKeys = (int[]) keys__			String[] stringKeys = new String[intKeys.length]__			for (int x = 0_ x < stringKeys.length_ x++) {_				stringKeys[x] = "f0.f" + intKeys[x]__			}_			return stringKeys__		}_		throw new RuntimeException("Key argument is neither an int[] nor a Tuple: " + keys.toString())__	};utility;private,static,string,normalize,keys,object,keys,if,keys,instanceof,tuple,tuple,tuple,keys,tuple,keys,if,tuple,keys,get,arity,0,return,new,string,0,if,tuple,keys,get,field,0,instanceof,integer,string,string,keys,new,string,tuple,keys,get,arity,for,int,x,0,x,string,keys,length,x,string,keys,x,f0,f,integer,tuple,keys,get,field,x,return,string,keys,if,tuple,keys,get,field,0,instanceof,string,return,tuple,to,string,array,tuple,keys,throw,new,runtime,exception,key,argument,contains,field,that,is,neither,an,int,nor,a,string,tuple,keys,if,keys,instanceof,int,int,int,keys,int,keys,string,string,keys,new,string,int,keys,length,for,int,x,0,x,string,keys,length,x,string,keys,x,f0,f,int,keys,x,return,string,keys,throw,new,runtime,exception,key,argument,is,neither,an,int,nor,a,tuple,keys,to,string
PythonOperationInfo -> private static String[] normalizeKeys(Object keys);1453971625;====Utility=======================================================================================================;private static String[] normalizeKeys(Object keys) {_		if (keys instanceof Tuple) {_			Tuple tupleKeys = (Tuple) keys__			if (tupleKeys.getArity() == 0) {_				return new String[0]__			}_			if (tupleKeys.getField(0) instanceof Integer) {_				String[] stringKeys = new String[tupleKeys.getArity()]__				for (int x = 0_ x < stringKeys.length_ x++) {_					stringKeys[x] = "f0.f" + (Integer) tupleKeys.getField(x)__				}_				return stringKeys__			}_			if (tupleKeys.getField(0) instanceof String) {_				return tupleToStringArray(tupleKeys)__			}_			throw new RuntimeException("Key argument contains field that is neither an int nor a String: " + tupleKeys)__		}_		if (keys instanceof int[]) {_			int[] intKeys = (int[]) keys__			String[] stringKeys = new String[intKeys.length]__			for (int x = 0_ x < stringKeys.length_ x++) {_				stringKeys[x] = "f0.f" + intKeys[x]__			}_			return stringKeys__		}_		throw new RuntimeException("Key argument is neither an int[] nor a Tuple: " + keys.toString())__	};utility;private,static,string,normalize,keys,object,keys,if,keys,instanceof,tuple,tuple,tuple,keys,tuple,keys,if,tuple,keys,get,arity,0,return,new,string,0,if,tuple,keys,get,field,0,instanceof,integer,string,string,keys,new,string,tuple,keys,get,arity,for,int,x,0,x,string,keys,length,x,string,keys,x,f0,f,integer,tuple,keys,get,field,x,return,string,keys,if,tuple,keys,get,field,0,instanceof,string,return,tuple,to,string,array,tuple,keys,throw,new,runtime,exception,key,argument,contains,field,that,is,neither,an,int,nor,a,string,tuple,keys,if,keys,instanceof,int,int,int,keys,int,keys,string,string,keys,new,string,int,keys,length,for,int,x,0,x,string,keys,length,x,string,keys,x,f0,f,int,keys,x,return,string,keys,throw,new,runtime,exception,key,argument,is,neither,an,int,nor,a,tuple,keys,to,string
PythonOperationInfo -> private static String[] normalizeKeys(Object keys);1464693818;====Utility=======================================================================================================;private static String[] normalizeKeys(Object keys) {_		if (keys instanceof Tuple) {_			Tuple tupleKeys = (Tuple) keys__			if (tupleKeys.getArity() == 0) {_				return new String[0]__			}_			if (tupleKeys.getField(0) instanceof Integer) {_				String[] stringKeys = new String[tupleKeys.getArity()]__				for (int x = 0_ x < stringKeys.length_ x++) {_					stringKeys[x] = "f0.f" + (Integer) tupleKeys.getField(x)__				}_				return stringKeys__			}_			if (tupleKeys.getField(0) instanceof String) {_				return tupleToStringArray(tupleKeys)__			}_			throw new RuntimeException("Key argument contains field that is neither an int nor a String: " + tupleKeys)__		}_		if (keys instanceof int[]) {_			int[] intKeys = (int[]) keys__			String[] stringKeys = new String[intKeys.length]__			for (int x = 0_ x < stringKeys.length_ x++) {_				stringKeys[x] = "f0.f" + intKeys[x]__			}_			return stringKeys__		}_		throw new RuntimeException("Key argument is neither an int[] nor a Tuple: " + keys.toString())__	};utility;private,static,string,normalize,keys,object,keys,if,keys,instanceof,tuple,tuple,tuple,keys,tuple,keys,if,tuple,keys,get,arity,0,return,new,string,0,if,tuple,keys,get,field,0,instanceof,integer,string,string,keys,new,string,tuple,keys,get,arity,for,int,x,0,x,string,keys,length,x,string,keys,x,f0,f,integer,tuple,keys,get,field,x,return,string,keys,if,tuple,keys,get,field,0,instanceof,string,return,tuple,to,string,array,tuple,keys,throw,new,runtime,exception,key,argument,contains,field,that,is,neither,an,int,nor,a,string,tuple,keys,if,keys,instanceof,int,int,int,keys,int,keys,string,string,keys,new,string,int,keys,length,for,int,x,0,x,string,keys,length,x,string,keys,x,f0,f,int,keys,x,return,string,keys,throw,new,runtime,exception,key,argument,is,neither,an,int,nor,a,tuple,keys,to,string
PythonOperationInfo -> private static String[] normalizeKeys(Object keys);1464883859;====Utility=======================================================================================================;private static String[] normalizeKeys(Object keys) {_		if (keys instanceof Tuple) {_			Tuple tupleKeys = (Tuple) keys__			if (tupleKeys.getArity() == 0) {_				return new String[0]__			}_			if (tupleKeys.getField(0) instanceof Integer) {_				String[] stringKeys = new String[tupleKeys.getArity()]__				for (int x = 0_ x < stringKeys.length_ x++) {_					stringKeys[x] = "f0.f" + (Integer) tupleKeys.getField(x)__				}_				return stringKeys__			}_			if (tupleKeys.getField(0) instanceof String) {_				return tupleToStringArray(tupleKeys)__			}_			throw new RuntimeException("Key argument contains field that is neither an int nor a String: " + tupleKeys)__		}_		if (keys instanceof int[]) {_			int[] intKeys = (int[]) keys__			String[] stringKeys = new String[intKeys.length]__			for (int x = 0_ x < stringKeys.length_ x++) {_				stringKeys[x] = "f0.f" + intKeys[x]__			}_			return stringKeys__		}_		throw new RuntimeException("Key argument is neither an int[] nor a Tuple: " + keys.toString())__	};utility;private,static,string,normalize,keys,object,keys,if,keys,instanceof,tuple,tuple,tuple,keys,tuple,keys,if,tuple,keys,get,arity,0,return,new,string,0,if,tuple,keys,get,field,0,instanceof,integer,string,string,keys,new,string,tuple,keys,get,arity,for,int,x,0,x,string,keys,length,x,string,keys,x,f0,f,integer,tuple,keys,get,field,x,return,string,keys,if,tuple,keys,get,field,0,instanceof,string,return,tuple,to,string,array,tuple,keys,throw,new,runtime,exception,key,argument,contains,field,that,is,neither,an,int,nor,a,string,tuple,keys,if,keys,instanceof,int,int,int,keys,int,keys,string,string,keys,new,string,int,keys,length,for,int,x,0,x,string,keys,length,x,string,keys,x,f0,f,int,keys,x,return,string,keys,throw,new,runtime,exception,key,argument,is,neither,an,int,nor,a,tuple,keys,to,string
PythonOperationInfo -> private static String[] normalizeKeys(Object keys);1485440155;====Utility=======================================================================================================;private static String[] normalizeKeys(Object keys) {_		if (keys instanceof Tuple) {_			Tuple tupleKeys = (Tuple) keys__			if (tupleKeys.getArity() == 0) {_				return new String[0]__			}_			if (tupleKeys.getField(0) instanceof Integer) {_				String[] stringKeys = new String[tupleKeys.getArity()]__				for (int x = 0_ x < stringKeys.length_ x++) {_					stringKeys[x] = "f0.f" + (Integer) tupleKeys.getField(x)__				}_				return stringKeys__			}_			if (tupleKeys.getField(0) instanceof String) {_				return tupleToStringArray(tupleKeys)__			}_			throw new RuntimeException("Key argument contains field that is neither an int nor a String: " + tupleKeys)__		}_		if (keys instanceof int[]) {_			int[] intKeys = (int[]) keys__			String[] stringKeys = new String[intKeys.length]__			for (int x = 0_ x < stringKeys.length_ x++) {_				stringKeys[x] = "f0.f" + intKeys[x]__			}_			return stringKeys__		}_		throw new RuntimeException("Key argument is neither an int[] nor a Tuple: " + keys.toString())__	};utility;private,static,string,normalize,keys,object,keys,if,keys,instanceof,tuple,tuple,tuple,keys,tuple,keys,if,tuple,keys,get,arity,0,return,new,string,0,if,tuple,keys,get,field,0,instanceof,integer,string,string,keys,new,string,tuple,keys,get,arity,for,int,x,0,x,string,keys,length,x,string,keys,x,f0,f,integer,tuple,keys,get,field,x,return,string,keys,if,tuple,keys,get,field,0,instanceof,string,return,tuple,to,string,array,tuple,keys,throw,new,runtime,exception,key,argument,contains,field,that,is,neither,an,int,nor,a,string,tuple,keys,if,keys,instanceof,int,int,int,keys,int,keys,string,string,keys,new,string,int,keys,length,for,int,x,0,x,string,keys,length,x,string,keys,x,f0,f,int,keys,x,return,string,keys,throw,new,runtime,exception,key,argument,is,neither,an,int,nor,a,tuple,keys,to,string
PythonOperationInfo -> private static String[] normalizeKeys(Object keys);1493741028;====Utility=======================================================================================================;private static String[] normalizeKeys(Object keys) {_		if (keys instanceof Tuple) {_			Tuple tupleKeys = (Tuple) keys__			if (tupleKeys.getArity() == 0) {_				return new String[0]__			}_			if (tupleKeys.getField(0) instanceof Integer) {_				String[] stringKeys = new String[tupleKeys.getArity()]__				for (int x = 0_ x < stringKeys.length_ x++) {_					stringKeys[x] = "f0.f" + (Integer) tupleKeys.getField(x)__				}_				return stringKeys__			}_			if (tupleKeys.getField(0) instanceof String) {_				return tupleToStringArray(tupleKeys)__			}_			throw new RuntimeException("Key argument contains field that is neither an int nor a String: " + tupleKeys)__		}_		if (keys instanceof int[]) {_			int[] intKeys = (int[]) keys__			String[] stringKeys = new String[intKeys.length]__			for (int x = 0_ x < stringKeys.length_ x++) {_				stringKeys[x] = "f0.f" + intKeys[x]__			}_			return stringKeys__		}_		throw new RuntimeException("Key argument is neither an int[] nor a Tuple: " + keys.toString())__	};utility;private,static,string,normalize,keys,object,keys,if,keys,instanceof,tuple,tuple,tuple,keys,tuple,keys,if,tuple,keys,get,arity,0,return,new,string,0,if,tuple,keys,get,field,0,instanceof,integer,string,string,keys,new,string,tuple,keys,get,arity,for,int,x,0,x,string,keys,length,x,string,keys,x,f0,f,integer,tuple,keys,get,field,x,return,string,keys,if,tuple,keys,get,field,0,instanceof,string,return,tuple,to,string,array,tuple,keys,throw,new,runtime,exception,key,argument,contains,field,that,is,neither,an,int,nor,a,string,tuple,keys,if,keys,instanceof,int,int,int,keys,int,keys,string,string,keys,new,string,int,keys,length,for,int,x,0,x,string,keys,length,x,string,keys,x,f0,f,int,keys,x,return,string,keys,throw,new,runtime,exception,key,argument,is,neither,an,int,nor,a,tuple,keys,to,string
PythonOperationInfo -> private static String[] normalizeKeys(Object keys);1528992169;====Utility=======================================================================================================;private static String[] normalizeKeys(Object keys) {_		if (keys instanceof Tuple) {_			Tuple tupleKeys = (Tuple) keys__			if (tupleKeys.getArity() == 0) {_				return new String[0]__			}_			if (tupleKeys.getField(0) instanceof Integer) {_				String[] stringKeys = new String[tupleKeys.getArity()]__				for (int x = 0_ x < stringKeys.length_ x++) {_					stringKeys[x] = "f0.f" + (Integer) tupleKeys.getField(x)__				}_				return stringKeys__			}_			if (tupleKeys.getField(0) instanceof String) {_				return tupleToStringArray(tupleKeys)__			}_			throw new RuntimeException("Key argument contains field that is neither an int nor a String: " + tupleKeys)__		}_		if (keys instanceof int[]) {_			int[] intKeys = (int[]) keys__			String[] stringKeys = new String[intKeys.length]__			for (int x = 0_ x < stringKeys.length_ x++) {_				stringKeys[x] = "f0.f" + intKeys[x]__			}_			return stringKeys__		}_		throw new RuntimeException("Key argument is neither an int[] nor a Tuple: " + keys.toString())__	};utility;private,static,string,normalize,keys,object,keys,if,keys,instanceof,tuple,tuple,tuple,keys,tuple,keys,if,tuple,keys,get,arity,0,return,new,string,0,if,tuple,keys,get,field,0,instanceof,integer,string,string,keys,new,string,tuple,keys,get,arity,for,int,x,0,x,string,keys,length,x,string,keys,x,f0,f,integer,tuple,keys,get,field,x,return,string,keys,if,tuple,keys,get,field,0,instanceof,string,return,tuple,to,string,array,tuple,keys,throw,new,runtime,exception,key,argument,contains,field,that,is,neither,an,int,nor,a,string,tuple,keys,if,keys,instanceof,int,int,int,keys,int,keys,string,string,keys,new,string,int,keys,length,for,int,x,0,x,string,keys,length,x,string,keys,x,f0,f,int,keys,x,return,string,keys,throw,new,runtime,exception,key,argument,is,neither,an,int,nor,a,tuple,keys,to,string
