# id;timestamp;commentText;codeText;commentWords;codeWords
PythonPlanBinderTest -> private static String getPythonPath(String[] possibleBinaries, String expectedVersionPrefix) 		throws IOException;1501497776;Finds the python binary for the given version.__@param possibleBinaries_binaries to test for_@param expectedVersionPrefix_expected output prefix for <tt>&lt_binary&gt_ -V</tt>, e.g. <tt>"Python 2."</tt>__@return python binary or <tt>null</tt> if not supported__@throws IOException_if the process to test for the binaries failed to exit properly;private static String getPythonPath(String[] possibleBinaries, String expectedVersionPrefix)_		throws IOException {_		Process process = null__		for (String python : possibleBinaries) {_			try {_				process = new ProcessBuilder(python, "-V").redirectErrorStream(true).start()__				BufferedReader stdInput = new BufferedReader(new_					InputStreamReader(process.getInputStream()))___				if (stdInput.readLine().startsWith(expectedVersionPrefix)) {_					return python__				}_			} catch (IOException ignored) {_			} finally {_				if (process != null) {_					PythonStreamer.destroyProcess(process)__				}_			}_		}_		return null__	};finds,the,python,binary,for,the,given,version,param,possible,binaries,binaries,to,test,for,param,expected,version,prefix,expected,output,prefix,for,tt,lt,binary,gt,v,tt,e,g,tt,python,2,tt,return,python,binary,or,tt,null,tt,if,not,supported,throws,ioexception,if,the,process,to,test,for,the,binaries,failed,to,exit,properly;private,static,string,get,python,path,string,possible,binaries,string,expected,version,prefix,throws,ioexception,process,process,null,for,string,python,possible,binaries,try,process,new,process,builder,python,v,redirect,error,stream,true,start,buffered,reader,std,input,new,buffered,reader,new,input,stream,reader,process,get,input,stream,if,std,input,read,line,starts,with,expected,version,prefix,return,python,catch,ioexception,ignored,finally,if,process,null,python,streamer,destroy,process,process,return,null
PythonPlanBinderTest -> private static String getPythonPath(String[] possibleBinaries, String expectedVersionPrefix) 		throws IOException;1511185072;Finds the python binary for the given version.__@param possibleBinaries_binaries to test for_@param expectedVersionPrefix_expected output prefix for <tt>&lt_binary&gt_ -V</tt>, e.g. <tt>"Python 2."</tt>__@return python binary or <tt>null</tt> if not supported__@throws IOException_if the process to test for the binaries failed to exit properly;private static String getPythonPath(String[] possibleBinaries, String expectedVersionPrefix)_		throws IOException {_		Process process = null__		for (String python : possibleBinaries) {_			try {_				process = new ProcessBuilder(python, "-V").redirectErrorStream(true).start()__				BufferedReader stdInput = new BufferedReader(new_					InputStreamReader(process.getInputStream()))___				if (stdInput.readLine().startsWith(expectedVersionPrefix)) {_					return python__				}_			} catch (IOException ignored) {_			} finally {_				if (process != null) {_					PythonStreamer.destroyProcess(process)__				}_			}_		}_		return null__	};finds,the,python,binary,for,the,given,version,param,possible,binaries,binaries,to,test,for,param,expected,version,prefix,expected,output,prefix,for,tt,lt,binary,gt,v,tt,e,g,tt,python,2,tt,return,python,binary,or,tt,null,tt,if,not,supported,throws,ioexception,if,the,process,to,test,for,the,binaries,failed,to,exit,properly;private,static,string,get,python,path,string,possible,binaries,string,expected,version,prefix,throws,ioexception,process,process,null,for,string,python,possible,binaries,try,process,new,process,builder,python,v,redirect,error,stream,true,start,buffered,reader,std,input,new,buffered,reader,new,input,stream,reader,process,get,input,stream,if,std,input,read,line,starts,with,expected,version,prefix,return,python,catch,ioexception,ignored,finally,if,process,null,python,streamer,destroy,process,process,return,null
PythonPlanBinderTest -> private static String getPythonPath(String[] possibleBinaries, String expectedVersionPrefix) 		throws IOException;1511185072;Finds the python binary for the given version.__@param possibleBinaries_binaries to test for_@param expectedVersionPrefix_expected output prefix for <tt>&lt_binary&gt_ -V</tt>, e.g. <tt>"Python 2."</tt>__@return python binary or <tt>null</tt> if not supported__@throws IOException_if the process to test for the binaries failed to exit properly;private static String getPythonPath(String[] possibleBinaries, String expectedVersionPrefix)_		throws IOException {_		Process process = null__		for (String python : possibleBinaries) {_			try {_				process = new ProcessBuilder(python, "-V").redirectErrorStream(true).start()__				BufferedReader stdInput = new BufferedReader(new_					InputStreamReader(process.getInputStream()))___				if (stdInput.readLine().startsWith(expectedVersionPrefix)) {_					return python__				}_			} catch (IOException ignored) {_			} finally {_				if (process != null) {_					PythonStreamer.destroyProcess(process)__				}_			}_		}_		return null__	};finds,the,python,binary,for,the,given,version,param,possible,binaries,binaries,to,test,for,param,expected,version,prefix,expected,output,prefix,for,tt,lt,binary,gt,v,tt,e,g,tt,python,2,tt,return,python,binary,or,tt,null,tt,if,not,supported,throws,ioexception,if,the,process,to,test,for,the,binaries,failed,to,exit,properly;private,static,string,get,python,path,string,possible,binaries,string,expected,version,prefix,throws,ioexception,process,process,null,for,string,python,possible,binaries,try,process,new,process,builder,python,v,redirect,error,stream,true,start,buffered,reader,std,input,new,buffered,reader,new,input,stream,reader,process,get,input,stream,if,std,input,read,line,starts,with,expected,version,prefix,return,python,catch,ioexception,ignored,finally,if,process,null,python,streamer,destroy,process,process,return,null
PythonPlanBinderTest -> private static String getPythonPath(String[] possibleBinaries, String expectedVersionPrefix) 		throws IOException;1511188744;Finds the python binary for the given version.__@param possibleBinaries_binaries to test for_@param expectedVersionPrefix_expected output prefix for <tt>&lt_binary&gt_ -V</tt>, e.g. <tt>"Python 2."</tt>__@return python binary or <tt>null</tt> if not supported__@throws IOException_if the process to test for the binaries failed to exit properly;private static String getPythonPath(String[] possibleBinaries, String expectedVersionPrefix)_		throws IOException {_		Process process = null__		for (String python : possibleBinaries) {_			try {_				process = new ProcessBuilder(python, "-V").redirectErrorStream(true).start()__				BufferedReader stdInput = new BufferedReader(new_					InputStreamReader(process.getInputStream()))___				if (stdInput.readLine().startsWith(expectedVersionPrefix)) {_					return python__				}_			} catch (IOException ignored) {_			} finally {_				if (process != null) {_					PythonStreamer.destroyProcess(process)__				}_			}_		}_		return null__	};finds,the,python,binary,for,the,given,version,param,possible,binaries,binaries,to,test,for,param,expected,version,prefix,expected,output,prefix,for,tt,lt,binary,gt,v,tt,e,g,tt,python,2,tt,return,python,binary,or,tt,null,tt,if,not,supported,throws,ioexception,if,the,process,to,test,for,the,binaries,failed,to,exit,properly;private,static,string,get,python,path,string,possible,binaries,string,expected,version,prefix,throws,ioexception,process,process,null,for,string,python,possible,binaries,try,process,new,process,builder,python,v,redirect,error,stream,true,start,buffered,reader,std,input,new,buffered,reader,new,input,stream,reader,process,get,input,stream,if,std,input,read,line,starts,with,expected,version,prefix,return,python,catch,ioexception,ignored,finally,if,process,null,python,streamer,destroy,process,process,return,null
PythonPlanBinderTest -> private static String getPython3Path() throws IOException;1501497776;Finds the binary that executes python3 programs.__@return python3 binary or <tt>null</tt> if not supported__@throws IOException_if the process to test for the binaries failed to exit properly;private static String getPython3Path() throws IOException {_		return getPythonPath(new String[] {"python3", "python"}, "Python 3.")__	};finds,the,binary,that,executes,python3,programs,return,python3,binary,or,tt,null,tt,if,not,supported,throws,ioexception,if,the,process,to,test,for,the,binaries,failed,to,exit,properly;private,static,string,get,python3path,throws,ioexception,return,get,python,path,new,string,python3,python,python,3
PythonPlanBinderTest -> private static String getPython3Path() throws IOException;1511185072;Finds the binary that executes python3 programs.__@return python3 binary or <tt>null</tt> if not supported__@throws IOException_if the process to test for the binaries failed to exit properly;private static String getPython3Path() throws IOException {_		return getPythonPath(new String[] {"python3", "python"}, "Python 3.")__	};finds,the,binary,that,executes,python3,programs,return,python3,binary,or,tt,null,tt,if,not,supported,throws,ioexception,if,the,process,to,test,for,the,binaries,failed,to,exit,properly;private,static,string,get,python3path,throws,ioexception,return,get,python,path,new,string,python3,python,python,3
PythonPlanBinderTest -> private static String getPython3Path() throws IOException;1511185072;Finds the binary that executes python3 programs.__@return python3 binary or <tt>null</tt> if not supported__@throws IOException_if the process to test for the binaries failed to exit properly;private static String getPython3Path() throws IOException {_		return getPythonPath(new String[] {"python3", "python"}, "Python 3.")__	};finds,the,binary,that,executes,python3,programs,return,python3,binary,or,tt,null,tt,if,not,supported,throws,ioexception,if,the,process,to,test,for,the,binaries,failed,to,exit,properly;private,static,string,get,python3path,throws,ioexception,return,get,python,path,new,string,python3,python,python,3
PythonPlanBinderTest -> private static String getPython3Path() throws IOException;1511188744;Finds the binary that executes python3 programs.__@return python3 binary or <tt>null</tt> if not supported__@throws IOException_if the process to test for the binaries failed to exit properly;private static String getPython3Path() throws IOException {_		return getPythonPath(new String[] {"python3", "python"}, "Python 3.")__	};finds,the,binary,that,executes,python3,programs,return,python3,binary,or,tt,null,tt,if,not,supported,throws,ioexception,if,the,process,to,test,for,the,binaries,failed,to,exit,properly;private,static,string,get,python3path,throws,ioexception,return,get,python,path,new,string,python3,python,python,3
PythonPlanBinderTest -> private static String getPython2Path() throws IOException;1501497776;Finds the binary that executes python2 programs.__@return python2 binary or <tt>null</tt> if not supported__@throws IOException_if the process to test for the binaries failed to exit properly;private static String getPython2Path() throws IOException {_		return getPythonPath(new String[] {"python2", "python"}, "Python 2.")__	};finds,the,binary,that,executes,python2,programs,return,python2,binary,or,tt,null,tt,if,not,supported,throws,ioexception,if,the,process,to,test,for,the,binaries,failed,to,exit,properly;private,static,string,get,python2path,throws,ioexception,return,get,python,path,new,string,python2,python,python,2
PythonPlanBinderTest -> private static String getPython2Path() throws IOException;1511185072;Finds the binary that executes python2 programs.__@return python2 binary or <tt>null</tt> if not supported__@throws IOException_if the process to test for the binaries failed to exit properly;private static String getPython2Path() throws IOException {_		return getPythonPath(new String[] {"python2", "python"}, "Python 2.")__	};finds,the,binary,that,executes,python2,programs,return,python2,binary,or,tt,null,tt,if,not,supported,throws,ioexception,if,the,process,to,test,for,the,binaries,failed,to,exit,properly;private,static,string,get,python2path,throws,ioexception,return,get,python,path,new,string,python2,python,python,2
PythonPlanBinderTest -> private static String getPython2Path() throws IOException;1511185072;Finds the binary that executes python2 programs.__@return python2 binary or <tt>null</tt> if not supported__@throws IOException_if the process to test for the binaries failed to exit properly;private static String getPython2Path() throws IOException {_		return getPythonPath(new String[] {"python2", "python"}, "Python 2.")__	};finds,the,binary,that,executes,python2,programs,return,python2,binary,or,tt,null,tt,if,not,supported,throws,ioexception,if,the,process,to,test,for,the,binaries,failed,to,exit,properly;private,static,string,get,python2path,throws,ioexception,return,get,python,path,new,string,python2,python,python,2
PythonPlanBinderTest -> private static String getPython2Path() throws IOException;1511188744;Finds the binary that executes python2 programs.__@return python2 binary or <tt>null</tt> if not supported__@throws IOException_if the process to test for the binaries failed to exit properly;private static String getPython2Path() throws IOException {_		return getPythonPath(new String[] {"python2", "python"}, "Python 2.")__	};finds,the,binary,that,executes,python2,programs,return,python2,binary,or,tt,null,tt,if,not,supported,throws,ioexception,if,the,process,to,test,for,the,binaries,failed,to,exit,properly;private,static,string,get,python2path,throws,ioexception,return,get,python,path,new,string,python2,python,python,2
