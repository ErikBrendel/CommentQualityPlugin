# id;timestamp;commentText;codeText;commentWords;codeWords
CepProcessFunctionContextTest -> private static PatternProcessFunction<Event, String> extractTimestampAndNames( 			int stateNumber, 			OutputTag<String> timedOutTag);1545121742;Creates a {@link PatternProcessFunction} that as a result will produce Strings as follows:_<pre>[timestamp]:[Event.getName]...</pre> The Event.getName will occur stateNumber times. If the match does not_contain n-th pattern it will replace this position with "null".__<p>This function will also apply the same logic for timed out partial matches and emit those results into_side output described with given output tag.__@param stateNumber number of states in the pattern_@param timedOutTag output tag where to emit timed out partial matches_@return created PatternProcessFunction;private static PatternProcessFunction<Event, String> extractTimestampAndNames(_			int stateNumber,_			OutputTag<String> timedOutTag) {_		return new AccessContextWithNamesWithTimedOut(stateNumber,_			timedOutTag,_			context -> context.timestamp() != null ? String.valueOf(context.timestamp()) : NO_TIMESTAMP)__	};creates,a,link,pattern,process,function,that,as,a,result,will,produce,strings,as,follows,pre,timestamp,event,get,name,pre,the,event,get,name,will,occur,state,number,times,if,the,match,does,not,contain,n,th,pattern,it,will,replace,this,position,with,null,p,this,function,will,also,apply,the,same,logic,for,timed,out,partial,matches,and,emit,those,results,into,side,output,described,with,given,output,tag,param,state,number,number,of,states,in,the,pattern,param,timed,out,tag,output,tag,where,to,emit,timed,out,partial,matches,return,created,pattern,process,function;private,static,pattern,process,function,event,string,extract,timestamp,and,names,int,state,number,output,tag,string,timed,out,tag,return,new,access,context,with,names,with,timed,out,state,number,timed,out,tag,context,context,timestamp,null,string,value,of,context,timestamp
CepProcessFunctionContextTest -> private static PatternProcessFunction<Event, String> extractTimestampAndNames( 			int stateNumber, 			OutputTag<String> timedOutTag);1545122140;Creates a {@link PatternProcessFunction} that as a result will produce Strings as follows:_<pre>[timestamp]:[Event.getName]...</pre> The Event.getName will occur stateNumber times. If the match does not_contain n-th pattern it will replace this position with "null".__<p>This function will also apply the same logic for timed out partial matches and emit those results into_side output described with given output tag.__@param stateNumber number of states in the pattern_@param timedOutTag output tag where to emit timed out partial matches_@return created PatternProcessFunction;private static PatternProcessFunction<Event, String> extractTimestampAndNames(_			int stateNumber,_			OutputTag<String> timedOutTag) {_		return new AccessContextWithNamesWithTimedOut(stateNumber,_			timedOutTag,_			context -> context.timestamp() != null ? String.valueOf(context.timestamp()) : NO_TIMESTAMP)__	};creates,a,link,pattern,process,function,that,as,a,result,will,produce,strings,as,follows,pre,timestamp,event,get,name,pre,the,event,get,name,will,occur,state,number,times,if,the,match,does,not,contain,n,th,pattern,it,will,replace,this,position,with,null,p,this,function,will,also,apply,the,same,logic,for,timed,out,partial,matches,and,emit,those,results,into,side,output,described,with,given,output,tag,param,state,number,number,of,states,in,the,pattern,param,timed,out,tag,output,tag,where,to,emit,timed,out,partial,matches,return,created,pattern,process,function;private,static,pattern,process,function,event,string,extract,timestamp,and,names,int,state,number,output,tag,string,timed,out,tag,return,new,access,context,with,names,with,timed,out,state,number,timed,out,tag,context,context,timestamp,null,string,value,of,context,timestamp
CepProcessFunctionContextTest -> private static PatternProcessFunction<Event, String> extractTimestampAndNames( 			int stateNumber, 			OutputTag<String> timedOutTag);1546871020;Creates a {@link PatternProcessFunction} that as a result will produce Strings as follows:_<pre>[timestamp]:[Event.getName]...</pre> The Event.getName will occur stateNumber times. If the match does not_contain n-th pattern it will replace this position with "null".__<p>This function will also apply the same logic for timed out partial matches and emit those results into_side output described with given output tag.__@param stateNumber number of states in the pattern_@param timedOutTag output tag where to emit timed out partial matches_@return created PatternProcessFunction;private static PatternProcessFunction<Event, String> extractTimestampAndNames(_			int stateNumber,_			OutputTag<String> timedOutTag) {_		return new AccessContextWithNamesWithTimedOut(stateNumber,_			timedOutTag,_			context -> String.valueOf(context.timestamp()))__	};creates,a,link,pattern,process,function,that,as,a,result,will,produce,strings,as,follows,pre,timestamp,event,get,name,pre,the,event,get,name,will,occur,state,number,times,if,the,match,does,not,contain,n,th,pattern,it,will,replace,this,position,with,null,p,this,function,will,also,apply,the,same,logic,for,timed,out,partial,matches,and,emit,those,results,into,side,output,described,with,given,output,tag,param,state,number,number,of,states,in,the,pattern,param,timed,out,tag,output,tag,where,to,emit,timed,out,partial,matches,return,created,pattern,process,function;private,static,pattern,process,function,event,string,extract,timestamp,and,names,int,state,number,output,tag,string,timed,out,tag,return,new,access,context,with,names,with,timed,out,state,number,timed,out,tag,context,string,value,of,context,timestamp
CepProcessFunctionContextTest -> private static PatternProcessFunction<Event, String> extractTimestampAndNames(int stateNumber);1545121742;Creates a {@link PatternProcessFunction} that as a result will produce Strings as follows:_<pre>[timestamp]:[Event.getName]...</pre> The Event.getName will occur stateNumber times. If the match does not_contain n-th pattern it will replace this position with "null".__@param stateNumber number of states in the pattern_@return created PatternProcessFunction;private static PatternProcessFunction<Event, String> extractTimestampAndNames(int stateNumber) {_		return new AccessContextWithNames(stateNumber,_			context -> context.timestamp() != null ? String.valueOf(context.timestamp()) : NO_TIMESTAMP)__	};creates,a,link,pattern,process,function,that,as,a,result,will,produce,strings,as,follows,pre,timestamp,event,get,name,pre,the,event,get,name,will,occur,state,number,times,if,the,match,does,not,contain,n,th,pattern,it,will,replace,this,position,with,null,param,state,number,number,of,states,in,the,pattern,return,created,pattern,process,function;private,static,pattern,process,function,event,string,extract,timestamp,and,names,int,state,number,return,new,access,context,with,names,state,number,context,context,timestamp,null,string,value,of,context,timestamp
CepProcessFunctionContextTest -> private static PatternProcessFunction<Event, String> extractTimestampAndNames(int stateNumber);1545122140;Creates a {@link PatternProcessFunction} that as a result will produce Strings as follows:_<pre>[timestamp]:[Event.getName]...</pre> The Event.getName will occur stateNumber times. If the match does not_contain n-th pattern it will replace this position with "null".__@param stateNumber number of states in the pattern_@return created PatternProcessFunction;private static PatternProcessFunction<Event, String> extractTimestampAndNames(int stateNumber) {_		return new AccessContextWithNames(stateNumber,_			context -> context.timestamp() != null ? String.valueOf(context.timestamp()) : NO_TIMESTAMP)__	};creates,a,link,pattern,process,function,that,as,a,result,will,produce,strings,as,follows,pre,timestamp,event,get,name,pre,the,event,get,name,will,occur,state,number,times,if,the,match,does,not,contain,n,th,pattern,it,will,replace,this,position,with,null,param,state,number,number,of,states,in,the,pattern,return,created,pattern,process,function;private,static,pattern,process,function,event,string,extract,timestamp,and,names,int,state,number,return,new,access,context,with,names,state,number,context,context,timestamp,null,string,value,of,context,timestamp
CepProcessFunctionContextTest -> private static PatternProcessFunction<Event, String> extractTimestampAndNames(int stateNumber);1546871020;Creates a {@link PatternProcessFunction} that as a result will produce Strings as follows:_<pre>[timestamp]:[Event.getName]...</pre> The Event.getName will occur stateNumber times. If the match does not_contain n-th pattern it will replace this position with "null".__@param stateNumber number of states in the pattern_@return created PatternProcessFunction;private static PatternProcessFunction<Event, String> extractTimestampAndNames(int stateNumber) {_		return new AccessContextWithNames(stateNumber,_			context -> String.valueOf(context.timestamp()))__	};creates,a,link,pattern,process,function,that,as,a,result,will,produce,strings,as,follows,pre,timestamp,event,get,name,pre,the,event,get,name,will,occur,state,number,times,if,the,match,does,not,contain,n,th,pattern,it,will,replace,this,position,with,null,param,state,number,number,of,states,in,the,pattern,return,created,pattern,process,function;private,static,pattern,process,function,event,string,extract,timestamp,and,names,int,state,number,return,new,access,context,with,names,state,number,context,string,value,of,context,timestamp
CepProcessFunctionContextTest -> private static PatternProcessFunction<Event, String> extractCurrentProcessingTimeAndNames( 			int stateNumber, 			OutputTag<String> timedOutTag);1545121742;Creates a {@link PatternProcessFunction} that as a result will produce Strings as follows:_<pre>[currentProcessingTime]:[Event.getName]...</pre> The Event.getName will occur stateNumber times._If the match does not contain n-th pattern it will replace this position with "null".__<p>This function will also apply the same logic for timed out partial matches and emit those results into_side output described with given output tag.__@param stateNumber number of states in the pattern_@param timedOutTag output tag where to emit timed out partial matches_@return created PatternProcessFunction;private static PatternProcessFunction<Event, String> extractCurrentProcessingTimeAndNames(_			int stateNumber,_			OutputTag<String> timedOutTag) {_		return new AccessContextWithNamesWithTimedOut(stateNumber,_			timedOutTag,_			context -> String.valueOf(context.currentProcessingTime()))__	};creates,a,link,pattern,process,function,that,as,a,result,will,produce,strings,as,follows,pre,current,processing,time,event,get,name,pre,the,event,get,name,will,occur,state,number,times,if,the,match,does,not,contain,n,th,pattern,it,will,replace,this,position,with,null,p,this,function,will,also,apply,the,same,logic,for,timed,out,partial,matches,and,emit,those,results,into,side,output,described,with,given,output,tag,param,state,number,number,of,states,in,the,pattern,param,timed,out,tag,output,tag,where,to,emit,timed,out,partial,matches,return,created,pattern,process,function;private,static,pattern,process,function,event,string,extract,current,processing,time,and,names,int,state,number,output,tag,string,timed,out,tag,return,new,access,context,with,names,with,timed,out,state,number,timed,out,tag,context,string,value,of,context,current,processing,time
CepProcessFunctionContextTest -> private static PatternProcessFunction<Event, String> extractCurrentProcessingTimeAndNames( 			int stateNumber, 			OutputTag<String> timedOutTag);1545122140;Creates a {@link PatternProcessFunction} that as a result will produce Strings as follows:_<pre>[currentProcessingTime]:[Event.getName]...</pre> The Event.getName will occur stateNumber times._If the match does not contain n-th pattern it will replace this position with "null".__<p>This function will also apply the same logic for timed out partial matches and emit those results into_side output described with given output tag.__@param stateNumber number of states in the pattern_@param timedOutTag output tag where to emit timed out partial matches_@return created PatternProcessFunction;private static PatternProcessFunction<Event, String> extractCurrentProcessingTimeAndNames(_			int stateNumber,_			OutputTag<String> timedOutTag) {_		return new AccessContextWithNamesWithTimedOut(stateNumber,_			timedOutTag,_			context -> String.valueOf(context.currentProcessingTime()))__	};creates,a,link,pattern,process,function,that,as,a,result,will,produce,strings,as,follows,pre,current,processing,time,event,get,name,pre,the,event,get,name,will,occur,state,number,times,if,the,match,does,not,contain,n,th,pattern,it,will,replace,this,position,with,null,p,this,function,will,also,apply,the,same,logic,for,timed,out,partial,matches,and,emit,those,results,into,side,output,described,with,given,output,tag,param,state,number,number,of,states,in,the,pattern,param,timed,out,tag,output,tag,where,to,emit,timed,out,partial,matches,return,created,pattern,process,function;private,static,pattern,process,function,event,string,extract,current,processing,time,and,names,int,state,number,output,tag,string,timed,out,tag,return,new,access,context,with,names,with,timed,out,state,number,timed,out,tag,context,string,value,of,context,current,processing,time
CepProcessFunctionContextTest -> private static PatternProcessFunction<Event, String> extractCurrentProcessingTimeAndNames( 			int stateNumber, 			OutputTag<String> timedOutTag);1546871020;Creates a {@link PatternProcessFunction} that as a result will produce Strings as follows:_<pre>[currentProcessingTime]:[Event.getName]...</pre> The Event.getName will occur stateNumber times._If the match does not contain n-th pattern it will replace this position with "null".__<p>This function will also apply the same logic for timed out partial matches and emit those results into_side output described with given output tag.__@param stateNumber number of states in the pattern_@param timedOutTag output tag where to emit timed out partial matches_@return created PatternProcessFunction;private static PatternProcessFunction<Event, String> extractCurrentProcessingTimeAndNames(_			int stateNumber,_			OutputTag<String> timedOutTag) {_		return new AccessContextWithNamesWithTimedOut(stateNumber,_			timedOutTag,_			context -> String.valueOf(context.currentProcessingTime()))__	};creates,a,link,pattern,process,function,that,as,a,result,will,produce,strings,as,follows,pre,current,processing,time,event,get,name,pre,the,event,get,name,will,occur,state,number,times,if,the,match,does,not,contain,n,th,pattern,it,will,replace,this,position,with,null,p,this,function,will,also,apply,the,same,logic,for,timed,out,partial,matches,and,emit,those,results,into,side,output,described,with,given,output,tag,param,state,number,number,of,states,in,the,pattern,param,timed,out,tag,output,tag,where,to,emit,timed,out,partial,matches,return,created,pattern,process,function;private,static,pattern,process,function,event,string,extract,current,processing,time,and,names,int,state,number,output,tag,string,timed,out,tag,return,new,access,context,with,names,with,timed,out,state,number,timed,out,tag,context,string,value,of,context,current,processing,time
CepProcessFunctionContextTest -> private static PatternProcessFunction<Event, String> extractCurrentProcessingTimeAndNames(int stateNumber);1545121742;Creates a {@link PatternProcessFunction} that as a result will produce Strings as follows:_<pre>[currentProcessingTime]:[Event.getName]...</pre> The Event.getName will occur stateNumber times._If the match does not contain n-th pattern it will replace this position with "null".__@param stateNumber number of states in the pattern_@return created PatternProcessFunction;private static PatternProcessFunction<Event, String> extractCurrentProcessingTimeAndNames(int stateNumber) {_		return new AccessContextWithNames(stateNumber, context -> String.valueOf(context.currentProcessingTime()))__	};creates,a,link,pattern,process,function,that,as,a,result,will,produce,strings,as,follows,pre,current,processing,time,event,get,name,pre,the,event,get,name,will,occur,state,number,times,if,the,match,does,not,contain,n,th,pattern,it,will,replace,this,position,with,null,param,state,number,number,of,states,in,the,pattern,return,created,pattern,process,function;private,static,pattern,process,function,event,string,extract,current,processing,time,and,names,int,state,number,return,new,access,context,with,names,state,number,context,string,value,of,context,current,processing,time
CepProcessFunctionContextTest -> private static PatternProcessFunction<Event, String> extractCurrentProcessingTimeAndNames(int stateNumber);1545122140;Creates a {@link PatternProcessFunction} that as a result will produce Strings as follows:_<pre>[currentProcessingTime]:[Event.getName]...</pre> The Event.getName will occur stateNumber times._If the match does not contain n-th pattern it will replace this position with "null".__@param stateNumber number of states in the pattern_@return created PatternProcessFunction;private static PatternProcessFunction<Event, String> extractCurrentProcessingTimeAndNames(int stateNumber) {_		return new AccessContextWithNames(stateNumber, context -> String.valueOf(context.currentProcessingTime()))__	};creates,a,link,pattern,process,function,that,as,a,result,will,produce,strings,as,follows,pre,current,processing,time,event,get,name,pre,the,event,get,name,will,occur,state,number,times,if,the,match,does,not,contain,n,th,pattern,it,will,replace,this,position,with,null,param,state,number,number,of,states,in,the,pattern,return,created,pattern,process,function;private,static,pattern,process,function,event,string,extract,current,processing,time,and,names,int,state,number,return,new,access,context,with,names,state,number,context,string,value,of,context,current,processing,time
CepProcessFunctionContextTest -> private static PatternProcessFunction<Event, String> extractCurrentProcessingTimeAndNames(int stateNumber);1546871020;Creates a {@link PatternProcessFunction} that as a result will produce Strings as follows:_<pre>[currentProcessingTime]:[Event.getName]...</pre> The Event.getName will occur stateNumber times._If the match does not contain n-th pattern it will replace this position with "null".__@param stateNumber number of states in the pattern_@return created PatternProcessFunction;private static PatternProcessFunction<Event, String> extractCurrentProcessingTimeAndNames(int stateNumber) {_		return new AccessContextWithNames(stateNumber, context -> String.valueOf(context.currentProcessingTime()))__	};creates,a,link,pattern,process,function,that,as,a,result,will,produce,strings,as,follows,pre,current,processing,time,event,get,name,pre,the,event,get,name,will,occur,state,number,times,if,the,match,does,not,contain,n,th,pattern,it,will,replace,this,position,with,null,param,state,number,number,of,states,in,the,pattern,return,created,pattern,process,function;private,static,pattern,process,function,event,string,extract,current,processing,time,and,names,int,state,number,return,new,access,context,with,names,state,number,context,string,value,of,context,current,processing,time
