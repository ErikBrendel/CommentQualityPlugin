# id;timestamp;commentText;codeText;commentWords;codeWords
GroupReduceOperator -> public GroupReduceOperator(DataSet<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function);1411372797;Constructor for a non-grouped reduce (all reduce).__@param input The input data set to the groupReduce function._@param function The user-defined GroupReduce function.;public GroupReduceOperator(DataSet<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function) {_		super(input, resultType)__		_		this.function = function__		this.grouper = null___		checkCombinability()__	};constructor,for,a,non,grouped,reduce,all,reduce,param,input,the,input,data,set,to,the,group,reduce,function,param,function,the,user,defined,group,reduce,function;public,group,reduce,operator,data,set,in,input,type,information,out,result,type,group,reduce,function,in,out,function,super,input,result,type,this,function,function,this,grouper,null,check,combinability
GroupReduceOperator -> public GroupReduceOperator(DataSet<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function);1411372797;Constructor for a non-grouped reduce (all reduce).__@param input The input data set to the groupReduce function._@param function The user-defined GroupReduce function.;public GroupReduceOperator(DataSet<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function) {_		super(input, resultType)__		_		this.function = function__		this.grouper = null___		checkCombinability()__	};constructor,for,a,non,grouped,reduce,all,reduce,param,input,the,input,data,set,to,the,group,reduce,function,param,function,the,user,defined,group,reduce,function;public,group,reduce,operator,data,set,in,input,type,information,out,result,type,group,reduce,function,in,out,function,super,input,result,type,this,function,function,this,grouper,null,check,combinability
GroupReduceOperator -> public GroupReduceOperator(DataSet<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function);1411399886;Constructor for a non-grouped reduce (all reduce).__@param input The input data set to the groupReduce function._@param function The user-defined GroupReduce function.;public GroupReduceOperator(DataSet<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function) {_		super(input, resultType)__		_		this.function = function__		this.grouper = null___		checkCombinability()__	};constructor,for,a,non,grouped,reduce,all,reduce,param,input,the,input,data,set,to,the,group,reduce,function,param,function,the,user,defined,group,reduce,function;public,group,reduce,operator,data,set,in,input,type,information,out,result,type,group,reduce,function,in,out,function,super,input,result,type,this,function,function,this,grouper,null,check,combinability
GroupReduceOperator -> public GroupReduceOperator(DataSet<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function);1411473593;Constructor for a non-grouped reduce (all reduce).__@param input The input data set to the groupReduce function._@param function The user-defined GroupReduce function.;public GroupReduceOperator(DataSet<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function) {_		super(input, resultType)__		_		this.function = function__		this.grouper = null___		checkCombinability()__	};constructor,for,a,non,grouped,reduce,all,reduce,param,input,the,input,data,set,to,the,group,reduce,function,param,function,the,user,defined,group,reduce,function;public,group,reduce,operator,data,set,in,input,type,information,out,result,type,group,reduce,function,in,out,function,super,input,result,type,this,function,function,this,grouper,null,check,combinability
GroupReduceOperator -> public GroupReduceOperator(DataSet<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function);1412761141;Constructor for a non-grouped reduce (all reduce).__@param input The input data set to the groupReduce function._@param function The user-defined GroupReduce function.;public GroupReduceOperator(DataSet<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function) {_		super(input, resultType)__		_		this.function = function__		this.grouper = null___		checkCombinability()__	};constructor,for,a,non,grouped,reduce,all,reduce,param,input,the,input,data,set,to,the,group,reduce,function,param,function,the,user,defined,group,reduce,function;public,group,reduce,operator,data,set,in,input,type,information,out,result,type,group,reduce,function,in,out,function,super,input,result,type,this,function,function,this,grouper,null,check,combinability
GroupReduceOperator -> public GroupReduceOperator(DataSet<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function);1412761141;Constructor for a non-grouped reduce (all reduce).__@param input The input data set to the groupReduce function._@param function The user-defined GroupReduce function.;public GroupReduceOperator(DataSet<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function) {_		super(input, resultType)__		_		this.function = function__		this.grouper = null___		checkCombinability()__	};constructor,for,a,non,grouped,reduce,all,reduce,param,input,the,input,data,set,to,the,group,reduce,function,param,function,the,user,defined,group,reduce,function;public,group,reduce,operator,data,set,in,input,type,information,out,result,type,group,reduce,function,in,out,function,super,input,result,type,this,function,function,this,grouper,null,check,combinability
GroupReduceOperator -> public GroupReduceOperator(Grouping<IN> input, GroupReduceFunction<IN, OUT> function);1406821655;Constructor for a grouped reduce.__@param input The grouped input to be processed group-wise by the groupReduce function._@param function The user-defined GroupReduce function.;public GroupReduceOperator(Grouping<IN> input, GroupReduceFunction<IN, OUT> function) {_		super(input != null ? input.getDataSet() : null, TypeExtractor.getGroupReduceReturnTypes(function, input.getDataSet().getType()))__		_		this.function = function__		this.grouper = input___		checkCombinability()___		extractSemanticAnnotationsFromUdf(function.getClass())__	};constructor,for,a,grouped,reduce,param,input,the,grouped,input,to,be,processed,group,wise,by,the,group,reduce,function,param,function,the,user,defined,group,reduce,function;public,group,reduce,operator,grouping,in,input,group,reduce,function,in,out,function,super,input,null,input,get,data,set,null,type,extractor,get,group,reduce,return,types,function,input,get,data,set,get,type,this,function,function,this,grouper,input,check,combinability,extract,semantic,annotations,from,udf,function,get,class
GroupReduceOperator -> public GroupReduceOperator(Grouping<IN> input, GroupReduceFunction<IN, OUT> function);1406830680;Constructor for a grouped reduce.__@param input The grouped input to be processed group-wise by the groupReduce function._@param function The user-defined GroupReduce function.;public GroupReduceOperator(Grouping<IN> input, GroupReduceFunction<IN, OUT> function) {_		super(input != null ? input.getDataSet() : null, TypeExtractor.getGroupReduceReturnTypes(function, input.getDataSet().getType()))__		_		this.function = function__		this.grouper = input___		checkCombinability()___		extractSemanticAnnotationsFromUdf(function.getClass())__	};constructor,for,a,grouped,reduce,param,input,the,grouped,input,to,be,processed,group,wise,by,the,group,reduce,function,param,function,the,user,defined,group,reduce,function;public,group,reduce,operator,grouping,in,input,group,reduce,function,in,out,function,super,input,null,input,get,data,set,null,type,extractor,get,group,reduce,return,types,function,input,get,data,set,get,type,this,function,function,this,grouper,input,check,combinability,extract,semantic,annotations,from,udf,function,get,class
GroupReduceOperator -> public GroupReduceOperator(Grouping<IN> input, GroupReduceFunction<IN, OUT> function);1406853229;Constructor for a grouped reduce.__@param input The grouped input to be processed group-wise by the groupReduce function._@param function The user-defined GroupReduce function.;public GroupReduceOperator(Grouping<IN> input, GroupReduceFunction<IN, OUT> function) {_		super(input != null ? input.getDataSet() : null, TypeExtractor.getGroupReduceReturnTypes(function, input.getDataSet().getType()))__		_		this.function = function__		this.grouper = input___		checkCombinability()___		extractSemanticAnnotationsFromUdf(function.getClass())__	};constructor,for,a,grouped,reduce,param,input,the,grouped,input,to,be,processed,group,wise,by,the,group,reduce,function,param,function,the,user,defined,group,reduce,function;public,group,reduce,operator,grouping,in,input,group,reduce,function,in,out,function,super,input,null,input,get,data,set,null,type,extractor,get,group,reduce,return,types,function,input,get,data,set,get,type,this,function,function,this,grouper,input,check,combinability,extract,semantic,annotations,from,udf,function,get,class
GroupReduceOperator -> public GroupReduceOperator(Grouping<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function);1411372797;Constructor for a grouped reduce.__@param input The grouped input to be processed group-wise by the groupReduce function._@param function The user-defined GroupReduce function.;public GroupReduceOperator(Grouping<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function) {_		super(input != null ? input.getDataSet() : null, resultType)__		_		this.function = function__		this.grouper = input___		checkCombinability()___		extractSemanticAnnotationsFromUdf(function.getClass())__	};constructor,for,a,grouped,reduce,param,input,the,grouped,input,to,be,processed,group,wise,by,the,group,reduce,function,param,function,the,user,defined,group,reduce,function;public,group,reduce,operator,grouping,in,input,type,information,out,result,type,group,reduce,function,in,out,function,super,input,null,input,get,data,set,null,result,type,this,function,function,this,grouper,input,check,combinability,extract,semantic,annotations,from,udf,function,get,class
GroupReduceOperator -> public GroupReduceOperator(Grouping<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function);1411372797;Constructor for a grouped reduce.__@param input The grouped input to be processed group-wise by the groupReduce function._@param function The user-defined GroupReduce function.;public GroupReduceOperator(Grouping<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function) {_		super(input != null ? input.getDataSet() : null, resultType)__		_		this.function = function__		this.grouper = input___		checkCombinability()___		extractSemanticAnnotationsFromUdf(function.getClass())__	};constructor,for,a,grouped,reduce,param,input,the,grouped,input,to,be,processed,group,wise,by,the,group,reduce,function,param,function,the,user,defined,group,reduce,function;public,group,reduce,operator,grouping,in,input,type,information,out,result,type,group,reduce,function,in,out,function,super,input,null,input,get,data,set,null,result,type,this,function,function,this,grouper,input,check,combinability,extract,semantic,annotations,from,udf,function,get,class
GroupReduceOperator -> public GroupReduceOperator(Grouping<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function);1411399886;Constructor for a grouped reduce.__@param input The grouped input to be processed group-wise by the groupReduce function._@param function The user-defined GroupReduce function.;public GroupReduceOperator(Grouping<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function) {_		super(input != null ? input.getDataSet() : null, resultType)__		_		this.function = function__		this.grouper = input___		checkCombinability()___		extractSemanticAnnotationsFromUdf(function.getClass())__	};constructor,for,a,grouped,reduce,param,input,the,grouped,input,to,be,processed,group,wise,by,the,group,reduce,function,param,function,the,user,defined,group,reduce,function;public,group,reduce,operator,grouping,in,input,type,information,out,result,type,group,reduce,function,in,out,function,super,input,null,input,get,data,set,null,result,type,this,function,function,this,grouper,input,check,combinability,extract,semantic,annotations,from,udf,function,get,class
GroupReduceOperator -> public GroupReduceOperator(Grouping<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function);1411473593;Constructor for a grouped reduce.__@param input The grouped input to be processed group-wise by the groupReduce function._@param function The user-defined GroupReduce function.;public GroupReduceOperator(Grouping<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function) {_		super(input != null ? input.getDataSet() : null, resultType)__		_		this.function = function__		this.grouper = input___		checkCombinability()___		extractSemanticAnnotationsFromUdf(function.getClass())__	};constructor,for,a,grouped,reduce,param,input,the,grouped,input,to,be,processed,group,wise,by,the,group,reduce,function,param,function,the,user,defined,group,reduce,function;public,group,reduce,operator,grouping,in,input,type,information,out,result,type,group,reduce,function,in,out,function,super,input,null,input,get,data,set,null,result,type,this,function,function,this,grouper,input,check,combinability,extract,semantic,annotations,from,udf,function,get,class
GroupReduceOperator -> public GroupReduceOperator(Grouping<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function);1412761141;Constructor for a grouped reduce.__@param input The grouped input to be processed group-wise by the groupReduce function._@param function The user-defined GroupReduce function.;public GroupReduceOperator(Grouping<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function) {_		super(input != null ? input.getDataSet() : null, resultType)__		_		this.function = function__		this.grouper = input___		checkCombinability()___		extractSemanticAnnotationsFromUdf(function.getClass())__	};constructor,for,a,grouped,reduce,param,input,the,grouped,input,to,be,processed,group,wise,by,the,group,reduce,function,param,function,the,user,defined,group,reduce,function;public,group,reduce,operator,grouping,in,input,type,information,out,result,type,group,reduce,function,in,out,function,super,input,null,input,get,data,set,null,result,type,this,function,function,this,grouper,input,check,combinability,extract,semantic,annotations,from,udf,function,get,class
GroupReduceOperator -> public GroupReduceOperator(Grouping<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function);1412761141;Constructor for a grouped reduce.__@param input The grouped input to be processed group-wise by the groupReduce function._@param function The user-defined GroupReduce function.;public GroupReduceOperator(Grouping<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function) {_		super(input != null ? input.getDataSet() : null, resultType)__		_		this.function = function__		this.grouper = input___		checkCombinability()___		extractSemanticAnnotationsFromUdf(function.getClass())__	};constructor,for,a,grouped,reduce,param,input,the,grouped,input,to,be,processed,group,wise,by,the,group,reduce,function,param,function,the,user,defined,group,reduce,function;public,group,reduce,operator,grouping,in,input,type,information,out,result,type,group,reduce,function,in,out,function,super,input,null,input,get,data,set,null,result,type,this,function,function,this,grouper,input,check,combinability,extract,semantic,annotations,from,udf,function,get,class
GroupReduceOperator -> public GroupReduceOperator(DataSet<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function, String defaultName);1415874087;Constructor for a non-grouped reduce (all reduce).__@param input The input data set to the groupReduce function._@param function The user-defined GroupReduce function.;public GroupReduceOperator(DataSet<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function, String defaultName) {_		super(input, resultType)__		_		this.function = function__		this.grouper = null__		this.defaultName = defaultName___		checkCombinability()__	};constructor,for,a,non,grouped,reduce,all,reduce,param,input,the,input,data,set,to,the,group,reduce,function,param,function,the,user,defined,group,reduce,function;public,group,reduce,operator,data,set,in,input,type,information,out,result,type,group,reduce,function,in,out,function,string,default,name,super,input,result,type,this,function,function,this,grouper,null,this,default,name,default,name,check,combinability
GroupReduceOperator -> public GroupReduceOperator(DataSet<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function, String defaultName);1416235078;Constructor for a non-grouped reduce (all reduce).__@param input The input data set to the groupReduce function._@param function The user-defined GroupReduce function.;public GroupReduceOperator(DataSet<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function, String defaultName) {_		super(input, resultType)__		_		this.function = function__		this.grouper = null__		this.defaultName = defaultName___		checkCombinability()__	};constructor,for,a,non,grouped,reduce,all,reduce,param,input,the,input,data,set,to,the,group,reduce,function,param,function,the,user,defined,group,reduce,function;public,group,reduce,operator,data,set,in,input,type,information,out,result,type,group,reduce,function,in,out,function,string,default,name,super,input,result,type,this,function,function,this,grouper,null,this,default,name,default,name,check,combinability
GroupReduceOperator -> public GroupReduceOperator(DataSet<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function, String defaultName);1416309577;Constructor for a non-grouped reduce (all reduce).__@param input The input data set to the groupReduce function._@param function The user-defined GroupReduce function.;public GroupReduceOperator(DataSet<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function, String defaultName) {_		super(input, resultType)__		_		this.function = function__		this.grouper = null__		this.defaultName = defaultName___		checkCombinability()__	};constructor,for,a,non,grouped,reduce,all,reduce,param,input,the,input,data,set,to,the,group,reduce,function,param,function,the,user,defined,group,reduce,function;public,group,reduce,operator,data,set,in,input,type,information,out,result,type,group,reduce,function,in,out,function,string,default,name,super,input,result,type,this,function,function,this,grouper,null,this,default,name,default,name,check,combinability
GroupReduceOperator -> public GroupReduceOperator(DataSet<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function, String defaultName);1420730997;Constructor for a non-grouped reduce (all reduce).__@param input The input data set to the groupReduce function._@param function The user-defined GroupReduce function.;public GroupReduceOperator(DataSet<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function, String defaultName) {_		super(input, resultType)__		_		this.function = function__		this.grouper = null__		this.defaultName = defaultName___		checkCombinability()__	};constructor,for,a,non,grouped,reduce,all,reduce,param,input,the,input,data,set,to,the,group,reduce,function,param,function,the,user,defined,group,reduce,function;public,group,reduce,operator,data,set,in,input,type,information,out,result,type,group,reduce,function,in,out,function,string,default,name,super,input,result,type,this,function,function,this,grouper,null,this,default,name,default,name,check,combinability
GroupReduceOperator -> public GroupReduceOperator(DataSet<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function, String defaultName);1421341998;Constructor for a non-grouped reduce (all reduce).__@param input The input data set to the groupReduce function._@param function The user-defined GroupReduce function.;public GroupReduceOperator(DataSet<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function, String defaultName) {_		super(input, resultType)__		_		this.function = function__		this.grouper = null__		this.defaultName = defaultName___		checkCombinability()__	};constructor,for,a,non,grouped,reduce,all,reduce,param,input,the,input,data,set,to,the,group,reduce,function,param,function,the,user,defined,group,reduce,function;public,group,reduce,operator,data,set,in,input,type,information,out,result,type,group,reduce,function,in,out,function,string,default,name,super,input,result,type,this,function,function,this,grouper,null,this,default,name,default,name,check,combinability
GroupReduceOperator -> public GroupReduceOperator(DataSet<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function, String defaultName);1427097830;Constructor for a non-grouped reduce (all reduce).__@param input The input data set to the groupReduce function._@param function The user-defined GroupReduce function.;public GroupReduceOperator(DataSet<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function, String defaultName) {_		super(input, resultType)__		_		this.function = function__		this.grouper = null__		this.defaultName = defaultName___		checkCombinability()__	};constructor,for,a,non,grouped,reduce,all,reduce,param,input,the,input,data,set,to,the,group,reduce,function,param,function,the,user,defined,group,reduce,function;public,group,reduce,operator,data,set,in,input,type,information,out,result,type,group,reduce,function,in,out,function,string,default,name,super,input,result,type,this,function,function,this,grouper,null,this,default,name,default,name,check,combinability
GroupReduceOperator -> public GroupReduceOperator(DataSet<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function, String defaultName);1427300031;Constructor for a non-grouped reduce (all reduce).__@param input The input data set to the groupReduce function._@param function The user-defined GroupReduce function.;public GroupReduceOperator(DataSet<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function, String defaultName) {_		super(input, resultType)__		_		this.function = function__		this.grouper = null__		this.defaultName = defaultName___		checkCombinability()__	};constructor,for,a,non,grouped,reduce,all,reduce,param,input,the,input,data,set,to,the,group,reduce,function,param,function,the,user,defined,group,reduce,function;public,group,reduce,operator,data,set,in,input,type,information,out,result,type,group,reduce,function,in,out,function,string,default,name,super,input,result,type,this,function,function,this,grouper,null,this,default,name,default,name,check,combinability
GroupReduceOperator -> public GroupReduceOperator(DataSet<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function, String defaultName);1428086387;Constructor for a non-grouped reduce (all reduce).__@param input The input data set to the groupReduce function._@param function The user-defined GroupReduce function.;public GroupReduceOperator(DataSet<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function, String defaultName) {_		super(input, resultType)__		_		this.function = function__		this.grouper = null__		this.defaultName = defaultName___		checkCombinability()__	};constructor,for,a,non,grouped,reduce,all,reduce,param,input,the,input,data,set,to,the,group,reduce,function,param,function,the,user,defined,group,reduce,function;public,group,reduce,operator,data,set,in,input,type,information,out,result,type,group,reduce,function,in,out,function,string,default,name,super,input,result,type,this,function,function,this,grouper,null,this,default,name,default,name,check,combinability
GroupReduceOperator -> public GroupReduceOperator(DataSet<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function, String defaultName);1428086500;Constructor for a non-grouped reduce (all reduce).__@param input The input data set to the groupReduce function._@param function The user-defined GroupReduce function.;public GroupReduceOperator(DataSet<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function, String defaultName) {_		super(input, resultType)__		_		this.function = function__		this.grouper = null__		this.defaultName = defaultName___		checkCombinability()__	};constructor,for,a,non,grouped,reduce,all,reduce,param,input,the,input,data,set,to,the,group,reduce,function,param,function,the,user,defined,group,reduce,function;public,group,reduce,operator,data,set,in,input,type,information,out,result,type,group,reduce,function,in,out,function,string,default,name,super,input,result,type,this,function,function,this,grouper,null,this,default,name,default,name,check,combinability
GroupReduceOperator -> public GroupReduceOperator(DataSet<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function, String defaultName);1433741389;Constructor for a non-grouped reduce (all reduce).__@param input The input data set to the groupReduce function._@param function The user-defined GroupReduce function.;public GroupReduceOperator(DataSet<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function, String defaultName) {_		super(input, resultType)__		_		this.function = function__		this.grouper = null__		this.defaultName = defaultName___		checkCombinability()__	};constructor,for,a,non,grouped,reduce,all,reduce,param,input,the,input,data,set,to,the,group,reduce,function,param,function,the,user,defined,group,reduce,function;public,group,reduce,operator,data,set,in,input,type,information,out,result,type,group,reduce,function,in,out,function,string,default,name,super,input,result,type,this,function,function,this,grouper,null,this,default,name,default,name,check,combinability
GroupReduceOperator -> public GroupReduceOperator(DataSet<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function, String defaultName);1453200998;Constructor for a non-grouped reduce (all reduce).__@param input The input data set to the groupReduce function._@param function The user-defined GroupReduce function.;public GroupReduceOperator(DataSet<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function, String defaultName) {_		super(input, resultType)__		_		this.function = function__		this.grouper = null__		this.defaultName = defaultName___		checkCombinability()__	};constructor,for,a,non,grouped,reduce,all,reduce,param,input,the,input,data,set,to,the,group,reduce,function,param,function,the,user,defined,group,reduce,function;public,group,reduce,operator,data,set,in,input,type,information,out,result,type,group,reduce,function,in,out,function,string,default,name,super,input,result,type,this,function,function,this,grouper,null,this,default,name,default,name,check,combinability
GroupReduceOperator -> public GroupReduceOperator(DataSet<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function, String defaultName);1453803444;Constructor for a non-grouped reduce (all reduce).__@param input The input data set to the groupReduce function._@param function The user-defined GroupReduce function.;public GroupReduceOperator(DataSet<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function, String defaultName) {_		super(input, resultType)__		_		this.function = function__		this.grouper = null__		this.defaultName = defaultName___		checkCombinability()__	};constructor,for,a,non,grouped,reduce,all,reduce,param,input,the,input,data,set,to,the,group,reduce,function,param,function,the,user,defined,group,reduce,function;public,group,reduce,operator,data,set,in,input,type,information,out,result,type,group,reduce,function,in,out,function,string,default,name,super,input,result,type,this,function,function,this,grouper,null,this,default,name,default,name,check,combinability
GroupReduceOperator -> public GroupReduceOperator(DataSet<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function, String defaultName);1453803455;Constructor for a non-grouped reduce (all reduce).__@param input The input data set to the groupReduce function._@param function The user-defined GroupReduce function.;public GroupReduceOperator(DataSet<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function, String defaultName) {_		super(input, resultType)__		_		this.function = function__		this.grouper = null__		this.defaultName = defaultName___		checkCombinability()__	};constructor,for,a,non,grouped,reduce,all,reduce,param,input,the,input,data,set,to,the,group,reduce,function,param,function,the,user,defined,group,reduce,function;public,group,reduce,operator,data,set,in,input,type,information,out,result,type,group,reduce,function,in,out,function,string,default,name,super,input,result,type,this,function,function,this,grouper,null,this,default,name,default,name,check,combinability
GroupReduceOperator -> public GroupReduceOperator(DataSet<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function, String defaultName);1454428544;Constructor for a non-grouped reduce (all reduce).__@param input The input data set to the groupReduce function._@param function The user-defined GroupReduce function.;public GroupReduceOperator(DataSet<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function, String defaultName) {_		super(input, resultType)__		_		this.function = function__		this.grouper = null__		this.defaultName = defaultName___		checkCombinability()__	};constructor,for,a,non,grouped,reduce,all,reduce,param,input,the,input,data,set,to,the,group,reduce,function,param,function,the,user,defined,group,reduce,function;public,group,reduce,operator,data,set,in,input,type,information,out,result,type,group,reduce,function,in,out,function,string,default,name,super,input,result,type,this,function,function,this,grouper,null,this,default,name,default,name,check,combinability
GroupReduceOperator -> public GroupReduceOperator(DataSet<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function, String defaultName);1454534259;Constructor for a non-grouped reduce (all reduce).__@param input The input data set to the groupReduce function._@param function The user-defined GroupReduce function.;public GroupReduceOperator(DataSet<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function, String defaultName) {_		super(input, resultType)___		this.function = function__		this.grouper = null__		this.defaultName = defaultName___		this.combinable = checkCombinability()__	};constructor,for,a,non,grouped,reduce,all,reduce,param,input,the,input,data,set,to,the,group,reduce,function,param,function,the,user,defined,group,reduce,function;public,group,reduce,operator,data,set,in,input,type,information,out,result,type,group,reduce,function,in,out,function,string,default,name,super,input,result,type,this,function,function,this,grouper,null,this,default,name,default,name,this,combinable,check,combinability
GroupReduceOperator -> public GroupReduceOperator(DataSet<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function, String defaultName);1454679829;Constructor for a non-grouped reduce (all reduce).__@param input The input data set to the groupReduce function._@param function The user-defined GroupReduce function.;public GroupReduceOperator(DataSet<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function, String defaultName) {_		super(input, resultType)___		this.function = function__		this.grouper = null__		this.defaultName = defaultName___		this.combinable = checkCombinability()__	};constructor,for,a,non,grouped,reduce,all,reduce,param,input,the,input,data,set,to,the,group,reduce,function,param,function,the,user,defined,group,reduce,function;public,group,reduce,operator,data,set,in,input,type,information,out,result,type,group,reduce,function,in,out,function,string,default,name,super,input,result,type,this,function,function,this,grouper,null,this,default,name,default,name,this,combinable,check,combinability
GroupReduceOperator -> public GroupReduceOperator(DataSet<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function, String defaultName);1458308691;Constructor for a non-grouped reduce (all reduce).__@param input The input data set to the groupReduce function._@param function The user-defined GroupReduce function.;public GroupReduceOperator(DataSet<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function, String defaultName) {_		super(input, resultType)___		this.function = function__		this.grouper = null__		this.defaultName = defaultName___		this.combinable = checkCombinability()__	};constructor,for,a,non,grouped,reduce,all,reduce,param,input,the,input,data,set,to,the,group,reduce,function,param,function,the,user,defined,group,reduce,function;public,group,reduce,operator,data,set,in,input,type,information,out,result,type,group,reduce,function,in,out,function,string,default,name,super,input,result,type,this,function,function,this,grouper,null,this,default,name,default,name,this,combinable,check,combinability
GroupReduceOperator -> public GroupReduceOperator(DataSet<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function, String defaultName);1500970016;Constructor for a non-grouped reduce (all reduce).__@param input The input data set to the groupReduce function._@param function The user-defined GroupReduce function.;public GroupReduceOperator(DataSet<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function, String defaultName) {_		super(input, resultType)___		this.function = function__		this.grouper = null__		this.defaultName = defaultName___		this.combinable = checkCombinability()__	};constructor,for,a,non,grouped,reduce,all,reduce,param,input,the,input,data,set,to,the,group,reduce,function,param,function,the,user,defined,group,reduce,function;public,group,reduce,operator,data,set,in,input,type,information,out,result,type,group,reduce,function,in,out,function,string,default,name,super,input,result,type,this,function,function,this,grouper,null,this,default,name,default,name,this,combinable,check,combinability
GroupReduceOperator -> public GroupReduceOperator(Grouping<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function, String defaultName);1415874087;Constructor for a grouped reduce.__@param input The grouped input to be processed group-wise by the groupReduce function._@param function The user-defined GroupReduce function.;public GroupReduceOperator(Grouping<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function, String defaultName) {_		super(input != null ? input.getDataSet() : null, resultType)__		_		this.function = function__		this.grouper = input__		this.defaultName = defaultName___		checkCombinability()___		extractSemanticAnnotationsFromUdf(function.getClass())__	};constructor,for,a,grouped,reduce,param,input,the,grouped,input,to,be,processed,group,wise,by,the,group,reduce,function,param,function,the,user,defined,group,reduce,function;public,group,reduce,operator,grouping,in,input,type,information,out,result,type,group,reduce,function,in,out,function,string,default,name,super,input,null,input,get,data,set,null,result,type,this,function,function,this,grouper,input,this,default,name,default,name,check,combinability,extract,semantic,annotations,from,udf,function,get,class
GroupReduceOperator -> public GroupReduceOperator(Grouping<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function, String defaultName);1416235078;Constructor for a grouped reduce.__@param input The grouped input to be processed group-wise by the groupReduce function._@param function The user-defined GroupReduce function.;public GroupReduceOperator(Grouping<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function, String defaultName) {_		super(input != null ? input.getDataSet() : null, resultType)__		_		this.function = function__		this.grouper = input__		this.defaultName = defaultName___		checkCombinability()___		extractSemanticAnnotationsFromUdf(function.getClass())__	};constructor,for,a,grouped,reduce,param,input,the,grouped,input,to,be,processed,group,wise,by,the,group,reduce,function,param,function,the,user,defined,group,reduce,function;public,group,reduce,operator,grouping,in,input,type,information,out,result,type,group,reduce,function,in,out,function,string,default,name,super,input,null,input,get,data,set,null,result,type,this,function,function,this,grouper,input,this,default,name,default,name,check,combinability,extract,semantic,annotations,from,udf,function,get,class
GroupReduceOperator -> public GroupReduceOperator(Grouping<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function, String defaultName);1416309577;Constructor for a grouped reduce.__@param input The grouped input to be processed group-wise by the groupReduce function._@param function The user-defined GroupReduce function.;public GroupReduceOperator(Grouping<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function, String defaultName) {_		super(input != null ? input.getDataSet() : null, resultType)__		_		this.function = function__		this.grouper = input__		this.defaultName = defaultName___		checkCombinability()___		extractSemanticAnnotationsFromUdf(function.getClass())__	};constructor,for,a,grouped,reduce,param,input,the,grouped,input,to,be,processed,group,wise,by,the,group,reduce,function,param,function,the,user,defined,group,reduce,function;public,group,reduce,operator,grouping,in,input,type,information,out,result,type,group,reduce,function,in,out,function,string,default,name,super,input,null,input,get,data,set,null,result,type,this,function,function,this,grouper,input,this,default,name,default,name,check,combinability,extract,semantic,annotations,from,udf,function,get,class
GroupReduceOperator -> public GroupReduceOperator(Grouping<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function, String defaultName);1420730997;Constructor for a grouped reduce.__@param input The grouped input to be processed group-wise by the groupReduce function._@param function The user-defined GroupReduce function.;public GroupReduceOperator(Grouping<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function, String defaultName) {_		super(input != null ? input.getDataSet() : null, resultType)__		_		this.function = function__		this.grouper = input__		this.defaultName = defaultName___		checkCombinability()__	};constructor,for,a,grouped,reduce,param,input,the,grouped,input,to,be,processed,group,wise,by,the,group,reduce,function,param,function,the,user,defined,group,reduce,function;public,group,reduce,operator,grouping,in,input,type,information,out,result,type,group,reduce,function,in,out,function,string,default,name,super,input,null,input,get,data,set,null,result,type,this,function,function,this,grouper,input,this,default,name,default,name,check,combinability
GroupReduceOperator -> public GroupReduceOperator(Grouping<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function, String defaultName);1421341998;Constructor for a grouped reduce.__@param input The grouped input to be processed group-wise by the groupReduce function._@param function The user-defined GroupReduce function.;public GroupReduceOperator(Grouping<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function, String defaultName) {_		super(input != null ? input.getDataSet() : null, resultType)__		_		this.function = function__		this.grouper = input__		this.defaultName = defaultName___		checkCombinability()__	};constructor,for,a,grouped,reduce,param,input,the,grouped,input,to,be,processed,group,wise,by,the,group,reduce,function,param,function,the,user,defined,group,reduce,function;public,group,reduce,operator,grouping,in,input,type,information,out,result,type,group,reduce,function,in,out,function,string,default,name,super,input,null,input,get,data,set,null,result,type,this,function,function,this,grouper,input,this,default,name,default,name,check,combinability
GroupReduceOperator -> public GroupReduceOperator(Grouping<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function, String defaultName);1427097830;Constructor for a grouped reduce.__@param input The grouped input to be processed group-wise by the groupReduce function._@param function The user-defined GroupReduce function.;public GroupReduceOperator(Grouping<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function, String defaultName) {_		super(input != null ? input.getDataSet() : null, resultType)__		_		this.function = function__		this.grouper = input__		this.defaultName = defaultName___		checkCombinability()__	};constructor,for,a,grouped,reduce,param,input,the,grouped,input,to,be,processed,group,wise,by,the,group,reduce,function,param,function,the,user,defined,group,reduce,function;public,group,reduce,operator,grouping,in,input,type,information,out,result,type,group,reduce,function,in,out,function,string,default,name,super,input,null,input,get,data,set,null,result,type,this,function,function,this,grouper,input,this,default,name,default,name,check,combinability
GroupReduceOperator -> public GroupReduceOperator(Grouping<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function, String defaultName);1427300031;Constructor for a grouped reduce.__@param input The grouped input to be processed group-wise by the groupReduce function._@param function The user-defined GroupReduce function.;public GroupReduceOperator(Grouping<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function, String defaultName) {_		super(input != null ? input.getDataSet() : null, resultType)__		_		this.function = function__		this.grouper = input__		this.defaultName = defaultName___		checkCombinability()__	};constructor,for,a,grouped,reduce,param,input,the,grouped,input,to,be,processed,group,wise,by,the,group,reduce,function,param,function,the,user,defined,group,reduce,function;public,group,reduce,operator,grouping,in,input,type,information,out,result,type,group,reduce,function,in,out,function,string,default,name,super,input,null,input,get,data,set,null,result,type,this,function,function,this,grouper,input,this,default,name,default,name,check,combinability
GroupReduceOperator -> public GroupReduceOperator(Grouping<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function, String defaultName);1428086387;Constructor for a grouped reduce.__@param input The grouped input to be processed group-wise by the groupReduce function._@param function The user-defined GroupReduce function.;public GroupReduceOperator(Grouping<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function, String defaultName) {_		super(input != null ? input.getDataSet() : null, resultType)__		_		this.function = function__		this.grouper = input__		this.defaultName = defaultName___		checkCombinability()__	};constructor,for,a,grouped,reduce,param,input,the,grouped,input,to,be,processed,group,wise,by,the,group,reduce,function,param,function,the,user,defined,group,reduce,function;public,group,reduce,operator,grouping,in,input,type,information,out,result,type,group,reduce,function,in,out,function,string,default,name,super,input,null,input,get,data,set,null,result,type,this,function,function,this,grouper,input,this,default,name,default,name,check,combinability
GroupReduceOperator -> public GroupReduceOperator(Grouping<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function, String defaultName);1428086500;Constructor for a grouped reduce.__@param input The grouped input to be processed group-wise by the groupReduce function._@param function The user-defined GroupReduce function.;public GroupReduceOperator(Grouping<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function, String defaultName) {_		super(input != null ? input.getDataSet() : null, resultType)__		_		this.function = function__		this.grouper = input__		this.defaultName = defaultName___		checkCombinability()__	};constructor,for,a,grouped,reduce,param,input,the,grouped,input,to,be,processed,group,wise,by,the,group,reduce,function,param,function,the,user,defined,group,reduce,function;public,group,reduce,operator,grouping,in,input,type,information,out,result,type,group,reduce,function,in,out,function,string,default,name,super,input,null,input,get,data,set,null,result,type,this,function,function,this,grouper,input,this,default,name,default,name,check,combinability
GroupReduceOperator -> public GroupReduceOperator(Grouping<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function, String defaultName);1433741389;Constructor for a grouped reduce.__@param input The grouped input to be processed group-wise by the groupReduce function._@param function The user-defined GroupReduce function.;public GroupReduceOperator(Grouping<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function, String defaultName) {_		super(input != null ? input.getDataSet() : null, resultType)__		_		this.function = function__		this.grouper = input__		this.defaultName = defaultName___		checkCombinability()___		UdfOperatorUtils.analyzeSingleInputUdf(this, GroupReduceFunction.class, defaultName, function, grouper.keys)__	};constructor,for,a,grouped,reduce,param,input,the,grouped,input,to,be,processed,group,wise,by,the,group,reduce,function,param,function,the,user,defined,group,reduce,function;public,group,reduce,operator,grouping,in,input,type,information,out,result,type,group,reduce,function,in,out,function,string,default,name,super,input,null,input,get,data,set,null,result,type,this,function,function,this,grouper,input,this,default,name,default,name,check,combinability,udf,operator,utils,analyze,single,input,udf,this,group,reduce,function,class,default,name,function,grouper,keys
GroupReduceOperator -> public GroupReduceOperator(Grouping<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function, String defaultName);1453200998;Constructor for a grouped reduce.__@param input The grouped input to be processed group-wise by the groupReduce function._@param function The user-defined GroupReduce function.;public GroupReduceOperator(Grouping<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function, String defaultName) {_		super(input != null ? input.getDataSet() : null, resultType)__		_		this.function = function__		this.grouper = input__		this.defaultName = defaultName___		checkCombinability()___		UdfOperatorUtils.analyzeSingleInputUdf(this, GroupReduceFunction.class, defaultName, function, grouper.keys)__	};constructor,for,a,grouped,reduce,param,input,the,grouped,input,to,be,processed,group,wise,by,the,group,reduce,function,param,function,the,user,defined,group,reduce,function;public,group,reduce,operator,grouping,in,input,type,information,out,result,type,group,reduce,function,in,out,function,string,default,name,super,input,null,input,get,data,set,null,result,type,this,function,function,this,grouper,input,this,default,name,default,name,check,combinability,udf,operator,utils,analyze,single,input,udf,this,group,reduce,function,class,default,name,function,grouper,keys
GroupReduceOperator -> public GroupReduceOperator(Grouping<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function, String defaultName);1453803444;Constructor for a grouped reduce.__@param input The grouped input to be processed group-wise by the groupReduce function._@param function The user-defined GroupReduce function.;public GroupReduceOperator(Grouping<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function, String defaultName) {_		super(input != null ? input.getDataSet() : null, resultType)__		_		this.function = function__		this.grouper = input__		this.defaultName = defaultName___		checkCombinability()___		UdfOperatorUtils.analyzeSingleInputUdf(this, GroupReduceFunction.class, defaultName, function, grouper.keys)__	};constructor,for,a,grouped,reduce,param,input,the,grouped,input,to,be,processed,group,wise,by,the,group,reduce,function,param,function,the,user,defined,group,reduce,function;public,group,reduce,operator,grouping,in,input,type,information,out,result,type,group,reduce,function,in,out,function,string,default,name,super,input,null,input,get,data,set,null,result,type,this,function,function,this,grouper,input,this,default,name,default,name,check,combinability,udf,operator,utils,analyze,single,input,udf,this,group,reduce,function,class,default,name,function,grouper,keys
GroupReduceOperator -> public GroupReduceOperator(Grouping<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function, String defaultName);1453803455;Constructor for a grouped reduce.__@param input The grouped input to be processed group-wise by the groupReduce function._@param function The user-defined GroupReduce function.;public GroupReduceOperator(Grouping<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function, String defaultName) {_		super(input != null ? input.getInputDataSet() : null, resultType)__		_		this.function = function__		this.grouper = input__		this.defaultName = defaultName___		checkCombinability()___		UdfOperatorUtils.analyzeSingleInputUdf(this, GroupReduceFunction.class, defaultName, function, grouper.keys)__	};constructor,for,a,grouped,reduce,param,input,the,grouped,input,to,be,processed,group,wise,by,the,group,reduce,function,param,function,the,user,defined,group,reduce,function;public,group,reduce,operator,grouping,in,input,type,information,out,result,type,group,reduce,function,in,out,function,string,default,name,super,input,null,input,get,input,data,set,null,result,type,this,function,function,this,grouper,input,this,default,name,default,name,check,combinability,udf,operator,utils,analyze,single,input,udf,this,group,reduce,function,class,default,name,function,grouper,keys
GroupReduceOperator -> public GroupReduceOperator(Grouping<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function, String defaultName);1454428544;Constructor for a grouped reduce.__@param input The grouped input to be processed group-wise by the groupReduce function._@param function The user-defined GroupReduce function.;public GroupReduceOperator(Grouping<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function, String defaultName) {_		super(input != null ? input.getInputDataSet() : null, resultType)__		_		this.function = function__		this.grouper = input__		this.defaultName = defaultName___		checkCombinability()___		UdfOperatorUtils.analyzeSingleInputUdf(this, GroupReduceFunction.class, defaultName, function, grouper.keys)__	};constructor,for,a,grouped,reduce,param,input,the,grouped,input,to,be,processed,group,wise,by,the,group,reduce,function,param,function,the,user,defined,group,reduce,function;public,group,reduce,operator,grouping,in,input,type,information,out,result,type,group,reduce,function,in,out,function,string,default,name,super,input,null,input,get,input,data,set,null,result,type,this,function,function,this,grouper,input,this,default,name,default,name,check,combinability,udf,operator,utils,analyze,single,input,udf,this,group,reduce,function,class,default,name,function,grouper,keys
GroupReduceOperator -> public GroupReduceOperator(Grouping<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function, String defaultName);1454534259;Constructor for a grouped reduce.__@param input The grouped input to be processed group-wise by the groupReduce function._@param function The user-defined GroupReduce function.;public GroupReduceOperator(Grouping<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function, String defaultName) {_		super(input != null ? input.getInputDataSet() : null, resultType)___		this.function = function__		this.grouper = input__		this.defaultName = defaultName___		this.combinable = checkCombinability()___		UdfOperatorUtils.analyzeSingleInputUdf(this, GroupReduceFunction.class, defaultName, function, grouper.keys)__	};constructor,for,a,grouped,reduce,param,input,the,grouped,input,to,be,processed,group,wise,by,the,group,reduce,function,param,function,the,user,defined,group,reduce,function;public,group,reduce,operator,grouping,in,input,type,information,out,result,type,group,reduce,function,in,out,function,string,default,name,super,input,null,input,get,input,data,set,null,result,type,this,function,function,this,grouper,input,this,default,name,default,name,this,combinable,check,combinability,udf,operator,utils,analyze,single,input,udf,this,group,reduce,function,class,default,name,function,grouper,keys
GroupReduceOperator -> public GroupReduceOperator(Grouping<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function, String defaultName);1454679829;Constructor for a grouped reduce.__@param input The grouped input to be processed group-wise by the groupReduce function._@param function The user-defined GroupReduce function.;public GroupReduceOperator(Grouping<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function, String defaultName) {_		super(input != null ? input.getInputDataSet() : null, resultType)___		this.function = function__		this.grouper = input__		this.defaultName = defaultName___		this.combinable = checkCombinability()___		UdfOperatorUtils.analyzeSingleInputUdf(this, GroupReduceFunction.class, defaultName, function, grouper.keys)__	};constructor,for,a,grouped,reduce,param,input,the,grouped,input,to,be,processed,group,wise,by,the,group,reduce,function,param,function,the,user,defined,group,reduce,function;public,group,reduce,operator,grouping,in,input,type,information,out,result,type,group,reduce,function,in,out,function,string,default,name,super,input,null,input,get,input,data,set,null,result,type,this,function,function,this,grouper,input,this,default,name,default,name,this,combinable,check,combinability,udf,operator,utils,analyze,single,input,udf,this,group,reduce,function,class,default,name,function,grouper,keys
GroupReduceOperator -> public GroupReduceOperator(Grouping<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function, String defaultName);1458308691;Constructor for a grouped reduce.__@param input The grouped input to be processed group-wise by the groupReduce function._@param function The user-defined GroupReduce function.;public GroupReduceOperator(Grouping<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function, String defaultName) {_		super(input != null ? input.getInputDataSet() : null, resultType)___		this.function = function__		this.grouper = input__		this.defaultName = defaultName___		this.combinable = checkCombinability()___		UdfOperatorUtils.analyzeSingleInputUdf(this, GroupReduceFunction.class, defaultName, function, grouper.keys)__	};constructor,for,a,grouped,reduce,param,input,the,grouped,input,to,be,processed,group,wise,by,the,group,reduce,function,param,function,the,user,defined,group,reduce,function;public,group,reduce,operator,grouping,in,input,type,information,out,result,type,group,reduce,function,in,out,function,string,default,name,super,input,null,input,get,input,data,set,null,result,type,this,function,function,this,grouper,input,this,default,name,default,name,this,combinable,check,combinability,udf,operator,utils,analyze,single,input,udf,this,group,reduce,function,class,default,name,function,grouper,keys
GroupReduceOperator -> public GroupReduceOperator(Grouping<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function, String defaultName);1500970016;Constructor for a grouped reduce.__@param input The grouped input to be processed group-wise by the groupReduce function._@param function The user-defined GroupReduce function.;public GroupReduceOperator(Grouping<IN> input, TypeInformation<OUT> resultType, GroupReduceFunction<IN, OUT> function, String defaultName) {_		super(input != null ? input.getInputDataSet() : null, resultType)___		this.function = function__		this.grouper = input__		this.defaultName = defaultName___		this.combinable = checkCombinability()___		UdfOperatorUtils.analyzeSingleInputUdf(this, GroupReduceFunction.class, defaultName, function, grouper.keys)__	};constructor,for,a,grouped,reduce,param,input,the,grouped,input,to,be,processed,group,wise,by,the,group,reduce,function,param,function,the,user,defined,group,reduce,function;public,group,reduce,operator,grouping,in,input,type,information,out,result,type,group,reduce,function,in,out,function,string,default,name,super,input,null,input,get,input,data,set,null,result,type,this,function,function,this,grouper,input,this,default,name,default,name,this,combinable,check,combinability,udf,operator,utils,analyze,single,input,udf,this,group,reduce,function,class,default,name,function,grouper,keys
GroupReduceOperator -> public GroupReduceOperator(DataSet<IN> input, GroupReduceFunction<IN, OUT> function);1406821655;Constructor for a non-grouped reduce (all reduce).__@param input The input data set to the groupReduce function._@param function The user-defined GroupReduce function.;public GroupReduceOperator(DataSet<IN> input, GroupReduceFunction<IN, OUT> function) {_		super(input, TypeExtractor.getGroupReduceReturnTypes(function, input.getType()))__		_		this.function = function__		this.grouper = null___		checkCombinability()__	};constructor,for,a,non,grouped,reduce,all,reduce,param,input,the,input,data,set,to,the,group,reduce,function,param,function,the,user,defined,group,reduce,function;public,group,reduce,operator,data,set,in,input,group,reduce,function,in,out,function,super,input,type,extractor,get,group,reduce,return,types,function,input,get,type,this,function,function,this,grouper,null,check,combinability
GroupReduceOperator -> public GroupReduceOperator(DataSet<IN> input, GroupReduceFunction<IN, OUT> function);1406830680;Constructor for a non-grouped reduce (all reduce).__@param input The input data set to the groupReduce function._@param function The user-defined GroupReduce function.;public GroupReduceOperator(DataSet<IN> input, GroupReduceFunction<IN, OUT> function) {_		super(input, TypeExtractor.getGroupReduceReturnTypes(function, input.getType()))__		_		this.function = function__		this.grouper = null___		checkCombinability()__	};constructor,for,a,non,grouped,reduce,all,reduce,param,input,the,input,data,set,to,the,group,reduce,function,param,function,the,user,defined,group,reduce,function;public,group,reduce,operator,data,set,in,input,group,reduce,function,in,out,function,super,input,type,extractor,get,group,reduce,return,types,function,input,get,type,this,function,function,this,grouper,null,check,combinability
GroupReduceOperator -> public GroupReduceOperator(DataSet<IN> input, GroupReduceFunction<IN, OUT> function);1406853229;Constructor for a non-grouped reduce (all reduce).__@param input The input data set to the groupReduce function._@param function The user-defined GroupReduce function.;public GroupReduceOperator(DataSet<IN> input, GroupReduceFunction<IN, OUT> function) {_		super(input, TypeExtractor.getGroupReduceReturnTypes(function, input.getType()))__		_		this.function = function__		this.grouper = null___		checkCombinability()__	};constructor,for,a,non,grouped,reduce,all,reduce,param,input,the,input,data,set,to,the,group,reduce,function,param,function,the,user,defined,group,reduce,function;public,group,reduce,operator,data,set,in,input,group,reduce,function,in,out,function,super,input,type,extractor,get,group,reduce,return,types,function,input,get,type,this,function,function,this,grouper,null,check,combinability
