# id;timestamp;commentText;codeText;commentWords;codeWords
RemoteEnvironment -> public RemoteEnvironment(String host, int port, String... jarFiles);1405024514;Creates a new RemoteEnvironment that points to the master (JobManager) described by the_given host name and port.__@param host The host name or address of the master (JobManager), where the program should be executed._@param port The port of the master (JobManager), where the program should be executed._@param jarFiles The JAR files with code that needs to be shipped to the cluster. If the program uses_user-defined functions, user-defined input formats, or any libraries, those must be_provided in the JAR files.;public RemoteEnvironment(String host, int port, String... jarFiles) {_		if (host == null) {_			throw new NullPointerException("Host must not be null.")__		}_		_		if (port < 1 || port >= 0xffff) {_			throw new IllegalArgumentException("Port out of range")__		}_		_		this.host = host__		this.port = port__		this.jarFiles = jarFiles__	};creates,a,new,remote,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files;public,remote,environment,string,host,int,port,string,jar,files,if,host,null,throw,new,null,pointer,exception,host,must,not,be,null,if,port,1,port,0xffff,throw,new,illegal,argument,exception,port,out,of,range,this,host,host,this,port,port,this,jar,files,jar,files
RemoteEnvironment -> public RemoteEnvironment(String host, int port, String... jarFiles);1405090423;Creates a new RemoteEnvironment that points to the master (JobManager) described by the_given host name and port.__@param host The host name or address of the master (JobManager), where the program should be executed._@param port The port of the master (JobManager), where the program should be executed._@param jarFiles The JAR files with code that needs to be shipped to the cluster. If the program uses_user-defined functions, user-defined input formats, or any libraries, those must be_provided in the JAR files.;public RemoteEnvironment(String host, int port, String... jarFiles) {_		if (host == null) {_			throw new NullPointerException("Host must not be null.")__		}_		_		if (port < 1 || port >= 0xffff) {_			throw new IllegalArgumentException("Port out of range")__		}_		_		this.host = host__		this.port = port__		this.jarFiles = jarFiles__	};creates,a,new,remote,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files;public,remote,environment,string,host,int,port,string,jar,files,if,host,null,throw,new,null,pointer,exception,host,must,not,be,null,if,port,1,port,0xffff,throw,new,illegal,argument,exception,port,out,of,range,this,host,host,this,port,port,this,jar,files,jar,files
RemoteEnvironment -> public RemoteEnvironment(String host, int port, String... jarFiles);1411473593;Creates a new RemoteEnvironment that points to the master (JobManager) described by the_given host name and port.__@param host The host name or address of the master (JobManager), where the program should be executed._@param port The port of the master (JobManager), where the program should be executed._@param jarFiles The JAR files with code that needs to be shipped to the cluster. If the program uses_user-defined functions, user-defined input formats, or any libraries, those must be_provided in the JAR files.;public RemoteEnvironment(String host, int port, String... jarFiles) {_		if (host == null) {_			throw new NullPointerException("Host must not be null.")__		}_		_		if (port < 1 || port >= 0xffff) {_			throw new IllegalArgumentException("Port out of range")__		}_		_		this.host = host__		this.port = port__		this.jarFiles = jarFiles__	};creates,a,new,remote,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files;public,remote,environment,string,host,int,port,string,jar,files,if,host,null,throw,new,null,pointer,exception,host,must,not,be,null,if,port,1,port,0xffff,throw,new,illegal,argument,exception,port,out,of,range,this,host,host,this,port,port,this,jar,files,jar,files
RemoteEnvironment -> public RemoteEnvironment(String host, int port, String... jarFiles);1416227258;Creates a new RemoteEnvironment that points to the master (JobManager) described by the_given host name and port.__@param host The host name or address of the master (JobManager), where the program should be executed._@param port The port of the master (JobManager), where the program should be executed._@param jarFiles The JAR files with code that needs to be shipped to the cluster. If the program uses_user-defined functions, user-defined input formats, or any libraries, those must be_provided in the JAR files.;public RemoteEnvironment(String host, int port, String... jarFiles) {_		if (host == null) {_			throw new NullPointerException("Host must not be null.")__		}_		_		if (port < 1 || port >= 0xffff) {_			throw new IllegalArgumentException("Port out of range")__		}_		_		this.host = host__		this.port = port__		this.jarFiles = jarFiles__	};creates,a,new,remote,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files;public,remote,environment,string,host,int,port,string,jar,files,if,host,null,throw,new,null,pointer,exception,host,must,not,be,null,if,port,1,port,0xffff,throw,new,illegal,argument,exception,port,out,of,range,this,host,host,this,port,port,this,jar,files,jar,files
RemoteEnvironment -> public RemoteEnvironment(String host, int port, String... jarFiles);1427097830;Creates a new RemoteEnvironment that points to the master (JobManager) described by the_given host name and port.__@param host The host name or address of the master (JobManager), where the program should be executed._@param port The port of the master (JobManager), where the program should be executed._@param jarFiles The JAR files with code that needs to be shipped to the cluster. If the program uses_user-defined functions, user-defined input formats, or any libraries, those must be_provided in the JAR files.;public RemoteEnvironment(String host, int port, String... jarFiles) {_		if (host == null) {_			throw new NullPointerException("Host must not be null.")__		}_		_		if (port < 1 || port >= 0xffff) {_			throw new IllegalArgumentException("Port out of range")__		}_		_		this.host = host__		this.port = port__		this.jarFiles = jarFiles__	};creates,a,new,remote,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files;public,remote,environment,string,host,int,port,string,jar,files,if,host,null,throw,new,null,pointer,exception,host,must,not,be,null,if,port,1,port,0xffff,throw,new,illegal,argument,exception,port,out,of,range,this,host,host,this,port,port,this,jar,files,jar,files
RemoteEnvironment -> public RemoteEnvironment(String host, int port, String... jarFiles);1428935901;Creates a new RemoteEnvironment that points to the master (JobManager) described by the_given host name and port.__@param host The host name or address of the master (JobManager), where the program should be executed._@param port The port of the master (JobManager), where the program should be executed._@param jarFiles The JAR files with code that needs to be shipped to the cluster. If the program uses_user-defined functions, user-defined input formats, or any libraries, those must be_provided in the JAR files.;public RemoteEnvironment(String host, int port, String... jarFiles) {_		if (host == null) {_			throw new NullPointerException("Host must not be null.")__		}_		_		if (port < 1 || port >= 0xffff) {_			throw new IllegalArgumentException("Port out of range")__		}_		_		this.host = host__		this.port = port__		this.jarFiles = jarFiles__	};creates,a,new,remote,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files;public,remote,environment,string,host,int,port,string,jar,files,if,host,null,throw,new,null,pointer,exception,host,must,not,be,null,if,port,1,port,0xffff,throw,new,illegal,argument,exception,port,out,of,range,this,host,host,this,port,port,this,jar,files,jar,files
RemoteEnvironment -> public RemoteEnvironment(String host, int port, String... jarFiles);1432206765;Creates a new RemoteEnvironment that points to the master (JobManager) described by the_given host name and port.__@param host The host name or address of the master (JobManager), where the program should be executed._@param port The port of the master (JobManager), where the program should be executed._@param jarFiles The JAR files with code that needs to be shipped to the cluster. If the program uses_user-defined functions, user-defined input formats, or any libraries, those must be_provided in the JAR files.;public RemoteEnvironment(String host, int port, String... jarFiles) {_		if (host == null) {_			throw new NullPointerException("Host must not be null.")__		}_		_		if (port < 1 || port >= 0xffff) {_			throw new IllegalArgumentException("Port out of range")__		}_		_		this.host = host__		this.port = port__		this.jarFiles = jarFiles__	};creates,a,new,remote,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files;public,remote,environment,string,host,int,port,string,jar,files,if,host,null,throw,new,null,pointer,exception,host,must,not,be,null,if,port,1,port,0xffff,throw,new,illegal,argument,exception,port,out,of,range,this,host,host,this,port,port,this,jar,files,jar,files
RemoteEnvironment -> public RemoteEnvironment(String host, int port, String... jarFiles);1432820897;Creates a new RemoteEnvironment that points to the master (JobManager) described by the_given host name and port.__@param host The host name or address of the master (JobManager), where the program should be executed._@param port The port of the master (JobManager), where the program should be executed._@param jarFiles The JAR files with code that needs to be shipped to the cluster. If the program uses_user-defined functions, user-defined input formats, or any libraries, those must be_provided in the JAR files.;public RemoteEnvironment(String host, int port, String... jarFiles) {_		if (host == null) {_			throw new NullPointerException("Host must not be null.")__		}_		_		if (port < 1 || port >= 0xffff) {_			throw new IllegalArgumentException("Port out of range")__		}_		_		this.host = host__		this.port = port__		this.jarFiles = jarFiles__	};creates,a,new,remote,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files;public,remote,environment,string,host,int,port,string,jar,files,if,host,null,throw,new,null,pointer,exception,host,must,not,be,null,if,port,1,port,0xffff,throw,new,illegal,argument,exception,port,out,of,range,this,host,host,this,port,port,this,jar,files,jar,files
RemoteEnvironment -> public RemoteEnvironment(String host, int port, String... jarFiles);1432820897;Creates a new RemoteEnvironment that points to the master (JobManager) described by the_given host name and port.__@param host The host name or address of the master (JobManager), where the program should be executed._@param port The port of the master (JobManager), where the program should be executed._@param jarFiles The JAR files with code that needs to be shipped to the cluster. If the program uses_user-defined functions, user-defined input formats, or any libraries, those must be_provided in the JAR files.;public RemoteEnvironment(String host, int port, String... jarFiles) {_		if (host == null) {_			throw new NullPointerException("Host must not be null.")__		}_		_		if (port < 1 || port >= 0xffff) {_			throw new IllegalArgumentException("Port out of range")__		}_		_		this.host = host__		this.port = port__		this.jarFiles = jarFiles__	};creates,a,new,remote,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files;public,remote,environment,string,host,int,port,string,jar,files,if,host,null,throw,new,null,pointer,exception,host,must,not,be,null,if,port,1,port,0xffff,throw,new,illegal,argument,exception,port,out,of,range,this,host,host,this,port,port,this,jar,files,jar,files
RemoteEnvironment -> public RemoteEnvironment(String host, int port, String... jarFiles);1442312344;Creates a new RemoteEnvironment that points to the master (JobManager) described by the_given host name and port.__@param host The host name or address of the master (JobManager), where the program should be executed._@param port The port of the master (JobManager), where the program should be executed._@param jarFiles The JAR files with code that needs to be shipped to the cluster. If the program uses_user-defined functions, user-defined input formats, or any libraries, those must be_provided in the JAR files.;public RemoteEnvironment(String host, int port, String... jarFiles) {_		if (host == null) {_			throw new NullPointerException("Host must not be null.")__		}_		_		if (port < 1 || port >= 0xffff) {_			throw new IllegalArgumentException("Port out of range")__		}_		_		this.host = host__		this.port = port__		this.jarFiles = jarFiles__	};creates,a,new,remote,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files;public,remote,environment,string,host,int,port,string,jar,files,if,host,null,throw,new,null,pointer,exception,host,must,not,be,null,if,port,1,port,0xffff,throw,new,illegal,argument,exception,port,out,of,range,this,host,host,this,port,port,this,jar,files,jar,files
RemoteEnvironment -> public RemoteEnvironment(String host, int port, String... jarFiles);1442944546;Creates a new RemoteEnvironment that points to the master (JobManager) described by the_given host name and port.__<p>Each program execution will have all the given JAR files in its classpath.</p>__@param host The host name or address of the master (JobManager), where the program should be executed._@param port The port of the master (JobManager), where the program should be executed._@param jarFiles The JAR files with code that needs to be shipped to the cluster. If the program uses_user-defined functions, user-defined input formats, or any libraries, those must be_provided in the JAR files.;public RemoteEnvironment(String host, int port, String... jarFiles) {_		if (host == null) {_			throw new NullPointerException("Host must not be null.")__		}_		if (port < 1 || port >= 0xffff) {_			throw new IllegalArgumentException("Port out of range")__		}__		this.host = host__		this.port = port__		this.jarFiles = jarFiles__	};creates,a,new,remote,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,p,each,program,execution,will,have,all,the,given,jar,files,in,its,classpath,p,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files;public,remote,environment,string,host,int,port,string,jar,files,if,host,null,throw,new,null,pointer,exception,host,must,not,be,null,if,port,1,port,0xffff,throw,new,illegal,argument,exception,port,out,of,range,this,host,host,this,port,port,this,jar,files,jar,files
RemoteEnvironment -> public RemoteEnvironment(String host, int port, String... jarFiles);1442944546;Creates a new RemoteEnvironment that points to the master (JobManager) described by the_given host name and port.__<p>Each program execution will have all the given JAR files in its classpath.</p>__@param host The host name or address of the master (JobManager), where the program should be executed._@param port The port of the master (JobManager), where the program should be executed._@param jarFiles The JAR files with code that needs to be shipped to the cluster. If the program uses_user-defined functions, user-defined input formats, or any libraries, those must be_provided in the JAR files.;public RemoteEnvironment(String host, int port, String... jarFiles) {_		if (host == null) {_			throw new NullPointerException("Host must not be null.")__		}_		if (port < 1 || port >= 0xffff) {_			throw new IllegalArgumentException("Port out of range")__		}__		this.host = host__		this.port = port__		this.jarFiles = jarFiles__	};creates,a,new,remote,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,p,each,program,execution,will,have,all,the,given,jar,files,in,its,classpath,p,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files;public,remote,environment,string,host,int,port,string,jar,files,if,host,null,throw,new,null,pointer,exception,host,must,not,be,null,if,port,1,port,0xffff,throw,new,illegal,argument,exception,port,out,of,range,this,host,host,this,port,port,this,jar,files,jar,files
RemoteEnvironment -> public RemoteEnvironment(String host, int port, String... jarFiles);1443682842;Creates a new RemoteEnvironment that points to the master (JobManager) described by the_given host name and port.__<p>Each program execution will have all the given JAR files in its classpath.__@param host The host name or address of the master (JobManager), where the program should be executed._@param port The port of the master (JobManager), where the program should be executed._@param jarFiles The JAR files with code that needs to be shipped to the cluster. If the program uses_user-defined functions, user-defined input formats, or any libraries, those must be_provided in the JAR files.;public RemoteEnvironment(String host, int port, String... jarFiles) {_		this(host, port, null, jarFiles)__	};creates,a,new,remote,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,p,each,program,execution,will,have,all,the,given,jar,files,in,its,classpath,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files;public,remote,environment,string,host,int,port,string,jar,files,this,host,port,null,jar,files
RemoteEnvironment -> public RemoteEnvironment(String host, int port, String... jarFiles);1444312509;Creates a new RemoteEnvironment that points to the master (JobManager) described by the_given host name and port.__<p>Each program execution will have all the given JAR files in its classpath.__@param host The host name or address of the master (JobManager), where the program should be executed._@param port The port of the master (JobManager), where the program should be executed._@param jarFiles The JAR files with code that needs to be shipped to the cluster. If the program uses_user-defined functions, user-defined input formats, or any libraries, those must be_provided in the JAR files.;public RemoteEnvironment(String host, int port, String... jarFiles) {_		this(host, port, null, jarFiles, null)__	};creates,a,new,remote,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,p,each,program,execution,will,have,all,the,given,jar,files,in,its,classpath,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files;public,remote,environment,string,host,int,port,string,jar,files,this,host,port,null,jar,files,null
RemoteEnvironment -> public RemoteEnvironment(String host, int port, String... jarFiles);1454679829;Creates a new RemoteEnvironment that points to the master (JobManager) described by the_given host name and port.__<p>Each program execution will have all the given JAR files in its classpath.__@param host The host name or address of the master (JobManager), where the program should be executed._@param port The port of the master (JobManager), where the program should be executed._@param jarFiles The JAR files with code that needs to be shipped to the cluster. If the program uses_user-defined functions, user-defined input formats, or any libraries, those must be_provided in the JAR files.;public RemoteEnvironment(String host, int port, String... jarFiles) {_		this(host, port, null, jarFiles, null)__	};creates,a,new,remote,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,p,each,program,execution,will,have,all,the,given,jar,files,in,its,classpath,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files;public,remote,environment,string,host,int,port,string,jar,files,this,host,port,null,jar,files,null
RemoteEnvironment -> public RemoteEnvironment(String host, int port, String... jarFiles);1455101486;Creates a new RemoteEnvironment that points to the master (JobManager) described by the_given host name and port.__<p>Each program execution will have all the given JAR files in its classpath.__@param host The host name or address of the master (JobManager), where the program should be executed._@param port The port of the master (JobManager), where the program should be executed._@param jarFiles The JAR files with code that needs to be shipped to the cluster. If the program uses_user-defined functions, user-defined input formats, or any libraries, those must be_provided in the JAR files.;public RemoteEnvironment(String host, int port, String... jarFiles) {_		this(host, port, null, jarFiles, null)__	};creates,a,new,remote,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,p,each,program,execution,will,have,all,the,given,jar,files,in,its,classpath,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files;public,remote,environment,string,host,int,port,string,jar,files,this,host,port,null,jar,files,null
RemoteEnvironment -> public RemoteEnvironment(String host, int port, String... jarFiles);1461591030;Creates a new RemoteEnvironment that points to the master (JobManager) described by the_given host name and port.__<p>Each program execution will have all the given JAR files in its classpath.__@param host The host name or address of the master (JobManager), where the program should be executed._@param port The port of the master (JobManager), where the program should be executed._@param jarFiles The JAR files with code that needs to be shipped to the cluster. If the program uses_user-defined functions, user-defined input formats, or any libraries, those must be_provided in the JAR files.;public RemoteEnvironment(String host, int port, String... jarFiles) {_		this(host, port, null, jarFiles, null)__	};creates,a,new,remote,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,p,each,program,execution,will,have,all,the,given,jar,files,in,its,classpath,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files;public,remote,environment,string,host,int,port,string,jar,files,this,host,port,null,jar,files,null
RemoteEnvironment -> public RemoteEnvironment(String host, int port, String... jarFiles);1500974867;Creates a new RemoteEnvironment that points to the master (JobManager) described by the_given host name and port.__<p>Each program execution will have all the given JAR files in its classpath.__@param host The host name or address of the master (JobManager), where the program should be executed._@param port The port of the master (JobManager), where the program should be executed._@param jarFiles The JAR files with code that needs to be shipped to the cluster. If the program uses_user-defined functions, user-defined input formats, or any libraries, those must be_provided in the JAR files.;public RemoteEnvironment(String host, int port, String... jarFiles) {_		this(host, port, null, jarFiles, null)__	};creates,a,new,remote,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,p,each,program,execution,will,have,all,the,given,jar,files,in,its,classpath,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files;public,remote,environment,string,host,int,port,string,jar,files,this,host,port,null,jar,files,null
RemoteEnvironment -> public RemoteEnvironment(String host, int port, String... jarFiles);1519567828;Creates a new RemoteEnvironment that points to the master (JobManager) described by the_given host name and port.__<p>Each program execution will have all the given JAR files in its classpath.__@param host The host name or address of the master (JobManager), where the program should be executed._@param port The port of the master (JobManager), where the program should be executed._@param jarFiles The JAR files with code that needs to be shipped to the cluster. If the program uses_user-defined functions, user-defined input formats, or any libraries, those must be_provided in the JAR files.;public RemoteEnvironment(String host, int port, String... jarFiles) {_		this(host, port, null, jarFiles, null)__	};creates,a,new,remote,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,p,each,program,execution,will,have,all,the,given,jar,files,in,its,classpath,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files;public,remote,environment,string,host,int,port,string,jar,files,this,host,port,null,jar,files,null
RemoteEnvironment -> public RemoteEnvironment(String host, int port, Configuration clientConfig, 			String[] jarFiles, URL[] globalClasspaths);1444312509;Creates a new RemoteEnvironment that points to the master (JobManager) described by the_given host name and port.__<p>Each program execution will have all the given JAR files in its classpath.__@param host The host name or address of the master (JobManager), where the program should be executed._@param port The port of the master (JobManager), where the program should be executed._@param clientConfig The configuration used by the client that connects to the cluster._@param jarFiles The JAR files with code that needs to be shipped to the cluster. If the program uses_user-defined functions, user-defined input formats, or any libraries, those must be_provided in the JAR files._@param globalClasspaths The paths of directories and JAR files that are added to each user code_classloader on all nodes in the cluster. Note that the paths must specify a_protocol (e.g. file://) and be accessible on all nodes (e.g. by means of a NFS share)._The protocol must be supported by the {@link java.net.URLClassLoader}.;public RemoteEnvironment(String host, int port, Configuration clientConfig,_			String[] jarFiles, URL[] globalClasspaths) {_		if (!ExecutionEnvironment.areExplicitEnvironmentsAllowed()) {_			throw new InvalidProgramException(_					"The RemoteEnvironment cannot be instantiated when running in a pre-defined context " +_							"(such as Command Line Client, Scala Shell, or TestEnvironment)")__		}_		if (host == null) {_			throw new NullPointerException("Host must not be null.")__		}_		if (port < 1 || port >= 0xffff) {_			throw new IllegalArgumentException("Port out of range")__		}__		this.host = host__		this.port = port__		this.clientConfiguration = clientConfig == null ? new Configuration() : clientConfig__		if (jarFiles != null) {_			this.jarFiles = new URL[jarFiles.length]__			for (int i = 0_ i < jarFiles.length_ i++) {_				try {_					this.jarFiles[i] = new File(jarFiles[i]).getAbsoluteFile().toURI().toURL()__				} catch (MalformedURLException e) {_					throw new IllegalArgumentException("JAR file path invalid", e)__				}_			}_		}_		else {_			this.jarFiles = null__		}_		this.globalClasspaths = globalClasspaths__	};creates,a,new,remote,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,p,each,program,execution,will,have,all,the,given,jar,files,in,its,classpath,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,client,config,the,configuration,used,by,the,client,that,connects,to,the,cluster,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files,param,global,classpaths,the,paths,of,directories,and,jar,files,that,are,added,to,each,user,code,classloader,on,all,nodes,in,the,cluster,note,that,the,paths,must,specify,a,protocol,e,g,file,and,be,accessible,on,all,nodes,e,g,by,means,of,a,nfs,share,the,protocol,must,be,supported,by,the,link,java,net,urlclass,loader;public,remote,environment,string,host,int,port,configuration,client,config,string,jar,files,url,global,classpaths,if,execution,environment,are,explicit,environments,allowed,throw,new,invalid,program,exception,the,remote,environment,cannot,be,instantiated,when,running,in,a,pre,defined,context,such,as,command,line,client,scala,shell,or,test,environment,if,host,null,throw,new,null,pointer,exception,host,must,not,be,null,if,port,1,port,0xffff,throw,new,illegal,argument,exception,port,out,of,range,this,host,host,this,port,port,this,client,configuration,client,config,null,new,configuration,client,config,if,jar,files,null,this,jar,files,new,url,jar,files,length,for,int,i,0,i,jar,files,length,i,try,this,jar,files,i,new,file,jar,files,i,get,absolute,file,to,uri,to,url,catch,malformed,urlexception,e,throw,new,illegal,argument,exception,jar,file,path,invalid,e,else,this,jar,files,null,this,global,classpaths,global,classpaths
RemoteEnvironment -> public RemoteEnvironment(String host, int port, Configuration clientConfig, 			String[] jarFiles, URL[] globalClasspaths);1454679829;Creates a new RemoteEnvironment that points to the master (JobManager) described by the_given host name and port.__<p>Each program execution will have all the given JAR files in its classpath.__@param host The host name or address of the master (JobManager), where the program should be executed._@param port The port of the master (JobManager), where the program should be executed._@param clientConfig The configuration used by the client that connects to the cluster._@param jarFiles The JAR files with code that needs to be shipped to the cluster. If the program uses_user-defined functions, user-defined input formats, or any libraries, those must be_provided in the JAR files._@param globalClasspaths The paths of directories and JAR files that are added to each user code_classloader on all nodes in the cluster. Note that the paths must specify a_protocol (e.g. file://) and be accessible on all nodes (e.g. by means of a NFS share)._The protocol must be supported by the {@link java.net.URLClassLoader}.;public RemoteEnvironment(String host, int port, Configuration clientConfig,_			String[] jarFiles, URL[] globalClasspaths) {_		if (!ExecutionEnvironment.areExplicitEnvironmentsAllowed()) {_			throw new InvalidProgramException(_					"The RemoteEnvironment cannot be instantiated when running in a pre-defined context " +_							"(such as Command Line Client, Scala Shell, or TestEnvironment)")__		}_		if (host == null) {_			throw new NullPointerException("Host must not be null.")__		}_		if (port < 1 || port >= 0xffff) {_			throw new IllegalArgumentException("Port out of range")__		}__		this.host = host__		this.port = port__		this.clientConfiguration = clientConfig == null ? new Configuration() : clientConfig__		if (jarFiles != null) {_			this.jarFiles = new URL[jarFiles.length]__			for (int i = 0_ i < jarFiles.length_ i++) {_				try {_					this.jarFiles[i] = new File(jarFiles[i]).getAbsoluteFile().toURI().toURL()__				} catch (MalformedURLException e) {_					throw new IllegalArgumentException("JAR file path invalid", e)__				}_			}_		}_		else {_			this.jarFiles = null__		}_		this.globalClasspaths = globalClasspaths__	};creates,a,new,remote,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,p,each,program,execution,will,have,all,the,given,jar,files,in,its,classpath,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,client,config,the,configuration,used,by,the,client,that,connects,to,the,cluster,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files,param,global,classpaths,the,paths,of,directories,and,jar,files,that,are,added,to,each,user,code,classloader,on,all,nodes,in,the,cluster,note,that,the,paths,must,specify,a,protocol,e,g,file,and,be,accessible,on,all,nodes,e,g,by,means,of,a,nfs,share,the,protocol,must,be,supported,by,the,link,java,net,urlclass,loader;public,remote,environment,string,host,int,port,configuration,client,config,string,jar,files,url,global,classpaths,if,execution,environment,are,explicit,environments,allowed,throw,new,invalid,program,exception,the,remote,environment,cannot,be,instantiated,when,running,in,a,pre,defined,context,such,as,command,line,client,scala,shell,or,test,environment,if,host,null,throw,new,null,pointer,exception,host,must,not,be,null,if,port,1,port,0xffff,throw,new,illegal,argument,exception,port,out,of,range,this,host,host,this,port,port,this,client,configuration,client,config,null,new,configuration,client,config,if,jar,files,null,this,jar,files,new,url,jar,files,length,for,int,i,0,i,jar,files,length,i,try,this,jar,files,i,new,file,jar,files,i,get,absolute,file,to,uri,to,url,catch,malformed,urlexception,e,throw,new,illegal,argument,exception,jar,file,path,invalid,e,else,this,jar,files,null,this,global,classpaths,global,classpaths
RemoteEnvironment -> public RemoteEnvironment(String host, int port, Configuration clientConfig, 			String[] jarFiles, URL[] globalClasspaths);1455101486;Creates a new RemoteEnvironment that points to the master (JobManager) described by the_given host name and port.__<p>Each program execution will have all the given JAR files in its classpath.__@param host The host name or address of the master (JobManager), where the program should be executed._@param port The port of the master (JobManager), where the program should be executed._@param clientConfig The configuration used by the client that connects to the cluster._@param jarFiles The JAR files with code that needs to be shipped to the cluster. If the program uses_user-defined functions, user-defined input formats, or any libraries, those must be_provided in the JAR files._@param globalClasspaths The paths of directories and JAR files that are added to each user code_classloader on all nodes in the cluster. Note that the paths must specify a_protocol (e.g. file://) and be accessible on all nodes (e.g. by means of a NFS share)._The protocol must be supported by the {@link java.net.URLClassLoader}.;public RemoteEnvironment(String host, int port, Configuration clientConfig,_			String[] jarFiles, URL[] globalClasspaths) {_		if (!ExecutionEnvironment.areExplicitEnvironmentsAllowed()) {_			throw new InvalidProgramException(_					"The RemoteEnvironment cannot be instantiated when running in a pre-defined context " +_							"(such as Command Line Client, Scala Shell, or TestEnvironment)")__		}_		if (host == null) {_			throw new NullPointerException("Host must not be null.")__		}_		if (port < 1 || port >= 0xffff) {_			throw new IllegalArgumentException("Port out of range")__		}__		this.host = host__		this.port = port__		this.clientConfiguration = clientConfig == null ? new Configuration() : clientConfig__		if (jarFiles != null) {_			this.jarFiles = new URL[jarFiles.length]__			for (int i = 0_ i < jarFiles.length_ i++) {_				try {_					this.jarFiles[i] = new File(jarFiles[i]).getAbsoluteFile().toURI().toURL()__				} catch (MalformedURLException e) {_					throw new IllegalArgumentException("JAR file path invalid", e)__				}_			}_		}_		else {_			this.jarFiles = null__		}_		this.globalClasspaths = globalClasspaths__	};creates,a,new,remote,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,p,each,program,execution,will,have,all,the,given,jar,files,in,its,classpath,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,client,config,the,configuration,used,by,the,client,that,connects,to,the,cluster,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files,param,global,classpaths,the,paths,of,directories,and,jar,files,that,are,added,to,each,user,code,classloader,on,all,nodes,in,the,cluster,note,that,the,paths,must,specify,a,protocol,e,g,file,and,be,accessible,on,all,nodes,e,g,by,means,of,a,nfs,share,the,protocol,must,be,supported,by,the,link,java,net,urlclass,loader;public,remote,environment,string,host,int,port,configuration,client,config,string,jar,files,url,global,classpaths,if,execution,environment,are,explicit,environments,allowed,throw,new,invalid,program,exception,the,remote,environment,cannot,be,instantiated,when,running,in,a,pre,defined,context,such,as,command,line,client,scala,shell,or,test,environment,if,host,null,throw,new,null,pointer,exception,host,must,not,be,null,if,port,1,port,0xffff,throw,new,illegal,argument,exception,port,out,of,range,this,host,host,this,port,port,this,client,configuration,client,config,null,new,configuration,client,config,if,jar,files,null,this,jar,files,new,url,jar,files,length,for,int,i,0,i,jar,files,length,i,try,this,jar,files,i,new,file,jar,files,i,get,absolute,file,to,uri,to,url,catch,malformed,urlexception,e,throw,new,illegal,argument,exception,jar,file,path,invalid,e,else,this,jar,files,null,this,global,classpaths,global,classpaths
RemoteEnvironment -> public RemoteEnvironment(String host, int port, Configuration clientConfig, 			String[] jarFiles, URL[] globalClasspaths);1461591030;Creates a new RemoteEnvironment that points to the master (JobManager) described by the_given host name and port.__<p>Each program execution will have all the given JAR files in its classpath.__@param host The host name or address of the master (JobManager), where the program should be executed._@param port The port of the master (JobManager), where the program should be executed._@param clientConfig The configuration used by the client that connects to the cluster._@param jarFiles The JAR files with code that needs to be shipped to the cluster. If the program uses_user-defined functions, user-defined input formats, or any libraries, those must be_provided in the JAR files._@param globalClasspaths The paths of directories and JAR files that are added to each user code_classloader on all nodes in the cluster. Note that the paths must specify a_protocol (e.g. file://) and be accessible on all nodes (e.g. by means of a NFS share)._The protocol must be supported by the {@link java.net.URLClassLoader}.;public RemoteEnvironment(String host, int port, Configuration clientConfig,_			String[] jarFiles, URL[] globalClasspaths) {_		if (!ExecutionEnvironment.areExplicitEnvironmentsAllowed()) {_			throw new InvalidProgramException(_					"The RemoteEnvironment cannot be instantiated when running in a pre-defined context " +_							"(such as Command Line Client, Scala Shell, or TestEnvironment)")__		}_		if (host == null) {_			throw new NullPointerException("Host must not be null.")__		}_		if (port < 1 || port >= 0xffff) {_			throw new IllegalArgumentException("Port out of range")__		}__		this.host = host__		this.port = port__		this.clientConfiguration = clientConfig == null ? new Configuration() : clientConfig__		if (jarFiles != null) {_			this.jarFiles = new ArrayList<>(jarFiles.length)__			for (String jarFile : jarFiles) {_				try {_					this.jarFiles.add(new File(jarFile).getAbsoluteFile().toURI().toURL())__				} catch (MalformedURLException e) {_					throw new IllegalArgumentException("JAR file path invalid", e)__				}_			}_		}_		else {_			this.jarFiles = Collections.emptyList()__		}__		if (globalClasspaths == null) {_			this.globalClasspaths = Collections.emptyList()__		} else {_			this.globalClasspaths = Arrays.asList(globalClasspaths)__		}_	};creates,a,new,remote,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,p,each,program,execution,will,have,all,the,given,jar,files,in,its,classpath,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,client,config,the,configuration,used,by,the,client,that,connects,to,the,cluster,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files,param,global,classpaths,the,paths,of,directories,and,jar,files,that,are,added,to,each,user,code,classloader,on,all,nodes,in,the,cluster,note,that,the,paths,must,specify,a,protocol,e,g,file,and,be,accessible,on,all,nodes,e,g,by,means,of,a,nfs,share,the,protocol,must,be,supported,by,the,link,java,net,urlclass,loader;public,remote,environment,string,host,int,port,configuration,client,config,string,jar,files,url,global,classpaths,if,execution,environment,are,explicit,environments,allowed,throw,new,invalid,program,exception,the,remote,environment,cannot,be,instantiated,when,running,in,a,pre,defined,context,such,as,command,line,client,scala,shell,or,test,environment,if,host,null,throw,new,null,pointer,exception,host,must,not,be,null,if,port,1,port,0xffff,throw,new,illegal,argument,exception,port,out,of,range,this,host,host,this,port,port,this,client,configuration,client,config,null,new,configuration,client,config,if,jar,files,null,this,jar,files,new,array,list,jar,files,length,for,string,jar,file,jar,files,try,this,jar,files,add,new,file,jar,file,get,absolute,file,to,uri,to,url,catch,malformed,urlexception,e,throw,new,illegal,argument,exception,jar,file,path,invalid,e,else,this,jar,files,collections,empty,list,if,global,classpaths,null,this,global,classpaths,collections,empty,list,else,this,global,classpaths,arrays,as,list,global,classpaths
RemoteEnvironment -> public RemoteEnvironment(String host, int port, Configuration clientConfig, 			String[] jarFiles, URL[] globalClasspaths);1500974867;Creates a new RemoteEnvironment that points to the master (JobManager) described by the_given host name and port.__<p>Each program execution will have all the given JAR files in its classpath.__@param host The host name or address of the master (JobManager), where the program should be executed._@param port The port of the master (JobManager), where the program should be executed._@param clientConfig The configuration used by the client that connects to the cluster._@param jarFiles The JAR files with code that needs to be shipped to the cluster. If the program uses_user-defined functions, user-defined input formats, or any libraries, those must be_provided in the JAR files._@param globalClasspaths The paths of directories and JAR files that are added to each user code_classloader on all nodes in the cluster. Note that the paths must specify a_protocol (e.g. file://) and be accessible on all nodes (e.g. by means of a NFS share)._The protocol must be supported by the {@link java.net.URLClassLoader}.;public RemoteEnvironment(String host, int port, Configuration clientConfig,_			String[] jarFiles, URL[] globalClasspaths) {_		if (!ExecutionEnvironment.areExplicitEnvironmentsAllowed()) {_			throw new InvalidProgramException(_					"The RemoteEnvironment cannot be instantiated when running in a pre-defined context " +_							"(such as Command Line Client, Scala Shell, or TestEnvironment)")__		}_		if (host == null) {_			throw new NullPointerException("Host must not be null.")__		}_		if (port < 1 || port >= 0xffff) {_			throw new IllegalArgumentException("Port out of range")__		}__		this.host = host__		this.port = port__		this.clientConfiguration = clientConfig == null ? new Configuration() : clientConfig__		if (jarFiles != null) {_			this.jarFiles = new ArrayList<>(jarFiles.length)__			for (String jarFile : jarFiles) {_				try {_					this.jarFiles.add(new File(jarFile).getAbsoluteFile().toURI().toURL())__				} catch (MalformedURLException e) {_					throw new IllegalArgumentException("JAR file path invalid", e)__				}_			}_		}_		else {_			this.jarFiles = Collections.emptyList()__		}__		if (globalClasspaths == null) {_			this.globalClasspaths = Collections.emptyList()__		} else {_			this.globalClasspaths = Arrays.asList(globalClasspaths)__		}_	};creates,a,new,remote,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,p,each,program,execution,will,have,all,the,given,jar,files,in,its,classpath,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,client,config,the,configuration,used,by,the,client,that,connects,to,the,cluster,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files,param,global,classpaths,the,paths,of,directories,and,jar,files,that,are,added,to,each,user,code,classloader,on,all,nodes,in,the,cluster,note,that,the,paths,must,specify,a,protocol,e,g,file,and,be,accessible,on,all,nodes,e,g,by,means,of,a,nfs,share,the,protocol,must,be,supported,by,the,link,java,net,urlclass,loader;public,remote,environment,string,host,int,port,configuration,client,config,string,jar,files,url,global,classpaths,if,execution,environment,are,explicit,environments,allowed,throw,new,invalid,program,exception,the,remote,environment,cannot,be,instantiated,when,running,in,a,pre,defined,context,such,as,command,line,client,scala,shell,or,test,environment,if,host,null,throw,new,null,pointer,exception,host,must,not,be,null,if,port,1,port,0xffff,throw,new,illegal,argument,exception,port,out,of,range,this,host,host,this,port,port,this,client,configuration,client,config,null,new,configuration,client,config,if,jar,files,null,this,jar,files,new,array,list,jar,files,length,for,string,jar,file,jar,files,try,this,jar,files,add,new,file,jar,file,get,absolute,file,to,uri,to,url,catch,malformed,urlexception,e,throw,new,illegal,argument,exception,jar,file,path,invalid,e,else,this,jar,files,collections,empty,list,if,global,classpaths,null,this,global,classpaths,collections,empty,list,else,this,global,classpaths,arrays,as,list,global,classpaths
RemoteEnvironment -> public RemoteEnvironment(String host, int port, Configuration clientConfig, 			String[] jarFiles, URL[] globalClasspaths);1519567828;Creates a new RemoteEnvironment that points to the master (JobManager) described by the_given host name and port.__<p>Each program execution will have all the given JAR files in its classpath.__@param host The host name or address of the master (JobManager), where the program should be executed._@param port The port of the master (JobManager), where the program should be executed._@param clientConfig The configuration used by the client that connects to the cluster._@param jarFiles The JAR files with code that needs to be shipped to the cluster. If the program uses_user-defined functions, user-defined input formats, or any libraries, those must be_provided in the JAR files._@param globalClasspaths The paths of directories and JAR files that are added to each user code_classloader on all nodes in the cluster. Note that the paths must specify a_protocol (e.g. file://) and be accessible on all nodes (e.g. by means of a NFS share)._The protocol must be supported by the {@link java.net.URLClassLoader}.;public RemoteEnvironment(String host, int port, Configuration clientConfig,_			String[] jarFiles, URL[] globalClasspaths) {_		if (!ExecutionEnvironment.areExplicitEnvironmentsAllowed()) {_			throw new InvalidProgramException(_					"The RemoteEnvironment cannot be instantiated when running in a pre-defined context " +_							"(such as Command Line Client, Scala Shell, or TestEnvironment)")__		}_		if (host == null) {_			throw new NullPointerException("Host must not be null.")__		}_		if (port < 1 || port >= 0xffff) {_			throw new IllegalArgumentException("Port out of range")__		}__		this.host = host__		this.port = port__		this.clientConfiguration = clientConfig == null ? new Configuration() : clientConfig__		if (jarFiles != null) {_			this.jarFiles = new ArrayList<>(jarFiles.length)__			for (String jarFile : jarFiles) {_				try {_					this.jarFiles.add(new File(jarFile).getAbsoluteFile().toURI().toURL())__				} catch (MalformedURLException e) {_					throw new IllegalArgumentException("JAR file path invalid", e)__				}_			}_		}_		else {_			this.jarFiles = Collections.emptyList()__		}__		if (globalClasspaths == null) {_			this.globalClasspaths = Collections.emptyList()__		} else {_			this.globalClasspaths = Arrays.asList(globalClasspaths)__		}_	};creates,a,new,remote,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,p,each,program,execution,will,have,all,the,given,jar,files,in,its,classpath,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,client,config,the,configuration,used,by,the,client,that,connects,to,the,cluster,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files,param,global,classpaths,the,paths,of,directories,and,jar,files,that,are,added,to,each,user,code,classloader,on,all,nodes,in,the,cluster,note,that,the,paths,must,specify,a,protocol,e,g,file,and,be,accessible,on,all,nodes,e,g,by,means,of,a,nfs,share,the,protocol,must,be,supported,by,the,link,java,net,urlclass,loader;public,remote,environment,string,host,int,port,configuration,client,config,string,jar,files,url,global,classpaths,if,execution,environment,are,explicit,environments,allowed,throw,new,invalid,program,exception,the,remote,environment,cannot,be,instantiated,when,running,in,a,pre,defined,context,such,as,command,line,client,scala,shell,or,test,environment,if,host,null,throw,new,null,pointer,exception,host,must,not,be,null,if,port,1,port,0xffff,throw,new,illegal,argument,exception,port,out,of,range,this,host,host,this,port,port,this,client,configuration,client,config,null,new,configuration,client,config,if,jar,files,null,this,jar,files,new,array,list,jar,files,length,for,string,jar,file,jar,files,try,this,jar,files,add,new,file,jar,file,get,absolute,file,to,uri,to,url,catch,malformed,urlexception,e,throw,new,illegal,argument,exception,jar,file,path,invalid,e,else,this,jar,files,collections,empty,list,if,global,classpaths,null,this,global,classpaths,collections,empty,list,else,this,global,classpaths,arrays,as,list,global,classpaths
RemoteEnvironment -> public RemoteEnvironment(String host, int port, Configuration clientConfig, String[] jarFiles);1444312509;Creates a new RemoteEnvironment that points to the master (JobManager) described by the_given host name and port.__<p>Each program execution will have all the given JAR files in its classpath.__@param host The host name or address of the master (JobManager), where the program should be executed._@param port The port of the master (JobManager), where the program should be executed._@param clientConfig The configuration used by the client that connects to the cluster._@param jarFiles The JAR files with code that needs to be shipped to the cluster. If the program uses_user-defined functions, user-defined input formats, or any libraries, those must be_provided in the JAR files.;public RemoteEnvironment(String host, int port, Configuration clientConfig, String[] jarFiles) {_		this(host, port, clientConfig, jarFiles, null)__	};creates,a,new,remote,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,p,each,program,execution,will,have,all,the,given,jar,files,in,its,classpath,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,client,config,the,configuration,used,by,the,client,that,connects,to,the,cluster,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files;public,remote,environment,string,host,int,port,configuration,client,config,string,jar,files,this,host,port,client,config,jar,files,null
RemoteEnvironment -> public RemoteEnvironment(String host, int port, Configuration clientConfig, String[] jarFiles);1454679829;Creates a new RemoteEnvironment that points to the master (JobManager) described by the_given host name and port.__<p>Each program execution will have all the given JAR files in its classpath.__@param host The host name or address of the master (JobManager), where the program should be executed._@param port The port of the master (JobManager), where the program should be executed._@param clientConfig The configuration used by the client that connects to the cluster._@param jarFiles The JAR files with code that needs to be shipped to the cluster. If the program uses_user-defined functions, user-defined input formats, or any libraries, those must be_provided in the JAR files.;public RemoteEnvironment(String host, int port, Configuration clientConfig, String[] jarFiles) {_		this(host, port, clientConfig, jarFiles, null)__	};creates,a,new,remote,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,p,each,program,execution,will,have,all,the,given,jar,files,in,its,classpath,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,client,config,the,configuration,used,by,the,client,that,connects,to,the,cluster,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files;public,remote,environment,string,host,int,port,configuration,client,config,string,jar,files,this,host,port,client,config,jar,files,null
RemoteEnvironment -> public RemoteEnvironment(String host, int port, Configuration clientConfig, String[] jarFiles);1455101486;Creates a new RemoteEnvironment that points to the master (JobManager) described by the_given host name and port.__<p>Each program execution will have all the given JAR files in its classpath.__@param host The host name or address of the master (JobManager), where the program should be executed._@param port The port of the master (JobManager), where the program should be executed._@param clientConfig The configuration used by the client that connects to the cluster._@param jarFiles The JAR files with code that needs to be shipped to the cluster. If the program uses_user-defined functions, user-defined input formats, or any libraries, those must be_provided in the JAR files.;public RemoteEnvironment(String host, int port, Configuration clientConfig, String[] jarFiles) {_		this(host, port, clientConfig, jarFiles, null)__	};creates,a,new,remote,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,p,each,program,execution,will,have,all,the,given,jar,files,in,its,classpath,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,client,config,the,configuration,used,by,the,client,that,connects,to,the,cluster,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files;public,remote,environment,string,host,int,port,configuration,client,config,string,jar,files,this,host,port,client,config,jar,files,null
RemoteEnvironment -> public RemoteEnvironment(String host, int port, Configuration clientConfig, String[] jarFiles);1461591030;Creates a new RemoteEnvironment that points to the master (JobManager) described by the_given host name and port.__<p>Each program execution will have all the given JAR files in its classpath.__@param host The host name or address of the master (JobManager), where the program should be executed._@param port The port of the master (JobManager), where the program should be executed._@param clientConfig The configuration used by the client that connects to the cluster._@param jarFiles The JAR files with code that needs to be shipped to the cluster. If the program uses_user-defined functions, user-defined input formats, or any libraries, those must be_provided in the JAR files.;public RemoteEnvironment(String host, int port, Configuration clientConfig, String[] jarFiles) {_		this(host, port, clientConfig, jarFiles, null)__	};creates,a,new,remote,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,p,each,program,execution,will,have,all,the,given,jar,files,in,its,classpath,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,client,config,the,configuration,used,by,the,client,that,connects,to,the,cluster,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files;public,remote,environment,string,host,int,port,configuration,client,config,string,jar,files,this,host,port,client,config,jar,files,null
RemoteEnvironment -> public RemoteEnvironment(String host, int port, Configuration clientConfig, String[] jarFiles);1500974867;Creates a new RemoteEnvironment that points to the master (JobManager) described by the_given host name and port.__<p>Each program execution will have all the given JAR files in its classpath.__@param host The host name or address of the master (JobManager), where the program should be executed._@param port The port of the master (JobManager), where the program should be executed._@param clientConfig The configuration used by the client that connects to the cluster._@param jarFiles The JAR files with code that needs to be shipped to the cluster. If the program uses_user-defined functions, user-defined input formats, or any libraries, those must be_provided in the JAR files.;public RemoteEnvironment(String host, int port, Configuration clientConfig, String[] jarFiles) {_		this(host, port, clientConfig, jarFiles, null)__	};creates,a,new,remote,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,p,each,program,execution,will,have,all,the,given,jar,files,in,its,classpath,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,client,config,the,configuration,used,by,the,client,that,connects,to,the,cluster,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files;public,remote,environment,string,host,int,port,configuration,client,config,string,jar,files,this,host,port,client,config,jar,files,null
RemoteEnvironment -> public RemoteEnvironment(String host, int port, Configuration clientConfig, String[] jarFiles);1519567828;Creates a new RemoteEnvironment that points to the master (JobManager) described by the_given host name and port.__<p>Each program execution will have all the given JAR files in its classpath.__@param host The host name or address of the master (JobManager), where the program should be executed._@param port The port of the master (JobManager), where the program should be executed._@param clientConfig The configuration used by the client that connects to the cluster._@param jarFiles The JAR files with code that needs to be shipped to the cluster. If the program uses_user-defined functions, user-defined input formats, or any libraries, those must be_provided in the JAR files.;public RemoteEnvironment(String host, int port, Configuration clientConfig, String[] jarFiles) {_		this(host, port, clientConfig, jarFiles, null)__	};creates,a,new,remote,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,p,each,program,execution,will,have,all,the,given,jar,files,in,its,classpath,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,client,config,the,configuration,used,by,the,client,that,connects,to,the,cluster,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files;public,remote,environment,string,host,int,port,configuration,client,config,string,jar,files,this,host,port,client,config,jar,files,null
