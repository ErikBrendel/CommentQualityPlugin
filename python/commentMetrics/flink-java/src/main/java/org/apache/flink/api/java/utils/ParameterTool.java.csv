# id;timestamp;commentText;codeText;commentWords;codeWords
ParameterTool -> public void createPropertiesFile(String pathToFile) throws IOException;1431691975;Create a properties file with all the known parameters (call after the last get*() call)._Set the default value, if available.__Use this method to create a properties file skeleton.__@param pathToFile Location of the default properties file.;public void createPropertiesFile(String pathToFile) throws IOException {_		createPropertiesFile(pathToFile, true)__	};create,a,properties,file,with,all,the,known,parameters,call,after,the,last,get,call,set,the,default,value,if,available,use,this,method,to,create,a,properties,file,skeleton,param,path,to,file,location,of,the,default,properties,file;public,void,create,properties,file,string,path,to,file,throws,ioexception,create,properties,file,path,to,file,true
ParameterTool -> public void createPropertiesFile(String pathToFile) throws IOException;1433939202;Create a properties file with all the known parameters (call after the last get*() call)._Set the default value, if available.__Use this method to create a properties file skeleton.__@param pathToFile Location of the default properties file.;public void createPropertiesFile(String pathToFile) throws IOException {_		createPropertiesFile(pathToFile, true)__	};create,a,properties,file,with,all,the,known,parameters,call,after,the,last,get,call,set,the,default,value,if,available,use,this,method,to,create,a,properties,file,skeleton,param,path,to,file,location,of,the,default,properties,file;public,void,create,properties,file,string,path,to,file,throws,ioexception,create,properties,file,path,to,file,true
ParameterTool -> public void createPropertiesFile(String pathToFile) throws IOException;1435067318;Create a properties file with all the known parameters (call after the last get*() call)._Set the default value, if available.__Use this method to create a properties file skeleton.__@param pathToFile Location of the default properties file.;public void createPropertiesFile(String pathToFile) throws IOException {_		createPropertiesFile(pathToFile, true)__	};create,a,properties,file,with,all,the,known,parameters,call,after,the,last,get,call,set,the,default,value,if,available,use,this,method,to,create,a,properties,file,skeleton,param,path,to,file,location,of,the,default,properties,file;public,void,create,properties,file,string,path,to,file,throws,ioexception,create,properties,file,path,to,file,true
ParameterTool -> public void createPropertiesFile(String pathToFile) throws IOException;1437494296;Create a properties file with all the known parameters (call after the last get*() call)._Set the default value, if available.__Use this method to create a properties file skeleton.__@param pathToFile Location of the default properties file.;public void createPropertiesFile(String pathToFile) throws IOException {_		createPropertiesFile(pathToFile, true)__	};create,a,properties,file,with,all,the,known,parameters,call,after,the,last,get,call,set,the,default,value,if,available,use,this,method,to,create,a,properties,file,skeleton,param,path,to,file,location,of,the,default,properties,file;public,void,create,properties,file,string,path,to,file,throws,ioexception,create,properties,file,path,to,file,true
ParameterTool -> public void createPropertiesFile(String pathToFile) throws IOException;1438620487;Create a properties file with all the known parameters (call after the last get*() call)._Set the default value, if available.__Use this method to create a properties file skeleton.__@param pathToFile Location of the default properties file.;public void createPropertiesFile(String pathToFile) throws IOException {_		createPropertiesFile(pathToFile, true)__	};create,a,properties,file,with,all,the,known,parameters,call,after,the,last,get,call,set,the,default,value,if,available,use,this,method,to,create,a,properties,file,skeleton,param,path,to,file,location,of,the,default,properties,file;public,void,create,properties,file,string,path,to,file,throws,ioexception,create,properties,file,path,to,file,true
ParameterTool -> public void createPropertiesFile(String pathToFile) throws IOException;1441981413;Create a properties file with all the known parameters (call after the last get*() call)._Set the default value, if available.__Use this method to create a properties file skeleton.__@param pathToFile Location of the default properties file.;public void createPropertiesFile(String pathToFile) throws IOException {_		createPropertiesFile(pathToFile, true)__	};create,a,properties,file,with,all,the,known,parameters,call,after,the,last,get,call,set,the,default,value,if,available,use,this,method,to,create,a,properties,file,skeleton,param,path,to,file,location,of,the,default,properties,file;public,void,create,properties,file,string,path,to,file,throws,ioexception,create,properties,file,path,to,file,true
ParameterTool -> public void createPropertiesFile(String pathToFile) throws IOException;1443123598;Create a properties file with all the known parameters (call after the last get*() call)._Set the default value, if available.__Use this method to create a properties file skeleton.__@param pathToFile Location of the default properties file.;public void createPropertiesFile(String pathToFile) throws IOException {_		createPropertiesFile(pathToFile, true)__	};create,a,properties,file,with,all,the,known,parameters,call,after,the,last,get,call,set,the,default,value,if,available,use,this,method,to,create,a,properties,file,skeleton,param,path,to,file,location,of,the,default,properties,file;public,void,create,properties,file,string,path,to,file,throws,ioexception,create,properties,file,path,to,file,true
ParameterTool -> public void createPropertiesFile(String pathToFile) throws IOException;1454679829;Create a properties file with all the known parameters (call after the last get*() call)._Set the default value, if available.__Use this method to create a properties file skeleton.__@param pathToFile Location of the default properties file.;public void createPropertiesFile(String pathToFile) throws IOException {_		createPropertiesFile(pathToFile, true)__	};create,a,properties,file,with,all,the,known,parameters,call,after,the,last,get,call,set,the,default,value,if,available,use,this,method,to,create,a,properties,file,skeleton,param,path,to,file,location,of,the,default,properties,file;public,void,create,properties,file,string,path,to,file,throws,ioexception,create,properties,file,path,to,file,true
ParameterTool -> public void createPropertiesFile(String pathToFile) throws IOException;1455101486;Create a properties file with all the known parameters (call after the last get*() call)._Set the default value, if available.__Use this method to create a properties file skeleton.__@param pathToFile Location of the default properties file.;public void createPropertiesFile(String pathToFile) throws IOException {_		createPropertiesFile(pathToFile, true)__	};create,a,properties,file,with,all,the,known,parameters,call,after,the,last,get,call,set,the,default,value,if,available,use,this,method,to,create,a,properties,file,skeleton,param,path,to,file,location,of,the,default,properties,file;public,void,create,properties,file,string,path,to,file,throws,ioexception,create,properties,file,path,to,file,true
ParameterTool -> public void createPropertiesFile(String pathToFile) throws IOException;1462899491;Create a properties file with all the known parameters (call after the last get*() call)._Set the default value, if available.__Use this method to create a properties file skeleton.__@param pathToFile Location of the default properties file.;public void createPropertiesFile(String pathToFile) throws IOException {_		createPropertiesFile(pathToFile, true)__	};create,a,properties,file,with,all,the,known,parameters,call,after,the,last,get,call,set,the,default,value,if,available,use,this,method,to,create,a,properties,file,skeleton,param,path,to,file,location,of,the,default,properties,file;public,void,create,properties,file,string,path,to,file,throws,ioexception,create,properties,file,path,to,file,true
ParameterTool -> public void createPropertiesFile(String pathToFile) throws IOException;1465462613;Create a properties file with all the known parameters (call after the last get*() call)._Set the default value, if available.__Use this method to create a properties file skeleton.__@param pathToFile Location of the default properties file.;public void createPropertiesFile(String pathToFile) throws IOException {_		createPropertiesFile(pathToFile, true)__	};create,a,properties,file,with,all,the,known,parameters,call,after,the,last,get,call,set,the,default,value,if,available,use,this,method,to,create,a,properties,file,skeleton,param,path,to,file,location,of,the,default,properties,file;public,void,create,properties,file,string,path,to,file,throws,ioexception,create,properties,file,path,to,file,true
ParameterTool -> public void createPropertiesFile(String pathToFile) throws IOException;1473329066;Create a properties file with all the known parameters (call after the last get*() call)._Set the default value, if available.__Use this method to create a properties file skeleton.__@param pathToFile Location of the default properties file.;public void createPropertiesFile(String pathToFile) throws IOException {_		createPropertiesFile(pathToFile, true)__	};create,a,properties,file,with,all,the,known,parameters,call,after,the,last,get,call,set,the,default,value,if,available,use,this,method,to,create,a,properties,file,skeleton,param,path,to,file,location,of,the,default,properties,file;public,void,create,properties,file,string,path,to,file,throws,ioexception,create,properties,file,path,to,file,true
ParameterTool -> public void createPropertiesFile(String pathToFile) throws IOException;1474022085;Create a properties file with all the known parameters (call after the last get*() call)._Set the default value, if available.__Use this method to create a properties file skeleton.__@param pathToFile Location of the default properties file.;public void createPropertiesFile(String pathToFile) throws IOException {_		createPropertiesFile(pathToFile, true)__	};create,a,properties,file,with,all,the,known,parameters,call,after,the,last,get,call,set,the,default,value,if,available,use,this,method,to,create,a,properties,file,skeleton,param,path,to,file,location,of,the,default,properties,file;public,void,create,properties,file,string,path,to,file,throws,ioexception,create,properties,file,path,to,file,true
ParameterTool -> public void createPropertiesFile(String pathToFile) throws IOException;1474626798;Create a properties file with all the known parameters (call after the last get*() call)._Set the default value, if available.__Use this method to create a properties file skeleton.__@param pathToFile Location of the default properties file.;public void createPropertiesFile(String pathToFile) throws IOException {_		createPropertiesFile(pathToFile, true)__	};create,a,properties,file,with,all,the,known,parameters,call,after,the,last,get,call,set,the,default,value,if,available,use,this,method,to,create,a,properties,file,skeleton,param,path,to,file,location,of,the,default,properties,file;public,void,create,properties,file,string,path,to,file,throws,ioexception,create,properties,file,path,to,file,true
ParameterTool -> public void createPropertiesFile(String pathToFile) throws IOException;1474626882;Create a properties file with all the known parameters (call after the last get*() call)._Set the default value, if available.__Use this method to create a properties file skeleton.__@param pathToFile Location of the default properties file.;public void createPropertiesFile(String pathToFile) throws IOException {_		createPropertiesFile(pathToFile, true)__	};create,a,properties,file,with,all,the,known,parameters,call,after,the,last,get,call,set,the,default,value,if,available,use,this,method,to,create,a,properties,file,skeleton,param,path,to,file,location,of,the,default,properties,file;public,void,create,properties,file,string,path,to,file,throws,ioexception,create,properties,file,path,to,file,true
ParameterTool -> public void createPropertiesFile(String pathToFile) throws IOException;1478107885;Create a properties file with all the known parameters (call after the last get*() call)._Set the default value, if available.__Use this method to create a properties file skeleton.__@param pathToFile Location of the default properties file.;public void createPropertiesFile(String pathToFile) throws IOException {_		createPropertiesFile(pathToFile, true)__	};create,a,properties,file,with,all,the,known,parameters,call,after,the,last,get,call,set,the,default,value,if,available,use,this,method,to,create,a,properties,file,skeleton,param,path,to,file,location,of,the,default,properties,file;public,void,create,properties,file,string,path,to,file,throws,ioexception,create,properties,file,path,to,file,true
ParameterTool -> public void createPropertiesFile(String pathToFile) throws IOException;1499777482;Create a properties file with all the known parameters (call after the last get*() call)._Set the default value, if available.__Use this method to create a properties file skeleton.__@param pathToFile Location of the default properties file.;public void createPropertiesFile(String pathToFile) throws IOException {_		createPropertiesFile(pathToFile, true)__	};create,a,properties,file,with,all,the,known,parameters,call,after,the,last,get,call,set,the,default,value,if,available,use,this,method,to,create,a,properties,file,skeleton,param,path,to,file,location,of,the,default,properties,file;public,void,create,properties,file,string,path,to,file,throws,ioexception,create,properties,file,path,to,file,true
ParameterTool -> public void createPropertiesFile(String pathToFile) throws IOException;1500387265;Create a properties file with all the known parameters (call after the last get*() call)._Set the default value, if available.__<p>Use this method to create a properties file skeleton.__@param pathToFile Location of the default properties file.;public void createPropertiesFile(String pathToFile) throws IOException {_		createPropertiesFile(pathToFile, true)__	};create,a,properties,file,with,all,the,known,parameters,call,after,the,last,get,call,set,the,default,value,if,available,p,use,this,method,to,create,a,properties,file,skeleton,param,path,to,file,location,of,the,default,properties,file;public,void,create,properties,file,string,path,to,file,throws,ioexception,create,properties,file,path,to,file,true
ParameterTool -> public void createPropertiesFile(String pathToFile) throws IOException;1505831007;Create a properties file with all the known parameters (call after the last get*() call)._Set the default value, if available.__<p>Use this method to create a properties file skeleton.__@param pathToFile Location of the default properties file.;public void createPropertiesFile(String pathToFile) throws IOException {_		createPropertiesFile(pathToFile, true)__	};create,a,properties,file,with,all,the,known,parameters,call,after,the,last,get,call,set,the,default,value,if,available,p,use,this,method,to,create,a,properties,file,skeleton,param,path,to,file,location,of,the,default,properties,file;public,void,create,properties,file,string,path,to,file,throws,ioexception,create,properties,file,path,to,file,true
ParameterTool -> public void createPropertiesFile(String pathToFile) throws IOException;1506499511;Create a properties file with all the known parameters (call after the last get*() call)._Set the default value, if available.__<p>Use this method to create a properties file skeleton.__@param pathToFile Location of the default properties file.;public void createPropertiesFile(String pathToFile) throws IOException {_		createPropertiesFile(pathToFile, true)__	};create,a,properties,file,with,all,the,known,parameters,call,after,the,last,get,call,set,the,default,value,if,available,p,use,this,method,to,create,a,properties,file,skeleton,param,path,to,file,location,of,the,default,properties,file;public,void,create,properties,file,string,path,to,file,throws,ioexception,create,properties,file,path,to,file,true
ParameterTool -> public void createPropertiesFile(String pathToFile) throws IOException;1511189418;Create a properties file with all the known parameters (call after the last get*() call)._Set the default value, if available.__<p>Use this method to create a properties file skeleton.__@param pathToFile Location of the default properties file.;public void createPropertiesFile(String pathToFile) throws IOException {_		createPropertiesFile(pathToFile, true)__	};create,a,properties,file,with,all,the,known,parameters,call,after,the,last,get,call,set,the,default,value,if,available,p,use,this,method,to,create,a,properties,file,skeleton,param,path,to,file,location,of,the,default,properties,file;public,void,create,properties,file,string,path,to,file,throws,ioexception,create,properties,file,path,to,file,true
ParameterTool -> public void createPropertiesFile(String pathToFile) throws IOException;1511966704;Create a properties file with all the known parameters (call after the last get*() call)._Set the default value, if available.__<p>Use this method to create a properties file skeleton.__@param pathToFile Location of the default properties file.;public void createPropertiesFile(String pathToFile) throws IOException {_		createPropertiesFile(pathToFile, true)__	};create,a,properties,file,with,all,the,known,parameters,call,after,the,last,get,call,set,the,default,value,if,available,p,use,this,method,to,create,a,properties,file,skeleton,param,path,to,file,location,of,the,default,properties,file;public,void,create,properties,file,string,path,to,file,throws,ioexception,create,properties,file,path,to,file,true
ParameterTool -> public void createPropertiesFile(String pathToFile) throws IOException;1539096710;Create a properties file with all the known parameters (call after the last get*() call)._Set the default value, if available.__<p>Use this method to create a properties file skeleton.__@param pathToFile Location of the default properties file.;public void createPropertiesFile(String pathToFile) throws IOException {_		createPropertiesFile(pathToFile, true)__	};create,a,properties,file,with,all,the,known,parameters,call,after,the,last,get,call,set,the,default,value,if,available,p,use,this,method,to,create,a,properties,file,skeleton,param,path,to,file,location,of,the,default,properties,file;public,void,create,properties,file,string,path,to,file,throws,ioexception,create,properties,file,path,to,file,true
ParameterTool -> public void createPropertiesFile(String pathToFile) throws IOException;1539096710;Create a properties file with all the known parameters (call after the last get*() call)._Set the default value, if available.__<p>Use this method to create a properties file skeleton.__@param pathToFile Location of the default properties file.;public void createPropertiesFile(String pathToFile) throws IOException {_		createPropertiesFile(pathToFile, true)__	};create,a,properties,file,with,all,the,known,parameters,call,after,the,last,get,call,set,the,default,value,if,available,p,use,this,method,to,create,a,properties,file,skeleton,param,path,to,file,location,of,the,default,properties,file;public,void,create,properties,file,string,path,to,file,throws,ioexception,create,properties,file,path,to,file,true
ParameterTool -> public double getDouble(String key, double defaultValue);1441981413;Returns the Double value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Double.;public double getDouble(String key, double defaultValue) {_		addToDefaults(key, Double.toString(defaultValue))__		String value = get(key)__		if(value == null) {_			return defaultValue__		} else {_			return Double.valueOf(value)__		}_	};returns,the,double,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,double;public,double,get,double,string,key,double,default,value,add,to,defaults,key,double,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,double,value,of,value
ParameterTool -> public double getDouble(String key, double defaultValue);1443123598;Returns the Double value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Double.;public double getDouble(String key, double defaultValue) {_		addToDefaults(key, Double.toString(defaultValue))__		String value = get(key)__		if(value == null) {_			return defaultValue__		} else {_			return Double.valueOf(value)__		}_	};returns,the,double,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,double;public,double,get,double,string,key,double,default,value,add,to,defaults,key,double,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,double,value,of,value
ParameterTool -> public double getDouble(String key, double defaultValue);1454679829;Returns the Double value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Double.;public double getDouble(String key, double defaultValue) {_		addToDefaults(key, Double.toString(defaultValue))__		String value = get(key)__		if(value == null) {_			return defaultValue__		} else {_			return Double.valueOf(value)__		}_	};returns,the,double,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,double;public,double,get,double,string,key,double,default,value,add,to,defaults,key,double,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,double,value,of,value
ParameterTool -> public double getDouble(String key, double defaultValue);1455101486;Returns the Double value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Double.;public double getDouble(String key, double defaultValue) {_		addToDefaults(key, Double.toString(defaultValue))__		String value = get(key)__		if(value == null) {_			return defaultValue__		} else {_			return Double.valueOf(value)__		}_	};returns,the,double,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,double;public,double,get,double,string,key,double,default,value,add,to,defaults,key,double,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,double,value,of,value
ParameterTool -> public double getDouble(String key, double defaultValue);1462899491;Returns the Double value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Double.;public double getDouble(String key, double defaultValue) {_		addToDefaults(key, Double.toString(defaultValue))__		String value = get(key)__		if(value == null) {_			return defaultValue__		} else {_			return Double.valueOf(value)__		}_	};returns,the,double,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,double;public,double,get,double,string,key,double,default,value,add,to,defaults,key,double,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,double,value,of,value
ParameterTool -> public double getDouble(String key, double defaultValue);1465462613;Returns the Double value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Double.;public double getDouble(String key, double defaultValue) {_		addToDefaults(key, Double.toString(defaultValue))__		String value = get(key)__		if(value == null) {_			return defaultValue__		} else {_			return Double.valueOf(value)__		}_	};returns,the,double,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,double;public,double,get,double,string,key,double,default,value,add,to,defaults,key,double,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,double,value,of,value
ParameterTool -> public double getDouble(String key, double defaultValue);1473329066;Returns the Double value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Double.;public double getDouble(String key, double defaultValue) {_		addToDefaults(key, Double.toString(defaultValue))__		String value = get(key)__		if(value == null) {_			return defaultValue__		} else {_			return Double.valueOf(value)__		}_	};returns,the,double,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,double;public,double,get,double,string,key,double,default,value,add,to,defaults,key,double,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,double,value,of,value
ParameterTool -> public double getDouble(String key, double defaultValue);1474022085;Returns the Double value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Double.;public double getDouble(String key, double defaultValue) {_		addToDefaults(key, Double.toString(defaultValue))__		String value = get(key)__		if(value == null) {_			return defaultValue__		} else {_			return Double.valueOf(value)__		}_	};returns,the,double,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,double;public,double,get,double,string,key,double,default,value,add,to,defaults,key,double,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,double,value,of,value
ParameterTool -> public double getDouble(String key, double defaultValue);1474626798;Returns the Double value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Double.;public double getDouble(String key, double defaultValue) {_		addToDefaults(key, Double.toString(defaultValue))__		String value = get(key)__		if(value == null) {_			return defaultValue__		} else {_			return Double.valueOf(value)__		}_	};returns,the,double,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,double;public,double,get,double,string,key,double,default,value,add,to,defaults,key,double,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,double,value,of,value
ParameterTool -> public double getDouble(String key, double defaultValue);1474626882;Returns the Double value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Double.;public double getDouble(String key, double defaultValue) {_		addToDefaults(key, Double.toString(defaultValue))__		String value = get(key)__		if(value == null) {_			return defaultValue__		} else {_			return Double.valueOf(value)__		}_	};returns,the,double,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,double;public,double,get,double,string,key,double,default,value,add,to,defaults,key,double,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,double,value,of,value
ParameterTool -> public double getDouble(String key, double defaultValue);1478107885;Returns the Double value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Double.;public double getDouble(String key, double defaultValue) {_		addToDefaults(key, Double.toString(defaultValue))__		String value = get(key)__		if(value == null) {_			return defaultValue__		} else {_			return Double.valueOf(value)__		}_	};returns,the,double,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,double;public,double,get,double,string,key,double,default,value,add,to,defaults,key,double,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,double,value,of,value
ParameterTool -> public double getDouble(String key, double defaultValue);1499777482;Returns the Double value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Double.;public double getDouble(String key, double defaultValue) {_		addToDefaults(key, Double.toString(defaultValue))__		String value = get(key)__		if(value == null) {_			return defaultValue__		} else {_			return Double.valueOf(value)__		}_	};returns,the,double,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,double;public,double,get,double,string,key,double,default,value,add,to,defaults,key,double,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,double,value,of,value
ParameterTool -> public double getDouble(String key, double defaultValue);1500387265;Returns the Double value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Double.;public double getDouble(String key, double defaultValue) {_		addToDefaults(key, Double.toString(defaultValue))__		String value = get(key)__		if (value == null) {_			return defaultValue__		} else {_			return Double.valueOf(value)__		}_	};returns,the,double,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,double;public,double,get,double,string,key,double,default,value,add,to,defaults,key,double,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,double,value,of,value
ParameterTool -> public double getDouble(String key, double defaultValue);1505831007;Returns the Double value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Double.;public double getDouble(String key, double defaultValue) {_		addToDefaults(key, Double.toString(defaultValue))__		String value = get(key)__		if (value == null) {_			return defaultValue__		} else {_			return Double.valueOf(value)__		}_	};returns,the,double,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,double;public,double,get,double,string,key,double,default,value,add,to,defaults,key,double,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,double,value,of,value
ParameterTool -> public double getDouble(String key, double defaultValue);1506499511;Returns the Double value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Double.;public double getDouble(String key, double defaultValue) {_		addToDefaults(key, Double.toString(defaultValue))__		String value = get(key)__		if (value == null) {_			return defaultValue__		} else {_			return Double.valueOf(value)__		}_	};returns,the,double,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,double;public,double,get,double,string,key,double,default,value,add,to,defaults,key,double,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,double,value,of,value
ParameterTool -> public double getDouble(String key, double defaultValue);1511189418;Returns the Double value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Double.;public double getDouble(String key, double defaultValue) {_		addToDefaults(key, Double.toString(defaultValue))__		String value = get(key)__		if (value == null) {_			return defaultValue__		} else {_			return Double.valueOf(value)__		}_	};returns,the,double,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,double;public,double,get,double,string,key,double,default,value,add,to,defaults,key,double,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,double,value,of,value
ParameterTool -> public double getDouble(String key, double defaultValue);1511966704;Returns the Double value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Double.;public double getDouble(String key, double defaultValue) {_		addToDefaults(key, Double.toString(defaultValue))__		String value = get(key)__		if (value == null) {_			return defaultValue__		} else {_			return Double.valueOf(value)__		}_	};returns,the,double,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,double;public,double,get,double,string,key,double,default,value,add,to,defaults,key,double,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,double,value,of,value
ParameterTool -> public double getDouble(String key, double defaultValue);1539096710;Returns the Double value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Double.;public double getDouble(String key, double defaultValue) {_		addToDefaults(key, Double.toString(defaultValue))__		String value = get(key)__		if (value == null) {_			return defaultValue__		} else {_			return Double.valueOf(value)__		}_	};returns,the,double,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,double;public,double,get,double,string,key,double,default,value,add,to,defaults,key,double,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,double,value,of,value
ParameterTool -> public double getDouble(String key, double defaultValue);1539096710;Returns the Double value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Double.;public double getDouble(String key, double defaultValue) {_		addToDefaults(key, Double.toString(defaultValue))__		String value = get(key)__		if (value == null) {_			return defaultValue__		} else {_			return Double.valueOf(value)__		}_	};returns,the,double,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,double;public,double,get,double,string,key,double,default,value,add,to,defaults,key,double,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,double,value,of,value
ParameterTool -> public double getDouble(String key);1441981413;Returns the Double value for the given key._The method fails if the key does not exist.;public double getDouble(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Double.valueOf(value)__	};returns,the,double,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,double,get,double,string,key,add,to,defaults,key,null,string,value,get,required,key,return,double,value,of,value
ParameterTool -> public double getDouble(String key);1443123598;Returns the Double value for the given key._The method fails if the key does not exist.;public double getDouble(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Double.valueOf(value)__	};returns,the,double,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,double,get,double,string,key,add,to,defaults,key,null,string,value,get,required,key,return,double,value,of,value
ParameterTool -> public double getDouble(String key);1454679829;Returns the Double value for the given key._The method fails if the key does not exist.;public double getDouble(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Double.valueOf(value)__	};returns,the,double,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,double,get,double,string,key,add,to,defaults,key,null,string,value,get,required,key,return,double,value,of,value
ParameterTool -> public double getDouble(String key);1455101486;Returns the Double value for the given key._The method fails if the key does not exist.;public double getDouble(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Double.valueOf(value)__	};returns,the,double,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,double,get,double,string,key,add,to,defaults,key,null,string,value,get,required,key,return,double,value,of,value
ParameterTool -> public double getDouble(String key);1462899491;Returns the Double value for the given key._The method fails if the key does not exist.;public double getDouble(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Double.valueOf(value)__	};returns,the,double,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,double,get,double,string,key,add,to,defaults,key,null,string,value,get,required,key,return,double,value,of,value
ParameterTool -> public double getDouble(String key);1465462613;Returns the Double value for the given key._The method fails if the key does not exist.;public double getDouble(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Double.valueOf(value)__	};returns,the,double,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,double,get,double,string,key,add,to,defaults,key,null,string,value,get,required,key,return,double,value,of,value
ParameterTool -> public double getDouble(String key);1473329066;Returns the Double value for the given key._The method fails if the key does not exist.;public double getDouble(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Double.valueOf(value)__	};returns,the,double,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,double,get,double,string,key,add,to,defaults,key,null,string,value,get,required,key,return,double,value,of,value
ParameterTool -> public double getDouble(String key);1474022085;Returns the Double value for the given key._The method fails if the key does not exist.;public double getDouble(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Double.valueOf(value)__	};returns,the,double,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,double,get,double,string,key,add,to,defaults,key,null,string,value,get,required,key,return,double,value,of,value
ParameterTool -> public double getDouble(String key);1474626798;Returns the Double value for the given key._The method fails if the key does not exist.;public double getDouble(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Double.valueOf(value)__	};returns,the,double,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,double,get,double,string,key,add,to,defaults,key,null,string,value,get,required,key,return,double,value,of,value
ParameterTool -> public double getDouble(String key);1474626882;Returns the Double value for the given key._The method fails if the key does not exist.;public double getDouble(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Double.valueOf(value)__	};returns,the,double,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,double,get,double,string,key,add,to,defaults,key,null,string,value,get,required,key,return,double,value,of,value
ParameterTool -> public double getDouble(String key);1478107885;Returns the Double value for the given key._The method fails if the key does not exist.;public double getDouble(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Double.valueOf(value)__	};returns,the,double,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,double,get,double,string,key,add,to,defaults,key,null,string,value,get,required,key,return,double,value,of,value
ParameterTool -> public double getDouble(String key);1499777482;Returns the Double value for the given key._The method fails if the key does not exist.;public double getDouble(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Double.valueOf(value)__	};returns,the,double,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,double,get,double,string,key,add,to,defaults,key,null,string,value,get,required,key,return,double,value,of,value
ParameterTool -> public double getDouble(String key);1500387265;Returns the Double value for the given key._The method fails if the key does not exist.;public double getDouble(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Double.valueOf(value)__	};returns,the,double,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,double,get,double,string,key,add,to,defaults,key,null,string,value,get,required,key,return,double,value,of,value
ParameterTool -> public double getDouble(String key);1505831007;Returns the Double value for the given key._The method fails if the key does not exist.;public double getDouble(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Double.valueOf(value)__	};returns,the,double,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,double,get,double,string,key,add,to,defaults,key,null,string,value,get,required,key,return,double,value,of,value
ParameterTool -> public double getDouble(String key);1506499511;Returns the Double value for the given key._The method fails if the key does not exist.;public double getDouble(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Double.valueOf(value)__	};returns,the,double,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,double,get,double,string,key,add,to,defaults,key,null,string,value,get,required,key,return,double,value,of,value
ParameterTool -> public double getDouble(String key);1511189418;Returns the Double value for the given key._The method fails if the key does not exist.;public double getDouble(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Double.valueOf(value)__	};returns,the,double,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,double,get,double,string,key,add,to,defaults,key,null,string,value,get,required,key,return,double,value,of,value
ParameterTool -> public double getDouble(String key);1511966704;Returns the Double value for the given key._The method fails if the key does not exist.;public double getDouble(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Double.valueOf(value)__	};returns,the,double,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,double,get,double,string,key,add,to,defaults,key,null,string,value,get,required,key,return,double,value,of,value
ParameterTool -> public double getDouble(String key);1539096710;Returns the Double value for the given key._The method fails if the key does not exist.;public double getDouble(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Double.valueOf(value)__	};returns,the,double,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,double,get,double,string,key,add,to,defaults,key,null,string,value,get,required,key,return,double,value,of,value
ParameterTool -> public double getDouble(String key);1539096710;Returns the Double value for the given key._The method fails if the key does not exist.;public double getDouble(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Double.valueOf(value)__	};returns,the,double,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,double,get,double,string,key,add,to,defaults,key,null,string,value,get,required,key,return,double,value,of,value
ParameterTool -> public byte getByte(String key, byte defaultValue);1443123598;Returns the Byte value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Byte.;public byte getByte(String key, byte defaultValue) {_		addToDefaults(key, Byte.toString(defaultValue))__		String value = get(key)__		if(value == null) {_			return defaultValue__		} else {_			return Byte.valueOf(value)__		}_	};returns,the,byte,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,byte;public,byte,get,byte,string,key,byte,default,value,add,to,defaults,key,byte,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,byte,value,of,value
ParameterTool -> public byte getByte(String key, byte defaultValue);1454679829;Returns the Byte value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Byte.;public byte getByte(String key, byte defaultValue) {_		addToDefaults(key, Byte.toString(defaultValue))__		String value = get(key)__		if(value == null) {_			return defaultValue__		} else {_			return Byte.valueOf(value)__		}_	};returns,the,byte,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,byte;public,byte,get,byte,string,key,byte,default,value,add,to,defaults,key,byte,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,byte,value,of,value
ParameterTool -> public byte getByte(String key, byte defaultValue);1455101486;Returns the Byte value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Byte.;public byte getByte(String key, byte defaultValue) {_		addToDefaults(key, Byte.toString(defaultValue))__		String value = get(key)__		if(value == null) {_			return defaultValue__		} else {_			return Byte.valueOf(value)__		}_	};returns,the,byte,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,byte;public,byte,get,byte,string,key,byte,default,value,add,to,defaults,key,byte,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,byte,value,of,value
ParameterTool -> public byte getByte(String key, byte defaultValue);1462899491;Returns the Byte value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Byte.;public byte getByte(String key, byte defaultValue) {_		addToDefaults(key, Byte.toString(defaultValue))__		String value = get(key)__		if(value == null) {_			return defaultValue__		} else {_			return Byte.valueOf(value)__		}_	};returns,the,byte,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,byte;public,byte,get,byte,string,key,byte,default,value,add,to,defaults,key,byte,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,byte,value,of,value
ParameterTool -> public byte getByte(String key, byte defaultValue);1465462613;Returns the Byte value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Byte.;public byte getByte(String key, byte defaultValue) {_		addToDefaults(key, Byte.toString(defaultValue))__		String value = get(key)__		if(value == null) {_			return defaultValue__		} else {_			return Byte.valueOf(value)__		}_	};returns,the,byte,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,byte;public,byte,get,byte,string,key,byte,default,value,add,to,defaults,key,byte,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,byte,value,of,value
ParameterTool -> public byte getByte(String key, byte defaultValue);1473329066;Returns the Byte value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Byte.;public byte getByte(String key, byte defaultValue) {_		addToDefaults(key, Byte.toString(defaultValue))__		String value = get(key)__		if(value == null) {_			return defaultValue__		} else {_			return Byte.valueOf(value)__		}_	};returns,the,byte,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,byte;public,byte,get,byte,string,key,byte,default,value,add,to,defaults,key,byte,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,byte,value,of,value
ParameterTool -> public byte getByte(String key, byte defaultValue);1474022085;Returns the Byte value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Byte.;public byte getByte(String key, byte defaultValue) {_		addToDefaults(key, Byte.toString(defaultValue))__		String value = get(key)__		if(value == null) {_			return defaultValue__		} else {_			return Byte.valueOf(value)__		}_	};returns,the,byte,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,byte;public,byte,get,byte,string,key,byte,default,value,add,to,defaults,key,byte,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,byte,value,of,value
ParameterTool -> public byte getByte(String key, byte defaultValue);1474626798;Returns the Byte value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Byte.;public byte getByte(String key, byte defaultValue) {_		addToDefaults(key, Byte.toString(defaultValue))__		String value = get(key)__		if(value == null) {_			return defaultValue__		} else {_			return Byte.valueOf(value)__		}_	};returns,the,byte,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,byte;public,byte,get,byte,string,key,byte,default,value,add,to,defaults,key,byte,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,byte,value,of,value
ParameterTool -> public byte getByte(String key, byte defaultValue);1474626882;Returns the Byte value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Byte.;public byte getByte(String key, byte defaultValue) {_		addToDefaults(key, Byte.toString(defaultValue))__		String value = get(key)__		if(value == null) {_			return defaultValue__		} else {_			return Byte.valueOf(value)__		}_	};returns,the,byte,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,byte;public,byte,get,byte,string,key,byte,default,value,add,to,defaults,key,byte,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,byte,value,of,value
ParameterTool -> public byte getByte(String key, byte defaultValue);1478107885;Returns the Byte value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Byte.;public byte getByte(String key, byte defaultValue) {_		addToDefaults(key, Byte.toString(defaultValue))__		String value = get(key)__		if(value == null) {_			return defaultValue__		} else {_			return Byte.valueOf(value)__		}_	};returns,the,byte,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,byte;public,byte,get,byte,string,key,byte,default,value,add,to,defaults,key,byte,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,byte,value,of,value
ParameterTool -> public byte getByte(String key, byte defaultValue);1499777482;Returns the Byte value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Byte.;public byte getByte(String key, byte defaultValue) {_		addToDefaults(key, Byte.toString(defaultValue))__		String value = get(key)__		if(value == null) {_			return defaultValue__		} else {_			return Byte.valueOf(value)__		}_	};returns,the,byte,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,byte;public,byte,get,byte,string,key,byte,default,value,add,to,defaults,key,byte,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,byte,value,of,value
ParameterTool -> public byte getByte(String key, byte defaultValue);1500387265;Returns the Byte value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Byte.;public byte getByte(String key, byte defaultValue) {_		addToDefaults(key, Byte.toString(defaultValue))__		String value = get(key)__		if (value == null) {_			return defaultValue__		} else {_			return Byte.valueOf(value)__		}_	};returns,the,byte,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,byte;public,byte,get,byte,string,key,byte,default,value,add,to,defaults,key,byte,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,byte,value,of,value
ParameterTool -> public byte getByte(String key, byte defaultValue);1505831007;Returns the Byte value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Byte.;public byte getByte(String key, byte defaultValue) {_		addToDefaults(key, Byte.toString(defaultValue))__		String value = get(key)__		if (value == null) {_			return defaultValue__		} else {_			return Byte.valueOf(value)__		}_	};returns,the,byte,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,byte;public,byte,get,byte,string,key,byte,default,value,add,to,defaults,key,byte,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,byte,value,of,value
ParameterTool -> public byte getByte(String key, byte defaultValue);1506499511;Returns the Byte value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Byte.;public byte getByte(String key, byte defaultValue) {_		addToDefaults(key, Byte.toString(defaultValue))__		String value = get(key)__		if (value == null) {_			return defaultValue__		} else {_			return Byte.valueOf(value)__		}_	};returns,the,byte,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,byte;public,byte,get,byte,string,key,byte,default,value,add,to,defaults,key,byte,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,byte,value,of,value
ParameterTool -> public byte getByte(String key, byte defaultValue);1511189418;Returns the Byte value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Byte.;public byte getByte(String key, byte defaultValue) {_		addToDefaults(key, Byte.toString(defaultValue))__		String value = get(key)__		if (value == null) {_			return defaultValue__		} else {_			return Byte.valueOf(value)__		}_	};returns,the,byte,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,byte;public,byte,get,byte,string,key,byte,default,value,add,to,defaults,key,byte,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,byte,value,of,value
ParameterTool -> public byte getByte(String key, byte defaultValue);1511966704;Returns the Byte value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Byte.;public byte getByte(String key, byte defaultValue) {_		addToDefaults(key, Byte.toString(defaultValue))__		String value = get(key)__		if (value == null) {_			return defaultValue__		} else {_			return Byte.valueOf(value)__		}_	};returns,the,byte,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,byte;public,byte,get,byte,string,key,byte,default,value,add,to,defaults,key,byte,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,byte,value,of,value
ParameterTool -> public byte getByte(String key, byte defaultValue);1539096710;Returns the Byte value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Byte.;public byte getByte(String key, byte defaultValue) {_		addToDefaults(key, Byte.toString(defaultValue))__		String value = get(key)__		if (value == null) {_			return defaultValue__		} else {_			return Byte.valueOf(value)__		}_	};returns,the,byte,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,byte;public,byte,get,byte,string,key,byte,default,value,add,to,defaults,key,byte,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,byte,value,of,value
ParameterTool -> public byte getByte(String key, byte defaultValue);1539096710;Returns the Byte value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Byte.;public byte getByte(String key, byte defaultValue) {_		addToDefaults(key, Byte.toString(defaultValue))__		String value = get(key)__		if (value == null) {_			return defaultValue__		} else {_			return Byte.valueOf(value)__		}_	};returns,the,byte,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,byte;public,byte,get,byte,string,key,byte,default,value,add,to,defaults,key,byte,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,byte,value,of,value
ParameterTool -> public long getLong(String key, long defaultValue);1441981413;Returns the Long value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Long.;public long getLong(String key, long defaultValue) {_		addToDefaults(key, Long.toString(defaultValue))__		String value = get(key)__		if(value == null) {_			return defaultValue__		} else {_			return Long.valueOf(value)__		}_	};returns,the,long,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,long;public,long,get,long,string,key,long,default,value,add,to,defaults,key,long,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,long,value,of,value
ParameterTool -> public long getLong(String key, long defaultValue);1443123598;Returns the Long value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Long.;public long getLong(String key, long defaultValue) {_		addToDefaults(key, Long.toString(defaultValue))__		String value = get(key)__		if(value == null) {_			return defaultValue__		} else {_			return Long.valueOf(value)__		}_	};returns,the,long,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,long;public,long,get,long,string,key,long,default,value,add,to,defaults,key,long,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,long,value,of,value
ParameterTool -> public long getLong(String key, long defaultValue);1454679829;Returns the Long value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Long.;public long getLong(String key, long defaultValue) {_		addToDefaults(key, Long.toString(defaultValue))__		String value = get(key)__		if(value == null) {_			return defaultValue__		} else {_			return Long.valueOf(value)__		}_	};returns,the,long,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,long;public,long,get,long,string,key,long,default,value,add,to,defaults,key,long,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,long,value,of,value
ParameterTool -> public long getLong(String key, long defaultValue);1455101486;Returns the Long value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Long.;public long getLong(String key, long defaultValue) {_		addToDefaults(key, Long.toString(defaultValue))__		String value = get(key)__		if(value == null) {_			return defaultValue__		} else {_			return Long.valueOf(value)__		}_	};returns,the,long,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,long;public,long,get,long,string,key,long,default,value,add,to,defaults,key,long,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,long,value,of,value
ParameterTool -> public long getLong(String key, long defaultValue);1462899491;Returns the Long value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Long.;public long getLong(String key, long defaultValue) {_		addToDefaults(key, Long.toString(defaultValue))__		String value = get(key)__		if(value == null) {_			return defaultValue__		} else {_			return Long.valueOf(value)__		}_	};returns,the,long,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,long;public,long,get,long,string,key,long,default,value,add,to,defaults,key,long,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,long,value,of,value
ParameterTool -> public long getLong(String key, long defaultValue);1465462613;Returns the Long value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Long.;public long getLong(String key, long defaultValue) {_		addToDefaults(key, Long.toString(defaultValue))__		String value = get(key)__		if(value == null) {_			return defaultValue__		} else {_			return Long.valueOf(value)__		}_	};returns,the,long,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,long;public,long,get,long,string,key,long,default,value,add,to,defaults,key,long,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,long,value,of,value
ParameterTool -> public long getLong(String key, long defaultValue);1473329066;Returns the Long value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Long.;public long getLong(String key, long defaultValue) {_		addToDefaults(key, Long.toString(defaultValue))__		String value = get(key)__		if(value == null) {_			return defaultValue__		} else {_			return Long.valueOf(value)__		}_	};returns,the,long,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,long;public,long,get,long,string,key,long,default,value,add,to,defaults,key,long,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,long,value,of,value
ParameterTool -> public long getLong(String key, long defaultValue);1474022085;Returns the Long value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Long.;public long getLong(String key, long defaultValue) {_		addToDefaults(key, Long.toString(defaultValue))__		String value = get(key)__		if(value == null) {_			return defaultValue__		} else {_			return Long.valueOf(value)__		}_	};returns,the,long,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,long;public,long,get,long,string,key,long,default,value,add,to,defaults,key,long,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,long,value,of,value
ParameterTool -> public long getLong(String key, long defaultValue);1474626798;Returns the Long value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Long.;public long getLong(String key, long defaultValue) {_		addToDefaults(key, Long.toString(defaultValue))__		String value = get(key)__		if (value == null) {_			return defaultValue__		}_		return Long.parseLong(value)__	};returns,the,long,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,long;public,long,get,long,string,key,long,default,value,add,to,defaults,key,long,to,string,default,value,string,value,get,key,if,value,null,return,default,value,return,long,parse,long,value
ParameterTool -> public long getLong(String key, long defaultValue);1474626882;Returns the Long value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Long.;public long getLong(String key, long defaultValue) {_		addToDefaults(key, Long.toString(defaultValue))__		String value = get(key)__		if (value == null) {_			return defaultValue__		}_		return Long.parseLong(value)__	};returns,the,long,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,long;public,long,get,long,string,key,long,default,value,add,to,defaults,key,long,to,string,default,value,string,value,get,key,if,value,null,return,default,value,return,long,parse,long,value
ParameterTool -> public long getLong(String key, long defaultValue);1478107885;Returns the Long value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Long.;public long getLong(String key, long defaultValue) {_		addToDefaults(key, Long.toString(defaultValue))__		String value = get(key)__		if (value == null) {_			return defaultValue__		}_		return Long.parseLong(value)__	};returns,the,long,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,long;public,long,get,long,string,key,long,default,value,add,to,defaults,key,long,to,string,default,value,string,value,get,key,if,value,null,return,default,value,return,long,parse,long,value
ParameterTool -> public long getLong(String key, long defaultValue);1499777482;Returns the Long value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Long.;public long getLong(String key, long defaultValue) {_		addToDefaults(key, Long.toString(defaultValue))__		String value = get(key)__		if (value == null) {_			return defaultValue__		}_		return Long.parseLong(value)__	};returns,the,long,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,long;public,long,get,long,string,key,long,default,value,add,to,defaults,key,long,to,string,default,value,string,value,get,key,if,value,null,return,default,value,return,long,parse,long,value
ParameterTool -> public long getLong(String key, long defaultValue);1500387265;Returns the Long value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Long.;public long getLong(String key, long defaultValue) {_		addToDefaults(key, Long.toString(defaultValue))__		String value = get(key)__		if (value == null) {_			return defaultValue__		}_		return Long.parseLong(value)__	};returns,the,long,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,long;public,long,get,long,string,key,long,default,value,add,to,defaults,key,long,to,string,default,value,string,value,get,key,if,value,null,return,default,value,return,long,parse,long,value
ParameterTool -> public long getLong(String key, long defaultValue);1505831007;Returns the Long value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Long.;public long getLong(String key, long defaultValue) {_		addToDefaults(key, Long.toString(defaultValue))__		String value = get(key)__		if (value == null) {_			return defaultValue__		}_		return Long.parseLong(value)__	};returns,the,long,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,long;public,long,get,long,string,key,long,default,value,add,to,defaults,key,long,to,string,default,value,string,value,get,key,if,value,null,return,default,value,return,long,parse,long,value
ParameterTool -> public long getLong(String key, long defaultValue);1506499511;Returns the Long value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Long.;public long getLong(String key, long defaultValue) {_		addToDefaults(key, Long.toString(defaultValue))__		String value = get(key)__		if (value == null) {_			return defaultValue__		}_		return Long.parseLong(value)__	};returns,the,long,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,long;public,long,get,long,string,key,long,default,value,add,to,defaults,key,long,to,string,default,value,string,value,get,key,if,value,null,return,default,value,return,long,parse,long,value
ParameterTool -> public long getLong(String key, long defaultValue);1511189418;Returns the Long value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Long.;public long getLong(String key, long defaultValue) {_		addToDefaults(key, Long.toString(defaultValue))__		String value = get(key)__		if (value == null) {_			return defaultValue__		}_		return Long.parseLong(value)__	};returns,the,long,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,long;public,long,get,long,string,key,long,default,value,add,to,defaults,key,long,to,string,default,value,string,value,get,key,if,value,null,return,default,value,return,long,parse,long,value
ParameterTool -> public long getLong(String key, long defaultValue);1511966704;Returns the Long value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Long.;public long getLong(String key, long defaultValue) {_		addToDefaults(key, Long.toString(defaultValue))__		String value = get(key)__		if (value == null) {_			return defaultValue__		}_		return Long.parseLong(value)__	};returns,the,long,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,long;public,long,get,long,string,key,long,default,value,add,to,defaults,key,long,to,string,default,value,string,value,get,key,if,value,null,return,default,value,return,long,parse,long,value
ParameterTool -> public long getLong(String key, long defaultValue);1539096710;Returns the Long value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Long.;public long getLong(String key, long defaultValue) {_		addToDefaults(key, Long.toString(defaultValue))__		String value = get(key)__		if (value == null) {_			return defaultValue__		}_		return Long.parseLong(value)__	};returns,the,long,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,long;public,long,get,long,string,key,long,default,value,add,to,defaults,key,long,to,string,default,value,string,value,get,key,if,value,null,return,default,value,return,long,parse,long,value
ParameterTool -> public long getLong(String key, long defaultValue);1539096710;Returns the Long value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Long.;public long getLong(String key, long defaultValue) {_		addToDefaults(key, Long.toString(defaultValue))__		String value = get(key)__		if (value == null) {_			return defaultValue__		}_		return Long.parseLong(value)__	};returns,the,long,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,long;public,long,get,long,string,key,long,default,value,add,to,defaults,key,long,to,string,default,value,string,value,get,key,if,value,null,return,default,value,return,long,parse,long,value
ParameterTool -> public boolean getBoolean(String key, boolean defaultValue);1443123598;Returns the Boolean value for the given key. If the key does not exists it will return the default value given._The method returns whether the string of the value is "true" ignoring cases.;public boolean getBoolean(String key, boolean defaultValue) {_		addToDefaults(key, Boolean.toString(defaultValue))__		String value = get(key)__		if(value == null) {_			return defaultValue__		} else {_			return Boolean.valueOf(value)__		}_	};returns,the,boolean,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,returns,whether,the,string,of,the,value,is,true,ignoring,cases;public,boolean,get,boolean,string,key,boolean,default,value,add,to,defaults,key,boolean,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,boolean,value,of,value
ParameterTool -> public boolean getBoolean(String key, boolean defaultValue);1454679829;Returns the Boolean value for the given key. If the key does not exists it will return the default value given._The method returns whether the string of the value is "true" ignoring cases.;public boolean getBoolean(String key, boolean defaultValue) {_		addToDefaults(key, Boolean.toString(defaultValue))__		String value = get(key)__		if(value == null) {_			return defaultValue__		} else {_			return Boolean.valueOf(value)__		}_	};returns,the,boolean,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,returns,whether,the,string,of,the,value,is,true,ignoring,cases;public,boolean,get,boolean,string,key,boolean,default,value,add,to,defaults,key,boolean,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,boolean,value,of,value
ParameterTool -> public boolean getBoolean(String key, boolean defaultValue);1455101486;Returns the Boolean value for the given key. If the key does not exists it will return the default value given._The method returns whether the string of the value is "true" ignoring cases.;public boolean getBoolean(String key, boolean defaultValue) {_		addToDefaults(key, Boolean.toString(defaultValue))__		String value = get(key)__		if(value == null) {_			return defaultValue__		} else {_			return Boolean.valueOf(value)__		}_	};returns,the,boolean,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,returns,whether,the,string,of,the,value,is,true,ignoring,cases;public,boolean,get,boolean,string,key,boolean,default,value,add,to,defaults,key,boolean,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,boolean,value,of,value
ParameterTool -> public boolean getBoolean(String key, boolean defaultValue);1462899491;Returns the Boolean value for the given key. If the key does not exists it will return the default value given._The method returns whether the string of the value is "true" ignoring cases.;public boolean getBoolean(String key, boolean defaultValue) {_		addToDefaults(key, Boolean.toString(defaultValue))__		String value = get(key)__		if(value == null) {_			return defaultValue__		} else {_			return Boolean.valueOf(value)__		}_	};returns,the,boolean,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,returns,whether,the,string,of,the,value,is,true,ignoring,cases;public,boolean,get,boolean,string,key,boolean,default,value,add,to,defaults,key,boolean,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,boolean,value,of,value
ParameterTool -> public boolean getBoolean(String key, boolean defaultValue);1465462613;Returns the Boolean value for the given key. If the key does not exists it will return the default value given._The method returns whether the string of the value is "true" ignoring cases.;public boolean getBoolean(String key, boolean defaultValue) {_		addToDefaults(key, Boolean.toString(defaultValue))__		String value = get(key)__		if(value == null) {_			return defaultValue__		} else {_			return Boolean.valueOf(value)__		}_	};returns,the,boolean,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,returns,whether,the,string,of,the,value,is,true,ignoring,cases;public,boolean,get,boolean,string,key,boolean,default,value,add,to,defaults,key,boolean,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,boolean,value,of,value
ParameterTool -> public boolean getBoolean(String key, boolean defaultValue);1473329066;Returns the Boolean value for the given key. If the key does not exists it will return the default value given._The method returns whether the string of the value is "true" ignoring cases.;public boolean getBoolean(String key, boolean defaultValue) {_		addToDefaults(key, Boolean.toString(defaultValue))__		String value = get(key)__		if(value == null) {_			return defaultValue__		} else {_			return Boolean.valueOf(value)__		}_	};returns,the,boolean,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,returns,whether,the,string,of,the,value,is,true,ignoring,cases;public,boolean,get,boolean,string,key,boolean,default,value,add,to,defaults,key,boolean,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,boolean,value,of,value
ParameterTool -> public boolean getBoolean(String key, boolean defaultValue);1474022085;Returns the Boolean value for the given key. If the key does not exists it will return the default value given._The method returns whether the string of the value is "true" ignoring cases.;public boolean getBoolean(String key, boolean defaultValue) {_		addToDefaults(key, Boolean.toString(defaultValue))__		String value = get(key)__		if(value == null) {_			return defaultValue__		} else {_			return Boolean.valueOf(value)__		}_	};returns,the,boolean,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,returns,whether,the,string,of,the,value,is,true,ignoring,cases;public,boolean,get,boolean,string,key,boolean,default,value,add,to,defaults,key,boolean,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,boolean,value,of,value
ParameterTool -> public boolean getBoolean(String key, boolean defaultValue);1474626798;Returns the Boolean value for the given key. If the key does not exists it will return the default value given._The method returns whether the string of the value is "true" ignoring cases.;public boolean getBoolean(String key, boolean defaultValue) {_		addToDefaults(key, Boolean.toString(defaultValue))__		String value = get(key)__		if(value == null) {_			return defaultValue__		} else {_			return Boolean.valueOf(value)__		}_	};returns,the,boolean,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,returns,whether,the,string,of,the,value,is,true,ignoring,cases;public,boolean,get,boolean,string,key,boolean,default,value,add,to,defaults,key,boolean,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,boolean,value,of,value
ParameterTool -> public boolean getBoolean(String key, boolean defaultValue);1474626882;Returns the Boolean value for the given key. If the key does not exists it will return the default value given._The method returns whether the string of the value is "true" ignoring cases.;public boolean getBoolean(String key, boolean defaultValue) {_		addToDefaults(key, Boolean.toString(defaultValue))__		String value = get(key)__		if(value == null) {_			return defaultValue__		} else {_			return Boolean.valueOf(value)__		}_	};returns,the,boolean,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,returns,whether,the,string,of,the,value,is,true,ignoring,cases;public,boolean,get,boolean,string,key,boolean,default,value,add,to,defaults,key,boolean,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,boolean,value,of,value
ParameterTool -> public boolean getBoolean(String key, boolean defaultValue);1478107885;Returns the Boolean value for the given key. If the key does not exists it will return the default value given._The method returns whether the string of the value is "true" ignoring cases.;public boolean getBoolean(String key, boolean defaultValue) {_		addToDefaults(key, Boolean.toString(defaultValue))__		String value = get(key)__		if(value == null) {_			return defaultValue__		} else {_			return Boolean.valueOf(value)__		}_	};returns,the,boolean,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,returns,whether,the,string,of,the,value,is,true,ignoring,cases;public,boolean,get,boolean,string,key,boolean,default,value,add,to,defaults,key,boolean,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,boolean,value,of,value
ParameterTool -> public boolean getBoolean(String key, boolean defaultValue);1499777482;Returns the Boolean value for the given key. If the key does not exists it will return the default value given._The method returns whether the string of the value is "true" ignoring cases.;public boolean getBoolean(String key, boolean defaultValue) {_		addToDefaults(key, Boolean.toString(defaultValue))__		String value = get(key)__		if(value == null) {_			return defaultValue__		} else {_			return Boolean.valueOf(value)__		}_	};returns,the,boolean,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,returns,whether,the,string,of,the,value,is,true,ignoring,cases;public,boolean,get,boolean,string,key,boolean,default,value,add,to,defaults,key,boolean,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,boolean,value,of,value
ParameterTool -> public boolean getBoolean(String key, boolean defaultValue);1500387265;Returns the Boolean value for the given key. If the key does not exists it will return the default value given._The method returns whether the string of the value is "true" ignoring cases.;public boolean getBoolean(String key, boolean defaultValue) {_		addToDefaults(key, Boolean.toString(defaultValue))__		String value = get(key)__		if (value == null) {_			return defaultValue__		} else {_			return Boolean.valueOf(value)__		}_	};returns,the,boolean,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,returns,whether,the,string,of,the,value,is,true,ignoring,cases;public,boolean,get,boolean,string,key,boolean,default,value,add,to,defaults,key,boolean,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,boolean,value,of,value
ParameterTool -> public boolean getBoolean(String key, boolean defaultValue);1505831007;Returns the Boolean value for the given key. If the key does not exists it will return the default value given._The method returns whether the string of the value is "true" ignoring cases.;public boolean getBoolean(String key, boolean defaultValue) {_		addToDefaults(key, Boolean.toString(defaultValue))__		String value = get(key)__		if (value == null) {_			return defaultValue__		} else {_			return Boolean.valueOf(value)__		}_	};returns,the,boolean,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,returns,whether,the,string,of,the,value,is,true,ignoring,cases;public,boolean,get,boolean,string,key,boolean,default,value,add,to,defaults,key,boolean,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,boolean,value,of,value
ParameterTool -> public boolean getBoolean(String key, boolean defaultValue);1506499511;Returns the Boolean value for the given key. If the key does not exists it will return the default value given._The method returns whether the string of the value is "true" ignoring cases.;public boolean getBoolean(String key, boolean defaultValue) {_		addToDefaults(key, Boolean.toString(defaultValue))__		String value = get(key)__		if (value == null) {_			return defaultValue__		} else {_			return Boolean.valueOf(value)__		}_	};returns,the,boolean,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,returns,whether,the,string,of,the,value,is,true,ignoring,cases;public,boolean,get,boolean,string,key,boolean,default,value,add,to,defaults,key,boolean,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,boolean,value,of,value
ParameterTool -> public boolean getBoolean(String key, boolean defaultValue);1511189418;Returns the Boolean value for the given key. If the key does not exists it will return the default value given._The method returns whether the string of the value is "true" ignoring cases.;public boolean getBoolean(String key, boolean defaultValue) {_		addToDefaults(key, Boolean.toString(defaultValue))__		String value = get(key)__		if (value == null) {_			return defaultValue__		} else {_			return Boolean.valueOf(value)__		}_	};returns,the,boolean,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,returns,whether,the,string,of,the,value,is,true,ignoring,cases;public,boolean,get,boolean,string,key,boolean,default,value,add,to,defaults,key,boolean,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,boolean,value,of,value
ParameterTool -> public boolean getBoolean(String key, boolean defaultValue);1511966704;Returns the Boolean value for the given key. If the key does not exists it will return the default value given._The method returns whether the string of the value is "true" ignoring cases.;public boolean getBoolean(String key, boolean defaultValue) {_		addToDefaults(key, Boolean.toString(defaultValue))__		String value = get(key)__		if (value == null) {_			return defaultValue__		} else {_			return Boolean.valueOf(value)__		}_	};returns,the,boolean,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,returns,whether,the,string,of,the,value,is,true,ignoring,cases;public,boolean,get,boolean,string,key,boolean,default,value,add,to,defaults,key,boolean,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,boolean,value,of,value
ParameterTool -> public boolean getBoolean(String key, boolean defaultValue);1539096710;Returns the Boolean value for the given key. If the key does not exists it will return the default value given._The method returns whether the string of the value is "true" ignoring cases.;public boolean getBoolean(String key, boolean defaultValue) {_		addToDefaults(key, Boolean.toString(defaultValue))__		String value = get(key)__		if (value == null) {_			return defaultValue__		} else {_			return Boolean.valueOf(value)__		}_	};returns,the,boolean,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,returns,whether,the,string,of,the,value,is,true,ignoring,cases;public,boolean,get,boolean,string,key,boolean,default,value,add,to,defaults,key,boolean,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,boolean,value,of,value
ParameterTool -> public boolean getBoolean(String key, boolean defaultValue);1539096710;Returns the Boolean value for the given key. If the key does not exists it will return the default value given._The method returns whether the string of the value is "true" ignoring cases.;public boolean getBoolean(String key, boolean defaultValue) {_		addToDefaults(key, Boolean.toString(defaultValue))__		String value = get(key)__		if (value == null) {_			return defaultValue__		} else {_			return Boolean.valueOf(value)__		}_	};returns,the,boolean,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,returns,whether,the,string,of,the,value,is,true,ignoring,cases;public,boolean,get,boolean,string,key,boolean,default,value,add,to,defaults,key,boolean,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,boolean,value,of,value
ParameterTool -> public static ParameterTool fromSystemProperties();1441981413;Returns {@link ParameterTool} from the system properties._Example on how to pass system properties:_-Dkey1=value1 -Dkey2=value2__@return A {@link ParameterTool};public static ParameterTool fromSystemProperties() {_		return fromMap((Map) System.getProperties())__	};returns,link,parameter,tool,from,the,system,properties,example,on,how,to,pass,system,properties,dkey1,value1,dkey2,value2,return,a,link,parameter,tool;public,static,parameter,tool,from,system,properties,return,from,map,map,system,get,properties
ParameterTool -> public static ParameterTool fromSystemProperties();1443123598;Returns {@link ParameterTool} from the system properties._Example on how to pass system properties:_-Dkey1=value1 -Dkey2=value2__@return A {@link ParameterTool};public static ParameterTool fromSystemProperties() {_		return fromMap((Map) System.getProperties())__	};returns,link,parameter,tool,from,the,system,properties,example,on,how,to,pass,system,properties,dkey1,value1,dkey2,value2,return,a,link,parameter,tool;public,static,parameter,tool,from,system,properties,return,from,map,map,system,get,properties
ParameterTool -> public static ParameterTool fromSystemProperties();1454679829;Returns {@link ParameterTool} from the system properties._Example on how to pass system properties:_-Dkey1=value1 -Dkey2=value2__@return A {@link ParameterTool};public static ParameterTool fromSystemProperties() {_		return fromMap((Map) System.getProperties())__	};returns,link,parameter,tool,from,the,system,properties,example,on,how,to,pass,system,properties,dkey1,value1,dkey2,value2,return,a,link,parameter,tool;public,static,parameter,tool,from,system,properties,return,from,map,map,system,get,properties
ParameterTool -> public static ParameterTool fromSystemProperties();1455101486;Returns {@link ParameterTool} from the system properties._Example on how to pass system properties:_-Dkey1=value1 -Dkey2=value2__@return A {@link ParameterTool};public static ParameterTool fromSystemProperties() {_		return fromMap((Map) System.getProperties())__	};returns,link,parameter,tool,from,the,system,properties,example,on,how,to,pass,system,properties,dkey1,value1,dkey2,value2,return,a,link,parameter,tool;public,static,parameter,tool,from,system,properties,return,from,map,map,system,get,properties
ParameterTool -> public static ParameterTool fromSystemProperties();1462899491;Returns {@link ParameterTool} from the system properties._Example on how to pass system properties:_-Dkey1=value1 -Dkey2=value2__@return A {@link ParameterTool};public static ParameterTool fromSystemProperties() {_		return fromMap((Map) System.getProperties())__	};returns,link,parameter,tool,from,the,system,properties,example,on,how,to,pass,system,properties,dkey1,value1,dkey2,value2,return,a,link,parameter,tool;public,static,parameter,tool,from,system,properties,return,from,map,map,system,get,properties
ParameterTool -> public static ParameterTool fromSystemProperties();1465462613;Returns {@link ParameterTool} from the system properties._Example on how to pass system properties:_-Dkey1=value1 -Dkey2=value2__@return A {@link ParameterTool};public static ParameterTool fromSystemProperties() {_		return fromMap((Map) System.getProperties())__	};returns,link,parameter,tool,from,the,system,properties,example,on,how,to,pass,system,properties,dkey1,value1,dkey2,value2,return,a,link,parameter,tool;public,static,parameter,tool,from,system,properties,return,from,map,map,system,get,properties
ParameterTool -> public static ParameterTool fromSystemProperties();1473329066;Returns {@link ParameterTool} from the system properties._Example on how to pass system properties:_-Dkey1=value1 -Dkey2=value2__@return A {@link ParameterTool};public static ParameterTool fromSystemProperties() {_		return fromMap((Map) System.getProperties())__	};returns,link,parameter,tool,from,the,system,properties,example,on,how,to,pass,system,properties,dkey1,value1,dkey2,value2,return,a,link,parameter,tool;public,static,parameter,tool,from,system,properties,return,from,map,map,system,get,properties
ParameterTool -> public static ParameterTool fromSystemProperties();1474022085;Returns {@link ParameterTool} from the system properties._Example on how to pass system properties:_-Dkey1=value1 -Dkey2=value2__@return A {@link ParameterTool};public static ParameterTool fromSystemProperties() {_		return fromMap((Map) System.getProperties())__	};returns,link,parameter,tool,from,the,system,properties,example,on,how,to,pass,system,properties,dkey1,value1,dkey2,value2,return,a,link,parameter,tool;public,static,parameter,tool,from,system,properties,return,from,map,map,system,get,properties
ParameterTool -> public static ParameterTool fromSystemProperties();1474626798;Returns {@link ParameterTool} from the system properties._Example on how to pass system properties:_-Dkey1=value1 -Dkey2=value2__@return A {@link ParameterTool};public static ParameterTool fromSystemProperties() {_		return fromMap((Map) System.getProperties())__	};returns,link,parameter,tool,from,the,system,properties,example,on,how,to,pass,system,properties,dkey1,value1,dkey2,value2,return,a,link,parameter,tool;public,static,parameter,tool,from,system,properties,return,from,map,map,system,get,properties
ParameterTool -> public static ParameterTool fromSystemProperties();1474626882;Returns {@link ParameterTool} from the system properties._Example on how to pass system properties:_-Dkey1=value1 -Dkey2=value2__@return A {@link ParameterTool};public static ParameterTool fromSystemProperties() {_		return fromMap((Map) System.getProperties())__	};returns,link,parameter,tool,from,the,system,properties,example,on,how,to,pass,system,properties,dkey1,value1,dkey2,value2,return,a,link,parameter,tool;public,static,parameter,tool,from,system,properties,return,from,map,map,system,get,properties
ParameterTool -> public static ParameterTool fromSystemProperties();1478107885;Returns {@link ParameterTool} from the system properties._Example on how to pass system properties:_-Dkey1=value1 -Dkey2=value2__@return A {@link ParameterTool};public static ParameterTool fromSystemProperties() {_		return fromMap((Map) System.getProperties())__	};returns,link,parameter,tool,from,the,system,properties,example,on,how,to,pass,system,properties,dkey1,value1,dkey2,value2,return,a,link,parameter,tool;public,static,parameter,tool,from,system,properties,return,from,map,map,system,get,properties
ParameterTool -> public static ParameterTool fromSystemProperties();1499777482;Returns {@link ParameterTool} from the system properties._Example on how to pass system properties:_-Dkey1=value1 -Dkey2=value2__@return A {@link ParameterTool};public static ParameterTool fromSystemProperties() {_		return fromMap((Map) System.getProperties())__	};returns,link,parameter,tool,from,the,system,properties,example,on,how,to,pass,system,properties,dkey1,value1,dkey2,value2,return,a,link,parameter,tool;public,static,parameter,tool,from,system,properties,return,from,map,map,system,get,properties
ParameterTool -> public static ParameterTool fromSystemProperties();1500387265;Returns {@link ParameterTool} from the system properties._Example on how to pass system properties:_-Dkey1=value1 -Dkey2=value2__@return A {@link ParameterTool};public static ParameterTool fromSystemProperties() {_		return fromMap((Map) System.getProperties())__	};returns,link,parameter,tool,from,the,system,properties,example,on,how,to,pass,system,properties,dkey1,value1,dkey2,value2,return,a,link,parameter,tool;public,static,parameter,tool,from,system,properties,return,from,map,map,system,get,properties
ParameterTool -> public static ParameterTool fromSystemProperties();1505831007;Returns {@link ParameterTool} from the system properties._Example on how to pass system properties:_-Dkey1=value1 -Dkey2=value2__@return A {@link ParameterTool};public static ParameterTool fromSystemProperties() {_		return fromMap((Map) System.getProperties())__	};returns,link,parameter,tool,from,the,system,properties,example,on,how,to,pass,system,properties,dkey1,value1,dkey2,value2,return,a,link,parameter,tool;public,static,parameter,tool,from,system,properties,return,from,map,map,system,get,properties
ParameterTool -> public static ParameterTool fromSystemProperties();1506499511;Returns {@link ParameterTool} from the system properties._Example on how to pass system properties:_-Dkey1=value1 -Dkey2=value2__@return A {@link ParameterTool};public static ParameterTool fromSystemProperties() {_		return fromMap((Map) System.getProperties())__	};returns,link,parameter,tool,from,the,system,properties,example,on,how,to,pass,system,properties,dkey1,value1,dkey2,value2,return,a,link,parameter,tool;public,static,parameter,tool,from,system,properties,return,from,map,map,system,get,properties
ParameterTool -> public static ParameterTool fromSystemProperties();1511189418;Returns {@link ParameterTool} from the system properties._Example on how to pass system properties:_-Dkey1=value1 -Dkey2=value2__@return A {@link ParameterTool};public static ParameterTool fromSystemProperties() {_		return fromMap((Map) System.getProperties())__	};returns,link,parameter,tool,from,the,system,properties,example,on,how,to,pass,system,properties,dkey1,value1,dkey2,value2,return,a,link,parameter,tool;public,static,parameter,tool,from,system,properties,return,from,map,map,system,get,properties
ParameterTool -> public static ParameterTool fromSystemProperties();1511966704;Returns {@link ParameterTool} from the system properties._Example on how to pass system properties:_-Dkey1=value1 -Dkey2=value2__@return A {@link ParameterTool};public static ParameterTool fromSystemProperties() {_		return fromMap((Map) System.getProperties())__	};returns,link,parameter,tool,from,the,system,properties,example,on,how,to,pass,system,properties,dkey1,value1,dkey2,value2,return,a,link,parameter,tool;public,static,parameter,tool,from,system,properties,return,from,map,map,system,get,properties
ParameterTool -> public static ParameterTool fromSystemProperties();1539096710;Returns {@link ParameterTool} from the system properties._Example on how to pass system properties:_-Dkey1=value1 -Dkey2=value2__@return A {@link ParameterTool};public static ParameterTool fromSystemProperties() {_		return fromMap((Map) System.getProperties())__	};returns,link,parameter,tool,from,the,system,properties,example,on,how,to,pass,system,properties,dkey1,value1,dkey2,value2,return,a,link,parameter,tool;public,static,parameter,tool,from,system,properties,return,from,map,map,system,get,properties
ParameterTool -> public static ParameterTool fromSystemProperties();1539096710;Returns {@link ParameterTool} from the system properties._Example on how to pass system properties:_-Dkey1=value1 -Dkey2=value2__@return A {@link ParameterTool};public static ParameterTool fromSystemProperties() {_		return fromMap((Map) System.getProperties())__	};returns,link,parameter,tool,from,the,system,properties,example,on,how,to,pass,system,properties,dkey1,value1,dkey2,value2,return,a,link,parameter,tool;public,static,parameter,tool,from,system,properties,return,from,map,map,system,get,properties
ParameterTool -> public Properties getProperties();1441981413;Returns a {@link Properties} object from this {@link ParameterTool}__@return A {@link Properties};public Properties getProperties() {_		Properties props = new Properties()__		props.putAll(this.data)__		return props__	};returns,a,link,properties,object,from,this,link,parameter,tool,return,a,link,properties;public,properties,get,properties,properties,props,new,properties,props,put,all,this,data,return,props
ParameterTool -> public Properties getProperties();1443123598;Returns a {@link Properties} object from this {@link ParameterTool}__@return A {@link Properties};public Properties getProperties() {_		Properties props = new Properties()__		props.putAll(this.data)__		return props__	};returns,a,link,properties,object,from,this,link,parameter,tool,return,a,link,properties;public,properties,get,properties,properties,props,new,properties,props,put,all,this,data,return,props
ParameterTool -> public Properties getProperties();1454679829;Returns a {@link Properties} object from this {@link ParameterTool}__@return A {@link Properties};public Properties getProperties() {_		Properties props = new Properties()__		props.putAll(this.data)__		return props__	};returns,a,link,properties,object,from,this,link,parameter,tool,return,a,link,properties;public,properties,get,properties,properties,props,new,properties,props,put,all,this,data,return,props
ParameterTool -> public Properties getProperties();1455101486;Returns a {@link Properties} object from this {@link ParameterTool}__@return A {@link Properties};public Properties getProperties() {_		Properties props = new Properties()__		props.putAll(this.data)__		return props__	};returns,a,link,properties,object,from,this,link,parameter,tool,return,a,link,properties;public,properties,get,properties,properties,props,new,properties,props,put,all,this,data,return,props
ParameterTool -> public Properties getProperties();1462899491;Returns a {@link Properties} object from this {@link ParameterTool}__@return A {@link Properties};public Properties getProperties() {_		Properties props = new Properties()__		props.putAll(this.data)__		return props__	};returns,a,link,properties,object,from,this,link,parameter,tool,return,a,link,properties;public,properties,get,properties,properties,props,new,properties,props,put,all,this,data,return,props
ParameterTool -> public Properties getProperties();1465462613;Returns a {@link Properties} object from this {@link ParameterTool}__@return A {@link Properties};public Properties getProperties() {_		Properties props = new Properties()__		props.putAll(this.data)__		return props__	};returns,a,link,properties,object,from,this,link,parameter,tool,return,a,link,properties;public,properties,get,properties,properties,props,new,properties,props,put,all,this,data,return,props
ParameterTool -> public Properties getProperties();1473329066;Returns a {@link Properties} object from this {@link ParameterTool}__@return A {@link Properties};public Properties getProperties() {_		Properties props = new Properties()__		props.putAll(this.data)__		return props__	};returns,a,link,properties,object,from,this,link,parameter,tool,return,a,link,properties;public,properties,get,properties,properties,props,new,properties,props,put,all,this,data,return,props
ParameterTool -> public Properties getProperties();1474022085;Returns a {@link Properties} object from this {@link ParameterTool}__@return A {@link Properties};public Properties getProperties() {_		Properties props = new Properties()__		props.putAll(this.data)__		return props__	};returns,a,link,properties,object,from,this,link,parameter,tool,return,a,link,properties;public,properties,get,properties,properties,props,new,properties,props,put,all,this,data,return,props
ParameterTool -> public Properties getProperties();1474626798;Returns a {@link Properties} object from this {@link ParameterTool}__@return A {@link Properties};public Properties getProperties() {_		Properties props = new Properties()__		props.putAll(this.data)__		return props__	};returns,a,link,properties,object,from,this,link,parameter,tool,return,a,link,properties;public,properties,get,properties,properties,props,new,properties,props,put,all,this,data,return,props
ParameterTool -> public Properties getProperties();1474626882;Returns a {@link Properties} object from this {@link ParameterTool}__@return A {@link Properties};public Properties getProperties() {_		Properties props = new Properties()__		props.putAll(this.data)__		return props__	};returns,a,link,properties,object,from,this,link,parameter,tool,return,a,link,properties;public,properties,get,properties,properties,props,new,properties,props,put,all,this,data,return,props
ParameterTool -> public Properties getProperties();1478107885;Returns a {@link Properties} object from this {@link ParameterTool}__@return A {@link Properties};public Properties getProperties() {_		Properties props = new Properties()__		props.putAll(this.data)__		return props__	};returns,a,link,properties,object,from,this,link,parameter,tool,return,a,link,properties;public,properties,get,properties,properties,props,new,properties,props,put,all,this,data,return,props
ParameterTool -> public Properties getProperties();1499777482;Returns a {@link Properties} object from this {@link ParameterTool}__@return A {@link Properties};public Properties getProperties() {_		Properties props = new Properties()__		props.putAll(this.data)__		return props__	};returns,a,link,properties,object,from,this,link,parameter,tool,return,a,link,properties;public,properties,get,properties,properties,props,new,properties,props,put,all,this,data,return,props
ParameterTool -> public Properties getProperties();1500387265;Returns a {@link Properties} object from this {@link ParameterTool}.__@return A {@link Properties};public Properties getProperties() {_		Properties props = new Properties()__		props.putAll(this.data)__		return props__	};returns,a,link,properties,object,from,this,link,parameter,tool,return,a,link,properties;public,properties,get,properties,properties,props,new,properties,props,put,all,this,data,return,props
ParameterTool -> public Properties getProperties();1505831007;Returns a {@link Properties} object from this {@link ParameterTool}.__@return A {@link Properties};public Properties getProperties() {_		Properties props = new Properties()__		props.putAll(this.data)__		return props__	};returns,a,link,properties,object,from,this,link,parameter,tool,return,a,link,properties;public,properties,get,properties,properties,props,new,properties,props,put,all,this,data,return,props
ParameterTool -> public Properties getProperties();1506499511;Returns a {@link Properties} object from this {@link ParameterTool}.__@return A {@link Properties};public Properties getProperties() {_		Properties props = new Properties()__		props.putAll(this.data)__		return props__	};returns,a,link,properties,object,from,this,link,parameter,tool,return,a,link,properties;public,properties,get,properties,properties,props,new,properties,props,put,all,this,data,return,props
ParameterTool -> public Properties getProperties();1511189418;Returns a {@link Properties} object from this {@link ParameterTool}.__@return A {@link Properties};public Properties getProperties() {_		Properties props = new Properties()__		props.putAll(this.data)__		return props__	};returns,a,link,properties,object,from,this,link,parameter,tool,return,a,link,properties;public,properties,get,properties,properties,props,new,properties,props,put,all,this,data,return,props
ParameterTool -> public Properties getProperties();1511966704;Returns a {@link Properties} object from this {@link ParameterTool}.__@return A {@link Properties};public Properties getProperties() {_		Properties props = new Properties()__		props.putAll(this.data)__		return props__	};returns,a,link,properties,object,from,this,link,parameter,tool,return,a,link,properties;public,properties,get,properties,properties,props,new,properties,props,put,all,this,data,return,props
ParameterTool -> public Properties getProperties();1539096710;Returns a {@link Properties} object from this {@link ParameterTool}.__@return A {@link Properties};public Properties getProperties() {_		Properties props = new Properties()__		props.putAll(this.data)__		return props__	};returns,a,link,properties,object,from,this,link,parameter,tool,return,a,link,properties;public,properties,get,properties,properties,props,new,properties,props,put,all,this,data,return,props
ParameterTool -> public Properties getProperties();1539096710;Returns a {@link Properties} object from this {@link ParameterTool}.__@return A {@link Properties};public Properties getProperties() {_		Properties props = new Properties()__		props.putAll(this.data)__		return props__	};returns,a,link,properties,object,from,this,link,parameter,tool,return,a,link,properties;public,properties,get,properties,properties,props,new,properties,props,put,all,this,data,return,props
ParameterTool -> @PublicEvolving 	public Set<String> getUnrequestedParameters();1499777482;Returns the set of parameter names which have not been requested with_{@link #has(String)} or one of the {@code get} methods. Access to the_map returned by {@link #toMap()} is not tracked.;@PublicEvolving_	public Set<String> getUnrequestedParameters() {_		return Collections.unmodifiableSet(unrequestedParameters)__	};returns,the,set,of,parameter,names,which,have,not,been,requested,with,link,has,string,or,one,of,the,code,get,methods,access,to,the,map,returned,by,link,to,map,is,not,tracked;public,evolving,public,set,string,get,unrequested,parameters,return,collections,unmodifiable,set,unrequested,parameters
ParameterTool -> @PublicEvolving 	public Set<String> getUnrequestedParameters();1500387265;Returns the set of parameter names which have not been requested with_{@link #has(String)} or one of the {@code get} methods. Access to the_map returned by {@link #toMap()} is not tracked.;@PublicEvolving_	public Set<String> getUnrequestedParameters() {_		return Collections.unmodifiableSet(unrequestedParameters)__	};returns,the,set,of,parameter,names,which,have,not,been,requested,with,link,has,string,or,one,of,the,code,get,methods,access,to,the,map,returned,by,link,to,map,is,not,tracked;public,evolving,public,set,string,get,unrequested,parameters,return,collections,unmodifiable,set,unrequested,parameters
ParameterTool -> @PublicEvolving 	public Set<String> getUnrequestedParameters();1505831007;Returns the set of parameter names which have not been requested with_{@link #has(String)} or one of the {@code get} methods. Access to the_map returned by {@link #toMap()} is not tracked.;@PublicEvolving_	public Set<String> getUnrequestedParameters() {_		return Collections.unmodifiableSet(unrequestedParameters)__	};returns,the,set,of,parameter,names,which,have,not,been,requested,with,link,has,string,or,one,of,the,code,get,methods,access,to,the,map,returned,by,link,to,map,is,not,tracked;public,evolving,public,set,string,get,unrequested,parameters,return,collections,unmodifiable,set,unrequested,parameters
ParameterTool -> @PublicEvolving 	public Set<String> getUnrequestedParameters();1506499511;Returns the set of parameter names which have not been requested with_{@link #has(String)} or one of the {@code get} methods. Access to the_map returned by {@link #toMap()} is not tracked.;@PublicEvolving_	public Set<String> getUnrequestedParameters() {_		return Collections.unmodifiableSet(unrequestedParameters)__	};returns,the,set,of,parameter,names,which,have,not,been,requested,with,link,has,string,or,one,of,the,code,get,methods,access,to,the,map,returned,by,link,to,map,is,not,tracked;public,evolving,public,set,string,get,unrequested,parameters,return,collections,unmodifiable,set,unrequested,parameters
ParameterTool -> @PublicEvolving 	public Set<String> getUnrequestedParameters();1511189418;Returns the set of parameter names which have not been requested with_{@link #has(String)} or one of the {@code get} methods. Access to the_map returned by {@link #toMap()} is not tracked.;@PublicEvolving_	public Set<String> getUnrequestedParameters() {_		return Collections.unmodifiableSet(unrequestedParameters)__	};returns,the,set,of,parameter,names,which,have,not,been,requested,with,link,has,string,or,one,of,the,code,get,methods,access,to,the,map,returned,by,link,to,map,is,not,tracked;public,evolving,public,set,string,get,unrequested,parameters,return,collections,unmodifiable,set,unrequested,parameters
ParameterTool -> @PublicEvolving 	public Set<String> getUnrequestedParameters();1511966704;Returns the set of parameter names which have not been requested with_{@link #has(String)} or one of the {@code get} methods. Access to the_map returned by {@link #toMap()} is not tracked.;@PublicEvolving_	public Set<String> getUnrequestedParameters() {_		return Collections.unmodifiableSet(unrequestedParameters)__	};returns,the,set,of,parameter,names,which,have,not,been,requested,with,link,has,string,or,one,of,the,code,get,methods,access,to,the,map,returned,by,link,to,map,is,not,tracked;public,evolving,public,set,string,get,unrequested,parameters,return,collections,unmodifiable,set,unrequested,parameters
ParameterTool -> @PublicEvolving 	public Set<String> getUnrequestedParameters();1539096710;Returns the set of parameter names which have not been requested with_{@link #has(String)} or one of the {@code get} methods. Access to the_map returned by {@link #toMap()} is not tracked.;@PublicEvolving_	public Set<String> getUnrequestedParameters() {_		return Collections.unmodifiableSet(unrequestedParameters)__	};returns,the,set,of,parameter,names,which,have,not,been,requested,with,link,has,string,or,one,of,the,code,get,methods,access,to,the,map,returned,by,link,to,map,is,not,tracked;public,evolving,public,set,string,get,unrequested,parameters,return,collections,unmodifiable,set,unrequested,parameters
ParameterTool -> @PublicEvolving 	public Set<String> getUnrequestedParameters();1539096710;Returns the set of parameter names which have not been requested with_{@link #has(String)} or one of the {@code get} methods. Access to the_map returned by {@link #toMap()} is not tracked.;@PublicEvolving_	public Set<String> getUnrequestedParameters() {_		return Collections.unmodifiableSet(unrequestedParameters)__	};returns,the,set,of,parameter,names,which,have,not,been,requested,with,link,has,string,or,one,of,the,code,get,methods,access,to,the,map,returned,by,link,to,map,is,not,tracked;public,evolving,public,set,string,get,unrequested,parameters,return,collections,unmodifiable,set,unrequested,parameters
ParameterTool -> public short getShort(String key);1443123598;Returns the Short value for the given key._The method fails if the key does not exist.;public short getShort(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Short.valueOf(value)__	};returns,the,short,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,short,get,short,string,key,add,to,defaults,key,null,string,value,get,required,key,return,short,value,of,value
ParameterTool -> public short getShort(String key);1454679829;Returns the Short value for the given key._The method fails if the key does not exist.;public short getShort(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Short.valueOf(value)__	};returns,the,short,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,short,get,short,string,key,add,to,defaults,key,null,string,value,get,required,key,return,short,value,of,value
ParameterTool -> public short getShort(String key);1455101486;Returns the Short value for the given key._The method fails if the key does not exist.;public short getShort(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Short.valueOf(value)__	};returns,the,short,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,short,get,short,string,key,add,to,defaults,key,null,string,value,get,required,key,return,short,value,of,value
ParameterTool -> public short getShort(String key);1462899491;Returns the Short value for the given key._The method fails if the key does not exist.;public short getShort(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Short.valueOf(value)__	};returns,the,short,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,short,get,short,string,key,add,to,defaults,key,null,string,value,get,required,key,return,short,value,of,value
ParameterTool -> public short getShort(String key);1465462613;Returns the Short value for the given key._The method fails if the key does not exist.;public short getShort(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Short.valueOf(value)__	};returns,the,short,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,short,get,short,string,key,add,to,defaults,key,null,string,value,get,required,key,return,short,value,of,value
ParameterTool -> public short getShort(String key);1473329066;Returns the Short value for the given key._The method fails if the key does not exist.;public short getShort(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Short.valueOf(value)__	};returns,the,short,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,short,get,short,string,key,add,to,defaults,key,null,string,value,get,required,key,return,short,value,of,value
ParameterTool -> public short getShort(String key);1474022085;Returns the Short value for the given key._The method fails if the key does not exist.;public short getShort(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Short.valueOf(value)__	};returns,the,short,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,short,get,short,string,key,add,to,defaults,key,null,string,value,get,required,key,return,short,value,of,value
ParameterTool -> public short getShort(String key);1474626798;Returns the Short value for the given key._The method fails if the key does not exist.;public short getShort(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Short.valueOf(value)__	};returns,the,short,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,short,get,short,string,key,add,to,defaults,key,null,string,value,get,required,key,return,short,value,of,value
ParameterTool -> public short getShort(String key);1474626882;Returns the Short value for the given key._The method fails if the key does not exist.;public short getShort(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Short.valueOf(value)__	};returns,the,short,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,short,get,short,string,key,add,to,defaults,key,null,string,value,get,required,key,return,short,value,of,value
ParameterTool -> public short getShort(String key);1478107885;Returns the Short value for the given key._The method fails if the key does not exist.;public short getShort(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Short.valueOf(value)__	};returns,the,short,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,short,get,short,string,key,add,to,defaults,key,null,string,value,get,required,key,return,short,value,of,value
ParameterTool -> public short getShort(String key);1499777482;Returns the Short value for the given key._The method fails if the key does not exist.;public short getShort(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Short.valueOf(value)__	};returns,the,short,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,short,get,short,string,key,add,to,defaults,key,null,string,value,get,required,key,return,short,value,of,value
ParameterTool -> public short getShort(String key);1500387265;Returns the Short value for the given key._The method fails if the key does not exist.;public short getShort(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Short.valueOf(value)__	};returns,the,short,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,short,get,short,string,key,add,to,defaults,key,null,string,value,get,required,key,return,short,value,of,value
ParameterTool -> public short getShort(String key);1505831007;Returns the Short value for the given key._The method fails if the key does not exist.;public short getShort(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Short.valueOf(value)__	};returns,the,short,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,short,get,short,string,key,add,to,defaults,key,null,string,value,get,required,key,return,short,value,of,value
ParameterTool -> public short getShort(String key);1506499511;Returns the Short value for the given key._The method fails if the key does not exist.;public short getShort(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Short.valueOf(value)__	};returns,the,short,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,short,get,short,string,key,add,to,defaults,key,null,string,value,get,required,key,return,short,value,of,value
ParameterTool -> public short getShort(String key);1511189418;Returns the Short value for the given key._The method fails if the key does not exist.;public short getShort(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Short.valueOf(value)__	};returns,the,short,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,short,get,short,string,key,add,to,defaults,key,null,string,value,get,required,key,return,short,value,of,value
ParameterTool -> public short getShort(String key);1511966704;Returns the Short value for the given key._The method fails if the key does not exist.;public short getShort(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Short.valueOf(value)__	};returns,the,short,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,short,get,short,string,key,add,to,defaults,key,null,string,value,get,required,key,return,short,value,of,value
ParameterTool -> public short getShort(String key);1539096710;Returns the Short value for the given key._The method fails if the key does not exist.;public short getShort(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Short.valueOf(value)__	};returns,the,short,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,short,get,short,string,key,add,to,defaults,key,null,string,value,get,required,key,return,short,value,of,value
ParameterTool -> public short getShort(String key);1539096710;Returns the Short value for the given key._The method fails if the key does not exist.;public short getShort(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Short.valueOf(value)__	};returns,the,short,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,short,get,short,string,key,add,to,defaults,key,null,string,value,get,required,key,return,short,value,of,value
ParameterTool -> public static ParameterTool fromGenericOptionsParser(String[] args) throws IOException;1441981413;Returns {@link ParameterTool} for the arguments parsed by {@link GenericOptionsParser}__@param args Input array arguments. It should be parsable by {@link GenericOptionsParser}_@return A {@link ParameterTool}_@throws IOException If arguments cannot be parsed by {@link GenericOptionsParser}_@see GenericOptionsParser;public static ParameterTool fromGenericOptionsParser(String[] args) throws IOException {_		Option[] options = new GenericOptionsParser(args).getCommandLine().getOptions()__		Map<String, String> map = new HashMap<String, String>()__		for (Option option : options) {_			String[] split = option.getValue().split("=")__			map.put(split[0], split[1])__		}_		return fromMap(map)__	};returns,link,parameter,tool,for,the,arguments,parsed,by,link,generic,options,parser,param,args,input,array,arguments,it,should,be,parsable,by,link,generic,options,parser,return,a,link,parameter,tool,throws,ioexception,if,arguments,cannot,be,parsed,by,link,generic,options,parser,see,generic,options,parser;public,static,parameter,tool,from,generic,options,parser,string,args,throws,ioexception,option,options,new,generic,options,parser,args,get,command,line,get,options,map,string,string,map,new,hash,map,string,string,for,option,option,options,string,split,option,get,value,split,map,put,split,0,split,1,return,from,map,map
ParameterTool -> public static ParameterTool fromGenericOptionsParser(String[] args) throws IOException;1443123598;Returns {@link ParameterTool} for the arguments parsed by {@link GenericOptionsParser}__@param args Input array arguments. It should be parsable by {@link GenericOptionsParser}_@return A {@link ParameterTool}_@throws IOException If arguments cannot be parsed by {@link GenericOptionsParser}_@see GenericOptionsParser;public static ParameterTool fromGenericOptionsParser(String[] args) throws IOException {_		Option[] options = new GenericOptionsParser(args).getCommandLine().getOptions()__		Map<String, String> map = new HashMap<String, String>()__		for (Option option : options) {_			String[] split = option.getValue().split("=")__			map.put(split[0], split[1])__		}_		return fromMap(map)__	};returns,link,parameter,tool,for,the,arguments,parsed,by,link,generic,options,parser,param,args,input,array,arguments,it,should,be,parsable,by,link,generic,options,parser,return,a,link,parameter,tool,throws,ioexception,if,arguments,cannot,be,parsed,by,link,generic,options,parser,see,generic,options,parser;public,static,parameter,tool,from,generic,options,parser,string,args,throws,ioexception,option,options,new,generic,options,parser,args,get,command,line,get,options,map,string,string,map,new,hash,map,string,string,for,option,option,options,string,split,option,get,value,split,map,put,split,0,split,1,return,from,map,map
ParameterTool -> public static ParameterTool fromMap(Map<String, String> map);1441981413;Returns {@link ParameterTool} for the given map__@param map A map of arguments. Both Key and Value have to be Strings_@return A {@link ParameterTool};public static ParameterTool fromMap(Map<String, String> map) {_		Preconditions.checkNotNull(map, "Unable to initialize from empty map")__		return new ParameterTool(map)__	};returns,link,parameter,tool,for,the,given,map,param,map,a,map,of,arguments,both,key,and,value,have,to,be,strings,return,a,link,parameter,tool;public,static,parameter,tool,from,map,map,string,string,map,preconditions,check,not,null,map,unable,to,initialize,from,empty,map,return,new,parameter,tool,map
ParameterTool -> public static ParameterTool fromMap(Map<String, String> map);1443123598;Returns {@link ParameterTool} for the given map__@param map A map of arguments. Both Key and Value have to be Strings_@return A {@link ParameterTool};public static ParameterTool fromMap(Map<String, String> map) {_		Preconditions.checkNotNull(map, "Unable to initialize from empty map")__		return new ParameterTool(map)__	};returns,link,parameter,tool,for,the,given,map,param,map,a,map,of,arguments,both,key,and,value,have,to,be,strings,return,a,link,parameter,tool;public,static,parameter,tool,from,map,map,string,string,map,preconditions,check,not,null,map,unable,to,initialize,from,empty,map,return,new,parameter,tool,map
ParameterTool -> public static ParameterTool fromMap(Map<String, String> map);1454679829;Returns {@link ParameterTool} for the given map__@param map A map of arguments. Both Key and Value have to be Strings_@return A {@link ParameterTool};public static ParameterTool fromMap(Map<String, String> map) {_		Preconditions.checkNotNull(map, "Unable to initialize from empty map")__		return new ParameterTool(map)__	};returns,link,parameter,tool,for,the,given,map,param,map,a,map,of,arguments,both,key,and,value,have,to,be,strings,return,a,link,parameter,tool;public,static,parameter,tool,from,map,map,string,string,map,preconditions,check,not,null,map,unable,to,initialize,from,empty,map,return,new,parameter,tool,map
ParameterTool -> public static ParameterTool fromMap(Map<String, String> map);1455101486;Returns {@link ParameterTool} for the given map__@param map A map of arguments. Both Key and Value have to be Strings_@return A {@link ParameterTool};public static ParameterTool fromMap(Map<String, String> map) {_		Preconditions.checkNotNull(map, "Unable to initialize from empty map")__		return new ParameterTool(map)__	};returns,link,parameter,tool,for,the,given,map,param,map,a,map,of,arguments,both,key,and,value,have,to,be,strings,return,a,link,parameter,tool;public,static,parameter,tool,from,map,map,string,string,map,preconditions,check,not,null,map,unable,to,initialize,from,empty,map,return,new,parameter,tool,map
ParameterTool -> public static ParameterTool fromMap(Map<String, String> map);1462899491;Returns {@link ParameterTool} for the given map__@param map A map of arguments. Both Key and Value have to be Strings_@return A {@link ParameterTool};public static ParameterTool fromMap(Map<String, String> map) {_		Preconditions.checkNotNull(map, "Unable to initialize from empty map")__		return new ParameterTool(map)__	};returns,link,parameter,tool,for,the,given,map,param,map,a,map,of,arguments,both,key,and,value,have,to,be,strings,return,a,link,parameter,tool;public,static,parameter,tool,from,map,map,string,string,map,preconditions,check,not,null,map,unable,to,initialize,from,empty,map,return,new,parameter,tool,map
ParameterTool -> public static ParameterTool fromMap(Map<String, String> map);1465462613;Returns {@link ParameterTool} for the given map__@param map A map of arguments. Both Key and Value have to be Strings_@return A {@link ParameterTool};public static ParameterTool fromMap(Map<String, String> map) {_		Preconditions.checkNotNull(map, "Unable to initialize from empty map")__		return new ParameterTool(map)__	};returns,link,parameter,tool,for,the,given,map,param,map,a,map,of,arguments,both,key,and,value,have,to,be,strings,return,a,link,parameter,tool;public,static,parameter,tool,from,map,map,string,string,map,preconditions,check,not,null,map,unable,to,initialize,from,empty,map,return,new,parameter,tool,map
ParameterTool -> public static ParameterTool fromMap(Map<String, String> map);1473329066;Returns {@link ParameterTool} for the given map__@param map A map of arguments. Both Key and Value have to be Strings_@return A {@link ParameterTool};public static ParameterTool fromMap(Map<String, String> map) {_		Preconditions.checkNotNull(map, "Unable to initialize from empty map")__		return new ParameterTool(map)__	};returns,link,parameter,tool,for,the,given,map,param,map,a,map,of,arguments,both,key,and,value,have,to,be,strings,return,a,link,parameter,tool;public,static,parameter,tool,from,map,map,string,string,map,preconditions,check,not,null,map,unable,to,initialize,from,empty,map,return,new,parameter,tool,map
ParameterTool -> public static ParameterTool fromMap(Map<String, String> map);1474022085;Returns {@link ParameterTool} for the given map__@param map A map of arguments. Both Key and Value have to be Strings_@return A {@link ParameterTool};public static ParameterTool fromMap(Map<String, String> map) {_		Preconditions.checkNotNull(map, "Unable to initialize from empty map")__		return new ParameterTool(map)__	};returns,link,parameter,tool,for,the,given,map,param,map,a,map,of,arguments,both,key,and,value,have,to,be,strings,return,a,link,parameter,tool;public,static,parameter,tool,from,map,map,string,string,map,preconditions,check,not,null,map,unable,to,initialize,from,empty,map,return,new,parameter,tool,map
ParameterTool -> public static ParameterTool fromMap(Map<String, String> map);1474626798;Returns {@link ParameterTool} for the given map__@param map A map of arguments. Both Key and Value have to be Strings_@return A {@link ParameterTool};public static ParameterTool fromMap(Map<String, String> map) {_		Preconditions.checkNotNull(map, "Unable to initialize from empty map")__		return new ParameterTool(map)__	};returns,link,parameter,tool,for,the,given,map,param,map,a,map,of,arguments,both,key,and,value,have,to,be,strings,return,a,link,parameter,tool;public,static,parameter,tool,from,map,map,string,string,map,preconditions,check,not,null,map,unable,to,initialize,from,empty,map,return,new,parameter,tool,map
ParameterTool -> public static ParameterTool fromMap(Map<String, String> map);1474626882;Returns {@link ParameterTool} for the given map__@param map A map of arguments. Both Key and Value have to be Strings_@return A {@link ParameterTool};public static ParameterTool fromMap(Map<String, String> map) {_		Preconditions.checkNotNull(map, "Unable to initialize from empty map")__		return new ParameterTool(map)__	};returns,link,parameter,tool,for,the,given,map,param,map,a,map,of,arguments,both,key,and,value,have,to,be,strings,return,a,link,parameter,tool;public,static,parameter,tool,from,map,map,string,string,map,preconditions,check,not,null,map,unable,to,initialize,from,empty,map,return,new,parameter,tool,map
ParameterTool -> public static ParameterTool fromMap(Map<String, String> map);1478107885;Returns {@link ParameterTool} for the given map__@param map A map of arguments. Both Key and Value have to be Strings_@return A {@link ParameterTool};public static ParameterTool fromMap(Map<String, String> map) {_		Preconditions.checkNotNull(map, "Unable to initialize from empty map")__		return new ParameterTool(map)__	};returns,link,parameter,tool,for,the,given,map,param,map,a,map,of,arguments,both,key,and,value,have,to,be,strings,return,a,link,parameter,tool;public,static,parameter,tool,from,map,map,string,string,map,preconditions,check,not,null,map,unable,to,initialize,from,empty,map,return,new,parameter,tool,map
ParameterTool -> public static ParameterTool fromMap(Map<String, String> map);1499777482;Returns {@link ParameterTool} for the given map__@param map A map of arguments. Both Key and Value have to be Strings_@return A {@link ParameterTool};public static ParameterTool fromMap(Map<String, String> map) {_		Preconditions.checkNotNull(map, "Unable to initialize from empty map")__		return new ParameterTool(map)__	};returns,link,parameter,tool,for,the,given,map,param,map,a,map,of,arguments,both,key,and,value,have,to,be,strings,return,a,link,parameter,tool;public,static,parameter,tool,from,map,map,string,string,map,preconditions,check,not,null,map,unable,to,initialize,from,empty,map,return,new,parameter,tool,map
ParameterTool -> public static ParameterTool fromMap(Map<String, String> map);1500387265;Returns {@link ParameterTool} for the given map.__@param map A map of arguments. Both Key and Value have to be Strings_@return A {@link ParameterTool};public static ParameterTool fromMap(Map<String, String> map) {_		Preconditions.checkNotNull(map, "Unable to initialize from empty map")__		return new ParameterTool(map)__	};returns,link,parameter,tool,for,the,given,map,param,map,a,map,of,arguments,both,key,and,value,have,to,be,strings,return,a,link,parameter,tool;public,static,parameter,tool,from,map,map,string,string,map,preconditions,check,not,null,map,unable,to,initialize,from,empty,map,return,new,parameter,tool,map
ParameterTool -> public static ParameterTool fromMap(Map<String, String> map);1505831007;Returns {@link ParameterTool} for the given map.__@param map A map of arguments. Both Key and Value have to be Strings_@return A {@link ParameterTool};public static ParameterTool fromMap(Map<String, String> map) {_		Preconditions.checkNotNull(map, "Unable to initialize from empty map")__		return new ParameterTool(map)__	};returns,link,parameter,tool,for,the,given,map,param,map,a,map,of,arguments,both,key,and,value,have,to,be,strings,return,a,link,parameter,tool;public,static,parameter,tool,from,map,map,string,string,map,preconditions,check,not,null,map,unable,to,initialize,from,empty,map,return,new,parameter,tool,map
ParameterTool -> public static ParameterTool fromMap(Map<String, String> map);1506499511;Returns {@link ParameterTool} for the given map.__@param map A map of arguments. Both Key and Value have to be Strings_@return A {@link ParameterTool};public static ParameterTool fromMap(Map<String, String> map) {_		Preconditions.checkNotNull(map, "Unable to initialize from empty map")__		return new ParameterTool(map)__	};returns,link,parameter,tool,for,the,given,map,param,map,a,map,of,arguments,both,key,and,value,have,to,be,strings,return,a,link,parameter,tool;public,static,parameter,tool,from,map,map,string,string,map,preconditions,check,not,null,map,unable,to,initialize,from,empty,map,return,new,parameter,tool,map
ParameterTool -> public static ParameterTool fromMap(Map<String, String> map);1511189418;Returns {@link ParameterTool} for the given map.__@param map A map of arguments. Both Key and Value have to be Strings_@return A {@link ParameterTool};public static ParameterTool fromMap(Map<String, String> map) {_		Preconditions.checkNotNull(map, "Unable to initialize from empty map")__		return new ParameterTool(map)__	};returns,link,parameter,tool,for,the,given,map,param,map,a,map,of,arguments,both,key,and,value,have,to,be,strings,return,a,link,parameter,tool;public,static,parameter,tool,from,map,map,string,string,map,preconditions,check,not,null,map,unable,to,initialize,from,empty,map,return,new,parameter,tool,map
ParameterTool -> public static ParameterTool fromMap(Map<String, String> map);1511966704;Returns {@link ParameterTool} for the given map.__@param map A map of arguments. Both Key and Value have to be Strings_@return A {@link ParameterTool};public static ParameterTool fromMap(Map<String, String> map) {_		Preconditions.checkNotNull(map, "Unable to initialize from empty map")__		return new ParameterTool(map)__	};returns,link,parameter,tool,for,the,given,map,param,map,a,map,of,arguments,both,key,and,value,have,to,be,strings,return,a,link,parameter,tool;public,static,parameter,tool,from,map,map,string,string,map,preconditions,check,not,null,map,unable,to,initialize,from,empty,map,return,new,parameter,tool,map
ParameterTool -> public static ParameterTool fromMap(Map<String, String> map);1539096710;Returns {@link ParameterTool} for the given map.__@param map A map of arguments. Both Key and Value have to be Strings_@return A {@link ParameterTool};public static ParameterTool fromMap(Map<String, String> map) {_		Preconditions.checkNotNull(map, "Unable to initialize from empty map")__		return new ParameterTool(map)__	};returns,link,parameter,tool,for,the,given,map,param,map,a,map,of,arguments,both,key,and,value,have,to,be,strings,return,a,link,parameter,tool;public,static,parameter,tool,from,map,map,string,string,map,preconditions,check,not,null,map,unable,to,initialize,from,empty,map,return,new,parameter,tool,map
ParameterTool -> public static ParameterTool fromMap(Map<String, String> map);1539096710;Returns {@link ParameterTool} for the given map.__@param map A map of arguments. Both Key and Value have to be Strings_@return A {@link ParameterTool};public static ParameterTool fromMap(Map<String, String> map) {_		Preconditions.checkNotNull(map, "Unable to initialize from empty map")__		return new ParameterTool(map)__	};returns,link,parameter,tool,for,the,given,map,param,map,a,map,of,arguments,both,key,and,value,have,to,be,strings,return,a,link,parameter,tool;public,static,parameter,tool,from,map,map,string,string,map,preconditions,check,not,null,map,unable,to,initialize,from,empty,map,return,new,parameter,tool,map
ParameterTool -> public String get(String key, String defaultValue);1441981413;Returns the String value for the given key._If the key does not exist it will return the given default value.;public String get(String key, String defaultValue) {_		addToDefaults(key, defaultValue)__		String value = get(key)__		if(value == null) {_			return defaultValue__		} else {_			return value__		}_	};returns,the,string,value,for,the,given,key,if,the,key,does,not,exist,it,will,return,the,given,default,value;public,string,get,string,key,string,default,value,add,to,defaults,key,default,value,string,value,get,key,if,value,null,return,default,value,else,return,value
ParameterTool -> public String get(String key, String defaultValue);1443123598;Returns the String value for the given key._If the key does not exist it will return the given default value.;public String get(String key, String defaultValue) {_		addToDefaults(key, defaultValue)__		String value = get(key)__		if(value == null) {_			return defaultValue__		} else {_			return value__		}_	};returns,the,string,value,for,the,given,key,if,the,key,does,not,exist,it,will,return,the,given,default,value;public,string,get,string,key,string,default,value,add,to,defaults,key,default,value,string,value,get,key,if,value,null,return,default,value,else,return,value
ParameterTool -> public String get(String key, String defaultValue);1454679829;Returns the String value for the given key._If the key does not exist it will return the given default value.;public String get(String key, String defaultValue) {_		addToDefaults(key, defaultValue)__		String value = get(key)__		if(value == null) {_			return defaultValue__		} else {_			return value__		}_	};returns,the,string,value,for,the,given,key,if,the,key,does,not,exist,it,will,return,the,given,default,value;public,string,get,string,key,string,default,value,add,to,defaults,key,default,value,string,value,get,key,if,value,null,return,default,value,else,return,value
ParameterTool -> public String get(String key, String defaultValue);1455101486;Returns the String value for the given key._If the key does not exist it will return the given default value.;public String get(String key, String defaultValue) {_		addToDefaults(key, defaultValue)__		String value = get(key)__		if(value == null) {_			return defaultValue__		} else {_			return value__		}_	};returns,the,string,value,for,the,given,key,if,the,key,does,not,exist,it,will,return,the,given,default,value;public,string,get,string,key,string,default,value,add,to,defaults,key,default,value,string,value,get,key,if,value,null,return,default,value,else,return,value
ParameterTool -> public String get(String key, String defaultValue);1462899491;Returns the String value for the given key._If the key does not exist it will return the given default value.;public String get(String key, String defaultValue) {_		addToDefaults(key, defaultValue)__		String value = get(key)__		if(value == null) {_			return defaultValue__		} else {_			return value__		}_	};returns,the,string,value,for,the,given,key,if,the,key,does,not,exist,it,will,return,the,given,default,value;public,string,get,string,key,string,default,value,add,to,defaults,key,default,value,string,value,get,key,if,value,null,return,default,value,else,return,value
ParameterTool -> public String get(String key, String defaultValue);1465462613;Returns the String value for the given key._If the key does not exist it will return the given default value.;public String get(String key, String defaultValue) {_		addToDefaults(key, defaultValue)__		String value = get(key)__		if(value == null) {_			return defaultValue__		} else {_			return value__		}_	};returns,the,string,value,for,the,given,key,if,the,key,does,not,exist,it,will,return,the,given,default,value;public,string,get,string,key,string,default,value,add,to,defaults,key,default,value,string,value,get,key,if,value,null,return,default,value,else,return,value
ParameterTool -> public String get(String key, String defaultValue);1473329066;Returns the String value for the given key._If the key does not exist it will return the given default value.;public String get(String key, String defaultValue) {_		addToDefaults(key, defaultValue)__		String value = get(key)__		if(value == null) {_			return defaultValue__		} else {_			return value__		}_	};returns,the,string,value,for,the,given,key,if,the,key,does,not,exist,it,will,return,the,given,default,value;public,string,get,string,key,string,default,value,add,to,defaults,key,default,value,string,value,get,key,if,value,null,return,default,value,else,return,value
ParameterTool -> public String get(String key, String defaultValue);1474022085;Returns the String value for the given key._If the key does not exist it will return the given default value.;public String get(String key, String defaultValue) {_		addToDefaults(key, defaultValue)__		String value = get(key)__		if(value == null) {_			return defaultValue__		} else {_			return value__		}_	};returns,the,string,value,for,the,given,key,if,the,key,does,not,exist,it,will,return,the,given,default,value;public,string,get,string,key,string,default,value,add,to,defaults,key,default,value,string,value,get,key,if,value,null,return,default,value,else,return,value
ParameterTool -> public String get(String key, String defaultValue);1474626798;Returns the String value for the given key._If the key does not exist it will return the given default value.;public String get(String key, String defaultValue) {_		addToDefaults(key, defaultValue)__		String value = get(key)__		if(value == null) {_			return defaultValue__		} else {_			return value__		}_	};returns,the,string,value,for,the,given,key,if,the,key,does,not,exist,it,will,return,the,given,default,value;public,string,get,string,key,string,default,value,add,to,defaults,key,default,value,string,value,get,key,if,value,null,return,default,value,else,return,value
ParameterTool -> public String get(String key, String defaultValue);1474626882;Returns the String value for the given key._If the key does not exist it will return the given default value.;public String get(String key, String defaultValue) {_		addToDefaults(key, defaultValue)__		String value = get(key)__		if(value == null) {_			return defaultValue__		} else {_			return value__		}_	};returns,the,string,value,for,the,given,key,if,the,key,does,not,exist,it,will,return,the,given,default,value;public,string,get,string,key,string,default,value,add,to,defaults,key,default,value,string,value,get,key,if,value,null,return,default,value,else,return,value
ParameterTool -> public String get(String key, String defaultValue);1478107885;Returns the String value for the given key._If the key does not exist it will return the given default value.;public String get(String key, String defaultValue) {_		addToDefaults(key, defaultValue)__		String value = get(key)__		if(value == null) {_			return defaultValue__		} else {_			return value__		}_	};returns,the,string,value,for,the,given,key,if,the,key,does,not,exist,it,will,return,the,given,default,value;public,string,get,string,key,string,default,value,add,to,defaults,key,default,value,string,value,get,key,if,value,null,return,default,value,else,return,value
ParameterTool -> public String get(String key, String defaultValue);1499777482;Returns the String value for the given key._If the key does not exist it will return the given default value.;public String get(String key, String defaultValue) {_		addToDefaults(key, defaultValue)__		String value = get(key)__		if(value == null) {_			return defaultValue__		} else {_			return value__		}_	};returns,the,string,value,for,the,given,key,if,the,key,does,not,exist,it,will,return,the,given,default,value;public,string,get,string,key,string,default,value,add,to,defaults,key,default,value,string,value,get,key,if,value,null,return,default,value,else,return,value
ParameterTool -> public String get(String key, String defaultValue);1500387265;Returns the String value for the given key._If the key does not exist it will return the given default value.;public String get(String key, String defaultValue) {_		addToDefaults(key, defaultValue)__		String value = get(key)__		if (value == null) {_			return defaultValue__		} else {_			return value__		}_	};returns,the,string,value,for,the,given,key,if,the,key,does,not,exist,it,will,return,the,given,default,value;public,string,get,string,key,string,default,value,add,to,defaults,key,default,value,string,value,get,key,if,value,null,return,default,value,else,return,value
ParameterTool -> public String get(String key, String defaultValue);1505831007;Returns the String value for the given key._If the key does not exist it will return the given default value.;public String get(String key, String defaultValue) {_		addToDefaults(key, defaultValue)__		String value = get(key)__		if (value == null) {_			return defaultValue__		} else {_			return value__		}_	};returns,the,string,value,for,the,given,key,if,the,key,does,not,exist,it,will,return,the,given,default,value;public,string,get,string,key,string,default,value,add,to,defaults,key,default,value,string,value,get,key,if,value,null,return,default,value,else,return,value
ParameterTool -> public String get(String key, String defaultValue);1506499511;Returns the String value for the given key._If the key does not exist it will return the given default value.;public String get(String key, String defaultValue) {_		addToDefaults(key, defaultValue)__		String value = get(key)__		if (value == null) {_			return defaultValue__		} else {_			return value__		}_	};returns,the,string,value,for,the,given,key,if,the,key,does,not,exist,it,will,return,the,given,default,value;public,string,get,string,key,string,default,value,add,to,defaults,key,default,value,string,value,get,key,if,value,null,return,default,value,else,return,value
ParameterTool -> public String get(String key, String defaultValue);1511189418;Returns the String value for the given key._If the key does not exist it will return the given default value.;public String get(String key, String defaultValue) {_		addToDefaults(key, defaultValue)__		String value = get(key)__		if (value == null) {_			return defaultValue__		} else {_			return value__		}_	};returns,the,string,value,for,the,given,key,if,the,key,does,not,exist,it,will,return,the,given,default,value;public,string,get,string,key,string,default,value,add,to,defaults,key,default,value,string,value,get,key,if,value,null,return,default,value,else,return,value
ParameterTool -> public String get(String key, String defaultValue);1511966704;Returns the String value for the given key._If the key does not exist it will return the given default value.;public String get(String key, String defaultValue) {_		addToDefaults(key, defaultValue)__		String value = get(key)__		if (value == null) {_			return defaultValue__		} else {_			return value__		}_	};returns,the,string,value,for,the,given,key,if,the,key,does,not,exist,it,will,return,the,given,default,value;public,string,get,string,key,string,default,value,add,to,defaults,key,default,value,string,value,get,key,if,value,null,return,default,value,else,return,value
ParameterTool -> public String get(String key, String defaultValue);1539096710;Returns the String value for the given key._If the key does not exist it will return the given default value.;public String get(String key, String defaultValue) {_		addToDefaults(key, defaultValue)__		String value = get(key)__		if (value == null) {_			return defaultValue__		} else {_			return value__		}_	};returns,the,string,value,for,the,given,key,if,the,key,does,not,exist,it,will,return,the,given,default,value;public,string,get,string,key,string,default,value,add,to,defaults,key,default,value,string,value,get,key,if,value,null,return,default,value,else,return,value
ParameterTool -> public String get(String key, String defaultValue);1539096710;Returns the String value for the given key._If the key does not exist it will return the given default value.;public String get(String key, String defaultValue) {_		addToDefaults(key, defaultValue)__		String value = get(key)__		if (value == null) {_			return defaultValue__		} else {_			return value__		}_	};returns,the,string,value,for,the,given,key,if,the,key,does,not,exist,it,will,return,the,given,default,value;public,string,get,string,key,string,default,value,add,to,defaults,key,default,value,string,value,get,key,if,value,null,return,default,value,else,return,value
ParameterTool -> public Configuration getConfiguration();1441981413;Returns a {@link Configuration} object from this {@link ParameterTool}__@return A {@link Configuration};public Configuration getConfiguration() {_		Configuration conf = new Configuration()__		for(Map.Entry<String, String> entry: data.entrySet()) {_			conf.setString(entry.getKey(), entry.getValue())__		}_		return conf__	};returns,a,link,configuration,object,from,this,link,parameter,tool,return,a,link,configuration;public,configuration,get,configuration,configuration,conf,new,configuration,for,map,entry,string,string,entry,data,entry,set,conf,set,string,entry,get,key,entry,get,value,return,conf
ParameterTool -> public Configuration getConfiguration();1443123598;Returns a {@link Configuration} object from this {@link ParameterTool}__@return A {@link Configuration};public Configuration getConfiguration() {_		Configuration conf = new Configuration()__		for(Map.Entry<String, String> entry: data.entrySet()) {_			conf.setString(entry.getKey(), entry.getValue())__		}_		return conf__	};returns,a,link,configuration,object,from,this,link,parameter,tool,return,a,link,configuration;public,configuration,get,configuration,configuration,conf,new,configuration,for,map,entry,string,string,entry,data,entry,set,conf,set,string,entry,get,key,entry,get,value,return,conf
ParameterTool -> public Configuration getConfiguration();1454679829;Returns a {@link Configuration} object from this {@link ParameterTool}__@return A {@link Configuration};public Configuration getConfiguration() {_		Configuration conf = new Configuration()__		for(Map.Entry<String, String> entry: data.entrySet()) {_			conf.setString(entry.getKey(), entry.getValue())__		}_		return conf__	};returns,a,link,configuration,object,from,this,link,parameter,tool,return,a,link,configuration;public,configuration,get,configuration,configuration,conf,new,configuration,for,map,entry,string,string,entry,data,entry,set,conf,set,string,entry,get,key,entry,get,value,return,conf
ParameterTool -> public Configuration getConfiguration();1455101486;Returns a {@link Configuration} object from this {@link ParameterTool}__@return A {@link Configuration};public Configuration getConfiguration() {_		Configuration conf = new Configuration()__		for(Map.Entry<String, String> entry: data.entrySet()) {_			conf.setString(entry.getKey(), entry.getValue())__		}_		return conf__	};returns,a,link,configuration,object,from,this,link,parameter,tool,return,a,link,configuration;public,configuration,get,configuration,configuration,conf,new,configuration,for,map,entry,string,string,entry,data,entry,set,conf,set,string,entry,get,key,entry,get,value,return,conf
ParameterTool -> public Configuration getConfiguration();1462899491;Returns a {@link Configuration} object from this {@link ParameterTool}__@return A {@link Configuration};public Configuration getConfiguration() {_		Configuration conf = new Configuration()__		for(Map.Entry<String, String> entry: data.entrySet()) {_			conf.setString(entry.getKey(), entry.getValue())__		}_		return conf__	};returns,a,link,configuration,object,from,this,link,parameter,tool,return,a,link,configuration;public,configuration,get,configuration,configuration,conf,new,configuration,for,map,entry,string,string,entry,data,entry,set,conf,set,string,entry,get,key,entry,get,value,return,conf
ParameterTool -> public Configuration getConfiguration();1465462613;Returns a {@link Configuration} object from this {@link ParameterTool}__@return A {@link Configuration};public Configuration getConfiguration() {_		Configuration conf = new Configuration()__		for(Map.Entry<String, String> entry: data.entrySet()) {_			conf.setString(entry.getKey(), entry.getValue())__		}_		return conf__	};returns,a,link,configuration,object,from,this,link,parameter,tool,return,a,link,configuration;public,configuration,get,configuration,configuration,conf,new,configuration,for,map,entry,string,string,entry,data,entry,set,conf,set,string,entry,get,key,entry,get,value,return,conf
ParameterTool -> public Configuration getConfiguration();1473329066;Returns a {@link Configuration} object from this {@link ParameterTool}__@return A {@link Configuration};public Configuration getConfiguration() {_		Configuration conf = new Configuration()__		for(Map.Entry<String, String> entry: data.entrySet()) {_			conf.setString(entry.getKey(), entry.getValue())__		}_		return conf__	};returns,a,link,configuration,object,from,this,link,parameter,tool,return,a,link,configuration;public,configuration,get,configuration,configuration,conf,new,configuration,for,map,entry,string,string,entry,data,entry,set,conf,set,string,entry,get,key,entry,get,value,return,conf
ParameterTool -> public Configuration getConfiguration();1474022085;Returns a {@link Configuration} object from this {@link ParameterTool}__@return A {@link Configuration};public Configuration getConfiguration() {_		Configuration conf = new Configuration()__		for(Map.Entry<String, String> entry: data.entrySet()) {_			conf.setString(entry.getKey(), entry.getValue())__		}_		return conf__	};returns,a,link,configuration,object,from,this,link,parameter,tool,return,a,link,configuration;public,configuration,get,configuration,configuration,conf,new,configuration,for,map,entry,string,string,entry,data,entry,set,conf,set,string,entry,get,key,entry,get,value,return,conf
ParameterTool -> public Configuration getConfiguration();1474626798;Returns a {@link Configuration} object from this {@link ParameterTool}__@return A {@link Configuration};public Configuration getConfiguration() {_		Configuration conf = new Configuration()__		for(Map.Entry<String, String> entry: data.entrySet()) {_			conf.setString(entry.getKey(), entry.getValue())__		}_		return conf__	};returns,a,link,configuration,object,from,this,link,parameter,tool,return,a,link,configuration;public,configuration,get,configuration,configuration,conf,new,configuration,for,map,entry,string,string,entry,data,entry,set,conf,set,string,entry,get,key,entry,get,value,return,conf
ParameterTool -> public Configuration getConfiguration();1474626882;Returns a {@link Configuration} object from this {@link ParameterTool}__@return A {@link Configuration};public Configuration getConfiguration() {_		Configuration conf = new Configuration()__		for(Map.Entry<String, String> entry: data.entrySet()) {_			conf.setString(entry.getKey(), entry.getValue())__		}_		return conf__	};returns,a,link,configuration,object,from,this,link,parameter,tool,return,a,link,configuration;public,configuration,get,configuration,configuration,conf,new,configuration,for,map,entry,string,string,entry,data,entry,set,conf,set,string,entry,get,key,entry,get,value,return,conf
ParameterTool -> public Configuration getConfiguration();1478107885;Returns a {@link Configuration} object from this {@link ParameterTool}__@return A {@link Configuration};public Configuration getConfiguration() {_		Configuration conf = new Configuration()__		for(Map.Entry<String, String> entry: data.entrySet()) {_			conf.setString(entry.getKey(), entry.getValue())__		}_		return conf__	};returns,a,link,configuration,object,from,this,link,parameter,tool,return,a,link,configuration;public,configuration,get,configuration,configuration,conf,new,configuration,for,map,entry,string,string,entry,data,entry,set,conf,set,string,entry,get,key,entry,get,value,return,conf
ParameterTool -> public Configuration getConfiguration();1499777482;Returns a {@link Configuration} object from this {@link ParameterTool}__@return A {@link Configuration};public Configuration getConfiguration() {_		Configuration conf = new Configuration()__		for(Map.Entry<String, String> entry: data.entrySet()) {_			conf.setString(entry.getKey(), entry.getValue())__		}_		return conf__	};returns,a,link,configuration,object,from,this,link,parameter,tool,return,a,link,configuration;public,configuration,get,configuration,configuration,conf,new,configuration,for,map,entry,string,string,entry,data,entry,set,conf,set,string,entry,get,key,entry,get,value,return,conf
ParameterTool -> public Configuration getConfiguration();1500387265;Returns a {@link Configuration} object from this {@link ParameterTool}.__@return A {@link Configuration};public Configuration getConfiguration() {_		Configuration conf = new Configuration()__		for (Map.Entry<String, String> entry : data.entrySet()) {_			conf.setString(entry.getKey(), entry.getValue())__		}_		return conf__	};returns,a,link,configuration,object,from,this,link,parameter,tool,return,a,link,configuration;public,configuration,get,configuration,configuration,conf,new,configuration,for,map,entry,string,string,entry,data,entry,set,conf,set,string,entry,get,key,entry,get,value,return,conf
ParameterTool -> public Configuration getConfiguration();1505831007;Returns a {@link Configuration} object from this {@link ParameterTool}.__@return A {@link Configuration};public Configuration getConfiguration() {_		Configuration conf = new Configuration()__		for (Map.Entry<String, String> entry : data.entrySet()) {_			conf.setString(entry.getKey(), entry.getValue())__		}_		return conf__	};returns,a,link,configuration,object,from,this,link,parameter,tool,return,a,link,configuration;public,configuration,get,configuration,configuration,conf,new,configuration,for,map,entry,string,string,entry,data,entry,set,conf,set,string,entry,get,key,entry,get,value,return,conf
ParameterTool -> public Configuration getConfiguration();1506499511;Returns a {@link Configuration} object from this {@link ParameterTool}.__@return A {@link Configuration};public Configuration getConfiguration() {_		Configuration conf = new Configuration()__		for (Map.Entry<String, String> entry : data.entrySet()) {_			conf.setString(entry.getKey(), entry.getValue())__		}_		return conf__	};returns,a,link,configuration,object,from,this,link,parameter,tool,return,a,link,configuration;public,configuration,get,configuration,configuration,conf,new,configuration,for,map,entry,string,string,entry,data,entry,set,conf,set,string,entry,get,key,entry,get,value,return,conf
ParameterTool -> public Configuration getConfiguration();1511189418;Returns a {@link Configuration} object from this {@link ParameterTool}.__@return A {@link Configuration};public Configuration getConfiguration() {_		Configuration conf = new Configuration()__		for (Map.Entry<String, String> entry : data.entrySet()) {_			conf.setString(entry.getKey(), entry.getValue())__		}_		return conf__	};returns,a,link,configuration,object,from,this,link,parameter,tool,return,a,link,configuration;public,configuration,get,configuration,configuration,conf,new,configuration,for,map,entry,string,string,entry,data,entry,set,conf,set,string,entry,get,key,entry,get,value,return,conf
ParameterTool -> public Configuration getConfiguration();1511966704;Returns a {@link Configuration} object from this {@link ParameterTool}.__@return A {@link Configuration};public Configuration getConfiguration() {_		Configuration conf = new Configuration()__		for (Map.Entry<String, String> entry : data.entrySet()) {_			conf.setString(entry.getKey(), entry.getValue())__		}_		return conf__	};returns,a,link,configuration,object,from,this,link,parameter,tool,return,a,link,configuration;public,configuration,get,configuration,configuration,conf,new,configuration,for,map,entry,string,string,entry,data,entry,set,conf,set,string,entry,get,key,entry,get,value,return,conf
ParameterTool -> public Configuration getConfiguration();1539096710;Returns a {@link Configuration} object from this {@link ParameterTool}.__@return A {@link Configuration};public Configuration getConfiguration() {_		final Configuration conf = new Configuration()__		for (Map.Entry<String, String> entry : data.entrySet()) {_			conf.setString(entry.getKey(), entry.getValue())__		}_		return conf__	};returns,a,link,configuration,object,from,this,link,parameter,tool,return,a,link,configuration;public,configuration,get,configuration,final,configuration,conf,new,configuration,for,map,entry,string,string,entry,data,entry,set,conf,set,string,entry,get,key,entry,get,value,return,conf
ParameterTool -> public Configuration getConfiguration();1539096710;Returns a {@link Configuration} object from this {@link ParameterTool}.__@return A {@link Configuration};public Configuration getConfiguration() {_		final Configuration conf = new Configuration()__		for (Map.Entry<String, String> entry : data.entrySet()) {_			conf.setString(entry.getKey(), entry.getValue())__		}_		return conf__	};returns,a,link,configuration,object,from,this,link,parameter,tool,return,a,link,configuration;public,configuration,get,configuration,final,configuration,conf,new,configuration,for,map,entry,string,string,entry,data,entry,set,conf,set,string,entry,get,key,entry,get,value,return,conf
ParameterTool -> public static ParameterTool fromPropertiesFile(File file) throws IOException;1505831007;Returns {@link ParameterTool} for the given {@link Properties} file.__@param file File object to the properties file_@return A {@link ParameterTool}_@throws IOException If the file does not exist_@see Properties;public static ParameterTool fromPropertiesFile(File file) throws IOException {_		if (!file.exists()) {_			throw new FileNotFoundException("Properties file " + file.getAbsolutePath() + " does not exist")__		}_		try (FileInputStream fis = new FileInputStream(file)) {_			return fromPropertiesFile(fis)__		}_	};returns,link,parameter,tool,for,the,given,link,properties,file,param,file,file,object,to,the,properties,file,return,a,link,parameter,tool,throws,ioexception,if,the,file,does,not,exist,see,properties;public,static,parameter,tool,from,properties,file,file,file,throws,ioexception,if,file,exists,throw,new,file,not,found,exception,properties,file,file,get,absolute,path,does,not,exist,try,file,input,stream,fis,new,file,input,stream,file,return,from,properties,file,fis
ParameterTool -> public static ParameterTool fromPropertiesFile(File file) throws IOException;1506499511;Returns {@link ParameterTool} for the given {@link Properties} file.__@param file File object to the properties file_@return A {@link ParameterTool}_@throws IOException If the file does not exist_@see Properties;public static ParameterTool fromPropertiesFile(File file) throws IOException {_		if (!file.exists()) {_			throw new FileNotFoundException("Properties file " + file.getAbsolutePath() + " does not exist")__		}_		try (FileInputStream fis = new FileInputStream(file)) {_			return fromPropertiesFile(fis)__		}_	};returns,link,parameter,tool,for,the,given,link,properties,file,param,file,file,object,to,the,properties,file,return,a,link,parameter,tool,throws,ioexception,if,the,file,does,not,exist,see,properties;public,static,parameter,tool,from,properties,file,file,file,throws,ioexception,if,file,exists,throw,new,file,not,found,exception,properties,file,file,get,absolute,path,does,not,exist,try,file,input,stream,fis,new,file,input,stream,file,return,from,properties,file,fis
ParameterTool -> public static ParameterTool fromPropertiesFile(File file) throws IOException;1511189418;Returns {@link ParameterTool} for the given {@link Properties} file.__@param file File object to the properties file_@return A {@link ParameterTool}_@throws IOException If the file does not exist_@see Properties;public static ParameterTool fromPropertiesFile(File file) throws IOException {_		if (!file.exists()) {_			throw new FileNotFoundException("Properties file " + file.getAbsolutePath() + " does not exist")__		}_		try (FileInputStream fis = new FileInputStream(file)) {_			return fromPropertiesFile(fis)__		}_	};returns,link,parameter,tool,for,the,given,link,properties,file,param,file,file,object,to,the,properties,file,return,a,link,parameter,tool,throws,ioexception,if,the,file,does,not,exist,see,properties;public,static,parameter,tool,from,properties,file,file,file,throws,ioexception,if,file,exists,throw,new,file,not,found,exception,properties,file,file,get,absolute,path,does,not,exist,try,file,input,stream,fis,new,file,input,stream,file,return,from,properties,file,fis
ParameterTool -> public static ParameterTool fromPropertiesFile(File file) throws IOException;1511966704;Returns {@link ParameterTool} for the given {@link Properties} file.__@param file File object to the properties file_@return A {@link ParameterTool}_@throws IOException If the file does not exist_@see Properties;public static ParameterTool fromPropertiesFile(File file) throws IOException {_		if (!file.exists()) {_			throw new FileNotFoundException("Properties file " + file.getAbsolutePath() + " does not exist")__		}_		try (FileInputStream fis = new FileInputStream(file)) {_			return fromPropertiesFile(fis)__		}_	};returns,link,parameter,tool,for,the,given,link,properties,file,param,file,file,object,to,the,properties,file,return,a,link,parameter,tool,throws,ioexception,if,the,file,does,not,exist,see,properties;public,static,parameter,tool,from,properties,file,file,file,throws,ioexception,if,file,exists,throw,new,file,not,found,exception,properties,file,file,get,absolute,path,does,not,exist,try,file,input,stream,fis,new,file,input,stream,file,return,from,properties,file,fis
ParameterTool -> public static ParameterTool fromPropertiesFile(File file) throws IOException;1539096710;Returns {@link ParameterTool} for the given {@link Properties} file.__@param file File object to the properties file_@return A {@link ParameterTool}_@throws IOException If the file does not exist_@see Properties;public static ParameterTool fromPropertiesFile(File file) throws IOException {_		if (!file.exists()) {_			throw new FileNotFoundException("Properties file " + file.getAbsolutePath() + " does not exist")__		}_		try (FileInputStream fis = new FileInputStream(file)) {_			return fromPropertiesFile(fis)__		}_	};returns,link,parameter,tool,for,the,given,link,properties,file,param,file,file,object,to,the,properties,file,return,a,link,parameter,tool,throws,ioexception,if,the,file,does,not,exist,see,properties;public,static,parameter,tool,from,properties,file,file,file,throws,ioexception,if,file,exists,throw,new,file,not,found,exception,properties,file,file,get,absolute,path,does,not,exist,try,file,input,stream,fis,new,file,input,stream,file,return,from,properties,file,fis
ParameterTool -> public static ParameterTool fromPropertiesFile(File file) throws IOException;1539096710;Returns {@link ParameterTool} for the given {@link Properties} file.__@param file File object to the properties file_@return A {@link ParameterTool}_@throws IOException If the file does not exist_@see Properties;public static ParameterTool fromPropertiesFile(File file) throws IOException {_		if (!file.exists()) {_			throw new FileNotFoundException("Properties file " + file.getAbsolutePath() + " does not exist")__		}_		try (FileInputStream fis = new FileInputStream(file)) {_			return fromPropertiesFile(fis)__		}_	};returns,link,parameter,tool,for,the,given,link,properties,file,param,file,file,object,to,the,properties,file,return,a,link,parameter,tool,throws,ioexception,if,the,file,does,not,exist,see,properties;public,static,parameter,tool,from,properties,file,file,file,throws,ioexception,if,file,exists,throw,new,file,not,found,exception,properties,file,file,get,absolute,path,does,not,exist,try,file,input,stream,fis,new,file,input,stream,file,return,from,properties,file,fis
ParameterTool -> public long getLong(String key);1431691975;Get long value._The method fails if the key is not specified._@param key Name of the key_@return;public long getLong(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Long.valueOf(value)__	};get,long,value,the,method,fails,if,the,key,is,not,specified,param,key,name,of,the,key,return;public,long,get,long,string,key,add,to,defaults,key,null,string,value,get,required,key,return,long,value,of,value
ParameterTool -> public long getLong(String key);1433939202;Get long value._The method fails if the key is not specified._@param key Name of the key_@return;public long getLong(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Long.valueOf(value)__	};get,long,value,the,method,fails,if,the,key,is,not,specified,param,key,name,of,the,key,return;public,long,get,long,string,key,add,to,defaults,key,null,string,value,get,required,key,return,long,value,of,value
ParameterTool -> public long getLong(String key);1435067318;Get long value._The method fails if the key is not specified._@param key Name of the key_@return;public long getLong(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Long.valueOf(value)__	};get,long,value,the,method,fails,if,the,key,is,not,specified,param,key,name,of,the,key,return;public,long,get,long,string,key,add,to,defaults,key,null,string,value,get,required,key,return,long,value,of,value
ParameterTool -> public long getLong(String key);1437494296;Get long value._The method fails if the key is not specified._@param key Name of the key_@return;public long getLong(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Long.valueOf(value)__	};get,long,value,the,method,fails,if,the,key,is,not,specified,param,key,name,of,the,key,return;public,long,get,long,string,key,add,to,defaults,key,null,string,value,get,required,key,return,long,value,of,value
ParameterTool -> public long getLong(String key);1438620487;Get long value._The method fails if the key is not specified._@param key Name of the key_@return;public long getLong(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Long.valueOf(value)__	};get,long,value,the,method,fails,if,the,key,is,not,specified,param,key,name,of,the,key,return;public,long,get,long,string,key,add,to,defaults,key,null,string,value,get,required,key,return,long,value,of,value
ParameterTool -> public long getLong(String key);1441981413;Returns the Long value for the given key._The method fails if the key does not exist.;public long getLong(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Long.valueOf(value)__	};returns,the,long,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,long,get,long,string,key,add,to,defaults,key,null,string,value,get,required,key,return,long,value,of,value
ParameterTool -> public long getLong(String key);1443123598;Returns the Long value for the given key._The method fails if the key does not exist.;public long getLong(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Long.valueOf(value)__	};returns,the,long,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,long,get,long,string,key,add,to,defaults,key,null,string,value,get,required,key,return,long,value,of,value
ParameterTool -> public long getLong(String key);1454679829;Returns the Long value for the given key._The method fails if the key does not exist.;public long getLong(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Long.valueOf(value)__	};returns,the,long,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,long,get,long,string,key,add,to,defaults,key,null,string,value,get,required,key,return,long,value,of,value
ParameterTool -> public long getLong(String key);1455101486;Returns the Long value for the given key._The method fails if the key does not exist.;public long getLong(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Long.valueOf(value)__	};returns,the,long,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,long,get,long,string,key,add,to,defaults,key,null,string,value,get,required,key,return,long,value,of,value
ParameterTool -> public long getLong(String key);1462899491;Returns the Long value for the given key._The method fails if the key does not exist.;public long getLong(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Long.valueOf(value)__	};returns,the,long,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,long,get,long,string,key,add,to,defaults,key,null,string,value,get,required,key,return,long,value,of,value
ParameterTool -> public long getLong(String key);1465462613;Returns the Long value for the given key._The method fails if the key does not exist.;public long getLong(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Long.valueOf(value)__	};returns,the,long,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,long,get,long,string,key,add,to,defaults,key,null,string,value,get,required,key,return,long,value,of,value
ParameterTool -> public long getLong(String key);1473329066;Returns the Long value for the given key._The method fails if the key does not exist.;public long getLong(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Long.valueOf(value)__	};returns,the,long,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,long,get,long,string,key,add,to,defaults,key,null,string,value,get,required,key,return,long,value,of,value
ParameterTool -> public long getLong(String key);1474022085;Returns the Long value for the given key._The method fails if the key does not exist.;public long getLong(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Long.valueOf(value)__	};returns,the,long,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,long,get,long,string,key,add,to,defaults,key,null,string,value,get,required,key,return,long,value,of,value
ParameterTool -> public long getLong(String key);1474626798;Returns the Long value for the given key._The method fails if the key does not exist.;public long getLong(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Long.parseLong(value)__	};returns,the,long,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,long,get,long,string,key,add,to,defaults,key,null,string,value,get,required,key,return,long,parse,long,value
ParameterTool -> public long getLong(String key);1474626882;Returns the Long value for the given key._The method fails if the key does not exist.;public long getLong(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Long.parseLong(value)__	};returns,the,long,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,long,get,long,string,key,add,to,defaults,key,null,string,value,get,required,key,return,long,parse,long,value
ParameterTool -> public long getLong(String key);1478107885;Returns the Long value for the given key._The method fails if the key does not exist.;public long getLong(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Long.parseLong(value)__	};returns,the,long,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,long,get,long,string,key,add,to,defaults,key,null,string,value,get,required,key,return,long,parse,long,value
ParameterTool -> public long getLong(String key);1499777482;Returns the Long value for the given key._The method fails if the key does not exist.;public long getLong(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Long.parseLong(value)__	};returns,the,long,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,long,get,long,string,key,add,to,defaults,key,null,string,value,get,required,key,return,long,parse,long,value
ParameterTool -> public long getLong(String key);1500387265;Returns the Long value for the given key._The method fails if the key does not exist.;public long getLong(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Long.parseLong(value)__	};returns,the,long,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,long,get,long,string,key,add,to,defaults,key,null,string,value,get,required,key,return,long,parse,long,value
ParameterTool -> public long getLong(String key);1505831007;Returns the Long value for the given key._The method fails if the key does not exist.;public long getLong(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Long.parseLong(value)__	};returns,the,long,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,long,get,long,string,key,add,to,defaults,key,null,string,value,get,required,key,return,long,parse,long,value
ParameterTool -> public long getLong(String key);1506499511;Returns the Long value for the given key._The method fails if the key does not exist.;public long getLong(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Long.parseLong(value)__	};returns,the,long,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,long,get,long,string,key,add,to,defaults,key,null,string,value,get,required,key,return,long,parse,long,value
ParameterTool -> public long getLong(String key);1511189418;Returns the Long value for the given key._The method fails if the key does not exist.;public long getLong(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Long.parseLong(value)__	};returns,the,long,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,long,get,long,string,key,add,to,defaults,key,null,string,value,get,required,key,return,long,parse,long,value
ParameterTool -> public long getLong(String key);1511966704;Returns the Long value for the given key._The method fails if the key does not exist.;public long getLong(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Long.parseLong(value)__	};returns,the,long,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,long,get,long,string,key,add,to,defaults,key,null,string,value,get,required,key,return,long,parse,long,value
ParameterTool -> public long getLong(String key);1539096710;Returns the Long value for the given key._The method fails if the key does not exist.;public long getLong(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Long.parseLong(value)__	};returns,the,long,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,long,get,long,string,key,add,to,defaults,key,null,string,value,get,required,key,return,long,parse,long,value
ParameterTool -> public long getLong(String key);1539096710;Returns the Long value for the given key._The method fails if the key does not exist.;public long getLong(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Long.parseLong(value)__	};returns,the,long,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,long,get,long,string,key,add,to,defaults,key,null,string,value,get,required,key,return,long,parse,long,value
ParameterTool -> public static ParameterTool fromArgs(String[] args);1441981413;Returns {@link ParameterTool} for the given arguments. The arguments are keys followed by values._Keys have to start with '-' or '--'_<p>_<strong>Example arguments:</strong>_--key1 value1 --key2 value2 -key3 value3__@param args Input array arguments_@return A {@link ParameterTool};public static ParameterTool fromArgs(String[] args) {_		Map<String, String> map = new HashMap<String, String>(args.length / 2)___		String key = null__		String value = null__		boolean expectValue = false__		for(String arg: args) {_			_			if(arg.startsWith("--")) {_				if(expectValue) {_					_					if(value != null) {_						throw new IllegalStateException("Unexpected state")__					}_					map.put(key, NO_VALUE_KEY)__					_				}_				key = arg.substring(2)__				expectValue = true__			} _			else if(arg.startsWith("-")) {_				_				if(expectValue) {__					if(NumberUtils.isNumber(arg)) {_						_						value = arg__						expectValue = false__					} else {_						if(value != null) {_							throw new IllegalStateException("Unexpected state")__						}_						_						map.put(key, NO_VALUE_KEY)__						key = arg.substring(1)__						expectValue = true__					}_				} else {_					_					key = arg.substring(1)__					expectValue = true__				}_			} else {_				if(expectValue) {_					value = arg__					expectValue = false__				} else {_					throw new RuntimeException("Error parsing arguments '"+ Arrays.toString(args)+"' on '"+arg+"'. Unexpected value. Please prefix values with -- or -.")__				}_			}__			if(value == null && key == null) {_				throw new IllegalStateException("Value and key can not be null at the same time")__			}_			if(key != null && value == null && !expectValue) {_				throw new IllegalStateException("Value expected but flag not set")__			}_			if(key != null && value != null) {_				map.put(key, value)__				key = null__				value = null__				expectValue = false__			}_			if(key != null && key.length() == 0) {_				throw new IllegalArgumentException("The input "+Arrays.toString(args)+" contains an empty argument")__			}__			if(key != null && !expectValue) {_				map.put(key, NO_VALUE_KEY)__				key = null__				expectValue = false__			}_		}_		if(key != null) {_			map.put(key, NO_VALUE_KEY)__		}__		return fromMap(map)__	};returns,link,parameter,tool,for,the,given,arguments,the,arguments,are,keys,followed,by,values,keys,have,to,start,with,or,p,strong,example,arguments,strong,key1,value1,key2,value2,key3,value3,param,args,input,array,arguments,return,a,link,parameter,tool;public,static,parameter,tool,from,args,string,args,map,string,string,map,new,hash,map,string,string,args,length,2,string,key,null,string,value,null,boolean,expect,value,false,for,string,arg,args,if,arg,starts,with,if,expect,value,if,value,null,throw,new,illegal,state,exception,unexpected,state,map,put,key,key,arg,substring,2,expect,value,true,else,if,arg,starts,with,if,expect,value,if,number,utils,is,number,arg,value,arg,expect,value,false,else,if,value,null,throw,new,illegal,state,exception,unexpected,state,map,put,key,key,arg,substring,1,expect,value,true,else,key,arg,substring,1,expect,value,true,else,if,expect,value,value,arg,expect,value,false,else,throw,new,runtime,exception,error,parsing,arguments,arrays,to,string,args,on,arg,unexpected,value,please,prefix,values,with,or,if,value,null,key,null,throw,new,illegal,state,exception,value,and,key,can,not,be,null,at,the,same,time,if,key,null,value,null,expect,value,throw,new,illegal,state,exception,value,expected,but,flag,not,set,if,key,null,value,null,map,put,key,value,key,null,value,null,expect,value,false,if,key,null,key,length,0,throw,new,illegal,argument,exception,the,input,arrays,to,string,args,contains,an,empty,argument,if,key,null,expect,value,map,put,key,key,null,expect,value,false,if,key,null,map,put,key,return,from,map,map
ParameterTool -> public static ParameterTool fromArgs(String[] args);1443123598;Returns {@link ParameterTool} for the given arguments. The arguments are keys followed by values._Keys have to start with '-' or '--'_<p>_<strong>Example arguments:</strong>_--key1 value1 --key2 value2 -key3 value3__@param args Input array arguments_@return A {@link ParameterTool};public static ParameterTool fromArgs(String[] args) {_		Map<String, String> map = new HashMap<String, String>(args.length / 2)___		String key = null__		String value = null__		boolean expectValue = false__		for(String arg: args) {_			_			if(arg.startsWith("--")) {_				if(expectValue) {_					_					if(value != null) {_						throw new IllegalStateException("Unexpected state")__					}_					map.put(key, NO_VALUE_KEY)__					_				}_				key = arg.substring(2)__				expectValue = true__			} _			else if(arg.startsWith("-")) {_				_				if(expectValue) {__					if(NumberUtils.isNumber(arg)) {_						_						value = arg__						expectValue = false__					} else {_						if(value != null) {_							throw new IllegalStateException("Unexpected state")__						}_						_						map.put(key, NO_VALUE_KEY)__						key = arg.substring(1)__						expectValue = true__					}_				} else {_					_					key = arg.substring(1)__					expectValue = true__				}_			} else {_				if(expectValue) {_					value = arg__					expectValue = false__				} else {_					throw new RuntimeException("Error parsing arguments '"+ Arrays.toString(args)+"' on '"+arg+"'. Unexpected value. Please prefix values with -- or -.")__				}_			}__			if(value == null && key == null) {_				throw new IllegalStateException("Value and key can not be null at the same time")__			}_			if(key != null && value == null && !expectValue) {_				throw new IllegalStateException("Value expected but flag not set")__			}_			if(key != null && value != null) {_				map.put(key, value)__				key = null__				value = null__				expectValue = false__			}_			if(key != null && key.length() == 0) {_				throw new IllegalArgumentException("The input "+Arrays.toString(args)+" contains an empty argument")__			}__			if(key != null && !expectValue) {_				map.put(key, NO_VALUE_KEY)__				key = null__				expectValue = false__			}_		}_		if(key != null) {_			map.put(key, NO_VALUE_KEY)__		}__		return fromMap(map)__	};returns,link,parameter,tool,for,the,given,arguments,the,arguments,are,keys,followed,by,values,keys,have,to,start,with,or,p,strong,example,arguments,strong,key1,value1,key2,value2,key3,value3,param,args,input,array,arguments,return,a,link,parameter,tool;public,static,parameter,tool,from,args,string,args,map,string,string,map,new,hash,map,string,string,args,length,2,string,key,null,string,value,null,boolean,expect,value,false,for,string,arg,args,if,arg,starts,with,if,expect,value,if,value,null,throw,new,illegal,state,exception,unexpected,state,map,put,key,key,arg,substring,2,expect,value,true,else,if,arg,starts,with,if,expect,value,if,number,utils,is,number,arg,value,arg,expect,value,false,else,if,value,null,throw,new,illegal,state,exception,unexpected,state,map,put,key,key,arg,substring,1,expect,value,true,else,key,arg,substring,1,expect,value,true,else,if,expect,value,value,arg,expect,value,false,else,throw,new,runtime,exception,error,parsing,arguments,arrays,to,string,args,on,arg,unexpected,value,please,prefix,values,with,or,if,value,null,key,null,throw,new,illegal,state,exception,value,and,key,can,not,be,null,at,the,same,time,if,key,null,value,null,expect,value,throw,new,illegal,state,exception,value,expected,but,flag,not,set,if,key,null,value,null,map,put,key,value,key,null,value,null,expect,value,false,if,key,null,key,length,0,throw,new,illegal,argument,exception,the,input,arrays,to,string,args,contains,an,empty,argument,if,key,null,expect,value,map,put,key,key,null,expect,value,false,if,key,null,map,put,key,return,from,map,map
ParameterTool -> public static ParameterTool fromArgs(String[] args);1454679829;Returns {@link ParameterTool} for the given arguments. The arguments are keys followed by values._Keys have to start with '-' or '--'_<p>_<strong>Example arguments:</strong>_--key1 value1 --key2 value2 -key3 value3__@param args Input array arguments_@return A {@link ParameterTool};public static ParameterTool fromArgs(String[] args) {_		Map<String, String> map = new HashMap<String, String>(args.length / 2)___		String key = null__		String value = null__		boolean expectValue = false__		for(String arg: args) {_			_			if(arg.startsWith("--")) {_				if(expectValue) {_					_					if(value != null) {_						throw new IllegalStateException("Unexpected state")__					}_					map.put(key, NO_VALUE_KEY)__					_				}_				key = arg.substring(2)__				expectValue = true__			} _			else if(arg.startsWith("-")) {_				_				if(expectValue) {__					if(NumberUtils.isNumber(arg)) {_						_						value = arg__						expectValue = false__					} else {_						if(value != null) {_							throw new IllegalStateException("Unexpected state")__						}_						_						map.put(key, NO_VALUE_KEY)__						key = arg.substring(1)__						expectValue = true__					}_				} else {_					_					key = arg.substring(1)__					expectValue = true__				}_			} else {_				if(expectValue) {_					value = arg__					expectValue = false__				} else {_					throw new RuntimeException("Error parsing arguments '"+ Arrays.toString(args)+"' on '"+arg+"'. Unexpected value. Please prefix values with -- or -.")__				}_			}__			if(value == null && key == null) {_				throw new IllegalStateException("Value and key can not be null at the same time")__			}_			if(key != null && value == null && !expectValue) {_				throw new IllegalStateException("Value expected but flag not set")__			}_			if(key != null && value != null) {_				map.put(key, value)__				key = null__				value = null__				expectValue = false__			}_			if(key != null && key.length() == 0) {_				throw new IllegalArgumentException("The input "+Arrays.toString(args)+" contains an empty argument")__			}__			if(key != null && !expectValue) {_				map.put(key, NO_VALUE_KEY)__				key = null__				expectValue = false__			}_		}_		if(key != null) {_			map.put(key, NO_VALUE_KEY)__		}__		return fromMap(map)__	};returns,link,parameter,tool,for,the,given,arguments,the,arguments,are,keys,followed,by,values,keys,have,to,start,with,or,p,strong,example,arguments,strong,key1,value1,key2,value2,key3,value3,param,args,input,array,arguments,return,a,link,parameter,tool;public,static,parameter,tool,from,args,string,args,map,string,string,map,new,hash,map,string,string,args,length,2,string,key,null,string,value,null,boolean,expect,value,false,for,string,arg,args,if,arg,starts,with,if,expect,value,if,value,null,throw,new,illegal,state,exception,unexpected,state,map,put,key,key,arg,substring,2,expect,value,true,else,if,arg,starts,with,if,expect,value,if,number,utils,is,number,arg,value,arg,expect,value,false,else,if,value,null,throw,new,illegal,state,exception,unexpected,state,map,put,key,key,arg,substring,1,expect,value,true,else,key,arg,substring,1,expect,value,true,else,if,expect,value,value,arg,expect,value,false,else,throw,new,runtime,exception,error,parsing,arguments,arrays,to,string,args,on,arg,unexpected,value,please,prefix,values,with,or,if,value,null,key,null,throw,new,illegal,state,exception,value,and,key,can,not,be,null,at,the,same,time,if,key,null,value,null,expect,value,throw,new,illegal,state,exception,value,expected,but,flag,not,set,if,key,null,value,null,map,put,key,value,key,null,value,null,expect,value,false,if,key,null,key,length,0,throw,new,illegal,argument,exception,the,input,arrays,to,string,args,contains,an,empty,argument,if,key,null,expect,value,map,put,key,key,null,expect,value,false,if,key,null,map,put,key,return,from,map,map
ParameterTool -> public static ParameterTool fromArgs(String[] args);1455101486;Returns {@link ParameterTool} for the given arguments. The arguments are keys followed by values._Keys have to start with '-' or '--'_<p>_<strong>Example arguments:</strong>_--key1 value1 --key2 value2 -key3 value3__@param args Input array arguments_@return A {@link ParameterTool};public static ParameterTool fromArgs(String[] args) {_		Map<String, String> map = new HashMap<String, String>(args.length / 2)___		String key = null__		String value = null__		boolean expectValue = false__		for(String arg: args) {_			_			if(arg.startsWith("--")) {_				if(expectValue) {_					_					if(value != null) {_						throw new IllegalStateException("Unexpected state")__					}_					map.put(key, NO_VALUE_KEY)__					_				}_				key = arg.substring(2)__				expectValue = true__			} _			else if(arg.startsWith("-")) {_				_				if(expectValue) {__					if(NumberUtils.isNumber(arg)) {_						_						value = arg__						expectValue = false__					} else {_						if(value != null) {_							throw new IllegalStateException("Unexpected state")__						}_						_						map.put(key, NO_VALUE_KEY)__						key = arg.substring(1)__						expectValue = true__					}_				} else {_					_					key = arg.substring(1)__					expectValue = true__				}_			} else {_				if(expectValue) {_					value = arg__					expectValue = false__				} else {_					throw new RuntimeException("Error parsing arguments '"+ Arrays.toString(args)+"' on '"+arg+"'. Unexpected value. Please prefix values with -- or -.")__				}_			}__			if(value == null && key == null) {_				throw new IllegalStateException("Value and key can not be null at the same time")__			}_			if(key != null && value == null && !expectValue) {_				throw new IllegalStateException("Value expected but flag not set")__			}_			if(key != null && value != null) {_				map.put(key, value)__				key = null__				value = null__				expectValue = false__			}_			if(key != null && key.length() == 0) {_				throw new IllegalArgumentException("The input "+Arrays.toString(args)+" contains an empty argument")__			}__			if(key != null && !expectValue) {_				map.put(key, NO_VALUE_KEY)__				key = null__				expectValue = false__			}_		}_		if(key != null) {_			map.put(key, NO_VALUE_KEY)__		}__		return fromMap(map)__	};returns,link,parameter,tool,for,the,given,arguments,the,arguments,are,keys,followed,by,values,keys,have,to,start,with,or,p,strong,example,arguments,strong,key1,value1,key2,value2,key3,value3,param,args,input,array,arguments,return,a,link,parameter,tool;public,static,parameter,tool,from,args,string,args,map,string,string,map,new,hash,map,string,string,args,length,2,string,key,null,string,value,null,boolean,expect,value,false,for,string,arg,args,if,arg,starts,with,if,expect,value,if,value,null,throw,new,illegal,state,exception,unexpected,state,map,put,key,key,arg,substring,2,expect,value,true,else,if,arg,starts,with,if,expect,value,if,number,utils,is,number,arg,value,arg,expect,value,false,else,if,value,null,throw,new,illegal,state,exception,unexpected,state,map,put,key,key,arg,substring,1,expect,value,true,else,key,arg,substring,1,expect,value,true,else,if,expect,value,value,arg,expect,value,false,else,throw,new,runtime,exception,error,parsing,arguments,arrays,to,string,args,on,arg,unexpected,value,please,prefix,values,with,or,if,value,null,key,null,throw,new,illegal,state,exception,value,and,key,can,not,be,null,at,the,same,time,if,key,null,value,null,expect,value,throw,new,illegal,state,exception,value,expected,but,flag,not,set,if,key,null,value,null,map,put,key,value,key,null,value,null,expect,value,false,if,key,null,key,length,0,throw,new,illegal,argument,exception,the,input,arrays,to,string,args,contains,an,empty,argument,if,key,null,expect,value,map,put,key,key,null,expect,value,false,if,key,null,map,put,key,return,from,map,map
ParameterTool -> public static ParameterTool fromArgs(String[] args);1462899491;Returns {@link ParameterTool} for the given arguments. The arguments are keys followed by values._Keys have to start with '-' or '--'_<p>_<strong>Example arguments:</strong>_--key1 value1 --key2 value2 -key3 value3__@param args Input array arguments_@return A {@link ParameterTool};public static ParameterTool fromArgs(String[] args) {_		Map<String, String> map = new HashMap<String, String>(args.length / 2)___		String key = null__		String value = null__		boolean expectValue = false__		for(String arg: args) {_			_			if(arg.startsWith("--")) {_				if(expectValue) {_					_					if(value != null) {_						throw new IllegalStateException("Unexpected state")__					}_					map.put(key, NO_VALUE_KEY)__					_				}_				key = arg.substring(2)__				expectValue = true__			} _			else if(arg.startsWith("-")) {_				_				if(expectValue) {__					if(NumberUtils.isNumber(arg)) {_						_						value = arg__						expectValue = false__					} else {_						if(value != null) {_							throw new IllegalStateException("Unexpected state")__						}_						_						map.put(key, NO_VALUE_KEY)__						key = arg.substring(1)__						expectValue = true__					}_				} else {_					_					key = arg.substring(1)__					expectValue = true__				}_			} else {_				if(expectValue) {_					value = arg__					expectValue = false__				} else {_					throw new RuntimeException("Error parsing arguments '"+ Arrays.toString(args)+"' on '"+arg+"'. Unexpected value. Please prefix values with -- or -.")__				}_			}__			if(value == null && key == null) {_				throw new IllegalStateException("Value and key can not be null at the same time")__			}_			if(key != null && value == null && !expectValue) {_				throw new IllegalStateException("Value expected but flag not set")__			}_			if(key != null && value != null) {_				map.put(key, value)__				key = null__				value = null__				expectValue = false__			}_			if(key != null && key.length() == 0) {_				throw new IllegalArgumentException("The input "+Arrays.toString(args)+" contains an empty argument")__			}__			if(key != null && !expectValue) {_				map.put(key, NO_VALUE_KEY)__				key = null__				expectValue = false__			}_		}_		if(key != null) {_			map.put(key, NO_VALUE_KEY)__		}__		return fromMap(map)__	};returns,link,parameter,tool,for,the,given,arguments,the,arguments,are,keys,followed,by,values,keys,have,to,start,with,or,p,strong,example,arguments,strong,key1,value1,key2,value2,key3,value3,param,args,input,array,arguments,return,a,link,parameter,tool;public,static,parameter,tool,from,args,string,args,map,string,string,map,new,hash,map,string,string,args,length,2,string,key,null,string,value,null,boolean,expect,value,false,for,string,arg,args,if,arg,starts,with,if,expect,value,if,value,null,throw,new,illegal,state,exception,unexpected,state,map,put,key,key,arg,substring,2,expect,value,true,else,if,arg,starts,with,if,expect,value,if,number,utils,is,number,arg,value,arg,expect,value,false,else,if,value,null,throw,new,illegal,state,exception,unexpected,state,map,put,key,key,arg,substring,1,expect,value,true,else,key,arg,substring,1,expect,value,true,else,if,expect,value,value,arg,expect,value,false,else,throw,new,runtime,exception,error,parsing,arguments,arrays,to,string,args,on,arg,unexpected,value,please,prefix,values,with,or,if,value,null,key,null,throw,new,illegal,state,exception,value,and,key,can,not,be,null,at,the,same,time,if,key,null,value,null,expect,value,throw,new,illegal,state,exception,value,expected,but,flag,not,set,if,key,null,value,null,map,put,key,value,key,null,value,null,expect,value,false,if,key,null,key,length,0,throw,new,illegal,argument,exception,the,input,arrays,to,string,args,contains,an,empty,argument,if,key,null,expect,value,map,put,key,key,null,expect,value,false,if,key,null,map,put,key,return,from,map,map
ParameterTool -> public static ParameterTool fromArgs(String[] args);1465462613;Returns {@link ParameterTool} for the given arguments. The arguments are keys followed by values._Keys have to start with '-' or '--'_<p>_<strong>Example arguments:</strong>_--key1 value1 --key2 value2 -key3 value3__@param args Input array arguments_@return A {@link ParameterTool};public static ParameterTool fromArgs(String[] args) {_		Map<String, String> map = new HashMap<String, String>(args.length / 2)___		String key = null__		String value = null__		boolean expectValue = false__		for(String arg: args) {_			_			if(arg.startsWith("--")) {_				if(expectValue) {_					_					if(value != null) {_						throw new IllegalStateException("Unexpected state")__					}_					map.put(key, NO_VALUE_KEY)__					_				}_				key = arg.substring(2)__				expectValue = true__			} _			else if(arg.startsWith("-")) {_				_				if(expectValue) {__					if(NumberUtils.isNumber(arg)) {_						_						value = arg__						expectValue = false__					} else {_						if(value != null) {_							throw new IllegalStateException("Unexpected state")__						}_						_						map.put(key, NO_VALUE_KEY)__						key = arg.substring(1)__						expectValue = true__					}_				} else {_					_					key = arg.substring(1)__					expectValue = true__				}_			} else {_				if(expectValue) {_					value = arg__					expectValue = false__				} else {_					throw new RuntimeException("Error parsing arguments '"+ Arrays.toString(args)+"' on '"+arg+"'. Unexpected value. Please prefix values with -- or -.")__				}_			}__			if(value == null && key == null) {_				throw new IllegalStateException("Value and key can not be null at the same time")__			}_			if(key != null && value == null && !expectValue) {_				throw new IllegalStateException("Value expected but flag not set")__			}_			if(key != null && value != null) {_				map.put(key, value)__				key = null__				value = null__				expectValue = false__			}_			if(key != null && key.length() == 0) {_				throw new IllegalArgumentException("The input "+Arrays.toString(args)+" contains an empty argument")__			}__			if(key != null && !expectValue) {_				map.put(key, NO_VALUE_KEY)__				key = null__				expectValue = false__			}_		}_		if(key != null) {_			map.put(key, NO_VALUE_KEY)__		}__		return fromMap(map)__	};returns,link,parameter,tool,for,the,given,arguments,the,arguments,are,keys,followed,by,values,keys,have,to,start,with,or,p,strong,example,arguments,strong,key1,value1,key2,value2,key3,value3,param,args,input,array,arguments,return,a,link,parameter,tool;public,static,parameter,tool,from,args,string,args,map,string,string,map,new,hash,map,string,string,args,length,2,string,key,null,string,value,null,boolean,expect,value,false,for,string,arg,args,if,arg,starts,with,if,expect,value,if,value,null,throw,new,illegal,state,exception,unexpected,state,map,put,key,key,arg,substring,2,expect,value,true,else,if,arg,starts,with,if,expect,value,if,number,utils,is,number,arg,value,arg,expect,value,false,else,if,value,null,throw,new,illegal,state,exception,unexpected,state,map,put,key,key,arg,substring,1,expect,value,true,else,key,arg,substring,1,expect,value,true,else,if,expect,value,value,arg,expect,value,false,else,throw,new,runtime,exception,error,parsing,arguments,arrays,to,string,args,on,arg,unexpected,value,please,prefix,values,with,or,if,value,null,key,null,throw,new,illegal,state,exception,value,and,key,can,not,be,null,at,the,same,time,if,key,null,value,null,expect,value,throw,new,illegal,state,exception,value,expected,but,flag,not,set,if,key,null,value,null,map,put,key,value,key,null,value,null,expect,value,false,if,key,null,key,length,0,throw,new,illegal,argument,exception,the,input,arrays,to,string,args,contains,an,empty,argument,if,key,null,expect,value,map,put,key,key,null,expect,value,false,if,key,null,map,put,key,return,from,map,map
ParameterTool -> public static ParameterTool fromArgs(String[] args);1473329066;Returns {@link ParameterTool} for the given arguments. The arguments are keys followed by values._Keys have to start with '-' or '--'_<p>_<strong>Example arguments:</strong>_--key1 value1 --key2 value2 -key3 value3__@param args Input array arguments_@return A {@link ParameterTool};public static ParameterTool fromArgs(String[] args) {_		Map<String, String> map = new HashMap<String, String>(args.length / 2)___		String key = null__		String value = null__		boolean expectValue = false__		for(String arg: args) {_			_			if(arg.startsWith("--")) {_				if(expectValue) {_					_					if(value != null) {_						throw new IllegalStateException("Unexpected state")__					}_					map.put(key, NO_VALUE_KEY)__					_				}_				key = arg.substring(2)__				expectValue = true__			} _			else if(arg.startsWith("-")) {_				_				if(expectValue) {__					if(NumberUtils.isNumber(arg)) {_						_						value = arg__						expectValue = false__					} else {_						if(value != null) {_							throw new IllegalStateException("Unexpected state")__						}_						_						map.put(key, NO_VALUE_KEY)__						key = arg.substring(1)__						expectValue = true__					}_				} else {_					_					key = arg.substring(1)__					expectValue = true__				}_			} else {_				if(expectValue) {_					value = arg__					expectValue = false__				} else {_					throw new RuntimeException("Error parsing arguments '"+ Arrays.toString(args)+"' on '"+arg+"'. Unexpected value. Please prefix values with -- or -.")__				}_			}__			if(value == null && key == null) {_				throw new IllegalStateException("Value and key can not be null at the same time")__			}_			if(key != null && value == null && !expectValue) {_				throw new IllegalStateException("Value expected but flag not set")__			}_			if(key != null && value != null) {_				map.put(key, value)__				key = null__				value = null__				expectValue = false__			}_			if(key != null && key.length() == 0) {_				throw new IllegalArgumentException("The input "+Arrays.toString(args)+" contains an empty argument")__			}__			if(key != null && !expectValue) {_				map.put(key, NO_VALUE_KEY)__				key = null__				expectValue = false__			}_		}_		if(key != null) {_			map.put(key, NO_VALUE_KEY)__		}__		return fromMap(map)__	};returns,link,parameter,tool,for,the,given,arguments,the,arguments,are,keys,followed,by,values,keys,have,to,start,with,or,p,strong,example,arguments,strong,key1,value1,key2,value2,key3,value3,param,args,input,array,arguments,return,a,link,parameter,tool;public,static,parameter,tool,from,args,string,args,map,string,string,map,new,hash,map,string,string,args,length,2,string,key,null,string,value,null,boolean,expect,value,false,for,string,arg,args,if,arg,starts,with,if,expect,value,if,value,null,throw,new,illegal,state,exception,unexpected,state,map,put,key,key,arg,substring,2,expect,value,true,else,if,arg,starts,with,if,expect,value,if,number,utils,is,number,arg,value,arg,expect,value,false,else,if,value,null,throw,new,illegal,state,exception,unexpected,state,map,put,key,key,arg,substring,1,expect,value,true,else,key,arg,substring,1,expect,value,true,else,if,expect,value,value,arg,expect,value,false,else,throw,new,runtime,exception,error,parsing,arguments,arrays,to,string,args,on,arg,unexpected,value,please,prefix,values,with,or,if,value,null,key,null,throw,new,illegal,state,exception,value,and,key,can,not,be,null,at,the,same,time,if,key,null,value,null,expect,value,throw,new,illegal,state,exception,value,expected,but,flag,not,set,if,key,null,value,null,map,put,key,value,key,null,value,null,expect,value,false,if,key,null,key,length,0,throw,new,illegal,argument,exception,the,input,arrays,to,string,args,contains,an,empty,argument,if,key,null,expect,value,map,put,key,key,null,expect,value,false,if,key,null,map,put,key,return,from,map,map
ParameterTool -> public static ParameterTool fromArgs(String[] args);1474022085;Returns {@link ParameterTool} for the given arguments. The arguments are keys followed by values._Keys have to start with '-' or '--'_<p>_<strong>Example arguments:</strong>_--key1 value1 --key2 value2 -key3 value3__@param args Input array arguments_@return A {@link ParameterTool};public static ParameterTool fromArgs(String[] args) {_		Map<String, String> map = new HashMap<String, String>(args.length / 2)___		String key = null__		String value = null__		boolean expectValue = false__		for(String arg: args) {_			_			if(arg.startsWith("--")) {_				if(expectValue) {_					_					if(value != null) {_						throw new IllegalStateException("Unexpected state")__					}_					map.put(key, NO_VALUE_KEY)__					_				}_				key = arg.substring(2)__				expectValue = true__			} _			else if(arg.startsWith("-")) {_				_				if(expectValue) {__					if(NumberUtils.isNumber(arg)) {_						_						value = arg__						expectValue = false__					} else {_						if(value != null) {_							throw new IllegalStateException("Unexpected state")__						}_						_						map.put(key, NO_VALUE_KEY)__						key = arg.substring(1)__						expectValue = true__					}_				} else {_					_					key = arg.substring(1)__					expectValue = true__				}_			} else {_				if(expectValue) {_					value = arg__					expectValue = false__				} else {_					throw new RuntimeException("Error parsing arguments '"+ Arrays.toString(args)+"' on '"+arg+"'. Unexpected value. Please prefix values with -- or -.")__				}_			}__			if(value == null && key == null) {_				throw new IllegalStateException("Value and key can not be null at the same time")__			}_			if(key != null && value == null && !expectValue) {_				throw new IllegalStateException("Value expected but flag not set")__			}_			if(key != null && value != null) {_				map.put(key, value)__				key = null__				value = null__				expectValue = false__			}_			if(key != null && key.length() == 0) {_				throw new IllegalArgumentException("The input "+Arrays.toString(args)+" contains an empty argument")__			}__			if(key != null && !expectValue) {_				map.put(key, NO_VALUE_KEY)__				key = null__				expectValue = false__			}_		}_		if(key != null) {_			map.put(key, NO_VALUE_KEY)__		}__		return fromMap(map)__	};returns,link,parameter,tool,for,the,given,arguments,the,arguments,are,keys,followed,by,values,keys,have,to,start,with,or,p,strong,example,arguments,strong,key1,value1,key2,value2,key3,value3,param,args,input,array,arguments,return,a,link,parameter,tool;public,static,parameter,tool,from,args,string,args,map,string,string,map,new,hash,map,string,string,args,length,2,string,key,null,string,value,null,boolean,expect,value,false,for,string,arg,args,if,arg,starts,with,if,expect,value,if,value,null,throw,new,illegal,state,exception,unexpected,state,map,put,key,key,arg,substring,2,expect,value,true,else,if,arg,starts,with,if,expect,value,if,number,utils,is,number,arg,value,arg,expect,value,false,else,if,value,null,throw,new,illegal,state,exception,unexpected,state,map,put,key,key,arg,substring,1,expect,value,true,else,key,arg,substring,1,expect,value,true,else,if,expect,value,value,arg,expect,value,false,else,throw,new,runtime,exception,error,parsing,arguments,arrays,to,string,args,on,arg,unexpected,value,please,prefix,values,with,or,if,value,null,key,null,throw,new,illegal,state,exception,value,and,key,can,not,be,null,at,the,same,time,if,key,null,value,null,expect,value,throw,new,illegal,state,exception,value,expected,but,flag,not,set,if,key,null,value,null,map,put,key,value,key,null,value,null,expect,value,false,if,key,null,key,length,0,throw,new,illegal,argument,exception,the,input,arrays,to,string,args,contains,an,empty,argument,if,key,null,expect,value,map,put,key,key,null,expect,value,false,if,key,null,map,put,key,return,from,map,map
ParameterTool -> public static ParameterTool fromArgs(String[] args);1474626798;Returns {@link ParameterTool} for the given arguments. The arguments are keys followed by values._Keys have to start with '-' or '--'_<p>_<strong>Example arguments:</strong>_--key1 value1 --key2 value2 -key3 value3__@param args Input array arguments_@return A {@link ParameterTool};public static ParameterTool fromArgs(String[] args) {_		Map<String, String> map = new HashMap<String, String>(args.length / 2)___		String key = null__		String value = null__		boolean expectValue = false__		for(String arg: args) {_			_			if(arg.startsWith("--")) {_				if(expectValue) {_					_					if(value != null) {_						throw new IllegalStateException("Unexpected state")__					}_					map.put(key, NO_VALUE_KEY)__					_				}_				key = arg.substring(2)__				expectValue = true__			} _			else if(arg.startsWith("-")) {_				_				if(expectValue) {__					if(NumberUtils.isNumber(arg)) {_						_						value = arg__						expectValue = false__					} else {_						if(value != null) {_							throw new IllegalStateException("Unexpected state")__						}_						_						map.put(key, NO_VALUE_KEY)__						key = arg.substring(1)__						expectValue = true__					}_				} else {_					_					key = arg.substring(1)__					expectValue = true__				}_			} else {_				if(expectValue) {_					value = arg__					expectValue = false__				} else {_					throw new RuntimeException("Error parsing arguments '"+ Arrays.toString(args)+"' on '"+arg+"'. Unexpected value. Please prefix values with -- or -.")__				}_			}__			if(value == null && key == null) {_				throw new IllegalStateException("Value and key can not be null at the same time")__			}_			if(key != null && value == null && !expectValue) {_				throw new IllegalStateException("Value expected but flag not set")__			}_			if(key != null && value != null) {_				map.put(key, value)__				key = null__				value = null__				expectValue = false__			}_			if(key != null && key.length() == 0) {_				throw new IllegalArgumentException("The input "+Arrays.toString(args)+" contains an empty argument")__			}__			if(key != null && !expectValue) {_				map.put(key, NO_VALUE_KEY)__				key = null__				expectValue = false__			}_		}_		if(key != null) {_			map.put(key, NO_VALUE_KEY)__		}__		return fromMap(map)__	};returns,link,parameter,tool,for,the,given,arguments,the,arguments,are,keys,followed,by,values,keys,have,to,start,with,or,p,strong,example,arguments,strong,key1,value1,key2,value2,key3,value3,param,args,input,array,arguments,return,a,link,parameter,tool;public,static,parameter,tool,from,args,string,args,map,string,string,map,new,hash,map,string,string,args,length,2,string,key,null,string,value,null,boolean,expect,value,false,for,string,arg,args,if,arg,starts,with,if,expect,value,if,value,null,throw,new,illegal,state,exception,unexpected,state,map,put,key,key,arg,substring,2,expect,value,true,else,if,arg,starts,with,if,expect,value,if,number,utils,is,number,arg,value,arg,expect,value,false,else,if,value,null,throw,new,illegal,state,exception,unexpected,state,map,put,key,key,arg,substring,1,expect,value,true,else,key,arg,substring,1,expect,value,true,else,if,expect,value,value,arg,expect,value,false,else,throw,new,runtime,exception,error,parsing,arguments,arrays,to,string,args,on,arg,unexpected,value,please,prefix,values,with,or,if,value,null,key,null,throw,new,illegal,state,exception,value,and,key,can,not,be,null,at,the,same,time,if,key,null,value,null,expect,value,throw,new,illegal,state,exception,value,expected,but,flag,not,set,if,key,null,value,null,map,put,key,value,key,null,value,null,expect,value,false,if,key,null,key,length,0,throw,new,illegal,argument,exception,the,input,arrays,to,string,args,contains,an,empty,argument,if,key,null,expect,value,map,put,key,key,null,expect,value,false,if,key,null,map,put,key,return,from,map,map
ParameterTool -> public static ParameterTool fromArgs(String[] args);1474626882;Returns {@link ParameterTool} for the given arguments. The arguments are keys followed by values._Keys have to start with '-' or '--'_<p>_<strong>Example arguments:</strong>_--key1 value1 --key2 value2 -key3 value3__@param args Input array arguments_@return A {@link ParameterTool};public static ParameterTool fromArgs(String[] args) {_		Map<String, String> map = new HashMap<String, String>(args.length / 2)___		String key = null__		String value = null__		boolean expectValue = false__		for(String arg: args) {_			_			if(arg.startsWith("--")) {_				if(expectValue) {_					_					if(value != null) {_						throw new IllegalStateException("Unexpected state")__					}_					map.put(key, NO_VALUE_KEY)__					_				}_				key = arg.substring(2)__				expectValue = true__			} _			else if(arg.startsWith("-")) {_				_				if(expectValue) {__					if(NumberUtils.isNumber(arg)) {_						_						value = arg__						expectValue = false__					} else {_						if(value != null) {_							throw new IllegalStateException("Unexpected state")__						}_						_						map.put(key, NO_VALUE_KEY)__						key = arg.substring(1)__						expectValue = true__					}_				} else {_					_					key = arg.substring(1)__					expectValue = true__				}_			} else {_				if(expectValue) {_					value = arg__					expectValue = false__				} else {_					throw new RuntimeException("Error parsing arguments '"+ Arrays.toString(args)+"' on '"+arg+"'. Unexpected value. Please prefix values with -- or -.")__				}_			}__			if(value == null && key == null) {_				throw new IllegalStateException("Value and key can not be null at the same time")__			}_			if(key != null && value == null && !expectValue) {_				throw new IllegalStateException("Value expected but flag not set")__			}_			if(key != null && value != null) {_				map.put(key, value)__				key = null__				value = null__				expectValue = false__			}_			if(key != null && key.length() == 0) {_				throw new IllegalArgumentException("The input "+Arrays.toString(args)+" contains an empty argument")__			}__			if(key != null && !expectValue) {_				map.put(key, NO_VALUE_KEY)__				key = null__				expectValue = false__			}_		}_		if(key != null) {_			map.put(key, NO_VALUE_KEY)__		}__		return fromMap(map)__	};returns,link,parameter,tool,for,the,given,arguments,the,arguments,are,keys,followed,by,values,keys,have,to,start,with,or,p,strong,example,arguments,strong,key1,value1,key2,value2,key3,value3,param,args,input,array,arguments,return,a,link,parameter,tool;public,static,parameter,tool,from,args,string,args,map,string,string,map,new,hash,map,string,string,args,length,2,string,key,null,string,value,null,boolean,expect,value,false,for,string,arg,args,if,arg,starts,with,if,expect,value,if,value,null,throw,new,illegal,state,exception,unexpected,state,map,put,key,key,arg,substring,2,expect,value,true,else,if,arg,starts,with,if,expect,value,if,number,utils,is,number,arg,value,arg,expect,value,false,else,if,value,null,throw,new,illegal,state,exception,unexpected,state,map,put,key,key,arg,substring,1,expect,value,true,else,key,arg,substring,1,expect,value,true,else,if,expect,value,value,arg,expect,value,false,else,throw,new,runtime,exception,error,parsing,arguments,arrays,to,string,args,on,arg,unexpected,value,please,prefix,values,with,or,if,value,null,key,null,throw,new,illegal,state,exception,value,and,key,can,not,be,null,at,the,same,time,if,key,null,value,null,expect,value,throw,new,illegal,state,exception,value,expected,but,flag,not,set,if,key,null,value,null,map,put,key,value,key,null,value,null,expect,value,false,if,key,null,key,length,0,throw,new,illegal,argument,exception,the,input,arrays,to,string,args,contains,an,empty,argument,if,key,null,expect,value,map,put,key,key,null,expect,value,false,if,key,null,map,put,key,return,from,map,map
ParameterTool -> public static ParameterTool fromArgs(String[] args);1478107885;Returns {@link ParameterTool} for the given arguments. The arguments are keys followed by values._Keys have to start with '-' or '--'_<p>_<strong>Example arguments:</strong>_--key1 value1 --key2 value2 -key3 value3__@param args Input array arguments_@return A {@link ParameterTool};public static ParameterTool fromArgs(String[] args) {_		Map<String, String> map = new HashMap<String, String>(args.length / 2)___		String key = null__		String value = null__		boolean expectValue = false__		for(String arg: args) {_			_			if(arg.startsWith("--")) {_				if(expectValue) {_					_					if(value != null) {_						throw new IllegalStateException("Unexpected state")__					}_					map.put(key, NO_VALUE_KEY)__					_				}_				key = arg.substring(2)__				expectValue = true__			} _			else if(arg.startsWith("-")) {_				_				if(expectValue) {__					if(NumberUtils.isNumber(arg)) {_						_						value = arg__						expectValue = false__					} else {_						if(value != null) {_							throw new IllegalStateException("Unexpected state")__						}_						_						map.put(key, NO_VALUE_KEY)__						key = arg.substring(1)__						expectValue = true__					}_				} else {_					_					key = arg.substring(1)__					expectValue = true__				}_			} else {_				if(expectValue) {_					value = arg__					expectValue = false__				} else {_					throw new RuntimeException("Error parsing arguments '"+ Arrays.toString(args)+"' on '"+arg+"'. Unexpected value. Please prefix values with -- or -.")__				}_			}__			if(value == null && key == null) {_				throw new IllegalStateException("Value and key can not be null at the same time")__			}_			if(key != null && value == null && !expectValue) {_				throw new IllegalStateException("Value expected but flag not set")__			}_			if(key != null && value != null) {_				map.put(key, value)__				key = null__				value = null__				expectValue = false__			}_			if(key != null && key.length() == 0) {_				throw new IllegalArgumentException("The input "+Arrays.toString(args)+" contains an empty argument")__			}__			if(key != null && !expectValue) {_				map.put(key, NO_VALUE_KEY)__				key = null__				expectValue = false__			}_		}_		if(key != null) {_			map.put(key, NO_VALUE_KEY)__		}__		return fromMap(map)__	};returns,link,parameter,tool,for,the,given,arguments,the,arguments,are,keys,followed,by,values,keys,have,to,start,with,or,p,strong,example,arguments,strong,key1,value1,key2,value2,key3,value3,param,args,input,array,arguments,return,a,link,parameter,tool;public,static,parameter,tool,from,args,string,args,map,string,string,map,new,hash,map,string,string,args,length,2,string,key,null,string,value,null,boolean,expect,value,false,for,string,arg,args,if,arg,starts,with,if,expect,value,if,value,null,throw,new,illegal,state,exception,unexpected,state,map,put,key,key,arg,substring,2,expect,value,true,else,if,arg,starts,with,if,expect,value,if,number,utils,is,number,arg,value,arg,expect,value,false,else,if,value,null,throw,new,illegal,state,exception,unexpected,state,map,put,key,key,arg,substring,1,expect,value,true,else,key,arg,substring,1,expect,value,true,else,if,expect,value,value,arg,expect,value,false,else,throw,new,runtime,exception,error,parsing,arguments,arrays,to,string,args,on,arg,unexpected,value,please,prefix,values,with,or,if,value,null,key,null,throw,new,illegal,state,exception,value,and,key,can,not,be,null,at,the,same,time,if,key,null,value,null,expect,value,throw,new,illegal,state,exception,value,expected,but,flag,not,set,if,key,null,value,null,map,put,key,value,key,null,value,null,expect,value,false,if,key,null,key,length,0,throw,new,illegal,argument,exception,the,input,arrays,to,string,args,contains,an,empty,argument,if,key,null,expect,value,map,put,key,key,null,expect,value,false,if,key,null,map,put,key,return,from,map,map
ParameterTool -> public static ParameterTool fromArgs(String[] args);1499777482;Returns {@link ParameterTool} for the given arguments. The arguments are keys followed by values._Keys have to start with '-' or '--'_<p>_<strong>Example arguments:</strong>_--key1 value1 --key2 value2 -key3 value3__@param args Input array arguments_@return A {@link ParameterTool};public static ParameterTool fromArgs(String[] args) {_		Map<String, String> map = new HashMap<String, String>(args.length / 2)___		String key = null__		String value = null__		boolean expectValue = false__		for(String arg: args) {_			_			if(arg.startsWith("--")) {_				if(expectValue) {_					_					if(value != null) {_						throw new IllegalStateException("Unexpected state")__					}_					map.put(key, NO_VALUE_KEY)__					_				}_				key = arg.substring(2)__				expectValue = true__			} _			else if(arg.startsWith("-")) {_				_				if(expectValue) {__					if(NumberUtils.isNumber(arg)) {_						_						value = arg__						expectValue = false__					} else {_						if(value != null) {_							throw new IllegalStateException("Unexpected state")__						}_						_						map.put(key, NO_VALUE_KEY)__						key = arg.substring(1)__						expectValue = true__					}_				} else {_					_					key = arg.substring(1)__					expectValue = true__				}_			} else {_				if(expectValue) {_					value = arg__					expectValue = false__				} else {_					throw new RuntimeException("Error parsing arguments '"+ Arrays.toString(args)+"' on '"+arg+"'. Unexpected value. Please prefix values with -- or -.")__				}_			}__			if(value == null && key == null) {_				throw new IllegalStateException("Value and key can not be null at the same time")__			}_			if(key != null && value == null && !expectValue) {_				throw new IllegalStateException("Value expected but flag not set")__			}_			if(key != null && value != null) {_				map.put(key, value)__				key = null__				value = null__				expectValue = false__			}_			if(key != null && key.length() == 0) {_				throw new IllegalArgumentException("The input "+Arrays.toString(args)+" contains an empty argument")__			}__			if(key != null && !expectValue) {_				map.put(key, NO_VALUE_KEY)__				key = null__				expectValue = false__			}_		}_		if(key != null) {_			map.put(key, NO_VALUE_KEY)__		}__		return fromMap(map)__	};returns,link,parameter,tool,for,the,given,arguments,the,arguments,are,keys,followed,by,values,keys,have,to,start,with,or,p,strong,example,arguments,strong,key1,value1,key2,value2,key3,value3,param,args,input,array,arguments,return,a,link,parameter,tool;public,static,parameter,tool,from,args,string,args,map,string,string,map,new,hash,map,string,string,args,length,2,string,key,null,string,value,null,boolean,expect,value,false,for,string,arg,args,if,arg,starts,with,if,expect,value,if,value,null,throw,new,illegal,state,exception,unexpected,state,map,put,key,key,arg,substring,2,expect,value,true,else,if,arg,starts,with,if,expect,value,if,number,utils,is,number,arg,value,arg,expect,value,false,else,if,value,null,throw,new,illegal,state,exception,unexpected,state,map,put,key,key,arg,substring,1,expect,value,true,else,key,arg,substring,1,expect,value,true,else,if,expect,value,value,arg,expect,value,false,else,throw,new,runtime,exception,error,parsing,arguments,arrays,to,string,args,on,arg,unexpected,value,please,prefix,values,with,or,if,value,null,key,null,throw,new,illegal,state,exception,value,and,key,can,not,be,null,at,the,same,time,if,key,null,value,null,expect,value,throw,new,illegal,state,exception,value,expected,but,flag,not,set,if,key,null,value,null,map,put,key,value,key,null,value,null,expect,value,false,if,key,null,key,length,0,throw,new,illegal,argument,exception,the,input,arrays,to,string,args,contains,an,empty,argument,if,key,null,expect,value,map,put,key,key,null,expect,value,false,if,key,null,map,put,key,return,from,map,map
ParameterTool -> public static ParameterTool fromArgs(String[] args);1500387265;Returns {@link ParameterTool} for the given arguments. The arguments are keys followed by values._Keys have to start with '-' or '--'__<p><strong>Example arguments:</strong>_--key1 value1 --key2 value2 -key3 value3__@param args Input array arguments_@return A {@link ParameterTool};public static ParameterTool fromArgs(String[] args) {_		Map<String, String> map = new HashMap<String, String>(args.length / 2)___		String key = null__		String value = null__		boolean expectValue = false__		for (String arg : args) {_			_			if (arg.startsWith("--")) {_				if (expectValue) {_					_					if (value != null) {_						throw new IllegalStateException("Unexpected state")__					}_					map.put(key, NO_VALUE_KEY)__					_				}_				key = arg.substring(2)__				expectValue = true__			} _			else if (arg.startsWith("-")) {_				_				if (expectValue) {__					if (NumberUtils.isNumber(arg)) {_						_						value = arg__						expectValue = false__					} else {_						if (value != null) {_							throw new IllegalStateException("Unexpected state")__						}_						_						map.put(key, NO_VALUE_KEY)__						key = arg.substring(1)__						expectValue = true__					}_				} else {_					_					key = arg.substring(1)__					expectValue = true__				}_			} else {_				if (expectValue) {_					value = arg__					expectValue = false__				} else {_					throw new RuntimeException("Error parsing arguments '" + Arrays.toString(args) + "' on '" + arg + "'. Unexpected value. Please prefix values with -- or -.")__				}_			}__			if (value == null && key == null) {_				throw new IllegalStateException("Value and key can not be null at the same time")__			}_			if (key != null && value == null && !expectValue) {_				throw new IllegalStateException("Value expected but flag not set")__			}_			if (key != null && value != null) {_				map.put(key, value)__				key = null__				value = null__				expectValue = false__			}_			if (key != null && key.length() == 0) {_				throw new IllegalArgumentException("The input " + Arrays.toString(args) + " contains an empty argument")__			}__			if (key != null && !expectValue) {_				map.put(key, NO_VALUE_KEY)__				key = null__				expectValue = false__			}_		}_		if (key != null) {_			map.put(key, NO_VALUE_KEY)__		}__		return fromMap(map)__	};returns,link,parameter,tool,for,the,given,arguments,the,arguments,are,keys,followed,by,values,keys,have,to,start,with,or,p,strong,example,arguments,strong,key1,value1,key2,value2,key3,value3,param,args,input,array,arguments,return,a,link,parameter,tool;public,static,parameter,tool,from,args,string,args,map,string,string,map,new,hash,map,string,string,args,length,2,string,key,null,string,value,null,boolean,expect,value,false,for,string,arg,args,if,arg,starts,with,if,expect,value,if,value,null,throw,new,illegal,state,exception,unexpected,state,map,put,key,key,arg,substring,2,expect,value,true,else,if,arg,starts,with,if,expect,value,if,number,utils,is,number,arg,value,arg,expect,value,false,else,if,value,null,throw,new,illegal,state,exception,unexpected,state,map,put,key,key,arg,substring,1,expect,value,true,else,key,arg,substring,1,expect,value,true,else,if,expect,value,value,arg,expect,value,false,else,throw,new,runtime,exception,error,parsing,arguments,arrays,to,string,args,on,arg,unexpected,value,please,prefix,values,with,or,if,value,null,key,null,throw,new,illegal,state,exception,value,and,key,can,not,be,null,at,the,same,time,if,key,null,value,null,expect,value,throw,new,illegal,state,exception,value,expected,but,flag,not,set,if,key,null,value,null,map,put,key,value,key,null,value,null,expect,value,false,if,key,null,key,length,0,throw,new,illegal,argument,exception,the,input,arrays,to,string,args,contains,an,empty,argument,if,key,null,expect,value,map,put,key,key,null,expect,value,false,if,key,null,map,put,key,return,from,map,map
ParameterTool -> public static ParameterTool fromArgs(String[] args);1505831007;Returns {@link ParameterTool} for the given arguments. The arguments are keys followed by values._Keys have to start with '-' or '--'__<p><strong>Example arguments:</strong>_--key1 value1 --key2 value2 -key3 value3__@param args Input array arguments_@return A {@link ParameterTool};public static ParameterTool fromArgs(String[] args) {_		Map<String, String> map = new HashMap<String, String>(args.length / 2)___		String key = null__		String value = null__		boolean expectValue = false__		for (String arg : args) {_			_			if (arg.startsWith("--")) {_				if (expectValue) {_					_					if (value != null) {_						throw new IllegalStateException("Unexpected state")__					}_					map.put(key, NO_VALUE_KEY)__					_				}_				key = arg.substring(2)__				expectValue = true__			} _			else if (arg.startsWith("-")) {_				_				if (expectValue) {__					if (NumberUtils.isNumber(arg)) {_						_						value = arg__						expectValue = false__					} else {_						if (value != null) {_							throw new IllegalStateException("Unexpected state")__						}_						_						map.put(key, NO_VALUE_KEY)__						key = arg.substring(1)__						expectValue = true__					}_				} else {_					_					key = arg.substring(1)__					expectValue = true__				}_			} else {_				if (expectValue) {_					value = arg__					expectValue = false__				} else {_					throw new RuntimeException("Error parsing arguments '" + Arrays.toString(args) + "' on '" + arg + "'. Unexpected value. Please prefix values with -- or -.")__				}_			}__			if (value == null && key == null) {_				throw new IllegalStateException("Value and key can not be null at the same time")__			}_			if (key != null && value == null && !expectValue) {_				throw new IllegalStateException("Value expected but flag not set")__			}_			if (key != null && value != null) {_				map.put(key, value)__				key = null__				value = null__				expectValue = false__			}_			if (key != null && key.length() == 0) {_				throw new IllegalArgumentException("The input " + Arrays.toString(args) + " contains an empty argument")__			}__			if (key != null && !expectValue) {_				map.put(key, NO_VALUE_KEY)__				key = null__				expectValue = false__			}_		}_		if (key != null) {_			map.put(key, NO_VALUE_KEY)__		}__		return fromMap(map)__	};returns,link,parameter,tool,for,the,given,arguments,the,arguments,are,keys,followed,by,values,keys,have,to,start,with,or,p,strong,example,arguments,strong,key1,value1,key2,value2,key3,value3,param,args,input,array,arguments,return,a,link,parameter,tool;public,static,parameter,tool,from,args,string,args,map,string,string,map,new,hash,map,string,string,args,length,2,string,key,null,string,value,null,boolean,expect,value,false,for,string,arg,args,if,arg,starts,with,if,expect,value,if,value,null,throw,new,illegal,state,exception,unexpected,state,map,put,key,key,arg,substring,2,expect,value,true,else,if,arg,starts,with,if,expect,value,if,number,utils,is,number,arg,value,arg,expect,value,false,else,if,value,null,throw,new,illegal,state,exception,unexpected,state,map,put,key,key,arg,substring,1,expect,value,true,else,key,arg,substring,1,expect,value,true,else,if,expect,value,value,arg,expect,value,false,else,throw,new,runtime,exception,error,parsing,arguments,arrays,to,string,args,on,arg,unexpected,value,please,prefix,values,with,or,if,value,null,key,null,throw,new,illegal,state,exception,value,and,key,can,not,be,null,at,the,same,time,if,key,null,value,null,expect,value,throw,new,illegal,state,exception,value,expected,but,flag,not,set,if,key,null,value,null,map,put,key,value,key,null,value,null,expect,value,false,if,key,null,key,length,0,throw,new,illegal,argument,exception,the,input,arrays,to,string,args,contains,an,empty,argument,if,key,null,expect,value,map,put,key,key,null,expect,value,false,if,key,null,map,put,key,return,from,map,map
ParameterTool -> public static ParameterTool fromArgs(String[] args);1506499511;Returns {@link ParameterTool} for the given arguments. The arguments are keys followed by values._Keys have to start with '-' or '--'__<p><strong>Example arguments:</strong>_--key1 value1 --key2 value2 -key3 value3__@param args Input array arguments_@return A {@link ParameterTool};public static ParameterTool fromArgs(String[] args) {_		Map<String, String> map = new HashMap<String, String>(args.length / 2)___		String key = null__		String value = null__		boolean expectValue = false__		for (String arg : args) {_			_			if (arg.startsWith("--")) {_				if (expectValue) {_					_					if (value != null) {_						throw new IllegalStateException("Unexpected state")__					}_					map.put(key, NO_VALUE_KEY)__					_				}_				key = arg.substring(2)__				expectValue = true__			} _			else if (arg.startsWith("-")) {_				_				if (expectValue) {__					if (NumberUtils.isNumber(arg)) {_						_						value = arg__						expectValue = false__					} else {_						if (value != null) {_							throw new IllegalStateException("Unexpected state")__						}_						_						map.put(key, NO_VALUE_KEY)__						key = arg.substring(1)__						expectValue = true__					}_				} else {_					_					key = arg.substring(1)__					expectValue = true__				}_			} else {_				if (expectValue) {_					value = arg__					expectValue = false__				} else {_					throw new RuntimeException("Error parsing arguments '" + Arrays.toString(args) + "' on '" + arg + "'. Unexpected value. Please prefix values with -- or -.")__				}_			}__			if (value == null && key == null) {_				throw new IllegalStateException("Value and key can not be null at the same time")__			}_			if (key != null && value == null && !expectValue) {_				throw new IllegalStateException("Value expected but flag not set")__			}_			if (key != null && value != null) {_				map.put(key, value)__				key = null__				value = null__				expectValue = false__			}_			if (key != null && key.length() == 0) {_				throw new IllegalArgumentException("The input " + Arrays.toString(args) + " contains an empty argument")__			}__			if (key != null && !expectValue) {_				map.put(key, NO_VALUE_KEY)__				key = null__				expectValue = false__			}_		}_		if (key != null) {_			map.put(key, NO_VALUE_KEY)__		}__		return fromMap(map)__	};returns,link,parameter,tool,for,the,given,arguments,the,arguments,are,keys,followed,by,values,keys,have,to,start,with,or,p,strong,example,arguments,strong,key1,value1,key2,value2,key3,value3,param,args,input,array,arguments,return,a,link,parameter,tool;public,static,parameter,tool,from,args,string,args,map,string,string,map,new,hash,map,string,string,args,length,2,string,key,null,string,value,null,boolean,expect,value,false,for,string,arg,args,if,arg,starts,with,if,expect,value,if,value,null,throw,new,illegal,state,exception,unexpected,state,map,put,key,key,arg,substring,2,expect,value,true,else,if,arg,starts,with,if,expect,value,if,number,utils,is,number,arg,value,arg,expect,value,false,else,if,value,null,throw,new,illegal,state,exception,unexpected,state,map,put,key,key,arg,substring,1,expect,value,true,else,key,arg,substring,1,expect,value,true,else,if,expect,value,value,arg,expect,value,false,else,throw,new,runtime,exception,error,parsing,arguments,arrays,to,string,args,on,arg,unexpected,value,please,prefix,values,with,or,if,value,null,key,null,throw,new,illegal,state,exception,value,and,key,can,not,be,null,at,the,same,time,if,key,null,value,null,expect,value,throw,new,illegal,state,exception,value,expected,but,flag,not,set,if,key,null,value,null,map,put,key,value,key,null,value,null,expect,value,false,if,key,null,key,length,0,throw,new,illegal,argument,exception,the,input,arrays,to,string,args,contains,an,empty,argument,if,key,null,expect,value,map,put,key,key,null,expect,value,false,if,key,null,map,put,key,return,from,map,map
ParameterTool -> public static ParameterTool fromArgs(String[] args);1511189418;Returns {@link ParameterTool} for the given arguments. The arguments are keys followed by values._Keys have to start with '-' or '--'__<p><strong>Example arguments:</strong>_--key1 value1 --key2 value2 -key3 value3__@param args Input array arguments_@return A {@link ParameterTool};public static ParameterTool fromArgs(String[] args) {_		Map<String, String> map = new HashMap<String, String>(args.length / 2)___		String key = null__		String value = null__		boolean expectValue = false__		for (String arg : args) {_			_			if (arg.startsWith("--")) {_				if (expectValue) {_					_					if (value != null) {_						throw new IllegalStateException("Unexpected state")__					}_					map.put(key, NO_VALUE_KEY)__					_				}_				key = arg.substring(2)__				expectValue = true__			} _			else if (arg.startsWith("-")) {_				_				if (expectValue) {__					if (NumberUtils.isNumber(arg)) {_						_						value = arg__						expectValue = false__					} else {_						if (value != null) {_							throw new IllegalStateException("Unexpected state")__						}_						_						map.put(key, NO_VALUE_KEY)__						key = arg.substring(1)__						expectValue = true__					}_				} else {_					_					key = arg.substring(1)__					expectValue = true__				}_			} else {_				if (expectValue) {_					value = arg__					expectValue = false__				} else {_					throw new RuntimeException("Error parsing arguments '" + Arrays.toString(args) + "' on '" + arg + "'. Unexpected value. Please prefix values with -- or -.")__				}_			}__			if (value == null && key == null) {_				throw new IllegalStateException("Value and key can not be null at the same time")__			}_			if (key != null && value == null && !expectValue) {_				throw new IllegalStateException("Value expected but flag not set")__			}_			if (key != null && value != null) {_				map.put(key, value)__				key = null__				value = null__				expectValue = false__			}_			if (key != null && key.length() == 0) {_				throw new IllegalArgumentException("The input " + Arrays.toString(args) + " contains an empty argument")__			}__			if (key != null && !expectValue) {_				map.put(key, NO_VALUE_KEY)__				key = null__				expectValue = false__			}_		}_		if (key != null) {_			map.put(key, NO_VALUE_KEY)__		}__		return fromMap(map)__	};returns,link,parameter,tool,for,the,given,arguments,the,arguments,are,keys,followed,by,values,keys,have,to,start,with,or,p,strong,example,arguments,strong,key1,value1,key2,value2,key3,value3,param,args,input,array,arguments,return,a,link,parameter,tool;public,static,parameter,tool,from,args,string,args,map,string,string,map,new,hash,map,string,string,args,length,2,string,key,null,string,value,null,boolean,expect,value,false,for,string,arg,args,if,arg,starts,with,if,expect,value,if,value,null,throw,new,illegal,state,exception,unexpected,state,map,put,key,key,arg,substring,2,expect,value,true,else,if,arg,starts,with,if,expect,value,if,number,utils,is,number,arg,value,arg,expect,value,false,else,if,value,null,throw,new,illegal,state,exception,unexpected,state,map,put,key,key,arg,substring,1,expect,value,true,else,key,arg,substring,1,expect,value,true,else,if,expect,value,value,arg,expect,value,false,else,throw,new,runtime,exception,error,parsing,arguments,arrays,to,string,args,on,arg,unexpected,value,please,prefix,values,with,or,if,value,null,key,null,throw,new,illegal,state,exception,value,and,key,can,not,be,null,at,the,same,time,if,key,null,value,null,expect,value,throw,new,illegal,state,exception,value,expected,but,flag,not,set,if,key,null,value,null,map,put,key,value,key,null,value,null,expect,value,false,if,key,null,key,length,0,throw,new,illegal,argument,exception,the,input,arrays,to,string,args,contains,an,empty,argument,if,key,null,expect,value,map,put,key,key,null,expect,value,false,if,key,null,map,put,key,return,from,map,map
ParameterTool -> public static ParameterTool fromArgs(String[] args);1511966704;Returns {@link ParameterTool} for the given arguments. The arguments are keys followed by values._Keys have to start with '-' or '--'__<p><strong>Example arguments:</strong>_--key1 value1 --key2 value2 -key3 value3__@param args Input array arguments_@return A {@link ParameterTool};public static ParameterTool fromArgs(String[] args) {_		Map<String, String> map = new HashMap<String, String>(args.length / 2)___		String key = null__		String value = null__		boolean expectValue = false__		for (String arg : args) {_			_			if (arg.startsWith("--")) {_				if (expectValue) {_					_					if (value != null) {_						throw new IllegalStateException("Unexpected state")__					}_					map.put(key, NO_VALUE_KEY)__					_				}_				key = arg.substring(2)__				expectValue = true__			} _			else if (arg.startsWith("-")) {_				_				if (expectValue) {__					if (NumberUtils.isNumber(arg)) {_						_						value = arg__						expectValue = false__					} else {_						if (value != null) {_							throw new IllegalStateException("Unexpected state")__						}_						_						map.put(key, NO_VALUE_KEY)__						key = arg.substring(1)__						expectValue = true__					}_				} else {_					_					key = arg.substring(1)__					expectValue = true__				}_			} else {_				if (expectValue) {_					value = arg__					expectValue = false__				} else {_					throw new RuntimeException("Error parsing arguments '" + Arrays.toString(args) + "' on '" + arg + "'. Unexpected value. Please prefix values with -- or -.")__				}_			}__			if (value == null && key == null) {_				throw new IllegalStateException("Value and key can not be null at the same time")__			}_			if (key != null && value == null && !expectValue) {_				throw new IllegalStateException("Value expected but flag not set")__			}_			if (key != null && value != null) {_				map.put(key, value)__				key = null__				value = null__				expectValue = false__			}_			if (key != null && key.length() == 0) {_				throw new IllegalArgumentException("The input " + Arrays.toString(args) + " contains an empty argument")__			}__			if (key != null && !expectValue) {_				map.put(key, NO_VALUE_KEY)__				key = null__				expectValue = false__			}_		}_		if (key != null) {_			map.put(key, NO_VALUE_KEY)__		}__		return fromMap(map)__	};returns,link,parameter,tool,for,the,given,arguments,the,arguments,are,keys,followed,by,values,keys,have,to,start,with,or,p,strong,example,arguments,strong,key1,value1,key2,value2,key3,value3,param,args,input,array,arguments,return,a,link,parameter,tool;public,static,parameter,tool,from,args,string,args,map,string,string,map,new,hash,map,string,string,args,length,2,string,key,null,string,value,null,boolean,expect,value,false,for,string,arg,args,if,arg,starts,with,if,expect,value,if,value,null,throw,new,illegal,state,exception,unexpected,state,map,put,key,key,arg,substring,2,expect,value,true,else,if,arg,starts,with,if,expect,value,if,number,utils,is,number,arg,value,arg,expect,value,false,else,if,value,null,throw,new,illegal,state,exception,unexpected,state,map,put,key,key,arg,substring,1,expect,value,true,else,key,arg,substring,1,expect,value,true,else,if,expect,value,value,arg,expect,value,false,else,throw,new,runtime,exception,error,parsing,arguments,arrays,to,string,args,on,arg,unexpected,value,please,prefix,values,with,or,if,value,null,key,null,throw,new,illegal,state,exception,value,and,key,can,not,be,null,at,the,same,time,if,key,null,value,null,expect,value,throw,new,illegal,state,exception,value,expected,but,flag,not,set,if,key,null,value,null,map,put,key,value,key,null,value,null,expect,value,false,if,key,null,key,length,0,throw,new,illegal,argument,exception,the,input,arrays,to,string,args,contains,an,empty,argument,if,key,null,expect,value,map,put,key,key,null,expect,value,false,if,key,null,map,put,key,return,from,map,map
ParameterTool -> public static ParameterTool fromArgs(String[] args);1539096710;Returns {@link ParameterTool} for the given arguments. The arguments are keys followed by values._Keys have to start with '-' or '--'__<p><strong>Example arguments:</strong>_--key1 value1 --key2 value2 -key3 value3__@param args Input array arguments_@return A {@link ParameterTool};public static ParameterTool fromArgs(String[] args) {_		final Map<String, String> map = new HashMap<>(args.length / 2)___		int i = 0__		while (i < args.length) {_			final String key___			if (args[i].startsWith("--")) {_				key = args[i].substring(2)__			} else if (args[i].startsWith("-")) {_				key = args[i].substring(1)__			} else {_				throw new IllegalArgumentException(_					String.format("Error parsing arguments '%s' on '%s'. Please prefix keys with -- or -.",_						Arrays.toString(args), args[i]))__			}__			if (key.length() == 0) {_				throw new IllegalArgumentException(_					"The input " + Arrays.toString(args) + " contains an empty argument")__			}__			i += 1_ __			if (i >= args.length) {_				map.put(key, NO_VALUE_KEY)__			} else if (NumberUtils.isNumber(args[i])) {_				map.put(key, args[i])__				i += 1__			} else if (args[i].startsWith("--") || args[i].startsWith("-")) {_				_				_				map.put(key, NO_VALUE_KEY)__			} else {_				map.put(key, args[i])__				i += 1__			}_		}__		return fromMap(map)__	};returns,link,parameter,tool,for,the,given,arguments,the,arguments,are,keys,followed,by,values,keys,have,to,start,with,or,p,strong,example,arguments,strong,key1,value1,key2,value2,key3,value3,param,args,input,array,arguments,return,a,link,parameter,tool;public,static,parameter,tool,from,args,string,args,final,map,string,string,map,new,hash,map,args,length,2,int,i,0,while,i,args,length,final,string,key,if,args,i,starts,with,key,args,i,substring,2,else,if,args,i,starts,with,key,args,i,substring,1,else,throw,new,illegal,argument,exception,string,format,error,parsing,arguments,s,on,s,please,prefix,keys,with,or,arrays,to,string,args,args,i,if,key,length,0,throw,new,illegal,argument,exception,the,input,arrays,to,string,args,contains,an,empty,argument,i,1,if,i,args,length,map,put,key,else,if,number,utils,is,number,args,i,map,put,key,args,i,i,1,else,if,args,i,starts,with,args,i,starts,with,map,put,key,else,map,put,key,args,i,i,1,return,from,map,map
ParameterTool -> public static ParameterTool fromArgs(String[] args);1539096710;Returns {@link ParameterTool} for the given arguments. The arguments are keys followed by values._Keys have to start with '-' or '--'__<p><strong>Example arguments:</strong>_--key1 value1 --key2 value2 -key3 value3__@param args Input array arguments_@return A {@link ParameterTool};public static ParameterTool fromArgs(String[] args) {_		final Map<String, String> map = new HashMap<>(args.length / 2)___		int i = 0__		while (i < args.length) {_			final String key___			if (args[i].startsWith("--")) {_				key = args[i].substring(2)__			} else if (args[i].startsWith("-")) {_				key = args[i].substring(1)__			} else {_				throw new IllegalArgumentException(_					String.format("Error parsing arguments '%s' on '%s'. Please prefix keys with -- or -.",_						Arrays.toString(args), args[i]))__			}__			if (key.isEmpty()) {_				throw new IllegalArgumentException(_					"The input " + Arrays.toString(args) + " contains an empty argument")__			}__			i += 1_ __			if (i >= args.length) {_				map.put(key, NO_VALUE_KEY)__			} else if (NumberUtils.isNumber(args[i])) {_				map.put(key, args[i])__				i += 1__			} else if (args[i].startsWith("--") || args[i].startsWith("-")) {_				_				_				map.put(key, NO_VALUE_KEY)__			} else {_				map.put(key, args[i])__				i += 1__			}_		}__		return fromMap(map)__	};returns,link,parameter,tool,for,the,given,arguments,the,arguments,are,keys,followed,by,values,keys,have,to,start,with,or,p,strong,example,arguments,strong,key1,value1,key2,value2,key3,value3,param,args,input,array,arguments,return,a,link,parameter,tool;public,static,parameter,tool,from,args,string,args,final,map,string,string,map,new,hash,map,args,length,2,int,i,0,while,i,args,length,final,string,key,if,args,i,starts,with,key,args,i,substring,2,else,if,args,i,starts,with,key,args,i,substring,1,else,throw,new,illegal,argument,exception,string,format,error,parsing,arguments,s,on,s,please,prefix,keys,with,or,arrays,to,string,args,args,i,if,key,is,empty,throw,new,illegal,argument,exception,the,input,arrays,to,string,args,contains,an,empty,argument,i,1,if,i,args,length,map,put,key,else,if,number,utils,is,number,args,i,map,put,key,args,i,i,1,else,if,args,i,starts,with,args,i,starts,with,map,put,key,else,map,put,key,args,i,i,1,return,from,map,map
ParameterTool -> public int getInt(String key);1441981413;Returns the Integer value for the given key._The method fails if the key does not exist or the value is not an Integer.;public int getInt(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Integer.valueOf(value)__	};returns,the,integer,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist,or,the,value,is,not,an,integer;public,int,get,int,string,key,add,to,defaults,key,null,string,value,get,required,key,return,integer,value,of,value
ParameterTool -> public int getInt(String key);1443123598;Returns the Integer value for the given key._The method fails if the key does not exist or the value is not an Integer.;public int getInt(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Integer.valueOf(value)__	};returns,the,integer,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist,or,the,value,is,not,an,integer;public,int,get,int,string,key,add,to,defaults,key,null,string,value,get,required,key,return,integer,value,of,value
ParameterTool -> public int getInt(String key);1454679829;Returns the Integer value for the given key._The method fails if the key does not exist or the value is not an Integer.;public int getInt(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Integer.valueOf(value)__	};returns,the,integer,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist,or,the,value,is,not,an,integer;public,int,get,int,string,key,add,to,defaults,key,null,string,value,get,required,key,return,integer,value,of,value
ParameterTool -> public int getInt(String key);1455101486;Returns the Integer value for the given key._The method fails if the key does not exist or the value is not an Integer.;public int getInt(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Integer.valueOf(value)__	};returns,the,integer,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist,or,the,value,is,not,an,integer;public,int,get,int,string,key,add,to,defaults,key,null,string,value,get,required,key,return,integer,value,of,value
ParameterTool -> public int getInt(String key);1462899491;Returns the Integer value for the given key._The method fails if the key does not exist or the value is not an Integer.;public int getInt(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Integer.valueOf(value)__	};returns,the,integer,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist,or,the,value,is,not,an,integer;public,int,get,int,string,key,add,to,defaults,key,null,string,value,get,required,key,return,integer,value,of,value
ParameterTool -> public int getInt(String key);1465462613;Returns the Integer value for the given key._The method fails if the key does not exist or the value is not an Integer.;public int getInt(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Integer.valueOf(value)__	};returns,the,integer,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist,or,the,value,is,not,an,integer;public,int,get,int,string,key,add,to,defaults,key,null,string,value,get,required,key,return,integer,value,of,value
ParameterTool -> public int getInt(String key);1473329066;Returns the Integer value for the given key._The method fails if the key does not exist or the value is not an Integer.;public int getInt(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Integer.valueOf(value)__	};returns,the,integer,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist,or,the,value,is,not,an,integer;public,int,get,int,string,key,add,to,defaults,key,null,string,value,get,required,key,return,integer,value,of,value
ParameterTool -> public int getInt(String key);1474022085;Returns the Integer value for the given key._The method fails if the key does not exist or the value is not an Integer.;public int getInt(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Integer.valueOf(value)__	};returns,the,integer,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist,or,the,value,is,not,an,integer;public,int,get,int,string,key,add,to,defaults,key,null,string,value,get,required,key,return,integer,value,of,value
ParameterTool -> public int getInt(String key);1474626798;Returns the Integer value for the given key._The method fails if the key does not exist or the value is not an Integer.;public int getInt(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Integer.parseInt(value)__	};returns,the,integer,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist,or,the,value,is,not,an,integer;public,int,get,int,string,key,add,to,defaults,key,null,string,value,get,required,key,return,integer,parse,int,value
ParameterTool -> public int getInt(String key);1474626882;Returns the Integer value for the given key._The method fails if the key does not exist or the value is not an Integer.;public int getInt(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Integer.parseInt(value)__	};returns,the,integer,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist,or,the,value,is,not,an,integer;public,int,get,int,string,key,add,to,defaults,key,null,string,value,get,required,key,return,integer,parse,int,value
ParameterTool -> public int getInt(String key);1478107885;Returns the Integer value for the given key._The method fails if the key does not exist or the value is not an Integer.;public int getInt(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Integer.parseInt(value)__	};returns,the,integer,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist,or,the,value,is,not,an,integer;public,int,get,int,string,key,add,to,defaults,key,null,string,value,get,required,key,return,integer,parse,int,value
ParameterTool -> public int getInt(String key);1499777482;Returns the Integer value for the given key._The method fails if the key does not exist or the value is not an Integer.;public int getInt(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Integer.parseInt(value)__	};returns,the,integer,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist,or,the,value,is,not,an,integer;public,int,get,int,string,key,add,to,defaults,key,null,string,value,get,required,key,return,integer,parse,int,value
ParameterTool -> public int getInt(String key);1500387265;Returns the Integer value for the given key._The method fails if the key does not exist or the value is not an Integer.;public int getInt(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Integer.parseInt(value)__	};returns,the,integer,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist,or,the,value,is,not,an,integer;public,int,get,int,string,key,add,to,defaults,key,null,string,value,get,required,key,return,integer,parse,int,value
ParameterTool -> public int getInt(String key);1505831007;Returns the Integer value for the given key._The method fails if the key does not exist or the value is not an Integer.;public int getInt(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Integer.parseInt(value)__	};returns,the,integer,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist,or,the,value,is,not,an,integer;public,int,get,int,string,key,add,to,defaults,key,null,string,value,get,required,key,return,integer,parse,int,value
ParameterTool -> public int getInt(String key);1506499511;Returns the Integer value for the given key._The method fails if the key does not exist or the value is not an Integer.;public int getInt(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Integer.parseInt(value)__	};returns,the,integer,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist,or,the,value,is,not,an,integer;public,int,get,int,string,key,add,to,defaults,key,null,string,value,get,required,key,return,integer,parse,int,value
ParameterTool -> public int getInt(String key);1511189418;Returns the Integer value for the given key._The method fails if the key does not exist or the value is not an Integer.;public int getInt(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Integer.parseInt(value)__	};returns,the,integer,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist,or,the,value,is,not,an,integer;public,int,get,int,string,key,add,to,defaults,key,null,string,value,get,required,key,return,integer,parse,int,value
ParameterTool -> public int getInt(String key);1511966704;Returns the Integer value for the given key._The method fails if the key does not exist or the value is not an Integer.;public int getInt(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Integer.parseInt(value)__	};returns,the,integer,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist,or,the,value,is,not,an,integer;public,int,get,int,string,key,add,to,defaults,key,null,string,value,get,required,key,return,integer,parse,int,value
ParameterTool -> public int getInt(String key);1539096710;Returns the Integer value for the given key._The method fails if the key does not exist or the value is not an Integer.;public int getInt(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Integer.parseInt(value)__	};returns,the,integer,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist,or,the,value,is,not,an,integer;public,int,get,int,string,key,add,to,defaults,key,null,string,value,get,required,key,return,integer,parse,int,value
ParameterTool -> public int getInt(String key);1539096710;Returns the Integer value for the given key._The method fails if the key does not exist or the value is not an Integer.;public int getInt(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Integer.parseInt(value)__	};returns,the,integer,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist,or,the,value,is,not,an,integer;public,int,get,int,string,key,add,to,defaults,key,null,string,value,get,required,key,return,integer,parse,int,value
ParameterTool -> @PublicEvolving 	public static ParameterTool fromGenericOptionsParser(String[] args) throws IOException;1455101486;Returns {@link ParameterTool} for the arguments parsed by {@link GenericOptionsParser}__@param args Input array arguments. It should be parsable by {@link GenericOptionsParser}_@return A {@link ParameterTool}_@throws IOException If arguments cannot be parsed by {@link GenericOptionsParser}_@see GenericOptionsParser;@PublicEvolving_	public static ParameterTool fromGenericOptionsParser(String[] args) throws IOException {_		Option[] options = new GenericOptionsParser(args).getCommandLine().getOptions()__		Map<String, String> map = new HashMap<String, String>()__		for (Option option : options) {_			String[] split = option.getValue().split("=")__			map.put(split[0], split[1])__		}_		return fromMap(map)__	};returns,link,parameter,tool,for,the,arguments,parsed,by,link,generic,options,parser,param,args,input,array,arguments,it,should,be,parsable,by,link,generic,options,parser,return,a,link,parameter,tool,throws,ioexception,if,arguments,cannot,be,parsed,by,link,generic,options,parser,see,generic,options,parser;public,evolving,public,static,parameter,tool,from,generic,options,parser,string,args,throws,ioexception,option,options,new,generic,options,parser,args,get,command,line,get,options,map,string,string,map,new,hash,map,string,string,for,option,option,options,string,split,option,get,value,split,map,put,split,0,split,1,return,from,map,map
ParameterTool -> @PublicEvolving 	public static ParameterTool fromGenericOptionsParser(String[] args) throws IOException;1462899491;Returns {@link ParameterTool} for the arguments parsed by {@link GenericOptionsParser}__@param args Input array arguments. It should be parsable by {@link GenericOptionsParser}_@return A {@link ParameterTool}_@throws IOException If arguments cannot be parsed by {@link GenericOptionsParser}_@see GenericOptionsParser;@PublicEvolving_	public static ParameterTool fromGenericOptionsParser(String[] args) throws IOException {_		Option[] options = new GenericOptionsParser(args).getCommandLine().getOptions()__		Map<String, String> map = new HashMap<String, String>()__		for (Option option : options) {_			String[] split = option.getValue().split("=")__			map.put(split[0], split[1])__		}_		return fromMap(map)__	};returns,link,parameter,tool,for,the,arguments,parsed,by,link,generic,options,parser,param,args,input,array,arguments,it,should,be,parsable,by,link,generic,options,parser,return,a,link,parameter,tool,throws,ioexception,if,arguments,cannot,be,parsed,by,link,generic,options,parser,see,generic,options,parser;public,evolving,public,static,parameter,tool,from,generic,options,parser,string,args,throws,ioexception,option,options,new,generic,options,parser,args,get,command,line,get,options,map,string,string,map,new,hash,map,string,string,for,option,option,options,string,split,option,get,value,split,map,put,split,0,split,1,return,from,map,map
ParameterTool -> @PublicEvolving 	public static ParameterTool fromGenericOptionsParser(String[] args) throws IOException;1465462613;Returns {@link ParameterTool} for the arguments parsed by {@link GenericOptionsParser}__@param args Input array arguments. It should be parsable by {@link GenericOptionsParser}_@return A {@link ParameterTool}_@throws IOException If arguments cannot be parsed by {@link GenericOptionsParser}_@see GenericOptionsParser;@PublicEvolving_	public static ParameterTool fromGenericOptionsParser(String[] args) throws IOException {_		Option[] options = new GenericOptionsParser(args).getCommandLine().getOptions()__		Map<String, String> map = new HashMap<String, String>()__		for (Option option : options) {_			String[] split = option.getValue().split("=")__			map.put(split[0], split[1])__		}_		return fromMap(map)__	};returns,link,parameter,tool,for,the,arguments,parsed,by,link,generic,options,parser,param,args,input,array,arguments,it,should,be,parsable,by,link,generic,options,parser,return,a,link,parameter,tool,throws,ioexception,if,arguments,cannot,be,parsed,by,link,generic,options,parser,see,generic,options,parser;public,evolving,public,static,parameter,tool,from,generic,options,parser,string,args,throws,ioexception,option,options,new,generic,options,parser,args,get,command,line,get,options,map,string,string,map,new,hash,map,string,string,for,option,option,options,string,split,option,get,value,split,map,put,split,0,split,1,return,from,map,map
ParameterTool -> @PublicEvolving 	public static ParameterTool fromGenericOptionsParser(String[] args) throws IOException;1473329066;Returns {@link ParameterTool} for the arguments parsed by {@link GenericOptionsParser}__@param args Input array arguments. It should be parsable by {@link GenericOptionsParser}_@return A {@link ParameterTool}_@throws IOException If arguments cannot be parsed by {@link GenericOptionsParser}_@see GenericOptionsParser;@PublicEvolving_	public static ParameterTool fromGenericOptionsParser(String[] args) throws IOException {_		Option[] options = new GenericOptionsParser(args).getCommandLine().getOptions()__		Map<String, String> map = new HashMap<String, String>()__		for (Option option : options) {_			String[] split = option.getValue().split("=")__			map.put(split[0], split[1])__		}_		return fromMap(map)__	};returns,link,parameter,tool,for,the,arguments,parsed,by,link,generic,options,parser,param,args,input,array,arguments,it,should,be,parsable,by,link,generic,options,parser,return,a,link,parameter,tool,throws,ioexception,if,arguments,cannot,be,parsed,by,link,generic,options,parser,see,generic,options,parser;public,evolving,public,static,parameter,tool,from,generic,options,parser,string,args,throws,ioexception,option,options,new,generic,options,parser,args,get,command,line,get,options,map,string,string,map,new,hash,map,string,string,for,option,option,options,string,split,option,get,value,split,map,put,split,0,split,1,return,from,map,map
ParameterTool -> @PublicEvolving 	public static ParameterTool fromGenericOptionsParser(String[] args) throws IOException;1474022085;Returns {@link ParameterTool} for the arguments parsed by {@link GenericOptionsParser}__@param args Input array arguments. It should be parsable by {@link GenericOptionsParser}_@return A {@link ParameterTool}_@throws IOException If arguments cannot be parsed by {@link GenericOptionsParser}_@see GenericOptionsParser;@PublicEvolving_	public static ParameterTool fromGenericOptionsParser(String[] args) throws IOException {_		Option[] options = new GenericOptionsParser(args).getCommandLine().getOptions()__		Map<String, String> map = new HashMap<String, String>()__		for (Option option : options) {_			String[] split = option.getValue().split("=")__			map.put(split[0], split[1])__		}_		return fromMap(map)__	};returns,link,parameter,tool,for,the,arguments,parsed,by,link,generic,options,parser,param,args,input,array,arguments,it,should,be,parsable,by,link,generic,options,parser,return,a,link,parameter,tool,throws,ioexception,if,arguments,cannot,be,parsed,by,link,generic,options,parser,see,generic,options,parser;public,evolving,public,static,parameter,tool,from,generic,options,parser,string,args,throws,ioexception,option,options,new,generic,options,parser,args,get,command,line,get,options,map,string,string,map,new,hash,map,string,string,for,option,option,options,string,split,option,get,value,split,map,put,split,0,split,1,return,from,map,map
ParameterTool -> @PublicEvolving 	public static ParameterTool fromGenericOptionsParser(String[] args) throws IOException;1474626798;Returns {@link ParameterTool} for the arguments parsed by {@link GenericOptionsParser}__@param args Input array arguments. It should be parsable by {@link GenericOptionsParser}_@return A {@link ParameterTool}_@throws IOException If arguments cannot be parsed by {@link GenericOptionsParser}_@see GenericOptionsParser;@PublicEvolving_	public static ParameterTool fromGenericOptionsParser(String[] args) throws IOException {_		Option[] options = new GenericOptionsParser(args).getCommandLine().getOptions()__		Map<String, String> map = new HashMap<String, String>()__		for (Option option : options) {_			String[] split = option.getValue().split("=")__			map.put(split[0], split[1])__		}_		return fromMap(map)__	};returns,link,parameter,tool,for,the,arguments,parsed,by,link,generic,options,parser,param,args,input,array,arguments,it,should,be,parsable,by,link,generic,options,parser,return,a,link,parameter,tool,throws,ioexception,if,arguments,cannot,be,parsed,by,link,generic,options,parser,see,generic,options,parser;public,evolving,public,static,parameter,tool,from,generic,options,parser,string,args,throws,ioexception,option,options,new,generic,options,parser,args,get,command,line,get,options,map,string,string,map,new,hash,map,string,string,for,option,option,options,string,split,option,get,value,split,map,put,split,0,split,1,return,from,map,map
ParameterTool -> @PublicEvolving 	public static ParameterTool fromGenericOptionsParser(String[] args) throws IOException;1474626882;Returns {@link ParameterTool} for the arguments parsed by {@link GenericOptionsParser}__@param args Input array arguments. It should be parsable by {@link GenericOptionsParser}_@return A {@link ParameterTool}_@throws IOException If arguments cannot be parsed by {@link GenericOptionsParser}_@see GenericOptionsParser;@PublicEvolving_	public static ParameterTool fromGenericOptionsParser(String[] args) throws IOException {_		Option[] options = new GenericOptionsParser(args).getCommandLine().getOptions()__		Map<String, String> map = new HashMap<String, String>()__		for (Option option : options) {_			String[] split = option.getValue().split("=")__			map.put(split[0], split[1])__		}_		return fromMap(map)__	};returns,link,parameter,tool,for,the,arguments,parsed,by,link,generic,options,parser,param,args,input,array,arguments,it,should,be,parsable,by,link,generic,options,parser,return,a,link,parameter,tool,throws,ioexception,if,arguments,cannot,be,parsed,by,link,generic,options,parser,see,generic,options,parser;public,evolving,public,static,parameter,tool,from,generic,options,parser,string,args,throws,ioexception,option,options,new,generic,options,parser,args,get,command,line,get,options,map,string,string,map,new,hash,map,string,string,for,option,option,options,string,split,option,get,value,split,map,put,split,0,split,1,return,from,map,map
ParameterTool -> public ParameterTool mergeWith(ParameterTool other);1441981413;Merges two {@link ParameterTool}__@param other Other {@link ParameterTool} object_@return The Merged {@link ParameterTool};public ParameterTool mergeWith(ParameterTool other) {_		ParameterTool ret = new ParameterTool(this.data)__		ret.data.putAll(other.data)__		return ret__	};merges,two,link,parameter,tool,param,other,other,link,parameter,tool,object,return,the,merged,link,parameter,tool;public,parameter,tool,merge,with,parameter,tool,other,parameter,tool,ret,new,parameter,tool,this,data,ret,data,put,all,other,data,return,ret
ParameterTool -> public ParameterTool mergeWith(ParameterTool other);1443123598;Merges two {@link ParameterTool}__@param other Other {@link ParameterTool} object_@return The Merged {@link ParameterTool};public ParameterTool mergeWith(ParameterTool other) {_		ParameterTool ret = new ParameterTool(this.data)__		ret.data.putAll(other.data)__		return ret__	};merges,two,link,parameter,tool,param,other,other,link,parameter,tool,object,return,the,merged,link,parameter,tool;public,parameter,tool,merge,with,parameter,tool,other,parameter,tool,ret,new,parameter,tool,this,data,ret,data,put,all,other,data,return,ret
ParameterTool -> public ParameterTool mergeWith(ParameterTool other);1454679829;Merges two {@link ParameterTool}__@param other Other {@link ParameterTool} object_@return The Merged {@link ParameterTool};public ParameterTool mergeWith(ParameterTool other) {_		ParameterTool ret = new ParameterTool(this.data)__		ret.data.putAll(other.data)__		return ret__	};merges,two,link,parameter,tool,param,other,other,link,parameter,tool,object,return,the,merged,link,parameter,tool;public,parameter,tool,merge,with,parameter,tool,other,parameter,tool,ret,new,parameter,tool,this,data,ret,data,put,all,other,data,return,ret
ParameterTool -> public ParameterTool mergeWith(ParameterTool other);1455101486;Merges two {@link ParameterTool}__@param other Other {@link ParameterTool} object_@return The Merged {@link ParameterTool};public ParameterTool mergeWith(ParameterTool other) {_		ParameterTool ret = new ParameterTool(this.data)__		ret.data.putAll(other.data)__		return ret__	};merges,two,link,parameter,tool,param,other,other,link,parameter,tool,object,return,the,merged,link,parameter,tool;public,parameter,tool,merge,with,parameter,tool,other,parameter,tool,ret,new,parameter,tool,this,data,ret,data,put,all,other,data,return,ret
ParameterTool -> public ParameterTool mergeWith(ParameterTool other);1462899491;Merges two {@link ParameterTool}__@param other Other {@link ParameterTool} object_@return The Merged {@link ParameterTool};public ParameterTool mergeWith(ParameterTool other) {_		ParameterTool ret = new ParameterTool(this.data)__		ret.data.putAll(other.data)__		return ret__	};merges,two,link,parameter,tool,param,other,other,link,parameter,tool,object,return,the,merged,link,parameter,tool;public,parameter,tool,merge,with,parameter,tool,other,parameter,tool,ret,new,parameter,tool,this,data,ret,data,put,all,other,data,return,ret
ParameterTool -> public ParameterTool mergeWith(ParameterTool other);1465462613;Merges two {@link ParameterTool}__@param other Other {@link ParameterTool} object_@return The Merged {@link ParameterTool};public ParameterTool mergeWith(ParameterTool other) {_		ParameterTool ret = new ParameterTool(this.data)__		ret.data.putAll(other.data)__		return ret__	};merges,two,link,parameter,tool,param,other,other,link,parameter,tool,object,return,the,merged,link,parameter,tool;public,parameter,tool,merge,with,parameter,tool,other,parameter,tool,ret,new,parameter,tool,this,data,ret,data,put,all,other,data,return,ret
ParameterTool -> public ParameterTool mergeWith(ParameterTool other);1473329066;Merges two {@link ParameterTool}__@param other Other {@link ParameterTool} object_@return The Merged {@link ParameterTool};public ParameterTool mergeWith(ParameterTool other) {_		ParameterTool ret = new ParameterTool(this.data)__		ret.data.putAll(other.data)__		return ret__	};merges,two,link,parameter,tool,param,other,other,link,parameter,tool,object,return,the,merged,link,parameter,tool;public,parameter,tool,merge,with,parameter,tool,other,parameter,tool,ret,new,parameter,tool,this,data,ret,data,put,all,other,data,return,ret
ParameterTool -> public ParameterTool mergeWith(ParameterTool other);1474022085;Merges two {@link ParameterTool}__@param other Other {@link ParameterTool} object_@return The Merged {@link ParameterTool};public ParameterTool mergeWith(ParameterTool other) {_		ParameterTool ret = new ParameterTool(this.data)__		ret.data.putAll(other.data)__		return ret__	};merges,two,link,parameter,tool,param,other,other,link,parameter,tool,object,return,the,merged,link,parameter,tool;public,parameter,tool,merge,with,parameter,tool,other,parameter,tool,ret,new,parameter,tool,this,data,ret,data,put,all,other,data,return,ret
ParameterTool -> public ParameterTool mergeWith(ParameterTool other);1474626798;Merges two {@link ParameterTool}__@param other Other {@link ParameterTool} object_@return The Merged {@link ParameterTool};public ParameterTool mergeWith(ParameterTool other) {_		ParameterTool ret = new ParameterTool(this.data)__		ret.data.putAll(other.data)__		return ret__	};merges,two,link,parameter,tool,param,other,other,link,parameter,tool,object,return,the,merged,link,parameter,tool;public,parameter,tool,merge,with,parameter,tool,other,parameter,tool,ret,new,parameter,tool,this,data,ret,data,put,all,other,data,return,ret
ParameterTool -> public ParameterTool mergeWith(ParameterTool other);1474626882;Merges two {@link ParameterTool}__@param other Other {@link ParameterTool} object_@return The Merged {@link ParameterTool};public ParameterTool mergeWith(ParameterTool other) {_		ParameterTool ret = new ParameterTool(this.data)__		ret.data.putAll(other.data)__		return ret__	};merges,two,link,parameter,tool,param,other,other,link,parameter,tool,object,return,the,merged,link,parameter,tool;public,parameter,tool,merge,with,parameter,tool,other,parameter,tool,ret,new,parameter,tool,this,data,ret,data,put,all,other,data,return,ret
ParameterTool -> public ParameterTool mergeWith(ParameterTool other);1478107885;Merges two {@link ParameterTool}__@param other Other {@link ParameterTool} object_@return The Merged {@link ParameterTool};public ParameterTool mergeWith(ParameterTool other) {_		ParameterTool ret = new ParameterTool(this.data)__		ret.data.putAll(other.data)__		return ret__	};merges,two,link,parameter,tool,param,other,other,link,parameter,tool,object,return,the,merged,link,parameter,tool;public,parameter,tool,merge,with,parameter,tool,other,parameter,tool,ret,new,parameter,tool,this,data,ret,data,put,all,other,data,return,ret
ParameterTool -> public ParameterTool mergeWith(ParameterTool other);1499777482;Merges two {@link ParameterTool}__@param other Other {@link ParameterTool} object_@return The Merged {@link ParameterTool};public ParameterTool mergeWith(ParameterTool other) {_		ParameterTool ret = new ParameterTool(this.data)__		ret.data.putAll(other.data)__		ret.unrequestedParameters.addAll(other.unrequestedParameters)__		return ret__	};merges,two,link,parameter,tool,param,other,other,link,parameter,tool,object,return,the,merged,link,parameter,tool;public,parameter,tool,merge,with,parameter,tool,other,parameter,tool,ret,new,parameter,tool,this,data,ret,data,put,all,other,data,ret,unrequested,parameters,add,all,other,unrequested,parameters,return,ret
ParameterTool -> public ParameterTool mergeWith(ParameterTool other);1500387265;Merges two {@link ParameterTool}.__@param other Other {@link ParameterTool} object_@return The Merged {@link ParameterTool};public ParameterTool mergeWith(ParameterTool other) {_		ParameterTool ret = new ParameterTool(this.data)__		ret.data.putAll(other.data)__		ret.unrequestedParameters.addAll(other.unrequestedParameters)__		return ret__	};merges,two,link,parameter,tool,param,other,other,link,parameter,tool,object,return,the,merged,link,parameter,tool;public,parameter,tool,merge,with,parameter,tool,other,parameter,tool,ret,new,parameter,tool,this,data,ret,data,put,all,other,data,ret,unrequested,parameters,add,all,other,unrequested,parameters,return,ret
ParameterTool -> public ParameterTool mergeWith(ParameterTool other);1505831007;Merges two {@link ParameterTool}.__@param other Other {@link ParameterTool} object_@return The Merged {@link ParameterTool};public ParameterTool mergeWith(ParameterTool other) {_		ParameterTool ret = new ParameterTool(this.data)__		ret.data.putAll(other.data)__		ret.unrequestedParameters.addAll(other.unrequestedParameters)__		return ret__	};merges,two,link,parameter,tool,param,other,other,link,parameter,tool,object,return,the,merged,link,parameter,tool;public,parameter,tool,merge,with,parameter,tool,other,parameter,tool,ret,new,parameter,tool,this,data,ret,data,put,all,other,data,ret,unrequested,parameters,add,all,other,unrequested,parameters,return,ret
ParameterTool -> public ParameterTool mergeWith(ParameterTool other);1506499511;Merges two {@link ParameterTool}.__@param other Other {@link ParameterTool} object_@return The Merged {@link ParameterTool};public ParameterTool mergeWith(ParameterTool other) {_		ParameterTool ret = new ParameterTool(this.data)__		ret.data.putAll(other.data)__		ret.unrequestedParameters.addAll(other.unrequestedParameters)__		return ret__	};merges,two,link,parameter,tool,param,other,other,link,parameter,tool,object,return,the,merged,link,parameter,tool;public,parameter,tool,merge,with,parameter,tool,other,parameter,tool,ret,new,parameter,tool,this,data,ret,data,put,all,other,data,ret,unrequested,parameters,add,all,other,unrequested,parameters,return,ret
ParameterTool -> public ParameterTool mergeWith(ParameterTool other);1511189418;Merges two {@link ParameterTool}.__@param other Other {@link ParameterTool} object_@return The Merged {@link ParameterTool};public ParameterTool mergeWith(ParameterTool other) {_		Map<String, String> resultData = new HashMap<>(data.size() + other.data.size())__		resultData.putAll(data)__		resultData.putAll(other.data)___		ParameterTool ret = new ParameterTool(resultData)___		final HashSet<String> requestedParametersLeft = new HashSet<>(data.keySet())__		requestedParametersLeft.removeAll(unrequestedParameters)___		final HashSet<String> requestedParametersRight = new HashSet<>(other.data.keySet())__		requestedParametersRight.removeAll(other.unrequestedParameters)___		ret.unrequestedParameters.removeAll(requestedParametersLeft)__		ret.unrequestedParameters.removeAll(requestedParametersRight)___		return ret__	};merges,two,link,parameter,tool,param,other,other,link,parameter,tool,object,return,the,merged,link,parameter,tool;public,parameter,tool,merge,with,parameter,tool,other,map,string,string,result,data,new,hash,map,data,size,other,data,size,result,data,put,all,data,result,data,put,all,other,data,parameter,tool,ret,new,parameter,tool,result,data,final,hash,set,string,requested,parameters,left,new,hash,set,data,key,set,requested,parameters,left,remove,all,unrequested,parameters,final,hash,set,string,requested,parameters,right,new,hash,set,other,data,key,set,requested,parameters,right,remove,all,other,unrequested,parameters,ret,unrequested,parameters,remove,all,requested,parameters,left,ret,unrequested,parameters,remove,all,requested,parameters,right,return,ret
ParameterTool -> public ParameterTool mergeWith(ParameterTool other);1511966704;Merges two {@link ParameterTool}.__@param other Other {@link ParameterTool} object_@return The Merged {@link ParameterTool};public ParameterTool mergeWith(ParameterTool other) {_		Map<String, String> resultData = new HashMap<>(data.size() + other.data.size())__		resultData.putAll(data)__		resultData.putAll(other.data)___		ParameterTool ret = new ParameterTool(resultData)___		final HashSet<String> requestedParametersLeft = new HashSet<>(data.keySet())__		requestedParametersLeft.removeAll(unrequestedParameters)___		final HashSet<String> requestedParametersRight = new HashSet<>(other.data.keySet())__		requestedParametersRight.removeAll(other.unrequestedParameters)___		ret.unrequestedParameters.removeAll(requestedParametersLeft)__		ret.unrequestedParameters.removeAll(requestedParametersRight)___		return ret__	};merges,two,link,parameter,tool,param,other,other,link,parameter,tool,object,return,the,merged,link,parameter,tool;public,parameter,tool,merge,with,parameter,tool,other,map,string,string,result,data,new,hash,map,data,size,other,data,size,result,data,put,all,data,result,data,put,all,other,data,parameter,tool,ret,new,parameter,tool,result,data,final,hash,set,string,requested,parameters,left,new,hash,set,data,key,set,requested,parameters,left,remove,all,unrequested,parameters,final,hash,set,string,requested,parameters,right,new,hash,set,other,data,key,set,requested,parameters,right,remove,all,other,unrequested,parameters,ret,unrequested,parameters,remove,all,requested,parameters,left,ret,unrequested,parameters,remove,all,requested,parameters,right,return,ret
ParameterTool -> public ParameterTool mergeWith(ParameterTool other);1539096710;Merges two {@link ParameterTool}.__@param other Other {@link ParameterTool} object_@return The Merged {@link ParameterTool};public ParameterTool mergeWith(ParameterTool other) {_		final Map<String, String> resultData = new HashMap<>(data.size() + other.data.size())__		resultData.putAll(data)__		resultData.putAll(other.data)___		final ParameterTool ret = new ParameterTool(resultData)___		final HashSet<String> requestedParametersLeft = new HashSet<>(data.keySet())__		requestedParametersLeft.removeAll(unrequestedParameters)___		final HashSet<String> requestedParametersRight = new HashSet<>(other.data.keySet())__		requestedParametersRight.removeAll(other.unrequestedParameters)___		ret.unrequestedParameters.removeAll(requestedParametersLeft)__		ret.unrequestedParameters.removeAll(requestedParametersRight)___		return ret__	};merges,two,link,parameter,tool,param,other,other,link,parameter,tool,object,return,the,merged,link,parameter,tool;public,parameter,tool,merge,with,parameter,tool,other,final,map,string,string,result,data,new,hash,map,data,size,other,data,size,result,data,put,all,data,result,data,put,all,other,data,final,parameter,tool,ret,new,parameter,tool,result,data,final,hash,set,string,requested,parameters,left,new,hash,set,data,key,set,requested,parameters,left,remove,all,unrequested,parameters,final,hash,set,string,requested,parameters,right,new,hash,set,other,data,key,set,requested,parameters,right,remove,all,other,unrequested,parameters,ret,unrequested,parameters,remove,all,requested,parameters,left,ret,unrequested,parameters,remove,all,requested,parameters,right,return,ret
ParameterTool -> public ParameterTool mergeWith(ParameterTool other);1539096710;Merges two {@link ParameterTool}.__@param other Other {@link ParameterTool} object_@return The Merged {@link ParameterTool};public ParameterTool mergeWith(ParameterTool other) {_		final Map<String, String> resultData = new HashMap<>(data.size() + other.data.size())__		resultData.putAll(data)__		resultData.putAll(other.data)___		final ParameterTool ret = new ParameterTool(resultData)___		final HashSet<String> requestedParametersLeft = new HashSet<>(data.keySet())__		requestedParametersLeft.removeAll(unrequestedParameters)___		final HashSet<String> requestedParametersRight = new HashSet<>(other.data.keySet())__		requestedParametersRight.removeAll(other.unrequestedParameters)___		ret.unrequestedParameters.removeAll(requestedParametersLeft)__		ret.unrequestedParameters.removeAll(requestedParametersRight)___		return ret__	};merges,two,link,parameter,tool,param,other,other,link,parameter,tool,object,return,the,merged,link,parameter,tool;public,parameter,tool,merge,with,parameter,tool,other,final,map,string,string,result,data,new,hash,map,data,size,other,data,size,result,data,put,all,data,result,data,put,all,other,data,final,parameter,tool,ret,new,parameter,tool,result,data,final,hash,set,string,requested,parameters,left,new,hash,set,data,key,set,requested,parameters,left,remove,all,unrequested,parameters,final,hash,set,string,requested,parameters,right,new,hash,set,other,data,key,set,requested,parameters,right,remove,all,other,unrequested,parameters,ret,unrequested,parameters,remove,all,requested,parameters,left,ret,unrequested,parameters,remove,all,requested,parameters,right,return,ret
ParameterTool -> public boolean has(String value);1431691975;Check if value is set;public boolean has(String value) {_		addToDefaults(value, null)__		return data.containsKey(value)__	};check,if,value,is,set;public,boolean,has,string,value,add,to,defaults,value,null,return,data,contains,key,value
ParameterTool -> public boolean has(String value);1433939202;Check if value is set;public boolean has(String value) {_		addToDefaults(value, null)__		return data.containsKey(value)__	};check,if,value,is,set;public,boolean,has,string,value,add,to,defaults,value,null,return,data,contains,key,value
ParameterTool -> public boolean has(String value);1435067318;Check if value is set;public boolean has(String value) {_		addToDefaults(value, null)__		return data.containsKey(value)__	};check,if,value,is,set;public,boolean,has,string,value,add,to,defaults,value,null,return,data,contains,key,value
ParameterTool -> public boolean has(String value);1437494296;Check if value is set;public boolean has(String value) {_		addToDefaults(value, null)__		return data.containsKey(value)__	};check,if,value,is,set;public,boolean,has,string,value,add,to,defaults,value,null,return,data,contains,key,value
ParameterTool -> public boolean has(String value);1438620487;Check if value is set;public boolean has(String value) {_		addToDefaults(value, null)__		return data.containsKey(value)__	};check,if,value,is,set;public,boolean,has,string,value,add,to,defaults,value,null,return,data,contains,key,value
ParameterTool -> public boolean has(String value);1441981413;Check if value is set.;public boolean has(String value) {_		addToDefaults(value, null)__		return data.containsKey(value)__	};check,if,value,is,set;public,boolean,has,string,value,add,to,defaults,value,null,return,data,contains,key,value
ParameterTool -> public boolean has(String value);1443123598;Check if value is set.;public boolean has(String value) {_		addToDefaults(value, null)__		return data.containsKey(value)__	};check,if,value,is,set;public,boolean,has,string,value,add,to,defaults,value,null,return,data,contains,key,value
ParameterTool -> public boolean has(String value);1454679829;Check if value is set.;public boolean has(String value) {_		addToDefaults(value, null)__		return data.containsKey(value)__	};check,if,value,is,set;public,boolean,has,string,value,add,to,defaults,value,null,return,data,contains,key,value
ParameterTool -> public boolean has(String value);1455101486;Check if value is set.;public boolean has(String value) {_		addToDefaults(value, null)__		return data.containsKey(value)__	};check,if,value,is,set;public,boolean,has,string,value,add,to,defaults,value,null,return,data,contains,key,value
ParameterTool -> public boolean has(String value);1462899491;Check if value is set.;public boolean has(String value) {_		addToDefaults(value, null)__		return data.containsKey(value)__	};check,if,value,is,set;public,boolean,has,string,value,add,to,defaults,value,null,return,data,contains,key,value
ParameterTool -> public boolean has(String value);1465462613;Check if value is set.;public boolean has(String value) {_		addToDefaults(value, null)__		return data.containsKey(value)__	};check,if,value,is,set;public,boolean,has,string,value,add,to,defaults,value,null,return,data,contains,key,value
ParameterTool -> public boolean has(String value);1473329066;Check if value is set.;public boolean has(String value) {_		addToDefaults(value, null)__		return data.containsKey(value)__	};check,if,value,is,set;public,boolean,has,string,value,add,to,defaults,value,null,return,data,contains,key,value
ParameterTool -> public boolean has(String value);1474022085;Check if value is set.;public boolean has(String value) {_		addToDefaults(value, null)__		return data.containsKey(value)__	};check,if,value,is,set;public,boolean,has,string,value,add,to,defaults,value,null,return,data,contains,key,value
ParameterTool -> public boolean has(String value);1474626798;Check if value is set.;public boolean has(String value) {_		addToDefaults(value, null)__		return data.containsKey(value)__	};check,if,value,is,set;public,boolean,has,string,value,add,to,defaults,value,null,return,data,contains,key,value
ParameterTool -> public boolean has(String value);1474626882;Check if value is set.;public boolean has(String value) {_		addToDefaults(value, null)__		return data.containsKey(value)__	};check,if,value,is,set;public,boolean,has,string,value,add,to,defaults,value,null,return,data,contains,key,value
ParameterTool -> public boolean has(String value);1478107885;Check if value is set.;public boolean has(String value) {_		addToDefaults(value, null)__		return data.containsKey(value)__	};check,if,value,is,set;public,boolean,has,string,value,add,to,defaults,value,null,return,data,contains,key,value
ParameterTool -> public boolean has(String value);1499777482;Check if value is set.;public boolean has(String value) {_		addToDefaults(value, null)__		unrequestedParameters.remove(value)__		return data.containsKey(value)__	};check,if,value,is,set;public,boolean,has,string,value,add,to,defaults,value,null,unrequested,parameters,remove,value,return,data,contains,key,value
ParameterTool -> public boolean has(String value);1500387265;Check if value is set.;public boolean has(String value) {_		addToDefaults(value, null)__		unrequestedParameters.remove(value)__		return data.containsKey(value)__	};check,if,value,is,set;public,boolean,has,string,value,add,to,defaults,value,null,unrequested,parameters,remove,value,return,data,contains,key,value
ParameterTool -> public boolean has(String value);1505831007;Check if value is set.;public boolean has(String value) {_		addToDefaults(value, null)__		unrequestedParameters.remove(value)__		return data.containsKey(value)__	};check,if,value,is,set;public,boolean,has,string,value,add,to,defaults,value,null,unrequested,parameters,remove,value,return,data,contains,key,value
ParameterTool -> public boolean has(String value);1506499511;Check if value is set.;public boolean has(String value) {_		addToDefaults(value, null)__		unrequestedParameters.remove(value)__		return data.containsKey(value)__	};check,if,value,is,set;public,boolean,has,string,value,add,to,defaults,value,null,unrequested,parameters,remove,value,return,data,contains,key,value
ParameterTool -> public boolean has(String value);1511189418;Check if value is set.;public boolean has(String value) {_		addToDefaults(value, null)__		unrequestedParameters.remove(value)__		return data.containsKey(value)__	};check,if,value,is,set;public,boolean,has,string,value,add,to,defaults,value,null,unrequested,parameters,remove,value,return,data,contains,key,value
ParameterTool -> public boolean has(String value);1511966704;Check if value is set.;public boolean has(String value) {_		addToDefaults(value, null)__		unrequestedParameters.remove(value)__		return data.containsKey(value)__	};check,if,value,is,set;public,boolean,has,string,value,add,to,defaults,value,null,unrequested,parameters,remove,value,return,data,contains,key,value
ParameterTool -> public boolean has(String value);1539096710;Check if value is set.;public boolean has(String value) {_		addToDefaults(value, null)__		unrequestedParameters.remove(value)__		return data.containsKey(value)__	};check,if,value,is,set;public,boolean,has,string,value,add,to,defaults,value,null,unrequested,parameters,remove,value,return,data,contains,key,value
ParameterTool -> public boolean has(String value);1539096710;Check if value is set.;public boolean has(String value) {_		addToDefaults(value, null)__		unrequestedParameters.remove(value)__		return data.containsKey(value)__	};check,if,value,is,set;public,boolean,has,string,value,add,to,defaults,value,null,unrequested,parameters,remove,value,return,data,contains,key,value
ParameterTool -> public int getInt(String key, int defaultValue);1441981413;Returns the Integer value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not an Integer.;public int getInt(String key, int defaultValue) {_		addToDefaults(key, Integer.toString(defaultValue))__		String value = get(key)__		if(value == null) {_			return defaultValue__		} else {_			return Integer.valueOf(value)__		}_	};returns,the,integer,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,an,integer;public,int,get,int,string,key,int,default,value,add,to,defaults,key,integer,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,integer,value,of,value
ParameterTool -> public int getInt(String key, int defaultValue);1443123598;Returns the Integer value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not an Integer.;public int getInt(String key, int defaultValue) {_		addToDefaults(key, Integer.toString(defaultValue))__		String value = get(key)__		if(value == null) {_			return defaultValue__		} else {_			return Integer.valueOf(value)__		}_	};returns,the,integer,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,an,integer;public,int,get,int,string,key,int,default,value,add,to,defaults,key,integer,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,integer,value,of,value
ParameterTool -> public int getInt(String key, int defaultValue);1454679829;Returns the Integer value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not an Integer.;public int getInt(String key, int defaultValue) {_		addToDefaults(key, Integer.toString(defaultValue))__		String value = get(key)__		if(value == null) {_			return defaultValue__		} else {_			return Integer.valueOf(value)__		}_	};returns,the,integer,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,an,integer;public,int,get,int,string,key,int,default,value,add,to,defaults,key,integer,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,integer,value,of,value
ParameterTool -> public int getInt(String key, int defaultValue);1455101486;Returns the Integer value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not an Integer.;public int getInt(String key, int defaultValue) {_		addToDefaults(key, Integer.toString(defaultValue))__		String value = get(key)__		if(value == null) {_			return defaultValue__		} else {_			return Integer.valueOf(value)__		}_	};returns,the,integer,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,an,integer;public,int,get,int,string,key,int,default,value,add,to,defaults,key,integer,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,integer,value,of,value
ParameterTool -> public int getInt(String key, int defaultValue);1462899491;Returns the Integer value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not an Integer.;public int getInt(String key, int defaultValue) {_		addToDefaults(key, Integer.toString(defaultValue))__		String value = get(key)__		if(value == null) {_			return defaultValue__		} else {_			return Integer.valueOf(value)__		}_	};returns,the,integer,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,an,integer;public,int,get,int,string,key,int,default,value,add,to,defaults,key,integer,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,integer,value,of,value
ParameterTool -> public int getInt(String key, int defaultValue);1465462613;Returns the Integer value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not an Integer.;public int getInt(String key, int defaultValue) {_		addToDefaults(key, Integer.toString(defaultValue))__		String value = get(key)__		if(value == null) {_			return defaultValue__		} else {_			return Integer.valueOf(value)__		}_	};returns,the,integer,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,an,integer;public,int,get,int,string,key,int,default,value,add,to,defaults,key,integer,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,integer,value,of,value
ParameterTool -> public int getInt(String key, int defaultValue);1473329066;Returns the Integer value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not an Integer.;public int getInt(String key, int defaultValue) {_		addToDefaults(key, Integer.toString(defaultValue))__		String value = get(key)__		if(value == null) {_			return defaultValue__		} else {_			return Integer.valueOf(value)__		}_	};returns,the,integer,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,an,integer;public,int,get,int,string,key,int,default,value,add,to,defaults,key,integer,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,integer,value,of,value
ParameterTool -> public int getInt(String key, int defaultValue);1474022085;Returns the Integer value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not an Integer.;public int getInt(String key, int defaultValue) {_		addToDefaults(key, Integer.toString(defaultValue))__		String value = get(key)__		if(value == null) {_			return defaultValue__		} else {_			return Integer.valueOf(value)__		}_	};returns,the,integer,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,an,integer;public,int,get,int,string,key,int,default,value,add,to,defaults,key,integer,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,integer,value,of,value
ParameterTool -> public int getInt(String key, int defaultValue);1474626798;Returns the Integer value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not an Integer.;public int getInt(String key, int defaultValue) {_		addToDefaults(key, Integer.toString(defaultValue))__		String value = get(key)__		if (value == null) {_			return defaultValue__		}_		return Integer.parseInt(value)__	};returns,the,integer,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,an,integer;public,int,get,int,string,key,int,default,value,add,to,defaults,key,integer,to,string,default,value,string,value,get,key,if,value,null,return,default,value,return,integer,parse,int,value
ParameterTool -> public int getInt(String key, int defaultValue);1474626882;Returns the Integer value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not an Integer.;public int getInt(String key, int defaultValue) {_		addToDefaults(key, Integer.toString(defaultValue))__		String value = get(key)__		if (value == null) {_			return defaultValue__		}_		return Integer.parseInt(value)__	};returns,the,integer,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,an,integer;public,int,get,int,string,key,int,default,value,add,to,defaults,key,integer,to,string,default,value,string,value,get,key,if,value,null,return,default,value,return,integer,parse,int,value
ParameterTool -> public int getInt(String key, int defaultValue);1478107885;Returns the Integer value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not an Integer.;public int getInt(String key, int defaultValue) {_		addToDefaults(key, Integer.toString(defaultValue))__		String value = get(key)__		if (value == null) {_			return defaultValue__		}_		return Integer.parseInt(value)__	};returns,the,integer,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,an,integer;public,int,get,int,string,key,int,default,value,add,to,defaults,key,integer,to,string,default,value,string,value,get,key,if,value,null,return,default,value,return,integer,parse,int,value
ParameterTool -> public int getInt(String key, int defaultValue);1499777482;Returns the Integer value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not an Integer.;public int getInt(String key, int defaultValue) {_		addToDefaults(key, Integer.toString(defaultValue))__		String value = get(key)__		if (value == null) {_			return defaultValue__		}_		return Integer.parseInt(value)__	};returns,the,integer,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,an,integer;public,int,get,int,string,key,int,default,value,add,to,defaults,key,integer,to,string,default,value,string,value,get,key,if,value,null,return,default,value,return,integer,parse,int,value
ParameterTool -> public int getInt(String key, int defaultValue);1500387265;Returns the Integer value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not an Integer.;public int getInt(String key, int defaultValue) {_		addToDefaults(key, Integer.toString(defaultValue))__		String value = get(key)__		if (value == null) {_			return defaultValue__		}_		return Integer.parseInt(value)__	};returns,the,integer,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,an,integer;public,int,get,int,string,key,int,default,value,add,to,defaults,key,integer,to,string,default,value,string,value,get,key,if,value,null,return,default,value,return,integer,parse,int,value
ParameterTool -> public int getInt(String key, int defaultValue);1505831007;Returns the Integer value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not an Integer.;public int getInt(String key, int defaultValue) {_		addToDefaults(key, Integer.toString(defaultValue))__		String value = get(key)__		if (value == null) {_			return defaultValue__		}_		return Integer.parseInt(value)__	};returns,the,integer,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,an,integer;public,int,get,int,string,key,int,default,value,add,to,defaults,key,integer,to,string,default,value,string,value,get,key,if,value,null,return,default,value,return,integer,parse,int,value
ParameterTool -> public int getInt(String key, int defaultValue);1506499511;Returns the Integer value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not an Integer.;public int getInt(String key, int defaultValue) {_		addToDefaults(key, Integer.toString(defaultValue))__		String value = get(key)__		if (value == null) {_			return defaultValue__		}_		return Integer.parseInt(value)__	};returns,the,integer,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,an,integer;public,int,get,int,string,key,int,default,value,add,to,defaults,key,integer,to,string,default,value,string,value,get,key,if,value,null,return,default,value,return,integer,parse,int,value
ParameterTool -> public int getInt(String key, int defaultValue);1511189418;Returns the Integer value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not an Integer.;public int getInt(String key, int defaultValue) {_		addToDefaults(key, Integer.toString(defaultValue))__		String value = get(key)__		if (value == null) {_			return defaultValue__		}_		return Integer.parseInt(value)__	};returns,the,integer,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,an,integer;public,int,get,int,string,key,int,default,value,add,to,defaults,key,integer,to,string,default,value,string,value,get,key,if,value,null,return,default,value,return,integer,parse,int,value
ParameterTool -> public int getInt(String key, int defaultValue);1511966704;Returns the Integer value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not an Integer.;public int getInt(String key, int defaultValue) {_		addToDefaults(key, Integer.toString(defaultValue))__		String value = get(key)__		if (value == null) {_			return defaultValue__		}_		return Integer.parseInt(value)__	};returns,the,integer,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,an,integer;public,int,get,int,string,key,int,default,value,add,to,defaults,key,integer,to,string,default,value,string,value,get,key,if,value,null,return,default,value,return,integer,parse,int,value
ParameterTool -> public int getInt(String key, int defaultValue);1539096710;Returns the Integer value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not an Integer.;public int getInt(String key, int defaultValue) {_		addToDefaults(key, Integer.toString(defaultValue))__		String value = get(key)__		if (value == null) {_			return defaultValue__		}_		return Integer.parseInt(value)__	};returns,the,integer,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,an,integer;public,int,get,int,string,key,int,default,value,add,to,defaults,key,integer,to,string,default,value,string,value,get,key,if,value,null,return,default,value,return,integer,parse,int,value
ParameterTool -> public int getInt(String key, int defaultValue);1539096710;Returns the Integer value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not an Integer.;public int getInt(String key, int defaultValue) {_		addToDefaults(key, Integer.toString(defaultValue))__		String value = get(key)__		if (value == null) {_			return defaultValue__		}_		return Integer.parseInt(value)__	};returns,the,integer,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,an,integer;public,int,get,int,string,key,int,default,value,add,to,defaults,key,integer,to,string,default,value,string,value,get,key,if,value,null,return,default,value,return,integer,parse,int,value
ParameterTool -> public boolean getBoolean(String key);1443123598;Returns the Boolean value for the given key._The method fails if the key does not exist.;public boolean getBoolean(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Boolean.valueOf(value)__	};returns,the,boolean,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,boolean,get,boolean,string,key,add,to,defaults,key,null,string,value,get,required,key,return,boolean,value,of,value
ParameterTool -> public boolean getBoolean(String key);1454679829;Returns the Boolean value for the given key._The method fails if the key does not exist.;public boolean getBoolean(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Boolean.valueOf(value)__	};returns,the,boolean,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,boolean,get,boolean,string,key,add,to,defaults,key,null,string,value,get,required,key,return,boolean,value,of,value
ParameterTool -> public boolean getBoolean(String key);1455101486;Returns the Boolean value for the given key._The method fails if the key does not exist.;public boolean getBoolean(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Boolean.valueOf(value)__	};returns,the,boolean,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,boolean,get,boolean,string,key,add,to,defaults,key,null,string,value,get,required,key,return,boolean,value,of,value
ParameterTool -> public boolean getBoolean(String key);1462899491;Returns the Boolean value for the given key._The method fails if the key does not exist.;public boolean getBoolean(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Boolean.valueOf(value)__	};returns,the,boolean,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,boolean,get,boolean,string,key,add,to,defaults,key,null,string,value,get,required,key,return,boolean,value,of,value
ParameterTool -> public boolean getBoolean(String key);1465462613;Returns the Boolean value for the given key._The method fails if the key does not exist.;public boolean getBoolean(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Boolean.valueOf(value)__	};returns,the,boolean,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,boolean,get,boolean,string,key,add,to,defaults,key,null,string,value,get,required,key,return,boolean,value,of,value
ParameterTool -> public boolean getBoolean(String key);1473329066;Returns the Boolean value for the given key._The method fails if the key does not exist.;public boolean getBoolean(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Boolean.valueOf(value)__	};returns,the,boolean,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,boolean,get,boolean,string,key,add,to,defaults,key,null,string,value,get,required,key,return,boolean,value,of,value
ParameterTool -> public boolean getBoolean(String key);1474022085;Returns the Boolean value for the given key._The method fails if the key does not exist.;public boolean getBoolean(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Boolean.valueOf(value)__	};returns,the,boolean,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,boolean,get,boolean,string,key,add,to,defaults,key,null,string,value,get,required,key,return,boolean,value,of,value
ParameterTool -> public boolean getBoolean(String key);1474626798;Returns the Boolean value for the given key._The method fails if the key does not exist.;public boolean getBoolean(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Boolean.valueOf(value)__	};returns,the,boolean,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,boolean,get,boolean,string,key,add,to,defaults,key,null,string,value,get,required,key,return,boolean,value,of,value
ParameterTool -> public boolean getBoolean(String key);1474626882;Returns the Boolean value for the given key._The method fails if the key does not exist.;public boolean getBoolean(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Boolean.valueOf(value)__	};returns,the,boolean,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,boolean,get,boolean,string,key,add,to,defaults,key,null,string,value,get,required,key,return,boolean,value,of,value
ParameterTool -> public boolean getBoolean(String key);1478107885;Returns the Boolean value for the given key._The method fails if the key does not exist.;public boolean getBoolean(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Boolean.valueOf(value)__	};returns,the,boolean,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,boolean,get,boolean,string,key,add,to,defaults,key,null,string,value,get,required,key,return,boolean,value,of,value
ParameterTool -> public boolean getBoolean(String key);1499777482;Returns the Boolean value for the given key._The method fails if the key does not exist.;public boolean getBoolean(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Boolean.valueOf(value)__	};returns,the,boolean,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,boolean,get,boolean,string,key,add,to,defaults,key,null,string,value,get,required,key,return,boolean,value,of,value
ParameterTool -> public boolean getBoolean(String key);1500387265;Returns the Boolean value for the given key._The method fails if the key does not exist.;public boolean getBoolean(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Boolean.valueOf(value)__	};returns,the,boolean,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,boolean,get,boolean,string,key,add,to,defaults,key,null,string,value,get,required,key,return,boolean,value,of,value
ParameterTool -> public boolean getBoolean(String key);1505831007;Returns the Boolean value for the given key._The method fails if the key does not exist.;public boolean getBoolean(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Boolean.valueOf(value)__	};returns,the,boolean,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,boolean,get,boolean,string,key,add,to,defaults,key,null,string,value,get,required,key,return,boolean,value,of,value
ParameterTool -> public boolean getBoolean(String key);1506499511;Returns the Boolean value for the given key._The method fails if the key does not exist.;public boolean getBoolean(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Boolean.valueOf(value)__	};returns,the,boolean,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,boolean,get,boolean,string,key,add,to,defaults,key,null,string,value,get,required,key,return,boolean,value,of,value
ParameterTool -> public boolean getBoolean(String key);1511189418;Returns the Boolean value for the given key._The method fails if the key does not exist.;public boolean getBoolean(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Boolean.valueOf(value)__	};returns,the,boolean,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,boolean,get,boolean,string,key,add,to,defaults,key,null,string,value,get,required,key,return,boolean,value,of,value
ParameterTool -> public boolean getBoolean(String key);1511966704;Returns the Boolean value for the given key._The method fails if the key does not exist.;public boolean getBoolean(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Boolean.valueOf(value)__	};returns,the,boolean,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,boolean,get,boolean,string,key,add,to,defaults,key,null,string,value,get,required,key,return,boolean,value,of,value
ParameterTool -> public boolean getBoolean(String key);1539096710;Returns the Boolean value for the given key._The method fails if the key does not exist.;public boolean getBoolean(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Boolean.valueOf(value)__	};returns,the,boolean,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,boolean,get,boolean,string,key,add,to,defaults,key,null,string,value,get,required,key,return,boolean,value,of,value
ParameterTool -> public boolean getBoolean(String key);1539096710;Returns the Boolean value for the given key._The method fails if the key does not exist.;public boolean getBoolean(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Boolean.valueOf(value)__	};returns,the,boolean,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,boolean,get,boolean,string,key,add,to,defaults,key,null,string,value,get,required,key,return,boolean,value,of,value
ParameterTool -> public static ParameterTool fromPropertiesFile(String path) throws IOException;1441981413;Returns {@link ParameterTool} for the given {@link Properties} file__@param path Path to the properties file_@return A {@link ParameterTool}_@throws IOException If the file does not exist__@see Properties;public static ParameterTool fromPropertiesFile(String path) throws IOException {_		File propertiesFile = new File(path)__		if(!propertiesFile.exists()) {_			throw new FileNotFoundException("Properties file "+path+" does not exist")__		}_		Properties props = new Properties()__		FileInputStream fis = new FileInputStream(propertiesFile)__		props.load(fis)__		fis.close()__		return fromMap((Map)props)__	};returns,link,parameter,tool,for,the,given,link,properties,file,param,path,path,to,the,properties,file,return,a,link,parameter,tool,throws,ioexception,if,the,file,does,not,exist,see,properties;public,static,parameter,tool,from,properties,file,string,path,throws,ioexception,file,properties,file,new,file,path,if,properties,file,exists,throw,new,file,not,found,exception,properties,file,path,does,not,exist,properties,props,new,properties,file,input,stream,fis,new,file,input,stream,properties,file,props,load,fis,fis,close,return,from,map,map,props
ParameterTool -> public static ParameterTool fromPropertiesFile(String path) throws IOException;1443123598;Returns {@link ParameterTool} for the given {@link Properties} file__@param path Path to the properties file_@return A {@link ParameterTool}_@throws IOException If the file does not exist__@see Properties;public static ParameterTool fromPropertiesFile(String path) throws IOException {_		File propertiesFile = new File(path)__		if(!propertiesFile.exists()) {_			throw new FileNotFoundException("Properties file "+path+" does not exist")__		}_		Properties props = new Properties()__		FileInputStream fis = new FileInputStream(propertiesFile)__		props.load(fis)__		fis.close()__		return fromMap((Map)props)__	};returns,link,parameter,tool,for,the,given,link,properties,file,param,path,path,to,the,properties,file,return,a,link,parameter,tool,throws,ioexception,if,the,file,does,not,exist,see,properties;public,static,parameter,tool,from,properties,file,string,path,throws,ioexception,file,properties,file,new,file,path,if,properties,file,exists,throw,new,file,not,found,exception,properties,file,path,does,not,exist,properties,props,new,properties,file,input,stream,fis,new,file,input,stream,properties,file,props,load,fis,fis,close,return,from,map,map,props
ParameterTool -> public static ParameterTool fromPropertiesFile(String path) throws IOException;1454679829;Returns {@link ParameterTool} for the given {@link Properties} file__@param path Path to the properties file_@return A {@link ParameterTool}_@throws IOException If the file does not exist__@see Properties;public static ParameterTool fromPropertiesFile(String path) throws IOException {_		File propertiesFile = new File(path)__		if(!propertiesFile.exists()) {_			throw new FileNotFoundException("Properties file "+path+" does not exist")__		}_		Properties props = new Properties()__		FileInputStream fis = new FileInputStream(propertiesFile)__		props.load(fis)__		fis.close()__		return fromMap((Map)props)__	};returns,link,parameter,tool,for,the,given,link,properties,file,param,path,path,to,the,properties,file,return,a,link,parameter,tool,throws,ioexception,if,the,file,does,not,exist,see,properties;public,static,parameter,tool,from,properties,file,string,path,throws,ioexception,file,properties,file,new,file,path,if,properties,file,exists,throw,new,file,not,found,exception,properties,file,path,does,not,exist,properties,props,new,properties,file,input,stream,fis,new,file,input,stream,properties,file,props,load,fis,fis,close,return,from,map,map,props
ParameterTool -> public static ParameterTool fromPropertiesFile(String path) throws IOException;1455101486;Returns {@link ParameterTool} for the given {@link Properties} file__@param path Path to the properties file_@return A {@link ParameterTool}_@throws IOException If the file does not exist__@see Properties;public static ParameterTool fromPropertiesFile(String path) throws IOException {_		File propertiesFile = new File(path)__		if(!propertiesFile.exists()) {_			throw new FileNotFoundException("Properties file "+path+" does not exist")__		}_		Properties props = new Properties()__		FileInputStream fis = new FileInputStream(propertiesFile)__		props.load(fis)__		fis.close()__		return fromMap((Map)props)__	};returns,link,parameter,tool,for,the,given,link,properties,file,param,path,path,to,the,properties,file,return,a,link,parameter,tool,throws,ioexception,if,the,file,does,not,exist,see,properties;public,static,parameter,tool,from,properties,file,string,path,throws,ioexception,file,properties,file,new,file,path,if,properties,file,exists,throw,new,file,not,found,exception,properties,file,path,does,not,exist,properties,props,new,properties,file,input,stream,fis,new,file,input,stream,properties,file,props,load,fis,fis,close,return,from,map,map,props
ParameterTool -> public static ParameterTool fromPropertiesFile(String path) throws IOException;1462899491;Returns {@link ParameterTool} for the given {@link Properties} file__@param path Path to the properties file_@return A {@link ParameterTool}_@throws IOException If the file does not exist__@see Properties;public static ParameterTool fromPropertiesFile(String path) throws IOException {_		File propertiesFile = new File(path)__		if(!propertiesFile.exists()) {_			throw new FileNotFoundException("Properties file "+path+" does not exist")__		}_		Properties props = new Properties()__		FileInputStream fis = new FileInputStream(propertiesFile)__		props.load(fis)__		fis.close()__		return fromMap((Map)props)__	};returns,link,parameter,tool,for,the,given,link,properties,file,param,path,path,to,the,properties,file,return,a,link,parameter,tool,throws,ioexception,if,the,file,does,not,exist,see,properties;public,static,parameter,tool,from,properties,file,string,path,throws,ioexception,file,properties,file,new,file,path,if,properties,file,exists,throw,new,file,not,found,exception,properties,file,path,does,not,exist,properties,props,new,properties,file,input,stream,fis,new,file,input,stream,properties,file,props,load,fis,fis,close,return,from,map,map,props
ParameterTool -> public static ParameterTool fromPropertiesFile(String path) throws IOException;1465462613;Returns {@link ParameterTool} for the given {@link Properties} file__@param path Path to the properties file_@return A {@link ParameterTool}_@throws IOException If the file does not exist__@see Properties;public static ParameterTool fromPropertiesFile(String path) throws IOException {_		File propertiesFile = new File(path)__		if(!propertiesFile.exists()) {_			throw new FileNotFoundException("Properties file " + propertiesFile.getAbsolutePath() + " does not exist")__		}_		Properties props = new Properties()__		FileInputStream fis = new FileInputStream(propertiesFile)__		props.load(fis)__		fis.close()__		return fromMap((Map)props)__	};returns,link,parameter,tool,for,the,given,link,properties,file,param,path,path,to,the,properties,file,return,a,link,parameter,tool,throws,ioexception,if,the,file,does,not,exist,see,properties;public,static,parameter,tool,from,properties,file,string,path,throws,ioexception,file,properties,file,new,file,path,if,properties,file,exists,throw,new,file,not,found,exception,properties,file,properties,file,get,absolute,path,does,not,exist,properties,props,new,properties,file,input,stream,fis,new,file,input,stream,properties,file,props,load,fis,fis,close,return,from,map,map,props
ParameterTool -> public static ParameterTool fromPropertiesFile(String path) throws IOException;1473329066;Returns {@link ParameterTool} for the given {@link Properties} file__@param path Path to the properties file_@return A {@link ParameterTool}_@throws IOException If the file does not exist__@see Properties;public static ParameterTool fromPropertiesFile(String path) throws IOException {_		File propertiesFile = new File(path)__		if(!propertiesFile.exists()) {_			throw new FileNotFoundException("Properties file " + propertiesFile.getAbsolutePath() + " does not exist")__		}_		Properties props = new Properties()__		FileInputStream fis = new FileInputStream(propertiesFile)__		props.load(fis)__		fis.close()__		return fromMap((Map)props)__	};returns,link,parameter,tool,for,the,given,link,properties,file,param,path,path,to,the,properties,file,return,a,link,parameter,tool,throws,ioexception,if,the,file,does,not,exist,see,properties;public,static,parameter,tool,from,properties,file,string,path,throws,ioexception,file,properties,file,new,file,path,if,properties,file,exists,throw,new,file,not,found,exception,properties,file,properties,file,get,absolute,path,does,not,exist,properties,props,new,properties,file,input,stream,fis,new,file,input,stream,properties,file,props,load,fis,fis,close,return,from,map,map,props
ParameterTool -> public static ParameterTool fromPropertiesFile(String path) throws IOException;1474022085;Returns {@link ParameterTool} for the given {@link Properties} file__@param path Path to the properties file_@return A {@link ParameterTool}_@throws IOException If the file does not exist__@see Properties;public static ParameterTool fromPropertiesFile(String path) throws IOException {_		File propertiesFile = new File(path)__		if(!propertiesFile.exists()) {_			throw new FileNotFoundException("Properties file " + propertiesFile.getAbsolutePath() + " does not exist")__		}_		Properties props = new Properties()__		try (FileInputStream fis = new FileInputStream(propertiesFile)) {_			props.load(fis)__		}_		return fromMap((Map)props)__	};returns,link,parameter,tool,for,the,given,link,properties,file,param,path,path,to,the,properties,file,return,a,link,parameter,tool,throws,ioexception,if,the,file,does,not,exist,see,properties;public,static,parameter,tool,from,properties,file,string,path,throws,ioexception,file,properties,file,new,file,path,if,properties,file,exists,throw,new,file,not,found,exception,properties,file,properties,file,get,absolute,path,does,not,exist,properties,props,new,properties,try,file,input,stream,fis,new,file,input,stream,properties,file,props,load,fis,return,from,map,map,props
ParameterTool -> public static ParameterTool fromPropertiesFile(String path) throws IOException;1474626798;Returns {@link ParameterTool} for the given {@link Properties} file__@param path Path to the properties file_@return A {@link ParameterTool}_@throws IOException If the file does not exist__@see Properties;public static ParameterTool fromPropertiesFile(String path) throws IOException {_		File propertiesFile = new File(path)__		if(!propertiesFile.exists()) {_			throw new FileNotFoundException("Properties file " + propertiesFile.getAbsolutePath() + " does not exist")__		}_		Properties props = new Properties()__		try (FileInputStream fis = new FileInputStream(propertiesFile)) {_			props.load(fis)__		}_		return fromMap((Map)props)__	};returns,link,parameter,tool,for,the,given,link,properties,file,param,path,path,to,the,properties,file,return,a,link,parameter,tool,throws,ioexception,if,the,file,does,not,exist,see,properties;public,static,parameter,tool,from,properties,file,string,path,throws,ioexception,file,properties,file,new,file,path,if,properties,file,exists,throw,new,file,not,found,exception,properties,file,properties,file,get,absolute,path,does,not,exist,properties,props,new,properties,try,file,input,stream,fis,new,file,input,stream,properties,file,props,load,fis,return,from,map,map,props
ParameterTool -> public static ParameterTool fromPropertiesFile(String path) throws IOException;1474626882;Returns {@link ParameterTool} for the given {@link Properties} file__@param path Path to the properties file_@return A {@link ParameterTool}_@throws IOException If the file does not exist__@see Properties;public static ParameterTool fromPropertiesFile(String path) throws IOException {_		File propertiesFile = new File(path)__		if(!propertiesFile.exists()) {_			throw new FileNotFoundException("Properties file " + propertiesFile.getAbsolutePath() + " does not exist")__		}_		Properties props = new Properties()__		try (FileInputStream fis = new FileInputStream(propertiesFile)) {_			props.load(fis)__		}_		return fromMap((Map)props)__	};returns,link,parameter,tool,for,the,given,link,properties,file,param,path,path,to,the,properties,file,return,a,link,parameter,tool,throws,ioexception,if,the,file,does,not,exist,see,properties;public,static,parameter,tool,from,properties,file,string,path,throws,ioexception,file,properties,file,new,file,path,if,properties,file,exists,throw,new,file,not,found,exception,properties,file,properties,file,get,absolute,path,does,not,exist,properties,props,new,properties,try,file,input,stream,fis,new,file,input,stream,properties,file,props,load,fis,return,from,map,map,props
ParameterTool -> public static ParameterTool fromPropertiesFile(String path) throws IOException;1478107885;Returns {@link ParameterTool} for the given {@link Properties} file__@param path Path to the properties file_@return A {@link ParameterTool}_@throws IOException If the file does not exist__@see Properties;public static ParameterTool fromPropertiesFile(String path) throws IOException {_		File propertiesFile = new File(path)__		if(!propertiesFile.exists()) {_			throw new FileNotFoundException("Properties file " + propertiesFile.getAbsolutePath() + " does not exist")__		}_		Properties props = new Properties()__		try (FileInputStream fis = new FileInputStream(propertiesFile)) {_			props.load(fis)__		}_		return fromMap((Map)props)__	};returns,link,parameter,tool,for,the,given,link,properties,file,param,path,path,to,the,properties,file,return,a,link,parameter,tool,throws,ioexception,if,the,file,does,not,exist,see,properties;public,static,parameter,tool,from,properties,file,string,path,throws,ioexception,file,properties,file,new,file,path,if,properties,file,exists,throw,new,file,not,found,exception,properties,file,properties,file,get,absolute,path,does,not,exist,properties,props,new,properties,try,file,input,stream,fis,new,file,input,stream,properties,file,props,load,fis,return,from,map,map,props
ParameterTool -> public static ParameterTool fromPropertiesFile(String path) throws IOException;1499777482;Returns {@link ParameterTool} for the given {@link Properties} file__@param path Path to the properties file_@return A {@link ParameterTool}_@throws IOException If the file does not exist__@see Properties;public static ParameterTool fromPropertiesFile(String path) throws IOException {_		File propertiesFile = new File(path)__		if(!propertiesFile.exists()) {_			throw new FileNotFoundException("Properties file " + propertiesFile.getAbsolutePath() + " does not exist")__		}_		Properties props = new Properties()__		try (FileInputStream fis = new FileInputStream(propertiesFile)) {_			props.load(fis)__		}_		return fromMap((Map)props)__	};returns,link,parameter,tool,for,the,given,link,properties,file,param,path,path,to,the,properties,file,return,a,link,parameter,tool,throws,ioexception,if,the,file,does,not,exist,see,properties;public,static,parameter,tool,from,properties,file,string,path,throws,ioexception,file,properties,file,new,file,path,if,properties,file,exists,throw,new,file,not,found,exception,properties,file,properties,file,get,absolute,path,does,not,exist,properties,props,new,properties,try,file,input,stream,fis,new,file,input,stream,properties,file,props,load,fis,return,from,map,map,props
ParameterTool -> public static ParameterTool fromPropertiesFile(String path) throws IOException;1500387265;Returns {@link ParameterTool} for the given {@link Properties} file.__@param path Path to the properties file_@return A {@link ParameterTool}_@throws IOException If the file does not exist_@see Properties;public static ParameterTool fromPropertiesFile(String path) throws IOException {_		File propertiesFile = new File(path)__		if (!propertiesFile.exists()) {_			throw new FileNotFoundException("Properties file " + propertiesFile.getAbsolutePath() + " does not exist")__		}_		Properties props = new Properties()__		try (FileInputStream fis = new FileInputStream(propertiesFile)) {_			props.load(fis)__		}_		return fromMap((Map) props)__	};returns,link,parameter,tool,for,the,given,link,properties,file,param,path,path,to,the,properties,file,return,a,link,parameter,tool,throws,ioexception,if,the,file,does,not,exist,see,properties;public,static,parameter,tool,from,properties,file,string,path,throws,ioexception,file,properties,file,new,file,path,if,properties,file,exists,throw,new,file,not,found,exception,properties,file,properties,file,get,absolute,path,does,not,exist,properties,props,new,properties,try,file,input,stream,fis,new,file,input,stream,properties,file,props,load,fis,return,from,map,map,props
ParameterTool -> public static ParameterTool fromPropertiesFile(String path) throws IOException;1505831007;Returns {@link ParameterTool} for the given {@link Properties} file.__@param path Path to the properties file_@return A {@link ParameterTool}_@throws IOException If the file does not exist_@see Properties;public static ParameterTool fromPropertiesFile(String path) throws IOException {_		File propertiesFile = new File(path)__		return fromPropertiesFile(propertiesFile)__	};returns,link,parameter,tool,for,the,given,link,properties,file,param,path,path,to,the,properties,file,return,a,link,parameter,tool,throws,ioexception,if,the,file,does,not,exist,see,properties;public,static,parameter,tool,from,properties,file,string,path,throws,ioexception,file,properties,file,new,file,path,return,from,properties,file,properties,file
ParameterTool -> public static ParameterTool fromPropertiesFile(String path) throws IOException;1506499511;Returns {@link ParameterTool} for the given {@link Properties} file.__@param path Path to the properties file_@return A {@link ParameterTool}_@throws IOException If the file does not exist_@see Properties;public static ParameterTool fromPropertiesFile(String path) throws IOException {_		File propertiesFile = new File(path)__		return fromPropertiesFile(propertiesFile)__	};returns,link,parameter,tool,for,the,given,link,properties,file,param,path,path,to,the,properties,file,return,a,link,parameter,tool,throws,ioexception,if,the,file,does,not,exist,see,properties;public,static,parameter,tool,from,properties,file,string,path,throws,ioexception,file,properties,file,new,file,path,return,from,properties,file,properties,file
ParameterTool -> public static ParameterTool fromPropertiesFile(String path) throws IOException;1511189418;Returns {@link ParameterTool} for the given {@link Properties} file.__@param path Path to the properties file_@return A {@link ParameterTool}_@throws IOException If the file does not exist_@see Properties;public static ParameterTool fromPropertiesFile(String path) throws IOException {_		File propertiesFile = new File(path)__		return fromPropertiesFile(propertiesFile)__	};returns,link,parameter,tool,for,the,given,link,properties,file,param,path,path,to,the,properties,file,return,a,link,parameter,tool,throws,ioexception,if,the,file,does,not,exist,see,properties;public,static,parameter,tool,from,properties,file,string,path,throws,ioexception,file,properties,file,new,file,path,return,from,properties,file,properties,file
ParameterTool -> public static ParameterTool fromPropertiesFile(String path) throws IOException;1511966704;Returns {@link ParameterTool} for the given {@link Properties} file.__@param path Path to the properties file_@return A {@link ParameterTool}_@throws IOException If the file does not exist_@see Properties;public static ParameterTool fromPropertiesFile(String path) throws IOException {_		File propertiesFile = new File(path)__		return fromPropertiesFile(propertiesFile)__	};returns,link,parameter,tool,for,the,given,link,properties,file,param,path,path,to,the,properties,file,return,a,link,parameter,tool,throws,ioexception,if,the,file,does,not,exist,see,properties;public,static,parameter,tool,from,properties,file,string,path,throws,ioexception,file,properties,file,new,file,path,return,from,properties,file,properties,file
ParameterTool -> public static ParameterTool fromPropertiesFile(String path) throws IOException;1539096710;Returns {@link ParameterTool} for the given {@link Properties} file.__@param path Path to the properties file_@return A {@link ParameterTool}_@throws IOException If the file does not exist_@see Properties;public static ParameterTool fromPropertiesFile(String path) throws IOException {_		File propertiesFile = new File(path)__		return fromPropertiesFile(propertiesFile)__	};returns,link,parameter,tool,for,the,given,link,properties,file,param,path,path,to,the,properties,file,return,a,link,parameter,tool,throws,ioexception,if,the,file,does,not,exist,see,properties;public,static,parameter,tool,from,properties,file,string,path,throws,ioexception,file,properties,file,new,file,path,return,from,properties,file,properties,file
ParameterTool -> public static ParameterTool fromPropertiesFile(String path) throws IOException;1539096710;Returns {@link ParameterTool} for the given {@link Properties} file.__@param path Path to the properties file_@return A {@link ParameterTool}_@throws IOException If the file does not exist_@see Properties;public static ParameterTool fromPropertiesFile(String path) throws IOException {_		File propertiesFile = new File(path)__		return fromPropertiesFile(propertiesFile)__	};returns,link,parameter,tool,for,the,given,link,properties,file,param,path,path,to,the,properties,file,return,a,link,parameter,tool,throws,ioexception,if,the,file,does,not,exist,see,properties;public,static,parameter,tool,from,properties,file,string,path,throws,ioexception,file,properties,file,new,file,path,return,from,properties,file,properties,file
ParameterTool -> @Deprecated 	@PublicEvolving 	public static ParameterTool fromGenericOptionsParser(String[] args) throws IOException;1478107885;Returns {@link ParameterTool} for the arguments parsed by {@link GenericOptionsParser}__@param args Input array arguments. It should be parsable by {@link GenericOptionsParser}_@return A {@link ParameterTool}_@throws IOException If arguments cannot be parsed by {@link GenericOptionsParser}_@see GenericOptionsParser_@deprecated Please use {@link org.apache.flink.hadoopcompatibility.HadoopUtils#paramsFromGenericOptionsParser(String[])}_from project flink-hadoop-compatibility;@Deprecated_	@PublicEvolving_	public static ParameterTool fromGenericOptionsParser(String[] args) throws IOException {_		Option[] options = new GenericOptionsParser(args).getCommandLine().getOptions()__		Map<String, String> map = new HashMap<String, String>()__		for (Option option : options) {_			String[] split = option.getValue().split("=")__			map.put(split[0], split[1])__		}_		return fromMap(map)__	};returns,link,parameter,tool,for,the,arguments,parsed,by,link,generic,options,parser,param,args,input,array,arguments,it,should,be,parsable,by,link,generic,options,parser,return,a,link,parameter,tool,throws,ioexception,if,arguments,cannot,be,parsed,by,link,generic,options,parser,see,generic,options,parser,deprecated,please,use,link,org,apache,flink,hadoopcompatibility,hadoop,utils,params,from,generic,options,parser,string,from,project,flink,hadoop,compatibility;deprecated,public,evolving,public,static,parameter,tool,from,generic,options,parser,string,args,throws,ioexception,option,options,new,generic,options,parser,args,get,command,line,get,options,map,string,string,map,new,hash,map,string,string,for,option,option,options,string,split,option,get,value,split,map,put,split,0,split,1,return,from,map,map
ParameterTool -> @Deprecated 	@PublicEvolving 	public static ParameterTool fromGenericOptionsParser(String[] args) throws IOException;1499777482;Returns {@link ParameterTool} for the arguments parsed by {@link GenericOptionsParser}__@param args Input array arguments. It should be parsable by {@link GenericOptionsParser}_@return A {@link ParameterTool}_@throws IOException If arguments cannot be parsed by {@link GenericOptionsParser}_@see GenericOptionsParser_@deprecated Please use {@link org.apache.flink.hadoopcompatibility.HadoopUtils#paramsFromGenericOptionsParser(String[])}_from project flink-hadoop-compatibility;@Deprecated_	@PublicEvolving_	public static ParameterTool fromGenericOptionsParser(String[] args) throws IOException {_		Option[] options = new GenericOptionsParser(args).getCommandLine().getOptions()__		Map<String, String> map = new HashMap<String, String>()__		for (Option option : options) {_			String[] split = option.getValue().split("=")__			map.put(split[0], split[1])__		}_		return fromMap(map)__	};returns,link,parameter,tool,for,the,arguments,parsed,by,link,generic,options,parser,param,args,input,array,arguments,it,should,be,parsable,by,link,generic,options,parser,return,a,link,parameter,tool,throws,ioexception,if,arguments,cannot,be,parsed,by,link,generic,options,parser,see,generic,options,parser,deprecated,please,use,link,org,apache,flink,hadoopcompatibility,hadoop,utils,params,from,generic,options,parser,string,from,project,flink,hadoop,compatibility;deprecated,public,evolving,public,static,parameter,tool,from,generic,options,parser,string,args,throws,ioexception,option,options,new,generic,options,parser,args,get,command,line,get,options,map,string,string,map,new,hash,map,string,string,for,option,option,options,string,split,option,get,value,split,map,put,split,0,split,1,return,from,map,map
ParameterTool -> @Deprecated 	@PublicEvolving 	public static ParameterTool fromGenericOptionsParser(String[] args) throws IOException;1500387265;Returns {@link ParameterTool} for the arguments parsed by {@link GenericOptionsParser}.__@param args Input array arguments. It should be parsable by {@link GenericOptionsParser}_@return A {@link ParameterTool}_@throws IOException If arguments cannot be parsed by {@link GenericOptionsParser}_@see GenericOptionsParser_@deprecated Please use {@link org.apache.flink.hadoopcompatibility.HadoopUtils#paramsFromGenericOptionsParser(String[])}_from project flink-hadoop-compatibility;@Deprecated_	@PublicEvolving_	public static ParameterTool fromGenericOptionsParser(String[] args) throws IOException {_		Option[] options = new GenericOptionsParser(args).getCommandLine().getOptions()__		Map<String, String> map = new HashMap<String, String>()__		for (Option option : options) {_			String[] split = option.getValue().split("=")__			map.put(split[0], split[1])__		}_		return fromMap(map)__	};returns,link,parameter,tool,for,the,arguments,parsed,by,link,generic,options,parser,param,args,input,array,arguments,it,should,be,parsable,by,link,generic,options,parser,return,a,link,parameter,tool,throws,ioexception,if,arguments,cannot,be,parsed,by,link,generic,options,parser,see,generic,options,parser,deprecated,please,use,link,org,apache,flink,hadoopcompatibility,hadoop,utils,params,from,generic,options,parser,string,from,project,flink,hadoop,compatibility;deprecated,public,evolving,public,static,parameter,tool,from,generic,options,parser,string,args,throws,ioexception,option,options,new,generic,options,parser,args,get,command,line,get,options,map,string,string,map,new,hash,map,string,string,for,option,option,options,string,split,option,get,value,split,map,put,split,0,split,1,return,from,map,map
ParameterTool -> @Deprecated 	@PublicEvolving 	public static ParameterTool fromGenericOptionsParser(String[] args) throws IOException;1505831007;Returns {@link ParameterTool} for the arguments parsed by {@link GenericOptionsParser}.__@param args Input array arguments. It should be parsable by {@link GenericOptionsParser}_@return A {@link ParameterTool}_@throws IOException If arguments cannot be parsed by {@link GenericOptionsParser}_@see GenericOptionsParser_@deprecated Please use {@link org.apache.flink.hadoopcompatibility.HadoopUtils#paramsFromGenericOptionsParser(String[])}_from project flink-hadoop-compatibility;@Deprecated_	@PublicEvolving_	public static ParameterTool fromGenericOptionsParser(String[] args) throws IOException {_		Option[] options = new GenericOptionsParser(args).getCommandLine().getOptions()__		Map<String, String> map = new HashMap<String, String>()__		for (Option option : options) {_			String[] split = option.getValue().split("=")__			map.put(split[0], split[1])__		}_		return fromMap(map)__	};returns,link,parameter,tool,for,the,arguments,parsed,by,link,generic,options,parser,param,args,input,array,arguments,it,should,be,parsable,by,link,generic,options,parser,return,a,link,parameter,tool,throws,ioexception,if,arguments,cannot,be,parsed,by,link,generic,options,parser,see,generic,options,parser,deprecated,please,use,link,org,apache,flink,hadoopcompatibility,hadoop,utils,params,from,generic,options,parser,string,from,project,flink,hadoop,compatibility;deprecated,public,evolving,public,static,parameter,tool,from,generic,options,parser,string,args,throws,ioexception,option,options,new,generic,options,parser,args,get,command,line,get,options,map,string,string,map,new,hash,map,string,string,for,option,option,options,string,split,option,get,value,split,map,put,split,0,split,1,return,from,map,map
ParameterTool -> public byte getByte(String key);1443123598;Returns the Byte value for the given key._The method fails if the key does not exist.;public byte getByte(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Byte.valueOf(value)__	};returns,the,byte,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,byte,get,byte,string,key,add,to,defaults,key,null,string,value,get,required,key,return,byte,value,of,value
ParameterTool -> public byte getByte(String key);1454679829;Returns the Byte value for the given key._The method fails if the key does not exist.;public byte getByte(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Byte.valueOf(value)__	};returns,the,byte,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,byte,get,byte,string,key,add,to,defaults,key,null,string,value,get,required,key,return,byte,value,of,value
ParameterTool -> public byte getByte(String key);1455101486;Returns the Byte value for the given key._The method fails if the key does not exist.;public byte getByte(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Byte.valueOf(value)__	};returns,the,byte,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,byte,get,byte,string,key,add,to,defaults,key,null,string,value,get,required,key,return,byte,value,of,value
ParameterTool -> public byte getByte(String key);1462899491;Returns the Byte value for the given key._The method fails if the key does not exist.;public byte getByte(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Byte.valueOf(value)__	};returns,the,byte,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,byte,get,byte,string,key,add,to,defaults,key,null,string,value,get,required,key,return,byte,value,of,value
ParameterTool -> public byte getByte(String key);1465462613;Returns the Byte value for the given key._The method fails if the key does not exist.;public byte getByte(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Byte.valueOf(value)__	};returns,the,byte,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,byte,get,byte,string,key,add,to,defaults,key,null,string,value,get,required,key,return,byte,value,of,value
ParameterTool -> public byte getByte(String key);1473329066;Returns the Byte value for the given key._The method fails if the key does not exist.;public byte getByte(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Byte.valueOf(value)__	};returns,the,byte,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,byte,get,byte,string,key,add,to,defaults,key,null,string,value,get,required,key,return,byte,value,of,value
ParameterTool -> public byte getByte(String key);1474022085;Returns the Byte value for the given key._The method fails if the key does not exist.;public byte getByte(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Byte.valueOf(value)__	};returns,the,byte,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,byte,get,byte,string,key,add,to,defaults,key,null,string,value,get,required,key,return,byte,value,of,value
ParameterTool -> public byte getByte(String key);1474626798;Returns the Byte value for the given key._The method fails if the key does not exist.;public byte getByte(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Byte.valueOf(value)__	};returns,the,byte,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,byte,get,byte,string,key,add,to,defaults,key,null,string,value,get,required,key,return,byte,value,of,value
ParameterTool -> public byte getByte(String key);1474626882;Returns the Byte value for the given key._The method fails if the key does not exist.;public byte getByte(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Byte.valueOf(value)__	};returns,the,byte,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,byte,get,byte,string,key,add,to,defaults,key,null,string,value,get,required,key,return,byte,value,of,value
ParameterTool -> public byte getByte(String key);1478107885;Returns the Byte value for the given key._The method fails if the key does not exist.;public byte getByte(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Byte.valueOf(value)__	};returns,the,byte,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,byte,get,byte,string,key,add,to,defaults,key,null,string,value,get,required,key,return,byte,value,of,value
ParameterTool -> public byte getByte(String key);1499777482;Returns the Byte value for the given key._The method fails if the key does not exist.;public byte getByte(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Byte.valueOf(value)__	};returns,the,byte,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,byte,get,byte,string,key,add,to,defaults,key,null,string,value,get,required,key,return,byte,value,of,value
ParameterTool -> public byte getByte(String key);1500387265;Returns the Byte value for the given key._The method fails if the key does not exist.;public byte getByte(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Byte.valueOf(value)__	};returns,the,byte,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,byte,get,byte,string,key,add,to,defaults,key,null,string,value,get,required,key,return,byte,value,of,value
ParameterTool -> public byte getByte(String key);1505831007;Returns the Byte value for the given key._The method fails if the key does not exist.;public byte getByte(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Byte.valueOf(value)__	};returns,the,byte,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,byte,get,byte,string,key,add,to,defaults,key,null,string,value,get,required,key,return,byte,value,of,value
ParameterTool -> public byte getByte(String key);1506499511;Returns the Byte value for the given key._The method fails if the key does not exist.;public byte getByte(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Byte.valueOf(value)__	};returns,the,byte,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,byte,get,byte,string,key,add,to,defaults,key,null,string,value,get,required,key,return,byte,value,of,value
ParameterTool -> public byte getByte(String key);1511189418;Returns the Byte value for the given key._The method fails if the key does not exist.;public byte getByte(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Byte.valueOf(value)__	};returns,the,byte,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,byte,get,byte,string,key,add,to,defaults,key,null,string,value,get,required,key,return,byte,value,of,value
ParameterTool -> public byte getByte(String key);1511966704;Returns the Byte value for the given key._The method fails if the key does not exist.;public byte getByte(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Byte.valueOf(value)__	};returns,the,byte,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,byte,get,byte,string,key,add,to,defaults,key,null,string,value,get,required,key,return,byte,value,of,value
ParameterTool -> public byte getByte(String key);1539096710;Returns the Byte value for the given key._The method fails if the key does not exist.;public byte getByte(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Byte.valueOf(value)__	};returns,the,byte,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,byte,get,byte,string,key,add,to,defaults,key,null,string,value,get,required,key,return,byte,value,of,value
ParameterTool -> public byte getByte(String key);1539096710;Returns the Byte value for the given key._The method fails if the key does not exist.;public byte getByte(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Byte.valueOf(value)__	};returns,the,byte,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,byte,get,byte,string,key,add,to,defaults,key,null,string,value,get,required,key,return,byte,value,of,value
ParameterTool -> public float getFloat(String key);1441981413;Returns the Float value for the given key._The method fails if the key does not exist.;public float getFloat(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Float.valueOf(value)__	};returns,the,float,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,float,get,float,string,key,add,to,defaults,key,null,string,value,get,required,key,return,float,value,of,value
ParameterTool -> public float getFloat(String key);1443123598;Returns the Float value for the given key._The method fails if the key does not exist.;public float getFloat(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Float.valueOf(value)__	};returns,the,float,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,float,get,float,string,key,add,to,defaults,key,null,string,value,get,required,key,return,float,value,of,value
ParameterTool -> public float getFloat(String key);1454679829;Returns the Float value for the given key._The method fails if the key does not exist.;public float getFloat(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Float.valueOf(value)__	};returns,the,float,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,float,get,float,string,key,add,to,defaults,key,null,string,value,get,required,key,return,float,value,of,value
ParameterTool -> public float getFloat(String key);1455101486;Returns the Float value for the given key._The method fails if the key does not exist.;public float getFloat(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Float.valueOf(value)__	};returns,the,float,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,float,get,float,string,key,add,to,defaults,key,null,string,value,get,required,key,return,float,value,of,value
ParameterTool -> public float getFloat(String key);1462899491;Returns the Float value for the given key._The method fails if the key does not exist.;public float getFloat(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Float.valueOf(value)__	};returns,the,float,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,float,get,float,string,key,add,to,defaults,key,null,string,value,get,required,key,return,float,value,of,value
ParameterTool -> public float getFloat(String key);1465462613;Returns the Float value for the given key._The method fails if the key does not exist.;public float getFloat(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Float.valueOf(value)__	};returns,the,float,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,float,get,float,string,key,add,to,defaults,key,null,string,value,get,required,key,return,float,value,of,value
ParameterTool -> public float getFloat(String key);1473329066;Returns the Float value for the given key._The method fails if the key does not exist.;public float getFloat(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Float.valueOf(value)__	};returns,the,float,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,float,get,float,string,key,add,to,defaults,key,null,string,value,get,required,key,return,float,value,of,value
ParameterTool -> public float getFloat(String key);1474022085;Returns the Float value for the given key._The method fails if the key does not exist.;public float getFloat(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Float.valueOf(value)__	};returns,the,float,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,float,get,float,string,key,add,to,defaults,key,null,string,value,get,required,key,return,float,value,of,value
ParameterTool -> public float getFloat(String key);1474626798;Returns the Float value for the given key._The method fails if the key does not exist.;public float getFloat(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Float.valueOf(value)__	};returns,the,float,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,float,get,float,string,key,add,to,defaults,key,null,string,value,get,required,key,return,float,value,of,value
ParameterTool -> public float getFloat(String key);1474626882;Returns the Float value for the given key._The method fails if the key does not exist.;public float getFloat(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Float.valueOf(value)__	};returns,the,float,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,float,get,float,string,key,add,to,defaults,key,null,string,value,get,required,key,return,float,value,of,value
ParameterTool -> public float getFloat(String key);1478107885;Returns the Float value for the given key._The method fails if the key does not exist.;public float getFloat(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Float.valueOf(value)__	};returns,the,float,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,float,get,float,string,key,add,to,defaults,key,null,string,value,get,required,key,return,float,value,of,value
ParameterTool -> public float getFloat(String key);1499777482;Returns the Float value for the given key._The method fails if the key does not exist.;public float getFloat(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Float.valueOf(value)__	};returns,the,float,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,float,get,float,string,key,add,to,defaults,key,null,string,value,get,required,key,return,float,value,of,value
ParameterTool -> public float getFloat(String key);1500387265;Returns the Float value for the given key._The method fails if the key does not exist.;public float getFloat(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Float.valueOf(value)__	};returns,the,float,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,float,get,float,string,key,add,to,defaults,key,null,string,value,get,required,key,return,float,value,of,value
ParameterTool -> public float getFloat(String key);1505831007;Returns the Float value for the given key._The method fails if the key does not exist.;public float getFloat(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Float.valueOf(value)__	};returns,the,float,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,float,get,float,string,key,add,to,defaults,key,null,string,value,get,required,key,return,float,value,of,value
ParameterTool -> public float getFloat(String key);1506499511;Returns the Float value for the given key._The method fails if the key does not exist.;public float getFloat(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Float.valueOf(value)__	};returns,the,float,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,float,get,float,string,key,add,to,defaults,key,null,string,value,get,required,key,return,float,value,of,value
ParameterTool -> public float getFloat(String key);1511189418;Returns the Float value for the given key._The method fails if the key does not exist.;public float getFloat(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Float.valueOf(value)__	};returns,the,float,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,float,get,float,string,key,add,to,defaults,key,null,string,value,get,required,key,return,float,value,of,value
ParameterTool -> public float getFloat(String key);1511966704;Returns the Float value for the given key._The method fails if the key does not exist.;public float getFloat(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Float.valueOf(value)__	};returns,the,float,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,float,get,float,string,key,add,to,defaults,key,null,string,value,get,required,key,return,float,value,of,value
ParameterTool -> public float getFloat(String key);1539096710;Returns the Float value for the given key._The method fails if the key does not exist.;public float getFloat(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Float.valueOf(value)__	};returns,the,float,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,float,get,float,string,key,add,to,defaults,key,null,string,value,get,required,key,return,float,value,of,value
ParameterTool -> public float getFloat(String key);1539096710;Returns the Float value for the given key._The method fails if the key does not exist.;public float getFloat(String key) {_		addToDefaults(key, null)__		String value = getRequired(key)__		return Float.valueOf(value)__	};returns,the,float,value,for,the,given,key,the,method,fails,if,the,key,does,not,exist;public,float,get,float,string,key,add,to,defaults,key,null,string,value,get,required,key,return,float,value,of,value
ParameterTool -> public static ParameterTool fromPropertiesFile(InputStream inputStream) throws IOException;1505831007;Returns {@link ParameterTool} for the given InputStream from {@link Properties} file.__@param inputStream InputStream from the properties file_@return A {@link ParameterTool}_@throws IOException If the file does not exist_@see Properties;public static ParameterTool fromPropertiesFile(InputStream inputStream) throws IOException {_		Properties props = new Properties()__		props.load(inputStream)__		return fromMap((Map) props)__	};returns,link,parameter,tool,for,the,given,input,stream,from,link,properties,file,param,input,stream,input,stream,from,the,properties,file,return,a,link,parameter,tool,throws,ioexception,if,the,file,does,not,exist,see,properties;public,static,parameter,tool,from,properties,file,input,stream,input,stream,throws,ioexception,properties,props,new,properties,props,load,input,stream,return,from,map,map,props
ParameterTool -> public static ParameterTool fromPropertiesFile(InputStream inputStream) throws IOException;1506499511;Returns {@link ParameterTool} for the given InputStream from {@link Properties} file.__@param inputStream InputStream from the properties file_@return A {@link ParameterTool}_@throws IOException If the file does not exist_@see Properties;public static ParameterTool fromPropertiesFile(InputStream inputStream) throws IOException {_		Properties props = new Properties()__		props.load(inputStream)__		return fromMap((Map) props)__	};returns,link,parameter,tool,for,the,given,input,stream,from,link,properties,file,param,input,stream,input,stream,from,the,properties,file,return,a,link,parameter,tool,throws,ioexception,if,the,file,does,not,exist,see,properties;public,static,parameter,tool,from,properties,file,input,stream,input,stream,throws,ioexception,properties,props,new,properties,props,load,input,stream,return,from,map,map,props
ParameterTool -> public static ParameterTool fromPropertiesFile(InputStream inputStream) throws IOException;1511189418;Returns {@link ParameterTool} for the given InputStream from {@link Properties} file.__@param inputStream InputStream from the properties file_@return A {@link ParameterTool}_@throws IOException If the file does not exist_@see Properties;public static ParameterTool fromPropertiesFile(InputStream inputStream) throws IOException {_		Properties props = new Properties()__		props.load(inputStream)__		return fromMap((Map) props)__	};returns,link,parameter,tool,for,the,given,input,stream,from,link,properties,file,param,input,stream,input,stream,from,the,properties,file,return,a,link,parameter,tool,throws,ioexception,if,the,file,does,not,exist,see,properties;public,static,parameter,tool,from,properties,file,input,stream,input,stream,throws,ioexception,properties,props,new,properties,props,load,input,stream,return,from,map,map,props
ParameterTool -> public static ParameterTool fromPropertiesFile(InputStream inputStream) throws IOException;1511966704;Returns {@link ParameterTool} for the given InputStream from {@link Properties} file.__@param inputStream InputStream from the properties file_@return A {@link ParameterTool}_@throws IOException If the file does not exist_@see Properties;public static ParameterTool fromPropertiesFile(InputStream inputStream) throws IOException {_		Properties props = new Properties()__		props.load(inputStream)__		return fromMap((Map) props)__	};returns,link,parameter,tool,for,the,given,input,stream,from,link,properties,file,param,input,stream,input,stream,from,the,properties,file,return,a,link,parameter,tool,throws,ioexception,if,the,file,does,not,exist,see,properties;public,static,parameter,tool,from,properties,file,input,stream,input,stream,throws,ioexception,properties,props,new,properties,props,load,input,stream,return,from,map,map,props
ParameterTool -> public static ParameterTool fromPropertiesFile(InputStream inputStream) throws IOException;1539096710;Returns {@link ParameterTool} for the given InputStream from {@link Properties} file.__@param inputStream InputStream from the properties file_@return A {@link ParameterTool}_@throws IOException If the file does not exist_@see Properties;public static ParameterTool fromPropertiesFile(InputStream inputStream) throws IOException {_		Properties props = new Properties()__		props.load(inputStream)__		return fromMap((Map) props)__	};returns,link,parameter,tool,for,the,given,input,stream,from,link,properties,file,param,input,stream,input,stream,from,the,properties,file,return,a,link,parameter,tool,throws,ioexception,if,the,file,does,not,exist,see,properties;public,static,parameter,tool,from,properties,file,input,stream,input,stream,throws,ioexception,properties,props,new,properties,props,load,input,stream,return,from,map,map,props
ParameterTool -> public static ParameterTool fromPropertiesFile(InputStream inputStream) throws IOException;1539096710;Returns {@link ParameterTool} for the given InputStream from {@link Properties} file.__@param inputStream InputStream from the properties file_@return A {@link ParameterTool}_@throws IOException If the file does not exist_@see Properties;public static ParameterTool fromPropertiesFile(InputStream inputStream) throws IOException {_		Properties props = new Properties()__		props.load(inputStream)__		return fromMap((Map) props)__	};returns,link,parameter,tool,for,the,given,input,stream,from,link,properties,file,param,input,stream,input,stream,from,the,properties,file,return,a,link,parameter,tool,throws,ioexception,if,the,file,does,not,exist,see,properties;public,static,parameter,tool,from,properties,file,input,stream,input,stream,throws,ioexception,properties,props,new,properties,props,load,input,stream,return,from,map,map,props
ParameterTool -> public int getNumberOfParameters();1441981413;Returns number of parameters in {@link ParameterTool}.;public int getNumberOfParameters() {_		return data.size()__	};returns,number,of,parameters,in,link,parameter,tool;public,int,get,number,of,parameters,return,data,size
ParameterTool -> public int getNumberOfParameters();1443123598;Returns number of parameters in {@link ParameterTool}.;public int getNumberOfParameters() {_		return data.size()__	};returns,number,of,parameters,in,link,parameter,tool;public,int,get,number,of,parameters,return,data,size
ParameterTool -> public int getNumberOfParameters();1454679829;Returns number of parameters in {@link ParameterTool}.;public int getNumberOfParameters() {_		return data.size()__	};returns,number,of,parameters,in,link,parameter,tool;public,int,get,number,of,parameters,return,data,size
ParameterTool -> public int getNumberOfParameters();1455101486;Returns number of parameters in {@link ParameterTool}.;public int getNumberOfParameters() {_		return data.size()__	};returns,number,of,parameters,in,link,parameter,tool;public,int,get,number,of,parameters,return,data,size
ParameterTool -> public int getNumberOfParameters();1462899491;Returns number of parameters in {@link ParameterTool}.;public int getNumberOfParameters() {_		return data.size()__	};returns,number,of,parameters,in,link,parameter,tool;public,int,get,number,of,parameters,return,data,size
ParameterTool -> public int getNumberOfParameters();1465462613;Returns number of parameters in {@link ParameterTool}.;public int getNumberOfParameters() {_		return data.size()__	};returns,number,of,parameters,in,link,parameter,tool;public,int,get,number,of,parameters,return,data,size
ParameterTool -> public int getNumberOfParameters();1473329066;Returns number of parameters in {@link ParameterTool}.;public int getNumberOfParameters() {_		return data.size()__	};returns,number,of,parameters,in,link,parameter,tool;public,int,get,number,of,parameters,return,data,size
ParameterTool -> public int getNumberOfParameters();1474022085;Returns number of parameters in {@link ParameterTool}.;public int getNumberOfParameters() {_		return data.size()__	};returns,number,of,parameters,in,link,parameter,tool;public,int,get,number,of,parameters,return,data,size
ParameterTool -> public int getNumberOfParameters();1474626798;Returns number of parameters in {@link ParameterTool}.;public int getNumberOfParameters() {_		return data.size()__	};returns,number,of,parameters,in,link,parameter,tool;public,int,get,number,of,parameters,return,data,size
ParameterTool -> public int getNumberOfParameters();1474626882;Returns number of parameters in {@link ParameterTool}.;public int getNumberOfParameters() {_		return data.size()__	};returns,number,of,parameters,in,link,parameter,tool;public,int,get,number,of,parameters,return,data,size
ParameterTool -> public int getNumberOfParameters();1478107885;Returns number of parameters in {@link ParameterTool}.;public int getNumberOfParameters() {_		return data.size()__	};returns,number,of,parameters,in,link,parameter,tool;public,int,get,number,of,parameters,return,data,size
ParameterTool -> public int getNumberOfParameters();1499777482;Returns number of parameters in {@link ParameterTool}.;public int getNumberOfParameters() {_		return data.size()__	};returns,number,of,parameters,in,link,parameter,tool;public,int,get,number,of,parameters,return,data,size
ParameterTool -> public int getNumberOfParameters();1500387265;Returns number of parameters in {@link ParameterTool}.;public int getNumberOfParameters() {_		return data.size()__	};returns,number,of,parameters,in,link,parameter,tool;public,int,get,number,of,parameters,return,data,size
ParameterTool -> public int getNumberOfParameters();1505831007;Returns number of parameters in {@link ParameterTool}.;public int getNumberOfParameters() {_		return data.size()__	};returns,number,of,parameters,in,link,parameter,tool;public,int,get,number,of,parameters,return,data,size
ParameterTool -> public int getNumberOfParameters();1506499511;Returns number of parameters in {@link ParameterTool}.;public int getNumberOfParameters() {_		return data.size()__	};returns,number,of,parameters,in,link,parameter,tool;public,int,get,number,of,parameters,return,data,size
ParameterTool -> public int getNumberOfParameters();1511189418;Returns number of parameters in {@link ParameterTool}.;public int getNumberOfParameters() {_		return data.size()__	};returns,number,of,parameters,in,link,parameter,tool;public,int,get,number,of,parameters,return,data,size
ParameterTool -> public int getNumberOfParameters();1511966704;Returns number of parameters in {@link ParameterTool}.;public int getNumberOfParameters() {_		return data.size()__	};returns,number,of,parameters,in,link,parameter,tool;public,int,get,number,of,parameters,return,data,size
ParameterTool -> public int getNumberOfParameters();1539096710;Returns number of parameters in {@link ParameterTool}.;public int getNumberOfParameters() {_		return data.size()__	};returns,number,of,parameters,in,link,parameter,tool;public,int,get,number,of,parameters,return,data,size
ParameterTool -> public int getNumberOfParameters();1539096710;Returns number of parameters in {@link ParameterTool}.;public int getNumberOfParameters() {_		return data.size()__	};returns,number,of,parameters,in,link,parameter,tool;public,int,get,number,of,parameters,return,data,size
ParameterTool -> public short getShort(String key, short defaultValue);1443123598;Returns the Short value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Short.;public short getShort(String key, short defaultValue) {_		addToDefaults(key, Short.toString(defaultValue))__		String value = get(key)__		if(value == null) {_			return defaultValue__		} else {_			return Short.valueOf(value)__		}_	};returns,the,short,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,short;public,short,get,short,string,key,short,default,value,add,to,defaults,key,short,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,short,value,of,value
ParameterTool -> public short getShort(String key, short defaultValue);1454679829;Returns the Short value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Short.;public short getShort(String key, short defaultValue) {_		addToDefaults(key, Short.toString(defaultValue))__		String value = get(key)__		if(value == null) {_			return defaultValue__		} else {_			return Short.valueOf(value)__		}_	};returns,the,short,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,short;public,short,get,short,string,key,short,default,value,add,to,defaults,key,short,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,short,value,of,value
ParameterTool -> public short getShort(String key, short defaultValue);1455101486;Returns the Short value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Short.;public short getShort(String key, short defaultValue) {_		addToDefaults(key, Short.toString(defaultValue))__		String value = get(key)__		if(value == null) {_			return defaultValue__		} else {_			return Short.valueOf(value)__		}_	};returns,the,short,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,short;public,short,get,short,string,key,short,default,value,add,to,defaults,key,short,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,short,value,of,value
ParameterTool -> public short getShort(String key, short defaultValue);1462899491;Returns the Short value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Short.;public short getShort(String key, short defaultValue) {_		addToDefaults(key, Short.toString(defaultValue))__		String value = get(key)__		if(value == null) {_			return defaultValue__		} else {_			return Short.valueOf(value)__		}_	};returns,the,short,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,short;public,short,get,short,string,key,short,default,value,add,to,defaults,key,short,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,short,value,of,value
ParameterTool -> public short getShort(String key, short defaultValue);1465462613;Returns the Short value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Short.;public short getShort(String key, short defaultValue) {_		addToDefaults(key, Short.toString(defaultValue))__		String value = get(key)__		if(value == null) {_			return defaultValue__		} else {_			return Short.valueOf(value)__		}_	};returns,the,short,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,short;public,short,get,short,string,key,short,default,value,add,to,defaults,key,short,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,short,value,of,value
ParameterTool -> public short getShort(String key, short defaultValue);1473329066;Returns the Short value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Short.;public short getShort(String key, short defaultValue) {_		addToDefaults(key, Short.toString(defaultValue))__		String value = get(key)__		if(value == null) {_			return defaultValue__		} else {_			return Short.valueOf(value)__		}_	};returns,the,short,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,short;public,short,get,short,string,key,short,default,value,add,to,defaults,key,short,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,short,value,of,value
ParameterTool -> public short getShort(String key, short defaultValue);1474022085;Returns the Short value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Short.;public short getShort(String key, short defaultValue) {_		addToDefaults(key, Short.toString(defaultValue))__		String value = get(key)__		if(value == null) {_			return defaultValue__		} else {_			return Short.valueOf(value)__		}_	};returns,the,short,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,short;public,short,get,short,string,key,short,default,value,add,to,defaults,key,short,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,short,value,of,value
ParameterTool -> public short getShort(String key, short defaultValue);1474626798;Returns the Short value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Short.;public short getShort(String key, short defaultValue) {_		addToDefaults(key, Short.toString(defaultValue))__		String value = get(key)__		if(value == null) {_			return defaultValue__		} else {_			return Short.valueOf(value)__		}_	};returns,the,short,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,short;public,short,get,short,string,key,short,default,value,add,to,defaults,key,short,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,short,value,of,value
ParameterTool -> public short getShort(String key, short defaultValue);1474626882;Returns the Short value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Short.;public short getShort(String key, short defaultValue) {_		addToDefaults(key, Short.toString(defaultValue))__		String value = get(key)__		if(value == null) {_			return defaultValue__		} else {_			return Short.valueOf(value)__		}_	};returns,the,short,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,short;public,short,get,short,string,key,short,default,value,add,to,defaults,key,short,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,short,value,of,value
ParameterTool -> public short getShort(String key, short defaultValue);1478107885;Returns the Short value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Short.;public short getShort(String key, short defaultValue) {_		addToDefaults(key, Short.toString(defaultValue))__		String value = get(key)__		if(value == null) {_			return defaultValue__		} else {_			return Short.valueOf(value)__		}_	};returns,the,short,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,short;public,short,get,short,string,key,short,default,value,add,to,defaults,key,short,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,short,value,of,value
ParameterTool -> public short getShort(String key, short defaultValue);1499777482;Returns the Short value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Short.;public short getShort(String key, short defaultValue) {_		addToDefaults(key, Short.toString(defaultValue))__		String value = get(key)__		if(value == null) {_			return defaultValue__		} else {_			return Short.valueOf(value)__		}_	};returns,the,short,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,short;public,short,get,short,string,key,short,default,value,add,to,defaults,key,short,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,short,value,of,value
ParameterTool -> public short getShort(String key, short defaultValue);1500387265;Returns the Short value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Short.;public short getShort(String key, short defaultValue) {_		addToDefaults(key, Short.toString(defaultValue))__		String value = get(key)__		if (value == null) {_			return defaultValue__		} else {_			return Short.valueOf(value)__		}_	};returns,the,short,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,short;public,short,get,short,string,key,short,default,value,add,to,defaults,key,short,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,short,value,of,value
ParameterTool -> public short getShort(String key, short defaultValue);1505831007;Returns the Short value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Short.;public short getShort(String key, short defaultValue) {_		addToDefaults(key, Short.toString(defaultValue))__		String value = get(key)__		if (value == null) {_			return defaultValue__		} else {_			return Short.valueOf(value)__		}_	};returns,the,short,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,short;public,short,get,short,string,key,short,default,value,add,to,defaults,key,short,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,short,value,of,value
ParameterTool -> public short getShort(String key, short defaultValue);1506499511;Returns the Short value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Short.;public short getShort(String key, short defaultValue) {_		addToDefaults(key, Short.toString(defaultValue))__		String value = get(key)__		if (value == null) {_			return defaultValue__		} else {_			return Short.valueOf(value)__		}_	};returns,the,short,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,short;public,short,get,short,string,key,short,default,value,add,to,defaults,key,short,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,short,value,of,value
ParameterTool -> public short getShort(String key, short defaultValue);1511189418;Returns the Short value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Short.;public short getShort(String key, short defaultValue) {_		addToDefaults(key, Short.toString(defaultValue))__		String value = get(key)__		if (value == null) {_			return defaultValue__		} else {_			return Short.valueOf(value)__		}_	};returns,the,short,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,short;public,short,get,short,string,key,short,default,value,add,to,defaults,key,short,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,short,value,of,value
ParameterTool -> public short getShort(String key, short defaultValue);1511966704;Returns the Short value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Short.;public short getShort(String key, short defaultValue) {_		addToDefaults(key, Short.toString(defaultValue))__		String value = get(key)__		if (value == null) {_			return defaultValue__		} else {_			return Short.valueOf(value)__		}_	};returns,the,short,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,short;public,short,get,short,string,key,short,default,value,add,to,defaults,key,short,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,short,value,of,value
ParameterTool -> public short getShort(String key, short defaultValue);1539096710;Returns the Short value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Short.;public short getShort(String key, short defaultValue) {_		addToDefaults(key, Short.toString(defaultValue))__		String value = get(key)__		if (value == null) {_			return defaultValue__		} else {_			return Short.valueOf(value)__		}_	};returns,the,short,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,short;public,short,get,short,string,key,short,default,value,add,to,defaults,key,short,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,short,value,of,value
ParameterTool -> public short getShort(String key, short defaultValue);1539096710;Returns the Short value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Short.;public short getShort(String key, short defaultValue) {_		addToDefaults(key, Short.toString(defaultValue))__		String value = get(key)__		if (value == null) {_			return defaultValue__		} else {_			return Short.valueOf(value)__		}_	};returns,the,short,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,short;public,short,get,short,string,key,short,default,value,add,to,defaults,key,short,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,short,value,of,value
ParameterTool -> public float getFloat(String key, float defaultValue);1441981413;Returns the Float value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Float.;public float getFloat(String key, float defaultValue) {_		addToDefaults(key, Float.toString(defaultValue))__		String value = get(key)__		if(value == null) {_			return defaultValue__		} else {_			return Float.valueOf(value)__		}_	};returns,the,float,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,float;public,float,get,float,string,key,float,default,value,add,to,defaults,key,float,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,float,value,of,value
ParameterTool -> public float getFloat(String key, float defaultValue);1443123598;Returns the Float value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Float.;public float getFloat(String key, float defaultValue) {_		addToDefaults(key, Float.toString(defaultValue))__		String value = get(key)__		if(value == null) {_			return defaultValue__		} else {_			return Float.valueOf(value)__		}_	};returns,the,float,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,float;public,float,get,float,string,key,float,default,value,add,to,defaults,key,float,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,float,value,of,value
ParameterTool -> public float getFloat(String key, float defaultValue);1454679829;Returns the Float value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Float.;public float getFloat(String key, float defaultValue) {_		addToDefaults(key, Float.toString(defaultValue))__		String value = get(key)__		if(value == null) {_			return defaultValue__		} else {_			return Float.valueOf(value)__		}_	};returns,the,float,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,float;public,float,get,float,string,key,float,default,value,add,to,defaults,key,float,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,float,value,of,value
ParameterTool -> public float getFloat(String key, float defaultValue);1455101486;Returns the Float value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Float.;public float getFloat(String key, float defaultValue) {_		addToDefaults(key, Float.toString(defaultValue))__		String value = get(key)__		if(value == null) {_			return defaultValue__		} else {_			return Float.valueOf(value)__		}_	};returns,the,float,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,float;public,float,get,float,string,key,float,default,value,add,to,defaults,key,float,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,float,value,of,value
ParameterTool -> public float getFloat(String key, float defaultValue);1462899491;Returns the Float value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Float.;public float getFloat(String key, float defaultValue) {_		addToDefaults(key, Float.toString(defaultValue))__		String value = get(key)__		if(value == null) {_			return defaultValue__		} else {_			return Float.valueOf(value)__		}_	};returns,the,float,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,float;public,float,get,float,string,key,float,default,value,add,to,defaults,key,float,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,float,value,of,value
ParameterTool -> public float getFloat(String key, float defaultValue);1465462613;Returns the Float value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Float.;public float getFloat(String key, float defaultValue) {_		addToDefaults(key, Float.toString(defaultValue))__		String value = get(key)__		if(value == null) {_			return defaultValue__		} else {_			return Float.valueOf(value)__		}_	};returns,the,float,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,float;public,float,get,float,string,key,float,default,value,add,to,defaults,key,float,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,float,value,of,value
ParameterTool -> public float getFloat(String key, float defaultValue);1473329066;Returns the Float value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Float.;public float getFloat(String key, float defaultValue) {_		addToDefaults(key, Float.toString(defaultValue))__		String value = get(key)__		if(value == null) {_			return defaultValue__		} else {_			return Float.valueOf(value)__		}_	};returns,the,float,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,float;public,float,get,float,string,key,float,default,value,add,to,defaults,key,float,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,float,value,of,value
ParameterTool -> public float getFloat(String key, float defaultValue);1474022085;Returns the Float value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Float.;public float getFloat(String key, float defaultValue) {_		addToDefaults(key, Float.toString(defaultValue))__		String value = get(key)__		if(value == null) {_			return defaultValue__		} else {_			return Float.valueOf(value)__		}_	};returns,the,float,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,float;public,float,get,float,string,key,float,default,value,add,to,defaults,key,float,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,float,value,of,value
ParameterTool -> public float getFloat(String key, float defaultValue);1474626798;Returns the Float value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Float.;public float getFloat(String key, float defaultValue) {_		addToDefaults(key, Float.toString(defaultValue))__		String value = get(key)__		if(value == null) {_			return defaultValue__		} else {_			return Float.valueOf(value)__		}_	};returns,the,float,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,float;public,float,get,float,string,key,float,default,value,add,to,defaults,key,float,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,float,value,of,value
ParameterTool -> public float getFloat(String key, float defaultValue);1474626882;Returns the Float value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Float.;public float getFloat(String key, float defaultValue) {_		addToDefaults(key, Float.toString(defaultValue))__		String value = get(key)__		if(value == null) {_			return defaultValue__		} else {_			return Float.valueOf(value)__		}_	};returns,the,float,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,float;public,float,get,float,string,key,float,default,value,add,to,defaults,key,float,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,float,value,of,value
ParameterTool -> public float getFloat(String key, float defaultValue);1478107885;Returns the Float value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Float.;public float getFloat(String key, float defaultValue) {_		addToDefaults(key, Float.toString(defaultValue))__		String value = get(key)__		if(value == null) {_			return defaultValue__		} else {_			return Float.valueOf(value)__		}_	};returns,the,float,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,float;public,float,get,float,string,key,float,default,value,add,to,defaults,key,float,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,float,value,of,value
ParameterTool -> public float getFloat(String key, float defaultValue);1499777482;Returns the Float value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Float.;public float getFloat(String key, float defaultValue) {_		addToDefaults(key, Float.toString(defaultValue))__		String value = get(key)__		if(value == null) {_			return defaultValue__		} else {_			return Float.valueOf(value)__		}_	};returns,the,float,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,float;public,float,get,float,string,key,float,default,value,add,to,defaults,key,float,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,float,value,of,value
ParameterTool -> public float getFloat(String key, float defaultValue);1500387265;Returns the Float value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Float.;public float getFloat(String key, float defaultValue) {_		addToDefaults(key, Float.toString(defaultValue))__		String value = get(key)__		if (value == null) {_			return defaultValue__		} else {_			return Float.valueOf(value)__		}_	};returns,the,float,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,float;public,float,get,float,string,key,float,default,value,add,to,defaults,key,float,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,float,value,of,value
ParameterTool -> public float getFloat(String key, float defaultValue);1505831007;Returns the Float value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Float.;public float getFloat(String key, float defaultValue) {_		addToDefaults(key, Float.toString(defaultValue))__		String value = get(key)__		if (value == null) {_			return defaultValue__		} else {_			return Float.valueOf(value)__		}_	};returns,the,float,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,float;public,float,get,float,string,key,float,default,value,add,to,defaults,key,float,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,float,value,of,value
ParameterTool -> public float getFloat(String key, float defaultValue);1506499511;Returns the Float value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Float.;public float getFloat(String key, float defaultValue) {_		addToDefaults(key, Float.toString(defaultValue))__		String value = get(key)__		if (value == null) {_			return defaultValue__		} else {_			return Float.valueOf(value)__		}_	};returns,the,float,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,float;public,float,get,float,string,key,float,default,value,add,to,defaults,key,float,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,float,value,of,value
ParameterTool -> public float getFloat(String key, float defaultValue);1511189418;Returns the Float value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Float.;public float getFloat(String key, float defaultValue) {_		addToDefaults(key, Float.toString(defaultValue))__		String value = get(key)__		if (value == null) {_			return defaultValue__		} else {_			return Float.valueOf(value)__		}_	};returns,the,float,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,float;public,float,get,float,string,key,float,default,value,add,to,defaults,key,float,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,float,value,of,value
ParameterTool -> public float getFloat(String key, float defaultValue);1511966704;Returns the Float value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Float.;public float getFloat(String key, float defaultValue) {_		addToDefaults(key, Float.toString(defaultValue))__		String value = get(key)__		if (value == null) {_			return defaultValue__		} else {_			return Float.valueOf(value)__		}_	};returns,the,float,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,float;public,float,get,float,string,key,float,default,value,add,to,defaults,key,float,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,float,value,of,value
ParameterTool -> public float getFloat(String key, float defaultValue);1539096710;Returns the Float value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Float.;public float getFloat(String key, float defaultValue) {_		addToDefaults(key, Float.toString(defaultValue))__		String value = get(key)__		if (value == null) {_			return defaultValue__		} else {_			return Float.valueOf(value)__		}_	};returns,the,float,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,float;public,float,get,float,string,key,float,default,value,add,to,defaults,key,float,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,float,value,of,value
ParameterTool -> public float getFloat(String key, float defaultValue);1539096710;Returns the Float value for the given key. If the key does not exists it will return the default value given._The method fails if the value is not a Float.;public float getFloat(String key, float defaultValue) {_		addToDefaults(key, Float.toString(defaultValue))__		String value = get(key)__		if (value == null) {_			return defaultValue__		} else {_			return Float.valueOf(value)__		}_	};returns,the,float,value,for,the,given,key,if,the,key,does,not,exists,it,will,return,the,default,value,given,the,method,fails,if,the,value,is,not,a,float;public,float,get,float,string,key,float,default,value,add,to,defaults,key,float,to,string,default,value,string,value,get,key,if,value,null,return,default,value,else,return,float,value,of,value
ParameterTool -> public void createPropertiesFile(String pathToFile, boolean overwrite) throws IOException;1441981413;Create a properties file with all the known parameters (call after the last get*() call)._Set the default value, if overwrite is true.__@param pathToFile Location of the default properties file._@param overwrite Boolean flag indicating whether or not to overwrite the file_@throws IOException If overwrite is not allowed and the file exists;public void createPropertiesFile(String pathToFile, boolean overwrite) throws IOException {_		File file = new File(pathToFile)__		if(file.exists()) {_			if(overwrite) {_				file.delete()__			} else {_				throw new RuntimeException("File "+pathToFile+" exists and overwriting is not allowed")__			}_		}_		Properties defaultProps = new Properties()__		defaultProps.putAll(this.defaultData)__		defaultProps.store(new FileOutputStream(file), "Default file created by Flink's ParameterUtil.createPropertiesFile()")__	};create,a,properties,file,with,all,the,known,parameters,call,after,the,last,get,call,set,the,default,value,if,overwrite,is,true,param,path,to,file,location,of,the,default,properties,file,param,overwrite,boolean,flag,indicating,whether,or,not,to,overwrite,the,file,throws,ioexception,if,overwrite,is,not,allowed,and,the,file,exists;public,void,create,properties,file,string,path,to,file,boolean,overwrite,throws,ioexception,file,file,new,file,path,to,file,if,file,exists,if,overwrite,file,delete,else,throw,new,runtime,exception,file,path,to,file,exists,and,overwriting,is,not,allowed,properties,default,props,new,properties,default,props,put,all,this,default,data,default,props,store,new,file,output,stream,file,default,file,created,by,flink,s,parameter,util,create,properties,file
ParameterTool -> public void createPropertiesFile(String pathToFile, boolean overwrite) throws IOException;1443123598;Create a properties file with all the known parameters (call after the last get*() call)._Set the default value, if overwrite is true.__@param pathToFile Location of the default properties file._@param overwrite Boolean flag indicating whether or not to overwrite the file_@throws IOException If overwrite is not allowed and the file exists;public void createPropertiesFile(String pathToFile, boolean overwrite) throws IOException {_		File file = new File(pathToFile)__		if(file.exists()) {_			if(overwrite) {_				file.delete()__			} else {_				throw new RuntimeException("File "+pathToFile+" exists and overwriting is not allowed")__			}_		}_		Properties defaultProps = new Properties()__		defaultProps.putAll(this.defaultData)__		defaultProps.store(new FileOutputStream(file), "Default file created by Flink's ParameterUtil.createPropertiesFile()")__	};create,a,properties,file,with,all,the,known,parameters,call,after,the,last,get,call,set,the,default,value,if,overwrite,is,true,param,path,to,file,location,of,the,default,properties,file,param,overwrite,boolean,flag,indicating,whether,or,not,to,overwrite,the,file,throws,ioexception,if,overwrite,is,not,allowed,and,the,file,exists;public,void,create,properties,file,string,path,to,file,boolean,overwrite,throws,ioexception,file,file,new,file,path,to,file,if,file,exists,if,overwrite,file,delete,else,throw,new,runtime,exception,file,path,to,file,exists,and,overwriting,is,not,allowed,properties,default,props,new,properties,default,props,put,all,this,default,data,default,props,store,new,file,output,stream,file,default,file,created,by,flink,s,parameter,util,create,properties,file
ParameterTool -> public void createPropertiesFile(String pathToFile, boolean overwrite) throws IOException;1454679829;Create a properties file with all the known parameters (call after the last get*() call)._Set the default value, if overwrite is true.__@param pathToFile Location of the default properties file._@param overwrite Boolean flag indicating whether or not to overwrite the file_@throws IOException If overwrite is not allowed and the file exists;public void createPropertiesFile(String pathToFile, boolean overwrite) throws IOException {_		File file = new File(pathToFile)__		if(file.exists()) {_			if(overwrite) {_				file.delete()__			} else {_				throw new RuntimeException("File "+pathToFile+" exists and overwriting is not allowed")__			}_		}_		Properties defaultProps = new Properties()__		defaultProps.putAll(this.defaultData)__		defaultProps.store(new FileOutputStream(file), "Default file created by Flink's ParameterUtil.createPropertiesFile()")__	};create,a,properties,file,with,all,the,known,parameters,call,after,the,last,get,call,set,the,default,value,if,overwrite,is,true,param,path,to,file,location,of,the,default,properties,file,param,overwrite,boolean,flag,indicating,whether,or,not,to,overwrite,the,file,throws,ioexception,if,overwrite,is,not,allowed,and,the,file,exists;public,void,create,properties,file,string,path,to,file,boolean,overwrite,throws,ioexception,file,file,new,file,path,to,file,if,file,exists,if,overwrite,file,delete,else,throw,new,runtime,exception,file,path,to,file,exists,and,overwriting,is,not,allowed,properties,default,props,new,properties,default,props,put,all,this,default,data,default,props,store,new,file,output,stream,file,default,file,created,by,flink,s,parameter,util,create,properties,file
ParameterTool -> public void createPropertiesFile(String pathToFile, boolean overwrite) throws IOException;1455101486;Create a properties file with all the known parameters (call after the last get*() call)._Set the default value, if overwrite is true.__@param pathToFile Location of the default properties file._@param overwrite Boolean flag indicating whether or not to overwrite the file_@throws IOException If overwrite is not allowed and the file exists;public void createPropertiesFile(String pathToFile, boolean overwrite) throws IOException {_		File file = new File(pathToFile)__		if(file.exists()) {_			if(overwrite) {_				file.delete()__			} else {_				throw new RuntimeException("File "+pathToFile+" exists and overwriting is not allowed")__			}_		}_		Properties defaultProps = new Properties()__		defaultProps.putAll(this.defaultData)__		defaultProps.store(new FileOutputStream(file), "Default file created by Flink's ParameterUtil.createPropertiesFile()")__	};create,a,properties,file,with,all,the,known,parameters,call,after,the,last,get,call,set,the,default,value,if,overwrite,is,true,param,path,to,file,location,of,the,default,properties,file,param,overwrite,boolean,flag,indicating,whether,or,not,to,overwrite,the,file,throws,ioexception,if,overwrite,is,not,allowed,and,the,file,exists;public,void,create,properties,file,string,path,to,file,boolean,overwrite,throws,ioexception,file,file,new,file,path,to,file,if,file,exists,if,overwrite,file,delete,else,throw,new,runtime,exception,file,path,to,file,exists,and,overwriting,is,not,allowed,properties,default,props,new,properties,default,props,put,all,this,default,data,default,props,store,new,file,output,stream,file,default,file,created,by,flink,s,parameter,util,create,properties,file
ParameterTool -> public void createPropertiesFile(String pathToFile, boolean overwrite) throws IOException;1462899491;Create a properties file with all the known parameters (call after the last get*() call)._Set the default value, if overwrite is true.__@param pathToFile Location of the default properties file._@param overwrite Boolean flag indicating whether or not to overwrite the file_@throws IOException If overwrite is not allowed and the file exists;public void createPropertiesFile(String pathToFile, boolean overwrite) throws IOException {_		File file = new File(pathToFile)__		if(file.exists()) {_			if(overwrite) {_				file.delete()__			} else {_				throw new RuntimeException("File "+pathToFile+" exists and overwriting is not allowed")__			}_		}_		Properties defaultProps = new Properties()__		defaultProps.putAll(this.defaultData)__		defaultProps.store(new FileOutputStream(file), "Default file created by Flink's ParameterUtil.createPropertiesFile()")__	};create,a,properties,file,with,all,the,known,parameters,call,after,the,last,get,call,set,the,default,value,if,overwrite,is,true,param,path,to,file,location,of,the,default,properties,file,param,overwrite,boolean,flag,indicating,whether,or,not,to,overwrite,the,file,throws,ioexception,if,overwrite,is,not,allowed,and,the,file,exists;public,void,create,properties,file,string,path,to,file,boolean,overwrite,throws,ioexception,file,file,new,file,path,to,file,if,file,exists,if,overwrite,file,delete,else,throw,new,runtime,exception,file,path,to,file,exists,and,overwriting,is,not,allowed,properties,default,props,new,properties,default,props,put,all,this,default,data,default,props,store,new,file,output,stream,file,default,file,created,by,flink,s,parameter,util,create,properties,file
ParameterTool -> public void createPropertiesFile(String pathToFile, boolean overwrite) throws IOException;1465462613;Create a properties file with all the known parameters (call after the last get*() call)._Set the default value, if overwrite is true.__@param pathToFile Location of the default properties file._@param overwrite Boolean flag indicating whether or not to overwrite the file_@throws IOException If overwrite is not allowed and the file exists;public void createPropertiesFile(String pathToFile, boolean overwrite) throws IOException {_		File file = new File(pathToFile)__		if(file.exists()) {_			if(overwrite) {_				file.delete()__			} else {_				throw new RuntimeException("File "+pathToFile+" exists and overwriting is not allowed")__			}_		}_		Properties defaultProps = new Properties()__		defaultProps.putAll(this.defaultData)__		defaultProps.store(new FileOutputStream(file), "Default file created by Flink's ParameterUtil.createPropertiesFile()")__	};create,a,properties,file,with,all,the,known,parameters,call,after,the,last,get,call,set,the,default,value,if,overwrite,is,true,param,path,to,file,location,of,the,default,properties,file,param,overwrite,boolean,flag,indicating,whether,or,not,to,overwrite,the,file,throws,ioexception,if,overwrite,is,not,allowed,and,the,file,exists;public,void,create,properties,file,string,path,to,file,boolean,overwrite,throws,ioexception,file,file,new,file,path,to,file,if,file,exists,if,overwrite,file,delete,else,throw,new,runtime,exception,file,path,to,file,exists,and,overwriting,is,not,allowed,properties,default,props,new,properties,default,props,put,all,this,default,data,default,props,store,new,file,output,stream,file,default,file,created,by,flink,s,parameter,util,create,properties,file
ParameterTool -> public void createPropertiesFile(String pathToFile, boolean overwrite) throws IOException;1473329066;Create a properties file with all the known parameters (call after the last get*() call)._Set the default value, if overwrite is true.__@param pathToFile Location of the default properties file._@param overwrite Boolean flag indicating whether or not to overwrite the file_@throws IOException If overwrite is not allowed and the file exists;public void createPropertiesFile(String pathToFile, boolean overwrite) throws IOException {_		File file = new File(pathToFile)__		if(file.exists()) {_			if(overwrite) {_				file.delete()__			} else {_				throw new RuntimeException("File "+pathToFile+" exists and overwriting is not allowed")__			}_		}_		Properties defaultProps = new Properties()__		defaultProps.putAll(this.defaultData)__		try (final OutputStream out = new FileOutputStream(file)) {_			defaultProps.store(out, "Default file created by Flink's ParameterUtil.createPropertiesFile()")__		}_	};create,a,properties,file,with,all,the,known,parameters,call,after,the,last,get,call,set,the,default,value,if,overwrite,is,true,param,path,to,file,location,of,the,default,properties,file,param,overwrite,boolean,flag,indicating,whether,or,not,to,overwrite,the,file,throws,ioexception,if,overwrite,is,not,allowed,and,the,file,exists;public,void,create,properties,file,string,path,to,file,boolean,overwrite,throws,ioexception,file,file,new,file,path,to,file,if,file,exists,if,overwrite,file,delete,else,throw,new,runtime,exception,file,path,to,file,exists,and,overwriting,is,not,allowed,properties,default,props,new,properties,default,props,put,all,this,default,data,try,final,output,stream,out,new,file,output,stream,file,default,props,store,out,default,file,created,by,flink,s,parameter,util,create,properties,file
ParameterTool -> public void createPropertiesFile(String pathToFile, boolean overwrite) throws IOException;1474022085;Create a properties file with all the known parameters (call after the last get*() call)._Set the default value, if overwrite is true.__@param pathToFile Location of the default properties file._@param overwrite Boolean flag indicating whether or not to overwrite the file_@throws IOException If overwrite is not allowed and the file exists;public void createPropertiesFile(String pathToFile, boolean overwrite) throws IOException {_		File file = new File(pathToFile)__		if(file.exists()) {_			if(overwrite) {_				file.delete()__			} else {_				throw new RuntimeException("File "+pathToFile+" exists and overwriting is not allowed")__			}_		}_		Properties defaultProps = new Properties()__		defaultProps.putAll(this.defaultData)__		try (final OutputStream out = new FileOutputStream(file)) {_			defaultProps.store(out, "Default file created by Flink's ParameterUtil.createPropertiesFile()")__		}_	};create,a,properties,file,with,all,the,known,parameters,call,after,the,last,get,call,set,the,default,value,if,overwrite,is,true,param,path,to,file,location,of,the,default,properties,file,param,overwrite,boolean,flag,indicating,whether,or,not,to,overwrite,the,file,throws,ioexception,if,overwrite,is,not,allowed,and,the,file,exists;public,void,create,properties,file,string,path,to,file,boolean,overwrite,throws,ioexception,file,file,new,file,path,to,file,if,file,exists,if,overwrite,file,delete,else,throw,new,runtime,exception,file,path,to,file,exists,and,overwriting,is,not,allowed,properties,default,props,new,properties,default,props,put,all,this,default,data,try,final,output,stream,out,new,file,output,stream,file,default,props,store,out,default,file,created,by,flink,s,parameter,util,create,properties,file
ParameterTool -> public void createPropertiesFile(String pathToFile, boolean overwrite) throws IOException;1474626798;Create a properties file with all the known parameters (call after the last get*() call)._Set the default value, if overwrite is true.__@param pathToFile Location of the default properties file._@param overwrite Boolean flag indicating whether or not to overwrite the file_@throws IOException If overwrite is not allowed and the file exists;public void createPropertiesFile(String pathToFile, boolean overwrite) throws IOException {_		File file = new File(pathToFile)__		if(file.exists()) {_			if(overwrite) {_				file.delete()__			} else {_				throw new RuntimeException("File "+pathToFile+" exists and overwriting is not allowed")__			}_		}_		Properties defaultProps = new Properties()__		defaultProps.putAll(this.defaultData)__		try (final OutputStream out = new FileOutputStream(file)) {_			defaultProps.store(out, "Default file created by Flink's ParameterUtil.createPropertiesFile()")__		}_	};create,a,properties,file,with,all,the,known,parameters,call,after,the,last,get,call,set,the,default,value,if,overwrite,is,true,param,path,to,file,location,of,the,default,properties,file,param,overwrite,boolean,flag,indicating,whether,or,not,to,overwrite,the,file,throws,ioexception,if,overwrite,is,not,allowed,and,the,file,exists;public,void,create,properties,file,string,path,to,file,boolean,overwrite,throws,ioexception,file,file,new,file,path,to,file,if,file,exists,if,overwrite,file,delete,else,throw,new,runtime,exception,file,path,to,file,exists,and,overwriting,is,not,allowed,properties,default,props,new,properties,default,props,put,all,this,default,data,try,final,output,stream,out,new,file,output,stream,file,default,props,store,out,default,file,created,by,flink,s,parameter,util,create,properties,file
ParameterTool -> public void createPropertiesFile(String pathToFile, boolean overwrite) throws IOException;1474626882;Create a properties file with all the known parameters (call after the last get*() call)._Set the default value, if overwrite is true.__@param pathToFile Location of the default properties file._@param overwrite Boolean flag indicating whether or not to overwrite the file_@throws IOException If overwrite is not allowed and the file exists;public void createPropertiesFile(String pathToFile, boolean overwrite) throws IOException {_		File file = new File(pathToFile)__		if(file.exists()) {_			if(overwrite) {_				file.delete()__			} else {_				throw new RuntimeException("File "+pathToFile+" exists and overwriting is not allowed")__			}_		}_		Properties defaultProps = new Properties()__		defaultProps.putAll(this.defaultData)__		try (final OutputStream out = new FileOutputStream(file)) {_			defaultProps.store(out, "Default file created by Flink's ParameterUtil.createPropertiesFile()")__		}_	};create,a,properties,file,with,all,the,known,parameters,call,after,the,last,get,call,set,the,default,value,if,overwrite,is,true,param,path,to,file,location,of,the,default,properties,file,param,overwrite,boolean,flag,indicating,whether,or,not,to,overwrite,the,file,throws,ioexception,if,overwrite,is,not,allowed,and,the,file,exists;public,void,create,properties,file,string,path,to,file,boolean,overwrite,throws,ioexception,file,file,new,file,path,to,file,if,file,exists,if,overwrite,file,delete,else,throw,new,runtime,exception,file,path,to,file,exists,and,overwriting,is,not,allowed,properties,default,props,new,properties,default,props,put,all,this,default,data,try,final,output,stream,out,new,file,output,stream,file,default,props,store,out,default,file,created,by,flink,s,parameter,util,create,properties,file
ParameterTool -> public void createPropertiesFile(String pathToFile, boolean overwrite) throws IOException;1478107885;Create a properties file with all the known parameters (call after the last get*() call)._Set the default value, if overwrite is true.__@param pathToFile Location of the default properties file._@param overwrite Boolean flag indicating whether or not to overwrite the file_@throws IOException If overwrite is not allowed and the file exists;public void createPropertiesFile(String pathToFile, boolean overwrite) throws IOException {_		File file = new File(pathToFile)__		if(file.exists()) {_			if(overwrite) {_				file.delete()__			} else {_				throw new RuntimeException("File "+pathToFile+" exists and overwriting is not allowed")__			}_		}_		Properties defaultProps = new Properties()__		defaultProps.putAll(this.defaultData)__		try (final OutputStream out = new FileOutputStream(file)) {_			defaultProps.store(out, "Default file created by Flink's ParameterUtil.createPropertiesFile()")__		}_	};create,a,properties,file,with,all,the,known,parameters,call,after,the,last,get,call,set,the,default,value,if,overwrite,is,true,param,path,to,file,location,of,the,default,properties,file,param,overwrite,boolean,flag,indicating,whether,or,not,to,overwrite,the,file,throws,ioexception,if,overwrite,is,not,allowed,and,the,file,exists;public,void,create,properties,file,string,path,to,file,boolean,overwrite,throws,ioexception,file,file,new,file,path,to,file,if,file,exists,if,overwrite,file,delete,else,throw,new,runtime,exception,file,path,to,file,exists,and,overwriting,is,not,allowed,properties,default,props,new,properties,default,props,put,all,this,default,data,try,final,output,stream,out,new,file,output,stream,file,default,props,store,out,default,file,created,by,flink,s,parameter,util,create,properties,file
ParameterTool -> public void createPropertiesFile(String pathToFile, boolean overwrite) throws IOException;1499777482;Create a properties file with all the known parameters (call after the last get*() call)._Set the default value, if overwrite is true.__@param pathToFile Location of the default properties file._@param overwrite Boolean flag indicating whether or not to overwrite the file_@throws IOException If overwrite is not allowed and the file exists;public void createPropertiesFile(String pathToFile, boolean overwrite) throws IOException {_		File file = new File(pathToFile)__		if(file.exists()) {_			if(overwrite) {_				file.delete()__			} else {_				throw new RuntimeException("File "+pathToFile+" exists and overwriting is not allowed")__			}_		}_		Properties defaultProps = new Properties()__		defaultProps.putAll(this.defaultData)__		try (final OutputStream out = new FileOutputStream(file)) {_			defaultProps.store(out, "Default file created by Flink's ParameterUtil.createPropertiesFile()")__		}_	};create,a,properties,file,with,all,the,known,parameters,call,after,the,last,get,call,set,the,default,value,if,overwrite,is,true,param,path,to,file,location,of,the,default,properties,file,param,overwrite,boolean,flag,indicating,whether,or,not,to,overwrite,the,file,throws,ioexception,if,overwrite,is,not,allowed,and,the,file,exists;public,void,create,properties,file,string,path,to,file,boolean,overwrite,throws,ioexception,file,file,new,file,path,to,file,if,file,exists,if,overwrite,file,delete,else,throw,new,runtime,exception,file,path,to,file,exists,and,overwriting,is,not,allowed,properties,default,props,new,properties,default,props,put,all,this,default,data,try,final,output,stream,out,new,file,output,stream,file,default,props,store,out,default,file,created,by,flink,s,parameter,util,create,properties,file
ParameterTool -> public void createPropertiesFile(String pathToFile, boolean overwrite) throws IOException;1500387265;Create a properties file with all the known parameters (call after the last get*() call)._Set the default value, if overwrite is true.__@param pathToFile Location of the default properties file._@param overwrite Boolean flag indicating whether or not to overwrite the file_@throws IOException If overwrite is not allowed and the file exists;public void createPropertiesFile(String pathToFile, boolean overwrite) throws IOException {_		File file = new File(pathToFile)__		if (file.exists()) {_			if (overwrite) {_				file.delete()__			} else {_				throw new RuntimeException("File " + pathToFile + " exists and overwriting is not allowed")__			}_		}_		Properties defaultProps = new Properties()__		defaultProps.putAll(this.defaultData)__		try (final OutputStream out = new FileOutputStream(file)) {_			defaultProps.store(out, "Default file created by Flink's ParameterUtil.createPropertiesFile()")__		}_	};create,a,properties,file,with,all,the,known,parameters,call,after,the,last,get,call,set,the,default,value,if,overwrite,is,true,param,path,to,file,location,of,the,default,properties,file,param,overwrite,boolean,flag,indicating,whether,or,not,to,overwrite,the,file,throws,ioexception,if,overwrite,is,not,allowed,and,the,file,exists;public,void,create,properties,file,string,path,to,file,boolean,overwrite,throws,ioexception,file,file,new,file,path,to,file,if,file,exists,if,overwrite,file,delete,else,throw,new,runtime,exception,file,path,to,file,exists,and,overwriting,is,not,allowed,properties,default,props,new,properties,default,props,put,all,this,default,data,try,final,output,stream,out,new,file,output,stream,file,default,props,store,out,default,file,created,by,flink,s,parameter,util,create,properties,file
ParameterTool -> public void createPropertiesFile(String pathToFile, boolean overwrite) throws IOException;1505831007;Create a properties file with all the known parameters (call after the last get*() call)._Set the default value, if overwrite is true.__@param pathToFile Location of the default properties file._@param overwrite Boolean flag indicating whether or not to overwrite the file_@throws IOException If overwrite is not allowed and the file exists;public void createPropertiesFile(String pathToFile, boolean overwrite) throws IOException {_		File file = new File(pathToFile)__		if (file.exists()) {_			if (overwrite) {_				file.delete()__			} else {_				throw new RuntimeException("File " + pathToFile + " exists and overwriting is not allowed")__			}_		}_		Properties defaultProps = new Properties()__		defaultProps.putAll(this.defaultData)__		try (final OutputStream out = new FileOutputStream(file)) {_			defaultProps.store(out, "Default file created by Flink's ParameterUtil.createPropertiesFile()")__		}_	};create,a,properties,file,with,all,the,known,parameters,call,after,the,last,get,call,set,the,default,value,if,overwrite,is,true,param,path,to,file,location,of,the,default,properties,file,param,overwrite,boolean,flag,indicating,whether,or,not,to,overwrite,the,file,throws,ioexception,if,overwrite,is,not,allowed,and,the,file,exists;public,void,create,properties,file,string,path,to,file,boolean,overwrite,throws,ioexception,file,file,new,file,path,to,file,if,file,exists,if,overwrite,file,delete,else,throw,new,runtime,exception,file,path,to,file,exists,and,overwriting,is,not,allowed,properties,default,props,new,properties,default,props,put,all,this,default,data,try,final,output,stream,out,new,file,output,stream,file,default,props,store,out,default,file,created,by,flink,s,parameter,util,create,properties,file
ParameterTool -> public void createPropertiesFile(String pathToFile, boolean overwrite) throws IOException;1506499511;Create a properties file with all the known parameters (call after the last get*() call)._Set the default value, if overwrite is true.__@param pathToFile Location of the default properties file._@param overwrite Boolean flag indicating whether or not to overwrite the file_@throws IOException If overwrite is not allowed and the file exists;public void createPropertiesFile(String pathToFile, boolean overwrite) throws IOException {_		File file = new File(pathToFile)__		if (file.exists()) {_			if (overwrite) {_				file.delete()__			} else {_				throw new RuntimeException("File " + pathToFile + " exists and overwriting is not allowed")__			}_		}_		Properties defaultProps = new Properties()__		defaultProps.putAll(this.defaultData)__		try (final OutputStream out = new FileOutputStream(file)) {_			defaultProps.store(out, "Default file created by Flink's ParameterUtil.createPropertiesFile()")__		}_	};create,a,properties,file,with,all,the,known,parameters,call,after,the,last,get,call,set,the,default,value,if,overwrite,is,true,param,path,to,file,location,of,the,default,properties,file,param,overwrite,boolean,flag,indicating,whether,or,not,to,overwrite,the,file,throws,ioexception,if,overwrite,is,not,allowed,and,the,file,exists;public,void,create,properties,file,string,path,to,file,boolean,overwrite,throws,ioexception,file,file,new,file,path,to,file,if,file,exists,if,overwrite,file,delete,else,throw,new,runtime,exception,file,path,to,file,exists,and,overwriting,is,not,allowed,properties,default,props,new,properties,default,props,put,all,this,default,data,try,final,output,stream,out,new,file,output,stream,file,default,props,store,out,default,file,created,by,flink,s,parameter,util,create,properties,file
ParameterTool -> public void createPropertiesFile(String pathToFile, boolean overwrite) throws IOException;1511189418;Create a properties file with all the known parameters (call after the last get*() call)._Set the default value, if overwrite is true.__@param pathToFile Location of the default properties file._@param overwrite Boolean flag indicating whether or not to overwrite the file_@throws IOException If overwrite is not allowed and the file exists;public void createPropertiesFile(String pathToFile, boolean overwrite) throws IOException {_		File file = new File(pathToFile)__		if (file.exists()) {_			if (overwrite) {_				file.delete()__			} else {_				throw new RuntimeException("File " + pathToFile + " exists and overwriting is not allowed")__			}_		}_		Properties defaultProps = new Properties()__		defaultProps.putAll(this.defaultData)__		try (final OutputStream out = new FileOutputStream(file)) {_			defaultProps.store(out, "Default file created by Flink's ParameterUtil.createPropertiesFile()")__		}_	};create,a,properties,file,with,all,the,known,parameters,call,after,the,last,get,call,set,the,default,value,if,overwrite,is,true,param,path,to,file,location,of,the,default,properties,file,param,overwrite,boolean,flag,indicating,whether,or,not,to,overwrite,the,file,throws,ioexception,if,overwrite,is,not,allowed,and,the,file,exists;public,void,create,properties,file,string,path,to,file,boolean,overwrite,throws,ioexception,file,file,new,file,path,to,file,if,file,exists,if,overwrite,file,delete,else,throw,new,runtime,exception,file,path,to,file,exists,and,overwriting,is,not,allowed,properties,default,props,new,properties,default,props,put,all,this,default,data,try,final,output,stream,out,new,file,output,stream,file,default,props,store,out,default,file,created,by,flink,s,parameter,util,create,properties,file
ParameterTool -> public void createPropertiesFile(String pathToFile, boolean overwrite) throws IOException;1511966704;Create a properties file with all the known parameters (call after the last get*() call)._Set the default value, if overwrite is true.__@param pathToFile Location of the default properties file._@param overwrite Boolean flag indicating whether or not to overwrite the file_@throws IOException If overwrite is not allowed and the file exists;public void createPropertiesFile(String pathToFile, boolean overwrite) throws IOException {_		File file = new File(pathToFile)__		if (file.exists()) {_			if (overwrite) {_				file.delete()__			} else {_				throw new RuntimeException("File " + pathToFile + " exists and overwriting is not allowed")__			}_		}_		Properties defaultProps = new Properties()__		defaultProps.putAll(this.defaultData)__		try (final OutputStream out = new FileOutputStream(file)) {_			defaultProps.store(out, "Default file created by Flink's ParameterUtil.createPropertiesFile()")__		}_	};create,a,properties,file,with,all,the,known,parameters,call,after,the,last,get,call,set,the,default,value,if,overwrite,is,true,param,path,to,file,location,of,the,default,properties,file,param,overwrite,boolean,flag,indicating,whether,or,not,to,overwrite,the,file,throws,ioexception,if,overwrite,is,not,allowed,and,the,file,exists;public,void,create,properties,file,string,path,to,file,boolean,overwrite,throws,ioexception,file,file,new,file,path,to,file,if,file,exists,if,overwrite,file,delete,else,throw,new,runtime,exception,file,path,to,file,exists,and,overwriting,is,not,allowed,properties,default,props,new,properties,default,props,put,all,this,default,data,try,final,output,stream,out,new,file,output,stream,file,default,props,store,out,default,file,created,by,flink,s,parameter,util,create,properties,file
ParameterTool -> public void createPropertiesFile(String pathToFile, boolean overwrite) throws IOException;1539096710;Create a properties file with all the known parameters (call after the last get*() call)._Set the default value, if overwrite is true.__@param pathToFile Location of the default properties file._@param overwrite Boolean flag indicating whether or not to overwrite the file_@throws IOException If overwrite is not allowed and the file exists;public void createPropertiesFile(String pathToFile, boolean overwrite) throws IOException {_		final File file = new File(pathToFile)__		if (file.exists()) {_			if (overwrite) {_				file.delete()__			} else {_				throw new RuntimeException("File " + pathToFile + " exists and overwriting is not allowed")__			}_		}_		final Properties defaultProps = new Properties()__		defaultProps.putAll(this.defaultData)__		try (final OutputStream out = new FileOutputStream(file)) {_			defaultProps.store(out, "Default file created by Flink's ParameterUtil.createPropertiesFile()")__		}_	};create,a,properties,file,with,all,the,known,parameters,call,after,the,last,get,call,set,the,default,value,if,overwrite,is,true,param,path,to,file,location,of,the,default,properties,file,param,overwrite,boolean,flag,indicating,whether,or,not,to,overwrite,the,file,throws,ioexception,if,overwrite,is,not,allowed,and,the,file,exists;public,void,create,properties,file,string,path,to,file,boolean,overwrite,throws,ioexception,final,file,file,new,file,path,to,file,if,file,exists,if,overwrite,file,delete,else,throw,new,runtime,exception,file,path,to,file,exists,and,overwriting,is,not,allowed,final,properties,default,props,new,properties,default,props,put,all,this,default,data,try,final,output,stream,out,new,file,output,stream,file,default,props,store,out,default,file,created,by,flink,s,parameter,util,create,properties,file
ParameterTool -> public void createPropertiesFile(String pathToFile, boolean overwrite) throws IOException;1539096710;Create a properties file with all the known parameters (call after the last get*() call)._Set the default value, if overwrite is true.__@param pathToFile Location of the default properties file._@param overwrite Boolean flag indicating whether or not to overwrite the file_@throws IOException If overwrite is not allowed and the file exists;public void createPropertiesFile(String pathToFile, boolean overwrite) throws IOException {_		final File file = new File(pathToFile)__		if (file.exists()) {_			if (overwrite) {_				file.delete()__			} else {_				throw new RuntimeException("File " + pathToFile + " exists and overwriting is not allowed")__			}_		}_		final Properties defaultProps = new Properties()__		defaultProps.putAll(this.defaultData)__		try (final OutputStream out = new FileOutputStream(file)) {_			defaultProps.store(out, "Default file created by Flink's ParameterUtil.createPropertiesFile()")__		}_	};create,a,properties,file,with,all,the,known,parameters,call,after,the,last,get,call,set,the,default,value,if,overwrite,is,true,param,path,to,file,location,of,the,default,properties,file,param,overwrite,boolean,flag,indicating,whether,or,not,to,overwrite,the,file,throws,ioexception,if,overwrite,is,not,allowed,and,the,file,exists;public,void,create,properties,file,string,path,to,file,boolean,overwrite,throws,ioexception,final,file,file,new,file,path,to,file,if,file,exists,if,overwrite,file,delete,else,throw,new,runtime,exception,file,path,to,file,exists,and,overwriting,is,not,allowed,final,properties,default,props,new,properties,default,props,put,all,this,default,data,try,final,output,stream,out,new,file,output,stream,file,default,props,store,out,default,file,created,by,flink,s,parameter,util,create,properties,file
ParameterTool -> public String get(String key);1441981413;Returns the String value for the given key._If the key does not exist it will return null.;public String get(String key) {_		addToDefaults(key, null)__		return data.get(key)__	};returns,the,string,value,for,the,given,key,if,the,key,does,not,exist,it,will,return,null;public,string,get,string,key,add,to,defaults,key,null,return,data,get,key
ParameterTool -> public String get(String key);1443123598;Returns the String value for the given key._If the key does not exist it will return null.;public String get(String key) {_		addToDefaults(key, null)__		return data.get(key)__	};returns,the,string,value,for,the,given,key,if,the,key,does,not,exist,it,will,return,null;public,string,get,string,key,add,to,defaults,key,null,return,data,get,key
ParameterTool -> public String get(String key);1454679829;Returns the String value for the given key._If the key does not exist it will return null.;public String get(String key) {_		addToDefaults(key, null)__		return data.get(key)__	};returns,the,string,value,for,the,given,key,if,the,key,does,not,exist,it,will,return,null;public,string,get,string,key,add,to,defaults,key,null,return,data,get,key
ParameterTool -> public String get(String key);1455101486;Returns the String value for the given key._If the key does not exist it will return null.;public String get(String key) {_		addToDefaults(key, null)__		return data.get(key)__	};returns,the,string,value,for,the,given,key,if,the,key,does,not,exist,it,will,return,null;public,string,get,string,key,add,to,defaults,key,null,return,data,get,key
ParameterTool -> public String get(String key);1462899491;Returns the String value for the given key._If the key does not exist it will return null.;public String get(String key) {_		addToDefaults(key, null)__		return data.get(key)__	};returns,the,string,value,for,the,given,key,if,the,key,does,not,exist,it,will,return,null;public,string,get,string,key,add,to,defaults,key,null,return,data,get,key
ParameterTool -> public String get(String key);1465462613;Returns the String value for the given key._If the key does not exist it will return null.;public String get(String key) {_		addToDefaults(key, null)__		return data.get(key)__	};returns,the,string,value,for,the,given,key,if,the,key,does,not,exist,it,will,return,null;public,string,get,string,key,add,to,defaults,key,null,return,data,get,key
ParameterTool -> public String get(String key);1473329066;Returns the String value for the given key._If the key does not exist it will return null.;public String get(String key) {_		addToDefaults(key, null)__		return data.get(key)__	};returns,the,string,value,for,the,given,key,if,the,key,does,not,exist,it,will,return,null;public,string,get,string,key,add,to,defaults,key,null,return,data,get,key
ParameterTool -> public String get(String key);1474022085;Returns the String value for the given key._If the key does not exist it will return null.;public String get(String key) {_		addToDefaults(key, null)__		return data.get(key)__	};returns,the,string,value,for,the,given,key,if,the,key,does,not,exist,it,will,return,null;public,string,get,string,key,add,to,defaults,key,null,return,data,get,key
ParameterTool -> public String get(String key);1474626798;Returns the String value for the given key._If the key does not exist it will return null.;public String get(String key) {_		addToDefaults(key, null)__		return data.get(key)__	};returns,the,string,value,for,the,given,key,if,the,key,does,not,exist,it,will,return,null;public,string,get,string,key,add,to,defaults,key,null,return,data,get,key
ParameterTool -> public String get(String key);1474626882;Returns the String value for the given key._If the key does not exist it will return null.;public String get(String key) {_		addToDefaults(key, null)__		return data.get(key)__	};returns,the,string,value,for,the,given,key,if,the,key,does,not,exist,it,will,return,null;public,string,get,string,key,add,to,defaults,key,null,return,data,get,key
ParameterTool -> public String get(String key);1478107885;Returns the String value for the given key._If the key does not exist it will return null.;public String get(String key) {_		addToDefaults(key, null)__		return data.get(key)__	};returns,the,string,value,for,the,given,key,if,the,key,does,not,exist,it,will,return,null;public,string,get,string,key,add,to,defaults,key,null,return,data,get,key
ParameterTool -> public String get(String key);1499777482;Returns the String value for the given key._If the key does not exist it will return null.;public String get(String key) {_		addToDefaults(key, null)__		unrequestedParameters.remove(key)__		return data.get(key)__	};returns,the,string,value,for,the,given,key,if,the,key,does,not,exist,it,will,return,null;public,string,get,string,key,add,to,defaults,key,null,unrequested,parameters,remove,key,return,data,get,key
ParameterTool -> public String get(String key);1500387265;Returns the String value for the given key._If the key does not exist it will return null.;public String get(String key) {_		addToDefaults(key, null)__		unrequestedParameters.remove(key)__		return data.get(key)__	};returns,the,string,value,for,the,given,key,if,the,key,does,not,exist,it,will,return,null;public,string,get,string,key,add,to,defaults,key,null,unrequested,parameters,remove,key,return,data,get,key
ParameterTool -> public String get(String key);1505831007;Returns the String value for the given key._If the key does not exist it will return null.;public String get(String key) {_		addToDefaults(key, null)__		unrequestedParameters.remove(key)__		return data.get(key)__	};returns,the,string,value,for,the,given,key,if,the,key,does,not,exist,it,will,return,null;public,string,get,string,key,add,to,defaults,key,null,unrequested,parameters,remove,key,return,data,get,key
ParameterTool -> public String get(String key);1506499511;Returns the String value for the given key._If the key does not exist it will return null.;public String get(String key) {_		addToDefaults(key, null)__		unrequestedParameters.remove(key)__		return data.get(key)__	};returns,the,string,value,for,the,given,key,if,the,key,does,not,exist,it,will,return,null;public,string,get,string,key,add,to,defaults,key,null,unrequested,parameters,remove,key,return,data,get,key
ParameterTool -> public String get(String key);1511189418;Returns the String value for the given key._If the key does not exist it will return null.;public String get(String key) {_		addToDefaults(key, null)__		unrequestedParameters.remove(key)__		return data.get(key)__	};returns,the,string,value,for,the,given,key,if,the,key,does,not,exist,it,will,return,null;public,string,get,string,key,add,to,defaults,key,null,unrequested,parameters,remove,key,return,data,get,key
ParameterTool -> public String get(String key);1511966704;Returns the String value for the given key._If the key does not exist it will return null.;public String get(String key) {_		addToDefaults(key, null)__		unrequestedParameters.remove(key)__		return data.get(key)__	};returns,the,string,value,for,the,given,key,if,the,key,does,not,exist,it,will,return,null;public,string,get,string,key,add,to,defaults,key,null,unrequested,parameters,remove,key,return,data,get,key
ParameterTool -> public String get(String key);1539096710;Returns the String value for the given key._If the key does not exist it will return null.;public String get(String key) {_		addToDefaults(key, null)__		unrequestedParameters.remove(key)__		return data.get(key)__	};returns,the,string,value,for,the,given,key,if,the,key,does,not,exist,it,will,return,null;public,string,get,string,key,add,to,defaults,key,null,unrequested,parameters,remove,key,return,data,get,key
ParameterTool -> public String get(String key);1539096710;Returns the String value for the given key._If the key does not exist it will return null.;public String get(String key) {_		addToDefaults(key, null)__		unrequestedParameters.remove(key)__		return data.get(key)__	};returns,the,string,value,for,the,given,key,if,the,key,does,not,exist,it,will,return,null;public,string,get,string,key,add,to,defaults,key,null,unrequested,parameters,remove,key,return,data,get,key
ParameterTool -> public String getRequired(String key);1441981413;Returns the String value for the given key._If the key does not exist it will throw a {@link RuntimeException}.;public String getRequired(String key) {_		addToDefaults(key, null)__		String value = get(key)__		if(value == null) {_			throw new RuntimeException("No data for required key '"+key+"'")__		}_		return value__	};returns,the,string,value,for,the,given,key,if,the,key,does,not,exist,it,will,throw,a,link,runtime,exception;public,string,get,required,string,key,add,to,defaults,key,null,string,value,get,key,if,value,null,throw,new,runtime,exception,no,data,for,required,key,key,return,value
ParameterTool -> public String getRequired(String key);1443123598;Returns the String value for the given key._If the key does not exist it will throw a {@link RuntimeException}.;public String getRequired(String key) {_		addToDefaults(key, null)__		String value = get(key)__		if(value == null) {_			throw new RuntimeException("No data for required key '"+key+"'")__		}_		return value__	};returns,the,string,value,for,the,given,key,if,the,key,does,not,exist,it,will,throw,a,link,runtime,exception;public,string,get,required,string,key,add,to,defaults,key,null,string,value,get,key,if,value,null,throw,new,runtime,exception,no,data,for,required,key,key,return,value
ParameterTool -> public String getRequired(String key);1454679829;Returns the String value for the given key._If the key does not exist it will throw a {@link RuntimeException}.;public String getRequired(String key) {_		addToDefaults(key, null)__		String value = get(key)__		if(value == null) {_			throw new RuntimeException("No data for required key '"+key+"'")__		}_		return value__	};returns,the,string,value,for,the,given,key,if,the,key,does,not,exist,it,will,throw,a,link,runtime,exception;public,string,get,required,string,key,add,to,defaults,key,null,string,value,get,key,if,value,null,throw,new,runtime,exception,no,data,for,required,key,key,return,value
ParameterTool -> public String getRequired(String key);1455101486;Returns the String value for the given key._If the key does not exist it will throw a {@link RuntimeException}.;public String getRequired(String key) {_		addToDefaults(key, null)__		String value = get(key)__		if(value == null) {_			throw new RuntimeException("No data for required key '"+key+"'")__		}_		return value__	};returns,the,string,value,for,the,given,key,if,the,key,does,not,exist,it,will,throw,a,link,runtime,exception;public,string,get,required,string,key,add,to,defaults,key,null,string,value,get,key,if,value,null,throw,new,runtime,exception,no,data,for,required,key,key,return,value
ParameterTool -> public String getRequired(String key);1462899491;Returns the String value for the given key._If the key does not exist it will throw a {@link RuntimeException}.;public String getRequired(String key) {_		addToDefaults(key, null)__		String value = get(key)__		if(value == null) {_			throw new RuntimeException("No data for required key '"+key+"'")__		}_		return value__	};returns,the,string,value,for,the,given,key,if,the,key,does,not,exist,it,will,throw,a,link,runtime,exception;public,string,get,required,string,key,add,to,defaults,key,null,string,value,get,key,if,value,null,throw,new,runtime,exception,no,data,for,required,key,key,return,value
ParameterTool -> public String getRequired(String key);1465462613;Returns the String value for the given key._If the key does not exist it will throw a {@link RuntimeException}.;public String getRequired(String key) {_		addToDefaults(key, null)__		String value = get(key)__		if(value == null) {_			throw new RuntimeException("No data for required key '"+key+"'")__		}_		return value__	};returns,the,string,value,for,the,given,key,if,the,key,does,not,exist,it,will,throw,a,link,runtime,exception;public,string,get,required,string,key,add,to,defaults,key,null,string,value,get,key,if,value,null,throw,new,runtime,exception,no,data,for,required,key,key,return,value
ParameterTool -> public String getRequired(String key);1473329066;Returns the String value for the given key._If the key does not exist it will throw a {@link RuntimeException}.;public String getRequired(String key) {_		addToDefaults(key, null)__		String value = get(key)__		if(value == null) {_			throw new RuntimeException("No data for required key '"+key+"'")__		}_		return value__	};returns,the,string,value,for,the,given,key,if,the,key,does,not,exist,it,will,throw,a,link,runtime,exception;public,string,get,required,string,key,add,to,defaults,key,null,string,value,get,key,if,value,null,throw,new,runtime,exception,no,data,for,required,key,key,return,value
ParameterTool -> public String getRequired(String key);1474022085;Returns the String value for the given key._If the key does not exist it will throw a {@link RuntimeException}.;public String getRequired(String key) {_		addToDefaults(key, null)__		String value = get(key)__		if(value == null) {_			throw new RuntimeException("No data for required key '"+key+"'")__		}_		return value__	};returns,the,string,value,for,the,given,key,if,the,key,does,not,exist,it,will,throw,a,link,runtime,exception;public,string,get,required,string,key,add,to,defaults,key,null,string,value,get,key,if,value,null,throw,new,runtime,exception,no,data,for,required,key,key,return,value
ParameterTool -> public String getRequired(String key);1474626798;Returns the String value for the given key._If the key does not exist it will throw a {@link RuntimeException}.;public String getRequired(String key) {_		addToDefaults(key, null)__		String value = get(key)__		if(value == null) {_			throw new RuntimeException("No data for required key '"+key+"'")__		}_		return value__	};returns,the,string,value,for,the,given,key,if,the,key,does,not,exist,it,will,throw,a,link,runtime,exception;public,string,get,required,string,key,add,to,defaults,key,null,string,value,get,key,if,value,null,throw,new,runtime,exception,no,data,for,required,key,key,return,value
ParameterTool -> public String getRequired(String key);1474626882;Returns the String value for the given key._If the key does not exist it will throw a {@link RuntimeException}.;public String getRequired(String key) {_		addToDefaults(key, null)__		String value = get(key)__		if(value == null) {_			throw new RuntimeException("No data for required key '"+key+"'")__		}_		return value__	};returns,the,string,value,for,the,given,key,if,the,key,does,not,exist,it,will,throw,a,link,runtime,exception;public,string,get,required,string,key,add,to,defaults,key,null,string,value,get,key,if,value,null,throw,new,runtime,exception,no,data,for,required,key,key,return,value
ParameterTool -> public String getRequired(String key);1478107885;Returns the String value for the given key._If the key does not exist it will throw a {@link RuntimeException}.;public String getRequired(String key) {_		addToDefaults(key, null)__		String value = get(key)__		if(value == null) {_			throw new RuntimeException("No data for required key '"+key+"'")__		}_		return value__	};returns,the,string,value,for,the,given,key,if,the,key,does,not,exist,it,will,throw,a,link,runtime,exception;public,string,get,required,string,key,add,to,defaults,key,null,string,value,get,key,if,value,null,throw,new,runtime,exception,no,data,for,required,key,key,return,value
ParameterTool -> public String getRequired(String key);1499777482;Returns the String value for the given key._If the key does not exist it will throw a {@link RuntimeException}.;public String getRequired(String key) {_		addToDefaults(key, null)__		String value = get(key)__		if(value == null) {_			throw new RuntimeException("No data for required key '"+key+"'")__		}_		return value__	};returns,the,string,value,for,the,given,key,if,the,key,does,not,exist,it,will,throw,a,link,runtime,exception;public,string,get,required,string,key,add,to,defaults,key,null,string,value,get,key,if,value,null,throw,new,runtime,exception,no,data,for,required,key,key,return,value
ParameterTool -> public String getRequired(String key);1500387265;Returns the String value for the given key._If the key does not exist it will throw a {@link RuntimeException}.;public String getRequired(String key) {_		addToDefaults(key, null)__		String value = get(key)__		if (value == null) {_			throw new RuntimeException("No data for required key '" + key + "'")__		}_		return value__	};returns,the,string,value,for,the,given,key,if,the,key,does,not,exist,it,will,throw,a,link,runtime,exception;public,string,get,required,string,key,add,to,defaults,key,null,string,value,get,key,if,value,null,throw,new,runtime,exception,no,data,for,required,key,key,return,value
ParameterTool -> public String getRequired(String key);1505831007;Returns the String value for the given key._If the key does not exist it will throw a {@link RuntimeException}.;public String getRequired(String key) {_		addToDefaults(key, null)__		String value = get(key)__		if (value == null) {_			throw new RuntimeException("No data for required key '" + key + "'")__		}_		return value__	};returns,the,string,value,for,the,given,key,if,the,key,does,not,exist,it,will,throw,a,link,runtime,exception;public,string,get,required,string,key,add,to,defaults,key,null,string,value,get,key,if,value,null,throw,new,runtime,exception,no,data,for,required,key,key,return,value
ParameterTool -> public String getRequired(String key);1506499511;Returns the String value for the given key._If the key does not exist it will throw a {@link RuntimeException}.;public String getRequired(String key) {_		addToDefaults(key, null)__		String value = get(key)__		if (value == null) {_			throw new RuntimeException("No data for required key '" + key + "'")__		}_		return value__	};returns,the,string,value,for,the,given,key,if,the,key,does,not,exist,it,will,throw,a,link,runtime,exception;public,string,get,required,string,key,add,to,defaults,key,null,string,value,get,key,if,value,null,throw,new,runtime,exception,no,data,for,required,key,key,return,value
ParameterTool -> public String getRequired(String key);1511189418;Returns the String value for the given key._If the key does not exist it will throw a {@link RuntimeException}.;public String getRequired(String key) {_		addToDefaults(key, null)__		String value = get(key)__		if (value == null) {_			throw new RuntimeException("No data for required key '" + key + "'")__		}_		return value__	};returns,the,string,value,for,the,given,key,if,the,key,does,not,exist,it,will,throw,a,link,runtime,exception;public,string,get,required,string,key,add,to,defaults,key,null,string,value,get,key,if,value,null,throw,new,runtime,exception,no,data,for,required,key,key,return,value
ParameterTool -> public String getRequired(String key);1511966704;Returns the String value for the given key._If the key does not exist it will throw a {@link RuntimeException}.;public String getRequired(String key) {_		addToDefaults(key, null)__		String value = get(key)__		if (value == null) {_			throw new RuntimeException("No data for required key '" + key + "'")__		}_		return value__	};returns,the,string,value,for,the,given,key,if,the,key,does,not,exist,it,will,throw,a,link,runtime,exception;public,string,get,required,string,key,add,to,defaults,key,null,string,value,get,key,if,value,null,throw,new,runtime,exception,no,data,for,required,key,key,return,value
ParameterTool -> public String getRequired(String key);1539096710;Returns the String value for the given key._If the key does not exist it will throw a {@link RuntimeException}.;public String getRequired(String key) {_		addToDefaults(key, null)__		String value = get(key)__		if (value == null) {_			throw new RuntimeException("No data for required key '" + key + "'")__		}_		return value__	};returns,the,string,value,for,the,given,key,if,the,key,does,not,exist,it,will,throw,a,link,runtime,exception;public,string,get,required,string,key,add,to,defaults,key,null,string,value,get,key,if,value,null,throw,new,runtime,exception,no,data,for,required,key,key,return,value
ParameterTool -> public String getRequired(String key);1539096710;Returns the String value for the given key._If the key does not exist it will throw a {@link RuntimeException}.;public String getRequired(String key) {_		addToDefaults(key, null)__		String value = get(key)__		if (value == null) {_			throw new RuntimeException("No data for required key '" + key + "'")__		}_		return value__	};returns,the,string,value,for,the,given,key,if,the,key,does,not,exist,it,will,throw,a,link,runtime,exception;public,string,get,required,string,key,add,to,defaults,key,null,string,value,get,key,if,value,null,throw,new,runtime,exception,no,data,for,required,key,key,return,value
