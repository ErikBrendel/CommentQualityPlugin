commented;modifiers;parameterAmount;loc;comment;code
false;public;0;7;;@Test public void testFreeMarkerTemplate() {     ResponseEntity<String> entity = this.testRestTemplate.getForEntity("/", String.class).     assertThat(entity.getStatusCode()).isEqualTo(HttpStatus.OK).     assertThat(entity.getBody()).contains("Hello, Andy"). }
false;public;0;13;;@Test public void testFreeMarkerErrorTemplate() {     HttpHeaders headers = new HttpHeaders().     headers.setAccept(Arrays.asList(MediaType.TEXT_HTML)).     HttpEntity<String> requestEntity = new HttpEntity<>(headers).     ResponseEntity<String> responseEntity = this.testRestTemplate.exchange("/does-not-exist", HttpMethod.GET, requestEntity, String.class).     assertThat(responseEntity.getStatusCode()).isEqualTo(HttpStatus.NOT_FOUND).     assertThat(responseEntity.getBody()).contains("Something went wrong: 404 Not Found"). }
