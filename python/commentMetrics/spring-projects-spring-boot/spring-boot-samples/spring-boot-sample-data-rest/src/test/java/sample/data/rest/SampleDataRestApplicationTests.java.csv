commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Before public void setUp() {     this.mvc = MockMvcBuilders.webAppContextSetup(this.context).build(). }
false;public;0;5;;@Test public void testHome() throws Exception {     this.mvc.perform(get("/api")).andExpect(status().isOk()).andExpect(content().string(containsString("hotels"))). }
false;public;0;8;;@Test public void findByNameAndCountry() throws Exception {     this.mvc.perform(get("/api/cities/search/findByNameAndCountryAllIgnoringCase?name=Melbourne&country=Australia")).andExpect(status().isOk()).andExpect(jsonPath("state", equalTo("Victoria"))).andExpect(jsonPath("name", equalTo("Melbourne"))). }
false;public;0;7;;@Test public void findByContaining() throws Exception {     this.mvc.perform(get("/api/cities/search/findByNameContainingAndCountryContainingAllIgnoringCase?name=&country=UK")).andExpect(status().isOk()).andExpect(jsonPath("_embedded.cities", hasSize(3))). }
