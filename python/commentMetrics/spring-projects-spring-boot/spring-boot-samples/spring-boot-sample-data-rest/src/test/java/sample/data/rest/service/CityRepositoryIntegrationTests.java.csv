commented;modifiers;parameterAmount;loc;comment;code
false;public;0;5;;@Test public void findsFirstPageOfCities() {     Page<City> cities = this.repository.findAll(PageRequest.of(0, 10)).     assertThat(cities.getTotalElements()).isGreaterThan(20L). }
false;public;0;7;;@Test public void findByNameAndCountry() {     City city = this.repository.findByNameAndCountryAllIgnoringCase("Melbourne", "Australia").     assertThat(city).isNotNull().     assertThat(city.getName()).isEqualTo("Melbourne"). }
false;public;0;7;;@Test public void findContaining() {     Page<City> cities = this.repository.findByNameContainingAndCountryContainingAllIgnoringCase("", "UK", PageRequest.of(0, 10)).     assertThat(cities.getTotalElements()).isEqualTo(3L). }
