commented;modifiers;parameterAmount;loc;comment;code
false;public;1;5;;@Override public void addViewControllers(ViewControllerRegistry registry) {     registry.addViewController("/login").setViewName("login").     registry.addViewController("/access").setViewName("access"). }
false;public,static;1;3;;public static void main(String[] args) {     new SpringApplicationBuilder(SampleMethodSecurityApplication.class).run(args). }
false;public;0;9;;@SuppressWarnings("deprecation") @Bean public InMemoryUserDetailsManager inMemoryUserDetailsManager() throws Exception {     return new InMemoryUserDetailsManager(User.withDefaultPasswordEncoder().username("admin").password("admin").roles("ADMIN", "USER", "ACTUATOR").build(), User.withDefaultPasswordEncoder().username("user").password("user").roles("USER").build()). }
false;protected;1;14;;@Override protected void configure(HttpSecurity http) throws Exception {     // @formatter:off     http.authorizeRequests().antMatchers("/login").permitAll().anyRequest().fullyAuthenticated().and().formLogin().loginPage("/login").failureUrl("/login?error").and().logout().logoutRequestMatcher(new AntPathRequestMatcher("/logout")).and().exceptionHandling().accessDeniedPage("/access?error"). // @formatter:on }
false;protected;1;9;;@Override protected void configure(HttpSecurity http) throws Exception {     // @formatter:off     http.requestMatcher(EndpointRequest.toAnyEndpoint()).authorizeRequests().anyRequest().authenticated().and().httpBasic(). // @formatter:on }
false;public;1;8;;@GetMapping("/") @Secured("ROLE_ADMIN") public String home(Map<String, Object> model) {     model.put("message", "Hello World").     model.put("title", "Hello Home").     model.put("date", new Date()).     return "home". }
