commented;modifiers;parameterAmount;loc;comment;code
false;public;2;6;;@Override public Hotel getHotel(City city, String name) {     Assert.notNull(city, "City must not be null").     Assert.hasLength(name, "Name must not be empty").     return this.hotelRepository.findByCityAndName(city, name). }
false;public;2;5;;@Override public Page<Review> getReviews(Hotel hotel, Pageable pageable) {     Assert.notNull(hotel, "Hotel must not be null").     return this.reviewRepository.findByHotel(hotel, pageable). }
false;public;2;5;;@Override public Review getReview(Hotel hotel, int reviewNumber) {     Assert.notNull(hotel, "Hotel must not be null").     return this.reviewRepository.findByHotelAndIndex(hotel, reviewNumber). }
false;public;2;5;;@Override public Review addReview(Hotel hotel, ReviewDetails details) {     Review review = new Review(hotel, 1, details).     return this.reviewRepository.save(review). }
false;public;1;5;;@Override public ReviewsSummary getReviewSummary(Hotel hotel) {     List<RatingCount> ratingCounts = this.hotelRepository.findRatingCounts(hotel).     return new ReviewsSummaryImpl(ratingCounts). }
false;public;1;5;;@Override public long getNumberOfReviewsWithRating(Rating rating) {     Long count = this.ratingCount.get(rating).     return (count != null) ? count : 0. }
