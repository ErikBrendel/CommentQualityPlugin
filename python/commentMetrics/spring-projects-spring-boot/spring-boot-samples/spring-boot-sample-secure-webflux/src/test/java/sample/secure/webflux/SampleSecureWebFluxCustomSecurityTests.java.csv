commented;modifiers;parameterAmount;loc;comment;code
false;public;0;5;;@Test public void userDefinedMappingsSecure() {     this.webClient.get().uri("/").accept(MediaType.APPLICATION_JSON).exchange().expectStatus().isEqualTo(HttpStatus.UNAUTHORIZED). }
false;public;0;7;;@Test public void healthAndInfoDoNotRequireAuthentication() {     this.webClient.get().uri("/actuator/health").accept(MediaType.APPLICATION_JSON).exchange().expectStatus().isOk().     this.webClient.get().uri("/actuator/info").accept(MediaType.APPLICATION_JSON).exchange().expectStatus().isOk(). }
false;public;0;6;;@Test public void actuatorsSecuredByRole() {     this.webClient.get().uri("/actuator/env").accept(MediaType.APPLICATION_JSON).header("Authorization", "basic " + getBasicAuth()).exchange().expectStatus().isForbidden(). }
false;public;0;6;;@Test public void actuatorsAccessibleOnCorrectLogin() {     this.webClient.get().uri("/actuator/env").accept(MediaType.APPLICATION_JSON).header("Authorization", "basic " + getBasicAuthForAdmin()).exchange().expectStatus().isOk(). }
false;public;0;6;;@Test public void actuatorExcludedFromEndpointRequestMatcher() {     this.webClient.get().uri("/actuator/mappings").accept(MediaType.APPLICATION_JSON).header("Authorization", "basic " + getBasicAuth()).exchange().expectStatus().isOk(). }
false;public;0;5;;@Test public void staticResourceShouldBeAccessible() {     this.webClient.get().uri("/css/bootstrap.min.css").accept(MediaType.APPLICATION_JSON).exchange().expectStatus().isOk(). }
false;public;0;8;;@Test public void actuatorLinksIsSecure() {     this.webClient.get().uri("/actuator").accept(MediaType.APPLICATION_JSON).exchange().expectStatus().isUnauthorized().     this.webClient.get().uri("/actuator").accept(MediaType.APPLICATION_JSON).header("Authorization", "basic " + getBasicAuthForAdmin()).exchange().expectStatus().isOk(). }
false;private;0;3;;private String getBasicAuth() {     return new String(Base64.getEncoder().encode(("user:password").getBytes())). }
false;private;0;3;;private String getBasicAuthForAdmin() {     return new String(Base64.getEncoder().encode(("admin:admin").getBytes())). }
false;public;0;9;;@SuppressWarnings("deprecation") @Bean public MapReactiveUserDetailsService userDetailsService() {     return new MapReactiveUserDetailsService(User.withDefaultPasswordEncoder().username("user").password("password").authorities("ROLE_USER").build(), User.withDefaultPasswordEncoder().username("admin").password("admin").authorities("ROLE_ACTUATOR", "ROLE_USER").build()). }
false;public;1;11;;@Bean public SecurityWebFilterChain springSecurityFilterChain(ServerHttpSecurity http) {     return http.authorizeExchange().matchers(EndpointRequest.to("health", "info")).permitAll().matchers(EndpointRequest.toAnyEndpoint().excluding(MappingsEndpoint.class)).hasRole("ACTUATOR").matchers(PathRequest.toStaticResources().atCommonLocations()).permitAll().pathMatchers("/login").permitAll().anyExchange().authenticated().and().httpBasic().and().build(). }
