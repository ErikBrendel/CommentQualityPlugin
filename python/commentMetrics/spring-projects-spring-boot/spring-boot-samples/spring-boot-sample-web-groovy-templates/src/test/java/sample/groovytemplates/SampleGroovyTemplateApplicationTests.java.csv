commented;modifiers;parameterAmount;loc;comment;code
false;public;0;7;;@Test public void testHome() {     ResponseEntity<String> entity = this.restTemplate.getForEntity("/", String.class).     assertThat(entity.getStatusCode()).isEqualTo(HttpStatus.OK).     assertThat(entity.getBody()).contains("<title>Messages").     assertThat(entity.getBody()).doesNotContain("layout:fragment"). }
false;public;0;8;;@Test public void testCreate() {     MultiValueMap<String, String> map = new LinkedMultiValueMap<>().     map.set("text", "FOO text").     map.set("summary", "FOO").     URI location = this.restTemplate.postForLocation("/", map).     assertThat(location.toString()).contains("localhost:" + this.port). }
false;public;0;7;;@Test public void testCss() {     ResponseEntity<String> entity = this.restTemplate.getForEntity("/css/bootstrap.min.css", String.class).     assertThat(entity.getStatusCode()).isEqualTo(HttpStatus.OK).     assertThat(entity.getBody()).contains("body"). }
