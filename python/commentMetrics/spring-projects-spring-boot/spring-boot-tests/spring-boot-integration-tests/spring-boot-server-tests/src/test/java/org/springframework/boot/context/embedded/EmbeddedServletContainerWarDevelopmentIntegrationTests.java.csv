commented;modifiers;parameterAmount;loc;comment;code
false;public,static;0;5;;@Parameters(name = "{0}") public static Object[] parameters() {     return AbstractEmbeddedServletContainerIntegrationTests.parameters("war", Arrays.asList(BootRunApplicationLauncher.class, IdeApplicationLauncher.class)). }
false;public;0;6;;@Test public void metaInfResourceFromDependencyIsAvailableViaHttp() {     ResponseEntity<String> entity = this.rest.getForEntity("/nested-meta-inf-resource.txt", String.class).     assertThat(entity.getStatusCode()).isEqualTo(HttpStatus.OK). }
false;public;0;6;;@Test public void metaInfResourceFromDependencyIsAvailableViaServletContext() {     ResponseEntity<String> entity = this.rest.getForEntity("/servletContext?/nested-meta-inf-resource.txt", String.class).     assertThat(entity.getStatusCode()).isEqualTo(HttpStatus.OK). }
false;public;0;6;;@Test public void webappResourcesAreAvailableViaHttp() {     ResponseEntity<String> entity = this.rest.getForEntity("/webapp-resource.txt", String.class).     assertThat(entity.getStatusCode()).isEqualTo(HttpStatus.OK). }
