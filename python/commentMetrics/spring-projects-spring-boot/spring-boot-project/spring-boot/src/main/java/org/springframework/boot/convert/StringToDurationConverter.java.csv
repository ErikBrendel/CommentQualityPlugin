commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public Set<ConvertiblePair> getConvertibleTypes() {     return Collections.singleton(new ConvertiblePair(String.class, Duration.class)). }
false;public;3;9;;@Override public Object convert(Object source, TypeDescriptor sourceType, TypeDescriptor targetType) {     if (ObjectUtils.isEmpty(source)) {         return null.     }     return convert(source.toString(), getStyle(targetType), getDurationUnit(targetType)). }
false;private;1;4;;private DurationStyle getStyle(TypeDescriptor targetType) {     DurationFormat annotation = targetType.getAnnotation(DurationFormat.class).     return (annotation != null) ? annotation.value() : null. }
false;private;1;4;;private ChronoUnit getDurationUnit(TypeDescriptor targetType) {     DurationUnit annotation = targetType.getAnnotation(DurationUnit.class).     return (annotation != null) ? annotation.value() : null. }
false;private;3;4;;private Duration convert(String source, DurationStyle style, ChronoUnit unit) {     style = (style != null) ? style : DurationStyle.detect(source).     return style.parse(source, unit). }
