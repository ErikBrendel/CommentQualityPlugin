# id;timestamp;commentText;codeText;commentWords;codeWords
ApplicationConversionService -> public static void configure(FormatterRegistry registry);1519363596;Configure the given {@link FormatterRegistry} with formatters and converts_appropriate for most Spring Boot applications._@param registry the registry of converters to add to (must also be castable to_ConversionService, e.g. being a {@link ConfigurableConversionService})_@throws ClassCastException if the given ConverterRegistry could not be cast to a_ConversionService;public static void configure(FormatterRegistry registry) {_		DefaultConversionService.addDefaultConverters(registry)__		DefaultFormattingConversionService.addDefaultFormatters(registry)__		addApplicationFormatters(registry)__		addApplicationConverters(registry)__	};configure,the,given,link,formatter,registry,with,formatters,and,converts,appropriate,for,most,spring,boot,applications,param,registry,the,registry,of,converters,to,add,to,must,also,be,castable,to,conversion,service,e,g,being,a,link,configurable,conversion,service,throws,class,cast,exception,if,the,given,converter,registry,could,not,be,cast,to,a,conversion,service;public,static,void,configure,formatter,registry,registry,default,conversion,service,add,default,converters,registry,default,formatting,conversion,service,add,default,formatters,registry,add,application,formatters,registry,add,application,converters,registry
ApplicationConversionService -> public static void configure(FormatterRegistry registry);1524814428;Configure the given {@link FormatterRegistry} with formatters and converters_appropriate for most Spring Boot applications._@param registry the registry of converters to add to (must also be castable to_ConversionService, e.g. being a {@link ConfigurableConversionService})_@throws ClassCastException if the given FormatterRegistry could not be cast to a_ConversionService;public static void configure(FormatterRegistry registry) {_		DefaultConversionService.addDefaultConverters(registry)__		DefaultFormattingConversionService.addDefaultFormatters(registry)__		addApplicationFormatters(registry)__		addApplicationConverters(registry)__	};configure,the,given,link,formatter,registry,with,formatters,and,converters,appropriate,for,most,spring,boot,applications,param,registry,the,registry,of,converters,to,add,to,must,also,be,castable,to,conversion,service,e,g,being,a,link,configurable,conversion,service,throws,class,cast,exception,if,the,given,formatter,registry,could,not,be,cast,to,a,conversion,service;public,static,void,configure,formatter,registry,registry,default,conversion,service,add,default,converters,registry,default,formatting,conversion,service,add,default,formatters,registry,add,application,formatters,registry,add,application,converters,registry
ApplicationConversionService -> public static void configure(FormatterRegistry registry);1534167803;Configure the given {@link FormatterRegistry} with formatters and converters_appropriate for most Spring Boot applications._@param registry the registry of converters to add to (must also be castable to_ConversionService, e.g. being a {@link ConfigurableConversionService})_@throws ClassCastException if the given FormatterRegistry could not be cast to a_ConversionService;public static void configure(FormatterRegistry registry) {_		DefaultConversionService.addDefaultConverters(registry)__		DefaultFormattingConversionService.addDefaultFormatters(registry)__		addApplicationFormatters(registry)__		addApplicationConverters(registry)__	};configure,the,given,link,formatter,registry,with,formatters,and,converters,appropriate,for,most,spring,boot,applications,param,registry,the,registry,of,converters,to,add,to,must,also,be,castable,to,conversion,service,e,g,being,a,link,configurable,conversion,service,throws,class,cast,exception,if,the,given,formatter,registry,could,not,be,cast,to,a,conversion,service;public,static,void,configure,formatter,registry,registry,default,conversion,service,add,default,converters,registry,default,formatting,conversion,service,add,default,formatters,registry,add,application,formatters,registry,add,application,converters,registry
ApplicationConversionService -> public static void configure(FormatterRegistry registry);1536051862;Configure the given {@link FormatterRegistry} with formatters and converters_appropriate for most Spring Boot applications._@param registry the registry of converters to add to (must also be castable to_ConversionService, e.g. being a {@link ConfigurableConversionService})_@throws ClassCastException if the given FormatterRegistry could not be cast to a_ConversionService;public static void configure(FormatterRegistry registry) {_		DefaultConversionService.addDefaultConverters(registry)__		DefaultFormattingConversionService.addDefaultFormatters(registry)__		addApplicationFormatters(registry)__		addApplicationConverters(registry)__	};configure,the,given,link,formatter,registry,with,formatters,and,converters,appropriate,for,most,spring,boot,applications,param,registry,the,registry,of,converters,to,add,to,must,also,be,castable,to,conversion,service,e,g,being,a,link,configurable,conversion,service,throws,class,cast,exception,if,the,given,formatter,registry,could,not,be,cast,to,a,conversion,service;public,static,void,configure,formatter,registry,registry,default,conversion,service,add,default,converters,registry,default,formatting,conversion,service,add,default,formatters,registry,add,application,formatters,registry,add,application,converters,registry
ApplicationConversionService -> public static void configure(FormatterRegistry registry);1536701067;Configure the given {@link FormatterRegistry} with formatters and converters_appropriate for most Spring Boot applications._@param registry the registry of converters to add to (must also be castable to_ConversionService, e.g. being a {@link ConfigurableConversionService})_@throws ClassCastException if the given FormatterRegistry could not be cast to a_ConversionService;public static void configure(FormatterRegistry registry) {_		DefaultConversionService.addDefaultConverters(registry)__		DefaultFormattingConversionService.addDefaultFormatters(registry)__		addApplicationFormatters(registry)__		addApplicationConverters(registry)__	};configure,the,given,link,formatter,registry,with,formatters,and,converters,appropriate,for,most,spring,boot,applications,param,registry,the,registry,of,converters,to,add,to,must,also,be,castable,to,conversion,service,e,g,being,a,link,configurable,conversion,service,throws,class,cast,exception,if,the,given,formatter,registry,could,not,be,cast,to,a,conversion,service;public,static,void,configure,formatter,registry,registry,default,conversion,service,add,default,converters,registry,default,formatting,conversion,service,add,default,formatters,registry,add,application,formatters,registry,add,application,converters,registry
ApplicationConversionService -> public static void configure(FormatterRegistry registry);1537429892;Configure the given {@link FormatterRegistry} with formatters and converters_appropriate for most Spring Boot applications._@param registry the registry of converters to add to (must also be castable to_ConversionService, e.g. being a {@link ConfigurableConversionService})_@throws ClassCastException if the given FormatterRegistry could not be cast to a_ConversionService;public static void configure(FormatterRegistry registry) {_		DefaultConversionService.addDefaultConverters(registry)__		DefaultFormattingConversionService.addDefaultFormatters(registry)__		addApplicationFormatters(registry)__		addApplicationConverters(registry)__	};configure,the,given,link,formatter,registry,with,formatters,and,converters,appropriate,for,most,spring,boot,applications,param,registry,the,registry,of,converters,to,add,to,must,also,be,castable,to,conversion,service,e,g,being,a,link,configurable,conversion,service,throws,class,cast,exception,if,the,given,formatter,registry,could,not,be,cast,to,a,conversion,service;public,static,void,configure,formatter,registry,registry,default,conversion,service,add,default,converters,registry,default,formatting,conversion,service,add,default,formatters,registry,add,application,formatters,registry,add,application,converters,registry
ApplicationConversionService -> public static void configure(FormatterRegistry registry);1540419762;Configure the given {@link FormatterRegistry} with formatters and converters_appropriate for most Spring Boot applications._@param registry the registry of converters to add to (must also be castable to_ConversionService, e.g. being a {@link ConfigurableConversionService})_@throws ClassCastException if the given FormatterRegistry could not be cast to a_ConversionService;public static void configure(FormatterRegistry registry) {_		DefaultConversionService.addDefaultConverters(registry)__		DefaultFormattingConversionService.addDefaultFormatters(registry)__		addApplicationFormatters(registry)__		addApplicationConverters(registry)__	};configure,the,given,link,formatter,registry,with,formatters,and,converters,appropriate,for,most,spring,boot,applications,param,registry,the,registry,of,converters,to,add,to,must,also,be,castable,to,conversion,service,e,g,being,a,link,configurable,conversion,service,throws,class,cast,exception,if,the,given,formatter,registry,could,not,be,cast,to,a,conversion,service;public,static,void,configure,formatter,registry,registry,default,conversion,service,add,default,converters,registry,default,formatting,conversion,service,add,default,formatters,registry,add,application,formatters,registry,add,application,converters,registry
ApplicationConversionService -> public static void addApplicationFormatters(FormatterRegistry registry);1519363596;Add formatters useful for most Spring Boot applications._@param registry the service to register default formatters with;public static void addApplicationFormatters(FormatterRegistry registry) {_		registry.addFormatter(new CharArrayFormatter())__		registry.addFormatter(new InetAddressFormatter())__		registry.addFormatter(new IsoOffsetFormatter())__	};add,formatters,useful,for,most,spring,boot,applications,param,registry,the,service,to,register,default,formatters,with;public,static,void,add,application,formatters,formatter,registry,registry,registry,add,formatter,new,char,array,formatter,registry,add,formatter,new,inet,address,formatter,registry,add,formatter,new,iso,offset,formatter
ApplicationConversionService -> public static void addApplicationFormatters(FormatterRegistry registry);1524814428;Add formatters useful for most Spring Boot applications._@param registry the service to register default formatters with;public static void addApplicationFormatters(FormatterRegistry registry) {_		registry.addFormatter(new CharArrayFormatter())__		registry.addFormatter(new InetAddressFormatter())__		registry.addFormatter(new IsoOffsetFormatter())__	};add,formatters,useful,for,most,spring,boot,applications,param,registry,the,service,to,register,default,formatters,with;public,static,void,add,application,formatters,formatter,registry,registry,registry,add,formatter,new,char,array,formatter,registry,add,formatter,new,inet,address,formatter,registry,add,formatter,new,iso,offset,formatter
ApplicationConversionService -> public static void addApplicationFormatters(FormatterRegistry registry);1534167803;Add formatters useful for most Spring Boot applications._@param registry the service to register default formatters with;public static void addApplicationFormatters(FormatterRegistry registry) {_		registry.addFormatter(new CharArrayFormatter())__		registry.addFormatter(new InetAddressFormatter())__		registry.addFormatter(new IsoOffsetFormatter())__	};add,formatters,useful,for,most,spring,boot,applications,param,registry,the,service,to,register,default,formatters,with;public,static,void,add,application,formatters,formatter,registry,registry,registry,add,formatter,new,char,array,formatter,registry,add,formatter,new,inet,address,formatter,registry,add,formatter,new,iso,offset,formatter
ApplicationConversionService -> public static void addApplicationFormatters(FormatterRegistry registry);1536051862;Add formatters useful for most Spring Boot applications._@param registry the service to register default formatters with;public static void addApplicationFormatters(FormatterRegistry registry) {_		registry.addFormatter(new CharArrayFormatter())__		registry.addFormatter(new InetAddressFormatter())__		registry.addFormatter(new IsoOffsetFormatter())__	};add,formatters,useful,for,most,spring,boot,applications,param,registry,the,service,to,register,default,formatters,with;public,static,void,add,application,formatters,formatter,registry,registry,registry,add,formatter,new,char,array,formatter,registry,add,formatter,new,inet,address,formatter,registry,add,formatter,new,iso,offset,formatter
ApplicationConversionService -> public static void addApplicationFormatters(FormatterRegistry registry);1536701067;Add formatters useful for most Spring Boot applications._@param registry the service to register default formatters with;public static void addApplicationFormatters(FormatterRegistry registry) {_		registry.addFormatter(new CharArrayFormatter())__		registry.addFormatter(new InetAddressFormatter())__		registry.addFormatter(new IsoOffsetFormatter())__	};add,formatters,useful,for,most,spring,boot,applications,param,registry,the,service,to,register,default,formatters,with;public,static,void,add,application,formatters,formatter,registry,registry,registry,add,formatter,new,char,array,formatter,registry,add,formatter,new,inet,address,formatter,registry,add,formatter,new,iso,offset,formatter
ApplicationConversionService -> public static void addApplicationFormatters(FormatterRegistry registry);1537429892;Add formatters useful for most Spring Boot applications._@param registry the service to register default formatters with;public static void addApplicationFormatters(FormatterRegistry registry) {_		registry.addFormatter(new CharArrayFormatter())__		registry.addFormatter(new InetAddressFormatter())__		registry.addFormatter(new IsoOffsetFormatter())__	};add,formatters,useful,for,most,spring,boot,applications,param,registry,the,service,to,register,default,formatters,with;public,static,void,add,application,formatters,formatter,registry,registry,registry,add,formatter,new,char,array,formatter,registry,add,formatter,new,inet,address,formatter,registry,add,formatter,new,iso,offset,formatter
ApplicationConversionService -> public static void addApplicationFormatters(FormatterRegistry registry);1540419762;Add formatters useful for most Spring Boot applications._@param registry the service to register default formatters with;public static void addApplicationFormatters(FormatterRegistry registry) {_		registry.addFormatter(new CharArrayFormatter())__		registry.addFormatter(new InetAddressFormatter())__		registry.addFormatter(new IsoOffsetFormatter())__	};add,formatters,useful,for,most,spring,boot,applications,param,registry,the,service,to,register,default,formatters,with;public,static,void,add,application,formatters,formatter,registry,registry,registry,add,formatter,new,char,array,formatter,registry,add,formatter,new,inet,address,formatter,registry,add,formatter,new,iso,offset,formatter
ApplicationConversionService -> public static void addApplicationConverters(ConverterRegistry registry);1519363596;Add converters useful for most Spring Boot applications._{@link DefaultConversionService#addDefaultConverters(ConverterRegistry)}_@param registry the registry of converters to add to (must also be castable to_ConversionService, e.g. being a {@link ConfigurableConversionService})_@throws ClassCastException if the given ConverterRegistry could not be cast to a_ConversionService;public static void addApplicationConverters(ConverterRegistry registry) {_		addDelimitedStringConverters(registry)__		registry.addConverter(new StringToDurationConverter())__		registry.addConverter(new DurationToStringConverter())__		registry.addConverter(new NumberToDurationConverter())__		registry.addConverter(new DurationToNumberConverter())__		registry.addConverterFactory(new StringToEnumIgnoringCaseConverterFactory())__	};add,converters,useful,for,most,spring,boot,applications,link,default,conversion,service,add,default,converters,converter,registry,param,registry,the,registry,of,converters,to,add,to,must,also,be,castable,to,conversion,service,e,g,being,a,link,configurable,conversion,service,throws,class,cast,exception,if,the,given,converter,registry,could,not,be,cast,to,a,conversion,service;public,static,void,add,application,converters,converter,registry,registry,add,delimited,string,converters,registry,registry,add,converter,new,string,to,duration,converter,registry,add,converter,new,duration,to,string,converter,registry,add,converter,new,number,to,duration,converter,registry,add,converter,new,duration,to,number,converter,registry,add,converter,factory,new,string,to,enum,ignoring,case,converter,factory
ApplicationConversionService -> public static void addApplicationConverters(ConverterRegistry registry);1524814428;Add converters useful for most Spring Boot applications._@param registry the registry of converters to add to (must also be castable to_ConversionService, e.g. being a {@link ConfigurableConversionService})_@throws ClassCastException if the given ConverterRegistry could not be cast to a_ConversionService;public static void addApplicationConverters(ConverterRegistry registry) {_		addDelimitedStringConverters(registry)__		registry.addConverter(new StringToDurationConverter())__		registry.addConverter(new DurationToStringConverter())__		registry.addConverter(new NumberToDurationConverter())__		registry.addConverter(new DurationToNumberConverter())__		registry.addConverterFactory(new StringToEnumIgnoringCaseConverterFactory())__	};add,converters,useful,for,most,spring,boot,applications,param,registry,the,registry,of,converters,to,add,to,must,also,be,castable,to,conversion,service,e,g,being,a,link,configurable,conversion,service,throws,class,cast,exception,if,the,given,converter,registry,could,not,be,cast,to,a,conversion,service;public,static,void,add,application,converters,converter,registry,registry,add,delimited,string,converters,registry,registry,add,converter,new,string,to,duration,converter,registry,add,converter,new,duration,to,string,converter,registry,add,converter,new,number,to,duration,converter,registry,add,converter,new,duration,to,number,converter,registry,add,converter,factory,new,string,to,enum,ignoring,case,converter,factory
ApplicationConversionService -> public static void addApplicationConverters(ConverterRegistry registry);1534167803;Add converters useful for most Spring Boot applications._@param registry the registry of converters to add to (must also be castable to_ConversionService, e.g. being a {@link ConfigurableConversionService})_@throws ClassCastException if the given ConverterRegistry could not be cast to a_ConversionService;public static void addApplicationConverters(ConverterRegistry registry) {_		addDelimitedStringConverters(registry)__		registry.addConverter(new StringToDurationConverter())__		registry.addConverter(new DurationToStringConverter())__		registry.addConverter(new NumberToDurationConverter())__		registry.addConverter(new DurationToNumberConverter())__		registry.addConverter(new StringToDataSizeConverter())__		registry.addConverterFactory(new StringToEnumIgnoringCaseConverterFactory())__	};add,converters,useful,for,most,spring,boot,applications,param,registry,the,registry,of,converters,to,add,to,must,also,be,castable,to,conversion,service,e,g,being,a,link,configurable,conversion,service,throws,class,cast,exception,if,the,given,converter,registry,could,not,be,cast,to,a,conversion,service;public,static,void,add,application,converters,converter,registry,registry,add,delimited,string,converters,registry,registry,add,converter,new,string,to,duration,converter,registry,add,converter,new,duration,to,string,converter,registry,add,converter,new,number,to,duration,converter,registry,add,converter,new,duration,to,number,converter,registry,add,converter,new,string,to,data,size,converter,registry,add,converter,factory,new,string,to,enum,ignoring,case,converter,factory
ApplicationConversionService -> public static void addApplicationConverters(ConverterRegistry registry);1536051862;Add converters useful for most Spring Boot applications._@param registry the registry of converters to add to (must also be castable to_ConversionService, e.g. being a {@link ConfigurableConversionService})_@throws ClassCastException if the given ConverterRegistry could not be cast to a_ConversionService;public static void addApplicationConverters(ConverterRegistry registry) {_		addDelimitedStringConverters(registry)__		registry.addConverter(new StringToDurationConverter())__		registry.addConverter(new DurationToStringConverter())__		registry.addConverter(new NumberToDurationConverter())__		registry.addConverter(new DurationToNumberConverter())__		registry.addConverter(new StringToDataSizeConverter())__		registry.addConverter(new NumberToDataSizeConverter())__		registry.addConverterFactory(new StringToEnumIgnoringCaseConverterFactory())__	};add,converters,useful,for,most,spring,boot,applications,param,registry,the,registry,of,converters,to,add,to,must,also,be,castable,to,conversion,service,e,g,being,a,link,configurable,conversion,service,throws,class,cast,exception,if,the,given,converter,registry,could,not,be,cast,to,a,conversion,service;public,static,void,add,application,converters,converter,registry,registry,add,delimited,string,converters,registry,registry,add,converter,new,string,to,duration,converter,registry,add,converter,new,duration,to,string,converter,registry,add,converter,new,number,to,duration,converter,registry,add,converter,new,duration,to,number,converter,registry,add,converter,new,string,to,data,size,converter,registry,add,converter,new,number,to,data,size,converter,registry,add,converter,factory,new,string,to,enum,ignoring,case,converter,factory
ApplicationConversionService -> public static void addApplicationConverters(ConverterRegistry registry);1536701067;Add converters useful for most Spring Boot applications._@param registry the registry of converters to add to (must also be castable to_ConversionService, e.g. being a {@link ConfigurableConversionService})_@throws ClassCastException if the given ConverterRegistry could not be cast to a_ConversionService;public static void addApplicationConverters(ConverterRegistry registry) {_		addDelimitedStringConverters(registry)__		registry.addConverter(new StringToDurationConverter())__		registry.addConverter(new DurationToStringConverter())__		registry.addConverter(new NumberToDurationConverter())__		registry.addConverter(new DurationToNumberConverter())__		registry.addConverter(new StringToDataSizeConverter())__		registry.addConverter(new NumberToDataSizeConverter())__		registry.addConverterFactory(new StringToEnumIgnoringCaseConverterFactory())__	};add,converters,useful,for,most,spring,boot,applications,param,registry,the,registry,of,converters,to,add,to,must,also,be,castable,to,conversion,service,e,g,being,a,link,configurable,conversion,service,throws,class,cast,exception,if,the,given,converter,registry,could,not,be,cast,to,a,conversion,service;public,static,void,add,application,converters,converter,registry,registry,add,delimited,string,converters,registry,registry,add,converter,new,string,to,duration,converter,registry,add,converter,new,duration,to,string,converter,registry,add,converter,new,number,to,duration,converter,registry,add,converter,new,duration,to,number,converter,registry,add,converter,new,string,to,data,size,converter,registry,add,converter,new,number,to,data,size,converter,registry,add,converter,factory,new,string,to,enum,ignoring,case,converter,factory
ApplicationConversionService -> public static void addApplicationConverters(ConverterRegistry registry);1537429892;Add converters useful for most Spring Boot applications._@param registry the registry of converters to add to (must also be castable to_ConversionService, e.g. being a {@link ConfigurableConversionService})_@throws ClassCastException if the given ConverterRegistry could not be cast to a_ConversionService;public static void addApplicationConverters(ConverterRegistry registry) {_		addDelimitedStringConverters(registry)__		registry.addConverter(new StringToDurationConverter())__		registry.addConverter(new DurationToStringConverter())__		registry.addConverter(new NumberToDurationConverter())__		registry.addConverter(new DurationToNumberConverter())__		registry.addConverter(new StringToDataSizeConverter())__		registry.addConverter(new NumberToDataSizeConverter())__		registry.addConverterFactory(new StringToEnumIgnoringCaseConverterFactory())__	};add,converters,useful,for,most,spring,boot,applications,param,registry,the,registry,of,converters,to,add,to,must,also,be,castable,to,conversion,service,e,g,being,a,link,configurable,conversion,service,throws,class,cast,exception,if,the,given,converter,registry,could,not,be,cast,to,a,conversion,service;public,static,void,add,application,converters,converter,registry,registry,add,delimited,string,converters,registry,registry,add,converter,new,string,to,duration,converter,registry,add,converter,new,duration,to,string,converter,registry,add,converter,new,number,to,duration,converter,registry,add,converter,new,duration,to,number,converter,registry,add,converter,new,string,to,data,size,converter,registry,add,converter,new,number,to,data,size,converter,registry,add,converter,factory,new,string,to,enum,ignoring,case,converter,factory
ApplicationConversionService -> public static void addApplicationConverters(ConverterRegistry registry);1540419762;Add converters useful for most Spring Boot applications._@param registry the registry of converters to add to (must also be castable to_ConversionService, e.g. being a {@link ConfigurableConversionService})_@throws ClassCastException if the given ConverterRegistry could not be cast to a_ConversionService;public static void addApplicationConverters(ConverterRegistry registry) {_		addDelimitedStringConverters(registry)__		registry.addConverter(new StringToDurationConverter())__		registry.addConverter(new DurationToStringConverter())__		registry.addConverter(new NumberToDurationConverter())__		registry.addConverter(new DurationToNumberConverter())__		registry.addConverter(new StringToDataSizeConverter())__		registry.addConverter(new NumberToDataSizeConverter())__		registry.addConverterFactory(new StringToEnumIgnoringCaseConverterFactory())__	};add,converters,useful,for,most,spring,boot,applications,param,registry,the,registry,of,converters,to,add,to,must,also,be,castable,to,conversion,service,e,g,being,a,link,configurable,conversion,service,throws,class,cast,exception,if,the,given,converter,registry,could,not,be,cast,to,a,conversion,service;public,static,void,add,application,converters,converter,registry,registry,add,delimited,string,converters,registry,registry,add,converter,new,string,to,duration,converter,registry,add,converter,new,duration,to,string,converter,registry,add,converter,new,number,to,duration,converter,registry,add,converter,new,duration,to,number,converter,registry,add,converter,new,string,to,data,size,converter,registry,add,converter,new,number,to,data,size,converter,registry,add,converter,factory,new,string,to,enum,ignoring,case,converter,factory
ApplicationConversionService -> public static ConversionService getSharedInstance();1519100747;Return a shared default {@code ApplicationConversionService} instance, lazily_building it once needed._@return the shared {@code ConversionService} instance (never {@code null});public static ConversionService getSharedInstance() {_		ApplicationConversionService sharedInstance = ApplicationConversionService.sharedInstance__		if (sharedInstance == null) {_			synchronized (ApplicationConversionService.class) {_				sharedInstance = ApplicationConversionService.sharedInstance__				if (sharedInstance == null) {_					sharedInstance = new ApplicationConversionService()__					ApplicationConversionService.sharedInstance = sharedInstance__				}_			}_		}_		return sharedInstance__	};return,a,shared,default,code,application,conversion,service,instance,lazily,building,it,once,needed,return,the,shared,code,conversion,service,instance,never,code,null;public,static,conversion,service,get,shared,instance,application,conversion,service,shared,instance,application,conversion,service,shared,instance,if,shared,instance,null,synchronized,application,conversion,service,class,shared,instance,application,conversion,service,shared,instance,if,shared,instance,null,shared,instance,new,application,conversion,service,application,conversion,service,shared,instance,shared,instance,return,shared,instance
ApplicationConversionService -> public static ConversionService getSharedInstance();1519363596;Return a shared default {@code ApplicationConversionService} instance, lazily_building it once needed._@return the shared {@code ConversionService} instance (never {@code null});public static ConversionService getSharedInstance() {_		ApplicationConversionService sharedInstance = ApplicationConversionService.sharedInstance__		if (sharedInstance == null) {_			synchronized (ApplicationConversionService.class) {_				sharedInstance = ApplicationConversionService.sharedInstance__				if (sharedInstance == null) {_					sharedInstance = new ApplicationConversionService()__					ApplicationConversionService.sharedInstance = sharedInstance__				}_			}_		}_		return sharedInstance__	};return,a,shared,default,code,application,conversion,service,instance,lazily,building,it,once,needed,return,the,shared,code,conversion,service,instance,never,code,null;public,static,conversion,service,get,shared,instance,application,conversion,service,shared,instance,application,conversion,service,shared,instance,if,shared,instance,null,synchronized,application,conversion,service,class,shared,instance,application,conversion,service,shared,instance,if,shared,instance,null,shared,instance,new,application,conversion,service,application,conversion,service,shared,instance,shared,instance,return,shared,instance
ApplicationConversionService -> public static ConversionService getSharedInstance();1524814428;Return a shared default {@code ApplicationConversionService} instance, lazily_building it once needed._@return the shared {@code ConversionService} instance (never {@code null});public static ConversionService getSharedInstance() {_		ApplicationConversionService sharedInstance = ApplicationConversionService.sharedInstance__		if (sharedInstance == null) {_			synchronized (ApplicationConversionService.class) {_				sharedInstance = ApplicationConversionService.sharedInstance__				if (sharedInstance == null) {_					sharedInstance = new ApplicationConversionService()__					ApplicationConversionService.sharedInstance = sharedInstance__				}_			}_		}_		return sharedInstance__	};return,a,shared,default,code,application,conversion,service,instance,lazily,building,it,once,needed,return,the,shared,code,conversion,service,instance,never,code,null;public,static,conversion,service,get,shared,instance,application,conversion,service,shared,instance,application,conversion,service,shared,instance,if,shared,instance,null,synchronized,application,conversion,service,class,shared,instance,application,conversion,service,shared,instance,if,shared,instance,null,shared,instance,new,application,conversion,service,application,conversion,service,shared,instance,shared,instance,return,shared,instance
ApplicationConversionService -> public static ConversionService getSharedInstance();1534167803;Return a shared default {@code ApplicationConversionService} instance, lazily_building it once needed._@return the shared {@code ConversionService} instance (never {@code null});public static ConversionService getSharedInstance() {_		ApplicationConversionService sharedInstance = ApplicationConversionService.sharedInstance__		if (sharedInstance == null) {_			synchronized (ApplicationConversionService.class) {_				sharedInstance = ApplicationConversionService.sharedInstance__				if (sharedInstance == null) {_					sharedInstance = new ApplicationConversionService()__					ApplicationConversionService.sharedInstance = sharedInstance__				}_			}_		}_		return sharedInstance__	};return,a,shared,default,code,application,conversion,service,instance,lazily,building,it,once,needed,return,the,shared,code,conversion,service,instance,never,code,null;public,static,conversion,service,get,shared,instance,application,conversion,service,shared,instance,application,conversion,service,shared,instance,if,shared,instance,null,synchronized,application,conversion,service,class,shared,instance,application,conversion,service,shared,instance,if,shared,instance,null,shared,instance,new,application,conversion,service,application,conversion,service,shared,instance,shared,instance,return,shared,instance
ApplicationConversionService -> public static ConversionService getSharedInstance();1536051862;Return a shared default {@code ApplicationConversionService} instance, lazily_building it once needed._@return the shared {@code ConversionService} instance (never {@code null});public static ConversionService getSharedInstance() {_		ApplicationConversionService sharedInstance = ApplicationConversionService.sharedInstance__		if (sharedInstance == null) {_			synchronized (ApplicationConversionService.class) {_				sharedInstance = ApplicationConversionService.sharedInstance__				if (sharedInstance == null) {_					sharedInstance = new ApplicationConversionService()__					ApplicationConversionService.sharedInstance = sharedInstance__				}_			}_		}_		return sharedInstance__	};return,a,shared,default,code,application,conversion,service,instance,lazily,building,it,once,needed,return,the,shared,code,conversion,service,instance,never,code,null;public,static,conversion,service,get,shared,instance,application,conversion,service,shared,instance,application,conversion,service,shared,instance,if,shared,instance,null,synchronized,application,conversion,service,class,shared,instance,application,conversion,service,shared,instance,if,shared,instance,null,shared,instance,new,application,conversion,service,application,conversion,service,shared,instance,shared,instance,return,shared,instance
ApplicationConversionService -> public static ConversionService getSharedInstance();1540419762;Return a shared default application {@code ConversionService} instance, lazily_building it once needed._<p>_Note: This method actually returns an {@link ApplicationConversionService}_instance. However, the {@code ConversionService} signature has been preserved for_binary compatibility._@return the shared {@code ApplicationConversionService} instance (never_{@code null});public static ConversionService getSharedInstance() {_		ApplicationConversionService sharedInstance = ApplicationConversionService.sharedInstance__		if (sharedInstance == null) {_			synchronized (ApplicationConversionService.class) {_				sharedInstance = ApplicationConversionService.sharedInstance__				if (sharedInstance == null) {_					sharedInstance = new ApplicationConversionService()__					ApplicationConversionService.sharedInstance = sharedInstance__				}_			}_		}_		return sharedInstance__	};return,a,shared,default,application,code,conversion,service,instance,lazily,building,it,once,needed,p,note,this,method,actually,returns,an,link,application,conversion,service,instance,however,the,code,conversion,service,signature,has,been,preserved,for,binary,compatibility,return,the,shared,code,application,conversion,service,instance,never,code,null;public,static,conversion,service,get,shared,instance,application,conversion,service,shared,instance,application,conversion,service,shared,instance,if,shared,instance,null,synchronized,application,conversion,service,class,shared,instance,application,conversion,service,shared,instance,if,shared,instance,null,shared,instance,new,application,conversion,service,application,conversion,service,shared,instance,shared,instance,return,shared,instance
ApplicationConversionService -> public static ApplicationConversionService getSharedInstance();1536701067;Return a shared default {@code ApplicationConversionService} instance, lazily_building it once needed._@return the shared {@code ConversionService} instance (never {@code null});public static ApplicationConversionService getSharedInstance() {_		ApplicationConversionService sharedInstance = ApplicationConversionService.sharedInstance__		if (sharedInstance == null) {_			synchronized (ApplicationConversionService.class) {_				sharedInstance = ApplicationConversionService.sharedInstance__				if (sharedInstance == null) {_					sharedInstance = new ApplicationConversionService()__					ApplicationConversionService.sharedInstance = sharedInstance__				}_			}_		}_		return sharedInstance__	};return,a,shared,default,code,application,conversion,service,instance,lazily,building,it,once,needed,return,the,shared,code,conversion,service,instance,never,code,null;public,static,application,conversion,service,get,shared,instance,application,conversion,service,shared,instance,application,conversion,service,shared,instance,if,shared,instance,null,synchronized,application,conversion,service,class,shared,instance,application,conversion,service,shared,instance,if,shared,instance,null,shared,instance,new,application,conversion,service,application,conversion,service,shared,instance,shared,instance,return,shared,instance
ApplicationConversionService -> public static ApplicationConversionService getSharedInstance();1537429892;Return a shared default {@code ApplicationConversionService} instance, lazily_building it once needed._@return the shared {@code ApplicationConversionService} instance (never_{@code null});public static ApplicationConversionService getSharedInstance() {_		ApplicationConversionService sharedInstance = ApplicationConversionService.sharedInstance__		if (sharedInstance == null) {_			synchronized (ApplicationConversionService.class) {_				sharedInstance = ApplicationConversionService.sharedInstance__				if (sharedInstance == null) {_					sharedInstance = new ApplicationConversionService()__					ApplicationConversionService.sharedInstance = sharedInstance__				}_			}_		}_		return sharedInstance__	};return,a,shared,default,code,application,conversion,service,instance,lazily,building,it,once,needed,return,the,shared,code,application,conversion,service,instance,never,code,null;public,static,application,conversion,service,get,shared,instance,application,conversion,service,shared,instance,application,conversion,service,shared,instance,if,shared,instance,null,synchronized,application,conversion,service,class,shared,instance,application,conversion,service,shared,instance,if,shared,instance,null,shared,instance,new,application,conversion,service,application,conversion,service,shared,instance,shared,instance,return,shared,instance
ApplicationConversionService -> public static void addDelimitedStringConverters(ConverterRegistry registry);1519363596;Add converters to support delimited strings._@param registry the registry of converters to add to (must also be castable to_ConversionService, e.g. being a {@link ConfigurableConversionService})_@throws ClassCastException if the given ConverterRegistry could not be cast to a_ConversionService;public static void addDelimitedStringConverters(ConverterRegistry registry) {_		ConversionService service = (ConversionService) registry__		registry.addConverter(new ArrayToDelimitedStringConverter(service))__		registry.addConverter(new CollectionToDelimitedStringConverter(service))__		registry.addConverter(new DelimitedStringToArrayConverter(service))__		registry.addConverter(new DelimitedStringToCollectionConverter(service))__	};add,converters,to,support,delimited,strings,param,registry,the,registry,of,converters,to,add,to,must,also,be,castable,to,conversion,service,e,g,being,a,link,configurable,conversion,service,throws,class,cast,exception,if,the,given,converter,registry,could,not,be,cast,to,a,conversion,service;public,static,void,add,delimited,string,converters,converter,registry,registry,conversion,service,service,conversion,service,registry,registry,add,converter,new,array,to,delimited,string,converter,service,registry,add,converter,new,collection,to,delimited,string,converter,service,registry,add,converter,new,delimited,string,to,array,converter,service,registry,add,converter,new,delimited,string,to,collection,converter,service
ApplicationConversionService -> public static void addDelimitedStringConverters(ConverterRegistry registry);1524814428;Add converters to support delimited strings._@param registry the registry of converters to add to (must also be castable to_ConversionService, e.g. being a {@link ConfigurableConversionService})_@throws ClassCastException if the given ConverterRegistry could not be cast to a_ConversionService;public static void addDelimitedStringConverters(ConverterRegistry registry) {_		ConversionService service = (ConversionService) registry__		registry.addConverter(new ArrayToDelimitedStringConverter(service))__		registry.addConverter(new CollectionToDelimitedStringConverter(service))__		registry.addConverter(new DelimitedStringToArrayConverter(service))__		registry.addConverter(new DelimitedStringToCollectionConverter(service))__	};add,converters,to,support,delimited,strings,param,registry,the,registry,of,converters,to,add,to,must,also,be,castable,to,conversion,service,e,g,being,a,link,configurable,conversion,service,throws,class,cast,exception,if,the,given,converter,registry,could,not,be,cast,to,a,conversion,service;public,static,void,add,delimited,string,converters,converter,registry,registry,conversion,service,service,conversion,service,registry,registry,add,converter,new,array,to,delimited,string,converter,service,registry,add,converter,new,collection,to,delimited,string,converter,service,registry,add,converter,new,delimited,string,to,array,converter,service,registry,add,converter,new,delimited,string,to,collection,converter,service
ApplicationConversionService -> public static void addDelimitedStringConverters(ConverterRegistry registry);1534167803;Add converters to support delimited strings._@param registry the registry of converters to add to (must also be castable to_ConversionService, e.g. being a {@link ConfigurableConversionService})_@throws ClassCastException if the given ConverterRegistry could not be cast to a_ConversionService;public static void addDelimitedStringConverters(ConverterRegistry registry) {_		ConversionService service = (ConversionService) registry__		registry.addConverter(new ArrayToDelimitedStringConverter(service))__		registry.addConverter(new CollectionToDelimitedStringConverter(service))__		registry.addConverter(new DelimitedStringToArrayConverter(service))__		registry.addConverter(new DelimitedStringToCollectionConverter(service))__	};add,converters,to,support,delimited,strings,param,registry,the,registry,of,converters,to,add,to,must,also,be,castable,to,conversion,service,e,g,being,a,link,configurable,conversion,service,throws,class,cast,exception,if,the,given,converter,registry,could,not,be,cast,to,a,conversion,service;public,static,void,add,delimited,string,converters,converter,registry,registry,conversion,service,service,conversion,service,registry,registry,add,converter,new,array,to,delimited,string,converter,service,registry,add,converter,new,collection,to,delimited,string,converter,service,registry,add,converter,new,delimited,string,to,array,converter,service,registry,add,converter,new,delimited,string,to,collection,converter,service
ApplicationConversionService -> public static void addDelimitedStringConverters(ConverterRegistry registry);1536051862;Add converters to support delimited strings._@param registry the registry of converters to add to (must also be castable to_ConversionService, e.g. being a {@link ConfigurableConversionService})_@throws ClassCastException if the given ConverterRegistry could not be cast to a_ConversionService;public static void addDelimitedStringConverters(ConverterRegistry registry) {_		ConversionService service = (ConversionService) registry__		registry.addConverter(new ArrayToDelimitedStringConverter(service))__		registry.addConverter(new CollectionToDelimitedStringConverter(service))__		registry.addConverter(new DelimitedStringToArrayConverter(service))__		registry.addConverter(new DelimitedStringToCollectionConverter(service))__	};add,converters,to,support,delimited,strings,param,registry,the,registry,of,converters,to,add,to,must,also,be,castable,to,conversion,service,e,g,being,a,link,configurable,conversion,service,throws,class,cast,exception,if,the,given,converter,registry,could,not,be,cast,to,a,conversion,service;public,static,void,add,delimited,string,converters,converter,registry,registry,conversion,service,service,conversion,service,registry,registry,add,converter,new,array,to,delimited,string,converter,service,registry,add,converter,new,collection,to,delimited,string,converter,service,registry,add,converter,new,delimited,string,to,array,converter,service,registry,add,converter,new,delimited,string,to,collection,converter,service
ApplicationConversionService -> public static void addDelimitedStringConverters(ConverterRegistry registry);1536701067;Add converters to support delimited strings._@param registry the registry of converters to add to (must also be castable to_ConversionService, e.g. being a {@link ConfigurableConversionService})_@throws ClassCastException if the given ConverterRegistry could not be cast to a_ConversionService;public static void addDelimitedStringConverters(ConverterRegistry registry) {_		ConversionService service = (ConversionService) registry__		registry.addConverter(new ArrayToDelimitedStringConverter(service))__		registry.addConverter(new CollectionToDelimitedStringConverter(service))__		registry.addConverter(new DelimitedStringToArrayConverter(service))__		registry.addConverter(new DelimitedStringToCollectionConverter(service))__	};add,converters,to,support,delimited,strings,param,registry,the,registry,of,converters,to,add,to,must,also,be,castable,to,conversion,service,e,g,being,a,link,configurable,conversion,service,throws,class,cast,exception,if,the,given,converter,registry,could,not,be,cast,to,a,conversion,service;public,static,void,add,delimited,string,converters,converter,registry,registry,conversion,service,service,conversion,service,registry,registry,add,converter,new,array,to,delimited,string,converter,service,registry,add,converter,new,collection,to,delimited,string,converter,service,registry,add,converter,new,delimited,string,to,array,converter,service,registry,add,converter,new,delimited,string,to,collection,converter,service
ApplicationConversionService -> public static void addDelimitedStringConverters(ConverterRegistry registry);1537429892;Add converters to support delimited strings._@param registry the registry of converters to add to (must also be castable to_ConversionService, e.g. being a {@link ConfigurableConversionService})_@throws ClassCastException if the given ConverterRegistry could not be cast to a_ConversionService;public static void addDelimitedStringConverters(ConverterRegistry registry) {_		ConversionService service = (ConversionService) registry__		registry.addConverter(new ArrayToDelimitedStringConverter(service))__		registry.addConverter(new CollectionToDelimitedStringConverter(service))__		registry.addConverter(new DelimitedStringToArrayConverter(service))__		registry.addConverter(new DelimitedStringToCollectionConverter(service))__	};add,converters,to,support,delimited,strings,param,registry,the,registry,of,converters,to,add,to,must,also,be,castable,to,conversion,service,e,g,being,a,link,configurable,conversion,service,throws,class,cast,exception,if,the,given,converter,registry,could,not,be,cast,to,a,conversion,service;public,static,void,add,delimited,string,converters,converter,registry,registry,conversion,service,service,conversion,service,registry,registry,add,converter,new,array,to,delimited,string,converter,service,registry,add,converter,new,collection,to,delimited,string,converter,service,registry,add,converter,new,delimited,string,to,array,converter,service,registry,add,converter,new,delimited,string,to,collection,converter,service
ApplicationConversionService -> public static void addDelimitedStringConverters(ConverterRegistry registry);1540419762;Add converters to support delimited strings._@param registry the registry of converters to add to (must also be castable to_ConversionService, e.g. being a {@link ConfigurableConversionService})_@throws ClassCastException if the given ConverterRegistry could not be cast to a_ConversionService;public static void addDelimitedStringConverters(ConverterRegistry registry) {_		ConversionService service = (ConversionService) registry__		registry.addConverter(new ArrayToDelimitedStringConverter(service))__		registry.addConverter(new CollectionToDelimitedStringConverter(service))__		registry.addConverter(new DelimitedStringToArrayConverter(service))__		registry.addConverter(new DelimitedStringToCollectionConverter(service))__	};add,converters,to,support,delimited,strings,param,registry,the,registry,of,converters,to,add,to,must,also,be,castable,to,conversion,service,e,g,being,a,link,configurable,conversion,service,throws,class,cast,exception,if,the,given,converter,registry,could,not,be,cast,to,a,conversion,service;public,static,void,add,delimited,string,converters,converter,registry,registry,conversion,service,service,conversion,service,registry,registry,add,converter,new,array,to,delimited,string,converter,service,registry,add,converter,new,collection,to,delimited,string,converter,service,registry,add,converter,new,delimited,string,to,array,converter,service,registry,add,converter,new,delimited,string,to,collection,converter,service
