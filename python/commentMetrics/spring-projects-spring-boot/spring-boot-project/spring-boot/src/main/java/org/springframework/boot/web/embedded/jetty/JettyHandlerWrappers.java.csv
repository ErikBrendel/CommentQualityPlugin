commented;modifiers;parameterAmount;loc;comment;code
false;static;1;12;;static HandlerWrapper createGzipHandlerWrapper(Compression compression) {     GzipHandler handler = new GzipHandler().     handler.setMinGzipSize((int) compression.getMinResponseSize().toBytes()).     handler.setIncludedMimeTypes(compression.getMimeTypes()).     for (HttpMethod httpMethod : HttpMethod.values()) {         handler.addIncludedMethods(httpMethod.name()).     }     if (compression.getExcludedUserAgents() != null) {         handler.setExcludedAgentPatterns(compression.getExcludedUserAgents()).     }     return handler. }
false;static;1;3;;static HandlerWrapper createServerHeaderHandlerWrapper(String header) {     return new ServerHeaderHandler(header). }
false;public;4;8;;@Override public void handle(String target, Request baseRequest, HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException {     if (!response.getHeaderNames().contains(SERVER_HEADER)) {         response.setHeader(SERVER_HEADER, this.value).     }     super.handle(target, baseRequest, request, response). }
