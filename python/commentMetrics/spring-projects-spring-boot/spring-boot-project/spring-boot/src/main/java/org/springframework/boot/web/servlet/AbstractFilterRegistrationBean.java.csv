# id;timestamp;commentText;codeText;commentWords;codeWords
AbstractFilterRegistrationBean -> public void setDispatcherTypes(DispatcherType first, DispatcherType... rest);1507173536;Convenience method to {@link #setDispatcherTypes(EnumSet) set dispatcher types}_using the specified elements._@param first the first dispatcher type_@param rest additional dispatcher types;public void setDispatcherTypes(DispatcherType first, DispatcherType... rest) {_		this.dispatcherTypes = EnumSet.of(first, rest)__	};convenience,method,to,link,set,dispatcher,types,enum,set,set,dispatcher,types,using,the,specified,elements,param,first,the,first,dispatcher,type,param,rest,additional,dispatcher,types;public,void,set,dispatcher,types,dispatcher,type,first,dispatcher,type,rest,this,dispatcher,types,enum,set,of,first,rest
AbstractFilterRegistrationBean -> public void setDispatcherTypes(DispatcherType first, DispatcherType... rest);1515477900;Convenience method to {@link #setDispatcherTypes(EnumSet) set dispatcher types}_using the specified elements._@param first the first dispatcher type_@param rest additional dispatcher types;public void setDispatcherTypes(DispatcherType first, DispatcherType... rest) {_		this.dispatcherTypes = EnumSet.of(first, rest)__	};convenience,method,to,link,set,dispatcher,types,enum,set,set,dispatcher,types,using,the,specified,elements,param,first,the,first,dispatcher,type,param,rest,additional,dispatcher,types;public,void,set,dispatcher,types,dispatcher,type,first,dispatcher,type,rest,this,dispatcher,types,enum,set,of,first,rest
AbstractFilterRegistrationBean -> public void setDispatcherTypes(DispatcherType first, DispatcherType... rest);1515717909;Convenience method to {@link #setDispatcherTypes(EnumSet) set dispatcher types}_using the specified elements._@param first the first dispatcher type_@param rest additional dispatcher types;public void setDispatcherTypes(DispatcherType first, DispatcherType... rest) {_		this.dispatcherTypes = EnumSet.of(first, rest)__	};convenience,method,to,link,set,dispatcher,types,enum,set,set,dispatcher,types,using,the,specified,elements,param,first,the,first,dispatcher,type,param,rest,additional,dispatcher,types;public,void,set,dispatcher,types,dispatcher,type,first,dispatcher,type,rest,this,dispatcher,types,enum,set,of,first,rest
AbstractFilterRegistrationBean -> public void setDispatcherTypes(DispatcherType first, DispatcherType... rest);1519362690;Convenience method to {@link #setDispatcherTypes(EnumSet) set dispatcher types}_using the specified elements._@param first the first dispatcher type_@param rest additional dispatcher types;public void setDispatcherTypes(DispatcherType first, DispatcherType... rest) {_		this.dispatcherTypes = EnumSet.of(first, rest)__	};convenience,method,to,link,set,dispatcher,types,enum,set,set,dispatcher,types,using,the,specified,elements,param,first,the,first,dispatcher,type,param,rest,additional,dispatcher,types;public,void,set,dispatcher,types,dispatcher,type,first,dispatcher,type,rest,this,dispatcher,types,enum,set,of,first,rest
AbstractFilterRegistrationBean -> public void setDispatcherTypes(DispatcherType first, DispatcherType... rest);1522306440;Convenience method to {@link #setDispatcherTypes(EnumSet) set dispatcher types}_using the specified elements._@param first the first dispatcher type_@param rest additional dispatcher types;public void setDispatcherTypes(DispatcherType first, DispatcherType... rest) {_		this.dispatcherTypes = EnumSet.of(first, rest)__	};convenience,method,to,link,set,dispatcher,types,enum,set,set,dispatcher,types,using,the,specified,elements,param,first,the,first,dispatcher,type,param,rest,additional,dispatcher,types;public,void,set,dispatcher,types,dispatcher,type,first,dispatcher,type,rest,this,dispatcher,types,enum,set,of,first,rest
AbstractFilterRegistrationBean -> public void setDispatcherTypes(DispatcherType first, DispatcherType... rest);1525963607;Convenience method to {@link #setDispatcherTypes(EnumSet) set dispatcher types}_using the specified elements._@param first the first dispatcher type_@param rest additional dispatcher types;public void setDispatcherTypes(DispatcherType first, DispatcherType... rest) {_		this.dispatcherTypes = EnumSet.of(first, rest)__	};convenience,method,to,link,set,dispatcher,types,enum,set,set,dispatcher,types,using,the,specified,elements,param,first,the,first,dispatcher,type,param,rest,additional,dispatcher,types;public,void,set,dispatcher,types,dispatcher,type,first,dispatcher,type,rest,this,dispatcher,types,enum,set,of,first,rest
AbstractFilterRegistrationBean -> public void setDispatcherTypes(DispatcherType first, DispatcherType... rest);1539324803;Convenience method to {@link #setDispatcherTypes(EnumSet) set dispatcher types}_using the specified elements._@param first the first dispatcher type_@param rest additional dispatcher types;public void setDispatcherTypes(DispatcherType first, DispatcherType... rest) {_		this.dispatcherTypes = EnumSet.of(first, rest)__	};convenience,method,to,link,set,dispatcher,types,enum,set,set,dispatcher,types,using,the,specified,elements,param,first,the,first,dispatcher,type,param,rest,additional,dispatcher,types;public,void,set,dispatcher,types,dispatcher,type,first,dispatcher,type,rest,this,dispatcher,types,enum,set,of,first,rest
AbstractFilterRegistrationBean -> public void setDispatcherTypes(DispatcherType first, DispatcherType... rest);1542792595;Convenience method to {@link #setDispatcherTypes(EnumSet) set dispatcher types}_using the specified elements._@param first the first dispatcher type_@param rest additional dispatcher types;public void setDispatcherTypes(DispatcherType first, DispatcherType... rest) {_		this.dispatcherTypes = EnumSet.of(first, rest)__	};convenience,method,to,link,set,dispatcher,types,enum,set,set,dispatcher,types,using,the,specified,elements,param,first,the,first,dispatcher,type,param,rest,additional,dispatcher,types;public,void,set,dispatcher,types,dispatcher,type,first,dispatcher,type,rest,this,dispatcher,types,enum,set,of,first,rest
AbstractFilterRegistrationBean -> public void setDispatcherTypes(DispatcherType first, DispatcherType... rest);1543352081;Convenience method to {@link #setDispatcherTypes(EnumSet) set dispatcher types}_using the specified elements._@param first the first dispatcher type_@param rest additional dispatcher types;public void setDispatcherTypes(DispatcherType first, DispatcherType... rest) {_		this.dispatcherTypes = EnumSet.of(first, rest)__	};convenience,method,to,link,set,dispatcher,types,enum,set,set,dispatcher,types,using,the,specified,elements,param,first,the,first,dispatcher,type,param,rest,additional,dispatcher,types;public,void,set,dispatcher,types,dispatcher,type,first,dispatcher,type,rest,this,dispatcher,types,enum,set,of,first,rest
AbstractFilterRegistrationBean -> public void setDispatcherTypes(DispatcherType first, DispatcherType... rest);1543561024;Convenience method to {@link #setDispatcherTypes(EnumSet) set dispatcher types}_using the specified elements._@param first the first dispatcher type_@param rest additional dispatcher types;public void setDispatcherTypes(DispatcherType first, DispatcherType... rest) {_		this.dispatcherTypes = EnumSet.of(first, rest)__	};convenience,method,to,link,set,dispatcher,types,enum,set,set,dispatcher,types,using,the,specified,elements,param,first,the,first,dispatcher,type,param,rest,additional,dispatcher,types;public,void,set,dispatcher,types,dispatcher,type,first,dispatcher,type,rest,this,dispatcher,types,enum,set,of,first,rest
AbstractFilterRegistrationBean -> public void setDispatcherTypes(DispatcherType first, DispatcherType... rest);1551262923;Convenience method to {@link #setDispatcherTypes(EnumSet) set dispatcher types}_using the specified elements._@param first the first dispatcher type_@param rest additional dispatcher types;public void setDispatcherTypes(DispatcherType first, DispatcherType... rest) {_		this.dispatcherTypes = EnumSet.of(first, rest)__	};convenience,method,to,link,set,dispatcher,types,enum,set,set,dispatcher,types,using,the,specified,elements,param,first,the,first,dispatcher,type,param,rest,additional,dispatcher,types;public,void,set,dispatcher,types,dispatcher,type,first,dispatcher,type,rest,this,dispatcher,types,enum,set,of,first,rest
AbstractFilterRegistrationBean -> public void addServletRegistrationBeans( 			ServletRegistrationBean<?>... servletRegistrationBeans);1507173536;Add {@link ServletRegistrationBean}s for the filter._@param servletRegistrationBeans the servlet registration beans to add_@see #setServletRegistrationBeans;public void addServletRegistrationBeans(_			ServletRegistrationBean<?>... servletRegistrationBeans) {_		Assert.notNull(servletRegistrationBeans,_				"ServletRegistrationBeans must not be null")__		Collections.addAll(this.servletRegistrationBeans, servletRegistrationBeans)__	};add,link,servlet,registration,bean,s,for,the,filter,param,servlet,registration,beans,the,servlet,registration,beans,to,add,see,set,servlet,registration,beans;public,void,add,servlet,registration,beans,servlet,registration,bean,servlet,registration,beans,assert,not,null,servlet,registration,beans,servlet,registration,beans,must,not,be,null,collections,add,all,this,servlet,registration,beans,servlet,registration,beans
AbstractFilterRegistrationBean -> public void addServletRegistrationBeans( 			ServletRegistrationBean<?>... servletRegistrationBeans);1515477900;Add {@link ServletRegistrationBean}s for the filter._@param servletRegistrationBeans the servlet registration beans to add_@see #setServletRegistrationBeans;public void addServletRegistrationBeans(_			ServletRegistrationBean<?>... servletRegistrationBeans) {_		Assert.notNull(servletRegistrationBeans,_				"ServletRegistrationBeans must not be null")__		Collections.addAll(this.servletRegistrationBeans, servletRegistrationBeans)__	};add,link,servlet,registration,bean,s,for,the,filter,param,servlet,registration,beans,the,servlet,registration,beans,to,add,see,set,servlet,registration,beans;public,void,add,servlet,registration,beans,servlet,registration,bean,servlet,registration,beans,assert,not,null,servlet,registration,beans,servlet,registration,beans,must,not,be,null,collections,add,all,this,servlet,registration,beans,servlet,registration,beans
AbstractFilterRegistrationBean -> public void addServletRegistrationBeans( 			ServletRegistrationBean<?>... servletRegistrationBeans);1515717909;Add {@link ServletRegistrationBean}s for the filter._@param servletRegistrationBeans the servlet registration beans to add_@see #setServletRegistrationBeans;public void addServletRegistrationBeans(_			ServletRegistrationBean<?>... servletRegistrationBeans) {_		Assert.notNull(servletRegistrationBeans,_				"ServletRegistrationBeans must not be null")__		Collections.addAll(this.servletRegistrationBeans, servletRegistrationBeans)__	};add,link,servlet,registration,bean,s,for,the,filter,param,servlet,registration,beans,the,servlet,registration,beans,to,add,see,set,servlet,registration,beans;public,void,add,servlet,registration,beans,servlet,registration,bean,servlet,registration,beans,assert,not,null,servlet,registration,beans,servlet,registration,beans,must,not,be,null,collections,add,all,this,servlet,registration,beans,servlet,registration,beans
AbstractFilterRegistrationBean -> public void addServletRegistrationBeans( 			ServletRegistrationBean<?>... servletRegistrationBeans);1519362690;Add {@link ServletRegistrationBean}s for the filter._@param servletRegistrationBeans the servlet registration beans to add_@see #setServletRegistrationBeans;public void addServletRegistrationBeans(_			ServletRegistrationBean<?>... servletRegistrationBeans) {_		Assert.notNull(servletRegistrationBeans,_				"ServletRegistrationBeans must not be null")__		Collections.addAll(this.servletRegistrationBeans, servletRegistrationBeans)__	};add,link,servlet,registration,bean,s,for,the,filter,param,servlet,registration,beans,the,servlet,registration,beans,to,add,see,set,servlet,registration,beans;public,void,add,servlet,registration,beans,servlet,registration,bean,servlet,registration,beans,assert,not,null,servlet,registration,beans,servlet,registration,beans,must,not,be,null,collections,add,all,this,servlet,registration,beans,servlet,registration,beans
AbstractFilterRegistrationBean -> public void addServletRegistrationBeans( 			ServletRegistrationBean<?>... servletRegistrationBeans);1522306440;Add {@link ServletRegistrationBean}s for the filter._@param servletRegistrationBeans the servlet registration beans to add_@see #setServletRegistrationBeans;public void addServletRegistrationBeans(_			ServletRegistrationBean<?>... servletRegistrationBeans) {_		Assert.notNull(servletRegistrationBeans,_				"ServletRegistrationBeans must not be null")__		Collections.addAll(this.servletRegistrationBeans, servletRegistrationBeans)__	};add,link,servlet,registration,bean,s,for,the,filter,param,servlet,registration,beans,the,servlet,registration,beans,to,add,see,set,servlet,registration,beans;public,void,add,servlet,registration,beans,servlet,registration,bean,servlet,registration,beans,assert,not,null,servlet,registration,beans,servlet,registration,beans,must,not,be,null,collections,add,all,this,servlet,registration,beans,servlet,registration,beans
AbstractFilterRegistrationBean -> public void addServletRegistrationBeans( 			ServletRegistrationBean<?>... servletRegistrationBeans);1525963607;Add {@link ServletRegistrationBean}s for the filter._@param servletRegistrationBeans the servlet registration beans to add_@see #setServletRegistrationBeans;public void addServletRegistrationBeans(_			ServletRegistrationBean<?>... servletRegistrationBeans) {_		Assert.notNull(servletRegistrationBeans,_				"ServletRegistrationBeans must not be null")__		Collections.addAll(this.servletRegistrationBeans, servletRegistrationBeans)__	};add,link,servlet,registration,bean,s,for,the,filter,param,servlet,registration,beans,the,servlet,registration,beans,to,add,see,set,servlet,registration,beans;public,void,add,servlet,registration,beans,servlet,registration,bean,servlet,registration,beans,assert,not,null,servlet,registration,beans,servlet,registration,beans,must,not,be,null,collections,add,all,this,servlet,registration,beans,servlet,registration,beans
AbstractFilterRegistrationBean -> public void addServletRegistrationBeans( 			ServletRegistrationBean<?>... servletRegistrationBeans);1539324803;Add {@link ServletRegistrationBean}s for the filter._@param servletRegistrationBeans the servlet registration beans to add_@see #setServletRegistrationBeans;public void addServletRegistrationBeans(_			ServletRegistrationBean<?>... servletRegistrationBeans) {_		Assert.notNull(servletRegistrationBeans,_				"ServletRegistrationBeans must not be null")__		Collections.addAll(this.servletRegistrationBeans, servletRegistrationBeans)__	};add,link,servlet,registration,bean,s,for,the,filter,param,servlet,registration,beans,the,servlet,registration,beans,to,add,see,set,servlet,registration,beans;public,void,add,servlet,registration,beans,servlet,registration,bean,servlet,registration,beans,assert,not,null,servlet,registration,beans,servlet,registration,beans,must,not,be,null,collections,add,all,this,servlet,registration,beans,servlet,registration,beans
AbstractFilterRegistrationBean -> public void addServletRegistrationBeans( 			ServletRegistrationBean<?>... servletRegistrationBeans);1542792595;Add {@link ServletRegistrationBean}s for the filter._@param servletRegistrationBeans the servlet registration beans to add_@see #setServletRegistrationBeans;public void addServletRegistrationBeans(_			ServletRegistrationBean<?>... servletRegistrationBeans) {_		Assert.notNull(servletRegistrationBeans,_				"ServletRegistrationBeans must not be null")__		Collections.addAll(this.servletRegistrationBeans, servletRegistrationBeans)__	};add,link,servlet,registration,bean,s,for,the,filter,param,servlet,registration,beans,the,servlet,registration,beans,to,add,see,set,servlet,registration,beans;public,void,add,servlet,registration,beans,servlet,registration,bean,servlet,registration,beans,assert,not,null,servlet,registration,beans,servlet,registration,beans,must,not,be,null,collections,add,all,this,servlet,registration,beans,servlet,registration,beans
AbstractFilterRegistrationBean -> public void addServletRegistrationBeans( 			ServletRegistrationBean<?>... servletRegistrationBeans);1543352081;Add {@link ServletRegistrationBean}s for the filter._@param servletRegistrationBeans the servlet registration beans to add_@see #setServletRegistrationBeans;public void addServletRegistrationBeans(_			ServletRegistrationBean<?>... servletRegistrationBeans) {_		Assert.notNull(servletRegistrationBeans,_				"ServletRegistrationBeans must not be null")__		Collections.addAll(this.servletRegistrationBeans, servletRegistrationBeans)__	};add,link,servlet,registration,bean,s,for,the,filter,param,servlet,registration,beans,the,servlet,registration,beans,to,add,see,set,servlet,registration,beans;public,void,add,servlet,registration,beans,servlet,registration,bean,servlet,registration,beans,assert,not,null,servlet,registration,beans,servlet,registration,beans,must,not,be,null,collections,add,all,this,servlet,registration,beans,servlet,registration,beans
AbstractFilterRegistrationBean -> public void addServletRegistrationBeans( 			ServletRegistrationBean<?>... servletRegistrationBeans);1543561024;Add {@link ServletRegistrationBean}s for the filter._@param servletRegistrationBeans the servlet registration beans to add_@see #setServletRegistrationBeans;public void addServletRegistrationBeans(_			ServletRegistrationBean<?>... servletRegistrationBeans) {_		Assert.notNull(servletRegistrationBeans,_				"ServletRegistrationBeans must not be null")__		Collections.addAll(this.servletRegistrationBeans, servletRegistrationBeans)__	};add,link,servlet,registration,bean,s,for,the,filter,param,servlet,registration,beans,the,servlet,registration,beans,to,add,see,set,servlet,registration,beans;public,void,add,servlet,registration,beans,servlet,registration,bean,servlet,registration,beans,assert,not,null,servlet,registration,beans,servlet,registration,beans,must,not,be,null,collections,add,all,this,servlet,registration,beans,servlet,registration,beans
AbstractFilterRegistrationBean -> public void addServletRegistrationBeans( 			ServletRegistrationBean<?>... servletRegistrationBeans);1551262923;Add {@link ServletRegistrationBean}s for the filter._@param servletRegistrationBeans the servlet registration beans to add_@see #setServletRegistrationBeans;public void addServletRegistrationBeans(_			ServletRegistrationBean<?>... servletRegistrationBeans) {_		Assert.notNull(servletRegistrationBeans,_				"ServletRegistrationBeans must not be null")__		Collections.addAll(this.servletRegistrationBeans, servletRegistrationBeans)__	};add,link,servlet,registration,bean,s,for,the,filter,param,servlet,registration,beans,the,servlet,registration,beans,to,add,see,set,servlet,registration,beans;public,void,add,servlet,registration,beans,servlet,registration,bean,servlet,registration,beans,assert,not,null,servlet,registration,beans,servlet,registration,beans,must,not,be,null,collections,add,all,this,servlet,registration,beans,servlet,registration,beans
AbstractFilterRegistrationBean -> public Collection<ServletRegistrationBean<?>> getServletRegistrationBeans();1507173536;Return a mutable collection of the {@link ServletRegistrationBean} that the filter_will be registered against. {@link ServletRegistrationBean}s._@return the Servlet registration beans_@see #setServletNames_@see #setUrlPatterns;public Collection<ServletRegistrationBean<?>> getServletRegistrationBeans() {_		return this.servletRegistrationBeans__	};return,a,mutable,collection,of,the,link,servlet,registration,bean,that,the,filter,will,be,registered,against,link,servlet,registration,bean,s,return,the,servlet,registration,beans,see,set,servlet,names,see,set,url,patterns;public,collection,servlet,registration,bean,get,servlet,registration,beans,return,this,servlet,registration,beans
AbstractFilterRegistrationBean -> public Collection<ServletRegistrationBean<?>> getServletRegistrationBeans();1515477900;Return a mutable collection of the {@link ServletRegistrationBean} that the filter_will be registered against. {@link ServletRegistrationBean}s._@return the Servlet registration beans_@see #setServletNames_@see #setUrlPatterns;public Collection<ServletRegistrationBean<?>> getServletRegistrationBeans() {_		return this.servletRegistrationBeans__	};return,a,mutable,collection,of,the,link,servlet,registration,bean,that,the,filter,will,be,registered,against,link,servlet,registration,bean,s,return,the,servlet,registration,beans,see,set,servlet,names,see,set,url,patterns;public,collection,servlet,registration,bean,get,servlet,registration,beans,return,this,servlet,registration,beans
AbstractFilterRegistrationBean -> public Collection<ServletRegistrationBean<?>> getServletRegistrationBeans();1515717909;Return a mutable collection of the {@link ServletRegistrationBean} that the filter_will be registered against. {@link ServletRegistrationBean}s._@return the Servlet registration beans_@see #setServletNames_@see #setUrlPatterns;public Collection<ServletRegistrationBean<?>> getServletRegistrationBeans() {_		return this.servletRegistrationBeans__	};return,a,mutable,collection,of,the,link,servlet,registration,bean,that,the,filter,will,be,registered,against,link,servlet,registration,bean,s,return,the,servlet,registration,beans,see,set,servlet,names,see,set,url,patterns;public,collection,servlet,registration,bean,get,servlet,registration,beans,return,this,servlet,registration,beans
AbstractFilterRegistrationBean -> public Collection<ServletRegistrationBean<?>> getServletRegistrationBeans();1519362690;Return a mutable collection of the {@link ServletRegistrationBean} that the filter_will be registered against. {@link ServletRegistrationBean}s._@return the Servlet registration beans_@see #setServletNames_@see #setUrlPatterns;public Collection<ServletRegistrationBean<?>> getServletRegistrationBeans() {_		return this.servletRegistrationBeans__	};return,a,mutable,collection,of,the,link,servlet,registration,bean,that,the,filter,will,be,registered,against,link,servlet,registration,bean,s,return,the,servlet,registration,beans,see,set,servlet,names,see,set,url,patterns;public,collection,servlet,registration,bean,get,servlet,registration,beans,return,this,servlet,registration,beans
AbstractFilterRegistrationBean -> public Collection<ServletRegistrationBean<?>> getServletRegistrationBeans();1522306440;Return a mutable collection of the {@link ServletRegistrationBean} that the filter_will be registered against. {@link ServletRegistrationBean}s._@return the Servlet registration beans_@see #setServletNames_@see #setUrlPatterns;public Collection<ServletRegistrationBean<?>> getServletRegistrationBeans() {_		return this.servletRegistrationBeans__	};return,a,mutable,collection,of,the,link,servlet,registration,bean,that,the,filter,will,be,registered,against,link,servlet,registration,bean,s,return,the,servlet,registration,beans,see,set,servlet,names,see,set,url,patterns;public,collection,servlet,registration,bean,get,servlet,registration,beans,return,this,servlet,registration,beans
AbstractFilterRegistrationBean -> public Collection<ServletRegistrationBean<?>> getServletRegistrationBeans();1525963607;Return a mutable collection of the {@link ServletRegistrationBean} that the filter_will be registered against. {@link ServletRegistrationBean}s._@return the Servlet registration beans_@see #setServletNames_@see #setUrlPatterns;public Collection<ServletRegistrationBean<?>> getServletRegistrationBeans() {_		return this.servletRegistrationBeans__	};return,a,mutable,collection,of,the,link,servlet,registration,bean,that,the,filter,will,be,registered,against,link,servlet,registration,bean,s,return,the,servlet,registration,beans,see,set,servlet,names,see,set,url,patterns;public,collection,servlet,registration,bean,get,servlet,registration,beans,return,this,servlet,registration,beans
AbstractFilterRegistrationBean -> public Collection<ServletRegistrationBean<?>> getServletRegistrationBeans();1539324803;Return a mutable collection of the {@link ServletRegistrationBean} that the filter_will be registered against. {@link ServletRegistrationBean}s._@return the Servlet registration beans_@see #setServletNames_@see #setUrlPatterns;public Collection<ServletRegistrationBean<?>> getServletRegistrationBeans() {_		return this.servletRegistrationBeans__	};return,a,mutable,collection,of,the,link,servlet,registration,bean,that,the,filter,will,be,registered,against,link,servlet,registration,bean,s,return,the,servlet,registration,beans,see,set,servlet,names,see,set,url,patterns;public,collection,servlet,registration,bean,get,servlet,registration,beans,return,this,servlet,registration,beans
AbstractFilterRegistrationBean -> public Collection<ServletRegistrationBean<?>> getServletRegistrationBeans();1542792595;Return a mutable collection of the {@link ServletRegistrationBean} that the filter_will be registered against. {@link ServletRegistrationBean}s._@return the Servlet registration beans_@see #setServletNames_@see #setUrlPatterns;public Collection<ServletRegistrationBean<?>> getServletRegistrationBeans() {_		return this.servletRegistrationBeans__	};return,a,mutable,collection,of,the,link,servlet,registration,bean,that,the,filter,will,be,registered,against,link,servlet,registration,bean,s,return,the,servlet,registration,beans,see,set,servlet,names,see,set,url,patterns;public,collection,servlet,registration,bean,get,servlet,registration,beans,return,this,servlet,registration,beans
AbstractFilterRegistrationBean -> public Collection<ServletRegistrationBean<?>> getServletRegistrationBeans();1543352081;Return a mutable collection of the {@link ServletRegistrationBean} that the filter_will be registered against. {@link ServletRegistrationBean}s._@return the Servlet registration beans_@see #setServletNames_@see #setUrlPatterns;public Collection<ServletRegistrationBean<?>> getServletRegistrationBeans() {_		return this.servletRegistrationBeans__	};return,a,mutable,collection,of,the,link,servlet,registration,bean,that,the,filter,will,be,registered,against,link,servlet,registration,bean,s,return,the,servlet,registration,beans,see,set,servlet,names,see,set,url,patterns;public,collection,servlet,registration,bean,get,servlet,registration,beans,return,this,servlet,registration,beans
AbstractFilterRegistrationBean -> public Collection<ServletRegistrationBean<?>> getServletRegistrationBeans();1543561024;Return a mutable collection of the {@link ServletRegistrationBean} that the filter_will be registered against. {@link ServletRegistrationBean}s._@return the Servlet registration beans_@see #setServletNames_@see #setUrlPatterns;public Collection<ServletRegistrationBean<?>> getServletRegistrationBeans() {_		return this.servletRegistrationBeans__	};return,a,mutable,collection,of,the,link,servlet,registration,bean,that,the,filter,will,be,registered,against,link,servlet,registration,bean,s,return,the,servlet,registration,beans,see,set,servlet,names,see,set,url,patterns;public,collection,servlet,registration,bean,get,servlet,registration,beans,return,this,servlet,registration,beans
AbstractFilterRegistrationBean -> public Collection<ServletRegistrationBean<?>> getServletRegistrationBeans();1551262923;Return a mutable collection of the {@link ServletRegistrationBean} that the filter_will be registered against. {@link ServletRegistrationBean}s._@return the Servlet registration beans_@see #setServletNames_@see #setUrlPatterns;public Collection<ServletRegistrationBean<?>> getServletRegistrationBeans() {_		return this.servletRegistrationBeans__	};return,a,mutable,collection,of,the,link,servlet,registration,bean,that,the,filter,will,be,registered,against,link,servlet,registration,bean,s,return,the,servlet,registration,beans,see,set,servlet,names,see,set,url,patterns;public,collection,servlet,registration,bean,get,servlet,registration,beans,return,this,servlet,registration,beans
AbstractFilterRegistrationBean -> AbstractFilterRegistrationBean( 			ServletRegistrationBean<?>... servletRegistrationBeans);1507173536;Create a new instance to be registered with the specified_{@link ServletRegistrationBean}s._@param servletRegistrationBeans associate {@link ServletRegistrationBean}s;AbstractFilterRegistrationBean(_			ServletRegistrationBean<?>... servletRegistrationBeans) {_		Assert.notNull(servletRegistrationBeans,_				"ServletRegistrationBeans must not be null")__		Collections.addAll(this.servletRegistrationBeans, servletRegistrationBeans)__	};create,a,new,instance,to,be,registered,with,the,specified,link,servlet,registration,bean,s,param,servlet,registration,beans,associate,link,servlet,registration,bean,s;abstract,filter,registration,bean,servlet,registration,bean,servlet,registration,beans,assert,not,null,servlet,registration,beans,servlet,registration,beans,must,not,be,null,collections,add,all,this,servlet,registration,beans,servlet,registration,beans
AbstractFilterRegistrationBean -> AbstractFilterRegistrationBean( 			ServletRegistrationBean<?>... servletRegistrationBeans);1515477900;Create a new instance to be registered with the specified_{@link ServletRegistrationBean}s._@param servletRegistrationBeans associate {@link ServletRegistrationBean}s;AbstractFilterRegistrationBean(_			ServletRegistrationBean<?>... servletRegistrationBeans) {_		Assert.notNull(servletRegistrationBeans,_				"ServletRegistrationBeans must not be null")__		Collections.addAll(this.servletRegistrationBeans, servletRegistrationBeans)__	};create,a,new,instance,to,be,registered,with,the,specified,link,servlet,registration,bean,s,param,servlet,registration,beans,associate,link,servlet,registration,bean,s;abstract,filter,registration,bean,servlet,registration,bean,servlet,registration,beans,assert,not,null,servlet,registration,beans,servlet,registration,beans,must,not,be,null,collections,add,all,this,servlet,registration,beans,servlet,registration,beans
AbstractFilterRegistrationBean -> AbstractFilterRegistrationBean( 			ServletRegistrationBean<?>... servletRegistrationBeans);1515717909;Create a new instance to be registered with the specified_{@link ServletRegistrationBean}s._@param servletRegistrationBeans associate {@link ServletRegistrationBean}s;AbstractFilterRegistrationBean(_			ServletRegistrationBean<?>... servletRegistrationBeans) {_		Assert.notNull(servletRegistrationBeans,_				"ServletRegistrationBeans must not be null")__		Collections.addAll(this.servletRegistrationBeans, servletRegistrationBeans)__	};create,a,new,instance,to,be,registered,with,the,specified,link,servlet,registration,bean,s,param,servlet,registration,beans,associate,link,servlet,registration,bean,s;abstract,filter,registration,bean,servlet,registration,bean,servlet,registration,beans,assert,not,null,servlet,registration,beans,servlet,registration,beans,must,not,be,null,collections,add,all,this,servlet,registration,beans,servlet,registration,beans
AbstractFilterRegistrationBean -> AbstractFilterRegistrationBean( 			ServletRegistrationBean<?>... servletRegistrationBeans);1519362690;Create a new instance to be registered with the specified_{@link ServletRegistrationBean}s._@param servletRegistrationBeans associate {@link ServletRegistrationBean}s;AbstractFilterRegistrationBean(_			ServletRegistrationBean<?>... servletRegistrationBeans) {_		Assert.notNull(servletRegistrationBeans,_				"ServletRegistrationBeans must not be null")__		Collections.addAll(this.servletRegistrationBeans, servletRegistrationBeans)__	};create,a,new,instance,to,be,registered,with,the,specified,link,servlet,registration,bean,s,param,servlet,registration,beans,associate,link,servlet,registration,bean,s;abstract,filter,registration,bean,servlet,registration,bean,servlet,registration,beans,assert,not,null,servlet,registration,beans,servlet,registration,beans,must,not,be,null,collections,add,all,this,servlet,registration,beans,servlet,registration,beans
AbstractFilterRegistrationBean -> AbstractFilterRegistrationBean( 			ServletRegistrationBean<?>... servletRegistrationBeans);1522306440;Create a new instance to be registered with the specified_{@link ServletRegistrationBean}s._@param servletRegistrationBeans associate {@link ServletRegistrationBean}s;AbstractFilterRegistrationBean(_			ServletRegistrationBean<?>... servletRegistrationBeans) {_		Assert.notNull(servletRegistrationBeans,_				"ServletRegistrationBeans must not be null")__		Collections.addAll(this.servletRegistrationBeans, servletRegistrationBeans)__	};create,a,new,instance,to,be,registered,with,the,specified,link,servlet,registration,bean,s,param,servlet,registration,beans,associate,link,servlet,registration,bean,s;abstract,filter,registration,bean,servlet,registration,bean,servlet,registration,beans,assert,not,null,servlet,registration,beans,servlet,registration,beans,must,not,be,null,collections,add,all,this,servlet,registration,beans,servlet,registration,beans
AbstractFilterRegistrationBean -> AbstractFilterRegistrationBean( 			ServletRegistrationBean<?>... servletRegistrationBeans);1525963607;Create a new instance to be registered with the specified_{@link ServletRegistrationBean}s._@param servletRegistrationBeans associate {@link ServletRegistrationBean}s;AbstractFilterRegistrationBean(_			ServletRegistrationBean<?>... servletRegistrationBeans) {_		Assert.notNull(servletRegistrationBeans,_				"ServletRegistrationBeans must not be null")__		Collections.addAll(this.servletRegistrationBeans, servletRegistrationBeans)__	};create,a,new,instance,to,be,registered,with,the,specified,link,servlet,registration,bean,s,param,servlet,registration,beans,associate,link,servlet,registration,bean,s;abstract,filter,registration,bean,servlet,registration,bean,servlet,registration,beans,assert,not,null,servlet,registration,beans,servlet,registration,beans,must,not,be,null,collections,add,all,this,servlet,registration,beans,servlet,registration,beans
AbstractFilterRegistrationBean -> AbstractFilterRegistrationBean( 			ServletRegistrationBean<?>... servletRegistrationBeans);1539324803;Create a new instance to be registered with the specified_{@link ServletRegistrationBean}s._@param servletRegistrationBeans associate {@link ServletRegistrationBean}s;AbstractFilterRegistrationBean(_			ServletRegistrationBean<?>... servletRegistrationBeans) {_		Assert.notNull(servletRegistrationBeans,_				"ServletRegistrationBeans must not be null")__		Collections.addAll(this.servletRegistrationBeans, servletRegistrationBeans)__	};create,a,new,instance,to,be,registered,with,the,specified,link,servlet,registration,bean,s,param,servlet,registration,beans,associate,link,servlet,registration,bean,s;abstract,filter,registration,bean,servlet,registration,bean,servlet,registration,beans,assert,not,null,servlet,registration,beans,servlet,registration,beans,must,not,be,null,collections,add,all,this,servlet,registration,beans,servlet,registration,beans
AbstractFilterRegistrationBean -> AbstractFilterRegistrationBean( 			ServletRegistrationBean<?>... servletRegistrationBeans);1542792595;Create a new instance to be registered with the specified_{@link ServletRegistrationBean}s._@param servletRegistrationBeans associate {@link ServletRegistrationBean}s;AbstractFilterRegistrationBean(_			ServletRegistrationBean<?>... servletRegistrationBeans) {_		Assert.notNull(servletRegistrationBeans,_				"ServletRegistrationBeans must not be null")__		Collections.addAll(this.servletRegistrationBeans, servletRegistrationBeans)__	};create,a,new,instance,to,be,registered,with,the,specified,link,servlet,registration,bean,s,param,servlet,registration,beans,associate,link,servlet,registration,bean,s;abstract,filter,registration,bean,servlet,registration,bean,servlet,registration,beans,assert,not,null,servlet,registration,beans,servlet,registration,beans,must,not,be,null,collections,add,all,this,servlet,registration,beans,servlet,registration,beans
AbstractFilterRegistrationBean -> AbstractFilterRegistrationBean( 			ServletRegistrationBean<?>... servletRegistrationBeans);1543352081;Create a new instance to be registered with the specified_{@link ServletRegistrationBean}s._@param servletRegistrationBeans associate {@link ServletRegistrationBean}s;AbstractFilterRegistrationBean(_			ServletRegistrationBean<?>... servletRegistrationBeans) {_		Assert.notNull(servletRegistrationBeans,_				"ServletRegistrationBeans must not be null")__		Collections.addAll(this.servletRegistrationBeans, servletRegistrationBeans)__	};create,a,new,instance,to,be,registered,with,the,specified,link,servlet,registration,bean,s,param,servlet,registration,beans,associate,link,servlet,registration,bean,s;abstract,filter,registration,bean,servlet,registration,bean,servlet,registration,beans,assert,not,null,servlet,registration,beans,servlet,registration,beans,must,not,be,null,collections,add,all,this,servlet,registration,beans,servlet,registration,beans
AbstractFilterRegistrationBean -> AbstractFilterRegistrationBean( 			ServletRegistrationBean<?>... servletRegistrationBeans);1543561024;Create a new instance to be registered with the specified_{@link ServletRegistrationBean}s._@param servletRegistrationBeans associate {@link ServletRegistrationBean}s;AbstractFilterRegistrationBean(_			ServletRegistrationBean<?>... servletRegistrationBeans) {_		Assert.notNull(servletRegistrationBeans,_				"ServletRegistrationBeans must not be null")__		Collections.addAll(this.servletRegistrationBeans, servletRegistrationBeans)__	};create,a,new,instance,to,be,registered,with,the,specified,link,servlet,registration,bean,s,param,servlet,registration,beans,associate,link,servlet,registration,bean,s;abstract,filter,registration,bean,servlet,registration,bean,servlet,registration,beans,assert,not,null,servlet,registration,beans,servlet,registration,beans,must,not,be,null,collections,add,all,this,servlet,registration,beans,servlet,registration,beans
AbstractFilterRegistrationBean -> AbstractFilterRegistrationBean( 			ServletRegistrationBean<?>... servletRegistrationBeans);1551262923;Create a new instance to be registered with the specified_{@link ServletRegistrationBean}s._@param servletRegistrationBeans associate {@link ServletRegistrationBean}s;AbstractFilterRegistrationBean(_			ServletRegistrationBean<?>... servletRegistrationBeans) {_		Assert.notNull(servletRegistrationBeans,_				"ServletRegistrationBeans must not be null")__		Collections.addAll(this.servletRegistrationBeans, servletRegistrationBeans)__	};create,a,new,instance,to,be,registered,with,the,specified,link,servlet,registration,bean,s,param,servlet,registration,beans,associate,link,servlet,registration,bean,s;abstract,filter,registration,bean,servlet,registration,bean,servlet,registration,beans,assert,not,null,servlet,registration,beans,servlet,registration,beans,must,not,be,null,collections,add,all,this,servlet,registration,beans,servlet,registration,beans
AbstractFilterRegistrationBean -> public void setServletNames(Collection<String> servletNames);1507173536;Set servlet names that the filter will be registered against. This will replace any_previously specified servlet names._@param servletNames the servlet names_@see #setServletRegistrationBeans_@see #setUrlPatterns;public void setServletNames(Collection<String> servletNames) {_		Assert.notNull(servletNames, "ServletNames must not be null")__		this.servletNames = new LinkedHashSet<>(servletNames)__	};set,servlet,names,that,the,filter,will,be,registered,against,this,will,replace,any,previously,specified,servlet,names,param,servlet,names,the,servlet,names,see,set,servlet,registration,beans,see,set,url,patterns;public,void,set,servlet,names,collection,string,servlet,names,assert,not,null,servlet,names,servlet,names,must,not,be,null,this,servlet,names,new,linked,hash,set,servlet,names
AbstractFilterRegistrationBean -> public void setServletNames(Collection<String> servletNames);1515477900;Set servlet names that the filter will be registered against. This will replace any_previously specified servlet names._@param servletNames the servlet names_@see #setServletRegistrationBeans_@see #setUrlPatterns;public void setServletNames(Collection<String> servletNames) {_		Assert.notNull(servletNames, "ServletNames must not be null")__		this.servletNames = new LinkedHashSet<>(servletNames)__	};set,servlet,names,that,the,filter,will,be,registered,against,this,will,replace,any,previously,specified,servlet,names,param,servlet,names,the,servlet,names,see,set,servlet,registration,beans,see,set,url,patterns;public,void,set,servlet,names,collection,string,servlet,names,assert,not,null,servlet,names,servlet,names,must,not,be,null,this,servlet,names,new,linked,hash,set,servlet,names
AbstractFilterRegistrationBean -> public void setServletNames(Collection<String> servletNames);1515717909;Set servlet names that the filter will be registered against. This will replace any_previously specified servlet names._@param servletNames the servlet names_@see #setServletRegistrationBeans_@see #setUrlPatterns;public void setServletNames(Collection<String> servletNames) {_		Assert.notNull(servletNames, "ServletNames must not be null")__		this.servletNames = new LinkedHashSet<>(servletNames)__	};set,servlet,names,that,the,filter,will,be,registered,against,this,will,replace,any,previously,specified,servlet,names,param,servlet,names,the,servlet,names,see,set,servlet,registration,beans,see,set,url,patterns;public,void,set,servlet,names,collection,string,servlet,names,assert,not,null,servlet,names,servlet,names,must,not,be,null,this,servlet,names,new,linked,hash,set,servlet,names
AbstractFilterRegistrationBean -> public void setServletNames(Collection<String> servletNames);1519362690;Set servlet names that the filter will be registered against. This will replace any_previously specified servlet names._@param servletNames the servlet names_@see #setServletRegistrationBeans_@see #setUrlPatterns;public void setServletNames(Collection<String> servletNames) {_		Assert.notNull(servletNames, "ServletNames must not be null")__		this.servletNames = new LinkedHashSet<>(servletNames)__	};set,servlet,names,that,the,filter,will,be,registered,against,this,will,replace,any,previously,specified,servlet,names,param,servlet,names,the,servlet,names,see,set,servlet,registration,beans,see,set,url,patterns;public,void,set,servlet,names,collection,string,servlet,names,assert,not,null,servlet,names,servlet,names,must,not,be,null,this,servlet,names,new,linked,hash,set,servlet,names
AbstractFilterRegistrationBean -> public void setServletNames(Collection<String> servletNames);1522306440;Set servlet names that the filter will be registered against. This will replace any_previously specified servlet names._@param servletNames the servlet names_@see #setServletRegistrationBeans_@see #setUrlPatterns;public void setServletNames(Collection<String> servletNames) {_		Assert.notNull(servletNames, "ServletNames must not be null")__		this.servletNames = new LinkedHashSet<>(servletNames)__	};set,servlet,names,that,the,filter,will,be,registered,against,this,will,replace,any,previously,specified,servlet,names,param,servlet,names,the,servlet,names,see,set,servlet,registration,beans,see,set,url,patterns;public,void,set,servlet,names,collection,string,servlet,names,assert,not,null,servlet,names,servlet,names,must,not,be,null,this,servlet,names,new,linked,hash,set,servlet,names
AbstractFilterRegistrationBean -> public void setServletNames(Collection<String> servletNames);1525963607;Set servlet names that the filter will be registered against. This will replace any_previously specified servlet names._@param servletNames the servlet names_@see #setServletRegistrationBeans_@see #setUrlPatterns;public void setServletNames(Collection<String> servletNames) {_		Assert.notNull(servletNames, "ServletNames must not be null")__		this.servletNames = new LinkedHashSet<>(servletNames)__	};set,servlet,names,that,the,filter,will,be,registered,against,this,will,replace,any,previously,specified,servlet,names,param,servlet,names,the,servlet,names,see,set,servlet,registration,beans,see,set,url,patterns;public,void,set,servlet,names,collection,string,servlet,names,assert,not,null,servlet,names,servlet,names,must,not,be,null,this,servlet,names,new,linked,hash,set,servlet,names
AbstractFilterRegistrationBean -> public void setServletNames(Collection<String> servletNames);1539324803;Set servlet names that the filter will be registered against. This will replace any_previously specified servlet names._@param servletNames the servlet names_@see #setServletRegistrationBeans_@see #setUrlPatterns;public void setServletNames(Collection<String> servletNames) {_		Assert.notNull(servletNames, "ServletNames must not be null")__		this.servletNames = new LinkedHashSet<>(servletNames)__	};set,servlet,names,that,the,filter,will,be,registered,against,this,will,replace,any,previously,specified,servlet,names,param,servlet,names,the,servlet,names,see,set,servlet,registration,beans,see,set,url,patterns;public,void,set,servlet,names,collection,string,servlet,names,assert,not,null,servlet,names,servlet,names,must,not,be,null,this,servlet,names,new,linked,hash,set,servlet,names
AbstractFilterRegistrationBean -> public void setServletNames(Collection<String> servletNames);1542792595;Set servlet names that the filter will be registered against. This will replace any_previously specified servlet names._@param servletNames the servlet names_@see #setServletRegistrationBeans_@see #setUrlPatterns;public void setServletNames(Collection<String> servletNames) {_		Assert.notNull(servletNames, "ServletNames must not be null")__		this.servletNames = new LinkedHashSet<>(servletNames)__	};set,servlet,names,that,the,filter,will,be,registered,against,this,will,replace,any,previously,specified,servlet,names,param,servlet,names,the,servlet,names,see,set,servlet,registration,beans,see,set,url,patterns;public,void,set,servlet,names,collection,string,servlet,names,assert,not,null,servlet,names,servlet,names,must,not,be,null,this,servlet,names,new,linked,hash,set,servlet,names
AbstractFilterRegistrationBean -> public void setServletNames(Collection<String> servletNames);1543352081;Set servlet names that the filter will be registered against. This will replace any_previously specified servlet names._@param servletNames the servlet names_@see #setServletRegistrationBeans_@see #setUrlPatterns;public void setServletNames(Collection<String> servletNames) {_		Assert.notNull(servletNames, "ServletNames must not be null")__		this.servletNames = new LinkedHashSet<>(servletNames)__	};set,servlet,names,that,the,filter,will,be,registered,against,this,will,replace,any,previously,specified,servlet,names,param,servlet,names,the,servlet,names,see,set,servlet,registration,beans,see,set,url,patterns;public,void,set,servlet,names,collection,string,servlet,names,assert,not,null,servlet,names,servlet,names,must,not,be,null,this,servlet,names,new,linked,hash,set,servlet,names
AbstractFilterRegistrationBean -> public void setServletNames(Collection<String> servletNames);1543561024;Set servlet names that the filter will be registered against. This will replace any_previously specified servlet names._@param servletNames the servlet names_@see #setServletRegistrationBeans_@see #setUrlPatterns;public void setServletNames(Collection<String> servletNames) {_		Assert.notNull(servletNames, "ServletNames must not be null")__		this.servletNames = new LinkedHashSet<>(servletNames)__	};set,servlet,names,that,the,filter,will,be,registered,against,this,will,replace,any,previously,specified,servlet,names,param,servlet,names,the,servlet,names,see,set,servlet,registration,beans,see,set,url,patterns;public,void,set,servlet,names,collection,string,servlet,names,assert,not,null,servlet,names,servlet,names,must,not,be,null,this,servlet,names,new,linked,hash,set,servlet,names
AbstractFilterRegistrationBean -> public void setServletNames(Collection<String> servletNames);1551262923;Set servlet names that the filter will be registered against. This will replace any_previously specified servlet names._@param servletNames the servlet names_@see #setServletRegistrationBeans_@see #setUrlPatterns;public void setServletNames(Collection<String> servletNames) {_		Assert.notNull(servletNames, "ServletNames must not be null")__		this.servletNames = new LinkedHashSet<>(servletNames)__	};set,servlet,names,that,the,filter,will,be,registered,against,this,will,replace,any,previously,specified,servlet,names,param,servlet,names,the,servlet,names,see,set,servlet,registration,beans,see,set,url,patterns;public,void,set,servlet,names,collection,string,servlet,names,assert,not,null,servlet,names,servlet,names,must,not,be,null,this,servlet,names,new,linked,hash,set,servlet,names
AbstractFilterRegistrationBean -> public Collection<String> getServletNames();1507173536;Return a mutable collection of servlet names that the filter will be registered_against._@return the servlet names;public Collection<String> getServletNames() {_		return this.servletNames__	};return,a,mutable,collection,of,servlet,names,that,the,filter,will,be,registered,against,return,the,servlet,names;public,collection,string,get,servlet,names,return,this,servlet,names
AbstractFilterRegistrationBean -> public Collection<String> getServletNames();1515477900;Return a mutable collection of servlet names that the filter will be registered_against._@return the servlet names;public Collection<String> getServletNames() {_		return this.servletNames__	};return,a,mutable,collection,of,servlet,names,that,the,filter,will,be,registered,against,return,the,servlet,names;public,collection,string,get,servlet,names,return,this,servlet,names
AbstractFilterRegistrationBean -> public Collection<String> getServletNames();1515717909;Return a mutable collection of servlet names that the filter will be registered_against._@return the servlet names;public Collection<String> getServletNames() {_		return this.servletNames__	};return,a,mutable,collection,of,servlet,names,that,the,filter,will,be,registered,against,return,the,servlet,names;public,collection,string,get,servlet,names,return,this,servlet,names
AbstractFilterRegistrationBean -> public Collection<String> getServletNames();1519362690;Return a mutable collection of servlet names that the filter will be registered_against._@return the servlet names;public Collection<String> getServletNames() {_		return this.servletNames__	};return,a,mutable,collection,of,servlet,names,that,the,filter,will,be,registered,against,return,the,servlet,names;public,collection,string,get,servlet,names,return,this,servlet,names
AbstractFilterRegistrationBean -> public Collection<String> getServletNames();1522306440;Return a mutable collection of servlet names that the filter will be registered_against._@return the servlet names;public Collection<String> getServletNames() {_		return this.servletNames__	};return,a,mutable,collection,of,servlet,names,that,the,filter,will,be,registered,against,return,the,servlet,names;public,collection,string,get,servlet,names,return,this,servlet,names
AbstractFilterRegistrationBean -> public Collection<String> getServletNames();1525963607;Return a mutable collection of servlet names that the filter will be registered_against._@return the servlet names;public Collection<String> getServletNames() {_		return this.servletNames__	};return,a,mutable,collection,of,servlet,names,that,the,filter,will,be,registered,against,return,the,servlet,names;public,collection,string,get,servlet,names,return,this,servlet,names
AbstractFilterRegistrationBean -> public Collection<String> getServletNames();1539324803;Return a mutable collection of servlet names that the filter will be registered_against._@return the servlet names;public Collection<String> getServletNames() {_		return this.servletNames__	};return,a,mutable,collection,of,servlet,names,that,the,filter,will,be,registered,against,return,the,servlet,names;public,collection,string,get,servlet,names,return,this,servlet,names
AbstractFilterRegistrationBean -> public Collection<String> getServletNames();1542792595;Return a mutable collection of servlet names that the filter will be registered_against._@return the servlet names;public Collection<String> getServletNames() {_		return this.servletNames__	};return,a,mutable,collection,of,servlet,names,that,the,filter,will,be,registered,against,return,the,servlet,names;public,collection,string,get,servlet,names,return,this,servlet,names
AbstractFilterRegistrationBean -> public Collection<String> getServletNames();1543352081;Return a mutable collection of servlet names that the filter will be registered_against._@return the servlet names;public Collection<String> getServletNames() {_		return this.servletNames__	};return,a,mutable,collection,of,servlet,names,that,the,filter,will,be,registered,against,return,the,servlet,names;public,collection,string,get,servlet,names,return,this,servlet,names
AbstractFilterRegistrationBean -> public Collection<String> getServletNames();1543561024;Return a mutable collection of servlet names that the filter will be registered_against._@return the servlet names;public Collection<String> getServletNames() {_		return this.servletNames__	};return,a,mutable,collection,of,servlet,names,that,the,filter,will,be,registered,against,return,the,servlet,names;public,collection,string,get,servlet,names,return,this,servlet,names
AbstractFilterRegistrationBean -> public Collection<String> getServletNames();1551262923;Return a mutable collection of servlet names that the filter will be registered_against._@return the servlet names;public Collection<String> getServletNames() {_		return this.servletNames__	};return,a,mutable,collection,of,servlet,names,that,the,filter,will,be,registered,against,return,the,servlet,names;public,collection,string,get,servlet,names,return,this,servlet,names
AbstractFilterRegistrationBean -> public void addUrlPatterns(String... urlPatterns);1507173536;Add URL patterns that the filter will be registered against._@param urlPatterns the URL patterns;public void addUrlPatterns(String... urlPatterns) {_		Assert.notNull(urlPatterns, "UrlPatterns must not be null")__		Collections.addAll(this.urlPatterns, urlPatterns)__	};add,url,patterns,that,the,filter,will,be,registered,against,param,url,patterns,the,url,patterns;public,void,add,url,patterns,string,url,patterns,assert,not,null,url,patterns,url,patterns,must,not,be,null,collections,add,all,this,url,patterns,url,patterns
AbstractFilterRegistrationBean -> public void addUrlPatterns(String... urlPatterns);1515477900;Add URL patterns that the filter will be registered against._@param urlPatterns the URL patterns;public void addUrlPatterns(String... urlPatterns) {_		Assert.notNull(urlPatterns, "UrlPatterns must not be null")__		Collections.addAll(this.urlPatterns, urlPatterns)__	};add,url,patterns,that,the,filter,will,be,registered,against,param,url,patterns,the,url,patterns;public,void,add,url,patterns,string,url,patterns,assert,not,null,url,patterns,url,patterns,must,not,be,null,collections,add,all,this,url,patterns,url,patterns
AbstractFilterRegistrationBean -> public void addUrlPatterns(String... urlPatterns);1515717909;Add URL patterns that the filter will be registered against._@param urlPatterns the URL patterns;public void addUrlPatterns(String... urlPatterns) {_		Assert.notNull(urlPatterns, "UrlPatterns must not be null")__		Collections.addAll(this.urlPatterns, urlPatterns)__	};add,url,patterns,that,the,filter,will,be,registered,against,param,url,patterns,the,url,patterns;public,void,add,url,patterns,string,url,patterns,assert,not,null,url,patterns,url,patterns,must,not,be,null,collections,add,all,this,url,patterns,url,patterns
AbstractFilterRegistrationBean -> public void addUrlPatterns(String... urlPatterns);1519362690;Add URL patterns that the filter will be registered against._@param urlPatterns the URL patterns;public void addUrlPatterns(String... urlPatterns) {_		Assert.notNull(urlPatterns, "UrlPatterns must not be null")__		Collections.addAll(this.urlPatterns, urlPatterns)__	};add,url,patterns,that,the,filter,will,be,registered,against,param,url,patterns,the,url,patterns;public,void,add,url,patterns,string,url,patterns,assert,not,null,url,patterns,url,patterns,must,not,be,null,collections,add,all,this,url,patterns,url,patterns
AbstractFilterRegistrationBean -> public void addUrlPatterns(String... urlPatterns);1522306440;Add URL patterns that the filter will be registered against._@param urlPatterns the URL patterns;public void addUrlPatterns(String... urlPatterns) {_		Assert.notNull(urlPatterns, "UrlPatterns must not be null")__		Collections.addAll(this.urlPatterns, urlPatterns)__	};add,url,patterns,that,the,filter,will,be,registered,against,param,url,patterns,the,url,patterns;public,void,add,url,patterns,string,url,patterns,assert,not,null,url,patterns,url,patterns,must,not,be,null,collections,add,all,this,url,patterns,url,patterns
AbstractFilterRegistrationBean -> public void addUrlPatterns(String... urlPatterns);1525963607;Add URL patterns, as defined in the Servlet specification, that the filter will be_registered against._@param urlPatterns the URL patterns;public void addUrlPatterns(String... urlPatterns) {_		Assert.notNull(urlPatterns, "UrlPatterns must not be null")__		Collections.addAll(this.urlPatterns, urlPatterns)__	};add,url,patterns,as,defined,in,the,servlet,specification,that,the,filter,will,be,registered,against,param,url,patterns,the,url,patterns;public,void,add,url,patterns,string,url,patterns,assert,not,null,url,patterns,url,patterns,must,not,be,null,collections,add,all,this,url,patterns,url,patterns
AbstractFilterRegistrationBean -> public void addUrlPatterns(String... urlPatterns);1539324803;Add URL patterns, as defined in the Servlet specification, that the filter will be_registered against._@param urlPatterns the URL patterns;public void addUrlPatterns(String... urlPatterns) {_		Assert.notNull(urlPatterns, "UrlPatterns must not be null")__		Collections.addAll(this.urlPatterns, urlPatterns)__	};add,url,patterns,as,defined,in,the,servlet,specification,that,the,filter,will,be,registered,against,param,url,patterns,the,url,patterns;public,void,add,url,patterns,string,url,patterns,assert,not,null,url,patterns,url,patterns,must,not,be,null,collections,add,all,this,url,patterns,url,patterns
AbstractFilterRegistrationBean -> public void addUrlPatterns(String... urlPatterns);1542792595;Add URL patterns, as defined in the Servlet specification, that the filter will be_registered against._@param urlPatterns the URL patterns;public void addUrlPatterns(String... urlPatterns) {_		Assert.notNull(urlPatterns, "UrlPatterns must not be null")__		Collections.addAll(this.urlPatterns, urlPatterns)__	};add,url,patterns,as,defined,in,the,servlet,specification,that,the,filter,will,be,registered,against,param,url,patterns,the,url,patterns;public,void,add,url,patterns,string,url,patterns,assert,not,null,url,patterns,url,patterns,must,not,be,null,collections,add,all,this,url,patterns,url,patterns
AbstractFilterRegistrationBean -> public void addUrlPatterns(String... urlPatterns);1543352081;Add URL patterns, as defined in the Servlet specification, that the filter will be_registered against._@param urlPatterns the URL patterns;public void addUrlPatterns(String... urlPatterns) {_		Assert.notNull(urlPatterns, "UrlPatterns must not be null")__		Collections.addAll(this.urlPatterns, urlPatterns)__	};add,url,patterns,as,defined,in,the,servlet,specification,that,the,filter,will,be,registered,against,param,url,patterns,the,url,patterns;public,void,add,url,patterns,string,url,patterns,assert,not,null,url,patterns,url,patterns,must,not,be,null,collections,add,all,this,url,patterns,url,patterns
AbstractFilterRegistrationBean -> public void addUrlPatterns(String... urlPatterns);1543561024;Add URL patterns, as defined in the Servlet specification, that the filter will be_registered against._@param urlPatterns the URL patterns;public void addUrlPatterns(String... urlPatterns) {_		Assert.notNull(urlPatterns, "UrlPatterns must not be null")__		Collections.addAll(this.urlPatterns, urlPatterns)__	};add,url,patterns,as,defined,in,the,servlet,specification,that,the,filter,will,be,registered,against,param,url,patterns,the,url,patterns;public,void,add,url,patterns,string,url,patterns,assert,not,null,url,patterns,url,patterns,must,not,be,null,collections,add,all,this,url,patterns,url,patterns
AbstractFilterRegistrationBean -> public void addUrlPatterns(String... urlPatterns);1551262923;Add URL patterns, as defined in the Servlet specification, that the filter will be_registered against._@param urlPatterns the URL patterns;public void addUrlPatterns(String... urlPatterns) {_		Assert.notNull(urlPatterns, "UrlPatterns must not be null")__		Collections.addAll(this.urlPatterns, urlPatterns)__	};add,url,patterns,as,defined,in,the,servlet,specification,that,the,filter,will,be,registered,against,param,url,patterns,the,url,patterns;public,void,add,url,patterns,string,url,patterns,assert,not,null,url,patterns,url,patterns,must,not,be,null,collections,add,all,this,url,patterns,url,patterns
AbstractFilterRegistrationBean -> public abstract T getFilter()_;1507173536;Return the {@link Filter} to be registered._@return the filter;public abstract T getFilter()_;return,the,link,filter,to,be,registered,return,the,filter;public,abstract,t,get,filter
AbstractFilterRegistrationBean -> public abstract T getFilter()_;1515477900;Return the {@link Filter} to be registered._@return the filter;public abstract T getFilter()_;return,the,link,filter,to,be,registered,return,the,filter;public,abstract,t,get,filter
AbstractFilterRegistrationBean -> public abstract T getFilter()_;1515717909;Return the {@link Filter} to be registered._@return the filter;public abstract T getFilter()_;return,the,link,filter,to,be,registered,return,the,filter;public,abstract,t,get,filter
AbstractFilterRegistrationBean -> public abstract T getFilter()_;1519362690;Return the {@link Filter} to be registered._@return the filter;public abstract T getFilter()_;return,the,link,filter,to,be,registered,return,the,filter;public,abstract,t,get,filter
AbstractFilterRegistrationBean -> public abstract T getFilter()_;1522306440;Return the {@link Filter} to be registered._@return the filter;public abstract T getFilter()_;return,the,link,filter,to,be,registered,return,the,filter;public,abstract,t,get,filter
AbstractFilterRegistrationBean -> public abstract T getFilter()_;1525963607;Return the {@link Filter} to be registered._@return the filter;public abstract T getFilter()_;return,the,link,filter,to,be,registered,return,the,filter;public,abstract,t,get,filter
AbstractFilterRegistrationBean -> public abstract T getFilter()_;1539324803;Return the {@link Filter} to be registered._@return the filter;public abstract T getFilter()_;return,the,link,filter,to,be,registered,return,the,filter;public,abstract,t,get,filter
AbstractFilterRegistrationBean -> public abstract T getFilter()_;1542792595;Return the {@link Filter} to be registered._@return the filter;public abstract T getFilter()_;return,the,link,filter,to,be,registered,return,the,filter;public,abstract,t,get,filter
AbstractFilterRegistrationBean -> public abstract T getFilter()_;1543352081;Return the {@link Filter} to be registered._@return the filter;public abstract T getFilter()_;return,the,link,filter,to,be,registered,return,the,filter;public,abstract,t,get,filter
AbstractFilterRegistrationBean -> public abstract T getFilter()_;1543561024;Return the {@link Filter} to be registered._@return the filter;public abstract T getFilter()_;return,the,link,filter,to,be,registered,return,the,filter;public,abstract,t,get,filter
AbstractFilterRegistrationBean -> public abstract T getFilter()_;1551262923;Return the {@link Filter} to be registered._@return the filter;public abstract T getFilter()_;return,the,link,filter,to,be,registered,return,the,filter;public,abstract,t,get,filter
AbstractFilterRegistrationBean -> @Override 	protected void configure(FilterRegistration.Dynamic registration);1515477900;Configure registration settings. Subclasses can override this method to perform_additional configuration if required._@param registration the registration;@Override_	protected void configure(FilterRegistration.Dynamic registration) {_		super.configure(registration)__		EnumSet<DispatcherType> dispatcherTypes = this.dispatcherTypes__		if (dispatcherTypes == null) {_			dispatcherTypes = EnumSet.of(DispatcherType.REQUEST)__		}_		Set<String> servletNames = new LinkedHashSet<>()__		for (ServletRegistrationBean<?> servletRegistrationBean : this.servletRegistrationBeans) {_			servletNames.add(servletRegistrationBean.getServletName())__		}_		servletNames.addAll(this.servletNames)__		if (servletNames.isEmpty() && this.urlPatterns.isEmpty()) {_			this.logger.info("Mapping filter: '" + registration.getName() + "' to: "_					+ Arrays.asList(DEFAULT_URL_MAPPINGS))__			registration.addMappingForUrlPatterns(dispatcherTypes, this.matchAfter,_					DEFAULT_URL_MAPPINGS)__		}_		else {_			if (!servletNames.isEmpty()) {_				this.logger.info("Mapping filter: '" + registration.getName()_						+ "' to servlets: " + servletNames)__				registration.addMappingForServletNames(dispatcherTypes, this.matchAfter,_						servletNames.toArray(new String[servletNames.size()]))__			}_			if (!this.urlPatterns.isEmpty()) {_				this.logger.info("Mapping filter: '" + registration.getName()_						+ "' to urls: " + this.urlPatterns)__				registration.addMappingForUrlPatterns(dispatcherTypes, this.matchAfter,_						this.urlPatterns.toArray(new String[this.urlPatterns.size()]))__			}_		}_	};configure,registration,settings,subclasses,can,override,this,method,to,perform,additional,configuration,if,required,param,registration,the,registration;override,protected,void,configure,filter,registration,dynamic,registration,super,configure,registration,enum,set,dispatcher,type,dispatcher,types,this,dispatcher,types,if,dispatcher,types,null,dispatcher,types,enum,set,of,dispatcher,type,request,set,string,servlet,names,new,linked,hash,set,for,servlet,registration,bean,servlet,registration,bean,this,servlet,registration,beans,servlet,names,add,servlet,registration,bean,get,servlet,name,servlet,names,add,all,this,servlet,names,if,servlet,names,is,empty,this,url,patterns,is,empty,this,logger,info,mapping,filter,registration,get,name,to,arrays,as,list,registration,add,mapping,for,url,patterns,dispatcher,types,this,match,after,else,if,servlet,names,is,empty,this,logger,info,mapping,filter,registration,get,name,to,servlets,servlet,names,registration,add,mapping,for,servlet,names,dispatcher,types,this,match,after,servlet,names,to,array,new,string,servlet,names,size,if,this,url,patterns,is,empty,this,logger,info,mapping,filter,registration,get,name,to,urls,this,url,patterns,registration,add,mapping,for,url,patterns,dispatcher,types,this,match,after,this,url,patterns,to,array,new,string,this,url,patterns,size
AbstractFilterRegistrationBean -> @Override 	protected void configure(FilterRegistration.Dynamic registration);1515717909;Configure registration settings. Subclasses can override this method to perform_additional configuration if required._@param registration the registration;@Override_	protected void configure(FilterRegistration.Dynamic registration) {_		super.configure(registration)__		EnumSet<DispatcherType> dispatcherTypes = this.dispatcherTypes__		if (dispatcherTypes == null) {_			dispatcherTypes = EnumSet.of(DispatcherType.REQUEST)__		}_		Set<String> servletNames = new LinkedHashSet<>()__		for (ServletRegistrationBean<?> servletRegistrationBean : this.servletRegistrationBeans) {_			servletNames.add(servletRegistrationBean.getServletName())__		}_		servletNames.addAll(this.servletNames)__		if (servletNames.isEmpty() && this.urlPatterns.isEmpty()) {_			this.logger.info("Mapping filter: '" + registration.getName() + "' to: "_					+ Arrays.asList(DEFAULT_URL_MAPPINGS))__			registration.addMappingForUrlPatterns(dispatcherTypes, this.matchAfter,_					DEFAULT_URL_MAPPINGS)__		}_		else {_			if (!servletNames.isEmpty()) {_				this.logger.info("Mapping filter: '" + registration.getName()_						+ "' to servlets: " + servletNames)__				registration.addMappingForServletNames(dispatcherTypes, this.matchAfter,_						servletNames.toArray(new String[servletNames.size()]))__			}_			if (!this.urlPatterns.isEmpty()) {_				this.logger.info("Mapping filter: '" + registration.getName()_						+ "' to urls: " + this.urlPatterns)__				registration.addMappingForUrlPatterns(dispatcherTypes, this.matchAfter,_						this.urlPatterns.toArray(new String[this.urlPatterns.size()]))__			}_		}_	};configure,registration,settings,subclasses,can,override,this,method,to,perform,additional,configuration,if,required,param,registration,the,registration;override,protected,void,configure,filter,registration,dynamic,registration,super,configure,registration,enum,set,dispatcher,type,dispatcher,types,this,dispatcher,types,if,dispatcher,types,null,dispatcher,types,enum,set,of,dispatcher,type,request,set,string,servlet,names,new,linked,hash,set,for,servlet,registration,bean,servlet,registration,bean,this,servlet,registration,beans,servlet,names,add,servlet,registration,bean,get,servlet,name,servlet,names,add,all,this,servlet,names,if,servlet,names,is,empty,this,url,patterns,is,empty,this,logger,info,mapping,filter,registration,get,name,to,arrays,as,list,registration,add,mapping,for,url,patterns,dispatcher,types,this,match,after,else,if,servlet,names,is,empty,this,logger,info,mapping,filter,registration,get,name,to,servlets,servlet,names,registration,add,mapping,for,servlet,names,dispatcher,types,this,match,after,servlet,names,to,array,new,string,servlet,names,size,if,this,url,patterns,is,empty,this,logger,info,mapping,filter,registration,get,name,to,urls,this,url,patterns,registration,add,mapping,for,url,patterns,dispatcher,types,this,match,after,this,url,patterns,to,array,new,string,this,url,patterns,size
AbstractFilterRegistrationBean -> @Override 	protected void configure(FilterRegistration.Dynamic registration);1519362690;Configure registration settings. Subclasses can override this method to perform_additional configuration if required._@param registration the registration;@Override_	protected void configure(FilterRegistration.Dynamic registration) {_		super.configure(registration)__		EnumSet<DispatcherType> dispatcherTypes = this.dispatcherTypes__		if (dispatcherTypes == null) {_			dispatcherTypes = EnumSet.of(DispatcherType.REQUEST)__		}_		Set<String> servletNames = new LinkedHashSet<>()__		for (ServletRegistrationBean<?> servletRegistrationBean : this.servletRegistrationBeans) {_			servletNames.add(servletRegistrationBean.getServletName())__		}_		servletNames.addAll(this.servletNames)__		if (servletNames.isEmpty() && this.urlPatterns.isEmpty()) {_			this.logger.info("Mapping filter: '" + registration.getName() + "' to: "_					+ Arrays.asList(DEFAULT_URL_MAPPINGS))__			registration.addMappingForUrlPatterns(dispatcherTypes, this.matchAfter,_					DEFAULT_URL_MAPPINGS)__		}_		else {_			if (!servletNames.isEmpty()) {_				this.logger.info("Mapping filter: '" + registration.getName()_						+ "' to servlets: " + servletNames)__				registration.addMappingForServletNames(dispatcherTypes, this.matchAfter,_						StringUtils.toStringArray(servletNames))__			}_			if (!this.urlPatterns.isEmpty()) {_				this.logger.info("Mapping filter: '" + registration.getName()_						+ "' to urls: " + this.urlPatterns)__				registration.addMappingForUrlPatterns(dispatcherTypes, this.matchAfter,_						StringUtils.toStringArray(this.urlPatterns))__			}_		}_	};configure,registration,settings,subclasses,can,override,this,method,to,perform,additional,configuration,if,required,param,registration,the,registration;override,protected,void,configure,filter,registration,dynamic,registration,super,configure,registration,enum,set,dispatcher,type,dispatcher,types,this,dispatcher,types,if,dispatcher,types,null,dispatcher,types,enum,set,of,dispatcher,type,request,set,string,servlet,names,new,linked,hash,set,for,servlet,registration,bean,servlet,registration,bean,this,servlet,registration,beans,servlet,names,add,servlet,registration,bean,get,servlet,name,servlet,names,add,all,this,servlet,names,if,servlet,names,is,empty,this,url,patterns,is,empty,this,logger,info,mapping,filter,registration,get,name,to,arrays,as,list,registration,add,mapping,for,url,patterns,dispatcher,types,this,match,after,else,if,servlet,names,is,empty,this,logger,info,mapping,filter,registration,get,name,to,servlets,servlet,names,registration,add,mapping,for,servlet,names,dispatcher,types,this,match,after,string,utils,to,string,array,servlet,names,if,this,url,patterns,is,empty,this,logger,info,mapping,filter,registration,get,name,to,urls,this,url,patterns,registration,add,mapping,for,url,patterns,dispatcher,types,this,match,after,string,utils,to,string,array,this,url,patterns
AbstractFilterRegistrationBean -> @Override 	protected void configure(FilterRegistration.Dynamic registration);1522306440;Configure registration settings. Subclasses can override this method to perform_additional configuration if required._@param registration the registration;@Override_	protected void configure(FilterRegistration.Dynamic registration) {_		super.configure(registration)__		EnumSet<DispatcherType> dispatcherTypes = this.dispatcherTypes__		if (dispatcherTypes == null) {_			dispatcherTypes = EnumSet.of(DispatcherType.REQUEST)__		}_		Set<String> servletNames = new LinkedHashSet<>()__		for (ServletRegistrationBean<?> servletRegistrationBean : this.servletRegistrationBeans) {_			servletNames.add(servletRegistrationBean.getServletName())__		}_		servletNames.addAll(this.servletNames)__		if (servletNames.isEmpty() && this.urlPatterns.isEmpty()) {_			this.logger.info("Mapping filter: '" + registration.getName() + "' to: "_					+ Arrays.asList(DEFAULT_URL_MAPPINGS))__			registration.addMappingForUrlPatterns(dispatcherTypes, this.matchAfter,_					DEFAULT_URL_MAPPINGS)__		}_		else {_			if (!servletNames.isEmpty()) {_				this.logger.info("Mapping filter: '" + registration.getName()_						+ "' to servlets: " + servletNames)__				registration.addMappingForServletNames(dispatcherTypes, this.matchAfter,_						StringUtils.toStringArray(servletNames))__			}_			if (!this.urlPatterns.isEmpty()) {_				this.logger.info("Mapping filter: '" + registration.getName()_						+ "' to urls: " + this.urlPatterns)__				registration.addMappingForUrlPatterns(dispatcherTypes, this.matchAfter,_						StringUtils.toStringArray(this.urlPatterns))__			}_		}_	};configure,registration,settings,subclasses,can,override,this,method,to,perform,additional,configuration,if,required,param,registration,the,registration;override,protected,void,configure,filter,registration,dynamic,registration,super,configure,registration,enum,set,dispatcher,type,dispatcher,types,this,dispatcher,types,if,dispatcher,types,null,dispatcher,types,enum,set,of,dispatcher,type,request,set,string,servlet,names,new,linked,hash,set,for,servlet,registration,bean,servlet,registration,bean,this,servlet,registration,beans,servlet,names,add,servlet,registration,bean,get,servlet,name,servlet,names,add,all,this,servlet,names,if,servlet,names,is,empty,this,url,patterns,is,empty,this,logger,info,mapping,filter,registration,get,name,to,arrays,as,list,registration,add,mapping,for,url,patterns,dispatcher,types,this,match,after,else,if,servlet,names,is,empty,this,logger,info,mapping,filter,registration,get,name,to,servlets,servlet,names,registration,add,mapping,for,servlet,names,dispatcher,types,this,match,after,string,utils,to,string,array,servlet,names,if,this,url,patterns,is,empty,this,logger,info,mapping,filter,registration,get,name,to,urls,this,url,patterns,registration,add,mapping,for,url,patterns,dispatcher,types,this,match,after,string,utils,to,string,array,this,url,patterns
AbstractFilterRegistrationBean -> @Override 	protected void configure(FilterRegistration.Dynamic registration);1525963607;Configure registration settings. Subclasses can override this method to perform_additional configuration if required._@param registration the registration;@Override_	protected void configure(FilterRegistration.Dynamic registration) {_		super.configure(registration)__		EnumSet<DispatcherType> dispatcherTypes = this.dispatcherTypes__		if (dispatcherTypes == null) {_			dispatcherTypes = EnumSet.of(DispatcherType.REQUEST)__		}_		Set<String> servletNames = new LinkedHashSet<>()__		for (ServletRegistrationBean<?> servletRegistrationBean : this.servletRegistrationBeans) {_			servletNames.add(servletRegistrationBean.getServletName())__		}_		servletNames.addAll(this.servletNames)__		if (servletNames.isEmpty() && this.urlPatterns.isEmpty()) {_			this.logger.info("Mapping filter: '" + registration.getName() + "' to: "_					+ Arrays.asList(DEFAULT_URL_MAPPINGS))__			registration.addMappingForUrlPatterns(dispatcherTypes, this.matchAfter,_					DEFAULT_URL_MAPPINGS)__		}_		else {_			if (!servletNames.isEmpty()) {_				this.logger.info("Mapping filter: '" + registration.getName()_						+ "' to servlets: " + servletNames)__				registration.addMappingForServletNames(dispatcherTypes, this.matchAfter,_						StringUtils.toStringArray(servletNames))__			}_			if (!this.urlPatterns.isEmpty()) {_				this.logger.info("Mapping filter: '" + registration.getName()_						+ "' to urls: " + this.urlPatterns)__				registration.addMappingForUrlPatterns(dispatcherTypes, this.matchAfter,_						StringUtils.toStringArray(this.urlPatterns))__			}_		}_	};configure,registration,settings,subclasses,can,override,this,method,to,perform,additional,configuration,if,required,param,registration,the,registration;override,protected,void,configure,filter,registration,dynamic,registration,super,configure,registration,enum,set,dispatcher,type,dispatcher,types,this,dispatcher,types,if,dispatcher,types,null,dispatcher,types,enum,set,of,dispatcher,type,request,set,string,servlet,names,new,linked,hash,set,for,servlet,registration,bean,servlet,registration,bean,this,servlet,registration,beans,servlet,names,add,servlet,registration,bean,get,servlet,name,servlet,names,add,all,this,servlet,names,if,servlet,names,is,empty,this,url,patterns,is,empty,this,logger,info,mapping,filter,registration,get,name,to,arrays,as,list,registration,add,mapping,for,url,patterns,dispatcher,types,this,match,after,else,if,servlet,names,is,empty,this,logger,info,mapping,filter,registration,get,name,to,servlets,servlet,names,registration,add,mapping,for,servlet,names,dispatcher,types,this,match,after,string,utils,to,string,array,servlet,names,if,this,url,patterns,is,empty,this,logger,info,mapping,filter,registration,get,name,to,urls,this,url,patterns,registration,add,mapping,for,url,patterns,dispatcher,types,this,match,after,string,utils,to,string,array,this,url,patterns
AbstractFilterRegistrationBean -> @Override 	protected void configure(FilterRegistration.Dynamic registration);1539324803;Configure registration settings. Subclasses can override this method to perform_additional configuration if required._@param registration the registration;@Override_	protected void configure(FilterRegistration.Dynamic registration) {_		super.configure(registration)__		EnumSet<DispatcherType> dispatcherTypes = this.dispatcherTypes__		if (dispatcherTypes == null) {_			dispatcherTypes = EnumSet.of(DispatcherType.REQUEST)__		}_		Set<String> servletNames = new LinkedHashSet<>()__		for (ServletRegistrationBean<?> servletRegistrationBean : this.servletRegistrationBeans) {_			servletNames.add(servletRegistrationBean.getServletName())__		}_		servletNames.addAll(this.servletNames)__		if (servletNames.isEmpty() && this.urlPatterns.isEmpty()) {_			this.logger.info("Mapping filter: '" + registration.getName() + "' to: "_					+ Arrays.asList(DEFAULT_URL_MAPPINGS))__			registration.addMappingForUrlPatterns(dispatcherTypes, this.matchAfter,_					DEFAULT_URL_MAPPINGS)__		}_		else {_			if (!servletNames.isEmpty()) {_				this.logger.info("Mapping filter: '" + registration.getName()_						+ "' to servlets: " + servletNames)__				registration.addMappingForServletNames(dispatcherTypes, this.matchAfter,_						StringUtils.toStringArray(servletNames))__			}_			if (!this.urlPatterns.isEmpty()) {_				this.logger.info("Mapping filter: '" + registration.getName()_						+ "' to urls: " + this.urlPatterns)__				registration.addMappingForUrlPatterns(dispatcherTypes, this.matchAfter,_						StringUtils.toStringArray(this.urlPatterns))__			}_		}_	};configure,registration,settings,subclasses,can,override,this,method,to,perform,additional,configuration,if,required,param,registration,the,registration;override,protected,void,configure,filter,registration,dynamic,registration,super,configure,registration,enum,set,dispatcher,type,dispatcher,types,this,dispatcher,types,if,dispatcher,types,null,dispatcher,types,enum,set,of,dispatcher,type,request,set,string,servlet,names,new,linked,hash,set,for,servlet,registration,bean,servlet,registration,bean,this,servlet,registration,beans,servlet,names,add,servlet,registration,bean,get,servlet,name,servlet,names,add,all,this,servlet,names,if,servlet,names,is,empty,this,url,patterns,is,empty,this,logger,info,mapping,filter,registration,get,name,to,arrays,as,list,registration,add,mapping,for,url,patterns,dispatcher,types,this,match,after,else,if,servlet,names,is,empty,this,logger,info,mapping,filter,registration,get,name,to,servlets,servlet,names,registration,add,mapping,for,servlet,names,dispatcher,types,this,match,after,string,utils,to,string,array,servlet,names,if,this,url,patterns,is,empty,this,logger,info,mapping,filter,registration,get,name,to,urls,this,url,patterns,registration,add,mapping,for,url,patterns,dispatcher,types,this,match,after,string,utils,to,string,array,this,url,patterns
AbstractFilterRegistrationBean -> @Override 	protected void configure(FilterRegistration.Dynamic registration);1542792595;Configure registration settings. Subclasses can override this method to perform_additional configuration if required._@param registration the registration;@Override_	protected void configure(FilterRegistration.Dynamic registration) {_		super.configure(registration)__		EnumSet<DispatcherType> dispatcherTypes = this.dispatcherTypes__		if (dispatcherTypes == null) {_			dispatcherTypes = EnumSet.of(DispatcherType.REQUEST)__		}_		Set<String> servletNames = new LinkedHashSet<>()__		for (ServletRegistrationBean<?> servletRegistrationBean : this.servletRegistrationBeans) {_			servletNames.add(servletRegistrationBean.getServletName())__		}_		servletNames.addAll(this.servletNames)__		if (servletNames.isEmpty() && this.urlPatterns.isEmpty()) {_			registration.addMappingForUrlPatterns(dispatcherTypes, this.matchAfter,_					DEFAULT_URL_MAPPINGS)__		}_		else {_			if (!servletNames.isEmpty()) {_				registration.addMappingForServletNames(dispatcherTypes, this.matchAfter,_						StringUtils.toStringArray(servletNames))__			}_			if (!this.urlPatterns.isEmpty()) {_				registration.addMappingForUrlPatterns(dispatcherTypes, this.matchAfter,_						StringUtils.toStringArray(this.urlPatterns))__			}_		}_	};configure,registration,settings,subclasses,can,override,this,method,to,perform,additional,configuration,if,required,param,registration,the,registration;override,protected,void,configure,filter,registration,dynamic,registration,super,configure,registration,enum,set,dispatcher,type,dispatcher,types,this,dispatcher,types,if,dispatcher,types,null,dispatcher,types,enum,set,of,dispatcher,type,request,set,string,servlet,names,new,linked,hash,set,for,servlet,registration,bean,servlet,registration,bean,this,servlet,registration,beans,servlet,names,add,servlet,registration,bean,get,servlet,name,servlet,names,add,all,this,servlet,names,if,servlet,names,is,empty,this,url,patterns,is,empty,registration,add,mapping,for,url,patterns,dispatcher,types,this,match,after,else,if,servlet,names,is,empty,registration,add,mapping,for,servlet,names,dispatcher,types,this,match,after,string,utils,to,string,array,servlet,names,if,this,url,patterns,is,empty,registration,add,mapping,for,url,patterns,dispatcher,types,this,match,after,string,utils,to,string,array,this,url,patterns
AbstractFilterRegistrationBean -> @Override 	protected void configure(FilterRegistration.Dynamic registration);1543352081;Configure registration settings. Subclasses can override this method to perform_additional configuration if required._@param registration the registration;@Override_	protected void configure(FilterRegistration.Dynamic registration) {_		super.configure(registration)__		EnumSet<DispatcherType> dispatcherTypes = this.dispatcherTypes__		if (dispatcherTypes == null) {_			dispatcherTypes = EnumSet.of(DispatcherType.REQUEST)__		}_		Set<String> servletNames = new LinkedHashSet<>()__		for (ServletRegistrationBean<?> servletRegistrationBean : this.servletRegistrationBeans) {_			servletNames.add(servletRegistrationBean.getServletName())__		}_		servletNames.addAll(this.servletNames)__		if (servletNames.isEmpty() && this.urlPatterns.isEmpty()) {_			registration.addMappingForUrlPatterns(dispatcherTypes, this.matchAfter,_					DEFAULT_URL_MAPPINGS)__		}_		else {_			if (!servletNames.isEmpty()) {_				registration.addMappingForServletNames(dispatcherTypes, this.matchAfter,_						StringUtils.toStringArray(servletNames))__			}_			if (!this.urlPatterns.isEmpty()) {_				registration.addMappingForUrlPatterns(dispatcherTypes, this.matchAfter,_						StringUtils.toStringArray(this.urlPatterns))__			}_		}_	};configure,registration,settings,subclasses,can,override,this,method,to,perform,additional,configuration,if,required,param,registration,the,registration;override,protected,void,configure,filter,registration,dynamic,registration,super,configure,registration,enum,set,dispatcher,type,dispatcher,types,this,dispatcher,types,if,dispatcher,types,null,dispatcher,types,enum,set,of,dispatcher,type,request,set,string,servlet,names,new,linked,hash,set,for,servlet,registration,bean,servlet,registration,bean,this,servlet,registration,beans,servlet,names,add,servlet,registration,bean,get,servlet,name,servlet,names,add,all,this,servlet,names,if,servlet,names,is,empty,this,url,patterns,is,empty,registration,add,mapping,for,url,patterns,dispatcher,types,this,match,after,else,if,servlet,names,is,empty,registration,add,mapping,for,servlet,names,dispatcher,types,this,match,after,string,utils,to,string,array,servlet,names,if,this,url,patterns,is,empty,registration,add,mapping,for,url,patterns,dispatcher,types,this,match,after,string,utils,to,string,array,this,url,patterns
AbstractFilterRegistrationBean -> @Override 	protected void configure(FilterRegistration.Dynamic registration);1543561024;Configure registration settings. Subclasses can override this method to perform_additional configuration if required._@param registration the registration;@Override_	protected void configure(FilterRegistration.Dynamic registration) {_		super.configure(registration)__		EnumSet<DispatcherType> dispatcherTypes = this.dispatcherTypes__		if (dispatcherTypes == null) {_			dispatcherTypes = EnumSet.of(DispatcherType.REQUEST)__		}_		Set<String> servletNames = new LinkedHashSet<>()__		for (ServletRegistrationBean<?> servletRegistrationBean : this.servletRegistrationBeans) {_			servletNames.add(servletRegistrationBean.getServletName())__		}_		servletNames.addAll(this.servletNames)__		if (servletNames.isEmpty() && this.urlPatterns.isEmpty()) {_			registration.addMappingForUrlPatterns(dispatcherTypes, this.matchAfter,_					DEFAULT_URL_MAPPINGS)__		}_		else {_			if (!servletNames.isEmpty()) {_				registration.addMappingForServletNames(dispatcherTypes, this.matchAfter,_						StringUtils.toStringArray(servletNames))__			}_			if (!this.urlPatterns.isEmpty()) {_				registration.addMappingForUrlPatterns(dispatcherTypes, this.matchAfter,_						StringUtils.toStringArray(this.urlPatterns))__			}_		}_	};configure,registration,settings,subclasses,can,override,this,method,to,perform,additional,configuration,if,required,param,registration,the,registration;override,protected,void,configure,filter,registration,dynamic,registration,super,configure,registration,enum,set,dispatcher,type,dispatcher,types,this,dispatcher,types,if,dispatcher,types,null,dispatcher,types,enum,set,of,dispatcher,type,request,set,string,servlet,names,new,linked,hash,set,for,servlet,registration,bean,servlet,registration,bean,this,servlet,registration,beans,servlet,names,add,servlet,registration,bean,get,servlet,name,servlet,names,add,all,this,servlet,names,if,servlet,names,is,empty,this,url,patterns,is,empty,registration,add,mapping,for,url,patterns,dispatcher,types,this,match,after,else,if,servlet,names,is,empty,registration,add,mapping,for,servlet,names,dispatcher,types,this,match,after,string,utils,to,string,array,servlet,names,if,this,url,patterns,is,empty,registration,add,mapping,for,url,patterns,dispatcher,types,this,match,after,string,utils,to,string,array,this,url,patterns
AbstractFilterRegistrationBean -> @Override 	protected void configure(FilterRegistration.Dynamic registration);1551262923;Configure registration settings. Subclasses can override this method to perform_additional configuration if required._@param registration the registration;@Override_	protected void configure(FilterRegistration.Dynamic registration) {_		super.configure(registration)__		EnumSet<DispatcherType> dispatcherTypes = this.dispatcherTypes__		if (dispatcherTypes == null) {_			dispatcherTypes = EnumSet.of(DispatcherType.REQUEST)__		}_		Set<String> servletNames = new LinkedHashSet<>()__		for (ServletRegistrationBean<?> servletRegistrationBean : this.servletRegistrationBeans) {_			servletNames.add(servletRegistrationBean.getServletName())__		}_		servletNames.addAll(this.servletNames)__		if (servletNames.isEmpty() && this.urlPatterns.isEmpty()) {_			registration.addMappingForUrlPatterns(dispatcherTypes, this.matchAfter,_					DEFAULT_URL_MAPPINGS)__		}_		else {_			if (!servletNames.isEmpty()) {_				registration.addMappingForServletNames(dispatcherTypes, this.matchAfter,_						StringUtils.toStringArray(servletNames))__			}_			if (!this.urlPatterns.isEmpty()) {_				registration.addMappingForUrlPatterns(dispatcherTypes, this.matchAfter,_						StringUtils.toStringArray(this.urlPatterns))__			}_		}_	};configure,registration,settings,subclasses,can,override,this,method,to,perform,additional,configuration,if,required,param,registration,the,registration;override,protected,void,configure,filter,registration,dynamic,registration,super,configure,registration,enum,set,dispatcher,type,dispatcher,types,this,dispatcher,types,if,dispatcher,types,null,dispatcher,types,enum,set,of,dispatcher,type,request,set,string,servlet,names,new,linked,hash,set,for,servlet,registration,bean,servlet,registration,bean,this,servlet,registration,beans,servlet,names,add,servlet,registration,bean,get,servlet,name,servlet,names,add,all,this,servlet,names,if,servlet,names,is,empty,this,url,patterns,is,empty,registration,add,mapping,for,url,patterns,dispatcher,types,this,match,after,else,if,servlet,names,is,empty,registration,add,mapping,for,servlet,names,dispatcher,types,this,match,after,string,utils,to,string,array,servlet,names,if,this,url,patterns,is,empty,registration,add,mapping,for,url,patterns,dispatcher,types,this,match,after,string,utils,to,string,array,this,url,patterns
AbstractFilterRegistrationBean -> public void setServletRegistrationBeans( 			Collection<? extends ServletRegistrationBean<?>> servletRegistrationBeans);1507173536;Set {@link ServletRegistrationBean}s that the filter will be registered against._@param servletRegistrationBeans the Servlet registration beans;public void setServletRegistrationBeans(_			Collection<? extends ServletRegistrationBean<?>> servletRegistrationBeans) {_		Assert.notNull(servletRegistrationBeans,_				"ServletRegistrationBeans must not be null")__		this.servletRegistrationBeans = new LinkedHashSet<>(servletRegistrationBeans)__	};set,link,servlet,registration,bean,s,that,the,filter,will,be,registered,against,param,servlet,registration,beans,the,servlet,registration,beans;public,void,set,servlet,registration,beans,collection,extends,servlet,registration,bean,servlet,registration,beans,assert,not,null,servlet,registration,beans,servlet,registration,beans,must,not,be,null,this,servlet,registration,beans,new,linked,hash,set,servlet,registration,beans
AbstractFilterRegistrationBean -> public void setServletRegistrationBeans( 			Collection<? extends ServletRegistrationBean<?>> servletRegistrationBeans);1515477900;Set {@link ServletRegistrationBean}s that the filter will be registered against._@param servletRegistrationBeans the Servlet registration beans;public void setServletRegistrationBeans(_			Collection<? extends ServletRegistrationBean<?>> servletRegistrationBeans) {_		Assert.notNull(servletRegistrationBeans,_				"ServletRegistrationBeans must not be null")__		this.servletRegistrationBeans = new LinkedHashSet<>(servletRegistrationBeans)__	};set,link,servlet,registration,bean,s,that,the,filter,will,be,registered,against,param,servlet,registration,beans,the,servlet,registration,beans;public,void,set,servlet,registration,beans,collection,extends,servlet,registration,bean,servlet,registration,beans,assert,not,null,servlet,registration,beans,servlet,registration,beans,must,not,be,null,this,servlet,registration,beans,new,linked,hash,set,servlet,registration,beans
AbstractFilterRegistrationBean -> public void setServletRegistrationBeans( 			Collection<? extends ServletRegistrationBean<?>> servletRegistrationBeans);1515717909;Set {@link ServletRegistrationBean}s that the filter will be registered against._@param servletRegistrationBeans the Servlet registration beans;public void setServletRegistrationBeans(_			Collection<? extends ServletRegistrationBean<?>> servletRegistrationBeans) {_		Assert.notNull(servletRegistrationBeans,_				"ServletRegistrationBeans must not be null")__		this.servletRegistrationBeans = new LinkedHashSet<>(servletRegistrationBeans)__	};set,link,servlet,registration,bean,s,that,the,filter,will,be,registered,against,param,servlet,registration,beans,the,servlet,registration,beans;public,void,set,servlet,registration,beans,collection,extends,servlet,registration,bean,servlet,registration,beans,assert,not,null,servlet,registration,beans,servlet,registration,beans,must,not,be,null,this,servlet,registration,beans,new,linked,hash,set,servlet,registration,beans
AbstractFilterRegistrationBean -> public void setServletRegistrationBeans( 			Collection<? extends ServletRegistrationBean<?>> servletRegistrationBeans);1519362690;Set {@link ServletRegistrationBean}s that the filter will be registered against._@param servletRegistrationBeans the Servlet registration beans;public void setServletRegistrationBeans(_			Collection<? extends ServletRegistrationBean<?>> servletRegistrationBeans) {_		Assert.notNull(servletRegistrationBeans,_				"ServletRegistrationBeans must not be null")__		this.servletRegistrationBeans = new LinkedHashSet<>(servletRegistrationBeans)__	};set,link,servlet,registration,bean,s,that,the,filter,will,be,registered,against,param,servlet,registration,beans,the,servlet,registration,beans;public,void,set,servlet,registration,beans,collection,extends,servlet,registration,bean,servlet,registration,beans,assert,not,null,servlet,registration,beans,servlet,registration,beans,must,not,be,null,this,servlet,registration,beans,new,linked,hash,set,servlet,registration,beans
AbstractFilterRegistrationBean -> public void setServletRegistrationBeans( 			Collection<? extends ServletRegistrationBean<?>> servletRegistrationBeans);1522306440;Set {@link ServletRegistrationBean}s that the filter will be registered against._@param servletRegistrationBeans the Servlet registration beans;public void setServletRegistrationBeans(_			Collection<? extends ServletRegistrationBean<?>> servletRegistrationBeans) {_		Assert.notNull(servletRegistrationBeans,_				"ServletRegistrationBeans must not be null")__		this.servletRegistrationBeans = new LinkedHashSet<>(servletRegistrationBeans)__	};set,link,servlet,registration,bean,s,that,the,filter,will,be,registered,against,param,servlet,registration,beans,the,servlet,registration,beans;public,void,set,servlet,registration,beans,collection,extends,servlet,registration,bean,servlet,registration,beans,assert,not,null,servlet,registration,beans,servlet,registration,beans,must,not,be,null,this,servlet,registration,beans,new,linked,hash,set,servlet,registration,beans
AbstractFilterRegistrationBean -> public void setServletRegistrationBeans( 			Collection<? extends ServletRegistrationBean<?>> servletRegistrationBeans);1525963607;Set {@link ServletRegistrationBean}s that the filter will be registered against._@param servletRegistrationBeans the Servlet registration beans;public void setServletRegistrationBeans(_			Collection<? extends ServletRegistrationBean<?>> servletRegistrationBeans) {_		Assert.notNull(servletRegistrationBeans,_				"ServletRegistrationBeans must not be null")__		this.servletRegistrationBeans = new LinkedHashSet<>(servletRegistrationBeans)__	};set,link,servlet,registration,bean,s,that,the,filter,will,be,registered,against,param,servlet,registration,beans,the,servlet,registration,beans;public,void,set,servlet,registration,beans,collection,extends,servlet,registration,bean,servlet,registration,beans,assert,not,null,servlet,registration,beans,servlet,registration,beans,must,not,be,null,this,servlet,registration,beans,new,linked,hash,set,servlet,registration,beans
AbstractFilterRegistrationBean -> public void setServletRegistrationBeans( 			Collection<? extends ServletRegistrationBean<?>> servletRegistrationBeans);1539324803;Set {@link ServletRegistrationBean}s that the filter will be registered against._@param servletRegistrationBeans the Servlet registration beans;public void setServletRegistrationBeans(_			Collection<? extends ServletRegistrationBean<?>> servletRegistrationBeans) {_		Assert.notNull(servletRegistrationBeans,_				"ServletRegistrationBeans must not be null")__		this.servletRegistrationBeans = new LinkedHashSet<>(servletRegistrationBeans)__	};set,link,servlet,registration,bean,s,that,the,filter,will,be,registered,against,param,servlet,registration,beans,the,servlet,registration,beans;public,void,set,servlet,registration,beans,collection,extends,servlet,registration,bean,servlet,registration,beans,assert,not,null,servlet,registration,beans,servlet,registration,beans,must,not,be,null,this,servlet,registration,beans,new,linked,hash,set,servlet,registration,beans
AbstractFilterRegistrationBean -> public void setServletRegistrationBeans( 			Collection<? extends ServletRegistrationBean<?>> servletRegistrationBeans);1542792595;Set {@link ServletRegistrationBean}s that the filter will be registered against._@param servletRegistrationBeans the Servlet registration beans;public void setServletRegistrationBeans(_			Collection<? extends ServletRegistrationBean<?>> servletRegistrationBeans) {_		Assert.notNull(servletRegistrationBeans,_				"ServletRegistrationBeans must not be null")__		this.servletRegistrationBeans = new LinkedHashSet<>(servletRegistrationBeans)__	};set,link,servlet,registration,bean,s,that,the,filter,will,be,registered,against,param,servlet,registration,beans,the,servlet,registration,beans;public,void,set,servlet,registration,beans,collection,extends,servlet,registration,bean,servlet,registration,beans,assert,not,null,servlet,registration,beans,servlet,registration,beans,must,not,be,null,this,servlet,registration,beans,new,linked,hash,set,servlet,registration,beans
AbstractFilterRegistrationBean -> public void setServletRegistrationBeans( 			Collection<? extends ServletRegistrationBean<?>> servletRegistrationBeans);1543352081;Set {@link ServletRegistrationBean}s that the filter will be registered against._@param servletRegistrationBeans the Servlet registration beans;public void setServletRegistrationBeans(_			Collection<? extends ServletRegistrationBean<?>> servletRegistrationBeans) {_		Assert.notNull(servletRegistrationBeans,_				"ServletRegistrationBeans must not be null")__		this.servletRegistrationBeans = new LinkedHashSet<>(servletRegistrationBeans)__	};set,link,servlet,registration,bean,s,that,the,filter,will,be,registered,against,param,servlet,registration,beans,the,servlet,registration,beans;public,void,set,servlet,registration,beans,collection,extends,servlet,registration,bean,servlet,registration,beans,assert,not,null,servlet,registration,beans,servlet,registration,beans,must,not,be,null,this,servlet,registration,beans,new,linked,hash,set,servlet,registration,beans
AbstractFilterRegistrationBean -> public void setServletRegistrationBeans( 			Collection<? extends ServletRegistrationBean<?>> servletRegistrationBeans);1543561024;Set {@link ServletRegistrationBean}s that the filter will be registered against._@param servletRegistrationBeans the Servlet registration beans;public void setServletRegistrationBeans(_			Collection<? extends ServletRegistrationBean<?>> servletRegistrationBeans) {_		Assert.notNull(servletRegistrationBeans,_				"ServletRegistrationBeans must not be null")__		this.servletRegistrationBeans = new LinkedHashSet<>(servletRegistrationBeans)__	};set,link,servlet,registration,bean,s,that,the,filter,will,be,registered,against,param,servlet,registration,beans,the,servlet,registration,beans;public,void,set,servlet,registration,beans,collection,extends,servlet,registration,bean,servlet,registration,beans,assert,not,null,servlet,registration,beans,servlet,registration,beans,must,not,be,null,this,servlet,registration,beans,new,linked,hash,set,servlet,registration,beans
AbstractFilterRegistrationBean -> public void setServletRegistrationBeans( 			Collection<? extends ServletRegistrationBean<?>> servletRegistrationBeans);1551262923;Set {@link ServletRegistrationBean}s that the filter will be registered against._@param servletRegistrationBeans the Servlet registration beans;public void setServletRegistrationBeans(_			Collection<? extends ServletRegistrationBean<?>> servletRegistrationBeans) {_		Assert.notNull(servletRegistrationBeans,_				"ServletRegistrationBeans must not be null")__		this.servletRegistrationBeans = new LinkedHashSet<>(servletRegistrationBeans)__	};set,link,servlet,registration,bean,s,that,the,filter,will,be,registered,against,param,servlet,registration,beans,the,servlet,registration,beans;public,void,set,servlet,registration,beans,collection,extends,servlet,registration,bean,servlet,registration,beans,assert,not,null,servlet,registration,beans,servlet,registration,beans,must,not,be,null,this,servlet,registration,beans,new,linked,hash,set,servlet,registration,beans
AbstractFilterRegistrationBean -> public boolean isMatchAfter();1507173536;Return if filter mappings should be matched after any declared Filter mappings of_the ServletContext._@return if filter mappings are matched after;public boolean isMatchAfter() {_		return this.matchAfter__	};return,if,filter,mappings,should,be,matched,after,any,declared,filter,mappings,of,the,servlet,context,return,if,filter,mappings,are,matched,after;public,boolean,is,match,after,return,this,match,after
AbstractFilterRegistrationBean -> public boolean isMatchAfter();1515477900;Return if filter mappings should be matched after any declared Filter mappings of_the ServletContext._@return if filter mappings are matched after;public boolean isMatchAfter() {_		return this.matchAfter__	};return,if,filter,mappings,should,be,matched,after,any,declared,filter,mappings,of,the,servlet,context,return,if,filter,mappings,are,matched,after;public,boolean,is,match,after,return,this,match,after
AbstractFilterRegistrationBean -> public boolean isMatchAfter();1515717909;Return if filter mappings should be matched after any declared Filter mappings of_the ServletContext._@return if filter mappings are matched after;public boolean isMatchAfter() {_		return this.matchAfter__	};return,if,filter,mappings,should,be,matched,after,any,declared,filter,mappings,of,the,servlet,context,return,if,filter,mappings,are,matched,after;public,boolean,is,match,after,return,this,match,after
AbstractFilterRegistrationBean -> public boolean isMatchAfter();1519362690;Return if filter mappings should be matched after any declared Filter mappings of_the ServletContext._@return if filter mappings are matched after;public boolean isMatchAfter() {_		return this.matchAfter__	};return,if,filter,mappings,should,be,matched,after,any,declared,filter,mappings,of,the,servlet,context,return,if,filter,mappings,are,matched,after;public,boolean,is,match,after,return,this,match,after
AbstractFilterRegistrationBean -> public boolean isMatchAfter();1522306440;Return if filter mappings should be matched after any declared Filter mappings of_the ServletContext._@return if filter mappings are matched after;public boolean isMatchAfter() {_		return this.matchAfter__	};return,if,filter,mappings,should,be,matched,after,any,declared,filter,mappings,of,the,servlet,context,return,if,filter,mappings,are,matched,after;public,boolean,is,match,after,return,this,match,after
AbstractFilterRegistrationBean -> public boolean isMatchAfter();1525963607;Return if filter mappings should be matched after any declared Filter mappings of_the ServletContext._@return if filter mappings are matched after;public boolean isMatchAfter() {_		return this.matchAfter__	};return,if,filter,mappings,should,be,matched,after,any,declared,filter,mappings,of,the,servlet,context,return,if,filter,mappings,are,matched,after;public,boolean,is,match,after,return,this,match,after
AbstractFilterRegistrationBean -> public boolean isMatchAfter();1539324803;Return if filter mappings should be matched after any declared Filter mappings of_the ServletContext._@return if filter mappings are matched after;public boolean isMatchAfter() {_		return this.matchAfter__	};return,if,filter,mappings,should,be,matched,after,any,declared,filter,mappings,of,the,servlet,context,return,if,filter,mappings,are,matched,after;public,boolean,is,match,after,return,this,match,after
AbstractFilterRegistrationBean -> public boolean isMatchAfter();1542792595;Return if filter mappings should be matched after any declared Filter mappings of_the ServletContext._@return if filter mappings are matched after;public boolean isMatchAfter() {_		return this.matchAfter__	};return,if,filter,mappings,should,be,matched,after,any,declared,filter,mappings,of,the,servlet,context,return,if,filter,mappings,are,matched,after;public,boolean,is,match,after,return,this,match,after
AbstractFilterRegistrationBean -> public boolean isMatchAfter();1543352081;Return if filter mappings should be matched after any declared Filter mappings of_the ServletContext._@return if filter mappings are matched after;public boolean isMatchAfter() {_		return this.matchAfter__	};return,if,filter,mappings,should,be,matched,after,any,declared,filter,mappings,of,the,servlet,context,return,if,filter,mappings,are,matched,after;public,boolean,is,match,after,return,this,match,after
AbstractFilterRegistrationBean -> public boolean isMatchAfter();1543561024;Return if filter mappings should be matched after any declared Filter mappings of_the ServletContext._@return if filter mappings are matched after;public boolean isMatchAfter() {_		return this.matchAfter__	};return,if,filter,mappings,should,be,matched,after,any,declared,filter,mappings,of,the,servlet,context,return,if,filter,mappings,are,matched,after;public,boolean,is,match,after,return,this,match,after
AbstractFilterRegistrationBean -> public boolean isMatchAfter();1551262923;Return if filter mappings should be matched after any declared Filter mappings of_the ServletContext._@return if filter mappings are matched after;public boolean isMatchAfter() {_		return this.matchAfter__	};return,if,filter,mappings,should,be,matched,after,any,declared,filter,mappings,of,the,servlet,context,return,if,filter,mappings,are,matched,after;public,boolean,is,match,after,return,this,match,after
AbstractFilterRegistrationBean -> public void addServletNames(String... servletNames);1507173536;Add servlet names for the filter._@param servletNames the servlet names to add;public void addServletNames(String... servletNames) {_		Assert.notNull(servletNames, "ServletNames must not be null")__		this.servletNames.addAll(Arrays.asList(servletNames))__	};add,servlet,names,for,the,filter,param,servlet,names,the,servlet,names,to,add;public,void,add,servlet,names,string,servlet,names,assert,not,null,servlet,names,servlet,names,must,not,be,null,this,servlet,names,add,all,arrays,as,list,servlet,names
AbstractFilterRegistrationBean -> public void addServletNames(String... servletNames);1515477900;Add servlet names for the filter._@param servletNames the servlet names to add;public void addServletNames(String... servletNames) {_		Assert.notNull(servletNames, "ServletNames must not be null")__		this.servletNames.addAll(Arrays.asList(servletNames))__	};add,servlet,names,for,the,filter,param,servlet,names,the,servlet,names,to,add;public,void,add,servlet,names,string,servlet,names,assert,not,null,servlet,names,servlet,names,must,not,be,null,this,servlet,names,add,all,arrays,as,list,servlet,names
AbstractFilterRegistrationBean -> public void addServletNames(String... servletNames);1515717909;Add servlet names for the filter._@param servletNames the servlet names to add;public void addServletNames(String... servletNames) {_		Assert.notNull(servletNames, "ServletNames must not be null")__		this.servletNames.addAll(Arrays.asList(servletNames))__	};add,servlet,names,for,the,filter,param,servlet,names,the,servlet,names,to,add;public,void,add,servlet,names,string,servlet,names,assert,not,null,servlet,names,servlet,names,must,not,be,null,this,servlet,names,add,all,arrays,as,list,servlet,names
AbstractFilterRegistrationBean -> public void addServletNames(String... servletNames);1519362690;Add servlet names for the filter._@param servletNames the servlet names to add;public void addServletNames(String... servletNames) {_		Assert.notNull(servletNames, "ServletNames must not be null")__		this.servletNames.addAll(Arrays.asList(servletNames))__	};add,servlet,names,for,the,filter,param,servlet,names,the,servlet,names,to,add;public,void,add,servlet,names,string,servlet,names,assert,not,null,servlet,names,servlet,names,must,not,be,null,this,servlet,names,add,all,arrays,as,list,servlet,names
AbstractFilterRegistrationBean -> public void addServletNames(String... servletNames);1522306440;Add servlet names for the filter._@param servletNames the servlet names to add;public void addServletNames(String... servletNames) {_		Assert.notNull(servletNames, "ServletNames must not be null")__		this.servletNames.addAll(Arrays.asList(servletNames))__	};add,servlet,names,for,the,filter,param,servlet,names,the,servlet,names,to,add;public,void,add,servlet,names,string,servlet,names,assert,not,null,servlet,names,servlet,names,must,not,be,null,this,servlet,names,add,all,arrays,as,list,servlet,names
AbstractFilterRegistrationBean -> public void addServletNames(String... servletNames);1525963607;Add servlet names for the filter._@param servletNames the servlet names to add;public void addServletNames(String... servletNames) {_		Assert.notNull(servletNames, "ServletNames must not be null")__		this.servletNames.addAll(Arrays.asList(servletNames))__	};add,servlet,names,for,the,filter,param,servlet,names,the,servlet,names,to,add;public,void,add,servlet,names,string,servlet,names,assert,not,null,servlet,names,servlet,names,must,not,be,null,this,servlet,names,add,all,arrays,as,list,servlet,names
AbstractFilterRegistrationBean -> public void addServletNames(String... servletNames);1539324803;Add servlet names for the filter._@param servletNames the servlet names to add;public void addServletNames(String... servletNames) {_		Assert.notNull(servletNames, "ServletNames must not be null")__		this.servletNames.addAll(Arrays.asList(servletNames))__	};add,servlet,names,for,the,filter,param,servlet,names,the,servlet,names,to,add;public,void,add,servlet,names,string,servlet,names,assert,not,null,servlet,names,servlet,names,must,not,be,null,this,servlet,names,add,all,arrays,as,list,servlet,names
AbstractFilterRegistrationBean -> public void addServletNames(String... servletNames);1542792595;Add servlet names for the filter._@param servletNames the servlet names to add;public void addServletNames(String... servletNames) {_		Assert.notNull(servletNames, "ServletNames must not be null")__		this.servletNames.addAll(Arrays.asList(servletNames))__	};add,servlet,names,for,the,filter,param,servlet,names,the,servlet,names,to,add;public,void,add,servlet,names,string,servlet,names,assert,not,null,servlet,names,servlet,names,must,not,be,null,this,servlet,names,add,all,arrays,as,list,servlet,names
AbstractFilterRegistrationBean -> public void addServletNames(String... servletNames);1543352081;Add servlet names for the filter._@param servletNames the servlet names to add;public void addServletNames(String... servletNames) {_		Assert.notNull(servletNames, "ServletNames must not be null")__		this.servletNames.addAll(Arrays.asList(servletNames))__	};add,servlet,names,for,the,filter,param,servlet,names,the,servlet,names,to,add;public,void,add,servlet,names,string,servlet,names,assert,not,null,servlet,names,servlet,names,must,not,be,null,this,servlet,names,add,all,arrays,as,list,servlet,names
AbstractFilterRegistrationBean -> public void addServletNames(String... servletNames);1543561024;Add servlet names for the filter._@param servletNames the servlet names to add;public void addServletNames(String... servletNames) {_		Assert.notNull(servletNames, "ServletNames must not be null")__		this.servletNames.addAll(Arrays.asList(servletNames))__	};add,servlet,names,for,the,filter,param,servlet,names,the,servlet,names,to,add;public,void,add,servlet,names,string,servlet,names,assert,not,null,servlet,names,servlet,names,must,not,be,null,this,servlet,names,add,all,arrays,as,list,servlet,names
AbstractFilterRegistrationBean -> public void addServletNames(String... servletNames);1551262923;Add servlet names for the filter._@param servletNames the servlet names to add;public void addServletNames(String... servletNames) {_		Assert.notNull(servletNames, "ServletNames must not be null")__		this.servletNames.addAll(Arrays.asList(servletNames))__	};add,servlet,names,for,the,filter,param,servlet,names,the,servlet,names,to,add;public,void,add,servlet,names,string,servlet,names,assert,not,null,servlet,names,servlet,names,must,not,be,null,this,servlet,names,add,all,arrays,as,list,servlet,names
AbstractFilterRegistrationBean -> public void setMatchAfter(boolean matchAfter);1507173536;Set if the filter mappings should be matched after any declared filter mappings of_the ServletContext. Defaults to {@code false} indicating the filters are supposed_to be matched before any declared filter mappings of the ServletContext._@param matchAfter if filter mappings are matched after;public void setMatchAfter(boolean matchAfter) {_		this.matchAfter = matchAfter__	};set,if,the,filter,mappings,should,be,matched,after,any,declared,filter,mappings,of,the,servlet,context,defaults,to,code,false,indicating,the,filters,are,supposed,to,be,matched,before,any,declared,filter,mappings,of,the,servlet,context,param,match,after,if,filter,mappings,are,matched,after;public,void,set,match,after,boolean,match,after,this,match,after,match,after
AbstractFilterRegistrationBean -> public void setMatchAfter(boolean matchAfter);1515477900;Set if the filter mappings should be matched after any declared filter mappings of_the ServletContext. Defaults to {@code false} indicating the filters are supposed_to be matched before any declared filter mappings of the ServletContext._@param matchAfter if filter mappings are matched after;public void setMatchAfter(boolean matchAfter) {_		this.matchAfter = matchAfter__	};set,if,the,filter,mappings,should,be,matched,after,any,declared,filter,mappings,of,the,servlet,context,defaults,to,code,false,indicating,the,filters,are,supposed,to,be,matched,before,any,declared,filter,mappings,of,the,servlet,context,param,match,after,if,filter,mappings,are,matched,after;public,void,set,match,after,boolean,match,after,this,match,after,match,after
AbstractFilterRegistrationBean -> public void setMatchAfter(boolean matchAfter);1515717909;Set if the filter mappings should be matched after any declared filter mappings of_the ServletContext. Defaults to {@code false} indicating the filters are supposed_to be matched before any declared filter mappings of the ServletContext._@param matchAfter if filter mappings are matched after;public void setMatchAfter(boolean matchAfter) {_		this.matchAfter = matchAfter__	};set,if,the,filter,mappings,should,be,matched,after,any,declared,filter,mappings,of,the,servlet,context,defaults,to,code,false,indicating,the,filters,are,supposed,to,be,matched,before,any,declared,filter,mappings,of,the,servlet,context,param,match,after,if,filter,mappings,are,matched,after;public,void,set,match,after,boolean,match,after,this,match,after,match,after
AbstractFilterRegistrationBean -> public void setMatchAfter(boolean matchAfter);1519362690;Set if the filter mappings should be matched after any declared filter mappings of_the ServletContext. Defaults to {@code false} indicating the filters are supposed_to be matched before any declared filter mappings of the ServletContext._@param matchAfter if filter mappings are matched after;public void setMatchAfter(boolean matchAfter) {_		this.matchAfter = matchAfter__	};set,if,the,filter,mappings,should,be,matched,after,any,declared,filter,mappings,of,the,servlet,context,defaults,to,code,false,indicating,the,filters,are,supposed,to,be,matched,before,any,declared,filter,mappings,of,the,servlet,context,param,match,after,if,filter,mappings,are,matched,after;public,void,set,match,after,boolean,match,after,this,match,after,match,after
AbstractFilterRegistrationBean -> public void setMatchAfter(boolean matchAfter);1522306440;Set if the filter mappings should be matched after any declared filter mappings of_the ServletContext. Defaults to {@code false} indicating the filters are supposed_to be matched before any declared filter mappings of the ServletContext._@param matchAfter if filter mappings are matched after;public void setMatchAfter(boolean matchAfter) {_		this.matchAfter = matchAfter__	};set,if,the,filter,mappings,should,be,matched,after,any,declared,filter,mappings,of,the,servlet,context,defaults,to,code,false,indicating,the,filters,are,supposed,to,be,matched,before,any,declared,filter,mappings,of,the,servlet,context,param,match,after,if,filter,mappings,are,matched,after;public,void,set,match,after,boolean,match,after,this,match,after,match,after
AbstractFilterRegistrationBean -> public void setMatchAfter(boolean matchAfter);1525963607;Set if the filter mappings should be matched after any declared filter mappings of_the ServletContext. Defaults to {@code false} indicating the filters are supposed_to be matched before any declared filter mappings of the ServletContext._@param matchAfter if filter mappings are matched after;public void setMatchAfter(boolean matchAfter) {_		this.matchAfter = matchAfter__	};set,if,the,filter,mappings,should,be,matched,after,any,declared,filter,mappings,of,the,servlet,context,defaults,to,code,false,indicating,the,filters,are,supposed,to,be,matched,before,any,declared,filter,mappings,of,the,servlet,context,param,match,after,if,filter,mappings,are,matched,after;public,void,set,match,after,boolean,match,after,this,match,after,match,after
AbstractFilterRegistrationBean -> public void setMatchAfter(boolean matchAfter);1539324803;Set if the filter mappings should be matched after any declared filter mappings of_the ServletContext. Defaults to {@code false} indicating the filters are supposed_to be matched before any declared filter mappings of the ServletContext._@param matchAfter if filter mappings are matched after;public void setMatchAfter(boolean matchAfter) {_		this.matchAfter = matchAfter__	};set,if,the,filter,mappings,should,be,matched,after,any,declared,filter,mappings,of,the,servlet,context,defaults,to,code,false,indicating,the,filters,are,supposed,to,be,matched,before,any,declared,filter,mappings,of,the,servlet,context,param,match,after,if,filter,mappings,are,matched,after;public,void,set,match,after,boolean,match,after,this,match,after,match,after
AbstractFilterRegistrationBean -> public void setMatchAfter(boolean matchAfter);1542792595;Set if the filter mappings should be matched after any declared filter mappings of_the ServletContext. Defaults to {@code false} indicating the filters are supposed_to be matched before any declared filter mappings of the ServletContext._@param matchAfter if filter mappings are matched after;public void setMatchAfter(boolean matchAfter) {_		this.matchAfter = matchAfter__	};set,if,the,filter,mappings,should,be,matched,after,any,declared,filter,mappings,of,the,servlet,context,defaults,to,code,false,indicating,the,filters,are,supposed,to,be,matched,before,any,declared,filter,mappings,of,the,servlet,context,param,match,after,if,filter,mappings,are,matched,after;public,void,set,match,after,boolean,match,after,this,match,after,match,after
AbstractFilterRegistrationBean -> public void setMatchAfter(boolean matchAfter);1543352081;Set if the filter mappings should be matched after any declared filter mappings of_the ServletContext. Defaults to {@code false} indicating the filters are supposed_to be matched before any declared filter mappings of the ServletContext._@param matchAfter if filter mappings are matched after;public void setMatchAfter(boolean matchAfter) {_		this.matchAfter = matchAfter__	};set,if,the,filter,mappings,should,be,matched,after,any,declared,filter,mappings,of,the,servlet,context,defaults,to,code,false,indicating,the,filters,are,supposed,to,be,matched,before,any,declared,filter,mappings,of,the,servlet,context,param,match,after,if,filter,mappings,are,matched,after;public,void,set,match,after,boolean,match,after,this,match,after,match,after
AbstractFilterRegistrationBean -> public void setMatchAfter(boolean matchAfter);1543561024;Set if the filter mappings should be matched after any declared filter mappings of_the ServletContext. Defaults to {@code false} indicating the filters are supposed_to be matched before any declared filter mappings of the ServletContext._@param matchAfter if filter mappings are matched after;public void setMatchAfter(boolean matchAfter) {_		this.matchAfter = matchAfter__	};set,if,the,filter,mappings,should,be,matched,after,any,declared,filter,mappings,of,the,servlet,context,defaults,to,code,false,indicating,the,filters,are,supposed,to,be,matched,before,any,declared,filter,mappings,of,the,servlet,context,param,match,after,if,filter,mappings,are,matched,after;public,void,set,match,after,boolean,match,after,this,match,after,match,after
AbstractFilterRegistrationBean -> public void setMatchAfter(boolean matchAfter);1551262923;Set if the filter mappings should be matched after any declared filter mappings of_the ServletContext. Defaults to {@code false} indicating the filters are supposed_to be matched before any declared filter mappings of the ServletContext._@param matchAfter if filter mappings are matched after;public void setMatchAfter(boolean matchAfter) {_		this.matchAfter = matchAfter__	};set,if,the,filter,mappings,should,be,matched,after,any,declared,filter,mappings,of,the,servlet,context,defaults,to,code,false,indicating,the,filters,are,supposed,to,be,matched,before,any,declared,filter,mappings,of,the,servlet,context,param,match,after,if,filter,mappings,are,matched,after;public,void,set,match,after,boolean,match,after,this,match,after,match,after
AbstractFilterRegistrationBean -> public Collection<String> getUrlPatterns();1507173536;Return a mutable collection of URL patterns that the filter will be registered_against._@return the URL patterns;public Collection<String> getUrlPatterns() {_		return this.urlPatterns__	};return,a,mutable,collection,of,url,patterns,that,the,filter,will,be,registered,against,return,the,url,patterns;public,collection,string,get,url,patterns,return,this,url,patterns
AbstractFilterRegistrationBean -> public Collection<String> getUrlPatterns();1515477900;Return a mutable collection of URL patterns that the filter will be registered_against._@return the URL patterns;public Collection<String> getUrlPatterns() {_		return this.urlPatterns__	};return,a,mutable,collection,of,url,patterns,that,the,filter,will,be,registered,against,return,the,url,patterns;public,collection,string,get,url,patterns,return,this,url,patterns
AbstractFilterRegistrationBean -> public Collection<String> getUrlPatterns();1515717909;Return a mutable collection of URL patterns that the filter will be registered_against._@return the URL patterns;public Collection<String> getUrlPatterns() {_		return this.urlPatterns__	};return,a,mutable,collection,of,url,patterns,that,the,filter,will,be,registered,against,return,the,url,patterns;public,collection,string,get,url,patterns,return,this,url,patterns
AbstractFilterRegistrationBean -> public Collection<String> getUrlPatterns();1519362690;Return a mutable collection of URL patterns that the filter will be registered_against._@return the URL patterns;public Collection<String> getUrlPatterns() {_		return this.urlPatterns__	};return,a,mutable,collection,of,url,patterns,that,the,filter,will,be,registered,against,return,the,url,patterns;public,collection,string,get,url,patterns,return,this,url,patterns
AbstractFilterRegistrationBean -> public Collection<String> getUrlPatterns();1522306440;Return a mutable collection of URL patterns that the filter will be registered_against._@return the URL patterns;public Collection<String> getUrlPatterns() {_		return this.urlPatterns__	};return,a,mutable,collection,of,url,patterns,that,the,filter,will,be,registered,against,return,the,url,patterns;public,collection,string,get,url,patterns,return,this,url,patterns
AbstractFilterRegistrationBean -> public Collection<String> getUrlPatterns();1525963607;Return a mutable collection of URL patterns, as defined in the Servlet_specification, that the filter will be registered against._@return the URL patterns;public Collection<String> getUrlPatterns() {_		return this.urlPatterns__	};return,a,mutable,collection,of,url,patterns,as,defined,in,the,servlet,specification,that,the,filter,will,be,registered,against,return,the,url,patterns;public,collection,string,get,url,patterns,return,this,url,patterns
AbstractFilterRegistrationBean -> public Collection<String> getUrlPatterns();1539324803;Return a mutable collection of URL patterns, as defined in the Servlet_specification, that the filter will be registered against._@return the URL patterns;public Collection<String> getUrlPatterns() {_		return this.urlPatterns__	};return,a,mutable,collection,of,url,patterns,as,defined,in,the,servlet,specification,that,the,filter,will,be,registered,against,return,the,url,patterns;public,collection,string,get,url,patterns,return,this,url,patterns
AbstractFilterRegistrationBean -> public Collection<String> getUrlPatterns();1542792595;Return a mutable collection of URL patterns, as defined in the Servlet_specification, that the filter will be registered against._@return the URL patterns;public Collection<String> getUrlPatterns() {_		return this.urlPatterns__	};return,a,mutable,collection,of,url,patterns,as,defined,in,the,servlet,specification,that,the,filter,will,be,registered,against,return,the,url,patterns;public,collection,string,get,url,patterns,return,this,url,patterns
AbstractFilterRegistrationBean -> public Collection<String> getUrlPatterns();1543352081;Return a mutable collection of URL patterns, as defined in the Servlet_specification, that the filter will be registered against._@return the URL patterns;public Collection<String> getUrlPatterns() {_		return this.urlPatterns__	};return,a,mutable,collection,of,url,patterns,as,defined,in,the,servlet,specification,that,the,filter,will,be,registered,against,return,the,url,patterns;public,collection,string,get,url,patterns,return,this,url,patterns
AbstractFilterRegistrationBean -> public Collection<String> getUrlPatterns();1543561024;Return a mutable collection of URL patterns, as defined in the Servlet_specification, that the filter will be registered against._@return the URL patterns;public Collection<String> getUrlPatterns() {_		return this.urlPatterns__	};return,a,mutable,collection,of,url,patterns,as,defined,in,the,servlet,specification,that,the,filter,will,be,registered,against,return,the,url,patterns;public,collection,string,get,url,patterns,return,this,url,patterns
AbstractFilterRegistrationBean -> public Collection<String> getUrlPatterns();1551262923;Return a mutable collection of URL patterns, as defined in the Servlet_specification, that the filter will be registered against._@return the URL patterns;public Collection<String> getUrlPatterns() {_		return this.urlPatterns__	};return,a,mutable,collection,of,url,patterns,as,defined,in,the,servlet,specification,that,the,filter,will,be,registered,against,return,the,url,patterns;public,collection,string,get,url,patterns,return,this,url,patterns
AbstractFilterRegistrationBean -> public void setUrlPatterns(Collection<String> urlPatterns);1507173536;Set the URL patterns that the filter will be registered against. This will replace_any previously specified URL patterns._@param urlPatterns the URL patterns_@see #setServletRegistrationBeans_@see #setServletNames;public void setUrlPatterns(Collection<String> urlPatterns) {_		Assert.notNull(urlPatterns, "UrlPatterns must not be null")__		this.urlPatterns = new LinkedHashSet<>(urlPatterns)__	};set,the,url,patterns,that,the,filter,will,be,registered,against,this,will,replace,any,previously,specified,url,patterns,param,url,patterns,the,url,patterns,see,set,servlet,registration,beans,see,set,servlet,names;public,void,set,url,patterns,collection,string,url,patterns,assert,not,null,url,patterns,url,patterns,must,not,be,null,this,url,patterns,new,linked,hash,set,url,patterns
AbstractFilterRegistrationBean -> public void setUrlPatterns(Collection<String> urlPatterns);1515477900;Set the URL patterns that the filter will be registered against. This will replace_any previously specified URL patterns._@param urlPatterns the URL patterns_@see #setServletRegistrationBeans_@see #setServletNames;public void setUrlPatterns(Collection<String> urlPatterns) {_		Assert.notNull(urlPatterns, "UrlPatterns must not be null")__		this.urlPatterns = new LinkedHashSet<>(urlPatterns)__	};set,the,url,patterns,that,the,filter,will,be,registered,against,this,will,replace,any,previously,specified,url,patterns,param,url,patterns,the,url,patterns,see,set,servlet,registration,beans,see,set,servlet,names;public,void,set,url,patterns,collection,string,url,patterns,assert,not,null,url,patterns,url,patterns,must,not,be,null,this,url,patterns,new,linked,hash,set,url,patterns
AbstractFilterRegistrationBean -> public void setUrlPatterns(Collection<String> urlPatterns);1515717909;Set the URL patterns that the filter will be registered against. This will replace_any previously specified URL patterns._@param urlPatterns the URL patterns_@see #setServletRegistrationBeans_@see #setServletNames;public void setUrlPatterns(Collection<String> urlPatterns) {_		Assert.notNull(urlPatterns, "UrlPatterns must not be null")__		this.urlPatterns = new LinkedHashSet<>(urlPatterns)__	};set,the,url,patterns,that,the,filter,will,be,registered,against,this,will,replace,any,previously,specified,url,patterns,param,url,patterns,the,url,patterns,see,set,servlet,registration,beans,see,set,servlet,names;public,void,set,url,patterns,collection,string,url,patterns,assert,not,null,url,patterns,url,patterns,must,not,be,null,this,url,patterns,new,linked,hash,set,url,patterns
AbstractFilterRegistrationBean -> public void setUrlPatterns(Collection<String> urlPatterns);1519362690;Set the URL patterns that the filter will be registered against. This will replace_any previously specified URL patterns._@param urlPatterns the URL patterns_@see #setServletRegistrationBeans_@see #setServletNames;public void setUrlPatterns(Collection<String> urlPatterns) {_		Assert.notNull(urlPatterns, "UrlPatterns must not be null")__		this.urlPatterns = new LinkedHashSet<>(urlPatterns)__	};set,the,url,patterns,that,the,filter,will,be,registered,against,this,will,replace,any,previously,specified,url,patterns,param,url,patterns,the,url,patterns,see,set,servlet,registration,beans,see,set,servlet,names;public,void,set,url,patterns,collection,string,url,patterns,assert,not,null,url,patterns,url,patterns,must,not,be,null,this,url,patterns,new,linked,hash,set,url,patterns
AbstractFilterRegistrationBean -> public void setUrlPatterns(Collection<String> urlPatterns);1522306440;Set the URL patterns that the filter will be registered against. This will replace_any previously specified URL patterns._@param urlPatterns the URL patterns_@see #setServletRegistrationBeans_@see #setServletNames;public void setUrlPatterns(Collection<String> urlPatterns) {_		Assert.notNull(urlPatterns, "UrlPatterns must not be null")__		this.urlPatterns = new LinkedHashSet<>(urlPatterns)__	};set,the,url,patterns,that,the,filter,will,be,registered,against,this,will,replace,any,previously,specified,url,patterns,param,url,patterns,the,url,patterns,see,set,servlet,registration,beans,see,set,servlet,names;public,void,set,url,patterns,collection,string,url,patterns,assert,not,null,url,patterns,url,patterns,must,not,be,null,this,url,patterns,new,linked,hash,set,url,patterns
AbstractFilterRegistrationBean -> public void setUrlPatterns(Collection<String> urlPatterns);1525963607;Set the URL patterns that the filter will be registered against. This will replace_any previously specified URL patterns._@param urlPatterns the URL patterns_@see #setServletRegistrationBeans_@see #setServletNames;public void setUrlPatterns(Collection<String> urlPatterns) {_		Assert.notNull(urlPatterns, "UrlPatterns must not be null")__		this.urlPatterns = new LinkedHashSet<>(urlPatterns)__	};set,the,url,patterns,that,the,filter,will,be,registered,against,this,will,replace,any,previously,specified,url,patterns,param,url,patterns,the,url,patterns,see,set,servlet,registration,beans,see,set,servlet,names;public,void,set,url,patterns,collection,string,url,patterns,assert,not,null,url,patterns,url,patterns,must,not,be,null,this,url,patterns,new,linked,hash,set,url,patterns
AbstractFilterRegistrationBean -> public void setUrlPatterns(Collection<String> urlPatterns);1539324803;Set the URL patterns that the filter will be registered against. This will replace_any previously specified URL patterns._@param urlPatterns the URL patterns_@see #setServletRegistrationBeans_@see #setServletNames;public void setUrlPatterns(Collection<String> urlPatterns) {_		Assert.notNull(urlPatterns, "UrlPatterns must not be null")__		this.urlPatterns = new LinkedHashSet<>(urlPatterns)__	};set,the,url,patterns,that,the,filter,will,be,registered,against,this,will,replace,any,previously,specified,url,patterns,param,url,patterns,the,url,patterns,see,set,servlet,registration,beans,see,set,servlet,names;public,void,set,url,patterns,collection,string,url,patterns,assert,not,null,url,patterns,url,patterns,must,not,be,null,this,url,patterns,new,linked,hash,set,url,patterns
AbstractFilterRegistrationBean -> public void setUrlPatterns(Collection<String> urlPatterns);1542792595;Set the URL patterns that the filter will be registered against. This will replace_any previously specified URL patterns._@param urlPatterns the URL patterns_@see #setServletRegistrationBeans_@see #setServletNames;public void setUrlPatterns(Collection<String> urlPatterns) {_		Assert.notNull(urlPatterns, "UrlPatterns must not be null")__		this.urlPatterns = new LinkedHashSet<>(urlPatterns)__	};set,the,url,patterns,that,the,filter,will,be,registered,against,this,will,replace,any,previously,specified,url,patterns,param,url,patterns,the,url,patterns,see,set,servlet,registration,beans,see,set,servlet,names;public,void,set,url,patterns,collection,string,url,patterns,assert,not,null,url,patterns,url,patterns,must,not,be,null,this,url,patterns,new,linked,hash,set,url,patterns
AbstractFilterRegistrationBean -> public void setUrlPatterns(Collection<String> urlPatterns);1543352081;Set the URL patterns that the filter will be registered against. This will replace_any previously specified URL patterns._@param urlPatterns the URL patterns_@see #setServletRegistrationBeans_@see #setServletNames;public void setUrlPatterns(Collection<String> urlPatterns) {_		Assert.notNull(urlPatterns, "UrlPatterns must not be null")__		this.urlPatterns = new LinkedHashSet<>(urlPatterns)__	};set,the,url,patterns,that,the,filter,will,be,registered,against,this,will,replace,any,previously,specified,url,patterns,param,url,patterns,the,url,patterns,see,set,servlet,registration,beans,see,set,servlet,names;public,void,set,url,patterns,collection,string,url,patterns,assert,not,null,url,patterns,url,patterns,must,not,be,null,this,url,patterns,new,linked,hash,set,url,patterns
AbstractFilterRegistrationBean -> public void setUrlPatterns(Collection<String> urlPatterns);1543561024;Set the URL patterns that the filter will be registered against. This will replace_any previously specified URL patterns._@param urlPatterns the URL patterns_@see #setServletRegistrationBeans_@see #setServletNames;public void setUrlPatterns(Collection<String> urlPatterns) {_		Assert.notNull(urlPatterns, "UrlPatterns must not be null")__		this.urlPatterns = new LinkedHashSet<>(urlPatterns)__	};set,the,url,patterns,that,the,filter,will,be,registered,against,this,will,replace,any,previously,specified,url,patterns,param,url,patterns,the,url,patterns,see,set,servlet,registration,beans,see,set,servlet,names;public,void,set,url,patterns,collection,string,url,patterns,assert,not,null,url,patterns,url,patterns,must,not,be,null,this,url,patterns,new,linked,hash,set,url,patterns
AbstractFilterRegistrationBean -> public void setUrlPatterns(Collection<String> urlPatterns);1551262923;Set the URL patterns that the filter will be registered against. This will replace_any previously specified URL patterns._@param urlPatterns the URL patterns_@see #setServletRegistrationBeans_@see #setServletNames;public void setUrlPatterns(Collection<String> urlPatterns) {_		Assert.notNull(urlPatterns, "UrlPatterns must not be null")__		this.urlPatterns = new LinkedHashSet<>(urlPatterns)__	};set,the,url,patterns,that,the,filter,will,be,registered,against,this,will,replace,any,previously,specified,url,patterns,param,url,patterns,the,url,patterns,see,set,servlet,registration,beans,see,set,servlet,names;public,void,set,url,patterns,collection,string,url,patterns,assert,not,null,url,patterns,url,patterns,must,not,be,null,this,url,patterns,new,linked,hash,set,url,patterns
AbstractFilterRegistrationBean -> public void setDispatcherTypes(EnumSet<DispatcherType> dispatcherTypes);1507173536;Sets the dispatcher types that should be used with the registration. If not_specified the types will be deduced based on the value of_{@link #isAsyncSupported()}._@param dispatcherTypes the dispatcher types;public void setDispatcherTypes(EnumSet<DispatcherType> dispatcherTypes) {_		this.dispatcherTypes = dispatcherTypes__	};sets,the,dispatcher,types,that,should,be,used,with,the,registration,if,not,specified,the,types,will,be,deduced,based,on,the,value,of,link,is,async,supported,param,dispatcher,types,the,dispatcher,types;public,void,set,dispatcher,types,enum,set,dispatcher,type,dispatcher,types,this,dispatcher,types,dispatcher,types
AbstractFilterRegistrationBean -> public void setDispatcherTypes(EnumSet<DispatcherType> dispatcherTypes);1515477900;Sets the dispatcher types that should be used with the registration. If not_specified the types will be deduced based on the value of_{@link #isAsyncSupported()}._@param dispatcherTypes the dispatcher types;public void setDispatcherTypes(EnumSet<DispatcherType> dispatcherTypes) {_		this.dispatcherTypes = dispatcherTypes__	};sets,the,dispatcher,types,that,should,be,used,with,the,registration,if,not,specified,the,types,will,be,deduced,based,on,the,value,of,link,is,async,supported,param,dispatcher,types,the,dispatcher,types;public,void,set,dispatcher,types,enum,set,dispatcher,type,dispatcher,types,this,dispatcher,types,dispatcher,types
AbstractFilterRegistrationBean -> public void setDispatcherTypes(EnumSet<DispatcherType> dispatcherTypes);1515717909;Sets the dispatcher types that should be used with the registration. If not_specified the types will be deduced based on the value of_{@link #isAsyncSupported()}._@param dispatcherTypes the dispatcher types;public void setDispatcherTypes(EnumSet<DispatcherType> dispatcherTypes) {_		this.dispatcherTypes = dispatcherTypes__	};sets,the,dispatcher,types,that,should,be,used,with,the,registration,if,not,specified,the,types,will,be,deduced,based,on,the,value,of,link,is,async,supported,param,dispatcher,types,the,dispatcher,types;public,void,set,dispatcher,types,enum,set,dispatcher,type,dispatcher,types,this,dispatcher,types,dispatcher,types
AbstractFilterRegistrationBean -> public void setDispatcherTypes(EnumSet<DispatcherType> dispatcherTypes);1519362690;Sets the dispatcher types that should be used with the registration. If not_specified the types will be deduced based on the value of_{@link #isAsyncSupported()}._@param dispatcherTypes the dispatcher types;public void setDispatcherTypes(EnumSet<DispatcherType> dispatcherTypes) {_		this.dispatcherTypes = dispatcherTypes__	};sets,the,dispatcher,types,that,should,be,used,with,the,registration,if,not,specified,the,types,will,be,deduced,based,on,the,value,of,link,is,async,supported,param,dispatcher,types,the,dispatcher,types;public,void,set,dispatcher,types,enum,set,dispatcher,type,dispatcher,types,this,dispatcher,types,dispatcher,types
AbstractFilterRegistrationBean -> public void setDispatcherTypes(EnumSet<DispatcherType> dispatcherTypes);1522306440;Sets the dispatcher types that should be used with the registration. If not_specified the types will be deduced based on the value of_{@link #isAsyncSupported()}._@param dispatcherTypes the dispatcher types;public void setDispatcherTypes(EnumSet<DispatcherType> dispatcherTypes) {_		this.dispatcherTypes = dispatcherTypes__	};sets,the,dispatcher,types,that,should,be,used,with,the,registration,if,not,specified,the,types,will,be,deduced,based,on,the,value,of,link,is,async,supported,param,dispatcher,types,the,dispatcher,types;public,void,set,dispatcher,types,enum,set,dispatcher,type,dispatcher,types,this,dispatcher,types,dispatcher,types
AbstractFilterRegistrationBean -> public void setDispatcherTypes(EnumSet<DispatcherType> dispatcherTypes);1525963607;Sets the dispatcher types that should be used with the registration. If not_specified the types will be deduced based on the value of_{@link #isAsyncSupported()}._@param dispatcherTypes the dispatcher types;public void setDispatcherTypes(EnumSet<DispatcherType> dispatcherTypes) {_		this.dispatcherTypes = dispatcherTypes__	};sets,the,dispatcher,types,that,should,be,used,with,the,registration,if,not,specified,the,types,will,be,deduced,based,on,the,value,of,link,is,async,supported,param,dispatcher,types,the,dispatcher,types;public,void,set,dispatcher,types,enum,set,dispatcher,type,dispatcher,types,this,dispatcher,types,dispatcher,types
AbstractFilterRegistrationBean -> public void setDispatcherTypes(EnumSet<DispatcherType> dispatcherTypes);1539324803;Sets the dispatcher types that should be used with the registration. If not_specified the types will be deduced based on the value of_{@link #isAsyncSupported()}._@param dispatcherTypes the dispatcher types;public void setDispatcherTypes(EnumSet<DispatcherType> dispatcherTypes) {_		this.dispatcherTypes = dispatcherTypes__	};sets,the,dispatcher,types,that,should,be,used,with,the,registration,if,not,specified,the,types,will,be,deduced,based,on,the,value,of,link,is,async,supported,param,dispatcher,types,the,dispatcher,types;public,void,set,dispatcher,types,enum,set,dispatcher,type,dispatcher,types,this,dispatcher,types,dispatcher,types
AbstractFilterRegistrationBean -> public void setDispatcherTypes(EnumSet<DispatcherType> dispatcherTypes);1542792595;Sets the dispatcher types that should be used with the registration. If not_specified the types will be deduced based on the value of_{@link #isAsyncSupported()}._@param dispatcherTypes the dispatcher types;public void setDispatcherTypes(EnumSet<DispatcherType> dispatcherTypes) {_		this.dispatcherTypes = dispatcherTypes__	};sets,the,dispatcher,types,that,should,be,used,with,the,registration,if,not,specified,the,types,will,be,deduced,based,on,the,value,of,link,is,async,supported,param,dispatcher,types,the,dispatcher,types;public,void,set,dispatcher,types,enum,set,dispatcher,type,dispatcher,types,this,dispatcher,types,dispatcher,types
AbstractFilterRegistrationBean -> public void setDispatcherTypes(EnumSet<DispatcherType> dispatcherTypes);1543352081;Sets the dispatcher types that should be used with the registration. If not_specified the types will be deduced based on the value of_{@link #isAsyncSupported()}._@param dispatcherTypes the dispatcher types;public void setDispatcherTypes(EnumSet<DispatcherType> dispatcherTypes) {_		this.dispatcherTypes = dispatcherTypes__	};sets,the,dispatcher,types,that,should,be,used,with,the,registration,if,not,specified,the,types,will,be,deduced,based,on,the,value,of,link,is,async,supported,param,dispatcher,types,the,dispatcher,types;public,void,set,dispatcher,types,enum,set,dispatcher,type,dispatcher,types,this,dispatcher,types,dispatcher,types
AbstractFilterRegistrationBean -> public void setDispatcherTypes(EnumSet<DispatcherType> dispatcherTypes);1543561024;Sets the dispatcher types that should be used with the registration. If not_specified the types will be deduced based on the value of_{@link #isAsyncSupported()}._@param dispatcherTypes the dispatcher types;public void setDispatcherTypes(EnumSet<DispatcherType> dispatcherTypes) {_		this.dispatcherTypes = dispatcherTypes__	};sets,the,dispatcher,types,that,should,be,used,with,the,registration,if,not,specified,the,types,will,be,deduced,based,on,the,value,of,link,is,async,supported,param,dispatcher,types,the,dispatcher,types;public,void,set,dispatcher,types,enum,set,dispatcher,type,dispatcher,types,this,dispatcher,types,dispatcher,types
AbstractFilterRegistrationBean -> public void setDispatcherTypes(EnumSet<DispatcherType> dispatcherTypes);1551262923;Sets the dispatcher types that should be used with the registration. If not_specified the types will be deduced based on the value of_{@link #isAsyncSupported()}._@param dispatcherTypes the dispatcher types;public void setDispatcherTypes(EnumSet<DispatcherType> dispatcherTypes) {_		this.dispatcherTypes = dispatcherTypes__	};sets,the,dispatcher,types,that,should,be,used,with,the,registration,if,not,specified,the,types,will,be,deduced,based,on,the,value,of,link,is,async,supported,param,dispatcher,types,the,dispatcher,types;public,void,set,dispatcher,types,enum,set,dispatcher,type,dispatcher,types,this,dispatcher,types,dispatcher,types
