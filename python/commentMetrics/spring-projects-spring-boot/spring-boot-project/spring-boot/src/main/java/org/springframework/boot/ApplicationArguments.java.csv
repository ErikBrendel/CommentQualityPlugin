# id;timestamp;commentText;codeText;commentWords;codeWords
ApplicationArguments -> List<String> getOptionValues(String name)_;1507173536;Return the collection of values associated with the arguments option having the_given name._<ul>_<li>if the option is present and has no argument (e.g.: "--foo"), return an empty_collection ({@code []})</li>_<li>if the option is present and has a single value (e.g. "--foo=bar"), return a_collection having one element ({@code ["bar"]})</li>_<li>if the option is present and has multiple values (e.g. "--foo=bar --foo=baz"),_return a collection having elements for each value ({@code ["bar", "baz"]})</li>_<li>if the option is not present, return {@code null}</li>_</ul>_@param name the name of the option_@return a list of option values for the given name;List<String> getOptionValues(String name)_;return,the,collection,of,values,associated,with,the,arguments,option,having,the,given,name,ul,li,if,the,option,is,present,and,has,no,argument,e,g,foo,return,an,empty,collection,code,li,li,if,the,option,is,present,and,has,a,single,value,e,g,foo,bar,return,a,collection,having,one,element,code,bar,li,li,if,the,option,is,present,and,has,multiple,values,e,g,foo,bar,foo,baz,return,a,collection,having,elements,for,each,value,code,bar,baz,li,li,if,the,option,is,not,present,return,code,null,li,ul,param,name,the,name,of,the,option,return,a,list,of,option,values,for,the,given,name;list,string,get,option,values,string,name
ApplicationArguments -> List<String> getOptionValues(String name)_;1507661773;Return the collection of values associated with the arguments option having the_given name._<ul>_<li>if the option is present and has no argument (e.g.: "--foo"), return an empty_collection ({@code []})</li>_<li>if the option is present and has a single value (e.g. "--foo=bar"), return a_collection having one element ({@code ["bar"]})</li>_<li>if the option is present and has multiple values (e.g. "--foo=bar --foo=baz"),_return a collection having elements for each value ({@code ["bar", "baz"]})</li>_<li>if the option is not present, return {@code null}</li>_</ul>_@param name the name of the option_@return a list of option values for the given name;List<String> getOptionValues(String name)_;return,the,collection,of,values,associated,with,the,arguments,option,having,the,given,name,ul,li,if,the,option,is,present,and,has,no,argument,e,g,foo,return,an,empty,collection,code,li,li,if,the,option,is,present,and,has,a,single,value,e,g,foo,bar,return,a,collection,having,one,element,code,bar,li,li,if,the,option,is,present,and,has,multiple,values,e,g,foo,bar,foo,baz,return,a,collection,having,elements,for,each,value,code,bar,baz,li,li,if,the,option,is,not,present,return,code,null,li,ul,param,name,the,name,of,the,option,return,a,list,of,option,values,for,the,given,name;list,string,get,option,values,string,name
ApplicationArguments -> List<String> getOptionValues(String name)_;1509377510;Return the collection of values associated with the arguments option having the_given name._<ul>_<li>if the option is present and has no argument (e.g.: "--foo"), return an empty_collection ({@code []})</li>_<li>if the option is present and has a single value (e.g. "--foo=bar"), return a_collection having one element ({@code ["bar"]})</li>_<li>if the option is present and has multiple values (e.g. "--foo=bar --foo=baz"),_return a collection having elements for each value ({@code ["bar", "baz"]})</li>_<li>if the option is not present, return {@code null}</li>_</ul>_@param name the name of the option_@return a list of option values for the given name;List<String> getOptionValues(String name)_;return,the,collection,of,values,associated,with,the,arguments,option,having,the,given,name,ul,li,if,the,option,is,present,and,has,no,argument,e,g,foo,return,an,empty,collection,code,li,li,if,the,option,is,present,and,has,a,single,value,e,g,foo,bar,return,a,collection,having,one,element,code,bar,li,li,if,the,option,is,present,and,has,multiple,values,e,g,foo,bar,foo,baz,return,a,collection,having,elements,for,each,value,code,bar,baz,li,li,if,the,option,is,not,present,return,code,null,li,ul,param,name,the,name,of,the,option,return,a,list,of,option,values,for,the,given,name;list,string,get,option,values,string,name
ApplicationArguments -> Set<String> getOptionNames()_;1507173536;Return then names of all option arguments. For example, if the arguments were_"--foo=bar --debug" would return the values {@code ["foo", "debug"]}._@return the option names or an empty set;Set<String> getOptionNames()_;return,then,names,of,all,option,arguments,for,example,if,the,arguments,were,foo,bar,debug,would,return,the,values,code,foo,debug,return,the,option,names,or,an,empty,set;set,string,get,option,names
ApplicationArguments -> Set<String> getOptionNames()_;1507661773;Return then names of all option arguments. For example, if the arguments were_"--foo=bar --debug" would return the values {@code ["foo", "debug"]}._@return the option names or an empty set;Set<String> getOptionNames()_;return,then,names,of,all,option,arguments,for,example,if,the,arguments,were,foo,bar,debug,would,return,the,values,code,foo,debug,return,the,option,names,or,an,empty,set;set,string,get,option,names
ApplicationArguments -> Set<String> getOptionNames()_;1509377510;Return the names of all option arguments. For example, if the arguments were_"--foo=bar --debug" would return the values {@code ["foo", "debug"]}._@return the option names or an empty set;Set<String> getOptionNames()_;return,the,names,of,all,option,arguments,for,example,if,the,arguments,were,foo,bar,debug,would,return,the,values,code,foo,debug,return,the,option,names,or,an,empty,set;set,string,get,option,names
ApplicationArguments -> String[] getSourceArgs()_;1507173536;Return the raw unprocessed arguments that were passed to the application._@return the arguments;String[] getSourceArgs()_;return,the,raw,unprocessed,arguments,that,were,passed,to,the,application,return,the,arguments;string,get,source,args
ApplicationArguments -> String[] getSourceArgs()_;1507661773;Return the raw unprocessed arguments that were passed to the application._@return the arguments;String[] getSourceArgs()_;return,the,raw,unprocessed,arguments,that,were,passed,to,the,application,return,the,arguments;string,get,source,args
ApplicationArguments -> String[] getSourceArgs()_;1509377510;Return the raw unprocessed arguments that were passed to the application._@return the arguments;String[] getSourceArgs()_;return,the,raw,unprocessed,arguments,that,were,passed,to,the,application,return,the,arguments;string,get,source,args
ApplicationArguments -> List<String> getNonOptionArgs()_;1507173536;Return the collection of non-option arguments parsed._@return the non-option arguments or an empty list;List<String> getNonOptionArgs()_;return,the,collection,of,non,option,arguments,parsed,return,the,non,option,arguments,or,an,empty,list;list,string,get,non,option,args
ApplicationArguments -> List<String> getNonOptionArgs()_;1507661773;Return the collection of non-option arguments parsed._@return the non-option arguments or an empty list;List<String> getNonOptionArgs()_;return,the,collection,of,non,option,arguments,parsed,return,the,non,option,arguments,or,an,empty,list;list,string,get,non,option,args
ApplicationArguments -> List<String> getNonOptionArgs()_;1509377510;Return the collection of non-option arguments parsed._@return the non-option arguments or an empty list;List<String> getNonOptionArgs()_;return,the,collection,of,non,option,arguments,parsed,return,the,non,option,arguments,or,an,empty,list;list,string,get,non,option,args
ApplicationArguments -> boolean containsOption(String name)_;1507173536;Return whether the set of option arguments parsed from the arguments contains an_option with the given name._@param name the name to check_@return {@code true} if the arguments contain an option with the given name;boolean containsOption(String name)_;return,whether,the,set,of,option,arguments,parsed,from,the,arguments,contains,an,option,with,the,given,name,param,name,the,name,to,check,return,code,true,if,the,arguments,contain,an,option,with,the,given,name;boolean,contains,option,string,name
ApplicationArguments -> boolean containsOption(String name)_;1507661773;Return whether the set of option arguments parsed from the arguments contains an_option with the given name._@param name the name to check_@return {@code true} if the arguments contain an option with the given name;boolean containsOption(String name)_;return,whether,the,set,of,option,arguments,parsed,from,the,arguments,contains,an,option,with,the,given,name,param,name,the,name,to,check,return,code,true,if,the,arguments,contain,an,option,with,the,given,name;boolean,contains,option,string,name
ApplicationArguments -> boolean containsOption(String name)_;1509377510;Return whether the set of option arguments parsed from the arguments contains an_option with the given name._@param name the name to check_@return {@code true} if the arguments contain an option with the given name;boolean containsOption(String name)_;return,whether,the,set,of,option,arguments,parsed,from,the,arguments,contains,an,option,with,the,given,name,param,name,the,name,to,check,return,code,true,if,the,arguments,contain,an,option,with,the,given,name;boolean,contains,option,string,name
