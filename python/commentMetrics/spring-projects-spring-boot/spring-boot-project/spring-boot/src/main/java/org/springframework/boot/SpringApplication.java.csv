# id;timestamp;commentText;codeText;commentWords;codeWords
SpringApplication -> protected void logStartupInfo(boolean isRoot);1507173536;Called to log startup information, subclasses may override to add additional_logging._@param isRoot true if this application is the root of a context hierarchy;protected void logStartupInfo(boolean isRoot) {_		if (isRoot) {_			new StartupInfoLogger(this.mainApplicationClass)_					.logStarting(getApplicationLog())__		}_	};called,to,log,startup,information,subclasses,may,override,to,add,additional,logging,param,is,root,true,if,this,application,is,the,root,of,a,context,hierarchy;protected,void,log,startup,info,boolean,is,root,if,is,root,new,startup,info,logger,this,main,application,class,log,starting,get,application,log
SpringApplication -> protected void logStartupInfo(boolean isRoot);1509381678;Called to log startup information, subclasses may override to add additional_logging._@param isRoot true if this application is the root of a context hierarchy;protected void logStartupInfo(boolean isRoot) {_		if (isRoot) {_			new StartupInfoLogger(this.mainApplicationClass)_					.logStarting(getApplicationLog())__		}_	};called,to,log,startup,information,subclasses,may,override,to,add,additional,logging,param,is,root,true,if,this,application,is,the,root,of,a,context,hierarchy;protected,void,log,startup,info,boolean,is,root,if,is,root,new,startup,info,logger,this,main,application,class,log,starting,get,application,log
SpringApplication -> protected void logStartupInfo(boolean isRoot);1510995225;Called to log startup information, subclasses may override to add additional_logging._@param isRoot true if this application is the root of a context hierarchy;protected void logStartupInfo(boolean isRoot) {_		if (isRoot) {_			new StartupInfoLogger(this.mainApplicationClass)_					.logStarting(getApplicationLog())__		}_	};called,to,log,startup,information,subclasses,may,override,to,add,additional,logging,param,is,root,true,if,this,application,is,the,root,of,a,context,hierarchy;protected,void,log,startup,info,boolean,is,root,if,is,root,new,startup,info,logger,this,main,application,class,log,starting,get,application,log
SpringApplication -> protected void logStartupInfo(boolean isRoot);1515670013;Called to log startup information, subclasses may override to add additional_logging._@param isRoot true if this application is the root of a context hierarchy;protected void logStartupInfo(boolean isRoot) {_		if (isRoot) {_			new StartupInfoLogger(this.mainApplicationClass)_					.logStarting(getApplicationLog())__		}_	};called,to,log,startup,information,subclasses,may,override,to,add,additional,logging,param,is,root,true,if,this,application,is,the,root,of,a,context,hierarchy;protected,void,log,startup,info,boolean,is,root,if,is,root,new,startup,info,logger,this,main,application,class,log,starting,get,application,log
SpringApplication -> protected void logStartupInfo(boolean isRoot);1519362690;Called to log startup information, subclasses may override to add additional_logging._@param isRoot true if this application is the root of a context hierarchy;protected void logStartupInfo(boolean isRoot) {_		if (isRoot) {_			new StartupInfoLogger(this.mainApplicationClass)_					.logStarting(getApplicationLog())__		}_	};called,to,log,startup,information,subclasses,may,override,to,add,additional,logging,param,is,root,true,if,this,application,is,the,root,of,a,context,hierarchy;protected,void,log,startup,info,boolean,is,root,if,is,root,new,startup,info,logger,this,main,application,class,log,starting,get,application,log
SpringApplication -> protected void logStartupInfo(boolean isRoot);1522251721;Called to log startup information, subclasses may override to add additional_logging._@param isRoot true if this application is the root of a context hierarchy;protected void logStartupInfo(boolean isRoot) {_		if (isRoot) {_			new StartupInfoLogger(this.mainApplicationClass)_					.logStarting(getApplicationLog())__		}_	};called,to,log,startup,information,subclasses,may,override,to,add,additional,logging,param,is,root,true,if,this,application,is,the,root,of,a,context,hierarchy;protected,void,log,startup,info,boolean,is,root,if,is,root,new,startup,info,logger,this,main,application,class,log,starting,get,application,log
SpringApplication -> protected void logStartupInfo(boolean isRoot);1525376698;Called to log startup information, subclasses may override to add additional_logging._@param isRoot true if this application is the root of a context hierarchy;protected void logStartupInfo(boolean isRoot) {_		if (isRoot) {_			new StartupInfoLogger(this.mainApplicationClass)_					.logStarting(getApplicationLog())__		}_	};called,to,log,startup,information,subclasses,may,override,to,add,additional,logging,param,is,root,true,if,this,application,is,the,root,of,a,context,hierarchy;protected,void,log,startup,info,boolean,is,root,if,is,root,new,startup,info,logger,this,main,application,class,log,starting,get,application,log
SpringApplication -> protected void logStartupInfo(boolean isRoot);1525416882;Called to log startup information, subclasses may override to add additional_logging._@param isRoot true if this application is the root of a context hierarchy;protected void logStartupInfo(boolean isRoot) {_		if (isRoot) {_			new StartupInfoLogger(this.mainApplicationClass)_					.logStarting(getApplicationLog())__		}_	};called,to,log,startup,information,subclasses,may,override,to,add,additional,logging,param,is,root,true,if,this,application,is,the,root,of,a,context,hierarchy;protected,void,log,startup,info,boolean,is,root,if,is,root,new,startup,info,logger,this,main,application,class,log,starting,get,application,log
SpringApplication -> protected void logStartupInfo(boolean isRoot);1526993305;Called to log startup information, subclasses may override to add additional_logging._@param isRoot true if this application is the root of a context hierarchy;protected void logStartupInfo(boolean isRoot) {_		if (isRoot) {_			new StartupInfoLogger(this.mainApplicationClass)_					.logStarting(getApplicationLog())__		}_	};called,to,log,startup,information,subclasses,may,override,to,add,additional,logging,param,is,root,true,if,this,application,is,the,root,of,a,context,hierarchy;protected,void,log,startup,info,boolean,is,root,if,is,root,new,startup,info,logger,this,main,application,class,log,starting,get,application,log
SpringApplication -> protected void logStartupInfo(boolean isRoot);1529485904;Called to log startup information, subclasses may override to add additional_logging._@param isRoot true if this application is the root of a context hierarchy;protected void logStartupInfo(boolean isRoot) {_		if (isRoot) {_			new StartupInfoLogger(this.mainApplicationClass)_					.logStarting(getApplicationLog())__		}_	};called,to,log,startup,information,subclasses,may,override,to,add,additional,logging,param,is,root,true,if,this,application,is,the,root,of,a,context,hierarchy;protected,void,log,startup,info,boolean,is,root,if,is,root,new,startup,info,logger,this,main,application,class,log,starting,get,application,log
SpringApplication -> protected void logStartupInfo(boolean isRoot);1531140616;Called to log startup information, subclasses may override to add additional_logging._@param isRoot true if this application is the root of a context hierarchy;protected void logStartupInfo(boolean isRoot) {_		if (isRoot) {_			new StartupInfoLogger(this.mainApplicationClass)_					.logStarting(getApplicationLog())__		}_	};called,to,log,startup,information,subclasses,may,override,to,add,additional,logging,param,is,root,true,if,this,application,is,the,root,of,a,context,hierarchy;protected,void,log,startup,info,boolean,is,root,if,is,root,new,startup,info,logger,this,main,application,class,log,starting,get,application,log
SpringApplication -> protected void logStartupInfo(boolean isRoot);1531155529;Called to log startup information, subclasses may override to add additional_logging._@param isRoot true if this application is the root of a context hierarchy;protected void logStartupInfo(boolean isRoot) {_		if (isRoot) {_			new StartupInfoLogger(this.mainApplicationClass)_					.logStarting(getApplicationLog())__		}_	};called,to,log,startup,information,subclasses,may,override,to,add,additional,logging,param,is,root,true,if,this,application,is,the,root,of,a,context,hierarchy;protected,void,log,startup,info,boolean,is,root,if,is,root,new,startup,info,logger,this,main,application,class,log,starting,get,application,log
SpringApplication -> protected void logStartupInfo(boolean isRoot);1531222098;Called to log startup information, subclasses may override to add additional_logging._@param isRoot true if this application is the root of a context hierarchy;protected void logStartupInfo(boolean isRoot) {_		if (isRoot) {_			new StartupInfoLogger(this.mainApplicationClass)_					.logStarting(getApplicationLog())__		}_	};called,to,log,startup,information,subclasses,may,override,to,add,additional,logging,param,is,root,true,if,this,application,is,the,root,of,a,context,hierarchy;protected,void,log,startup,info,boolean,is,root,if,is,root,new,startup,info,logger,this,main,application,class,log,starting,get,application,log
SpringApplication -> protected void logStartupInfo(boolean isRoot);1532738143;Called to log startup information, subclasses may override to add additional_logging._@param isRoot true if this application is the root of a context hierarchy;protected void logStartupInfo(boolean isRoot) {_		if (isRoot) {_			new StartupInfoLogger(this.mainApplicationClass)_					.logStarting(getApplicationLog())__		}_	};called,to,log,startup,information,subclasses,may,override,to,add,additional,logging,param,is,root,true,if,this,application,is,the,root,of,a,context,hierarchy;protected,void,log,startup,info,boolean,is,root,if,is,root,new,startup,info,logger,this,main,application,class,log,starting,get,application,log
SpringApplication -> protected void logStartupInfo(boolean isRoot);1534188228;Called to log startup information, subclasses may override to add additional_logging._@param isRoot true if this application is the root of a context hierarchy;protected void logStartupInfo(boolean isRoot) {_		if (isRoot) {_			new StartupInfoLogger(this.mainApplicationClass)_					.logStarting(getApplicationLog())__		}_	};called,to,log,startup,information,subclasses,may,override,to,add,additional,logging,param,is,root,true,if,this,application,is,the,root,of,a,context,hierarchy;protected,void,log,startup,info,boolean,is,root,if,is,root,new,startup,info,logger,this,main,application,class,log,starting,get,application,log
SpringApplication -> protected void logStartupInfo(boolean isRoot);1535104170;Called to log startup information, subclasses may override to add additional_logging._@param isRoot true if this application is the root of a context hierarchy;protected void logStartupInfo(boolean isRoot) {_		if (isRoot) {_			new StartupInfoLogger(this.mainApplicationClass)_					.logStarting(getApplicationLog())__		}_	};called,to,log,startup,information,subclasses,may,override,to,add,additional,logging,param,is,root,true,if,this,application,is,the,root,of,a,context,hierarchy;protected,void,log,startup,info,boolean,is,root,if,is,root,new,startup,info,logger,this,main,application,class,log,starting,get,application,log
SpringApplication -> protected void logStartupInfo(boolean isRoot);1536701067;Called to log startup information, subclasses may override to add additional_logging._@param isRoot true if this application is the root of a context hierarchy;protected void logStartupInfo(boolean isRoot) {_		if (isRoot) {_			new StartupInfoLogger(this.mainApplicationClass)_					.logStarting(getApplicationLog())__		}_	};called,to,log,startup,information,subclasses,may,override,to,add,additional,logging,param,is,root,true,if,this,application,is,the,root,of,a,context,hierarchy;protected,void,log,startup,info,boolean,is,root,if,is,root,new,startup,info,logger,this,main,application,class,log,starting,get,application,log
SpringApplication -> protected void logStartupInfo(boolean isRoot);1538570355;Called to log startup information, subclasses may override to add additional_logging._@param isRoot true if this application is the root of a context hierarchy;protected void logStartupInfo(boolean isRoot) {_		if (isRoot) {_			new StartupInfoLogger(this.mainApplicationClass)_					.logStarting(getApplicationLog())__		}_	};called,to,log,startup,information,subclasses,may,override,to,add,additional,logging,param,is,root,true,if,this,application,is,the,root,of,a,context,hierarchy;protected,void,log,startup,info,boolean,is,root,if,is,root,new,startup,info,logger,this,main,application,class,log,starting,get,application,log
SpringApplication -> protected void logStartupInfo(boolean isRoot);1538707540;Called to log startup information, subclasses may override to add additional_logging._@param isRoot true if this application is the root of a context hierarchy;protected void logStartupInfo(boolean isRoot) {_		if (isRoot) {_			new StartupInfoLogger(this.mainApplicationClass)_					.logStarting(getApplicationLog())__		}_	};called,to,log,startup,information,subclasses,may,override,to,add,additional,logging,param,is,root,true,if,this,application,is,the,root,of,a,context,hierarchy;protected,void,log,startup,info,boolean,is,root,if,is,root,new,startup,info,logger,this,main,application,class,log,starting,get,application,log
SpringApplication -> protected void logStartupInfo(boolean isRoot);1538750610;Called to log startup information, subclasses may override to add additional_logging._@param isRoot true if this application is the root of a context hierarchy;protected void logStartupInfo(boolean isRoot) {_		if (isRoot) {_			new StartupInfoLogger(this.mainApplicationClass)_					.logStarting(getApplicationLog())__		}_	};called,to,log,startup,information,subclasses,may,override,to,add,additional,logging,param,is,root,true,if,this,application,is,the,root,of,a,context,hierarchy;protected,void,log,startup,info,boolean,is,root,if,is,root,new,startup,info,logger,this,main,application,class,log,starting,get,application,log
SpringApplication -> protected void logStartupInfo(boolean isRoot);1538771652;Called to log startup information, subclasses may override to add additional_logging._@param isRoot true if this application is the root of a context hierarchy;protected void logStartupInfo(boolean isRoot) {_		if (isRoot) {_			new StartupInfoLogger(this.mainApplicationClass)_					.logStarting(getApplicationLog())__		}_	};called,to,log,startup,information,subclasses,may,override,to,add,additional,logging,param,is,root,true,if,this,application,is,the,root,of,a,context,hierarchy;protected,void,log,startup,info,boolean,is,root,if,is,root,new,startup,info,logger,this,main,application,class,log,starting,get,application,log
SpringApplication -> protected void logStartupInfo(boolean isRoot);1540419762;Called to log startup information, subclasses may override to add additional_logging._@param isRoot true if this application is the root of a context hierarchy;protected void logStartupInfo(boolean isRoot) {_		if (isRoot) {_			new StartupInfoLogger(this.mainApplicationClass)_					.logStarting(getApplicationLog())__		}_	};called,to,log,startup,information,subclasses,may,override,to,add,additional,logging,param,is,root,true,if,this,application,is,the,root,of,a,context,hierarchy;protected,void,log,startup,info,boolean,is,root,if,is,root,new,startup,info,logger,this,main,application,class,log,starting,get,application,log
SpringApplication -> protected void logStartupInfo(boolean isRoot);1541060131;Called to log startup information, subclasses may override to add additional_logging._@param isRoot true if this application is the root of a context hierarchy;protected void logStartupInfo(boolean isRoot) {_		if (isRoot) {_			new StartupInfoLogger(this.mainApplicationClass)_					.logStarting(getApplicationLog())__		}_	};called,to,log,startup,information,subclasses,may,override,to,add,additional,logging,param,is,root,true,if,this,application,is,the,root,of,a,context,hierarchy;protected,void,log,startup,info,boolean,is,root,if,is,root,new,startup,info,logger,this,main,application,class,log,starting,get,application,log
SpringApplication -> protected void logStartupInfo(boolean isRoot);1546943477;Called to log startup information, subclasses may override to add additional_logging._@param isRoot true if this application is the root of a context hierarchy;protected void logStartupInfo(boolean isRoot) {_		if (isRoot) {_			new StartupInfoLogger(this.mainApplicationClass)_					.logStarting(getApplicationLog())__		}_	};called,to,log,startup,information,subclasses,may,override,to,add,additional,logging,param,is,root,true,if,this,application,is,the,root,of,a,context,hierarchy;protected,void,log,startup,info,boolean,is,root,if,is,root,new,startup,info,logger,this,main,application,class,log,starting,get,application,log
SpringApplication -> protected void logStartupInfo(boolean isRoot);1549791353;Called to log startup information, subclasses may override to add additional_logging._@param isRoot true if this application is the root of a context hierarchy;protected void logStartupInfo(boolean isRoot) {_		if (isRoot) {_			new StartupInfoLogger(this.mainApplicationClass)_					.logStarting(getApplicationLog())__		}_	};called,to,log,startup,information,subclasses,may,override,to,add,additional,logging,param,is,root,true,if,this,application,is,the,root,of,a,context,hierarchy;protected,void,log,startup,info,boolean,is,root,if,is,root,new,startup,info,logger,this,main,application,class,log,starting,get,application,log
SpringApplication -> protected void logStartupInfo(boolean isRoot);1550148109;Called to log startup information, subclasses may override to add additional_logging._@param isRoot true if this application is the root of a context hierarchy;protected void logStartupInfo(boolean isRoot) {_		if (isRoot) {_			new StartupInfoLogger(this.mainApplicationClass)_					.logStarting(getApplicationLog())__		}_	};called,to,log,startup,information,subclasses,may,override,to,add,additional,logging,param,is,root,true,if,this,application,is,the,root,of,a,context,hierarchy;protected,void,log,startup,info,boolean,is,root,if,is,root,new,startup,info,logger,this,main,application,class,log,starting,get,application,log
SpringApplication -> protected void refresh(ApplicationContext applicationContext);1507173536;Refresh the underlying {@link ApplicationContext}._@param applicationContext the application context to refresh;protected void refresh(ApplicationContext applicationContext) {_		Assert.isInstanceOf(AbstractApplicationContext.class, applicationContext)__		((AbstractApplicationContext) applicationContext).refresh()__	};refresh,the,underlying,link,application,context,param,application,context,the,application,context,to,refresh;protected,void,refresh,application,context,application,context,assert,is,instance,of,abstract,application,context,class,application,context,abstract,application,context,application,context,refresh
SpringApplication -> protected void refresh(ApplicationContext applicationContext);1509381678;Refresh the underlying {@link ApplicationContext}._@param applicationContext the application context to refresh;protected void refresh(ApplicationContext applicationContext) {_		Assert.isInstanceOf(AbstractApplicationContext.class, applicationContext)__		((AbstractApplicationContext) applicationContext).refresh()__	};refresh,the,underlying,link,application,context,param,application,context,the,application,context,to,refresh;protected,void,refresh,application,context,application,context,assert,is,instance,of,abstract,application,context,class,application,context,abstract,application,context,application,context,refresh
SpringApplication -> protected void refresh(ApplicationContext applicationContext);1510995225;Refresh the underlying {@link ApplicationContext}._@param applicationContext the application context to refresh;protected void refresh(ApplicationContext applicationContext) {_		Assert.isInstanceOf(AbstractApplicationContext.class, applicationContext)__		((AbstractApplicationContext) applicationContext).refresh()__	};refresh,the,underlying,link,application,context,param,application,context,the,application,context,to,refresh;protected,void,refresh,application,context,application,context,assert,is,instance,of,abstract,application,context,class,application,context,abstract,application,context,application,context,refresh
SpringApplication -> protected void refresh(ApplicationContext applicationContext);1515670013;Refresh the underlying {@link ApplicationContext}._@param applicationContext the application context to refresh;protected void refresh(ApplicationContext applicationContext) {_		Assert.isInstanceOf(AbstractApplicationContext.class, applicationContext)__		((AbstractApplicationContext) applicationContext).refresh()__	};refresh,the,underlying,link,application,context,param,application,context,the,application,context,to,refresh;protected,void,refresh,application,context,application,context,assert,is,instance,of,abstract,application,context,class,application,context,abstract,application,context,application,context,refresh
SpringApplication -> protected void refresh(ApplicationContext applicationContext);1519362690;Refresh the underlying {@link ApplicationContext}._@param applicationContext the application context to refresh;protected void refresh(ApplicationContext applicationContext) {_		Assert.isInstanceOf(AbstractApplicationContext.class, applicationContext)__		((AbstractApplicationContext) applicationContext).refresh()__	};refresh,the,underlying,link,application,context,param,application,context,the,application,context,to,refresh;protected,void,refresh,application,context,application,context,assert,is,instance,of,abstract,application,context,class,application,context,abstract,application,context,application,context,refresh
SpringApplication -> protected void refresh(ApplicationContext applicationContext);1522251721;Refresh the underlying {@link ApplicationContext}._@param applicationContext the application context to refresh;protected void refresh(ApplicationContext applicationContext) {_		Assert.isInstanceOf(AbstractApplicationContext.class, applicationContext)__		((AbstractApplicationContext) applicationContext).refresh()__	};refresh,the,underlying,link,application,context,param,application,context,the,application,context,to,refresh;protected,void,refresh,application,context,application,context,assert,is,instance,of,abstract,application,context,class,application,context,abstract,application,context,application,context,refresh
SpringApplication -> protected void refresh(ApplicationContext applicationContext);1525376698;Refresh the underlying {@link ApplicationContext}._@param applicationContext the application context to refresh;protected void refresh(ApplicationContext applicationContext) {_		Assert.isInstanceOf(AbstractApplicationContext.class, applicationContext)__		((AbstractApplicationContext) applicationContext).refresh()__	};refresh,the,underlying,link,application,context,param,application,context,the,application,context,to,refresh;protected,void,refresh,application,context,application,context,assert,is,instance,of,abstract,application,context,class,application,context,abstract,application,context,application,context,refresh
SpringApplication -> protected void refresh(ApplicationContext applicationContext);1525416882;Refresh the underlying {@link ApplicationContext}._@param applicationContext the application context to refresh;protected void refresh(ApplicationContext applicationContext) {_		Assert.isInstanceOf(AbstractApplicationContext.class, applicationContext)__		((AbstractApplicationContext) applicationContext).refresh()__	};refresh,the,underlying,link,application,context,param,application,context,the,application,context,to,refresh;protected,void,refresh,application,context,application,context,assert,is,instance,of,abstract,application,context,class,application,context,abstract,application,context,application,context,refresh
SpringApplication -> protected void refresh(ApplicationContext applicationContext);1526993305;Refresh the underlying {@link ApplicationContext}._@param applicationContext the application context to refresh;protected void refresh(ApplicationContext applicationContext) {_		Assert.isInstanceOf(AbstractApplicationContext.class, applicationContext)__		((AbstractApplicationContext) applicationContext).refresh()__	};refresh,the,underlying,link,application,context,param,application,context,the,application,context,to,refresh;protected,void,refresh,application,context,application,context,assert,is,instance,of,abstract,application,context,class,application,context,abstract,application,context,application,context,refresh
SpringApplication -> protected void refresh(ApplicationContext applicationContext);1529485904;Refresh the underlying {@link ApplicationContext}._@param applicationContext the application context to refresh;protected void refresh(ApplicationContext applicationContext) {_		Assert.isInstanceOf(AbstractApplicationContext.class, applicationContext)__		((AbstractApplicationContext) applicationContext).refresh()__	};refresh,the,underlying,link,application,context,param,application,context,the,application,context,to,refresh;protected,void,refresh,application,context,application,context,assert,is,instance,of,abstract,application,context,class,application,context,abstract,application,context,application,context,refresh
SpringApplication -> protected void refresh(ApplicationContext applicationContext);1531140616;Refresh the underlying {@link ApplicationContext}._@param applicationContext the application context to refresh;protected void refresh(ApplicationContext applicationContext) {_		Assert.isInstanceOf(AbstractApplicationContext.class, applicationContext)__		((AbstractApplicationContext) applicationContext).refresh()__	};refresh,the,underlying,link,application,context,param,application,context,the,application,context,to,refresh;protected,void,refresh,application,context,application,context,assert,is,instance,of,abstract,application,context,class,application,context,abstract,application,context,application,context,refresh
SpringApplication -> protected void refresh(ApplicationContext applicationContext);1531155529;Refresh the underlying {@link ApplicationContext}._@param applicationContext the application context to refresh;protected void refresh(ApplicationContext applicationContext) {_		Assert.isInstanceOf(AbstractApplicationContext.class, applicationContext)__		((AbstractApplicationContext) applicationContext).refresh()__	};refresh,the,underlying,link,application,context,param,application,context,the,application,context,to,refresh;protected,void,refresh,application,context,application,context,assert,is,instance,of,abstract,application,context,class,application,context,abstract,application,context,application,context,refresh
SpringApplication -> protected void refresh(ApplicationContext applicationContext);1531222098;Refresh the underlying {@link ApplicationContext}._@param applicationContext the application context to refresh;protected void refresh(ApplicationContext applicationContext) {_		Assert.isInstanceOf(AbstractApplicationContext.class, applicationContext)__		((AbstractApplicationContext) applicationContext).refresh()__	};refresh,the,underlying,link,application,context,param,application,context,the,application,context,to,refresh;protected,void,refresh,application,context,application,context,assert,is,instance,of,abstract,application,context,class,application,context,abstract,application,context,application,context,refresh
SpringApplication -> protected void refresh(ApplicationContext applicationContext);1532738143;Refresh the underlying {@link ApplicationContext}._@param applicationContext the application context to refresh;protected void refresh(ApplicationContext applicationContext) {_		Assert.isInstanceOf(AbstractApplicationContext.class, applicationContext)__		((AbstractApplicationContext) applicationContext).refresh()__	};refresh,the,underlying,link,application,context,param,application,context,the,application,context,to,refresh;protected,void,refresh,application,context,application,context,assert,is,instance,of,abstract,application,context,class,application,context,abstract,application,context,application,context,refresh
SpringApplication -> protected void refresh(ApplicationContext applicationContext);1534188228;Refresh the underlying {@link ApplicationContext}._@param applicationContext the application context to refresh;protected void refresh(ApplicationContext applicationContext) {_		Assert.isInstanceOf(AbstractApplicationContext.class, applicationContext)__		((AbstractApplicationContext) applicationContext).refresh()__	};refresh,the,underlying,link,application,context,param,application,context,the,application,context,to,refresh;protected,void,refresh,application,context,application,context,assert,is,instance,of,abstract,application,context,class,application,context,abstract,application,context,application,context,refresh
SpringApplication -> protected void refresh(ApplicationContext applicationContext);1535104170;Refresh the underlying {@link ApplicationContext}._@param applicationContext the application context to refresh;protected void refresh(ApplicationContext applicationContext) {_		Assert.isInstanceOf(AbstractApplicationContext.class, applicationContext)__		((AbstractApplicationContext) applicationContext).refresh()__	};refresh,the,underlying,link,application,context,param,application,context,the,application,context,to,refresh;protected,void,refresh,application,context,application,context,assert,is,instance,of,abstract,application,context,class,application,context,abstract,application,context,application,context,refresh
SpringApplication -> protected void refresh(ApplicationContext applicationContext);1536701067;Refresh the underlying {@link ApplicationContext}._@param applicationContext the application context to refresh;protected void refresh(ApplicationContext applicationContext) {_		Assert.isInstanceOf(AbstractApplicationContext.class, applicationContext)__		((AbstractApplicationContext) applicationContext).refresh()__	};refresh,the,underlying,link,application,context,param,application,context,the,application,context,to,refresh;protected,void,refresh,application,context,application,context,assert,is,instance,of,abstract,application,context,class,application,context,abstract,application,context,application,context,refresh
SpringApplication -> protected void refresh(ApplicationContext applicationContext);1538570355;Refresh the underlying {@link ApplicationContext}._@param applicationContext the application context to refresh;protected void refresh(ApplicationContext applicationContext) {_		Assert.isInstanceOf(AbstractApplicationContext.class, applicationContext)__		((AbstractApplicationContext) applicationContext).refresh()__	};refresh,the,underlying,link,application,context,param,application,context,the,application,context,to,refresh;protected,void,refresh,application,context,application,context,assert,is,instance,of,abstract,application,context,class,application,context,abstract,application,context,application,context,refresh
SpringApplication -> protected void refresh(ApplicationContext applicationContext);1538707540;Refresh the underlying {@link ApplicationContext}._@param applicationContext the application context to refresh;protected void refresh(ApplicationContext applicationContext) {_		Assert.isInstanceOf(AbstractApplicationContext.class, applicationContext)__		((AbstractApplicationContext) applicationContext).refresh()__	};refresh,the,underlying,link,application,context,param,application,context,the,application,context,to,refresh;protected,void,refresh,application,context,application,context,assert,is,instance,of,abstract,application,context,class,application,context,abstract,application,context,application,context,refresh
SpringApplication -> protected void refresh(ApplicationContext applicationContext);1538750610;Refresh the underlying {@link ApplicationContext}._@param applicationContext the application context to refresh;protected void refresh(ApplicationContext applicationContext) {_		Assert.isInstanceOf(AbstractApplicationContext.class, applicationContext)__		((AbstractApplicationContext) applicationContext).refresh()__	};refresh,the,underlying,link,application,context,param,application,context,the,application,context,to,refresh;protected,void,refresh,application,context,application,context,assert,is,instance,of,abstract,application,context,class,application,context,abstract,application,context,application,context,refresh
SpringApplication -> protected void refresh(ApplicationContext applicationContext);1538771652;Refresh the underlying {@link ApplicationContext}._@param applicationContext the application context to refresh;protected void refresh(ApplicationContext applicationContext) {_		Assert.isInstanceOf(AbstractApplicationContext.class, applicationContext)__		((AbstractApplicationContext) applicationContext).refresh()__	};refresh,the,underlying,link,application,context,param,application,context,the,application,context,to,refresh;protected,void,refresh,application,context,application,context,assert,is,instance,of,abstract,application,context,class,application,context,abstract,application,context,application,context,refresh
SpringApplication -> protected void refresh(ApplicationContext applicationContext);1540419762;Refresh the underlying {@link ApplicationContext}._@param applicationContext the application context to refresh;protected void refresh(ApplicationContext applicationContext) {_		Assert.isInstanceOf(AbstractApplicationContext.class, applicationContext)__		((AbstractApplicationContext) applicationContext).refresh()__	};refresh,the,underlying,link,application,context,param,application,context,the,application,context,to,refresh;protected,void,refresh,application,context,application,context,assert,is,instance,of,abstract,application,context,class,application,context,abstract,application,context,application,context,refresh
SpringApplication -> protected void refresh(ApplicationContext applicationContext);1541060131;Refresh the underlying {@link ApplicationContext}._@param applicationContext the application context to refresh;protected void refresh(ApplicationContext applicationContext) {_		Assert.isInstanceOf(AbstractApplicationContext.class, applicationContext)__		((AbstractApplicationContext) applicationContext).refresh()__	};refresh,the,underlying,link,application,context,param,application,context,the,application,context,to,refresh;protected,void,refresh,application,context,application,context,assert,is,instance,of,abstract,application,context,class,application,context,abstract,application,context,application,context,refresh
SpringApplication -> protected void refresh(ApplicationContext applicationContext);1546943477;Refresh the underlying {@link ApplicationContext}._@param applicationContext the application context to refresh;protected void refresh(ApplicationContext applicationContext) {_		Assert.isInstanceOf(AbstractApplicationContext.class, applicationContext)__		((AbstractApplicationContext) applicationContext).refresh()__	};refresh,the,underlying,link,application,context,param,application,context,the,application,context,to,refresh;protected,void,refresh,application,context,application,context,assert,is,instance,of,abstract,application,context,class,application,context,abstract,application,context,application,context,refresh
SpringApplication -> protected void refresh(ApplicationContext applicationContext);1549791353;Refresh the underlying {@link ApplicationContext}._@param applicationContext the application context to refresh;protected void refresh(ApplicationContext applicationContext) {_		Assert.isInstanceOf(AbstractApplicationContext.class, applicationContext)__		((AbstractApplicationContext) applicationContext).refresh()__	};refresh,the,underlying,link,application,context,param,application,context,the,application,context,to,refresh;protected,void,refresh,application,context,application,context,assert,is,instance,of,abstract,application,context,class,application,context,abstract,application,context,application,context,refresh
SpringApplication -> protected void refresh(ApplicationContext applicationContext);1550148109;Refresh the underlying {@link ApplicationContext}._@param applicationContext the application context to refresh;protected void refresh(ApplicationContext applicationContext) {_		Assert.isInstanceOf(AbstractApplicationContext.class, applicationContext)__		((AbstractApplicationContext) applicationContext).refresh()__	};refresh,the,underlying,link,application,context,param,application,context,the,application,context,to,refresh;protected,void,refresh,application,context,application,context,assert,is,instance,of,abstract,application,context,class,application,context,abstract,application,context,application,context,refresh
SpringApplication -> public WebApplicationType getWebApplicationType();1507173536;Returns the type of web application that is being run._@return the type of web application_@since 2.0.0;public WebApplicationType getWebApplicationType() {_		return this.webApplicationType__	};returns,the,type,of,web,application,that,is,being,run,return,the,type,of,web,application,since,2,0,0;public,web,application,type,get,web,application,type,return,this,web,application,type
SpringApplication -> public WebApplicationType getWebApplicationType();1509381678;Returns the type of web application that is being run._@return the type of web application_@since 2.0.0;public WebApplicationType getWebApplicationType() {_		return this.webApplicationType__	};returns,the,type,of,web,application,that,is,being,run,return,the,type,of,web,application,since,2,0,0;public,web,application,type,get,web,application,type,return,this,web,application,type
SpringApplication -> public WebApplicationType getWebApplicationType();1510995225;Returns the type of web application that is being run._@return the type of web application_@since 2.0.0;public WebApplicationType getWebApplicationType() {_		return this.webApplicationType__	};returns,the,type,of,web,application,that,is,being,run,return,the,type,of,web,application,since,2,0,0;public,web,application,type,get,web,application,type,return,this,web,application,type
SpringApplication -> public WebApplicationType getWebApplicationType();1515670013;Returns the type of web application that is being run._@return the type of web application_@since 2.0.0;public WebApplicationType getWebApplicationType() {_		return this.webApplicationType__	};returns,the,type,of,web,application,that,is,being,run,return,the,type,of,web,application,since,2,0,0;public,web,application,type,get,web,application,type,return,this,web,application,type
SpringApplication -> public WebApplicationType getWebApplicationType();1519362690;Returns the type of web application that is being run._@return the type of web application_@since 2.0.0;public WebApplicationType getWebApplicationType() {_		return this.webApplicationType__	};returns,the,type,of,web,application,that,is,being,run,return,the,type,of,web,application,since,2,0,0;public,web,application,type,get,web,application,type,return,this,web,application,type
SpringApplication -> public WebApplicationType getWebApplicationType();1522251721;Returns the type of web application that is being run._@return the type of web application_@since 2.0.0;public WebApplicationType getWebApplicationType() {_		return this.webApplicationType__	};returns,the,type,of,web,application,that,is,being,run,return,the,type,of,web,application,since,2,0,0;public,web,application,type,get,web,application,type,return,this,web,application,type
SpringApplication -> public WebApplicationType getWebApplicationType();1525376698;Returns the type of web application that is being run._@return the type of web application_@since 2.0.0;public WebApplicationType getWebApplicationType() {_		return this.webApplicationType__	};returns,the,type,of,web,application,that,is,being,run,return,the,type,of,web,application,since,2,0,0;public,web,application,type,get,web,application,type,return,this,web,application,type
SpringApplication -> public WebApplicationType getWebApplicationType();1525416882;Returns the type of web application that is being run._@return the type of web application_@since 2.0.0;public WebApplicationType getWebApplicationType() {_		return this.webApplicationType__	};returns,the,type,of,web,application,that,is,being,run,return,the,type,of,web,application,since,2,0,0;public,web,application,type,get,web,application,type,return,this,web,application,type
SpringApplication -> public WebApplicationType getWebApplicationType();1526993305;Returns the type of web application that is being run._@return the type of web application_@since 2.0.0;public WebApplicationType getWebApplicationType() {_		return this.webApplicationType__	};returns,the,type,of,web,application,that,is,being,run,return,the,type,of,web,application,since,2,0,0;public,web,application,type,get,web,application,type,return,this,web,application,type
SpringApplication -> public WebApplicationType getWebApplicationType();1529485904;Returns the type of web application that is being run._@return the type of web application_@since 2.0.0;public WebApplicationType getWebApplicationType() {_		return this.webApplicationType__	};returns,the,type,of,web,application,that,is,being,run,return,the,type,of,web,application,since,2,0,0;public,web,application,type,get,web,application,type,return,this,web,application,type
SpringApplication -> public WebApplicationType getWebApplicationType();1531140616;Returns the type of web application that is being run._@return the type of web application_@since 2.0.0;public WebApplicationType getWebApplicationType() {_		return this.webApplicationType__	};returns,the,type,of,web,application,that,is,being,run,return,the,type,of,web,application,since,2,0,0;public,web,application,type,get,web,application,type,return,this,web,application,type
SpringApplication -> public WebApplicationType getWebApplicationType();1531155529;Returns the type of web application that is being run._@return the type of web application_@since 2.0.0;public WebApplicationType getWebApplicationType() {_		return this.webApplicationType__	};returns,the,type,of,web,application,that,is,being,run,return,the,type,of,web,application,since,2,0,0;public,web,application,type,get,web,application,type,return,this,web,application,type
SpringApplication -> public WebApplicationType getWebApplicationType();1531222098;Returns the type of web application that is being run._@return the type of web application_@since 2.0.0;public WebApplicationType getWebApplicationType() {_		return this.webApplicationType__	};returns,the,type,of,web,application,that,is,being,run,return,the,type,of,web,application,since,2,0,0;public,web,application,type,get,web,application,type,return,this,web,application,type
SpringApplication -> public WebApplicationType getWebApplicationType();1532738143;Returns the type of web application that is being run._@return the type of web application_@since 2.0.0;public WebApplicationType getWebApplicationType() {_		return this.webApplicationType__	};returns,the,type,of,web,application,that,is,being,run,return,the,type,of,web,application,since,2,0,0;public,web,application,type,get,web,application,type,return,this,web,application,type
SpringApplication -> public WebApplicationType getWebApplicationType();1534188228;Returns the type of web application that is being run._@return the type of web application_@since 2.0.0;public WebApplicationType getWebApplicationType() {_		return this.webApplicationType__	};returns,the,type,of,web,application,that,is,being,run,return,the,type,of,web,application,since,2,0,0;public,web,application,type,get,web,application,type,return,this,web,application,type
SpringApplication -> public WebApplicationType getWebApplicationType();1535104170;Returns the type of web application that is being run._@return the type of web application_@since 2.0.0;public WebApplicationType getWebApplicationType() {_		return this.webApplicationType__	};returns,the,type,of,web,application,that,is,being,run,return,the,type,of,web,application,since,2,0,0;public,web,application,type,get,web,application,type,return,this,web,application,type
SpringApplication -> public WebApplicationType getWebApplicationType();1536701067;Returns the type of web application that is being run._@return the type of web application_@since 2.0.0;public WebApplicationType getWebApplicationType() {_		return this.webApplicationType__	};returns,the,type,of,web,application,that,is,being,run,return,the,type,of,web,application,since,2,0,0;public,web,application,type,get,web,application,type,return,this,web,application,type
SpringApplication -> public WebApplicationType getWebApplicationType();1538570355;Returns the type of web application that is being run._@return the type of web application_@since 2.0.0;public WebApplicationType getWebApplicationType() {_		return this.webApplicationType__	};returns,the,type,of,web,application,that,is,being,run,return,the,type,of,web,application,since,2,0,0;public,web,application,type,get,web,application,type,return,this,web,application,type
SpringApplication -> public WebApplicationType getWebApplicationType();1538707540;Returns the type of web application that is being run._@return the type of web application_@since 2.0.0;public WebApplicationType getWebApplicationType() {_		return this.webApplicationType__	};returns,the,type,of,web,application,that,is,being,run,return,the,type,of,web,application,since,2,0,0;public,web,application,type,get,web,application,type,return,this,web,application,type
SpringApplication -> public WebApplicationType getWebApplicationType();1538750610;Returns the type of web application that is being run._@return the type of web application_@since 2.0.0;public WebApplicationType getWebApplicationType() {_		return this.webApplicationType__	};returns,the,type,of,web,application,that,is,being,run,return,the,type,of,web,application,since,2,0,0;public,web,application,type,get,web,application,type,return,this,web,application,type
SpringApplication -> public WebApplicationType getWebApplicationType();1538771652;Returns the type of web application that is being run._@return the type of web application_@since 2.0.0;public WebApplicationType getWebApplicationType() {_		return this.webApplicationType__	};returns,the,type,of,web,application,that,is,being,run,return,the,type,of,web,application,since,2,0,0;public,web,application,type,get,web,application,type,return,this,web,application,type
SpringApplication -> public WebApplicationType getWebApplicationType();1540419762;Returns the type of web application that is being run._@return the type of web application_@since 2.0.0;public WebApplicationType getWebApplicationType() {_		return this.webApplicationType__	};returns,the,type,of,web,application,that,is,being,run,return,the,type,of,web,application,since,2,0,0;public,web,application,type,get,web,application,type,return,this,web,application,type
SpringApplication -> public WebApplicationType getWebApplicationType();1541060131;Returns the type of web application that is being run._@return the type of web application_@since 2.0.0;public WebApplicationType getWebApplicationType() {_		return this.webApplicationType__	};returns,the,type,of,web,application,that,is,being,run,return,the,type,of,web,application,since,2,0,0;public,web,application,type,get,web,application,type,return,this,web,application,type
SpringApplication -> public WebApplicationType getWebApplicationType();1546943477;Returns the type of web application that is being run._@return the type of web application_@since 2.0.0;public WebApplicationType getWebApplicationType() {_		return this.webApplicationType__	};returns,the,type,of,web,application,that,is,being,run,return,the,type,of,web,application,since,2,0,0;public,web,application,type,get,web,application,type,return,this,web,application,type
SpringApplication -> public WebApplicationType getWebApplicationType();1549791353;Returns the type of web application that is being run._@return the type of web application_@since 2.0.0;public WebApplicationType getWebApplicationType() {_		return this.webApplicationType__	};returns,the,type,of,web,application,that,is,being,run,return,the,type,of,web,application,since,2,0,0;public,web,application,type,get,web,application,type,return,this,web,application,type
SpringApplication -> public WebApplicationType getWebApplicationType();1550148109;Returns the type of web application that is being run._@return the type of web application_@since 2.0.0;public WebApplicationType getWebApplicationType() {_		return this.webApplicationType__	};returns,the,type,of,web,application,that,is,being,run,return,the,type,of,web,application,since,2,0,0;public,web,application,type,get,web,application,type,return,this,web,application,type
SpringApplication -> protected void registerLoggedException(Throwable exception);1507173536;Register that the given exception has been logged. By default, if the running in_the main thread, this method will suppress additional printing of the stacktrace._@param exception the exception that was logged;protected void registerLoggedException(Throwable exception) {_		SpringBootExceptionHandler handler = getSpringBootExceptionHandler()__		if (handler != null) {_			handler.registerLoggedException(exception)__		}_	};register,that,the,given,exception,has,been,logged,by,default,if,the,running,in,the,main,thread,this,method,will,suppress,additional,printing,of,the,stacktrace,param,exception,the,exception,that,was,logged;protected,void,register,logged,exception,throwable,exception,spring,boot,exception,handler,handler,get,spring,boot,exception,handler,if,handler,null,handler,register,logged,exception,exception
SpringApplication -> protected void registerLoggedException(Throwable exception);1509381678;Register that the given exception has been logged. By default, if the running in_the main thread, this method will suppress additional printing of the stacktrace._@param exception the exception that was logged;protected void registerLoggedException(Throwable exception) {_		SpringBootExceptionHandler handler = getSpringBootExceptionHandler()__		if (handler != null) {_			handler.registerLoggedException(exception)__		}_	};register,that,the,given,exception,has,been,logged,by,default,if,the,running,in,the,main,thread,this,method,will,suppress,additional,printing,of,the,stacktrace,param,exception,the,exception,that,was,logged;protected,void,register,logged,exception,throwable,exception,spring,boot,exception,handler,handler,get,spring,boot,exception,handler,if,handler,null,handler,register,logged,exception,exception
SpringApplication -> protected void registerLoggedException(Throwable exception);1510995225;Register that the given exception has been logged. By default, if the running in_the main thread, this method will suppress additional printing of the stacktrace._@param exception the exception that was logged;protected void registerLoggedException(Throwable exception) {_		SpringBootExceptionHandler handler = getSpringBootExceptionHandler()__		if (handler != null) {_			handler.registerLoggedException(exception)__		}_	};register,that,the,given,exception,has,been,logged,by,default,if,the,running,in,the,main,thread,this,method,will,suppress,additional,printing,of,the,stacktrace,param,exception,the,exception,that,was,logged;protected,void,register,logged,exception,throwable,exception,spring,boot,exception,handler,handler,get,spring,boot,exception,handler,if,handler,null,handler,register,logged,exception,exception
SpringApplication -> protected void registerLoggedException(Throwable exception);1515670013;Register that the given exception has been logged. By default, if the running in_the main thread, this method will suppress additional printing of the stacktrace._@param exception the exception that was logged;protected void registerLoggedException(Throwable exception) {_		SpringBootExceptionHandler handler = getSpringBootExceptionHandler()__		if (handler != null) {_			handler.registerLoggedException(exception)__		}_	};register,that,the,given,exception,has,been,logged,by,default,if,the,running,in,the,main,thread,this,method,will,suppress,additional,printing,of,the,stacktrace,param,exception,the,exception,that,was,logged;protected,void,register,logged,exception,throwable,exception,spring,boot,exception,handler,handler,get,spring,boot,exception,handler,if,handler,null,handler,register,logged,exception,exception
SpringApplication -> protected void registerLoggedException(Throwable exception);1519362690;Register that the given exception has been logged. By default, if the running in_the main thread, this method will suppress additional printing of the stacktrace._@param exception the exception that was logged;protected void registerLoggedException(Throwable exception) {_		SpringBootExceptionHandler handler = getSpringBootExceptionHandler()__		if (handler != null) {_			handler.registerLoggedException(exception)__		}_	};register,that,the,given,exception,has,been,logged,by,default,if,the,running,in,the,main,thread,this,method,will,suppress,additional,printing,of,the,stacktrace,param,exception,the,exception,that,was,logged;protected,void,register,logged,exception,throwable,exception,spring,boot,exception,handler,handler,get,spring,boot,exception,handler,if,handler,null,handler,register,logged,exception,exception
SpringApplication -> protected void registerLoggedException(Throwable exception);1522251721;Register that the given exception has been logged. By default, if the running in_the main thread, this method will suppress additional printing of the stacktrace._@param exception the exception that was logged;protected void registerLoggedException(Throwable exception) {_		SpringBootExceptionHandler handler = getSpringBootExceptionHandler()__		if (handler != null) {_			handler.registerLoggedException(exception)__		}_	};register,that,the,given,exception,has,been,logged,by,default,if,the,running,in,the,main,thread,this,method,will,suppress,additional,printing,of,the,stacktrace,param,exception,the,exception,that,was,logged;protected,void,register,logged,exception,throwable,exception,spring,boot,exception,handler,handler,get,spring,boot,exception,handler,if,handler,null,handler,register,logged,exception,exception
SpringApplication -> protected void registerLoggedException(Throwable exception);1525376698;Register that the given exception has been logged. By default, if the running in_the main thread, this method will suppress additional printing of the stacktrace._@param exception the exception that was logged;protected void registerLoggedException(Throwable exception) {_		SpringBootExceptionHandler handler = getSpringBootExceptionHandler()__		if (handler != null) {_			handler.registerLoggedException(exception)__		}_	};register,that,the,given,exception,has,been,logged,by,default,if,the,running,in,the,main,thread,this,method,will,suppress,additional,printing,of,the,stacktrace,param,exception,the,exception,that,was,logged;protected,void,register,logged,exception,throwable,exception,spring,boot,exception,handler,handler,get,spring,boot,exception,handler,if,handler,null,handler,register,logged,exception,exception
SpringApplication -> protected void registerLoggedException(Throwable exception);1525416882;Register that the given exception has been logged. By default, if the running in_the main thread, this method will suppress additional printing of the stacktrace._@param exception the exception that was logged;protected void registerLoggedException(Throwable exception) {_		SpringBootExceptionHandler handler = getSpringBootExceptionHandler()__		if (handler != null) {_			handler.registerLoggedException(exception)__		}_	};register,that,the,given,exception,has,been,logged,by,default,if,the,running,in,the,main,thread,this,method,will,suppress,additional,printing,of,the,stacktrace,param,exception,the,exception,that,was,logged;protected,void,register,logged,exception,throwable,exception,spring,boot,exception,handler,handler,get,spring,boot,exception,handler,if,handler,null,handler,register,logged,exception,exception
SpringApplication -> protected void registerLoggedException(Throwable exception);1526993305;Register that the given exception has been logged. By default, if the running in_the main thread, this method will suppress additional printing of the stacktrace._@param exception the exception that was logged;protected void registerLoggedException(Throwable exception) {_		SpringBootExceptionHandler handler = getSpringBootExceptionHandler()__		if (handler != null) {_			handler.registerLoggedException(exception)__		}_	};register,that,the,given,exception,has,been,logged,by,default,if,the,running,in,the,main,thread,this,method,will,suppress,additional,printing,of,the,stacktrace,param,exception,the,exception,that,was,logged;protected,void,register,logged,exception,throwable,exception,spring,boot,exception,handler,handler,get,spring,boot,exception,handler,if,handler,null,handler,register,logged,exception,exception
SpringApplication -> protected void registerLoggedException(Throwable exception);1529485904;Register that the given exception has been logged. By default, if the running in_the main thread, this method will suppress additional printing of the stacktrace._@param exception the exception that was logged;protected void registerLoggedException(Throwable exception) {_		SpringBootExceptionHandler handler = getSpringBootExceptionHandler()__		if (handler != null) {_			handler.registerLoggedException(exception)__		}_	};register,that,the,given,exception,has,been,logged,by,default,if,the,running,in,the,main,thread,this,method,will,suppress,additional,printing,of,the,stacktrace,param,exception,the,exception,that,was,logged;protected,void,register,logged,exception,throwable,exception,spring,boot,exception,handler,handler,get,spring,boot,exception,handler,if,handler,null,handler,register,logged,exception,exception
SpringApplication -> protected void registerLoggedException(Throwable exception);1531140616;Register that the given exception has been logged. By default, if the running in_the main thread, this method will suppress additional printing of the stacktrace._@param exception the exception that was logged;protected void registerLoggedException(Throwable exception) {_		SpringBootExceptionHandler handler = getSpringBootExceptionHandler()__		if (handler != null) {_			handler.registerLoggedException(exception)__		}_	};register,that,the,given,exception,has,been,logged,by,default,if,the,running,in,the,main,thread,this,method,will,suppress,additional,printing,of,the,stacktrace,param,exception,the,exception,that,was,logged;protected,void,register,logged,exception,throwable,exception,spring,boot,exception,handler,handler,get,spring,boot,exception,handler,if,handler,null,handler,register,logged,exception,exception
SpringApplication -> protected void registerLoggedException(Throwable exception);1531155529;Register that the given exception has been logged. By default, if the running in_the main thread, this method will suppress additional printing of the stacktrace._@param exception the exception that was logged;protected void registerLoggedException(Throwable exception) {_		SpringBootExceptionHandler handler = getSpringBootExceptionHandler()__		if (handler != null) {_			handler.registerLoggedException(exception)__		}_	};register,that,the,given,exception,has,been,logged,by,default,if,the,running,in,the,main,thread,this,method,will,suppress,additional,printing,of,the,stacktrace,param,exception,the,exception,that,was,logged;protected,void,register,logged,exception,throwable,exception,spring,boot,exception,handler,handler,get,spring,boot,exception,handler,if,handler,null,handler,register,logged,exception,exception
SpringApplication -> protected void registerLoggedException(Throwable exception);1531222098;Register that the given exception has been logged. By default, if the running in_the main thread, this method will suppress additional printing of the stacktrace._@param exception the exception that was logged;protected void registerLoggedException(Throwable exception) {_		SpringBootExceptionHandler handler = getSpringBootExceptionHandler()__		if (handler != null) {_			handler.registerLoggedException(exception)__		}_	};register,that,the,given,exception,has,been,logged,by,default,if,the,running,in,the,main,thread,this,method,will,suppress,additional,printing,of,the,stacktrace,param,exception,the,exception,that,was,logged;protected,void,register,logged,exception,throwable,exception,spring,boot,exception,handler,handler,get,spring,boot,exception,handler,if,handler,null,handler,register,logged,exception,exception
SpringApplication -> protected void registerLoggedException(Throwable exception);1532738143;Register that the given exception has been logged. By default, if the running in_the main thread, this method will suppress additional printing of the stacktrace._@param exception the exception that was logged;protected void registerLoggedException(Throwable exception) {_		SpringBootExceptionHandler handler = getSpringBootExceptionHandler()__		if (handler != null) {_			handler.registerLoggedException(exception)__		}_	};register,that,the,given,exception,has,been,logged,by,default,if,the,running,in,the,main,thread,this,method,will,suppress,additional,printing,of,the,stacktrace,param,exception,the,exception,that,was,logged;protected,void,register,logged,exception,throwable,exception,spring,boot,exception,handler,handler,get,spring,boot,exception,handler,if,handler,null,handler,register,logged,exception,exception
SpringApplication -> protected void registerLoggedException(Throwable exception);1534188228;Register that the given exception has been logged. By default, if the running in_the main thread, this method will suppress additional printing of the stacktrace._@param exception the exception that was logged;protected void registerLoggedException(Throwable exception) {_		SpringBootExceptionHandler handler = getSpringBootExceptionHandler()__		if (handler != null) {_			handler.registerLoggedException(exception)__		}_	};register,that,the,given,exception,has,been,logged,by,default,if,the,running,in,the,main,thread,this,method,will,suppress,additional,printing,of,the,stacktrace,param,exception,the,exception,that,was,logged;protected,void,register,logged,exception,throwable,exception,spring,boot,exception,handler,handler,get,spring,boot,exception,handler,if,handler,null,handler,register,logged,exception,exception
SpringApplication -> protected void registerLoggedException(Throwable exception);1535104170;Register that the given exception has been logged. By default, if the running in_the main thread, this method will suppress additional printing of the stacktrace._@param exception the exception that was logged;protected void registerLoggedException(Throwable exception) {_		SpringBootExceptionHandler handler = getSpringBootExceptionHandler()__		if (handler != null) {_			handler.registerLoggedException(exception)__		}_	};register,that,the,given,exception,has,been,logged,by,default,if,the,running,in,the,main,thread,this,method,will,suppress,additional,printing,of,the,stacktrace,param,exception,the,exception,that,was,logged;protected,void,register,logged,exception,throwable,exception,spring,boot,exception,handler,handler,get,spring,boot,exception,handler,if,handler,null,handler,register,logged,exception,exception
SpringApplication -> protected void registerLoggedException(Throwable exception);1536701067;Register that the given exception has been logged. By default, if the running in_the main thread, this method will suppress additional printing of the stacktrace._@param exception the exception that was logged;protected void registerLoggedException(Throwable exception) {_		SpringBootExceptionHandler handler = getSpringBootExceptionHandler()__		if (handler != null) {_			handler.registerLoggedException(exception)__		}_	};register,that,the,given,exception,has,been,logged,by,default,if,the,running,in,the,main,thread,this,method,will,suppress,additional,printing,of,the,stacktrace,param,exception,the,exception,that,was,logged;protected,void,register,logged,exception,throwable,exception,spring,boot,exception,handler,handler,get,spring,boot,exception,handler,if,handler,null,handler,register,logged,exception,exception
SpringApplication -> protected void registerLoggedException(Throwable exception);1538570355;Register that the given exception has been logged. By default, if the running in_the main thread, this method will suppress additional printing of the stacktrace._@param exception the exception that was logged;protected void registerLoggedException(Throwable exception) {_		SpringBootExceptionHandler handler = getSpringBootExceptionHandler()__		if (handler != null) {_			handler.registerLoggedException(exception)__		}_	};register,that,the,given,exception,has,been,logged,by,default,if,the,running,in,the,main,thread,this,method,will,suppress,additional,printing,of,the,stacktrace,param,exception,the,exception,that,was,logged;protected,void,register,logged,exception,throwable,exception,spring,boot,exception,handler,handler,get,spring,boot,exception,handler,if,handler,null,handler,register,logged,exception,exception
SpringApplication -> protected void registerLoggedException(Throwable exception);1538707540;Register that the given exception has been logged. By default, if the running in_the main thread, this method will suppress additional printing of the stacktrace._@param exception the exception that was logged;protected void registerLoggedException(Throwable exception) {_		SpringBootExceptionHandler handler = getSpringBootExceptionHandler()__		if (handler != null) {_			handler.registerLoggedException(exception)__		}_	};register,that,the,given,exception,has,been,logged,by,default,if,the,running,in,the,main,thread,this,method,will,suppress,additional,printing,of,the,stacktrace,param,exception,the,exception,that,was,logged;protected,void,register,logged,exception,throwable,exception,spring,boot,exception,handler,handler,get,spring,boot,exception,handler,if,handler,null,handler,register,logged,exception,exception
SpringApplication -> protected void registerLoggedException(Throwable exception);1538750610;Register that the given exception has been logged. By default, if the running in_the main thread, this method will suppress additional printing of the stacktrace._@param exception the exception that was logged;protected void registerLoggedException(Throwable exception) {_		SpringBootExceptionHandler handler = getSpringBootExceptionHandler()__		if (handler != null) {_			handler.registerLoggedException(exception)__		}_	};register,that,the,given,exception,has,been,logged,by,default,if,the,running,in,the,main,thread,this,method,will,suppress,additional,printing,of,the,stacktrace,param,exception,the,exception,that,was,logged;protected,void,register,logged,exception,throwable,exception,spring,boot,exception,handler,handler,get,spring,boot,exception,handler,if,handler,null,handler,register,logged,exception,exception
SpringApplication -> protected void registerLoggedException(Throwable exception);1538771652;Register that the given exception has been logged. By default, if the running in_the main thread, this method will suppress additional printing of the stacktrace._@param exception the exception that was logged;protected void registerLoggedException(Throwable exception) {_		SpringBootExceptionHandler handler = getSpringBootExceptionHandler()__		if (handler != null) {_			handler.registerLoggedException(exception)__		}_	};register,that,the,given,exception,has,been,logged,by,default,if,the,running,in,the,main,thread,this,method,will,suppress,additional,printing,of,the,stacktrace,param,exception,the,exception,that,was,logged;protected,void,register,logged,exception,throwable,exception,spring,boot,exception,handler,handler,get,spring,boot,exception,handler,if,handler,null,handler,register,logged,exception,exception
SpringApplication -> protected void registerLoggedException(Throwable exception);1540419762;Register that the given exception has been logged. By default, if the running in_the main thread, this method will suppress additional printing of the stacktrace._@param exception the exception that was logged;protected void registerLoggedException(Throwable exception) {_		SpringBootExceptionHandler handler = getSpringBootExceptionHandler()__		if (handler != null) {_			handler.registerLoggedException(exception)__		}_	};register,that,the,given,exception,has,been,logged,by,default,if,the,running,in,the,main,thread,this,method,will,suppress,additional,printing,of,the,stacktrace,param,exception,the,exception,that,was,logged;protected,void,register,logged,exception,throwable,exception,spring,boot,exception,handler,handler,get,spring,boot,exception,handler,if,handler,null,handler,register,logged,exception,exception
SpringApplication -> protected void registerLoggedException(Throwable exception);1541060131;Register that the given exception has been logged. By default, if the running in_the main thread, this method will suppress additional printing of the stacktrace._@param exception the exception that was logged;protected void registerLoggedException(Throwable exception) {_		SpringBootExceptionHandler handler = getSpringBootExceptionHandler()__		if (handler != null) {_			handler.registerLoggedException(exception)__		}_	};register,that,the,given,exception,has,been,logged,by,default,if,the,running,in,the,main,thread,this,method,will,suppress,additional,printing,of,the,stacktrace,param,exception,the,exception,that,was,logged;protected,void,register,logged,exception,throwable,exception,spring,boot,exception,handler,handler,get,spring,boot,exception,handler,if,handler,null,handler,register,logged,exception,exception
SpringApplication -> protected void registerLoggedException(Throwable exception);1546943477;Register that the given exception has been logged. By default, if the running in_the main thread, this method will suppress additional printing of the stacktrace._@param exception the exception that was logged;protected void registerLoggedException(Throwable exception) {_		SpringBootExceptionHandler handler = getSpringBootExceptionHandler()__		if (handler != null) {_			handler.registerLoggedException(exception)__		}_	};register,that,the,given,exception,has,been,logged,by,default,if,the,running,in,the,main,thread,this,method,will,suppress,additional,printing,of,the,stacktrace,param,exception,the,exception,that,was,logged;protected,void,register,logged,exception,throwable,exception,spring,boot,exception,handler,handler,get,spring,boot,exception,handler,if,handler,null,handler,register,logged,exception,exception
SpringApplication -> protected void registerLoggedException(Throwable exception);1549791353;Register that the given exception has been logged. By default, if the running in_the main thread, this method will suppress additional printing of the stacktrace._@param exception the exception that was logged;protected void registerLoggedException(Throwable exception) {_		SpringBootExceptionHandler handler = getSpringBootExceptionHandler()__		if (handler != null) {_			handler.registerLoggedException(exception)__		}_	};register,that,the,given,exception,has,been,logged,by,default,if,the,running,in,the,main,thread,this,method,will,suppress,additional,printing,of,the,stacktrace,param,exception,the,exception,that,was,logged;protected,void,register,logged,exception,throwable,exception,spring,boot,exception,handler,handler,get,spring,boot,exception,handler,if,handler,null,handler,register,logged,exception,exception
SpringApplication -> protected void registerLoggedException(Throwable exception);1550148109;Register that the given exception has been logged. By default, if the running in_the main thread, this method will suppress additional printing of the stacktrace._@param exception the exception that was logged;protected void registerLoggedException(Throwable exception) {_		SpringBootExceptionHandler handler = getSpringBootExceptionHandler()__		if (handler != null) {_			handler.registerLoggedException(exception)__		}_	};register,that,the,given,exception,has,been,logged,by,default,if,the,running,in,the,main,thread,this,method,will,suppress,additional,printing,of,the,stacktrace,param,exception,the,exception,that,was,logged;protected,void,register,logged,exception,throwable,exception,spring,boot,exception,handler,handler,get,spring,boot,exception,handler,if,handler,null,handler,register,logged,exception,exception
SpringApplication -> public void setBannerMode(Banner.Mode bannerMode);1507173536;Sets the mode used to display the banner when the application runs. Defaults to_{@code Banner.Mode.CONSOLE}._@param bannerMode the mode used to display the banner;public void setBannerMode(Banner.Mode bannerMode) {_		this.bannerMode = bannerMode__	};sets,the,mode,used,to,display,the,banner,when,the,application,runs,defaults,to,code,banner,mode,console,param,banner,mode,the,mode,used,to,display,the,banner;public,void,set,banner,mode,banner,mode,banner,mode,this,banner,mode,banner,mode
SpringApplication -> public void setBannerMode(Banner.Mode bannerMode);1509381678;Sets the mode used to display the banner when the application runs. Defaults to_{@code Banner.Mode.CONSOLE}._@param bannerMode the mode used to display the banner;public void setBannerMode(Banner.Mode bannerMode) {_		this.bannerMode = bannerMode__	};sets,the,mode,used,to,display,the,banner,when,the,application,runs,defaults,to,code,banner,mode,console,param,banner,mode,the,mode,used,to,display,the,banner;public,void,set,banner,mode,banner,mode,banner,mode,this,banner,mode,banner,mode
SpringApplication -> public void setBannerMode(Banner.Mode bannerMode);1510995225;Sets the mode used to display the banner when the application runs. Defaults to_{@code Banner.Mode.CONSOLE}._@param bannerMode the mode used to display the banner;public void setBannerMode(Banner.Mode bannerMode) {_		this.bannerMode = bannerMode__	};sets,the,mode,used,to,display,the,banner,when,the,application,runs,defaults,to,code,banner,mode,console,param,banner,mode,the,mode,used,to,display,the,banner;public,void,set,banner,mode,banner,mode,banner,mode,this,banner,mode,banner,mode
SpringApplication -> public void setBannerMode(Banner.Mode bannerMode);1515670013;Sets the mode used to display the banner when the application runs. Defaults to_{@code Banner.Mode.CONSOLE}._@param bannerMode the mode used to display the banner;public void setBannerMode(Banner.Mode bannerMode) {_		this.bannerMode = bannerMode__	};sets,the,mode,used,to,display,the,banner,when,the,application,runs,defaults,to,code,banner,mode,console,param,banner,mode,the,mode,used,to,display,the,banner;public,void,set,banner,mode,banner,mode,banner,mode,this,banner,mode,banner,mode
SpringApplication -> public void setBannerMode(Banner.Mode bannerMode);1519362690;Sets the mode used to display the banner when the application runs. Defaults to_{@code Banner.Mode.CONSOLE}._@param bannerMode the mode used to display the banner;public void setBannerMode(Banner.Mode bannerMode) {_		this.bannerMode = bannerMode__	};sets,the,mode,used,to,display,the,banner,when,the,application,runs,defaults,to,code,banner,mode,console,param,banner,mode,the,mode,used,to,display,the,banner;public,void,set,banner,mode,banner,mode,banner,mode,this,banner,mode,banner,mode
SpringApplication -> public void setBannerMode(Banner.Mode bannerMode);1522251721;Sets the mode used to display the banner when the application runs. Defaults to_{@code Banner.Mode.CONSOLE}._@param bannerMode the mode used to display the banner;public void setBannerMode(Banner.Mode bannerMode) {_		this.bannerMode = bannerMode__	};sets,the,mode,used,to,display,the,banner,when,the,application,runs,defaults,to,code,banner,mode,console,param,banner,mode,the,mode,used,to,display,the,banner;public,void,set,banner,mode,banner,mode,banner,mode,this,banner,mode,banner,mode
SpringApplication -> public void setBannerMode(Banner.Mode bannerMode);1525376698;Sets the mode used to display the banner when the application runs. Defaults to_{@code Banner.Mode.CONSOLE}._@param bannerMode the mode used to display the banner;public void setBannerMode(Banner.Mode bannerMode) {_		this.bannerMode = bannerMode__	};sets,the,mode,used,to,display,the,banner,when,the,application,runs,defaults,to,code,banner,mode,console,param,banner,mode,the,mode,used,to,display,the,banner;public,void,set,banner,mode,banner,mode,banner,mode,this,banner,mode,banner,mode
SpringApplication -> public void setBannerMode(Banner.Mode bannerMode);1525416882;Sets the mode used to display the banner when the application runs. Defaults to_{@code Banner.Mode.CONSOLE}._@param bannerMode the mode used to display the banner;public void setBannerMode(Banner.Mode bannerMode) {_		this.bannerMode = bannerMode__	};sets,the,mode,used,to,display,the,banner,when,the,application,runs,defaults,to,code,banner,mode,console,param,banner,mode,the,mode,used,to,display,the,banner;public,void,set,banner,mode,banner,mode,banner,mode,this,banner,mode,banner,mode
SpringApplication -> public void setBannerMode(Banner.Mode bannerMode);1526993305;Sets the mode used to display the banner when the application runs. Defaults to_{@code Banner.Mode.CONSOLE}._@param bannerMode the mode used to display the banner;public void setBannerMode(Banner.Mode bannerMode) {_		this.bannerMode = bannerMode__	};sets,the,mode,used,to,display,the,banner,when,the,application,runs,defaults,to,code,banner,mode,console,param,banner,mode,the,mode,used,to,display,the,banner;public,void,set,banner,mode,banner,mode,banner,mode,this,banner,mode,banner,mode
SpringApplication -> public void setBannerMode(Banner.Mode bannerMode);1529485904;Sets the mode used to display the banner when the application runs. Defaults to_{@code Banner.Mode.CONSOLE}._@param bannerMode the mode used to display the banner;public void setBannerMode(Banner.Mode bannerMode) {_		this.bannerMode = bannerMode__	};sets,the,mode,used,to,display,the,banner,when,the,application,runs,defaults,to,code,banner,mode,console,param,banner,mode,the,mode,used,to,display,the,banner;public,void,set,banner,mode,banner,mode,banner,mode,this,banner,mode,banner,mode
SpringApplication -> public void setBannerMode(Banner.Mode bannerMode);1531140616;Sets the mode used to display the banner when the application runs. Defaults to_{@code Banner.Mode.CONSOLE}._@param bannerMode the mode used to display the banner;public void setBannerMode(Banner.Mode bannerMode) {_		this.bannerMode = bannerMode__	};sets,the,mode,used,to,display,the,banner,when,the,application,runs,defaults,to,code,banner,mode,console,param,banner,mode,the,mode,used,to,display,the,banner;public,void,set,banner,mode,banner,mode,banner,mode,this,banner,mode,banner,mode
SpringApplication -> public void setBannerMode(Banner.Mode bannerMode);1531155529;Sets the mode used to display the banner when the application runs. Defaults to_{@code Banner.Mode.CONSOLE}._@param bannerMode the mode used to display the banner;public void setBannerMode(Banner.Mode bannerMode) {_		this.bannerMode = bannerMode__	};sets,the,mode,used,to,display,the,banner,when,the,application,runs,defaults,to,code,banner,mode,console,param,banner,mode,the,mode,used,to,display,the,banner;public,void,set,banner,mode,banner,mode,banner,mode,this,banner,mode,banner,mode
SpringApplication -> public void setBannerMode(Banner.Mode bannerMode);1531222098;Sets the mode used to display the banner when the application runs. Defaults to_{@code Banner.Mode.CONSOLE}._@param bannerMode the mode used to display the banner;public void setBannerMode(Banner.Mode bannerMode) {_		this.bannerMode = bannerMode__	};sets,the,mode,used,to,display,the,banner,when,the,application,runs,defaults,to,code,banner,mode,console,param,banner,mode,the,mode,used,to,display,the,banner;public,void,set,banner,mode,banner,mode,banner,mode,this,banner,mode,banner,mode
SpringApplication -> public void setBannerMode(Banner.Mode bannerMode);1532738143;Sets the mode used to display the banner when the application runs. Defaults to_{@code Banner.Mode.CONSOLE}._@param bannerMode the mode used to display the banner;public void setBannerMode(Banner.Mode bannerMode) {_		this.bannerMode = bannerMode__	};sets,the,mode,used,to,display,the,banner,when,the,application,runs,defaults,to,code,banner,mode,console,param,banner,mode,the,mode,used,to,display,the,banner;public,void,set,banner,mode,banner,mode,banner,mode,this,banner,mode,banner,mode
SpringApplication -> public void setBannerMode(Banner.Mode bannerMode);1534188228;Sets the mode used to display the banner when the application runs. Defaults to_{@code Banner.Mode.CONSOLE}._@param bannerMode the mode used to display the banner;public void setBannerMode(Banner.Mode bannerMode) {_		this.bannerMode = bannerMode__	};sets,the,mode,used,to,display,the,banner,when,the,application,runs,defaults,to,code,banner,mode,console,param,banner,mode,the,mode,used,to,display,the,banner;public,void,set,banner,mode,banner,mode,banner,mode,this,banner,mode,banner,mode
SpringApplication -> public void setBannerMode(Banner.Mode bannerMode);1535104170;Sets the mode used to display the banner when the application runs. Defaults to_{@code Banner.Mode.CONSOLE}._@param bannerMode the mode used to display the banner;public void setBannerMode(Banner.Mode bannerMode) {_		this.bannerMode = bannerMode__	};sets,the,mode,used,to,display,the,banner,when,the,application,runs,defaults,to,code,banner,mode,console,param,banner,mode,the,mode,used,to,display,the,banner;public,void,set,banner,mode,banner,mode,banner,mode,this,banner,mode,banner,mode
SpringApplication -> public void setBannerMode(Banner.Mode bannerMode);1536701067;Sets the mode used to display the banner when the application runs. Defaults to_{@code Banner.Mode.CONSOLE}._@param bannerMode the mode used to display the banner;public void setBannerMode(Banner.Mode bannerMode) {_		this.bannerMode = bannerMode__	};sets,the,mode,used,to,display,the,banner,when,the,application,runs,defaults,to,code,banner,mode,console,param,banner,mode,the,mode,used,to,display,the,banner;public,void,set,banner,mode,banner,mode,banner,mode,this,banner,mode,banner,mode
SpringApplication -> public void setBannerMode(Banner.Mode bannerMode);1538570355;Sets the mode used to display the banner when the application runs. Defaults to_{@code Banner.Mode.CONSOLE}._@param bannerMode the mode used to display the banner;public void setBannerMode(Banner.Mode bannerMode) {_		this.bannerMode = bannerMode__	};sets,the,mode,used,to,display,the,banner,when,the,application,runs,defaults,to,code,banner,mode,console,param,banner,mode,the,mode,used,to,display,the,banner;public,void,set,banner,mode,banner,mode,banner,mode,this,banner,mode,banner,mode
SpringApplication -> public void setBannerMode(Banner.Mode bannerMode);1538707540;Sets the mode used to display the banner when the application runs. Defaults to_{@code Banner.Mode.CONSOLE}._@param bannerMode the mode used to display the banner;public void setBannerMode(Banner.Mode bannerMode) {_		this.bannerMode = bannerMode__	};sets,the,mode,used,to,display,the,banner,when,the,application,runs,defaults,to,code,banner,mode,console,param,banner,mode,the,mode,used,to,display,the,banner;public,void,set,banner,mode,banner,mode,banner,mode,this,banner,mode,banner,mode
SpringApplication -> public void setBannerMode(Banner.Mode bannerMode);1538750610;Sets the mode used to display the banner when the application runs. Defaults to_{@code Banner.Mode.CONSOLE}._@param bannerMode the mode used to display the banner;public void setBannerMode(Banner.Mode bannerMode) {_		this.bannerMode = bannerMode__	};sets,the,mode,used,to,display,the,banner,when,the,application,runs,defaults,to,code,banner,mode,console,param,banner,mode,the,mode,used,to,display,the,banner;public,void,set,banner,mode,banner,mode,banner,mode,this,banner,mode,banner,mode
SpringApplication -> public void setBannerMode(Banner.Mode bannerMode);1538771652;Sets the mode used to display the banner when the application runs. Defaults to_{@code Banner.Mode.CONSOLE}._@param bannerMode the mode used to display the banner;public void setBannerMode(Banner.Mode bannerMode) {_		this.bannerMode = bannerMode__	};sets,the,mode,used,to,display,the,banner,when,the,application,runs,defaults,to,code,banner,mode,console,param,banner,mode,the,mode,used,to,display,the,banner;public,void,set,banner,mode,banner,mode,banner,mode,this,banner,mode,banner,mode
SpringApplication -> public void setBannerMode(Banner.Mode bannerMode);1540419762;Sets the mode used to display the banner when the application runs. Defaults to_{@code Banner.Mode.CONSOLE}._@param bannerMode the mode used to display the banner;public void setBannerMode(Banner.Mode bannerMode) {_		this.bannerMode = bannerMode__	};sets,the,mode,used,to,display,the,banner,when,the,application,runs,defaults,to,code,banner,mode,console,param,banner,mode,the,mode,used,to,display,the,banner;public,void,set,banner,mode,banner,mode,banner,mode,this,banner,mode,banner,mode
SpringApplication -> public void setBannerMode(Banner.Mode bannerMode);1541060131;Sets the mode used to display the banner when the application runs. Defaults to_{@code Banner.Mode.CONSOLE}._@param bannerMode the mode used to display the banner;public void setBannerMode(Banner.Mode bannerMode) {_		this.bannerMode = bannerMode__	};sets,the,mode,used,to,display,the,banner,when,the,application,runs,defaults,to,code,banner,mode,console,param,banner,mode,the,mode,used,to,display,the,banner;public,void,set,banner,mode,banner,mode,banner,mode,this,banner,mode,banner,mode
SpringApplication -> public void setBannerMode(Banner.Mode bannerMode);1546943477;Sets the mode used to display the banner when the application runs. Defaults to_{@code Banner.Mode.CONSOLE}._@param bannerMode the mode used to display the banner;public void setBannerMode(Banner.Mode bannerMode) {_		this.bannerMode = bannerMode__	};sets,the,mode,used,to,display,the,banner,when,the,application,runs,defaults,to,code,banner,mode,console,param,banner,mode,the,mode,used,to,display,the,banner;public,void,set,banner,mode,banner,mode,banner,mode,this,banner,mode,banner,mode
SpringApplication -> public void setBannerMode(Banner.Mode bannerMode);1549791353;Sets the mode used to display the banner when the application runs. Defaults to_{@code Banner.Mode.CONSOLE}._@param bannerMode the mode used to display the banner;public void setBannerMode(Banner.Mode bannerMode) {_		this.bannerMode = bannerMode__	};sets,the,mode,used,to,display,the,banner,when,the,application,runs,defaults,to,code,banner,mode,console,param,banner,mode,the,mode,used,to,display,the,banner;public,void,set,banner,mode,banner,mode,banner,mode,this,banner,mode,banner,mode
SpringApplication -> public void setBannerMode(Banner.Mode bannerMode);1550148109;Sets the mode used to display the banner when the application runs. Defaults to_{@code Banner.Mode.CONSOLE}._@param bannerMode the mode used to display the banner;public void setBannerMode(Banner.Mode bannerMode) {_		this.bannerMode = bannerMode__	};sets,the,mode,used,to,display,the,banner,when,the,application,runs,defaults,to,code,banner,mode,console,param,banner,mode,the,mode,used,to,display,the,banner;public,void,set,banner,mode,banner,mode,banner,mode,this,banner,mode,banner,mode
SpringApplication -> protected void logStartupProfileInfo(ConfigurableApplicationContext context);1507173536;Called to log active profile information._@param context the application context;protected void logStartupProfileInfo(ConfigurableApplicationContext context) {_		Log log = getApplicationLog()__		if (log.isInfoEnabled()) {_			String[] activeProfiles = context.getEnvironment().getActiveProfiles()__			if (ObjectUtils.isEmpty(activeProfiles)) {_				String[] defaultProfiles = context.getEnvironment().getDefaultProfiles()__				log.info("No active profile set, falling back to default profiles: "_						+ StringUtils.arrayToCommaDelimitedString(defaultProfiles))__			}_			else {_				log.info("The following profiles are active: "_						+ StringUtils.arrayToCommaDelimitedString(activeProfiles))__			}_		}_	};called,to,log,active,profile,information,param,context,the,application,context;protected,void,log,startup,profile,info,configurable,application,context,context,log,log,get,application,log,if,log,is,info,enabled,string,active,profiles,context,get,environment,get,active,profiles,if,object,utils,is,empty,active,profiles,string,default,profiles,context,get,environment,get,default,profiles,log,info,no,active,profile,set,falling,back,to,default,profiles,string,utils,array,to,comma,delimited,string,default,profiles,else,log,info,the,following,profiles,are,active,string,utils,array,to,comma,delimited,string,active,profiles
SpringApplication -> protected void logStartupProfileInfo(ConfigurableApplicationContext context);1509381678;Called to log active profile information._@param context the application context;protected void logStartupProfileInfo(ConfigurableApplicationContext context) {_		Log log = getApplicationLog()__		if (log.isInfoEnabled()) {_			String[] activeProfiles = context.getEnvironment().getActiveProfiles()__			if (ObjectUtils.isEmpty(activeProfiles)) {_				String[] defaultProfiles = context.getEnvironment().getDefaultProfiles()__				log.info("No active profile set, falling back to default profiles: "_						+ StringUtils.arrayToCommaDelimitedString(defaultProfiles))__			}_			else {_				log.info("The following profiles are active: "_						+ StringUtils.arrayToCommaDelimitedString(activeProfiles))__			}_		}_	};called,to,log,active,profile,information,param,context,the,application,context;protected,void,log,startup,profile,info,configurable,application,context,context,log,log,get,application,log,if,log,is,info,enabled,string,active,profiles,context,get,environment,get,active,profiles,if,object,utils,is,empty,active,profiles,string,default,profiles,context,get,environment,get,default,profiles,log,info,no,active,profile,set,falling,back,to,default,profiles,string,utils,array,to,comma,delimited,string,default,profiles,else,log,info,the,following,profiles,are,active,string,utils,array,to,comma,delimited,string,active,profiles
SpringApplication -> protected void logStartupProfileInfo(ConfigurableApplicationContext context);1510995225;Called to log active profile information._@param context the application context;protected void logStartupProfileInfo(ConfigurableApplicationContext context) {_		Log log = getApplicationLog()__		if (log.isInfoEnabled()) {_			String[] activeProfiles = context.getEnvironment().getActiveProfiles()__			if (ObjectUtils.isEmpty(activeProfiles)) {_				String[] defaultProfiles = context.getEnvironment().getDefaultProfiles()__				log.info("No active profile set, falling back to default profiles: "_						+ StringUtils.arrayToCommaDelimitedString(defaultProfiles))__			}_			else {_				log.info("The following profiles are active: "_						+ StringUtils.arrayToCommaDelimitedString(activeProfiles))__			}_		}_	};called,to,log,active,profile,information,param,context,the,application,context;protected,void,log,startup,profile,info,configurable,application,context,context,log,log,get,application,log,if,log,is,info,enabled,string,active,profiles,context,get,environment,get,active,profiles,if,object,utils,is,empty,active,profiles,string,default,profiles,context,get,environment,get,default,profiles,log,info,no,active,profile,set,falling,back,to,default,profiles,string,utils,array,to,comma,delimited,string,default,profiles,else,log,info,the,following,profiles,are,active,string,utils,array,to,comma,delimited,string,active,profiles
SpringApplication -> protected void logStartupProfileInfo(ConfigurableApplicationContext context);1515670013;Called to log active profile information._@param context the application context;protected void logStartupProfileInfo(ConfigurableApplicationContext context) {_		Log log = getApplicationLog()__		if (log.isInfoEnabled()) {_			String[] activeProfiles = context.getEnvironment().getActiveProfiles()__			if (ObjectUtils.isEmpty(activeProfiles)) {_				String[] defaultProfiles = context.getEnvironment().getDefaultProfiles()__				log.info("No active profile set, falling back to default profiles: "_						+ StringUtils.arrayToCommaDelimitedString(defaultProfiles))__			}_			else {_				log.info("The following profiles are active: "_						+ StringUtils.arrayToCommaDelimitedString(activeProfiles))__			}_		}_	};called,to,log,active,profile,information,param,context,the,application,context;protected,void,log,startup,profile,info,configurable,application,context,context,log,log,get,application,log,if,log,is,info,enabled,string,active,profiles,context,get,environment,get,active,profiles,if,object,utils,is,empty,active,profiles,string,default,profiles,context,get,environment,get,default,profiles,log,info,no,active,profile,set,falling,back,to,default,profiles,string,utils,array,to,comma,delimited,string,default,profiles,else,log,info,the,following,profiles,are,active,string,utils,array,to,comma,delimited,string,active,profiles
SpringApplication -> protected void logStartupProfileInfo(ConfigurableApplicationContext context);1519362690;Called to log active profile information._@param context the application context;protected void logStartupProfileInfo(ConfigurableApplicationContext context) {_		Log log = getApplicationLog()__		if (log.isInfoEnabled()) {_			String[] activeProfiles = context.getEnvironment().getActiveProfiles()__			if (ObjectUtils.isEmpty(activeProfiles)) {_				String[] defaultProfiles = context.getEnvironment().getDefaultProfiles()__				log.info("No active profile set, falling back to default profiles: "_						+ StringUtils.arrayToCommaDelimitedString(defaultProfiles))__			}_			else {_				log.info("The following profiles are active: "_						+ StringUtils.arrayToCommaDelimitedString(activeProfiles))__			}_		}_	};called,to,log,active,profile,information,param,context,the,application,context;protected,void,log,startup,profile,info,configurable,application,context,context,log,log,get,application,log,if,log,is,info,enabled,string,active,profiles,context,get,environment,get,active,profiles,if,object,utils,is,empty,active,profiles,string,default,profiles,context,get,environment,get,default,profiles,log,info,no,active,profile,set,falling,back,to,default,profiles,string,utils,array,to,comma,delimited,string,default,profiles,else,log,info,the,following,profiles,are,active,string,utils,array,to,comma,delimited,string,active,profiles
SpringApplication -> protected void logStartupProfileInfo(ConfigurableApplicationContext context);1522251721;Called to log active profile information._@param context the application context;protected void logStartupProfileInfo(ConfigurableApplicationContext context) {_		Log log = getApplicationLog()__		if (log.isInfoEnabled()) {_			String[] activeProfiles = context.getEnvironment().getActiveProfiles()__			if (ObjectUtils.isEmpty(activeProfiles)) {_				String[] defaultProfiles = context.getEnvironment().getDefaultProfiles()__				log.info("No active profile set, falling back to default profiles: "_						+ StringUtils.arrayToCommaDelimitedString(defaultProfiles))__			}_			else {_				log.info("The following profiles are active: "_						+ StringUtils.arrayToCommaDelimitedString(activeProfiles))__			}_		}_	};called,to,log,active,profile,information,param,context,the,application,context;protected,void,log,startup,profile,info,configurable,application,context,context,log,log,get,application,log,if,log,is,info,enabled,string,active,profiles,context,get,environment,get,active,profiles,if,object,utils,is,empty,active,profiles,string,default,profiles,context,get,environment,get,default,profiles,log,info,no,active,profile,set,falling,back,to,default,profiles,string,utils,array,to,comma,delimited,string,default,profiles,else,log,info,the,following,profiles,are,active,string,utils,array,to,comma,delimited,string,active,profiles
SpringApplication -> protected void logStartupProfileInfo(ConfigurableApplicationContext context);1525376698;Called to log active profile information._@param context the application context;protected void logStartupProfileInfo(ConfigurableApplicationContext context) {_		Log log = getApplicationLog()__		if (log.isInfoEnabled()) {_			String[] activeProfiles = context.getEnvironment().getActiveProfiles()__			if (ObjectUtils.isEmpty(activeProfiles)) {_				String[] defaultProfiles = context.getEnvironment().getDefaultProfiles()__				log.info("No active profile set, falling back to default profiles: "_						+ StringUtils.arrayToCommaDelimitedString(defaultProfiles))__			}_			else {_				log.info("The following profiles are active: "_						+ StringUtils.arrayToCommaDelimitedString(activeProfiles))__			}_		}_	};called,to,log,active,profile,information,param,context,the,application,context;protected,void,log,startup,profile,info,configurable,application,context,context,log,log,get,application,log,if,log,is,info,enabled,string,active,profiles,context,get,environment,get,active,profiles,if,object,utils,is,empty,active,profiles,string,default,profiles,context,get,environment,get,default,profiles,log,info,no,active,profile,set,falling,back,to,default,profiles,string,utils,array,to,comma,delimited,string,default,profiles,else,log,info,the,following,profiles,are,active,string,utils,array,to,comma,delimited,string,active,profiles
SpringApplication -> protected void logStartupProfileInfo(ConfigurableApplicationContext context);1525416882;Called to log active profile information._@param context the application context;protected void logStartupProfileInfo(ConfigurableApplicationContext context) {_		Log log = getApplicationLog()__		if (log.isInfoEnabled()) {_			String[] activeProfiles = context.getEnvironment().getActiveProfiles()__			if (ObjectUtils.isEmpty(activeProfiles)) {_				String[] defaultProfiles = context.getEnvironment().getDefaultProfiles()__				log.info("No active profile set, falling back to default profiles: "_						+ StringUtils.arrayToCommaDelimitedString(defaultProfiles))__			}_			else {_				log.info("The following profiles are active: "_						+ StringUtils.arrayToCommaDelimitedString(activeProfiles))__			}_		}_	};called,to,log,active,profile,information,param,context,the,application,context;protected,void,log,startup,profile,info,configurable,application,context,context,log,log,get,application,log,if,log,is,info,enabled,string,active,profiles,context,get,environment,get,active,profiles,if,object,utils,is,empty,active,profiles,string,default,profiles,context,get,environment,get,default,profiles,log,info,no,active,profile,set,falling,back,to,default,profiles,string,utils,array,to,comma,delimited,string,default,profiles,else,log,info,the,following,profiles,are,active,string,utils,array,to,comma,delimited,string,active,profiles
SpringApplication -> protected void logStartupProfileInfo(ConfigurableApplicationContext context);1526993305;Called to log active profile information._@param context the application context;protected void logStartupProfileInfo(ConfigurableApplicationContext context) {_		Log log = getApplicationLog()__		if (log.isInfoEnabled()) {_			String[] activeProfiles = context.getEnvironment().getActiveProfiles()__			if (ObjectUtils.isEmpty(activeProfiles)) {_				String[] defaultProfiles = context.getEnvironment().getDefaultProfiles()__				log.info("No active profile set, falling back to default profiles: "_						+ StringUtils.arrayToCommaDelimitedString(defaultProfiles))__			}_			else {_				log.info("The following profiles are active: "_						+ StringUtils.arrayToCommaDelimitedString(activeProfiles))__			}_		}_	};called,to,log,active,profile,information,param,context,the,application,context;protected,void,log,startup,profile,info,configurable,application,context,context,log,log,get,application,log,if,log,is,info,enabled,string,active,profiles,context,get,environment,get,active,profiles,if,object,utils,is,empty,active,profiles,string,default,profiles,context,get,environment,get,default,profiles,log,info,no,active,profile,set,falling,back,to,default,profiles,string,utils,array,to,comma,delimited,string,default,profiles,else,log,info,the,following,profiles,are,active,string,utils,array,to,comma,delimited,string,active,profiles
SpringApplication -> protected void logStartupProfileInfo(ConfigurableApplicationContext context);1529485904;Called to log active profile information._@param context the application context;protected void logStartupProfileInfo(ConfigurableApplicationContext context) {_		Log log = getApplicationLog()__		if (log.isInfoEnabled()) {_			String[] activeProfiles = context.getEnvironment().getActiveProfiles()__			if (ObjectUtils.isEmpty(activeProfiles)) {_				String[] defaultProfiles = context.getEnvironment().getDefaultProfiles()__				log.info("No active profile set, falling back to default profiles: "_						+ StringUtils.arrayToCommaDelimitedString(defaultProfiles))__			}_			else {_				log.info("The following profiles are active: "_						+ StringUtils.arrayToCommaDelimitedString(activeProfiles))__			}_		}_	};called,to,log,active,profile,information,param,context,the,application,context;protected,void,log,startup,profile,info,configurable,application,context,context,log,log,get,application,log,if,log,is,info,enabled,string,active,profiles,context,get,environment,get,active,profiles,if,object,utils,is,empty,active,profiles,string,default,profiles,context,get,environment,get,default,profiles,log,info,no,active,profile,set,falling,back,to,default,profiles,string,utils,array,to,comma,delimited,string,default,profiles,else,log,info,the,following,profiles,are,active,string,utils,array,to,comma,delimited,string,active,profiles
SpringApplication -> protected void logStartupProfileInfo(ConfigurableApplicationContext context);1531140616;Called to log active profile information._@param context the application context;protected void logStartupProfileInfo(ConfigurableApplicationContext context) {_		Log log = getApplicationLog()__		if (log.isInfoEnabled()) {_			String[] activeProfiles = context.getEnvironment().getActiveProfiles()__			if (ObjectUtils.isEmpty(activeProfiles)) {_				String[] defaultProfiles = context.getEnvironment().getDefaultProfiles()__				log.info("No active profile set, falling back to default profiles: "_						+ StringUtils.arrayToCommaDelimitedString(defaultProfiles))__			}_			else {_				log.info("The following profiles are active: "_						+ StringUtils.arrayToCommaDelimitedString(activeProfiles))__			}_		}_	};called,to,log,active,profile,information,param,context,the,application,context;protected,void,log,startup,profile,info,configurable,application,context,context,log,log,get,application,log,if,log,is,info,enabled,string,active,profiles,context,get,environment,get,active,profiles,if,object,utils,is,empty,active,profiles,string,default,profiles,context,get,environment,get,default,profiles,log,info,no,active,profile,set,falling,back,to,default,profiles,string,utils,array,to,comma,delimited,string,default,profiles,else,log,info,the,following,profiles,are,active,string,utils,array,to,comma,delimited,string,active,profiles
SpringApplication -> protected void logStartupProfileInfo(ConfigurableApplicationContext context);1531155529;Called to log active profile information._@param context the application context;protected void logStartupProfileInfo(ConfigurableApplicationContext context) {_		Log log = getApplicationLog()__		if (log.isInfoEnabled()) {_			String[] activeProfiles = context.getEnvironment().getActiveProfiles()__			if (ObjectUtils.isEmpty(activeProfiles)) {_				String[] defaultProfiles = context.getEnvironment().getDefaultProfiles()__				log.info("No active profile set, falling back to default profiles: "_						+ StringUtils.arrayToCommaDelimitedString(defaultProfiles))__			}_			else {_				log.info("The following profiles are active: "_						+ StringUtils.arrayToCommaDelimitedString(activeProfiles))__			}_		}_	};called,to,log,active,profile,information,param,context,the,application,context;protected,void,log,startup,profile,info,configurable,application,context,context,log,log,get,application,log,if,log,is,info,enabled,string,active,profiles,context,get,environment,get,active,profiles,if,object,utils,is,empty,active,profiles,string,default,profiles,context,get,environment,get,default,profiles,log,info,no,active,profile,set,falling,back,to,default,profiles,string,utils,array,to,comma,delimited,string,default,profiles,else,log,info,the,following,profiles,are,active,string,utils,array,to,comma,delimited,string,active,profiles
SpringApplication -> protected void logStartupProfileInfo(ConfigurableApplicationContext context);1531222098;Called to log active profile information._@param context the application context;protected void logStartupProfileInfo(ConfigurableApplicationContext context) {_		Log log = getApplicationLog()__		if (log.isInfoEnabled()) {_			String[] activeProfiles = context.getEnvironment().getActiveProfiles()__			if (ObjectUtils.isEmpty(activeProfiles)) {_				String[] defaultProfiles = context.getEnvironment().getDefaultProfiles()__				log.info("No active profile set, falling back to default profiles: "_						+ StringUtils.arrayToCommaDelimitedString(defaultProfiles))__			}_			else {_				log.info("The following profiles are active: "_						+ StringUtils.arrayToCommaDelimitedString(activeProfiles))__			}_		}_	};called,to,log,active,profile,information,param,context,the,application,context;protected,void,log,startup,profile,info,configurable,application,context,context,log,log,get,application,log,if,log,is,info,enabled,string,active,profiles,context,get,environment,get,active,profiles,if,object,utils,is,empty,active,profiles,string,default,profiles,context,get,environment,get,default,profiles,log,info,no,active,profile,set,falling,back,to,default,profiles,string,utils,array,to,comma,delimited,string,default,profiles,else,log,info,the,following,profiles,are,active,string,utils,array,to,comma,delimited,string,active,profiles
SpringApplication -> protected void logStartupProfileInfo(ConfigurableApplicationContext context);1532738143;Called to log active profile information._@param context the application context;protected void logStartupProfileInfo(ConfigurableApplicationContext context) {_		Log log = getApplicationLog()__		if (log.isInfoEnabled()) {_			String[] activeProfiles = context.getEnvironment().getActiveProfiles()__			if (ObjectUtils.isEmpty(activeProfiles)) {_				String[] defaultProfiles = context.getEnvironment().getDefaultProfiles()__				log.info("No active profile set, falling back to default profiles: "_						+ StringUtils.arrayToCommaDelimitedString(defaultProfiles))__			}_			else {_				log.info("The following profiles are active: "_						+ StringUtils.arrayToCommaDelimitedString(activeProfiles))__			}_		}_	};called,to,log,active,profile,information,param,context,the,application,context;protected,void,log,startup,profile,info,configurable,application,context,context,log,log,get,application,log,if,log,is,info,enabled,string,active,profiles,context,get,environment,get,active,profiles,if,object,utils,is,empty,active,profiles,string,default,profiles,context,get,environment,get,default,profiles,log,info,no,active,profile,set,falling,back,to,default,profiles,string,utils,array,to,comma,delimited,string,default,profiles,else,log,info,the,following,profiles,are,active,string,utils,array,to,comma,delimited,string,active,profiles
SpringApplication -> protected void logStartupProfileInfo(ConfigurableApplicationContext context);1534188228;Called to log active profile information._@param context the application context;protected void logStartupProfileInfo(ConfigurableApplicationContext context) {_		Log log = getApplicationLog()__		if (log.isInfoEnabled()) {_			String[] activeProfiles = context.getEnvironment().getActiveProfiles()__			if (ObjectUtils.isEmpty(activeProfiles)) {_				String[] defaultProfiles = context.getEnvironment().getDefaultProfiles()__				log.info("No active profile set, falling back to default profiles: "_						+ StringUtils.arrayToCommaDelimitedString(defaultProfiles))__			}_			else {_				log.info("The following profiles are active: "_						+ StringUtils.arrayToCommaDelimitedString(activeProfiles))__			}_		}_	};called,to,log,active,profile,information,param,context,the,application,context;protected,void,log,startup,profile,info,configurable,application,context,context,log,log,get,application,log,if,log,is,info,enabled,string,active,profiles,context,get,environment,get,active,profiles,if,object,utils,is,empty,active,profiles,string,default,profiles,context,get,environment,get,default,profiles,log,info,no,active,profile,set,falling,back,to,default,profiles,string,utils,array,to,comma,delimited,string,default,profiles,else,log,info,the,following,profiles,are,active,string,utils,array,to,comma,delimited,string,active,profiles
SpringApplication -> protected void logStartupProfileInfo(ConfigurableApplicationContext context);1535104170;Called to log active profile information._@param context the application context;protected void logStartupProfileInfo(ConfigurableApplicationContext context) {_		Log log = getApplicationLog()__		if (log.isInfoEnabled()) {_			String[] activeProfiles = context.getEnvironment().getActiveProfiles()__			if (ObjectUtils.isEmpty(activeProfiles)) {_				String[] defaultProfiles = context.getEnvironment().getDefaultProfiles()__				log.info("No active profile set, falling back to default profiles: "_						+ StringUtils.arrayToCommaDelimitedString(defaultProfiles))__			}_			else {_				log.info("The following profiles are active: "_						+ StringUtils.arrayToCommaDelimitedString(activeProfiles))__			}_		}_	};called,to,log,active,profile,information,param,context,the,application,context;protected,void,log,startup,profile,info,configurable,application,context,context,log,log,get,application,log,if,log,is,info,enabled,string,active,profiles,context,get,environment,get,active,profiles,if,object,utils,is,empty,active,profiles,string,default,profiles,context,get,environment,get,default,profiles,log,info,no,active,profile,set,falling,back,to,default,profiles,string,utils,array,to,comma,delimited,string,default,profiles,else,log,info,the,following,profiles,are,active,string,utils,array,to,comma,delimited,string,active,profiles
SpringApplication -> protected void logStartupProfileInfo(ConfigurableApplicationContext context);1536701067;Called to log active profile information._@param context the application context;protected void logStartupProfileInfo(ConfigurableApplicationContext context) {_		Log log = getApplicationLog()__		if (log.isInfoEnabled()) {_			String[] activeProfiles = context.getEnvironment().getActiveProfiles()__			if (ObjectUtils.isEmpty(activeProfiles)) {_				String[] defaultProfiles = context.getEnvironment().getDefaultProfiles()__				log.info("No active profile set, falling back to default profiles: "_						+ StringUtils.arrayToCommaDelimitedString(defaultProfiles))__			}_			else {_				log.info("The following profiles are active: "_						+ StringUtils.arrayToCommaDelimitedString(activeProfiles))__			}_		}_	};called,to,log,active,profile,information,param,context,the,application,context;protected,void,log,startup,profile,info,configurable,application,context,context,log,log,get,application,log,if,log,is,info,enabled,string,active,profiles,context,get,environment,get,active,profiles,if,object,utils,is,empty,active,profiles,string,default,profiles,context,get,environment,get,default,profiles,log,info,no,active,profile,set,falling,back,to,default,profiles,string,utils,array,to,comma,delimited,string,default,profiles,else,log,info,the,following,profiles,are,active,string,utils,array,to,comma,delimited,string,active,profiles
SpringApplication -> protected void logStartupProfileInfo(ConfigurableApplicationContext context);1538570355;Called to log active profile information._@param context the application context;protected void logStartupProfileInfo(ConfigurableApplicationContext context) {_		Log log = getApplicationLog()__		if (log.isInfoEnabled()) {_			String[] activeProfiles = context.getEnvironment().getActiveProfiles()__			if (ObjectUtils.isEmpty(activeProfiles)) {_				String[] defaultProfiles = context.getEnvironment().getDefaultProfiles()__				log.info("No active profile set, falling back to default profiles: "_						+ StringUtils.arrayToCommaDelimitedString(defaultProfiles))__			}_			else {_				log.info("The following profiles are active: "_						+ StringUtils.arrayToCommaDelimitedString(activeProfiles))__			}_		}_	};called,to,log,active,profile,information,param,context,the,application,context;protected,void,log,startup,profile,info,configurable,application,context,context,log,log,get,application,log,if,log,is,info,enabled,string,active,profiles,context,get,environment,get,active,profiles,if,object,utils,is,empty,active,profiles,string,default,profiles,context,get,environment,get,default,profiles,log,info,no,active,profile,set,falling,back,to,default,profiles,string,utils,array,to,comma,delimited,string,default,profiles,else,log,info,the,following,profiles,are,active,string,utils,array,to,comma,delimited,string,active,profiles
SpringApplication -> protected void logStartupProfileInfo(ConfigurableApplicationContext context);1538707540;Called to log active profile information._@param context the application context;protected void logStartupProfileInfo(ConfigurableApplicationContext context) {_		Log log = getApplicationLog()__		if (log.isInfoEnabled()) {_			String[] activeProfiles = context.getEnvironment().getActiveProfiles()__			if (ObjectUtils.isEmpty(activeProfiles)) {_				String[] defaultProfiles = context.getEnvironment().getDefaultProfiles()__				log.info("No active profile set, falling back to default profiles: "_						+ StringUtils.arrayToCommaDelimitedString(defaultProfiles))__			}_			else {_				log.info("The following profiles are active: "_						+ StringUtils.arrayToCommaDelimitedString(activeProfiles))__			}_		}_	};called,to,log,active,profile,information,param,context,the,application,context;protected,void,log,startup,profile,info,configurable,application,context,context,log,log,get,application,log,if,log,is,info,enabled,string,active,profiles,context,get,environment,get,active,profiles,if,object,utils,is,empty,active,profiles,string,default,profiles,context,get,environment,get,default,profiles,log,info,no,active,profile,set,falling,back,to,default,profiles,string,utils,array,to,comma,delimited,string,default,profiles,else,log,info,the,following,profiles,are,active,string,utils,array,to,comma,delimited,string,active,profiles
SpringApplication -> protected void logStartupProfileInfo(ConfigurableApplicationContext context);1538750610;Called to log active profile information._@param context the application context;protected void logStartupProfileInfo(ConfigurableApplicationContext context) {_		Log log = getApplicationLog()__		if (log.isInfoEnabled()) {_			String[] activeProfiles = context.getEnvironment().getActiveProfiles()__			if (ObjectUtils.isEmpty(activeProfiles)) {_				String[] defaultProfiles = context.getEnvironment().getDefaultProfiles()__				log.info("No active profile set, falling back to default profiles: "_						+ StringUtils.arrayToCommaDelimitedString(defaultProfiles))__			}_			else {_				log.info("The following profiles are active: "_						+ StringUtils.arrayToCommaDelimitedString(activeProfiles))__			}_		}_	};called,to,log,active,profile,information,param,context,the,application,context;protected,void,log,startup,profile,info,configurable,application,context,context,log,log,get,application,log,if,log,is,info,enabled,string,active,profiles,context,get,environment,get,active,profiles,if,object,utils,is,empty,active,profiles,string,default,profiles,context,get,environment,get,default,profiles,log,info,no,active,profile,set,falling,back,to,default,profiles,string,utils,array,to,comma,delimited,string,default,profiles,else,log,info,the,following,profiles,are,active,string,utils,array,to,comma,delimited,string,active,profiles
SpringApplication -> protected void logStartupProfileInfo(ConfigurableApplicationContext context);1538771652;Called to log active profile information._@param context the application context;protected void logStartupProfileInfo(ConfigurableApplicationContext context) {_		Log log = getApplicationLog()__		if (log.isInfoEnabled()) {_			String[] activeProfiles = context.getEnvironment().getActiveProfiles()__			if (ObjectUtils.isEmpty(activeProfiles)) {_				String[] defaultProfiles = context.getEnvironment().getDefaultProfiles()__				log.info("No active profile set, falling back to default profiles: "_						+ StringUtils.arrayToCommaDelimitedString(defaultProfiles))__			}_			else {_				log.info("The following profiles are active: "_						+ StringUtils.arrayToCommaDelimitedString(activeProfiles))__			}_		}_	};called,to,log,active,profile,information,param,context,the,application,context;protected,void,log,startup,profile,info,configurable,application,context,context,log,log,get,application,log,if,log,is,info,enabled,string,active,profiles,context,get,environment,get,active,profiles,if,object,utils,is,empty,active,profiles,string,default,profiles,context,get,environment,get,default,profiles,log,info,no,active,profile,set,falling,back,to,default,profiles,string,utils,array,to,comma,delimited,string,default,profiles,else,log,info,the,following,profiles,are,active,string,utils,array,to,comma,delimited,string,active,profiles
SpringApplication -> protected void logStartupProfileInfo(ConfigurableApplicationContext context);1540419762;Called to log active profile information._@param context the application context;protected void logStartupProfileInfo(ConfigurableApplicationContext context) {_		Log log = getApplicationLog()__		if (log.isInfoEnabled()) {_			String[] activeProfiles = context.getEnvironment().getActiveProfiles()__			if (ObjectUtils.isEmpty(activeProfiles)) {_				String[] defaultProfiles = context.getEnvironment().getDefaultProfiles()__				log.info("No active profile set, falling back to default profiles: "_						+ StringUtils.arrayToCommaDelimitedString(defaultProfiles))__			}_			else {_				log.info("The following profiles are active: "_						+ StringUtils.arrayToCommaDelimitedString(activeProfiles))__			}_		}_	};called,to,log,active,profile,information,param,context,the,application,context;protected,void,log,startup,profile,info,configurable,application,context,context,log,log,get,application,log,if,log,is,info,enabled,string,active,profiles,context,get,environment,get,active,profiles,if,object,utils,is,empty,active,profiles,string,default,profiles,context,get,environment,get,default,profiles,log,info,no,active,profile,set,falling,back,to,default,profiles,string,utils,array,to,comma,delimited,string,default,profiles,else,log,info,the,following,profiles,are,active,string,utils,array,to,comma,delimited,string,active,profiles
SpringApplication -> protected void logStartupProfileInfo(ConfigurableApplicationContext context);1541060131;Called to log active profile information._@param context the application context;protected void logStartupProfileInfo(ConfigurableApplicationContext context) {_		Log log = getApplicationLog()__		if (log.isInfoEnabled()) {_			String[] activeProfiles = context.getEnvironment().getActiveProfiles()__			if (ObjectUtils.isEmpty(activeProfiles)) {_				String[] defaultProfiles = context.getEnvironment().getDefaultProfiles()__				log.info("No active profile set, falling back to default profiles: "_						+ StringUtils.arrayToCommaDelimitedString(defaultProfiles))__			}_			else {_				log.info("The following profiles are active: "_						+ StringUtils.arrayToCommaDelimitedString(activeProfiles))__			}_		}_	};called,to,log,active,profile,information,param,context,the,application,context;protected,void,log,startup,profile,info,configurable,application,context,context,log,log,get,application,log,if,log,is,info,enabled,string,active,profiles,context,get,environment,get,active,profiles,if,object,utils,is,empty,active,profiles,string,default,profiles,context,get,environment,get,default,profiles,log,info,no,active,profile,set,falling,back,to,default,profiles,string,utils,array,to,comma,delimited,string,default,profiles,else,log,info,the,following,profiles,are,active,string,utils,array,to,comma,delimited,string,active,profiles
SpringApplication -> protected void logStartupProfileInfo(ConfigurableApplicationContext context);1546943477;Called to log active profile information._@param context the application context;protected void logStartupProfileInfo(ConfigurableApplicationContext context) {_		Log log = getApplicationLog()__		if (log.isInfoEnabled()) {_			String[] activeProfiles = context.getEnvironment().getActiveProfiles()__			if (ObjectUtils.isEmpty(activeProfiles)) {_				String[] defaultProfiles = context.getEnvironment().getDefaultProfiles()__				log.info("No active profile set, falling back to default profiles: "_						+ StringUtils.arrayToCommaDelimitedString(defaultProfiles))__			}_			else {_				log.info("The following profiles are active: "_						+ StringUtils.arrayToCommaDelimitedString(activeProfiles))__			}_		}_	};called,to,log,active,profile,information,param,context,the,application,context;protected,void,log,startup,profile,info,configurable,application,context,context,log,log,get,application,log,if,log,is,info,enabled,string,active,profiles,context,get,environment,get,active,profiles,if,object,utils,is,empty,active,profiles,string,default,profiles,context,get,environment,get,default,profiles,log,info,no,active,profile,set,falling,back,to,default,profiles,string,utils,array,to,comma,delimited,string,default,profiles,else,log,info,the,following,profiles,are,active,string,utils,array,to,comma,delimited,string,active,profiles
SpringApplication -> protected void logStartupProfileInfo(ConfigurableApplicationContext context);1549791353;Called to log active profile information._@param context the application context;protected void logStartupProfileInfo(ConfigurableApplicationContext context) {_		Log log = getApplicationLog()__		if (log.isInfoEnabled()) {_			String[] activeProfiles = context.getEnvironment().getActiveProfiles()__			if (ObjectUtils.isEmpty(activeProfiles)) {_				String[] defaultProfiles = context.getEnvironment().getDefaultProfiles()__				log.info("No active profile set, falling back to default profiles: "_						+ StringUtils.arrayToCommaDelimitedString(defaultProfiles))__			}_			else {_				log.info("The following profiles are active: "_						+ StringUtils.arrayToCommaDelimitedString(activeProfiles))__			}_		}_	};called,to,log,active,profile,information,param,context,the,application,context;protected,void,log,startup,profile,info,configurable,application,context,context,log,log,get,application,log,if,log,is,info,enabled,string,active,profiles,context,get,environment,get,active,profiles,if,object,utils,is,empty,active,profiles,string,default,profiles,context,get,environment,get,default,profiles,log,info,no,active,profile,set,falling,back,to,default,profiles,string,utils,array,to,comma,delimited,string,default,profiles,else,log,info,the,following,profiles,are,active,string,utils,array,to,comma,delimited,string,active,profiles
SpringApplication -> protected void logStartupProfileInfo(ConfigurableApplicationContext context);1550148109;Called to log active profile information._@param context the application context;protected void logStartupProfileInfo(ConfigurableApplicationContext context) {_		Log log = getApplicationLog()__		if (log.isInfoEnabled()) {_			String[] activeProfiles = context.getEnvironment().getActiveProfiles()__			if (ObjectUtils.isEmpty(activeProfiles)) {_				String[] defaultProfiles = context.getEnvironment().getDefaultProfiles()__				log.info("No active profile set, falling back to default profiles: "_						+ StringUtils.arrayToCommaDelimitedString(defaultProfiles))__			}_			else {_				log.info("The following profiles are active: "_						+ StringUtils.arrayToCommaDelimitedString(activeProfiles))__			}_		}_	};called,to,log,active,profile,information,param,context,the,application,context;protected,void,log,startup,profile,info,configurable,application,context,context,log,log,get,application,log,if,log,is,info,enabled,string,active,profiles,context,get,environment,get,active,profiles,if,object,utils,is,empty,active,profiles,string,default,profiles,context,get,environment,get,default,profiles,log,info,no,active,profile,set,falling,back,to,default,profiles,string,utils,array,to,comma,delimited,string,default,profiles,else,log,info,the,following,profiles,are,active,string,utils,array,to,comma,delimited,string,active,profiles
SpringApplication -> public Class<?> getMainApplicationClass();1507173536;Returns the main application class that has been deduced or explicitly configured._@return the main application class or {@code null};public Class<?> getMainApplicationClass() {_		return this.mainApplicationClass__	};returns,the,main,application,class,that,has,been,deduced,or,explicitly,configured,return,the,main,application,class,or,code,null;public,class,get,main,application,class,return,this,main,application,class
SpringApplication -> public Class<?> getMainApplicationClass();1509381678;Returns the main application class that has been deduced or explicitly configured._@return the main application class or {@code null};public Class<?> getMainApplicationClass() {_		return this.mainApplicationClass__	};returns,the,main,application,class,that,has,been,deduced,or,explicitly,configured,return,the,main,application,class,or,code,null;public,class,get,main,application,class,return,this,main,application,class
SpringApplication -> public Class<?> getMainApplicationClass();1510995225;Returns the main application class that has been deduced or explicitly configured._@return the main application class or {@code null};public Class<?> getMainApplicationClass() {_		return this.mainApplicationClass__	};returns,the,main,application,class,that,has,been,deduced,or,explicitly,configured,return,the,main,application,class,or,code,null;public,class,get,main,application,class,return,this,main,application,class
SpringApplication -> public Class<?> getMainApplicationClass();1515670013;Returns the main application class that has been deduced or explicitly configured._@return the main application class or {@code null};public Class<?> getMainApplicationClass() {_		return this.mainApplicationClass__	};returns,the,main,application,class,that,has,been,deduced,or,explicitly,configured,return,the,main,application,class,or,code,null;public,class,get,main,application,class,return,this,main,application,class
SpringApplication -> public Class<?> getMainApplicationClass();1519362690;Returns the main application class that has been deduced or explicitly configured._@return the main application class or {@code null};public Class<?> getMainApplicationClass() {_		return this.mainApplicationClass__	};returns,the,main,application,class,that,has,been,deduced,or,explicitly,configured,return,the,main,application,class,or,code,null;public,class,get,main,application,class,return,this,main,application,class
SpringApplication -> public Class<?> getMainApplicationClass();1522251721;Returns the main application class that has been deduced or explicitly configured._@return the main application class or {@code null};public Class<?> getMainApplicationClass() {_		return this.mainApplicationClass__	};returns,the,main,application,class,that,has,been,deduced,or,explicitly,configured,return,the,main,application,class,or,code,null;public,class,get,main,application,class,return,this,main,application,class
SpringApplication -> public Class<?> getMainApplicationClass();1525376698;Returns the main application class that has been deduced or explicitly configured._@return the main application class or {@code null};public Class<?> getMainApplicationClass() {_		return this.mainApplicationClass__	};returns,the,main,application,class,that,has,been,deduced,or,explicitly,configured,return,the,main,application,class,or,code,null;public,class,get,main,application,class,return,this,main,application,class
SpringApplication -> public Class<?> getMainApplicationClass();1525416882;Returns the main application class that has been deduced or explicitly configured._@return the main application class or {@code null};public Class<?> getMainApplicationClass() {_		return this.mainApplicationClass__	};returns,the,main,application,class,that,has,been,deduced,or,explicitly,configured,return,the,main,application,class,or,code,null;public,class,get,main,application,class,return,this,main,application,class
SpringApplication -> public Class<?> getMainApplicationClass();1526993305;Returns the main application class that has been deduced or explicitly configured._@return the main application class or {@code null};public Class<?> getMainApplicationClass() {_		return this.mainApplicationClass__	};returns,the,main,application,class,that,has,been,deduced,or,explicitly,configured,return,the,main,application,class,or,code,null;public,class,get,main,application,class,return,this,main,application,class
SpringApplication -> public Class<?> getMainApplicationClass();1529485904;Returns the main application class that has been deduced or explicitly configured._@return the main application class or {@code null};public Class<?> getMainApplicationClass() {_		return this.mainApplicationClass__	};returns,the,main,application,class,that,has,been,deduced,or,explicitly,configured,return,the,main,application,class,or,code,null;public,class,get,main,application,class,return,this,main,application,class
SpringApplication -> public Class<?> getMainApplicationClass();1531140616;Returns the main application class that has been deduced or explicitly configured._@return the main application class or {@code null};public Class<?> getMainApplicationClass() {_		return this.mainApplicationClass__	};returns,the,main,application,class,that,has,been,deduced,or,explicitly,configured,return,the,main,application,class,or,code,null;public,class,get,main,application,class,return,this,main,application,class
SpringApplication -> public Class<?> getMainApplicationClass();1531155529;Returns the main application class that has been deduced or explicitly configured._@return the main application class or {@code null};public Class<?> getMainApplicationClass() {_		return this.mainApplicationClass__	};returns,the,main,application,class,that,has,been,deduced,or,explicitly,configured,return,the,main,application,class,or,code,null;public,class,get,main,application,class,return,this,main,application,class
SpringApplication -> public Class<?> getMainApplicationClass();1531222098;Returns the main application class that has been deduced or explicitly configured._@return the main application class or {@code null};public Class<?> getMainApplicationClass() {_		return this.mainApplicationClass__	};returns,the,main,application,class,that,has,been,deduced,or,explicitly,configured,return,the,main,application,class,or,code,null;public,class,get,main,application,class,return,this,main,application,class
SpringApplication -> public Class<?> getMainApplicationClass();1532738143;Returns the main application class that has been deduced or explicitly configured._@return the main application class or {@code null};public Class<?> getMainApplicationClass() {_		return this.mainApplicationClass__	};returns,the,main,application,class,that,has,been,deduced,or,explicitly,configured,return,the,main,application,class,or,code,null;public,class,get,main,application,class,return,this,main,application,class
SpringApplication -> public Class<?> getMainApplicationClass();1534188228;Returns the main application class that has been deduced or explicitly configured._@return the main application class or {@code null};public Class<?> getMainApplicationClass() {_		return this.mainApplicationClass__	};returns,the,main,application,class,that,has,been,deduced,or,explicitly,configured,return,the,main,application,class,or,code,null;public,class,get,main,application,class,return,this,main,application,class
SpringApplication -> public Class<?> getMainApplicationClass();1535104170;Returns the main application class that has been deduced or explicitly configured._@return the main application class or {@code null};public Class<?> getMainApplicationClass() {_		return this.mainApplicationClass__	};returns,the,main,application,class,that,has,been,deduced,or,explicitly,configured,return,the,main,application,class,or,code,null;public,class,get,main,application,class,return,this,main,application,class
SpringApplication -> public Class<?> getMainApplicationClass();1536701067;Returns the main application class that has been deduced or explicitly configured._@return the main application class or {@code null};public Class<?> getMainApplicationClass() {_		return this.mainApplicationClass__	};returns,the,main,application,class,that,has,been,deduced,or,explicitly,configured,return,the,main,application,class,or,code,null;public,class,get,main,application,class,return,this,main,application,class
SpringApplication -> public Class<?> getMainApplicationClass();1538570355;Returns the main application class that has been deduced or explicitly configured._@return the main application class or {@code null};public Class<?> getMainApplicationClass() {_		return this.mainApplicationClass__	};returns,the,main,application,class,that,has,been,deduced,or,explicitly,configured,return,the,main,application,class,or,code,null;public,class,get,main,application,class,return,this,main,application,class
SpringApplication -> public Class<?> getMainApplicationClass();1538707540;Returns the main application class that has been deduced or explicitly configured._@return the main application class or {@code null};public Class<?> getMainApplicationClass() {_		return this.mainApplicationClass__	};returns,the,main,application,class,that,has,been,deduced,or,explicitly,configured,return,the,main,application,class,or,code,null;public,class,get,main,application,class,return,this,main,application,class
SpringApplication -> public Class<?> getMainApplicationClass();1538750610;Returns the main application class that has been deduced or explicitly configured._@return the main application class or {@code null};public Class<?> getMainApplicationClass() {_		return this.mainApplicationClass__	};returns,the,main,application,class,that,has,been,deduced,or,explicitly,configured,return,the,main,application,class,or,code,null;public,class,get,main,application,class,return,this,main,application,class
SpringApplication -> public Class<?> getMainApplicationClass();1538771652;Returns the main application class that has been deduced or explicitly configured._@return the main application class or {@code null};public Class<?> getMainApplicationClass() {_		return this.mainApplicationClass__	};returns,the,main,application,class,that,has,been,deduced,or,explicitly,configured,return,the,main,application,class,or,code,null;public,class,get,main,application,class,return,this,main,application,class
SpringApplication -> public Class<?> getMainApplicationClass();1540419762;Returns the main application class that has been deduced or explicitly configured._@return the main application class or {@code null};public Class<?> getMainApplicationClass() {_		return this.mainApplicationClass__	};returns,the,main,application,class,that,has,been,deduced,or,explicitly,configured,return,the,main,application,class,or,code,null;public,class,get,main,application,class,return,this,main,application,class
SpringApplication -> public Class<?> getMainApplicationClass();1541060131;Returns the main application class that has been deduced or explicitly configured._@return the main application class or {@code null};public Class<?> getMainApplicationClass() {_		return this.mainApplicationClass__	};returns,the,main,application,class,that,has,been,deduced,or,explicitly,configured,return,the,main,application,class,or,code,null;public,class,get,main,application,class,return,this,main,application,class
SpringApplication -> public Class<?> getMainApplicationClass();1546943477;Returns the main application class that has been deduced or explicitly configured._@return the main application class or {@code null};public Class<?> getMainApplicationClass() {_		return this.mainApplicationClass__	};returns,the,main,application,class,that,has,been,deduced,or,explicitly,configured,return,the,main,application,class,or,code,null;public,class,get,main,application,class,return,this,main,application,class
SpringApplication -> public Class<?> getMainApplicationClass();1549791353;Returns the main application class that has been deduced or explicitly configured._@return the main application class or {@code null};public Class<?> getMainApplicationClass() {_		return this.mainApplicationClass__	};returns,the,main,application,class,that,has,been,deduced,or,explicitly,configured,return,the,main,application,class,or,code,null;public,class,get,main,application,class,return,this,main,application,class
SpringApplication -> public Class<?> getMainApplicationClass();1550148109;Returns the main application class that has been deduced or explicitly configured._@return the main application class or {@code null};public Class<?> getMainApplicationClass() {_		return this.mainApplicationClass__	};returns,the,main,application,class,that,has,been,deduced,or,explicitly,configured,return,the,main,application,class,or,code,null;public,class,get,main,application,class,return,this,main,application,class
SpringApplication -> protected void configureEnvironment(ConfigurableEnvironment environment, 			String[] args);1507173536;Template method delegating to_{@link #configurePropertySources(ConfigurableEnvironment, String[])} and_{@link #configureProfiles(ConfigurableEnvironment, String[])} in that order._Override this method for complete control over Environment customization, or one of_the above for fine-grained control over property sources or profiles, respectively._@param environment this application's environment_@param args arguments passed to the {@code run} method_@see #configureProfiles(ConfigurableEnvironment, String[])_@see #configurePropertySources(ConfigurableEnvironment, String[]);protected void configureEnvironment(ConfigurableEnvironment environment,_			String[] args) {_		configurePropertySources(environment, args)__		configureProfiles(environment, args)__	};template,method,delegating,to,link,configure,property,sources,configurable,environment,string,and,link,configure,profiles,configurable,environment,string,in,that,order,override,this,method,for,complete,control,over,environment,customization,or,one,of,the,above,for,fine,grained,control,over,property,sources,or,profiles,respectively,param,environment,this,application,s,environment,param,args,arguments,passed,to,the,code,run,method,see,configure,profiles,configurable,environment,string,see,configure,property,sources,configurable,environment,string;protected,void,configure,environment,configurable,environment,environment,string,args,configure,property,sources,environment,args,configure,profiles,environment,args
SpringApplication -> protected void configureEnvironment(ConfigurableEnvironment environment, 			String[] args);1509381678;Template method delegating to_{@link #configurePropertySources(ConfigurableEnvironment, String[])} and_{@link #configureProfiles(ConfigurableEnvironment, String[])} in that order._Override this method for complete control over Environment customization, or one of_the above for fine-grained control over property sources or profiles, respectively._@param environment this application's environment_@param args arguments passed to the {@code run} method_@see #configureProfiles(ConfigurableEnvironment, String[])_@see #configurePropertySources(ConfigurableEnvironment, String[]);protected void configureEnvironment(ConfigurableEnvironment environment,_			String[] args) {_		configurePropertySources(environment, args)__		configureProfiles(environment, args)__	};template,method,delegating,to,link,configure,property,sources,configurable,environment,string,and,link,configure,profiles,configurable,environment,string,in,that,order,override,this,method,for,complete,control,over,environment,customization,or,one,of,the,above,for,fine,grained,control,over,property,sources,or,profiles,respectively,param,environment,this,application,s,environment,param,args,arguments,passed,to,the,code,run,method,see,configure,profiles,configurable,environment,string,see,configure,property,sources,configurable,environment,string;protected,void,configure,environment,configurable,environment,environment,string,args,configure,property,sources,environment,args,configure,profiles,environment,args
SpringApplication -> protected void configureEnvironment(ConfigurableEnvironment environment, 			String[] args);1510995225;Template method delegating to_{@link #configurePropertySources(ConfigurableEnvironment, String[])} and_{@link #configureProfiles(ConfigurableEnvironment, String[])} in that order._Override this method for complete control over Environment customization, or one of_the above for fine-grained control over property sources or profiles, respectively._@param environment this application's environment_@param args arguments passed to the {@code run} method_@see #configureProfiles(ConfigurableEnvironment, String[])_@see #configurePropertySources(ConfigurableEnvironment, String[]);protected void configureEnvironment(ConfigurableEnvironment environment,_			String[] args) {_		configurePropertySources(environment, args)__		configureProfiles(environment, args)__	};template,method,delegating,to,link,configure,property,sources,configurable,environment,string,and,link,configure,profiles,configurable,environment,string,in,that,order,override,this,method,for,complete,control,over,environment,customization,or,one,of,the,above,for,fine,grained,control,over,property,sources,or,profiles,respectively,param,environment,this,application,s,environment,param,args,arguments,passed,to,the,code,run,method,see,configure,profiles,configurable,environment,string,see,configure,property,sources,configurable,environment,string;protected,void,configure,environment,configurable,environment,environment,string,args,configure,property,sources,environment,args,configure,profiles,environment,args
SpringApplication -> protected void configureEnvironment(ConfigurableEnvironment environment, 			String[] args);1515670013;Template method delegating to_{@link #configurePropertySources(ConfigurableEnvironment, String[])} and_{@link #configureProfiles(ConfigurableEnvironment, String[])} in that order._Override this method for complete control over Environment customization, or one of_the above for fine-grained control over property sources or profiles, respectively._@param environment this application's environment_@param args arguments passed to the {@code run} method_@see #configureProfiles(ConfigurableEnvironment, String[])_@see #configurePropertySources(ConfigurableEnvironment, String[]);protected void configureEnvironment(ConfigurableEnvironment environment,_			String[] args) {_		configurePropertySources(environment, args)__		configureProfiles(environment, args)__	};template,method,delegating,to,link,configure,property,sources,configurable,environment,string,and,link,configure,profiles,configurable,environment,string,in,that,order,override,this,method,for,complete,control,over,environment,customization,or,one,of,the,above,for,fine,grained,control,over,property,sources,or,profiles,respectively,param,environment,this,application,s,environment,param,args,arguments,passed,to,the,code,run,method,see,configure,profiles,configurable,environment,string,see,configure,property,sources,configurable,environment,string;protected,void,configure,environment,configurable,environment,environment,string,args,configure,property,sources,environment,args,configure,profiles,environment,args
SpringApplication -> protected void configureEnvironment(ConfigurableEnvironment environment, 			String[] args);1519362690;Template method delegating to_{@link #configurePropertySources(ConfigurableEnvironment, String[])} and_{@link #configureProfiles(ConfigurableEnvironment, String[])} in that order._Override this method for complete control over Environment customization, or one of_the above for fine-grained control over property sources or profiles, respectively._@param environment this application's environment_@param args arguments passed to the {@code run} method_@see #configureProfiles(ConfigurableEnvironment, String[])_@see #configurePropertySources(ConfigurableEnvironment, String[]);protected void configureEnvironment(ConfigurableEnvironment environment,_			String[] args) {_		configurePropertySources(environment, args)__		configureProfiles(environment, args)__	};template,method,delegating,to,link,configure,property,sources,configurable,environment,string,and,link,configure,profiles,configurable,environment,string,in,that,order,override,this,method,for,complete,control,over,environment,customization,or,one,of,the,above,for,fine,grained,control,over,property,sources,or,profiles,respectively,param,environment,this,application,s,environment,param,args,arguments,passed,to,the,code,run,method,see,configure,profiles,configurable,environment,string,see,configure,property,sources,configurable,environment,string;protected,void,configure,environment,configurable,environment,environment,string,args,configure,property,sources,environment,args,configure,profiles,environment,args
SpringApplication -> protected void configureEnvironment(ConfigurableEnvironment environment, 			String[] args);1522251721;Template method delegating to_{@link #configurePropertySources(ConfigurableEnvironment, String[])} and_{@link #configureProfiles(ConfigurableEnvironment, String[])} in that order._Override this method for complete control over Environment customization, or one of_the above for fine-grained control over property sources or profiles, respectively._@param environment this application's environment_@param args arguments passed to the {@code run} method_@see #configureProfiles(ConfigurableEnvironment, String[])_@see #configurePropertySources(ConfigurableEnvironment, String[]);protected void configureEnvironment(ConfigurableEnvironment environment,_			String[] args) {_		configurePropertySources(environment, args)__		configureProfiles(environment, args)__	};template,method,delegating,to,link,configure,property,sources,configurable,environment,string,and,link,configure,profiles,configurable,environment,string,in,that,order,override,this,method,for,complete,control,over,environment,customization,or,one,of,the,above,for,fine,grained,control,over,property,sources,or,profiles,respectively,param,environment,this,application,s,environment,param,args,arguments,passed,to,the,code,run,method,see,configure,profiles,configurable,environment,string,see,configure,property,sources,configurable,environment,string;protected,void,configure,environment,configurable,environment,environment,string,args,configure,property,sources,environment,args,configure,profiles,environment,args
SpringApplication -> protected void configureEnvironment(ConfigurableEnvironment environment, 			String[] args);1525376698;Template method delegating to_{@link #configurePropertySources(ConfigurableEnvironment, String[])} and_{@link #configureProfiles(ConfigurableEnvironment, String[])} in that order._Override this method for complete control over Environment customization, or one of_the above for fine-grained control over property sources or profiles, respectively._@param environment this application's environment_@param args arguments passed to the {@code run} method_@see #configureProfiles(ConfigurableEnvironment, String[])_@see #configurePropertySources(ConfigurableEnvironment, String[]);protected void configureEnvironment(ConfigurableEnvironment environment,_			String[] args) {_		configurePropertySources(environment, args)__		configureProfiles(environment, args)__	};template,method,delegating,to,link,configure,property,sources,configurable,environment,string,and,link,configure,profiles,configurable,environment,string,in,that,order,override,this,method,for,complete,control,over,environment,customization,or,one,of,the,above,for,fine,grained,control,over,property,sources,or,profiles,respectively,param,environment,this,application,s,environment,param,args,arguments,passed,to,the,code,run,method,see,configure,profiles,configurable,environment,string,see,configure,property,sources,configurable,environment,string;protected,void,configure,environment,configurable,environment,environment,string,args,configure,property,sources,environment,args,configure,profiles,environment,args
SpringApplication -> protected void configureEnvironment(ConfigurableEnvironment environment, 			String[] args);1525416882;Template method delegating to_{@link #configurePropertySources(ConfigurableEnvironment, String[])} and_{@link #configureProfiles(ConfigurableEnvironment, String[])} in that order._Override this method for complete control over Environment customization, or one of_the above for fine-grained control over property sources or profiles, respectively._@param environment this application's environment_@param args arguments passed to the {@code run} method_@see #configureProfiles(ConfigurableEnvironment, String[])_@see #configurePropertySources(ConfigurableEnvironment, String[]);protected void configureEnvironment(ConfigurableEnvironment environment,_			String[] args) {_		configurePropertySources(environment, args)__		configureProfiles(environment, args)__	};template,method,delegating,to,link,configure,property,sources,configurable,environment,string,and,link,configure,profiles,configurable,environment,string,in,that,order,override,this,method,for,complete,control,over,environment,customization,or,one,of,the,above,for,fine,grained,control,over,property,sources,or,profiles,respectively,param,environment,this,application,s,environment,param,args,arguments,passed,to,the,code,run,method,see,configure,profiles,configurable,environment,string,see,configure,property,sources,configurable,environment,string;protected,void,configure,environment,configurable,environment,environment,string,args,configure,property,sources,environment,args,configure,profiles,environment,args
SpringApplication -> protected void configureEnvironment(ConfigurableEnvironment environment, 			String[] args);1526993305;Template method delegating to_{@link #configurePropertySources(ConfigurableEnvironment, String[])} and_{@link #configureProfiles(ConfigurableEnvironment, String[])} in that order._Override this method for complete control over Environment customization, or one of_the above for fine-grained control over property sources or profiles, respectively._@param environment this application's environment_@param args arguments passed to the {@code run} method_@see #configureProfiles(ConfigurableEnvironment, String[])_@see #configurePropertySources(ConfigurableEnvironment, String[]);protected void configureEnvironment(ConfigurableEnvironment environment,_			String[] args) {_		configurePropertySources(environment, args)__		configureProfiles(environment, args)__	};template,method,delegating,to,link,configure,property,sources,configurable,environment,string,and,link,configure,profiles,configurable,environment,string,in,that,order,override,this,method,for,complete,control,over,environment,customization,or,one,of,the,above,for,fine,grained,control,over,property,sources,or,profiles,respectively,param,environment,this,application,s,environment,param,args,arguments,passed,to,the,code,run,method,see,configure,profiles,configurable,environment,string,see,configure,property,sources,configurable,environment,string;protected,void,configure,environment,configurable,environment,environment,string,args,configure,property,sources,environment,args,configure,profiles,environment,args
SpringApplication -> protected void configureEnvironment(ConfigurableEnvironment environment, 			String[] args);1529485904;Template method delegating to_{@link #configurePropertySources(ConfigurableEnvironment, String[])} and_{@link #configureProfiles(ConfigurableEnvironment, String[])} in that order._Override this method for complete control over Environment customization, or one of_the above for fine-grained control over property sources or profiles, respectively._@param environment this application's environment_@param args arguments passed to the {@code run} method_@see #configureProfiles(ConfigurableEnvironment, String[])_@see #configurePropertySources(ConfigurableEnvironment, String[]);protected void configureEnvironment(ConfigurableEnvironment environment,_			String[] args) {_		configurePropertySources(environment, args)__		configureProfiles(environment, args)__	};template,method,delegating,to,link,configure,property,sources,configurable,environment,string,and,link,configure,profiles,configurable,environment,string,in,that,order,override,this,method,for,complete,control,over,environment,customization,or,one,of,the,above,for,fine,grained,control,over,property,sources,or,profiles,respectively,param,environment,this,application,s,environment,param,args,arguments,passed,to,the,code,run,method,see,configure,profiles,configurable,environment,string,see,configure,property,sources,configurable,environment,string;protected,void,configure,environment,configurable,environment,environment,string,args,configure,property,sources,environment,args,configure,profiles,environment,args
SpringApplication -> protected void configureEnvironment(ConfigurableEnvironment environment, 			String[] args);1531140616;Template method delegating to_{@link #configurePropertySources(ConfigurableEnvironment, String[])} and_{@link #configureProfiles(ConfigurableEnvironment, String[])} in that order._Override this method for complete control over Environment customization, or one of_the above for fine-grained control over property sources or profiles, respectively._@param environment this application's environment_@param args arguments passed to the {@code run} method_@see #configureProfiles(ConfigurableEnvironment, String[])_@see #configurePropertySources(ConfigurableEnvironment, String[]);protected void configureEnvironment(ConfigurableEnvironment environment,_			String[] args) {_		configurePropertySources(environment, args)__		configureProfiles(environment, args)__	};template,method,delegating,to,link,configure,property,sources,configurable,environment,string,and,link,configure,profiles,configurable,environment,string,in,that,order,override,this,method,for,complete,control,over,environment,customization,or,one,of,the,above,for,fine,grained,control,over,property,sources,or,profiles,respectively,param,environment,this,application,s,environment,param,args,arguments,passed,to,the,code,run,method,see,configure,profiles,configurable,environment,string,see,configure,property,sources,configurable,environment,string;protected,void,configure,environment,configurable,environment,environment,string,args,configure,property,sources,environment,args,configure,profiles,environment,args
SpringApplication -> protected void configureEnvironment(ConfigurableEnvironment environment, 			String[] args);1531155529;Template method delegating to_{@link #configurePropertySources(ConfigurableEnvironment, String[])} and_{@link #configureProfiles(ConfigurableEnvironment, String[])} in that order._Override this method for complete control over Environment customization, or one of_the above for fine-grained control over property sources or profiles, respectively._@param environment this application's environment_@param args arguments passed to the {@code run} method_@see #configureProfiles(ConfigurableEnvironment, String[])_@see #configurePropertySources(ConfigurableEnvironment, String[]);protected void configureEnvironment(ConfigurableEnvironment environment,_			String[] args) {_		configurePropertySources(environment, args)__		configureProfiles(environment, args)__	};template,method,delegating,to,link,configure,property,sources,configurable,environment,string,and,link,configure,profiles,configurable,environment,string,in,that,order,override,this,method,for,complete,control,over,environment,customization,or,one,of,the,above,for,fine,grained,control,over,property,sources,or,profiles,respectively,param,environment,this,application,s,environment,param,args,arguments,passed,to,the,code,run,method,see,configure,profiles,configurable,environment,string,see,configure,property,sources,configurable,environment,string;protected,void,configure,environment,configurable,environment,environment,string,args,configure,property,sources,environment,args,configure,profiles,environment,args
SpringApplication -> protected void configureEnvironment(ConfigurableEnvironment environment, 			String[] args);1531222098;Template method delegating to_{@link #configurePropertySources(ConfigurableEnvironment, String[])} and_{@link #configureProfiles(ConfigurableEnvironment, String[])} in that order._Override this method for complete control over Environment customization, or one of_the above for fine-grained control over property sources or profiles, respectively._@param environment this application's environment_@param args arguments passed to the {@code run} method_@see #configureProfiles(ConfigurableEnvironment, String[])_@see #configurePropertySources(ConfigurableEnvironment, String[]);protected void configureEnvironment(ConfigurableEnvironment environment,_			String[] args) {_		configurePropertySources(environment, args)__		configureProfiles(environment, args)__	};template,method,delegating,to,link,configure,property,sources,configurable,environment,string,and,link,configure,profiles,configurable,environment,string,in,that,order,override,this,method,for,complete,control,over,environment,customization,or,one,of,the,above,for,fine,grained,control,over,property,sources,or,profiles,respectively,param,environment,this,application,s,environment,param,args,arguments,passed,to,the,code,run,method,see,configure,profiles,configurable,environment,string,see,configure,property,sources,configurable,environment,string;protected,void,configure,environment,configurable,environment,environment,string,args,configure,property,sources,environment,args,configure,profiles,environment,args
SpringApplication -> protected void configureEnvironment(ConfigurableEnvironment environment, 			String[] args);1532738143;Template method delegating to_{@link #configurePropertySources(ConfigurableEnvironment, String[])} and_{@link #configureProfiles(ConfigurableEnvironment, String[])} in that order._Override this method for complete control over Environment customization, or one of_the above for fine-grained control over property sources or profiles, respectively._@param environment this application's environment_@param args arguments passed to the {@code run} method_@see #configureProfiles(ConfigurableEnvironment, String[])_@see #configurePropertySources(ConfigurableEnvironment, String[]);protected void configureEnvironment(ConfigurableEnvironment environment,_			String[] args) {_		configurePropertySources(environment, args)__		configureProfiles(environment, args)__	};template,method,delegating,to,link,configure,property,sources,configurable,environment,string,and,link,configure,profiles,configurable,environment,string,in,that,order,override,this,method,for,complete,control,over,environment,customization,or,one,of,the,above,for,fine,grained,control,over,property,sources,or,profiles,respectively,param,environment,this,application,s,environment,param,args,arguments,passed,to,the,code,run,method,see,configure,profiles,configurable,environment,string,see,configure,property,sources,configurable,environment,string;protected,void,configure,environment,configurable,environment,environment,string,args,configure,property,sources,environment,args,configure,profiles,environment,args
SpringApplication -> protected void configureEnvironment(ConfigurableEnvironment environment, 			String[] args);1534188228;Template method delegating to_{@link #configurePropertySources(ConfigurableEnvironment, String[])} and_{@link #configureProfiles(ConfigurableEnvironment, String[])} in that order._Override this method for complete control over Environment customization, or one of_the above for fine-grained control over property sources or profiles, respectively._@param environment this application's environment_@param args arguments passed to the {@code run} method_@see #configureProfiles(ConfigurableEnvironment, String[])_@see #configurePropertySources(ConfigurableEnvironment, String[]);protected void configureEnvironment(ConfigurableEnvironment environment,_			String[] args) {_		configurePropertySources(environment, args)__		configureProfiles(environment, args)__	};template,method,delegating,to,link,configure,property,sources,configurable,environment,string,and,link,configure,profiles,configurable,environment,string,in,that,order,override,this,method,for,complete,control,over,environment,customization,or,one,of,the,above,for,fine,grained,control,over,property,sources,or,profiles,respectively,param,environment,this,application,s,environment,param,args,arguments,passed,to,the,code,run,method,see,configure,profiles,configurable,environment,string,see,configure,property,sources,configurable,environment,string;protected,void,configure,environment,configurable,environment,environment,string,args,configure,property,sources,environment,args,configure,profiles,environment,args
SpringApplication -> protected void configureEnvironment(ConfigurableEnvironment environment, 			String[] args);1535104170;Template method delegating to_{@link #configurePropertySources(ConfigurableEnvironment, String[])} and_{@link #configureProfiles(ConfigurableEnvironment, String[])} in that order._Override this method for complete control over Environment customization, or one of_the above for fine-grained control over property sources or profiles, respectively._@param environment this application's environment_@param args arguments passed to the {@code run} method_@see #configureProfiles(ConfigurableEnvironment, String[])_@see #configurePropertySources(ConfigurableEnvironment, String[]);protected void configureEnvironment(ConfigurableEnvironment environment,_			String[] args) {_		configurePropertySources(environment, args)__		configureProfiles(environment, args)__	};template,method,delegating,to,link,configure,property,sources,configurable,environment,string,and,link,configure,profiles,configurable,environment,string,in,that,order,override,this,method,for,complete,control,over,environment,customization,or,one,of,the,above,for,fine,grained,control,over,property,sources,or,profiles,respectively,param,environment,this,application,s,environment,param,args,arguments,passed,to,the,code,run,method,see,configure,profiles,configurable,environment,string,see,configure,property,sources,configurable,environment,string;protected,void,configure,environment,configurable,environment,environment,string,args,configure,property,sources,environment,args,configure,profiles,environment,args
SpringApplication -> protected void configureEnvironment(ConfigurableEnvironment environment, 			String[] args);1536701067;Template method delegating to_{@link #configurePropertySources(ConfigurableEnvironment, String[])} and_{@link #configureProfiles(ConfigurableEnvironment, String[])} in that order._Override this method for complete control over Environment customization, or one of_the above for fine-grained control over property sources or profiles, respectively._@param environment this application's environment_@param args arguments passed to the {@code run} method_@see #configureProfiles(ConfigurableEnvironment, String[])_@see #configurePropertySources(ConfigurableEnvironment, String[]);protected void configureEnvironment(ConfigurableEnvironment environment,_			String[] args) {_		if (this.addConversionService) {_			environment.setConversionService(_					ApplicationConversionService.getSharedInstance())__		}_		configurePropertySources(environment, args)__		configureProfiles(environment, args)__	};template,method,delegating,to,link,configure,property,sources,configurable,environment,string,and,link,configure,profiles,configurable,environment,string,in,that,order,override,this,method,for,complete,control,over,environment,customization,or,one,of,the,above,for,fine,grained,control,over,property,sources,or,profiles,respectively,param,environment,this,application,s,environment,param,args,arguments,passed,to,the,code,run,method,see,configure,profiles,configurable,environment,string,see,configure,property,sources,configurable,environment,string;protected,void,configure,environment,configurable,environment,environment,string,args,if,this,add,conversion,service,environment,set,conversion,service,application,conversion,service,get,shared,instance,configure,property,sources,environment,args,configure,profiles,environment,args
SpringApplication -> protected void configureEnvironment(ConfigurableEnvironment environment, 			String[] args);1538570355;Template method delegating to_{@link #configurePropertySources(ConfigurableEnvironment, String[])} and_{@link #configureProfiles(ConfigurableEnvironment, String[])} in that order._Override this method for complete control over Environment customization, or one of_the above for fine-grained control over property sources or profiles, respectively._@param environment this application's environment_@param args arguments passed to the {@code run} method_@see #configureProfiles(ConfigurableEnvironment, String[])_@see #configurePropertySources(ConfigurableEnvironment, String[]);protected void configureEnvironment(ConfigurableEnvironment environment,_			String[] args) {_		if (this.addConversionService) {_			environment.setConversionService(_					ApplicationConversionService.getSharedInstance())__		}_		configurePropertySources(environment, args)__		configureProfiles(environment, args)__	};template,method,delegating,to,link,configure,property,sources,configurable,environment,string,and,link,configure,profiles,configurable,environment,string,in,that,order,override,this,method,for,complete,control,over,environment,customization,or,one,of,the,above,for,fine,grained,control,over,property,sources,or,profiles,respectively,param,environment,this,application,s,environment,param,args,arguments,passed,to,the,code,run,method,see,configure,profiles,configurable,environment,string,see,configure,property,sources,configurable,environment,string;protected,void,configure,environment,configurable,environment,environment,string,args,if,this,add,conversion,service,environment,set,conversion,service,application,conversion,service,get,shared,instance,configure,property,sources,environment,args,configure,profiles,environment,args
SpringApplication -> protected void configureEnvironment(ConfigurableEnvironment environment, 			String[] args);1538707540;Template method delegating to_{@link #configurePropertySources(ConfigurableEnvironment, String[])} and_{@link #configureProfiles(ConfigurableEnvironment, String[])} in that order._Override this method for complete control over Environment customization, or one of_the above for fine-grained control over property sources or profiles, respectively._@param environment this application's environment_@param args arguments passed to the {@code run} method_@see #configureProfiles(ConfigurableEnvironment, String[])_@see #configurePropertySources(ConfigurableEnvironment, String[]);protected void configureEnvironment(ConfigurableEnvironment environment,_			String[] args) {_		if (this.addConversionService) {_			environment.setConversionService(_					ApplicationConversionService.getSharedInstance())__		}_		configurePropertySources(environment, args)__		configureProfiles(environment, args)__	};template,method,delegating,to,link,configure,property,sources,configurable,environment,string,and,link,configure,profiles,configurable,environment,string,in,that,order,override,this,method,for,complete,control,over,environment,customization,or,one,of,the,above,for,fine,grained,control,over,property,sources,or,profiles,respectively,param,environment,this,application,s,environment,param,args,arguments,passed,to,the,code,run,method,see,configure,profiles,configurable,environment,string,see,configure,property,sources,configurable,environment,string;protected,void,configure,environment,configurable,environment,environment,string,args,if,this,add,conversion,service,environment,set,conversion,service,application,conversion,service,get,shared,instance,configure,property,sources,environment,args,configure,profiles,environment,args
SpringApplication -> protected void configureEnvironment(ConfigurableEnvironment environment, 			String[] args);1538750610;Template method delegating to_{@link #configurePropertySources(ConfigurableEnvironment, String[])} and_{@link #configureProfiles(ConfigurableEnvironment, String[])} in that order._Override this method for complete control over Environment customization, or one of_the above for fine-grained control over property sources or profiles, respectively._@param environment this application's environment_@param args arguments passed to the {@code run} method_@see #configureProfiles(ConfigurableEnvironment, String[])_@see #configurePropertySources(ConfigurableEnvironment, String[]);protected void configureEnvironment(ConfigurableEnvironment environment,_			String[] args) {_		if (this.addConversionService) {_			environment.setConversionService(_					ApplicationConversionService.getSharedInstance())__		}_		configurePropertySources(environment, args)__		configureProfiles(environment, args)__	};template,method,delegating,to,link,configure,property,sources,configurable,environment,string,and,link,configure,profiles,configurable,environment,string,in,that,order,override,this,method,for,complete,control,over,environment,customization,or,one,of,the,above,for,fine,grained,control,over,property,sources,or,profiles,respectively,param,environment,this,application,s,environment,param,args,arguments,passed,to,the,code,run,method,see,configure,profiles,configurable,environment,string,see,configure,property,sources,configurable,environment,string;protected,void,configure,environment,configurable,environment,environment,string,args,if,this,add,conversion,service,environment,set,conversion,service,application,conversion,service,get,shared,instance,configure,property,sources,environment,args,configure,profiles,environment,args
SpringApplication -> protected void configureEnvironment(ConfigurableEnvironment environment, 			String[] args);1538771652;Template method delegating to_{@link #configurePropertySources(ConfigurableEnvironment, String[])} and_{@link #configureProfiles(ConfigurableEnvironment, String[])} in that order._Override this method for complete control over Environment customization, or one of_the above for fine-grained control over property sources or profiles, respectively._@param environment this application's environment_@param args arguments passed to the {@code run} method_@see #configureProfiles(ConfigurableEnvironment, String[])_@see #configurePropertySources(ConfigurableEnvironment, String[]);protected void configureEnvironment(ConfigurableEnvironment environment,_			String[] args) {_		if (this.addConversionService) {_			environment.setConversionService(_					ApplicationConversionService.getSharedInstance())__		}_		configurePropertySources(environment, args)__		configureProfiles(environment, args)__	};template,method,delegating,to,link,configure,property,sources,configurable,environment,string,and,link,configure,profiles,configurable,environment,string,in,that,order,override,this,method,for,complete,control,over,environment,customization,or,one,of,the,above,for,fine,grained,control,over,property,sources,or,profiles,respectively,param,environment,this,application,s,environment,param,args,arguments,passed,to,the,code,run,method,see,configure,profiles,configurable,environment,string,see,configure,property,sources,configurable,environment,string;protected,void,configure,environment,configurable,environment,environment,string,args,if,this,add,conversion,service,environment,set,conversion,service,application,conversion,service,get,shared,instance,configure,property,sources,environment,args,configure,profiles,environment,args
SpringApplication -> protected void configureEnvironment(ConfigurableEnvironment environment, 			String[] args);1540419762;Template method delegating to_{@link #configurePropertySources(ConfigurableEnvironment, String[])} and_{@link #configureProfiles(ConfigurableEnvironment, String[])} in that order._Override this method for complete control over Environment customization, or one of_the above for fine-grained control over property sources or profiles, respectively._@param environment this application's environment_@param args arguments passed to the {@code run} method_@see #configureProfiles(ConfigurableEnvironment, String[])_@see #configurePropertySources(ConfigurableEnvironment, String[]);protected void configureEnvironment(ConfigurableEnvironment environment,_			String[] args) {_		if (this.addConversionService) {_			ConversionService conversionService = ApplicationConversionService_					.getSharedInstance()__			environment.setConversionService(_					(ConfigurableConversionService) conversionService)__		}_		configurePropertySources(environment, args)__		configureProfiles(environment, args)__	};template,method,delegating,to,link,configure,property,sources,configurable,environment,string,and,link,configure,profiles,configurable,environment,string,in,that,order,override,this,method,for,complete,control,over,environment,customization,or,one,of,the,above,for,fine,grained,control,over,property,sources,or,profiles,respectively,param,environment,this,application,s,environment,param,args,arguments,passed,to,the,code,run,method,see,configure,profiles,configurable,environment,string,see,configure,property,sources,configurable,environment,string;protected,void,configure,environment,configurable,environment,environment,string,args,if,this,add,conversion,service,conversion,service,conversion,service,application,conversion,service,get,shared,instance,environment,set,conversion,service,configurable,conversion,service,conversion,service,configure,property,sources,environment,args,configure,profiles,environment,args
SpringApplication -> protected void configureEnvironment(ConfigurableEnvironment environment, 			String[] args);1541060131;Template method delegating to_{@link #configurePropertySources(ConfigurableEnvironment, String[])} and_{@link #configureProfiles(ConfigurableEnvironment, String[])} in that order._Override this method for complete control over Environment customization, or one of_the above for fine-grained control over property sources or profiles, respectively._@param environment this application's environment_@param args arguments passed to the {@code run} method_@see #configureProfiles(ConfigurableEnvironment, String[])_@see #configurePropertySources(ConfigurableEnvironment, String[]);protected void configureEnvironment(ConfigurableEnvironment environment,_			String[] args) {_		if (this.addConversionService) {_			ConversionService conversionService = ApplicationConversionService_					.getSharedInstance()__			environment.setConversionService(_					(ConfigurableConversionService) conversionService)__		}_		configurePropertySources(environment, args)__		configureProfiles(environment, args)__	};template,method,delegating,to,link,configure,property,sources,configurable,environment,string,and,link,configure,profiles,configurable,environment,string,in,that,order,override,this,method,for,complete,control,over,environment,customization,or,one,of,the,above,for,fine,grained,control,over,property,sources,or,profiles,respectively,param,environment,this,application,s,environment,param,args,arguments,passed,to,the,code,run,method,see,configure,profiles,configurable,environment,string,see,configure,property,sources,configurable,environment,string;protected,void,configure,environment,configurable,environment,environment,string,args,if,this,add,conversion,service,conversion,service,conversion,service,application,conversion,service,get,shared,instance,environment,set,conversion,service,configurable,conversion,service,conversion,service,configure,property,sources,environment,args,configure,profiles,environment,args
SpringApplication -> protected void configureEnvironment(ConfigurableEnvironment environment, 			String[] args);1546943477;Template method delegating to_{@link #configurePropertySources(ConfigurableEnvironment, String[])} and_{@link #configureProfiles(ConfigurableEnvironment, String[])} in that order._Override this method for complete control over Environment customization, or one of_the above for fine-grained control over property sources or profiles, respectively._@param environment this application's environment_@param args arguments passed to the {@code run} method_@see #configureProfiles(ConfigurableEnvironment, String[])_@see #configurePropertySources(ConfigurableEnvironment, String[]);protected void configureEnvironment(ConfigurableEnvironment environment,_			String[] args) {_		if (this.addConversionService) {_			ConversionService conversionService = ApplicationConversionService_					.getSharedInstance()__			environment.setConversionService(_					(ConfigurableConversionService) conversionService)__		}_		configurePropertySources(environment, args)__		configureProfiles(environment, args)__	};template,method,delegating,to,link,configure,property,sources,configurable,environment,string,and,link,configure,profiles,configurable,environment,string,in,that,order,override,this,method,for,complete,control,over,environment,customization,or,one,of,the,above,for,fine,grained,control,over,property,sources,or,profiles,respectively,param,environment,this,application,s,environment,param,args,arguments,passed,to,the,code,run,method,see,configure,profiles,configurable,environment,string,see,configure,property,sources,configurable,environment,string;protected,void,configure,environment,configurable,environment,environment,string,args,if,this,add,conversion,service,conversion,service,conversion,service,application,conversion,service,get,shared,instance,environment,set,conversion,service,configurable,conversion,service,conversion,service,configure,property,sources,environment,args,configure,profiles,environment,args
SpringApplication -> protected void configureEnvironment(ConfigurableEnvironment environment, 			String[] args);1549791353;Template method delegating to_{@link #configurePropertySources(ConfigurableEnvironment, String[])} and_{@link #configureProfiles(ConfigurableEnvironment, String[])} in that order._Override this method for complete control over Environment customization, or one of_the above for fine-grained control over property sources or profiles, respectively._@param environment this application's environment_@param args arguments passed to the {@code run} method_@see #configureProfiles(ConfigurableEnvironment, String[])_@see #configurePropertySources(ConfigurableEnvironment, String[]);protected void configureEnvironment(ConfigurableEnvironment environment,_			String[] args) {_		if (this.addConversionService) {_			ConversionService conversionService = ApplicationConversionService_					.getSharedInstance()__			environment.setConversionService(_					(ConfigurableConversionService) conversionService)__		}_		configurePropertySources(environment, args)__		configureProfiles(environment, args)__	};template,method,delegating,to,link,configure,property,sources,configurable,environment,string,and,link,configure,profiles,configurable,environment,string,in,that,order,override,this,method,for,complete,control,over,environment,customization,or,one,of,the,above,for,fine,grained,control,over,property,sources,or,profiles,respectively,param,environment,this,application,s,environment,param,args,arguments,passed,to,the,code,run,method,see,configure,profiles,configurable,environment,string,see,configure,property,sources,configurable,environment,string;protected,void,configure,environment,configurable,environment,environment,string,args,if,this,add,conversion,service,conversion,service,conversion,service,application,conversion,service,get,shared,instance,environment,set,conversion,service,configurable,conversion,service,conversion,service,configure,property,sources,environment,args,configure,profiles,environment,args
SpringApplication -> protected void configureEnvironment(ConfigurableEnvironment environment, 			String[] args);1550148109;Template method delegating to_{@link #configurePropertySources(ConfigurableEnvironment, String[])} and_{@link #configureProfiles(ConfigurableEnvironment, String[])} in that order._Override this method for complete control over Environment customization, or one of_the above for fine-grained control over property sources or profiles, respectively._@param environment this application's environment_@param args arguments passed to the {@code run} method_@see #configureProfiles(ConfigurableEnvironment, String[])_@see #configurePropertySources(ConfigurableEnvironment, String[]);protected void configureEnvironment(ConfigurableEnvironment environment,_			String[] args) {_		if (this.addConversionService) {_			ConversionService conversionService = ApplicationConversionService_					.getSharedInstance()__			environment.setConversionService(_					(ConfigurableConversionService) conversionService)__		}_		configurePropertySources(environment, args)__		configureProfiles(environment, args)__	};template,method,delegating,to,link,configure,property,sources,configurable,environment,string,and,link,configure,profiles,configurable,environment,string,in,that,order,override,this,method,for,complete,control,over,environment,customization,or,one,of,the,above,for,fine,grained,control,over,property,sources,or,profiles,respectively,param,environment,this,application,s,environment,param,args,arguments,passed,to,the,code,run,method,see,configure,profiles,configurable,environment,string,see,configure,property,sources,configurable,environment,string;protected,void,configure,environment,configurable,environment,environment,string,args,if,this,add,conversion,service,conversion,service,conversion,service,application,conversion,service,get,shared,instance,environment,set,conversion,service,configurable,conversion,service,conversion,service,configure,property,sources,environment,args,configure,profiles,environment,args
SpringApplication -> @Deprecated 	public boolean isWebEnvironment();1507173536;Returns whether this {@link SpringApplication} is running within a web environment._@return {@code true} if running within a web environment, otherwise {@code false}._@see #setWebEnvironment(boolean)_@deprecated since 2.0.0 in favor of {@link #getWebApplicationType()};@Deprecated_	public boolean isWebEnvironment() {_		return this.webApplicationType == WebApplicationType.SERVLET__	};returns,whether,this,link,spring,application,is,running,within,a,web,environment,return,code,true,if,running,within,a,web,environment,otherwise,code,false,see,set,web,environment,boolean,deprecated,since,2,0,0,in,favor,of,link,get,web,application,type;deprecated,public,boolean,is,web,environment,return,this,web,application,type,web,application,type,servlet
SpringApplication -> @Deprecated 	public boolean isWebEnvironment();1509381678;Returns whether this {@link SpringApplication} is running within a web environment._@return {@code true} if running within a web environment, otherwise {@code false}._@see #setWebEnvironment(boolean)_@deprecated since 2.0.0 in favor of {@link #getWebApplicationType()};@Deprecated_	public boolean isWebEnvironment() {_		return this.webApplicationType == WebApplicationType.SERVLET__	};returns,whether,this,link,spring,application,is,running,within,a,web,environment,return,code,true,if,running,within,a,web,environment,otherwise,code,false,see,set,web,environment,boolean,deprecated,since,2,0,0,in,favor,of,link,get,web,application,type;deprecated,public,boolean,is,web,environment,return,this,web,application,type,web,application,type,servlet
SpringApplication -> @Deprecated 	public boolean isWebEnvironment();1510995225;Returns whether this {@link SpringApplication} is running within a web environment._@return {@code true} if running within a web environment, otherwise {@code false}._@see #setWebEnvironment(boolean)_@deprecated since 2.0.0 in favor of {@link #getWebApplicationType()};@Deprecated_	public boolean isWebEnvironment() {_		return this.webApplicationType == WebApplicationType.SERVLET__	};returns,whether,this,link,spring,application,is,running,within,a,web,environment,return,code,true,if,running,within,a,web,environment,otherwise,code,false,see,set,web,environment,boolean,deprecated,since,2,0,0,in,favor,of,link,get,web,application,type;deprecated,public,boolean,is,web,environment,return,this,web,application,type,web,application,type,servlet
SpringApplication -> @Deprecated 	public boolean isWebEnvironment();1515670013;Returns whether this {@link SpringApplication} is running within a web environment._@return {@code true} if running within a web environment, otherwise {@code false}._@see #setWebEnvironment(boolean)_@deprecated since 2.0.0 in favor of {@link #getWebApplicationType()};@Deprecated_	public boolean isWebEnvironment() {_		return this.webApplicationType == WebApplicationType.SERVLET__	};returns,whether,this,link,spring,application,is,running,within,a,web,environment,return,code,true,if,running,within,a,web,environment,otherwise,code,false,see,set,web,environment,boolean,deprecated,since,2,0,0,in,favor,of,link,get,web,application,type;deprecated,public,boolean,is,web,environment,return,this,web,application,type,web,application,type,servlet
SpringApplication -> @Deprecated 	public boolean isWebEnvironment();1519362690;Returns whether this {@link SpringApplication} is running within a web environment._@return {@code true} if running within a web environment, otherwise {@code false}._@see #setWebEnvironment(boolean)_@deprecated since 2.0.0 in favor of {@link #getWebApplicationType()};@Deprecated_	public boolean isWebEnvironment() {_		return this.webApplicationType == WebApplicationType.SERVLET__	};returns,whether,this,link,spring,application,is,running,within,a,web,environment,return,code,true,if,running,within,a,web,environment,otherwise,code,false,see,set,web,environment,boolean,deprecated,since,2,0,0,in,favor,of,link,get,web,application,type;deprecated,public,boolean,is,web,environment,return,this,web,application,type,web,application,type,servlet
SpringApplication -> @Deprecated 	public boolean isWebEnvironment();1522251721;Returns whether this {@link SpringApplication} is running within a web environment._@return {@code true} if running within a web environment, otherwise {@code false}._@see #setWebEnvironment(boolean)_@deprecated since 2.0.0 in favor of {@link #getWebApplicationType()};@Deprecated_	public boolean isWebEnvironment() {_		return this.webApplicationType == WebApplicationType.SERVLET__	};returns,whether,this,link,spring,application,is,running,within,a,web,environment,return,code,true,if,running,within,a,web,environment,otherwise,code,false,see,set,web,environment,boolean,deprecated,since,2,0,0,in,favor,of,link,get,web,application,type;deprecated,public,boolean,is,web,environment,return,this,web,application,type,web,application,type,servlet
SpringApplication -> @Deprecated 	public boolean isWebEnvironment();1525376698;Returns whether this {@link SpringApplication} is running within a web environment._@return {@code true} if running within a web environment, otherwise {@code false}._@see #setWebEnvironment(boolean)_@deprecated since 2.0.0 in favor of {@link #getWebApplicationType()};@Deprecated_	public boolean isWebEnvironment() {_		return this.webApplicationType == WebApplicationType.SERVLET__	};returns,whether,this,link,spring,application,is,running,within,a,web,environment,return,code,true,if,running,within,a,web,environment,otherwise,code,false,see,set,web,environment,boolean,deprecated,since,2,0,0,in,favor,of,link,get,web,application,type;deprecated,public,boolean,is,web,environment,return,this,web,application,type,web,application,type,servlet
SpringApplication -> @Deprecated 	public boolean isWebEnvironment();1525416882;Returns whether this {@link SpringApplication} is running within a web environment._@return {@code true} if running within a web environment, otherwise {@code false}._@see #setWebEnvironment(boolean)_@deprecated since 2.0.0 in favor of {@link #getWebApplicationType()};@Deprecated_	public boolean isWebEnvironment() {_		return this.webApplicationType == WebApplicationType.SERVLET__	};returns,whether,this,link,spring,application,is,running,within,a,web,environment,return,code,true,if,running,within,a,web,environment,otherwise,code,false,see,set,web,environment,boolean,deprecated,since,2,0,0,in,favor,of,link,get,web,application,type;deprecated,public,boolean,is,web,environment,return,this,web,application,type,web,application,type,servlet
SpringApplication -> public void setDefaultProperties(Properties defaultProperties);1507173536;Convenient alternative to {@link #setDefaultProperties(Map)}._@param defaultProperties some {@link Properties};public void setDefaultProperties(Properties defaultProperties) {_		this.defaultProperties = new HashMap<>()__		for (Object key : Collections.list(defaultProperties.propertyNames())) {_			this.defaultProperties.put((String) key, defaultProperties.get(key))__		}_	};convenient,alternative,to,link,set,default,properties,map,param,default,properties,some,link,properties;public,void,set,default,properties,properties,default,properties,this,default,properties,new,hash,map,for,object,key,collections,list,default,properties,property,names,this,default,properties,put,string,key,default,properties,get,key
SpringApplication -> public void setDefaultProperties(Properties defaultProperties);1509381678;Convenient alternative to {@link #setDefaultProperties(Map)}._@param defaultProperties some {@link Properties};public void setDefaultProperties(Properties defaultProperties) {_		this.defaultProperties = new HashMap<>()__		for (Object key : Collections.list(defaultProperties.propertyNames())) {_			this.defaultProperties.put((String) key, defaultProperties.get(key))__		}_	};convenient,alternative,to,link,set,default,properties,map,param,default,properties,some,link,properties;public,void,set,default,properties,properties,default,properties,this,default,properties,new,hash,map,for,object,key,collections,list,default,properties,property,names,this,default,properties,put,string,key,default,properties,get,key
SpringApplication -> public void setDefaultProperties(Properties defaultProperties);1510995225;Convenient alternative to {@link #setDefaultProperties(Map)}._@param defaultProperties some {@link Properties};public void setDefaultProperties(Properties defaultProperties) {_		this.defaultProperties = new HashMap<>()__		for (Object key : Collections.list(defaultProperties.propertyNames())) {_			this.defaultProperties.put((String) key, defaultProperties.get(key))__		}_	};convenient,alternative,to,link,set,default,properties,map,param,default,properties,some,link,properties;public,void,set,default,properties,properties,default,properties,this,default,properties,new,hash,map,for,object,key,collections,list,default,properties,property,names,this,default,properties,put,string,key,default,properties,get,key
SpringApplication -> public void setDefaultProperties(Properties defaultProperties);1515670013;Convenient alternative to {@link #setDefaultProperties(Map)}._@param defaultProperties some {@link Properties};public void setDefaultProperties(Properties defaultProperties) {_		this.defaultProperties = new HashMap<>()__		for (Object key : Collections.list(defaultProperties.propertyNames())) {_			this.defaultProperties.put((String) key, defaultProperties.get(key))__		}_	};convenient,alternative,to,link,set,default,properties,map,param,default,properties,some,link,properties;public,void,set,default,properties,properties,default,properties,this,default,properties,new,hash,map,for,object,key,collections,list,default,properties,property,names,this,default,properties,put,string,key,default,properties,get,key
SpringApplication -> public void setDefaultProperties(Properties defaultProperties);1519362690;Convenient alternative to {@link #setDefaultProperties(Map)}._@param defaultProperties some {@link Properties};public void setDefaultProperties(Properties defaultProperties) {_		this.defaultProperties = new HashMap<>()__		for (Object key : Collections.list(defaultProperties.propertyNames())) {_			this.defaultProperties.put((String) key, defaultProperties.get(key))__		}_	};convenient,alternative,to,link,set,default,properties,map,param,default,properties,some,link,properties;public,void,set,default,properties,properties,default,properties,this,default,properties,new,hash,map,for,object,key,collections,list,default,properties,property,names,this,default,properties,put,string,key,default,properties,get,key
SpringApplication -> public void setDefaultProperties(Properties defaultProperties);1522251721;Convenient alternative to {@link #setDefaultProperties(Map)}._@param defaultProperties some {@link Properties};public void setDefaultProperties(Properties defaultProperties) {_		this.defaultProperties = new HashMap<>()__		for (Object key : Collections.list(defaultProperties.propertyNames())) {_			this.defaultProperties.put((String) key, defaultProperties.get(key))__		}_	};convenient,alternative,to,link,set,default,properties,map,param,default,properties,some,link,properties;public,void,set,default,properties,properties,default,properties,this,default,properties,new,hash,map,for,object,key,collections,list,default,properties,property,names,this,default,properties,put,string,key,default,properties,get,key
SpringApplication -> public void setDefaultProperties(Properties defaultProperties);1525376698;Convenient alternative to {@link #setDefaultProperties(Map)}._@param defaultProperties some {@link Properties};public void setDefaultProperties(Properties defaultProperties) {_		this.defaultProperties = new HashMap<>()__		for (Object key : Collections.list(defaultProperties.propertyNames())) {_			this.defaultProperties.put((String) key, defaultProperties.get(key))__		}_	};convenient,alternative,to,link,set,default,properties,map,param,default,properties,some,link,properties;public,void,set,default,properties,properties,default,properties,this,default,properties,new,hash,map,for,object,key,collections,list,default,properties,property,names,this,default,properties,put,string,key,default,properties,get,key
SpringApplication -> public void setDefaultProperties(Properties defaultProperties);1525416882;Convenient alternative to {@link #setDefaultProperties(Map)}._@param defaultProperties some {@link Properties};public void setDefaultProperties(Properties defaultProperties) {_		this.defaultProperties = new HashMap<>()__		for (Object key : Collections.list(defaultProperties.propertyNames())) {_			this.defaultProperties.put((String) key, defaultProperties.get(key))__		}_	};convenient,alternative,to,link,set,default,properties,map,param,default,properties,some,link,properties;public,void,set,default,properties,properties,default,properties,this,default,properties,new,hash,map,for,object,key,collections,list,default,properties,property,names,this,default,properties,put,string,key,default,properties,get,key
SpringApplication -> public void setDefaultProperties(Properties defaultProperties);1526993305;Convenient alternative to {@link #setDefaultProperties(Map)}._@param defaultProperties some {@link Properties};public void setDefaultProperties(Properties defaultProperties) {_		this.defaultProperties = new HashMap<>()__		for (Object key : Collections.list(defaultProperties.propertyNames())) {_			this.defaultProperties.put((String) key, defaultProperties.get(key))__		}_	};convenient,alternative,to,link,set,default,properties,map,param,default,properties,some,link,properties;public,void,set,default,properties,properties,default,properties,this,default,properties,new,hash,map,for,object,key,collections,list,default,properties,property,names,this,default,properties,put,string,key,default,properties,get,key
SpringApplication -> public void setDefaultProperties(Properties defaultProperties);1529485904;Convenient alternative to {@link #setDefaultProperties(Map)}._@param defaultProperties some {@link Properties};public void setDefaultProperties(Properties defaultProperties) {_		this.defaultProperties = new HashMap<>()__		for (Object key : Collections.list(defaultProperties.propertyNames())) {_			this.defaultProperties.put((String) key, defaultProperties.get(key))__		}_	};convenient,alternative,to,link,set,default,properties,map,param,default,properties,some,link,properties;public,void,set,default,properties,properties,default,properties,this,default,properties,new,hash,map,for,object,key,collections,list,default,properties,property,names,this,default,properties,put,string,key,default,properties,get,key
SpringApplication -> public void setDefaultProperties(Properties defaultProperties);1531140616;Convenient alternative to {@link #setDefaultProperties(Map)}._@param defaultProperties some {@link Properties};public void setDefaultProperties(Properties defaultProperties) {_		this.defaultProperties = new HashMap<>()__		for (Object key : Collections.list(defaultProperties.propertyNames())) {_			this.defaultProperties.put((String) key, defaultProperties.get(key))__		}_	};convenient,alternative,to,link,set,default,properties,map,param,default,properties,some,link,properties;public,void,set,default,properties,properties,default,properties,this,default,properties,new,hash,map,for,object,key,collections,list,default,properties,property,names,this,default,properties,put,string,key,default,properties,get,key
SpringApplication -> public void setDefaultProperties(Properties defaultProperties);1531155529;Convenient alternative to {@link #setDefaultProperties(Map)}._@param defaultProperties some {@link Properties};public void setDefaultProperties(Properties defaultProperties) {_		this.defaultProperties = new HashMap<>()__		for (Object key : Collections.list(defaultProperties.propertyNames())) {_			this.defaultProperties.put((String) key, defaultProperties.get(key))__		}_	};convenient,alternative,to,link,set,default,properties,map,param,default,properties,some,link,properties;public,void,set,default,properties,properties,default,properties,this,default,properties,new,hash,map,for,object,key,collections,list,default,properties,property,names,this,default,properties,put,string,key,default,properties,get,key
SpringApplication -> public void setDefaultProperties(Properties defaultProperties);1531222098;Convenient alternative to {@link #setDefaultProperties(Map)}._@param defaultProperties some {@link Properties};public void setDefaultProperties(Properties defaultProperties) {_		this.defaultProperties = new HashMap<>()__		for (Object key : Collections.list(defaultProperties.propertyNames())) {_			this.defaultProperties.put((String) key, defaultProperties.get(key))__		}_	};convenient,alternative,to,link,set,default,properties,map,param,default,properties,some,link,properties;public,void,set,default,properties,properties,default,properties,this,default,properties,new,hash,map,for,object,key,collections,list,default,properties,property,names,this,default,properties,put,string,key,default,properties,get,key
SpringApplication -> public void setDefaultProperties(Properties defaultProperties);1532738143;Convenient alternative to {@link #setDefaultProperties(Map)}._@param defaultProperties some {@link Properties};public void setDefaultProperties(Properties defaultProperties) {_		this.defaultProperties = new HashMap<>()__		for (Object key : Collections.list(defaultProperties.propertyNames())) {_			this.defaultProperties.put((String) key, defaultProperties.get(key))__		}_	};convenient,alternative,to,link,set,default,properties,map,param,default,properties,some,link,properties;public,void,set,default,properties,properties,default,properties,this,default,properties,new,hash,map,for,object,key,collections,list,default,properties,property,names,this,default,properties,put,string,key,default,properties,get,key
SpringApplication -> public void setDefaultProperties(Properties defaultProperties);1534188228;Convenient alternative to {@link #setDefaultProperties(Map)}._@param defaultProperties some {@link Properties};public void setDefaultProperties(Properties defaultProperties) {_		this.defaultProperties = new HashMap<>()__		for (Object key : Collections.list(defaultProperties.propertyNames())) {_			this.defaultProperties.put((String) key, defaultProperties.get(key))__		}_	};convenient,alternative,to,link,set,default,properties,map,param,default,properties,some,link,properties;public,void,set,default,properties,properties,default,properties,this,default,properties,new,hash,map,for,object,key,collections,list,default,properties,property,names,this,default,properties,put,string,key,default,properties,get,key
SpringApplication -> public void setDefaultProperties(Properties defaultProperties);1535104170;Convenient alternative to {@link #setDefaultProperties(Map)}._@param defaultProperties some {@link Properties};public void setDefaultProperties(Properties defaultProperties) {_		this.defaultProperties = new HashMap<>()__		for (Object key : Collections.list(defaultProperties.propertyNames())) {_			this.defaultProperties.put((String) key, defaultProperties.get(key))__		}_	};convenient,alternative,to,link,set,default,properties,map,param,default,properties,some,link,properties;public,void,set,default,properties,properties,default,properties,this,default,properties,new,hash,map,for,object,key,collections,list,default,properties,property,names,this,default,properties,put,string,key,default,properties,get,key
SpringApplication -> public void setDefaultProperties(Properties defaultProperties);1536701067;Convenient alternative to {@link #setDefaultProperties(Map)}._@param defaultProperties some {@link Properties};public void setDefaultProperties(Properties defaultProperties) {_		this.defaultProperties = new HashMap<>()__		for (Object key : Collections.list(defaultProperties.propertyNames())) {_			this.defaultProperties.put((String) key, defaultProperties.get(key))__		}_	};convenient,alternative,to,link,set,default,properties,map,param,default,properties,some,link,properties;public,void,set,default,properties,properties,default,properties,this,default,properties,new,hash,map,for,object,key,collections,list,default,properties,property,names,this,default,properties,put,string,key,default,properties,get,key
SpringApplication -> public void setDefaultProperties(Properties defaultProperties);1538570355;Convenient alternative to {@link #setDefaultProperties(Map)}._@param defaultProperties some {@link Properties};public void setDefaultProperties(Properties defaultProperties) {_		this.defaultProperties = new HashMap<>()__		for (Object key : Collections.list(defaultProperties.propertyNames())) {_			this.defaultProperties.put((String) key, defaultProperties.get(key))__		}_	};convenient,alternative,to,link,set,default,properties,map,param,default,properties,some,link,properties;public,void,set,default,properties,properties,default,properties,this,default,properties,new,hash,map,for,object,key,collections,list,default,properties,property,names,this,default,properties,put,string,key,default,properties,get,key
SpringApplication -> public void setDefaultProperties(Properties defaultProperties);1538707540;Convenient alternative to {@link #setDefaultProperties(Map)}._@param defaultProperties some {@link Properties};public void setDefaultProperties(Properties defaultProperties) {_		this.defaultProperties = new HashMap<>()__		for (Object key : Collections.list(defaultProperties.propertyNames())) {_			this.defaultProperties.put((String) key, defaultProperties.get(key))__		}_	};convenient,alternative,to,link,set,default,properties,map,param,default,properties,some,link,properties;public,void,set,default,properties,properties,default,properties,this,default,properties,new,hash,map,for,object,key,collections,list,default,properties,property,names,this,default,properties,put,string,key,default,properties,get,key
SpringApplication -> public void setDefaultProperties(Properties defaultProperties);1538750610;Convenient alternative to {@link #setDefaultProperties(Map)}._@param defaultProperties some {@link Properties};public void setDefaultProperties(Properties defaultProperties) {_		this.defaultProperties = new HashMap<>()__		for (Object key : Collections.list(defaultProperties.propertyNames())) {_			this.defaultProperties.put((String) key, defaultProperties.get(key))__		}_	};convenient,alternative,to,link,set,default,properties,map,param,default,properties,some,link,properties;public,void,set,default,properties,properties,default,properties,this,default,properties,new,hash,map,for,object,key,collections,list,default,properties,property,names,this,default,properties,put,string,key,default,properties,get,key
SpringApplication -> public void setDefaultProperties(Properties defaultProperties);1538771652;Convenient alternative to {@link #setDefaultProperties(Map)}._@param defaultProperties some {@link Properties};public void setDefaultProperties(Properties defaultProperties) {_		this.defaultProperties = new HashMap<>()__		for (Object key : Collections.list(defaultProperties.propertyNames())) {_			this.defaultProperties.put((String) key, defaultProperties.get(key))__		}_	};convenient,alternative,to,link,set,default,properties,map,param,default,properties,some,link,properties;public,void,set,default,properties,properties,default,properties,this,default,properties,new,hash,map,for,object,key,collections,list,default,properties,property,names,this,default,properties,put,string,key,default,properties,get,key
SpringApplication -> public void setDefaultProperties(Properties defaultProperties);1540419762;Convenient alternative to {@link #setDefaultProperties(Map)}._@param defaultProperties some {@link Properties};public void setDefaultProperties(Properties defaultProperties) {_		this.defaultProperties = new HashMap<>()__		for (Object key : Collections.list(defaultProperties.propertyNames())) {_			this.defaultProperties.put((String) key, defaultProperties.get(key))__		}_	};convenient,alternative,to,link,set,default,properties,map,param,default,properties,some,link,properties;public,void,set,default,properties,properties,default,properties,this,default,properties,new,hash,map,for,object,key,collections,list,default,properties,property,names,this,default,properties,put,string,key,default,properties,get,key
SpringApplication -> public void setDefaultProperties(Properties defaultProperties);1541060131;Convenient alternative to {@link #setDefaultProperties(Map)}._@param defaultProperties some {@link Properties};public void setDefaultProperties(Properties defaultProperties) {_		this.defaultProperties = new HashMap<>()__		for (Object key : Collections.list(defaultProperties.propertyNames())) {_			this.defaultProperties.put((String) key, defaultProperties.get(key))__		}_	};convenient,alternative,to,link,set,default,properties,map,param,default,properties,some,link,properties;public,void,set,default,properties,properties,default,properties,this,default,properties,new,hash,map,for,object,key,collections,list,default,properties,property,names,this,default,properties,put,string,key,default,properties,get,key
SpringApplication -> public void setDefaultProperties(Properties defaultProperties);1546943477;Convenient alternative to {@link #setDefaultProperties(Map)}._@param defaultProperties some {@link Properties};public void setDefaultProperties(Properties defaultProperties) {_		this.defaultProperties = new HashMap<>()__		for (Object key : Collections.list(defaultProperties.propertyNames())) {_			this.defaultProperties.put((String) key, defaultProperties.get(key))__		}_	};convenient,alternative,to,link,set,default,properties,map,param,default,properties,some,link,properties;public,void,set,default,properties,properties,default,properties,this,default,properties,new,hash,map,for,object,key,collections,list,default,properties,property,names,this,default,properties,put,string,key,default,properties,get,key
SpringApplication -> public void setDefaultProperties(Properties defaultProperties);1549791353;Convenient alternative to {@link #setDefaultProperties(Map)}._@param defaultProperties some {@link Properties};public void setDefaultProperties(Properties defaultProperties) {_		this.defaultProperties = new HashMap<>()__		for (Object key : Collections.list(defaultProperties.propertyNames())) {_			this.defaultProperties.put((String) key, defaultProperties.get(key))__		}_	};convenient,alternative,to,link,set,default,properties,map,param,default,properties,some,link,properties;public,void,set,default,properties,properties,default,properties,this,default,properties,new,hash,map,for,object,key,collections,list,default,properties,property,names,this,default,properties,put,string,key,default,properties,get,key
SpringApplication -> public void setDefaultProperties(Properties defaultProperties);1550148109;Convenient alternative to {@link #setDefaultProperties(Map)}._@param defaultProperties some {@link Properties};public void setDefaultProperties(Properties defaultProperties) {_		this.defaultProperties = new HashMap<>()__		for (Object key : Collections.list(defaultProperties.propertyNames())) {_			this.defaultProperties.put((String) key, defaultProperties.get(key))__		}_	};convenient,alternative,to,link,set,default,properties,map,param,default,properties,some,link,properties;public,void,set,default,properties,properties,default,properties,this,default,properties,new,hash,map,for,object,key,collections,list,default,properties,property,names,this,default,properties,put,string,key,default,properties,get,key
SpringApplication -> public static void main(String[] args) throws Exception;1507173536;A basic main that can be used to launch an application. This method is useful when_application sources are defined via a {@literal --spring.main.sources} command line_argument._<p>_Most developers will want to define their own main method and call the_{@link #run(Class, String...) run} method instead._@param args command line arguments_@throws Exception if the application cannot be started_@see SpringApplication#run(Class[], String[])_@see SpringApplication#run(Class, String...);public static void main(String[] args) throws Exception {_		SpringApplication.run(new Class<?>[0], args)__	};a,basic,main,that,can,be,used,to,launch,an,application,this,method,is,useful,when,application,sources,are,defined,via,a,literal,spring,main,sources,command,line,argument,p,most,developers,will,want,to,define,their,own,main,method,and,call,the,link,run,class,string,run,method,instead,param,args,command,line,arguments,throws,exception,if,the,application,cannot,be,started,see,spring,application,run,class,string,see,spring,application,run,class,string;public,static,void,main,string,args,throws,exception,spring,application,run,new,class,0,args
SpringApplication -> public static void main(String[] args) throws Exception;1509381678;A basic main that can be used to launch an application. This method is useful when_application sources are defined via a {@literal --spring.main.sources} command line_argument._<p>_Most developers will want to define their own main method and call the_{@link #run(Class, String...) run} method instead._@param args command line arguments_@throws Exception if the application cannot be started_@see SpringApplication#run(Class[], String[])_@see SpringApplication#run(Class, String...);public static void main(String[] args) throws Exception {_		SpringApplication.run(new Class<?>[0], args)__	};a,basic,main,that,can,be,used,to,launch,an,application,this,method,is,useful,when,application,sources,are,defined,via,a,literal,spring,main,sources,command,line,argument,p,most,developers,will,want,to,define,their,own,main,method,and,call,the,link,run,class,string,run,method,instead,param,args,command,line,arguments,throws,exception,if,the,application,cannot,be,started,see,spring,application,run,class,string,see,spring,application,run,class,string;public,static,void,main,string,args,throws,exception,spring,application,run,new,class,0,args
SpringApplication -> public static void main(String[] args) throws Exception;1510995225;A basic main that can be used to launch an application. This method is useful when_application sources are defined via a {@literal --spring.main.sources} command line_argument._<p>_Most developers will want to define their own main method and call the_{@link #run(Class, String...) run} method instead._@param args command line arguments_@throws Exception if the application cannot be started_@see SpringApplication#run(Class[], String[])_@see SpringApplication#run(Class, String...);public static void main(String[] args) throws Exception {_		SpringApplication.run(new Class<?>[0], args)__	};a,basic,main,that,can,be,used,to,launch,an,application,this,method,is,useful,when,application,sources,are,defined,via,a,literal,spring,main,sources,command,line,argument,p,most,developers,will,want,to,define,their,own,main,method,and,call,the,link,run,class,string,run,method,instead,param,args,command,line,arguments,throws,exception,if,the,application,cannot,be,started,see,spring,application,run,class,string,see,spring,application,run,class,string;public,static,void,main,string,args,throws,exception,spring,application,run,new,class,0,args
SpringApplication -> public static void main(String[] args) throws Exception;1515670013;A basic main that can be used to launch an application. This method is useful when_application sources are defined via a {@literal --spring.main.sources} command line_argument._<p>_Most developers will want to define their own main method and call the_{@link #run(Class, String...) run} method instead._@param args command line arguments_@throws Exception if the application cannot be started_@see SpringApplication#run(Class[], String[])_@see SpringApplication#run(Class, String...);public static void main(String[] args) throws Exception {_		SpringApplication.run(new Class<?>[0], args)__	};a,basic,main,that,can,be,used,to,launch,an,application,this,method,is,useful,when,application,sources,are,defined,via,a,literal,spring,main,sources,command,line,argument,p,most,developers,will,want,to,define,their,own,main,method,and,call,the,link,run,class,string,run,method,instead,param,args,command,line,arguments,throws,exception,if,the,application,cannot,be,started,see,spring,application,run,class,string,see,spring,application,run,class,string;public,static,void,main,string,args,throws,exception,spring,application,run,new,class,0,args
SpringApplication -> public static void main(String[] args) throws Exception;1519362690;A basic main that can be used to launch an application. This method is useful when_application sources are defined via a {@literal --spring.main.sources} command line_argument._<p>_Most developers will want to define their own main method and call the_{@link #run(Class, String...) run} method instead._@param args command line arguments_@throws Exception if the application cannot be started_@see SpringApplication#run(Class[], String[])_@see SpringApplication#run(Class, String...);public static void main(String[] args) throws Exception {_		SpringApplication.run(new Class<?>[0], args)__	};a,basic,main,that,can,be,used,to,launch,an,application,this,method,is,useful,when,application,sources,are,defined,via,a,literal,spring,main,sources,command,line,argument,p,most,developers,will,want,to,define,their,own,main,method,and,call,the,link,run,class,string,run,method,instead,param,args,command,line,arguments,throws,exception,if,the,application,cannot,be,started,see,spring,application,run,class,string,see,spring,application,run,class,string;public,static,void,main,string,args,throws,exception,spring,application,run,new,class,0,args
SpringApplication -> public static void main(String[] args) throws Exception;1522251721;A basic main that can be used to launch an application. This method is useful when_application sources are defined via a {@literal --spring.main.sources} command line_argument._<p>_Most developers will want to define their own main method and call the_{@link #run(Class, String...) run} method instead._@param args command line arguments_@throws Exception if the application cannot be started_@see SpringApplication#run(Class[], String[])_@see SpringApplication#run(Class, String...);public static void main(String[] args) throws Exception {_		SpringApplication.run(new Class<?>[0], args)__	};a,basic,main,that,can,be,used,to,launch,an,application,this,method,is,useful,when,application,sources,are,defined,via,a,literal,spring,main,sources,command,line,argument,p,most,developers,will,want,to,define,their,own,main,method,and,call,the,link,run,class,string,run,method,instead,param,args,command,line,arguments,throws,exception,if,the,application,cannot,be,started,see,spring,application,run,class,string,see,spring,application,run,class,string;public,static,void,main,string,args,throws,exception,spring,application,run,new,class,0,args
SpringApplication -> public static void main(String[] args) throws Exception;1525376698;A basic main that can be used to launch an application. This method is useful when_application sources are defined via a {@literal --spring.main.sources} command line_argument._<p>_Most developers will want to define their own main method and call the_{@link #run(Class, String...) run} method instead._@param args command line arguments_@throws Exception if the application cannot be started_@see SpringApplication#run(Class[], String[])_@see SpringApplication#run(Class, String...);public static void main(String[] args) throws Exception {_		SpringApplication.run(new Class<?>[0], args)__	};a,basic,main,that,can,be,used,to,launch,an,application,this,method,is,useful,when,application,sources,are,defined,via,a,literal,spring,main,sources,command,line,argument,p,most,developers,will,want,to,define,their,own,main,method,and,call,the,link,run,class,string,run,method,instead,param,args,command,line,arguments,throws,exception,if,the,application,cannot,be,started,see,spring,application,run,class,string,see,spring,application,run,class,string;public,static,void,main,string,args,throws,exception,spring,application,run,new,class,0,args
SpringApplication -> public static void main(String[] args) throws Exception;1525416882;A basic main that can be used to launch an application. This method is useful when_application sources are defined via a {@literal --spring.main.sources} command line_argument._<p>_Most developers will want to define their own main method and call the_{@link #run(Class, String...) run} method instead._@param args command line arguments_@throws Exception if the application cannot be started_@see SpringApplication#run(Class[], String[])_@see SpringApplication#run(Class, String...);public static void main(String[] args) throws Exception {_		SpringApplication.run(new Class<?>[0], args)__	};a,basic,main,that,can,be,used,to,launch,an,application,this,method,is,useful,when,application,sources,are,defined,via,a,literal,spring,main,sources,command,line,argument,p,most,developers,will,want,to,define,their,own,main,method,and,call,the,link,run,class,string,run,method,instead,param,args,command,line,arguments,throws,exception,if,the,application,cannot,be,started,see,spring,application,run,class,string,see,spring,application,run,class,string;public,static,void,main,string,args,throws,exception,spring,application,run,new,class,0,args
SpringApplication -> public static void main(String[] args) throws Exception;1526993305;A basic main that can be used to launch an application. This method is useful when_application sources are defined via a {@literal --spring.main.sources} command line_argument._<p>_Most developers will want to define their own main method and call the_{@link #run(Class, String...) run} method instead._@param args command line arguments_@throws Exception if the application cannot be started_@see SpringApplication#run(Class[], String[])_@see SpringApplication#run(Class, String...);public static void main(String[] args) throws Exception {_		SpringApplication.run(new Class<?>[0], args)__	};a,basic,main,that,can,be,used,to,launch,an,application,this,method,is,useful,when,application,sources,are,defined,via,a,literal,spring,main,sources,command,line,argument,p,most,developers,will,want,to,define,their,own,main,method,and,call,the,link,run,class,string,run,method,instead,param,args,command,line,arguments,throws,exception,if,the,application,cannot,be,started,see,spring,application,run,class,string,see,spring,application,run,class,string;public,static,void,main,string,args,throws,exception,spring,application,run,new,class,0,args
SpringApplication -> public static void main(String[] args) throws Exception;1529485904;A basic main that can be used to launch an application. This method is useful when_application sources are defined via a {@literal --spring.main.sources} command line_argument._<p>_Most developers will want to define their own main method and call the_{@link #run(Class, String...) run} method instead._@param args command line arguments_@throws Exception if the application cannot be started_@see SpringApplication#run(Class[], String[])_@see SpringApplication#run(Class, String...);public static void main(String[] args) throws Exception {_		SpringApplication.run(new Class<?>[0], args)__	};a,basic,main,that,can,be,used,to,launch,an,application,this,method,is,useful,when,application,sources,are,defined,via,a,literal,spring,main,sources,command,line,argument,p,most,developers,will,want,to,define,their,own,main,method,and,call,the,link,run,class,string,run,method,instead,param,args,command,line,arguments,throws,exception,if,the,application,cannot,be,started,see,spring,application,run,class,string,see,spring,application,run,class,string;public,static,void,main,string,args,throws,exception,spring,application,run,new,class,0,args
SpringApplication -> public static void main(String[] args) throws Exception;1531140616;A basic main that can be used to launch an application. This method is useful when_application sources are defined via a {@literal --spring.main.sources} command line_argument._<p>_Most developers will want to define their own main method and call the_{@link #run(Class, String...) run} method instead._@param args command line arguments_@throws Exception if the application cannot be started_@see SpringApplication#run(Class[], String[])_@see SpringApplication#run(Class, String...);public static void main(String[] args) throws Exception {_		SpringApplication.run(new Class<?>[0], args)__	};a,basic,main,that,can,be,used,to,launch,an,application,this,method,is,useful,when,application,sources,are,defined,via,a,literal,spring,main,sources,command,line,argument,p,most,developers,will,want,to,define,their,own,main,method,and,call,the,link,run,class,string,run,method,instead,param,args,command,line,arguments,throws,exception,if,the,application,cannot,be,started,see,spring,application,run,class,string,see,spring,application,run,class,string;public,static,void,main,string,args,throws,exception,spring,application,run,new,class,0,args
SpringApplication -> public static void main(String[] args) throws Exception;1531155529;A basic main that can be used to launch an application. This method is useful when_application sources are defined via a {@literal --spring.main.sources} command line_argument._<p>_Most developers will want to define their own main method and call the_{@link #run(Class, String...) run} method instead._@param args command line arguments_@throws Exception if the application cannot be started_@see SpringApplication#run(Class[], String[])_@see SpringApplication#run(Class, String...);public static void main(String[] args) throws Exception {_		SpringApplication.run(new Class<?>[0], args)__	};a,basic,main,that,can,be,used,to,launch,an,application,this,method,is,useful,when,application,sources,are,defined,via,a,literal,spring,main,sources,command,line,argument,p,most,developers,will,want,to,define,their,own,main,method,and,call,the,link,run,class,string,run,method,instead,param,args,command,line,arguments,throws,exception,if,the,application,cannot,be,started,see,spring,application,run,class,string,see,spring,application,run,class,string;public,static,void,main,string,args,throws,exception,spring,application,run,new,class,0,args
SpringApplication -> public static void main(String[] args) throws Exception;1531222098;A basic main that can be used to launch an application. This method is useful when_application sources are defined via a {@literal --spring.main.sources} command line_argument._<p>_Most developers will want to define their own main method and call the_{@link #run(Class, String...) run} method instead._@param args command line arguments_@throws Exception if the application cannot be started_@see SpringApplication#run(Class[], String[])_@see SpringApplication#run(Class, String...);public static void main(String[] args) throws Exception {_		SpringApplication.run(new Class<?>[0], args)__	};a,basic,main,that,can,be,used,to,launch,an,application,this,method,is,useful,when,application,sources,are,defined,via,a,literal,spring,main,sources,command,line,argument,p,most,developers,will,want,to,define,their,own,main,method,and,call,the,link,run,class,string,run,method,instead,param,args,command,line,arguments,throws,exception,if,the,application,cannot,be,started,see,spring,application,run,class,string,see,spring,application,run,class,string;public,static,void,main,string,args,throws,exception,spring,application,run,new,class,0,args
SpringApplication -> public static void main(String[] args) throws Exception;1532738143;A basic main that can be used to launch an application. This method is useful when_application sources are defined via a {@literal --spring.main.sources} command line_argument._<p>_Most developers will want to define their own main method and call the_{@link #run(Class, String...) run} method instead._@param args command line arguments_@throws Exception if the application cannot be started_@see SpringApplication#run(Class[], String[])_@see SpringApplication#run(Class, String...);public static void main(String[] args) throws Exception {_		SpringApplication.run(new Class<?>[0], args)__	};a,basic,main,that,can,be,used,to,launch,an,application,this,method,is,useful,when,application,sources,are,defined,via,a,literal,spring,main,sources,command,line,argument,p,most,developers,will,want,to,define,their,own,main,method,and,call,the,link,run,class,string,run,method,instead,param,args,command,line,arguments,throws,exception,if,the,application,cannot,be,started,see,spring,application,run,class,string,see,spring,application,run,class,string;public,static,void,main,string,args,throws,exception,spring,application,run,new,class,0,args
SpringApplication -> public static void main(String[] args) throws Exception;1534188228;A basic main that can be used to launch an application. This method is useful when_application sources are defined via a {@literal --spring.main.sources} command line_argument._<p>_Most developers will want to define their own main method and call the_{@link #run(Class, String...) run} method instead._@param args command line arguments_@throws Exception if the application cannot be started_@see SpringApplication#run(Class[], String[])_@see SpringApplication#run(Class, String...);public static void main(String[] args) throws Exception {_		SpringApplication.run(new Class<?>[0], args)__	};a,basic,main,that,can,be,used,to,launch,an,application,this,method,is,useful,when,application,sources,are,defined,via,a,literal,spring,main,sources,command,line,argument,p,most,developers,will,want,to,define,their,own,main,method,and,call,the,link,run,class,string,run,method,instead,param,args,command,line,arguments,throws,exception,if,the,application,cannot,be,started,see,spring,application,run,class,string,see,spring,application,run,class,string;public,static,void,main,string,args,throws,exception,spring,application,run,new,class,0,args
SpringApplication -> public static void main(String[] args) throws Exception;1535104170;A basic main that can be used to launch an application. This method is useful when_application sources are defined via a {@literal --spring.main.sources} command line_argument._<p>_Most developers will want to define their own main method and call the_{@link #run(Class, String...) run} method instead._@param args command line arguments_@throws Exception if the application cannot be started_@see SpringApplication#run(Class[], String[])_@see SpringApplication#run(Class, String...);public static void main(String[] args) throws Exception {_		SpringApplication.run(new Class<?>[0], args)__	};a,basic,main,that,can,be,used,to,launch,an,application,this,method,is,useful,when,application,sources,are,defined,via,a,literal,spring,main,sources,command,line,argument,p,most,developers,will,want,to,define,their,own,main,method,and,call,the,link,run,class,string,run,method,instead,param,args,command,line,arguments,throws,exception,if,the,application,cannot,be,started,see,spring,application,run,class,string,see,spring,application,run,class,string;public,static,void,main,string,args,throws,exception,spring,application,run,new,class,0,args
SpringApplication -> public static void main(String[] args) throws Exception;1536701067;A basic main that can be used to launch an application. This method is useful when_application sources are defined via a {@literal --spring.main.sources} command line_argument._<p>_Most developers will want to define their own main method and call the_{@link #run(Class, String...) run} method instead._@param args command line arguments_@throws Exception if the application cannot be started_@see SpringApplication#run(Class[], String[])_@see SpringApplication#run(Class, String...);public static void main(String[] args) throws Exception {_		SpringApplication.run(new Class<?>[0], args)__	};a,basic,main,that,can,be,used,to,launch,an,application,this,method,is,useful,when,application,sources,are,defined,via,a,literal,spring,main,sources,command,line,argument,p,most,developers,will,want,to,define,their,own,main,method,and,call,the,link,run,class,string,run,method,instead,param,args,command,line,arguments,throws,exception,if,the,application,cannot,be,started,see,spring,application,run,class,string,see,spring,application,run,class,string;public,static,void,main,string,args,throws,exception,spring,application,run,new,class,0,args
SpringApplication -> public static void main(String[] args) throws Exception;1538570355;A basic main that can be used to launch an application. This method is useful when_application sources are defined via a {@literal --spring.main.sources} command line_argument._<p>_Most developers will want to define their own main method and call the_{@link #run(Class, String...) run} method instead._@param args command line arguments_@throws Exception if the application cannot be started_@see SpringApplication#run(Class[], String[])_@see SpringApplication#run(Class, String...);public static void main(String[] args) throws Exception {_		SpringApplication.run(new Class<?>[0], args)__	};a,basic,main,that,can,be,used,to,launch,an,application,this,method,is,useful,when,application,sources,are,defined,via,a,literal,spring,main,sources,command,line,argument,p,most,developers,will,want,to,define,their,own,main,method,and,call,the,link,run,class,string,run,method,instead,param,args,command,line,arguments,throws,exception,if,the,application,cannot,be,started,see,spring,application,run,class,string,see,spring,application,run,class,string;public,static,void,main,string,args,throws,exception,spring,application,run,new,class,0,args
SpringApplication -> public static void main(String[] args) throws Exception;1538707540;A basic main that can be used to launch an application. This method is useful when_application sources are defined via a {@literal --spring.main.sources} command line_argument._<p>_Most developers will want to define their own main method and call the_{@link #run(Class, String...) run} method instead._@param args command line arguments_@throws Exception if the application cannot be started_@see SpringApplication#run(Class[], String[])_@see SpringApplication#run(Class, String...);public static void main(String[] args) throws Exception {_		SpringApplication.run(new Class<?>[0], args)__	};a,basic,main,that,can,be,used,to,launch,an,application,this,method,is,useful,when,application,sources,are,defined,via,a,literal,spring,main,sources,command,line,argument,p,most,developers,will,want,to,define,their,own,main,method,and,call,the,link,run,class,string,run,method,instead,param,args,command,line,arguments,throws,exception,if,the,application,cannot,be,started,see,spring,application,run,class,string,see,spring,application,run,class,string;public,static,void,main,string,args,throws,exception,spring,application,run,new,class,0,args
SpringApplication -> public static void main(String[] args) throws Exception;1538750610;A basic main that can be used to launch an application. This method is useful when_application sources are defined via a {@literal --spring.main.sources} command line_argument._<p>_Most developers will want to define their own main method and call the_{@link #run(Class, String...) run} method instead._@param args command line arguments_@throws Exception if the application cannot be started_@see SpringApplication#run(Class[], String[])_@see SpringApplication#run(Class, String...);public static void main(String[] args) throws Exception {_		SpringApplication.run(new Class<?>[0], args)__	};a,basic,main,that,can,be,used,to,launch,an,application,this,method,is,useful,when,application,sources,are,defined,via,a,literal,spring,main,sources,command,line,argument,p,most,developers,will,want,to,define,their,own,main,method,and,call,the,link,run,class,string,run,method,instead,param,args,command,line,arguments,throws,exception,if,the,application,cannot,be,started,see,spring,application,run,class,string,see,spring,application,run,class,string;public,static,void,main,string,args,throws,exception,spring,application,run,new,class,0,args
SpringApplication -> public static void main(String[] args) throws Exception;1538771652;A basic main that can be used to launch an application. This method is useful when_application sources are defined via a {@literal --spring.main.sources} command line_argument._<p>_Most developers will want to define their own main method and call the_{@link #run(Class, String...) run} method instead._@param args command line arguments_@throws Exception if the application cannot be started_@see SpringApplication#run(Class[], String[])_@see SpringApplication#run(Class, String...);public static void main(String[] args) throws Exception {_		SpringApplication.run(new Class<?>[0], args)__	};a,basic,main,that,can,be,used,to,launch,an,application,this,method,is,useful,when,application,sources,are,defined,via,a,literal,spring,main,sources,command,line,argument,p,most,developers,will,want,to,define,their,own,main,method,and,call,the,link,run,class,string,run,method,instead,param,args,command,line,arguments,throws,exception,if,the,application,cannot,be,started,see,spring,application,run,class,string,see,spring,application,run,class,string;public,static,void,main,string,args,throws,exception,spring,application,run,new,class,0,args
SpringApplication -> public static void main(String[] args) throws Exception;1540419762;A basic main that can be used to launch an application. This method is useful when_application sources are defined via a {@literal --spring.main.sources} command line_argument._<p>_Most developers will want to define their own main method and call the_{@link #run(Class, String...) run} method instead._@param args command line arguments_@throws Exception if the application cannot be started_@see SpringApplication#run(Class[], String[])_@see SpringApplication#run(Class, String...);public static void main(String[] args) throws Exception {_		SpringApplication.run(new Class<?>[0], args)__	};a,basic,main,that,can,be,used,to,launch,an,application,this,method,is,useful,when,application,sources,are,defined,via,a,literal,spring,main,sources,command,line,argument,p,most,developers,will,want,to,define,their,own,main,method,and,call,the,link,run,class,string,run,method,instead,param,args,command,line,arguments,throws,exception,if,the,application,cannot,be,started,see,spring,application,run,class,string,see,spring,application,run,class,string;public,static,void,main,string,args,throws,exception,spring,application,run,new,class,0,args
SpringApplication -> public static void main(String[] args) throws Exception;1541060131;A basic main that can be used to launch an application. This method is useful when_application sources are defined via a {@literal --spring.main.sources} command line_argument._<p>_Most developers will want to define their own main method and call the_{@link #run(Class, String...) run} method instead._@param args command line arguments_@throws Exception if the application cannot be started_@see SpringApplication#run(Class[], String[])_@see SpringApplication#run(Class, String...);public static void main(String[] args) throws Exception {_		SpringApplication.run(new Class<?>[0], args)__	};a,basic,main,that,can,be,used,to,launch,an,application,this,method,is,useful,when,application,sources,are,defined,via,a,literal,spring,main,sources,command,line,argument,p,most,developers,will,want,to,define,their,own,main,method,and,call,the,link,run,class,string,run,method,instead,param,args,command,line,arguments,throws,exception,if,the,application,cannot,be,started,see,spring,application,run,class,string,see,spring,application,run,class,string;public,static,void,main,string,args,throws,exception,spring,application,run,new,class,0,args
SpringApplication -> public static void main(String[] args) throws Exception;1546943477;A basic main that can be used to launch an application. This method is useful when_application sources are defined via a {@literal --spring.main.sources} command line_argument._<p>_Most developers will want to define their own main method and call the_{@link #run(Class, String...) run} method instead._@param args command line arguments_@throws Exception if the application cannot be started_@see SpringApplication#run(Class[], String[])_@see SpringApplication#run(Class, String...);public static void main(String[] args) throws Exception {_		SpringApplication.run(new Class<?>[0], args)__	};a,basic,main,that,can,be,used,to,launch,an,application,this,method,is,useful,when,application,sources,are,defined,via,a,literal,spring,main,sources,command,line,argument,p,most,developers,will,want,to,define,their,own,main,method,and,call,the,link,run,class,string,run,method,instead,param,args,command,line,arguments,throws,exception,if,the,application,cannot,be,started,see,spring,application,run,class,string,see,spring,application,run,class,string;public,static,void,main,string,args,throws,exception,spring,application,run,new,class,0,args
SpringApplication -> public static void main(String[] args) throws Exception;1549791353;A basic main that can be used to launch an application. This method is useful when_application sources are defined via a {@literal --spring.main.sources} command line_argument._<p>_Most developers will want to define their own main method and call the_{@link #run(Class, String...) run} method instead._@param args command line arguments_@throws Exception if the application cannot be started_@see SpringApplication#run(Class[], String[])_@see SpringApplication#run(Class, String...);public static void main(String[] args) throws Exception {_		SpringApplication.run(new Class<?>[0], args)__	};a,basic,main,that,can,be,used,to,launch,an,application,this,method,is,useful,when,application,sources,are,defined,via,a,literal,spring,main,sources,command,line,argument,p,most,developers,will,want,to,define,their,own,main,method,and,call,the,link,run,class,string,run,method,instead,param,args,command,line,arguments,throws,exception,if,the,application,cannot,be,started,see,spring,application,run,class,string,see,spring,application,run,class,string;public,static,void,main,string,args,throws,exception,spring,application,run,new,class,0,args
SpringApplication -> public static void main(String[] args) throws Exception;1550148109;A basic main that can be used to launch an application. This method is useful when_application sources are defined via a {@literal --spring.main.sources} command line_argument._<p>_Most developers will want to define their own main method and call the_{@link #run(Class, String...) run} method instead._@param args command line arguments_@throws Exception if the application cannot be started_@see SpringApplication#run(Class[], String[])_@see SpringApplication#run(Class, String...);public static void main(String[] args) throws Exception {_		SpringApplication.run(new Class<?>[0], args)__	};a,basic,main,that,can,be,used,to,launch,an,application,this,method,is,useful,when,application,sources,are,defined,via,a,literal,spring,main,sources,command,line,argument,p,most,developers,will,want,to,define,their,own,main,method,and,call,the,link,run,class,string,run,method,instead,param,args,command,line,arguments,throws,exception,if,the,application,cannot,be,started,see,spring,application,run,class,string,see,spring,application,run,class,string;public,static,void,main,string,args,throws,exception,spring,application,run,new,class,0,args
SpringApplication -> public static int exit(ApplicationContext context, 			ExitCodeGenerator... exitCodeGenerators);1507173536;Static helper that can be used to exit a {@link SpringApplication} and obtain a_code indicating success (0) or otherwise. Does not throw exceptions but should_print stack traces of any encountered. Applies the specified_{@link ExitCodeGenerator} in addition to any Spring beans that implement_{@link ExitCodeGenerator}. In the case of multiple exit codes the highest value_will be used (or if all values are negative, the lowest value will be used)_@param context the context to close if possible_@param exitCodeGenerators exist code generators_@return the outcome (0 if successful);public static int exit(ApplicationContext context,_			ExitCodeGenerator... exitCodeGenerators) {_		Assert.notNull(context, "Context must not be null")__		int exitCode = 0__		try {_			try {_				ExitCodeGenerators generators = new ExitCodeGenerators()__				Collection<ExitCodeGenerator> beans = context_						.getBeansOfType(ExitCodeGenerator.class).values()__				generators.addAll(exitCodeGenerators)__				generators.addAll(beans)__				exitCode = generators.getExitCode()__				if (exitCode != 0) {_					context.publishEvent(new ExitCodeEvent(context, exitCode))__				}_			}_			finally {_				close(context)__			}_		}_		catch (Exception ex) {_			ex.printStackTrace()__			exitCode = (exitCode == 0 ? 1 : exitCode)__		}_		return exitCode__	};static,helper,that,can,be,used,to,exit,a,link,spring,application,and,obtain,a,code,indicating,success,0,or,otherwise,does,not,throw,exceptions,but,should,print,stack,traces,of,any,encountered,applies,the,specified,link,exit,code,generator,in,addition,to,any,spring,beans,that,implement,link,exit,code,generator,in,the,case,of,multiple,exit,codes,the,highest,value,will,be,used,or,if,all,values,are,negative,the,lowest,value,will,be,used,param,context,the,context,to,close,if,possible,param,exit,code,generators,exist,code,generators,return,the,outcome,0,if,successful;public,static,int,exit,application,context,context,exit,code,generator,exit,code,generators,assert,not,null,context,context,must,not,be,null,int,exit,code,0,try,try,exit,code,generators,generators,new,exit,code,generators,collection,exit,code,generator,beans,context,get,beans,of,type,exit,code,generator,class,values,generators,add,all,exit,code,generators,generators,add,all,beans,exit,code,generators,get,exit,code,if,exit,code,0,context,publish,event,new,exit,code,event,context,exit,code,finally,close,context,catch,exception,ex,ex,print,stack,trace,exit,code,exit,code,0,1,exit,code,return,exit,code
SpringApplication -> public static int exit(ApplicationContext context, 			ExitCodeGenerator... exitCodeGenerators);1509381678;Static helper that can be used to exit a {@link SpringApplication} and obtain a_code indicating success (0) or otherwise. Does not throw exceptions but should_print stack traces of any encountered. Applies the specified_{@link ExitCodeGenerator} in addition to any Spring beans that implement_{@link ExitCodeGenerator}. In the case of multiple exit codes the highest value_will be used (or if all values are negative, the lowest value will be used)_@param context the context to close if possible_@param exitCodeGenerators exist code generators_@return the outcome (0 if successful);public static int exit(ApplicationContext context,_			ExitCodeGenerator... exitCodeGenerators) {_		Assert.notNull(context, "Context must not be null")__		int exitCode = 0__		try {_			try {_				ExitCodeGenerators generators = new ExitCodeGenerators()__				Collection<ExitCodeGenerator> beans = context_						.getBeansOfType(ExitCodeGenerator.class).values()__				generators.addAll(exitCodeGenerators)__				generators.addAll(beans)__				exitCode = generators.getExitCode()__				if (exitCode != 0) {_					context.publishEvent(new ExitCodeEvent(context, exitCode))__				}_			}_			finally {_				close(context)__			}_		}_		catch (Exception ex) {_			ex.printStackTrace()__			exitCode = (exitCode == 0 ? 1 : exitCode)__		}_		return exitCode__	};static,helper,that,can,be,used,to,exit,a,link,spring,application,and,obtain,a,code,indicating,success,0,or,otherwise,does,not,throw,exceptions,but,should,print,stack,traces,of,any,encountered,applies,the,specified,link,exit,code,generator,in,addition,to,any,spring,beans,that,implement,link,exit,code,generator,in,the,case,of,multiple,exit,codes,the,highest,value,will,be,used,or,if,all,values,are,negative,the,lowest,value,will,be,used,param,context,the,context,to,close,if,possible,param,exit,code,generators,exist,code,generators,return,the,outcome,0,if,successful;public,static,int,exit,application,context,context,exit,code,generator,exit,code,generators,assert,not,null,context,context,must,not,be,null,int,exit,code,0,try,try,exit,code,generators,generators,new,exit,code,generators,collection,exit,code,generator,beans,context,get,beans,of,type,exit,code,generator,class,values,generators,add,all,exit,code,generators,generators,add,all,beans,exit,code,generators,get,exit,code,if,exit,code,0,context,publish,event,new,exit,code,event,context,exit,code,finally,close,context,catch,exception,ex,ex,print,stack,trace,exit,code,exit,code,0,1,exit,code,return,exit,code
SpringApplication -> public static int exit(ApplicationContext context, 			ExitCodeGenerator... exitCodeGenerators);1510995225;Static helper that can be used to exit a {@link SpringApplication} and obtain a_code indicating success (0) or otherwise. Does not throw exceptions but should_print stack traces of any encountered. Applies the specified_{@link ExitCodeGenerator} in addition to any Spring beans that implement_{@link ExitCodeGenerator}. In the case of multiple exit codes the highest value_will be used (or if all values are negative, the lowest value will be used)_@param context the context to close if possible_@param exitCodeGenerators exist code generators_@return the outcome (0 if successful);public static int exit(ApplicationContext context,_			ExitCodeGenerator... exitCodeGenerators) {_		Assert.notNull(context, "Context must not be null")__		int exitCode = 0__		try {_			try {_				ExitCodeGenerators generators = new ExitCodeGenerators()__				Collection<ExitCodeGenerator> beans = context_						.getBeansOfType(ExitCodeGenerator.class).values()__				generators.addAll(exitCodeGenerators)__				generators.addAll(beans)__				exitCode = generators.getExitCode()__				if (exitCode != 0) {_					context.publishEvent(new ExitCodeEvent(context, exitCode))__				}_			}_			finally {_				close(context)__			}_		}_		catch (Exception ex) {_			ex.printStackTrace()__			exitCode = (exitCode == 0 ? 1 : exitCode)__		}_		return exitCode__	};static,helper,that,can,be,used,to,exit,a,link,spring,application,and,obtain,a,code,indicating,success,0,or,otherwise,does,not,throw,exceptions,but,should,print,stack,traces,of,any,encountered,applies,the,specified,link,exit,code,generator,in,addition,to,any,spring,beans,that,implement,link,exit,code,generator,in,the,case,of,multiple,exit,codes,the,highest,value,will,be,used,or,if,all,values,are,negative,the,lowest,value,will,be,used,param,context,the,context,to,close,if,possible,param,exit,code,generators,exist,code,generators,return,the,outcome,0,if,successful;public,static,int,exit,application,context,context,exit,code,generator,exit,code,generators,assert,not,null,context,context,must,not,be,null,int,exit,code,0,try,try,exit,code,generators,generators,new,exit,code,generators,collection,exit,code,generator,beans,context,get,beans,of,type,exit,code,generator,class,values,generators,add,all,exit,code,generators,generators,add,all,beans,exit,code,generators,get,exit,code,if,exit,code,0,context,publish,event,new,exit,code,event,context,exit,code,finally,close,context,catch,exception,ex,ex,print,stack,trace,exit,code,exit,code,0,1,exit,code,return,exit,code
SpringApplication -> public static int exit(ApplicationContext context, 			ExitCodeGenerator... exitCodeGenerators);1515670013;Static helper that can be used to exit a {@link SpringApplication} and obtain a_code indicating success (0) or otherwise. Does not throw exceptions but should_print stack traces of any encountered. Applies the specified_{@link ExitCodeGenerator} in addition to any Spring beans that implement_{@link ExitCodeGenerator}. In the case of multiple exit codes the highest value_will be used (or if all values are negative, the lowest value will be used)_@param context the context to close if possible_@param exitCodeGenerators exist code generators_@return the outcome (0 if successful);public static int exit(ApplicationContext context,_			ExitCodeGenerator... exitCodeGenerators) {_		Assert.notNull(context, "Context must not be null")__		int exitCode = 0__		try {_			try {_				ExitCodeGenerators generators = new ExitCodeGenerators()__				Collection<ExitCodeGenerator> beans = context_						.getBeansOfType(ExitCodeGenerator.class).values()__				generators.addAll(exitCodeGenerators)__				generators.addAll(beans)__				exitCode = generators.getExitCode()__				if (exitCode != 0) {_					context.publishEvent(new ExitCodeEvent(context, exitCode))__				}_			}_			finally {_				close(context)__			}_		}_		catch (Exception ex) {_			ex.printStackTrace()__			exitCode = (exitCode == 0 ? 1 : exitCode)__		}_		return exitCode__	};static,helper,that,can,be,used,to,exit,a,link,spring,application,and,obtain,a,code,indicating,success,0,or,otherwise,does,not,throw,exceptions,but,should,print,stack,traces,of,any,encountered,applies,the,specified,link,exit,code,generator,in,addition,to,any,spring,beans,that,implement,link,exit,code,generator,in,the,case,of,multiple,exit,codes,the,highest,value,will,be,used,or,if,all,values,are,negative,the,lowest,value,will,be,used,param,context,the,context,to,close,if,possible,param,exit,code,generators,exist,code,generators,return,the,outcome,0,if,successful;public,static,int,exit,application,context,context,exit,code,generator,exit,code,generators,assert,not,null,context,context,must,not,be,null,int,exit,code,0,try,try,exit,code,generators,generators,new,exit,code,generators,collection,exit,code,generator,beans,context,get,beans,of,type,exit,code,generator,class,values,generators,add,all,exit,code,generators,generators,add,all,beans,exit,code,generators,get,exit,code,if,exit,code,0,context,publish,event,new,exit,code,event,context,exit,code,finally,close,context,catch,exception,ex,ex,print,stack,trace,exit,code,exit,code,0,1,exit,code,return,exit,code
SpringApplication -> public static int exit(ApplicationContext context, 			ExitCodeGenerator... exitCodeGenerators);1519362690;Static helper that can be used to exit a {@link SpringApplication} and obtain a_code indicating success (0) or otherwise. Does not throw exceptions but should_print stack traces of any encountered. Applies the specified_{@link ExitCodeGenerator} in addition to any Spring beans that implement_{@link ExitCodeGenerator}. In the case of multiple exit codes the highest value_will be used (or if all values are negative, the lowest value will be used)_@param context the context to close if possible_@param exitCodeGenerators exist code generators_@return the outcome (0 if successful);public static int exit(ApplicationContext context,_			ExitCodeGenerator... exitCodeGenerators) {_		Assert.notNull(context, "Context must not be null")__		int exitCode = 0__		try {_			try {_				ExitCodeGenerators generators = new ExitCodeGenerators()__				Collection<ExitCodeGenerator> beans = context_						.getBeansOfType(ExitCodeGenerator.class).values()__				generators.addAll(exitCodeGenerators)__				generators.addAll(beans)__				exitCode = generators.getExitCode()__				if (exitCode != 0) {_					context.publishEvent(new ExitCodeEvent(context, exitCode))__				}_			}_			finally {_				close(context)__			}_		}_		catch (Exception ex) {_			ex.printStackTrace()__			exitCode = (exitCode == 0 ? 1 : exitCode)__		}_		return exitCode__	};static,helper,that,can,be,used,to,exit,a,link,spring,application,and,obtain,a,code,indicating,success,0,or,otherwise,does,not,throw,exceptions,but,should,print,stack,traces,of,any,encountered,applies,the,specified,link,exit,code,generator,in,addition,to,any,spring,beans,that,implement,link,exit,code,generator,in,the,case,of,multiple,exit,codes,the,highest,value,will,be,used,or,if,all,values,are,negative,the,lowest,value,will,be,used,param,context,the,context,to,close,if,possible,param,exit,code,generators,exist,code,generators,return,the,outcome,0,if,successful;public,static,int,exit,application,context,context,exit,code,generator,exit,code,generators,assert,not,null,context,context,must,not,be,null,int,exit,code,0,try,try,exit,code,generators,generators,new,exit,code,generators,collection,exit,code,generator,beans,context,get,beans,of,type,exit,code,generator,class,values,generators,add,all,exit,code,generators,generators,add,all,beans,exit,code,generators,get,exit,code,if,exit,code,0,context,publish,event,new,exit,code,event,context,exit,code,finally,close,context,catch,exception,ex,ex,print,stack,trace,exit,code,exit,code,0,1,exit,code,return,exit,code
SpringApplication -> public static int exit(ApplicationContext context, 			ExitCodeGenerator... exitCodeGenerators);1522251721;Static helper that can be used to exit a {@link SpringApplication} and obtain a_code indicating success (0) or otherwise. Does not throw exceptions but should_print stack traces of any encountered. Applies the specified_{@link ExitCodeGenerator} in addition to any Spring beans that implement_{@link ExitCodeGenerator}. In the case of multiple exit codes the highest value_will be used (or if all values are negative, the lowest value will be used)_@param context the context to close if possible_@param exitCodeGenerators exist code generators_@return the outcome (0 if successful);public static int exit(ApplicationContext context,_			ExitCodeGenerator... exitCodeGenerators) {_		Assert.notNull(context, "Context must not be null")__		int exitCode = 0__		try {_			try {_				ExitCodeGenerators generators = new ExitCodeGenerators()__				Collection<ExitCodeGenerator> beans = context_						.getBeansOfType(ExitCodeGenerator.class).values()__				generators.addAll(exitCodeGenerators)__				generators.addAll(beans)__				exitCode = generators.getExitCode()__				if (exitCode != 0) {_					context.publishEvent(new ExitCodeEvent(context, exitCode))__				}_			}_			finally {_				close(context)__			}_		}_		catch (Exception ex) {_			ex.printStackTrace()__			exitCode = (exitCode == 0 ? 1 : exitCode)__		}_		return exitCode__	};static,helper,that,can,be,used,to,exit,a,link,spring,application,and,obtain,a,code,indicating,success,0,or,otherwise,does,not,throw,exceptions,but,should,print,stack,traces,of,any,encountered,applies,the,specified,link,exit,code,generator,in,addition,to,any,spring,beans,that,implement,link,exit,code,generator,in,the,case,of,multiple,exit,codes,the,highest,value,will,be,used,or,if,all,values,are,negative,the,lowest,value,will,be,used,param,context,the,context,to,close,if,possible,param,exit,code,generators,exist,code,generators,return,the,outcome,0,if,successful;public,static,int,exit,application,context,context,exit,code,generator,exit,code,generators,assert,not,null,context,context,must,not,be,null,int,exit,code,0,try,try,exit,code,generators,generators,new,exit,code,generators,collection,exit,code,generator,beans,context,get,beans,of,type,exit,code,generator,class,values,generators,add,all,exit,code,generators,generators,add,all,beans,exit,code,generators,get,exit,code,if,exit,code,0,context,publish,event,new,exit,code,event,context,exit,code,finally,close,context,catch,exception,ex,ex,print,stack,trace,exit,code,exit,code,0,1,exit,code,return,exit,code
SpringApplication -> public static int exit(ApplicationContext context, 			ExitCodeGenerator... exitCodeGenerators);1525376698;Static helper that can be used to exit a {@link SpringApplication} and obtain a_code indicating success (0) or otherwise. Does not throw exceptions but should_print stack traces of any encountered. Applies the specified_{@link ExitCodeGenerator} in addition to any Spring beans that implement_{@link ExitCodeGenerator}. In the case of multiple exit codes the highest value_will be used (or if all values are negative, the lowest value will be used)_@param context the context to close if possible_@param exitCodeGenerators exist code generators_@return the outcome (0 if successful);public static int exit(ApplicationContext context,_			ExitCodeGenerator... exitCodeGenerators) {_		Assert.notNull(context, "Context must not be null")__		int exitCode = 0__		try {_			try {_				ExitCodeGenerators generators = new ExitCodeGenerators()__				Collection<ExitCodeGenerator> beans = context_						.getBeansOfType(ExitCodeGenerator.class).values()__				generators.addAll(exitCodeGenerators)__				generators.addAll(beans)__				exitCode = generators.getExitCode()__				if (exitCode != 0) {_					context.publishEvent(new ExitCodeEvent(context, exitCode))__				}_			}_			finally {_				close(context)__			}_		}_		catch (Exception ex) {_			ex.printStackTrace()__			exitCode = (exitCode != 0 ? exitCode : 1)__		}_		return exitCode__	};static,helper,that,can,be,used,to,exit,a,link,spring,application,and,obtain,a,code,indicating,success,0,or,otherwise,does,not,throw,exceptions,but,should,print,stack,traces,of,any,encountered,applies,the,specified,link,exit,code,generator,in,addition,to,any,spring,beans,that,implement,link,exit,code,generator,in,the,case,of,multiple,exit,codes,the,highest,value,will,be,used,or,if,all,values,are,negative,the,lowest,value,will,be,used,param,context,the,context,to,close,if,possible,param,exit,code,generators,exist,code,generators,return,the,outcome,0,if,successful;public,static,int,exit,application,context,context,exit,code,generator,exit,code,generators,assert,not,null,context,context,must,not,be,null,int,exit,code,0,try,try,exit,code,generators,generators,new,exit,code,generators,collection,exit,code,generator,beans,context,get,beans,of,type,exit,code,generator,class,values,generators,add,all,exit,code,generators,generators,add,all,beans,exit,code,generators,get,exit,code,if,exit,code,0,context,publish,event,new,exit,code,event,context,exit,code,finally,close,context,catch,exception,ex,ex,print,stack,trace,exit,code,exit,code,0,exit,code,1,return,exit,code
SpringApplication -> public static int exit(ApplicationContext context, 			ExitCodeGenerator... exitCodeGenerators);1525416882;Static helper that can be used to exit a {@link SpringApplication} and obtain a_code indicating success (0) or otherwise. Does not throw exceptions but should_print stack traces of any encountered. Applies the specified_{@link ExitCodeGenerator} in addition to any Spring beans that implement_{@link ExitCodeGenerator}. In the case of multiple exit codes the highest value_will be used (or if all values are negative, the lowest value will be used)_@param context the context to close if possible_@param exitCodeGenerators exist code generators_@return the outcome (0 if successful);public static int exit(ApplicationContext context,_			ExitCodeGenerator... exitCodeGenerators) {_		Assert.notNull(context, "Context must not be null")__		int exitCode = 0__		try {_			try {_				ExitCodeGenerators generators = new ExitCodeGenerators()__				Collection<ExitCodeGenerator> beans = context_						.getBeansOfType(ExitCodeGenerator.class).values()__				generators.addAll(exitCodeGenerators)__				generators.addAll(beans)__				exitCode = generators.getExitCode()__				if (exitCode != 0) {_					context.publishEvent(new ExitCodeEvent(context, exitCode))__				}_			}_			finally {_				close(context)__			}_		}_		catch (Exception ex) {_			ex.printStackTrace()__			exitCode = (exitCode != 0 ? exitCode : 1)__		}_		return exitCode__	};static,helper,that,can,be,used,to,exit,a,link,spring,application,and,obtain,a,code,indicating,success,0,or,otherwise,does,not,throw,exceptions,but,should,print,stack,traces,of,any,encountered,applies,the,specified,link,exit,code,generator,in,addition,to,any,spring,beans,that,implement,link,exit,code,generator,in,the,case,of,multiple,exit,codes,the,highest,value,will,be,used,or,if,all,values,are,negative,the,lowest,value,will,be,used,param,context,the,context,to,close,if,possible,param,exit,code,generators,exist,code,generators,return,the,outcome,0,if,successful;public,static,int,exit,application,context,context,exit,code,generator,exit,code,generators,assert,not,null,context,context,must,not,be,null,int,exit,code,0,try,try,exit,code,generators,generators,new,exit,code,generators,collection,exit,code,generator,beans,context,get,beans,of,type,exit,code,generator,class,values,generators,add,all,exit,code,generators,generators,add,all,beans,exit,code,generators,get,exit,code,if,exit,code,0,context,publish,event,new,exit,code,event,context,exit,code,finally,close,context,catch,exception,ex,ex,print,stack,trace,exit,code,exit,code,0,exit,code,1,return,exit,code
SpringApplication -> public static int exit(ApplicationContext context, 			ExitCodeGenerator... exitCodeGenerators);1526993305;Static helper that can be used to exit a {@link SpringApplication} and obtain a_code indicating success (0) or otherwise. Does not throw exceptions but should_print stack traces of any encountered. Applies the specified_{@link ExitCodeGenerator} in addition to any Spring beans that implement_{@link ExitCodeGenerator}. In the case of multiple exit codes the highest value_will be used (or if all values are negative, the lowest value will be used)_@param context the context to close if possible_@param exitCodeGenerators exist code generators_@return the outcome (0 if successful);public static int exit(ApplicationContext context,_			ExitCodeGenerator... exitCodeGenerators) {_		Assert.notNull(context, "Context must not be null")__		int exitCode = 0__		try {_			try {_				ExitCodeGenerators generators = new ExitCodeGenerators()__				Collection<ExitCodeGenerator> beans = context_						.getBeansOfType(ExitCodeGenerator.class).values()__				generators.addAll(exitCodeGenerators)__				generators.addAll(beans)__				exitCode = generators.getExitCode()__				if (exitCode != 0) {_					context.publishEvent(new ExitCodeEvent(context, exitCode))__				}_			}_			finally {_				close(context)__			}_		}_		catch (Exception ex) {_			ex.printStackTrace()__			exitCode = (exitCode != 0 ? exitCode : 1)__		}_		return exitCode__	};static,helper,that,can,be,used,to,exit,a,link,spring,application,and,obtain,a,code,indicating,success,0,or,otherwise,does,not,throw,exceptions,but,should,print,stack,traces,of,any,encountered,applies,the,specified,link,exit,code,generator,in,addition,to,any,spring,beans,that,implement,link,exit,code,generator,in,the,case,of,multiple,exit,codes,the,highest,value,will,be,used,or,if,all,values,are,negative,the,lowest,value,will,be,used,param,context,the,context,to,close,if,possible,param,exit,code,generators,exist,code,generators,return,the,outcome,0,if,successful;public,static,int,exit,application,context,context,exit,code,generator,exit,code,generators,assert,not,null,context,context,must,not,be,null,int,exit,code,0,try,try,exit,code,generators,generators,new,exit,code,generators,collection,exit,code,generator,beans,context,get,beans,of,type,exit,code,generator,class,values,generators,add,all,exit,code,generators,generators,add,all,beans,exit,code,generators,get,exit,code,if,exit,code,0,context,publish,event,new,exit,code,event,context,exit,code,finally,close,context,catch,exception,ex,ex,print,stack,trace,exit,code,exit,code,0,exit,code,1,return,exit,code
SpringApplication -> public static int exit(ApplicationContext context, 			ExitCodeGenerator... exitCodeGenerators);1529485904;Static helper that can be used to exit a {@link SpringApplication} and obtain a_code indicating success (0) or otherwise. Does not throw exceptions but should_print stack traces of any encountered. Applies the specified_{@link ExitCodeGenerator} in addition to any Spring beans that implement_{@link ExitCodeGenerator}. In the case of multiple exit codes the highest value_will be used (or if all values are negative, the lowest value will be used)_@param context the context to close if possible_@param exitCodeGenerators exist code generators_@return the outcome (0 if successful);public static int exit(ApplicationContext context,_			ExitCodeGenerator... exitCodeGenerators) {_		Assert.notNull(context, "Context must not be null")__		int exitCode = 0__		try {_			try {_				ExitCodeGenerators generators = new ExitCodeGenerators()__				Collection<ExitCodeGenerator> beans = context_						.getBeansOfType(ExitCodeGenerator.class).values()__				generators.addAll(exitCodeGenerators)__				generators.addAll(beans)__				exitCode = generators.getExitCode()__				if (exitCode != 0) {_					context.publishEvent(new ExitCodeEvent(context, exitCode))__				}_			}_			finally {_				close(context)__			}_		}_		catch (Exception ex) {_			ex.printStackTrace()__			exitCode = (exitCode != 0 ? exitCode : 1)__		}_		return exitCode__	};static,helper,that,can,be,used,to,exit,a,link,spring,application,and,obtain,a,code,indicating,success,0,or,otherwise,does,not,throw,exceptions,but,should,print,stack,traces,of,any,encountered,applies,the,specified,link,exit,code,generator,in,addition,to,any,spring,beans,that,implement,link,exit,code,generator,in,the,case,of,multiple,exit,codes,the,highest,value,will,be,used,or,if,all,values,are,negative,the,lowest,value,will,be,used,param,context,the,context,to,close,if,possible,param,exit,code,generators,exist,code,generators,return,the,outcome,0,if,successful;public,static,int,exit,application,context,context,exit,code,generator,exit,code,generators,assert,not,null,context,context,must,not,be,null,int,exit,code,0,try,try,exit,code,generators,generators,new,exit,code,generators,collection,exit,code,generator,beans,context,get,beans,of,type,exit,code,generator,class,values,generators,add,all,exit,code,generators,generators,add,all,beans,exit,code,generators,get,exit,code,if,exit,code,0,context,publish,event,new,exit,code,event,context,exit,code,finally,close,context,catch,exception,ex,ex,print,stack,trace,exit,code,exit,code,0,exit,code,1,return,exit,code
SpringApplication -> public static int exit(ApplicationContext context, 			ExitCodeGenerator... exitCodeGenerators);1531140616;Static helper that can be used to exit a {@link SpringApplication} and obtain a_code indicating success (0) or otherwise. Does not throw exceptions but should_print stack traces of any encountered. Applies the specified_{@link ExitCodeGenerator} in addition to any Spring beans that implement_{@link ExitCodeGenerator}. In the case of multiple exit codes the highest value_will be used (or if all values are negative, the lowest value will be used)_@param context the context to close if possible_@param exitCodeGenerators exist code generators_@return the outcome (0 if successful);public static int exit(ApplicationContext context,_			ExitCodeGenerator... exitCodeGenerators) {_		Assert.notNull(context, "Context must not be null")__		int exitCode = 0__		try {_			try {_				ExitCodeGenerators generators = new ExitCodeGenerators()__				Collection<ExitCodeGenerator> beans = context_						.getBeansOfType(ExitCodeGenerator.class).values()__				generators.addAll(exitCodeGenerators)__				generators.addAll(beans)__				exitCode = generators.getExitCode()__				if (exitCode != 0) {_					context.publishEvent(new ExitCodeEvent(context, exitCode))__				}_			}_			finally {_				close(context)__			}_		}_		catch (Exception ex) {_			ex.printStackTrace()__			exitCode = (exitCode != 0 ? exitCode : 1)__		}_		return exitCode__	};static,helper,that,can,be,used,to,exit,a,link,spring,application,and,obtain,a,code,indicating,success,0,or,otherwise,does,not,throw,exceptions,but,should,print,stack,traces,of,any,encountered,applies,the,specified,link,exit,code,generator,in,addition,to,any,spring,beans,that,implement,link,exit,code,generator,in,the,case,of,multiple,exit,codes,the,highest,value,will,be,used,or,if,all,values,are,negative,the,lowest,value,will,be,used,param,context,the,context,to,close,if,possible,param,exit,code,generators,exist,code,generators,return,the,outcome,0,if,successful;public,static,int,exit,application,context,context,exit,code,generator,exit,code,generators,assert,not,null,context,context,must,not,be,null,int,exit,code,0,try,try,exit,code,generators,generators,new,exit,code,generators,collection,exit,code,generator,beans,context,get,beans,of,type,exit,code,generator,class,values,generators,add,all,exit,code,generators,generators,add,all,beans,exit,code,generators,get,exit,code,if,exit,code,0,context,publish,event,new,exit,code,event,context,exit,code,finally,close,context,catch,exception,ex,ex,print,stack,trace,exit,code,exit,code,0,exit,code,1,return,exit,code
SpringApplication -> public static int exit(ApplicationContext context, 			ExitCodeGenerator... exitCodeGenerators);1531155529;Static helper that can be used to exit a {@link SpringApplication} and obtain a_code indicating success (0) or otherwise. Does not throw exceptions but should_print stack traces of any encountered. Applies the specified_{@link ExitCodeGenerator} in addition to any Spring beans that implement_{@link ExitCodeGenerator}. In the case of multiple exit codes the highest value_will be used (or if all values are negative, the lowest value will be used)_@param context the context to close if possible_@param exitCodeGenerators exist code generators_@return the outcome (0 if successful);public static int exit(ApplicationContext context,_			ExitCodeGenerator... exitCodeGenerators) {_		Assert.notNull(context, "Context must not be null")__		int exitCode = 0__		try {_			try {_				ExitCodeGenerators generators = new ExitCodeGenerators()__				Collection<ExitCodeGenerator> beans = context_						.getBeansOfType(ExitCodeGenerator.class).values()__				generators.addAll(exitCodeGenerators)__				generators.addAll(beans)__				exitCode = generators.getExitCode()__				if (exitCode != 0) {_					context.publishEvent(new ExitCodeEvent(context, exitCode))__				}_			}_			finally {_				close(context)__			}_		}_		catch (Exception ex) {_			ex.printStackTrace()__			exitCode = (exitCode != 0 ? exitCode : 1)__		}_		return exitCode__	};static,helper,that,can,be,used,to,exit,a,link,spring,application,and,obtain,a,code,indicating,success,0,or,otherwise,does,not,throw,exceptions,but,should,print,stack,traces,of,any,encountered,applies,the,specified,link,exit,code,generator,in,addition,to,any,spring,beans,that,implement,link,exit,code,generator,in,the,case,of,multiple,exit,codes,the,highest,value,will,be,used,or,if,all,values,are,negative,the,lowest,value,will,be,used,param,context,the,context,to,close,if,possible,param,exit,code,generators,exist,code,generators,return,the,outcome,0,if,successful;public,static,int,exit,application,context,context,exit,code,generator,exit,code,generators,assert,not,null,context,context,must,not,be,null,int,exit,code,0,try,try,exit,code,generators,generators,new,exit,code,generators,collection,exit,code,generator,beans,context,get,beans,of,type,exit,code,generator,class,values,generators,add,all,exit,code,generators,generators,add,all,beans,exit,code,generators,get,exit,code,if,exit,code,0,context,publish,event,new,exit,code,event,context,exit,code,finally,close,context,catch,exception,ex,ex,print,stack,trace,exit,code,exit,code,0,exit,code,1,return,exit,code
SpringApplication -> public static int exit(ApplicationContext context, 			ExitCodeGenerator... exitCodeGenerators);1531222098;Static helper that can be used to exit a {@link SpringApplication} and obtain a_code indicating success (0) or otherwise. Does not throw exceptions but should_print stack traces of any encountered. Applies the specified_{@link ExitCodeGenerator} in addition to any Spring beans that implement_{@link ExitCodeGenerator}. In the case of multiple exit codes the highest value_will be used (or if all values are negative, the lowest value will be used)_@param context the context to close if possible_@param exitCodeGenerators exist code generators_@return the outcome (0 if successful);public static int exit(ApplicationContext context,_			ExitCodeGenerator... exitCodeGenerators) {_		Assert.notNull(context, "Context must not be null")__		int exitCode = 0__		try {_			try {_				ExitCodeGenerators generators = new ExitCodeGenerators()__				Collection<ExitCodeGenerator> beans = context_						.getBeansOfType(ExitCodeGenerator.class).values()__				generators.addAll(exitCodeGenerators)__				generators.addAll(beans)__				exitCode = generators.getExitCode()__				if (exitCode != 0) {_					context.publishEvent(new ExitCodeEvent(context, exitCode))__				}_			}_			finally {_				close(context)__			}_		}_		catch (Exception ex) {_			ex.printStackTrace()__			exitCode = (exitCode != 0 ? exitCode : 1)__		}_		return exitCode__	};static,helper,that,can,be,used,to,exit,a,link,spring,application,and,obtain,a,code,indicating,success,0,or,otherwise,does,not,throw,exceptions,but,should,print,stack,traces,of,any,encountered,applies,the,specified,link,exit,code,generator,in,addition,to,any,spring,beans,that,implement,link,exit,code,generator,in,the,case,of,multiple,exit,codes,the,highest,value,will,be,used,or,if,all,values,are,negative,the,lowest,value,will,be,used,param,context,the,context,to,close,if,possible,param,exit,code,generators,exist,code,generators,return,the,outcome,0,if,successful;public,static,int,exit,application,context,context,exit,code,generator,exit,code,generators,assert,not,null,context,context,must,not,be,null,int,exit,code,0,try,try,exit,code,generators,generators,new,exit,code,generators,collection,exit,code,generator,beans,context,get,beans,of,type,exit,code,generator,class,values,generators,add,all,exit,code,generators,generators,add,all,beans,exit,code,generators,get,exit,code,if,exit,code,0,context,publish,event,new,exit,code,event,context,exit,code,finally,close,context,catch,exception,ex,ex,print,stack,trace,exit,code,exit,code,0,exit,code,1,return,exit,code
SpringApplication -> public static int exit(ApplicationContext context, 			ExitCodeGenerator... exitCodeGenerators);1532738143;Static helper that can be used to exit a {@link SpringApplication} and obtain a_code indicating success (0) or otherwise. Does not throw exceptions but should_print stack traces of any encountered. Applies the specified_{@link ExitCodeGenerator} in addition to any Spring beans that implement_{@link ExitCodeGenerator}. In the case of multiple exit codes the highest value_will be used (or if all values are negative, the lowest value will be used)_@param context the context to close if possible_@param exitCodeGenerators exist code generators_@return the outcome (0 if successful);public static int exit(ApplicationContext context,_			ExitCodeGenerator... exitCodeGenerators) {_		Assert.notNull(context, "Context must not be null")__		int exitCode = 0__		try {_			try {_				ExitCodeGenerators generators = new ExitCodeGenerators()__				Collection<ExitCodeGenerator> beans = context_						.getBeansOfType(ExitCodeGenerator.class).values()__				generators.addAll(exitCodeGenerators)__				generators.addAll(beans)__				exitCode = generators.getExitCode()__				if (exitCode != 0) {_					context.publishEvent(new ExitCodeEvent(context, exitCode))__				}_			}_			finally {_				close(context)__			}_		}_		catch (Exception ex) {_			ex.printStackTrace()__			exitCode = (exitCode != 0) ? exitCode : 1__		}_		return exitCode__	};static,helper,that,can,be,used,to,exit,a,link,spring,application,and,obtain,a,code,indicating,success,0,or,otherwise,does,not,throw,exceptions,but,should,print,stack,traces,of,any,encountered,applies,the,specified,link,exit,code,generator,in,addition,to,any,spring,beans,that,implement,link,exit,code,generator,in,the,case,of,multiple,exit,codes,the,highest,value,will,be,used,or,if,all,values,are,negative,the,lowest,value,will,be,used,param,context,the,context,to,close,if,possible,param,exit,code,generators,exist,code,generators,return,the,outcome,0,if,successful;public,static,int,exit,application,context,context,exit,code,generator,exit,code,generators,assert,not,null,context,context,must,not,be,null,int,exit,code,0,try,try,exit,code,generators,generators,new,exit,code,generators,collection,exit,code,generator,beans,context,get,beans,of,type,exit,code,generator,class,values,generators,add,all,exit,code,generators,generators,add,all,beans,exit,code,generators,get,exit,code,if,exit,code,0,context,publish,event,new,exit,code,event,context,exit,code,finally,close,context,catch,exception,ex,ex,print,stack,trace,exit,code,exit,code,0,exit,code,1,return,exit,code
SpringApplication -> public static int exit(ApplicationContext context, 			ExitCodeGenerator... exitCodeGenerators);1534188228;Static helper that can be used to exit a {@link SpringApplication} and obtain a_code indicating success (0) or otherwise. Does not throw exceptions but should_print stack traces of any encountered. Applies the specified_{@link ExitCodeGenerator} in addition to any Spring beans that implement_{@link ExitCodeGenerator}. In the case of multiple exit codes the highest value_will be used (or if all values are negative, the lowest value will be used)_@param context the context to close if possible_@param exitCodeGenerators exist code generators_@return the outcome (0 if successful);public static int exit(ApplicationContext context,_			ExitCodeGenerator... exitCodeGenerators) {_		Assert.notNull(context, "Context must not be null")__		int exitCode = 0__		try {_			try {_				ExitCodeGenerators generators = new ExitCodeGenerators()__				Collection<ExitCodeGenerator> beans = context_						.getBeansOfType(ExitCodeGenerator.class).values()__				generators.addAll(exitCodeGenerators)__				generators.addAll(beans)__				exitCode = generators.getExitCode()__				if (exitCode != 0) {_					context.publishEvent(new ExitCodeEvent(context, exitCode))__				}_			}_			finally {_				close(context)__			}_		}_		catch (Exception ex) {_			ex.printStackTrace()__			exitCode = (exitCode != 0) ? exitCode : 1__		}_		return exitCode__	};static,helper,that,can,be,used,to,exit,a,link,spring,application,and,obtain,a,code,indicating,success,0,or,otherwise,does,not,throw,exceptions,but,should,print,stack,traces,of,any,encountered,applies,the,specified,link,exit,code,generator,in,addition,to,any,spring,beans,that,implement,link,exit,code,generator,in,the,case,of,multiple,exit,codes,the,highest,value,will,be,used,or,if,all,values,are,negative,the,lowest,value,will,be,used,param,context,the,context,to,close,if,possible,param,exit,code,generators,exist,code,generators,return,the,outcome,0,if,successful;public,static,int,exit,application,context,context,exit,code,generator,exit,code,generators,assert,not,null,context,context,must,not,be,null,int,exit,code,0,try,try,exit,code,generators,generators,new,exit,code,generators,collection,exit,code,generator,beans,context,get,beans,of,type,exit,code,generator,class,values,generators,add,all,exit,code,generators,generators,add,all,beans,exit,code,generators,get,exit,code,if,exit,code,0,context,publish,event,new,exit,code,event,context,exit,code,finally,close,context,catch,exception,ex,ex,print,stack,trace,exit,code,exit,code,0,exit,code,1,return,exit,code
SpringApplication -> public static int exit(ApplicationContext context, 			ExitCodeGenerator... exitCodeGenerators);1535104170;Static helper that can be used to exit a {@link SpringApplication} and obtain a_code indicating success (0) or otherwise. Does not throw exceptions but should_print stack traces of any encountered. Applies the specified_{@link ExitCodeGenerator} in addition to any Spring beans that implement_{@link ExitCodeGenerator}. In the case of multiple exit codes the highest value_will be used (or if all values are negative, the lowest value will be used)_@param context the context to close if possible_@param exitCodeGenerators exist code generators_@return the outcome (0 if successful);public static int exit(ApplicationContext context,_			ExitCodeGenerator... exitCodeGenerators) {_		Assert.notNull(context, "Context must not be null")__		int exitCode = 0__		try {_			try {_				ExitCodeGenerators generators = new ExitCodeGenerators()__				Collection<ExitCodeGenerator> beans = context_						.getBeansOfType(ExitCodeGenerator.class).values()__				generators.addAll(exitCodeGenerators)__				generators.addAll(beans)__				exitCode = generators.getExitCode()__				if (exitCode != 0) {_					context.publishEvent(new ExitCodeEvent(context, exitCode))__				}_			}_			finally {_				close(context)__			}_		}_		catch (Exception ex) {_			ex.printStackTrace()__			exitCode = (exitCode != 0) ? exitCode : 1__		}_		return exitCode__	};static,helper,that,can,be,used,to,exit,a,link,spring,application,and,obtain,a,code,indicating,success,0,or,otherwise,does,not,throw,exceptions,but,should,print,stack,traces,of,any,encountered,applies,the,specified,link,exit,code,generator,in,addition,to,any,spring,beans,that,implement,link,exit,code,generator,in,the,case,of,multiple,exit,codes,the,highest,value,will,be,used,or,if,all,values,are,negative,the,lowest,value,will,be,used,param,context,the,context,to,close,if,possible,param,exit,code,generators,exist,code,generators,return,the,outcome,0,if,successful;public,static,int,exit,application,context,context,exit,code,generator,exit,code,generators,assert,not,null,context,context,must,not,be,null,int,exit,code,0,try,try,exit,code,generators,generators,new,exit,code,generators,collection,exit,code,generator,beans,context,get,beans,of,type,exit,code,generator,class,values,generators,add,all,exit,code,generators,generators,add,all,beans,exit,code,generators,get,exit,code,if,exit,code,0,context,publish,event,new,exit,code,event,context,exit,code,finally,close,context,catch,exception,ex,ex,print,stack,trace,exit,code,exit,code,0,exit,code,1,return,exit,code
SpringApplication -> public static int exit(ApplicationContext context, 			ExitCodeGenerator... exitCodeGenerators);1536701067;Static helper that can be used to exit a {@link SpringApplication} and obtain a_code indicating success (0) or otherwise. Does not throw exceptions but should_print stack traces of any encountered. Applies the specified_{@link ExitCodeGenerator} in addition to any Spring beans that implement_{@link ExitCodeGenerator}. In the case of multiple exit codes the highest value_will be used (or if all values are negative, the lowest value will be used)_@param context the context to close if possible_@param exitCodeGenerators exist code generators_@return the outcome (0 if successful);public static int exit(ApplicationContext context,_			ExitCodeGenerator... exitCodeGenerators) {_		Assert.notNull(context, "Context must not be null")__		int exitCode = 0__		try {_			try {_				ExitCodeGenerators generators = new ExitCodeGenerators()__				Collection<ExitCodeGenerator> beans = context_						.getBeansOfType(ExitCodeGenerator.class).values()__				generators.addAll(exitCodeGenerators)__				generators.addAll(beans)__				exitCode = generators.getExitCode()__				if (exitCode != 0) {_					context.publishEvent(new ExitCodeEvent(context, exitCode))__				}_			}_			finally {_				close(context)__			}_		}_		catch (Exception ex) {_			ex.printStackTrace()__			exitCode = (exitCode != 0) ? exitCode : 1__		}_		return exitCode__	};static,helper,that,can,be,used,to,exit,a,link,spring,application,and,obtain,a,code,indicating,success,0,or,otherwise,does,not,throw,exceptions,but,should,print,stack,traces,of,any,encountered,applies,the,specified,link,exit,code,generator,in,addition,to,any,spring,beans,that,implement,link,exit,code,generator,in,the,case,of,multiple,exit,codes,the,highest,value,will,be,used,or,if,all,values,are,negative,the,lowest,value,will,be,used,param,context,the,context,to,close,if,possible,param,exit,code,generators,exist,code,generators,return,the,outcome,0,if,successful;public,static,int,exit,application,context,context,exit,code,generator,exit,code,generators,assert,not,null,context,context,must,not,be,null,int,exit,code,0,try,try,exit,code,generators,generators,new,exit,code,generators,collection,exit,code,generator,beans,context,get,beans,of,type,exit,code,generator,class,values,generators,add,all,exit,code,generators,generators,add,all,beans,exit,code,generators,get,exit,code,if,exit,code,0,context,publish,event,new,exit,code,event,context,exit,code,finally,close,context,catch,exception,ex,ex,print,stack,trace,exit,code,exit,code,0,exit,code,1,return,exit,code
SpringApplication -> public static int exit(ApplicationContext context, 			ExitCodeGenerator... exitCodeGenerators);1538570355;Static helper that can be used to exit a {@link SpringApplication} and obtain a_code indicating success (0) or otherwise. Does not throw exceptions but should_print stack traces of any encountered. Applies the specified_{@link ExitCodeGenerator} in addition to any Spring beans that implement_{@link ExitCodeGenerator}. In the case of multiple exit codes the highest value_will be used (or if all values are negative, the lowest value will be used)_@param context the context to close if possible_@param exitCodeGenerators exist code generators_@return the outcome (0 if successful);public static int exit(ApplicationContext context,_			ExitCodeGenerator... exitCodeGenerators) {_		Assert.notNull(context, "Context must not be null")__		int exitCode = 0__		try {_			try {_				ExitCodeGenerators generators = new ExitCodeGenerators()__				Collection<ExitCodeGenerator> beans = context_						.getBeansOfType(ExitCodeGenerator.class).values()__				generators.addAll(exitCodeGenerators)__				generators.addAll(beans)__				exitCode = generators.getExitCode()__				if (exitCode != 0) {_					context.publishEvent(new ExitCodeEvent(context, exitCode))__				}_			}_			finally {_				close(context)__			}_		}_		catch (Exception ex) {_			ex.printStackTrace()__			exitCode = (exitCode != 0) ? exitCode : 1__		}_		return exitCode__	};static,helper,that,can,be,used,to,exit,a,link,spring,application,and,obtain,a,code,indicating,success,0,or,otherwise,does,not,throw,exceptions,but,should,print,stack,traces,of,any,encountered,applies,the,specified,link,exit,code,generator,in,addition,to,any,spring,beans,that,implement,link,exit,code,generator,in,the,case,of,multiple,exit,codes,the,highest,value,will,be,used,or,if,all,values,are,negative,the,lowest,value,will,be,used,param,context,the,context,to,close,if,possible,param,exit,code,generators,exist,code,generators,return,the,outcome,0,if,successful;public,static,int,exit,application,context,context,exit,code,generator,exit,code,generators,assert,not,null,context,context,must,not,be,null,int,exit,code,0,try,try,exit,code,generators,generators,new,exit,code,generators,collection,exit,code,generator,beans,context,get,beans,of,type,exit,code,generator,class,values,generators,add,all,exit,code,generators,generators,add,all,beans,exit,code,generators,get,exit,code,if,exit,code,0,context,publish,event,new,exit,code,event,context,exit,code,finally,close,context,catch,exception,ex,ex,print,stack,trace,exit,code,exit,code,0,exit,code,1,return,exit,code
SpringApplication -> public static int exit(ApplicationContext context, 			ExitCodeGenerator... exitCodeGenerators);1538707540;Static helper that can be used to exit a {@link SpringApplication} and obtain a_code indicating success (0) or otherwise. Does not throw exceptions but should_print stack traces of any encountered. Applies the specified_{@link ExitCodeGenerator} in addition to any Spring beans that implement_{@link ExitCodeGenerator}. In the case of multiple exit codes the highest value_will be used (or if all values are negative, the lowest value will be used)_@param context the context to close if possible_@param exitCodeGenerators exist code generators_@return the outcome (0 if successful);public static int exit(ApplicationContext context,_			ExitCodeGenerator... exitCodeGenerators) {_		Assert.notNull(context, "Context must not be null")__		int exitCode = 0__		try {_			try {_				ExitCodeGenerators generators = new ExitCodeGenerators()__				Collection<ExitCodeGenerator> beans = context_						.getBeansOfType(ExitCodeGenerator.class).values()__				generators.addAll(exitCodeGenerators)__				generators.addAll(beans)__				exitCode = generators.getExitCode()__				if (exitCode != 0) {_					context.publishEvent(new ExitCodeEvent(context, exitCode))__				}_			}_			finally {_				close(context)__			}_		}_		catch (Exception ex) {_			ex.printStackTrace()__			exitCode = (exitCode != 0) ? exitCode : 1__		}_		return exitCode__	};static,helper,that,can,be,used,to,exit,a,link,spring,application,and,obtain,a,code,indicating,success,0,or,otherwise,does,not,throw,exceptions,but,should,print,stack,traces,of,any,encountered,applies,the,specified,link,exit,code,generator,in,addition,to,any,spring,beans,that,implement,link,exit,code,generator,in,the,case,of,multiple,exit,codes,the,highest,value,will,be,used,or,if,all,values,are,negative,the,lowest,value,will,be,used,param,context,the,context,to,close,if,possible,param,exit,code,generators,exist,code,generators,return,the,outcome,0,if,successful;public,static,int,exit,application,context,context,exit,code,generator,exit,code,generators,assert,not,null,context,context,must,not,be,null,int,exit,code,0,try,try,exit,code,generators,generators,new,exit,code,generators,collection,exit,code,generator,beans,context,get,beans,of,type,exit,code,generator,class,values,generators,add,all,exit,code,generators,generators,add,all,beans,exit,code,generators,get,exit,code,if,exit,code,0,context,publish,event,new,exit,code,event,context,exit,code,finally,close,context,catch,exception,ex,ex,print,stack,trace,exit,code,exit,code,0,exit,code,1,return,exit,code
SpringApplication -> public static int exit(ApplicationContext context, 			ExitCodeGenerator... exitCodeGenerators);1538750610;Static helper that can be used to exit a {@link SpringApplication} and obtain a_code indicating success (0) or otherwise. Does not throw exceptions but should_print stack traces of any encountered. Applies the specified_{@link ExitCodeGenerator} in addition to any Spring beans that implement_{@link ExitCodeGenerator}. In the case of multiple exit codes the highest value_will be used (or if all values are negative, the lowest value will be used)_@param context the context to close if possible_@param exitCodeGenerators exist code generators_@return the outcome (0 if successful);public static int exit(ApplicationContext context,_			ExitCodeGenerator... exitCodeGenerators) {_		Assert.notNull(context, "Context must not be null")__		int exitCode = 0__		try {_			try {_				ExitCodeGenerators generators = new ExitCodeGenerators()__				Collection<ExitCodeGenerator> beans = context_						.getBeansOfType(ExitCodeGenerator.class).values()__				generators.addAll(exitCodeGenerators)__				generators.addAll(beans)__				exitCode = generators.getExitCode()__				if (exitCode != 0) {_					context.publishEvent(new ExitCodeEvent(context, exitCode))__				}_			}_			finally {_				close(context)__			}_		}_		catch (Exception ex) {_			ex.printStackTrace()__			exitCode = (exitCode != 0) ? exitCode : 1__		}_		return exitCode__	};static,helper,that,can,be,used,to,exit,a,link,spring,application,and,obtain,a,code,indicating,success,0,or,otherwise,does,not,throw,exceptions,but,should,print,stack,traces,of,any,encountered,applies,the,specified,link,exit,code,generator,in,addition,to,any,spring,beans,that,implement,link,exit,code,generator,in,the,case,of,multiple,exit,codes,the,highest,value,will,be,used,or,if,all,values,are,negative,the,lowest,value,will,be,used,param,context,the,context,to,close,if,possible,param,exit,code,generators,exist,code,generators,return,the,outcome,0,if,successful;public,static,int,exit,application,context,context,exit,code,generator,exit,code,generators,assert,not,null,context,context,must,not,be,null,int,exit,code,0,try,try,exit,code,generators,generators,new,exit,code,generators,collection,exit,code,generator,beans,context,get,beans,of,type,exit,code,generator,class,values,generators,add,all,exit,code,generators,generators,add,all,beans,exit,code,generators,get,exit,code,if,exit,code,0,context,publish,event,new,exit,code,event,context,exit,code,finally,close,context,catch,exception,ex,ex,print,stack,trace,exit,code,exit,code,0,exit,code,1,return,exit,code
SpringApplication -> public static int exit(ApplicationContext context, 			ExitCodeGenerator... exitCodeGenerators);1538771652;Static helper that can be used to exit a {@link SpringApplication} and obtain a_code indicating success (0) or otherwise. Does not throw exceptions but should_print stack traces of any encountered. Applies the specified_{@link ExitCodeGenerator} in addition to any Spring beans that implement_{@link ExitCodeGenerator}. In the case of multiple exit codes the highest value_will be used (or if all values are negative, the lowest value will be used)_@param context the context to close if possible_@param exitCodeGenerators exist code generators_@return the outcome (0 if successful);public static int exit(ApplicationContext context,_			ExitCodeGenerator... exitCodeGenerators) {_		Assert.notNull(context, "Context must not be null")__		int exitCode = 0__		try {_			try {_				ExitCodeGenerators generators = new ExitCodeGenerators()__				Collection<ExitCodeGenerator> beans = context_						.getBeansOfType(ExitCodeGenerator.class).values()__				generators.addAll(exitCodeGenerators)__				generators.addAll(beans)__				exitCode = generators.getExitCode()__				if (exitCode != 0) {_					context.publishEvent(new ExitCodeEvent(context, exitCode))__				}_			}_			finally {_				close(context)__			}_		}_		catch (Exception ex) {_			ex.printStackTrace()__			exitCode = (exitCode != 0) ? exitCode : 1__		}_		return exitCode__	};static,helper,that,can,be,used,to,exit,a,link,spring,application,and,obtain,a,code,indicating,success,0,or,otherwise,does,not,throw,exceptions,but,should,print,stack,traces,of,any,encountered,applies,the,specified,link,exit,code,generator,in,addition,to,any,spring,beans,that,implement,link,exit,code,generator,in,the,case,of,multiple,exit,codes,the,highest,value,will,be,used,or,if,all,values,are,negative,the,lowest,value,will,be,used,param,context,the,context,to,close,if,possible,param,exit,code,generators,exist,code,generators,return,the,outcome,0,if,successful;public,static,int,exit,application,context,context,exit,code,generator,exit,code,generators,assert,not,null,context,context,must,not,be,null,int,exit,code,0,try,try,exit,code,generators,generators,new,exit,code,generators,collection,exit,code,generator,beans,context,get,beans,of,type,exit,code,generator,class,values,generators,add,all,exit,code,generators,generators,add,all,beans,exit,code,generators,get,exit,code,if,exit,code,0,context,publish,event,new,exit,code,event,context,exit,code,finally,close,context,catch,exception,ex,ex,print,stack,trace,exit,code,exit,code,0,exit,code,1,return,exit,code
SpringApplication -> public static int exit(ApplicationContext context, 			ExitCodeGenerator... exitCodeGenerators);1540419762;Static helper that can be used to exit a {@link SpringApplication} and obtain a_code indicating success (0) or otherwise. Does not throw exceptions but should_print stack traces of any encountered. Applies the specified_{@link ExitCodeGenerator} in addition to any Spring beans that implement_{@link ExitCodeGenerator}. In the case of multiple exit codes the highest value_will be used (or if all values are negative, the lowest value will be used)_@param context the context to close if possible_@param exitCodeGenerators exist code generators_@return the outcome (0 if successful);public static int exit(ApplicationContext context,_			ExitCodeGenerator... exitCodeGenerators) {_		Assert.notNull(context, "Context must not be null")__		int exitCode = 0__		try {_			try {_				ExitCodeGenerators generators = new ExitCodeGenerators()__				Collection<ExitCodeGenerator> beans = context_						.getBeansOfType(ExitCodeGenerator.class).values()__				generators.addAll(exitCodeGenerators)__				generators.addAll(beans)__				exitCode = generators.getExitCode()__				if (exitCode != 0) {_					context.publishEvent(new ExitCodeEvent(context, exitCode))__				}_			}_			finally {_				close(context)__			}_		}_		catch (Exception ex) {_			ex.printStackTrace()__			exitCode = (exitCode != 0) ? exitCode : 1__		}_		return exitCode__	};static,helper,that,can,be,used,to,exit,a,link,spring,application,and,obtain,a,code,indicating,success,0,or,otherwise,does,not,throw,exceptions,but,should,print,stack,traces,of,any,encountered,applies,the,specified,link,exit,code,generator,in,addition,to,any,spring,beans,that,implement,link,exit,code,generator,in,the,case,of,multiple,exit,codes,the,highest,value,will,be,used,or,if,all,values,are,negative,the,lowest,value,will,be,used,param,context,the,context,to,close,if,possible,param,exit,code,generators,exist,code,generators,return,the,outcome,0,if,successful;public,static,int,exit,application,context,context,exit,code,generator,exit,code,generators,assert,not,null,context,context,must,not,be,null,int,exit,code,0,try,try,exit,code,generators,generators,new,exit,code,generators,collection,exit,code,generator,beans,context,get,beans,of,type,exit,code,generator,class,values,generators,add,all,exit,code,generators,generators,add,all,beans,exit,code,generators,get,exit,code,if,exit,code,0,context,publish,event,new,exit,code,event,context,exit,code,finally,close,context,catch,exception,ex,ex,print,stack,trace,exit,code,exit,code,0,exit,code,1,return,exit,code
SpringApplication -> public static int exit(ApplicationContext context, 			ExitCodeGenerator... exitCodeGenerators);1541060131;Static helper that can be used to exit a {@link SpringApplication} and obtain a_code indicating success (0) or otherwise. Does not throw exceptions but should_print stack traces of any encountered. Applies the specified_{@link ExitCodeGenerator} in addition to any Spring beans that implement_{@link ExitCodeGenerator}. In the case of multiple exit codes the highest value_will be used (or if all values are negative, the lowest value will be used)_@param context the context to close if possible_@param exitCodeGenerators exist code generators_@return the outcome (0 if successful);public static int exit(ApplicationContext context,_			ExitCodeGenerator... exitCodeGenerators) {_		Assert.notNull(context, "Context must not be null")__		int exitCode = 0__		try {_			try {_				ExitCodeGenerators generators = new ExitCodeGenerators()__				Collection<ExitCodeGenerator> beans = context_						.getBeansOfType(ExitCodeGenerator.class).values()__				generators.addAll(exitCodeGenerators)__				generators.addAll(beans)__				exitCode = generators.getExitCode()__				if (exitCode != 0) {_					context.publishEvent(new ExitCodeEvent(context, exitCode))__				}_			}_			finally {_				close(context)__			}_		}_		catch (Exception ex) {_			ex.printStackTrace()__			exitCode = (exitCode != 0) ? exitCode : 1__		}_		return exitCode__	};static,helper,that,can,be,used,to,exit,a,link,spring,application,and,obtain,a,code,indicating,success,0,or,otherwise,does,not,throw,exceptions,but,should,print,stack,traces,of,any,encountered,applies,the,specified,link,exit,code,generator,in,addition,to,any,spring,beans,that,implement,link,exit,code,generator,in,the,case,of,multiple,exit,codes,the,highest,value,will,be,used,or,if,all,values,are,negative,the,lowest,value,will,be,used,param,context,the,context,to,close,if,possible,param,exit,code,generators,exist,code,generators,return,the,outcome,0,if,successful;public,static,int,exit,application,context,context,exit,code,generator,exit,code,generators,assert,not,null,context,context,must,not,be,null,int,exit,code,0,try,try,exit,code,generators,generators,new,exit,code,generators,collection,exit,code,generator,beans,context,get,beans,of,type,exit,code,generator,class,values,generators,add,all,exit,code,generators,generators,add,all,beans,exit,code,generators,get,exit,code,if,exit,code,0,context,publish,event,new,exit,code,event,context,exit,code,finally,close,context,catch,exception,ex,ex,print,stack,trace,exit,code,exit,code,0,exit,code,1,return,exit,code
SpringApplication -> public static int exit(ApplicationContext context, 			ExitCodeGenerator... exitCodeGenerators);1546943477;Static helper that can be used to exit a {@link SpringApplication} and obtain a_code indicating success (0) or otherwise. Does not throw exceptions but should_print stack traces of any encountered. Applies the specified_{@link ExitCodeGenerator} in addition to any Spring beans that implement_{@link ExitCodeGenerator}. In the case of multiple exit codes the highest value_will be used (or if all values are negative, the lowest value will be used)_@param context the context to close if possible_@param exitCodeGenerators exist code generators_@return the outcome (0 if successful);public static int exit(ApplicationContext context,_			ExitCodeGenerator... exitCodeGenerators) {_		Assert.notNull(context, "Context must not be null")__		int exitCode = 0__		try {_			try {_				ExitCodeGenerators generators = new ExitCodeGenerators()__				Collection<ExitCodeGenerator> beans = context_						.getBeansOfType(ExitCodeGenerator.class).values()__				generators.addAll(exitCodeGenerators)__				generators.addAll(beans)__				exitCode = generators.getExitCode()__				if (exitCode != 0) {_					context.publishEvent(new ExitCodeEvent(context, exitCode))__				}_			}_			finally {_				close(context)__			}_		}_		catch (Exception ex) {_			ex.printStackTrace()__			exitCode = (exitCode != 0) ? exitCode : 1__		}_		return exitCode__	};static,helper,that,can,be,used,to,exit,a,link,spring,application,and,obtain,a,code,indicating,success,0,or,otherwise,does,not,throw,exceptions,but,should,print,stack,traces,of,any,encountered,applies,the,specified,link,exit,code,generator,in,addition,to,any,spring,beans,that,implement,link,exit,code,generator,in,the,case,of,multiple,exit,codes,the,highest,value,will,be,used,or,if,all,values,are,negative,the,lowest,value,will,be,used,param,context,the,context,to,close,if,possible,param,exit,code,generators,exist,code,generators,return,the,outcome,0,if,successful;public,static,int,exit,application,context,context,exit,code,generator,exit,code,generators,assert,not,null,context,context,must,not,be,null,int,exit,code,0,try,try,exit,code,generators,generators,new,exit,code,generators,collection,exit,code,generator,beans,context,get,beans,of,type,exit,code,generator,class,values,generators,add,all,exit,code,generators,generators,add,all,beans,exit,code,generators,get,exit,code,if,exit,code,0,context,publish,event,new,exit,code,event,context,exit,code,finally,close,context,catch,exception,ex,ex,print,stack,trace,exit,code,exit,code,0,exit,code,1,return,exit,code
SpringApplication -> public static int exit(ApplicationContext context, 			ExitCodeGenerator... exitCodeGenerators);1549791353;Static helper that can be used to exit a {@link SpringApplication} and obtain a_code indicating success (0) or otherwise. Does not throw exceptions but should_print stack traces of any encountered. Applies the specified_{@link ExitCodeGenerator} in addition to any Spring beans that implement_{@link ExitCodeGenerator}. In the case of multiple exit codes the highest value_will be used (or if all values are negative, the lowest value will be used)_@param context the context to close if possible_@param exitCodeGenerators exist code generators_@return the outcome (0 if successful);public static int exit(ApplicationContext context,_			ExitCodeGenerator... exitCodeGenerators) {_		Assert.notNull(context, "Context must not be null")__		int exitCode = 0__		try {_			try {_				ExitCodeGenerators generators = new ExitCodeGenerators()__				Collection<ExitCodeGenerator> beans = context_						.getBeansOfType(ExitCodeGenerator.class).values()__				generators.addAll(exitCodeGenerators)__				generators.addAll(beans)__				exitCode = generators.getExitCode()__				if (exitCode != 0) {_					context.publishEvent(new ExitCodeEvent(context, exitCode))__				}_			}_			finally {_				close(context)__			}_		}_		catch (Exception ex) {_			ex.printStackTrace()__			exitCode = (exitCode != 0) ? exitCode : 1__		}_		return exitCode__	};static,helper,that,can,be,used,to,exit,a,link,spring,application,and,obtain,a,code,indicating,success,0,or,otherwise,does,not,throw,exceptions,but,should,print,stack,traces,of,any,encountered,applies,the,specified,link,exit,code,generator,in,addition,to,any,spring,beans,that,implement,link,exit,code,generator,in,the,case,of,multiple,exit,codes,the,highest,value,will,be,used,or,if,all,values,are,negative,the,lowest,value,will,be,used,param,context,the,context,to,close,if,possible,param,exit,code,generators,exist,code,generators,return,the,outcome,0,if,successful;public,static,int,exit,application,context,context,exit,code,generator,exit,code,generators,assert,not,null,context,context,must,not,be,null,int,exit,code,0,try,try,exit,code,generators,generators,new,exit,code,generators,collection,exit,code,generator,beans,context,get,beans,of,type,exit,code,generator,class,values,generators,add,all,exit,code,generators,generators,add,all,beans,exit,code,generators,get,exit,code,if,exit,code,0,context,publish,event,new,exit,code,event,context,exit,code,finally,close,context,catch,exception,ex,ex,print,stack,trace,exit,code,exit,code,0,exit,code,1,return,exit,code
SpringApplication -> public static int exit(ApplicationContext context, 			ExitCodeGenerator... exitCodeGenerators);1550148109;Static helper that can be used to exit a {@link SpringApplication} and obtain a_code indicating success (0) or otherwise. Does not throw exceptions but should_print stack traces of any encountered. Applies the specified_{@link ExitCodeGenerator} in addition to any Spring beans that implement_{@link ExitCodeGenerator}. In the case of multiple exit codes the highest value_will be used (or if all values are negative, the lowest value will be used)_@param context the context to close if possible_@param exitCodeGenerators exist code generators_@return the outcome (0 if successful);public static int exit(ApplicationContext context,_			ExitCodeGenerator... exitCodeGenerators) {_		Assert.notNull(context, "Context must not be null")__		int exitCode = 0__		try {_			try {_				ExitCodeGenerators generators = new ExitCodeGenerators()__				Collection<ExitCodeGenerator> beans = context_						.getBeansOfType(ExitCodeGenerator.class).values()__				generators.addAll(exitCodeGenerators)__				generators.addAll(beans)__				exitCode = generators.getExitCode()__				if (exitCode != 0) {_					context.publishEvent(new ExitCodeEvent(context, exitCode))__				}_			}_			finally {_				close(context)__			}_		}_		catch (Exception ex) {_			ex.printStackTrace()__			exitCode = (exitCode != 0) ? exitCode : 1__		}_		return exitCode__	};static,helper,that,can,be,used,to,exit,a,link,spring,application,and,obtain,a,code,indicating,success,0,or,otherwise,does,not,throw,exceptions,but,should,print,stack,traces,of,any,encountered,applies,the,specified,link,exit,code,generator,in,addition,to,any,spring,beans,that,implement,link,exit,code,generator,in,the,case,of,multiple,exit,codes,the,highest,value,will,be,used,or,if,all,values,are,negative,the,lowest,value,will,be,used,param,context,the,context,to,close,if,possible,param,exit,code,generators,exist,code,generators,return,the,outcome,0,if,successful;public,static,int,exit,application,context,context,exit,code,generator,exit,code,generators,assert,not,null,context,context,must,not,be,null,int,exit,code,0,try,try,exit,code,generators,generators,new,exit,code,generators,collection,exit,code,generator,beans,context,get,beans,of,type,exit,code,generator,class,values,generators,add,all,exit,code,generators,generators,add,all,beans,exit,code,generators,get,exit,code,if,exit,code,0,context,publish,event,new,exit,code,event,context,exit,code,finally,close,context,catch,exception,ex,ex,print,stack,trace,exit,code,exit,code,0,exit,code,1,return,exit,code
SpringApplication -> public void addInitializers(ApplicationContextInitializer<?>... initializers);1507173536;Add {@link ApplicationContextInitializer}s to be applied to the Spring_{@link ApplicationContext}._@param initializers the initializers to add;public void addInitializers(ApplicationContextInitializer<?>... initializers) {_		this.initializers.addAll(Arrays.asList(initializers))__	};add,link,application,context,initializer,s,to,be,applied,to,the,spring,link,application,context,param,initializers,the,initializers,to,add;public,void,add,initializers,application,context,initializer,initializers,this,initializers,add,all,arrays,as,list,initializers
SpringApplication -> public void addInitializers(ApplicationContextInitializer<?>... initializers);1509381678;Add {@link ApplicationContextInitializer}s to be applied to the Spring_{@link ApplicationContext}._@param initializers the initializers to add;public void addInitializers(ApplicationContextInitializer<?>... initializers) {_		this.initializers.addAll(Arrays.asList(initializers))__	};add,link,application,context,initializer,s,to,be,applied,to,the,spring,link,application,context,param,initializers,the,initializers,to,add;public,void,add,initializers,application,context,initializer,initializers,this,initializers,add,all,arrays,as,list,initializers
SpringApplication -> public void addInitializers(ApplicationContextInitializer<?>... initializers);1510995225;Add {@link ApplicationContextInitializer}s to be applied to the Spring_{@link ApplicationContext}._@param initializers the initializers to add;public void addInitializers(ApplicationContextInitializer<?>... initializers) {_		this.initializers.addAll(Arrays.asList(initializers))__	};add,link,application,context,initializer,s,to,be,applied,to,the,spring,link,application,context,param,initializers,the,initializers,to,add;public,void,add,initializers,application,context,initializer,initializers,this,initializers,add,all,arrays,as,list,initializers
SpringApplication -> public void addInitializers(ApplicationContextInitializer<?>... initializers);1515670013;Add {@link ApplicationContextInitializer}s to be applied to the Spring_{@link ApplicationContext}._@param initializers the initializers to add;public void addInitializers(ApplicationContextInitializer<?>... initializers) {_		this.initializers.addAll(Arrays.asList(initializers))__	};add,link,application,context,initializer,s,to,be,applied,to,the,spring,link,application,context,param,initializers,the,initializers,to,add;public,void,add,initializers,application,context,initializer,initializers,this,initializers,add,all,arrays,as,list,initializers
SpringApplication -> public void addInitializers(ApplicationContextInitializer<?>... initializers);1519362690;Add {@link ApplicationContextInitializer}s to be applied to the Spring_{@link ApplicationContext}._@param initializers the initializers to add;public void addInitializers(ApplicationContextInitializer<?>... initializers) {_		this.initializers.addAll(Arrays.asList(initializers))__	};add,link,application,context,initializer,s,to,be,applied,to,the,spring,link,application,context,param,initializers,the,initializers,to,add;public,void,add,initializers,application,context,initializer,initializers,this,initializers,add,all,arrays,as,list,initializers
SpringApplication -> public void addInitializers(ApplicationContextInitializer<?>... initializers);1522251721;Add {@link ApplicationContextInitializer}s to be applied to the Spring_{@link ApplicationContext}._@param initializers the initializers to add;public void addInitializers(ApplicationContextInitializer<?>... initializers) {_		this.initializers.addAll(Arrays.asList(initializers))__	};add,link,application,context,initializer,s,to,be,applied,to,the,spring,link,application,context,param,initializers,the,initializers,to,add;public,void,add,initializers,application,context,initializer,initializers,this,initializers,add,all,arrays,as,list,initializers
SpringApplication -> public void addInitializers(ApplicationContextInitializer<?>... initializers);1525376698;Add {@link ApplicationContextInitializer}s to be applied to the Spring_{@link ApplicationContext}._@param initializers the initializers to add;public void addInitializers(ApplicationContextInitializer<?>... initializers) {_		this.initializers.addAll(Arrays.asList(initializers))__	};add,link,application,context,initializer,s,to,be,applied,to,the,spring,link,application,context,param,initializers,the,initializers,to,add;public,void,add,initializers,application,context,initializer,initializers,this,initializers,add,all,arrays,as,list,initializers
SpringApplication -> public void addInitializers(ApplicationContextInitializer<?>... initializers);1525416882;Add {@link ApplicationContextInitializer}s to be applied to the Spring_{@link ApplicationContext}._@param initializers the initializers to add;public void addInitializers(ApplicationContextInitializer<?>... initializers) {_		this.initializers.addAll(Arrays.asList(initializers))__	};add,link,application,context,initializer,s,to,be,applied,to,the,spring,link,application,context,param,initializers,the,initializers,to,add;public,void,add,initializers,application,context,initializer,initializers,this,initializers,add,all,arrays,as,list,initializers
SpringApplication -> public void addInitializers(ApplicationContextInitializer<?>... initializers);1526993305;Add {@link ApplicationContextInitializer}s to be applied to the Spring_{@link ApplicationContext}._@param initializers the initializers to add;public void addInitializers(ApplicationContextInitializer<?>... initializers) {_		this.initializers.addAll(Arrays.asList(initializers))__	};add,link,application,context,initializer,s,to,be,applied,to,the,spring,link,application,context,param,initializers,the,initializers,to,add;public,void,add,initializers,application,context,initializer,initializers,this,initializers,add,all,arrays,as,list,initializers
SpringApplication -> public void addInitializers(ApplicationContextInitializer<?>... initializers);1529485904;Add {@link ApplicationContextInitializer}s to be applied to the Spring_{@link ApplicationContext}._@param initializers the initializers to add;public void addInitializers(ApplicationContextInitializer<?>... initializers) {_		this.initializers.addAll(Arrays.asList(initializers))__	};add,link,application,context,initializer,s,to,be,applied,to,the,spring,link,application,context,param,initializers,the,initializers,to,add;public,void,add,initializers,application,context,initializer,initializers,this,initializers,add,all,arrays,as,list,initializers
SpringApplication -> public void addInitializers(ApplicationContextInitializer<?>... initializers);1531140616;Add {@link ApplicationContextInitializer}s to be applied to the Spring_{@link ApplicationContext}._@param initializers the initializers to add;public void addInitializers(ApplicationContextInitializer<?>... initializers) {_		this.initializers.addAll(Arrays.asList(initializers))__	};add,link,application,context,initializer,s,to,be,applied,to,the,spring,link,application,context,param,initializers,the,initializers,to,add;public,void,add,initializers,application,context,initializer,initializers,this,initializers,add,all,arrays,as,list,initializers
SpringApplication -> public void addInitializers(ApplicationContextInitializer<?>... initializers);1531155529;Add {@link ApplicationContextInitializer}s to be applied to the Spring_{@link ApplicationContext}._@param initializers the initializers to add;public void addInitializers(ApplicationContextInitializer<?>... initializers) {_		this.initializers.addAll(Arrays.asList(initializers))__	};add,link,application,context,initializer,s,to,be,applied,to,the,spring,link,application,context,param,initializers,the,initializers,to,add;public,void,add,initializers,application,context,initializer,initializers,this,initializers,add,all,arrays,as,list,initializers
SpringApplication -> public void addInitializers(ApplicationContextInitializer<?>... initializers);1531222098;Add {@link ApplicationContextInitializer}s to be applied to the Spring_{@link ApplicationContext}._@param initializers the initializers to add;public void addInitializers(ApplicationContextInitializer<?>... initializers) {_		this.initializers.addAll(Arrays.asList(initializers))__	};add,link,application,context,initializer,s,to,be,applied,to,the,spring,link,application,context,param,initializers,the,initializers,to,add;public,void,add,initializers,application,context,initializer,initializers,this,initializers,add,all,arrays,as,list,initializers
SpringApplication -> public void addInitializers(ApplicationContextInitializer<?>... initializers);1532738143;Add {@link ApplicationContextInitializer}s to be applied to the Spring_{@link ApplicationContext}._@param initializers the initializers to add;public void addInitializers(ApplicationContextInitializer<?>... initializers) {_		this.initializers.addAll(Arrays.asList(initializers))__	};add,link,application,context,initializer,s,to,be,applied,to,the,spring,link,application,context,param,initializers,the,initializers,to,add;public,void,add,initializers,application,context,initializer,initializers,this,initializers,add,all,arrays,as,list,initializers
SpringApplication -> public void addInitializers(ApplicationContextInitializer<?>... initializers);1534188228;Add {@link ApplicationContextInitializer}s to be applied to the Spring_{@link ApplicationContext}._@param initializers the initializers to add;public void addInitializers(ApplicationContextInitializer<?>... initializers) {_		this.initializers.addAll(Arrays.asList(initializers))__	};add,link,application,context,initializer,s,to,be,applied,to,the,spring,link,application,context,param,initializers,the,initializers,to,add;public,void,add,initializers,application,context,initializer,initializers,this,initializers,add,all,arrays,as,list,initializers
SpringApplication -> public void addInitializers(ApplicationContextInitializer<?>... initializers);1535104170;Add {@link ApplicationContextInitializer}s to be applied to the Spring_{@link ApplicationContext}._@param initializers the initializers to add;public void addInitializers(ApplicationContextInitializer<?>... initializers) {_		this.initializers.addAll(Arrays.asList(initializers))__	};add,link,application,context,initializer,s,to,be,applied,to,the,spring,link,application,context,param,initializers,the,initializers,to,add;public,void,add,initializers,application,context,initializer,initializers,this,initializers,add,all,arrays,as,list,initializers
SpringApplication -> public void addInitializers(ApplicationContextInitializer<?>... initializers);1536701067;Add {@link ApplicationContextInitializer}s to be applied to the Spring_{@link ApplicationContext}._@param initializers the initializers to add;public void addInitializers(ApplicationContextInitializer<?>... initializers) {_		this.initializers.addAll(Arrays.asList(initializers))__	};add,link,application,context,initializer,s,to,be,applied,to,the,spring,link,application,context,param,initializers,the,initializers,to,add;public,void,add,initializers,application,context,initializer,initializers,this,initializers,add,all,arrays,as,list,initializers
SpringApplication -> public void addInitializers(ApplicationContextInitializer<?>... initializers);1538570355;Add {@link ApplicationContextInitializer}s to be applied to the Spring_{@link ApplicationContext}._@param initializers the initializers to add;public void addInitializers(ApplicationContextInitializer<?>... initializers) {_		this.initializers.addAll(Arrays.asList(initializers))__	};add,link,application,context,initializer,s,to,be,applied,to,the,spring,link,application,context,param,initializers,the,initializers,to,add;public,void,add,initializers,application,context,initializer,initializers,this,initializers,add,all,arrays,as,list,initializers
SpringApplication -> public void addInitializers(ApplicationContextInitializer<?>... initializers);1538707540;Add {@link ApplicationContextInitializer}s to be applied to the Spring_{@link ApplicationContext}._@param initializers the initializers to add;public void addInitializers(ApplicationContextInitializer<?>... initializers) {_		this.initializers.addAll(Arrays.asList(initializers))__	};add,link,application,context,initializer,s,to,be,applied,to,the,spring,link,application,context,param,initializers,the,initializers,to,add;public,void,add,initializers,application,context,initializer,initializers,this,initializers,add,all,arrays,as,list,initializers
SpringApplication -> public void addInitializers(ApplicationContextInitializer<?>... initializers);1538750610;Add {@link ApplicationContextInitializer}s to be applied to the Spring_{@link ApplicationContext}._@param initializers the initializers to add;public void addInitializers(ApplicationContextInitializer<?>... initializers) {_		this.initializers.addAll(Arrays.asList(initializers))__	};add,link,application,context,initializer,s,to,be,applied,to,the,spring,link,application,context,param,initializers,the,initializers,to,add;public,void,add,initializers,application,context,initializer,initializers,this,initializers,add,all,arrays,as,list,initializers
SpringApplication -> public void addInitializers(ApplicationContextInitializer<?>... initializers);1538771652;Add {@link ApplicationContextInitializer}s to be applied to the Spring_{@link ApplicationContext}._@param initializers the initializers to add;public void addInitializers(ApplicationContextInitializer<?>... initializers) {_		this.initializers.addAll(Arrays.asList(initializers))__	};add,link,application,context,initializer,s,to,be,applied,to,the,spring,link,application,context,param,initializers,the,initializers,to,add;public,void,add,initializers,application,context,initializer,initializers,this,initializers,add,all,arrays,as,list,initializers
SpringApplication -> public void addInitializers(ApplicationContextInitializer<?>... initializers);1540419762;Add {@link ApplicationContextInitializer}s to be applied to the Spring_{@link ApplicationContext}._@param initializers the initializers to add;public void addInitializers(ApplicationContextInitializer<?>... initializers) {_		this.initializers.addAll(Arrays.asList(initializers))__	};add,link,application,context,initializer,s,to,be,applied,to,the,spring,link,application,context,param,initializers,the,initializers,to,add;public,void,add,initializers,application,context,initializer,initializers,this,initializers,add,all,arrays,as,list,initializers
SpringApplication -> public void addInitializers(ApplicationContextInitializer<?>... initializers);1541060131;Add {@link ApplicationContextInitializer}s to be applied to the Spring_{@link ApplicationContext}._@param initializers the initializers to add;public void addInitializers(ApplicationContextInitializer<?>... initializers) {_		this.initializers.addAll(Arrays.asList(initializers))__	};add,link,application,context,initializer,s,to,be,applied,to,the,spring,link,application,context,param,initializers,the,initializers,to,add;public,void,add,initializers,application,context,initializer,initializers,this,initializers,add,all,arrays,as,list,initializers
SpringApplication -> public void addInitializers(ApplicationContextInitializer<?>... initializers);1546943477;Add {@link ApplicationContextInitializer}s to be applied to the Spring_{@link ApplicationContext}._@param initializers the initializers to add;public void addInitializers(ApplicationContextInitializer<?>... initializers) {_		this.initializers.addAll(Arrays.asList(initializers))__	};add,link,application,context,initializer,s,to,be,applied,to,the,spring,link,application,context,param,initializers,the,initializers,to,add;public,void,add,initializers,application,context,initializer,initializers,this,initializers,add,all,arrays,as,list,initializers
SpringApplication -> public void addInitializers(ApplicationContextInitializer<?>... initializers);1549791353;Add {@link ApplicationContextInitializer}s to be applied to the Spring_{@link ApplicationContext}._@param initializers the initializers to add;public void addInitializers(ApplicationContextInitializer<?>... initializers) {_		this.initializers.addAll(Arrays.asList(initializers))__	};add,link,application,context,initializer,s,to,be,applied,to,the,spring,link,application,context,param,initializers,the,initializers,to,add;public,void,add,initializers,application,context,initializer,initializers,this,initializers,add,all,arrays,as,list,initializers
SpringApplication -> public void addInitializers(ApplicationContextInitializer<?>... initializers);1550148109;Add {@link ApplicationContextInitializer}s to be applied to the Spring_{@link ApplicationContext}._@param initializers the initializers to add;public void addInitializers(ApplicationContextInitializer<?>... initializers) {_		this.initializers.addAll(Arrays.asList(initializers))__	};add,link,application,context,initializer,s,to,be,applied,to,the,spring,link,application,context,param,initializers,the,initializers,to,add;public,void,add,initializers,application,context,initializer,initializers,this,initializers,add,all,arrays,as,list,initializers
SpringApplication -> @Deprecated 	public void setWebEnvironment(boolean webEnvironment);1507173536;Sets if this application is running within a web environment. If not specified will_attempt to deduce the environment based on the classpath._@param webEnvironment if the application is running in a web environment_@deprecated since 2.0.0 in favor of_{@link #setWebApplicationType(WebApplicationType)};@Deprecated_	public void setWebEnvironment(boolean webEnvironment) {_		this.webApplicationType = webEnvironment ? WebApplicationType.SERVLET_				: WebApplicationType.NONE__	};sets,if,this,application,is,running,within,a,web,environment,if,not,specified,will,attempt,to,deduce,the,environment,based,on,the,classpath,param,web,environment,if,the,application,is,running,in,a,web,environment,deprecated,since,2,0,0,in,favor,of,link,set,web,application,type,web,application,type;deprecated,public,void,set,web,environment,boolean,web,environment,this,web,application,type,web,environment,web,application,type,servlet,web,application,type,none
SpringApplication -> @Deprecated 	public void setWebEnvironment(boolean webEnvironment);1509381678;Sets if this application is running within a web environment. If not specified will_attempt to deduce the environment based on the classpath._@param webEnvironment if the application is running in a web environment_@deprecated since 2.0.0 in favor of_{@link #setWebApplicationType(WebApplicationType)};@Deprecated_	public void setWebEnvironment(boolean webEnvironment) {_		this.webApplicationType = webEnvironment ? WebApplicationType.SERVLET_				: WebApplicationType.NONE__	};sets,if,this,application,is,running,within,a,web,environment,if,not,specified,will,attempt,to,deduce,the,environment,based,on,the,classpath,param,web,environment,if,the,application,is,running,in,a,web,environment,deprecated,since,2,0,0,in,favor,of,link,set,web,application,type,web,application,type;deprecated,public,void,set,web,environment,boolean,web,environment,this,web,application,type,web,environment,web,application,type,servlet,web,application,type,none
SpringApplication -> @Deprecated 	public void setWebEnvironment(boolean webEnvironment);1510995225;Sets if this application is running within a web environment. If not specified will_attempt to deduce the environment based on the classpath._@param webEnvironment if the application is running in a web environment_@deprecated since 2.0.0 in favor of_{@link #setWebApplicationType(WebApplicationType)};@Deprecated_	public void setWebEnvironment(boolean webEnvironment) {_		this.webApplicationType = webEnvironment ? WebApplicationType.SERVLET_				: WebApplicationType.NONE__	};sets,if,this,application,is,running,within,a,web,environment,if,not,specified,will,attempt,to,deduce,the,environment,based,on,the,classpath,param,web,environment,if,the,application,is,running,in,a,web,environment,deprecated,since,2,0,0,in,favor,of,link,set,web,application,type,web,application,type;deprecated,public,void,set,web,environment,boolean,web,environment,this,web,application,type,web,environment,web,application,type,servlet,web,application,type,none
SpringApplication -> @Deprecated 	public void setWebEnvironment(boolean webEnvironment);1515670013;Sets if this application is running within a web environment. If not specified will_attempt to deduce the environment based on the classpath._@param webEnvironment if the application is running in a web environment_@deprecated since 2.0.0 in favor of_{@link #setWebApplicationType(WebApplicationType)};@Deprecated_	public void setWebEnvironment(boolean webEnvironment) {_		this.webApplicationType = webEnvironment ? WebApplicationType.SERVLET_				: WebApplicationType.NONE__	};sets,if,this,application,is,running,within,a,web,environment,if,not,specified,will,attempt,to,deduce,the,environment,based,on,the,classpath,param,web,environment,if,the,application,is,running,in,a,web,environment,deprecated,since,2,0,0,in,favor,of,link,set,web,application,type,web,application,type;deprecated,public,void,set,web,environment,boolean,web,environment,this,web,application,type,web,environment,web,application,type,servlet,web,application,type,none
SpringApplication -> @Deprecated 	public void setWebEnvironment(boolean webEnvironment);1519362690;Sets if this application is running within a web environment. If not specified will_attempt to deduce the environment based on the classpath._@param webEnvironment if the application is running in a web environment_@deprecated since 2.0.0 in favor of_{@link #setWebApplicationType(WebApplicationType)};@Deprecated_	public void setWebEnvironment(boolean webEnvironment) {_		this.webApplicationType = webEnvironment ? WebApplicationType.SERVLET_				: WebApplicationType.NONE__	};sets,if,this,application,is,running,within,a,web,environment,if,not,specified,will,attempt,to,deduce,the,environment,based,on,the,classpath,param,web,environment,if,the,application,is,running,in,a,web,environment,deprecated,since,2,0,0,in,favor,of,link,set,web,application,type,web,application,type;deprecated,public,void,set,web,environment,boolean,web,environment,this,web,application,type,web,environment,web,application,type,servlet,web,application,type,none
SpringApplication -> @Deprecated 	public void setWebEnvironment(boolean webEnvironment);1522251721;Sets if this application is running within a web environment. If not specified will_attempt to deduce the environment based on the classpath._@param webEnvironment if the application is running in a web environment_@deprecated since 2.0.0 in favor of_{@link #setWebApplicationType(WebApplicationType)};@Deprecated_	public void setWebEnvironment(boolean webEnvironment) {_		this.webApplicationType = webEnvironment ? WebApplicationType.SERVLET_				: WebApplicationType.NONE__	};sets,if,this,application,is,running,within,a,web,environment,if,not,specified,will,attempt,to,deduce,the,environment,based,on,the,classpath,param,web,environment,if,the,application,is,running,in,a,web,environment,deprecated,since,2,0,0,in,favor,of,link,set,web,application,type,web,application,type;deprecated,public,void,set,web,environment,boolean,web,environment,this,web,application,type,web,environment,web,application,type,servlet,web,application,type,none
SpringApplication -> @Deprecated 	public void setWebEnvironment(boolean webEnvironment);1525376698;Sets if this application is running within a web environment. If not specified will_attempt to deduce the environment based on the classpath._@param webEnvironment if the application is running in a web environment_@deprecated since 2.0.0 in favor of_{@link #setWebApplicationType(WebApplicationType)};@Deprecated_	public void setWebEnvironment(boolean webEnvironment) {_		this.webApplicationType = webEnvironment ? WebApplicationType.SERVLET_				: WebApplicationType.NONE__	};sets,if,this,application,is,running,within,a,web,environment,if,not,specified,will,attempt,to,deduce,the,environment,based,on,the,classpath,param,web,environment,if,the,application,is,running,in,a,web,environment,deprecated,since,2,0,0,in,favor,of,link,set,web,application,type,web,application,type;deprecated,public,void,set,web,environment,boolean,web,environment,this,web,application,type,web,environment,web,application,type,servlet,web,application,type,none
SpringApplication -> @Deprecated 	public void setWebEnvironment(boolean webEnvironment);1525416882;Sets if this application is running within a web environment. If not specified will_attempt to deduce the environment based on the classpath._@param webEnvironment if the application is running in a web environment_@deprecated since 2.0.0 in favor of_{@link #setWebApplicationType(WebApplicationType)};@Deprecated_	public void setWebEnvironment(boolean webEnvironment) {_		this.webApplicationType = (webEnvironment ? WebApplicationType.SERVLET_				: WebApplicationType.NONE)__	};sets,if,this,application,is,running,within,a,web,environment,if,not,specified,will,attempt,to,deduce,the,environment,based,on,the,classpath,param,web,environment,if,the,application,is,running,in,a,web,environment,deprecated,since,2,0,0,in,favor,of,link,set,web,application,type,web,application,type;deprecated,public,void,set,web,environment,boolean,web,environment,this,web,application,type,web,environment,web,application,type,servlet,web,application,type,none
SpringApplication -> public void setEnvironment(ConfigurableEnvironment environment);1507173536;Sets the underlying environment that should be used with the created application_context._@param environment the environment;public void setEnvironment(ConfigurableEnvironment environment) {_		this.environment = environment__	};sets,the,underlying,environment,that,should,be,used,with,the,created,application,context,param,environment,the,environment;public,void,set,environment,configurable,environment,environment,this,environment,environment
SpringApplication -> public void setEnvironment(ConfigurableEnvironment environment);1509381678;Sets the underlying environment that should be used with the created application_context._@param environment the environment;public void setEnvironment(ConfigurableEnvironment environment) {_		this.environment = environment__	};sets,the,underlying,environment,that,should,be,used,with,the,created,application,context,param,environment,the,environment;public,void,set,environment,configurable,environment,environment,this,environment,environment
SpringApplication -> public void setEnvironment(ConfigurableEnvironment environment);1510995225;Sets the underlying environment that should be used with the created application_context._@param environment the environment;public void setEnvironment(ConfigurableEnvironment environment) {_		this.environment = environment__	};sets,the,underlying,environment,that,should,be,used,with,the,created,application,context,param,environment,the,environment;public,void,set,environment,configurable,environment,environment,this,environment,environment
SpringApplication -> public void setEnvironment(ConfigurableEnvironment environment);1515670013;Sets the underlying environment that should be used with the created application_context._@param environment the environment;public void setEnvironment(ConfigurableEnvironment environment) {_		this.environment = environment__	};sets,the,underlying,environment,that,should,be,used,with,the,created,application,context,param,environment,the,environment;public,void,set,environment,configurable,environment,environment,this,environment,environment
SpringApplication -> public void setEnvironment(ConfigurableEnvironment environment);1519362690;Sets the underlying environment that should be used with the created application_context._@param environment the environment;public void setEnvironment(ConfigurableEnvironment environment) {_		this.environment = environment__	};sets,the,underlying,environment,that,should,be,used,with,the,created,application,context,param,environment,the,environment;public,void,set,environment,configurable,environment,environment,this,environment,environment
SpringApplication -> public void setEnvironment(ConfigurableEnvironment environment);1522251721;Sets the underlying environment that should be used with the created application_context._@param environment the environment;public void setEnvironment(ConfigurableEnvironment environment) {_		this.environment = environment__	};sets,the,underlying,environment,that,should,be,used,with,the,created,application,context,param,environment,the,environment;public,void,set,environment,configurable,environment,environment,this,environment,environment
SpringApplication -> public void setEnvironment(ConfigurableEnvironment environment);1525376698;Sets the underlying environment that should be used with the created application_context._@param environment the environment;public void setEnvironment(ConfigurableEnvironment environment) {_		this.environment = environment__	};sets,the,underlying,environment,that,should,be,used,with,the,created,application,context,param,environment,the,environment;public,void,set,environment,configurable,environment,environment,this,environment,environment
SpringApplication -> public void setEnvironment(ConfigurableEnvironment environment);1525416882;Sets the underlying environment that should be used with the created application_context._@param environment the environment;public void setEnvironment(ConfigurableEnvironment environment) {_		this.environment = environment__	};sets,the,underlying,environment,that,should,be,used,with,the,created,application,context,param,environment,the,environment;public,void,set,environment,configurable,environment,environment,this,environment,environment
SpringApplication -> public void setEnvironment(ConfigurableEnvironment environment);1526993305;Sets the underlying environment that should be used with the created application_context._@param environment the environment;public void setEnvironment(ConfigurableEnvironment environment) {_		this.environment = environment__	};sets,the,underlying,environment,that,should,be,used,with,the,created,application,context,param,environment,the,environment;public,void,set,environment,configurable,environment,environment,this,environment,environment
SpringApplication -> public void setEnvironment(ConfigurableEnvironment environment);1529485904;Sets the underlying environment that should be used with the created application_context._@param environment the environment;public void setEnvironment(ConfigurableEnvironment environment) {_		this.environment = environment__	};sets,the,underlying,environment,that,should,be,used,with,the,created,application,context,param,environment,the,environment;public,void,set,environment,configurable,environment,environment,this,environment,environment
SpringApplication -> public void setEnvironment(ConfigurableEnvironment environment);1531140616;Sets the underlying environment that should be used with the created application_context._@param environment the environment;public void setEnvironment(ConfigurableEnvironment environment) {_		this.environment = environment__	};sets,the,underlying,environment,that,should,be,used,with,the,created,application,context,param,environment,the,environment;public,void,set,environment,configurable,environment,environment,this,environment,environment
SpringApplication -> public void setEnvironment(ConfigurableEnvironment environment);1531155529;Sets the underlying environment that should be used with the created application_context._@param environment the environment;public void setEnvironment(ConfigurableEnvironment environment) {_		this.environment = environment__	};sets,the,underlying,environment,that,should,be,used,with,the,created,application,context,param,environment,the,environment;public,void,set,environment,configurable,environment,environment,this,environment,environment
SpringApplication -> public void setEnvironment(ConfigurableEnvironment environment);1531222098;Sets the underlying environment that should be used with the created application_context._@param environment the environment;public void setEnvironment(ConfigurableEnvironment environment) {_		this.environment = environment__	};sets,the,underlying,environment,that,should,be,used,with,the,created,application,context,param,environment,the,environment;public,void,set,environment,configurable,environment,environment,this,environment,environment
SpringApplication -> public void setEnvironment(ConfigurableEnvironment environment);1532738143;Sets the underlying environment that should be used with the created application_context._@param environment the environment;public void setEnvironment(ConfigurableEnvironment environment) {_		this.environment = environment__	};sets,the,underlying,environment,that,should,be,used,with,the,created,application,context,param,environment,the,environment;public,void,set,environment,configurable,environment,environment,this,environment,environment
SpringApplication -> public void setEnvironment(ConfigurableEnvironment environment);1534188228;Sets the underlying environment that should be used with the created application_context._@param environment the environment;public void setEnvironment(ConfigurableEnvironment environment) {_		this.isCustomEnvironment = true__		this.environment = environment__	};sets,the,underlying,environment,that,should,be,used,with,the,created,application,context,param,environment,the,environment;public,void,set,environment,configurable,environment,environment,this,is,custom,environment,true,this,environment,environment
SpringApplication -> public void setEnvironment(ConfigurableEnvironment environment);1535104170;Sets the underlying environment that should be used with the created application_context._@param environment the environment;public void setEnvironment(ConfigurableEnvironment environment) {_		this.isCustomEnvironment = true__		this.environment = environment__	};sets,the,underlying,environment,that,should,be,used,with,the,created,application,context,param,environment,the,environment;public,void,set,environment,configurable,environment,environment,this,is,custom,environment,true,this,environment,environment
SpringApplication -> public void setEnvironment(ConfigurableEnvironment environment);1536701067;Sets the underlying environment that should be used with the created application_context._@param environment the environment;public void setEnvironment(ConfigurableEnvironment environment) {_		this.isCustomEnvironment = true__		this.environment = environment__	};sets,the,underlying,environment,that,should,be,used,with,the,created,application,context,param,environment,the,environment;public,void,set,environment,configurable,environment,environment,this,is,custom,environment,true,this,environment,environment
SpringApplication -> public void setEnvironment(ConfigurableEnvironment environment);1538570355;Sets the underlying environment that should be used with the created application_context._@param environment the environment;public void setEnvironment(ConfigurableEnvironment environment) {_		this.isCustomEnvironment = true__		this.environment = environment__	};sets,the,underlying,environment,that,should,be,used,with,the,created,application,context,param,environment,the,environment;public,void,set,environment,configurable,environment,environment,this,is,custom,environment,true,this,environment,environment
SpringApplication -> public void setEnvironment(ConfigurableEnvironment environment);1538707540;Sets the underlying environment that should be used with the created application_context._@param environment the environment;public void setEnvironment(ConfigurableEnvironment environment) {_		this.isCustomEnvironment = true__		this.environment = environment__	};sets,the,underlying,environment,that,should,be,used,with,the,created,application,context,param,environment,the,environment;public,void,set,environment,configurable,environment,environment,this,is,custom,environment,true,this,environment,environment
SpringApplication -> public void setEnvironment(ConfigurableEnvironment environment);1538750610;Sets the underlying environment that should be used with the created application_context._@param environment the environment;public void setEnvironment(ConfigurableEnvironment environment) {_		this.isCustomEnvironment = true__		this.environment = environment__	};sets,the,underlying,environment,that,should,be,used,with,the,created,application,context,param,environment,the,environment;public,void,set,environment,configurable,environment,environment,this,is,custom,environment,true,this,environment,environment
SpringApplication -> public void setEnvironment(ConfigurableEnvironment environment);1538771652;Sets the underlying environment that should be used with the created application_context._@param environment the environment;public void setEnvironment(ConfigurableEnvironment environment) {_		this.isCustomEnvironment = true__		this.environment = environment__	};sets,the,underlying,environment,that,should,be,used,with,the,created,application,context,param,environment,the,environment;public,void,set,environment,configurable,environment,environment,this,is,custom,environment,true,this,environment,environment
SpringApplication -> public void setEnvironment(ConfigurableEnvironment environment);1540419762;Sets the underlying environment that should be used with the created application_context._@param environment the environment;public void setEnvironment(ConfigurableEnvironment environment) {_		this.isCustomEnvironment = true__		this.environment = environment__	};sets,the,underlying,environment,that,should,be,used,with,the,created,application,context,param,environment,the,environment;public,void,set,environment,configurable,environment,environment,this,is,custom,environment,true,this,environment,environment
SpringApplication -> public void setEnvironment(ConfigurableEnvironment environment);1541060131;Sets the underlying environment that should be used with the created application_context._@param environment the environment;public void setEnvironment(ConfigurableEnvironment environment) {_		this.isCustomEnvironment = true__		this.environment = environment__	};sets,the,underlying,environment,that,should,be,used,with,the,created,application,context,param,environment,the,environment;public,void,set,environment,configurable,environment,environment,this,is,custom,environment,true,this,environment,environment
SpringApplication -> public void setEnvironment(ConfigurableEnvironment environment);1546943477;Sets the underlying environment that should be used with the created application_context._@param environment the environment;public void setEnvironment(ConfigurableEnvironment environment) {_		this.isCustomEnvironment = true__		this.environment = environment__	};sets,the,underlying,environment,that,should,be,used,with,the,created,application,context,param,environment,the,environment;public,void,set,environment,configurable,environment,environment,this,is,custom,environment,true,this,environment,environment
SpringApplication -> public void setEnvironment(ConfigurableEnvironment environment);1549791353;Sets the underlying environment that should be used with the created application_context._@param environment the environment;public void setEnvironment(ConfigurableEnvironment environment) {_		this.isCustomEnvironment = true__		this.environment = environment__	};sets,the,underlying,environment,that,should,be,used,with,the,created,application,context,param,environment,the,environment;public,void,set,environment,configurable,environment,environment,this,is,custom,environment,true,this,environment,environment
SpringApplication -> public void setEnvironment(ConfigurableEnvironment environment);1550148109;Sets the underlying environment that should be used with the created application_context._@param environment the environment;public void setEnvironment(ConfigurableEnvironment environment) {_		this.isCustomEnvironment = true__		this.environment = environment__	};sets,the,underlying,environment,that,should,be,used,with,the,created,application,context,param,environment,the,environment;public,void,set,environment,configurable,environment,environment,this,is,custom,environment,true,this,environment,environment
SpringApplication -> public SpringApplication(Class<?>... primarySources);1507173536;Create a new {@link SpringApplication} instance. The application context will load_beans from the specified primary sources (see {@link SpringApplication class-level}_documentation for details. The instance can be customized before calling_{@link #run(String...)}._@param primarySources the primary bean sources_@see #run(Class, String[])_@see #SpringApplication(ResourceLoader, Class...)_@see #setSources(Set);public SpringApplication(Class<?>... primarySources) {_		this(null, primarySources)__	};create,a,new,link,spring,application,instance,the,application,context,will,load,beans,from,the,specified,primary,sources,see,link,spring,application,class,level,documentation,for,details,the,instance,can,be,customized,before,calling,link,run,string,param,primary,sources,the,primary,bean,sources,see,run,class,string,see,spring,application,resource,loader,class,see,set,sources,set;public,spring,application,class,primary,sources,this,null,primary,sources
SpringApplication -> public SpringApplication(Class<?>... primarySources);1509381678;Create a new {@link SpringApplication} instance. The application context will load_beans from the specified primary sources (see {@link SpringApplication class-level}_documentation for details. The instance can be customized before calling_{@link #run(String...)}._@param primarySources the primary bean sources_@see #run(Class, String[])_@see #SpringApplication(ResourceLoader, Class...)_@see #setSources(Set);public SpringApplication(Class<?>... primarySources) {_		this(null, primarySources)__	};create,a,new,link,spring,application,instance,the,application,context,will,load,beans,from,the,specified,primary,sources,see,link,spring,application,class,level,documentation,for,details,the,instance,can,be,customized,before,calling,link,run,string,param,primary,sources,the,primary,bean,sources,see,run,class,string,see,spring,application,resource,loader,class,see,set,sources,set;public,spring,application,class,primary,sources,this,null,primary,sources
SpringApplication -> public SpringApplication(Class<?>... primarySources);1510995225;Create a new {@link SpringApplication} instance. The application context will load_beans from the specified primary sources (see {@link SpringApplication class-level}_documentation for details. The instance can be customized before calling_{@link #run(String...)}._@param primarySources the primary bean sources_@see #run(Class, String[])_@see #SpringApplication(ResourceLoader, Class...)_@see #setSources(Set);public SpringApplication(Class<?>... primarySources) {_		this(null, primarySources)__	};create,a,new,link,spring,application,instance,the,application,context,will,load,beans,from,the,specified,primary,sources,see,link,spring,application,class,level,documentation,for,details,the,instance,can,be,customized,before,calling,link,run,string,param,primary,sources,the,primary,bean,sources,see,run,class,string,see,spring,application,resource,loader,class,see,set,sources,set;public,spring,application,class,primary,sources,this,null,primary,sources
SpringApplication -> public SpringApplication(Class<?>... primarySources);1515670013;Create a new {@link SpringApplication} instance. The application context will load_beans from the specified primary sources (see {@link SpringApplication class-level}_documentation for details. The instance can be customized before calling_{@link #run(String...)}._@param primarySources the primary bean sources_@see #run(Class, String[])_@see #SpringApplication(ResourceLoader, Class...)_@see #setSources(Set);public SpringApplication(Class<?>... primarySources) {_		this(null, primarySources)__	};create,a,new,link,spring,application,instance,the,application,context,will,load,beans,from,the,specified,primary,sources,see,link,spring,application,class,level,documentation,for,details,the,instance,can,be,customized,before,calling,link,run,string,param,primary,sources,the,primary,bean,sources,see,run,class,string,see,spring,application,resource,loader,class,see,set,sources,set;public,spring,application,class,primary,sources,this,null,primary,sources
SpringApplication -> public SpringApplication(Class<?>... primarySources);1519362690;Create a new {@link SpringApplication} instance. The application context will load_beans from the specified primary sources (see {@link SpringApplication class-level}_documentation for details. The instance can be customized before calling_{@link #run(String...)}._@param primarySources the primary bean sources_@see #run(Class, String[])_@see #SpringApplication(ResourceLoader, Class...)_@see #setSources(Set);public SpringApplication(Class<?>... primarySources) {_		this(null, primarySources)__	};create,a,new,link,spring,application,instance,the,application,context,will,load,beans,from,the,specified,primary,sources,see,link,spring,application,class,level,documentation,for,details,the,instance,can,be,customized,before,calling,link,run,string,param,primary,sources,the,primary,bean,sources,see,run,class,string,see,spring,application,resource,loader,class,see,set,sources,set;public,spring,application,class,primary,sources,this,null,primary,sources
SpringApplication -> public SpringApplication(Class<?>... primarySources);1522251721;Create a new {@link SpringApplication} instance. The application context will load_beans from the specified primary sources (see {@link SpringApplication class-level}_documentation for details. The instance can be customized before calling_{@link #run(String...)}._@param primarySources the primary bean sources_@see #run(Class, String[])_@see #SpringApplication(ResourceLoader, Class...)_@see #setSources(Set);public SpringApplication(Class<?>... primarySources) {_		this(null, primarySources)__	};create,a,new,link,spring,application,instance,the,application,context,will,load,beans,from,the,specified,primary,sources,see,link,spring,application,class,level,documentation,for,details,the,instance,can,be,customized,before,calling,link,run,string,param,primary,sources,the,primary,bean,sources,see,run,class,string,see,spring,application,resource,loader,class,see,set,sources,set;public,spring,application,class,primary,sources,this,null,primary,sources
SpringApplication -> public SpringApplication(Class<?>... primarySources);1525376698;Create a new {@link SpringApplication} instance. The application context will load_beans from the specified primary sources (see {@link SpringApplication class-level}_documentation for details. The instance can be customized before calling_{@link #run(String...)}._@param primarySources the primary bean sources_@see #run(Class, String[])_@see #SpringApplication(ResourceLoader, Class...)_@see #setSources(Set);public SpringApplication(Class<?>... primarySources) {_		this(null, primarySources)__	};create,a,new,link,spring,application,instance,the,application,context,will,load,beans,from,the,specified,primary,sources,see,link,spring,application,class,level,documentation,for,details,the,instance,can,be,customized,before,calling,link,run,string,param,primary,sources,the,primary,bean,sources,see,run,class,string,see,spring,application,resource,loader,class,see,set,sources,set;public,spring,application,class,primary,sources,this,null,primary,sources
SpringApplication -> public SpringApplication(Class<?>... primarySources);1525416882;Create a new {@link SpringApplication} instance. The application context will load_beans from the specified primary sources (see {@link SpringApplication class-level}_documentation for details. The instance can be customized before calling_{@link #run(String...)}._@param primarySources the primary bean sources_@see #run(Class, String[])_@see #SpringApplication(ResourceLoader, Class...)_@see #setSources(Set);public SpringApplication(Class<?>... primarySources) {_		this(null, primarySources)__	};create,a,new,link,spring,application,instance,the,application,context,will,load,beans,from,the,specified,primary,sources,see,link,spring,application,class,level,documentation,for,details,the,instance,can,be,customized,before,calling,link,run,string,param,primary,sources,the,primary,bean,sources,see,run,class,string,see,spring,application,resource,loader,class,see,set,sources,set;public,spring,application,class,primary,sources,this,null,primary,sources
SpringApplication -> public SpringApplication(Class<?>... primarySources);1526993305;Create a new {@link SpringApplication} instance. The application context will load_beans from the specified primary sources (see {@link SpringApplication class-level}_documentation for details. The instance can be customized before calling_{@link #run(String...)}._@param primarySources the primary bean sources_@see #run(Class, String[])_@see #SpringApplication(ResourceLoader, Class...)_@see #setSources(Set);public SpringApplication(Class<?>... primarySources) {_		this(null, primarySources)__	};create,a,new,link,spring,application,instance,the,application,context,will,load,beans,from,the,specified,primary,sources,see,link,spring,application,class,level,documentation,for,details,the,instance,can,be,customized,before,calling,link,run,string,param,primary,sources,the,primary,bean,sources,see,run,class,string,see,spring,application,resource,loader,class,see,set,sources,set;public,spring,application,class,primary,sources,this,null,primary,sources
SpringApplication -> public SpringApplication(Class<?>... primarySources);1529485904;Create a new {@link SpringApplication} instance. The application context will load_beans from the specified primary sources (see {@link SpringApplication class-level}_documentation for details. The instance can be customized before calling_{@link #run(String...)}._@param primarySources the primary bean sources_@see #run(Class, String[])_@see #SpringApplication(ResourceLoader, Class...)_@see #setSources(Set);public SpringApplication(Class<?>... primarySources) {_		this(null, primarySources)__	};create,a,new,link,spring,application,instance,the,application,context,will,load,beans,from,the,specified,primary,sources,see,link,spring,application,class,level,documentation,for,details,the,instance,can,be,customized,before,calling,link,run,string,param,primary,sources,the,primary,bean,sources,see,run,class,string,see,spring,application,resource,loader,class,see,set,sources,set;public,spring,application,class,primary,sources,this,null,primary,sources
SpringApplication -> public SpringApplication(Class<?>... primarySources);1531140616;Create a new {@link SpringApplication} instance. The application context will load_beans from the specified primary sources (see {@link SpringApplication class-level}_documentation for details. The instance can be customized before calling_{@link #run(String...)}._@param primarySources the primary bean sources_@see #run(Class, String[])_@see #SpringApplication(ResourceLoader, Class...)_@see #setSources(Set);public SpringApplication(Class<?>... primarySources) {_		this(null, primarySources)__	};create,a,new,link,spring,application,instance,the,application,context,will,load,beans,from,the,specified,primary,sources,see,link,spring,application,class,level,documentation,for,details,the,instance,can,be,customized,before,calling,link,run,string,param,primary,sources,the,primary,bean,sources,see,run,class,string,see,spring,application,resource,loader,class,see,set,sources,set;public,spring,application,class,primary,sources,this,null,primary,sources
SpringApplication -> public SpringApplication(Class<?>... primarySources);1531155529;Create a new {@link SpringApplication} instance. The application context will load_beans from the specified primary sources (see {@link SpringApplication class-level}_documentation for details. The instance can be customized before calling_{@link #run(String...)}._@param primarySources the primary bean sources_@see #run(Class, String[])_@see #SpringApplication(ResourceLoader, Class...)_@see #setSources(Set);public SpringApplication(Class<?>... primarySources) {_		this(null, primarySources)__	};create,a,new,link,spring,application,instance,the,application,context,will,load,beans,from,the,specified,primary,sources,see,link,spring,application,class,level,documentation,for,details,the,instance,can,be,customized,before,calling,link,run,string,param,primary,sources,the,primary,bean,sources,see,run,class,string,see,spring,application,resource,loader,class,see,set,sources,set;public,spring,application,class,primary,sources,this,null,primary,sources
SpringApplication -> public SpringApplication(Class<?>... primarySources);1531222098;Create a new {@link SpringApplication} instance. The application context will load_beans from the specified primary sources (see {@link SpringApplication class-level}_documentation for details. The instance can be customized before calling_{@link #run(String...)}._@param primarySources the primary bean sources_@see #run(Class, String[])_@see #SpringApplication(ResourceLoader, Class...)_@see #setSources(Set);public SpringApplication(Class<?>... primarySources) {_		this(null, primarySources)__	};create,a,new,link,spring,application,instance,the,application,context,will,load,beans,from,the,specified,primary,sources,see,link,spring,application,class,level,documentation,for,details,the,instance,can,be,customized,before,calling,link,run,string,param,primary,sources,the,primary,bean,sources,see,run,class,string,see,spring,application,resource,loader,class,see,set,sources,set;public,spring,application,class,primary,sources,this,null,primary,sources
SpringApplication -> public SpringApplication(Class<?>... primarySources);1532738143;Create a new {@link SpringApplication} instance. The application context will load_beans from the specified primary sources (see {@link SpringApplication class-level}_documentation for details. The instance can be customized before calling_{@link #run(String...)}._@param primarySources the primary bean sources_@see #run(Class, String[])_@see #SpringApplication(ResourceLoader, Class...)_@see #setSources(Set);public SpringApplication(Class<?>... primarySources) {_		this(null, primarySources)__	};create,a,new,link,spring,application,instance,the,application,context,will,load,beans,from,the,specified,primary,sources,see,link,spring,application,class,level,documentation,for,details,the,instance,can,be,customized,before,calling,link,run,string,param,primary,sources,the,primary,bean,sources,see,run,class,string,see,spring,application,resource,loader,class,see,set,sources,set;public,spring,application,class,primary,sources,this,null,primary,sources
SpringApplication -> public SpringApplication(Class<?>... primarySources);1534188228;Create a new {@link SpringApplication} instance. The application context will load_beans from the specified primary sources (see {@link SpringApplication class-level}_documentation for details. The instance can be customized before calling_{@link #run(String...)}._@param primarySources the primary bean sources_@see #run(Class, String[])_@see #SpringApplication(ResourceLoader, Class...)_@see #setSources(Set);public SpringApplication(Class<?>... primarySources) {_		this(null, primarySources)__	};create,a,new,link,spring,application,instance,the,application,context,will,load,beans,from,the,specified,primary,sources,see,link,spring,application,class,level,documentation,for,details,the,instance,can,be,customized,before,calling,link,run,string,param,primary,sources,the,primary,bean,sources,see,run,class,string,see,spring,application,resource,loader,class,see,set,sources,set;public,spring,application,class,primary,sources,this,null,primary,sources
SpringApplication -> public SpringApplication(Class<?>... primarySources);1535104170;Create a new {@link SpringApplication} instance. The application context will load_beans from the specified primary sources (see {@link SpringApplication class-level}_documentation for details. The instance can be customized before calling_{@link #run(String...)}._@param primarySources the primary bean sources_@see #run(Class, String[])_@see #SpringApplication(ResourceLoader, Class...)_@see #setSources(Set);public SpringApplication(Class<?>... primarySources) {_		this(null, primarySources)__	};create,a,new,link,spring,application,instance,the,application,context,will,load,beans,from,the,specified,primary,sources,see,link,spring,application,class,level,documentation,for,details,the,instance,can,be,customized,before,calling,link,run,string,param,primary,sources,the,primary,bean,sources,see,run,class,string,see,spring,application,resource,loader,class,see,set,sources,set;public,spring,application,class,primary,sources,this,null,primary,sources
SpringApplication -> public SpringApplication(Class<?>... primarySources);1536701067;Create a new {@link SpringApplication} instance. The application context will load_beans from the specified primary sources (see {@link SpringApplication class-level}_documentation for details. The instance can be customized before calling_{@link #run(String...)}._@param primarySources the primary bean sources_@see #run(Class, String[])_@see #SpringApplication(ResourceLoader, Class...)_@see #setSources(Set);public SpringApplication(Class<?>... primarySources) {_		this(null, primarySources)__	};create,a,new,link,spring,application,instance,the,application,context,will,load,beans,from,the,specified,primary,sources,see,link,spring,application,class,level,documentation,for,details,the,instance,can,be,customized,before,calling,link,run,string,param,primary,sources,the,primary,bean,sources,see,run,class,string,see,spring,application,resource,loader,class,see,set,sources,set;public,spring,application,class,primary,sources,this,null,primary,sources
SpringApplication -> public SpringApplication(Class<?>... primarySources);1538570355;Create a new {@link SpringApplication} instance. The application context will load_beans from the specified primary sources (see {@link SpringApplication class-level}_documentation for details. The instance can be customized before calling_{@link #run(String...)}._@param primarySources the primary bean sources_@see #run(Class, String[])_@see #SpringApplication(ResourceLoader, Class...)_@see #setSources(Set);public SpringApplication(Class<?>... primarySources) {_		this(null, primarySources)__	};create,a,new,link,spring,application,instance,the,application,context,will,load,beans,from,the,specified,primary,sources,see,link,spring,application,class,level,documentation,for,details,the,instance,can,be,customized,before,calling,link,run,string,param,primary,sources,the,primary,bean,sources,see,run,class,string,see,spring,application,resource,loader,class,see,set,sources,set;public,spring,application,class,primary,sources,this,null,primary,sources
SpringApplication -> public SpringApplication(Class<?>... primarySources);1538707540;Create a new {@link SpringApplication} instance. The application context will load_beans from the specified primary sources (see {@link SpringApplication class-level}_documentation for details. The instance can be customized before calling_{@link #run(String...)}._@param primarySources the primary bean sources_@see #run(Class, String[])_@see #SpringApplication(ResourceLoader, Class...)_@see #setSources(Set);public SpringApplication(Class<?>... primarySources) {_		this(null, primarySources)__	};create,a,new,link,spring,application,instance,the,application,context,will,load,beans,from,the,specified,primary,sources,see,link,spring,application,class,level,documentation,for,details,the,instance,can,be,customized,before,calling,link,run,string,param,primary,sources,the,primary,bean,sources,see,run,class,string,see,spring,application,resource,loader,class,see,set,sources,set;public,spring,application,class,primary,sources,this,null,primary,sources
SpringApplication -> public SpringApplication(Class<?>... primarySources);1538750610;Create a new {@link SpringApplication} instance. The application context will load_beans from the specified primary sources (see {@link SpringApplication class-level}_documentation for details. The instance can be customized before calling_{@link #run(String...)}._@param primarySources the primary bean sources_@see #run(Class, String[])_@see #SpringApplication(ResourceLoader, Class...)_@see #setSources(Set);public SpringApplication(Class<?>... primarySources) {_		this(null, primarySources)__	};create,a,new,link,spring,application,instance,the,application,context,will,load,beans,from,the,specified,primary,sources,see,link,spring,application,class,level,documentation,for,details,the,instance,can,be,customized,before,calling,link,run,string,param,primary,sources,the,primary,bean,sources,see,run,class,string,see,spring,application,resource,loader,class,see,set,sources,set;public,spring,application,class,primary,sources,this,null,primary,sources
SpringApplication -> public SpringApplication(Class<?>... primarySources);1538771652;Create a new {@link SpringApplication} instance. The application context will load_beans from the specified primary sources (see {@link SpringApplication class-level}_documentation for details. The instance can be customized before calling_{@link #run(String...)}._@param primarySources the primary bean sources_@see #run(Class, String[])_@see #SpringApplication(ResourceLoader, Class...)_@see #setSources(Set);public SpringApplication(Class<?>... primarySources) {_		this(null, primarySources)__	};create,a,new,link,spring,application,instance,the,application,context,will,load,beans,from,the,specified,primary,sources,see,link,spring,application,class,level,documentation,for,details,the,instance,can,be,customized,before,calling,link,run,string,param,primary,sources,the,primary,bean,sources,see,run,class,string,see,spring,application,resource,loader,class,see,set,sources,set;public,spring,application,class,primary,sources,this,null,primary,sources
SpringApplication -> public SpringApplication(Class<?>... primarySources);1540419762;Create a new {@link SpringApplication} instance. The application context will load_beans from the specified primary sources (see {@link SpringApplication class-level}_documentation for details. The instance can be customized before calling_{@link #run(String...)}._@param primarySources the primary bean sources_@see #run(Class, String[])_@see #SpringApplication(ResourceLoader, Class...)_@see #setSources(Set);public SpringApplication(Class<?>... primarySources) {_		this(null, primarySources)__	};create,a,new,link,spring,application,instance,the,application,context,will,load,beans,from,the,specified,primary,sources,see,link,spring,application,class,level,documentation,for,details,the,instance,can,be,customized,before,calling,link,run,string,param,primary,sources,the,primary,bean,sources,see,run,class,string,see,spring,application,resource,loader,class,see,set,sources,set;public,spring,application,class,primary,sources,this,null,primary,sources
SpringApplication -> public SpringApplication(Class<?>... primarySources);1541060131;Create a new {@link SpringApplication} instance. The application context will load_beans from the specified primary sources (see {@link SpringApplication class-level}_documentation for details. The instance can be customized before calling_{@link #run(String...)}._@param primarySources the primary bean sources_@see #run(Class, String[])_@see #SpringApplication(ResourceLoader, Class...)_@see #setSources(Set);public SpringApplication(Class<?>... primarySources) {_		this(null, primarySources)__	};create,a,new,link,spring,application,instance,the,application,context,will,load,beans,from,the,specified,primary,sources,see,link,spring,application,class,level,documentation,for,details,the,instance,can,be,customized,before,calling,link,run,string,param,primary,sources,the,primary,bean,sources,see,run,class,string,see,spring,application,resource,loader,class,see,set,sources,set;public,spring,application,class,primary,sources,this,null,primary,sources
SpringApplication -> public SpringApplication(Class<?>... primarySources);1546943477;Create a new {@link SpringApplication} instance. The application context will load_beans from the specified primary sources (see {@link SpringApplication class-level}_documentation for details. The instance can be customized before calling_{@link #run(String...)}._@param primarySources the primary bean sources_@see #run(Class, String[])_@see #SpringApplication(ResourceLoader, Class...)_@see #setSources(Set);public SpringApplication(Class<?>... primarySources) {_		this(null, primarySources)__	};create,a,new,link,spring,application,instance,the,application,context,will,load,beans,from,the,specified,primary,sources,see,link,spring,application,class,level,documentation,for,details,the,instance,can,be,customized,before,calling,link,run,string,param,primary,sources,the,primary,bean,sources,see,run,class,string,see,spring,application,resource,loader,class,see,set,sources,set;public,spring,application,class,primary,sources,this,null,primary,sources
SpringApplication -> public SpringApplication(Class<?>... primarySources);1549791353;Create a new {@link SpringApplication} instance. The application context will load_beans from the specified primary sources (see {@link SpringApplication class-level}_documentation for details. The instance can be customized before calling_{@link #run(String...)}._@param primarySources the primary bean sources_@see #run(Class, String[])_@see #SpringApplication(ResourceLoader, Class...)_@see #setSources(Set);public SpringApplication(Class<?>... primarySources) {_		this(null, primarySources)__	};create,a,new,link,spring,application,instance,the,application,context,will,load,beans,from,the,specified,primary,sources,see,link,spring,application,class,level,documentation,for,details,the,instance,can,be,customized,before,calling,link,run,string,param,primary,sources,the,primary,bean,sources,see,run,class,string,see,spring,application,resource,loader,class,see,set,sources,set;public,spring,application,class,primary,sources,this,null,primary,sources
SpringApplication -> public SpringApplication(Class<?>... primarySources);1550148109;Create a new {@link SpringApplication} instance. The application context will load_beans from the specified primary sources (see {@link SpringApplication class-level}_documentation for details. The instance can be customized before calling_{@link #run(String...)}._@param primarySources the primary bean sources_@see #run(Class, String[])_@see #SpringApplication(ResourceLoader, Class...)_@see #setSources(Set);public SpringApplication(Class<?>... primarySources) {_		this(null, primarySources)__	};create,a,new,link,spring,application,instance,the,application,context,will,load,beans,from,the,specified,primary,sources,see,link,spring,application,class,level,documentation,for,details,the,instance,can,be,customized,before,calling,link,run,string,param,primary,sources,the,primary,bean,sources,see,run,class,string,see,spring,application,resource,loader,class,see,set,sources,set;public,spring,application,class,primary,sources,this,null,primary,sources
SpringApplication -> public void addListeners(ApplicationListener<?>... listeners);1507173536;Add {@link ApplicationListener}s to be applied to the SpringApplication and_registered with the {@link ApplicationContext}._@param listeners the listeners to add;public void addListeners(ApplicationListener<?>... listeners) {_		this.listeners.addAll(Arrays.asList(listeners))__	};add,link,application,listener,s,to,be,applied,to,the,spring,application,and,registered,with,the,link,application,context,param,listeners,the,listeners,to,add;public,void,add,listeners,application,listener,listeners,this,listeners,add,all,arrays,as,list,listeners
SpringApplication -> public void addListeners(ApplicationListener<?>... listeners);1509381678;Add {@link ApplicationListener}s to be applied to the SpringApplication and_registered with the {@link ApplicationContext}._@param listeners the listeners to add;public void addListeners(ApplicationListener<?>... listeners) {_		this.listeners.addAll(Arrays.asList(listeners))__	};add,link,application,listener,s,to,be,applied,to,the,spring,application,and,registered,with,the,link,application,context,param,listeners,the,listeners,to,add;public,void,add,listeners,application,listener,listeners,this,listeners,add,all,arrays,as,list,listeners
SpringApplication -> public void addListeners(ApplicationListener<?>... listeners);1510995225;Add {@link ApplicationListener}s to be applied to the SpringApplication and_registered with the {@link ApplicationContext}._@param listeners the listeners to add;public void addListeners(ApplicationListener<?>... listeners) {_		this.listeners.addAll(Arrays.asList(listeners))__	};add,link,application,listener,s,to,be,applied,to,the,spring,application,and,registered,with,the,link,application,context,param,listeners,the,listeners,to,add;public,void,add,listeners,application,listener,listeners,this,listeners,add,all,arrays,as,list,listeners
SpringApplication -> public void addListeners(ApplicationListener<?>... listeners);1515670013;Add {@link ApplicationListener}s to be applied to the SpringApplication and_registered with the {@link ApplicationContext}._@param listeners the listeners to add;public void addListeners(ApplicationListener<?>... listeners) {_		this.listeners.addAll(Arrays.asList(listeners))__	};add,link,application,listener,s,to,be,applied,to,the,spring,application,and,registered,with,the,link,application,context,param,listeners,the,listeners,to,add;public,void,add,listeners,application,listener,listeners,this,listeners,add,all,arrays,as,list,listeners
SpringApplication -> public void addListeners(ApplicationListener<?>... listeners);1519362690;Add {@link ApplicationListener}s to be applied to the SpringApplication and_registered with the {@link ApplicationContext}._@param listeners the listeners to add;public void addListeners(ApplicationListener<?>... listeners) {_		this.listeners.addAll(Arrays.asList(listeners))__	};add,link,application,listener,s,to,be,applied,to,the,spring,application,and,registered,with,the,link,application,context,param,listeners,the,listeners,to,add;public,void,add,listeners,application,listener,listeners,this,listeners,add,all,arrays,as,list,listeners
SpringApplication -> public void addListeners(ApplicationListener<?>... listeners);1522251721;Add {@link ApplicationListener}s to be applied to the SpringApplication and_registered with the {@link ApplicationContext}._@param listeners the listeners to add;public void addListeners(ApplicationListener<?>... listeners) {_		this.listeners.addAll(Arrays.asList(listeners))__	};add,link,application,listener,s,to,be,applied,to,the,spring,application,and,registered,with,the,link,application,context,param,listeners,the,listeners,to,add;public,void,add,listeners,application,listener,listeners,this,listeners,add,all,arrays,as,list,listeners
SpringApplication -> public void addListeners(ApplicationListener<?>... listeners);1525376698;Add {@link ApplicationListener}s to be applied to the SpringApplication and_registered with the {@link ApplicationContext}._@param listeners the listeners to add;public void addListeners(ApplicationListener<?>... listeners) {_		this.listeners.addAll(Arrays.asList(listeners))__	};add,link,application,listener,s,to,be,applied,to,the,spring,application,and,registered,with,the,link,application,context,param,listeners,the,listeners,to,add;public,void,add,listeners,application,listener,listeners,this,listeners,add,all,arrays,as,list,listeners
SpringApplication -> public void addListeners(ApplicationListener<?>... listeners);1525416882;Add {@link ApplicationListener}s to be applied to the SpringApplication and_registered with the {@link ApplicationContext}._@param listeners the listeners to add;public void addListeners(ApplicationListener<?>... listeners) {_		this.listeners.addAll(Arrays.asList(listeners))__	};add,link,application,listener,s,to,be,applied,to,the,spring,application,and,registered,with,the,link,application,context,param,listeners,the,listeners,to,add;public,void,add,listeners,application,listener,listeners,this,listeners,add,all,arrays,as,list,listeners
SpringApplication -> public void addListeners(ApplicationListener<?>... listeners);1526993305;Add {@link ApplicationListener}s to be applied to the SpringApplication and_registered with the {@link ApplicationContext}._@param listeners the listeners to add;public void addListeners(ApplicationListener<?>... listeners) {_		this.listeners.addAll(Arrays.asList(listeners))__	};add,link,application,listener,s,to,be,applied,to,the,spring,application,and,registered,with,the,link,application,context,param,listeners,the,listeners,to,add;public,void,add,listeners,application,listener,listeners,this,listeners,add,all,arrays,as,list,listeners
SpringApplication -> public void addListeners(ApplicationListener<?>... listeners);1529485904;Add {@link ApplicationListener}s to be applied to the SpringApplication and_registered with the {@link ApplicationContext}._@param listeners the listeners to add;public void addListeners(ApplicationListener<?>... listeners) {_		this.listeners.addAll(Arrays.asList(listeners))__	};add,link,application,listener,s,to,be,applied,to,the,spring,application,and,registered,with,the,link,application,context,param,listeners,the,listeners,to,add;public,void,add,listeners,application,listener,listeners,this,listeners,add,all,arrays,as,list,listeners
SpringApplication -> public void addListeners(ApplicationListener<?>... listeners);1531140616;Add {@link ApplicationListener}s to be applied to the SpringApplication and_registered with the {@link ApplicationContext}._@param listeners the listeners to add;public void addListeners(ApplicationListener<?>... listeners) {_		this.listeners.addAll(Arrays.asList(listeners))__	};add,link,application,listener,s,to,be,applied,to,the,spring,application,and,registered,with,the,link,application,context,param,listeners,the,listeners,to,add;public,void,add,listeners,application,listener,listeners,this,listeners,add,all,arrays,as,list,listeners
SpringApplication -> public void addListeners(ApplicationListener<?>... listeners);1531155529;Add {@link ApplicationListener}s to be applied to the SpringApplication and_registered with the {@link ApplicationContext}._@param listeners the listeners to add;public void addListeners(ApplicationListener<?>... listeners) {_		this.listeners.addAll(Arrays.asList(listeners))__	};add,link,application,listener,s,to,be,applied,to,the,spring,application,and,registered,with,the,link,application,context,param,listeners,the,listeners,to,add;public,void,add,listeners,application,listener,listeners,this,listeners,add,all,arrays,as,list,listeners
SpringApplication -> public void addListeners(ApplicationListener<?>... listeners);1531222098;Add {@link ApplicationListener}s to be applied to the SpringApplication and_registered with the {@link ApplicationContext}._@param listeners the listeners to add;public void addListeners(ApplicationListener<?>... listeners) {_		this.listeners.addAll(Arrays.asList(listeners))__	};add,link,application,listener,s,to,be,applied,to,the,spring,application,and,registered,with,the,link,application,context,param,listeners,the,listeners,to,add;public,void,add,listeners,application,listener,listeners,this,listeners,add,all,arrays,as,list,listeners
SpringApplication -> public void addListeners(ApplicationListener<?>... listeners);1532738143;Add {@link ApplicationListener}s to be applied to the SpringApplication and_registered with the {@link ApplicationContext}._@param listeners the listeners to add;public void addListeners(ApplicationListener<?>... listeners) {_		this.listeners.addAll(Arrays.asList(listeners))__	};add,link,application,listener,s,to,be,applied,to,the,spring,application,and,registered,with,the,link,application,context,param,listeners,the,listeners,to,add;public,void,add,listeners,application,listener,listeners,this,listeners,add,all,arrays,as,list,listeners
SpringApplication -> public void addListeners(ApplicationListener<?>... listeners);1534188228;Add {@link ApplicationListener}s to be applied to the SpringApplication and_registered with the {@link ApplicationContext}._@param listeners the listeners to add;public void addListeners(ApplicationListener<?>... listeners) {_		this.listeners.addAll(Arrays.asList(listeners))__	};add,link,application,listener,s,to,be,applied,to,the,spring,application,and,registered,with,the,link,application,context,param,listeners,the,listeners,to,add;public,void,add,listeners,application,listener,listeners,this,listeners,add,all,arrays,as,list,listeners
SpringApplication -> public void addListeners(ApplicationListener<?>... listeners);1535104170;Add {@link ApplicationListener}s to be applied to the SpringApplication and_registered with the {@link ApplicationContext}._@param listeners the listeners to add;public void addListeners(ApplicationListener<?>... listeners) {_		this.listeners.addAll(Arrays.asList(listeners))__	};add,link,application,listener,s,to,be,applied,to,the,spring,application,and,registered,with,the,link,application,context,param,listeners,the,listeners,to,add;public,void,add,listeners,application,listener,listeners,this,listeners,add,all,arrays,as,list,listeners
SpringApplication -> public void addListeners(ApplicationListener<?>... listeners);1536701067;Add {@link ApplicationListener}s to be applied to the SpringApplication and_registered with the {@link ApplicationContext}._@param listeners the listeners to add;public void addListeners(ApplicationListener<?>... listeners) {_		this.listeners.addAll(Arrays.asList(listeners))__	};add,link,application,listener,s,to,be,applied,to,the,spring,application,and,registered,with,the,link,application,context,param,listeners,the,listeners,to,add;public,void,add,listeners,application,listener,listeners,this,listeners,add,all,arrays,as,list,listeners
SpringApplication -> public void addListeners(ApplicationListener<?>... listeners);1538570355;Add {@link ApplicationListener}s to be applied to the SpringApplication and_registered with the {@link ApplicationContext}._@param listeners the listeners to add;public void addListeners(ApplicationListener<?>... listeners) {_		this.listeners.addAll(Arrays.asList(listeners))__	};add,link,application,listener,s,to,be,applied,to,the,spring,application,and,registered,with,the,link,application,context,param,listeners,the,listeners,to,add;public,void,add,listeners,application,listener,listeners,this,listeners,add,all,arrays,as,list,listeners
SpringApplication -> public void addListeners(ApplicationListener<?>... listeners);1538707540;Add {@link ApplicationListener}s to be applied to the SpringApplication and_registered with the {@link ApplicationContext}._@param listeners the listeners to add;public void addListeners(ApplicationListener<?>... listeners) {_		this.listeners.addAll(Arrays.asList(listeners))__	};add,link,application,listener,s,to,be,applied,to,the,spring,application,and,registered,with,the,link,application,context,param,listeners,the,listeners,to,add;public,void,add,listeners,application,listener,listeners,this,listeners,add,all,arrays,as,list,listeners
SpringApplication -> public void addListeners(ApplicationListener<?>... listeners);1538750610;Add {@link ApplicationListener}s to be applied to the SpringApplication and_registered with the {@link ApplicationContext}._@param listeners the listeners to add;public void addListeners(ApplicationListener<?>... listeners) {_		this.listeners.addAll(Arrays.asList(listeners))__	};add,link,application,listener,s,to,be,applied,to,the,spring,application,and,registered,with,the,link,application,context,param,listeners,the,listeners,to,add;public,void,add,listeners,application,listener,listeners,this,listeners,add,all,arrays,as,list,listeners
SpringApplication -> public void addListeners(ApplicationListener<?>... listeners);1538771652;Add {@link ApplicationListener}s to be applied to the SpringApplication and_registered with the {@link ApplicationContext}._@param listeners the listeners to add;public void addListeners(ApplicationListener<?>... listeners) {_		this.listeners.addAll(Arrays.asList(listeners))__	};add,link,application,listener,s,to,be,applied,to,the,spring,application,and,registered,with,the,link,application,context,param,listeners,the,listeners,to,add;public,void,add,listeners,application,listener,listeners,this,listeners,add,all,arrays,as,list,listeners
SpringApplication -> public void addListeners(ApplicationListener<?>... listeners);1540419762;Add {@link ApplicationListener}s to be applied to the SpringApplication and_registered with the {@link ApplicationContext}._@param listeners the listeners to add;public void addListeners(ApplicationListener<?>... listeners) {_		this.listeners.addAll(Arrays.asList(listeners))__	};add,link,application,listener,s,to,be,applied,to,the,spring,application,and,registered,with,the,link,application,context,param,listeners,the,listeners,to,add;public,void,add,listeners,application,listener,listeners,this,listeners,add,all,arrays,as,list,listeners
SpringApplication -> public void addListeners(ApplicationListener<?>... listeners);1541060131;Add {@link ApplicationListener}s to be applied to the SpringApplication and_registered with the {@link ApplicationContext}._@param listeners the listeners to add;public void addListeners(ApplicationListener<?>... listeners) {_		this.listeners.addAll(Arrays.asList(listeners))__	};add,link,application,listener,s,to,be,applied,to,the,spring,application,and,registered,with,the,link,application,context,param,listeners,the,listeners,to,add;public,void,add,listeners,application,listener,listeners,this,listeners,add,all,arrays,as,list,listeners
SpringApplication -> public void addListeners(ApplicationListener<?>... listeners);1546943477;Add {@link ApplicationListener}s to be applied to the SpringApplication and_registered with the {@link ApplicationContext}._@param listeners the listeners to add;public void addListeners(ApplicationListener<?>... listeners) {_		this.listeners.addAll(Arrays.asList(listeners))__	};add,link,application,listener,s,to,be,applied,to,the,spring,application,and,registered,with,the,link,application,context,param,listeners,the,listeners,to,add;public,void,add,listeners,application,listener,listeners,this,listeners,add,all,arrays,as,list,listeners
SpringApplication -> public void addListeners(ApplicationListener<?>... listeners);1549791353;Add {@link ApplicationListener}s to be applied to the SpringApplication and_registered with the {@link ApplicationContext}._@param listeners the listeners to add;public void addListeners(ApplicationListener<?>... listeners) {_		this.listeners.addAll(Arrays.asList(listeners))__	};add,link,application,listener,s,to,be,applied,to,the,spring,application,and,registered,with,the,link,application,context,param,listeners,the,listeners,to,add;public,void,add,listeners,application,listener,listeners,this,listeners,add,all,arrays,as,list,listeners
SpringApplication -> public void addListeners(ApplicationListener<?>... listeners);1550148109;Add {@link ApplicationListener}s to be applied to the SpringApplication and_registered with the {@link ApplicationContext}._@param listeners the listeners to add;public void addListeners(ApplicationListener<?>... listeners) {_		this.listeners.addAll(Arrays.asList(listeners))__	};add,link,application,listener,s,to,be,applied,to,the,spring,application,and,registered,with,the,link,application,context,param,listeners,the,listeners,to,add;public,void,add,listeners,application,listener,listeners,this,listeners,add,all,arrays,as,list,listeners
SpringApplication -> public Set<Object> getAllSources();1507173536;Return an immutable set of all the sources that will be added to an_ApplicationContext when {@link #run(String...)} is called. This method combines any_primary sources specified in the constructor with any additional ones that have_been {@link #setSources(Set) explicitly set}._@return an immutable set of all sources;public Set<Object> getAllSources() {_		Set<Object> allSources = new LinkedHashSet<>()__		if (!CollectionUtils.isEmpty(this.primarySources)) {_			allSources.addAll(this.primarySources)__		}_		if (!CollectionUtils.isEmpty(this.sources)) {_			allSources.addAll(this.sources)__		}_		return Collections.unmodifiableSet(allSources)__	};return,an,immutable,set,of,all,the,sources,that,will,be,added,to,an,application,context,when,link,run,string,is,called,this,method,combines,any,primary,sources,specified,in,the,constructor,with,any,additional,ones,that,have,been,link,set,sources,set,explicitly,set,return,an,immutable,set,of,all,sources;public,set,object,get,all,sources,set,object,all,sources,new,linked,hash,set,if,collection,utils,is,empty,this,primary,sources,all,sources,add,all,this,primary,sources,if,collection,utils,is,empty,this,sources,all,sources,add,all,this,sources,return,collections,unmodifiable,set,all,sources
SpringApplication -> public Set<Object> getAllSources();1509381678;Return an immutable set of all the sources that will be added to an_ApplicationContext when {@link #run(String...)} is called. This method combines any_primary sources specified in the constructor with any additional ones that have_been {@link #setSources(Set) explicitly set}._@return an immutable set of all sources;public Set<Object> getAllSources() {_		Set<Object> allSources = new LinkedHashSet<>()__		if (!CollectionUtils.isEmpty(this.primarySources)) {_			allSources.addAll(this.primarySources)__		}_		if (!CollectionUtils.isEmpty(this.sources)) {_			allSources.addAll(this.sources)__		}_		return Collections.unmodifiableSet(allSources)__	};return,an,immutable,set,of,all,the,sources,that,will,be,added,to,an,application,context,when,link,run,string,is,called,this,method,combines,any,primary,sources,specified,in,the,constructor,with,any,additional,ones,that,have,been,link,set,sources,set,explicitly,set,return,an,immutable,set,of,all,sources;public,set,object,get,all,sources,set,object,all,sources,new,linked,hash,set,if,collection,utils,is,empty,this,primary,sources,all,sources,add,all,this,primary,sources,if,collection,utils,is,empty,this,sources,all,sources,add,all,this,sources,return,collections,unmodifiable,set,all,sources
SpringApplication -> public Set<Object> getAllSources();1510995225;Return an immutable set of all the sources that will be added to an_ApplicationContext when {@link #run(String...)} is called. This method combines any_primary sources specified in the constructor with any additional ones that have_been {@link #setSources(Set) explicitly set}._@return an immutable set of all sources;public Set<Object> getAllSources() {_		Set<Object> allSources = new LinkedHashSet<>()__		if (!CollectionUtils.isEmpty(this.primarySources)) {_			allSources.addAll(this.primarySources)__		}_		if (!CollectionUtils.isEmpty(this.sources)) {_			allSources.addAll(this.sources)__		}_		return Collections.unmodifiableSet(allSources)__	};return,an,immutable,set,of,all,the,sources,that,will,be,added,to,an,application,context,when,link,run,string,is,called,this,method,combines,any,primary,sources,specified,in,the,constructor,with,any,additional,ones,that,have,been,link,set,sources,set,explicitly,set,return,an,immutable,set,of,all,sources;public,set,object,get,all,sources,set,object,all,sources,new,linked,hash,set,if,collection,utils,is,empty,this,primary,sources,all,sources,add,all,this,primary,sources,if,collection,utils,is,empty,this,sources,all,sources,add,all,this,sources,return,collections,unmodifiable,set,all,sources
SpringApplication -> public Set<Object> getAllSources();1515670013;Return an immutable set of all the sources that will be added to an_ApplicationContext when {@link #run(String...)} is called. This method combines any_primary sources specified in the constructor with any additional ones that have_been {@link #setSources(Set) explicitly set}._@return an immutable set of all sources;public Set<Object> getAllSources() {_		Set<Object> allSources = new LinkedHashSet<>()__		if (!CollectionUtils.isEmpty(this.primarySources)) {_			allSources.addAll(this.primarySources)__		}_		if (!CollectionUtils.isEmpty(this.sources)) {_			allSources.addAll(this.sources)__		}_		return Collections.unmodifiableSet(allSources)__	};return,an,immutable,set,of,all,the,sources,that,will,be,added,to,an,application,context,when,link,run,string,is,called,this,method,combines,any,primary,sources,specified,in,the,constructor,with,any,additional,ones,that,have,been,link,set,sources,set,explicitly,set,return,an,immutable,set,of,all,sources;public,set,object,get,all,sources,set,object,all,sources,new,linked,hash,set,if,collection,utils,is,empty,this,primary,sources,all,sources,add,all,this,primary,sources,if,collection,utils,is,empty,this,sources,all,sources,add,all,this,sources,return,collections,unmodifiable,set,all,sources
SpringApplication -> public Set<Object> getAllSources();1519362690;Return an immutable set of all the sources that will be added to an_ApplicationContext when {@link #run(String...)} is called. This method combines any_primary sources specified in the constructor with any additional ones that have_been {@link #setSources(Set) explicitly set}._@return an immutable set of all sources;public Set<Object> getAllSources() {_		Set<Object> allSources = new LinkedHashSet<>()__		if (!CollectionUtils.isEmpty(this.primarySources)) {_			allSources.addAll(this.primarySources)__		}_		if (!CollectionUtils.isEmpty(this.sources)) {_			allSources.addAll(this.sources)__		}_		return Collections.unmodifiableSet(allSources)__	};return,an,immutable,set,of,all,the,sources,that,will,be,added,to,an,application,context,when,link,run,string,is,called,this,method,combines,any,primary,sources,specified,in,the,constructor,with,any,additional,ones,that,have,been,link,set,sources,set,explicitly,set,return,an,immutable,set,of,all,sources;public,set,object,get,all,sources,set,object,all,sources,new,linked,hash,set,if,collection,utils,is,empty,this,primary,sources,all,sources,add,all,this,primary,sources,if,collection,utils,is,empty,this,sources,all,sources,add,all,this,sources,return,collections,unmodifiable,set,all,sources
SpringApplication -> public Set<Object> getAllSources();1522251721;Return an immutable set of all the sources that will be added to an_ApplicationContext when {@link #run(String...)} is called. This method combines any_primary sources specified in the constructor with any additional ones that have_been {@link #setSources(Set) explicitly set}._@return an immutable set of all sources;public Set<Object> getAllSources() {_		Set<Object> allSources = new LinkedHashSet<>()__		if (!CollectionUtils.isEmpty(this.primarySources)) {_			allSources.addAll(this.primarySources)__		}_		if (!CollectionUtils.isEmpty(this.sources)) {_			allSources.addAll(this.sources)__		}_		return Collections.unmodifiableSet(allSources)__	};return,an,immutable,set,of,all,the,sources,that,will,be,added,to,an,application,context,when,link,run,string,is,called,this,method,combines,any,primary,sources,specified,in,the,constructor,with,any,additional,ones,that,have,been,link,set,sources,set,explicitly,set,return,an,immutable,set,of,all,sources;public,set,object,get,all,sources,set,object,all,sources,new,linked,hash,set,if,collection,utils,is,empty,this,primary,sources,all,sources,add,all,this,primary,sources,if,collection,utils,is,empty,this,sources,all,sources,add,all,this,sources,return,collections,unmodifiable,set,all,sources
SpringApplication -> public Set<Object> getAllSources();1525376698;Return an immutable set of all the sources that will be added to an_ApplicationContext when {@link #run(String...)} is called. This method combines any_primary sources specified in the constructor with any additional ones that have_been {@link #setSources(Set) explicitly set}._@return an immutable set of all sources;public Set<Object> getAllSources() {_		Set<Object> allSources = new LinkedHashSet<>()__		if (!CollectionUtils.isEmpty(this.primarySources)) {_			allSources.addAll(this.primarySources)__		}_		if (!CollectionUtils.isEmpty(this.sources)) {_			allSources.addAll(this.sources)__		}_		return Collections.unmodifiableSet(allSources)__	};return,an,immutable,set,of,all,the,sources,that,will,be,added,to,an,application,context,when,link,run,string,is,called,this,method,combines,any,primary,sources,specified,in,the,constructor,with,any,additional,ones,that,have,been,link,set,sources,set,explicitly,set,return,an,immutable,set,of,all,sources;public,set,object,get,all,sources,set,object,all,sources,new,linked,hash,set,if,collection,utils,is,empty,this,primary,sources,all,sources,add,all,this,primary,sources,if,collection,utils,is,empty,this,sources,all,sources,add,all,this,sources,return,collections,unmodifiable,set,all,sources
SpringApplication -> public Set<Object> getAllSources();1525416882;Return an immutable set of all the sources that will be added to an_ApplicationContext when {@link #run(String...)} is called. This method combines any_primary sources specified in the constructor with any additional ones that have_been {@link #setSources(Set) explicitly set}._@return an immutable set of all sources;public Set<Object> getAllSources() {_		Set<Object> allSources = new LinkedHashSet<>()__		if (!CollectionUtils.isEmpty(this.primarySources)) {_			allSources.addAll(this.primarySources)__		}_		if (!CollectionUtils.isEmpty(this.sources)) {_			allSources.addAll(this.sources)__		}_		return Collections.unmodifiableSet(allSources)__	};return,an,immutable,set,of,all,the,sources,that,will,be,added,to,an,application,context,when,link,run,string,is,called,this,method,combines,any,primary,sources,specified,in,the,constructor,with,any,additional,ones,that,have,been,link,set,sources,set,explicitly,set,return,an,immutable,set,of,all,sources;public,set,object,get,all,sources,set,object,all,sources,new,linked,hash,set,if,collection,utils,is,empty,this,primary,sources,all,sources,add,all,this,primary,sources,if,collection,utils,is,empty,this,sources,all,sources,add,all,this,sources,return,collections,unmodifiable,set,all,sources
SpringApplication -> public Set<Object> getAllSources();1526993305;Return an immutable set of all the sources that will be added to an_ApplicationContext when {@link #run(String...)} is called. This method combines any_primary sources specified in the constructor with any additional ones that have_been {@link #setSources(Set) explicitly set}._@return an immutable set of all sources;public Set<Object> getAllSources() {_		Set<Object> allSources = new LinkedHashSet<>()__		if (!CollectionUtils.isEmpty(this.primarySources)) {_			allSources.addAll(this.primarySources)__		}_		if (!CollectionUtils.isEmpty(this.sources)) {_			allSources.addAll(this.sources)__		}_		return Collections.unmodifiableSet(allSources)__	};return,an,immutable,set,of,all,the,sources,that,will,be,added,to,an,application,context,when,link,run,string,is,called,this,method,combines,any,primary,sources,specified,in,the,constructor,with,any,additional,ones,that,have,been,link,set,sources,set,explicitly,set,return,an,immutable,set,of,all,sources;public,set,object,get,all,sources,set,object,all,sources,new,linked,hash,set,if,collection,utils,is,empty,this,primary,sources,all,sources,add,all,this,primary,sources,if,collection,utils,is,empty,this,sources,all,sources,add,all,this,sources,return,collections,unmodifiable,set,all,sources
SpringApplication -> public Set<Object> getAllSources();1529485904;Return an immutable set of all the sources that will be added to an_ApplicationContext when {@link #run(String...)} is called. This method combines any_primary sources specified in the constructor with any additional ones that have_been {@link #setSources(Set) explicitly set}._@return an immutable set of all sources;public Set<Object> getAllSources() {_		Set<Object> allSources = new LinkedHashSet<>()__		if (!CollectionUtils.isEmpty(this.primarySources)) {_			allSources.addAll(this.primarySources)__		}_		if (!CollectionUtils.isEmpty(this.sources)) {_			allSources.addAll(this.sources)__		}_		return Collections.unmodifiableSet(allSources)__	};return,an,immutable,set,of,all,the,sources,that,will,be,added,to,an,application,context,when,link,run,string,is,called,this,method,combines,any,primary,sources,specified,in,the,constructor,with,any,additional,ones,that,have,been,link,set,sources,set,explicitly,set,return,an,immutable,set,of,all,sources;public,set,object,get,all,sources,set,object,all,sources,new,linked,hash,set,if,collection,utils,is,empty,this,primary,sources,all,sources,add,all,this,primary,sources,if,collection,utils,is,empty,this,sources,all,sources,add,all,this,sources,return,collections,unmodifiable,set,all,sources
SpringApplication -> public Set<Object> getAllSources();1531140616;Return an immutable set of all the sources that will be added to an_ApplicationContext when {@link #run(String...)} is called. This method combines any_primary sources specified in the constructor with any additional ones that have_been {@link #setSources(Set) explicitly set}._@return an immutable set of all sources;public Set<Object> getAllSources() {_		Set<Object> allSources = new LinkedHashSet<>()__		if (!CollectionUtils.isEmpty(this.primarySources)) {_			allSources.addAll(this.primarySources)__		}_		if (!CollectionUtils.isEmpty(this.sources)) {_			allSources.addAll(this.sources)__		}_		return Collections.unmodifiableSet(allSources)__	};return,an,immutable,set,of,all,the,sources,that,will,be,added,to,an,application,context,when,link,run,string,is,called,this,method,combines,any,primary,sources,specified,in,the,constructor,with,any,additional,ones,that,have,been,link,set,sources,set,explicitly,set,return,an,immutable,set,of,all,sources;public,set,object,get,all,sources,set,object,all,sources,new,linked,hash,set,if,collection,utils,is,empty,this,primary,sources,all,sources,add,all,this,primary,sources,if,collection,utils,is,empty,this,sources,all,sources,add,all,this,sources,return,collections,unmodifiable,set,all,sources
SpringApplication -> public Set<Object> getAllSources();1531155529;Return an immutable set of all the sources that will be added to an_ApplicationContext when {@link #run(String...)} is called. This method combines any_primary sources specified in the constructor with any additional ones that have_been {@link #setSources(Set) explicitly set}._@return an immutable set of all sources;public Set<Object> getAllSources() {_		Set<Object> allSources = new LinkedHashSet<>()__		if (!CollectionUtils.isEmpty(this.primarySources)) {_			allSources.addAll(this.primarySources)__		}_		if (!CollectionUtils.isEmpty(this.sources)) {_			allSources.addAll(this.sources)__		}_		return Collections.unmodifiableSet(allSources)__	};return,an,immutable,set,of,all,the,sources,that,will,be,added,to,an,application,context,when,link,run,string,is,called,this,method,combines,any,primary,sources,specified,in,the,constructor,with,any,additional,ones,that,have,been,link,set,sources,set,explicitly,set,return,an,immutable,set,of,all,sources;public,set,object,get,all,sources,set,object,all,sources,new,linked,hash,set,if,collection,utils,is,empty,this,primary,sources,all,sources,add,all,this,primary,sources,if,collection,utils,is,empty,this,sources,all,sources,add,all,this,sources,return,collections,unmodifiable,set,all,sources
SpringApplication -> public Set<Object> getAllSources();1531222098;Return an immutable set of all the sources that will be added to an_ApplicationContext when {@link #run(String...)} is called. This method combines any_primary sources specified in the constructor with any additional ones that have_been {@link #setSources(Set) explicitly set}._@return an immutable set of all sources;public Set<Object> getAllSources() {_		Set<Object> allSources = new LinkedHashSet<>()__		if (!CollectionUtils.isEmpty(this.primarySources)) {_			allSources.addAll(this.primarySources)__		}_		if (!CollectionUtils.isEmpty(this.sources)) {_			allSources.addAll(this.sources)__		}_		return Collections.unmodifiableSet(allSources)__	};return,an,immutable,set,of,all,the,sources,that,will,be,added,to,an,application,context,when,link,run,string,is,called,this,method,combines,any,primary,sources,specified,in,the,constructor,with,any,additional,ones,that,have,been,link,set,sources,set,explicitly,set,return,an,immutable,set,of,all,sources;public,set,object,get,all,sources,set,object,all,sources,new,linked,hash,set,if,collection,utils,is,empty,this,primary,sources,all,sources,add,all,this,primary,sources,if,collection,utils,is,empty,this,sources,all,sources,add,all,this,sources,return,collections,unmodifiable,set,all,sources
SpringApplication -> public Set<Object> getAllSources();1532738143;Return an immutable set of all the sources that will be added to an_ApplicationContext when {@link #run(String...)} is called. This method combines any_primary sources specified in the constructor with any additional ones that have_been {@link #setSources(Set) explicitly set}._@return an immutable set of all sources;public Set<Object> getAllSources() {_		Set<Object> allSources = new LinkedHashSet<>()__		if (!CollectionUtils.isEmpty(this.primarySources)) {_			allSources.addAll(this.primarySources)__		}_		if (!CollectionUtils.isEmpty(this.sources)) {_			allSources.addAll(this.sources)__		}_		return Collections.unmodifiableSet(allSources)__	};return,an,immutable,set,of,all,the,sources,that,will,be,added,to,an,application,context,when,link,run,string,is,called,this,method,combines,any,primary,sources,specified,in,the,constructor,with,any,additional,ones,that,have,been,link,set,sources,set,explicitly,set,return,an,immutable,set,of,all,sources;public,set,object,get,all,sources,set,object,all,sources,new,linked,hash,set,if,collection,utils,is,empty,this,primary,sources,all,sources,add,all,this,primary,sources,if,collection,utils,is,empty,this,sources,all,sources,add,all,this,sources,return,collections,unmodifiable,set,all,sources
SpringApplication -> public Set<Object> getAllSources();1534188228;Return an immutable set of all the sources that will be added to an_ApplicationContext when {@link #run(String...)} is called. This method combines any_primary sources specified in the constructor with any additional ones that have_been {@link #setSources(Set) explicitly set}._@return an immutable set of all sources;public Set<Object> getAllSources() {_		Set<Object> allSources = new LinkedHashSet<>()__		if (!CollectionUtils.isEmpty(this.primarySources)) {_			allSources.addAll(this.primarySources)__		}_		if (!CollectionUtils.isEmpty(this.sources)) {_			allSources.addAll(this.sources)__		}_		return Collections.unmodifiableSet(allSources)__	};return,an,immutable,set,of,all,the,sources,that,will,be,added,to,an,application,context,when,link,run,string,is,called,this,method,combines,any,primary,sources,specified,in,the,constructor,with,any,additional,ones,that,have,been,link,set,sources,set,explicitly,set,return,an,immutable,set,of,all,sources;public,set,object,get,all,sources,set,object,all,sources,new,linked,hash,set,if,collection,utils,is,empty,this,primary,sources,all,sources,add,all,this,primary,sources,if,collection,utils,is,empty,this,sources,all,sources,add,all,this,sources,return,collections,unmodifiable,set,all,sources
SpringApplication -> public Set<Object> getAllSources();1535104170;Return an immutable set of all the sources that will be added to an_ApplicationContext when {@link #run(String...)} is called. This method combines any_primary sources specified in the constructor with any additional ones that have_been {@link #setSources(Set) explicitly set}._@return an immutable set of all sources;public Set<Object> getAllSources() {_		Set<Object> allSources = new LinkedHashSet<>()__		if (!CollectionUtils.isEmpty(this.primarySources)) {_			allSources.addAll(this.primarySources)__		}_		if (!CollectionUtils.isEmpty(this.sources)) {_			allSources.addAll(this.sources)__		}_		return Collections.unmodifiableSet(allSources)__	};return,an,immutable,set,of,all,the,sources,that,will,be,added,to,an,application,context,when,link,run,string,is,called,this,method,combines,any,primary,sources,specified,in,the,constructor,with,any,additional,ones,that,have,been,link,set,sources,set,explicitly,set,return,an,immutable,set,of,all,sources;public,set,object,get,all,sources,set,object,all,sources,new,linked,hash,set,if,collection,utils,is,empty,this,primary,sources,all,sources,add,all,this,primary,sources,if,collection,utils,is,empty,this,sources,all,sources,add,all,this,sources,return,collections,unmodifiable,set,all,sources
SpringApplication -> public Set<Object> getAllSources();1536701067;Return an immutable set of all the sources that will be added to an_ApplicationContext when {@link #run(String...)} is called. This method combines any_primary sources specified in the constructor with any additional ones that have_been {@link #setSources(Set) explicitly set}._@return an immutable set of all sources;public Set<Object> getAllSources() {_		Set<Object> allSources = new LinkedHashSet<>()__		if (!CollectionUtils.isEmpty(this.primarySources)) {_			allSources.addAll(this.primarySources)__		}_		if (!CollectionUtils.isEmpty(this.sources)) {_			allSources.addAll(this.sources)__		}_		return Collections.unmodifiableSet(allSources)__	};return,an,immutable,set,of,all,the,sources,that,will,be,added,to,an,application,context,when,link,run,string,is,called,this,method,combines,any,primary,sources,specified,in,the,constructor,with,any,additional,ones,that,have,been,link,set,sources,set,explicitly,set,return,an,immutable,set,of,all,sources;public,set,object,get,all,sources,set,object,all,sources,new,linked,hash,set,if,collection,utils,is,empty,this,primary,sources,all,sources,add,all,this,primary,sources,if,collection,utils,is,empty,this,sources,all,sources,add,all,this,sources,return,collections,unmodifiable,set,all,sources
SpringApplication -> public Set<Object> getAllSources();1538570355;Return an immutable set of all the sources that will be added to an_ApplicationContext when {@link #run(String...)} is called. This method combines any_primary sources specified in the constructor with any additional ones that have_been {@link #setSources(Set) explicitly set}._@return an immutable set of all sources;public Set<Object> getAllSources() {_		Set<Object> allSources = new LinkedHashSet<>()__		if (!CollectionUtils.isEmpty(this.primarySources)) {_			allSources.addAll(this.primarySources)__		}_		if (!CollectionUtils.isEmpty(this.sources)) {_			allSources.addAll(this.sources)__		}_		return Collections.unmodifiableSet(allSources)__	};return,an,immutable,set,of,all,the,sources,that,will,be,added,to,an,application,context,when,link,run,string,is,called,this,method,combines,any,primary,sources,specified,in,the,constructor,with,any,additional,ones,that,have,been,link,set,sources,set,explicitly,set,return,an,immutable,set,of,all,sources;public,set,object,get,all,sources,set,object,all,sources,new,linked,hash,set,if,collection,utils,is,empty,this,primary,sources,all,sources,add,all,this,primary,sources,if,collection,utils,is,empty,this,sources,all,sources,add,all,this,sources,return,collections,unmodifiable,set,all,sources
SpringApplication -> public Set<Object> getAllSources();1538707540;Return an immutable set of all the sources that will be added to an_ApplicationContext when {@link #run(String...)} is called. This method combines any_primary sources specified in the constructor with any additional ones that have_been {@link #setSources(Set) explicitly set}._@return an immutable set of all sources;public Set<Object> getAllSources() {_		Set<Object> allSources = new LinkedHashSet<>()__		if (!CollectionUtils.isEmpty(this.primarySources)) {_			allSources.addAll(this.primarySources)__		}_		if (!CollectionUtils.isEmpty(this.sources)) {_			allSources.addAll(this.sources)__		}_		return Collections.unmodifiableSet(allSources)__	};return,an,immutable,set,of,all,the,sources,that,will,be,added,to,an,application,context,when,link,run,string,is,called,this,method,combines,any,primary,sources,specified,in,the,constructor,with,any,additional,ones,that,have,been,link,set,sources,set,explicitly,set,return,an,immutable,set,of,all,sources;public,set,object,get,all,sources,set,object,all,sources,new,linked,hash,set,if,collection,utils,is,empty,this,primary,sources,all,sources,add,all,this,primary,sources,if,collection,utils,is,empty,this,sources,all,sources,add,all,this,sources,return,collections,unmodifiable,set,all,sources
SpringApplication -> public Set<Object> getAllSources();1538750610;Return an immutable set of all the sources that will be added to an_ApplicationContext when {@link #run(String...)} is called. This method combines any_primary sources specified in the constructor with any additional ones that have_been {@link #setSources(Set) explicitly set}._@return an immutable set of all sources;public Set<Object> getAllSources() {_		Set<Object> allSources = new LinkedHashSet<>()__		if (!CollectionUtils.isEmpty(this.primarySources)) {_			allSources.addAll(this.primarySources)__		}_		if (!CollectionUtils.isEmpty(this.sources)) {_			allSources.addAll(this.sources)__		}_		return Collections.unmodifiableSet(allSources)__	};return,an,immutable,set,of,all,the,sources,that,will,be,added,to,an,application,context,when,link,run,string,is,called,this,method,combines,any,primary,sources,specified,in,the,constructor,with,any,additional,ones,that,have,been,link,set,sources,set,explicitly,set,return,an,immutable,set,of,all,sources;public,set,object,get,all,sources,set,object,all,sources,new,linked,hash,set,if,collection,utils,is,empty,this,primary,sources,all,sources,add,all,this,primary,sources,if,collection,utils,is,empty,this,sources,all,sources,add,all,this,sources,return,collections,unmodifiable,set,all,sources
SpringApplication -> public Set<Object> getAllSources();1538771652;Return an immutable set of all the sources that will be added to an_ApplicationContext when {@link #run(String...)} is called. This method combines any_primary sources specified in the constructor with any additional ones that have_been {@link #setSources(Set) explicitly set}._@return an immutable set of all sources;public Set<Object> getAllSources() {_		Set<Object> allSources = new LinkedHashSet<>()__		if (!CollectionUtils.isEmpty(this.primarySources)) {_			allSources.addAll(this.primarySources)__		}_		if (!CollectionUtils.isEmpty(this.sources)) {_			allSources.addAll(this.sources)__		}_		return Collections.unmodifiableSet(allSources)__	};return,an,immutable,set,of,all,the,sources,that,will,be,added,to,an,application,context,when,link,run,string,is,called,this,method,combines,any,primary,sources,specified,in,the,constructor,with,any,additional,ones,that,have,been,link,set,sources,set,explicitly,set,return,an,immutable,set,of,all,sources;public,set,object,get,all,sources,set,object,all,sources,new,linked,hash,set,if,collection,utils,is,empty,this,primary,sources,all,sources,add,all,this,primary,sources,if,collection,utils,is,empty,this,sources,all,sources,add,all,this,sources,return,collections,unmodifiable,set,all,sources
SpringApplication -> public Set<Object> getAllSources();1540419762;Return an immutable set of all the sources that will be added to an_ApplicationContext when {@link #run(String...)} is called. This method combines any_primary sources specified in the constructor with any additional ones that have_been {@link #setSources(Set) explicitly set}._@return an immutable set of all sources;public Set<Object> getAllSources() {_		Set<Object> allSources = new LinkedHashSet<>()__		if (!CollectionUtils.isEmpty(this.primarySources)) {_			allSources.addAll(this.primarySources)__		}_		if (!CollectionUtils.isEmpty(this.sources)) {_			allSources.addAll(this.sources)__		}_		return Collections.unmodifiableSet(allSources)__	};return,an,immutable,set,of,all,the,sources,that,will,be,added,to,an,application,context,when,link,run,string,is,called,this,method,combines,any,primary,sources,specified,in,the,constructor,with,any,additional,ones,that,have,been,link,set,sources,set,explicitly,set,return,an,immutable,set,of,all,sources;public,set,object,get,all,sources,set,object,all,sources,new,linked,hash,set,if,collection,utils,is,empty,this,primary,sources,all,sources,add,all,this,primary,sources,if,collection,utils,is,empty,this,sources,all,sources,add,all,this,sources,return,collections,unmodifiable,set,all,sources
SpringApplication -> public Set<Object> getAllSources();1541060131;Return an immutable set of all the sources that will be added to an_ApplicationContext when {@link #run(String...)} is called. This method combines any_primary sources specified in the constructor with any additional ones that have_been {@link #setSources(Set) explicitly set}._@return an immutable set of all sources;public Set<Object> getAllSources() {_		Set<Object> allSources = new LinkedHashSet<>()__		if (!CollectionUtils.isEmpty(this.primarySources)) {_			allSources.addAll(this.primarySources)__		}_		if (!CollectionUtils.isEmpty(this.sources)) {_			allSources.addAll(this.sources)__		}_		return Collections.unmodifiableSet(allSources)__	};return,an,immutable,set,of,all,the,sources,that,will,be,added,to,an,application,context,when,link,run,string,is,called,this,method,combines,any,primary,sources,specified,in,the,constructor,with,any,additional,ones,that,have,been,link,set,sources,set,explicitly,set,return,an,immutable,set,of,all,sources;public,set,object,get,all,sources,set,object,all,sources,new,linked,hash,set,if,collection,utils,is,empty,this,primary,sources,all,sources,add,all,this,primary,sources,if,collection,utils,is,empty,this,sources,all,sources,add,all,this,sources,return,collections,unmodifiable,set,all,sources
SpringApplication -> public Set<Object> getAllSources();1546943477;Return an immutable set of all the sources that will be added to an_ApplicationContext when {@link #run(String...)} is called. This method combines any_primary sources specified in the constructor with any additional ones that have_been {@link #setSources(Set) explicitly set}._@return an immutable set of all sources;public Set<Object> getAllSources() {_		Set<Object> allSources = new LinkedHashSet<>()__		if (!CollectionUtils.isEmpty(this.primarySources)) {_			allSources.addAll(this.primarySources)__		}_		if (!CollectionUtils.isEmpty(this.sources)) {_			allSources.addAll(this.sources)__		}_		return Collections.unmodifiableSet(allSources)__	};return,an,immutable,set,of,all,the,sources,that,will,be,added,to,an,application,context,when,link,run,string,is,called,this,method,combines,any,primary,sources,specified,in,the,constructor,with,any,additional,ones,that,have,been,link,set,sources,set,explicitly,set,return,an,immutable,set,of,all,sources;public,set,object,get,all,sources,set,object,all,sources,new,linked,hash,set,if,collection,utils,is,empty,this,primary,sources,all,sources,add,all,this,primary,sources,if,collection,utils,is,empty,this,sources,all,sources,add,all,this,sources,return,collections,unmodifiable,set,all,sources
SpringApplication -> public Set<Object> getAllSources();1549791353;Return an immutable set of all the sources that will be added to an_ApplicationContext when {@link #run(String...)} is called. This method combines any_primary sources specified in the constructor with any additional ones that have_been {@link #setSources(Set) explicitly set}._@return an immutable set of all sources;public Set<Object> getAllSources() {_		Set<Object> allSources = new LinkedHashSet<>()__		if (!CollectionUtils.isEmpty(this.primarySources)) {_			allSources.addAll(this.primarySources)__		}_		if (!CollectionUtils.isEmpty(this.sources)) {_			allSources.addAll(this.sources)__		}_		return Collections.unmodifiableSet(allSources)__	};return,an,immutable,set,of,all,the,sources,that,will,be,added,to,an,application,context,when,link,run,string,is,called,this,method,combines,any,primary,sources,specified,in,the,constructor,with,any,additional,ones,that,have,been,link,set,sources,set,explicitly,set,return,an,immutable,set,of,all,sources;public,set,object,get,all,sources,set,object,all,sources,new,linked,hash,set,if,collection,utils,is,empty,this,primary,sources,all,sources,add,all,this,primary,sources,if,collection,utils,is,empty,this,sources,all,sources,add,all,this,sources,return,collections,unmodifiable,set,all,sources
SpringApplication -> public Set<Object> getAllSources();1550148109;Return an immutable set of all the sources that will be added to an_ApplicationContext when {@link #run(String...)} is called. This method combines any_primary sources specified in the constructor with any additional ones that have_been {@link #setSources(Set) explicitly set}._@return an immutable set of all sources;public Set<Object> getAllSources() {_		Set<Object> allSources = new LinkedHashSet<>()__		if (!CollectionUtils.isEmpty(this.primarySources)) {_			allSources.addAll(this.primarySources)__		}_		if (!CollectionUtils.isEmpty(this.sources)) {_			allSources.addAll(this.sources)__		}_		return Collections.unmodifiableSet(allSources)__	};return,an,immutable,set,of,all,the,sources,that,will,be,added,to,an,application,context,when,link,run,string,is,called,this,method,combines,any,primary,sources,specified,in,the,constructor,with,any,additional,ones,that,have,been,link,set,sources,set,explicitly,set,return,an,immutable,set,of,all,sources;public,set,object,get,all,sources,set,object,all,sources,new,linked,hash,set,if,collection,utils,is,empty,this,primary,sources,all,sources,add,all,this,primary,sources,if,collection,utils,is,empty,this,sources,all,sources,add,all,this,sources,return,collections,unmodifiable,set,all,sources
SpringApplication -> public Set<ApplicationListener<?>> getListeners();1507173536;Returns read-only ordered Set of the {@link ApplicationListener}s that will be_applied to the SpringApplication and registered with the {@link ApplicationContext}__@return the listeners;public Set<ApplicationListener<?>> getListeners() {_		return asUnmodifiableOrderedSet(this.listeners)__	};returns,read,only,ordered,set,of,the,link,application,listener,s,that,will,be,applied,to,the,spring,application,and,registered,with,the,link,application,context,return,the,listeners;public,set,application,listener,get,listeners,return,as,unmodifiable,ordered,set,this,listeners
SpringApplication -> public Set<ApplicationListener<?>> getListeners();1509381678;Returns read-only ordered Set of the {@link ApplicationListener}s that will be_applied to the SpringApplication and registered with the {@link ApplicationContext}__@return the listeners;public Set<ApplicationListener<?>> getListeners() {_		return asUnmodifiableOrderedSet(this.listeners)__	};returns,read,only,ordered,set,of,the,link,application,listener,s,that,will,be,applied,to,the,spring,application,and,registered,with,the,link,application,context,return,the,listeners;public,set,application,listener,get,listeners,return,as,unmodifiable,ordered,set,this,listeners
SpringApplication -> public Set<ApplicationListener<?>> getListeners();1510995225;Returns read-only ordered Set of the {@link ApplicationListener}s that will be_applied to the SpringApplication and registered with the {@link ApplicationContext}__@return the listeners;public Set<ApplicationListener<?>> getListeners() {_		return asUnmodifiableOrderedSet(this.listeners)__	};returns,read,only,ordered,set,of,the,link,application,listener,s,that,will,be,applied,to,the,spring,application,and,registered,with,the,link,application,context,return,the,listeners;public,set,application,listener,get,listeners,return,as,unmodifiable,ordered,set,this,listeners
SpringApplication -> public Set<ApplicationListener<?>> getListeners();1515670013;Returns read-only ordered Set of the {@link ApplicationListener}s that will be_applied to the SpringApplication and registered with the {@link ApplicationContext}__@return the listeners;public Set<ApplicationListener<?>> getListeners() {_		return asUnmodifiableOrderedSet(this.listeners)__	};returns,read,only,ordered,set,of,the,link,application,listener,s,that,will,be,applied,to,the,spring,application,and,registered,with,the,link,application,context,return,the,listeners;public,set,application,listener,get,listeners,return,as,unmodifiable,ordered,set,this,listeners
SpringApplication -> public Set<ApplicationListener<?>> getListeners();1519362690;Returns read-only ordered Set of the {@link ApplicationListener}s that will be_applied to the SpringApplication and registered with the {@link ApplicationContext}__@return the listeners;public Set<ApplicationListener<?>> getListeners() {_		return asUnmodifiableOrderedSet(this.listeners)__	};returns,read,only,ordered,set,of,the,link,application,listener,s,that,will,be,applied,to,the,spring,application,and,registered,with,the,link,application,context,return,the,listeners;public,set,application,listener,get,listeners,return,as,unmodifiable,ordered,set,this,listeners
SpringApplication -> public Set<ApplicationListener<?>> getListeners();1522251721;Returns read-only ordered Set of the {@link ApplicationListener}s that will be_applied to the SpringApplication and registered with the {@link ApplicationContext}__@return the listeners;public Set<ApplicationListener<?>> getListeners() {_		return asUnmodifiableOrderedSet(this.listeners)__	};returns,read,only,ordered,set,of,the,link,application,listener,s,that,will,be,applied,to,the,spring,application,and,registered,with,the,link,application,context,return,the,listeners;public,set,application,listener,get,listeners,return,as,unmodifiable,ordered,set,this,listeners
SpringApplication -> public Set<ApplicationListener<?>> getListeners();1525376698;Returns read-only ordered Set of the {@link ApplicationListener}s that will be_applied to the SpringApplication and registered with the {@link ApplicationContext}__@return the listeners;public Set<ApplicationListener<?>> getListeners() {_		return asUnmodifiableOrderedSet(this.listeners)__	};returns,read,only,ordered,set,of,the,link,application,listener,s,that,will,be,applied,to,the,spring,application,and,registered,with,the,link,application,context,return,the,listeners;public,set,application,listener,get,listeners,return,as,unmodifiable,ordered,set,this,listeners
SpringApplication -> public Set<ApplicationListener<?>> getListeners();1525416882;Returns read-only ordered Set of the {@link ApplicationListener}s that will be_applied to the SpringApplication and registered with the {@link ApplicationContext}__@return the listeners;public Set<ApplicationListener<?>> getListeners() {_		return asUnmodifiableOrderedSet(this.listeners)__	};returns,read,only,ordered,set,of,the,link,application,listener,s,that,will,be,applied,to,the,spring,application,and,registered,with,the,link,application,context,return,the,listeners;public,set,application,listener,get,listeners,return,as,unmodifiable,ordered,set,this,listeners
SpringApplication -> public Set<ApplicationListener<?>> getListeners();1526993305;Returns read-only ordered Set of the {@link ApplicationListener}s that will be_applied to the SpringApplication and registered with the {@link ApplicationContext}__@return the listeners;public Set<ApplicationListener<?>> getListeners() {_		return asUnmodifiableOrderedSet(this.listeners)__	};returns,read,only,ordered,set,of,the,link,application,listener,s,that,will,be,applied,to,the,spring,application,and,registered,with,the,link,application,context,return,the,listeners;public,set,application,listener,get,listeners,return,as,unmodifiable,ordered,set,this,listeners
SpringApplication -> public Set<ApplicationListener<?>> getListeners();1529485904;Returns read-only ordered Set of the {@link ApplicationListener}s that will be_applied to the SpringApplication and registered with the {@link ApplicationContext}__@return the listeners;public Set<ApplicationListener<?>> getListeners() {_		return asUnmodifiableOrderedSet(this.listeners)__	};returns,read,only,ordered,set,of,the,link,application,listener,s,that,will,be,applied,to,the,spring,application,and,registered,with,the,link,application,context,return,the,listeners;public,set,application,listener,get,listeners,return,as,unmodifiable,ordered,set,this,listeners
SpringApplication -> public Set<ApplicationListener<?>> getListeners();1531140616;Returns read-only ordered Set of the {@link ApplicationListener}s that will be_applied to the SpringApplication and registered with the {@link ApplicationContext}__@return the listeners;public Set<ApplicationListener<?>> getListeners() {_		return asUnmodifiableOrderedSet(this.listeners)__	};returns,read,only,ordered,set,of,the,link,application,listener,s,that,will,be,applied,to,the,spring,application,and,registered,with,the,link,application,context,return,the,listeners;public,set,application,listener,get,listeners,return,as,unmodifiable,ordered,set,this,listeners
SpringApplication -> public Set<ApplicationListener<?>> getListeners();1531155529;Returns read-only ordered Set of the {@link ApplicationListener}s that will be_applied to the SpringApplication and registered with the {@link ApplicationContext}__@return the listeners;public Set<ApplicationListener<?>> getListeners() {_		return asUnmodifiableOrderedSet(this.listeners)__	};returns,read,only,ordered,set,of,the,link,application,listener,s,that,will,be,applied,to,the,spring,application,and,registered,with,the,link,application,context,return,the,listeners;public,set,application,listener,get,listeners,return,as,unmodifiable,ordered,set,this,listeners
SpringApplication -> public Set<ApplicationListener<?>> getListeners();1531222098;Returns read-only ordered Set of the {@link ApplicationListener}s that will be_applied to the SpringApplication and registered with the {@link ApplicationContext}__@return the listeners;public Set<ApplicationListener<?>> getListeners() {_		return asUnmodifiableOrderedSet(this.listeners)__	};returns,read,only,ordered,set,of,the,link,application,listener,s,that,will,be,applied,to,the,spring,application,and,registered,with,the,link,application,context,return,the,listeners;public,set,application,listener,get,listeners,return,as,unmodifiable,ordered,set,this,listeners
SpringApplication -> public Set<ApplicationListener<?>> getListeners();1532738143;Returns read-only ordered Set of the {@link ApplicationListener}s that will be_applied to the SpringApplication and registered with the {@link ApplicationContext}__@return the listeners;public Set<ApplicationListener<?>> getListeners() {_		return asUnmodifiableOrderedSet(this.listeners)__	};returns,read,only,ordered,set,of,the,link,application,listener,s,that,will,be,applied,to,the,spring,application,and,registered,with,the,link,application,context,return,the,listeners;public,set,application,listener,get,listeners,return,as,unmodifiable,ordered,set,this,listeners
SpringApplication -> public Set<ApplicationListener<?>> getListeners();1534188228;Returns read-only ordered Set of the {@link ApplicationListener}s that will be_applied to the SpringApplication and registered with the {@link ApplicationContext}__@return the listeners;public Set<ApplicationListener<?>> getListeners() {_		return asUnmodifiableOrderedSet(this.listeners)__	};returns,read,only,ordered,set,of,the,link,application,listener,s,that,will,be,applied,to,the,spring,application,and,registered,with,the,link,application,context,return,the,listeners;public,set,application,listener,get,listeners,return,as,unmodifiable,ordered,set,this,listeners
SpringApplication -> public Set<ApplicationListener<?>> getListeners();1535104170;Returns read-only ordered Set of the {@link ApplicationListener}s that will be_applied to the SpringApplication and registered with the {@link ApplicationContext}__@return the listeners;public Set<ApplicationListener<?>> getListeners() {_		return asUnmodifiableOrderedSet(this.listeners)__	};returns,read,only,ordered,set,of,the,link,application,listener,s,that,will,be,applied,to,the,spring,application,and,registered,with,the,link,application,context,return,the,listeners;public,set,application,listener,get,listeners,return,as,unmodifiable,ordered,set,this,listeners
SpringApplication -> public Set<ApplicationListener<?>> getListeners();1536701067;Returns read-only ordered Set of the {@link ApplicationListener}s that will be_applied to the SpringApplication and registered with the {@link ApplicationContext}__@return the listeners;public Set<ApplicationListener<?>> getListeners() {_		return asUnmodifiableOrderedSet(this.listeners)__	};returns,read,only,ordered,set,of,the,link,application,listener,s,that,will,be,applied,to,the,spring,application,and,registered,with,the,link,application,context,return,the,listeners;public,set,application,listener,get,listeners,return,as,unmodifiable,ordered,set,this,listeners
SpringApplication -> public Set<ApplicationListener<?>> getListeners();1538570355;Returns read-only ordered Set of the {@link ApplicationListener}s that will be_applied to the SpringApplication and registered with the {@link ApplicationContext}__@return the listeners;public Set<ApplicationListener<?>> getListeners() {_		return asUnmodifiableOrderedSet(this.listeners)__	};returns,read,only,ordered,set,of,the,link,application,listener,s,that,will,be,applied,to,the,spring,application,and,registered,with,the,link,application,context,return,the,listeners;public,set,application,listener,get,listeners,return,as,unmodifiable,ordered,set,this,listeners
SpringApplication -> public Set<ApplicationListener<?>> getListeners();1538707540;Returns read-only ordered Set of the {@link ApplicationListener}s that will be_applied to the SpringApplication and registered with the {@link ApplicationContext}__@return the listeners;public Set<ApplicationListener<?>> getListeners() {_		return asUnmodifiableOrderedSet(this.listeners)__	};returns,read,only,ordered,set,of,the,link,application,listener,s,that,will,be,applied,to,the,spring,application,and,registered,with,the,link,application,context,return,the,listeners;public,set,application,listener,get,listeners,return,as,unmodifiable,ordered,set,this,listeners
SpringApplication -> public Set<ApplicationListener<?>> getListeners();1538750610;Returns read-only ordered Set of the {@link ApplicationListener}s that will be_applied to the SpringApplication and registered with the {@link ApplicationContext}__@return the listeners;public Set<ApplicationListener<?>> getListeners() {_		return asUnmodifiableOrderedSet(this.listeners)__	};returns,read,only,ordered,set,of,the,link,application,listener,s,that,will,be,applied,to,the,spring,application,and,registered,with,the,link,application,context,return,the,listeners;public,set,application,listener,get,listeners,return,as,unmodifiable,ordered,set,this,listeners
SpringApplication -> public Set<ApplicationListener<?>> getListeners();1538771652;Returns read-only ordered Set of the {@link ApplicationListener}s that will be_applied to the SpringApplication and registered with the {@link ApplicationContext}__@return the listeners;public Set<ApplicationListener<?>> getListeners() {_		return asUnmodifiableOrderedSet(this.listeners)__	};returns,read,only,ordered,set,of,the,link,application,listener,s,that,will,be,applied,to,the,spring,application,and,registered,with,the,link,application,context,return,the,listeners;public,set,application,listener,get,listeners,return,as,unmodifiable,ordered,set,this,listeners
SpringApplication -> public Set<ApplicationListener<?>> getListeners();1540419762;Returns read-only ordered Set of the {@link ApplicationListener}s that will be_applied to the SpringApplication and registered with the {@link ApplicationContext}__@return the listeners;public Set<ApplicationListener<?>> getListeners() {_		return asUnmodifiableOrderedSet(this.listeners)__	};returns,read,only,ordered,set,of,the,link,application,listener,s,that,will,be,applied,to,the,spring,application,and,registered,with,the,link,application,context,return,the,listeners;public,set,application,listener,get,listeners,return,as,unmodifiable,ordered,set,this,listeners
SpringApplication -> public Set<ApplicationListener<?>> getListeners();1541060131;Returns read-only ordered Set of the {@link ApplicationListener}s that will be_applied to the SpringApplication and registered with the {@link ApplicationContext}__@return the listeners;public Set<ApplicationListener<?>> getListeners() {_		return asUnmodifiableOrderedSet(this.listeners)__	};returns,read,only,ordered,set,of,the,link,application,listener,s,that,will,be,applied,to,the,spring,application,and,registered,with,the,link,application,context,return,the,listeners;public,set,application,listener,get,listeners,return,as,unmodifiable,ordered,set,this,listeners
SpringApplication -> public Set<ApplicationListener<?>> getListeners();1546943477;Returns read-only ordered Set of the {@link ApplicationListener}s that will be_applied to the SpringApplication and registered with the {@link ApplicationContext}__@return the listeners;public Set<ApplicationListener<?>> getListeners() {_		return asUnmodifiableOrderedSet(this.listeners)__	};returns,read,only,ordered,set,of,the,link,application,listener,s,that,will,be,applied,to,the,spring,application,and,registered,with,the,link,application,context,return,the,listeners;public,set,application,listener,get,listeners,return,as,unmodifiable,ordered,set,this,listeners
SpringApplication -> public Set<ApplicationListener<?>> getListeners();1549791353;Returns read-only ordered Set of the {@link ApplicationListener}s that will be_applied to the SpringApplication and registered with the {@link ApplicationContext}__@return the listeners;public Set<ApplicationListener<?>> getListeners() {_		return asUnmodifiableOrderedSet(this.listeners)__	};returns,read,only,ordered,set,of,the,link,application,listener,s,that,will,be,applied,to,the,spring,application,and,registered,with,the,link,application,context,return,the,listeners;public,set,application,listener,get,listeners,return,as,unmodifiable,ordered,set,this,listeners
SpringApplication -> public Set<ApplicationListener<?>> getListeners();1550148109;Returns read-only ordered Set of the {@link ApplicationListener}s that will be_applied to the SpringApplication and registered with the {@link ApplicationContext}__@return the listeners;public Set<ApplicationListener<?>> getListeners() {_		return asUnmodifiableOrderedSet(this.listeners)__	};returns,read,only,ordered,set,of,the,link,application,listener,s,that,will,be,applied,to,the,spring,application,and,registered,with,the,link,application,context,return,the,listeners;public,set,application,listener,get,listeners,return,as,unmodifiable,ordered,set,this,listeners
SpringApplication -> public ConfigurableApplicationContext run(String... args);1507173536;Run the Spring application, creating and refreshing a new_{@link ApplicationContext}._@param args the application arguments (usually passed from a Java main method)_@return a running {@link ApplicationContext};public ConfigurableApplicationContext run(String... args) {_		StopWatch stopWatch = new StopWatch()__		stopWatch.start()__		ConfigurableApplicationContext context = null__		Collection<SpringBootExceptionReporter> exceptionReporters = new ArrayList<>()__		configureHeadlessProperty()__		SpringApplicationRunListeners listeners = getRunListeners(args)__		listeners.starting()__		try {_			ApplicationArguments applicationArguments = new DefaultApplicationArguments(_					args)__			ConfigurableEnvironment environment = prepareEnvironment(listeners,_					applicationArguments)__			configureIgnoreBeanInfo(environment)__			Banner printedBanner = printBanner(environment)__			context = createApplicationContext()__			exceptionReporters = getSpringFactoriesInstances(_					SpringBootExceptionReporter.class,_					new Class[] { ConfigurableApplicationContext.class }, context)__			prepareContext(context, environment, listeners, applicationArguments,_					printedBanner)__			refreshContext(context)__			afterRefresh(context, applicationArguments)__			listeners.finished(context, null)__			stopWatch.stop()__			if (this.logStartupInfo) {_				new StartupInfoLogger(this.mainApplicationClass)_						.logStarted(getApplicationLog(), stopWatch)__			}_			return context__		}_		catch (Throwable ex) {_			handleRunFailure(context, listeners, exceptionReporters, ex)__			throw new IllegalStateException(ex)__		}_	};run,the,spring,application,creating,and,refreshing,a,new,link,application,context,param,args,the,application,arguments,usually,passed,from,a,java,main,method,return,a,running,link,application,context;public,configurable,application,context,run,string,args,stop,watch,stop,watch,new,stop,watch,stop,watch,start,configurable,application,context,context,null,collection,spring,boot,exception,reporter,exception,reporters,new,array,list,configure,headless,property,spring,application,run,listeners,listeners,get,run,listeners,args,listeners,starting,try,application,arguments,application,arguments,new,default,application,arguments,args,configurable,environment,environment,prepare,environment,listeners,application,arguments,configure,ignore,bean,info,environment,banner,printed,banner,print,banner,environment,context,create,application,context,exception,reporters,get,spring,factories,instances,spring,boot,exception,reporter,class,new,class,configurable,application,context,class,context,prepare,context,context,environment,listeners,application,arguments,printed,banner,refresh,context,context,after,refresh,context,application,arguments,listeners,finished,context,null,stop,watch,stop,if,this,log,startup,info,new,startup,info,logger,this,main,application,class,log,started,get,application,log,stop,watch,return,context,catch,throwable,ex,handle,run,failure,context,listeners,exception,reporters,ex,throw,new,illegal,state,exception,ex
SpringApplication -> public ConfigurableApplicationContext run(String... args);1509381678;Run the Spring application, creating and refreshing a new_{@link ApplicationContext}._@param args the application arguments (usually passed from a Java main method)_@return a running {@link ApplicationContext};public ConfigurableApplicationContext run(String... args) {_		StopWatch stopWatch = new StopWatch()__		stopWatch.start()__		ConfigurableApplicationContext context = null__		Collection<SpringBootExceptionReporter> exceptionReporters = new ArrayList<>()__		configureHeadlessProperty()__		SpringApplicationRunListeners listeners = getRunListeners(args)__		listeners.starting()__		try {_			ApplicationArguments applicationArguments = new DefaultApplicationArguments(_					args)__			ConfigurableEnvironment environment = prepareEnvironment(listeners,_					applicationArguments)__			configureIgnoreBeanInfo(environment)__			Banner printedBanner = printBanner(environment)__			context = createApplicationContext()__			exceptionReporters = getSpringFactoriesInstances(_					SpringBootExceptionReporter.class,_					new Class[] { ConfigurableApplicationContext.class }, context)__			prepareContext(context, environment, listeners, applicationArguments,_					printedBanner)__			refreshContext(context)__			afterRefresh(context, applicationArguments)__			listeners.finished(context, null)__			stopWatch.stop()__			if (this.logStartupInfo) {_				new StartupInfoLogger(this.mainApplicationClass)_						.logStarted(getApplicationLog(), stopWatch)__			}_			callRunners(context, applicationArguments)__			return context__		}_		catch (Throwable ex) {_			handleRunFailure(context, listeners, exceptionReporters, ex)__			throw new IllegalStateException(ex)__		}_	};run,the,spring,application,creating,and,refreshing,a,new,link,application,context,param,args,the,application,arguments,usually,passed,from,a,java,main,method,return,a,running,link,application,context;public,configurable,application,context,run,string,args,stop,watch,stop,watch,new,stop,watch,stop,watch,start,configurable,application,context,context,null,collection,spring,boot,exception,reporter,exception,reporters,new,array,list,configure,headless,property,spring,application,run,listeners,listeners,get,run,listeners,args,listeners,starting,try,application,arguments,application,arguments,new,default,application,arguments,args,configurable,environment,environment,prepare,environment,listeners,application,arguments,configure,ignore,bean,info,environment,banner,printed,banner,print,banner,environment,context,create,application,context,exception,reporters,get,spring,factories,instances,spring,boot,exception,reporter,class,new,class,configurable,application,context,class,context,prepare,context,context,environment,listeners,application,arguments,printed,banner,refresh,context,context,after,refresh,context,application,arguments,listeners,finished,context,null,stop,watch,stop,if,this,log,startup,info,new,startup,info,logger,this,main,application,class,log,started,get,application,log,stop,watch,call,runners,context,application,arguments,return,context,catch,throwable,ex,handle,run,failure,context,listeners,exception,reporters,ex,throw,new,illegal,state,exception,ex
SpringApplication -> public ConfigurableApplicationContext run(String... args);1510995225;Run the Spring application, creating and refreshing a new_{@link ApplicationContext}._@param args the application arguments (usually passed from a Java main method)_@return a running {@link ApplicationContext};public ConfigurableApplicationContext run(String... args) {_		StopWatch stopWatch = new StopWatch()__		stopWatch.start()__		ConfigurableApplicationContext context = null__		Collection<SpringBootExceptionReporter> exceptionReporters = new ArrayList<>()__		configureHeadlessProperty()__		SpringApplicationRunListeners listeners = getRunListeners(args)__		listeners.starting()__		try {_			ApplicationArguments applicationArguments = new DefaultApplicationArguments(_					args)__			ConfigurableEnvironment environment = prepareEnvironment(listeners,_					applicationArguments)__			configureIgnoreBeanInfo(environment)__			Banner printedBanner = printBanner(environment)__			context = createApplicationContext()__			exceptionReporters = getSpringFactoriesInstances(_					SpringBootExceptionReporter.class,_					new Class[] { ConfigurableApplicationContext.class }, context)__			prepareContext(context, environment, listeners, applicationArguments,_					printedBanner)__			refreshContext(context)__			afterRefresh(context, applicationArguments)__			listeners.finished(context, null)__			stopWatch.stop()__			if (this.logStartupInfo) {_				new StartupInfoLogger(this.mainApplicationClass)_						.logStarted(getApplicationLog(), stopWatch)__			}_			callRunners(context, applicationArguments)__			return context__		}_		catch (Throwable ex) {_			handleRunFailure(context, listeners, exceptionReporters, ex)__			throw new IllegalStateException(ex)__		}_	};run,the,spring,application,creating,and,refreshing,a,new,link,application,context,param,args,the,application,arguments,usually,passed,from,a,java,main,method,return,a,running,link,application,context;public,configurable,application,context,run,string,args,stop,watch,stop,watch,new,stop,watch,stop,watch,start,configurable,application,context,context,null,collection,spring,boot,exception,reporter,exception,reporters,new,array,list,configure,headless,property,spring,application,run,listeners,listeners,get,run,listeners,args,listeners,starting,try,application,arguments,application,arguments,new,default,application,arguments,args,configurable,environment,environment,prepare,environment,listeners,application,arguments,configure,ignore,bean,info,environment,banner,printed,banner,print,banner,environment,context,create,application,context,exception,reporters,get,spring,factories,instances,spring,boot,exception,reporter,class,new,class,configurable,application,context,class,context,prepare,context,context,environment,listeners,application,arguments,printed,banner,refresh,context,context,after,refresh,context,application,arguments,listeners,finished,context,null,stop,watch,stop,if,this,log,startup,info,new,startup,info,logger,this,main,application,class,log,started,get,application,log,stop,watch,call,runners,context,application,arguments,return,context,catch,throwable,ex,handle,run,failure,context,listeners,exception,reporters,ex,throw,new,illegal,state,exception,ex
SpringApplication -> public ConfigurableApplicationContext run(String... args);1515670013;Run the Spring application, creating and refreshing a new_{@link ApplicationContext}._@param args the application arguments (usually passed from a Java main method)_@return a running {@link ApplicationContext};public ConfigurableApplicationContext run(String... args) {_		StopWatch stopWatch = new StopWatch()__		stopWatch.start()__		ConfigurableApplicationContext context = null__		Collection<SpringBootExceptionReporter> exceptionReporters = new ArrayList<>()__		configureHeadlessProperty()__		SpringApplicationRunListeners listeners = getRunListeners(args)__		listeners.starting()__		try {_			ApplicationArguments applicationArguments = new DefaultApplicationArguments(_					args)__			ConfigurableEnvironment environment = prepareEnvironment(listeners,_					applicationArguments)__			configureIgnoreBeanInfo(environment)__			Banner printedBanner = printBanner(environment)__			context = createApplicationContext()__			exceptionReporters = getSpringFactoriesInstances(_					SpringBootExceptionReporter.class,_					new Class[] { ConfigurableApplicationContext.class }, context)__			prepareContext(context, environment, listeners, applicationArguments,_					printedBanner)__			refreshContext(context)__			afterRefresh(context, applicationArguments)__			stopWatch.stop()__			if (this.logStartupInfo) {_				new StartupInfoLogger(this.mainApplicationClass)_						.logStarted(getApplicationLog(), stopWatch)__			}_			listeners.started(context)__			callRunners(context, applicationArguments)__		}_		catch (Throwable ex) {_			handleRunFailure(context, listeners, exceptionReporters, ex)__			throw new IllegalStateException(ex)__		}_		listeners.running(context)__		return context__	};run,the,spring,application,creating,and,refreshing,a,new,link,application,context,param,args,the,application,arguments,usually,passed,from,a,java,main,method,return,a,running,link,application,context;public,configurable,application,context,run,string,args,stop,watch,stop,watch,new,stop,watch,stop,watch,start,configurable,application,context,context,null,collection,spring,boot,exception,reporter,exception,reporters,new,array,list,configure,headless,property,spring,application,run,listeners,listeners,get,run,listeners,args,listeners,starting,try,application,arguments,application,arguments,new,default,application,arguments,args,configurable,environment,environment,prepare,environment,listeners,application,arguments,configure,ignore,bean,info,environment,banner,printed,banner,print,banner,environment,context,create,application,context,exception,reporters,get,spring,factories,instances,spring,boot,exception,reporter,class,new,class,configurable,application,context,class,context,prepare,context,context,environment,listeners,application,arguments,printed,banner,refresh,context,context,after,refresh,context,application,arguments,stop,watch,stop,if,this,log,startup,info,new,startup,info,logger,this,main,application,class,log,started,get,application,log,stop,watch,listeners,started,context,call,runners,context,application,arguments,catch,throwable,ex,handle,run,failure,context,listeners,exception,reporters,ex,throw,new,illegal,state,exception,ex,listeners,running,context,return,context
SpringApplication -> public ConfigurableApplicationContext run(String... args);1519362690;Run the Spring application, creating and refreshing a new_{@link ApplicationContext}._@param args the application arguments (usually passed from a Java main method)_@return a running {@link ApplicationContext};public ConfigurableApplicationContext run(String... args) {_		StopWatch stopWatch = new StopWatch()__		stopWatch.start()__		ConfigurableApplicationContext context = null__		Collection<SpringBootExceptionReporter> exceptionReporters = new ArrayList<>()__		configureHeadlessProperty()__		SpringApplicationRunListeners listeners = getRunListeners(args)__		listeners.starting()__		try {_			ApplicationArguments applicationArguments = new DefaultApplicationArguments(_					args)__			ConfigurableEnvironment environment = prepareEnvironment(listeners,_					applicationArguments)__			configureIgnoreBeanInfo(environment)__			Banner printedBanner = printBanner(environment)__			context = createApplicationContext()__			exceptionReporters = getSpringFactoriesInstances(_					SpringBootExceptionReporter.class,_					new Class[] { ConfigurableApplicationContext.class }, context)__			prepareContext(context, environment, listeners, applicationArguments,_					printedBanner)__			refreshContext(context)__			afterRefresh(context, applicationArguments)__			stopWatch.stop()__			if (this.logStartupInfo) {_				new StartupInfoLogger(this.mainApplicationClass)_						.logStarted(getApplicationLog(), stopWatch)__			}_			listeners.started(context)__			callRunners(context, applicationArguments)__		}_		catch (Throwable ex) {_			handleRunFailure(context, listeners, exceptionReporters, ex)__			throw new IllegalStateException(ex)__		}_		listeners.running(context)__		return context__	};run,the,spring,application,creating,and,refreshing,a,new,link,application,context,param,args,the,application,arguments,usually,passed,from,a,java,main,method,return,a,running,link,application,context;public,configurable,application,context,run,string,args,stop,watch,stop,watch,new,stop,watch,stop,watch,start,configurable,application,context,context,null,collection,spring,boot,exception,reporter,exception,reporters,new,array,list,configure,headless,property,spring,application,run,listeners,listeners,get,run,listeners,args,listeners,starting,try,application,arguments,application,arguments,new,default,application,arguments,args,configurable,environment,environment,prepare,environment,listeners,application,arguments,configure,ignore,bean,info,environment,banner,printed,banner,print,banner,environment,context,create,application,context,exception,reporters,get,spring,factories,instances,spring,boot,exception,reporter,class,new,class,configurable,application,context,class,context,prepare,context,context,environment,listeners,application,arguments,printed,banner,refresh,context,context,after,refresh,context,application,arguments,stop,watch,stop,if,this,log,startup,info,new,startup,info,logger,this,main,application,class,log,started,get,application,log,stop,watch,listeners,started,context,call,runners,context,application,arguments,catch,throwable,ex,handle,run,failure,context,listeners,exception,reporters,ex,throw,new,illegal,state,exception,ex,listeners,running,context,return,context
SpringApplication -> public ConfigurableApplicationContext run(String... args);1522251721;Run the Spring application, creating and refreshing a new_{@link ApplicationContext}._@param args the application arguments (usually passed from a Java main method)_@return a running {@link ApplicationContext};public ConfigurableApplicationContext run(String... args) {_		StopWatch stopWatch = new StopWatch()__		stopWatch.start()__		ConfigurableApplicationContext context = null__		Collection<SpringBootExceptionReporter> exceptionReporters = new ArrayList<>()__		configureHeadlessProperty()__		SpringApplicationRunListeners listeners = getRunListeners(args)__		listeners.starting()__		try {_			ApplicationArguments applicationArguments = new DefaultApplicationArguments(_					args)__			ConfigurableEnvironment environment = prepareEnvironment(listeners,_					applicationArguments)__			configureIgnoreBeanInfo(environment)__			Banner printedBanner = printBanner(environment)__			context = createApplicationContext()__			exceptionReporters = getSpringFactoriesInstances(_					SpringBootExceptionReporter.class,_					new Class[] { ConfigurableApplicationContext.class }, context)__			prepareContext(context, environment, listeners, applicationArguments,_					printedBanner)__			refreshContext(context)__			afterRefresh(context, applicationArguments)__			stopWatch.stop()__			if (this.logStartupInfo) {_				new StartupInfoLogger(this.mainApplicationClass)_						.logStarted(getApplicationLog(), stopWatch)__			}_			listeners.started(context)__			callRunners(context, applicationArguments)__		}_		catch (Throwable ex) {_			handleRunFailure(context, ex, exceptionReporters, listeners)__			throw new IllegalStateException(ex)__		}__		try {_			listeners.running(context)__		}_		catch (Throwable ex) {_			handleRunFailure(context, ex, exceptionReporters, null)__			throw new IllegalStateException(ex)__		}_		return context__	};run,the,spring,application,creating,and,refreshing,a,new,link,application,context,param,args,the,application,arguments,usually,passed,from,a,java,main,method,return,a,running,link,application,context;public,configurable,application,context,run,string,args,stop,watch,stop,watch,new,stop,watch,stop,watch,start,configurable,application,context,context,null,collection,spring,boot,exception,reporter,exception,reporters,new,array,list,configure,headless,property,spring,application,run,listeners,listeners,get,run,listeners,args,listeners,starting,try,application,arguments,application,arguments,new,default,application,arguments,args,configurable,environment,environment,prepare,environment,listeners,application,arguments,configure,ignore,bean,info,environment,banner,printed,banner,print,banner,environment,context,create,application,context,exception,reporters,get,spring,factories,instances,spring,boot,exception,reporter,class,new,class,configurable,application,context,class,context,prepare,context,context,environment,listeners,application,arguments,printed,banner,refresh,context,context,after,refresh,context,application,arguments,stop,watch,stop,if,this,log,startup,info,new,startup,info,logger,this,main,application,class,log,started,get,application,log,stop,watch,listeners,started,context,call,runners,context,application,arguments,catch,throwable,ex,handle,run,failure,context,ex,exception,reporters,listeners,throw,new,illegal,state,exception,ex,try,listeners,running,context,catch,throwable,ex,handle,run,failure,context,ex,exception,reporters,null,throw,new,illegal,state,exception,ex,return,context
SpringApplication -> public ConfigurableApplicationContext run(String... args);1525376698;Run the Spring application, creating and refreshing a new_{@link ApplicationContext}._@param args the application arguments (usually passed from a Java main method)_@return a running {@link ApplicationContext};public ConfigurableApplicationContext run(String... args) {_		StopWatch stopWatch = new StopWatch()__		stopWatch.start()__		ConfigurableApplicationContext context = null__		Collection<SpringBootExceptionReporter> exceptionReporters = new ArrayList<>()__		configureHeadlessProperty()__		SpringApplicationRunListeners listeners = getRunListeners(args)__		listeners.starting()__		try {_			ApplicationArguments applicationArguments = new DefaultApplicationArguments(_					args)__			ConfigurableEnvironment environment = prepareEnvironment(listeners,_					applicationArguments)__			configureIgnoreBeanInfo(environment)__			Banner printedBanner = printBanner(environment)__			context = createApplicationContext()__			exceptionReporters = getSpringFactoriesInstances(_					SpringBootExceptionReporter.class,_					new Class[] { ConfigurableApplicationContext.class }, context)__			prepareContext(context, environment, listeners, applicationArguments,_					printedBanner)__			refreshContext(context)__			afterRefresh(context, applicationArguments)__			stopWatch.stop()__			if (this.logStartupInfo) {_				new StartupInfoLogger(this.mainApplicationClass)_						.logStarted(getApplicationLog(), stopWatch)__			}_			listeners.started(context)__			callRunners(context, applicationArguments)__		}_		catch (Throwable ex) {_			handleRunFailure(context, ex, exceptionReporters, listeners)__			throw new IllegalStateException(ex)__		}__		try {_			listeners.running(context)__		}_		catch (Throwable ex) {_			handleRunFailure(context, ex, exceptionReporters, null)__			throw new IllegalStateException(ex)__		}_		return context__	};run,the,spring,application,creating,and,refreshing,a,new,link,application,context,param,args,the,application,arguments,usually,passed,from,a,java,main,method,return,a,running,link,application,context;public,configurable,application,context,run,string,args,stop,watch,stop,watch,new,stop,watch,stop,watch,start,configurable,application,context,context,null,collection,spring,boot,exception,reporter,exception,reporters,new,array,list,configure,headless,property,spring,application,run,listeners,listeners,get,run,listeners,args,listeners,starting,try,application,arguments,application,arguments,new,default,application,arguments,args,configurable,environment,environment,prepare,environment,listeners,application,arguments,configure,ignore,bean,info,environment,banner,printed,banner,print,banner,environment,context,create,application,context,exception,reporters,get,spring,factories,instances,spring,boot,exception,reporter,class,new,class,configurable,application,context,class,context,prepare,context,context,environment,listeners,application,arguments,printed,banner,refresh,context,context,after,refresh,context,application,arguments,stop,watch,stop,if,this,log,startup,info,new,startup,info,logger,this,main,application,class,log,started,get,application,log,stop,watch,listeners,started,context,call,runners,context,application,arguments,catch,throwable,ex,handle,run,failure,context,ex,exception,reporters,listeners,throw,new,illegal,state,exception,ex,try,listeners,running,context,catch,throwable,ex,handle,run,failure,context,ex,exception,reporters,null,throw,new,illegal,state,exception,ex,return,context
SpringApplication -> public ConfigurableApplicationContext run(String... args);1525416882;Run the Spring application, creating and refreshing a new_{@link ApplicationContext}._@param args the application arguments (usually passed from a Java main method)_@return a running {@link ApplicationContext};public ConfigurableApplicationContext run(String... args) {_		StopWatch stopWatch = new StopWatch()__		stopWatch.start()__		ConfigurableApplicationContext context = null__		Collection<SpringBootExceptionReporter> exceptionReporters = new ArrayList<>()__		configureHeadlessProperty()__		SpringApplicationRunListeners listeners = getRunListeners(args)__		listeners.starting()__		try {_			ApplicationArguments applicationArguments = new DefaultApplicationArguments(_					args)__			ConfigurableEnvironment environment = prepareEnvironment(listeners,_					applicationArguments)__			configureIgnoreBeanInfo(environment)__			Banner printedBanner = printBanner(environment)__			context = createApplicationContext()__			exceptionReporters = getSpringFactoriesInstances(_					SpringBootExceptionReporter.class,_					new Class[] { ConfigurableApplicationContext.class }, context)__			prepareContext(context, environment, listeners, applicationArguments,_					printedBanner)__			refreshContext(context)__			afterRefresh(context, applicationArguments)__			stopWatch.stop()__			if (this.logStartupInfo) {_				new StartupInfoLogger(this.mainApplicationClass)_						.logStarted(getApplicationLog(), stopWatch)__			}_			listeners.started(context)__			callRunners(context, applicationArguments)__		}_		catch (Throwable ex) {_			handleRunFailure(context, ex, exceptionReporters, listeners)__			throw new IllegalStateException(ex)__		}__		try {_			listeners.running(context)__		}_		catch (Throwable ex) {_			handleRunFailure(context, ex, exceptionReporters, null)__			throw new IllegalStateException(ex)__		}_		return context__	};run,the,spring,application,creating,and,refreshing,a,new,link,application,context,param,args,the,application,arguments,usually,passed,from,a,java,main,method,return,a,running,link,application,context;public,configurable,application,context,run,string,args,stop,watch,stop,watch,new,stop,watch,stop,watch,start,configurable,application,context,context,null,collection,spring,boot,exception,reporter,exception,reporters,new,array,list,configure,headless,property,spring,application,run,listeners,listeners,get,run,listeners,args,listeners,starting,try,application,arguments,application,arguments,new,default,application,arguments,args,configurable,environment,environment,prepare,environment,listeners,application,arguments,configure,ignore,bean,info,environment,banner,printed,banner,print,banner,environment,context,create,application,context,exception,reporters,get,spring,factories,instances,spring,boot,exception,reporter,class,new,class,configurable,application,context,class,context,prepare,context,context,environment,listeners,application,arguments,printed,banner,refresh,context,context,after,refresh,context,application,arguments,stop,watch,stop,if,this,log,startup,info,new,startup,info,logger,this,main,application,class,log,started,get,application,log,stop,watch,listeners,started,context,call,runners,context,application,arguments,catch,throwable,ex,handle,run,failure,context,ex,exception,reporters,listeners,throw,new,illegal,state,exception,ex,try,listeners,running,context,catch,throwable,ex,handle,run,failure,context,ex,exception,reporters,null,throw,new,illegal,state,exception,ex,return,context
SpringApplication -> public ConfigurableApplicationContext run(String... args);1526993305;Run the Spring application, creating and refreshing a new_{@link ApplicationContext}._@param args the application arguments (usually passed from a Java main method)_@return a running {@link ApplicationContext};public ConfigurableApplicationContext run(String... args) {_		StopWatch stopWatch = new StopWatch()__		stopWatch.start()__		ConfigurableApplicationContext context = null__		Collection<SpringBootExceptionReporter> exceptionReporters = new ArrayList<>()__		configureHeadlessProperty()__		SpringApplicationRunListeners listeners = getRunListeners(args)__		listeners.starting()__		try {_			ApplicationArguments applicationArguments = new DefaultApplicationArguments(_					args)__			ConfigurableEnvironment environment = prepareEnvironment(listeners,_					applicationArguments)__			configureIgnoreBeanInfo(environment)__			Banner printedBanner = printBanner(environment)__			context = createApplicationContext()__			exceptionReporters = getSpringFactoriesInstances(_					SpringBootExceptionReporter.class,_					new Class[] { ConfigurableApplicationContext.class }, context)__			prepareContext(context, environment, listeners, applicationArguments,_					printedBanner)__			refreshContext(context)__			afterRefresh(context, applicationArguments)__			stopWatch.stop()__			if (this.logStartupInfo) {_				new StartupInfoLogger(this.mainApplicationClass)_						.logStarted(getApplicationLog(), stopWatch)__			}_			listeners.started(context)__			callRunners(context, applicationArguments)__		}_		catch (Throwable ex) {_			handleRunFailure(context, ex, exceptionReporters, listeners)__			throw new IllegalStateException(ex)__		}__		try {_			listeners.running(context)__		}_		catch (Throwable ex) {_			handleRunFailure(context, ex, exceptionReporters, null)__			throw new IllegalStateException(ex)__		}_		return context__	};run,the,spring,application,creating,and,refreshing,a,new,link,application,context,param,args,the,application,arguments,usually,passed,from,a,java,main,method,return,a,running,link,application,context;public,configurable,application,context,run,string,args,stop,watch,stop,watch,new,stop,watch,stop,watch,start,configurable,application,context,context,null,collection,spring,boot,exception,reporter,exception,reporters,new,array,list,configure,headless,property,spring,application,run,listeners,listeners,get,run,listeners,args,listeners,starting,try,application,arguments,application,arguments,new,default,application,arguments,args,configurable,environment,environment,prepare,environment,listeners,application,arguments,configure,ignore,bean,info,environment,banner,printed,banner,print,banner,environment,context,create,application,context,exception,reporters,get,spring,factories,instances,spring,boot,exception,reporter,class,new,class,configurable,application,context,class,context,prepare,context,context,environment,listeners,application,arguments,printed,banner,refresh,context,context,after,refresh,context,application,arguments,stop,watch,stop,if,this,log,startup,info,new,startup,info,logger,this,main,application,class,log,started,get,application,log,stop,watch,listeners,started,context,call,runners,context,application,arguments,catch,throwable,ex,handle,run,failure,context,ex,exception,reporters,listeners,throw,new,illegal,state,exception,ex,try,listeners,running,context,catch,throwable,ex,handle,run,failure,context,ex,exception,reporters,null,throw,new,illegal,state,exception,ex,return,context
SpringApplication -> public ConfigurableApplicationContext run(String... args);1529485904;Run the Spring application, creating and refreshing a new_{@link ApplicationContext}._@param args the application arguments (usually passed from a Java main method)_@return a running {@link ApplicationContext};public ConfigurableApplicationContext run(String... args) {_		StopWatch stopWatch = new StopWatch()__		stopWatch.start()__		ConfigurableApplicationContext context = null__		Collection<SpringBootExceptionReporter> exceptionReporters = new ArrayList<>()__		configureHeadlessProperty()__		SpringApplicationRunListeners listeners = getRunListeners(args)__		listeners.starting()__		try {_			ApplicationArguments applicationArguments = new DefaultApplicationArguments(_					args)__			ConfigurableEnvironment environment = prepareEnvironment(listeners,_					applicationArguments)__			configureIgnoreBeanInfo(environment)__			Banner printedBanner = printBanner(environment)__			context = createApplicationContext()__			exceptionReporters = getSpringFactoriesInstances(_					SpringBootExceptionReporter.class,_					new Class[] { ConfigurableApplicationContext.class }, context)__			prepareContext(context, environment, listeners, applicationArguments,_					printedBanner)__			refreshContext(context)__			afterRefresh(context, applicationArguments)__			stopWatch.stop()__			if (this.logStartupInfo) {_				new StartupInfoLogger(this.mainApplicationClass)_						.logStarted(getApplicationLog(), stopWatch)__			}_			listeners.started(context)__			callRunners(context, applicationArguments)__		}_		catch (Throwable ex) {_			handleRunFailure(context, ex, exceptionReporters, listeners)__			throw new IllegalStateException(ex)__		}__		try {_			listeners.running(context)__		}_		catch (Throwable ex) {_			handleRunFailure(context, ex, exceptionReporters, null)__			throw new IllegalStateException(ex)__		}_		return context__	};run,the,spring,application,creating,and,refreshing,a,new,link,application,context,param,args,the,application,arguments,usually,passed,from,a,java,main,method,return,a,running,link,application,context;public,configurable,application,context,run,string,args,stop,watch,stop,watch,new,stop,watch,stop,watch,start,configurable,application,context,context,null,collection,spring,boot,exception,reporter,exception,reporters,new,array,list,configure,headless,property,spring,application,run,listeners,listeners,get,run,listeners,args,listeners,starting,try,application,arguments,application,arguments,new,default,application,arguments,args,configurable,environment,environment,prepare,environment,listeners,application,arguments,configure,ignore,bean,info,environment,banner,printed,banner,print,banner,environment,context,create,application,context,exception,reporters,get,spring,factories,instances,spring,boot,exception,reporter,class,new,class,configurable,application,context,class,context,prepare,context,context,environment,listeners,application,arguments,printed,banner,refresh,context,context,after,refresh,context,application,arguments,stop,watch,stop,if,this,log,startup,info,new,startup,info,logger,this,main,application,class,log,started,get,application,log,stop,watch,listeners,started,context,call,runners,context,application,arguments,catch,throwable,ex,handle,run,failure,context,ex,exception,reporters,listeners,throw,new,illegal,state,exception,ex,try,listeners,running,context,catch,throwable,ex,handle,run,failure,context,ex,exception,reporters,null,throw,new,illegal,state,exception,ex,return,context
SpringApplication -> public ConfigurableApplicationContext run(String... args);1531140616;Run the Spring application, creating and refreshing a new_{@link ApplicationContext}._@param args the application arguments (usually passed from a Java main method)_@return a running {@link ApplicationContext};public ConfigurableApplicationContext run(String... args) {_		StopWatch stopWatch = new StopWatch()__		stopWatch.start()__		ConfigurableApplicationContext context = null__		Collection<SpringBootExceptionReporter> exceptionReporters = new ArrayList<>()__		configureHeadlessProperty()__		SpringApplicationRunListeners listeners = getRunListeners(args)__		listeners.starting()__		try {_			ApplicationArguments applicationArguments = new DefaultApplicationArguments(_					args)__			ConfigurableEnvironment environment = prepareEnvironment(listeners,_					applicationArguments)__			configureIgnoreBeanInfo(environment)__			Banner printedBanner = printBanner(environment)__			context = createApplicationContext()__			exceptionReporters = getSpringFactoriesInstances(_					SpringBootExceptionReporter.class,_					new Class[] { ConfigurableApplicationContext.class }, context)__			prepareContext(context, environment, listeners, applicationArguments,_					printedBanner)__			refreshContext(context)__			afterRefresh(context, applicationArguments)__			stopWatch.stop()__			if (this.logStartupInfo) {_				new StartupInfoLogger(this.mainApplicationClass)_						.logStarted(getApplicationLog(), stopWatch)__			}_			listeners.started(context)__			callRunners(context, applicationArguments)__		}_		catch (Throwable ex) {_			handleRunFailure(context, ex, exceptionReporters, listeners)__			throw new IllegalStateException(ex)__		}__		try {_			listeners.running(context)__		}_		catch (Throwable ex) {_			handleRunFailure(context, ex, exceptionReporters, null)__			throw new IllegalStateException(ex)__		}_		return context__	};run,the,spring,application,creating,and,refreshing,a,new,link,application,context,param,args,the,application,arguments,usually,passed,from,a,java,main,method,return,a,running,link,application,context;public,configurable,application,context,run,string,args,stop,watch,stop,watch,new,stop,watch,stop,watch,start,configurable,application,context,context,null,collection,spring,boot,exception,reporter,exception,reporters,new,array,list,configure,headless,property,spring,application,run,listeners,listeners,get,run,listeners,args,listeners,starting,try,application,arguments,application,arguments,new,default,application,arguments,args,configurable,environment,environment,prepare,environment,listeners,application,arguments,configure,ignore,bean,info,environment,banner,printed,banner,print,banner,environment,context,create,application,context,exception,reporters,get,spring,factories,instances,spring,boot,exception,reporter,class,new,class,configurable,application,context,class,context,prepare,context,context,environment,listeners,application,arguments,printed,banner,refresh,context,context,after,refresh,context,application,arguments,stop,watch,stop,if,this,log,startup,info,new,startup,info,logger,this,main,application,class,log,started,get,application,log,stop,watch,listeners,started,context,call,runners,context,application,arguments,catch,throwable,ex,handle,run,failure,context,ex,exception,reporters,listeners,throw,new,illegal,state,exception,ex,try,listeners,running,context,catch,throwable,ex,handle,run,failure,context,ex,exception,reporters,null,throw,new,illegal,state,exception,ex,return,context
SpringApplication -> public ConfigurableApplicationContext run(String... args);1531155529;Run the Spring application, creating and refreshing a new_{@link ApplicationContext}._@param args the application arguments (usually passed from a Java main method)_@return a running {@link ApplicationContext};public ConfigurableApplicationContext run(String... args) {_		StopWatch stopWatch = new StopWatch()__		stopWatch.start()__		ConfigurableApplicationContext context = null__		Collection<SpringBootExceptionReporter> exceptionReporters = new ArrayList<>()__		configureHeadlessProperty()__		SpringApplicationRunListeners listeners = getRunListeners(args)__		listeners.starting()__		try {_			ApplicationArguments applicationArguments = new DefaultApplicationArguments(_					args)__			ConfigurableEnvironment environment = prepareEnvironment(listeners,_					applicationArguments)__			configureIgnoreBeanInfo(environment)__			Banner printedBanner = printBanner(environment)__			context = createApplicationContext()__			exceptionReporters = getSpringFactoriesInstances(_					SpringBootExceptionReporter.class,_					new Class[] { ConfigurableApplicationContext.class }, context)__			prepareContext(context, environment, listeners, applicationArguments,_					printedBanner)__			refreshContext(context)__			afterRefresh(context, applicationArguments)__			stopWatch.stop()__			if (this.logStartupInfo) {_				new StartupInfoLogger(this.mainApplicationClass)_						.logStarted(getApplicationLog(), stopWatch)__			}_			listeners.started(context)__			callRunners(context, applicationArguments)__		}_		catch (Throwable ex) {_			handleRunFailure(context, ex, exceptionReporters, listeners)__			throw new IllegalStateException(ex)__		}__		try {_			listeners.running(context)__		}_		catch (Throwable ex) {_			handleRunFailure(context, ex, exceptionReporters, null)__			throw new IllegalStateException(ex)__		}_		return context__	};run,the,spring,application,creating,and,refreshing,a,new,link,application,context,param,args,the,application,arguments,usually,passed,from,a,java,main,method,return,a,running,link,application,context;public,configurable,application,context,run,string,args,stop,watch,stop,watch,new,stop,watch,stop,watch,start,configurable,application,context,context,null,collection,spring,boot,exception,reporter,exception,reporters,new,array,list,configure,headless,property,spring,application,run,listeners,listeners,get,run,listeners,args,listeners,starting,try,application,arguments,application,arguments,new,default,application,arguments,args,configurable,environment,environment,prepare,environment,listeners,application,arguments,configure,ignore,bean,info,environment,banner,printed,banner,print,banner,environment,context,create,application,context,exception,reporters,get,spring,factories,instances,spring,boot,exception,reporter,class,new,class,configurable,application,context,class,context,prepare,context,context,environment,listeners,application,arguments,printed,banner,refresh,context,context,after,refresh,context,application,arguments,stop,watch,stop,if,this,log,startup,info,new,startup,info,logger,this,main,application,class,log,started,get,application,log,stop,watch,listeners,started,context,call,runners,context,application,arguments,catch,throwable,ex,handle,run,failure,context,ex,exception,reporters,listeners,throw,new,illegal,state,exception,ex,try,listeners,running,context,catch,throwable,ex,handle,run,failure,context,ex,exception,reporters,null,throw,new,illegal,state,exception,ex,return,context
SpringApplication -> public ConfigurableApplicationContext run(String... args);1531222098;Run the Spring application, creating and refreshing a new_{@link ApplicationContext}._@param args the application arguments (usually passed from a Java main method)_@return a running {@link ApplicationContext};public ConfigurableApplicationContext run(String... args) {_		StopWatch stopWatch = new StopWatch()__		stopWatch.start()__		ConfigurableApplicationContext context = null__		Collection<SpringBootExceptionReporter> exceptionReporters = new ArrayList<>()__		configureHeadlessProperty()__		SpringApplicationRunListeners listeners = getRunListeners(args)__		listeners.starting()__		try {_			ApplicationArguments applicationArguments = new DefaultApplicationArguments(_					args)__			ConfigurableEnvironment environment = prepareEnvironment(listeners,_					applicationArguments)__			configureIgnoreBeanInfo(environment)__			Banner printedBanner = printBanner(environment)__			context = createApplicationContext()__			exceptionReporters = getSpringFactoriesInstances(_					SpringBootExceptionReporter.class,_					new Class[] { ConfigurableApplicationContext.class }, context)__			prepareContext(context, environment, listeners, applicationArguments,_					printedBanner)__			refreshContext(context)__			afterRefresh(context, applicationArguments)__			stopWatch.stop()__			if (this.logStartupInfo) {_				new StartupInfoLogger(this.mainApplicationClass)_						.logStarted(getApplicationLog(), stopWatch)__			}_			listeners.started(context)__			callRunners(context, applicationArguments)__		}_		catch (Throwable ex) {_			handleRunFailure(context, ex, exceptionReporters, listeners)__			throw new IllegalStateException(ex)__		}__		try {_			listeners.running(context)__		}_		catch (Throwable ex) {_			handleRunFailure(context, ex, exceptionReporters, null)__			throw new IllegalStateException(ex)__		}_		return context__	};run,the,spring,application,creating,and,refreshing,a,new,link,application,context,param,args,the,application,arguments,usually,passed,from,a,java,main,method,return,a,running,link,application,context;public,configurable,application,context,run,string,args,stop,watch,stop,watch,new,stop,watch,stop,watch,start,configurable,application,context,context,null,collection,spring,boot,exception,reporter,exception,reporters,new,array,list,configure,headless,property,spring,application,run,listeners,listeners,get,run,listeners,args,listeners,starting,try,application,arguments,application,arguments,new,default,application,arguments,args,configurable,environment,environment,prepare,environment,listeners,application,arguments,configure,ignore,bean,info,environment,banner,printed,banner,print,banner,environment,context,create,application,context,exception,reporters,get,spring,factories,instances,spring,boot,exception,reporter,class,new,class,configurable,application,context,class,context,prepare,context,context,environment,listeners,application,arguments,printed,banner,refresh,context,context,after,refresh,context,application,arguments,stop,watch,stop,if,this,log,startup,info,new,startup,info,logger,this,main,application,class,log,started,get,application,log,stop,watch,listeners,started,context,call,runners,context,application,arguments,catch,throwable,ex,handle,run,failure,context,ex,exception,reporters,listeners,throw,new,illegal,state,exception,ex,try,listeners,running,context,catch,throwable,ex,handle,run,failure,context,ex,exception,reporters,null,throw,new,illegal,state,exception,ex,return,context
SpringApplication -> public ConfigurableApplicationContext run(String... args);1532738143;Run the Spring application, creating and refreshing a new_{@link ApplicationContext}._@param args the application arguments (usually passed from a Java main method)_@return a running {@link ApplicationContext};public ConfigurableApplicationContext run(String... args) {_		StopWatch stopWatch = new StopWatch()__		stopWatch.start()__		ConfigurableApplicationContext context = null__		Collection<SpringBootExceptionReporter> exceptionReporters = new ArrayList<>()__		configureHeadlessProperty()__		SpringApplicationRunListeners listeners = getRunListeners(args)__		listeners.starting()__		try {_			ApplicationArguments applicationArguments = new DefaultApplicationArguments(_					args)__			ConfigurableEnvironment environment = prepareEnvironment(listeners,_					applicationArguments)__			configureIgnoreBeanInfo(environment)__			Banner printedBanner = printBanner(environment)__			context = createApplicationContext()__			exceptionReporters = getSpringFactoriesInstances(_					SpringBootExceptionReporter.class,_					new Class[] { ConfigurableApplicationContext.class }, context)__			prepareContext(context, environment, listeners, applicationArguments,_					printedBanner)__			refreshContext(context)__			afterRefresh(context, applicationArguments)__			stopWatch.stop()__			if (this.logStartupInfo) {_				new StartupInfoLogger(this.mainApplicationClass)_						.logStarted(getApplicationLog(), stopWatch)__			}_			listeners.started(context)__			callRunners(context, applicationArguments)__		}_		catch (Throwable ex) {_			handleRunFailure(context, ex, exceptionReporters, listeners)__			throw new IllegalStateException(ex)__		}__		try {_			listeners.running(context)__		}_		catch (Throwable ex) {_			handleRunFailure(context, ex, exceptionReporters, null)__			throw new IllegalStateException(ex)__		}_		return context__	};run,the,spring,application,creating,and,refreshing,a,new,link,application,context,param,args,the,application,arguments,usually,passed,from,a,java,main,method,return,a,running,link,application,context;public,configurable,application,context,run,string,args,stop,watch,stop,watch,new,stop,watch,stop,watch,start,configurable,application,context,context,null,collection,spring,boot,exception,reporter,exception,reporters,new,array,list,configure,headless,property,spring,application,run,listeners,listeners,get,run,listeners,args,listeners,starting,try,application,arguments,application,arguments,new,default,application,arguments,args,configurable,environment,environment,prepare,environment,listeners,application,arguments,configure,ignore,bean,info,environment,banner,printed,banner,print,banner,environment,context,create,application,context,exception,reporters,get,spring,factories,instances,spring,boot,exception,reporter,class,new,class,configurable,application,context,class,context,prepare,context,context,environment,listeners,application,arguments,printed,banner,refresh,context,context,after,refresh,context,application,arguments,stop,watch,stop,if,this,log,startup,info,new,startup,info,logger,this,main,application,class,log,started,get,application,log,stop,watch,listeners,started,context,call,runners,context,application,arguments,catch,throwable,ex,handle,run,failure,context,ex,exception,reporters,listeners,throw,new,illegal,state,exception,ex,try,listeners,running,context,catch,throwable,ex,handle,run,failure,context,ex,exception,reporters,null,throw,new,illegal,state,exception,ex,return,context
SpringApplication -> public ConfigurableApplicationContext run(String... args);1534188228;Run the Spring application, creating and refreshing a new_{@link ApplicationContext}._@param args the application arguments (usually passed from a Java main method)_@return a running {@link ApplicationContext};public ConfigurableApplicationContext run(String... args) {_		StopWatch stopWatch = new StopWatch()__		stopWatch.start()__		ConfigurableApplicationContext context = null__		Collection<SpringBootExceptionReporter> exceptionReporters = new ArrayList<>()__		configureHeadlessProperty()__		SpringApplicationRunListeners listeners = getRunListeners(args)__		listeners.starting()__		try {_			ApplicationArguments applicationArguments = new DefaultApplicationArguments(_					args)__			ConfigurableEnvironment environment = prepareEnvironment(listeners,_					applicationArguments)__			configureIgnoreBeanInfo(environment)__			Banner printedBanner = printBanner(environment)__			context = createApplicationContext()__			exceptionReporters = getSpringFactoriesInstances(_					SpringBootExceptionReporter.class,_					new Class[] { ConfigurableApplicationContext.class }, context)__			prepareContext(context, environment, listeners, applicationArguments,_					printedBanner)__			refreshContext(context)__			afterRefresh(context, applicationArguments)__			stopWatch.stop()__			if (this.logStartupInfo) {_				new StartupInfoLogger(this.mainApplicationClass)_						.logStarted(getApplicationLog(), stopWatch)__			}_			listeners.started(context)__			callRunners(context, applicationArguments)__		}_		catch (Throwable ex) {_			handleRunFailure(context, ex, exceptionReporters, listeners)__			throw new IllegalStateException(ex)__		}__		try {_			listeners.running(context)__		}_		catch (Throwable ex) {_			handleRunFailure(context, ex, exceptionReporters, null)__			throw new IllegalStateException(ex)__		}_		return context__	};run,the,spring,application,creating,and,refreshing,a,new,link,application,context,param,args,the,application,arguments,usually,passed,from,a,java,main,method,return,a,running,link,application,context;public,configurable,application,context,run,string,args,stop,watch,stop,watch,new,stop,watch,stop,watch,start,configurable,application,context,context,null,collection,spring,boot,exception,reporter,exception,reporters,new,array,list,configure,headless,property,spring,application,run,listeners,listeners,get,run,listeners,args,listeners,starting,try,application,arguments,application,arguments,new,default,application,arguments,args,configurable,environment,environment,prepare,environment,listeners,application,arguments,configure,ignore,bean,info,environment,banner,printed,banner,print,banner,environment,context,create,application,context,exception,reporters,get,spring,factories,instances,spring,boot,exception,reporter,class,new,class,configurable,application,context,class,context,prepare,context,context,environment,listeners,application,arguments,printed,banner,refresh,context,context,after,refresh,context,application,arguments,stop,watch,stop,if,this,log,startup,info,new,startup,info,logger,this,main,application,class,log,started,get,application,log,stop,watch,listeners,started,context,call,runners,context,application,arguments,catch,throwable,ex,handle,run,failure,context,ex,exception,reporters,listeners,throw,new,illegal,state,exception,ex,try,listeners,running,context,catch,throwable,ex,handle,run,failure,context,ex,exception,reporters,null,throw,new,illegal,state,exception,ex,return,context
SpringApplication -> public ConfigurableApplicationContext run(String... args);1535104170;Run the Spring application, creating and refreshing a new_{@link ApplicationContext}._@param args the application arguments (usually passed from a Java main method)_@return a running {@link ApplicationContext};public ConfigurableApplicationContext run(String... args) {_		StopWatch stopWatch = new StopWatch()__		stopWatch.start()__		ConfigurableApplicationContext context = null__		Collection<SpringBootExceptionReporter> exceptionReporters = new ArrayList<>()__		configureHeadlessProperty()__		SpringApplicationRunListeners listeners = getRunListeners(args)__		listeners.starting()__		try {_			ApplicationArguments applicationArguments = new DefaultApplicationArguments(_					args)__			ConfigurableEnvironment environment = prepareEnvironment(listeners,_					applicationArguments)__			configureIgnoreBeanInfo(environment)__			Banner printedBanner = printBanner(environment)__			context = createApplicationContext()__			exceptionReporters = getSpringFactoriesInstances(_					SpringBootExceptionReporter.class,_					new Class[] { ConfigurableApplicationContext.class }, context)__			prepareContext(context, environment, listeners, applicationArguments,_					printedBanner)__			refreshContext(context)__			afterRefresh(context, applicationArguments)__			stopWatch.stop()__			if (this.logStartupInfo) {_				new StartupInfoLogger(this.mainApplicationClass)_						.logStarted(getApplicationLog(), stopWatch)__			}_			listeners.started(context)__			callRunners(context, applicationArguments)__		}_		catch (Throwable ex) {_			handleRunFailure(context, ex, exceptionReporters, listeners)__			throw new IllegalStateException(ex)__		}__		try {_			listeners.running(context)__		}_		catch (Throwable ex) {_			handleRunFailure(context, ex, exceptionReporters, null)__			throw new IllegalStateException(ex)__		}_		return context__	};run,the,spring,application,creating,and,refreshing,a,new,link,application,context,param,args,the,application,arguments,usually,passed,from,a,java,main,method,return,a,running,link,application,context;public,configurable,application,context,run,string,args,stop,watch,stop,watch,new,stop,watch,stop,watch,start,configurable,application,context,context,null,collection,spring,boot,exception,reporter,exception,reporters,new,array,list,configure,headless,property,spring,application,run,listeners,listeners,get,run,listeners,args,listeners,starting,try,application,arguments,application,arguments,new,default,application,arguments,args,configurable,environment,environment,prepare,environment,listeners,application,arguments,configure,ignore,bean,info,environment,banner,printed,banner,print,banner,environment,context,create,application,context,exception,reporters,get,spring,factories,instances,spring,boot,exception,reporter,class,new,class,configurable,application,context,class,context,prepare,context,context,environment,listeners,application,arguments,printed,banner,refresh,context,context,after,refresh,context,application,arguments,stop,watch,stop,if,this,log,startup,info,new,startup,info,logger,this,main,application,class,log,started,get,application,log,stop,watch,listeners,started,context,call,runners,context,application,arguments,catch,throwable,ex,handle,run,failure,context,ex,exception,reporters,listeners,throw,new,illegal,state,exception,ex,try,listeners,running,context,catch,throwable,ex,handle,run,failure,context,ex,exception,reporters,null,throw,new,illegal,state,exception,ex,return,context
SpringApplication -> public ConfigurableApplicationContext run(String... args);1536701067;Run the Spring application, creating and refreshing a new_{@link ApplicationContext}._@param args the application arguments (usually passed from a Java main method)_@return a running {@link ApplicationContext};public ConfigurableApplicationContext run(String... args) {_		StopWatch stopWatch = new StopWatch()__		stopWatch.start()__		ConfigurableApplicationContext context = null__		Collection<SpringBootExceptionReporter> exceptionReporters = new ArrayList<>()__		configureHeadlessProperty()__		SpringApplicationRunListeners listeners = getRunListeners(args)__		listeners.starting()__		try {_			ApplicationArguments applicationArguments = new DefaultApplicationArguments(_					args)__			ConfigurableEnvironment environment = prepareEnvironment(listeners,_					applicationArguments)__			configureIgnoreBeanInfo(environment)__			Banner printedBanner = printBanner(environment)__			context = createApplicationContext()__			exceptionReporters = getSpringFactoriesInstances(_					SpringBootExceptionReporter.class,_					new Class[] { ConfigurableApplicationContext.class }, context)__			prepareContext(context, environment, listeners, applicationArguments,_					printedBanner)__			refreshContext(context)__			afterRefresh(context, applicationArguments)__			stopWatch.stop()__			if (this.logStartupInfo) {_				new StartupInfoLogger(this.mainApplicationClass)_						.logStarted(getApplicationLog(), stopWatch)__			}_			listeners.started(context)__			callRunners(context, applicationArguments)__		}_		catch (Throwable ex) {_			handleRunFailure(context, ex, exceptionReporters, listeners)__			throw new IllegalStateException(ex)__		}__		try {_			listeners.running(context)__		}_		catch (Throwable ex) {_			handleRunFailure(context, ex, exceptionReporters, null)__			throw new IllegalStateException(ex)__		}_		return context__	};run,the,spring,application,creating,and,refreshing,a,new,link,application,context,param,args,the,application,arguments,usually,passed,from,a,java,main,method,return,a,running,link,application,context;public,configurable,application,context,run,string,args,stop,watch,stop,watch,new,stop,watch,stop,watch,start,configurable,application,context,context,null,collection,spring,boot,exception,reporter,exception,reporters,new,array,list,configure,headless,property,spring,application,run,listeners,listeners,get,run,listeners,args,listeners,starting,try,application,arguments,application,arguments,new,default,application,arguments,args,configurable,environment,environment,prepare,environment,listeners,application,arguments,configure,ignore,bean,info,environment,banner,printed,banner,print,banner,environment,context,create,application,context,exception,reporters,get,spring,factories,instances,spring,boot,exception,reporter,class,new,class,configurable,application,context,class,context,prepare,context,context,environment,listeners,application,arguments,printed,banner,refresh,context,context,after,refresh,context,application,arguments,stop,watch,stop,if,this,log,startup,info,new,startup,info,logger,this,main,application,class,log,started,get,application,log,stop,watch,listeners,started,context,call,runners,context,application,arguments,catch,throwable,ex,handle,run,failure,context,ex,exception,reporters,listeners,throw,new,illegal,state,exception,ex,try,listeners,running,context,catch,throwable,ex,handle,run,failure,context,ex,exception,reporters,null,throw,new,illegal,state,exception,ex,return,context
SpringApplication -> public ConfigurableApplicationContext run(String... args);1538570355;Run the Spring application, creating and refreshing a new_{@link ApplicationContext}._@param args the application arguments (usually passed from a Java main method)_@return a running {@link ApplicationContext};public ConfigurableApplicationContext run(String... args) {_		StopWatch stopWatch = new StopWatch()__		stopWatch.start()__		ConfigurableApplicationContext context = null__		Collection<SpringBootExceptionReporter> exceptionReporters = new ArrayList<>()__		configureHeadlessProperty()__		SpringApplicationRunListeners listeners = getRunListeners(args)__		listeners.starting()__		try {_			ApplicationArguments applicationArguments = new DefaultApplicationArguments(_					args)__			ConfigurableEnvironment environment = prepareEnvironment(listeners,_					applicationArguments)__			configureIgnoreBeanInfo(environment)__			Banner printedBanner = printBanner(environment)__			context = createApplicationContext()__			exceptionReporters = getSpringFactoriesInstances(_					SpringBootExceptionReporter.class,_					new Class[] { ConfigurableApplicationContext.class }, context)__			prepareContext(context, environment, listeners, applicationArguments,_					printedBanner)__			refreshContext(context)__			afterRefresh(context, applicationArguments)__			stopWatch.stop()__			if (this.logStartupInfo) {_				new StartupInfoLogger(this.mainApplicationClass)_						.logStarted(getApplicationLog(), stopWatch)__			}_			listeners.started(context)__			callRunners(context, applicationArguments)__		}_		catch (Throwable ex) {_			handleRunFailure(context, ex, exceptionReporters, listeners)__			throw new IllegalStateException(ex)__		}__		try {_			listeners.running(context)__		}_		catch (Throwable ex) {_			handleRunFailure(context, ex, exceptionReporters, null)__			throw new IllegalStateException(ex)__		}_		return context__	};run,the,spring,application,creating,and,refreshing,a,new,link,application,context,param,args,the,application,arguments,usually,passed,from,a,java,main,method,return,a,running,link,application,context;public,configurable,application,context,run,string,args,stop,watch,stop,watch,new,stop,watch,stop,watch,start,configurable,application,context,context,null,collection,spring,boot,exception,reporter,exception,reporters,new,array,list,configure,headless,property,spring,application,run,listeners,listeners,get,run,listeners,args,listeners,starting,try,application,arguments,application,arguments,new,default,application,arguments,args,configurable,environment,environment,prepare,environment,listeners,application,arguments,configure,ignore,bean,info,environment,banner,printed,banner,print,banner,environment,context,create,application,context,exception,reporters,get,spring,factories,instances,spring,boot,exception,reporter,class,new,class,configurable,application,context,class,context,prepare,context,context,environment,listeners,application,arguments,printed,banner,refresh,context,context,after,refresh,context,application,arguments,stop,watch,stop,if,this,log,startup,info,new,startup,info,logger,this,main,application,class,log,started,get,application,log,stop,watch,listeners,started,context,call,runners,context,application,arguments,catch,throwable,ex,handle,run,failure,context,ex,exception,reporters,listeners,throw,new,illegal,state,exception,ex,try,listeners,running,context,catch,throwable,ex,handle,run,failure,context,ex,exception,reporters,null,throw,new,illegal,state,exception,ex,return,context
SpringApplication -> public ConfigurableApplicationContext run(String... args);1538707540;Run the Spring application, creating and refreshing a new_{@link ApplicationContext}._@param args the application arguments (usually passed from a Java main method)_@return a running {@link ApplicationContext};public ConfigurableApplicationContext run(String... args) {_		StopWatch stopWatch = new StopWatch()__		stopWatch.start()__		ConfigurableApplicationContext context = null__		Collection<SpringBootExceptionReporter> exceptionReporters = new ArrayList<>()__		configureHeadlessProperty()__		SpringApplicationRunListeners listeners = getRunListeners(args)__		listeners.starting()__		try {_			ApplicationArguments applicationArguments = new DefaultApplicationArguments(_					args)__			ConfigurableEnvironment environment = prepareEnvironment(listeners,_					applicationArguments)__			configureIgnoreBeanInfo(environment)__			Banner printedBanner = printBanner(environment)__			context = createApplicationContext()__			exceptionReporters = getSpringFactoriesInstances(_					SpringBootExceptionReporter.class,_					new Class[] { ConfigurableApplicationContext.class }, context)__			prepareContext(context, environment, listeners, applicationArguments,_					printedBanner)__			refreshContext(context)__			afterRefresh(context, applicationArguments)__			stopWatch.stop()__			if (this.logStartupInfo) {_				new StartupInfoLogger(this.mainApplicationClass)_						.logStarted(getApplicationLog(), stopWatch)__			}_			listeners.started(context)__			callRunners(context, applicationArguments)__		}_		catch (Throwable ex) {_			handleRunFailure(context, ex, exceptionReporters, listeners)__			throw new IllegalStateException(ex)__		}__		try {_			listeners.running(context)__		}_		catch (Throwable ex) {_			handleRunFailure(context, ex, exceptionReporters, null)__			throw new IllegalStateException(ex)__		}_		return context__	};run,the,spring,application,creating,and,refreshing,a,new,link,application,context,param,args,the,application,arguments,usually,passed,from,a,java,main,method,return,a,running,link,application,context;public,configurable,application,context,run,string,args,stop,watch,stop,watch,new,stop,watch,stop,watch,start,configurable,application,context,context,null,collection,spring,boot,exception,reporter,exception,reporters,new,array,list,configure,headless,property,spring,application,run,listeners,listeners,get,run,listeners,args,listeners,starting,try,application,arguments,application,arguments,new,default,application,arguments,args,configurable,environment,environment,prepare,environment,listeners,application,arguments,configure,ignore,bean,info,environment,banner,printed,banner,print,banner,environment,context,create,application,context,exception,reporters,get,spring,factories,instances,spring,boot,exception,reporter,class,new,class,configurable,application,context,class,context,prepare,context,context,environment,listeners,application,arguments,printed,banner,refresh,context,context,after,refresh,context,application,arguments,stop,watch,stop,if,this,log,startup,info,new,startup,info,logger,this,main,application,class,log,started,get,application,log,stop,watch,listeners,started,context,call,runners,context,application,arguments,catch,throwable,ex,handle,run,failure,context,ex,exception,reporters,listeners,throw,new,illegal,state,exception,ex,try,listeners,running,context,catch,throwable,ex,handle,run,failure,context,ex,exception,reporters,null,throw,new,illegal,state,exception,ex,return,context
SpringApplication -> public ConfigurableApplicationContext run(String... args);1538750610;Run the Spring application, creating and refreshing a new_{@link ApplicationContext}._@param args the application arguments (usually passed from a Java main method)_@return a running {@link ApplicationContext};public ConfigurableApplicationContext run(String... args) {_		StopWatch stopWatch = new StopWatch()__		stopWatch.start()__		ConfigurableApplicationContext context = null__		Collection<SpringBootExceptionReporter> exceptionReporters = new ArrayList<>()__		configureHeadlessProperty()__		SpringApplicationRunListeners listeners = getRunListeners(args)__		listeners.starting()__		try {_			ApplicationArguments applicationArguments = new DefaultApplicationArguments(_					args)__			ConfigurableEnvironment environment = prepareEnvironment(listeners,_					applicationArguments)__			configureIgnoreBeanInfo(environment)__			Banner printedBanner = printBanner(environment)__			context = createApplicationContext()__			exceptionReporters = getSpringFactoriesInstances(_					SpringBootExceptionReporter.class,_					new Class[] { ConfigurableApplicationContext.class }, context)__			prepareContext(context, environment, listeners, applicationArguments,_					printedBanner)__			refreshContext(context)__			afterRefresh(context, applicationArguments)__			stopWatch.stop()__			if (this.logStartupInfo) {_				new StartupInfoLogger(this.mainApplicationClass)_						.logStarted(getApplicationLog(), stopWatch)__			}_			listeners.started(context)__			callRunners(context, applicationArguments)__		}_		catch (Throwable ex) {_			handleRunFailure(context, ex, exceptionReporters, listeners)__			throw new IllegalStateException(ex)__		}__		try {_			listeners.running(context)__		}_		catch (Throwable ex) {_			handleRunFailure(context, ex, exceptionReporters, null)__			throw new IllegalStateException(ex)__		}_		return context__	};run,the,spring,application,creating,and,refreshing,a,new,link,application,context,param,args,the,application,arguments,usually,passed,from,a,java,main,method,return,a,running,link,application,context;public,configurable,application,context,run,string,args,stop,watch,stop,watch,new,stop,watch,stop,watch,start,configurable,application,context,context,null,collection,spring,boot,exception,reporter,exception,reporters,new,array,list,configure,headless,property,spring,application,run,listeners,listeners,get,run,listeners,args,listeners,starting,try,application,arguments,application,arguments,new,default,application,arguments,args,configurable,environment,environment,prepare,environment,listeners,application,arguments,configure,ignore,bean,info,environment,banner,printed,banner,print,banner,environment,context,create,application,context,exception,reporters,get,spring,factories,instances,spring,boot,exception,reporter,class,new,class,configurable,application,context,class,context,prepare,context,context,environment,listeners,application,arguments,printed,banner,refresh,context,context,after,refresh,context,application,arguments,stop,watch,stop,if,this,log,startup,info,new,startup,info,logger,this,main,application,class,log,started,get,application,log,stop,watch,listeners,started,context,call,runners,context,application,arguments,catch,throwable,ex,handle,run,failure,context,ex,exception,reporters,listeners,throw,new,illegal,state,exception,ex,try,listeners,running,context,catch,throwable,ex,handle,run,failure,context,ex,exception,reporters,null,throw,new,illegal,state,exception,ex,return,context
SpringApplication -> public ConfigurableApplicationContext run(String... args);1538771652;Run the Spring application, creating and refreshing a new_{@link ApplicationContext}._@param args the application arguments (usually passed from a Java main method)_@return a running {@link ApplicationContext};public ConfigurableApplicationContext run(String... args) {_		StopWatch stopWatch = new StopWatch()__		stopWatch.start()__		ConfigurableApplicationContext context = null__		Collection<SpringBootExceptionReporter> exceptionReporters = new ArrayList<>()__		configureHeadlessProperty()__		SpringApplicationRunListeners listeners = getRunListeners(args)__		listeners.starting()__		try {_			ApplicationArguments applicationArguments = new DefaultApplicationArguments(_					args)__			ConfigurableEnvironment environment = prepareEnvironment(listeners,_					applicationArguments)__			configureIgnoreBeanInfo(environment)__			Banner printedBanner = printBanner(environment)__			context = createApplicationContext()__			exceptionReporters = getSpringFactoriesInstances(_					SpringBootExceptionReporter.class,_					new Class[] { ConfigurableApplicationContext.class }, context)__			prepareContext(context, environment, listeners, applicationArguments,_					printedBanner)__			refreshContext(context)__			afterRefresh(context, applicationArguments)__			stopWatch.stop()__			if (this.logStartupInfo) {_				new StartupInfoLogger(this.mainApplicationClass)_						.logStarted(getApplicationLog(), stopWatch)__			}_			listeners.started(context)__			callRunners(context, applicationArguments)__		}_		catch (Throwable ex) {_			handleRunFailure(context, ex, exceptionReporters, listeners)__			throw new IllegalStateException(ex)__		}__		try {_			listeners.running(context)__		}_		catch (Throwable ex) {_			handleRunFailure(context, ex, exceptionReporters, null)__			throw new IllegalStateException(ex)__		}_		return context__	};run,the,spring,application,creating,and,refreshing,a,new,link,application,context,param,args,the,application,arguments,usually,passed,from,a,java,main,method,return,a,running,link,application,context;public,configurable,application,context,run,string,args,stop,watch,stop,watch,new,stop,watch,stop,watch,start,configurable,application,context,context,null,collection,spring,boot,exception,reporter,exception,reporters,new,array,list,configure,headless,property,spring,application,run,listeners,listeners,get,run,listeners,args,listeners,starting,try,application,arguments,application,arguments,new,default,application,arguments,args,configurable,environment,environment,prepare,environment,listeners,application,arguments,configure,ignore,bean,info,environment,banner,printed,banner,print,banner,environment,context,create,application,context,exception,reporters,get,spring,factories,instances,spring,boot,exception,reporter,class,new,class,configurable,application,context,class,context,prepare,context,context,environment,listeners,application,arguments,printed,banner,refresh,context,context,after,refresh,context,application,arguments,stop,watch,stop,if,this,log,startup,info,new,startup,info,logger,this,main,application,class,log,started,get,application,log,stop,watch,listeners,started,context,call,runners,context,application,arguments,catch,throwable,ex,handle,run,failure,context,ex,exception,reporters,listeners,throw,new,illegal,state,exception,ex,try,listeners,running,context,catch,throwable,ex,handle,run,failure,context,ex,exception,reporters,null,throw,new,illegal,state,exception,ex,return,context
SpringApplication -> public ConfigurableApplicationContext run(String... args);1540419762;Run the Spring application, creating and refreshing a new_{@link ApplicationContext}._@param args the application arguments (usually passed from a Java main method)_@return a running {@link ApplicationContext};public ConfigurableApplicationContext run(String... args) {_		StopWatch stopWatch = new StopWatch()__		stopWatch.start()__		ConfigurableApplicationContext context = null__		Collection<SpringBootExceptionReporter> exceptionReporters = new ArrayList<>()__		configureHeadlessProperty()__		SpringApplicationRunListeners listeners = getRunListeners(args)__		listeners.starting()__		try {_			ApplicationArguments applicationArguments = new DefaultApplicationArguments(_					args)__			ConfigurableEnvironment environment = prepareEnvironment(listeners,_					applicationArguments)__			configureIgnoreBeanInfo(environment)__			Banner printedBanner = printBanner(environment)__			context = createApplicationContext()__			exceptionReporters = getSpringFactoriesInstances(_					SpringBootExceptionReporter.class,_					new Class[] { ConfigurableApplicationContext.class }, context)__			prepareContext(context, environment, listeners, applicationArguments,_					printedBanner)__			refreshContext(context)__			afterRefresh(context, applicationArguments)__			stopWatch.stop()__			if (this.logStartupInfo) {_				new StartupInfoLogger(this.mainApplicationClass)_						.logStarted(getApplicationLog(), stopWatch)__			}_			listeners.started(context)__			callRunners(context, applicationArguments)__		}_		catch (Throwable ex) {_			handleRunFailure(context, ex, exceptionReporters, listeners)__			throw new IllegalStateException(ex)__		}__		try {_			listeners.running(context)__		}_		catch (Throwable ex) {_			handleRunFailure(context, ex, exceptionReporters, null)__			throw new IllegalStateException(ex)__		}_		return context__	};run,the,spring,application,creating,and,refreshing,a,new,link,application,context,param,args,the,application,arguments,usually,passed,from,a,java,main,method,return,a,running,link,application,context;public,configurable,application,context,run,string,args,stop,watch,stop,watch,new,stop,watch,stop,watch,start,configurable,application,context,context,null,collection,spring,boot,exception,reporter,exception,reporters,new,array,list,configure,headless,property,spring,application,run,listeners,listeners,get,run,listeners,args,listeners,starting,try,application,arguments,application,arguments,new,default,application,arguments,args,configurable,environment,environment,prepare,environment,listeners,application,arguments,configure,ignore,bean,info,environment,banner,printed,banner,print,banner,environment,context,create,application,context,exception,reporters,get,spring,factories,instances,spring,boot,exception,reporter,class,new,class,configurable,application,context,class,context,prepare,context,context,environment,listeners,application,arguments,printed,banner,refresh,context,context,after,refresh,context,application,arguments,stop,watch,stop,if,this,log,startup,info,new,startup,info,logger,this,main,application,class,log,started,get,application,log,stop,watch,listeners,started,context,call,runners,context,application,arguments,catch,throwable,ex,handle,run,failure,context,ex,exception,reporters,listeners,throw,new,illegal,state,exception,ex,try,listeners,running,context,catch,throwable,ex,handle,run,failure,context,ex,exception,reporters,null,throw,new,illegal,state,exception,ex,return,context
SpringApplication -> public ConfigurableApplicationContext run(String... args);1541060131;Run the Spring application, creating and refreshing a new_{@link ApplicationContext}._@param args the application arguments (usually passed from a Java main method)_@return a running {@link ApplicationContext};public ConfigurableApplicationContext run(String... args) {_		StopWatch stopWatch = new StopWatch()__		stopWatch.start()__		ConfigurableApplicationContext context = null__		Collection<SpringBootExceptionReporter> exceptionReporters = new ArrayList<>()__		configureHeadlessProperty()__		SpringApplicationRunListeners listeners = getRunListeners(args)__		listeners.starting()__		try {_			ApplicationArguments applicationArguments = new DefaultApplicationArguments(_					args)__			ConfigurableEnvironment environment = prepareEnvironment(listeners,_					applicationArguments)__			configureIgnoreBeanInfo(environment)__			Banner printedBanner = printBanner(environment)__			context = createApplicationContext()__			exceptionReporters = getSpringFactoriesInstances(_					SpringBootExceptionReporter.class,_					new Class[] { ConfigurableApplicationContext.class }, context)__			prepareContext(context, environment, listeners, applicationArguments,_					printedBanner)__			refreshContext(context)__			afterRefresh(context, applicationArguments)__			stopWatch.stop()__			if (this.logStartupInfo) {_				new StartupInfoLogger(this.mainApplicationClass)_						.logStarted(getApplicationLog(), stopWatch)__			}_			listeners.started(context)__			callRunners(context, applicationArguments)__		}_		catch (Throwable ex) {_			handleRunFailure(context, ex, exceptionReporters, listeners)__			throw new IllegalStateException(ex)__		}__		try {_			listeners.running(context)__		}_		catch (Throwable ex) {_			handleRunFailure(context, ex, exceptionReporters, null)__			throw new IllegalStateException(ex)__		}_		return context__	};run,the,spring,application,creating,and,refreshing,a,new,link,application,context,param,args,the,application,arguments,usually,passed,from,a,java,main,method,return,a,running,link,application,context;public,configurable,application,context,run,string,args,stop,watch,stop,watch,new,stop,watch,stop,watch,start,configurable,application,context,context,null,collection,spring,boot,exception,reporter,exception,reporters,new,array,list,configure,headless,property,spring,application,run,listeners,listeners,get,run,listeners,args,listeners,starting,try,application,arguments,application,arguments,new,default,application,arguments,args,configurable,environment,environment,prepare,environment,listeners,application,arguments,configure,ignore,bean,info,environment,banner,printed,banner,print,banner,environment,context,create,application,context,exception,reporters,get,spring,factories,instances,spring,boot,exception,reporter,class,new,class,configurable,application,context,class,context,prepare,context,context,environment,listeners,application,arguments,printed,banner,refresh,context,context,after,refresh,context,application,arguments,stop,watch,stop,if,this,log,startup,info,new,startup,info,logger,this,main,application,class,log,started,get,application,log,stop,watch,listeners,started,context,call,runners,context,application,arguments,catch,throwable,ex,handle,run,failure,context,ex,exception,reporters,listeners,throw,new,illegal,state,exception,ex,try,listeners,running,context,catch,throwable,ex,handle,run,failure,context,ex,exception,reporters,null,throw,new,illegal,state,exception,ex,return,context
SpringApplication -> public ConfigurableApplicationContext run(String... args);1546943477;Run the Spring application, creating and refreshing a new_{@link ApplicationContext}._@param args the application arguments (usually passed from a Java main method)_@return a running {@link ApplicationContext};public ConfigurableApplicationContext run(String... args) {_		StopWatch stopWatch = new StopWatch()__		stopWatch.start()__		ConfigurableApplicationContext context = null__		Collection<SpringBootExceptionReporter> exceptionReporters = new ArrayList<>()__		configureHeadlessProperty()__		SpringApplicationRunListeners listeners = getRunListeners(args)__		listeners.starting()__		try {_			ApplicationArguments applicationArguments = new DefaultApplicationArguments(_					args)__			ConfigurableEnvironment environment = prepareEnvironment(listeners,_					applicationArguments)__			configureIgnoreBeanInfo(environment)__			Banner printedBanner = printBanner(environment)__			context = createApplicationContext()__			exceptionReporters = getSpringFactoriesInstances(_					SpringBootExceptionReporter.class,_					new Class[] { ConfigurableApplicationContext.class }, context)__			prepareContext(context, environment, listeners, applicationArguments,_					printedBanner)__			refreshContext(context)__			afterRefresh(context, applicationArguments)__			stopWatch.stop()__			if (this.logStartupInfo) {_				new StartupInfoLogger(this.mainApplicationClass)_						.logStarted(getApplicationLog(), stopWatch)__			}_			listeners.started(context)__			callRunners(context, applicationArguments)__		}_		catch (Throwable ex) {_			handleRunFailure(context, ex, exceptionReporters, listeners)__			throw new IllegalStateException(ex)__		}__		try {_			listeners.running(context)__		}_		catch (Throwable ex) {_			handleRunFailure(context, ex, exceptionReporters, null)__			throw new IllegalStateException(ex)__		}_		return context__	};run,the,spring,application,creating,and,refreshing,a,new,link,application,context,param,args,the,application,arguments,usually,passed,from,a,java,main,method,return,a,running,link,application,context;public,configurable,application,context,run,string,args,stop,watch,stop,watch,new,stop,watch,stop,watch,start,configurable,application,context,context,null,collection,spring,boot,exception,reporter,exception,reporters,new,array,list,configure,headless,property,spring,application,run,listeners,listeners,get,run,listeners,args,listeners,starting,try,application,arguments,application,arguments,new,default,application,arguments,args,configurable,environment,environment,prepare,environment,listeners,application,arguments,configure,ignore,bean,info,environment,banner,printed,banner,print,banner,environment,context,create,application,context,exception,reporters,get,spring,factories,instances,spring,boot,exception,reporter,class,new,class,configurable,application,context,class,context,prepare,context,context,environment,listeners,application,arguments,printed,banner,refresh,context,context,after,refresh,context,application,arguments,stop,watch,stop,if,this,log,startup,info,new,startup,info,logger,this,main,application,class,log,started,get,application,log,stop,watch,listeners,started,context,call,runners,context,application,arguments,catch,throwable,ex,handle,run,failure,context,ex,exception,reporters,listeners,throw,new,illegal,state,exception,ex,try,listeners,running,context,catch,throwable,ex,handle,run,failure,context,ex,exception,reporters,null,throw,new,illegal,state,exception,ex,return,context
SpringApplication -> public ConfigurableApplicationContext run(String... args);1549791353;Run the Spring application, creating and refreshing a new_{@link ApplicationContext}._@param args the application arguments (usually passed from a Java main method)_@return a running {@link ApplicationContext};public ConfigurableApplicationContext run(String... args) {_		StopWatch stopWatch = new StopWatch()__		stopWatch.start()__		ConfigurableApplicationContext context = null__		Collection<SpringBootExceptionReporter> exceptionReporters = new ArrayList<>()__		configureHeadlessProperty()__		SpringApplicationRunListeners listeners = getRunListeners(args)__		listeners.starting()__		try {_			ApplicationArguments applicationArguments = new DefaultApplicationArguments(_					args)__			ConfigurableEnvironment environment = prepareEnvironment(listeners,_					applicationArguments)__			configureIgnoreBeanInfo(environment)__			Banner printedBanner = printBanner(environment)__			context = createApplicationContext()__			exceptionReporters = getSpringFactoriesInstances(_					SpringBootExceptionReporter.class,_					new Class[] { ConfigurableApplicationContext.class }, context)__			prepareContext(context, environment, listeners, applicationArguments,_					printedBanner)__			refreshContext(context)__			afterRefresh(context, applicationArguments)__			stopWatch.stop()__			if (this.logStartupInfo) {_				new StartupInfoLogger(this.mainApplicationClass)_						.logStarted(getApplicationLog(), stopWatch)__			}_			listeners.started(context)__			callRunners(context, applicationArguments)__		}_		catch (Throwable ex) {_			handleRunFailure(context, ex, exceptionReporters, listeners)__			throw new IllegalStateException(ex)__		}__		try {_			listeners.running(context)__		}_		catch (Throwable ex) {_			handleRunFailure(context, ex, exceptionReporters, null)__			throw new IllegalStateException(ex)__		}_		return context__	};run,the,spring,application,creating,and,refreshing,a,new,link,application,context,param,args,the,application,arguments,usually,passed,from,a,java,main,method,return,a,running,link,application,context;public,configurable,application,context,run,string,args,stop,watch,stop,watch,new,stop,watch,stop,watch,start,configurable,application,context,context,null,collection,spring,boot,exception,reporter,exception,reporters,new,array,list,configure,headless,property,spring,application,run,listeners,listeners,get,run,listeners,args,listeners,starting,try,application,arguments,application,arguments,new,default,application,arguments,args,configurable,environment,environment,prepare,environment,listeners,application,arguments,configure,ignore,bean,info,environment,banner,printed,banner,print,banner,environment,context,create,application,context,exception,reporters,get,spring,factories,instances,spring,boot,exception,reporter,class,new,class,configurable,application,context,class,context,prepare,context,context,environment,listeners,application,arguments,printed,banner,refresh,context,context,after,refresh,context,application,arguments,stop,watch,stop,if,this,log,startup,info,new,startup,info,logger,this,main,application,class,log,started,get,application,log,stop,watch,listeners,started,context,call,runners,context,application,arguments,catch,throwable,ex,handle,run,failure,context,ex,exception,reporters,listeners,throw,new,illegal,state,exception,ex,try,listeners,running,context,catch,throwable,ex,handle,run,failure,context,ex,exception,reporters,null,throw,new,illegal,state,exception,ex,return,context
SpringApplication -> public ConfigurableApplicationContext run(String... args);1550148109;Run the Spring application, creating and refreshing a new_{@link ApplicationContext}._@param args the application arguments (usually passed from a Java main method)_@return a running {@link ApplicationContext};public ConfigurableApplicationContext run(String... args) {_		StopWatch stopWatch = new StopWatch()__		stopWatch.start()__		ConfigurableApplicationContext context = null__		Collection<SpringBootExceptionReporter> exceptionReporters = new ArrayList<>()__		configureHeadlessProperty()__		SpringApplicationRunListeners listeners = getRunListeners(args)__		listeners.starting()__		try {_			ApplicationArguments applicationArguments = new DefaultApplicationArguments(_					args)__			ConfigurableEnvironment environment = prepareEnvironment(listeners,_					applicationArguments)__			configureIgnoreBeanInfo(environment)__			Banner printedBanner = printBanner(environment)__			context = createApplicationContext()__			exceptionReporters = getSpringFactoriesInstances(_					SpringBootExceptionReporter.class,_					new Class[] { ConfigurableApplicationContext.class }, context)__			prepareContext(context, environment, listeners, applicationArguments,_					printedBanner)__			refreshContext(context)__			afterRefresh(context, applicationArguments)__			stopWatch.stop()__			if (this.logStartupInfo) {_				new StartupInfoLogger(this.mainApplicationClass)_						.logStarted(getApplicationLog(), stopWatch)__			}_			listeners.started(context)__			callRunners(context, applicationArguments)__		}_		catch (Throwable ex) {_			handleRunFailure(context, ex, exceptionReporters, listeners)__			throw new IllegalStateException(ex)__		}__		try {_			listeners.running(context)__		}_		catch (Throwable ex) {_			handleRunFailure(context, ex, exceptionReporters, null)__			throw new IllegalStateException(ex)__		}_		return context__	};run,the,spring,application,creating,and,refreshing,a,new,link,application,context,param,args,the,application,arguments,usually,passed,from,a,java,main,method,return,a,running,link,application,context;public,configurable,application,context,run,string,args,stop,watch,stop,watch,new,stop,watch,stop,watch,start,configurable,application,context,context,null,collection,spring,boot,exception,reporter,exception,reporters,new,array,list,configure,headless,property,spring,application,run,listeners,listeners,get,run,listeners,args,listeners,starting,try,application,arguments,application,arguments,new,default,application,arguments,args,configurable,environment,environment,prepare,environment,listeners,application,arguments,configure,ignore,bean,info,environment,banner,printed,banner,print,banner,environment,context,create,application,context,exception,reporters,get,spring,factories,instances,spring,boot,exception,reporter,class,new,class,configurable,application,context,class,context,prepare,context,context,environment,listeners,application,arguments,printed,banner,refresh,context,context,after,refresh,context,application,arguments,stop,watch,stop,if,this,log,startup,info,new,startup,info,logger,this,main,application,class,log,started,get,application,log,stop,watch,listeners,started,context,call,runners,context,application,arguments,catch,throwable,ex,handle,run,failure,context,ex,exception,reporters,listeners,throw,new,illegal,state,exception,ex,try,listeners,running,context,catch,throwable,ex,handle,run,failure,context,ex,exception,reporters,null,throw,new,illegal,state,exception,ex,return,context
SpringApplication -> protected void load(ApplicationContext context, Object[] sources);1507173536;Load beans into the application context._@param context the context to load beans into_@param sources the sources to load;protected void load(ApplicationContext context, Object[] sources) {_		if (logger.isDebugEnabled()) {_			logger.debug(_					"Loading source " + StringUtils.arrayToCommaDelimitedString(sources))__		}_		BeanDefinitionLoader loader = createBeanDefinitionLoader(_				getBeanDefinitionRegistry(context), sources)__		if (this.beanNameGenerator != null) {_			loader.setBeanNameGenerator(this.beanNameGenerator)__		}_		if (this.resourceLoader != null) {_			loader.setResourceLoader(this.resourceLoader)__		}_		if (this.environment != null) {_			loader.setEnvironment(this.environment)__		}_		loader.load()__	};load,beans,into,the,application,context,param,context,the,context,to,load,beans,into,param,sources,the,sources,to,load;protected,void,load,application,context,context,object,sources,if,logger,is,debug,enabled,logger,debug,loading,source,string,utils,array,to,comma,delimited,string,sources,bean,definition,loader,loader,create,bean,definition,loader,get,bean,definition,registry,context,sources,if,this,bean,name,generator,null,loader,set,bean,name,generator,this,bean,name,generator,if,this,resource,loader,null,loader,set,resource,loader,this,resource,loader,if,this,environment,null,loader,set,environment,this,environment,loader,load
SpringApplication -> protected void load(ApplicationContext context, Object[] sources);1509381678;Load beans into the application context._@param context the context to load beans into_@param sources the sources to load;protected void load(ApplicationContext context, Object[] sources) {_		if (logger.isDebugEnabled()) {_			logger.debug(_					"Loading source " + StringUtils.arrayToCommaDelimitedString(sources))__		}_		BeanDefinitionLoader loader = createBeanDefinitionLoader(_				getBeanDefinitionRegistry(context), sources)__		if (this.beanNameGenerator != null) {_			loader.setBeanNameGenerator(this.beanNameGenerator)__		}_		if (this.resourceLoader != null) {_			loader.setResourceLoader(this.resourceLoader)__		}_		if (this.environment != null) {_			loader.setEnvironment(this.environment)__		}_		loader.load()__	};load,beans,into,the,application,context,param,context,the,context,to,load,beans,into,param,sources,the,sources,to,load;protected,void,load,application,context,context,object,sources,if,logger,is,debug,enabled,logger,debug,loading,source,string,utils,array,to,comma,delimited,string,sources,bean,definition,loader,loader,create,bean,definition,loader,get,bean,definition,registry,context,sources,if,this,bean,name,generator,null,loader,set,bean,name,generator,this,bean,name,generator,if,this,resource,loader,null,loader,set,resource,loader,this,resource,loader,if,this,environment,null,loader,set,environment,this,environment,loader,load
SpringApplication -> protected void load(ApplicationContext context, Object[] sources);1510995225;Load beans into the application context._@param context the context to load beans into_@param sources the sources to load;protected void load(ApplicationContext context, Object[] sources) {_		if (logger.isDebugEnabled()) {_			logger.debug(_					"Loading source " + StringUtils.arrayToCommaDelimitedString(sources))__		}_		BeanDefinitionLoader loader = createBeanDefinitionLoader(_				getBeanDefinitionRegistry(context), sources)__		if (this.beanNameGenerator != null) {_			loader.setBeanNameGenerator(this.beanNameGenerator)__		}_		if (this.resourceLoader != null) {_			loader.setResourceLoader(this.resourceLoader)__		}_		if (this.environment != null) {_			loader.setEnvironment(this.environment)__		}_		loader.load()__	};load,beans,into,the,application,context,param,context,the,context,to,load,beans,into,param,sources,the,sources,to,load;protected,void,load,application,context,context,object,sources,if,logger,is,debug,enabled,logger,debug,loading,source,string,utils,array,to,comma,delimited,string,sources,bean,definition,loader,loader,create,bean,definition,loader,get,bean,definition,registry,context,sources,if,this,bean,name,generator,null,loader,set,bean,name,generator,this,bean,name,generator,if,this,resource,loader,null,loader,set,resource,loader,this,resource,loader,if,this,environment,null,loader,set,environment,this,environment,loader,load
SpringApplication -> protected void load(ApplicationContext context, Object[] sources);1515670013;Load beans into the application context._@param context the context to load beans into_@param sources the sources to load;protected void load(ApplicationContext context, Object[] sources) {_		if (logger.isDebugEnabled()) {_			logger.debug(_					"Loading source " + StringUtils.arrayToCommaDelimitedString(sources))__		}_		BeanDefinitionLoader loader = createBeanDefinitionLoader(_				getBeanDefinitionRegistry(context), sources)__		if (this.beanNameGenerator != null) {_			loader.setBeanNameGenerator(this.beanNameGenerator)__		}_		if (this.resourceLoader != null) {_			loader.setResourceLoader(this.resourceLoader)__		}_		if (this.environment != null) {_			loader.setEnvironment(this.environment)__		}_		loader.load()__	};load,beans,into,the,application,context,param,context,the,context,to,load,beans,into,param,sources,the,sources,to,load;protected,void,load,application,context,context,object,sources,if,logger,is,debug,enabled,logger,debug,loading,source,string,utils,array,to,comma,delimited,string,sources,bean,definition,loader,loader,create,bean,definition,loader,get,bean,definition,registry,context,sources,if,this,bean,name,generator,null,loader,set,bean,name,generator,this,bean,name,generator,if,this,resource,loader,null,loader,set,resource,loader,this,resource,loader,if,this,environment,null,loader,set,environment,this,environment,loader,load
SpringApplication -> protected void load(ApplicationContext context, Object[] sources);1519362690;Load beans into the application context._@param context the context to load beans into_@param sources the sources to load;protected void load(ApplicationContext context, Object[] sources) {_		if (logger.isDebugEnabled()) {_			logger.debug(_					"Loading source " + StringUtils.arrayToCommaDelimitedString(sources))__		}_		BeanDefinitionLoader loader = createBeanDefinitionLoader(_				getBeanDefinitionRegistry(context), sources)__		if (this.beanNameGenerator != null) {_			loader.setBeanNameGenerator(this.beanNameGenerator)__		}_		if (this.resourceLoader != null) {_			loader.setResourceLoader(this.resourceLoader)__		}_		if (this.environment != null) {_			loader.setEnvironment(this.environment)__		}_		loader.load()__	};load,beans,into,the,application,context,param,context,the,context,to,load,beans,into,param,sources,the,sources,to,load;protected,void,load,application,context,context,object,sources,if,logger,is,debug,enabled,logger,debug,loading,source,string,utils,array,to,comma,delimited,string,sources,bean,definition,loader,loader,create,bean,definition,loader,get,bean,definition,registry,context,sources,if,this,bean,name,generator,null,loader,set,bean,name,generator,this,bean,name,generator,if,this,resource,loader,null,loader,set,resource,loader,this,resource,loader,if,this,environment,null,loader,set,environment,this,environment,loader,load
SpringApplication -> protected void load(ApplicationContext context, Object[] sources);1522251721;Load beans into the application context._@param context the context to load beans into_@param sources the sources to load;protected void load(ApplicationContext context, Object[] sources) {_		if (logger.isDebugEnabled()) {_			logger.debug(_					"Loading source " + StringUtils.arrayToCommaDelimitedString(sources))__		}_		BeanDefinitionLoader loader = createBeanDefinitionLoader(_				getBeanDefinitionRegistry(context), sources)__		if (this.beanNameGenerator != null) {_			loader.setBeanNameGenerator(this.beanNameGenerator)__		}_		if (this.resourceLoader != null) {_			loader.setResourceLoader(this.resourceLoader)__		}_		if (this.environment != null) {_			loader.setEnvironment(this.environment)__		}_		loader.load()__	};load,beans,into,the,application,context,param,context,the,context,to,load,beans,into,param,sources,the,sources,to,load;protected,void,load,application,context,context,object,sources,if,logger,is,debug,enabled,logger,debug,loading,source,string,utils,array,to,comma,delimited,string,sources,bean,definition,loader,loader,create,bean,definition,loader,get,bean,definition,registry,context,sources,if,this,bean,name,generator,null,loader,set,bean,name,generator,this,bean,name,generator,if,this,resource,loader,null,loader,set,resource,loader,this,resource,loader,if,this,environment,null,loader,set,environment,this,environment,loader,load
SpringApplication -> protected void load(ApplicationContext context, Object[] sources);1525376698;Load beans into the application context._@param context the context to load beans into_@param sources the sources to load;protected void load(ApplicationContext context, Object[] sources) {_		if (logger.isDebugEnabled()) {_			logger.debug(_					"Loading source " + StringUtils.arrayToCommaDelimitedString(sources))__		}_		BeanDefinitionLoader loader = createBeanDefinitionLoader(_				getBeanDefinitionRegistry(context), sources)__		if (this.beanNameGenerator != null) {_			loader.setBeanNameGenerator(this.beanNameGenerator)__		}_		if (this.resourceLoader != null) {_			loader.setResourceLoader(this.resourceLoader)__		}_		if (this.environment != null) {_			loader.setEnvironment(this.environment)__		}_		loader.load()__	};load,beans,into,the,application,context,param,context,the,context,to,load,beans,into,param,sources,the,sources,to,load;protected,void,load,application,context,context,object,sources,if,logger,is,debug,enabled,logger,debug,loading,source,string,utils,array,to,comma,delimited,string,sources,bean,definition,loader,loader,create,bean,definition,loader,get,bean,definition,registry,context,sources,if,this,bean,name,generator,null,loader,set,bean,name,generator,this,bean,name,generator,if,this,resource,loader,null,loader,set,resource,loader,this,resource,loader,if,this,environment,null,loader,set,environment,this,environment,loader,load
SpringApplication -> protected void load(ApplicationContext context, Object[] sources);1525416882;Load beans into the application context._@param context the context to load beans into_@param sources the sources to load;protected void load(ApplicationContext context, Object[] sources) {_		if (logger.isDebugEnabled()) {_			logger.debug(_					"Loading source " + StringUtils.arrayToCommaDelimitedString(sources))__		}_		BeanDefinitionLoader loader = createBeanDefinitionLoader(_				getBeanDefinitionRegistry(context), sources)__		if (this.beanNameGenerator != null) {_			loader.setBeanNameGenerator(this.beanNameGenerator)__		}_		if (this.resourceLoader != null) {_			loader.setResourceLoader(this.resourceLoader)__		}_		if (this.environment != null) {_			loader.setEnvironment(this.environment)__		}_		loader.load()__	};load,beans,into,the,application,context,param,context,the,context,to,load,beans,into,param,sources,the,sources,to,load;protected,void,load,application,context,context,object,sources,if,logger,is,debug,enabled,logger,debug,loading,source,string,utils,array,to,comma,delimited,string,sources,bean,definition,loader,loader,create,bean,definition,loader,get,bean,definition,registry,context,sources,if,this,bean,name,generator,null,loader,set,bean,name,generator,this,bean,name,generator,if,this,resource,loader,null,loader,set,resource,loader,this,resource,loader,if,this,environment,null,loader,set,environment,this,environment,loader,load
SpringApplication -> protected void load(ApplicationContext context, Object[] sources);1526993305;Load beans into the application context._@param context the context to load beans into_@param sources the sources to load;protected void load(ApplicationContext context, Object[] sources) {_		if (logger.isDebugEnabled()) {_			logger.debug(_					"Loading source " + StringUtils.arrayToCommaDelimitedString(sources))__		}_		BeanDefinitionLoader loader = createBeanDefinitionLoader(_				getBeanDefinitionRegistry(context), sources)__		if (this.beanNameGenerator != null) {_			loader.setBeanNameGenerator(this.beanNameGenerator)__		}_		if (this.resourceLoader != null) {_			loader.setResourceLoader(this.resourceLoader)__		}_		if (this.environment != null) {_			loader.setEnvironment(this.environment)__		}_		loader.load()__	};load,beans,into,the,application,context,param,context,the,context,to,load,beans,into,param,sources,the,sources,to,load;protected,void,load,application,context,context,object,sources,if,logger,is,debug,enabled,logger,debug,loading,source,string,utils,array,to,comma,delimited,string,sources,bean,definition,loader,loader,create,bean,definition,loader,get,bean,definition,registry,context,sources,if,this,bean,name,generator,null,loader,set,bean,name,generator,this,bean,name,generator,if,this,resource,loader,null,loader,set,resource,loader,this,resource,loader,if,this,environment,null,loader,set,environment,this,environment,loader,load
SpringApplication -> protected void load(ApplicationContext context, Object[] sources);1529485904;Load beans into the application context._@param context the context to load beans into_@param sources the sources to load;protected void load(ApplicationContext context, Object[] sources) {_		if (logger.isDebugEnabled()) {_			logger.debug(_					"Loading source " + StringUtils.arrayToCommaDelimitedString(sources))__		}_		BeanDefinitionLoader loader = createBeanDefinitionLoader(_				getBeanDefinitionRegistry(context), sources)__		if (this.beanNameGenerator != null) {_			loader.setBeanNameGenerator(this.beanNameGenerator)__		}_		if (this.resourceLoader != null) {_			loader.setResourceLoader(this.resourceLoader)__		}_		if (this.environment != null) {_			loader.setEnvironment(this.environment)__		}_		loader.load()__	};load,beans,into,the,application,context,param,context,the,context,to,load,beans,into,param,sources,the,sources,to,load;protected,void,load,application,context,context,object,sources,if,logger,is,debug,enabled,logger,debug,loading,source,string,utils,array,to,comma,delimited,string,sources,bean,definition,loader,loader,create,bean,definition,loader,get,bean,definition,registry,context,sources,if,this,bean,name,generator,null,loader,set,bean,name,generator,this,bean,name,generator,if,this,resource,loader,null,loader,set,resource,loader,this,resource,loader,if,this,environment,null,loader,set,environment,this,environment,loader,load
SpringApplication -> protected void load(ApplicationContext context, Object[] sources);1531140616;Load beans into the application context._@param context the context to load beans into_@param sources the sources to load;protected void load(ApplicationContext context, Object[] sources) {_		if (logger.isDebugEnabled()) {_			logger.debug(_					"Loading source " + StringUtils.arrayToCommaDelimitedString(sources))__		}_		BeanDefinitionLoader loader = createBeanDefinitionLoader(_				getBeanDefinitionRegistry(context), sources)__		if (this.beanNameGenerator != null) {_			loader.setBeanNameGenerator(this.beanNameGenerator)__		}_		if (this.resourceLoader != null) {_			loader.setResourceLoader(this.resourceLoader)__		}_		if (this.environment != null) {_			loader.setEnvironment(this.environment)__		}_		loader.load()__	};load,beans,into,the,application,context,param,context,the,context,to,load,beans,into,param,sources,the,sources,to,load;protected,void,load,application,context,context,object,sources,if,logger,is,debug,enabled,logger,debug,loading,source,string,utils,array,to,comma,delimited,string,sources,bean,definition,loader,loader,create,bean,definition,loader,get,bean,definition,registry,context,sources,if,this,bean,name,generator,null,loader,set,bean,name,generator,this,bean,name,generator,if,this,resource,loader,null,loader,set,resource,loader,this,resource,loader,if,this,environment,null,loader,set,environment,this,environment,loader,load
SpringApplication -> protected void load(ApplicationContext context, Object[] sources);1531155529;Load beans into the application context._@param context the context to load beans into_@param sources the sources to load;protected void load(ApplicationContext context, Object[] sources) {_		if (logger.isDebugEnabled()) {_			logger.debug(_					"Loading source " + StringUtils.arrayToCommaDelimitedString(sources))__		}_		BeanDefinitionLoader loader = createBeanDefinitionLoader(_				getBeanDefinitionRegistry(context), sources)__		if (this.beanNameGenerator != null) {_			loader.setBeanNameGenerator(this.beanNameGenerator)__		}_		if (this.resourceLoader != null) {_			loader.setResourceLoader(this.resourceLoader)__		}_		if (this.environment != null) {_			loader.setEnvironment(this.environment)__		}_		loader.load()__	};load,beans,into,the,application,context,param,context,the,context,to,load,beans,into,param,sources,the,sources,to,load;protected,void,load,application,context,context,object,sources,if,logger,is,debug,enabled,logger,debug,loading,source,string,utils,array,to,comma,delimited,string,sources,bean,definition,loader,loader,create,bean,definition,loader,get,bean,definition,registry,context,sources,if,this,bean,name,generator,null,loader,set,bean,name,generator,this,bean,name,generator,if,this,resource,loader,null,loader,set,resource,loader,this,resource,loader,if,this,environment,null,loader,set,environment,this,environment,loader,load
SpringApplication -> protected void load(ApplicationContext context, Object[] sources);1531222098;Load beans into the application context._@param context the context to load beans into_@param sources the sources to load;protected void load(ApplicationContext context, Object[] sources) {_		if (logger.isDebugEnabled()) {_			logger.debug(_					"Loading source " + StringUtils.arrayToCommaDelimitedString(sources))__		}_		BeanDefinitionLoader loader = createBeanDefinitionLoader(_				getBeanDefinitionRegistry(context), sources)__		if (this.beanNameGenerator != null) {_			loader.setBeanNameGenerator(this.beanNameGenerator)__		}_		if (this.resourceLoader != null) {_			loader.setResourceLoader(this.resourceLoader)__		}_		if (this.environment != null) {_			loader.setEnvironment(this.environment)__		}_		loader.load()__	};load,beans,into,the,application,context,param,context,the,context,to,load,beans,into,param,sources,the,sources,to,load;protected,void,load,application,context,context,object,sources,if,logger,is,debug,enabled,logger,debug,loading,source,string,utils,array,to,comma,delimited,string,sources,bean,definition,loader,loader,create,bean,definition,loader,get,bean,definition,registry,context,sources,if,this,bean,name,generator,null,loader,set,bean,name,generator,this,bean,name,generator,if,this,resource,loader,null,loader,set,resource,loader,this,resource,loader,if,this,environment,null,loader,set,environment,this,environment,loader,load
SpringApplication -> protected void load(ApplicationContext context, Object[] sources);1532738143;Load beans into the application context._@param context the context to load beans into_@param sources the sources to load;protected void load(ApplicationContext context, Object[] sources) {_		if (logger.isDebugEnabled()) {_			logger.debug(_					"Loading source " + StringUtils.arrayToCommaDelimitedString(sources))__		}_		BeanDefinitionLoader loader = createBeanDefinitionLoader(_				getBeanDefinitionRegistry(context), sources)__		if (this.beanNameGenerator != null) {_			loader.setBeanNameGenerator(this.beanNameGenerator)__		}_		if (this.resourceLoader != null) {_			loader.setResourceLoader(this.resourceLoader)__		}_		if (this.environment != null) {_			loader.setEnvironment(this.environment)__		}_		loader.load()__	};load,beans,into,the,application,context,param,context,the,context,to,load,beans,into,param,sources,the,sources,to,load;protected,void,load,application,context,context,object,sources,if,logger,is,debug,enabled,logger,debug,loading,source,string,utils,array,to,comma,delimited,string,sources,bean,definition,loader,loader,create,bean,definition,loader,get,bean,definition,registry,context,sources,if,this,bean,name,generator,null,loader,set,bean,name,generator,this,bean,name,generator,if,this,resource,loader,null,loader,set,resource,loader,this,resource,loader,if,this,environment,null,loader,set,environment,this,environment,loader,load
SpringApplication -> protected void load(ApplicationContext context, Object[] sources);1534188228;Load beans into the application context._@param context the context to load beans into_@param sources the sources to load;protected void load(ApplicationContext context, Object[] sources) {_		if (logger.isDebugEnabled()) {_			logger.debug(_					"Loading source " + StringUtils.arrayToCommaDelimitedString(sources))__		}_		BeanDefinitionLoader loader = createBeanDefinitionLoader(_				getBeanDefinitionRegistry(context), sources)__		if (this.beanNameGenerator != null) {_			loader.setBeanNameGenerator(this.beanNameGenerator)__		}_		if (this.resourceLoader != null) {_			loader.setResourceLoader(this.resourceLoader)__		}_		if (this.environment != null) {_			loader.setEnvironment(this.environment)__		}_		loader.load()__	};load,beans,into,the,application,context,param,context,the,context,to,load,beans,into,param,sources,the,sources,to,load;protected,void,load,application,context,context,object,sources,if,logger,is,debug,enabled,logger,debug,loading,source,string,utils,array,to,comma,delimited,string,sources,bean,definition,loader,loader,create,bean,definition,loader,get,bean,definition,registry,context,sources,if,this,bean,name,generator,null,loader,set,bean,name,generator,this,bean,name,generator,if,this,resource,loader,null,loader,set,resource,loader,this,resource,loader,if,this,environment,null,loader,set,environment,this,environment,loader,load
SpringApplication -> protected void load(ApplicationContext context, Object[] sources);1535104170;Load beans into the application context._@param context the context to load beans into_@param sources the sources to load;protected void load(ApplicationContext context, Object[] sources) {_		if (logger.isDebugEnabled()) {_			logger.debug(_					"Loading source " + StringUtils.arrayToCommaDelimitedString(sources))__		}_		BeanDefinitionLoader loader = createBeanDefinitionLoader(_				getBeanDefinitionRegistry(context), sources)__		if (this.beanNameGenerator != null) {_			loader.setBeanNameGenerator(this.beanNameGenerator)__		}_		if (this.resourceLoader != null) {_			loader.setResourceLoader(this.resourceLoader)__		}_		if (this.environment != null) {_			loader.setEnvironment(this.environment)__		}_		loader.load()__	};load,beans,into,the,application,context,param,context,the,context,to,load,beans,into,param,sources,the,sources,to,load;protected,void,load,application,context,context,object,sources,if,logger,is,debug,enabled,logger,debug,loading,source,string,utils,array,to,comma,delimited,string,sources,bean,definition,loader,loader,create,bean,definition,loader,get,bean,definition,registry,context,sources,if,this,bean,name,generator,null,loader,set,bean,name,generator,this,bean,name,generator,if,this,resource,loader,null,loader,set,resource,loader,this,resource,loader,if,this,environment,null,loader,set,environment,this,environment,loader,load
SpringApplication -> protected void load(ApplicationContext context, Object[] sources);1536701067;Load beans into the application context._@param context the context to load beans into_@param sources the sources to load;protected void load(ApplicationContext context, Object[] sources) {_		if (logger.isDebugEnabled()) {_			logger.debug(_					"Loading source " + StringUtils.arrayToCommaDelimitedString(sources))__		}_		BeanDefinitionLoader loader = createBeanDefinitionLoader(_				getBeanDefinitionRegistry(context), sources)__		if (this.beanNameGenerator != null) {_			loader.setBeanNameGenerator(this.beanNameGenerator)__		}_		if (this.resourceLoader != null) {_			loader.setResourceLoader(this.resourceLoader)__		}_		if (this.environment != null) {_			loader.setEnvironment(this.environment)__		}_		loader.load()__	};load,beans,into,the,application,context,param,context,the,context,to,load,beans,into,param,sources,the,sources,to,load;protected,void,load,application,context,context,object,sources,if,logger,is,debug,enabled,logger,debug,loading,source,string,utils,array,to,comma,delimited,string,sources,bean,definition,loader,loader,create,bean,definition,loader,get,bean,definition,registry,context,sources,if,this,bean,name,generator,null,loader,set,bean,name,generator,this,bean,name,generator,if,this,resource,loader,null,loader,set,resource,loader,this,resource,loader,if,this,environment,null,loader,set,environment,this,environment,loader,load
SpringApplication -> protected void load(ApplicationContext context, Object[] sources);1538570355;Load beans into the application context._@param context the context to load beans into_@param sources the sources to load;protected void load(ApplicationContext context, Object[] sources) {_		if (logger.isDebugEnabled()) {_			logger.debug(_					"Loading source " + StringUtils.arrayToCommaDelimitedString(sources))__		}_		BeanDefinitionLoader loader = createBeanDefinitionLoader(_				getBeanDefinitionRegistry(context), sources)__		if (this.beanNameGenerator != null) {_			loader.setBeanNameGenerator(this.beanNameGenerator)__		}_		if (this.resourceLoader != null) {_			loader.setResourceLoader(this.resourceLoader)__		}_		if (this.environment != null) {_			loader.setEnvironment(this.environment)__		}_		loader.load()__	};load,beans,into,the,application,context,param,context,the,context,to,load,beans,into,param,sources,the,sources,to,load;protected,void,load,application,context,context,object,sources,if,logger,is,debug,enabled,logger,debug,loading,source,string,utils,array,to,comma,delimited,string,sources,bean,definition,loader,loader,create,bean,definition,loader,get,bean,definition,registry,context,sources,if,this,bean,name,generator,null,loader,set,bean,name,generator,this,bean,name,generator,if,this,resource,loader,null,loader,set,resource,loader,this,resource,loader,if,this,environment,null,loader,set,environment,this,environment,loader,load
SpringApplication -> protected void load(ApplicationContext context, Object[] sources);1538707540;Load beans into the application context._@param context the context to load beans into_@param sources the sources to load;protected void load(ApplicationContext context, Object[] sources) {_		if (logger.isDebugEnabled()) {_			logger.debug(_					"Loading source " + StringUtils.arrayToCommaDelimitedString(sources))__		}_		BeanDefinitionLoader loader = createBeanDefinitionLoader(_				getBeanDefinitionRegistry(context), sources)__		if (this.beanNameGenerator != null) {_			loader.setBeanNameGenerator(this.beanNameGenerator)__		}_		if (this.resourceLoader != null) {_			loader.setResourceLoader(this.resourceLoader)__		}_		if (this.environment != null) {_			loader.setEnvironment(this.environment)__		}_		loader.load()__	};load,beans,into,the,application,context,param,context,the,context,to,load,beans,into,param,sources,the,sources,to,load;protected,void,load,application,context,context,object,sources,if,logger,is,debug,enabled,logger,debug,loading,source,string,utils,array,to,comma,delimited,string,sources,bean,definition,loader,loader,create,bean,definition,loader,get,bean,definition,registry,context,sources,if,this,bean,name,generator,null,loader,set,bean,name,generator,this,bean,name,generator,if,this,resource,loader,null,loader,set,resource,loader,this,resource,loader,if,this,environment,null,loader,set,environment,this,environment,loader,load
SpringApplication -> protected void load(ApplicationContext context, Object[] sources);1538750610;Load beans into the application context._@param context the context to load beans into_@param sources the sources to load;protected void load(ApplicationContext context, Object[] sources) {_		if (logger.isDebugEnabled()) {_			logger.debug(_					"Loading source " + StringUtils.arrayToCommaDelimitedString(sources))__		}_		BeanDefinitionLoader loader = createBeanDefinitionLoader(_				getBeanDefinitionRegistry(context), sources)__		if (this.beanNameGenerator != null) {_			loader.setBeanNameGenerator(this.beanNameGenerator)__		}_		if (this.resourceLoader != null) {_			loader.setResourceLoader(this.resourceLoader)__		}_		if (this.environment != null) {_			loader.setEnvironment(this.environment)__		}_		loader.load()__	};load,beans,into,the,application,context,param,context,the,context,to,load,beans,into,param,sources,the,sources,to,load;protected,void,load,application,context,context,object,sources,if,logger,is,debug,enabled,logger,debug,loading,source,string,utils,array,to,comma,delimited,string,sources,bean,definition,loader,loader,create,bean,definition,loader,get,bean,definition,registry,context,sources,if,this,bean,name,generator,null,loader,set,bean,name,generator,this,bean,name,generator,if,this,resource,loader,null,loader,set,resource,loader,this,resource,loader,if,this,environment,null,loader,set,environment,this,environment,loader,load
SpringApplication -> protected void load(ApplicationContext context, Object[] sources);1538771652;Load beans into the application context._@param context the context to load beans into_@param sources the sources to load;protected void load(ApplicationContext context, Object[] sources) {_		if (logger.isDebugEnabled()) {_			logger.debug(_					"Loading source " + StringUtils.arrayToCommaDelimitedString(sources))__		}_		BeanDefinitionLoader loader = createBeanDefinitionLoader(_				getBeanDefinitionRegistry(context), sources)__		if (this.beanNameGenerator != null) {_			loader.setBeanNameGenerator(this.beanNameGenerator)__		}_		if (this.resourceLoader != null) {_			loader.setResourceLoader(this.resourceLoader)__		}_		if (this.environment != null) {_			loader.setEnvironment(this.environment)__		}_		loader.load()__	};load,beans,into,the,application,context,param,context,the,context,to,load,beans,into,param,sources,the,sources,to,load;protected,void,load,application,context,context,object,sources,if,logger,is,debug,enabled,logger,debug,loading,source,string,utils,array,to,comma,delimited,string,sources,bean,definition,loader,loader,create,bean,definition,loader,get,bean,definition,registry,context,sources,if,this,bean,name,generator,null,loader,set,bean,name,generator,this,bean,name,generator,if,this,resource,loader,null,loader,set,resource,loader,this,resource,loader,if,this,environment,null,loader,set,environment,this,environment,loader,load
SpringApplication -> protected void load(ApplicationContext context, Object[] sources);1540419762;Load beans into the application context._@param context the context to load beans into_@param sources the sources to load;protected void load(ApplicationContext context, Object[] sources) {_		if (logger.isDebugEnabled()) {_			logger.debug(_					"Loading source " + StringUtils.arrayToCommaDelimitedString(sources))__		}_		BeanDefinitionLoader loader = createBeanDefinitionLoader(_				getBeanDefinitionRegistry(context), sources)__		if (this.beanNameGenerator != null) {_			loader.setBeanNameGenerator(this.beanNameGenerator)__		}_		if (this.resourceLoader != null) {_			loader.setResourceLoader(this.resourceLoader)__		}_		if (this.environment != null) {_			loader.setEnvironment(this.environment)__		}_		loader.load()__	};load,beans,into,the,application,context,param,context,the,context,to,load,beans,into,param,sources,the,sources,to,load;protected,void,load,application,context,context,object,sources,if,logger,is,debug,enabled,logger,debug,loading,source,string,utils,array,to,comma,delimited,string,sources,bean,definition,loader,loader,create,bean,definition,loader,get,bean,definition,registry,context,sources,if,this,bean,name,generator,null,loader,set,bean,name,generator,this,bean,name,generator,if,this,resource,loader,null,loader,set,resource,loader,this,resource,loader,if,this,environment,null,loader,set,environment,this,environment,loader,load
SpringApplication -> protected void load(ApplicationContext context, Object[] sources);1541060131;Load beans into the application context._@param context the context to load beans into_@param sources the sources to load;protected void load(ApplicationContext context, Object[] sources) {_		if (logger.isDebugEnabled()) {_			logger.debug(_					"Loading source " + StringUtils.arrayToCommaDelimitedString(sources))__		}_		BeanDefinitionLoader loader = createBeanDefinitionLoader(_				getBeanDefinitionRegistry(context), sources)__		if (this.beanNameGenerator != null) {_			loader.setBeanNameGenerator(this.beanNameGenerator)__		}_		if (this.resourceLoader != null) {_			loader.setResourceLoader(this.resourceLoader)__		}_		if (this.environment != null) {_			loader.setEnvironment(this.environment)__		}_		loader.load()__	};load,beans,into,the,application,context,param,context,the,context,to,load,beans,into,param,sources,the,sources,to,load;protected,void,load,application,context,context,object,sources,if,logger,is,debug,enabled,logger,debug,loading,source,string,utils,array,to,comma,delimited,string,sources,bean,definition,loader,loader,create,bean,definition,loader,get,bean,definition,registry,context,sources,if,this,bean,name,generator,null,loader,set,bean,name,generator,this,bean,name,generator,if,this,resource,loader,null,loader,set,resource,loader,this,resource,loader,if,this,environment,null,loader,set,environment,this,environment,loader,load
SpringApplication -> protected void load(ApplicationContext context, Object[] sources);1546943477;Load beans into the application context._@param context the context to load beans into_@param sources the sources to load;protected void load(ApplicationContext context, Object[] sources) {_		if (logger.isDebugEnabled()) {_			logger.debug(_					"Loading source " + StringUtils.arrayToCommaDelimitedString(sources))__		}_		BeanDefinitionLoader loader = createBeanDefinitionLoader(_				getBeanDefinitionRegistry(context), sources)__		if (this.beanNameGenerator != null) {_			loader.setBeanNameGenerator(this.beanNameGenerator)__		}_		if (this.resourceLoader != null) {_			loader.setResourceLoader(this.resourceLoader)__		}_		if (this.environment != null) {_			loader.setEnvironment(this.environment)__		}_		loader.load()__	};load,beans,into,the,application,context,param,context,the,context,to,load,beans,into,param,sources,the,sources,to,load;protected,void,load,application,context,context,object,sources,if,logger,is,debug,enabled,logger,debug,loading,source,string,utils,array,to,comma,delimited,string,sources,bean,definition,loader,loader,create,bean,definition,loader,get,bean,definition,registry,context,sources,if,this,bean,name,generator,null,loader,set,bean,name,generator,this,bean,name,generator,if,this,resource,loader,null,loader,set,resource,loader,this,resource,loader,if,this,environment,null,loader,set,environment,this,environment,loader,load
SpringApplication -> protected void load(ApplicationContext context, Object[] sources);1549791353;Load beans into the application context._@param context the context to load beans into_@param sources the sources to load;protected void load(ApplicationContext context, Object[] sources) {_		if (logger.isDebugEnabled()) {_			logger.debug(_					"Loading source " + StringUtils.arrayToCommaDelimitedString(sources))__		}_		BeanDefinitionLoader loader = createBeanDefinitionLoader(_				getBeanDefinitionRegistry(context), sources)__		if (this.beanNameGenerator != null) {_			loader.setBeanNameGenerator(this.beanNameGenerator)__		}_		if (this.resourceLoader != null) {_			loader.setResourceLoader(this.resourceLoader)__		}_		if (this.environment != null) {_			loader.setEnvironment(this.environment)__		}_		loader.load()__	};load,beans,into,the,application,context,param,context,the,context,to,load,beans,into,param,sources,the,sources,to,load;protected,void,load,application,context,context,object,sources,if,logger,is,debug,enabled,logger,debug,loading,source,string,utils,array,to,comma,delimited,string,sources,bean,definition,loader,loader,create,bean,definition,loader,get,bean,definition,registry,context,sources,if,this,bean,name,generator,null,loader,set,bean,name,generator,this,bean,name,generator,if,this,resource,loader,null,loader,set,resource,loader,this,resource,loader,if,this,environment,null,loader,set,environment,this,environment,loader,load
SpringApplication -> protected void load(ApplicationContext context, Object[] sources);1550148109;Load beans into the application context._@param context the context to load beans into_@param sources the sources to load;protected void load(ApplicationContext context, Object[] sources) {_		if (logger.isDebugEnabled()) {_			logger.debug(_					"Loading source " + StringUtils.arrayToCommaDelimitedString(sources))__		}_		BeanDefinitionLoader loader = createBeanDefinitionLoader(_				getBeanDefinitionRegistry(context), sources)__		if (this.beanNameGenerator != null) {_			loader.setBeanNameGenerator(this.beanNameGenerator)__		}_		if (this.resourceLoader != null) {_			loader.setResourceLoader(this.resourceLoader)__		}_		if (this.environment != null) {_			loader.setEnvironment(this.environment)__		}_		loader.load()__	};load,beans,into,the,application,context,param,context,the,context,to,load,beans,into,param,sources,the,sources,to,load;protected,void,load,application,context,context,object,sources,if,logger,is,debug,enabled,logger,debug,loading,source,string,utils,array,to,comma,delimited,string,sources,bean,definition,loader,loader,create,bean,definition,loader,get,bean,definition,registry,context,sources,if,this,bean,name,generator,null,loader,set,bean,name,generator,this,bean,name,generator,if,this,resource,loader,null,loader,set,resource,loader,this,resource,loader,if,this,environment,null,loader,set,environment,this,environment,loader,load
SpringApplication -> public void setLogStartupInfo(boolean logStartupInfo);1507173536;Sets if the application information should be logged when the application starts._Defaults to {@code true}._@param logStartupInfo if startup info should be logged.;public void setLogStartupInfo(boolean logStartupInfo) {_		this.logStartupInfo = logStartupInfo__	};sets,if,the,application,information,should,be,logged,when,the,application,starts,defaults,to,code,true,param,log,startup,info,if,startup,info,should,be,logged;public,void,set,log,startup,info,boolean,log,startup,info,this,log,startup,info,log,startup,info
SpringApplication -> public void setLogStartupInfo(boolean logStartupInfo);1509381678;Sets if the application information should be logged when the application starts._Defaults to {@code true}._@param logStartupInfo if startup info should be logged.;public void setLogStartupInfo(boolean logStartupInfo) {_		this.logStartupInfo = logStartupInfo__	};sets,if,the,application,information,should,be,logged,when,the,application,starts,defaults,to,code,true,param,log,startup,info,if,startup,info,should,be,logged;public,void,set,log,startup,info,boolean,log,startup,info,this,log,startup,info,log,startup,info
SpringApplication -> public void setLogStartupInfo(boolean logStartupInfo);1510995225;Sets if the application information should be logged when the application starts._Defaults to {@code true}._@param logStartupInfo if startup info should be logged.;public void setLogStartupInfo(boolean logStartupInfo) {_		this.logStartupInfo = logStartupInfo__	};sets,if,the,application,information,should,be,logged,when,the,application,starts,defaults,to,code,true,param,log,startup,info,if,startup,info,should,be,logged;public,void,set,log,startup,info,boolean,log,startup,info,this,log,startup,info,log,startup,info
SpringApplication -> public void setLogStartupInfo(boolean logStartupInfo);1515670013;Sets if the application information should be logged when the application starts._Defaults to {@code true}._@param logStartupInfo if startup info should be logged.;public void setLogStartupInfo(boolean logStartupInfo) {_		this.logStartupInfo = logStartupInfo__	};sets,if,the,application,information,should,be,logged,when,the,application,starts,defaults,to,code,true,param,log,startup,info,if,startup,info,should,be,logged;public,void,set,log,startup,info,boolean,log,startup,info,this,log,startup,info,log,startup,info
SpringApplication -> public void setLogStartupInfo(boolean logStartupInfo);1519362690;Sets if the application information should be logged when the application starts._Defaults to {@code true}._@param logStartupInfo if startup info should be logged.;public void setLogStartupInfo(boolean logStartupInfo) {_		this.logStartupInfo = logStartupInfo__	};sets,if,the,application,information,should,be,logged,when,the,application,starts,defaults,to,code,true,param,log,startup,info,if,startup,info,should,be,logged;public,void,set,log,startup,info,boolean,log,startup,info,this,log,startup,info,log,startup,info
SpringApplication -> public void setLogStartupInfo(boolean logStartupInfo);1522251721;Sets if the application information should be logged when the application starts._Defaults to {@code true}._@param logStartupInfo if startup info should be logged.;public void setLogStartupInfo(boolean logStartupInfo) {_		this.logStartupInfo = logStartupInfo__	};sets,if,the,application,information,should,be,logged,when,the,application,starts,defaults,to,code,true,param,log,startup,info,if,startup,info,should,be,logged;public,void,set,log,startup,info,boolean,log,startup,info,this,log,startup,info,log,startup,info
SpringApplication -> public void setLogStartupInfo(boolean logStartupInfo);1525376698;Sets if the application information should be logged when the application starts._Defaults to {@code true}._@param logStartupInfo if startup info should be logged.;public void setLogStartupInfo(boolean logStartupInfo) {_		this.logStartupInfo = logStartupInfo__	};sets,if,the,application,information,should,be,logged,when,the,application,starts,defaults,to,code,true,param,log,startup,info,if,startup,info,should,be,logged;public,void,set,log,startup,info,boolean,log,startup,info,this,log,startup,info,log,startup,info
SpringApplication -> public void setLogStartupInfo(boolean logStartupInfo);1525416882;Sets if the application information should be logged when the application starts._Defaults to {@code true}._@param logStartupInfo if startup info should be logged.;public void setLogStartupInfo(boolean logStartupInfo) {_		this.logStartupInfo = logStartupInfo__	};sets,if,the,application,information,should,be,logged,when,the,application,starts,defaults,to,code,true,param,log,startup,info,if,startup,info,should,be,logged;public,void,set,log,startup,info,boolean,log,startup,info,this,log,startup,info,log,startup,info
SpringApplication -> public void setLogStartupInfo(boolean logStartupInfo);1526993305;Sets if the application information should be logged when the application starts._Defaults to {@code true}._@param logStartupInfo if startup info should be logged.;public void setLogStartupInfo(boolean logStartupInfo) {_		this.logStartupInfo = logStartupInfo__	};sets,if,the,application,information,should,be,logged,when,the,application,starts,defaults,to,code,true,param,log,startup,info,if,startup,info,should,be,logged;public,void,set,log,startup,info,boolean,log,startup,info,this,log,startup,info,log,startup,info
SpringApplication -> public void setLogStartupInfo(boolean logStartupInfo);1529485904;Sets if the application information should be logged when the application starts._Defaults to {@code true}._@param logStartupInfo if startup info should be logged.;public void setLogStartupInfo(boolean logStartupInfo) {_		this.logStartupInfo = logStartupInfo__	};sets,if,the,application,information,should,be,logged,when,the,application,starts,defaults,to,code,true,param,log,startup,info,if,startup,info,should,be,logged;public,void,set,log,startup,info,boolean,log,startup,info,this,log,startup,info,log,startup,info
SpringApplication -> public void setLogStartupInfo(boolean logStartupInfo);1531140616;Sets if the application information should be logged when the application starts._Defaults to {@code true}._@param logStartupInfo if startup info should be logged.;public void setLogStartupInfo(boolean logStartupInfo) {_		this.logStartupInfo = logStartupInfo__	};sets,if,the,application,information,should,be,logged,when,the,application,starts,defaults,to,code,true,param,log,startup,info,if,startup,info,should,be,logged;public,void,set,log,startup,info,boolean,log,startup,info,this,log,startup,info,log,startup,info
SpringApplication -> public void setLogStartupInfo(boolean logStartupInfo);1531155529;Sets if the application information should be logged when the application starts._Defaults to {@code true}._@param logStartupInfo if startup info should be logged.;public void setLogStartupInfo(boolean logStartupInfo) {_		this.logStartupInfo = logStartupInfo__	};sets,if,the,application,information,should,be,logged,when,the,application,starts,defaults,to,code,true,param,log,startup,info,if,startup,info,should,be,logged;public,void,set,log,startup,info,boolean,log,startup,info,this,log,startup,info,log,startup,info
SpringApplication -> public void setLogStartupInfo(boolean logStartupInfo);1531222098;Sets if the application information should be logged when the application starts._Defaults to {@code true}._@param logStartupInfo if startup info should be logged.;public void setLogStartupInfo(boolean logStartupInfo) {_		this.logStartupInfo = logStartupInfo__	};sets,if,the,application,information,should,be,logged,when,the,application,starts,defaults,to,code,true,param,log,startup,info,if,startup,info,should,be,logged;public,void,set,log,startup,info,boolean,log,startup,info,this,log,startup,info,log,startup,info
SpringApplication -> public void setLogStartupInfo(boolean logStartupInfo);1532738143;Sets if the application information should be logged when the application starts._Defaults to {@code true}._@param logStartupInfo if startup info should be logged.;public void setLogStartupInfo(boolean logStartupInfo) {_		this.logStartupInfo = logStartupInfo__	};sets,if,the,application,information,should,be,logged,when,the,application,starts,defaults,to,code,true,param,log,startup,info,if,startup,info,should,be,logged;public,void,set,log,startup,info,boolean,log,startup,info,this,log,startup,info,log,startup,info
SpringApplication -> public void setLogStartupInfo(boolean logStartupInfo);1534188228;Sets if the application information should be logged when the application starts._Defaults to {@code true}._@param logStartupInfo if startup info should be logged.;public void setLogStartupInfo(boolean logStartupInfo) {_		this.logStartupInfo = logStartupInfo__	};sets,if,the,application,information,should,be,logged,when,the,application,starts,defaults,to,code,true,param,log,startup,info,if,startup,info,should,be,logged;public,void,set,log,startup,info,boolean,log,startup,info,this,log,startup,info,log,startup,info
SpringApplication -> public void setLogStartupInfo(boolean logStartupInfo);1535104170;Sets if the application information should be logged when the application starts._Defaults to {@code true}._@param logStartupInfo if startup info should be logged.;public void setLogStartupInfo(boolean logStartupInfo) {_		this.logStartupInfo = logStartupInfo__	};sets,if,the,application,information,should,be,logged,when,the,application,starts,defaults,to,code,true,param,log,startup,info,if,startup,info,should,be,logged;public,void,set,log,startup,info,boolean,log,startup,info,this,log,startup,info,log,startup,info
SpringApplication -> public void setLogStartupInfo(boolean logStartupInfo);1536701067;Sets if the application information should be logged when the application starts._Defaults to {@code true}._@param logStartupInfo if startup info should be logged.;public void setLogStartupInfo(boolean logStartupInfo) {_		this.logStartupInfo = logStartupInfo__	};sets,if,the,application,information,should,be,logged,when,the,application,starts,defaults,to,code,true,param,log,startup,info,if,startup,info,should,be,logged;public,void,set,log,startup,info,boolean,log,startup,info,this,log,startup,info,log,startup,info
SpringApplication -> public void setLogStartupInfo(boolean logStartupInfo);1538570355;Sets if the application information should be logged when the application starts._Defaults to {@code true}._@param logStartupInfo if startup info should be logged.;public void setLogStartupInfo(boolean logStartupInfo) {_		this.logStartupInfo = logStartupInfo__	};sets,if,the,application,information,should,be,logged,when,the,application,starts,defaults,to,code,true,param,log,startup,info,if,startup,info,should,be,logged;public,void,set,log,startup,info,boolean,log,startup,info,this,log,startup,info,log,startup,info
SpringApplication -> public void setLogStartupInfo(boolean logStartupInfo);1538707540;Sets if the application information should be logged when the application starts._Defaults to {@code true}._@param logStartupInfo if startup info should be logged.;public void setLogStartupInfo(boolean logStartupInfo) {_		this.logStartupInfo = logStartupInfo__	};sets,if,the,application,information,should,be,logged,when,the,application,starts,defaults,to,code,true,param,log,startup,info,if,startup,info,should,be,logged;public,void,set,log,startup,info,boolean,log,startup,info,this,log,startup,info,log,startup,info
SpringApplication -> public void setLogStartupInfo(boolean logStartupInfo);1538750610;Sets if the application information should be logged when the application starts._Defaults to {@code true}._@param logStartupInfo if startup info should be logged.;public void setLogStartupInfo(boolean logStartupInfo) {_		this.logStartupInfo = logStartupInfo__	};sets,if,the,application,information,should,be,logged,when,the,application,starts,defaults,to,code,true,param,log,startup,info,if,startup,info,should,be,logged;public,void,set,log,startup,info,boolean,log,startup,info,this,log,startup,info,log,startup,info
SpringApplication -> public void setLogStartupInfo(boolean logStartupInfo);1538771652;Sets if the application information should be logged when the application starts._Defaults to {@code true}._@param logStartupInfo if startup info should be logged.;public void setLogStartupInfo(boolean logStartupInfo) {_		this.logStartupInfo = logStartupInfo__	};sets,if,the,application,information,should,be,logged,when,the,application,starts,defaults,to,code,true,param,log,startup,info,if,startup,info,should,be,logged;public,void,set,log,startup,info,boolean,log,startup,info,this,log,startup,info,log,startup,info
SpringApplication -> public void setLogStartupInfo(boolean logStartupInfo);1540419762;Sets if the application information should be logged when the application starts._Defaults to {@code true}._@param logStartupInfo if startup info should be logged.;public void setLogStartupInfo(boolean logStartupInfo) {_		this.logStartupInfo = logStartupInfo__	};sets,if,the,application,information,should,be,logged,when,the,application,starts,defaults,to,code,true,param,log,startup,info,if,startup,info,should,be,logged;public,void,set,log,startup,info,boolean,log,startup,info,this,log,startup,info,log,startup,info
SpringApplication -> public void setLogStartupInfo(boolean logStartupInfo);1541060131;Sets if the application information should be logged when the application starts._Defaults to {@code true}._@param logStartupInfo if startup info should be logged.;public void setLogStartupInfo(boolean logStartupInfo) {_		this.logStartupInfo = logStartupInfo__	};sets,if,the,application,information,should,be,logged,when,the,application,starts,defaults,to,code,true,param,log,startup,info,if,startup,info,should,be,logged;public,void,set,log,startup,info,boolean,log,startup,info,this,log,startup,info,log,startup,info
SpringApplication -> public void setLogStartupInfo(boolean logStartupInfo);1546943477;Sets if the application information should be logged when the application starts._Defaults to {@code true}._@param logStartupInfo if startup info should be logged.;public void setLogStartupInfo(boolean logStartupInfo) {_		this.logStartupInfo = logStartupInfo__	};sets,if,the,application,information,should,be,logged,when,the,application,starts,defaults,to,code,true,param,log,startup,info,if,startup,info,should,be,logged;public,void,set,log,startup,info,boolean,log,startup,info,this,log,startup,info,log,startup,info
SpringApplication -> public void setLogStartupInfo(boolean logStartupInfo);1549791353;Sets if the application information should be logged when the application starts._Defaults to {@code true}._@param logStartupInfo if startup info should be logged.;public void setLogStartupInfo(boolean logStartupInfo) {_		this.logStartupInfo = logStartupInfo__	};sets,if,the,application,information,should,be,logged,when,the,application,starts,defaults,to,code,true,param,log,startup,info,if,startup,info,should,be,logged;public,void,set,log,startup,info,boolean,log,startup,info,this,log,startup,info,log,startup,info
SpringApplication -> public void setLogStartupInfo(boolean logStartupInfo);1550148109;Sets if the application information should be logged when the application starts._Defaults to {@code true}._@param logStartupInfo if startup info should be logged.;public void setLogStartupInfo(boolean logStartupInfo) {_		this.logStartupInfo = logStartupInfo__	};sets,if,the,application,information,should,be,logged,when,the,application,starts,defaults,to,code,true,param,log,startup,info,if,startup,info,should,be,logged;public,void,set,log,startup,info,boolean,log,startup,info,this,log,startup,info,log,startup,info
SpringApplication -> public void setApplicationContextClass( 			Class<? extends ConfigurableApplicationContext> applicationContextClass);1507173536;Sets the type of Spring {@link ApplicationContext} that will be created. If not_specified defaults to {@link #DEFAULT_WEB_CONTEXT_CLASS} for web based applications_or {@link AnnotationConfigApplicationContext} for non web based applications._@param applicationContextClass the context class to set;public void setApplicationContextClass(_			Class<? extends ConfigurableApplicationContext> applicationContextClass) {_		this.applicationContextClass = applicationContextClass__		if (!isWebApplicationContext(applicationContextClass)) {_			this.webApplicationType = WebApplicationType.NONE__		}_	};sets,the,type,of,spring,link,application,context,that,will,be,created,if,not,specified,defaults,to,link,for,web,based,applications,or,link,annotation,config,application,context,for,non,web,based,applications,param,application,context,class,the,context,class,to,set;public,void,set,application,context,class,class,extends,configurable,application,context,application,context,class,this,application,context,class,application,context,class,if,is,web,application,context,application,context,class,this,web,application,type,web,application,type,none
SpringApplication -> public void setApplicationContextClass( 			Class<? extends ConfigurableApplicationContext> applicationContextClass);1509381678;Sets the type of Spring {@link ApplicationContext} that will be created. If not_specified defaults to {@link #DEFAULT_WEB_CONTEXT_CLASS} for web based applications_or {@link AnnotationConfigApplicationContext} for non web based applications._@param applicationContextClass the context class to set;public void setApplicationContextClass(_			Class<? extends ConfigurableApplicationContext> applicationContextClass) {_		this.applicationContextClass = applicationContextClass__		if (!isWebApplicationContext(applicationContextClass)) {_			this.webApplicationType = WebApplicationType.NONE__		}_	};sets,the,type,of,spring,link,application,context,that,will,be,created,if,not,specified,defaults,to,link,for,web,based,applications,or,link,annotation,config,application,context,for,non,web,based,applications,param,application,context,class,the,context,class,to,set;public,void,set,application,context,class,class,extends,configurable,application,context,application,context,class,this,application,context,class,application,context,class,if,is,web,application,context,application,context,class,this,web,application,type,web,application,type,none
SpringApplication -> public void setApplicationContextClass( 			Class<? extends ConfigurableApplicationContext> applicationContextClass);1510995225;Sets the type of Spring {@link ApplicationContext} that will be created. If not_specified defaults to {@link #DEFAULT_WEB_CONTEXT_CLASS} for web based applications_or {@link AnnotationConfigApplicationContext} for non web based applications._@param applicationContextClass the context class to set;public void setApplicationContextClass(_			Class<? extends ConfigurableApplicationContext> applicationContextClass) {_		this.applicationContextClass = applicationContextClass__		if (!isWebApplicationContext(applicationContextClass)) {_			this.webApplicationType = WebApplicationType.NONE__		}_	};sets,the,type,of,spring,link,application,context,that,will,be,created,if,not,specified,defaults,to,link,for,web,based,applications,or,link,annotation,config,application,context,for,non,web,based,applications,param,application,context,class,the,context,class,to,set;public,void,set,application,context,class,class,extends,configurable,application,context,application,context,class,this,application,context,class,application,context,class,if,is,web,application,context,application,context,class,this,web,application,type,web,application,type,none
SpringApplication -> public void setApplicationContextClass( 			Class<? extends ConfigurableApplicationContext> applicationContextClass);1515670013;Sets the type of Spring {@link ApplicationContext} that will be created. If not_specified defaults to {@link #DEFAULT_WEB_CONTEXT_CLASS} for web based applications_or {@link AnnotationConfigApplicationContext} for non web based applications._@param applicationContextClass the context class to set;public void setApplicationContextClass(_			Class<? extends ConfigurableApplicationContext> applicationContextClass) {_		this.applicationContextClass = applicationContextClass__		if (!isWebApplicationContext(applicationContextClass)) {_			this.webApplicationType = WebApplicationType.NONE__		}_	};sets,the,type,of,spring,link,application,context,that,will,be,created,if,not,specified,defaults,to,link,for,web,based,applications,or,link,annotation,config,application,context,for,non,web,based,applications,param,application,context,class,the,context,class,to,set;public,void,set,application,context,class,class,extends,configurable,application,context,application,context,class,this,application,context,class,application,context,class,if,is,web,application,context,application,context,class,this,web,application,type,web,application,type,none
SpringApplication -> public void setApplicationContextClass( 			Class<? extends ConfigurableApplicationContext> applicationContextClass);1519362690;Sets the type of Spring {@link ApplicationContext} that will be created. If not_specified defaults to {@link #DEFAULT_WEB_CONTEXT_CLASS} for web based applications_or {@link AnnotationConfigApplicationContext} for non web based applications._@param applicationContextClass the context class to set;public void setApplicationContextClass(_			Class<? extends ConfigurableApplicationContext> applicationContextClass) {_		this.applicationContextClass = applicationContextClass__		if (!isWebApplicationContext(applicationContextClass)) {_			this.webApplicationType = WebApplicationType.NONE__		}_	};sets,the,type,of,spring,link,application,context,that,will,be,created,if,not,specified,defaults,to,link,for,web,based,applications,or,link,annotation,config,application,context,for,non,web,based,applications,param,application,context,class,the,context,class,to,set;public,void,set,application,context,class,class,extends,configurable,application,context,application,context,class,this,application,context,class,application,context,class,if,is,web,application,context,application,context,class,this,web,application,type,web,application,type,none
SpringApplication -> public void setApplicationContextClass( 			Class<? extends ConfigurableApplicationContext> applicationContextClass);1522251721;Sets the type of Spring {@link ApplicationContext} that will be created. If not_specified defaults to {@link #DEFAULT_WEB_CONTEXT_CLASS} for web based applications_or {@link AnnotationConfigApplicationContext} for non web based applications._@param applicationContextClass the context class to set;public void setApplicationContextClass(_			Class<? extends ConfigurableApplicationContext> applicationContextClass) {_		this.applicationContextClass = applicationContextClass__		if (!isWebApplicationContext(applicationContextClass)) {_			this.webApplicationType = WebApplicationType.NONE__		}_	};sets,the,type,of,spring,link,application,context,that,will,be,created,if,not,specified,defaults,to,link,for,web,based,applications,or,link,annotation,config,application,context,for,non,web,based,applications,param,application,context,class,the,context,class,to,set;public,void,set,application,context,class,class,extends,configurable,application,context,application,context,class,this,application,context,class,application,context,class,if,is,web,application,context,application,context,class,this,web,application,type,web,application,type,none
SpringApplication -> public void setApplicationContextClass( 			Class<? extends ConfigurableApplicationContext> applicationContextClass);1525376698;Sets the type of Spring {@link ApplicationContext} that will be created. If not_specified defaults to {@link #DEFAULT_WEB_CONTEXT_CLASS} for web based applications_or {@link AnnotationConfigApplicationContext} for non web based applications._@param applicationContextClass the context class to set;public void setApplicationContextClass(_			Class<? extends ConfigurableApplicationContext> applicationContextClass) {_		this.applicationContextClass = applicationContextClass__		if (!isWebApplicationContext(applicationContextClass)) {_			this.webApplicationType = WebApplicationType.NONE__		}_	};sets,the,type,of,spring,link,application,context,that,will,be,created,if,not,specified,defaults,to,link,for,web,based,applications,or,link,annotation,config,application,context,for,non,web,based,applications,param,application,context,class,the,context,class,to,set;public,void,set,application,context,class,class,extends,configurable,application,context,application,context,class,this,application,context,class,application,context,class,if,is,web,application,context,application,context,class,this,web,application,type,web,application,type,none
SpringApplication -> public void setApplicationContextClass( 			Class<? extends ConfigurableApplicationContext> applicationContextClass);1525416882;Sets the type of Spring {@link ApplicationContext} that will be created. If not_specified defaults to {@link #DEFAULT_WEB_CONTEXT_CLASS} for web based applications_or {@link AnnotationConfigApplicationContext} for non web based applications._@param applicationContextClass the context class to set;public void setApplicationContextClass(_			Class<? extends ConfigurableApplicationContext> applicationContextClass) {_		this.applicationContextClass = applicationContextClass__		if (!isWebApplicationContext(applicationContextClass)) {_			this.webApplicationType = WebApplicationType.NONE__		}_	};sets,the,type,of,spring,link,application,context,that,will,be,created,if,not,specified,defaults,to,link,for,web,based,applications,or,link,annotation,config,application,context,for,non,web,based,applications,param,application,context,class,the,context,class,to,set;public,void,set,application,context,class,class,extends,configurable,application,context,application,context,class,this,application,context,class,application,context,class,if,is,web,application,context,application,context,class,this,web,application,type,web,application,type,none
SpringApplication -> public void setApplicationContextClass( 			Class<? extends ConfigurableApplicationContext> applicationContextClass);1526993305;Sets the type of Spring {@link ApplicationContext} that will be created. If not_specified defaults to {@link #DEFAULT_WEB_CONTEXT_CLASS} for web based applications_or {@link AnnotationConfigApplicationContext} for non web based applications._@param applicationContextClass the context class to set;public void setApplicationContextClass(_			Class<? extends ConfigurableApplicationContext> applicationContextClass) {_		this.applicationContextClass = applicationContextClass__		if (!isWebApplicationContext(applicationContextClass)) {_			this.webApplicationType = WebApplicationType.NONE__		}_	};sets,the,type,of,spring,link,application,context,that,will,be,created,if,not,specified,defaults,to,link,for,web,based,applications,or,link,annotation,config,application,context,for,non,web,based,applications,param,application,context,class,the,context,class,to,set;public,void,set,application,context,class,class,extends,configurable,application,context,application,context,class,this,application,context,class,application,context,class,if,is,web,application,context,application,context,class,this,web,application,type,web,application,type,none
SpringApplication -> public void setApplicationContextClass( 			Class<? extends ConfigurableApplicationContext> applicationContextClass);1529485904;Sets the type of Spring {@link ApplicationContext} that will be created. If not_specified defaults to {@link #DEFAULT_WEB_CONTEXT_CLASS} for web based applications_or {@link AnnotationConfigApplicationContext} for non web based applications._@param applicationContextClass the context class to set;public void setApplicationContextClass(_			Class<? extends ConfigurableApplicationContext> applicationContextClass) {_		this.applicationContextClass = applicationContextClass__		if (!isWebApplicationContext(applicationContextClass)) {_			this.webApplicationType = WebApplicationType.NONE__		}_	};sets,the,type,of,spring,link,application,context,that,will,be,created,if,not,specified,defaults,to,link,for,web,based,applications,or,link,annotation,config,application,context,for,non,web,based,applications,param,application,context,class,the,context,class,to,set;public,void,set,application,context,class,class,extends,configurable,application,context,application,context,class,this,application,context,class,application,context,class,if,is,web,application,context,application,context,class,this,web,application,type,web,application,type,none
SpringApplication -> public void setApplicationContextClass( 			Class<? extends ConfigurableApplicationContext> applicationContextClass);1531140616;Sets the type of Spring {@link ApplicationContext} that will be created. If not_specified defaults to {@link #DEFAULT_WEB_CONTEXT_CLASS} for web based applications_or {@link AnnotationConfigApplicationContext} for non web based applications._@param applicationContextClass the context class to set;public void setApplicationContextClass(_			Class<? extends ConfigurableApplicationContext> applicationContextClass) {_		this.applicationContextClass = applicationContextClass__		if (!isWebApplicationContext(applicationContextClass)) {_			this.webApplicationType = WebApplicationType.NONE__		}_	};sets,the,type,of,spring,link,application,context,that,will,be,created,if,not,specified,defaults,to,link,for,web,based,applications,or,link,annotation,config,application,context,for,non,web,based,applications,param,application,context,class,the,context,class,to,set;public,void,set,application,context,class,class,extends,configurable,application,context,application,context,class,this,application,context,class,application,context,class,if,is,web,application,context,application,context,class,this,web,application,type,web,application,type,none
SpringApplication -> public void setApplicationContextClass( 			Class<? extends ConfigurableApplicationContext> applicationContextClass);1531155529;Sets the type of Spring {@link ApplicationContext} that will be created. If not_specified defaults to {@link #DEFAULT_WEB_CONTEXT_CLASS} for web based applications_or {@link AnnotationConfigApplicationContext} for non web based applications._@param applicationContextClass the context class to set;public void setApplicationContextClass(_			Class<? extends ConfigurableApplicationContext> applicationContextClass) {_		this.applicationContextClass = applicationContextClass__		if (!isWebApplicationContext(applicationContextClass)) {_			this.webApplicationType = WebApplicationType.NONE__		}_	};sets,the,type,of,spring,link,application,context,that,will,be,created,if,not,specified,defaults,to,link,for,web,based,applications,or,link,annotation,config,application,context,for,non,web,based,applications,param,application,context,class,the,context,class,to,set;public,void,set,application,context,class,class,extends,configurable,application,context,application,context,class,this,application,context,class,application,context,class,if,is,web,application,context,application,context,class,this,web,application,type,web,application,type,none
SpringApplication -> public void setApplicationContextClass( 			Class<? extends ConfigurableApplicationContext> applicationContextClass);1531222098;Sets the type of Spring {@link ApplicationContext} that will be created. If not_specified defaults to {@link #DEFAULT_WEB_CONTEXT_CLASS} for web based applications_or {@link AnnotationConfigApplicationContext} for non web based applications._@param applicationContextClass the context class to set;public void setApplicationContextClass(_			Class<? extends ConfigurableApplicationContext> applicationContextClass) {_		this.applicationContextClass = applicationContextClass__		if (!isWebApplicationContext(applicationContextClass)) {_			this.webApplicationType = WebApplicationType.NONE__		}_	};sets,the,type,of,spring,link,application,context,that,will,be,created,if,not,specified,defaults,to,link,for,web,based,applications,or,link,annotation,config,application,context,for,non,web,based,applications,param,application,context,class,the,context,class,to,set;public,void,set,application,context,class,class,extends,configurable,application,context,application,context,class,this,application,context,class,application,context,class,if,is,web,application,context,application,context,class,this,web,application,type,web,application,type,none
SpringApplication -> public void setApplicationContextClass( 			Class<? extends ConfigurableApplicationContext> applicationContextClass);1532738143;Sets the type of Spring {@link ApplicationContext} that will be created. If not_specified defaults to {@link #DEFAULT_WEB_CONTEXT_CLASS} for web based applications_or {@link AnnotationConfigApplicationContext} for non web based applications._@param applicationContextClass the context class to set;public void setApplicationContextClass(_			Class<? extends ConfigurableApplicationContext> applicationContextClass) {_		this.applicationContextClass = applicationContextClass__		if (!isWebApplicationContext(applicationContextClass)) {_			this.webApplicationType = WebApplicationType.NONE__		}_	};sets,the,type,of,spring,link,application,context,that,will,be,created,if,not,specified,defaults,to,link,for,web,based,applications,or,link,annotation,config,application,context,for,non,web,based,applications,param,application,context,class,the,context,class,to,set;public,void,set,application,context,class,class,extends,configurable,application,context,application,context,class,this,application,context,class,application,context,class,if,is,web,application,context,application,context,class,this,web,application,type,web,application,type,none
SpringApplication -> public void setApplicationContextClass( 			Class<? extends ConfigurableApplicationContext> applicationContextClass);1534188228;Sets the type of Spring {@link ApplicationContext} that will be created. If not_specified defaults to {@link #DEFAULT_WEB_CONTEXT_CLASS} for web based applications_or {@link AnnotationConfigApplicationContext} for non web based applications._@param applicationContextClass the context class to set;public void setApplicationContextClass(_			Class<? extends ConfigurableApplicationContext> applicationContextClass) {_		this.applicationContextClass = applicationContextClass__		if (!isWebApplicationContext(applicationContextClass)) {_			this.webApplicationType = WebApplicationType.NONE__		}_	};sets,the,type,of,spring,link,application,context,that,will,be,created,if,not,specified,defaults,to,link,for,web,based,applications,or,link,annotation,config,application,context,for,non,web,based,applications,param,application,context,class,the,context,class,to,set;public,void,set,application,context,class,class,extends,configurable,application,context,application,context,class,this,application,context,class,application,context,class,if,is,web,application,context,application,context,class,this,web,application,type,web,application,type,none
SpringApplication -> public void setApplicationContextClass( 			Class<? extends ConfigurableApplicationContext> applicationContextClass);1535104170;Sets the type of Spring {@link ApplicationContext} that will be created. If not_specified defaults to {@link #DEFAULT_WEB_CONTEXT_CLASS} for web based applications_or {@link AnnotationConfigApplicationContext} for non web based applications._@param applicationContextClass the context class to set;public void setApplicationContextClass(_			Class<? extends ConfigurableApplicationContext> applicationContextClass) {_		this.applicationContextClass = applicationContextClass__		if (!isWebApplicationContext(applicationContextClass)) {_			this.webApplicationType = WebApplicationType.NONE__		}_	};sets,the,type,of,spring,link,application,context,that,will,be,created,if,not,specified,defaults,to,link,for,web,based,applications,or,link,annotation,config,application,context,for,non,web,based,applications,param,application,context,class,the,context,class,to,set;public,void,set,application,context,class,class,extends,configurable,application,context,application,context,class,this,application,context,class,application,context,class,if,is,web,application,context,application,context,class,this,web,application,type,web,application,type,none
SpringApplication -> public void setApplicationContextClass( 			Class<? extends ConfigurableApplicationContext> applicationContextClass);1536701067;Sets the type of Spring {@link ApplicationContext} that will be created. If not_specified defaults to {@link #DEFAULT_WEB_CONTEXT_CLASS} for web based applications_or {@link AnnotationConfigApplicationContext} for non web based applications._@param applicationContextClass the context class to set;public void setApplicationContextClass(_			Class<? extends ConfigurableApplicationContext> applicationContextClass) {_		this.applicationContextClass = applicationContextClass__		if (!isWebApplicationContext(applicationContextClass)) {_			this.webApplicationType = WebApplicationType.NONE__		}_	};sets,the,type,of,spring,link,application,context,that,will,be,created,if,not,specified,defaults,to,link,for,web,based,applications,or,link,annotation,config,application,context,for,non,web,based,applications,param,application,context,class,the,context,class,to,set;public,void,set,application,context,class,class,extends,configurable,application,context,application,context,class,this,application,context,class,application,context,class,if,is,web,application,context,application,context,class,this,web,application,type,web,application,type,none
SpringApplication -> public void setApplicationContextClass( 			Class<? extends ConfigurableApplicationContext> applicationContextClass);1538570355;Sets the type of Spring {@link ApplicationContext} that will be created. If not_specified defaults to {@link #DEFAULT_WEB_CONTEXT_CLASS} for web based applications_or {@link AnnotationConfigApplicationContext} for non web based applications._@param applicationContextClass the context class to set;public void setApplicationContextClass(_			Class<? extends ConfigurableApplicationContext> applicationContextClass) {_		this.applicationContextClass = applicationContextClass__		this.webApplicationType = deduceWebApplicationType(applicationContextClass)__	};sets,the,type,of,spring,link,application,context,that,will,be,created,if,not,specified,defaults,to,link,for,web,based,applications,or,link,annotation,config,application,context,for,non,web,based,applications,param,application,context,class,the,context,class,to,set;public,void,set,application,context,class,class,extends,configurable,application,context,application,context,class,this,application,context,class,application,context,class,this,web,application,type,deduce,web,application,type,application,context,class
SpringApplication -> public void setApplicationContextClass( 			Class<? extends ConfigurableApplicationContext> applicationContextClass);1538707540;Sets the type of Spring {@link ApplicationContext} that will be created. If not_specified defaults to {@link #DEFAULT_WEB_CONTEXT_CLASS} for web based applications_or {@link AnnotationConfigApplicationContext} for non web based applications._@param applicationContextClass the context class to set;public void setApplicationContextClass(_			Class<? extends ConfigurableApplicationContext> applicationContextClass) {_		this.applicationContextClass = applicationContextClass__		this.webApplicationType = deduceWebApplicationType(applicationContextClass)__	};sets,the,type,of,spring,link,application,context,that,will,be,created,if,not,specified,defaults,to,link,for,web,based,applications,or,link,annotation,config,application,context,for,non,web,based,applications,param,application,context,class,the,context,class,to,set;public,void,set,application,context,class,class,extends,configurable,application,context,application,context,class,this,application,context,class,application,context,class,this,web,application,type,deduce,web,application,type,application,context,class
SpringApplication -> public void setApplicationContextClass( 			Class<? extends ConfigurableApplicationContext> applicationContextClass);1538750610;Sets the type of Spring {@link ApplicationContext} that will be created. If not_specified defaults to {@link #DEFAULT_WEB_CONTEXT_CLASS} for web based applications_or {@link AnnotationConfigApplicationContext} for non web based applications._@param applicationContextClass the context class to set;public void setApplicationContextClass(_			Class<? extends ConfigurableApplicationContext> applicationContextClass) {_		this.applicationContextClass = applicationContextClass__		this.webApplicationType = deduceWebApplicationType(applicationContextClass)__	};sets,the,type,of,spring,link,application,context,that,will,be,created,if,not,specified,defaults,to,link,for,web,based,applications,or,link,annotation,config,application,context,for,non,web,based,applications,param,application,context,class,the,context,class,to,set;public,void,set,application,context,class,class,extends,configurable,application,context,application,context,class,this,application,context,class,application,context,class,this,web,application,type,deduce,web,application,type,application,context,class
SpringApplication -> public void setApplicationContextClass( 			Class<? extends ConfigurableApplicationContext> applicationContextClass);1538771652;Sets the type of Spring {@link ApplicationContext} that will be created. If not_specified defaults to {@link #DEFAULT_SERVLET_WEB_CONTEXT_CLASS} for web based_applications or {@link AnnotationConfigApplicationContext} for non web based_applications._@param applicationContextClass the context class to set;public void setApplicationContextClass(_			Class<? extends ConfigurableApplicationContext> applicationContextClass) {_		this.applicationContextClass = applicationContextClass__		this.webApplicationType = WebApplicationType_				.deduceFromApplicationContext(applicationContextClass)__	};sets,the,type,of,spring,link,application,context,that,will,be,created,if,not,specified,defaults,to,link,for,web,based,applications,or,link,annotation,config,application,context,for,non,web,based,applications,param,application,context,class,the,context,class,to,set;public,void,set,application,context,class,class,extends,configurable,application,context,application,context,class,this,application,context,class,application,context,class,this,web,application,type,web,application,type,deduce,from,application,context,application,context,class
SpringApplication -> public void setApplicationContextClass( 			Class<? extends ConfigurableApplicationContext> applicationContextClass);1540419762;Sets the type of Spring {@link ApplicationContext} that will be created. If not_specified defaults to {@link #DEFAULT_SERVLET_WEB_CONTEXT_CLASS} for web based_applications or {@link AnnotationConfigApplicationContext} for non web based_applications._@param applicationContextClass the context class to set;public void setApplicationContextClass(_			Class<? extends ConfigurableApplicationContext> applicationContextClass) {_		this.applicationContextClass = applicationContextClass__		this.webApplicationType = WebApplicationType_				.deduceFromApplicationContext(applicationContextClass)__	};sets,the,type,of,spring,link,application,context,that,will,be,created,if,not,specified,defaults,to,link,for,web,based,applications,or,link,annotation,config,application,context,for,non,web,based,applications,param,application,context,class,the,context,class,to,set;public,void,set,application,context,class,class,extends,configurable,application,context,application,context,class,this,application,context,class,application,context,class,this,web,application,type,web,application,type,deduce,from,application,context,application,context,class
SpringApplication -> public void setApplicationContextClass( 			Class<? extends ConfigurableApplicationContext> applicationContextClass);1541060131;Sets the type of Spring {@link ApplicationContext} that will be created. If not_specified defaults to {@link #DEFAULT_SERVLET_WEB_CONTEXT_CLASS} for web based_applications or {@link AnnotationConfigApplicationContext} for non web based_applications._@param applicationContextClass the context class to set;public void setApplicationContextClass(_			Class<? extends ConfigurableApplicationContext> applicationContextClass) {_		this.applicationContextClass = applicationContextClass__		this.webApplicationType = WebApplicationType_				.deduceFromApplicationContext(applicationContextClass)__	};sets,the,type,of,spring,link,application,context,that,will,be,created,if,not,specified,defaults,to,link,for,web,based,applications,or,link,annotation,config,application,context,for,non,web,based,applications,param,application,context,class,the,context,class,to,set;public,void,set,application,context,class,class,extends,configurable,application,context,application,context,class,this,application,context,class,application,context,class,this,web,application,type,web,application,type,deduce,from,application,context,application,context,class
SpringApplication -> public void setApplicationContextClass( 			Class<? extends ConfigurableApplicationContext> applicationContextClass);1546943477;Sets the type of Spring {@link ApplicationContext} that will be created. If not_specified defaults to {@link #DEFAULT_SERVLET_WEB_CONTEXT_CLASS} for web based_applications or {@link AnnotationConfigApplicationContext} for non web based_applications._@param applicationContextClass the context class to set;public void setApplicationContextClass(_			Class<? extends ConfigurableApplicationContext> applicationContextClass) {_		this.applicationContextClass = applicationContextClass__		this.webApplicationType = WebApplicationType_				.deduceFromApplicationContext(applicationContextClass)__	};sets,the,type,of,spring,link,application,context,that,will,be,created,if,not,specified,defaults,to,link,for,web,based,applications,or,link,annotation,config,application,context,for,non,web,based,applications,param,application,context,class,the,context,class,to,set;public,void,set,application,context,class,class,extends,configurable,application,context,application,context,class,this,application,context,class,application,context,class,this,web,application,type,web,application,type,deduce,from,application,context,application,context,class
SpringApplication -> public void setApplicationContextClass( 			Class<? extends ConfigurableApplicationContext> applicationContextClass);1549791353;Sets the type of Spring {@link ApplicationContext} that will be created. If not_specified defaults to {@link #DEFAULT_SERVLET_WEB_CONTEXT_CLASS} for web based_applications or {@link AnnotationConfigApplicationContext} for non web based_applications._@param applicationContextClass the context class to set;public void setApplicationContextClass(_			Class<? extends ConfigurableApplicationContext> applicationContextClass) {_		this.applicationContextClass = applicationContextClass__		this.webApplicationType = WebApplicationType_				.deduceFromApplicationContext(applicationContextClass)__	};sets,the,type,of,spring,link,application,context,that,will,be,created,if,not,specified,defaults,to,link,for,web,based,applications,or,link,annotation,config,application,context,for,non,web,based,applications,param,application,context,class,the,context,class,to,set;public,void,set,application,context,class,class,extends,configurable,application,context,application,context,class,this,application,context,class,application,context,class,this,web,application,type,web,application,type,deduce,from,application,context,application,context,class
SpringApplication -> public void setApplicationContextClass( 			Class<? extends ConfigurableApplicationContext> applicationContextClass);1550148109;Sets the type of Spring {@link ApplicationContext} that will be created. If not_specified defaults to {@link #DEFAULT_SERVLET_WEB_CONTEXT_CLASS} for web based_applications or {@link AnnotationConfigApplicationContext} for non web based_applications._@param applicationContextClass the context class to set;public void setApplicationContextClass(_			Class<? extends ConfigurableApplicationContext> applicationContextClass) {_		this.applicationContextClass = applicationContextClass__		this.webApplicationType = WebApplicationType_				.deduceFromApplicationContext(applicationContextClass)__	};sets,the,type,of,spring,link,application,context,that,will,be,created,if,not,specified,defaults,to,link,for,web,based,applications,or,link,annotation,config,application,context,for,non,web,based,applications,param,application,context,class,the,context,class,to,set;public,void,set,application,context,class,class,extends,configurable,application,context,application,context,class,this,application,context,class,application,context,class,this,web,application,type,web,application,type,deduce,from,application,context,application,context,class
SpringApplication -> public void setAddCommandLineProperties(boolean addCommandLineProperties);1507173536;Sets if a {@link CommandLinePropertySource} should be added to the application_context in order to expose arguments. Defaults to {@code true}._@param addCommandLineProperties if command line arguments should be exposed;public void setAddCommandLineProperties(boolean addCommandLineProperties) {_		this.addCommandLineProperties = addCommandLineProperties__	};sets,if,a,link,command,line,property,source,should,be,added,to,the,application,context,in,order,to,expose,arguments,defaults,to,code,true,param,add,command,line,properties,if,command,line,arguments,should,be,exposed;public,void,set,add,command,line,properties,boolean,add,command,line,properties,this,add,command,line,properties,add,command,line,properties
SpringApplication -> public void setAddCommandLineProperties(boolean addCommandLineProperties);1509381678;Sets if a {@link CommandLinePropertySource} should be added to the application_context in order to expose arguments. Defaults to {@code true}._@param addCommandLineProperties if command line arguments should be exposed;public void setAddCommandLineProperties(boolean addCommandLineProperties) {_		this.addCommandLineProperties = addCommandLineProperties__	};sets,if,a,link,command,line,property,source,should,be,added,to,the,application,context,in,order,to,expose,arguments,defaults,to,code,true,param,add,command,line,properties,if,command,line,arguments,should,be,exposed;public,void,set,add,command,line,properties,boolean,add,command,line,properties,this,add,command,line,properties,add,command,line,properties
SpringApplication -> public void setAddCommandLineProperties(boolean addCommandLineProperties);1510995225;Sets if a {@link CommandLinePropertySource} should be added to the application_context in order to expose arguments. Defaults to {@code true}._@param addCommandLineProperties if command line arguments should be exposed;public void setAddCommandLineProperties(boolean addCommandLineProperties) {_		this.addCommandLineProperties = addCommandLineProperties__	};sets,if,a,link,command,line,property,source,should,be,added,to,the,application,context,in,order,to,expose,arguments,defaults,to,code,true,param,add,command,line,properties,if,command,line,arguments,should,be,exposed;public,void,set,add,command,line,properties,boolean,add,command,line,properties,this,add,command,line,properties,add,command,line,properties
SpringApplication -> public void setAddCommandLineProperties(boolean addCommandLineProperties);1515670013;Sets if a {@link CommandLinePropertySource} should be added to the application_context in order to expose arguments. Defaults to {@code true}._@param addCommandLineProperties if command line arguments should be exposed;public void setAddCommandLineProperties(boolean addCommandLineProperties) {_		this.addCommandLineProperties = addCommandLineProperties__	};sets,if,a,link,command,line,property,source,should,be,added,to,the,application,context,in,order,to,expose,arguments,defaults,to,code,true,param,add,command,line,properties,if,command,line,arguments,should,be,exposed;public,void,set,add,command,line,properties,boolean,add,command,line,properties,this,add,command,line,properties,add,command,line,properties
SpringApplication -> public void setAddCommandLineProperties(boolean addCommandLineProperties);1519362690;Sets if a {@link CommandLinePropertySource} should be added to the application_context in order to expose arguments. Defaults to {@code true}._@param addCommandLineProperties if command line arguments should be exposed;public void setAddCommandLineProperties(boolean addCommandLineProperties) {_		this.addCommandLineProperties = addCommandLineProperties__	};sets,if,a,link,command,line,property,source,should,be,added,to,the,application,context,in,order,to,expose,arguments,defaults,to,code,true,param,add,command,line,properties,if,command,line,arguments,should,be,exposed;public,void,set,add,command,line,properties,boolean,add,command,line,properties,this,add,command,line,properties,add,command,line,properties
SpringApplication -> public void setAddCommandLineProperties(boolean addCommandLineProperties);1522251721;Sets if a {@link CommandLinePropertySource} should be added to the application_context in order to expose arguments. Defaults to {@code true}._@param addCommandLineProperties if command line arguments should be exposed;public void setAddCommandLineProperties(boolean addCommandLineProperties) {_		this.addCommandLineProperties = addCommandLineProperties__	};sets,if,a,link,command,line,property,source,should,be,added,to,the,application,context,in,order,to,expose,arguments,defaults,to,code,true,param,add,command,line,properties,if,command,line,arguments,should,be,exposed;public,void,set,add,command,line,properties,boolean,add,command,line,properties,this,add,command,line,properties,add,command,line,properties
SpringApplication -> public void setAddCommandLineProperties(boolean addCommandLineProperties);1525376698;Sets if a {@link CommandLinePropertySource} should be added to the application_context in order to expose arguments. Defaults to {@code true}._@param addCommandLineProperties if command line arguments should be exposed;public void setAddCommandLineProperties(boolean addCommandLineProperties) {_		this.addCommandLineProperties = addCommandLineProperties__	};sets,if,a,link,command,line,property,source,should,be,added,to,the,application,context,in,order,to,expose,arguments,defaults,to,code,true,param,add,command,line,properties,if,command,line,arguments,should,be,exposed;public,void,set,add,command,line,properties,boolean,add,command,line,properties,this,add,command,line,properties,add,command,line,properties
SpringApplication -> public void setAddCommandLineProperties(boolean addCommandLineProperties);1525416882;Sets if a {@link CommandLinePropertySource} should be added to the application_context in order to expose arguments. Defaults to {@code true}._@param addCommandLineProperties if command line arguments should be exposed;public void setAddCommandLineProperties(boolean addCommandLineProperties) {_		this.addCommandLineProperties = addCommandLineProperties__	};sets,if,a,link,command,line,property,source,should,be,added,to,the,application,context,in,order,to,expose,arguments,defaults,to,code,true,param,add,command,line,properties,if,command,line,arguments,should,be,exposed;public,void,set,add,command,line,properties,boolean,add,command,line,properties,this,add,command,line,properties,add,command,line,properties
SpringApplication -> public void setAddCommandLineProperties(boolean addCommandLineProperties);1526993305;Sets if a {@link CommandLinePropertySource} should be added to the application_context in order to expose arguments. Defaults to {@code true}._@param addCommandLineProperties if command line arguments should be exposed;public void setAddCommandLineProperties(boolean addCommandLineProperties) {_		this.addCommandLineProperties = addCommandLineProperties__	};sets,if,a,link,command,line,property,source,should,be,added,to,the,application,context,in,order,to,expose,arguments,defaults,to,code,true,param,add,command,line,properties,if,command,line,arguments,should,be,exposed;public,void,set,add,command,line,properties,boolean,add,command,line,properties,this,add,command,line,properties,add,command,line,properties
SpringApplication -> public void setAddCommandLineProperties(boolean addCommandLineProperties);1529485904;Sets if a {@link CommandLinePropertySource} should be added to the application_context in order to expose arguments. Defaults to {@code true}._@param addCommandLineProperties if command line arguments should be exposed;public void setAddCommandLineProperties(boolean addCommandLineProperties) {_		this.addCommandLineProperties = addCommandLineProperties__	};sets,if,a,link,command,line,property,source,should,be,added,to,the,application,context,in,order,to,expose,arguments,defaults,to,code,true,param,add,command,line,properties,if,command,line,arguments,should,be,exposed;public,void,set,add,command,line,properties,boolean,add,command,line,properties,this,add,command,line,properties,add,command,line,properties
SpringApplication -> public void setAddCommandLineProperties(boolean addCommandLineProperties);1531140616;Sets if a {@link CommandLinePropertySource} should be added to the application_context in order to expose arguments. Defaults to {@code true}._@param addCommandLineProperties if command line arguments should be exposed;public void setAddCommandLineProperties(boolean addCommandLineProperties) {_		this.addCommandLineProperties = addCommandLineProperties__	};sets,if,a,link,command,line,property,source,should,be,added,to,the,application,context,in,order,to,expose,arguments,defaults,to,code,true,param,add,command,line,properties,if,command,line,arguments,should,be,exposed;public,void,set,add,command,line,properties,boolean,add,command,line,properties,this,add,command,line,properties,add,command,line,properties
SpringApplication -> public void setAddCommandLineProperties(boolean addCommandLineProperties);1531155529;Sets if a {@link CommandLinePropertySource} should be added to the application_context in order to expose arguments. Defaults to {@code true}._@param addCommandLineProperties if command line arguments should be exposed;public void setAddCommandLineProperties(boolean addCommandLineProperties) {_		this.addCommandLineProperties = addCommandLineProperties__	};sets,if,a,link,command,line,property,source,should,be,added,to,the,application,context,in,order,to,expose,arguments,defaults,to,code,true,param,add,command,line,properties,if,command,line,arguments,should,be,exposed;public,void,set,add,command,line,properties,boolean,add,command,line,properties,this,add,command,line,properties,add,command,line,properties
SpringApplication -> public void setAddCommandLineProperties(boolean addCommandLineProperties);1531222098;Sets if a {@link CommandLinePropertySource} should be added to the application_context in order to expose arguments. Defaults to {@code true}._@param addCommandLineProperties if command line arguments should be exposed;public void setAddCommandLineProperties(boolean addCommandLineProperties) {_		this.addCommandLineProperties = addCommandLineProperties__	};sets,if,a,link,command,line,property,source,should,be,added,to,the,application,context,in,order,to,expose,arguments,defaults,to,code,true,param,add,command,line,properties,if,command,line,arguments,should,be,exposed;public,void,set,add,command,line,properties,boolean,add,command,line,properties,this,add,command,line,properties,add,command,line,properties
SpringApplication -> public void setAddCommandLineProperties(boolean addCommandLineProperties);1532738143;Sets if a {@link CommandLinePropertySource} should be added to the application_context in order to expose arguments. Defaults to {@code true}._@param addCommandLineProperties if command line arguments should be exposed;public void setAddCommandLineProperties(boolean addCommandLineProperties) {_		this.addCommandLineProperties = addCommandLineProperties__	};sets,if,a,link,command,line,property,source,should,be,added,to,the,application,context,in,order,to,expose,arguments,defaults,to,code,true,param,add,command,line,properties,if,command,line,arguments,should,be,exposed;public,void,set,add,command,line,properties,boolean,add,command,line,properties,this,add,command,line,properties,add,command,line,properties
SpringApplication -> public void setAddCommandLineProperties(boolean addCommandLineProperties);1534188228;Sets if a {@link CommandLinePropertySource} should be added to the application_context in order to expose arguments. Defaults to {@code true}._@param addCommandLineProperties if command line arguments should be exposed;public void setAddCommandLineProperties(boolean addCommandLineProperties) {_		this.addCommandLineProperties = addCommandLineProperties__	};sets,if,a,link,command,line,property,source,should,be,added,to,the,application,context,in,order,to,expose,arguments,defaults,to,code,true,param,add,command,line,properties,if,command,line,arguments,should,be,exposed;public,void,set,add,command,line,properties,boolean,add,command,line,properties,this,add,command,line,properties,add,command,line,properties
SpringApplication -> public void setAddCommandLineProperties(boolean addCommandLineProperties);1535104170;Sets if a {@link CommandLinePropertySource} should be added to the application_context in order to expose arguments. Defaults to {@code true}._@param addCommandLineProperties if command line arguments should be exposed;public void setAddCommandLineProperties(boolean addCommandLineProperties) {_		this.addCommandLineProperties = addCommandLineProperties__	};sets,if,a,link,command,line,property,source,should,be,added,to,the,application,context,in,order,to,expose,arguments,defaults,to,code,true,param,add,command,line,properties,if,command,line,arguments,should,be,exposed;public,void,set,add,command,line,properties,boolean,add,command,line,properties,this,add,command,line,properties,add,command,line,properties
SpringApplication -> public void setAddCommandLineProperties(boolean addCommandLineProperties);1536701067;Sets if a {@link CommandLinePropertySource} should be added to the application_context in order to expose arguments. Defaults to {@code true}._@param addCommandLineProperties if command line arguments should be exposed;public void setAddCommandLineProperties(boolean addCommandLineProperties) {_		this.addCommandLineProperties = addCommandLineProperties__	};sets,if,a,link,command,line,property,source,should,be,added,to,the,application,context,in,order,to,expose,arguments,defaults,to,code,true,param,add,command,line,properties,if,command,line,arguments,should,be,exposed;public,void,set,add,command,line,properties,boolean,add,command,line,properties,this,add,command,line,properties,add,command,line,properties
SpringApplication -> public void setAddCommandLineProperties(boolean addCommandLineProperties);1538570355;Sets if a {@link CommandLinePropertySource} should be added to the application_context in order to expose arguments. Defaults to {@code true}._@param addCommandLineProperties if command line arguments should be exposed;public void setAddCommandLineProperties(boolean addCommandLineProperties) {_		this.addCommandLineProperties = addCommandLineProperties__	};sets,if,a,link,command,line,property,source,should,be,added,to,the,application,context,in,order,to,expose,arguments,defaults,to,code,true,param,add,command,line,properties,if,command,line,arguments,should,be,exposed;public,void,set,add,command,line,properties,boolean,add,command,line,properties,this,add,command,line,properties,add,command,line,properties
SpringApplication -> public void setAddCommandLineProperties(boolean addCommandLineProperties);1538707540;Sets if a {@link CommandLinePropertySource} should be added to the application_context in order to expose arguments. Defaults to {@code true}._@param addCommandLineProperties if command line arguments should be exposed;public void setAddCommandLineProperties(boolean addCommandLineProperties) {_		this.addCommandLineProperties = addCommandLineProperties__	};sets,if,a,link,command,line,property,source,should,be,added,to,the,application,context,in,order,to,expose,arguments,defaults,to,code,true,param,add,command,line,properties,if,command,line,arguments,should,be,exposed;public,void,set,add,command,line,properties,boolean,add,command,line,properties,this,add,command,line,properties,add,command,line,properties
SpringApplication -> public void setAddCommandLineProperties(boolean addCommandLineProperties);1538750610;Sets if a {@link CommandLinePropertySource} should be added to the application_context in order to expose arguments. Defaults to {@code true}._@param addCommandLineProperties if command line arguments should be exposed;public void setAddCommandLineProperties(boolean addCommandLineProperties) {_		this.addCommandLineProperties = addCommandLineProperties__	};sets,if,a,link,command,line,property,source,should,be,added,to,the,application,context,in,order,to,expose,arguments,defaults,to,code,true,param,add,command,line,properties,if,command,line,arguments,should,be,exposed;public,void,set,add,command,line,properties,boolean,add,command,line,properties,this,add,command,line,properties,add,command,line,properties
SpringApplication -> public void setAddCommandLineProperties(boolean addCommandLineProperties);1538771652;Sets if a {@link CommandLinePropertySource} should be added to the application_context in order to expose arguments. Defaults to {@code true}._@param addCommandLineProperties if command line arguments should be exposed;public void setAddCommandLineProperties(boolean addCommandLineProperties) {_		this.addCommandLineProperties = addCommandLineProperties__	};sets,if,a,link,command,line,property,source,should,be,added,to,the,application,context,in,order,to,expose,arguments,defaults,to,code,true,param,add,command,line,properties,if,command,line,arguments,should,be,exposed;public,void,set,add,command,line,properties,boolean,add,command,line,properties,this,add,command,line,properties,add,command,line,properties
SpringApplication -> public void setAddCommandLineProperties(boolean addCommandLineProperties);1540419762;Sets if a {@link CommandLinePropertySource} should be added to the application_context in order to expose arguments. Defaults to {@code true}._@param addCommandLineProperties if command line arguments should be exposed;public void setAddCommandLineProperties(boolean addCommandLineProperties) {_		this.addCommandLineProperties = addCommandLineProperties__	};sets,if,a,link,command,line,property,source,should,be,added,to,the,application,context,in,order,to,expose,arguments,defaults,to,code,true,param,add,command,line,properties,if,command,line,arguments,should,be,exposed;public,void,set,add,command,line,properties,boolean,add,command,line,properties,this,add,command,line,properties,add,command,line,properties
SpringApplication -> public void setAddCommandLineProperties(boolean addCommandLineProperties);1541060131;Sets if a {@link CommandLinePropertySource} should be added to the application_context in order to expose arguments. Defaults to {@code true}._@param addCommandLineProperties if command line arguments should be exposed;public void setAddCommandLineProperties(boolean addCommandLineProperties) {_		this.addCommandLineProperties = addCommandLineProperties__	};sets,if,a,link,command,line,property,source,should,be,added,to,the,application,context,in,order,to,expose,arguments,defaults,to,code,true,param,add,command,line,properties,if,command,line,arguments,should,be,exposed;public,void,set,add,command,line,properties,boolean,add,command,line,properties,this,add,command,line,properties,add,command,line,properties
SpringApplication -> public void setAddCommandLineProperties(boolean addCommandLineProperties);1546943477;Sets if a {@link CommandLinePropertySource} should be added to the application_context in order to expose arguments. Defaults to {@code true}._@param addCommandLineProperties if command line arguments should be exposed;public void setAddCommandLineProperties(boolean addCommandLineProperties) {_		this.addCommandLineProperties = addCommandLineProperties__	};sets,if,a,link,command,line,property,source,should,be,added,to,the,application,context,in,order,to,expose,arguments,defaults,to,code,true,param,add,command,line,properties,if,command,line,arguments,should,be,exposed;public,void,set,add,command,line,properties,boolean,add,command,line,properties,this,add,command,line,properties,add,command,line,properties
SpringApplication -> public void setAddCommandLineProperties(boolean addCommandLineProperties);1549791353;Sets if a {@link CommandLinePropertySource} should be added to the application_context in order to expose arguments. Defaults to {@code true}._@param addCommandLineProperties if command line arguments should be exposed;public void setAddCommandLineProperties(boolean addCommandLineProperties) {_		this.addCommandLineProperties = addCommandLineProperties__	};sets,if,a,link,command,line,property,source,should,be,added,to,the,application,context,in,order,to,expose,arguments,defaults,to,code,true,param,add,command,line,properties,if,command,line,arguments,should,be,exposed;public,void,set,add,command,line,properties,boolean,add,command,line,properties,this,add,command,line,properties,add,command,line,properties
SpringApplication -> public void setAddCommandLineProperties(boolean addCommandLineProperties);1550148109;Sets if a {@link CommandLinePropertySource} should be added to the application_context in order to expose arguments. Defaults to {@code true}._@param addCommandLineProperties if command line arguments should be exposed;public void setAddCommandLineProperties(boolean addCommandLineProperties) {_		this.addCommandLineProperties = addCommandLineProperties__	};sets,if,a,link,command,line,property,source,should,be,added,to,the,application,context,in,order,to,expose,arguments,defaults,to,code,true,param,add,command,line,properties,if,command,line,arguments,should,be,exposed;public,void,set,add,command,line,properties,boolean,add,command,line,properties,this,add,command,line,properties,add,command,line,properties
SpringApplication -> public ResourceLoader getResourceLoader();1507173536;The ResourceLoader that will be used in the ApplicationContext._@return the resourceLoader the resource loader that will be used in the_ApplicationContext (or null if the default);public ResourceLoader getResourceLoader() {_		return this.resourceLoader__	};the,resource,loader,that,will,be,used,in,the,application,context,return,the,resource,loader,the,resource,loader,that,will,be,used,in,the,application,context,or,null,if,the,default;public,resource,loader,get,resource,loader,return,this,resource,loader
SpringApplication -> public ResourceLoader getResourceLoader();1509381678;The ResourceLoader that will be used in the ApplicationContext._@return the resourceLoader the resource loader that will be used in the_ApplicationContext (or null if the default);public ResourceLoader getResourceLoader() {_		return this.resourceLoader__	};the,resource,loader,that,will,be,used,in,the,application,context,return,the,resource,loader,the,resource,loader,that,will,be,used,in,the,application,context,or,null,if,the,default;public,resource,loader,get,resource,loader,return,this,resource,loader
SpringApplication -> public ResourceLoader getResourceLoader();1510995225;The ResourceLoader that will be used in the ApplicationContext._@return the resourceLoader the resource loader that will be used in the_ApplicationContext (or null if the default);public ResourceLoader getResourceLoader() {_		return this.resourceLoader__	};the,resource,loader,that,will,be,used,in,the,application,context,return,the,resource,loader,the,resource,loader,that,will,be,used,in,the,application,context,or,null,if,the,default;public,resource,loader,get,resource,loader,return,this,resource,loader
SpringApplication -> public ResourceLoader getResourceLoader();1515670013;The ResourceLoader that will be used in the ApplicationContext._@return the resourceLoader the resource loader that will be used in the_ApplicationContext (or null if the default);public ResourceLoader getResourceLoader() {_		return this.resourceLoader__	};the,resource,loader,that,will,be,used,in,the,application,context,return,the,resource,loader,the,resource,loader,that,will,be,used,in,the,application,context,or,null,if,the,default;public,resource,loader,get,resource,loader,return,this,resource,loader
SpringApplication -> public ResourceLoader getResourceLoader();1519362690;The ResourceLoader that will be used in the ApplicationContext._@return the resourceLoader the resource loader that will be used in the_ApplicationContext (or null if the default);public ResourceLoader getResourceLoader() {_		return this.resourceLoader__	};the,resource,loader,that,will,be,used,in,the,application,context,return,the,resource,loader,the,resource,loader,that,will,be,used,in,the,application,context,or,null,if,the,default;public,resource,loader,get,resource,loader,return,this,resource,loader
SpringApplication -> public ResourceLoader getResourceLoader();1522251721;The ResourceLoader that will be used in the ApplicationContext._@return the resourceLoader the resource loader that will be used in the_ApplicationContext (or null if the default);public ResourceLoader getResourceLoader() {_		return this.resourceLoader__	};the,resource,loader,that,will,be,used,in,the,application,context,return,the,resource,loader,the,resource,loader,that,will,be,used,in,the,application,context,or,null,if,the,default;public,resource,loader,get,resource,loader,return,this,resource,loader
SpringApplication -> public ResourceLoader getResourceLoader();1525376698;The ResourceLoader that will be used in the ApplicationContext._@return the resourceLoader the resource loader that will be used in the_ApplicationContext (or null if the default);public ResourceLoader getResourceLoader() {_		return this.resourceLoader__	};the,resource,loader,that,will,be,used,in,the,application,context,return,the,resource,loader,the,resource,loader,that,will,be,used,in,the,application,context,or,null,if,the,default;public,resource,loader,get,resource,loader,return,this,resource,loader
SpringApplication -> public ResourceLoader getResourceLoader();1525416882;The ResourceLoader that will be used in the ApplicationContext._@return the resourceLoader the resource loader that will be used in the_ApplicationContext (or null if the default);public ResourceLoader getResourceLoader() {_		return this.resourceLoader__	};the,resource,loader,that,will,be,used,in,the,application,context,return,the,resource,loader,the,resource,loader,that,will,be,used,in,the,application,context,or,null,if,the,default;public,resource,loader,get,resource,loader,return,this,resource,loader
SpringApplication -> public ResourceLoader getResourceLoader();1526993305;The ResourceLoader that will be used in the ApplicationContext._@return the resourceLoader the resource loader that will be used in the_ApplicationContext (or null if the default);public ResourceLoader getResourceLoader() {_		return this.resourceLoader__	};the,resource,loader,that,will,be,used,in,the,application,context,return,the,resource,loader,the,resource,loader,that,will,be,used,in,the,application,context,or,null,if,the,default;public,resource,loader,get,resource,loader,return,this,resource,loader
SpringApplication -> public ResourceLoader getResourceLoader();1529485904;The ResourceLoader that will be used in the ApplicationContext._@return the resourceLoader the resource loader that will be used in the_ApplicationContext (or null if the default);public ResourceLoader getResourceLoader() {_		return this.resourceLoader__	};the,resource,loader,that,will,be,used,in,the,application,context,return,the,resource,loader,the,resource,loader,that,will,be,used,in,the,application,context,or,null,if,the,default;public,resource,loader,get,resource,loader,return,this,resource,loader
SpringApplication -> public ResourceLoader getResourceLoader();1531140616;The ResourceLoader that will be used in the ApplicationContext._@return the resourceLoader the resource loader that will be used in the_ApplicationContext (or null if the default);public ResourceLoader getResourceLoader() {_		return this.resourceLoader__	};the,resource,loader,that,will,be,used,in,the,application,context,return,the,resource,loader,the,resource,loader,that,will,be,used,in,the,application,context,or,null,if,the,default;public,resource,loader,get,resource,loader,return,this,resource,loader
SpringApplication -> public ResourceLoader getResourceLoader();1531155529;The ResourceLoader that will be used in the ApplicationContext._@return the resourceLoader the resource loader that will be used in the_ApplicationContext (or null if the default);public ResourceLoader getResourceLoader() {_		return this.resourceLoader__	};the,resource,loader,that,will,be,used,in,the,application,context,return,the,resource,loader,the,resource,loader,that,will,be,used,in,the,application,context,or,null,if,the,default;public,resource,loader,get,resource,loader,return,this,resource,loader
SpringApplication -> public ResourceLoader getResourceLoader();1531222098;The ResourceLoader that will be used in the ApplicationContext._@return the resourceLoader the resource loader that will be used in the_ApplicationContext (or null if the default);public ResourceLoader getResourceLoader() {_		return this.resourceLoader__	};the,resource,loader,that,will,be,used,in,the,application,context,return,the,resource,loader,the,resource,loader,that,will,be,used,in,the,application,context,or,null,if,the,default;public,resource,loader,get,resource,loader,return,this,resource,loader
SpringApplication -> public ResourceLoader getResourceLoader();1532738143;The ResourceLoader that will be used in the ApplicationContext._@return the resourceLoader the resource loader that will be used in the_ApplicationContext (or null if the default);public ResourceLoader getResourceLoader() {_		return this.resourceLoader__	};the,resource,loader,that,will,be,used,in,the,application,context,return,the,resource,loader,the,resource,loader,that,will,be,used,in,the,application,context,or,null,if,the,default;public,resource,loader,get,resource,loader,return,this,resource,loader
SpringApplication -> public ResourceLoader getResourceLoader();1534188228;The ResourceLoader that will be used in the ApplicationContext._@return the resourceLoader the resource loader that will be used in the_ApplicationContext (or null if the default);public ResourceLoader getResourceLoader() {_		return this.resourceLoader__	};the,resource,loader,that,will,be,used,in,the,application,context,return,the,resource,loader,the,resource,loader,that,will,be,used,in,the,application,context,or,null,if,the,default;public,resource,loader,get,resource,loader,return,this,resource,loader
SpringApplication -> public ResourceLoader getResourceLoader();1535104170;The ResourceLoader that will be used in the ApplicationContext._@return the resourceLoader the resource loader that will be used in the_ApplicationContext (or null if the default);public ResourceLoader getResourceLoader() {_		return this.resourceLoader__	};the,resource,loader,that,will,be,used,in,the,application,context,return,the,resource,loader,the,resource,loader,that,will,be,used,in,the,application,context,or,null,if,the,default;public,resource,loader,get,resource,loader,return,this,resource,loader
SpringApplication -> public ResourceLoader getResourceLoader();1536701067;The ResourceLoader that will be used in the ApplicationContext._@return the resourceLoader the resource loader that will be used in the_ApplicationContext (or null if the default);public ResourceLoader getResourceLoader() {_		return this.resourceLoader__	};the,resource,loader,that,will,be,used,in,the,application,context,return,the,resource,loader,the,resource,loader,that,will,be,used,in,the,application,context,or,null,if,the,default;public,resource,loader,get,resource,loader,return,this,resource,loader
SpringApplication -> public ResourceLoader getResourceLoader();1538570355;The ResourceLoader that will be used in the ApplicationContext._@return the resourceLoader the resource loader that will be used in the_ApplicationContext (or null if the default);public ResourceLoader getResourceLoader() {_		return this.resourceLoader__	};the,resource,loader,that,will,be,used,in,the,application,context,return,the,resource,loader,the,resource,loader,that,will,be,used,in,the,application,context,or,null,if,the,default;public,resource,loader,get,resource,loader,return,this,resource,loader
SpringApplication -> public ResourceLoader getResourceLoader();1538707540;The ResourceLoader that will be used in the ApplicationContext._@return the resourceLoader the resource loader that will be used in the_ApplicationContext (or null if the default);public ResourceLoader getResourceLoader() {_		return this.resourceLoader__	};the,resource,loader,that,will,be,used,in,the,application,context,return,the,resource,loader,the,resource,loader,that,will,be,used,in,the,application,context,or,null,if,the,default;public,resource,loader,get,resource,loader,return,this,resource,loader
SpringApplication -> public ResourceLoader getResourceLoader();1538750610;The ResourceLoader that will be used in the ApplicationContext._@return the resourceLoader the resource loader that will be used in the_ApplicationContext (or null if the default);public ResourceLoader getResourceLoader() {_		return this.resourceLoader__	};the,resource,loader,that,will,be,used,in,the,application,context,return,the,resource,loader,the,resource,loader,that,will,be,used,in,the,application,context,or,null,if,the,default;public,resource,loader,get,resource,loader,return,this,resource,loader
SpringApplication -> public ResourceLoader getResourceLoader();1538771652;The ResourceLoader that will be used in the ApplicationContext._@return the resourceLoader the resource loader that will be used in the_ApplicationContext (or null if the default);public ResourceLoader getResourceLoader() {_		return this.resourceLoader__	};the,resource,loader,that,will,be,used,in,the,application,context,return,the,resource,loader,the,resource,loader,that,will,be,used,in,the,application,context,or,null,if,the,default;public,resource,loader,get,resource,loader,return,this,resource,loader
SpringApplication -> public ResourceLoader getResourceLoader();1540419762;The ResourceLoader that will be used in the ApplicationContext._@return the resourceLoader the resource loader that will be used in the_ApplicationContext (or null if the default);public ResourceLoader getResourceLoader() {_		return this.resourceLoader__	};the,resource,loader,that,will,be,used,in,the,application,context,return,the,resource,loader,the,resource,loader,that,will,be,used,in,the,application,context,or,null,if,the,default;public,resource,loader,get,resource,loader,return,this,resource,loader
SpringApplication -> public ResourceLoader getResourceLoader();1541060131;The ResourceLoader that will be used in the ApplicationContext._@return the resourceLoader the resource loader that will be used in the_ApplicationContext (or null if the default);public ResourceLoader getResourceLoader() {_		return this.resourceLoader__	};the,resource,loader,that,will,be,used,in,the,application,context,return,the,resource,loader,the,resource,loader,that,will,be,used,in,the,application,context,or,null,if,the,default;public,resource,loader,get,resource,loader,return,this,resource,loader
SpringApplication -> public ResourceLoader getResourceLoader();1546943477;The ResourceLoader that will be used in the ApplicationContext._@return the resourceLoader the resource loader that will be used in the_ApplicationContext (or null if the default);public ResourceLoader getResourceLoader() {_		return this.resourceLoader__	};the,resource,loader,that,will,be,used,in,the,application,context,return,the,resource,loader,the,resource,loader,that,will,be,used,in,the,application,context,or,null,if,the,default;public,resource,loader,get,resource,loader,return,this,resource,loader
SpringApplication -> public ResourceLoader getResourceLoader();1549791353;The ResourceLoader that will be used in the ApplicationContext._@return the resourceLoader the resource loader that will be used in the_ApplicationContext (or null if the default);public ResourceLoader getResourceLoader() {_		return this.resourceLoader__	};the,resource,loader,that,will,be,used,in,the,application,context,return,the,resource,loader,the,resource,loader,that,will,be,used,in,the,application,context,or,null,if,the,default;public,resource,loader,get,resource,loader,return,this,resource,loader
SpringApplication -> public ResourceLoader getResourceLoader();1550148109;The ResourceLoader that will be used in the ApplicationContext._@return the resourceLoader the resource loader that will be used in the_ApplicationContext (or null if the default);public ResourceLoader getResourceLoader() {_		return this.resourceLoader__	};the,resource,loader,that,will,be,used,in,the,application,context,return,the,resource,loader,the,resource,loader,that,will,be,used,in,the,application,context,or,null,if,the,default;public,resource,loader,get,resource,loader,return,this,resource,loader
SpringApplication -> public void setAdditionalProfiles(String... profiles);1507173536;Set additional profile values to use (on top of those set in system or command line_properties)._@param profiles the additional profiles to set;public void setAdditionalProfiles(String... profiles) {_		this.additionalProfiles = new LinkedHashSet<>(Arrays.asList(profiles))__	};set,additional,profile,values,to,use,on,top,of,those,set,in,system,or,command,line,properties,param,profiles,the,additional,profiles,to,set;public,void,set,additional,profiles,string,profiles,this,additional,profiles,new,linked,hash,set,arrays,as,list,profiles
SpringApplication -> public void setAdditionalProfiles(String... profiles);1509381678;Set additional profile values to use (on top of those set in system or command line_properties)._@param profiles the additional profiles to set;public void setAdditionalProfiles(String... profiles) {_		this.additionalProfiles = new LinkedHashSet<>(Arrays.asList(profiles))__	};set,additional,profile,values,to,use,on,top,of,those,set,in,system,or,command,line,properties,param,profiles,the,additional,profiles,to,set;public,void,set,additional,profiles,string,profiles,this,additional,profiles,new,linked,hash,set,arrays,as,list,profiles
SpringApplication -> public void setAdditionalProfiles(String... profiles);1510995225;Set additional profile values to use (on top of those set in system or command line_properties)._@param profiles the additional profiles to set;public void setAdditionalProfiles(String... profiles) {_		this.additionalProfiles = new LinkedHashSet<>(Arrays.asList(profiles))__	};set,additional,profile,values,to,use,on,top,of,those,set,in,system,or,command,line,properties,param,profiles,the,additional,profiles,to,set;public,void,set,additional,profiles,string,profiles,this,additional,profiles,new,linked,hash,set,arrays,as,list,profiles
SpringApplication -> public void setAdditionalProfiles(String... profiles);1515670013;Set additional profile values to use (on top of those set in system or command line_properties)._@param profiles the additional profiles to set;public void setAdditionalProfiles(String... profiles) {_		this.additionalProfiles = new LinkedHashSet<>(Arrays.asList(profiles))__	};set,additional,profile,values,to,use,on,top,of,those,set,in,system,or,command,line,properties,param,profiles,the,additional,profiles,to,set;public,void,set,additional,profiles,string,profiles,this,additional,profiles,new,linked,hash,set,arrays,as,list,profiles
SpringApplication -> public void setAdditionalProfiles(String... profiles);1519362690;Set additional profile values to use (on top of those set in system or command line_properties)._@param profiles the additional profiles to set;public void setAdditionalProfiles(String... profiles) {_		this.additionalProfiles = new LinkedHashSet<>(Arrays.asList(profiles))__	};set,additional,profile,values,to,use,on,top,of,those,set,in,system,or,command,line,properties,param,profiles,the,additional,profiles,to,set;public,void,set,additional,profiles,string,profiles,this,additional,profiles,new,linked,hash,set,arrays,as,list,profiles
SpringApplication -> public void setAdditionalProfiles(String... profiles);1522251721;Set additional profile values to use (on top of those set in system or command line_properties)._@param profiles the additional profiles to set;public void setAdditionalProfiles(String... profiles) {_		this.additionalProfiles = new LinkedHashSet<>(Arrays.asList(profiles))__	};set,additional,profile,values,to,use,on,top,of,those,set,in,system,or,command,line,properties,param,profiles,the,additional,profiles,to,set;public,void,set,additional,profiles,string,profiles,this,additional,profiles,new,linked,hash,set,arrays,as,list,profiles
SpringApplication -> public void setAdditionalProfiles(String... profiles);1525376698;Set additional profile values to use (on top of those set in system or command line_properties)._@param profiles the additional profiles to set;public void setAdditionalProfiles(String... profiles) {_		this.additionalProfiles = new LinkedHashSet<>(Arrays.asList(profiles))__	};set,additional,profile,values,to,use,on,top,of,those,set,in,system,or,command,line,properties,param,profiles,the,additional,profiles,to,set;public,void,set,additional,profiles,string,profiles,this,additional,profiles,new,linked,hash,set,arrays,as,list,profiles
SpringApplication -> public void setAdditionalProfiles(String... profiles);1525416882;Set additional profile values to use (on top of those set in system or command line_properties)._@param profiles the additional profiles to set;public void setAdditionalProfiles(String... profiles) {_		this.additionalProfiles = new LinkedHashSet<>(Arrays.asList(profiles))__	};set,additional,profile,values,to,use,on,top,of,those,set,in,system,or,command,line,properties,param,profiles,the,additional,profiles,to,set;public,void,set,additional,profiles,string,profiles,this,additional,profiles,new,linked,hash,set,arrays,as,list,profiles
SpringApplication -> public void setAdditionalProfiles(String... profiles);1526993305;Set additional profile values to use (on top of those set in system or command line_properties)._@param profiles the additional profiles to set;public void setAdditionalProfiles(String... profiles) {_		this.additionalProfiles = new LinkedHashSet<>(Arrays.asList(profiles))__	};set,additional,profile,values,to,use,on,top,of,those,set,in,system,or,command,line,properties,param,profiles,the,additional,profiles,to,set;public,void,set,additional,profiles,string,profiles,this,additional,profiles,new,linked,hash,set,arrays,as,list,profiles
SpringApplication -> public void setAdditionalProfiles(String... profiles);1529485904;Set additional profile values to use (on top of those set in system or command line_properties)._@param profiles the additional profiles to set;public void setAdditionalProfiles(String... profiles) {_		this.additionalProfiles = new LinkedHashSet<>(Arrays.asList(profiles))__	};set,additional,profile,values,to,use,on,top,of,those,set,in,system,or,command,line,properties,param,profiles,the,additional,profiles,to,set;public,void,set,additional,profiles,string,profiles,this,additional,profiles,new,linked,hash,set,arrays,as,list,profiles
SpringApplication -> public void setAdditionalProfiles(String... profiles);1531140616;Set additional profile values to use (on top of those set in system or command line_properties)._@param profiles the additional profiles to set;public void setAdditionalProfiles(String... profiles) {_		this.additionalProfiles = new LinkedHashSet<>(Arrays.asList(profiles))__	};set,additional,profile,values,to,use,on,top,of,those,set,in,system,or,command,line,properties,param,profiles,the,additional,profiles,to,set;public,void,set,additional,profiles,string,profiles,this,additional,profiles,new,linked,hash,set,arrays,as,list,profiles
SpringApplication -> public void setAdditionalProfiles(String... profiles);1531155529;Set additional profile values to use (on top of those set in system or command line_properties)._@param profiles the additional profiles to set;public void setAdditionalProfiles(String... profiles) {_		this.additionalProfiles = new LinkedHashSet<>(Arrays.asList(profiles))__	};set,additional,profile,values,to,use,on,top,of,those,set,in,system,or,command,line,properties,param,profiles,the,additional,profiles,to,set;public,void,set,additional,profiles,string,profiles,this,additional,profiles,new,linked,hash,set,arrays,as,list,profiles
SpringApplication -> public void setAdditionalProfiles(String... profiles);1531222098;Set additional profile values to use (on top of those set in system or command line_properties)._@param profiles the additional profiles to set;public void setAdditionalProfiles(String... profiles) {_		this.additionalProfiles = new LinkedHashSet<>(Arrays.asList(profiles))__	};set,additional,profile,values,to,use,on,top,of,those,set,in,system,or,command,line,properties,param,profiles,the,additional,profiles,to,set;public,void,set,additional,profiles,string,profiles,this,additional,profiles,new,linked,hash,set,arrays,as,list,profiles
SpringApplication -> public void setAdditionalProfiles(String... profiles);1532738143;Set additional profile values to use (on top of those set in system or command line_properties)._@param profiles the additional profiles to set;public void setAdditionalProfiles(String... profiles) {_		this.additionalProfiles = new LinkedHashSet<>(Arrays.asList(profiles))__	};set,additional,profile,values,to,use,on,top,of,those,set,in,system,or,command,line,properties,param,profiles,the,additional,profiles,to,set;public,void,set,additional,profiles,string,profiles,this,additional,profiles,new,linked,hash,set,arrays,as,list,profiles
SpringApplication -> public void setAdditionalProfiles(String... profiles);1534188228;Set additional profile values to use (on top of those set in system or command line_properties)._@param profiles the additional profiles to set;public void setAdditionalProfiles(String... profiles) {_		this.additionalProfiles = new LinkedHashSet<>(Arrays.asList(profiles))__	};set,additional,profile,values,to,use,on,top,of,those,set,in,system,or,command,line,properties,param,profiles,the,additional,profiles,to,set;public,void,set,additional,profiles,string,profiles,this,additional,profiles,new,linked,hash,set,arrays,as,list,profiles
SpringApplication -> public void setAdditionalProfiles(String... profiles);1535104170;Set additional profile values to use (on top of those set in system or command line_properties)._@param profiles the additional profiles to set;public void setAdditionalProfiles(String... profiles) {_		this.additionalProfiles = new LinkedHashSet<>(Arrays.asList(profiles))__	};set,additional,profile,values,to,use,on,top,of,those,set,in,system,or,command,line,properties,param,profiles,the,additional,profiles,to,set;public,void,set,additional,profiles,string,profiles,this,additional,profiles,new,linked,hash,set,arrays,as,list,profiles
SpringApplication -> public void setAdditionalProfiles(String... profiles);1536701067;Set additional profile values to use (on top of those set in system or command line_properties)._@param profiles the additional profiles to set;public void setAdditionalProfiles(String... profiles) {_		this.additionalProfiles = new LinkedHashSet<>(Arrays.asList(profiles))__	};set,additional,profile,values,to,use,on,top,of,those,set,in,system,or,command,line,properties,param,profiles,the,additional,profiles,to,set;public,void,set,additional,profiles,string,profiles,this,additional,profiles,new,linked,hash,set,arrays,as,list,profiles
SpringApplication -> public void setAdditionalProfiles(String... profiles);1538570355;Set additional profile values to use (on top of those set in system or command line_properties)._@param profiles the additional profiles to set;public void setAdditionalProfiles(String... profiles) {_		this.additionalProfiles = new LinkedHashSet<>(Arrays.asList(profiles))__	};set,additional,profile,values,to,use,on,top,of,those,set,in,system,or,command,line,properties,param,profiles,the,additional,profiles,to,set;public,void,set,additional,profiles,string,profiles,this,additional,profiles,new,linked,hash,set,arrays,as,list,profiles
SpringApplication -> public void setAdditionalProfiles(String... profiles);1538707540;Set additional profile values to use (on top of those set in system or command line_properties)._@param profiles the additional profiles to set;public void setAdditionalProfiles(String... profiles) {_		this.additionalProfiles = new LinkedHashSet<>(Arrays.asList(profiles))__	};set,additional,profile,values,to,use,on,top,of,those,set,in,system,or,command,line,properties,param,profiles,the,additional,profiles,to,set;public,void,set,additional,profiles,string,profiles,this,additional,profiles,new,linked,hash,set,arrays,as,list,profiles
SpringApplication -> public void setAdditionalProfiles(String... profiles);1538750610;Set additional profile values to use (on top of those set in system or command line_properties)._@param profiles the additional profiles to set;public void setAdditionalProfiles(String... profiles) {_		this.additionalProfiles = new LinkedHashSet<>(Arrays.asList(profiles))__	};set,additional,profile,values,to,use,on,top,of,those,set,in,system,or,command,line,properties,param,profiles,the,additional,profiles,to,set;public,void,set,additional,profiles,string,profiles,this,additional,profiles,new,linked,hash,set,arrays,as,list,profiles
SpringApplication -> public void setAdditionalProfiles(String... profiles);1538771652;Set additional profile values to use (on top of those set in system or command line_properties)._@param profiles the additional profiles to set;public void setAdditionalProfiles(String... profiles) {_		this.additionalProfiles = new LinkedHashSet<>(Arrays.asList(profiles))__	};set,additional,profile,values,to,use,on,top,of,those,set,in,system,or,command,line,properties,param,profiles,the,additional,profiles,to,set;public,void,set,additional,profiles,string,profiles,this,additional,profiles,new,linked,hash,set,arrays,as,list,profiles
SpringApplication -> public void setAdditionalProfiles(String... profiles);1540419762;Set additional profile values to use (on top of those set in system or command line_properties)._@param profiles the additional profiles to set;public void setAdditionalProfiles(String... profiles) {_		this.additionalProfiles = new LinkedHashSet<>(Arrays.asList(profiles))__	};set,additional,profile,values,to,use,on,top,of,those,set,in,system,or,command,line,properties,param,profiles,the,additional,profiles,to,set;public,void,set,additional,profiles,string,profiles,this,additional,profiles,new,linked,hash,set,arrays,as,list,profiles
SpringApplication -> public void setAdditionalProfiles(String... profiles);1541060131;Set additional profile values to use (on top of those set in system or command line_properties)._@param profiles the additional profiles to set;public void setAdditionalProfiles(String... profiles) {_		this.additionalProfiles = new LinkedHashSet<>(Arrays.asList(profiles))__	};set,additional,profile,values,to,use,on,top,of,those,set,in,system,or,command,line,properties,param,profiles,the,additional,profiles,to,set;public,void,set,additional,profiles,string,profiles,this,additional,profiles,new,linked,hash,set,arrays,as,list,profiles
SpringApplication -> public void setAdditionalProfiles(String... profiles);1546943477;Set additional profile values to use (on top of those set in system or command line_properties)._@param profiles the additional profiles to set;public void setAdditionalProfiles(String... profiles) {_		this.additionalProfiles = new LinkedHashSet<>(Arrays.asList(profiles))__	};set,additional,profile,values,to,use,on,top,of,those,set,in,system,or,command,line,properties,param,profiles,the,additional,profiles,to,set;public,void,set,additional,profiles,string,profiles,this,additional,profiles,new,linked,hash,set,arrays,as,list,profiles
SpringApplication -> public void setAdditionalProfiles(String... profiles);1549791353;Set additional profile values to use (on top of those set in system or command line_properties)._@param profiles the additional profiles to set;public void setAdditionalProfiles(String... profiles) {_		this.additionalProfiles = new LinkedHashSet<>(Arrays.asList(profiles))__	};set,additional,profile,values,to,use,on,top,of,those,set,in,system,or,command,line,properties,param,profiles,the,additional,profiles,to,set;public,void,set,additional,profiles,string,profiles,this,additional,profiles,new,linked,hash,set,arrays,as,list,profiles
SpringApplication -> public void setAdditionalProfiles(String... profiles);1550148109;Set additional profile values to use (on top of those set in system or command line_properties)._@param profiles the additional profiles to set;public void setAdditionalProfiles(String... profiles) {_		this.additionalProfiles = new LinkedHashSet<>(Arrays.asList(profiles))__	};set,additional,profile,values,to,use,on,top,of,those,set,in,system,or,command,line,properties,param,profiles,the,additional,profiles,to,set;public,void,set,additional,profiles,string,profiles,this,additional,profiles,new,linked,hash,set,arrays,as,list,profiles
SpringApplication -> public void setResourceLoader(ResourceLoader resourceLoader);1507173536;Sets the {@link ResourceLoader} that should be used when loading resources._@param resourceLoader the resource loader;public void setResourceLoader(ResourceLoader resourceLoader) {_		Assert.notNull(resourceLoader, "ResourceLoader must not be null")__		this.resourceLoader = resourceLoader__	};sets,the,link,resource,loader,that,should,be,used,when,loading,resources,param,resource,loader,the,resource,loader;public,void,set,resource,loader,resource,loader,resource,loader,assert,not,null,resource,loader,resource,loader,must,not,be,null,this,resource,loader,resource,loader
SpringApplication -> public void setResourceLoader(ResourceLoader resourceLoader);1509381678;Sets the {@link ResourceLoader} that should be used when loading resources._@param resourceLoader the resource loader;public void setResourceLoader(ResourceLoader resourceLoader) {_		Assert.notNull(resourceLoader, "ResourceLoader must not be null")__		this.resourceLoader = resourceLoader__	};sets,the,link,resource,loader,that,should,be,used,when,loading,resources,param,resource,loader,the,resource,loader;public,void,set,resource,loader,resource,loader,resource,loader,assert,not,null,resource,loader,resource,loader,must,not,be,null,this,resource,loader,resource,loader
SpringApplication -> public void setResourceLoader(ResourceLoader resourceLoader);1510995225;Sets the {@link ResourceLoader} that should be used when loading resources._@param resourceLoader the resource loader;public void setResourceLoader(ResourceLoader resourceLoader) {_		Assert.notNull(resourceLoader, "ResourceLoader must not be null")__		this.resourceLoader = resourceLoader__	};sets,the,link,resource,loader,that,should,be,used,when,loading,resources,param,resource,loader,the,resource,loader;public,void,set,resource,loader,resource,loader,resource,loader,assert,not,null,resource,loader,resource,loader,must,not,be,null,this,resource,loader,resource,loader
SpringApplication -> public void setResourceLoader(ResourceLoader resourceLoader);1515670013;Sets the {@link ResourceLoader} that should be used when loading resources._@param resourceLoader the resource loader;public void setResourceLoader(ResourceLoader resourceLoader) {_		Assert.notNull(resourceLoader, "ResourceLoader must not be null")__		this.resourceLoader = resourceLoader__	};sets,the,link,resource,loader,that,should,be,used,when,loading,resources,param,resource,loader,the,resource,loader;public,void,set,resource,loader,resource,loader,resource,loader,assert,not,null,resource,loader,resource,loader,must,not,be,null,this,resource,loader,resource,loader
SpringApplication -> public void setResourceLoader(ResourceLoader resourceLoader);1519362690;Sets the {@link ResourceLoader} that should be used when loading resources._@param resourceLoader the resource loader;public void setResourceLoader(ResourceLoader resourceLoader) {_		Assert.notNull(resourceLoader, "ResourceLoader must not be null")__		this.resourceLoader = resourceLoader__	};sets,the,link,resource,loader,that,should,be,used,when,loading,resources,param,resource,loader,the,resource,loader;public,void,set,resource,loader,resource,loader,resource,loader,assert,not,null,resource,loader,resource,loader,must,not,be,null,this,resource,loader,resource,loader
SpringApplication -> public void setResourceLoader(ResourceLoader resourceLoader);1522251721;Sets the {@link ResourceLoader} that should be used when loading resources._@param resourceLoader the resource loader;public void setResourceLoader(ResourceLoader resourceLoader) {_		Assert.notNull(resourceLoader, "ResourceLoader must not be null")__		this.resourceLoader = resourceLoader__	};sets,the,link,resource,loader,that,should,be,used,when,loading,resources,param,resource,loader,the,resource,loader;public,void,set,resource,loader,resource,loader,resource,loader,assert,not,null,resource,loader,resource,loader,must,not,be,null,this,resource,loader,resource,loader
SpringApplication -> public void setResourceLoader(ResourceLoader resourceLoader);1525376698;Sets the {@link ResourceLoader} that should be used when loading resources._@param resourceLoader the resource loader;public void setResourceLoader(ResourceLoader resourceLoader) {_		Assert.notNull(resourceLoader, "ResourceLoader must not be null")__		this.resourceLoader = resourceLoader__	};sets,the,link,resource,loader,that,should,be,used,when,loading,resources,param,resource,loader,the,resource,loader;public,void,set,resource,loader,resource,loader,resource,loader,assert,not,null,resource,loader,resource,loader,must,not,be,null,this,resource,loader,resource,loader
SpringApplication -> public void setResourceLoader(ResourceLoader resourceLoader);1525416882;Sets the {@link ResourceLoader} that should be used when loading resources._@param resourceLoader the resource loader;public void setResourceLoader(ResourceLoader resourceLoader) {_		Assert.notNull(resourceLoader, "ResourceLoader must not be null")__		this.resourceLoader = resourceLoader__	};sets,the,link,resource,loader,that,should,be,used,when,loading,resources,param,resource,loader,the,resource,loader;public,void,set,resource,loader,resource,loader,resource,loader,assert,not,null,resource,loader,resource,loader,must,not,be,null,this,resource,loader,resource,loader
SpringApplication -> public void setResourceLoader(ResourceLoader resourceLoader);1526993305;Sets the {@link ResourceLoader} that should be used when loading resources._@param resourceLoader the resource loader;public void setResourceLoader(ResourceLoader resourceLoader) {_		Assert.notNull(resourceLoader, "ResourceLoader must not be null")__		this.resourceLoader = resourceLoader__	};sets,the,link,resource,loader,that,should,be,used,when,loading,resources,param,resource,loader,the,resource,loader;public,void,set,resource,loader,resource,loader,resource,loader,assert,not,null,resource,loader,resource,loader,must,not,be,null,this,resource,loader,resource,loader
SpringApplication -> public void setResourceLoader(ResourceLoader resourceLoader);1529485904;Sets the {@link ResourceLoader} that should be used when loading resources._@param resourceLoader the resource loader;public void setResourceLoader(ResourceLoader resourceLoader) {_		Assert.notNull(resourceLoader, "ResourceLoader must not be null")__		this.resourceLoader = resourceLoader__	};sets,the,link,resource,loader,that,should,be,used,when,loading,resources,param,resource,loader,the,resource,loader;public,void,set,resource,loader,resource,loader,resource,loader,assert,not,null,resource,loader,resource,loader,must,not,be,null,this,resource,loader,resource,loader
SpringApplication -> public void setResourceLoader(ResourceLoader resourceLoader);1531140616;Sets the {@link ResourceLoader} that should be used when loading resources._@param resourceLoader the resource loader;public void setResourceLoader(ResourceLoader resourceLoader) {_		Assert.notNull(resourceLoader, "ResourceLoader must not be null")__		this.resourceLoader = resourceLoader__	};sets,the,link,resource,loader,that,should,be,used,when,loading,resources,param,resource,loader,the,resource,loader;public,void,set,resource,loader,resource,loader,resource,loader,assert,not,null,resource,loader,resource,loader,must,not,be,null,this,resource,loader,resource,loader
SpringApplication -> public void setResourceLoader(ResourceLoader resourceLoader);1531155529;Sets the {@link ResourceLoader} that should be used when loading resources._@param resourceLoader the resource loader;public void setResourceLoader(ResourceLoader resourceLoader) {_		Assert.notNull(resourceLoader, "ResourceLoader must not be null")__		this.resourceLoader = resourceLoader__	};sets,the,link,resource,loader,that,should,be,used,when,loading,resources,param,resource,loader,the,resource,loader;public,void,set,resource,loader,resource,loader,resource,loader,assert,not,null,resource,loader,resource,loader,must,not,be,null,this,resource,loader,resource,loader
SpringApplication -> public void setResourceLoader(ResourceLoader resourceLoader);1531222098;Sets the {@link ResourceLoader} that should be used when loading resources._@param resourceLoader the resource loader;public void setResourceLoader(ResourceLoader resourceLoader) {_		Assert.notNull(resourceLoader, "ResourceLoader must not be null")__		this.resourceLoader = resourceLoader__	};sets,the,link,resource,loader,that,should,be,used,when,loading,resources,param,resource,loader,the,resource,loader;public,void,set,resource,loader,resource,loader,resource,loader,assert,not,null,resource,loader,resource,loader,must,not,be,null,this,resource,loader,resource,loader
SpringApplication -> public void setResourceLoader(ResourceLoader resourceLoader);1532738143;Sets the {@link ResourceLoader} that should be used when loading resources._@param resourceLoader the resource loader;public void setResourceLoader(ResourceLoader resourceLoader) {_		Assert.notNull(resourceLoader, "ResourceLoader must not be null")__		this.resourceLoader = resourceLoader__	};sets,the,link,resource,loader,that,should,be,used,when,loading,resources,param,resource,loader,the,resource,loader;public,void,set,resource,loader,resource,loader,resource,loader,assert,not,null,resource,loader,resource,loader,must,not,be,null,this,resource,loader,resource,loader
SpringApplication -> public void setResourceLoader(ResourceLoader resourceLoader);1534188228;Sets the {@link ResourceLoader} that should be used when loading resources._@param resourceLoader the resource loader;public void setResourceLoader(ResourceLoader resourceLoader) {_		Assert.notNull(resourceLoader, "ResourceLoader must not be null")__		this.resourceLoader = resourceLoader__	};sets,the,link,resource,loader,that,should,be,used,when,loading,resources,param,resource,loader,the,resource,loader;public,void,set,resource,loader,resource,loader,resource,loader,assert,not,null,resource,loader,resource,loader,must,not,be,null,this,resource,loader,resource,loader
SpringApplication -> public void setResourceLoader(ResourceLoader resourceLoader);1535104170;Sets the {@link ResourceLoader} that should be used when loading resources._@param resourceLoader the resource loader;public void setResourceLoader(ResourceLoader resourceLoader) {_		Assert.notNull(resourceLoader, "ResourceLoader must not be null")__		this.resourceLoader = resourceLoader__	};sets,the,link,resource,loader,that,should,be,used,when,loading,resources,param,resource,loader,the,resource,loader;public,void,set,resource,loader,resource,loader,resource,loader,assert,not,null,resource,loader,resource,loader,must,not,be,null,this,resource,loader,resource,loader
SpringApplication -> public void setResourceLoader(ResourceLoader resourceLoader);1536701067;Sets the {@link ResourceLoader} that should be used when loading resources._@param resourceLoader the resource loader;public void setResourceLoader(ResourceLoader resourceLoader) {_		Assert.notNull(resourceLoader, "ResourceLoader must not be null")__		this.resourceLoader = resourceLoader__	};sets,the,link,resource,loader,that,should,be,used,when,loading,resources,param,resource,loader,the,resource,loader;public,void,set,resource,loader,resource,loader,resource,loader,assert,not,null,resource,loader,resource,loader,must,not,be,null,this,resource,loader,resource,loader
SpringApplication -> public void setResourceLoader(ResourceLoader resourceLoader);1538570355;Sets the {@link ResourceLoader} that should be used when loading resources._@param resourceLoader the resource loader;public void setResourceLoader(ResourceLoader resourceLoader) {_		Assert.notNull(resourceLoader, "ResourceLoader must not be null")__		this.resourceLoader = resourceLoader__	};sets,the,link,resource,loader,that,should,be,used,when,loading,resources,param,resource,loader,the,resource,loader;public,void,set,resource,loader,resource,loader,resource,loader,assert,not,null,resource,loader,resource,loader,must,not,be,null,this,resource,loader,resource,loader
SpringApplication -> public void setResourceLoader(ResourceLoader resourceLoader);1538707540;Sets the {@link ResourceLoader} that should be used when loading resources._@param resourceLoader the resource loader;public void setResourceLoader(ResourceLoader resourceLoader) {_		Assert.notNull(resourceLoader, "ResourceLoader must not be null")__		this.resourceLoader = resourceLoader__	};sets,the,link,resource,loader,that,should,be,used,when,loading,resources,param,resource,loader,the,resource,loader;public,void,set,resource,loader,resource,loader,resource,loader,assert,not,null,resource,loader,resource,loader,must,not,be,null,this,resource,loader,resource,loader
SpringApplication -> public void setResourceLoader(ResourceLoader resourceLoader);1538750610;Sets the {@link ResourceLoader} that should be used when loading resources._@param resourceLoader the resource loader;public void setResourceLoader(ResourceLoader resourceLoader) {_		Assert.notNull(resourceLoader, "ResourceLoader must not be null")__		this.resourceLoader = resourceLoader__	};sets,the,link,resource,loader,that,should,be,used,when,loading,resources,param,resource,loader,the,resource,loader;public,void,set,resource,loader,resource,loader,resource,loader,assert,not,null,resource,loader,resource,loader,must,not,be,null,this,resource,loader,resource,loader
SpringApplication -> public void setResourceLoader(ResourceLoader resourceLoader);1538771652;Sets the {@link ResourceLoader} that should be used when loading resources._@param resourceLoader the resource loader;public void setResourceLoader(ResourceLoader resourceLoader) {_		Assert.notNull(resourceLoader, "ResourceLoader must not be null")__		this.resourceLoader = resourceLoader__	};sets,the,link,resource,loader,that,should,be,used,when,loading,resources,param,resource,loader,the,resource,loader;public,void,set,resource,loader,resource,loader,resource,loader,assert,not,null,resource,loader,resource,loader,must,not,be,null,this,resource,loader,resource,loader
SpringApplication -> public void setResourceLoader(ResourceLoader resourceLoader);1540419762;Sets the {@link ResourceLoader} that should be used when loading resources._@param resourceLoader the resource loader;public void setResourceLoader(ResourceLoader resourceLoader) {_		Assert.notNull(resourceLoader, "ResourceLoader must not be null")__		this.resourceLoader = resourceLoader__	};sets,the,link,resource,loader,that,should,be,used,when,loading,resources,param,resource,loader,the,resource,loader;public,void,set,resource,loader,resource,loader,resource,loader,assert,not,null,resource,loader,resource,loader,must,not,be,null,this,resource,loader,resource,loader
SpringApplication -> public void setResourceLoader(ResourceLoader resourceLoader);1541060131;Sets the {@link ResourceLoader} that should be used when loading resources._@param resourceLoader the resource loader;public void setResourceLoader(ResourceLoader resourceLoader) {_		Assert.notNull(resourceLoader, "ResourceLoader must not be null")__		this.resourceLoader = resourceLoader__	};sets,the,link,resource,loader,that,should,be,used,when,loading,resources,param,resource,loader,the,resource,loader;public,void,set,resource,loader,resource,loader,resource,loader,assert,not,null,resource,loader,resource,loader,must,not,be,null,this,resource,loader,resource,loader
SpringApplication -> public void setResourceLoader(ResourceLoader resourceLoader);1546943477;Sets the {@link ResourceLoader} that should be used when loading resources._@param resourceLoader the resource loader;public void setResourceLoader(ResourceLoader resourceLoader) {_		Assert.notNull(resourceLoader, "ResourceLoader must not be null")__		this.resourceLoader = resourceLoader__	};sets,the,link,resource,loader,that,should,be,used,when,loading,resources,param,resource,loader,the,resource,loader;public,void,set,resource,loader,resource,loader,resource,loader,assert,not,null,resource,loader,resource,loader,must,not,be,null,this,resource,loader,resource,loader
SpringApplication -> public void setResourceLoader(ResourceLoader resourceLoader);1549791353;Sets the {@link ResourceLoader} that should be used when loading resources._@param resourceLoader the resource loader;public void setResourceLoader(ResourceLoader resourceLoader) {_		Assert.notNull(resourceLoader, "ResourceLoader must not be null")__		this.resourceLoader = resourceLoader__	};sets,the,link,resource,loader,that,should,be,used,when,loading,resources,param,resource,loader,the,resource,loader;public,void,set,resource,loader,resource,loader,resource,loader,assert,not,null,resource,loader,resource,loader,must,not,be,null,this,resource,loader,resource,loader
SpringApplication -> public void setResourceLoader(ResourceLoader resourceLoader);1550148109;Sets the {@link ResourceLoader} that should be used when loading resources._@param resourceLoader the resource loader;public void setResourceLoader(ResourceLoader resourceLoader) {_		Assert.notNull(resourceLoader, "ResourceLoader must not be null")__		this.resourceLoader = resourceLoader__	};sets,the,link,resource,loader,that,should,be,used,when,loading,resources,param,resource,loader,the,resource,loader;public,void,set,resource,loader,resource,loader,resource,loader,assert,not,null,resource,loader,resource,loader,must,not,be,null,this,resource,loader,resource,loader
SpringApplication -> protected BeanDefinitionLoader createBeanDefinitionLoader( 			BeanDefinitionRegistry registry, Object[] sources);1507173536;Factory method used to create the {@link BeanDefinitionLoader}._@param registry the bean definition registry_@param sources the sources to load_@return the {@link BeanDefinitionLoader} that will be used to load beans;protected BeanDefinitionLoader createBeanDefinitionLoader(_			BeanDefinitionRegistry registry, Object[] sources) {_		return new BeanDefinitionLoader(registry, sources)__	};factory,method,used,to,create,the,link,bean,definition,loader,param,registry,the,bean,definition,registry,param,sources,the,sources,to,load,return,the,link,bean,definition,loader,that,will,be,used,to,load,beans;protected,bean,definition,loader,create,bean,definition,loader,bean,definition,registry,registry,object,sources,return,new,bean,definition,loader,registry,sources
SpringApplication -> protected BeanDefinitionLoader createBeanDefinitionLoader( 			BeanDefinitionRegistry registry, Object[] sources);1509381678;Factory method used to create the {@link BeanDefinitionLoader}._@param registry the bean definition registry_@param sources the sources to load_@return the {@link BeanDefinitionLoader} that will be used to load beans;protected BeanDefinitionLoader createBeanDefinitionLoader(_			BeanDefinitionRegistry registry, Object[] sources) {_		return new BeanDefinitionLoader(registry, sources)__	};factory,method,used,to,create,the,link,bean,definition,loader,param,registry,the,bean,definition,registry,param,sources,the,sources,to,load,return,the,link,bean,definition,loader,that,will,be,used,to,load,beans;protected,bean,definition,loader,create,bean,definition,loader,bean,definition,registry,registry,object,sources,return,new,bean,definition,loader,registry,sources
SpringApplication -> protected BeanDefinitionLoader createBeanDefinitionLoader( 			BeanDefinitionRegistry registry, Object[] sources);1510995225;Factory method used to create the {@link BeanDefinitionLoader}._@param registry the bean definition registry_@param sources the sources to load_@return the {@link BeanDefinitionLoader} that will be used to load beans;protected BeanDefinitionLoader createBeanDefinitionLoader(_			BeanDefinitionRegistry registry, Object[] sources) {_		return new BeanDefinitionLoader(registry, sources)__	};factory,method,used,to,create,the,link,bean,definition,loader,param,registry,the,bean,definition,registry,param,sources,the,sources,to,load,return,the,link,bean,definition,loader,that,will,be,used,to,load,beans;protected,bean,definition,loader,create,bean,definition,loader,bean,definition,registry,registry,object,sources,return,new,bean,definition,loader,registry,sources
SpringApplication -> protected BeanDefinitionLoader createBeanDefinitionLoader( 			BeanDefinitionRegistry registry, Object[] sources);1515670013;Factory method used to create the {@link BeanDefinitionLoader}._@param registry the bean definition registry_@param sources the sources to load_@return the {@link BeanDefinitionLoader} that will be used to load beans;protected BeanDefinitionLoader createBeanDefinitionLoader(_			BeanDefinitionRegistry registry, Object[] sources) {_		return new BeanDefinitionLoader(registry, sources)__	};factory,method,used,to,create,the,link,bean,definition,loader,param,registry,the,bean,definition,registry,param,sources,the,sources,to,load,return,the,link,bean,definition,loader,that,will,be,used,to,load,beans;protected,bean,definition,loader,create,bean,definition,loader,bean,definition,registry,registry,object,sources,return,new,bean,definition,loader,registry,sources
SpringApplication -> protected BeanDefinitionLoader createBeanDefinitionLoader( 			BeanDefinitionRegistry registry, Object[] sources);1519362690;Factory method used to create the {@link BeanDefinitionLoader}._@param registry the bean definition registry_@param sources the sources to load_@return the {@link BeanDefinitionLoader} that will be used to load beans;protected BeanDefinitionLoader createBeanDefinitionLoader(_			BeanDefinitionRegistry registry, Object[] sources) {_		return new BeanDefinitionLoader(registry, sources)__	};factory,method,used,to,create,the,link,bean,definition,loader,param,registry,the,bean,definition,registry,param,sources,the,sources,to,load,return,the,link,bean,definition,loader,that,will,be,used,to,load,beans;protected,bean,definition,loader,create,bean,definition,loader,bean,definition,registry,registry,object,sources,return,new,bean,definition,loader,registry,sources
SpringApplication -> protected BeanDefinitionLoader createBeanDefinitionLoader( 			BeanDefinitionRegistry registry, Object[] sources);1522251721;Factory method used to create the {@link BeanDefinitionLoader}._@param registry the bean definition registry_@param sources the sources to load_@return the {@link BeanDefinitionLoader} that will be used to load beans;protected BeanDefinitionLoader createBeanDefinitionLoader(_			BeanDefinitionRegistry registry, Object[] sources) {_		return new BeanDefinitionLoader(registry, sources)__	};factory,method,used,to,create,the,link,bean,definition,loader,param,registry,the,bean,definition,registry,param,sources,the,sources,to,load,return,the,link,bean,definition,loader,that,will,be,used,to,load,beans;protected,bean,definition,loader,create,bean,definition,loader,bean,definition,registry,registry,object,sources,return,new,bean,definition,loader,registry,sources
SpringApplication -> protected BeanDefinitionLoader createBeanDefinitionLoader( 			BeanDefinitionRegistry registry, Object[] sources);1525376698;Factory method used to create the {@link BeanDefinitionLoader}._@param registry the bean definition registry_@param sources the sources to load_@return the {@link BeanDefinitionLoader} that will be used to load beans;protected BeanDefinitionLoader createBeanDefinitionLoader(_			BeanDefinitionRegistry registry, Object[] sources) {_		return new BeanDefinitionLoader(registry, sources)__	};factory,method,used,to,create,the,link,bean,definition,loader,param,registry,the,bean,definition,registry,param,sources,the,sources,to,load,return,the,link,bean,definition,loader,that,will,be,used,to,load,beans;protected,bean,definition,loader,create,bean,definition,loader,bean,definition,registry,registry,object,sources,return,new,bean,definition,loader,registry,sources
SpringApplication -> protected BeanDefinitionLoader createBeanDefinitionLoader( 			BeanDefinitionRegistry registry, Object[] sources);1525416882;Factory method used to create the {@link BeanDefinitionLoader}._@param registry the bean definition registry_@param sources the sources to load_@return the {@link BeanDefinitionLoader} that will be used to load beans;protected BeanDefinitionLoader createBeanDefinitionLoader(_			BeanDefinitionRegistry registry, Object[] sources) {_		return new BeanDefinitionLoader(registry, sources)__	};factory,method,used,to,create,the,link,bean,definition,loader,param,registry,the,bean,definition,registry,param,sources,the,sources,to,load,return,the,link,bean,definition,loader,that,will,be,used,to,load,beans;protected,bean,definition,loader,create,bean,definition,loader,bean,definition,registry,registry,object,sources,return,new,bean,definition,loader,registry,sources
SpringApplication -> protected BeanDefinitionLoader createBeanDefinitionLoader( 			BeanDefinitionRegistry registry, Object[] sources);1526993305;Factory method used to create the {@link BeanDefinitionLoader}._@param registry the bean definition registry_@param sources the sources to load_@return the {@link BeanDefinitionLoader} that will be used to load beans;protected BeanDefinitionLoader createBeanDefinitionLoader(_			BeanDefinitionRegistry registry, Object[] sources) {_		return new BeanDefinitionLoader(registry, sources)__	};factory,method,used,to,create,the,link,bean,definition,loader,param,registry,the,bean,definition,registry,param,sources,the,sources,to,load,return,the,link,bean,definition,loader,that,will,be,used,to,load,beans;protected,bean,definition,loader,create,bean,definition,loader,bean,definition,registry,registry,object,sources,return,new,bean,definition,loader,registry,sources
SpringApplication -> protected BeanDefinitionLoader createBeanDefinitionLoader( 			BeanDefinitionRegistry registry, Object[] sources);1529485904;Factory method used to create the {@link BeanDefinitionLoader}._@param registry the bean definition registry_@param sources the sources to load_@return the {@link BeanDefinitionLoader} that will be used to load beans;protected BeanDefinitionLoader createBeanDefinitionLoader(_			BeanDefinitionRegistry registry, Object[] sources) {_		return new BeanDefinitionLoader(registry, sources)__	};factory,method,used,to,create,the,link,bean,definition,loader,param,registry,the,bean,definition,registry,param,sources,the,sources,to,load,return,the,link,bean,definition,loader,that,will,be,used,to,load,beans;protected,bean,definition,loader,create,bean,definition,loader,bean,definition,registry,registry,object,sources,return,new,bean,definition,loader,registry,sources
SpringApplication -> protected BeanDefinitionLoader createBeanDefinitionLoader( 			BeanDefinitionRegistry registry, Object[] sources);1531140616;Factory method used to create the {@link BeanDefinitionLoader}._@param registry the bean definition registry_@param sources the sources to load_@return the {@link BeanDefinitionLoader} that will be used to load beans;protected BeanDefinitionLoader createBeanDefinitionLoader(_			BeanDefinitionRegistry registry, Object[] sources) {_		return new BeanDefinitionLoader(registry, sources)__	};factory,method,used,to,create,the,link,bean,definition,loader,param,registry,the,bean,definition,registry,param,sources,the,sources,to,load,return,the,link,bean,definition,loader,that,will,be,used,to,load,beans;protected,bean,definition,loader,create,bean,definition,loader,bean,definition,registry,registry,object,sources,return,new,bean,definition,loader,registry,sources
SpringApplication -> protected BeanDefinitionLoader createBeanDefinitionLoader( 			BeanDefinitionRegistry registry, Object[] sources);1531155529;Factory method used to create the {@link BeanDefinitionLoader}._@param registry the bean definition registry_@param sources the sources to load_@return the {@link BeanDefinitionLoader} that will be used to load beans;protected BeanDefinitionLoader createBeanDefinitionLoader(_			BeanDefinitionRegistry registry, Object[] sources) {_		return new BeanDefinitionLoader(registry, sources)__	};factory,method,used,to,create,the,link,bean,definition,loader,param,registry,the,bean,definition,registry,param,sources,the,sources,to,load,return,the,link,bean,definition,loader,that,will,be,used,to,load,beans;protected,bean,definition,loader,create,bean,definition,loader,bean,definition,registry,registry,object,sources,return,new,bean,definition,loader,registry,sources
SpringApplication -> protected BeanDefinitionLoader createBeanDefinitionLoader( 			BeanDefinitionRegistry registry, Object[] sources);1531222098;Factory method used to create the {@link BeanDefinitionLoader}._@param registry the bean definition registry_@param sources the sources to load_@return the {@link BeanDefinitionLoader} that will be used to load beans;protected BeanDefinitionLoader createBeanDefinitionLoader(_			BeanDefinitionRegistry registry, Object[] sources) {_		return new BeanDefinitionLoader(registry, sources)__	};factory,method,used,to,create,the,link,bean,definition,loader,param,registry,the,bean,definition,registry,param,sources,the,sources,to,load,return,the,link,bean,definition,loader,that,will,be,used,to,load,beans;protected,bean,definition,loader,create,bean,definition,loader,bean,definition,registry,registry,object,sources,return,new,bean,definition,loader,registry,sources
SpringApplication -> protected BeanDefinitionLoader createBeanDefinitionLoader( 			BeanDefinitionRegistry registry, Object[] sources);1532738143;Factory method used to create the {@link BeanDefinitionLoader}._@param registry the bean definition registry_@param sources the sources to load_@return the {@link BeanDefinitionLoader} that will be used to load beans;protected BeanDefinitionLoader createBeanDefinitionLoader(_			BeanDefinitionRegistry registry, Object[] sources) {_		return new BeanDefinitionLoader(registry, sources)__	};factory,method,used,to,create,the,link,bean,definition,loader,param,registry,the,bean,definition,registry,param,sources,the,sources,to,load,return,the,link,bean,definition,loader,that,will,be,used,to,load,beans;protected,bean,definition,loader,create,bean,definition,loader,bean,definition,registry,registry,object,sources,return,new,bean,definition,loader,registry,sources
SpringApplication -> protected BeanDefinitionLoader createBeanDefinitionLoader( 			BeanDefinitionRegistry registry, Object[] sources);1534188228;Factory method used to create the {@link BeanDefinitionLoader}._@param registry the bean definition registry_@param sources the sources to load_@return the {@link BeanDefinitionLoader} that will be used to load beans;protected BeanDefinitionLoader createBeanDefinitionLoader(_			BeanDefinitionRegistry registry, Object[] sources) {_		return new BeanDefinitionLoader(registry, sources)__	};factory,method,used,to,create,the,link,bean,definition,loader,param,registry,the,bean,definition,registry,param,sources,the,sources,to,load,return,the,link,bean,definition,loader,that,will,be,used,to,load,beans;protected,bean,definition,loader,create,bean,definition,loader,bean,definition,registry,registry,object,sources,return,new,bean,definition,loader,registry,sources
SpringApplication -> protected BeanDefinitionLoader createBeanDefinitionLoader( 			BeanDefinitionRegistry registry, Object[] sources);1535104170;Factory method used to create the {@link BeanDefinitionLoader}._@param registry the bean definition registry_@param sources the sources to load_@return the {@link BeanDefinitionLoader} that will be used to load beans;protected BeanDefinitionLoader createBeanDefinitionLoader(_			BeanDefinitionRegistry registry, Object[] sources) {_		return new BeanDefinitionLoader(registry, sources)__	};factory,method,used,to,create,the,link,bean,definition,loader,param,registry,the,bean,definition,registry,param,sources,the,sources,to,load,return,the,link,bean,definition,loader,that,will,be,used,to,load,beans;protected,bean,definition,loader,create,bean,definition,loader,bean,definition,registry,registry,object,sources,return,new,bean,definition,loader,registry,sources
SpringApplication -> protected BeanDefinitionLoader createBeanDefinitionLoader( 			BeanDefinitionRegistry registry, Object[] sources);1536701067;Factory method used to create the {@link BeanDefinitionLoader}._@param registry the bean definition registry_@param sources the sources to load_@return the {@link BeanDefinitionLoader} that will be used to load beans;protected BeanDefinitionLoader createBeanDefinitionLoader(_			BeanDefinitionRegistry registry, Object[] sources) {_		return new BeanDefinitionLoader(registry, sources)__	};factory,method,used,to,create,the,link,bean,definition,loader,param,registry,the,bean,definition,registry,param,sources,the,sources,to,load,return,the,link,bean,definition,loader,that,will,be,used,to,load,beans;protected,bean,definition,loader,create,bean,definition,loader,bean,definition,registry,registry,object,sources,return,new,bean,definition,loader,registry,sources
SpringApplication -> protected BeanDefinitionLoader createBeanDefinitionLoader( 			BeanDefinitionRegistry registry, Object[] sources);1538570355;Factory method used to create the {@link BeanDefinitionLoader}._@param registry the bean definition registry_@param sources the sources to load_@return the {@link BeanDefinitionLoader} that will be used to load beans;protected BeanDefinitionLoader createBeanDefinitionLoader(_			BeanDefinitionRegistry registry, Object[] sources) {_		return new BeanDefinitionLoader(registry, sources)__	};factory,method,used,to,create,the,link,bean,definition,loader,param,registry,the,bean,definition,registry,param,sources,the,sources,to,load,return,the,link,bean,definition,loader,that,will,be,used,to,load,beans;protected,bean,definition,loader,create,bean,definition,loader,bean,definition,registry,registry,object,sources,return,new,bean,definition,loader,registry,sources
SpringApplication -> protected BeanDefinitionLoader createBeanDefinitionLoader( 			BeanDefinitionRegistry registry, Object[] sources);1538707540;Factory method used to create the {@link BeanDefinitionLoader}._@param registry the bean definition registry_@param sources the sources to load_@return the {@link BeanDefinitionLoader} that will be used to load beans;protected BeanDefinitionLoader createBeanDefinitionLoader(_			BeanDefinitionRegistry registry, Object[] sources) {_		return new BeanDefinitionLoader(registry, sources)__	};factory,method,used,to,create,the,link,bean,definition,loader,param,registry,the,bean,definition,registry,param,sources,the,sources,to,load,return,the,link,bean,definition,loader,that,will,be,used,to,load,beans;protected,bean,definition,loader,create,bean,definition,loader,bean,definition,registry,registry,object,sources,return,new,bean,definition,loader,registry,sources
SpringApplication -> protected BeanDefinitionLoader createBeanDefinitionLoader( 			BeanDefinitionRegistry registry, Object[] sources);1538750610;Factory method used to create the {@link BeanDefinitionLoader}._@param registry the bean definition registry_@param sources the sources to load_@return the {@link BeanDefinitionLoader} that will be used to load beans;protected BeanDefinitionLoader createBeanDefinitionLoader(_			BeanDefinitionRegistry registry, Object[] sources) {_		return new BeanDefinitionLoader(registry, sources)__	};factory,method,used,to,create,the,link,bean,definition,loader,param,registry,the,bean,definition,registry,param,sources,the,sources,to,load,return,the,link,bean,definition,loader,that,will,be,used,to,load,beans;protected,bean,definition,loader,create,bean,definition,loader,bean,definition,registry,registry,object,sources,return,new,bean,definition,loader,registry,sources
SpringApplication -> protected BeanDefinitionLoader createBeanDefinitionLoader( 			BeanDefinitionRegistry registry, Object[] sources);1538771652;Factory method used to create the {@link BeanDefinitionLoader}._@param registry the bean definition registry_@param sources the sources to load_@return the {@link BeanDefinitionLoader} that will be used to load beans;protected BeanDefinitionLoader createBeanDefinitionLoader(_			BeanDefinitionRegistry registry, Object[] sources) {_		return new BeanDefinitionLoader(registry, sources)__	};factory,method,used,to,create,the,link,bean,definition,loader,param,registry,the,bean,definition,registry,param,sources,the,sources,to,load,return,the,link,bean,definition,loader,that,will,be,used,to,load,beans;protected,bean,definition,loader,create,bean,definition,loader,bean,definition,registry,registry,object,sources,return,new,bean,definition,loader,registry,sources
SpringApplication -> protected BeanDefinitionLoader createBeanDefinitionLoader( 			BeanDefinitionRegistry registry, Object[] sources);1540419762;Factory method used to create the {@link BeanDefinitionLoader}._@param registry the bean definition registry_@param sources the sources to load_@return the {@link BeanDefinitionLoader} that will be used to load beans;protected BeanDefinitionLoader createBeanDefinitionLoader(_			BeanDefinitionRegistry registry, Object[] sources) {_		return new BeanDefinitionLoader(registry, sources)__	};factory,method,used,to,create,the,link,bean,definition,loader,param,registry,the,bean,definition,registry,param,sources,the,sources,to,load,return,the,link,bean,definition,loader,that,will,be,used,to,load,beans;protected,bean,definition,loader,create,bean,definition,loader,bean,definition,registry,registry,object,sources,return,new,bean,definition,loader,registry,sources
SpringApplication -> protected BeanDefinitionLoader createBeanDefinitionLoader( 			BeanDefinitionRegistry registry, Object[] sources);1541060131;Factory method used to create the {@link BeanDefinitionLoader}._@param registry the bean definition registry_@param sources the sources to load_@return the {@link BeanDefinitionLoader} that will be used to load beans;protected BeanDefinitionLoader createBeanDefinitionLoader(_			BeanDefinitionRegistry registry, Object[] sources) {_		return new BeanDefinitionLoader(registry, sources)__	};factory,method,used,to,create,the,link,bean,definition,loader,param,registry,the,bean,definition,registry,param,sources,the,sources,to,load,return,the,link,bean,definition,loader,that,will,be,used,to,load,beans;protected,bean,definition,loader,create,bean,definition,loader,bean,definition,registry,registry,object,sources,return,new,bean,definition,loader,registry,sources
SpringApplication -> protected BeanDefinitionLoader createBeanDefinitionLoader( 			BeanDefinitionRegistry registry, Object[] sources);1546943477;Factory method used to create the {@link BeanDefinitionLoader}._@param registry the bean definition registry_@param sources the sources to load_@return the {@link BeanDefinitionLoader} that will be used to load beans;protected BeanDefinitionLoader createBeanDefinitionLoader(_			BeanDefinitionRegistry registry, Object[] sources) {_		return new BeanDefinitionLoader(registry, sources)__	};factory,method,used,to,create,the,link,bean,definition,loader,param,registry,the,bean,definition,registry,param,sources,the,sources,to,load,return,the,link,bean,definition,loader,that,will,be,used,to,load,beans;protected,bean,definition,loader,create,bean,definition,loader,bean,definition,registry,registry,object,sources,return,new,bean,definition,loader,registry,sources
SpringApplication -> protected BeanDefinitionLoader createBeanDefinitionLoader( 			BeanDefinitionRegistry registry, Object[] sources);1549791353;Factory method used to create the {@link BeanDefinitionLoader}._@param registry the bean definition registry_@param sources the sources to load_@return the {@link BeanDefinitionLoader} that will be used to load beans;protected BeanDefinitionLoader createBeanDefinitionLoader(_			BeanDefinitionRegistry registry, Object[] sources) {_		return new BeanDefinitionLoader(registry, sources)__	};factory,method,used,to,create,the,link,bean,definition,loader,param,registry,the,bean,definition,registry,param,sources,the,sources,to,load,return,the,link,bean,definition,loader,that,will,be,used,to,load,beans;protected,bean,definition,loader,create,bean,definition,loader,bean,definition,registry,registry,object,sources,return,new,bean,definition,loader,registry,sources
SpringApplication -> protected BeanDefinitionLoader createBeanDefinitionLoader( 			BeanDefinitionRegistry registry, Object[] sources);1550148109;Factory method used to create the {@link BeanDefinitionLoader}._@param registry the bean definition registry_@param sources the sources to load_@return the {@link BeanDefinitionLoader} that will be used to load beans;protected BeanDefinitionLoader createBeanDefinitionLoader(_			BeanDefinitionRegistry registry, Object[] sources) {_		return new BeanDefinitionLoader(registry, sources)__	};factory,method,used,to,create,the,link,bean,definition,loader,param,registry,the,bean,definition,registry,param,sources,the,sources,to,load,return,the,link,bean,definition,loader,that,will,be,used,to,load,beans;protected,bean,definition,loader,create,bean,definition,loader,bean,definition,registry,registry,object,sources,return,new,bean,definition,loader,registry,sources
SpringApplication -> protected void postProcessApplicationContext(ConfigurableApplicationContext context);1507173536;Apply any relevant post processing the {@link ApplicationContext}. Subclasses can_apply additional processing as required._@param context the application context;protected void postProcessApplicationContext(ConfigurableApplicationContext context) {_		if (this.beanNameGenerator != null) {_			context.getBeanFactory().registerSingleton(_					AnnotationConfigUtils.CONFIGURATION_BEAN_NAME_GENERATOR,_					this.beanNameGenerator)__		}_		if (this.resourceLoader != null) {_			if (context instanceof GenericApplicationContext) {_				((GenericApplicationContext) context)_						.setResourceLoader(this.resourceLoader)__			}_			if (context instanceof DefaultResourceLoader) {_				((DefaultResourceLoader) context)_						.setClassLoader(this.resourceLoader.getClassLoader())__			}_		}_	};apply,any,relevant,post,processing,the,link,application,context,subclasses,can,apply,additional,processing,as,required,param,context,the,application,context;protected,void,post,process,application,context,configurable,application,context,context,if,this,bean,name,generator,null,context,get,bean,factory,register,singleton,annotation,config,utils,this,bean,name,generator,if,this,resource,loader,null,if,context,instanceof,generic,application,context,generic,application,context,context,set,resource,loader,this,resource,loader,if,context,instanceof,default,resource,loader,default,resource,loader,context,set,class,loader,this,resource,loader,get,class,loader
SpringApplication -> protected void postProcessApplicationContext(ConfigurableApplicationContext context);1509381678;Apply any relevant post processing the {@link ApplicationContext}. Subclasses can_apply additional processing as required._@param context the application context;protected void postProcessApplicationContext(ConfigurableApplicationContext context) {_		if (this.beanNameGenerator != null) {_			context.getBeanFactory().registerSingleton(_					AnnotationConfigUtils.CONFIGURATION_BEAN_NAME_GENERATOR,_					this.beanNameGenerator)__		}_		if (this.resourceLoader != null) {_			if (context instanceof GenericApplicationContext) {_				((GenericApplicationContext) context)_						.setResourceLoader(this.resourceLoader)__			}_			if (context instanceof DefaultResourceLoader) {_				((DefaultResourceLoader) context)_						.setClassLoader(this.resourceLoader.getClassLoader())__			}_		}_	};apply,any,relevant,post,processing,the,link,application,context,subclasses,can,apply,additional,processing,as,required,param,context,the,application,context;protected,void,post,process,application,context,configurable,application,context,context,if,this,bean,name,generator,null,context,get,bean,factory,register,singleton,annotation,config,utils,this,bean,name,generator,if,this,resource,loader,null,if,context,instanceof,generic,application,context,generic,application,context,context,set,resource,loader,this,resource,loader,if,context,instanceof,default,resource,loader,default,resource,loader,context,set,class,loader,this,resource,loader,get,class,loader
SpringApplication -> protected void postProcessApplicationContext(ConfigurableApplicationContext context);1510995225;Apply any relevant post processing the {@link ApplicationContext}. Subclasses can_apply additional processing as required._@param context the application context;protected void postProcessApplicationContext(ConfigurableApplicationContext context) {_		if (this.beanNameGenerator != null) {_			context.getBeanFactory().registerSingleton(_					AnnotationConfigUtils.CONFIGURATION_BEAN_NAME_GENERATOR,_					this.beanNameGenerator)__		}_		if (this.resourceLoader != null) {_			if (context instanceof GenericApplicationContext) {_				((GenericApplicationContext) context)_						.setResourceLoader(this.resourceLoader)__			}_			if (context instanceof DefaultResourceLoader) {_				((DefaultResourceLoader) context)_						.setClassLoader(this.resourceLoader.getClassLoader())__			}_		}_	};apply,any,relevant,post,processing,the,link,application,context,subclasses,can,apply,additional,processing,as,required,param,context,the,application,context;protected,void,post,process,application,context,configurable,application,context,context,if,this,bean,name,generator,null,context,get,bean,factory,register,singleton,annotation,config,utils,this,bean,name,generator,if,this,resource,loader,null,if,context,instanceof,generic,application,context,generic,application,context,context,set,resource,loader,this,resource,loader,if,context,instanceof,default,resource,loader,default,resource,loader,context,set,class,loader,this,resource,loader,get,class,loader
SpringApplication -> protected void postProcessApplicationContext(ConfigurableApplicationContext context);1515670013;Apply any relevant post processing the {@link ApplicationContext}. Subclasses can_apply additional processing as required._@param context the application context;protected void postProcessApplicationContext(ConfigurableApplicationContext context) {_		if (this.beanNameGenerator != null) {_			context.getBeanFactory().registerSingleton(_					AnnotationConfigUtils.CONFIGURATION_BEAN_NAME_GENERATOR,_					this.beanNameGenerator)__		}_		if (this.resourceLoader != null) {_			if (context instanceof GenericApplicationContext) {_				((GenericApplicationContext) context)_						.setResourceLoader(this.resourceLoader)__			}_			if (context instanceof DefaultResourceLoader) {_				((DefaultResourceLoader) context)_						.setClassLoader(this.resourceLoader.getClassLoader())__			}_		}_	};apply,any,relevant,post,processing,the,link,application,context,subclasses,can,apply,additional,processing,as,required,param,context,the,application,context;protected,void,post,process,application,context,configurable,application,context,context,if,this,bean,name,generator,null,context,get,bean,factory,register,singleton,annotation,config,utils,this,bean,name,generator,if,this,resource,loader,null,if,context,instanceof,generic,application,context,generic,application,context,context,set,resource,loader,this,resource,loader,if,context,instanceof,default,resource,loader,default,resource,loader,context,set,class,loader,this,resource,loader,get,class,loader
SpringApplication -> protected void postProcessApplicationContext(ConfigurableApplicationContext context);1519362690;Apply any relevant post processing the {@link ApplicationContext}. Subclasses can_apply additional processing as required._@param context the application context;protected void postProcessApplicationContext(ConfigurableApplicationContext context) {_		if (this.beanNameGenerator != null) {_			context.getBeanFactory().registerSingleton(_					AnnotationConfigUtils.CONFIGURATION_BEAN_NAME_GENERATOR,_					this.beanNameGenerator)__		}_		if (this.resourceLoader != null) {_			if (context instanceof GenericApplicationContext) {_				((GenericApplicationContext) context)_						.setResourceLoader(this.resourceLoader)__			}_			if (context instanceof DefaultResourceLoader) {_				((DefaultResourceLoader) context)_						.setClassLoader(this.resourceLoader.getClassLoader())__			}_		}_	};apply,any,relevant,post,processing,the,link,application,context,subclasses,can,apply,additional,processing,as,required,param,context,the,application,context;protected,void,post,process,application,context,configurable,application,context,context,if,this,bean,name,generator,null,context,get,bean,factory,register,singleton,annotation,config,utils,this,bean,name,generator,if,this,resource,loader,null,if,context,instanceof,generic,application,context,generic,application,context,context,set,resource,loader,this,resource,loader,if,context,instanceof,default,resource,loader,default,resource,loader,context,set,class,loader,this,resource,loader,get,class,loader
SpringApplication -> protected void postProcessApplicationContext(ConfigurableApplicationContext context);1522251721;Apply any relevant post processing the {@link ApplicationContext}. Subclasses can_apply additional processing as required._@param context the application context;protected void postProcessApplicationContext(ConfigurableApplicationContext context) {_		if (this.beanNameGenerator != null) {_			context.getBeanFactory().registerSingleton(_					AnnotationConfigUtils.CONFIGURATION_BEAN_NAME_GENERATOR,_					this.beanNameGenerator)__		}_		if (this.resourceLoader != null) {_			if (context instanceof GenericApplicationContext) {_				((GenericApplicationContext) context)_						.setResourceLoader(this.resourceLoader)__			}_			if (context instanceof DefaultResourceLoader) {_				((DefaultResourceLoader) context)_						.setClassLoader(this.resourceLoader.getClassLoader())__			}_		}_	};apply,any,relevant,post,processing,the,link,application,context,subclasses,can,apply,additional,processing,as,required,param,context,the,application,context;protected,void,post,process,application,context,configurable,application,context,context,if,this,bean,name,generator,null,context,get,bean,factory,register,singleton,annotation,config,utils,this,bean,name,generator,if,this,resource,loader,null,if,context,instanceof,generic,application,context,generic,application,context,context,set,resource,loader,this,resource,loader,if,context,instanceof,default,resource,loader,default,resource,loader,context,set,class,loader,this,resource,loader,get,class,loader
SpringApplication -> protected void postProcessApplicationContext(ConfigurableApplicationContext context);1525376698;Apply any relevant post processing the {@link ApplicationContext}. Subclasses can_apply additional processing as required._@param context the application context;protected void postProcessApplicationContext(ConfigurableApplicationContext context) {_		if (this.beanNameGenerator != null) {_			context.getBeanFactory().registerSingleton(_					AnnotationConfigUtils.CONFIGURATION_BEAN_NAME_GENERATOR,_					this.beanNameGenerator)__		}_		if (this.resourceLoader != null) {_			if (context instanceof GenericApplicationContext) {_				((GenericApplicationContext) context)_						.setResourceLoader(this.resourceLoader)__			}_			if (context instanceof DefaultResourceLoader) {_				((DefaultResourceLoader) context)_						.setClassLoader(this.resourceLoader.getClassLoader())__			}_		}_	};apply,any,relevant,post,processing,the,link,application,context,subclasses,can,apply,additional,processing,as,required,param,context,the,application,context;protected,void,post,process,application,context,configurable,application,context,context,if,this,bean,name,generator,null,context,get,bean,factory,register,singleton,annotation,config,utils,this,bean,name,generator,if,this,resource,loader,null,if,context,instanceof,generic,application,context,generic,application,context,context,set,resource,loader,this,resource,loader,if,context,instanceof,default,resource,loader,default,resource,loader,context,set,class,loader,this,resource,loader,get,class,loader
SpringApplication -> protected void postProcessApplicationContext(ConfigurableApplicationContext context);1525416882;Apply any relevant post processing the {@link ApplicationContext}. Subclasses can_apply additional processing as required._@param context the application context;protected void postProcessApplicationContext(ConfigurableApplicationContext context) {_		if (this.beanNameGenerator != null) {_			context.getBeanFactory().registerSingleton(_					AnnotationConfigUtils.CONFIGURATION_BEAN_NAME_GENERATOR,_					this.beanNameGenerator)__		}_		if (this.resourceLoader != null) {_			if (context instanceof GenericApplicationContext) {_				((GenericApplicationContext) context)_						.setResourceLoader(this.resourceLoader)__			}_			if (context instanceof DefaultResourceLoader) {_				((DefaultResourceLoader) context)_						.setClassLoader(this.resourceLoader.getClassLoader())__			}_		}_	};apply,any,relevant,post,processing,the,link,application,context,subclasses,can,apply,additional,processing,as,required,param,context,the,application,context;protected,void,post,process,application,context,configurable,application,context,context,if,this,bean,name,generator,null,context,get,bean,factory,register,singleton,annotation,config,utils,this,bean,name,generator,if,this,resource,loader,null,if,context,instanceof,generic,application,context,generic,application,context,context,set,resource,loader,this,resource,loader,if,context,instanceof,default,resource,loader,default,resource,loader,context,set,class,loader,this,resource,loader,get,class,loader
SpringApplication -> protected void postProcessApplicationContext(ConfigurableApplicationContext context);1526993305;Apply any relevant post processing the {@link ApplicationContext}. Subclasses can_apply additional processing as required._@param context the application context;protected void postProcessApplicationContext(ConfigurableApplicationContext context) {_		if (this.beanNameGenerator != null) {_			context.getBeanFactory().registerSingleton(_					AnnotationConfigUtils.CONFIGURATION_BEAN_NAME_GENERATOR,_					this.beanNameGenerator)__		}_		if (this.resourceLoader != null) {_			if (context instanceof GenericApplicationContext) {_				((GenericApplicationContext) context)_						.setResourceLoader(this.resourceLoader)__			}_			if (context instanceof DefaultResourceLoader) {_				((DefaultResourceLoader) context)_						.setClassLoader(this.resourceLoader.getClassLoader())__			}_		}_	};apply,any,relevant,post,processing,the,link,application,context,subclasses,can,apply,additional,processing,as,required,param,context,the,application,context;protected,void,post,process,application,context,configurable,application,context,context,if,this,bean,name,generator,null,context,get,bean,factory,register,singleton,annotation,config,utils,this,bean,name,generator,if,this,resource,loader,null,if,context,instanceof,generic,application,context,generic,application,context,context,set,resource,loader,this,resource,loader,if,context,instanceof,default,resource,loader,default,resource,loader,context,set,class,loader,this,resource,loader,get,class,loader
SpringApplication -> protected void postProcessApplicationContext(ConfigurableApplicationContext context);1529485904;Apply any relevant post processing the {@link ApplicationContext}. Subclasses can_apply additional processing as required._@param context the application context;protected void postProcessApplicationContext(ConfigurableApplicationContext context) {_		if (this.beanNameGenerator != null) {_			context.getBeanFactory().registerSingleton(_					AnnotationConfigUtils.CONFIGURATION_BEAN_NAME_GENERATOR,_					this.beanNameGenerator)__		}_		if (this.resourceLoader != null) {_			if (context instanceof GenericApplicationContext) {_				((GenericApplicationContext) context)_						.setResourceLoader(this.resourceLoader)__			}_			if (context instanceof DefaultResourceLoader) {_				((DefaultResourceLoader) context)_						.setClassLoader(this.resourceLoader.getClassLoader())__			}_		}_	};apply,any,relevant,post,processing,the,link,application,context,subclasses,can,apply,additional,processing,as,required,param,context,the,application,context;protected,void,post,process,application,context,configurable,application,context,context,if,this,bean,name,generator,null,context,get,bean,factory,register,singleton,annotation,config,utils,this,bean,name,generator,if,this,resource,loader,null,if,context,instanceof,generic,application,context,generic,application,context,context,set,resource,loader,this,resource,loader,if,context,instanceof,default,resource,loader,default,resource,loader,context,set,class,loader,this,resource,loader,get,class,loader
SpringApplication -> protected void postProcessApplicationContext(ConfigurableApplicationContext context);1531140616;Apply any relevant post processing the {@link ApplicationContext}. Subclasses can_apply additional processing as required._@param context the application context;protected void postProcessApplicationContext(ConfigurableApplicationContext context) {_		if (this.beanNameGenerator != null) {_			context.getBeanFactory().registerSingleton(_					AnnotationConfigUtils.CONFIGURATION_BEAN_NAME_GENERATOR,_					this.beanNameGenerator)__		}_		if (this.resourceLoader != null) {_			if (context instanceof GenericApplicationContext) {_				((GenericApplicationContext) context)_						.setResourceLoader(this.resourceLoader)__			}_			if (context instanceof DefaultResourceLoader) {_				((DefaultResourceLoader) context)_						.setClassLoader(this.resourceLoader.getClassLoader())__			}_		}_	};apply,any,relevant,post,processing,the,link,application,context,subclasses,can,apply,additional,processing,as,required,param,context,the,application,context;protected,void,post,process,application,context,configurable,application,context,context,if,this,bean,name,generator,null,context,get,bean,factory,register,singleton,annotation,config,utils,this,bean,name,generator,if,this,resource,loader,null,if,context,instanceof,generic,application,context,generic,application,context,context,set,resource,loader,this,resource,loader,if,context,instanceof,default,resource,loader,default,resource,loader,context,set,class,loader,this,resource,loader,get,class,loader
SpringApplication -> protected void postProcessApplicationContext(ConfigurableApplicationContext context);1531155529;Apply any relevant post processing the {@link ApplicationContext}. Subclasses can_apply additional processing as required._@param context the application context;protected void postProcessApplicationContext(ConfigurableApplicationContext context) {_		if (this.beanNameGenerator != null) {_			context.getBeanFactory().registerSingleton(_					AnnotationConfigUtils.CONFIGURATION_BEAN_NAME_GENERATOR,_					this.beanNameGenerator)__		}_		if (this.resourceLoader != null) {_			if (context instanceof GenericApplicationContext) {_				((GenericApplicationContext) context)_						.setResourceLoader(this.resourceLoader)__			}_			if (context instanceof DefaultResourceLoader) {_				((DefaultResourceLoader) context)_						.setClassLoader(this.resourceLoader.getClassLoader())__			}_		}_	};apply,any,relevant,post,processing,the,link,application,context,subclasses,can,apply,additional,processing,as,required,param,context,the,application,context;protected,void,post,process,application,context,configurable,application,context,context,if,this,bean,name,generator,null,context,get,bean,factory,register,singleton,annotation,config,utils,this,bean,name,generator,if,this,resource,loader,null,if,context,instanceof,generic,application,context,generic,application,context,context,set,resource,loader,this,resource,loader,if,context,instanceof,default,resource,loader,default,resource,loader,context,set,class,loader,this,resource,loader,get,class,loader
SpringApplication -> protected void postProcessApplicationContext(ConfigurableApplicationContext context);1531222098;Apply any relevant post processing the {@link ApplicationContext}. Subclasses can_apply additional processing as required._@param context the application context;protected void postProcessApplicationContext(ConfigurableApplicationContext context) {_		if (this.beanNameGenerator != null) {_			context.getBeanFactory().registerSingleton(_					AnnotationConfigUtils.CONFIGURATION_BEAN_NAME_GENERATOR,_					this.beanNameGenerator)__		}_		if (this.resourceLoader != null) {_			if (context instanceof GenericApplicationContext) {_				((GenericApplicationContext) context)_						.setResourceLoader(this.resourceLoader)__			}_			if (context instanceof DefaultResourceLoader) {_				((DefaultResourceLoader) context)_						.setClassLoader(this.resourceLoader.getClassLoader())__			}_		}_	};apply,any,relevant,post,processing,the,link,application,context,subclasses,can,apply,additional,processing,as,required,param,context,the,application,context;protected,void,post,process,application,context,configurable,application,context,context,if,this,bean,name,generator,null,context,get,bean,factory,register,singleton,annotation,config,utils,this,bean,name,generator,if,this,resource,loader,null,if,context,instanceof,generic,application,context,generic,application,context,context,set,resource,loader,this,resource,loader,if,context,instanceof,default,resource,loader,default,resource,loader,context,set,class,loader,this,resource,loader,get,class,loader
SpringApplication -> protected void postProcessApplicationContext(ConfigurableApplicationContext context);1532738143;Apply any relevant post processing the {@link ApplicationContext}. Subclasses can_apply additional processing as required._@param context the application context;protected void postProcessApplicationContext(ConfigurableApplicationContext context) {_		if (this.beanNameGenerator != null) {_			context.getBeanFactory().registerSingleton(_					AnnotationConfigUtils.CONFIGURATION_BEAN_NAME_GENERATOR,_					this.beanNameGenerator)__		}_		if (this.resourceLoader != null) {_			if (context instanceof GenericApplicationContext) {_				((GenericApplicationContext) context)_						.setResourceLoader(this.resourceLoader)__			}_			if (context instanceof DefaultResourceLoader) {_				((DefaultResourceLoader) context)_						.setClassLoader(this.resourceLoader.getClassLoader())__			}_		}_	};apply,any,relevant,post,processing,the,link,application,context,subclasses,can,apply,additional,processing,as,required,param,context,the,application,context;protected,void,post,process,application,context,configurable,application,context,context,if,this,bean,name,generator,null,context,get,bean,factory,register,singleton,annotation,config,utils,this,bean,name,generator,if,this,resource,loader,null,if,context,instanceof,generic,application,context,generic,application,context,context,set,resource,loader,this,resource,loader,if,context,instanceof,default,resource,loader,default,resource,loader,context,set,class,loader,this,resource,loader,get,class,loader
SpringApplication -> protected void postProcessApplicationContext(ConfigurableApplicationContext context);1534188228;Apply any relevant post processing the {@link ApplicationContext}. Subclasses can_apply additional processing as required._@param context the application context;protected void postProcessApplicationContext(ConfigurableApplicationContext context) {_		if (this.beanNameGenerator != null) {_			context.getBeanFactory().registerSingleton(_					AnnotationConfigUtils.CONFIGURATION_BEAN_NAME_GENERATOR,_					this.beanNameGenerator)__		}_		if (this.resourceLoader != null) {_			if (context instanceof GenericApplicationContext) {_				((GenericApplicationContext) context)_						.setResourceLoader(this.resourceLoader)__			}_			if (context instanceof DefaultResourceLoader) {_				((DefaultResourceLoader) context)_						.setClassLoader(this.resourceLoader.getClassLoader())__			}_		}_	};apply,any,relevant,post,processing,the,link,application,context,subclasses,can,apply,additional,processing,as,required,param,context,the,application,context;protected,void,post,process,application,context,configurable,application,context,context,if,this,bean,name,generator,null,context,get,bean,factory,register,singleton,annotation,config,utils,this,bean,name,generator,if,this,resource,loader,null,if,context,instanceof,generic,application,context,generic,application,context,context,set,resource,loader,this,resource,loader,if,context,instanceof,default,resource,loader,default,resource,loader,context,set,class,loader,this,resource,loader,get,class,loader
SpringApplication -> protected void postProcessApplicationContext(ConfigurableApplicationContext context);1535104170;Apply any relevant post processing the {@link ApplicationContext}. Subclasses can_apply additional processing as required._@param context the application context;protected void postProcessApplicationContext(ConfigurableApplicationContext context) {_		if (this.beanNameGenerator != null) {_			context.getBeanFactory().registerSingleton(_					AnnotationConfigUtils.CONFIGURATION_BEAN_NAME_GENERATOR,_					this.beanNameGenerator)__		}_		if (this.resourceLoader != null) {_			if (context instanceof GenericApplicationContext) {_				((GenericApplicationContext) context)_						.setResourceLoader(this.resourceLoader)__			}_			if (context instanceof DefaultResourceLoader) {_				((DefaultResourceLoader) context)_						.setClassLoader(this.resourceLoader.getClassLoader())__			}_		}_	};apply,any,relevant,post,processing,the,link,application,context,subclasses,can,apply,additional,processing,as,required,param,context,the,application,context;protected,void,post,process,application,context,configurable,application,context,context,if,this,bean,name,generator,null,context,get,bean,factory,register,singleton,annotation,config,utils,this,bean,name,generator,if,this,resource,loader,null,if,context,instanceof,generic,application,context,generic,application,context,context,set,resource,loader,this,resource,loader,if,context,instanceof,default,resource,loader,default,resource,loader,context,set,class,loader,this,resource,loader,get,class,loader
SpringApplication -> protected void postProcessApplicationContext(ConfigurableApplicationContext context);1536701067;Apply any relevant post processing the {@link ApplicationContext}. Subclasses can_apply additional processing as required._@param context the application context;protected void postProcessApplicationContext(ConfigurableApplicationContext context) {_		if (this.beanNameGenerator != null) {_			context.getBeanFactory().registerSingleton(_					AnnotationConfigUtils.CONFIGURATION_BEAN_NAME_GENERATOR,_					this.beanNameGenerator)__		}_		if (this.resourceLoader != null) {_			if (context instanceof GenericApplicationContext) {_				((GenericApplicationContext) context)_						.setResourceLoader(this.resourceLoader)__			}_			if (context instanceof DefaultResourceLoader) {_				((DefaultResourceLoader) context)_						.setClassLoader(this.resourceLoader.getClassLoader())__			}_		}_		if (this.addConversionService) {_			context.getBeanFactory().setConversionService(_					ApplicationConversionService.getSharedInstance())__		}_	};apply,any,relevant,post,processing,the,link,application,context,subclasses,can,apply,additional,processing,as,required,param,context,the,application,context;protected,void,post,process,application,context,configurable,application,context,context,if,this,bean,name,generator,null,context,get,bean,factory,register,singleton,annotation,config,utils,this,bean,name,generator,if,this,resource,loader,null,if,context,instanceof,generic,application,context,generic,application,context,context,set,resource,loader,this,resource,loader,if,context,instanceof,default,resource,loader,default,resource,loader,context,set,class,loader,this,resource,loader,get,class,loader,if,this,add,conversion,service,context,get,bean,factory,set,conversion,service,application,conversion,service,get,shared,instance
SpringApplication -> protected void postProcessApplicationContext(ConfigurableApplicationContext context);1538570355;Apply any relevant post processing the {@link ApplicationContext}. Subclasses can_apply additional processing as required._@param context the application context;protected void postProcessApplicationContext(ConfigurableApplicationContext context) {_		if (this.beanNameGenerator != null) {_			context.getBeanFactory().registerSingleton(_					AnnotationConfigUtils.CONFIGURATION_BEAN_NAME_GENERATOR,_					this.beanNameGenerator)__		}_		if (this.resourceLoader != null) {_			if (context instanceof GenericApplicationContext) {_				((GenericApplicationContext) context)_						.setResourceLoader(this.resourceLoader)__			}_			if (context instanceof DefaultResourceLoader) {_				((DefaultResourceLoader) context)_						.setClassLoader(this.resourceLoader.getClassLoader())__			}_		}_		if (this.addConversionService) {_			context.getBeanFactory().setConversionService(_					ApplicationConversionService.getSharedInstance())__		}_	};apply,any,relevant,post,processing,the,link,application,context,subclasses,can,apply,additional,processing,as,required,param,context,the,application,context;protected,void,post,process,application,context,configurable,application,context,context,if,this,bean,name,generator,null,context,get,bean,factory,register,singleton,annotation,config,utils,this,bean,name,generator,if,this,resource,loader,null,if,context,instanceof,generic,application,context,generic,application,context,context,set,resource,loader,this,resource,loader,if,context,instanceof,default,resource,loader,default,resource,loader,context,set,class,loader,this,resource,loader,get,class,loader,if,this,add,conversion,service,context,get,bean,factory,set,conversion,service,application,conversion,service,get,shared,instance
SpringApplication -> protected void postProcessApplicationContext(ConfigurableApplicationContext context);1538707540;Apply any relevant post processing the {@link ApplicationContext}. Subclasses can_apply additional processing as required._@param context the application context;protected void postProcessApplicationContext(ConfigurableApplicationContext context) {_		if (this.beanNameGenerator != null) {_			context.getBeanFactory().registerSingleton(_					AnnotationConfigUtils.CONFIGURATION_BEAN_NAME_GENERATOR,_					this.beanNameGenerator)__		}_		if (this.resourceLoader != null) {_			if (context instanceof GenericApplicationContext) {_				((GenericApplicationContext) context)_						.setResourceLoader(this.resourceLoader)__			}_			if (context instanceof DefaultResourceLoader) {_				((DefaultResourceLoader) context)_						.setClassLoader(this.resourceLoader.getClassLoader())__			}_		}_		if (this.addConversionService) {_			context.getBeanFactory().setConversionService(_					ApplicationConversionService.getSharedInstance())__		}_	};apply,any,relevant,post,processing,the,link,application,context,subclasses,can,apply,additional,processing,as,required,param,context,the,application,context;protected,void,post,process,application,context,configurable,application,context,context,if,this,bean,name,generator,null,context,get,bean,factory,register,singleton,annotation,config,utils,this,bean,name,generator,if,this,resource,loader,null,if,context,instanceof,generic,application,context,generic,application,context,context,set,resource,loader,this,resource,loader,if,context,instanceof,default,resource,loader,default,resource,loader,context,set,class,loader,this,resource,loader,get,class,loader,if,this,add,conversion,service,context,get,bean,factory,set,conversion,service,application,conversion,service,get,shared,instance
SpringApplication -> protected void postProcessApplicationContext(ConfigurableApplicationContext context);1538750610;Apply any relevant post processing the {@link ApplicationContext}. Subclasses can_apply additional processing as required._@param context the application context;protected void postProcessApplicationContext(ConfigurableApplicationContext context) {_		if (this.beanNameGenerator != null) {_			context.getBeanFactory().registerSingleton(_					AnnotationConfigUtils.CONFIGURATION_BEAN_NAME_GENERATOR,_					this.beanNameGenerator)__		}_		if (this.resourceLoader != null) {_			if (context instanceof GenericApplicationContext) {_				((GenericApplicationContext) context)_						.setResourceLoader(this.resourceLoader)__			}_			if (context instanceof DefaultResourceLoader) {_				((DefaultResourceLoader) context)_						.setClassLoader(this.resourceLoader.getClassLoader())__			}_		}_		if (this.addConversionService) {_			context.getBeanFactory().setConversionService(_					ApplicationConversionService.getSharedInstance())__		}_	};apply,any,relevant,post,processing,the,link,application,context,subclasses,can,apply,additional,processing,as,required,param,context,the,application,context;protected,void,post,process,application,context,configurable,application,context,context,if,this,bean,name,generator,null,context,get,bean,factory,register,singleton,annotation,config,utils,this,bean,name,generator,if,this,resource,loader,null,if,context,instanceof,generic,application,context,generic,application,context,context,set,resource,loader,this,resource,loader,if,context,instanceof,default,resource,loader,default,resource,loader,context,set,class,loader,this,resource,loader,get,class,loader,if,this,add,conversion,service,context,get,bean,factory,set,conversion,service,application,conversion,service,get,shared,instance
SpringApplication -> protected void postProcessApplicationContext(ConfigurableApplicationContext context);1538771652;Apply any relevant post processing the {@link ApplicationContext}. Subclasses can_apply additional processing as required._@param context the application context;protected void postProcessApplicationContext(ConfigurableApplicationContext context) {_		if (this.beanNameGenerator != null) {_			context.getBeanFactory().registerSingleton(_					AnnotationConfigUtils.CONFIGURATION_BEAN_NAME_GENERATOR,_					this.beanNameGenerator)__		}_		if (this.resourceLoader != null) {_			if (context instanceof GenericApplicationContext) {_				((GenericApplicationContext) context)_						.setResourceLoader(this.resourceLoader)__			}_			if (context instanceof DefaultResourceLoader) {_				((DefaultResourceLoader) context)_						.setClassLoader(this.resourceLoader.getClassLoader())__			}_		}_		if (this.addConversionService) {_			context.getBeanFactory().setConversionService(_					ApplicationConversionService.getSharedInstance())__		}_	};apply,any,relevant,post,processing,the,link,application,context,subclasses,can,apply,additional,processing,as,required,param,context,the,application,context;protected,void,post,process,application,context,configurable,application,context,context,if,this,bean,name,generator,null,context,get,bean,factory,register,singleton,annotation,config,utils,this,bean,name,generator,if,this,resource,loader,null,if,context,instanceof,generic,application,context,generic,application,context,context,set,resource,loader,this,resource,loader,if,context,instanceof,default,resource,loader,default,resource,loader,context,set,class,loader,this,resource,loader,get,class,loader,if,this,add,conversion,service,context,get,bean,factory,set,conversion,service,application,conversion,service,get,shared,instance
SpringApplication -> protected void postProcessApplicationContext(ConfigurableApplicationContext context);1540419762;Apply any relevant post processing the {@link ApplicationContext}. Subclasses can_apply additional processing as required._@param context the application context;protected void postProcessApplicationContext(ConfigurableApplicationContext context) {_		if (this.beanNameGenerator != null) {_			context.getBeanFactory().registerSingleton(_					AnnotationConfigUtils.CONFIGURATION_BEAN_NAME_GENERATOR,_					this.beanNameGenerator)__		}_		if (this.resourceLoader != null) {_			if (context instanceof GenericApplicationContext) {_				((GenericApplicationContext) context)_						.setResourceLoader(this.resourceLoader)__			}_			if (context instanceof DefaultResourceLoader) {_				((DefaultResourceLoader) context)_						.setClassLoader(this.resourceLoader.getClassLoader())__			}_		}_		if (this.addConversionService) {_			context.getBeanFactory().setConversionService(_					ApplicationConversionService.getSharedInstance())__		}_	};apply,any,relevant,post,processing,the,link,application,context,subclasses,can,apply,additional,processing,as,required,param,context,the,application,context;protected,void,post,process,application,context,configurable,application,context,context,if,this,bean,name,generator,null,context,get,bean,factory,register,singleton,annotation,config,utils,this,bean,name,generator,if,this,resource,loader,null,if,context,instanceof,generic,application,context,generic,application,context,context,set,resource,loader,this,resource,loader,if,context,instanceof,default,resource,loader,default,resource,loader,context,set,class,loader,this,resource,loader,get,class,loader,if,this,add,conversion,service,context,get,bean,factory,set,conversion,service,application,conversion,service,get,shared,instance
SpringApplication -> protected void postProcessApplicationContext(ConfigurableApplicationContext context);1541060131;Apply any relevant post processing the {@link ApplicationContext}. Subclasses can_apply additional processing as required._@param context the application context;protected void postProcessApplicationContext(ConfigurableApplicationContext context) {_		if (this.beanNameGenerator != null) {_			context.getBeanFactory().registerSingleton(_					AnnotationConfigUtils.CONFIGURATION_BEAN_NAME_GENERATOR,_					this.beanNameGenerator)__		}_		if (this.resourceLoader != null) {_			if (context instanceof GenericApplicationContext) {_				((GenericApplicationContext) context)_						.setResourceLoader(this.resourceLoader)__			}_			if (context instanceof DefaultResourceLoader) {_				((DefaultResourceLoader) context)_						.setClassLoader(this.resourceLoader.getClassLoader())__			}_		}_		if (this.addConversionService) {_			context.getBeanFactory().setConversionService(_					ApplicationConversionService.getSharedInstance())__		}_	};apply,any,relevant,post,processing,the,link,application,context,subclasses,can,apply,additional,processing,as,required,param,context,the,application,context;protected,void,post,process,application,context,configurable,application,context,context,if,this,bean,name,generator,null,context,get,bean,factory,register,singleton,annotation,config,utils,this,bean,name,generator,if,this,resource,loader,null,if,context,instanceof,generic,application,context,generic,application,context,context,set,resource,loader,this,resource,loader,if,context,instanceof,default,resource,loader,default,resource,loader,context,set,class,loader,this,resource,loader,get,class,loader,if,this,add,conversion,service,context,get,bean,factory,set,conversion,service,application,conversion,service,get,shared,instance
SpringApplication -> protected void postProcessApplicationContext(ConfigurableApplicationContext context);1546943477;Apply any relevant post processing the {@link ApplicationContext}. Subclasses can_apply additional processing as required._@param context the application context;protected void postProcessApplicationContext(ConfigurableApplicationContext context) {_		if (this.beanNameGenerator != null) {_			context.getBeanFactory().registerSingleton(_					AnnotationConfigUtils.CONFIGURATION_BEAN_NAME_GENERATOR,_					this.beanNameGenerator)__		}_		if (this.resourceLoader != null) {_			if (context instanceof GenericApplicationContext) {_				((GenericApplicationContext) context)_						.setResourceLoader(this.resourceLoader)__			}_			if (context instanceof DefaultResourceLoader) {_				((DefaultResourceLoader) context)_						.setClassLoader(this.resourceLoader.getClassLoader())__			}_		}_		if (this.addConversionService) {_			context.getBeanFactory().setConversionService(_					ApplicationConversionService.getSharedInstance())__		}_	};apply,any,relevant,post,processing,the,link,application,context,subclasses,can,apply,additional,processing,as,required,param,context,the,application,context;protected,void,post,process,application,context,configurable,application,context,context,if,this,bean,name,generator,null,context,get,bean,factory,register,singleton,annotation,config,utils,this,bean,name,generator,if,this,resource,loader,null,if,context,instanceof,generic,application,context,generic,application,context,context,set,resource,loader,this,resource,loader,if,context,instanceof,default,resource,loader,default,resource,loader,context,set,class,loader,this,resource,loader,get,class,loader,if,this,add,conversion,service,context,get,bean,factory,set,conversion,service,application,conversion,service,get,shared,instance
SpringApplication -> protected void postProcessApplicationContext(ConfigurableApplicationContext context);1549791353;Apply any relevant post processing the {@link ApplicationContext}. Subclasses can_apply additional processing as required._@param context the application context;protected void postProcessApplicationContext(ConfigurableApplicationContext context) {_		if (this.beanNameGenerator != null) {_			context.getBeanFactory().registerSingleton(_					AnnotationConfigUtils.CONFIGURATION_BEAN_NAME_GENERATOR,_					this.beanNameGenerator)__		}_		if (this.resourceLoader != null) {_			if (context instanceof GenericApplicationContext) {_				((GenericApplicationContext) context)_						.setResourceLoader(this.resourceLoader)__			}_			if (context instanceof DefaultResourceLoader) {_				((DefaultResourceLoader) context)_						.setClassLoader(this.resourceLoader.getClassLoader())__			}_		}_		if (this.addConversionService) {_			context.getBeanFactory().setConversionService(_					ApplicationConversionService.getSharedInstance())__		}_	};apply,any,relevant,post,processing,the,link,application,context,subclasses,can,apply,additional,processing,as,required,param,context,the,application,context;protected,void,post,process,application,context,configurable,application,context,context,if,this,bean,name,generator,null,context,get,bean,factory,register,singleton,annotation,config,utils,this,bean,name,generator,if,this,resource,loader,null,if,context,instanceof,generic,application,context,generic,application,context,context,set,resource,loader,this,resource,loader,if,context,instanceof,default,resource,loader,default,resource,loader,context,set,class,loader,this,resource,loader,get,class,loader,if,this,add,conversion,service,context,get,bean,factory,set,conversion,service,application,conversion,service,get,shared,instance
SpringApplication -> protected void postProcessApplicationContext(ConfigurableApplicationContext context);1550148109;Apply any relevant post processing the {@link ApplicationContext}. Subclasses can_apply additional processing as required._@param context the application context;protected void postProcessApplicationContext(ConfigurableApplicationContext context) {_		if (this.beanNameGenerator != null) {_			context.getBeanFactory().registerSingleton(_					AnnotationConfigUtils.CONFIGURATION_BEAN_NAME_GENERATOR,_					this.beanNameGenerator)__		}_		if (this.resourceLoader != null) {_			if (context instanceof GenericApplicationContext) {_				((GenericApplicationContext) context)_						.setResourceLoader(this.resourceLoader)__			}_			if (context instanceof DefaultResourceLoader) {_				((DefaultResourceLoader) context)_						.setClassLoader(this.resourceLoader.getClassLoader())__			}_		}_		if (this.addConversionService) {_			context.getBeanFactory().setConversionService(_					ApplicationConversionService.getSharedInstance())__		}_	};apply,any,relevant,post,processing,the,link,application,context,subclasses,can,apply,additional,processing,as,required,param,context,the,application,context;protected,void,post,process,application,context,configurable,application,context,context,if,this,bean,name,generator,null,context,get,bean,factory,register,singleton,annotation,config,utils,this,bean,name,generator,if,this,resource,loader,null,if,context,instanceof,generic,application,context,generic,application,context,context,set,resource,loader,this,resource,loader,if,context,instanceof,default,resource,loader,default,resource,loader,context,set,class,loader,this,resource,loader,get,class,loader,if,this,add,conversion,service,context,get,bean,factory,set,conversion,service,application,conversion,service,get,shared,instance
SpringApplication -> public void setDefaultProperties(Map<String, Object> defaultProperties);1507173536;Set default environment properties which will be used in addition to those in the_existing {@link Environment}._@param defaultProperties the additional properties to set;public void setDefaultProperties(Map<String, Object> defaultProperties) {_		this.defaultProperties = defaultProperties__	};set,default,environment,properties,which,will,be,used,in,addition,to,those,in,the,existing,link,environment,param,default,properties,the,additional,properties,to,set;public,void,set,default,properties,map,string,object,default,properties,this,default,properties,default,properties
SpringApplication -> public void setDefaultProperties(Map<String, Object> defaultProperties);1509381678;Set default environment properties which will be used in addition to those in the_existing {@link Environment}._@param defaultProperties the additional properties to set;public void setDefaultProperties(Map<String, Object> defaultProperties) {_		this.defaultProperties = defaultProperties__	};set,default,environment,properties,which,will,be,used,in,addition,to,those,in,the,existing,link,environment,param,default,properties,the,additional,properties,to,set;public,void,set,default,properties,map,string,object,default,properties,this,default,properties,default,properties
SpringApplication -> public void setDefaultProperties(Map<String, Object> defaultProperties);1510995225;Set default environment properties which will be used in addition to those in the_existing {@link Environment}._@param defaultProperties the additional properties to set;public void setDefaultProperties(Map<String, Object> defaultProperties) {_		this.defaultProperties = defaultProperties__	};set,default,environment,properties,which,will,be,used,in,addition,to,those,in,the,existing,link,environment,param,default,properties,the,additional,properties,to,set;public,void,set,default,properties,map,string,object,default,properties,this,default,properties,default,properties
SpringApplication -> public void setDefaultProperties(Map<String, Object> defaultProperties);1515670013;Set default environment properties which will be used in addition to those in the_existing {@link Environment}._@param defaultProperties the additional properties to set;public void setDefaultProperties(Map<String, Object> defaultProperties) {_		this.defaultProperties = defaultProperties__	};set,default,environment,properties,which,will,be,used,in,addition,to,those,in,the,existing,link,environment,param,default,properties,the,additional,properties,to,set;public,void,set,default,properties,map,string,object,default,properties,this,default,properties,default,properties
SpringApplication -> public void setDefaultProperties(Map<String, Object> defaultProperties);1519362690;Set default environment properties which will be used in addition to those in the_existing {@link Environment}._@param defaultProperties the additional properties to set;public void setDefaultProperties(Map<String, Object> defaultProperties) {_		this.defaultProperties = defaultProperties__	};set,default,environment,properties,which,will,be,used,in,addition,to,those,in,the,existing,link,environment,param,default,properties,the,additional,properties,to,set;public,void,set,default,properties,map,string,object,default,properties,this,default,properties,default,properties
SpringApplication -> public void setDefaultProperties(Map<String, Object> defaultProperties);1522251721;Set default environment properties which will be used in addition to those in the_existing {@link Environment}._@param defaultProperties the additional properties to set;public void setDefaultProperties(Map<String, Object> defaultProperties) {_		this.defaultProperties = defaultProperties__	};set,default,environment,properties,which,will,be,used,in,addition,to,those,in,the,existing,link,environment,param,default,properties,the,additional,properties,to,set;public,void,set,default,properties,map,string,object,default,properties,this,default,properties,default,properties
SpringApplication -> public void setDefaultProperties(Map<String, Object> defaultProperties);1525376698;Set default environment properties which will be used in addition to those in the_existing {@link Environment}._@param defaultProperties the additional properties to set;public void setDefaultProperties(Map<String, Object> defaultProperties) {_		this.defaultProperties = defaultProperties__	};set,default,environment,properties,which,will,be,used,in,addition,to,those,in,the,existing,link,environment,param,default,properties,the,additional,properties,to,set;public,void,set,default,properties,map,string,object,default,properties,this,default,properties,default,properties
SpringApplication -> public void setDefaultProperties(Map<String, Object> defaultProperties);1525416882;Set default environment properties which will be used in addition to those in the_existing {@link Environment}._@param defaultProperties the additional properties to set;public void setDefaultProperties(Map<String, Object> defaultProperties) {_		this.defaultProperties = defaultProperties__	};set,default,environment,properties,which,will,be,used,in,addition,to,those,in,the,existing,link,environment,param,default,properties,the,additional,properties,to,set;public,void,set,default,properties,map,string,object,default,properties,this,default,properties,default,properties
SpringApplication -> public void setDefaultProperties(Map<String, Object> defaultProperties);1526993305;Set default environment properties which will be used in addition to those in the_existing {@link Environment}._@param defaultProperties the additional properties to set;public void setDefaultProperties(Map<String, Object> defaultProperties) {_		this.defaultProperties = defaultProperties__	};set,default,environment,properties,which,will,be,used,in,addition,to,those,in,the,existing,link,environment,param,default,properties,the,additional,properties,to,set;public,void,set,default,properties,map,string,object,default,properties,this,default,properties,default,properties
SpringApplication -> public void setDefaultProperties(Map<String, Object> defaultProperties);1529485904;Set default environment properties which will be used in addition to those in the_existing {@link Environment}._@param defaultProperties the additional properties to set;public void setDefaultProperties(Map<String, Object> defaultProperties) {_		this.defaultProperties = defaultProperties__	};set,default,environment,properties,which,will,be,used,in,addition,to,those,in,the,existing,link,environment,param,default,properties,the,additional,properties,to,set;public,void,set,default,properties,map,string,object,default,properties,this,default,properties,default,properties
SpringApplication -> public void setDefaultProperties(Map<String, Object> defaultProperties);1531140616;Set default environment properties which will be used in addition to those in the_existing {@link Environment}._@param defaultProperties the additional properties to set;public void setDefaultProperties(Map<String, Object> defaultProperties) {_		this.defaultProperties = defaultProperties__	};set,default,environment,properties,which,will,be,used,in,addition,to,those,in,the,existing,link,environment,param,default,properties,the,additional,properties,to,set;public,void,set,default,properties,map,string,object,default,properties,this,default,properties,default,properties
SpringApplication -> public void setDefaultProperties(Map<String, Object> defaultProperties);1531155529;Set default environment properties which will be used in addition to those in the_existing {@link Environment}._@param defaultProperties the additional properties to set;public void setDefaultProperties(Map<String, Object> defaultProperties) {_		this.defaultProperties = defaultProperties__	};set,default,environment,properties,which,will,be,used,in,addition,to,those,in,the,existing,link,environment,param,default,properties,the,additional,properties,to,set;public,void,set,default,properties,map,string,object,default,properties,this,default,properties,default,properties
SpringApplication -> public void setDefaultProperties(Map<String, Object> defaultProperties);1531222098;Set default environment properties which will be used in addition to those in the_existing {@link Environment}._@param defaultProperties the additional properties to set;public void setDefaultProperties(Map<String, Object> defaultProperties) {_		this.defaultProperties = defaultProperties__	};set,default,environment,properties,which,will,be,used,in,addition,to,those,in,the,existing,link,environment,param,default,properties,the,additional,properties,to,set;public,void,set,default,properties,map,string,object,default,properties,this,default,properties,default,properties
SpringApplication -> public void setDefaultProperties(Map<String, Object> defaultProperties);1532738143;Set default environment properties which will be used in addition to those in the_existing {@link Environment}._@param defaultProperties the additional properties to set;public void setDefaultProperties(Map<String, Object> defaultProperties) {_		this.defaultProperties = defaultProperties__	};set,default,environment,properties,which,will,be,used,in,addition,to,those,in,the,existing,link,environment,param,default,properties,the,additional,properties,to,set;public,void,set,default,properties,map,string,object,default,properties,this,default,properties,default,properties
SpringApplication -> public void setDefaultProperties(Map<String, Object> defaultProperties);1534188228;Set default environment properties which will be used in addition to those in the_existing {@link Environment}._@param defaultProperties the additional properties to set;public void setDefaultProperties(Map<String, Object> defaultProperties) {_		this.defaultProperties = defaultProperties__	};set,default,environment,properties,which,will,be,used,in,addition,to,those,in,the,existing,link,environment,param,default,properties,the,additional,properties,to,set;public,void,set,default,properties,map,string,object,default,properties,this,default,properties,default,properties
SpringApplication -> public void setDefaultProperties(Map<String, Object> defaultProperties);1535104170;Set default environment properties which will be used in addition to those in the_existing {@link Environment}._@param defaultProperties the additional properties to set;public void setDefaultProperties(Map<String, Object> defaultProperties) {_		this.defaultProperties = defaultProperties__	};set,default,environment,properties,which,will,be,used,in,addition,to,those,in,the,existing,link,environment,param,default,properties,the,additional,properties,to,set;public,void,set,default,properties,map,string,object,default,properties,this,default,properties,default,properties
SpringApplication -> public void setDefaultProperties(Map<String, Object> defaultProperties);1536701067;Set default environment properties which will be used in addition to those in the_existing {@link Environment}._@param defaultProperties the additional properties to set;public void setDefaultProperties(Map<String, Object> defaultProperties) {_		this.defaultProperties = defaultProperties__	};set,default,environment,properties,which,will,be,used,in,addition,to,those,in,the,existing,link,environment,param,default,properties,the,additional,properties,to,set;public,void,set,default,properties,map,string,object,default,properties,this,default,properties,default,properties
SpringApplication -> public void setDefaultProperties(Map<String, Object> defaultProperties);1538570355;Set default environment properties which will be used in addition to those in the_existing {@link Environment}._@param defaultProperties the additional properties to set;public void setDefaultProperties(Map<String, Object> defaultProperties) {_		this.defaultProperties = defaultProperties__	};set,default,environment,properties,which,will,be,used,in,addition,to,those,in,the,existing,link,environment,param,default,properties,the,additional,properties,to,set;public,void,set,default,properties,map,string,object,default,properties,this,default,properties,default,properties
SpringApplication -> public void setDefaultProperties(Map<String, Object> defaultProperties);1538707540;Set default environment properties which will be used in addition to those in the_existing {@link Environment}._@param defaultProperties the additional properties to set;public void setDefaultProperties(Map<String, Object> defaultProperties) {_		this.defaultProperties = defaultProperties__	};set,default,environment,properties,which,will,be,used,in,addition,to,those,in,the,existing,link,environment,param,default,properties,the,additional,properties,to,set;public,void,set,default,properties,map,string,object,default,properties,this,default,properties,default,properties
SpringApplication -> public void setDefaultProperties(Map<String, Object> defaultProperties);1538750610;Set default environment properties which will be used in addition to those in the_existing {@link Environment}._@param defaultProperties the additional properties to set;public void setDefaultProperties(Map<String, Object> defaultProperties) {_		this.defaultProperties = defaultProperties__	};set,default,environment,properties,which,will,be,used,in,addition,to,those,in,the,existing,link,environment,param,default,properties,the,additional,properties,to,set;public,void,set,default,properties,map,string,object,default,properties,this,default,properties,default,properties
SpringApplication -> public void setDefaultProperties(Map<String, Object> defaultProperties);1538771652;Set default environment properties which will be used in addition to those in the_existing {@link Environment}._@param defaultProperties the additional properties to set;public void setDefaultProperties(Map<String, Object> defaultProperties) {_		this.defaultProperties = defaultProperties__	};set,default,environment,properties,which,will,be,used,in,addition,to,those,in,the,existing,link,environment,param,default,properties,the,additional,properties,to,set;public,void,set,default,properties,map,string,object,default,properties,this,default,properties,default,properties
SpringApplication -> public void setDefaultProperties(Map<String, Object> defaultProperties);1540419762;Set default environment properties which will be used in addition to those in the_existing {@link Environment}._@param defaultProperties the additional properties to set;public void setDefaultProperties(Map<String, Object> defaultProperties) {_		this.defaultProperties = defaultProperties__	};set,default,environment,properties,which,will,be,used,in,addition,to,those,in,the,existing,link,environment,param,default,properties,the,additional,properties,to,set;public,void,set,default,properties,map,string,object,default,properties,this,default,properties,default,properties
SpringApplication -> public void setDefaultProperties(Map<String, Object> defaultProperties);1541060131;Set default environment properties which will be used in addition to those in the_existing {@link Environment}._@param defaultProperties the additional properties to set;public void setDefaultProperties(Map<String, Object> defaultProperties) {_		this.defaultProperties = defaultProperties__	};set,default,environment,properties,which,will,be,used,in,addition,to,those,in,the,existing,link,environment,param,default,properties,the,additional,properties,to,set;public,void,set,default,properties,map,string,object,default,properties,this,default,properties,default,properties
SpringApplication -> public void setDefaultProperties(Map<String, Object> defaultProperties);1546943477;Set default environment properties which will be used in addition to those in the_existing {@link Environment}._@param defaultProperties the additional properties to set;public void setDefaultProperties(Map<String, Object> defaultProperties) {_		this.defaultProperties = defaultProperties__	};set,default,environment,properties,which,will,be,used,in,addition,to,those,in,the,existing,link,environment,param,default,properties,the,additional,properties,to,set;public,void,set,default,properties,map,string,object,default,properties,this,default,properties,default,properties
SpringApplication -> public void setDefaultProperties(Map<String, Object> defaultProperties);1549791353;Set default environment properties which will be used in addition to those in the_existing {@link Environment}._@param defaultProperties the additional properties to set;public void setDefaultProperties(Map<String, Object> defaultProperties) {_		this.defaultProperties = defaultProperties__	};set,default,environment,properties,which,will,be,used,in,addition,to,those,in,the,existing,link,environment,param,default,properties,the,additional,properties,to,set;public,void,set,default,properties,map,string,object,default,properties,this,default,properties,default,properties
SpringApplication -> public void setDefaultProperties(Map<String, Object> defaultProperties);1550148109;Set default environment properties which will be used in addition to those in the_existing {@link Environment}._@param defaultProperties the additional properties to set;public void setDefaultProperties(Map<String, Object> defaultProperties) {_		this.defaultProperties = defaultProperties__	};set,default,environment,properties,which,will,be,used,in,addition,to,those,in,the,existing,link,environment,param,default,properties,the,additional,properties,to,set;public,void,set,default,properties,map,string,object,default,properties,this,default,properties,default,properties
SpringApplication -> public void setAddConversionService(boolean addConversionService);1536701067;Sets if the {@link ApplicationConversionService} should be added to the application_context's {@link Environment}._@param addConversionService if the application conversion service should be added_@since 2.1.0;public void setAddConversionService(boolean addConversionService) {_		this.addConversionService = addConversionService__	};sets,if,the,link,application,conversion,service,should,be,added,to,the,application,context,s,link,environment,param,add,conversion,service,if,the,application,conversion,service,should,be,added,since,2,1,0;public,void,set,add,conversion,service,boolean,add,conversion,service,this,add,conversion,service,add,conversion,service
SpringApplication -> public void setAddConversionService(boolean addConversionService);1538570355;Sets if the {@link ApplicationConversionService} should be added to the application_context's {@link Environment}._@param addConversionService if the application conversion service should be added_@since 2.1.0;public void setAddConversionService(boolean addConversionService) {_		this.addConversionService = addConversionService__	};sets,if,the,link,application,conversion,service,should,be,added,to,the,application,context,s,link,environment,param,add,conversion,service,if,the,application,conversion,service,should,be,added,since,2,1,0;public,void,set,add,conversion,service,boolean,add,conversion,service,this,add,conversion,service,add,conversion,service
SpringApplication -> public void setAddConversionService(boolean addConversionService);1538707540;Sets if the {@link ApplicationConversionService} should be added to the application_context's {@link Environment}._@param addConversionService if the application conversion service should be added_@since 2.1.0;public void setAddConversionService(boolean addConversionService) {_		this.addConversionService = addConversionService__	};sets,if,the,link,application,conversion,service,should,be,added,to,the,application,context,s,link,environment,param,add,conversion,service,if,the,application,conversion,service,should,be,added,since,2,1,0;public,void,set,add,conversion,service,boolean,add,conversion,service,this,add,conversion,service,add,conversion,service
SpringApplication -> public void setAddConversionService(boolean addConversionService);1538750610;Sets if the {@link ApplicationConversionService} should be added to the application_context's {@link Environment}._@param addConversionService if the application conversion service should be added_@since 2.1.0;public void setAddConversionService(boolean addConversionService) {_		this.addConversionService = addConversionService__	};sets,if,the,link,application,conversion,service,should,be,added,to,the,application,context,s,link,environment,param,add,conversion,service,if,the,application,conversion,service,should,be,added,since,2,1,0;public,void,set,add,conversion,service,boolean,add,conversion,service,this,add,conversion,service,add,conversion,service
SpringApplication -> public void setAddConversionService(boolean addConversionService);1538771652;Sets if the {@link ApplicationConversionService} should be added to the application_context's {@link Environment}._@param addConversionService if the application conversion service should be added_@since 2.1.0;public void setAddConversionService(boolean addConversionService) {_		this.addConversionService = addConversionService__	};sets,if,the,link,application,conversion,service,should,be,added,to,the,application,context,s,link,environment,param,add,conversion,service,if,the,application,conversion,service,should,be,added,since,2,1,0;public,void,set,add,conversion,service,boolean,add,conversion,service,this,add,conversion,service,add,conversion,service
SpringApplication -> public void setAddConversionService(boolean addConversionService);1540419762;Sets if the {@link ApplicationConversionService} should be added to the application_context's {@link Environment}._@param addConversionService if the application conversion service should be added_@since 2.1.0;public void setAddConversionService(boolean addConversionService) {_		this.addConversionService = addConversionService__	};sets,if,the,link,application,conversion,service,should,be,added,to,the,application,context,s,link,environment,param,add,conversion,service,if,the,application,conversion,service,should,be,added,since,2,1,0;public,void,set,add,conversion,service,boolean,add,conversion,service,this,add,conversion,service,add,conversion,service
SpringApplication -> public void setAddConversionService(boolean addConversionService);1541060131;Sets if the {@link ApplicationConversionService} should be added to the application_context's {@link Environment}._@param addConversionService if the application conversion service should be added_@since 2.1.0;public void setAddConversionService(boolean addConversionService) {_		this.addConversionService = addConversionService__	};sets,if,the,link,application,conversion,service,should,be,added,to,the,application,context,s,link,environment,param,add,conversion,service,if,the,application,conversion,service,should,be,added,since,2,1,0;public,void,set,add,conversion,service,boolean,add,conversion,service,this,add,conversion,service,add,conversion,service
SpringApplication -> public void setAddConversionService(boolean addConversionService);1546943477;Sets if the {@link ApplicationConversionService} should be added to the application_context's {@link Environment}._@param addConversionService if the application conversion service should be added_@since 2.1.0;public void setAddConversionService(boolean addConversionService) {_		this.addConversionService = addConversionService__	};sets,if,the,link,application,conversion,service,should,be,added,to,the,application,context,s,link,environment,param,add,conversion,service,if,the,application,conversion,service,should,be,added,since,2,1,0;public,void,set,add,conversion,service,boolean,add,conversion,service,this,add,conversion,service,add,conversion,service
SpringApplication -> public void setAddConversionService(boolean addConversionService);1549791353;Sets if the {@link ApplicationConversionService} should be added to the application_context's {@link Environment}._@param addConversionService if the application conversion service should be added_@since 2.1.0;public void setAddConversionService(boolean addConversionService) {_		this.addConversionService = addConversionService__	};sets,if,the,link,application,conversion,service,should,be,added,to,the,application,context,s,link,environment,param,add,conversion,service,if,the,application,conversion,service,should,be,added,since,2,1,0;public,void,set,add,conversion,service,boolean,add,conversion,service,this,add,conversion,service,add,conversion,service
SpringApplication -> public void setAddConversionService(boolean addConversionService);1550148109;Sets if the {@link ApplicationConversionService} should be added to the application_context's {@link Environment}._@param addConversionService if the application conversion service should be added_@since 2.1.0;public void setAddConversionService(boolean addConversionService) {_		this.addConversionService = addConversionService__	};sets,if,the,link,application,conversion,service,should,be,added,to,the,application,context,s,link,environment,param,add,conversion,service,if,the,application,conversion,service,should,be,added,since,2,1,0;public,void,set,add,conversion,service,boolean,add,conversion,service,this,add,conversion,service,add,conversion,service
SpringApplication -> @SuppressWarnings({ "unchecked", "rawtypes" }) 	public SpringApplication(ResourceLoader resourceLoader, Class<?>... primarySources);1507173536;Create a new {@link SpringApplication} instance. The application context will load_beans from the specified primary sources (see {@link SpringApplication class-level}_documentation for details. The instance can be customized before calling_{@link #run(String...)}._@param resourceLoader the resource loader to use_@param primarySources the primary bean sources_@see #run(Class, String[])_@see #setSources(Set);@SuppressWarnings({ "unchecked", "rawtypes" })_	public SpringApplication(ResourceLoader resourceLoader, Class<?>... primarySources) {_		this.resourceLoader = resourceLoader__		Assert.notNull(primarySources, "PrimarySources must not be null")__		this.primarySources = new LinkedHashSet<>(Arrays.asList(primarySources))__		this.webApplicationType = deduceWebApplicationType()__		setInitializers((Collection) getSpringFactoriesInstances(_				ApplicationContextInitializer.class))__		setListeners((Collection) getSpringFactoriesInstances(ApplicationListener.class))__		this.mainApplicationClass = deduceMainApplicationClass()__	};create,a,new,link,spring,application,instance,the,application,context,will,load,beans,from,the,specified,primary,sources,see,link,spring,application,class,level,documentation,for,details,the,instance,can,be,customized,before,calling,link,run,string,param,resource,loader,the,resource,loader,to,use,param,primary,sources,the,primary,bean,sources,see,run,class,string,see,set,sources,set;suppress,warnings,unchecked,rawtypes,public,spring,application,resource,loader,resource,loader,class,primary,sources,this,resource,loader,resource,loader,assert,not,null,primary,sources,primary,sources,must,not,be,null,this,primary,sources,new,linked,hash,set,arrays,as,list,primary,sources,this,web,application,type,deduce,web,application,type,set,initializers,collection,get,spring,factories,instances,application,context,initializer,class,set,listeners,collection,get,spring,factories,instances,application,listener,class,this,main,application,class,deduce,main,application,class
SpringApplication -> @SuppressWarnings({ "unchecked", "rawtypes" }) 	public SpringApplication(ResourceLoader resourceLoader, Class<?>... primarySources);1509381678;Create a new {@link SpringApplication} instance. The application context will load_beans from the specified primary sources (see {@link SpringApplication class-level}_documentation for details. The instance can be customized before calling_{@link #run(String...)}._@param resourceLoader the resource loader to use_@param primarySources the primary bean sources_@see #run(Class, String[])_@see #setSources(Set);@SuppressWarnings({ "unchecked", "rawtypes" })_	public SpringApplication(ResourceLoader resourceLoader, Class<?>... primarySources) {_		this.resourceLoader = resourceLoader__		Assert.notNull(primarySources, "PrimarySources must not be null")__		this.primarySources = new LinkedHashSet<>(Arrays.asList(primarySources))__		this.webApplicationType = deduceWebApplicationType()__		setInitializers((Collection) getSpringFactoriesInstances(_				ApplicationContextInitializer.class))__		setListeners((Collection) getSpringFactoriesInstances(ApplicationListener.class))__		this.mainApplicationClass = deduceMainApplicationClass()__	};create,a,new,link,spring,application,instance,the,application,context,will,load,beans,from,the,specified,primary,sources,see,link,spring,application,class,level,documentation,for,details,the,instance,can,be,customized,before,calling,link,run,string,param,resource,loader,the,resource,loader,to,use,param,primary,sources,the,primary,bean,sources,see,run,class,string,see,set,sources,set;suppress,warnings,unchecked,rawtypes,public,spring,application,resource,loader,resource,loader,class,primary,sources,this,resource,loader,resource,loader,assert,not,null,primary,sources,primary,sources,must,not,be,null,this,primary,sources,new,linked,hash,set,arrays,as,list,primary,sources,this,web,application,type,deduce,web,application,type,set,initializers,collection,get,spring,factories,instances,application,context,initializer,class,set,listeners,collection,get,spring,factories,instances,application,listener,class,this,main,application,class,deduce,main,application,class
SpringApplication -> @SuppressWarnings({ "unchecked", "rawtypes" }) 	public SpringApplication(ResourceLoader resourceLoader, Class<?>... primarySources);1510995225;Create a new {@link SpringApplication} instance. The application context will load_beans from the specified primary sources (see {@link SpringApplication class-level}_documentation for details. The instance can be customized before calling_{@link #run(String...)}._@param resourceLoader the resource loader to use_@param primarySources the primary bean sources_@see #run(Class, String[])_@see #setSources(Set);@SuppressWarnings({ "unchecked", "rawtypes" })_	public SpringApplication(ResourceLoader resourceLoader, Class<?>... primarySources) {_		this.resourceLoader = resourceLoader__		Assert.notNull(primarySources, "PrimarySources must not be null")__		this.primarySources = new LinkedHashSet<>(Arrays.asList(primarySources))__		this.webApplicationType = deduceWebApplicationType()__		setInitializers((Collection) getSpringFactoriesInstances(_				ApplicationContextInitializer.class))__		setListeners((Collection) getSpringFactoriesInstances(ApplicationListener.class))__		this.mainApplicationClass = deduceMainApplicationClass()__	};create,a,new,link,spring,application,instance,the,application,context,will,load,beans,from,the,specified,primary,sources,see,link,spring,application,class,level,documentation,for,details,the,instance,can,be,customized,before,calling,link,run,string,param,resource,loader,the,resource,loader,to,use,param,primary,sources,the,primary,bean,sources,see,run,class,string,see,set,sources,set;suppress,warnings,unchecked,rawtypes,public,spring,application,resource,loader,resource,loader,class,primary,sources,this,resource,loader,resource,loader,assert,not,null,primary,sources,primary,sources,must,not,be,null,this,primary,sources,new,linked,hash,set,arrays,as,list,primary,sources,this,web,application,type,deduce,web,application,type,set,initializers,collection,get,spring,factories,instances,application,context,initializer,class,set,listeners,collection,get,spring,factories,instances,application,listener,class,this,main,application,class,deduce,main,application,class
SpringApplication -> @SuppressWarnings({ "unchecked", "rawtypes" }) 	public SpringApplication(ResourceLoader resourceLoader, Class<?>... primarySources);1515670013;Create a new {@link SpringApplication} instance. The application context will load_beans from the specified primary sources (see {@link SpringApplication class-level}_documentation for details. The instance can be customized before calling_{@link #run(String...)}._@param resourceLoader the resource loader to use_@param primarySources the primary bean sources_@see #run(Class, String[])_@see #setSources(Set);@SuppressWarnings({ "unchecked", "rawtypes" })_	public SpringApplication(ResourceLoader resourceLoader, Class<?>... primarySources) {_		this.resourceLoader = resourceLoader__		Assert.notNull(primarySources, "PrimarySources must not be null")__		this.primarySources = new LinkedHashSet<>(Arrays.asList(primarySources))__		this.webApplicationType = deduceWebApplicationType()__		setInitializers((Collection) getSpringFactoriesInstances(_				ApplicationContextInitializer.class))__		setListeners((Collection) getSpringFactoriesInstances(ApplicationListener.class))__		this.mainApplicationClass = deduceMainApplicationClass()__	};create,a,new,link,spring,application,instance,the,application,context,will,load,beans,from,the,specified,primary,sources,see,link,spring,application,class,level,documentation,for,details,the,instance,can,be,customized,before,calling,link,run,string,param,resource,loader,the,resource,loader,to,use,param,primary,sources,the,primary,bean,sources,see,run,class,string,see,set,sources,set;suppress,warnings,unchecked,rawtypes,public,spring,application,resource,loader,resource,loader,class,primary,sources,this,resource,loader,resource,loader,assert,not,null,primary,sources,primary,sources,must,not,be,null,this,primary,sources,new,linked,hash,set,arrays,as,list,primary,sources,this,web,application,type,deduce,web,application,type,set,initializers,collection,get,spring,factories,instances,application,context,initializer,class,set,listeners,collection,get,spring,factories,instances,application,listener,class,this,main,application,class,deduce,main,application,class
SpringApplication -> @SuppressWarnings({ "unchecked", "rawtypes" }) 	public SpringApplication(ResourceLoader resourceLoader, Class<?>... primarySources);1519362690;Create a new {@link SpringApplication} instance. The application context will load_beans from the specified primary sources (see {@link SpringApplication class-level}_documentation for details. The instance can be customized before calling_{@link #run(String...)}._@param resourceLoader the resource loader to use_@param primarySources the primary bean sources_@see #run(Class, String[])_@see #setSources(Set);@SuppressWarnings({ "unchecked", "rawtypes" })_	public SpringApplication(ResourceLoader resourceLoader, Class<?>... primarySources) {_		this.resourceLoader = resourceLoader__		Assert.notNull(primarySources, "PrimarySources must not be null")__		this.primarySources = new LinkedHashSet<>(Arrays.asList(primarySources))__		this.webApplicationType = deduceWebApplicationType()__		setInitializers((Collection) getSpringFactoriesInstances(_				ApplicationContextInitializer.class))__		setListeners((Collection) getSpringFactoriesInstances(ApplicationListener.class))__		this.mainApplicationClass = deduceMainApplicationClass()__	};create,a,new,link,spring,application,instance,the,application,context,will,load,beans,from,the,specified,primary,sources,see,link,spring,application,class,level,documentation,for,details,the,instance,can,be,customized,before,calling,link,run,string,param,resource,loader,the,resource,loader,to,use,param,primary,sources,the,primary,bean,sources,see,run,class,string,see,set,sources,set;suppress,warnings,unchecked,rawtypes,public,spring,application,resource,loader,resource,loader,class,primary,sources,this,resource,loader,resource,loader,assert,not,null,primary,sources,primary,sources,must,not,be,null,this,primary,sources,new,linked,hash,set,arrays,as,list,primary,sources,this,web,application,type,deduce,web,application,type,set,initializers,collection,get,spring,factories,instances,application,context,initializer,class,set,listeners,collection,get,spring,factories,instances,application,listener,class,this,main,application,class,deduce,main,application,class
SpringApplication -> @SuppressWarnings({ "unchecked", "rawtypes" }) 	public SpringApplication(ResourceLoader resourceLoader, Class<?>... primarySources);1522251721;Create a new {@link SpringApplication} instance. The application context will load_beans from the specified primary sources (see {@link SpringApplication class-level}_documentation for details. The instance can be customized before calling_{@link #run(String...)}._@param resourceLoader the resource loader to use_@param primarySources the primary bean sources_@see #run(Class, String[])_@see #setSources(Set);@SuppressWarnings({ "unchecked", "rawtypes" })_	public SpringApplication(ResourceLoader resourceLoader, Class<?>... primarySources) {_		this.resourceLoader = resourceLoader__		Assert.notNull(primarySources, "PrimarySources must not be null")__		this.primarySources = new LinkedHashSet<>(Arrays.asList(primarySources))__		this.webApplicationType = deduceWebApplicationType()__		setInitializers((Collection) getSpringFactoriesInstances(_				ApplicationContextInitializer.class))__		setListeners((Collection) getSpringFactoriesInstances(ApplicationListener.class))__		this.mainApplicationClass = deduceMainApplicationClass()__	};create,a,new,link,spring,application,instance,the,application,context,will,load,beans,from,the,specified,primary,sources,see,link,spring,application,class,level,documentation,for,details,the,instance,can,be,customized,before,calling,link,run,string,param,resource,loader,the,resource,loader,to,use,param,primary,sources,the,primary,bean,sources,see,run,class,string,see,set,sources,set;suppress,warnings,unchecked,rawtypes,public,spring,application,resource,loader,resource,loader,class,primary,sources,this,resource,loader,resource,loader,assert,not,null,primary,sources,primary,sources,must,not,be,null,this,primary,sources,new,linked,hash,set,arrays,as,list,primary,sources,this,web,application,type,deduce,web,application,type,set,initializers,collection,get,spring,factories,instances,application,context,initializer,class,set,listeners,collection,get,spring,factories,instances,application,listener,class,this,main,application,class,deduce,main,application,class
SpringApplication -> @SuppressWarnings({ "unchecked", "rawtypes" }) 	public SpringApplication(ResourceLoader resourceLoader, Class<?>... primarySources);1525376698;Create a new {@link SpringApplication} instance. The application context will load_beans from the specified primary sources (see {@link SpringApplication class-level}_documentation for details. The instance can be customized before calling_{@link #run(String...)}._@param resourceLoader the resource loader to use_@param primarySources the primary bean sources_@see #run(Class, String[])_@see #setSources(Set);@SuppressWarnings({ "unchecked", "rawtypes" })_	public SpringApplication(ResourceLoader resourceLoader, Class<?>... primarySources) {_		this.resourceLoader = resourceLoader__		Assert.notNull(primarySources, "PrimarySources must not be null")__		this.primarySources = new LinkedHashSet<>(Arrays.asList(primarySources))__		this.webApplicationType = deduceWebApplicationType()__		setInitializers((Collection) getSpringFactoriesInstances(_				ApplicationContextInitializer.class))__		setListeners((Collection) getSpringFactoriesInstances(ApplicationListener.class))__		this.mainApplicationClass = deduceMainApplicationClass()__	};create,a,new,link,spring,application,instance,the,application,context,will,load,beans,from,the,specified,primary,sources,see,link,spring,application,class,level,documentation,for,details,the,instance,can,be,customized,before,calling,link,run,string,param,resource,loader,the,resource,loader,to,use,param,primary,sources,the,primary,bean,sources,see,run,class,string,see,set,sources,set;suppress,warnings,unchecked,rawtypes,public,spring,application,resource,loader,resource,loader,class,primary,sources,this,resource,loader,resource,loader,assert,not,null,primary,sources,primary,sources,must,not,be,null,this,primary,sources,new,linked,hash,set,arrays,as,list,primary,sources,this,web,application,type,deduce,web,application,type,set,initializers,collection,get,spring,factories,instances,application,context,initializer,class,set,listeners,collection,get,spring,factories,instances,application,listener,class,this,main,application,class,deduce,main,application,class
SpringApplication -> @SuppressWarnings({ "unchecked", "rawtypes" }) 	public SpringApplication(ResourceLoader resourceLoader, Class<?>... primarySources);1525416882;Create a new {@link SpringApplication} instance. The application context will load_beans from the specified primary sources (see {@link SpringApplication class-level}_documentation for details. The instance can be customized before calling_{@link #run(String...)}._@param resourceLoader the resource loader to use_@param primarySources the primary bean sources_@see #run(Class, String[])_@see #setSources(Set);@SuppressWarnings({ "unchecked", "rawtypes" })_	public SpringApplication(ResourceLoader resourceLoader, Class<?>... primarySources) {_		this.resourceLoader = resourceLoader__		Assert.notNull(primarySources, "PrimarySources must not be null")__		this.primarySources = new LinkedHashSet<>(Arrays.asList(primarySources))__		this.webApplicationType = deduceWebApplicationType()__		setInitializers((Collection) getSpringFactoriesInstances(_				ApplicationContextInitializer.class))__		setListeners((Collection) getSpringFactoriesInstances(ApplicationListener.class))__		this.mainApplicationClass = deduceMainApplicationClass()__	};create,a,new,link,spring,application,instance,the,application,context,will,load,beans,from,the,specified,primary,sources,see,link,spring,application,class,level,documentation,for,details,the,instance,can,be,customized,before,calling,link,run,string,param,resource,loader,the,resource,loader,to,use,param,primary,sources,the,primary,bean,sources,see,run,class,string,see,set,sources,set;suppress,warnings,unchecked,rawtypes,public,spring,application,resource,loader,resource,loader,class,primary,sources,this,resource,loader,resource,loader,assert,not,null,primary,sources,primary,sources,must,not,be,null,this,primary,sources,new,linked,hash,set,arrays,as,list,primary,sources,this,web,application,type,deduce,web,application,type,set,initializers,collection,get,spring,factories,instances,application,context,initializer,class,set,listeners,collection,get,spring,factories,instances,application,listener,class,this,main,application,class,deduce,main,application,class
SpringApplication -> @SuppressWarnings({ "unchecked", "rawtypes" }) 	public SpringApplication(ResourceLoader resourceLoader, Class<?>... primarySources);1526993305;Create a new {@link SpringApplication} instance. The application context will load_beans from the specified primary sources (see {@link SpringApplication class-level}_documentation for details. The instance can be customized before calling_{@link #run(String...)}._@param resourceLoader the resource loader to use_@param primarySources the primary bean sources_@see #run(Class, String[])_@see #setSources(Set);@SuppressWarnings({ "unchecked", "rawtypes" })_	public SpringApplication(ResourceLoader resourceLoader, Class<?>... primarySources) {_		this.resourceLoader = resourceLoader__		Assert.notNull(primarySources, "PrimarySources must not be null")__		this.primarySources = new LinkedHashSet<>(Arrays.asList(primarySources))__		this.webApplicationType = deduceWebApplicationType()__		setInitializers((Collection) getSpringFactoriesInstances(_				ApplicationContextInitializer.class))__		setListeners((Collection) getSpringFactoriesInstances(ApplicationListener.class))__		this.mainApplicationClass = deduceMainApplicationClass()__	};create,a,new,link,spring,application,instance,the,application,context,will,load,beans,from,the,specified,primary,sources,see,link,spring,application,class,level,documentation,for,details,the,instance,can,be,customized,before,calling,link,run,string,param,resource,loader,the,resource,loader,to,use,param,primary,sources,the,primary,bean,sources,see,run,class,string,see,set,sources,set;suppress,warnings,unchecked,rawtypes,public,spring,application,resource,loader,resource,loader,class,primary,sources,this,resource,loader,resource,loader,assert,not,null,primary,sources,primary,sources,must,not,be,null,this,primary,sources,new,linked,hash,set,arrays,as,list,primary,sources,this,web,application,type,deduce,web,application,type,set,initializers,collection,get,spring,factories,instances,application,context,initializer,class,set,listeners,collection,get,spring,factories,instances,application,listener,class,this,main,application,class,deduce,main,application,class
SpringApplication -> @SuppressWarnings({ "unchecked", "rawtypes" }) 	public SpringApplication(ResourceLoader resourceLoader, Class<?>... primarySources);1529485904;Create a new {@link SpringApplication} instance. The application context will load_beans from the specified primary sources (see {@link SpringApplication class-level}_documentation for details. The instance can be customized before calling_{@link #run(String...)}._@param resourceLoader the resource loader to use_@param primarySources the primary bean sources_@see #run(Class, String[])_@see #setSources(Set);@SuppressWarnings({ "unchecked", "rawtypes" })_	public SpringApplication(ResourceLoader resourceLoader, Class<?>... primarySources) {_		this.resourceLoader = resourceLoader__		Assert.notNull(primarySources, "PrimarySources must not be null")__		this.primarySources = new LinkedHashSet<>(Arrays.asList(primarySources))__		this.webApplicationType = deduceWebApplicationType()__		setInitializers((Collection) getSpringFactoriesInstances(_				ApplicationContextInitializer.class))__		setListeners((Collection) getSpringFactoriesInstances(ApplicationListener.class))__		this.mainApplicationClass = deduceMainApplicationClass()__	};create,a,new,link,spring,application,instance,the,application,context,will,load,beans,from,the,specified,primary,sources,see,link,spring,application,class,level,documentation,for,details,the,instance,can,be,customized,before,calling,link,run,string,param,resource,loader,the,resource,loader,to,use,param,primary,sources,the,primary,bean,sources,see,run,class,string,see,set,sources,set;suppress,warnings,unchecked,rawtypes,public,spring,application,resource,loader,resource,loader,class,primary,sources,this,resource,loader,resource,loader,assert,not,null,primary,sources,primary,sources,must,not,be,null,this,primary,sources,new,linked,hash,set,arrays,as,list,primary,sources,this,web,application,type,deduce,web,application,type,set,initializers,collection,get,spring,factories,instances,application,context,initializer,class,set,listeners,collection,get,spring,factories,instances,application,listener,class,this,main,application,class,deduce,main,application,class
SpringApplication -> @SuppressWarnings({ "unchecked", "rawtypes" }) 	public SpringApplication(ResourceLoader resourceLoader, Class<?>... primarySources);1531140616;Create a new {@link SpringApplication} instance. The application context will load_beans from the specified primary sources (see {@link SpringApplication class-level}_documentation for details. The instance can be customized before calling_{@link #run(String...)}._@param resourceLoader the resource loader to use_@param primarySources the primary bean sources_@see #run(Class, String[])_@see #setSources(Set);@SuppressWarnings({ "unchecked", "rawtypes" })_	public SpringApplication(ResourceLoader resourceLoader, Class<?>... primarySources) {_		this.resourceLoader = resourceLoader__		Assert.notNull(primarySources, "PrimarySources must not be null")__		this.primarySources = new LinkedHashSet<>(Arrays.asList(primarySources))__		this.webApplicationType = deduceWebApplicationType()__		setInitializers((Collection) getSpringFactoriesInstances(_				ApplicationContextInitializer.class))__		setListeners((Collection) getSpringFactoriesInstances(ApplicationListener.class))__		this.mainApplicationClass = deduceMainApplicationClass()__	};create,a,new,link,spring,application,instance,the,application,context,will,load,beans,from,the,specified,primary,sources,see,link,spring,application,class,level,documentation,for,details,the,instance,can,be,customized,before,calling,link,run,string,param,resource,loader,the,resource,loader,to,use,param,primary,sources,the,primary,bean,sources,see,run,class,string,see,set,sources,set;suppress,warnings,unchecked,rawtypes,public,spring,application,resource,loader,resource,loader,class,primary,sources,this,resource,loader,resource,loader,assert,not,null,primary,sources,primary,sources,must,not,be,null,this,primary,sources,new,linked,hash,set,arrays,as,list,primary,sources,this,web,application,type,deduce,web,application,type,set,initializers,collection,get,spring,factories,instances,application,context,initializer,class,set,listeners,collection,get,spring,factories,instances,application,listener,class,this,main,application,class,deduce,main,application,class
SpringApplication -> @SuppressWarnings({ "unchecked", "rawtypes" }) 	public SpringApplication(ResourceLoader resourceLoader, Class<?>... primarySources);1531155529;Create a new {@link SpringApplication} instance. The application context will load_beans from the specified primary sources (see {@link SpringApplication class-level}_documentation for details. The instance can be customized before calling_{@link #run(String...)}._@param resourceLoader the resource loader to use_@param primarySources the primary bean sources_@see #run(Class, String[])_@see #setSources(Set);@SuppressWarnings({ "unchecked", "rawtypes" })_	public SpringApplication(ResourceLoader resourceLoader, Class<?>... primarySources) {_		this.resourceLoader = resourceLoader__		Assert.notNull(primarySources, "PrimarySources must not be null")__		this.primarySources = new LinkedHashSet<>(Arrays.asList(primarySources))__		this.webApplicationType = deduceWebApplicationType()__		setInitializers((Collection) getSpringFactoriesInstances(_				ApplicationContextInitializer.class))__		setListeners((Collection) getSpringFactoriesInstances(ApplicationListener.class))__		this.mainApplicationClass = deduceMainApplicationClass()__	};create,a,new,link,spring,application,instance,the,application,context,will,load,beans,from,the,specified,primary,sources,see,link,spring,application,class,level,documentation,for,details,the,instance,can,be,customized,before,calling,link,run,string,param,resource,loader,the,resource,loader,to,use,param,primary,sources,the,primary,bean,sources,see,run,class,string,see,set,sources,set;suppress,warnings,unchecked,rawtypes,public,spring,application,resource,loader,resource,loader,class,primary,sources,this,resource,loader,resource,loader,assert,not,null,primary,sources,primary,sources,must,not,be,null,this,primary,sources,new,linked,hash,set,arrays,as,list,primary,sources,this,web,application,type,deduce,web,application,type,set,initializers,collection,get,spring,factories,instances,application,context,initializer,class,set,listeners,collection,get,spring,factories,instances,application,listener,class,this,main,application,class,deduce,main,application,class
SpringApplication -> @SuppressWarnings({ "unchecked", "rawtypes" }) 	public SpringApplication(ResourceLoader resourceLoader, Class<?>... primarySources);1531222098;Create a new {@link SpringApplication} instance. The application context will load_beans from the specified primary sources (see {@link SpringApplication class-level}_documentation for details. The instance can be customized before calling_{@link #run(String...)}._@param resourceLoader the resource loader to use_@param primarySources the primary bean sources_@see #run(Class, String[])_@see #setSources(Set);@SuppressWarnings({ "unchecked", "rawtypes" })_	public SpringApplication(ResourceLoader resourceLoader, Class<?>... primarySources) {_		this.resourceLoader = resourceLoader__		Assert.notNull(primarySources, "PrimarySources must not be null")__		this.primarySources = new LinkedHashSet<>(Arrays.asList(primarySources))__		this.webApplicationType = deduceWebApplicationType()__		setInitializers((Collection) getSpringFactoriesInstances(_				ApplicationContextInitializer.class))__		setListeners((Collection) getSpringFactoriesInstances(ApplicationListener.class))__		this.mainApplicationClass = deduceMainApplicationClass()__	};create,a,new,link,spring,application,instance,the,application,context,will,load,beans,from,the,specified,primary,sources,see,link,spring,application,class,level,documentation,for,details,the,instance,can,be,customized,before,calling,link,run,string,param,resource,loader,the,resource,loader,to,use,param,primary,sources,the,primary,bean,sources,see,run,class,string,see,set,sources,set;suppress,warnings,unchecked,rawtypes,public,spring,application,resource,loader,resource,loader,class,primary,sources,this,resource,loader,resource,loader,assert,not,null,primary,sources,primary,sources,must,not,be,null,this,primary,sources,new,linked,hash,set,arrays,as,list,primary,sources,this,web,application,type,deduce,web,application,type,set,initializers,collection,get,spring,factories,instances,application,context,initializer,class,set,listeners,collection,get,spring,factories,instances,application,listener,class,this,main,application,class,deduce,main,application,class
SpringApplication -> @SuppressWarnings({ "unchecked", "rawtypes" }) 	public SpringApplication(ResourceLoader resourceLoader, Class<?>... primarySources);1532738143;Create a new {@link SpringApplication} instance. The application context will load_beans from the specified primary sources (see {@link SpringApplication class-level}_documentation for details. The instance can be customized before calling_{@link #run(String...)}._@param resourceLoader the resource loader to use_@param primarySources the primary bean sources_@see #run(Class, String[])_@see #setSources(Set);@SuppressWarnings({ "unchecked", "rawtypes" })_	public SpringApplication(ResourceLoader resourceLoader, Class<?>... primarySources) {_		this.resourceLoader = resourceLoader__		Assert.notNull(primarySources, "PrimarySources must not be null")__		this.primarySources = new LinkedHashSet<>(Arrays.asList(primarySources))__		this.webApplicationType = deduceWebApplicationType()__		setInitializers((Collection) getSpringFactoriesInstances(_				ApplicationContextInitializer.class))__		setListeners((Collection) getSpringFactoriesInstances(ApplicationListener.class))__		this.mainApplicationClass = deduceMainApplicationClass()__	};create,a,new,link,spring,application,instance,the,application,context,will,load,beans,from,the,specified,primary,sources,see,link,spring,application,class,level,documentation,for,details,the,instance,can,be,customized,before,calling,link,run,string,param,resource,loader,the,resource,loader,to,use,param,primary,sources,the,primary,bean,sources,see,run,class,string,see,set,sources,set;suppress,warnings,unchecked,rawtypes,public,spring,application,resource,loader,resource,loader,class,primary,sources,this,resource,loader,resource,loader,assert,not,null,primary,sources,primary,sources,must,not,be,null,this,primary,sources,new,linked,hash,set,arrays,as,list,primary,sources,this,web,application,type,deduce,web,application,type,set,initializers,collection,get,spring,factories,instances,application,context,initializer,class,set,listeners,collection,get,spring,factories,instances,application,listener,class,this,main,application,class,deduce,main,application,class
SpringApplication -> @SuppressWarnings({ "unchecked", "rawtypes" }) 	public SpringApplication(ResourceLoader resourceLoader, Class<?>... primarySources);1534188228;Create a new {@link SpringApplication} instance. The application context will load_beans from the specified primary sources (see {@link SpringApplication class-level}_documentation for details. The instance can be customized before calling_{@link #run(String...)}._@param resourceLoader the resource loader to use_@param primarySources the primary bean sources_@see #run(Class, String[])_@see #setSources(Set);@SuppressWarnings({ "unchecked", "rawtypes" })_	public SpringApplication(ResourceLoader resourceLoader, Class<?>... primarySources) {_		this.resourceLoader = resourceLoader__		Assert.notNull(primarySources, "PrimarySources must not be null")__		this.primarySources = new LinkedHashSet<>(Arrays.asList(primarySources))__		this.webApplicationType = deduceWebApplicationType()__		setInitializers((Collection) getSpringFactoriesInstances(_				ApplicationContextInitializer.class))__		setListeners((Collection) getSpringFactoriesInstances(ApplicationListener.class))__		this.mainApplicationClass = deduceMainApplicationClass()__	};create,a,new,link,spring,application,instance,the,application,context,will,load,beans,from,the,specified,primary,sources,see,link,spring,application,class,level,documentation,for,details,the,instance,can,be,customized,before,calling,link,run,string,param,resource,loader,the,resource,loader,to,use,param,primary,sources,the,primary,bean,sources,see,run,class,string,see,set,sources,set;suppress,warnings,unchecked,rawtypes,public,spring,application,resource,loader,resource,loader,class,primary,sources,this,resource,loader,resource,loader,assert,not,null,primary,sources,primary,sources,must,not,be,null,this,primary,sources,new,linked,hash,set,arrays,as,list,primary,sources,this,web,application,type,deduce,web,application,type,set,initializers,collection,get,spring,factories,instances,application,context,initializer,class,set,listeners,collection,get,spring,factories,instances,application,listener,class,this,main,application,class,deduce,main,application,class
SpringApplication -> @SuppressWarnings({ "unchecked", "rawtypes" }) 	public SpringApplication(ResourceLoader resourceLoader, Class<?>... primarySources);1535104170;Create a new {@link SpringApplication} instance. The application context will load_beans from the specified primary sources (see {@link SpringApplication class-level}_documentation for details. The instance can be customized before calling_{@link #run(String...)}._@param resourceLoader the resource loader to use_@param primarySources the primary bean sources_@see #run(Class, String[])_@see #setSources(Set);@SuppressWarnings({ "unchecked", "rawtypes" })_	public SpringApplication(ResourceLoader resourceLoader, Class<?>... primarySources) {_		this.resourceLoader = resourceLoader__		Assert.notNull(primarySources, "PrimarySources must not be null")__		this.primarySources = new LinkedHashSet<>(Arrays.asList(primarySources))__		this.webApplicationType = deduceWebApplicationType()__		setInitializers((Collection) getSpringFactoriesInstances(_				ApplicationContextInitializer.class))__		setListeners((Collection) getSpringFactoriesInstances(ApplicationListener.class))__		this.mainApplicationClass = deduceMainApplicationClass()__	};create,a,new,link,spring,application,instance,the,application,context,will,load,beans,from,the,specified,primary,sources,see,link,spring,application,class,level,documentation,for,details,the,instance,can,be,customized,before,calling,link,run,string,param,resource,loader,the,resource,loader,to,use,param,primary,sources,the,primary,bean,sources,see,run,class,string,see,set,sources,set;suppress,warnings,unchecked,rawtypes,public,spring,application,resource,loader,resource,loader,class,primary,sources,this,resource,loader,resource,loader,assert,not,null,primary,sources,primary,sources,must,not,be,null,this,primary,sources,new,linked,hash,set,arrays,as,list,primary,sources,this,web,application,type,deduce,web,application,type,set,initializers,collection,get,spring,factories,instances,application,context,initializer,class,set,listeners,collection,get,spring,factories,instances,application,listener,class,this,main,application,class,deduce,main,application,class
SpringApplication -> @SuppressWarnings({ "unchecked", "rawtypes" }) 	public SpringApplication(ResourceLoader resourceLoader, Class<?>... primarySources);1536701067;Create a new {@link SpringApplication} instance. The application context will load_beans from the specified primary sources (see {@link SpringApplication class-level}_documentation for details. The instance can be customized before calling_{@link #run(String...)}._@param resourceLoader the resource loader to use_@param primarySources the primary bean sources_@see #run(Class, String[])_@see #setSources(Set);@SuppressWarnings({ "unchecked", "rawtypes" })_	public SpringApplication(ResourceLoader resourceLoader, Class<?>... primarySources) {_		this.resourceLoader = resourceLoader__		Assert.notNull(primarySources, "PrimarySources must not be null")__		this.primarySources = new LinkedHashSet<>(Arrays.asList(primarySources))__		this.webApplicationType = deduceWebApplicationType()__		setInitializers((Collection) getSpringFactoriesInstances(_				ApplicationContextInitializer.class))__		setListeners((Collection) getSpringFactoriesInstances(ApplicationListener.class))__		this.mainApplicationClass = deduceMainApplicationClass()__	};create,a,new,link,spring,application,instance,the,application,context,will,load,beans,from,the,specified,primary,sources,see,link,spring,application,class,level,documentation,for,details,the,instance,can,be,customized,before,calling,link,run,string,param,resource,loader,the,resource,loader,to,use,param,primary,sources,the,primary,bean,sources,see,run,class,string,see,set,sources,set;suppress,warnings,unchecked,rawtypes,public,spring,application,resource,loader,resource,loader,class,primary,sources,this,resource,loader,resource,loader,assert,not,null,primary,sources,primary,sources,must,not,be,null,this,primary,sources,new,linked,hash,set,arrays,as,list,primary,sources,this,web,application,type,deduce,web,application,type,set,initializers,collection,get,spring,factories,instances,application,context,initializer,class,set,listeners,collection,get,spring,factories,instances,application,listener,class,this,main,application,class,deduce,main,application,class
SpringApplication -> @SuppressWarnings({ "unchecked", "rawtypes" }) 	public SpringApplication(ResourceLoader resourceLoader, Class<?>... primarySources);1538570355;Create a new {@link SpringApplication} instance. The application context will load_beans from the specified primary sources (see {@link SpringApplication class-level}_documentation for details. The instance can be customized before calling_{@link #run(String...)}._@param resourceLoader the resource loader to use_@param primarySources the primary bean sources_@see #run(Class, String[])_@see #setSources(Set);@SuppressWarnings({ "unchecked", "rawtypes" })_	public SpringApplication(ResourceLoader resourceLoader, Class<?>... primarySources) {_		this.resourceLoader = resourceLoader__		Assert.notNull(primarySources, "PrimarySources must not be null")__		this.primarySources = new LinkedHashSet<>(Arrays.asList(primarySources))__		this.webApplicationType = deduceWebApplicationType()__		setInitializers((Collection) getSpringFactoriesInstances(_				ApplicationContextInitializer.class))__		setListeners((Collection) getSpringFactoriesInstances(ApplicationListener.class))__		this.mainApplicationClass = deduceMainApplicationClass()__	};create,a,new,link,spring,application,instance,the,application,context,will,load,beans,from,the,specified,primary,sources,see,link,spring,application,class,level,documentation,for,details,the,instance,can,be,customized,before,calling,link,run,string,param,resource,loader,the,resource,loader,to,use,param,primary,sources,the,primary,bean,sources,see,run,class,string,see,set,sources,set;suppress,warnings,unchecked,rawtypes,public,spring,application,resource,loader,resource,loader,class,primary,sources,this,resource,loader,resource,loader,assert,not,null,primary,sources,primary,sources,must,not,be,null,this,primary,sources,new,linked,hash,set,arrays,as,list,primary,sources,this,web,application,type,deduce,web,application,type,set,initializers,collection,get,spring,factories,instances,application,context,initializer,class,set,listeners,collection,get,spring,factories,instances,application,listener,class,this,main,application,class,deduce,main,application,class
SpringApplication -> @SuppressWarnings({ "unchecked", "rawtypes" }) 	public SpringApplication(ResourceLoader resourceLoader, Class<?>... primarySources);1538707540;Create a new {@link SpringApplication} instance. The application context will load_beans from the specified primary sources (see {@link SpringApplication class-level}_documentation for details. The instance can be customized before calling_{@link #run(String...)}._@param resourceLoader the resource loader to use_@param primarySources the primary bean sources_@see #run(Class, String[])_@see #setSources(Set);@SuppressWarnings({ "unchecked", "rawtypes" })_	public SpringApplication(ResourceLoader resourceLoader, Class<?>... primarySources) {_		this.resourceLoader = resourceLoader__		Assert.notNull(primarySources, "PrimarySources must not be null")__		this.primarySources = new LinkedHashSet<>(Arrays.asList(primarySources))__		this.webApplicationType = deduceWebApplicationType()__		setInitializers((Collection) getSpringFactoriesInstances(_				ApplicationContextInitializer.class))__		setListeners((Collection) getSpringFactoriesInstances(ApplicationListener.class))__		this.mainApplicationClass = deduceMainApplicationClass()__	};create,a,new,link,spring,application,instance,the,application,context,will,load,beans,from,the,specified,primary,sources,see,link,spring,application,class,level,documentation,for,details,the,instance,can,be,customized,before,calling,link,run,string,param,resource,loader,the,resource,loader,to,use,param,primary,sources,the,primary,bean,sources,see,run,class,string,see,set,sources,set;suppress,warnings,unchecked,rawtypes,public,spring,application,resource,loader,resource,loader,class,primary,sources,this,resource,loader,resource,loader,assert,not,null,primary,sources,primary,sources,must,not,be,null,this,primary,sources,new,linked,hash,set,arrays,as,list,primary,sources,this,web,application,type,deduce,web,application,type,set,initializers,collection,get,spring,factories,instances,application,context,initializer,class,set,listeners,collection,get,spring,factories,instances,application,listener,class,this,main,application,class,deduce,main,application,class
SpringApplication -> @SuppressWarnings({ "unchecked", "rawtypes" }) 	public SpringApplication(ResourceLoader resourceLoader, Class<?>... primarySources);1538750610;Create a new {@link SpringApplication} instance. The application context will load_beans from the specified primary sources (see {@link SpringApplication class-level}_documentation for details. The instance can be customized before calling_{@link #run(String...)}._@param resourceLoader the resource loader to use_@param primarySources the primary bean sources_@see #run(Class, String[])_@see #setSources(Set);@SuppressWarnings({ "unchecked", "rawtypes" })_	public SpringApplication(ResourceLoader resourceLoader, Class<?>... primarySources) {_		this.resourceLoader = resourceLoader__		Assert.notNull(primarySources, "PrimarySources must not be null")__		this.primarySources = new LinkedHashSet<>(Arrays.asList(primarySources))__		this.webApplicationType = deduceWebApplicationType()__		setInitializers((Collection) getSpringFactoriesInstances(_				ApplicationContextInitializer.class))__		setListeners((Collection) getSpringFactoriesInstances(ApplicationListener.class))__		this.mainApplicationClass = deduceMainApplicationClass()__	};create,a,new,link,spring,application,instance,the,application,context,will,load,beans,from,the,specified,primary,sources,see,link,spring,application,class,level,documentation,for,details,the,instance,can,be,customized,before,calling,link,run,string,param,resource,loader,the,resource,loader,to,use,param,primary,sources,the,primary,bean,sources,see,run,class,string,see,set,sources,set;suppress,warnings,unchecked,rawtypes,public,spring,application,resource,loader,resource,loader,class,primary,sources,this,resource,loader,resource,loader,assert,not,null,primary,sources,primary,sources,must,not,be,null,this,primary,sources,new,linked,hash,set,arrays,as,list,primary,sources,this,web,application,type,deduce,web,application,type,set,initializers,collection,get,spring,factories,instances,application,context,initializer,class,set,listeners,collection,get,spring,factories,instances,application,listener,class,this,main,application,class,deduce,main,application,class
SpringApplication -> @SuppressWarnings({ "unchecked", "rawtypes" }) 	public SpringApplication(ResourceLoader resourceLoader, Class<?>... primarySources);1538771652;Create a new {@link SpringApplication} instance. The application context will load_beans from the specified primary sources (see {@link SpringApplication class-level}_documentation for details. The instance can be customized before calling_{@link #run(String...)}._@param resourceLoader the resource loader to use_@param primarySources the primary bean sources_@see #run(Class, String[])_@see #setSources(Set);@SuppressWarnings({ "unchecked", "rawtypes" })_	public SpringApplication(ResourceLoader resourceLoader, Class<?>... primarySources) {_		this.resourceLoader = resourceLoader__		Assert.notNull(primarySources, "PrimarySources must not be null")__		this.primarySources = new LinkedHashSet<>(Arrays.asList(primarySources))__		this.webApplicationType = WebApplicationType.deduceFromClasspath()__		setInitializers((Collection) getSpringFactoriesInstances(_				ApplicationContextInitializer.class))__		setListeners((Collection) getSpringFactoriesInstances(ApplicationListener.class))__		this.mainApplicationClass = deduceMainApplicationClass()__	};create,a,new,link,spring,application,instance,the,application,context,will,load,beans,from,the,specified,primary,sources,see,link,spring,application,class,level,documentation,for,details,the,instance,can,be,customized,before,calling,link,run,string,param,resource,loader,the,resource,loader,to,use,param,primary,sources,the,primary,bean,sources,see,run,class,string,see,set,sources,set;suppress,warnings,unchecked,rawtypes,public,spring,application,resource,loader,resource,loader,class,primary,sources,this,resource,loader,resource,loader,assert,not,null,primary,sources,primary,sources,must,not,be,null,this,primary,sources,new,linked,hash,set,arrays,as,list,primary,sources,this,web,application,type,web,application,type,deduce,from,classpath,set,initializers,collection,get,spring,factories,instances,application,context,initializer,class,set,listeners,collection,get,spring,factories,instances,application,listener,class,this,main,application,class,deduce,main,application,class
SpringApplication -> @SuppressWarnings({ "unchecked", "rawtypes" }) 	public SpringApplication(ResourceLoader resourceLoader, Class<?>... primarySources);1540419762;Create a new {@link SpringApplication} instance. The application context will load_beans from the specified primary sources (see {@link SpringApplication class-level}_documentation for details. The instance can be customized before calling_{@link #run(String...)}._@param resourceLoader the resource loader to use_@param primarySources the primary bean sources_@see #run(Class, String[])_@see #setSources(Set);@SuppressWarnings({ "unchecked", "rawtypes" })_	public SpringApplication(ResourceLoader resourceLoader, Class<?>... primarySources) {_		this.resourceLoader = resourceLoader__		Assert.notNull(primarySources, "PrimarySources must not be null")__		this.primarySources = new LinkedHashSet<>(Arrays.asList(primarySources))__		this.webApplicationType = WebApplicationType.deduceFromClasspath()__		setInitializers((Collection) getSpringFactoriesInstances(_				ApplicationContextInitializer.class))__		setListeners((Collection) getSpringFactoriesInstances(ApplicationListener.class))__		this.mainApplicationClass = deduceMainApplicationClass()__	};create,a,new,link,spring,application,instance,the,application,context,will,load,beans,from,the,specified,primary,sources,see,link,spring,application,class,level,documentation,for,details,the,instance,can,be,customized,before,calling,link,run,string,param,resource,loader,the,resource,loader,to,use,param,primary,sources,the,primary,bean,sources,see,run,class,string,see,set,sources,set;suppress,warnings,unchecked,rawtypes,public,spring,application,resource,loader,resource,loader,class,primary,sources,this,resource,loader,resource,loader,assert,not,null,primary,sources,primary,sources,must,not,be,null,this,primary,sources,new,linked,hash,set,arrays,as,list,primary,sources,this,web,application,type,web,application,type,deduce,from,classpath,set,initializers,collection,get,spring,factories,instances,application,context,initializer,class,set,listeners,collection,get,spring,factories,instances,application,listener,class,this,main,application,class,deduce,main,application,class
SpringApplication -> @SuppressWarnings({ "unchecked", "rawtypes" }) 	public SpringApplication(ResourceLoader resourceLoader, Class<?>... primarySources);1541060131;Create a new {@link SpringApplication} instance. The application context will load_beans from the specified primary sources (see {@link SpringApplication class-level}_documentation for details. The instance can be customized before calling_{@link #run(String...)}._@param resourceLoader the resource loader to use_@param primarySources the primary bean sources_@see #run(Class, String[])_@see #setSources(Set);@SuppressWarnings({ "unchecked", "rawtypes" })_	public SpringApplication(ResourceLoader resourceLoader, Class<?>... primarySources) {_		this.resourceLoader = resourceLoader__		Assert.notNull(primarySources, "PrimarySources must not be null")__		this.primarySources = new LinkedHashSet<>(Arrays.asList(primarySources))__		this.webApplicationType = WebApplicationType.deduceFromClasspath()__		setInitializers((Collection) getSpringFactoriesInstances(_				ApplicationContextInitializer.class))__		setListeners((Collection) getSpringFactoriesInstances(ApplicationListener.class))__		this.mainApplicationClass = deduceMainApplicationClass()__	};create,a,new,link,spring,application,instance,the,application,context,will,load,beans,from,the,specified,primary,sources,see,link,spring,application,class,level,documentation,for,details,the,instance,can,be,customized,before,calling,link,run,string,param,resource,loader,the,resource,loader,to,use,param,primary,sources,the,primary,bean,sources,see,run,class,string,see,set,sources,set;suppress,warnings,unchecked,rawtypes,public,spring,application,resource,loader,resource,loader,class,primary,sources,this,resource,loader,resource,loader,assert,not,null,primary,sources,primary,sources,must,not,be,null,this,primary,sources,new,linked,hash,set,arrays,as,list,primary,sources,this,web,application,type,web,application,type,deduce,from,classpath,set,initializers,collection,get,spring,factories,instances,application,context,initializer,class,set,listeners,collection,get,spring,factories,instances,application,listener,class,this,main,application,class,deduce,main,application,class
SpringApplication -> @SuppressWarnings({ "unchecked", "rawtypes" }) 	public SpringApplication(ResourceLoader resourceLoader, Class<?>... primarySources);1546943477;Create a new {@link SpringApplication} instance. The application context will load_beans from the specified primary sources (see {@link SpringApplication class-level}_documentation for details. The instance can be customized before calling_{@link #run(String...)}._@param resourceLoader the resource loader to use_@param primarySources the primary bean sources_@see #run(Class, String[])_@see #setSources(Set);@SuppressWarnings({ "unchecked", "rawtypes" })_	public SpringApplication(ResourceLoader resourceLoader, Class<?>... primarySources) {_		this.resourceLoader = resourceLoader__		Assert.notNull(primarySources, "PrimarySources must not be null")__		this.primarySources = new LinkedHashSet<>(Arrays.asList(primarySources))__		this.webApplicationType = WebApplicationType.deduceFromClasspath()__		setInitializers((Collection) getSpringFactoriesInstances(_				ApplicationContextInitializer.class))__		setListeners((Collection) getSpringFactoriesInstances(ApplicationListener.class))__		this.mainApplicationClass = deduceMainApplicationClass()__	};create,a,new,link,spring,application,instance,the,application,context,will,load,beans,from,the,specified,primary,sources,see,link,spring,application,class,level,documentation,for,details,the,instance,can,be,customized,before,calling,link,run,string,param,resource,loader,the,resource,loader,to,use,param,primary,sources,the,primary,bean,sources,see,run,class,string,see,set,sources,set;suppress,warnings,unchecked,rawtypes,public,spring,application,resource,loader,resource,loader,class,primary,sources,this,resource,loader,resource,loader,assert,not,null,primary,sources,primary,sources,must,not,be,null,this,primary,sources,new,linked,hash,set,arrays,as,list,primary,sources,this,web,application,type,web,application,type,deduce,from,classpath,set,initializers,collection,get,spring,factories,instances,application,context,initializer,class,set,listeners,collection,get,spring,factories,instances,application,listener,class,this,main,application,class,deduce,main,application,class
SpringApplication -> @SuppressWarnings({ "unchecked", "rawtypes" }) 	public SpringApplication(ResourceLoader resourceLoader, Class<?>... primarySources);1549791353;Create a new {@link SpringApplication} instance. The application context will load_beans from the specified primary sources (see {@link SpringApplication class-level}_documentation for details. The instance can be customized before calling_{@link #run(String...)}._@param resourceLoader the resource loader to use_@param primarySources the primary bean sources_@see #run(Class, String[])_@see #setSources(Set);@SuppressWarnings({ "unchecked", "rawtypes" })_	public SpringApplication(ResourceLoader resourceLoader, Class<?>... primarySources) {_		this.resourceLoader = resourceLoader__		Assert.notNull(primarySources, "PrimarySources must not be null")__		this.primarySources = new LinkedHashSet<>(Arrays.asList(primarySources))__		this.webApplicationType = WebApplicationType.deduceFromClasspath()__		setInitializers((Collection) getSpringFactoriesInstances(_				ApplicationContextInitializer.class))__		setListeners((Collection) getSpringFactoriesInstances(ApplicationListener.class))__		this.mainApplicationClass = deduceMainApplicationClass()__	};create,a,new,link,spring,application,instance,the,application,context,will,load,beans,from,the,specified,primary,sources,see,link,spring,application,class,level,documentation,for,details,the,instance,can,be,customized,before,calling,link,run,string,param,resource,loader,the,resource,loader,to,use,param,primary,sources,the,primary,bean,sources,see,run,class,string,see,set,sources,set;suppress,warnings,unchecked,rawtypes,public,spring,application,resource,loader,resource,loader,class,primary,sources,this,resource,loader,resource,loader,assert,not,null,primary,sources,primary,sources,must,not,be,null,this,primary,sources,new,linked,hash,set,arrays,as,list,primary,sources,this,web,application,type,web,application,type,deduce,from,classpath,set,initializers,collection,get,spring,factories,instances,application,context,initializer,class,set,listeners,collection,get,spring,factories,instances,application,listener,class,this,main,application,class,deduce,main,application,class
SpringApplication -> @SuppressWarnings({ "unchecked", "rawtypes" }) 	public SpringApplication(ResourceLoader resourceLoader, Class<?>... primarySources);1550148109;Create a new {@link SpringApplication} instance. The application context will load_beans from the specified primary sources (see {@link SpringApplication class-level}_documentation for details. The instance can be customized before calling_{@link #run(String...)}._@param resourceLoader the resource loader to use_@param primarySources the primary bean sources_@see #run(Class, String[])_@see #setSources(Set);@SuppressWarnings({ "unchecked", "rawtypes" })_	public SpringApplication(ResourceLoader resourceLoader, Class<?>... primarySources) {_		this.resourceLoader = resourceLoader__		Assert.notNull(primarySources, "PrimarySources must not be null")__		this.primarySources = new LinkedHashSet<>(Arrays.asList(primarySources))__		this.webApplicationType = WebApplicationType.deduceFromClasspath()__		setInitializers((Collection) getSpringFactoriesInstances(_				ApplicationContextInitializer.class))__		setListeners((Collection) getSpringFactoriesInstances(ApplicationListener.class))__		this.mainApplicationClass = deduceMainApplicationClass()__	};create,a,new,link,spring,application,instance,the,application,context,will,load,beans,from,the,specified,primary,sources,see,link,spring,application,class,level,documentation,for,details,the,instance,can,be,customized,before,calling,link,run,string,param,resource,loader,the,resource,loader,to,use,param,primary,sources,the,primary,bean,sources,see,run,class,string,see,set,sources,set;suppress,warnings,unchecked,rawtypes,public,spring,application,resource,loader,resource,loader,class,primary,sources,this,resource,loader,resource,loader,assert,not,null,primary,sources,primary,sources,must,not,be,null,this,primary,sources,new,linked,hash,set,arrays,as,list,primary,sources,this,web,application,type,web,application,type,deduce,from,classpath,set,initializers,collection,get,spring,factories,instances,application,context,initializer,class,set,listeners,collection,get,spring,factories,instances,application,listener,class,this,main,application,class,deduce,main,application,class
SpringApplication -> public void setAllowBeanDefinitionOverriding(boolean allowBeanDefinitionOverriding);1531140616;Sets if bean definition overriding, by registering a definition with the same name_as an existing definition, should be allowed. Defaults to {@code false}._@param allowBeanDefinitionOverriding if overriding is allowed_@since 2.1_@see DefaultListableBeanFactory#setAllowBeanDefinitionOverriding(boolean);public void setAllowBeanDefinitionOverriding(boolean allowBeanDefinitionOverriding) {_		this.allowBeanDefinitionOverriding = allowBeanDefinitionOverriding__	};sets,if,bean,definition,overriding,by,registering,a,definition,with,the,same,name,as,an,existing,definition,should,be,allowed,defaults,to,code,false,param,allow,bean,definition,overriding,if,overriding,is,allowed,since,2,1,see,default,listable,bean,factory,set,allow,bean,definition,overriding,boolean;public,void,set,allow,bean,definition,overriding,boolean,allow,bean,definition,overriding,this,allow,bean,definition,overriding,allow,bean,definition,overriding
SpringApplication -> public void setAllowBeanDefinitionOverriding(boolean allowBeanDefinitionOverriding);1531222098;Sets if bean definition overriding, by registering a definition with the same name_as an existing definition, should be allowed. Defaults to {@code false}._@param allowBeanDefinitionOverriding if overriding is allowed_@since 2.1_@see DefaultListableBeanFactory#setAllowBeanDefinitionOverriding(boolean);public void setAllowBeanDefinitionOverriding(boolean allowBeanDefinitionOverriding) {_		this.allowBeanDefinitionOverriding = allowBeanDefinitionOverriding__	};sets,if,bean,definition,overriding,by,registering,a,definition,with,the,same,name,as,an,existing,definition,should,be,allowed,defaults,to,code,false,param,allow,bean,definition,overriding,if,overriding,is,allowed,since,2,1,see,default,listable,bean,factory,set,allow,bean,definition,overriding,boolean;public,void,set,allow,bean,definition,overriding,boolean,allow,bean,definition,overriding,this,allow,bean,definition,overriding,allow,bean,definition,overriding
SpringApplication -> public void setAllowBeanDefinitionOverriding(boolean allowBeanDefinitionOverriding);1532738143;Sets if bean definition overriding, by registering a definition with the same name_as an existing definition, should be allowed. Defaults to {@code false}._@param allowBeanDefinitionOverriding if overriding is allowed_@since 2.1_@see DefaultListableBeanFactory#setAllowBeanDefinitionOverriding(boolean);public void setAllowBeanDefinitionOverriding(boolean allowBeanDefinitionOverriding) {_		this.allowBeanDefinitionOverriding = allowBeanDefinitionOverriding__	};sets,if,bean,definition,overriding,by,registering,a,definition,with,the,same,name,as,an,existing,definition,should,be,allowed,defaults,to,code,false,param,allow,bean,definition,overriding,if,overriding,is,allowed,since,2,1,see,default,listable,bean,factory,set,allow,bean,definition,overriding,boolean;public,void,set,allow,bean,definition,overriding,boolean,allow,bean,definition,overriding,this,allow,bean,definition,overriding,allow,bean,definition,overriding
SpringApplication -> public void setAllowBeanDefinitionOverriding(boolean allowBeanDefinitionOverriding);1534188228;Sets if bean definition overriding, by registering a definition with the same name_as an existing definition, should be allowed. Defaults to {@code false}._@param allowBeanDefinitionOverriding if overriding is allowed_@since 2.1_@see DefaultListableBeanFactory#setAllowBeanDefinitionOverriding(boolean);public void setAllowBeanDefinitionOverriding(boolean allowBeanDefinitionOverriding) {_		this.allowBeanDefinitionOverriding = allowBeanDefinitionOverriding__	};sets,if,bean,definition,overriding,by,registering,a,definition,with,the,same,name,as,an,existing,definition,should,be,allowed,defaults,to,code,false,param,allow,bean,definition,overriding,if,overriding,is,allowed,since,2,1,see,default,listable,bean,factory,set,allow,bean,definition,overriding,boolean;public,void,set,allow,bean,definition,overriding,boolean,allow,bean,definition,overriding,this,allow,bean,definition,overriding,allow,bean,definition,overriding
SpringApplication -> public void setAllowBeanDefinitionOverriding(boolean allowBeanDefinitionOverriding);1535104170;Sets if bean definition overriding, by registering a definition with the same name_as an existing definition, should be allowed. Defaults to {@code false}._@param allowBeanDefinitionOverriding if overriding is allowed_@since 2.1_@see DefaultListableBeanFactory#setAllowBeanDefinitionOverriding(boolean);public void setAllowBeanDefinitionOverriding(boolean allowBeanDefinitionOverriding) {_		this.allowBeanDefinitionOverriding = allowBeanDefinitionOverriding__	};sets,if,bean,definition,overriding,by,registering,a,definition,with,the,same,name,as,an,existing,definition,should,be,allowed,defaults,to,code,false,param,allow,bean,definition,overriding,if,overriding,is,allowed,since,2,1,see,default,listable,bean,factory,set,allow,bean,definition,overriding,boolean;public,void,set,allow,bean,definition,overriding,boolean,allow,bean,definition,overriding,this,allow,bean,definition,overriding,allow,bean,definition,overriding
SpringApplication -> public void setAllowBeanDefinitionOverriding(boolean allowBeanDefinitionOverriding);1536701067;Sets if bean definition overriding, by registering a definition with the same name_as an existing definition, should be allowed. Defaults to {@code false}._@param allowBeanDefinitionOverriding if overriding is allowed_@since 2.1_@see DefaultListableBeanFactory#setAllowBeanDefinitionOverriding(boolean);public void setAllowBeanDefinitionOverriding(boolean allowBeanDefinitionOverriding) {_		this.allowBeanDefinitionOverriding = allowBeanDefinitionOverriding__	};sets,if,bean,definition,overriding,by,registering,a,definition,with,the,same,name,as,an,existing,definition,should,be,allowed,defaults,to,code,false,param,allow,bean,definition,overriding,if,overriding,is,allowed,since,2,1,see,default,listable,bean,factory,set,allow,bean,definition,overriding,boolean;public,void,set,allow,bean,definition,overriding,boolean,allow,bean,definition,overriding,this,allow,bean,definition,overriding,allow,bean,definition,overriding
SpringApplication -> public void setAllowBeanDefinitionOverriding(boolean allowBeanDefinitionOverriding);1538570355;Sets if bean definition overriding, by registering a definition with the same name_as an existing definition, should be allowed. Defaults to {@code false}._@param allowBeanDefinitionOverriding if overriding is allowed_@since 2.1_@see DefaultListableBeanFactory#setAllowBeanDefinitionOverriding(boolean);public void setAllowBeanDefinitionOverriding(boolean allowBeanDefinitionOverriding) {_		this.allowBeanDefinitionOverriding = allowBeanDefinitionOverriding__	};sets,if,bean,definition,overriding,by,registering,a,definition,with,the,same,name,as,an,existing,definition,should,be,allowed,defaults,to,code,false,param,allow,bean,definition,overriding,if,overriding,is,allowed,since,2,1,see,default,listable,bean,factory,set,allow,bean,definition,overriding,boolean;public,void,set,allow,bean,definition,overriding,boolean,allow,bean,definition,overriding,this,allow,bean,definition,overriding,allow,bean,definition,overriding
SpringApplication -> public void setAllowBeanDefinitionOverriding(boolean allowBeanDefinitionOverriding);1538707540;Sets if bean definition overriding, by registering a definition with the same name_as an existing definition, should be allowed. Defaults to {@code false}._@param allowBeanDefinitionOverriding if overriding is allowed_@since 2.1_@see DefaultListableBeanFactory#setAllowBeanDefinitionOverriding(boolean);public void setAllowBeanDefinitionOverriding(boolean allowBeanDefinitionOverriding) {_		this.allowBeanDefinitionOverriding = allowBeanDefinitionOverriding__	};sets,if,bean,definition,overriding,by,registering,a,definition,with,the,same,name,as,an,existing,definition,should,be,allowed,defaults,to,code,false,param,allow,bean,definition,overriding,if,overriding,is,allowed,since,2,1,see,default,listable,bean,factory,set,allow,bean,definition,overriding,boolean;public,void,set,allow,bean,definition,overriding,boolean,allow,bean,definition,overriding,this,allow,bean,definition,overriding,allow,bean,definition,overriding
SpringApplication -> public void setAllowBeanDefinitionOverriding(boolean allowBeanDefinitionOverriding);1538750610;Sets if bean definition overriding, by registering a definition with the same name_as an existing definition, should be allowed. Defaults to {@code false}._@param allowBeanDefinitionOverriding if overriding is allowed_@since 2.1_@see DefaultListableBeanFactory#setAllowBeanDefinitionOverriding(boolean);public void setAllowBeanDefinitionOverriding(boolean allowBeanDefinitionOverriding) {_		this.allowBeanDefinitionOverriding = allowBeanDefinitionOverriding__	};sets,if,bean,definition,overriding,by,registering,a,definition,with,the,same,name,as,an,existing,definition,should,be,allowed,defaults,to,code,false,param,allow,bean,definition,overriding,if,overriding,is,allowed,since,2,1,see,default,listable,bean,factory,set,allow,bean,definition,overriding,boolean;public,void,set,allow,bean,definition,overriding,boolean,allow,bean,definition,overriding,this,allow,bean,definition,overriding,allow,bean,definition,overriding
SpringApplication -> public void setAllowBeanDefinitionOverriding(boolean allowBeanDefinitionOverriding);1538771652;Sets if bean definition overriding, by registering a definition with the same name_as an existing definition, should be allowed. Defaults to {@code false}._@param allowBeanDefinitionOverriding if overriding is allowed_@since 2.1_@see DefaultListableBeanFactory#setAllowBeanDefinitionOverriding(boolean);public void setAllowBeanDefinitionOverriding(boolean allowBeanDefinitionOverriding) {_		this.allowBeanDefinitionOverriding = allowBeanDefinitionOverriding__	};sets,if,bean,definition,overriding,by,registering,a,definition,with,the,same,name,as,an,existing,definition,should,be,allowed,defaults,to,code,false,param,allow,bean,definition,overriding,if,overriding,is,allowed,since,2,1,see,default,listable,bean,factory,set,allow,bean,definition,overriding,boolean;public,void,set,allow,bean,definition,overriding,boolean,allow,bean,definition,overriding,this,allow,bean,definition,overriding,allow,bean,definition,overriding
SpringApplication -> public void setAllowBeanDefinitionOverriding(boolean allowBeanDefinitionOverriding);1540419762;Sets if bean definition overriding, by registering a definition with the same name_as an existing definition, should be allowed. Defaults to {@code false}._@param allowBeanDefinitionOverriding if overriding is allowed_@since 2.1_@see DefaultListableBeanFactory#setAllowBeanDefinitionOverriding(boolean);public void setAllowBeanDefinitionOverriding(boolean allowBeanDefinitionOverriding) {_		this.allowBeanDefinitionOverriding = allowBeanDefinitionOverriding__	};sets,if,bean,definition,overriding,by,registering,a,definition,with,the,same,name,as,an,existing,definition,should,be,allowed,defaults,to,code,false,param,allow,bean,definition,overriding,if,overriding,is,allowed,since,2,1,see,default,listable,bean,factory,set,allow,bean,definition,overriding,boolean;public,void,set,allow,bean,definition,overriding,boolean,allow,bean,definition,overriding,this,allow,bean,definition,overriding,allow,bean,definition,overriding
SpringApplication -> public void setAllowBeanDefinitionOverriding(boolean allowBeanDefinitionOverriding);1541060131;Sets if bean definition overriding, by registering a definition with the same name_as an existing definition, should be allowed. Defaults to {@code false}._@param allowBeanDefinitionOverriding if overriding is allowed_@since 2.1_@see DefaultListableBeanFactory#setAllowBeanDefinitionOverriding(boolean);public void setAllowBeanDefinitionOverriding(boolean allowBeanDefinitionOverriding) {_		this.allowBeanDefinitionOverriding = allowBeanDefinitionOverriding__	};sets,if,bean,definition,overriding,by,registering,a,definition,with,the,same,name,as,an,existing,definition,should,be,allowed,defaults,to,code,false,param,allow,bean,definition,overriding,if,overriding,is,allowed,since,2,1,see,default,listable,bean,factory,set,allow,bean,definition,overriding,boolean;public,void,set,allow,bean,definition,overriding,boolean,allow,bean,definition,overriding,this,allow,bean,definition,overriding,allow,bean,definition,overriding
SpringApplication -> public void setAllowBeanDefinitionOverriding(boolean allowBeanDefinitionOverriding);1546943477;Sets if bean definition overriding, by registering a definition with the same name_as an existing definition, should be allowed. Defaults to {@code false}._@param allowBeanDefinitionOverriding if overriding is allowed_@since 2.1_@see DefaultListableBeanFactory#setAllowBeanDefinitionOverriding(boolean);public void setAllowBeanDefinitionOverriding(boolean allowBeanDefinitionOverriding) {_		this.allowBeanDefinitionOverriding = allowBeanDefinitionOverriding__	};sets,if,bean,definition,overriding,by,registering,a,definition,with,the,same,name,as,an,existing,definition,should,be,allowed,defaults,to,code,false,param,allow,bean,definition,overriding,if,overriding,is,allowed,since,2,1,see,default,listable,bean,factory,set,allow,bean,definition,overriding,boolean;public,void,set,allow,bean,definition,overriding,boolean,allow,bean,definition,overriding,this,allow,bean,definition,overriding,allow,bean,definition,overriding
SpringApplication -> public void setAllowBeanDefinitionOverriding(boolean allowBeanDefinitionOverriding);1549791353;Sets if bean definition overriding, by registering a definition with the same name_as an existing definition, should be allowed. Defaults to {@code false}._@param allowBeanDefinitionOverriding if overriding is allowed_@since 2.1_@see DefaultListableBeanFactory#setAllowBeanDefinitionOverriding(boolean);public void setAllowBeanDefinitionOverriding(boolean allowBeanDefinitionOverriding) {_		this.allowBeanDefinitionOverriding = allowBeanDefinitionOverriding__	};sets,if,bean,definition,overriding,by,registering,a,definition,with,the,same,name,as,an,existing,definition,should,be,allowed,defaults,to,code,false,param,allow,bean,definition,overriding,if,overriding,is,allowed,since,2,1,see,default,listable,bean,factory,set,allow,bean,definition,overriding,boolean;public,void,set,allow,bean,definition,overriding,boolean,allow,bean,definition,overriding,this,allow,bean,definition,overriding,allow,bean,definition,overriding
SpringApplication -> public void setAllowBeanDefinitionOverriding(boolean allowBeanDefinitionOverriding);1550148109;Sets if bean definition overriding, by registering a definition with the same name_as an existing definition, should be allowed. Defaults to {@code false}._@param allowBeanDefinitionOverriding if overriding is allowed_@since 2.1_@see DefaultListableBeanFactory#setAllowBeanDefinitionOverriding(boolean);public void setAllowBeanDefinitionOverriding(boolean allowBeanDefinitionOverriding) {_		this.allowBeanDefinitionOverriding = allowBeanDefinitionOverriding__	};sets,if,bean,definition,overriding,by,registering,a,definition,with,the,same,name,as,an,existing,definition,should,be,allowed,defaults,to,code,false,param,allow,bean,definition,overriding,if,overriding,is,allowed,since,2,1,see,default,listable,bean,factory,set,allow,bean,definition,overriding,boolean;public,void,set,allow,bean,definition,overriding,boolean,allow,bean,definition,overriding,this,allow,bean,definition,overriding,allow,bean,definition,overriding
SpringApplication -> protected void afterRefresh(ConfigurableApplicationContext context, 			ApplicationArguments args);1507173536;Called after the context has been refreshed._@param context the application context_@param args the application arguments;protected void afterRefresh(ConfigurableApplicationContext context,_			ApplicationArguments args) {_		callRunners(context, args)__	};called,after,the,context,has,been,refreshed,param,context,the,application,context,param,args,the,application,arguments;protected,void,after,refresh,configurable,application,context,context,application,arguments,args,call,runners,context,args
SpringApplication -> protected void afterRefresh(ConfigurableApplicationContext context, 			ApplicationArguments args);1509381678;Called after the context has been refreshed._@param context the application context_@param args the application arguments;protected void afterRefresh(ConfigurableApplicationContext context,_			ApplicationArguments args) {_	};called,after,the,context,has,been,refreshed,param,context,the,application,context,param,args,the,application,arguments;protected,void,after,refresh,configurable,application,context,context,application,arguments,args
SpringApplication -> protected void afterRefresh(ConfigurableApplicationContext context, 			ApplicationArguments args);1510995225;Called after the context has been refreshed._@param context the application context_@param args the application arguments;protected void afterRefresh(ConfigurableApplicationContext context,_			ApplicationArguments args) {_	};called,after,the,context,has,been,refreshed,param,context,the,application,context,param,args,the,application,arguments;protected,void,after,refresh,configurable,application,context,context,application,arguments,args
SpringApplication -> protected void afterRefresh(ConfigurableApplicationContext context, 			ApplicationArguments args);1515670013;Called after the context has been refreshed._@param context the application context_@param args the application arguments;protected void afterRefresh(ConfigurableApplicationContext context,_			ApplicationArguments args) {_	};called,after,the,context,has,been,refreshed,param,context,the,application,context,param,args,the,application,arguments;protected,void,after,refresh,configurable,application,context,context,application,arguments,args
SpringApplication -> protected void afterRefresh(ConfigurableApplicationContext context, 			ApplicationArguments args);1519362690;Called after the context has been refreshed._@param context the application context_@param args the application arguments;protected void afterRefresh(ConfigurableApplicationContext context,_			ApplicationArguments args) {_	};called,after,the,context,has,been,refreshed,param,context,the,application,context,param,args,the,application,arguments;protected,void,after,refresh,configurable,application,context,context,application,arguments,args
SpringApplication -> protected void afterRefresh(ConfigurableApplicationContext context, 			ApplicationArguments args);1522251721;Called after the context has been refreshed._@param context the application context_@param args the application arguments;protected void afterRefresh(ConfigurableApplicationContext context,_			ApplicationArguments args) {_	};called,after,the,context,has,been,refreshed,param,context,the,application,context,param,args,the,application,arguments;protected,void,after,refresh,configurable,application,context,context,application,arguments,args
SpringApplication -> protected void afterRefresh(ConfigurableApplicationContext context, 			ApplicationArguments args);1525376698;Called after the context has been refreshed._@param context the application context_@param args the application arguments;protected void afterRefresh(ConfigurableApplicationContext context,_			ApplicationArguments args) {_	};called,after,the,context,has,been,refreshed,param,context,the,application,context,param,args,the,application,arguments;protected,void,after,refresh,configurable,application,context,context,application,arguments,args
SpringApplication -> protected void afterRefresh(ConfigurableApplicationContext context, 			ApplicationArguments args);1525416882;Called after the context has been refreshed._@param context the application context_@param args the application arguments;protected void afterRefresh(ConfigurableApplicationContext context,_			ApplicationArguments args) {_	};called,after,the,context,has,been,refreshed,param,context,the,application,context,param,args,the,application,arguments;protected,void,after,refresh,configurable,application,context,context,application,arguments,args
SpringApplication -> protected void afterRefresh(ConfigurableApplicationContext context, 			ApplicationArguments args);1526993305;Called after the context has been refreshed._@param context the application context_@param args the application arguments;protected void afterRefresh(ConfigurableApplicationContext context,_			ApplicationArguments args) {_	};called,after,the,context,has,been,refreshed,param,context,the,application,context,param,args,the,application,arguments;protected,void,after,refresh,configurable,application,context,context,application,arguments,args
SpringApplication -> protected void afterRefresh(ConfigurableApplicationContext context, 			ApplicationArguments args);1529485904;Called after the context has been refreshed._@param context the application context_@param args the application arguments;protected void afterRefresh(ConfigurableApplicationContext context,_			ApplicationArguments args) {_	};called,after,the,context,has,been,refreshed,param,context,the,application,context,param,args,the,application,arguments;protected,void,after,refresh,configurable,application,context,context,application,arguments,args
SpringApplication -> protected void afterRefresh(ConfigurableApplicationContext context, 			ApplicationArguments args);1531140616;Called after the context has been refreshed._@param context the application context_@param args the application arguments;protected void afterRefresh(ConfigurableApplicationContext context,_			ApplicationArguments args) {_	};called,after,the,context,has,been,refreshed,param,context,the,application,context,param,args,the,application,arguments;protected,void,after,refresh,configurable,application,context,context,application,arguments,args
SpringApplication -> protected void afterRefresh(ConfigurableApplicationContext context, 			ApplicationArguments args);1531155529;Called after the context has been refreshed._@param context the application context_@param args the application arguments;protected void afterRefresh(ConfigurableApplicationContext context,_			ApplicationArguments args) {_	};called,after,the,context,has,been,refreshed,param,context,the,application,context,param,args,the,application,arguments;protected,void,after,refresh,configurable,application,context,context,application,arguments,args
SpringApplication -> protected void afterRefresh(ConfigurableApplicationContext context, 			ApplicationArguments args);1531222098;Called after the context has been refreshed._@param context the application context_@param args the application arguments;protected void afterRefresh(ConfigurableApplicationContext context,_			ApplicationArguments args) {_	};called,after,the,context,has,been,refreshed,param,context,the,application,context,param,args,the,application,arguments;protected,void,after,refresh,configurable,application,context,context,application,arguments,args
SpringApplication -> protected void afterRefresh(ConfigurableApplicationContext context, 			ApplicationArguments args);1532738143;Called after the context has been refreshed._@param context the application context_@param args the application arguments;protected void afterRefresh(ConfigurableApplicationContext context,_			ApplicationArguments args) {_	};called,after,the,context,has,been,refreshed,param,context,the,application,context,param,args,the,application,arguments;protected,void,after,refresh,configurable,application,context,context,application,arguments,args
SpringApplication -> protected void afterRefresh(ConfigurableApplicationContext context, 			ApplicationArguments args);1534188228;Called after the context has been refreshed._@param context the application context_@param args the application arguments;protected void afterRefresh(ConfigurableApplicationContext context,_			ApplicationArguments args) {_	};called,after,the,context,has,been,refreshed,param,context,the,application,context,param,args,the,application,arguments;protected,void,after,refresh,configurable,application,context,context,application,arguments,args
SpringApplication -> protected void afterRefresh(ConfigurableApplicationContext context, 			ApplicationArguments args);1535104170;Called after the context has been refreshed._@param context the application context_@param args the application arguments;protected void afterRefresh(ConfigurableApplicationContext context,_			ApplicationArguments args) {_	};called,after,the,context,has,been,refreshed,param,context,the,application,context,param,args,the,application,arguments;protected,void,after,refresh,configurable,application,context,context,application,arguments,args
SpringApplication -> protected void afterRefresh(ConfigurableApplicationContext context, 			ApplicationArguments args);1536701067;Called after the context has been refreshed._@param context the application context_@param args the application arguments;protected void afterRefresh(ConfigurableApplicationContext context,_			ApplicationArguments args) {_	};called,after,the,context,has,been,refreshed,param,context,the,application,context,param,args,the,application,arguments;protected,void,after,refresh,configurable,application,context,context,application,arguments,args
SpringApplication -> protected void afterRefresh(ConfigurableApplicationContext context, 			ApplicationArguments args);1538570355;Called after the context has been refreshed._@param context the application context_@param args the application arguments;protected void afterRefresh(ConfigurableApplicationContext context,_			ApplicationArguments args) {_	};called,after,the,context,has,been,refreshed,param,context,the,application,context,param,args,the,application,arguments;protected,void,after,refresh,configurable,application,context,context,application,arguments,args
SpringApplication -> protected void afterRefresh(ConfigurableApplicationContext context, 			ApplicationArguments args);1538707540;Called after the context has been refreshed._@param context the application context_@param args the application arguments;protected void afterRefresh(ConfigurableApplicationContext context,_			ApplicationArguments args) {_	};called,after,the,context,has,been,refreshed,param,context,the,application,context,param,args,the,application,arguments;protected,void,after,refresh,configurable,application,context,context,application,arguments,args
SpringApplication -> protected void afterRefresh(ConfigurableApplicationContext context, 			ApplicationArguments args);1538750610;Called after the context has been refreshed._@param context the application context_@param args the application arguments;protected void afterRefresh(ConfigurableApplicationContext context,_			ApplicationArguments args) {_	};called,after,the,context,has,been,refreshed,param,context,the,application,context,param,args,the,application,arguments;protected,void,after,refresh,configurable,application,context,context,application,arguments,args
SpringApplication -> protected void afterRefresh(ConfigurableApplicationContext context, 			ApplicationArguments args);1538771652;Called after the context has been refreshed._@param context the application context_@param args the application arguments;protected void afterRefresh(ConfigurableApplicationContext context,_			ApplicationArguments args) {_	};called,after,the,context,has,been,refreshed,param,context,the,application,context,param,args,the,application,arguments;protected,void,after,refresh,configurable,application,context,context,application,arguments,args
SpringApplication -> protected void afterRefresh(ConfigurableApplicationContext context, 			ApplicationArguments args);1540419762;Called after the context has been refreshed._@param context the application context_@param args the application arguments;protected void afterRefresh(ConfigurableApplicationContext context,_			ApplicationArguments args) {_	};called,after,the,context,has,been,refreshed,param,context,the,application,context,param,args,the,application,arguments;protected,void,after,refresh,configurable,application,context,context,application,arguments,args
SpringApplication -> protected void afterRefresh(ConfigurableApplicationContext context, 			ApplicationArguments args);1541060131;Called after the context has been refreshed._@param context the application context_@param args the application arguments;protected void afterRefresh(ConfigurableApplicationContext context,_			ApplicationArguments args) {_	};called,after,the,context,has,been,refreshed,param,context,the,application,context,param,args,the,application,arguments;protected,void,after,refresh,configurable,application,context,context,application,arguments,args
SpringApplication -> protected void afterRefresh(ConfigurableApplicationContext context, 			ApplicationArguments args);1546943477;Called after the context has been refreshed._@param context the application context_@param args the application arguments;protected void afterRefresh(ConfigurableApplicationContext context,_			ApplicationArguments args) {_	};called,after,the,context,has,been,refreshed,param,context,the,application,context,param,args,the,application,arguments;protected,void,after,refresh,configurable,application,context,context,application,arguments,args
SpringApplication -> protected void afterRefresh(ConfigurableApplicationContext context, 			ApplicationArguments args);1549791353;Called after the context has been refreshed._@param context the application context_@param args the application arguments;protected void afterRefresh(ConfigurableApplicationContext context,_			ApplicationArguments args) {_	};called,after,the,context,has,been,refreshed,param,context,the,application,context,param,args,the,application,arguments;protected,void,after,refresh,configurable,application,context,context,application,arguments,args
SpringApplication -> protected void afterRefresh(ConfigurableApplicationContext context, 			ApplicationArguments args);1550148109;Called after the context has been refreshed._@param context the application context_@param args the application arguments;protected void afterRefresh(ConfigurableApplicationContext context,_			ApplicationArguments args) {_	};called,after,the,context,has,been,refreshed,param,context,the,application,context,param,args,the,application,arguments;protected,void,after,refresh,configurable,application,context,context,application,arguments,args
SpringApplication -> public void setInitializers( 			Collection<? extends ApplicationContextInitializer<?>> initializers);1507173536;Sets the {@link ApplicationContextInitializer} that will be applied to the Spring_{@link ApplicationContext}._@param initializers the initializers to set;public void setInitializers(_			Collection<? extends ApplicationContextInitializer<?>> initializers) {_		this.initializers = new ArrayList<>()__		this.initializers.addAll(initializers)__	};sets,the,link,application,context,initializer,that,will,be,applied,to,the,spring,link,application,context,param,initializers,the,initializers,to,set;public,void,set,initializers,collection,extends,application,context,initializer,initializers,this,initializers,new,array,list,this,initializers,add,all,initializers
SpringApplication -> public void setInitializers( 			Collection<? extends ApplicationContextInitializer<?>> initializers);1509381678;Sets the {@link ApplicationContextInitializer} that will be applied to the Spring_{@link ApplicationContext}._@param initializers the initializers to set;public void setInitializers(_			Collection<? extends ApplicationContextInitializer<?>> initializers) {_		this.initializers = new ArrayList<>()__		this.initializers.addAll(initializers)__	};sets,the,link,application,context,initializer,that,will,be,applied,to,the,spring,link,application,context,param,initializers,the,initializers,to,set;public,void,set,initializers,collection,extends,application,context,initializer,initializers,this,initializers,new,array,list,this,initializers,add,all,initializers
SpringApplication -> public void setInitializers( 			Collection<? extends ApplicationContextInitializer<?>> initializers);1510995225;Sets the {@link ApplicationContextInitializer} that will be applied to the Spring_{@link ApplicationContext}._@param initializers the initializers to set;public void setInitializers(_			Collection<? extends ApplicationContextInitializer<?>> initializers) {_		this.initializers = new ArrayList<>()__		this.initializers.addAll(initializers)__	};sets,the,link,application,context,initializer,that,will,be,applied,to,the,spring,link,application,context,param,initializers,the,initializers,to,set;public,void,set,initializers,collection,extends,application,context,initializer,initializers,this,initializers,new,array,list,this,initializers,add,all,initializers
SpringApplication -> public void setInitializers( 			Collection<? extends ApplicationContextInitializer<?>> initializers);1515670013;Sets the {@link ApplicationContextInitializer} that will be applied to the Spring_{@link ApplicationContext}._@param initializers the initializers to set;public void setInitializers(_			Collection<? extends ApplicationContextInitializer<?>> initializers) {_		this.initializers = new ArrayList<>()__		this.initializers.addAll(initializers)__	};sets,the,link,application,context,initializer,that,will,be,applied,to,the,spring,link,application,context,param,initializers,the,initializers,to,set;public,void,set,initializers,collection,extends,application,context,initializer,initializers,this,initializers,new,array,list,this,initializers,add,all,initializers
SpringApplication -> public void setInitializers( 			Collection<? extends ApplicationContextInitializer<?>> initializers);1519362690;Sets the {@link ApplicationContextInitializer} that will be applied to the Spring_{@link ApplicationContext}._@param initializers the initializers to set;public void setInitializers(_			Collection<? extends ApplicationContextInitializer<?>> initializers) {_		this.initializers = new ArrayList<>()__		this.initializers.addAll(initializers)__	};sets,the,link,application,context,initializer,that,will,be,applied,to,the,spring,link,application,context,param,initializers,the,initializers,to,set;public,void,set,initializers,collection,extends,application,context,initializer,initializers,this,initializers,new,array,list,this,initializers,add,all,initializers
SpringApplication -> public void setInitializers( 			Collection<? extends ApplicationContextInitializer<?>> initializers);1522251721;Sets the {@link ApplicationContextInitializer} that will be applied to the Spring_{@link ApplicationContext}._@param initializers the initializers to set;public void setInitializers(_			Collection<? extends ApplicationContextInitializer<?>> initializers) {_		this.initializers = new ArrayList<>()__		this.initializers.addAll(initializers)__	};sets,the,link,application,context,initializer,that,will,be,applied,to,the,spring,link,application,context,param,initializers,the,initializers,to,set;public,void,set,initializers,collection,extends,application,context,initializer,initializers,this,initializers,new,array,list,this,initializers,add,all,initializers
SpringApplication -> public void setInitializers( 			Collection<? extends ApplicationContextInitializer<?>> initializers);1525376698;Sets the {@link ApplicationContextInitializer} that will be applied to the Spring_{@link ApplicationContext}._@param initializers the initializers to set;public void setInitializers(_			Collection<? extends ApplicationContextInitializer<?>> initializers) {_		this.initializers = new ArrayList<>()__		this.initializers.addAll(initializers)__	};sets,the,link,application,context,initializer,that,will,be,applied,to,the,spring,link,application,context,param,initializers,the,initializers,to,set;public,void,set,initializers,collection,extends,application,context,initializer,initializers,this,initializers,new,array,list,this,initializers,add,all,initializers
SpringApplication -> public void setInitializers( 			Collection<? extends ApplicationContextInitializer<?>> initializers);1525416882;Sets the {@link ApplicationContextInitializer} that will be applied to the Spring_{@link ApplicationContext}._@param initializers the initializers to set;public void setInitializers(_			Collection<? extends ApplicationContextInitializer<?>> initializers) {_		this.initializers = new ArrayList<>()__		this.initializers.addAll(initializers)__	};sets,the,link,application,context,initializer,that,will,be,applied,to,the,spring,link,application,context,param,initializers,the,initializers,to,set;public,void,set,initializers,collection,extends,application,context,initializer,initializers,this,initializers,new,array,list,this,initializers,add,all,initializers
SpringApplication -> public void setInitializers( 			Collection<? extends ApplicationContextInitializer<?>> initializers);1526993305;Sets the {@link ApplicationContextInitializer} that will be applied to the Spring_{@link ApplicationContext}._@param initializers the initializers to set;public void setInitializers(_			Collection<? extends ApplicationContextInitializer<?>> initializers) {_		this.initializers = new ArrayList<>()__		this.initializers.addAll(initializers)__	};sets,the,link,application,context,initializer,that,will,be,applied,to,the,spring,link,application,context,param,initializers,the,initializers,to,set;public,void,set,initializers,collection,extends,application,context,initializer,initializers,this,initializers,new,array,list,this,initializers,add,all,initializers
SpringApplication -> public void setInitializers( 			Collection<? extends ApplicationContextInitializer<?>> initializers);1529485904;Sets the {@link ApplicationContextInitializer} that will be applied to the Spring_{@link ApplicationContext}._@param initializers the initializers to set;public void setInitializers(_			Collection<? extends ApplicationContextInitializer<?>> initializers) {_		this.initializers = new ArrayList<>()__		this.initializers.addAll(initializers)__	};sets,the,link,application,context,initializer,that,will,be,applied,to,the,spring,link,application,context,param,initializers,the,initializers,to,set;public,void,set,initializers,collection,extends,application,context,initializer,initializers,this,initializers,new,array,list,this,initializers,add,all,initializers
SpringApplication -> public void setInitializers( 			Collection<? extends ApplicationContextInitializer<?>> initializers);1531140616;Sets the {@link ApplicationContextInitializer} that will be applied to the Spring_{@link ApplicationContext}._@param initializers the initializers to set;public void setInitializers(_			Collection<? extends ApplicationContextInitializer<?>> initializers) {_		this.initializers = new ArrayList<>()__		this.initializers.addAll(initializers)__	};sets,the,link,application,context,initializer,that,will,be,applied,to,the,spring,link,application,context,param,initializers,the,initializers,to,set;public,void,set,initializers,collection,extends,application,context,initializer,initializers,this,initializers,new,array,list,this,initializers,add,all,initializers
SpringApplication -> public void setInitializers( 			Collection<? extends ApplicationContextInitializer<?>> initializers);1531155529;Sets the {@link ApplicationContextInitializer} that will be applied to the Spring_{@link ApplicationContext}._@param initializers the initializers to set;public void setInitializers(_			Collection<? extends ApplicationContextInitializer<?>> initializers) {_		this.initializers = new ArrayList<>()__		this.initializers.addAll(initializers)__	};sets,the,link,application,context,initializer,that,will,be,applied,to,the,spring,link,application,context,param,initializers,the,initializers,to,set;public,void,set,initializers,collection,extends,application,context,initializer,initializers,this,initializers,new,array,list,this,initializers,add,all,initializers
SpringApplication -> public void setInitializers( 			Collection<? extends ApplicationContextInitializer<?>> initializers);1531222098;Sets the {@link ApplicationContextInitializer} that will be applied to the Spring_{@link ApplicationContext}._@param initializers the initializers to set;public void setInitializers(_			Collection<? extends ApplicationContextInitializer<?>> initializers) {_		this.initializers = new ArrayList<>()__		this.initializers.addAll(initializers)__	};sets,the,link,application,context,initializer,that,will,be,applied,to,the,spring,link,application,context,param,initializers,the,initializers,to,set;public,void,set,initializers,collection,extends,application,context,initializer,initializers,this,initializers,new,array,list,this,initializers,add,all,initializers
SpringApplication -> public void setInitializers( 			Collection<? extends ApplicationContextInitializer<?>> initializers);1532738143;Sets the {@link ApplicationContextInitializer} that will be applied to the Spring_{@link ApplicationContext}._@param initializers the initializers to set;public void setInitializers(_			Collection<? extends ApplicationContextInitializer<?>> initializers) {_		this.initializers = new ArrayList<>()__		this.initializers.addAll(initializers)__	};sets,the,link,application,context,initializer,that,will,be,applied,to,the,spring,link,application,context,param,initializers,the,initializers,to,set;public,void,set,initializers,collection,extends,application,context,initializer,initializers,this,initializers,new,array,list,this,initializers,add,all,initializers
SpringApplication -> public void setInitializers( 			Collection<? extends ApplicationContextInitializer<?>> initializers);1534188228;Sets the {@link ApplicationContextInitializer} that will be applied to the Spring_{@link ApplicationContext}._@param initializers the initializers to set;public void setInitializers(_			Collection<? extends ApplicationContextInitializer<?>> initializers) {_		this.initializers = new ArrayList<>()__		this.initializers.addAll(initializers)__	};sets,the,link,application,context,initializer,that,will,be,applied,to,the,spring,link,application,context,param,initializers,the,initializers,to,set;public,void,set,initializers,collection,extends,application,context,initializer,initializers,this,initializers,new,array,list,this,initializers,add,all,initializers
SpringApplication -> public void setInitializers( 			Collection<? extends ApplicationContextInitializer<?>> initializers);1535104170;Sets the {@link ApplicationContextInitializer} that will be applied to the Spring_{@link ApplicationContext}._@param initializers the initializers to set;public void setInitializers(_			Collection<? extends ApplicationContextInitializer<?>> initializers) {_		this.initializers = new ArrayList<>()__		this.initializers.addAll(initializers)__	};sets,the,link,application,context,initializer,that,will,be,applied,to,the,spring,link,application,context,param,initializers,the,initializers,to,set;public,void,set,initializers,collection,extends,application,context,initializer,initializers,this,initializers,new,array,list,this,initializers,add,all,initializers
SpringApplication -> public void setInitializers( 			Collection<? extends ApplicationContextInitializer<?>> initializers);1536701067;Sets the {@link ApplicationContextInitializer} that will be applied to the Spring_{@link ApplicationContext}._@param initializers the initializers to set;public void setInitializers(_			Collection<? extends ApplicationContextInitializer<?>> initializers) {_		this.initializers = new ArrayList<>()__		this.initializers.addAll(initializers)__	};sets,the,link,application,context,initializer,that,will,be,applied,to,the,spring,link,application,context,param,initializers,the,initializers,to,set;public,void,set,initializers,collection,extends,application,context,initializer,initializers,this,initializers,new,array,list,this,initializers,add,all,initializers
SpringApplication -> public void setInitializers( 			Collection<? extends ApplicationContextInitializer<?>> initializers);1538570355;Sets the {@link ApplicationContextInitializer} that will be applied to the Spring_{@link ApplicationContext}._@param initializers the initializers to set;public void setInitializers(_			Collection<? extends ApplicationContextInitializer<?>> initializers) {_		this.initializers = new ArrayList<>()__		this.initializers.addAll(initializers)__	};sets,the,link,application,context,initializer,that,will,be,applied,to,the,spring,link,application,context,param,initializers,the,initializers,to,set;public,void,set,initializers,collection,extends,application,context,initializer,initializers,this,initializers,new,array,list,this,initializers,add,all,initializers
SpringApplication -> public void setInitializers( 			Collection<? extends ApplicationContextInitializer<?>> initializers);1538707540;Sets the {@link ApplicationContextInitializer} that will be applied to the Spring_{@link ApplicationContext}._@param initializers the initializers to set;public void setInitializers(_			Collection<? extends ApplicationContextInitializer<?>> initializers) {_		this.initializers = new ArrayList<>()__		this.initializers.addAll(initializers)__	};sets,the,link,application,context,initializer,that,will,be,applied,to,the,spring,link,application,context,param,initializers,the,initializers,to,set;public,void,set,initializers,collection,extends,application,context,initializer,initializers,this,initializers,new,array,list,this,initializers,add,all,initializers
SpringApplication -> public void setInitializers( 			Collection<? extends ApplicationContextInitializer<?>> initializers);1538750610;Sets the {@link ApplicationContextInitializer} that will be applied to the Spring_{@link ApplicationContext}._@param initializers the initializers to set;public void setInitializers(_			Collection<? extends ApplicationContextInitializer<?>> initializers) {_		this.initializers = new ArrayList<>()__		this.initializers.addAll(initializers)__	};sets,the,link,application,context,initializer,that,will,be,applied,to,the,spring,link,application,context,param,initializers,the,initializers,to,set;public,void,set,initializers,collection,extends,application,context,initializer,initializers,this,initializers,new,array,list,this,initializers,add,all,initializers
SpringApplication -> public void setInitializers( 			Collection<? extends ApplicationContextInitializer<?>> initializers);1538771652;Sets the {@link ApplicationContextInitializer} that will be applied to the Spring_{@link ApplicationContext}._@param initializers the initializers to set;public void setInitializers(_			Collection<? extends ApplicationContextInitializer<?>> initializers) {_		this.initializers = new ArrayList<>()__		this.initializers.addAll(initializers)__	};sets,the,link,application,context,initializer,that,will,be,applied,to,the,spring,link,application,context,param,initializers,the,initializers,to,set;public,void,set,initializers,collection,extends,application,context,initializer,initializers,this,initializers,new,array,list,this,initializers,add,all,initializers
SpringApplication -> public void setInitializers( 			Collection<? extends ApplicationContextInitializer<?>> initializers);1540419762;Sets the {@link ApplicationContextInitializer} that will be applied to the Spring_{@link ApplicationContext}._@param initializers the initializers to set;public void setInitializers(_			Collection<? extends ApplicationContextInitializer<?>> initializers) {_		this.initializers = new ArrayList<>()__		this.initializers.addAll(initializers)__	};sets,the,link,application,context,initializer,that,will,be,applied,to,the,spring,link,application,context,param,initializers,the,initializers,to,set;public,void,set,initializers,collection,extends,application,context,initializer,initializers,this,initializers,new,array,list,this,initializers,add,all,initializers
SpringApplication -> public void setInitializers( 			Collection<? extends ApplicationContextInitializer<?>> initializers);1541060131;Sets the {@link ApplicationContextInitializer} that will be applied to the Spring_{@link ApplicationContext}._@param initializers the initializers to set;public void setInitializers(_			Collection<? extends ApplicationContextInitializer<?>> initializers) {_		this.initializers = new ArrayList<>()__		this.initializers.addAll(initializers)__	};sets,the,link,application,context,initializer,that,will,be,applied,to,the,spring,link,application,context,param,initializers,the,initializers,to,set;public,void,set,initializers,collection,extends,application,context,initializer,initializers,this,initializers,new,array,list,this,initializers,add,all,initializers
SpringApplication -> public void setInitializers( 			Collection<? extends ApplicationContextInitializer<?>> initializers);1546943477;Sets the {@link ApplicationContextInitializer} that will be applied to the Spring_{@link ApplicationContext}._@param initializers the initializers to set;public void setInitializers(_			Collection<? extends ApplicationContextInitializer<?>> initializers) {_		this.initializers = new ArrayList<>()__		this.initializers.addAll(initializers)__	};sets,the,link,application,context,initializer,that,will,be,applied,to,the,spring,link,application,context,param,initializers,the,initializers,to,set;public,void,set,initializers,collection,extends,application,context,initializer,initializers,this,initializers,new,array,list,this,initializers,add,all,initializers
SpringApplication -> public void setInitializers( 			Collection<? extends ApplicationContextInitializer<?>> initializers);1549791353;Sets the {@link ApplicationContextInitializer} that will be applied to the Spring_{@link ApplicationContext}._@param initializers the initializers to set;public void setInitializers(_			Collection<? extends ApplicationContextInitializer<?>> initializers) {_		this.initializers = new ArrayList<>(initializers)__	};sets,the,link,application,context,initializer,that,will,be,applied,to,the,spring,link,application,context,param,initializers,the,initializers,to,set;public,void,set,initializers,collection,extends,application,context,initializer,initializers,this,initializers,new,array,list,initializers
SpringApplication -> public void setInitializers( 			Collection<? extends ApplicationContextInitializer<?>> initializers);1550148109;Sets the {@link ApplicationContextInitializer} that will be applied to the Spring_{@link ApplicationContext}._@param initializers the initializers to set;public void setInitializers(_			Collection<? extends ApplicationContextInitializer<?>> initializers) {_		this.initializers = new ArrayList<>(initializers)__	};sets,the,link,application,context,initializer,that,will,be,applied,to,the,spring,link,application,context,param,initializers,the,initializers,to,set;public,void,set,initializers,collection,extends,application,context,initializer,initializers,this,initializers,new,array,list,initializers
SpringApplication -> public void setHeadless(boolean headless);1507173536;Sets if the application is headless and should not instantiate AWT. Defaults to_{@code true} to prevent java icons appearing._@param headless if the application is headless;public void setHeadless(boolean headless) {_		this.headless = headless__	};sets,if,the,application,is,headless,and,should,not,instantiate,awt,defaults,to,code,true,to,prevent,java,icons,appearing,param,headless,if,the,application,is,headless;public,void,set,headless,boolean,headless,this,headless,headless
SpringApplication -> public void setHeadless(boolean headless);1509381678;Sets if the application is headless and should not instantiate AWT. Defaults to_{@code true} to prevent java icons appearing._@param headless if the application is headless;public void setHeadless(boolean headless) {_		this.headless = headless__	};sets,if,the,application,is,headless,and,should,not,instantiate,awt,defaults,to,code,true,to,prevent,java,icons,appearing,param,headless,if,the,application,is,headless;public,void,set,headless,boolean,headless,this,headless,headless
SpringApplication -> public void setHeadless(boolean headless);1510995225;Sets if the application is headless and should not instantiate AWT. Defaults to_{@code true} to prevent java icons appearing._@param headless if the application is headless;public void setHeadless(boolean headless) {_		this.headless = headless__	};sets,if,the,application,is,headless,and,should,not,instantiate,awt,defaults,to,code,true,to,prevent,java,icons,appearing,param,headless,if,the,application,is,headless;public,void,set,headless,boolean,headless,this,headless,headless
SpringApplication -> public void setHeadless(boolean headless);1515670013;Sets if the application is headless and should not instantiate AWT. Defaults to_{@code true} to prevent java icons appearing._@param headless if the application is headless;public void setHeadless(boolean headless) {_		this.headless = headless__	};sets,if,the,application,is,headless,and,should,not,instantiate,awt,defaults,to,code,true,to,prevent,java,icons,appearing,param,headless,if,the,application,is,headless;public,void,set,headless,boolean,headless,this,headless,headless
SpringApplication -> public void setHeadless(boolean headless);1519362690;Sets if the application is headless and should not instantiate AWT. Defaults to_{@code true} to prevent java icons appearing._@param headless if the application is headless;public void setHeadless(boolean headless) {_		this.headless = headless__	};sets,if,the,application,is,headless,and,should,not,instantiate,awt,defaults,to,code,true,to,prevent,java,icons,appearing,param,headless,if,the,application,is,headless;public,void,set,headless,boolean,headless,this,headless,headless
SpringApplication -> public void setHeadless(boolean headless);1522251721;Sets if the application is headless and should not instantiate AWT. Defaults to_{@code true} to prevent java icons appearing._@param headless if the application is headless;public void setHeadless(boolean headless) {_		this.headless = headless__	};sets,if,the,application,is,headless,and,should,not,instantiate,awt,defaults,to,code,true,to,prevent,java,icons,appearing,param,headless,if,the,application,is,headless;public,void,set,headless,boolean,headless,this,headless,headless
SpringApplication -> public void setHeadless(boolean headless);1525376698;Sets if the application is headless and should not instantiate AWT. Defaults to_{@code true} to prevent java icons appearing._@param headless if the application is headless;public void setHeadless(boolean headless) {_		this.headless = headless__	};sets,if,the,application,is,headless,and,should,not,instantiate,awt,defaults,to,code,true,to,prevent,java,icons,appearing,param,headless,if,the,application,is,headless;public,void,set,headless,boolean,headless,this,headless,headless
SpringApplication -> public void setHeadless(boolean headless);1525416882;Sets if the application is headless and should not instantiate AWT. Defaults to_{@code true} to prevent java icons appearing._@param headless if the application is headless;public void setHeadless(boolean headless) {_		this.headless = headless__	};sets,if,the,application,is,headless,and,should,not,instantiate,awt,defaults,to,code,true,to,prevent,java,icons,appearing,param,headless,if,the,application,is,headless;public,void,set,headless,boolean,headless,this,headless,headless
SpringApplication -> public void setHeadless(boolean headless);1526993305;Sets if the application is headless and should not instantiate AWT. Defaults to_{@code true} to prevent java icons appearing._@param headless if the application is headless;public void setHeadless(boolean headless) {_		this.headless = headless__	};sets,if,the,application,is,headless,and,should,not,instantiate,awt,defaults,to,code,true,to,prevent,java,icons,appearing,param,headless,if,the,application,is,headless;public,void,set,headless,boolean,headless,this,headless,headless
SpringApplication -> public void setHeadless(boolean headless);1529485904;Sets if the application is headless and should not instantiate AWT. Defaults to_{@code true} to prevent java icons appearing._@param headless if the application is headless;public void setHeadless(boolean headless) {_		this.headless = headless__	};sets,if,the,application,is,headless,and,should,not,instantiate,awt,defaults,to,code,true,to,prevent,java,icons,appearing,param,headless,if,the,application,is,headless;public,void,set,headless,boolean,headless,this,headless,headless
SpringApplication -> public void setHeadless(boolean headless);1531140616;Sets if the application is headless and should not instantiate AWT. Defaults to_{@code true} to prevent java icons appearing._@param headless if the application is headless;public void setHeadless(boolean headless) {_		this.headless = headless__	};sets,if,the,application,is,headless,and,should,not,instantiate,awt,defaults,to,code,true,to,prevent,java,icons,appearing,param,headless,if,the,application,is,headless;public,void,set,headless,boolean,headless,this,headless,headless
SpringApplication -> public void setHeadless(boolean headless);1531155529;Sets if the application is headless and should not instantiate AWT. Defaults to_{@code true} to prevent java icons appearing._@param headless if the application is headless;public void setHeadless(boolean headless) {_		this.headless = headless__	};sets,if,the,application,is,headless,and,should,not,instantiate,awt,defaults,to,code,true,to,prevent,java,icons,appearing,param,headless,if,the,application,is,headless;public,void,set,headless,boolean,headless,this,headless,headless
SpringApplication -> public void setHeadless(boolean headless);1531222098;Sets if the application is headless and should not instantiate AWT. Defaults to_{@code true} to prevent java icons appearing._@param headless if the application is headless;public void setHeadless(boolean headless) {_		this.headless = headless__	};sets,if,the,application,is,headless,and,should,not,instantiate,awt,defaults,to,code,true,to,prevent,java,icons,appearing,param,headless,if,the,application,is,headless;public,void,set,headless,boolean,headless,this,headless,headless
SpringApplication -> public void setHeadless(boolean headless);1532738143;Sets if the application is headless and should not instantiate AWT. Defaults to_{@code true} to prevent java icons appearing._@param headless if the application is headless;public void setHeadless(boolean headless) {_		this.headless = headless__	};sets,if,the,application,is,headless,and,should,not,instantiate,awt,defaults,to,code,true,to,prevent,java,icons,appearing,param,headless,if,the,application,is,headless;public,void,set,headless,boolean,headless,this,headless,headless
SpringApplication -> public void setHeadless(boolean headless);1534188228;Sets if the application is headless and should not instantiate AWT. Defaults to_{@code true} to prevent java icons appearing._@param headless if the application is headless;public void setHeadless(boolean headless) {_		this.headless = headless__	};sets,if,the,application,is,headless,and,should,not,instantiate,awt,defaults,to,code,true,to,prevent,java,icons,appearing,param,headless,if,the,application,is,headless;public,void,set,headless,boolean,headless,this,headless,headless
SpringApplication -> public void setHeadless(boolean headless);1535104170;Sets if the application is headless and should not instantiate AWT. Defaults to_{@code true} to prevent java icons appearing._@param headless if the application is headless;public void setHeadless(boolean headless) {_		this.headless = headless__	};sets,if,the,application,is,headless,and,should,not,instantiate,awt,defaults,to,code,true,to,prevent,java,icons,appearing,param,headless,if,the,application,is,headless;public,void,set,headless,boolean,headless,this,headless,headless
SpringApplication -> public void setHeadless(boolean headless);1536701067;Sets if the application is headless and should not instantiate AWT. Defaults to_{@code true} to prevent java icons appearing._@param headless if the application is headless;public void setHeadless(boolean headless) {_		this.headless = headless__	};sets,if,the,application,is,headless,and,should,not,instantiate,awt,defaults,to,code,true,to,prevent,java,icons,appearing,param,headless,if,the,application,is,headless;public,void,set,headless,boolean,headless,this,headless,headless
SpringApplication -> public void setHeadless(boolean headless);1538570355;Sets if the application is headless and should not instantiate AWT. Defaults to_{@code true} to prevent java icons appearing._@param headless if the application is headless;public void setHeadless(boolean headless) {_		this.headless = headless__	};sets,if,the,application,is,headless,and,should,not,instantiate,awt,defaults,to,code,true,to,prevent,java,icons,appearing,param,headless,if,the,application,is,headless;public,void,set,headless,boolean,headless,this,headless,headless
SpringApplication -> public void setHeadless(boolean headless);1538707540;Sets if the application is headless and should not instantiate AWT. Defaults to_{@code true} to prevent java icons appearing._@param headless if the application is headless;public void setHeadless(boolean headless) {_		this.headless = headless__	};sets,if,the,application,is,headless,and,should,not,instantiate,awt,defaults,to,code,true,to,prevent,java,icons,appearing,param,headless,if,the,application,is,headless;public,void,set,headless,boolean,headless,this,headless,headless
SpringApplication -> public void setHeadless(boolean headless);1538750610;Sets if the application is headless and should not instantiate AWT. Defaults to_{@code true} to prevent java icons appearing._@param headless if the application is headless;public void setHeadless(boolean headless) {_		this.headless = headless__	};sets,if,the,application,is,headless,and,should,not,instantiate,awt,defaults,to,code,true,to,prevent,java,icons,appearing,param,headless,if,the,application,is,headless;public,void,set,headless,boolean,headless,this,headless,headless
SpringApplication -> public void setHeadless(boolean headless);1538771652;Sets if the application is headless and should not instantiate AWT. Defaults to_{@code true} to prevent java icons appearing._@param headless if the application is headless;public void setHeadless(boolean headless) {_		this.headless = headless__	};sets,if,the,application,is,headless,and,should,not,instantiate,awt,defaults,to,code,true,to,prevent,java,icons,appearing,param,headless,if,the,application,is,headless;public,void,set,headless,boolean,headless,this,headless,headless
SpringApplication -> public void setHeadless(boolean headless);1540419762;Sets if the application is headless and should not instantiate AWT. Defaults to_{@code true} to prevent java icons appearing._@param headless if the application is headless;public void setHeadless(boolean headless) {_		this.headless = headless__	};sets,if,the,application,is,headless,and,should,not,instantiate,awt,defaults,to,code,true,to,prevent,java,icons,appearing,param,headless,if,the,application,is,headless;public,void,set,headless,boolean,headless,this,headless,headless
SpringApplication -> public void setHeadless(boolean headless);1541060131;Sets if the application is headless and should not instantiate AWT. Defaults to_{@code true} to prevent java icons appearing._@param headless if the application is headless;public void setHeadless(boolean headless) {_		this.headless = headless__	};sets,if,the,application,is,headless,and,should,not,instantiate,awt,defaults,to,code,true,to,prevent,java,icons,appearing,param,headless,if,the,application,is,headless;public,void,set,headless,boolean,headless,this,headless,headless
SpringApplication -> public void setHeadless(boolean headless);1546943477;Sets if the application is headless and should not instantiate AWT. Defaults to_{@code true} to prevent java icons appearing._@param headless if the application is headless;public void setHeadless(boolean headless) {_		this.headless = headless__	};sets,if,the,application,is,headless,and,should,not,instantiate,awt,defaults,to,code,true,to,prevent,java,icons,appearing,param,headless,if,the,application,is,headless;public,void,set,headless,boolean,headless,this,headless,headless
SpringApplication -> public void setHeadless(boolean headless);1549791353;Sets if the application is headless and should not instantiate AWT. Defaults to_{@code true} to prevent java icons appearing._@param headless if the application is headless;public void setHeadless(boolean headless) {_		this.headless = headless__	};sets,if,the,application,is,headless,and,should,not,instantiate,awt,defaults,to,code,true,to,prevent,java,icons,appearing,param,headless,if,the,application,is,headless;public,void,set,headless,boolean,headless,this,headless,headless
SpringApplication -> public void setHeadless(boolean headless);1550148109;Sets if the application is headless and should not instantiate AWT. Defaults to_{@code true} to prevent java icons appearing._@param headless if the application is headless;public void setHeadless(boolean headless) {_		this.headless = headless__	};sets,if,the,application,is,headless,and,should,not,instantiate,awt,defaults,to,code,true,to,prevent,java,icons,appearing,param,headless,if,the,application,is,headless;public,void,set,headless,boolean,headless,this,headless,headless
SpringApplication -> protected ConfigurableApplicationContext createApplicationContext();1507173536;Strategy method used to create the {@link ApplicationContext}. By default this_method will respect any explicitly set application context or application context_class before falling back to a suitable default._@return the application context (not yet refreshed)_@see #setApplicationContextClass(Class);protected ConfigurableApplicationContext createApplicationContext() {_		Class<?> contextClass = this.applicationContextClass__		if (contextClass == null) {_			try {_				switch (this.webApplicationType) {_				case SERVLET:_					contextClass = Class.forName(DEFAULT_WEB_CONTEXT_CLASS)__					break__				case REACTIVE:_					contextClass = Class.forName(DEFAULT_REACTIVE_WEB_CONTEXT_CLASS)__					break__				default:_					contextClass = Class.forName(DEFAULT_CONTEXT_CLASS)__				}_			}_			catch (ClassNotFoundException ex) {_				throw new IllegalStateException(_						"Unable create a default ApplicationContext, "_								+ "please specify an ApplicationContextClass",_						ex)__			}_		}_		return (ConfigurableApplicationContext) BeanUtils.instantiateClass(contextClass)__	};strategy,method,used,to,create,the,link,application,context,by,default,this,method,will,respect,any,explicitly,set,application,context,or,application,context,class,before,falling,back,to,a,suitable,default,return,the,application,context,not,yet,refreshed,see,set,application,context,class,class;protected,configurable,application,context,create,application,context,class,context,class,this,application,context,class,if,context,class,null,try,switch,this,web,application,type,case,servlet,context,class,class,for,name,break,case,reactive,context,class,class,for,name,break,default,context,class,class,for,name,catch,class,not,found,exception,ex,throw,new,illegal,state,exception,unable,create,a,default,application,context,please,specify,an,application,context,class,ex,return,configurable,application,context,bean,utils,instantiate,class,context,class
SpringApplication -> protected ConfigurableApplicationContext createApplicationContext();1509381678;Strategy method used to create the {@link ApplicationContext}. By default this_method will respect any explicitly set application context or application context_class before falling back to a suitable default._@return the application context (not yet refreshed)_@see #setApplicationContextClass(Class);protected ConfigurableApplicationContext createApplicationContext() {_		Class<?> contextClass = this.applicationContextClass__		if (contextClass == null) {_			try {_				switch (this.webApplicationType) {_				case SERVLET:_					contextClass = Class.forName(DEFAULT_WEB_CONTEXT_CLASS)__					break__				case REACTIVE:_					contextClass = Class.forName(DEFAULT_REACTIVE_WEB_CONTEXT_CLASS)__					break__				default:_					contextClass = Class.forName(DEFAULT_CONTEXT_CLASS)__				}_			}_			catch (ClassNotFoundException ex) {_				throw new IllegalStateException(_						"Unable create a default ApplicationContext, "_								+ "please specify an ApplicationContextClass",_						ex)__			}_		}_		return (ConfigurableApplicationContext) BeanUtils.instantiateClass(contextClass)__	};strategy,method,used,to,create,the,link,application,context,by,default,this,method,will,respect,any,explicitly,set,application,context,or,application,context,class,before,falling,back,to,a,suitable,default,return,the,application,context,not,yet,refreshed,see,set,application,context,class,class;protected,configurable,application,context,create,application,context,class,context,class,this,application,context,class,if,context,class,null,try,switch,this,web,application,type,case,servlet,context,class,class,for,name,break,case,reactive,context,class,class,for,name,break,default,context,class,class,for,name,catch,class,not,found,exception,ex,throw,new,illegal,state,exception,unable,create,a,default,application,context,please,specify,an,application,context,class,ex,return,configurable,application,context,bean,utils,instantiate,class,context,class
SpringApplication -> protected ConfigurableApplicationContext createApplicationContext();1510995225;Strategy method used to create the {@link ApplicationContext}. By default this_method will respect any explicitly set application context or application context_class before falling back to a suitable default._@return the application context (not yet refreshed)_@see #setApplicationContextClass(Class);protected ConfigurableApplicationContext createApplicationContext() {_		Class<?> contextClass = this.applicationContextClass__		if (contextClass == null) {_			try {_				switch (this.webApplicationType) {_				case SERVLET:_					contextClass = Class.forName(DEFAULT_WEB_CONTEXT_CLASS)__					break__				case REACTIVE:_					contextClass = Class.forName(DEFAULT_REACTIVE_WEB_CONTEXT_CLASS)__					break__				default:_					contextClass = Class.forName(DEFAULT_CONTEXT_CLASS)__				}_			}_			catch (ClassNotFoundException ex) {_				throw new IllegalStateException(_						"Unable create a default ApplicationContext, "_								+ "please specify an ApplicationContextClass",_						ex)__			}_		}_		return (ConfigurableApplicationContext) BeanUtils.instantiateClass(contextClass)__	};strategy,method,used,to,create,the,link,application,context,by,default,this,method,will,respect,any,explicitly,set,application,context,or,application,context,class,before,falling,back,to,a,suitable,default,return,the,application,context,not,yet,refreshed,see,set,application,context,class,class;protected,configurable,application,context,create,application,context,class,context,class,this,application,context,class,if,context,class,null,try,switch,this,web,application,type,case,servlet,context,class,class,for,name,break,case,reactive,context,class,class,for,name,break,default,context,class,class,for,name,catch,class,not,found,exception,ex,throw,new,illegal,state,exception,unable,create,a,default,application,context,please,specify,an,application,context,class,ex,return,configurable,application,context,bean,utils,instantiate,class,context,class
SpringApplication -> protected ConfigurableApplicationContext createApplicationContext();1515670013;Strategy method used to create the {@link ApplicationContext}. By default this_method will respect any explicitly set application context or application context_class before falling back to a suitable default._@return the application context (not yet refreshed)_@see #setApplicationContextClass(Class);protected ConfigurableApplicationContext createApplicationContext() {_		Class<?> contextClass = this.applicationContextClass__		if (contextClass == null) {_			try {_				switch (this.webApplicationType) {_				case SERVLET:_					contextClass = Class.forName(DEFAULT_WEB_CONTEXT_CLASS)__					break__				case REACTIVE:_					contextClass = Class.forName(DEFAULT_REACTIVE_WEB_CONTEXT_CLASS)__					break__				default:_					contextClass = Class.forName(DEFAULT_CONTEXT_CLASS)__				}_			}_			catch (ClassNotFoundException ex) {_				throw new IllegalStateException(_						"Unable create a default ApplicationContext, "_								+ "please specify an ApplicationContextClass",_						ex)__			}_		}_		return (ConfigurableApplicationContext) BeanUtils.instantiateClass(contextClass)__	};strategy,method,used,to,create,the,link,application,context,by,default,this,method,will,respect,any,explicitly,set,application,context,or,application,context,class,before,falling,back,to,a,suitable,default,return,the,application,context,not,yet,refreshed,see,set,application,context,class,class;protected,configurable,application,context,create,application,context,class,context,class,this,application,context,class,if,context,class,null,try,switch,this,web,application,type,case,servlet,context,class,class,for,name,break,case,reactive,context,class,class,for,name,break,default,context,class,class,for,name,catch,class,not,found,exception,ex,throw,new,illegal,state,exception,unable,create,a,default,application,context,please,specify,an,application,context,class,ex,return,configurable,application,context,bean,utils,instantiate,class,context,class
SpringApplication -> protected ConfigurableApplicationContext createApplicationContext();1519362690;Strategy method used to create the {@link ApplicationContext}. By default this_method will respect any explicitly set application context or application context_class before falling back to a suitable default._@return the application context (not yet refreshed)_@see #setApplicationContextClass(Class);protected ConfigurableApplicationContext createApplicationContext() {_		Class<?> contextClass = this.applicationContextClass__		if (contextClass == null) {_			try {_				switch (this.webApplicationType) {_				case SERVLET:_					contextClass = Class.forName(DEFAULT_WEB_CONTEXT_CLASS)__					break__				case REACTIVE:_					contextClass = Class.forName(DEFAULT_REACTIVE_WEB_CONTEXT_CLASS)__					break__				default:_					contextClass = Class.forName(DEFAULT_CONTEXT_CLASS)__				}_			}_			catch (ClassNotFoundException ex) {_				throw new IllegalStateException(_						"Unable create a default ApplicationContext, "_								+ "please specify an ApplicationContextClass",_						ex)__			}_		}_		return (ConfigurableApplicationContext) BeanUtils.instantiateClass(contextClass)__	};strategy,method,used,to,create,the,link,application,context,by,default,this,method,will,respect,any,explicitly,set,application,context,or,application,context,class,before,falling,back,to,a,suitable,default,return,the,application,context,not,yet,refreshed,see,set,application,context,class,class;protected,configurable,application,context,create,application,context,class,context,class,this,application,context,class,if,context,class,null,try,switch,this,web,application,type,case,servlet,context,class,class,for,name,break,case,reactive,context,class,class,for,name,break,default,context,class,class,for,name,catch,class,not,found,exception,ex,throw,new,illegal,state,exception,unable,create,a,default,application,context,please,specify,an,application,context,class,ex,return,configurable,application,context,bean,utils,instantiate,class,context,class
SpringApplication -> protected ConfigurableApplicationContext createApplicationContext();1522251721;Strategy method used to create the {@link ApplicationContext}. By default this_method will respect any explicitly set application context or application context_class before falling back to a suitable default._@return the application context (not yet refreshed)_@see #setApplicationContextClass(Class);protected ConfigurableApplicationContext createApplicationContext() {_		Class<?> contextClass = this.applicationContextClass__		if (contextClass == null) {_			try {_				switch (this.webApplicationType) {_				case SERVLET:_					contextClass = Class.forName(DEFAULT_WEB_CONTEXT_CLASS)__					break__				case REACTIVE:_					contextClass = Class.forName(DEFAULT_REACTIVE_WEB_CONTEXT_CLASS)__					break__				default:_					contextClass = Class.forName(DEFAULT_CONTEXT_CLASS)__				}_			}_			catch (ClassNotFoundException ex) {_				throw new IllegalStateException(_						"Unable create a default ApplicationContext, "_								+ "please specify an ApplicationContextClass",_						ex)__			}_		}_		return (ConfigurableApplicationContext) BeanUtils.instantiateClass(contextClass)__	};strategy,method,used,to,create,the,link,application,context,by,default,this,method,will,respect,any,explicitly,set,application,context,or,application,context,class,before,falling,back,to,a,suitable,default,return,the,application,context,not,yet,refreshed,see,set,application,context,class,class;protected,configurable,application,context,create,application,context,class,context,class,this,application,context,class,if,context,class,null,try,switch,this,web,application,type,case,servlet,context,class,class,for,name,break,case,reactive,context,class,class,for,name,break,default,context,class,class,for,name,catch,class,not,found,exception,ex,throw,new,illegal,state,exception,unable,create,a,default,application,context,please,specify,an,application,context,class,ex,return,configurable,application,context,bean,utils,instantiate,class,context,class
SpringApplication -> protected ConfigurableApplicationContext createApplicationContext();1525376698;Strategy method used to create the {@link ApplicationContext}. By default this_method will respect any explicitly set application context or application context_class before falling back to a suitable default._@return the application context (not yet refreshed)_@see #setApplicationContextClass(Class);protected ConfigurableApplicationContext createApplicationContext() {_		Class<?> contextClass = this.applicationContextClass__		if (contextClass == null) {_			try {_				switch (this.webApplicationType) {_				case SERVLET:_					contextClass = Class.forName(DEFAULT_WEB_CONTEXT_CLASS)__					break__				case REACTIVE:_					contextClass = Class.forName(DEFAULT_REACTIVE_WEB_CONTEXT_CLASS)__					break__				default:_					contextClass = Class.forName(DEFAULT_CONTEXT_CLASS)__				}_			}_			catch (ClassNotFoundException ex) {_				throw new IllegalStateException(_						"Unable create a default ApplicationContext, "_								+ "please specify an ApplicationContextClass",_						ex)__			}_		}_		return (ConfigurableApplicationContext) BeanUtils.instantiateClass(contextClass)__	};strategy,method,used,to,create,the,link,application,context,by,default,this,method,will,respect,any,explicitly,set,application,context,or,application,context,class,before,falling,back,to,a,suitable,default,return,the,application,context,not,yet,refreshed,see,set,application,context,class,class;protected,configurable,application,context,create,application,context,class,context,class,this,application,context,class,if,context,class,null,try,switch,this,web,application,type,case,servlet,context,class,class,for,name,break,case,reactive,context,class,class,for,name,break,default,context,class,class,for,name,catch,class,not,found,exception,ex,throw,new,illegal,state,exception,unable,create,a,default,application,context,please,specify,an,application,context,class,ex,return,configurable,application,context,bean,utils,instantiate,class,context,class
SpringApplication -> protected ConfigurableApplicationContext createApplicationContext();1525416882;Strategy method used to create the {@link ApplicationContext}. By default this_method will respect any explicitly set application context or application context_class before falling back to a suitable default._@return the application context (not yet refreshed)_@see #setApplicationContextClass(Class);protected ConfigurableApplicationContext createApplicationContext() {_		Class<?> contextClass = this.applicationContextClass__		if (contextClass == null) {_			try {_				switch (this.webApplicationType) {_				case SERVLET:_					contextClass = Class.forName(DEFAULT_WEB_CONTEXT_CLASS)__					break__				case REACTIVE:_					contextClass = Class.forName(DEFAULT_REACTIVE_WEB_CONTEXT_CLASS)__					break__				default:_					contextClass = Class.forName(DEFAULT_CONTEXT_CLASS)__				}_			}_			catch (ClassNotFoundException ex) {_				throw new IllegalStateException(_						"Unable create a default ApplicationContext, "_								+ "please specify an ApplicationContextClass",_						ex)__			}_		}_		return (ConfigurableApplicationContext) BeanUtils.instantiateClass(contextClass)__	};strategy,method,used,to,create,the,link,application,context,by,default,this,method,will,respect,any,explicitly,set,application,context,or,application,context,class,before,falling,back,to,a,suitable,default,return,the,application,context,not,yet,refreshed,see,set,application,context,class,class;protected,configurable,application,context,create,application,context,class,context,class,this,application,context,class,if,context,class,null,try,switch,this,web,application,type,case,servlet,context,class,class,for,name,break,case,reactive,context,class,class,for,name,break,default,context,class,class,for,name,catch,class,not,found,exception,ex,throw,new,illegal,state,exception,unable,create,a,default,application,context,please,specify,an,application,context,class,ex,return,configurable,application,context,bean,utils,instantiate,class,context,class
SpringApplication -> protected ConfigurableApplicationContext createApplicationContext();1526993305;Strategy method used to create the {@link ApplicationContext}. By default this_method will respect any explicitly set application context or application context_class before falling back to a suitable default._@return the application context (not yet refreshed)_@see #setApplicationContextClass(Class);protected ConfigurableApplicationContext createApplicationContext() {_		Class<?> contextClass = this.applicationContextClass__		if (contextClass == null) {_			try {_				switch (this.webApplicationType) {_				case SERVLET:_					contextClass = Class.forName(DEFAULT_WEB_CONTEXT_CLASS)__					break__				case REACTIVE:_					contextClass = Class.forName(DEFAULT_REACTIVE_WEB_CONTEXT_CLASS)__					break__				default:_					contextClass = Class.forName(DEFAULT_CONTEXT_CLASS)__				}_			}_			catch (ClassNotFoundException ex) {_				throw new IllegalStateException(_						"Unable create a default ApplicationContext, "_								+ "please specify an ApplicationContextClass",_						ex)__			}_		}_		return (ConfigurableApplicationContext) BeanUtils.instantiateClass(contextClass)__	};strategy,method,used,to,create,the,link,application,context,by,default,this,method,will,respect,any,explicitly,set,application,context,or,application,context,class,before,falling,back,to,a,suitable,default,return,the,application,context,not,yet,refreshed,see,set,application,context,class,class;protected,configurable,application,context,create,application,context,class,context,class,this,application,context,class,if,context,class,null,try,switch,this,web,application,type,case,servlet,context,class,class,for,name,break,case,reactive,context,class,class,for,name,break,default,context,class,class,for,name,catch,class,not,found,exception,ex,throw,new,illegal,state,exception,unable,create,a,default,application,context,please,specify,an,application,context,class,ex,return,configurable,application,context,bean,utils,instantiate,class,context,class
SpringApplication -> protected ConfigurableApplicationContext createApplicationContext();1529485904;Strategy method used to create the {@link ApplicationContext}. By default this_method will respect any explicitly set application context or application context_class before falling back to a suitable default._@return the application context (not yet refreshed)_@see #setApplicationContextClass(Class);protected ConfigurableApplicationContext createApplicationContext() {_		Class<?> contextClass = this.applicationContextClass__		if (contextClass == null) {_			try {_				switch (this.webApplicationType) {_				case SERVLET:_					contextClass = Class.forName(DEFAULT_WEB_CONTEXT_CLASS)__					break__				case REACTIVE:_					contextClass = Class.forName(DEFAULT_REACTIVE_WEB_CONTEXT_CLASS)__					break__				default:_					contextClass = Class.forName(DEFAULT_CONTEXT_CLASS)__				}_			}_			catch (ClassNotFoundException ex) {_				throw new IllegalStateException(_						"Unable create a default ApplicationContext, "_								+ "please specify an ApplicationContextClass",_						ex)__			}_		}_		return (ConfigurableApplicationContext) BeanUtils.instantiateClass(contextClass)__	};strategy,method,used,to,create,the,link,application,context,by,default,this,method,will,respect,any,explicitly,set,application,context,or,application,context,class,before,falling,back,to,a,suitable,default,return,the,application,context,not,yet,refreshed,see,set,application,context,class,class;protected,configurable,application,context,create,application,context,class,context,class,this,application,context,class,if,context,class,null,try,switch,this,web,application,type,case,servlet,context,class,class,for,name,break,case,reactive,context,class,class,for,name,break,default,context,class,class,for,name,catch,class,not,found,exception,ex,throw,new,illegal,state,exception,unable,create,a,default,application,context,please,specify,an,application,context,class,ex,return,configurable,application,context,bean,utils,instantiate,class,context,class
SpringApplication -> protected ConfigurableApplicationContext createApplicationContext();1531140616;Strategy method used to create the {@link ApplicationContext}. By default this_method will respect any explicitly set application context or application context_class before falling back to a suitable default._@return the application context (not yet refreshed)_@see #setApplicationContextClass(Class);protected ConfigurableApplicationContext createApplicationContext() {_		Class<?> contextClass = this.applicationContextClass__		if (contextClass == null) {_			try {_				switch (this.webApplicationType) {_				case SERVLET:_					contextClass = Class.forName(DEFAULT_WEB_CONTEXT_CLASS)__					break__				case REACTIVE:_					contextClass = Class.forName(DEFAULT_REACTIVE_WEB_CONTEXT_CLASS)__					break__				default:_					contextClass = Class.forName(DEFAULT_CONTEXT_CLASS)__				}_			}_			catch (ClassNotFoundException ex) {_				throw new IllegalStateException(_						"Unable create a default ApplicationContext, "_								+ "please specify an ApplicationContextClass",_						ex)__			}_		}_		return (ConfigurableApplicationContext) BeanUtils.instantiateClass(contextClass)__	};strategy,method,used,to,create,the,link,application,context,by,default,this,method,will,respect,any,explicitly,set,application,context,or,application,context,class,before,falling,back,to,a,suitable,default,return,the,application,context,not,yet,refreshed,see,set,application,context,class,class;protected,configurable,application,context,create,application,context,class,context,class,this,application,context,class,if,context,class,null,try,switch,this,web,application,type,case,servlet,context,class,class,for,name,break,case,reactive,context,class,class,for,name,break,default,context,class,class,for,name,catch,class,not,found,exception,ex,throw,new,illegal,state,exception,unable,create,a,default,application,context,please,specify,an,application,context,class,ex,return,configurable,application,context,bean,utils,instantiate,class,context,class
SpringApplication -> protected ConfigurableApplicationContext createApplicationContext();1531155529;Strategy method used to create the {@link ApplicationContext}. By default this_method will respect any explicitly set application context or application context_class before falling back to a suitable default._@return the application context (not yet refreshed)_@see #setApplicationContextClass(Class);protected ConfigurableApplicationContext createApplicationContext() {_		Class<?> contextClass = this.applicationContextClass__		if (contextClass == null) {_			try {_				switch (this.webApplicationType) {_				case SERVLET:_					contextClass = Class.forName(DEFAULT_WEB_CONTEXT_CLASS)__					break__				case REACTIVE:_					contextClass = Class.forName(DEFAULT_REACTIVE_WEB_CONTEXT_CLASS)__					break__				default:_					contextClass = Class.forName(DEFAULT_CONTEXT_CLASS)__				}_			}_			catch (ClassNotFoundException ex) {_				throw new IllegalStateException(_						"Unable create a default ApplicationContext, "_								+ "please specify an ApplicationContextClass",_						ex)__			}_		}_		return (ConfigurableApplicationContext) BeanUtils.instantiateClass(contextClass)__	};strategy,method,used,to,create,the,link,application,context,by,default,this,method,will,respect,any,explicitly,set,application,context,or,application,context,class,before,falling,back,to,a,suitable,default,return,the,application,context,not,yet,refreshed,see,set,application,context,class,class;protected,configurable,application,context,create,application,context,class,context,class,this,application,context,class,if,context,class,null,try,switch,this,web,application,type,case,servlet,context,class,class,for,name,break,case,reactive,context,class,class,for,name,break,default,context,class,class,for,name,catch,class,not,found,exception,ex,throw,new,illegal,state,exception,unable,create,a,default,application,context,please,specify,an,application,context,class,ex,return,configurable,application,context,bean,utils,instantiate,class,context,class
SpringApplication -> protected ConfigurableApplicationContext createApplicationContext();1531222098;Strategy method used to create the {@link ApplicationContext}. By default this_method will respect any explicitly set application context or application context_class before falling back to a suitable default._@return the application context (not yet refreshed)_@see #setApplicationContextClass(Class);protected ConfigurableApplicationContext createApplicationContext() {_		Class<?> contextClass = this.applicationContextClass__		if (contextClass == null) {_			try {_				switch (this.webApplicationType) {_				case SERVLET:_					contextClass = Class.forName(DEFAULT_WEB_CONTEXT_CLASS)__					break__				case REACTIVE:_					contextClass = Class.forName(DEFAULT_REACTIVE_WEB_CONTEXT_CLASS)__					break__				default:_					contextClass = Class.forName(DEFAULT_CONTEXT_CLASS)__				}_			}_			catch (ClassNotFoundException ex) {_				throw new IllegalStateException(_						"Unable create a default ApplicationContext, "_								+ "please specify an ApplicationContextClass",_						ex)__			}_		}_		return (ConfigurableApplicationContext) BeanUtils.instantiateClass(contextClass)__	};strategy,method,used,to,create,the,link,application,context,by,default,this,method,will,respect,any,explicitly,set,application,context,or,application,context,class,before,falling,back,to,a,suitable,default,return,the,application,context,not,yet,refreshed,see,set,application,context,class,class;protected,configurable,application,context,create,application,context,class,context,class,this,application,context,class,if,context,class,null,try,switch,this,web,application,type,case,servlet,context,class,class,for,name,break,case,reactive,context,class,class,for,name,break,default,context,class,class,for,name,catch,class,not,found,exception,ex,throw,new,illegal,state,exception,unable,create,a,default,application,context,please,specify,an,application,context,class,ex,return,configurable,application,context,bean,utils,instantiate,class,context,class
SpringApplication -> protected ConfigurableApplicationContext createApplicationContext();1532738143;Strategy method used to create the {@link ApplicationContext}. By default this_method will respect any explicitly set application context or application context_class before falling back to a suitable default._@return the application context (not yet refreshed)_@see #setApplicationContextClass(Class);protected ConfigurableApplicationContext createApplicationContext() {_		Class<?> contextClass = this.applicationContextClass__		if (contextClass == null) {_			try {_				switch (this.webApplicationType) {_				case SERVLET:_					contextClass = Class.forName(DEFAULT_WEB_CONTEXT_CLASS)__					break__				case REACTIVE:_					contextClass = Class.forName(DEFAULT_REACTIVE_WEB_CONTEXT_CLASS)__					break__				default:_					contextClass = Class.forName(DEFAULT_CONTEXT_CLASS)__				}_			}_			catch (ClassNotFoundException ex) {_				throw new IllegalStateException(_						"Unable create a default ApplicationContext, "_								+ "please specify an ApplicationContextClass",_						ex)__			}_		}_		return (ConfigurableApplicationContext) BeanUtils.instantiateClass(contextClass)__	};strategy,method,used,to,create,the,link,application,context,by,default,this,method,will,respect,any,explicitly,set,application,context,or,application,context,class,before,falling,back,to,a,suitable,default,return,the,application,context,not,yet,refreshed,see,set,application,context,class,class;protected,configurable,application,context,create,application,context,class,context,class,this,application,context,class,if,context,class,null,try,switch,this,web,application,type,case,servlet,context,class,class,for,name,break,case,reactive,context,class,class,for,name,break,default,context,class,class,for,name,catch,class,not,found,exception,ex,throw,new,illegal,state,exception,unable,create,a,default,application,context,please,specify,an,application,context,class,ex,return,configurable,application,context,bean,utils,instantiate,class,context,class
SpringApplication -> protected ConfigurableApplicationContext createApplicationContext();1534188228;Strategy method used to create the {@link ApplicationContext}. By default this_method will respect any explicitly set application context or application context_class before falling back to a suitable default._@return the application context (not yet refreshed)_@see #setApplicationContextClass(Class);protected ConfigurableApplicationContext createApplicationContext() {_		Class<?> contextClass = this.applicationContextClass__		if (contextClass == null) {_			try {_				switch (this.webApplicationType) {_				case SERVLET:_					contextClass = Class.forName(DEFAULT_WEB_CONTEXT_CLASS)__					break__				case REACTIVE:_					contextClass = Class.forName(DEFAULT_REACTIVE_WEB_CONTEXT_CLASS)__					break__				default:_					contextClass = Class.forName(DEFAULT_CONTEXT_CLASS)__				}_			}_			catch (ClassNotFoundException ex) {_				throw new IllegalStateException(_						"Unable create a default ApplicationContext, "_								+ "please specify an ApplicationContextClass",_						ex)__			}_		}_		return (ConfigurableApplicationContext) BeanUtils.instantiateClass(contextClass)__	};strategy,method,used,to,create,the,link,application,context,by,default,this,method,will,respect,any,explicitly,set,application,context,or,application,context,class,before,falling,back,to,a,suitable,default,return,the,application,context,not,yet,refreshed,see,set,application,context,class,class;protected,configurable,application,context,create,application,context,class,context,class,this,application,context,class,if,context,class,null,try,switch,this,web,application,type,case,servlet,context,class,class,for,name,break,case,reactive,context,class,class,for,name,break,default,context,class,class,for,name,catch,class,not,found,exception,ex,throw,new,illegal,state,exception,unable,create,a,default,application,context,please,specify,an,application,context,class,ex,return,configurable,application,context,bean,utils,instantiate,class,context,class
SpringApplication -> protected ConfigurableApplicationContext createApplicationContext();1535104170;Strategy method used to create the {@link ApplicationContext}. By default this_method will respect any explicitly set application context or application context_class before falling back to a suitable default._@return the application context (not yet refreshed)_@see #setApplicationContextClass(Class);protected ConfigurableApplicationContext createApplicationContext() {_		Class<?> contextClass = this.applicationContextClass__		if (contextClass == null) {_			try {_				switch (this.webApplicationType) {_				case SERVLET:_					contextClass = Class.forName(DEFAULT_WEB_CONTEXT_CLASS)__					break__				case REACTIVE:_					contextClass = Class.forName(DEFAULT_REACTIVE_WEB_CONTEXT_CLASS)__					break__				default:_					contextClass = Class.forName(DEFAULT_CONTEXT_CLASS)__				}_			}_			catch (ClassNotFoundException ex) {_				throw new IllegalStateException(_						"Unable create a default ApplicationContext, "_								+ "please specify an ApplicationContextClass",_						ex)__			}_		}_		return (ConfigurableApplicationContext) BeanUtils.instantiateClass(contextClass)__	};strategy,method,used,to,create,the,link,application,context,by,default,this,method,will,respect,any,explicitly,set,application,context,or,application,context,class,before,falling,back,to,a,suitable,default,return,the,application,context,not,yet,refreshed,see,set,application,context,class,class;protected,configurable,application,context,create,application,context,class,context,class,this,application,context,class,if,context,class,null,try,switch,this,web,application,type,case,servlet,context,class,class,for,name,break,case,reactive,context,class,class,for,name,break,default,context,class,class,for,name,catch,class,not,found,exception,ex,throw,new,illegal,state,exception,unable,create,a,default,application,context,please,specify,an,application,context,class,ex,return,configurable,application,context,bean,utils,instantiate,class,context,class
SpringApplication -> protected ConfigurableApplicationContext createApplicationContext();1536701067;Strategy method used to create the {@link ApplicationContext}. By default this_method will respect any explicitly set application context or application context_class before falling back to a suitable default._@return the application context (not yet refreshed)_@see #setApplicationContextClass(Class);protected ConfigurableApplicationContext createApplicationContext() {_		Class<?> contextClass = this.applicationContextClass__		if (contextClass == null) {_			try {_				switch (this.webApplicationType) {_				case SERVLET:_					contextClass = Class.forName(DEFAULT_WEB_CONTEXT_CLASS)__					break__				case REACTIVE:_					contextClass = Class.forName(DEFAULT_REACTIVE_WEB_CONTEXT_CLASS)__					break__				default:_					contextClass = Class.forName(DEFAULT_CONTEXT_CLASS)__				}_			}_			catch (ClassNotFoundException ex) {_				throw new IllegalStateException(_						"Unable create a default ApplicationContext, "_								+ "please specify an ApplicationContextClass",_						ex)__			}_		}_		return (ConfigurableApplicationContext) BeanUtils.instantiateClass(contextClass)__	};strategy,method,used,to,create,the,link,application,context,by,default,this,method,will,respect,any,explicitly,set,application,context,or,application,context,class,before,falling,back,to,a,suitable,default,return,the,application,context,not,yet,refreshed,see,set,application,context,class,class;protected,configurable,application,context,create,application,context,class,context,class,this,application,context,class,if,context,class,null,try,switch,this,web,application,type,case,servlet,context,class,class,for,name,break,case,reactive,context,class,class,for,name,break,default,context,class,class,for,name,catch,class,not,found,exception,ex,throw,new,illegal,state,exception,unable,create,a,default,application,context,please,specify,an,application,context,class,ex,return,configurable,application,context,bean,utils,instantiate,class,context,class
SpringApplication -> protected ConfigurableApplicationContext createApplicationContext();1538570355;Strategy method used to create the {@link ApplicationContext}. By default this_method will respect any explicitly set application context or application context_class before falling back to a suitable default._@return the application context (not yet refreshed)_@see #setApplicationContextClass(Class);protected ConfigurableApplicationContext createApplicationContext() {_		Class<?> contextClass = this.applicationContextClass__		if (contextClass == null) {_			try {_				switch (this.webApplicationType) {_				case SERVLET:_					contextClass = Class.forName(DEFAULT_WEB_CONTEXT_CLASS)__					break__				case REACTIVE:_					contextClass = Class.forName(DEFAULT_REACTIVE_WEB_CONTEXT_CLASS)__					break__				default:_					contextClass = Class.forName(DEFAULT_CONTEXT_CLASS)__				}_			}_			catch (ClassNotFoundException ex) {_				throw new IllegalStateException(_						"Unable create a default ApplicationContext, "_								+ "please specify an ApplicationContextClass",_						ex)__			}_		}_		return (ConfigurableApplicationContext) BeanUtils.instantiateClass(contextClass)__	};strategy,method,used,to,create,the,link,application,context,by,default,this,method,will,respect,any,explicitly,set,application,context,or,application,context,class,before,falling,back,to,a,suitable,default,return,the,application,context,not,yet,refreshed,see,set,application,context,class,class;protected,configurable,application,context,create,application,context,class,context,class,this,application,context,class,if,context,class,null,try,switch,this,web,application,type,case,servlet,context,class,class,for,name,break,case,reactive,context,class,class,for,name,break,default,context,class,class,for,name,catch,class,not,found,exception,ex,throw,new,illegal,state,exception,unable,create,a,default,application,context,please,specify,an,application,context,class,ex,return,configurable,application,context,bean,utils,instantiate,class,context,class
SpringApplication -> protected ConfigurableApplicationContext createApplicationContext();1538707540;Strategy method used to create the {@link ApplicationContext}. By default this_method will respect any explicitly set application context or application context_class before falling back to a suitable default._@return the application context (not yet refreshed)_@see #setApplicationContextClass(Class);protected ConfigurableApplicationContext createApplicationContext() {_		Class<?> contextClass = this.applicationContextClass__		if (contextClass == null) {_			try {_				switch (this.webApplicationType) {_				case SERVLET:_					contextClass = Class.forName(DEFAULT_WEB_CONTEXT_CLASS)__					break__				case REACTIVE:_					contextClass = Class.forName(DEFAULT_REACTIVE_WEB_CONTEXT_CLASS)__					break__				default:_					contextClass = Class.forName(DEFAULT_CONTEXT_CLASS)__				}_			}_			catch (ClassNotFoundException ex) {_				throw new IllegalStateException(_						"Unable create a default ApplicationContext, "_								+ "please specify an ApplicationContextClass",_						ex)__			}_		}_		return (ConfigurableApplicationContext) BeanUtils.instantiateClass(contextClass)__	};strategy,method,used,to,create,the,link,application,context,by,default,this,method,will,respect,any,explicitly,set,application,context,or,application,context,class,before,falling,back,to,a,suitable,default,return,the,application,context,not,yet,refreshed,see,set,application,context,class,class;protected,configurable,application,context,create,application,context,class,context,class,this,application,context,class,if,context,class,null,try,switch,this,web,application,type,case,servlet,context,class,class,for,name,break,case,reactive,context,class,class,for,name,break,default,context,class,class,for,name,catch,class,not,found,exception,ex,throw,new,illegal,state,exception,unable,create,a,default,application,context,please,specify,an,application,context,class,ex,return,configurable,application,context,bean,utils,instantiate,class,context,class
SpringApplication -> protected ConfigurableApplicationContext createApplicationContext();1538750610;Strategy method used to create the {@link ApplicationContext}. By default this_method will respect any explicitly set application context or application context_class before falling back to a suitable default._@return the application context (not yet refreshed)_@see #setApplicationContextClass(Class);protected ConfigurableApplicationContext createApplicationContext() {_		Class<?> contextClass = this.applicationContextClass__		if (contextClass == null) {_			try {_				switch (this.webApplicationType) {_				case SERVLET:_					contextClass = Class.forName(DEFAULT_WEB_CONTEXT_CLASS)__					break__				case REACTIVE:_					contextClass = Class.forName(DEFAULT_REACTIVE_WEB_CONTEXT_CLASS)__					break__				default:_					contextClass = Class.forName(DEFAULT_CONTEXT_CLASS)__				}_			}_			catch (ClassNotFoundException ex) {_				throw new IllegalStateException(_						"Unable create a default ApplicationContext, "_								+ "please specify an ApplicationContextClass",_						ex)__			}_		}_		return (ConfigurableApplicationContext) BeanUtils.instantiateClass(contextClass)__	};strategy,method,used,to,create,the,link,application,context,by,default,this,method,will,respect,any,explicitly,set,application,context,or,application,context,class,before,falling,back,to,a,suitable,default,return,the,application,context,not,yet,refreshed,see,set,application,context,class,class;protected,configurable,application,context,create,application,context,class,context,class,this,application,context,class,if,context,class,null,try,switch,this,web,application,type,case,servlet,context,class,class,for,name,break,case,reactive,context,class,class,for,name,break,default,context,class,class,for,name,catch,class,not,found,exception,ex,throw,new,illegal,state,exception,unable,create,a,default,application,context,please,specify,an,application,context,class,ex,return,configurable,application,context,bean,utils,instantiate,class,context,class
SpringApplication -> protected ConfigurableApplicationContext createApplicationContext();1538771652;Strategy method used to create the {@link ApplicationContext}. By default this_method will respect any explicitly set application context or application context_class before falling back to a suitable default._@return the application context (not yet refreshed)_@see #setApplicationContextClass(Class);protected ConfigurableApplicationContext createApplicationContext() {_		Class<?> contextClass = this.applicationContextClass__		if (contextClass == null) {_			try {_				switch (this.webApplicationType) {_				case SERVLET:_					contextClass = Class.forName(DEFAULT_SERVLET_WEB_CONTEXT_CLASS)__					break__				case REACTIVE:_					contextClass = Class.forName(DEFAULT_REACTIVE_WEB_CONTEXT_CLASS)__					break__				default:_					contextClass = Class.forName(DEFAULT_CONTEXT_CLASS)__				}_			}_			catch (ClassNotFoundException ex) {_				throw new IllegalStateException(_						"Unable create a default ApplicationContext, "_								+ "please specify an ApplicationContextClass",_						ex)__			}_		}_		return (ConfigurableApplicationContext) BeanUtils.instantiateClass(contextClass)__	};strategy,method,used,to,create,the,link,application,context,by,default,this,method,will,respect,any,explicitly,set,application,context,or,application,context,class,before,falling,back,to,a,suitable,default,return,the,application,context,not,yet,refreshed,see,set,application,context,class,class;protected,configurable,application,context,create,application,context,class,context,class,this,application,context,class,if,context,class,null,try,switch,this,web,application,type,case,servlet,context,class,class,for,name,break,case,reactive,context,class,class,for,name,break,default,context,class,class,for,name,catch,class,not,found,exception,ex,throw,new,illegal,state,exception,unable,create,a,default,application,context,please,specify,an,application,context,class,ex,return,configurable,application,context,bean,utils,instantiate,class,context,class
SpringApplication -> protected ConfigurableApplicationContext createApplicationContext();1540419762;Strategy method used to create the {@link ApplicationContext}. By default this_method will respect any explicitly set application context or application context_class before falling back to a suitable default._@return the application context (not yet refreshed)_@see #setApplicationContextClass(Class);protected ConfigurableApplicationContext createApplicationContext() {_		Class<?> contextClass = this.applicationContextClass__		if (contextClass == null) {_			try {_				switch (this.webApplicationType) {_				case SERVLET:_					contextClass = Class.forName(DEFAULT_SERVLET_WEB_CONTEXT_CLASS)__					break__				case REACTIVE:_					contextClass = Class.forName(DEFAULT_REACTIVE_WEB_CONTEXT_CLASS)__					break__				default:_					contextClass = Class.forName(DEFAULT_CONTEXT_CLASS)__				}_			}_			catch (ClassNotFoundException ex) {_				throw new IllegalStateException(_						"Unable create a default ApplicationContext, "_								+ "please specify an ApplicationContextClass",_						ex)__			}_		}_		return (ConfigurableApplicationContext) BeanUtils.instantiateClass(contextClass)__	};strategy,method,used,to,create,the,link,application,context,by,default,this,method,will,respect,any,explicitly,set,application,context,or,application,context,class,before,falling,back,to,a,suitable,default,return,the,application,context,not,yet,refreshed,see,set,application,context,class,class;protected,configurable,application,context,create,application,context,class,context,class,this,application,context,class,if,context,class,null,try,switch,this,web,application,type,case,servlet,context,class,class,for,name,break,case,reactive,context,class,class,for,name,break,default,context,class,class,for,name,catch,class,not,found,exception,ex,throw,new,illegal,state,exception,unable,create,a,default,application,context,please,specify,an,application,context,class,ex,return,configurable,application,context,bean,utils,instantiate,class,context,class
SpringApplication -> protected ConfigurableApplicationContext createApplicationContext();1541060131;Strategy method used to create the {@link ApplicationContext}. By default this_method will respect any explicitly set application context or application context_class before falling back to a suitable default._@return the application context (not yet refreshed)_@see #setApplicationContextClass(Class);protected ConfigurableApplicationContext createApplicationContext() {_		Class<?> contextClass = this.applicationContextClass__		if (contextClass == null) {_			try {_				switch (this.webApplicationType) {_				case SERVLET:_					contextClass = Class.forName(DEFAULT_SERVLET_WEB_CONTEXT_CLASS)__					break__				case REACTIVE:_					contextClass = Class.forName(DEFAULT_REACTIVE_WEB_CONTEXT_CLASS)__					break__				default:_					contextClass = Class.forName(DEFAULT_CONTEXT_CLASS)__				}_			}_			catch (ClassNotFoundException ex) {_				throw new IllegalStateException(_						"Unable create a default ApplicationContext, "_								+ "please specify an ApplicationContextClass",_						ex)__			}_		}_		return (ConfigurableApplicationContext) BeanUtils.instantiateClass(contextClass)__	};strategy,method,used,to,create,the,link,application,context,by,default,this,method,will,respect,any,explicitly,set,application,context,or,application,context,class,before,falling,back,to,a,suitable,default,return,the,application,context,not,yet,refreshed,see,set,application,context,class,class;protected,configurable,application,context,create,application,context,class,context,class,this,application,context,class,if,context,class,null,try,switch,this,web,application,type,case,servlet,context,class,class,for,name,break,case,reactive,context,class,class,for,name,break,default,context,class,class,for,name,catch,class,not,found,exception,ex,throw,new,illegal,state,exception,unable,create,a,default,application,context,please,specify,an,application,context,class,ex,return,configurable,application,context,bean,utils,instantiate,class,context,class
SpringApplication -> protected ConfigurableApplicationContext createApplicationContext();1546943477;Strategy method used to create the {@link ApplicationContext}. By default this_method will respect any explicitly set application context or application context_class before falling back to a suitable default._@return the application context (not yet refreshed)_@see #setApplicationContextClass(Class);protected ConfigurableApplicationContext createApplicationContext() {_		Class<?> contextClass = this.applicationContextClass__		if (contextClass == null) {_			try {_				switch (this.webApplicationType) {_				case SERVLET:_					contextClass = Class.forName(DEFAULT_SERVLET_WEB_CONTEXT_CLASS)__					break__				case REACTIVE:_					contextClass = Class.forName(DEFAULT_REACTIVE_WEB_CONTEXT_CLASS)__					break__				default:_					contextClass = Class.forName(DEFAULT_CONTEXT_CLASS)__				}_			}_			catch (ClassNotFoundException ex) {_				throw new IllegalStateException(_						"Unable create a default ApplicationContext, "_								+ "please specify an ApplicationContextClass",_						ex)__			}_		}_		return (ConfigurableApplicationContext) BeanUtils.instantiateClass(contextClass)__	};strategy,method,used,to,create,the,link,application,context,by,default,this,method,will,respect,any,explicitly,set,application,context,or,application,context,class,before,falling,back,to,a,suitable,default,return,the,application,context,not,yet,refreshed,see,set,application,context,class,class;protected,configurable,application,context,create,application,context,class,context,class,this,application,context,class,if,context,class,null,try,switch,this,web,application,type,case,servlet,context,class,class,for,name,break,case,reactive,context,class,class,for,name,break,default,context,class,class,for,name,catch,class,not,found,exception,ex,throw,new,illegal,state,exception,unable,create,a,default,application,context,please,specify,an,application,context,class,ex,return,configurable,application,context,bean,utils,instantiate,class,context,class
SpringApplication -> protected ConfigurableApplicationContext createApplicationContext();1549791353;Strategy method used to create the {@link ApplicationContext}. By default this_method will respect any explicitly set application context or application context_class before falling back to a suitable default._@return the application context (not yet refreshed)_@see #setApplicationContextClass(Class);protected ConfigurableApplicationContext createApplicationContext() {_		Class<?> contextClass = this.applicationContextClass__		if (contextClass == null) {_			try {_				switch (this.webApplicationType) {_				case SERVLET:_					contextClass = Class.forName(DEFAULT_SERVLET_WEB_CONTEXT_CLASS)__					break__				case REACTIVE:_					contextClass = Class.forName(DEFAULT_REACTIVE_WEB_CONTEXT_CLASS)__					break__				default:_					contextClass = Class.forName(DEFAULT_CONTEXT_CLASS)__				}_			}_			catch (ClassNotFoundException ex) {_				throw new IllegalStateException(_						"Unable create a default ApplicationContext, "_								+ "please specify an ApplicationContextClass",_						ex)__			}_		}_		return (ConfigurableApplicationContext) BeanUtils.instantiateClass(contextClass)__	};strategy,method,used,to,create,the,link,application,context,by,default,this,method,will,respect,any,explicitly,set,application,context,or,application,context,class,before,falling,back,to,a,suitable,default,return,the,application,context,not,yet,refreshed,see,set,application,context,class,class;protected,configurable,application,context,create,application,context,class,context,class,this,application,context,class,if,context,class,null,try,switch,this,web,application,type,case,servlet,context,class,class,for,name,break,case,reactive,context,class,class,for,name,break,default,context,class,class,for,name,catch,class,not,found,exception,ex,throw,new,illegal,state,exception,unable,create,a,default,application,context,please,specify,an,application,context,class,ex,return,configurable,application,context,bean,utils,instantiate,class,context,class
SpringApplication -> protected ConfigurableApplicationContext createApplicationContext();1550148109;Strategy method used to create the {@link ApplicationContext}. By default this_method will respect any explicitly set application context or application context_class before falling back to a suitable default._@return the application context (not yet refreshed)_@see #setApplicationContextClass(Class);protected ConfigurableApplicationContext createApplicationContext() {_		Class<?> contextClass = this.applicationContextClass__		if (contextClass == null) {_			try {_				switch (this.webApplicationType) {_				case SERVLET:_					contextClass = Class.forName(DEFAULT_SERVLET_WEB_CONTEXT_CLASS)__					break__				case REACTIVE:_					contextClass = Class.forName(DEFAULT_REACTIVE_WEB_CONTEXT_CLASS)__					break__				default:_					contextClass = Class.forName(DEFAULT_CONTEXT_CLASS)__				}_			}_			catch (ClassNotFoundException ex) {_				throw new IllegalStateException(_						"Unable create a default ApplicationContext, "_								+ "please specify an ApplicationContextClass",_						ex)__			}_		}_		return (ConfigurableApplicationContext) BeanUtils.instantiateClass(contextClass)__	};strategy,method,used,to,create,the,link,application,context,by,default,this,method,will,respect,any,explicitly,set,application,context,or,application,context,class,before,falling,back,to,a,suitable,default,return,the,application,context,not,yet,refreshed,see,set,application,context,class,class;protected,configurable,application,context,create,application,context,class,context,class,this,application,context,class,if,context,class,null,try,switch,this,web,application,type,case,servlet,context,class,class,for,name,break,case,reactive,context,class,class,for,name,break,default,context,class,class,for,name,catch,class,not,found,exception,ex,throw,new,illegal,state,exception,unable,create,a,default,application,context,please,specify,an,application,context,class,ex,return,configurable,application,context,bean,utils,instantiate,class,context,class
SpringApplication -> public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator);1507173536;Sets the bean name generator that should be used when generating bean names._@param beanNameGenerator the bean name generator;public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator) {_		this.beanNameGenerator = beanNameGenerator__	};sets,the,bean,name,generator,that,should,be,used,when,generating,bean,names,param,bean,name,generator,the,bean,name,generator;public,void,set,bean,name,generator,bean,name,generator,bean,name,generator,this,bean,name,generator,bean,name,generator
SpringApplication -> public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator);1509381678;Sets the bean name generator that should be used when generating bean names._@param beanNameGenerator the bean name generator;public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator) {_		this.beanNameGenerator = beanNameGenerator__	};sets,the,bean,name,generator,that,should,be,used,when,generating,bean,names,param,bean,name,generator,the,bean,name,generator;public,void,set,bean,name,generator,bean,name,generator,bean,name,generator,this,bean,name,generator,bean,name,generator
SpringApplication -> public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator);1510995225;Sets the bean name generator that should be used when generating bean names._@param beanNameGenerator the bean name generator;public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator) {_		this.beanNameGenerator = beanNameGenerator__	};sets,the,bean,name,generator,that,should,be,used,when,generating,bean,names,param,bean,name,generator,the,bean,name,generator;public,void,set,bean,name,generator,bean,name,generator,bean,name,generator,this,bean,name,generator,bean,name,generator
SpringApplication -> public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator);1515670013;Sets the bean name generator that should be used when generating bean names._@param beanNameGenerator the bean name generator;public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator) {_		this.beanNameGenerator = beanNameGenerator__	};sets,the,bean,name,generator,that,should,be,used,when,generating,bean,names,param,bean,name,generator,the,bean,name,generator;public,void,set,bean,name,generator,bean,name,generator,bean,name,generator,this,bean,name,generator,bean,name,generator
SpringApplication -> public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator);1519362690;Sets the bean name generator that should be used when generating bean names._@param beanNameGenerator the bean name generator;public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator) {_		this.beanNameGenerator = beanNameGenerator__	};sets,the,bean,name,generator,that,should,be,used,when,generating,bean,names,param,bean,name,generator,the,bean,name,generator;public,void,set,bean,name,generator,bean,name,generator,bean,name,generator,this,bean,name,generator,bean,name,generator
SpringApplication -> public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator);1522251721;Sets the bean name generator that should be used when generating bean names._@param beanNameGenerator the bean name generator;public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator) {_		this.beanNameGenerator = beanNameGenerator__	};sets,the,bean,name,generator,that,should,be,used,when,generating,bean,names,param,bean,name,generator,the,bean,name,generator;public,void,set,bean,name,generator,bean,name,generator,bean,name,generator,this,bean,name,generator,bean,name,generator
SpringApplication -> public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator);1525376698;Sets the bean name generator that should be used when generating bean names._@param beanNameGenerator the bean name generator;public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator) {_		this.beanNameGenerator = beanNameGenerator__	};sets,the,bean,name,generator,that,should,be,used,when,generating,bean,names,param,bean,name,generator,the,bean,name,generator;public,void,set,bean,name,generator,bean,name,generator,bean,name,generator,this,bean,name,generator,bean,name,generator
SpringApplication -> public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator);1525416882;Sets the bean name generator that should be used when generating bean names._@param beanNameGenerator the bean name generator;public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator) {_		this.beanNameGenerator = beanNameGenerator__	};sets,the,bean,name,generator,that,should,be,used,when,generating,bean,names,param,bean,name,generator,the,bean,name,generator;public,void,set,bean,name,generator,bean,name,generator,bean,name,generator,this,bean,name,generator,bean,name,generator
SpringApplication -> public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator);1526993305;Sets the bean name generator that should be used when generating bean names._@param beanNameGenerator the bean name generator;public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator) {_		this.beanNameGenerator = beanNameGenerator__	};sets,the,bean,name,generator,that,should,be,used,when,generating,bean,names,param,bean,name,generator,the,bean,name,generator;public,void,set,bean,name,generator,bean,name,generator,bean,name,generator,this,bean,name,generator,bean,name,generator
SpringApplication -> public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator);1529485904;Sets the bean name generator that should be used when generating bean names._@param beanNameGenerator the bean name generator;public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator) {_		this.beanNameGenerator = beanNameGenerator__	};sets,the,bean,name,generator,that,should,be,used,when,generating,bean,names,param,bean,name,generator,the,bean,name,generator;public,void,set,bean,name,generator,bean,name,generator,bean,name,generator,this,bean,name,generator,bean,name,generator
SpringApplication -> public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator);1531140616;Sets the bean name generator that should be used when generating bean names._@param beanNameGenerator the bean name generator;public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator) {_		this.beanNameGenerator = beanNameGenerator__	};sets,the,bean,name,generator,that,should,be,used,when,generating,bean,names,param,bean,name,generator,the,bean,name,generator;public,void,set,bean,name,generator,bean,name,generator,bean,name,generator,this,bean,name,generator,bean,name,generator
SpringApplication -> public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator);1531155529;Sets the bean name generator that should be used when generating bean names._@param beanNameGenerator the bean name generator;public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator) {_		this.beanNameGenerator = beanNameGenerator__	};sets,the,bean,name,generator,that,should,be,used,when,generating,bean,names,param,bean,name,generator,the,bean,name,generator;public,void,set,bean,name,generator,bean,name,generator,bean,name,generator,this,bean,name,generator,bean,name,generator
SpringApplication -> public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator);1531222098;Sets the bean name generator that should be used when generating bean names._@param beanNameGenerator the bean name generator;public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator) {_		this.beanNameGenerator = beanNameGenerator__	};sets,the,bean,name,generator,that,should,be,used,when,generating,bean,names,param,bean,name,generator,the,bean,name,generator;public,void,set,bean,name,generator,bean,name,generator,bean,name,generator,this,bean,name,generator,bean,name,generator
SpringApplication -> public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator);1532738143;Sets the bean name generator that should be used when generating bean names._@param beanNameGenerator the bean name generator;public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator) {_		this.beanNameGenerator = beanNameGenerator__	};sets,the,bean,name,generator,that,should,be,used,when,generating,bean,names,param,bean,name,generator,the,bean,name,generator;public,void,set,bean,name,generator,bean,name,generator,bean,name,generator,this,bean,name,generator,bean,name,generator
SpringApplication -> public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator);1534188228;Sets the bean name generator that should be used when generating bean names._@param beanNameGenerator the bean name generator;public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator) {_		this.beanNameGenerator = beanNameGenerator__	};sets,the,bean,name,generator,that,should,be,used,when,generating,bean,names,param,bean,name,generator,the,bean,name,generator;public,void,set,bean,name,generator,bean,name,generator,bean,name,generator,this,bean,name,generator,bean,name,generator
SpringApplication -> public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator);1535104170;Sets the bean name generator that should be used when generating bean names._@param beanNameGenerator the bean name generator;public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator) {_		this.beanNameGenerator = beanNameGenerator__	};sets,the,bean,name,generator,that,should,be,used,when,generating,bean,names,param,bean,name,generator,the,bean,name,generator;public,void,set,bean,name,generator,bean,name,generator,bean,name,generator,this,bean,name,generator,bean,name,generator
SpringApplication -> public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator);1536701067;Sets the bean name generator that should be used when generating bean names._@param beanNameGenerator the bean name generator;public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator) {_		this.beanNameGenerator = beanNameGenerator__	};sets,the,bean,name,generator,that,should,be,used,when,generating,bean,names,param,bean,name,generator,the,bean,name,generator;public,void,set,bean,name,generator,bean,name,generator,bean,name,generator,this,bean,name,generator,bean,name,generator
SpringApplication -> public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator);1538570355;Sets the bean name generator that should be used when generating bean names._@param beanNameGenerator the bean name generator;public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator) {_		this.beanNameGenerator = beanNameGenerator__	};sets,the,bean,name,generator,that,should,be,used,when,generating,bean,names,param,bean,name,generator,the,bean,name,generator;public,void,set,bean,name,generator,bean,name,generator,bean,name,generator,this,bean,name,generator,bean,name,generator
SpringApplication -> public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator);1538707540;Sets the bean name generator that should be used when generating bean names._@param beanNameGenerator the bean name generator;public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator) {_		this.beanNameGenerator = beanNameGenerator__	};sets,the,bean,name,generator,that,should,be,used,when,generating,bean,names,param,bean,name,generator,the,bean,name,generator;public,void,set,bean,name,generator,bean,name,generator,bean,name,generator,this,bean,name,generator,bean,name,generator
SpringApplication -> public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator);1538750610;Sets the bean name generator that should be used when generating bean names._@param beanNameGenerator the bean name generator;public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator) {_		this.beanNameGenerator = beanNameGenerator__	};sets,the,bean,name,generator,that,should,be,used,when,generating,bean,names,param,bean,name,generator,the,bean,name,generator;public,void,set,bean,name,generator,bean,name,generator,bean,name,generator,this,bean,name,generator,bean,name,generator
SpringApplication -> public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator);1538771652;Sets the bean name generator that should be used when generating bean names._@param beanNameGenerator the bean name generator;public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator) {_		this.beanNameGenerator = beanNameGenerator__	};sets,the,bean,name,generator,that,should,be,used,when,generating,bean,names,param,bean,name,generator,the,bean,name,generator;public,void,set,bean,name,generator,bean,name,generator,bean,name,generator,this,bean,name,generator,bean,name,generator
SpringApplication -> public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator);1540419762;Sets the bean name generator that should be used when generating bean names._@param beanNameGenerator the bean name generator;public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator) {_		this.beanNameGenerator = beanNameGenerator__	};sets,the,bean,name,generator,that,should,be,used,when,generating,bean,names,param,bean,name,generator,the,bean,name,generator;public,void,set,bean,name,generator,bean,name,generator,bean,name,generator,this,bean,name,generator,bean,name,generator
SpringApplication -> public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator);1541060131;Sets the bean name generator that should be used when generating bean names._@param beanNameGenerator the bean name generator;public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator) {_		this.beanNameGenerator = beanNameGenerator__	};sets,the,bean,name,generator,that,should,be,used,when,generating,bean,names,param,bean,name,generator,the,bean,name,generator;public,void,set,bean,name,generator,bean,name,generator,bean,name,generator,this,bean,name,generator,bean,name,generator
SpringApplication -> public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator);1546943477;Sets the bean name generator that should be used when generating bean names._@param beanNameGenerator the bean name generator;public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator) {_		this.beanNameGenerator = beanNameGenerator__	};sets,the,bean,name,generator,that,should,be,used,when,generating,bean,names,param,bean,name,generator,the,bean,name,generator;public,void,set,bean,name,generator,bean,name,generator,bean,name,generator,this,bean,name,generator,bean,name,generator
SpringApplication -> public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator);1549791353;Sets the bean name generator that should be used when generating bean names._@param beanNameGenerator the bean name generator;public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator) {_		this.beanNameGenerator = beanNameGenerator__	};sets,the,bean,name,generator,that,should,be,used,when,generating,bean,names,param,bean,name,generator,the,bean,name,generator;public,void,set,bean,name,generator,bean,name,generator,bean,name,generator,this,bean,name,generator,bean,name,generator
SpringApplication -> public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator);1550148109;Sets the bean name generator that should be used when generating bean names._@param beanNameGenerator the bean name generator;public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator) {_		this.beanNameGenerator = beanNameGenerator__	};sets,the,bean,name,generator,that,should,be,used,when,generating,bean,names,param,bean,name,generator,the,bean,name,generator;public,void,set,bean,name,generator,bean,name,generator,bean,name,generator,this,bean,name,generator,bean,name,generator
SpringApplication -> public void setRegisterShutdownHook(boolean registerShutdownHook);1507173536;Sets if the created {@link ApplicationContext} should have a shutdown hook_registered. Defaults to {@code true} to ensure that JVM shutdowns are handled_gracefully._@param registerShutdownHook if the shutdown hook should be registered;public void setRegisterShutdownHook(boolean registerShutdownHook) {_		this.registerShutdownHook = registerShutdownHook__	};sets,if,the,created,link,application,context,should,have,a,shutdown,hook,registered,defaults,to,code,true,to,ensure,that,jvm,shutdowns,are,handled,gracefully,param,register,shutdown,hook,if,the,shutdown,hook,should,be,registered;public,void,set,register,shutdown,hook,boolean,register,shutdown,hook,this,register,shutdown,hook,register,shutdown,hook
SpringApplication -> public void setRegisterShutdownHook(boolean registerShutdownHook);1509381678;Sets if the created {@link ApplicationContext} should have a shutdown hook_registered. Defaults to {@code true} to ensure that JVM shutdowns are handled_gracefully._@param registerShutdownHook if the shutdown hook should be registered;public void setRegisterShutdownHook(boolean registerShutdownHook) {_		this.registerShutdownHook = registerShutdownHook__	};sets,if,the,created,link,application,context,should,have,a,shutdown,hook,registered,defaults,to,code,true,to,ensure,that,jvm,shutdowns,are,handled,gracefully,param,register,shutdown,hook,if,the,shutdown,hook,should,be,registered;public,void,set,register,shutdown,hook,boolean,register,shutdown,hook,this,register,shutdown,hook,register,shutdown,hook
SpringApplication -> public void setRegisterShutdownHook(boolean registerShutdownHook);1510995225;Sets if the created {@link ApplicationContext} should have a shutdown hook_registered. Defaults to {@code true} to ensure that JVM shutdowns are handled_gracefully._@param registerShutdownHook if the shutdown hook should be registered;public void setRegisterShutdownHook(boolean registerShutdownHook) {_		this.registerShutdownHook = registerShutdownHook__	};sets,if,the,created,link,application,context,should,have,a,shutdown,hook,registered,defaults,to,code,true,to,ensure,that,jvm,shutdowns,are,handled,gracefully,param,register,shutdown,hook,if,the,shutdown,hook,should,be,registered;public,void,set,register,shutdown,hook,boolean,register,shutdown,hook,this,register,shutdown,hook,register,shutdown,hook
SpringApplication -> public void setRegisterShutdownHook(boolean registerShutdownHook);1515670013;Sets if the created {@link ApplicationContext} should have a shutdown hook_registered. Defaults to {@code true} to ensure that JVM shutdowns are handled_gracefully._@param registerShutdownHook if the shutdown hook should be registered;public void setRegisterShutdownHook(boolean registerShutdownHook) {_		this.registerShutdownHook = registerShutdownHook__	};sets,if,the,created,link,application,context,should,have,a,shutdown,hook,registered,defaults,to,code,true,to,ensure,that,jvm,shutdowns,are,handled,gracefully,param,register,shutdown,hook,if,the,shutdown,hook,should,be,registered;public,void,set,register,shutdown,hook,boolean,register,shutdown,hook,this,register,shutdown,hook,register,shutdown,hook
SpringApplication -> public void setRegisterShutdownHook(boolean registerShutdownHook);1519362690;Sets if the created {@link ApplicationContext} should have a shutdown hook_registered. Defaults to {@code true} to ensure that JVM shutdowns are handled_gracefully._@param registerShutdownHook if the shutdown hook should be registered;public void setRegisterShutdownHook(boolean registerShutdownHook) {_		this.registerShutdownHook = registerShutdownHook__	};sets,if,the,created,link,application,context,should,have,a,shutdown,hook,registered,defaults,to,code,true,to,ensure,that,jvm,shutdowns,are,handled,gracefully,param,register,shutdown,hook,if,the,shutdown,hook,should,be,registered;public,void,set,register,shutdown,hook,boolean,register,shutdown,hook,this,register,shutdown,hook,register,shutdown,hook
SpringApplication -> public void setRegisterShutdownHook(boolean registerShutdownHook);1522251721;Sets if the created {@link ApplicationContext} should have a shutdown hook_registered. Defaults to {@code true} to ensure that JVM shutdowns are handled_gracefully._@param registerShutdownHook if the shutdown hook should be registered;public void setRegisterShutdownHook(boolean registerShutdownHook) {_		this.registerShutdownHook = registerShutdownHook__	};sets,if,the,created,link,application,context,should,have,a,shutdown,hook,registered,defaults,to,code,true,to,ensure,that,jvm,shutdowns,are,handled,gracefully,param,register,shutdown,hook,if,the,shutdown,hook,should,be,registered;public,void,set,register,shutdown,hook,boolean,register,shutdown,hook,this,register,shutdown,hook,register,shutdown,hook
SpringApplication -> public void setRegisterShutdownHook(boolean registerShutdownHook);1525376698;Sets if the created {@link ApplicationContext} should have a shutdown hook_registered. Defaults to {@code true} to ensure that JVM shutdowns are handled_gracefully._@param registerShutdownHook if the shutdown hook should be registered;public void setRegisterShutdownHook(boolean registerShutdownHook) {_		this.registerShutdownHook = registerShutdownHook__	};sets,if,the,created,link,application,context,should,have,a,shutdown,hook,registered,defaults,to,code,true,to,ensure,that,jvm,shutdowns,are,handled,gracefully,param,register,shutdown,hook,if,the,shutdown,hook,should,be,registered;public,void,set,register,shutdown,hook,boolean,register,shutdown,hook,this,register,shutdown,hook,register,shutdown,hook
SpringApplication -> public void setRegisterShutdownHook(boolean registerShutdownHook);1525416882;Sets if the created {@link ApplicationContext} should have a shutdown hook_registered. Defaults to {@code true} to ensure that JVM shutdowns are handled_gracefully._@param registerShutdownHook if the shutdown hook should be registered;public void setRegisterShutdownHook(boolean registerShutdownHook) {_		this.registerShutdownHook = registerShutdownHook__	};sets,if,the,created,link,application,context,should,have,a,shutdown,hook,registered,defaults,to,code,true,to,ensure,that,jvm,shutdowns,are,handled,gracefully,param,register,shutdown,hook,if,the,shutdown,hook,should,be,registered;public,void,set,register,shutdown,hook,boolean,register,shutdown,hook,this,register,shutdown,hook,register,shutdown,hook
SpringApplication -> public void setRegisterShutdownHook(boolean registerShutdownHook);1526993305;Sets if the created {@link ApplicationContext} should have a shutdown hook_registered. Defaults to {@code true} to ensure that JVM shutdowns are handled_gracefully._@param registerShutdownHook if the shutdown hook should be registered;public void setRegisterShutdownHook(boolean registerShutdownHook) {_		this.registerShutdownHook = registerShutdownHook__	};sets,if,the,created,link,application,context,should,have,a,shutdown,hook,registered,defaults,to,code,true,to,ensure,that,jvm,shutdowns,are,handled,gracefully,param,register,shutdown,hook,if,the,shutdown,hook,should,be,registered;public,void,set,register,shutdown,hook,boolean,register,shutdown,hook,this,register,shutdown,hook,register,shutdown,hook
SpringApplication -> public void setRegisterShutdownHook(boolean registerShutdownHook);1529485904;Sets if the created {@link ApplicationContext} should have a shutdown hook_registered. Defaults to {@code true} to ensure that JVM shutdowns are handled_gracefully._@param registerShutdownHook if the shutdown hook should be registered;public void setRegisterShutdownHook(boolean registerShutdownHook) {_		this.registerShutdownHook = registerShutdownHook__	};sets,if,the,created,link,application,context,should,have,a,shutdown,hook,registered,defaults,to,code,true,to,ensure,that,jvm,shutdowns,are,handled,gracefully,param,register,shutdown,hook,if,the,shutdown,hook,should,be,registered;public,void,set,register,shutdown,hook,boolean,register,shutdown,hook,this,register,shutdown,hook,register,shutdown,hook
SpringApplication -> public void setRegisterShutdownHook(boolean registerShutdownHook);1531140616;Sets if the created {@link ApplicationContext} should have a shutdown hook_registered. Defaults to {@code true} to ensure that JVM shutdowns are handled_gracefully._@param registerShutdownHook if the shutdown hook should be registered;public void setRegisterShutdownHook(boolean registerShutdownHook) {_		this.registerShutdownHook = registerShutdownHook__	};sets,if,the,created,link,application,context,should,have,a,shutdown,hook,registered,defaults,to,code,true,to,ensure,that,jvm,shutdowns,are,handled,gracefully,param,register,shutdown,hook,if,the,shutdown,hook,should,be,registered;public,void,set,register,shutdown,hook,boolean,register,shutdown,hook,this,register,shutdown,hook,register,shutdown,hook
SpringApplication -> public void setRegisterShutdownHook(boolean registerShutdownHook);1531155529;Sets if the created {@link ApplicationContext} should have a shutdown hook_registered. Defaults to {@code true} to ensure that JVM shutdowns are handled_gracefully._@param registerShutdownHook if the shutdown hook should be registered;public void setRegisterShutdownHook(boolean registerShutdownHook) {_		this.registerShutdownHook = registerShutdownHook__	};sets,if,the,created,link,application,context,should,have,a,shutdown,hook,registered,defaults,to,code,true,to,ensure,that,jvm,shutdowns,are,handled,gracefully,param,register,shutdown,hook,if,the,shutdown,hook,should,be,registered;public,void,set,register,shutdown,hook,boolean,register,shutdown,hook,this,register,shutdown,hook,register,shutdown,hook
SpringApplication -> public void setRegisterShutdownHook(boolean registerShutdownHook);1531222098;Sets if the created {@link ApplicationContext} should have a shutdown hook_registered. Defaults to {@code true} to ensure that JVM shutdowns are handled_gracefully._@param registerShutdownHook if the shutdown hook should be registered;public void setRegisterShutdownHook(boolean registerShutdownHook) {_		this.registerShutdownHook = registerShutdownHook__	};sets,if,the,created,link,application,context,should,have,a,shutdown,hook,registered,defaults,to,code,true,to,ensure,that,jvm,shutdowns,are,handled,gracefully,param,register,shutdown,hook,if,the,shutdown,hook,should,be,registered;public,void,set,register,shutdown,hook,boolean,register,shutdown,hook,this,register,shutdown,hook,register,shutdown,hook
SpringApplication -> public void setRegisterShutdownHook(boolean registerShutdownHook);1532738143;Sets if the created {@link ApplicationContext} should have a shutdown hook_registered. Defaults to {@code true} to ensure that JVM shutdowns are handled_gracefully._@param registerShutdownHook if the shutdown hook should be registered;public void setRegisterShutdownHook(boolean registerShutdownHook) {_		this.registerShutdownHook = registerShutdownHook__	};sets,if,the,created,link,application,context,should,have,a,shutdown,hook,registered,defaults,to,code,true,to,ensure,that,jvm,shutdowns,are,handled,gracefully,param,register,shutdown,hook,if,the,shutdown,hook,should,be,registered;public,void,set,register,shutdown,hook,boolean,register,shutdown,hook,this,register,shutdown,hook,register,shutdown,hook
SpringApplication -> public void setRegisterShutdownHook(boolean registerShutdownHook);1534188228;Sets if the created {@link ApplicationContext} should have a shutdown hook_registered. Defaults to {@code true} to ensure that JVM shutdowns are handled_gracefully._@param registerShutdownHook if the shutdown hook should be registered;public void setRegisterShutdownHook(boolean registerShutdownHook) {_		this.registerShutdownHook = registerShutdownHook__	};sets,if,the,created,link,application,context,should,have,a,shutdown,hook,registered,defaults,to,code,true,to,ensure,that,jvm,shutdowns,are,handled,gracefully,param,register,shutdown,hook,if,the,shutdown,hook,should,be,registered;public,void,set,register,shutdown,hook,boolean,register,shutdown,hook,this,register,shutdown,hook,register,shutdown,hook
SpringApplication -> public void setRegisterShutdownHook(boolean registerShutdownHook);1535104170;Sets if the created {@link ApplicationContext} should have a shutdown hook_registered. Defaults to {@code true} to ensure that JVM shutdowns are handled_gracefully._@param registerShutdownHook if the shutdown hook should be registered;public void setRegisterShutdownHook(boolean registerShutdownHook) {_		this.registerShutdownHook = registerShutdownHook__	};sets,if,the,created,link,application,context,should,have,a,shutdown,hook,registered,defaults,to,code,true,to,ensure,that,jvm,shutdowns,are,handled,gracefully,param,register,shutdown,hook,if,the,shutdown,hook,should,be,registered;public,void,set,register,shutdown,hook,boolean,register,shutdown,hook,this,register,shutdown,hook,register,shutdown,hook
SpringApplication -> public void setRegisterShutdownHook(boolean registerShutdownHook);1536701067;Sets if the created {@link ApplicationContext} should have a shutdown hook_registered. Defaults to {@code true} to ensure that JVM shutdowns are handled_gracefully._@param registerShutdownHook if the shutdown hook should be registered;public void setRegisterShutdownHook(boolean registerShutdownHook) {_		this.registerShutdownHook = registerShutdownHook__	};sets,if,the,created,link,application,context,should,have,a,shutdown,hook,registered,defaults,to,code,true,to,ensure,that,jvm,shutdowns,are,handled,gracefully,param,register,shutdown,hook,if,the,shutdown,hook,should,be,registered;public,void,set,register,shutdown,hook,boolean,register,shutdown,hook,this,register,shutdown,hook,register,shutdown,hook
SpringApplication -> public void setRegisterShutdownHook(boolean registerShutdownHook);1538570355;Sets if the created {@link ApplicationContext} should have a shutdown hook_registered. Defaults to {@code true} to ensure that JVM shutdowns are handled_gracefully._@param registerShutdownHook if the shutdown hook should be registered;public void setRegisterShutdownHook(boolean registerShutdownHook) {_		this.registerShutdownHook = registerShutdownHook__	};sets,if,the,created,link,application,context,should,have,a,shutdown,hook,registered,defaults,to,code,true,to,ensure,that,jvm,shutdowns,are,handled,gracefully,param,register,shutdown,hook,if,the,shutdown,hook,should,be,registered;public,void,set,register,shutdown,hook,boolean,register,shutdown,hook,this,register,shutdown,hook,register,shutdown,hook
SpringApplication -> public void setRegisterShutdownHook(boolean registerShutdownHook);1538707540;Sets if the created {@link ApplicationContext} should have a shutdown hook_registered. Defaults to {@code true} to ensure that JVM shutdowns are handled_gracefully._@param registerShutdownHook if the shutdown hook should be registered;public void setRegisterShutdownHook(boolean registerShutdownHook) {_		this.registerShutdownHook = registerShutdownHook__	};sets,if,the,created,link,application,context,should,have,a,shutdown,hook,registered,defaults,to,code,true,to,ensure,that,jvm,shutdowns,are,handled,gracefully,param,register,shutdown,hook,if,the,shutdown,hook,should,be,registered;public,void,set,register,shutdown,hook,boolean,register,shutdown,hook,this,register,shutdown,hook,register,shutdown,hook
SpringApplication -> public void setRegisterShutdownHook(boolean registerShutdownHook);1538750610;Sets if the created {@link ApplicationContext} should have a shutdown hook_registered. Defaults to {@code true} to ensure that JVM shutdowns are handled_gracefully._@param registerShutdownHook if the shutdown hook should be registered;public void setRegisterShutdownHook(boolean registerShutdownHook) {_		this.registerShutdownHook = registerShutdownHook__	};sets,if,the,created,link,application,context,should,have,a,shutdown,hook,registered,defaults,to,code,true,to,ensure,that,jvm,shutdowns,are,handled,gracefully,param,register,shutdown,hook,if,the,shutdown,hook,should,be,registered;public,void,set,register,shutdown,hook,boolean,register,shutdown,hook,this,register,shutdown,hook,register,shutdown,hook
SpringApplication -> public void setRegisterShutdownHook(boolean registerShutdownHook);1538771652;Sets if the created {@link ApplicationContext} should have a shutdown hook_registered. Defaults to {@code true} to ensure that JVM shutdowns are handled_gracefully._@param registerShutdownHook if the shutdown hook should be registered;public void setRegisterShutdownHook(boolean registerShutdownHook) {_		this.registerShutdownHook = registerShutdownHook__	};sets,if,the,created,link,application,context,should,have,a,shutdown,hook,registered,defaults,to,code,true,to,ensure,that,jvm,shutdowns,are,handled,gracefully,param,register,shutdown,hook,if,the,shutdown,hook,should,be,registered;public,void,set,register,shutdown,hook,boolean,register,shutdown,hook,this,register,shutdown,hook,register,shutdown,hook
SpringApplication -> public void setRegisterShutdownHook(boolean registerShutdownHook);1540419762;Sets if the created {@link ApplicationContext} should have a shutdown hook_registered. Defaults to {@code true} to ensure that JVM shutdowns are handled_gracefully._@param registerShutdownHook if the shutdown hook should be registered;public void setRegisterShutdownHook(boolean registerShutdownHook) {_		this.registerShutdownHook = registerShutdownHook__	};sets,if,the,created,link,application,context,should,have,a,shutdown,hook,registered,defaults,to,code,true,to,ensure,that,jvm,shutdowns,are,handled,gracefully,param,register,shutdown,hook,if,the,shutdown,hook,should,be,registered;public,void,set,register,shutdown,hook,boolean,register,shutdown,hook,this,register,shutdown,hook,register,shutdown,hook
SpringApplication -> public void setRegisterShutdownHook(boolean registerShutdownHook);1541060131;Sets if the created {@link ApplicationContext} should have a shutdown hook_registered. Defaults to {@code true} to ensure that JVM shutdowns are handled_gracefully._@param registerShutdownHook if the shutdown hook should be registered;public void setRegisterShutdownHook(boolean registerShutdownHook) {_		this.registerShutdownHook = registerShutdownHook__	};sets,if,the,created,link,application,context,should,have,a,shutdown,hook,registered,defaults,to,code,true,to,ensure,that,jvm,shutdowns,are,handled,gracefully,param,register,shutdown,hook,if,the,shutdown,hook,should,be,registered;public,void,set,register,shutdown,hook,boolean,register,shutdown,hook,this,register,shutdown,hook,register,shutdown,hook
SpringApplication -> public void setRegisterShutdownHook(boolean registerShutdownHook);1546943477;Sets if the created {@link ApplicationContext} should have a shutdown hook_registered. Defaults to {@code true} to ensure that JVM shutdowns are handled_gracefully._@param registerShutdownHook if the shutdown hook should be registered;public void setRegisterShutdownHook(boolean registerShutdownHook) {_		this.registerShutdownHook = registerShutdownHook__	};sets,if,the,created,link,application,context,should,have,a,shutdown,hook,registered,defaults,to,code,true,to,ensure,that,jvm,shutdowns,are,handled,gracefully,param,register,shutdown,hook,if,the,shutdown,hook,should,be,registered;public,void,set,register,shutdown,hook,boolean,register,shutdown,hook,this,register,shutdown,hook,register,shutdown,hook
SpringApplication -> public void setRegisterShutdownHook(boolean registerShutdownHook);1549791353;Sets if the created {@link ApplicationContext} should have a shutdown hook_registered. Defaults to {@code true} to ensure that JVM shutdowns are handled_gracefully._@param registerShutdownHook if the shutdown hook should be registered;public void setRegisterShutdownHook(boolean registerShutdownHook) {_		this.registerShutdownHook = registerShutdownHook__	};sets,if,the,created,link,application,context,should,have,a,shutdown,hook,registered,defaults,to,code,true,to,ensure,that,jvm,shutdowns,are,handled,gracefully,param,register,shutdown,hook,if,the,shutdown,hook,should,be,registered;public,void,set,register,shutdown,hook,boolean,register,shutdown,hook,this,register,shutdown,hook,register,shutdown,hook
SpringApplication -> public void setRegisterShutdownHook(boolean registerShutdownHook);1550148109;Sets if the created {@link ApplicationContext} should have a shutdown hook_registered. Defaults to {@code true} to ensure that JVM shutdowns are handled_gracefully._@param registerShutdownHook if the shutdown hook should be registered;public void setRegisterShutdownHook(boolean registerShutdownHook) {_		this.registerShutdownHook = registerShutdownHook__	};sets,if,the,created,link,application,context,should,have,a,shutdown,hook,registered,defaults,to,code,true,to,ensure,that,jvm,shutdowns,are,handled,gracefully,param,register,shutdown,hook,if,the,shutdown,hook,should,be,registered;public,void,set,register,shutdown,hook,boolean,register,shutdown,hook,this,register,shutdown,hook,register,shutdown,hook
SpringApplication -> protected Log getApplicationLog();1507173536;Returns the {@link Log} for the application. By default will be deduced._@return the application log;protected Log getApplicationLog() {_		if (this.mainApplicationClass == null) {_			return logger__		}_		return LogFactory.getLog(this.mainApplicationClass)__	};returns,the,link,log,for,the,application,by,default,will,be,deduced,return,the,application,log;protected,log,get,application,log,if,this,main,application,class,null,return,logger,return,log,factory,get,log,this,main,application,class
SpringApplication -> protected Log getApplicationLog();1509381678;Returns the {@link Log} for the application. By default will be deduced._@return the application log;protected Log getApplicationLog() {_		if (this.mainApplicationClass == null) {_			return logger__		}_		return LogFactory.getLog(this.mainApplicationClass)__	};returns,the,link,log,for,the,application,by,default,will,be,deduced,return,the,application,log;protected,log,get,application,log,if,this,main,application,class,null,return,logger,return,log,factory,get,log,this,main,application,class
SpringApplication -> protected Log getApplicationLog();1510995225;Returns the {@link Log} for the application. By default will be deduced._@return the application log;protected Log getApplicationLog() {_		if (this.mainApplicationClass == null) {_			return logger__		}_		return LogFactory.getLog(this.mainApplicationClass)__	};returns,the,link,log,for,the,application,by,default,will,be,deduced,return,the,application,log;protected,log,get,application,log,if,this,main,application,class,null,return,logger,return,log,factory,get,log,this,main,application,class
SpringApplication -> protected Log getApplicationLog();1515670013;Returns the {@link Log} for the application. By default will be deduced._@return the application log;protected Log getApplicationLog() {_		if (this.mainApplicationClass == null) {_			return logger__		}_		return LogFactory.getLog(this.mainApplicationClass)__	};returns,the,link,log,for,the,application,by,default,will,be,deduced,return,the,application,log;protected,log,get,application,log,if,this,main,application,class,null,return,logger,return,log,factory,get,log,this,main,application,class
SpringApplication -> protected Log getApplicationLog();1519362690;Returns the {@link Log} for the application. By default will be deduced._@return the application log;protected Log getApplicationLog() {_		if (this.mainApplicationClass == null) {_			return logger__		}_		return LogFactory.getLog(this.mainApplicationClass)__	};returns,the,link,log,for,the,application,by,default,will,be,deduced,return,the,application,log;protected,log,get,application,log,if,this,main,application,class,null,return,logger,return,log,factory,get,log,this,main,application,class
SpringApplication -> protected Log getApplicationLog();1522251721;Returns the {@link Log} for the application. By default will be deduced._@return the application log;protected Log getApplicationLog() {_		if (this.mainApplicationClass == null) {_			return logger__		}_		return LogFactory.getLog(this.mainApplicationClass)__	};returns,the,link,log,for,the,application,by,default,will,be,deduced,return,the,application,log;protected,log,get,application,log,if,this,main,application,class,null,return,logger,return,log,factory,get,log,this,main,application,class
SpringApplication -> protected Log getApplicationLog();1525376698;Returns the {@link Log} for the application. By default will be deduced._@return the application log;protected Log getApplicationLog() {_		if (this.mainApplicationClass == null) {_			return logger__		}_		return LogFactory.getLog(this.mainApplicationClass)__	};returns,the,link,log,for,the,application,by,default,will,be,deduced,return,the,application,log;protected,log,get,application,log,if,this,main,application,class,null,return,logger,return,log,factory,get,log,this,main,application,class
SpringApplication -> protected Log getApplicationLog();1525416882;Returns the {@link Log} for the application. By default will be deduced._@return the application log;protected Log getApplicationLog() {_		if (this.mainApplicationClass == null) {_			return logger__		}_		return LogFactory.getLog(this.mainApplicationClass)__	};returns,the,link,log,for,the,application,by,default,will,be,deduced,return,the,application,log;protected,log,get,application,log,if,this,main,application,class,null,return,logger,return,log,factory,get,log,this,main,application,class
SpringApplication -> protected Log getApplicationLog();1526993305;Returns the {@link Log} for the application. By default will be deduced._@return the application log;protected Log getApplicationLog() {_		if (this.mainApplicationClass == null) {_			return logger__		}_		return LogFactory.getLog(this.mainApplicationClass)__	};returns,the,link,log,for,the,application,by,default,will,be,deduced,return,the,application,log;protected,log,get,application,log,if,this,main,application,class,null,return,logger,return,log,factory,get,log,this,main,application,class
SpringApplication -> protected Log getApplicationLog();1529485904;Returns the {@link Log} for the application. By default will be deduced._@return the application log;protected Log getApplicationLog() {_		if (this.mainApplicationClass == null) {_			return logger__		}_		return LogFactory.getLog(this.mainApplicationClass)__	};returns,the,link,log,for,the,application,by,default,will,be,deduced,return,the,application,log;protected,log,get,application,log,if,this,main,application,class,null,return,logger,return,log,factory,get,log,this,main,application,class
SpringApplication -> protected Log getApplicationLog();1531140616;Returns the {@link Log} for the application. By default will be deduced._@return the application log;protected Log getApplicationLog() {_		if (this.mainApplicationClass == null) {_			return logger__		}_		return LogFactory.getLog(this.mainApplicationClass)__	};returns,the,link,log,for,the,application,by,default,will,be,deduced,return,the,application,log;protected,log,get,application,log,if,this,main,application,class,null,return,logger,return,log,factory,get,log,this,main,application,class
SpringApplication -> protected Log getApplicationLog();1531155529;Returns the {@link Log} for the application. By default will be deduced._@return the application log;protected Log getApplicationLog() {_		if (this.mainApplicationClass == null) {_			return logger__		}_		return LogFactory.getLog(this.mainApplicationClass)__	};returns,the,link,log,for,the,application,by,default,will,be,deduced,return,the,application,log;protected,log,get,application,log,if,this,main,application,class,null,return,logger,return,log,factory,get,log,this,main,application,class
SpringApplication -> protected Log getApplicationLog();1531222098;Returns the {@link Log} for the application. By default will be deduced._@return the application log;protected Log getApplicationLog() {_		if (this.mainApplicationClass == null) {_			return logger__		}_		return LogFactory.getLog(this.mainApplicationClass)__	};returns,the,link,log,for,the,application,by,default,will,be,deduced,return,the,application,log;protected,log,get,application,log,if,this,main,application,class,null,return,logger,return,log,factory,get,log,this,main,application,class
SpringApplication -> protected Log getApplicationLog();1532738143;Returns the {@link Log} for the application. By default will be deduced._@return the application log;protected Log getApplicationLog() {_		if (this.mainApplicationClass == null) {_			return logger__		}_		return LogFactory.getLog(this.mainApplicationClass)__	};returns,the,link,log,for,the,application,by,default,will,be,deduced,return,the,application,log;protected,log,get,application,log,if,this,main,application,class,null,return,logger,return,log,factory,get,log,this,main,application,class
SpringApplication -> protected Log getApplicationLog();1534188228;Returns the {@link Log} for the application. By default will be deduced._@return the application log;protected Log getApplicationLog() {_		if (this.mainApplicationClass == null) {_			return logger__		}_		return LogFactory.getLog(this.mainApplicationClass)__	};returns,the,link,log,for,the,application,by,default,will,be,deduced,return,the,application,log;protected,log,get,application,log,if,this,main,application,class,null,return,logger,return,log,factory,get,log,this,main,application,class
SpringApplication -> protected Log getApplicationLog();1535104170;Returns the {@link Log} for the application. By default will be deduced._@return the application log;protected Log getApplicationLog() {_		if (this.mainApplicationClass == null) {_			return logger__		}_		return LogFactory.getLog(this.mainApplicationClass)__	};returns,the,link,log,for,the,application,by,default,will,be,deduced,return,the,application,log;protected,log,get,application,log,if,this,main,application,class,null,return,logger,return,log,factory,get,log,this,main,application,class
SpringApplication -> protected Log getApplicationLog();1536701067;Returns the {@link Log} for the application. By default will be deduced._@return the application log;protected Log getApplicationLog() {_		if (this.mainApplicationClass == null) {_			return logger__		}_		return LogFactory.getLog(this.mainApplicationClass)__	};returns,the,link,log,for,the,application,by,default,will,be,deduced,return,the,application,log;protected,log,get,application,log,if,this,main,application,class,null,return,logger,return,log,factory,get,log,this,main,application,class
SpringApplication -> protected Log getApplicationLog();1538570355;Returns the {@link Log} for the application. By default will be deduced._@return the application log;protected Log getApplicationLog() {_		if (this.mainApplicationClass == null) {_			return logger__		}_		return LogFactory.getLog(this.mainApplicationClass)__	};returns,the,link,log,for,the,application,by,default,will,be,deduced,return,the,application,log;protected,log,get,application,log,if,this,main,application,class,null,return,logger,return,log,factory,get,log,this,main,application,class
SpringApplication -> protected Log getApplicationLog();1538707540;Returns the {@link Log} for the application. By default will be deduced._@return the application log;protected Log getApplicationLog() {_		if (this.mainApplicationClass == null) {_			return logger__		}_		return LogFactory.getLog(this.mainApplicationClass)__	};returns,the,link,log,for,the,application,by,default,will,be,deduced,return,the,application,log;protected,log,get,application,log,if,this,main,application,class,null,return,logger,return,log,factory,get,log,this,main,application,class
SpringApplication -> protected Log getApplicationLog();1538750610;Returns the {@link Log} for the application. By default will be deduced._@return the application log;protected Log getApplicationLog() {_		if (this.mainApplicationClass == null) {_			return logger__		}_		return LogFactory.getLog(this.mainApplicationClass)__	};returns,the,link,log,for,the,application,by,default,will,be,deduced,return,the,application,log;protected,log,get,application,log,if,this,main,application,class,null,return,logger,return,log,factory,get,log,this,main,application,class
SpringApplication -> protected Log getApplicationLog();1538771652;Returns the {@link Log} for the application. By default will be deduced._@return the application log;protected Log getApplicationLog() {_		if (this.mainApplicationClass == null) {_			return logger__		}_		return LogFactory.getLog(this.mainApplicationClass)__	};returns,the,link,log,for,the,application,by,default,will,be,deduced,return,the,application,log;protected,log,get,application,log,if,this,main,application,class,null,return,logger,return,log,factory,get,log,this,main,application,class
SpringApplication -> protected Log getApplicationLog();1540419762;Returns the {@link Log} for the application. By default will be deduced._@return the application log;protected Log getApplicationLog() {_		if (this.mainApplicationClass == null) {_			return logger__		}_		return LogFactory.getLog(this.mainApplicationClass)__	};returns,the,link,log,for,the,application,by,default,will,be,deduced,return,the,application,log;protected,log,get,application,log,if,this,main,application,class,null,return,logger,return,log,factory,get,log,this,main,application,class
SpringApplication -> protected Log getApplicationLog();1541060131;Returns the {@link Log} for the application. By default will be deduced._@return the application log;protected Log getApplicationLog() {_		if (this.mainApplicationClass == null) {_			return logger__		}_		return LogFactory.getLog(this.mainApplicationClass)__	};returns,the,link,log,for,the,application,by,default,will,be,deduced,return,the,application,log;protected,log,get,application,log,if,this,main,application,class,null,return,logger,return,log,factory,get,log,this,main,application,class
SpringApplication -> protected Log getApplicationLog();1546943477;Returns the {@link Log} for the application. By default will be deduced._@return the application log;protected Log getApplicationLog() {_		if (this.mainApplicationClass == null) {_			return logger__		}_		return LogFactory.getLog(this.mainApplicationClass)__	};returns,the,link,log,for,the,application,by,default,will,be,deduced,return,the,application,log;protected,log,get,application,log,if,this,main,application,class,null,return,logger,return,log,factory,get,log,this,main,application,class
SpringApplication -> protected Log getApplicationLog();1549791353;Returns the {@link Log} for the application. By default will be deduced._@return the application log;protected Log getApplicationLog() {_		if (this.mainApplicationClass == null) {_			return logger__		}_		return LogFactory.getLog(this.mainApplicationClass)__	};returns,the,link,log,for,the,application,by,default,will,be,deduced,return,the,application,log;protected,log,get,application,log,if,this,main,application,class,null,return,logger,return,log,factory,get,log,this,main,application,class
SpringApplication -> protected Log getApplicationLog();1550148109;Returns the {@link Log} for the application. By default will be deduced._@return the application log;protected Log getApplicationLog() {_		if (this.mainApplicationClass == null) {_			return logger__		}_		return LogFactory.getLog(this.mainApplicationClass)__	};returns,the,link,log,for,the,application,by,default,will,be,deduced,return,the,application,log;protected,log,get,application,log,if,this,main,application,class,null,return,logger,return,log,factory,get,log,this,main,application,class
SpringApplication -> public void setListeners(Collection<? extends ApplicationListener<?>> listeners);1507173536;Sets the {@link ApplicationListener}s that will be applied to the SpringApplication_and registered with the {@link ApplicationContext}._@param listeners the listeners to set;public void setListeners(Collection<? extends ApplicationListener<?>> listeners) {_		this.listeners = new ArrayList<>()__		this.listeners.addAll(listeners)__	};sets,the,link,application,listener,s,that,will,be,applied,to,the,spring,application,and,registered,with,the,link,application,context,param,listeners,the,listeners,to,set;public,void,set,listeners,collection,extends,application,listener,listeners,this,listeners,new,array,list,this,listeners,add,all,listeners
SpringApplication -> public void setListeners(Collection<? extends ApplicationListener<?>> listeners);1509381678;Sets the {@link ApplicationListener}s that will be applied to the SpringApplication_and registered with the {@link ApplicationContext}._@param listeners the listeners to set;public void setListeners(Collection<? extends ApplicationListener<?>> listeners) {_		this.listeners = new ArrayList<>()__		this.listeners.addAll(listeners)__	};sets,the,link,application,listener,s,that,will,be,applied,to,the,spring,application,and,registered,with,the,link,application,context,param,listeners,the,listeners,to,set;public,void,set,listeners,collection,extends,application,listener,listeners,this,listeners,new,array,list,this,listeners,add,all,listeners
SpringApplication -> public void setListeners(Collection<? extends ApplicationListener<?>> listeners);1510995225;Sets the {@link ApplicationListener}s that will be applied to the SpringApplication_and registered with the {@link ApplicationContext}._@param listeners the listeners to set;public void setListeners(Collection<? extends ApplicationListener<?>> listeners) {_		this.listeners = new ArrayList<>()__		this.listeners.addAll(listeners)__	};sets,the,link,application,listener,s,that,will,be,applied,to,the,spring,application,and,registered,with,the,link,application,context,param,listeners,the,listeners,to,set;public,void,set,listeners,collection,extends,application,listener,listeners,this,listeners,new,array,list,this,listeners,add,all,listeners
SpringApplication -> public void setListeners(Collection<? extends ApplicationListener<?>> listeners);1515670013;Sets the {@link ApplicationListener}s that will be applied to the SpringApplication_and registered with the {@link ApplicationContext}._@param listeners the listeners to set;public void setListeners(Collection<? extends ApplicationListener<?>> listeners) {_		this.listeners = new ArrayList<>()__		this.listeners.addAll(listeners)__	};sets,the,link,application,listener,s,that,will,be,applied,to,the,spring,application,and,registered,with,the,link,application,context,param,listeners,the,listeners,to,set;public,void,set,listeners,collection,extends,application,listener,listeners,this,listeners,new,array,list,this,listeners,add,all,listeners
SpringApplication -> public void setListeners(Collection<? extends ApplicationListener<?>> listeners);1519362690;Sets the {@link ApplicationListener}s that will be applied to the SpringApplication_and registered with the {@link ApplicationContext}._@param listeners the listeners to set;public void setListeners(Collection<? extends ApplicationListener<?>> listeners) {_		this.listeners = new ArrayList<>()__		this.listeners.addAll(listeners)__	};sets,the,link,application,listener,s,that,will,be,applied,to,the,spring,application,and,registered,with,the,link,application,context,param,listeners,the,listeners,to,set;public,void,set,listeners,collection,extends,application,listener,listeners,this,listeners,new,array,list,this,listeners,add,all,listeners
SpringApplication -> public void setListeners(Collection<? extends ApplicationListener<?>> listeners);1522251721;Sets the {@link ApplicationListener}s that will be applied to the SpringApplication_and registered with the {@link ApplicationContext}._@param listeners the listeners to set;public void setListeners(Collection<? extends ApplicationListener<?>> listeners) {_		this.listeners = new ArrayList<>()__		this.listeners.addAll(listeners)__	};sets,the,link,application,listener,s,that,will,be,applied,to,the,spring,application,and,registered,with,the,link,application,context,param,listeners,the,listeners,to,set;public,void,set,listeners,collection,extends,application,listener,listeners,this,listeners,new,array,list,this,listeners,add,all,listeners
SpringApplication -> public void setListeners(Collection<? extends ApplicationListener<?>> listeners);1525376698;Sets the {@link ApplicationListener}s that will be applied to the SpringApplication_and registered with the {@link ApplicationContext}._@param listeners the listeners to set;public void setListeners(Collection<? extends ApplicationListener<?>> listeners) {_		this.listeners = new ArrayList<>()__		this.listeners.addAll(listeners)__	};sets,the,link,application,listener,s,that,will,be,applied,to,the,spring,application,and,registered,with,the,link,application,context,param,listeners,the,listeners,to,set;public,void,set,listeners,collection,extends,application,listener,listeners,this,listeners,new,array,list,this,listeners,add,all,listeners
SpringApplication -> public void setListeners(Collection<? extends ApplicationListener<?>> listeners);1525416882;Sets the {@link ApplicationListener}s that will be applied to the SpringApplication_and registered with the {@link ApplicationContext}._@param listeners the listeners to set;public void setListeners(Collection<? extends ApplicationListener<?>> listeners) {_		this.listeners = new ArrayList<>()__		this.listeners.addAll(listeners)__	};sets,the,link,application,listener,s,that,will,be,applied,to,the,spring,application,and,registered,with,the,link,application,context,param,listeners,the,listeners,to,set;public,void,set,listeners,collection,extends,application,listener,listeners,this,listeners,new,array,list,this,listeners,add,all,listeners
SpringApplication -> public void setListeners(Collection<? extends ApplicationListener<?>> listeners);1526993305;Sets the {@link ApplicationListener}s that will be applied to the SpringApplication_and registered with the {@link ApplicationContext}._@param listeners the listeners to set;public void setListeners(Collection<? extends ApplicationListener<?>> listeners) {_		this.listeners = new ArrayList<>()__		this.listeners.addAll(listeners)__	};sets,the,link,application,listener,s,that,will,be,applied,to,the,spring,application,and,registered,with,the,link,application,context,param,listeners,the,listeners,to,set;public,void,set,listeners,collection,extends,application,listener,listeners,this,listeners,new,array,list,this,listeners,add,all,listeners
SpringApplication -> public void setListeners(Collection<? extends ApplicationListener<?>> listeners);1529485904;Sets the {@link ApplicationListener}s that will be applied to the SpringApplication_and registered with the {@link ApplicationContext}._@param listeners the listeners to set;public void setListeners(Collection<? extends ApplicationListener<?>> listeners) {_		this.listeners = new ArrayList<>()__		this.listeners.addAll(listeners)__	};sets,the,link,application,listener,s,that,will,be,applied,to,the,spring,application,and,registered,with,the,link,application,context,param,listeners,the,listeners,to,set;public,void,set,listeners,collection,extends,application,listener,listeners,this,listeners,new,array,list,this,listeners,add,all,listeners
SpringApplication -> public void setListeners(Collection<? extends ApplicationListener<?>> listeners);1531140616;Sets the {@link ApplicationListener}s that will be applied to the SpringApplication_and registered with the {@link ApplicationContext}._@param listeners the listeners to set;public void setListeners(Collection<? extends ApplicationListener<?>> listeners) {_		this.listeners = new ArrayList<>()__		this.listeners.addAll(listeners)__	};sets,the,link,application,listener,s,that,will,be,applied,to,the,spring,application,and,registered,with,the,link,application,context,param,listeners,the,listeners,to,set;public,void,set,listeners,collection,extends,application,listener,listeners,this,listeners,new,array,list,this,listeners,add,all,listeners
SpringApplication -> public void setListeners(Collection<? extends ApplicationListener<?>> listeners);1531155529;Sets the {@link ApplicationListener}s that will be applied to the SpringApplication_and registered with the {@link ApplicationContext}._@param listeners the listeners to set;public void setListeners(Collection<? extends ApplicationListener<?>> listeners) {_		this.listeners = new ArrayList<>()__		this.listeners.addAll(listeners)__	};sets,the,link,application,listener,s,that,will,be,applied,to,the,spring,application,and,registered,with,the,link,application,context,param,listeners,the,listeners,to,set;public,void,set,listeners,collection,extends,application,listener,listeners,this,listeners,new,array,list,this,listeners,add,all,listeners
SpringApplication -> public void setListeners(Collection<? extends ApplicationListener<?>> listeners);1531222098;Sets the {@link ApplicationListener}s that will be applied to the SpringApplication_and registered with the {@link ApplicationContext}._@param listeners the listeners to set;public void setListeners(Collection<? extends ApplicationListener<?>> listeners) {_		this.listeners = new ArrayList<>()__		this.listeners.addAll(listeners)__	};sets,the,link,application,listener,s,that,will,be,applied,to,the,spring,application,and,registered,with,the,link,application,context,param,listeners,the,listeners,to,set;public,void,set,listeners,collection,extends,application,listener,listeners,this,listeners,new,array,list,this,listeners,add,all,listeners
SpringApplication -> public void setListeners(Collection<? extends ApplicationListener<?>> listeners);1532738143;Sets the {@link ApplicationListener}s that will be applied to the SpringApplication_and registered with the {@link ApplicationContext}._@param listeners the listeners to set;public void setListeners(Collection<? extends ApplicationListener<?>> listeners) {_		this.listeners = new ArrayList<>()__		this.listeners.addAll(listeners)__	};sets,the,link,application,listener,s,that,will,be,applied,to,the,spring,application,and,registered,with,the,link,application,context,param,listeners,the,listeners,to,set;public,void,set,listeners,collection,extends,application,listener,listeners,this,listeners,new,array,list,this,listeners,add,all,listeners
SpringApplication -> public void setListeners(Collection<? extends ApplicationListener<?>> listeners);1534188228;Sets the {@link ApplicationListener}s that will be applied to the SpringApplication_and registered with the {@link ApplicationContext}._@param listeners the listeners to set;public void setListeners(Collection<? extends ApplicationListener<?>> listeners) {_		this.listeners = new ArrayList<>()__		this.listeners.addAll(listeners)__	};sets,the,link,application,listener,s,that,will,be,applied,to,the,spring,application,and,registered,with,the,link,application,context,param,listeners,the,listeners,to,set;public,void,set,listeners,collection,extends,application,listener,listeners,this,listeners,new,array,list,this,listeners,add,all,listeners
SpringApplication -> public void setListeners(Collection<? extends ApplicationListener<?>> listeners);1535104170;Sets the {@link ApplicationListener}s that will be applied to the SpringApplication_and registered with the {@link ApplicationContext}._@param listeners the listeners to set;public void setListeners(Collection<? extends ApplicationListener<?>> listeners) {_		this.listeners = new ArrayList<>()__		this.listeners.addAll(listeners)__	};sets,the,link,application,listener,s,that,will,be,applied,to,the,spring,application,and,registered,with,the,link,application,context,param,listeners,the,listeners,to,set;public,void,set,listeners,collection,extends,application,listener,listeners,this,listeners,new,array,list,this,listeners,add,all,listeners
SpringApplication -> public void setListeners(Collection<? extends ApplicationListener<?>> listeners);1536701067;Sets the {@link ApplicationListener}s that will be applied to the SpringApplication_and registered with the {@link ApplicationContext}._@param listeners the listeners to set;public void setListeners(Collection<? extends ApplicationListener<?>> listeners) {_		this.listeners = new ArrayList<>()__		this.listeners.addAll(listeners)__	};sets,the,link,application,listener,s,that,will,be,applied,to,the,spring,application,and,registered,with,the,link,application,context,param,listeners,the,listeners,to,set;public,void,set,listeners,collection,extends,application,listener,listeners,this,listeners,new,array,list,this,listeners,add,all,listeners
SpringApplication -> public void setListeners(Collection<? extends ApplicationListener<?>> listeners);1538570355;Sets the {@link ApplicationListener}s that will be applied to the SpringApplication_and registered with the {@link ApplicationContext}._@param listeners the listeners to set;public void setListeners(Collection<? extends ApplicationListener<?>> listeners) {_		this.listeners = new ArrayList<>()__		this.listeners.addAll(listeners)__	};sets,the,link,application,listener,s,that,will,be,applied,to,the,spring,application,and,registered,with,the,link,application,context,param,listeners,the,listeners,to,set;public,void,set,listeners,collection,extends,application,listener,listeners,this,listeners,new,array,list,this,listeners,add,all,listeners
SpringApplication -> public void setListeners(Collection<? extends ApplicationListener<?>> listeners);1538707540;Sets the {@link ApplicationListener}s that will be applied to the SpringApplication_and registered with the {@link ApplicationContext}._@param listeners the listeners to set;public void setListeners(Collection<? extends ApplicationListener<?>> listeners) {_		this.listeners = new ArrayList<>()__		this.listeners.addAll(listeners)__	};sets,the,link,application,listener,s,that,will,be,applied,to,the,spring,application,and,registered,with,the,link,application,context,param,listeners,the,listeners,to,set;public,void,set,listeners,collection,extends,application,listener,listeners,this,listeners,new,array,list,this,listeners,add,all,listeners
SpringApplication -> public void setListeners(Collection<? extends ApplicationListener<?>> listeners);1538750610;Sets the {@link ApplicationListener}s that will be applied to the SpringApplication_and registered with the {@link ApplicationContext}._@param listeners the listeners to set;public void setListeners(Collection<? extends ApplicationListener<?>> listeners) {_		this.listeners = new ArrayList<>()__		this.listeners.addAll(listeners)__	};sets,the,link,application,listener,s,that,will,be,applied,to,the,spring,application,and,registered,with,the,link,application,context,param,listeners,the,listeners,to,set;public,void,set,listeners,collection,extends,application,listener,listeners,this,listeners,new,array,list,this,listeners,add,all,listeners
SpringApplication -> public void setListeners(Collection<? extends ApplicationListener<?>> listeners);1538771652;Sets the {@link ApplicationListener}s that will be applied to the SpringApplication_and registered with the {@link ApplicationContext}._@param listeners the listeners to set;public void setListeners(Collection<? extends ApplicationListener<?>> listeners) {_		this.listeners = new ArrayList<>()__		this.listeners.addAll(listeners)__	};sets,the,link,application,listener,s,that,will,be,applied,to,the,spring,application,and,registered,with,the,link,application,context,param,listeners,the,listeners,to,set;public,void,set,listeners,collection,extends,application,listener,listeners,this,listeners,new,array,list,this,listeners,add,all,listeners
SpringApplication -> public void setListeners(Collection<? extends ApplicationListener<?>> listeners);1540419762;Sets the {@link ApplicationListener}s that will be applied to the SpringApplication_and registered with the {@link ApplicationContext}._@param listeners the listeners to set;public void setListeners(Collection<? extends ApplicationListener<?>> listeners) {_		this.listeners = new ArrayList<>()__		this.listeners.addAll(listeners)__	};sets,the,link,application,listener,s,that,will,be,applied,to,the,spring,application,and,registered,with,the,link,application,context,param,listeners,the,listeners,to,set;public,void,set,listeners,collection,extends,application,listener,listeners,this,listeners,new,array,list,this,listeners,add,all,listeners
SpringApplication -> public void setListeners(Collection<? extends ApplicationListener<?>> listeners);1541060131;Sets the {@link ApplicationListener}s that will be applied to the SpringApplication_and registered with the {@link ApplicationContext}._@param listeners the listeners to set;public void setListeners(Collection<? extends ApplicationListener<?>> listeners) {_		this.listeners = new ArrayList<>()__		this.listeners.addAll(listeners)__	};sets,the,link,application,listener,s,that,will,be,applied,to,the,spring,application,and,registered,with,the,link,application,context,param,listeners,the,listeners,to,set;public,void,set,listeners,collection,extends,application,listener,listeners,this,listeners,new,array,list,this,listeners,add,all,listeners
SpringApplication -> public void setListeners(Collection<? extends ApplicationListener<?>> listeners);1546943477;Sets the {@link ApplicationListener}s that will be applied to the SpringApplication_and registered with the {@link ApplicationContext}._@param listeners the listeners to set;public void setListeners(Collection<? extends ApplicationListener<?>> listeners) {_		this.listeners = new ArrayList<>()__		this.listeners.addAll(listeners)__	};sets,the,link,application,listener,s,that,will,be,applied,to,the,spring,application,and,registered,with,the,link,application,context,param,listeners,the,listeners,to,set;public,void,set,listeners,collection,extends,application,listener,listeners,this,listeners,new,array,list,this,listeners,add,all,listeners
SpringApplication -> public void setListeners(Collection<? extends ApplicationListener<?>> listeners);1549791353;Sets the {@link ApplicationListener}s that will be applied to the SpringApplication_and registered with the {@link ApplicationContext}._@param listeners the listeners to set;public void setListeners(Collection<? extends ApplicationListener<?>> listeners) {_		this.listeners = new ArrayList<>(listeners)__	};sets,the,link,application,listener,s,that,will,be,applied,to,the,spring,application,and,registered,with,the,link,application,context,param,listeners,the,listeners,to,set;public,void,set,listeners,collection,extends,application,listener,listeners,this,listeners,new,array,list,listeners
SpringApplication -> public void setListeners(Collection<? extends ApplicationListener<?>> listeners);1550148109;Sets the {@link ApplicationListener}s that will be applied to the SpringApplication_and registered with the {@link ApplicationContext}._@param listeners the listeners to set;public void setListeners(Collection<? extends ApplicationListener<?>> listeners) {_		this.listeners = new ArrayList<>(listeners)__	};sets,the,link,application,listener,s,that,will,be,applied,to,the,spring,application,and,registered,with,the,link,application,context,param,listeners,the,listeners,to,set;public,void,set,listeners,collection,extends,application,listener,listeners,this,listeners,new,array,list,listeners
SpringApplication -> public void setMainApplicationClass(Class<?> mainApplicationClass);1507173536;Set a specific main application class that will be used as a log source and to_obtain version information. By default the main application class will be deduced._Can be set to {@code null} if there is no explicit application class._@param mainApplicationClass the mainApplicationClass to set or {@code null};public void setMainApplicationClass(Class<?> mainApplicationClass) {_		this.mainApplicationClass = mainApplicationClass__	};set,a,specific,main,application,class,that,will,be,used,as,a,log,source,and,to,obtain,version,information,by,default,the,main,application,class,will,be,deduced,can,be,set,to,code,null,if,there,is,no,explicit,application,class,param,main,application,class,the,main,application,class,to,set,or,code,null;public,void,set,main,application,class,class,main,application,class,this,main,application,class,main,application,class
SpringApplication -> public void setMainApplicationClass(Class<?> mainApplicationClass);1509381678;Set a specific main application class that will be used as a log source and to_obtain version information. By default the main application class will be deduced._Can be set to {@code null} if there is no explicit application class._@param mainApplicationClass the mainApplicationClass to set or {@code null};public void setMainApplicationClass(Class<?> mainApplicationClass) {_		this.mainApplicationClass = mainApplicationClass__	};set,a,specific,main,application,class,that,will,be,used,as,a,log,source,and,to,obtain,version,information,by,default,the,main,application,class,will,be,deduced,can,be,set,to,code,null,if,there,is,no,explicit,application,class,param,main,application,class,the,main,application,class,to,set,or,code,null;public,void,set,main,application,class,class,main,application,class,this,main,application,class,main,application,class
SpringApplication -> public void setMainApplicationClass(Class<?> mainApplicationClass);1510995225;Set a specific main application class that will be used as a log source and to_obtain version information. By default the main application class will be deduced._Can be set to {@code null} if there is no explicit application class._@param mainApplicationClass the mainApplicationClass to set or {@code null};public void setMainApplicationClass(Class<?> mainApplicationClass) {_		this.mainApplicationClass = mainApplicationClass__	};set,a,specific,main,application,class,that,will,be,used,as,a,log,source,and,to,obtain,version,information,by,default,the,main,application,class,will,be,deduced,can,be,set,to,code,null,if,there,is,no,explicit,application,class,param,main,application,class,the,main,application,class,to,set,or,code,null;public,void,set,main,application,class,class,main,application,class,this,main,application,class,main,application,class
SpringApplication -> public void setMainApplicationClass(Class<?> mainApplicationClass);1515670013;Set a specific main application class that will be used as a log source and to_obtain version information. By default the main application class will be deduced._Can be set to {@code null} if there is no explicit application class._@param mainApplicationClass the mainApplicationClass to set or {@code null};public void setMainApplicationClass(Class<?> mainApplicationClass) {_		this.mainApplicationClass = mainApplicationClass__	};set,a,specific,main,application,class,that,will,be,used,as,a,log,source,and,to,obtain,version,information,by,default,the,main,application,class,will,be,deduced,can,be,set,to,code,null,if,there,is,no,explicit,application,class,param,main,application,class,the,main,application,class,to,set,or,code,null;public,void,set,main,application,class,class,main,application,class,this,main,application,class,main,application,class
SpringApplication -> public void setMainApplicationClass(Class<?> mainApplicationClass);1519362690;Set a specific main application class that will be used as a log source and to_obtain version information. By default the main application class will be deduced._Can be set to {@code null} if there is no explicit application class._@param mainApplicationClass the mainApplicationClass to set or {@code null};public void setMainApplicationClass(Class<?> mainApplicationClass) {_		this.mainApplicationClass = mainApplicationClass__	};set,a,specific,main,application,class,that,will,be,used,as,a,log,source,and,to,obtain,version,information,by,default,the,main,application,class,will,be,deduced,can,be,set,to,code,null,if,there,is,no,explicit,application,class,param,main,application,class,the,main,application,class,to,set,or,code,null;public,void,set,main,application,class,class,main,application,class,this,main,application,class,main,application,class
SpringApplication -> public void setMainApplicationClass(Class<?> mainApplicationClass);1522251721;Set a specific main application class that will be used as a log source and to_obtain version information. By default the main application class will be deduced._Can be set to {@code null} if there is no explicit application class._@param mainApplicationClass the mainApplicationClass to set or {@code null};public void setMainApplicationClass(Class<?> mainApplicationClass) {_		this.mainApplicationClass = mainApplicationClass__	};set,a,specific,main,application,class,that,will,be,used,as,a,log,source,and,to,obtain,version,information,by,default,the,main,application,class,will,be,deduced,can,be,set,to,code,null,if,there,is,no,explicit,application,class,param,main,application,class,the,main,application,class,to,set,or,code,null;public,void,set,main,application,class,class,main,application,class,this,main,application,class,main,application,class
SpringApplication -> public void setMainApplicationClass(Class<?> mainApplicationClass);1525376698;Set a specific main application class that will be used as a log source and to_obtain version information. By default the main application class will be deduced._Can be set to {@code null} if there is no explicit application class._@param mainApplicationClass the mainApplicationClass to set or {@code null};public void setMainApplicationClass(Class<?> mainApplicationClass) {_		this.mainApplicationClass = mainApplicationClass__	};set,a,specific,main,application,class,that,will,be,used,as,a,log,source,and,to,obtain,version,information,by,default,the,main,application,class,will,be,deduced,can,be,set,to,code,null,if,there,is,no,explicit,application,class,param,main,application,class,the,main,application,class,to,set,or,code,null;public,void,set,main,application,class,class,main,application,class,this,main,application,class,main,application,class
SpringApplication -> public void setMainApplicationClass(Class<?> mainApplicationClass);1525416882;Set a specific main application class that will be used as a log source and to_obtain version information. By default the main application class will be deduced._Can be set to {@code null} if there is no explicit application class._@param mainApplicationClass the mainApplicationClass to set or {@code null};public void setMainApplicationClass(Class<?> mainApplicationClass) {_		this.mainApplicationClass = mainApplicationClass__	};set,a,specific,main,application,class,that,will,be,used,as,a,log,source,and,to,obtain,version,information,by,default,the,main,application,class,will,be,deduced,can,be,set,to,code,null,if,there,is,no,explicit,application,class,param,main,application,class,the,main,application,class,to,set,or,code,null;public,void,set,main,application,class,class,main,application,class,this,main,application,class,main,application,class
SpringApplication -> public void setMainApplicationClass(Class<?> mainApplicationClass);1526993305;Set a specific main application class that will be used as a log source and to_obtain version information. By default the main application class will be deduced._Can be set to {@code null} if there is no explicit application class._@param mainApplicationClass the mainApplicationClass to set or {@code null};public void setMainApplicationClass(Class<?> mainApplicationClass) {_		this.mainApplicationClass = mainApplicationClass__	};set,a,specific,main,application,class,that,will,be,used,as,a,log,source,and,to,obtain,version,information,by,default,the,main,application,class,will,be,deduced,can,be,set,to,code,null,if,there,is,no,explicit,application,class,param,main,application,class,the,main,application,class,to,set,or,code,null;public,void,set,main,application,class,class,main,application,class,this,main,application,class,main,application,class
SpringApplication -> public void setMainApplicationClass(Class<?> mainApplicationClass);1529485904;Set a specific main application class that will be used as a log source and to_obtain version information. By default the main application class will be deduced._Can be set to {@code null} if there is no explicit application class._@param mainApplicationClass the mainApplicationClass to set or {@code null};public void setMainApplicationClass(Class<?> mainApplicationClass) {_		this.mainApplicationClass = mainApplicationClass__	};set,a,specific,main,application,class,that,will,be,used,as,a,log,source,and,to,obtain,version,information,by,default,the,main,application,class,will,be,deduced,can,be,set,to,code,null,if,there,is,no,explicit,application,class,param,main,application,class,the,main,application,class,to,set,or,code,null;public,void,set,main,application,class,class,main,application,class,this,main,application,class,main,application,class
SpringApplication -> public void setMainApplicationClass(Class<?> mainApplicationClass);1531140616;Set a specific main application class that will be used as a log source and to_obtain version information. By default the main application class will be deduced._Can be set to {@code null} if there is no explicit application class._@param mainApplicationClass the mainApplicationClass to set or {@code null};public void setMainApplicationClass(Class<?> mainApplicationClass) {_		this.mainApplicationClass = mainApplicationClass__	};set,a,specific,main,application,class,that,will,be,used,as,a,log,source,and,to,obtain,version,information,by,default,the,main,application,class,will,be,deduced,can,be,set,to,code,null,if,there,is,no,explicit,application,class,param,main,application,class,the,main,application,class,to,set,or,code,null;public,void,set,main,application,class,class,main,application,class,this,main,application,class,main,application,class
SpringApplication -> public void setMainApplicationClass(Class<?> mainApplicationClass);1531155529;Set a specific main application class that will be used as a log source and to_obtain version information. By default the main application class will be deduced._Can be set to {@code null} if there is no explicit application class._@param mainApplicationClass the mainApplicationClass to set or {@code null};public void setMainApplicationClass(Class<?> mainApplicationClass) {_		this.mainApplicationClass = mainApplicationClass__	};set,a,specific,main,application,class,that,will,be,used,as,a,log,source,and,to,obtain,version,information,by,default,the,main,application,class,will,be,deduced,can,be,set,to,code,null,if,there,is,no,explicit,application,class,param,main,application,class,the,main,application,class,to,set,or,code,null;public,void,set,main,application,class,class,main,application,class,this,main,application,class,main,application,class
SpringApplication -> public void setMainApplicationClass(Class<?> mainApplicationClass);1531222098;Set a specific main application class that will be used as a log source and to_obtain version information. By default the main application class will be deduced._Can be set to {@code null} if there is no explicit application class._@param mainApplicationClass the mainApplicationClass to set or {@code null};public void setMainApplicationClass(Class<?> mainApplicationClass) {_		this.mainApplicationClass = mainApplicationClass__	};set,a,specific,main,application,class,that,will,be,used,as,a,log,source,and,to,obtain,version,information,by,default,the,main,application,class,will,be,deduced,can,be,set,to,code,null,if,there,is,no,explicit,application,class,param,main,application,class,the,main,application,class,to,set,or,code,null;public,void,set,main,application,class,class,main,application,class,this,main,application,class,main,application,class
SpringApplication -> public void setMainApplicationClass(Class<?> mainApplicationClass);1532738143;Set a specific main application class that will be used as a log source and to_obtain version information. By default the main application class will be deduced._Can be set to {@code null} if there is no explicit application class._@param mainApplicationClass the mainApplicationClass to set or {@code null};public void setMainApplicationClass(Class<?> mainApplicationClass) {_		this.mainApplicationClass = mainApplicationClass__	};set,a,specific,main,application,class,that,will,be,used,as,a,log,source,and,to,obtain,version,information,by,default,the,main,application,class,will,be,deduced,can,be,set,to,code,null,if,there,is,no,explicit,application,class,param,main,application,class,the,main,application,class,to,set,or,code,null;public,void,set,main,application,class,class,main,application,class,this,main,application,class,main,application,class
SpringApplication -> public void setMainApplicationClass(Class<?> mainApplicationClass);1534188228;Set a specific main application class that will be used as a log source and to_obtain version information. By default the main application class will be deduced._Can be set to {@code null} if there is no explicit application class._@param mainApplicationClass the mainApplicationClass to set or {@code null};public void setMainApplicationClass(Class<?> mainApplicationClass) {_		this.mainApplicationClass = mainApplicationClass__	};set,a,specific,main,application,class,that,will,be,used,as,a,log,source,and,to,obtain,version,information,by,default,the,main,application,class,will,be,deduced,can,be,set,to,code,null,if,there,is,no,explicit,application,class,param,main,application,class,the,main,application,class,to,set,or,code,null;public,void,set,main,application,class,class,main,application,class,this,main,application,class,main,application,class
SpringApplication -> public void setMainApplicationClass(Class<?> mainApplicationClass);1535104170;Set a specific main application class that will be used as a log source and to_obtain version information. By default the main application class will be deduced._Can be set to {@code null} if there is no explicit application class._@param mainApplicationClass the mainApplicationClass to set or {@code null};public void setMainApplicationClass(Class<?> mainApplicationClass) {_		this.mainApplicationClass = mainApplicationClass__	};set,a,specific,main,application,class,that,will,be,used,as,a,log,source,and,to,obtain,version,information,by,default,the,main,application,class,will,be,deduced,can,be,set,to,code,null,if,there,is,no,explicit,application,class,param,main,application,class,the,main,application,class,to,set,or,code,null;public,void,set,main,application,class,class,main,application,class,this,main,application,class,main,application,class
SpringApplication -> public void setMainApplicationClass(Class<?> mainApplicationClass);1536701067;Set a specific main application class that will be used as a log source and to_obtain version information. By default the main application class will be deduced._Can be set to {@code null} if there is no explicit application class._@param mainApplicationClass the mainApplicationClass to set or {@code null};public void setMainApplicationClass(Class<?> mainApplicationClass) {_		this.mainApplicationClass = mainApplicationClass__	};set,a,specific,main,application,class,that,will,be,used,as,a,log,source,and,to,obtain,version,information,by,default,the,main,application,class,will,be,deduced,can,be,set,to,code,null,if,there,is,no,explicit,application,class,param,main,application,class,the,main,application,class,to,set,or,code,null;public,void,set,main,application,class,class,main,application,class,this,main,application,class,main,application,class
SpringApplication -> public void setMainApplicationClass(Class<?> mainApplicationClass);1538570355;Set a specific main application class that will be used as a log source and to_obtain version information. By default the main application class will be deduced._Can be set to {@code null} if there is no explicit application class._@param mainApplicationClass the mainApplicationClass to set or {@code null};public void setMainApplicationClass(Class<?> mainApplicationClass) {_		this.mainApplicationClass = mainApplicationClass__	};set,a,specific,main,application,class,that,will,be,used,as,a,log,source,and,to,obtain,version,information,by,default,the,main,application,class,will,be,deduced,can,be,set,to,code,null,if,there,is,no,explicit,application,class,param,main,application,class,the,main,application,class,to,set,or,code,null;public,void,set,main,application,class,class,main,application,class,this,main,application,class,main,application,class
SpringApplication -> public void setMainApplicationClass(Class<?> mainApplicationClass);1538707540;Set a specific main application class that will be used as a log source and to_obtain version information. By default the main application class will be deduced._Can be set to {@code null} if there is no explicit application class._@param mainApplicationClass the mainApplicationClass to set or {@code null};public void setMainApplicationClass(Class<?> mainApplicationClass) {_		this.mainApplicationClass = mainApplicationClass__	};set,a,specific,main,application,class,that,will,be,used,as,a,log,source,and,to,obtain,version,information,by,default,the,main,application,class,will,be,deduced,can,be,set,to,code,null,if,there,is,no,explicit,application,class,param,main,application,class,the,main,application,class,to,set,or,code,null;public,void,set,main,application,class,class,main,application,class,this,main,application,class,main,application,class
SpringApplication -> public void setMainApplicationClass(Class<?> mainApplicationClass);1538750610;Set a specific main application class that will be used as a log source and to_obtain version information. By default the main application class will be deduced._Can be set to {@code null} if there is no explicit application class._@param mainApplicationClass the mainApplicationClass to set or {@code null};public void setMainApplicationClass(Class<?> mainApplicationClass) {_		this.mainApplicationClass = mainApplicationClass__	};set,a,specific,main,application,class,that,will,be,used,as,a,log,source,and,to,obtain,version,information,by,default,the,main,application,class,will,be,deduced,can,be,set,to,code,null,if,there,is,no,explicit,application,class,param,main,application,class,the,main,application,class,to,set,or,code,null;public,void,set,main,application,class,class,main,application,class,this,main,application,class,main,application,class
SpringApplication -> public void setMainApplicationClass(Class<?> mainApplicationClass);1538771652;Set a specific main application class that will be used as a log source and to_obtain version information. By default the main application class will be deduced._Can be set to {@code null} if there is no explicit application class._@param mainApplicationClass the mainApplicationClass to set or {@code null};public void setMainApplicationClass(Class<?> mainApplicationClass) {_		this.mainApplicationClass = mainApplicationClass__	};set,a,specific,main,application,class,that,will,be,used,as,a,log,source,and,to,obtain,version,information,by,default,the,main,application,class,will,be,deduced,can,be,set,to,code,null,if,there,is,no,explicit,application,class,param,main,application,class,the,main,application,class,to,set,or,code,null;public,void,set,main,application,class,class,main,application,class,this,main,application,class,main,application,class
SpringApplication -> public void setMainApplicationClass(Class<?> mainApplicationClass);1540419762;Set a specific main application class that will be used as a log source and to_obtain version information. By default the main application class will be deduced._Can be set to {@code null} if there is no explicit application class._@param mainApplicationClass the mainApplicationClass to set or {@code null};public void setMainApplicationClass(Class<?> mainApplicationClass) {_		this.mainApplicationClass = mainApplicationClass__	};set,a,specific,main,application,class,that,will,be,used,as,a,log,source,and,to,obtain,version,information,by,default,the,main,application,class,will,be,deduced,can,be,set,to,code,null,if,there,is,no,explicit,application,class,param,main,application,class,the,main,application,class,to,set,or,code,null;public,void,set,main,application,class,class,main,application,class,this,main,application,class,main,application,class
SpringApplication -> public void setMainApplicationClass(Class<?> mainApplicationClass);1541060131;Set a specific main application class that will be used as a log source and to_obtain version information. By default the main application class will be deduced._Can be set to {@code null} if there is no explicit application class._@param mainApplicationClass the mainApplicationClass to set or {@code null};public void setMainApplicationClass(Class<?> mainApplicationClass) {_		this.mainApplicationClass = mainApplicationClass__	};set,a,specific,main,application,class,that,will,be,used,as,a,log,source,and,to,obtain,version,information,by,default,the,main,application,class,will,be,deduced,can,be,set,to,code,null,if,there,is,no,explicit,application,class,param,main,application,class,the,main,application,class,to,set,or,code,null;public,void,set,main,application,class,class,main,application,class,this,main,application,class,main,application,class
SpringApplication -> public void setMainApplicationClass(Class<?> mainApplicationClass);1546943477;Set a specific main application class that will be used as a log source and to_obtain version information. By default the main application class will be deduced._Can be set to {@code null} if there is no explicit application class._@param mainApplicationClass the mainApplicationClass to set or {@code null};public void setMainApplicationClass(Class<?> mainApplicationClass) {_		this.mainApplicationClass = mainApplicationClass__	};set,a,specific,main,application,class,that,will,be,used,as,a,log,source,and,to,obtain,version,information,by,default,the,main,application,class,will,be,deduced,can,be,set,to,code,null,if,there,is,no,explicit,application,class,param,main,application,class,the,main,application,class,to,set,or,code,null;public,void,set,main,application,class,class,main,application,class,this,main,application,class,main,application,class
SpringApplication -> public void setMainApplicationClass(Class<?> mainApplicationClass);1549791353;Set a specific main application class that will be used as a log source and to_obtain version information. By default the main application class will be deduced._Can be set to {@code null} if there is no explicit application class._@param mainApplicationClass the mainApplicationClass to set or {@code null};public void setMainApplicationClass(Class<?> mainApplicationClass) {_		this.mainApplicationClass = mainApplicationClass__	};set,a,specific,main,application,class,that,will,be,used,as,a,log,source,and,to,obtain,version,information,by,default,the,main,application,class,will,be,deduced,can,be,set,to,code,null,if,there,is,no,explicit,application,class,param,main,application,class,the,main,application,class,to,set,or,code,null;public,void,set,main,application,class,class,main,application,class,this,main,application,class,main,application,class
SpringApplication -> public void setMainApplicationClass(Class<?> mainApplicationClass);1550148109;Set a specific main application class that will be used as a log source and to_obtain version information. By default the main application class will be deduced._Can be set to {@code null} if there is no explicit application class._@param mainApplicationClass the mainApplicationClass to set or {@code null};public void setMainApplicationClass(Class<?> mainApplicationClass) {_		this.mainApplicationClass = mainApplicationClass__	};set,a,specific,main,application,class,that,will,be,used,as,a,log,source,and,to,obtain,version,information,by,default,the,main,application,class,will,be,deduced,can,be,set,to,code,null,if,there,is,no,explicit,application,class,param,main,application,class,the,main,application,class,to,set,or,code,null;public,void,set,main,application,class,class,main,application,class,this,main,application,class,main,application,class
SpringApplication -> public void setSources(Set<String> sources);1507173536;Set additional sources that will be used to create an ApplicationContext. A source_can be: a class name, package name, or an XML resource location._<p>_Sources set here will be used in addition to any primary sources set in the_constructor._@param sources the application sources to set_@see #SpringApplication(Class...)_@see #getAllSources();public void setSources(Set<String> sources) {_		Assert.notNull(sources, "Sources must not be null")__		this.sources = new LinkedHashSet<>(sources)__	};set,additional,sources,that,will,be,used,to,create,an,application,context,a,source,can,be,a,class,name,package,name,or,an,xml,resource,location,p,sources,set,here,will,be,used,in,addition,to,any,primary,sources,set,in,the,constructor,param,sources,the,application,sources,to,set,see,spring,application,class,see,get,all,sources;public,void,set,sources,set,string,sources,assert,not,null,sources,sources,must,not,be,null,this,sources,new,linked,hash,set,sources
SpringApplication -> public void setSources(Set<String> sources);1509381678;Set additional sources that will be used to create an ApplicationContext. A source_can be: a class name, package name, or an XML resource location._<p>_Sources set here will be used in addition to any primary sources set in the_constructor._@param sources the application sources to set_@see #SpringApplication(Class...)_@see #getAllSources();public void setSources(Set<String> sources) {_		Assert.notNull(sources, "Sources must not be null")__		this.sources = new LinkedHashSet<>(sources)__	};set,additional,sources,that,will,be,used,to,create,an,application,context,a,source,can,be,a,class,name,package,name,or,an,xml,resource,location,p,sources,set,here,will,be,used,in,addition,to,any,primary,sources,set,in,the,constructor,param,sources,the,application,sources,to,set,see,spring,application,class,see,get,all,sources;public,void,set,sources,set,string,sources,assert,not,null,sources,sources,must,not,be,null,this,sources,new,linked,hash,set,sources
SpringApplication -> public void setSources(Set<String> sources);1510995225;Set additional sources that will be used to create an ApplicationContext. A source_can be: a class name, package name, or an XML resource location._<p>_Sources set here will be used in addition to any primary sources set in the_constructor._@param sources the application sources to set_@see #SpringApplication(Class...)_@see #getAllSources();public void setSources(Set<String> sources) {_		Assert.notNull(sources, "Sources must not be null")__		this.sources = new LinkedHashSet<>(sources)__	};set,additional,sources,that,will,be,used,to,create,an,application,context,a,source,can,be,a,class,name,package,name,or,an,xml,resource,location,p,sources,set,here,will,be,used,in,addition,to,any,primary,sources,set,in,the,constructor,param,sources,the,application,sources,to,set,see,spring,application,class,see,get,all,sources;public,void,set,sources,set,string,sources,assert,not,null,sources,sources,must,not,be,null,this,sources,new,linked,hash,set,sources
SpringApplication -> public void setSources(Set<String> sources);1515670013;Set additional sources that will be used to create an ApplicationContext. A source_can be: a class name, package name, or an XML resource location._<p>_Sources set here will be used in addition to any primary sources set in the_constructor._@param sources the application sources to set_@see #SpringApplication(Class...)_@see #getAllSources();public void setSources(Set<String> sources) {_		Assert.notNull(sources, "Sources must not be null")__		this.sources = new LinkedHashSet<>(sources)__	};set,additional,sources,that,will,be,used,to,create,an,application,context,a,source,can,be,a,class,name,package,name,or,an,xml,resource,location,p,sources,set,here,will,be,used,in,addition,to,any,primary,sources,set,in,the,constructor,param,sources,the,application,sources,to,set,see,spring,application,class,see,get,all,sources;public,void,set,sources,set,string,sources,assert,not,null,sources,sources,must,not,be,null,this,sources,new,linked,hash,set,sources
SpringApplication -> public void setSources(Set<String> sources);1519362690;Set additional sources that will be used to create an ApplicationContext. A source_can be: a class name, package name, or an XML resource location._<p>_Sources set here will be used in addition to any primary sources set in the_constructor._@param sources the application sources to set_@see #SpringApplication(Class...)_@see #getAllSources();public void setSources(Set<String> sources) {_		Assert.notNull(sources, "Sources must not be null")__		this.sources = new LinkedHashSet<>(sources)__	};set,additional,sources,that,will,be,used,to,create,an,application,context,a,source,can,be,a,class,name,package,name,or,an,xml,resource,location,p,sources,set,here,will,be,used,in,addition,to,any,primary,sources,set,in,the,constructor,param,sources,the,application,sources,to,set,see,spring,application,class,see,get,all,sources;public,void,set,sources,set,string,sources,assert,not,null,sources,sources,must,not,be,null,this,sources,new,linked,hash,set,sources
SpringApplication -> public void setSources(Set<String> sources);1522251721;Set additional sources that will be used to create an ApplicationContext. A source_can be: a class name, package name, or an XML resource location._<p>_Sources set here will be used in addition to any primary sources set in the_constructor._@param sources the application sources to set_@see #SpringApplication(Class...)_@see #getAllSources();public void setSources(Set<String> sources) {_		Assert.notNull(sources, "Sources must not be null")__		this.sources = new LinkedHashSet<>(sources)__	};set,additional,sources,that,will,be,used,to,create,an,application,context,a,source,can,be,a,class,name,package,name,or,an,xml,resource,location,p,sources,set,here,will,be,used,in,addition,to,any,primary,sources,set,in,the,constructor,param,sources,the,application,sources,to,set,see,spring,application,class,see,get,all,sources;public,void,set,sources,set,string,sources,assert,not,null,sources,sources,must,not,be,null,this,sources,new,linked,hash,set,sources
SpringApplication -> public void setSources(Set<String> sources);1525376698;Set additional sources that will be used to create an ApplicationContext. A source_can be: a class name, package name, or an XML resource location._<p>_Sources set here will be used in addition to any primary sources set in the_constructor._@param sources the application sources to set_@see #SpringApplication(Class...)_@see #getAllSources();public void setSources(Set<String> sources) {_		Assert.notNull(sources, "Sources must not be null")__		this.sources = new LinkedHashSet<>(sources)__	};set,additional,sources,that,will,be,used,to,create,an,application,context,a,source,can,be,a,class,name,package,name,or,an,xml,resource,location,p,sources,set,here,will,be,used,in,addition,to,any,primary,sources,set,in,the,constructor,param,sources,the,application,sources,to,set,see,spring,application,class,see,get,all,sources;public,void,set,sources,set,string,sources,assert,not,null,sources,sources,must,not,be,null,this,sources,new,linked,hash,set,sources
SpringApplication -> public void setSources(Set<String> sources);1525416882;Set additional sources that will be used to create an ApplicationContext. A source_can be: a class name, package name, or an XML resource location._<p>_Sources set here will be used in addition to any primary sources set in the_constructor._@param sources the application sources to set_@see #SpringApplication(Class...)_@see #getAllSources();public void setSources(Set<String> sources) {_		Assert.notNull(sources, "Sources must not be null")__		this.sources = new LinkedHashSet<>(sources)__	};set,additional,sources,that,will,be,used,to,create,an,application,context,a,source,can,be,a,class,name,package,name,or,an,xml,resource,location,p,sources,set,here,will,be,used,in,addition,to,any,primary,sources,set,in,the,constructor,param,sources,the,application,sources,to,set,see,spring,application,class,see,get,all,sources;public,void,set,sources,set,string,sources,assert,not,null,sources,sources,must,not,be,null,this,sources,new,linked,hash,set,sources
SpringApplication -> public void setSources(Set<String> sources);1526993305;Set additional sources that will be used to create an ApplicationContext. A source_can be: a class name, package name, or an XML resource location._<p>_Sources set here will be used in addition to any primary sources set in the_constructor._@param sources the application sources to set_@see #SpringApplication(Class...)_@see #getAllSources();public void setSources(Set<String> sources) {_		Assert.notNull(sources, "Sources must not be null")__		this.sources = new LinkedHashSet<>(sources)__	};set,additional,sources,that,will,be,used,to,create,an,application,context,a,source,can,be,a,class,name,package,name,or,an,xml,resource,location,p,sources,set,here,will,be,used,in,addition,to,any,primary,sources,set,in,the,constructor,param,sources,the,application,sources,to,set,see,spring,application,class,see,get,all,sources;public,void,set,sources,set,string,sources,assert,not,null,sources,sources,must,not,be,null,this,sources,new,linked,hash,set,sources
SpringApplication -> public void setSources(Set<String> sources);1529485904;Set additional sources that will be used to create an ApplicationContext. A source_can be: a class name, package name, or an XML resource location._<p>_Sources set here will be used in addition to any primary sources set in the_constructor._@param sources the application sources to set_@see #SpringApplication(Class...)_@see #getAllSources();public void setSources(Set<String> sources) {_		Assert.notNull(sources, "Sources must not be null")__		this.sources = new LinkedHashSet<>(sources)__	};set,additional,sources,that,will,be,used,to,create,an,application,context,a,source,can,be,a,class,name,package,name,or,an,xml,resource,location,p,sources,set,here,will,be,used,in,addition,to,any,primary,sources,set,in,the,constructor,param,sources,the,application,sources,to,set,see,spring,application,class,see,get,all,sources;public,void,set,sources,set,string,sources,assert,not,null,sources,sources,must,not,be,null,this,sources,new,linked,hash,set,sources
SpringApplication -> public void setSources(Set<String> sources);1531140616;Set additional sources that will be used to create an ApplicationContext. A source_can be: a class name, package name, or an XML resource location._<p>_Sources set here will be used in addition to any primary sources set in the_constructor._@param sources the application sources to set_@see #SpringApplication(Class...)_@see #getAllSources();public void setSources(Set<String> sources) {_		Assert.notNull(sources, "Sources must not be null")__		this.sources = new LinkedHashSet<>(sources)__	};set,additional,sources,that,will,be,used,to,create,an,application,context,a,source,can,be,a,class,name,package,name,or,an,xml,resource,location,p,sources,set,here,will,be,used,in,addition,to,any,primary,sources,set,in,the,constructor,param,sources,the,application,sources,to,set,see,spring,application,class,see,get,all,sources;public,void,set,sources,set,string,sources,assert,not,null,sources,sources,must,not,be,null,this,sources,new,linked,hash,set,sources
SpringApplication -> public void setSources(Set<String> sources);1531155529;Set additional sources that will be used to create an ApplicationContext. A source_can be: a class name, package name, or an XML resource location._<p>_Sources set here will be used in addition to any primary sources set in the_constructor._@param sources the application sources to set_@see #SpringApplication(Class...)_@see #getAllSources();public void setSources(Set<String> sources) {_		Assert.notNull(sources, "Sources must not be null")__		this.sources = new LinkedHashSet<>(sources)__	};set,additional,sources,that,will,be,used,to,create,an,application,context,a,source,can,be,a,class,name,package,name,or,an,xml,resource,location,p,sources,set,here,will,be,used,in,addition,to,any,primary,sources,set,in,the,constructor,param,sources,the,application,sources,to,set,see,spring,application,class,see,get,all,sources;public,void,set,sources,set,string,sources,assert,not,null,sources,sources,must,not,be,null,this,sources,new,linked,hash,set,sources
SpringApplication -> public void setSources(Set<String> sources);1531222098;Set additional sources that will be used to create an ApplicationContext. A source_can be: a class name, package name, or an XML resource location._<p>_Sources set here will be used in addition to any primary sources set in the_constructor._@param sources the application sources to set_@see #SpringApplication(Class...)_@see #getAllSources();public void setSources(Set<String> sources) {_		Assert.notNull(sources, "Sources must not be null")__		this.sources = new LinkedHashSet<>(sources)__	};set,additional,sources,that,will,be,used,to,create,an,application,context,a,source,can,be,a,class,name,package,name,or,an,xml,resource,location,p,sources,set,here,will,be,used,in,addition,to,any,primary,sources,set,in,the,constructor,param,sources,the,application,sources,to,set,see,spring,application,class,see,get,all,sources;public,void,set,sources,set,string,sources,assert,not,null,sources,sources,must,not,be,null,this,sources,new,linked,hash,set,sources
SpringApplication -> public void setSources(Set<String> sources);1532738143;Set additional sources that will be used to create an ApplicationContext. A source_can be: a class name, package name, or an XML resource location._<p>_Sources set here will be used in addition to any primary sources set in the_constructor._@param sources the application sources to set_@see #SpringApplication(Class...)_@see #getAllSources();public void setSources(Set<String> sources) {_		Assert.notNull(sources, "Sources must not be null")__		this.sources = new LinkedHashSet<>(sources)__	};set,additional,sources,that,will,be,used,to,create,an,application,context,a,source,can,be,a,class,name,package,name,or,an,xml,resource,location,p,sources,set,here,will,be,used,in,addition,to,any,primary,sources,set,in,the,constructor,param,sources,the,application,sources,to,set,see,spring,application,class,see,get,all,sources;public,void,set,sources,set,string,sources,assert,not,null,sources,sources,must,not,be,null,this,sources,new,linked,hash,set,sources
SpringApplication -> public void setSources(Set<String> sources);1534188228;Set additional sources that will be used to create an ApplicationContext. A source_can be: a class name, package name, or an XML resource location._<p>_Sources set here will be used in addition to any primary sources set in the_constructor._@param sources the application sources to set_@see #SpringApplication(Class...)_@see #getAllSources();public void setSources(Set<String> sources) {_		Assert.notNull(sources, "Sources must not be null")__		this.sources = new LinkedHashSet<>(sources)__	};set,additional,sources,that,will,be,used,to,create,an,application,context,a,source,can,be,a,class,name,package,name,or,an,xml,resource,location,p,sources,set,here,will,be,used,in,addition,to,any,primary,sources,set,in,the,constructor,param,sources,the,application,sources,to,set,see,spring,application,class,see,get,all,sources;public,void,set,sources,set,string,sources,assert,not,null,sources,sources,must,not,be,null,this,sources,new,linked,hash,set,sources
SpringApplication -> public void setSources(Set<String> sources);1535104170;Set additional sources that will be used to create an ApplicationContext. A source_can be: a class name, package name, or an XML resource location._<p>_Sources set here will be used in addition to any primary sources set in the_constructor._@param sources the application sources to set_@see #SpringApplication(Class...)_@see #getAllSources();public void setSources(Set<String> sources) {_		Assert.notNull(sources, "Sources must not be null")__		this.sources = new LinkedHashSet<>(sources)__	};set,additional,sources,that,will,be,used,to,create,an,application,context,a,source,can,be,a,class,name,package,name,or,an,xml,resource,location,p,sources,set,here,will,be,used,in,addition,to,any,primary,sources,set,in,the,constructor,param,sources,the,application,sources,to,set,see,spring,application,class,see,get,all,sources;public,void,set,sources,set,string,sources,assert,not,null,sources,sources,must,not,be,null,this,sources,new,linked,hash,set,sources
SpringApplication -> public void setSources(Set<String> sources);1536701067;Set additional sources that will be used to create an ApplicationContext. A source_can be: a class name, package name, or an XML resource location._<p>_Sources set here will be used in addition to any primary sources set in the_constructor._@param sources the application sources to set_@see #SpringApplication(Class...)_@see #getAllSources();public void setSources(Set<String> sources) {_		Assert.notNull(sources, "Sources must not be null")__		this.sources = new LinkedHashSet<>(sources)__	};set,additional,sources,that,will,be,used,to,create,an,application,context,a,source,can,be,a,class,name,package,name,or,an,xml,resource,location,p,sources,set,here,will,be,used,in,addition,to,any,primary,sources,set,in,the,constructor,param,sources,the,application,sources,to,set,see,spring,application,class,see,get,all,sources;public,void,set,sources,set,string,sources,assert,not,null,sources,sources,must,not,be,null,this,sources,new,linked,hash,set,sources
SpringApplication -> public void setSources(Set<String> sources);1538570355;Set additional sources that will be used to create an ApplicationContext. A source_can be: a class name, package name, or an XML resource location._<p>_Sources set here will be used in addition to any primary sources set in the_constructor._@param sources the application sources to set_@see #SpringApplication(Class...)_@see #getAllSources();public void setSources(Set<String> sources) {_		Assert.notNull(sources, "Sources must not be null")__		this.sources = new LinkedHashSet<>(sources)__	};set,additional,sources,that,will,be,used,to,create,an,application,context,a,source,can,be,a,class,name,package,name,or,an,xml,resource,location,p,sources,set,here,will,be,used,in,addition,to,any,primary,sources,set,in,the,constructor,param,sources,the,application,sources,to,set,see,spring,application,class,see,get,all,sources;public,void,set,sources,set,string,sources,assert,not,null,sources,sources,must,not,be,null,this,sources,new,linked,hash,set,sources
SpringApplication -> public void setSources(Set<String> sources);1538707540;Set additional sources that will be used to create an ApplicationContext. A source_can be: a class name, package name, or an XML resource location._<p>_Sources set here will be used in addition to any primary sources set in the_constructor._@param sources the application sources to set_@see #SpringApplication(Class...)_@see #getAllSources();public void setSources(Set<String> sources) {_		Assert.notNull(sources, "Sources must not be null")__		this.sources = new LinkedHashSet<>(sources)__	};set,additional,sources,that,will,be,used,to,create,an,application,context,a,source,can,be,a,class,name,package,name,or,an,xml,resource,location,p,sources,set,here,will,be,used,in,addition,to,any,primary,sources,set,in,the,constructor,param,sources,the,application,sources,to,set,see,spring,application,class,see,get,all,sources;public,void,set,sources,set,string,sources,assert,not,null,sources,sources,must,not,be,null,this,sources,new,linked,hash,set,sources
SpringApplication -> public void setSources(Set<String> sources);1538750610;Set additional sources that will be used to create an ApplicationContext. A source_can be: a class name, package name, or an XML resource location._<p>_Sources set here will be used in addition to any primary sources set in the_constructor._@param sources the application sources to set_@see #SpringApplication(Class...)_@see #getAllSources();public void setSources(Set<String> sources) {_		Assert.notNull(sources, "Sources must not be null")__		this.sources = new LinkedHashSet<>(sources)__	};set,additional,sources,that,will,be,used,to,create,an,application,context,a,source,can,be,a,class,name,package,name,or,an,xml,resource,location,p,sources,set,here,will,be,used,in,addition,to,any,primary,sources,set,in,the,constructor,param,sources,the,application,sources,to,set,see,spring,application,class,see,get,all,sources;public,void,set,sources,set,string,sources,assert,not,null,sources,sources,must,not,be,null,this,sources,new,linked,hash,set,sources
SpringApplication -> public void setSources(Set<String> sources);1538771652;Set additional sources that will be used to create an ApplicationContext. A source_can be: a class name, package name, or an XML resource location._<p>_Sources set here will be used in addition to any primary sources set in the_constructor._@param sources the application sources to set_@see #SpringApplication(Class...)_@see #getAllSources();public void setSources(Set<String> sources) {_		Assert.notNull(sources, "Sources must not be null")__		this.sources = new LinkedHashSet<>(sources)__	};set,additional,sources,that,will,be,used,to,create,an,application,context,a,source,can,be,a,class,name,package,name,or,an,xml,resource,location,p,sources,set,here,will,be,used,in,addition,to,any,primary,sources,set,in,the,constructor,param,sources,the,application,sources,to,set,see,spring,application,class,see,get,all,sources;public,void,set,sources,set,string,sources,assert,not,null,sources,sources,must,not,be,null,this,sources,new,linked,hash,set,sources
SpringApplication -> public void setSources(Set<String> sources);1540419762;Set additional sources that will be used to create an ApplicationContext. A source_can be: a class name, package name, or an XML resource location._<p>_Sources set here will be used in addition to any primary sources set in the_constructor._@param sources the application sources to set_@see #SpringApplication(Class...)_@see #getAllSources();public void setSources(Set<String> sources) {_		Assert.notNull(sources, "Sources must not be null")__		this.sources = new LinkedHashSet<>(sources)__	};set,additional,sources,that,will,be,used,to,create,an,application,context,a,source,can,be,a,class,name,package,name,or,an,xml,resource,location,p,sources,set,here,will,be,used,in,addition,to,any,primary,sources,set,in,the,constructor,param,sources,the,application,sources,to,set,see,spring,application,class,see,get,all,sources;public,void,set,sources,set,string,sources,assert,not,null,sources,sources,must,not,be,null,this,sources,new,linked,hash,set,sources
SpringApplication -> public void setSources(Set<String> sources);1541060131;Set additional sources that will be used to create an ApplicationContext. A source_can be: a class name, package name, or an XML resource location._<p>_Sources set here will be used in addition to any primary sources set in the_constructor._@param sources the application sources to set_@see #SpringApplication(Class...)_@see #getAllSources();public void setSources(Set<String> sources) {_		Assert.notNull(sources, "Sources must not be null")__		this.sources = new LinkedHashSet<>(sources)__	};set,additional,sources,that,will,be,used,to,create,an,application,context,a,source,can,be,a,class,name,package,name,or,an,xml,resource,location,p,sources,set,here,will,be,used,in,addition,to,any,primary,sources,set,in,the,constructor,param,sources,the,application,sources,to,set,see,spring,application,class,see,get,all,sources;public,void,set,sources,set,string,sources,assert,not,null,sources,sources,must,not,be,null,this,sources,new,linked,hash,set,sources
SpringApplication -> public void setSources(Set<String> sources);1546943477;Set additional sources that will be used to create an ApplicationContext. A source_can be: a class name, package name, or an XML resource location._<p>_Sources set here will be used in addition to any primary sources set in the_constructor._@param sources the application sources to set_@see #SpringApplication(Class...)_@see #getAllSources();public void setSources(Set<String> sources) {_		Assert.notNull(sources, "Sources must not be null")__		this.sources = new LinkedHashSet<>(sources)__	};set,additional,sources,that,will,be,used,to,create,an,application,context,a,source,can,be,a,class,name,package,name,or,an,xml,resource,location,p,sources,set,here,will,be,used,in,addition,to,any,primary,sources,set,in,the,constructor,param,sources,the,application,sources,to,set,see,spring,application,class,see,get,all,sources;public,void,set,sources,set,string,sources,assert,not,null,sources,sources,must,not,be,null,this,sources,new,linked,hash,set,sources
SpringApplication -> public void setSources(Set<String> sources);1549791353;Set additional sources that will be used to create an ApplicationContext. A source_can be: a class name, package name, or an XML resource location._<p>_Sources set here will be used in addition to any primary sources set in the_constructor._@param sources the application sources to set_@see #SpringApplication(Class...)_@see #getAllSources();public void setSources(Set<String> sources) {_		Assert.notNull(sources, "Sources must not be null")__		this.sources = new LinkedHashSet<>(sources)__	};set,additional,sources,that,will,be,used,to,create,an,application,context,a,source,can,be,a,class,name,package,name,or,an,xml,resource,location,p,sources,set,here,will,be,used,in,addition,to,any,primary,sources,set,in,the,constructor,param,sources,the,application,sources,to,set,see,spring,application,class,see,get,all,sources;public,void,set,sources,set,string,sources,assert,not,null,sources,sources,must,not,be,null,this,sources,new,linked,hash,set,sources
SpringApplication -> public void setSources(Set<String> sources);1550148109;Set additional sources that will be used to create an ApplicationContext. A source_can be: a class name, package name, or an XML resource location._<p>_Sources set here will be used in addition to any primary sources set in the_constructor._@param sources the application sources to set_@see #SpringApplication(Class...)_@see #getAllSources();public void setSources(Set<String> sources) {_		Assert.notNull(sources, "Sources must not be null")__		this.sources = new LinkedHashSet<>(sources)__	};set,additional,sources,that,will,be,used,to,create,an,application,context,a,source,can,be,a,class,name,package,name,or,an,xml,resource,location,p,sources,set,here,will,be,used,in,addition,to,any,primary,sources,set,in,the,constructor,param,sources,the,application,sources,to,set,see,spring,application,class,see,get,all,sources;public,void,set,sources,set,string,sources,assert,not,null,sources,sources,must,not,be,null,this,sources,new,linked,hash,set,sources
SpringApplication -> public void setWebApplicationType(WebApplicationType webApplicationType);1507173536;Sets the type of web application to be run. If not explicitly set the type of web_application will be deduced based on the classpath._@param webApplicationType the web application type_@since 2.0.0;public void setWebApplicationType(WebApplicationType webApplicationType) {_		Assert.notNull(webApplicationType, "WebApplicationType must not be null")__		this.webApplicationType = webApplicationType__	};sets,the,type,of,web,application,to,be,run,if,not,explicitly,set,the,type,of,web,application,will,be,deduced,based,on,the,classpath,param,web,application,type,the,web,application,type,since,2,0,0;public,void,set,web,application,type,web,application,type,web,application,type,assert,not,null,web,application,type,web,application,type,must,not,be,null,this,web,application,type,web,application,type
SpringApplication -> public void setWebApplicationType(WebApplicationType webApplicationType);1509381678;Sets the type of web application to be run. If not explicitly set the type of web_application will be deduced based on the classpath._@param webApplicationType the web application type_@since 2.0.0;public void setWebApplicationType(WebApplicationType webApplicationType) {_		Assert.notNull(webApplicationType, "WebApplicationType must not be null")__		this.webApplicationType = webApplicationType__	};sets,the,type,of,web,application,to,be,run,if,not,explicitly,set,the,type,of,web,application,will,be,deduced,based,on,the,classpath,param,web,application,type,the,web,application,type,since,2,0,0;public,void,set,web,application,type,web,application,type,web,application,type,assert,not,null,web,application,type,web,application,type,must,not,be,null,this,web,application,type,web,application,type
SpringApplication -> public void setWebApplicationType(WebApplicationType webApplicationType);1510995225;Sets the type of web application to be run. If not explicitly set the type of web_application will be deduced based on the classpath._@param webApplicationType the web application type_@since 2.0.0;public void setWebApplicationType(WebApplicationType webApplicationType) {_		Assert.notNull(webApplicationType, "WebApplicationType must not be null")__		this.webApplicationType = webApplicationType__	};sets,the,type,of,web,application,to,be,run,if,not,explicitly,set,the,type,of,web,application,will,be,deduced,based,on,the,classpath,param,web,application,type,the,web,application,type,since,2,0,0;public,void,set,web,application,type,web,application,type,web,application,type,assert,not,null,web,application,type,web,application,type,must,not,be,null,this,web,application,type,web,application,type
SpringApplication -> public void setWebApplicationType(WebApplicationType webApplicationType);1515670013;Sets the type of web application to be run. If not explicitly set the type of web_application will be deduced based on the classpath._@param webApplicationType the web application type_@since 2.0.0;public void setWebApplicationType(WebApplicationType webApplicationType) {_		Assert.notNull(webApplicationType, "WebApplicationType must not be null")__		this.webApplicationType = webApplicationType__	};sets,the,type,of,web,application,to,be,run,if,not,explicitly,set,the,type,of,web,application,will,be,deduced,based,on,the,classpath,param,web,application,type,the,web,application,type,since,2,0,0;public,void,set,web,application,type,web,application,type,web,application,type,assert,not,null,web,application,type,web,application,type,must,not,be,null,this,web,application,type,web,application,type
SpringApplication -> public void setWebApplicationType(WebApplicationType webApplicationType);1519362690;Sets the type of web application to be run. If not explicitly set the type of web_application will be deduced based on the classpath._@param webApplicationType the web application type_@since 2.0.0;public void setWebApplicationType(WebApplicationType webApplicationType) {_		Assert.notNull(webApplicationType, "WebApplicationType must not be null")__		this.webApplicationType = webApplicationType__	};sets,the,type,of,web,application,to,be,run,if,not,explicitly,set,the,type,of,web,application,will,be,deduced,based,on,the,classpath,param,web,application,type,the,web,application,type,since,2,0,0;public,void,set,web,application,type,web,application,type,web,application,type,assert,not,null,web,application,type,web,application,type,must,not,be,null,this,web,application,type,web,application,type
SpringApplication -> public void setWebApplicationType(WebApplicationType webApplicationType);1522251721;Sets the type of web application to be run. If not explicitly set the type of web_application will be deduced based on the classpath._@param webApplicationType the web application type_@since 2.0.0;public void setWebApplicationType(WebApplicationType webApplicationType) {_		Assert.notNull(webApplicationType, "WebApplicationType must not be null")__		this.webApplicationType = webApplicationType__	};sets,the,type,of,web,application,to,be,run,if,not,explicitly,set,the,type,of,web,application,will,be,deduced,based,on,the,classpath,param,web,application,type,the,web,application,type,since,2,0,0;public,void,set,web,application,type,web,application,type,web,application,type,assert,not,null,web,application,type,web,application,type,must,not,be,null,this,web,application,type,web,application,type
SpringApplication -> public void setWebApplicationType(WebApplicationType webApplicationType);1525376698;Sets the type of web application to be run. If not explicitly set the type of web_application will be deduced based on the classpath._@param webApplicationType the web application type_@since 2.0.0;public void setWebApplicationType(WebApplicationType webApplicationType) {_		Assert.notNull(webApplicationType, "WebApplicationType must not be null")__		this.webApplicationType = webApplicationType__	};sets,the,type,of,web,application,to,be,run,if,not,explicitly,set,the,type,of,web,application,will,be,deduced,based,on,the,classpath,param,web,application,type,the,web,application,type,since,2,0,0;public,void,set,web,application,type,web,application,type,web,application,type,assert,not,null,web,application,type,web,application,type,must,not,be,null,this,web,application,type,web,application,type
SpringApplication -> public void setWebApplicationType(WebApplicationType webApplicationType);1525416882;Sets the type of web application to be run. If not explicitly set the type of web_application will be deduced based on the classpath._@param webApplicationType the web application type_@since 2.0.0;public void setWebApplicationType(WebApplicationType webApplicationType) {_		Assert.notNull(webApplicationType, "WebApplicationType must not be null")__		this.webApplicationType = webApplicationType__	};sets,the,type,of,web,application,to,be,run,if,not,explicitly,set,the,type,of,web,application,will,be,deduced,based,on,the,classpath,param,web,application,type,the,web,application,type,since,2,0,0;public,void,set,web,application,type,web,application,type,web,application,type,assert,not,null,web,application,type,web,application,type,must,not,be,null,this,web,application,type,web,application,type
SpringApplication -> public void setWebApplicationType(WebApplicationType webApplicationType);1526993305;Sets the type of web application to be run. If not explicitly set the type of web_application will be deduced based on the classpath._@param webApplicationType the web application type_@since 2.0.0;public void setWebApplicationType(WebApplicationType webApplicationType) {_		Assert.notNull(webApplicationType, "WebApplicationType must not be null")__		this.webApplicationType = webApplicationType__	};sets,the,type,of,web,application,to,be,run,if,not,explicitly,set,the,type,of,web,application,will,be,deduced,based,on,the,classpath,param,web,application,type,the,web,application,type,since,2,0,0;public,void,set,web,application,type,web,application,type,web,application,type,assert,not,null,web,application,type,web,application,type,must,not,be,null,this,web,application,type,web,application,type
SpringApplication -> public void setWebApplicationType(WebApplicationType webApplicationType);1529485904;Sets the type of web application to be run. If not explicitly set the type of web_application will be deduced based on the classpath._@param webApplicationType the web application type_@since 2.0.0;public void setWebApplicationType(WebApplicationType webApplicationType) {_		Assert.notNull(webApplicationType, "WebApplicationType must not be null")__		this.webApplicationType = webApplicationType__	};sets,the,type,of,web,application,to,be,run,if,not,explicitly,set,the,type,of,web,application,will,be,deduced,based,on,the,classpath,param,web,application,type,the,web,application,type,since,2,0,0;public,void,set,web,application,type,web,application,type,web,application,type,assert,not,null,web,application,type,web,application,type,must,not,be,null,this,web,application,type,web,application,type
SpringApplication -> public void setWebApplicationType(WebApplicationType webApplicationType);1531140616;Sets the type of web application to be run. If not explicitly set the type of web_application will be deduced based on the classpath._@param webApplicationType the web application type_@since 2.0.0;public void setWebApplicationType(WebApplicationType webApplicationType) {_		Assert.notNull(webApplicationType, "WebApplicationType must not be null")__		this.webApplicationType = webApplicationType__	};sets,the,type,of,web,application,to,be,run,if,not,explicitly,set,the,type,of,web,application,will,be,deduced,based,on,the,classpath,param,web,application,type,the,web,application,type,since,2,0,0;public,void,set,web,application,type,web,application,type,web,application,type,assert,not,null,web,application,type,web,application,type,must,not,be,null,this,web,application,type,web,application,type
SpringApplication -> public void setWebApplicationType(WebApplicationType webApplicationType);1531155529;Sets the type of web application to be run. If not explicitly set the type of web_application will be deduced based on the classpath._@param webApplicationType the web application type_@since 2.0.0;public void setWebApplicationType(WebApplicationType webApplicationType) {_		Assert.notNull(webApplicationType, "WebApplicationType must not be null")__		this.webApplicationType = webApplicationType__	};sets,the,type,of,web,application,to,be,run,if,not,explicitly,set,the,type,of,web,application,will,be,deduced,based,on,the,classpath,param,web,application,type,the,web,application,type,since,2,0,0;public,void,set,web,application,type,web,application,type,web,application,type,assert,not,null,web,application,type,web,application,type,must,not,be,null,this,web,application,type,web,application,type
SpringApplication -> public void setWebApplicationType(WebApplicationType webApplicationType);1531222098;Sets the type of web application to be run. If not explicitly set the type of web_application will be deduced based on the classpath._@param webApplicationType the web application type_@since 2.0.0;public void setWebApplicationType(WebApplicationType webApplicationType) {_		Assert.notNull(webApplicationType, "WebApplicationType must not be null")__		this.webApplicationType = webApplicationType__	};sets,the,type,of,web,application,to,be,run,if,not,explicitly,set,the,type,of,web,application,will,be,deduced,based,on,the,classpath,param,web,application,type,the,web,application,type,since,2,0,0;public,void,set,web,application,type,web,application,type,web,application,type,assert,not,null,web,application,type,web,application,type,must,not,be,null,this,web,application,type,web,application,type
SpringApplication -> public void setWebApplicationType(WebApplicationType webApplicationType);1532738143;Sets the type of web application to be run. If not explicitly set the type of web_application will be deduced based on the classpath._@param webApplicationType the web application type_@since 2.0.0;public void setWebApplicationType(WebApplicationType webApplicationType) {_		Assert.notNull(webApplicationType, "WebApplicationType must not be null")__		this.webApplicationType = webApplicationType__	};sets,the,type,of,web,application,to,be,run,if,not,explicitly,set,the,type,of,web,application,will,be,deduced,based,on,the,classpath,param,web,application,type,the,web,application,type,since,2,0,0;public,void,set,web,application,type,web,application,type,web,application,type,assert,not,null,web,application,type,web,application,type,must,not,be,null,this,web,application,type,web,application,type
SpringApplication -> public void setWebApplicationType(WebApplicationType webApplicationType);1534188228;Sets the type of web application to be run. If not explicitly set the type of web_application will be deduced based on the classpath._@param webApplicationType the web application type_@since 2.0.0;public void setWebApplicationType(WebApplicationType webApplicationType) {_		Assert.notNull(webApplicationType, "WebApplicationType must not be null")__		this.webApplicationType = webApplicationType__	};sets,the,type,of,web,application,to,be,run,if,not,explicitly,set,the,type,of,web,application,will,be,deduced,based,on,the,classpath,param,web,application,type,the,web,application,type,since,2,0,0;public,void,set,web,application,type,web,application,type,web,application,type,assert,not,null,web,application,type,web,application,type,must,not,be,null,this,web,application,type,web,application,type
SpringApplication -> public void setWebApplicationType(WebApplicationType webApplicationType);1535104170;Sets the type of web application to be run. If not explicitly set the type of web_application will be deduced based on the classpath._@param webApplicationType the web application type_@since 2.0.0;public void setWebApplicationType(WebApplicationType webApplicationType) {_		Assert.notNull(webApplicationType, "WebApplicationType must not be null")__		this.webApplicationType = webApplicationType__	};sets,the,type,of,web,application,to,be,run,if,not,explicitly,set,the,type,of,web,application,will,be,deduced,based,on,the,classpath,param,web,application,type,the,web,application,type,since,2,0,0;public,void,set,web,application,type,web,application,type,web,application,type,assert,not,null,web,application,type,web,application,type,must,not,be,null,this,web,application,type,web,application,type
SpringApplication -> public void setWebApplicationType(WebApplicationType webApplicationType);1536701067;Sets the type of web application to be run. If not explicitly set the type of web_application will be deduced based on the classpath._@param webApplicationType the web application type_@since 2.0.0;public void setWebApplicationType(WebApplicationType webApplicationType) {_		Assert.notNull(webApplicationType, "WebApplicationType must not be null")__		this.webApplicationType = webApplicationType__	};sets,the,type,of,web,application,to,be,run,if,not,explicitly,set,the,type,of,web,application,will,be,deduced,based,on,the,classpath,param,web,application,type,the,web,application,type,since,2,0,0;public,void,set,web,application,type,web,application,type,web,application,type,assert,not,null,web,application,type,web,application,type,must,not,be,null,this,web,application,type,web,application,type
SpringApplication -> public void setWebApplicationType(WebApplicationType webApplicationType);1538570355;Sets the type of web application to be run. If not explicitly set the type of web_application will be deduced based on the classpath._@param webApplicationType the web application type_@since 2.0.0;public void setWebApplicationType(WebApplicationType webApplicationType) {_		Assert.notNull(webApplicationType, "WebApplicationType must not be null")__		this.webApplicationType = webApplicationType__	};sets,the,type,of,web,application,to,be,run,if,not,explicitly,set,the,type,of,web,application,will,be,deduced,based,on,the,classpath,param,web,application,type,the,web,application,type,since,2,0,0;public,void,set,web,application,type,web,application,type,web,application,type,assert,not,null,web,application,type,web,application,type,must,not,be,null,this,web,application,type,web,application,type
SpringApplication -> public void setWebApplicationType(WebApplicationType webApplicationType);1538707540;Sets the type of web application to be run. If not explicitly set the type of web_application will be deduced based on the classpath._@param webApplicationType the web application type_@since 2.0.0;public void setWebApplicationType(WebApplicationType webApplicationType) {_		Assert.notNull(webApplicationType, "WebApplicationType must not be null")__		this.webApplicationType = webApplicationType__	};sets,the,type,of,web,application,to,be,run,if,not,explicitly,set,the,type,of,web,application,will,be,deduced,based,on,the,classpath,param,web,application,type,the,web,application,type,since,2,0,0;public,void,set,web,application,type,web,application,type,web,application,type,assert,not,null,web,application,type,web,application,type,must,not,be,null,this,web,application,type,web,application,type
SpringApplication -> public void setWebApplicationType(WebApplicationType webApplicationType);1538750610;Sets the type of web application to be run. If not explicitly set the type of web_application will be deduced based on the classpath._@param webApplicationType the web application type_@since 2.0.0;public void setWebApplicationType(WebApplicationType webApplicationType) {_		Assert.notNull(webApplicationType, "WebApplicationType must not be null")__		this.webApplicationType = webApplicationType__	};sets,the,type,of,web,application,to,be,run,if,not,explicitly,set,the,type,of,web,application,will,be,deduced,based,on,the,classpath,param,web,application,type,the,web,application,type,since,2,0,0;public,void,set,web,application,type,web,application,type,web,application,type,assert,not,null,web,application,type,web,application,type,must,not,be,null,this,web,application,type,web,application,type
SpringApplication -> public void setWebApplicationType(WebApplicationType webApplicationType);1538771652;Sets the type of web application to be run. If not explicitly set the type of web_application will be deduced based on the classpath._@param webApplicationType the web application type_@since 2.0.0;public void setWebApplicationType(WebApplicationType webApplicationType) {_		Assert.notNull(webApplicationType, "WebApplicationType must not be null")__		this.webApplicationType = webApplicationType__	};sets,the,type,of,web,application,to,be,run,if,not,explicitly,set,the,type,of,web,application,will,be,deduced,based,on,the,classpath,param,web,application,type,the,web,application,type,since,2,0,0;public,void,set,web,application,type,web,application,type,web,application,type,assert,not,null,web,application,type,web,application,type,must,not,be,null,this,web,application,type,web,application,type
SpringApplication -> public void setWebApplicationType(WebApplicationType webApplicationType);1540419762;Sets the type of web application to be run. If not explicitly set the type of web_application will be deduced based on the classpath._@param webApplicationType the web application type_@since 2.0.0;public void setWebApplicationType(WebApplicationType webApplicationType) {_		Assert.notNull(webApplicationType, "WebApplicationType must not be null")__		this.webApplicationType = webApplicationType__	};sets,the,type,of,web,application,to,be,run,if,not,explicitly,set,the,type,of,web,application,will,be,deduced,based,on,the,classpath,param,web,application,type,the,web,application,type,since,2,0,0;public,void,set,web,application,type,web,application,type,web,application,type,assert,not,null,web,application,type,web,application,type,must,not,be,null,this,web,application,type,web,application,type
SpringApplication -> public void setWebApplicationType(WebApplicationType webApplicationType);1541060131;Sets the type of web application to be run. If not explicitly set the type of web_application will be deduced based on the classpath._@param webApplicationType the web application type_@since 2.0.0;public void setWebApplicationType(WebApplicationType webApplicationType) {_		Assert.notNull(webApplicationType, "WebApplicationType must not be null")__		this.webApplicationType = webApplicationType__	};sets,the,type,of,web,application,to,be,run,if,not,explicitly,set,the,type,of,web,application,will,be,deduced,based,on,the,classpath,param,web,application,type,the,web,application,type,since,2,0,0;public,void,set,web,application,type,web,application,type,web,application,type,assert,not,null,web,application,type,web,application,type,must,not,be,null,this,web,application,type,web,application,type
SpringApplication -> public void setWebApplicationType(WebApplicationType webApplicationType);1546943477;Sets the type of web application to be run. If not explicitly set the type of web_application will be deduced based on the classpath._@param webApplicationType the web application type_@since 2.0.0;public void setWebApplicationType(WebApplicationType webApplicationType) {_		Assert.notNull(webApplicationType, "WebApplicationType must not be null")__		this.webApplicationType = webApplicationType__	};sets,the,type,of,web,application,to,be,run,if,not,explicitly,set,the,type,of,web,application,will,be,deduced,based,on,the,classpath,param,web,application,type,the,web,application,type,since,2,0,0;public,void,set,web,application,type,web,application,type,web,application,type,assert,not,null,web,application,type,web,application,type,must,not,be,null,this,web,application,type,web,application,type
SpringApplication -> public void setWebApplicationType(WebApplicationType webApplicationType);1549791353;Sets the type of web application to be run. If not explicitly set the type of web_application will be deduced based on the classpath._@param webApplicationType the web application type_@since 2.0.0;public void setWebApplicationType(WebApplicationType webApplicationType) {_		Assert.notNull(webApplicationType, "WebApplicationType must not be null")__		this.webApplicationType = webApplicationType__	};sets,the,type,of,web,application,to,be,run,if,not,explicitly,set,the,type,of,web,application,will,be,deduced,based,on,the,classpath,param,web,application,type,the,web,application,type,since,2,0,0;public,void,set,web,application,type,web,application,type,web,application,type,assert,not,null,web,application,type,web,application,type,must,not,be,null,this,web,application,type,web,application,type
SpringApplication -> public void setWebApplicationType(WebApplicationType webApplicationType);1550148109;Sets the type of web application to be run. If not explicitly set the type of web_application will be deduced based on the classpath._@param webApplicationType the web application type_@since 2.0.0;public void setWebApplicationType(WebApplicationType webApplicationType) {_		Assert.notNull(webApplicationType, "WebApplicationType must not be null")__		this.webApplicationType = webApplicationType__	};sets,the,type,of,web,application,to,be,run,if,not,explicitly,set,the,type,of,web,application,will,be,deduced,based,on,the,classpath,param,web,application,type,the,web,application,type,since,2,0,0;public,void,set,web,application,type,web,application,type,web,application,type,assert,not,null,web,application,type,web,application,type,must,not,be,null,this,web,application,type,web,application,type
SpringApplication -> protected void configurePropertySources(ConfigurableEnvironment environment, 			String[] args);1507173536;Add, remove or re-order any {@link PropertySource}s in this application's_environment._@param environment this application's environment_@param args arguments passed to the {@code run} method_@see #configureEnvironment(ConfigurableEnvironment, String[]);protected void configurePropertySources(ConfigurableEnvironment environment,_			String[] args) {_		MutablePropertySources sources = environment.getPropertySources()__		if (this.defaultProperties != null && !this.defaultProperties.isEmpty()) {_			sources.addLast(_					new MapPropertySource("defaultProperties", this.defaultProperties))__		}_		if (this.addCommandLineProperties && args.length > 0) {_			String name = CommandLinePropertySource.COMMAND_LINE_PROPERTY_SOURCE_NAME__			if (sources.contains(name)) {_				PropertySource<?> source = sources.get(name)__				CompositePropertySource composite = new CompositePropertySource(name)__				composite.addPropertySource(new SimpleCommandLinePropertySource(_						"springApplicationCommandLineArgs", args))__				composite.addPropertySource(source)__				sources.replace(name, composite)__			}_			else {_				sources.addFirst(new SimpleCommandLinePropertySource(args))__			}_		}_	};add,remove,or,re,order,any,link,property,source,s,in,this,application,s,environment,param,environment,this,application,s,environment,param,args,arguments,passed,to,the,code,run,method,see,configure,environment,configurable,environment,string;protected,void,configure,property,sources,configurable,environment,environment,string,args,mutable,property,sources,sources,environment,get,property,sources,if,this,default,properties,null,this,default,properties,is,empty,sources,add,last,new,map,property,source,default,properties,this,default,properties,if,this,add,command,line,properties,args,length,0,string,name,command,line,property,source,if,sources,contains,name,property,source,source,sources,get,name,composite,property,source,composite,new,composite,property,source,name,composite,add,property,source,new,simple,command,line,property,source,spring,application,command,line,args,args,composite,add,property,source,source,sources,replace,name,composite,else,sources,add,first,new,simple,command,line,property,source,args
SpringApplication -> protected void configurePropertySources(ConfigurableEnvironment environment, 			String[] args);1509381678;Add, remove or re-order any {@link PropertySource}s in this application's_environment._@param environment this application's environment_@param args arguments passed to the {@code run} method_@see #configureEnvironment(ConfigurableEnvironment, String[]);protected void configurePropertySources(ConfigurableEnvironment environment,_			String[] args) {_		MutablePropertySources sources = environment.getPropertySources()__		if (this.defaultProperties != null && !this.defaultProperties.isEmpty()) {_			sources.addLast(_					new MapPropertySource("defaultProperties", this.defaultProperties))__		}_		if (this.addCommandLineProperties && args.length > 0) {_			String name = CommandLinePropertySource.COMMAND_LINE_PROPERTY_SOURCE_NAME__			if (sources.contains(name)) {_				PropertySource<?> source = sources.get(name)__				CompositePropertySource composite = new CompositePropertySource(name)__				composite.addPropertySource(new SimpleCommandLinePropertySource(_						"springApplicationCommandLineArgs", args))__				composite.addPropertySource(source)__				sources.replace(name, composite)__			}_			else {_				sources.addFirst(new SimpleCommandLinePropertySource(args))__			}_		}_	};add,remove,or,re,order,any,link,property,source,s,in,this,application,s,environment,param,environment,this,application,s,environment,param,args,arguments,passed,to,the,code,run,method,see,configure,environment,configurable,environment,string;protected,void,configure,property,sources,configurable,environment,environment,string,args,mutable,property,sources,sources,environment,get,property,sources,if,this,default,properties,null,this,default,properties,is,empty,sources,add,last,new,map,property,source,default,properties,this,default,properties,if,this,add,command,line,properties,args,length,0,string,name,command,line,property,source,if,sources,contains,name,property,source,source,sources,get,name,composite,property,source,composite,new,composite,property,source,name,composite,add,property,source,new,simple,command,line,property,source,spring,application,command,line,args,args,composite,add,property,source,source,sources,replace,name,composite,else,sources,add,first,new,simple,command,line,property,source,args
SpringApplication -> protected void configurePropertySources(ConfigurableEnvironment environment, 			String[] args);1510995225;Add, remove or re-order any {@link PropertySource}s in this application's_environment._@param environment this application's environment_@param args arguments passed to the {@code run} method_@see #configureEnvironment(ConfigurableEnvironment, String[]);protected void configurePropertySources(ConfigurableEnvironment environment,_			String[] args) {_		MutablePropertySources sources = environment.getPropertySources()__		if (this.defaultProperties != null && !this.defaultProperties.isEmpty()) {_			sources.addLast(_					new MapPropertySource("defaultProperties", this.defaultProperties))__		}_		if (this.addCommandLineProperties && args.length > 0) {_			String name = CommandLinePropertySource.COMMAND_LINE_PROPERTY_SOURCE_NAME__			if (sources.contains(name)) {_				PropertySource<?> source = sources.get(name)__				CompositePropertySource composite = new CompositePropertySource(name)__				composite.addPropertySource(new SimpleCommandLinePropertySource(_						"springApplicationCommandLineArgs", args))__				composite.addPropertySource(source)__				sources.replace(name, composite)__			}_			else {_				sources.addFirst(new SimpleCommandLinePropertySource(args))__			}_		}_	};add,remove,or,re,order,any,link,property,source,s,in,this,application,s,environment,param,environment,this,application,s,environment,param,args,arguments,passed,to,the,code,run,method,see,configure,environment,configurable,environment,string;protected,void,configure,property,sources,configurable,environment,environment,string,args,mutable,property,sources,sources,environment,get,property,sources,if,this,default,properties,null,this,default,properties,is,empty,sources,add,last,new,map,property,source,default,properties,this,default,properties,if,this,add,command,line,properties,args,length,0,string,name,command,line,property,source,if,sources,contains,name,property,source,source,sources,get,name,composite,property,source,composite,new,composite,property,source,name,composite,add,property,source,new,simple,command,line,property,source,spring,application,command,line,args,args,composite,add,property,source,source,sources,replace,name,composite,else,sources,add,first,new,simple,command,line,property,source,args
SpringApplication -> protected void configurePropertySources(ConfigurableEnvironment environment, 			String[] args);1515670013;Add, remove or re-order any {@link PropertySource}s in this application's_environment._@param environment this application's environment_@param args arguments passed to the {@code run} method_@see #configureEnvironment(ConfigurableEnvironment, String[]);protected void configurePropertySources(ConfigurableEnvironment environment,_			String[] args) {_		MutablePropertySources sources = environment.getPropertySources()__		if (this.defaultProperties != null && !this.defaultProperties.isEmpty()) {_			sources.addLast(_					new MapPropertySource("defaultProperties", this.defaultProperties))__		}_		if (this.addCommandLineProperties && args.length > 0) {_			String name = CommandLinePropertySource.COMMAND_LINE_PROPERTY_SOURCE_NAME__			if (sources.contains(name)) {_				PropertySource<?> source = sources.get(name)__				CompositePropertySource composite = new CompositePropertySource(name)__				composite.addPropertySource(new SimpleCommandLinePropertySource(_						"springApplicationCommandLineArgs", args))__				composite.addPropertySource(source)__				sources.replace(name, composite)__			}_			else {_				sources.addFirst(new SimpleCommandLinePropertySource(args))__			}_		}_	};add,remove,or,re,order,any,link,property,source,s,in,this,application,s,environment,param,environment,this,application,s,environment,param,args,arguments,passed,to,the,code,run,method,see,configure,environment,configurable,environment,string;protected,void,configure,property,sources,configurable,environment,environment,string,args,mutable,property,sources,sources,environment,get,property,sources,if,this,default,properties,null,this,default,properties,is,empty,sources,add,last,new,map,property,source,default,properties,this,default,properties,if,this,add,command,line,properties,args,length,0,string,name,command,line,property,source,if,sources,contains,name,property,source,source,sources,get,name,composite,property,source,composite,new,composite,property,source,name,composite,add,property,source,new,simple,command,line,property,source,spring,application,command,line,args,args,composite,add,property,source,source,sources,replace,name,composite,else,sources,add,first,new,simple,command,line,property,source,args
SpringApplication -> protected void configurePropertySources(ConfigurableEnvironment environment, 			String[] args);1519362690;Add, remove or re-order any {@link PropertySource}s in this application's_environment._@param environment this application's environment_@param args arguments passed to the {@code run} method_@see #configureEnvironment(ConfigurableEnvironment, String[]);protected void configurePropertySources(ConfigurableEnvironment environment,_			String[] args) {_		MutablePropertySources sources = environment.getPropertySources()__		if (this.defaultProperties != null && !this.defaultProperties.isEmpty()) {_			sources.addLast(_					new MapPropertySource("defaultProperties", this.defaultProperties))__		}_		if (this.addCommandLineProperties && args.length > 0) {_			String name = CommandLinePropertySource.COMMAND_LINE_PROPERTY_SOURCE_NAME__			if (sources.contains(name)) {_				PropertySource<?> source = sources.get(name)__				CompositePropertySource composite = new CompositePropertySource(name)__				composite.addPropertySource(new SimpleCommandLinePropertySource(_						"springApplicationCommandLineArgs", args))__				composite.addPropertySource(source)__				sources.replace(name, composite)__			}_			else {_				sources.addFirst(new SimpleCommandLinePropertySource(args))__			}_		}_	};add,remove,or,re,order,any,link,property,source,s,in,this,application,s,environment,param,environment,this,application,s,environment,param,args,arguments,passed,to,the,code,run,method,see,configure,environment,configurable,environment,string;protected,void,configure,property,sources,configurable,environment,environment,string,args,mutable,property,sources,sources,environment,get,property,sources,if,this,default,properties,null,this,default,properties,is,empty,sources,add,last,new,map,property,source,default,properties,this,default,properties,if,this,add,command,line,properties,args,length,0,string,name,command,line,property,source,if,sources,contains,name,property,source,source,sources,get,name,composite,property,source,composite,new,composite,property,source,name,composite,add,property,source,new,simple,command,line,property,source,spring,application,command,line,args,args,composite,add,property,source,source,sources,replace,name,composite,else,sources,add,first,new,simple,command,line,property,source,args
SpringApplication -> protected void configurePropertySources(ConfigurableEnvironment environment, 			String[] args);1522251721;Add, remove or re-order any {@link PropertySource}s in this application's_environment._@param environment this application's environment_@param args arguments passed to the {@code run} method_@see #configureEnvironment(ConfigurableEnvironment, String[]);protected void configurePropertySources(ConfigurableEnvironment environment,_			String[] args) {_		MutablePropertySources sources = environment.getPropertySources()__		if (this.defaultProperties != null && !this.defaultProperties.isEmpty()) {_			sources.addLast(_					new MapPropertySource("defaultProperties", this.defaultProperties))__		}_		if (this.addCommandLineProperties && args.length > 0) {_			String name = CommandLinePropertySource.COMMAND_LINE_PROPERTY_SOURCE_NAME__			if (sources.contains(name)) {_				PropertySource<?> source = sources.get(name)__				CompositePropertySource composite = new CompositePropertySource(name)__				composite.addPropertySource(new SimpleCommandLinePropertySource(_						"springApplicationCommandLineArgs", args))__				composite.addPropertySource(source)__				sources.replace(name, composite)__			}_			else {_				sources.addFirst(new SimpleCommandLinePropertySource(args))__			}_		}_	};add,remove,or,re,order,any,link,property,source,s,in,this,application,s,environment,param,environment,this,application,s,environment,param,args,arguments,passed,to,the,code,run,method,see,configure,environment,configurable,environment,string;protected,void,configure,property,sources,configurable,environment,environment,string,args,mutable,property,sources,sources,environment,get,property,sources,if,this,default,properties,null,this,default,properties,is,empty,sources,add,last,new,map,property,source,default,properties,this,default,properties,if,this,add,command,line,properties,args,length,0,string,name,command,line,property,source,if,sources,contains,name,property,source,source,sources,get,name,composite,property,source,composite,new,composite,property,source,name,composite,add,property,source,new,simple,command,line,property,source,spring,application,command,line,args,args,composite,add,property,source,source,sources,replace,name,composite,else,sources,add,first,new,simple,command,line,property,source,args
SpringApplication -> protected void configurePropertySources(ConfigurableEnvironment environment, 			String[] args);1525376698;Add, remove or re-order any {@link PropertySource}s in this application's_environment._@param environment this application's environment_@param args arguments passed to the {@code run} method_@see #configureEnvironment(ConfigurableEnvironment, String[]);protected void configurePropertySources(ConfigurableEnvironment environment,_			String[] args) {_		MutablePropertySources sources = environment.getPropertySources()__		if (this.defaultProperties != null && !this.defaultProperties.isEmpty()) {_			sources.addLast(_					new MapPropertySource("defaultProperties", this.defaultProperties))__		}_		if (this.addCommandLineProperties && args.length > 0) {_			String name = CommandLinePropertySource.COMMAND_LINE_PROPERTY_SOURCE_NAME__			if (sources.contains(name)) {_				PropertySource<?> source = sources.get(name)__				CompositePropertySource composite = new CompositePropertySource(name)__				composite.addPropertySource(new SimpleCommandLinePropertySource(_						"springApplicationCommandLineArgs", args))__				composite.addPropertySource(source)__				sources.replace(name, composite)__			}_			else {_				sources.addFirst(new SimpleCommandLinePropertySource(args))__			}_		}_	};add,remove,or,re,order,any,link,property,source,s,in,this,application,s,environment,param,environment,this,application,s,environment,param,args,arguments,passed,to,the,code,run,method,see,configure,environment,configurable,environment,string;protected,void,configure,property,sources,configurable,environment,environment,string,args,mutable,property,sources,sources,environment,get,property,sources,if,this,default,properties,null,this,default,properties,is,empty,sources,add,last,new,map,property,source,default,properties,this,default,properties,if,this,add,command,line,properties,args,length,0,string,name,command,line,property,source,if,sources,contains,name,property,source,source,sources,get,name,composite,property,source,composite,new,composite,property,source,name,composite,add,property,source,new,simple,command,line,property,source,spring,application,command,line,args,args,composite,add,property,source,source,sources,replace,name,composite,else,sources,add,first,new,simple,command,line,property,source,args
SpringApplication -> protected void configurePropertySources(ConfigurableEnvironment environment, 			String[] args);1525416882;Add, remove or re-order any {@link PropertySource}s in this application's_environment._@param environment this application's environment_@param args arguments passed to the {@code run} method_@see #configureEnvironment(ConfigurableEnvironment, String[]);protected void configurePropertySources(ConfigurableEnvironment environment,_			String[] args) {_		MutablePropertySources sources = environment.getPropertySources()__		if (this.defaultProperties != null && !this.defaultProperties.isEmpty()) {_			sources.addLast(_					new MapPropertySource("defaultProperties", this.defaultProperties))__		}_		if (this.addCommandLineProperties && args.length > 0) {_			String name = CommandLinePropertySource.COMMAND_LINE_PROPERTY_SOURCE_NAME__			if (sources.contains(name)) {_				PropertySource<?> source = sources.get(name)__				CompositePropertySource composite = new CompositePropertySource(name)__				composite.addPropertySource(new SimpleCommandLinePropertySource(_						"springApplicationCommandLineArgs", args))__				composite.addPropertySource(source)__				sources.replace(name, composite)__			}_			else {_				sources.addFirst(new SimpleCommandLinePropertySource(args))__			}_		}_	};add,remove,or,re,order,any,link,property,source,s,in,this,application,s,environment,param,environment,this,application,s,environment,param,args,arguments,passed,to,the,code,run,method,see,configure,environment,configurable,environment,string;protected,void,configure,property,sources,configurable,environment,environment,string,args,mutable,property,sources,sources,environment,get,property,sources,if,this,default,properties,null,this,default,properties,is,empty,sources,add,last,new,map,property,source,default,properties,this,default,properties,if,this,add,command,line,properties,args,length,0,string,name,command,line,property,source,if,sources,contains,name,property,source,source,sources,get,name,composite,property,source,composite,new,composite,property,source,name,composite,add,property,source,new,simple,command,line,property,source,spring,application,command,line,args,args,composite,add,property,source,source,sources,replace,name,composite,else,sources,add,first,new,simple,command,line,property,source,args
SpringApplication -> protected void configurePropertySources(ConfigurableEnvironment environment, 			String[] args);1526993305;Add, remove or re-order any {@link PropertySource}s in this application's_environment._@param environment this application's environment_@param args arguments passed to the {@code run} method_@see #configureEnvironment(ConfigurableEnvironment, String[]);protected void configurePropertySources(ConfigurableEnvironment environment,_			String[] args) {_		MutablePropertySources sources = environment.getPropertySources()__		if (this.defaultProperties != null && !this.defaultProperties.isEmpty()) {_			sources.addLast(_					new MapPropertySource("defaultProperties", this.defaultProperties))__		}_		if (this.addCommandLineProperties && args.length > 0) {_			String name = CommandLinePropertySource.COMMAND_LINE_PROPERTY_SOURCE_NAME__			if (sources.contains(name)) {_				PropertySource<?> source = sources.get(name)__				CompositePropertySource composite = new CompositePropertySource(name)__				composite.addPropertySource(new SimpleCommandLinePropertySource(_						"springApplicationCommandLineArgs", args))__				composite.addPropertySource(source)__				sources.replace(name, composite)__			}_			else {_				sources.addFirst(new SimpleCommandLinePropertySource(args))__			}_		}_	};add,remove,or,re,order,any,link,property,source,s,in,this,application,s,environment,param,environment,this,application,s,environment,param,args,arguments,passed,to,the,code,run,method,see,configure,environment,configurable,environment,string;protected,void,configure,property,sources,configurable,environment,environment,string,args,mutable,property,sources,sources,environment,get,property,sources,if,this,default,properties,null,this,default,properties,is,empty,sources,add,last,new,map,property,source,default,properties,this,default,properties,if,this,add,command,line,properties,args,length,0,string,name,command,line,property,source,if,sources,contains,name,property,source,source,sources,get,name,composite,property,source,composite,new,composite,property,source,name,composite,add,property,source,new,simple,command,line,property,source,spring,application,command,line,args,args,composite,add,property,source,source,sources,replace,name,composite,else,sources,add,first,new,simple,command,line,property,source,args
SpringApplication -> protected void configurePropertySources(ConfigurableEnvironment environment, 			String[] args);1529485904;Add, remove or re-order any {@link PropertySource}s in this application's_environment._@param environment this application's environment_@param args arguments passed to the {@code run} method_@see #configureEnvironment(ConfigurableEnvironment, String[]);protected void configurePropertySources(ConfigurableEnvironment environment,_			String[] args) {_		MutablePropertySources sources = environment.getPropertySources()__		if (this.defaultProperties != null && !this.defaultProperties.isEmpty()) {_			sources.addLast(_					new MapPropertySource("defaultProperties", this.defaultProperties))__		}_		if (this.addCommandLineProperties && args.length > 0) {_			String name = CommandLinePropertySource.COMMAND_LINE_PROPERTY_SOURCE_NAME__			if (sources.contains(name)) {_				PropertySource<?> source = sources.get(name)__				CompositePropertySource composite = new CompositePropertySource(name)__				composite.addPropertySource(new SimpleCommandLinePropertySource(_						"springApplicationCommandLineArgs", args))__				composite.addPropertySource(source)__				sources.replace(name, composite)__			}_			else {_				sources.addFirst(new SimpleCommandLinePropertySource(args))__			}_		}_	};add,remove,or,re,order,any,link,property,source,s,in,this,application,s,environment,param,environment,this,application,s,environment,param,args,arguments,passed,to,the,code,run,method,see,configure,environment,configurable,environment,string;protected,void,configure,property,sources,configurable,environment,environment,string,args,mutable,property,sources,sources,environment,get,property,sources,if,this,default,properties,null,this,default,properties,is,empty,sources,add,last,new,map,property,source,default,properties,this,default,properties,if,this,add,command,line,properties,args,length,0,string,name,command,line,property,source,if,sources,contains,name,property,source,source,sources,get,name,composite,property,source,composite,new,composite,property,source,name,composite,add,property,source,new,simple,command,line,property,source,spring,application,command,line,args,args,composite,add,property,source,source,sources,replace,name,composite,else,sources,add,first,new,simple,command,line,property,source,args
SpringApplication -> protected void configurePropertySources(ConfigurableEnvironment environment, 			String[] args);1531140616;Add, remove or re-order any {@link PropertySource}s in this application's_environment._@param environment this application's environment_@param args arguments passed to the {@code run} method_@see #configureEnvironment(ConfigurableEnvironment, String[]);protected void configurePropertySources(ConfigurableEnvironment environment,_			String[] args) {_		MutablePropertySources sources = environment.getPropertySources()__		if (this.defaultProperties != null && !this.defaultProperties.isEmpty()) {_			sources.addLast(_					new MapPropertySource("defaultProperties", this.defaultProperties))__		}_		if (this.addCommandLineProperties && args.length > 0) {_			String name = CommandLinePropertySource.COMMAND_LINE_PROPERTY_SOURCE_NAME__			if (sources.contains(name)) {_				PropertySource<?> source = sources.get(name)__				CompositePropertySource composite = new CompositePropertySource(name)__				composite.addPropertySource(new SimpleCommandLinePropertySource(_						"springApplicationCommandLineArgs", args))__				composite.addPropertySource(source)__				sources.replace(name, composite)__			}_			else {_				sources.addFirst(new SimpleCommandLinePropertySource(args))__			}_		}_	};add,remove,or,re,order,any,link,property,source,s,in,this,application,s,environment,param,environment,this,application,s,environment,param,args,arguments,passed,to,the,code,run,method,see,configure,environment,configurable,environment,string;protected,void,configure,property,sources,configurable,environment,environment,string,args,mutable,property,sources,sources,environment,get,property,sources,if,this,default,properties,null,this,default,properties,is,empty,sources,add,last,new,map,property,source,default,properties,this,default,properties,if,this,add,command,line,properties,args,length,0,string,name,command,line,property,source,if,sources,contains,name,property,source,source,sources,get,name,composite,property,source,composite,new,composite,property,source,name,composite,add,property,source,new,simple,command,line,property,source,spring,application,command,line,args,args,composite,add,property,source,source,sources,replace,name,composite,else,sources,add,first,new,simple,command,line,property,source,args
SpringApplication -> protected void configurePropertySources(ConfigurableEnvironment environment, 			String[] args);1531155529;Add, remove or re-order any {@link PropertySource}s in this application's_environment._@param environment this application's environment_@param args arguments passed to the {@code run} method_@see #configureEnvironment(ConfigurableEnvironment, String[]);protected void configurePropertySources(ConfigurableEnvironment environment,_			String[] args) {_		MutablePropertySources sources = environment.getPropertySources()__		if (this.defaultProperties != null && !this.defaultProperties.isEmpty()) {_			sources.addLast(_					new MapPropertySource("defaultProperties", this.defaultProperties))__		}_		if (this.addCommandLineProperties && args.length > 0) {_			String name = CommandLinePropertySource.COMMAND_LINE_PROPERTY_SOURCE_NAME__			if (sources.contains(name)) {_				PropertySource<?> source = sources.get(name)__				CompositePropertySource composite = new CompositePropertySource(name)__				composite.addPropertySource(new SimpleCommandLinePropertySource(_						"springApplicationCommandLineArgs", args))__				composite.addPropertySource(source)__				sources.replace(name, composite)__			}_			else {_				sources.addFirst(new SimpleCommandLinePropertySource(args))__			}_		}_	};add,remove,or,re,order,any,link,property,source,s,in,this,application,s,environment,param,environment,this,application,s,environment,param,args,arguments,passed,to,the,code,run,method,see,configure,environment,configurable,environment,string;protected,void,configure,property,sources,configurable,environment,environment,string,args,mutable,property,sources,sources,environment,get,property,sources,if,this,default,properties,null,this,default,properties,is,empty,sources,add,last,new,map,property,source,default,properties,this,default,properties,if,this,add,command,line,properties,args,length,0,string,name,command,line,property,source,if,sources,contains,name,property,source,source,sources,get,name,composite,property,source,composite,new,composite,property,source,name,composite,add,property,source,new,simple,command,line,property,source,spring,application,command,line,args,args,composite,add,property,source,source,sources,replace,name,composite,else,sources,add,first,new,simple,command,line,property,source,args
SpringApplication -> protected void configurePropertySources(ConfigurableEnvironment environment, 			String[] args);1531222098;Add, remove or re-order any {@link PropertySource}s in this application's_environment._@param environment this application's environment_@param args arguments passed to the {@code run} method_@see #configureEnvironment(ConfigurableEnvironment, String[]);protected void configurePropertySources(ConfigurableEnvironment environment,_			String[] args) {_		MutablePropertySources sources = environment.getPropertySources()__		if (this.defaultProperties != null && !this.defaultProperties.isEmpty()) {_			sources.addLast(_					new MapPropertySource("defaultProperties", this.defaultProperties))__		}_		if (this.addCommandLineProperties && args.length > 0) {_			String name = CommandLinePropertySource.COMMAND_LINE_PROPERTY_SOURCE_NAME__			if (sources.contains(name)) {_				PropertySource<?> source = sources.get(name)__				CompositePropertySource composite = new CompositePropertySource(name)__				composite.addPropertySource(new SimpleCommandLinePropertySource(_						"springApplicationCommandLineArgs", args))__				composite.addPropertySource(source)__				sources.replace(name, composite)__			}_			else {_				sources.addFirst(new SimpleCommandLinePropertySource(args))__			}_		}_	};add,remove,or,re,order,any,link,property,source,s,in,this,application,s,environment,param,environment,this,application,s,environment,param,args,arguments,passed,to,the,code,run,method,see,configure,environment,configurable,environment,string;protected,void,configure,property,sources,configurable,environment,environment,string,args,mutable,property,sources,sources,environment,get,property,sources,if,this,default,properties,null,this,default,properties,is,empty,sources,add,last,new,map,property,source,default,properties,this,default,properties,if,this,add,command,line,properties,args,length,0,string,name,command,line,property,source,if,sources,contains,name,property,source,source,sources,get,name,composite,property,source,composite,new,composite,property,source,name,composite,add,property,source,new,simple,command,line,property,source,spring,application,command,line,args,args,composite,add,property,source,source,sources,replace,name,composite,else,sources,add,first,new,simple,command,line,property,source,args
SpringApplication -> protected void configurePropertySources(ConfigurableEnvironment environment, 			String[] args);1532738143;Add, remove or re-order any {@link PropertySource}s in this application's_environment._@param environment this application's environment_@param args arguments passed to the {@code run} method_@see #configureEnvironment(ConfigurableEnvironment, String[]);protected void configurePropertySources(ConfigurableEnvironment environment,_			String[] args) {_		MutablePropertySources sources = environment.getPropertySources()__		if (this.defaultProperties != null && !this.defaultProperties.isEmpty()) {_			sources.addLast(_					new MapPropertySource("defaultProperties", this.defaultProperties))__		}_		if (this.addCommandLineProperties && args.length > 0) {_			String name = CommandLinePropertySource.COMMAND_LINE_PROPERTY_SOURCE_NAME__			if (sources.contains(name)) {_				PropertySource<?> source = sources.get(name)__				CompositePropertySource composite = new CompositePropertySource(name)__				composite.addPropertySource(new SimpleCommandLinePropertySource(_						"springApplicationCommandLineArgs", args))__				composite.addPropertySource(source)__				sources.replace(name, composite)__			}_			else {_				sources.addFirst(new SimpleCommandLinePropertySource(args))__			}_		}_	};add,remove,or,re,order,any,link,property,source,s,in,this,application,s,environment,param,environment,this,application,s,environment,param,args,arguments,passed,to,the,code,run,method,see,configure,environment,configurable,environment,string;protected,void,configure,property,sources,configurable,environment,environment,string,args,mutable,property,sources,sources,environment,get,property,sources,if,this,default,properties,null,this,default,properties,is,empty,sources,add,last,new,map,property,source,default,properties,this,default,properties,if,this,add,command,line,properties,args,length,0,string,name,command,line,property,source,if,sources,contains,name,property,source,source,sources,get,name,composite,property,source,composite,new,composite,property,source,name,composite,add,property,source,new,simple,command,line,property,source,spring,application,command,line,args,args,composite,add,property,source,source,sources,replace,name,composite,else,sources,add,first,new,simple,command,line,property,source,args
SpringApplication -> protected void configurePropertySources(ConfigurableEnvironment environment, 			String[] args);1534188228;Add, remove or re-order any {@link PropertySource}s in this application's_environment._@param environment this application's environment_@param args arguments passed to the {@code run} method_@see #configureEnvironment(ConfigurableEnvironment, String[]);protected void configurePropertySources(ConfigurableEnvironment environment,_			String[] args) {_		MutablePropertySources sources = environment.getPropertySources()__		if (this.defaultProperties != null && !this.defaultProperties.isEmpty()) {_			sources.addLast(_					new MapPropertySource("defaultProperties", this.defaultProperties))__		}_		if (this.addCommandLineProperties && args.length > 0) {_			String name = CommandLinePropertySource.COMMAND_LINE_PROPERTY_SOURCE_NAME__			if (sources.contains(name)) {_				PropertySource<?> source = sources.get(name)__				CompositePropertySource composite = new CompositePropertySource(name)__				composite.addPropertySource(new SimpleCommandLinePropertySource(_						"springApplicationCommandLineArgs", args))__				composite.addPropertySource(source)__				sources.replace(name, composite)__			}_			else {_				sources.addFirst(new SimpleCommandLinePropertySource(args))__			}_		}_	};add,remove,or,re,order,any,link,property,source,s,in,this,application,s,environment,param,environment,this,application,s,environment,param,args,arguments,passed,to,the,code,run,method,see,configure,environment,configurable,environment,string;protected,void,configure,property,sources,configurable,environment,environment,string,args,mutable,property,sources,sources,environment,get,property,sources,if,this,default,properties,null,this,default,properties,is,empty,sources,add,last,new,map,property,source,default,properties,this,default,properties,if,this,add,command,line,properties,args,length,0,string,name,command,line,property,source,if,sources,contains,name,property,source,source,sources,get,name,composite,property,source,composite,new,composite,property,source,name,composite,add,property,source,new,simple,command,line,property,source,spring,application,command,line,args,args,composite,add,property,source,source,sources,replace,name,composite,else,sources,add,first,new,simple,command,line,property,source,args
SpringApplication -> protected void configurePropertySources(ConfigurableEnvironment environment, 			String[] args);1535104170;Add, remove or re-order any {@link PropertySource}s in this application's_environment._@param environment this application's environment_@param args arguments passed to the {@code run} method_@see #configureEnvironment(ConfigurableEnvironment, String[]);protected void configurePropertySources(ConfigurableEnvironment environment,_			String[] args) {_		MutablePropertySources sources = environment.getPropertySources()__		if (this.defaultProperties != null && !this.defaultProperties.isEmpty()) {_			sources.addLast(_					new MapPropertySource("defaultProperties", this.defaultProperties))__		}_		if (this.addCommandLineProperties && args.length > 0) {_			String name = CommandLinePropertySource.COMMAND_LINE_PROPERTY_SOURCE_NAME__			if (sources.contains(name)) {_				PropertySource<?> source = sources.get(name)__				CompositePropertySource composite = new CompositePropertySource(name)__				composite.addPropertySource(new SimpleCommandLinePropertySource(_						"springApplicationCommandLineArgs", args))__				composite.addPropertySource(source)__				sources.replace(name, composite)__			}_			else {_				sources.addFirst(new SimpleCommandLinePropertySource(args))__			}_		}_	};add,remove,or,re,order,any,link,property,source,s,in,this,application,s,environment,param,environment,this,application,s,environment,param,args,arguments,passed,to,the,code,run,method,see,configure,environment,configurable,environment,string;protected,void,configure,property,sources,configurable,environment,environment,string,args,mutable,property,sources,sources,environment,get,property,sources,if,this,default,properties,null,this,default,properties,is,empty,sources,add,last,new,map,property,source,default,properties,this,default,properties,if,this,add,command,line,properties,args,length,0,string,name,command,line,property,source,if,sources,contains,name,property,source,source,sources,get,name,composite,property,source,composite,new,composite,property,source,name,composite,add,property,source,new,simple,command,line,property,source,spring,application,command,line,args,args,composite,add,property,source,source,sources,replace,name,composite,else,sources,add,first,new,simple,command,line,property,source,args
SpringApplication -> protected void configurePropertySources(ConfigurableEnvironment environment, 			String[] args);1536701067;Add, remove or re-order any {@link PropertySource}s in this application's_environment._@param environment this application's environment_@param args arguments passed to the {@code run} method_@see #configureEnvironment(ConfigurableEnvironment, String[]);protected void configurePropertySources(ConfigurableEnvironment environment,_			String[] args) {_		MutablePropertySources sources = environment.getPropertySources()__		if (this.defaultProperties != null && !this.defaultProperties.isEmpty()) {_			sources.addLast(_					new MapPropertySource("defaultProperties", this.defaultProperties))__		}_		if (this.addCommandLineProperties && args.length > 0) {_			String name = CommandLinePropertySource.COMMAND_LINE_PROPERTY_SOURCE_NAME__			if (sources.contains(name)) {_				PropertySource<?> source = sources.get(name)__				CompositePropertySource composite = new CompositePropertySource(name)__				composite.addPropertySource(new SimpleCommandLinePropertySource(_						"springApplicationCommandLineArgs", args))__				composite.addPropertySource(source)__				sources.replace(name, composite)__			}_			else {_				sources.addFirst(new SimpleCommandLinePropertySource(args))__			}_		}_	};add,remove,or,re,order,any,link,property,source,s,in,this,application,s,environment,param,environment,this,application,s,environment,param,args,arguments,passed,to,the,code,run,method,see,configure,environment,configurable,environment,string;protected,void,configure,property,sources,configurable,environment,environment,string,args,mutable,property,sources,sources,environment,get,property,sources,if,this,default,properties,null,this,default,properties,is,empty,sources,add,last,new,map,property,source,default,properties,this,default,properties,if,this,add,command,line,properties,args,length,0,string,name,command,line,property,source,if,sources,contains,name,property,source,source,sources,get,name,composite,property,source,composite,new,composite,property,source,name,composite,add,property,source,new,simple,command,line,property,source,spring,application,command,line,args,args,composite,add,property,source,source,sources,replace,name,composite,else,sources,add,first,new,simple,command,line,property,source,args
SpringApplication -> protected void configurePropertySources(ConfigurableEnvironment environment, 			String[] args);1538570355;Add, remove or re-order any {@link PropertySource}s in this application's_environment._@param environment this application's environment_@param args arguments passed to the {@code run} method_@see #configureEnvironment(ConfigurableEnvironment, String[]);protected void configurePropertySources(ConfigurableEnvironment environment,_			String[] args) {_		MutablePropertySources sources = environment.getPropertySources()__		if (this.defaultProperties != null && !this.defaultProperties.isEmpty()) {_			sources.addLast(_					new MapPropertySource("defaultProperties", this.defaultProperties))__		}_		if (this.addCommandLineProperties && args.length > 0) {_			String name = CommandLinePropertySource.COMMAND_LINE_PROPERTY_SOURCE_NAME__			if (sources.contains(name)) {_				PropertySource<?> source = sources.get(name)__				CompositePropertySource composite = new CompositePropertySource(name)__				composite.addPropertySource(new SimpleCommandLinePropertySource(_						"springApplicationCommandLineArgs", args))__				composite.addPropertySource(source)__				sources.replace(name, composite)__			}_			else {_				sources.addFirst(new SimpleCommandLinePropertySource(args))__			}_		}_	};add,remove,or,re,order,any,link,property,source,s,in,this,application,s,environment,param,environment,this,application,s,environment,param,args,arguments,passed,to,the,code,run,method,see,configure,environment,configurable,environment,string;protected,void,configure,property,sources,configurable,environment,environment,string,args,mutable,property,sources,sources,environment,get,property,sources,if,this,default,properties,null,this,default,properties,is,empty,sources,add,last,new,map,property,source,default,properties,this,default,properties,if,this,add,command,line,properties,args,length,0,string,name,command,line,property,source,if,sources,contains,name,property,source,source,sources,get,name,composite,property,source,composite,new,composite,property,source,name,composite,add,property,source,new,simple,command,line,property,source,spring,application,command,line,args,args,composite,add,property,source,source,sources,replace,name,composite,else,sources,add,first,new,simple,command,line,property,source,args
SpringApplication -> protected void configurePropertySources(ConfigurableEnvironment environment, 			String[] args);1538707540;Add, remove or re-order any {@link PropertySource}s in this application's_environment._@param environment this application's environment_@param args arguments passed to the {@code run} method_@see #configureEnvironment(ConfigurableEnvironment, String[]);protected void configurePropertySources(ConfigurableEnvironment environment,_			String[] args) {_		MutablePropertySources sources = environment.getPropertySources()__		if (this.defaultProperties != null && !this.defaultProperties.isEmpty()) {_			sources.addLast(_					new MapPropertySource("defaultProperties", this.defaultProperties))__		}_		if (this.addCommandLineProperties && args.length > 0) {_			String name = CommandLinePropertySource.COMMAND_LINE_PROPERTY_SOURCE_NAME__			if (sources.contains(name)) {_				PropertySource<?> source = sources.get(name)__				CompositePropertySource composite = new CompositePropertySource(name)__				composite.addPropertySource(new SimpleCommandLinePropertySource(_						"springApplicationCommandLineArgs", args))__				composite.addPropertySource(source)__				sources.replace(name, composite)__			}_			else {_				sources.addFirst(new SimpleCommandLinePropertySource(args))__			}_		}_	};add,remove,or,re,order,any,link,property,source,s,in,this,application,s,environment,param,environment,this,application,s,environment,param,args,arguments,passed,to,the,code,run,method,see,configure,environment,configurable,environment,string;protected,void,configure,property,sources,configurable,environment,environment,string,args,mutable,property,sources,sources,environment,get,property,sources,if,this,default,properties,null,this,default,properties,is,empty,sources,add,last,new,map,property,source,default,properties,this,default,properties,if,this,add,command,line,properties,args,length,0,string,name,command,line,property,source,if,sources,contains,name,property,source,source,sources,get,name,composite,property,source,composite,new,composite,property,source,name,composite,add,property,source,new,simple,command,line,property,source,spring,application,command,line,args,args,composite,add,property,source,source,sources,replace,name,composite,else,sources,add,first,new,simple,command,line,property,source,args
SpringApplication -> protected void configurePropertySources(ConfigurableEnvironment environment, 			String[] args);1538750610;Add, remove or re-order any {@link PropertySource}s in this application's_environment._@param environment this application's environment_@param args arguments passed to the {@code run} method_@see #configureEnvironment(ConfigurableEnvironment, String[]);protected void configurePropertySources(ConfigurableEnvironment environment,_			String[] args) {_		MutablePropertySources sources = environment.getPropertySources()__		if (this.defaultProperties != null && !this.defaultProperties.isEmpty()) {_			sources.addLast(_					new MapPropertySource("defaultProperties", this.defaultProperties))__		}_		if (this.addCommandLineProperties && args.length > 0) {_			String name = CommandLinePropertySource.COMMAND_LINE_PROPERTY_SOURCE_NAME__			if (sources.contains(name)) {_				PropertySource<?> source = sources.get(name)__				CompositePropertySource composite = new CompositePropertySource(name)__				composite.addPropertySource(new SimpleCommandLinePropertySource(_						"springApplicationCommandLineArgs", args))__				composite.addPropertySource(source)__				sources.replace(name, composite)__			}_			else {_				sources.addFirst(new SimpleCommandLinePropertySource(args))__			}_		}_	};add,remove,or,re,order,any,link,property,source,s,in,this,application,s,environment,param,environment,this,application,s,environment,param,args,arguments,passed,to,the,code,run,method,see,configure,environment,configurable,environment,string;protected,void,configure,property,sources,configurable,environment,environment,string,args,mutable,property,sources,sources,environment,get,property,sources,if,this,default,properties,null,this,default,properties,is,empty,sources,add,last,new,map,property,source,default,properties,this,default,properties,if,this,add,command,line,properties,args,length,0,string,name,command,line,property,source,if,sources,contains,name,property,source,source,sources,get,name,composite,property,source,composite,new,composite,property,source,name,composite,add,property,source,new,simple,command,line,property,source,spring,application,command,line,args,args,composite,add,property,source,source,sources,replace,name,composite,else,sources,add,first,new,simple,command,line,property,source,args
SpringApplication -> protected void configurePropertySources(ConfigurableEnvironment environment, 			String[] args);1538771652;Add, remove or re-order any {@link PropertySource}s in this application's_environment._@param environment this application's environment_@param args arguments passed to the {@code run} method_@see #configureEnvironment(ConfigurableEnvironment, String[]);protected void configurePropertySources(ConfigurableEnvironment environment,_			String[] args) {_		MutablePropertySources sources = environment.getPropertySources()__		if (this.defaultProperties != null && !this.defaultProperties.isEmpty()) {_			sources.addLast(_					new MapPropertySource("defaultProperties", this.defaultProperties))__		}_		if (this.addCommandLineProperties && args.length > 0) {_			String name = CommandLinePropertySource.COMMAND_LINE_PROPERTY_SOURCE_NAME__			if (sources.contains(name)) {_				PropertySource<?> source = sources.get(name)__				CompositePropertySource composite = new CompositePropertySource(name)__				composite.addPropertySource(new SimpleCommandLinePropertySource(_						"springApplicationCommandLineArgs", args))__				composite.addPropertySource(source)__				sources.replace(name, composite)__			}_			else {_				sources.addFirst(new SimpleCommandLinePropertySource(args))__			}_		}_	};add,remove,or,re,order,any,link,property,source,s,in,this,application,s,environment,param,environment,this,application,s,environment,param,args,arguments,passed,to,the,code,run,method,see,configure,environment,configurable,environment,string;protected,void,configure,property,sources,configurable,environment,environment,string,args,mutable,property,sources,sources,environment,get,property,sources,if,this,default,properties,null,this,default,properties,is,empty,sources,add,last,new,map,property,source,default,properties,this,default,properties,if,this,add,command,line,properties,args,length,0,string,name,command,line,property,source,if,sources,contains,name,property,source,source,sources,get,name,composite,property,source,composite,new,composite,property,source,name,composite,add,property,source,new,simple,command,line,property,source,spring,application,command,line,args,args,composite,add,property,source,source,sources,replace,name,composite,else,sources,add,first,new,simple,command,line,property,source,args
SpringApplication -> protected void configurePropertySources(ConfigurableEnvironment environment, 			String[] args);1540419762;Add, remove or re-order any {@link PropertySource}s in this application's_environment._@param environment this application's environment_@param args arguments passed to the {@code run} method_@see #configureEnvironment(ConfigurableEnvironment, String[]);protected void configurePropertySources(ConfigurableEnvironment environment,_			String[] args) {_		MutablePropertySources sources = environment.getPropertySources()__		if (this.defaultProperties != null && !this.defaultProperties.isEmpty()) {_			sources.addLast(_					new MapPropertySource("defaultProperties", this.defaultProperties))__		}_		if (this.addCommandLineProperties && args.length > 0) {_			String name = CommandLinePropertySource.COMMAND_LINE_PROPERTY_SOURCE_NAME__			if (sources.contains(name)) {_				PropertySource<?> source = sources.get(name)__				CompositePropertySource composite = new CompositePropertySource(name)__				composite.addPropertySource(new SimpleCommandLinePropertySource(_						"springApplicationCommandLineArgs", args))__				composite.addPropertySource(source)__				sources.replace(name, composite)__			}_			else {_				sources.addFirst(new SimpleCommandLinePropertySource(args))__			}_		}_	};add,remove,or,re,order,any,link,property,source,s,in,this,application,s,environment,param,environment,this,application,s,environment,param,args,arguments,passed,to,the,code,run,method,see,configure,environment,configurable,environment,string;protected,void,configure,property,sources,configurable,environment,environment,string,args,mutable,property,sources,sources,environment,get,property,sources,if,this,default,properties,null,this,default,properties,is,empty,sources,add,last,new,map,property,source,default,properties,this,default,properties,if,this,add,command,line,properties,args,length,0,string,name,command,line,property,source,if,sources,contains,name,property,source,source,sources,get,name,composite,property,source,composite,new,composite,property,source,name,composite,add,property,source,new,simple,command,line,property,source,spring,application,command,line,args,args,composite,add,property,source,source,sources,replace,name,composite,else,sources,add,first,new,simple,command,line,property,source,args
SpringApplication -> protected void configurePropertySources(ConfigurableEnvironment environment, 			String[] args);1541060131;Add, remove or re-order any {@link PropertySource}s in this application's_environment._@param environment this application's environment_@param args arguments passed to the {@code run} method_@see #configureEnvironment(ConfigurableEnvironment, String[]);protected void configurePropertySources(ConfigurableEnvironment environment,_			String[] args) {_		MutablePropertySources sources = environment.getPropertySources()__		if (this.defaultProperties != null && !this.defaultProperties.isEmpty()) {_			sources.addLast(_					new MapPropertySource("defaultProperties", this.defaultProperties))__		}_		if (this.addCommandLineProperties && args.length > 0) {_			String name = CommandLinePropertySource.COMMAND_LINE_PROPERTY_SOURCE_NAME__			if (sources.contains(name)) {_				PropertySource<?> source = sources.get(name)__				CompositePropertySource composite = new CompositePropertySource(name)__				composite.addPropertySource(new SimpleCommandLinePropertySource(_						"springApplicationCommandLineArgs", args))__				composite.addPropertySource(source)__				sources.replace(name, composite)__			}_			else {_				sources.addFirst(new SimpleCommandLinePropertySource(args))__			}_		}_	};add,remove,or,re,order,any,link,property,source,s,in,this,application,s,environment,param,environment,this,application,s,environment,param,args,arguments,passed,to,the,code,run,method,see,configure,environment,configurable,environment,string;protected,void,configure,property,sources,configurable,environment,environment,string,args,mutable,property,sources,sources,environment,get,property,sources,if,this,default,properties,null,this,default,properties,is,empty,sources,add,last,new,map,property,source,default,properties,this,default,properties,if,this,add,command,line,properties,args,length,0,string,name,command,line,property,source,if,sources,contains,name,property,source,source,sources,get,name,composite,property,source,composite,new,composite,property,source,name,composite,add,property,source,new,simple,command,line,property,source,spring,application,command,line,args,args,composite,add,property,source,source,sources,replace,name,composite,else,sources,add,first,new,simple,command,line,property,source,args
SpringApplication -> protected void configurePropertySources(ConfigurableEnvironment environment, 			String[] args);1546943477;Add, remove or re-order any {@link PropertySource}s in this application's_environment._@param environment this application's environment_@param args arguments passed to the {@code run} method_@see #configureEnvironment(ConfigurableEnvironment, String[]);protected void configurePropertySources(ConfigurableEnvironment environment,_			String[] args) {_		MutablePropertySources sources = environment.getPropertySources()__		if (this.defaultProperties != null && !this.defaultProperties.isEmpty()) {_			sources.addLast(_					new MapPropertySource("defaultProperties", this.defaultProperties))__		}_		if (this.addCommandLineProperties && args.length > 0) {_			String name = CommandLinePropertySource.COMMAND_LINE_PROPERTY_SOURCE_NAME__			if (sources.contains(name)) {_				PropertySource<?> source = sources.get(name)__				CompositePropertySource composite = new CompositePropertySource(name)__				composite.addPropertySource(new SimpleCommandLinePropertySource(_						"springApplicationCommandLineArgs", args))__				composite.addPropertySource(source)__				sources.replace(name, composite)__			}_			else {_				sources.addFirst(new SimpleCommandLinePropertySource(args))__			}_		}_	};add,remove,or,re,order,any,link,property,source,s,in,this,application,s,environment,param,environment,this,application,s,environment,param,args,arguments,passed,to,the,code,run,method,see,configure,environment,configurable,environment,string;protected,void,configure,property,sources,configurable,environment,environment,string,args,mutable,property,sources,sources,environment,get,property,sources,if,this,default,properties,null,this,default,properties,is,empty,sources,add,last,new,map,property,source,default,properties,this,default,properties,if,this,add,command,line,properties,args,length,0,string,name,command,line,property,source,if,sources,contains,name,property,source,source,sources,get,name,composite,property,source,composite,new,composite,property,source,name,composite,add,property,source,new,simple,command,line,property,source,spring,application,command,line,args,args,composite,add,property,source,source,sources,replace,name,composite,else,sources,add,first,new,simple,command,line,property,source,args
SpringApplication -> protected void configurePropertySources(ConfigurableEnvironment environment, 			String[] args);1549791353;Add, remove or re-order any {@link PropertySource}s in this application's_environment._@param environment this application's environment_@param args arguments passed to the {@code run} method_@see #configureEnvironment(ConfigurableEnvironment, String[]);protected void configurePropertySources(ConfigurableEnvironment environment,_			String[] args) {_		MutablePropertySources sources = environment.getPropertySources()__		if (this.defaultProperties != null && !this.defaultProperties.isEmpty()) {_			sources.addLast(_					new MapPropertySource("defaultProperties", this.defaultProperties))__		}_		if (this.addCommandLineProperties && args.length > 0) {_			String name = CommandLinePropertySource.COMMAND_LINE_PROPERTY_SOURCE_NAME__			if (sources.contains(name)) {_				PropertySource<?> source = sources.get(name)__				CompositePropertySource composite = new CompositePropertySource(name)__				composite.addPropertySource(new SimpleCommandLinePropertySource(_						"springApplicationCommandLineArgs", args))__				composite.addPropertySource(source)__				sources.replace(name, composite)__			}_			else {_				sources.addFirst(new SimpleCommandLinePropertySource(args))__			}_		}_	};add,remove,or,re,order,any,link,property,source,s,in,this,application,s,environment,param,environment,this,application,s,environment,param,args,arguments,passed,to,the,code,run,method,see,configure,environment,configurable,environment,string;protected,void,configure,property,sources,configurable,environment,environment,string,args,mutable,property,sources,sources,environment,get,property,sources,if,this,default,properties,null,this,default,properties,is,empty,sources,add,last,new,map,property,source,default,properties,this,default,properties,if,this,add,command,line,properties,args,length,0,string,name,command,line,property,source,if,sources,contains,name,property,source,source,sources,get,name,composite,property,source,composite,new,composite,property,source,name,composite,add,property,source,new,simple,command,line,property,source,spring,application,command,line,args,args,composite,add,property,source,source,sources,replace,name,composite,else,sources,add,first,new,simple,command,line,property,source,args
SpringApplication -> protected void configurePropertySources(ConfigurableEnvironment environment, 			String[] args);1550148109;Add, remove or re-order any {@link PropertySource}s in this application's_environment._@param environment this application's environment_@param args arguments passed to the {@code run} method_@see #configureEnvironment(ConfigurableEnvironment, String[]);protected void configurePropertySources(ConfigurableEnvironment environment,_			String[] args) {_		MutablePropertySources sources = environment.getPropertySources()__		if (this.defaultProperties != null && !this.defaultProperties.isEmpty()) {_			sources.addLast(_					new MapPropertySource("defaultProperties", this.defaultProperties))__		}_		if (this.addCommandLineProperties && args.length > 0) {_			String name = CommandLinePropertySource.COMMAND_LINE_PROPERTY_SOURCE_NAME__			if (sources.contains(name)) {_				PropertySource<?> source = sources.get(name)__				CompositePropertySource composite = new CompositePropertySource(name)__				composite.addPropertySource(new SimpleCommandLinePropertySource(_						"springApplicationCommandLineArgs", args))__				composite.addPropertySource(source)__				sources.replace(name, composite)__			}_			else {_				sources.addFirst(new SimpleCommandLinePropertySource(args))__			}_		}_	};add,remove,or,re,order,any,link,property,source,s,in,this,application,s,environment,param,environment,this,application,s,environment,param,args,arguments,passed,to,the,code,run,method,see,configure,environment,configurable,environment,string;protected,void,configure,property,sources,configurable,environment,environment,string,args,mutable,property,sources,sources,environment,get,property,sources,if,this,default,properties,null,this,default,properties,is,empty,sources,add,last,new,map,property,source,default,properties,this,default,properties,if,this,add,command,line,properties,args,length,0,string,name,command,line,property,source,if,sources,contains,name,property,source,source,sources,get,name,composite,property,source,composite,new,composite,property,source,name,composite,add,property,source,new,simple,command,line,property,source,spring,application,command,line,args,args,composite,add,property,source,source,sources,replace,name,composite,else,sources,add,first,new,simple,command,line,property,source,args
SpringApplication -> public Set<String> getSources();1507173536;Returns a mutable set of the sources that will be added to an ApplicationContext_when {@link #run(String...)} is called._<p>_Sources set here will be used in addition to any primary sources set in the_constructor._@return the application sources._@see #SpringApplication(Class...)_@see #getAllSources();public Set<String> getSources() {_		return this.sources__	};returns,a,mutable,set,of,the,sources,that,will,be,added,to,an,application,context,when,link,run,string,is,called,p,sources,set,here,will,be,used,in,addition,to,any,primary,sources,set,in,the,constructor,return,the,application,sources,see,spring,application,class,see,get,all,sources;public,set,string,get,sources,return,this,sources
SpringApplication -> public Set<String> getSources();1509381678;Returns a mutable set of the sources that will be added to an ApplicationContext_when {@link #run(String...)} is called._<p>_Sources set here will be used in addition to any primary sources set in the_constructor._@return the application sources._@see #SpringApplication(Class...)_@see #getAllSources();public Set<String> getSources() {_		return this.sources__	};returns,a,mutable,set,of,the,sources,that,will,be,added,to,an,application,context,when,link,run,string,is,called,p,sources,set,here,will,be,used,in,addition,to,any,primary,sources,set,in,the,constructor,return,the,application,sources,see,spring,application,class,see,get,all,sources;public,set,string,get,sources,return,this,sources
SpringApplication -> public Set<String> getSources();1510995225;Returns a mutable set of the sources that will be added to an ApplicationContext_when {@link #run(String...)} is called._<p>_Sources set here will be used in addition to any primary sources set in the_constructor._@return the application sources._@see #SpringApplication(Class...)_@see #getAllSources();public Set<String> getSources() {_		return this.sources__	};returns,a,mutable,set,of,the,sources,that,will,be,added,to,an,application,context,when,link,run,string,is,called,p,sources,set,here,will,be,used,in,addition,to,any,primary,sources,set,in,the,constructor,return,the,application,sources,see,spring,application,class,see,get,all,sources;public,set,string,get,sources,return,this,sources
SpringApplication -> public Set<String> getSources();1515670013;Returns a mutable set of the sources that will be added to an ApplicationContext_when {@link #run(String...)} is called._<p>_Sources set here will be used in addition to any primary sources set in the_constructor._@return the application sources._@see #SpringApplication(Class...)_@see #getAllSources();public Set<String> getSources() {_		return this.sources__	};returns,a,mutable,set,of,the,sources,that,will,be,added,to,an,application,context,when,link,run,string,is,called,p,sources,set,here,will,be,used,in,addition,to,any,primary,sources,set,in,the,constructor,return,the,application,sources,see,spring,application,class,see,get,all,sources;public,set,string,get,sources,return,this,sources
SpringApplication -> public Set<String> getSources();1519362690;Returns a mutable set of the sources that will be added to an ApplicationContext_when {@link #run(String...)} is called._<p>_Sources set here will be used in addition to any primary sources set in the_constructor._@return the application sources._@see #SpringApplication(Class...)_@see #getAllSources();public Set<String> getSources() {_		return this.sources__	};returns,a,mutable,set,of,the,sources,that,will,be,added,to,an,application,context,when,link,run,string,is,called,p,sources,set,here,will,be,used,in,addition,to,any,primary,sources,set,in,the,constructor,return,the,application,sources,see,spring,application,class,see,get,all,sources;public,set,string,get,sources,return,this,sources
SpringApplication -> public Set<String> getSources();1522251721;Returns a mutable set of the sources that will be added to an ApplicationContext_when {@link #run(String...)} is called._<p>_Sources set here will be used in addition to any primary sources set in the_constructor._@return the application sources._@see #SpringApplication(Class...)_@see #getAllSources();public Set<String> getSources() {_		return this.sources__	};returns,a,mutable,set,of,the,sources,that,will,be,added,to,an,application,context,when,link,run,string,is,called,p,sources,set,here,will,be,used,in,addition,to,any,primary,sources,set,in,the,constructor,return,the,application,sources,see,spring,application,class,see,get,all,sources;public,set,string,get,sources,return,this,sources
SpringApplication -> public Set<String> getSources();1525376698;Returns a mutable set of the sources that will be added to an ApplicationContext_when {@link #run(String...)} is called._<p>_Sources set here will be used in addition to any primary sources set in the_constructor._@return the application sources._@see #SpringApplication(Class...)_@see #getAllSources();public Set<String> getSources() {_		return this.sources__	};returns,a,mutable,set,of,the,sources,that,will,be,added,to,an,application,context,when,link,run,string,is,called,p,sources,set,here,will,be,used,in,addition,to,any,primary,sources,set,in,the,constructor,return,the,application,sources,see,spring,application,class,see,get,all,sources;public,set,string,get,sources,return,this,sources
SpringApplication -> public Set<String> getSources();1525416882;Returns a mutable set of the sources that will be added to an ApplicationContext_when {@link #run(String...)} is called._<p>_Sources set here will be used in addition to any primary sources set in the_constructor._@return the application sources._@see #SpringApplication(Class...)_@see #getAllSources();public Set<String> getSources() {_		return this.sources__	};returns,a,mutable,set,of,the,sources,that,will,be,added,to,an,application,context,when,link,run,string,is,called,p,sources,set,here,will,be,used,in,addition,to,any,primary,sources,set,in,the,constructor,return,the,application,sources,see,spring,application,class,see,get,all,sources;public,set,string,get,sources,return,this,sources
SpringApplication -> public Set<String> getSources();1526993305;Returns a mutable set of the sources that will be added to an ApplicationContext_when {@link #run(String...)} is called._<p>_Sources set here will be used in addition to any primary sources set in the_constructor._@return the application sources._@see #SpringApplication(Class...)_@see #getAllSources();public Set<String> getSources() {_		return this.sources__	};returns,a,mutable,set,of,the,sources,that,will,be,added,to,an,application,context,when,link,run,string,is,called,p,sources,set,here,will,be,used,in,addition,to,any,primary,sources,set,in,the,constructor,return,the,application,sources,see,spring,application,class,see,get,all,sources;public,set,string,get,sources,return,this,sources
SpringApplication -> public Set<String> getSources();1529485904;Returns a mutable set of the sources that will be added to an ApplicationContext_when {@link #run(String...)} is called._<p>_Sources set here will be used in addition to any primary sources set in the_constructor._@return the application sources._@see #SpringApplication(Class...)_@see #getAllSources();public Set<String> getSources() {_		return this.sources__	};returns,a,mutable,set,of,the,sources,that,will,be,added,to,an,application,context,when,link,run,string,is,called,p,sources,set,here,will,be,used,in,addition,to,any,primary,sources,set,in,the,constructor,return,the,application,sources,see,spring,application,class,see,get,all,sources;public,set,string,get,sources,return,this,sources
SpringApplication -> public Set<String> getSources();1531140616;Returns a mutable set of the sources that will be added to an ApplicationContext_when {@link #run(String...)} is called._<p>_Sources set here will be used in addition to any primary sources set in the_constructor._@return the application sources._@see #SpringApplication(Class...)_@see #getAllSources();public Set<String> getSources() {_		return this.sources__	};returns,a,mutable,set,of,the,sources,that,will,be,added,to,an,application,context,when,link,run,string,is,called,p,sources,set,here,will,be,used,in,addition,to,any,primary,sources,set,in,the,constructor,return,the,application,sources,see,spring,application,class,see,get,all,sources;public,set,string,get,sources,return,this,sources
SpringApplication -> public Set<String> getSources();1531155529;Returns a mutable set of the sources that will be added to an ApplicationContext_when {@link #run(String...)} is called._<p>_Sources set here will be used in addition to any primary sources set in the_constructor._@return the application sources._@see #SpringApplication(Class...)_@see #getAllSources();public Set<String> getSources() {_		return this.sources__	};returns,a,mutable,set,of,the,sources,that,will,be,added,to,an,application,context,when,link,run,string,is,called,p,sources,set,here,will,be,used,in,addition,to,any,primary,sources,set,in,the,constructor,return,the,application,sources,see,spring,application,class,see,get,all,sources;public,set,string,get,sources,return,this,sources
SpringApplication -> public Set<String> getSources();1531222098;Returns a mutable set of the sources that will be added to an ApplicationContext_when {@link #run(String...)} is called._<p>_Sources set here will be used in addition to any primary sources set in the_constructor._@return the application sources._@see #SpringApplication(Class...)_@see #getAllSources();public Set<String> getSources() {_		return this.sources__	};returns,a,mutable,set,of,the,sources,that,will,be,added,to,an,application,context,when,link,run,string,is,called,p,sources,set,here,will,be,used,in,addition,to,any,primary,sources,set,in,the,constructor,return,the,application,sources,see,spring,application,class,see,get,all,sources;public,set,string,get,sources,return,this,sources
SpringApplication -> public Set<String> getSources();1532738143;Returns a mutable set of the sources that will be added to an ApplicationContext_when {@link #run(String...)} is called._<p>_Sources set here will be used in addition to any primary sources set in the_constructor._@return the application sources._@see #SpringApplication(Class...)_@see #getAllSources();public Set<String> getSources() {_		return this.sources__	};returns,a,mutable,set,of,the,sources,that,will,be,added,to,an,application,context,when,link,run,string,is,called,p,sources,set,here,will,be,used,in,addition,to,any,primary,sources,set,in,the,constructor,return,the,application,sources,see,spring,application,class,see,get,all,sources;public,set,string,get,sources,return,this,sources
SpringApplication -> public Set<String> getSources();1534188228;Returns a mutable set of the sources that will be added to an ApplicationContext_when {@link #run(String...)} is called._<p>_Sources set here will be used in addition to any primary sources set in the_constructor._@return the application sources._@see #SpringApplication(Class...)_@see #getAllSources();public Set<String> getSources() {_		return this.sources__	};returns,a,mutable,set,of,the,sources,that,will,be,added,to,an,application,context,when,link,run,string,is,called,p,sources,set,here,will,be,used,in,addition,to,any,primary,sources,set,in,the,constructor,return,the,application,sources,see,spring,application,class,see,get,all,sources;public,set,string,get,sources,return,this,sources
SpringApplication -> public Set<String> getSources();1535104170;Returns a mutable set of the sources that will be added to an ApplicationContext_when {@link #run(String...)} is called._<p>_Sources set here will be used in addition to any primary sources set in the_constructor._@return the application sources._@see #SpringApplication(Class...)_@see #getAllSources();public Set<String> getSources() {_		return this.sources__	};returns,a,mutable,set,of,the,sources,that,will,be,added,to,an,application,context,when,link,run,string,is,called,p,sources,set,here,will,be,used,in,addition,to,any,primary,sources,set,in,the,constructor,return,the,application,sources,see,spring,application,class,see,get,all,sources;public,set,string,get,sources,return,this,sources
SpringApplication -> public Set<String> getSources();1536701067;Returns a mutable set of the sources that will be added to an ApplicationContext_when {@link #run(String...)} is called._<p>_Sources set here will be used in addition to any primary sources set in the_constructor._@return the application sources._@see #SpringApplication(Class...)_@see #getAllSources();public Set<String> getSources() {_		return this.sources__	};returns,a,mutable,set,of,the,sources,that,will,be,added,to,an,application,context,when,link,run,string,is,called,p,sources,set,here,will,be,used,in,addition,to,any,primary,sources,set,in,the,constructor,return,the,application,sources,see,spring,application,class,see,get,all,sources;public,set,string,get,sources,return,this,sources
SpringApplication -> public Set<String> getSources();1538570355;Returns a mutable set of the sources that will be added to an ApplicationContext_when {@link #run(String...)} is called._<p>_Sources set here will be used in addition to any primary sources set in the_constructor._@return the application sources._@see #SpringApplication(Class...)_@see #getAllSources();public Set<String> getSources() {_		return this.sources__	};returns,a,mutable,set,of,the,sources,that,will,be,added,to,an,application,context,when,link,run,string,is,called,p,sources,set,here,will,be,used,in,addition,to,any,primary,sources,set,in,the,constructor,return,the,application,sources,see,spring,application,class,see,get,all,sources;public,set,string,get,sources,return,this,sources
SpringApplication -> public Set<String> getSources();1538707540;Returns a mutable set of the sources that will be added to an ApplicationContext_when {@link #run(String...)} is called._<p>_Sources set here will be used in addition to any primary sources set in the_constructor._@return the application sources._@see #SpringApplication(Class...)_@see #getAllSources();public Set<String> getSources() {_		return this.sources__	};returns,a,mutable,set,of,the,sources,that,will,be,added,to,an,application,context,when,link,run,string,is,called,p,sources,set,here,will,be,used,in,addition,to,any,primary,sources,set,in,the,constructor,return,the,application,sources,see,spring,application,class,see,get,all,sources;public,set,string,get,sources,return,this,sources
SpringApplication -> public Set<String> getSources();1538750610;Returns a mutable set of the sources that will be added to an ApplicationContext_when {@link #run(String...)} is called._<p>_Sources set here will be used in addition to any primary sources set in the_constructor._@return the application sources._@see #SpringApplication(Class...)_@see #getAllSources();public Set<String> getSources() {_		return this.sources__	};returns,a,mutable,set,of,the,sources,that,will,be,added,to,an,application,context,when,link,run,string,is,called,p,sources,set,here,will,be,used,in,addition,to,any,primary,sources,set,in,the,constructor,return,the,application,sources,see,spring,application,class,see,get,all,sources;public,set,string,get,sources,return,this,sources
SpringApplication -> public Set<String> getSources();1538771652;Returns a mutable set of the sources that will be added to an ApplicationContext_when {@link #run(String...)} is called._<p>_Sources set here will be used in addition to any primary sources set in the_constructor._@return the application sources._@see #SpringApplication(Class...)_@see #getAllSources();public Set<String> getSources() {_		return this.sources__	};returns,a,mutable,set,of,the,sources,that,will,be,added,to,an,application,context,when,link,run,string,is,called,p,sources,set,here,will,be,used,in,addition,to,any,primary,sources,set,in,the,constructor,return,the,application,sources,see,spring,application,class,see,get,all,sources;public,set,string,get,sources,return,this,sources
SpringApplication -> public Set<String> getSources();1540419762;Returns a mutable set of the sources that will be added to an ApplicationContext_when {@link #run(String...)} is called._<p>_Sources set here will be used in addition to any primary sources set in the_constructor._@return the application sources._@see #SpringApplication(Class...)_@see #getAllSources();public Set<String> getSources() {_		return this.sources__	};returns,a,mutable,set,of,the,sources,that,will,be,added,to,an,application,context,when,link,run,string,is,called,p,sources,set,here,will,be,used,in,addition,to,any,primary,sources,set,in,the,constructor,return,the,application,sources,see,spring,application,class,see,get,all,sources;public,set,string,get,sources,return,this,sources
SpringApplication -> public Set<String> getSources();1541060131;Returns a mutable set of the sources that will be added to an ApplicationContext_when {@link #run(String...)} is called._<p>_Sources set here will be used in addition to any primary sources set in the_constructor._@return the application sources._@see #SpringApplication(Class...)_@see #getAllSources();public Set<String> getSources() {_		return this.sources__	};returns,a,mutable,set,of,the,sources,that,will,be,added,to,an,application,context,when,link,run,string,is,called,p,sources,set,here,will,be,used,in,addition,to,any,primary,sources,set,in,the,constructor,return,the,application,sources,see,spring,application,class,see,get,all,sources;public,set,string,get,sources,return,this,sources
SpringApplication -> public Set<String> getSources();1546943477;Returns a mutable set of the sources that will be added to an ApplicationContext_when {@link #run(String...)} is called._<p>_Sources set here will be used in addition to any primary sources set in the_constructor._@return the application sources._@see #SpringApplication(Class...)_@see #getAllSources();public Set<String> getSources() {_		return this.sources__	};returns,a,mutable,set,of,the,sources,that,will,be,added,to,an,application,context,when,link,run,string,is,called,p,sources,set,here,will,be,used,in,addition,to,any,primary,sources,set,in,the,constructor,return,the,application,sources,see,spring,application,class,see,get,all,sources;public,set,string,get,sources,return,this,sources
SpringApplication -> public Set<String> getSources();1549791353;Returns a mutable set of the sources that will be added to an ApplicationContext_when {@link #run(String...)} is called._<p>_Sources set here will be used in addition to any primary sources set in the_constructor._@return the application sources._@see #SpringApplication(Class...)_@see #getAllSources();public Set<String> getSources() {_		return this.sources__	};returns,a,mutable,set,of,the,sources,that,will,be,added,to,an,application,context,when,link,run,string,is,called,p,sources,set,here,will,be,used,in,addition,to,any,primary,sources,set,in,the,constructor,return,the,application,sources,see,spring,application,class,see,get,all,sources;public,set,string,get,sources,return,this,sources
SpringApplication -> public Set<String> getSources();1550148109;Returns a mutable set of the sources that will be added to an ApplicationContext_when {@link #run(String...)} is called._<p>_Sources set here will be used in addition to any primary sources set in the_constructor._@return the application sources._@see #SpringApplication(Class...)_@see #getAllSources();public Set<String> getSources() {_		return this.sources__	};returns,a,mutable,set,of,the,sources,that,will,be,added,to,an,application,context,when,link,run,string,is,called,p,sources,set,here,will,be,used,in,addition,to,any,primary,sources,set,in,the,constructor,return,the,application,sources,see,spring,application,class,see,get,all,sources;public,set,string,get,sources,return,this,sources
SpringApplication -> protected void bindToSpringApplication(ConfigurableEnvironment environment);1507173536;Bind the environment to the {@link SpringApplication}._@param environment the environment to bind;protected void bindToSpringApplication(ConfigurableEnvironment environment) {_		try {_			Binder.get(environment).bind("spring.main", Bindable.ofInstance(this))__		}_		catch (Exception ex) {_			throw new IllegalStateException("Cannot bind to SpringApplication", ex)__		}_	};bind,the,environment,to,the,link,spring,application,param,environment,the,environment,to,bind;protected,void,bind,to,spring,application,configurable,environment,environment,try,binder,get,environment,bind,spring,main,bindable,of,instance,this,catch,exception,ex,throw,new,illegal,state,exception,cannot,bind,to,spring,application,ex
SpringApplication -> protected void bindToSpringApplication(ConfigurableEnvironment environment);1509381678;Bind the environment to the {@link SpringApplication}._@param environment the environment to bind;protected void bindToSpringApplication(ConfigurableEnvironment environment) {_		try {_			Binder.get(environment).bind("spring.main", Bindable.ofInstance(this))__		}_		catch (Exception ex) {_			throw new IllegalStateException("Cannot bind to SpringApplication", ex)__		}_	};bind,the,environment,to,the,link,spring,application,param,environment,the,environment,to,bind;protected,void,bind,to,spring,application,configurable,environment,environment,try,binder,get,environment,bind,spring,main,bindable,of,instance,this,catch,exception,ex,throw,new,illegal,state,exception,cannot,bind,to,spring,application,ex
SpringApplication -> protected void bindToSpringApplication(ConfigurableEnvironment environment);1510995225;Bind the environment to the {@link SpringApplication}._@param environment the environment to bind;protected void bindToSpringApplication(ConfigurableEnvironment environment) {_		try {_			Binder.get(environment).bind("spring.main", Bindable.ofInstance(this))__		}_		catch (Exception ex) {_			throw new IllegalStateException("Cannot bind to SpringApplication", ex)__		}_	};bind,the,environment,to,the,link,spring,application,param,environment,the,environment,to,bind;protected,void,bind,to,spring,application,configurable,environment,environment,try,binder,get,environment,bind,spring,main,bindable,of,instance,this,catch,exception,ex,throw,new,illegal,state,exception,cannot,bind,to,spring,application,ex
SpringApplication -> protected void bindToSpringApplication(ConfigurableEnvironment environment);1515670013;Bind the environment to the {@link SpringApplication}._@param environment the environment to bind;protected void bindToSpringApplication(ConfigurableEnvironment environment) {_		try {_			Binder.get(environment).bind("spring.main", Bindable.ofInstance(this))__		}_		catch (Exception ex) {_			throw new IllegalStateException("Cannot bind to SpringApplication", ex)__		}_	};bind,the,environment,to,the,link,spring,application,param,environment,the,environment,to,bind;protected,void,bind,to,spring,application,configurable,environment,environment,try,binder,get,environment,bind,spring,main,bindable,of,instance,this,catch,exception,ex,throw,new,illegal,state,exception,cannot,bind,to,spring,application,ex
SpringApplication -> protected void bindToSpringApplication(ConfigurableEnvironment environment);1519362690;Bind the environment to the {@link SpringApplication}._@param environment the environment to bind;protected void bindToSpringApplication(ConfigurableEnvironment environment) {_		try {_			Binder.get(environment).bind("spring.main", Bindable.ofInstance(this))__		}_		catch (Exception ex) {_			throw new IllegalStateException("Cannot bind to SpringApplication", ex)__		}_	};bind,the,environment,to,the,link,spring,application,param,environment,the,environment,to,bind;protected,void,bind,to,spring,application,configurable,environment,environment,try,binder,get,environment,bind,spring,main,bindable,of,instance,this,catch,exception,ex,throw,new,illegal,state,exception,cannot,bind,to,spring,application,ex
SpringApplication -> protected void bindToSpringApplication(ConfigurableEnvironment environment);1522251721;Bind the environment to the {@link SpringApplication}._@param environment the environment to bind;protected void bindToSpringApplication(ConfigurableEnvironment environment) {_		try {_			Binder.get(environment).bind("spring.main", Bindable.ofInstance(this))__		}_		catch (Exception ex) {_			throw new IllegalStateException("Cannot bind to SpringApplication", ex)__		}_	};bind,the,environment,to,the,link,spring,application,param,environment,the,environment,to,bind;protected,void,bind,to,spring,application,configurable,environment,environment,try,binder,get,environment,bind,spring,main,bindable,of,instance,this,catch,exception,ex,throw,new,illegal,state,exception,cannot,bind,to,spring,application,ex
SpringApplication -> protected void bindToSpringApplication(ConfigurableEnvironment environment);1525376698;Bind the environment to the {@link SpringApplication}._@param environment the environment to bind;protected void bindToSpringApplication(ConfigurableEnvironment environment) {_		try {_			Binder.get(environment).bind("spring.main", Bindable.ofInstance(this))__		}_		catch (Exception ex) {_			throw new IllegalStateException("Cannot bind to SpringApplication", ex)__		}_	};bind,the,environment,to,the,link,spring,application,param,environment,the,environment,to,bind;protected,void,bind,to,spring,application,configurable,environment,environment,try,binder,get,environment,bind,spring,main,bindable,of,instance,this,catch,exception,ex,throw,new,illegal,state,exception,cannot,bind,to,spring,application,ex
SpringApplication -> protected void bindToSpringApplication(ConfigurableEnvironment environment);1525416882;Bind the environment to the {@link SpringApplication}._@param environment the environment to bind;protected void bindToSpringApplication(ConfigurableEnvironment environment) {_		try {_			Binder.get(environment).bind("spring.main", Bindable.ofInstance(this))__		}_		catch (Exception ex) {_			throw new IllegalStateException("Cannot bind to SpringApplication", ex)__		}_	};bind,the,environment,to,the,link,spring,application,param,environment,the,environment,to,bind;protected,void,bind,to,spring,application,configurable,environment,environment,try,binder,get,environment,bind,spring,main,bindable,of,instance,this,catch,exception,ex,throw,new,illegal,state,exception,cannot,bind,to,spring,application,ex
SpringApplication -> protected void bindToSpringApplication(ConfigurableEnvironment environment);1526993305;Bind the environment to the {@link SpringApplication}._@param environment the environment to bind;protected void bindToSpringApplication(ConfigurableEnvironment environment) {_		try {_			Binder.get(environment).bind("spring.main", Bindable.ofInstance(this))__		}_		catch (Exception ex) {_			throw new IllegalStateException("Cannot bind to SpringApplication", ex)__		}_	};bind,the,environment,to,the,link,spring,application,param,environment,the,environment,to,bind;protected,void,bind,to,spring,application,configurable,environment,environment,try,binder,get,environment,bind,spring,main,bindable,of,instance,this,catch,exception,ex,throw,new,illegal,state,exception,cannot,bind,to,spring,application,ex
SpringApplication -> protected void bindToSpringApplication(ConfigurableEnvironment environment);1529485904;Bind the environment to the {@link SpringApplication}._@param environment the environment to bind;protected void bindToSpringApplication(ConfigurableEnvironment environment) {_		try {_			Binder.get(environment).bind("spring.main", Bindable.ofInstance(this))__		}_		catch (Exception ex) {_			throw new IllegalStateException("Cannot bind to SpringApplication", ex)__		}_	};bind,the,environment,to,the,link,spring,application,param,environment,the,environment,to,bind;protected,void,bind,to,spring,application,configurable,environment,environment,try,binder,get,environment,bind,spring,main,bindable,of,instance,this,catch,exception,ex,throw,new,illegal,state,exception,cannot,bind,to,spring,application,ex
SpringApplication -> protected void bindToSpringApplication(ConfigurableEnvironment environment);1531140616;Bind the environment to the {@link SpringApplication}._@param environment the environment to bind;protected void bindToSpringApplication(ConfigurableEnvironment environment) {_		try {_			Binder.get(environment).bind("spring.main", Bindable.ofInstance(this))__		}_		catch (Exception ex) {_			throw new IllegalStateException("Cannot bind to SpringApplication", ex)__		}_	};bind,the,environment,to,the,link,spring,application,param,environment,the,environment,to,bind;protected,void,bind,to,spring,application,configurable,environment,environment,try,binder,get,environment,bind,spring,main,bindable,of,instance,this,catch,exception,ex,throw,new,illegal,state,exception,cannot,bind,to,spring,application,ex
SpringApplication -> protected void bindToSpringApplication(ConfigurableEnvironment environment);1531155529;Bind the environment to the {@link SpringApplication}._@param environment the environment to bind;protected void bindToSpringApplication(ConfigurableEnvironment environment) {_		try {_			Binder.get(environment).bind("spring.main", Bindable.ofInstance(this))__		}_		catch (Exception ex) {_			throw new IllegalStateException("Cannot bind to SpringApplication", ex)__		}_	};bind,the,environment,to,the,link,spring,application,param,environment,the,environment,to,bind;protected,void,bind,to,spring,application,configurable,environment,environment,try,binder,get,environment,bind,spring,main,bindable,of,instance,this,catch,exception,ex,throw,new,illegal,state,exception,cannot,bind,to,spring,application,ex
SpringApplication -> protected void bindToSpringApplication(ConfigurableEnvironment environment);1531222098;Bind the environment to the {@link SpringApplication}._@param environment the environment to bind;protected void bindToSpringApplication(ConfigurableEnvironment environment) {_		try {_			Binder.get(environment).bind("spring.main", Bindable.ofInstance(this))__		}_		catch (Exception ex) {_			throw new IllegalStateException("Cannot bind to SpringApplication", ex)__		}_	};bind,the,environment,to,the,link,spring,application,param,environment,the,environment,to,bind;protected,void,bind,to,spring,application,configurable,environment,environment,try,binder,get,environment,bind,spring,main,bindable,of,instance,this,catch,exception,ex,throw,new,illegal,state,exception,cannot,bind,to,spring,application,ex
SpringApplication -> protected void bindToSpringApplication(ConfigurableEnvironment environment);1532738143;Bind the environment to the {@link SpringApplication}._@param environment the environment to bind;protected void bindToSpringApplication(ConfigurableEnvironment environment) {_		try {_			Binder.get(environment).bind("spring.main", Bindable.ofInstance(this))__		}_		catch (Exception ex) {_			throw new IllegalStateException("Cannot bind to SpringApplication", ex)__		}_	};bind,the,environment,to,the,link,spring,application,param,environment,the,environment,to,bind;protected,void,bind,to,spring,application,configurable,environment,environment,try,binder,get,environment,bind,spring,main,bindable,of,instance,this,catch,exception,ex,throw,new,illegal,state,exception,cannot,bind,to,spring,application,ex
SpringApplication -> protected void bindToSpringApplication(ConfigurableEnvironment environment);1534188228;Bind the environment to the {@link SpringApplication}._@param environment the environment to bind;protected void bindToSpringApplication(ConfigurableEnvironment environment) {_		try {_			Binder.get(environment).bind("spring.main", Bindable.ofInstance(this))__		}_		catch (Exception ex) {_			throw new IllegalStateException("Cannot bind to SpringApplication", ex)__		}_	};bind,the,environment,to,the,link,spring,application,param,environment,the,environment,to,bind;protected,void,bind,to,spring,application,configurable,environment,environment,try,binder,get,environment,bind,spring,main,bindable,of,instance,this,catch,exception,ex,throw,new,illegal,state,exception,cannot,bind,to,spring,application,ex
SpringApplication -> protected void bindToSpringApplication(ConfigurableEnvironment environment);1535104170;Bind the environment to the {@link SpringApplication}._@param environment the environment to bind;protected void bindToSpringApplication(ConfigurableEnvironment environment) {_		try {_			Binder.get(environment).bind("spring.main", Bindable.ofInstance(this))__		}_		catch (Exception ex) {_			throw new IllegalStateException("Cannot bind to SpringApplication", ex)__		}_	};bind,the,environment,to,the,link,spring,application,param,environment,the,environment,to,bind;protected,void,bind,to,spring,application,configurable,environment,environment,try,binder,get,environment,bind,spring,main,bindable,of,instance,this,catch,exception,ex,throw,new,illegal,state,exception,cannot,bind,to,spring,application,ex
SpringApplication -> protected void bindToSpringApplication(ConfigurableEnvironment environment);1536701067;Bind the environment to the {@link SpringApplication}._@param environment the environment to bind;protected void bindToSpringApplication(ConfigurableEnvironment environment) {_		try {_			Binder.get(environment).bind("spring.main", Bindable.ofInstance(this))__		}_		catch (Exception ex) {_			throw new IllegalStateException("Cannot bind to SpringApplication", ex)__		}_	};bind,the,environment,to,the,link,spring,application,param,environment,the,environment,to,bind;protected,void,bind,to,spring,application,configurable,environment,environment,try,binder,get,environment,bind,spring,main,bindable,of,instance,this,catch,exception,ex,throw,new,illegal,state,exception,cannot,bind,to,spring,application,ex
SpringApplication -> protected void bindToSpringApplication(ConfigurableEnvironment environment);1538570355;Bind the environment to the {@link SpringApplication}._@param environment the environment to bind;protected void bindToSpringApplication(ConfigurableEnvironment environment) {_		try {_			Binder.get(environment).bind("spring.main", Bindable.ofInstance(this))__		}_		catch (Exception ex) {_			throw new IllegalStateException("Cannot bind to SpringApplication", ex)__		}_	};bind,the,environment,to,the,link,spring,application,param,environment,the,environment,to,bind;protected,void,bind,to,spring,application,configurable,environment,environment,try,binder,get,environment,bind,spring,main,bindable,of,instance,this,catch,exception,ex,throw,new,illegal,state,exception,cannot,bind,to,spring,application,ex
SpringApplication -> protected void bindToSpringApplication(ConfigurableEnvironment environment);1538707540;Bind the environment to the {@link SpringApplication}._@param environment the environment to bind;protected void bindToSpringApplication(ConfigurableEnvironment environment) {_		try {_			Binder.get(environment).bind("spring.main", Bindable.ofInstance(this))__		}_		catch (Exception ex) {_			throw new IllegalStateException("Cannot bind to SpringApplication", ex)__		}_	};bind,the,environment,to,the,link,spring,application,param,environment,the,environment,to,bind;protected,void,bind,to,spring,application,configurable,environment,environment,try,binder,get,environment,bind,spring,main,bindable,of,instance,this,catch,exception,ex,throw,new,illegal,state,exception,cannot,bind,to,spring,application,ex
SpringApplication -> protected void bindToSpringApplication(ConfigurableEnvironment environment);1538750610;Bind the environment to the {@link SpringApplication}._@param environment the environment to bind;protected void bindToSpringApplication(ConfigurableEnvironment environment) {_		try {_			Binder.get(environment).bind("spring.main", Bindable.ofInstance(this))__		}_		catch (Exception ex) {_			throw new IllegalStateException("Cannot bind to SpringApplication", ex)__		}_	};bind,the,environment,to,the,link,spring,application,param,environment,the,environment,to,bind;protected,void,bind,to,spring,application,configurable,environment,environment,try,binder,get,environment,bind,spring,main,bindable,of,instance,this,catch,exception,ex,throw,new,illegal,state,exception,cannot,bind,to,spring,application,ex
SpringApplication -> protected void bindToSpringApplication(ConfigurableEnvironment environment);1538771652;Bind the environment to the {@link SpringApplication}._@param environment the environment to bind;protected void bindToSpringApplication(ConfigurableEnvironment environment) {_		try {_			Binder.get(environment).bind("spring.main", Bindable.ofInstance(this))__		}_		catch (Exception ex) {_			throw new IllegalStateException("Cannot bind to SpringApplication", ex)__		}_	};bind,the,environment,to,the,link,spring,application,param,environment,the,environment,to,bind;protected,void,bind,to,spring,application,configurable,environment,environment,try,binder,get,environment,bind,spring,main,bindable,of,instance,this,catch,exception,ex,throw,new,illegal,state,exception,cannot,bind,to,spring,application,ex
SpringApplication -> protected void bindToSpringApplication(ConfigurableEnvironment environment);1540419762;Bind the environment to the {@link SpringApplication}._@param environment the environment to bind;protected void bindToSpringApplication(ConfigurableEnvironment environment) {_		try {_			Binder.get(environment).bind("spring.main", Bindable.ofInstance(this))__		}_		catch (Exception ex) {_			throw new IllegalStateException("Cannot bind to SpringApplication", ex)__		}_	};bind,the,environment,to,the,link,spring,application,param,environment,the,environment,to,bind;protected,void,bind,to,spring,application,configurable,environment,environment,try,binder,get,environment,bind,spring,main,bindable,of,instance,this,catch,exception,ex,throw,new,illegal,state,exception,cannot,bind,to,spring,application,ex
SpringApplication -> protected void bindToSpringApplication(ConfigurableEnvironment environment);1541060131;Bind the environment to the {@link SpringApplication}._@param environment the environment to bind;protected void bindToSpringApplication(ConfigurableEnvironment environment) {_		try {_			Binder.get(environment).bind("spring.main", Bindable.ofInstance(this))__		}_		catch (Exception ex) {_			throw new IllegalStateException("Cannot bind to SpringApplication", ex)__		}_	};bind,the,environment,to,the,link,spring,application,param,environment,the,environment,to,bind;protected,void,bind,to,spring,application,configurable,environment,environment,try,binder,get,environment,bind,spring,main,bindable,of,instance,this,catch,exception,ex,throw,new,illegal,state,exception,cannot,bind,to,spring,application,ex
SpringApplication -> protected void bindToSpringApplication(ConfigurableEnvironment environment);1546943477;Bind the environment to the {@link SpringApplication}._@param environment the environment to bind;protected void bindToSpringApplication(ConfigurableEnvironment environment) {_		try {_			Binder.get(environment).bind("spring.main", Bindable.ofInstance(this))__		}_		catch (Exception ex) {_			throw new IllegalStateException("Cannot bind to SpringApplication", ex)__		}_	};bind,the,environment,to,the,link,spring,application,param,environment,the,environment,to,bind;protected,void,bind,to,spring,application,configurable,environment,environment,try,binder,get,environment,bind,spring,main,bindable,of,instance,this,catch,exception,ex,throw,new,illegal,state,exception,cannot,bind,to,spring,application,ex
SpringApplication -> protected void bindToSpringApplication(ConfigurableEnvironment environment);1549791353;Bind the environment to the {@link SpringApplication}._@param environment the environment to bind;protected void bindToSpringApplication(ConfigurableEnvironment environment) {_		try {_			Binder.get(environment).bind("spring.main", Bindable.ofInstance(this))__		}_		catch (Exception ex) {_			throw new IllegalStateException("Cannot bind to SpringApplication", ex)__		}_	};bind,the,environment,to,the,link,spring,application,param,environment,the,environment,to,bind;protected,void,bind,to,spring,application,configurable,environment,environment,try,binder,get,environment,bind,spring,main,bindable,of,instance,this,catch,exception,ex,throw,new,illegal,state,exception,cannot,bind,to,spring,application,ex
SpringApplication -> protected void bindToSpringApplication(ConfigurableEnvironment environment);1550148109;Bind the environment to the {@link SpringApplication}._@param environment the environment to bind;protected void bindToSpringApplication(ConfigurableEnvironment environment) {_		try {_			Binder.get(environment).bind("spring.main", Bindable.ofInstance(this))__		}_		catch (Exception ex) {_			throw new IllegalStateException("Cannot bind to SpringApplication", ex)__		}_	};bind,the,environment,to,the,link,spring,application,param,environment,the,environment,to,bind;protected,void,bind,to,spring,application,configurable,environment,environment,try,binder,get,environment,bind,spring,main,bindable,of,instance,this,catch,exception,ex,throw,new,illegal,state,exception,cannot,bind,to,spring,application,ex
SpringApplication -> @SuppressWarnings({ "rawtypes", "unchecked" }) 	protected void applyInitializers(ConfigurableApplicationContext context);1507173536;Apply any {@link ApplicationContextInitializer}s to the context before it is_refreshed._@param context the configured ApplicationContext (not refreshed yet)_@see ConfigurableApplicationContext#refresh();@SuppressWarnings({ "rawtypes", "unchecked" })_	protected void applyInitializers(ConfigurableApplicationContext context) {_		for (ApplicationContextInitializer initializer : getInitializers()) {_			Class<?> requiredType = GenericTypeResolver.resolveTypeArgument(_					initializer.getClass(), ApplicationContextInitializer.class)__			Assert.isInstanceOf(requiredType, context, "Unable to call initializer.")__			initializer.initialize(context)__		}_	};apply,any,link,application,context,initializer,s,to,the,context,before,it,is,refreshed,param,context,the,configured,application,context,not,refreshed,yet,see,configurable,application,context,refresh;suppress,warnings,rawtypes,unchecked,protected,void,apply,initializers,configurable,application,context,context,for,application,context,initializer,initializer,get,initializers,class,required,type,generic,type,resolver,resolve,type,argument,initializer,get,class,application,context,initializer,class,assert,is,instance,of,required,type,context,unable,to,call,initializer,initializer,initialize,context
SpringApplication -> @SuppressWarnings({ "rawtypes", "unchecked" }) 	protected void applyInitializers(ConfigurableApplicationContext context);1509381678;Apply any {@link ApplicationContextInitializer}s to the context before it is_refreshed._@param context the configured ApplicationContext (not refreshed yet)_@see ConfigurableApplicationContext#refresh();@SuppressWarnings({ "rawtypes", "unchecked" })_	protected void applyInitializers(ConfigurableApplicationContext context) {_		for (ApplicationContextInitializer initializer : getInitializers()) {_			Class<?> requiredType = GenericTypeResolver.resolveTypeArgument(_					initializer.getClass(), ApplicationContextInitializer.class)__			Assert.isInstanceOf(requiredType, context, "Unable to call initializer.")__			initializer.initialize(context)__		}_	};apply,any,link,application,context,initializer,s,to,the,context,before,it,is,refreshed,param,context,the,configured,application,context,not,refreshed,yet,see,configurable,application,context,refresh;suppress,warnings,rawtypes,unchecked,protected,void,apply,initializers,configurable,application,context,context,for,application,context,initializer,initializer,get,initializers,class,required,type,generic,type,resolver,resolve,type,argument,initializer,get,class,application,context,initializer,class,assert,is,instance,of,required,type,context,unable,to,call,initializer,initializer,initialize,context
SpringApplication -> @SuppressWarnings({ "rawtypes", "unchecked" }) 	protected void applyInitializers(ConfigurableApplicationContext context);1510995225;Apply any {@link ApplicationContextInitializer}s to the context before it is_refreshed._@param context the configured ApplicationContext (not refreshed yet)_@see ConfigurableApplicationContext#refresh();@SuppressWarnings({ "rawtypes", "unchecked" })_	protected void applyInitializers(ConfigurableApplicationContext context) {_		for (ApplicationContextInitializer initializer : getInitializers()) {_			Class<?> requiredType = GenericTypeResolver.resolveTypeArgument(_					initializer.getClass(), ApplicationContextInitializer.class)__			Assert.isInstanceOf(requiredType, context, "Unable to call initializer.")__			initializer.initialize(context)__		}_	};apply,any,link,application,context,initializer,s,to,the,context,before,it,is,refreshed,param,context,the,configured,application,context,not,refreshed,yet,see,configurable,application,context,refresh;suppress,warnings,rawtypes,unchecked,protected,void,apply,initializers,configurable,application,context,context,for,application,context,initializer,initializer,get,initializers,class,required,type,generic,type,resolver,resolve,type,argument,initializer,get,class,application,context,initializer,class,assert,is,instance,of,required,type,context,unable,to,call,initializer,initializer,initialize,context
SpringApplication -> @SuppressWarnings({ "rawtypes", "unchecked" }) 	protected void applyInitializers(ConfigurableApplicationContext context);1515670013;Apply any {@link ApplicationContextInitializer}s to the context before it is_refreshed._@param context the configured ApplicationContext (not refreshed yet)_@see ConfigurableApplicationContext#refresh();@SuppressWarnings({ "rawtypes", "unchecked" })_	protected void applyInitializers(ConfigurableApplicationContext context) {_		for (ApplicationContextInitializer initializer : getInitializers()) {_			Class<?> requiredType = GenericTypeResolver.resolveTypeArgument(_					initializer.getClass(), ApplicationContextInitializer.class)__			Assert.isInstanceOf(requiredType, context, "Unable to call initializer.")__			initializer.initialize(context)__		}_	};apply,any,link,application,context,initializer,s,to,the,context,before,it,is,refreshed,param,context,the,configured,application,context,not,refreshed,yet,see,configurable,application,context,refresh;suppress,warnings,rawtypes,unchecked,protected,void,apply,initializers,configurable,application,context,context,for,application,context,initializer,initializer,get,initializers,class,required,type,generic,type,resolver,resolve,type,argument,initializer,get,class,application,context,initializer,class,assert,is,instance,of,required,type,context,unable,to,call,initializer,initializer,initialize,context
SpringApplication -> @SuppressWarnings({ "rawtypes", "unchecked" }) 	protected void applyInitializers(ConfigurableApplicationContext context);1519362690;Apply any {@link ApplicationContextInitializer}s to the context before it is_refreshed._@param context the configured ApplicationContext (not refreshed yet)_@see ConfigurableApplicationContext#refresh();@SuppressWarnings({ "rawtypes", "unchecked" })_	protected void applyInitializers(ConfigurableApplicationContext context) {_		for (ApplicationContextInitializer initializer : getInitializers()) {_			Class<?> requiredType = GenericTypeResolver.resolveTypeArgument(_					initializer.getClass(), ApplicationContextInitializer.class)__			Assert.isInstanceOf(requiredType, context, "Unable to call initializer.")__			initializer.initialize(context)__		}_	};apply,any,link,application,context,initializer,s,to,the,context,before,it,is,refreshed,param,context,the,configured,application,context,not,refreshed,yet,see,configurable,application,context,refresh;suppress,warnings,rawtypes,unchecked,protected,void,apply,initializers,configurable,application,context,context,for,application,context,initializer,initializer,get,initializers,class,required,type,generic,type,resolver,resolve,type,argument,initializer,get,class,application,context,initializer,class,assert,is,instance,of,required,type,context,unable,to,call,initializer,initializer,initialize,context
SpringApplication -> @SuppressWarnings({ "rawtypes", "unchecked" }) 	protected void applyInitializers(ConfigurableApplicationContext context);1522251721;Apply any {@link ApplicationContextInitializer}s to the context before it is_refreshed._@param context the configured ApplicationContext (not refreshed yet)_@see ConfigurableApplicationContext#refresh();@SuppressWarnings({ "rawtypes", "unchecked" })_	protected void applyInitializers(ConfigurableApplicationContext context) {_		for (ApplicationContextInitializer initializer : getInitializers()) {_			Class<?> requiredType = GenericTypeResolver.resolveTypeArgument(_					initializer.getClass(), ApplicationContextInitializer.class)__			Assert.isInstanceOf(requiredType, context, "Unable to call initializer.")__			initializer.initialize(context)__		}_	};apply,any,link,application,context,initializer,s,to,the,context,before,it,is,refreshed,param,context,the,configured,application,context,not,refreshed,yet,see,configurable,application,context,refresh;suppress,warnings,rawtypes,unchecked,protected,void,apply,initializers,configurable,application,context,context,for,application,context,initializer,initializer,get,initializers,class,required,type,generic,type,resolver,resolve,type,argument,initializer,get,class,application,context,initializer,class,assert,is,instance,of,required,type,context,unable,to,call,initializer,initializer,initialize,context
SpringApplication -> @SuppressWarnings({ "rawtypes", "unchecked" }) 	protected void applyInitializers(ConfigurableApplicationContext context);1525376698;Apply any {@link ApplicationContextInitializer}s to the context before it is_refreshed._@param context the configured ApplicationContext (not refreshed yet)_@see ConfigurableApplicationContext#refresh();@SuppressWarnings({ "rawtypes", "unchecked" })_	protected void applyInitializers(ConfigurableApplicationContext context) {_		for (ApplicationContextInitializer initializer : getInitializers()) {_			Class<?> requiredType = GenericTypeResolver.resolveTypeArgument(_					initializer.getClass(), ApplicationContextInitializer.class)__			Assert.isInstanceOf(requiredType, context, "Unable to call initializer.")__			initializer.initialize(context)__		}_	};apply,any,link,application,context,initializer,s,to,the,context,before,it,is,refreshed,param,context,the,configured,application,context,not,refreshed,yet,see,configurable,application,context,refresh;suppress,warnings,rawtypes,unchecked,protected,void,apply,initializers,configurable,application,context,context,for,application,context,initializer,initializer,get,initializers,class,required,type,generic,type,resolver,resolve,type,argument,initializer,get,class,application,context,initializer,class,assert,is,instance,of,required,type,context,unable,to,call,initializer,initializer,initialize,context
SpringApplication -> @SuppressWarnings({ "rawtypes", "unchecked" }) 	protected void applyInitializers(ConfigurableApplicationContext context);1525416882;Apply any {@link ApplicationContextInitializer}s to the context before it is_refreshed._@param context the configured ApplicationContext (not refreshed yet)_@see ConfigurableApplicationContext#refresh();@SuppressWarnings({ "rawtypes", "unchecked" })_	protected void applyInitializers(ConfigurableApplicationContext context) {_		for (ApplicationContextInitializer initializer : getInitializers()) {_			Class<?> requiredType = GenericTypeResolver.resolveTypeArgument(_					initializer.getClass(), ApplicationContextInitializer.class)__			Assert.isInstanceOf(requiredType, context, "Unable to call initializer.")__			initializer.initialize(context)__		}_	};apply,any,link,application,context,initializer,s,to,the,context,before,it,is,refreshed,param,context,the,configured,application,context,not,refreshed,yet,see,configurable,application,context,refresh;suppress,warnings,rawtypes,unchecked,protected,void,apply,initializers,configurable,application,context,context,for,application,context,initializer,initializer,get,initializers,class,required,type,generic,type,resolver,resolve,type,argument,initializer,get,class,application,context,initializer,class,assert,is,instance,of,required,type,context,unable,to,call,initializer,initializer,initialize,context
SpringApplication -> @SuppressWarnings({ "rawtypes", "unchecked" }) 	protected void applyInitializers(ConfigurableApplicationContext context);1526993305;Apply any {@link ApplicationContextInitializer}s to the context before it is_refreshed._@param context the configured ApplicationContext (not refreshed yet)_@see ConfigurableApplicationContext#refresh();@SuppressWarnings({ "rawtypes", "unchecked" })_	protected void applyInitializers(ConfigurableApplicationContext context) {_		for (ApplicationContextInitializer initializer : getInitializers()) {_			Class<?> requiredType = GenericTypeResolver.resolveTypeArgument(_					initializer.getClass(), ApplicationContextInitializer.class)__			Assert.isInstanceOf(requiredType, context, "Unable to call initializer.")__			initializer.initialize(context)__		}_	};apply,any,link,application,context,initializer,s,to,the,context,before,it,is,refreshed,param,context,the,configured,application,context,not,refreshed,yet,see,configurable,application,context,refresh;suppress,warnings,rawtypes,unchecked,protected,void,apply,initializers,configurable,application,context,context,for,application,context,initializer,initializer,get,initializers,class,required,type,generic,type,resolver,resolve,type,argument,initializer,get,class,application,context,initializer,class,assert,is,instance,of,required,type,context,unable,to,call,initializer,initializer,initialize,context
SpringApplication -> @SuppressWarnings({ "rawtypes", "unchecked" }) 	protected void applyInitializers(ConfigurableApplicationContext context);1529485904;Apply any {@link ApplicationContextInitializer}s to the context before it is_refreshed._@param context the configured ApplicationContext (not refreshed yet)_@see ConfigurableApplicationContext#refresh();@SuppressWarnings({ "rawtypes", "unchecked" })_	protected void applyInitializers(ConfigurableApplicationContext context) {_		for (ApplicationContextInitializer initializer : getInitializers()) {_			Class<?> requiredType = GenericTypeResolver.resolveTypeArgument(_					initializer.getClass(), ApplicationContextInitializer.class)__			Assert.isInstanceOf(requiredType, context, "Unable to call initializer.")__			initializer.initialize(context)__		}_	};apply,any,link,application,context,initializer,s,to,the,context,before,it,is,refreshed,param,context,the,configured,application,context,not,refreshed,yet,see,configurable,application,context,refresh;suppress,warnings,rawtypes,unchecked,protected,void,apply,initializers,configurable,application,context,context,for,application,context,initializer,initializer,get,initializers,class,required,type,generic,type,resolver,resolve,type,argument,initializer,get,class,application,context,initializer,class,assert,is,instance,of,required,type,context,unable,to,call,initializer,initializer,initialize,context
SpringApplication -> @SuppressWarnings({ "rawtypes", "unchecked" }) 	protected void applyInitializers(ConfigurableApplicationContext context);1531140616;Apply any {@link ApplicationContextInitializer}s to the context before it is_refreshed._@param context the configured ApplicationContext (not refreshed yet)_@see ConfigurableApplicationContext#refresh();@SuppressWarnings({ "rawtypes", "unchecked" })_	protected void applyInitializers(ConfigurableApplicationContext context) {_		for (ApplicationContextInitializer initializer : getInitializers()) {_			Class<?> requiredType = GenericTypeResolver.resolveTypeArgument(_					initializer.getClass(), ApplicationContextInitializer.class)__			Assert.isInstanceOf(requiredType, context, "Unable to call initializer.")__			initializer.initialize(context)__		}_	};apply,any,link,application,context,initializer,s,to,the,context,before,it,is,refreshed,param,context,the,configured,application,context,not,refreshed,yet,see,configurable,application,context,refresh;suppress,warnings,rawtypes,unchecked,protected,void,apply,initializers,configurable,application,context,context,for,application,context,initializer,initializer,get,initializers,class,required,type,generic,type,resolver,resolve,type,argument,initializer,get,class,application,context,initializer,class,assert,is,instance,of,required,type,context,unable,to,call,initializer,initializer,initialize,context
SpringApplication -> @SuppressWarnings({ "rawtypes", "unchecked" }) 	protected void applyInitializers(ConfigurableApplicationContext context);1531155529;Apply any {@link ApplicationContextInitializer}s to the context before it is_refreshed._@param context the configured ApplicationContext (not refreshed yet)_@see ConfigurableApplicationContext#refresh();@SuppressWarnings({ "rawtypes", "unchecked" })_	protected void applyInitializers(ConfigurableApplicationContext context) {_		for (ApplicationContextInitializer initializer : getInitializers()) {_			Class<?> requiredType = GenericTypeResolver.resolveTypeArgument(_					initializer.getClass(), ApplicationContextInitializer.class)__			Assert.isInstanceOf(requiredType, context, "Unable to call initializer.")__			initializer.initialize(context)__		}_	};apply,any,link,application,context,initializer,s,to,the,context,before,it,is,refreshed,param,context,the,configured,application,context,not,refreshed,yet,see,configurable,application,context,refresh;suppress,warnings,rawtypes,unchecked,protected,void,apply,initializers,configurable,application,context,context,for,application,context,initializer,initializer,get,initializers,class,required,type,generic,type,resolver,resolve,type,argument,initializer,get,class,application,context,initializer,class,assert,is,instance,of,required,type,context,unable,to,call,initializer,initializer,initialize,context
SpringApplication -> @SuppressWarnings({ "rawtypes", "unchecked" }) 	protected void applyInitializers(ConfigurableApplicationContext context);1531222098;Apply any {@link ApplicationContextInitializer}s to the context before it is_refreshed._@param context the configured ApplicationContext (not refreshed yet)_@see ConfigurableApplicationContext#refresh();@SuppressWarnings({ "rawtypes", "unchecked" })_	protected void applyInitializers(ConfigurableApplicationContext context) {_		for (ApplicationContextInitializer initializer : getInitializers()) {_			Class<?> requiredType = GenericTypeResolver.resolveTypeArgument(_					initializer.getClass(), ApplicationContextInitializer.class)__			Assert.isInstanceOf(requiredType, context, "Unable to call initializer.")__			initializer.initialize(context)__		}_	};apply,any,link,application,context,initializer,s,to,the,context,before,it,is,refreshed,param,context,the,configured,application,context,not,refreshed,yet,see,configurable,application,context,refresh;suppress,warnings,rawtypes,unchecked,protected,void,apply,initializers,configurable,application,context,context,for,application,context,initializer,initializer,get,initializers,class,required,type,generic,type,resolver,resolve,type,argument,initializer,get,class,application,context,initializer,class,assert,is,instance,of,required,type,context,unable,to,call,initializer,initializer,initialize,context
SpringApplication -> @SuppressWarnings({ "rawtypes", "unchecked" }) 	protected void applyInitializers(ConfigurableApplicationContext context);1532738143;Apply any {@link ApplicationContextInitializer}s to the context before it is_refreshed._@param context the configured ApplicationContext (not refreshed yet)_@see ConfigurableApplicationContext#refresh();@SuppressWarnings({ "rawtypes", "unchecked" })_	protected void applyInitializers(ConfigurableApplicationContext context) {_		for (ApplicationContextInitializer initializer : getInitializers()) {_			Class<?> requiredType = GenericTypeResolver.resolveTypeArgument(_					initializer.getClass(), ApplicationContextInitializer.class)__			Assert.isInstanceOf(requiredType, context, "Unable to call initializer.")__			initializer.initialize(context)__		}_	};apply,any,link,application,context,initializer,s,to,the,context,before,it,is,refreshed,param,context,the,configured,application,context,not,refreshed,yet,see,configurable,application,context,refresh;suppress,warnings,rawtypes,unchecked,protected,void,apply,initializers,configurable,application,context,context,for,application,context,initializer,initializer,get,initializers,class,required,type,generic,type,resolver,resolve,type,argument,initializer,get,class,application,context,initializer,class,assert,is,instance,of,required,type,context,unable,to,call,initializer,initializer,initialize,context
SpringApplication -> @SuppressWarnings({ "rawtypes", "unchecked" }) 	protected void applyInitializers(ConfigurableApplicationContext context);1534188228;Apply any {@link ApplicationContextInitializer}s to the context before it is_refreshed._@param context the configured ApplicationContext (not refreshed yet)_@see ConfigurableApplicationContext#refresh();@SuppressWarnings({ "rawtypes", "unchecked" })_	protected void applyInitializers(ConfigurableApplicationContext context) {_		for (ApplicationContextInitializer initializer : getInitializers()) {_			Class<?> requiredType = GenericTypeResolver.resolveTypeArgument(_					initializer.getClass(), ApplicationContextInitializer.class)__			Assert.isInstanceOf(requiredType, context, "Unable to call initializer.")__			initializer.initialize(context)__		}_	};apply,any,link,application,context,initializer,s,to,the,context,before,it,is,refreshed,param,context,the,configured,application,context,not,refreshed,yet,see,configurable,application,context,refresh;suppress,warnings,rawtypes,unchecked,protected,void,apply,initializers,configurable,application,context,context,for,application,context,initializer,initializer,get,initializers,class,required,type,generic,type,resolver,resolve,type,argument,initializer,get,class,application,context,initializer,class,assert,is,instance,of,required,type,context,unable,to,call,initializer,initializer,initialize,context
SpringApplication -> @SuppressWarnings({ "rawtypes", "unchecked" }) 	protected void applyInitializers(ConfigurableApplicationContext context);1535104170;Apply any {@link ApplicationContextInitializer}s to the context before it is_refreshed._@param context the configured ApplicationContext (not refreshed yet)_@see ConfigurableApplicationContext#refresh();@SuppressWarnings({ "rawtypes", "unchecked" })_	protected void applyInitializers(ConfigurableApplicationContext context) {_		for (ApplicationContextInitializer initializer : getInitializers()) {_			Class<?> requiredType = GenericTypeResolver.resolveTypeArgument(_					initializer.getClass(), ApplicationContextInitializer.class)__			Assert.isInstanceOf(requiredType, context, "Unable to call initializer.")__			initializer.initialize(context)__		}_	};apply,any,link,application,context,initializer,s,to,the,context,before,it,is,refreshed,param,context,the,configured,application,context,not,refreshed,yet,see,configurable,application,context,refresh;suppress,warnings,rawtypes,unchecked,protected,void,apply,initializers,configurable,application,context,context,for,application,context,initializer,initializer,get,initializers,class,required,type,generic,type,resolver,resolve,type,argument,initializer,get,class,application,context,initializer,class,assert,is,instance,of,required,type,context,unable,to,call,initializer,initializer,initialize,context
SpringApplication -> @SuppressWarnings({ "rawtypes", "unchecked" }) 	protected void applyInitializers(ConfigurableApplicationContext context);1536701067;Apply any {@link ApplicationContextInitializer}s to the context before it is_refreshed._@param context the configured ApplicationContext (not refreshed yet)_@see ConfigurableApplicationContext#refresh();@SuppressWarnings({ "rawtypes", "unchecked" })_	protected void applyInitializers(ConfigurableApplicationContext context) {_		for (ApplicationContextInitializer initializer : getInitializers()) {_			Class<?> requiredType = GenericTypeResolver.resolveTypeArgument(_					initializer.getClass(), ApplicationContextInitializer.class)__			Assert.isInstanceOf(requiredType, context, "Unable to call initializer.")__			initializer.initialize(context)__		}_	};apply,any,link,application,context,initializer,s,to,the,context,before,it,is,refreshed,param,context,the,configured,application,context,not,refreshed,yet,see,configurable,application,context,refresh;suppress,warnings,rawtypes,unchecked,protected,void,apply,initializers,configurable,application,context,context,for,application,context,initializer,initializer,get,initializers,class,required,type,generic,type,resolver,resolve,type,argument,initializer,get,class,application,context,initializer,class,assert,is,instance,of,required,type,context,unable,to,call,initializer,initializer,initialize,context
SpringApplication -> @SuppressWarnings({ "rawtypes", "unchecked" }) 	protected void applyInitializers(ConfigurableApplicationContext context);1538570355;Apply any {@link ApplicationContextInitializer}s to the context before it is_refreshed._@param context the configured ApplicationContext (not refreshed yet)_@see ConfigurableApplicationContext#refresh();@SuppressWarnings({ "rawtypes", "unchecked" })_	protected void applyInitializers(ConfigurableApplicationContext context) {_		for (ApplicationContextInitializer initializer : getInitializers()) {_			Class<?> requiredType = GenericTypeResolver.resolveTypeArgument(_					initializer.getClass(), ApplicationContextInitializer.class)__			Assert.isInstanceOf(requiredType, context, "Unable to call initializer.")__			initializer.initialize(context)__		}_	};apply,any,link,application,context,initializer,s,to,the,context,before,it,is,refreshed,param,context,the,configured,application,context,not,refreshed,yet,see,configurable,application,context,refresh;suppress,warnings,rawtypes,unchecked,protected,void,apply,initializers,configurable,application,context,context,for,application,context,initializer,initializer,get,initializers,class,required,type,generic,type,resolver,resolve,type,argument,initializer,get,class,application,context,initializer,class,assert,is,instance,of,required,type,context,unable,to,call,initializer,initializer,initialize,context
SpringApplication -> @SuppressWarnings({ "rawtypes", "unchecked" }) 	protected void applyInitializers(ConfigurableApplicationContext context);1538707540;Apply any {@link ApplicationContextInitializer}s to the context before it is_refreshed._@param context the configured ApplicationContext (not refreshed yet)_@see ConfigurableApplicationContext#refresh();@SuppressWarnings({ "rawtypes", "unchecked" })_	protected void applyInitializers(ConfigurableApplicationContext context) {_		for (ApplicationContextInitializer initializer : getInitializers()) {_			Class<?> requiredType = GenericTypeResolver.resolveTypeArgument(_					initializer.getClass(), ApplicationContextInitializer.class)__			Assert.isInstanceOf(requiredType, context, "Unable to call initializer.")__			initializer.initialize(context)__		}_	};apply,any,link,application,context,initializer,s,to,the,context,before,it,is,refreshed,param,context,the,configured,application,context,not,refreshed,yet,see,configurable,application,context,refresh;suppress,warnings,rawtypes,unchecked,protected,void,apply,initializers,configurable,application,context,context,for,application,context,initializer,initializer,get,initializers,class,required,type,generic,type,resolver,resolve,type,argument,initializer,get,class,application,context,initializer,class,assert,is,instance,of,required,type,context,unable,to,call,initializer,initializer,initialize,context
SpringApplication -> @SuppressWarnings({ "rawtypes", "unchecked" }) 	protected void applyInitializers(ConfigurableApplicationContext context);1538750610;Apply any {@link ApplicationContextInitializer}s to the context before it is_refreshed._@param context the configured ApplicationContext (not refreshed yet)_@see ConfigurableApplicationContext#refresh();@SuppressWarnings({ "rawtypes", "unchecked" })_	protected void applyInitializers(ConfigurableApplicationContext context) {_		for (ApplicationContextInitializer initializer : getInitializers()) {_			Class<?> requiredType = GenericTypeResolver.resolveTypeArgument(_					initializer.getClass(), ApplicationContextInitializer.class)__			Assert.isInstanceOf(requiredType, context, "Unable to call initializer.")__			initializer.initialize(context)__		}_	};apply,any,link,application,context,initializer,s,to,the,context,before,it,is,refreshed,param,context,the,configured,application,context,not,refreshed,yet,see,configurable,application,context,refresh;suppress,warnings,rawtypes,unchecked,protected,void,apply,initializers,configurable,application,context,context,for,application,context,initializer,initializer,get,initializers,class,required,type,generic,type,resolver,resolve,type,argument,initializer,get,class,application,context,initializer,class,assert,is,instance,of,required,type,context,unable,to,call,initializer,initializer,initialize,context
SpringApplication -> @SuppressWarnings({ "rawtypes", "unchecked" }) 	protected void applyInitializers(ConfigurableApplicationContext context);1538771652;Apply any {@link ApplicationContextInitializer}s to the context before it is_refreshed._@param context the configured ApplicationContext (not refreshed yet)_@see ConfigurableApplicationContext#refresh();@SuppressWarnings({ "rawtypes", "unchecked" })_	protected void applyInitializers(ConfigurableApplicationContext context) {_		for (ApplicationContextInitializer initializer : getInitializers()) {_			Class<?> requiredType = GenericTypeResolver.resolveTypeArgument(_					initializer.getClass(), ApplicationContextInitializer.class)__			Assert.isInstanceOf(requiredType, context, "Unable to call initializer.")__			initializer.initialize(context)__		}_	};apply,any,link,application,context,initializer,s,to,the,context,before,it,is,refreshed,param,context,the,configured,application,context,not,refreshed,yet,see,configurable,application,context,refresh;suppress,warnings,rawtypes,unchecked,protected,void,apply,initializers,configurable,application,context,context,for,application,context,initializer,initializer,get,initializers,class,required,type,generic,type,resolver,resolve,type,argument,initializer,get,class,application,context,initializer,class,assert,is,instance,of,required,type,context,unable,to,call,initializer,initializer,initialize,context
SpringApplication -> @SuppressWarnings({ "rawtypes", "unchecked" }) 	protected void applyInitializers(ConfigurableApplicationContext context);1540419762;Apply any {@link ApplicationContextInitializer}s to the context before it is_refreshed._@param context the configured ApplicationContext (not refreshed yet)_@see ConfigurableApplicationContext#refresh();@SuppressWarnings({ "rawtypes", "unchecked" })_	protected void applyInitializers(ConfigurableApplicationContext context) {_		for (ApplicationContextInitializer initializer : getInitializers()) {_			Class<?> requiredType = GenericTypeResolver.resolveTypeArgument(_					initializer.getClass(), ApplicationContextInitializer.class)__			Assert.isInstanceOf(requiredType, context, "Unable to call initializer.")__			initializer.initialize(context)__		}_	};apply,any,link,application,context,initializer,s,to,the,context,before,it,is,refreshed,param,context,the,configured,application,context,not,refreshed,yet,see,configurable,application,context,refresh;suppress,warnings,rawtypes,unchecked,protected,void,apply,initializers,configurable,application,context,context,for,application,context,initializer,initializer,get,initializers,class,required,type,generic,type,resolver,resolve,type,argument,initializer,get,class,application,context,initializer,class,assert,is,instance,of,required,type,context,unable,to,call,initializer,initializer,initialize,context
SpringApplication -> @SuppressWarnings({ "rawtypes", "unchecked" }) 	protected void applyInitializers(ConfigurableApplicationContext context);1541060131;Apply any {@link ApplicationContextInitializer}s to the context before it is_refreshed._@param context the configured ApplicationContext (not refreshed yet)_@see ConfigurableApplicationContext#refresh();@SuppressWarnings({ "rawtypes", "unchecked" })_	protected void applyInitializers(ConfigurableApplicationContext context) {_		for (ApplicationContextInitializer initializer : getInitializers()) {_			Class<?> requiredType = GenericTypeResolver.resolveTypeArgument(_					initializer.getClass(), ApplicationContextInitializer.class)__			Assert.isInstanceOf(requiredType, context, "Unable to call initializer.")__			initializer.initialize(context)__		}_	};apply,any,link,application,context,initializer,s,to,the,context,before,it,is,refreshed,param,context,the,configured,application,context,not,refreshed,yet,see,configurable,application,context,refresh;suppress,warnings,rawtypes,unchecked,protected,void,apply,initializers,configurable,application,context,context,for,application,context,initializer,initializer,get,initializers,class,required,type,generic,type,resolver,resolve,type,argument,initializer,get,class,application,context,initializer,class,assert,is,instance,of,required,type,context,unable,to,call,initializer,initializer,initialize,context
SpringApplication -> @SuppressWarnings({ "rawtypes", "unchecked" }) 	protected void applyInitializers(ConfigurableApplicationContext context);1546943477;Apply any {@link ApplicationContextInitializer}s to the context before it is_refreshed._@param context the configured ApplicationContext (not refreshed yet)_@see ConfigurableApplicationContext#refresh();@SuppressWarnings({ "rawtypes", "unchecked" })_	protected void applyInitializers(ConfigurableApplicationContext context) {_		for (ApplicationContextInitializer initializer : getInitializers()) {_			Class<?> requiredType = GenericTypeResolver.resolveTypeArgument(_					initializer.getClass(), ApplicationContextInitializer.class)__			Assert.isInstanceOf(requiredType, context, "Unable to call initializer.")__			initializer.initialize(context)__		}_	};apply,any,link,application,context,initializer,s,to,the,context,before,it,is,refreshed,param,context,the,configured,application,context,not,refreshed,yet,see,configurable,application,context,refresh;suppress,warnings,rawtypes,unchecked,protected,void,apply,initializers,configurable,application,context,context,for,application,context,initializer,initializer,get,initializers,class,required,type,generic,type,resolver,resolve,type,argument,initializer,get,class,application,context,initializer,class,assert,is,instance,of,required,type,context,unable,to,call,initializer,initializer,initialize,context
SpringApplication -> @SuppressWarnings({ "rawtypes", "unchecked" }) 	protected void applyInitializers(ConfigurableApplicationContext context);1549791353;Apply any {@link ApplicationContextInitializer}s to the context before it is_refreshed._@param context the configured ApplicationContext (not refreshed yet)_@see ConfigurableApplicationContext#refresh();@SuppressWarnings({ "rawtypes", "unchecked" })_	protected void applyInitializers(ConfigurableApplicationContext context) {_		for (ApplicationContextInitializer initializer : getInitializers()) {_			Class<?> requiredType = GenericTypeResolver.resolveTypeArgument(_					initializer.getClass(), ApplicationContextInitializer.class)__			Assert.isInstanceOf(requiredType, context, "Unable to call initializer.")__			initializer.initialize(context)__		}_	};apply,any,link,application,context,initializer,s,to,the,context,before,it,is,refreshed,param,context,the,configured,application,context,not,refreshed,yet,see,configurable,application,context,refresh;suppress,warnings,rawtypes,unchecked,protected,void,apply,initializers,configurable,application,context,context,for,application,context,initializer,initializer,get,initializers,class,required,type,generic,type,resolver,resolve,type,argument,initializer,get,class,application,context,initializer,class,assert,is,instance,of,required,type,context,unable,to,call,initializer,initializer,initialize,context
SpringApplication -> @SuppressWarnings({ "rawtypes", "unchecked" }) 	protected void applyInitializers(ConfigurableApplicationContext context);1550148109;Apply any {@link ApplicationContextInitializer}s to the context before it is_refreshed._@param context the configured ApplicationContext (not refreshed yet)_@see ConfigurableApplicationContext#refresh();@SuppressWarnings({ "rawtypes", "unchecked" })_	protected void applyInitializers(ConfigurableApplicationContext context) {_		for (ApplicationContextInitializer initializer : getInitializers()) {_			Class<?> requiredType = GenericTypeResolver.resolveTypeArgument(_					initializer.getClass(), ApplicationContextInitializer.class)__			Assert.isInstanceOf(requiredType, context, "Unable to call initializer.")__			initializer.initialize(context)__		}_	};apply,any,link,application,context,initializer,s,to,the,context,before,it,is,refreshed,param,context,the,configured,application,context,not,refreshed,yet,see,configurable,application,context,refresh;suppress,warnings,rawtypes,unchecked,protected,void,apply,initializers,configurable,application,context,context,for,application,context,initializer,initializer,get,initializers,class,required,type,generic,type,resolver,resolve,type,argument,initializer,get,class,application,context,initializer,class,assert,is,instance,of,required,type,context,unable,to,call,initializer,initializer,initialize,context
SpringApplication -> public void setBanner(Banner banner);1507173536;Sets the {@link Banner} instance which will be used to print the banner when no_static banner file is provided._@param banner The Banner instance to use;public void setBanner(Banner banner) {_		this.banner = banner__	};sets,the,link,banner,instance,which,will,be,used,to,print,the,banner,when,no,static,banner,file,is,provided,param,banner,the,banner,instance,to,use;public,void,set,banner,banner,banner,this,banner,banner
SpringApplication -> public void setBanner(Banner banner);1509381678;Sets the {@link Banner} instance which will be used to print the banner when no_static banner file is provided._@param banner The Banner instance to use;public void setBanner(Banner banner) {_		this.banner = banner__	};sets,the,link,banner,instance,which,will,be,used,to,print,the,banner,when,no,static,banner,file,is,provided,param,banner,the,banner,instance,to,use;public,void,set,banner,banner,banner,this,banner,banner
SpringApplication -> public void setBanner(Banner banner);1510995225;Sets the {@link Banner} instance which will be used to print the banner when no_static banner file is provided._@param banner The Banner instance to use;public void setBanner(Banner banner) {_		this.banner = banner__	};sets,the,link,banner,instance,which,will,be,used,to,print,the,banner,when,no,static,banner,file,is,provided,param,banner,the,banner,instance,to,use;public,void,set,banner,banner,banner,this,banner,banner
SpringApplication -> public void setBanner(Banner banner);1515670013;Sets the {@link Banner} instance which will be used to print the banner when no_static banner file is provided._@param banner The Banner instance to use;public void setBanner(Banner banner) {_		this.banner = banner__	};sets,the,link,banner,instance,which,will,be,used,to,print,the,banner,when,no,static,banner,file,is,provided,param,banner,the,banner,instance,to,use;public,void,set,banner,banner,banner,this,banner,banner
SpringApplication -> public void setBanner(Banner banner);1519362690;Sets the {@link Banner} instance which will be used to print the banner when no_static banner file is provided._@param banner The Banner instance to use;public void setBanner(Banner banner) {_		this.banner = banner__	};sets,the,link,banner,instance,which,will,be,used,to,print,the,banner,when,no,static,banner,file,is,provided,param,banner,the,banner,instance,to,use;public,void,set,banner,banner,banner,this,banner,banner
SpringApplication -> public void setBanner(Banner banner);1522251721;Sets the {@link Banner} instance which will be used to print the banner when no_static banner file is provided._@param banner The Banner instance to use;public void setBanner(Banner banner) {_		this.banner = banner__	};sets,the,link,banner,instance,which,will,be,used,to,print,the,banner,when,no,static,banner,file,is,provided,param,banner,the,banner,instance,to,use;public,void,set,banner,banner,banner,this,banner,banner
SpringApplication -> public void setBanner(Banner banner);1525376698;Sets the {@link Banner} instance which will be used to print the banner when no_static banner file is provided._@param banner The Banner instance to use;public void setBanner(Banner banner) {_		this.banner = banner__	};sets,the,link,banner,instance,which,will,be,used,to,print,the,banner,when,no,static,banner,file,is,provided,param,banner,the,banner,instance,to,use;public,void,set,banner,banner,banner,this,banner,banner
SpringApplication -> public void setBanner(Banner banner);1525416882;Sets the {@link Banner} instance which will be used to print the banner when no_static banner file is provided._@param banner The Banner instance to use;public void setBanner(Banner banner) {_		this.banner = banner__	};sets,the,link,banner,instance,which,will,be,used,to,print,the,banner,when,no,static,banner,file,is,provided,param,banner,the,banner,instance,to,use;public,void,set,banner,banner,banner,this,banner,banner
SpringApplication -> public void setBanner(Banner banner);1526993305;Sets the {@link Banner} instance which will be used to print the banner when no_static banner file is provided._@param banner The Banner instance to use;public void setBanner(Banner banner) {_		this.banner = banner__	};sets,the,link,banner,instance,which,will,be,used,to,print,the,banner,when,no,static,banner,file,is,provided,param,banner,the,banner,instance,to,use;public,void,set,banner,banner,banner,this,banner,banner
SpringApplication -> public void setBanner(Banner banner);1529485904;Sets the {@link Banner} instance which will be used to print the banner when no_static banner file is provided._@param banner The Banner instance to use;public void setBanner(Banner banner) {_		this.banner = banner__	};sets,the,link,banner,instance,which,will,be,used,to,print,the,banner,when,no,static,banner,file,is,provided,param,banner,the,banner,instance,to,use;public,void,set,banner,banner,banner,this,banner,banner
SpringApplication -> public void setBanner(Banner banner);1531140616;Sets the {@link Banner} instance which will be used to print the banner when no_static banner file is provided._@param banner The Banner instance to use;public void setBanner(Banner banner) {_		this.banner = banner__	};sets,the,link,banner,instance,which,will,be,used,to,print,the,banner,when,no,static,banner,file,is,provided,param,banner,the,banner,instance,to,use;public,void,set,banner,banner,banner,this,banner,banner
SpringApplication -> public void setBanner(Banner banner);1531155529;Sets the {@link Banner} instance which will be used to print the banner when no_static banner file is provided._@param banner The Banner instance to use;public void setBanner(Banner banner) {_		this.banner = banner__	};sets,the,link,banner,instance,which,will,be,used,to,print,the,banner,when,no,static,banner,file,is,provided,param,banner,the,banner,instance,to,use;public,void,set,banner,banner,banner,this,banner,banner
SpringApplication -> public void setBanner(Banner banner);1531222098;Sets the {@link Banner} instance which will be used to print the banner when no_static banner file is provided._@param banner The Banner instance to use;public void setBanner(Banner banner) {_		this.banner = banner__	};sets,the,link,banner,instance,which,will,be,used,to,print,the,banner,when,no,static,banner,file,is,provided,param,banner,the,banner,instance,to,use;public,void,set,banner,banner,banner,this,banner,banner
SpringApplication -> public void setBanner(Banner banner);1532738143;Sets the {@link Banner} instance which will be used to print the banner when no_static banner file is provided._@param banner the Banner instance to use;public void setBanner(Banner banner) {_		this.banner = banner__	};sets,the,link,banner,instance,which,will,be,used,to,print,the,banner,when,no,static,banner,file,is,provided,param,banner,the,banner,instance,to,use;public,void,set,banner,banner,banner,this,banner,banner
SpringApplication -> public void setBanner(Banner banner);1534188228;Sets the {@link Banner} instance which will be used to print the banner when no_static banner file is provided._@param banner the Banner instance to use;public void setBanner(Banner banner) {_		this.banner = banner__	};sets,the,link,banner,instance,which,will,be,used,to,print,the,banner,when,no,static,banner,file,is,provided,param,banner,the,banner,instance,to,use;public,void,set,banner,banner,banner,this,banner,banner
SpringApplication -> public void setBanner(Banner banner);1535104170;Sets the {@link Banner} instance which will be used to print the banner when no_static banner file is provided._@param banner the Banner instance to use;public void setBanner(Banner banner) {_		this.banner = banner__	};sets,the,link,banner,instance,which,will,be,used,to,print,the,banner,when,no,static,banner,file,is,provided,param,banner,the,banner,instance,to,use;public,void,set,banner,banner,banner,this,banner,banner
SpringApplication -> public void setBanner(Banner banner);1536701067;Sets the {@link Banner} instance which will be used to print the banner when no_static banner file is provided._@param banner the Banner instance to use;public void setBanner(Banner banner) {_		this.banner = banner__	};sets,the,link,banner,instance,which,will,be,used,to,print,the,banner,when,no,static,banner,file,is,provided,param,banner,the,banner,instance,to,use;public,void,set,banner,banner,banner,this,banner,banner
SpringApplication -> public void setBanner(Banner banner);1538570355;Sets the {@link Banner} instance which will be used to print the banner when no_static banner file is provided._@param banner the Banner instance to use;public void setBanner(Banner banner) {_		this.banner = banner__	};sets,the,link,banner,instance,which,will,be,used,to,print,the,banner,when,no,static,banner,file,is,provided,param,banner,the,banner,instance,to,use;public,void,set,banner,banner,banner,this,banner,banner
SpringApplication -> public void setBanner(Banner banner);1538707540;Sets the {@link Banner} instance which will be used to print the banner when no_static banner file is provided._@param banner the Banner instance to use;public void setBanner(Banner banner) {_		this.banner = banner__	};sets,the,link,banner,instance,which,will,be,used,to,print,the,banner,when,no,static,banner,file,is,provided,param,banner,the,banner,instance,to,use;public,void,set,banner,banner,banner,this,banner,banner
SpringApplication -> public void setBanner(Banner banner);1538750610;Sets the {@link Banner} instance which will be used to print the banner when no_static banner file is provided._@param banner the Banner instance to use;public void setBanner(Banner banner) {_		this.banner = banner__	};sets,the,link,banner,instance,which,will,be,used,to,print,the,banner,when,no,static,banner,file,is,provided,param,banner,the,banner,instance,to,use;public,void,set,banner,banner,banner,this,banner,banner
SpringApplication -> public void setBanner(Banner banner);1538771652;Sets the {@link Banner} instance which will be used to print the banner when no_static banner file is provided._@param banner the Banner instance to use;public void setBanner(Banner banner) {_		this.banner = banner__	};sets,the,link,banner,instance,which,will,be,used,to,print,the,banner,when,no,static,banner,file,is,provided,param,banner,the,banner,instance,to,use;public,void,set,banner,banner,banner,this,banner,banner
SpringApplication -> public void setBanner(Banner banner);1540419762;Sets the {@link Banner} instance which will be used to print the banner when no_static banner file is provided._@param banner the Banner instance to use;public void setBanner(Banner banner) {_		this.banner = banner__	};sets,the,link,banner,instance,which,will,be,used,to,print,the,banner,when,no,static,banner,file,is,provided,param,banner,the,banner,instance,to,use;public,void,set,banner,banner,banner,this,banner,banner
SpringApplication -> public void setBanner(Banner banner);1541060131;Sets the {@link Banner} instance which will be used to print the banner when no_static banner file is provided._@param banner the Banner instance to use;public void setBanner(Banner banner) {_		this.banner = banner__	};sets,the,link,banner,instance,which,will,be,used,to,print,the,banner,when,no,static,banner,file,is,provided,param,banner,the,banner,instance,to,use;public,void,set,banner,banner,banner,this,banner,banner
SpringApplication -> public void setBanner(Banner banner);1546943477;Sets the {@link Banner} instance which will be used to print the banner when no_static banner file is provided._@param banner the Banner instance to use;public void setBanner(Banner banner) {_		this.banner = banner__	};sets,the,link,banner,instance,which,will,be,used,to,print,the,banner,when,no,static,banner,file,is,provided,param,banner,the,banner,instance,to,use;public,void,set,banner,banner,banner,this,banner,banner
SpringApplication -> public void setBanner(Banner banner);1549791353;Sets the {@link Banner} instance which will be used to print the banner when no_static banner file is provided._@param banner the Banner instance to use;public void setBanner(Banner banner) {_		this.banner = banner__	};sets,the,link,banner,instance,which,will,be,used,to,print,the,banner,when,no,static,banner,file,is,provided,param,banner,the,banner,instance,to,use;public,void,set,banner,banner,banner,this,banner,banner
SpringApplication -> public void setBanner(Banner banner);1550148109;Sets the {@link Banner} instance which will be used to print the banner when no_static banner file is provided._@param banner the Banner instance to use;public void setBanner(Banner banner) {_		this.banner = banner__	};sets,the,link,banner,instance,which,will,be,used,to,print,the,banner,when,no,static,banner,file,is,provided,param,banner,the,banner,instance,to,use;public,void,set,banner,banner,banner,this,banner,banner
SpringApplication -> public Set<ApplicationContextInitializer<?>> getInitializers();1507173536;Returns read-only ordered Set of the {@link ApplicationContextInitializer}s that_will be applied to the Spring {@link ApplicationContext}._@return the initializers;public Set<ApplicationContextInitializer<?>> getInitializers() {_		return asUnmodifiableOrderedSet(this.initializers)__	};returns,read,only,ordered,set,of,the,link,application,context,initializer,s,that,will,be,applied,to,the,spring,link,application,context,return,the,initializers;public,set,application,context,initializer,get,initializers,return,as,unmodifiable,ordered,set,this,initializers
SpringApplication -> public Set<ApplicationContextInitializer<?>> getInitializers();1509381678;Returns read-only ordered Set of the {@link ApplicationContextInitializer}s that_will be applied to the Spring {@link ApplicationContext}._@return the initializers;public Set<ApplicationContextInitializer<?>> getInitializers() {_		return asUnmodifiableOrderedSet(this.initializers)__	};returns,read,only,ordered,set,of,the,link,application,context,initializer,s,that,will,be,applied,to,the,spring,link,application,context,return,the,initializers;public,set,application,context,initializer,get,initializers,return,as,unmodifiable,ordered,set,this,initializers
SpringApplication -> public Set<ApplicationContextInitializer<?>> getInitializers();1510995225;Returns read-only ordered Set of the {@link ApplicationContextInitializer}s that_will be applied to the Spring {@link ApplicationContext}._@return the initializers;public Set<ApplicationContextInitializer<?>> getInitializers() {_		return asUnmodifiableOrderedSet(this.initializers)__	};returns,read,only,ordered,set,of,the,link,application,context,initializer,s,that,will,be,applied,to,the,spring,link,application,context,return,the,initializers;public,set,application,context,initializer,get,initializers,return,as,unmodifiable,ordered,set,this,initializers
SpringApplication -> public Set<ApplicationContextInitializer<?>> getInitializers();1515670013;Returns read-only ordered Set of the {@link ApplicationContextInitializer}s that_will be applied to the Spring {@link ApplicationContext}._@return the initializers;public Set<ApplicationContextInitializer<?>> getInitializers() {_		return asUnmodifiableOrderedSet(this.initializers)__	};returns,read,only,ordered,set,of,the,link,application,context,initializer,s,that,will,be,applied,to,the,spring,link,application,context,return,the,initializers;public,set,application,context,initializer,get,initializers,return,as,unmodifiable,ordered,set,this,initializers
SpringApplication -> public Set<ApplicationContextInitializer<?>> getInitializers();1519362690;Returns read-only ordered Set of the {@link ApplicationContextInitializer}s that_will be applied to the Spring {@link ApplicationContext}._@return the initializers;public Set<ApplicationContextInitializer<?>> getInitializers() {_		return asUnmodifiableOrderedSet(this.initializers)__	};returns,read,only,ordered,set,of,the,link,application,context,initializer,s,that,will,be,applied,to,the,spring,link,application,context,return,the,initializers;public,set,application,context,initializer,get,initializers,return,as,unmodifiable,ordered,set,this,initializers
SpringApplication -> public Set<ApplicationContextInitializer<?>> getInitializers();1522251721;Returns read-only ordered Set of the {@link ApplicationContextInitializer}s that_will be applied to the Spring {@link ApplicationContext}._@return the initializers;public Set<ApplicationContextInitializer<?>> getInitializers() {_		return asUnmodifiableOrderedSet(this.initializers)__	};returns,read,only,ordered,set,of,the,link,application,context,initializer,s,that,will,be,applied,to,the,spring,link,application,context,return,the,initializers;public,set,application,context,initializer,get,initializers,return,as,unmodifiable,ordered,set,this,initializers
SpringApplication -> public Set<ApplicationContextInitializer<?>> getInitializers();1525376698;Returns read-only ordered Set of the {@link ApplicationContextInitializer}s that_will be applied to the Spring {@link ApplicationContext}._@return the initializers;public Set<ApplicationContextInitializer<?>> getInitializers() {_		return asUnmodifiableOrderedSet(this.initializers)__	};returns,read,only,ordered,set,of,the,link,application,context,initializer,s,that,will,be,applied,to,the,spring,link,application,context,return,the,initializers;public,set,application,context,initializer,get,initializers,return,as,unmodifiable,ordered,set,this,initializers
SpringApplication -> public Set<ApplicationContextInitializer<?>> getInitializers();1525416882;Returns read-only ordered Set of the {@link ApplicationContextInitializer}s that_will be applied to the Spring {@link ApplicationContext}._@return the initializers;public Set<ApplicationContextInitializer<?>> getInitializers() {_		return asUnmodifiableOrderedSet(this.initializers)__	};returns,read,only,ordered,set,of,the,link,application,context,initializer,s,that,will,be,applied,to,the,spring,link,application,context,return,the,initializers;public,set,application,context,initializer,get,initializers,return,as,unmodifiable,ordered,set,this,initializers
SpringApplication -> public Set<ApplicationContextInitializer<?>> getInitializers();1526993305;Returns read-only ordered Set of the {@link ApplicationContextInitializer}s that_will be applied to the Spring {@link ApplicationContext}._@return the initializers;public Set<ApplicationContextInitializer<?>> getInitializers() {_		return asUnmodifiableOrderedSet(this.initializers)__	};returns,read,only,ordered,set,of,the,link,application,context,initializer,s,that,will,be,applied,to,the,spring,link,application,context,return,the,initializers;public,set,application,context,initializer,get,initializers,return,as,unmodifiable,ordered,set,this,initializers
SpringApplication -> public Set<ApplicationContextInitializer<?>> getInitializers();1529485904;Returns read-only ordered Set of the {@link ApplicationContextInitializer}s that_will be applied to the Spring {@link ApplicationContext}._@return the initializers;public Set<ApplicationContextInitializer<?>> getInitializers() {_		return asUnmodifiableOrderedSet(this.initializers)__	};returns,read,only,ordered,set,of,the,link,application,context,initializer,s,that,will,be,applied,to,the,spring,link,application,context,return,the,initializers;public,set,application,context,initializer,get,initializers,return,as,unmodifiable,ordered,set,this,initializers
SpringApplication -> public Set<ApplicationContextInitializer<?>> getInitializers();1531140616;Returns read-only ordered Set of the {@link ApplicationContextInitializer}s that_will be applied to the Spring {@link ApplicationContext}._@return the initializers;public Set<ApplicationContextInitializer<?>> getInitializers() {_		return asUnmodifiableOrderedSet(this.initializers)__	};returns,read,only,ordered,set,of,the,link,application,context,initializer,s,that,will,be,applied,to,the,spring,link,application,context,return,the,initializers;public,set,application,context,initializer,get,initializers,return,as,unmodifiable,ordered,set,this,initializers
SpringApplication -> public Set<ApplicationContextInitializer<?>> getInitializers();1531155529;Returns read-only ordered Set of the {@link ApplicationContextInitializer}s that_will be applied to the Spring {@link ApplicationContext}._@return the initializers;public Set<ApplicationContextInitializer<?>> getInitializers() {_		return asUnmodifiableOrderedSet(this.initializers)__	};returns,read,only,ordered,set,of,the,link,application,context,initializer,s,that,will,be,applied,to,the,spring,link,application,context,return,the,initializers;public,set,application,context,initializer,get,initializers,return,as,unmodifiable,ordered,set,this,initializers
SpringApplication -> public Set<ApplicationContextInitializer<?>> getInitializers();1531222098;Returns read-only ordered Set of the {@link ApplicationContextInitializer}s that_will be applied to the Spring {@link ApplicationContext}._@return the initializers;public Set<ApplicationContextInitializer<?>> getInitializers() {_		return asUnmodifiableOrderedSet(this.initializers)__	};returns,read,only,ordered,set,of,the,link,application,context,initializer,s,that,will,be,applied,to,the,spring,link,application,context,return,the,initializers;public,set,application,context,initializer,get,initializers,return,as,unmodifiable,ordered,set,this,initializers
SpringApplication -> public Set<ApplicationContextInitializer<?>> getInitializers();1532738143;Returns read-only ordered Set of the {@link ApplicationContextInitializer}s that_will be applied to the Spring {@link ApplicationContext}._@return the initializers;public Set<ApplicationContextInitializer<?>> getInitializers() {_		return asUnmodifiableOrderedSet(this.initializers)__	};returns,read,only,ordered,set,of,the,link,application,context,initializer,s,that,will,be,applied,to,the,spring,link,application,context,return,the,initializers;public,set,application,context,initializer,get,initializers,return,as,unmodifiable,ordered,set,this,initializers
SpringApplication -> public Set<ApplicationContextInitializer<?>> getInitializers();1534188228;Returns read-only ordered Set of the {@link ApplicationContextInitializer}s that_will be applied to the Spring {@link ApplicationContext}._@return the initializers;public Set<ApplicationContextInitializer<?>> getInitializers() {_		return asUnmodifiableOrderedSet(this.initializers)__	};returns,read,only,ordered,set,of,the,link,application,context,initializer,s,that,will,be,applied,to,the,spring,link,application,context,return,the,initializers;public,set,application,context,initializer,get,initializers,return,as,unmodifiable,ordered,set,this,initializers
SpringApplication -> public Set<ApplicationContextInitializer<?>> getInitializers();1535104170;Returns read-only ordered Set of the {@link ApplicationContextInitializer}s that_will be applied to the Spring {@link ApplicationContext}._@return the initializers;public Set<ApplicationContextInitializer<?>> getInitializers() {_		return asUnmodifiableOrderedSet(this.initializers)__	};returns,read,only,ordered,set,of,the,link,application,context,initializer,s,that,will,be,applied,to,the,spring,link,application,context,return,the,initializers;public,set,application,context,initializer,get,initializers,return,as,unmodifiable,ordered,set,this,initializers
SpringApplication -> public Set<ApplicationContextInitializer<?>> getInitializers();1536701067;Returns read-only ordered Set of the {@link ApplicationContextInitializer}s that_will be applied to the Spring {@link ApplicationContext}._@return the initializers;public Set<ApplicationContextInitializer<?>> getInitializers() {_		return asUnmodifiableOrderedSet(this.initializers)__	};returns,read,only,ordered,set,of,the,link,application,context,initializer,s,that,will,be,applied,to,the,spring,link,application,context,return,the,initializers;public,set,application,context,initializer,get,initializers,return,as,unmodifiable,ordered,set,this,initializers
SpringApplication -> public Set<ApplicationContextInitializer<?>> getInitializers();1538570355;Returns read-only ordered Set of the {@link ApplicationContextInitializer}s that_will be applied to the Spring {@link ApplicationContext}._@return the initializers;public Set<ApplicationContextInitializer<?>> getInitializers() {_		return asUnmodifiableOrderedSet(this.initializers)__	};returns,read,only,ordered,set,of,the,link,application,context,initializer,s,that,will,be,applied,to,the,spring,link,application,context,return,the,initializers;public,set,application,context,initializer,get,initializers,return,as,unmodifiable,ordered,set,this,initializers
SpringApplication -> public Set<ApplicationContextInitializer<?>> getInitializers();1538707540;Returns read-only ordered Set of the {@link ApplicationContextInitializer}s that_will be applied to the Spring {@link ApplicationContext}._@return the initializers;public Set<ApplicationContextInitializer<?>> getInitializers() {_		return asUnmodifiableOrderedSet(this.initializers)__	};returns,read,only,ordered,set,of,the,link,application,context,initializer,s,that,will,be,applied,to,the,spring,link,application,context,return,the,initializers;public,set,application,context,initializer,get,initializers,return,as,unmodifiable,ordered,set,this,initializers
SpringApplication -> public Set<ApplicationContextInitializer<?>> getInitializers();1538750610;Returns read-only ordered Set of the {@link ApplicationContextInitializer}s that_will be applied to the Spring {@link ApplicationContext}._@return the initializers;public Set<ApplicationContextInitializer<?>> getInitializers() {_		return asUnmodifiableOrderedSet(this.initializers)__	};returns,read,only,ordered,set,of,the,link,application,context,initializer,s,that,will,be,applied,to,the,spring,link,application,context,return,the,initializers;public,set,application,context,initializer,get,initializers,return,as,unmodifiable,ordered,set,this,initializers
SpringApplication -> public Set<ApplicationContextInitializer<?>> getInitializers();1538771652;Returns read-only ordered Set of the {@link ApplicationContextInitializer}s that_will be applied to the Spring {@link ApplicationContext}._@return the initializers;public Set<ApplicationContextInitializer<?>> getInitializers() {_		return asUnmodifiableOrderedSet(this.initializers)__	};returns,read,only,ordered,set,of,the,link,application,context,initializer,s,that,will,be,applied,to,the,spring,link,application,context,return,the,initializers;public,set,application,context,initializer,get,initializers,return,as,unmodifiable,ordered,set,this,initializers
SpringApplication -> public Set<ApplicationContextInitializer<?>> getInitializers();1540419762;Returns read-only ordered Set of the {@link ApplicationContextInitializer}s that_will be applied to the Spring {@link ApplicationContext}._@return the initializers;public Set<ApplicationContextInitializer<?>> getInitializers() {_		return asUnmodifiableOrderedSet(this.initializers)__	};returns,read,only,ordered,set,of,the,link,application,context,initializer,s,that,will,be,applied,to,the,spring,link,application,context,return,the,initializers;public,set,application,context,initializer,get,initializers,return,as,unmodifiable,ordered,set,this,initializers
SpringApplication -> public Set<ApplicationContextInitializer<?>> getInitializers();1541060131;Returns read-only ordered Set of the {@link ApplicationContextInitializer}s that_will be applied to the Spring {@link ApplicationContext}._@return the initializers;public Set<ApplicationContextInitializer<?>> getInitializers() {_		return asUnmodifiableOrderedSet(this.initializers)__	};returns,read,only,ordered,set,of,the,link,application,context,initializer,s,that,will,be,applied,to,the,spring,link,application,context,return,the,initializers;public,set,application,context,initializer,get,initializers,return,as,unmodifiable,ordered,set,this,initializers
SpringApplication -> public Set<ApplicationContextInitializer<?>> getInitializers();1546943477;Returns read-only ordered Set of the {@link ApplicationContextInitializer}s that_will be applied to the Spring {@link ApplicationContext}._@return the initializers;public Set<ApplicationContextInitializer<?>> getInitializers() {_		return asUnmodifiableOrderedSet(this.initializers)__	};returns,read,only,ordered,set,of,the,link,application,context,initializer,s,that,will,be,applied,to,the,spring,link,application,context,return,the,initializers;public,set,application,context,initializer,get,initializers,return,as,unmodifiable,ordered,set,this,initializers
SpringApplication -> public Set<ApplicationContextInitializer<?>> getInitializers();1549791353;Returns read-only ordered Set of the {@link ApplicationContextInitializer}s that_will be applied to the Spring {@link ApplicationContext}._@return the initializers;public Set<ApplicationContextInitializer<?>> getInitializers() {_		return asUnmodifiableOrderedSet(this.initializers)__	};returns,read,only,ordered,set,of,the,link,application,context,initializer,s,that,will,be,applied,to,the,spring,link,application,context,return,the,initializers;public,set,application,context,initializer,get,initializers,return,as,unmodifiable,ordered,set,this,initializers
SpringApplication -> public Set<ApplicationContextInitializer<?>> getInitializers();1550148109;Returns read-only ordered Set of the {@link ApplicationContextInitializer}s that_will be applied to the Spring {@link ApplicationContext}._@return the initializers;public Set<ApplicationContextInitializer<?>> getInitializers() {_		return asUnmodifiableOrderedSet(this.initializers)__	};returns,read,only,ordered,set,of,the,link,application,context,initializer,s,that,will,be,applied,to,the,spring,link,application,context,return,the,initializers;public,set,application,context,initializer,get,initializers,return,as,unmodifiable,ordered,set,this,initializers
SpringApplication -> public static ConfigurableApplicationContext run(Class<?> primarySource, 			String... args);1507173536;Static helper that can be used to run a {@link SpringApplication} from the_specified source using default settings._@param primarySource the primary source to load_@param args the application arguments (usually passed from a Java main method)_@return the running {@link ApplicationContext};public static ConfigurableApplicationContext run(Class<?> primarySource,_			String... args) {_		return run(new Class<?>[] { primarySource }, args)__	};static,helper,that,can,be,used,to,run,a,link,spring,application,from,the,specified,source,using,default,settings,param,primary,source,the,primary,source,to,load,param,args,the,application,arguments,usually,passed,from,a,java,main,method,return,the,running,link,application,context;public,static,configurable,application,context,run,class,primary,source,string,args,return,run,new,class,primary,source,args
SpringApplication -> public static ConfigurableApplicationContext run(Class<?> primarySource, 			String... args);1509381678;Static helper that can be used to run a {@link SpringApplication} from the_specified source using default settings._@param primarySource the primary source to load_@param args the application arguments (usually passed from a Java main method)_@return the running {@link ApplicationContext};public static ConfigurableApplicationContext run(Class<?> primarySource,_			String... args) {_		return run(new Class<?>[] { primarySource }, args)__	};static,helper,that,can,be,used,to,run,a,link,spring,application,from,the,specified,source,using,default,settings,param,primary,source,the,primary,source,to,load,param,args,the,application,arguments,usually,passed,from,a,java,main,method,return,the,running,link,application,context;public,static,configurable,application,context,run,class,primary,source,string,args,return,run,new,class,primary,source,args
SpringApplication -> public static ConfigurableApplicationContext run(Class<?> primarySource, 			String... args);1510995225;Static helper that can be used to run a {@link SpringApplication} from the_specified source using default settings._@param primarySource the primary source to load_@param args the application arguments (usually passed from a Java main method)_@return the running {@link ApplicationContext};public static ConfigurableApplicationContext run(Class<?> primarySource,_			String... args) {_		return run(new Class<?>[] { primarySource }, args)__	};static,helper,that,can,be,used,to,run,a,link,spring,application,from,the,specified,source,using,default,settings,param,primary,source,the,primary,source,to,load,param,args,the,application,arguments,usually,passed,from,a,java,main,method,return,the,running,link,application,context;public,static,configurable,application,context,run,class,primary,source,string,args,return,run,new,class,primary,source,args
SpringApplication -> public static ConfigurableApplicationContext run(Class<?> primarySource, 			String... args);1515670013;Static helper that can be used to run a {@link SpringApplication} from the_specified source using default settings._@param primarySource the primary source to load_@param args the application arguments (usually passed from a Java main method)_@return the running {@link ApplicationContext};public static ConfigurableApplicationContext run(Class<?> primarySource,_			String... args) {_		return run(new Class<?>[] { primarySource }, args)__	};static,helper,that,can,be,used,to,run,a,link,spring,application,from,the,specified,source,using,default,settings,param,primary,source,the,primary,source,to,load,param,args,the,application,arguments,usually,passed,from,a,java,main,method,return,the,running,link,application,context;public,static,configurable,application,context,run,class,primary,source,string,args,return,run,new,class,primary,source,args
SpringApplication -> public static ConfigurableApplicationContext run(Class<?> primarySource, 			String... args);1519362690;Static helper that can be used to run a {@link SpringApplication} from the_specified source using default settings._@param primarySource the primary source to load_@param args the application arguments (usually passed from a Java main method)_@return the running {@link ApplicationContext};public static ConfigurableApplicationContext run(Class<?> primarySource,_			String... args) {_		return run(new Class<?>[] { primarySource }, args)__	};static,helper,that,can,be,used,to,run,a,link,spring,application,from,the,specified,source,using,default,settings,param,primary,source,the,primary,source,to,load,param,args,the,application,arguments,usually,passed,from,a,java,main,method,return,the,running,link,application,context;public,static,configurable,application,context,run,class,primary,source,string,args,return,run,new,class,primary,source,args
SpringApplication -> public static ConfigurableApplicationContext run(Class<?> primarySource, 			String... args);1522251721;Static helper that can be used to run a {@link SpringApplication} from the_specified source using default settings._@param primarySource the primary source to load_@param args the application arguments (usually passed from a Java main method)_@return the running {@link ApplicationContext};public static ConfigurableApplicationContext run(Class<?> primarySource,_			String... args) {_		return run(new Class<?>[] { primarySource }, args)__	};static,helper,that,can,be,used,to,run,a,link,spring,application,from,the,specified,source,using,default,settings,param,primary,source,the,primary,source,to,load,param,args,the,application,arguments,usually,passed,from,a,java,main,method,return,the,running,link,application,context;public,static,configurable,application,context,run,class,primary,source,string,args,return,run,new,class,primary,source,args
SpringApplication -> public static ConfigurableApplicationContext run(Class<?> primarySource, 			String... args);1525376698;Static helper that can be used to run a {@link SpringApplication} from the_specified source using default settings._@param primarySource the primary source to load_@param args the application arguments (usually passed from a Java main method)_@return the running {@link ApplicationContext};public static ConfigurableApplicationContext run(Class<?> primarySource,_			String... args) {_		return run(new Class<?>[] { primarySource }, args)__	};static,helper,that,can,be,used,to,run,a,link,spring,application,from,the,specified,source,using,default,settings,param,primary,source,the,primary,source,to,load,param,args,the,application,arguments,usually,passed,from,a,java,main,method,return,the,running,link,application,context;public,static,configurable,application,context,run,class,primary,source,string,args,return,run,new,class,primary,source,args
SpringApplication -> public static ConfigurableApplicationContext run(Class<?> primarySource, 			String... args);1525416882;Static helper that can be used to run a {@link SpringApplication} from the_specified source using default settings._@param primarySource the primary source to load_@param args the application arguments (usually passed from a Java main method)_@return the running {@link ApplicationContext};public static ConfigurableApplicationContext run(Class<?> primarySource,_			String... args) {_		return run(new Class<?>[] { primarySource }, args)__	};static,helper,that,can,be,used,to,run,a,link,spring,application,from,the,specified,source,using,default,settings,param,primary,source,the,primary,source,to,load,param,args,the,application,arguments,usually,passed,from,a,java,main,method,return,the,running,link,application,context;public,static,configurable,application,context,run,class,primary,source,string,args,return,run,new,class,primary,source,args
SpringApplication -> public static ConfigurableApplicationContext run(Class<?> primarySource, 			String... args);1526993305;Static helper that can be used to run a {@link SpringApplication} from the_specified source using default settings._@param primarySource the primary source to load_@param args the application arguments (usually passed from a Java main method)_@return the running {@link ApplicationContext};public static ConfigurableApplicationContext run(Class<?> primarySource,_			String... args) {_		return run(new Class<?>[] { primarySource }, args)__	};static,helper,that,can,be,used,to,run,a,link,spring,application,from,the,specified,source,using,default,settings,param,primary,source,the,primary,source,to,load,param,args,the,application,arguments,usually,passed,from,a,java,main,method,return,the,running,link,application,context;public,static,configurable,application,context,run,class,primary,source,string,args,return,run,new,class,primary,source,args
SpringApplication -> public static ConfigurableApplicationContext run(Class<?> primarySource, 			String... args);1529485904;Static helper that can be used to run a {@link SpringApplication} from the_specified source using default settings._@param primarySource the primary source to load_@param args the application arguments (usually passed from a Java main method)_@return the running {@link ApplicationContext};public static ConfigurableApplicationContext run(Class<?> primarySource,_			String... args) {_		return run(new Class<?>[] { primarySource }, args)__	};static,helper,that,can,be,used,to,run,a,link,spring,application,from,the,specified,source,using,default,settings,param,primary,source,the,primary,source,to,load,param,args,the,application,arguments,usually,passed,from,a,java,main,method,return,the,running,link,application,context;public,static,configurable,application,context,run,class,primary,source,string,args,return,run,new,class,primary,source,args
SpringApplication -> public static ConfigurableApplicationContext run(Class<?> primarySource, 			String... args);1531140616;Static helper that can be used to run a {@link SpringApplication} from the_specified source using default settings._@param primarySource the primary source to load_@param args the application arguments (usually passed from a Java main method)_@return the running {@link ApplicationContext};public static ConfigurableApplicationContext run(Class<?> primarySource,_			String... args) {_		return run(new Class<?>[] { primarySource }, args)__	};static,helper,that,can,be,used,to,run,a,link,spring,application,from,the,specified,source,using,default,settings,param,primary,source,the,primary,source,to,load,param,args,the,application,arguments,usually,passed,from,a,java,main,method,return,the,running,link,application,context;public,static,configurable,application,context,run,class,primary,source,string,args,return,run,new,class,primary,source,args
SpringApplication -> public static ConfigurableApplicationContext run(Class<?> primarySource, 			String... args);1531155529;Static helper that can be used to run a {@link SpringApplication} from the_specified source using default settings._@param primarySource the primary source to load_@param args the application arguments (usually passed from a Java main method)_@return the running {@link ApplicationContext};public static ConfigurableApplicationContext run(Class<?> primarySource,_			String... args) {_		return run(new Class<?>[] { primarySource }, args)__	};static,helper,that,can,be,used,to,run,a,link,spring,application,from,the,specified,source,using,default,settings,param,primary,source,the,primary,source,to,load,param,args,the,application,arguments,usually,passed,from,a,java,main,method,return,the,running,link,application,context;public,static,configurable,application,context,run,class,primary,source,string,args,return,run,new,class,primary,source,args
SpringApplication -> public static ConfigurableApplicationContext run(Class<?> primarySource, 			String... args);1531222098;Static helper that can be used to run a {@link SpringApplication} from the_specified source using default settings._@param primarySource the primary source to load_@param args the application arguments (usually passed from a Java main method)_@return the running {@link ApplicationContext};public static ConfigurableApplicationContext run(Class<?> primarySource,_			String... args) {_		return run(new Class<?>[] { primarySource }, args)__	};static,helper,that,can,be,used,to,run,a,link,spring,application,from,the,specified,source,using,default,settings,param,primary,source,the,primary,source,to,load,param,args,the,application,arguments,usually,passed,from,a,java,main,method,return,the,running,link,application,context;public,static,configurable,application,context,run,class,primary,source,string,args,return,run,new,class,primary,source,args
SpringApplication -> public static ConfigurableApplicationContext run(Class<?> primarySource, 			String... args);1532738143;Static helper that can be used to run a {@link SpringApplication} from the_specified source using default settings._@param primarySource the primary source to load_@param args the application arguments (usually passed from a Java main method)_@return the running {@link ApplicationContext};public static ConfigurableApplicationContext run(Class<?> primarySource,_			String... args) {_		return run(new Class<?>[] { primarySource }, args)__	};static,helper,that,can,be,used,to,run,a,link,spring,application,from,the,specified,source,using,default,settings,param,primary,source,the,primary,source,to,load,param,args,the,application,arguments,usually,passed,from,a,java,main,method,return,the,running,link,application,context;public,static,configurable,application,context,run,class,primary,source,string,args,return,run,new,class,primary,source,args
SpringApplication -> public static ConfigurableApplicationContext run(Class<?> primarySource, 			String... args);1534188228;Static helper that can be used to run a {@link SpringApplication} from the_specified source using default settings._@param primarySource the primary source to load_@param args the application arguments (usually passed from a Java main method)_@return the running {@link ApplicationContext};public static ConfigurableApplicationContext run(Class<?> primarySource,_			String... args) {_		return run(new Class<?>[] { primarySource }, args)__	};static,helper,that,can,be,used,to,run,a,link,spring,application,from,the,specified,source,using,default,settings,param,primary,source,the,primary,source,to,load,param,args,the,application,arguments,usually,passed,from,a,java,main,method,return,the,running,link,application,context;public,static,configurable,application,context,run,class,primary,source,string,args,return,run,new,class,primary,source,args
SpringApplication -> public static ConfigurableApplicationContext run(Class<?> primarySource, 			String... args);1535104170;Static helper that can be used to run a {@link SpringApplication} from the_specified source using default settings._@param primarySource the primary source to load_@param args the application arguments (usually passed from a Java main method)_@return the running {@link ApplicationContext};public static ConfigurableApplicationContext run(Class<?> primarySource,_			String... args) {_		return run(new Class<?>[] { primarySource }, args)__	};static,helper,that,can,be,used,to,run,a,link,spring,application,from,the,specified,source,using,default,settings,param,primary,source,the,primary,source,to,load,param,args,the,application,arguments,usually,passed,from,a,java,main,method,return,the,running,link,application,context;public,static,configurable,application,context,run,class,primary,source,string,args,return,run,new,class,primary,source,args
SpringApplication -> public static ConfigurableApplicationContext run(Class<?> primarySource, 			String... args);1536701067;Static helper that can be used to run a {@link SpringApplication} from the_specified source using default settings._@param primarySource the primary source to load_@param args the application arguments (usually passed from a Java main method)_@return the running {@link ApplicationContext};public static ConfigurableApplicationContext run(Class<?> primarySource,_			String... args) {_		return run(new Class<?>[] { primarySource }, args)__	};static,helper,that,can,be,used,to,run,a,link,spring,application,from,the,specified,source,using,default,settings,param,primary,source,the,primary,source,to,load,param,args,the,application,arguments,usually,passed,from,a,java,main,method,return,the,running,link,application,context;public,static,configurable,application,context,run,class,primary,source,string,args,return,run,new,class,primary,source,args
SpringApplication -> public static ConfigurableApplicationContext run(Class<?> primarySource, 			String... args);1538570355;Static helper that can be used to run a {@link SpringApplication} from the_specified source using default settings._@param primarySource the primary source to load_@param args the application arguments (usually passed from a Java main method)_@return the running {@link ApplicationContext};public static ConfigurableApplicationContext run(Class<?> primarySource,_			String... args) {_		return run(new Class<?>[] { primarySource }, args)__	};static,helper,that,can,be,used,to,run,a,link,spring,application,from,the,specified,source,using,default,settings,param,primary,source,the,primary,source,to,load,param,args,the,application,arguments,usually,passed,from,a,java,main,method,return,the,running,link,application,context;public,static,configurable,application,context,run,class,primary,source,string,args,return,run,new,class,primary,source,args
SpringApplication -> public static ConfigurableApplicationContext run(Class<?> primarySource, 			String... args);1538707540;Static helper that can be used to run a {@link SpringApplication} from the_specified source using default settings._@param primarySource the primary source to load_@param args the application arguments (usually passed from a Java main method)_@return the running {@link ApplicationContext};public static ConfigurableApplicationContext run(Class<?> primarySource,_			String... args) {_		return run(new Class<?>[] { primarySource }, args)__	};static,helper,that,can,be,used,to,run,a,link,spring,application,from,the,specified,source,using,default,settings,param,primary,source,the,primary,source,to,load,param,args,the,application,arguments,usually,passed,from,a,java,main,method,return,the,running,link,application,context;public,static,configurable,application,context,run,class,primary,source,string,args,return,run,new,class,primary,source,args
SpringApplication -> public static ConfigurableApplicationContext run(Class<?> primarySource, 			String... args);1538750610;Static helper that can be used to run a {@link SpringApplication} from the_specified source using default settings._@param primarySource the primary source to load_@param args the application arguments (usually passed from a Java main method)_@return the running {@link ApplicationContext};public static ConfigurableApplicationContext run(Class<?> primarySource,_			String... args) {_		return run(new Class<?>[] { primarySource }, args)__	};static,helper,that,can,be,used,to,run,a,link,spring,application,from,the,specified,source,using,default,settings,param,primary,source,the,primary,source,to,load,param,args,the,application,arguments,usually,passed,from,a,java,main,method,return,the,running,link,application,context;public,static,configurable,application,context,run,class,primary,source,string,args,return,run,new,class,primary,source,args
SpringApplication -> public static ConfigurableApplicationContext run(Class<?> primarySource, 			String... args);1538771652;Static helper that can be used to run a {@link SpringApplication} from the_specified source using default settings._@param primarySource the primary source to load_@param args the application arguments (usually passed from a Java main method)_@return the running {@link ApplicationContext};public static ConfigurableApplicationContext run(Class<?> primarySource,_			String... args) {_		return run(new Class<?>[] { primarySource }, args)__	};static,helper,that,can,be,used,to,run,a,link,spring,application,from,the,specified,source,using,default,settings,param,primary,source,the,primary,source,to,load,param,args,the,application,arguments,usually,passed,from,a,java,main,method,return,the,running,link,application,context;public,static,configurable,application,context,run,class,primary,source,string,args,return,run,new,class,primary,source,args
SpringApplication -> public static ConfigurableApplicationContext run(Class<?> primarySource, 			String... args);1540419762;Static helper that can be used to run a {@link SpringApplication} from the_specified source using default settings._@param primarySource the primary source to load_@param args the application arguments (usually passed from a Java main method)_@return the running {@link ApplicationContext};public static ConfigurableApplicationContext run(Class<?> primarySource,_			String... args) {_		return run(new Class<?>[] { primarySource }, args)__	};static,helper,that,can,be,used,to,run,a,link,spring,application,from,the,specified,source,using,default,settings,param,primary,source,the,primary,source,to,load,param,args,the,application,arguments,usually,passed,from,a,java,main,method,return,the,running,link,application,context;public,static,configurable,application,context,run,class,primary,source,string,args,return,run,new,class,primary,source,args
SpringApplication -> public static ConfigurableApplicationContext run(Class<?> primarySource, 			String... args);1541060131;Static helper that can be used to run a {@link SpringApplication} from the_specified source using default settings._@param primarySource the primary source to load_@param args the application arguments (usually passed from a Java main method)_@return the running {@link ApplicationContext};public static ConfigurableApplicationContext run(Class<?> primarySource,_			String... args) {_		return run(new Class<?>[] { primarySource }, args)__	};static,helper,that,can,be,used,to,run,a,link,spring,application,from,the,specified,source,using,default,settings,param,primary,source,the,primary,source,to,load,param,args,the,application,arguments,usually,passed,from,a,java,main,method,return,the,running,link,application,context;public,static,configurable,application,context,run,class,primary,source,string,args,return,run,new,class,primary,source,args
SpringApplication -> public static ConfigurableApplicationContext run(Class<?> primarySource, 			String... args);1546943477;Static helper that can be used to run a {@link SpringApplication} from the_specified source using default settings._@param primarySource the primary source to load_@param args the application arguments (usually passed from a Java main method)_@return the running {@link ApplicationContext};public static ConfigurableApplicationContext run(Class<?> primarySource,_			String... args) {_		return run(new Class<?>[] { primarySource }, args)__	};static,helper,that,can,be,used,to,run,a,link,spring,application,from,the,specified,source,using,default,settings,param,primary,source,the,primary,source,to,load,param,args,the,application,arguments,usually,passed,from,a,java,main,method,return,the,running,link,application,context;public,static,configurable,application,context,run,class,primary,source,string,args,return,run,new,class,primary,source,args
SpringApplication -> public static ConfigurableApplicationContext run(Class<?> primarySource, 			String... args);1549791353;Static helper that can be used to run a {@link SpringApplication} from the_specified source using default settings._@param primarySource the primary source to load_@param args the application arguments (usually passed from a Java main method)_@return the running {@link ApplicationContext};public static ConfigurableApplicationContext run(Class<?> primarySource,_			String... args) {_		return run(new Class<?>[] { primarySource }, args)__	};static,helper,that,can,be,used,to,run,a,link,spring,application,from,the,specified,source,using,default,settings,param,primary,source,the,primary,source,to,load,param,args,the,application,arguments,usually,passed,from,a,java,main,method,return,the,running,link,application,context;public,static,configurable,application,context,run,class,primary,source,string,args,return,run,new,class,primary,source,args
SpringApplication -> public static ConfigurableApplicationContext run(Class<?> primarySource, 			String... args);1550148109;Static helper that can be used to run a {@link SpringApplication} from the_specified source using default settings._@param primarySource the primary source to load_@param args the application arguments (usually passed from a Java main method)_@return the running {@link ApplicationContext};public static ConfigurableApplicationContext run(Class<?> primarySource,_			String... args) {_		return run(new Class<?>[] { primarySource }, args)__	};static,helper,that,can,be,used,to,run,a,link,spring,application,from,the,specified,source,using,default,settings,param,primary,source,the,primary,source,to,load,param,args,the,application,arguments,usually,passed,from,a,java,main,method,return,the,running,link,application,context;public,static,configurable,application,context,run,class,primary,source,string,args,return,run,new,class,primary,source,args
SpringApplication -> public ClassLoader getClassLoader();1507173536;Either the ClassLoader that will be used in the ApplicationContext (if_{@link #setResourceLoader(ResourceLoader) resourceLoader} is set, or the context_class loader (if not null), or the loader of the Spring {@link ClassUtils} class._@return a ClassLoader (never null);public ClassLoader getClassLoader() {_		if (this.resourceLoader != null) {_			return this.resourceLoader.getClassLoader()__		}_		return ClassUtils.getDefaultClassLoader()__	};either,the,class,loader,that,will,be,used,in,the,application,context,if,link,set,resource,loader,resource,loader,resource,loader,is,set,or,the,context,class,loader,if,not,null,or,the,loader,of,the,spring,link,class,utils,class,return,a,class,loader,never,null;public,class,loader,get,class,loader,if,this,resource,loader,null,return,this,resource,loader,get,class,loader,return,class,utils,get,default,class,loader
SpringApplication -> public ClassLoader getClassLoader();1509381678;Either the ClassLoader that will be used in the ApplicationContext (if_{@link #setResourceLoader(ResourceLoader) resourceLoader} is set, or the context_class loader (if not null), or the loader of the Spring {@link ClassUtils} class._@return a ClassLoader (never null);public ClassLoader getClassLoader() {_		if (this.resourceLoader != null) {_			return this.resourceLoader.getClassLoader()__		}_		return ClassUtils.getDefaultClassLoader()__	};either,the,class,loader,that,will,be,used,in,the,application,context,if,link,set,resource,loader,resource,loader,resource,loader,is,set,or,the,context,class,loader,if,not,null,or,the,loader,of,the,spring,link,class,utils,class,return,a,class,loader,never,null;public,class,loader,get,class,loader,if,this,resource,loader,null,return,this,resource,loader,get,class,loader,return,class,utils,get,default,class,loader
SpringApplication -> public ClassLoader getClassLoader();1510995225;Either the ClassLoader that will be used in the ApplicationContext (if_{@link #setResourceLoader(ResourceLoader) resourceLoader} is set, or the context_class loader (if not null), or the loader of the Spring {@link ClassUtils} class._@return a ClassLoader (never null);public ClassLoader getClassLoader() {_		if (this.resourceLoader != null) {_			return this.resourceLoader.getClassLoader()__		}_		return ClassUtils.getDefaultClassLoader()__	};either,the,class,loader,that,will,be,used,in,the,application,context,if,link,set,resource,loader,resource,loader,resource,loader,is,set,or,the,context,class,loader,if,not,null,or,the,loader,of,the,spring,link,class,utils,class,return,a,class,loader,never,null;public,class,loader,get,class,loader,if,this,resource,loader,null,return,this,resource,loader,get,class,loader,return,class,utils,get,default,class,loader
SpringApplication -> public ClassLoader getClassLoader();1515670013;Either the ClassLoader that will be used in the ApplicationContext (if_{@link #setResourceLoader(ResourceLoader) resourceLoader} is set, or the context_class loader (if not null), or the loader of the Spring {@link ClassUtils} class._@return a ClassLoader (never null);public ClassLoader getClassLoader() {_		if (this.resourceLoader != null) {_			return this.resourceLoader.getClassLoader()__		}_		return ClassUtils.getDefaultClassLoader()__	};either,the,class,loader,that,will,be,used,in,the,application,context,if,link,set,resource,loader,resource,loader,resource,loader,is,set,or,the,context,class,loader,if,not,null,or,the,loader,of,the,spring,link,class,utils,class,return,a,class,loader,never,null;public,class,loader,get,class,loader,if,this,resource,loader,null,return,this,resource,loader,get,class,loader,return,class,utils,get,default,class,loader
SpringApplication -> public ClassLoader getClassLoader();1519362690;Either the ClassLoader that will be used in the ApplicationContext (if_{@link #setResourceLoader(ResourceLoader) resourceLoader} is set, or the context_class loader (if not null), or the loader of the Spring {@link ClassUtils} class._@return a ClassLoader (never null);public ClassLoader getClassLoader() {_		if (this.resourceLoader != null) {_			return this.resourceLoader.getClassLoader()__		}_		return ClassUtils.getDefaultClassLoader()__	};either,the,class,loader,that,will,be,used,in,the,application,context,if,link,set,resource,loader,resource,loader,resource,loader,is,set,or,the,context,class,loader,if,not,null,or,the,loader,of,the,spring,link,class,utils,class,return,a,class,loader,never,null;public,class,loader,get,class,loader,if,this,resource,loader,null,return,this,resource,loader,get,class,loader,return,class,utils,get,default,class,loader
SpringApplication -> public ClassLoader getClassLoader();1522251721;Either the ClassLoader that will be used in the ApplicationContext (if_{@link #setResourceLoader(ResourceLoader) resourceLoader} is set, or the context_class loader (if not null), or the loader of the Spring {@link ClassUtils} class._@return a ClassLoader (never null);public ClassLoader getClassLoader() {_		if (this.resourceLoader != null) {_			return this.resourceLoader.getClassLoader()__		}_		return ClassUtils.getDefaultClassLoader()__	};either,the,class,loader,that,will,be,used,in,the,application,context,if,link,set,resource,loader,resource,loader,resource,loader,is,set,or,the,context,class,loader,if,not,null,or,the,loader,of,the,spring,link,class,utils,class,return,a,class,loader,never,null;public,class,loader,get,class,loader,if,this,resource,loader,null,return,this,resource,loader,get,class,loader,return,class,utils,get,default,class,loader
SpringApplication -> public ClassLoader getClassLoader();1525376698;Either the ClassLoader that will be used in the ApplicationContext (if_{@link #setResourceLoader(ResourceLoader) resourceLoader} is set, or the context_class loader (if not null), or the loader of the Spring {@link ClassUtils} class._@return a ClassLoader (never null);public ClassLoader getClassLoader() {_		if (this.resourceLoader != null) {_			return this.resourceLoader.getClassLoader()__		}_		return ClassUtils.getDefaultClassLoader()__	};either,the,class,loader,that,will,be,used,in,the,application,context,if,link,set,resource,loader,resource,loader,resource,loader,is,set,or,the,context,class,loader,if,not,null,or,the,loader,of,the,spring,link,class,utils,class,return,a,class,loader,never,null;public,class,loader,get,class,loader,if,this,resource,loader,null,return,this,resource,loader,get,class,loader,return,class,utils,get,default,class,loader
SpringApplication -> public ClassLoader getClassLoader();1525416882;Either the ClassLoader that will be used in the ApplicationContext (if_{@link #setResourceLoader(ResourceLoader) resourceLoader} is set, or the context_class loader (if not null), or the loader of the Spring {@link ClassUtils} class._@return a ClassLoader (never null);public ClassLoader getClassLoader() {_		if (this.resourceLoader != null) {_			return this.resourceLoader.getClassLoader()__		}_		return ClassUtils.getDefaultClassLoader()__	};either,the,class,loader,that,will,be,used,in,the,application,context,if,link,set,resource,loader,resource,loader,resource,loader,is,set,or,the,context,class,loader,if,not,null,or,the,loader,of,the,spring,link,class,utils,class,return,a,class,loader,never,null;public,class,loader,get,class,loader,if,this,resource,loader,null,return,this,resource,loader,get,class,loader,return,class,utils,get,default,class,loader
SpringApplication -> public ClassLoader getClassLoader();1526993305;Either the ClassLoader that will be used in the ApplicationContext (if_{@link #setResourceLoader(ResourceLoader) resourceLoader} is set, or the context_class loader (if not null), or the loader of the Spring {@link ClassUtils} class._@return a ClassLoader (never null);public ClassLoader getClassLoader() {_		if (this.resourceLoader != null) {_			return this.resourceLoader.getClassLoader()__		}_		return ClassUtils.getDefaultClassLoader()__	};either,the,class,loader,that,will,be,used,in,the,application,context,if,link,set,resource,loader,resource,loader,resource,loader,is,set,or,the,context,class,loader,if,not,null,or,the,loader,of,the,spring,link,class,utils,class,return,a,class,loader,never,null;public,class,loader,get,class,loader,if,this,resource,loader,null,return,this,resource,loader,get,class,loader,return,class,utils,get,default,class,loader
SpringApplication -> public ClassLoader getClassLoader();1529485904;Either the ClassLoader that will be used in the ApplicationContext (if_{@link #setResourceLoader(ResourceLoader) resourceLoader} is set, or the context_class loader (if not null), or the loader of the Spring {@link ClassUtils} class._@return a ClassLoader (never null);public ClassLoader getClassLoader() {_		if (this.resourceLoader != null) {_			return this.resourceLoader.getClassLoader()__		}_		return ClassUtils.getDefaultClassLoader()__	};either,the,class,loader,that,will,be,used,in,the,application,context,if,link,set,resource,loader,resource,loader,resource,loader,is,set,or,the,context,class,loader,if,not,null,or,the,loader,of,the,spring,link,class,utils,class,return,a,class,loader,never,null;public,class,loader,get,class,loader,if,this,resource,loader,null,return,this,resource,loader,get,class,loader,return,class,utils,get,default,class,loader
SpringApplication -> public ClassLoader getClassLoader();1531140616;Either the ClassLoader that will be used in the ApplicationContext (if_{@link #setResourceLoader(ResourceLoader) resourceLoader} is set, or the context_class loader (if not null), or the loader of the Spring {@link ClassUtils} class._@return a ClassLoader (never null);public ClassLoader getClassLoader() {_		if (this.resourceLoader != null) {_			return this.resourceLoader.getClassLoader()__		}_		return ClassUtils.getDefaultClassLoader()__	};either,the,class,loader,that,will,be,used,in,the,application,context,if,link,set,resource,loader,resource,loader,resource,loader,is,set,or,the,context,class,loader,if,not,null,or,the,loader,of,the,spring,link,class,utils,class,return,a,class,loader,never,null;public,class,loader,get,class,loader,if,this,resource,loader,null,return,this,resource,loader,get,class,loader,return,class,utils,get,default,class,loader
SpringApplication -> public ClassLoader getClassLoader();1531155529;Either the ClassLoader that will be used in the ApplicationContext (if_{@link #setResourceLoader(ResourceLoader) resourceLoader} is set, or the context_class loader (if not null), or the loader of the Spring {@link ClassUtils} class._@return a ClassLoader (never null);public ClassLoader getClassLoader() {_		if (this.resourceLoader != null) {_			return this.resourceLoader.getClassLoader()__		}_		return ClassUtils.getDefaultClassLoader()__	};either,the,class,loader,that,will,be,used,in,the,application,context,if,link,set,resource,loader,resource,loader,resource,loader,is,set,or,the,context,class,loader,if,not,null,or,the,loader,of,the,spring,link,class,utils,class,return,a,class,loader,never,null;public,class,loader,get,class,loader,if,this,resource,loader,null,return,this,resource,loader,get,class,loader,return,class,utils,get,default,class,loader
SpringApplication -> public ClassLoader getClassLoader();1531222098;Either the ClassLoader that will be used in the ApplicationContext (if_{@link #setResourceLoader(ResourceLoader) resourceLoader} is set, or the context_class loader (if not null), or the loader of the Spring {@link ClassUtils} class._@return a ClassLoader (never null);public ClassLoader getClassLoader() {_		if (this.resourceLoader != null) {_			return this.resourceLoader.getClassLoader()__		}_		return ClassUtils.getDefaultClassLoader()__	};either,the,class,loader,that,will,be,used,in,the,application,context,if,link,set,resource,loader,resource,loader,resource,loader,is,set,or,the,context,class,loader,if,not,null,or,the,loader,of,the,spring,link,class,utils,class,return,a,class,loader,never,null;public,class,loader,get,class,loader,if,this,resource,loader,null,return,this,resource,loader,get,class,loader,return,class,utils,get,default,class,loader
SpringApplication -> public ClassLoader getClassLoader();1532738143;Either the ClassLoader that will be used in the ApplicationContext (if_{@link #setResourceLoader(ResourceLoader) resourceLoader} is set, or the context_class loader (if not null), or the loader of the Spring {@link ClassUtils} class._@return a ClassLoader (never null);public ClassLoader getClassLoader() {_		if (this.resourceLoader != null) {_			return this.resourceLoader.getClassLoader()__		}_		return ClassUtils.getDefaultClassLoader()__	};either,the,class,loader,that,will,be,used,in,the,application,context,if,link,set,resource,loader,resource,loader,resource,loader,is,set,or,the,context,class,loader,if,not,null,or,the,loader,of,the,spring,link,class,utils,class,return,a,class,loader,never,null;public,class,loader,get,class,loader,if,this,resource,loader,null,return,this,resource,loader,get,class,loader,return,class,utils,get,default,class,loader
SpringApplication -> public ClassLoader getClassLoader();1534188228;Either the ClassLoader that will be used in the ApplicationContext (if_{@link #setResourceLoader(ResourceLoader) resourceLoader} is set, or the context_class loader (if not null), or the loader of the Spring {@link ClassUtils} class._@return a ClassLoader (never null);public ClassLoader getClassLoader() {_		if (this.resourceLoader != null) {_			return this.resourceLoader.getClassLoader()__		}_		return ClassUtils.getDefaultClassLoader()__	};either,the,class,loader,that,will,be,used,in,the,application,context,if,link,set,resource,loader,resource,loader,resource,loader,is,set,or,the,context,class,loader,if,not,null,or,the,loader,of,the,spring,link,class,utils,class,return,a,class,loader,never,null;public,class,loader,get,class,loader,if,this,resource,loader,null,return,this,resource,loader,get,class,loader,return,class,utils,get,default,class,loader
SpringApplication -> public ClassLoader getClassLoader();1535104170;Either the ClassLoader that will be used in the ApplicationContext (if_{@link #setResourceLoader(ResourceLoader) resourceLoader} is set, or the context_class loader (if not null), or the loader of the Spring {@link ClassUtils} class._@return a ClassLoader (never null);public ClassLoader getClassLoader() {_		if (this.resourceLoader != null) {_			return this.resourceLoader.getClassLoader()__		}_		return ClassUtils.getDefaultClassLoader()__	};either,the,class,loader,that,will,be,used,in,the,application,context,if,link,set,resource,loader,resource,loader,resource,loader,is,set,or,the,context,class,loader,if,not,null,or,the,loader,of,the,spring,link,class,utils,class,return,a,class,loader,never,null;public,class,loader,get,class,loader,if,this,resource,loader,null,return,this,resource,loader,get,class,loader,return,class,utils,get,default,class,loader
SpringApplication -> public ClassLoader getClassLoader();1536701067;Either the ClassLoader that will be used in the ApplicationContext (if_{@link #setResourceLoader(ResourceLoader) resourceLoader} is set, or the context_class loader (if not null), or the loader of the Spring {@link ClassUtils} class._@return a ClassLoader (never null);public ClassLoader getClassLoader() {_		if (this.resourceLoader != null) {_			return this.resourceLoader.getClassLoader()__		}_		return ClassUtils.getDefaultClassLoader()__	};either,the,class,loader,that,will,be,used,in,the,application,context,if,link,set,resource,loader,resource,loader,resource,loader,is,set,or,the,context,class,loader,if,not,null,or,the,loader,of,the,spring,link,class,utils,class,return,a,class,loader,never,null;public,class,loader,get,class,loader,if,this,resource,loader,null,return,this,resource,loader,get,class,loader,return,class,utils,get,default,class,loader
SpringApplication -> public ClassLoader getClassLoader();1538570355;Either the ClassLoader that will be used in the ApplicationContext (if_{@link #setResourceLoader(ResourceLoader) resourceLoader} is set, or the context_class loader (if not null), or the loader of the Spring {@link ClassUtils} class._@return a ClassLoader (never null);public ClassLoader getClassLoader() {_		if (this.resourceLoader != null) {_			return this.resourceLoader.getClassLoader()__		}_		return ClassUtils.getDefaultClassLoader()__	};either,the,class,loader,that,will,be,used,in,the,application,context,if,link,set,resource,loader,resource,loader,resource,loader,is,set,or,the,context,class,loader,if,not,null,or,the,loader,of,the,spring,link,class,utils,class,return,a,class,loader,never,null;public,class,loader,get,class,loader,if,this,resource,loader,null,return,this,resource,loader,get,class,loader,return,class,utils,get,default,class,loader
SpringApplication -> public ClassLoader getClassLoader();1538707540;Either the ClassLoader that will be used in the ApplicationContext (if_{@link #setResourceLoader(ResourceLoader) resourceLoader} is set, or the context_class loader (if not null), or the loader of the Spring {@link ClassUtils} class._@return a ClassLoader (never null);public ClassLoader getClassLoader() {_		if (this.resourceLoader != null) {_			return this.resourceLoader.getClassLoader()__		}_		return ClassUtils.getDefaultClassLoader()__	};either,the,class,loader,that,will,be,used,in,the,application,context,if,link,set,resource,loader,resource,loader,resource,loader,is,set,or,the,context,class,loader,if,not,null,or,the,loader,of,the,spring,link,class,utils,class,return,a,class,loader,never,null;public,class,loader,get,class,loader,if,this,resource,loader,null,return,this,resource,loader,get,class,loader,return,class,utils,get,default,class,loader
SpringApplication -> public ClassLoader getClassLoader();1538750610;Either the ClassLoader that will be used in the ApplicationContext (if_{@link #setResourceLoader(ResourceLoader) resourceLoader} is set, or the context_class loader (if not null), or the loader of the Spring {@link ClassUtils} class._@return a ClassLoader (never null);public ClassLoader getClassLoader() {_		if (this.resourceLoader != null) {_			return this.resourceLoader.getClassLoader()__		}_		return ClassUtils.getDefaultClassLoader()__	};either,the,class,loader,that,will,be,used,in,the,application,context,if,link,set,resource,loader,resource,loader,resource,loader,is,set,or,the,context,class,loader,if,not,null,or,the,loader,of,the,spring,link,class,utils,class,return,a,class,loader,never,null;public,class,loader,get,class,loader,if,this,resource,loader,null,return,this,resource,loader,get,class,loader,return,class,utils,get,default,class,loader
SpringApplication -> public ClassLoader getClassLoader();1538771652;Either the ClassLoader that will be used in the ApplicationContext (if_{@link #setResourceLoader(ResourceLoader) resourceLoader} is set, or the context_class loader (if not null), or the loader of the Spring {@link ClassUtils} class._@return a ClassLoader (never null);public ClassLoader getClassLoader() {_		if (this.resourceLoader != null) {_			return this.resourceLoader.getClassLoader()__		}_		return ClassUtils.getDefaultClassLoader()__	};either,the,class,loader,that,will,be,used,in,the,application,context,if,link,set,resource,loader,resource,loader,resource,loader,is,set,or,the,context,class,loader,if,not,null,or,the,loader,of,the,spring,link,class,utils,class,return,a,class,loader,never,null;public,class,loader,get,class,loader,if,this,resource,loader,null,return,this,resource,loader,get,class,loader,return,class,utils,get,default,class,loader
SpringApplication -> public ClassLoader getClassLoader();1540419762;Either the ClassLoader that will be used in the ApplicationContext (if_{@link #setResourceLoader(ResourceLoader) resourceLoader} is set, or the context_class loader (if not null), or the loader of the Spring {@link ClassUtils} class._@return a ClassLoader (never null);public ClassLoader getClassLoader() {_		if (this.resourceLoader != null) {_			return this.resourceLoader.getClassLoader()__		}_		return ClassUtils.getDefaultClassLoader()__	};either,the,class,loader,that,will,be,used,in,the,application,context,if,link,set,resource,loader,resource,loader,resource,loader,is,set,or,the,context,class,loader,if,not,null,or,the,loader,of,the,spring,link,class,utils,class,return,a,class,loader,never,null;public,class,loader,get,class,loader,if,this,resource,loader,null,return,this,resource,loader,get,class,loader,return,class,utils,get,default,class,loader
SpringApplication -> public ClassLoader getClassLoader();1541060131;Either the ClassLoader that will be used in the ApplicationContext (if_{@link #setResourceLoader(ResourceLoader) resourceLoader} is set, or the context_class loader (if not null), or the loader of the Spring {@link ClassUtils} class._@return a ClassLoader (never null);public ClassLoader getClassLoader() {_		if (this.resourceLoader != null) {_			return this.resourceLoader.getClassLoader()__		}_		return ClassUtils.getDefaultClassLoader()__	};either,the,class,loader,that,will,be,used,in,the,application,context,if,link,set,resource,loader,resource,loader,resource,loader,is,set,or,the,context,class,loader,if,not,null,or,the,loader,of,the,spring,link,class,utils,class,return,a,class,loader,never,null;public,class,loader,get,class,loader,if,this,resource,loader,null,return,this,resource,loader,get,class,loader,return,class,utils,get,default,class,loader
SpringApplication -> public ClassLoader getClassLoader();1546943477;Either the ClassLoader that will be used in the ApplicationContext (if_{@link #setResourceLoader(ResourceLoader) resourceLoader} is set, or the context_class loader (if not null), or the loader of the Spring {@link ClassUtils} class._@return a ClassLoader (never null);public ClassLoader getClassLoader() {_		if (this.resourceLoader != null) {_			return this.resourceLoader.getClassLoader()__		}_		return ClassUtils.getDefaultClassLoader()__	};either,the,class,loader,that,will,be,used,in,the,application,context,if,link,set,resource,loader,resource,loader,resource,loader,is,set,or,the,context,class,loader,if,not,null,or,the,loader,of,the,spring,link,class,utils,class,return,a,class,loader,never,null;public,class,loader,get,class,loader,if,this,resource,loader,null,return,this,resource,loader,get,class,loader,return,class,utils,get,default,class,loader
SpringApplication -> public ClassLoader getClassLoader();1549791353;Either the ClassLoader that will be used in the ApplicationContext (if_{@link #setResourceLoader(ResourceLoader) resourceLoader} is set, or the context_class loader (if not null), or the loader of the Spring {@link ClassUtils} class._@return a ClassLoader (never null);public ClassLoader getClassLoader() {_		if (this.resourceLoader != null) {_			return this.resourceLoader.getClassLoader()__		}_		return ClassUtils.getDefaultClassLoader()__	};either,the,class,loader,that,will,be,used,in,the,application,context,if,link,set,resource,loader,resource,loader,resource,loader,is,set,or,the,context,class,loader,if,not,null,or,the,loader,of,the,spring,link,class,utils,class,return,a,class,loader,never,null;public,class,loader,get,class,loader,if,this,resource,loader,null,return,this,resource,loader,get,class,loader,return,class,utils,get,default,class,loader
SpringApplication -> public ClassLoader getClassLoader();1550148109;Either the ClassLoader that will be used in the ApplicationContext (if_{@link #setResourceLoader(ResourceLoader) resourceLoader} is set, or the context_class loader (if not null), or the loader of the Spring {@link ClassUtils} class._@return a ClassLoader (never null);public ClassLoader getClassLoader() {_		if (this.resourceLoader != null) {_			return this.resourceLoader.getClassLoader()__		}_		return ClassUtils.getDefaultClassLoader()__	};either,the,class,loader,that,will,be,used,in,the,application,context,if,link,set,resource,loader,resource,loader,resource,loader,is,set,or,the,context,class,loader,if,not,null,or,the,loader,of,the,spring,link,class,utils,class,return,a,class,loader,never,null;public,class,loader,get,class,loader,if,this,resource,loader,null,return,this,resource,loader,get,class,loader,return,class,utils,get,default,class,loader
SpringApplication -> public void addPrimarySources(Collection<Class<?>> additionalPrimarySources);1507173536;Add additional items to the primary sources that will be added to an_ApplicationContext when {@link #run(String...)} is called._<p>_The sources here are added to those that were set in the constructor. Most users_should consider using {@link #getSources()}/{@link #setSources(Set)} rather than_calling this method._@param additionalPrimarySources the additional primary sources to add_@see #SpringApplication(Class...)_@see #getSources()_@see #setSources(Set)_@see #getAllSources();public void addPrimarySources(Collection<Class<?>> additionalPrimarySources) {_		this.primarySources.addAll(additionalPrimarySources)__	};add,additional,items,to,the,primary,sources,that,will,be,added,to,an,application,context,when,link,run,string,is,called,p,the,sources,here,are,added,to,those,that,were,set,in,the,constructor,most,users,should,consider,using,link,get,sources,link,set,sources,set,rather,than,calling,this,method,param,additional,primary,sources,the,additional,primary,sources,to,add,see,spring,application,class,see,get,sources,see,set,sources,set,see,get,all,sources;public,void,add,primary,sources,collection,class,additional,primary,sources,this,primary,sources,add,all,additional,primary,sources
SpringApplication -> public void addPrimarySources(Collection<Class<?>> additionalPrimarySources);1509381678;Add additional items to the primary sources that will be added to an_ApplicationContext when {@link #run(String...)} is called._<p>_The sources here are added to those that were set in the constructor. Most users_should consider using {@link #getSources()}/{@link #setSources(Set)} rather than_calling this method._@param additionalPrimarySources the additional primary sources to add_@see #SpringApplication(Class...)_@see #getSources()_@see #setSources(Set)_@see #getAllSources();public void addPrimarySources(Collection<Class<?>> additionalPrimarySources) {_		this.primarySources.addAll(additionalPrimarySources)__	};add,additional,items,to,the,primary,sources,that,will,be,added,to,an,application,context,when,link,run,string,is,called,p,the,sources,here,are,added,to,those,that,were,set,in,the,constructor,most,users,should,consider,using,link,get,sources,link,set,sources,set,rather,than,calling,this,method,param,additional,primary,sources,the,additional,primary,sources,to,add,see,spring,application,class,see,get,sources,see,set,sources,set,see,get,all,sources;public,void,add,primary,sources,collection,class,additional,primary,sources,this,primary,sources,add,all,additional,primary,sources
SpringApplication -> public void addPrimarySources(Collection<Class<?>> additionalPrimarySources);1510995225;Add additional items to the primary sources that will be added to an_ApplicationContext when {@link #run(String...)} is called._<p>_The sources here are added to those that were set in the constructor. Most users_should consider using {@link #getSources()}/{@link #setSources(Set)} rather than_calling this method._@param additionalPrimarySources the additional primary sources to add_@see #SpringApplication(Class...)_@see #getSources()_@see #setSources(Set)_@see #getAllSources();public void addPrimarySources(Collection<Class<?>> additionalPrimarySources) {_		this.primarySources.addAll(additionalPrimarySources)__	};add,additional,items,to,the,primary,sources,that,will,be,added,to,an,application,context,when,link,run,string,is,called,p,the,sources,here,are,added,to,those,that,were,set,in,the,constructor,most,users,should,consider,using,link,get,sources,link,set,sources,set,rather,than,calling,this,method,param,additional,primary,sources,the,additional,primary,sources,to,add,see,spring,application,class,see,get,sources,see,set,sources,set,see,get,all,sources;public,void,add,primary,sources,collection,class,additional,primary,sources,this,primary,sources,add,all,additional,primary,sources
SpringApplication -> public void addPrimarySources(Collection<Class<?>> additionalPrimarySources);1515670013;Add additional items to the primary sources that will be added to an_ApplicationContext when {@link #run(String...)} is called._<p>_The sources here are added to those that were set in the constructor. Most users_should consider using {@link #getSources()}/{@link #setSources(Set)} rather than_calling this method._@param additionalPrimarySources the additional primary sources to add_@see #SpringApplication(Class...)_@see #getSources()_@see #setSources(Set)_@see #getAllSources();public void addPrimarySources(Collection<Class<?>> additionalPrimarySources) {_		this.primarySources.addAll(additionalPrimarySources)__	};add,additional,items,to,the,primary,sources,that,will,be,added,to,an,application,context,when,link,run,string,is,called,p,the,sources,here,are,added,to,those,that,were,set,in,the,constructor,most,users,should,consider,using,link,get,sources,link,set,sources,set,rather,than,calling,this,method,param,additional,primary,sources,the,additional,primary,sources,to,add,see,spring,application,class,see,get,sources,see,set,sources,set,see,get,all,sources;public,void,add,primary,sources,collection,class,additional,primary,sources,this,primary,sources,add,all,additional,primary,sources
SpringApplication -> public void addPrimarySources(Collection<Class<?>> additionalPrimarySources);1519362690;Add additional items to the primary sources that will be added to an_ApplicationContext when {@link #run(String...)} is called._<p>_The sources here are added to those that were set in the constructor. Most users_should consider using {@link #getSources()}/{@link #setSources(Set)} rather than_calling this method._@param additionalPrimarySources the additional primary sources to add_@see #SpringApplication(Class...)_@see #getSources()_@see #setSources(Set)_@see #getAllSources();public void addPrimarySources(Collection<Class<?>> additionalPrimarySources) {_		this.primarySources.addAll(additionalPrimarySources)__	};add,additional,items,to,the,primary,sources,that,will,be,added,to,an,application,context,when,link,run,string,is,called,p,the,sources,here,are,added,to,those,that,were,set,in,the,constructor,most,users,should,consider,using,link,get,sources,link,set,sources,set,rather,than,calling,this,method,param,additional,primary,sources,the,additional,primary,sources,to,add,see,spring,application,class,see,get,sources,see,set,sources,set,see,get,all,sources;public,void,add,primary,sources,collection,class,additional,primary,sources,this,primary,sources,add,all,additional,primary,sources
SpringApplication -> public void addPrimarySources(Collection<Class<?>> additionalPrimarySources);1522251721;Add additional items to the primary sources that will be added to an_ApplicationContext when {@link #run(String...)} is called._<p>_The sources here are added to those that were set in the constructor. Most users_should consider using {@link #getSources()}/{@link #setSources(Set)} rather than_calling this method._@param additionalPrimarySources the additional primary sources to add_@see #SpringApplication(Class...)_@see #getSources()_@see #setSources(Set)_@see #getAllSources();public void addPrimarySources(Collection<Class<?>> additionalPrimarySources) {_		this.primarySources.addAll(additionalPrimarySources)__	};add,additional,items,to,the,primary,sources,that,will,be,added,to,an,application,context,when,link,run,string,is,called,p,the,sources,here,are,added,to,those,that,were,set,in,the,constructor,most,users,should,consider,using,link,get,sources,link,set,sources,set,rather,than,calling,this,method,param,additional,primary,sources,the,additional,primary,sources,to,add,see,spring,application,class,see,get,sources,see,set,sources,set,see,get,all,sources;public,void,add,primary,sources,collection,class,additional,primary,sources,this,primary,sources,add,all,additional,primary,sources
SpringApplication -> public void addPrimarySources(Collection<Class<?>> additionalPrimarySources);1525376698;Add additional items to the primary sources that will be added to an_ApplicationContext when {@link #run(String...)} is called._<p>_The sources here are added to those that were set in the constructor. Most users_should consider using {@link #getSources()}/{@link #setSources(Set)} rather than_calling this method._@param additionalPrimarySources the additional primary sources to add_@see #SpringApplication(Class...)_@see #getSources()_@see #setSources(Set)_@see #getAllSources();public void addPrimarySources(Collection<Class<?>> additionalPrimarySources) {_		this.primarySources.addAll(additionalPrimarySources)__	};add,additional,items,to,the,primary,sources,that,will,be,added,to,an,application,context,when,link,run,string,is,called,p,the,sources,here,are,added,to,those,that,were,set,in,the,constructor,most,users,should,consider,using,link,get,sources,link,set,sources,set,rather,than,calling,this,method,param,additional,primary,sources,the,additional,primary,sources,to,add,see,spring,application,class,see,get,sources,see,set,sources,set,see,get,all,sources;public,void,add,primary,sources,collection,class,additional,primary,sources,this,primary,sources,add,all,additional,primary,sources
SpringApplication -> public void addPrimarySources(Collection<Class<?>> additionalPrimarySources);1525416882;Add additional items to the primary sources that will be added to an_ApplicationContext when {@link #run(String...)} is called._<p>_The sources here are added to those that were set in the constructor. Most users_should consider using {@link #getSources()}/{@link #setSources(Set)} rather than_calling this method._@param additionalPrimarySources the additional primary sources to add_@see #SpringApplication(Class...)_@see #getSources()_@see #setSources(Set)_@see #getAllSources();public void addPrimarySources(Collection<Class<?>> additionalPrimarySources) {_		this.primarySources.addAll(additionalPrimarySources)__	};add,additional,items,to,the,primary,sources,that,will,be,added,to,an,application,context,when,link,run,string,is,called,p,the,sources,here,are,added,to,those,that,were,set,in,the,constructor,most,users,should,consider,using,link,get,sources,link,set,sources,set,rather,than,calling,this,method,param,additional,primary,sources,the,additional,primary,sources,to,add,see,spring,application,class,see,get,sources,see,set,sources,set,see,get,all,sources;public,void,add,primary,sources,collection,class,additional,primary,sources,this,primary,sources,add,all,additional,primary,sources
SpringApplication -> public void addPrimarySources(Collection<Class<?>> additionalPrimarySources);1526993305;Add additional items to the primary sources that will be added to an_ApplicationContext when {@link #run(String...)} is called._<p>_The sources here are added to those that were set in the constructor. Most users_should consider using {@link #getSources()}/{@link #setSources(Set)} rather than_calling this method._@param additionalPrimarySources the additional primary sources to add_@see #SpringApplication(Class...)_@see #getSources()_@see #setSources(Set)_@see #getAllSources();public void addPrimarySources(Collection<Class<?>> additionalPrimarySources) {_		this.primarySources.addAll(additionalPrimarySources)__	};add,additional,items,to,the,primary,sources,that,will,be,added,to,an,application,context,when,link,run,string,is,called,p,the,sources,here,are,added,to,those,that,were,set,in,the,constructor,most,users,should,consider,using,link,get,sources,link,set,sources,set,rather,than,calling,this,method,param,additional,primary,sources,the,additional,primary,sources,to,add,see,spring,application,class,see,get,sources,see,set,sources,set,see,get,all,sources;public,void,add,primary,sources,collection,class,additional,primary,sources,this,primary,sources,add,all,additional,primary,sources
SpringApplication -> public void addPrimarySources(Collection<Class<?>> additionalPrimarySources);1529485904;Add additional items to the primary sources that will be added to an_ApplicationContext when {@link #run(String...)} is called._<p>_The sources here are added to those that were set in the constructor. Most users_should consider using {@link #getSources()}/{@link #setSources(Set)} rather than_calling this method._@param additionalPrimarySources the additional primary sources to add_@see #SpringApplication(Class...)_@see #getSources()_@see #setSources(Set)_@see #getAllSources();public void addPrimarySources(Collection<Class<?>> additionalPrimarySources) {_		this.primarySources.addAll(additionalPrimarySources)__	};add,additional,items,to,the,primary,sources,that,will,be,added,to,an,application,context,when,link,run,string,is,called,p,the,sources,here,are,added,to,those,that,were,set,in,the,constructor,most,users,should,consider,using,link,get,sources,link,set,sources,set,rather,than,calling,this,method,param,additional,primary,sources,the,additional,primary,sources,to,add,see,spring,application,class,see,get,sources,see,set,sources,set,see,get,all,sources;public,void,add,primary,sources,collection,class,additional,primary,sources,this,primary,sources,add,all,additional,primary,sources
SpringApplication -> public void addPrimarySources(Collection<Class<?>> additionalPrimarySources);1531140616;Add additional items to the primary sources that will be added to an_ApplicationContext when {@link #run(String...)} is called._<p>_The sources here are added to those that were set in the constructor. Most users_should consider using {@link #getSources()}/{@link #setSources(Set)} rather than_calling this method._@param additionalPrimarySources the additional primary sources to add_@see #SpringApplication(Class...)_@see #getSources()_@see #setSources(Set)_@see #getAllSources();public void addPrimarySources(Collection<Class<?>> additionalPrimarySources) {_		this.primarySources.addAll(additionalPrimarySources)__	};add,additional,items,to,the,primary,sources,that,will,be,added,to,an,application,context,when,link,run,string,is,called,p,the,sources,here,are,added,to,those,that,were,set,in,the,constructor,most,users,should,consider,using,link,get,sources,link,set,sources,set,rather,than,calling,this,method,param,additional,primary,sources,the,additional,primary,sources,to,add,see,spring,application,class,see,get,sources,see,set,sources,set,see,get,all,sources;public,void,add,primary,sources,collection,class,additional,primary,sources,this,primary,sources,add,all,additional,primary,sources
SpringApplication -> public void addPrimarySources(Collection<Class<?>> additionalPrimarySources);1531155529;Add additional items to the primary sources that will be added to an_ApplicationContext when {@link #run(String...)} is called._<p>_The sources here are added to those that were set in the constructor. Most users_should consider using {@link #getSources()}/{@link #setSources(Set)} rather than_calling this method._@param additionalPrimarySources the additional primary sources to add_@see #SpringApplication(Class...)_@see #getSources()_@see #setSources(Set)_@see #getAllSources();public void addPrimarySources(Collection<Class<?>> additionalPrimarySources) {_		this.primarySources.addAll(additionalPrimarySources)__	};add,additional,items,to,the,primary,sources,that,will,be,added,to,an,application,context,when,link,run,string,is,called,p,the,sources,here,are,added,to,those,that,were,set,in,the,constructor,most,users,should,consider,using,link,get,sources,link,set,sources,set,rather,than,calling,this,method,param,additional,primary,sources,the,additional,primary,sources,to,add,see,spring,application,class,see,get,sources,see,set,sources,set,see,get,all,sources;public,void,add,primary,sources,collection,class,additional,primary,sources,this,primary,sources,add,all,additional,primary,sources
SpringApplication -> public void addPrimarySources(Collection<Class<?>> additionalPrimarySources);1531222098;Add additional items to the primary sources that will be added to an_ApplicationContext when {@link #run(String...)} is called._<p>_The sources here are added to those that were set in the constructor. Most users_should consider using {@link #getSources()}/{@link #setSources(Set)} rather than_calling this method._@param additionalPrimarySources the additional primary sources to add_@see #SpringApplication(Class...)_@see #getSources()_@see #setSources(Set)_@see #getAllSources();public void addPrimarySources(Collection<Class<?>> additionalPrimarySources) {_		this.primarySources.addAll(additionalPrimarySources)__	};add,additional,items,to,the,primary,sources,that,will,be,added,to,an,application,context,when,link,run,string,is,called,p,the,sources,here,are,added,to,those,that,were,set,in,the,constructor,most,users,should,consider,using,link,get,sources,link,set,sources,set,rather,than,calling,this,method,param,additional,primary,sources,the,additional,primary,sources,to,add,see,spring,application,class,see,get,sources,see,set,sources,set,see,get,all,sources;public,void,add,primary,sources,collection,class,additional,primary,sources,this,primary,sources,add,all,additional,primary,sources
SpringApplication -> public void addPrimarySources(Collection<Class<?>> additionalPrimarySources);1532738143;Add additional items to the primary sources that will be added to an_ApplicationContext when {@link #run(String...)} is called._<p>_The sources here are added to those that were set in the constructor. Most users_should consider using {@link #getSources()}/{@link #setSources(Set)} rather than_calling this method._@param additionalPrimarySources the additional primary sources to add_@see #SpringApplication(Class...)_@see #getSources()_@see #setSources(Set)_@see #getAllSources();public void addPrimarySources(Collection<Class<?>> additionalPrimarySources) {_		this.primarySources.addAll(additionalPrimarySources)__	};add,additional,items,to,the,primary,sources,that,will,be,added,to,an,application,context,when,link,run,string,is,called,p,the,sources,here,are,added,to,those,that,were,set,in,the,constructor,most,users,should,consider,using,link,get,sources,link,set,sources,set,rather,than,calling,this,method,param,additional,primary,sources,the,additional,primary,sources,to,add,see,spring,application,class,see,get,sources,see,set,sources,set,see,get,all,sources;public,void,add,primary,sources,collection,class,additional,primary,sources,this,primary,sources,add,all,additional,primary,sources
SpringApplication -> public void addPrimarySources(Collection<Class<?>> additionalPrimarySources);1534188228;Add additional items to the primary sources that will be added to an_ApplicationContext when {@link #run(String...)} is called._<p>_The sources here are added to those that were set in the constructor. Most users_should consider using {@link #getSources()}/{@link #setSources(Set)} rather than_calling this method._@param additionalPrimarySources the additional primary sources to add_@see #SpringApplication(Class...)_@see #getSources()_@see #setSources(Set)_@see #getAllSources();public void addPrimarySources(Collection<Class<?>> additionalPrimarySources) {_		this.primarySources.addAll(additionalPrimarySources)__	};add,additional,items,to,the,primary,sources,that,will,be,added,to,an,application,context,when,link,run,string,is,called,p,the,sources,here,are,added,to,those,that,were,set,in,the,constructor,most,users,should,consider,using,link,get,sources,link,set,sources,set,rather,than,calling,this,method,param,additional,primary,sources,the,additional,primary,sources,to,add,see,spring,application,class,see,get,sources,see,set,sources,set,see,get,all,sources;public,void,add,primary,sources,collection,class,additional,primary,sources,this,primary,sources,add,all,additional,primary,sources
SpringApplication -> public void addPrimarySources(Collection<Class<?>> additionalPrimarySources);1535104170;Add additional items to the primary sources that will be added to an_ApplicationContext when {@link #run(String...)} is called._<p>_The sources here are added to those that were set in the constructor. Most users_should consider using {@link #getSources()}/{@link #setSources(Set)} rather than_calling this method._@param additionalPrimarySources the additional primary sources to add_@see #SpringApplication(Class...)_@see #getSources()_@see #setSources(Set)_@see #getAllSources();public void addPrimarySources(Collection<Class<?>> additionalPrimarySources) {_		this.primarySources.addAll(additionalPrimarySources)__	};add,additional,items,to,the,primary,sources,that,will,be,added,to,an,application,context,when,link,run,string,is,called,p,the,sources,here,are,added,to,those,that,were,set,in,the,constructor,most,users,should,consider,using,link,get,sources,link,set,sources,set,rather,than,calling,this,method,param,additional,primary,sources,the,additional,primary,sources,to,add,see,spring,application,class,see,get,sources,see,set,sources,set,see,get,all,sources;public,void,add,primary,sources,collection,class,additional,primary,sources,this,primary,sources,add,all,additional,primary,sources
SpringApplication -> public void addPrimarySources(Collection<Class<?>> additionalPrimarySources);1536701067;Add additional items to the primary sources that will be added to an_ApplicationContext when {@link #run(String...)} is called._<p>_The sources here are added to those that were set in the constructor. Most users_should consider using {@link #getSources()}/{@link #setSources(Set)} rather than_calling this method._@param additionalPrimarySources the additional primary sources to add_@see #SpringApplication(Class...)_@see #getSources()_@see #setSources(Set)_@see #getAllSources();public void addPrimarySources(Collection<Class<?>> additionalPrimarySources) {_		this.primarySources.addAll(additionalPrimarySources)__	};add,additional,items,to,the,primary,sources,that,will,be,added,to,an,application,context,when,link,run,string,is,called,p,the,sources,here,are,added,to,those,that,were,set,in,the,constructor,most,users,should,consider,using,link,get,sources,link,set,sources,set,rather,than,calling,this,method,param,additional,primary,sources,the,additional,primary,sources,to,add,see,spring,application,class,see,get,sources,see,set,sources,set,see,get,all,sources;public,void,add,primary,sources,collection,class,additional,primary,sources,this,primary,sources,add,all,additional,primary,sources
SpringApplication -> public void addPrimarySources(Collection<Class<?>> additionalPrimarySources);1538570355;Add additional items to the primary sources that will be added to an_ApplicationContext when {@link #run(String...)} is called._<p>_The sources here are added to those that were set in the constructor. Most users_should consider using {@link #getSources()}/{@link #setSources(Set)} rather than_calling this method._@param additionalPrimarySources the additional primary sources to add_@see #SpringApplication(Class...)_@see #getSources()_@see #setSources(Set)_@see #getAllSources();public void addPrimarySources(Collection<Class<?>> additionalPrimarySources) {_		this.primarySources.addAll(additionalPrimarySources)__	};add,additional,items,to,the,primary,sources,that,will,be,added,to,an,application,context,when,link,run,string,is,called,p,the,sources,here,are,added,to,those,that,were,set,in,the,constructor,most,users,should,consider,using,link,get,sources,link,set,sources,set,rather,than,calling,this,method,param,additional,primary,sources,the,additional,primary,sources,to,add,see,spring,application,class,see,get,sources,see,set,sources,set,see,get,all,sources;public,void,add,primary,sources,collection,class,additional,primary,sources,this,primary,sources,add,all,additional,primary,sources
SpringApplication -> public void addPrimarySources(Collection<Class<?>> additionalPrimarySources);1538707540;Add additional items to the primary sources that will be added to an_ApplicationContext when {@link #run(String...)} is called._<p>_The sources here are added to those that were set in the constructor. Most users_should consider using {@link #getSources()}/{@link #setSources(Set)} rather than_calling this method._@param additionalPrimarySources the additional primary sources to add_@see #SpringApplication(Class...)_@see #getSources()_@see #setSources(Set)_@see #getAllSources();public void addPrimarySources(Collection<Class<?>> additionalPrimarySources) {_		this.primarySources.addAll(additionalPrimarySources)__	};add,additional,items,to,the,primary,sources,that,will,be,added,to,an,application,context,when,link,run,string,is,called,p,the,sources,here,are,added,to,those,that,were,set,in,the,constructor,most,users,should,consider,using,link,get,sources,link,set,sources,set,rather,than,calling,this,method,param,additional,primary,sources,the,additional,primary,sources,to,add,see,spring,application,class,see,get,sources,see,set,sources,set,see,get,all,sources;public,void,add,primary,sources,collection,class,additional,primary,sources,this,primary,sources,add,all,additional,primary,sources
SpringApplication -> public void addPrimarySources(Collection<Class<?>> additionalPrimarySources);1538750610;Add additional items to the primary sources that will be added to an_ApplicationContext when {@link #run(String...)} is called._<p>_The sources here are added to those that were set in the constructor. Most users_should consider using {@link #getSources()}/{@link #setSources(Set)} rather than_calling this method._@param additionalPrimarySources the additional primary sources to add_@see #SpringApplication(Class...)_@see #getSources()_@see #setSources(Set)_@see #getAllSources();public void addPrimarySources(Collection<Class<?>> additionalPrimarySources) {_		this.primarySources.addAll(additionalPrimarySources)__	};add,additional,items,to,the,primary,sources,that,will,be,added,to,an,application,context,when,link,run,string,is,called,p,the,sources,here,are,added,to,those,that,were,set,in,the,constructor,most,users,should,consider,using,link,get,sources,link,set,sources,set,rather,than,calling,this,method,param,additional,primary,sources,the,additional,primary,sources,to,add,see,spring,application,class,see,get,sources,see,set,sources,set,see,get,all,sources;public,void,add,primary,sources,collection,class,additional,primary,sources,this,primary,sources,add,all,additional,primary,sources
SpringApplication -> public void addPrimarySources(Collection<Class<?>> additionalPrimarySources);1538771652;Add additional items to the primary sources that will be added to an_ApplicationContext when {@link #run(String...)} is called._<p>_The sources here are added to those that were set in the constructor. Most users_should consider using {@link #getSources()}/{@link #setSources(Set)} rather than_calling this method._@param additionalPrimarySources the additional primary sources to add_@see #SpringApplication(Class...)_@see #getSources()_@see #setSources(Set)_@see #getAllSources();public void addPrimarySources(Collection<Class<?>> additionalPrimarySources) {_		this.primarySources.addAll(additionalPrimarySources)__	};add,additional,items,to,the,primary,sources,that,will,be,added,to,an,application,context,when,link,run,string,is,called,p,the,sources,here,are,added,to,those,that,were,set,in,the,constructor,most,users,should,consider,using,link,get,sources,link,set,sources,set,rather,than,calling,this,method,param,additional,primary,sources,the,additional,primary,sources,to,add,see,spring,application,class,see,get,sources,see,set,sources,set,see,get,all,sources;public,void,add,primary,sources,collection,class,additional,primary,sources,this,primary,sources,add,all,additional,primary,sources
SpringApplication -> public void addPrimarySources(Collection<Class<?>> additionalPrimarySources);1540419762;Add additional items to the primary sources that will be added to an_ApplicationContext when {@link #run(String...)} is called._<p>_The sources here are added to those that were set in the constructor. Most users_should consider using {@link #getSources()}/{@link #setSources(Set)} rather than_calling this method._@param additionalPrimarySources the additional primary sources to add_@see #SpringApplication(Class...)_@see #getSources()_@see #setSources(Set)_@see #getAllSources();public void addPrimarySources(Collection<Class<?>> additionalPrimarySources) {_		this.primarySources.addAll(additionalPrimarySources)__	};add,additional,items,to,the,primary,sources,that,will,be,added,to,an,application,context,when,link,run,string,is,called,p,the,sources,here,are,added,to,those,that,were,set,in,the,constructor,most,users,should,consider,using,link,get,sources,link,set,sources,set,rather,than,calling,this,method,param,additional,primary,sources,the,additional,primary,sources,to,add,see,spring,application,class,see,get,sources,see,set,sources,set,see,get,all,sources;public,void,add,primary,sources,collection,class,additional,primary,sources,this,primary,sources,add,all,additional,primary,sources
SpringApplication -> public void addPrimarySources(Collection<Class<?>> additionalPrimarySources);1541060131;Add additional items to the primary sources that will be added to an_ApplicationContext when {@link #run(String...)} is called._<p>_The sources here are added to those that were set in the constructor. Most users_should consider using {@link #getSources()}/{@link #setSources(Set)} rather than_calling this method._@param additionalPrimarySources the additional primary sources to add_@see #SpringApplication(Class...)_@see #getSources()_@see #setSources(Set)_@see #getAllSources();public void addPrimarySources(Collection<Class<?>> additionalPrimarySources) {_		this.primarySources.addAll(additionalPrimarySources)__	};add,additional,items,to,the,primary,sources,that,will,be,added,to,an,application,context,when,link,run,string,is,called,p,the,sources,here,are,added,to,those,that,were,set,in,the,constructor,most,users,should,consider,using,link,get,sources,link,set,sources,set,rather,than,calling,this,method,param,additional,primary,sources,the,additional,primary,sources,to,add,see,spring,application,class,see,get,sources,see,set,sources,set,see,get,all,sources;public,void,add,primary,sources,collection,class,additional,primary,sources,this,primary,sources,add,all,additional,primary,sources
SpringApplication -> public void addPrimarySources(Collection<Class<?>> additionalPrimarySources);1546943477;Add additional items to the primary sources that will be added to an_ApplicationContext when {@link #run(String...)} is called._<p>_The sources here are added to those that were set in the constructor. Most users_should consider using {@link #getSources()}/{@link #setSources(Set)} rather than_calling this method._@param additionalPrimarySources the additional primary sources to add_@see #SpringApplication(Class...)_@see #getSources()_@see #setSources(Set)_@see #getAllSources();public void addPrimarySources(Collection<Class<?>> additionalPrimarySources) {_		this.primarySources.addAll(additionalPrimarySources)__	};add,additional,items,to,the,primary,sources,that,will,be,added,to,an,application,context,when,link,run,string,is,called,p,the,sources,here,are,added,to,those,that,were,set,in,the,constructor,most,users,should,consider,using,link,get,sources,link,set,sources,set,rather,than,calling,this,method,param,additional,primary,sources,the,additional,primary,sources,to,add,see,spring,application,class,see,get,sources,see,set,sources,set,see,get,all,sources;public,void,add,primary,sources,collection,class,additional,primary,sources,this,primary,sources,add,all,additional,primary,sources
SpringApplication -> public void addPrimarySources(Collection<Class<?>> additionalPrimarySources);1549791353;Add additional items to the primary sources that will be added to an_ApplicationContext when {@link #run(String...)} is called._<p>_The sources here are added to those that were set in the constructor. Most users_should consider using {@link #getSources()}/{@link #setSources(Set)} rather than_calling this method._@param additionalPrimarySources the additional primary sources to add_@see #SpringApplication(Class...)_@see #getSources()_@see #setSources(Set)_@see #getAllSources();public void addPrimarySources(Collection<Class<?>> additionalPrimarySources) {_		this.primarySources.addAll(additionalPrimarySources)__	};add,additional,items,to,the,primary,sources,that,will,be,added,to,an,application,context,when,link,run,string,is,called,p,the,sources,here,are,added,to,those,that,were,set,in,the,constructor,most,users,should,consider,using,link,get,sources,link,set,sources,set,rather,than,calling,this,method,param,additional,primary,sources,the,additional,primary,sources,to,add,see,spring,application,class,see,get,sources,see,set,sources,set,see,get,all,sources;public,void,add,primary,sources,collection,class,additional,primary,sources,this,primary,sources,add,all,additional,primary,sources
SpringApplication -> public void addPrimarySources(Collection<Class<?>> additionalPrimarySources);1550148109;Add additional items to the primary sources that will be added to an_ApplicationContext when {@link #run(String...)} is called._<p>_The sources here are added to those that were set in the constructor. Most users_should consider using {@link #getSources()}/{@link #setSources(Set)} rather than_calling this method._@param additionalPrimarySources the additional primary sources to add_@see #SpringApplication(Class...)_@see #getSources()_@see #setSources(Set)_@see #getAllSources();public void addPrimarySources(Collection<Class<?>> additionalPrimarySources) {_		this.primarySources.addAll(additionalPrimarySources)__	};add,additional,items,to,the,primary,sources,that,will,be,added,to,an,application,context,when,link,run,string,is,called,p,the,sources,here,are,added,to,those,that,were,set,in,the,constructor,most,users,should,consider,using,link,get,sources,link,set,sources,set,rather,than,calling,this,method,param,additional,primary,sources,the,additional,primary,sources,to,add,see,spring,application,class,see,get,sources,see,set,sources,set,see,get,all,sources;public,void,add,primary,sources,collection,class,additional,primary,sources,this,primary,sources,add,all,additional,primary,sources
SpringApplication -> public static ConfigurableApplicationContext run(Class<?>[] primarySources, 			String[] args);1507173536;Static helper that can be used to run a {@link SpringApplication} from the_specified sources using default settings and user supplied arguments._@param primarySources the primary sources to load_@param args the application arguments (usually passed from a Java main method)_@return the running {@link ApplicationContext};public static ConfigurableApplicationContext run(Class<?>[] primarySources,_			String[] args) {_		return new SpringApplication(primarySources).run(args)__	};static,helper,that,can,be,used,to,run,a,link,spring,application,from,the,specified,sources,using,default,settings,and,user,supplied,arguments,param,primary,sources,the,primary,sources,to,load,param,args,the,application,arguments,usually,passed,from,a,java,main,method,return,the,running,link,application,context;public,static,configurable,application,context,run,class,primary,sources,string,args,return,new,spring,application,primary,sources,run,args
SpringApplication -> public static ConfigurableApplicationContext run(Class<?>[] primarySources, 			String[] args);1509381678;Static helper that can be used to run a {@link SpringApplication} from the_specified sources using default settings and user supplied arguments._@param primarySources the primary sources to load_@param args the application arguments (usually passed from a Java main method)_@return the running {@link ApplicationContext};public static ConfigurableApplicationContext run(Class<?>[] primarySources,_			String[] args) {_		return new SpringApplication(primarySources).run(args)__	};static,helper,that,can,be,used,to,run,a,link,spring,application,from,the,specified,sources,using,default,settings,and,user,supplied,arguments,param,primary,sources,the,primary,sources,to,load,param,args,the,application,arguments,usually,passed,from,a,java,main,method,return,the,running,link,application,context;public,static,configurable,application,context,run,class,primary,sources,string,args,return,new,spring,application,primary,sources,run,args
SpringApplication -> public static ConfigurableApplicationContext run(Class<?>[] primarySources, 			String[] args);1510995225;Static helper that can be used to run a {@link SpringApplication} from the_specified sources using default settings and user supplied arguments._@param primarySources the primary sources to load_@param args the application arguments (usually passed from a Java main method)_@return the running {@link ApplicationContext};public static ConfigurableApplicationContext run(Class<?>[] primarySources,_			String[] args) {_		return new SpringApplication(primarySources).run(args)__	};static,helper,that,can,be,used,to,run,a,link,spring,application,from,the,specified,sources,using,default,settings,and,user,supplied,arguments,param,primary,sources,the,primary,sources,to,load,param,args,the,application,arguments,usually,passed,from,a,java,main,method,return,the,running,link,application,context;public,static,configurable,application,context,run,class,primary,sources,string,args,return,new,spring,application,primary,sources,run,args
SpringApplication -> public static ConfigurableApplicationContext run(Class<?>[] primarySources, 			String[] args);1515670013;Static helper that can be used to run a {@link SpringApplication} from the_specified sources using default settings and user supplied arguments._@param primarySources the primary sources to load_@param args the application arguments (usually passed from a Java main method)_@return the running {@link ApplicationContext};public static ConfigurableApplicationContext run(Class<?>[] primarySources,_			String[] args) {_		return new SpringApplication(primarySources).run(args)__	};static,helper,that,can,be,used,to,run,a,link,spring,application,from,the,specified,sources,using,default,settings,and,user,supplied,arguments,param,primary,sources,the,primary,sources,to,load,param,args,the,application,arguments,usually,passed,from,a,java,main,method,return,the,running,link,application,context;public,static,configurable,application,context,run,class,primary,sources,string,args,return,new,spring,application,primary,sources,run,args
SpringApplication -> public static ConfigurableApplicationContext run(Class<?>[] primarySources, 			String[] args);1519362690;Static helper that can be used to run a {@link SpringApplication} from the_specified sources using default settings and user supplied arguments._@param primarySources the primary sources to load_@param args the application arguments (usually passed from a Java main method)_@return the running {@link ApplicationContext};public static ConfigurableApplicationContext run(Class<?>[] primarySources,_			String[] args) {_		return new SpringApplication(primarySources).run(args)__	};static,helper,that,can,be,used,to,run,a,link,spring,application,from,the,specified,sources,using,default,settings,and,user,supplied,arguments,param,primary,sources,the,primary,sources,to,load,param,args,the,application,arguments,usually,passed,from,a,java,main,method,return,the,running,link,application,context;public,static,configurable,application,context,run,class,primary,sources,string,args,return,new,spring,application,primary,sources,run,args
SpringApplication -> public static ConfigurableApplicationContext run(Class<?>[] primarySources, 			String[] args);1522251721;Static helper that can be used to run a {@link SpringApplication} from the_specified sources using default settings and user supplied arguments._@param primarySources the primary sources to load_@param args the application arguments (usually passed from a Java main method)_@return the running {@link ApplicationContext};public static ConfigurableApplicationContext run(Class<?>[] primarySources,_			String[] args) {_		return new SpringApplication(primarySources).run(args)__	};static,helper,that,can,be,used,to,run,a,link,spring,application,from,the,specified,sources,using,default,settings,and,user,supplied,arguments,param,primary,sources,the,primary,sources,to,load,param,args,the,application,arguments,usually,passed,from,a,java,main,method,return,the,running,link,application,context;public,static,configurable,application,context,run,class,primary,sources,string,args,return,new,spring,application,primary,sources,run,args
SpringApplication -> public static ConfigurableApplicationContext run(Class<?>[] primarySources, 			String[] args);1525376698;Static helper that can be used to run a {@link SpringApplication} from the_specified sources using default settings and user supplied arguments._@param primarySources the primary sources to load_@param args the application arguments (usually passed from a Java main method)_@return the running {@link ApplicationContext};public static ConfigurableApplicationContext run(Class<?>[] primarySources,_			String[] args) {_		return new SpringApplication(primarySources).run(args)__	};static,helper,that,can,be,used,to,run,a,link,spring,application,from,the,specified,sources,using,default,settings,and,user,supplied,arguments,param,primary,sources,the,primary,sources,to,load,param,args,the,application,arguments,usually,passed,from,a,java,main,method,return,the,running,link,application,context;public,static,configurable,application,context,run,class,primary,sources,string,args,return,new,spring,application,primary,sources,run,args
SpringApplication -> public static ConfigurableApplicationContext run(Class<?>[] primarySources, 			String[] args);1525416882;Static helper that can be used to run a {@link SpringApplication} from the_specified sources using default settings and user supplied arguments._@param primarySources the primary sources to load_@param args the application arguments (usually passed from a Java main method)_@return the running {@link ApplicationContext};public static ConfigurableApplicationContext run(Class<?>[] primarySources,_			String[] args) {_		return new SpringApplication(primarySources).run(args)__	};static,helper,that,can,be,used,to,run,a,link,spring,application,from,the,specified,sources,using,default,settings,and,user,supplied,arguments,param,primary,sources,the,primary,sources,to,load,param,args,the,application,arguments,usually,passed,from,a,java,main,method,return,the,running,link,application,context;public,static,configurable,application,context,run,class,primary,sources,string,args,return,new,spring,application,primary,sources,run,args
SpringApplication -> public static ConfigurableApplicationContext run(Class<?>[] primarySources, 			String[] args);1526993305;Static helper that can be used to run a {@link SpringApplication} from the_specified sources using default settings and user supplied arguments._@param primarySources the primary sources to load_@param args the application arguments (usually passed from a Java main method)_@return the running {@link ApplicationContext};public static ConfigurableApplicationContext run(Class<?>[] primarySources,_			String[] args) {_		return new SpringApplication(primarySources).run(args)__	};static,helper,that,can,be,used,to,run,a,link,spring,application,from,the,specified,sources,using,default,settings,and,user,supplied,arguments,param,primary,sources,the,primary,sources,to,load,param,args,the,application,arguments,usually,passed,from,a,java,main,method,return,the,running,link,application,context;public,static,configurable,application,context,run,class,primary,sources,string,args,return,new,spring,application,primary,sources,run,args
SpringApplication -> public static ConfigurableApplicationContext run(Class<?>[] primarySources, 			String[] args);1529485904;Static helper that can be used to run a {@link SpringApplication} from the_specified sources using default settings and user supplied arguments._@param primarySources the primary sources to load_@param args the application arguments (usually passed from a Java main method)_@return the running {@link ApplicationContext};public static ConfigurableApplicationContext run(Class<?>[] primarySources,_			String[] args) {_		return new SpringApplication(primarySources).run(args)__	};static,helper,that,can,be,used,to,run,a,link,spring,application,from,the,specified,sources,using,default,settings,and,user,supplied,arguments,param,primary,sources,the,primary,sources,to,load,param,args,the,application,arguments,usually,passed,from,a,java,main,method,return,the,running,link,application,context;public,static,configurable,application,context,run,class,primary,sources,string,args,return,new,spring,application,primary,sources,run,args
SpringApplication -> public static ConfigurableApplicationContext run(Class<?>[] primarySources, 			String[] args);1531140616;Static helper that can be used to run a {@link SpringApplication} from the_specified sources using default settings and user supplied arguments._@param primarySources the primary sources to load_@param args the application arguments (usually passed from a Java main method)_@return the running {@link ApplicationContext};public static ConfigurableApplicationContext run(Class<?>[] primarySources,_			String[] args) {_		return new SpringApplication(primarySources).run(args)__	};static,helper,that,can,be,used,to,run,a,link,spring,application,from,the,specified,sources,using,default,settings,and,user,supplied,arguments,param,primary,sources,the,primary,sources,to,load,param,args,the,application,arguments,usually,passed,from,a,java,main,method,return,the,running,link,application,context;public,static,configurable,application,context,run,class,primary,sources,string,args,return,new,spring,application,primary,sources,run,args
SpringApplication -> public static ConfigurableApplicationContext run(Class<?>[] primarySources, 			String[] args);1531155529;Static helper that can be used to run a {@link SpringApplication} from the_specified sources using default settings and user supplied arguments._@param primarySources the primary sources to load_@param args the application arguments (usually passed from a Java main method)_@return the running {@link ApplicationContext};public static ConfigurableApplicationContext run(Class<?>[] primarySources,_			String[] args) {_		return new SpringApplication(primarySources).run(args)__	};static,helper,that,can,be,used,to,run,a,link,spring,application,from,the,specified,sources,using,default,settings,and,user,supplied,arguments,param,primary,sources,the,primary,sources,to,load,param,args,the,application,arguments,usually,passed,from,a,java,main,method,return,the,running,link,application,context;public,static,configurable,application,context,run,class,primary,sources,string,args,return,new,spring,application,primary,sources,run,args
SpringApplication -> public static ConfigurableApplicationContext run(Class<?>[] primarySources, 			String[] args);1531222098;Static helper that can be used to run a {@link SpringApplication} from the_specified sources using default settings and user supplied arguments._@param primarySources the primary sources to load_@param args the application arguments (usually passed from a Java main method)_@return the running {@link ApplicationContext};public static ConfigurableApplicationContext run(Class<?>[] primarySources,_			String[] args) {_		return new SpringApplication(primarySources).run(args)__	};static,helper,that,can,be,used,to,run,a,link,spring,application,from,the,specified,sources,using,default,settings,and,user,supplied,arguments,param,primary,sources,the,primary,sources,to,load,param,args,the,application,arguments,usually,passed,from,a,java,main,method,return,the,running,link,application,context;public,static,configurable,application,context,run,class,primary,sources,string,args,return,new,spring,application,primary,sources,run,args
SpringApplication -> public static ConfigurableApplicationContext run(Class<?>[] primarySources, 			String[] args);1532738143;Static helper that can be used to run a {@link SpringApplication} from the_specified sources using default settings and user supplied arguments._@param primarySources the primary sources to load_@param args the application arguments (usually passed from a Java main method)_@return the running {@link ApplicationContext};public static ConfigurableApplicationContext run(Class<?>[] primarySources,_			String[] args) {_		return new SpringApplication(primarySources).run(args)__	};static,helper,that,can,be,used,to,run,a,link,spring,application,from,the,specified,sources,using,default,settings,and,user,supplied,arguments,param,primary,sources,the,primary,sources,to,load,param,args,the,application,arguments,usually,passed,from,a,java,main,method,return,the,running,link,application,context;public,static,configurable,application,context,run,class,primary,sources,string,args,return,new,spring,application,primary,sources,run,args
SpringApplication -> public static ConfigurableApplicationContext run(Class<?>[] primarySources, 			String[] args);1534188228;Static helper that can be used to run a {@link SpringApplication} from the_specified sources using default settings and user supplied arguments._@param primarySources the primary sources to load_@param args the application arguments (usually passed from a Java main method)_@return the running {@link ApplicationContext};public static ConfigurableApplicationContext run(Class<?>[] primarySources,_			String[] args) {_		return new SpringApplication(primarySources).run(args)__	};static,helper,that,can,be,used,to,run,a,link,spring,application,from,the,specified,sources,using,default,settings,and,user,supplied,arguments,param,primary,sources,the,primary,sources,to,load,param,args,the,application,arguments,usually,passed,from,a,java,main,method,return,the,running,link,application,context;public,static,configurable,application,context,run,class,primary,sources,string,args,return,new,spring,application,primary,sources,run,args
SpringApplication -> public static ConfigurableApplicationContext run(Class<?>[] primarySources, 			String[] args);1535104170;Static helper that can be used to run a {@link SpringApplication} from the_specified sources using default settings and user supplied arguments._@param primarySources the primary sources to load_@param args the application arguments (usually passed from a Java main method)_@return the running {@link ApplicationContext};public static ConfigurableApplicationContext run(Class<?>[] primarySources,_			String[] args) {_		return new SpringApplication(primarySources).run(args)__	};static,helper,that,can,be,used,to,run,a,link,spring,application,from,the,specified,sources,using,default,settings,and,user,supplied,arguments,param,primary,sources,the,primary,sources,to,load,param,args,the,application,arguments,usually,passed,from,a,java,main,method,return,the,running,link,application,context;public,static,configurable,application,context,run,class,primary,sources,string,args,return,new,spring,application,primary,sources,run,args
SpringApplication -> public static ConfigurableApplicationContext run(Class<?>[] primarySources, 			String[] args);1536701067;Static helper that can be used to run a {@link SpringApplication} from the_specified sources using default settings and user supplied arguments._@param primarySources the primary sources to load_@param args the application arguments (usually passed from a Java main method)_@return the running {@link ApplicationContext};public static ConfigurableApplicationContext run(Class<?>[] primarySources,_			String[] args) {_		return new SpringApplication(primarySources).run(args)__	};static,helper,that,can,be,used,to,run,a,link,spring,application,from,the,specified,sources,using,default,settings,and,user,supplied,arguments,param,primary,sources,the,primary,sources,to,load,param,args,the,application,arguments,usually,passed,from,a,java,main,method,return,the,running,link,application,context;public,static,configurable,application,context,run,class,primary,sources,string,args,return,new,spring,application,primary,sources,run,args
SpringApplication -> public static ConfigurableApplicationContext run(Class<?>[] primarySources, 			String[] args);1538570355;Static helper that can be used to run a {@link SpringApplication} from the_specified sources using default settings and user supplied arguments._@param primarySources the primary sources to load_@param args the application arguments (usually passed from a Java main method)_@return the running {@link ApplicationContext};public static ConfigurableApplicationContext run(Class<?>[] primarySources,_			String[] args) {_		return new SpringApplication(primarySources).run(args)__	};static,helper,that,can,be,used,to,run,a,link,spring,application,from,the,specified,sources,using,default,settings,and,user,supplied,arguments,param,primary,sources,the,primary,sources,to,load,param,args,the,application,arguments,usually,passed,from,a,java,main,method,return,the,running,link,application,context;public,static,configurable,application,context,run,class,primary,sources,string,args,return,new,spring,application,primary,sources,run,args
SpringApplication -> public static ConfigurableApplicationContext run(Class<?>[] primarySources, 			String[] args);1538707540;Static helper that can be used to run a {@link SpringApplication} from the_specified sources using default settings and user supplied arguments._@param primarySources the primary sources to load_@param args the application arguments (usually passed from a Java main method)_@return the running {@link ApplicationContext};public static ConfigurableApplicationContext run(Class<?>[] primarySources,_			String[] args) {_		return new SpringApplication(primarySources).run(args)__	};static,helper,that,can,be,used,to,run,a,link,spring,application,from,the,specified,sources,using,default,settings,and,user,supplied,arguments,param,primary,sources,the,primary,sources,to,load,param,args,the,application,arguments,usually,passed,from,a,java,main,method,return,the,running,link,application,context;public,static,configurable,application,context,run,class,primary,sources,string,args,return,new,spring,application,primary,sources,run,args
SpringApplication -> public static ConfigurableApplicationContext run(Class<?>[] primarySources, 			String[] args);1538750610;Static helper that can be used to run a {@link SpringApplication} from the_specified sources using default settings and user supplied arguments._@param primarySources the primary sources to load_@param args the application arguments (usually passed from a Java main method)_@return the running {@link ApplicationContext};public static ConfigurableApplicationContext run(Class<?>[] primarySources,_			String[] args) {_		return new SpringApplication(primarySources).run(args)__	};static,helper,that,can,be,used,to,run,a,link,spring,application,from,the,specified,sources,using,default,settings,and,user,supplied,arguments,param,primary,sources,the,primary,sources,to,load,param,args,the,application,arguments,usually,passed,from,a,java,main,method,return,the,running,link,application,context;public,static,configurable,application,context,run,class,primary,sources,string,args,return,new,spring,application,primary,sources,run,args
SpringApplication -> public static ConfigurableApplicationContext run(Class<?>[] primarySources, 			String[] args);1538771652;Static helper that can be used to run a {@link SpringApplication} from the_specified sources using default settings and user supplied arguments._@param primarySources the primary sources to load_@param args the application arguments (usually passed from a Java main method)_@return the running {@link ApplicationContext};public static ConfigurableApplicationContext run(Class<?>[] primarySources,_			String[] args) {_		return new SpringApplication(primarySources).run(args)__	};static,helper,that,can,be,used,to,run,a,link,spring,application,from,the,specified,sources,using,default,settings,and,user,supplied,arguments,param,primary,sources,the,primary,sources,to,load,param,args,the,application,arguments,usually,passed,from,a,java,main,method,return,the,running,link,application,context;public,static,configurable,application,context,run,class,primary,sources,string,args,return,new,spring,application,primary,sources,run,args
SpringApplication -> public static ConfigurableApplicationContext run(Class<?>[] primarySources, 			String[] args);1540419762;Static helper that can be used to run a {@link SpringApplication} from the_specified sources using default settings and user supplied arguments._@param primarySources the primary sources to load_@param args the application arguments (usually passed from a Java main method)_@return the running {@link ApplicationContext};public static ConfigurableApplicationContext run(Class<?>[] primarySources,_			String[] args) {_		return new SpringApplication(primarySources).run(args)__	};static,helper,that,can,be,used,to,run,a,link,spring,application,from,the,specified,sources,using,default,settings,and,user,supplied,arguments,param,primary,sources,the,primary,sources,to,load,param,args,the,application,arguments,usually,passed,from,a,java,main,method,return,the,running,link,application,context;public,static,configurable,application,context,run,class,primary,sources,string,args,return,new,spring,application,primary,sources,run,args
SpringApplication -> public static ConfigurableApplicationContext run(Class<?>[] primarySources, 			String[] args);1541060131;Static helper that can be used to run a {@link SpringApplication} from the_specified sources using default settings and user supplied arguments._@param primarySources the primary sources to load_@param args the application arguments (usually passed from a Java main method)_@return the running {@link ApplicationContext};public static ConfigurableApplicationContext run(Class<?>[] primarySources,_			String[] args) {_		return new SpringApplication(primarySources).run(args)__	};static,helper,that,can,be,used,to,run,a,link,spring,application,from,the,specified,sources,using,default,settings,and,user,supplied,arguments,param,primary,sources,the,primary,sources,to,load,param,args,the,application,arguments,usually,passed,from,a,java,main,method,return,the,running,link,application,context;public,static,configurable,application,context,run,class,primary,sources,string,args,return,new,spring,application,primary,sources,run,args
SpringApplication -> public static ConfigurableApplicationContext run(Class<?>[] primarySources, 			String[] args);1546943477;Static helper that can be used to run a {@link SpringApplication} from the_specified sources using default settings and user supplied arguments._@param primarySources the primary sources to load_@param args the application arguments (usually passed from a Java main method)_@return the running {@link ApplicationContext};public static ConfigurableApplicationContext run(Class<?>[] primarySources,_			String[] args) {_		return new SpringApplication(primarySources).run(args)__	};static,helper,that,can,be,used,to,run,a,link,spring,application,from,the,specified,sources,using,default,settings,and,user,supplied,arguments,param,primary,sources,the,primary,sources,to,load,param,args,the,application,arguments,usually,passed,from,a,java,main,method,return,the,running,link,application,context;public,static,configurable,application,context,run,class,primary,sources,string,args,return,new,spring,application,primary,sources,run,args
SpringApplication -> public static ConfigurableApplicationContext run(Class<?>[] primarySources, 			String[] args);1549791353;Static helper that can be used to run a {@link SpringApplication} from the_specified sources using default settings and user supplied arguments._@param primarySources the primary sources to load_@param args the application arguments (usually passed from a Java main method)_@return the running {@link ApplicationContext};public static ConfigurableApplicationContext run(Class<?>[] primarySources,_			String[] args) {_		return new SpringApplication(primarySources).run(args)__	};static,helper,that,can,be,used,to,run,a,link,spring,application,from,the,specified,sources,using,default,settings,and,user,supplied,arguments,param,primary,sources,the,primary,sources,to,load,param,args,the,application,arguments,usually,passed,from,a,java,main,method,return,the,running,link,application,context;public,static,configurable,application,context,run,class,primary,sources,string,args,return,new,spring,application,primary,sources,run,args
SpringApplication -> public static ConfigurableApplicationContext run(Class<?>[] primarySources, 			String[] args);1550148109;Static helper that can be used to run a {@link SpringApplication} from the_specified sources using default settings and user supplied arguments._@param primarySources the primary sources to load_@param args the application arguments (usually passed from a Java main method)_@return the running {@link ApplicationContext};public static ConfigurableApplicationContext run(Class<?>[] primarySources,_			String[] args) {_		return new SpringApplication(primarySources).run(args)__	};static,helper,that,can,be,used,to,run,a,link,spring,application,from,the,specified,sources,using,default,settings,and,user,supplied,arguments,param,primary,sources,the,primary,sources,to,load,param,args,the,application,arguments,usually,passed,from,a,java,main,method,return,the,running,link,application,context;public,static,configurable,application,context,run,class,primary,sources,string,args,return,new,spring,application,primary,sources,run,args
SpringApplication -> protected void configureProfiles(ConfigurableEnvironment environment, String[] args);1507173536;Configure which profiles are active (or active by default) for this application_environment. Additional profiles may be activated during configuration file_processing via the {@code spring.profiles.active} property._@param environment this application's environment_@param args arguments passed to the {@code run} method_@see #configureEnvironment(ConfigurableEnvironment, String[])_@see org.springframework.boot.context.config.ConfigFileApplicationListener;protected void configureProfiles(ConfigurableEnvironment environment, String[] args) {_		environment.getActiveProfiles()_ _		_		Set<String> profiles = new LinkedHashSet<>(this.additionalProfiles)__		profiles.addAll(Arrays.asList(environment.getActiveProfiles()))__		environment.setActiveProfiles(profiles.toArray(new String[profiles.size()]))__	};configure,which,profiles,are,active,or,active,by,default,for,this,application,environment,additional,profiles,may,be,activated,during,configuration,file,processing,via,the,code,spring,profiles,active,property,param,environment,this,application,s,environment,param,args,arguments,passed,to,the,code,run,method,see,configure,environment,configurable,environment,string,see,org,springframework,boot,context,config,config,file,application,listener;protected,void,configure,profiles,configurable,environment,environment,string,args,environment,get,active,profiles,set,string,profiles,new,linked,hash,set,this,additional,profiles,profiles,add,all,arrays,as,list,environment,get,active,profiles,environment,set,active,profiles,profiles,to,array,new,string,profiles,size
SpringApplication -> protected void configureProfiles(ConfigurableEnvironment environment, String[] args);1509381678;Configure which profiles are active (or active by default) for this application_environment. Additional profiles may be activated during configuration file_processing via the {@code spring.profiles.active} property._@param environment this application's environment_@param args arguments passed to the {@code run} method_@see #configureEnvironment(ConfigurableEnvironment, String[])_@see org.springframework.boot.context.config.ConfigFileApplicationListener;protected void configureProfiles(ConfigurableEnvironment environment, String[] args) {_		environment.getActiveProfiles()_ _		_		Set<String> profiles = new LinkedHashSet<>(this.additionalProfiles)__		profiles.addAll(Arrays.asList(environment.getActiveProfiles()))__		environment.setActiveProfiles(profiles.toArray(new String[profiles.size()]))__	};configure,which,profiles,are,active,or,active,by,default,for,this,application,environment,additional,profiles,may,be,activated,during,configuration,file,processing,via,the,code,spring,profiles,active,property,param,environment,this,application,s,environment,param,args,arguments,passed,to,the,code,run,method,see,configure,environment,configurable,environment,string,see,org,springframework,boot,context,config,config,file,application,listener;protected,void,configure,profiles,configurable,environment,environment,string,args,environment,get,active,profiles,set,string,profiles,new,linked,hash,set,this,additional,profiles,profiles,add,all,arrays,as,list,environment,get,active,profiles,environment,set,active,profiles,profiles,to,array,new,string,profiles,size
SpringApplication -> protected void configureProfiles(ConfigurableEnvironment environment, String[] args);1510995225;Configure which profiles are active (or active by default) for this application_environment. Additional profiles may be activated during configuration file_processing via the {@code spring.profiles.active} property._@param environment this application's environment_@param args arguments passed to the {@code run} method_@see #configureEnvironment(ConfigurableEnvironment, String[])_@see org.springframework.boot.context.config.ConfigFileApplicationListener;protected void configureProfiles(ConfigurableEnvironment environment, String[] args) {_		environment.getActiveProfiles()_ _		_		Set<String> profiles = new LinkedHashSet<>(this.additionalProfiles)__		profiles.addAll(Arrays.asList(environment.getActiveProfiles()))__		environment.setActiveProfiles(profiles.toArray(new String[profiles.size()]))__	};configure,which,profiles,are,active,or,active,by,default,for,this,application,environment,additional,profiles,may,be,activated,during,configuration,file,processing,via,the,code,spring,profiles,active,property,param,environment,this,application,s,environment,param,args,arguments,passed,to,the,code,run,method,see,configure,environment,configurable,environment,string,see,org,springframework,boot,context,config,config,file,application,listener;protected,void,configure,profiles,configurable,environment,environment,string,args,environment,get,active,profiles,set,string,profiles,new,linked,hash,set,this,additional,profiles,profiles,add,all,arrays,as,list,environment,get,active,profiles,environment,set,active,profiles,profiles,to,array,new,string,profiles,size
SpringApplication -> protected void configureProfiles(ConfigurableEnvironment environment, String[] args);1515670013;Configure which profiles are active (or active by default) for this application_environment. Additional profiles may be activated during configuration file_processing via the {@code spring.profiles.active} property._@param environment this application's environment_@param args arguments passed to the {@code run} method_@see #configureEnvironment(ConfigurableEnvironment, String[])_@see org.springframework.boot.context.config.ConfigFileApplicationListener;protected void configureProfiles(ConfigurableEnvironment environment, String[] args) {_		environment.getActiveProfiles()_ _		_		Set<String> profiles = new LinkedHashSet<>(this.additionalProfiles)__		profiles.addAll(Arrays.asList(environment.getActiveProfiles()))__		environment.setActiveProfiles(profiles.toArray(new String[profiles.size()]))__	};configure,which,profiles,are,active,or,active,by,default,for,this,application,environment,additional,profiles,may,be,activated,during,configuration,file,processing,via,the,code,spring,profiles,active,property,param,environment,this,application,s,environment,param,args,arguments,passed,to,the,code,run,method,see,configure,environment,configurable,environment,string,see,org,springframework,boot,context,config,config,file,application,listener;protected,void,configure,profiles,configurable,environment,environment,string,args,environment,get,active,profiles,set,string,profiles,new,linked,hash,set,this,additional,profiles,profiles,add,all,arrays,as,list,environment,get,active,profiles,environment,set,active,profiles,profiles,to,array,new,string,profiles,size
SpringApplication -> protected void configureProfiles(ConfigurableEnvironment environment, String[] args);1519362690;Configure which profiles are active (or active by default) for this application_environment. Additional profiles may be activated during configuration file_processing via the {@code spring.profiles.active} property._@param environment this application's environment_@param args arguments passed to the {@code run} method_@see #configureEnvironment(ConfigurableEnvironment, String[])_@see org.springframework.boot.context.config.ConfigFileApplicationListener;protected void configureProfiles(ConfigurableEnvironment environment, String[] args) {_		environment.getActiveProfiles()_ _		_		Set<String> profiles = new LinkedHashSet<>(this.additionalProfiles)__		profiles.addAll(Arrays.asList(environment.getActiveProfiles()))__		environment.setActiveProfiles(StringUtils.toStringArray(profiles))__	};configure,which,profiles,are,active,or,active,by,default,for,this,application,environment,additional,profiles,may,be,activated,during,configuration,file,processing,via,the,code,spring,profiles,active,property,param,environment,this,application,s,environment,param,args,arguments,passed,to,the,code,run,method,see,configure,environment,configurable,environment,string,see,org,springframework,boot,context,config,config,file,application,listener;protected,void,configure,profiles,configurable,environment,environment,string,args,environment,get,active,profiles,set,string,profiles,new,linked,hash,set,this,additional,profiles,profiles,add,all,arrays,as,list,environment,get,active,profiles,environment,set,active,profiles,string,utils,to,string,array,profiles
SpringApplication -> protected void configureProfiles(ConfigurableEnvironment environment, String[] args);1522251721;Configure which profiles are active (or active by default) for this application_environment. Additional profiles may be activated during configuration file_processing via the {@code spring.profiles.active} property._@param environment this application's environment_@param args arguments passed to the {@code run} method_@see #configureEnvironment(ConfigurableEnvironment, String[])_@see org.springframework.boot.context.config.ConfigFileApplicationListener;protected void configureProfiles(ConfigurableEnvironment environment, String[] args) {_		environment.getActiveProfiles()_ _		_		Set<String> profiles = new LinkedHashSet<>(this.additionalProfiles)__		profiles.addAll(Arrays.asList(environment.getActiveProfiles()))__		environment.setActiveProfiles(StringUtils.toStringArray(profiles))__	};configure,which,profiles,are,active,or,active,by,default,for,this,application,environment,additional,profiles,may,be,activated,during,configuration,file,processing,via,the,code,spring,profiles,active,property,param,environment,this,application,s,environment,param,args,arguments,passed,to,the,code,run,method,see,configure,environment,configurable,environment,string,see,org,springframework,boot,context,config,config,file,application,listener;protected,void,configure,profiles,configurable,environment,environment,string,args,environment,get,active,profiles,set,string,profiles,new,linked,hash,set,this,additional,profiles,profiles,add,all,arrays,as,list,environment,get,active,profiles,environment,set,active,profiles,string,utils,to,string,array,profiles
SpringApplication -> protected void configureProfiles(ConfigurableEnvironment environment, String[] args);1525376698;Configure which profiles are active (or active by default) for this application_environment. Additional profiles may be activated during configuration file_processing via the {@code spring.profiles.active} property._@param environment this application's environment_@param args arguments passed to the {@code run} method_@see #configureEnvironment(ConfigurableEnvironment, String[])_@see org.springframework.boot.context.config.ConfigFileApplicationListener;protected void configureProfiles(ConfigurableEnvironment environment, String[] args) {_		environment.getActiveProfiles()_ _		_		Set<String> profiles = new LinkedHashSet<>(this.additionalProfiles)__		profiles.addAll(Arrays.asList(environment.getActiveProfiles()))__		environment.setActiveProfiles(StringUtils.toStringArray(profiles))__	};configure,which,profiles,are,active,or,active,by,default,for,this,application,environment,additional,profiles,may,be,activated,during,configuration,file,processing,via,the,code,spring,profiles,active,property,param,environment,this,application,s,environment,param,args,arguments,passed,to,the,code,run,method,see,configure,environment,configurable,environment,string,see,org,springframework,boot,context,config,config,file,application,listener;protected,void,configure,profiles,configurable,environment,environment,string,args,environment,get,active,profiles,set,string,profiles,new,linked,hash,set,this,additional,profiles,profiles,add,all,arrays,as,list,environment,get,active,profiles,environment,set,active,profiles,string,utils,to,string,array,profiles
SpringApplication -> protected void configureProfiles(ConfigurableEnvironment environment, String[] args);1525416882;Configure which profiles are active (or active by default) for this application_environment. Additional profiles may be activated during configuration file_processing via the {@code spring.profiles.active} property._@param environment this application's environment_@param args arguments passed to the {@code run} method_@see #configureEnvironment(ConfigurableEnvironment, String[])_@see org.springframework.boot.context.config.ConfigFileApplicationListener;protected void configureProfiles(ConfigurableEnvironment environment, String[] args) {_		environment.getActiveProfiles()_ _		_		Set<String> profiles = new LinkedHashSet<>(this.additionalProfiles)__		profiles.addAll(Arrays.asList(environment.getActiveProfiles()))__		environment.setActiveProfiles(StringUtils.toStringArray(profiles))__	};configure,which,profiles,are,active,or,active,by,default,for,this,application,environment,additional,profiles,may,be,activated,during,configuration,file,processing,via,the,code,spring,profiles,active,property,param,environment,this,application,s,environment,param,args,arguments,passed,to,the,code,run,method,see,configure,environment,configurable,environment,string,see,org,springframework,boot,context,config,config,file,application,listener;protected,void,configure,profiles,configurable,environment,environment,string,args,environment,get,active,profiles,set,string,profiles,new,linked,hash,set,this,additional,profiles,profiles,add,all,arrays,as,list,environment,get,active,profiles,environment,set,active,profiles,string,utils,to,string,array,profiles
SpringApplication -> protected void configureProfiles(ConfigurableEnvironment environment, String[] args);1526993305;Configure which profiles are active (or active by default) for this application_environment. Additional profiles may be activated during configuration file_processing via the {@code spring.profiles.active} property._@param environment this application's environment_@param args arguments passed to the {@code run} method_@see #configureEnvironment(ConfigurableEnvironment, String[])_@see org.springframework.boot.context.config.ConfigFileApplicationListener;protected void configureProfiles(ConfigurableEnvironment environment, String[] args) {_		environment.getActiveProfiles()_ _		_		Set<String> profiles = new LinkedHashSet<>(this.additionalProfiles)__		profiles.addAll(Arrays.asList(environment.getActiveProfiles()))__		environment.setActiveProfiles(StringUtils.toStringArray(profiles))__	};configure,which,profiles,are,active,or,active,by,default,for,this,application,environment,additional,profiles,may,be,activated,during,configuration,file,processing,via,the,code,spring,profiles,active,property,param,environment,this,application,s,environment,param,args,arguments,passed,to,the,code,run,method,see,configure,environment,configurable,environment,string,see,org,springframework,boot,context,config,config,file,application,listener;protected,void,configure,profiles,configurable,environment,environment,string,args,environment,get,active,profiles,set,string,profiles,new,linked,hash,set,this,additional,profiles,profiles,add,all,arrays,as,list,environment,get,active,profiles,environment,set,active,profiles,string,utils,to,string,array,profiles
SpringApplication -> protected void configureProfiles(ConfigurableEnvironment environment, String[] args);1529485904;Configure which profiles are active (or active by default) for this application_environment. Additional profiles may be activated during configuration file_processing via the {@code spring.profiles.active} property._@param environment this application's environment_@param args arguments passed to the {@code run} method_@see #configureEnvironment(ConfigurableEnvironment, String[])_@see org.springframework.boot.context.config.ConfigFileApplicationListener;protected void configureProfiles(ConfigurableEnvironment environment, String[] args) {_		environment.getActiveProfiles()_ _		_		Set<String> profiles = new LinkedHashSet<>(this.additionalProfiles)__		profiles.addAll(Arrays.asList(environment.getActiveProfiles()))__		environment.setActiveProfiles(StringUtils.toStringArray(profiles))__	};configure,which,profiles,are,active,or,active,by,default,for,this,application,environment,additional,profiles,may,be,activated,during,configuration,file,processing,via,the,code,spring,profiles,active,property,param,environment,this,application,s,environment,param,args,arguments,passed,to,the,code,run,method,see,configure,environment,configurable,environment,string,see,org,springframework,boot,context,config,config,file,application,listener;protected,void,configure,profiles,configurable,environment,environment,string,args,environment,get,active,profiles,set,string,profiles,new,linked,hash,set,this,additional,profiles,profiles,add,all,arrays,as,list,environment,get,active,profiles,environment,set,active,profiles,string,utils,to,string,array,profiles
SpringApplication -> protected void configureProfiles(ConfigurableEnvironment environment, String[] args);1531140616;Configure which profiles are active (or active by default) for this application_environment. Additional profiles may be activated during configuration file_processing via the {@code spring.profiles.active} property._@param environment this application's environment_@param args arguments passed to the {@code run} method_@see #configureEnvironment(ConfigurableEnvironment, String[])_@see org.springframework.boot.context.config.ConfigFileApplicationListener;protected void configureProfiles(ConfigurableEnvironment environment, String[] args) {_		environment.getActiveProfiles()_ _		_		Set<String> profiles = new LinkedHashSet<>(this.additionalProfiles)__		profiles.addAll(Arrays.asList(environment.getActiveProfiles()))__		environment.setActiveProfiles(StringUtils.toStringArray(profiles))__	};configure,which,profiles,are,active,or,active,by,default,for,this,application,environment,additional,profiles,may,be,activated,during,configuration,file,processing,via,the,code,spring,profiles,active,property,param,environment,this,application,s,environment,param,args,arguments,passed,to,the,code,run,method,see,configure,environment,configurable,environment,string,see,org,springframework,boot,context,config,config,file,application,listener;protected,void,configure,profiles,configurable,environment,environment,string,args,environment,get,active,profiles,set,string,profiles,new,linked,hash,set,this,additional,profiles,profiles,add,all,arrays,as,list,environment,get,active,profiles,environment,set,active,profiles,string,utils,to,string,array,profiles
SpringApplication -> protected void configureProfiles(ConfigurableEnvironment environment, String[] args);1531155529;Configure which profiles are active (or active by default) for this application_environment. Additional profiles may be activated during configuration file_processing via the {@code spring.profiles.active} property._@param environment this application's environment_@param args arguments passed to the {@code run} method_@see #configureEnvironment(ConfigurableEnvironment, String[])_@see org.springframework.boot.context.config.ConfigFileApplicationListener;protected void configureProfiles(ConfigurableEnvironment environment, String[] args) {_		environment.getActiveProfiles()_ _		_		Set<String> profiles = new LinkedHashSet<>(this.additionalProfiles)__		profiles.addAll(Arrays.asList(environment.getActiveProfiles()))__		environment.setActiveProfiles(StringUtils.toStringArray(profiles))__	};configure,which,profiles,are,active,or,active,by,default,for,this,application,environment,additional,profiles,may,be,activated,during,configuration,file,processing,via,the,code,spring,profiles,active,property,param,environment,this,application,s,environment,param,args,arguments,passed,to,the,code,run,method,see,configure,environment,configurable,environment,string,see,org,springframework,boot,context,config,config,file,application,listener;protected,void,configure,profiles,configurable,environment,environment,string,args,environment,get,active,profiles,set,string,profiles,new,linked,hash,set,this,additional,profiles,profiles,add,all,arrays,as,list,environment,get,active,profiles,environment,set,active,profiles,string,utils,to,string,array,profiles
SpringApplication -> protected void configureProfiles(ConfigurableEnvironment environment, String[] args);1531222098;Configure which profiles are active (or active by default) for this application_environment. Additional profiles may be activated during configuration file_processing via the {@code spring.profiles.active} property._@param environment this application's environment_@param args arguments passed to the {@code run} method_@see #configureEnvironment(ConfigurableEnvironment, String[])_@see org.springframework.boot.context.config.ConfigFileApplicationListener;protected void configureProfiles(ConfigurableEnvironment environment, String[] args) {_		environment.getActiveProfiles()_ _		_		Set<String> profiles = new LinkedHashSet<>(this.additionalProfiles)__		profiles.addAll(Arrays.asList(environment.getActiveProfiles()))__		environment.setActiveProfiles(StringUtils.toStringArray(profiles))__	};configure,which,profiles,are,active,or,active,by,default,for,this,application,environment,additional,profiles,may,be,activated,during,configuration,file,processing,via,the,code,spring,profiles,active,property,param,environment,this,application,s,environment,param,args,arguments,passed,to,the,code,run,method,see,configure,environment,configurable,environment,string,see,org,springframework,boot,context,config,config,file,application,listener;protected,void,configure,profiles,configurable,environment,environment,string,args,environment,get,active,profiles,set,string,profiles,new,linked,hash,set,this,additional,profiles,profiles,add,all,arrays,as,list,environment,get,active,profiles,environment,set,active,profiles,string,utils,to,string,array,profiles
SpringApplication -> protected void configureProfiles(ConfigurableEnvironment environment, String[] args);1532738143;Configure which profiles are active (or active by default) for this application_environment. Additional profiles may be activated during configuration file_processing via the {@code spring.profiles.active} property._@param environment this application's environment_@param args arguments passed to the {@code run} method_@see #configureEnvironment(ConfigurableEnvironment, String[])_@see org.springframework.boot.context.config.ConfigFileApplicationListener;protected void configureProfiles(ConfigurableEnvironment environment, String[] args) {_		environment.getActiveProfiles()_ _		_		Set<String> profiles = new LinkedHashSet<>(this.additionalProfiles)__		profiles.addAll(Arrays.asList(environment.getActiveProfiles()))__		environment.setActiveProfiles(StringUtils.toStringArray(profiles))__	};configure,which,profiles,are,active,or,active,by,default,for,this,application,environment,additional,profiles,may,be,activated,during,configuration,file,processing,via,the,code,spring,profiles,active,property,param,environment,this,application,s,environment,param,args,arguments,passed,to,the,code,run,method,see,configure,environment,configurable,environment,string,see,org,springframework,boot,context,config,config,file,application,listener;protected,void,configure,profiles,configurable,environment,environment,string,args,environment,get,active,profiles,set,string,profiles,new,linked,hash,set,this,additional,profiles,profiles,add,all,arrays,as,list,environment,get,active,profiles,environment,set,active,profiles,string,utils,to,string,array,profiles
SpringApplication -> protected void configureProfiles(ConfigurableEnvironment environment, String[] args);1534188228;Configure which profiles are active (or active by default) for this application_environment. Additional profiles may be activated during configuration file_processing via the {@code spring.profiles.active} property._@param environment this application's environment_@param args arguments passed to the {@code run} method_@see #configureEnvironment(ConfigurableEnvironment, String[])_@see org.springframework.boot.context.config.ConfigFileApplicationListener;protected void configureProfiles(ConfigurableEnvironment environment, String[] args) {_		environment.getActiveProfiles()_ _		_		Set<String> profiles = new LinkedHashSet<>(this.additionalProfiles)__		profiles.addAll(Arrays.asList(environment.getActiveProfiles()))__		environment.setActiveProfiles(StringUtils.toStringArray(profiles))__	};configure,which,profiles,are,active,or,active,by,default,for,this,application,environment,additional,profiles,may,be,activated,during,configuration,file,processing,via,the,code,spring,profiles,active,property,param,environment,this,application,s,environment,param,args,arguments,passed,to,the,code,run,method,see,configure,environment,configurable,environment,string,see,org,springframework,boot,context,config,config,file,application,listener;protected,void,configure,profiles,configurable,environment,environment,string,args,environment,get,active,profiles,set,string,profiles,new,linked,hash,set,this,additional,profiles,profiles,add,all,arrays,as,list,environment,get,active,profiles,environment,set,active,profiles,string,utils,to,string,array,profiles
SpringApplication -> protected void configureProfiles(ConfigurableEnvironment environment, String[] args);1535104170;Configure which profiles are active (or active by default) for this application_environment. Additional profiles may be activated during configuration file_processing via the {@code spring.profiles.active} property._@param environment this application's environment_@param args arguments passed to the {@code run} method_@see #configureEnvironment(ConfigurableEnvironment, String[])_@see org.springframework.boot.context.config.ConfigFileApplicationListener;protected void configureProfiles(ConfigurableEnvironment environment, String[] args) {_		environment.getActiveProfiles()_ _		_		Set<String> profiles = new LinkedHashSet<>(this.additionalProfiles)__		profiles.addAll(Arrays.asList(environment.getActiveProfiles()))__		environment.setActiveProfiles(StringUtils.toStringArray(profiles))__	};configure,which,profiles,are,active,or,active,by,default,for,this,application,environment,additional,profiles,may,be,activated,during,configuration,file,processing,via,the,code,spring,profiles,active,property,param,environment,this,application,s,environment,param,args,arguments,passed,to,the,code,run,method,see,configure,environment,configurable,environment,string,see,org,springframework,boot,context,config,config,file,application,listener;protected,void,configure,profiles,configurable,environment,environment,string,args,environment,get,active,profiles,set,string,profiles,new,linked,hash,set,this,additional,profiles,profiles,add,all,arrays,as,list,environment,get,active,profiles,environment,set,active,profiles,string,utils,to,string,array,profiles
SpringApplication -> protected void configureProfiles(ConfigurableEnvironment environment, String[] args);1536701067;Configure which profiles are active (or active by default) for this application_environment. Additional profiles may be activated during configuration file_processing via the {@code spring.profiles.active} property._@param environment this application's environment_@param args arguments passed to the {@code run} method_@see #configureEnvironment(ConfigurableEnvironment, String[])_@see org.springframework.boot.context.config.ConfigFileApplicationListener;protected void configureProfiles(ConfigurableEnvironment environment, String[] args) {_		environment.getActiveProfiles()_ _		_		Set<String> profiles = new LinkedHashSet<>(this.additionalProfiles)__		profiles.addAll(Arrays.asList(environment.getActiveProfiles()))__		environment.setActiveProfiles(StringUtils.toStringArray(profiles))__	};configure,which,profiles,are,active,or,active,by,default,for,this,application,environment,additional,profiles,may,be,activated,during,configuration,file,processing,via,the,code,spring,profiles,active,property,param,environment,this,application,s,environment,param,args,arguments,passed,to,the,code,run,method,see,configure,environment,configurable,environment,string,see,org,springframework,boot,context,config,config,file,application,listener;protected,void,configure,profiles,configurable,environment,environment,string,args,environment,get,active,profiles,set,string,profiles,new,linked,hash,set,this,additional,profiles,profiles,add,all,arrays,as,list,environment,get,active,profiles,environment,set,active,profiles,string,utils,to,string,array,profiles
SpringApplication -> protected void configureProfiles(ConfigurableEnvironment environment, String[] args);1538570355;Configure which profiles are active (or active by default) for this application_environment. Additional profiles may be activated during configuration file_processing via the {@code spring.profiles.active} property._@param environment this application's environment_@param args arguments passed to the {@code run} method_@see #configureEnvironment(ConfigurableEnvironment, String[])_@see org.springframework.boot.context.config.ConfigFileApplicationListener;protected void configureProfiles(ConfigurableEnvironment environment, String[] args) {_		environment.getActiveProfiles()_ _		_		Set<String> profiles = new LinkedHashSet<>(this.additionalProfiles)__		profiles.addAll(Arrays.asList(environment.getActiveProfiles()))__		environment.setActiveProfiles(StringUtils.toStringArray(profiles))__	};configure,which,profiles,are,active,or,active,by,default,for,this,application,environment,additional,profiles,may,be,activated,during,configuration,file,processing,via,the,code,spring,profiles,active,property,param,environment,this,application,s,environment,param,args,arguments,passed,to,the,code,run,method,see,configure,environment,configurable,environment,string,see,org,springframework,boot,context,config,config,file,application,listener;protected,void,configure,profiles,configurable,environment,environment,string,args,environment,get,active,profiles,set,string,profiles,new,linked,hash,set,this,additional,profiles,profiles,add,all,arrays,as,list,environment,get,active,profiles,environment,set,active,profiles,string,utils,to,string,array,profiles
SpringApplication -> protected void configureProfiles(ConfigurableEnvironment environment, String[] args);1538707540;Configure which profiles are active (or active by default) for this application_environment. Additional profiles may be activated during configuration file_processing via the {@code spring.profiles.active} property._@param environment this application's environment_@param args arguments passed to the {@code run} method_@see #configureEnvironment(ConfigurableEnvironment, String[])_@see org.springframework.boot.context.config.ConfigFileApplicationListener;protected void configureProfiles(ConfigurableEnvironment environment, String[] args) {_		environment.getActiveProfiles()_ _		_		Set<String> profiles = new LinkedHashSet<>(this.additionalProfiles)__		profiles.addAll(Arrays.asList(environment.getActiveProfiles()))__		environment.setActiveProfiles(StringUtils.toStringArray(profiles))__	};configure,which,profiles,are,active,or,active,by,default,for,this,application,environment,additional,profiles,may,be,activated,during,configuration,file,processing,via,the,code,spring,profiles,active,property,param,environment,this,application,s,environment,param,args,arguments,passed,to,the,code,run,method,see,configure,environment,configurable,environment,string,see,org,springframework,boot,context,config,config,file,application,listener;protected,void,configure,profiles,configurable,environment,environment,string,args,environment,get,active,profiles,set,string,profiles,new,linked,hash,set,this,additional,profiles,profiles,add,all,arrays,as,list,environment,get,active,profiles,environment,set,active,profiles,string,utils,to,string,array,profiles
SpringApplication -> protected void configureProfiles(ConfigurableEnvironment environment, String[] args);1538750610;Configure which profiles are active (or active by default) for this application_environment. Additional profiles may be activated during configuration file_processing via the {@code spring.profiles.active} property._@param environment this application's environment_@param args arguments passed to the {@code run} method_@see #configureEnvironment(ConfigurableEnvironment, String[])_@see org.springframework.boot.context.config.ConfigFileApplicationListener;protected void configureProfiles(ConfigurableEnvironment environment, String[] args) {_		environment.getActiveProfiles()_ _		_		Set<String> profiles = new LinkedHashSet<>(this.additionalProfiles)__		profiles.addAll(Arrays.asList(environment.getActiveProfiles()))__		environment.setActiveProfiles(StringUtils.toStringArray(profiles))__	};configure,which,profiles,are,active,or,active,by,default,for,this,application,environment,additional,profiles,may,be,activated,during,configuration,file,processing,via,the,code,spring,profiles,active,property,param,environment,this,application,s,environment,param,args,arguments,passed,to,the,code,run,method,see,configure,environment,configurable,environment,string,see,org,springframework,boot,context,config,config,file,application,listener;protected,void,configure,profiles,configurable,environment,environment,string,args,environment,get,active,profiles,set,string,profiles,new,linked,hash,set,this,additional,profiles,profiles,add,all,arrays,as,list,environment,get,active,profiles,environment,set,active,profiles,string,utils,to,string,array,profiles
SpringApplication -> protected void configureProfiles(ConfigurableEnvironment environment, String[] args);1538771652;Configure which profiles are active (or active by default) for this application_environment. Additional profiles may be activated during configuration file_processing via the {@code spring.profiles.active} property._@param environment this application's environment_@param args arguments passed to the {@code run} method_@see #configureEnvironment(ConfigurableEnvironment, String[])_@see org.springframework.boot.context.config.ConfigFileApplicationListener;protected void configureProfiles(ConfigurableEnvironment environment, String[] args) {_		environment.getActiveProfiles()_ _		_		Set<String> profiles = new LinkedHashSet<>(this.additionalProfiles)__		profiles.addAll(Arrays.asList(environment.getActiveProfiles()))__		environment.setActiveProfiles(StringUtils.toStringArray(profiles))__	};configure,which,profiles,are,active,or,active,by,default,for,this,application,environment,additional,profiles,may,be,activated,during,configuration,file,processing,via,the,code,spring,profiles,active,property,param,environment,this,application,s,environment,param,args,arguments,passed,to,the,code,run,method,see,configure,environment,configurable,environment,string,see,org,springframework,boot,context,config,config,file,application,listener;protected,void,configure,profiles,configurable,environment,environment,string,args,environment,get,active,profiles,set,string,profiles,new,linked,hash,set,this,additional,profiles,profiles,add,all,arrays,as,list,environment,get,active,profiles,environment,set,active,profiles,string,utils,to,string,array,profiles
SpringApplication -> protected void configureProfiles(ConfigurableEnvironment environment, String[] args);1540419762;Configure which profiles are active (or active by default) for this application_environment. Additional profiles may be activated during configuration file_processing via the {@code spring.profiles.active} property._@param environment this application's environment_@param args arguments passed to the {@code run} method_@see #configureEnvironment(ConfigurableEnvironment, String[])_@see org.springframework.boot.context.config.ConfigFileApplicationListener;protected void configureProfiles(ConfigurableEnvironment environment, String[] args) {_		environment.getActiveProfiles()_ _		_		Set<String> profiles = new LinkedHashSet<>(this.additionalProfiles)__		profiles.addAll(Arrays.asList(environment.getActiveProfiles()))__		environment.setActiveProfiles(StringUtils.toStringArray(profiles))__	};configure,which,profiles,are,active,or,active,by,default,for,this,application,environment,additional,profiles,may,be,activated,during,configuration,file,processing,via,the,code,spring,profiles,active,property,param,environment,this,application,s,environment,param,args,arguments,passed,to,the,code,run,method,see,configure,environment,configurable,environment,string,see,org,springframework,boot,context,config,config,file,application,listener;protected,void,configure,profiles,configurable,environment,environment,string,args,environment,get,active,profiles,set,string,profiles,new,linked,hash,set,this,additional,profiles,profiles,add,all,arrays,as,list,environment,get,active,profiles,environment,set,active,profiles,string,utils,to,string,array,profiles
SpringApplication -> protected void configureProfiles(ConfigurableEnvironment environment, String[] args);1541060131;Configure which profiles are active (or active by default) for this application_environment. Additional profiles may be activated during configuration file_processing via the {@code spring.profiles.active} property._@param environment this application's environment_@param args arguments passed to the {@code run} method_@see #configureEnvironment(ConfigurableEnvironment, String[])_@see org.springframework.boot.context.config.ConfigFileApplicationListener;protected void configureProfiles(ConfigurableEnvironment environment, String[] args) {_		environment.getActiveProfiles()_ _		_		Set<String> profiles = new LinkedHashSet<>(this.additionalProfiles)__		profiles.addAll(Arrays.asList(environment.getActiveProfiles()))__		environment.setActiveProfiles(StringUtils.toStringArray(profiles))__	};configure,which,profiles,are,active,or,active,by,default,for,this,application,environment,additional,profiles,may,be,activated,during,configuration,file,processing,via,the,code,spring,profiles,active,property,param,environment,this,application,s,environment,param,args,arguments,passed,to,the,code,run,method,see,configure,environment,configurable,environment,string,see,org,springframework,boot,context,config,config,file,application,listener;protected,void,configure,profiles,configurable,environment,environment,string,args,environment,get,active,profiles,set,string,profiles,new,linked,hash,set,this,additional,profiles,profiles,add,all,arrays,as,list,environment,get,active,profiles,environment,set,active,profiles,string,utils,to,string,array,profiles
SpringApplication -> protected void configureProfiles(ConfigurableEnvironment environment, String[] args);1546943477;Configure which profiles are active (or active by default) for this application_environment. Additional profiles may be activated during configuration file_processing via the {@code spring.profiles.active} property._@param environment this application's environment_@param args arguments passed to the {@code run} method_@see #configureEnvironment(ConfigurableEnvironment, String[])_@see org.springframework.boot.context.config.ConfigFileApplicationListener;protected void configureProfiles(ConfigurableEnvironment environment, String[] args) {_		environment.getActiveProfiles()_ _		_		Set<String> profiles = new LinkedHashSet<>(this.additionalProfiles)__		profiles.addAll(Arrays.asList(environment.getActiveProfiles()))__		environment.setActiveProfiles(StringUtils.toStringArray(profiles))__	};configure,which,profiles,are,active,or,active,by,default,for,this,application,environment,additional,profiles,may,be,activated,during,configuration,file,processing,via,the,code,spring,profiles,active,property,param,environment,this,application,s,environment,param,args,arguments,passed,to,the,code,run,method,see,configure,environment,configurable,environment,string,see,org,springframework,boot,context,config,config,file,application,listener;protected,void,configure,profiles,configurable,environment,environment,string,args,environment,get,active,profiles,set,string,profiles,new,linked,hash,set,this,additional,profiles,profiles,add,all,arrays,as,list,environment,get,active,profiles,environment,set,active,profiles,string,utils,to,string,array,profiles
SpringApplication -> protected void configureProfiles(ConfigurableEnvironment environment, String[] args);1549791353;Configure which profiles are active (or active by default) for this application_environment. Additional profiles may be activated during configuration file_processing via the {@code spring.profiles.active} property._@param environment this application's environment_@param args arguments passed to the {@code run} method_@see #configureEnvironment(ConfigurableEnvironment, String[])_@see org.springframework.boot.context.config.ConfigFileApplicationListener;protected void configureProfiles(ConfigurableEnvironment environment, String[] args) {_		environment.getActiveProfiles()_ _		_		Set<String> profiles = new LinkedHashSet<>(this.additionalProfiles)__		profiles.addAll(Arrays.asList(environment.getActiveProfiles()))__		environment.setActiveProfiles(StringUtils.toStringArray(profiles))__	};configure,which,profiles,are,active,or,active,by,default,for,this,application,environment,additional,profiles,may,be,activated,during,configuration,file,processing,via,the,code,spring,profiles,active,property,param,environment,this,application,s,environment,param,args,arguments,passed,to,the,code,run,method,see,configure,environment,configurable,environment,string,see,org,springframework,boot,context,config,config,file,application,listener;protected,void,configure,profiles,configurable,environment,environment,string,args,environment,get,active,profiles,set,string,profiles,new,linked,hash,set,this,additional,profiles,profiles,add,all,arrays,as,list,environment,get,active,profiles,environment,set,active,profiles,string,utils,to,string,array,profiles
SpringApplication -> protected void configureProfiles(ConfigurableEnvironment environment, String[] args);1550148109;Configure which profiles are active (or active by default) for this application_environment. Additional profiles may be activated during configuration file_processing via the {@code spring.profiles.active} property._@param environment this application's environment_@param args arguments passed to the {@code run} method_@see #configureEnvironment(ConfigurableEnvironment, String[])_@see org.springframework.boot.context.config.ConfigFileApplicationListener;protected void configureProfiles(ConfigurableEnvironment environment, String[] args) {_		environment.getActiveProfiles()_ _		_		Set<String> profiles = new LinkedHashSet<>(this.additionalProfiles)__		profiles.addAll(Arrays.asList(environment.getActiveProfiles()))__		environment.setActiveProfiles(StringUtils.toStringArray(profiles))__	};configure,which,profiles,are,active,or,active,by,default,for,this,application,environment,additional,profiles,may,be,activated,during,configuration,file,processing,via,the,code,spring,profiles,active,property,param,environment,this,application,s,environment,param,args,arguments,passed,to,the,code,run,method,see,configure,environment,configurable,environment,string,see,org,springframework,boot,context,config,config,file,application,listener;protected,void,configure,profiles,configurable,environment,environment,string,args,environment,get,active,profiles,set,string,profiles,new,linked,hash,set,this,additional,profiles,profiles,add,all,arrays,as,list,environment,get,active,profiles,environment,set,active,profiles,string,utils,to,string,array,profiles
SpringApplication -> private BeanDefinitionRegistry getBeanDefinitionRegistry(ApplicationContext context);1507173536;Get the bean definition registry._@param context the application context_@return the BeanDefinitionRegistry if it can be determined;private BeanDefinitionRegistry getBeanDefinitionRegistry(ApplicationContext context) {_		if (context instanceof BeanDefinitionRegistry) {_			return (BeanDefinitionRegistry) context__		}_		if (context instanceof AbstractApplicationContext) {_			return (BeanDefinitionRegistry) ((AbstractApplicationContext) context)_					.getBeanFactory()__		}_		throw new IllegalStateException("Could not locate BeanDefinitionRegistry")__	};get,the,bean,definition,registry,param,context,the,application,context,return,the,bean,definition,registry,if,it,can,be,determined;private,bean,definition,registry,get,bean,definition,registry,application,context,context,if,context,instanceof,bean,definition,registry,return,bean,definition,registry,context,if,context,instanceof,abstract,application,context,return,bean,definition,registry,abstract,application,context,context,get,bean,factory,throw,new,illegal,state,exception,could,not,locate,bean,definition,registry
SpringApplication -> private BeanDefinitionRegistry getBeanDefinitionRegistry(ApplicationContext context);1509381678;Get the bean definition registry._@param context the application context_@return the BeanDefinitionRegistry if it can be determined;private BeanDefinitionRegistry getBeanDefinitionRegistry(ApplicationContext context) {_		if (context instanceof BeanDefinitionRegistry) {_			return (BeanDefinitionRegistry) context__		}_		if (context instanceof AbstractApplicationContext) {_			return (BeanDefinitionRegistry) ((AbstractApplicationContext) context)_					.getBeanFactory()__		}_		throw new IllegalStateException("Could not locate BeanDefinitionRegistry")__	};get,the,bean,definition,registry,param,context,the,application,context,return,the,bean,definition,registry,if,it,can,be,determined;private,bean,definition,registry,get,bean,definition,registry,application,context,context,if,context,instanceof,bean,definition,registry,return,bean,definition,registry,context,if,context,instanceof,abstract,application,context,return,bean,definition,registry,abstract,application,context,context,get,bean,factory,throw,new,illegal,state,exception,could,not,locate,bean,definition,registry
SpringApplication -> private BeanDefinitionRegistry getBeanDefinitionRegistry(ApplicationContext context);1510995225;Get the bean definition registry._@param context the application context_@return the BeanDefinitionRegistry if it can be determined;private BeanDefinitionRegistry getBeanDefinitionRegistry(ApplicationContext context) {_		if (context instanceof BeanDefinitionRegistry) {_			return (BeanDefinitionRegistry) context__		}_		if (context instanceof AbstractApplicationContext) {_			return (BeanDefinitionRegistry) ((AbstractApplicationContext) context)_					.getBeanFactory()__		}_		throw new IllegalStateException("Could not locate BeanDefinitionRegistry")__	};get,the,bean,definition,registry,param,context,the,application,context,return,the,bean,definition,registry,if,it,can,be,determined;private,bean,definition,registry,get,bean,definition,registry,application,context,context,if,context,instanceof,bean,definition,registry,return,bean,definition,registry,context,if,context,instanceof,abstract,application,context,return,bean,definition,registry,abstract,application,context,context,get,bean,factory,throw,new,illegal,state,exception,could,not,locate,bean,definition,registry
SpringApplication -> private BeanDefinitionRegistry getBeanDefinitionRegistry(ApplicationContext context);1515670013;Get the bean definition registry._@param context the application context_@return the BeanDefinitionRegistry if it can be determined;private BeanDefinitionRegistry getBeanDefinitionRegistry(ApplicationContext context) {_		if (context instanceof BeanDefinitionRegistry) {_			return (BeanDefinitionRegistry) context__		}_		if (context instanceof AbstractApplicationContext) {_			return (BeanDefinitionRegistry) ((AbstractApplicationContext) context)_					.getBeanFactory()__		}_		throw new IllegalStateException("Could not locate BeanDefinitionRegistry")__	};get,the,bean,definition,registry,param,context,the,application,context,return,the,bean,definition,registry,if,it,can,be,determined;private,bean,definition,registry,get,bean,definition,registry,application,context,context,if,context,instanceof,bean,definition,registry,return,bean,definition,registry,context,if,context,instanceof,abstract,application,context,return,bean,definition,registry,abstract,application,context,context,get,bean,factory,throw,new,illegal,state,exception,could,not,locate,bean,definition,registry
SpringApplication -> private BeanDefinitionRegistry getBeanDefinitionRegistry(ApplicationContext context);1519362690;Get the bean definition registry._@param context the application context_@return the BeanDefinitionRegistry if it can be determined;private BeanDefinitionRegistry getBeanDefinitionRegistry(ApplicationContext context) {_		if (context instanceof BeanDefinitionRegistry) {_			return (BeanDefinitionRegistry) context__		}_		if (context instanceof AbstractApplicationContext) {_			return (BeanDefinitionRegistry) ((AbstractApplicationContext) context)_					.getBeanFactory()__		}_		throw new IllegalStateException("Could not locate BeanDefinitionRegistry")__	};get,the,bean,definition,registry,param,context,the,application,context,return,the,bean,definition,registry,if,it,can,be,determined;private,bean,definition,registry,get,bean,definition,registry,application,context,context,if,context,instanceof,bean,definition,registry,return,bean,definition,registry,context,if,context,instanceof,abstract,application,context,return,bean,definition,registry,abstract,application,context,context,get,bean,factory,throw,new,illegal,state,exception,could,not,locate,bean,definition,registry
SpringApplication -> private BeanDefinitionRegistry getBeanDefinitionRegistry(ApplicationContext context);1522251721;Get the bean definition registry._@param context the application context_@return the BeanDefinitionRegistry if it can be determined;private BeanDefinitionRegistry getBeanDefinitionRegistry(ApplicationContext context) {_		if (context instanceof BeanDefinitionRegistry) {_			return (BeanDefinitionRegistry) context__		}_		if (context instanceof AbstractApplicationContext) {_			return (BeanDefinitionRegistry) ((AbstractApplicationContext) context)_					.getBeanFactory()__		}_		throw new IllegalStateException("Could not locate BeanDefinitionRegistry")__	};get,the,bean,definition,registry,param,context,the,application,context,return,the,bean,definition,registry,if,it,can,be,determined;private,bean,definition,registry,get,bean,definition,registry,application,context,context,if,context,instanceof,bean,definition,registry,return,bean,definition,registry,context,if,context,instanceof,abstract,application,context,return,bean,definition,registry,abstract,application,context,context,get,bean,factory,throw,new,illegal,state,exception,could,not,locate,bean,definition,registry
SpringApplication -> private BeanDefinitionRegistry getBeanDefinitionRegistry(ApplicationContext context);1525376698;Get the bean definition registry._@param context the application context_@return the BeanDefinitionRegistry if it can be determined;private BeanDefinitionRegistry getBeanDefinitionRegistry(ApplicationContext context) {_		if (context instanceof BeanDefinitionRegistry) {_			return (BeanDefinitionRegistry) context__		}_		if (context instanceof AbstractApplicationContext) {_			return (BeanDefinitionRegistry) ((AbstractApplicationContext) context)_					.getBeanFactory()__		}_		throw new IllegalStateException("Could not locate BeanDefinitionRegistry")__	};get,the,bean,definition,registry,param,context,the,application,context,return,the,bean,definition,registry,if,it,can,be,determined;private,bean,definition,registry,get,bean,definition,registry,application,context,context,if,context,instanceof,bean,definition,registry,return,bean,definition,registry,context,if,context,instanceof,abstract,application,context,return,bean,definition,registry,abstract,application,context,context,get,bean,factory,throw,new,illegal,state,exception,could,not,locate,bean,definition,registry
SpringApplication -> private BeanDefinitionRegistry getBeanDefinitionRegistry(ApplicationContext context);1525416882;Get the bean definition registry._@param context the application context_@return the BeanDefinitionRegistry if it can be determined;private BeanDefinitionRegistry getBeanDefinitionRegistry(ApplicationContext context) {_		if (context instanceof BeanDefinitionRegistry) {_			return (BeanDefinitionRegistry) context__		}_		if (context instanceof AbstractApplicationContext) {_			return (BeanDefinitionRegistry) ((AbstractApplicationContext) context)_					.getBeanFactory()__		}_		throw new IllegalStateException("Could not locate BeanDefinitionRegistry")__	};get,the,bean,definition,registry,param,context,the,application,context,return,the,bean,definition,registry,if,it,can,be,determined;private,bean,definition,registry,get,bean,definition,registry,application,context,context,if,context,instanceof,bean,definition,registry,return,bean,definition,registry,context,if,context,instanceof,abstract,application,context,return,bean,definition,registry,abstract,application,context,context,get,bean,factory,throw,new,illegal,state,exception,could,not,locate,bean,definition,registry
SpringApplication -> private BeanDefinitionRegistry getBeanDefinitionRegistry(ApplicationContext context);1526993305;Get the bean definition registry._@param context the application context_@return the BeanDefinitionRegistry if it can be determined;private BeanDefinitionRegistry getBeanDefinitionRegistry(ApplicationContext context) {_		if (context instanceof BeanDefinitionRegistry) {_			return (BeanDefinitionRegistry) context__		}_		if (context instanceof AbstractApplicationContext) {_			return (BeanDefinitionRegistry) ((AbstractApplicationContext) context)_					.getBeanFactory()__		}_		throw new IllegalStateException("Could not locate BeanDefinitionRegistry")__	};get,the,bean,definition,registry,param,context,the,application,context,return,the,bean,definition,registry,if,it,can,be,determined;private,bean,definition,registry,get,bean,definition,registry,application,context,context,if,context,instanceof,bean,definition,registry,return,bean,definition,registry,context,if,context,instanceof,abstract,application,context,return,bean,definition,registry,abstract,application,context,context,get,bean,factory,throw,new,illegal,state,exception,could,not,locate,bean,definition,registry
SpringApplication -> private BeanDefinitionRegistry getBeanDefinitionRegistry(ApplicationContext context);1529485904;Get the bean definition registry._@param context the application context_@return the BeanDefinitionRegistry if it can be determined;private BeanDefinitionRegistry getBeanDefinitionRegistry(ApplicationContext context) {_		if (context instanceof BeanDefinitionRegistry) {_			return (BeanDefinitionRegistry) context__		}_		if (context instanceof AbstractApplicationContext) {_			return (BeanDefinitionRegistry) ((AbstractApplicationContext) context)_					.getBeanFactory()__		}_		throw new IllegalStateException("Could not locate BeanDefinitionRegistry")__	};get,the,bean,definition,registry,param,context,the,application,context,return,the,bean,definition,registry,if,it,can,be,determined;private,bean,definition,registry,get,bean,definition,registry,application,context,context,if,context,instanceof,bean,definition,registry,return,bean,definition,registry,context,if,context,instanceof,abstract,application,context,return,bean,definition,registry,abstract,application,context,context,get,bean,factory,throw,new,illegal,state,exception,could,not,locate,bean,definition,registry
SpringApplication -> private BeanDefinitionRegistry getBeanDefinitionRegistry(ApplicationContext context);1531140616;Get the bean definition registry._@param context the application context_@return the BeanDefinitionRegistry if it can be determined;private BeanDefinitionRegistry getBeanDefinitionRegistry(ApplicationContext context) {_		if (context instanceof BeanDefinitionRegistry) {_			return (BeanDefinitionRegistry) context__		}_		if (context instanceof AbstractApplicationContext) {_			return (BeanDefinitionRegistry) ((AbstractApplicationContext) context)_					.getBeanFactory()__		}_		throw new IllegalStateException("Could not locate BeanDefinitionRegistry")__	};get,the,bean,definition,registry,param,context,the,application,context,return,the,bean,definition,registry,if,it,can,be,determined;private,bean,definition,registry,get,bean,definition,registry,application,context,context,if,context,instanceof,bean,definition,registry,return,bean,definition,registry,context,if,context,instanceof,abstract,application,context,return,bean,definition,registry,abstract,application,context,context,get,bean,factory,throw,new,illegal,state,exception,could,not,locate,bean,definition,registry
SpringApplication -> private BeanDefinitionRegistry getBeanDefinitionRegistry(ApplicationContext context);1531155529;Get the bean definition registry._@param context the application context_@return the BeanDefinitionRegistry if it can be determined;private BeanDefinitionRegistry getBeanDefinitionRegistry(ApplicationContext context) {_		if (context instanceof BeanDefinitionRegistry) {_			return (BeanDefinitionRegistry) context__		}_		if (context instanceof AbstractApplicationContext) {_			return (BeanDefinitionRegistry) ((AbstractApplicationContext) context)_					.getBeanFactory()__		}_		throw new IllegalStateException("Could not locate BeanDefinitionRegistry")__	};get,the,bean,definition,registry,param,context,the,application,context,return,the,bean,definition,registry,if,it,can,be,determined;private,bean,definition,registry,get,bean,definition,registry,application,context,context,if,context,instanceof,bean,definition,registry,return,bean,definition,registry,context,if,context,instanceof,abstract,application,context,return,bean,definition,registry,abstract,application,context,context,get,bean,factory,throw,new,illegal,state,exception,could,not,locate,bean,definition,registry
SpringApplication -> private BeanDefinitionRegistry getBeanDefinitionRegistry(ApplicationContext context);1531222098;Get the bean definition registry._@param context the application context_@return the BeanDefinitionRegistry if it can be determined;private BeanDefinitionRegistry getBeanDefinitionRegistry(ApplicationContext context) {_		if (context instanceof BeanDefinitionRegistry) {_			return (BeanDefinitionRegistry) context__		}_		if (context instanceof AbstractApplicationContext) {_			return (BeanDefinitionRegistry) ((AbstractApplicationContext) context)_					.getBeanFactory()__		}_		throw new IllegalStateException("Could not locate BeanDefinitionRegistry")__	};get,the,bean,definition,registry,param,context,the,application,context,return,the,bean,definition,registry,if,it,can,be,determined;private,bean,definition,registry,get,bean,definition,registry,application,context,context,if,context,instanceof,bean,definition,registry,return,bean,definition,registry,context,if,context,instanceof,abstract,application,context,return,bean,definition,registry,abstract,application,context,context,get,bean,factory,throw,new,illegal,state,exception,could,not,locate,bean,definition,registry
SpringApplication -> private BeanDefinitionRegistry getBeanDefinitionRegistry(ApplicationContext context);1532738143;Get the bean definition registry._@param context the application context_@return the BeanDefinitionRegistry if it can be determined;private BeanDefinitionRegistry getBeanDefinitionRegistry(ApplicationContext context) {_		if (context instanceof BeanDefinitionRegistry) {_			return (BeanDefinitionRegistry) context__		}_		if (context instanceof AbstractApplicationContext) {_			return (BeanDefinitionRegistry) ((AbstractApplicationContext) context)_					.getBeanFactory()__		}_		throw new IllegalStateException("Could not locate BeanDefinitionRegistry")__	};get,the,bean,definition,registry,param,context,the,application,context,return,the,bean,definition,registry,if,it,can,be,determined;private,bean,definition,registry,get,bean,definition,registry,application,context,context,if,context,instanceof,bean,definition,registry,return,bean,definition,registry,context,if,context,instanceof,abstract,application,context,return,bean,definition,registry,abstract,application,context,context,get,bean,factory,throw,new,illegal,state,exception,could,not,locate,bean,definition,registry
SpringApplication -> private BeanDefinitionRegistry getBeanDefinitionRegistry(ApplicationContext context);1534188228;Get the bean definition registry._@param context the application context_@return the BeanDefinitionRegistry if it can be determined;private BeanDefinitionRegistry getBeanDefinitionRegistry(ApplicationContext context) {_		if (context instanceof BeanDefinitionRegistry) {_			return (BeanDefinitionRegistry) context__		}_		if (context instanceof AbstractApplicationContext) {_			return (BeanDefinitionRegistry) ((AbstractApplicationContext) context)_					.getBeanFactory()__		}_		throw new IllegalStateException("Could not locate BeanDefinitionRegistry")__	};get,the,bean,definition,registry,param,context,the,application,context,return,the,bean,definition,registry,if,it,can,be,determined;private,bean,definition,registry,get,bean,definition,registry,application,context,context,if,context,instanceof,bean,definition,registry,return,bean,definition,registry,context,if,context,instanceof,abstract,application,context,return,bean,definition,registry,abstract,application,context,context,get,bean,factory,throw,new,illegal,state,exception,could,not,locate,bean,definition,registry
SpringApplication -> private BeanDefinitionRegistry getBeanDefinitionRegistry(ApplicationContext context);1535104170;Get the bean definition registry._@param context the application context_@return the BeanDefinitionRegistry if it can be determined;private BeanDefinitionRegistry getBeanDefinitionRegistry(ApplicationContext context) {_		if (context instanceof BeanDefinitionRegistry) {_			return (BeanDefinitionRegistry) context__		}_		if (context instanceof AbstractApplicationContext) {_			return (BeanDefinitionRegistry) ((AbstractApplicationContext) context)_					.getBeanFactory()__		}_		throw new IllegalStateException("Could not locate BeanDefinitionRegistry")__	};get,the,bean,definition,registry,param,context,the,application,context,return,the,bean,definition,registry,if,it,can,be,determined;private,bean,definition,registry,get,bean,definition,registry,application,context,context,if,context,instanceof,bean,definition,registry,return,bean,definition,registry,context,if,context,instanceof,abstract,application,context,return,bean,definition,registry,abstract,application,context,context,get,bean,factory,throw,new,illegal,state,exception,could,not,locate,bean,definition,registry
SpringApplication -> private BeanDefinitionRegistry getBeanDefinitionRegistry(ApplicationContext context);1536701067;Get the bean definition registry._@param context the application context_@return the BeanDefinitionRegistry if it can be determined;private BeanDefinitionRegistry getBeanDefinitionRegistry(ApplicationContext context) {_		if (context instanceof BeanDefinitionRegistry) {_			return (BeanDefinitionRegistry) context__		}_		if (context instanceof AbstractApplicationContext) {_			return (BeanDefinitionRegistry) ((AbstractApplicationContext) context)_					.getBeanFactory()__		}_		throw new IllegalStateException("Could not locate BeanDefinitionRegistry")__	};get,the,bean,definition,registry,param,context,the,application,context,return,the,bean,definition,registry,if,it,can,be,determined;private,bean,definition,registry,get,bean,definition,registry,application,context,context,if,context,instanceof,bean,definition,registry,return,bean,definition,registry,context,if,context,instanceof,abstract,application,context,return,bean,definition,registry,abstract,application,context,context,get,bean,factory,throw,new,illegal,state,exception,could,not,locate,bean,definition,registry
SpringApplication -> private BeanDefinitionRegistry getBeanDefinitionRegistry(ApplicationContext context);1538570355;Get the bean definition registry._@param context the application context_@return the BeanDefinitionRegistry if it can be determined;private BeanDefinitionRegistry getBeanDefinitionRegistry(ApplicationContext context) {_		if (context instanceof BeanDefinitionRegistry) {_			return (BeanDefinitionRegistry) context__		}_		if (context instanceof AbstractApplicationContext) {_			return (BeanDefinitionRegistry) ((AbstractApplicationContext) context)_					.getBeanFactory()__		}_		throw new IllegalStateException("Could not locate BeanDefinitionRegistry")__	};get,the,bean,definition,registry,param,context,the,application,context,return,the,bean,definition,registry,if,it,can,be,determined;private,bean,definition,registry,get,bean,definition,registry,application,context,context,if,context,instanceof,bean,definition,registry,return,bean,definition,registry,context,if,context,instanceof,abstract,application,context,return,bean,definition,registry,abstract,application,context,context,get,bean,factory,throw,new,illegal,state,exception,could,not,locate,bean,definition,registry
SpringApplication -> private BeanDefinitionRegistry getBeanDefinitionRegistry(ApplicationContext context);1538707540;Get the bean definition registry._@param context the application context_@return the BeanDefinitionRegistry if it can be determined;private BeanDefinitionRegistry getBeanDefinitionRegistry(ApplicationContext context) {_		if (context instanceof BeanDefinitionRegistry) {_			return (BeanDefinitionRegistry) context__		}_		if (context instanceof AbstractApplicationContext) {_			return (BeanDefinitionRegistry) ((AbstractApplicationContext) context)_					.getBeanFactory()__		}_		throw new IllegalStateException("Could not locate BeanDefinitionRegistry")__	};get,the,bean,definition,registry,param,context,the,application,context,return,the,bean,definition,registry,if,it,can,be,determined;private,bean,definition,registry,get,bean,definition,registry,application,context,context,if,context,instanceof,bean,definition,registry,return,bean,definition,registry,context,if,context,instanceof,abstract,application,context,return,bean,definition,registry,abstract,application,context,context,get,bean,factory,throw,new,illegal,state,exception,could,not,locate,bean,definition,registry
SpringApplication -> private BeanDefinitionRegistry getBeanDefinitionRegistry(ApplicationContext context);1538750610;Get the bean definition registry._@param context the application context_@return the BeanDefinitionRegistry if it can be determined;private BeanDefinitionRegistry getBeanDefinitionRegistry(ApplicationContext context) {_		if (context instanceof BeanDefinitionRegistry) {_			return (BeanDefinitionRegistry) context__		}_		if (context instanceof AbstractApplicationContext) {_			return (BeanDefinitionRegistry) ((AbstractApplicationContext) context)_					.getBeanFactory()__		}_		throw new IllegalStateException("Could not locate BeanDefinitionRegistry")__	};get,the,bean,definition,registry,param,context,the,application,context,return,the,bean,definition,registry,if,it,can,be,determined;private,bean,definition,registry,get,bean,definition,registry,application,context,context,if,context,instanceof,bean,definition,registry,return,bean,definition,registry,context,if,context,instanceof,abstract,application,context,return,bean,definition,registry,abstract,application,context,context,get,bean,factory,throw,new,illegal,state,exception,could,not,locate,bean,definition,registry
SpringApplication -> private BeanDefinitionRegistry getBeanDefinitionRegistry(ApplicationContext context);1538771652;Get the bean definition registry._@param context the application context_@return the BeanDefinitionRegistry if it can be determined;private BeanDefinitionRegistry getBeanDefinitionRegistry(ApplicationContext context) {_		if (context instanceof BeanDefinitionRegistry) {_			return (BeanDefinitionRegistry) context__		}_		if (context instanceof AbstractApplicationContext) {_			return (BeanDefinitionRegistry) ((AbstractApplicationContext) context)_					.getBeanFactory()__		}_		throw new IllegalStateException("Could not locate BeanDefinitionRegistry")__	};get,the,bean,definition,registry,param,context,the,application,context,return,the,bean,definition,registry,if,it,can,be,determined;private,bean,definition,registry,get,bean,definition,registry,application,context,context,if,context,instanceof,bean,definition,registry,return,bean,definition,registry,context,if,context,instanceof,abstract,application,context,return,bean,definition,registry,abstract,application,context,context,get,bean,factory,throw,new,illegal,state,exception,could,not,locate,bean,definition,registry
SpringApplication -> private BeanDefinitionRegistry getBeanDefinitionRegistry(ApplicationContext context);1540419762;Get the bean definition registry._@param context the application context_@return the BeanDefinitionRegistry if it can be determined;private BeanDefinitionRegistry getBeanDefinitionRegistry(ApplicationContext context) {_		if (context instanceof BeanDefinitionRegistry) {_			return (BeanDefinitionRegistry) context__		}_		if (context instanceof AbstractApplicationContext) {_			return (BeanDefinitionRegistry) ((AbstractApplicationContext) context)_					.getBeanFactory()__		}_		throw new IllegalStateException("Could not locate BeanDefinitionRegistry")__	};get,the,bean,definition,registry,param,context,the,application,context,return,the,bean,definition,registry,if,it,can,be,determined;private,bean,definition,registry,get,bean,definition,registry,application,context,context,if,context,instanceof,bean,definition,registry,return,bean,definition,registry,context,if,context,instanceof,abstract,application,context,return,bean,definition,registry,abstract,application,context,context,get,bean,factory,throw,new,illegal,state,exception,could,not,locate,bean,definition,registry
SpringApplication -> private BeanDefinitionRegistry getBeanDefinitionRegistry(ApplicationContext context);1541060131;Get the bean definition registry._@param context the application context_@return the BeanDefinitionRegistry if it can be determined;private BeanDefinitionRegistry getBeanDefinitionRegistry(ApplicationContext context) {_		if (context instanceof BeanDefinitionRegistry) {_			return (BeanDefinitionRegistry) context__		}_		if (context instanceof AbstractApplicationContext) {_			return (BeanDefinitionRegistry) ((AbstractApplicationContext) context)_					.getBeanFactory()__		}_		throw new IllegalStateException("Could not locate BeanDefinitionRegistry")__	};get,the,bean,definition,registry,param,context,the,application,context,return,the,bean,definition,registry,if,it,can,be,determined;private,bean,definition,registry,get,bean,definition,registry,application,context,context,if,context,instanceof,bean,definition,registry,return,bean,definition,registry,context,if,context,instanceof,abstract,application,context,return,bean,definition,registry,abstract,application,context,context,get,bean,factory,throw,new,illegal,state,exception,could,not,locate,bean,definition,registry
SpringApplication -> private BeanDefinitionRegistry getBeanDefinitionRegistry(ApplicationContext context);1546943477;Get the bean definition registry._@param context the application context_@return the BeanDefinitionRegistry if it can be determined;private BeanDefinitionRegistry getBeanDefinitionRegistry(ApplicationContext context) {_		if (context instanceof BeanDefinitionRegistry) {_			return (BeanDefinitionRegistry) context__		}_		if (context instanceof AbstractApplicationContext) {_			return (BeanDefinitionRegistry) ((AbstractApplicationContext) context)_					.getBeanFactory()__		}_		throw new IllegalStateException("Could not locate BeanDefinitionRegistry")__	};get,the,bean,definition,registry,param,context,the,application,context,return,the,bean,definition,registry,if,it,can,be,determined;private,bean,definition,registry,get,bean,definition,registry,application,context,context,if,context,instanceof,bean,definition,registry,return,bean,definition,registry,context,if,context,instanceof,abstract,application,context,return,bean,definition,registry,abstract,application,context,context,get,bean,factory,throw,new,illegal,state,exception,could,not,locate,bean,definition,registry
SpringApplication -> private BeanDefinitionRegistry getBeanDefinitionRegistry(ApplicationContext context);1549791353;Get the bean definition registry._@param context the application context_@return the BeanDefinitionRegistry if it can be determined;private BeanDefinitionRegistry getBeanDefinitionRegistry(ApplicationContext context) {_		if (context instanceof BeanDefinitionRegistry) {_			return (BeanDefinitionRegistry) context__		}_		if (context instanceof AbstractApplicationContext) {_			return (BeanDefinitionRegistry) ((AbstractApplicationContext) context)_					.getBeanFactory()__		}_		throw new IllegalStateException("Could not locate BeanDefinitionRegistry")__	};get,the,bean,definition,registry,param,context,the,application,context,return,the,bean,definition,registry,if,it,can,be,determined;private,bean,definition,registry,get,bean,definition,registry,application,context,context,if,context,instanceof,bean,definition,registry,return,bean,definition,registry,context,if,context,instanceof,abstract,application,context,return,bean,definition,registry,abstract,application,context,context,get,bean,factory,throw,new,illegal,state,exception,could,not,locate,bean,definition,registry
SpringApplication -> private BeanDefinitionRegistry getBeanDefinitionRegistry(ApplicationContext context);1550148109;Get the bean definition registry._@param context the application context_@return the BeanDefinitionRegistry if it can be determined;private BeanDefinitionRegistry getBeanDefinitionRegistry(ApplicationContext context) {_		if (context instanceof BeanDefinitionRegistry) {_			return (BeanDefinitionRegistry) context__		}_		if (context instanceof AbstractApplicationContext) {_			return (BeanDefinitionRegistry) ((AbstractApplicationContext) context)_					.getBeanFactory()__		}_		throw new IllegalStateException("Could not locate BeanDefinitionRegistry")__	};get,the,bean,definition,registry,param,context,the,application,context,return,the,bean,definition,registry,if,it,can,be,determined;private,bean,definition,registry,get,bean,definition,registry,application,context,context,if,context,instanceof,bean,definition,registry,return,bean,definition,registry,context,if,context,instanceof,abstract,application,context,return,bean,definition,registry,abstract,application,context,context,get,bean,factory,throw,new,illegal,state,exception,could,not,locate,bean,definition,registry
