commented;modifiers;parameterAmount;loc;comment;code
true;public;0;3;/**  * Return whether to enable SSL support.  * @return whether to enable SSL support  */ ;/**  * Return whether to enable SSL support.  * @return whether to enable SSL support  */ public boolean isEnabled() {     return this.enabled. }
false;public;1;3;;public void setEnabled(boolean enabled) {     this.enabled = enabled. }
true;public;0;3;/**  * Return Whether client authentication is not wanted ("none"), wanted ("want") or  * needed ("need"). Requires a trust store.  * @return the {@link ClientAuth} to use  */ ;/**  * Return Whether client authentication is not wanted ("none"), wanted ("want") or  * needed ("need"). Requires a trust store.  * @return the {@link ClientAuth} to use  */ public ClientAuth getClientAuth() {     return this.clientAuth. }
false;public;1;3;;public void setClientAuth(ClientAuth clientAuth) {     this.clientAuth = clientAuth. }
true;public;0;3;/**  * Return the supported SSL ciphers.  * @return the supported SSL ciphers  */ ;/**  * Return the supported SSL ciphers.  * @return the supported SSL ciphers  */ public String[] getCiphers() {     return this.ciphers. }
false;public;1;3;;public void setCiphers(String[] ciphers) {     this.ciphers = ciphers. }
true;public;0;3;/**  * Return the enabled SSL protocols.  * @return the enabled SSL protocols.  */ ;/**  * Return the enabled SSL protocols.  * @return the enabled SSL protocols.  */ public String[] getEnabledProtocols() {     return this.enabledProtocols. }
false;public;1;3;;public void setEnabledProtocols(String[] enabledProtocols) {     this.enabledProtocols = enabledProtocols. }
true;public;0;3;/**  * Return the alias that identifies the key in the key store.  * @return the key alias  */ ;/**  * Return the alias that identifies the key in the key store.  * @return the key alias  */ public String getKeyAlias() {     return this.keyAlias. }
false;public;1;3;;public void setKeyAlias(String keyAlias) {     this.keyAlias = keyAlias. }
true;public;0;3;/**  * Return the password used to access the key in the key store.  * @return the key password  */ ;/**  * Return the password used to access the key in the key store.  * @return the key password  */ public String getKeyPassword() {     return this.keyPassword. }
false;public;1;3;;public void setKeyPassword(String keyPassword) {     this.keyPassword = keyPassword. }
true;public;0;3;/**  * Return the path to the key store that holds the SSL certificate (typically a jks  * file).  * @return the path to the key store  */ ;/**  * Return the path to the key store that holds the SSL certificate (typically a jks  * file).  * @return the path to the key store  */ public String getKeyStore() {     return this.keyStore. }
false;public;1;3;;public void setKeyStore(String keyStore) {     this.keyStore = keyStore. }
true;public;0;3;/**  * Return the password used to access the key store.  * @return the key store password  */ ;/**  * Return the password used to access the key store.  * @return the key store password  */ public String getKeyStorePassword() {     return this.keyStorePassword. }
false;public;1;3;;public void setKeyStorePassword(String keyStorePassword) {     this.keyStorePassword = keyStorePassword. }
true;public;0;3;/**  * Return the type of the key store.  * @return the key store type  */ ;/**  * Return the type of the key store.  * @return the key store type  */ public String getKeyStoreType() {     return this.keyStoreType. }
false;public;1;3;;public void setKeyStoreType(String keyStoreType) {     this.keyStoreType = keyStoreType. }
true;public;0;3;/**  * Return the provider for the key store.  * @return the key store provider  */ ;/**  * Return the provider for the key store.  * @return the key store provider  */ public String getKeyStoreProvider() {     return this.keyStoreProvider. }
false;public;1;3;;public void setKeyStoreProvider(String keyStoreProvider) {     this.keyStoreProvider = keyStoreProvider. }
true;public;0;3;/**  * Return the trust store that holds SSL certificates.  * @return the trust store  */ ;/**  * Return the trust store that holds SSL certificates.  * @return the trust store  */ public String getTrustStore() {     return this.trustStore. }
false;public;1;3;;public void setTrustStore(String trustStore) {     this.trustStore = trustStore. }
true;public;0;3;/**  * Return the password used to access the trust store.  * @return the trust store password  */ ;/**  * Return the password used to access the trust store.  * @return the trust store password  */ public String getTrustStorePassword() {     return this.trustStorePassword. }
false;public;1;3;;public void setTrustStorePassword(String trustStorePassword) {     this.trustStorePassword = trustStorePassword. }
true;public;0;3;/**  * Return the type of the trust store.  * @return the trust store type  */ ;/**  * Return the type of the trust store.  * @return the trust store type  */ public String getTrustStoreType() {     return this.trustStoreType. }
false;public;1;3;;public void setTrustStoreType(String trustStoreType) {     this.trustStoreType = trustStoreType. }
true;public;0;3;/**  * Return the provider for the trust store.  * @return the trust store provider  */ ;/**  * Return the provider for the trust store.  * @return the trust store provider  */ public String getTrustStoreProvider() {     return this.trustStoreProvider. }
false;public;1;3;;public void setTrustStoreProvider(String trustStoreProvider) {     this.trustStoreProvider = trustStoreProvider. }
true;public;0;3;/**  * Return the SSL protocol to use.  * @return the SSL protocol  */ ;/**  * Return the SSL protocol to use.  * @return the SSL protocol  */ public String getProtocol() {     return this.protocol. }
false;public;1;3;;public void setProtocol(String protocol) {     this.protocol = protocol. }
