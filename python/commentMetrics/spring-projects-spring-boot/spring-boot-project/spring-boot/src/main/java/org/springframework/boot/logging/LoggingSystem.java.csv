# id;timestamp;commentText;codeText;commentWords;codeWords
LoggingSystem -> public void initialize(LoggingInitializationContext initializationContext, 			String configLocation, LogFile logFile);1507173536;Fully initialize the logging system._@param initializationContext the logging initialization context_@param configLocation a log configuration location or {@code null} if default_initialization is required_@param logFile the log output file that should be written or {@code null} for_console only output;public void initialize(LoggingInitializationContext initializationContext,_			String configLocation, LogFile logFile) {_	};fully,initialize,the,logging,system,param,initialization,context,the,logging,initialization,context,param,config,location,a,log,configuration,location,or,code,null,if,default,initialization,is,required,param,log,file,the,log,output,file,that,should,be,written,or,code,null,for,console,only,output;public,void,initialize,logging,initialization,context,initialization,context,string,config,location,log,file,log,file
LoggingSystem -> public void initialize(LoggingInitializationContext initializationContext, 			String configLocation, LogFile logFile);1522899137;Fully initialize the logging system._@param initializationContext the logging initialization context_@param configLocation a log configuration location or {@code null} if default_initialization is required_@param logFile the log output file that should be written or {@code null} for_console only output;public void initialize(LoggingInitializationContext initializationContext,_			String configLocation, LogFile logFile) {_	};fully,initialize,the,logging,system,param,initialization,context,the,logging,initialization,context,param,config,location,a,log,configuration,location,or,code,null,if,default,initialization,is,required,param,log,file,the,log,output,file,that,should,be,written,or,code,null,for,console,only,output;public,void,initialize,logging,initialization,context,initialization,context,string,config,location,log,file,log,file
LoggingSystem -> public void initialize(LoggingInitializationContext initializationContext, 			String configLocation, LogFile logFile);1532738143;Fully initialize the logging system._@param initializationContext the logging initialization context_@param configLocation a log configuration location or {@code null} if default_initialization is required_@param logFile the log output file that should be written or {@code null} for_console only output;public void initialize(LoggingInitializationContext initializationContext,_			String configLocation, LogFile logFile) {_	};fully,initialize,the,logging,system,param,initialization,context,the,logging,initialization,context,param,config,location,a,log,configuration,location,or,code,null,if,default,initialization,is,required,param,log,file,the,log,output,file,that,should,be,written,or,code,null,for,console,only,output;public,void,initialize,logging,initialization,context,initialization,context,string,config,location,log,file,log,file
LoggingSystem -> public void setLogLevel(String loggerName, LogLevel level);1507173536;Sets the logging level for a given logger._@param loggerName the name of the logger to set ({@code null} can be used for the_root logger)._@param level the log level ({@code null} can be used to remove any custom level for_the logger and use the default configuration instead);public void setLogLevel(String loggerName, LogLevel level) {_		throw new UnsupportedOperationException("Unable to set log level")__	};sets,the,logging,level,for,a,given,logger,param,logger,name,the,name,of,the,logger,to,set,code,null,can,be,used,for,the,root,logger,param,level,the,log,level,code,null,can,be,used,to,remove,any,custom,level,for,the,logger,and,use,the,default,configuration,instead;public,void,set,log,level,string,logger,name,log,level,level,throw,new,unsupported,operation,exception,unable,to,set,log,level
LoggingSystem -> public void setLogLevel(String loggerName, LogLevel level);1522899137;Sets the logging level for a given logger._@param loggerName the name of the logger to set ({@code null} can be used for the_root logger)._@param level the log level ({@code null} can be used to remove any custom level for_the logger and use the default configuration instead);public void setLogLevel(String loggerName, LogLevel level) {_		throw new UnsupportedOperationException("Unable to set log level")__	};sets,the,logging,level,for,a,given,logger,param,logger,name,the,name,of,the,logger,to,set,code,null,can,be,used,for,the,root,logger,param,level,the,log,level,code,null,can,be,used,to,remove,any,custom,level,for,the,logger,and,use,the,default,configuration,instead;public,void,set,log,level,string,logger,name,log,level,level,throw,new,unsupported,operation,exception,unable,to,set,log,level
LoggingSystem -> public void setLogLevel(String loggerName, LogLevel level);1532738143;Sets the logging level for a given logger._@param loggerName the name of the logger to set ({@code null} can be used for the_root logger)._@param level the log level ({@code null} can be used to remove any custom level for_the logger and use the default configuration instead);public void setLogLevel(String loggerName, LogLevel level) {_		throw new UnsupportedOperationException("Unable to set log level")__	};sets,the,logging,level,for,a,given,logger,param,logger,name,the,name,of,the,logger,to,set,code,null,can,be,used,for,the,root,logger,param,level,the,log,level,code,null,can,be,used,to,remove,any,custom,level,for,the,logger,and,use,the,default,configuration,instead;public,void,set,log,level,string,logger,name,log,level,level,throw,new,unsupported,operation,exception,unable,to,set,log,level
LoggingSystem -> public Runnable getShutdownHandler();1507173536;Returns a {@link Runnable} that can handle shutdown of this logging system when the_JVM exits. The default implementation returns {@code null}, indicating that no_shutdown is required._@return the shutdown handler, or {@code null};public Runnable getShutdownHandler() {_		return null__	};returns,a,link,runnable,that,can,handle,shutdown,of,this,logging,system,when,the,jvm,exits,the,default,implementation,returns,code,null,indicating,that,no,shutdown,is,required,return,the,shutdown,handler,or,code,null;public,runnable,get,shutdown,handler,return,null
LoggingSystem -> public Runnable getShutdownHandler();1522899137;Returns a {@link Runnable} that can handle shutdown of this logging system when the_JVM exits. The default implementation returns {@code null}, indicating that no_shutdown is required._@return the shutdown handler, or {@code null};public Runnable getShutdownHandler() {_		return null__	};returns,a,link,runnable,that,can,handle,shutdown,of,this,logging,system,when,the,jvm,exits,the,default,implementation,returns,code,null,indicating,that,no,shutdown,is,required,return,the,shutdown,handler,or,code,null;public,runnable,get,shutdown,handler,return,null
LoggingSystem -> public Runnable getShutdownHandler();1532738143;Returns a {@link Runnable} that can handle shutdown of this logging system when the_JVM exits. The default implementation returns {@code null}, indicating that no_shutdown is required._@return the shutdown handler, or {@code null};public Runnable getShutdownHandler() {_		return null__	};returns,a,link,runnable,that,can,handle,shutdown,of,this,logging,system,when,the,jvm,exits,the,default,implementation,returns,code,null,indicating,that,no,shutdown,is,required,return,the,shutdown,handler,or,code,null;public,runnable,get,shutdown,handler,return,null
LoggingSystem -> public List<LoggerConfiguration> getLoggerConfigurations();1507173536;Returns a collection of the current configuration for all a {@link LoggingSystem}'s_loggers._@return the current configurations_@since 1.5.0;public List<LoggerConfiguration> getLoggerConfigurations() {_		throw new UnsupportedOperationException("Unable to get logger configurations")__	};returns,a,collection,of,the,current,configuration,for,all,a,link,logging,system,s,loggers,return,the,current,configurations,since,1,5,0;public,list,logger,configuration,get,logger,configurations,throw,new,unsupported,operation,exception,unable,to,get,logger,configurations
LoggingSystem -> public List<LoggerConfiguration> getLoggerConfigurations();1522899137;Returns a collection of the current configuration for all a {@link LoggingSystem}'s_loggers._@return the current configurations_@since 1.5.0;public List<LoggerConfiguration> getLoggerConfigurations() {_		throw new UnsupportedOperationException("Unable to get logger configurations")__	};returns,a,collection,of,the,current,configuration,for,all,a,link,logging,system,s,loggers,return,the,current,configurations,since,1,5,0;public,list,logger,configuration,get,logger,configurations,throw,new,unsupported,operation,exception,unable,to,get,logger,configurations
LoggingSystem -> public List<LoggerConfiguration> getLoggerConfigurations();1532738143;Returns a collection of the current configuration for all a {@link LoggingSystem}'s_loggers._@return the current configurations_@since 1.5.0;public List<LoggerConfiguration> getLoggerConfigurations() {_		throw new UnsupportedOperationException("Unable to get logger configurations")__	};returns,a,collection,of,the,current,configuration,for,all,a,link,logging,system,s,loggers,return,the,current,configurations,since,1,5,0;public,list,logger,configuration,get,logger,configurations,throw,new,unsupported,operation,exception,unable,to,get,logger,configurations
LoggingSystem -> public void cleanUp();1507173536;Clean up the logging system. The default implementation does nothing. Subclasses_should override this method to perform any logging system-specific cleanup.;public void cleanUp() {_	};clean,up,the,logging,system,the,default,implementation,does,nothing,subclasses,should,override,this,method,to,perform,any,logging,system,specific,cleanup;public,void,clean,up
LoggingSystem -> public void cleanUp();1522899137;Clean up the logging system. The default implementation does nothing. Subclasses_should override this method to perform any logging system-specific cleanup.;public void cleanUp() {_	};clean,up,the,logging,system,the,default,implementation,does,nothing,subclasses,should,override,this,method,to,perform,any,logging,system,specific,cleanup;public,void,clean,up
LoggingSystem -> public void cleanUp();1532738143;Clean up the logging system. The default implementation does nothing. Subclasses_should override this method to perform any logging system-specific cleanup.;public void cleanUp() {_	};clean,up,the,logging,system,the,default,implementation,does,nothing,subclasses,should,override,this,method,to,perform,any,logging,system,specific,cleanup;public,void,clean,up
LoggingSystem -> public LoggerConfiguration getLoggerConfiguration(String loggerName);1507173536;Returns the current configuration for a {@link LoggingSystem}'s logger._@param loggerName the name of the logger_@return the current configuration_@since 1.5.0;public LoggerConfiguration getLoggerConfiguration(String loggerName) {_		throw new UnsupportedOperationException("Unable to get logger configuration")__	};returns,the,current,configuration,for,a,link,logging,system,s,logger,param,logger,name,the,name,of,the,logger,return,the,current,configuration,since,1,5,0;public,logger,configuration,get,logger,configuration,string,logger,name,throw,new,unsupported,operation,exception,unable,to,get,logger,configuration
LoggingSystem -> public LoggerConfiguration getLoggerConfiguration(String loggerName);1522899137;Returns the current configuration for a {@link LoggingSystem}'s logger._@param loggerName the name of the logger_@return the current configuration_@since 1.5.0;public LoggerConfiguration getLoggerConfiguration(String loggerName) {_		throw new UnsupportedOperationException("Unable to get logger configuration")__	};returns,the,current,configuration,for,a,link,logging,system,s,logger,param,logger,name,the,name,of,the,logger,return,the,current,configuration,since,1,5,0;public,logger,configuration,get,logger,configuration,string,logger,name,throw,new,unsupported,operation,exception,unable,to,get,logger,configuration
LoggingSystem -> public LoggerConfiguration getLoggerConfiguration(String loggerName);1532738143;Returns the current configuration for a {@link LoggingSystem}'s logger._@param loggerName the name of the logger_@return the current configuration_@since 1.5.0;public LoggerConfiguration getLoggerConfiguration(String loggerName) {_		throw new UnsupportedOperationException("Unable to get logger configuration")__	};returns,the,current,configuration,for,a,link,logging,system,s,logger,param,logger,name,the,name,of,the,logger,return,the,current,configuration,since,1,5,0;public,logger,configuration,get,logger,configuration,string,logger,name,throw,new,unsupported,operation,exception,unable,to,get,logger,configuration
LoggingSystem -> public static LoggingSystem get(ClassLoader classLoader);1507173536;Detect and return the logging system in use. Supports Logback and Java Logging._@param classLoader the classloader_@return The logging system;public static LoggingSystem get(ClassLoader classLoader) {_		String loggingSystem = System.getProperty(SYSTEM_PROPERTY)__		if (StringUtils.hasLength(loggingSystem)) {_			if (NONE.equals(loggingSystem)) {_				return new NoOpLoggingSystem()__			}_			return get(classLoader, loggingSystem)__		}_		for (Map.Entry<String, String> entry : SYSTEMS.entrySet()) {_			if (ClassUtils.isPresent(entry.getKey(), classLoader)) {_				return get(classLoader, entry.getValue())__			}_		}_		throw new IllegalStateException("No suitable logging system located")__	};detect,and,return,the,logging,system,in,use,supports,logback,and,java,logging,param,class,loader,the,classloader,return,the,logging,system;public,static,logging,system,get,class,loader,class,loader,string,logging,system,system,get,property,if,string,utils,has,length,logging,system,if,none,equals,logging,system,return,new,no,op,logging,system,return,get,class,loader,logging,system,for,map,entry,string,string,entry,systems,entry,set,if,class,utils,is,present,entry,get,key,class,loader,return,get,class,loader,entry,get,value,throw,new,illegal,state,exception,no,suitable,logging,system,located
LoggingSystem -> public static LoggingSystem get(ClassLoader classLoader);1522899137;Detect and return the logging system in use. Supports Logback and Java Logging._@param classLoader the classloader_@return The logging system;public static LoggingSystem get(ClassLoader classLoader) {_		String loggingSystem = System.getProperty(SYSTEM_PROPERTY)__		if (StringUtils.hasLength(loggingSystem)) {_			if (NONE.equals(loggingSystem)) {_				return new NoOpLoggingSystem()__			}_			return get(classLoader, loggingSystem)__		}_		return SYSTEMS.entrySet().stream()_				.filter((entry) -> ClassUtils.isPresent(entry.getKey(), classLoader))_				.map((entry) -> get(classLoader, entry.getValue())).findFirst()_				.orElseThrow(() -> new IllegalStateException(_						"No suitable logging system located"))__	};detect,and,return,the,logging,system,in,use,supports,logback,and,java,logging,param,class,loader,the,classloader,return,the,logging,system;public,static,logging,system,get,class,loader,class,loader,string,logging,system,system,get,property,if,string,utils,has,length,logging,system,if,none,equals,logging,system,return,new,no,op,logging,system,return,get,class,loader,logging,system,return,systems,entry,set,stream,filter,entry,class,utils,is,present,entry,get,key,class,loader,map,entry,get,class,loader,entry,get,value,find,first,or,else,throw,new,illegal,state,exception,no,suitable,logging,system,located
LoggingSystem -> public static LoggingSystem get(ClassLoader classLoader);1532738143;Detect and return the logging system in use. Supports Logback and Java Logging._@param classLoader the classloader_@return the logging system;public static LoggingSystem get(ClassLoader classLoader) {_		String loggingSystem = System.getProperty(SYSTEM_PROPERTY)__		if (StringUtils.hasLength(loggingSystem)) {_			if (NONE.equals(loggingSystem)) {_				return new NoOpLoggingSystem()__			}_			return get(classLoader, loggingSystem)__		}_		return SYSTEMS.entrySet().stream()_				.filter((entry) -> ClassUtils.isPresent(entry.getKey(), classLoader))_				.map((entry) -> get(classLoader, entry.getValue())).findFirst()_				.orElseThrow(() -> new IllegalStateException(_						"No suitable logging system located"))__	};detect,and,return,the,logging,system,in,use,supports,logback,and,java,logging,param,class,loader,the,classloader,return,the,logging,system;public,static,logging,system,get,class,loader,class,loader,string,logging,system,system,get,property,if,string,utils,has,length,logging,system,if,none,equals,logging,system,return,new,no,op,logging,system,return,get,class,loader,logging,system,return,systems,entry,set,stream,filter,entry,class,utils,is,present,entry,get,key,class,loader,map,entry,get,class,loader,entry,get,value,find,first,or,else,throw,new,illegal,state,exception,no,suitable,logging,system,located
LoggingSystem -> public abstract void beforeInitialize()_;1507173536;Reset the logging system to be limit output. This method may be called before_{@link #initialize(LoggingInitializationContext, String, LogFile)} to reduce_logging noise until the system has been fully initialized.;public abstract void beforeInitialize()_;reset,the,logging,system,to,be,limit,output,this,method,may,be,called,before,link,initialize,logging,initialization,context,string,log,file,to,reduce,logging,noise,until,the,system,has,been,fully,initialized;public,abstract,void,before,initialize
LoggingSystem -> public abstract void beforeInitialize()_;1522899137;Reset the logging system to be limit output. This method may be called before_{@link #initialize(LoggingInitializationContext, String, LogFile)} to reduce_logging noise until the system has been fully initialized.;public abstract void beforeInitialize()_;reset,the,logging,system,to,be,limit,output,this,method,may,be,called,before,link,initialize,logging,initialization,context,string,log,file,to,reduce,logging,noise,until,the,system,has,been,fully,initialized;public,abstract,void,before,initialize
LoggingSystem -> public abstract void beforeInitialize()_;1532738143;Reset the logging system to be limit output. This method may be called before_{@link #initialize(LoggingInitializationContext, String, LogFile)} to reduce_logging noise until the system has been fully initialized.;public abstract void beforeInitialize()_;reset,the,logging,system,to,be,limit,output,this,method,may,be,called,before,link,initialize,logging,initialization,context,string,log,file,to,reduce,logging,noise,until,the,system,has,been,fully,initialized;public,abstract,void,before,initialize
LoggingSystem -> public Set<LogLevel> getSupportedLogLevels();1507173536;Returns a set of the {@link LogLevel LogLevels} that are actually supported by the_logging system._@return the supported levels;public Set<LogLevel> getSupportedLogLevels() {_		return EnumSet.allOf(LogLevel.class)__	};returns,a,set,of,the,link,log,level,log,levels,that,are,actually,supported,by,the,logging,system,return,the,supported,levels;public,set,log,level,get,supported,log,levels,return,enum,set,all,of,log,level,class
LoggingSystem -> public Set<LogLevel> getSupportedLogLevels();1522899137;Returns a set of the {@link LogLevel LogLevels} that are actually supported by the_logging system._@return the supported levels;public Set<LogLevel> getSupportedLogLevels() {_		return EnumSet.allOf(LogLevel.class)__	};returns,a,set,of,the,link,log,level,log,levels,that,are,actually,supported,by,the,logging,system,return,the,supported,levels;public,set,log,level,get,supported,log,levels,return,enum,set,all,of,log,level,class
LoggingSystem -> public Set<LogLevel> getSupportedLogLevels();1532738143;Returns a set of the {@link LogLevel LogLevels} that are actually supported by the_logging system._@return the supported levels;public Set<LogLevel> getSupportedLogLevels() {_		return EnumSet.allOf(LogLevel.class)__	};returns,a,set,of,the,link,log,level,log,levels,that,are,actually,supported,by,the,logging,system,return,the,supported,levels;public,set,log,level,get,supported,log,levels,return,enum,set,all,of,log,level,class
