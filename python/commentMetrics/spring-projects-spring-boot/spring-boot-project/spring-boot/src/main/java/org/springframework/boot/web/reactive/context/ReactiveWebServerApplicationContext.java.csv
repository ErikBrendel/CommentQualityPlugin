# id;timestamp;commentText;codeText;commentWords;codeWords
ReactiveWebServerApplicationContext -> protected HttpHandler getHttpHandler();1507173536;Return the {@link HttpHandler} that should be used to process the reactive web_server. By default this method searches for a suitable bean in the context itself._@return a {@link HttpHandler} (never {@code null};protected HttpHandler getHttpHandler() {_		_		String[] beanNames = getBeanFactory().getBeanNamesForType(HttpHandler.class)__		if (beanNames.length == 0) {_			throw new ApplicationContextException(_					"Unable to start ReactiveWebApplicationContext due to missing HttpHandler bean.")__		}_		if (beanNames.length > 1) {_			throw new ApplicationContextException(_					"Unable to start ReactiveWebApplicationContext due to multiple HttpHandler beans : "_							+ StringUtils.arrayToCommaDelimitedString(beanNames))__		}_		return getBeanFactory().getBean(beanNames[0], HttpHandler.class)__	};return,the,link,http,handler,that,should,be,used,to,process,the,reactive,web,server,by,default,this,method,searches,for,a,suitable,bean,in,the,context,itself,return,a,link,http,handler,never,code,null;protected,http,handler,get,http,handler,string,bean,names,get,bean,factory,get,bean,names,for,type,http,handler,class,if,bean,names,length,0,throw,new,application,context,exception,unable,to,start,reactive,web,application,context,due,to,missing,http,handler,bean,if,bean,names,length,1,throw,new,application,context,exception,unable,to,start,reactive,web,application,context,due,to,multiple,http,handler,beans,string,utils,array,to,comma,delimited,string,bean,names,return,get,bean,factory,get,bean,bean,names,0,http,handler,class
ReactiveWebServerApplicationContext -> protected HttpHandler getHttpHandler();1507672271;Return the {@link HttpHandler} that should be used to process the reactive web_server. By default this method searches for a suitable bean in the context itself._@return a {@link HttpHandler} (never {@code null};protected HttpHandler getHttpHandler() {_		_		String[] beanNames = getBeanFactory().getBeanNamesForType(HttpHandler.class)__		if (beanNames.length == 0) {_			throw new ApplicationContextException(_					"Unable to start ReactiveWebApplicationContext due to missing HttpHandler bean.")__		}_		if (beanNames.length > 1) {_			throw new ApplicationContextException(_					"Unable to start ReactiveWebApplicationContext due to multiple HttpHandler beans : "_							+ StringUtils.arrayToCommaDelimitedString(beanNames))__		}_		return getBeanFactory().getBean(beanNames[0], HttpHandler.class)__	};return,the,link,http,handler,that,should,be,used,to,process,the,reactive,web,server,by,default,this,method,searches,for,a,suitable,bean,in,the,context,itself,return,a,link,http,handler,never,code,null;protected,http,handler,get,http,handler,string,bean,names,get,bean,factory,get,bean,names,for,type,http,handler,class,if,bean,names,length,0,throw,new,application,context,exception,unable,to,start,reactive,web,application,context,due,to,missing,http,handler,bean,if,bean,names,length,1,throw,new,application,context,exception,unable,to,start,reactive,web,application,context,due,to,multiple,http,handler,beans,string,utils,array,to,comma,delimited,string,bean,names,return,get,bean,factory,get,bean,bean,names,0,http,handler,class
ReactiveWebServerApplicationContext -> protected HttpHandler getHttpHandler();1509761243;Return the {@link HttpHandler} that should be used to process the reactive web_server. By default this method searches for a suitable bean in the context itself._@return a {@link HttpHandler} (never {@code null};protected HttpHandler getHttpHandler() {_		_		String[] beanNames = getBeanFactory().getBeanNamesForType(HttpHandler.class)__		if (beanNames.length == 0) {_			throw new ApplicationContextException(_					"Unable to start ReactiveWebApplicationContext due to missing HttpHandler bean.")__		}_		if (beanNames.length > 1) {_			throw new ApplicationContextException(_					"Unable to start ReactiveWebApplicationContext due to multiple HttpHandler beans : "_							+ StringUtils.arrayToCommaDelimitedString(beanNames))__		}_		return getBeanFactory().getBean(beanNames[0], HttpHandler.class)__	};return,the,link,http,handler,that,should,be,used,to,process,the,reactive,web,server,by,default,this,method,searches,for,a,suitable,bean,in,the,context,itself,return,a,link,http,handler,never,code,null;protected,http,handler,get,http,handler,string,bean,names,get,bean,factory,get,bean,names,for,type,http,handler,class,if,bean,names,length,0,throw,new,application,context,exception,unable,to,start,reactive,web,application,context,due,to,missing,http,handler,bean,if,bean,names,length,1,throw,new,application,context,exception,unable,to,start,reactive,web,application,context,due,to,multiple,http,handler,beans,string,utils,array,to,comma,delimited,string,bean,names,return,get,bean,factory,get,bean,bean,names,0,http,handler,class
ReactiveWebServerApplicationContext -> protected HttpHandler getHttpHandler();1511070903;Return the {@link HttpHandler} that should be used to process the reactive web_server. By default this method searches for a suitable bean in the context itself._@return a {@link HttpHandler} (never {@code null};protected HttpHandler getHttpHandler() {_		_		String[] beanNames = getBeanFactory().getBeanNamesForType(HttpHandler.class)__		if (beanNames.length == 0) {_			throw new ApplicationContextException(_					"Unable to start ReactiveWebApplicationContext due to missing HttpHandler bean.")__		}_		if (beanNames.length > 1) {_			throw new ApplicationContextException(_					"Unable to start ReactiveWebApplicationContext due to multiple HttpHandler beans : "_							+ StringUtils.arrayToCommaDelimitedString(beanNames))__		}_		return getBeanFactory().getBean(beanNames[0], HttpHandler.class)__	};return,the,link,http,handler,that,should,be,used,to,process,the,reactive,web,server,by,default,this,method,searches,for,a,suitable,bean,in,the,context,itself,return,a,link,http,handler,never,code,null;protected,http,handler,get,http,handler,string,bean,names,get,bean,factory,get,bean,names,for,type,http,handler,class,if,bean,names,length,0,throw,new,application,context,exception,unable,to,start,reactive,web,application,context,due,to,missing,http,handler,bean,if,bean,names,length,1,throw,new,application,context,exception,unable,to,start,reactive,web,application,context,due,to,multiple,http,handler,beans,string,utils,array,to,comma,delimited,string,bean,names,return,get,bean,factory,get,bean,bean,names,0,http,handler,class
ReactiveWebServerApplicationContext -> protected HttpHandler getHttpHandler();1517531895;Return the {@link HttpHandler} that should be used to process the reactive web_server. By default this method searches for a suitable bean in the context itself._@return a {@link HttpHandler} (never {@code null};protected HttpHandler getHttpHandler() {_		_		String[] beanNames = getBeanFactory().getBeanNamesForType(HttpHandler.class)__		if (beanNames.length == 0) {_			throw new ApplicationContextException(_					"Unable to start ReactiveWebApplicationContext due to missing HttpHandler bean.")__		}_		if (beanNames.length > 1) {_			throw new ApplicationContextException(_					"Unable to start ReactiveWebApplicationContext due to multiple HttpHandler beans : "_							+ StringUtils.arrayToCommaDelimitedString(beanNames))__		}_		return getBeanFactory().getBean(beanNames[0], HttpHandler.class)__	};return,the,link,http,handler,that,should,be,used,to,process,the,reactive,web,server,by,default,this,method,searches,for,a,suitable,bean,in,the,context,itself,return,a,link,http,handler,never,code,null;protected,http,handler,get,http,handler,string,bean,names,get,bean,factory,get,bean,names,for,type,http,handler,class,if,bean,names,length,0,throw,new,application,context,exception,unable,to,start,reactive,web,application,context,due,to,missing,http,handler,bean,if,bean,names,length,1,throw,new,application,context,exception,unable,to,start,reactive,web,application,context,due,to,multiple,http,handler,beans,string,utils,array,to,comma,delimited,string,bean,names,return,get,bean,factory,get,bean,bean,names,0,http,handler,class
ReactiveWebServerApplicationContext -> protected HttpHandler getHttpHandler();1538546506;Return the {@link HttpHandler} that should be used to process the reactive web_server. By default this method searches for a suitable bean in the context itself._@return a {@link HttpHandler} (never {@code null};protected HttpHandler getHttpHandler() {_		_		String[] beanNames = getBeanFactory().getBeanNamesForType(HttpHandler.class)__		if (beanNames.length == 0) {_			throw new ApplicationContextException(_					"Unable to start ReactiveWebApplicationContext due to missing HttpHandler bean.")__		}_		if (beanNames.length > 1) {_			throw new ApplicationContextException(_					"Unable to start ReactiveWebApplicationContext due to multiple HttpHandler beans : "_							+ StringUtils.arrayToCommaDelimitedString(beanNames))__		}_		return getBeanFactory().getBean(beanNames[0], HttpHandler.class)__	};return,the,link,http,handler,that,should,be,used,to,process,the,reactive,web,server,by,default,this,method,searches,for,a,suitable,bean,in,the,context,itself,return,a,link,http,handler,never,code,null;protected,http,handler,get,http,handler,string,bean,names,get,bean,factory,get,bean,names,for,type,http,handler,class,if,bean,names,length,0,throw,new,application,context,exception,unable,to,start,reactive,web,application,context,due,to,missing,http,handler,bean,if,bean,names,length,1,throw,new,application,context,exception,unable,to,start,reactive,web,application,context,due,to,multiple,http,handler,beans,string,utils,array,to,comma,delimited,string,bean,names,return,get,bean,factory,get,bean,bean,names,0,http,handler,class
ReactiveWebServerApplicationContext -> protected HttpHandler getHttpHandler();1538665216;Return the {@link HttpHandler} that should be used to process the reactive web_server. By default this method searches for a suitable bean in the context itself._@return a {@link HttpHandler} (never {@code null};protected HttpHandler getHttpHandler() {_		_		String[] beanNames = getBeanFactory().getBeanNamesForType(HttpHandler.class)__		if (beanNames.length == 0) {_			throw new ApplicationContextException(_					"Unable to start ReactiveWebApplicationContext due to missing HttpHandler bean.")__		}_		if (beanNames.length > 1) {_			throw new ApplicationContextException(_					"Unable to start ReactiveWebApplicationContext due to multiple HttpHandler beans : "_							+ StringUtils.arrayToCommaDelimitedString(beanNames))__		}_		return getBeanFactory().getBean(beanNames[0], HttpHandler.class)__	};return,the,link,http,handler,that,should,be,used,to,process,the,reactive,web,server,by,default,this,method,searches,for,a,suitable,bean,in,the,context,itself,return,a,link,http,handler,never,code,null;protected,http,handler,get,http,handler,string,bean,names,get,bean,factory,get,bean,names,for,type,http,handler,class,if,bean,names,length,0,throw,new,application,context,exception,unable,to,start,reactive,web,application,context,due,to,missing,http,handler,bean,if,bean,names,length,1,throw,new,application,context,exception,unable,to,start,reactive,web,application,context,due,to,multiple,http,handler,beans,string,utils,array,to,comma,delimited,string,bean,names,return,get,bean,factory,get,bean,bean,names,0,http,handler,class
ReactiveWebServerApplicationContext -> protected HttpHandler getHttpHandler();1538673449;Return the {@link HttpHandler} that should be used to process the reactive web_server. By default this method searches for a suitable bean in the context itself._@return a {@link HttpHandler} (never {@code null};protected HttpHandler getHttpHandler() {_		_		String[] beanNames = getBeanFactory().getBeanNamesForType(HttpHandler.class)__		if (beanNames.length == 0) {_			throw new ApplicationContextException(_					"Unable to start ReactiveWebApplicationContext due to missing HttpHandler bean.")__		}_		if (beanNames.length > 1) {_			throw new ApplicationContextException(_					"Unable to start ReactiveWebApplicationContext due to multiple HttpHandler beans : "_							+ StringUtils.arrayToCommaDelimitedString(beanNames))__		}_		return getBeanFactory().getBean(beanNames[0], HttpHandler.class)__	};return,the,link,http,handler,that,should,be,used,to,process,the,reactive,web,server,by,default,this,method,searches,for,a,suitable,bean,in,the,context,itself,return,a,link,http,handler,never,code,null;protected,http,handler,get,http,handler,string,bean,names,get,bean,factory,get,bean,names,for,type,http,handler,class,if,bean,names,length,0,throw,new,application,context,exception,unable,to,start,reactive,web,application,context,due,to,missing,http,handler,bean,if,bean,names,length,1,throw,new,application,context,exception,unable,to,start,reactive,web,application,context,due,to,multiple,http,handler,beans,string,utils,array,to,comma,delimited,string,bean,names,return,get,bean,factory,get,bean,bean,names,0,http,handler,class
ReactiveWebServerApplicationContext -> protected HttpHandler getHttpHandler();1539393863;Return the {@link HttpHandler} that should be used to process the reactive web_server. By default this method searches for a suitable bean in the context itself._@return a {@link HttpHandler} (never {@code null};protected HttpHandler getHttpHandler() {_		_		String[] beanNames = getBeanFactory().getBeanNamesForType(HttpHandler.class)__		if (beanNames.length == 0) {_			throw new ApplicationContextException(_					"Unable to start ReactiveWebApplicationContext due to missing HttpHandler bean.")__		}_		if (beanNames.length > 1) {_			throw new ApplicationContextException(_					"Unable to start ReactiveWebApplicationContext due to multiple HttpHandler beans : "_							+ StringUtils.arrayToCommaDelimitedString(beanNames))__		}_		return getBeanFactory().getBean(beanNames[0], HttpHandler.class)__	};return,the,link,http,handler,that,should,be,used,to,process,the,reactive,web,server,by,default,this,method,searches,for,a,suitable,bean,in,the,context,itself,return,a,link,http,handler,never,code,null;protected,http,handler,get,http,handler,string,bean,names,get,bean,factory,get,bean,names,for,type,http,handler,class,if,bean,names,length,0,throw,new,application,context,exception,unable,to,start,reactive,web,application,context,due,to,missing,http,handler,bean,if,bean,names,length,1,throw,new,application,context,exception,unable,to,start,reactive,web,application,context,due,to,multiple,http,handler,beans,string,utils,array,to,comma,delimited,string,bean,names,return,get,bean,factory,get,bean,bean,names,0,http,handler,class
ReactiveWebServerApplicationContext -> protected HttpHandler getHttpHandler();1550148109;Return the {@link HttpHandler} that should be used to process the reactive web_server. By default this method searches for a suitable bean in the context itself._@return a {@link HttpHandler} (never {@code null};protected HttpHandler getHttpHandler() {_		_		String[] beanNames = getBeanFactory().getBeanNamesForType(HttpHandler.class)__		if (beanNames.length == 0) {_			throw new ApplicationContextException(_					"Unable to start ReactiveWebApplicationContext due to missing HttpHandler bean.")__		}_		if (beanNames.length > 1) {_			throw new ApplicationContextException(_					"Unable to start ReactiveWebApplicationContext due to multiple HttpHandler beans : "_							+ StringUtils.arrayToCommaDelimitedString(beanNames))__		}_		return getBeanFactory().getBean(beanNames[0], HttpHandler.class)__	};return,the,link,http,handler,that,should,be,used,to,process,the,reactive,web,server,by,default,this,method,searches,for,a,suitable,bean,in,the,context,itself,return,a,link,http,handler,never,code,null;protected,http,handler,get,http,handler,string,bean,names,get,bean,factory,get,bean,names,for,type,http,handler,class,if,bean,names,length,0,throw,new,application,context,exception,unable,to,start,reactive,web,application,context,due,to,missing,http,handler,bean,if,bean,names,length,1,throw,new,application,context,exception,unable,to,start,reactive,web,application,context,due,to,multiple,http,handler,beans,string,utils,array,to,comma,delimited,string,bean,names,return,get,bean,factory,get,bean,bean,names,0,http,handler,class
ReactiveWebServerApplicationContext -> protected HttpHandler getHttpHandler();1551196173;Return the {@link HttpHandler} that should be used to process the reactive web_server. By default this method searches for a suitable bean in the context itself._@return a {@link HttpHandler} (never {@code null};protected HttpHandler getHttpHandler() {_		_		String[] beanNames = getBeanFactory().getBeanNamesForType(HttpHandler.class)__		if (beanNames.length == 0) {_			throw new ApplicationContextException(_					"Unable to start ReactiveWebApplicationContext due to missing HttpHandler bean.")__		}_		if (beanNames.length > 1) {_			throw new ApplicationContextException(_					"Unable to start ReactiveWebApplicationContext due to multiple HttpHandler beans : "_							+ StringUtils.arrayToCommaDelimitedString(beanNames))__		}_		return getBeanFactory().getBean(beanNames[0], HttpHandler.class)__	};return,the,link,http,handler,that,should,be,used,to,process,the,reactive,web,server,by,default,this,method,searches,for,a,suitable,bean,in,the,context,itself,return,a,link,http,handler,never,code,null;protected,http,handler,get,http,handler,string,bean,names,get,bean,factory,get,bean,names,for,type,http,handler,class,if,bean,names,length,0,throw,new,application,context,exception,unable,to,start,reactive,web,application,context,due,to,missing,http,handler,bean,if,bean,names,length,1,throw,new,application,context,exception,unable,to,start,reactive,web,application,context,due,to,multiple,http,handler,beans,string,utils,array,to,comma,delimited,string,bean,names,return,get,bean,factory,get,bean,bean,names,0,http,handler,class
ReactiveWebServerApplicationContext -> public ReactiveWebServerApplicationContext(DefaultListableBeanFactory beanFactory);1511070903;Create a new {@link ReactiveWebServerApplicationContext} with the given_{@code DefaultListableBeanFactory}._@param beanFactory the DefaultListableBeanFactory instance to use for this context;public ReactiveWebServerApplicationContext(DefaultListableBeanFactory beanFactory) {_		super(beanFactory)__	};create,a,new,link,reactive,web,server,application,context,with,the,given,code,default,listable,bean,factory,param,bean,factory,the,default,listable,bean,factory,instance,to,use,for,this,context;public,reactive,web,server,application,context,default,listable,bean,factory,bean,factory,super,bean,factory
ReactiveWebServerApplicationContext -> public ReactiveWebServerApplicationContext(DefaultListableBeanFactory beanFactory);1517531895;Create a new {@link ReactiveWebServerApplicationContext} with the given_{@code DefaultListableBeanFactory}._@param beanFactory the DefaultListableBeanFactory instance to use for this context;public ReactiveWebServerApplicationContext(DefaultListableBeanFactory beanFactory) {_		super(beanFactory)__	};create,a,new,link,reactive,web,server,application,context,with,the,given,code,default,listable,bean,factory,param,bean,factory,the,default,listable,bean,factory,instance,to,use,for,this,context;public,reactive,web,server,application,context,default,listable,bean,factory,bean,factory,super,bean,factory
ReactiveWebServerApplicationContext -> public ReactiveWebServerApplicationContext(DefaultListableBeanFactory beanFactory);1538546506;Create a new {@link ReactiveWebServerApplicationContext} with the given_{@code DefaultListableBeanFactory}._@param beanFactory the DefaultListableBeanFactory instance to use for this context;public ReactiveWebServerApplicationContext(DefaultListableBeanFactory beanFactory) {_		super(beanFactory)__	};create,a,new,link,reactive,web,server,application,context,with,the,given,code,default,listable,bean,factory,param,bean,factory,the,default,listable,bean,factory,instance,to,use,for,this,context;public,reactive,web,server,application,context,default,listable,bean,factory,bean,factory,super,bean,factory
ReactiveWebServerApplicationContext -> public ReactiveWebServerApplicationContext(DefaultListableBeanFactory beanFactory);1538665216;Create a new {@link ReactiveWebServerApplicationContext} with the given_{@code DefaultListableBeanFactory}._@param beanFactory the DefaultListableBeanFactory instance to use for this context;public ReactiveWebServerApplicationContext(DefaultListableBeanFactory beanFactory) {_		super(beanFactory)__	};create,a,new,link,reactive,web,server,application,context,with,the,given,code,default,listable,bean,factory,param,bean,factory,the,default,listable,bean,factory,instance,to,use,for,this,context;public,reactive,web,server,application,context,default,listable,bean,factory,bean,factory,super,bean,factory
ReactiveWebServerApplicationContext -> public ReactiveWebServerApplicationContext(DefaultListableBeanFactory beanFactory);1538673449;Create a new {@link ReactiveWebServerApplicationContext} with the given_{@code DefaultListableBeanFactory}._@param beanFactory the DefaultListableBeanFactory instance to use for this context;public ReactiveWebServerApplicationContext(DefaultListableBeanFactory beanFactory) {_		super(beanFactory)__	};create,a,new,link,reactive,web,server,application,context,with,the,given,code,default,listable,bean,factory,param,bean,factory,the,default,listable,bean,factory,instance,to,use,for,this,context;public,reactive,web,server,application,context,default,listable,bean,factory,bean,factory,super,bean,factory
ReactiveWebServerApplicationContext -> public ReactiveWebServerApplicationContext(DefaultListableBeanFactory beanFactory);1539393863;Create a new {@link ReactiveWebServerApplicationContext} with the given_{@code DefaultListableBeanFactory}._@param beanFactory the DefaultListableBeanFactory instance to use for this context;public ReactiveWebServerApplicationContext(DefaultListableBeanFactory beanFactory) {_		super(beanFactory)__	};create,a,new,link,reactive,web,server,application,context,with,the,given,code,default,listable,bean,factory,param,bean,factory,the,default,listable,bean,factory,instance,to,use,for,this,context;public,reactive,web,server,application,context,default,listable,bean,factory,bean,factory,super,bean,factory
ReactiveWebServerApplicationContext -> public ReactiveWebServerApplicationContext(DefaultListableBeanFactory beanFactory);1550148109;Create a new {@link ReactiveWebServerApplicationContext} with the given_{@code DefaultListableBeanFactory}._@param beanFactory the DefaultListableBeanFactory instance to use for this context;public ReactiveWebServerApplicationContext(DefaultListableBeanFactory beanFactory) {_		super(beanFactory)__	};create,a,new,link,reactive,web,server,application,context,with,the,given,code,default,listable,bean,factory,param,bean,factory,the,default,listable,bean,factory,instance,to,use,for,this,context;public,reactive,web,server,application,context,default,listable,bean,factory,bean,factory,super,bean,factory
ReactiveWebServerApplicationContext -> public ReactiveWebServerApplicationContext(DefaultListableBeanFactory beanFactory);1551196173;Create a new {@link ReactiveWebServerApplicationContext} with the given_{@code DefaultListableBeanFactory}._@param beanFactory the DefaultListableBeanFactory instance to use for this context;public ReactiveWebServerApplicationContext(DefaultListableBeanFactory beanFactory) {_		super(beanFactory)__	};create,a,new,link,reactive,web,server,application,context,with,the,given,code,default,listable,bean,factory,param,bean,factory,the,default,listable,bean,factory,instance,to,use,for,this,context;public,reactive,web,server,application,context,default,listable,bean,factory,bean,factory,super,bean,factory
ReactiveWebServerApplicationContext -> @Deprecated 	protected ReactiveWebServerFactory getWebServerFactory();1550148109;Return the {@link ReactiveWebServerFactory} that should be used to create the_reactive web server. By default this method searches for a suitable bean in the_context itself._@return a {@link ReactiveWebServerFactory} (never {@code null})_@deprecated since 2.2 in favor of {@link #getWebServerFactoryBeanName()} and_{@link #getWebServerFactory(String)};@Deprecated_	protected ReactiveWebServerFactory getWebServerFactory() {_		return getWebServerFactory(getWebServerFactoryBeanName())__	};return,the,link,reactive,web,server,factory,that,should,be,used,to,create,the,reactive,web,server,by,default,this,method,searches,for,a,suitable,bean,in,the,context,itself,return,a,link,reactive,web,server,factory,never,code,null,deprecated,since,2,2,in,favor,of,link,get,web,server,factory,bean,name,and,link,get,web,server,factory,string;deprecated,protected,reactive,web,server,factory,get,web,server,factory,return,get,web,server,factory,get,web,server,factory,bean,name
ReactiveWebServerApplicationContext -> @Deprecated 	protected ReactiveWebServerFactory getWebServerFactory();1551196173;Return the {@link ReactiveWebServerFactory} that should be used to create the_reactive web server. By default this method searches for a suitable bean in the_context itself._@return a {@link ReactiveWebServerFactory} (never {@code null})_@deprecated since 2.2 in favor of {@link #getWebServerFactoryBeanName()} and_{@link #getWebServerFactory(String)};@Deprecated_	protected ReactiveWebServerFactory getWebServerFactory() {_		return getWebServerFactory(getWebServerFactoryBeanName())__	};return,the,link,reactive,web,server,factory,that,should,be,used,to,create,the,reactive,web,server,by,default,this,method,searches,for,a,suitable,bean,in,the,context,itself,return,a,link,reactive,web,server,factory,never,code,null,deprecated,since,2,2,in,favor,of,link,get,web,server,factory,bean,name,and,link,get,web,server,factory,string;deprecated,protected,reactive,web,server,factory,get,web,server,factory,return,get,web,server,factory,get,web,server,factory,bean,name
ReactiveWebServerApplicationContext -> protected ReactiveWebServerFactory getWebServerFactory();1507173536;Return the {@link ReactiveWebServerFactory} that should be used to create the_reactive web server. By default this method searches for a suitable bean in the_context itself._@return a {@link ReactiveWebServerFactory} (never {@code null});protected ReactiveWebServerFactory getWebServerFactory() {_		_		String[] beanNames = getBeanFactory()_				.getBeanNamesForType(ReactiveWebServerFactory.class)__		if (beanNames.length == 0) {_			throw new ApplicationContextException(_					"Unable to start ReactiveWebApplicationContext due to missing "_							+ "ReactiveWebServerFactory bean.")__		}_		if (beanNames.length > 1) {_			throw new ApplicationContextException(_					"Unable to start ReactiveWebApplicationContext due to multiple "_							+ "ReactiveWebServerFactory beans : "_							+ StringUtils.arrayToCommaDelimitedString(beanNames))__		}_		return getBeanFactory().getBean(beanNames[0], ReactiveWebServerFactory.class)__	};return,the,link,reactive,web,server,factory,that,should,be,used,to,create,the,reactive,web,server,by,default,this,method,searches,for,a,suitable,bean,in,the,context,itself,return,a,link,reactive,web,server,factory,never,code,null;protected,reactive,web,server,factory,get,web,server,factory,string,bean,names,get,bean,factory,get,bean,names,for,type,reactive,web,server,factory,class,if,bean,names,length,0,throw,new,application,context,exception,unable,to,start,reactive,web,application,context,due,to,missing,reactive,web,server,factory,bean,if,bean,names,length,1,throw,new,application,context,exception,unable,to,start,reactive,web,application,context,due,to,multiple,reactive,web,server,factory,beans,string,utils,array,to,comma,delimited,string,bean,names,return,get,bean,factory,get,bean,bean,names,0,reactive,web,server,factory,class
ReactiveWebServerApplicationContext -> protected ReactiveWebServerFactory getWebServerFactory();1507672271;Return the {@link ReactiveWebServerFactory} that should be used to create the_reactive web server. By default this method searches for a suitable bean in the_context itself._@return a {@link ReactiveWebServerFactory} (never {@code null});protected ReactiveWebServerFactory getWebServerFactory() {_		_		String[] beanNames = getBeanFactory()_				.getBeanNamesForType(ReactiveWebServerFactory.class)__		if (beanNames.length == 0) {_			throw new ApplicationContextException(_					"Unable to start ReactiveWebApplicationContext due to missing "_							+ "ReactiveWebServerFactory bean.")__		}_		if (beanNames.length > 1) {_			throw new ApplicationContextException(_					"Unable to start ReactiveWebApplicationContext due to multiple "_							+ "ReactiveWebServerFactory beans : "_							+ StringUtils.arrayToCommaDelimitedString(beanNames))__		}_		return getBeanFactory().getBean(beanNames[0], ReactiveWebServerFactory.class)__	};return,the,link,reactive,web,server,factory,that,should,be,used,to,create,the,reactive,web,server,by,default,this,method,searches,for,a,suitable,bean,in,the,context,itself,return,a,link,reactive,web,server,factory,never,code,null;protected,reactive,web,server,factory,get,web,server,factory,string,bean,names,get,bean,factory,get,bean,names,for,type,reactive,web,server,factory,class,if,bean,names,length,0,throw,new,application,context,exception,unable,to,start,reactive,web,application,context,due,to,missing,reactive,web,server,factory,bean,if,bean,names,length,1,throw,new,application,context,exception,unable,to,start,reactive,web,application,context,due,to,multiple,reactive,web,server,factory,beans,string,utils,array,to,comma,delimited,string,bean,names,return,get,bean,factory,get,bean,bean,names,0,reactive,web,server,factory,class
ReactiveWebServerApplicationContext -> protected ReactiveWebServerFactory getWebServerFactory();1509761243;Return the {@link ReactiveWebServerFactory} that should be used to create the_reactive web server. By default this method searches for a suitable bean in the_context itself._@return a {@link ReactiveWebServerFactory} (never {@code null});protected ReactiveWebServerFactory getWebServerFactory() {_		_		String[] beanNames = getBeanFactory()_				.getBeanNamesForType(ReactiveWebServerFactory.class)__		if (beanNames.length == 0) {_			throw new ApplicationContextException(_					"Unable to start ReactiveWebApplicationContext due to missing "_							+ "ReactiveWebServerFactory bean.")__		}_		if (beanNames.length > 1) {_			throw new ApplicationContextException(_					"Unable to start ReactiveWebApplicationContext due to multiple "_							+ "ReactiveWebServerFactory beans : "_							+ StringUtils.arrayToCommaDelimitedString(beanNames))__		}_		return getBeanFactory().getBean(beanNames[0], ReactiveWebServerFactory.class)__	};return,the,link,reactive,web,server,factory,that,should,be,used,to,create,the,reactive,web,server,by,default,this,method,searches,for,a,suitable,bean,in,the,context,itself,return,a,link,reactive,web,server,factory,never,code,null;protected,reactive,web,server,factory,get,web,server,factory,string,bean,names,get,bean,factory,get,bean,names,for,type,reactive,web,server,factory,class,if,bean,names,length,0,throw,new,application,context,exception,unable,to,start,reactive,web,application,context,due,to,missing,reactive,web,server,factory,bean,if,bean,names,length,1,throw,new,application,context,exception,unable,to,start,reactive,web,application,context,due,to,multiple,reactive,web,server,factory,beans,string,utils,array,to,comma,delimited,string,bean,names,return,get,bean,factory,get,bean,bean,names,0,reactive,web,server,factory,class
ReactiveWebServerApplicationContext -> protected ReactiveWebServerFactory getWebServerFactory();1511070903;Return the {@link ReactiveWebServerFactory} that should be used to create the_reactive web server. By default this method searches for a suitable bean in the_context itself._@return a {@link ReactiveWebServerFactory} (never {@code null});protected ReactiveWebServerFactory getWebServerFactory() {_		_		String[] beanNames = getBeanFactory()_				.getBeanNamesForType(ReactiveWebServerFactory.class)__		if (beanNames.length == 0) {_			throw new ApplicationContextException(_					"Unable to start ReactiveWebApplicationContext due to missing "_							+ "ReactiveWebServerFactory bean.")__		}_		if (beanNames.length > 1) {_			throw new ApplicationContextException(_					"Unable to start ReactiveWebApplicationContext due to multiple "_							+ "ReactiveWebServerFactory beans : "_							+ StringUtils.arrayToCommaDelimitedString(beanNames))__		}_		return getBeanFactory().getBean(beanNames[0], ReactiveWebServerFactory.class)__	};return,the,link,reactive,web,server,factory,that,should,be,used,to,create,the,reactive,web,server,by,default,this,method,searches,for,a,suitable,bean,in,the,context,itself,return,a,link,reactive,web,server,factory,never,code,null;protected,reactive,web,server,factory,get,web,server,factory,string,bean,names,get,bean,factory,get,bean,names,for,type,reactive,web,server,factory,class,if,bean,names,length,0,throw,new,application,context,exception,unable,to,start,reactive,web,application,context,due,to,missing,reactive,web,server,factory,bean,if,bean,names,length,1,throw,new,application,context,exception,unable,to,start,reactive,web,application,context,due,to,multiple,reactive,web,server,factory,beans,string,utils,array,to,comma,delimited,string,bean,names,return,get,bean,factory,get,bean,bean,names,0,reactive,web,server,factory,class
ReactiveWebServerApplicationContext -> protected ReactiveWebServerFactory getWebServerFactory();1517531895;Return the {@link ReactiveWebServerFactory} that should be used to create the_reactive web server. By default this method searches for a suitable bean in the_context itself._@return a {@link ReactiveWebServerFactory} (never {@code null});protected ReactiveWebServerFactory getWebServerFactory() {_		_		String[] beanNames = getBeanFactory()_				.getBeanNamesForType(ReactiveWebServerFactory.class)__		if (beanNames.length == 0) {_			throw new ApplicationContextException(_					"Unable to start ReactiveWebApplicationContext due to missing "_							+ "ReactiveWebServerFactory bean.")__		}_		if (beanNames.length > 1) {_			throw new ApplicationContextException(_					"Unable to start ReactiveWebApplicationContext due to multiple "_							+ "ReactiveWebServerFactory beans : "_							+ StringUtils.arrayToCommaDelimitedString(beanNames))__		}_		return getBeanFactory().getBean(beanNames[0], ReactiveWebServerFactory.class)__	};return,the,link,reactive,web,server,factory,that,should,be,used,to,create,the,reactive,web,server,by,default,this,method,searches,for,a,suitable,bean,in,the,context,itself,return,a,link,reactive,web,server,factory,never,code,null;protected,reactive,web,server,factory,get,web,server,factory,string,bean,names,get,bean,factory,get,bean,names,for,type,reactive,web,server,factory,class,if,bean,names,length,0,throw,new,application,context,exception,unable,to,start,reactive,web,application,context,due,to,missing,reactive,web,server,factory,bean,if,bean,names,length,1,throw,new,application,context,exception,unable,to,start,reactive,web,application,context,due,to,multiple,reactive,web,server,factory,beans,string,utils,array,to,comma,delimited,string,bean,names,return,get,bean,factory,get,bean,bean,names,0,reactive,web,server,factory,class
ReactiveWebServerApplicationContext -> protected ReactiveWebServerFactory getWebServerFactory();1538546506;Return the {@link ReactiveWebServerFactory} that should be used to create the_reactive web server. By default this method searches for a suitable bean in the_context itself._@return a {@link ReactiveWebServerFactory} (never {@code null});protected ReactiveWebServerFactory getWebServerFactory() {_		_		String[] beanNames = getBeanFactory()_				.getBeanNamesForType(ReactiveWebServerFactory.class)__		if (beanNames.length == 0) {_			throw new ApplicationContextException(_					"Unable to start ReactiveWebApplicationContext due to missing "_							+ "ReactiveWebServerFactory bean.")__		}_		if (beanNames.length > 1) {_			throw new ApplicationContextException(_					"Unable to start ReactiveWebApplicationContext due to multiple "_							+ "ReactiveWebServerFactory beans : "_							+ StringUtils.arrayToCommaDelimitedString(beanNames))__		}_		return getBeanFactory().getBean(beanNames[0], ReactiveWebServerFactory.class)__	};return,the,link,reactive,web,server,factory,that,should,be,used,to,create,the,reactive,web,server,by,default,this,method,searches,for,a,suitable,bean,in,the,context,itself,return,a,link,reactive,web,server,factory,never,code,null;protected,reactive,web,server,factory,get,web,server,factory,string,bean,names,get,bean,factory,get,bean,names,for,type,reactive,web,server,factory,class,if,bean,names,length,0,throw,new,application,context,exception,unable,to,start,reactive,web,application,context,due,to,missing,reactive,web,server,factory,bean,if,bean,names,length,1,throw,new,application,context,exception,unable,to,start,reactive,web,application,context,due,to,multiple,reactive,web,server,factory,beans,string,utils,array,to,comma,delimited,string,bean,names,return,get,bean,factory,get,bean,bean,names,0,reactive,web,server,factory,class
ReactiveWebServerApplicationContext -> protected ReactiveWebServerFactory getWebServerFactory();1538665216;Return the {@link ReactiveWebServerFactory} that should be used to create the_reactive web server. By default this method searches for a suitable bean in the_context itself._@return a {@link ReactiveWebServerFactory} (never {@code null});protected ReactiveWebServerFactory getWebServerFactory() {_		_		String[] beanNames = getBeanFactory()_				.getBeanNamesForType(ReactiveWebServerFactory.class)__		if (beanNames.length == 0) {_			throw new ApplicationContextException(_					"Unable to start ReactiveWebApplicationContext due to missing "_							+ "ReactiveWebServerFactory bean.")__		}_		if (beanNames.length > 1) {_			throw new ApplicationContextException(_					"Unable to start ReactiveWebApplicationContext due to multiple "_							+ "ReactiveWebServerFactory beans : "_							+ StringUtils.arrayToCommaDelimitedString(beanNames))__		}_		return getBeanFactory().getBean(beanNames[0], ReactiveWebServerFactory.class)__	};return,the,link,reactive,web,server,factory,that,should,be,used,to,create,the,reactive,web,server,by,default,this,method,searches,for,a,suitable,bean,in,the,context,itself,return,a,link,reactive,web,server,factory,never,code,null;protected,reactive,web,server,factory,get,web,server,factory,string,bean,names,get,bean,factory,get,bean,names,for,type,reactive,web,server,factory,class,if,bean,names,length,0,throw,new,application,context,exception,unable,to,start,reactive,web,application,context,due,to,missing,reactive,web,server,factory,bean,if,bean,names,length,1,throw,new,application,context,exception,unable,to,start,reactive,web,application,context,due,to,multiple,reactive,web,server,factory,beans,string,utils,array,to,comma,delimited,string,bean,names,return,get,bean,factory,get,bean,bean,names,0,reactive,web,server,factory,class
ReactiveWebServerApplicationContext -> protected ReactiveWebServerFactory getWebServerFactory();1538673449;Return the {@link ReactiveWebServerFactory} that should be used to create the_reactive web server. By default this method searches for a suitable bean in the_context itself._@return a {@link ReactiveWebServerFactory} (never {@code null});protected ReactiveWebServerFactory getWebServerFactory() {_		_		String[] beanNames = getBeanFactory()_				.getBeanNamesForType(ReactiveWebServerFactory.class)__		if (beanNames.length == 0) {_			throw new ApplicationContextException(_					"Unable to start ReactiveWebApplicationContext due to missing "_							+ "ReactiveWebServerFactory bean.")__		}_		if (beanNames.length > 1) {_			throw new ApplicationContextException(_					"Unable to start ReactiveWebApplicationContext due to multiple "_							+ "ReactiveWebServerFactory beans : "_							+ StringUtils.arrayToCommaDelimitedString(beanNames))__		}_		return getBeanFactory().getBean(beanNames[0], ReactiveWebServerFactory.class)__	};return,the,link,reactive,web,server,factory,that,should,be,used,to,create,the,reactive,web,server,by,default,this,method,searches,for,a,suitable,bean,in,the,context,itself,return,a,link,reactive,web,server,factory,never,code,null;protected,reactive,web,server,factory,get,web,server,factory,string,bean,names,get,bean,factory,get,bean,names,for,type,reactive,web,server,factory,class,if,bean,names,length,0,throw,new,application,context,exception,unable,to,start,reactive,web,application,context,due,to,missing,reactive,web,server,factory,bean,if,bean,names,length,1,throw,new,application,context,exception,unable,to,start,reactive,web,application,context,due,to,multiple,reactive,web,server,factory,beans,string,utils,array,to,comma,delimited,string,bean,names,return,get,bean,factory,get,bean,bean,names,0,reactive,web,server,factory,class
ReactiveWebServerApplicationContext -> protected ReactiveWebServerFactory getWebServerFactory();1539393863;Return the {@link ReactiveWebServerFactory} that should be used to create the_reactive web server. By default this method searches for a suitable bean in the_context itself._@return a {@link ReactiveWebServerFactory} (never {@code null});protected ReactiveWebServerFactory getWebServerFactory() {_		_		String[] beanNames = getBeanFactory()_				.getBeanNamesForType(ReactiveWebServerFactory.class)__		if (beanNames.length == 0) {_			throw new ApplicationContextException(_					"Unable to start ReactiveWebApplicationContext due to missing "_							+ "ReactiveWebServerFactory bean.")__		}_		if (beanNames.length > 1) {_			throw new ApplicationContextException(_					"Unable to start ReactiveWebApplicationContext due to multiple "_							+ "ReactiveWebServerFactory beans : "_							+ StringUtils.arrayToCommaDelimitedString(beanNames))__		}_		return getBeanFactory().getBean(beanNames[0], ReactiveWebServerFactory.class)__	};return,the,link,reactive,web,server,factory,that,should,be,used,to,create,the,reactive,web,server,by,default,this,method,searches,for,a,suitable,bean,in,the,context,itself,return,a,link,reactive,web,server,factory,never,code,null;protected,reactive,web,server,factory,get,web,server,factory,string,bean,names,get,bean,factory,get,bean,names,for,type,reactive,web,server,factory,class,if,bean,names,length,0,throw,new,application,context,exception,unable,to,start,reactive,web,application,context,due,to,missing,reactive,web,server,factory,bean,if,bean,names,length,1,throw,new,application,context,exception,unable,to,start,reactive,web,application,context,due,to,multiple,reactive,web,server,factory,beans,string,utils,array,to,comma,delimited,string,bean,names,return,get,bean,factory,get,bean,bean,names,0,reactive,web,server,factory,class
ReactiveWebServerApplicationContext -> @Override 	public WebServer getWebServer();1517531895;Returns the {@link WebServer} that was created by the context or {@code null} if_the server has not yet been created._@return the web server;@Override_	public WebServer getWebServer() {_		return this.webServer__	};returns,the,link,web,server,that,was,created,by,the,context,or,code,null,if,the,server,has,not,yet,been,created,return,the,web,server;override,public,web,server,get,web,server,return,this,web,server
ReactiveWebServerApplicationContext -> @Override 	public WebServer getWebServer();1538546506;Returns the {@link WebServer} that was created by the context or {@code null} if_the server has not yet been created._@return the web server;@Override_	public WebServer getWebServer() {_		return this.webServer__	};returns,the,link,web,server,that,was,created,by,the,context,or,code,null,if,the,server,has,not,yet,been,created,return,the,web,server;override,public,web,server,get,web,server,return,this,web,server
ReactiveWebServerApplicationContext -> @Override 	public WebServer getWebServer();1538665216;Returns the {@link WebServer} that was created by the context or {@code null} if_the server has not yet been created._@return the web server;@Override_	public WebServer getWebServer() {_		return ServerManager.getWebServer(this.serverManager)__	};returns,the,link,web,server,that,was,created,by,the,context,or,code,null,if,the,server,has,not,yet,been,created,return,the,web,server;override,public,web,server,get,web,server,return,server,manager,get,web,server,this,server,manager
ReactiveWebServerApplicationContext -> @Override 	public WebServer getWebServer();1538673449;Returns the {@link WebServer} that was created by the context or {@code null} if_the server has not yet been created._@return the web server;@Override_	public WebServer getWebServer() {_		return ServerManager.getWebServer(this.serverManager)__	};returns,the,link,web,server,that,was,created,by,the,context,or,code,null,if,the,server,has,not,yet,been,created,return,the,web,server;override,public,web,server,get,web,server,return,server,manager,get,web,server,this,server,manager
ReactiveWebServerApplicationContext -> @Override 	public WebServer getWebServer();1539393863;Returns the {@link WebServer} that was created by the context or {@code null} if_the server has not yet been created._@return the web server;@Override_	public WebServer getWebServer() {_		return ServerManager.getWebServer(this.serverManager)__	};returns,the,link,web,server,that,was,created,by,the,context,or,code,null,if,the,server,has,not,yet,been,created,return,the,web,server;override,public,web,server,get,web,server,return,server,manager,get,web,server,this,server,manager
ReactiveWebServerApplicationContext -> @Override 	public WebServer getWebServer();1550148109;Returns the {@link WebServer} that was created by the context or {@code null} if_the server has not yet been created._@return the web server;@Override_	public WebServer getWebServer() {_		return ServerManager.getWebServer(this.serverManager)__	};returns,the,link,web,server,that,was,created,by,the,context,or,code,null,if,the,server,has,not,yet,been,created,return,the,web,server;override,public,web,server,get,web,server,return,server,manager,get,web,server,this,server,manager
ReactiveWebServerApplicationContext -> @Override 	public WebServer getWebServer();1551196173;Returns the {@link WebServer} that was created by the context or {@code null} if_the server has not yet been created._@return the web server;@Override_	public WebServer getWebServer() {_		return ServerManager.getWebServer(this.serverManager)__	};returns,the,link,web,server,that,was,created,by,the,context,or,code,null,if,the,server,has,not,yet,been,created,return,the,web,server;override,public,web,server,get,web,server,return,server,manager,get,web,server,this,server,manager
ReactiveWebServerApplicationContext -> public WebServer getWebServer();1507672271;Returns the {@link WebServer} that was created by the context or {@code null} if_the server has not yet been created._@return the web server;public WebServer getWebServer() {_		return this.webServer__	};returns,the,link,web,server,that,was,created,by,the,context,or,code,null,if,the,server,has,not,yet,been,created,return,the,web,server;public,web,server,get,web,server,return,this,web,server
ReactiveWebServerApplicationContext -> public WebServer getWebServer();1509761243;Returns the {@link WebServer} that was created by the context or {@code null} if_the server has not yet been created._@return the web server;public WebServer getWebServer() {_		return this.webServer__	};returns,the,link,web,server,that,was,created,by,the,context,or,code,null,if,the,server,has,not,yet,been,created,return,the,web,server;public,web,server,get,web,server,return,this,web,server
ReactiveWebServerApplicationContext -> public WebServer getWebServer();1511070903;Returns the {@link WebServer} that was created by the context or {@code null} if_the server has not yet been created._@return the web server;public WebServer getWebServer() {_		return this.webServer__	};returns,the,link,web,server,that,was,created,by,the,context,or,code,null,if,the,server,has,not,yet,been,created,return,the,web,server;public,web,server,get,web,server,return,this,web,server
ReactiveWebServerApplicationContext -> public ReactiveWebServerApplicationContext();1511070903;Create a new {@link ReactiveWebServerApplicationContext}.;public ReactiveWebServerApplicationContext() {_	};create,a,new,link,reactive,web,server,application,context;public,reactive,web,server,application,context
ReactiveWebServerApplicationContext -> public ReactiveWebServerApplicationContext();1517531895;Create a new {@link ReactiveWebServerApplicationContext}.;public ReactiveWebServerApplicationContext() {_	};create,a,new,link,reactive,web,server,application,context;public,reactive,web,server,application,context
ReactiveWebServerApplicationContext -> public ReactiveWebServerApplicationContext();1538546506;Create a new {@link ReactiveWebServerApplicationContext}.;public ReactiveWebServerApplicationContext() {_	};create,a,new,link,reactive,web,server,application,context;public,reactive,web,server,application,context
ReactiveWebServerApplicationContext -> public ReactiveWebServerApplicationContext();1538665216;Create a new {@link ReactiveWebServerApplicationContext}.;public ReactiveWebServerApplicationContext() {_	};create,a,new,link,reactive,web,server,application,context;public,reactive,web,server,application,context
ReactiveWebServerApplicationContext -> public ReactiveWebServerApplicationContext();1538673449;Create a new {@link ReactiveWebServerApplicationContext}.;public ReactiveWebServerApplicationContext() {_	};create,a,new,link,reactive,web,server,application,context;public,reactive,web,server,application,context
ReactiveWebServerApplicationContext -> public ReactiveWebServerApplicationContext();1539393863;Create a new {@link ReactiveWebServerApplicationContext}.;public ReactiveWebServerApplicationContext() {_	};create,a,new,link,reactive,web,server,application,context;public,reactive,web,server,application,context
ReactiveWebServerApplicationContext -> public ReactiveWebServerApplicationContext();1550148109;Create a new {@link ReactiveWebServerApplicationContext}.;public ReactiveWebServerApplicationContext() {_	};create,a,new,link,reactive,web,server,application,context;public,reactive,web,server,application,context
ReactiveWebServerApplicationContext -> public ReactiveWebServerApplicationContext();1551196173;Create a new {@link ReactiveWebServerApplicationContext}.;public ReactiveWebServerApplicationContext() {_	};create,a,new,link,reactive,web,server,application,context;public,reactive,web,server,application,context
