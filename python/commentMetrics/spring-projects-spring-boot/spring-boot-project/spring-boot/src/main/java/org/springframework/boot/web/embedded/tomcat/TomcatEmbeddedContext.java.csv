# id;timestamp;commentText;codeText;commentWords;codeWords
TomcatEmbeddedContext -> private void doWithThreadContextClassLoader(ClassLoader classLoader, Runnable code);1539322249;Some older Servlet frameworks (e.g. Struts, BIRT) use the Thread context class_loader to create servlet instances in this phase. If they do that and then try to_initialize them later the class loader may have changed, so wrap the call to_loadOnStartup in what we think its going to be the main webapp classloader at_runtime._@param classLoader the class loader to use_@param code the code to run;private void doWithThreadContextClassLoader(ClassLoader classLoader, Runnable code) {_		ClassLoader existingLoader = (classLoader != null)_				? ClassUtils.overrideThreadContextClassLoader(classLoader) : null__		try {_			code.run()__		}_		finally {_			if (existingLoader != null) {_				ClassUtils.overrideThreadContextClassLoader(existingLoader)__			}_		}_	};some,older,servlet,frameworks,e,g,struts,birt,use,the,thread,context,class,loader,to,create,servlet,instances,in,this,phase,if,they,do,that,and,then,try,to,initialize,them,later,the,class,loader,may,have,changed,so,wrap,the,call,to,load,on,startup,in,what,we,think,its,going,to,be,the,main,webapp,classloader,at,runtime,param,class,loader,the,class,loader,to,use,param,code,the,code,to,run;private,void,do,with,thread,context,class,loader,class,loader,class,loader,runnable,code,class,loader,existing,loader,class,loader,null,class,utils,override,thread,context,class,loader,class,loader,null,try,code,run,finally,if,existing,loader,null,class,utils,override,thread,context,class,loader,existing,loader
TomcatEmbeddedContext -> private void doWithThreadContextClassLoader(ClassLoader classLoader, Runnable code);1539322300;Some older Servlet frameworks (e.g. Struts, BIRT) use the Thread context class_loader to create servlet instances in this phase. If they do that and then try to_initialize them later the class loader may have changed, so wrap the call to_loadOnStartup in what we think its going to be the main webapp classloader at_runtime._@param classLoader the class loader to use_@param code the code to run;private void doWithThreadContextClassLoader(ClassLoader classLoader, Runnable code) {_		ClassLoader existingLoader = (classLoader != null)_				? ClassUtils.overrideThreadContextClassLoader(classLoader) : null__		try {_			code.run()__		}_		finally {_			if (existingLoader != null) {_				ClassUtils.overrideThreadContextClassLoader(existingLoader)__			}_		}_	};some,older,servlet,frameworks,e,g,struts,birt,use,the,thread,context,class,loader,to,create,servlet,instances,in,this,phase,if,they,do,that,and,then,try,to,initialize,them,later,the,class,loader,may,have,changed,so,wrap,the,call,to,load,on,startup,in,what,we,think,its,going,to,be,the,main,webapp,classloader,at,runtime,param,class,loader,the,class,loader,to,use,param,code,the,code,to,run;private,void,do,with,thread,context,class,loader,class,loader,class,loader,runnable,code,class,loader,existing,loader,class,loader,null,class,utils,override,thread,context,class,loader,class,loader,null,try,code,run,finally,if,existing,loader,null,class,utils,override,thread,context,class,loader,existing,loader
TomcatEmbeddedContext -> private void doWithThreadContextClassLoader(ClassLoader classLoader, Runnable code);1543352081;Some older Servlet frameworks (e.g. Struts, BIRT) use the Thread context class_loader to create servlet instances in this phase. If they do that and then try to_initialize them later the class loader may have changed, so wrap the call to_loadOnStartup in what we think its going to be the main webapp classloader at_runtime._@param classLoader the class loader to use_@param code the code to run;private void doWithThreadContextClassLoader(ClassLoader classLoader, Runnable code) {_		ClassLoader existingLoader = (classLoader != null)_				? ClassUtils.overrideThreadContextClassLoader(classLoader) : null__		try {_			code.run()__		}_		finally {_			if (existingLoader != null) {_				ClassUtils.overrideThreadContextClassLoader(existingLoader)__			}_		}_	};some,older,servlet,frameworks,e,g,struts,birt,use,the,thread,context,class,loader,to,create,servlet,instances,in,this,phase,if,they,do,that,and,then,try,to,initialize,them,later,the,class,loader,may,have,changed,so,wrap,the,call,to,load,on,startup,in,what,we,think,its,going,to,be,the,main,webapp,classloader,at,runtime,param,class,loader,the,class,loader,to,use,param,code,the,code,to,run;private,void,do,with,thread,context,class,loader,class,loader,class,loader,runnable,code,class,loader,existing,loader,class,loader,null,class,utils,override,thread,context,class,loader,class,loader,null,try,code,run,finally,if,existing,loader,null,class,utils,override,thread,context,class,loader,existing,loader
