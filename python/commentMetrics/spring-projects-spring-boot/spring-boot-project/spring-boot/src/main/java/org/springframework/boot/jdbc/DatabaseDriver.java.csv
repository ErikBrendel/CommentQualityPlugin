# id;timestamp;commentText;codeText;commentWords;codeWords
DatabaseDriver -> public String getValidationQuery();1507173536;Return the validation query._@return the validation query or {@code null};public String getValidationQuery() {_		return this.validationQuery__	};return,the,validation,query,return,the,validation,query,or,code,null;public,string,get,validation,query,return,this,validation,query
DatabaseDriver -> public String getValidationQuery();1517345250;Return the validation query._@return the validation query or {@code null};public String getValidationQuery() {_		return this.validationQuery__	};return,the,validation,query,return,the,validation,query,or,code,null;public,string,get,validation,query,return,this,validation,query
DatabaseDriver -> public String getValidationQuery();1518271576;Return the validation query._@return the validation query or {@code null};public String getValidationQuery() {_		return this.validationQuery__	};return,the,validation,query,return,the,validation,query,or,code,null;public,string,get,validation,query,return,this,validation,query
DatabaseDriver -> public String getValidationQuery();1519664612;Return the validation query._@return the validation query or {@code null};public String getValidationQuery() {_		return this.validationQuery__	};return,the,validation,query,return,the,validation,query,or,code,null;public,string,get,validation,query,return,this,validation,query
DatabaseDriver -> public String getValidationQuery();1530644695;Return the validation query._@return the validation query or {@code null};public String getValidationQuery() {_		return this.validationQuery__	};return,the,validation,query,return,the,validation,query,or,code,null;public,string,get,validation,query,return,this,validation,query
DatabaseDriver -> public String getValidationQuery();1532738143;Return the validation query._@return the validation query or {@code null};public String getValidationQuery() {_		return this.validationQuery__	};return,the,validation,query,return,the,validation,query,or,code,null;public,string,get,validation,query,return,this,validation,query
DatabaseDriver -> public String getValidationQuery();1537437813;Return the validation query._@return the validation query or {@code null};public String getValidationQuery() {_		return this.validationQuery__	};return,the,validation,query,return,the,validation,query,or,code,null;public,string,get,validation,query,return,this,validation,query
DatabaseDriver -> public String getValidationQuery();1538568021;Return the validation query._@return the validation query or {@code null};public String getValidationQuery() {_		return this.validationQuery__	};return,the,validation,query,return,the,validation,query,or,code,null;public,string,get,validation,query,return,this,validation,query
DatabaseDriver -> public String getValidationQuery();1540411238;Return the validation query._@return the validation query or {@code null};public String getValidationQuery() {_		return this.validationQuery__	};return,the,validation,query,return,the,validation,query,or,code,null;public,string,get,validation,query,return,this,validation,query
DatabaseDriver -> public String getValidationQuery();1541869098;Return the validation query._@return the validation query or {@code null};public String getValidationQuery() {_		return this.validationQuery__	};return,the,validation,query,return,the,validation,query,or,code,null;public,string,get,validation,query,return,this,validation,query
DatabaseDriver -> public String getValidationQuery();1549964207;Return the validation query._@return the validation query or {@code null};public String getValidationQuery() {_		return this.validationQuery__	};return,the,validation,query,return,the,validation,query,or,code,null;public,string,get,validation,query,return,this,validation,query
DatabaseDriver -> public String getId();1507173536;Return the identifier of this driver._@return the identifier;public String getId() {_		return name().toLowerCase()__	};return,the,identifier,of,this,driver,return,the,identifier;public,string,get,id,return,name,to,lower,case
DatabaseDriver -> public String getId();1517345250;Return the identifier of this driver._@return the identifier;public String getId() {_		return name().toLowerCase()__	};return,the,identifier,of,this,driver,return,the,identifier;public,string,get,id,return,name,to,lower,case
DatabaseDriver -> public String getId();1518271576;Return the identifier of this driver._@return the identifier;public String getId() {_		return name().toLowerCase()__	};return,the,identifier,of,this,driver,return,the,identifier;public,string,get,id,return,name,to,lower,case
DatabaseDriver -> public String getId();1519664612;Return the identifier of this driver._@return the identifier;public String getId() {_		return name().toLowerCase(Locale.ENGLISH)__	};return,the,identifier,of,this,driver,return,the,identifier;public,string,get,id,return,name,to,lower,case,locale,english
DatabaseDriver -> public String getId();1530644695;Return the identifier of this driver._@return the identifier;public String getId() {_		return name().toLowerCase(Locale.ENGLISH)__	};return,the,identifier,of,this,driver,return,the,identifier;public,string,get,id,return,name,to,lower,case,locale,english
DatabaseDriver -> public String getId();1532738143;Return the identifier of this driver._@return the identifier;public String getId() {_		return name().toLowerCase(Locale.ENGLISH)__	};return,the,identifier,of,this,driver,return,the,identifier;public,string,get,id,return,name,to,lower,case,locale,english
DatabaseDriver -> public String getId();1537437813;Return the identifier of this driver._@return the identifier;public String getId() {_		return name().toLowerCase(Locale.ENGLISH)__	};return,the,identifier,of,this,driver,return,the,identifier;public,string,get,id,return,name,to,lower,case,locale,english
DatabaseDriver -> public String getId();1538568021;Return the identifier of this driver._@return the identifier;public String getId() {_		return name().toLowerCase(Locale.ENGLISH)__	};return,the,identifier,of,this,driver,return,the,identifier;public,string,get,id,return,name,to,lower,case,locale,english
DatabaseDriver -> public String getId();1540411238;Return the identifier of this driver._@return the identifier;public String getId() {_		return name().toLowerCase(Locale.ENGLISH)__	};return,the,identifier,of,this,driver,return,the,identifier;public,string,get,id,return,name,to,lower,case,locale,english
DatabaseDriver -> public String getId();1541869098;Return the identifier of this driver._@return the identifier;public String getId() {_		return name().toLowerCase(Locale.ENGLISH)__	};return,the,identifier,of,this,driver,return,the,identifier;public,string,get,id,return,name,to,lower,case,locale,english
DatabaseDriver -> public String getId();1549964207;Return the identifier of this driver._@return the identifier;public String getId() {_		return name().toLowerCase(Locale.ENGLISH)__	};return,the,identifier,of,this,driver,return,the,identifier;public,string,get,id,return,name,to,lower,case,locale,english
DatabaseDriver -> public static DatabaseDriver fromJdbcUrl(String url);1507173536;Find a {@link DatabaseDriver} for the given URL._@param url JDBC URL_@return the database driver or {@link #UNKNOWN} if not found;public static DatabaseDriver fromJdbcUrl(String url) {_		if (StringUtils.hasLength(url)) {_			Assert.isTrue(url.startsWith("jdbc"), "URL must start with 'jdbc'")__			String urlWithoutPrefix = url.substring("jdbc".length()).toLowerCase()__			for (DatabaseDriver driver : values()) {_				for (String urlPrefix : driver.getUrlPrefixes()) {_					String prefix = ":" + urlPrefix + ":"__					if (driver != UNKNOWN && urlWithoutPrefix.startsWith(prefix)) {_						return driver__					}_				}_			}_		}_		return UNKNOWN__	};find,a,link,database,driver,for,the,given,url,param,url,jdbc,url,return,the,database,driver,or,link,unknown,if,not,found;public,static,database,driver,from,jdbc,url,string,url,if,string,utils,has,length,url,assert,is,true,url,starts,with,jdbc,url,must,start,with,jdbc,string,url,without,prefix,url,substring,jdbc,length,to,lower,case,for,database,driver,driver,values,for,string,url,prefix,driver,get,url,prefixes,string,prefix,url,prefix,if,driver,unknown,url,without,prefix,starts,with,prefix,return,driver,return,unknown
DatabaseDriver -> public static DatabaseDriver fromJdbcUrl(String url);1517345250;Find a {@link DatabaseDriver} for the given URL._@param url JDBC URL_@return the database driver or {@link #UNKNOWN} if not found;public static DatabaseDriver fromJdbcUrl(String url) {_		if (StringUtils.hasLength(url)) {_			Assert.isTrue(url.startsWith("jdbc"), "URL must start with 'jdbc'")__			String urlWithoutPrefix = url.substring("jdbc".length()).toLowerCase()__			for (DatabaseDriver driver : values()) {_				for (String urlPrefix : driver.getUrlPrefixes()) {_					String prefix = ":" + urlPrefix + ":"__					if (driver != UNKNOWN && urlWithoutPrefix.startsWith(prefix)) {_						return driver__					}_				}_			}_		}_		return UNKNOWN__	};find,a,link,database,driver,for,the,given,url,param,url,jdbc,url,return,the,database,driver,or,link,unknown,if,not,found;public,static,database,driver,from,jdbc,url,string,url,if,string,utils,has,length,url,assert,is,true,url,starts,with,jdbc,url,must,start,with,jdbc,string,url,without,prefix,url,substring,jdbc,length,to,lower,case,for,database,driver,driver,values,for,string,url,prefix,driver,get,url,prefixes,string,prefix,url,prefix,if,driver,unknown,url,without,prefix,starts,with,prefix,return,driver,return,unknown
DatabaseDriver -> public static DatabaseDriver fromJdbcUrl(String url);1518271576;Find a {@link DatabaseDriver} for the given URL._@param url JDBC URL_@return the database driver or {@link #UNKNOWN} if not found;public static DatabaseDriver fromJdbcUrl(String url) {_		if (StringUtils.hasLength(url)) {_			Assert.isTrue(url.startsWith("jdbc"), "URL must start with 'jdbc'")__			String urlWithoutPrefix = url.substring("jdbc".length()).toLowerCase()__			for (DatabaseDriver driver : values()) {_				for (String urlPrefix : driver.getUrlPrefixes()) {_					String prefix = ":" + urlPrefix + ":"__					if (driver != UNKNOWN && urlWithoutPrefix.startsWith(prefix)) {_						return driver__					}_				}_			}_		}_		return UNKNOWN__	};find,a,link,database,driver,for,the,given,url,param,url,jdbc,url,return,the,database,driver,or,link,unknown,if,not,found;public,static,database,driver,from,jdbc,url,string,url,if,string,utils,has,length,url,assert,is,true,url,starts,with,jdbc,url,must,start,with,jdbc,string,url,without,prefix,url,substring,jdbc,length,to,lower,case,for,database,driver,driver,values,for,string,url,prefix,driver,get,url,prefixes,string,prefix,url,prefix,if,driver,unknown,url,without,prefix,starts,with,prefix,return,driver,return,unknown
DatabaseDriver -> public static DatabaseDriver fromJdbcUrl(String url);1519664612;Find a {@link DatabaseDriver} for the given URL._@param url JDBC URL_@return the database driver or {@link #UNKNOWN} if not found;public static DatabaseDriver fromJdbcUrl(String url) {_		if (StringUtils.hasLength(url)) {_			Assert.isTrue(url.startsWith("jdbc"), "URL must start with 'jdbc'")__			String urlWithoutPrefix = url.substring("jdbc".length())_					.toLowerCase(Locale.ENGLISH)__			for (DatabaseDriver driver : values()) {_				for (String urlPrefix : driver.getUrlPrefixes()) {_					String prefix = ":" + urlPrefix + ":"__					if (driver != UNKNOWN && urlWithoutPrefix.startsWith(prefix)) {_						return driver__					}_				}_			}_		}_		return UNKNOWN__	};find,a,link,database,driver,for,the,given,url,param,url,jdbc,url,return,the,database,driver,or,link,unknown,if,not,found;public,static,database,driver,from,jdbc,url,string,url,if,string,utils,has,length,url,assert,is,true,url,starts,with,jdbc,url,must,start,with,jdbc,string,url,without,prefix,url,substring,jdbc,length,to,lower,case,locale,english,for,database,driver,driver,values,for,string,url,prefix,driver,get,url,prefixes,string,prefix,url,prefix,if,driver,unknown,url,without,prefix,starts,with,prefix,return,driver,return,unknown
DatabaseDriver -> public static DatabaseDriver fromJdbcUrl(String url);1530644695;Find a {@link DatabaseDriver} for the given URL._@param url JDBC URL_@return the database driver or {@link #UNKNOWN} if not found;public static DatabaseDriver fromJdbcUrl(String url) {_		if (StringUtils.hasLength(url)) {_			Assert.isTrue(url.startsWith("jdbc"), "URL must start with 'jdbc'")__			String urlWithoutPrefix = url.substring("jdbc".length())_					.toLowerCase(Locale.ENGLISH)__			for (DatabaseDriver driver : values()) {_				for (String urlPrefix : driver.getUrlPrefixes()) {_					String prefix = ":" + urlPrefix + ":"__					if (driver != UNKNOWN && urlWithoutPrefix.startsWith(prefix)) {_						return driver__					}_				}_			}_		}_		return UNKNOWN__	};find,a,link,database,driver,for,the,given,url,param,url,jdbc,url,return,the,database,driver,or,link,unknown,if,not,found;public,static,database,driver,from,jdbc,url,string,url,if,string,utils,has,length,url,assert,is,true,url,starts,with,jdbc,url,must,start,with,jdbc,string,url,without,prefix,url,substring,jdbc,length,to,lower,case,locale,english,for,database,driver,driver,values,for,string,url,prefix,driver,get,url,prefixes,string,prefix,url,prefix,if,driver,unknown,url,without,prefix,starts,with,prefix,return,driver,return,unknown
DatabaseDriver -> public static DatabaseDriver fromJdbcUrl(String url);1532738143;Find a {@link DatabaseDriver} for the given URL._@param url the JDBC URL_@return the database driver or {@link #UNKNOWN} if not found;public static DatabaseDriver fromJdbcUrl(String url) {_		if (StringUtils.hasLength(url)) {_			Assert.isTrue(url.startsWith("jdbc"), "URL must start with 'jdbc'")__			String urlWithoutPrefix = url.substring("jdbc".length())_					.toLowerCase(Locale.ENGLISH)__			for (DatabaseDriver driver : values()) {_				for (String urlPrefix : driver.getUrlPrefixes()) {_					String prefix = ":" + urlPrefix + ":"__					if (driver != UNKNOWN && urlWithoutPrefix.startsWith(prefix)) {_						return driver__					}_				}_			}_		}_		return UNKNOWN__	};find,a,link,database,driver,for,the,given,url,param,url,the,jdbc,url,return,the,database,driver,or,link,unknown,if,not,found;public,static,database,driver,from,jdbc,url,string,url,if,string,utils,has,length,url,assert,is,true,url,starts,with,jdbc,url,must,start,with,jdbc,string,url,without,prefix,url,substring,jdbc,length,to,lower,case,locale,english,for,database,driver,driver,values,for,string,url,prefix,driver,get,url,prefixes,string,prefix,url,prefix,if,driver,unknown,url,without,prefix,starts,with,prefix,return,driver,return,unknown
DatabaseDriver -> public static DatabaseDriver fromJdbcUrl(String url);1537437813;Find a {@link DatabaseDriver} for the given URL._@param url the JDBC URL_@return the database driver or {@link #UNKNOWN} if not found;public static DatabaseDriver fromJdbcUrl(String url) {_		if (StringUtils.hasLength(url)) {_			Assert.isTrue(url.startsWith("jdbc"), "URL must start with 'jdbc'")__			String urlWithoutPrefix = url.substring("jdbc".length())_					.toLowerCase(Locale.ENGLISH)__			for (DatabaseDriver driver : values()) {_				for (String urlPrefix : driver.getUrlPrefixes()) {_					String prefix = ":" + urlPrefix + ":"__					if (driver != UNKNOWN && urlWithoutPrefix.startsWith(prefix)) {_						return driver__					}_				}_			}_		}_		return UNKNOWN__	};find,a,link,database,driver,for,the,given,url,param,url,the,jdbc,url,return,the,database,driver,or,link,unknown,if,not,found;public,static,database,driver,from,jdbc,url,string,url,if,string,utils,has,length,url,assert,is,true,url,starts,with,jdbc,url,must,start,with,jdbc,string,url,without,prefix,url,substring,jdbc,length,to,lower,case,locale,english,for,database,driver,driver,values,for,string,url,prefix,driver,get,url,prefixes,string,prefix,url,prefix,if,driver,unknown,url,without,prefix,starts,with,prefix,return,driver,return,unknown
DatabaseDriver -> public static DatabaseDriver fromJdbcUrl(String url);1538568021;Find a {@link DatabaseDriver} for the given URL._@param url the JDBC URL_@return the database driver or {@link #UNKNOWN} if not found;public static DatabaseDriver fromJdbcUrl(String url) {_		if (StringUtils.hasLength(url)) {_			Assert.isTrue(url.startsWith("jdbc"), "URL must start with 'jdbc'")__			String urlWithoutPrefix = url.substring("jdbc".length())_					.toLowerCase(Locale.ENGLISH)__			for (DatabaseDriver driver : values()) {_				for (String urlPrefix : driver.getUrlPrefixes()) {_					String prefix = ":" + urlPrefix + ":"__					if (driver != UNKNOWN && urlWithoutPrefix.startsWith(prefix)) {_						return driver__					}_				}_			}_		}_		return UNKNOWN__	};find,a,link,database,driver,for,the,given,url,param,url,the,jdbc,url,return,the,database,driver,or,link,unknown,if,not,found;public,static,database,driver,from,jdbc,url,string,url,if,string,utils,has,length,url,assert,is,true,url,starts,with,jdbc,url,must,start,with,jdbc,string,url,without,prefix,url,substring,jdbc,length,to,lower,case,locale,english,for,database,driver,driver,values,for,string,url,prefix,driver,get,url,prefixes,string,prefix,url,prefix,if,driver,unknown,url,without,prefix,starts,with,prefix,return,driver,return,unknown
DatabaseDriver -> public static DatabaseDriver fromJdbcUrl(String url);1540411238;Find a {@link DatabaseDriver} for the given URL._@param url the JDBC URL_@return the database driver or {@link #UNKNOWN} if not found;public static DatabaseDriver fromJdbcUrl(String url) {_		if (StringUtils.hasLength(url)) {_			Assert.isTrue(url.startsWith("jdbc"), "URL must start with 'jdbc'")__			String urlWithoutPrefix = url.substring("jdbc".length())_					.toLowerCase(Locale.ENGLISH)__			for (DatabaseDriver driver : values()) {_				for (String urlPrefix : driver.getUrlPrefixes()) {_					String prefix = ":" + urlPrefix + ":"__					if (driver != UNKNOWN && urlWithoutPrefix.startsWith(prefix)) {_						return driver__					}_				}_			}_		}_		return UNKNOWN__	};find,a,link,database,driver,for,the,given,url,param,url,the,jdbc,url,return,the,database,driver,or,link,unknown,if,not,found;public,static,database,driver,from,jdbc,url,string,url,if,string,utils,has,length,url,assert,is,true,url,starts,with,jdbc,url,must,start,with,jdbc,string,url,without,prefix,url,substring,jdbc,length,to,lower,case,locale,english,for,database,driver,driver,values,for,string,url,prefix,driver,get,url,prefixes,string,prefix,url,prefix,if,driver,unknown,url,without,prefix,starts,with,prefix,return,driver,return,unknown
DatabaseDriver -> public static DatabaseDriver fromJdbcUrl(String url);1541869098;Find a {@link DatabaseDriver} for the given URL._@param url the JDBC URL_@return the database driver or {@link #UNKNOWN} if not found;public static DatabaseDriver fromJdbcUrl(String url) {_		if (StringUtils.hasLength(url)) {_			Assert.isTrue(url.startsWith("jdbc"), "URL must start with 'jdbc'")__			String urlWithoutPrefix = url.substring("jdbc".length())_					.toLowerCase(Locale.ENGLISH)__			for (DatabaseDriver driver : values()) {_				for (String urlPrefix : driver.getUrlPrefixes()) {_					String prefix = ":" + urlPrefix + ":"__					if (driver != UNKNOWN && urlWithoutPrefix.startsWith(prefix)) {_						return driver__					}_				}_			}_		}_		return UNKNOWN__	};find,a,link,database,driver,for,the,given,url,param,url,the,jdbc,url,return,the,database,driver,or,link,unknown,if,not,found;public,static,database,driver,from,jdbc,url,string,url,if,string,utils,has,length,url,assert,is,true,url,starts,with,jdbc,url,must,start,with,jdbc,string,url,without,prefix,url,substring,jdbc,length,to,lower,case,locale,english,for,database,driver,driver,values,for,string,url,prefix,driver,get,url,prefixes,string,prefix,url,prefix,if,driver,unknown,url,without,prefix,starts,with,prefix,return,driver,return,unknown
DatabaseDriver -> public static DatabaseDriver fromJdbcUrl(String url);1549964207;Find a {@link DatabaseDriver} for the given URL._@param url the JDBC URL_@return the database driver or {@link #UNKNOWN} if not found;public static DatabaseDriver fromJdbcUrl(String url) {_		if (StringUtils.hasLength(url)) {_			Assert.isTrue(url.startsWith("jdbc"), "URL must start with 'jdbc'")__			String urlWithoutPrefix = url.substring("jdbc".length())_					.toLowerCase(Locale.ENGLISH)__			for (DatabaseDriver driver : values()) {_				for (String urlPrefix : driver.getUrlPrefixes()) {_					String prefix = ":" + urlPrefix + ":"__					if (driver != UNKNOWN && urlWithoutPrefix.startsWith(prefix)) {_						return driver__					}_				}_			}_		}_		return UNKNOWN__	};find,a,link,database,driver,for,the,given,url,param,url,the,jdbc,url,return,the,database,driver,or,link,unknown,if,not,found;public,static,database,driver,from,jdbc,url,string,url,if,string,utils,has,length,url,assert,is,true,url,starts,with,jdbc,url,must,start,with,jdbc,string,url,without,prefix,url,substring,jdbc,length,to,lower,case,locale,english,for,database,driver,driver,values,for,string,url,prefix,driver,get,url,prefixes,string,prefix,url,prefix,if,driver,unknown,url,without,prefix,starts,with,prefix,return,driver,return,unknown
DatabaseDriver -> public String getXaDataSourceClassName();1507173536;Return the XA driver source class name._@return the class name or {@code null};public String getXaDataSourceClassName() {_		return this.xaDataSourceClassName__	};return,the,xa,driver,source,class,name,return,the,class,name,or,code,null;public,string,get,xa,data,source,class,name,return,this,xa,data,source,class,name
DatabaseDriver -> public String getXaDataSourceClassName();1517345250;Return the XA driver source class name._@return the class name or {@code null};public String getXaDataSourceClassName() {_		return this.xaDataSourceClassName__	};return,the,xa,driver,source,class,name,return,the,class,name,or,code,null;public,string,get,xa,data,source,class,name,return,this,xa,data,source,class,name
DatabaseDriver -> public String getXaDataSourceClassName();1518271576;Return the XA driver source class name._@return the class name or {@code null};public String getXaDataSourceClassName() {_		return this.xaDataSourceClassName__	};return,the,xa,driver,source,class,name,return,the,class,name,or,code,null;public,string,get,xa,data,source,class,name,return,this,xa,data,source,class,name
DatabaseDriver -> public String getXaDataSourceClassName();1519664612;Return the XA driver source class name._@return the class name or {@code null};public String getXaDataSourceClassName() {_		return this.xaDataSourceClassName__	};return,the,xa,driver,source,class,name,return,the,class,name,or,code,null;public,string,get,xa,data,source,class,name,return,this,xa,data,source,class,name
DatabaseDriver -> public String getXaDataSourceClassName();1530644695;Return the XA driver source class name._@return the class name or {@code null};public String getXaDataSourceClassName() {_		return this.xaDataSourceClassName__	};return,the,xa,driver,source,class,name,return,the,class,name,or,code,null;public,string,get,xa,data,source,class,name,return,this,xa,data,source,class,name
DatabaseDriver -> public String getXaDataSourceClassName();1532738143;Return the XA driver source class name._@return the class name or {@code null};public String getXaDataSourceClassName() {_		return this.xaDataSourceClassName__	};return,the,xa,driver,source,class,name,return,the,class,name,or,code,null;public,string,get,xa,data,source,class,name,return,this,xa,data,source,class,name
DatabaseDriver -> public String getXaDataSourceClassName();1537437813;Return the XA driver source class name._@return the class name or {@code null};public String getXaDataSourceClassName() {_		return this.xaDataSourceClassName__	};return,the,xa,driver,source,class,name,return,the,class,name,or,code,null;public,string,get,xa,data,source,class,name,return,this,xa,data,source,class,name
DatabaseDriver -> public String getXaDataSourceClassName();1538568021;Return the XA driver source class name._@return the class name or {@code null};public String getXaDataSourceClassName() {_		return this.xaDataSourceClassName__	};return,the,xa,driver,source,class,name,return,the,class,name,or,code,null;public,string,get,xa,data,source,class,name,return,this,xa,data,source,class,name
DatabaseDriver -> public String getXaDataSourceClassName();1540411238;Return the XA driver source class name._@return the class name or {@code null};public String getXaDataSourceClassName() {_		return this.xaDataSourceClassName__	};return,the,xa,driver,source,class,name,return,the,class,name,or,code,null;public,string,get,xa,data,source,class,name,return,this,xa,data,source,class,name
DatabaseDriver -> public String getXaDataSourceClassName();1541869098;Return the XA driver source class name._@return the class name or {@code null};public String getXaDataSourceClassName() {_		return this.xaDataSourceClassName__	};return,the,xa,driver,source,class,name,return,the,class,name,or,code,null;public,string,get,xa,data,source,class,name,return,this,xa,data,source,class,name
DatabaseDriver -> public String getXaDataSourceClassName();1549964207;Return the XA driver source class name._@return the class name or {@code null};public String getXaDataSourceClassName() {_		return this.xaDataSourceClassName__	};return,the,xa,driver,source,class,name,return,the,class,name,or,code,null;public,string,get,xa,data,source,class,name,return,this,xa,data,source,class,name
DatabaseDriver -> public static DatabaseDriver fromProductName(String productName);1507173536;Find a {@link DatabaseDriver} for the given product name._@param productName product name_@return the database driver or {@link #UNKNOWN} if not found;public static DatabaseDriver fromProductName(String productName) {_		if (StringUtils.hasLength(productName)) {_			for (DatabaseDriver candidate : values()) {_				if (candidate.matchProductName(productName)) {_					return candidate__				}_			}_		}_		return UNKNOWN__	};find,a,link,database,driver,for,the,given,product,name,param,product,name,product,name,return,the,database,driver,or,link,unknown,if,not,found;public,static,database,driver,from,product,name,string,product,name,if,string,utils,has,length,product,name,for,database,driver,candidate,values,if,candidate,match,product,name,product,name,return,candidate,return,unknown
DatabaseDriver -> public static DatabaseDriver fromProductName(String productName);1517345250;Find a {@link DatabaseDriver} for the given product name._@param productName product name_@return the database driver or {@link #UNKNOWN} if not found;public static DatabaseDriver fromProductName(String productName) {_		if (StringUtils.hasLength(productName)) {_			for (DatabaseDriver candidate : values()) {_				if (candidate.matchProductName(productName)) {_					return candidate__				}_			}_		}_		return UNKNOWN__	};find,a,link,database,driver,for,the,given,product,name,param,product,name,product,name,return,the,database,driver,or,link,unknown,if,not,found;public,static,database,driver,from,product,name,string,product,name,if,string,utils,has,length,product,name,for,database,driver,candidate,values,if,candidate,match,product,name,product,name,return,candidate,return,unknown
DatabaseDriver -> public static DatabaseDriver fromProductName(String productName);1518271576;Find a {@link DatabaseDriver} for the given product name._@param productName product name_@return the database driver or {@link #UNKNOWN} if not found;public static DatabaseDriver fromProductName(String productName) {_		if (StringUtils.hasLength(productName)) {_			for (DatabaseDriver candidate : values()) {_				if (candidate.matchProductName(productName)) {_					return candidate__				}_			}_		}_		return UNKNOWN__	};find,a,link,database,driver,for,the,given,product,name,param,product,name,product,name,return,the,database,driver,or,link,unknown,if,not,found;public,static,database,driver,from,product,name,string,product,name,if,string,utils,has,length,product,name,for,database,driver,candidate,values,if,candidate,match,product,name,product,name,return,candidate,return,unknown
DatabaseDriver -> public static DatabaseDriver fromProductName(String productName);1519664612;Find a {@link DatabaseDriver} for the given product name._@param productName product name_@return the database driver or {@link #UNKNOWN} if not found;public static DatabaseDriver fromProductName(String productName) {_		if (StringUtils.hasLength(productName)) {_			for (DatabaseDriver candidate : values()) {_				if (candidate.matchProductName(productName)) {_					return candidate__				}_			}_		}_		return UNKNOWN__	};find,a,link,database,driver,for,the,given,product,name,param,product,name,product,name,return,the,database,driver,or,link,unknown,if,not,found;public,static,database,driver,from,product,name,string,product,name,if,string,utils,has,length,product,name,for,database,driver,candidate,values,if,candidate,match,product,name,product,name,return,candidate,return,unknown
DatabaseDriver -> public static DatabaseDriver fromProductName(String productName);1530644695;Find a {@link DatabaseDriver} for the given product name._@param productName product name_@return the database driver or {@link #UNKNOWN} if not found;public static DatabaseDriver fromProductName(String productName) {_		if (StringUtils.hasLength(productName)) {_			for (DatabaseDriver candidate : values()) {_				if (candidate.matchProductName(productName)) {_					return candidate__				}_			}_		}_		return UNKNOWN__	};find,a,link,database,driver,for,the,given,product,name,param,product,name,product,name,return,the,database,driver,or,link,unknown,if,not,found;public,static,database,driver,from,product,name,string,product,name,if,string,utils,has,length,product,name,for,database,driver,candidate,values,if,candidate,match,product,name,product,name,return,candidate,return,unknown
DatabaseDriver -> public static DatabaseDriver fromProductName(String productName);1532738143;Find a {@link DatabaseDriver} for the given product name._@param productName product name_@return the database driver or {@link #UNKNOWN} if not found;public static DatabaseDriver fromProductName(String productName) {_		if (StringUtils.hasLength(productName)) {_			for (DatabaseDriver candidate : values()) {_				if (candidate.matchProductName(productName)) {_					return candidate__				}_			}_		}_		return UNKNOWN__	};find,a,link,database,driver,for,the,given,product,name,param,product,name,product,name,return,the,database,driver,or,link,unknown,if,not,found;public,static,database,driver,from,product,name,string,product,name,if,string,utils,has,length,product,name,for,database,driver,candidate,values,if,candidate,match,product,name,product,name,return,candidate,return,unknown
DatabaseDriver -> public static DatabaseDriver fromProductName(String productName);1537437813;Find a {@link DatabaseDriver} for the given product name._@param productName product name_@return the database driver or {@link #UNKNOWN} if not found;public static DatabaseDriver fromProductName(String productName) {_		if (StringUtils.hasLength(productName)) {_			for (DatabaseDriver candidate : values()) {_				if (candidate.matchProductName(productName)) {_					return candidate__				}_			}_		}_		return UNKNOWN__	};find,a,link,database,driver,for,the,given,product,name,param,product,name,product,name,return,the,database,driver,or,link,unknown,if,not,found;public,static,database,driver,from,product,name,string,product,name,if,string,utils,has,length,product,name,for,database,driver,candidate,values,if,candidate,match,product,name,product,name,return,candidate,return,unknown
DatabaseDriver -> public static DatabaseDriver fromProductName(String productName);1538568021;Find a {@link DatabaseDriver} for the given product name._@param productName product name_@return the database driver or {@link #UNKNOWN} if not found;public static DatabaseDriver fromProductName(String productName) {_		if (StringUtils.hasLength(productName)) {_			for (DatabaseDriver candidate : values()) {_				if (candidate.matchProductName(productName)) {_					return candidate__				}_			}_		}_		return UNKNOWN__	};find,a,link,database,driver,for,the,given,product,name,param,product,name,product,name,return,the,database,driver,or,link,unknown,if,not,found;public,static,database,driver,from,product,name,string,product,name,if,string,utils,has,length,product,name,for,database,driver,candidate,values,if,candidate,match,product,name,product,name,return,candidate,return,unknown
DatabaseDriver -> public static DatabaseDriver fromProductName(String productName);1540411238;Find a {@link DatabaseDriver} for the given product name._@param productName product name_@return the database driver or {@link #UNKNOWN} if not found;public static DatabaseDriver fromProductName(String productName) {_		if (StringUtils.hasLength(productName)) {_			for (DatabaseDriver candidate : values()) {_				if (candidate.matchProductName(productName)) {_					return candidate__				}_			}_		}_		return UNKNOWN__	};find,a,link,database,driver,for,the,given,product,name,param,product,name,product,name,return,the,database,driver,or,link,unknown,if,not,found;public,static,database,driver,from,product,name,string,product,name,if,string,utils,has,length,product,name,for,database,driver,candidate,values,if,candidate,match,product,name,product,name,return,candidate,return,unknown
DatabaseDriver -> public static DatabaseDriver fromProductName(String productName);1541869098;Find a {@link DatabaseDriver} for the given product name._@param productName product name_@return the database driver or {@link #UNKNOWN} if not found;public static DatabaseDriver fromProductName(String productName) {_		if (StringUtils.hasLength(productName)) {_			for (DatabaseDriver candidate : values()) {_				if (candidate.matchProductName(productName)) {_					return candidate__				}_			}_		}_		return UNKNOWN__	};find,a,link,database,driver,for,the,given,product,name,param,product,name,product,name,return,the,database,driver,or,link,unknown,if,not,found;public,static,database,driver,from,product,name,string,product,name,if,string,utils,has,length,product,name,for,database,driver,candidate,values,if,candidate,match,product,name,product,name,return,candidate,return,unknown
DatabaseDriver -> public static DatabaseDriver fromProductName(String productName);1549964207;Find a {@link DatabaseDriver} for the given product name._@param productName product name_@return the database driver or {@link #UNKNOWN} if not found;public static DatabaseDriver fromProductName(String productName) {_		if (StringUtils.hasLength(productName)) {_			for (DatabaseDriver candidate : values()) {_				if (candidate.matchProductName(productName)) {_					return candidate__				}_			}_		}_		return UNKNOWN__	};find,a,link,database,driver,for,the,given,product,name,param,product,name,product,name,return,the,database,driver,or,link,unknown,if,not,found;public,static,database,driver,from,product,name,string,product,name,if,string,utils,has,length,product,name,for,database,driver,candidate,values,if,candidate,match,product,name,product,name,return,candidate,return,unknown
DatabaseDriver -> public String getDriverClassName();1507173536;Return the driver class name._@return the class name or {@code null};public String getDriverClassName() {_		return this.driverClassName__	};return,the,driver,class,name,return,the,class,name,or,code,null;public,string,get,driver,class,name,return,this,driver,class,name
DatabaseDriver -> public String getDriverClassName();1517345250;Return the driver class name._@return the class name or {@code null};public String getDriverClassName() {_		return this.driverClassName__	};return,the,driver,class,name,return,the,class,name,or,code,null;public,string,get,driver,class,name,return,this,driver,class,name
DatabaseDriver -> public String getDriverClassName();1518271576;Return the driver class name._@return the class name or {@code null};public String getDriverClassName() {_		return this.driverClassName__	};return,the,driver,class,name,return,the,class,name,or,code,null;public,string,get,driver,class,name,return,this,driver,class,name
DatabaseDriver -> public String getDriverClassName();1519664612;Return the driver class name._@return the class name or {@code null};public String getDriverClassName() {_		return this.driverClassName__	};return,the,driver,class,name,return,the,class,name,or,code,null;public,string,get,driver,class,name,return,this,driver,class,name
DatabaseDriver -> public String getDriverClassName();1530644695;Return the driver class name._@return the class name or {@code null};public String getDriverClassName() {_		return this.driverClassName__	};return,the,driver,class,name,return,the,class,name,or,code,null;public,string,get,driver,class,name,return,this,driver,class,name
DatabaseDriver -> public String getDriverClassName();1532738143;Return the driver class name._@return the class name or {@code null};public String getDriverClassName() {_		return this.driverClassName__	};return,the,driver,class,name,return,the,class,name,or,code,null;public,string,get,driver,class,name,return,this,driver,class,name
DatabaseDriver -> public String getDriverClassName();1537437813;Return the driver class name._@return the class name or {@code null};public String getDriverClassName() {_		return this.driverClassName__	};return,the,driver,class,name,return,the,class,name,or,code,null;public,string,get,driver,class,name,return,this,driver,class,name
DatabaseDriver -> public String getDriverClassName();1538568021;Return the driver class name._@return the class name or {@code null};public String getDriverClassName() {_		return this.driverClassName__	};return,the,driver,class,name,return,the,class,name,or,code,null;public,string,get,driver,class,name,return,this,driver,class,name
DatabaseDriver -> public String getDriverClassName();1540411238;Return the driver class name._@return the class name or {@code null};public String getDriverClassName() {_		return this.driverClassName__	};return,the,driver,class,name,return,the,class,name,or,code,null;public,string,get,driver,class,name,return,this,driver,class,name
DatabaseDriver -> public String getDriverClassName();1541869098;Return the driver class name._@return the class name or {@code null};public String getDriverClassName() {_		return this.driverClassName__	};return,the,driver,class,name,return,the,class,name,or,code,null;public,string,get,driver,class,name,return,this,driver,class,name
DatabaseDriver -> public String getDriverClassName();1549964207;Return the driver class name._@return the class name or {@code null};public String getDriverClassName() {_		return this.driverClassName__	};return,the,driver,class,name,return,the,class,name,or,code,null;public,string,get,driver,class,name,return,this,driver,class,name
