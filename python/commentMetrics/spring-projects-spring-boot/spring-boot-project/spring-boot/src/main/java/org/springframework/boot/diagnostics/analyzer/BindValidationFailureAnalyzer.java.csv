commented;modifiers;parameterAmount;loc;comment;code
false;protected;2;8;;@Override protected FailureAnalysis analyze(Throwable rootFailure, Throwable cause) {     ExceptionDetails details = getBindValidationExceptionDetails(rootFailure).     if (details == null) {         return null.     }     return analyzeBindValidationException(details). }
false;private;1;17;;private ExceptionDetails getBindValidationExceptionDetails(Throwable rootFailure) {     BindValidationException validationException = findCause(rootFailure, BindValidationException.class).     if (validationException != null) {         BindException target = findCause(rootFailure, BindException.class).         List<ObjectError> errors = validationException.getValidationErrors().getAllErrors().         return new ExceptionDetails(errors, target, validationException).     }     org.springframework.validation.BindException bindException = findCause(rootFailure, org.springframework.validation.BindException.class).     if (bindException != null) {         List<ObjectError> errors = bindException.getAllErrors().         return new ExceptionDetails(errors, bindException.getTarget(), bindException).     }     return null. }
false;private;1;12;;private FailureAnalysis analyzeBindValidationException(ExceptionDetails details) {     StringBuilder description = new StringBuilder(String.format("Binding to target %s failed:%n", details.getTarget())).     for (ObjectError error : details.getErrors()) {         if (error instanceof FieldError) {             appendFieldError(description, (FieldError) error).         }         description.append(String.format("%n    Reason: %s%n", error.getDefaultMessage())).     }     return getFailureAnalysis(description, details.getCause()). }
false;private;2;9;;private void appendFieldError(StringBuilder description, FieldError error) {     Origin origin = Origin.from(error).     description.append(String.format("%n    Property: %s", error.getObjectName() + "." + error.getField())).     description.append(String.format("%n    Value: %s", error.getRejectedValue())).     if (origin != null) {         description.append(String.format("%n    Origin: %s", origin)).     } }
false;private;2;4;;private FailureAnalysis getFailureAnalysis(Object description, Throwable cause) {     return new FailureAnalysis(description.toString(), "Update your application's configuration", cause). }
false;public;0;3;;public Object getTarget() {     return this.target. }
false;public;0;3;;public List<ObjectError> getErrors() {     return this.errors. }
false;public;0;3;;public Throwable getCause() {     return this.cause. }
