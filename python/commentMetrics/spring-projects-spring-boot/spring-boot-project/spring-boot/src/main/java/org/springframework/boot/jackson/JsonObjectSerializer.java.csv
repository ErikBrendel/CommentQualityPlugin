commented;modifiers;parameterAmount;loc;comment;code
false;public,final;3;15;;@Override public final void serialize(T value, JsonGenerator jgen, SerializerProvider provider) throws IOException {     try {         jgen.writeStartObject().         serializeObject(value, jgen, provider).         jgen.writeEndObject().     } catch (Exception ex) {         if (ex instanceof IOException) {             throw (IOException) ex.         }         throw new JsonMappingException(jgen, "Object serialize error", ex).     } }
true;protected,abstract;3;2;/**  * Serialize JSON content into the value type this serializer handles.  * @param value the source value  * @param jgen the JSON generator  * @param provider the serializer provider  * @throws IOException on error  */ ;/**  * Serialize JSON content into the value type this serializer handles.  * @param value the source value  * @param jgen the JSON generator  * @param provider the serializer provider  * @throws IOException on error  */ protected abstract void serializeObject(T value, JsonGenerator jgen, SerializerProvider provider) throws IOException.
