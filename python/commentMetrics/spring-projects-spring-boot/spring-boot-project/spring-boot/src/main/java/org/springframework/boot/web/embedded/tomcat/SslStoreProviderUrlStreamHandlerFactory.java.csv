commented;modifiers;parameterAmount;loc;comment;code
false;protected;1;19;;@Override protected URLConnection openConnection(URL url) throws IOException {     try {         if (KEY_STORE_PATH.equals(url.getPath())) {             return new KeyStoreUrlConnection(url, SslStoreProviderUrlStreamHandlerFactory.this.sslStoreProvider.getKeyStore()).         }         if (TRUST_STORE_PATH.equals(url.getPath())) {             return new KeyStoreUrlConnection(url, SslStoreProviderUrlStreamHandlerFactory.this.sslStoreProvider.getTrustStore()).         }     } catch (Exception ex) {         throw new IOException(ex).     }     throw new IOException("Invalid path: " + url.getPath()). }
false;public;1;28;;@Override public URLStreamHandler createURLStreamHandler(String protocol) {     if (PROTOCOL.equals(protocol)) {         return new URLStreamHandler() {              @Override             protected URLConnection openConnection(URL url) throws IOException {                 try {                     if (KEY_STORE_PATH.equals(url.getPath())) {                         return new KeyStoreUrlConnection(url, SslStoreProviderUrlStreamHandlerFactory.this.sslStoreProvider.getKeyStore()).                     }                     if (TRUST_STORE_PATH.equals(url.getPath())) {                         return new KeyStoreUrlConnection(url, SslStoreProviderUrlStreamHandlerFactory.this.sslStoreProvider.getTrustStore()).                     }                 } catch (Exception ex) {                     throw new IOException(ex).                 }                 throw new IOException("Invalid path: " + url.getPath()).             }         }.     }     return null. }
false;public;0;4;;@Override public void connect() throws IOException { }
false;public;0;12;;@Override public InputStream getInputStream() throws IOException {     try {         ByteArrayOutputStream stream = new ByteArrayOutputStream().         this.keyStore.store(stream, new char[0]).         return new ByteArrayInputStream(stream.toByteArray()).     } catch (Exception ex) {         throw new IOException(ex).     } }
