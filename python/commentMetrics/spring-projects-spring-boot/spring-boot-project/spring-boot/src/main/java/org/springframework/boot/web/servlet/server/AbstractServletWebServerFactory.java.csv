# id;timestamp;commentText;codeText;commentWords;codeWords
AbstractServletWebServerFactory -> public AbstractServletWebServerFactory();1507173536;Create a new {@link AbstractServletWebServerFactory} instance.;public AbstractServletWebServerFactory() {_	};create,a,new,link,abstract,servlet,web,server,factory,instance;public,abstract,servlet,web,server,factory
AbstractServletWebServerFactory -> public AbstractServletWebServerFactory();1511157177;Create a new {@link AbstractServletWebServerFactory} instance.;public AbstractServletWebServerFactory() {_	};create,a,new,link,abstract,servlet,web,server,factory,instance;public,abstract,servlet,web,server,factory
AbstractServletWebServerFactory -> public AbstractServletWebServerFactory();1516210343;Create a new {@link AbstractServletWebServerFactory} instance.;public AbstractServletWebServerFactory() {_	};create,a,new,link,abstract,servlet,web,server,factory,instance;public,abstract,servlet,web,server,factory
AbstractServletWebServerFactory -> public AbstractServletWebServerFactory();1519362690;Create a new {@link AbstractServletWebServerFactory} instance.;public AbstractServletWebServerFactory() {_	};create,a,new,link,abstract,servlet,web,server,factory,instance;public,abstract,servlet,web,server,factory
AbstractServletWebServerFactory -> public AbstractServletWebServerFactory();1519817048;Create a new {@link AbstractServletWebServerFactory} instance.;public AbstractServletWebServerFactory() {_	};create,a,new,link,abstract,servlet,web,server,factory,instance;public,abstract,servlet,web,server,factory
AbstractServletWebServerFactory -> public AbstractServletWebServerFactory();1525255067;Create a new {@link AbstractServletWebServerFactory} instance.;public AbstractServletWebServerFactory() {_	};create,a,new,link,abstract,servlet,web,server,factory,instance;public,abstract,servlet,web,server,factory
AbstractServletWebServerFactory -> public AbstractServletWebServerFactory();1525476706;Create a new {@link AbstractServletWebServerFactory} instance.;public AbstractServletWebServerFactory() {_	};create,a,new,link,abstract,servlet,web,server,factory,instance;public,abstract,servlet,web,server,factory
AbstractServletWebServerFactory -> public AbstractServletWebServerFactory();1526993305;Create a new {@link AbstractServletWebServerFactory} instance.;public AbstractServletWebServerFactory() {_	};create,a,new,link,abstract,servlet,web,server,factory,instance;public,abstract,servlet,web,server,factory
AbstractServletWebServerFactory -> public AbstractServletWebServerFactory(int port);1507173536;Create a new {@link AbstractServletWebServerFactory} instance with the specified_port._@param port the port number for the web server;public AbstractServletWebServerFactory(int port) {_		super(port)__	};create,a,new,link,abstract,servlet,web,server,factory,instance,with,the,specified,port,param,port,the,port,number,for,the,web,server;public,abstract,servlet,web,server,factory,int,port,super,port
AbstractServletWebServerFactory -> public AbstractServletWebServerFactory(int port);1511157177;Create a new {@link AbstractServletWebServerFactory} instance with the specified_port._@param port the port number for the web server;public AbstractServletWebServerFactory(int port) {_		super(port)__	};create,a,new,link,abstract,servlet,web,server,factory,instance,with,the,specified,port,param,port,the,port,number,for,the,web,server;public,abstract,servlet,web,server,factory,int,port,super,port
AbstractServletWebServerFactory -> public AbstractServletWebServerFactory(int port);1516210343;Create a new {@link AbstractServletWebServerFactory} instance with the specified_port._@param port the port number for the web server;public AbstractServletWebServerFactory(int port) {_		super(port)__	};create,a,new,link,abstract,servlet,web,server,factory,instance,with,the,specified,port,param,port,the,port,number,for,the,web,server;public,abstract,servlet,web,server,factory,int,port,super,port
AbstractServletWebServerFactory -> public AbstractServletWebServerFactory(int port);1519362690;Create a new {@link AbstractServletWebServerFactory} instance with the specified_port._@param port the port number for the web server;public AbstractServletWebServerFactory(int port) {_		super(port)__	};create,a,new,link,abstract,servlet,web,server,factory,instance,with,the,specified,port,param,port,the,port,number,for,the,web,server;public,abstract,servlet,web,server,factory,int,port,super,port
AbstractServletWebServerFactory -> public AbstractServletWebServerFactory(int port);1519817048;Create a new {@link AbstractServletWebServerFactory} instance with the specified_port._@param port the port number for the web server;public AbstractServletWebServerFactory(int port) {_		super(port)__	};create,a,new,link,abstract,servlet,web,server,factory,instance,with,the,specified,port,param,port,the,port,number,for,the,web,server;public,abstract,servlet,web,server,factory,int,port,super,port
AbstractServletWebServerFactory -> public AbstractServletWebServerFactory(int port);1525255067;Create a new {@link AbstractServletWebServerFactory} instance with the specified_port._@param port the port number for the web server;public AbstractServletWebServerFactory(int port) {_		super(port)__	};create,a,new,link,abstract,servlet,web,server,factory,instance,with,the,specified,port,param,port,the,port,number,for,the,web,server;public,abstract,servlet,web,server,factory,int,port,super,port
AbstractServletWebServerFactory -> public AbstractServletWebServerFactory(int port);1525476706;Create a new {@link AbstractServletWebServerFactory} instance with the specified_port._@param port the port number for the web server;public AbstractServletWebServerFactory(int port) {_		super(port)__	};create,a,new,link,abstract,servlet,web,server,factory,instance,with,the,specified,port,param,port,the,port,number,for,the,web,server;public,abstract,servlet,web,server,factory,int,port,super,port
AbstractServletWebServerFactory -> public AbstractServletWebServerFactory(int port);1526993305;Create a new {@link AbstractServletWebServerFactory} instance with the specified_port._@param port the port number for the web server;public AbstractServletWebServerFactory(int port) {_		super(port)__	};create,a,new,link,abstract,servlet,web,server,factory,instance,with,the,specified,port,param,port,the,port,number,for,the,web,server;public,abstract,servlet,web,server,factory,int,port,super,port
AbstractServletWebServerFactory -> protected final ServletContextInitializer[] mergeInitializers( 			ServletContextInitializer... initializers);1507173536;Utility method that can be used by subclasses wishing to combine the specified_{@link ServletContextInitializer} parameters with those defined in this instance._@param initializers the initializers to merge_@return a complete set of merged initializers (with the specified parameters_appearing first);protected final ServletContextInitializer[] mergeInitializers(_			ServletContextInitializer... initializers) {_		List<ServletContextInitializer> mergedInitializers = new ArrayList<>()__		mergedInitializers.addAll(Arrays.asList(initializers))__		mergedInitializers.addAll(this.initializers)__		return mergedInitializers_				.toArray(new ServletContextInitializer[mergedInitializers.size()])__	};utility,method,that,can,be,used,by,subclasses,wishing,to,combine,the,specified,link,servlet,context,initializer,parameters,with,those,defined,in,this,instance,param,initializers,the,initializers,to,merge,return,a,complete,set,of,merged,initializers,with,the,specified,parameters,appearing,first;protected,final,servlet,context,initializer,merge,initializers,servlet,context,initializer,initializers,list,servlet,context,initializer,merged,initializers,new,array,list,merged,initializers,add,all,arrays,as,list,initializers,merged,initializers,add,all,this,initializers,return,merged,initializers,to,array,new,servlet,context,initializer,merged,initializers,size
AbstractServletWebServerFactory -> protected final ServletContextInitializer[] mergeInitializers( 			ServletContextInitializer... initializers);1511157177;Utility method that can be used by subclasses wishing to combine the specified_{@link ServletContextInitializer} parameters with those defined in this instance._@param initializers the initializers to merge_@return a complete set of merged initializers (with the specified parameters_appearing first);protected final ServletContextInitializer[] mergeInitializers(_			ServletContextInitializer... initializers) {_		List<ServletContextInitializer> mergedInitializers = new ArrayList<>()__		mergedInitializers.addAll(Arrays.asList(initializers))__		mergedInitializers.addAll(this.initializers)__		return mergedInitializers_				.toArray(new ServletContextInitializer[mergedInitializers.size()])__	};utility,method,that,can,be,used,by,subclasses,wishing,to,combine,the,specified,link,servlet,context,initializer,parameters,with,those,defined,in,this,instance,param,initializers,the,initializers,to,merge,return,a,complete,set,of,merged,initializers,with,the,specified,parameters,appearing,first;protected,final,servlet,context,initializer,merge,initializers,servlet,context,initializer,initializers,list,servlet,context,initializer,merged,initializers,new,array,list,merged,initializers,add,all,arrays,as,list,initializers,merged,initializers,add,all,this,initializers,return,merged,initializers,to,array,new,servlet,context,initializer,merged,initializers,size
AbstractServletWebServerFactory -> protected final ServletContextInitializer[] mergeInitializers( 			ServletContextInitializer... initializers);1516210343;Utility method that can be used by subclasses wishing to combine the specified_{@link ServletContextInitializer} parameters with those defined in this instance._@param initializers the initializers to merge_@return a complete set of merged initializers (with the specified parameters_appearing first);protected final ServletContextInitializer[] mergeInitializers(_			ServletContextInitializer... initializers) {_		List<ServletContextInitializer> mergedInitializers = new ArrayList<>()__		mergedInitializers.add((servletContext) -> this.initParameters_				.forEach(servletContext::setInitParameter))__		mergedInitializers.add(new SessionConfiguringInitializer(this.session))__		mergedInitializers.addAll(Arrays.asList(initializers))__		mergedInitializers.addAll(this.initializers)__		return mergedInitializers_				.toArray(new ServletContextInitializer[mergedInitializers.size()])__	};utility,method,that,can,be,used,by,subclasses,wishing,to,combine,the,specified,link,servlet,context,initializer,parameters,with,those,defined,in,this,instance,param,initializers,the,initializers,to,merge,return,a,complete,set,of,merged,initializers,with,the,specified,parameters,appearing,first;protected,final,servlet,context,initializer,merge,initializers,servlet,context,initializer,initializers,list,servlet,context,initializer,merged,initializers,new,array,list,merged,initializers,add,servlet,context,this,init,parameters,for,each,servlet,context,set,init,parameter,merged,initializers,add,new,session,configuring,initializer,this,session,merged,initializers,add,all,arrays,as,list,initializers,merged,initializers,add,all,this,initializers,return,merged,initializers,to,array,new,servlet,context,initializer,merged,initializers,size
AbstractServletWebServerFactory -> protected final ServletContextInitializer[] mergeInitializers( 			ServletContextInitializer... initializers);1519362690;Utility method that can be used by subclasses wishing to combine the specified_{@link ServletContextInitializer} parameters with those defined in this instance._@param initializers the initializers to merge_@return a complete set of merged initializers (with the specified parameters_appearing first);protected final ServletContextInitializer[] mergeInitializers(_			ServletContextInitializer... initializers) {_		List<ServletContextInitializer> mergedInitializers = new ArrayList<>()__		mergedInitializers.add((servletContext) -> this.initParameters_				.forEach(servletContext::setInitParameter))__		mergedInitializers.add(new SessionConfiguringInitializer(this.session))__		mergedInitializers.addAll(Arrays.asList(initializers))__		mergedInitializers.addAll(this.initializers)__		return mergedInitializers.toArray(new ServletContextInitializer[0])__	};utility,method,that,can,be,used,by,subclasses,wishing,to,combine,the,specified,link,servlet,context,initializer,parameters,with,those,defined,in,this,instance,param,initializers,the,initializers,to,merge,return,a,complete,set,of,merged,initializers,with,the,specified,parameters,appearing,first;protected,final,servlet,context,initializer,merge,initializers,servlet,context,initializer,initializers,list,servlet,context,initializer,merged,initializers,new,array,list,merged,initializers,add,servlet,context,this,init,parameters,for,each,servlet,context,set,init,parameter,merged,initializers,add,new,session,configuring,initializer,this,session,merged,initializers,add,all,arrays,as,list,initializers,merged,initializers,add,all,this,initializers,return,merged,initializers,to,array,new,servlet,context,initializer,0
AbstractServletWebServerFactory -> protected final ServletContextInitializer[] mergeInitializers( 			ServletContextInitializer... initializers);1519817048;Utility method that can be used by subclasses wishing to combine the specified_{@link ServletContextInitializer} parameters with those defined in this instance._@param initializers the initializers to merge_@return a complete set of merged initializers (with the specified parameters_appearing first);protected final ServletContextInitializer[] mergeInitializers(_			ServletContextInitializer... initializers) {_		List<ServletContextInitializer> mergedInitializers = new ArrayList<>()__		mergedInitializers.add((servletContext) -> this.initParameters_				.forEach(servletContext::setInitParameter))__		mergedInitializers.add(new SessionConfiguringInitializer(this.session))__		mergedInitializers.addAll(Arrays.asList(initializers))__		mergedInitializers.addAll(this.initializers)__		return mergedInitializers.toArray(new ServletContextInitializer[0])__	};utility,method,that,can,be,used,by,subclasses,wishing,to,combine,the,specified,link,servlet,context,initializer,parameters,with,those,defined,in,this,instance,param,initializers,the,initializers,to,merge,return,a,complete,set,of,merged,initializers,with,the,specified,parameters,appearing,first;protected,final,servlet,context,initializer,merge,initializers,servlet,context,initializer,initializers,list,servlet,context,initializer,merged,initializers,new,array,list,merged,initializers,add,servlet,context,this,init,parameters,for,each,servlet,context,set,init,parameter,merged,initializers,add,new,session,configuring,initializer,this,session,merged,initializers,add,all,arrays,as,list,initializers,merged,initializers,add,all,this,initializers,return,merged,initializers,to,array,new,servlet,context,initializer,0
AbstractServletWebServerFactory -> protected final ServletContextInitializer[] mergeInitializers( 			ServletContextInitializer... initializers);1525255067;Utility method that can be used by subclasses wishing to combine the specified_{@link ServletContextInitializer} parameters with those defined in this instance._@param initializers the initializers to merge_@return a complete set of merged initializers (with the specified parameters_appearing first);protected final ServletContextInitializer[] mergeInitializers(_			ServletContextInitializer... initializers) {_		List<ServletContextInitializer> mergedInitializers = new ArrayList<>()__		mergedInitializers.add((servletContext) -> this.initParameters_				.forEach(servletContext::setInitParameter))__		mergedInitializers.add(new SessionConfiguringInitializer(this.session))__		mergedInitializers.addAll(Arrays.asList(initializers))__		mergedInitializers.addAll(this.initializers)__		return mergedInitializers.toArray(new ServletContextInitializer[0])__	};utility,method,that,can,be,used,by,subclasses,wishing,to,combine,the,specified,link,servlet,context,initializer,parameters,with,those,defined,in,this,instance,param,initializers,the,initializers,to,merge,return,a,complete,set,of,merged,initializers,with,the,specified,parameters,appearing,first;protected,final,servlet,context,initializer,merge,initializers,servlet,context,initializer,initializers,list,servlet,context,initializer,merged,initializers,new,array,list,merged,initializers,add,servlet,context,this,init,parameters,for,each,servlet,context,set,init,parameter,merged,initializers,add,new,session,configuring,initializer,this,session,merged,initializers,add,all,arrays,as,list,initializers,merged,initializers,add,all,this,initializers,return,merged,initializers,to,array,new,servlet,context,initializer,0
AbstractServletWebServerFactory -> protected final ServletContextInitializer[] mergeInitializers( 			ServletContextInitializer... initializers);1525476706;Utility method that can be used by subclasses wishing to combine the specified_{@link ServletContextInitializer} parameters with those defined in this instance._@param initializers the initializers to merge_@return a complete set of merged initializers (with the specified parameters_appearing first);protected final ServletContextInitializer[] mergeInitializers(_			ServletContextInitializer... initializers) {_		List<ServletContextInitializer> mergedInitializers = new ArrayList<>()__		mergedInitializers.add((servletContext) -> this.initParameters_				.forEach(servletContext::setInitParameter))__		mergedInitializers.add(new SessionConfiguringInitializer(this.session))__		mergedInitializers.addAll(Arrays.asList(initializers))__		mergedInitializers.addAll(this.initializers)__		return mergedInitializers.toArray(new ServletContextInitializer[0])__	};utility,method,that,can,be,used,by,subclasses,wishing,to,combine,the,specified,link,servlet,context,initializer,parameters,with,those,defined,in,this,instance,param,initializers,the,initializers,to,merge,return,a,complete,set,of,merged,initializers,with,the,specified,parameters,appearing,first;protected,final,servlet,context,initializer,merge,initializers,servlet,context,initializer,initializers,list,servlet,context,initializer,merged,initializers,new,array,list,merged,initializers,add,servlet,context,this,init,parameters,for,each,servlet,context,set,init,parameter,merged,initializers,add,new,session,configuring,initializer,this,session,merged,initializers,add,all,arrays,as,list,initializers,merged,initializers,add,all,this,initializers,return,merged,initializers,to,array,new,servlet,context,initializer,0
AbstractServletWebServerFactory -> protected final ServletContextInitializer[] mergeInitializers( 			ServletContextInitializer... initializers);1526993305;Utility method that can be used by subclasses wishing to combine the specified_{@link ServletContextInitializer} parameters with those defined in this instance._@param initializers the initializers to merge_@return a complete set of merged initializers (with the specified parameters_appearing first);protected final ServletContextInitializer[] mergeInitializers(_			ServletContextInitializer... initializers) {_		List<ServletContextInitializer> mergedInitializers = new ArrayList<>()__		mergedInitializers.add((servletContext) -> this.initParameters_				.forEach(servletContext::setInitParameter))__		mergedInitializers.add(new SessionConfiguringInitializer(this.session))__		mergedInitializers.addAll(Arrays.asList(initializers))__		mergedInitializers.addAll(this.initializers)__		return mergedInitializers.toArray(new ServletContextInitializer[0])__	};utility,method,that,can,be,used,by,subclasses,wishing,to,combine,the,specified,link,servlet,context,initializer,parameters,with,those,defined,in,this,instance,param,initializers,the,initializers,to,merge,return,a,complete,set,of,merged,initializers,with,the,specified,parameters,appearing,first;protected,final,servlet,context,initializer,merge,initializers,servlet,context,initializer,initializers,list,servlet,context,initializer,merged,initializers,new,array,list,merged,initializers,add,servlet,context,this,init,parameters,for,each,servlet,context,set,init,parameter,merged,initializers,add,new,session,configuring,initializer,this,session,merged,initializers,add,all,arrays,as,list,initializers,merged,initializers,add,all,this,initializers,return,merged,initializers,to,array,new,servlet,context,initializer,0
AbstractServletWebServerFactory -> public AbstractServletWebServerFactory(String contextPath, int port);1507173536;Create a new {@link AbstractServletWebServerFactory} instance with the specified_context path and port._@param contextPath the context path for the web server_@param port the port number for the web server;public AbstractServletWebServerFactory(String contextPath, int port) {_		super(port)__		checkContextPath(contextPath)__		this.contextPath = contextPath__	};create,a,new,link,abstract,servlet,web,server,factory,instance,with,the,specified,context,path,and,port,param,context,path,the,context,path,for,the,web,server,param,port,the,port,number,for,the,web,server;public,abstract,servlet,web,server,factory,string,context,path,int,port,super,port,check,context,path,context,path,this,context,path,context,path
AbstractServletWebServerFactory -> public AbstractServletWebServerFactory(String contextPath, int port);1511157177;Create a new {@link AbstractServletWebServerFactory} instance with the specified_context path and port._@param contextPath the context path for the web server_@param port the port number for the web server;public AbstractServletWebServerFactory(String contextPath, int port) {_		super(port)__		checkContextPath(contextPath)__		this.contextPath = contextPath__	};create,a,new,link,abstract,servlet,web,server,factory,instance,with,the,specified,context,path,and,port,param,context,path,the,context,path,for,the,web,server,param,port,the,port,number,for,the,web,server;public,abstract,servlet,web,server,factory,string,context,path,int,port,super,port,check,context,path,context,path,this,context,path,context,path
AbstractServletWebServerFactory -> public AbstractServletWebServerFactory(String contextPath, int port);1516210343;Create a new {@link AbstractServletWebServerFactory} instance with the specified_context path and port._@param contextPath the context path for the web server_@param port the port number for the web server;public AbstractServletWebServerFactory(String contextPath, int port) {_		super(port)__		checkContextPath(contextPath)__		this.contextPath = contextPath__	};create,a,new,link,abstract,servlet,web,server,factory,instance,with,the,specified,context,path,and,port,param,context,path,the,context,path,for,the,web,server,param,port,the,port,number,for,the,web,server;public,abstract,servlet,web,server,factory,string,context,path,int,port,super,port,check,context,path,context,path,this,context,path,context,path
AbstractServletWebServerFactory -> public AbstractServletWebServerFactory(String contextPath, int port);1519362690;Create a new {@link AbstractServletWebServerFactory} instance with the specified_context path and port._@param contextPath the context path for the web server_@param port the port number for the web server;public AbstractServletWebServerFactory(String contextPath, int port) {_		super(port)__		checkContextPath(contextPath)__		this.contextPath = contextPath__	};create,a,new,link,abstract,servlet,web,server,factory,instance,with,the,specified,context,path,and,port,param,context,path,the,context,path,for,the,web,server,param,port,the,port,number,for,the,web,server;public,abstract,servlet,web,server,factory,string,context,path,int,port,super,port,check,context,path,context,path,this,context,path,context,path
AbstractServletWebServerFactory -> public AbstractServletWebServerFactory(String contextPath, int port);1519817048;Create a new {@link AbstractServletWebServerFactory} instance with the specified_context path and port._@param contextPath the context path for the web server_@param port the port number for the web server;public AbstractServletWebServerFactory(String contextPath, int port) {_		super(port)__		checkContextPath(contextPath)__		this.contextPath = contextPath__	};create,a,new,link,abstract,servlet,web,server,factory,instance,with,the,specified,context,path,and,port,param,context,path,the,context,path,for,the,web,server,param,port,the,port,number,for,the,web,server;public,abstract,servlet,web,server,factory,string,context,path,int,port,super,port,check,context,path,context,path,this,context,path,context,path
AbstractServletWebServerFactory -> public AbstractServletWebServerFactory(String contextPath, int port);1525255067;Create a new {@link AbstractServletWebServerFactory} instance with the specified_context path and port._@param contextPath the context path for the web server_@param port the port number for the web server;public AbstractServletWebServerFactory(String contextPath, int port) {_		super(port)__		checkContextPath(contextPath)__		this.contextPath = contextPath__	};create,a,new,link,abstract,servlet,web,server,factory,instance,with,the,specified,context,path,and,port,param,context,path,the,context,path,for,the,web,server,param,port,the,port,number,for,the,web,server;public,abstract,servlet,web,server,factory,string,context,path,int,port,super,port,check,context,path,context,path,this,context,path,context,path
AbstractServletWebServerFactory -> public AbstractServletWebServerFactory(String contextPath, int port);1525476706;Create a new {@link AbstractServletWebServerFactory} instance with the specified_context path and port._@param contextPath the context path for the web server_@param port the port number for the web server;public AbstractServletWebServerFactory(String contextPath, int port) {_		super(port)__		checkContextPath(contextPath)__		this.contextPath = contextPath__	};create,a,new,link,abstract,servlet,web,server,factory,instance,with,the,specified,context,path,and,port,param,context,path,the,context,path,for,the,web,server,param,port,the,port,number,for,the,web,server;public,abstract,servlet,web,server,factory,string,context,path,int,port,super,port,check,context,path,context,path,this,context,path,context,path
AbstractServletWebServerFactory -> public AbstractServletWebServerFactory(String contextPath, int port);1526993305;Create a new {@link AbstractServletWebServerFactory} instance with the specified_context path and port._@param contextPath the context path for the web server_@param port the port number for the web server;public AbstractServletWebServerFactory(String contextPath, int port) {_		super(port)__		checkContextPath(contextPath)__		this.contextPath = contextPath__	};create,a,new,link,abstract,servlet,web,server,factory,instance,with,the,specified,context,path,and,port,param,context,path,the,context,path,for,the,web,server,param,port,the,port,number,for,the,web,server;public,abstract,servlet,web,server,factory,string,context,path,int,port,super,port,check,context,path,context,path,this,context,path,context,path
AbstractServletWebServerFactory -> public File getDocumentRoot();1507173536;Returns the document root which will be used by the web context to serve static_files._@return the document root;public File getDocumentRoot() {_		return this.documentRoot.getDirectory()__	};returns,the,document,root,which,will,be,used,by,the,web,context,to,serve,static,files,return,the,document,root;public,file,get,document,root,return,this,document,root,get,directory
AbstractServletWebServerFactory -> public File getDocumentRoot();1511157177;Returns the document root which will be used by the web context to serve static_files._@return the document root;public File getDocumentRoot() {_		return this.documentRoot.getDirectory()__	};returns,the,document,root,which,will,be,used,by,the,web,context,to,serve,static,files,return,the,document,root;public,file,get,document,root,return,this,document,root,get,directory
AbstractServletWebServerFactory -> public File getDocumentRoot();1516210343;Returns the document root which will be used by the web context to serve static_files._@return the document root;public File getDocumentRoot() {_		return this.documentRoot.getDirectory()__	};returns,the,document,root,which,will,be,used,by,the,web,context,to,serve,static,files,return,the,document,root;public,file,get,document,root,return,this,document,root,get,directory
AbstractServletWebServerFactory -> public File getDocumentRoot();1519362690;Returns the document root which will be used by the web context to serve static_files._@return the document root;public File getDocumentRoot() {_		return this.documentRoot.getDirectory()__	};returns,the,document,root,which,will,be,used,by,the,web,context,to,serve,static,files,return,the,document,root;public,file,get,document,root,return,this,document,root,get,directory
AbstractServletWebServerFactory -> public File getDocumentRoot();1519817048;Returns the document root which will be used by the web context to serve static_files._@return the document root;public File getDocumentRoot() {_		return this.documentRoot.getDirectory()__	};returns,the,document,root,which,will,be,used,by,the,web,context,to,serve,static,files,return,the,document,root;public,file,get,document,root,return,this,document,root,get,directory
AbstractServletWebServerFactory -> public File getDocumentRoot();1525255067;Returns the document root which will be used by the web context to serve static_files._@return the document root;public File getDocumentRoot() {_		return this.documentRoot.getDirectory()__	};returns,the,document,root,which,will,be,used,by,the,web,context,to,serve,static,files,return,the,document,root;public,file,get,document,root,return,this,document,root,get,directory
AbstractServletWebServerFactory -> public File getDocumentRoot();1525476706;Returns the document root which will be used by the web context to serve static_files._@return the document root;public File getDocumentRoot() {_		return this.documentRoot.getDirectory()__	};returns,the,document,root,which,will,be,used,by,the,web,context,to,serve,static,files,return,the,document,root;public,file,get,document,root,return,this,document,root,get,directory
AbstractServletWebServerFactory -> public File getDocumentRoot();1526993305;Returns the document root which will be used by the web context to serve static_files._@return the document root;public File getDocumentRoot() {_		return this.documentRoot.getDirectory()__	};returns,the,document,root,which,will,be,used,by,the,web,context,to,serve,static,files,return,the,document,root;public,file,get,document,root,return,this,document,root,get,directory
AbstractServletWebServerFactory -> public String getContextPath();1507173536;Returns the context path for the web server. The path will start with "/" and not_end with "/". The root context is represented by an empty string._@return the context path;public String getContextPath() {_		return this.contextPath__	};returns,the,context,path,for,the,web,server,the,path,will,start,with,and,not,end,with,the,root,context,is,represented,by,an,empty,string,return,the,context,path;public,string,get,context,path,return,this,context,path
AbstractServletWebServerFactory -> public String getContextPath();1511157177;Returns the context path for the web server. The path will start with "/" and not_end with "/". The root context is represented by an empty string._@return the context path;public String getContextPath() {_		return this.contextPath__	};returns,the,context,path,for,the,web,server,the,path,will,start,with,and,not,end,with,the,root,context,is,represented,by,an,empty,string,return,the,context,path;public,string,get,context,path,return,this,context,path
AbstractServletWebServerFactory -> public String getContextPath();1516210343;Returns the context path for the web server. The path will start with "/" and not_end with "/". The root context is represented by an empty string._@return the context path;public String getContextPath() {_		return this.contextPath__	};returns,the,context,path,for,the,web,server,the,path,will,start,with,and,not,end,with,the,root,context,is,represented,by,an,empty,string,return,the,context,path;public,string,get,context,path,return,this,context,path
AbstractServletWebServerFactory -> public String getContextPath();1519362690;Returns the context path for the web server. The path will start with "/" and not_end with "/". The root context is represented by an empty string._@return the context path;public String getContextPath() {_		return this.contextPath__	};returns,the,context,path,for,the,web,server,the,path,will,start,with,and,not,end,with,the,root,context,is,represented,by,an,empty,string,return,the,context,path;public,string,get,context,path,return,this,context,path
AbstractServletWebServerFactory -> public String getContextPath();1519817048;Returns the context path for the web server. The path will start with "/" and not_end with "/". The root context is represented by an empty string._@return the context path;public String getContextPath() {_		return this.contextPath__	};returns,the,context,path,for,the,web,server,the,path,will,start,with,and,not,end,with,the,root,context,is,represented,by,an,empty,string,return,the,context,path;public,string,get,context,path,return,this,context,path
AbstractServletWebServerFactory -> public String getContextPath();1525255067;Returns the context path for the web server. The path will start with "/" and not_end with "/". The root context is represented by an empty string._@return the context path;public String getContextPath() {_		return this.contextPath__	};returns,the,context,path,for,the,web,server,the,path,will,start,with,and,not,end,with,the,root,context,is,represented,by,an,empty,string,return,the,context,path;public,string,get,context,path,return,this,context,path
AbstractServletWebServerFactory -> public String getContextPath();1525476706;Returns the context path for the web server. The path will start with "/" and not_end with "/". The root context is represented by an empty string._@return the context path;public String getContextPath() {_		return this.contextPath__	};returns,the,context,path,for,the,web,server,the,path,will,start,with,and,not,end,with,the,root,context,is,represented,by,an,empty,string,return,the,context,path;public,string,get,context,path,return,this,context,path
AbstractServletWebServerFactory -> public String getContextPath();1526993305;Returns the context path for the web server. The path will start with "/" and not_end with "/". The root context is represented by an empty string._@return the context path;public String getContextPath() {_		return this.contextPath__	};returns,the,context,path,for,the,web,server,the,path,will,start,with,and,not,end,with,the,root,context,is,represented,by,an,empty,string,return,the,context,path;public,string,get,context,path,return,this,context,path
AbstractServletWebServerFactory -> public boolean isRegisterDefaultServlet();1507173536;Flag to indicate that the default servlet should be registered._@return true if the default servlet is to be registered;public boolean isRegisterDefaultServlet() {_		return this.registerDefaultServlet__	};flag,to,indicate,that,the,default,servlet,should,be,registered,return,true,if,the,default,servlet,is,to,be,registered;public,boolean,is,register,default,servlet,return,this,register,default,servlet
AbstractServletWebServerFactory -> public boolean isRegisterDefaultServlet();1511157177;Flag to indicate that the default servlet should be registered._@return true if the default servlet is to be registered;public boolean isRegisterDefaultServlet() {_		return this.registerDefaultServlet__	};flag,to,indicate,that,the,default,servlet,should,be,registered,return,true,if,the,default,servlet,is,to,be,registered;public,boolean,is,register,default,servlet,return,this,register,default,servlet
AbstractServletWebServerFactory -> public boolean isRegisterDefaultServlet();1516210343;Flag to indicate that the default servlet should be registered._@return true if the default servlet is to be registered;public boolean isRegisterDefaultServlet() {_		return this.registerDefaultServlet__	};flag,to,indicate,that,the,default,servlet,should,be,registered,return,true,if,the,default,servlet,is,to,be,registered;public,boolean,is,register,default,servlet,return,this,register,default,servlet
AbstractServletWebServerFactory -> public boolean isRegisterDefaultServlet();1519362690;Flag to indicate that the default servlet should be registered._@return true if the default servlet is to be registered;public boolean isRegisterDefaultServlet() {_		return this.registerDefaultServlet__	};flag,to,indicate,that,the,default,servlet,should,be,registered,return,true,if,the,default,servlet,is,to,be,registered;public,boolean,is,register,default,servlet,return,this,register,default,servlet
AbstractServletWebServerFactory -> public boolean isRegisterDefaultServlet();1519817048;Flag to indicate that the default servlet should be registered._@return true if the default servlet is to be registered;public boolean isRegisterDefaultServlet() {_		return this.registerDefaultServlet__	};flag,to,indicate,that,the,default,servlet,should,be,registered,return,true,if,the,default,servlet,is,to,be,registered;public,boolean,is,register,default,servlet,return,this,register,default,servlet
AbstractServletWebServerFactory -> public boolean isRegisterDefaultServlet();1525255067;Flag to indicate that the default servlet should be registered._@return true if the default servlet is to be registered;public boolean isRegisterDefaultServlet() {_		return this.registerDefaultServlet__	};flag,to,indicate,that,the,default,servlet,should,be,registered,return,true,if,the,default,servlet,is,to,be,registered;public,boolean,is,register,default,servlet,return,this,register,default,servlet
AbstractServletWebServerFactory -> public boolean isRegisterDefaultServlet();1525476706;Flag to indicate that the default servlet should be registered._@return true if the default servlet is to be registered;public boolean isRegisterDefaultServlet() {_		return this.registerDefaultServlet__	};flag,to,indicate,that,the,default,servlet,should,be,registered,return,true,if,the,default,servlet,is,to,be,registered;public,boolean,is,register,default,servlet,return,this,register,default,servlet
AbstractServletWebServerFactory -> public boolean isRegisterDefaultServlet();1526993305;Flag to indicate that the default servlet should be registered._@return true if the default servlet is to be registered;public boolean isRegisterDefaultServlet() {_		return this.registerDefaultServlet__	};flag,to,indicate,that,the,default,servlet,should,be,registered,return,true,if,the,default,servlet,is,to,be,registered;public,boolean,is,register,default,servlet,return,this,register,default,servlet
AbstractServletWebServerFactory -> public Map<Locale, Charset> getLocaleCharsetMappings();1507173536;Return the Locale to Charset mappings._@return the charset mappings;public Map<Locale, Charset> getLocaleCharsetMappings() {_		return this.localeCharsetMappings__	};return,the,locale,to,charset,mappings,return,the,charset,mappings;public,map,locale,charset,get,locale,charset,mappings,return,this,locale,charset,mappings
AbstractServletWebServerFactory -> public Map<Locale, Charset> getLocaleCharsetMappings();1511157177;Return the Locale to Charset mappings._@return the charset mappings;public Map<Locale, Charset> getLocaleCharsetMappings() {_		return this.localeCharsetMappings__	};return,the,locale,to,charset,mappings,return,the,charset,mappings;public,map,locale,charset,get,locale,charset,mappings,return,this,locale,charset,mappings
AbstractServletWebServerFactory -> public Map<Locale, Charset> getLocaleCharsetMappings();1516210343;Return the Locale to Charset mappings._@return the charset mappings;public Map<Locale, Charset> getLocaleCharsetMappings() {_		return this.localeCharsetMappings__	};return,the,locale,to,charset,mappings,return,the,charset,mappings;public,map,locale,charset,get,locale,charset,mappings,return,this,locale,charset,mappings
AbstractServletWebServerFactory -> public Map<Locale, Charset> getLocaleCharsetMappings();1519362690;Return the Locale to Charset mappings._@return the charset mappings;public Map<Locale, Charset> getLocaleCharsetMappings() {_		return this.localeCharsetMappings__	};return,the,locale,to,charset,mappings,return,the,charset,mappings;public,map,locale,charset,get,locale,charset,mappings,return,this,locale,charset,mappings
AbstractServletWebServerFactory -> public Map<Locale, Charset> getLocaleCharsetMappings();1519817048;Return the Locale to Charset mappings._@return the charset mappings;public Map<Locale, Charset> getLocaleCharsetMappings() {_		return this.localeCharsetMappings__	};return,the,locale,to,charset,mappings,return,the,charset,mappings;public,map,locale,charset,get,locale,charset,mappings,return,this,locale,charset,mappings
AbstractServletWebServerFactory -> public Map<Locale, Charset> getLocaleCharsetMappings();1525255067;Return the Locale to Charset mappings._@return the charset mappings;public Map<Locale, Charset> getLocaleCharsetMappings() {_		return this.localeCharsetMappings__	};return,the,locale,to,charset,mappings,return,the,charset,mappings;public,map,locale,charset,get,locale,charset,mappings,return,this,locale,charset,mappings
AbstractServletWebServerFactory -> public Map<Locale, Charset> getLocaleCharsetMappings();1525476706;Return the Locale to Charset mappings._@return the charset mappings;public Map<Locale, Charset> getLocaleCharsetMappings() {_		return this.localeCharsetMappings__	};return,the,locale,to,charset,mappings,return,the,charset,mappings;public,map,locale,charset,get,locale,charset,mappings,return,this,locale,charset,mappings
AbstractServletWebServerFactory -> public Map<Locale, Charset> getLocaleCharsetMappings();1526993305;Return the Locale to Charset mappings._@return the charset mappings;public Map<Locale, Charset> getLocaleCharsetMappings() {_		return this.localeCharsetMappings__	};return,the,locale,to,charset,mappings,return,the,charset,mappings;public,map,locale,charset,get,locale,charset,mappings,return,this,locale,charset,mappings
AbstractServletWebServerFactory -> protected final File getValidDocumentRoot();1507173536;Returns the absolute document root when it points to a valid directory, logging a_warning and returning {@code null} otherwise._@return the valid document root;protected final File getValidDocumentRoot() {_		return this.documentRoot.getValidDirectory()__	};returns,the,absolute,document,root,when,it,points,to,a,valid,directory,logging,a,warning,and,returning,code,null,otherwise,return,the,valid,document,root;protected,final,file,get,valid,document,root,return,this,document,root,get,valid,directory
AbstractServletWebServerFactory -> protected final File getValidDocumentRoot();1511157177;Returns the absolute document root when it points to a valid directory, logging a_warning and returning {@code null} otherwise._@return the valid document root;protected final File getValidDocumentRoot() {_		return this.documentRoot.getValidDirectory()__	};returns,the,absolute,document,root,when,it,points,to,a,valid,directory,logging,a,warning,and,returning,code,null,otherwise,return,the,valid,document,root;protected,final,file,get,valid,document,root,return,this,document,root,get,valid,directory
AbstractServletWebServerFactory -> protected final File getValidDocumentRoot();1516210343;Returns the absolute document root when it points to a valid directory, logging a_warning and returning {@code null} otherwise._@return the valid document root;protected final File getValidDocumentRoot() {_		return this.documentRoot.getValidDirectory()__	};returns,the,absolute,document,root,when,it,points,to,a,valid,directory,logging,a,warning,and,returning,code,null,otherwise,return,the,valid,document,root;protected,final,file,get,valid,document,root,return,this,document,root,get,valid,directory
AbstractServletWebServerFactory -> protected final File getValidDocumentRoot();1519362690;Returns the absolute document root when it points to a valid directory, logging a_warning and returning {@code null} otherwise._@return the valid document root;protected final File getValidDocumentRoot() {_		return this.documentRoot.getValidDirectory()__	};returns,the,absolute,document,root,when,it,points,to,a,valid,directory,logging,a,warning,and,returning,code,null,otherwise,return,the,valid,document,root;protected,final,file,get,valid,document,root,return,this,document,root,get,valid,directory
AbstractServletWebServerFactory -> protected final File getValidDocumentRoot();1519817048;Returns the absolute document root when it points to a valid directory, logging a_warning and returning {@code null} otherwise._@return the valid document root;protected final File getValidDocumentRoot() {_		return this.documentRoot.getValidDirectory()__	};returns,the,absolute,document,root,when,it,points,to,a,valid,directory,logging,a,warning,and,returning,code,null,otherwise,return,the,valid,document,root;protected,final,file,get,valid,document,root,return,this,document,root,get,valid,directory
AbstractServletWebServerFactory -> protected final File getValidDocumentRoot();1525255067;Returns the absolute document root when it points to a valid directory, logging a_warning and returning {@code null} otherwise._@return the valid document root;protected final File getValidDocumentRoot() {_		return this.documentRoot.getValidDirectory()__	};returns,the,absolute,document,root,when,it,points,to,a,valid,directory,logging,a,warning,and,returning,code,null,otherwise,return,the,valid,document,root;protected,final,file,get,valid,document,root,return,this,document,root,get,valid,directory
AbstractServletWebServerFactory -> protected final File getValidDocumentRoot();1525476706;Returns the absolute document root when it points to a valid directory, logging a_warning and returning {@code null} otherwise._@return the valid document root;protected final File getValidDocumentRoot() {_		return this.documentRoot.getValidDirectory()__	};returns,the,absolute,document,root,when,it,points,to,a,valid,directory,logging,a,warning,and,returning,code,null,otherwise,return,the,valid,document,root;protected,final,file,get,valid,document,root,return,this,document,root,get,valid,directory
AbstractServletWebServerFactory -> protected final File getValidDocumentRoot();1526993305;Returns the absolute document root when it points to a valid directory, logging a_warning and returning {@code null} otherwise._@return the valid document root;protected final File getValidDocumentRoot() {_		return this.documentRoot.getValidDirectory()__	};returns,the,absolute,document,root,when,it,points,to,a,valid,directory,logging,a,warning,and,returning,code,null,otherwise,return,the,valid,document,root;protected,final,file,get,valid,document,root,return,this,document,root,get,valid,directory
AbstractServletWebServerFactory -> protected boolean shouldRegisterJspServlet();1507173536;Returns whether or not the JSP servlet should be registered with the web server._@return {@code true} if the servlet should be registered, otherwise {@code false};protected boolean shouldRegisterJspServlet() {_		return this.jsp != null && this.jsp.getRegistered() && ClassUtils_				.isPresent(this.jsp.getClassName(), getClass().getClassLoader())__	};returns,whether,or,not,the,jsp,servlet,should,be,registered,with,the,web,server,return,code,true,if,the,servlet,should,be,registered,otherwise,code,false;protected,boolean,should,register,jsp,servlet,return,this,jsp,null,this,jsp,get,registered,class,utils,is,present,this,jsp,get,class,name,get,class,get,class,loader
AbstractServletWebServerFactory -> protected boolean shouldRegisterJspServlet();1511157177;Returns whether or not the JSP servlet should be registered with the web server._@return {@code true} if the servlet should be registered, otherwise {@code false};protected boolean shouldRegisterJspServlet() {_		return this.jsp != null && this.jsp.getRegistered() && ClassUtils_				.isPresent(this.jsp.getClassName(), getClass().getClassLoader())__	};returns,whether,or,not,the,jsp,servlet,should,be,registered,with,the,web,server,return,code,true,if,the,servlet,should,be,registered,otherwise,code,false;protected,boolean,should,register,jsp,servlet,return,this,jsp,null,this,jsp,get,registered,class,utils,is,present,this,jsp,get,class,name,get,class,get,class,loader
AbstractServletWebServerFactory -> protected boolean shouldRegisterJspServlet();1516210343;Returns whether or not the JSP servlet should be registered with the web server._@return {@code true} if the servlet should be registered, otherwise {@code false};protected boolean shouldRegisterJspServlet() {_		return this.jsp != null && this.jsp.getRegistered() && ClassUtils_				.isPresent(this.jsp.getClassName(), getClass().getClassLoader())__	};returns,whether,or,not,the,jsp,servlet,should,be,registered,with,the,web,server,return,code,true,if,the,servlet,should,be,registered,otherwise,code,false;protected,boolean,should,register,jsp,servlet,return,this,jsp,null,this,jsp,get,registered,class,utils,is,present,this,jsp,get,class,name,get,class,get,class,loader
AbstractServletWebServerFactory -> protected boolean shouldRegisterJspServlet();1519362690;Returns whether or not the JSP servlet should be registered with the web server._@return {@code true} if the servlet should be registered, otherwise {@code false};protected boolean shouldRegisterJspServlet() {_		return this.jsp != null && this.jsp.getRegistered() && ClassUtils_				.isPresent(this.jsp.getClassName(), getClass().getClassLoader())__	};returns,whether,or,not,the,jsp,servlet,should,be,registered,with,the,web,server,return,code,true,if,the,servlet,should,be,registered,otherwise,code,false;protected,boolean,should,register,jsp,servlet,return,this,jsp,null,this,jsp,get,registered,class,utils,is,present,this,jsp,get,class,name,get,class,get,class,loader
AbstractServletWebServerFactory -> protected boolean shouldRegisterJspServlet();1519817048;Returns whether or not the JSP servlet should be registered with the web server._@return {@code true} if the servlet should be registered, otherwise {@code false};protected boolean shouldRegisterJspServlet() {_		return this.jsp != null && this.jsp.getRegistered() && ClassUtils_				.isPresent(this.jsp.getClassName(), getClass().getClassLoader())__	};returns,whether,or,not,the,jsp,servlet,should,be,registered,with,the,web,server,return,code,true,if,the,servlet,should,be,registered,otherwise,code,false;protected,boolean,should,register,jsp,servlet,return,this,jsp,null,this,jsp,get,registered,class,utils,is,present,this,jsp,get,class,name,get,class,get,class,loader
AbstractServletWebServerFactory -> protected boolean shouldRegisterJspServlet();1525255067;Returns whether or not the JSP servlet should be registered with the web server._@return {@code true} if the servlet should be registered, otherwise {@code false};protected boolean shouldRegisterJspServlet() {_		return this.jsp != null && this.jsp.getRegistered() && ClassUtils_				.isPresent(this.jsp.getClassName(), getClass().getClassLoader())__	};returns,whether,or,not,the,jsp,servlet,should,be,registered,with,the,web,server,return,code,true,if,the,servlet,should,be,registered,otherwise,code,false;protected,boolean,should,register,jsp,servlet,return,this,jsp,null,this,jsp,get,registered,class,utils,is,present,this,jsp,get,class,name,get,class,get,class,loader
AbstractServletWebServerFactory -> protected boolean shouldRegisterJspServlet();1525476706;Returns whether or not the JSP servlet should be registered with the web server._@return {@code true} if the servlet should be registered, otherwise {@code false};protected boolean shouldRegisterJspServlet() {_		return this.jsp != null && this.jsp.getRegistered() && ClassUtils_				.isPresent(this.jsp.getClassName(), getClass().getClassLoader())__	};returns,whether,or,not,the,jsp,servlet,should,be,registered,with,the,web,server,return,code,true,if,the,servlet,should,be,registered,otherwise,code,false;protected,boolean,should,register,jsp,servlet,return,this,jsp,null,this,jsp,get,registered,class,utils,is,present,this,jsp,get,class,name,get,class,get,class,loader
AbstractServletWebServerFactory -> protected boolean shouldRegisterJspServlet();1526993305;Returns whether or not the JSP servlet should be registered with the web server._@return {@code true} if the servlet should be registered, otherwise {@code false};protected boolean shouldRegisterJspServlet() {_		return this.jsp != null && this.jsp.getRegistered() && ClassUtils_				.isPresent(this.jsp.getClassName(), getClass().getClassLoader())__	};returns,whether,or,not,the,jsp,servlet,should,be,registered,with,the,web,server,return,code,true,if,the,servlet,should,be,registered,otherwise,code,false;protected,boolean,should,register,jsp,servlet,return,this,jsp,null,this,jsp,get,registered,class,utils,is,present,this,jsp,get,class,name,get,class,get,class,loader
AbstractServletWebServerFactory -> public MimeMappings getMimeMappings();1507173536;Returns the mime-type mappings._@return the mimeMappings the mime-type mappings.;public MimeMappings getMimeMappings() {_		return this.mimeMappings__	};returns,the,mime,type,mappings,return,the,mime,mappings,the,mime,type,mappings;public,mime,mappings,get,mime,mappings,return,this,mime,mappings
AbstractServletWebServerFactory -> public MimeMappings getMimeMappings();1511157177;Returns the mime-type mappings._@return the mimeMappings the mime-type mappings.;public MimeMappings getMimeMappings() {_		return this.mimeMappings__	};returns,the,mime,type,mappings,return,the,mime,mappings,the,mime,type,mappings;public,mime,mappings,get,mime,mappings,return,this,mime,mappings
AbstractServletWebServerFactory -> public MimeMappings getMimeMappings();1516210343;Returns the mime-type mappings._@return the mimeMappings the mime-type mappings.;public MimeMappings getMimeMappings() {_		return this.mimeMappings__	};returns,the,mime,type,mappings,return,the,mime,mappings,the,mime,type,mappings;public,mime,mappings,get,mime,mappings,return,this,mime,mappings
AbstractServletWebServerFactory -> public MimeMappings getMimeMappings();1519362690;Returns the mime-type mappings._@return the mimeMappings the mime-type mappings.;public MimeMappings getMimeMappings() {_		return this.mimeMappings__	};returns,the,mime,type,mappings,return,the,mime,mappings,the,mime,type,mappings;public,mime,mappings,get,mime,mappings,return,this,mime,mappings
AbstractServletWebServerFactory -> public MimeMappings getMimeMappings();1519817048;Returns the mime-type mappings._@return the mimeMappings the mime-type mappings.;public MimeMappings getMimeMappings() {_		return this.mimeMappings__	};returns,the,mime,type,mappings,return,the,mime,mappings,the,mime,type,mappings;public,mime,mappings,get,mime,mappings,return,this,mime,mappings
AbstractServletWebServerFactory -> public MimeMappings getMimeMappings();1525255067;Returns the mime-type mappings._@return the mimeMappings the mime-type mappings.;public MimeMappings getMimeMappings() {_		return this.mimeMappings__	};returns,the,mime,type,mappings,return,the,mime,mappings,the,mime,type,mappings;public,mime,mappings,get,mime,mappings,return,this,mime,mappings
AbstractServletWebServerFactory -> public MimeMappings getMimeMappings();1525476706;Returns the mime-type mappings._@return the mimeMappings the mime-type mappings.;public MimeMappings getMimeMappings() {_		return this.mimeMappings__	};returns,the,mime,type,mappings,return,the,mime,mappings,the,mime,type,mappings;public,mime,mappings,get,mime,mappings,return,this,mime,mappings
AbstractServletWebServerFactory -> public MimeMappings getMimeMappings();1526993305;Returns the mime-type mappings._@return the mimeMappings the mime-type mappings.;public MimeMappings getMimeMappings() {_		return this.mimeMappings__	};returns,the,mime,type,mappings,return,the,mime,mappings,the,mime,type,mappings;public,mime,mappings,get,mime,mappings,return,this,mime,mappings
AbstractServletWebServerFactory -> @Deprecated 	protected final String getDecodedFile(URL url);1525255067;Converts the given {@code url} into a decoded file path.__@param url the url to convert_@return the file path_@deprecated Since 2.0.2 in favor of {@link File#File(java.net.URI)};@Deprecated_	protected final String getDecodedFile(URL url) {_		try {_			return URLDecoder.decode(url.getFile(), "UTF-8")__		}_		catch (UnsupportedEncodingException ex) {_			throw new IllegalStateException(_					"Failed to decode '" + url.getFile() + "' using UTF-8")__		}_	};converts,the,given,code,url,into,a,decoded,file,path,param,url,the,url,to,convert,return,the,file,path,deprecated,since,2,0,2,in,favor,of,link,file,file,java,net,uri;deprecated,protected,final,string,get,decoded,file,url,url,try,return,urldecoder,decode,url,get,file,utf,8,catch,unsupported,encoding,exception,ex,throw,new,illegal,state,exception,failed,to,decode,url,get,file,using,utf,8
AbstractServletWebServerFactory -> @Deprecated 	protected final String getDecodedFile(URL url);1525476706;Converts the given {@code url} into a decoded file path._@param url the url to convert_@return the file path_@deprecated Since 2.0.2 in favor of {@link File#File(java.net.URI)};@Deprecated_	protected final String getDecodedFile(URL url) {_		try {_			return URLDecoder.decode(url.getFile(), "UTF-8")__		}_		catch (UnsupportedEncodingException ex) {_			throw new IllegalStateException(_					"Failed to decode '" + url.getFile() + "' using UTF-8")__		}_	};converts,the,given,code,url,into,a,decoded,file,path,param,url,the,url,to,convert,return,the,file,path,deprecated,since,2,0,2,in,favor,of,link,file,file,java,net,uri;deprecated,protected,final,string,get,decoded,file,url,url,try,return,urldecoder,decode,url,get,file,utf,8,catch,unsupported,encoding,exception,ex,throw,new,illegal,state,exception,failed,to,decode,url,get,file,using,utf,8
