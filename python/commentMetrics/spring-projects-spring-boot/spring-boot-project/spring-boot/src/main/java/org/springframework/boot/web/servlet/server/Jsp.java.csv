commented;modifiers;parameterAmount;loc;comment;code
true;public;0;3;/**  * Return the class name of the servlet to use for JSPs. If {@link #getRegistered()  * registered} is {@code true} and this class is on the classpath then it will be  * registered.  * @return the class name of the servlet to use for JSPs  */ ;/**  * Return the class name of the servlet to use for JSPs. If {@link #getRegistered()  * registered} is {@code true} and this class is on the classpath then it will be  * registered.  * @return the class name of the servlet to use for JSPs  */ public String getClassName() {     return this.className. }
false;public;1;3;;public void setClassName(String className) {     this.className = className. }
true;public;0;3;/**  * Return the init parameters used to configure the JSP servlet.  * @return the init parameters  */ ;/**  * Return the init parameters used to configure the JSP servlet.  * @return the init parameters  */ public Map<String, String> getInitParameters() {     return this.initParameters. }
false;public;1;3;;public void setInitParameters(Map<String, String> initParameters) {     this.initParameters = initParameters. }
true;public;0;3;/**  * Return whether the JSP servlet is registered.  * @return {@code true} to register the JSP servlet  */ ;/**  * Return whether the JSP servlet is registered.  * @return {@code true} to register the JSP servlet  */ public boolean getRegistered() {     return this.registered. }
false;public;1;3;;public void setRegistered(boolean registered) {     this.registered = registered. }
