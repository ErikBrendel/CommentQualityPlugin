# id;timestamp;commentText;codeText;commentWords;codeWords
AnnotationConfigReactiveWebServerApplicationContext -> public final void scan(String... basePackages);1509761243;Perform a scan within the specified base packages. Note that {@link #refresh()}_must be called in order for the context to fully process the new class._@param basePackages the packages to check for annotated classes_@see #register(Class...)_@see #refresh();public final void scan(String... basePackages) {_		this.basePackages = basePackages__		Assert.notEmpty(basePackages, "At least one base package must be specified")__	};perform,a,scan,within,the,specified,base,packages,note,that,link,refresh,must,be,called,in,order,for,the,context,to,fully,process,the,new,class,param,base,packages,the,packages,to,check,for,annotated,classes,see,register,class,see,refresh;public,final,void,scan,string,base,packages,this,base,packages,base,packages,assert,not,empty,base,packages,at,least,one,base,package,must,be,specified
AnnotationConfigReactiveWebServerApplicationContext -> public final void scan(String... basePackages);1511070903;Perform a scan within the specified base packages. Note that {@link #refresh()}_must be called in order for the context to fully process the new class._@param basePackages the packages to check for annotated classes_@see #register(Class...)_@see #refresh();public final void scan(String... basePackages) {_		this.basePackages = basePackages__		Assert.notEmpty(basePackages, "At least one base package must be specified")__	};perform,a,scan,within,the,specified,base,packages,note,that,link,refresh,must,be,called,in,order,for,the,context,to,fully,process,the,new,class,param,base,packages,the,packages,to,check,for,annotated,classes,see,register,class,see,refresh;public,final,void,scan,string,base,packages,this,base,packages,base,packages,assert,not,empty,base,packages,at,least,one,base,package,must,be,specified
AnnotationConfigReactiveWebServerApplicationContext -> public final void scan(String... basePackages);1511858719;Perform a scan within the specified base packages. Note that {@link #refresh()}_must be called in order for the context to fully process the new class._@param basePackages the packages to check for annotated classes_@see #register(Class...)_@see #refresh();public final void scan(String... basePackages) {_		Assert.notEmpty(basePackages, "At least one base package must be specified")__		this.basePackages = basePackages__	};perform,a,scan,within,the,specified,base,packages,note,that,link,refresh,must,be,called,in,order,for,the,context,to,fully,process,the,new,class,param,base,packages,the,packages,to,check,for,annotated,classes,see,register,class,see,refresh;public,final,void,scan,string,base,packages,assert,not,empty,base,packages,at,least,one,base,package,must,be,specified,this,base,packages,base,packages
AnnotationConfigReactiveWebServerApplicationContext -> public final void scan(String... basePackages);1511949058;Perform a scan within the specified base packages. Note that {@link #refresh()}_must be called in order for the context to fully process the new class._@param basePackages the packages to check for annotated classes_@see #register(Class...)_@see #refresh();public final void scan(String... basePackages) {_		Assert.notEmpty(basePackages, "At least one base package must be specified")__		this.basePackages = basePackages__	};perform,a,scan,within,the,specified,base,packages,note,that,link,refresh,must,be,called,in,order,for,the,context,to,fully,process,the,new,class,param,base,packages,the,packages,to,check,for,annotated,classes,see,register,class,see,refresh;public,final,void,scan,string,base,packages,assert,not,empty,base,packages,at,least,one,base,package,must,be,specified,this,base,packages,base,packages
AnnotationConfigReactiveWebServerApplicationContext -> public final void scan(String... basePackages);1516215803;Perform a scan within the specified base packages. Note that {@link #refresh()}_must be called in order for the context to fully process the new class._@param basePackages the packages to check for annotated classes_@see #register(Class...)_@see #refresh();public final void scan(String... basePackages) {_		Assert.notEmpty(basePackages, "At least one base package must be specified")__		this.basePackages = basePackages__	};perform,a,scan,within,the,specified,base,packages,note,that,link,refresh,must,be,called,in,order,for,the,context,to,fully,process,the,new,class,param,base,packages,the,packages,to,check,for,annotated,classes,see,register,class,see,refresh;public,final,void,scan,string,base,packages,assert,not,empty,base,packages,at,least,one,base,package,must,be,specified,this,base,packages,base,packages
AnnotationConfigReactiveWebServerApplicationContext -> public final void scan(String... basePackages);1516346511;Perform a scan within the specified base packages. Note that {@link #refresh()}_must be called in order for the context to fully process the new class._@param basePackages the packages to check for annotated classes_@see #register(Class...)_@see #refresh();public final void scan(String... basePackages) {_		Assert.notEmpty(basePackages, "At least one base package must be specified")__		this.basePackages = basePackages__	};perform,a,scan,within,the,specified,base,packages,note,that,link,refresh,must,be,called,in,order,for,the,context,to,fully,process,the,new,class,param,base,packages,the,packages,to,check,for,annotated,classes,see,register,class,see,refresh;public,final,void,scan,string,base,packages,assert,not,empty,base,packages,at,least,one,base,package,must,be,specified,this,base,packages,base,packages
AnnotationConfigReactiveWebServerApplicationContext -> public AnnotationConfigReactiveWebServerApplicationContext(String... basePackages);1509761243;Create a new {@link AnnotationConfigReactiveWebServerApplicationContext}, scanning_for bean definitions in the given packages and automatically refreshing the_context._@param basePackages the packages to check for annotated classes;public AnnotationConfigReactiveWebServerApplicationContext(String... basePackages) {_		this()__		scan(basePackages)__		refresh()__	};create,a,new,link,annotation,config,reactive,web,server,application,context,scanning,for,bean,definitions,in,the,given,packages,and,automatically,refreshing,the,context,param,base,packages,the,packages,to,check,for,annotated,classes;public,annotation,config,reactive,web,server,application,context,string,base,packages,this,scan,base,packages,refresh
AnnotationConfigReactiveWebServerApplicationContext -> public AnnotationConfigReactiveWebServerApplicationContext(String... basePackages);1511070903;Create a new {@link AnnotationConfigReactiveWebServerApplicationContext}, scanning_for bean definitions in the given packages and automatically refreshing the_context._@param basePackages the packages to check for annotated classes;public AnnotationConfigReactiveWebServerApplicationContext(String... basePackages) {_		this()__		scan(basePackages)__		refresh()__	};create,a,new,link,annotation,config,reactive,web,server,application,context,scanning,for,bean,definitions,in,the,given,packages,and,automatically,refreshing,the,context,param,base,packages,the,packages,to,check,for,annotated,classes;public,annotation,config,reactive,web,server,application,context,string,base,packages,this,scan,base,packages,refresh
AnnotationConfigReactiveWebServerApplicationContext -> public AnnotationConfigReactiveWebServerApplicationContext(String... basePackages);1511858719;Create a new {@link AnnotationConfigReactiveWebServerApplicationContext}, scanning_for bean definitions in the given packages and automatically refreshing the_context._@param basePackages the packages to check for annotated classes;public AnnotationConfigReactiveWebServerApplicationContext(String... basePackages) {_		this()__		scan(basePackages)__		refresh()__	};create,a,new,link,annotation,config,reactive,web,server,application,context,scanning,for,bean,definitions,in,the,given,packages,and,automatically,refreshing,the,context,param,base,packages,the,packages,to,check,for,annotated,classes;public,annotation,config,reactive,web,server,application,context,string,base,packages,this,scan,base,packages,refresh
AnnotationConfigReactiveWebServerApplicationContext -> public AnnotationConfigReactiveWebServerApplicationContext(String... basePackages);1511949058;Create a new {@link AnnotationConfigReactiveWebServerApplicationContext}, scanning_for bean definitions in the given packages and automatically refreshing the_context._@param basePackages the packages to check for annotated classes;public AnnotationConfigReactiveWebServerApplicationContext(String... basePackages) {_		this()__		scan(basePackages)__		refresh()__	};create,a,new,link,annotation,config,reactive,web,server,application,context,scanning,for,bean,definitions,in,the,given,packages,and,automatically,refreshing,the,context,param,base,packages,the,packages,to,check,for,annotated,classes;public,annotation,config,reactive,web,server,application,context,string,base,packages,this,scan,base,packages,refresh
AnnotationConfigReactiveWebServerApplicationContext -> public AnnotationConfigReactiveWebServerApplicationContext(String... basePackages);1516215803;Create a new {@link AnnotationConfigReactiveWebServerApplicationContext}, scanning_for bean definitions in the given packages and automatically refreshing the_context._@param basePackages the packages to check for annotated classes;public AnnotationConfigReactiveWebServerApplicationContext(String... basePackages) {_		this()__		scan(basePackages)__		refresh()__	};create,a,new,link,annotation,config,reactive,web,server,application,context,scanning,for,bean,definitions,in,the,given,packages,and,automatically,refreshing,the,context,param,base,packages,the,packages,to,check,for,annotated,classes;public,annotation,config,reactive,web,server,application,context,string,base,packages,this,scan,base,packages,refresh
AnnotationConfigReactiveWebServerApplicationContext -> public AnnotationConfigReactiveWebServerApplicationContext(String... basePackages);1516346511;Create a new {@link AnnotationConfigReactiveWebServerApplicationContext}, scanning_for bean definitions in the given packages and automatically refreshing the_context._@param basePackages the packages to check for annotated classes;public AnnotationConfigReactiveWebServerApplicationContext(String... basePackages) {_		this()__		scan(basePackages)__		refresh()__	};create,a,new,link,annotation,config,reactive,web,server,application,context,scanning,for,bean,definitions,in,the,given,packages,and,automatically,refreshing,the,context,param,base,packages,the,packages,to,check,for,annotated,classes;public,annotation,config,reactive,web,server,application,context,string,base,packages,this,scan,base,packages,refresh
AnnotationConfigReactiveWebServerApplicationContext -> public AnnotationConfigReactiveWebServerApplicationContext(String... basePackages);1518429571;Create a new {@link AnnotationConfigReactiveWebServerApplicationContext}, scanning_for bean definitions in the given packages and automatically refreshing the_context._@param basePackages the packages to check for annotated classes;public AnnotationConfigReactiveWebServerApplicationContext(String... basePackages) {_		this()__		scan(basePackages)__		refresh()__	};create,a,new,link,annotation,config,reactive,web,server,application,context,scanning,for,bean,definitions,in,the,given,packages,and,automatically,refreshing,the,context,param,base,packages,the,packages,to,check,for,annotated,classes;public,annotation,config,reactive,web,server,application,context,string,base,packages,this,scan,base,packages,refresh
AnnotationConfigReactiveWebServerApplicationContext -> public AnnotationConfigReactiveWebServerApplicationContext(String... basePackages);1519362690;Create a new {@link AnnotationConfigReactiveWebServerApplicationContext}, scanning_for bean definitions in the given packages and automatically refreshing the_context._@param basePackages the packages to check for annotated classes;public AnnotationConfigReactiveWebServerApplicationContext(String... basePackages) {_		this()__		scan(basePackages)__		refresh()__	};create,a,new,link,annotation,config,reactive,web,server,application,context,scanning,for,bean,definitions,in,the,given,packages,and,automatically,refreshing,the,context,param,base,packages,the,packages,to,check,for,annotated,classes;public,annotation,config,reactive,web,server,application,context,string,base,packages,this,scan,base,packages,refresh
AnnotationConfigReactiveWebServerApplicationContext -> @Override 	public final void scan(String... basePackages);1518429571;Perform a scan within the specified base packages. Note that {@link #refresh()}_must be called in order for the context to fully process the new class._@param basePackages the packages to check for annotated classes_@see #register(Class...)_@see #refresh();@Override_	public final void scan(String... basePackages) {_		Assert.notEmpty(basePackages, "At least one base package must be specified")__		this.basePackages = basePackages__	};perform,a,scan,within,the,specified,base,packages,note,that,link,refresh,must,be,called,in,order,for,the,context,to,fully,process,the,new,class,param,base,packages,the,packages,to,check,for,annotated,classes,see,register,class,see,refresh;override,public,final,void,scan,string,base,packages,assert,not,empty,base,packages,at,least,one,base,package,must,be,specified,this,base,packages,base,packages
AnnotationConfigReactiveWebServerApplicationContext -> @Override 	public final void scan(String... basePackages);1519362690;Perform a scan within the specified base packages. Note that {@link #refresh()}_must be called in order for the context to fully process the new class._@param basePackages the packages to check for annotated classes_@see #register(Class...)_@see #refresh();@Override_	public final void scan(String... basePackages) {_		Assert.notEmpty(basePackages, "At least one base package must be specified")__		this.basePackages = basePackages__	};perform,a,scan,within,the,specified,base,packages,note,that,link,refresh,must,be,called,in,order,for,the,context,to,fully,process,the,new,class,param,base,packages,the,packages,to,check,for,annotated,classes,see,register,class,see,refresh;override,public,final,void,scan,string,base,packages,assert,not,empty,base,packages,at,least,one,base,package,must,be,specified,this,base,packages,base,packages
AnnotationConfigReactiveWebServerApplicationContext -> public void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver);1509761243;Set the {@link ScopeMetadataResolver} to use for detected bean classes._<p>_The default is an {@link AnnotationScopeMetadataResolver}._<p>_Any call to this method must occur prior to calls to {@link #register(Class...)}_and/or {@link #scan(String...)}._@param scopeMetadataResolver the scope metadata resolver;public void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver) {_		this.reader.setScopeMetadataResolver(scopeMetadataResolver)__		this.scanner.setScopeMetadataResolver(scopeMetadataResolver)__	};set,the,link,scope,metadata,resolver,to,use,for,detected,bean,classes,p,the,default,is,an,link,annotation,scope,metadata,resolver,p,any,call,to,this,method,must,occur,prior,to,calls,to,link,register,class,and,or,link,scan,string,param,scope,metadata,resolver,the,scope,metadata,resolver;public,void,set,scope,metadata,resolver,scope,metadata,resolver,scope,metadata,resolver,this,reader,set,scope,metadata,resolver,scope,metadata,resolver,this,scanner,set,scope,metadata,resolver,scope,metadata,resolver
AnnotationConfigReactiveWebServerApplicationContext -> public void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver);1511070903;Set the {@link ScopeMetadataResolver} to use for detected bean classes._<p>_The default is an {@link AnnotationScopeMetadataResolver}._<p>_Any call to this method must occur prior to calls to {@link #register(Class...)}_and/or {@link #scan(String...)}._@param scopeMetadataResolver the scope metadata resolver;public void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver) {_		this.reader.setScopeMetadataResolver(scopeMetadataResolver)__		this.scanner.setScopeMetadataResolver(scopeMetadataResolver)__	};set,the,link,scope,metadata,resolver,to,use,for,detected,bean,classes,p,the,default,is,an,link,annotation,scope,metadata,resolver,p,any,call,to,this,method,must,occur,prior,to,calls,to,link,register,class,and,or,link,scan,string,param,scope,metadata,resolver,the,scope,metadata,resolver;public,void,set,scope,metadata,resolver,scope,metadata,resolver,scope,metadata,resolver,this,reader,set,scope,metadata,resolver,scope,metadata,resolver,this,scanner,set,scope,metadata,resolver,scope,metadata,resolver
AnnotationConfigReactiveWebServerApplicationContext -> public void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver);1511858719;Set the {@link ScopeMetadataResolver} to use for detected bean classes._<p>_The default is an {@link AnnotationScopeMetadataResolver}._<p>_Any call to this method must occur prior to calls to {@link #register(Class...)}_and/or {@link #scan(String...)}._@param scopeMetadataResolver the scope metadata resolver;public void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver) {_		this.reader.setScopeMetadataResolver(scopeMetadataResolver)__		this.scanner.setScopeMetadataResolver(scopeMetadataResolver)__	};set,the,link,scope,metadata,resolver,to,use,for,detected,bean,classes,p,the,default,is,an,link,annotation,scope,metadata,resolver,p,any,call,to,this,method,must,occur,prior,to,calls,to,link,register,class,and,or,link,scan,string,param,scope,metadata,resolver,the,scope,metadata,resolver;public,void,set,scope,metadata,resolver,scope,metadata,resolver,scope,metadata,resolver,this,reader,set,scope,metadata,resolver,scope,metadata,resolver,this,scanner,set,scope,metadata,resolver,scope,metadata,resolver
AnnotationConfigReactiveWebServerApplicationContext -> public void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver);1511949058;Set the {@link ScopeMetadataResolver} to use for detected bean classes._<p>_The default is an {@link AnnotationScopeMetadataResolver}._<p>_Any call to this method must occur prior to calls to {@link #register(Class...)}_and/or {@link #scan(String...)}._@param scopeMetadataResolver the scope metadata resolver;public void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver) {_		this.reader.setScopeMetadataResolver(scopeMetadataResolver)__		this.scanner.setScopeMetadataResolver(scopeMetadataResolver)__	};set,the,link,scope,metadata,resolver,to,use,for,detected,bean,classes,p,the,default,is,an,link,annotation,scope,metadata,resolver,p,any,call,to,this,method,must,occur,prior,to,calls,to,link,register,class,and,or,link,scan,string,param,scope,metadata,resolver,the,scope,metadata,resolver;public,void,set,scope,metadata,resolver,scope,metadata,resolver,scope,metadata,resolver,this,reader,set,scope,metadata,resolver,scope,metadata,resolver,this,scanner,set,scope,metadata,resolver,scope,metadata,resolver
AnnotationConfigReactiveWebServerApplicationContext -> public void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver);1516215803;Set the {@link ScopeMetadataResolver} to use for detected bean classes._<p>_The default is an {@link AnnotationScopeMetadataResolver}._<p>_Any call to this method must occur prior to calls to {@link #register(Class...)}_and/or {@link #scan(String...)}._@param scopeMetadataResolver the scope metadata resolver;public void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver) {_		this.reader.setScopeMetadataResolver(scopeMetadataResolver)__		this.scanner.setScopeMetadataResolver(scopeMetadataResolver)__	};set,the,link,scope,metadata,resolver,to,use,for,detected,bean,classes,p,the,default,is,an,link,annotation,scope,metadata,resolver,p,any,call,to,this,method,must,occur,prior,to,calls,to,link,register,class,and,or,link,scan,string,param,scope,metadata,resolver,the,scope,metadata,resolver;public,void,set,scope,metadata,resolver,scope,metadata,resolver,scope,metadata,resolver,this,reader,set,scope,metadata,resolver,scope,metadata,resolver,this,scanner,set,scope,metadata,resolver,scope,metadata,resolver
AnnotationConfigReactiveWebServerApplicationContext -> public void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver);1516346511;Set the {@link ScopeMetadataResolver} to use for detected bean classes._<p>_The default is an {@link AnnotationScopeMetadataResolver}._<p>_Any call to this method must occur prior to calls to {@link #register(Class...)}_and/or {@link #scan(String...)}._@param scopeMetadataResolver the scope metadata resolver;public void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver) {_		this.reader.setScopeMetadataResolver(scopeMetadataResolver)__		this.scanner.setScopeMetadataResolver(scopeMetadataResolver)__	};set,the,link,scope,metadata,resolver,to,use,for,detected,bean,classes,p,the,default,is,an,link,annotation,scope,metadata,resolver,p,any,call,to,this,method,must,occur,prior,to,calls,to,link,register,class,and,or,link,scan,string,param,scope,metadata,resolver,the,scope,metadata,resolver;public,void,set,scope,metadata,resolver,scope,metadata,resolver,scope,metadata,resolver,this,reader,set,scope,metadata,resolver,scope,metadata,resolver,this,scanner,set,scope,metadata,resolver,scope,metadata,resolver
AnnotationConfigReactiveWebServerApplicationContext -> public void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver);1518429571;Set the {@link ScopeMetadataResolver} to use for detected bean classes._<p>_The default is an {@link AnnotationScopeMetadataResolver}._<p>_Any call to this method must occur prior to calls to {@link #register(Class...)}_and/or {@link #scan(String...)}._@param scopeMetadataResolver the scope metadata resolver;public void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver) {_		this.reader.setScopeMetadataResolver(scopeMetadataResolver)__		this.scanner.setScopeMetadataResolver(scopeMetadataResolver)__	};set,the,link,scope,metadata,resolver,to,use,for,detected,bean,classes,p,the,default,is,an,link,annotation,scope,metadata,resolver,p,any,call,to,this,method,must,occur,prior,to,calls,to,link,register,class,and,or,link,scan,string,param,scope,metadata,resolver,the,scope,metadata,resolver;public,void,set,scope,metadata,resolver,scope,metadata,resolver,scope,metadata,resolver,this,reader,set,scope,metadata,resolver,scope,metadata,resolver,this,scanner,set,scope,metadata,resolver,scope,metadata,resolver
AnnotationConfigReactiveWebServerApplicationContext -> public void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver);1519362690;Set the {@link ScopeMetadataResolver} to use for detected bean classes._<p>_The default is an {@link AnnotationScopeMetadataResolver}._<p>_Any call to this method must occur prior to calls to {@link #register(Class...)}_and/or {@link #scan(String...)}._@param scopeMetadataResolver the scope metadata resolver;public void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver) {_		this.reader.setScopeMetadataResolver(scopeMetadataResolver)__		this.scanner.setScopeMetadataResolver(scopeMetadataResolver)__	};set,the,link,scope,metadata,resolver,to,use,for,detected,bean,classes,p,the,default,is,an,link,annotation,scope,metadata,resolver,p,any,call,to,this,method,must,occur,prior,to,calls,to,link,register,class,and,or,link,scan,string,param,scope,metadata,resolver,the,scope,metadata,resolver;public,void,set,scope,metadata,resolver,scope,metadata,resolver,scope,metadata,resolver,this,reader,set,scope,metadata,resolver,scope,metadata,resolver,this,scanner,set,scope,metadata,resolver,scope,metadata,resolver
AnnotationConfigReactiveWebServerApplicationContext -> public AnnotationConfigReactiveWebServerApplicationContext();1509761243;Create a new {@link AnnotationConfigReactiveWebServerApplicationContext} that needs_to be populated through {@link #register} calls and then manually_{@linkplain #refresh refreshed}.;public AnnotationConfigReactiveWebServerApplicationContext() {_		this.reader = new AnnotatedBeanDefinitionReader(this)__		this.scanner = new ClassPathBeanDefinitionScanner(this)__	};create,a,new,link,annotation,config,reactive,web,server,application,context,that,needs,to,be,populated,through,link,register,calls,and,then,manually,linkplain,refresh,refreshed;public,annotation,config,reactive,web,server,application,context,this,reader,new,annotated,bean,definition,reader,this,this,scanner,new,class,path,bean,definition,scanner,this
AnnotationConfigReactiveWebServerApplicationContext -> public AnnotationConfigReactiveWebServerApplicationContext();1511070903;Create a new {@link AnnotationConfigReactiveWebServerApplicationContext} that needs_to be populated through {@link #register} calls and then manually_{@linkplain #refresh refreshed}.;public AnnotationConfigReactiveWebServerApplicationContext() {_		this.reader = new AnnotatedBeanDefinitionReader(this)__		this.scanner = new ClassPathBeanDefinitionScanner(this)__	};create,a,new,link,annotation,config,reactive,web,server,application,context,that,needs,to,be,populated,through,link,register,calls,and,then,manually,linkplain,refresh,refreshed;public,annotation,config,reactive,web,server,application,context,this,reader,new,annotated,bean,definition,reader,this,this,scanner,new,class,path,bean,definition,scanner,this
AnnotationConfigReactiveWebServerApplicationContext -> public AnnotationConfigReactiveWebServerApplicationContext();1511858719;Create a new {@link AnnotationConfigReactiveWebServerApplicationContext} that needs_to be populated through {@link #register} calls and then manually_{@linkplain #refresh refreshed}.;public AnnotationConfigReactiveWebServerApplicationContext() {_		this.reader = new AnnotatedBeanDefinitionReader(this)__		this.scanner = new ClassPathBeanDefinitionScanner(this)__	};create,a,new,link,annotation,config,reactive,web,server,application,context,that,needs,to,be,populated,through,link,register,calls,and,then,manually,linkplain,refresh,refreshed;public,annotation,config,reactive,web,server,application,context,this,reader,new,annotated,bean,definition,reader,this,this,scanner,new,class,path,bean,definition,scanner,this
AnnotationConfigReactiveWebServerApplicationContext -> public AnnotationConfigReactiveWebServerApplicationContext();1511949058;Create a new {@link AnnotationConfigReactiveWebServerApplicationContext} that needs_to be populated through {@link #register} calls and then manually_{@linkplain #refresh refreshed}.;public AnnotationConfigReactiveWebServerApplicationContext() {_		this.reader = new AnnotatedBeanDefinitionReader(this)__		this.scanner = new ClassPathBeanDefinitionScanner(this)__	};create,a,new,link,annotation,config,reactive,web,server,application,context,that,needs,to,be,populated,through,link,register,calls,and,then,manually,linkplain,refresh,refreshed;public,annotation,config,reactive,web,server,application,context,this,reader,new,annotated,bean,definition,reader,this,this,scanner,new,class,path,bean,definition,scanner,this
AnnotationConfigReactiveWebServerApplicationContext -> public AnnotationConfigReactiveWebServerApplicationContext();1516215803;Create a new {@link AnnotationConfigReactiveWebServerApplicationContext} that needs_to be populated through {@link #register} calls and then manually_{@linkplain #refresh refreshed}.;public AnnotationConfigReactiveWebServerApplicationContext() {_		this.reader = new AnnotatedBeanDefinitionReader(this)__		this.scanner = new ClassPathBeanDefinitionScanner(this)__	};create,a,new,link,annotation,config,reactive,web,server,application,context,that,needs,to,be,populated,through,link,register,calls,and,then,manually,linkplain,refresh,refreshed;public,annotation,config,reactive,web,server,application,context,this,reader,new,annotated,bean,definition,reader,this,this,scanner,new,class,path,bean,definition,scanner,this
AnnotationConfigReactiveWebServerApplicationContext -> public AnnotationConfigReactiveWebServerApplicationContext();1516346511;Create a new {@link AnnotationConfigReactiveWebServerApplicationContext} that needs_to be populated through {@link #register} calls and then manually_{@linkplain #refresh refreshed}.;public AnnotationConfigReactiveWebServerApplicationContext() {_		this.reader = new AnnotatedBeanDefinitionReader(this)__		this.scanner = new ClassPathBeanDefinitionScanner(this)__	};create,a,new,link,annotation,config,reactive,web,server,application,context,that,needs,to,be,populated,through,link,register,calls,and,then,manually,linkplain,refresh,refreshed;public,annotation,config,reactive,web,server,application,context,this,reader,new,annotated,bean,definition,reader,this,this,scanner,new,class,path,bean,definition,scanner,this
AnnotationConfigReactiveWebServerApplicationContext -> public AnnotationConfigReactiveWebServerApplicationContext();1518429571;Create a new {@link AnnotationConfigReactiveWebServerApplicationContext} that needs_to be populated through {@link #register} calls and then manually_{@linkplain #refresh refreshed}.;public AnnotationConfigReactiveWebServerApplicationContext() {_		this.reader = new AnnotatedBeanDefinitionReader(this)__		this.scanner = new ClassPathBeanDefinitionScanner(this)__	};create,a,new,link,annotation,config,reactive,web,server,application,context,that,needs,to,be,populated,through,link,register,calls,and,then,manually,linkplain,refresh,refreshed;public,annotation,config,reactive,web,server,application,context,this,reader,new,annotated,bean,definition,reader,this,this,scanner,new,class,path,bean,definition,scanner,this
AnnotationConfigReactiveWebServerApplicationContext -> public AnnotationConfigReactiveWebServerApplicationContext();1519362690;Create a new {@link AnnotationConfigReactiveWebServerApplicationContext} that needs_to be populated through {@link #register} calls and then manually_{@linkplain #refresh refreshed}.;public AnnotationConfigReactiveWebServerApplicationContext() {_		this.reader = new AnnotatedBeanDefinitionReader(this)__		this.scanner = new ClassPathBeanDefinitionScanner(this)__	};create,a,new,link,annotation,config,reactive,web,server,application,context,that,needs,to,be,populated,through,link,register,calls,and,then,manually,linkplain,refresh,refreshed;public,annotation,config,reactive,web,server,application,context,this,reader,new,annotated,bean,definition,reader,this,this,scanner,new,class,path,bean,definition,scanner,this
AnnotationConfigReactiveWebServerApplicationContext -> public final void register(Class<?>... annotatedClasses);1509761243;Register one or more annotated classes to be processed. Note that_{@link #refresh()} must be called in order for the context to fully process the new_class._<p>_Calls to {@code #register} are idempotent_ adding the same annotated class more_than once has no additional effect._@param annotatedClasses one or more annotated classes, e.g. {@code @Configuration}_classes_@see #scan(String...)_@see #refresh();public final void register(Class<?>... annotatedClasses) {_		this.annotatedClasses = annotatedClasses__		Assert.notEmpty(annotatedClasses,_				"At least one annotated class must be specified")__	};register,one,or,more,annotated,classes,to,be,processed,note,that,link,refresh,must,be,called,in,order,for,the,context,to,fully,process,the,new,class,p,calls,to,code,register,are,idempotent,adding,the,same,annotated,class,more,than,once,has,no,additional,effect,param,annotated,classes,one,or,more,annotated,classes,e,g,code,configuration,classes,see,scan,string,see,refresh;public,final,void,register,class,annotated,classes,this,annotated,classes,annotated,classes,assert,not,empty,annotated,classes,at,least,one,annotated,class,must,be,specified
AnnotationConfigReactiveWebServerApplicationContext -> public final void register(Class<?>... annotatedClasses);1511070903;Register one or more annotated classes to be processed. Note that_{@link #refresh()} must be called in order for the context to fully process the new_class._<p>_Calls to {@code #register} are idempotent_ adding the same annotated class more_than once has no additional effect._@param annotatedClasses one or more annotated classes, e.g. {@code @Configuration}_classes_@see #scan(String...)_@see #refresh();public final void register(Class<?>... annotatedClasses) {_		this.annotatedClasses = annotatedClasses__		Assert.notEmpty(annotatedClasses,_				"At least one annotated class must be specified")__	};register,one,or,more,annotated,classes,to,be,processed,note,that,link,refresh,must,be,called,in,order,for,the,context,to,fully,process,the,new,class,p,calls,to,code,register,are,idempotent,adding,the,same,annotated,class,more,than,once,has,no,additional,effect,param,annotated,classes,one,or,more,annotated,classes,e,g,code,configuration,classes,see,scan,string,see,refresh;public,final,void,register,class,annotated,classes,this,annotated,classes,annotated,classes,assert,not,empty,annotated,classes,at,least,one,annotated,class,must,be,specified
AnnotationConfigReactiveWebServerApplicationContext -> public final void register(Class<?>... annotatedClasses);1511858719;Register one or more annotated classes to be processed. Note that_{@link #refresh()} must be called in order for the context to fully process the new_class._<p>_Calls to {@code #register} are idempotent_ adding the same annotated class more_than once has no additional effect._@param annotatedClasses one or more annotated classes, e.g. {@code @Configuration}_classes_@see #scan(String...)_@see #refresh();public final void register(Class<?>... annotatedClasses) {_		Assert.notEmpty(annotatedClasses,_				"At least one annotated class must be specified")__		this.annotatedClasses = annotatedClasses__	};register,one,or,more,annotated,classes,to,be,processed,note,that,link,refresh,must,be,called,in,order,for,the,context,to,fully,process,the,new,class,p,calls,to,code,register,are,idempotent,adding,the,same,annotated,class,more,than,once,has,no,additional,effect,param,annotated,classes,one,or,more,annotated,classes,e,g,code,configuration,classes,see,scan,string,see,refresh;public,final,void,register,class,annotated,classes,assert,not,empty,annotated,classes,at,least,one,annotated,class,must,be,specified,this,annotated,classes,annotated,classes
AnnotationConfigReactiveWebServerApplicationContext -> public final void register(Class<?>... annotatedClasses);1511949058;Register one or more annotated classes to be processed. Note that_{@link #refresh()} must be called in order for the context to fully process the new_class._<p>_Calls to {@code #register} are idempotent_ adding the same annotated class more_than once has no additional effect._@param annotatedClasses one or more annotated classes, e.g. {@code @Configuration}_classes_@see #scan(String...)_@see #refresh();public final void register(Class<?>... annotatedClasses) {_		Assert.notEmpty(annotatedClasses,_				"At least one annotated class must be specified")__		this.annotatedClasses = annotatedClasses__	};register,one,or,more,annotated,classes,to,be,processed,note,that,link,refresh,must,be,called,in,order,for,the,context,to,fully,process,the,new,class,p,calls,to,code,register,are,idempotent,adding,the,same,annotated,class,more,than,once,has,no,additional,effect,param,annotated,classes,one,or,more,annotated,classes,e,g,code,configuration,classes,see,scan,string,see,refresh;public,final,void,register,class,annotated,classes,assert,not,empty,annotated,classes,at,least,one,annotated,class,must,be,specified,this,annotated,classes,annotated,classes
AnnotationConfigReactiveWebServerApplicationContext -> public final void register(Class<?>... annotatedClasses);1516215803;Register one or more annotated classes to be processed. Note that_{@link #refresh()} must be called in order for the context to fully process the new_class._<p>_Calls to {@code #register} are idempotent_ adding the same annotated class more_than once has no additional effect._@param annotatedClasses one or more annotated classes, e.g. {@code @Configuration}_classes_@see #scan(String...)_@see #refresh();public final void register(Class<?>... annotatedClasses) {_		Assert.notEmpty(annotatedClasses,_				"At least one annotated class must be specified")__		this.annotatedClasses = annotatedClasses__	};register,one,or,more,annotated,classes,to,be,processed,note,that,link,refresh,must,be,called,in,order,for,the,context,to,fully,process,the,new,class,p,calls,to,code,register,are,idempotent,adding,the,same,annotated,class,more,than,once,has,no,additional,effect,param,annotated,classes,one,or,more,annotated,classes,e,g,code,configuration,classes,see,scan,string,see,refresh;public,final,void,register,class,annotated,classes,assert,not,empty,annotated,classes,at,least,one,annotated,class,must,be,specified,this,annotated,classes,annotated,classes
AnnotationConfigReactiveWebServerApplicationContext -> public final void register(Class<?>... annotatedClasses);1516346511;Register one or more annotated classes to be processed. Note that_{@link #refresh()} must be called in order for the context to fully process the new_class._<p>_Calls to {@code #register} are idempotent_ adding the same annotated class more_than once has no additional effect._@param annotatedClasses one or more annotated classes, e.g. {@code @Configuration}_classes_@see #scan(String...)_@see #refresh();public final void register(Class<?>... annotatedClasses) {_		Assert.notEmpty(annotatedClasses,_				"At least one annotated class must be specified")__		this.annotatedClasses = annotatedClasses__	};register,one,or,more,annotated,classes,to,be,processed,note,that,link,refresh,must,be,called,in,order,for,the,context,to,fully,process,the,new,class,p,calls,to,code,register,are,idempotent,adding,the,same,annotated,class,more,than,once,has,no,additional,effect,param,annotated,classes,one,or,more,annotated,classes,e,g,code,configuration,classes,see,scan,string,see,refresh;public,final,void,register,class,annotated,classes,assert,not,empty,annotated,classes,at,least,one,annotated,class,must,be,specified,this,annotated,classes,annotated,classes
AnnotationConfigReactiveWebServerApplicationContext -> public AnnotationConfigReactiveWebServerApplicationContext( 			Class<?>... annotatedClasses);1509761243;Create a new {@link AnnotationConfigReactiveWebServerApplicationContext}, deriving_bean definitions from the given annotated classes and automatically refreshing the_context._@param annotatedClasses one or more annotated classes, e.g. {@code @Configuration}_classes;public AnnotationConfigReactiveWebServerApplicationContext(_			Class<?>... annotatedClasses) {_		this()__		register(annotatedClasses)__		refresh()__	};create,a,new,link,annotation,config,reactive,web,server,application,context,deriving,bean,definitions,from,the,given,annotated,classes,and,automatically,refreshing,the,context,param,annotated,classes,one,or,more,annotated,classes,e,g,code,configuration,classes;public,annotation,config,reactive,web,server,application,context,class,annotated,classes,this,register,annotated,classes,refresh
AnnotationConfigReactiveWebServerApplicationContext -> public AnnotationConfigReactiveWebServerApplicationContext( 			Class<?>... annotatedClasses);1511070903;Create a new {@link AnnotationConfigReactiveWebServerApplicationContext}, deriving_bean definitions from the given annotated classes and automatically refreshing the_context._@param annotatedClasses one or more annotated classes, e.g. {@code @Configuration}_classes;public AnnotationConfigReactiveWebServerApplicationContext(_			Class<?>... annotatedClasses) {_		this()__		register(annotatedClasses)__		refresh()__	};create,a,new,link,annotation,config,reactive,web,server,application,context,deriving,bean,definitions,from,the,given,annotated,classes,and,automatically,refreshing,the,context,param,annotated,classes,one,or,more,annotated,classes,e,g,code,configuration,classes;public,annotation,config,reactive,web,server,application,context,class,annotated,classes,this,register,annotated,classes,refresh
AnnotationConfigReactiveWebServerApplicationContext -> public AnnotationConfigReactiveWebServerApplicationContext( 			Class<?>... annotatedClasses);1511858719;Create a new {@link AnnotationConfigReactiveWebServerApplicationContext}, deriving_bean definitions from the given annotated classes and automatically refreshing the_context._@param annotatedClasses one or more annotated classes, e.g. {@code @Configuration}_classes;public AnnotationConfigReactiveWebServerApplicationContext(_			Class<?>... annotatedClasses) {_		this()__		register(annotatedClasses)__		refresh()__	};create,a,new,link,annotation,config,reactive,web,server,application,context,deriving,bean,definitions,from,the,given,annotated,classes,and,automatically,refreshing,the,context,param,annotated,classes,one,or,more,annotated,classes,e,g,code,configuration,classes;public,annotation,config,reactive,web,server,application,context,class,annotated,classes,this,register,annotated,classes,refresh
AnnotationConfigReactiveWebServerApplicationContext -> public AnnotationConfigReactiveWebServerApplicationContext( 			Class<?>... annotatedClasses);1511949058;Create a new {@link AnnotationConfigReactiveWebServerApplicationContext}, deriving_bean definitions from the given annotated classes and automatically refreshing the_context._@param annotatedClasses one or more annotated classes, e.g. {@code @Configuration}_classes;public AnnotationConfigReactiveWebServerApplicationContext(_			Class<?>... annotatedClasses) {_		this()__		register(annotatedClasses)__		refresh()__	};create,a,new,link,annotation,config,reactive,web,server,application,context,deriving,bean,definitions,from,the,given,annotated,classes,and,automatically,refreshing,the,context,param,annotated,classes,one,or,more,annotated,classes,e,g,code,configuration,classes;public,annotation,config,reactive,web,server,application,context,class,annotated,classes,this,register,annotated,classes,refresh
AnnotationConfigReactiveWebServerApplicationContext -> public AnnotationConfigReactiveWebServerApplicationContext( 			Class<?>... annotatedClasses);1516215803;Create a new {@link AnnotationConfigReactiveWebServerApplicationContext}, deriving_bean definitions from the given annotated classes and automatically refreshing the_context._@param annotatedClasses one or more annotated classes, e.g. {@code @Configuration}_classes;public AnnotationConfigReactiveWebServerApplicationContext(_			Class<?>... annotatedClasses) {_		this()__		register(annotatedClasses)__		refresh()__	};create,a,new,link,annotation,config,reactive,web,server,application,context,deriving,bean,definitions,from,the,given,annotated,classes,and,automatically,refreshing,the,context,param,annotated,classes,one,or,more,annotated,classes,e,g,code,configuration,classes;public,annotation,config,reactive,web,server,application,context,class,annotated,classes,this,register,annotated,classes,refresh
AnnotationConfigReactiveWebServerApplicationContext -> public AnnotationConfigReactiveWebServerApplicationContext( 			Class<?>... annotatedClasses);1516346511;Create a new {@link AnnotationConfigReactiveWebServerApplicationContext}, deriving_bean definitions from the given annotated classes and automatically refreshing the_context._@param annotatedClasses one or more annotated classes, e.g. {@code @Configuration}_classes;public AnnotationConfigReactiveWebServerApplicationContext(_			Class<?>... annotatedClasses) {_		this()__		register(annotatedClasses)__		refresh()__	};create,a,new,link,annotation,config,reactive,web,server,application,context,deriving,bean,definitions,from,the,given,annotated,classes,and,automatically,refreshing,the,context,param,annotated,classes,one,or,more,annotated,classes,e,g,code,configuration,classes;public,annotation,config,reactive,web,server,application,context,class,annotated,classes,this,register,annotated,classes,refresh
AnnotationConfigReactiveWebServerApplicationContext -> public AnnotationConfigReactiveWebServerApplicationContext( 			Class<?>... annotatedClasses);1518429571;Create a new {@link AnnotationConfigReactiveWebServerApplicationContext}, deriving_bean definitions from the given annotated classes and automatically refreshing the_context._@param annotatedClasses one or more annotated classes, e.g. {@code @Configuration}_classes;public AnnotationConfigReactiveWebServerApplicationContext(_			Class<?>... annotatedClasses) {_		this()__		register(annotatedClasses)__		refresh()__	};create,a,new,link,annotation,config,reactive,web,server,application,context,deriving,bean,definitions,from,the,given,annotated,classes,and,automatically,refreshing,the,context,param,annotated,classes,one,or,more,annotated,classes,e,g,code,configuration,classes;public,annotation,config,reactive,web,server,application,context,class,annotated,classes,this,register,annotated,classes,refresh
AnnotationConfigReactiveWebServerApplicationContext -> public AnnotationConfigReactiveWebServerApplicationContext( 			Class<?>... annotatedClasses);1519362690;Create a new {@link AnnotationConfigReactiveWebServerApplicationContext}, deriving_bean definitions from the given annotated classes and automatically refreshing the_context._@param annotatedClasses one or more annotated classes, e.g. {@code @Configuration}_classes;public AnnotationConfigReactiveWebServerApplicationContext(_			Class<?>... annotatedClasses) {_		this()__		register(annotatedClasses)__		refresh()__	};create,a,new,link,annotation,config,reactive,web,server,application,context,deriving,bean,definitions,from,the,given,annotated,classes,and,automatically,refreshing,the,context,param,annotated,classes,one,or,more,annotated,classes,e,g,code,configuration,classes;public,annotation,config,reactive,web,server,application,context,class,annotated,classes,this,register,annotated,classes,refresh
AnnotationConfigReactiveWebServerApplicationContext -> @Override 	public void setEnvironment(ConfigurableEnvironment environment);1509761243;{@inheritDoc}_<p>_Delegates given environment to underlying {@link AnnotatedBeanDefinitionReader} and_{@link ClassPathBeanDefinitionScanner} members.;@Override_	public void setEnvironment(ConfigurableEnvironment environment) {_		super.setEnvironment(environment)__		this.reader.setEnvironment(environment)__		this.scanner.setEnvironment(environment)__	};inherit,doc,p,delegates,given,environment,to,underlying,link,annotated,bean,definition,reader,and,link,class,path,bean,definition,scanner,members;override,public,void,set,environment,configurable,environment,environment,super,set,environment,environment,this,reader,set,environment,environment,this,scanner,set,environment,environment
AnnotationConfigReactiveWebServerApplicationContext -> @Override 	public void setEnvironment(ConfigurableEnvironment environment);1511070903;{@inheritDoc}_<p>_Delegates given environment to underlying {@link AnnotatedBeanDefinitionReader} and_{@link ClassPathBeanDefinitionScanner} members.;@Override_	public void setEnvironment(ConfigurableEnvironment environment) {_		super.setEnvironment(environment)__		this.reader.setEnvironment(environment)__		this.scanner.setEnvironment(environment)__	};inherit,doc,p,delegates,given,environment,to,underlying,link,annotated,bean,definition,reader,and,link,class,path,bean,definition,scanner,members;override,public,void,set,environment,configurable,environment,environment,super,set,environment,environment,this,reader,set,environment,environment,this,scanner,set,environment,environment
AnnotationConfigReactiveWebServerApplicationContext -> @Override 	public void setEnvironment(ConfigurableEnvironment environment);1511858719;{@inheritDoc}_<p>_Delegates given environment to underlying {@link AnnotatedBeanDefinitionReader} and_{@link ClassPathBeanDefinitionScanner} members.;@Override_	public void setEnvironment(ConfigurableEnvironment environment) {_		super.setEnvironment(environment)__		this.reader.setEnvironment(environment)__		this.scanner.setEnvironment(environment)__	};inherit,doc,p,delegates,given,environment,to,underlying,link,annotated,bean,definition,reader,and,link,class,path,bean,definition,scanner,members;override,public,void,set,environment,configurable,environment,environment,super,set,environment,environment,this,reader,set,environment,environment,this,scanner,set,environment,environment
AnnotationConfigReactiveWebServerApplicationContext -> @Override 	public void setEnvironment(ConfigurableEnvironment environment);1511949058;{@inheritDoc}_<p>_Delegates given environment to underlying {@link AnnotatedBeanDefinitionReader} and_{@link ClassPathBeanDefinitionScanner} members.;@Override_	public void setEnvironment(ConfigurableEnvironment environment) {_		super.setEnvironment(environment)__		this.reader.setEnvironment(environment)__		this.scanner.setEnvironment(environment)__	};inherit,doc,p,delegates,given,environment,to,underlying,link,annotated,bean,definition,reader,and,link,class,path,bean,definition,scanner,members;override,public,void,set,environment,configurable,environment,environment,super,set,environment,environment,this,reader,set,environment,environment,this,scanner,set,environment,environment
AnnotationConfigReactiveWebServerApplicationContext -> @Override 	public void setEnvironment(ConfigurableEnvironment environment);1516215803;{@inheritDoc}_<p>_Delegates given environment to underlying {@link AnnotatedBeanDefinitionReader} and_{@link ClassPathBeanDefinitionScanner} members.;@Override_	public void setEnvironment(ConfigurableEnvironment environment) {_		super.setEnvironment(environment)__		this.reader.setEnvironment(environment)__		this.scanner.setEnvironment(environment)__	};inherit,doc,p,delegates,given,environment,to,underlying,link,annotated,bean,definition,reader,and,link,class,path,bean,definition,scanner,members;override,public,void,set,environment,configurable,environment,environment,super,set,environment,environment,this,reader,set,environment,environment,this,scanner,set,environment,environment
AnnotationConfigReactiveWebServerApplicationContext -> @Override 	public void setEnvironment(ConfigurableEnvironment environment);1516346511;{@inheritDoc}_<p>_Delegates given environment to underlying {@link AnnotatedBeanDefinitionReader} and_{@link ClassPathBeanDefinitionScanner} members.;@Override_	public void setEnvironment(ConfigurableEnvironment environment) {_		super.setEnvironment(environment)__		this.reader.setEnvironment(environment)__		this.scanner.setEnvironment(environment)__	};inherit,doc,p,delegates,given,environment,to,underlying,link,annotated,bean,definition,reader,and,link,class,path,bean,definition,scanner,members;override,public,void,set,environment,configurable,environment,environment,super,set,environment,environment,this,reader,set,environment,environment,this,scanner,set,environment,environment
AnnotationConfigReactiveWebServerApplicationContext -> @Override 	public void setEnvironment(ConfigurableEnvironment environment);1518429571;{@inheritDoc}_<p>_Delegates given environment to underlying {@link AnnotatedBeanDefinitionReader} and_{@link ClassPathBeanDefinitionScanner} members.;@Override_	public void setEnvironment(ConfigurableEnvironment environment) {_		super.setEnvironment(environment)__		this.reader.setEnvironment(environment)__		this.scanner.setEnvironment(environment)__	};inherit,doc,p,delegates,given,environment,to,underlying,link,annotated,bean,definition,reader,and,link,class,path,bean,definition,scanner,members;override,public,void,set,environment,configurable,environment,environment,super,set,environment,environment,this,reader,set,environment,environment,this,scanner,set,environment,environment
AnnotationConfigReactiveWebServerApplicationContext -> @Override 	public void setEnvironment(ConfigurableEnvironment environment);1519362690;{@inheritDoc}_<p>_Delegates given environment to underlying {@link AnnotatedBeanDefinitionReader} and_{@link ClassPathBeanDefinitionScanner} members.;@Override_	public void setEnvironment(ConfigurableEnvironment environment) {_		super.setEnvironment(environment)__		this.reader.setEnvironment(environment)__		this.scanner.setEnvironment(environment)__	};inherit,doc,p,delegates,given,environment,to,underlying,link,annotated,bean,definition,reader,and,link,class,path,bean,definition,scanner,members;override,public,void,set,environment,configurable,environment,environment,super,set,environment,environment,this,reader,set,environment,environment,this,scanner,set,environment,environment
AnnotationConfigReactiveWebServerApplicationContext -> public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator);1509761243;Provide a custom {@link BeanNameGenerator} for use with_{@link AnnotatedBeanDefinitionReader} and/or {@link ClassPathBeanDefinitionScanner}_, if any._<p>_Default is_{@link org.springframework.context.annotation.AnnotationBeanNameGenerator}._<p>_Any call to this method must occur prior to calls to {@link #register(Class...)}_and/or {@link #scan(String...)}._@param beanNameGenerator the bean name generator_@see AnnotatedBeanDefinitionReader#setBeanNameGenerator_@see ClassPathBeanDefinitionScanner#setBeanNameGenerator;public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator) {_		this.reader.setBeanNameGenerator(beanNameGenerator)__		this.scanner.setBeanNameGenerator(beanNameGenerator)__		this.getBeanFactory().registerSingleton(_				AnnotationConfigUtils.CONFIGURATION_BEAN_NAME_GENERATOR,_				beanNameGenerator)__	};provide,a,custom,link,bean,name,generator,for,use,with,link,annotated,bean,definition,reader,and,or,link,class,path,bean,definition,scanner,if,any,p,default,is,link,org,springframework,context,annotation,annotation,bean,name,generator,p,any,call,to,this,method,must,occur,prior,to,calls,to,link,register,class,and,or,link,scan,string,param,bean,name,generator,the,bean,name,generator,see,annotated,bean,definition,reader,set,bean,name,generator,see,class,path,bean,definition,scanner,set,bean,name,generator;public,void,set,bean,name,generator,bean,name,generator,bean,name,generator,this,reader,set,bean,name,generator,bean,name,generator,this,scanner,set,bean,name,generator,bean,name,generator,this,get,bean,factory,register,singleton,annotation,config,utils,bean,name,generator
AnnotationConfigReactiveWebServerApplicationContext -> public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator);1511070903;Provide a custom {@link BeanNameGenerator} for use with_{@link AnnotatedBeanDefinitionReader} and/or {@link ClassPathBeanDefinitionScanner}_, if any._<p>_Default is_{@link org.springframework.context.annotation.AnnotationBeanNameGenerator}._<p>_Any call to this method must occur prior to calls to {@link #register(Class...)}_and/or {@link #scan(String...)}._@param beanNameGenerator the bean name generator_@see AnnotatedBeanDefinitionReader#setBeanNameGenerator_@see ClassPathBeanDefinitionScanner#setBeanNameGenerator;public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator) {_		this.reader.setBeanNameGenerator(beanNameGenerator)__		this.scanner.setBeanNameGenerator(beanNameGenerator)__		this.getBeanFactory().registerSingleton(_				AnnotationConfigUtils.CONFIGURATION_BEAN_NAME_GENERATOR,_				beanNameGenerator)__	};provide,a,custom,link,bean,name,generator,for,use,with,link,annotated,bean,definition,reader,and,or,link,class,path,bean,definition,scanner,if,any,p,default,is,link,org,springframework,context,annotation,annotation,bean,name,generator,p,any,call,to,this,method,must,occur,prior,to,calls,to,link,register,class,and,or,link,scan,string,param,bean,name,generator,the,bean,name,generator,see,annotated,bean,definition,reader,set,bean,name,generator,see,class,path,bean,definition,scanner,set,bean,name,generator;public,void,set,bean,name,generator,bean,name,generator,bean,name,generator,this,reader,set,bean,name,generator,bean,name,generator,this,scanner,set,bean,name,generator,bean,name,generator,this,get,bean,factory,register,singleton,annotation,config,utils,bean,name,generator
AnnotationConfigReactiveWebServerApplicationContext -> public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator);1511858719;Provide a custom {@link BeanNameGenerator} for use with_{@link AnnotatedBeanDefinitionReader} and/or {@link ClassPathBeanDefinitionScanner}_, if any._<p>_Default is_{@link org.springframework.context.annotation.AnnotationBeanNameGenerator}._<p>_Any call to this method must occur prior to calls to {@link #register(Class...)}_and/or {@link #scan(String...)}._@param beanNameGenerator the bean name generator_@see AnnotatedBeanDefinitionReader#setBeanNameGenerator_@see ClassPathBeanDefinitionScanner#setBeanNameGenerator;public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator) {_		this.reader.setBeanNameGenerator(beanNameGenerator)__		this.scanner.setBeanNameGenerator(beanNameGenerator)__		this.getBeanFactory().registerSingleton(_				AnnotationConfigUtils.CONFIGURATION_BEAN_NAME_GENERATOR,_				beanNameGenerator)__	};provide,a,custom,link,bean,name,generator,for,use,with,link,annotated,bean,definition,reader,and,or,link,class,path,bean,definition,scanner,if,any,p,default,is,link,org,springframework,context,annotation,annotation,bean,name,generator,p,any,call,to,this,method,must,occur,prior,to,calls,to,link,register,class,and,or,link,scan,string,param,bean,name,generator,the,bean,name,generator,see,annotated,bean,definition,reader,set,bean,name,generator,see,class,path,bean,definition,scanner,set,bean,name,generator;public,void,set,bean,name,generator,bean,name,generator,bean,name,generator,this,reader,set,bean,name,generator,bean,name,generator,this,scanner,set,bean,name,generator,bean,name,generator,this,get,bean,factory,register,singleton,annotation,config,utils,bean,name,generator
AnnotationConfigReactiveWebServerApplicationContext -> public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator);1511949058;Provide a custom {@link BeanNameGenerator} for use with_{@link AnnotatedBeanDefinitionReader} and/or {@link ClassPathBeanDefinitionScanner},_if any._<p>_Default is_{@link org.springframework.context.annotation.AnnotationBeanNameGenerator}._<p>_Any call to this method must occur prior to calls to {@link #register(Class...)}_and/or {@link #scan(String...)}._@param beanNameGenerator the bean name generator_@see AnnotatedBeanDefinitionReader#setBeanNameGenerator_@see ClassPathBeanDefinitionScanner#setBeanNameGenerator;public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator) {_		this.reader.setBeanNameGenerator(beanNameGenerator)__		this.scanner.setBeanNameGenerator(beanNameGenerator)__		this.getBeanFactory().registerSingleton(_				AnnotationConfigUtils.CONFIGURATION_BEAN_NAME_GENERATOR,_				beanNameGenerator)__	};provide,a,custom,link,bean,name,generator,for,use,with,link,annotated,bean,definition,reader,and,or,link,class,path,bean,definition,scanner,if,any,p,default,is,link,org,springframework,context,annotation,annotation,bean,name,generator,p,any,call,to,this,method,must,occur,prior,to,calls,to,link,register,class,and,or,link,scan,string,param,bean,name,generator,the,bean,name,generator,see,annotated,bean,definition,reader,set,bean,name,generator,see,class,path,bean,definition,scanner,set,bean,name,generator;public,void,set,bean,name,generator,bean,name,generator,bean,name,generator,this,reader,set,bean,name,generator,bean,name,generator,this,scanner,set,bean,name,generator,bean,name,generator,this,get,bean,factory,register,singleton,annotation,config,utils,bean,name,generator
AnnotationConfigReactiveWebServerApplicationContext -> public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator);1516215803;Provide a custom {@link BeanNameGenerator} for use with_{@link AnnotatedBeanDefinitionReader} and/or_{@link ClassPathBeanDefinitionScanner}, if any._<p>_Default is_{@link org.springframework.context.annotation.AnnotationBeanNameGenerator}._<p>_Any call to this method must occur prior to calls to {@link #register(Class...)}_and/or {@link #scan(String...)}._@param beanNameGenerator the bean name generator_@see AnnotatedBeanDefinitionReader#setBeanNameGenerator_@see ClassPathBeanDefinitionScanner#setBeanNameGenerator;public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator) {_		this.reader.setBeanNameGenerator(beanNameGenerator)__		this.scanner.setBeanNameGenerator(beanNameGenerator)__		this.getBeanFactory().registerSingleton(_				AnnotationConfigUtils.CONFIGURATION_BEAN_NAME_GENERATOR,_				beanNameGenerator)__	};provide,a,custom,link,bean,name,generator,for,use,with,link,annotated,bean,definition,reader,and,or,link,class,path,bean,definition,scanner,if,any,p,default,is,link,org,springframework,context,annotation,annotation,bean,name,generator,p,any,call,to,this,method,must,occur,prior,to,calls,to,link,register,class,and,or,link,scan,string,param,bean,name,generator,the,bean,name,generator,see,annotated,bean,definition,reader,set,bean,name,generator,see,class,path,bean,definition,scanner,set,bean,name,generator;public,void,set,bean,name,generator,bean,name,generator,bean,name,generator,this,reader,set,bean,name,generator,bean,name,generator,this,scanner,set,bean,name,generator,bean,name,generator,this,get,bean,factory,register,singleton,annotation,config,utils,bean,name,generator
AnnotationConfigReactiveWebServerApplicationContext -> public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator);1516346511;Provide a custom {@link BeanNameGenerator} for use with_{@link AnnotatedBeanDefinitionReader} and/or_{@link ClassPathBeanDefinitionScanner}, if any._<p>_Default is_{@link org.springframework.context.annotation.AnnotationBeanNameGenerator}._<p>_Any call to this method must occur prior to calls to {@link #register(Class...)}_and/or {@link #scan(String...)}._@param beanNameGenerator the bean name generator_@see AnnotatedBeanDefinitionReader#setBeanNameGenerator_@see ClassPathBeanDefinitionScanner#setBeanNameGenerator;public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator) {_		this.reader.setBeanNameGenerator(beanNameGenerator)__		this.scanner.setBeanNameGenerator(beanNameGenerator)__		this.getBeanFactory().registerSingleton(_				AnnotationConfigUtils.CONFIGURATION_BEAN_NAME_GENERATOR,_				beanNameGenerator)__	};provide,a,custom,link,bean,name,generator,for,use,with,link,annotated,bean,definition,reader,and,or,link,class,path,bean,definition,scanner,if,any,p,default,is,link,org,springframework,context,annotation,annotation,bean,name,generator,p,any,call,to,this,method,must,occur,prior,to,calls,to,link,register,class,and,or,link,scan,string,param,bean,name,generator,the,bean,name,generator,see,annotated,bean,definition,reader,set,bean,name,generator,see,class,path,bean,definition,scanner,set,bean,name,generator;public,void,set,bean,name,generator,bean,name,generator,bean,name,generator,this,reader,set,bean,name,generator,bean,name,generator,this,scanner,set,bean,name,generator,bean,name,generator,this,get,bean,factory,register,singleton,annotation,config,utils,bean,name,generator
AnnotationConfigReactiveWebServerApplicationContext -> public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator);1518429571;Provide a custom {@link BeanNameGenerator} for use with_{@link AnnotatedBeanDefinitionReader} and/or_{@link ClassPathBeanDefinitionScanner}, if any._<p>_Default is_{@link org.springframework.context.annotation.AnnotationBeanNameGenerator}._<p>_Any call to this method must occur prior to calls to {@link #register(Class...)}_and/or {@link #scan(String...)}._@param beanNameGenerator the bean name generator_@see AnnotatedBeanDefinitionReader#setBeanNameGenerator_@see ClassPathBeanDefinitionScanner#setBeanNameGenerator;public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator) {_		this.reader.setBeanNameGenerator(beanNameGenerator)__		this.scanner.setBeanNameGenerator(beanNameGenerator)__		this.getBeanFactory().registerSingleton(_				AnnotationConfigUtils.CONFIGURATION_BEAN_NAME_GENERATOR,_				beanNameGenerator)__	};provide,a,custom,link,bean,name,generator,for,use,with,link,annotated,bean,definition,reader,and,or,link,class,path,bean,definition,scanner,if,any,p,default,is,link,org,springframework,context,annotation,annotation,bean,name,generator,p,any,call,to,this,method,must,occur,prior,to,calls,to,link,register,class,and,or,link,scan,string,param,bean,name,generator,the,bean,name,generator,see,annotated,bean,definition,reader,set,bean,name,generator,see,class,path,bean,definition,scanner,set,bean,name,generator;public,void,set,bean,name,generator,bean,name,generator,bean,name,generator,this,reader,set,bean,name,generator,bean,name,generator,this,scanner,set,bean,name,generator,bean,name,generator,this,get,bean,factory,register,singleton,annotation,config,utils,bean,name,generator
AnnotationConfigReactiveWebServerApplicationContext -> public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator);1519362690;Provide a custom {@link BeanNameGenerator} for use with_{@link AnnotatedBeanDefinitionReader} and/or_{@link ClassPathBeanDefinitionScanner}, if any._<p>_Default is_{@link org.springframework.context.annotation.AnnotationBeanNameGenerator}._<p>_Any call to this method must occur prior to calls to {@link #register(Class...)}_and/or {@link #scan(String...)}._@param beanNameGenerator the bean name generator_@see AnnotatedBeanDefinitionReader#setBeanNameGenerator_@see ClassPathBeanDefinitionScanner#setBeanNameGenerator;public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator) {_		this.reader.setBeanNameGenerator(beanNameGenerator)__		this.scanner.setBeanNameGenerator(beanNameGenerator)__		this.getBeanFactory().registerSingleton(_				AnnotationConfigUtils.CONFIGURATION_BEAN_NAME_GENERATOR,_				beanNameGenerator)__	};provide,a,custom,link,bean,name,generator,for,use,with,link,annotated,bean,definition,reader,and,or,link,class,path,bean,definition,scanner,if,any,p,default,is,link,org,springframework,context,annotation,annotation,bean,name,generator,p,any,call,to,this,method,must,occur,prior,to,calls,to,link,register,class,and,or,link,scan,string,param,bean,name,generator,the,bean,name,generator,see,annotated,bean,definition,reader,set,bean,name,generator,see,class,path,bean,definition,scanner,set,bean,name,generator;public,void,set,bean,name,generator,bean,name,generator,bean,name,generator,this,reader,set,bean,name,generator,bean,name,generator,this,scanner,set,bean,name,generator,bean,name,generator,this,get,bean,factory,register,singleton,annotation,config,utils,bean,name,generator
AnnotationConfigReactiveWebServerApplicationContext -> public AnnotationConfigReactiveWebServerApplicationContext( 			DefaultListableBeanFactory beanFactory);1511070903;Create a new {@link AnnotationConfigReactiveWebServerApplicationContext} with the_given {@code DefaultListableBeanFactory}. The context needs to be populated through_{@link #register} calls and then manually {@linkplain #refresh refreshed}._@param beanFactory the DefaultListableBeanFactory instance to use for this context;public AnnotationConfigReactiveWebServerApplicationContext(_			DefaultListableBeanFactory beanFactory) {_		super(beanFactory)__		this.reader = new AnnotatedBeanDefinitionReader(this)__		this.scanner = new ClassPathBeanDefinitionScanner(this)__	};create,a,new,link,annotation,config,reactive,web,server,application,context,with,the,given,code,default,listable,bean,factory,the,context,needs,to,be,populated,through,link,register,calls,and,then,manually,linkplain,refresh,refreshed,param,bean,factory,the,default,listable,bean,factory,instance,to,use,for,this,context;public,annotation,config,reactive,web,server,application,context,default,listable,bean,factory,bean,factory,super,bean,factory,this,reader,new,annotated,bean,definition,reader,this,this,scanner,new,class,path,bean,definition,scanner,this
AnnotationConfigReactiveWebServerApplicationContext -> public AnnotationConfigReactiveWebServerApplicationContext( 			DefaultListableBeanFactory beanFactory);1511858719;Create a new {@link AnnotationConfigReactiveWebServerApplicationContext} with the_given {@code DefaultListableBeanFactory}. The context needs to be populated through_{@link #register} calls and then manually {@linkplain #refresh refreshed}._@param beanFactory the DefaultListableBeanFactory instance to use for this context;public AnnotationConfigReactiveWebServerApplicationContext(_			DefaultListableBeanFactory beanFactory) {_		super(beanFactory)__		this.reader = new AnnotatedBeanDefinitionReader(this)__		this.scanner = new ClassPathBeanDefinitionScanner(this)__	};create,a,new,link,annotation,config,reactive,web,server,application,context,with,the,given,code,default,listable,bean,factory,the,context,needs,to,be,populated,through,link,register,calls,and,then,manually,linkplain,refresh,refreshed,param,bean,factory,the,default,listable,bean,factory,instance,to,use,for,this,context;public,annotation,config,reactive,web,server,application,context,default,listable,bean,factory,bean,factory,super,bean,factory,this,reader,new,annotated,bean,definition,reader,this,this,scanner,new,class,path,bean,definition,scanner,this
AnnotationConfigReactiveWebServerApplicationContext -> public AnnotationConfigReactiveWebServerApplicationContext( 			DefaultListableBeanFactory beanFactory);1511949058;Create a new {@link AnnotationConfigReactiveWebServerApplicationContext} with the_given {@code DefaultListableBeanFactory}. The context needs to be populated through_{@link #register} calls and then manually {@linkplain #refresh refreshed}._@param beanFactory the DefaultListableBeanFactory instance to use for this context;public AnnotationConfigReactiveWebServerApplicationContext(_			DefaultListableBeanFactory beanFactory) {_		super(beanFactory)__		this.reader = new AnnotatedBeanDefinitionReader(this)__		this.scanner = new ClassPathBeanDefinitionScanner(this)__	};create,a,new,link,annotation,config,reactive,web,server,application,context,with,the,given,code,default,listable,bean,factory,the,context,needs,to,be,populated,through,link,register,calls,and,then,manually,linkplain,refresh,refreshed,param,bean,factory,the,default,listable,bean,factory,instance,to,use,for,this,context;public,annotation,config,reactive,web,server,application,context,default,listable,bean,factory,bean,factory,super,bean,factory,this,reader,new,annotated,bean,definition,reader,this,this,scanner,new,class,path,bean,definition,scanner,this
AnnotationConfigReactiveWebServerApplicationContext -> public AnnotationConfigReactiveWebServerApplicationContext( 			DefaultListableBeanFactory beanFactory);1516215803;Create a new {@link AnnotationConfigReactiveWebServerApplicationContext} with the_given {@code DefaultListableBeanFactory}. The context needs to be populated through_{@link #register} calls and then manually {@linkplain #refresh refreshed}._@param beanFactory the DefaultListableBeanFactory instance to use for this context;public AnnotationConfigReactiveWebServerApplicationContext(_			DefaultListableBeanFactory beanFactory) {_		super(beanFactory)__		this.reader = new AnnotatedBeanDefinitionReader(this)__		this.scanner = new ClassPathBeanDefinitionScanner(this)__	};create,a,new,link,annotation,config,reactive,web,server,application,context,with,the,given,code,default,listable,bean,factory,the,context,needs,to,be,populated,through,link,register,calls,and,then,manually,linkplain,refresh,refreshed,param,bean,factory,the,default,listable,bean,factory,instance,to,use,for,this,context;public,annotation,config,reactive,web,server,application,context,default,listable,bean,factory,bean,factory,super,bean,factory,this,reader,new,annotated,bean,definition,reader,this,this,scanner,new,class,path,bean,definition,scanner,this
AnnotationConfigReactiveWebServerApplicationContext -> public AnnotationConfigReactiveWebServerApplicationContext( 			DefaultListableBeanFactory beanFactory);1516346511;Create a new {@link AnnotationConfigReactiveWebServerApplicationContext} with the_given {@code DefaultListableBeanFactory}. The context needs to be populated through_{@link #register} calls and then manually {@linkplain #refresh refreshed}._@param beanFactory the DefaultListableBeanFactory instance to use for this context;public AnnotationConfigReactiveWebServerApplicationContext(_			DefaultListableBeanFactory beanFactory) {_		super(beanFactory)__		this.reader = new AnnotatedBeanDefinitionReader(this)__		this.scanner = new ClassPathBeanDefinitionScanner(this)__	};create,a,new,link,annotation,config,reactive,web,server,application,context,with,the,given,code,default,listable,bean,factory,the,context,needs,to,be,populated,through,link,register,calls,and,then,manually,linkplain,refresh,refreshed,param,bean,factory,the,default,listable,bean,factory,instance,to,use,for,this,context;public,annotation,config,reactive,web,server,application,context,default,listable,bean,factory,bean,factory,super,bean,factory,this,reader,new,annotated,bean,definition,reader,this,this,scanner,new,class,path,bean,definition,scanner,this
AnnotationConfigReactiveWebServerApplicationContext -> public AnnotationConfigReactiveWebServerApplicationContext( 			DefaultListableBeanFactory beanFactory);1518429571;Create a new {@link AnnotationConfigReactiveWebServerApplicationContext} with the_given {@code DefaultListableBeanFactory}. The context needs to be populated through_{@link #register} calls and then manually {@linkplain #refresh refreshed}._@param beanFactory the DefaultListableBeanFactory instance to use for this context;public AnnotationConfigReactiveWebServerApplicationContext(_			DefaultListableBeanFactory beanFactory) {_		super(beanFactory)__		this.reader = new AnnotatedBeanDefinitionReader(this)__		this.scanner = new ClassPathBeanDefinitionScanner(this)__	};create,a,new,link,annotation,config,reactive,web,server,application,context,with,the,given,code,default,listable,bean,factory,the,context,needs,to,be,populated,through,link,register,calls,and,then,manually,linkplain,refresh,refreshed,param,bean,factory,the,default,listable,bean,factory,instance,to,use,for,this,context;public,annotation,config,reactive,web,server,application,context,default,listable,bean,factory,bean,factory,super,bean,factory,this,reader,new,annotated,bean,definition,reader,this,this,scanner,new,class,path,bean,definition,scanner,this
AnnotationConfigReactiveWebServerApplicationContext -> public AnnotationConfigReactiveWebServerApplicationContext( 			DefaultListableBeanFactory beanFactory);1519362690;Create a new {@link AnnotationConfigReactiveWebServerApplicationContext} with the_given {@code DefaultListableBeanFactory}. The context needs to be populated through_{@link #register} calls and then manually {@linkplain #refresh refreshed}._@param beanFactory the DefaultListableBeanFactory instance to use for this context;public AnnotationConfigReactiveWebServerApplicationContext(_			DefaultListableBeanFactory beanFactory) {_		super(beanFactory)__		this.reader = new AnnotatedBeanDefinitionReader(this)__		this.scanner = new ClassPathBeanDefinitionScanner(this)__	};create,a,new,link,annotation,config,reactive,web,server,application,context,with,the,given,code,default,listable,bean,factory,the,context,needs,to,be,populated,through,link,register,calls,and,then,manually,linkplain,refresh,refreshed,param,bean,factory,the,default,listable,bean,factory,instance,to,use,for,this,context;public,annotation,config,reactive,web,server,application,context,default,listable,bean,factory,bean,factory,super,bean,factory,this,reader,new,annotated,bean,definition,reader,this,this,scanner,new,class,path,bean,definition,scanner,this
AnnotationConfigReactiveWebServerApplicationContext -> @Override 	public final void register(Class<?>... annotatedClasses);1518429571;Register one or more annotated classes to be processed. Note that_{@link #refresh()} must be called in order for the context to fully process the new_class._<p>_Calls to {@code #register} are idempotent_ adding the same annotated class more_than once has no additional effect._@param annotatedClasses one or more annotated classes, e.g. {@code @Configuration}_classes_@see #scan(String...)_@see #refresh();@Override_	public final void register(Class<?>... annotatedClasses) {_		Assert.notEmpty(annotatedClasses,_				"At least one annotated class must be specified")__		this.annotatedClasses.addAll(Arrays.asList(annotatedClasses))__	};register,one,or,more,annotated,classes,to,be,processed,note,that,link,refresh,must,be,called,in,order,for,the,context,to,fully,process,the,new,class,p,calls,to,code,register,are,idempotent,adding,the,same,annotated,class,more,than,once,has,no,additional,effect,param,annotated,classes,one,or,more,annotated,classes,e,g,code,configuration,classes,see,scan,string,see,refresh;override,public,final,void,register,class,annotated,classes,assert,not,empty,annotated,classes,at,least,one,annotated,class,must,be,specified,this,annotated,classes,add,all,arrays,as,list,annotated,classes
AnnotationConfigReactiveWebServerApplicationContext -> @Override 	public final void register(Class<?>... annotatedClasses);1519362690;Register one or more annotated classes to be processed. Note that_{@link #refresh()} must be called in order for the context to fully process the new_class._<p>_Calls to {@code #register} are idempotent_ adding the same annotated class more_than once has no additional effect._@param annotatedClasses one or more annotated classes, e.g. {@code @Configuration}_classes_@see #scan(String...)_@see #refresh();@Override_	public final void register(Class<?>... annotatedClasses) {_		Assert.notEmpty(annotatedClasses,_				"At least one annotated class must be specified")__		this.annotatedClasses.addAll(Arrays.asList(annotatedClasses))__	};register,one,or,more,annotated,classes,to,be,processed,note,that,link,refresh,must,be,called,in,order,for,the,context,to,fully,process,the,new,class,p,calls,to,code,register,are,idempotent,adding,the,same,annotated,class,more,than,once,has,no,additional,effect,param,annotated,classes,one,or,more,annotated,classes,e,g,code,configuration,classes,see,scan,string,see,refresh;override,public,final,void,register,class,annotated,classes,assert,not,empty,annotated,classes,at,least,one,annotated,class,must,be,specified,this,annotated,classes,add,all,arrays,as,list,annotated,classes
