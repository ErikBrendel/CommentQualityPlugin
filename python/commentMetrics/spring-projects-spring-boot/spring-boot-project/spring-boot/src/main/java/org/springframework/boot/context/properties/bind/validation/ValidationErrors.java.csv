commented;modifiers;parameterAmount;loc;comment;code
false;private;3;8;;private List<ObjectError> convertErrors(ConfigurationPropertyName name, Set<ConfigurationProperty> boundProperties, List<ObjectError> errors) {     List<ObjectError> converted = new ArrayList<>(errors.size()).     for (ObjectError error : errors) {         converted.add(convertError(name, boundProperties, error)).     }     return Collections.unmodifiableList(converted). }
false;private;3;7;;private ObjectError convertError(ConfigurationPropertyName name, Set<ConfigurationProperty> boundProperties, ObjectError error) {     if (error instanceof FieldError) {         return convertFieldError(name, boundProperties, (FieldError) error).     }     return error. }
false;private;3;8;;private FieldError convertFieldError(ConfigurationPropertyName name, Set<ConfigurationProperty> boundProperties, FieldError error) {     if (error instanceof OriginProvider) {         return error.     }     return OriginTrackedFieldError.of(error, findFieldErrorOrigin(name, boundProperties, error)). }
false;private;3;9;;private Origin findFieldErrorOrigin(ConfigurationPropertyName name, Set<ConfigurationProperty> boundProperties, FieldError error) {     for (ConfigurationProperty boundProperty : boundProperties) {         if (isForError(name, boundProperty.getName(), error)) {             return Origin.from(boundProperty).         }     }     return null. }
false;private;3;5;;private boolean isForError(ConfigurationPropertyName name, ConfigurationPropertyName boundPropertyName, FieldError error) {     return name.isParentOf(boundPropertyName) && boundPropertyName.getLastElement(Form.UNIFORM).equalsIgnoreCase(error.getField()). }
true;public;0;3;/**  * Return the name of the item that was being validated.  * @return the name of the item  */ ;/**  * Return the name of the item that was being validated.  * @return the name of the item  */ public ConfigurationPropertyName getName() {     return this.name. }
true;public;0;3;/**  * Return the properties that were bound before validation failed.  * @return the boundProperties  */ ;/**  * Return the properties that were bound before validation failed.  * @return the boundProperties  */ public Set<ConfigurationProperty> getBoundProperties() {     return this.boundProperties. }
false;public;0;3;;public boolean hasErrors() {     return !this.errors.isEmpty(). }
true;public;0;3;/**  * Return the list of all validation errors.  * @return the errors  */ ;/**  * Return the list of all validation errors.  * @return the errors  */ public List<ObjectError> getAllErrors() {     return this.errors. }
false;public;0;4;;@Override public Iterator<ObjectError> iterator() {     return this.errors.iterator(). }
