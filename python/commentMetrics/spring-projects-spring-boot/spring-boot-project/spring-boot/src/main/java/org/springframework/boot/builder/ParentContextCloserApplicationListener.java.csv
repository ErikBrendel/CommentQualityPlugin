commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public int getOrder() {     return this.order. }
false;public;1;4;;@Override public void setApplicationContext(ApplicationContext context) throws BeansException {     this.context = context. }
false;public;1;4;;@Override public void onApplicationEvent(ParentContextAvailableEvent event) {     maybeInstallListenerInParent(event.getApplicationContext()). }
false;private;1;8;;private void maybeInstallListenerInParent(ConfigurableApplicationContext child) {     if (child == this.context && child.getParent() instanceof ConfigurableApplicationContext) {         ConfigurableApplicationContext parent = (ConfigurableApplicationContext) child.getParent().         parent.addApplicationListener(createContextCloserListener(child)).     } }
true;protected;1;4;/**  * Subclasses may override to create their own subclass of ContextCloserListener. This  * still enforces the use of a weak reference.  * @param child the child context  * @return the {@link ContextCloserListener} to use  */ ;/**  * Subclasses may override to create their own subclass of ContextCloserListener. This  * still enforces the use of a weak reference.  * @param child the child context  * @return the {@link ContextCloserListener} to use  */ protected ContextCloserListener createContextCloserListener(ConfigurableApplicationContext child) {     return new ContextCloserListener(child). }
false;public;1;9;;@Override public void onApplicationEvent(ContextClosedEvent event) {     ConfigurableApplicationContext context = this.childContext.get().     if ((context != null) && (event.getApplicationContext() == context.getParent()) && context.isActive()) {         context.close().     } }
false;public;1;15;;@Override public boolean equals(Object obj) {     if (this == obj) {         return true.     }     if (obj == null) {         return false.     }     if (obj instanceof ContextCloserListener) {         ContextCloserListener other = (ContextCloserListener) obj.         return ObjectUtils.nullSafeEquals(this.childContext.get(), other.childContext.get()).     }     return super.equals(obj). }
false;public;0;4;;@Override public int hashCode() {     return ObjectUtils.nullSafeHashCode(this.childContext.get()). }
