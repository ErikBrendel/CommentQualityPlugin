commented;modifiers;parameterAmount;loc;comment;code
false;public;1;4;;@Override public void initialize(ConfigurableApplicationContext applicationContext) {     applicationContext.addApplicationListener(this). }
false;public;1;6;;@Override public void onApplicationEvent(WebServerInitializedEvent event) {     String propertyName = "local." + getName(event.getApplicationContext()) + ".port".     setPortProperty(event.getApplicationContext(), propertyName, event.getWebServer().getPort()). }
false;private;1;4;;private String getName(WebServerApplicationContext context) {     String name = context.getServerNamespace().     return StringUtils.hasText(name) ? name : "server". }
false;private;3;10;;private void setPortProperty(ApplicationContext context, String propertyName, int port) {     if (context instanceof ConfigurableApplicationContext) {         setPortProperty(((ConfigurableApplicationContext) context).getEnvironment(), propertyName, port).     }     if (context.getParent() != null) {         setPortProperty(context.getParent(), propertyName, port).     } }
false;private;3;11;;@SuppressWarnings("unchecked") private void setPortProperty(ConfigurableEnvironment environment, String propertyName, int port) {     MutablePropertySources sources = environment.getPropertySources().     PropertySource<?> source = sources.get("server.ports").     if (source == null) {         source = new MapPropertySource("server.ports", new HashMap<>()).         sources.addFirst(source).     }     ((Map<String, Object>) source.getSource()).put(propertyName, port). }
