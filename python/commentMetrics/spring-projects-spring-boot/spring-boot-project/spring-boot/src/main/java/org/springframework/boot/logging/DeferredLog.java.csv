# id;timestamp;commentText;codeText;commentWords;codeWords
DeferredLog -> public void replayTo(Log destination);1536794714;Replay deferred logging to the specified destination._@param destination the destination for the deferred log messages;public void replayTo(Log destination) {_		synchronized (this.lines) {_			for (Line line : this.lines) {_				logTo(destination, line.getLevel(), line.getMessage(),_						line.getThrowable())__			}_			this.lines.clear()__		}_	};replay,deferred,logging,to,the,specified,destination,param,destination,the,destination,for,the,deferred,log,messages;public,void,replay,to,log,destination,synchronized,this,lines,for,line,line,this,lines,log,to,destination,line,get,level,line,get,message,line,get,throwable,this,lines,clear
DeferredLog -> public void replayTo(Log destination);1536802310;Replay deferred logging to the specified destination._@param destination the destination for the deferred log messages;public void replayTo(Log destination) {_		synchronized (this.lines) {_			for (Line line : this.lines) {_				logTo(destination, line.getLevel(), line.getMessage(),_						line.getThrowable())__			}_			this.lines.clear()__		}_	};replay,deferred,logging,to,the,specified,destination,param,destination,the,destination,for,the,deferred,log,messages;public,void,replay,to,log,destination,synchronized,this,lines,for,line,line,this,lines,log,to,destination,line,get,level,line,get,message,line,get,throwable,this,lines,clear
DeferredLog -> public void replayTo(Log destination);1537637706;Replay deferred logging to the specified destination._@param destination the destination for the deferred log messages;public void replayTo(Log destination) {_		synchronized (this.lines) {_			for (Line line : this.lines) {_				logTo(destination, line.getLevel(), line.getMessage(),_						line.getThrowable())__			}_			this.lines.clear()__		}_	};replay,deferred,logging,to,the,specified,destination,param,destination,the,destination,for,the,deferred,log,messages;public,void,replay,to,log,destination,synchronized,this,lines,for,line,line,this,lines,log,to,destination,line,get,level,line,get,message,line,get,throwable,this,lines,clear
DeferredLog -> public void replayTo(Log destination);1539848203;Replay deferred logging to the specified destination._@param destination the destination for the deferred log messages;public void replayTo(Log destination) {_		synchronized (this.lines) {_			for (Line line : this.lines) {_				logTo(destination, line.getLevel(), line.getMessage(),_						line.getThrowable())__			}_			this.lines.clear()__		}_	};replay,deferred,logging,to,the,specified,destination,param,destination,the,destination,for,the,deferred,log,messages;public,void,replay,to,log,destination,synchronized,this,lines,for,line,line,this,lines,log,to,destination,line,get,level,line,get,message,line,get,throwable,this,lines,clear
DeferredLog -> public void switchTo(Log destination);1536794714;Switch from deferred logging to immediate logging to the specified destination._@param destination the new log destination;public void switchTo(Log destination) {_		synchronized (this.lines) {_			replayTo(destination)__			this.destination = destination__		}_	};switch,from,deferred,logging,to,immediate,logging,to,the,specified,destination,param,destination,the,new,log,destination;public,void,switch,to,log,destination,synchronized,this,lines,replay,to,destination,this,destination,destination
DeferredLog -> public void switchTo(Log destination);1536802310;Switch from deferred logging to immediate logging to the specified destination._@param destination the new log destination;public void switchTo(Log destination) {_		synchronized (this.lines) {_			replayTo(destination)__			this.destination = destination__		}_	};switch,from,deferred,logging,to,immediate,logging,to,the,specified,destination,param,destination,the,new,log,destination;public,void,switch,to,log,destination,synchronized,this,lines,replay,to,destination,this,destination,destination
DeferredLog -> public void switchTo(Log destination);1537637706;Switch from deferred logging to immediate logging to the specified destination._@param destination the new log destination;public void switchTo(Log destination) {_		synchronized (this.lines) {_			replayTo(destination)__			this.destination = destination__		}_	};switch,from,deferred,logging,to,immediate,logging,to,the,specified,destination,param,destination,the,new,log,destination;public,void,switch,to,log,destination,synchronized,this,lines,replay,to,destination,this,destination,destination
DeferredLog -> public void switchTo(Log destination);1539848203;Switch from deferred logging to immediate logging to the specified destination._@param destination the new log destination_@since 2.1.0;public void switchTo(Log destination) {_		synchronized (this.lines) {_			replayTo(destination)__			this.destination = destination__		}_	};switch,from,deferred,logging,to,immediate,logging,to,the,specified,destination,param,destination,the,new,log,destination,since,2,1,0;public,void,switch,to,log,destination,synchronized,this,lines,replay,to,destination,this,destination,destination
DeferredLog -> public static Log replay(Log source, Class<?> destination);1536802310;Replay from a source log to a destination log when the source is deferred._@param source the source logger_@param destination the destination logger class_@return the destination;public static Log replay(Log source, Class<?> destination) {_		return replay(source, LogFactory.getLog(destination))__	};replay,from,a,source,log,to,a,destination,log,when,the,source,is,deferred,param,source,the,source,logger,param,destination,the,destination,logger,class,return,the,destination;public,static,log,replay,log,source,class,destination,return,replay,source,log,factory,get,log,destination
DeferredLog -> public static Log replay(Log source, Class<?> destination);1537637706;Replay from a source log to a destination log when the source is deferred._@param source the source logger_@param destination the destination logger class_@return the destination;public static Log replay(Log source, Class<?> destination) {_		return replay(source, LogFactory.getLog(destination))__	};replay,from,a,source,log,to,a,destination,log,when,the,source,is,deferred,param,source,the,source,logger,param,destination,the,destination,logger,class,return,the,destination;public,static,log,replay,log,source,class,destination,return,replay,source,log,factory,get,log,destination
DeferredLog -> public static Log replay(Log source, Class<?> destination);1539848203;Replay from a source log to a destination log when the source is deferred._@param source the source logger_@param destination the destination logger class_@return the destination;public static Log replay(Log source, Class<?> destination) {_		return replay(source, LogFactory.getLog(destination))__	};replay,from,a,source,log,to,a,destination,log,when,the,source,is,deferred,param,source,the,source,logger,param,destination,the,destination,logger,class,return,the,destination;public,static,log,replay,log,source,class,destination,return,replay,source,log,factory,get,log,destination
DeferredLog -> public void replayTo(Class<?> destination);1536794714;Replay deferred logging to the specified destination._@param destination the destination for the deferred log messages;public void replayTo(Class<?> destination) {_		replayTo(LogFactory.getLog(destination))__	};replay,deferred,logging,to,the,specified,destination,param,destination,the,destination,for,the,deferred,log,messages;public,void,replay,to,class,destination,replay,to,log,factory,get,log,destination
DeferredLog -> public void replayTo(Class<?> destination);1536802310;Replay deferred logging to the specified destination._@param destination the destination for the deferred log messages;public void replayTo(Class<?> destination) {_		replayTo(LogFactory.getLog(destination))__	};replay,deferred,logging,to,the,specified,destination,param,destination,the,destination,for,the,deferred,log,messages;public,void,replay,to,class,destination,replay,to,log,factory,get,log,destination
DeferredLog -> public void replayTo(Class<?> destination);1537637706;Replay deferred logging to the specified destination._@param destination the destination for the deferred log messages;public void replayTo(Class<?> destination) {_		replayTo(LogFactory.getLog(destination))__	};replay,deferred,logging,to,the,specified,destination,param,destination,the,destination,for,the,deferred,log,messages;public,void,replay,to,class,destination,replay,to,log,factory,get,log,destination
DeferredLog -> public void replayTo(Class<?> destination);1539848203;Replay deferred logging to the specified destination._@param destination the destination for the deferred log messages;public void replayTo(Class<?> destination) {_		replayTo(LogFactory.getLog(destination))__	};replay,deferred,logging,to,the,specified,destination,param,destination,the,destination,for,the,deferred,log,messages;public,void,replay,to,class,destination,replay,to,log,factory,get,log,destination
DeferredLog -> public static Log replay(Log source, Log destination);1536802310;Replay from a source log to a destination log when the source is deferred._@param source the source logger_@param destination the destination logger_@return the destination;public static Log replay(Log source, Log destination) {_		if (source instanceof DeferredLog) {_			((DeferredLog) source).replayTo(destination)__		}_		return destination__	};replay,from,a,source,log,to,a,destination,log,when,the,source,is,deferred,param,source,the,source,logger,param,destination,the,destination,logger,return,the,destination;public,static,log,replay,log,source,log,destination,if,source,instanceof,deferred,log,deferred,log,source,replay,to,destination,return,destination
DeferredLog -> public static Log replay(Log source, Log destination);1537637706;Replay from a source log to a destination log when the source is deferred._@param source the source logger_@param destination the destination logger_@return the destination;public static Log replay(Log source, Log destination) {_		if (source instanceof DeferredLog) {_			((DeferredLog) source).replayTo(destination)__		}_		return destination__	};replay,from,a,source,log,to,a,destination,log,when,the,source,is,deferred,param,source,the,source,logger,param,destination,the,destination,logger,return,the,destination;public,static,log,replay,log,source,log,destination,if,source,instanceof,deferred,log,deferred,log,source,replay,to,destination,return,destination
DeferredLog -> public static Log replay(Log source, Log destination);1539848203;Replay from a source log to a destination log when the source is deferred._@param source the source logger_@param destination the destination logger_@return the destination;public static Log replay(Log source, Log destination) {_		if (source instanceof DeferredLog) {_			((DeferredLog) source).replayTo(destination)__		}_		return destination__	};replay,from,a,source,log,to,a,destination,log,when,the,source,is,deferred,param,source,the,source,logger,param,destination,the,destination,logger,return,the,destination;public,static,log,replay,log,source,log,destination,if,source,instanceof,deferred,log,deferred,log,source,replay,to,destination,return,destination
DeferredLog -> public void switchTo(Class<?> destination);1536794714;Switch from deferred logging to immediate logging to the specified destination._@param destination the new log destination;public void switchTo(Class<?> destination) {_		switchTo(LogFactory.getLog(destination))__	};switch,from,deferred,logging,to,immediate,logging,to,the,specified,destination,param,destination,the,new,log,destination;public,void,switch,to,class,destination,switch,to,log,factory,get,log,destination
DeferredLog -> public void switchTo(Class<?> destination);1536802310;Switch from deferred logging to immediate logging to the specified destination._@param destination the new log destination;public void switchTo(Class<?> destination) {_		switchTo(LogFactory.getLog(destination))__	};switch,from,deferred,logging,to,immediate,logging,to,the,specified,destination,param,destination,the,new,log,destination;public,void,switch,to,class,destination,switch,to,log,factory,get,log,destination
DeferredLog -> public void switchTo(Class<?> destination);1537637706;Switch from deferred logging to immediate logging to the specified destination._@param destination the new log destination;public void switchTo(Class<?> destination) {_		switchTo(LogFactory.getLog(destination))__	};switch,from,deferred,logging,to,immediate,logging,to,the,specified,destination,param,destination,the,new,log,destination;public,void,switch,to,class,destination,switch,to,log,factory,get,log,destination
DeferredLog -> public void switchTo(Class<?> destination);1539848203;Switch from deferred logging to immediate logging to the specified destination._@param destination the new log destination_@since 2.1.0;public void switchTo(Class<?> destination) {_		switchTo(LogFactory.getLog(destination))__	};switch,from,deferred,logging,to,immediate,logging,to,the,specified,destination,param,destination,the,new,log,destination,since,2,1,0;public,void,switch,to,class,destination,switch,to,log,factory,get,log,destination
