# id;timestamp;commentText;codeText;commentWords;codeWords
ServletListenerRegistrationBean -> public void setListener(T listener);1507173536;Set the listener that will be registered._@param listener the listener to register;public void setListener(T listener) {_		Assert.notNull(listener, "Listener must not be null")__		Assert.isTrue(isSupportedType(listener), "Listener is not of a supported type")__		this.listener = listener__	};set,the,listener,that,will,be,registered,param,listener,the,listener,to,register;public,void,set,listener,t,listener,assert,not,null,listener,listener,must,not,be,null,assert,is,true,is,supported,type,listener,listener,is,not,of,a,supported,type,this,listener,listener
ServletListenerRegistrationBean -> public void setListener(T listener);1513199238;Set the listener that will be registered._@param listener the listener to register;public void setListener(T listener) {_		Assert.notNull(listener, "Listener must not be null")__		Assert.isTrue(isSupportedType(listener), "Listener is not of a supported type")__		this.listener = listener__	};set,the,listener,that,will,be,registered,param,listener,the,listener,to,register;public,void,set,listener,t,listener,assert,not,null,listener,listener,must,not,be,null,assert,is,true,is,supported,type,listener,listener,is,not,of,a,supported,type,this,listener,listener
ServletListenerRegistrationBean -> public void setListener(T listener);1515477900;Set the listener that will be registered._@param listener the listener to register;public void setListener(T listener) {_		Assert.notNull(listener, "Listener must not be null")__		Assert.isTrue(isSupportedType(listener), "Listener is not of a supported type")__		this.listener = listener__	};set,the,listener,that,will,be,registered,param,listener,the,listener,to,register;public,void,set,listener,t,listener,assert,not,null,listener,listener,must,not,be,null,assert,is,true,is,supported,type,listener,listener,is,not,of,a,supported,type,this,listener,listener
ServletListenerRegistrationBean -> public static boolean isSupportedType(EventListener listener);1507173536;Returns {@code true} if the specified listener is one of the supported types._@param listener the listener to test_@return if the listener is of a supported type;public static boolean isSupportedType(EventListener listener) {_		for (Class<?> type : SUPPORTED_TYPES) {_			if (ClassUtils.isAssignableValue(type, listener)) {_				return true__			}_		}_		return false__	};returns,code,true,if,the,specified,listener,is,one,of,the,supported,types,param,listener,the,listener,to,test,return,if,the,listener,is,of,a,supported,type;public,static,boolean,is,supported,type,event,listener,listener,for,class,type,if,class,utils,is,assignable,value,type,listener,return,true,return,false
ServletListenerRegistrationBean -> public static boolean isSupportedType(EventListener listener);1513199238;Returns {@code true} if the specified listener is one of the supported types._@param listener the listener to test_@return if the listener is of a supported type;public static boolean isSupportedType(EventListener listener) {_		for (Class<?> type : SUPPORTED_TYPES) {_			if (ClassUtils.isAssignableValue(type, listener)) {_				return true__			}_		}_		return false__	};returns,code,true,if,the,specified,listener,is,one,of,the,supported,types,param,listener,the,listener,to,test,return,if,the,listener,is,of,a,supported,type;public,static,boolean,is,supported,type,event,listener,listener,for,class,type,if,class,utils,is,assignable,value,type,listener,return,true,return,false
ServletListenerRegistrationBean -> public static boolean isSupportedType(EventListener listener);1515477900;Returns {@code true} if the specified listener is one of the supported types._@param listener the listener to test_@return if the listener is of a supported type;public static boolean isSupportedType(EventListener listener) {_		for (Class<?> type : SUPPORTED_TYPES) {_			if (ClassUtils.isAssignableValue(type, listener)) {_				return true__			}_		}_		return false__	};returns,code,true,if,the,specified,listener,is,one,of,the,supported,types,param,listener,the,listener,to,test,return,if,the,listener,is,of,a,supported,type;public,static,boolean,is,supported,type,event,listener,listener,for,class,type,if,class,utils,is,assignable,value,type,listener,return,true,return,false
ServletListenerRegistrationBean -> public ServletListenerRegistrationBean();1507173536;Create a new {@link ServletListenerRegistrationBean} instance.;public ServletListenerRegistrationBean() {_	};create,a,new,link,servlet,listener,registration,bean,instance;public,servlet,listener,registration,bean
ServletListenerRegistrationBean -> public ServletListenerRegistrationBean();1513199238;Create a new {@link ServletListenerRegistrationBean} instance.;public ServletListenerRegistrationBean() {_	};create,a,new,link,servlet,listener,registration,bean,instance;public,servlet,listener,registration,bean
ServletListenerRegistrationBean -> public ServletListenerRegistrationBean();1515477900;Create a new {@link ServletListenerRegistrationBean} instance.;public ServletListenerRegistrationBean() {_	};create,a,new,link,servlet,listener,registration,bean,instance;public,servlet,listener,registration,bean
ServletListenerRegistrationBean -> public ServletListenerRegistrationBean(T listener);1507173536;Create a new {@link ServletListenerRegistrationBean} instance._@param listener the listener to register;public ServletListenerRegistrationBean(T listener) {_		Assert.notNull(listener, "Listener must not be null")__		Assert.isTrue(isSupportedType(listener), "Listener is not of a supported type")__		this.listener = listener__	};create,a,new,link,servlet,listener,registration,bean,instance,param,listener,the,listener,to,register;public,servlet,listener,registration,bean,t,listener,assert,not,null,listener,listener,must,not,be,null,assert,is,true,is,supported,type,listener,listener,is,not,of,a,supported,type,this,listener,listener
ServletListenerRegistrationBean -> public ServletListenerRegistrationBean(T listener);1513199238;Create a new {@link ServletListenerRegistrationBean} instance._@param listener the listener to register;public ServletListenerRegistrationBean(T listener) {_		Assert.notNull(listener, "Listener must not be null")__		Assert.isTrue(isSupportedType(listener), "Listener is not of a supported type")__		this.listener = listener__	};create,a,new,link,servlet,listener,registration,bean,instance,param,listener,the,listener,to,register;public,servlet,listener,registration,bean,t,listener,assert,not,null,listener,listener,must,not,be,null,assert,is,true,is,supported,type,listener,listener,is,not,of,a,supported,type,this,listener,listener
ServletListenerRegistrationBean -> public ServletListenerRegistrationBean(T listener);1515477900;Create a new {@link ServletListenerRegistrationBean} instance._@param listener the listener to register;public ServletListenerRegistrationBean(T listener) {_		Assert.notNull(listener, "Listener must not be null")__		Assert.isTrue(isSupportedType(listener), "Listener is not of a supported type")__		this.listener = listener__	};create,a,new,link,servlet,listener,registration,bean,instance,param,listener,the,listener,to,register;public,servlet,listener,registration,bean,t,listener,assert,not,null,listener,listener,must,not,be,null,assert,is,true,is,supported,type,listener,listener,is,not,of,a,supported,type,this,listener,listener
ServletListenerRegistrationBean -> public static Set<Class<?>> getSupportedTypes();1507173536;Return the supported types for this registration._@return the supported types;public static Set<Class<?>> getSupportedTypes() {_		return SUPPORTED_TYPES__	};return,the,supported,types,for,this,registration,return,the,supported,types;public,static,set,class,get,supported,types,return
ServletListenerRegistrationBean -> public static Set<Class<?>> getSupportedTypes();1513199238;Return the supported types for this registration._@return the supported types;public static Set<Class<?>> getSupportedTypes() {_		return SUPPORTED_TYPES__	};return,the,supported,types,for,this,registration,return,the,supported,types;public,static,set,class,get,supported,types,return
ServletListenerRegistrationBean -> public static Set<Class<?>> getSupportedTypes();1515477900;Return the supported types for this registration._@return the supported types;public static Set<Class<?>> getSupportedTypes() {_		return SUPPORTED_TYPES__	};return,the,supported,types,for,this,registration,return,the,supported,types;public,static,set,class,get,supported,types,return
