commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public PropertyContainer getContext() {     return this.context. }
false;public;0;3;;public Object getConfigurationLock() {     return this.context.getConfigurationLock(). }
false;public;2;13;;@SuppressWarnings({ "rawtypes", "unchecked" }) public void conversionRule(String conversionWord, Class<? extends Converter> converterClass) {     Assert.hasLength(conversionWord, "Conversion word must not be empty").     Assert.notNull(converterClass, "Converter class must not be null").     Map<String, String> registry = (Map<String, String>) this.context.getObject(CoreConstants.PATTERN_RULE_REGISTRY).     if (registry == null) {         registry = new HashMap<>().         this.context.putObject(CoreConstants.PATTERN_RULE_REGISTRY, registry).     }     registry.put(conversionWord, converterClass.getName()). }
false;public;2;4;;public void appender(String name, Appender<?> appender) {     appender.setName(name).     start(appender). }
false;public;2;3;;public void logger(String name, Level level) {     logger(name, level, true). }
false;public;3;3;;public void logger(String name, Level level, boolean additive) {     logger(name, level, additive, null). }
false;public;4;11;;public void logger(String name, Level level, boolean additive, Appender<ILoggingEvent> appender) {     Logger logger = this.context.getLogger(name).     if (level != null) {         logger.setLevel(level).     }     logger.setAdditive(additive).     if (appender != null) {         logger.addAppender(appender).     } }
false;public,final;2;10;;@SafeVarargs public final void root(Level level, Appender<ILoggingEvent>... appenders) {     Logger logger = this.context.getLogger(org.slf4j.Logger.ROOT_LOGGER_NAME).     if (level != null) {         logger.setLevel(level).     }     for (Appender<ILoggingEvent> appender : appenders) {         logger.addAppender(appender).     } }
false;public;1;6;;public void start(LifeCycle lifeCycle) {     if (lifeCycle instanceof ContextAware) {         ((ContextAware) lifeCycle).setContext(this.context).     }     lifeCycle.start(). }
