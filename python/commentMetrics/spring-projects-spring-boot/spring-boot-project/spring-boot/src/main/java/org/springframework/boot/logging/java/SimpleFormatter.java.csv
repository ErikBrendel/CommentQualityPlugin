commented;modifiers;parameterAmount;loc;comment;code
false;public,synchronized;1;11;;@Override public synchronized String format(LogRecord record) {     this.date.setTime(record.getMillis()).     String source = record.getLoggerName().     String message = formatMessage(record).     String throwable = getThrowable(record).     String thread = getThreadName().     return String.format(this.format, this.date, source, record.getLoggerName(), record.getLevel().getLocalizedName(), message, throwable, thread, this.pid). }
false;private;1;11;;private String getThrowable(LogRecord record) {     if (record.getThrown() == null) {         return "".     }     StringWriter stringWriter = new StringWriter().     PrintWriter printWriter = new PrintWriter(stringWriter).     printWriter.println().     record.getThrown().printStackTrace(printWriter).     printWriter.close().     return stringWriter.toString(). }
false;private;0;4;;private String getThreadName() {     String name = Thread.currentThread().getName().     return (name != null) ? name : "". }
false;private,static;2;13;;private static String getOrUseDefault(String key, String defaultValue) {     String value = null.     try {         value = System.getenv(key).     } catch (Exception ex) {     // ignore     }     if (value == null) {         value = defaultValue.     }     return System.getProperty(key, value). }
