commented;modifiers;parameterAmount;loc;comment;code
false;public;1;11;;@Override public ConfigurationProperty getConfigurationProperty(ConfigurationPropertyName name) {     Assert.notNull(name, "Name must not be null").     ConfigurationProperty result = getSource().getConfigurationProperty(name).     if (result == null) {         ConfigurationPropertyName aliasedName = getAliases().getNameForAlias(name).         result = getSource().getConfigurationProperty(aliasedName).     }     return result. }
false;public;1;26;;@Override public ConfigurationPropertyState containsDescendantOf(ConfigurationPropertyName name) {     Assert.notNull(name, "Name must not be null").     ConfigurationPropertyState result = this.source.containsDescendantOf(name).     if (result != ConfigurationPropertyState.ABSENT) {         return result.     }     for (ConfigurationPropertyName alias : getAliases().getAliases(name)) {         ConfigurationPropertyState aliasResult = this.source.containsDescendantOf(alias).         if (aliasResult != ConfigurationPropertyState.ABSENT) {             return aliasResult.         }     }     for (ConfigurationPropertyName from : getAliases()) {         for (ConfigurationPropertyName alias : getAliases().getAliases(from)) {             if (name.isAncestorOf(alias)) {                 if (this.source.getConfigurationProperty(from) != null) {                     return ConfigurationPropertyState.PRESENT.                 }             }         }     }     return ConfigurationPropertyState.ABSENT. }
false;public;0;4;;@Override public Object getUnderlyingSource() {     return this.source.getUnderlyingSource(). }
false;protected;0;3;;protected ConfigurationPropertySource getSource() {     return this.source. }
false;protected;0;3;;protected ConfigurationPropertyNameAliases getAliases() {     return this.aliases. }
