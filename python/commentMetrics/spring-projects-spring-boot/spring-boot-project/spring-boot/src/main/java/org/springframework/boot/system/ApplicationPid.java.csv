# id;timestamp;commentText;codeText;commentWords;codeWords
ApplicationPid -> public void write(File file) throws IOException;1517532282;Write the PID to the specified file._@param file the PID file_@throws IllegalStateException if no PID is available._@throws IOException if the file cannot be written;public void write(File file) throws IOException {_		Assert.state(this.pid != null, "No PID available")__		createParentFolder(file)__		if (file.exists()) {_			assertCanOverwrite(file)__		}_		try (FileWriter writer = new FileWriter(file)) {_			writer.append(this.pid)__		}_	};write,the,pid,to,the,specified,file,param,file,the,pid,file,throws,illegal,state,exception,if,no,pid,is,available,throws,ioexception,if,the,file,cannot,be,written;public,void,write,file,file,throws,ioexception,assert,state,this,pid,null,no,pid,available,create,parent,folder,file,if,file,exists,assert,can,overwrite,file,try,file,writer,writer,new,file,writer,file,writer,append,this,pid
ApplicationPid -> public void write(File file) throws IOException;1525376698;Write the PID to the specified file._@param file the PID file_@throws IllegalStateException if no PID is available._@throws IOException if the file cannot be written;public void write(File file) throws IOException {_		Assert.state(this.pid != null, "No PID available")__		createParentFolder(file)__		if (file.exists()) {_			assertCanOverwrite(file)__		}_		try (FileWriter writer = new FileWriter(file)) {_			writer.append(this.pid)__		}_	};write,the,pid,to,the,specified,file,param,file,the,pid,file,throws,illegal,state,exception,if,no,pid,is,available,throws,ioexception,if,the,file,cannot,be,written;public,void,write,file,file,throws,ioexception,assert,state,this,pid,null,no,pid,available,create,parent,folder,file,if,file,exists,assert,can,overwrite,file,try,file,writer,writer,new,file,writer,file,writer,append,this,pid
ApplicationPid -> public void write(File file) throws IOException;1532738143;Write the PID to the specified file._@param file the PID file_@throws IllegalStateException if no PID is available._@throws IOException if the file cannot be written;public void write(File file) throws IOException {_		Assert.state(this.pid != null, "No PID available")__		createParentFolder(file)__		if (file.exists()) {_			assertCanOverwrite(file)__		}_		try (FileWriter writer = new FileWriter(file)) {_			writer.append(this.pid)__		}_	};write,the,pid,to,the,specified,file,param,file,the,pid,file,throws,illegal,state,exception,if,no,pid,is,available,throws,ioexception,if,the,file,cannot,be,written;public,void,write,file,file,throws,ioexception,assert,state,this,pid,null,no,pid,available,create,parent,folder,file,if,file,exists,assert,can,overwrite,file,try,file,writer,writer,new,file,writer,file,writer,append,this,pid
