# id;timestamp;commentText;codeText;commentWords;codeWords
WebServiceTemplateBuilder -> public <T extends WebServiceTemplate> T configure(T webServiceTemplate);1528108121;Configure the provided {@link WebServiceTemplate} instance using this builder._@param <T> the type of web service template_@param webServiceTemplate the {@link WebServiceTemplate} to configure_@return the web service template instance_@see #build()_@see #build(Class);public <T extends WebServiceTemplate> T configure(T webServiceTemplate) {_		Assert.notNull(webServiceTemplate, "webServiceTemplate must not be null")__		configureMessageSenders(webServiceTemplate)__		if (!CollectionUtils.isEmpty(this.internalCustomizers)) {_			for (WebServiceTemplateCustomizer internalCustomizer : this.internalCustomizers) {_				internalCustomizer.customize(webServiceTemplate)__			}_		}_		if (this.marshaller != null) {_			webServiceTemplate.setMarshaller(this.marshaller)__		}_		if (this.unmarshaller != null) {_			webServiceTemplate.setUnmarshaller(this.unmarshaller)__		}_		if (this.destinationProvider != null) {_			webServiceTemplate.setDestinationProvider(this.destinationProvider)__		}_		if (this.transformerFactoryClass != null) {_			webServiceTemplate.setTransformerFactoryClass(this.transformerFactoryClass)__		}_		if (this.messageFactory != null) {_			webServiceTemplate.setMessageFactory(this.messageFactory)__		}_		if (!CollectionUtils.isEmpty(this.interceptors)) {_			webServiceTemplate.setInterceptors(_					append(this.interceptors, webServiceTemplate.getInterceptors())_							.toArray(new ClientInterceptor[0]))__		}_		if (!CollectionUtils.isEmpty(this.customizers)) {_			for (WebServiceTemplateCustomizer customizer : this.customizers) {_				customizer.customize(webServiceTemplate)__			}_		}_		return webServiceTemplate__	};configure,the,provided,link,web,service,template,instance,using,this,builder,param,t,the,type,of,web,service,template,param,web,service,template,the,link,web,service,template,to,configure,return,the,web,service,template,instance,see,build,see,build,class;public,t,extends,web,service,template,t,configure,t,web,service,template,assert,not,null,web,service,template,web,service,template,must,not,be,null,configure,message,senders,web,service,template,if,collection,utils,is,empty,this,internal,customizers,for,web,service,template,customizer,internal,customizer,this,internal,customizers,internal,customizer,customize,web,service,template,if,this,marshaller,null,web,service,template,set,marshaller,this,marshaller,if,this,unmarshaller,null,web,service,template,set,unmarshaller,this,unmarshaller,if,this,destination,provider,null,web,service,template,set,destination,provider,this,destination,provider,if,this,transformer,factory,class,null,web,service,template,set,transformer,factory,class,this,transformer,factory,class,if,this,message,factory,null,web,service,template,set,message,factory,this,message,factory,if,collection,utils,is,empty,this,interceptors,web,service,template,set,interceptors,append,this,interceptors,web,service,template,get,interceptors,to,array,new,client,interceptor,0,if,collection,utils,is,empty,this,customizers,for,web,service,template,customizer,customizer,this,customizers,customizer,customize,web,service,template,return,web,service,template
WebServiceTemplateBuilder -> public <T extends WebServiceTemplate> T configure(T webServiceTemplate);1528149726;Configure the provided {@link WebServiceTemplate} instance using this builder._@param <T> the type of web service template_@param webServiceTemplate the {@link WebServiceTemplate} to configure_@return the web service template instance_@see #build()_@see #build(Class);public <T extends WebServiceTemplate> T configure(T webServiceTemplate) {_		Assert.notNull(webServiceTemplate, "WebServiceTemplate must not be null")__		configureMessageSenders(webServiceTemplate)__		PropertyMapper map = PropertyMapper.get().alwaysApplyingWhenNonNull()__		applyCustomizers(webServiceTemplate, this.internalCustomizers)__		map.from(() -> this.marshaller).to(webServiceTemplate::setMarshaller)__		map.from(() -> this.unmarshaller).to(webServiceTemplate::setUnmarshaller)__		map.from(() -> this.destinationProvider)_				.to(webServiceTemplate::setDestinationProvider)__		map.from(() -> this.transformerFactoryClass)_				.to(webServiceTemplate::setTransformerFactoryClass)__		map.from(() -> this.messageFactory).to(webServiceTemplate::setMessageFactory)__		if (!CollectionUtils.isEmpty(this.interceptors)) {_			Set<ClientInterceptor> merged = new LinkedHashSet<>(this.interceptors)__			if (webServiceTemplate.getInterceptors() != null) {_				merged.addAll(Arrays.asList(webServiceTemplate.getInterceptors()))__			}_			webServiceTemplate.setInterceptors(merged.toArray(new ClientInterceptor[0]))__		}_		applyCustomizers(webServiceTemplate, this.customizers)__		return webServiceTemplate__	};configure,the,provided,link,web,service,template,instance,using,this,builder,param,t,the,type,of,web,service,template,param,web,service,template,the,link,web,service,template,to,configure,return,the,web,service,template,instance,see,build,see,build,class;public,t,extends,web,service,template,t,configure,t,web,service,template,assert,not,null,web,service,template,web,service,template,must,not,be,null,configure,message,senders,web,service,template,property,mapper,map,property,mapper,get,always,applying,when,non,null,apply,customizers,web,service,template,this,internal,customizers,map,from,this,marshaller,to,web,service,template,set,marshaller,map,from,this,unmarshaller,to,web,service,template,set,unmarshaller,map,from,this,destination,provider,to,web,service,template,set,destination,provider,map,from,this,transformer,factory,class,to,web,service,template,set,transformer,factory,class,map,from,this,message,factory,to,web,service,template,set,message,factory,if,collection,utils,is,empty,this,interceptors,set,client,interceptor,merged,new,linked,hash,set,this,interceptors,if,web,service,template,get,interceptors,null,merged,add,all,arrays,as,list,web,service,template,get,interceptors,web,service,template,set,interceptors,merged,to,array,new,client,interceptor,0,apply,customizers,web,service,template,this,customizers,return,web,service,template
WebServiceTemplateBuilder -> public <T extends WebServiceTemplate> T configure(T webServiceTemplate);1532738164;Configure the provided {@link WebServiceTemplate} instance using this builder._@param <T> the type of web service template_@param webServiceTemplate the {@link WebServiceTemplate} to configure_@return the web service template instance_@see #build()_@see #build(Class);public <T extends WebServiceTemplate> T configure(T webServiceTemplate) {_		Assert.notNull(webServiceTemplate, "WebServiceTemplate must not be null")__		configureMessageSenders(webServiceTemplate)__		PropertyMapper map = PropertyMapper.get().alwaysApplyingWhenNonNull()__		applyCustomizers(webServiceTemplate, this.internalCustomizers)__		map.from(() -> this.marshaller).to(webServiceTemplate::setMarshaller)__		map.from(() -> this.unmarshaller).to(webServiceTemplate::setUnmarshaller)__		map.from(() -> this.destinationProvider)_				.to(webServiceTemplate::setDestinationProvider)__		map.from(() -> this.transformerFactoryClass)_				.to(webServiceTemplate::setTransformerFactoryClass)__		map.from(() -> this.messageFactory).to(webServiceTemplate::setMessageFactory)__		if (!CollectionUtils.isEmpty(this.interceptors)) {_			Set<ClientInterceptor> merged = new LinkedHashSet<>(this.interceptors)__			if (webServiceTemplate.getInterceptors() != null) {_				merged.addAll(Arrays.asList(webServiceTemplate.getInterceptors()))__			}_			webServiceTemplate.setInterceptors(merged.toArray(new ClientInterceptor[0]))__		}_		applyCustomizers(webServiceTemplate, this.customizers)__		return webServiceTemplate__	};configure,the,provided,link,web,service,template,instance,using,this,builder,param,t,the,type,of,web,service,template,param,web,service,template,the,link,web,service,template,to,configure,return,the,web,service,template,instance,see,build,see,build,class;public,t,extends,web,service,template,t,configure,t,web,service,template,assert,not,null,web,service,template,web,service,template,must,not,be,null,configure,message,senders,web,service,template,property,mapper,map,property,mapper,get,always,applying,when,non,null,apply,customizers,web,service,template,this,internal,customizers,map,from,this,marshaller,to,web,service,template,set,marshaller,map,from,this,unmarshaller,to,web,service,template,set,unmarshaller,map,from,this,destination,provider,to,web,service,template,set,destination,provider,map,from,this,transformer,factory,class,to,web,service,template,set,transformer,factory,class,map,from,this,message,factory,to,web,service,template,set,message,factory,if,collection,utils,is,empty,this,interceptors,set,client,interceptor,merged,new,linked,hash,set,this,interceptors,if,web,service,template,get,interceptors,null,merged,add,all,arrays,as,list,web,service,template,get,interceptors,web,service,template,set,interceptors,merged,to,array,new,client,interceptor,0,apply,customizers,web,service,template,this,customizers,return,web,service,template
WebServiceTemplateBuilder -> public <T extends WebServiceTemplate> T configure(T webServiceTemplate);1534945262;Configure the provided {@link WebServiceTemplate} instance using this builder._@param <T> the type of web service template_@param webServiceTemplate the {@link WebServiceTemplate} to configure_@return the web service template instance_@see #build()_@see #build(Class);public <T extends WebServiceTemplate> T configure(T webServiceTemplate) {_		Assert.notNull(webServiceTemplate, "WebServiceTemplate must not be null")__		configureMessageSenders(webServiceTemplate)__		PropertyMapper map = PropertyMapper.get().alwaysApplyingWhenNonNull()__		applyCustomizers(webServiceTemplate, this.internalCustomizers)__		map.from(this.marshaller).to(webServiceTemplate::setMarshaller)__		map.from(this.unmarshaller).to(webServiceTemplate::setUnmarshaller)__		map.from(this.destinationProvider).to(webServiceTemplate::setDestinationProvider)__		map.from(this.transformerFactoryClass)_				.to(webServiceTemplate::setTransformerFactoryClass)__		map.from(this.messageFactory).to(webServiceTemplate::setMessageFactory)__		if (!CollectionUtils.isEmpty(this.interceptors)) {_			Set<ClientInterceptor> merged = new LinkedHashSet<>(this.interceptors)__			if (webServiceTemplate.getInterceptors() != null) {_				merged.addAll(Arrays.asList(webServiceTemplate.getInterceptors()))__			}_			webServiceTemplate.setInterceptors(merged.toArray(new ClientInterceptor[0]))__		}_		applyCustomizers(webServiceTemplate, this.customizers)__		return webServiceTemplate__	};configure,the,provided,link,web,service,template,instance,using,this,builder,param,t,the,type,of,web,service,template,param,web,service,template,the,link,web,service,template,to,configure,return,the,web,service,template,instance,see,build,see,build,class;public,t,extends,web,service,template,t,configure,t,web,service,template,assert,not,null,web,service,template,web,service,template,must,not,be,null,configure,message,senders,web,service,template,property,mapper,map,property,mapper,get,always,applying,when,non,null,apply,customizers,web,service,template,this,internal,customizers,map,from,this,marshaller,to,web,service,template,set,marshaller,map,from,this,unmarshaller,to,web,service,template,set,unmarshaller,map,from,this,destination,provider,to,web,service,template,set,destination,provider,map,from,this,transformer,factory,class,to,web,service,template,set,transformer,factory,class,map,from,this,message,factory,to,web,service,template,set,message,factory,if,collection,utils,is,empty,this,interceptors,set,client,interceptor,merged,new,linked,hash,set,this,interceptors,if,web,service,template,get,interceptors,null,merged,add,all,arrays,as,list,web,service,template,get,interceptors,web,service,template,set,interceptors,merged,to,array,new,client,interceptor,0,apply,customizers,web,service,template,this,customizers,return,web,service,template
WebServiceTemplateBuilder -> public WebServiceTemplateBuilder setDefaultUri(String defaultUri);1528108121;Set the default URI to be used on operations that do not have a URI parameter._<p>_Typically, either this property is set, or_{@link #setDestinationProvider(DestinationProvider)}, but not both._@param defaultUri the destination provider URI to be used on operations that do not_have a URI parameter._@return a new builder instance._@see #setDestinationProvider(DestinationProvider);public WebServiceTemplateBuilder setDefaultUri(String defaultUri) {_		Assert.hasText(defaultUri, "DefaultUri must not be empty")__		return setDestinationProvider(() -> URI.create(defaultUri))__	};set,the,default,uri,to,be,used,on,operations,that,do,not,have,a,uri,parameter,p,typically,either,this,property,is,set,or,link,set,destination,provider,destination,provider,but,not,both,param,default,uri,the,destination,provider,uri,to,be,used,on,operations,that,do,not,have,a,uri,parameter,return,a,new,builder,instance,see,set,destination,provider,destination,provider;public,web,service,template,builder,set,default,uri,string,default,uri,assert,has,text,default,uri,default,uri,must,not,be,empty,return,set,destination,provider,uri,create,default,uri
WebServiceTemplateBuilder -> public WebServiceTemplateBuilder setDefaultUri(String defaultUri);1528149726;Set the default URI to be used on operations that do not have a URI parameter._Typically, either this property is set, or_{@link #setDestinationProvider(DestinationProvider)}, but not both._@param defaultUri the destination provider URI to be used on operations that do not_have a URI parameter._@return a new builder instance._@see #setDestinationProvider(DestinationProvider);public WebServiceTemplateBuilder setDefaultUri(String defaultUri) {_		Assert.hasText(defaultUri, "DefaultUri must not be empty")__		return setDestinationProvider(() -> URI.create(defaultUri))__	};set,the,default,uri,to,be,used,on,operations,that,do,not,have,a,uri,parameter,typically,either,this,property,is,set,or,link,set,destination,provider,destination,provider,but,not,both,param,default,uri,the,destination,provider,uri,to,be,used,on,operations,that,do,not,have,a,uri,parameter,return,a,new,builder,instance,see,set,destination,provider,destination,provider;public,web,service,template,builder,set,default,uri,string,default,uri,assert,has,text,default,uri,default,uri,must,not,be,empty,return,set,destination,provider,uri,create,default,uri
WebServiceTemplateBuilder -> public WebServiceTemplateBuilder setDefaultUri(String defaultUri);1532738164;Set the default URI to be used on operations that do not have a URI parameter._Typically, either this property is set, or_{@link #setDestinationProvider(DestinationProvider)}, but not both._@param defaultUri the destination provider URI to be used on operations that do not_have a URI parameter._@return a new builder instance._@see #setDestinationProvider(DestinationProvider);public WebServiceTemplateBuilder setDefaultUri(String defaultUri) {_		Assert.hasText(defaultUri, "DefaultUri must not be empty")__		return setDestinationProvider(() -> URI.create(defaultUri))__	};set,the,default,uri,to,be,used,on,operations,that,do,not,have,a,uri,parameter,typically,either,this,property,is,set,or,link,set,destination,provider,destination,provider,but,not,both,param,default,uri,the,destination,provider,uri,to,be,used,on,operations,that,do,not,have,a,uri,parameter,return,a,new,builder,instance,see,set,destination,provider,destination,provider;public,web,service,template,builder,set,default,uri,string,default,uri,assert,has,text,default,uri,default,uri,must,not,be,empty,return,set,destination,provider,uri,create,default,uri
WebServiceTemplateBuilder -> public WebServiceTemplateBuilder setDefaultUri(String defaultUri);1534945262;Set the default URI to be used on operations that do not have a URI parameter._Typically, either this property is set, or_{@link #setDestinationProvider(DestinationProvider)}, but not both._@param defaultUri the destination provider URI to be used on operations that do not_have a URI parameter._@return a new builder instance._@see #setDestinationProvider(DestinationProvider);public WebServiceTemplateBuilder setDefaultUri(String defaultUri) {_		Assert.hasText(defaultUri, "DefaultUri must not be empty")__		return setDestinationProvider(() -> URI.create(defaultUri))__	};set,the,default,uri,to,be,used,on,operations,that,do,not,have,a,uri,parameter,typically,either,this,property,is,set,or,link,set,destination,provider,destination,provider,but,not,both,param,default,uri,the,destination,provider,uri,to,be,used,on,operations,that,do,not,have,a,uri,parameter,return,a,new,builder,instance,see,set,destination,provider,destination,provider;public,web,service,template,builder,set,default,uri,string,default,uri,assert,has,text,default,uri,default,uri,must,not,be,empty,return,set,destination,provider,uri,create,default,uri
WebServiceTemplateBuilder -> public WebServiceTemplateBuilder setFaultMessageResolver( 			FaultMessageResolver faultMessageResolver);1528108121;Set the {@link FaultMessageResolver} to use._@param faultMessageResolver the fault message resolver to use_@return a new builder instance._@see WebServiceTemplate#setFaultMessageResolver(FaultMessageResolver);public WebServiceTemplateBuilder setFaultMessageResolver(_			FaultMessageResolver faultMessageResolver) {_		return new WebServiceTemplateBuilder(this.detectHttpMessageSender,_				this.interceptors,_				append(this.internalCustomizers,_						new FaultMessageResolverCustomizer(faultMessageResolver)),_				this.customizers, this.messageSenders, this.marshaller, this.unmarshaller,_				this.destinationProvider, this.transformerFactoryClass,_				this.messageFactory)__	};set,the,link,fault,message,resolver,to,use,param,fault,message,resolver,the,fault,message,resolver,to,use,return,a,new,builder,instance,see,web,service,template,set,fault,message,resolver,fault,message,resolver;public,web,service,template,builder,set,fault,message,resolver,fault,message,resolver,fault,message,resolver,return,new,web,service,template,builder,this,detect,http,message,sender,this,interceptors,append,this,internal,customizers,new,fault,message,resolver,customizer,fault,message,resolver,this,customizers,this,message,senders,this,marshaller,this,unmarshaller,this,destination,provider,this,transformer,factory,class,this,message,factory
WebServiceTemplateBuilder -> public WebServiceTemplateBuilder setFaultMessageResolver( 			FaultMessageResolver faultMessageResolver);1528149726;Set the {@link FaultMessageResolver} to use._@param faultMessageResolver the fault message resolver to use_@return a new builder instance._@see WebServiceTemplate#setFaultMessageResolver(FaultMessageResolver);public WebServiceTemplateBuilder setFaultMessageResolver(_			FaultMessageResolver faultMessageResolver) {_		return new WebServiceTemplateBuilder(this.detectHttpMessageSender,_				this.interceptors,_				append(this.internalCustomizers,_						new FaultMessageResolverCustomizer(faultMessageResolver)),_				this.customizers, this.messageSenders, this.marshaller, this.unmarshaller,_				this.destinationProvider, this.transformerFactoryClass,_				this.messageFactory)__	};set,the,link,fault,message,resolver,to,use,param,fault,message,resolver,the,fault,message,resolver,to,use,return,a,new,builder,instance,see,web,service,template,set,fault,message,resolver,fault,message,resolver;public,web,service,template,builder,set,fault,message,resolver,fault,message,resolver,fault,message,resolver,return,new,web,service,template,builder,this,detect,http,message,sender,this,interceptors,append,this,internal,customizers,new,fault,message,resolver,customizer,fault,message,resolver,this,customizers,this,message,senders,this,marshaller,this,unmarshaller,this,destination,provider,this,transformer,factory,class,this,message,factory
WebServiceTemplateBuilder -> public WebServiceTemplateBuilder setFaultMessageResolver( 			FaultMessageResolver faultMessageResolver);1532738164;Set the {@link FaultMessageResolver} to use._@param faultMessageResolver the fault message resolver to use_@return a new builder instance._@see WebServiceTemplate#setFaultMessageResolver(FaultMessageResolver);public WebServiceTemplateBuilder setFaultMessageResolver(_			FaultMessageResolver faultMessageResolver) {_		return new WebServiceTemplateBuilder(this.detectHttpMessageSender,_				this.interceptors,_				append(this.internalCustomizers,_						new FaultMessageResolverCustomizer(faultMessageResolver)),_				this.customizers, this.messageSenders, this.marshaller, this.unmarshaller,_				this.destinationProvider, this.transformerFactoryClass,_				this.messageFactory)__	};set,the,link,fault,message,resolver,to,use,param,fault,message,resolver,the,fault,message,resolver,to,use,return,a,new,builder,instance,see,web,service,template,set,fault,message,resolver,fault,message,resolver;public,web,service,template,builder,set,fault,message,resolver,fault,message,resolver,fault,message,resolver,return,new,web,service,template,builder,this,detect,http,message,sender,this,interceptors,append,this,internal,customizers,new,fault,message,resolver,customizer,fault,message,resolver,this,customizers,this,message,senders,this,marshaller,this,unmarshaller,this,destination,provider,this,transformer,factory,class,this,message,factory
WebServiceTemplateBuilder -> public WebServiceTemplateBuilder setFaultMessageResolver( 			FaultMessageResolver faultMessageResolver);1534945262;Set the {@link FaultMessageResolver} to use._@param faultMessageResolver the fault message resolver to use_@return a new builder instance._@see WebServiceTemplate#setFaultMessageResolver(FaultMessageResolver);public WebServiceTemplateBuilder setFaultMessageResolver(_			FaultMessageResolver faultMessageResolver) {_		return new WebServiceTemplateBuilder(this.detectHttpMessageSender,_				this.interceptors,_				append(this.internalCustomizers,_						new FaultMessageResolverCustomizer(faultMessageResolver)),_				this.customizers, this.messageSenders, this.marshaller, this.unmarshaller,_				this.destinationProvider, this.transformerFactoryClass,_				this.messageFactory)__	};set,the,link,fault,message,resolver,to,use,param,fault,message,resolver,the,fault,message,resolver,to,use,return,a,new,builder,instance,see,web,service,template,set,fault,message,resolver,fault,message,resolver;public,web,service,template,builder,set,fault,message,resolver,fault,message,resolver,fault,message,resolver,return,new,web,service,template,builder,this,detect,http,message,sender,this,interceptors,append,this,internal,customizers,new,fault,message,resolver,customizer,fault,message,resolver,this,customizers,this,message,senders,this,marshaller,this,unmarshaller,this,destination,provider,this,transformer,factory,class,this,message,factory
WebServiceTemplateBuilder -> public WebServiceTemplateBuilder additionalMessageSenders( 			Collection<? extends WebServiceMessageSender> messageSenders);1528108121;Add additional {@link WebServiceMessageSender WebServiceMessageSenders} that should_be used with the {@link WebServiceTemplate}._@param messageSenders the message senders to add_@return a new builder instance._@see #messageSenders(Collection);public WebServiceTemplateBuilder additionalMessageSenders(_			Collection<? extends WebServiceMessageSender> messageSenders) {_		Assert.notNull(messageSenders, "MessageSenders must not be null")__		return new WebServiceTemplateBuilder(this.detectHttpMessageSender,_				this.interceptors, this.internalCustomizers, this.customizers,_				this.messageSenders.add(messageSenders), this.marshaller,_				this.unmarshaller, this.destinationProvider, this.transformerFactoryClass,_				this.messageFactory)__	};add,additional,link,web,service,message,sender,web,service,message,senders,that,should,be,used,with,the,link,web,service,template,param,message,senders,the,message,senders,to,add,return,a,new,builder,instance,see,message,senders,collection;public,web,service,template,builder,additional,message,senders,collection,extends,web,service,message,sender,message,senders,assert,not,null,message,senders,message,senders,must,not,be,null,return,new,web,service,template,builder,this,detect,http,message,sender,this,interceptors,this,internal,customizers,this,customizers,this,message,senders,add,message,senders,this,marshaller,this,unmarshaller,this,destination,provider,this,transformer,factory,class,this,message,factory
WebServiceTemplateBuilder -> public WebServiceTemplateBuilder additionalMessageSenders( 			Collection<? extends WebServiceMessageSender> messageSenders);1528149726;Add additional {@link WebServiceMessageSender WebServiceMessageSenders} that should_be used with the {@link WebServiceTemplate}._@param messageSenders the message senders to add_@return a new builder instance._@see #messageSenders(Collection);public WebServiceTemplateBuilder additionalMessageSenders(_			Collection<? extends WebServiceMessageSender> messageSenders) {_		Assert.notNull(messageSenders, "MessageSenders must not be null")__		return new WebServiceTemplateBuilder(this.detectHttpMessageSender,_				this.interceptors, this.internalCustomizers, this.customizers,_				this.messageSenders.add(messageSenders), this.marshaller,_				this.unmarshaller, this.destinationProvider, this.transformerFactoryClass,_				this.messageFactory)__	};add,additional,link,web,service,message,sender,web,service,message,senders,that,should,be,used,with,the,link,web,service,template,param,message,senders,the,message,senders,to,add,return,a,new,builder,instance,see,message,senders,collection;public,web,service,template,builder,additional,message,senders,collection,extends,web,service,message,sender,message,senders,assert,not,null,message,senders,message,senders,must,not,be,null,return,new,web,service,template,builder,this,detect,http,message,sender,this,interceptors,this,internal,customizers,this,customizers,this,message,senders,add,message,senders,this,marshaller,this,unmarshaller,this,destination,provider,this,transformer,factory,class,this,message,factory
WebServiceTemplateBuilder -> public WebServiceTemplateBuilder additionalMessageSenders( 			Collection<? extends WebServiceMessageSender> messageSenders);1532738164;Add additional {@link WebServiceMessageSender WebServiceMessageSenders} that should_be used with the {@link WebServiceTemplate}._@param messageSenders the message senders to add_@return a new builder instance._@see #messageSenders(Collection);public WebServiceTemplateBuilder additionalMessageSenders(_			Collection<? extends WebServiceMessageSender> messageSenders) {_		Assert.notNull(messageSenders, "MessageSenders must not be null")__		return new WebServiceTemplateBuilder(this.detectHttpMessageSender,_				this.interceptors, this.internalCustomizers, this.customizers,_				this.messageSenders.add(messageSenders), this.marshaller,_				this.unmarshaller, this.destinationProvider, this.transformerFactoryClass,_				this.messageFactory)__	};add,additional,link,web,service,message,sender,web,service,message,senders,that,should,be,used,with,the,link,web,service,template,param,message,senders,the,message,senders,to,add,return,a,new,builder,instance,see,message,senders,collection;public,web,service,template,builder,additional,message,senders,collection,extends,web,service,message,sender,message,senders,assert,not,null,message,senders,message,senders,must,not,be,null,return,new,web,service,template,builder,this,detect,http,message,sender,this,interceptors,this,internal,customizers,this,customizers,this,message,senders,add,message,senders,this,marshaller,this,unmarshaller,this,destination,provider,this,transformer,factory,class,this,message,factory
WebServiceTemplateBuilder -> public WebServiceTemplateBuilder additionalMessageSenders( 			Collection<? extends WebServiceMessageSender> messageSenders);1534945262;Add additional {@link WebServiceMessageSender WebServiceMessageSenders} that should_be used with the {@link WebServiceTemplate}._@param messageSenders the message senders to add_@return a new builder instance._@see #messageSenders(Collection);public WebServiceTemplateBuilder additionalMessageSenders(_			Collection<? extends WebServiceMessageSender> messageSenders) {_		Assert.notNull(messageSenders, "MessageSenders must not be null")__		return new WebServiceTemplateBuilder(this.detectHttpMessageSender,_				this.interceptors, this.internalCustomizers, this.customizers,_				this.messageSenders.add(messageSenders), this.marshaller,_				this.unmarshaller, this.destinationProvider, this.transformerFactoryClass,_				this.messageFactory)__	};add,additional,link,web,service,message,sender,web,service,message,senders,that,should,be,used,with,the,link,web,service,template,param,message,senders,the,message,senders,to,add,return,a,new,builder,instance,see,message,senders,collection;public,web,service,template,builder,additional,message,senders,collection,extends,web,service,message,sender,message,senders,assert,not,null,message,senders,message,senders,must,not,be,null,return,new,web,service,template,builder,this,detect,http,message,sender,this,interceptors,this,internal,customizers,this,customizers,this,message,senders,add,message,senders,this,marshaller,this,unmarshaller,this,destination,provider,this,transformer,factory,class,this,message,factory
WebServiceTemplateBuilder -> public WebServiceTemplate build();1528108121;Build a new {@link WebServiceTemplate} instance and configure it using this_builder._@return a configured {@link WebServiceTemplate} instance._@see #build(Class)_@see #configure(WebServiceTemplate);public WebServiceTemplate build() {_		return build(WebServiceTemplate.class)__	};build,a,new,link,web,service,template,instance,and,configure,it,using,this,builder,return,a,configured,link,web,service,template,instance,see,build,class,see,configure,web,service,template;public,web,service,template,build,return,build,web,service,template,class
WebServiceTemplateBuilder -> public WebServiceTemplate build();1528149726;Build a new {@link WebServiceTemplate} instance and configure it using this_builder._@return a configured {@link WebServiceTemplate} instance._@see #build(Class)_@see #configure(WebServiceTemplate);public WebServiceTemplate build() {_		return build(WebServiceTemplate.class)__	};build,a,new,link,web,service,template,instance,and,configure,it,using,this,builder,return,a,configured,link,web,service,template,instance,see,build,class,see,configure,web,service,template;public,web,service,template,build,return,build,web,service,template,class
WebServiceTemplateBuilder -> public WebServiceTemplate build();1532738164;Build a new {@link WebServiceTemplate} instance and configure it using this_builder._@return a configured {@link WebServiceTemplate} instance._@see #build(Class)_@see #configure(WebServiceTemplate);public WebServiceTemplate build() {_		return build(WebServiceTemplate.class)__	};build,a,new,link,web,service,template,instance,and,configure,it,using,this,builder,return,a,configured,link,web,service,template,instance,see,build,class,see,configure,web,service,template;public,web,service,template,build,return,build,web,service,template,class
WebServiceTemplateBuilder -> public WebServiceTemplate build();1534945262;Build a new {@link WebServiceTemplate} instance and configure it using this_builder._@return a configured {@link WebServiceTemplate} instance._@see #build(Class)_@see #configure(WebServiceTemplate);public WebServiceTemplate build() {_		return build(WebServiceTemplate.class)__	};build,a,new,link,web,service,template,instance,and,configure,it,using,this,builder,return,a,configured,link,web,service,template,instance,see,build,class,see,configure,web,service,template;public,web,service,template,build,return,build,web,service,template,class
WebServiceTemplateBuilder -> public WebServiceTemplateBuilder additionalMessageSenders( 			WebServiceMessageSender... messageSenders);1528108121;Add additional {@link WebServiceMessageSender WebServiceMessageSenders} that should_be used with the {@link WebServiceTemplate}._@param messageSenders the message senders to add_@return a new builder instance._@see #messageSenders(WebServiceMessageSender...);public WebServiceTemplateBuilder additionalMessageSenders(_			WebServiceMessageSender... messageSenders) {_		Assert.notNull(messageSenders, "MessageSenders must not be null")__		return additionalMessageSenders(Arrays.asList(messageSenders))__	};add,additional,link,web,service,message,sender,web,service,message,senders,that,should,be,used,with,the,link,web,service,template,param,message,senders,the,message,senders,to,add,return,a,new,builder,instance,see,message,senders,web,service,message,sender;public,web,service,template,builder,additional,message,senders,web,service,message,sender,message,senders,assert,not,null,message,senders,message,senders,must,not,be,null,return,additional,message,senders,arrays,as,list,message,senders
WebServiceTemplateBuilder -> public WebServiceTemplateBuilder additionalMessageSenders( 			WebServiceMessageSender... messageSenders);1528149726;Add additional {@link WebServiceMessageSender WebServiceMessageSenders} that should_be used with the {@link WebServiceTemplate}._@param messageSenders the message senders to add_@return a new builder instance._@see #messageSenders(WebServiceMessageSender...);public WebServiceTemplateBuilder additionalMessageSenders(_			WebServiceMessageSender... messageSenders) {_		Assert.notNull(messageSenders, "MessageSenders must not be null")__		return additionalMessageSenders(Arrays.asList(messageSenders))__	};add,additional,link,web,service,message,sender,web,service,message,senders,that,should,be,used,with,the,link,web,service,template,param,message,senders,the,message,senders,to,add,return,a,new,builder,instance,see,message,senders,web,service,message,sender;public,web,service,template,builder,additional,message,senders,web,service,message,sender,message,senders,assert,not,null,message,senders,message,senders,must,not,be,null,return,additional,message,senders,arrays,as,list,message,senders
WebServiceTemplateBuilder -> public WebServiceTemplateBuilder additionalMessageSenders( 			WebServiceMessageSender... messageSenders);1532738164;Add additional {@link WebServiceMessageSender WebServiceMessageSenders} that should_be used with the {@link WebServiceTemplate}._@param messageSenders the message senders to add_@return a new builder instance._@see #messageSenders(WebServiceMessageSender...);public WebServiceTemplateBuilder additionalMessageSenders(_			WebServiceMessageSender... messageSenders) {_		Assert.notNull(messageSenders, "MessageSenders must not be null")__		return additionalMessageSenders(Arrays.asList(messageSenders))__	};add,additional,link,web,service,message,sender,web,service,message,senders,that,should,be,used,with,the,link,web,service,template,param,message,senders,the,message,senders,to,add,return,a,new,builder,instance,see,message,senders,web,service,message,sender;public,web,service,template,builder,additional,message,senders,web,service,message,sender,message,senders,assert,not,null,message,senders,message,senders,must,not,be,null,return,additional,message,senders,arrays,as,list,message,senders
WebServiceTemplateBuilder -> public WebServiceTemplateBuilder additionalMessageSenders( 			WebServiceMessageSender... messageSenders);1534945262;Add additional {@link WebServiceMessageSender WebServiceMessageSenders} that should_be used with the {@link WebServiceTemplate}._@param messageSenders the message senders to add_@return a new builder instance._@see #messageSenders(WebServiceMessageSender...);public WebServiceTemplateBuilder additionalMessageSenders(_			WebServiceMessageSender... messageSenders) {_		Assert.notNull(messageSenders, "MessageSenders must not be null")__		return additionalMessageSenders(Arrays.asList(messageSenders))__	};add,additional,link,web,service,message,sender,web,service,message,senders,that,should,be,used,with,the,link,web,service,template,param,message,senders,the,message,senders,to,add,return,a,new,builder,instance,see,message,senders,web,service,message,sender;public,web,service,template,builder,additional,message,senders,web,service,message,sender,message,senders,assert,not,null,message,senders,message,senders,must,not,be,null,return,additional,message,senders,arrays,as,list,message,senders
WebServiceTemplateBuilder -> public WebServiceTemplateBuilder customizers( 			WebServiceTemplateCustomizer... customizers);1528108121;Set {@link WebServiceTemplateCustomizer WebServiceTemplateCustomizers} that should_be applied to the {@link WebServiceTemplate}. Customizers are applied in the order_that they were added after builder configuration has been applied. Setting this_value will replace any previously configured customizers._@param customizers the customizers to set_@return a new builder instance_@see #additionalCustomizers(WebServiceTemplateCustomizer...);public WebServiceTemplateBuilder customizers(_			WebServiceTemplateCustomizer... customizers) {_		Assert.notNull(customizers, "Customizers must not be null")__		return customizers(Arrays.asList(customizers))__	};set,link,web,service,template,customizer,web,service,template,customizers,that,should,be,applied,to,the,link,web,service,template,customizers,are,applied,in,the,order,that,they,were,added,after,builder,configuration,has,been,applied,setting,this,value,will,replace,any,previously,configured,customizers,param,customizers,the,customizers,to,set,return,a,new,builder,instance,see,additional,customizers,web,service,template,customizer;public,web,service,template,builder,customizers,web,service,template,customizer,customizers,assert,not,null,customizers,customizers,must,not,be,null,return,customizers,arrays,as,list,customizers
WebServiceTemplateBuilder -> public WebServiceTemplateBuilder customizers( 			WebServiceTemplateCustomizer... customizers);1528149726;Set {@link WebServiceTemplateCustomizer WebServiceTemplateCustomizers} that should_be applied to the {@link WebServiceTemplate}. Customizers are applied in the order_that they were added after builder configuration has been applied. Setting this_value will replace any previously configured customizers._@param customizers the customizers to set_@return a new builder instance_@see #additionalCustomizers(WebServiceTemplateCustomizer...);public WebServiceTemplateBuilder customizers(_			WebServiceTemplateCustomizer... customizers) {_		Assert.notNull(customizers, "Customizers must not be null")__		return customizers(Arrays.asList(customizers))__	};set,link,web,service,template,customizer,web,service,template,customizers,that,should,be,applied,to,the,link,web,service,template,customizers,are,applied,in,the,order,that,they,were,added,after,builder,configuration,has,been,applied,setting,this,value,will,replace,any,previously,configured,customizers,param,customizers,the,customizers,to,set,return,a,new,builder,instance,see,additional,customizers,web,service,template,customizer;public,web,service,template,builder,customizers,web,service,template,customizer,customizers,assert,not,null,customizers,customizers,must,not,be,null,return,customizers,arrays,as,list,customizers
WebServiceTemplateBuilder -> public WebServiceTemplateBuilder customizers( 			WebServiceTemplateCustomizer... customizers);1532738164;Set {@link WebServiceTemplateCustomizer WebServiceTemplateCustomizers} that should_be applied to the {@link WebServiceTemplate}. Customizers are applied in the order_that they were added after builder configuration has been applied. Setting this_value will replace any previously configured customizers._@param customizers the customizers to set_@return a new builder instance_@see #additionalCustomizers(WebServiceTemplateCustomizer...);public WebServiceTemplateBuilder customizers(_			WebServiceTemplateCustomizer... customizers) {_		Assert.notNull(customizers, "Customizers must not be null")__		return customizers(Arrays.asList(customizers))__	};set,link,web,service,template,customizer,web,service,template,customizers,that,should,be,applied,to,the,link,web,service,template,customizers,are,applied,in,the,order,that,they,were,added,after,builder,configuration,has,been,applied,setting,this,value,will,replace,any,previously,configured,customizers,param,customizers,the,customizers,to,set,return,a,new,builder,instance,see,additional,customizers,web,service,template,customizer;public,web,service,template,builder,customizers,web,service,template,customizer,customizers,assert,not,null,customizers,customizers,must,not,be,null,return,customizers,arrays,as,list,customizers
WebServiceTemplateBuilder -> public WebServiceTemplateBuilder customizers( 			WebServiceTemplateCustomizer... customizers);1534945262;Set {@link WebServiceTemplateCustomizer WebServiceTemplateCustomizers} that should_be applied to the {@link WebServiceTemplate}. Customizers are applied in the order_that they were added after builder configuration has been applied. Setting this_value will replace any previously configured customizers._@param customizers the customizers to set_@return a new builder instance_@see #additionalCustomizers(WebServiceTemplateCustomizer...);public WebServiceTemplateBuilder customizers(_			WebServiceTemplateCustomizer... customizers) {_		Assert.notNull(customizers, "Customizers must not be null")__		return customizers(Arrays.asList(customizers))__	};set,link,web,service,template,customizer,web,service,template,customizers,that,should,be,applied,to,the,link,web,service,template,customizers,are,applied,in,the,order,that,they,were,added,after,builder,configuration,has,been,applied,setting,this,value,will,replace,any,previously,configured,customizers,param,customizers,the,customizers,to,set,return,a,new,builder,instance,see,additional,customizers,web,service,template,customizer;public,web,service,template,builder,customizers,web,service,template,customizer,customizers,assert,not,null,customizers,customizers,must,not,be,null,return,customizers,arrays,as,list,customizers
WebServiceTemplateBuilder -> public WebServiceTemplateBuilder messageSenders( 			WebServiceMessageSender... messageSenders);1528108121;Sets the {@link WebServiceMessageSender WebServiceMessageSenders} that should be_used with the {@link WebServiceTemplate}. Setting this value will replace any_previously defined message senders, including the HTTP-based message sender, if_any. Consider using {@link #additionalMessageSenders(WebServiceMessageSender...)}_to keep it with user-defined message senders._@param messageSenders the message senders to set_@return a new builder instance._@see #additionalMessageSenders(WebServiceMessageSender...)_@see #detectHttpMessageSender(boolean);public WebServiceTemplateBuilder messageSenders(_			WebServiceMessageSender... messageSenders) {_		Assert.notNull(messageSenders, "MessageSenders must not be null")__		return messageSenders(Arrays.asList(messageSenders))__	};sets,the,link,web,service,message,sender,web,service,message,senders,that,should,be,used,with,the,link,web,service,template,setting,this,value,will,replace,any,previously,defined,message,senders,including,the,http,based,message,sender,if,any,consider,using,link,additional,message,senders,web,service,message,sender,to,keep,it,with,user,defined,message,senders,param,message,senders,the,message,senders,to,set,return,a,new,builder,instance,see,additional,message,senders,web,service,message,sender,see,detect,http,message,sender,boolean;public,web,service,template,builder,message,senders,web,service,message,sender,message,senders,assert,not,null,message,senders,message,senders,must,not,be,null,return,message,senders,arrays,as,list,message,senders
WebServiceTemplateBuilder -> public WebServiceTemplateBuilder messageSenders( 			WebServiceMessageSender... messageSenders);1528149726;Sets the {@link WebServiceMessageSender WebServiceMessageSenders} that should be_used with the {@link WebServiceTemplate}. Setting this value will replace any_previously defined message senders, including the HTTP-based message sender, if_any. Consider using {@link #additionalMessageSenders(WebServiceMessageSender...)}_to keep it with user-defined message senders._@param messageSenders the message senders to set_@return a new builder instance._@see #additionalMessageSenders(WebServiceMessageSender...)_@see #detectHttpMessageSender(boolean);public WebServiceTemplateBuilder messageSenders(_			WebServiceMessageSender... messageSenders) {_		Assert.notNull(messageSenders, "MessageSenders must not be null")__		return messageSenders(Arrays.asList(messageSenders))__	};sets,the,link,web,service,message,sender,web,service,message,senders,that,should,be,used,with,the,link,web,service,template,setting,this,value,will,replace,any,previously,defined,message,senders,including,the,http,based,message,sender,if,any,consider,using,link,additional,message,senders,web,service,message,sender,to,keep,it,with,user,defined,message,senders,param,message,senders,the,message,senders,to,set,return,a,new,builder,instance,see,additional,message,senders,web,service,message,sender,see,detect,http,message,sender,boolean;public,web,service,template,builder,message,senders,web,service,message,sender,message,senders,assert,not,null,message,senders,message,senders,must,not,be,null,return,message,senders,arrays,as,list,message,senders
WebServiceTemplateBuilder -> public WebServiceTemplateBuilder messageSenders( 			WebServiceMessageSender... messageSenders);1532738164;Sets the {@link WebServiceMessageSender WebServiceMessageSenders} that should be_used with the {@link WebServiceTemplate}. Setting this value will replace any_previously defined message senders, including the HTTP-based message sender, if_any. Consider using {@link #additionalMessageSenders(WebServiceMessageSender...)}_to keep it with user-defined message senders._@param messageSenders the message senders to set_@return a new builder instance._@see #additionalMessageSenders(WebServiceMessageSender...)_@see #detectHttpMessageSender(boolean);public WebServiceTemplateBuilder messageSenders(_			WebServiceMessageSender... messageSenders) {_		Assert.notNull(messageSenders, "MessageSenders must not be null")__		return messageSenders(Arrays.asList(messageSenders))__	};sets,the,link,web,service,message,sender,web,service,message,senders,that,should,be,used,with,the,link,web,service,template,setting,this,value,will,replace,any,previously,defined,message,senders,including,the,http,based,message,sender,if,any,consider,using,link,additional,message,senders,web,service,message,sender,to,keep,it,with,user,defined,message,senders,param,message,senders,the,message,senders,to,set,return,a,new,builder,instance,see,additional,message,senders,web,service,message,sender,see,detect,http,message,sender,boolean;public,web,service,template,builder,message,senders,web,service,message,sender,message,senders,assert,not,null,message,senders,message,senders,must,not,be,null,return,message,senders,arrays,as,list,message,senders
WebServiceTemplateBuilder -> public WebServiceTemplateBuilder messageSenders( 			WebServiceMessageSender... messageSenders);1534945262;Sets the {@link WebServiceMessageSender WebServiceMessageSenders} that should be_used with the {@link WebServiceTemplate}. Setting this value will replace any_previously defined message senders, including the HTTP-based message sender, if_any. Consider using {@link #additionalMessageSenders(WebServiceMessageSender...)}_to keep it with user-defined message senders._@param messageSenders the message senders to set_@return a new builder instance._@see #additionalMessageSenders(WebServiceMessageSender...)_@see #detectHttpMessageSender(boolean);public WebServiceTemplateBuilder messageSenders(_			WebServiceMessageSender... messageSenders) {_		Assert.notNull(messageSenders, "MessageSenders must not be null")__		return messageSenders(Arrays.asList(messageSenders))__	};sets,the,link,web,service,message,sender,web,service,message,senders,that,should,be,used,with,the,link,web,service,template,setting,this,value,will,replace,any,previously,defined,message,senders,including,the,http,based,message,sender,if,any,consider,using,link,additional,message,senders,web,service,message,sender,to,keep,it,with,user,defined,message,senders,param,message,senders,the,message,senders,to,set,return,a,new,builder,instance,see,additional,message,senders,web,service,message,sender,see,detect,http,message,sender,boolean;public,web,service,template,builder,message,senders,web,service,message,sender,message,senders,assert,not,null,message,senders,message,senders,must,not,be,null,return,message,senders,arrays,as,list,message,senders
WebServiceTemplateBuilder -> public WebServiceTemplateBuilder setWebServiceMessageFactory( 			WebServiceMessageFactory messageFactory);1528108121;Sets the {@link WebServiceMessageFactory} to use for creating messages._@param messageFactory the message factory to use for creating messages_@return a new builder instance._@see WebServiceTemplate#setMessageFactory(WebServiceMessageFactory);public WebServiceTemplateBuilder setWebServiceMessageFactory(_			WebServiceMessageFactory messageFactory) {_		Assert.notNull(messageFactory, "messageFactory must not be null")__		return new WebServiceTemplateBuilder(this.detectHttpMessageSender,_				this.interceptors, this.internalCustomizers, this.customizers,_				this.messageSenders, this.marshaller, this.unmarshaller,_				this.destinationProvider, this.transformerFactoryClass, messageFactory)__	};sets,the,link,web,service,message,factory,to,use,for,creating,messages,param,message,factory,the,message,factory,to,use,for,creating,messages,return,a,new,builder,instance,see,web,service,template,set,message,factory,web,service,message,factory;public,web,service,template,builder,set,web,service,message,factory,web,service,message,factory,message,factory,assert,not,null,message,factory,message,factory,must,not,be,null,return,new,web,service,template,builder,this,detect,http,message,sender,this,interceptors,this,internal,customizers,this,customizers,this,message,senders,this,marshaller,this,unmarshaller,this,destination,provider,this,transformer,factory,class,message,factory
WebServiceTemplateBuilder -> public WebServiceTemplateBuilder setWebServiceMessageFactory( 			WebServiceMessageFactory messageFactory);1528149726;Sets the {@link WebServiceMessageFactory} to use for creating messages._@param messageFactory the message factory to use for creating messages_@return a new builder instance._@see WebServiceTemplate#setMessageFactory(WebServiceMessageFactory);public WebServiceTemplateBuilder setWebServiceMessageFactory(_			WebServiceMessageFactory messageFactory) {_		Assert.notNull(messageFactory, "MessageFactory must not be null")__		return new WebServiceTemplateBuilder(this.detectHttpMessageSender,_				this.interceptors, this.internalCustomizers, this.customizers,_				this.messageSenders, this.marshaller, this.unmarshaller,_				this.destinationProvider, this.transformerFactoryClass, messageFactory)__	};sets,the,link,web,service,message,factory,to,use,for,creating,messages,param,message,factory,the,message,factory,to,use,for,creating,messages,return,a,new,builder,instance,see,web,service,template,set,message,factory,web,service,message,factory;public,web,service,template,builder,set,web,service,message,factory,web,service,message,factory,message,factory,assert,not,null,message,factory,message,factory,must,not,be,null,return,new,web,service,template,builder,this,detect,http,message,sender,this,interceptors,this,internal,customizers,this,customizers,this,message,senders,this,marshaller,this,unmarshaller,this,destination,provider,this,transformer,factory,class,message,factory
WebServiceTemplateBuilder -> public WebServiceTemplateBuilder setWebServiceMessageFactory( 			WebServiceMessageFactory messageFactory);1532738164;Sets the {@link WebServiceMessageFactory} to use for creating messages._@param messageFactory the message factory to use for creating messages_@return a new builder instance._@see WebServiceTemplate#setMessageFactory(WebServiceMessageFactory);public WebServiceTemplateBuilder setWebServiceMessageFactory(_			WebServiceMessageFactory messageFactory) {_		Assert.notNull(messageFactory, "MessageFactory must not be null")__		return new WebServiceTemplateBuilder(this.detectHttpMessageSender,_				this.interceptors, this.internalCustomizers, this.customizers,_				this.messageSenders, this.marshaller, this.unmarshaller,_				this.destinationProvider, this.transformerFactoryClass, messageFactory)__	};sets,the,link,web,service,message,factory,to,use,for,creating,messages,param,message,factory,the,message,factory,to,use,for,creating,messages,return,a,new,builder,instance,see,web,service,template,set,message,factory,web,service,message,factory;public,web,service,template,builder,set,web,service,message,factory,web,service,message,factory,message,factory,assert,not,null,message,factory,message,factory,must,not,be,null,return,new,web,service,template,builder,this,detect,http,message,sender,this,interceptors,this,internal,customizers,this,customizers,this,message,senders,this,marshaller,this,unmarshaller,this,destination,provider,this,transformer,factory,class,message,factory
WebServiceTemplateBuilder -> public WebServiceTemplateBuilder setWebServiceMessageFactory( 			WebServiceMessageFactory messageFactory);1534945262;Sets the {@link WebServiceMessageFactory} to use for creating messages._@param messageFactory the message factory to use for creating messages_@return a new builder instance._@see WebServiceTemplate#setMessageFactory(WebServiceMessageFactory);public WebServiceTemplateBuilder setWebServiceMessageFactory(_			WebServiceMessageFactory messageFactory) {_		Assert.notNull(messageFactory, "MessageFactory must not be null")__		return new WebServiceTemplateBuilder(this.detectHttpMessageSender,_				this.interceptors, this.internalCustomizers, this.customizers,_				this.messageSenders, this.marshaller, this.unmarshaller,_				this.destinationProvider, this.transformerFactoryClass, messageFactory)__	};sets,the,link,web,service,message,factory,to,use,for,creating,messages,param,message,factory,the,message,factory,to,use,for,creating,messages,return,a,new,builder,instance,see,web,service,template,set,message,factory,web,service,message,factory;public,web,service,template,builder,set,web,service,message,factory,web,service,message,factory,message,factory,assert,not,null,message,factory,message,factory,must,not,be,null,return,new,web,service,template,builder,this,detect,http,message,sender,this,interceptors,this,internal,customizers,this,customizers,this,message,senders,this,marshaller,this,unmarshaller,this,destination,provider,this,transformer,factory,class,message,factory
WebServiceTemplateBuilder -> public WebServiceTemplateBuilder messageSenders( 			Collection<? extends WebServiceMessageSender> messageSenders);1528108121;Sets the {@link WebServiceMessageSender WebServiceMessageSenders} that should be_used with the {@link WebServiceTemplate}. Setting this value will replace any_previously defined message senders, including the HTTP-based message sender, if_any. Consider using {@link #additionalMessageSenders(Collection)} to keep it with_user-defined message senders._@param messageSenders the message senders to set_@return a new builder instance._@see #additionalMessageSenders(Collection)_@see #detectHttpMessageSender(boolean);public WebServiceTemplateBuilder messageSenders(_			Collection<? extends WebServiceMessageSender> messageSenders) {_		Assert.notNull(messageSenders, "MessageSenders must not be null")__		return new WebServiceTemplateBuilder(this.detectHttpMessageSender,_				this.interceptors, this.internalCustomizers, this.customizers,_				this.messageSenders.set(messageSenders), this.marshaller,_				this.unmarshaller, this.destinationProvider, this.transformerFactoryClass,_				this.messageFactory)__	};sets,the,link,web,service,message,sender,web,service,message,senders,that,should,be,used,with,the,link,web,service,template,setting,this,value,will,replace,any,previously,defined,message,senders,including,the,http,based,message,sender,if,any,consider,using,link,additional,message,senders,collection,to,keep,it,with,user,defined,message,senders,param,message,senders,the,message,senders,to,set,return,a,new,builder,instance,see,additional,message,senders,collection,see,detect,http,message,sender,boolean;public,web,service,template,builder,message,senders,collection,extends,web,service,message,sender,message,senders,assert,not,null,message,senders,message,senders,must,not,be,null,return,new,web,service,template,builder,this,detect,http,message,sender,this,interceptors,this,internal,customizers,this,customizers,this,message,senders,set,message,senders,this,marshaller,this,unmarshaller,this,destination,provider,this,transformer,factory,class,this,message,factory
WebServiceTemplateBuilder -> public WebServiceTemplateBuilder messageSenders( 			Collection<? extends WebServiceMessageSender> messageSenders);1528149726;Sets the {@link WebServiceMessageSender WebServiceMessageSenders} that should be_used with the {@link WebServiceTemplate}. Setting this value will replace any_previously defined message senders, including the HTTP-based message sender, if_any. Consider using {@link #additionalMessageSenders(Collection)} to keep it with_user-defined message senders._@param messageSenders the message senders to set_@return a new builder instance._@see #additionalMessageSenders(Collection)_@see #detectHttpMessageSender(boolean);public WebServiceTemplateBuilder messageSenders(_			Collection<? extends WebServiceMessageSender> messageSenders) {_		Assert.notNull(messageSenders, "MessageSenders must not be null")__		return new WebServiceTemplateBuilder(this.detectHttpMessageSender,_				this.interceptors, this.internalCustomizers, this.customizers,_				this.messageSenders.set(messageSenders), this.marshaller,_				this.unmarshaller, this.destinationProvider, this.transformerFactoryClass,_				this.messageFactory)__	};sets,the,link,web,service,message,sender,web,service,message,senders,that,should,be,used,with,the,link,web,service,template,setting,this,value,will,replace,any,previously,defined,message,senders,including,the,http,based,message,sender,if,any,consider,using,link,additional,message,senders,collection,to,keep,it,with,user,defined,message,senders,param,message,senders,the,message,senders,to,set,return,a,new,builder,instance,see,additional,message,senders,collection,see,detect,http,message,sender,boolean;public,web,service,template,builder,message,senders,collection,extends,web,service,message,sender,message,senders,assert,not,null,message,senders,message,senders,must,not,be,null,return,new,web,service,template,builder,this,detect,http,message,sender,this,interceptors,this,internal,customizers,this,customizers,this,message,senders,set,message,senders,this,marshaller,this,unmarshaller,this,destination,provider,this,transformer,factory,class,this,message,factory
WebServiceTemplateBuilder -> public WebServiceTemplateBuilder messageSenders( 			Collection<? extends WebServiceMessageSender> messageSenders);1532738164;Sets the {@link WebServiceMessageSender WebServiceMessageSenders} that should be_used with the {@link WebServiceTemplate}. Setting this value will replace any_previously defined message senders, including the HTTP-based message sender, if_any. Consider using {@link #additionalMessageSenders(Collection)} to keep it with_user-defined message senders._@param messageSenders the message senders to set_@return a new builder instance._@see #additionalMessageSenders(Collection)_@see #detectHttpMessageSender(boolean);public WebServiceTemplateBuilder messageSenders(_			Collection<? extends WebServiceMessageSender> messageSenders) {_		Assert.notNull(messageSenders, "MessageSenders must not be null")__		return new WebServiceTemplateBuilder(this.detectHttpMessageSender,_				this.interceptors, this.internalCustomizers, this.customizers,_				this.messageSenders.set(messageSenders), this.marshaller,_				this.unmarshaller, this.destinationProvider, this.transformerFactoryClass,_				this.messageFactory)__	};sets,the,link,web,service,message,sender,web,service,message,senders,that,should,be,used,with,the,link,web,service,template,setting,this,value,will,replace,any,previously,defined,message,senders,including,the,http,based,message,sender,if,any,consider,using,link,additional,message,senders,collection,to,keep,it,with,user,defined,message,senders,param,message,senders,the,message,senders,to,set,return,a,new,builder,instance,see,additional,message,senders,collection,see,detect,http,message,sender,boolean;public,web,service,template,builder,message,senders,collection,extends,web,service,message,sender,message,senders,assert,not,null,message,senders,message,senders,must,not,be,null,return,new,web,service,template,builder,this,detect,http,message,sender,this,interceptors,this,internal,customizers,this,customizers,this,message,senders,set,message,senders,this,marshaller,this,unmarshaller,this,destination,provider,this,transformer,factory,class,this,message,factory
WebServiceTemplateBuilder -> public WebServiceTemplateBuilder messageSenders( 			Collection<? extends WebServiceMessageSender> messageSenders);1534945262;Sets the {@link WebServiceMessageSender WebServiceMessageSenders} that should be_used with the {@link WebServiceTemplate}. Setting this value will replace any_previously defined message senders, including the HTTP-based message sender, if_any. Consider using {@link #additionalMessageSenders(Collection)} to keep it with_user-defined message senders._@param messageSenders the message senders to set_@return a new builder instance._@see #additionalMessageSenders(Collection)_@see #detectHttpMessageSender(boolean);public WebServiceTemplateBuilder messageSenders(_			Collection<? extends WebServiceMessageSender> messageSenders) {_		Assert.notNull(messageSenders, "MessageSenders must not be null")__		return new WebServiceTemplateBuilder(this.detectHttpMessageSender,_				this.interceptors, this.internalCustomizers, this.customizers,_				this.messageSenders.set(messageSenders), this.marshaller,_				this.unmarshaller, this.destinationProvider, this.transformerFactoryClass,_				this.messageFactory)__	};sets,the,link,web,service,message,sender,web,service,message,senders,that,should,be,used,with,the,link,web,service,template,setting,this,value,will,replace,any,previously,defined,message,senders,including,the,http,based,message,sender,if,any,consider,using,link,additional,message,senders,collection,to,keep,it,with,user,defined,message,senders,param,message,senders,the,message,senders,to,set,return,a,new,builder,instance,see,additional,message,senders,collection,see,detect,http,message,sender,boolean;public,web,service,template,builder,message,senders,collection,extends,web,service,message,sender,message,senders,assert,not,null,message,senders,message,senders,must,not,be,null,return,new,web,service,template,builder,this,detect,http,message,sender,this,interceptors,this,internal,customizers,this,customizers,this,message,senders,set,message,senders,this,marshaller,this,unmarshaller,this,destination,provider,this,transformer,factory,class,this,message,factory
WebServiceTemplateBuilder -> public <T extends WebServiceTemplate> T build(Class<T> webServiceTemplateClass);1528108121;Build a new {@link WebServiceTemplate} instance of the specified type and configure_it using this builder._@param <T> the type of web service template_@param webServiceTemplateClass the template type to create_@return a configured {@link WebServiceTemplate} instance._@see WebServiceTemplateBuilder#build()_@see #configure(WebServiceTemplate);public <T extends WebServiceTemplate> T build(Class<T> webServiceTemplateClass) {_		Assert.notNull(webServiceTemplateClass,_				"WebServiceTemplateClass must not be null")__		return configure(BeanUtils.instantiateClass(webServiceTemplateClass))__	};build,a,new,link,web,service,template,instance,of,the,specified,type,and,configure,it,using,this,builder,param,t,the,type,of,web,service,template,param,web,service,template,class,the,template,type,to,create,return,a,configured,link,web,service,template,instance,see,web,service,template,builder,build,see,configure,web,service,template;public,t,extends,web,service,template,t,build,class,t,web,service,template,class,assert,not,null,web,service,template,class,web,service,template,class,must,not,be,null,return,configure,bean,utils,instantiate,class,web,service,template,class
WebServiceTemplateBuilder -> public <T extends WebServiceTemplate> T build(Class<T> webServiceTemplateClass);1528149726;Build a new {@link WebServiceTemplate} instance of the specified type and configure_it using this builder._@param <T> the type of web service template_@param webServiceTemplateClass the template type to create_@return a configured {@link WebServiceTemplate} instance._@see WebServiceTemplateBuilder#build()_@see #configure(WebServiceTemplate);public <T extends WebServiceTemplate> T build(Class<T> webServiceTemplateClass) {_		Assert.notNull(webServiceTemplateClass,_				"WebServiceTemplateClass must not be null")__		return configure(BeanUtils.instantiateClass(webServiceTemplateClass))__	};build,a,new,link,web,service,template,instance,of,the,specified,type,and,configure,it,using,this,builder,param,t,the,type,of,web,service,template,param,web,service,template,class,the,template,type,to,create,return,a,configured,link,web,service,template,instance,see,web,service,template,builder,build,see,configure,web,service,template;public,t,extends,web,service,template,t,build,class,t,web,service,template,class,assert,not,null,web,service,template,class,web,service,template,class,must,not,be,null,return,configure,bean,utils,instantiate,class,web,service,template,class
WebServiceTemplateBuilder -> public <T extends WebServiceTemplate> T build(Class<T> webServiceTemplateClass);1532738164;Build a new {@link WebServiceTemplate} instance of the specified type and configure_it using this builder._@param <T> the type of web service template_@param webServiceTemplateClass the template type to create_@return a configured {@link WebServiceTemplate} instance._@see WebServiceTemplateBuilder#build()_@see #configure(WebServiceTemplate);public <T extends WebServiceTemplate> T build(Class<T> webServiceTemplateClass) {_		Assert.notNull(webServiceTemplateClass,_				"WebServiceTemplateClass must not be null")__		return configure(BeanUtils.instantiateClass(webServiceTemplateClass))__	};build,a,new,link,web,service,template,instance,of,the,specified,type,and,configure,it,using,this,builder,param,t,the,type,of,web,service,template,param,web,service,template,class,the,template,type,to,create,return,a,configured,link,web,service,template,instance,see,web,service,template,builder,build,see,configure,web,service,template;public,t,extends,web,service,template,t,build,class,t,web,service,template,class,assert,not,null,web,service,template,class,web,service,template,class,must,not,be,null,return,configure,bean,utils,instantiate,class,web,service,template,class
WebServiceTemplateBuilder -> public <T extends WebServiceTemplate> T build(Class<T> webServiceTemplateClass);1534945262;Build a new {@link WebServiceTemplate} instance of the specified type and configure_it using this builder._@param <T> the type of web service template_@param webServiceTemplateClass the template type to create_@return a configured {@link WebServiceTemplate} instance._@see WebServiceTemplateBuilder#build()_@see #configure(WebServiceTemplate);public <T extends WebServiceTemplate> T build(Class<T> webServiceTemplateClass) {_		Assert.notNull(webServiceTemplateClass,_				"WebServiceTemplateClass must not be null")__		return configure(BeanUtils.instantiateClass(webServiceTemplateClass))__	};build,a,new,link,web,service,template,instance,of,the,specified,type,and,configure,it,using,this,builder,param,t,the,type,of,web,service,template,param,web,service,template,class,the,template,type,to,create,return,a,configured,link,web,service,template,instance,see,web,service,template,builder,build,see,configure,web,service,template;public,t,extends,web,service,template,t,build,class,t,web,service,template,class,assert,not,null,web,service,template,class,web,service,template,class,must,not,be,null,return,configure,bean,utils,instantiate,class,web,service,template,class
WebServiceTemplateBuilder -> public WebServiceTemplateBuilder additionalInterceptors( 			ClientInterceptor... interceptors);1528108121;Add additional {@link ClientInterceptor ClientInterceptors} that should be used_with the {@link WebServiceTemplate}._@param interceptors the interceptors to add_@return a new builder instance_@see #interceptors(ClientInterceptor...);public WebServiceTemplateBuilder additionalInterceptors(_			ClientInterceptor... interceptors) {_		Assert.notNull(interceptors, "Interceptors must not be null")__		return additionalInterceptors(Arrays.asList(interceptors))__	};add,additional,link,client,interceptor,client,interceptors,that,should,be,used,with,the,link,web,service,template,param,interceptors,the,interceptors,to,add,return,a,new,builder,instance,see,interceptors,client,interceptor;public,web,service,template,builder,additional,interceptors,client,interceptor,interceptors,assert,not,null,interceptors,interceptors,must,not,be,null,return,additional,interceptors,arrays,as,list,interceptors
WebServiceTemplateBuilder -> public WebServiceTemplateBuilder additionalInterceptors( 			ClientInterceptor... interceptors);1528149726;Add additional {@link ClientInterceptor ClientInterceptors} that should be used_with the {@link WebServiceTemplate}._@param interceptors the interceptors to add_@return a new builder instance_@see #interceptors(ClientInterceptor...);public WebServiceTemplateBuilder additionalInterceptors(_			ClientInterceptor... interceptors) {_		Assert.notNull(interceptors, "Interceptors must not be null")__		return additionalInterceptors(Arrays.asList(interceptors))__	};add,additional,link,client,interceptor,client,interceptors,that,should,be,used,with,the,link,web,service,template,param,interceptors,the,interceptors,to,add,return,a,new,builder,instance,see,interceptors,client,interceptor;public,web,service,template,builder,additional,interceptors,client,interceptor,interceptors,assert,not,null,interceptors,interceptors,must,not,be,null,return,additional,interceptors,arrays,as,list,interceptors
WebServiceTemplateBuilder -> public WebServiceTemplateBuilder additionalInterceptors( 			ClientInterceptor... interceptors);1532738164;Add additional {@link ClientInterceptor ClientInterceptors} that should be used_with the {@link WebServiceTemplate}._@param interceptors the interceptors to add_@return a new builder instance_@see #interceptors(ClientInterceptor...);public WebServiceTemplateBuilder additionalInterceptors(_			ClientInterceptor... interceptors) {_		Assert.notNull(interceptors, "Interceptors must not be null")__		return additionalInterceptors(Arrays.asList(interceptors))__	};add,additional,link,client,interceptor,client,interceptors,that,should,be,used,with,the,link,web,service,template,param,interceptors,the,interceptors,to,add,return,a,new,builder,instance,see,interceptors,client,interceptor;public,web,service,template,builder,additional,interceptors,client,interceptor,interceptors,assert,not,null,interceptors,interceptors,must,not,be,null,return,additional,interceptors,arrays,as,list,interceptors
WebServiceTemplateBuilder -> public WebServiceTemplateBuilder additionalInterceptors( 			ClientInterceptor... interceptors);1534945262;Add additional {@link ClientInterceptor ClientInterceptors} that should be used_with the {@link WebServiceTemplate}._@param interceptors the interceptors to add_@return a new builder instance_@see #interceptors(ClientInterceptor...);public WebServiceTemplateBuilder additionalInterceptors(_			ClientInterceptor... interceptors) {_		Assert.notNull(interceptors, "Interceptors must not be null")__		return additionalInterceptors(Arrays.asList(interceptors))__	};add,additional,link,client,interceptor,client,interceptors,that,should,be,used,with,the,link,web,service,template,param,interceptors,the,interceptors,to,add,return,a,new,builder,instance,see,interceptors,client,interceptor;public,web,service,template,builder,additional,interceptors,client,interceptor,interceptors,assert,not,null,interceptors,interceptors,must,not,be,null,return,additional,interceptors,arrays,as,list,interceptors
WebServiceTemplateBuilder -> public WebServiceTemplateBuilder setCheckConnectionForError( 			boolean checkConnectionForError);1528108121;Indicates whether the connection should be checked for error indicators_({@code true}), or whether these should be ignored ({@code false})._@param checkConnectionForError whether to check for error indicators_@return a new builder instance._@see WebServiceTemplate#setCheckConnectionForError(boolean);public WebServiceTemplateBuilder setCheckConnectionForError(_			boolean checkConnectionForError) {_		return new WebServiceTemplateBuilder(this.detectHttpMessageSender,_				this.interceptors,_				append(this.internalCustomizers,_						new CheckConnectionForErrorCustomizer(checkConnectionForError)),_				this.customizers, this.messageSenders, this.marshaller, this.unmarshaller,_				this.destinationProvider, this.transformerFactoryClass,_				this.messageFactory)__	};indicates,whether,the,connection,should,be,checked,for,error,indicators,code,true,or,whether,these,should,be,ignored,code,false,param,check,connection,for,error,whether,to,check,for,error,indicators,return,a,new,builder,instance,see,web,service,template,set,check,connection,for,error,boolean;public,web,service,template,builder,set,check,connection,for,error,boolean,check,connection,for,error,return,new,web,service,template,builder,this,detect,http,message,sender,this,interceptors,append,this,internal,customizers,new,check,connection,for,error,customizer,check,connection,for,error,this,customizers,this,message,senders,this,marshaller,this,unmarshaller,this,destination,provider,this,transformer,factory,class,this,message,factory
WebServiceTemplateBuilder -> public WebServiceTemplateBuilder setCheckConnectionForError( 			boolean checkConnectionForError);1528149726;Indicates whether the connection should be checked for error indicators_({@code true}), or whether these should be ignored ({@code false})._@param checkConnectionForError whether to check for error indicators_@return a new builder instance._@see WebServiceTemplate#setCheckConnectionForError(boolean);public WebServiceTemplateBuilder setCheckConnectionForError(_			boolean checkConnectionForError) {_		return new WebServiceTemplateBuilder(this.detectHttpMessageSender,_				this.interceptors,_				append(this.internalCustomizers,_						new CheckConnectionForErrorCustomizer(checkConnectionForError)),_				this.customizers, this.messageSenders, this.marshaller, this.unmarshaller,_				this.destinationProvider, this.transformerFactoryClass,_				this.messageFactory)__	};indicates,whether,the,connection,should,be,checked,for,error,indicators,code,true,or,whether,these,should,be,ignored,code,false,param,check,connection,for,error,whether,to,check,for,error,indicators,return,a,new,builder,instance,see,web,service,template,set,check,connection,for,error,boolean;public,web,service,template,builder,set,check,connection,for,error,boolean,check,connection,for,error,return,new,web,service,template,builder,this,detect,http,message,sender,this,interceptors,append,this,internal,customizers,new,check,connection,for,error,customizer,check,connection,for,error,this,customizers,this,message,senders,this,marshaller,this,unmarshaller,this,destination,provider,this,transformer,factory,class,this,message,factory
WebServiceTemplateBuilder -> public WebServiceTemplateBuilder setCheckConnectionForError( 			boolean checkConnectionForError);1532738164;Indicates whether the connection should be checked for error indicators_({@code true}), or whether these should be ignored ({@code false})._@param checkConnectionForError whether to check for error indicators_@return a new builder instance._@see WebServiceTemplate#setCheckConnectionForError(boolean);public WebServiceTemplateBuilder setCheckConnectionForError(_			boolean checkConnectionForError) {_		return new WebServiceTemplateBuilder(this.detectHttpMessageSender,_				this.interceptors,_				append(this.internalCustomizers,_						new CheckConnectionForErrorCustomizer(checkConnectionForError)),_				this.customizers, this.messageSenders, this.marshaller, this.unmarshaller,_				this.destinationProvider, this.transformerFactoryClass,_				this.messageFactory)__	};indicates,whether,the,connection,should,be,checked,for,error,indicators,code,true,or,whether,these,should,be,ignored,code,false,param,check,connection,for,error,whether,to,check,for,error,indicators,return,a,new,builder,instance,see,web,service,template,set,check,connection,for,error,boolean;public,web,service,template,builder,set,check,connection,for,error,boolean,check,connection,for,error,return,new,web,service,template,builder,this,detect,http,message,sender,this,interceptors,append,this,internal,customizers,new,check,connection,for,error,customizer,check,connection,for,error,this,customizers,this,message,senders,this,marshaller,this,unmarshaller,this,destination,provider,this,transformer,factory,class,this,message,factory
WebServiceTemplateBuilder -> public WebServiceTemplateBuilder setCheckConnectionForError( 			boolean checkConnectionForError);1534945262;Indicates whether the connection should be checked for error indicators_({@code true}), or whether these should be ignored ({@code false})._@param checkConnectionForError whether to check for error indicators_@return a new builder instance._@see WebServiceTemplate#setCheckConnectionForError(boolean);public WebServiceTemplateBuilder setCheckConnectionForError(_			boolean checkConnectionForError) {_		return new WebServiceTemplateBuilder(this.detectHttpMessageSender,_				this.interceptors,_				append(this.internalCustomizers,_						new CheckConnectionForErrorCustomizer(checkConnectionForError)),_				this.customizers, this.messageSenders, this.marshaller, this.unmarshaller,_				this.destinationProvider, this.transformerFactoryClass,_				this.messageFactory)__	};indicates,whether,the,connection,should,be,checked,for,error,indicators,code,true,or,whether,these,should,be,ignored,code,false,param,check,connection,for,error,whether,to,check,for,error,indicators,return,a,new,builder,instance,see,web,service,template,set,check,connection,for,error,boolean;public,web,service,template,builder,set,check,connection,for,error,boolean,check,connection,for,error,return,new,web,service,template,builder,this,detect,http,message,sender,this,interceptors,append,this,internal,customizers,new,check,connection,for,error,customizer,check,connection,for,error,this,customizers,this,message,senders,this,marshaller,this,unmarshaller,this,destination,provider,this,transformer,factory,class,this,message,factory
WebServiceTemplateBuilder -> public WebServiceTemplateBuilder setMarshaller(Marshaller marshaller);1528108121;Set the {@link Marshaller} to use to serialize messages._@param marshaller the message marshaller_@return a new builder instance._@see WebServiceTemplate#setMarshaller(Marshaller);public WebServiceTemplateBuilder setMarshaller(Marshaller marshaller) {_		return new WebServiceTemplateBuilder(this.detectHttpMessageSender,_				this.interceptors, this.internalCustomizers, this.customizers,_				this.messageSenders, marshaller, this.unmarshaller,_				this.destinationProvider, this.transformerFactoryClass,_				this.messageFactory)__	};set,the,link,marshaller,to,use,to,serialize,messages,param,marshaller,the,message,marshaller,return,a,new,builder,instance,see,web,service,template,set,marshaller,marshaller;public,web,service,template,builder,set,marshaller,marshaller,marshaller,return,new,web,service,template,builder,this,detect,http,message,sender,this,interceptors,this,internal,customizers,this,customizers,this,message,senders,marshaller,this,unmarshaller,this,destination,provider,this,transformer,factory,class,this,message,factory
WebServiceTemplateBuilder -> public WebServiceTemplateBuilder setMarshaller(Marshaller marshaller);1528149726;Set the {@link Marshaller} to use to serialize messages._@param marshaller the message marshaller_@return a new builder instance._@see WebServiceTemplate#setMarshaller(Marshaller);public WebServiceTemplateBuilder setMarshaller(Marshaller marshaller) {_		return new WebServiceTemplateBuilder(this.detectHttpMessageSender,_				this.interceptors, this.internalCustomizers, this.customizers,_				this.messageSenders, marshaller, this.unmarshaller,_				this.destinationProvider, this.transformerFactoryClass,_				this.messageFactory)__	};set,the,link,marshaller,to,use,to,serialize,messages,param,marshaller,the,message,marshaller,return,a,new,builder,instance,see,web,service,template,set,marshaller,marshaller;public,web,service,template,builder,set,marshaller,marshaller,marshaller,return,new,web,service,template,builder,this,detect,http,message,sender,this,interceptors,this,internal,customizers,this,customizers,this,message,senders,marshaller,this,unmarshaller,this,destination,provider,this,transformer,factory,class,this,message,factory
WebServiceTemplateBuilder -> public WebServiceTemplateBuilder setMarshaller(Marshaller marshaller);1532738164;Set the {@link Marshaller} to use to serialize messages._@param marshaller the message marshaller_@return a new builder instance._@see WebServiceTemplate#setMarshaller(Marshaller);public WebServiceTemplateBuilder setMarshaller(Marshaller marshaller) {_		return new WebServiceTemplateBuilder(this.detectHttpMessageSender,_				this.interceptors, this.internalCustomizers, this.customizers,_				this.messageSenders, marshaller, this.unmarshaller,_				this.destinationProvider, this.transformerFactoryClass,_				this.messageFactory)__	};set,the,link,marshaller,to,use,to,serialize,messages,param,marshaller,the,message,marshaller,return,a,new,builder,instance,see,web,service,template,set,marshaller,marshaller;public,web,service,template,builder,set,marshaller,marshaller,marshaller,return,new,web,service,template,builder,this,detect,http,message,sender,this,interceptors,this,internal,customizers,this,customizers,this,message,senders,marshaller,this,unmarshaller,this,destination,provider,this,transformer,factory,class,this,message,factory
WebServiceTemplateBuilder -> public WebServiceTemplateBuilder setMarshaller(Marshaller marshaller);1534945262;Set the {@link Marshaller} to use to serialize messages._@param marshaller the message marshaller_@return a new builder instance._@see WebServiceTemplate#setMarshaller(Marshaller);public WebServiceTemplateBuilder setMarshaller(Marshaller marshaller) {_		return new WebServiceTemplateBuilder(this.detectHttpMessageSender,_				this.interceptors, this.internalCustomizers, this.customizers,_				this.messageSenders, marshaller, this.unmarshaller,_				this.destinationProvider, this.transformerFactoryClass,_				this.messageFactory)__	};set,the,link,marshaller,to,use,to,serialize,messages,param,marshaller,the,message,marshaller,return,a,new,builder,instance,see,web,service,template,set,marshaller,marshaller;public,web,service,template,builder,set,marshaller,marshaller,marshaller,return,new,web,service,template,builder,this,detect,http,message,sender,this,interceptors,this,internal,customizers,this,customizers,this,message,senders,marshaller,this,unmarshaller,this,destination,provider,this,transformer,factory,class,this,message,factory
WebServiceTemplateBuilder -> public WebServiceTemplateBuilder additionalCustomizers( 			Collection<? extends WebServiceTemplateCustomizer> customizers);1528108121;Add additional {@link WebServiceTemplateCustomizer WebServiceTemplateCustomizers}_that should be applied to the {@link WebServiceTemplate}. Customizers are applied_in the order that they were added after builder configuration has been applied._@param customizers the customizers to add_@return a new builder instance_@see #customizers(Collection);public WebServiceTemplateBuilder additionalCustomizers(_			Collection<? extends WebServiceTemplateCustomizer> customizers) {_		Assert.notNull(customizers, "Customizers must not be null")__		return new WebServiceTemplateBuilder(this.detectHttpMessageSender,_				this.interceptors, this.internalCustomizers,_				append(this.customizers, customizers), this.messageSenders,_				this.marshaller, this.unmarshaller, this.destinationProvider,_				this.transformerFactoryClass, this.messageFactory)__	};add,additional,link,web,service,template,customizer,web,service,template,customizers,that,should,be,applied,to,the,link,web,service,template,customizers,are,applied,in,the,order,that,they,were,added,after,builder,configuration,has,been,applied,param,customizers,the,customizers,to,add,return,a,new,builder,instance,see,customizers,collection;public,web,service,template,builder,additional,customizers,collection,extends,web,service,template,customizer,customizers,assert,not,null,customizers,customizers,must,not,be,null,return,new,web,service,template,builder,this,detect,http,message,sender,this,interceptors,this,internal,customizers,append,this,customizers,customizers,this,message,senders,this,marshaller,this,unmarshaller,this,destination,provider,this,transformer,factory,class,this,message,factory
WebServiceTemplateBuilder -> public WebServiceTemplateBuilder additionalCustomizers( 			Collection<? extends WebServiceTemplateCustomizer> customizers);1528149726;Add additional {@link WebServiceTemplateCustomizer WebServiceTemplateCustomizers}_that should be applied to the {@link WebServiceTemplate}. Customizers are applied_in the order that they were added after builder configuration has been applied._@param customizers the customizers to add_@return a new builder instance_@see #customizers(Collection);public WebServiceTemplateBuilder additionalCustomizers(_			Collection<? extends WebServiceTemplateCustomizer> customizers) {_		Assert.notNull(customizers, "Customizers must not be null")__		return new WebServiceTemplateBuilder(this.detectHttpMessageSender,_				this.interceptors, this.internalCustomizers,_				append(this.customizers, customizers), this.messageSenders,_				this.marshaller, this.unmarshaller, this.destinationProvider,_				this.transformerFactoryClass, this.messageFactory)__	};add,additional,link,web,service,template,customizer,web,service,template,customizers,that,should,be,applied,to,the,link,web,service,template,customizers,are,applied,in,the,order,that,they,were,added,after,builder,configuration,has,been,applied,param,customizers,the,customizers,to,add,return,a,new,builder,instance,see,customizers,collection;public,web,service,template,builder,additional,customizers,collection,extends,web,service,template,customizer,customizers,assert,not,null,customizers,customizers,must,not,be,null,return,new,web,service,template,builder,this,detect,http,message,sender,this,interceptors,this,internal,customizers,append,this,customizers,customizers,this,message,senders,this,marshaller,this,unmarshaller,this,destination,provider,this,transformer,factory,class,this,message,factory
WebServiceTemplateBuilder -> public WebServiceTemplateBuilder additionalCustomizers( 			Collection<? extends WebServiceTemplateCustomizer> customizers);1532738164;Add additional {@link WebServiceTemplateCustomizer WebServiceTemplateCustomizers}_that should be applied to the {@link WebServiceTemplate}. Customizers are applied_in the order that they were added after builder configuration has been applied._@param customizers the customizers to add_@return a new builder instance_@see #customizers(Collection);public WebServiceTemplateBuilder additionalCustomizers(_			Collection<? extends WebServiceTemplateCustomizer> customizers) {_		Assert.notNull(customizers, "Customizers must not be null")__		return new WebServiceTemplateBuilder(this.detectHttpMessageSender,_				this.interceptors, this.internalCustomizers,_				append(this.customizers, customizers), this.messageSenders,_				this.marshaller, this.unmarshaller, this.destinationProvider,_				this.transformerFactoryClass, this.messageFactory)__	};add,additional,link,web,service,template,customizer,web,service,template,customizers,that,should,be,applied,to,the,link,web,service,template,customizers,are,applied,in,the,order,that,they,were,added,after,builder,configuration,has,been,applied,param,customizers,the,customizers,to,add,return,a,new,builder,instance,see,customizers,collection;public,web,service,template,builder,additional,customizers,collection,extends,web,service,template,customizer,customizers,assert,not,null,customizers,customizers,must,not,be,null,return,new,web,service,template,builder,this,detect,http,message,sender,this,interceptors,this,internal,customizers,append,this,customizers,customizers,this,message,senders,this,marshaller,this,unmarshaller,this,destination,provider,this,transformer,factory,class,this,message,factory
WebServiceTemplateBuilder -> public WebServiceTemplateBuilder additionalCustomizers( 			Collection<? extends WebServiceTemplateCustomizer> customizers);1534945262;Add additional {@link WebServiceTemplateCustomizer WebServiceTemplateCustomizers}_that should be applied to the {@link WebServiceTemplate}. Customizers are applied_in the order that they were added after builder configuration has been applied._@param customizers the customizers to add_@return a new builder instance_@see #customizers(Collection);public WebServiceTemplateBuilder additionalCustomizers(_			Collection<? extends WebServiceTemplateCustomizer> customizers) {_		Assert.notNull(customizers, "Customizers must not be null")__		return new WebServiceTemplateBuilder(this.detectHttpMessageSender,_				this.interceptors, this.internalCustomizers,_				append(this.customizers, customizers), this.messageSenders,_				this.marshaller, this.unmarshaller, this.destinationProvider,_				this.transformerFactoryClass, this.messageFactory)__	};add,additional,link,web,service,template,customizer,web,service,template,customizers,that,should,be,applied,to,the,link,web,service,template,customizers,are,applied,in,the,order,that,they,were,added,after,builder,configuration,has,been,applied,param,customizers,the,customizers,to,add,return,a,new,builder,instance,see,customizers,collection;public,web,service,template,builder,additional,customizers,collection,extends,web,service,template,customizer,customizers,assert,not,null,customizers,customizers,must,not,be,null,return,new,web,service,template,builder,this,detect,http,message,sender,this,interceptors,this,internal,customizers,append,this,customizers,customizers,this,message,senders,this,marshaller,this,unmarshaller,this,destination,provider,this,transformer,factory,class,this,message,factory
WebServiceTemplateBuilder -> public WebServiceTemplateBuilder setDestinationProvider( 			DestinationProvider destinationProvider);1528108121;Set the {@link DestinationProvider} to use_<p>_Typically, either this property is set, or {@link #setDefaultUri(String)}, but not_both._@param destinationProvider the destination provider to be used on operations that_do not have a URI parameter._@return a new builder instance._@see WebServiceTemplate#setDestinationProvider(DestinationProvider);public WebServiceTemplateBuilder setDestinationProvider(_			DestinationProvider destinationProvider) {_		Assert.notNull(destinationProvider, "destinationProvider must not be null")__		return new WebServiceTemplateBuilder(this.detectHttpMessageSender,_				this.interceptors, this.internalCustomizers, this.customizers,_				this.messageSenders, this.marshaller, this.unmarshaller,_				destinationProvider, this.transformerFactoryClass, this.messageFactory)__	};set,the,link,destination,provider,to,use,p,typically,either,this,property,is,set,or,link,set,default,uri,string,but,not,both,param,destination,provider,the,destination,provider,to,be,used,on,operations,that,do,not,have,a,uri,parameter,return,a,new,builder,instance,see,web,service,template,set,destination,provider,destination,provider;public,web,service,template,builder,set,destination,provider,destination,provider,destination,provider,assert,not,null,destination,provider,destination,provider,must,not,be,null,return,new,web,service,template,builder,this,detect,http,message,sender,this,interceptors,this,internal,customizers,this,customizers,this,message,senders,this,marshaller,this,unmarshaller,destination,provider,this,transformer,factory,class,this,message,factory
WebServiceTemplateBuilder -> public WebServiceTemplateBuilder setDestinationProvider( 			DestinationProvider destinationProvider);1528149726;Set the {@link DestinationProvider} to use. Typically, either this property is set,_or {@link #setDefaultUri(String)}, but not both._@param destinationProvider the destination provider to be used on operations that_do not have a URI parameter._@return a new builder instance._@see WebServiceTemplate#setDestinationProvider(DestinationProvider);public WebServiceTemplateBuilder setDestinationProvider(_			DestinationProvider destinationProvider) {_		Assert.notNull(destinationProvider, "DestinationProvider must not be null")__		return new WebServiceTemplateBuilder(this.detectHttpMessageSender,_				this.interceptors, this.internalCustomizers, this.customizers,_				this.messageSenders, this.marshaller, this.unmarshaller,_				destinationProvider, this.transformerFactoryClass, this.messageFactory)__	};set,the,link,destination,provider,to,use,typically,either,this,property,is,set,or,link,set,default,uri,string,but,not,both,param,destination,provider,the,destination,provider,to,be,used,on,operations,that,do,not,have,a,uri,parameter,return,a,new,builder,instance,see,web,service,template,set,destination,provider,destination,provider;public,web,service,template,builder,set,destination,provider,destination,provider,destination,provider,assert,not,null,destination,provider,destination,provider,must,not,be,null,return,new,web,service,template,builder,this,detect,http,message,sender,this,interceptors,this,internal,customizers,this,customizers,this,message,senders,this,marshaller,this,unmarshaller,destination,provider,this,transformer,factory,class,this,message,factory
WebServiceTemplateBuilder -> public WebServiceTemplateBuilder setDestinationProvider( 			DestinationProvider destinationProvider);1532738164;Set the {@link DestinationProvider} to use. Typically, either this property is set,_or {@link #setDefaultUri(String)}, but not both._@param destinationProvider the destination provider to be used on operations that_do not have a URI parameter._@return a new builder instance._@see WebServiceTemplate#setDestinationProvider(DestinationProvider);public WebServiceTemplateBuilder setDestinationProvider(_			DestinationProvider destinationProvider) {_		Assert.notNull(destinationProvider, "DestinationProvider must not be null")__		return new WebServiceTemplateBuilder(this.detectHttpMessageSender,_				this.interceptors, this.internalCustomizers, this.customizers,_				this.messageSenders, this.marshaller, this.unmarshaller,_				destinationProvider, this.transformerFactoryClass, this.messageFactory)__	};set,the,link,destination,provider,to,use,typically,either,this,property,is,set,or,link,set,default,uri,string,but,not,both,param,destination,provider,the,destination,provider,to,be,used,on,operations,that,do,not,have,a,uri,parameter,return,a,new,builder,instance,see,web,service,template,set,destination,provider,destination,provider;public,web,service,template,builder,set,destination,provider,destination,provider,destination,provider,assert,not,null,destination,provider,destination,provider,must,not,be,null,return,new,web,service,template,builder,this,detect,http,message,sender,this,interceptors,this,internal,customizers,this,customizers,this,message,senders,this,marshaller,this,unmarshaller,destination,provider,this,transformer,factory,class,this,message,factory
WebServiceTemplateBuilder -> public WebServiceTemplateBuilder setDestinationProvider( 			DestinationProvider destinationProvider);1534945262;Set the {@link DestinationProvider} to use. Typically, either this property is set,_or {@link #setDefaultUri(String)}, but not both._@param destinationProvider the destination provider to be used on operations that_do not have a URI parameter._@return a new builder instance._@see WebServiceTemplate#setDestinationProvider(DestinationProvider);public WebServiceTemplateBuilder setDestinationProvider(_			DestinationProvider destinationProvider) {_		Assert.notNull(destinationProvider, "DestinationProvider must not be null")__		return new WebServiceTemplateBuilder(this.detectHttpMessageSender,_				this.interceptors, this.internalCustomizers, this.customizers,_				this.messageSenders, this.marshaller, this.unmarshaller,_				destinationProvider, this.transformerFactoryClass, this.messageFactory)__	};set,the,link,destination,provider,to,use,typically,either,this,property,is,set,or,link,set,default,uri,string,but,not,both,param,destination,provider,the,destination,provider,to,be,used,on,operations,that,do,not,have,a,uri,parameter,return,a,new,builder,instance,see,web,service,template,set,destination,provider,destination,provider;public,web,service,template,builder,set,destination,provider,destination,provider,destination,provider,assert,not,null,destination,provider,destination,provider,must,not,be,null,return,new,web,service,template,builder,this,detect,http,message,sender,this,interceptors,this,internal,customizers,this,customizers,this,message,senders,this,marshaller,this,unmarshaller,destination,provider,this,transformer,factory,class,this,message,factory
WebServiceTemplateBuilder -> public WebServiceTemplateBuilder customizers( 			Collection<? extends WebServiceTemplateCustomizer> customizers);1528108121;Set {@link WebServiceTemplateCustomizer WebServiceTemplateCustomizers} that should_be applied to the {@link WebServiceTemplate}. Customizers are applied in the order_that they were added after builder configuration has been applied. Setting this_value will replace any previously configured customizers._@param customizers the customizers to set_@return a new builder instance_@see #additionalCustomizers(Collection);public WebServiceTemplateBuilder customizers(_			Collection<? extends WebServiceTemplateCustomizer> customizers) {_		Assert.notNull(customizers, "Customizers must not be null")__		return new WebServiceTemplateBuilder(this.detectHttpMessageSender,_				this.interceptors, this.internalCustomizers,_				append(Collections.<WebServiceTemplateCustomizer>emptySet(), customizers),_				this.messageSenders, this.marshaller, this.unmarshaller,_				this.destinationProvider, this.transformerFactoryClass,_				this.messageFactory)__	};set,link,web,service,template,customizer,web,service,template,customizers,that,should,be,applied,to,the,link,web,service,template,customizers,are,applied,in,the,order,that,they,were,added,after,builder,configuration,has,been,applied,setting,this,value,will,replace,any,previously,configured,customizers,param,customizers,the,customizers,to,set,return,a,new,builder,instance,see,additional,customizers,collection;public,web,service,template,builder,customizers,collection,extends,web,service,template,customizer,customizers,assert,not,null,customizers,customizers,must,not,be,null,return,new,web,service,template,builder,this,detect,http,message,sender,this,interceptors,this,internal,customizers,append,collections,web,service,template,customizer,empty,set,customizers,this,message,senders,this,marshaller,this,unmarshaller,this,destination,provider,this,transformer,factory,class,this,message,factory
WebServiceTemplateBuilder -> public WebServiceTemplateBuilder customizers( 			Collection<? extends WebServiceTemplateCustomizer> customizers);1528149726;Set {@link WebServiceTemplateCustomizer WebServiceTemplateCustomizers} that should_be applied to the {@link WebServiceTemplate}. Customizers are applied in the order_that they were added after builder configuration has been applied. Setting this_value will replace any previously configured customizers._@param customizers the customizers to set_@return a new builder instance_@see #additionalCustomizers(Collection);public WebServiceTemplateBuilder customizers(_			Collection<? extends WebServiceTemplateCustomizer> customizers) {_		Assert.notNull(customizers, "Customizers must not be null")__		return new WebServiceTemplateBuilder(this.detectHttpMessageSender,_				this.interceptors, this.internalCustomizers,_				append(Collections.<WebServiceTemplateCustomizer>emptySet(), customizers),_				this.messageSenders, this.marshaller, this.unmarshaller,_				this.destinationProvider, this.transformerFactoryClass,_				this.messageFactory)__	};set,link,web,service,template,customizer,web,service,template,customizers,that,should,be,applied,to,the,link,web,service,template,customizers,are,applied,in,the,order,that,they,were,added,after,builder,configuration,has,been,applied,setting,this,value,will,replace,any,previously,configured,customizers,param,customizers,the,customizers,to,set,return,a,new,builder,instance,see,additional,customizers,collection;public,web,service,template,builder,customizers,collection,extends,web,service,template,customizer,customizers,assert,not,null,customizers,customizers,must,not,be,null,return,new,web,service,template,builder,this,detect,http,message,sender,this,interceptors,this,internal,customizers,append,collections,web,service,template,customizer,empty,set,customizers,this,message,senders,this,marshaller,this,unmarshaller,this,destination,provider,this,transformer,factory,class,this,message,factory
WebServiceTemplateBuilder -> public WebServiceTemplateBuilder customizers( 			Collection<? extends WebServiceTemplateCustomizer> customizers);1532738164;Set {@link WebServiceTemplateCustomizer WebServiceTemplateCustomizers} that should_be applied to the {@link WebServiceTemplate}. Customizers are applied in the order_that they were added after builder configuration has been applied. Setting this_value will replace any previously configured customizers._@param customizers the customizers to set_@return a new builder instance_@see #additionalCustomizers(Collection);public WebServiceTemplateBuilder customizers(_			Collection<? extends WebServiceTemplateCustomizer> customizers) {_		Assert.notNull(customizers, "Customizers must not be null")__		return new WebServiceTemplateBuilder(this.detectHttpMessageSender,_				this.interceptors, this.internalCustomizers,_				append(Collections.<WebServiceTemplateCustomizer>emptySet(), customizers),_				this.messageSenders, this.marshaller, this.unmarshaller,_				this.destinationProvider, this.transformerFactoryClass,_				this.messageFactory)__	};set,link,web,service,template,customizer,web,service,template,customizers,that,should,be,applied,to,the,link,web,service,template,customizers,are,applied,in,the,order,that,they,were,added,after,builder,configuration,has,been,applied,setting,this,value,will,replace,any,previously,configured,customizers,param,customizers,the,customizers,to,set,return,a,new,builder,instance,see,additional,customizers,collection;public,web,service,template,builder,customizers,collection,extends,web,service,template,customizer,customizers,assert,not,null,customizers,customizers,must,not,be,null,return,new,web,service,template,builder,this,detect,http,message,sender,this,interceptors,this,internal,customizers,append,collections,web,service,template,customizer,empty,set,customizers,this,message,senders,this,marshaller,this,unmarshaller,this,destination,provider,this,transformer,factory,class,this,message,factory
WebServiceTemplateBuilder -> public WebServiceTemplateBuilder customizers( 			Collection<? extends WebServiceTemplateCustomizer> customizers);1534945262;Set {@link WebServiceTemplateCustomizer WebServiceTemplateCustomizers} that should_be applied to the {@link WebServiceTemplate}. Customizers are applied in the order_that they were added after builder configuration has been applied. Setting this_value will replace any previously configured customizers._@param customizers the customizers to set_@return a new builder instance_@see #additionalCustomizers(Collection);public WebServiceTemplateBuilder customizers(_			Collection<? extends WebServiceTemplateCustomizer> customizers) {_		Assert.notNull(customizers, "Customizers must not be null")__		return new WebServiceTemplateBuilder(this.detectHttpMessageSender,_				this.interceptors, this.internalCustomizers,_				append(Collections.<WebServiceTemplateCustomizer>emptySet(), customizers),_				this.messageSenders, this.marshaller, this.unmarshaller,_				this.destinationProvider, this.transformerFactoryClass,_				this.messageFactory)__	};set,link,web,service,template,customizer,web,service,template,customizers,that,should,be,applied,to,the,link,web,service,template,customizers,are,applied,in,the,order,that,they,were,added,after,builder,configuration,has,been,applied,setting,this,value,will,replace,any,previously,configured,customizers,param,customizers,the,customizers,to,set,return,a,new,builder,instance,see,additional,customizers,collection;public,web,service,template,builder,customizers,collection,extends,web,service,template,customizer,customizers,assert,not,null,customizers,customizers,must,not,be,null,return,new,web,service,template,builder,this,detect,http,message,sender,this,interceptors,this,internal,customizers,append,collections,web,service,template,customizer,empty,set,customizers,this,message,senders,this,marshaller,this,unmarshaller,this,destination,provider,this,transformer,factory,class,this,message,factory
WebServiceTemplateBuilder -> public WebServiceTemplateBuilder setCheckConnectionForFault( 			boolean checkConnectionForFault);1528108121;Indicates whether the connection should be checked for fault indicators_({@code true}), or whether we should rely on the message only ({@code false})._@param checkConnectionForFault whether to check for fault indicators_@return a new builder instance._@see WebServiceTemplate#setCheckConnectionForFault(boolean);public WebServiceTemplateBuilder setCheckConnectionForFault(_			boolean checkConnectionForFault) {_		return new WebServiceTemplateBuilder(this.detectHttpMessageSender,_				this.interceptors,_				append(this.internalCustomizers,_						new CheckConnectionFaultCustomizer(checkConnectionForFault)),_				this.customizers, this.messageSenders, this.marshaller, this.unmarshaller,_				this.destinationProvider, this.transformerFactoryClass,_				this.messageFactory)__	};indicates,whether,the,connection,should,be,checked,for,fault,indicators,code,true,or,whether,we,should,rely,on,the,message,only,code,false,param,check,connection,for,fault,whether,to,check,for,fault,indicators,return,a,new,builder,instance,see,web,service,template,set,check,connection,for,fault,boolean;public,web,service,template,builder,set,check,connection,for,fault,boolean,check,connection,for,fault,return,new,web,service,template,builder,this,detect,http,message,sender,this,interceptors,append,this,internal,customizers,new,check,connection,fault,customizer,check,connection,for,fault,this,customizers,this,message,senders,this,marshaller,this,unmarshaller,this,destination,provider,this,transformer,factory,class,this,message,factory
WebServiceTemplateBuilder -> public WebServiceTemplateBuilder setCheckConnectionForFault( 			boolean checkConnectionForFault);1528149726;Indicates whether the connection should be checked for fault indicators_({@code true}), or whether we should rely on the message only ({@code false})._@param checkConnectionForFault whether to check for fault indicators_@return a new builder instance._@see WebServiceTemplate#setCheckConnectionForFault(boolean);public WebServiceTemplateBuilder setCheckConnectionForFault(_			boolean checkConnectionForFault) {_		return new WebServiceTemplateBuilder(this.detectHttpMessageSender,_				this.interceptors,_				append(this.internalCustomizers,_						new CheckConnectionFaultCustomizer(checkConnectionForFault)),_				this.customizers, this.messageSenders, this.marshaller, this.unmarshaller,_				this.destinationProvider, this.transformerFactoryClass,_				this.messageFactory)__	};indicates,whether,the,connection,should,be,checked,for,fault,indicators,code,true,or,whether,we,should,rely,on,the,message,only,code,false,param,check,connection,for,fault,whether,to,check,for,fault,indicators,return,a,new,builder,instance,see,web,service,template,set,check,connection,for,fault,boolean;public,web,service,template,builder,set,check,connection,for,fault,boolean,check,connection,for,fault,return,new,web,service,template,builder,this,detect,http,message,sender,this,interceptors,append,this,internal,customizers,new,check,connection,fault,customizer,check,connection,for,fault,this,customizers,this,message,senders,this,marshaller,this,unmarshaller,this,destination,provider,this,transformer,factory,class,this,message,factory
WebServiceTemplateBuilder -> public WebServiceTemplateBuilder setCheckConnectionForFault( 			boolean checkConnectionForFault);1532738164;Indicates whether the connection should be checked for fault indicators_({@code true}), or whether we should rely on the message only ({@code false})._@param checkConnectionForFault whether to check for fault indicators_@return a new builder instance._@see WebServiceTemplate#setCheckConnectionForFault(boolean);public WebServiceTemplateBuilder setCheckConnectionForFault(_			boolean checkConnectionForFault) {_		return new WebServiceTemplateBuilder(this.detectHttpMessageSender,_				this.interceptors,_				append(this.internalCustomizers,_						new CheckConnectionFaultCustomizer(checkConnectionForFault)),_				this.customizers, this.messageSenders, this.marshaller, this.unmarshaller,_				this.destinationProvider, this.transformerFactoryClass,_				this.messageFactory)__	};indicates,whether,the,connection,should,be,checked,for,fault,indicators,code,true,or,whether,we,should,rely,on,the,message,only,code,false,param,check,connection,for,fault,whether,to,check,for,fault,indicators,return,a,new,builder,instance,see,web,service,template,set,check,connection,for,fault,boolean;public,web,service,template,builder,set,check,connection,for,fault,boolean,check,connection,for,fault,return,new,web,service,template,builder,this,detect,http,message,sender,this,interceptors,append,this,internal,customizers,new,check,connection,fault,customizer,check,connection,for,fault,this,customizers,this,message,senders,this,marshaller,this,unmarshaller,this,destination,provider,this,transformer,factory,class,this,message,factory
WebServiceTemplateBuilder -> public WebServiceTemplateBuilder setCheckConnectionForFault( 			boolean checkConnectionForFault);1534945262;Indicates whether the connection should be checked for fault indicators_({@code true}), or whether we should rely on the message only ({@code false})._@param checkConnectionForFault whether to check for fault indicators_@return a new builder instance._@see WebServiceTemplate#setCheckConnectionForFault(boolean);public WebServiceTemplateBuilder setCheckConnectionForFault(_			boolean checkConnectionForFault) {_		return new WebServiceTemplateBuilder(this.detectHttpMessageSender,_				this.interceptors,_				append(this.internalCustomizers,_						new CheckConnectionFaultCustomizer(checkConnectionForFault)),_				this.customizers, this.messageSenders, this.marshaller, this.unmarshaller,_				this.destinationProvider, this.transformerFactoryClass,_				this.messageFactory)__	};indicates,whether,the,connection,should,be,checked,for,fault,indicators,code,true,or,whether,we,should,rely,on,the,message,only,code,false,param,check,connection,for,fault,whether,to,check,for,fault,indicators,return,a,new,builder,instance,see,web,service,template,set,check,connection,for,fault,boolean;public,web,service,template,builder,set,check,connection,for,fault,boolean,check,connection,for,fault,return,new,web,service,template,builder,this,detect,http,message,sender,this,interceptors,append,this,internal,customizers,new,check,connection,fault,customizer,check,connection,for,fault,this,customizers,this,message,senders,this,marshaller,this,unmarshaller,this,destination,provider,this,transformer,factory,class,this,message,factory
WebServiceTemplateBuilder -> public WebServiceTemplateBuilder setUnmarshaller(Unmarshaller unmarshaller);1528108121;Set the {@link Unmarshaller} to use to deserialize messages._@param unmarshaller the message unmarshaller_@return a new builder instance._@see WebServiceTemplate#setUnmarshaller(Unmarshaller);public WebServiceTemplateBuilder setUnmarshaller(Unmarshaller unmarshaller) {_		return new WebServiceTemplateBuilder(this.detectHttpMessageSender,_				this.interceptors, this.internalCustomizers, this.customizers,_				this.messageSenders, this.marshaller, unmarshaller,_				this.destinationProvider, this.transformerFactoryClass,_				this.messageFactory)__	};set,the,link,unmarshaller,to,use,to,deserialize,messages,param,unmarshaller,the,message,unmarshaller,return,a,new,builder,instance,see,web,service,template,set,unmarshaller,unmarshaller;public,web,service,template,builder,set,unmarshaller,unmarshaller,unmarshaller,return,new,web,service,template,builder,this,detect,http,message,sender,this,interceptors,this,internal,customizers,this,customizers,this,message,senders,this,marshaller,unmarshaller,this,destination,provider,this,transformer,factory,class,this,message,factory
WebServiceTemplateBuilder -> public WebServiceTemplateBuilder setUnmarshaller(Unmarshaller unmarshaller);1528149726;Set the {@link Unmarshaller} to use to deserialize messages._@param unmarshaller the message unmarshaller_@return a new builder instance._@see WebServiceTemplate#setUnmarshaller(Unmarshaller);public WebServiceTemplateBuilder setUnmarshaller(Unmarshaller unmarshaller) {_		return new WebServiceTemplateBuilder(this.detectHttpMessageSender,_				this.interceptors, this.internalCustomizers, this.customizers,_				this.messageSenders, this.marshaller, unmarshaller,_				this.destinationProvider, this.transformerFactoryClass,_				this.messageFactory)__	};set,the,link,unmarshaller,to,use,to,deserialize,messages,param,unmarshaller,the,message,unmarshaller,return,a,new,builder,instance,see,web,service,template,set,unmarshaller,unmarshaller;public,web,service,template,builder,set,unmarshaller,unmarshaller,unmarshaller,return,new,web,service,template,builder,this,detect,http,message,sender,this,interceptors,this,internal,customizers,this,customizers,this,message,senders,this,marshaller,unmarshaller,this,destination,provider,this,transformer,factory,class,this,message,factory
WebServiceTemplateBuilder -> public WebServiceTemplateBuilder setUnmarshaller(Unmarshaller unmarshaller);1532738164;Set the {@link Unmarshaller} to use to deserialize messages._@param unmarshaller the message unmarshaller_@return a new builder instance._@see WebServiceTemplate#setUnmarshaller(Unmarshaller);public WebServiceTemplateBuilder setUnmarshaller(Unmarshaller unmarshaller) {_		return new WebServiceTemplateBuilder(this.detectHttpMessageSender,_				this.interceptors, this.internalCustomizers, this.customizers,_				this.messageSenders, this.marshaller, unmarshaller,_				this.destinationProvider, this.transformerFactoryClass,_				this.messageFactory)__	};set,the,link,unmarshaller,to,use,to,deserialize,messages,param,unmarshaller,the,message,unmarshaller,return,a,new,builder,instance,see,web,service,template,set,unmarshaller,unmarshaller;public,web,service,template,builder,set,unmarshaller,unmarshaller,unmarshaller,return,new,web,service,template,builder,this,detect,http,message,sender,this,interceptors,this,internal,customizers,this,customizers,this,message,senders,this,marshaller,unmarshaller,this,destination,provider,this,transformer,factory,class,this,message,factory
WebServiceTemplateBuilder -> public WebServiceTemplateBuilder setUnmarshaller(Unmarshaller unmarshaller);1534945262;Set the {@link Unmarshaller} to use to deserialize messages._@param unmarshaller the message unmarshaller_@return a new builder instance._@see WebServiceTemplate#setUnmarshaller(Unmarshaller);public WebServiceTemplateBuilder setUnmarshaller(Unmarshaller unmarshaller) {_		return new WebServiceTemplateBuilder(this.detectHttpMessageSender,_				this.interceptors, this.internalCustomizers, this.customizers,_				this.messageSenders, this.marshaller, unmarshaller,_				this.destinationProvider, this.transformerFactoryClass,_				this.messageFactory)__	};set,the,link,unmarshaller,to,use,to,deserialize,messages,param,unmarshaller,the,message,unmarshaller,return,a,new,builder,instance,see,web,service,template,set,unmarshaller,unmarshaller;public,web,service,template,builder,set,unmarshaller,unmarshaller,unmarshaller,return,new,web,service,template,builder,this,detect,http,message,sender,this,interceptors,this,internal,customizers,this,customizers,this,message,senders,this,marshaller,unmarshaller,this,destination,provider,this,transformer,factory,class,this,message,factory
WebServiceTemplateBuilder -> public WebServiceTemplateBuilder interceptors(ClientInterceptor... interceptors);1528108121;Set the {@link ClientInterceptor ClientInterceptors} that should be used with the_{@link WebServiceTemplate}. Setting this value will replace any previously defined_interceptors._@param interceptors the interceptors to set_@return a new builder instance_@see #additionalInterceptors(ClientInterceptor...);public WebServiceTemplateBuilder interceptors(ClientInterceptor... interceptors) {_		Assert.notNull(interceptors, "Interceptors must not be null")__		return interceptors(Arrays.asList(interceptors))__	};set,the,link,client,interceptor,client,interceptors,that,should,be,used,with,the,link,web,service,template,setting,this,value,will,replace,any,previously,defined,interceptors,param,interceptors,the,interceptors,to,set,return,a,new,builder,instance,see,additional,interceptors,client,interceptor;public,web,service,template,builder,interceptors,client,interceptor,interceptors,assert,not,null,interceptors,interceptors,must,not,be,null,return,interceptors,arrays,as,list,interceptors
WebServiceTemplateBuilder -> public WebServiceTemplateBuilder interceptors(ClientInterceptor... interceptors);1528149726;Set the {@link ClientInterceptor ClientInterceptors} that should be used with the_{@link WebServiceTemplate}. Setting this value will replace any previously defined_interceptors._@param interceptors the interceptors to set_@return a new builder instance_@see #additionalInterceptors(ClientInterceptor...);public WebServiceTemplateBuilder interceptors(ClientInterceptor... interceptors) {_		Assert.notNull(interceptors, "Interceptors must not be null")__		return interceptors(Arrays.asList(interceptors))__	};set,the,link,client,interceptor,client,interceptors,that,should,be,used,with,the,link,web,service,template,setting,this,value,will,replace,any,previously,defined,interceptors,param,interceptors,the,interceptors,to,set,return,a,new,builder,instance,see,additional,interceptors,client,interceptor;public,web,service,template,builder,interceptors,client,interceptor,interceptors,assert,not,null,interceptors,interceptors,must,not,be,null,return,interceptors,arrays,as,list,interceptors
WebServiceTemplateBuilder -> public WebServiceTemplateBuilder interceptors(ClientInterceptor... interceptors);1532738164;Set the {@link ClientInterceptor ClientInterceptors} that should be used with the_{@link WebServiceTemplate}. Setting this value will replace any previously defined_interceptors._@param interceptors the interceptors to set_@return a new builder instance_@see #additionalInterceptors(ClientInterceptor...);public WebServiceTemplateBuilder interceptors(ClientInterceptor... interceptors) {_		Assert.notNull(interceptors, "Interceptors must not be null")__		return interceptors(Arrays.asList(interceptors))__	};set,the,link,client,interceptor,client,interceptors,that,should,be,used,with,the,link,web,service,template,setting,this,value,will,replace,any,previously,defined,interceptors,param,interceptors,the,interceptors,to,set,return,a,new,builder,instance,see,additional,interceptors,client,interceptor;public,web,service,template,builder,interceptors,client,interceptor,interceptors,assert,not,null,interceptors,interceptors,must,not,be,null,return,interceptors,arrays,as,list,interceptors
WebServiceTemplateBuilder -> public WebServiceTemplateBuilder interceptors(ClientInterceptor... interceptors);1534945262;Set the {@link ClientInterceptor ClientInterceptors} that should be used with the_{@link WebServiceTemplate}. Setting this value will replace any previously defined_interceptors._@param interceptors the interceptors to set_@return a new builder instance_@see #additionalInterceptors(ClientInterceptor...);public WebServiceTemplateBuilder interceptors(ClientInterceptor... interceptors) {_		Assert.notNull(interceptors, "Interceptors must not be null")__		return interceptors(Arrays.asList(interceptors))__	};set,the,link,client,interceptor,client,interceptors,that,should,be,used,with,the,link,web,service,template,setting,this,value,will,replace,any,previously,defined,interceptors,param,interceptors,the,interceptors,to,set,return,a,new,builder,instance,see,additional,interceptors,client,interceptor;public,web,service,template,builder,interceptors,client,interceptor,interceptors,assert,not,null,interceptors,interceptors,must,not,be,null,return,interceptors,arrays,as,list,interceptors
WebServiceTemplateBuilder -> public WebServiceTemplateBuilder detectHttpMessageSender( 			boolean detectHttpMessageSender);1528108121;Set if a suitable HTTP-based {@link WebServiceMessageSender} should be detected_based on the classpath. Default is {@code true}._@param detectHttpMessageSender if a HTTP-based {@link WebServiceMessageSender}_should be detected_@return a new builder instance_@see HttpWebServiceMessageSenderBuilder;public WebServiceTemplateBuilder detectHttpMessageSender(_			boolean detectHttpMessageSender) {_		return new WebServiceTemplateBuilder(detectHttpMessageSender, this.interceptors,_				this.internalCustomizers, this.customizers, this.messageSenders,_				this.marshaller, this.unmarshaller, this.destinationProvider,_				this.transformerFactoryClass, this.messageFactory)__	};set,if,a,suitable,http,based,link,web,service,message,sender,should,be,detected,based,on,the,classpath,default,is,code,true,param,detect,http,message,sender,if,a,http,based,link,web,service,message,sender,should,be,detected,return,a,new,builder,instance,see,http,web,service,message,sender,builder;public,web,service,template,builder,detect,http,message,sender,boolean,detect,http,message,sender,return,new,web,service,template,builder,detect,http,message,sender,this,interceptors,this,internal,customizers,this,customizers,this,message,senders,this,marshaller,this,unmarshaller,this,destination,provider,this,transformer,factory,class,this,message,factory
WebServiceTemplateBuilder -> public WebServiceTemplateBuilder detectHttpMessageSender( 			boolean detectHttpMessageSender);1528149726;Set if a suitable HTTP-based {@link WebServiceMessageSender} should be detected_based on the classpath. Default is {@code true}._@param detectHttpMessageSender if a HTTP-based {@link WebServiceMessageSender}_should be detected_@return a new builder instance_@see HttpWebServiceMessageSenderBuilder;public WebServiceTemplateBuilder detectHttpMessageSender(_			boolean detectHttpMessageSender) {_		return new WebServiceTemplateBuilder(detectHttpMessageSender, this.interceptors,_				this.internalCustomizers, this.customizers, this.messageSenders,_				this.marshaller, this.unmarshaller, this.destinationProvider,_				this.transformerFactoryClass, this.messageFactory)__	};set,if,a,suitable,http,based,link,web,service,message,sender,should,be,detected,based,on,the,classpath,default,is,code,true,param,detect,http,message,sender,if,a,http,based,link,web,service,message,sender,should,be,detected,return,a,new,builder,instance,see,http,web,service,message,sender,builder;public,web,service,template,builder,detect,http,message,sender,boolean,detect,http,message,sender,return,new,web,service,template,builder,detect,http,message,sender,this,interceptors,this,internal,customizers,this,customizers,this,message,senders,this,marshaller,this,unmarshaller,this,destination,provider,this,transformer,factory,class,this,message,factory
WebServiceTemplateBuilder -> public WebServiceTemplateBuilder detectHttpMessageSender( 			boolean detectHttpMessageSender);1532738164;Set if a suitable HTTP-based {@link WebServiceMessageSender} should be detected_based on the classpath. Default is {@code true}._@param detectHttpMessageSender if a HTTP-based {@link WebServiceMessageSender}_should be detected_@return a new builder instance_@see HttpWebServiceMessageSenderBuilder;public WebServiceTemplateBuilder detectHttpMessageSender(_			boolean detectHttpMessageSender) {_		return new WebServiceTemplateBuilder(detectHttpMessageSender, this.interceptors,_				this.internalCustomizers, this.customizers, this.messageSenders,_				this.marshaller, this.unmarshaller, this.destinationProvider,_				this.transformerFactoryClass, this.messageFactory)__	};set,if,a,suitable,http,based,link,web,service,message,sender,should,be,detected,based,on,the,classpath,default,is,code,true,param,detect,http,message,sender,if,a,http,based,link,web,service,message,sender,should,be,detected,return,a,new,builder,instance,see,http,web,service,message,sender,builder;public,web,service,template,builder,detect,http,message,sender,boolean,detect,http,message,sender,return,new,web,service,template,builder,detect,http,message,sender,this,interceptors,this,internal,customizers,this,customizers,this,message,senders,this,marshaller,this,unmarshaller,this,destination,provider,this,transformer,factory,class,this,message,factory
WebServiceTemplateBuilder -> public WebServiceTemplateBuilder detectHttpMessageSender( 			boolean detectHttpMessageSender);1534945262;Set if a suitable HTTP-based {@link WebServiceMessageSender} should be detected_based on the classpath. Default is {@code true}._@param detectHttpMessageSender if a HTTP-based {@link WebServiceMessageSender}_should be detected_@return a new builder instance_@see HttpWebServiceMessageSenderBuilder;public WebServiceTemplateBuilder detectHttpMessageSender(_			boolean detectHttpMessageSender) {_		return new WebServiceTemplateBuilder(detectHttpMessageSender, this.interceptors,_				this.internalCustomizers, this.customizers, this.messageSenders,_				this.marshaller, this.unmarshaller, this.destinationProvider,_				this.transformerFactoryClass, this.messageFactory)__	};set,if,a,suitable,http,based,link,web,service,message,sender,should,be,detected,based,on,the,classpath,default,is,code,true,param,detect,http,message,sender,if,a,http,based,link,web,service,message,sender,should,be,detected,return,a,new,builder,instance,see,http,web,service,message,sender,builder;public,web,service,template,builder,detect,http,message,sender,boolean,detect,http,message,sender,return,new,web,service,template,builder,detect,http,message,sender,this,interceptors,this,internal,customizers,this,customizers,this,message,senders,this,marshaller,this,unmarshaller,this,destination,provider,this,transformer,factory,class,this,message,factory
WebServiceTemplateBuilder -> public WebServiceTemplateBuilder additionalCustomizers( 			WebServiceTemplateCustomizer... customizers);1528108121;Add additional {@link WebServiceTemplateCustomizer WebServiceTemplateCustomizers}_that should be applied to the {@link WebServiceTemplate}. Customizers are applied_in the order that they were added after builder configuration has been applied._@param customizers the customizers to add_@return a new builder instance_@see #customizers(WebServiceTemplateCustomizer...);public WebServiceTemplateBuilder additionalCustomizers(_			WebServiceTemplateCustomizer... customizers) {_		Assert.notNull(customizers, "Customizers must not be null")__		return additionalCustomizers(Arrays.asList(customizers))__	};add,additional,link,web,service,template,customizer,web,service,template,customizers,that,should,be,applied,to,the,link,web,service,template,customizers,are,applied,in,the,order,that,they,were,added,after,builder,configuration,has,been,applied,param,customizers,the,customizers,to,add,return,a,new,builder,instance,see,customizers,web,service,template,customizer;public,web,service,template,builder,additional,customizers,web,service,template,customizer,customizers,assert,not,null,customizers,customizers,must,not,be,null,return,additional,customizers,arrays,as,list,customizers
WebServiceTemplateBuilder -> public WebServiceTemplateBuilder additionalCustomizers( 			WebServiceTemplateCustomizer... customizers);1528149726;Add additional {@link WebServiceTemplateCustomizer WebServiceTemplateCustomizers}_that should be applied to the {@link WebServiceTemplate}. Customizers are applied_in the order that they were added after builder configuration has been applied._@param customizers the customizers to add_@return a new builder instance_@see #customizers(WebServiceTemplateCustomizer...);public WebServiceTemplateBuilder additionalCustomizers(_			WebServiceTemplateCustomizer... customizers) {_		Assert.notNull(customizers, "Customizers must not be null")__		return additionalCustomizers(Arrays.asList(customizers))__	};add,additional,link,web,service,template,customizer,web,service,template,customizers,that,should,be,applied,to,the,link,web,service,template,customizers,are,applied,in,the,order,that,they,were,added,after,builder,configuration,has,been,applied,param,customizers,the,customizers,to,add,return,a,new,builder,instance,see,customizers,web,service,template,customizer;public,web,service,template,builder,additional,customizers,web,service,template,customizer,customizers,assert,not,null,customizers,customizers,must,not,be,null,return,additional,customizers,arrays,as,list,customizers
WebServiceTemplateBuilder -> public WebServiceTemplateBuilder additionalCustomizers( 			WebServiceTemplateCustomizer... customizers);1532738164;Add additional {@link WebServiceTemplateCustomizer WebServiceTemplateCustomizers}_that should be applied to the {@link WebServiceTemplate}. Customizers are applied_in the order that they were added after builder configuration has been applied._@param customizers the customizers to add_@return a new builder instance_@see #customizers(WebServiceTemplateCustomizer...);public WebServiceTemplateBuilder additionalCustomizers(_			WebServiceTemplateCustomizer... customizers) {_		Assert.notNull(customizers, "Customizers must not be null")__		return additionalCustomizers(Arrays.asList(customizers))__	};add,additional,link,web,service,template,customizer,web,service,template,customizers,that,should,be,applied,to,the,link,web,service,template,customizers,are,applied,in,the,order,that,they,were,added,after,builder,configuration,has,been,applied,param,customizers,the,customizers,to,add,return,a,new,builder,instance,see,customizers,web,service,template,customizer;public,web,service,template,builder,additional,customizers,web,service,template,customizer,customizers,assert,not,null,customizers,customizers,must,not,be,null,return,additional,customizers,arrays,as,list,customizers
WebServiceTemplateBuilder -> public WebServiceTemplateBuilder additionalCustomizers( 			WebServiceTemplateCustomizer... customizers);1534945262;Add additional {@link WebServiceTemplateCustomizer WebServiceTemplateCustomizers}_that should be applied to the {@link WebServiceTemplate}. Customizers are applied_in the order that they were added after builder configuration has been applied._@param customizers the customizers to add_@return a new builder instance_@see #customizers(WebServiceTemplateCustomizer...);public WebServiceTemplateBuilder additionalCustomizers(_			WebServiceTemplateCustomizer... customizers) {_		Assert.notNull(customizers, "Customizers must not be null")__		return additionalCustomizers(Arrays.asList(customizers))__	};add,additional,link,web,service,template,customizer,web,service,template,customizers,that,should,be,applied,to,the,link,web,service,template,customizers,are,applied,in,the,order,that,they,were,added,after,builder,configuration,has,been,applied,param,customizers,the,customizers,to,add,return,a,new,builder,instance,see,customizers,web,service,template,customizer;public,web,service,template,builder,additional,customizers,web,service,template,customizer,customizers,assert,not,null,customizers,customizers,must,not,be,null,return,additional,customizers,arrays,as,list,customizers
WebServiceTemplateBuilder -> public WebServiceTemplateBuilder interceptors( 			Collection<? extends ClientInterceptor> interceptors);1528108121;Set the {@link ClientInterceptor ClientInterceptors} that should be used with the_{@link WebServiceTemplate}. Setting this value will replace any previously defined_interceptors._@param interceptors the interceptors to set_@return a new builder instance_@see #additionalInterceptors(Collection);public WebServiceTemplateBuilder interceptors(_			Collection<? extends ClientInterceptor> interceptors) {_		Assert.notNull(interceptors, "Interceptors must not be null")__		return new WebServiceTemplateBuilder(this.detectHttpMessageSender,_				append(Collections.<ClientInterceptor>emptySet(), interceptors),_				this.internalCustomizers, this.customizers, this.messageSenders,_				this.marshaller, this.unmarshaller, this.destinationProvider,_				this.transformerFactoryClass, this.messageFactory)__	};set,the,link,client,interceptor,client,interceptors,that,should,be,used,with,the,link,web,service,template,setting,this,value,will,replace,any,previously,defined,interceptors,param,interceptors,the,interceptors,to,set,return,a,new,builder,instance,see,additional,interceptors,collection;public,web,service,template,builder,interceptors,collection,extends,client,interceptor,interceptors,assert,not,null,interceptors,interceptors,must,not,be,null,return,new,web,service,template,builder,this,detect,http,message,sender,append,collections,client,interceptor,empty,set,interceptors,this,internal,customizers,this,customizers,this,message,senders,this,marshaller,this,unmarshaller,this,destination,provider,this,transformer,factory,class,this,message,factory
WebServiceTemplateBuilder -> public WebServiceTemplateBuilder interceptors( 			Collection<? extends ClientInterceptor> interceptors);1528149726;Set the {@link ClientInterceptor ClientInterceptors} that should be used with the_{@link WebServiceTemplate}. Setting this value will replace any previously defined_interceptors._@param interceptors the interceptors to set_@return a new builder instance_@see #additionalInterceptors(Collection);public WebServiceTemplateBuilder interceptors(_			Collection<? extends ClientInterceptor> interceptors) {_		Assert.notNull(interceptors, "Interceptors must not be null")__		return new WebServiceTemplateBuilder(this.detectHttpMessageSender,_				append(Collections.<ClientInterceptor>emptySet(), interceptors),_				this.internalCustomizers, this.customizers, this.messageSenders,_				this.marshaller, this.unmarshaller, this.destinationProvider,_				this.transformerFactoryClass, this.messageFactory)__	};set,the,link,client,interceptor,client,interceptors,that,should,be,used,with,the,link,web,service,template,setting,this,value,will,replace,any,previously,defined,interceptors,param,interceptors,the,interceptors,to,set,return,a,new,builder,instance,see,additional,interceptors,collection;public,web,service,template,builder,interceptors,collection,extends,client,interceptor,interceptors,assert,not,null,interceptors,interceptors,must,not,be,null,return,new,web,service,template,builder,this,detect,http,message,sender,append,collections,client,interceptor,empty,set,interceptors,this,internal,customizers,this,customizers,this,message,senders,this,marshaller,this,unmarshaller,this,destination,provider,this,transformer,factory,class,this,message,factory
WebServiceTemplateBuilder -> public WebServiceTemplateBuilder interceptors( 			Collection<? extends ClientInterceptor> interceptors);1532738164;Set the {@link ClientInterceptor ClientInterceptors} that should be used with the_{@link WebServiceTemplate}. Setting this value will replace any previously defined_interceptors._@param interceptors the interceptors to set_@return a new builder instance_@see #additionalInterceptors(Collection);public WebServiceTemplateBuilder interceptors(_			Collection<? extends ClientInterceptor> interceptors) {_		Assert.notNull(interceptors, "Interceptors must not be null")__		return new WebServiceTemplateBuilder(this.detectHttpMessageSender,_				append(Collections.<ClientInterceptor>emptySet(), interceptors),_				this.internalCustomizers, this.customizers, this.messageSenders,_				this.marshaller, this.unmarshaller, this.destinationProvider,_				this.transformerFactoryClass, this.messageFactory)__	};set,the,link,client,interceptor,client,interceptors,that,should,be,used,with,the,link,web,service,template,setting,this,value,will,replace,any,previously,defined,interceptors,param,interceptors,the,interceptors,to,set,return,a,new,builder,instance,see,additional,interceptors,collection;public,web,service,template,builder,interceptors,collection,extends,client,interceptor,interceptors,assert,not,null,interceptors,interceptors,must,not,be,null,return,new,web,service,template,builder,this,detect,http,message,sender,append,collections,client,interceptor,empty,set,interceptors,this,internal,customizers,this,customizers,this,message,senders,this,marshaller,this,unmarshaller,this,destination,provider,this,transformer,factory,class,this,message,factory
WebServiceTemplateBuilder -> public WebServiceTemplateBuilder interceptors( 			Collection<? extends ClientInterceptor> interceptors);1534945262;Set the {@link ClientInterceptor ClientInterceptors} that should be used with the_{@link WebServiceTemplate}. Setting this value will replace any previously defined_interceptors._@param interceptors the interceptors to set_@return a new builder instance_@see #additionalInterceptors(Collection);public WebServiceTemplateBuilder interceptors(_			Collection<? extends ClientInterceptor> interceptors) {_		Assert.notNull(interceptors, "Interceptors must not be null")__		return new WebServiceTemplateBuilder(this.detectHttpMessageSender,_				append(Collections.<ClientInterceptor>emptySet(), interceptors),_				this.internalCustomizers, this.customizers, this.messageSenders,_				this.marshaller, this.unmarshaller, this.destinationProvider,_				this.transformerFactoryClass, this.messageFactory)__	};set,the,link,client,interceptor,client,interceptors,that,should,be,used,with,the,link,web,service,template,setting,this,value,will,replace,any,previously,defined,interceptors,param,interceptors,the,interceptors,to,set,return,a,new,builder,instance,see,additional,interceptors,collection;public,web,service,template,builder,interceptors,collection,extends,client,interceptor,interceptors,assert,not,null,interceptors,interceptors,must,not,be,null,return,new,web,service,template,builder,this,detect,http,message,sender,append,collections,client,interceptor,empty,set,interceptors,this,internal,customizers,this,customizers,this,message,senders,this,marshaller,this,unmarshaller,this,destination,provider,this,transformer,factory,class,this,message,factory
WebServiceTemplateBuilder -> public WebServiceTemplateBuilder additionalInterceptors( 			Collection<? extends ClientInterceptor> interceptors);1528108121;Add additional {@link ClientInterceptor ClientInterceptors} that should be used_with the {@link WebServiceTemplate}._@param interceptors the interceptors to add_@return a new builder instance_@see #interceptors(Collection);public WebServiceTemplateBuilder additionalInterceptors(_			Collection<? extends ClientInterceptor> interceptors) {_		Assert.notNull(interceptors, "Interceptors must not be null")__		return new WebServiceTemplateBuilder(this.detectHttpMessageSender,_				append(this.interceptors, interceptors), this.internalCustomizers,_				this.customizers, this.messageSenders, this.marshaller, this.unmarshaller,_				this.destinationProvider, this.transformerFactoryClass,_				this.messageFactory)__	};add,additional,link,client,interceptor,client,interceptors,that,should,be,used,with,the,link,web,service,template,param,interceptors,the,interceptors,to,add,return,a,new,builder,instance,see,interceptors,collection;public,web,service,template,builder,additional,interceptors,collection,extends,client,interceptor,interceptors,assert,not,null,interceptors,interceptors,must,not,be,null,return,new,web,service,template,builder,this,detect,http,message,sender,append,this,interceptors,interceptors,this,internal,customizers,this,customizers,this,message,senders,this,marshaller,this,unmarshaller,this,destination,provider,this,transformer,factory,class,this,message,factory
WebServiceTemplateBuilder -> public WebServiceTemplateBuilder additionalInterceptors( 			Collection<? extends ClientInterceptor> interceptors);1528149726;Add additional {@link ClientInterceptor ClientInterceptors} that should be used_with the {@link WebServiceTemplate}._@param interceptors the interceptors to add_@return a new builder instance_@see #interceptors(Collection);public WebServiceTemplateBuilder additionalInterceptors(_			Collection<? extends ClientInterceptor> interceptors) {_		Assert.notNull(interceptors, "Interceptors must not be null")__		return new WebServiceTemplateBuilder(this.detectHttpMessageSender,_				append(this.interceptors, interceptors), this.internalCustomizers,_				this.customizers, this.messageSenders, this.marshaller, this.unmarshaller,_				this.destinationProvider, this.transformerFactoryClass,_				this.messageFactory)__	};add,additional,link,client,interceptor,client,interceptors,that,should,be,used,with,the,link,web,service,template,param,interceptors,the,interceptors,to,add,return,a,new,builder,instance,see,interceptors,collection;public,web,service,template,builder,additional,interceptors,collection,extends,client,interceptor,interceptors,assert,not,null,interceptors,interceptors,must,not,be,null,return,new,web,service,template,builder,this,detect,http,message,sender,append,this,interceptors,interceptors,this,internal,customizers,this,customizers,this,message,senders,this,marshaller,this,unmarshaller,this,destination,provider,this,transformer,factory,class,this,message,factory
WebServiceTemplateBuilder -> public WebServiceTemplateBuilder additionalInterceptors( 			Collection<? extends ClientInterceptor> interceptors);1532738164;Add additional {@link ClientInterceptor ClientInterceptors} that should be used_with the {@link WebServiceTemplate}._@param interceptors the interceptors to add_@return a new builder instance_@see #interceptors(Collection);public WebServiceTemplateBuilder additionalInterceptors(_			Collection<? extends ClientInterceptor> interceptors) {_		Assert.notNull(interceptors, "Interceptors must not be null")__		return new WebServiceTemplateBuilder(this.detectHttpMessageSender,_				append(this.interceptors, interceptors), this.internalCustomizers,_				this.customizers, this.messageSenders, this.marshaller, this.unmarshaller,_				this.destinationProvider, this.transformerFactoryClass,_				this.messageFactory)__	};add,additional,link,client,interceptor,client,interceptors,that,should,be,used,with,the,link,web,service,template,param,interceptors,the,interceptors,to,add,return,a,new,builder,instance,see,interceptors,collection;public,web,service,template,builder,additional,interceptors,collection,extends,client,interceptor,interceptors,assert,not,null,interceptors,interceptors,must,not,be,null,return,new,web,service,template,builder,this,detect,http,message,sender,append,this,interceptors,interceptors,this,internal,customizers,this,customizers,this,message,senders,this,marshaller,this,unmarshaller,this,destination,provider,this,transformer,factory,class,this,message,factory
WebServiceTemplateBuilder -> public WebServiceTemplateBuilder additionalInterceptors( 			Collection<? extends ClientInterceptor> interceptors);1534945262;Add additional {@link ClientInterceptor ClientInterceptors} that should be used_with the {@link WebServiceTemplate}._@param interceptors the interceptors to add_@return a new builder instance_@see #interceptors(Collection);public WebServiceTemplateBuilder additionalInterceptors(_			Collection<? extends ClientInterceptor> interceptors) {_		Assert.notNull(interceptors, "Interceptors must not be null")__		return new WebServiceTemplateBuilder(this.detectHttpMessageSender,_				append(this.interceptors, interceptors), this.internalCustomizers,_				this.customizers, this.messageSenders, this.marshaller, this.unmarshaller,_				this.destinationProvider, this.transformerFactoryClass,_				this.messageFactory)__	};add,additional,link,client,interceptor,client,interceptors,that,should,be,used,with,the,link,web,service,template,param,interceptors,the,interceptors,to,add,return,a,new,builder,instance,see,interceptors,collection;public,web,service,template,builder,additional,interceptors,collection,extends,client,interceptor,interceptors,assert,not,null,interceptors,interceptors,must,not,be,null,return,new,web,service,template,builder,this,detect,http,message,sender,append,this,interceptors,interceptors,this,internal,customizers,this,customizers,this,message,senders,this,marshaller,this,unmarshaller,this,destination,provider,this,transformer,factory,class,this,message,factory
WebServiceTemplateBuilder -> public WebServiceTemplateBuilder setTransformerFactoryClass( 			Class<? extends TransformerFactory> transformerFactoryClass);1528108121;Set the {@link TransformerFactory} implementation to use._@param transformerFactoryClass the transformer factory implementation to use_@return a new builder instance._@see WebServiceTemplate#setTransformerFactoryClass(Class);public WebServiceTemplateBuilder setTransformerFactoryClass(_			Class<? extends TransformerFactory> transformerFactoryClass) {_		return new WebServiceTemplateBuilder(this.detectHttpMessageSender,_				this.interceptors, this.internalCustomizers, this.customizers,_				this.messageSenders, this.marshaller, this.unmarshaller,_				this.destinationProvider, transformerFactoryClass, this.messageFactory)__	};set,the,link,transformer,factory,implementation,to,use,param,transformer,factory,class,the,transformer,factory,implementation,to,use,return,a,new,builder,instance,see,web,service,template,set,transformer,factory,class,class;public,web,service,template,builder,set,transformer,factory,class,class,extends,transformer,factory,transformer,factory,class,return,new,web,service,template,builder,this,detect,http,message,sender,this,interceptors,this,internal,customizers,this,customizers,this,message,senders,this,marshaller,this,unmarshaller,this,destination,provider,transformer,factory,class,this,message,factory
WebServiceTemplateBuilder -> public WebServiceTemplateBuilder setTransformerFactoryClass( 			Class<? extends TransformerFactory> transformerFactoryClass);1528149726;Set the {@link TransformerFactory} implementation to use._@param transformerFactoryClass the transformer factory implementation to use_@return a new builder instance._@see WebServiceTemplate#setTransformerFactoryClass(Class);public WebServiceTemplateBuilder setTransformerFactoryClass(_			Class<? extends TransformerFactory> transformerFactoryClass) {_		return new WebServiceTemplateBuilder(this.detectHttpMessageSender,_				this.interceptors, this.internalCustomizers, this.customizers,_				this.messageSenders, this.marshaller, this.unmarshaller,_				this.destinationProvider, transformerFactoryClass, this.messageFactory)__	};set,the,link,transformer,factory,implementation,to,use,param,transformer,factory,class,the,transformer,factory,implementation,to,use,return,a,new,builder,instance,see,web,service,template,set,transformer,factory,class,class;public,web,service,template,builder,set,transformer,factory,class,class,extends,transformer,factory,transformer,factory,class,return,new,web,service,template,builder,this,detect,http,message,sender,this,interceptors,this,internal,customizers,this,customizers,this,message,senders,this,marshaller,this,unmarshaller,this,destination,provider,transformer,factory,class,this,message,factory
WebServiceTemplateBuilder -> public WebServiceTemplateBuilder setTransformerFactoryClass( 			Class<? extends TransformerFactory> transformerFactoryClass);1532738164;Set the {@link TransformerFactory} implementation to use._@param transformerFactoryClass the transformer factory implementation to use_@return a new builder instance._@see WebServiceTemplate#setTransformerFactoryClass(Class);public WebServiceTemplateBuilder setTransformerFactoryClass(_			Class<? extends TransformerFactory> transformerFactoryClass) {_		return new WebServiceTemplateBuilder(this.detectHttpMessageSender,_				this.interceptors, this.internalCustomizers, this.customizers,_				this.messageSenders, this.marshaller, this.unmarshaller,_				this.destinationProvider, transformerFactoryClass, this.messageFactory)__	};set,the,link,transformer,factory,implementation,to,use,param,transformer,factory,class,the,transformer,factory,implementation,to,use,return,a,new,builder,instance,see,web,service,template,set,transformer,factory,class,class;public,web,service,template,builder,set,transformer,factory,class,class,extends,transformer,factory,transformer,factory,class,return,new,web,service,template,builder,this,detect,http,message,sender,this,interceptors,this,internal,customizers,this,customizers,this,message,senders,this,marshaller,this,unmarshaller,this,destination,provider,transformer,factory,class,this,message,factory
WebServiceTemplateBuilder -> public WebServiceTemplateBuilder setTransformerFactoryClass( 			Class<? extends TransformerFactory> transformerFactoryClass);1534945262;Set the {@link TransformerFactory} implementation to use._@param transformerFactoryClass the transformer factory implementation to use_@return a new builder instance._@see WebServiceTemplate#setTransformerFactoryClass(Class);public WebServiceTemplateBuilder setTransformerFactoryClass(_			Class<? extends TransformerFactory> transformerFactoryClass) {_		return new WebServiceTemplateBuilder(this.detectHttpMessageSender,_				this.interceptors, this.internalCustomizers, this.customizers,_				this.messageSenders, this.marshaller, this.unmarshaller,_				this.destinationProvider, transformerFactoryClass, this.messageFactory)__	};set,the,link,transformer,factory,implementation,to,use,param,transformer,factory,class,the,transformer,factory,implementation,to,use,return,a,new,builder,instance,see,web,service,template,set,transformer,factory,class,class;public,web,service,template,builder,set,transformer,factory,class,class,extends,transformer,factory,transformer,factory,class,return,new,web,service,template,builder,this,detect,http,message,sender,this,interceptors,this,internal,customizers,this,customizers,this,message,senders,this,marshaller,this,unmarshaller,this,destination,provider,transformer,factory,class,this,message,factory
