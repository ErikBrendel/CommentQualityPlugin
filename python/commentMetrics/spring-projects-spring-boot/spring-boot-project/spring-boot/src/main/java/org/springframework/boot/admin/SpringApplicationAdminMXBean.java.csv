commented;modifiers;parameterAmount;loc;comment;code
true;;0;1;/**  * Specify if the application has fully started and is now ready.  * @return {@code true} if the application is ready  * @see org.springframework.boot.context.event.ApplicationReadyEvent  */ ;/**  * Specify if the application has fully started and is now ready.  * @return {@code true} if the application is ready  * @see org.springframework.boot.context.event.ApplicationReadyEvent  */ boolean isReady().
true;;0;1;/**  * Specify if the application runs in an embedded web container. Return {@code false}  * on a web application that hasn't fully started yet, so it is preferable to wait for  * the application to be {@link #isReady() ready}.  * @return {@code true} if the application runs in an embedded web container  * @see #isReady()  */ ;/**  * Specify if the application runs in an embedded web container. Return {@code false}  * on a web application that hasn't fully started yet, so it is preferable to wait for  * the application to be {@link #isReady() ready}.  * @return {@code true} if the application runs in an embedded web container  * @see #isReady()  */ boolean isEmbeddedWebApplication().
true;;1;1;/**  * Return the value of the specified key from the application  * {@link org.springframework.core.env.Environment Environment}.  * @param key the property key  * @return the property value or {@code null} if it does not exist  */ ;/**  * Return the value of the specified key from the application  * {@link org.springframework.core.env.Environment Environment}.  * @param key the property key  * @return the property value or {@code null} if it does not exist  */ String getProperty(String key).
true;;0;1;/**  * Shutdown the application.  * @see org.springframework.context.ConfigurableApplicationContext#close()  */ ;/**  * Shutdown the application.  * @see org.springframework.context.ConfigurableApplicationContext#close()  */ void shutdown().
