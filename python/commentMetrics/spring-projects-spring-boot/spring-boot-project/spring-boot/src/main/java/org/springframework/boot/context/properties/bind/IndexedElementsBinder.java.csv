# id;timestamp;commentText;codeText;commentWords;codeWords
IndexedElementsBinder -> protected final void bindIndexed(ConfigurationPropertyName name, Bindable<?> target, 			AggregateElementBinder elementBinder, ResolvableType aggregateType, 			ResolvableType elementType, IndexedCollectionSupplier result);1517626834;Bind indexed elements to the supplied collection._@param name The name of the property to bind_@param target the target bindable_@param elementBinder the binder to use for elements_@param aggregateType the aggregate type, may be a collection or an array_@param elementType the element type_@param result the destination for results;protected final void bindIndexed(ConfigurationPropertyName name, Bindable<?> target,_			AggregateElementBinder elementBinder, ResolvableType aggregateType,_			ResolvableType elementType, IndexedCollectionSupplier result) {_		for (ConfigurationPropertySource source : getContext().getSources()) {_			bindIndexed(source, name, target, elementBinder, result, aggregateType,_					elementType)__			if (result.wasSupplied() && result.get() != null) {_				return__			}_		}_	};bind,indexed,elements,to,the,supplied,collection,param,name,the,name,of,the,property,to,bind,param,target,the,target,bindable,param,element,binder,the,binder,to,use,for,elements,param,aggregate,type,the,aggregate,type,may,be,a,collection,or,an,array,param,element,type,the,element,type,param,result,the,destination,for,results;protected,final,void,bind,indexed,configuration,property,name,name,bindable,target,aggregate,element,binder,element,binder,resolvable,type,aggregate,type,resolvable,type,element,type,indexed,collection,supplier,result,for,configuration,property,source,source,get,context,get,sources,bind,indexed,source,name,target,element,binder,result,aggregate,type,element,type,if,result,was,supplied,result,get,null,return
IndexedElementsBinder -> protected final void bindIndexed(ConfigurationPropertyName name, Bindable<?> target, 			AggregateElementBinder elementBinder, ResolvableType aggregateType, 			ResolvableType elementType, IndexedCollectionSupplier result);1518039463;Bind indexed elements to the supplied collection._@param name The name of the property to bind_@param target the target bindable_@param elementBinder the binder to use for elements_@param aggregateType the aggregate type, may be a collection or an array_@param elementType the element type_@param result the destination for results;protected final void bindIndexed(ConfigurationPropertyName name, Bindable<?> target,_			AggregateElementBinder elementBinder, ResolvableType aggregateType,_			ResolvableType elementType, IndexedCollectionSupplier result) {_		for (ConfigurationPropertySource source : getContext().getSources()) {_			bindIndexed(source, name, target, elementBinder, result, aggregateType,_					elementType)__			if (result.wasSupplied() && result.get() != null) {_				return__			}_		}_	};bind,indexed,elements,to,the,supplied,collection,param,name,the,name,of,the,property,to,bind,param,target,the,target,bindable,param,element,binder,the,binder,to,use,for,elements,param,aggregate,type,the,aggregate,type,may,be,a,collection,or,an,array,param,element,type,the,element,type,param,result,the,destination,for,results;protected,final,void,bind,indexed,configuration,property,name,name,bindable,target,aggregate,element,binder,element,binder,resolvable,type,aggregate,type,resolvable,type,element,type,indexed,collection,supplier,result,for,configuration,property,source,source,get,context,get,sources,bind,indexed,source,name,target,element,binder,result,aggregate,type,element,type,if,result,was,supplied,result,get,null,return
IndexedElementsBinder -> protected final void bindIndexed(ConfigurationPropertyName name, Bindable<?> target, 			AggregateElementBinder elementBinder, ResolvableType aggregateType, 			ResolvableType elementType, IndexedCollectionSupplier result);1518529427;Bind indexed elements to the supplied collection._@param name The name of the property to bind_@param target the target bindable_@param elementBinder the binder to use for elements_@param aggregateType the aggregate type, may be a collection or an array_@param elementType the element type_@param result the destination for results;protected final void bindIndexed(ConfigurationPropertyName name, Bindable<?> target,_			AggregateElementBinder elementBinder, ResolvableType aggregateType,_			ResolvableType elementType, IndexedCollectionSupplier result) {_		for (ConfigurationPropertySource source : getContext().getSources()) {_			bindIndexed(source, name, target, elementBinder, result, aggregateType,_					elementType)__			if (result.wasSupplied() && result.get() != null) {_				return__			}_		}_	};bind,indexed,elements,to,the,supplied,collection,param,name,the,name,of,the,property,to,bind,param,target,the,target,bindable,param,element,binder,the,binder,to,use,for,elements,param,aggregate,type,the,aggregate,type,may,be,a,collection,or,an,array,param,element,type,the,element,type,param,result,the,destination,for,results;protected,final,void,bind,indexed,configuration,property,name,name,bindable,target,aggregate,element,binder,element,binder,resolvable,type,aggregate,type,resolvable,type,element,type,indexed,collection,supplier,result,for,configuration,property,source,source,get,context,get,sources,bind,indexed,source,name,target,element,binder,result,aggregate,type,element,type,if,result,was,supplied,result,get,null,return
IndexedElementsBinder -> protected final void bindIndexed(ConfigurationPropertyName name, Bindable<?> target, 			AggregateElementBinder elementBinder, ResolvableType aggregateType, 			ResolvableType elementType, IndexedCollectionSupplier result);1518539066;Bind indexed elements to the supplied collection._@param name The name of the property to bind_@param target the target bindable_@param elementBinder the binder to use for elements_@param aggregateType the aggregate type, may be a collection or an array_@param elementType the element type_@param result the destination for results;protected final void bindIndexed(ConfigurationPropertyName name, Bindable<?> target,_			AggregateElementBinder elementBinder, ResolvableType aggregateType,_			ResolvableType elementType, IndexedCollectionSupplier result) {_		for (ConfigurationPropertySource source : getContext().getSources()) {_			bindIndexed(source, name, target, elementBinder, result, aggregateType,_					elementType)__			if (result.wasSupplied() && result.get() != null) {_				return__			}_		}_	};bind,indexed,elements,to,the,supplied,collection,param,name,the,name,of,the,property,to,bind,param,target,the,target,bindable,param,element,binder,the,binder,to,use,for,elements,param,aggregate,type,the,aggregate,type,may,be,a,collection,or,an,array,param,element,type,the,element,type,param,result,the,destination,for,results;protected,final,void,bind,indexed,configuration,property,name,name,bindable,target,aggregate,element,binder,element,binder,resolvable,type,aggregate,type,resolvable,type,element,type,indexed,collection,supplier,result,for,configuration,property,source,source,get,context,get,sources,bind,indexed,source,name,target,element,binder,result,aggregate,type,element,type,if,result,was,supplied,result,get,null,return
IndexedElementsBinder -> protected final void bindIndexed(ConfigurationPropertyName name, Bindable<?> target, 			AggregateElementBinder elementBinder, ResolvableType aggregateType, 			ResolvableType elementType, IndexedCollectionSupplier result);1518543736;Bind indexed elements to the supplied collection._@param name The name of the property to bind_@param target the target bindable_@param elementBinder the binder to use for elements_@param aggregateType the aggregate type, may be a collection or an array_@param elementType the element type_@param result the destination for results;protected final void bindIndexed(ConfigurationPropertyName name, Bindable<?> target,_			AggregateElementBinder elementBinder, ResolvableType aggregateType,_			ResolvableType elementType, IndexedCollectionSupplier result) {_		for (ConfigurationPropertySource source : getContext().getSources()) {_			bindIndexed(source, name, target, elementBinder, result, aggregateType,_					elementType)__			if (result.wasSupplied() && result.get() != null) {_				return__			}_		}_	};bind,indexed,elements,to,the,supplied,collection,param,name,the,name,of,the,property,to,bind,param,target,the,target,bindable,param,element,binder,the,binder,to,use,for,elements,param,aggregate,type,the,aggregate,type,may,be,a,collection,or,an,array,param,element,type,the,element,type,param,result,the,destination,for,results;protected,final,void,bind,indexed,configuration,property,name,name,bindable,target,aggregate,element,binder,element,binder,resolvable,type,aggregate,type,resolvable,type,element,type,indexed,collection,supplier,result,for,configuration,property,source,source,get,context,get,sources,bind,indexed,source,name,target,element,binder,result,aggregate,type,element,type,if,result,was,supplied,result,get,null,return
IndexedElementsBinder -> protected final void bindIndexed(ConfigurationPropertyName name, Bindable<?> target, 			AggregateElementBinder elementBinder, ResolvableType aggregateType, 			ResolvableType elementType, IndexedCollectionSupplier result);1519100747;Bind indexed elements to the supplied collection._@param name The name of the property to bind_@param target the target bindable_@param elementBinder the binder to use for elements_@param aggregateType the aggregate type, may be a collection or an array_@param elementType the element type_@param result the destination for results;protected final void bindIndexed(ConfigurationPropertyName name, Bindable<?> target,_			AggregateElementBinder elementBinder, ResolvableType aggregateType,_			ResolvableType elementType, IndexedCollectionSupplier result) {_		for (ConfigurationPropertySource source : getContext().getSources()) {_			bindIndexed(source, name, target, elementBinder, result, aggregateType,_					elementType)__			if (result.wasSupplied() && result.get() != null) {_				return__			}_		}_	};bind,indexed,elements,to,the,supplied,collection,param,name,the,name,of,the,property,to,bind,param,target,the,target,bindable,param,element,binder,the,binder,to,use,for,elements,param,aggregate,type,the,aggregate,type,may,be,a,collection,or,an,array,param,element,type,the,element,type,param,result,the,destination,for,results;protected,final,void,bind,indexed,configuration,property,name,name,bindable,target,aggregate,element,binder,element,binder,resolvable,type,aggregate,type,resolvable,type,element,type,indexed,collection,supplier,result,for,configuration,property,source,source,get,context,get,sources,bind,indexed,source,name,target,element,binder,result,aggregate,type,element,type,if,result,was,supplied,result,get,null,return
IndexedElementsBinder -> protected final void bindIndexed(ConfigurationPropertyName name, Bindable<?> target, 			AggregateElementBinder elementBinder, ResolvableType aggregateType, 			ResolvableType elementType, IndexedCollectionSupplier result);1525416882;Bind indexed elements to the supplied collection._@param name The name of the property to bind_@param target the target bindable_@param elementBinder the binder to use for elements_@param aggregateType the aggregate type, may be a collection or an array_@param elementType the element type_@param result the destination for results;protected final void bindIndexed(ConfigurationPropertyName name, Bindable<?> target,_			AggregateElementBinder elementBinder, ResolvableType aggregateType,_			ResolvableType elementType, IndexedCollectionSupplier result) {_		for (ConfigurationPropertySource source : getContext().getSources()) {_			bindIndexed(source, name, target, elementBinder, result, aggregateType,_					elementType)__			if (result.wasSupplied() && result.get() != null) {_				return__			}_		}_	};bind,indexed,elements,to,the,supplied,collection,param,name,the,name,of,the,property,to,bind,param,target,the,target,bindable,param,element,binder,the,binder,to,use,for,elements,param,aggregate,type,the,aggregate,type,may,be,a,collection,or,an,array,param,element,type,the,element,type,param,result,the,destination,for,results;protected,final,void,bind,indexed,configuration,property,name,name,bindable,target,aggregate,element,binder,element,binder,resolvable,type,aggregate,type,resolvable,type,element,type,indexed,collection,supplier,result,for,configuration,property,source,source,get,context,get,sources,bind,indexed,source,name,target,element,binder,result,aggregate,type,element,type,if,result,was,supplied,result,get,null,return
IndexedElementsBinder -> protected final void bindIndexed(ConfigurationPropertyName name, Bindable<?> target, 			AggregateElementBinder elementBinder, ResolvableType aggregateType, 			ResolvableType elementType, IndexedCollectionSupplier result);1526053949;Bind indexed elements to the supplied collection._@param name The name of the property to bind_@param target the target bindable_@param elementBinder the binder to use for elements_@param aggregateType the aggregate type, may be a collection or an array_@param elementType the element type_@param result the destination for results;protected final void bindIndexed(ConfigurationPropertyName name, Bindable<?> target,_			AggregateElementBinder elementBinder, ResolvableType aggregateType,_			ResolvableType elementType, IndexedCollectionSupplier result) {_		for (ConfigurationPropertySource source : getContext().getSources()) {_			bindIndexed(source, name, target, elementBinder, result, aggregateType,_					elementType)__			if (result.wasSupplied() && result.get() != null) {_				return__			}_		}_	};bind,indexed,elements,to,the,supplied,collection,param,name,the,name,of,the,property,to,bind,param,target,the,target,bindable,param,element,binder,the,binder,to,use,for,elements,param,aggregate,type,the,aggregate,type,may,be,a,collection,or,an,array,param,element,type,the,element,type,param,result,the,destination,for,results;protected,final,void,bind,indexed,configuration,property,name,name,bindable,target,aggregate,element,binder,element,binder,resolvable,type,aggregate,type,resolvable,type,element,type,indexed,collection,supplier,result,for,configuration,property,source,source,get,context,get,sources,bind,indexed,source,name,target,element,binder,result,aggregate,type,element,type,if,result,was,supplied,result,get,null,return
IndexedElementsBinder -> protected final void bindIndexed(ConfigurationPropertyName name, Bindable<?> target, 			AggregateElementBinder elementBinder, ResolvableType aggregateType, 			ResolvableType elementType, IndexedCollectionSupplier result);1526963912;Bind indexed elements to the supplied collection._@param name The name of the property to bind_@param target the target bindable_@param elementBinder the binder to use for elements_@param aggregateType the aggregate type, may be a collection or an array_@param elementType the element type_@param result the destination for results;protected final void bindIndexed(ConfigurationPropertyName name, Bindable<?> target,_			AggregateElementBinder elementBinder, ResolvableType aggregateType,_			ResolvableType elementType, IndexedCollectionSupplier result) {_		for (ConfigurationPropertySource source : getContext().getSources()) {_			bindIndexed(source, name, target, elementBinder, result, aggregateType,_					elementType)__			if (result.wasSupplied() && result.get() != null) {_				return__			}_		}_	};bind,indexed,elements,to,the,supplied,collection,param,name,the,name,of,the,property,to,bind,param,target,the,target,bindable,param,element,binder,the,binder,to,use,for,elements,param,aggregate,type,the,aggregate,type,may,be,a,collection,or,an,array,param,element,type,the,element,type,param,result,the,destination,for,results;protected,final,void,bind,indexed,configuration,property,name,name,bindable,target,aggregate,element,binder,element,binder,resolvable,type,aggregate,type,resolvable,type,element,type,indexed,collection,supplier,result,for,configuration,property,source,source,get,context,get,sources,bind,indexed,source,name,target,element,binder,result,aggregate,type,element,type,if,result,was,supplied,result,get,null,return
IndexedElementsBinder -> protected final void bindIndexed(ConfigurationPropertyName name, Bindable<?> target, 			AggregateElementBinder elementBinder, ResolvableType aggregateType, 			ResolvableType elementType, IndexedCollectionSupplier result);1532479427;Bind indexed elements to the supplied collection._@param name The name of the property to bind_@param target the target bindable_@param elementBinder the binder to use for elements_@param aggregateType the aggregate type, may be a collection or an array_@param elementType the element type_@param result the destination for results;protected final void bindIndexed(ConfigurationPropertyName name, Bindable<?> target,_			AggregateElementBinder elementBinder, ResolvableType aggregateType,_			ResolvableType elementType, IndexedCollectionSupplier result) {_		for (ConfigurationPropertySource source : getContext().getSources()) {_			bindIndexed(source, name, target, elementBinder, result, aggregateType,_					elementType)__			if (result.wasSupplied() && result.get() != null) {_				return__			}_		}_	};bind,indexed,elements,to,the,supplied,collection,param,name,the,name,of,the,property,to,bind,param,target,the,target,bindable,param,element,binder,the,binder,to,use,for,elements,param,aggregate,type,the,aggregate,type,may,be,a,collection,or,an,array,param,element,type,the,element,type,param,result,the,destination,for,results;protected,final,void,bind,indexed,configuration,property,name,name,bindable,target,aggregate,element,binder,element,binder,resolvable,type,aggregate,type,resolvable,type,element,type,indexed,collection,supplier,result,for,configuration,property,source,source,get,context,get,sources,bind,indexed,source,name,target,element,binder,result,aggregate,type,element,type,if,result,was,supplied,result,get,null,return
IndexedElementsBinder -> protected final void bindIndexed(ConfigurationPropertyName name, Bindable<?> target, 			AggregateElementBinder elementBinder, ResolvableType aggregateType, 			ResolvableType elementType, IndexedCollectionSupplier result);1532738143;Bind indexed elements to the supplied collection._@param name the name of the property to bind_@param target the target bindable_@param elementBinder the binder to use for elements_@param aggregateType the aggregate type, may be a collection or an array_@param elementType the element type_@param result the destination for results;protected final void bindIndexed(ConfigurationPropertyName name, Bindable<?> target,_			AggregateElementBinder elementBinder, ResolvableType aggregateType,_			ResolvableType elementType, IndexedCollectionSupplier result) {_		for (ConfigurationPropertySource source : getContext().getSources()) {_			bindIndexed(source, name, target, elementBinder, result, aggregateType,_					elementType)__			if (result.wasSupplied() && result.get() != null) {_				return__			}_		}_	};bind,indexed,elements,to,the,supplied,collection,param,name,the,name,of,the,property,to,bind,param,target,the,target,bindable,param,element,binder,the,binder,to,use,for,elements,param,aggregate,type,the,aggregate,type,may,be,a,collection,or,an,array,param,element,type,the,element,type,param,result,the,destination,for,results;protected,final,void,bind,indexed,configuration,property,name,name,bindable,target,aggregate,element,binder,element,binder,resolvable,type,aggregate,type,resolvable,type,element,type,indexed,collection,supplier,result,for,configuration,property,source,source,get,context,get,sources,bind,indexed,source,name,target,element,binder,result,aggregate,type,element,type,if,result,was,supplied,result,get,null,return
IndexedElementsBinder -> protected final void bindIndexed(ConfigurationPropertyName name, 			AggregateElementBinder elementBinder, ResolvableType aggregateType, 			ResolvableType elementType, IndexedCollectionSupplier result);1517626746;Bind indexed elements to the supplied collection._@param name The name of the property to bind_@param elementBinder the binder to use for elements_@param aggregateType the aggregate type, may be a collection or an array_@param elementType the element type_@param result the destination for results;protected final void bindIndexed(ConfigurationPropertyName name,_			AggregateElementBinder elementBinder, ResolvableType aggregateType,_			ResolvableType elementType, IndexedCollectionSupplier result) {_		for (ConfigurationPropertySource source : getContext().getSources()) {_			bindIndexed(source, name, elementBinder, result, aggregateType, elementType)__			if (result.wasSupplied() && result.get() != null) {_				return__			}_		}_	};bind,indexed,elements,to,the,supplied,collection,param,name,the,name,of,the,property,to,bind,param,element,binder,the,binder,to,use,for,elements,param,aggregate,type,the,aggregate,type,may,be,a,collection,or,an,array,param,element,type,the,element,type,param,result,the,destination,for,results;protected,final,void,bind,indexed,configuration,property,name,name,aggregate,element,binder,element,binder,resolvable,type,aggregate,type,resolvable,type,element,type,indexed,collection,supplier,result,for,configuration,property,source,source,get,context,get,sources,bind,indexed,source,name,element,binder,result,aggregate,type,element,type,if,result,was,supplied,result,get,null,return
IndexedElementsBinder -> protected final void bindIndexed(ConfigurationPropertyName name, 			AggregateElementBinder elementBinder, ResolvableType aggregateType, 			ResolvableType elementType, IndexedCollectionSupplier result);1517626746;Bind indexed elements to the supplied collection._@param name The name of the property to bind_@param elementBinder the binder to use for elements_@param aggregateType the aggregate type, may be a collection or an array_@param elementType the element type_@param result the destination for results;protected final void bindIndexed(ConfigurationPropertyName name,_			AggregateElementBinder elementBinder, ResolvableType aggregateType,_			ResolvableType elementType, IndexedCollectionSupplier result) {_		for (ConfigurationPropertySource source : getContext().getSources()) {_			bindIndexed(source, name, elementBinder, result, aggregateType, elementType)__			if (result.wasSupplied() && result.get() != null) {_				return__			}_		}_	};bind,indexed,elements,to,the,supplied,collection,param,name,the,name,of,the,property,to,bind,param,element,binder,the,binder,to,use,for,elements,param,aggregate,type,the,aggregate,type,may,be,a,collection,or,an,array,param,element,type,the,element,type,param,result,the,destination,for,results;protected,final,void,bind,indexed,configuration,property,name,name,aggregate,element,binder,element,binder,resolvable,type,aggregate,type,resolvable,type,element,type,indexed,collection,supplier,result,for,configuration,property,source,source,get,context,get,sources,bind,indexed,source,name,element,binder,result,aggregate,type,element,type,if,result,was,supplied,result,get,null,return
