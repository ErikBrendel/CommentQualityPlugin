# id;timestamp;commentText;codeText;commentWords;codeWords
AnnotationConfigReactiveWebApplicationContext -> @Override 	public void scan(String... basePackages);1509761243;Perform a scan within the specified base packages._<p>_Note that {@link #refresh()} must be called in order for the context to fully_process the new classes._@param basePackages the packages to check for annotated classes_@see #loadBeanDefinitions(DefaultListableBeanFactory)_@see #register(Class...)_@see #setConfigLocation(String)_@see #refresh();@Override_	public void scan(String... basePackages) {_		Assert.notEmpty(basePackages, "At least one base package must be specified")__		this.basePackages.addAll(Arrays.asList(basePackages))__	};perform,a,scan,within,the,specified,base,packages,p,note,that,link,refresh,must,be,called,in,order,for,the,context,to,fully,process,the,new,classes,param,base,packages,the,packages,to,check,for,annotated,classes,see,load,bean,definitions,default,listable,bean,factory,see,register,class,see,set,config,location,string,see,refresh;override,public,void,scan,string,base,packages,assert,not,empty,base,packages,at,least,one,base,package,must,be,specified,this,base,packages,add,all,arrays,as,list,base,packages
AnnotationConfigReactiveWebApplicationContext -> @Override 	public void scan(String... basePackages);1511949058;Perform a scan within the specified base packages._<p>_Note that {@link #refresh()} must be called in order for the context to fully_process the new classes._@param basePackages the packages to check for annotated classes_@see #loadBeanDefinitions(DefaultListableBeanFactory)_@see #register(Class...)_@see #setConfigLocation(String)_@see #refresh();@Override_	public void scan(String... basePackages) {_		Assert.notEmpty(basePackages, "At least one base package must be specified")__		this.basePackages.addAll(Arrays.asList(basePackages))__	};perform,a,scan,within,the,specified,base,packages,p,note,that,link,refresh,must,be,called,in,order,for,the,context,to,fully,process,the,new,classes,param,base,packages,the,packages,to,check,for,annotated,classes,see,load,bean,definitions,default,listable,bean,factory,see,register,class,see,set,config,location,string,see,refresh;override,public,void,scan,string,base,packages,assert,not,empty,base,packages,at,least,one,base,package,must,be,specified,this,base,packages,add,all,arrays,as,list,base,packages
AnnotationConfigReactiveWebApplicationContext -> @Override 	public void scan(String... basePackages);1517531895;Perform a scan within the specified base packages._<p>_Note that {@link #refresh()} must be called in order for the context to fully_process the new classes._@param basePackages the packages to check for annotated classes_@see #loadBeanDefinitions(DefaultListableBeanFactory)_@see #register(Class...)_@see #setConfigLocation(String)_@see #refresh();@Override_	public void scan(String... basePackages) {_		Assert.notEmpty(basePackages, "At least one base package must be specified")__		this.basePackages.addAll(Arrays.asList(basePackages))__	};perform,a,scan,within,the,specified,base,packages,p,note,that,link,refresh,must,be,called,in,order,for,the,context,to,fully,process,the,new,classes,param,base,packages,the,packages,to,check,for,annotated,classes,see,load,bean,definitions,default,listable,bean,factory,see,register,class,see,set,config,location,string,see,refresh;override,public,void,scan,string,base,packages,assert,not,empty,base,packages,at,least,one,base,package,must,be,specified,this,base,packages,add,all,arrays,as,list,base,packages
AnnotationConfigReactiveWebApplicationContext -> @Override 	public void scan(String... basePackages);1518087233;Perform a scan within the specified base packages._<p>_Note that {@link #refresh()} must be called in order for the context to fully_process the new classes._@param basePackages the packages to check for annotated classes_@see #loadBeanDefinitions(DefaultListableBeanFactory)_@see #register(Class...)_@see #setConfigLocation(String)_@see #refresh();@Override_	public void scan(String... basePackages) {_		Assert.notEmpty(basePackages, "At least one base package must be specified")__		this.basePackages.addAll(Arrays.asList(basePackages))__	};perform,a,scan,within,the,specified,base,packages,p,note,that,link,refresh,must,be,called,in,order,for,the,context,to,fully,process,the,new,classes,param,base,packages,the,packages,to,check,for,annotated,classes,see,load,bean,definitions,default,listable,bean,factory,see,register,class,see,set,config,location,string,see,refresh;override,public,void,scan,string,base,packages,assert,not,empty,base,packages,at,least,one,base,package,must,be,specified,this,base,packages,add,all,arrays,as,list,base,packages
AnnotationConfigReactiveWebApplicationContext -> @Override 	public void scan(String... basePackages);1519362690;Perform a scan within the specified base packages._<p>_Note that {@link #refresh()} must be called in order for the context to fully_process the new classes._@param basePackages the packages to check for annotated classes_@see #loadBeanDefinitions(DefaultListableBeanFactory)_@see #register(Class...)_@see #setConfigLocation(String)_@see #refresh();@Override_	public void scan(String... basePackages) {_		Assert.notEmpty(basePackages, "At least one base package must be specified")__		this.basePackages.addAll(Arrays.asList(basePackages))__	};perform,a,scan,within,the,specified,base,packages,p,note,that,link,refresh,must,be,called,in,order,for,the,context,to,fully,process,the,new,classes,param,base,packages,the,packages,to,check,for,annotated,classes,see,load,bean,definitions,default,listable,bean,factory,see,register,class,see,set,config,location,string,see,refresh;override,public,void,scan,string,base,packages,assert,not,empty,base,packages,at,least,one,base,package,must,be,specified,this,base,packages,add,all,arrays,as,list,base,packages
AnnotationConfigReactiveWebApplicationContext -> protected ClassPathBeanDefinitionScanner getClassPathBeanDefinitionScanner( 			DefaultListableBeanFactory beanFactory);1509761243;Build a {@link ClassPathBeanDefinitionScanner} for the given bean factory._<p>_This should be pre-configured with the {@code Environment} (if desired) but not_with a {@code BeanNameGenerator} or {@code ScopeMetadataResolver} yet._@param beanFactory the bean factory to load bean definitions into_@return the class path bean definition scanner_@since 4.1.9_@see #getEnvironment()_@see #getBeanNameGenerator()_@see #getScopeMetadataResolver();protected ClassPathBeanDefinitionScanner getClassPathBeanDefinitionScanner(_			DefaultListableBeanFactory beanFactory) {_		return new ClassPathBeanDefinitionScanner(beanFactory, true, getEnvironment())__	};build,a,link,class,path,bean,definition,scanner,for,the,given,bean,factory,p,this,should,be,pre,configured,with,the,code,environment,if,desired,but,not,with,a,code,bean,name,generator,or,code,scope,metadata,resolver,yet,param,bean,factory,the,bean,factory,to,load,bean,definitions,into,return,the,class,path,bean,definition,scanner,since,4,1,9,see,get,environment,see,get,bean,name,generator,see,get,scope,metadata,resolver;protected,class,path,bean,definition,scanner,get,class,path,bean,definition,scanner,default,listable,bean,factory,bean,factory,return,new,class,path,bean,definition,scanner,bean,factory,true,get,environment
AnnotationConfigReactiveWebApplicationContext -> protected ClassPathBeanDefinitionScanner getClassPathBeanDefinitionScanner( 			DefaultListableBeanFactory beanFactory);1511949058;Build a {@link ClassPathBeanDefinitionScanner} for the given bean factory._<p>_This should be pre-configured with the {@code Environment} (if desired) but not_with a {@code BeanNameGenerator} or {@code ScopeMetadataResolver} yet._@param beanFactory the bean factory to load bean definitions into_@return the class path bean definition scanner_@see #getEnvironment()_@see #getBeanNameGenerator()_@see #getScopeMetadataResolver();protected ClassPathBeanDefinitionScanner getClassPathBeanDefinitionScanner(_			DefaultListableBeanFactory beanFactory) {_		return new ClassPathBeanDefinitionScanner(beanFactory, true, getEnvironment())__	};build,a,link,class,path,bean,definition,scanner,for,the,given,bean,factory,p,this,should,be,pre,configured,with,the,code,environment,if,desired,but,not,with,a,code,bean,name,generator,or,code,scope,metadata,resolver,yet,param,bean,factory,the,bean,factory,to,load,bean,definitions,into,return,the,class,path,bean,definition,scanner,see,get,environment,see,get,bean,name,generator,see,get,scope,metadata,resolver;protected,class,path,bean,definition,scanner,get,class,path,bean,definition,scanner,default,listable,bean,factory,bean,factory,return,new,class,path,bean,definition,scanner,bean,factory,true,get,environment
AnnotationConfigReactiveWebApplicationContext -> protected ClassPathBeanDefinitionScanner getClassPathBeanDefinitionScanner( 			DefaultListableBeanFactory beanFactory);1517531895;Build a {@link ClassPathBeanDefinitionScanner} for the given bean factory._<p>_This should be pre-configured with the {@code Environment} (if desired) but not_with a {@code BeanNameGenerator} or {@code ScopeMetadataResolver} yet._@param beanFactory the bean factory to load bean definitions into_@return the class path bean definition scanner_@see #getEnvironment()_@see #getBeanNameGenerator()_@see #getScopeMetadataResolver();protected ClassPathBeanDefinitionScanner getClassPathBeanDefinitionScanner(_			DefaultListableBeanFactory beanFactory) {_		return new ClassPathBeanDefinitionScanner(beanFactory, true, getEnvironment())__	};build,a,link,class,path,bean,definition,scanner,for,the,given,bean,factory,p,this,should,be,pre,configured,with,the,code,environment,if,desired,but,not,with,a,code,bean,name,generator,or,code,scope,metadata,resolver,yet,param,bean,factory,the,bean,factory,to,load,bean,definitions,into,return,the,class,path,bean,definition,scanner,see,get,environment,see,get,bean,name,generator,see,get,scope,metadata,resolver;protected,class,path,bean,definition,scanner,get,class,path,bean,definition,scanner,default,listable,bean,factory,bean,factory,return,new,class,path,bean,definition,scanner,bean,factory,true,get,environment
AnnotationConfigReactiveWebApplicationContext -> protected ClassPathBeanDefinitionScanner getClassPathBeanDefinitionScanner( 			DefaultListableBeanFactory beanFactory);1518087233;Build a {@link ClassPathBeanDefinitionScanner} for the given bean factory._<p>_This should be pre-configured with the {@code Environment} (if desired) but not_with a {@code BeanNameGenerator} or {@code ScopeMetadataResolver} yet._@param beanFactory the bean factory to load bean definitions into_@return the class path bean definition scanner_@see #getEnvironment()_@see #getBeanNameGenerator()_@see #getScopeMetadataResolver();protected ClassPathBeanDefinitionScanner getClassPathBeanDefinitionScanner(_			DefaultListableBeanFactory beanFactory) {_		return new ClassPathBeanDefinitionScanner(beanFactory, true, getEnvironment())__	};build,a,link,class,path,bean,definition,scanner,for,the,given,bean,factory,p,this,should,be,pre,configured,with,the,code,environment,if,desired,but,not,with,a,code,bean,name,generator,or,code,scope,metadata,resolver,yet,param,bean,factory,the,bean,factory,to,load,bean,definitions,into,return,the,class,path,bean,definition,scanner,see,get,environment,see,get,bean,name,generator,see,get,scope,metadata,resolver;protected,class,path,bean,definition,scanner,get,class,path,bean,definition,scanner,default,listable,bean,factory,bean,factory,return,new,class,path,bean,definition,scanner,bean,factory,true,get,environment
AnnotationConfigReactiveWebApplicationContext -> protected ClassPathBeanDefinitionScanner getClassPathBeanDefinitionScanner( 			DefaultListableBeanFactory beanFactory);1519362690;Build a {@link ClassPathBeanDefinitionScanner} for the given bean factory._<p>_This should be pre-configured with the {@code Environment} (if desired) but not_with a {@code BeanNameGenerator} or {@code ScopeMetadataResolver} yet._@param beanFactory the bean factory to load bean definitions into_@return the class path bean definition scanner_@see #getEnvironment()_@see #getBeanNameGenerator()_@see #getScopeMetadataResolver();protected ClassPathBeanDefinitionScanner getClassPathBeanDefinitionScanner(_			DefaultListableBeanFactory beanFactory) {_		return new ClassPathBeanDefinitionScanner(beanFactory, true, getEnvironment())__	};build,a,link,class,path,bean,definition,scanner,for,the,given,bean,factory,p,this,should,be,pre,configured,with,the,code,environment,if,desired,but,not,with,a,code,bean,name,generator,or,code,scope,metadata,resolver,yet,param,bean,factory,the,bean,factory,to,load,bean,definitions,into,return,the,class,path,bean,definition,scanner,see,get,environment,see,get,bean,name,generator,see,get,scope,metadata,resolver;protected,class,path,bean,definition,scanner,get,class,path,bean,definition,scanner,default,listable,bean,factory,bean,factory,return,new,class,path,bean,definition,scanner,bean,factory,true,get,environment
AnnotationConfigReactiveWebApplicationContext -> protected ScopeMetadataResolver getScopeMetadataResolver();1509761243;Return the custom {@link ScopeMetadataResolver} for use with_{@link AnnotatedBeanDefinitionReader} and/or_{@link ClassPathBeanDefinitionScanner}, if any._@return the scope metadata resolver;protected ScopeMetadataResolver getScopeMetadataResolver() {_		return this.scopeMetadataResolver__	};return,the,custom,link,scope,metadata,resolver,for,use,with,link,annotated,bean,definition,reader,and,or,link,class,path,bean,definition,scanner,if,any,return,the,scope,metadata,resolver;protected,scope,metadata,resolver,get,scope,metadata,resolver,return,this,scope,metadata,resolver
AnnotationConfigReactiveWebApplicationContext -> protected ScopeMetadataResolver getScopeMetadataResolver();1511949058;Return the custom {@link ScopeMetadataResolver} for use with_{@link AnnotatedBeanDefinitionReader} and/or_{@link ClassPathBeanDefinitionScanner}, if any._@return the scope metadata resolver;protected ScopeMetadataResolver getScopeMetadataResolver() {_		return this.scopeMetadataResolver__	};return,the,custom,link,scope,metadata,resolver,for,use,with,link,annotated,bean,definition,reader,and,or,link,class,path,bean,definition,scanner,if,any,return,the,scope,metadata,resolver;protected,scope,metadata,resolver,get,scope,metadata,resolver,return,this,scope,metadata,resolver
AnnotationConfigReactiveWebApplicationContext -> protected ScopeMetadataResolver getScopeMetadataResolver();1517531895;Return the custom {@link ScopeMetadataResolver} for use with_{@link AnnotatedBeanDefinitionReader} and/or_{@link ClassPathBeanDefinitionScanner}, if any._@return the scope metadata resolver;protected ScopeMetadataResolver getScopeMetadataResolver() {_		return this.scopeMetadataResolver__	};return,the,custom,link,scope,metadata,resolver,for,use,with,link,annotated,bean,definition,reader,and,or,link,class,path,bean,definition,scanner,if,any,return,the,scope,metadata,resolver;protected,scope,metadata,resolver,get,scope,metadata,resolver,return,this,scope,metadata,resolver
AnnotationConfigReactiveWebApplicationContext -> protected ScopeMetadataResolver getScopeMetadataResolver();1518087233;Return the custom {@link ScopeMetadataResolver} for use with_{@link AnnotatedBeanDefinitionReader} and/or_{@link ClassPathBeanDefinitionScanner}, if any._@return the scope metadata resolver;protected ScopeMetadataResolver getScopeMetadataResolver() {_		return this.scopeMetadataResolver__	};return,the,custom,link,scope,metadata,resolver,for,use,with,link,annotated,bean,definition,reader,and,or,link,class,path,bean,definition,scanner,if,any,return,the,scope,metadata,resolver;protected,scope,metadata,resolver,get,scope,metadata,resolver,return,this,scope,metadata,resolver
AnnotationConfigReactiveWebApplicationContext -> protected ScopeMetadataResolver getScopeMetadataResolver();1519362690;Return the custom {@link ScopeMetadataResolver} for use with_{@link AnnotatedBeanDefinitionReader} and/or_{@link ClassPathBeanDefinitionScanner}, if any._@return the scope metadata resolver;protected ScopeMetadataResolver getScopeMetadataResolver() {_		return this.scopeMetadataResolver__	};return,the,custom,link,scope,metadata,resolver,for,use,with,link,annotated,bean,definition,reader,and,or,link,class,path,bean,definition,scanner,if,any,return,the,scope,metadata,resolver;protected,scope,metadata,resolver,get,scope,metadata,resolver,return,this,scope,metadata,resolver
AnnotationConfigReactiveWebApplicationContext -> protected AnnotatedBeanDefinitionReader getAnnotatedBeanDefinitionReader( 			DefaultListableBeanFactory beanFactory);1509761243;Build an {@link AnnotatedBeanDefinitionReader} for the given bean factory._<p>_This should be pre-configured with the {@code Environment} (if desired) but not_with a {@code BeanNameGenerator} or {@code ScopeMetadataResolver} yet._@param beanFactory the bean factory to load bean definitions into_@return the annotated bean definition reader_@see #getEnvironment()_@see #getBeanNameGenerator()_@see #getScopeMetadataResolver();protected AnnotatedBeanDefinitionReader getAnnotatedBeanDefinitionReader(_			DefaultListableBeanFactory beanFactory) {_		return new AnnotatedBeanDefinitionReader(beanFactory, getEnvironment())__	};build,an,link,annotated,bean,definition,reader,for,the,given,bean,factory,p,this,should,be,pre,configured,with,the,code,environment,if,desired,but,not,with,a,code,bean,name,generator,or,code,scope,metadata,resolver,yet,param,bean,factory,the,bean,factory,to,load,bean,definitions,into,return,the,annotated,bean,definition,reader,see,get,environment,see,get,bean,name,generator,see,get,scope,metadata,resolver;protected,annotated,bean,definition,reader,get,annotated,bean,definition,reader,default,listable,bean,factory,bean,factory,return,new,annotated,bean,definition,reader,bean,factory,get,environment
AnnotationConfigReactiveWebApplicationContext -> protected AnnotatedBeanDefinitionReader getAnnotatedBeanDefinitionReader( 			DefaultListableBeanFactory beanFactory);1511949058;Build an {@link AnnotatedBeanDefinitionReader} for the given bean factory._<p>_This should be pre-configured with the {@code Environment} (if desired) but not_with a {@code BeanNameGenerator} or {@code ScopeMetadataResolver} yet._@param beanFactory the bean factory to load bean definitions into_@return the annotated bean definition reader_@see #getEnvironment()_@see #getBeanNameGenerator()_@see #getScopeMetadataResolver();protected AnnotatedBeanDefinitionReader getAnnotatedBeanDefinitionReader(_			DefaultListableBeanFactory beanFactory) {_		return new AnnotatedBeanDefinitionReader(beanFactory, getEnvironment())__	};build,an,link,annotated,bean,definition,reader,for,the,given,bean,factory,p,this,should,be,pre,configured,with,the,code,environment,if,desired,but,not,with,a,code,bean,name,generator,or,code,scope,metadata,resolver,yet,param,bean,factory,the,bean,factory,to,load,bean,definitions,into,return,the,annotated,bean,definition,reader,see,get,environment,see,get,bean,name,generator,see,get,scope,metadata,resolver;protected,annotated,bean,definition,reader,get,annotated,bean,definition,reader,default,listable,bean,factory,bean,factory,return,new,annotated,bean,definition,reader,bean,factory,get,environment
AnnotationConfigReactiveWebApplicationContext -> protected AnnotatedBeanDefinitionReader getAnnotatedBeanDefinitionReader( 			DefaultListableBeanFactory beanFactory);1517531895;Build an {@link AnnotatedBeanDefinitionReader} for the given bean factory._<p>_This should be pre-configured with the {@code Environment} (if desired) but not_with a {@code BeanNameGenerator} or {@code ScopeMetadataResolver} yet._@param beanFactory the bean factory to load bean definitions into_@return the annotated bean definition reader_@see #getEnvironment()_@see #getBeanNameGenerator()_@see #getScopeMetadataResolver();protected AnnotatedBeanDefinitionReader getAnnotatedBeanDefinitionReader(_			DefaultListableBeanFactory beanFactory) {_		return new AnnotatedBeanDefinitionReader(beanFactory, getEnvironment())__	};build,an,link,annotated,bean,definition,reader,for,the,given,bean,factory,p,this,should,be,pre,configured,with,the,code,environment,if,desired,but,not,with,a,code,bean,name,generator,or,code,scope,metadata,resolver,yet,param,bean,factory,the,bean,factory,to,load,bean,definitions,into,return,the,annotated,bean,definition,reader,see,get,environment,see,get,bean,name,generator,see,get,scope,metadata,resolver;protected,annotated,bean,definition,reader,get,annotated,bean,definition,reader,default,listable,bean,factory,bean,factory,return,new,annotated,bean,definition,reader,bean,factory,get,environment
AnnotationConfigReactiveWebApplicationContext -> protected AnnotatedBeanDefinitionReader getAnnotatedBeanDefinitionReader( 			DefaultListableBeanFactory beanFactory);1518087233;Build an {@link AnnotatedBeanDefinitionReader} for the given bean factory._<p>_This should be pre-configured with the {@code Environment} (if desired) but not_with a {@code BeanNameGenerator} or {@code ScopeMetadataResolver} yet._@param beanFactory the bean factory to load bean definitions into_@return the annotated bean definition reader_@see #getEnvironment()_@see #getBeanNameGenerator()_@see #getScopeMetadataResolver();protected AnnotatedBeanDefinitionReader getAnnotatedBeanDefinitionReader(_			DefaultListableBeanFactory beanFactory) {_		return new AnnotatedBeanDefinitionReader(beanFactory, getEnvironment())__	};build,an,link,annotated,bean,definition,reader,for,the,given,bean,factory,p,this,should,be,pre,configured,with,the,code,environment,if,desired,but,not,with,a,code,bean,name,generator,or,code,scope,metadata,resolver,yet,param,bean,factory,the,bean,factory,to,load,bean,definitions,into,return,the,annotated,bean,definition,reader,see,get,environment,see,get,bean,name,generator,see,get,scope,metadata,resolver;protected,annotated,bean,definition,reader,get,annotated,bean,definition,reader,default,listable,bean,factory,bean,factory,return,new,annotated,bean,definition,reader,bean,factory,get,environment
AnnotationConfigReactiveWebApplicationContext -> protected AnnotatedBeanDefinitionReader getAnnotatedBeanDefinitionReader( 			DefaultListableBeanFactory beanFactory);1519362690;Build an {@link AnnotatedBeanDefinitionReader} for the given bean factory._<p>_This should be pre-configured with the {@code Environment} (if desired) but not_with a {@code BeanNameGenerator} or {@code ScopeMetadataResolver} yet._@param beanFactory the bean factory to load bean definitions into_@return the annotated bean definition reader_@see #getEnvironment()_@see #getBeanNameGenerator()_@see #getScopeMetadataResolver();protected AnnotatedBeanDefinitionReader getAnnotatedBeanDefinitionReader(_			DefaultListableBeanFactory beanFactory) {_		return new AnnotatedBeanDefinitionReader(beanFactory, getEnvironment())__	};build,an,link,annotated,bean,definition,reader,for,the,given,bean,factory,p,this,should,be,pre,configured,with,the,code,environment,if,desired,but,not,with,a,code,bean,name,generator,or,code,scope,metadata,resolver,yet,param,bean,factory,the,bean,factory,to,load,bean,definitions,into,return,the,annotated,bean,definition,reader,see,get,environment,see,get,bean,name,generator,see,get,scope,metadata,resolver;protected,annotated,bean,definition,reader,get,annotated,bean,definition,reader,default,listable,bean,factory,bean,factory,return,new,annotated,bean,definition,reader,bean,factory,get,environment
AnnotationConfigReactiveWebApplicationContext -> public void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver);1509761243;Set a custom {@link ScopeMetadataResolver} for use with_{@link AnnotatedBeanDefinitionReader} and/or_{@link ClassPathBeanDefinitionScanner}._<p>_Default is an_{@link org.springframework.context.annotation.AnnotationScopeMetadataResolver}._@param scopeMetadataResolver the scope metadata resolver_@see AnnotatedBeanDefinitionReader#setScopeMetadataResolver_@see ClassPathBeanDefinitionScanner#setScopeMetadataResolver;public void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver) {_		this.scopeMetadataResolver = scopeMetadataResolver__	};set,a,custom,link,scope,metadata,resolver,for,use,with,link,annotated,bean,definition,reader,and,or,link,class,path,bean,definition,scanner,p,default,is,an,link,org,springframework,context,annotation,annotation,scope,metadata,resolver,param,scope,metadata,resolver,the,scope,metadata,resolver,see,annotated,bean,definition,reader,set,scope,metadata,resolver,see,class,path,bean,definition,scanner,set,scope,metadata,resolver;public,void,set,scope,metadata,resolver,scope,metadata,resolver,scope,metadata,resolver,this,scope,metadata,resolver,scope,metadata,resolver
AnnotationConfigReactiveWebApplicationContext -> public void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver);1511949058;Set a custom {@link ScopeMetadataResolver} for use with_{@link AnnotatedBeanDefinitionReader} and/or_{@link ClassPathBeanDefinitionScanner}._<p>_Default is an_{@link org.springframework.context.annotation.AnnotationScopeMetadataResolver}._@param scopeMetadataResolver the scope metadata resolver_@see AnnotatedBeanDefinitionReader#setScopeMetadataResolver_@see ClassPathBeanDefinitionScanner#setScopeMetadataResolver;public void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver) {_		this.scopeMetadataResolver = scopeMetadataResolver__	};set,a,custom,link,scope,metadata,resolver,for,use,with,link,annotated,bean,definition,reader,and,or,link,class,path,bean,definition,scanner,p,default,is,an,link,org,springframework,context,annotation,annotation,scope,metadata,resolver,param,scope,metadata,resolver,the,scope,metadata,resolver,see,annotated,bean,definition,reader,set,scope,metadata,resolver,see,class,path,bean,definition,scanner,set,scope,metadata,resolver;public,void,set,scope,metadata,resolver,scope,metadata,resolver,scope,metadata,resolver,this,scope,metadata,resolver,scope,metadata,resolver
AnnotationConfigReactiveWebApplicationContext -> public void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver);1517531895;Set a custom {@link ScopeMetadataResolver} for use with_{@link AnnotatedBeanDefinitionReader} and/or_{@link ClassPathBeanDefinitionScanner}._<p>_Default is an_{@link org.springframework.context.annotation.AnnotationScopeMetadataResolver}._@param scopeMetadataResolver the scope metadata resolver_@see AnnotatedBeanDefinitionReader#setScopeMetadataResolver_@see ClassPathBeanDefinitionScanner#setScopeMetadataResolver;public void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver) {_		this.scopeMetadataResolver = scopeMetadataResolver__	};set,a,custom,link,scope,metadata,resolver,for,use,with,link,annotated,bean,definition,reader,and,or,link,class,path,bean,definition,scanner,p,default,is,an,link,org,springframework,context,annotation,annotation,scope,metadata,resolver,param,scope,metadata,resolver,the,scope,metadata,resolver,see,annotated,bean,definition,reader,set,scope,metadata,resolver,see,class,path,bean,definition,scanner,set,scope,metadata,resolver;public,void,set,scope,metadata,resolver,scope,metadata,resolver,scope,metadata,resolver,this,scope,metadata,resolver,scope,metadata,resolver
AnnotationConfigReactiveWebApplicationContext -> public void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver);1518087233;Set a custom {@link ScopeMetadataResolver} for use with_{@link AnnotatedBeanDefinitionReader} and/or_{@link ClassPathBeanDefinitionScanner}._<p>_Default is an_{@link org.springframework.context.annotation.AnnotationScopeMetadataResolver}._@param scopeMetadataResolver the scope metadata resolver_@see AnnotatedBeanDefinitionReader#setScopeMetadataResolver_@see ClassPathBeanDefinitionScanner#setScopeMetadataResolver;public void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver) {_		this.scopeMetadataResolver = scopeMetadataResolver__	};set,a,custom,link,scope,metadata,resolver,for,use,with,link,annotated,bean,definition,reader,and,or,link,class,path,bean,definition,scanner,p,default,is,an,link,org,springframework,context,annotation,annotation,scope,metadata,resolver,param,scope,metadata,resolver,the,scope,metadata,resolver,see,annotated,bean,definition,reader,set,scope,metadata,resolver,see,class,path,bean,definition,scanner,set,scope,metadata,resolver;public,void,set,scope,metadata,resolver,scope,metadata,resolver,scope,metadata,resolver,this,scope,metadata,resolver,scope,metadata,resolver
AnnotationConfigReactiveWebApplicationContext -> public void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver);1519362690;Set a custom {@link ScopeMetadataResolver} for use with_{@link AnnotatedBeanDefinitionReader} and/or_{@link ClassPathBeanDefinitionScanner}._<p>_Default is an_{@link org.springframework.context.annotation.AnnotationScopeMetadataResolver}._@param scopeMetadataResolver the scope metadata resolver_@see AnnotatedBeanDefinitionReader#setScopeMetadataResolver_@see ClassPathBeanDefinitionScanner#setScopeMetadataResolver;public void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver) {_		this.scopeMetadataResolver = scopeMetadataResolver__	};set,a,custom,link,scope,metadata,resolver,for,use,with,link,annotated,bean,definition,reader,and,or,link,class,path,bean,definition,scanner,p,default,is,an,link,org,springframework,context,annotation,annotation,scope,metadata,resolver,param,scope,metadata,resolver,the,scope,metadata,resolver,see,annotated,bean,definition,reader,set,scope,metadata,resolver,see,class,path,bean,definition,scanner,set,scope,metadata,resolver;public,void,set,scope,metadata,resolver,scope,metadata,resolver,scope,metadata,resolver,this,scope,metadata,resolver,scope,metadata,resolver
AnnotationConfigReactiveWebApplicationContext -> public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator);1509761243;Set a custom {@link BeanNameGenerator} for use with_{@link AnnotatedBeanDefinitionReader} and/or_{@link ClassPathBeanDefinitionScanner}._<p>_Default is_{@link org.springframework.context.annotation.AnnotationBeanNameGenerator}._@param beanNameGenerator the bean name generator_@see AnnotatedBeanDefinitionReader#setBeanNameGenerator_@see ClassPathBeanDefinitionScanner#setBeanNameGenerator;public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator) {_		this.beanNameGenerator = beanNameGenerator__	};set,a,custom,link,bean,name,generator,for,use,with,link,annotated,bean,definition,reader,and,or,link,class,path,bean,definition,scanner,p,default,is,link,org,springframework,context,annotation,annotation,bean,name,generator,param,bean,name,generator,the,bean,name,generator,see,annotated,bean,definition,reader,set,bean,name,generator,see,class,path,bean,definition,scanner,set,bean,name,generator;public,void,set,bean,name,generator,bean,name,generator,bean,name,generator,this,bean,name,generator,bean,name,generator
AnnotationConfigReactiveWebApplicationContext -> public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator);1511949058;Set a custom {@link BeanNameGenerator} for use with_{@link AnnotatedBeanDefinitionReader} and/or_{@link ClassPathBeanDefinitionScanner}._<p>_Default is_{@link org.springframework.context.annotation.AnnotationBeanNameGenerator}._@param beanNameGenerator the bean name generator_@see AnnotatedBeanDefinitionReader#setBeanNameGenerator_@see ClassPathBeanDefinitionScanner#setBeanNameGenerator;public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator) {_		this.beanNameGenerator = beanNameGenerator__	};set,a,custom,link,bean,name,generator,for,use,with,link,annotated,bean,definition,reader,and,or,link,class,path,bean,definition,scanner,p,default,is,link,org,springframework,context,annotation,annotation,bean,name,generator,param,bean,name,generator,the,bean,name,generator,see,annotated,bean,definition,reader,set,bean,name,generator,see,class,path,bean,definition,scanner,set,bean,name,generator;public,void,set,bean,name,generator,bean,name,generator,bean,name,generator,this,bean,name,generator,bean,name,generator
AnnotationConfigReactiveWebApplicationContext -> public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator);1517531895;Set a custom {@link BeanNameGenerator} for use with_{@link AnnotatedBeanDefinitionReader} and/or_{@link ClassPathBeanDefinitionScanner}._<p>_Default is_{@link org.springframework.context.annotation.AnnotationBeanNameGenerator}._@param beanNameGenerator the bean name generator_@see AnnotatedBeanDefinitionReader#setBeanNameGenerator_@see ClassPathBeanDefinitionScanner#setBeanNameGenerator;public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator) {_		this.beanNameGenerator = beanNameGenerator__	};set,a,custom,link,bean,name,generator,for,use,with,link,annotated,bean,definition,reader,and,or,link,class,path,bean,definition,scanner,p,default,is,link,org,springframework,context,annotation,annotation,bean,name,generator,param,bean,name,generator,the,bean,name,generator,see,annotated,bean,definition,reader,set,bean,name,generator,see,class,path,bean,definition,scanner,set,bean,name,generator;public,void,set,bean,name,generator,bean,name,generator,bean,name,generator,this,bean,name,generator,bean,name,generator
AnnotationConfigReactiveWebApplicationContext -> public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator);1518087233;Set a custom {@link BeanNameGenerator} for use with_{@link AnnotatedBeanDefinitionReader} and/or_{@link ClassPathBeanDefinitionScanner}._<p>_Default is_{@link org.springframework.context.annotation.AnnotationBeanNameGenerator}._@param beanNameGenerator the bean name generator_@see AnnotatedBeanDefinitionReader#setBeanNameGenerator_@see ClassPathBeanDefinitionScanner#setBeanNameGenerator;public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator) {_		this.beanNameGenerator = beanNameGenerator__	};set,a,custom,link,bean,name,generator,for,use,with,link,annotated,bean,definition,reader,and,or,link,class,path,bean,definition,scanner,p,default,is,link,org,springframework,context,annotation,annotation,bean,name,generator,param,bean,name,generator,the,bean,name,generator,see,annotated,bean,definition,reader,set,bean,name,generator,see,class,path,bean,definition,scanner,set,bean,name,generator;public,void,set,bean,name,generator,bean,name,generator,bean,name,generator,this,bean,name,generator,bean,name,generator
AnnotationConfigReactiveWebApplicationContext -> public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator);1519362690;Set a custom {@link BeanNameGenerator} for use with_{@link AnnotatedBeanDefinitionReader} and/or_{@link ClassPathBeanDefinitionScanner}._<p>_Default is_{@link org.springframework.context.annotation.AnnotationBeanNameGenerator}._@param beanNameGenerator the bean name generator_@see AnnotatedBeanDefinitionReader#setBeanNameGenerator_@see ClassPathBeanDefinitionScanner#setBeanNameGenerator;public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator) {_		this.beanNameGenerator = beanNameGenerator__	};set,a,custom,link,bean,name,generator,for,use,with,link,annotated,bean,definition,reader,and,or,link,class,path,bean,definition,scanner,p,default,is,link,org,springframework,context,annotation,annotation,bean,name,generator,param,bean,name,generator,the,bean,name,generator,see,annotated,bean,definition,reader,set,bean,name,generator,see,class,path,bean,definition,scanner,set,bean,name,generator;public,void,set,bean,name,generator,bean,name,generator,bean,name,generator,this,bean,name,generator,bean,name,generator
AnnotationConfigReactiveWebApplicationContext -> @Override 	protected void loadBeanDefinitions(DefaultListableBeanFactory beanFactory);1509761243;Register a {@link org.springframework.beans.factory.config.BeanDefinition} for any_classes specified by {@link #register(Class...)} and scan any packages specified by_{@link #scan(String...)}._<p>_For any values specified by {@link #setConfigLocation(String)} or_{@link #setConfigLocations(String[])}, attempt first to load each location as a_class, registering a {@code BeanDefinition} if class loading is successful, and if_class loading fails (i.e. a {@code ClassNotFoundException} is raised), assume the_value is a package and attempt to scan it for annotated classes._<p>_Enables the default set of annotation configuration post processors, such that_{@code @Autowired}, {@code @Required}, and associated annotations can be used._<p>_Configuration class bean definitions are registered with generated bean definition_names unless the {@code value} attribute is provided to the stereotype annotation._@param beanFactory the bean factory to load bean definitions into_@see #register(Class...)_@see #scan(String...)_@see #setConfigLocation(String)_@see #setConfigLocations(String[])_@see AnnotatedBeanDefinitionReader_@see ClassPathBeanDefinitionScanner;@Override_	protected void loadBeanDefinitions(DefaultListableBeanFactory beanFactory) {_		AnnotatedBeanDefinitionReader reader = getAnnotatedBeanDefinitionReader(_				beanFactory)__		ClassPathBeanDefinitionScanner scanner = getClassPathBeanDefinitionScanner(_				beanFactory)__		applyBeanNameGenerator(beanFactory, reader, scanner)__		applyScopeMetadataResolver(reader, scanner)__		loadBeanDefinitions(reader, scanner)__	};register,a,link,org,springframework,beans,factory,config,bean,definition,for,any,classes,specified,by,link,register,class,and,scan,any,packages,specified,by,link,scan,string,p,for,any,values,specified,by,link,set,config,location,string,or,link,set,config,locations,string,attempt,first,to,load,each,location,as,a,class,registering,a,code,bean,definition,if,class,loading,is,successful,and,if,class,loading,fails,i,e,a,code,class,not,found,exception,is,raised,assume,the,value,is,a,package,and,attempt,to,scan,it,for,annotated,classes,p,enables,the,default,set,of,annotation,configuration,post,processors,such,that,code,autowired,code,required,and,associated,annotations,can,be,used,p,configuration,class,bean,definitions,are,registered,with,generated,bean,definition,names,unless,the,code,value,attribute,is,provided,to,the,stereotype,annotation,param,bean,factory,the,bean,factory,to,load,bean,definitions,into,see,register,class,see,scan,string,see,set,config,location,string,see,set,config,locations,string,see,annotated,bean,definition,reader,see,class,path,bean,definition,scanner;override,protected,void,load,bean,definitions,default,listable,bean,factory,bean,factory,annotated,bean,definition,reader,reader,get,annotated,bean,definition,reader,bean,factory,class,path,bean,definition,scanner,scanner,get,class,path,bean,definition,scanner,bean,factory,apply,bean,name,generator,bean,factory,reader,scanner,apply,scope,metadata,resolver,reader,scanner,load,bean,definitions,reader,scanner
AnnotationConfigReactiveWebApplicationContext -> @Override 	protected void loadBeanDefinitions(DefaultListableBeanFactory beanFactory);1511949058;Register a {@link org.springframework.beans.factory.config.BeanDefinition} for any_classes specified by {@link #register(Class...)} and scan any packages specified by_{@link #scan(String...)}._<p>_For any values specified by {@link #setConfigLocation(String)} or_{@link #setConfigLocations(String[])}, attempt first to load each location as a_class, registering a {@code BeanDefinition} if class loading is successful, and if_class loading fails (i.e. a {@code ClassNotFoundException} is raised), assume the_value is a package and attempt to scan it for annotated classes._<p>_Enables the default set of annotation configuration post processors, such that_{@code @Autowired}, {@code @Required}, and associated annotations can be used._<p>_Configuration class bean definitions are registered with generated bean definition_names unless the {@code value} attribute is provided to the stereotype annotation._@param beanFactory the bean factory to load bean definitions into_@see #register(Class...)_@see #scan(String...)_@see #setConfigLocation(String)_@see #setConfigLocations(String[])_@see AnnotatedBeanDefinitionReader_@see ClassPathBeanDefinitionScanner;@Override_	protected void loadBeanDefinitions(DefaultListableBeanFactory beanFactory) {_		AnnotatedBeanDefinitionReader reader = getAnnotatedBeanDefinitionReader(_				beanFactory)__		ClassPathBeanDefinitionScanner scanner = getClassPathBeanDefinitionScanner(_				beanFactory)__		applyBeanNameGenerator(beanFactory, reader, scanner)__		applyScopeMetadataResolver(reader, scanner)__		loadBeanDefinitions(reader, scanner)__	};register,a,link,org,springframework,beans,factory,config,bean,definition,for,any,classes,specified,by,link,register,class,and,scan,any,packages,specified,by,link,scan,string,p,for,any,values,specified,by,link,set,config,location,string,or,link,set,config,locations,string,attempt,first,to,load,each,location,as,a,class,registering,a,code,bean,definition,if,class,loading,is,successful,and,if,class,loading,fails,i,e,a,code,class,not,found,exception,is,raised,assume,the,value,is,a,package,and,attempt,to,scan,it,for,annotated,classes,p,enables,the,default,set,of,annotation,configuration,post,processors,such,that,code,autowired,code,required,and,associated,annotations,can,be,used,p,configuration,class,bean,definitions,are,registered,with,generated,bean,definition,names,unless,the,code,value,attribute,is,provided,to,the,stereotype,annotation,param,bean,factory,the,bean,factory,to,load,bean,definitions,into,see,register,class,see,scan,string,see,set,config,location,string,see,set,config,locations,string,see,annotated,bean,definition,reader,see,class,path,bean,definition,scanner;override,protected,void,load,bean,definitions,default,listable,bean,factory,bean,factory,annotated,bean,definition,reader,reader,get,annotated,bean,definition,reader,bean,factory,class,path,bean,definition,scanner,scanner,get,class,path,bean,definition,scanner,bean,factory,apply,bean,name,generator,bean,factory,reader,scanner,apply,scope,metadata,resolver,reader,scanner,load,bean,definitions,reader,scanner
AnnotationConfigReactiveWebApplicationContext -> @Override 	protected void loadBeanDefinitions(DefaultListableBeanFactory beanFactory);1517531895;Register a {@link org.springframework.beans.factory.config.BeanDefinition} for any_classes specified by {@link #register(Class...)} and scan any packages specified by_{@link #scan(String...)}._<p>_For any values specified by {@link #setConfigLocation(String)} or_{@link #setConfigLocations(String[])}, attempt first to load each location as a_class, registering a {@code BeanDefinition} if class loading is successful, and if_class loading fails (i.e. a {@code ClassNotFoundException} is raised), assume the_value is a package and attempt to scan it for annotated classes._<p>_Enables the default set of annotation configuration post processors, such that_{@code @Autowired}, {@code @Required}, and associated annotations can be used._<p>_Configuration class bean definitions are registered with generated bean definition_names unless the {@code value} attribute is provided to the stereotype annotation._@param beanFactory the bean factory to load bean definitions into_@see #register(Class...)_@see #scan(String...)_@see #setConfigLocation(String)_@see #setConfigLocations(String[])_@see AnnotatedBeanDefinitionReader_@see ClassPathBeanDefinitionScanner;@Override_	protected void loadBeanDefinitions(DefaultListableBeanFactory beanFactory) {_		AnnotatedBeanDefinitionReader reader = getAnnotatedBeanDefinitionReader(_				beanFactory)__		ClassPathBeanDefinitionScanner scanner = getClassPathBeanDefinitionScanner(_				beanFactory)__		applyBeanNameGenerator(beanFactory, reader, scanner)__		applyScopeMetadataResolver(reader, scanner)__		loadBeanDefinitions(reader, scanner)__	};register,a,link,org,springframework,beans,factory,config,bean,definition,for,any,classes,specified,by,link,register,class,and,scan,any,packages,specified,by,link,scan,string,p,for,any,values,specified,by,link,set,config,location,string,or,link,set,config,locations,string,attempt,first,to,load,each,location,as,a,class,registering,a,code,bean,definition,if,class,loading,is,successful,and,if,class,loading,fails,i,e,a,code,class,not,found,exception,is,raised,assume,the,value,is,a,package,and,attempt,to,scan,it,for,annotated,classes,p,enables,the,default,set,of,annotation,configuration,post,processors,such,that,code,autowired,code,required,and,associated,annotations,can,be,used,p,configuration,class,bean,definitions,are,registered,with,generated,bean,definition,names,unless,the,code,value,attribute,is,provided,to,the,stereotype,annotation,param,bean,factory,the,bean,factory,to,load,bean,definitions,into,see,register,class,see,scan,string,see,set,config,location,string,see,set,config,locations,string,see,annotated,bean,definition,reader,see,class,path,bean,definition,scanner;override,protected,void,load,bean,definitions,default,listable,bean,factory,bean,factory,annotated,bean,definition,reader,reader,get,annotated,bean,definition,reader,bean,factory,class,path,bean,definition,scanner,scanner,get,class,path,bean,definition,scanner,bean,factory,apply,bean,name,generator,bean,factory,reader,scanner,apply,scope,metadata,resolver,reader,scanner,load,bean,definitions,reader,scanner
AnnotationConfigReactiveWebApplicationContext -> @Override 	protected void loadBeanDefinitions(DefaultListableBeanFactory beanFactory);1518087233;Register a {@link org.springframework.beans.factory.config.BeanDefinition} for any_classes specified by {@link #register(Class...)} and scan any packages specified by_{@link #scan(String...)}._<p>_For any values specified by {@link #setConfigLocation(String)} or_{@link #setConfigLocations(String[])}, attempt first to load each location as a_class, registering a {@code BeanDefinition} if class loading is successful, and if_class loading fails (i.e. a {@code ClassNotFoundException} is raised), assume the_value is a package and attempt to scan it for annotated classes._<p>_Enables the default set of annotation configuration post processors, such that_{@code @Autowired}, {@code @Required}, and associated annotations can be used._<p>_Configuration class bean definitions are registered with generated bean definition_names unless the {@code value} attribute is provided to the stereotype annotation._@param beanFactory the bean factory to load bean definitions into_@see #register(Class...)_@see #scan(String...)_@see #setConfigLocation(String)_@see #setConfigLocations(String[])_@see AnnotatedBeanDefinitionReader_@see ClassPathBeanDefinitionScanner;@Override_	protected void loadBeanDefinitions(DefaultListableBeanFactory beanFactory) {_		AnnotatedBeanDefinitionReader reader = getAnnotatedBeanDefinitionReader(_				beanFactory)__		ClassPathBeanDefinitionScanner scanner = getClassPathBeanDefinitionScanner(_				beanFactory)__		applyBeanNameGenerator(beanFactory, reader, scanner)__		applyScopeMetadataResolver(reader, scanner)__		loadBeanDefinitions(reader, scanner)__	};register,a,link,org,springframework,beans,factory,config,bean,definition,for,any,classes,specified,by,link,register,class,and,scan,any,packages,specified,by,link,scan,string,p,for,any,values,specified,by,link,set,config,location,string,or,link,set,config,locations,string,attempt,first,to,load,each,location,as,a,class,registering,a,code,bean,definition,if,class,loading,is,successful,and,if,class,loading,fails,i,e,a,code,class,not,found,exception,is,raised,assume,the,value,is,a,package,and,attempt,to,scan,it,for,annotated,classes,p,enables,the,default,set,of,annotation,configuration,post,processors,such,that,code,autowired,code,required,and,associated,annotations,can,be,used,p,configuration,class,bean,definitions,are,registered,with,generated,bean,definition,names,unless,the,code,value,attribute,is,provided,to,the,stereotype,annotation,param,bean,factory,the,bean,factory,to,load,bean,definitions,into,see,register,class,see,scan,string,see,set,config,location,string,see,set,config,locations,string,see,annotated,bean,definition,reader,see,class,path,bean,definition,scanner;override,protected,void,load,bean,definitions,default,listable,bean,factory,bean,factory,annotated,bean,definition,reader,reader,get,annotated,bean,definition,reader,bean,factory,class,path,bean,definition,scanner,scanner,get,class,path,bean,definition,scanner,bean,factory,apply,bean,name,generator,bean,factory,reader,scanner,apply,scope,metadata,resolver,reader,scanner,load,bean,definitions,reader,scanner
AnnotationConfigReactiveWebApplicationContext -> @Override 	protected void loadBeanDefinitions(DefaultListableBeanFactory beanFactory);1519362690;Register a {@link org.springframework.beans.factory.config.BeanDefinition} for any_classes specified by {@link #register(Class...)} and scan any packages specified by_{@link #scan(String...)}._<p>_For any values specified by {@link #setConfigLocation(String)} or_{@link #setConfigLocations(String[])}, attempt first to load each location as a_class, registering a {@code BeanDefinition} if class loading is successful, and if_class loading fails (i.e. a {@code ClassNotFoundException} is raised), assume the_value is a package and attempt to scan it for annotated classes._<p>_Enables the default set of annotation configuration post processors, such that_{@code @Autowired}, {@code @Required}, and associated annotations can be used._<p>_Configuration class bean definitions are registered with generated bean definition_names unless the {@code value} attribute is provided to the stereotype annotation._@param beanFactory the bean factory to load bean definitions into_@see #register(Class...)_@see #scan(String...)_@see #setConfigLocation(String)_@see #setConfigLocations(String[])_@see AnnotatedBeanDefinitionReader_@see ClassPathBeanDefinitionScanner;@Override_	protected void loadBeanDefinitions(DefaultListableBeanFactory beanFactory) {_		AnnotatedBeanDefinitionReader reader = getAnnotatedBeanDefinitionReader(_				beanFactory)__		ClassPathBeanDefinitionScanner scanner = getClassPathBeanDefinitionScanner(_				beanFactory)__		applyBeanNameGenerator(beanFactory, reader, scanner)__		applyScopeMetadataResolver(reader, scanner)__		loadBeanDefinitions(reader, scanner)__	};register,a,link,org,springframework,beans,factory,config,bean,definition,for,any,classes,specified,by,link,register,class,and,scan,any,packages,specified,by,link,scan,string,p,for,any,values,specified,by,link,set,config,location,string,or,link,set,config,locations,string,attempt,first,to,load,each,location,as,a,class,registering,a,code,bean,definition,if,class,loading,is,successful,and,if,class,loading,fails,i,e,a,code,class,not,found,exception,is,raised,assume,the,value,is,a,package,and,attempt,to,scan,it,for,annotated,classes,p,enables,the,default,set,of,annotation,configuration,post,processors,such,that,code,autowired,code,required,and,associated,annotations,can,be,used,p,configuration,class,bean,definitions,are,registered,with,generated,bean,definition,names,unless,the,code,value,attribute,is,provided,to,the,stereotype,annotation,param,bean,factory,the,bean,factory,to,load,bean,definitions,into,see,register,class,see,scan,string,see,set,config,location,string,see,set,config,locations,string,see,annotated,bean,definition,reader,see,class,path,bean,definition,scanner;override,protected,void,load,bean,definitions,default,listable,bean,factory,bean,factory,annotated,bean,definition,reader,reader,get,annotated,bean,definition,reader,bean,factory,class,path,bean,definition,scanner,scanner,get,class,path,bean,definition,scanner,bean,factory,apply,bean,name,generator,bean,factory,reader,scanner,apply,scope,metadata,resolver,reader,scanner,load,bean,definitions,reader,scanner
AnnotationConfigReactiveWebApplicationContext -> protected BeanNameGenerator getBeanNameGenerator();1509761243;Return the custom {@link BeanNameGenerator} for use with_{@link AnnotatedBeanDefinitionReader} and/or_{@link ClassPathBeanDefinitionScanner}, if any._@return the bean name generator;protected BeanNameGenerator getBeanNameGenerator() {_		return this.beanNameGenerator__	};return,the,custom,link,bean,name,generator,for,use,with,link,annotated,bean,definition,reader,and,or,link,class,path,bean,definition,scanner,if,any,return,the,bean,name,generator;protected,bean,name,generator,get,bean,name,generator,return,this,bean,name,generator
AnnotationConfigReactiveWebApplicationContext -> protected BeanNameGenerator getBeanNameGenerator();1511949058;Return the custom {@link BeanNameGenerator} for use with_{@link AnnotatedBeanDefinitionReader} and/or_{@link ClassPathBeanDefinitionScanner}, if any._@return the bean name generator;protected BeanNameGenerator getBeanNameGenerator() {_		return this.beanNameGenerator__	};return,the,custom,link,bean,name,generator,for,use,with,link,annotated,bean,definition,reader,and,or,link,class,path,bean,definition,scanner,if,any,return,the,bean,name,generator;protected,bean,name,generator,get,bean,name,generator,return,this,bean,name,generator
AnnotationConfigReactiveWebApplicationContext -> protected BeanNameGenerator getBeanNameGenerator();1517531895;Return the custom {@link BeanNameGenerator} for use with_{@link AnnotatedBeanDefinitionReader} and/or_{@link ClassPathBeanDefinitionScanner}, if any._@return the bean name generator;protected BeanNameGenerator getBeanNameGenerator() {_		return this.beanNameGenerator__	};return,the,custom,link,bean,name,generator,for,use,with,link,annotated,bean,definition,reader,and,or,link,class,path,bean,definition,scanner,if,any,return,the,bean,name,generator;protected,bean,name,generator,get,bean,name,generator,return,this,bean,name,generator
AnnotationConfigReactiveWebApplicationContext -> protected BeanNameGenerator getBeanNameGenerator();1518087233;Return the custom {@link BeanNameGenerator} for use with_{@link AnnotatedBeanDefinitionReader} and/or_{@link ClassPathBeanDefinitionScanner}, if any._@return the bean name generator;protected BeanNameGenerator getBeanNameGenerator() {_		return this.beanNameGenerator__	};return,the,custom,link,bean,name,generator,for,use,with,link,annotated,bean,definition,reader,and,or,link,class,path,bean,definition,scanner,if,any,return,the,bean,name,generator;protected,bean,name,generator,get,bean,name,generator,return,this,bean,name,generator
AnnotationConfigReactiveWebApplicationContext -> protected BeanNameGenerator getBeanNameGenerator();1519362690;Return the custom {@link BeanNameGenerator} for use with_{@link AnnotatedBeanDefinitionReader} and/or_{@link ClassPathBeanDefinitionScanner}, if any._@return the bean name generator;protected BeanNameGenerator getBeanNameGenerator() {_		return this.beanNameGenerator__	};return,the,custom,link,bean,name,generator,for,use,with,link,annotated,bean,definition,reader,and,or,link,class,path,bean,definition,scanner,if,any,return,the,bean,name,generator;protected,bean,name,generator,get,bean,name,generator,return,this,bean,name,generator
AnnotationConfigReactiveWebApplicationContext -> @Override 	public void register(Class<?>... annotatedClasses);1509761243;Register one or more annotated classes to be processed._<p>_Note that {@link #refresh()} must be called in order for the context to fully_process the new classes._@param annotatedClasses one or more annotated classes, e.g._{@link org.springframework.context.annotation.Configuration @Configuration} classes_@see #scan(String...)_@see #loadBeanDefinitions(DefaultListableBeanFactory)_@see #setConfigLocation(String)_@see #refresh();@Override_	public void register(Class<?>... annotatedClasses) {_		Assert.notEmpty(annotatedClasses,_				"At least one annotated class must be specified")__		this.annotatedClasses.addAll(Arrays.asList(annotatedClasses))__	};register,one,or,more,annotated,classes,to,be,processed,p,note,that,link,refresh,must,be,called,in,order,for,the,context,to,fully,process,the,new,classes,param,annotated,classes,one,or,more,annotated,classes,e,g,link,org,springframework,context,annotation,configuration,configuration,classes,see,scan,string,see,load,bean,definitions,default,listable,bean,factory,see,set,config,location,string,see,refresh;override,public,void,register,class,annotated,classes,assert,not,empty,annotated,classes,at,least,one,annotated,class,must,be,specified,this,annotated,classes,add,all,arrays,as,list,annotated,classes
AnnotationConfigReactiveWebApplicationContext -> @Override 	public void register(Class<?>... annotatedClasses);1511949058;Register one or more annotated classes to be processed._<p>_Note that {@link #refresh()} must be called in order for the context to fully_process the new classes._@param annotatedClasses one or more annotated classes, e.g._{@link org.springframework.context.annotation.Configuration @Configuration} classes_@see #scan(String...)_@see #loadBeanDefinitions(DefaultListableBeanFactory)_@see #setConfigLocation(String)_@see #refresh();@Override_	public void register(Class<?>... annotatedClasses) {_		Assert.notEmpty(annotatedClasses,_				"At least one annotated class must be specified")__		this.annotatedClasses.addAll(Arrays.asList(annotatedClasses))__	};register,one,or,more,annotated,classes,to,be,processed,p,note,that,link,refresh,must,be,called,in,order,for,the,context,to,fully,process,the,new,classes,param,annotated,classes,one,or,more,annotated,classes,e,g,link,org,springframework,context,annotation,configuration,configuration,classes,see,scan,string,see,load,bean,definitions,default,listable,bean,factory,see,set,config,location,string,see,refresh;override,public,void,register,class,annotated,classes,assert,not,empty,annotated,classes,at,least,one,annotated,class,must,be,specified,this,annotated,classes,add,all,arrays,as,list,annotated,classes
AnnotationConfigReactiveWebApplicationContext -> @Override 	public void register(Class<?>... annotatedClasses);1517531895;Register one or more annotated classes to be processed._<p>_Note that {@link #refresh()} must be called in order for the context to fully_process the new classes._@param annotatedClasses one or more annotated classes, e.g._{@link org.springframework.context.annotation.Configuration @Configuration} classes_@see #scan(String...)_@see #loadBeanDefinitions(DefaultListableBeanFactory)_@see #setConfigLocation(String)_@see #refresh();@Override_	public void register(Class<?>... annotatedClasses) {_		Assert.notEmpty(annotatedClasses,_				"At least one annotated class must be specified")__		this.annotatedClasses.addAll(Arrays.asList(annotatedClasses))__	};register,one,or,more,annotated,classes,to,be,processed,p,note,that,link,refresh,must,be,called,in,order,for,the,context,to,fully,process,the,new,classes,param,annotated,classes,one,or,more,annotated,classes,e,g,link,org,springframework,context,annotation,configuration,configuration,classes,see,scan,string,see,load,bean,definitions,default,listable,bean,factory,see,set,config,location,string,see,refresh;override,public,void,register,class,annotated,classes,assert,not,empty,annotated,classes,at,least,one,annotated,class,must,be,specified,this,annotated,classes,add,all,arrays,as,list,annotated,classes
AnnotationConfigReactiveWebApplicationContext -> @Override 	public void register(Class<?>... annotatedClasses);1518087233;Register one or more annotated classes to be processed._<p>_Note that {@link #refresh()} must be called in order for the context to fully_process the new classes._@param annotatedClasses one or more annotated classes, e.g._{@link org.springframework.context.annotation.Configuration @Configuration} classes_@see #scan(String...)_@see #loadBeanDefinitions(DefaultListableBeanFactory)_@see #setConfigLocation(String)_@see #refresh();@Override_	public void register(Class<?>... annotatedClasses) {_		Assert.notEmpty(annotatedClasses,_				"At least one annotated class must be specified")__		this.annotatedClasses.addAll(Arrays.asList(annotatedClasses))__	};register,one,or,more,annotated,classes,to,be,processed,p,note,that,link,refresh,must,be,called,in,order,for,the,context,to,fully,process,the,new,classes,param,annotated,classes,one,or,more,annotated,classes,e,g,link,org,springframework,context,annotation,configuration,configuration,classes,see,scan,string,see,load,bean,definitions,default,listable,bean,factory,see,set,config,location,string,see,refresh;override,public,void,register,class,annotated,classes,assert,not,empty,annotated,classes,at,least,one,annotated,class,must,be,specified,this,annotated,classes,add,all,arrays,as,list,annotated,classes
AnnotationConfigReactiveWebApplicationContext -> @Override 	public void register(Class<?>... annotatedClasses);1519362690;Register one or more annotated classes to be processed._<p>_Note that {@link #refresh()} must be called in order for the context to fully_process the new classes._@param annotatedClasses one or more annotated classes, e.g._{@link org.springframework.context.annotation.Configuration @Configuration} classes_@see #scan(String...)_@see #loadBeanDefinitions(DefaultListableBeanFactory)_@see #setConfigLocation(String)_@see #refresh();@Override_	public void register(Class<?>... annotatedClasses) {_		Assert.notEmpty(annotatedClasses,_				"At least one annotated class must be specified")__		this.annotatedClasses.addAll(Arrays.asList(annotatedClasses))__	};register,one,or,more,annotated,classes,to,be,processed,p,note,that,link,refresh,must,be,called,in,order,for,the,context,to,fully,process,the,new,classes,param,annotated,classes,one,or,more,annotated,classes,e,g,link,org,springframework,context,annotation,configuration,configuration,classes,see,scan,string,see,load,bean,definitions,default,listable,bean,factory,see,set,config,location,string,see,refresh;override,public,void,register,class,annotated,classes,assert,not,empty,annotated,classes,at,least,one,annotated,class,must,be,specified,this,annotated,classes,add,all,arrays,as,list,annotated,classes
