commented;modifiers;parameterAmount;loc;comment;code
true;default;0;4;/**  * Return an iterator for the {@link ConfigurationPropertyName names} managed by this  * source.  * @return an iterator (never {@code null})  */ ;/**  * Return an iterator for the {@link ConfigurationPropertyName names} managed by this  * source.  * @return an iterator (never {@code null})  */ @Override default Iterator<ConfigurationPropertyName> iterator() {     return stream().iterator(). }
true;;0;1;/**  * Returns a sequential {@code Stream} for the {@link ConfigurationPropertyName names}  * managed by this source.  * @return a stream of names (never {@code null})  */ ;/**  * Returns a sequential {@code Stream} for the {@link ConfigurationPropertyName names}  * managed by this source.  * @return a stream of names (never {@code null})  */ Stream<ConfigurationPropertyName> stream().
false;default;1;5;;@Override default ConfigurationPropertyState containsDescendantOf(ConfigurationPropertyName name) {     return ConfigurationPropertyState.search(this, name::isAncestorOf). }
false;default;1;5;;@Override default IterableConfigurationPropertySource filter(Predicate<ConfigurationPropertyName> filter) {     return new FilteredIterableConfigurationPropertiesSource(this, filter). }
false;default;1;5;;@Override default IterableConfigurationPropertySource withAliases(ConfigurationPropertyNameAliases aliases) {     return new AliasedIterableConfigurationPropertySource(this, aliases). }
