# id;timestamp;commentText;codeText;commentWords;codeWords
SpringConfigurationPropertySource -> public static SpringConfigurationPropertySource from(PropertySource<?> source);1507173536;Create a new {@link SpringConfigurationPropertySource} for the specified_{@link PropertySource}._@param source the source Spring {@link PropertySource}_@return a {@link SpringConfigurationPropertySource} or_{@link SpringIterableConfigurationPropertySource} instance;public static SpringConfigurationPropertySource from(PropertySource<?> source) {_		Assert.notNull(source, "Source must not be null")__		PropertyMapper mapper = getPropertyMapper(source)__		if (isFullEnumerable(source)) {_			return new SpringIterableConfigurationPropertySource(_					(EnumerablePropertySource<?>) source, mapper)__		}_		return new SpringConfigurationPropertySource(source, mapper,_				getContainsDescendantOfMethod(source))__	};create,a,new,link,spring,configuration,property,source,for,the,specified,link,property,source,param,source,the,source,spring,link,property,source,return,a,link,spring,configuration,property,source,or,link,spring,iterable,configuration,property,source,instance;public,static,spring,configuration,property,source,from,property,source,source,assert,not,null,source,source,must,not,be,null,property,mapper,mapper,get,property,mapper,source,if,is,full,enumerable,source,return,new,spring,iterable,configuration,property,source,enumerable,property,source,source,mapper,return,new,spring,configuration,property,source,source,mapper,get,contains,descendant,of,method,source
SpringConfigurationPropertySource -> public static SpringConfigurationPropertySource from(PropertySource<?> source);1507746286;Create a new {@link SpringConfigurationPropertySource} for the specified_{@link PropertySource}._@param source the source Spring {@link PropertySource}_@return a {@link SpringConfigurationPropertySource} or_{@link SpringIterableConfigurationPropertySource} instance;public static SpringConfigurationPropertySource from(PropertySource<?> source) {_		Assert.notNull(source, "Source must not be null")__		PropertyMapper mapper = getPropertyMapper(source)__		if (isFullEnumerable(source)) {_			return new SpringIterableConfigurationPropertySource(_					(EnumerablePropertySource<?>) source, mapper)__		}_		return new SpringConfigurationPropertySource(source, mapper,_				getContainsDescendantOfForSource(source))__	};create,a,new,link,spring,configuration,property,source,for,the,specified,link,property,source,param,source,the,source,spring,link,property,source,return,a,link,spring,configuration,property,source,or,link,spring,iterable,configuration,property,source,instance;public,static,spring,configuration,property,source,from,property,source,source,assert,not,null,source,source,must,not,be,null,property,mapper,mapper,get,property,mapper,source,if,is,full,enumerable,source,return,new,spring,iterable,configuration,property,source,enumerable,property,source,source,mapper,return,new,spring,configuration,property,source,source,mapper,get,contains,descendant,of,for,source,source
SpringConfigurationPropertySource -> public static SpringConfigurationPropertySource from(PropertySource<?> source);1510002745;Create a new {@link SpringConfigurationPropertySource} for the specified_{@link PropertySource}._@param source the source Spring {@link PropertySource}_@return a {@link SpringConfigurationPropertySource} or_{@link SpringIterableConfigurationPropertySource} instance;public static SpringConfigurationPropertySource from(PropertySource<?> source) {_		Assert.notNull(source, "Source must not be null")__		PropertyMapper mapper = getPropertyMapper(source)__		if (isFullEnumerable(source)) {_			return new SpringIterableConfigurationPropertySource(_					(EnumerablePropertySource<?>) source, mapper)__		}_		return new SpringConfigurationPropertySource(source, mapper,_				getContainsDescendantOfForSource(source))__	};create,a,new,link,spring,configuration,property,source,for,the,specified,link,property,source,param,source,the,source,spring,link,property,source,return,a,link,spring,configuration,property,source,or,link,spring,iterable,configuration,property,source,instance;public,static,spring,configuration,property,source,from,property,source,source,assert,not,null,source,source,must,not,be,null,property,mapper,mapper,get,property,mapper,source,if,is,full,enumerable,source,return,new,spring,iterable,configuration,property,source,enumerable,property,source,source,mapper,return,new,spring,configuration,property,source,source,mapper,get,contains,descendant,of,for,source,source
SpringConfigurationPropertySource -> public static SpringConfigurationPropertySource from(PropertySource<?> source);1513973712;Create a new {@link SpringConfigurationPropertySource} for the specified_{@link PropertySource}._@param source the source Spring {@link PropertySource}_@return a {@link SpringConfigurationPropertySource} or_{@link SpringIterableConfigurationPropertySource} instance;public static SpringConfigurationPropertySource from(PropertySource<?> source) {_		Assert.notNull(source, "Source must not be null")__		PropertyMapper mapper = getPropertyMapper(source)__		if (isFullEnumerable(source)) {_			return new SpringIterableConfigurationPropertySource(_					(EnumerablePropertySource<?>) source, mapper)__		}_		return new SpringConfigurationPropertySource(source, mapper,_				getContainsDescendantOfForSource(source))__	};create,a,new,link,spring,configuration,property,source,for,the,specified,link,property,source,param,source,the,source,spring,link,property,source,return,a,link,spring,configuration,property,source,or,link,spring,iterable,configuration,property,source,instance;public,static,spring,configuration,property,source,from,property,source,source,assert,not,null,source,source,must,not,be,null,property,mapper,mapper,get,property,mapper,source,if,is,full,enumerable,source,return,new,spring,iterable,configuration,property,source,enumerable,property,source,source,mapper,return,new,spring,configuration,property,source,source,mapper,get,contains,descendant,of,for,source,source
SpringConfigurationPropertySource -> public static SpringConfigurationPropertySource from(PropertySource<?> source);1514005058;Create a new {@link SpringConfigurationPropertySource} for the specified_{@link PropertySource}._@param source the source Spring {@link PropertySource}_@return a {@link SpringConfigurationPropertySource} or_{@link SpringIterableConfigurationPropertySource} instance;public static SpringConfigurationPropertySource from(PropertySource<?> source) {_		Assert.notNull(source, "Source must not be null")__		PropertyMapper mapper = getPropertyMapper(source)__		if (isFullEnumerable(source)) {_			return new SpringIterableConfigurationPropertySource(_					(EnumerablePropertySource<?>) source, mapper)__		}_		return new SpringConfigurationPropertySource(source, mapper,_				getContainsDescendantOfForSource(source))__	};create,a,new,link,spring,configuration,property,source,for,the,specified,link,property,source,param,source,the,source,spring,link,property,source,return,a,link,spring,configuration,property,source,or,link,spring,iterable,configuration,property,source,instance;public,static,spring,configuration,property,source,from,property,source,source,assert,not,null,source,source,must,not,be,null,property,mapper,mapper,get,property,mapper,source,if,is,full,enumerable,source,return,new,spring,iterable,configuration,property,source,enumerable,property,source,source,mapper,return,new,spring,configuration,property,source,source,mapper,get,contains,descendant,of,for,source,source
SpringConfigurationPropertySource -> public static SpringConfigurationPropertySource from(PropertySource<?> source);1522791426;Create a new {@link SpringConfigurationPropertySource} for the specified_{@link PropertySource}._@param source the source Spring {@link PropertySource}_@return a {@link SpringConfigurationPropertySource} or_{@link SpringIterableConfigurationPropertySource} instance;public static SpringConfigurationPropertySource from(PropertySource<?> source) {_		Assert.notNull(source, "Source must not be null")__		PropertyMapper mapper = getPropertyMapper(source)__		if (isFullEnumerable(source)) {_			return new SpringIterableConfigurationPropertySource(_					(EnumerablePropertySource<?>) source, mapper)__		}_		return new SpringConfigurationPropertySource(source, mapper,_				getContainsDescendantOfForSource(source))__	};create,a,new,link,spring,configuration,property,source,for,the,specified,link,property,source,param,source,the,source,spring,link,property,source,return,a,link,spring,configuration,property,source,or,link,spring,iterable,configuration,property,source,instance;public,static,spring,configuration,property,source,from,property,source,source,assert,not,null,source,source,must,not,be,null,property,mapper,mapper,get,property,mapper,source,if,is,full,enumerable,source,return,new,spring,iterable,configuration,property,source,enumerable,property,source,source,mapper,return,new,spring,configuration,property,source,source,mapper,get,contains,descendant,of,for,source,source
SpringConfigurationPropertySource -> public static SpringConfigurationPropertySource from(PropertySource<?> source);1522797144;Create a new {@link SpringConfigurationPropertySource} for the specified_{@link PropertySource}._@param source the source Spring {@link PropertySource}_@return a {@link SpringConfigurationPropertySource} or_{@link SpringIterableConfigurationPropertySource} instance;public static SpringConfigurationPropertySource from(PropertySource<?> source) {_		Assert.notNull(source, "Source must not be null")__		PropertyMapper mapper = getPropertyMapper(source)__		if (isFullEnumerable(source)) {_			return new SpringIterableConfigurationPropertySource(_					(EnumerablePropertySource<?>) source, mapper)__		}_		return new SpringConfigurationPropertySource(source, mapper,_				getContainsDescendantOfForSource(source))__	};create,a,new,link,spring,configuration,property,source,for,the,specified,link,property,source,param,source,the,source,spring,link,property,source,return,a,link,spring,configuration,property,source,or,link,spring,iterable,configuration,property,source,instance;public,static,spring,configuration,property,source,from,property,source,source,assert,not,null,source,source,must,not,be,null,property,mapper,mapper,get,property,mapper,source,if,is,full,enumerable,source,return,new,spring,iterable,configuration,property,source,enumerable,property,source,source,mapper,return,new,spring,configuration,property,source,source,mapper,get,contains,descendant,of,for,source,source
SpringConfigurationPropertySource -> public static SpringConfigurationPropertySource from(PropertySource<?> source);1522890085;Create a new {@link SpringConfigurationPropertySource} for the specified_{@link PropertySource}._@param source the source Spring {@link PropertySource}_@return a {@link SpringConfigurationPropertySource} or_{@link SpringIterableConfigurationPropertySource} instance;public static SpringConfigurationPropertySource from(PropertySource<?> source) {_		Assert.notNull(source, "Source must not be null")__		PropertyMapper mapper = getPropertyMapper(source)__		if (isFullEnumerable(source)) {_			return new SpringIterableConfigurationPropertySource(_					(EnumerablePropertySource<?>) source, mapper)__		}_		return new SpringConfigurationPropertySource(source, mapper,_				getContainsDescendantOfForSource(source))__	};create,a,new,link,spring,configuration,property,source,for,the,specified,link,property,source,param,source,the,source,spring,link,property,source,return,a,link,spring,configuration,property,source,or,link,spring,iterable,configuration,property,source,instance;public,static,spring,configuration,property,source,from,property,source,source,assert,not,null,source,source,must,not,be,null,property,mapper,mapper,get,property,mapper,source,if,is,full,enumerable,source,return,new,spring,iterable,configuration,property,source,enumerable,property,source,source,mapper,return,new,spring,configuration,property,source,source,mapper,get,contains,descendant,of,for,source,source
SpringConfigurationPropertySource -> public static SpringConfigurationPropertySource from(PropertySource<?> source);1532738143;Create a new {@link SpringConfigurationPropertySource} for the specified_{@link PropertySource}._@param source the source Spring {@link PropertySource}_@return a {@link SpringConfigurationPropertySource} or_{@link SpringIterableConfigurationPropertySource} instance;public static SpringConfigurationPropertySource from(PropertySource<?> source) {_		Assert.notNull(source, "Source must not be null")__		PropertyMapper mapper = getPropertyMapper(source)__		if (isFullEnumerable(source)) {_			return new SpringIterableConfigurationPropertySource(_					(EnumerablePropertySource<?>) source, mapper)__		}_		return new SpringConfigurationPropertySource(source, mapper,_				getContainsDescendantOfForSource(source))__	};create,a,new,link,spring,configuration,property,source,for,the,specified,link,property,source,param,source,the,source,spring,link,property,source,return,a,link,spring,configuration,property,source,or,link,spring,iterable,configuration,property,source,instance;public,static,spring,configuration,property,source,from,property,source,source,assert,not,null,source,source,must,not,be,null,property,mapper,mapper,get,property,mapper,source,if,is,full,enumerable,source,return,new,spring,iterable,configuration,property,source,enumerable,property,source,source,mapper,return,new,spring,configuration,property,source,source,mapper,get,contains,descendant,of,for,source,source
SpringConfigurationPropertySource -> public static SpringConfigurationPropertySource from(PropertySource<?> source);1537507278;Create a new {@link SpringConfigurationPropertySource} for the specified_{@link PropertySource}._@param source the source Spring {@link PropertySource}_@return a {@link SpringConfigurationPropertySource} or_{@link SpringIterableConfigurationPropertySource} instance;public static SpringConfigurationPropertySource from(PropertySource<?> source) {_		Assert.notNull(source, "Source must not be null")__		PropertyMapper mapper = getPropertyMapper(source)__		if (isFullEnumerable(source)) {_			return new SpringIterableConfigurationPropertySource(_					(EnumerablePropertySource<?>) source, mapper)__		}_		return new SpringConfigurationPropertySource(source, mapper,_				getContainsDescendantOfForSource(source))__	};create,a,new,link,spring,configuration,property,source,for,the,specified,link,property,source,param,source,the,source,spring,link,property,source,return,a,link,spring,configuration,property,source,or,link,spring,iterable,configuration,property,source,instance;public,static,spring,configuration,property,source,from,property,source,source,assert,not,null,source,source,must,not,be,null,property,mapper,mapper,get,property,mapper,source,if,is,full,enumerable,source,return,new,spring,iterable,configuration,property,source,enumerable,property,source,source,mapper,return,new,spring,configuration,property,source,source,mapper,get,contains,descendant,of,for,source,source
SpringConfigurationPropertySource -> SpringConfigurationPropertySource(PropertySource<?> propertySource, 			PropertyMapper mapper, 			Function<ConfigurationPropertyName, ConfigurationPropertyState> containsDescendantOf);1507746286;Create a new {@link SpringConfigurationPropertySource} implementation._@param propertySource the source property source_@param mapper the property mapper_@param containsDescendantOf function used to implement_{@link #containsDescendantOf(ConfigurationPropertyName)} (may be {@code null});SpringConfigurationPropertySource(PropertySource<?> propertySource,_			PropertyMapper mapper,_			Function<ConfigurationPropertyName, ConfigurationPropertyState> containsDescendantOf) {_		Assert.notNull(propertySource, "PropertySource must not be null")__		Assert.notNull(mapper, "Mapper must not be null")__		this.propertySource = propertySource__		this.mapper = new ExceptionSwallowingPropertyMapper(mapper)__		this.containsDescendantOf = (containsDescendantOf != null ? containsDescendantOf_				: (n) -> ConfigurationPropertyState.UNKNOWN)__	};create,a,new,link,spring,configuration,property,source,implementation,param,property,source,the,source,property,source,param,mapper,the,property,mapper,param,contains,descendant,of,function,used,to,implement,link,contains,descendant,of,configuration,property,name,may,be,code,null;spring,configuration,property,source,property,source,property,source,property,mapper,mapper,function,configuration,property,name,configuration,property,state,contains,descendant,of,assert,not,null,property,source,property,source,must,not,be,null,assert,not,null,mapper,mapper,must,not,be,null,this,property,source,property,source,this,mapper,new,exception,swallowing,property,mapper,mapper,this,contains,descendant,of,contains,descendant,of,null,contains,descendant,of,n,configuration,property,state,unknown
SpringConfigurationPropertySource -> SpringConfigurationPropertySource(PropertySource<?> propertySource, 			PropertyMapper mapper, 			Function<ConfigurationPropertyName, ConfigurationPropertyState> containsDescendantOf);1510002745;Create a new {@link SpringConfigurationPropertySource} implementation._@param propertySource the source property source_@param mapper the property mapper_@param containsDescendantOf function used to implement_{@link #containsDescendantOf(ConfigurationPropertyName)} (may be {@code null});SpringConfigurationPropertySource(PropertySource<?> propertySource,_			PropertyMapper mapper,_			Function<ConfigurationPropertyName, ConfigurationPropertyState> containsDescendantOf) {_		Assert.notNull(propertySource, "PropertySource must not be null")__		Assert.notNull(mapper, "Mapper must not be null")__		this.propertySource = propertySource__		this.mapper = new ExceptionSwallowingPropertyMapper(mapper)__		this.containsDescendantOf = (containsDescendantOf != null ? containsDescendantOf_				: (n) -> ConfigurationPropertyState.UNKNOWN)__	};create,a,new,link,spring,configuration,property,source,implementation,param,property,source,the,source,property,source,param,mapper,the,property,mapper,param,contains,descendant,of,function,used,to,implement,link,contains,descendant,of,configuration,property,name,may,be,code,null;spring,configuration,property,source,property,source,property,source,property,mapper,mapper,function,configuration,property,name,configuration,property,state,contains,descendant,of,assert,not,null,property,source,property,source,must,not,be,null,assert,not,null,mapper,mapper,must,not,be,null,this,property,source,property,source,this,mapper,new,exception,swallowing,property,mapper,mapper,this,contains,descendant,of,contains,descendant,of,null,contains,descendant,of,n,configuration,property,state,unknown
SpringConfigurationPropertySource -> SpringConfigurationPropertySource(PropertySource<?> propertySource, 			PropertyMapper mapper, 			Function<ConfigurationPropertyName, ConfigurationPropertyState> containsDescendantOf);1513973712;Create a new {@link SpringConfigurationPropertySource} implementation._@param propertySource the source property source_@param mapper the property mapper_@param containsDescendantOf function used to implement_{@link #containsDescendantOf(ConfigurationPropertyName)} (may be {@code null});SpringConfigurationPropertySource(PropertySource<?> propertySource,_			PropertyMapper mapper,_			Function<ConfigurationPropertyName, ConfigurationPropertyState> containsDescendantOf) {_		Assert.notNull(propertySource, "PropertySource must not be null")__		Assert.notNull(mapper, "Mapper must not be null")__		this.propertySource = propertySource__		this.mapper = new ExceptionSwallowingPropertyMapper(mapper)__		this.containsDescendantOf = (containsDescendantOf != null ? containsDescendantOf_				: (n) -> ConfigurationPropertyState.UNKNOWN)__	};create,a,new,link,spring,configuration,property,source,implementation,param,property,source,the,source,property,source,param,mapper,the,property,mapper,param,contains,descendant,of,function,used,to,implement,link,contains,descendant,of,configuration,property,name,may,be,code,null;spring,configuration,property,source,property,source,property,source,property,mapper,mapper,function,configuration,property,name,configuration,property,state,contains,descendant,of,assert,not,null,property,source,property,source,must,not,be,null,assert,not,null,mapper,mapper,must,not,be,null,this,property,source,property,source,this,mapper,new,exception,swallowing,property,mapper,mapper,this,contains,descendant,of,contains,descendant,of,null,contains,descendant,of,n,configuration,property,state,unknown
SpringConfigurationPropertySource -> SpringConfigurationPropertySource(PropertySource<?> propertySource, 			PropertyMapper mapper, 			Function<ConfigurationPropertyName, ConfigurationPropertyState> containsDescendantOf);1514005058;Create a new {@link SpringConfigurationPropertySource} implementation._@param propertySource the source property source_@param mapper the property mapper_@param containsDescendantOf function used to implement_{@link #containsDescendantOf(ConfigurationPropertyName)} (may be {@code null});SpringConfigurationPropertySource(PropertySource<?> propertySource,_			PropertyMapper mapper,_			Function<ConfigurationPropertyName, ConfigurationPropertyState> containsDescendantOf) {_		Assert.notNull(propertySource, "PropertySource must not be null")__		Assert.notNull(mapper, "Mapper must not be null")__		this.propertySource = propertySource__		this.mapper = new ExceptionSwallowingPropertyMapper(mapper)__		this.containsDescendantOf = (containsDescendantOf != null ? containsDescendantOf_				: (n) -> ConfigurationPropertyState.UNKNOWN)__	};create,a,new,link,spring,configuration,property,source,implementation,param,property,source,the,source,property,source,param,mapper,the,property,mapper,param,contains,descendant,of,function,used,to,implement,link,contains,descendant,of,configuration,property,name,may,be,code,null;spring,configuration,property,source,property,source,property,source,property,mapper,mapper,function,configuration,property,name,configuration,property,state,contains,descendant,of,assert,not,null,property,source,property,source,must,not,be,null,assert,not,null,mapper,mapper,must,not,be,null,this,property,source,property,source,this,mapper,new,exception,swallowing,property,mapper,mapper,this,contains,descendant,of,contains,descendant,of,null,contains,descendant,of,n,configuration,property,state,unknown
SpringConfigurationPropertySource -> SpringConfigurationPropertySource(PropertySource<?> propertySource, 			PropertyMapper mapper, 			Function<ConfigurationPropertyName, ConfigurationPropertyState> containsDescendantOf);1522791426;Create a new {@link SpringConfigurationPropertySource} implementation._@param propertySource the source property source_@param mapper the property mapper_@param containsDescendantOf function used to implement_{@link #containsDescendantOf(ConfigurationPropertyName)} (may be {@code null});SpringConfigurationPropertySource(PropertySource<?> propertySource,_			PropertyMapper mapper,_			Function<ConfigurationPropertyName, ConfigurationPropertyState> containsDescendantOf) {_		Assert.notNull(propertySource, "PropertySource must not be null")__		Assert.notNull(mapper, "Mapper must not be null")__		this.propertySource = propertySource__		this.mapper = mapper__		this.containsDescendantOf = (containsDescendantOf != null ? containsDescendantOf_				: (n) -> ConfigurationPropertyState.UNKNOWN)__	};create,a,new,link,spring,configuration,property,source,implementation,param,property,source,the,source,property,source,param,mapper,the,property,mapper,param,contains,descendant,of,function,used,to,implement,link,contains,descendant,of,configuration,property,name,may,be,code,null;spring,configuration,property,source,property,source,property,source,property,mapper,mapper,function,configuration,property,name,configuration,property,state,contains,descendant,of,assert,not,null,property,source,property,source,must,not,be,null,assert,not,null,mapper,mapper,must,not,be,null,this,property,source,property,source,this,mapper,mapper,this,contains,descendant,of,contains,descendant,of,null,contains,descendant,of,n,configuration,property,state,unknown
SpringConfigurationPropertySource -> SpringConfigurationPropertySource(PropertySource<?> propertySource, 			PropertyMapper mapper, 			Function<ConfigurationPropertyName, ConfigurationPropertyState> containsDescendantOf);1522797144;Create a new {@link SpringConfigurationPropertySource} implementation._@param propertySource the source property source_@param mapper the property mapper_@param containsDescendantOf function used to implement_{@link #containsDescendantOf(ConfigurationPropertyName)} (may be {@code null});SpringConfigurationPropertySource(PropertySource<?> propertySource,_			PropertyMapper mapper,_			Function<ConfigurationPropertyName, ConfigurationPropertyState> containsDescendantOf) {_		Assert.notNull(propertySource, "PropertySource must not be null")__		Assert.notNull(mapper, "Mapper must not be null")__		this.propertySource = propertySource__		this.mapper = (mapper instanceof DelegatingPropertyMapper ? mapper_				: new DelegatingPropertyMapper(mapper))__		this.containsDescendantOf = (containsDescendantOf != null ? containsDescendantOf_				: (n) -> ConfigurationPropertyState.UNKNOWN)__	};create,a,new,link,spring,configuration,property,source,implementation,param,property,source,the,source,property,source,param,mapper,the,property,mapper,param,contains,descendant,of,function,used,to,implement,link,contains,descendant,of,configuration,property,name,may,be,code,null;spring,configuration,property,source,property,source,property,source,property,mapper,mapper,function,configuration,property,name,configuration,property,state,contains,descendant,of,assert,not,null,property,source,property,source,must,not,be,null,assert,not,null,mapper,mapper,must,not,be,null,this,property,source,property,source,this,mapper,mapper,instanceof,delegating,property,mapper,mapper,new,delegating,property,mapper,mapper,this,contains,descendant,of,contains,descendant,of,null,contains,descendant,of,n,configuration,property,state,unknown
SpringConfigurationPropertySource -> SpringConfigurationPropertySource(PropertySource<?> propertySource, 			PropertyMapper mapper, 			Function<ConfigurationPropertyName, ConfigurationPropertyState> containsDescendantOf);1522890085;Create a new {@link SpringConfigurationPropertySource} implementation._@param propertySource the source property source_@param mapper the property mapper_@param containsDescendantOf function used to implement_{@link #containsDescendantOf(ConfigurationPropertyName)} (may be {@code null});SpringConfigurationPropertySource(PropertySource<?> propertySource,_			PropertyMapper mapper,_			Function<ConfigurationPropertyName, ConfigurationPropertyState> containsDescendantOf) {_		Assert.notNull(propertySource, "PropertySource must not be null")__		Assert.notNull(mapper, "Mapper must not be null")__		this.propertySource = propertySource__		this.mapper = (mapper instanceof DelegatingPropertyMapper ? mapper_				: new DelegatingPropertyMapper(mapper))__		this.containsDescendantOf = (containsDescendantOf != null ? containsDescendantOf_				: (n) -> ConfigurationPropertyState.UNKNOWN)__	};create,a,new,link,spring,configuration,property,source,implementation,param,property,source,the,source,property,source,param,mapper,the,property,mapper,param,contains,descendant,of,function,used,to,implement,link,contains,descendant,of,configuration,property,name,may,be,code,null;spring,configuration,property,source,property,source,property,source,property,mapper,mapper,function,configuration,property,name,configuration,property,state,contains,descendant,of,assert,not,null,property,source,property,source,must,not,be,null,assert,not,null,mapper,mapper,must,not,be,null,this,property,source,property,source,this,mapper,mapper,instanceof,delegating,property,mapper,mapper,new,delegating,property,mapper,mapper,this,contains,descendant,of,contains,descendant,of,null,contains,descendant,of,n,configuration,property,state,unknown
SpringConfigurationPropertySource -> SpringConfigurationPropertySource(PropertySource<?> propertySource, 			PropertyMapper mapper, 			Function<ConfigurationPropertyName, ConfigurationPropertyState> containsDescendantOf);1532738143;Create a new {@link SpringConfigurationPropertySource} implementation._@param propertySource the source property source_@param mapper the property mapper_@param containsDescendantOf function used to implement_{@link #containsDescendantOf(ConfigurationPropertyName)} (may be {@code null});SpringConfigurationPropertySource(PropertySource<?> propertySource,_			PropertyMapper mapper,_			Function<ConfigurationPropertyName, ConfigurationPropertyState> containsDescendantOf) {_		Assert.notNull(propertySource, "PropertySource must not be null")__		Assert.notNull(mapper, "Mapper must not be null")__		this.propertySource = propertySource__		this.mapper = (mapper instanceof DelegatingPropertyMapper) ? mapper_				: new DelegatingPropertyMapper(mapper)__		this.containsDescendantOf = (containsDescendantOf != null) ? containsDescendantOf_				: (n) -> ConfigurationPropertyState.UNKNOWN__	};create,a,new,link,spring,configuration,property,source,implementation,param,property,source,the,source,property,source,param,mapper,the,property,mapper,param,contains,descendant,of,function,used,to,implement,link,contains,descendant,of,configuration,property,name,may,be,code,null;spring,configuration,property,source,property,source,property,source,property,mapper,mapper,function,configuration,property,name,configuration,property,state,contains,descendant,of,assert,not,null,property,source,property,source,must,not,be,null,assert,not,null,mapper,mapper,must,not,be,null,this,property,source,property,source,this,mapper,mapper,instanceof,delegating,property,mapper,mapper,new,delegating,property,mapper,mapper,this,contains,descendant,of,contains,descendant,of,null,contains,descendant,of,n,configuration,property,state,unknown
SpringConfigurationPropertySource -> SpringConfigurationPropertySource(PropertySource<?> propertySource, 			PropertyMapper mapper, 			Function<ConfigurationPropertyName, ConfigurationPropertyState> containsDescendantOf);1537507278;Create a new {@link SpringConfigurationPropertySource} implementation._@param propertySource the source property source_@param mapper the property mapper_@param containsDescendantOf function used to implement_{@link #containsDescendantOf(ConfigurationPropertyName)} (may be {@code null});SpringConfigurationPropertySource(PropertySource<?> propertySource,_			PropertyMapper mapper,_			Function<ConfigurationPropertyName, ConfigurationPropertyState> containsDescendantOf) {_		Assert.notNull(propertySource, "PropertySource must not be null")__		Assert.notNull(mapper, "Mapper must not be null")__		this.propertySource = propertySource__		this.mapper = (mapper instanceof DelegatingPropertyMapper) ? mapper_				: new DelegatingPropertyMapper(mapper)__		this.containsDescendantOf = (containsDescendantOf != null) ? containsDescendantOf_				: (n) -> ConfigurationPropertyState.UNKNOWN__	};create,a,new,link,spring,configuration,property,source,implementation,param,property,source,the,source,property,source,param,mapper,the,property,mapper,param,contains,descendant,of,function,used,to,implement,link,contains,descendant,of,configuration,property,name,may,be,code,null;spring,configuration,property,source,property,source,property,source,property,mapper,mapper,function,configuration,property,name,configuration,property,state,contains,descendant,of,assert,not,null,property,source,property,source,must,not,be,null,assert,not,null,mapper,mapper,must,not,be,null,this,property,source,property,source,this,mapper,mapper,instanceof,delegating,property,mapper,mapper,new,delegating,property,mapper,mapper,this,contains,descendant,of,contains,descendant,of,null,contains,descendant,of,n,configuration,property,state,unknown
