# id;timestamp;commentText;codeText;commentWords;codeWords
JettyServletWebServerFactory -> public void addServerCustomizers(JettyServerCustomizer... customizers);1507173536;Add {@link JettyServerCustomizer}s that will be applied to the {@link Server}_before it is started._@param customizers the customizers to add;public void addServerCustomizers(JettyServerCustomizer... customizers) {_		Assert.notNull(customizers, "Customizers must not be null")__		this.jettyServerCustomizers.addAll(Arrays.asList(customizers))__	};add,link,jetty,server,customizer,s,that,will,be,applied,to,the,link,server,before,it,is,started,param,customizers,the,customizers,to,add;public,void,add,server,customizers,jetty,server,customizer,customizers,assert,not,null,customizers,customizers,must,not,be,null,this,jetty,server,customizers,add,all,arrays,as,list,customizers
JettyServletWebServerFactory -> public void addServerCustomizers(JettyServerCustomizer... customizers);1509713766;Add {@link JettyServerCustomizer}s that will be applied to the {@link Server}_before it is started._@param customizers the customizers to add;public void addServerCustomizers(JettyServerCustomizer... customizers) {_		Assert.notNull(customizers, "Customizers must not be null")__		this.jettyServerCustomizers.addAll(Arrays.asList(customizers))__	};add,link,jetty,server,customizer,s,that,will,be,applied,to,the,link,server,before,it,is,started,param,customizers,the,customizers,to,add;public,void,add,server,customizers,jetty,server,customizer,customizers,assert,not,null,customizers,customizers,must,not,be,null,this,jetty,server,customizers,add,all,arrays,as,list,customizers
JettyServletWebServerFactory -> public void addServerCustomizers(JettyServerCustomizer... customizers);1509761243;Add {@link JettyServerCustomizer}s that will be applied to the {@link Server}_before it is started._@param customizers the customizers to add;public void addServerCustomizers(JettyServerCustomizer... customizers) {_		Assert.notNull(customizers, "Customizers must not be null")__		this.jettyServerCustomizers.addAll(Arrays.asList(customizers))__	};add,link,jetty,server,customizer,s,that,will,be,applied,to,the,link,server,before,it,is,started,param,customizers,the,customizers,to,add;public,void,add,server,customizers,jetty,server,customizer,customizers,assert,not,null,customizers,customizers,must,not,be,null,this,jetty,server,customizers,add,all,arrays,as,list,customizers
JettyServletWebServerFactory -> public void addServerCustomizers(JettyServerCustomizer... customizers);1510965901;Add {@link JettyServerCustomizer}s that will be applied to the {@link Server}_before it is started._@param customizers the customizers to add;public void addServerCustomizers(JettyServerCustomizer... customizers) {_		Assert.notNull(customizers, "Customizers must not be null")__		this.jettyServerCustomizers.addAll(Arrays.asList(customizers))__	};add,link,jetty,server,customizer,s,that,will,be,applied,to,the,link,server,before,it,is,started,param,customizers,the,customizers,to,add;public,void,add,server,customizers,jetty,server,customizer,customizers,assert,not,null,customizers,customizers,must,not,be,null,this,jetty,server,customizers,add,all,arrays,as,list,customizers
JettyServletWebServerFactory -> public void addServerCustomizers(JettyServerCustomizer... customizers);1511157177;Add {@link JettyServerCustomizer}s that will be applied to the {@link Server}_before it is started._@param customizers the customizers to add;public void addServerCustomizers(JettyServerCustomizer... customizers) {_		Assert.notNull(customizers, "Customizers must not be null")__		this.jettyServerCustomizers.addAll(Arrays.asList(customizers))__	};add,link,jetty,server,customizer,s,that,will,be,applied,to,the,link,server,before,it,is,started,param,customizers,the,customizers,to,add;public,void,add,server,customizers,jetty,server,customizer,customizers,assert,not,null,customizers,customizers,must,not,be,null,this,jetty,server,customizers,add,all,arrays,as,list,customizers
JettyServletWebServerFactory -> public void addServerCustomizers(JettyServerCustomizer... customizers);1512201855;Add {@link JettyServerCustomizer}s that will be applied to the {@link Server}_before it is started._@param customizers the customizers to add;public void addServerCustomizers(JettyServerCustomizer... customizers) {_		Assert.notNull(customizers, "Customizers must not be null")__		this.jettyServerCustomizers.addAll(Arrays.asList(customizers))__	};add,link,jetty,server,customizer,s,that,will,be,applied,to,the,link,server,before,it,is,started,param,customizers,the,customizers,to,add;public,void,add,server,customizers,jetty,server,customizer,customizers,assert,not,null,customizers,customizers,must,not,be,null,this,jetty,server,customizers,add,all,arrays,as,list,customizers
JettyServletWebServerFactory -> public void addServerCustomizers(JettyServerCustomizer... customizers);1514997812;Add {@link JettyServerCustomizer}s that will be applied to the {@link Server}_before it is started._@param customizers the customizers to add;public void addServerCustomizers(JettyServerCustomizer... customizers) {_		Assert.notNull(customizers, "Customizers must not be null")__		this.jettyServerCustomizers.addAll(Arrays.asList(customizers))__	};add,link,jetty,server,customizer,s,that,will,be,applied,to,the,link,server,before,it,is,started,param,customizers,the,customizers,to,add;public,void,add,server,customizers,jetty,server,customizer,customizers,assert,not,null,customizers,customizers,must,not,be,null,this,jetty,server,customizers,add,all,arrays,as,list,customizers
JettyServletWebServerFactory -> public void addServerCustomizers(JettyServerCustomizer... customizers);1515014644;Add {@link JettyServerCustomizer}s that will be applied to the {@link Server}_before it is started._@param customizers the customizers to add;public void addServerCustomizers(JettyServerCustomizer... customizers) {_		Assert.notNull(customizers, "Customizers must not be null")__		this.jettyServerCustomizers.addAll(Arrays.asList(customizers))__	};add,link,jetty,server,customizer,s,that,will,be,applied,to,the,link,server,before,it,is,started,param,customizers,the,customizers,to,add;public,void,add,server,customizers,jetty,server,customizer,customizers,assert,not,null,customizers,customizers,must,not,be,null,this,jetty,server,customizers,add,all,arrays,as,list,customizers
JettyServletWebServerFactory -> public Collection<Configuration> getConfigurations();1507173536;Returns a mutable collection of Jetty {@link Configuration}s that will be applied_to the {@link WebAppContext} before the server is created._@return the Jetty {@link Configuration}s;public Collection<Configuration> getConfigurations() {_		return this.configurations__	};returns,a,mutable,collection,of,jetty,link,configuration,s,that,will,be,applied,to,the,link,web,app,context,before,the,server,is,created,return,the,jetty,link,configuration,s;public,collection,configuration,get,configurations,return,this,configurations
JettyServletWebServerFactory -> public Collection<Configuration> getConfigurations();1509713766;Returns a mutable collection of Jetty {@link Configuration}s that will be applied_to the {@link WebAppContext} before the server is created._@return the Jetty {@link Configuration}s;public Collection<Configuration> getConfigurations() {_		return this.configurations__	};returns,a,mutable,collection,of,jetty,link,configuration,s,that,will,be,applied,to,the,link,web,app,context,before,the,server,is,created,return,the,jetty,link,configuration,s;public,collection,configuration,get,configurations,return,this,configurations
JettyServletWebServerFactory -> public Collection<Configuration> getConfigurations();1509761243;Returns a mutable collection of Jetty {@link Configuration}s that will be applied_to the {@link WebAppContext} before the server is created._@return the Jetty {@link Configuration}s;public Collection<Configuration> getConfigurations() {_		return this.configurations__	};returns,a,mutable,collection,of,jetty,link,configuration,s,that,will,be,applied,to,the,link,web,app,context,before,the,server,is,created,return,the,jetty,link,configuration,s;public,collection,configuration,get,configurations,return,this,configurations
JettyServletWebServerFactory -> public Collection<Configuration> getConfigurations();1510965901;Returns a mutable collection of Jetty {@link Configuration}s that will be applied_to the {@link WebAppContext} before the server is created._@return the Jetty {@link Configuration}s;public Collection<Configuration> getConfigurations() {_		return this.configurations__	};returns,a,mutable,collection,of,jetty,link,configuration,s,that,will,be,applied,to,the,link,web,app,context,before,the,server,is,created,return,the,jetty,link,configuration,s;public,collection,configuration,get,configurations,return,this,configurations
JettyServletWebServerFactory -> public Collection<Configuration> getConfigurations();1511157177;Returns a mutable collection of Jetty {@link Configuration}s that will be applied_to the {@link WebAppContext} before the server is created._@return the Jetty {@link Configuration}s;public Collection<Configuration> getConfigurations() {_		return this.configurations__	};returns,a,mutable,collection,of,jetty,link,configuration,s,that,will,be,applied,to,the,link,web,app,context,before,the,server,is,created,return,the,jetty,link,configuration,s;public,collection,configuration,get,configurations,return,this,configurations
JettyServletWebServerFactory -> public Collection<Configuration> getConfigurations();1512201855;Returns a mutable collection of Jetty {@link Configuration}s that will be applied_to the {@link WebAppContext} before the server is created._@return the Jetty {@link Configuration}s;public Collection<Configuration> getConfigurations() {_		return this.configurations__	};returns,a,mutable,collection,of,jetty,link,configuration,s,that,will,be,applied,to,the,link,web,app,context,before,the,server,is,created,return,the,jetty,link,configuration,s;public,collection,configuration,get,configurations,return,this,configurations
JettyServletWebServerFactory -> public Collection<Configuration> getConfigurations();1514997812;Returns a mutable collection of Jetty {@link Configuration}s that will be applied_to the {@link WebAppContext} before the server is created._@return the Jetty {@link Configuration}s;public Collection<Configuration> getConfigurations() {_		return this.configurations__	};returns,a,mutable,collection,of,jetty,link,configuration,s,that,will,be,applied,to,the,link,web,app,context,before,the,server,is,created,return,the,jetty,link,configuration,s;public,collection,configuration,get,configurations,return,this,configurations
JettyServletWebServerFactory -> public Collection<Configuration> getConfigurations();1515014644;Returns a mutable collection of Jetty {@link Configuration}s that will be applied_to the {@link WebAppContext} before the server is created._@return the Jetty {@link Configuration}s;public Collection<Configuration> getConfigurations() {_		return this.configurations__	};returns,a,mutable,collection,of,jetty,link,configuration,s,that,will,be,applied,to,the,link,web,app,context,before,the,server,is,created,return,the,jetty,link,configuration,s;public,collection,configuration,get,configurations,return,this,configurations
JettyServletWebServerFactory -> public Collection<Configuration> getConfigurations();1515665717;Returns a mutable collection of Jetty {@link Configuration}s that will be applied_to the {@link WebAppContext} before the server is created._@return the Jetty {@link Configuration}s;public Collection<Configuration> getConfigurations() {_		return this.configurations__	};returns,a,mutable,collection,of,jetty,link,configuration,s,that,will,be,applied,to,the,link,web,app,context,before,the,server,is,created,return,the,jetty,link,configuration,s;public,collection,configuration,get,configurations,return,this,configurations
JettyServletWebServerFactory -> public Collection<Configuration> getConfigurations();1516114894;Returns a mutable collection of Jetty {@link Configuration}s that will be applied_to the {@link WebAppContext} before the server is created._@return the Jetty {@link Configuration}s;public Collection<Configuration> getConfigurations() {_		return this.configurations__	};returns,a,mutable,collection,of,jetty,link,configuration,s,that,will,be,applied,to,the,link,web,app,context,before,the,server,is,created,return,the,jetty,link,configuration,s;public,collection,configuration,get,configurations,return,this,configurations
JettyServletWebServerFactory -> public Collection<Configuration> getConfigurations();1516210343;Returns a mutable collection of Jetty {@link Configuration}s that will be applied_to the {@link WebAppContext} before the server is created._@return the Jetty {@link Configuration}s;public Collection<Configuration> getConfigurations() {_		return this.configurations__	};returns,a,mutable,collection,of,jetty,link,configuration,s,that,will,be,applied,to,the,link,web,app,context,before,the,server,is,created,return,the,jetty,link,configuration,s;public,collection,configuration,get,configurations,return,this,configurations
JettyServletWebServerFactory -> public Collection<Configuration> getConfigurations();1516215803;Returns a mutable collection of Jetty {@link Configuration}s that will be applied_to the {@link WebAppContext} before the server is created._@return the Jetty {@link Configuration}s;public Collection<Configuration> getConfigurations() {_		return this.configurations__	};returns,a,mutable,collection,of,jetty,link,configuration,s,that,will,be,applied,to,the,link,web,app,context,before,the,server,is,created,return,the,jetty,link,configuration,s;public,collection,configuration,get,configurations,return,this,configurations
JettyServletWebServerFactory -> public Collection<Configuration> getConfigurations();1516346511;Returns a mutable collection of Jetty {@link Configuration}s that will be applied_to the {@link WebAppContext} before the server is created._@return the Jetty {@link Configuration}s;public Collection<Configuration> getConfigurations() {_		return this.configurations__	};returns,a,mutable,collection,of,jetty,link,configuration,s,that,will,be,applied,to,the,link,web,app,context,before,the,server,is,created,return,the,jetty,link,configuration,s;public,collection,configuration,get,configurations,return,this,configurations
JettyServletWebServerFactory -> public Collection<Configuration> getConfigurations();1517419795;Returns a mutable collection of Jetty {@link Configuration}s that will be applied_to the {@link WebAppContext} before the server is created._@return the Jetty {@link Configuration}s;public Collection<Configuration> getConfigurations() {_		return this.configurations__	};returns,a,mutable,collection,of,jetty,link,configuration,s,that,will,be,applied,to,the,link,web,app,context,before,the,server,is,created,return,the,jetty,link,configuration,s;public,collection,configuration,get,configurations,return,this,configurations
JettyServletWebServerFactory -> public Collection<Configuration> getConfigurations();1517583695;Returns a mutable collection of Jetty {@link Configuration}s that will be applied_to the {@link WebAppContext} before the server is created._@return the Jetty {@link Configuration}s;public Collection<Configuration> getConfigurations() {_		return this.configurations__	};returns,a,mutable,collection,of,jetty,link,configuration,s,that,will,be,applied,to,the,link,web,app,context,before,the,server,is,created,return,the,jetty,link,configuration,s;public,collection,configuration,get,configurations,return,this,configurations
JettyServletWebServerFactory -> public Collection<Configuration> getConfigurations();1519362690;Returns a mutable collection of Jetty {@link Configuration}s that will be applied_to the {@link WebAppContext} before the server is created._@return the Jetty {@link Configuration}s;public Collection<Configuration> getConfigurations() {_		return this.configurations__	};returns,a,mutable,collection,of,jetty,link,configuration,s,that,will,be,applied,to,the,link,web,app,context,before,the,server,is,created,return,the,jetty,link,configuration,s;public,collection,configuration,get,configurations,return,this,configurations
JettyServletWebServerFactory -> public Collection<Configuration> getConfigurations();1519742833;Returns a mutable collection of Jetty {@link Configuration}s that will be applied_to the {@link WebAppContext} before the server is created._@return the Jetty {@link Configuration}s;public Collection<Configuration> getConfigurations() {_		return this.configurations__	};returns,a,mutable,collection,of,jetty,link,configuration,s,that,will,be,applied,to,the,link,web,app,context,before,the,server,is,created,return,the,jetty,link,configuration,s;public,collection,configuration,get,configurations,return,this,configurations
JettyServletWebServerFactory -> public Collection<Configuration> getConfigurations();1519817048;Returns a mutable collection of Jetty {@link Configuration}s that will be applied_to the {@link WebAppContext} before the server is created._@return the Jetty {@link Configuration}s;public Collection<Configuration> getConfigurations() {_		return this.configurations__	};returns,a,mutable,collection,of,jetty,link,configuration,s,that,will,be,applied,to,the,link,web,app,context,before,the,server,is,created,return,the,jetty,link,configuration,s;public,collection,configuration,get,configurations,return,this,configurations
JettyServletWebServerFactory -> public Collection<Configuration> getConfigurations();1521460869;Returns a mutable collection of Jetty {@link Configuration}s that will be applied_to the {@link WebAppContext} before the server is created._@return the Jetty {@link Configuration}s;public Collection<Configuration> getConfigurations() {_		return this.configurations__	};returns,a,mutable,collection,of,jetty,link,configuration,s,that,will,be,applied,to,the,link,web,app,context,before,the,server,is,created,return,the,jetty,link,configuration,s;public,collection,configuration,get,configurations,return,this,configurations
JettyServletWebServerFactory -> public Collection<Configuration> getConfigurations();1525255067;Returns a mutable collection of Jetty {@link Configuration}s that will be applied_to the {@link WebAppContext} before the server is created._@return the Jetty {@link Configuration}s;public Collection<Configuration> getConfigurations() {_		return this.configurations__	};returns,a,mutable,collection,of,jetty,link,configuration,s,that,will,be,applied,to,the,link,web,app,context,before,the,server,is,created,return,the,jetty,link,configuration,s;public,collection,configuration,get,configurations,return,this,configurations
JettyServletWebServerFactory -> public Collection<Configuration> getConfigurations();1525416882;Returns a mutable collection of Jetty {@link Configuration}s that will be applied_to the {@link WebAppContext} before the server is created._@return the Jetty {@link Configuration}s;public Collection<Configuration> getConfigurations() {_		return this.configurations__	};returns,a,mutable,collection,of,jetty,link,configuration,s,that,will,be,applied,to,the,link,web,app,context,before,the,server,is,created,return,the,jetty,link,configuration,s;public,collection,configuration,get,configurations,return,this,configurations
JettyServletWebServerFactory -> public Collection<Configuration> getConfigurations();1531909335;Returns a mutable collection of Jetty {@link Configuration}s that will be applied_to the {@link WebAppContext} before the server is created._@return the Jetty {@link Configuration}s;public Collection<Configuration> getConfigurations() {_		return this.configurations__	};returns,a,mutable,collection,of,jetty,link,configuration,s,that,will,be,applied,to,the,link,web,app,context,before,the,server,is,created,return,the,jetty,link,configuration,s;public,collection,configuration,get,configurations,return,this,configurations
JettyServletWebServerFactory -> public Collection<Configuration> getConfigurations();1532738143;Returns a mutable collection of Jetty {@link Configuration}s that will be applied_to the {@link WebAppContext} before the server is created._@return the Jetty {@link Configuration}s;public Collection<Configuration> getConfigurations() {_		return this.configurations__	};returns,a,mutable,collection,of,jetty,link,configuration,s,that,will,be,applied,to,the,link,web,app,context,before,the,server,is,created,return,the,jetty,link,configuration,s;public,collection,configuration,get,configurations,return,this,configurations
JettyServletWebServerFactory -> protected final void addDefaultServlet(WebAppContext context);1507173536;Add Jetty's {@code DefaultServlet} to the given {@link WebAppContext}._@param context the jetty {@link WebAppContext};protected final void addDefaultServlet(WebAppContext context) {_		Assert.notNull(context, "Context must not be null")__		ServletHolder holder = new ServletHolder()__		holder.setName("default")__		holder.setClassName("org.eclipse.jetty.servlet.DefaultServlet")__		holder.setInitParameter("dirAllowed", "false")__		holder.setInitOrder(1)__		context.getServletHandler().addServletWithMapping(holder, "/")__		context.getServletHandler().getServletMapping("/").setDefault(true)__	};add,jetty,s,code,default,servlet,to,the,given,link,web,app,context,param,context,the,jetty,link,web,app,context;protected,final,void,add,default,servlet,web,app,context,context,assert,not,null,context,context,must,not,be,null,servlet,holder,holder,new,servlet,holder,holder,set,name,default,holder,set,class,name,org,eclipse,jetty,servlet,default,servlet,holder,set,init,parameter,dir,allowed,false,holder,set,init,order,1,context,get,servlet,handler,add,servlet,with,mapping,holder,context,get,servlet,handler,get,servlet,mapping,set,default,true
JettyServletWebServerFactory -> protected final void addDefaultServlet(WebAppContext context);1509713766;Add Jetty's {@code DefaultServlet} to the given {@link WebAppContext}._@param context the jetty {@link WebAppContext};protected final void addDefaultServlet(WebAppContext context) {_		Assert.notNull(context, "Context must not be null")__		ServletHolder holder = new ServletHolder()__		holder.setName("default")__		holder.setClassName("org.eclipse.jetty.servlet.DefaultServlet")__		holder.setInitParameter("dirAllowed", "false")__		holder.setInitOrder(1)__		context.getServletHandler().addServletWithMapping(holder, "/")__		context.getServletHandler().getServletMapping("/").setDefault(true)__	};add,jetty,s,code,default,servlet,to,the,given,link,web,app,context,param,context,the,jetty,link,web,app,context;protected,final,void,add,default,servlet,web,app,context,context,assert,not,null,context,context,must,not,be,null,servlet,holder,holder,new,servlet,holder,holder,set,name,default,holder,set,class,name,org,eclipse,jetty,servlet,default,servlet,holder,set,init,parameter,dir,allowed,false,holder,set,init,order,1,context,get,servlet,handler,add,servlet,with,mapping,holder,context,get,servlet,handler,get,servlet,mapping,set,default,true
JettyServletWebServerFactory -> protected final void addDefaultServlet(WebAppContext context);1509761243;Add Jetty's {@code DefaultServlet} to the given {@link WebAppContext}._@param context the jetty {@link WebAppContext};protected final void addDefaultServlet(WebAppContext context) {_		Assert.notNull(context, "Context must not be null")__		ServletHolder holder = new ServletHolder()__		holder.setName("default")__		holder.setClassName("org.eclipse.jetty.servlet.DefaultServlet")__		holder.setInitParameter("dirAllowed", "false")__		holder.setInitOrder(1)__		context.getServletHandler().addServletWithMapping(holder, "/")__		context.getServletHandler().getServletMapping("/").setDefault(true)__	};add,jetty,s,code,default,servlet,to,the,given,link,web,app,context,param,context,the,jetty,link,web,app,context;protected,final,void,add,default,servlet,web,app,context,context,assert,not,null,context,context,must,not,be,null,servlet,holder,holder,new,servlet,holder,holder,set,name,default,holder,set,class,name,org,eclipse,jetty,servlet,default,servlet,holder,set,init,parameter,dir,allowed,false,holder,set,init,order,1,context,get,servlet,handler,add,servlet,with,mapping,holder,context,get,servlet,handler,get,servlet,mapping,set,default,true
JettyServletWebServerFactory -> protected final void addDefaultServlet(WebAppContext context);1510965901;Add Jetty's {@code DefaultServlet} to the given {@link WebAppContext}._@param context the jetty {@link WebAppContext};protected final void addDefaultServlet(WebAppContext context) {_		Assert.notNull(context, "Context must not be null")__		ServletHolder holder = new ServletHolder()__		holder.setName("default")__		holder.setClassName("org.eclipse.jetty.servlet.DefaultServlet")__		holder.setInitParameter("dirAllowed", "false")__		holder.setInitOrder(1)__		context.getServletHandler().addServletWithMapping(holder, "/")__		context.getServletHandler().getServletMapping("/").setDefault(true)__	};add,jetty,s,code,default,servlet,to,the,given,link,web,app,context,param,context,the,jetty,link,web,app,context;protected,final,void,add,default,servlet,web,app,context,context,assert,not,null,context,context,must,not,be,null,servlet,holder,holder,new,servlet,holder,holder,set,name,default,holder,set,class,name,org,eclipse,jetty,servlet,default,servlet,holder,set,init,parameter,dir,allowed,false,holder,set,init,order,1,context,get,servlet,handler,add,servlet,with,mapping,holder,context,get,servlet,handler,get,servlet,mapping,set,default,true
JettyServletWebServerFactory -> protected final void addDefaultServlet(WebAppContext context);1511157177;Add Jetty's {@code DefaultServlet} to the given {@link WebAppContext}._@param context the jetty {@link WebAppContext};protected final void addDefaultServlet(WebAppContext context) {_		Assert.notNull(context, "Context must not be null")__		ServletHolder holder = new ServletHolder()__		holder.setName("default")__		holder.setClassName("org.eclipse.jetty.servlet.DefaultServlet")__		holder.setInitParameter("dirAllowed", "false")__		holder.setInitOrder(1)__		context.getServletHandler().addServletWithMapping(holder, "/")__		context.getServletHandler().getServletMapping("/").setDefault(true)__	};add,jetty,s,code,default,servlet,to,the,given,link,web,app,context,param,context,the,jetty,link,web,app,context;protected,final,void,add,default,servlet,web,app,context,context,assert,not,null,context,context,must,not,be,null,servlet,holder,holder,new,servlet,holder,holder,set,name,default,holder,set,class,name,org,eclipse,jetty,servlet,default,servlet,holder,set,init,parameter,dir,allowed,false,holder,set,init,order,1,context,get,servlet,handler,add,servlet,with,mapping,holder,context,get,servlet,handler,get,servlet,mapping,set,default,true
JettyServletWebServerFactory -> protected final void addDefaultServlet(WebAppContext context);1512201855;Add Jetty's {@code DefaultServlet} to the given {@link WebAppContext}._@param context the jetty {@link WebAppContext};protected final void addDefaultServlet(WebAppContext context) {_		Assert.notNull(context, "Context must not be null")__		ServletHolder holder = new ServletHolder()__		holder.setName("default")__		holder.setClassName("org.eclipse.jetty.servlet.DefaultServlet")__		holder.setInitParameter("dirAllowed", "false")__		holder.setInitOrder(1)__		context.getServletHandler().addServletWithMapping(holder, "/")__		context.getServletHandler().getServletMapping("/").setDefault(true)__	};add,jetty,s,code,default,servlet,to,the,given,link,web,app,context,param,context,the,jetty,link,web,app,context;protected,final,void,add,default,servlet,web,app,context,context,assert,not,null,context,context,must,not,be,null,servlet,holder,holder,new,servlet,holder,holder,set,name,default,holder,set,class,name,org,eclipse,jetty,servlet,default,servlet,holder,set,init,parameter,dir,allowed,false,holder,set,init,order,1,context,get,servlet,handler,add,servlet,with,mapping,holder,context,get,servlet,handler,get,servlet,mapping,set,default,true
JettyServletWebServerFactory -> protected final void addDefaultServlet(WebAppContext context);1514997812;Add Jetty's {@code DefaultServlet} to the given {@link WebAppContext}._@param context the jetty {@link WebAppContext};protected final void addDefaultServlet(WebAppContext context) {_		Assert.notNull(context, "Context must not be null")__		ServletHolder holder = new ServletHolder()__		holder.setName("default")__		holder.setClassName("org.eclipse.jetty.servlet.DefaultServlet")__		holder.setInitParameter("dirAllowed", "false")__		holder.setInitOrder(1)__		context.getServletHandler().addServletWithMapping(holder, "/")__		context.getServletHandler().getServletMapping("/").setDefault(true)__	};add,jetty,s,code,default,servlet,to,the,given,link,web,app,context,param,context,the,jetty,link,web,app,context;protected,final,void,add,default,servlet,web,app,context,context,assert,not,null,context,context,must,not,be,null,servlet,holder,holder,new,servlet,holder,holder,set,name,default,holder,set,class,name,org,eclipse,jetty,servlet,default,servlet,holder,set,init,parameter,dir,allowed,false,holder,set,init,order,1,context,get,servlet,handler,add,servlet,with,mapping,holder,context,get,servlet,handler,get,servlet,mapping,set,default,true
JettyServletWebServerFactory -> protected final void addDefaultServlet(WebAppContext context);1515014644;Add Jetty's {@code DefaultServlet} to the given {@link WebAppContext}._@param context the jetty {@link WebAppContext};protected final void addDefaultServlet(WebAppContext context) {_		Assert.notNull(context, "Context must not be null")__		ServletHolder holder = new ServletHolder()__		holder.setName("default")__		holder.setClassName("org.eclipse.jetty.servlet.DefaultServlet")__		holder.setInitParameter("dirAllowed", "false")__		holder.setInitOrder(1)__		context.getServletHandler().addServletWithMapping(holder, "/")__		context.getServletHandler().getServletMapping("/").setDefault(true)__	};add,jetty,s,code,default,servlet,to,the,given,link,web,app,context,param,context,the,jetty,link,web,app,context;protected,final,void,add,default,servlet,web,app,context,context,assert,not,null,context,context,must,not,be,null,servlet,holder,holder,new,servlet,holder,holder,set,name,default,holder,set,class,name,org,eclipse,jetty,servlet,default,servlet,holder,set,init,parameter,dir,allowed,false,holder,set,init,order,1,context,get,servlet,handler,add,servlet,with,mapping,holder,context,get,servlet,handler,get,servlet,mapping,set,default,true
JettyServletWebServerFactory -> protected final void addDefaultServlet(WebAppContext context);1515665717;Add Jetty's {@code DefaultServlet} to the given {@link WebAppContext}._@param context the jetty {@link WebAppContext};protected final void addDefaultServlet(WebAppContext context) {_		Assert.notNull(context, "Context must not be null")__		ServletHolder holder = new ServletHolder()__		holder.setName("default")__		holder.setClassName("org.eclipse.jetty.servlet.DefaultServlet")__		holder.setInitParameter("dirAllowed", "false")__		holder.setInitOrder(1)__		context.getServletHandler().addServletWithMapping(holder, "/")__		context.getServletHandler().getServletMapping("/").setDefault(true)__	};add,jetty,s,code,default,servlet,to,the,given,link,web,app,context,param,context,the,jetty,link,web,app,context;protected,final,void,add,default,servlet,web,app,context,context,assert,not,null,context,context,must,not,be,null,servlet,holder,holder,new,servlet,holder,holder,set,name,default,holder,set,class,name,org,eclipse,jetty,servlet,default,servlet,holder,set,init,parameter,dir,allowed,false,holder,set,init,order,1,context,get,servlet,handler,add,servlet,with,mapping,holder,context,get,servlet,handler,get,servlet,mapping,set,default,true
JettyServletWebServerFactory -> protected final void addDefaultServlet(WebAppContext context);1516114894;Add Jetty's {@code DefaultServlet} to the given {@link WebAppContext}._@param context the jetty {@link WebAppContext};protected final void addDefaultServlet(WebAppContext context) {_		Assert.notNull(context, "Context must not be null")__		ServletHolder holder = new ServletHolder()__		holder.setName("default")__		holder.setClassName("org.eclipse.jetty.servlet.DefaultServlet")__		holder.setInitParameter("dirAllowed", "false")__		holder.setInitOrder(1)__		context.getServletHandler().addServletWithMapping(holder, "/")__		context.getServletHandler().getServletMapping("/").setDefault(true)__	};add,jetty,s,code,default,servlet,to,the,given,link,web,app,context,param,context,the,jetty,link,web,app,context;protected,final,void,add,default,servlet,web,app,context,context,assert,not,null,context,context,must,not,be,null,servlet,holder,holder,new,servlet,holder,holder,set,name,default,holder,set,class,name,org,eclipse,jetty,servlet,default,servlet,holder,set,init,parameter,dir,allowed,false,holder,set,init,order,1,context,get,servlet,handler,add,servlet,with,mapping,holder,context,get,servlet,handler,get,servlet,mapping,set,default,true
JettyServletWebServerFactory -> protected final void addDefaultServlet(WebAppContext context);1516210343;Add Jetty's {@code DefaultServlet} to the given {@link WebAppContext}._@param context the jetty {@link WebAppContext};protected final void addDefaultServlet(WebAppContext context) {_		Assert.notNull(context, "Context must not be null")__		ServletHolder holder = new ServletHolder()__		holder.setName("default")__		holder.setClassName("org.eclipse.jetty.servlet.DefaultServlet")__		holder.setInitParameter("dirAllowed", "false")__		holder.setInitOrder(1)__		context.getServletHandler().addServletWithMapping(holder, "/")__		context.getServletHandler().getServletMapping("/").setDefault(true)__	};add,jetty,s,code,default,servlet,to,the,given,link,web,app,context,param,context,the,jetty,link,web,app,context;protected,final,void,add,default,servlet,web,app,context,context,assert,not,null,context,context,must,not,be,null,servlet,holder,holder,new,servlet,holder,holder,set,name,default,holder,set,class,name,org,eclipse,jetty,servlet,default,servlet,holder,set,init,parameter,dir,allowed,false,holder,set,init,order,1,context,get,servlet,handler,add,servlet,with,mapping,holder,context,get,servlet,handler,get,servlet,mapping,set,default,true
JettyServletWebServerFactory -> protected final void addDefaultServlet(WebAppContext context);1516215803;Add Jetty's {@code DefaultServlet} to the given {@link WebAppContext}._@param context the jetty {@link WebAppContext};protected final void addDefaultServlet(WebAppContext context) {_		Assert.notNull(context, "Context must not be null")__		ServletHolder holder = new ServletHolder()__		holder.setName("default")__		holder.setClassName("org.eclipse.jetty.servlet.DefaultServlet")__		holder.setInitParameter("dirAllowed", "false")__		holder.setInitOrder(1)__		context.getServletHandler().addServletWithMapping(holder, "/")__		context.getServletHandler().getServletMapping("/").setDefault(true)__	};add,jetty,s,code,default,servlet,to,the,given,link,web,app,context,param,context,the,jetty,link,web,app,context;protected,final,void,add,default,servlet,web,app,context,context,assert,not,null,context,context,must,not,be,null,servlet,holder,holder,new,servlet,holder,holder,set,name,default,holder,set,class,name,org,eclipse,jetty,servlet,default,servlet,holder,set,init,parameter,dir,allowed,false,holder,set,init,order,1,context,get,servlet,handler,add,servlet,with,mapping,holder,context,get,servlet,handler,get,servlet,mapping,set,default,true
JettyServletWebServerFactory -> protected final void addDefaultServlet(WebAppContext context);1516346511;Add Jetty's {@code DefaultServlet} to the given {@link WebAppContext}._@param context the jetty {@link WebAppContext};protected final void addDefaultServlet(WebAppContext context) {_		Assert.notNull(context, "Context must not be null")__		ServletHolder holder = new ServletHolder()__		holder.setName("default")__		holder.setClassName("org.eclipse.jetty.servlet.DefaultServlet")__		holder.setInitParameter("dirAllowed", "false")__		holder.setInitOrder(1)__		context.getServletHandler().addServletWithMapping(holder, "/")__		context.getServletHandler().getServletMapping("/").setDefault(true)__	};add,jetty,s,code,default,servlet,to,the,given,link,web,app,context,param,context,the,jetty,link,web,app,context;protected,final,void,add,default,servlet,web,app,context,context,assert,not,null,context,context,must,not,be,null,servlet,holder,holder,new,servlet,holder,holder,set,name,default,holder,set,class,name,org,eclipse,jetty,servlet,default,servlet,holder,set,init,parameter,dir,allowed,false,holder,set,init,order,1,context,get,servlet,handler,add,servlet,with,mapping,holder,context,get,servlet,handler,get,servlet,mapping,set,default,true
JettyServletWebServerFactory -> protected final void addDefaultServlet(WebAppContext context);1517419795;Add Jetty's {@code DefaultServlet} to the given {@link WebAppContext}._@param context the jetty {@link WebAppContext};protected final void addDefaultServlet(WebAppContext context) {_		Assert.notNull(context, "Context must not be null")__		ServletHolder holder = new ServletHolder()__		holder.setName("default")__		holder.setClassName("org.eclipse.jetty.servlet.DefaultServlet")__		holder.setInitParameter("dirAllowed", "false")__		holder.setInitOrder(1)__		context.getServletHandler().addServletWithMapping(holder, "/")__		context.getServletHandler().getServletMapping("/").setDefault(true)__	};add,jetty,s,code,default,servlet,to,the,given,link,web,app,context,param,context,the,jetty,link,web,app,context;protected,final,void,add,default,servlet,web,app,context,context,assert,not,null,context,context,must,not,be,null,servlet,holder,holder,new,servlet,holder,holder,set,name,default,holder,set,class,name,org,eclipse,jetty,servlet,default,servlet,holder,set,init,parameter,dir,allowed,false,holder,set,init,order,1,context,get,servlet,handler,add,servlet,with,mapping,holder,context,get,servlet,handler,get,servlet,mapping,set,default,true
JettyServletWebServerFactory -> protected final void addDefaultServlet(WebAppContext context);1517583695;Add Jetty's {@code DefaultServlet} to the given {@link WebAppContext}._@param context the jetty {@link WebAppContext};protected final void addDefaultServlet(WebAppContext context) {_		Assert.notNull(context, "Context must not be null")__		ServletHolder holder = new ServletHolder()__		holder.setName("default")__		holder.setClassName("org.eclipse.jetty.servlet.DefaultServlet")__		holder.setInitParameter("dirAllowed", "false")__		holder.setInitOrder(1)__		context.getServletHandler().addServletWithMapping(holder, "/")__		context.getServletHandler().getServletMapping("/").setDefault(true)__	};add,jetty,s,code,default,servlet,to,the,given,link,web,app,context,param,context,the,jetty,link,web,app,context;protected,final,void,add,default,servlet,web,app,context,context,assert,not,null,context,context,must,not,be,null,servlet,holder,holder,new,servlet,holder,holder,set,name,default,holder,set,class,name,org,eclipse,jetty,servlet,default,servlet,holder,set,init,parameter,dir,allowed,false,holder,set,init,order,1,context,get,servlet,handler,add,servlet,with,mapping,holder,context,get,servlet,handler,get,servlet,mapping,set,default,true
JettyServletWebServerFactory -> protected final void addDefaultServlet(WebAppContext context);1519362690;Add Jetty's {@code DefaultServlet} to the given {@link WebAppContext}._@param context the jetty {@link WebAppContext};protected final void addDefaultServlet(WebAppContext context) {_		Assert.notNull(context, "Context must not be null")__		ServletHolder holder = new ServletHolder()__		holder.setName("default")__		holder.setClassName("org.eclipse.jetty.servlet.DefaultServlet")__		holder.setInitParameter("dirAllowed", "false")__		holder.setInitOrder(1)__		context.getServletHandler().addServletWithMapping(holder, "/")__		context.getServletHandler().getServletMapping("/").setDefault(true)__	};add,jetty,s,code,default,servlet,to,the,given,link,web,app,context,param,context,the,jetty,link,web,app,context;protected,final,void,add,default,servlet,web,app,context,context,assert,not,null,context,context,must,not,be,null,servlet,holder,holder,new,servlet,holder,holder,set,name,default,holder,set,class,name,org,eclipse,jetty,servlet,default,servlet,holder,set,init,parameter,dir,allowed,false,holder,set,init,order,1,context,get,servlet,handler,add,servlet,with,mapping,holder,context,get,servlet,handler,get,servlet,mapping,set,default,true
JettyServletWebServerFactory -> protected final void addDefaultServlet(WebAppContext context);1519742833;Add Jetty's {@code DefaultServlet} to the given {@link WebAppContext}._@param context the jetty {@link WebAppContext};protected final void addDefaultServlet(WebAppContext context) {_		Assert.notNull(context, "Context must not be null")__		ServletHolder holder = new ServletHolder()__		holder.setName("default")__		holder.setClassName("org.eclipse.jetty.servlet.DefaultServlet")__		holder.setInitParameter("dirAllowed", "false")__		holder.setInitOrder(1)__		context.getServletHandler().addServletWithMapping(holder, "/")__		context.getServletHandler().getServletMapping("/").setDefault(true)__	};add,jetty,s,code,default,servlet,to,the,given,link,web,app,context,param,context,the,jetty,link,web,app,context;protected,final,void,add,default,servlet,web,app,context,context,assert,not,null,context,context,must,not,be,null,servlet,holder,holder,new,servlet,holder,holder,set,name,default,holder,set,class,name,org,eclipse,jetty,servlet,default,servlet,holder,set,init,parameter,dir,allowed,false,holder,set,init,order,1,context,get,servlet,handler,add,servlet,with,mapping,holder,context,get,servlet,handler,get,servlet,mapping,set,default,true
JettyServletWebServerFactory -> protected final void addDefaultServlet(WebAppContext context);1519817048;Add Jetty's {@code DefaultServlet} to the given {@link WebAppContext}._@param context the jetty {@link WebAppContext};protected final void addDefaultServlet(WebAppContext context) {_		Assert.notNull(context, "Context must not be null")__		ServletHolder holder = new ServletHolder()__		holder.setName("default")__		holder.setClassName("org.eclipse.jetty.servlet.DefaultServlet")__		holder.setInitParameter("dirAllowed", "false")__		holder.setInitOrder(1)__		context.getServletHandler().addServletWithMapping(holder, "/")__		context.getServletHandler().getServletMapping("/").setDefault(true)__	};add,jetty,s,code,default,servlet,to,the,given,link,web,app,context,param,context,the,jetty,link,web,app,context;protected,final,void,add,default,servlet,web,app,context,context,assert,not,null,context,context,must,not,be,null,servlet,holder,holder,new,servlet,holder,holder,set,name,default,holder,set,class,name,org,eclipse,jetty,servlet,default,servlet,holder,set,init,parameter,dir,allowed,false,holder,set,init,order,1,context,get,servlet,handler,add,servlet,with,mapping,holder,context,get,servlet,handler,get,servlet,mapping,set,default,true
JettyServletWebServerFactory -> protected final void addDefaultServlet(WebAppContext context);1521460869;Add Jetty's {@code DefaultServlet} to the given {@link WebAppContext}._@param context the jetty {@link WebAppContext};protected final void addDefaultServlet(WebAppContext context) {_		Assert.notNull(context, "Context must not be null")__		ServletHolder holder = new ServletHolder()__		holder.setName("default")__		holder.setClassName("org.eclipse.jetty.servlet.DefaultServlet")__		holder.setInitParameter("dirAllowed", "false")__		holder.setInitOrder(1)__		context.getServletHandler().addServletWithMapping(holder, "/")__		context.getServletHandler().getServletMapping("/").setDefault(true)__	};add,jetty,s,code,default,servlet,to,the,given,link,web,app,context,param,context,the,jetty,link,web,app,context;protected,final,void,add,default,servlet,web,app,context,context,assert,not,null,context,context,must,not,be,null,servlet,holder,holder,new,servlet,holder,holder,set,name,default,holder,set,class,name,org,eclipse,jetty,servlet,default,servlet,holder,set,init,parameter,dir,allowed,false,holder,set,init,order,1,context,get,servlet,handler,add,servlet,with,mapping,holder,context,get,servlet,handler,get,servlet,mapping,set,default,true
JettyServletWebServerFactory -> protected final void addDefaultServlet(WebAppContext context);1525255067;Add Jetty's {@code DefaultServlet} to the given {@link WebAppContext}._@param context the jetty {@link WebAppContext};protected final void addDefaultServlet(WebAppContext context) {_		Assert.notNull(context, "Context must not be null")__		ServletHolder holder = new ServletHolder()__		holder.setName("default")__		holder.setClassName("org.eclipse.jetty.servlet.DefaultServlet")__		holder.setInitParameter("dirAllowed", "false")__		holder.setInitOrder(1)__		context.getServletHandler().addServletWithMapping(holder, "/")__		context.getServletHandler().getServletMapping("/").setDefault(true)__	};add,jetty,s,code,default,servlet,to,the,given,link,web,app,context,param,context,the,jetty,link,web,app,context;protected,final,void,add,default,servlet,web,app,context,context,assert,not,null,context,context,must,not,be,null,servlet,holder,holder,new,servlet,holder,holder,set,name,default,holder,set,class,name,org,eclipse,jetty,servlet,default,servlet,holder,set,init,parameter,dir,allowed,false,holder,set,init,order,1,context,get,servlet,handler,add,servlet,with,mapping,holder,context,get,servlet,handler,get,servlet,mapping,set,default,true
JettyServletWebServerFactory -> protected final void addDefaultServlet(WebAppContext context);1525416882;Add Jetty's {@code DefaultServlet} to the given {@link WebAppContext}._@param context the jetty {@link WebAppContext};protected final void addDefaultServlet(WebAppContext context) {_		Assert.notNull(context, "Context must not be null")__		ServletHolder holder = new ServletHolder()__		holder.setName("default")__		holder.setClassName("org.eclipse.jetty.servlet.DefaultServlet")__		holder.setInitParameter("dirAllowed", "false")__		holder.setInitOrder(1)__		context.getServletHandler().addServletWithMapping(holder, "/")__		context.getServletHandler().getServletMapping("/").setDefault(true)__	};add,jetty,s,code,default,servlet,to,the,given,link,web,app,context,param,context,the,jetty,link,web,app,context;protected,final,void,add,default,servlet,web,app,context,context,assert,not,null,context,context,must,not,be,null,servlet,holder,holder,new,servlet,holder,holder,set,name,default,holder,set,class,name,org,eclipse,jetty,servlet,default,servlet,holder,set,init,parameter,dir,allowed,false,holder,set,init,order,1,context,get,servlet,handler,add,servlet,with,mapping,holder,context,get,servlet,handler,get,servlet,mapping,set,default,true
JettyServletWebServerFactory -> protected final void addDefaultServlet(WebAppContext context);1531909335;Add Jetty's {@code DefaultServlet} to the given {@link WebAppContext}._@param context the jetty {@link WebAppContext};protected final void addDefaultServlet(WebAppContext context) {_		Assert.notNull(context, "Context must not be null")__		ServletHolder holder = new ServletHolder()__		holder.setName("default")__		holder.setClassName("org.eclipse.jetty.servlet.DefaultServlet")__		holder.setInitParameter("dirAllowed", "false")__		holder.setInitOrder(1)__		context.getServletHandler().addServletWithMapping(holder, "/")__		context.getServletHandler().getServletMapping("/").setDefault(true)__	};add,jetty,s,code,default,servlet,to,the,given,link,web,app,context,param,context,the,jetty,link,web,app,context;protected,final,void,add,default,servlet,web,app,context,context,assert,not,null,context,context,must,not,be,null,servlet,holder,holder,new,servlet,holder,holder,set,name,default,holder,set,class,name,org,eclipse,jetty,servlet,default,servlet,holder,set,init,parameter,dir,allowed,false,holder,set,init,order,1,context,get,servlet,handler,add,servlet,with,mapping,holder,context,get,servlet,handler,get,servlet,mapping,set,default,true
JettyServletWebServerFactory -> protected final void addDefaultServlet(WebAppContext context);1532738143;Add Jetty's {@code DefaultServlet} to the given {@link WebAppContext}._@param context the jetty {@link WebAppContext};protected final void addDefaultServlet(WebAppContext context) {_		Assert.notNull(context, "Context must not be null")__		ServletHolder holder = new ServletHolder()__		holder.setName("default")__		holder.setClassName("org.eclipse.jetty.servlet.DefaultServlet")__		holder.setInitParameter("dirAllowed", "false")__		holder.setInitOrder(1)__		context.getServletHandler().addServletWithMapping(holder, "/")__		context.getServletHandler().getServletMapping("/").setDefault(true)__	};add,jetty,s,code,default,servlet,to,the,given,link,web,app,context,param,context,the,jetty,link,web,app,context;protected,final,void,add,default,servlet,web,app,context,context,assert,not,null,context,context,must,not,be,null,servlet,holder,holder,new,servlet,holder,holder,set,name,default,holder,set,class,name,org,eclipse,jetty,servlet,default,servlet,holder,set,init,parameter,dir,allowed,false,holder,set,init,order,1,context,get,servlet,handler,add,servlet,with,mapping,holder,context,get,servlet,handler,get,servlet,mapping,set,default,true
JettyServletWebServerFactory -> public void setServerCustomizers( 			Collection<? extends JettyServerCustomizer> customizers);1507173536;Sets {@link JettyServerCustomizer}s that will be applied to the {@link Server}_before it is started. Calling this method will replace any existing customizers._@param customizers the Jetty customizers to apply;public void setServerCustomizers(_			Collection<? extends JettyServerCustomizer> customizers) {_		Assert.notNull(customizers, "Customizers must not be null")__		this.jettyServerCustomizers = new ArrayList<>(customizers)__	};sets,link,jetty,server,customizer,s,that,will,be,applied,to,the,link,server,before,it,is,started,calling,this,method,will,replace,any,existing,customizers,param,customizers,the,jetty,customizers,to,apply;public,void,set,server,customizers,collection,extends,jetty,server,customizer,customizers,assert,not,null,customizers,customizers,must,not,be,null,this,jetty,server,customizers,new,array,list,customizers
JettyServletWebServerFactory -> public void setServerCustomizers( 			Collection<? extends JettyServerCustomizer> customizers);1509713766;Sets {@link JettyServerCustomizer}s that will be applied to the {@link Server}_before it is started. Calling this method will replace any existing customizers._@param customizers the Jetty customizers to apply;public void setServerCustomizers(_			Collection<? extends JettyServerCustomizer> customizers) {_		Assert.notNull(customizers, "Customizers must not be null")__		this.jettyServerCustomizers = new ArrayList<>(customizers)__	};sets,link,jetty,server,customizer,s,that,will,be,applied,to,the,link,server,before,it,is,started,calling,this,method,will,replace,any,existing,customizers,param,customizers,the,jetty,customizers,to,apply;public,void,set,server,customizers,collection,extends,jetty,server,customizer,customizers,assert,not,null,customizers,customizers,must,not,be,null,this,jetty,server,customizers,new,array,list,customizers
JettyServletWebServerFactory -> public void setServerCustomizers( 			Collection<? extends JettyServerCustomizer> customizers);1509761243;Sets {@link JettyServerCustomizer}s that will be applied to the {@link Server}_before it is started. Calling this method will replace any existing customizers._@param customizers the Jetty customizers to apply;public void setServerCustomizers(_			Collection<? extends JettyServerCustomizer> customizers) {_		Assert.notNull(customizers, "Customizers must not be null")__		this.jettyServerCustomizers = new ArrayList<>(customizers)__	};sets,link,jetty,server,customizer,s,that,will,be,applied,to,the,link,server,before,it,is,started,calling,this,method,will,replace,any,existing,customizers,param,customizers,the,jetty,customizers,to,apply;public,void,set,server,customizers,collection,extends,jetty,server,customizer,customizers,assert,not,null,customizers,customizers,must,not,be,null,this,jetty,server,customizers,new,array,list,customizers
JettyServletWebServerFactory -> public void setServerCustomizers( 			Collection<? extends JettyServerCustomizer> customizers);1510965901;Sets {@link JettyServerCustomizer}s that will be applied to the {@link Server}_before it is started. Calling this method will replace any existing customizers._@param customizers the Jetty customizers to apply;public void setServerCustomizers(_			Collection<? extends JettyServerCustomizer> customizers) {_		Assert.notNull(customizers, "Customizers must not be null")__		this.jettyServerCustomizers = new ArrayList<>(customizers)__	};sets,link,jetty,server,customizer,s,that,will,be,applied,to,the,link,server,before,it,is,started,calling,this,method,will,replace,any,existing,customizers,param,customizers,the,jetty,customizers,to,apply;public,void,set,server,customizers,collection,extends,jetty,server,customizer,customizers,assert,not,null,customizers,customizers,must,not,be,null,this,jetty,server,customizers,new,array,list,customizers
JettyServletWebServerFactory -> public void setServerCustomizers( 			Collection<? extends JettyServerCustomizer> customizers);1511157177;Sets {@link JettyServerCustomizer}s that will be applied to the {@link Server}_before it is started. Calling this method will replace any existing customizers._@param customizers the Jetty customizers to apply;public void setServerCustomizers(_			Collection<? extends JettyServerCustomizer> customizers) {_		Assert.notNull(customizers, "Customizers must not be null")__		this.jettyServerCustomizers = new ArrayList<>(customizers)__	};sets,link,jetty,server,customizer,s,that,will,be,applied,to,the,link,server,before,it,is,started,calling,this,method,will,replace,any,existing,customizers,param,customizers,the,jetty,customizers,to,apply;public,void,set,server,customizers,collection,extends,jetty,server,customizer,customizers,assert,not,null,customizers,customizers,must,not,be,null,this,jetty,server,customizers,new,array,list,customizers
JettyServletWebServerFactory -> public void setServerCustomizers( 			Collection<? extends JettyServerCustomizer> customizers);1512201855;Sets {@link JettyServerCustomizer}s that will be applied to the {@link Server}_before it is started. Calling this method will replace any existing customizers._@param customizers the Jetty customizers to apply;public void setServerCustomizers(_			Collection<? extends JettyServerCustomizer> customizers) {_		Assert.notNull(customizers, "Customizers must not be null")__		this.jettyServerCustomizers = new ArrayList<>(customizers)__	};sets,link,jetty,server,customizer,s,that,will,be,applied,to,the,link,server,before,it,is,started,calling,this,method,will,replace,any,existing,customizers,param,customizers,the,jetty,customizers,to,apply;public,void,set,server,customizers,collection,extends,jetty,server,customizer,customizers,assert,not,null,customizers,customizers,must,not,be,null,this,jetty,server,customizers,new,array,list,customizers
JettyServletWebServerFactory -> public void setServerCustomizers( 			Collection<? extends JettyServerCustomizer> customizers);1514997812;Sets {@link JettyServerCustomizer}s that will be applied to the {@link Server}_before it is started. Calling this method will replace any existing customizers._@param customizers the Jetty customizers to apply;public void setServerCustomizers(_			Collection<? extends JettyServerCustomizer> customizers) {_		Assert.notNull(customizers, "Customizers must not be null")__		this.jettyServerCustomizers = new ArrayList<>(customizers)__	};sets,link,jetty,server,customizer,s,that,will,be,applied,to,the,link,server,before,it,is,started,calling,this,method,will,replace,any,existing,customizers,param,customizers,the,jetty,customizers,to,apply;public,void,set,server,customizers,collection,extends,jetty,server,customizer,customizers,assert,not,null,customizers,customizers,must,not,be,null,this,jetty,server,customizers,new,array,list,customizers
JettyServletWebServerFactory -> public void setServerCustomizers( 			Collection<? extends JettyServerCustomizer> customizers);1515014644;Sets {@link JettyServerCustomizer}s that will be applied to the {@link Server}_before it is started. Calling this method will replace any existing customizers._@param customizers the Jetty customizers to apply;public void setServerCustomizers(_			Collection<? extends JettyServerCustomizer> customizers) {_		Assert.notNull(customizers, "Customizers must not be null")__		this.jettyServerCustomizers = new ArrayList<>(customizers)__	};sets,link,jetty,server,customizer,s,that,will,be,applied,to,the,link,server,before,it,is,started,calling,this,method,will,replace,any,existing,customizers,param,customizers,the,jetty,customizers,to,apply;public,void,set,server,customizers,collection,extends,jetty,server,customizer,customizers,assert,not,null,customizers,customizers,must,not,be,null,this,jetty,server,customizers,new,array,list,customizers
JettyServletWebServerFactory -> public void setServerCustomizers( 			Collection<? extends JettyServerCustomizer> customizers);1515665717;Sets {@link JettyServerCustomizer}s that will be applied to the {@link Server}_before it is started. Calling this method will replace any existing customizers._@param customizers the Jetty customizers to apply;public void setServerCustomizers(_			Collection<? extends JettyServerCustomizer> customizers) {_		Assert.notNull(customizers, "Customizers must not be null")__		this.jettyServerCustomizers = new ArrayList<>(customizers)__	};sets,link,jetty,server,customizer,s,that,will,be,applied,to,the,link,server,before,it,is,started,calling,this,method,will,replace,any,existing,customizers,param,customizers,the,jetty,customizers,to,apply;public,void,set,server,customizers,collection,extends,jetty,server,customizer,customizers,assert,not,null,customizers,customizers,must,not,be,null,this,jetty,server,customizers,new,array,list,customizers
JettyServletWebServerFactory -> public void setServerCustomizers( 			Collection<? extends JettyServerCustomizer> customizers);1516114894;Sets {@link JettyServerCustomizer}s that will be applied to the {@link Server}_before it is started. Calling this method will replace any existing customizers._@param customizers the Jetty customizers to apply;public void setServerCustomizers(_			Collection<? extends JettyServerCustomizer> customizers) {_		Assert.notNull(customizers, "Customizers must not be null")__		this.jettyServerCustomizers = new ArrayList<>(customizers)__	};sets,link,jetty,server,customizer,s,that,will,be,applied,to,the,link,server,before,it,is,started,calling,this,method,will,replace,any,existing,customizers,param,customizers,the,jetty,customizers,to,apply;public,void,set,server,customizers,collection,extends,jetty,server,customizer,customizers,assert,not,null,customizers,customizers,must,not,be,null,this,jetty,server,customizers,new,array,list,customizers
JettyServletWebServerFactory -> public void setServerCustomizers( 			Collection<? extends JettyServerCustomizer> customizers);1516210343;Sets {@link JettyServerCustomizer}s that will be applied to the {@link Server}_before it is started. Calling this method will replace any existing customizers._@param customizers the Jetty customizers to apply;public void setServerCustomizers(_			Collection<? extends JettyServerCustomizer> customizers) {_		Assert.notNull(customizers, "Customizers must not be null")__		this.jettyServerCustomizers = new ArrayList<>(customizers)__	};sets,link,jetty,server,customizer,s,that,will,be,applied,to,the,link,server,before,it,is,started,calling,this,method,will,replace,any,existing,customizers,param,customizers,the,jetty,customizers,to,apply;public,void,set,server,customizers,collection,extends,jetty,server,customizer,customizers,assert,not,null,customizers,customizers,must,not,be,null,this,jetty,server,customizers,new,array,list,customizers
JettyServletWebServerFactory -> public void setServerCustomizers( 			Collection<? extends JettyServerCustomizer> customizers);1516215803;Sets {@link JettyServerCustomizer}s that will be applied to the {@link Server}_before it is started. Calling this method will replace any existing customizers._@param customizers the Jetty customizers to apply;public void setServerCustomizers(_			Collection<? extends JettyServerCustomizer> customizers) {_		Assert.notNull(customizers, "Customizers must not be null")__		this.jettyServerCustomizers = new ArrayList<>(customizers)__	};sets,link,jetty,server,customizer,s,that,will,be,applied,to,the,link,server,before,it,is,started,calling,this,method,will,replace,any,existing,customizers,param,customizers,the,jetty,customizers,to,apply;public,void,set,server,customizers,collection,extends,jetty,server,customizer,customizers,assert,not,null,customizers,customizers,must,not,be,null,this,jetty,server,customizers,new,array,list,customizers
JettyServletWebServerFactory -> public void setServerCustomizers( 			Collection<? extends JettyServerCustomizer> customizers);1516346511;Sets {@link JettyServerCustomizer}s that will be applied to the {@link Server}_before it is started. Calling this method will replace any existing customizers._@param customizers the Jetty customizers to apply;public void setServerCustomizers(_			Collection<? extends JettyServerCustomizer> customizers) {_		Assert.notNull(customizers, "Customizers must not be null")__		this.jettyServerCustomizers = new ArrayList<>(customizers)__	};sets,link,jetty,server,customizer,s,that,will,be,applied,to,the,link,server,before,it,is,started,calling,this,method,will,replace,any,existing,customizers,param,customizers,the,jetty,customizers,to,apply;public,void,set,server,customizers,collection,extends,jetty,server,customizer,customizers,assert,not,null,customizers,customizers,must,not,be,null,this,jetty,server,customizers,new,array,list,customizers
JettyServletWebServerFactory -> public void setServerCustomizers( 			Collection<? extends JettyServerCustomizer> customizers);1517419795;Sets {@link JettyServerCustomizer}s that will be applied to the {@link Server}_before it is started. Calling this method will replace any existing customizers._@param customizers the Jetty customizers to apply;public void setServerCustomizers(_			Collection<? extends JettyServerCustomizer> customizers) {_		Assert.notNull(customizers, "Customizers must not be null")__		this.jettyServerCustomizers = new ArrayList<>(customizers)__	};sets,link,jetty,server,customizer,s,that,will,be,applied,to,the,link,server,before,it,is,started,calling,this,method,will,replace,any,existing,customizers,param,customizers,the,jetty,customizers,to,apply;public,void,set,server,customizers,collection,extends,jetty,server,customizer,customizers,assert,not,null,customizers,customizers,must,not,be,null,this,jetty,server,customizers,new,array,list,customizers
JettyServletWebServerFactory -> public void setServerCustomizers( 			Collection<? extends JettyServerCustomizer> customizers);1517583695;Sets {@link JettyServerCustomizer}s that will be applied to the {@link Server}_before it is started. Calling this method will replace any existing customizers._@param customizers the Jetty customizers to apply;public void setServerCustomizers(_			Collection<? extends JettyServerCustomizer> customizers) {_		Assert.notNull(customizers, "Customizers must not be null")__		this.jettyServerCustomizers = new ArrayList<>(customizers)__	};sets,link,jetty,server,customizer,s,that,will,be,applied,to,the,link,server,before,it,is,started,calling,this,method,will,replace,any,existing,customizers,param,customizers,the,jetty,customizers,to,apply;public,void,set,server,customizers,collection,extends,jetty,server,customizer,customizers,assert,not,null,customizers,customizers,must,not,be,null,this,jetty,server,customizers,new,array,list,customizers
JettyServletWebServerFactory -> public void setServerCustomizers( 			Collection<? extends JettyServerCustomizer> customizers);1519362690;Sets {@link JettyServerCustomizer}s that will be applied to the {@link Server}_before it is started. Calling this method will replace any existing customizers._@param customizers the Jetty customizers to apply;public void setServerCustomizers(_			Collection<? extends JettyServerCustomizer> customizers) {_		Assert.notNull(customizers, "Customizers must not be null")__		this.jettyServerCustomizers = new ArrayList<>(customizers)__	};sets,link,jetty,server,customizer,s,that,will,be,applied,to,the,link,server,before,it,is,started,calling,this,method,will,replace,any,existing,customizers,param,customizers,the,jetty,customizers,to,apply;public,void,set,server,customizers,collection,extends,jetty,server,customizer,customizers,assert,not,null,customizers,customizers,must,not,be,null,this,jetty,server,customizers,new,array,list,customizers
JettyServletWebServerFactory -> public void setServerCustomizers( 			Collection<? extends JettyServerCustomizer> customizers);1519742833;Sets {@link JettyServerCustomizer}s that will be applied to the {@link Server}_before it is started. Calling this method will replace any existing customizers._@param customizers the Jetty customizers to apply;public void setServerCustomizers(_			Collection<? extends JettyServerCustomizer> customizers) {_		Assert.notNull(customizers, "Customizers must not be null")__		this.jettyServerCustomizers = new ArrayList<>(customizers)__	};sets,link,jetty,server,customizer,s,that,will,be,applied,to,the,link,server,before,it,is,started,calling,this,method,will,replace,any,existing,customizers,param,customizers,the,jetty,customizers,to,apply;public,void,set,server,customizers,collection,extends,jetty,server,customizer,customizers,assert,not,null,customizers,customizers,must,not,be,null,this,jetty,server,customizers,new,array,list,customizers
JettyServletWebServerFactory -> public void setServerCustomizers( 			Collection<? extends JettyServerCustomizer> customizers);1519817048;Sets {@link JettyServerCustomizer}s that will be applied to the {@link Server}_before it is started. Calling this method will replace any existing customizers._@param customizers the Jetty customizers to apply;public void setServerCustomizers(_			Collection<? extends JettyServerCustomizer> customizers) {_		Assert.notNull(customizers, "Customizers must not be null")__		this.jettyServerCustomizers = new ArrayList<>(customizers)__	};sets,link,jetty,server,customizer,s,that,will,be,applied,to,the,link,server,before,it,is,started,calling,this,method,will,replace,any,existing,customizers,param,customizers,the,jetty,customizers,to,apply;public,void,set,server,customizers,collection,extends,jetty,server,customizer,customizers,assert,not,null,customizers,customizers,must,not,be,null,this,jetty,server,customizers,new,array,list,customizers
JettyServletWebServerFactory -> public void setServerCustomizers( 			Collection<? extends JettyServerCustomizer> customizers);1521460869;Sets {@link JettyServerCustomizer}s that will be applied to the {@link Server}_before it is started. Calling this method will replace any existing customizers._@param customizers the Jetty customizers to apply;public void setServerCustomizers(_			Collection<? extends JettyServerCustomizer> customizers) {_		Assert.notNull(customizers, "Customizers must not be null")__		this.jettyServerCustomizers = new ArrayList<>(customizers)__	};sets,link,jetty,server,customizer,s,that,will,be,applied,to,the,link,server,before,it,is,started,calling,this,method,will,replace,any,existing,customizers,param,customizers,the,jetty,customizers,to,apply;public,void,set,server,customizers,collection,extends,jetty,server,customizer,customizers,assert,not,null,customizers,customizers,must,not,be,null,this,jetty,server,customizers,new,array,list,customizers
JettyServletWebServerFactory -> public void setServerCustomizers( 			Collection<? extends JettyServerCustomizer> customizers);1525255067;Sets {@link JettyServerCustomizer}s that will be applied to the {@link Server}_before it is started. Calling this method will replace any existing customizers._@param customizers the Jetty customizers to apply;public void setServerCustomizers(_			Collection<? extends JettyServerCustomizer> customizers) {_		Assert.notNull(customizers, "Customizers must not be null")__		this.jettyServerCustomizers = new ArrayList<>(customizers)__	};sets,link,jetty,server,customizer,s,that,will,be,applied,to,the,link,server,before,it,is,started,calling,this,method,will,replace,any,existing,customizers,param,customizers,the,jetty,customizers,to,apply;public,void,set,server,customizers,collection,extends,jetty,server,customizer,customizers,assert,not,null,customizers,customizers,must,not,be,null,this,jetty,server,customizers,new,array,list,customizers
JettyServletWebServerFactory -> public void setServerCustomizers( 			Collection<? extends JettyServerCustomizer> customizers);1525416882;Sets {@link JettyServerCustomizer}s that will be applied to the {@link Server}_before it is started. Calling this method will replace any existing customizers._@param customizers the Jetty customizers to apply;public void setServerCustomizers(_			Collection<? extends JettyServerCustomizer> customizers) {_		Assert.notNull(customizers, "Customizers must not be null")__		this.jettyServerCustomizers = new ArrayList<>(customizers)__	};sets,link,jetty,server,customizer,s,that,will,be,applied,to,the,link,server,before,it,is,started,calling,this,method,will,replace,any,existing,customizers,param,customizers,the,jetty,customizers,to,apply;public,void,set,server,customizers,collection,extends,jetty,server,customizer,customizers,assert,not,null,customizers,customizers,must,not,be,null,this,jetty,server,customizers,new,array,list,customizers
JettyServletWebServerFactory -> public void setServerCustomizers( 			Collection<? extends JettyServerCustomizer> customizers);1531909335;Sets {@link JettyServerCustomizer}s that will be applied to the {@link Server}_before it is started. Calling this method will replace any existing customizers._@param customizers the Jetty customizers to apply;public void setServerCustomizers(_			Collection<? extends JettyServerCustomizer> customizers) {_		Assert.notNull(customizers, "Customizers must not be null")__		this.jettyServerCustomizers = new ArrayList<>(customizers)__	};sets,link,jetty,server,customizer,s,that,will,be,applied,to,the,link,server,before,it,is,started,calling,this,method,will,replace,any,existing,customizers,param,customizers,the,jetty,customizers,to,apply;public,void,set,server,customizers,collection,extends,jetty,server,customizer,customizers,assert,not,null,customizers,customizers,must,not,be,null,this,jetty,server,customizers,new,array,list,customizers
JettyServletWebServerFactory -> public void setServerCustomizers( 			Collection<? extends JettyServerCustomizer> customizers);1532738143;Sets {@link JettyServerCustomizer}s that will be applied to the {@link Server}_before it is started. Calling this method will replace any existing customizers._@param customizers the Jetty customizers to apply;public void setServerCustomizers(_			Collection<? extends JettyServerCustomizer> customizers) {_		Assert.notNull(customizers, "Customizers must not be null")__		this.jettyServerCustomizers = new ArrayList<>(customizers)__	};sets,link,jetty,server,customizer,s,that,will,be,applied,to,the,link,server,before,it,is,started,calling,this,method,will,replace,any,existing,customizers,param,customizers,the,jetty,customizers,to,apply;public,void,set,server,customizers,collection,extends,jetty,server,customizer,customizers,assert,not,null,customizers,customizers,must,not,be,null,this,jetty,server,customizers,new,array,list,customizers
JettyServletWebServerFactory -> protected JettyWebServer getJettyWebServer(Server server);1507173536;Factory method called to create the {@link JettyWebServer} . Subclasses can_override this method to return a different {@link JettyWebServer} or apply_additional processing to the Jetty server._@param server the Jetty server._@return a new {@link JettyWebServer} instance;protected JettyWebServer getJettyWebServer(Server server) {_		return new JettyWebServer(server, getPort() >= 0)__	};factory,method,called,to,create,the,link,jetty,web,server,subclasses,can,override,this,method,to,return,a,different,link,jetty,web,server,or,apply,additional,processing,to,the,jetty,server,param,server,the,jetty,server,return,a,new,link,jetty,web,server,instance;protected,jetty,web,server,get,jetty,web,server,server,server,return,new,jetty,web,server,server,get,port,0
JettyServletWebServerFactory -> protected JettyWebServer getJettyWebServer(Server server);1509713766;Factory method called to create the {@link JettyWebServer} . Subclasses can_override this method to return a different {@link JettyWebServer} or apply_additional processing to the Jetty server._@param server the Jetty server._@return a new {@link JettyWebServer} instance;protected JettyWebServer getJettyWebServer(Server server) {_		return new JettyWebServer(server, getPort() >= 0)__	};factory,method,called,to,create,the,link,jetty,web,server,subclasses,can,override,this,method,to,return,a,different,link,jetty,web,server,or,apply,additional,processing,to,the,jetty,server,param,server,the,jetty,server,return,a,new,link,jetty,web,server,instance;protected,jetty,web,server,get,jetty,web,server,server,server,return,new,jetty,web,server,server,get,port,0
JettyServletWebServerFactory -> protected JettyWebServer getJettyWebServer(Server server);1509761243;Factory method called to create the {@link JettyWebServer} . Subclasses can_override this method to return a different {@link JettyWebServer} or apply_additional processing to the Jetty server._@param server the Jetty server._@return a new {@link JettyWebServer} instance;protected JettyWebServer getJettyWebServer(Server server) {_		return new JettyWebServer(server, getPort() >= 0)__	};factory,method,called,to,create,the,link,jetty,web,server,subclasses,can,override,this,method,to,return,a,different,link,jetty,web,server,or,apply,additional,processing,to,the,jetty,server,param,server,the,jetty,server,return,a,new,link,jetty,web,server,instance;protected,jetty,web,server,get,jetty,web,server,server,server,return,new,jetty,web,server,server,get,port,0
JettyServletWebServerFactory -> protected JettyWebServer getJettyWebServer(Server server);1510965901;Factory method called to create the {@link JettyWebServer} . Subclasses can_override this method to return a different {@link JettyWebServer} or apply_additional processing to the Jetty server._@param server the Jetty server._@return a new {@link JettyWebServer} instance;protected JettyWebServer getJettyWebServer(Server server) {_		return new JettyWebServer(server, getPort() >= 0)__	};factory,method,called,to,create,the,link,jetty,web,server,subclasses,can,override,this,method,to,return,a,different,link,jetty,web,server,or,apply,additional,processing,to,the,jetty,server,param,server,the,jetty,server,return,a,new,link,jetty,web,server,instance;protected,jetty,web,server,get,jetty,web,server,server,server,return,new,jetty,web,server,server,get,port,0
JettyServletWebServerFactory -> protected JettyWebServer getJettyWebServer(Server server);1511157177;Factory method called to create the {@link JettyWebServer} . Subclasses can_override this method to return a different {@link JettyWebServer} or apply_additional processing to the Jetty server._@param server the Jetty server._@return a new {@link JettyWebServer} instance;protected JettyWebServer getJettyWebServer(Server server) {_		return new JettyWebServer(server, getPort() >= 0)__	};factory,method,called,to,create,the,link,jetty,web,server,subclasses,can,override,this,method,to,return,a,different,link,jetty,web,server,or,apply,additional,processing,to,the,jetty,server,param,server,the,jetty,server,return,a,new,link,jetty,web,server,instance;protected,jetty,web,server,get,jetty,web,server,server,server,return,new,jetty,web,server,server,get,port,0
JettyServletWebServerFactory -> protected JettyWebServer getJettyWebServer(Server server);1512201855;Factory method called to create the {@link JettyWebServer}. Subclasses can_override this method to return a different {@link JettyWebServer} or apply_additional processing to the Jetty server._@param server the Jetty server._@return a new {@link JettyWebServer} instance;protected JettyWebServer getJettyWebServer(Server server) {_		return new JettyWebServer(server, getPort() >= 0)__	};factory,method,called,to,create,the,link,jetty,web,server,subclasses,can,override,this,method,to,return,a,different,link,jetty,web,server,or,apply,additional,processing,to,the,jetty,server,param,server,the,jetty,server,return,a,new,link,jetty,web,server,instance;protected,jetty,web,server,get,jetty,web,server,server,server,return,new,jetty,web,server,server,get,port,0
JettyServletWebServerFactory -> protected JettyWebServer getJettyWebServer(Server server);1514997812;Factory method called to create the {@link JettyWebServer}. Subclasses can_override this method to return a different {@link JettyWebServer} or apply_additional processing to the Jetty server._@param server the Jetty server._@return a new {@link JettyWebServer} instance;protected JettyWebServer getJettyWebServer(Server server) {_		return new JettyWebServer(server, getPort() >= 0)__	};factory,method,called,to,create,the,link,jetty,web,server,subclasses,can,override,this,method,to,return,a,different,link,jetty,web,server,or,apply,additional,processing,to,the,jetty,server,param,server,the,jetty,server,return,a,new,link,jetty,web,server,instance;protected,jetty,web,server,get,jetty,web,server,server,server,return,new,jetty,web,server,server,get,port,0
JettyServletWebServerFactory -> protected JettyWebServer getJettyWebServer(Server server);1515014644;Factory method called to create the {@link JettyWebServer}. Subclasses can override_this method to return a different {@link JettyWebServer} or apply additional_processing to the Jetty server._@param server the Jetty server._@return a new {@link JettyWebServer} instance;protected JettyWebServer getJettyWebServer(Server server) {_		return new JettyWebServer(server, getPort() >= 0)__	};factory,method,called,to,create,the,link,jetty,web,server,subclasses,can,override,this,method,to,return,a,different,link,jetty,web,server,or,apply,additional,processing,to,the,jetty,server,param,server,the,jetty,server,return,a,new,link,jetty,web,server,instance;protected,jetty,web,server,get,jetty,web,server,server,server,return,new,jetty,web,server,server,get,port,0
JettyServletWebServerFactory -> protected JettyWebServer getJettyWebServer(Server server);1515665717;Factory method called to create the {@link JettyWebServer}. Subclasses can override_this method to return a different {@link JettyWebServer} or apply additional_processing to the Jetty server._@param server the Jetty server._@return a new {@link JettyWebServer} instance;protected JettyWebServer getJettyWebServer(Server server) {_		return new JettyWebServer(server, getPort() >= 0)__	};factory,method,called,to,create,the,link,jetty,web,server,subclasses,can,override,this,method,to,return,a,different,link,jetty,web,server,or,apply,additional,processing,to,the,jetty,server,param,server,the,jetty,server,return,a,new,link,jetty,web,server,instance;protected,jetty,web,server,get,jetty,web,server,server,server,return,new,jetty,web,server,server,get,port,0
JettyServletWebServerFactory -> protected JettyWebServer getJettyWebServer(Server server);1516114894;Factory method called to create the {@link JettyWebServer}. Subclasses can override_this method to return a different {@link JettyWebServer} or apply additional_processing to the Jetty server._@param server the Jetty server._@return a new {@link JettyWebServer} instance;protected JettyWebServer getJettyWebServer(Server server) {_		return new JettyWebServer(server, getPort() >= 0)__	};factory,method,called,to,create,the,link,jetty,web,server,subclasses,can,override,this,method,to,return,a,different,link,jetty,web,server,or,apply,additional,processing,to,the,jetty,server,param,server,the,jetty,server,return,a,new,link,jetty,web,server,instance;protected,jetty,web,server,get,jetty,web,server,server,server,return,new,jetty,web,server,server,get,port,0
JettyServletWebServerFactory -> protected JettyWebServer getJettyWebServer(Server server);1516210343;Factory method called to create the {@link JettyWebServer}. Subclasses can override_this method to return a different {@link JettyWebServer} or apply additional_processing to the Jetty server._@param server the Jetty server._@return a new {@link JettyWebServer} instance;protected JettyWebServer getJettyWebServer(Server server) {_		return new JettyWebServer(server, getPort() >= 0)__	};factory,method,called,to,create,the,link,jetty,web,server,subclasses,can,override,this,method,to,return,a,different,link,jetty,web,server,or,apply,additional,processing,to,the,jetty,server,param,server,the,jetty,server,return,a,new,link,jetty,web,server,instance;protected,jetty,web,server,get,jetty,web,server,server,server,return,new,jetty,web,server,server,get,port,0
JettyServletWebServerFactory -> protected JettyWebServer getJettyWebServer(Server server);1516215803;Factory method called to create the {@link JettyWebServer}. Subclasses can override_this method to return a different {@link JettyWebServer} or apply additional_processing to the Jetty server._@param server the Jetty server._@return a new {@link JettyWebServer} instance;protected JettyWebServer getJettyWebServer(Server server) {_		return new JettyWebServer(server, getPort() >= 0)__	};factory,method,called,to,create,the,link,jetty,web,server,subclasses,can,override,this,method,to,return,a,different,link,jetty,web,server,or,apply,additional,processing,to,the,jetty,server,param,server,the,jetty,server,return,a,new,link,jetty,web,server,instance;protected,jetty,web,server,get,jetty,web,server,server,server,return,new,jetty,web,server,server,get,port,0
JettyServletWebServerFactory -> protected JettyWebServer getJettyWebServer(Server server);1516346511;Factory method called to create the {@link JettyWebServer}. Subclasses can override_this method to return a different {@link JettyWebServer} or apply additional_processing to the Jetty server._@param server the Jetty server._@return a new {@link JettyWebServer} instance;protected JettyWebServer getJettyWebServer(Server server) {_		return new JettyWebServer(server, getPort() >= 0)__	};factory,method,called,to,create,the,link,jetty,web,server,subclasses,can,override,this,method,to,return,a,different,link,jetty,web,server,or,apply,additional,processing,to,the,jetty,server,param,server,the,jetty,server,return,a,new,link,jetty,web,server,instance;protected,jetty,web,server,get,jetty,web,server,server,server,return,new,jetty,web,server,server,get,port,0
JettyServletWebServerFactory -> protected JettyWebServer getJettyWebServer(Server server);1517419795;Factory method called to create the {@link JettyWebServer}. Subclasses can override_this method to return a different {@link JettyWebServer} or apply additional_processing to the Jetty server._@param server the Jetty server._@return a new {@link JettyWebServer} instance;protected JettyWebServer getJettyWebServer(Server server) {_		return new JettyWebServer(server, getPort() >= 0)__	};factory,method,called,to,create,the,link,jetty,web,server,subclasses,can,override,this,method,to,return,a,different,link,jetty,web,server,or,apply,additional,processing,to,the,jetty,server,param,server,the,jetty,server,return,a,new,link,jetty,web,server,instance;protected,jetty,web,server,get,jetty,web,server,server,server,return,new,jetty,web,server,server,get,port,0
JettyServletWebServerFactory -> protected JettyWebServer getJettyWebServer(Server server);1517583695;Factory method called to create the {@link JettyWebServer}. Subclasses can override_this method to return a different {@link JettyWebServer} or apply additional_processing to the Jetty server._@param server the Jetty server._@return a new {@link JettyWebServer} instance;protected JettyWebServer getJettyWebServer(Server server) {_		return new JettyWebServer(server, getPort() >= 0)__	};factory,method,called,to,create,the,link,jetty,web,server,subclasses,can,override,this,method,to,return,a,different,link,jetty,web,server,or,apply,additional,processing,to,the,jetty,server,param,server,the,jetty,server,return,a,new,link,jetty,web,server,instance;protected,jetty,web,server,get,jetty,web,server,server,server,return,new,jetty,web,server,server,get,port,0
JettyServletWebServerFactory -> protected JettyWebServer getJettyWebServer(Server server);1519362690;Factory method called to create the {@link JettyWebServer}. Subclasses can override_this method to return a different {@link JettyWebServer} or apply additional_processing to the Jetty server._@param server the Jetty server._@return a new {@link JettyWebServer} instance;protected JettyWebServer getJettyWebServer(Server server) {_		return new JettyWebServer(server, getPort() >= 0)__	};factory,method,called,to,create,the,link,jetty,web,server,subclasses,can,override,this,method,to,return,a,different,link,jetty,web,server,or,apply,additional,processing,to,the,jetty,server,param,server,the,jetty,server,return,a,new,link,jetty,web,server,instance;protected,jetty,web,server,get,jetty,web,server,server,server,return,new,jetty,web,server,server,get,port,0
JettyServletWebServerFactory -> protected JettyWebServer getJettyWebServer(Server server);1519742833;Factory method called to create the {@link JettyWebServer}. Subclasses can override_this method to return a different {@link JettyWebServer} or apply additional_processing to the Jetty server._@param server the Jetty server._@return a new {@link JettyWebServer} instance;protected JettyWebServer getJettyWebServer(Server server) {_		return new JettyWebServer(server, getPort() >= 0)__	};factory,method,called,to,create,the,link,jetty,web,server,subclasses,can,override,this,method,to,return,a,different,link,jetty,web,server,or,apply,additional,processing,to,the,jetty,server,param,server,the,jetty,server,return,a,new,link,jetty,web,server,instance;protected,jetty,web,server,get,jetty,web,server,server,server,return,new,jetty,web,server,server,get,port,0
JettyServletWebServerFactory -> protected JettyWebServer getJettyWebServer(Server server);1519817048;Factory method called to create the {@link JettyWebServer}. Subclasses can override_this method to return a different {@link JettyWebServer} or apply additional_processing to the Jetty server._@param server the Jetty server._@return a new {@link JettyWebServer} instance;protected JettyWebServer getJettyWebServer(Server server) {_		return new JettyWebServer(server, getPort() >= 0)__	};factory,method,called,to,create,the,link,jetty,web,server,subclasses,can,override,this,method,to,return,a,different,link,jetty,web,server,or,apply,additional,processing,to,the,jetty,server,param,server,the,jetty,server,return,a,new,link,jetty,web,server,instance;protected,jetty,web,server,get,jetty,web,server,server,server,return,new,jetty,web,server,server,get,port,0
JettyServletWebServerFactory -> protected JettyWebServer getJettyWebServer(Server server);1521460869;Factory method called to create the {@link JettyWebServer}. Subclasses can override_this method to return a different {@link JettyWebServer} or apply additional_processing to the Jetty server._@param server the Jetty server._@return a new {@link JettyWebServer} instance;protected JettyWebServer getJettyWebServer(Server server) {_		return new JettyWebServer(server, getPort() >= 0)__	};factory,method,called,to,create,the,link,jetty,web,server,subclasses,can,override,this,method,to,return,a,different,link,jetty,web,server,or,apply,additional,processing,to,the,jetty,server,param,server,the,jetty,server,return,a,new,link,jetty,web,server,instance;protected,jetty,web,server,get,jetty,web,server,server,server,return,new,jetty,web,server,server,get,port,0
JettyServletWebServerFactory -> protected JettyWebServer getJettyWebServer(Server server);1525255067;Factory method called to create the {@link JettyWebServer}. Subclasses can override_this method to return a different {@link JettyWebServer} or apply additional_processing to the Jetty server._@param server the Jetty server._@return a new {@link JettyWebServer} instance;protected JettyWebServer getJettyWebServer(Server server) {_		return new JettyWebServer(server, getPort() >= 0)__	};factory,method,called,to,create,the,link,jetty,web,server,subclasses,can,override,this,method,to,return,a,different,link,jetty,web,server,or,apply,additional,processing,to,the,jetty,server,param,server,the,jetty,server,return,a,new,link,jetty,web,server,instance;protected,jetty,web,server,get,jetty,web,server,server,server,return,new,jetty,web,server,server,get,port,0
JettyServletWebServerFactory -> protected JettyWebServer getJettyWebServer(Server server);1525416882;Factory method called to create the {@link JettyWebServer}. Subclasses can override_this method to return a different {@link JettyWebServer} or apply additional_processing to the Jetty server._@param server the Jetty server._@return a new {@link JettyWebServer} instance;protected JettyWebServer getJettyWebServer(Server server) {_		return new JettyWebServer(server, getPort() >= 0)__	};factory,method,called,to,create,the,link,jetty,web,server,subclasses,can,override,this,method,to,return,a,different,link,jetty,web,server,or,apply,additional,processing,to,the,jetty,server,param,server,the,jetty,server,return,a,new,link,jetty,web,server,instance;protected,jetty,web,server,get,jetty,web,server,server,server,return,new,jetty,web,server,server,get,port,0
JettyServletWebServerFactory -> protected JettyWebServer getJettyWebServer(Server server);1531909335;Factory method called to create the {@link JettyWebServer}. Subclasses can override_this method to return a different {@link JettyWebServer} or apply additional_processing to the Jetty server._@param server the Jetty server._@return a new {@link JettyWebServer} instance;protected JettyWebServer getJettyWebServer(Server server) {_		return new JettyWebServer(server, getPort() >= 0)__	};factory,method,called,to,create,the,link,jetty,web,server,subclasses,can,override,this,method,to,return,a,different,link,jetty,web,server,or,apply,additional,processing,to,the,jetty,server,param,server,the,jetty,server,return,a,new,link,jetty,web,server,instance;protected,jetty,web,server,get,jetty,web,server,server,server,return,new,jetty,web,server,server,get,port,0
JettyServletWebServerFactory -> protected JettyWebServer getJettyWebServer(Server server);1532738143;Factory method called to create the {@link JettyWebServer}. Subclasses can override_this method to return a different {@link JettyWebServer} or apply additional_processing to the Jetty server._@param server the Jetty server._@return a new {@link JettyWebServer} instance;protected JettyWebServer getJettyWebServer(Server server) {_		return new JettyWebServer(server, getPort() >= 0)__	};factory,method,called,to,create,the,link,jetty,web,server,subclasses,can,override,this,method,to,return,a,different,link,jetty,web,server,or,apply,additional,processing,to,the,jetty,server,param,server,the,jetty,server,return,a,new,link,jetty,web,server,instance;protected,jetty,web,server,get,jetty,web,server,server,server,return,new,jetty,web,server,server,get,port,0
JettyServletWebServerFactory -> protected final void configureWebAppContext(WebAppContext context, 			ServletContextInitializer... initializers);1507173536;Configure the given Jetty {@link WebAppContext} for use._@param context the context to configure_@param initializers the set of initializers to apply;protected final void configureWebAppContext(WebAppContext context,_			ServletContextInitializer... initializers) {_		Assert.notNull(context, "Context must not be null")__		context.setTempDirectory(getTempDirectory())__		if (this.resourceLoader != null) {_			context.setClassLoader(this.resourceLoader.getClassLoader())__		}_		String contextPath = getContextPath()__		context.setContextPath(StringUtils.hasLength(contextPath) ? contextPath : "/")__		context.setDisplayName(getDisplayName())__		configureDocumentRoot(context)__		if (isRegisterDefaultServlet()) {_			addDefaultServlet(context)__		}_		if (shouldRegisterJspServlet()) {_			addJspServlet(context)__			context.addBean(new JasperInitializer(context), true)__		}_		addLocaleMappings(context)__		ServletContextInitializer[] initializersToUse = mergeInitializers(initializers)__		Configuration[] configurations = getWebAppContextConfigurations(context,_				initializersToUse)__		context.setConfigurations(configurations)__		configureSession(context)__		postProcessWebAppContext(context)__	};configure,the,given,jetty,link,web,app,context,for,use,param,context,the,context,to,configure,param,initializers,the,set,of,initializers,to,apply;protected,final,void,configure,web,app,context,web,app,context,context,servlet,context,initializer,initializers,assert,not,null,context,context,must,not,be,null,context,set,temp,directory,get,temp,directory,if,this,resource,loader,null,context,set,class,loader,this,resource,loader,get,class,loader,string,context,path,get,context,path,context,set,context,path,string,utils,has,length,context,path,context,path,context,set,display,name,get,display,name,configure,document,root,context,if,is,register,default,servlet,add,default,servlet,context,if,should,register,jsp,servlet,add,jsp,servlet,context,context,add,bean,new,jasper,initializer,context,true,add,locale,mappings,context,servlet,context,initializer,initializers,to,use,merge,initializers,initializers,configuration,configurations,get,web,app,context,configurations,context,initializers,to,use,context,set,configurations,configurations,configure,session,context,post,process,web,app,context,context
JettyServletWebServerFactory -> protected final void configureWebAppContext(WebAppContext context, 			ServletContextInitializer... initializers);1509713766;Configure the given Jetty {@link WebAppContext} for use._@param context the context to configure_@param initializers the set of initializers to apply;protected final void configureWebAppContext(WebAppContext context,_			ServletContextInitializer... initializers) {_		Assert.notNull(context, "Context must not be null")__		context.setTempDirectory(getTempDirectory())__		if (this.resourceLoader != null) {_			context.setClassLoader(this.resourceLoader.getClassLoader())__		}_		String contextPath = getContextPath()__		context.setContextPath(StringUtils.hasLength(contextPath) ? contextPath : "/")__		context.setDisplayName(getDisplayName())__		configureDocumentRoot(context)__		if (isRegisterDefaultServlet()) {_			addDefaultServlet(context)__		}_		if (shouldRegisterJspServlet()) {_			addJspServlet(context)__			context.addBean(new JasperInitializer(context), true)__		}_		addLocaleMappings(context)__		ServletContextInitializer[] initializersToUse = mergeInitializers(initializers)__		Configuration[] configurations = getWebAppContextConfigurations(context,_				initializersToUse)__		context.setConfigurations(configurations)__		configureSession(context)__		postProcessWebAppContext(context)__	};configure,the,given,jetty,link,web,app,context,for,use,param,context,the,context,to,configure,param,initializers,the,set,of,initializers,to,apply;protected,final,void,configure,web,app,context,web,app,context,context,servlet,context,initializer,initializers,assert,not,null,context,context,must,not,be,null,context,set,temp,directory,get,temp,directory,if,this,resource,loader,null,context,set,class,loader,this,resource,loader,get,class,loader,string,context,path,get,context,path,context,set,context,path,string,utils,has,length,context,path,context,path,context,set,display,name,get,display,name,configure,document,root,context,if,is,register,default,servlet,add,default,servlet,context,if,should,register,jsp,servlet,add,jsp,servlet,context,context,add,bean,new,jasper,initializer,context,true,add,locale,mappings,context,servlet,context,initializer,initializers,to,use,merge,initializers,initializers,configuration,configurations,get,web,app,context,configurations,context,initializers,to,use,context,set,configurations,configurations,configure,session,context,post,process,web,app,context,context
JettyServletWebServerFactory -> protected final void configureWebAppContext(WebAppContext context, 			ServletContextInitializer... initializers);1509761243;Configure the given Jetty {@link WebAppContext} for use._@param context the context to configure_@param initializers the set of initializers to apply;protected final void configureWebAppContext(WebAppContext context,_			ServletContextInitializer... initializers) {_		Assert.notNull(context, "Context must not be null")__		context.setTempDirectory(getTempDirectory())__		if (this.resourceLoader != null) {_			context.setClassLoader(this.resourceLoader.getClassLoader())__		}_		String contextPath = getContextPath()__		context.setContextPath(StringUtils.hasLength(contextPath) ? contextPath : "/")__		context.setDisplayName(getDisplayName())__		configureDocumentRoot(context)__		if (isRegisterDefaultServlet()) {_			addDefaultServlet(context)__		}_		if (shouldRegisterJspServlet()) {_			addJspServlet(context)__			context.addBean(new JasperInitializer(context), true)__		}_		addLocaleMappings(context)__		ServletContextInitializer[] initializersToUse = mergeInitializers(initializers)__		Configuration[] configurations = getWebAppContextConfigurations(context,_				initializersToUse)__		context.setConfigurations(configurations)__		configureSession(context)__		postProcessWebAppContext(context)__	};configure,the,given,jetty,link,web,app,context,for,use,param,context,the,context,to,configure,param,initializers,the,set,of,initializers,to,apply;protected,final,void,configure,web,app,context,web,app,context,context,servlet,context,initializer,initializers,assert,not,null,context,context,must,not,be,null,context,set,temp,directory,get,temp,directory,if,this,resource,loader,null,context,set,class,loader,this,resource,loader,get,class,loader,string,context,path,get,context,path,context,set,context,path,string,utils,has,length,context,path,context,path,context,set,display,name,get,display,name,configure,document,root,context,if,is,register,default,servlet,add,default,servlet,context,if,should,register,jsp,servlet,add,jsp,servlet,context,context,add,bean,new,jasper,initializer,context,true,add,locale,mappings,context,servlet,context,initializer,initializers,to,use,merge,initializers,initializers,configuration,configurations,get,web,app,context,configurations,context,initializers,to,use,context,set,configurations,configurations,configure,session,context,post,process,web,app,context,context
JettyServletWebServerFactory -> protected final void configureWebAppContext(WebAppContext context, 			ServletContextInitializer... initializers);1510965901;Configure the given Jetty {@link WebAppContext} for use._@param context the context to configure_@param initializers the set of initializers to apply;protected final void configureWebAppContext(WebAppContext context,_			ServletContextInitializer... initializers) {_		Assert.notNull(context, "Context must not be null")__		context.setTempDirectory(getTempDirectory())__		if (this.resourceLoader != null) {_			context.setClassLoader(this.resourceLoader.getClassLoader())__		}_		String contextPath = getContextPath()__		context.setContextPath(StringUtils.hasLength(contextPath) ? contextPath : "/")__		context.setDisplayName(getDisplayName())__		configureDocumentRoot(context)__		if (isRegisterDefaultServlet()) {_			addDefaultServlet(context)__		}_		if (shouldRegisterJspServlet()) {_			addJspServlet(context)__			context.addBean(new JasperInitializer(context), true)__		}_		addLocaleMappings(context)__		ServletContextInitializer[] initializersToUse = mergeInitializers(initializers)__		Configuration[] configurations = getWebAppContextConfigurations(context,_				initializersToUse)__		context.setConfigurations(configurations)__		configureSession(context)__		postProcessWebAppContext(context)__	};configure,the,given,jetty,link,web,app,context,for,use,param,context,the,context,to,configure,param,initializers,the,set,of,initializers,to,apply;protected,final,void,configure,web,app,context,web,app,context,context,servlet,context,initializer,initializers,assert,not,null,context,context,must,not,be,null,context,set,temp,directory,get,temp,directory,if,this,resource,loader,null,context,set,class,loader,this,resource,loader,get,class,loader,string,context,path,get,context,path,context,set,context,path,string,utils,has,length,context,path,context,path,context,set,display,name,get,display,name,configure,document,root,context,if,is,register,default,servlet,add,default,servlet,context,if,should,register,jsp,servlet,add,jsp,servlet,context,context,add,bean,new,jasper,initializer,context,true,add,locale,mappings,context,servlet,context,initializer,initializers,to,use,merge,initializers,initializers,configuration,configurations,get,web,app,context,configurations,context,initializers,to,use,context,set,configurations,configurations,configure,session,context,post,process,web,app,context,context
JettyServletWebServerFactory -> protected final void configureWebAppContext(WebAppContext context, 			ServletContextInitializer... initializers);1511157177;Configure the given Jetty {@link WebAppContext} for use._@param context the context to configure_@param initializers the set of initializers to apply;protected final void configureWebAppContext(WebAppContext context,_			ServletContextInitializer... initializers) {_		Assert.notNull(context, "Context must not be null")__		context.setTempDirectory(getTempDirectory())__		if (this.resourceLoader != null) {_			context.setClassLoader(this.resourceLoader.getClassLoader())__		}_		String contextPath = getContextPath()__		context.setContextPath(StringUtils.hasLength(contextPath) ? contextPath : "/")__		context.setDisplayName(getDisplayName())__		configureDocumentRoot(context)__		if (isRegisterDefaultServlet()) {_			addDefaultServlet(context)__		}_		if (shouldRegisterJspServlet()) {_			addJspServlet(context)__			context.addBean(new JasperInitializer(context), true)__		}_		addLocaleMappings(context)__		ServletContextInitializer[] initializersToUse = mergeInitializers(initializers)__		Configuration[] configurations = getWebAppContextConfigurations(context,_				initializersToUse)__		context.setConfigurations(configurations)__		configureSession(context)__		postProcessWebAppContext(context)__	};configure,the,given,jetty,link,web,app,context,for,use,param,context,the,context,to,configure,param,initializers,the,set,of,initializers,to,apply;protected,final,void,configure,web,app,context,web,app,context,context,servlet,context,initializer,initializers,assert,not,null,context,context,must,not,be,null,context,set,temp,directory,get,temp,directory,if,this,resource,loader,null,context,set,class,loader,this,resource,loader,get,class,loader,string,context,path,get,context,path,context,set,context,path,string,utils,has,length,context,path,context,path,context,set,display,name,get,display,name,configure,document,root,context,if,is,register,default,servlet,add,default,servlet,context,if,should,register,jsp,servlet,add,jsp,servlet,context,context,add,bean,new,jasper,initializer,context,true,add,locale,mappings,context,servlet,context,initializer,initializers,to,use,merge,initializers,initializers,configuration,configurations,get,web,app,context,configurations,context,initializers,to,use,context,set,configurations,configurations,configure,session,context,post,process,web,app,context,context
JettyServletWebServerFactory -> protected final void configureWebAppContext(WebAppContext context, 			ServletContextInitializer... initializers);1512201855;Configure the given Jetty {@link WebAppContext} for use._@param context the context to configure_@param initializers the set of initializers to apply;protected final void configureWebAppContext(WebAppContext context,_			ServletContextInitializer... initializers) {_		Assert.notNull(context, "Context must not be null")__		context.setTempDirectory(getTempDirectory())__		if (this.resourceLoader != null) {_			context.setClassLoader(this.resourceLoader.getClassLoader())__		}_		String contextPath = getContextPath()__		context.setContextPath(StringUtils.hasLength(contextPath) ? contextPath : "/")__		context.setDisplayName(getDisplayName())__		configureDocumentRoot(context)__		if (isRegisterDefaultServlet()) {_			addDefaultServlet(context)__		}_		if (shouldRegisterJspServlet()) {_			addJspServlet(context)__			context.addBean(new JasperInitializer(context), true)__		}_		addLocaleMappings(context)__		ServletContextInitializer[] initializersToUse = mergeInitializers(initializers)__		Configuration[] configurations = getWebAppContextConfigurations(context,_				initializersToUse)__		context.setConfigurations(configurations)__		configureSession(context)__		postProcessWebAppContext(context)__	};configure,the,given,jetty,link,web,app,context,for,use,param,context,the,context,to,configure,param,initializers,the,set,of,initializers,to,apply;protected,final,void,configure,web,app,context,web,app,context,context,servlet,context,initializer,initializers,assert,not,null,context,context,must,not,be,null,context,set,temp,directory,get,temp,directory,if,this,resource,loader,null,context,set,class,loader,this,resource,loader,get,class,loader,string,context,path,get,context,path,context,set,context,path,string,utils,has,length,context,path,context,path,context,set,display,name,get,display,name,configure,document,root,context,if,is,register,default,servlet,add,default,servlet,context,if,should,register,jsp,servlet,add,jsp,servlet,context,context,add,bean,new,jasper,initializer,context,true,add,locale,mappings,context,servlet,context,initializer,initializers,to,use,merge,initializers,initializers,configuration,configurations,get,web,app,context,configurations,context,initializers,to,use,context,set,configurations,configurations,configure,session,context,post,process,web,app,context,context
JettyServletWebServerFactory -> protected final void configureWebAppContext(WebAppContext context, 			ServletContextInitializer... initializers);1514997812;Configure the given Jetty {@link WebAppContext} for use._@param context the context to configure_@param initializers the set of initializers to apply;protected final void configureWebAppContext(WebAppContext context,_			ServletContextInitializer... initializers) {_		Assert.notNull(context, "Context must not be null")__		context.setTempDirectory(getTempDirectory())__		if (this.resourceLoader != null) {_			context.setClassLoader(this.resourceLoader.getClassLoader())__		}_		String contextPath = getContextPath()__		context.setContextPath(StringUtils.hasLength(contextPath) ? contextPath : "/")__		context.setDisplayName(getDisplayName())__		configureDocumentRoot(context)__		if (isRegisterDefaultServlet()) {_			addDefaultServlet(context)__		}_		if (shouldRegisterJspServlet()) {_			addJspServlet(context)__			context.addBean(new JasperInitializer(context), true)__		}_		addLocaleMappings(context)__		ServletContextInitializer[] initializersToUse = mergeInitializers(initializers)__		Configuration[] configurations = getWebAppContextConfigurations(context,_				initializersToUse)__		context.setConfigurations(configurations)__		configureSession(context)__		postProcessWebAppContext(context)__	};configure,the,given,jetty,link,web,app,context,for,use,param,context,the,context,to,configure,param,initializers,the,set,of,initializers,to,apply;protected,final,void,configure,web,app,context,web,app,context,context,servlet,context,initializer,initializers,assert,not,null,context,context,must,not,be,null,context,set,temp,directory,get,temp,directory,if,this,resource,loader,null,context,set,class,loader,this,resource,loader,get,class,loader,string,context,path,get,context,path,context,set,context,path,string,utils,has,length,context,path,context,path,context,set,display,name,get,display,name,configure,document,root,context,if,is,register,default,servlet,add,default,servlet,context,if,should,register,jsp,servlet,add,jsp,servlet,context,context,add,bean,new,jasper,initializer,context,true,add,locale,mappings,context,servlet,context,initializer,initializers,to,use,merge,initializers,initializers,configuration,configurations,get,web,app,context,configurations,context,initializers,to,use,context,set,configurations,configurations,configure,session,context,post,process,web,app,context,context
JettyServletWebServerFactory -> protected final void configureWebAppContext(WebAppContext context, 			ServletContextInitializer... initializers);1515014644;Configure the given Jetty {@link WebAppContext} for use._@param context the context to configure_@param initializers the set of initializers to apply;protected final void configureWebAppContext(WebAppContext context,_			ServletContextInitializer... initializers) {_		Assert.notNull(context, "Context must not be null")__		context.setTempDirectory(getTempDirectory())__		if (this.resourceLoader != null) {_			context.setClassLoader(this.resourceLoader.getClassLoader())__		}_		String contextPath = getContextPath()__		context.setContextPath(StringUtils.hasLength(contextPath) ? contextPath : "/")__		context.setDisplayName(getDisplayName())__		configureDocumentRoot(context)__		if (isRegisterDefaultServlet()) {_			addDefaultServlet(context)__		}_		if (shouldRegisterJspServlet()) {_			addJspServlet(context)__			context.addBean(new JasperInitializer(context), true)__		}_		addLocaleMappings(context)__		ServletContextInitializer[] initializersToUse = mergeInitializers(initializers)__		Configuration[] configurations = getWebAppContextConfigurations(context,_				initializersToUse)__		context.setConfigurations(configurations)__		configureSession(context)__		postProcessWebAppContext(context)__	};configure,the,given,jetty,link,web,app,context,for,use,param,context,the,context,to,configure,param,initializers,the,set,of,initializers,to,apply;protected,final,void,configure,web,app,context,web,app,context,context,servlet,context,initializer,initializers,assert,not,null,context,context,must,not,be,null,context,set,temp,directory,get,temp,directory,if,this,resource,loader,null,context,set,class,loader,this,resource,loader,get,class,loader,string,context,path,get,context,path,context,set,context,path,string,utils,has,length,context,path,context,path,context,set,display,name,get,display,name,configure,document,root,context,if,is,register,default,servlet,add,default,servlet,context,if,should,register,jsp,servlet,add,jsp,servlet,context,context,add,bean,new,jasper,initializer,context,true,add,locale,mappings,context,servlet,context,initializer,initializers,to,use,merge,initializers,initializers,configuration,configurations,get,web,app,context,configurations,context,initializers,to,use,context,set,configurations,configurations,configure,session,context,post,process,web,app,context,context
JettyServletWebServerFactory -> protected final void configureWebAppContext(WebAppContext context, 			ServletContextInitializer... initializers);1515665717;Configure the given Jetty {@link WebAppContext} for use._@param context the context to configure_@param initializers the set of initializers to apply;protected final void configureWebAppContext(WebAppContext context,_			ServletContextInitializer... initializers) {_		Assert.notNull(context, "Context must not be null")__		context.setTempDirectory(getTempDirectory())__		if (this.resourceLoader != null) {_			context.setClassLoader(this.resourceLoader.getClassLoader())__		}_		String contextPath = getContextPath()__		context.setContextPath(StringUtils.hasLength(contextPath) ? contextPath : "/")__		context.setDisplayName(getDisplayName())__		configureDocumentRoot(context)__		if (isRegisterDefaultServlet()) {_			addDefaultServlet(context)__		}_		if (shouldRegisterJspServlet()) {_			addJspServlet(context)__			context.addBean(new JasperInitializer(context), true)__		}_		addLocaleMappings(context)__		ServletContextInitializer[] initializersToUse = mergeInitializers(initializers)__		Configuration[] configurations = getWebAppContextConfigurations(context,_				initializersToUse)__		context.setConfigurations(configurations)__		configureSession(context)__		postProcessWebAppContext(context)__	};configure,the,given,jetty,link,web,app,context,for,use,param,context,the,context,to,configure,param,initializers,the,set,of,initializers,to,apply;protected,final,void,configure,web,app,context,web,app,context,context,servlet,context,initializer,initializers,assert,not,null,context,context,must,not,be,null,context,set,temp,directory,get,temp,directory,if,this,resource,loader,null,context,set,class,loader,this,resource,loader,get,class,loader,string,context,path,get,context,path,context,set,context,path,string,utils,has,length,context,path,context,path,context,set,display,name,get,display,name,configure,document,root,context,if,is,register,default,servlet,add,default,servlet,context,if,should,register,jsp,servlet,add,jsp,servlet,context,context,add,bean,new,jasper,initializer,context,true,add,locale,mappings,context,servlet,context,initializer,initializers,to,use,merge,initializers,initializers,configuration,configurations,get,web,app,context,configurations,context,initializers,to,use,context,set,configurations,configurations,configure,session,context,post,process,web,app,context,context
JettyServletWebServerFactory -> protected final void configureWebAppContext(WebAppContext context, 			ServletContextInitializer... initializers);1516114894;Configure the given Jetty {@link WebAppContext} for use._@param context the context to configure_@param initializers the set of initializers to apply;protected final void configureWebAppContext(WebAppContext context,_			ServletContextInitializer... initializers) {_		Assert.notNull(context, "Context must not be null")__		context.setTempDirectory(getTempDirectory())__		if (this.resourceLoader != null) {_			context.setClassLoader(this.resourceLoader.getClassLoader())__		}_		String contextPath = getContextPath()__		context.setContextPath(StringUtils.hasLength(contextPath) ? contextPath : "/")__		context.setDisplayName(getDisplayName())__		configureDocumentRoot(context)__		if (isRegisterDefaultServlet()) {_			addDefaultServlet(context)__		}_		if (shouldRegisterJspServlet()) {_			addJspServlet(context)__			context.addBean(new JasperInitializer(context), true)__		}_		addLocaleMappings(context)__		ServletContextInitializer[] initializersToUse = mergeInitializers(initializers)__		Configuration[] configurations = getWebAppContextConfigurations(context,_				initializersToUse)__		context.setConfigurations(configurations)__		configureSession(context)__		postProcessWebAppContext(context)__	};configure,the,given,jetty,link,web,app,context,for,use,param,context,the,context,to,configure,param,initializers,the,set,of,initializers,to,apply;protected,final,void,configure,web,app,context,web,app,context,context,servlet,context,initializer,initializers,assert,not,null,context,context,must,not,be,null,context,set,temp,directory,get,temp,directory,if,this,resource,loader,null,context,set,class,loader,this,resource,loader,get,class,loader,string,context,path,get,context,path,context,set,context,path,string,utils,has,length,context,path,context,path,context,set,display,name,get,display,name,configure,document,root,context,if,is,register,default,servlet,add,default,servlet,context,if,should,register,jsp,servlet,add,jsp,servlet,context,context,add,bean,new,jasper,initializer,context,true,add,locale,mappings,context,servlet,context,initializer,initializers,to,use,merge,initializers,initializers,configuration,configurations,get,web,app,context,configurations,context,initializers,to,use,context,set,configurations,configurations,configure,session,context,post,process,web,app,context,context
JettyServletWebServerFactory -> protected final void configureWebAppContext(WebAppContext context, 			ServletContextInitializer... initializers);1516210343;Configure the given Jetty {@link WebAppContext} for use._@param context the context to configure_@param initializers the set of initializers to apply;protected final void configureWebAppContext(WebAppContext context,_			ServletContextInitializer... initializers) {_		Assert.notNull(context, "Context must not be null")__		context.setTempDirectory(getTempDirectory())__		if (this.resourceLoader != null) {_			context.setClassLoader(this.resourceLoader.getClassLoader())__		}_		String contextPath = getContextPath()__		context.setContextPath(StringUtils.hasLength(contextPath) ? contextPath : "/")__		context.setDisplayName(getDisplayName())__		configureDocumentRoot(context)__		if (isRegisterDefaultServlet()) {_			addDefaultServlet(context)__		}_		if (shouldRegisterJspServlet()) {_			addJspServlet(context)__			context.addBean(new JasperInitializer(context), true)__		}_		addLocaleMappings(context)__		ServletContextInitializer[] initializersToUse = mergeInitializers(initializers)__		Configuration[] configurations = getWebAppContextConfigurations(context,_				initializersToUse)__		context.setConfigurations(configurations)__		configureSession(context)__		postProcessWebAppContext(context)__	};configure,the,given,jetty,link,web,app,context,for,use,param,context,the,context,to,configure,param,initializers,the,set,of,initializers,to,apply;protected,final,void,configure,web,app,context,web,app,context,context,servlet,context,initializer,initializers,assert,not,null,context,context,must,not,be,null,context,set,temp,directory,get,temp,directory,if,this,resource,loader,null,context,set,class,loader,this,resource,loader,get,class,loader,string,context,path,get,context,path,context,set,context,path,string,utils,has,length,context,path,context,path,context,set,display,name,get,display,name,configure,document,root,context,if,is,register,default,servlet,add,default,servlet,context,if,should,register,jsp,servlet,add,jsp,servlet,context,context,add,bean,new,jasper,initializer,context,true,add,locale,mappings,context,servlet,context,initializer,initializers,to,use,merge,initializers,initializers,configuration,configurations,get,web,app,context,configurations,context,initializers,to,use,context,set,configurations,configurations,configure,session,context,post,process,web,app,context,context
JettyServletWebServerFactory -> protected final void configureWebAppContext(WebAppContext context, 			ServletContextInitializer... initializers);1516215803;Configure the given Jetty {@link WebAppContext} for use._@param context the context to configure_@param initializers the set of initializers to apply;protected final void configureWebAppContext(WebAppContext context,_			ServletContextInitializer... initializers) {_		Assert.notNull(context, "Context must not be null")__		context.setTempDirectory(getTempDirectory())__		if (this.resourceLoader != null) {_			context.setClassLoader(this.resourceLoader.getClassLoader())__		}_		String contextPath = getContextPath()__		context.setContextPath(StringUtils.hasLength(contextPath) ? contextPath : "/")__		context.setDisplayName(getDisplayName())__		configureDocumentRoot(context)__		if (isRegisterDefaultServlet()) {_			addDefaultServlet(context)__		}_		if (shouldRegisterJspServlet()) {_			addJspServlet(context)__			context.addBean(new JasperInitializer(context), true)__		}_		addLocaleMappings(context)__		ServletContextInitializer[] initializersToUse = mergeInitializers(initializers)__		Configuration[] configurations = getWebAppContextConfigurations(context,_				initializersToUse)__		context.setConfigurations(configurations)__		configureSession(context)__		postProcessWebAppContext(context)__	};configure,the,given,jetty,link,web,app,context,for,use,param,context,the,context,to,configure,param,initializers,the,set,of,initializers,to,apply;protected,final,void,configure,web,app,context,web,app,context,context,servlet,context,initializer,initializers,assert,not,null,context,context,must,not,be,null,context,set,temp,directory,get,temp,directory,if,this,resource,loader,null,context,set,class,loader,this,resource,loader,get,class,loader,string,context,path,get,context,path,context,set,context,path,string,utils,has,length,context,path,context,path,context,set,display,name,get,display,name,configure,document,root,context,if,is,register,default,servlet,add,default,servlet,context,if,should,register,jsp,servlet,add,jsp,servlet,context,context,add,bean,new,jasper,initializer,context,true,add,locale,mappings,context,servlet,context,initializer,initializers,to,use,merge,initializers,initializers,configuration,configurations,get,web,app,context,configurations,context,initializers,to,use,context,set,configurations,configurations,configure,session,context,post,process,web,app,context,context
JettyServletWebServerFactory -> protected final void configureWebAppContext(WebAppContext context, 			ServletContextInitializer... initializers);1516346511;Configure the given Jetty {@link WebAppContext} for use._@param context the context to configure_@param initializers the set of initializers to apply;protected final void configureWebAppContext(WebAppContext context,_			ServletContextInitializer... initializers) {_		Assert.notNull(context, "Context must not be null")__		context.setTempDirectory(getTempDirectory())__		if (this.resourceLoader != null) {_			context.setClassLoader(this.resourceLoader.getClassLoader())__		}_		String contextPath = getContextPath()__		context.setContextPath(StringUtils.hasLength(contextPath) ? contextPath : "/")__		context.setDisplayName(getDisplayName())__		configureDocumentRoot(context)__		if (isRegisterDefaultServlet()) {_			addDefaultServlet(context)__		}_		if (shouldRegisterJspServlet()) {_			addJspServlet(context)__			context.addBean(new JasperInitializer(context), true)__		}_		addLocaleMappings(context)__		ServletContextInitializer[] initializersToUse = mergeInitializers(initializers)__		Configuration[] configurations = getWebAppContextConfigurations(context,_				initializersToUse)__		context.setConfigurations(configurations)__		configureSession(context)__		postProcessWebAppContext(context)__	};configure,the,given,jetty,link,web,app,context,for,use,param,context,the,context,to,configure,param,initializers,the,set,of,initializers,to,apply;protected,final,void,configure,web,app,context,web,app,context,context,servlet,context,initializer,initializers,assert,not,null,context,context,must,not,be,null,context,set,temp,directory,get,temp,directory,if,this,resource,loader,null,context,set,class,loader,this,resource,loader,get,class,loader,string,context,path,get,context,path,context,set,context,path,string,utils,has,length,context,path,context,path,context,set,display,name,get,display,name,configure,document,root,context,if,is,register,default,servlet,add,default,servlet,context,if,should,register,jsp,servlet,add,jsp,servlet,context,context,add,bean,new,jasper,initializer,context,true,add,locale,mappings,context,servlet,context,initializer,initializers,to,use,merge,initializers,initializers,configuration,configurations,get,web,app,context,configurations,context,initializers,to,use,context,set,configurations,configurations,configure,session,context,post,process,web,app,context,context
JettyServletWebServerFactory -> protected final void configureWebAppContext(WebAppContext context, 			ServletContextInitializer... initializers);1517419795;Configure the given Jetty {@link WebAppContext} for use._@param context the context to configure_@param initializers the set of initializers to apply;protected final void configureWebAppContext(WebAppContext context,_			ServletContextInitializer... initializers) {_		Assert.notNull(context, "Context must not be null")__		context.setTempDirectory(getTempDirectory())__		if (this.resourceLoader != null) {_			context.setClassLoader(this.resourceLoader.getClassLoader())__		}_		String contextPath = getContextPath()__		context.setContextPath(StringUtils.hasLength(contextPath) ? contextPath : "/")__		context.setDisplayName(getDisplayName())__		configureDocumentRoot(context)__		if (isRegisterDefaultServlet()) {_			addDefaultServlet(context)__		}_		if (shouldRegisterJspServlet()) {_			addJspServlet(context)__			context.addBean(new JasperInitializer(context), true)__		}_		addLocaleMappings(context)__		ServletContextInitializer[] initializersToUse = mergeInitializers(initializers)__		Configuration[] configurations = getWebAppContextConfigurations(context,_				initializersToUse)__		context.setConfigurations(configurations)__		configureSession(context)__		postProcessWebAppContext(context)__	};configure,the,given,jetty,link,web,app,context,for,use,param,context,the,context,to,configure,param,initializers,the,set,of,initializers,to,apply;protected,final,void,configure,web,app,context,web,app,context,context,servlet,context,initializer,initializers,assert,not,null,context,context,must,not,be,null,context,set,temp,directory,get,temp,directory,if,this,resource,loader,null,context,set,class,loader,this,resource,loader,get,class,loader,string,context,path,get,context,path,context,set,context,path,string,utils,has,length,context,path,context,path,context,set,display,name,get,display,name,configure,document,root,context,if,is,register,default,servlet,add,default,servlet,context,if,should,register,jsp,servlet,add,jsp,servlet,context,context,add,bean,new,jasper,initializer,context,true,add,locale,mappings,context,servlet,context,initializer,initializers,to,use,merge,initializers,initializers,configuration,configurations,get,web,app,context,configurations,context,initializers,to,use,context,set,configurations,configurations,configure,session,context,post,process,web,app,context,context
JettyServletWebServerFactory -> protected final void configureWebAppContext(WebAppContext context, 			ServletContextInitializer... initializers);1517583695;Configure the given Jetty {@link WebAppContext} for use._@param context the context to configure_@param initializers the set of initializers to apply;protected final void configureWebAppContext(WebAppContext context,_			ServletContextInitializer... initializers) {_		Assert.notNull(context, "Context must not be null")__		context.setTempDirectory(getTempDirectory())__		if (this.resourceLoader != null) {_			context.setClassLoader(this.resourceLoader.getClassLoader())__		}_		String contextPath = getContextPath()__		context.setContextPath(StringUtils.hasLength(contextPath) ? contextPath : "/")__		context.setDisplayName(getDisplayName())__		configureDocumentRoot(context)__		if (isRegisterDefaultServlet()) {_			addDefaultServlet(context)__		}_		if (shouldRegisterJspServlet()) {_			addJspServlet(context)__			context.addBean(new JasperInitializer(context), true)__		}_		addLocaleMappings(context)__		ServletContextInitializer[] initializersToUse = mergeInitializers(initializers)__		Configuration[] configurations = getWebAppContextConfigurations(context,_				initializersToUse)__		context.setConfigurations(configurations)__		configureSession(context)__		postProcessWebAppContext(context)__	};configure,the,given,jetty,link,web,app,context,for,use,param,context,the,context,to,configure,param,initializers,the,set,of,initializers,to,apply;protected,final,void,configure,web,app,context,web,app,context,context,servlet,context,initializer,initializers,assert,not,null,context,context,must,not,be,null,context,set,temp,directory,get,temp,directory,if,this,resource,loader,null,context,set,class,loader,this,resource,loader,get,class,loader,string,context,path,get,context,path,context,set,context,path,string,utils,has,length,context,path,context,path,context,set,display,name,get,display,name,configure,document,root,context,if,is,register,default,servlet,add,default,servlet,context,if,should,register,jsp,servlet,add,jsp,servlet,context,context,add,bean,new,jasper,initializer,context,true,add,locale,mappings,context,servlet,context,initializer,initializers,to,use,merge,initializers,initializers,configuration,configurations,get,web,app,context,configurations,context,initializers,to,use,context,set,configurations,configurations,configure,session,context,post,process,web,app,context,context
JettyServletWebServerFactory -> protected final void configureWebAppContext(WebAppContext context, 			ServletContextInitializer... initializers);1519362690;Configure the given Jetty {@link WebAppContext} for use._@param context the context to configure_@param initializers the set of initializers to apply;protected final void configureWebAppContext(WebAppContext context,_			ServletContextInitializer... initializers) {_		Assert.notNull(context, "Context must not be null")__		context.setTempDirectory(getTempDirectory())__		if (this.resourceLoader != null) {_			context.setClassLoader(this.resourceLoader.getClassLoader())__		}_		String contextPath = getContextPath()__		context.setContextPath(StringUtils.hasLength(contextPath) ? contextPath : "/")__		context.setDisplayName(getDisplayName())__		configureDocumentRoot(context)__		if (isRegisterDefaultServlet()) {_			addDefaultServlet(context)__		}_		if (shouldRegisterJspServlet()) {_			addJspServlet(context)__			context.addBean(new JasperInitializer(context), true)__		}_		addLocaleMappings(context)__		ServletContextInitializer[] initializersToUse = mergeInitializers(initializers)__		Configuration[] configurations = getWebAppContextConfigurations(context,_				initializersToUse)__		context.setConfigurations(configurations)__		configureSession(context)__		postProcessWebAppContext(context)__	};configure,the,given,jetty,link,web,app,context,for,use,param,context,the,context,to,configure,param,initializers,the,set,of,initializers,to,apply;protected,final,void,configure,web,app,context,web,app,context,context,servlet,context,initializer,initializers,assert,not,null,context,context,must,not,be,null,context,set,temp,directory,get,temp,directory,if,this,resource,loader,null,context,set,class,loader,this,resource,loader,get,class,loader,string,context,path,get,context,path,context,set,context,path,string,utils,has,length,context,path,context,path,context,set,display,name,get,display,name,configure,document,root,context,if,is,register,default,servlet,add,default,servlet,context,if,should,register,jsp,servlet,add,jsp,servlet,context,context,add,bean,new,jasper,initializer,context,true,add,locale,mappings,context,servlet,context,initializer,initializers,to,use,merge,initializers,initializers,configuration,configurations,get,web,app,context,configurations,context,initializers,to,use,context,set,configurations,configurations,configure,session,context,post,process,web,app,context,context
JettyServletWebServerFactory -> protected final void configureWebAppContext(WebAppContext context, 			ServletContextInitializer... initializers);1519742833;Configure the given Jetty {@link WebAppContext} for use._@param context the context to configure_@param initializers the set of initializers to apply;protected final void configureWebAppContext(WebAppContext context,_			ServletContextInitializer... initializers) {_		Assert.notNull(context, "Context must not be null")__		context.setTempDirectory(getTempDirectory())__		if (this.resourceLoader != null) {_			context.setClassLoader(this.resourceLoader.getClassLoader())__		}_		String contextPath = getContextPath()__		context.setContextPath(StringUtils.hasLength(contextPath) ? contextPath : "/")__		context.setDisplayName(getDisplayName())__		configureDocumentRoot(context)__		if (isRegisterDefaultServlet()) {_			addDefaultServlet(context)__		}_		if (shouldRegisterJspServlet()) {_			addJspServlet(context)__			context.addBean(new JasperInitializer(context), true)__		}_		addLocaleMappings(context)__		ServletContextInitializer[] initializersToUse = mergeInitializers(initializers)__		Configuration[] configurations = getWebAppContextConfigurations(context,_				initializersToUse)__		context.setConfigurations(configurations)__		configureSession(context)__		postProcessWebAppContext(context)__	};configure,the,given,jetty,link,web,app,context,for,use,param,context,the,context,to,configure,param,initializers,the,set,of,initializers,to,apply;protected,final,void,configure,web,app,context,web,app,context,context,servlet,context,initializer,initializers,assert,not,null,context,context,must,not,be,null,context,set,temp,directory,get,temp,directory,if,this,resource,loader,null,context,set,class,loader,this,resource,loader,get,class,loader,string,context,path,get,context,path,context,set,context,path,string,utils,has,length,context,path,context,path,context,set,display,name,get,display,name,configure,document,root,context,if,is,register,default,servlet,add,default,servlet,context,if,should,register,jsp,servlet,add,jsp,servlet,context,context,add,bean,new,jasper,initializer,context,true,add,locale,mappings,context,servlet,context,initializer,initializers,to,use,merge,initializers,initializers,configuration,configurations,get,web,app,context,configurations,context,initializers,to,use,context,set,configurations,configurations,configure,session,context,post,process,web,app,context,context
JettyServletWebServerFactory -> protected final void configureWebAppContext(WebAppContext context, 			ServletContextInitializer... initializers);1519817048;Configure the given Jetty {@link WebAppContext} for use._@param context the context to configure_@param initializers the set of initializers to apply;protected final void configureWebAppContext(WebAppContext context,_			ServletContextInitializer... initializers) {_		Assert.notNull(context, "Context must not be null")__		context.setTempDirectory(getTempDirectory())__		if (this.resourceLoader != null) {_			context.setClassLoader(this.resourceLoader.getClassLoader())__		}_		String contextPath = getContextPath()__		context.setContextPath(StringUtils.hasLength(contextPath) ? contextPath : "/")__		context.setDisplayName(getDisplayName())__		configureDocumentRoot(context)__		if (isRegisterDefaultServlet()) {_			addDefaultServlet(context)__		}_		if (shouldRegisterJspServlet()) {_			addJspServlet(context)__			context.addBean(new JasperInitializer(context), true)__		}_		addLocaleMappings(context)__		ServletContextInitializer[] initializersToUse = mergeInitializers(initializers)__		Configuration[] configurations = getWebAppContextConfigurations(context,_				initializersToUse)__		context.setConfigurations(configurations)__		configureSession(context)__		postProcessWebAppContext(context)__	};configure,the,given,jetty,link,web,app,context,for,use,param,context,the,context,to,configure,param,initializers,the,set,of,initializers,to,apply;protected,final,void,configure,web,app,context,web,app,context,context,servlet,context,initializer,initializers,assert,not,null,context,context,must,not,be,null,context,set,temp,directory,get,temp,directory,if,this,resource,loader,null,context,set,class,loader,this,resource,loader,get,class,loader,string,context,path,get,context,path,context,set,context,path,string,utils,has,length,context,path,context,path,context,set,display,name,get,display,name,configure,document,root,context,if,is,register,default,servlet,add,default,servlet,context,if,should,register,jsp,servlet,add,jsp,servlet,context,context,add,bean,new,jasper,initializer,context,true,add,locale,mappings,context,servlet,context,initializer,initializers,to,use,merge,initializers,initializers,configuration,configurations,get,web,app,context,configurations,context,initializers,to,use,context,set,configurations,configurations,configure,session,context,post,process,web,app,context,context
JettyServletWebServerFactory -> protected final void configureWebAppContext(WebAppContext context, 			ServletContextInitializer... initializers);1521460869;Configure the given Jetty {@link WebAppContext} for use._@param context the context to configure_@param initializers the set of initializers to apply;protected final void configureWebAppContext(WebAppContext context,_			ServletContextInitializer... initializers) {_		Assert.notNull(context, "Context must not be null")__		context.setTempDirectory(getTempDirectory())__		if (this.resourceLoader != null) {_			context.setClassLoader(this.resourceLoader.getClassLoader())__		}_		String contextPath = getContextPath()__		context.setContextPath(StringUtils.hasLength(contextPath) ? contextPath : "/")__		context.setDisplayName(getDisplayName())__		configureDocumentRoot(context)__		if (isRegisterDefaultServlet()) {_			addDefaultServlet(context)__		}_		if (shouldRegisterJspServlet()) {_			addJspServlet(context)__			context.addBean(new JasperInitializer(context), true)__		}_		addLocaleMappings(context)__		ServletContextInitializer[] initializersToUse = mergeInitializers(initializers)__		Configuration[] configurations = getWebAppContextConfigurations(context,_				initializersToUse)__		context.setConfigurations(configurations)__		configureSession(context)__		postProcessWebAppContext(context)__	};configure,the,given,jetty,link,web,app,context,for,use,param,context,the,context,to,configure,param,initializers,the,set,of,initializers,to,apply;protected,final,void,configure,web,app,context,web,app,context,context,servlet,context,initializer,initializers,assert,not,null,context,context,must,not,be,null,context,set,temp,directory,get,temp,directory,if,this,resource,loader,null,context,set,class,loader,this,resource,loader,get,class,loader,string,context,path,get,context,path,context,set,context,path,string,utils,has,length,context,path,context,path,context,set,display,name,get,display,name,configure,document,root,context,if,is,register,default,servlet,add,default,servlet,context,if,should,register,jsp,servlet,add,jsp,servlet,context,context,add,bean,new,jasper,initializer,context,true,add,locale,mappings,context,servlet,context,initializer,initializers,to,use,merge,initializers,initializers,configuration,configurations,get,web,app,context,configurations,context,initializers,to,use,context,set,configurations,configurations,configure,session,context,post,process,web,app,context,context
JettyServletWebServerFactory -> protected final void configureWebAppContext(WebAppContext context, 			ServletContextInitializer... initializers);1525255067;Configure the given Jetty {@link WebAppContext} for use._@param context the context to configure_@param initializers the set of initializers to apply;protected final void configureWebAppContext(WebAppContext context,_			ServletContextInitializer... initializers) {_		Assert.notNull(context, "Context must not be null")__		context.setTempDirectory(getTempDirectory())__		if (this.resourceLoader != null) {_			context.setClassLoader(this.resourceLoader.getClassLoader())__		}_		String contextPath = getContextPath()__		context.setContextPath(StringUtils.hasLength(contextPath) ? contextPath : "/")__		context.setDisplayName(getDisplayName())__		configureDocumentRoot(context)__		if (isRegisterDefaultServlet()) {_			addDefaultServlet(context)__		}_		if (shouldRegisterJspServlet()) {_			addJspServlet(context)__			context.addBean(new JasperInitializer(context), true)__		}_		addLocaleMappings(context)__		ServletContextInitializer[] initializersToUse = mergeInitializers(initializers)__		Configuration[] configurations = getWebAppContextConfigurations(context,_				initializersToUse)__		context.setConfigurations(configurations)__		configureSession(context)__		postProcessWebAppContext(context)__	};configure,the,given,jetty,link,web,app,context,for,use,param,context,the,context,to,configure,param,initializers,the,set,of,initializers,to,apply;protected,final,void,configure,web,app,context,web,app,context,context,servlet,context,initializer,initializers,assert,not,null,context,context,must,not,be,null,context,set,temp,directory,get,temp,directory,if,this,resource,loader,null,context,set,class,loader,this,resource,loader,get,class,loader,string,context,path,get,context,path,context,set,context,path,string,utils,has,length,context,path,context,path,context,set,display,name,get,display,name,configure,document,root,context,if,is,register,default,servlet,add,default,servlet,context,if,should,register,jsp,servlet,add,jsp,servlet,context,context,add,bean,new,jasper,initializer,context,true,add,locale,mappings,context,servlet,context,initializer,initializers,to,use,merge,initializers,initializers,configuration,configurations,get,web,app,context,configurations,context,initializers,to,use,context,set,configurations,configurations,configure,session,context,post,process,web,app,context,context
JettyServletWebServerFactory -> protected final void configureWebAppContext(WebAppContext context, 			ServletContextInitializer... initializers);1525416882;Configure the given Jetty {@link WebAppContext} for use._@param context the context to configure_@param initializers the set of initializers to apply;protected final void configureWebAppContext(WebAppContext context,_			ServletContextInitializer... initializers) {_		Assert.notNull(context, "Context must not be null")__		context.setTempDirectory(getTempDirectory())__		if (this.resourceLoader != null) {_			context.setClassLoader(this.resourceLoader.getClassLoader())__		}_		String contextPath = getContextPath()__		context.setContextPath(StringUtils.hasLength(contextPath) ? contextPath : "/")__		context.setDisplayName(getDisplayName())__		configureDocumentRoot(context)__		if (isRegisterDefaultServlet()) {_			addDefaultServlet(context)__		}_		if (shouldRegisterJspServlet()) {_			addJspServlet(context)__			context.addBean(new JasperInitializer(context), true)__		}_		addLocaleMappings(context)__		ServletContextInitializer[] initializersToUse = mergeInitializers(initializers)__		Configuration[] configurations = getWebAppContextConfigurations(context,_				initializersToUse)__		context.setConfigurations(configurations)__		configureSession(context)__		postProcessWebAppContext(context)__	};configure,the,given,jetty,link,web,app,context,for,use,param,context,the,context,to,configure,param,initializers,the,set,of,initializers,to,apply;protected,final,void,configure,web,app,context,web,app,context,context,servlet,context,initializer,initializers,assert,not,null,context,context,must,not,be,null,context,set,temp,directory,get,temp,directory,if,this,resource,loader,null,context,set,class,loader,this,resource,loader,get,class,loader,string,context,path,get,context,path,context,set,context,path,string,utils,has,length,context,path,context,path,context,set,display,name,get,display,name,configure,document,root,context,if,is,register,default,servlet,add,default,servlet,context,if,should,register,jsp,servlet,add,jsp,servlet,context,context,add,bean,new,jasper,initializer,context,true,add,locale,mappings,context,servlet,context,initializer,initializers,to,use,merge,initializers,initializers,configuration,configurations,get,web,app,context,configurations,context,initializers,to,use,context,set,configurations,configurations,configure,session,context,post,process,web,app,context,context
JettyServletWebServerFactory -> protected final void configureWebAppContext(WebAppContext context, 			ServletContextInitializer... initializers);1531909335;Configure the given Jetty {@link WebAppContext} for use._@param context the context to configure_@param initializers the set of initializers to apply;protected final void configureWebAppContext(WebAppContext context,_			ServletContextInitializer... initializers) {_		Assert.notNull(context, "Context must not be null")__		context.setTempDirectory(getTempDirectory())__		if (this.resourceLoader != null) {_			context.setClassLoader(this.resourceLoader.getClassLoader())__		}_		String contextPath = getContextPath()__		context.setContextPath(StringUtils.hasLength(contextPath) ? contextPath : "/")__		context.setDisplayName(getDisplayName())__		configureDocumentRoot(context)__		if (isRegisterDefaultServlet()) {_			addDefaultServlet(context)__		}_		if (shouldRegisterJspServlet()) {_			addJspServlet(context)__			context.addBean(new JasperInitializer(context), true)__		}_		addLocaleMappings(context)__		ServletContextInitializer[] initializersToUse = mergeInitializers(initializers)__		Configuration[] configurations = getWebAppContextConfigurations(context,_				initializersToUse)__		context.setConfigurations(configurations)__		context.setThrowUnavailableOnStartupException(true)__		configureSession(context)__		postProcessWebAppContext(context)__	};configure,the,given,jetty,link,web,app,context,for,use,param,context,the,context,to,configure,param,initializers,the,set,of,initializers,to,apply;protected,final,void,configure,web,app,context,web,app,context,context,servlet,context,initializer,initializers,assert,not,null,context,context,must,not,be,null,context,set,temp,directory,get,temp,directory,if,this,resource,loader,null,context,set,class,loader,this,resource,loader,get,class,loader,string,context,path,get,context,path,context,set,context,path,string,utils,has,length,context,path,context,path,context,set,display,name,get,display,name,configure,document,root,context,if,is,register,default,servlet,add,default,servlet,context,if,should,register,jsp,servlet,add,jsp,servlet,context,context,add,bean,new,jasper,initializer,context,true,add,locale,mappings,context,servlet,context,initializer,initializers,to,use,merge,initializers,initializers,configuration,configurations,get,web,app,context,configurations,context,initializers,to,use,context,set,configurations,configurations,context,set,throw,unavailable,on,startup,exception,true,configure,session,context,post,process,web,app,context,context
JettyServletWebServerFactory -> protected final void configureWebAppContext(WebAppContext context, 			ServletContextInitializer... initializers);1532738143;Configure the given Jetty {@link WebAppContext} for use._@param context the context to configure_@param initializers the set of initializers to apply;protected final void configureWebAppContext(WebAppContext context,_			ServletContextInitializer... initializers) {_		Assert.notNull(context, "Context must not be null")__		context.setTempDirectory(getTempDirectory())__		if (this.resourceLoader != null) {_			context.setClassLoader(this.resourceLoader.getClassLoader())__		}_		String contextPath = getContextPath()__		context.setContextPath(StringUtils.hasLength(contextPath) ? contextPath : "/")__		context.setDisplayName(getDisplayName())__		configureDocumentRoot(context)__		if (isRegisterDefaultServlet()) {_			addDefaultServlet(context)__		}_		if (shouldRegisterJspServlet()) {_			addJspServlet(context)__			context.addBean(new JasperInitializer(context), true)__		}_		addLocaleMappings(context)__		ServletContextInitializer[] initializersToUse = mergeInitializers(initializers)__		Configuration[] configurations = getWebAppContextConfigurations(context,_				initializersToUse)__		context.setConfigurations(configurations)__		context.setThrowUnavailableOnStartupException(true)__		configureSession(context)__		postProcessWebAppContext(context)__	};configure,the,given,jetty,link,web,app,context,for,use,param,context,the,context,to,configure,param,initializers,the,set,of,initializers,to,apply;protected,final,void,configure,web,app,context,web,app,context,context,servlet,context,initializer,initializers,assert,not,null,context,context,must,not,be,null,context,set,temp,directory,get,temp,directory,if,this,resource,loader,null,context,set,class,loader,this,resource,loader,get,class,loader,string,context,path,get,context,path,context,set,context,path,string,utils,has,length,context,path,context,path,context,set,display,name,get,display,name,configure,document,root,context,if,is,register,default,servlet,add,default,servlet,context,if,should,register,jsp,servlet,add,jsp,servlet,context,context,add,bean,new,jasper,initializer,context,true,add,locale,mappings,context,servlet,context,initializer,initializers,to,use,merge,initializers,initializers,configuration,configurations,get,web,app,context,configurations,context,initializers,to,use,context,set,configurations,configurations,context,set,throw,unavailable,on,startup,exception,true,configure,session,context,post,process,web,app,context,context
JettyServletWebServerFactory -> public JettyServletWebServerFactory(int port);1507173536;Create a new {@link JettyServletWebServerFactory} that listens for requests using_the specified port._@param port the port to listen on;public JettyServletWebServerFactory(int port) {_		super(port)__	};create,a,new,link,jetty,servlet,web,server,factory,that,listens,for,requests,using,the,specified,port,param,port,the,port,to,listen,on;public,jetty,servlet,web,server,factory,int,port,super,port
JettyServletWebServerFactory -> public JettyServletWebServerFactory(int port);1509713766;Create a new {@link JettyServletWebServerFactory} that listens for requests using_the specified port._@param port the port to listen on;public JettyServletWebServerFactory(int port) {_		super(port)__	};create,a,new,link,jetty,servlet,web,server,factory,that,listens,for,requests,using,the,specified,port,param,port,the,port,to,listen,on;public,jetty,servlet,web,server,factory,int,port,super,port
JettyServletWebServerFactory -> public JettyServletWebServerFactory(int port);1509761243;Create a new {@link JettyServletWebServerFactory} that listens for requests using_the specified port._@param port the port to listen on;public JettyServletWebServerFactory(int port) {_		super(port)__	};create,a,new,link,jetty,servlet,web,server,factory,that,listens,for,requests,using,the,specified,port,param,port,the,port,to,listen,on;public,jetty,servlet,web,server,factory,int,port,super,port
JettyServletWebServerFactory -> public JettyServletWebServerFactory(int port);1510965901;Create a new {@link JettyServletWebServerFactory} that listens for requests using_the specified port._@param port the port to listen on;public JettyServletWebServerFactory(int port) {_		super(port)__	};create,a,new,link,jetty,servlet,web,server,factory,that,listens,for,requests,using,the,specified,port,param,port,the,port,to,listen,on;public,jetty,servlet,web,server,factory,int,port,super,port
JettyServletWebServerFactory -> public JettyServletWebServerFactory(int port);1511157177;Create a new {@link JettyServletWebServerFactory} that listens for requests using_the specified port._@param port the port to listen on;public JettyServletWebServerFactory(int port) {_		super(port)__	};create,a,new,link,jetty,servlet,web,server,factory,that,listens,for,requests,using,the,specified,port,param,port,the,port,to,listen,on;public,jetty,servlet,web,server,factory,int,port,super,port
JettyServletWebServerFactory -> public JettyServletWebServerFactory(int port);1512201855;Create a new {@link JettyServletWebServerFactory} that listens for requests using_the specified port._@param port the port to listen on;public JettyServletWebServerFactory(int port) {_		super(port)__	};create,a,new,link,jetty,servlet,web,server,factory,that,listens,for,requests,using,the,specified,port,param,port,the,port,to,listen,on;public,jetty,servlet,web,server,factory,int,port,super,port
JettyServletWebServerFactory -> public JettyServletWebServerFactory(int port);1514997812;Create a new {@link JettyServletWebServerFactory} that listens for requests using_the specified port._@param port the port to listen on;public JettyServletWebServerFactory(int port) {_		super(port)__	};create,a,new,link,jetty,servlet,web,server,factory,that,listens,for,requests,using,the,specified,port,param,port,the,port,to,listen,on;public,jetty,servlet,web,server,factory,int,port,super,port
JettyServletWebServerFactory -> public JettyServletWebServerFactory(int port);1515014644;Create a new {@link JettyServletWebServerFactory} that listens for requests using_the specified port._@param port the port to listen on;public JettyServletWebServerFactory(int port) {_		super(port)__	};create,a,new,link,jetty,servlet,web,server,factory,that,listens,for,requests,using,the,specified,port,param,port,the,port,to,listen,on;public,jetty,servlet,web,server,factory,int,port,super,port
JettyServletWebServerFactory -> public JettyServletWebServerFactory(int port);1515665717;Create a new {@link JettyServletWebServerFactory} that listens for requests using_the specified port._@param port the port to listen on;public JettyServletWebServerFactory(int port) {_		super(port)__	};create,a,new,link,jetty,servlet,web,server,factory,that,listens,for,requests,using,the,specified,port,param,port,the,port,to,listen,on;public,jetty,servlet,web,server,factory,int,port,super,port
JettyServletWebServerFactory -> public JettyServletWebServerFactory(int port);1516114894;Create a new {@link JettyServletWebServerFactory} that listens for requests using_the specified port._@param port the port to listen on;public JettyServletWebServerFactory(int port) {_		super(port)__	};create,a,new,link,jetty,servlet,web,server,factory,that,listens,for,requests,using,the,specified,port,param,port,the,port,to,listen,on;public,jetty,servlet,web,server,factory,int,port,super,port
JettyServletWebServerFactory -> public JettyServletWebServerFactory(int port);1516210343;Create a new {@link JettyServletWebServerFactory} that listens for requests using_the specified port._@param port the port to listen on;public JettyServletWebServerFactory(int port) {_		super(port)__	};create,a,new,link,jetty,servlet,web,server,factory,that,listens,for,requests,using,the,specified,port,param,port,the,port,to,listen,on;public,jetty,servlet,web,server,factory,int,port,super,port
JettyServletWebServerFactory -> public JettyServletWebServerFactory(int port);1516215803;Create a new {@link JettyServletWebServerFactory} that listens for requests using_the specified port._@param port the port to listen on;public JettyServletWebServerFactory(int port) {_		super(port)__	};create,a,new,link,jetty,servlet,web,server,factory,that,listens,for,requests,using,the,specified,port,param,port,the,port,to,listen,on;public,jetty,servlet,web,server,factory,int,port,super,port
JettyServletWebServerFactory -> public JettyServletWebServerFactory(int port);1516346511;Create a new {@link JettyServletWebServerFactory} that listens for requests using_the specified port._@param port the port to listen on;public JettyServletWebServerFactory(int port) {_		super(port)__	};create,a,new,link,jetty,servlet,web,server,factory,that,listens,for,requests,using,the,specified,port,param,port,the,port,to,listen,on;public,jetty,servlet,web,server,factory,int,port,super,port
JettyServletWebServerFactory -> public JettyServletWebServerFactory(int port);1517419795;Create a new {@link JettyServletWebServerFactory} that listens for requests using_the specified port._@param port the port to listen on;public JettyServletWebServerFactory(int port) {_		super(port)__	};create,a,new,link,jetty,servlet,web,server,factory,that,listens,for,requests,using,the,specified,port,param,port,the,port,to,listen,on;public,jetty,servlet,web,server,factory,int,port,super,port
JettyServletWebServerFactory -> public JettyServletWebServerFactory(int port);1517583695;Create a new {@link JettyServletWebServerFactory} that listens for requests using_the specified port._@param port the port to listen on;public JettyServletWebServerFactory(int port) {_		super(port)__	};create,a,new,link,jetty,servlet,web,server,factory,that,listens,for,requests,using,the,specified,port,param,port,the,port,to,listen,on;public,jetty,servlet,web,server,factory,int,port,super,port
JettyServletWebServerFactory -> public JettyServletWebServerFactory(int port);1519362690;Create a new {@link JettyServletWebServerFactory} that listens for requests using_the specified port._@param port the port to listen on;public JettyServletWebServerFactory(int port) {_		super(port)__	};create,a,new,link,jetty,servlet,web,server,factory,that,listens,for,requests,using,the,specified,port,param,port,the,port,to,listen,on;public,jetty,servlet,web,server,factory,int,port,super,port
JettyServletWebServerFactory -> public JettyServletWebServerFactory(int port);1519742833;Create a new {@link JettyServletWebServerFactory} that listens for requests using_the specified port._@param port the port to listen on;public JettyServletWebServerFactory(int port) {_		super(port)__	};create,a,new,link,jetty,servlet,web,server,factory,that,listens,for,requests,using,the,specified,port,param,port,the,port,to,listen,on;public,jetty,servlet,web,server,factory,int,port,super,port
JettyServletWebServerFactory -> public JettyServletWebServerFactory(int port);1519817048;Create a new {@link JettyServletWebServerFactory} that listens for requests using_the specified port._@param port the port to listen on;public JettyServletWebServerFactory(int port) {_		super(port)__	};create,a,new,link,jetty,servlet,web,server,factory,that,listens,for,requests,using,the,specified,port,param,port,the,port,to,listen,on;public,jetty,servlet,web,server,factory,int,port,super,port
JettyServletWebServerFactory -> public JettyServletWebServerFactory(int port);1521460869;Create a new {@link JettyServletWebServerFactory} that listens for requests using_the specified port._@param port the port to listen on;public JettyServletWebServerFactory(int port) {_		super(port)__	};create,a,new,link,jetty,servlet,web,server,factory,that,listens,for,requests,using,the,specified,port,param,port,the,port,to,listen,on;public,jetty,servlet,web,server,factory,int,port,super,port
JettyServletWebServerFactory -> public JettyServletWebServerFactory(int port);1525255067;Create a new {@link JettyServletWebServerFactory} that listens for requests using_the specified port._@param port the port to listen on;public JettyServletWebServerFactory(int port) {_		super(port)__	};create,a,new,link,jetty,servlet,web,server,factory,that,listens,for,requests,using,the,specified,port,param,port,the,port,to,listen,on;public,jetty,servlet,web,server,factory,int,port,super,port
JettyServletWebServerFactory -> public JettyServletWebServerFactory(int port);1525416882;Create a new {@link JettyServletWebServerFactory} that listens for requests using_the specified port._@param port the port to listen on;public JettyServletWebServerFactory(int port) {_		super(port)__	};create,a,new,link,jetty,servlet,web,server,factory,that,listens,for,requests,using,the,specified,port,param,port,the,port,to,listen,on;public,jetty,servlet,web,server,factory,int,port,super,port
JettyServletWebServerFactory -> public JettyServletWebServerFactory(int port);1531909335;Create a new {@link JettyServletWebServerFactory} that listens for requests using_the specified port._@param port the port to listen on;public JettyServletWebServerFactory(int port) {_		super(port)__	};create,a,new,link,jetty,servlet,web,server,factory,that,listens,for,requests,using,the,specified,port,param,port,the,port,to,listen,on;public,jetty,servlet,web,server,factory,int,port,super,port
JettyServletWebServerFactory -> public JettyServletWebServerFactory(int port);1532738143;Create a new {@link JettyServletWebServerFactory} that listens for requests using_the specified port._@param port the port to listen on;public JettyServletWebServerFactory(int port) {_		super(port)__	};create,a,new,link,jetty,servlet,web,server,factory,that,listens,for,requests,using,the,specified,port,param,port,the,port,to,listen,on;public,jetty,servlet,web,server,factory,int,port,super,port
JettyServletWebServerFactory -> protected void postProcessWebAppContext(WebAppContext webAppContext);1507173536;Post process the Jetty {@link WebAppContext} before it's used with the Jetty_Server. Subclasses can override this method to apply additional processing to the_{@link WebAppContext}._@param webAppContext the Jetty {@link WebAppContext};protected void postProcessWebAppContext(WebAppContext webAppContext) {_	};post,process,the,jetty,link,web,app,context,before,it,s,used,with,the,jetty,server,subclasses,can,override,this,method,to,apply,additional,processing,to,the,link,web,app,context,param,web,app,context,the,jetty,link,web,app,context;protected,void,post,process,web,app,context,web,app,context,web,app,context
JettyServletWebServerFactory -> protected void postProcessWebAppContext(WebAppContext webAppContext);1509713766;Post process the Jetty {@link WebAppContext} before it's used with the Jetty_Server. Subclasses can override this method to apply additional processing to the_{@link WebAppContext}._@param webAppContext the Jetty {@link WebAppContext};protected void postProcessWebAppContext(WebAppContext webAppContext) {_	};post,process,the,jetty,link,web,app,context,before,it,s,used,with,the,jetty,server,subclasses,can,override,this,method,to,apply,additional,processing,to,the,link,web,app,context,param,web,app,context,the,jetty,link,web,app,context;protected,void,post,process,web,app,context,web,app,context,web,app,context
JettyServletWebServerFactory -> protected void postProcessWebAppContext(WebAppContext webAppContext);1509761243;Post process the Jetty {@link WebAppContext} before it's used with the Jetty_Server. Subclasses can override this method to apply additional processing to the_{@link WebAppContext}._@param webAppContext the Jetty {@link WebAppContext};protected void postProcessWebAppContext(WebAppContext webAppContext) {_	};post,process,the,jetty,link,web,app,context,before,it,s,used,with,the,jetty,server,subclasses,can,override,this,method,to,apply,additional,processing,to,the,link,web,app,context,param,web,app,context,the,jetty,link,web,app,context;protected,void,post,process,web,app,context,web,app,context,web,app,context
JettyServletWebServerFactory -> protected void postProcessWebAppContext(WebAppContext webAppContext);1510965901;Post process the Jetty {@link WebAppContext} before it's used with the Jetty_Server. Subclasses can override this method to apply additional processing to the_{@link WebAppContext}._@param webAppContext the Jetty {@link WebAppContext};protected void postProcessWebAppContext(WebAppContext webAppContext) {_	};post,process,the,jetty,link,web,app,context,before,it,s,used,with,the,jetty,server,subclasses,can,override,this,method,to,apply,additional,processing,to,the,link,web,app,context,param,web,app,context,the,jetty,link,web,app,context;protected,void,post,process,web,app,context,web,app,context,web,app,context
JettyServletWebServerFactory -> protected void postProcessWebAppContext(WebAppContext webAppContext);1511157177;Post process the Jetty {@link WebAppContext} before it's used with the Jetty_Server. Subclasses can override this method to apply additional processing to the_{@link WebAppContext}._@param webAppContext the Jetty {@link WebAppContext};protected void postProcessWebAppContext(WebAppContext webAppContext) {_	};post,process,the,jetty,link,web,app,context,before,it,s,used,with,the,jetty,server,subclasses,can,override,this,method,to,apply,additional,processing,to,the,link,web,app,context,param,web,app,context,the,jetty,link,web,app,context;protected,void,post,process,web,app,context,web,app,context,web,app,context
JettyServletWebServerFactory -> protected void postProcessWebAppContext(WebAppContext webAppContext);1512201855;Post process the Jetty {@link WebAppContext} before it's used with the Jetty_Server. Subclasses can override this method to apply additional processing to the_{@link WebAppContext}._@param webAppContext the Jetty {@link WebAppContext};protected void postProcessWebAppContext(WebAppContext webAppContext) {_	};post,process,the,jetty,link,web,app,context,before,it,s,used,with,the,jetty,server,subclasses,can,override,this,method,to,apply,additional,processing,to,the,link,web,app,context,param,web,app,context,the,jetty,link,web,app,context;protected,void,post,process,web,app,context,web,app,context,web,app,context
JettyServletWebServerFactory -> protected void postProcessWebAppContext(WebAppContext webAppContext);1514997812;Post process the Jetty {@link WebAppContext} before it's used with the Jetty_Server. Subclasses can override this method to apply additional processing to the_{@link WebAppContext}._@param webAppContext the Jetty {@link WebAppContext};protected void postProcessWebAppContext(WebAppContext webAppContext) {_	};post,process,the,jetty,link,web,app,context,before,it,s,used,with,the,jetty,server,subclasses,can,override,this,method,to,apply,additional,processing,to,the,link,web,app,context,param,web,app,context,the,jetty,link,web,app,context;protected,void,post,process,web,app,context,web,app,context,web,app,context
JettyServletWebServerFactory -> protected void postProcessWebAppContext(WebAppContext webAppContext);1515014644;Post process the Jetty {@link WebAppContext} before it's used with the Jetty_Server. Subclasses can override this method to apply additional processing to the_{@link WebAppContext}._@param webAppContext the Jetty {@link WebAppContext};protected void postProcessWebAppContext(WebAppContext webAppContext) {_	};post,process,the,jetty,link,web,app,context,before,it,s,used,with,the,jetty,server,subclasses,can,override,this,method,to,apply,additional,processing,to,the,link,web,app,context,param,web,app,context,the,jetty,link,web,app,context;protected,void,post,process,web,app,context,web,app,context,web,app,context
JettyServletWebServerFactory -> protected void postProcessWebAppContext(WebAppContext webAppContext);1515665717;Post process the Jetty {@link WebAppContext} before it's used with the Jetty_Server. Subclasses can override this method to apply additional processing to the_{@link WebAppContext}._@param webAppContext the Jetty {@link WebAppContext};protected void postProcessWebAppContext(WebAppContext webAppContext) {_	};post,process,the,jetty,link,web,app,context,before,it,s,used,with,the,jetty,server,subclasses,can,override,this,method,to,apply,additional,processing,to,the,link,web,app,context,param,web,app,context,the,jetty,link,web,app,context;protected,void,post,process,web,app,context,web,app,context,web,app,context
JettyServletWebServerFactory -> protected void postProcessWebAppContext(WebAppContext webAppContext);1516114894;Post process the Jetty {@link WebAppContext} before it's used with the Jetty_Server. Subclasses can override this method to apply additional processing to the_{@link WebAppContext}._@param webAppContext the Jetty {@link WebAppContext};protected void postProcessWebAppContext(WebAppContext webAppContext) {_	};post,process,the,jetty,link,web,app,context,before,it,s,used,with,the,jetty,server,subclasses,can,override,this,method,to,apply,additional,processing,to,the,link,web,app,context,param,web,app,context,the,jetty,link,web,app,context;protected,void,post,process,web,app,context,web,app,context,web,app,context
JettyServletWebServerFactory -> protected void postProcessWebAppContext(WebAppContext webAppContext);1516210343;Post process the Jetty {@link WebAppContext} before it's used with the Jetty_Server. Subclasses can override this method to apply additional processing to the_{@link WebAppContext}._@param webAppContext the Jetty {@link WebAppContext};protected void postProcessWebAppContext(WebAppContext webAppContext) {_	};post,process,the,jetty,link,web,app,context,before,it,s,used,with,the,jetty,server,subclasses,can,override,this,method,to,apply,additional,processing,to,the,link,web,app,context,param,web,app,context,the,jetty,link,web,app,context;protected,void,post,process,web,app,context,web,app,context,web,app,context
JettyServletWebServerFactory -> protected void postProcessWebAppContext(WebAppContext webAppContext);1516215803;Post process the Jetty {@link WebAppContext} before it's used with the Jetty_Server. Subclasses can override this method to apply additional processing to the_{@link WebAppContext}._@param webAppContext the Jetty {@link WebAppContext};protected void postProcessWebAppContext(WebAppContext webAppContext) {_	};post,process,the,jetty,link,web,app,context,before,it,s,used,with,the,jetty,server,subclasses,can,override,this,method,to,apply,additional,processing,to,the,link,web,app,context,param,web,app,context,the,jetty,link,web,app,context;protected,void,post,process,web,app,context,web,app,context,web,app,context
JettyServletWebServerFactory -> protected void postProcessWebAppContext(WebAppContext webAppContext);1516346511;Post process the Jetty {@link WebAppContext} before it's used with the Jetty_Server. Subclasses can override this method to apply additional processing to the_{@link WebAppContext}._@param webAppContext the Jetty {@link WebAppContext};protected void postProcessWebAppContext(WebAppContext webAppContext) {_	};post,process,the,jetty,link,web,app,context,before,it,s,used,with,the,jetty,server,subclasses,can,override,this,method,to,apply,additional,processing,to,the,link,web,app,context,param,web,app,context,the,jetty,link,web,app,context;protected,void,post,process,web,app,context,web,app,context,web,app,context
JettyServletWebServerFactory -> protected void postProcessWebAppContext(WebAppContext webAppContext);1517419795;Post process the Jetty {@link WebAppContext} before it's used with the Jetty_Server. Subclasses can override this method to apply additional processing to the_{@link WebAppContext}._@param webAppContext the Jetty {@link WebAppContext};protected void postProcessWebAppContext(WebAppContext webAppContext) {_	};post,process,the,jetty,link,web,app,context,before,it,s,used,with,the,jetty,server,subclasses,can,override,this,method,to,apply,additional,processing,to,the,link,web,app,context,param,web,app,context,the,jetty,link,web,app,context;protected,void,post,process,web,app,context,web,app,context,web,app,context
JettyServletWebServerFactory -> protected void postProcessWebAppContext(WebAppContext webAppContext);1517583695;Post process the Jetty {@link WebAppContext} before it's used with the Jetty_Server. Subclasses can override this method to apply additional processing to the_{@link WebAppContext}._@param webAppContext the Jetty {@link WebAppContext};protected void postProcessWebAppContext(WebAppContext webAppContext) {_	};post,process,the,jetty,link,web,app,context,before,it,s,used,with,the,jetty,server,subclasses,can,override,this,method,to,apply,additional,processing,to,the,link,web,app,context,param,web,app,context,the,jetty,link,web,app,context;protected,void,post,process,web,app,context,web,app,context,web,app,context
JettyServletWebServerFactory -> protected void postProcessWebAppContext(WebAppContext webAppContext);1519362690;Post process the Jetty {@link WebAppContext} before it's used with the Jetty_Server. Subclasses can override this method to apply additional processing to the_{@link WebAppContext}._@param webAppContext the Jetty {@link WebAppContext};protected void postProcessWebAppContext(WebAppContext webAppContext) {_	};post,process,the,jetty,link,web,app,context,before,it,s,used,with,the,jetty,server,subclasses,can,override,this,method,to,apply,additional,processing,to,the,link,web,app,context,param,web,app,context,the,jetty,link,web,app,context;protected,void,post,process,web,app,context,web,app,context,web,app,context
JettyServletWebServerFactory -> protected void postProcessWebAppContext(WebAppContext webAppContext);1519742833;Post process the Jetty {@link WebAppContext} before it's used with the Jetty_Server. Subclasses can override this method to apply additional processing to the_{@link WebAppContext}._@param webAppContext the Jetty {@link WebAppContext};protected void postProcessWebAppContext(WebAppContext webAppContext) {_	};post,process,the,jetty,link,web,app,context,before,it,s,used,with,the,jetty,server,subclasses,can,override,this,method,to,apply,additional,processing,to,the,link,web,app,context,param,web,app,context,the,jetty,link,web,app,context;protected,void,post,process,web,app,context,web,app,context,web,app,context
JettyServletWebServerFactory -> protected void postProcessWebAppContext(WebAppContext webAppContext);1519817048;Post process the Jetty {@link WebAppContext} before it's used with the Jetty_Server. Subclasses can override this method to apply additional processing to the_{@link WebAppContext}._@param webAppContext the Jetty {@link WebAppContext};protected void postProcessWebAppContext(WebAppContext webAppContext) {_	};post,process,the,jetty,link,web,app,context,before,it,s,used,with,the,jetty,server,subclasses,can,override,this,method,to,apply,additional,processing,to,the,link,web,app,context,param,web,app,context,the,jetty,link,web,app,context;protected,void,post,process,web,app,context,web,app,context,web,app,context
JettyServletWebServerFactory -> protected void postProcessWebAppContext(WebAppContext webAppContext);1521460869;Post process the Jetty {@link WebAppContext} before it's used with the Jetty_Server. Subclasses can override this method to apply additional processing to the_{@link WebAppContext}._@param webAppContext the Jetty {@link WebAppContext};protected void postProcessWebAppContext(WebAppContext webAppContext) {_	};post,process,the,jetty,link,web,app,context,before,it,s,used,with,the,jetty,server,subclasses,can,override,this,method,to,apply,additional,processing,to,the,link,web,app,context,param,web,app,context,the,jetty,link,web,app,context;protected,void,post,process,web,app,context,web,app,context,web,app,context
JettyServletWebServerFactory -> protected void postProcessWebAppContext(WebAppContext webAppContext);1525255067;Post process the Jetty {@link WebAppContext} before it's used with the Jetty_Server. Subclasses can override this method to apply additional processing to the_{@link WebAppContext}._@param webAppContext the Jetty {@link WebAppContext};protected void postProcessWebAppContext(WebAppContext webAppContext) {_	};post,process,the,jetty,link,web,app,context,before,it,s,used,with,the,jetty,server,subclasses,can,override,this,method,to,apply,additional,processing,to,the,link,web,app,context,param,web,app,context,the,jetty,link,web,app,context;protected,void,post,process,web,app,context,web,app,context,web,app,context
JettyServletWebServerFactory -> protected void postProcessWebAppContext(WebAppContext webAppContext);1525416882;Post process the Jetty {@link WebAppContext} before it's used with the Jetty_Server. Subclasses can override this method to apply additional processing to the_{@link WebAppContext}._@param webAppContext the Jetty {@link WebAppContext};protected void postProcessWebAppContext(WebAppContext webAppContext) {_	};post,process,the,jetty,link,web,app,context,before,it,s,used,with,the,jetty,server,subclasses,can,override,this,method,to,apply,additional,processing,to,the,link,web,app,context,param,web,app,context,the,jetty,link,web,app,context;protected,void,post,process,web,app,context,web,app,context,web,app,context
JettyServletWebServerFactory -> protected void postProcessWebAppContext(WebAppContext webAppContext);1531909335;Post process the Jetty {@link WebAppContext} before it's used with the Jetty_Server. Subclasses can override this method to apply additional processing to the_{@link WebAppContext}._@param webAppContext the Jetty {@link WebAppContext};protected void postProcessWebAppContext(WebAppContext webAppContext) {_	};post,process,the,jetty,link,web,app,context,before,it,s,used,with,the,jetty,server,subclasses,can,override,this,method,to,apply,additional,processing,to,the,link,web,app,context,param,web,app,context,the,jetty,link,web,app,context;protected,void,post,process,web,app,context,web,app,context,web,app,context
JettyServletWebServerFactory -> protected void postProcessWebAppContext(WebAppContext webAppContext);1532738143;Post process the Jetty {@link WebAppContext} before it's used with the Jetty_Server. Subclasses can override this method to apply additional processing to the_{@link WebAppContext}._@param webAppContext the Jetty {@link WebAppContext};protected void postProcessWebAppContext(WebAppContext webAppContext) {_	};post,process,the,jetty,link,web,app,context,before,it,s,used,with,the,jetty,server,subclasses,can,override,this,method,to,apply,additional,processing,to,the,link,web,app,context,param,web,app,context,the,jetty,link,web,app,context;protected,void,post,process,web,app,context,web,app,context,web,app,context
JettyServletWebServerFactory -> private Configuration getMimeTypeConfiguration();1507173536;Create a configuration object that adds mime type mappings._@return a configuration object for adding mime type mappings;private Configuration getMimeTypeConfiguration() {_		return new AbstractConfiguration() {__			@Override_			public void configure(WebAppContext context) throws Exception {_				MimeTypes mimeTypes = context.getMimeTypes()__				for (MimeMappings.Mapping mapping : getMimeMappings()) {_					mimeTypes.addMimeMapping(mapping.getExtension(),_							mapping.getMimeType())__				}_			}__		}__	};create,a,configuration,object,that,adds,mime,type,mappings,return,a,configuration,object,for,adding,mime,type,mappings;private,configuration,get,mime,type,configuration,return,new,abstract,configuration,override,public,void,configure,web,app,context,context,throws,exception,mime,types,mime,types,context,get,mime,types,for,mime,mappings,mapping,mapping,get,mime,mappings,mime,types,add,mime,mapping,mapping,get,extension,mapping,get,mime,type
JettyServletWebServerFactory -> private Configuration getMimeTypeConfiguration();1509713766;Create a configuration object that adds mime type mappings._@return a configuration object for adding mime type mappings;private Configuration getMimeTypeConfiguration() {_		return new AbstractConfiguration() {__			@Override_			public void configure(WebAppContext context) throws Exception {_				MimeTypes mimeTypes = context.getMimeTypes()__				for (MimeMappings.Mapping mapping : getMimeMappings()) {_					mimeTypes.addMimeMapping(mapping.getExtension(),_							mapping.getMimeType())__				}_			}__		}__	};create,a,configuration,object,that,adds,mime,type,mappings,return,a,configuration,object,for,adding,mime,type,mappings;private,configuration,get,mime,type,configuration,return,new,abstract,configuration,override,public,void,configure,web,app,context,context,throws,exception,mime,types,mime,types,context,get,mime,types,for,mime,mappings,mapping,mapping,get,mime,mappings,mime,types,add,mime,mapping,mapping,get,extension,mapping,get,mime,type
JettyServletWebServerFactory -> private Configuration getMimeTypeConfiguration();1509761243;Create a configuration object that adds mime type mappings._@return a configuration object for adding mime type mappings;private Configuration getMimeTypeConfiguration() {_		return new AbstractConfiguration() {__			@Override_			public void configure(WebAppContext context) throws Exception {_				MimeTypes mimeTypes = context.getMimeTypes()__				for (MimeMappings.Mapping mapping : getMimeMappings()) {_					mimeTypes.addMimeMapping(mapping.getExtension(),_							mapping.getMimeType())__				}_			}__		}__	};create,a,configuration,object,that,adds,mime,type,mappings,return,a,configuration,object,for,adding,mime,type,mappings;private,configuration,get,mime,type,configuration,return,new,abstract,configuration,override,public,void,configure,web,app,context,context,throws,exception,mime,types,mime,types,context,get,mime,types,for,mime,mappings,mapping,mapping,get,mime,mappings,mime,types,add,mime,mapping,mapping,get,extension,mapping,get,mime,type
JettyServletWebServerFactory -> private Configuration getMimeTypeConfiguration();1510965901;Create a configuration object that adds mime type mappings._@return a configuration object for adding mime type mappings;private Configuration getMimeTypeConfiguration() {_		return new AbstractConfiguration() {__			@Override_			public void configure(WebAppContext context) throws Exception {_				MimeTypes mimeTypes = context.getMimeTypes()__				for (MimeMappings.Mapping mapping : getMimeMappings()) {_					mimeTypes.addMimeMapping(mapping.getExtension(),_							mapping.getMimeType())__				}_			}__		}__	};create,a,configuration,object,that,adds,mime,type,mappings,return,a,configuration,object,for,adding,mime,type,mappings;private,configuration,get,mime,type,configuration,return,new,abstract,configuration,override,public,void,configure,web,app,context,context,throws,exception,mime,types,mime,types,context,get,mime,types,for,mime,mappings,mapping,mapping,get,mime,mappings,mime,types,add,mime,mapping,mapping,get,extension,mapping,get,mime,type
JettyServletWebServerFactory -> private Configuration getMimeTypeConfiguration();1511157177;Create a configuration object that adds mime type mappings._@return a configuration object for adding mime type mappings;private Configuration getMimeTypeConfiguration() {_		return new AbstractConfiguration() {__			@Override_			public void configure(WebAppContext context) throws Exception {_				MimeTypes mimeTypes = context.getMimeTypes()__				for (MimeMappings.Mapping mapping : getMimeMappings()) {_					mimeTypes.addMimeMapping(mapping.getExtension(),_							mapping.getMimeType())__				}_			}__		}__	};create,a,configuration,object,that,adds,mime,type,mappings,return,a,configuration,object,for,adding,mime,type,mappings;private,configuration,get,mime,type,configuration,return,new,abstract,configuration,override,public,void,configure,web,app,context,context,throws,exception,mime,types,mime,types,context,get,mime,types,for,mime,mappings,mapping,mapping,get,mime,mappings,mime,types,add,mime,mapping,mapping,get,extension,mapping,get,mime,type
JettyServletWebServerFactory -> private Configuration getMimeTypeConfiguration();1512201855;Create a configuration object that adds mime type mappings._@return a configuration object for adding mime type mappings;private Configuration getMimeTypeConfiguration() {_		return new AbstractConfiguration() {__			@Override_			public void configure(WebAppContext context) throws Exception {_				MimeTypes mimeTypes = context.getMimeTypes()__				for (MimeMappings.Mapping mapping : getMimeMappings()) {_					mimeTypes.addMimeMapping(mapping.getExtension(),_							mapping.getMimeType())__				}_			}__		}__	};create,a,configuration,object,that,adds,mime,type,mappings,return,a,configuration,object,for,adding,mime,type,mappings;private,configuration,get,mime,type,configuration,return,new,abstract,configuration,override,public,void,configure,web,app,context,context,throws,exception,mime,types,mime,types,context,get,mime,types,for,mime,mappings,mapping,mapping,get,mime,mappings,mime,types,add,mime,mapping,mapping,get,extension,mapping,get,mime,type
JettyServletWebServerFactory -> private Configuration getMimeTypeConfiguration();1514997812;Create a configuration object that adds mime type mappings._@return a configuration object for adding mime type mappings;private Configuration getMimeTypeConfiguration() {_		return new AbstractConfiguration() {__			@Override_			public void configure(WebAppContext context) throws Exception {_				MimeTypes mimeTypes = context.getMimeTypes()__				for (MimeMappings.Mapping mapping : getMimeMappings()) {_					mimeTypes.addMimeMapping(mapping.getExtension(),_							mapping.getMimeType())__				}_			}__		}__	};create,a,configuration,object,that,adds,mime,type,mappings,return,a,configuration,object,for,adding,mime,type,mappings;private,configuration,get,mime,type,configuration,return,new,abstract,configuration,override,public,void,configure,web,app,context,context,throws,exception,mime,types,mime,types,context,get,mime,types,for,mime,mappings,mapping,mapping,get,mime,mappings,mime,types,add,mime,mapping,mapping,get,extension,mapping,get,mime,type
JettyServletWebServerFactory -> private Configuration getMimeTypeConfiguration();1515014644;Create a configuration object that adds mime type mappings._@return a configuration object for adding mime type mappings;private Configuration getMimeTypeConfiguration() {_		return new AbstractConfiguration() {__			@Override_			public void configure(WebAppContext context) throws Exception {_				MimeTypes mimeTypes = context.getMimeTypes()__				for (MimeMappings.Mapping mapping : getMimeMappings()) {_					mimeTypes.addMimeMapping(mapping.getExtension(),_							mapping.getMimeType())__				}_			}__		}__	};create,a,configuration,object,that,adds,mime,type,mappings,return,a,configuration,object,for,adding,mime,type,mappings;private,configuration,get,mime,type,configuration,return,new,abstract,configuration,override,public,void,configure,web,app,context,context,throws,exception,mime,types,mime,types,context,get,mime,types,for,mime,mappings,mapping,mapping,get,mime,mappings,mime,types,add,mime,mapping,mapping,get,extension,mapping,get,mime,type
JettyServletWebServerFactory -> private Configuration getMimeTypeConfiguration();1515665717;Create a configuration object that adds mime type mappings._@return a configuration object for adding mime type mappings;private Configuration getMimeTypeConfiguration() {_		return new AbstractConfiguration() {__			@Override_			public void configure(WebAppContext context) throws Exception {_				MimeTypes mimeTypes = context.getMimeTypes()__				for (MimeMappings.Mapping mapping : getMimeMappings()) {_					mimeTypes.addMimeMapping(mapping.getExtension(),_							mapping.getMimeType())__				}_			}__		}__	};create,a,configuration,object,that,adds,mime,type,mappings,return,a,configuration,object,for,adding,mime,type,mappings;private,configuration,get,mime,type,configuration,return,new,abstract,configuration,override,public,void,configure,web,app,context,context,throws,exception,mime,types,mime,types,context,get,mime,types,for,mime,mappings,mapping,mapping,get,mime,mappings,mime,types,add,mime,mapping,mapping,get,extension,mapping,get,mime,type
JettyServletWebServerFactory -> private Configuration getMimeTypeConfiguration();1516114894;Create a configuration object that adds mime type mappings._@return a configuration object for adding mime type mappings;private Configuration getMimeTypeConfiguration() {_		return new AbstractConfiguration() {__			@Override_			public void configure(WebAppContext context) throws Exception {_				MimeTypes mimeTypes = context.getMimeTypes()__				for (MimeMappings.Mapping mapping : getMimeMappings()) {_					mimeTypes.addMimeMapping(mapping.getExtension(),_							mapping.getMimeType())__				}_			}__		}__	};create,a,configuration,object,that,adds,mime,type,mappings,return,a,configuration,object,for,adding,mime,type,mappings;private,configuration,get,mime,type,configuration,return,new,abstract,configuration,override,public,void,configure,web,app,context,context,throws,exception,mime,types,mime,types,context,get,mime,types,for,mime,mappings,mapping,mapping,get,mime,mappings,mime,types,add,mime,mapping,mapping,get,extension,mapping,get,mime,type
JettyServletWebServerFactory -> private Configuration getMimeTypeConfiguration();1516210343;Create a configuration object that adds mime type mappings._@return a configuration object for adding mime type mappings;private Configuration getMimeTypeConfiguration() {_		return new AbstractConfiguration() {__			@Override_			public void configure(WebAppContext context) throws Exception {_				MimeTypes mimeTypes = context.getMimeTypes()__				for (MimeMappings.Mapping mapping : getMimeMappings()) {_					mimeTypes.addMimeMapping(mapping.getExtension(),_							mapping.getMimeType())__				}_			}__		}__	};create,a,configuration,object,that,adds,mime,type,mappings,return,a,configuration,object,for,adding,mime,type,mappings;private,configuration,get,mime,type,configuration,return,new,abstract,configuration,override,public,void,configure,web,app,context,context,throws,exception,mime,types,mime,types,context,get,mime,types,for,mime,mappings,mapping,mapping,get,mime,mappings,mime,types,add,mime,mapping,mapping,get,extension,mapping,get,mime,type
JettyServletWebServerFactory -> private Configuration getMimeTypeConfiguration();1516215803;Create a configuration object that adds mime type mappings._@return a configuration object for adding mime type mappings;private Configuration getMimeTypeConfiguration() {_		return new AbstractConfiguration() {__			@Override_			public void configure(WebAppContext context) throws Exception {_				MimeTypes mimeTypes = context.getMimeTypes()__				for (MimeMappings.Mapping mapping : getMimeMappings()) {_					mimeTypes.addMimeMapping(mapping.getExtension(),_							mapping.getMimeType())__				}_			}__		}__	};create,a,configuration,object,that,adds,mime,type,mappings,return,a,configuration,object,for,adding,mime,type,mappings;private,configuration,get,mime,type,configuration,return,new,abstract,configuration,override,public,void,configure,web,app,context,context,throws,exception,mime,types,mime,types,context,get,mime,types,for,mime,mappings,mapping,mapping,get,mime,mappings,mime,types,add,mime,mapping,mapping,get,extension,mapping,get,mime,type
JettyServletWebServerFactory -> private Configuration getMimeTypeConfiguration();1516346511;Create a configuration object that adds mime type mappings._@return a configuration object for adding mime type mappings;private Configuration getMimeTypeConfiguration() {_		return new AbstractConfiguration() {__			@Override_			public void configure(WebAppContext context) throws Exception {_				MimeTypes mimeTypes = context.getMimeTypes()__				for (MimeMappings.Mapping mapping : getMimeMappings()) {_					mimeTypes.addMimeMapping(mapping.getExtension(),_							mapping.getMimeType())__				}_			}__		}__	};create,a,configuration,object,that,adds,mime,type,mappings,return,a,configuration,object,for,adding,mime,type,mappings;private,configuration,get,mime,type,configuration,return,new,abstract,configuration,override,public,void,configure,web,app,context,context,throws,exception,mime,types,mime,types,context,get,mime,types,for,mime,mappings,mapping,mapping,get,mime,mappings,mime,types,add,mime,mapping,mapping,get,extension,mapping,get,mime,type
JettyServletWebServerFactory -> private Configuration getMimeTypeConfiguration();1517419795;Create a configuration object that adds mime type mappings._@return a configuration object for adding mime type mappings;private Configuration getMimeTypeConfiguration() {_		return new AbstractConfiguration() {__			@Override_			public void configure(WebAppContext context) throws Exception {_				MimeTypes mimeTypes = context.getMimeTypes()__				for (MimeMappings.Mapping mapping : getMimeMappings()) {_					mimeTypes.addMimeMapping(mapping.getExtension(),_							mapping.getMimeType())__				}_			}__		}__	};create,a,configuration,object,that,adds,mime,type,mappings,return,a,configuration,object,for,adding,mime,type,mappings;private,configuration,get,mime,type,configuration,return,new,abstract,configuration,override,public,void,configure,web,app,context,context,throws,exception,mime,types,mime,types,context,get,mime,types,for,mime,mappings,mapping,mapping,get,mime,mappings,mime,types,add,mime,mapping,mapping,get,extension,mapping,get,mime,type
JettyServletWebServerFactory -> private Configuration getMimeTypeConfiguration();1517583695;Create a configuration object that adds mime type mappings._@return a configuration object for adding mime type mappings;private Configuration getMimeTypeConfiguration() {_		return new AbstractConfiguration() {__			@Override_			public void configure(WebAppContext context) throws Exception {_				MimeTypes mimeTypes = context.getMimeTypes()__				for (MimeMappings.Mapping mapping : getMimeMappings()) {_					mimeTypes.addMimeMapping(mapping.getExtension(),_							mapping.getMimeType())__				}_			}__		}__	};create,a,configuration,object,that,adds,mime,type,mappings,return,a,configuration,object,for,adding,mime,type,mappings;private,configuration,get,mime,type,configuration,return,new,abstract,configuration,override,public,void,configure,web,app,context,context,throws,exception,mime,types,mime,types,context,get,mime,types,for,mime,mappings,mapping,mapping,get,mime,mappings,mime,types,add,mime,mapping,mapping,get,extension,mapping,get,mime,type
JettyServletWebServerFactory -> private Configuration getMimeTypeConfiguration();1519362690;Create a configuration object that adds mime type mappings._@return a configuration object for adding mime type mappings;private Configuration getMimeTypeConfiguration() {_		return new AbstractConfiguration() {__			@Override_			public void configure(WebAppContext context) throws Exception {_				MimeTypes mimeTypes = context.getMimeTypes()__				for (MimeMappings.Mapping mapping : getMimeMappings()) {_					mimeTypes.addMimeMapping(mapping.getExtension(),_							mapping.getMimeType())__				}_			}__		}__	};create,a,configuration,object,that,adds,mime,type,mappings,return,a,configuration,object,for,adding,mime,type,mappings;private,configuration,get,mime,type,configuration,return,new,abstract,configuration,override,public,void,configure,web,app,context,context,throws,exception,mime,types,mime,types,context,get,mime,types,for,mime,mappings,mapping,mapping,get,mime,mappings,mime,types,add,mime,mapping,mapping,get,extension,mapping,get,mime,type
JettyServletWebServerFactory -> private Configuration getMimeTypeConfiguration();1519742833;Create a configuration object that adds mime type mappings._@return a configuration object for adding mime type mappings;private Configuration getMimeTypeConfiguration() {_		return new AbstractConfiguration() {__			@Override_			public void configure(WebAppContext context) throws Exception {_				MimeTypes mimeTypes = context.getMimeTypes()__				for (MimeMappings.Mapping mapping : getMimeMappings()) {_					mimeTypes.addMimeMapping(mapping.getExtension(),_							mapping.getMimeType())__				}_			}__		}__	};create,a,configuration,object,that,adds,mime,type,mappings,return,a,configuration,object,for,adding,mime,type,mappings;private,configuration,get,mime,type,configuration,return,new,abstract,configuration,override,public,void,configure,web,app,context,context,throws,exception,mime,types,mime,types,context,get,mime,types,for,mime,mappings,mapping,mapping,get,mime,mappings,mime,types,add,mime,mapping,mapping,get,extension,mapping,get,mime,type
JettyServletWebServerFactory -> private Configuration getMimeTypeConfiguration();1519817048;Create a configuration object that adds mime type mappings._@return a configuration object for adding mime type mappings;private Configuration getMimeTypeConfiguration() {_		return new AbstractConfiguration() {__			@Override_			public void configure(WebAppContext context) throws Exception {_				MimeTypes mimeTypes = context.getMimeTypes()__				for (MimeMappings.Mapping mapping : getMimeMappings()) {_					mimeTypes.addMimeMapping(mapping.getExtension(),_							mapping.getMimeType())__				}_			}__		}__	};create,a,configuration,object,that,adds,mime,type,mappings,return,a,configuration,object,for,adding,mime,type,mappings;private,configuration,get,mime,type,configuration,return,new,abstract,configuration,override,public,void,configure,web,app,context,context,throws,exception,mime,types,mime,types,context,get,mime,types,for,mime,mappings,mapping,mapping,get,mime,mappings,mime,types,add,mime,mapping,mapping,get,extension,mapping,get,mime,type
JettyServletWebServerFactory -> private Configuration getMimeTypeConfiguration();1521460869;Create a configuration object that adds mime type mappings._@return a configuration object for adding mime type mappings;private Configuration getMimeTypeConfiguration() {_		return new AbstractConfiguration() {__			@Override_			public void configure(WebAppContext context) throws Exception {_				MimeTypes mimeTypes = context.getMimeTypes()__				for (MimeMappings.Mapping mapping : getMimeMappings()) {_					mimeTypes.addMimeMapping(mapping.getExtension(),_							mapping.getMimeType())__				}_			}__		}__	};create,a,configuration,object,that,adds,mime,type,mappings,return,a,configuration,object,for,adding,mime,type,mappings;private,configuration,get,mime,type,configuration,return,new,abstract,configuration,override,public,void,configure,web,app,context,context,throws,exception,mime,types,mime,types,context,get,mime,types,for,mime,mappings,mapping,mapping,get,mime,mappings,mime,types,add,mime,mapping,mapping,get,extension,mapping,get,mime,type
JettyServletWebServerFactory -> private Configuration getMimeTypeConfiguration();1525255067;Create a configuration object that adds mime type mappings._@return a configuration object for adding mime type mappings;private Configuration getMimeTypeConfiguration() {_		return new AbstractConfiguration() {__			@Override_			public void configure(WebAppContext context) throws Exception {_				MimeTypes mimeTypes = context.getMimeTypes()__				for (MimeMappings.Mapping mapping : getMimeMappings()) {_					mimeTypes.addMimeMapping(mapping.getExtension(),_							mapping.getMimeType())__				}_			}__		}__	};create,a,configuration,object,that,adds,mime,type,mappings,return,a,configuration,object,for,adding,mime,type,mappings;private,configuration,get,mime,type,configuration,return,new,abstract,configuration,override,public,void,configure,web,app,context,context,throws,exception,mime,types,mime,types,context,get,mime,types,for,mime,mappings,mapping,mapping,get,mime,mappings,mime,types,add,mime,mapping,mapping,get,extension,mapping,get,mime,type
JettyServletWebServerFactory -> private Configuration getMimeTypeConfiguration();1525416882;Create a configuration object that adds mime type mappings._@return a configuration object for adding mime type mappings;private Configuration getMimeTypeConfiguration() {_		return new AbstractConfiguration() {__			@Override_			public void configure(WebAppContext context) throws Exception {_				MimeTypes mimeTypes = context.getMimeTypes()__				for (MimeMappings.Mapping mapping : getMimeMappings()) {_					mimeTypes.addMimeMapping(mapping.getExtension(),_							mapping.getMimeType())__				}_			}__		}__	};create,a,configuration,object,that,adds,mime,type,mappings,return,a,configuration,object,for,adding,mime,type,mappings;private,configuration,get,mime,type,configuration,return,new,abstract,configuration,override,public,void,configure,web,app,context,context,throws,exception,mime,types,mime,types,context,get,mime,types,for,mime,mappings,mapping,mapping,get,mime,mappings,mime,types,add,mime,mapping,mapping,get,extension,mapping,get,mime,type
JettyServletWebServerFactory -> private Configuration getMimeTypeConfiguration();1531909335;Create a configuration object that adds mime type mappings._@return a configuration object for adding mime type mappings;private Configuration getMimeTypeConfiguration() {_		return new AbstractConfiguration() {__			@Override_			public void configure(WebAppContext context) throws Exception {_				MimeTypes mimeTypes = context.getMimeTypes()__				for (MimeMappings.Mapping mapping : getMimeMappings()) {_					mimeTypes.addMimeMapping(mapping.getExtension(),_							mapping.getMimeType())__				}_			}__		}__	};create,a,configuration,object,that,adds,mime,type,mappings,return,a,configuration,object,for,adding,mime,type,mappings;private,configuration,get,mime,type,configuration,return,new,abstract,configuration,override,public,void,configure,web,app,context,context,throws,exception,mime,types,mime,types,context,get,mime,types,for,mime,mappings,mapping,mapping,get,mime,mappings,mime,types,add,mime,mapping,mapping,get,extension,mapping,get,mime,type
JettyServletWebServerFactory -> private Configuration getMimeTypeConfiguration();1532738143;Create a configuration object that adds mime type mappings._@return a configuration object for adding mime type mappings;private Configuration getMimeTypeConfiguration() {_		return new AbstractConfiguration() {__			@Override_			public void configure(WebAppContext context) throws Exception {_				MimeTypes mimeTypes = context.getMimeTypes()__				for (MimeMappings.Mapping mapping : getMimeMappings()) {_					mimeTypes.addMimeMapping(mapping.getExtension(),_							mapping.getMimeType())__				}_			}__		}__	};create,a,configuration,object,that,adds,mime,type,mappings,return,a,configuration,object,for,adding,mime,type,mappings;private,configuration,get,mime,type,configuration,return,new,abstract,configuration,override,public,void,configure,web,app,context,context,throws,exception,mime,types,mime,types,context,get,mime,types,for,mime,mappings,mapping,mapping,get,mime,mappings,mime,types,add,mime,mapping,mapping,get,extension,mapping,get,mime,type
JettyServletWebServerFactory -> public Collection<JettyServerCustomizer> getServerCustomizers();1507173536;Returns a mutable collection of Jetty {@link JettyServerCustomizer}s that will be_applied to the {@link Server} before the it is created._@return the {@link JettyServerCustomizer}s;public Collection<JettyServerCustomizer> getServerCustomizers() {_		return this.jettyServerCustomizers__	};returns,a,mutable,collection,of,jetty,link,jetty,server,customizer,s,that,will,be,applied,to,the,link,server,before,the,it,is,created,return,the,link,jetty,server,customizer,s;public,collection,jetty,server,customizer,get,server,customizers,return,this,jetty,server,customizers
JettyServletWebServerFactory -> public Collection<JettyServerCustomizer> getServerCustomizers();1509713766;Returns a mutable collection of Jetty {@link JettyServerCustomizer}s that will be_applied to the {@link Server} before the it is created._@return the {@link JettyServerCustomizer}s;public Collection<JettyServerCustomizer> getServerCustomizers() {_		return this.jettyServerCustomizers__	};returns,a,mutable,collection,of,jetty,link,jetty,server,customizer,s,that,will,be,applied,to,the,link,server,before,the,it,is,created,return,the,link,jetty,server,customizer,s;public,collection,jetty,server,customizer,get,server,customizers,return,this,jetty,server,customizers
JettyServletWebServerFactory -> public Collection<JettyServerCustomizer> getServerCustomizers();1509761243;Returns a mutable collection of Jetty {@link JettyServerCustomizer}s that will be_applied to the {@link Server} before the it is created._@return the {@link JettyServerCustomizer}s;public Collection<JettyServerCustomizer> getServerCustomizers() {_		return this.jettyServerCustomizers__	};returns,a,mutable,collection,of,jetty,link,jetty,server,customizer,s,that,will,be,applied,to,the,link,server,before,the,it,is,created,return,the,link,jetty,server,customizer,s;public,collection,jetty,server,customizer,get,server,customizers,return,this,jetty,server,customizers
JettyServletWebServerFactory -> public Collection<JettyServerCustomizer> getServerCustomizers();1510965901;Returns a mutable collection of Jetty {@link JettyServerCustomizer}s that will be_applied to the {@link Server} before the it is created._@return the {@link JettyServerCustomizer}s;public Collection<JettyServerCustomizer> getServerCustomizers() {_		return this.jettyServerCustomizers__	};returns,a,mutable,collection,of,jetty,link,jetty,server,customizer,s,that,will,be,applied,to,the,link,server,before,the,it,is,created,return,the,link,jetty,server,customizer,s;public,collection,jetty,server,customizer,get,server,customizers,return,this,jetty,server,customizers
JettyServletWebServerFactory -> public Collection<JettyServerCustomizer> getServerCustomizers();1511157177;Returns a mutable collection of Jetty {@link JettyServerCustomizer}s that will be_applied to the {@link Server} before the it is created._@return the {@link JettyServerCustomizer}s;public Collection<JettyServerCustomizer> getServerCustomizers() {_		return this.jettyServerCustomizers__	};returns,a,mutable,collection,of,jetty,link,jetty,server,customizer,s,that,will,be,applied,to,the,link,server,before,the,it,is,created,return,the,link,jetty,server,customizer,s;public,collection,jetty,server,customizer,get,server,customizers,return,this,jetty,server,customizers
JettyServletWebServerFactory -> public Collection<JettyServerCustomizer> getServerCustomizers();1512201855;Returns a mutable collection of Jetty {@link JettyServerCustomizer}s that will be_applied to the {@link Server} before the it is created._@return the {@link JettyServerCustomizer}s;public Collection<JettyServerCustomizer> getServerCustomizers() {_		return this.jettyServerCustomizers__	};returns,a,mutable,collection,of,jetty,link,jetty,server,customizer,s,that,will,be,applied,to,the,link,server,before,the,it,is,created,return,the,link,jetty,server,customizer,s;public,collection,jetty,server,customizer,get,server,customizers,return,this,jetty,server,customizers
JettyServletWebServerFactory -> public Collection<JettyServerCustomizer> getServerCustomizers();1514997812;Returns a mutable collection of Jetty {@link JettyServerCustomizer}s that will be_applied to the {@link Server} before the it is created._@return the {@link JettyServerCustomizer}s;public Collection<JettyServerCustomizer> getServerCustomizers() {_		return this.jettyServerCustomizers__	};returns,a,mutable,collection,of,jetty,link,jetty,server,customizer,s,that,will,be,applied,to,the,link,server,before,the,it,is,created,return,the,link,jetty,server,customizer,s;public,collection,jetty,server,customizer,get,server,customizers,return,this,jetty,server,customizers
JettyServletWebServerFactory -> public Collection<JettyServerCustomizer> getServerCustomizers();1515014644;Returns a mutable collection of Jetty {@link JettyServerCustomizer}s that will be_applied to the {@link Server} before the it is created._@return the {@link JettyServerCustomizer}s;public Collection<JettyServerCustomizer> getServerCustomizers() {_		return this.jettyServerCustomizers__	};returns,a,mutable,collection,of,jetty,link,jetty,server,customizer,s,that,will,be,applied,to,the,link,server,before,the,it,is,created,return,the,link,jetty,server,customizer,s;public,collection,jetty,server,customizer,get,server,customizers,return,this,jetty,server,customizers
JettyServletWebServerFactory -> public Collection<JettyServerCustomizer> getServerCustomizers();1515665717;Returns a mutable collection of Jetty {@link JettyServerCustomizer}s that will be_applied to the {@link Server} before the it is created._@return the {@link JettyServerCustomizer}s;public Collection<JettyServerCustomizer> getServerCustomizers() {_		return this.jettyServerCustomizers__	};returns,a,mutable,collection,of,jetty,link,jetty,server,customizer,s,that,will,be,applied,to,the,link,server,before,the,it,is,created,return,the,link,jetty,server,customizer,s;public,collection,jetty,server,customizer,get,server,customizers,return,this,jetty,server,customizers
JettyServletWebServerFactory -> public Collection<JettyServerCustomizer> getServerCustomizers();1516114894;Returns a mutable collection of Jetty {@link JettyServerCustomizer}s that will be_applied to the {@link Server} before the it is created._@return the {@link JettyServerCustomizer}s;public Collection<JettyServerCustomizer> getServerCustomizers() {_		return this.jettyServerCustomizers__	};returns,a,mutable,collection,of,jetty,link,jetty,server,customizer,s,that,will,be,applied,to,the,link,server,before,the,it,is,created,return,the,link,jetty,server,customizer,s;public,collection,jetty,server,customizer,get,server,customizers,return,this,jetty,server,customizers
JettyServletWebServerFactory -> public Collection<JettyServerCustomizer> getServerCustomizers();1516210343;Returns a mutable collection of Jetty {@link JettyServerCustomizer}s that will be_applied to the {@link Server} before the it is created._@return the {@link JettyServerCustomizer}s;public Collection<JettyServerCustomizer> getServerCustomizers() {_		return this.jettyServerCustomizers__	};returns,a,mutable,collection,of,jetty,link,jetty,server,customizer,s,that,will,be,applied,to,the,link,server,before,the,it,is,created,return,the,link,jetty,server,customizer,s;public,collection,jetty,server,customizer,get,server,customizers,return,this,jetty,server,customizers
JettyServletWebServerFactory -> public Collection<JettyServerCustomizer> getServerCustomizers();1516215803;Returns a mutable collection of Jetty {@link JettyServerCustomizer}s that will be_applied to the {@link Server} before the it is created._@return the {@link JettyServerCustomizer}s;public Collection<JettyServerCustomizer> getServerCustomizers() {_		return this.jettyServerCustomizers__	};returns,a,mutable,collection,of,jetty,link,jetty,server,customizer,s,that,will,be,applied,to,the,link,server,before,the,it,is,created,return,the,link,jetty,server,customizer,s;public,collection,jetty,server,customizer,get,server,customizers,return,this,jetty,server,customizers
JettyServletWebServerFactory -> public Collection<JettyServerCustomizer> getServerCustomizers();1516346511;Returns a mutable collection of Jetty {@link JettyServerCustomizer}s that will be_applied to the {@link Server} before the it is created._@return the {@link JettyServerCustomizer}s;public Collection<JettyServerCustomizer> getServerCustomizers() {_		return this.jettyServerCustomizers__	};returns,a,mutable,collection,of,jetty,link,jetty,server,customizer,s,that,will,be,applied,to,the,link,server,before,the,it,is,created,return,the,link,jetty,server,customizer,s;public,collection,jetty,server,customizer,get,server,customizers,return,this,jetty,server,customizers
JettyServletWebServerFactory -> public Collection<JettyServerCustomizer> getServerCustomizers();1517419795;Returns a mutable collection of Jetty {@link JettyServerCustomizer}s that will be_applied to the {@link Server} before the it is created._@return the {@link JettyServerCustomizer}s;public Collection<JettyServerCustomizer> getServerCustomizers() {_		return this.jettyServerCustomizers__	};returns,a,mutable,collection,of,jetty,link,jetty,server,customizer,s,that,will,be,applied,to,the,link,server,before,the,it,is,created,return,the,link,jetty,server,customizer,s;public,collection,jetty,server,customizer,get,server,customizers,return,this,jetty,server,customizers
JettyServletWebServerFactory -> public Collection<JettyServerCustomizer> getServerCustomizers();1517583695;Returns a mutable collection of Jetty {@link JettyServerCustomizer}s that will be_applied to the {@link Server} before the it is created._@return the {@link JettyServerCustomizer}s;public Collection<JettyServerCustomizer> getServerCustomizers() {_		return this.jettyServerCustomizers__	};returns,a,mutable,collection,of,jetty,link,jetty,server,customizer,s,that,will,be,applied,to,the,link,server,before,the,it,is,created,return,the,link,jetty,server,customizer,s;public,collection,jetty,server,customizer,get,server,customizers,return,this,jetty,server,customizers
JettyServletWebServerFactory -> public Collection<JettyServerCustomizer> getServerCustomizers();1519362690;Returns a mutable collection of Jetty {@link JettyServerCustomizer}s that will be_applied to the {@link Server} before the it is created._@return the {@link JettyServerCustomizer}s;public Collection<JettyServerCustomizer> getServerCustomizers() {_		return this.jettyServerCustomizers__	};returns,a,mutable,collection,of,jetty,link,jetty,server,customizer,s,that,will,be,applied,to,the,link,server,before,the,it,is,created,return,the,link,jetty,server,customizer,s;public,collection,jetty,server,customizer,get,server,customizers,return,this,jetty,server,customizers
JettyServletWebServerFactory -> public Collection<JettyServerCustomizer> getServerCustomizers();1519742833;Returns a mutable collection of Jetty {@link JettyServerCustomizer}s that will be_applied to the {@link Server} before the it is created._@return the {@link JettyServerCustomizer}s;public Collection<JettyServerCustomizer> getServerCustomizers() {_		return this.jettyServerCustomizers__	};returns,a,mutable,collection,of,jetty,link,jetty,server,customizer,s,that,will,be,applied,to,the,link,server,before,the,it,is,created,return,the,link,jetty,server,customizer,s;public,collection,jetty,server,customizer,get,server,customizers,return,this,jetty,server,customizers
JettyServletWebServerFactory -> public Collection<JettyServerCustomizer> getServerCustomizers();1519817048;Returns a mutable collection of Jetty {@link JettyServerCustomizer}s that will be_applied to the {@link Server} before the it is created._@return the {@link JettyServerCustomizer}s;public Collection<JettyServerCustomizer> getServerCustomizers() {_		return this.jettyServerCustomizers__	};returns,a,mutable,collection,of,jetty,link,jetty,server,customizer,s,that,will,be,applied,to,the,link,server,before,the,it,is,created,return,the,link,jetty,server,customizer,s;public,collection,jetty,server,customizer,get,server,customizers,return,this,jetty,server,customizers
JettyServletWebServerFactory -> public Collection<JettyServerCustomizer> getServerCustomizers();1521460869;Returns a mutable collection of Jetty {@link JettyServerCustomizer}s that will be_applied to the {@link Server} before the it is created._@return the {@link JettyServerCustomizer}s;public Collection<JettyServerCustomizer> getServerCustomizers() {_		return this.jettyServerCustomizers__	};returns,a,mutable,collection,of,jetty,link,jetty,server,customizer,s,that,will,be,applied,to,the,link,server,before,the,it,is,created,return,the,link,jetty,server,customizer,s;public,collection,jetty,server,customizer,get,server,customizers,return,this,jetty,server,customizers
JettyServletWebServerFactory -> public Collection<JettyServerCustomizer> getServerCustomizers();1525255067;Returns a mutable collection of Jetty {@link JettyServerCustomizer}s that will be_applied to the {@link Server} before the it is created._@return the {@link JettyServerCustomizer}s;public Collection<JettyServerCustomizer> getServerCustomizers() {_		return this.jettyServerCustomizers__	};returns,a,mutable,collection,of,jetty,link,jetty,server,customizer,s,that,will,be,applied,to,the,link,server,before,the,it,is,created,return,the,link,jetty,server,customizer,s;public,collection,jetty,server,customizer,get,server,customizers,return,this,jetty,server,customizers
JettyServletWebServerFactory -> public Collection<JettyServerCustomizer> getServerCustomizers();1525416882;Returns a mutable collection of Jetty {@link JettyServerCustomizer}s that will be_applied to the {@link Server} before the it is created._@return the {@link JettyServerCustomizer}s;public Collection<JettyServerCustomizer> getServerCustomizers() {_		return this.jettyServerCustomizers__	};returns,a,mutable,collection,of,jetty,link,jetty,server,customizer,s,that,will,be,applied,to,the,link,server,before,the,it,is,created,return,the,link,jetty,server,customizer,s;public,collection,jetty,server,customizer,get,server,customizers,return,this,jetty,server,customizers
JettyServletWebServerFactory -> public Collection<JettyServerCustomizer> getServerCustomizers();1531909335;Returns a mutable collection of Jetty {@link JettyServerCustomizer}s that will be_applied to the {@link Server} before the it is created._@return the {@link JettyServerCustomizer}s;public Collection<JettyServerCustomizer> getServerCustomizers() {_		return this.jettyServerCustomizers__	};returns,a,mutable,collection,of,jetty,link,jetty,server,customizer,s,that,will,be,applied,to,the,link,server,before,the,it,is,created,return,the,link,jetty,server,customizer,s;public,collection,jetty,server,customizer,get,server,customizers,return,this,jetty,server,customizers
JettyServletWebServerFactory -> public Collection<JettyServerCustomizer> getServerCustomizers();1532738143;Returns a mutable collection of Jetty {@link JettyServerCustomizer}s that will be_applied to the {@link Server} before the it is created._@return the {@link JettyServerCustomizer}s;public Collection<JettyServerCustomizer> getServerCustomizers() {_		return this.jettyServerCustomizers__	};returns,a,mutable,collection,of,jetty,link,jetty,server,customizer,s,that,will,be,applied,to,the,link,server,before,the,it,is,created,return,the,link,jetty,server,customizer,s;public,collection,jetty,server,customizer,get,server,customizers,return,this,jetty,server,customizers
JettyServletWebServerFactory -> public ThreadPool getThreadPool();1507173536;Returns a Jetty {@link ThreadPool} that should be used by the {@link Server}._@return a Jetty {@link ThreadPool} or {@code null};public ThreadPool getThreadPool() {_		return this.threadPool__	};returns,a,jetty,link,thread,pool,that,should,be,used,by,the,link,server,return,a,jetty,link,thread,pool,or,code,null;public,thread,pool,get,thread,pool,return,this,thread,pool
JettyServletWebServerFactory -> public ThreadPool getThreadPool();1509713766;Returns a Jetty {@link ThreadPool} that should be used by the {@link Server}._@return a Jetty {@link ThreadPool} or {@code null};public ThreadPool getThreadPool() {_		return this.threadPool__	};returns,a,jetty,link,thread,pool,that,should,be,used,by,the,link,server,return,a,jetty,link,thread,pool,or,code,null;public,thread,pool,get,thread,pool,return,this,thread,pool
JettyServletWebServerFactory -> public ThreadPool getThreadPool();1509761243;Returns a Jetty {@link ThreadPool} that should be used by the {@link Server}._@return a Jetty {@link ThreadPool} or {@code null};public ThreadPool getThreadPool() {_		return this.threadPool__	};returns,a,jetty,link,thread,pool,that,should,be,used,by,the,link,server,return,a,jetty,link,thread,pool,or,code,null;public,thread,pool,get,thread,pool,return,this,thread,pool
JettyServletWebServerFactory -> public ThreadPool getThreadPool();1510965901;Returns a Jetty {@link ThreadPool} that should be used by the {@link Server}._@return a Jetty {@link ThreadPool} or {@code null};public ThreadPool getThreadPool() {_		return this.threadPool__	};returns,a,jetty,link,thread,pool,that,should,be,used,by,the,link,server,return,a,jetty,link,thread,pool,or,code,null;public,thread,pool,get,thread,pool,return,this,thread,pool
JettyServletWebServerFactory -> public ThreadPool getThreadPool();1511157177;Returns a Jetty {@link ThreadPool} that should be used by the {@link Server}._@return a Jetty {@link ThreadPool} or {@code null};public ThreadPool getThreadPool() {_		return this.threadPool__	};returns,a,jetty,link,thread,pool,that,should,be,used,by,the,link,server,return,a,jetty,link,thread,pool,or,code,null;public,thread,pool,get,thread,pool,return,this,thread,pool
JettyServletWebServerFactory -> public ThreadPool getThreadPool();1512201855;Returns a Jetty {@link ThreadPool} that should be used by the {@link Server}._@return a Jetty {@link ThreadPool} or {@code null};public ThreadPool getThreadPool() {_		return this.threadPool__	};returns,a,jetty,link,thread,pool,that,should,be,used,by,the,link,server,return,a,jetty,link,thread,pool,or,code,null;public,thread,pool,get,thread,pool,return,this,thread,pool
JettyServletWebServerFactory -> public ThreadPool getThreadPool();1514997812;Returns a Jetty {@link ThreadPool} that should be used by the {@link Server}._@return a Jetty {@link ThreadPool} or {@code null};public ThreadPool getThreadPool() {_		return this.threadPool__	};returns,a,jetty,link,thread,pool,that,should,be,used,by,the,link,server,return,a,jetty,link,thread,pool,or,code,null;public,thread,pool,get,thread,pool,return,this,thread,pool
JettyServletWebServerFactory -> public ThreadPool getThreadPool();1515014644;Returns a Jetty {@link ThreadPool} that should be used by the {@link Server}._@return a Jetty {@link ThreadPool} or {@code null};public ThreadPool getThreadPool() {_		return this.threadPool__	};returns,a,jetty,link,thread,pool,that,should,be,used,by,the,link,server,return,a,jetty,link,thread,pool,or,code,null;public,thread,pool,get,thread,pool,return,this,thread,pool
JettyServletWebServerFactory -> public ThreadPool getThreadPool();1515665717;Returns a Jetty {@link ThreadPool} that should be used by the {@link Server}._@return a Jetty {@link ThreadPool} or {@code null};public ThreadPool getThreadPool() {_		return this.threadPool__	};returns,a,jetty,link,thread,pool,that,should,be,used,by,the,link,server,return,a,jetty,link,thread,pool,or,code,null;public,thread,pool,get,thread,pool,return,this,thread,pool
JettyServletWebServerFactory -> public ThreadPool getThreadPool();1516114894;Returns a Jetty {@link ThreadPool} that should be used by the {@link Server}._@return a Jetty {@link ThreadPool} or {@code null};public ThreadPool getThreadPool() {_		return this.threadPool__	};returns,a,jetty,link,thread,pool,that,should,be,used,by,the,link,server,return,a,jetty,link,thread,pool,or,code,null;public,thread,pool,get,thread,pool,return,this,thread,pool
JettyServletWebServerFactory -> public ThreadPool getThreadPool();1516210343;Returns a Jetty {@link ThreadPool} that should be used by the {@link Server}._@return a Jetty {@link ThreadPool} or {@code null};public ThreadPool getThreadPool() {_		return this.threadPool__	};returns,a,jetty,link,thread,pool,that,should,be,used,by,the,link,server,return,a,jetty,link,thread,pool,or,code,null;public,thread,pool,get,thread,pool,return,this,thread,pool
JettyServletWebServerFactory -> public ThreadPool getThreadPool();1516215803;Returns a Jetty {@link ThreadPool} that should be used by the {@link Server}._@return a Jetty {@link ThreadPool} or {@code null};public ThreadPool getThreadPool() {_		return this.threadPool__	};returns,a,jetty,link,thread,pool,that,should,be,used,by,the,link,server,return,a,jetty,link,thread,pool,or,code,null;public,thread,pool,get,thread,pool,return,this,thread,pool
JettyServletWebServerFactory -> public ThreadPool getThreadPool();1516346511;Returns a Jetty {@link ThreadPool} that should be used by the {@link Server}._@return a Jetty {@link ThreadPool} or {@code null};public ThreadPool getThreadPool() {_		return this.threadPool__	};returns,a,jetty,link,thread,pool,that,should,be,used,by,the,link,server,return,a,jetty,link,thread,pool,or,code,null;public,thread,pool,get,thread,pool,return,this,thread,pool
JettyServletWebServerFactory -> public ThreadPool getThreadPool();1517419795;Returns a Jetty {@link ThreadPool} that should be used by the {@link Server}._@return a Jetty {@link ThreadPool} or {@code null};public ThreadPool getThreadPool() {_		return this.threadPool__	};returns,a,jetty,link,thread,pool,that,should,be,used,by,the,link,server,return,a,jetty,link,thread,pool,or,code,null;public,thread,pool,get,thread,pool,return,this,thread,pool
JettyServletWebServerFactory -> public ThreadPool getThreadPool();1517583695;Returns a Jetty {@link ThreadPool} that should be used by the {@link Server}._@return a Jetty {@link ThreadPool} or {@code null};public ThreadPool getThreadPool() {_		return this.threadPool__	};returns,a,jetty,link,thread,pool,that,should,be,used,by,the,link,server,return,a,jetty,link,thread,pool,or,code,null;public,thread,pool,get,thread,pool,return,this,thread,pool
JettyServletWebServerFactory -> public ThreadPool getThreadPool();1519362690;Returns a Jetty {@link ThreadPool} that should be used by the {@link Server}._@return a Jetty {@link ThreadPool} or {@code null};public ThreadPool getThreadPool() {_		return this.threadPool__	};returns,a,jetty,link,thread,pool,that,should,be,used,by,the,link,server,return,a,jetty,link,thread,pool,or,code,null;public,thread,pool,get,thread,pool,return,this,thread,pool
JettyServletWebServerFactory -> public ThreadPool getThreadPool();1519742833;Returns a Jetty {@link ThreadPool} that should be used by the {@link Server}._@return a Jetty {@link ThreadPool} or {@code null};public ThreadPool getThreadPool() {_		return this.threadPool__	};returns,a,jetty,link,thread,pool,that,should,be,used,by,the,link,server,return,a,jetty,link,thread,pool,or,code,null;public,thread,pool,get,thread,pool,return,this,thread,pool
JettyServletWebServerFactory -> public ThreadPool getThreadPool();1519817048;Returns a Jetty {@link ThreadPool} that should be used by the {@link Server}._@return a Jetty {@link ThreadPool} or {@code null};public ThreadPool getThreadPool() {_		return this.threadPool__	};returns,a,jetty,link,thread,pool,that,should,be,used,by,the,link,server,return,a,jetty,link,thread,pool,or,code,null;public,thread,pool,get,thread,pool,return,this,thread,pool
JettyServletWebServerFactory -> public ThreadPool getThreadPool();1521460869;Returns a Jetty {@link ThreadPool} that should be used by the {@link Server}._@return a Jetty {@link ThreadPool} or {@code null};public ThreadPool getThreadPool() {_		return this.threadPool__	};returns,a,jetty,link,thread,pool,that,should,be,used,by,the,link,server,return,a,jetty,link,thread,pool,or,code,null;public,thread,pool,get,thread,pool,return,this,thread,pool
JettyServletWebServerFactory -> public ThreadPool getThreadPool();1525255067;Returns a Jetty {@link ThreadPool} that should be used by the {@link Server}._@return a Jetty {@link ThreadPool} or {@code null};public ThreadPool getThreadPool() {_		return this.threadPool__	};returns,a,jetty,link,thread,pool,that,should,be,used,by,the,link,server,return,a,jetty,link,thread,pool,or,code,null;public,thread,pool,get,thread,pool,return,this,thread,pool
JettyServletWebServerFactory -> public ThreadPool getThreadPool();1525416882;Returns a Jetty {@link ThreadPool} that should be used by the {@link Server}._@return a Jetty {@link ThreadPool} or {@code null};public ThreadPool getThreadPool() {_		return this.threadPool__	};returns,a,jetty,link,thread,pool,that,should,be,used,by,the,link,server,return,a,jetty,link,thread,pool,or,code,null;public,thread,pool,get,thread,pool,return,this,thread,pool
JettyServletWebServerFactory -> public ThreadPool getThreadPool();1531909335;Returns a Jetty {@link ThreadPool} that should be used by the {@link Server}._@return a Jetty {@link ThreadPool} or {@code null};public ThreadPool getThreadPool() {_		return this.threadPool__	};returns,a,jetty,link,thread,pool,that,should,be,used,by,the,link,server,return,a,jetty,link,thread,pool,or,code,null;public,thread,pool,get,thread,pool,return,this,thread,pool
JettyServletWebServerFactory -> public ThreadPool getThreadPool();1532738143;Returns a Jetty {@link ThreadPool} that should be used by the {@link Server}._@return a Jetty {@link ThreadPool} or {@code null};public ThreadPool getThreadPool() {_		return this.threadPool__	};returns,a,jetty,link,thread,pool,that,should,be,used,by,the,link,server,return,a,jetty,link,thread,pool,or,code,null;public,thread,pool,get,thread,pool,return,this,thread,pool
JettyServletWebServerFactory -> protected Configuration[] getWebAppContextConfigurations(WebAppContext webAppContext, 			ServletContextInitializer... initializers);1507173536;Return the Jetty {@link Configuration}s that should be applied to the server._@param webAppContext the Jetty {@link WebAppContext}_@param initializers the {@link ServletContextInitializer}s to apply_@return configurations to apply;protected Configuration[] getWebAppContextConfigurations(WebAppContext webAppContext,_			ServletContextInitializer... initializers) {_		List<Configuration> configurations = new ArrayList<>()__		configurations.add(_				getServletContextInitializerConfiguration(webAppContext, initializers))__		configurations.addAll(getConfigurations())__		configurations.add(getErrorPageConfiguration())__		configurations.add(getMimeTypeConfiguration())__		return configurations.toArray(new Configuration[configurations.size()])__	};return,the,jetty,link,configuration,s,that,should,be,applied,to,the,server,param,web,app,context,the,jetty,link,web,app,context,param,initializers,the,link,servlet,context,initializer,s,to,apply,return,configurations,to,apply;protected,configuration,get,web,app,context,configurations,web,app,context,web,app,context,servlet,context,initializer,initializers,list,configuration,configurations,new,array,list,configurations,add,get,servlet,context,initializer,configuration,web,app,context,initializers,configurations,add,all,get,configurations,configurations,add,get,error,page,configuration,configurations,add,get,mime,type,configuration,return,configurations,to,array,new,configuration,configurations,size
JettyServletWebServerFactory -> protected Configuration[] getWebAppContextConfigurations(WebAppContext webAppContext, 			ServletContextInitializer... initializers);1509713766;Return the Jetty {@link Configuration}s that should be applied to the server._@param webAppContext the Jetty {@link WebAppContext}_@param initializers the {@link ServletContextInitializer}s to apply_@return configurations to apply;protected Configuration[] getWebAppContextConfigurations(WebAppContext webAppContext,_			ServletContextInitializer... initializers) {_		List<Configuration> configurations = new ArrayList<>()__		configurations.add(_				getServletContextInitializerConfiguration(webAppContext, initializers))__		configurations.addAll(getConfigurations())__		configurations.add(getErrorPageConfiguration())__		configurations.add(getMimeTypeConfiguration())__		return configurations.toArray(new Configuration[configurations.size()])__	};return,the,jetty,link,configuration,s,that,should,be,applied,to,the,server,param,web,app,context,the,jetty,link,web,app,context,param,initializers,the,link,servlet,context,initializer,s,to,apply,return,configurations,to,apply;protected,configuration,get,web,app,context,configurations,web,app,context,web,app,context,servlet,context,initializer,initializers,list,configuration,configurations,new,array,list,configurations,add,get,servlet,context,initializer,configuration,web,app,context,initializers,configurations,add,all,get,configurations,configurations,add,get,error,page,configuration,configurations,add,get,mime,type,configuration,return,configurations,to,array,new,configuration,configurations,size
JettyServletWebServerFactory -> protected Configuration[] getWebAppContextConfigurations(WebAppContext webAppContext, 			ServletContextInitializer... initializers);1509761243;Return the Jetty {@link Configuration}s that should be applied to the server._@param webAppContext the Jetty {@link WebAppContext}_@param initializers the {@link ServletContextInitializer}s to apply_@return configurations to apply;protected Configuration[] getWebAppContextConfigurations(WebAppContext webAppContext,_			ServletContextInitializer... initializers) {_		List<Configuration> configurations = new ArrayList<>()__		configurations.add(_				getServletContextInitializerConfiguration(webAppContext, initializers))__		configurations.addAll(getConfigurations())__		configurations.add(getErrorPageConfiguration())__		configurations.add(getMimeTypeConfiguration())__		return configurations.toArray(new Configuration[configurations.size()])__	};return,the,jetty,link,configuration,s,that,should,be,applied,to,the,server,param,web,app,context,the,jetty,link,web,app,context,param,initializers,the,link,servlet,context,initializer,s,to,apply,return,configurations,to,apply;protected,configuration,get,web,app,context,configurations,web,app,context,web,app,context,servlet,context,initializer,initializers,list,configuration,configurations,new,array,list,configurations,add,get,servlet,context,initializer,configuration,web,app,context,initializers,configurations,add,all,get,configurations,configurations,add,get,error,page,configuration,configurations,add,get,mime,type,configuration,return,configurations,to,array,new,configuration,configurations,size
JettyServletWebServerFactory -> protected Configuration[] getWebAppContextConfigurations(WebAppContext webAppContext, 			ServletContextInitializer... initializers);1510965901;Return the Jetty {@link Configuration}s that should be applied to the server._@param webAppContext the Jetty {@link WebAppContext}_@param initializers the {@link ServletContextInitializer}s to apply_@return configurations to apply;protected Configuration[] getWebAppContextConfigurations(WebAppContext webAppContext,_			ServletContextInitializer... initializers) {_		List<Configuration> configurations = new ArrayList<>()__		configurations.add(_				getServletContextInitializerConfiguration(webAppContext, initializers))__		configurations.addAll(getConfigurations())__		configurations.add(getErrorPageConfiguration())__		configurations.add(getMimeTypeConfiguration())__		return configurations.toArray(new Configuration[configurations.size()])__	};return,the,jetty,link,configuration,s,that,should,be,applied,to,the,server,param,web,app,context,the,jetty,link,web,app,context,param,initializers,the,link,servlet,context,initializer,s,to,apply,return,configurations,to,apply;protected,configuration,get,web,app,context,configurations,web,app,context,web,app,context,servlet,context,initializer,initializers,list,configuration,configurations,new,array,list,configurations,add,get,servlet,context,initializer,configuration,web,app,context,initializers,configurations,add,all,get,configurations,configurations,add,get,error,page,configuration,configurations,add,get,mime,type,configuration,return,configurations,to,array,new,configuration,configurations,size
JettyServletWebServerFactory -> protected Configuration[] getWebAppContextConfigurations(WebAppContext webAppContext, 			ServletContextInitializer... initializers);1511157177;Return the Jetty {@link Configuration}s that should be applied to the server._@param webAppContext the Jetty {@link WebAppContext}_@param initializers the {@link ServletContextInitializer}s to apply_@return configurations to apply;protected Configuration[] getWebAppContextConfigurations(WebAppContext webAppContext,_			ServletContextInitializer... initializers) {_		List<Configuration> configurations = new ArrayList<>()__		configurations.add(_				getServletContextInitializerConfiguration(webAppContext, initializers))__		configurations.addAll(getConfigurations())__		configurations.add(getErrorPageConfiguration())__		configurations.add(getMimeTypeConfiguration())__		return configurations.toArray(new Configuration[configurations.size()])__	};return,the,jetty,link,configuration,s,that,should,be,applied,to,the,server,param,web,app,context,the,jetty,link,web,app,context,param,initializers,the,link,servlet,context,initializer,s,to,apply,return,configurations,to,apply;protected,configuration,get,web,app,context,configurations,web,app,context,web,app,context,servlet,context,initializer,initializers,list,configuration,configurations,new,array,list,configurations,add,get,servlet,context,initializer,configuration,web,app,context,initializers,configurations,add,all,get,configurations,configurations,add,get,error,page,configuration,configurations,add,get,mime,type,configuration,return,configurations,to,array,new,configuration,configurations,size
JettyServletWebServerFactory -> protected Configuration[] getWebAppContextConfigurations(WebAppContext webAppContext, 			ServletContextInitializer... initializers);1512201855;Return the Jetty {@link Configuration}s that should be applied to the server._@param webAppContext the Jetty {@link WebAppContext}_@param initializers the {@link ServletContextInitializer}s to apply_@return configurations to apply;protected Configuration[] getWebAppContextConfigurations(WebAppContext webAppContext,_			ServletContextInitializer... initializers) {_		List<Configuration> configurations = new ArrayList<>()__		configurations.add(_				getServletContextInitializerConfiguration(webAppContext, initializers))__		configurations.addAll(getConfigurations())__		configurations.add(getErrorPageConfiguration())__		configurations.add(getMimeTypeConfiguration())__		return configurations.toArray(new Configuration[configurations.size()])__	};return,the,jetty,link,configuration,s,that,should,be,applied,to,the,server,param,web,app,context,the,jetty,link,web,app,context,param,initializers,the,link,servlet,context,initializer,s,to,apply,return,configurations,to,apply;protected,configuration,get,web,app,context,configurations,web,app,context,web,app,context,servlet,context,initializer,initializers,list,configuration,configurations,new,array,list,configurations,add,get,servlet,context,initializer,configuration,web,app,context,initializers,configurations,add,all,get,configurations,configurations,add,get,error,page,configuration,configurations,add,get,mime,type,configuration,return,configurations,to,array,new,configuration,configurations,size
JettyServletWebServerFactory -> protected Configuration[] getWebAppContextConfigurations(WebAppContext webAppContext, 			ServletContextInitializer... initializers);1514997812;Return the Jetty {@link Configuration}s that should be applied to the server._@param webAppContext the Jetty {@link WebAppContext}_@param initializers the {@link ServletContextInitializer}s to apply_@return configurations to apply;protected Configuration[] getWebAppContextConfigurations(WebAppContext webAppContext,_			ServletContextInitializer... initializers) {_		List<Configuration> configurations = new ArrayList<>()__		configurations.add(_				getServletContextInitializerConfiguration(webAppContext, initializers))__		configurations.addAll(getConfigurations())__		configurations.add(getErrorPageConfiguration())__		configurations.add(getMimeTypeConfiguration())__		return configurations.toArray(new Configuration[configurations.size()])__	};return,the,jetty,link,configuration,s,that,should,be,applied,to,the,server,param,web,app,context,the,jetty,link,web,app,context,param,initializers,the,link,servlet,context,initializer,s,to,apply,return,configurations,to,apply;protected,configuration,get,web,app,context,configurations,web,app,context,web,app,context,servlet,context,initializer,initializers,list,configuration,configurations,new,array,list,configurations,add,get,servlet,context,initializer,configuration,web,app,context,initializers,configurations,add,all,get,configurations,configurations,add,get,error,page,configuration,configurations,add,get,mime,type,configuration,return,configurations,to,array,new,configuration,configurations,size
JettyServletWebServerFactory -> protected Configuration[] getWebAppContextConfigurations(WebAppContext webAppContext, 			ServletContextInitializer... initializers);1515014644;Return the Jetty {@link Configuration}s that should be applied to the server._@param webAppContext the Jetty {@link WebAppContext}_@param initializers the {@link ServletContextInitializer}s to apply_@return configurations to apply;protected Configuration[] getWebAppContextConfigurations(WebAppContext webAppContext,_			ServletContextInitializer... initializers) {_		List<Configuration> configurations = new ArrayList<>()__		configurations.add(_				getServletContextInitializerConfiguration(webAppContext, initializers))__		configurations.addAll(getConfigurations())__		configurations.add(getErrorPageConfiguration())__		configurations.add(getMimeTypeConfiguration())__		return configurations.toArray(new Configuration[configurations.size()])__	};return,the,jetty,link,configuration,s,that,should,be,applied,to,the,server,param,web,app,context,the,jetty,link,web,app,context,param,initializers,the,link,servlet,context,initializer,s,to,apply,return,configurations,to,apply;protected,configuration,get,web,app,context,configurations,web,app,context,web,app,context,servlet,context,initializer,initializers,list,configuration,configurations,new,array,list,configurations,add,get,servlet,context,initializer,configuration,web,app,context,initializers,configurations,add,all,get,configurations,configurations,add,get,error,page,configuration,configurations,add,get,mime,type,configuration,return,configurations,to,array,new,configuration,configurations,size
JettyServletWebServerFactory -> protected Configuration[] getWebAppContextConfigurations(WebAppContext webAppContext, 			ServletContextInitializer... initializers);1515665717;Return the Jetty {@link Configuration}s that should be applied to the server._@param webAppContext the Jetty {@link WebAppContext}_@param initializers the {@link ServletContextInitializer}s to apply_@return configurations to apply;protected Configuration[] getWebAppContextConfigurations(WebAppContext webAppContext,_			ServletContextInitializer... initializers) {_		List<Configuration> configurations = new ArrayList<>()__		configurations.add(_				getServletContextInitializerConfiguration(webAppContext, initializers))__		configurations.addAll(getConfigurations())__		configurations.add(getErrorPageConfiguration())__		configurations.add(getMimeTypeConfiguration())__		return configurations.toArray(new Configuration[configurations.size()])__	};return,the,jetty,link,configuration,s,that,should,be,applied,to,the,server,param,web,app,context,the,jetty,link,web,app,context,param,initializers,the,link,servlet,context,initializer,s,to,apply,return,configurations,to,apply;protected,configuration,get,web,app,context,configurations,web,app,context,web,app,context,servlet,context,initializer,initializers,list,configuration,configurations,new,array,list,configurations,add,get,servlet,context,initializer,configuration,web,app,context,initializers,configurations,add,all,get,configurations,configurations,add,get,error,page,configuration,configurations,add,get,mime,type,configuration,return,configurations,to,array,new,configuration,configurations,size
JettyServletWebServerFactory -> protected Configuration[] getWebAppContextConfigurations(WebAppContext webAppContext, 			ServletContextInitializer... initializers);1516114894;Return the Jetty {@link Configuration}s that should be applied to the server._@param webAppContext the Jetty {@link WebAppContext}_@param initializers the {@link ServletContextInitializer}s to apply_@return configurations to apply;protected Configuration[] getWebAppContextConfigurations(WebAppContext webAppContext,_			ServletContextInitializer... initializers) {_		List<Configuration> configurations = new ArrayList<>()__		configurations.add(_				getServletContextInitializerConfiguration(webAppContext, initializers))__		configurations.addAll(getConfigurations())__		configurations.add(getErrorPageConfiguration())__		configurations.add(getMimeTypeConfiguration())__		return configurations.toArray(new Configuration[configurations.size()])__	};return,the,jetty,link,configuration,s,that,should,be,applied,to,the,server,param,web,app,context,the,jetty,link,web,app,context,param,initializers,the,link,servlet,context,initializer,s,to,apply,return,configurations,to,apply;protected,configuration,get,web,app,context,configurations,web,app,context,web,app,context,servlet,context,initializer,initializers,list,configuration,configurations,new,array,list,configurations,add,get,servlet,context,initializer,configuration,web,app,context,initializers,configurations,add,all,get,configurations,configurations,add,get,error,page,configuration,configurations,add,get,mime,type,configuration,return,configurations,to,array,new,configuration,configurations,size
JettyServletWebServerFactory -> protected Configuration[] getWebAppContextConfigurations(WebAppContext webAppContext, 			ServletContextInitializer... initializers);1516210343;Return the Jetty {@link Configuration}s that should be applied to the server._@param webAppContext the Jetty {@link WebAppContext}_@param initializers the {@link ServletContextInitializer}s to apply_@return configurations to apply;protected Configuration[] getWebAppContextConfigurations(WebAppContext webAppContext,_			ServletContextInitializer... initializers) {_		List<Configuration> configurations = new ArrayList<>()__		configurations.add(_				getServletContextInitializerConfiguration(webAppContext, initializers))__		configurations.addAll(getConfigurations())__		configurations.add(getErrorPageConfiguration())__		configurations.add(getMimeTypeConfiguration())__		return configurations.toArray(new Configuration[configurations.size()])__	};return,the,jetty,link,configuration,s,that,should,be,applied,to,the,server,param,web,app,context,the,jetty,link,web,app,context,param,initializers,the,link,servlet,context,initializer,s,to,apply,return,configurations,to,apply;protected,configuration,get,web,app,context,configurations,web,app,context,web,app,context,servlet,context,initializer,initializers,list,configuration,configurations,new,array,list,configurations,add,get,servlet,context,initializer,configuration,web,app,context,initializers,configurations,add,all,get,configurations,configurations,add,get,error,page,configuration,configurations,add,get,mime,type,configuration,return,configurations,to,array,new,configuration,configurations,size
JettyServletWebServerFactory -> protected Configuration[] getWebAppContextConfigurations(WebAppContext webAppContext, 			ServletContextInitializer... initializers);1516215803;Return the Jetty {@link Configuration}s that should be applied to the server._@param webAppContext the Jetty {@link WebAppContext}_@param initializers the {@link ServletContextInitializer}s to apply_@return configurations to apply;protected Configuration[] getWebAppContextConfigurations(WebAppContext webAppContext,_			ServletContextInitializer... initializers) {_		List<Configuration> configurations = new ArrayList<>()__		configurations.add(_				getServletContextInitializerConfiguration(webAppContext, initializers))__		configurations.addAll(getConfigurations())__		configurations.add(getErrorPageConfiguration())__		configurations.add(getMimeTypeConfiguration())__		return configurations.toArray(new Configuration[configurations.size()])__	};return,the,jetty,link,configuration,s,that,should,be,applied,to,the,server,param,web,app,context,the,jetty,link,web,app,context,param,initializers,the,link,servlet,context,initializer,s,to,apply,return,configurations,to,apply;protected,configuration,get,web,app,context,configurations,web,app,context,web,app,context,servlet,context,initializer,initializers,list,configuration,configurations,new,array,list,configurations,add,get,servlet,context,initializer,configuration,web,app,context,initializers,configurations,add,all,get,configurations,configurations,add,get,error,page,configuration,configurations,add,get,mime,type,configuration,return,configurations,to,array,new,configuration,configurations,size
JettyServletWebServerFactory -> protected Configuration[] getWebAppContextConfigurations(WebAppContext webAppContext, 			ServletContextInitializer... initializers);1516346511;Return the Jetty {@link Configuration}s that should be applied to the server._@param webAppContext the Jetty {@link WebAppContext}_@param initializers the {@link ServletContextInitializer}s to apply_@return configurations to apply;protected Configuration[] getWebAppContextConfigurations(WebAppContext webAppContext,_			ServletContextInitializer... initializers) {_		List<Configuration> configurations = new ArrayList<>()__		configurations.add(_				getServletContextInitializerConfiguration(webAppContext, initializers))__		configurations.addAll(getConfigurations())__		configurations.add(getErrorPageConfiguration())__		configurations.add(getMimeTypeConfiguration())__		return configurations.toArray(new Configuration[configurations.size()])__	};return,the,jetty,link,configuration,s,that,should,be,applied,to,the,server,param,web,app,context,the,jetty,link,web,app,context,param,initializers,the,link,servlet,context,initializer,s,to,apply,return,configurations,to,apply;protected,configuration,get,web,app,context,configurations,web,app,context,web,app,context,servlet,context,initializer,initializers,list,configuration,configurations,new,array,list,configurations,add,get,servlet,context,initializer,configuration,web,app,context,initializers,configurations,add,all,get,configurations,configurations,add,get,error,page,configuration,configurations,add,get,mime,type,configuration,return,configurations,to,array,new,configuration,configurations,size
JettyServletWebServerFactory -> protected Configuration[] getWebAppContextConfigurations(WebAppContext webAppContext, 			ServletContextInitializer... initializers);1517419795;Return the Jetty {@link Configuration}s that should be applied to the server._@param webAppContext the Jetty {@link WebAppContext}_@param initializers the {@link ServletContextInitializer}s to apply_@return configurations to apply;protected Configuration[] getWebAppContextConfigurations(WebAppContext webAppContext,_			ServletContextInitializer... initializers) {_		List<Configuration> configurations = new ArrayList<>()__		configurations.add(_				getServletContextInitializerConfiguration(webAppContext, initializers))__		configurations.addAll(getConfigurations())__		configurations.add(getErrorPageConfiguration())__		configurations.add(getMimeTypeConfiguration())__		return configurations.toArray(new Configuration[configurations.size()])__	};return,the,jetty,link,configuration,s,that,should,be,applied,to,the,server,param,web,app,context,the,jetty,link,web,app,context,param,initializers,the,link,servlet,context,initializer,s,to,apply,return,configurations,to,apply;protected,configuration,get,web,app,context,configurations,web,app,context,web,app,context,servlet,context,initializer,initializers,list,configuration,configurations,new,array,list,configurations,add,get,servlet,context,initializer,configuration,web,app,context,initializers,configurations,add,all,get,configurations,configurations,add,get,error,page,configuration,configurations,add,get,mime,type,configuration,return,configurations,to,array,new,configuration,configurations,size
JettyServletWebServerFactory -> protected Configuration[] getWebAppContextConfigurations(WebAppContext webAppContext, 			ServletContextInitializer... initializers);1517583695;Return the Jetty {@link Configuration}s that should be applied to the server._@param webAppContext the Jetty {@link WebAppContext}_@param initializers the {@link ServletContextInitializer}s to apply_@return configurations to apply;protected Configuration[] getWebAppContextConfigurations(WebAppContext webAppContext,_			ServletContextInitializer... initializers) {_		List<Configuration> configurations = new ArrayList<>()__		configurations.add(_				getServletContextInitializerConfiguration(webAppContext, initializers))__		configurations.addAll(getConfigurations())__		configurations.add(getErrorPageConfiguration())__		configurations.add(getMimeTypeConfiguration())__		return configurations.toArray(new Configuration[configurations.size()])__	};return,the,jetty,link,configuration,s,that,should,be,applied,to,the,server,param,web,app,context,the,jetty,link,web,app,context,param,initializers,the,link,servlet,context,initializer,s,to,apply,return,configurations,to,apply;protected,configuration,get,web,app,context,configurations,web,app,context,web,app,context,servlet,context,initializer,initializers,list,configuration,configurations,new,array,list,configurations,add,get,servlet,context,initializer,configuration,web,app,context,initializers,configurations,add,all,get,configurations,configurations,add,get,error,page,configuration,configurations,add,get,mime,type,configuration,return,configurations,to,array,new,configuration,configurations,size
JettyServletWebServerFactory -> protected Configuration[] getWebAppContextConfigurations(WebAppContext webAppContext, 			ServletContextInitializer... initializers);1519362690;Return the Jetty {@link Configuration}s that should be applied to the server._@param webAppContext the Jetty {@link WebAppContext}_@param initializers the {@link ServletContextInitializer}s to apply_@return configurations to apply;protected Configuration[] getWebAppContextConfigurations(WebAppContext webAppContext,_			ServletContextInitializer... initializers) {_		List<Configuration> configurations = new ArrayList<>()__		configurations.add(_				getServletContextInitializerConfiguration(webAppContext, initializers))__		configurations.addAll(getConfigurations())__		configurations.add(getErrorPageConfiguration())__		configurations.add(getMimeTypeConfiguration())__		return configurations.toArray(new Configuration[0])__	};return,the,jetty,link,configuration,s,that,should,be,applied,to,the,server,param,web,app,context,the,jetty,link,web,app,context,param,initializers,the,link,servlet,context,initializer,s,to,apply,return,configurations,to,apply;protected,configuration,get,web,app,context,configurations,web,app,context,web,app,context,servlet,context,initializer,initializers,list,configuration,configurations,new,array,list,configurations,add,get,servlet,context,initializer,configuration,web,app,context,initializers,configurations,add,all,get,configurations,configurations,add,get,error,page,configuration,configurations,add,get,mime,type,configuration,return,configurations,to,array,new,configuration,0
JettyServletWebServerFactory -> protected Configuration[] getWebAppContextConfigurations(WebAppContext webAppContext, 			ServletContextInitializer... initializers);1519742833;Return the Jetty {@link Configuration}s that should be applied to the server._@param webAppContext the Jetty {@link WebAppContext}_@param initializers the {@link ServletContextInitializer}s to apply_@return configurations to apply;protected Configuration[] getWebAppContextConfigurations(WebAppContext webAppContext,_			ServletContextInitializer... initializers) {_		List<Configuration> configurations = new ArrayList<>()__		configurations.add(_				getServletContextInitializerConfiguration(webAppContext, initializers))__		configurations.addAll(getConfigurations())__		configurations.add(getErrorPageConfiguration())__		configurations.add(getMimeTypeConfiguration())__		return configurations.toArray(new Configuration[0])__	};return,the,jetty,link,configuration,s,that,should,be,applied,to,the,server,param,web,app,context,the,jetty,link,web,app,context,param,initializers,the,link,servlet,context,initializer,s,to,apply,return,configurations,to,apply;protected,configuration,get,web,app,context,configurations,web,app,context,web,app,context,servlet,context,initializer,initializers,list,configuration,configurations,new,array,list,configurations,add,get,servlet,context,initializer,configuration,web,app,context,initializers,configurations,add,all,get,configurations,configurations,add,get,error,page,configuration,configurations,add,get,mime,type,configuration,return,configurations,to,array,new,configuration,0
JettyServletWebServerFactory -> protected Configuration[] getWebAppContextConfigurations(WebAppContext webAppContext, 			ServletContextInitializer... initializers);1519817048;Return the Jetty {@link Configuration}s that should be applied to the server._@param webAppContext the Jetty {@link WebAppContext}_@param initializers the {@link ServletContextInitializer}s to apply_@return configurations to apply;protected Configuration[] getWebAppContextConfigurations(WebAppContext webAppContext,_			ServletContextInitializer... initializers) {_		List<Configuration> configurations = new ArrayList<>()__		configurations.add(_				getServletContextInitializerConfiguration(webAppContext, initializers))__		configurations.addAll(getConfigurations())__		configurations.add(getErrorPageConfiguration())__		configurations.add(getMimeTypeConfiguration())__		return configurations.toArray(new Configuration[0])__	};return,the,jetty,link,configuration,s,that,should,be,applied,to,the,server,param,web,app,context,the,jetty,link,web,app,context,param,initializers,the,link,servlet,context,initializer,s,to,apply,return,configurations,to,apply;protected,configuration,get,web,app,context,configurations,web,app,context,web,app,context,servlet,context,initializer,initializers,list,configuration,configurations,new,array,list,configurations,add,get,servlet,context,initializer,configuration,web,app,context,initializers,configurations,add,all,get,configurations,configurations,add,get,error,page,configuration,configurations,add,get,mime,type,configuration,return,configurations,to,array,new,configuration,0
JettyServletWebServerFactory -> protected Configuration[] getWebAppContextConfigurations(WebAppContext webAppContext, 			ServletContextInitializer... initializers);1521460869;Return the Jetty {@link Configuration}s that should be applied to the server._@param webAppContext the Jetty {@link WebAppContext}_@param initializers the {@link ServletContextInitializer}s to apply_@return configurations to apply;protected Configuration[] getWebAppContextConfigurations(WebAppContext webAppContext,_			ServletContextInitializer... initializers) {_		List<Configuration> configurations = new ArrayList<>()__		configurations.add(_				getServletContextInitializerConfiguration(webAppContext, initializers))__		configurations.addAll(getConfigurations())__		configurations.add(getErrorPageConfiguration())__		configurations.add(getMimeTypeConfiguration())__		return configurations.toArray(new Configuration[0])__	};return,the,jetty,link,configuration,s,that,should,be,applied,to,the,server,param,web,app,context,the,jetty,link,web,app,context,param,initializers,the,link,servlet,context,initializer,s,to,apply,return,configurations,to,apply;protected,configuration,get,web,app,context,configurations,web,app,context,web,app,context,servlet,context,initializer,initializers,list,configuration,configurations,new,array,list,configurations,add,get,servlet,context,initializer,configuration,web,app,context,initializers,configurations,add,all,get,configurations,configurations,add,get,error,page,configuration,configurations,add,get,mime,type,configuration,return,configurations,to,array,new,configuration,0
JettyServletWebServerFactory -> protected Configuration[] getWebAppContextConfigurations(WebAppContext webAppContext, 			ServletContextInitializer... initializers);1525255067;Return the Jetty {@link Configuration}s that should be applied to the server._@param webAppContext the Jetty {@link WebAppContext}_@param initializers the {@link ServletContextInitializer}s to apply_@return configurations to apply;protected Configuration[] getWebAppContextConfigurations(WebAppContext webAppContext,_			ServletContextInitializer... initializers) {_		List<Configuration> configurations = new ArrayList<>()__		configurations.add(_				getServletContextInitializerConfiguration(webAppContext, initializers))__		configurations.addAll(getConfigurations())__		configurations.add(getErrorPageConfiguration())__		configurations.add(getMimeTypeConfiguration())__		return configurations.toArray(new Configuration[0])__	};return,the,jetty,link,configuration,s,that,should,be,applied,to,the,server,param,web,app,context,the,jetty,link,web,app,context,param,initializers,the,link,servlet,context,initializer,s,to,apply,return,configurations,to,apply;protected,configuration,get,web,app,context,configurations,web,app,context,web,app,context,servlet,context,initializer,initializers,list,configuration,configurations,new,array,list,configurations,add,get,servlet,context,initializer,configuration,web,app,context,initializers,configurations,add,all,get,configurations,configurations,add,get,error,page,configuration,configurations,add,get,mime,type,configuration,return,configurations,to,array,new,configuration,0
JettyServletWebServerFactory -> protected Configuration[] getWebAppContextConfigurations(WebAppContext webAppContext, 			ServletContextInitializer... initializers);1525416882;Return the Jetty {@link Configuration}s that should be applied to the server._@param webAppContext the Jetty {@link WebAppContext}_@param initializers the {@link ServletContextInitializer}s to apply_@return configurations to apply;protected Configuration[] getWebAppContextConfigurations(WebAppContext webAppContext,_			ServletContextInitializer... initializers) {_		List<Configuration> configurations = new ArrayList<>()__		configurations.add(_				getServletContextInitializerConfiguration(webAppContext, initializers))__		configurations.addAll(getConfigurations())__		configurations.add(getErrorPageConfiguration())__		configurations.add(getMimeTypeConfiguration())__		return configurations.toArray(new Configuration[0])__	};return,the,jetty,link,configuration,s,that,should,be,applied,to,the,server,param,web,app,context,the,jetty,link,web,app,context,param,initializers,the,link,servlet,context,initializer,s,to,apply,return,configurations,to,apply;protected,configuration,get,web,app,context,configurations,web,app,context,web,app,context,servlet,context,initializer,initializers,list,configuration,configurations,new,array,list,configurations,add,get,servlet,context,initializer,configuration,web,app,context,initializers,configurations,add,all,get,configurations,configurations,add,get,error,page,configuration,configurations,add,get,mime,type,configuration,return,configurations,to,array,new,configuration,0
JettyServletWebServerFactory -> protected Configuration[] getWebAppContextConfigurations(WebAppContext webAppContext, 			ServletContextInitializer... initializers);1531909335;Return the Jetty {@link Configuration}s that should be applied to the server._@param webAppContext the Jetty {@link WebAppContext}_@param initializers the {@link ServletContextInitializer}s to apply_@return configurations to apply;protected Configuration[] getWebAppContextConfigurations(WebAppContext webAppContext,_			ServletContextInitializer... initializers) {_		List<Configuration> configurations = new ArrayList<>()__		configurations.add(_				getServletContextInitializerConfiguration(webAppContext, initializers))__		configurations.addAll(getConfigurations())__		configurations.add(getErrorPageConfiguration())__		configurations.add(getMimeTypeConfiguration())__		return configurations.toArray(new Configuration[0])__	};return,the,jetty,link,configuration,s,that,should,be,applied,to,the,server,param,web,app,context,the,jetty,link,web,app,context,param,initializers,the,link,servlet,context,initializer,s,to,apply,return,configurations,to,apply;protected,configuration,get,web,app,context,configurations,web,app,context,web,app,context,servlet,context,initializer,initializers,list,configuration,configurations,new,array,list,configurations,add,get,servlet,context,initializer,configuration,web,app,context,initializers,configurations,add,all,get,configurations,configurations,add,get,error,page,configuration,configurations,add,get,mime,type,configuration,return,configurations,to,array,new,configuration,0
JettyServletWebServerFactory -> protected Configuration[] getWebAppContextConfigurations(WebAppContext webAppContext, 			ServletContextInitializer... initializers);1532738143;Return the Jetty {@link Configuration}s that should be applied to the server._@param webAppContext the Jetty {@link WebAppContext}_@param initializers the {@link ServletContextInitializer}s to apply_@return configurations to apply;protected Configuration[] getWebAppContextConfigurations(WebAppContext webAppContext,_			ServletContextInitializer... initializers) {_		List<Configuration> configurations = new ArrayList<>()__		configurations.add(_				getServletContextInitializerConfiguration(webAppContext, initializers))__		configurations.addAll(getConfigurations())__		configurations.add(getErrorPageConfiguration())__		configurations.add(getMimeTypeConfiguration())__		return configurations.toArray(new Configuration[0])__	};return,the,jetty,link,configuration,s,that,should,be,applied,to,the,server,param,web,app,context,the,jetty,link,web,app,context,param,initializers,the,link,servlet,context,initializer,s,to,apply,return,configurations,to,apply;protected,configuration,get,web,app,context,configurations,web,app,context,web,app,context,servlet,context,initializer,initializers,list,configuration,configurations,new,array,list,configurations,add,get,servlet,context,initializer,configuration,web,app,context,initializers,configurations,add,all,get,configurations,configurations,add,get,error,page,configuration,configurations,add,get,mime,type,configuration,return,configurations,to,array,new,configuration,0
JettyServletWebServerFactory -> public void setUseForwardHeaders(boolean useForwardHeaders);1507173536;Set if x-forward-* headers should be processed._@param useForwardHeaders if x-forward headers should be used_@since 1.3.0;public void setUseForwardHeaders(boolean useForwardHeaders) {_		this.useForwardHeaders = useForwardHeaders__	};set,if,x,forward,headers,should,be,processed,param,use,forward,headers,if,x,forward,headers,should,be,used,since,1,3,0;public,void,set,use,forward,headers,boolean,use,forward,headers,this,use,forward,headers,use,forward,headers
JettyServletWebServerFactory -> public void setUseForwardHeaders(boolean useForwardHeaders);1509713766;Set if x-forward-* headers should be processed._@param useForwardHeaders if x-forward headers should be used_@since 1.3.0;public void setUseForwardHeaders(boolean useForwardHeaders) {_		this.useForwardHeaders = useForwardHeaders__	};set,if,x,forward,headers,should,be,processed,param,use,forward,headers,if,x,forward,headers,should,be,used,since,1,3,0;public,void,set,use,forward,headers,boolean,use,forward,headers,this,use,forward,headers,use,forward,headers
JettyServletWebServerFactory -> public void setUseForwardHeaders(boolean useForwardHeaders);1509761243;Set if x-forward-* headers should be processed._@param useForwardHeaders if x-forward headers should be used_@since 1.3.0;public void setUseForwardHeaders(boolean useForwardHeaders) {_		this.useForwardHeaders = useForwardHeaders__	};set,if,x,forward,headers,should,be,processed,param,use,forward,headers,if,x,forward,headers,should,be,used,since,1,3,0;public,void,set,use,forward,headers,boolean,use,forward,headers,this,use,forward,headers,use,forward,headers
JettyServletWebServerFactory -> public void setUseForwardHeaders(boolean useForwardHeaders);1510965901;Set if x-forward-* headers should be processed._@param useForwardHeaders if x-forward headers should be used_@since 1.3.0;public void setUseForwardHeaders(boolean useForwardHeaders) {_		this.useForwardHeaders = useForwardHeaders__	};set,if,x,forward,headers,should,be,processed,param,use,forward,headers,if,x,forward,headers,should,be,used,since,1,3,0;public,void,set,use,forward,headers,boolean,use,forward,headers,this,use,forward,headers,use,forward,headers
JettyServletWebServerFactory -> public void setUseForwardHeaders(boolean useForwardHeaders);1511157177;Set if x-forward-* headers should be processed._@param useForwardHeaders if x-forward headers should be used_@since 1.3.0;public void setUseForwardHeaders(boolean useForwardHeaders) {_		this.useForwardHeaders = useForwardHeaders__	};set,if,x,forward,headers,should,be,processed,param,use,forward,headers,if,x,forward,headers,should,be,used,since,1,3,0;public,void,set,use,forward,headers,boolean,use,forward,headers,this,use,forward,headers,use,forward,headers
JettyServletWebServerFactory -> public void setUseForwardHeaders(boolean useForwardHeaders);1512201855;Set if x-forward-* headers should be processed._@param useForwardHeaders if x-forward headers should be used_@since 1.3.0;public void setUseForwardHeaders(boolean useForwardHeaders) {_		this.useForwardHeaders = useForwardHeaders__	};set,if,x,forward,headers,should,be,processed,param,use,forward,headers,if,x,forward,headers,should,be,used,since,1,3,0;public,void,set,use,forward,headers,boolean,use,forward,headers,this,use,forward,headers,use,forward,headers
JettyServletWebServerFactory -> public void setUseForwardHeaders(boolean useForwardHeaders);1514997812;Set if x-forward-* headers should be processed._@param useForwardHeaders if x-forward headers should be used_@since 1.3.0;public void setUseForwardHeaders(boolean useForwardHeaders) {_		this.useForwardHeaders = useForwardHeaders__	};set,if,x,forward,headers,should,be,processed,param,use,forward,headers,if,x,forward,headers,should,be,used,since,1,3,0;public,void,set,use,forward,headers,boolean,use,forward,headers,this,use,forward,headers,use,forward,headers
JettyServletWebServerFactory -> public void setUseForwardHeaders(boolean useForwardHeaders);1515014644;Set if x-forward-* headers should be processed._@param useForwardHeaders if x-forward headers should be used_@since 1.3.0;public void setUseForwardHeaders(boolean useForwardHeaders) {_		this.useForwardHeaders = useForwardHeaders__	};set,if,x,forward,headers,should,be,processed,param,use,forward,headers,if,x,forward,headers,should,be,used,since,1,3,0;public,void,set,use,forward,headers,boolean,use,forward,headers,this,use,forward,headers,use,forward,headers
JettyServletWebServerFactory -> public void setSelectors(int selectors);1507173536;Set the number of selector threads to use._@param selectors the number of selector threads to use_@since 1.4.0;public void setSelectors(int selectors) {_		this.selectors = selectors__	};set,the,number,of,selector,threads,to,use,param,selectors,the,number,of,selector,threads,to,use,since,1,4,0;public,void,set,selectors,int,selectors,this,selectors,selectors
JettyServletWebServerFactory -> public void setSelectors(int selectors);1509713766;Set the number of selector threads to use._@param selectors the number of selector threads to use_@since 1.4.0;public void setSelectors(int selectors) {_		this.selectors = selectors__	};set,the,number,of,selector,threads,to,use,param,selectors,the,number,of,selector,threads,to,use,since,1,4,0;public,void,set,selectors,int,selectors,this,selectors,selectors
JettyServletWebServerFactory -> public void setSelectors(int selectors);1509761243;Set the number of selector threads to use._@param selectors the number of selector threads to use_@since 1.4.0;public void setSelectors(int selectors) {_		this.selectors = selectors__	};set,the,number,of,selector,threads,to,use,param,selectors,the,number,of,selector,threads,to,use,since,1,4,0;public,void,set,selectors,int,selectors,this,selectors,selectors
JettyServletWebServerFactory -> public void setSelectors(int selectors);1510965901;Set the number of selector threads to use._@param selectors the number of selector threads to use_@since 1.4.0;public void setSelectors(int selectors) {_		this.selectors = selectors__	};set,the,number,of,selector,threads,to,use,param,selectors,the,number,of,selector,threads,to,use,since,1,4,0;public,void,set,selectors,int,selectors,this,selectors,selectors
JettyServletWebServerFactory -> public void setSelectors(int selectors);1511157177;Set the number of selector threads to use._@param selectors the number of selector threads to use_@since 1.4.0;public void setSelectors(int selectors) {_		this.selectors = selectors__	};set,the,number,of,selector,threads,to,use,param,selectors,the,number,of,selector,threads,to,use,since,1,4,0;public,void,set,selectors,int,selectors,this,selectors,selectors
JettyServletWebServerFactory -> public void setSelectors(int selectors);1512201855;Set the number of selector threads to use._@param selectors the number of selector threads to use_@since 1.4.0;public void setSelectors(int selectors) {_		this.selectors = selectors__	};set,the,number,of,selector,threads,to,use,param,selectors,the,number,of,selector,threads,to,use,since,1,4,0;public,void,set,selectors,int,selectors,this,selectors,selectors
JettyServletWebServerFactory -> public void setSelectors(int selectors);1514997812;Set the number of selector threads to use._@param selectors the number of selector threads to use_@since 1.4.0;public void setSelectors(int selectors) {_		this.selectors = selectors__	};set,the,number,of,selector,threads,to,use,param,selectors,the,number,of,selector,threads,to,use,since,1,4,0;public,void,set,selectors,int,selectors,this,selectors,selectors
JettyServletWebServerFactory -> public void setSelectors(int selectors);1515014644;Set the number of selector threads to use._@param selectors the number of selector threads to use_@since 1.4.0;public void setSelectors(int selectors) {_		this.selectors = selectors__	};set,the,number,of,selector,threads,to,use,param,selectors,the,number,of,selector,threads,to,use,since,1,4,0;public,void,set,selectors,int,selectors,this,selectors,selectors
JettyServletWebServerFactory -> protected final void addJspServlet(WebAppContext context);1507173536;Add Jetty's {@code JspServlet} to the given {@link WebAppContext}._@param context the jetty {@link WebAppContext};protected final void addJspServlet(WebAppContext context) {_		Assert.notNull(context, "Context must not be null")__		ServletHolder holder = new ServletHolder()__		holder.setName("jsp")__		holder.setClassName(getJsp().getClassName())__		holder.setInitParameter("fork", "false")__		holder.setInitParameters(getJsp().getInitParameters())__		holder.setInitOrder(3)__		context.getServletHandler().addServlet(holder)__		ServletMapping mapping = new ServletMapping()__		mapping.setServletName("jsp")__		mapping.setPathSpecs(new String[] { "*.jsp", "*.jspx" })__		context.getServletHandler().addServletMapping(mapping)__	};add,jetty,s,code,jsp,servlet,to,the,given,link,web,app,context,param,context,the,jetty,link,web,app,context;protected,final,void,add,jsp,servlet,web,app,context,context,assert,not,null,context,context,must,not,be,null,servlet,holder,holder,new,servlet,holder,holder,set,name,jsp,holder,set,class,name,get,jsp,get,class,name,holder,set,init,parameter,fork,false,holder,set,init,parameters,get,jsp,get,init,parameters,holder,set,init,order,3,context,get,servlet,handler,add,servlet,holder,servlet,mapping,mapping,new,servlet,mapping,mapping,set,servlet,name,jsp,mapping,set,path,specs,new,string,jsp,jspx,context,get,servlet,handler,add,servlet,mapping,mapping
JettyServletWebServerFactory -> protected final void addJspServlet(WebAppContext context);1509713766;Add Jetty's {@code JspServlet} to the given {@link WebAppContext}._@param context the jetty {@link WebAppContext};protected final void addJspServlet(WebAppContext context) {_		Assert.notNull(context, "Context must not be null")__		ServletHolder holder = new ServletHolder()__		holder.setName("jsp")__		holder.setClassName(getJsp().getClassName())__		holder.setInitParameter("fork", "false")__		holder.setInitParameters(getJsp().getInitParameters())__		holder.setInitOrder(3)__		context.getServletHandler().addServlet(holder)__		ServletMapping mapping = new ServletMapping()__		mapping.setServletName("jsp")__		mapping.setPathSpecs(new String[] {"*.jsp", "*.jspx"})__		context.getServletHandler().addServletMapping(mapping)__	};add,jetty,s,code,jsp,servlet,to,the,given,link,web,app,context,param,context,the,jetty,link,web,app,context;protected,final,void,add,jsp,servlet,web,app,context,context,assert,not,null,context,context,must,not,be,null,servlet,holder,holder,new,servlet,holder,holder,set,name,jsp,holder,set,class,name,get,jsp,get,class,name,holder,set,init,parameter,fork,false,holder,set,init,parameters,get,jsp,get,init,parameters,holder,set,init,order,3,context,get,servlet,handler,add,servlet,holder,servlet,mapping,mapping,new,servlet,mapping,mapping,set,servlet,name,jsp,mapping,set,path,specs,new,string,jsp,jspx,context,get,servlet,handler,add,servlet,mapping,mapping
JettyServletWebServerFactory -> protected final void addJspServlet(WebAppContext context);1509761243;Add Jetty's {@code JspServlet} to the given {@link WebAppContext}._@param context the jetty {@link WebAppContext};protected final void addJspServlet(WebAppContext context) {_		Assert.notNull(context, "Context must not be null")__		ServletHolder holder = new ServletHolder()__		holder.setName("jsp")__		holder.setClassName(getJsp().getClassName())__		holder.setInitParameter("fork", "false")__		holder.setInitParameters(getJsp().getInitParameters())__		holder.setInitOrder(3)__		context.getServletHandler().addServlet(holder)__		ServletMapping mapping = new ServletMapping()__		mapping.setServletName("jsp")__		mapping.setPathSpecs(new String[] { "*.jsp", "*.jspx" })__		context.getServletHandler().addServletMapping(mapping)__	};add,jetty,s,code,jsp,servlet,to,the,given,link,web,app,context,param,context,the,jetty,link,web,app,context;protected,final,void,add,jsp,servlet,web,app,context,context,assert,not,null,context,context,must,not,be,null,servlet,holder,holder,new,servlet,holder,holder,set,name,jsp,holder,set,class,name,get,jsp,get,class,name,holder,set,init,parameter,fork,false,holder,set,init,parameters,get,jsp,get,init,parameters,holder,set,init,order,3,context,get,servlet,handler,add,servlet,holder,servlet,mapping,mapping,new,servlet,mapping,mapping,set,servlet,name,jsp,mapping,set,path,specs,new,string,jsp,jspx,context,get,servlet,handler,add,servlet,mapping,mapping
JettyServletWebServerFactory -> protected final void addJspServlet(WebAppContext context);1510965901;Add Jetty's {@code JspServlet} to the given {@link WebAppContext}._@param context the jetty {@link WebAppContext};protected final void addJspServlet(WebAppContext context) {_		Assert.notNull(context, "Context must not be null")__		ServletHolder holder = new ServletHolder()__		holder.setName("jsp")__		holder.setClassName(getJsp().getClassName())__		holder.setInitParameter("fork", "false")__		holder.setInitParameters(getJsp().getInitParameters())__		holder.setInitOrder(3)__		context.getServletHandler().addServlet(holder)__		ServletMapping mapping = new ServletMapping()__		mapping.setServletName("jsp")__		mapping.setPathSpecs(new String[] { "*.jsp", "*.jspx" })__		context.getServletHandler().addServletMapping(mapping)__	};add,jetty,s,code,jsp,servlet,to,the,given,link,web,app,context,param,context,the,jetty,link,web,app,context;protected,final,void,add,jsp,servlet,web,app,context,context,assert,not,null,context,context,must,not,be,null,servlet,holder,holder,new,servlet,holder,holder,set,name,jsp,holder,set,class,name,get,jsp,get,class,name,holder,set,init,parameter,fork,false,holder,set,init,parameters,get,jsp,get,init,parameters,holder,set,init,order,3,context,get,servlet,handler,add,servlet,holder,servlet,mapping,mapping,new,servlet,mapping,mapping,set,servlet,name,jsp,mapping,set,path,specs,new,string,jsp,jspx,context,get,servlet,handler,add,servlet,mapping,mapping
JettyServletWebServerFactory -> protected final void addJspServlet(WebAppContext context);1511157177;Add Jetty's {@code JspServlet} to the given {@link WebAppContext}._@param context the jetty {@link WebAppContext};protected final void addJspServlet(WebAppContext context) {_		Assert.notNull(context, "Context must not be null")__		ServletHolder holder = new ServletHolder()__		holder.setName("jsp")__		holder.setClassName(getJsp().getClassName())__		holder.setInitParameter("fork", "false")__		holder.setInitParameters(getJsp().getInitParameters())__		holder.setInitOrder(3)__		context.getServletHandler().addServlet(holder)__		ServletMapping mapping = new ServletMapping()__		mapping.setServletName("jsp")__		mapping.setPathSpecs(new String[] { "*.jsp", "*.jspx" })__		context.getServletHandler().addServletMapping(mapping)__	};add,jetty,s,code,jsp,servlet,to,the,given,link,web,app,context,param,context,the,jetty,link,web,app,context;protected,final,void,add,jsp,servlet,web,app,context,context,assert,not,null,context,context,must,not,be,null,servlet,holder,holder,new,servlet,holder,holder,set,name,jsp,holder,set,class,name,get,jsp,get,class,name,holder,set,init,parameter,fork,false,holder,set,init,parameters,get,jsp,get,init,parameters,holder,set,init,order,3,context,get,servlet,handler,add,servlet,holder,servlet,mapping,mapping,new,servlet,mapping,mapping,set,servlet,name,jsp,mapping,set,path,specs,new,string,jsp,jspx,context,get,servlet,handler,add,servlet,mapping,mapping
JettyServletWebServerFactory -> protected final void addJspServlet(WebAppContext context);1512201855;Add Jetty's {@code JspServlet} to the given {@link WebAppContext}._@param context the jetty {@link WebAppContext};protected final void addJspServlet(WebAppContext context) {_		Assert.notNull(context, "Context must not be null")__		ServletHolder holder = new ServletHolder()__		holder.setName("jsp")__		holder.setClassName(getJsp().getClassName())__		holder.setInitParameter("fork", "false")__		holder.setInitParameters(getJsp().getInitParameters())__		holder.setInitOrder(3)__		context.getServletHandler().addServlet(holder)__		ServletMapping mapping = new ServletMapping()__		mapping.setServletName("jsp")__		mapping.setPathSpecs(new String[] { "*.jsp", "*.jspx" })__		context.getServletHandler().addServletMapping(mapping)__	};add,jetty,s,code,jsp,servlet,to,the,given,link,web,app,context,param,context,the,jetty,link,web,app,context;protected,final,void,add,jsp,servlet,web,app,context,context,assert,not,null,context,context,must,not,be,null,servlet,holder,holder,new,servlet,holder,holder,set,name,jsp,holder,set,class,name,get,jsp,get,class,name,holder,set,init,parameter,fork,false,holder,set,init,parameters,get,jsp,get,init,parameters,holder,set,init,order,3,context,get,servlet,handler,add,servlet,holder,servlet,mapping,mapping,new,servlet,mapping,mapping,set,servlet,name,jsp,mapping,set,path,specs,new,string,jsp,jspx,context,get,servlet,handler,add,servlet,mapping,mapping
JettyServletWebServerFactory -> protected final void addJspServlet(WebAppContext context);1514997812;Add Jetty's {@code JspServlet} to the given {@link WebAppContext}._@param context the jetty {@link WebAppContext};protected final void addJspServlet(WebAppContext context) {_		Assert.notNull(context, "Context must not be null")__		ServletHolder holder = new ServletHolder()__		holder.setName("jsp")__		holder.setClassName(getJsp().getClassName())__		holder.setInitParameter("fork", "false")__		holder.setInitParameters(getJsp().getInitParameters())__		holder.setInitOrder(3)__		context.getServletHandler().addServlet(holder)__		ServletMapping mapping = new ServletMapping()__		mapping.setServletName("jsp")__		mapping.setPathSpecs(new String[] { "*.jsp", "*.jspx" })__		context.getServletHandler().addServletMapping(mapping)__	};add,jetty,s,code,jsp,servlet,to,the,given,link,web,app,context,param,context,the,jetty,link,web,app,context;protected,final,void,add,jsp,servlet,web,app,context,context,assert,not,null,context,context,must,not,be,null,servlet,holder,holder,new,servlet,holder,holder,set,name,jsp,holder,set,class,name,get,jsp,get,class,name,holder,set,init,parameter,fork,false,holder,set,init,parameters,get,jsp,get,init,parameters,holder,set,init,order,3,context,get,servlet,handler,add,servlet,holder,servlet,mapping,mapping,new,servlet,mapping,mapping,set,servlet,name,jsp,mapping,set,path,specs,new,string,jsp,jspx,context,get,servlet,handler,add,servlet,mapping,mapping
JettyServletWebServerFactory -> protected final void addJspServlet(WebAppContext context);1515014644;Add Jetty's {@code JspServlet} to the given {@link WebAppContext}._@param context the jetty {@link WebAppContext};protected final void addJspServlet(WebAppContext context) {_		Assert.notNull(context, "Context must not be null")__		ServletHolder holder = new ServletHolder()__		holder.setName("jsp")__		holder.setClassName(getJsp().getClassName())__		holder.setInitParameter("fork", "false")__		holder.setInitParameters(getJsp().getInitParameters())__		holder.setInitOrder(3)__		context.getServletHandler().addServlet(holder)__		ServletMapping mapping = new ServletMapping()__		mapping.setServletName("jsp")__		mapping.setPathSpecs(new String[] { "*.jsp", "*.jspx" })__		context.getServletHandler().addServletMapping(mapping)__	};add,jetty,s,code,jsp,servlet,to,the,given,link,web,app,context,param,context,the,jetty,link,web,app,context;protected,final,void,add,jsp,servlet,web,app,context,context,assert,not,null,context,context,must,not,be,null,servlet,holder,holder,new,servlet,holder,holder,set,name,jsp,holder,set,class,name,get,jsp,get,class,name,holder,set,init,parameter,fork,false,holder,set,init,parameters,get,jsp,get,init,parameters,holder,set,init,order,3,context,get,servlet,handler,add,servlet,holder,servlet,mapping,mapping,new,servlet,mapping,mapping,set,servlet,name,jsp,mapping,set,path,specs,new,string,jsp,jspx,context,get,servlet,handler,add,servlet,mapping,mapping
JettyServletWebServerFactory -> protected final void addJspServlet(WebAppContext context);1515665717;Add Jetty's {@code JspServlet} to the given {@link WebAppContext}._@param context the jetty {@link WebAppContext};protected final void addJspServlet(WebAppContext context) {_		Assert.notNull(context, "Context must not be null")__		ServletHolder holder = new ServletHolder()__		holder.setName("jsp")__		holder.setClassName(getJsp().getClassName())__		holder.setInitParameter("fork", "false")__		holder.setInitParameters(getJsp().getInitParameters())__		holder.setInitOrder(3)__		context.getServletHandler().addServlet(holder)__		ServletMapping mapping = new ServletMapping()__		mapping.setServletName("jsp")__		mapping.setPathSpecs(new String[] { "*.jsp", "*.jspx" })__		context.getServletHandler().addServletMapping(mapping)__	};add,jetty,s,code,jsp,servlet,to,the,given,link,web,app,context,param,context,the,jetty,link,web,app,context;protected,final,void,add,jsp,servlet,web,app,context,context,assert,not,null,context,context,must,not,be,null,servlet,holder,holder,new,servlet,holder,holder,set,name,jsp,holder,set,class,name,get,jsp,get,class,name,holder,set,init,parameter,fork,false,holder,set,init,parameters,get,jsp,get,init,parameters,holder,set,init,order,3,context,get,servlet,handler,add,servlet,holder,servlet,mapping,mapping,new,servlet,mapping,mapping,set,servlet,name,jsp,mapping,set,path,specs,new,string,jsp,jspx,context,get,servlet,handler,add,servlet,mapping,mapping
JettyServletWebServerFactory -> protected final void addJspServlet(WebAppContext context);1516114894;Add Jetty's {@code JspServlet} to the given {@link WebAppContext}._@param context the jetty {@link WebAppContext};protected final void addJspServlet(WebAppContext context) {_		Assert.notNull(context, "Context must not be null")__		ServletHolder holder = new ServletHolder()__		holder.setName("jsp")__		holder.setClassName(getJsp().getClassName())__		holder.setInitParameter("fork", "false")__		holder.setInitParameters(getJsp().getInitParameters())__		holder.setInitOrder(3)__		context.getServletHandler().addServlet(holder)__		ServletMapping mapping = new ServletMapping()__		mapping.setServletName("jsp")__		mapping.setPathSpecs(new String[] { "*.jsp", "*.jspx" })__		context.getServletHandler().addServletMapping(mapping)__	};add,jetty,s,code,jsp,servlet,to,the,given,link,web,app,context,param,context,the,jetty,link,web,app,context;protected,final,void,add,jsp,servlet,web,app,context,context,assert,not,null,context,context,must,not,be,null,servlet,holder,holder,new,servlet,holder,holder,set,name,jsp,holder,set,class,name,get,jsp,get,class,name,holder,set,init,parameter,fork,false,holder,set,init,parameters,get,jsp,get,init,parameters,holder,set,init,order,3,context,get,servlet,handler,add,servlet,holder,servlet,mapping,mapping,new,servlet,mapping,mapping,set,servlet,name,jsp,mapping,set,path,specs,new,string,jsp,jspx,context,get,servlet,handler,add,servlet,mapping,mapping
JettyServletWebServerFactory -> protected final void addJspServlet(WebAppContext context);1516210343;Add Jetty's {@code JspServlet} to the given {@link WebAppContext}._@param context the jetty {@link WebAppContext};protected final void addJspServlet(WebAppContext context) {_		Assert.notNull(context, "Context must not be null")__		ServletHolder holder = new ServletHolder()__		holder.setName("jsp")__		holder.setClassName(getJsp().getClassName())__		holder.setInitParameter("fork", "false")__		holder.setInitParameters(getJsp().getInitParameters())__		holder.setInitOrder(3)__		context.getServletHandler().addServlet(holder)__		ServletMapping mapping = new ServletMapping()__		mapping.setServletName("jsp")__		mapping.setPathSpecs(new String[] { "*.jsp", "*.jspx" })__		context.getServletHandler().addServletMapping(mapping)__	};add,jetty,s,code,jsp,servlet,to,the,given,link,web,app,context,param,context,the,jetty,link,web,app,context;protected,final,void,add,jsp,servlet,web,app,context,context,assert,not,null,context,context,must,not,be,null,servlet,holder,holder,new,servlet,holder,holder,set,name,jsp,holder,set,class,name,get,jsp,get,class,name,holder,set,init,parameter,fork,false,holder,set,init,parameters,get,jsp,get,init,parameters,holder,set,init,order,3,context,get,servlet,handler,add,servlet,holder,servlet,mapping,mapping,new,servlet,mapping,mapping,set,servlet,name,jsp,mapping,set,path,specs,new,string,jsp,jspx,context,get,servlet,handler,add,servlet,mapping,mapping
JettyServletWebServerFactory -> protected final void addJspServlet(WebAppContext context);1516215803;Add Jetty's {@code JspServlet} to the given {@link WebAppContext}._@param context the jetty {@link WebAppContext};protected final void addJspServlet(WebAppContext context) {_		Assert.notNull(context, "Context must not be null")__		ServletHolder holder = new ServletHolder()__		holder.setName("jsp")__		holder.setClassName(getJsp().getClassName())__		holder.setInitParameter("fork", "false")__		holder.setInitParameters(getJsp().getInitParameters())__		holder.setInitOrder(3)__		context.getServletHandler().addServlet(holder)__		ServletMapping mapping = new ServletMapping()__		mapping.setServletName("jsp")__		mapping.setPathSpecs(new String[] { "*.jsp", "*.jspx" })__		context.getServletHandler().addServletMapping(mapping)__	};add,jetty,s,code,jsp,servlet,to,the,given,link,web,app,context,param,context,the,jetty,link,web,app,context;protected,final,void,add,jsp,servlet,web,app,context,context,assert,not,null,context,context,must,not,be,null,servlet,holder,holder,new,servlet,holder,holder,set,name,jsp,holder,set,class,name,get,jsp,get,class,name,holder,set,init,parameter,fork,false,holder,set,init,parameters,get,jsp,get,init,parameters,holder,set,init,order,3,context,get,servlet,handler,add,servlet,holder,servlet,mapping,mapping,new,servlet,mapping,mapping,set,servlet,name,jsp,mapping,set,path,specs,new,string,jsp,jspx,context,get,servlet,handler,add,servlet,mapping,mapping
JettyServletWebServerFactory -> protected final void addJspServlet(WebAppContext context);1516346511;Add Jetty's {@code JspServlet} to the given {@link WebAppContext}._@param context the jetty {@link WebAppContext};protected final void addJspServlet(WebAppContext context) {_		Assert.notNull(context, "Context must not be null")__		ServletHolder holder = new ServletHolder()__		holder.setName("jsp")__		holder.setClassName(getJsp().getClassName())__		holder.setInitParameter("fork", "false")__		holder.setInitParameters(getJsp().getInitParameters())__		holder.setInitOrder(3)__		context.getServletHandler().addServlet(holder)__		ServletMapping mapping = new ServletMapping()__		mapping.setServletName("jsp")__		mapping.setPathSpecs(new String[] { "*.jsp", "*.jspx" })__		context.getServletHandler().addServletMapping(mapping)__	};add,jetty,s,code,jsp,servlet,to,the,given,link,web,app,context,param,context,the,jetty,link,web,app,context;protected,final,void,add,jsp,servlet,web,app,context,context,assert,not,null,context,context,must,not,be,null,servlet,holder,holder,new,servlet,holder,holder,set,name,jsp,holder,set,class,name,get,jsp,get,class,name,holder,set,init,parameter,fork,false,holder,set,init,parameters,get,jsp,get,init,parameters,holder,set,init,order,3,context,get,servlet,handler,add,servlet,holder,servlet,mapping,mapping,new,servlet,mapping,mapping,set,servlet,name,jsp,mapping,set,path,specs,new,string,jsp,jspx,context,get,servlet,handler,add,servlet,mapping,mapping
JettyServletWebServerFactory -> protected final void addJspServlet(WebAppContext context);1517419795;Add Jetty's {@code JspServlet} to the given {@link WebAppContext}._@param context the jetty {@link WebAppContext};protected final void addJspServlet(WebAppContext context) {_		Assert.notNull(context, "Context must not be null")__		ServletHolder holder = new ServletHolder()__		holder.setName("jsp")__		holder.setClassName(getJsp().getClassName())__		holder.setInitParameter("fork", "false")__		holder.setInitParameters(getJsp().getInitParameters())__		holder.setInitOrder(3)__		context.getServletHandler().addServlet(holder)__		ServletMapping mapping = new ServletMapping()__		mapping.setServletName("jsp")__		mapping.setPathSpecs(new String[] { "*.jsp", "*.jspx" })__		context.getServletHandler().addServletMapping(mapping)__	};add,jetty,s,code,jsp,servlet,to,the,given,link,web,app,context,param,context,the,jetty,link,web,app,context;protected,final,void,add,jsp,servlet,web,app,context,context,assert,not,null,context,context,must,not,be,null,servlet,holder,holder,new,servlet,holder,holder,set,name,jsp,holder,set,class,name,get,jsp,get,class,name,holder,set,init,parameter,fork,false,holder,set,init,parameters,get,jsp,get,init,parameters,holder,set,init,order,3,context,get,servlet,handler,add,servlet,holder,servlet,mapping,mapping,new,servlet,mapping,mapping,set,servlet,name,jsp,mapping,set,path,specs,new,string,jsp,jspx,context,get,servlet,handler,add,servlet,mapping,mapping
JettyServletWebServerFactory -> protected final void addJspServlet(WebAppContext context);1517583695;Add Jetty's {@code JspServlet} to the given {@link WebAppContext}._@param context the jetty {@link WebAppContext};protected final void addJspServlet(WebAppContext context) {_		Assert.notNull(context, "Context must not be null")__		ServletHolder holder = new ServletHolder()__		holder.setName("jsp")__		holder.setClassName(getJsp().getClassName())__		holder.setInitParameter("fork", "false")__		holder.setInitParameters(getJsp().getInitParameters())__		holder.setInitOrder(3)__		context.getServletHandler().addServlet(holder)__		ServletMapping mapping = new ServletMapping()__		mapping.setServletName("jsp")__		mapping.setPathSpecs(new String[] { "*.jsp", "*.jspx" })__		context.getServletHandler().addServletMapping(mapping)__	};add,jetty,s,code,jsp,servlet,to,the,given,link,web,app,context,param,context,the,jetty,link,web,app,context;protected,final,void,add,jsp,servlet,web,app,context,context,assert,not,null,context,context,must,not,be,null,servlet,holder,holder,new,servlet,holder,holder,set,name,jsp,holder,set,class,name,get,jsp,get,class,name,holder,set,init,parameter,fork,false,holder,set,init,parameters,get,jsp,get,init,parameters,holder,set,init,order,3,context,get,servlet,handler,add,servlet,holder,servlet,mapping,mapping,new,servlet,mapping,mapping,set,servlet,name,jsp,mapping,set,path,specs,new,string,jsp,jspx,context,get,servlet,handler,add,servlet,mapping,mapping
JettyServletWebServerFactory -> protected final void addJspServlet(WebAppContext context);1519362690;Add Jetty's {@code JspServlet} to the given {@link WebAppContext}._@param context the jetty {@link WebAppContext};protected final void addJspServlet(WebAppContext context) {_		Assert.notNull(context, "Context must not be null")__		ServletHolder holder = new ServletHolder()__		holder.setName("jsp")__		holder.setClassName(getJsp().getClassName())__		holder.setInitParameter("fork", "false")__		holder.setInitParameters(getJsp().getInitParameters())__		holder.setInitOrder(3)__		context.getServletHandler().addServlet(holder)__		ServletMapping mapping = new ServletMapping()__		mapping.setServletName("jsp")__		mapping.setPathSpecs(new String[] { "*.jsp", "*.jspx" })__		context.getServletHandler().addServletMapping(mapping)__	};add,jetty,s,code,jsp,servlet,to,the,given,link,web,app,context,param,context,the,jetty,link,web,app,context;protected,final,void,add,jsp,servlet,web,app,context,context,assert,not,null,context,context,must,not,be,null,servlet,holder,holder,new,servlet,holder,holder,set,name,jsp,holder,set,class,name,get,jsp,get,class,name,holder,set,init,parameter,fork,false,holder,set,init,parameters,get,jsp,get,init,parameters,holder,set,init,order,3,context,get,servlet,handler,add,servlet,holder,servlet,mapping,mapping,new,servlet,mapping,mapping,set,servlet,name,jsp,mapping,set,path,specs,new,string,jsp,jspx,context,get,servlet,handler,add,servlet,mapping,mapping
JettyServletWebServerFactory -> protected final void addJspServlet(WebAppContext context);1519742833;Add Jetty's {@code JspServlet} to the given {@link WebAppContext}._@param context the jetty {@link WebAppContext};protected final void addJspServlet(WebAppContext context) {_		Assert.notNull(context, "Context must not be null")__		ServletHolder holder = new ServletHolder()__		holder.setName("jsp")__		holder.setClassName(getJsp().getClassName())__		holder.setInitParameter("fork", "false")__		holder.setInitParameters(getJsp().getInitParameters())__		holder.setInitOrder(3)__		context.getServletHandler().addServlet(holder)__		ServletMapping mapping = new ServletMapping()__		mapping.setServletName("jsp")__		mapping.setPathSpecs(new String[] { "*.jsp", "*.jspx" })__		context.getServletHandler().addServletMapping(mapping)__	};add,jetty,s,code,jsp,servlet,to,the,given,link,web,app,context,param,context,the,jetty,link,web,app,context;protected,final,void,add,jsp,servlet,web,app,context,context,assert,not,null,context,context,must,not,be,null,servlet,holder,holder,new,servlet,holder,holder,set,name,jsp,holder,set,class,name,get,jsp,get,class,name,holder,set,init,parameter,fork,false,holder,set,init,parameters,get,jsp,get,init,parameters,holder,set,init,order,3,context,get,servlet,handler,add,servlet,holder,servlet,mapping,mapping,new,servlet,mapping,mapping,set,servlet,name,jsp,mapping,set,path,specs,new,string,jsp,jspx,context,get,servlet,handler,add,servlet,mapping,mapping
JettyServletWebServerFactory -> protected final void addJspServlet(WebAppContext context);1519817048;Add Jetty's {@code JspServlet} to the given {@link WebAppContext}._@param context the jetty {@link WebAppContext};protected final void addJspServlet(WebAppContext context) {_		Assert.notNull(context, "Context must not be null")__		ServletHolder holder = new ServletHolder()__		holder.setName("jsp")__		holder.setClassName(getJsp().getClassName())__		holder.setInitParameter("fork", "false")__		holder.setInitParameters(getJsp().getInitParameters())__		holder.setInitOrder(3)__		context.getServletHandler().addServlet(holder)__		ServletMapping mapping = new ServletMapping()__		mapping.setServletName("jsp")__		mapping.setPathSpecs(new String[] { "*.jsp", "*.jspx" })__		context.getServletHandler().addServletMapping(mapping)__	};add,jetty,s,code,jsp,servlet,to,the,given,link,web,app,context,param,context,the,jetty,link,web,app,context;protected,final,void,add,jsp,servlet,web,app,context,context,assert,not,null,context,context,must,not,be,null,servlet,holder,holder,new,servlet,holder,holder,set,name,jsp,holder,set,class,name,get,jsp,get,class,name,holder,set,init,parameter,fork,false,holder,set,init,parameters,get,jsp,get,init,parameters,holder,set,init,order,3,context,get,servlet,handler,add,servlet,holder,servlet,mapping,mapping,new,servlet,mapping,mapping,set,servlet,name,jsp,mapping,set,path,specs,new,string,jsp,jspx,context,get,servlet,handler,add,servlet,mapping,mapping
JettyServletWebServerFactory -> protected final void addJspServlet(WebAppContext context);1521460869;Add Jetty's {@code JspServlet} to the given {@link WebAppContext}._@param context the jetty {@link WebAppContext};protected final void addJspServlet(WebAppContext context) {_		Assert.notNull(context, "Context must not be null")__		ServletHolder holder = new ServletHolder()__		holder.setName("jsp")__		holder.setClassName(getJsp().getClassName())__		holder.setInitParameter("fork", "false")__		holder.setInitParameters(getJsp().getInitParameters())__		holder.setInitOrder(3)__		context.getServletHandler().addServlet(holder)__		ServletMapping mapping = new ServletMapping()__		mapping.setServletName("jsp")__		mapping.setPathSpecs(new String[] { "*.jsp", "*.jspx" })__		context.getServletHandler().addServletMapping(mapping)__	};add,jetty,s,code,jsp,servlet,to,the,given,link,web,app,context,param,context,the,jetty,link,web,app,context;protected,final,void,add,jsp,servlet,web,app,context,context,assert,not,null,context,context,must,not,be,null,servlet,holder,holder,new,servlet,holder,holder,set,name,jsp,holder,set,class,name,get,jsp,get,class,name,holder,set,init,parameter,fork,false,holder,set,init,parameters,get,jsp,get,init,parameters,holder,set,init,order,3,context,get,servlet,handler,add,servlet,holder,servlet,mapping,mapping,new,servlet,mapping,mapping,set,servlet,name,jsp,mapping,set,path,specs,new,string,jsp,jspx,context,get,servlet,handler,add,servlet,mapping,mapping
JettyServletWebServerFactory -> protected final void addJspServlet(WebAppContext context);1525255067;Add Jetty's {@code JspServlet} to the given {@link WebAppContext}._@param context the jetty {@link WebAppContext};protected final void addJspServlet(WebAppContext context) {_		Assert.notNull(context, "Context must not be null")__		ServletHolder holder = new ServletHolder()__		holder.setName("jsp")__		holder.setClassName(getJsp().getClassName())__		holder.setInitParameter("fork", "false")__		holder.setInitParameters(getJsp().getInitParameters())__		holder.setInitOrder(3)__		context.getServletHandler().addServlet(holder)__		ServletMapping mapping = new ServletMapping()__		mapping.setServletName("jsp")__		mapping.setPathSpecs(new String[] { "*.jsp", "*.jspx" })__		context.getServletHandler().addServletMapping(mapping)__	};add,jetty,s,code,jsp,servlet,to,the,given,link,web,app,context,param,context,the,jetty,link,web,app,context;protected,final,void,add,jsp,servlet,web,app,context,context,assert,not,null,context,context,must,not,be,null,servlet,holder,holder,new,servlet,holder,holder,set,name,jsp,holder,set,class,name,get,jsp,get,class,name,holder,set,init,parameter,fork,false,holder,set,init,parameters,get,jsp,get,init,parameters,holder,set,init,order,3,context,get,servlet,handler,add,servlet,holder,servlet,mapping,mapping,new,servlet,mapping,mapping,set,servlet,name,jsp,mapping,set,path,specs,new,string,jsp,jspx,context,get,servlet,handler,add,servlet,mapping,mapping
JettyServletWebServerFactory -> protected final void addJspServlet(WebAppContext context);1525416882;Add Jetty's {@code JspServlet} to the given {@link WebAppContext}._@param context the jetty {@link WebAppContext};protected final void addJspServlet(WebAppContext context) {_		Assert.notNull(context, "Context must not be null")__		ServletHolder holder = new ServletHolder()__		holder.setName("jsp")__		holder.setClassName(getJsp().getClassName())__		holder.setInitParameter("fork", "false")__		holder.setInitParameters(getJsp().getInitParameters())__		holder.setInitOrder(3)__		context.getServletHandler().addServlet(holder)__		ServletMapping mapping = new ServletMapping()__		mapping.setServletName("jsp")__		mapping.setPathSpecs(new String[] { "*.jsp", "*.jspx" })__		context.getServletHandler().addServletMapping(mapping)__	};add,jetty,s,code,jsp,servlet,to,the,given,link,web,app,context,param,context,the,jetty,link,web,app,context;protected,final,void,add,jsp,servlet,web,app,context,context,assert,not,null,context,context,must,not,be,null,servlet,holder,holder,new,servlet,holder,holder,set,name,jsp,holder,set,class,name,get,jsp,get,class,name,holder,set,init,parameter,fork,false,holder,set,init,parameters,get,jsp,get,init,parameters,holder,set,init,order,3,context,get,servlet,handler,add,servlet,holder,servlet,mapping,mapping,new,servlet,mapping,mapping,set,servlet,name,jsp,mapping,set,path,specs,new,string,jsp,jspx,context,get,servlet,handler,add,servlet,mapping,mapping
JettyServletWebServerFactory -> protected final void addJspServlet(WebAppContext context);1531909335;Add Jetty's {@code JspServlet} to the given {@link WebAppContext}._@param context the jetty {@link WebAppContext};protected final void addJspServlet(WebAppContext context) {_		Assert.notNull(context, "Context must not be null")__		ServletHolder holder = new ServletHolder()__		holder.setName("jsp")__		holder.setClassName(getJsp().getClassName())__		holder.setInitParameter("fork", "false")__		holder.setInitParameters(getJsp().getInitParameters())__		holder.setInitOrder(3)__		context.getServletHandler().addServlet(holder)__		ServletMapping mapping = new ServletMapping()__		mapping.setServletName("jsp")__		mapping.setPathSpecs(new String[] { "*.jsp", "*.jspx" })__		context.getServletHandler().addServletMapping(mapping)__	};add,jetty,s,code,jsp,servlet,to,the,given,link,web,app,context,param,context,the,jetty,link,web,app,context;protected,final,void,add,jsp,servlet,web,app,context,context,assert,not,null,context,context,must,not,be,null,servlet,holder,holder,new,servlet,holder,holder,set,name,jsp,holder,set,class,name,get,jsp,get,class,name,holder,set,init,parameter,fork,false,holder,set,init,parameters,get,jsp,get,init,parameters,holder,set,init,order,3,context,get,servlet,handler,add,servlet,holder,servlet,mapping,mapping,new,servlet,mapping,mapping,set,servlet,name,jsp,mapping,set,path,specs,new,string,jsp,jspx,context,get,servlet,handler,add,servlet,mapping,mapping
JettyServletWebServerFactory -> protected final void addJspServlet(WebAppContext context);1532738143;Add Jetty's {@code JspServlet} to the given {@link WebAppContext}._@param context the jetty {@link WebAppContext};protected final void addJspServlet(WebAppContext context) {_		Assert.notNull(context, "Context must not be null")__		ServletHolder holder = new ServletHolder()__		holder.setName("jsp")__		holder.setClassName(getJsp().getClassName())__		holder.setInitParameter("fork", "false")__		holder.setInitParameters(getJsp().getInitParameters())__		holder.setInitOrder(3)__		context.getServletHandler().addServlet(holder)__		ServletMapping mapping = new ServletMapping()__		mapping.setServletName("jsp")__		mapping.setPathSpecs(new String[] { "*.jsp", "*.jspx" })__		context.getServletHandler().addServletMapping(mapping)__	};add,jetty,s,code,jsp,servlet,to,the,given,link,web,app,context,param,context,the,jetty,link,web,app,context;protected,final,void,add,jsp,servlet,web,app,context,context,assert,not,null,context,context,must,not,be,null,servlet,holder,holder,new,servlet,holder,holder,set,name,jsp,holder,set,class,name,get,jsp,get,class,name,holder,set,init,parameter,fork,false,holder,set,init,parameters,get,jsp,get,init,parameters,holder,set,init,order,3,context,get,servlet,handler,add,servlet,holder,servlet,mapping,mapping,new,servlet,mapping,mapping,set,servlet,name,jsp,mapping,set,path,specs,new,string,jsp,jspx,context,get,servlet,handler,add,servlet,mapping,mapping
JettyServletWebServerFactory -> public void setConfigurations(Collection<? extends Configuration> configurations);1507173536;Sets Jetty {@link Configuration}s that will be applied to the {@link WebAppContext}_before the server is created. Calling this method will replace any existing_configurations._@param configurations the Jetty configurations to apply;public void setConfigurations(Collection<? extends Configuration> configurations) {_		Assert.notNull(configurations, "Configurations must not be null")__		this.configurations = new ArrayList<>(configurations)__	};sets,jetty,link,configuration,s,that,will,be,applied,to,the,link,web,app,context,before,the,server,is,created,calling,this,method,will,replace,any,existing,configurations,param,configurations,the,jetty,configurations,to,apply;public,void,set,configurations,collection,extends,configuration,configurations,assert,not,null,configurations,configurations,must,not,be,null,this,configurations,new,array,list,configurations
JettyServletWebServerFactory -> public void setConfigurations(Collection<? extends Configuration> configurations);1509713766;Sets Jetty {@link Configuration}s that will be applied to the {@link WebAppContext}_before the server is created. Calling this method will replace any existing_configurations._@param configurations the Jetty configurations to apply;public void setConfigurations(Collection<? extends Configuration> configurations) {_		Assert.notNull(configurations, "Configurations must not be null")__		this.configurations = new ArrayList<>(configurations)__	};sets,jetty,link,configuration,s,that,will,be,applied,to,the,link,web,app,context,before,the,server,is,created,calling,this,method,will,replace,any,existing,configurations,param,configurations,the,jetty,configurations,to,apply;public,void,set,configurations,collection,extends,configuration,configurations,assert,not,null,configurations,configurations,must,not,be,null,this,configurations,new,array,list,configurations
JettyServletWebServerFactory -> public void setConfigurations(Collection<? extends Configuration> configurations);1509761243;Sets Jetty {@link Configuration}s that will be applied to the {@link WebAppContext}_before the server is created. Calling this method will replace any existing_configurations._@param configurations the Jetty configurations to apply;public void setConfigurations(Collection<? extends Configuration> configurations) {_		Assert.notNull(configurations, "Configurations must not be null")__		this.configurations = new ArrayList<>(configurations)__	};sets,jetty,link,configuration,s,that,will,be,applied,to,the,link,web,app,context,before,the,server,is,created,calling,this,method,will,replace,any,existing,configurations,param,configurations,the,jetty,configurations,to,apply;public,void,set,configurations,collection,extends,configuration,configurations,assert,not,null,configurations,configurations,must,not,be,null,this,configurations,new,array,list,configurations
JettyServletWebServerFactory -> public void setConfigurations(Collection<? extends Configuration> configurations);1510965901;Sets Jetty {@link Configuration}s that will be applied to the {@link WebAppContext}_before the server is created. Calling this method will replace any existing_configurations._@param configurations the Jetty configurations to apply;public void setConfigurations(Collection<? extends Configuration> configurations) {_		Assert.notNull(configurations, "Configurations must not be null")__		this.configurations = new ArrayList<>(configurations)__	};sets,jetty,link,configuration,s,that,will,be,applied,to,the,link,web,app,context,before,the,server,is,created,calling,this,method,will,replace,any,existing,configurations,param,configurations,the,jetty,configurations,to,apply;public,void,set,configurations,collection,extends,configuration,configurations,assert,not,null,configurations,configurations,must,not,be,null,this,configurations,new,array,list,configurations
JettyServletWebServerFactory -> public void setConfigurations(Collection<? extends Configuration> configurations);1511157177;Sets Jetty {@link Configuration}s that will be applied to the {@link WebAppContext}_before the server is created. Calling this method will replace any existing_configurations._@param configurations the Jetty configurations to apply;public void setConfigurations(Collection<? extends Configuration> configurations) {_		Assert.notNull(configurations, "Configurations must not be null")__		this.configurations = new ArrayList<>(configurations)__	};sets,jetty,link,configuration,s,that,will,be,applied,to,the,link,web,app,context,before,the,server,is,created,calling,this,method,will,replace,any,existing,configurations,param,configurations,the,jetty,configurations,to,apply;public,void,set,configurations,collection,extends,configuration,configurations,assert,not,null,configurations,configurations,must,not,be,null,this,configurations,new,array,list,configurations
JettyServletWebServerFactory -> public void setConfigurations(Collection<? extends Configuration> configurations);1512201855;Sets Jetty {@link Configuration}s that will be applied to the {@link WebAppContext}_before the server is created. Calling this method will replace any existing_configurations._@param configurations the Jetty configurations to apply;public void setConfigurations(Collection<? extends Configuration> configurations) {_		Assert.notNull(configurations, "Configurations must not be null")__		this.configurations = new ArrayList<>(configurations)__	};sets,jetty,link,configuration,s,that,will,be,applied,to,the,link,web,app,context,before,the,server,is,created,calling,this,method,will,replace,any,existing,configurations,param,configurations,the,jetty,configurations,to,apply;public,void,set,configurations,collection,extends,configuration,configurations,assert,not,null,configurations,configurations,must,not,be,null,this,configurations,new,array,list,configurations
JettyServletWebServerFactory -> public void setConfigurations(Collection<? extends Configuration> configurations);1514997812;Sets Jetty {@link Configuration}s that will be applied to the {@link WebAppContext}_before the server is created. Calling this method will replace any existing_configurations._@param configurations the Jetty configurations to apply;public void setConfigurations(Collection<? extends Configuration> configurations) {_		Assert.notNull(configurations, "Configurations must not be null")__		this.configurations = new ArrayList<>(configurations)__	};sets,jetty,link,configuration,s,that,will,be,applied,to,the,link,web,app,context,before,the,server,is,created,calling,this,method,will,replace,any,existing,configurations,param,configurations,the,jetty,configurations,to,apply;public,void,set,configurations,collection,extends,configuration,configurations,assert,not,null,configurations,configurations,must,not,be,null,this,configurations,new,array,list,configurations
JettyServletWebServerFactory -> public void setConfigurations(Collection<? extends Configuration> configurations);1515014644;Sets Jetty {@link Configuration}s that will be applied to the {@link WebAppContext}_before the server is created. Calling this method will replace any existing_configurations._@param configurations the Jetty configurations to apply;public void setConfigurations(Collection<? extends Configuration> configurations) {_		Assert.notNull(configurations, "Configurations must not be null")__		this.configurations = new ArrayList<>(configurations)__	};sets,jetty,link,configuration,s,that,will,be,applied,to,the,link,web,app,context,before,the,server,is,created,calling,this,method,will,replace,any,existing,configurations,param,configurations,the,jetty,configurations,to,apply;public,void,set,configurations,collection,extends,configuration,configurations,assert,not,null,configurations,configurations,must,not,be,null,this,configurations,new,array,list,configurations
JettyServletWebServerFactory -> public void setConfigurations(Collection<? extends Configuration> configurations);1515665717;Sets Jetty {@link Configuration}s that will be applied to the {@link WebAppContext}_before the server is created. Calling this method will replace any existing_configurations._@param configurations the Jetty configurations to apply;public void setConfigurations(Collection<? extends Configuration> configurations) {_		Assert.notNull(configurations, "Configurations must not be null")__		this.configurations = new ArrayList<>(configurations)__	};sets,jetty,link,configuration,s,that,will,be,applied,to,the,link,web,app,context,before,the,server,is,created,calling,this,method,will,replace,any,existing,configurations,param,configurations,the,jetty,configurations,to,apply;public,void,set,configurations,collection,extends,configuration,configurations,assert,not,null,configurations,configurations,must,not,be,null,this,configurations,new,array,list,configurations
JettyServletWebServerFactory -> public void setConfigurations(Collection<? extends Configuration> configurations);1516114894;Sets Jetty {@link Configuration}s that will be applied to the {@link WebAppContext}_before the server is created. Calling this method will replace any existing_configurations._@param configurations the Jetty configurations to apply;public void setConfigurations(Collection<? extends Configuration> configurations) {_		Assert.notNull(configurations, "Configurations must not be null")__		this.configurations = new ArrayList<>(configurations)__	};sets,jetty,link,configuration,s,that,will,be,applied,to,the,link,web,app,context,before,the,server,is,created,calling,this,method,will,replace,any,existing,configurations,param,configurations,the,jetty,configurations,to,apply;public,void,set,configurations,collection,extends,configuration,configurations,assert,not,null,configurations,configurations,must,not,be,null,this,configurations,new,array,list,configurations
JettyServletWebServerFactory -> public void setConfigurations(Collection<? extends Configuration> configurations);1516210343;Sets Jetty {@link Configuration}s that will be applied to the {@link WebAppContext}_before the server is created. Calling this method will replace any existing_configurations._@param configurations the Jetty configurations to apply;public void setConfigurations(Collection<? extends Configuration> configurations) {_		Assert.notNull(configurations, "Configurations must not be null")__		this.configurations = new ArrayList<>(configurations)__	};sets,jetty,link,configuration,s,that,will,be,applied,to,the,link,web,app,context,before,the,server,is,created,calling,this,method,will,replace,any,existing,configurations,param,configurations,the,jetty,configurations,to,apply;public,void,set,configurations,collection,extends,configuration,configurations,assert,not,null,configurations,configurations,must,not,be,null,this,configurations,new,array,list,configurations
JettyServletWebServerFactory -> public void setConfigurations(Collection<? extends Configuration> configurations);1516215803;Sets Jetty {@link Configuration}s that will be applied to the {@link WebAppContext}_before the server is created. Calling this method will replace any existing_configurations._@param configurations the Jetty configurations to apply;public void setConfigurations(Collection<? extends Configuration> configurations) {_		Assert.notNull(configurations, "Configurations must not be null")__		this.configurations = new ArrayList<>(configurations)__	};sets,jetty,link,configuration,s,that,will,be,applied,to,the,link,web,app,context,before,the,server,is,created,calling,this,method,will,replace,any,existing,configurations,param,configurations,the,jetty,configurations,to,apply;public,void,set,configurations,collection,extends,configuration,configurations,assert,not,null,configurations,configurations,must,not,be,null,this,configurations,new,array,list,configurations
JettyServletWebServerFactory -> public void setConfigurations(Collection<? extends Configuration> configurations);1516346511;Sets Jetty {@link Configuration}s that will be applied to the {@link WebAppContext}_before the server is created. Calling this method will replace any existing_configurations._@param configurations the Jetty configurations to apply;public void setConfigurations(Collection<? extends Configuration> configurations) {_		Assert.notNull(configurations, "Configurations must not be null")__		this.configurations = new ArrayList<>(configurations)__	};sets,jetty,link,configuration,s,that,will,be,applied,to,the,link,web,app,context,before,the,server,is,created,calling,this,method,will,replace,any,existing,configurations,param,configurations,the,jetty,configurations,to,apply;public,void,set,configurations,collection,extends,configuration,configurations,assert,not,null,configurations,configurations,must,not,be,null,this,configurations,new,array,list,configurations
JettyServletWebServerFactory -> public void setConfigurations(Collection<? extends Configuration> configurations);1517419795;Sets Jetty {@link Configuration}s that will be applied to the {@link WebAppContext}_before the server is created. Calling this method will replace any existing_configurations._@param configurations the Jetty configurations to apply;public void setConfigurations(Collection<? extends Configuration> configurations) {_		Assert.notNull(configurations, "Configurations must not be null")__		this.configurations = new ArrayList<>(configurations)__	};sets,jetty,link,configuration,s,that,will,be,applied,to,the,link,web,app,context,before,the,server,is,created,calling,this,method,will,replace,any,existing,configurations,param,configurations,the,jetty,configurations,to,apply;public,void,set,configurations,collection,extends,configuration,configurations,assert,not,null,configurations,configurations,must,not,be,null,this,configurations,new,array,list,configurations
JettyServletWebServerFactory -> public void setConfigurations(Collection<? extends Configuration> configurations);1517583695;Sets Jetty {@link Configuration}s that will be applied to the {@link WebAppContext}_before the server is created. Calling this method will replace any existing_configurations._@param configurations the Jetty configurations to apply;public void setConfigurations(Collection<? extends Configuration> configurations) {_		Assert.notNull(configurations, "Configurations must not be null")__		this.configurations = new ArrayList<>(configurations)__	};sets,jetty,link,configuration,s,that,will,be,applied,to,the,link,web,app,context,before,the,server,is,created,calling,this,method,will,replace,any,existing,configurations,param,configurations,the,jetty,configurations,to,apply;public,void,set,configurations,collection,extends,configuration,configurations,assert,not,null,configurations,configurations,must,not,be,null,this,configurations,new,array,list,configurations
JettyServletWebServerFactory -> public void setConfigurations(Collection<? extends Configuration> configurations);1519362690;Sets Jetty {@link Configuration}s that will be applied to the {@link WebAppContext}_before the server is created. Calling this method will replace any existing_configurations._@param configurations the Jetty configurations to apply;public void setConfigurations(Collection<? extends Configuration> configurations) {_		Assert.notNull(configurations, "Configurations must not be null")__		this.configurations = new ArrayList<>(configurations)__	};sets,jetty,link,configuration,s,that,will,be,applied,to,the,link,web,app,context,before,the,server,is,created,calling,this,method,will,replace,any,existing,configurations,param,configurations,the,jetty,configurations,to,apply;public,void,set,configurations,collection,extends,configuration,configurations,assert,not,null,configurations,configurations,must,not,be,null,this,configurations,new,array,list,configurations
JettyServletWebServerFactory -> public void setConfigurations(Collection<? extends Configuration> configurations);1519742833;Sets Jetty {@link Configuration}s that will be applied to the {@link WebAppContext}_before the server is created. Calling this method will replace any existing_configurations._@param configurations the Jetty configurations to apply;public void setConfigurations(Collection<? extends Configuration> configurations) {_		Assert.notNull(configurations, "Configurations must not be null")__		this.configurations = new ArrayList<>(configurations)__	};sets,jetty,link,configuration,s,that,will,be,applied,to,the,link,web,app,context,before,the,server,is,created,calling,this,method,will,replace,any,existing,configurations,param,configurations,the,jetty,configurations,to,apply;public,void,set,configurations,collection,extends,configuration,configurations,assert,not,null,configurations,configurations,must,not,be,null,this,configurations,new,array,list,configurations
JettyServletWebServerFactory -> public void setConfigurations(Collection<? extends Configuration> configurations);1519817048;Sets Jetty {@link Configuration}s that will be applied to the {@link WebAppContext}_before the server is created. Calling this method will replace any existing_configurations._@param configurations the Jetty configurations to apply;public void setConfigurations(Collection<? extends Configuration> configurations) {_		Assert.notNull(configurations, "Configurations must not be null")__		this.configurations = new ArrayList<>(configurations)__	};sets,jetty,link,configuration,s,that,will,be,applied,to,the,link,web,app,context,before,the,server,is,created,calling,this,method,will,replace,any,existing,configurations,param,configurations,the,jetty,configurations,to,apply;public,void,set,configurations,collection,extends,configuration,configurations,assert,not,null,configurations,configurations,must,not,be,null,this,configurations,new,array,list,configurations
JettyServletWebServerFactory -> public void setConfigurations(Collection<? extends Configuration> configurations);1521460869;Sets Jetty {@link Configuration}s that will be applied to the {@link WebAppContext}_before the server is created. Calling this method will replace any existing_configurations._@param configurations the Jetty configurations to apply;public void setConfigurations(Collection<? extends Configuration> configurations) {_		Assert.notNull(configurations, "Configurations must not be null")__		this.configurations = new ArrayList<>(configurations)__	};sets,jetty,link,configuration,s,that,will,be,applied,to,the,link,web,app,context,before,the,server,is,created,calling,this,method,will,replace,any,existing,configurations,param,configurations,the,jetty,configurations,to,apply;public,void,set,configurations,collection,extends,configuration,configurations,assert,not,null,configurations,configurations,must,not,be,null,this,configurations,new,array,list,configurations
JettyServletWebServerFactory -> public void setConfigurations(Collection<? extends Configuration> configurations);1525255067;Sets Jetty {@link Configuration}s that will be applied to the {@link WebAppContext}_before the server is created. Calling this method will replace any existing_configurations._@param configurations the Jetty configurations to apply;public void setConfigurations(Collection<? extends Configuration> configurations) {_		Assert.notNull(configurations, "Configurations must not be null")__		this.configurations = new ArrayList<>(configurations)__	};sets,jetty,link,configuration,s,that,will,be,applied,to,the,link,web,app,context,before,the,server,is,created,calling,this,method,will,replace,any,existing,configurations,param,configurations,the,jetty,configurations,to,apply;public,void,set,configurations,collection,extends,configuration,configurations,assert,not,null,configurations,configurations,must,not,be,null,this,configurations,new,array,list,configurations
JettyServletWebServerFactory -> public void setConfigurations(Collection<? extends Configuration> configurations);1525416882;Sets Jetty {@link Configuration}s that will be applied to the {@link WebAppContext}_before the server is created. Calling this method will replace any existing_configurations._@param configurations the Jetty configurations to apply;public void setConfigurations(Collection<? extends Configuration> configurations) {_		Assert.notNull(configurations, "Configurations must not be null")__		this.configurations = new ArrayList<>(configurations)__	};sets,jetty,link,configuration,s,that,will,be,applied,to,the,link,web,app,context,before,the,server,is,created,calling,this,method,will,replace,any,existing,configurations,param,configurations,the,jetty,configurations,to,apply;public,void,set,configurations,collection,extends,configuration,configurations,assert,not,null,configurations,configurations,must,not,be,null,this,configurations,new,array,list,configurations
JettyServletWebServerFactory -> public void setConfigurations(Collection<? extends Configuration> configurations);1531909335;Sets Jetty {@link Configuration}s that will be applied to the {@link WebAppContext}_before the server is created. Calling this method will replace any existing_configurations._@param configurations the Jetty configurations to apply;public void setConfigurations(Collection<? extends Configuration> configurations) {_		Assert.notNull(configurations, "Configurations must not be null")__		this.configurations = new ArrayList<>(configurations)__	};sets,jetty,link,configuration,s,that,will,be,applied,to,the,link,web,app,context,before,the,server,is,created,calling,this,method,will,replace,any,existing,configurations,param,configurations,the,jetty,configurations,to,apply;public,void,set,configurations,collection,extends,configuration,configurations,assert,not,null,configurations,configurations,must,not,be,null,this,configurations,new,array,list,configurations
JettyServletWebServerFactory -> public void setConfigurations(Collection<? extends Configuration> configurations);1532738143;Sets Jetty {@link Configuration}s that will be applied to the {@link WebAppContext}_before the server is created. Calling this method will replace any existing_configurations._@param configurations the Jetty configurations to apply;public void setConfigurations(Collection<? extends Configuration> configurations) {_		Assert.notNull(configurations, "Configurations must not be null")__		this.configurations = new ArrayList<>(configurations)__	};sets,jetty,link,configuration,s,that,will,be,applied,to,the,link,web,app,context,before,the,server,is,created,calling,this,method,will,replace,any,existing,configurations,param,configurations,the,jetty,configurations,to,apply;public,void,set,configurations,collection,extends,configuration,configurations,assert,not,null,configurations,configurations,must,not,be,null,this,configurations,new,array,list,configurations
JettyServletWebServerFactory -> public void setThreadPool(ThreadPool threadPool);1507173536;Set a Jetty {@link ThreadPool} that should be used by the {@link Server}. If set to_{@code null} (default), the {@link Server} creates a {@link ThreadPool} implicitly._@param threadPool a Jetty ThreadPool to be used;public void setThreadPool(ThreadPool threadPool) {_		this.threadPool = threadPool__	};set,a,jetty,link,thread,pool,that,should,be,used,by,the,link,server,if,set,to,code,null,default,the,link,server,creates,a,link,thread,pool,implicitly,param,thread,pool,a,jetty,thread,pool,to,be,used;public,void,set,thread,pool,thread,pool,thread,pool,this,thread,pool,thread,pool
JettyServletWebServerFactory -> public void setThreadPool(ThreadPool threadPool);1509713766;Set a Jetty {@link ThreadPool} that should be used by the {@link Server}. If set to_{@code null} (default), the {@link Server} creates a {@link ThreadPool} implicitly._@param threadPool a Jetty ThreadPool to be used;public void setThreadPool(ThreadPool threadPool) {_		this.threadPool = threadPool__	};set,a,jetty,link,thread,pool,that,should,be,used,by,the,link,server,if,set,to,code,null,default,the,link,server,creates,a,link,thread,pool,implicitly,param,thread,pool,a,jetty,thread,pool,to,be,used;public,void,set,thread,pool,thread,pool,thread,pool,this,thread,pool,thread,pool
JettyServletWebServerFactory -> public void setThreadPool(ThreadPool threadPool);1509761243;Set a Jetty {@link ThreadPool} that should be used by the {@link Server}. If set to_{@code null} (default), the {@link Server} creates a {@link ThreadPool} implicitly._@param threadPool a Jetty ThreadPool to be used;public void setThreadPool(ThreadPool threadPool) {_		this.threadPool = threadPool__	};set,a,jetty,link,thread,pool,that,should,be,used,by,the,link,server,if,set,to,code,null,default,the,link,server,creates,a,link,thread,pool,implicitly,param,thread,pool,a,jetty,thread,pool,to,be,used;public,void,set,thread,pool,thread,pool,thread,pool,this,thread,pool,thread,pool
JettyServletWebServerFactory -> public void setThreadPool(ThreadPool threadPool);1510965901;Set a Jetty {@link ThreadPool} that should be used by the {@link Server}. If set to_{@code null} (default), the {@link Server} creates a {@link ThreadPool} implicitly._@param threadPool a Jetty ThreadPool to be used;public void setThreadPool(ThreadPool threadPool) {_		this.threadPool = threadPool__	};set,a,jetty,link,thread,pool,that,should,be,used,by,the,link,server,if,set,to,code,null,default,the,link,server,creates,a,link,thread,pool,implicitly,param,thread,pool,a,jetty,thread,pool,to,be,used;public,void,set,thread,pool,thread,pool,thread,pool,this,thread,pool,thread,pool
JettyServletWebServerFactory -> public void setThreadPool(ThreadPool threadPool);1511157177;Set a Jetty {@link ThreadPool} that should be used by the {@link Server}. If set to_{@code null} (default), the {@link Server} creates a {@link ThreadPool} implicitly._@param threadPool a Jetty ThreadPool to be used;public void setThreadPool(ThreadPool threadPool) {_		this.threadPool = threadPool__	};set,a,jetty,link,thread,pool,that,should,be,used,by,the,link,server,if,set,to,code,null,default,the,link,server,creates,a,link,thread,pool,implicitly,param,thread,pool,a,jetty,thread,pool,to,be,used;public,void,set,thread,pool,thread,pool,thread,pool,this,thread,pool,thread,pool
JettyServletWebServerFactory -> public void setThreadPool(ThreadPool threadPool);1512201855;Set a Jetty {@link ThreadPool} that should be used by the {@link Server}. If set to_{@code null} (default), the {@link Server} creates a {@link ThreadPool} implicitly._@param threadPool a Jetty ThreadPool to be used;public void setThreadPool(ThreadPool threadPool) {_		this.threadPool = threadPool__	};set,a,jetty,link,thread,pool,that,should,be,used,by,the,link,server,if,set,to,code,null,default,the,link,server,creates,a,link,thread,pool,implicitly,param,thread,pool,a,jetty,thread,pool,to,be,used;public,void,set,thread,pool,thread,pool,thread,pool,this,thread,pool,thread,pool
JettyServletWebServerFactory -> public void setThreadPool(ThreadPool threadPool);1514997812;Set a Jetty {@link ThreadPool} that should be used by the {@link Server}. If set to_{@code null} (default), the {@link Server} creates a {@link ThreadPool} implicitly._@param threadPool a Jetty ThreadPool to be used;public void setThreadPool(ThreadPool threadPool) {_		this.threadPool = threadPool__	};set,a,jetty,link,thread,pool,that,should,be,used,by,the,link,server,if,set,to,code,null,default,the,link,server,creates,a,link,thread,pool,implicitly,param,thread,pool,a,jetty,thread,pool,to,be,used;public,void,set,thread,pool,thread,pool,thread,pool,this,thread,pool,thread,pool
JettyServletWebServerFactory -> public void setThreadPool(ThreadPool threadPool);1515014644;Set a Jetty {@link ThreadPool} that should be used by the {@link Server}. If set to_{@code null} (default), the {@link Server} creates a {@link ThreadPool} implicitly._@param threadPool a Jetty ThreadPool to be used;public void setThreadPool(ThreadPool threadPool) {_		this.threadPool = threadPool__	};set,a,jetty,link,thread,pool,that,should,be,used,by,the,link,server,if,set,to,code,null,default,the,link,server,creates,a,link,thread,pool,implicitly,param,thread,pool,a,jetty,thread,pool,to,be,used;public,void,set,thread,pool,thread,pool,thread,pool,this,thread,pool,thread,pool
JettyServletWebServerFactory -> public void setThreadPool(ThreadPool threadPool);1515665717;Set a Jetty {@link ThreadPool} that should be used by the {@link Server}. If set to_{@code null} (default), the {@link Server} creates a {@link ThreadPool} implicitly._@param threadPool a Jetty ThreadPool to be used;public void setThreadPool(ThreadPool threadPool) {_		this.threadPool = threadPool__	};set,a,jetty,link,thread,pool,that,should,be,used,by,the,link,server,if,set,to,code,null,default,the,link,server,creates,a,link,thread,pool,implicitly,param,thread,pool,a,jetty,thread,pool,to,be,used;public,void,set,thread,pool,thread,pool,thread,pool,this,thread,pool,thread,pool
JettyServletWebServerFactory -> public void setThreadPool(ThreadPool threadPool);1516114894;Set a Jetty {@link ThreadPool} that should be used by the {@link Server}. If set to_{@code null} (default), the {@link Server} creates a {@link ThreadPool} implicitly._@param threadPool a Jetty ThreadPool to be used;public void setThreadPool(ThreadPool threadPool) {_		this.threadPool = threadPool__	};set,a,jetty,link,thread,pool,that,should,be,used,by,the,link,server,if,set,to,code,null,default,the,link,server,creates,a,link,thread,pool,implicitly,param,thread,pool,a,jetty,thread,pool,to,be,used;public,void,set,thread,pool,thread,pool,thread,pool,this,thread,pool,thread,pool
JettyServletWebServerFactory -> public void setThreadPool(ThreadPool threadPool);1516210343;Set a Jetty {@link ThreadPool} that should be used by the {@link Server}. If set to_{@code null} (default), the {@link Server} creates a {@link ThreadPool} implicitly._@param threadPool a Jetty ThreadPool to be used;public void setThreadPool(ThreadPool threadPool) {_		this.threadPool = threadPool__	};set,a,jetty,link,thread,pool,that,should,be,used,by,the,link,server,if,set,to,code,null,default,the,link,server,creates,a,link,thread,pool,implicitly,param,thread,pool,a,jetty,thread,pool,to,be,used;public,void,set,thread,pool,thread,pool,thread,pool,this,thread,pool,thread,pool
JettyServletWebServerFactory -> public void setThreadPool(ThreadPool threadPool);1516215803;Set a Jetty {@link ThreadPool} that should be used by the {@link Server}. If set to_{@code null} (default), the {@link Server} creates a {@link ThreadPool} implicitly._@param threadPool a Jetty ThreadPool to be used;public void setThreadPool(ThreadPool threadPool) {_		this.threadPool = threadPool__	};set,a,jetty,link,thread,pool,that,should,be,used,by,the,link,server,if,set,to,code,null,default,the,link,server,creates,a,link,thread,pool,implicitly,param,thread,pool,a,jetty,thread,pool,to,be,used;public,void,set,thread,pool,thread,pool,thread,pool,this,thread,pool,thread,pool
JettyServletWebServerFactory -> public void setThreadPool(ThreadPool threadPool);1516346511;Set a Jetty {@link ThreadPool} that should be used by the {@link Server}. If set to_{@code null} (default), the {@link Server} creates a {@link ThreadPool} implicitly._@param threadPool a Jetty ThreadPool to be used;public void setThreadPool(ThreadPool threadPool) {_		this.threadPool = threadPool__	};set,a,jetty,link,thread,pool,that,should,be,used,by,the,link,server,if,set,to,code,null,default,the,link,server,creates,a,link,thread,pool,implicitly,param,thread,pool,a,jetty,thread,pool,to,be,used;public,void,set,thread,pool,thread,pool,thread,pool,this,thread,pool,thread,pool
JettyServletWebServerFactory -> public void setThreadPool(ThreadPool threadPool);1517419795;Set a Jetty {@link ThreadPool} that should be used by the {@link Server}. If set to_{@code null} (default), the {@link Server} creates a {@link ThreadPool} implicitly._@param threadPool a Jetty ThreadPool to be used;public void setThreadPool(ThreadPool threadPool) {_		this.threadPool = threadPool__	};set,a,jetty,link,thread,pool,that,should,be,used,by,the,link,server,if,set,to,code,null,default,the,link,server,creates,a,link,thread,pool,implicitly,param,thread,pool,a,jetty,thread,pool,to,be,used;public,void,set,thread,pool,thread,pool,thread,pool,this,thread,pool,thread,pool
JettyServletWebServerFactory -> public void setThreadPool(ThreadPool threadPool);1517583695;Set a Jetty {@link ThreadPool} that should be used by the {@link Server}. If set to_{@code null} (default), the {@link Server} creates a {@link ThreadPool} implicitly._@param threadPool a Jetty ThreadPool to be used;public void setThreadPool(ThreadPool threadPool) {_		this.threadPool = threadPool__	};set,a,jetty,link,thread,pool,that,should,be,used,by,the,link,server,if,set,to,code,null,default,the,link,server,creates,a,link,thread,pool,implicitly,param,thread,pool,a,jetty,thread,pool,to,be,used;public,void,set,thread,pool,thread,pool,thread,pool,this,thread,pool,thread,pool
JettyServletWebServerFactory -> public void setThreadPool(ThreadPool threadPool);1519362690;Set a Jetty {@link ThreadPool} that should be used by the {@link Server}. If set to_{@code null} (default), the {@link Server} creates a {@link ThreadPool} implicitly._@param threadPool a Jetty ThreadPool to be used;public void setThreadPool(ThreadPool threadPool) {_		this.threadPool = threadPool__	};set,a,jetty,link,thread,pool,that,should,be,used,by,the,link,server,if,set,to,code,null,default,the,link,server,creates,a,link,thread,pool,implicitly,param,thread,pool,a,jetty,thread,pool,to,be,used;public,void,set,thread,pool,thread,pool,thread,pool,this,thread,pool,thread,pool
JettyServletWebServerFactory -> public void setThreadPool(ThreadPool threadPool);1519742833;Set a Jetty {@link ThreadPool} that should be used by the {@link Server}. If set to_{@code null} (default), the {@link Server} creates a {@link ThreadPool} implicitly._@param threadPool a Jetty ThreadPool to be used;public void setThreadPool(ThreadPool threadPool) {_		this.threadPool = threadPool__	};set,a,jetty,link,thread,pool,that,should,be,used,by,the,link,server,if,set,to,code,null,default,the,link,server,creates,a,link,thread,pool,implicitly,param,thread,pool,a,jetty,thread,pool,to,be,used;public,void,set,thread,pool,thread,pool,thread,pool,this,thread,pool,thread,pool
JettyServletWebServerFactory -> public void setThreadPool(ThreadPool threadPool);1519817048;Set a Jetty {@link ThreadPool} that should be used by the {@link Server}. If set to_{@code null} (default), the {@link Server} creates a {@link ThreadPool} implicitly._@param threadPool a Jetty ThreadPool to be used;public void setThreadPool(ThreadPool threadPool) {_		this.threadPool = threadPool__	};set,a,jetty,link,thread,pool,that,should,be,used,by,the,link,server,if,set,to,code,null,default,the,link,server,creates,a,link,thread,pool,implicitly,param,thread,pool,a,jetty,thread,pool,to,be,used;public,void,set,thread,pool,thread,pool,thread,pool,this,thread,pool,thread,pool
JettyServletWebServerFactory -> public void setThreadPool(ThreadPool threadPool);1521460869;Set a Jetty {@link ThreadPool} that should be used by the {@link Server}. If set to_{@code null} (default), the {@link Server} creates a {@link ThreadPool} implicitly._@param threadPool a Jetty ThreadPool to be used;public void setThreadPool(ThreadPool threadPool) {_		this.threadPool = threadPool__	};set,a,jetty,link,thread,pool,that,should,be,used,by,the,link,server,if,set,to,code,null,default,the,link,server,creates,a,link,thread,pool,implicitly,param,thread,pool,a,jetty,thread,pool,to,be,used;public,void,set,thread,pool,thread,pool,thread,pool,this,thread,pool,thread,pool
JettyServletWebServerFactory -> public void setThreadPool(ThreadPool threadPool);1525255067;Set a Jetty {@link ThreadPool} that should be used by the {@link Server}. If set to_{@code null} (default), the {@link Server} creates a {@link ThreadPool} implicitly._@param threadPool a Jetty ThreadPool to be used;public void setThreadPool(ThreadPool threadPool) {_		this.threadPool = threadPool__	};set,a,jetty,link,thread,pool,that,should,be,used,by,the,link,server,if,set,to,code,null,default,the,link,server,creates,a,link,thread,pool,implicitly,param,thread,pool,a,jetty,thread,pool,to,be,used;public,void,set,thread,pool,thread,pool,thread,pool,this,thread,pool,thread,pool
JettyServletWebServerFactory -> public void setThreadPool(ThreadPool threadPool);1525416882;Set a Jetty {@link ThreadPool} that should be used by the {@link Server}. If set to_{@code null} (default), the {@link Server} creates a {@link ThreadPool} implicitly._@param threadPool a Jetty ThreadPool to be used;public void setThreadPool(ThreadPool threadPool) {_		this.threadPool = threadPool__	};set,a,jetty,link,thread,pool,that,should,be,used,by,the,link,server,if,set,to,code,null,default,the,link,server,creates,a,link,thread,pool,implicitly,param,thread,pool,a,jetty,thread,pool,to,be,used;public,void,set,thread,pool,thread,pool,thread,pool,this,thread,pool,thread,pool
JettyServletWebServerFactory -> public void setThreadPool(ThreadPool threadPool);1531909335;Set a Jetty {@link ThreadPool} that should be used by the {@link Server}. If set to_{@code null} (default), the {@link Server} creates a {@link ThreadPool} implicitly._@param threadPool a Jetty ThreadPool to be used;public void setThreadPool(ThreadPool threadPool) {_		this.threadPool = threadPool__	};set,a,jetty,link,thread,pool,that,should,be,used,by,the,link,server,if,set,to,code,null,default,the,link,server,creates,a,link,thread,pool,implicitly,param,thread,pool,a,jetty,thread,pool,to,be,used;public,void,set,thread,pool,thread,pool,thread,pool,this,thread,pool,thread,pool
JettyServletWebServerFactory -> public void setThreadPool(ThreadPool threadPool);1532738143;Set a Jetty {@link ThreadPool} that should be used by the {@link Server}. If set to_{@code null} (default), the {@link Server} creates a {@link ThreadPool} implicitly._@param threadPool a Jetty ThreadPool to be used;public void setThreadPool(ThreadPool threadPool) {_		this.threadPool = threadPool__	};set,a,jetty,link,thread,pool,that,should,be,used,by,the,link,server,if,set,to,code,null,default,the,link,server,creates,a,link,thread,pool,implicitly,param,thread,pool,a,jetty,thread,pool,to,be,used;public,void,set,thread,pool,thread,pool,thread,pool,this,thread,pool,thread,pool
JettyServletWebServerFactory -> public void addConfigurations(Configuration... configurations);1507173536;Add {@link Configuration}s that will be applied to the {@link WebAppContext} before_the server is started._@param configurations the configurations to add;public void addConfigurations(Configuration... configurations) {_		Assert.notNull(configurations, "Configurations must not be null")__		this.configurations.addAll(Arrays.asList(configurations))__	};add,link,configuration,s,that,will,be,applied,to,the,link,web,app,context,before,the,server,is,started,param,configurations,the,configurations,to,add;public,void,add,configurations,configuration,configurations,assert,not,null,configurations,configurations,must,not,be,null,this,configurations,add,all,arrays,as,list,configurations
JettyServletWebServerFactory -> public void addConfigurations(Configuration... configurations);1509713766;Add {@link Configuration}s that will be applied to the {@link WebAppContext} before_the server is started._@param configurations the configurations to add;public void addConfigurations(Configuration... configurations) {_		Assert.notNull(configurations, "Configurations must not be null")__		this.configurations.addAll(Arrays.asList(configurations))__	};add,link,configuration,s,that,will,be,applied,to,the,link,web,app,context,before,the,server,is,started,param,configurations,the,configurations,to,add;public,void,add,configurations,configuration,configurations,assert,not,null,configurations,configurations,must,not,be,null,this,configurations,add,all,arrays,as,list,configurations
JettyServletWebServerFactory -> public void addConfigurations(Configuration... configurations);1509761243;Add {@link Configuration}s that will be applied to the {@link WebAppContext} before_the server is started._@param configurations the configurations to add;public void addConfigurations(Configuration... configurations) {_		Assert.notNull(configurations, "Configurations must not be null")__		this.configurations.addAll(Arrays.asList(configurations))__	};add,link,configuration,s,that,will,be,applied,to,the,link,web,app,context,before,the,server,is,started,param,configurations,the,configurations,to,add;public,void,add,configurations,configuration,configurations,assert,not,null,configurations,configurations,must,not,be,null,this,configurations,add,all,arrays,as,list,configurations
JettyServletWebServerFactory -> public void addConfigurations(Configuration... configurations);1510965901;Add {@link Configuration}s that will be applied to the {@link WebAppContext} before_the server is started._@param configurations the configurations to add;public void addConfigurations(Configuration... configurations) {_		Assert.notNull(configurations, "Configurations must not be null")__		this.configurations.addAll(Arrays.asList(configurations))__	};add,link,configuration,s,that,will,be,applied,to,the,link,web,app,context,before,the,server,is,started,param,configurations,the,configurations,to,add;public,void,add,configurations,configuration,configurations,assert,not,null,configurations,configurations,must,not,be,null,this,configurations,add,all,arrays,as,list,configurations
JettyServletWebServerFactory -> public void addConfigurations(Configuration... configurations);1511157177;Add {@link Configuration}s that will be applied to the {@link WebAppContext} before_the server is started._@param configurations the configurations to add;public void addConfigurations(Configuration... configurations) {_		Assert.notNull(configurations, "Configurations must not be null")__		this.configurations.addAll(Arrays.asList(configurations))__	};add,link,configuration,s,that,will,be,applied,to,the,link,web,app,context,before,the,server,is,started,param,configurations,the,configurations,to,add;public,void,add,configurations,configuration,configurations,assert,not,null,configurations,configurations,must,not,be,null,this,configurations,add,all,arrays,as,list,configurations
JettyServletWebServerFactory -> public void addConfigurations(Configuration... configurations);1512201855;Add {@link Configuration}s that will be applied to the {@link WebAppContext} before_the server is started._@param configurations the configurations to add;public void addConfigurations(Configuration... configurations) {_		Assert.notNull(configurations, "Configurations must not be null")__		this.configurations.addAll(Arrays.asList(configurations))__	};add,link,configuration,s,that,will,be,applied,to,the,link,web,app,context,before,the,server,is,started,param,configurations,the,configurations,to,add;public,void,add,configurations,configuration,configurations,assert,not,null,configurations,configurations,must,not,be,null,this,configurations,add,all,arrays,as,list,configurations
JettyServletWebServerFactory -> public void addConfigurations(Configuration... configurations);1514997812;Add {@link Configuration}s that will be applied to the {@link WebAppContext} before_the server is started._@param configurations the configurations to add;public void addConfigurations(Configuration... configurations) {_		Assert.notNull(configurations, "Configurations must not be null")__		this.configurations.addAll(Arrays.asList(configurations))__	};add,link,configuration,s,that,will,be,applied,to,the,link,web,app,context,before,the,server,is,started,param,configurations,the,configurations,to,add;public,void,add,configurations,configuration,configurations,assert,not,null,configurations,configurations,must,not,be,null,this,configurations,add,all,arrays,as,list,configurations
JettyServletWebServerFactory -> public void addConfigurations(Configuration... configurations);1515014644;Add {@link Configuration}s that will be applied to the {@link WebAppContext} before_the server is started._@param configurations the configurations to add;public void addConfigurations(Configuration... configurations) {_		Assert.notNull(configurations, "Configurations must not be null")__		this.configurations.addAll(Arrays.asList(configurations))__	};add,link,configuration,s,that,will,be,applied,to,the,link,web,app,context,before,the,server,is,started,param,configurations,the,configurations,to,add;public,void,add,configurations,configuration,configurations,assert,not,null,configurations,configurations,must,not,be,null,this,configurations,add,all,arrays,as,list,configurations
JettyServletWebServerFactory -> public void addConfigurations(Configuration... configurations);1515665717;Add {@link Configuration}s that will be applied to the {@link WebAppContext} before_the server is started._@param configurations the configurations to add;public void addConfigurations(Configuration... configurations) {_		Assert.notNull(configurations, "Configurations must not be null")__		this.configurations.addAll(Arrays.asList(configurations))__	};add,link,configuration,s,that,will,be,applied,to,the,link,web,app,context,before,the,server,is,started,param,configurations,the,configurations,to,add;public,void,add,configurations,configuration,configurations,assert,not,null,configurations,configurations,must,not,be,null,this,configurations,add,all,arrays,as,list,configurations
JettyServletWebServerFactory -> public void addConfigurations(Configuration... configurations);1516114894;Add {@link Configuration}s that will be applied to the {@link WebAppContext} before_the server is started._@param configurations the configurations to add;public void addConfigurations(Configuration... configurations) {_		Assert.notNull(configurations, "Configurations must not be null")__		this.configurations.addAll(Arrays.asList(configurations))__	};add,link,configuration,s,that,will,be,applied,to,the,link,web,app,context,before,the,server,is,started,param,configurations,the,configurations,to,add;public,void,add,configurations,configuration,configurations,assert,not,null,configurations,configurations,must,not,be,null,this,configurations,add,all,arrays,as,list,configurations
JettyServletWebServerFactory -> public void addConfigurations(Configuration... configurations);1516210343;Add {@link Configuration}s that will be applied to the {@link WebAppContext} before_the server is started._@param configurations the configurations to add;public void addConfigurations(Configuration... configurations) {_		Assert.notNull(configurations, "Configurations must not be null")__		this.configurations.addAll(Arrays.asList(configurations))__	};add,link,configuration,s,that,will,be,applied,to,the,link,web,app,context,before,the,server,is,started,param,configurations,the,configurations,to,add;public,void,add,configurations,configuration,configurations,assert,not,null,configurations,configurations,must,not,be,null,this,configurations,add,all,arrays,as,list,configurations
JettyServletWebServerFactory -> public void addConfigurations(Configuration... configurations);1516215803;Add {@link Configuration}s that will be applied to the {@link WebAppContext} before_the server is started._@param configurations the configurations to add;public void addConfigurations(Configuration... configurations) {_		Assert.notNull(configurations, "Configurations must not be null")__		this.configurations.addAll(Arrays.asList(configurations))__	};add,link,configuration,s,that,will,be,applied,to,the,link,web,app,context,before,the,server,is,started,param,configurations,the,configurations,to,add;public,void,add,configurations,configuration,configurations,assert,not,null,configurations,configurations,must,not,be,null,this,configurations,add,all,arrays,as,list,configurations
JettyServletWebServerFactory -> public void addConfigurations(Configuration... configurations);1516346511;Add {@link Configuration}s that will be applied to the {@link WebAppContext} before_the server is started._@param configurations the configurations to add;public void addConfigurations(Configuration... configurations) {_		Assert.notNull(configurations, "Configurations must not be null")__		this.configurations.addAll(Arrays.asList(configurations))__	};add,link,configuration,s,that,will,be,applied,to,the,link,web,app,context,before,the,server,is,started,param,configurations,the,configurations,to,add;public,void,add,configurations,configuration,configurations,assert,not,null,configurations,configurations,must,not,be,null,this,configurations,add,all,arrays,as,list,configurations
JettyServletWebServerFactory -> public void addConfigurations(Configuration... configurations);1517419795;Add {@link Configuration}s that will be applied to the {@link WebAppContext} before_the server is started._@param configurations the configurations to add;public void addConfigurations(Configuration... configurations) {_		Assert.notNull(configurations, "Configurations must not be null")__		this.configurations.addAll(Arrays.asList(configurations))__	};add,link,configuration,s,that,will,be,applied,to,the,link,web,app,context,before,the,server,is,started,param,configurations,the,configurations,to,add;public,void,add,configurations,configuration,configurations,assert,not,null,configurations,configurations,must,not,be,null,this,configurations,add,all,arrays,as,list,configurations
JettyServletWebServerFactory -> public void addConfigurations(Configuration... configurations);1517583695;Add {@link Configuration}s that will be applied to the {@link WebAppContext} before_the server is started._@param configurations the configurations to add;public void addConfigurations(Configuration... configurations) {_		Assert.notNull(configurations, "Configurations must not be null")__		this.configurations.addAll(Arrays.asList(configurations))__	};add,link,configuration,s,that,will,be,applied,to,the,link,web,app,context,before,the,server,is,started,param,configurations,the,configurations,to,add;public,void,add,configurations,configuration,configurations,assert,not,null,configurations,configurations,must,not,be,null,this,configurations,add,all,arrays,as,list,configurations
JettyServletWebServerFactory -> public void addConfigurations(Configuration... configurations);1519362690;Add {@link Configuration}s that will be applied to the {@link WebAppContext} before_the server is started._@param configurations the configurations to add;public void addConfigurations(Configuration... configurations) {_		Assert.notNull(configurations, "Configurations must not be null")__		this.configurations.addAll(Arrays.asList(configurations))__	};add,link,configuration,s,that,will,be,applied,to,the,link,web,app,context,before,the,server,is,started,param,configurations,the,configurations,to,add;public,void,add,configurations,configuration,configurations,assert,not,null,configurations,configurations,must,not,be,null,this,configurations,add,all,arrays,as,list,configurations
JettyServletWebServerFactory -> public void addConfigurations(Configuration... configurations);1519742833;Add {@link Configuration}s that will be applied to the {@link WebAppContext} before_the server is started._@param configurations the configurations to add;public void addConfigurations(Configuration... configurations) {_		Assert.notNull(configurations, "Configurations must not be null")__		this.configurations.addAll(Arrays.asList(configurations))__	};add,link,configuration,s,that,will,be,applied,to,the,link,web,app,context,before,the,server,is,started,param,configurations,the,configurations,to,add;public,void,add,configurations,configuration,configurations,assert,not,null,configurations,configurations,must,not,be,null,this,configurations,add,all,arrays,as,list,configurations
JettyServletWebServerFactory -> public void addConfigurations(Configuration... configurations);1519817048;Add {@link Configuration}s that will be applied to the {@link WebAppContext} before_the server is started._@param configurations the configurations to add;public void addConfigurations(Configuration... configurations) {_		Assert.notNull(configurations, "Configurations must not be null")__		this.configurations.addAll(Arrays.asList(configurations))__	};add,link,configuration,s,that,will,be,applied,to,the,link,web,app,context,before,the,server,is,started,param,configurations,the,configurations,to,add;public,void,add,configurations,configuration,configurations,assert,not,null,configurations,configurations,must,not,be,null,this,configurations,add,all,arrays,as,list,configurations
JettyServletWebServerFactory -> public void addConfigurations(Configuration... configurations);1521460869;Add {@link Configuration}s that will be applied to the {@link WebAppContext} before_the server is started._@param configurations the configurations to add;public void addConfigurations(Configuration... configurations) {_		Assert.notNull(configurations, "Configurations must not be null")__		this.configurations.addAll(Arrays.asList(configurations))__	};add,link,configuration,s,that,will,be,applied,to,the,link,web,app,context,before,the,server,is,started,param,configurations,the,configurations,to,add;public,void,add,configurations,configuration,configurations,assert,not,null,configurations,configurations,must,not,be,null,this,configurations,add,all,arrays,as,list,configurations
JettyServletWebServerFactory -> public void addConfigurations(Configuration... configurations);1525255067;Add {@link Configuration}s that will be applied to the {@link WebAppContext} before_the server is started._@param configurations the configurations to add;public void addConfigurations(Configuration... configurations) {_		Assert.notNull(configurations, "Configurations must not be null")__		this.configurations.addAll(Arrays.asList(configurations))__	};add,link,configuration,s,that,will,be,applied,to,the,link,web,app,context,before,the,server,is,started,param,configurations,the,configurations,to,add;public,void,add,configurations,configuration,configurations,assert,not,null,configurations,configurations,must,not,be,null,this,configurations,add,all,arrays,as,list,configurations
JettyServletWebServerFactory -> public void addConfigurations(Configuration... configurations);1525416882;Add {@link Configuration}s that will be applied to the {@link WebAppContext} before_the server is started._@param configurations the configurations to add;public void addConfigurations(Configuration... configurations) {_		Assert.notNull(configurations, "Configurations must not be null")__		this.configurations.addAll(Arrays.asList(configurations))__	};add,link,configuration,s,that,will,be,applied,to,the,link,web,app,context,before,the,server,is,started,param,configurations,the,configurations,to,add;public,void,add,configurations,configuration,configurations,assert,not,null,configurations,configurations,must,not,be,null,this,configurations,add,all,arrays,as,list,configurations
JettyServletWebServerFactory -> public void addConfigurations(Configuration... configurations);1531909335;Add {@link Configuration}s that will be applied to the {@link WebAppContext} before_the server is started._@param configurations the configurations to add;public void addConfigurations(Configuration... configurations) {_		Assert.notNull(configurations, "Configurations must not be null")__		this.configurations.addAll(Arrays.asList(configurations))__	};add,link,configuration,s,that,will,be,applied,to,the,link,web,app,context,before,the,server,is,started,param,configurations,the,configurations,to,add;public,void,add,configurations,configuration,configurations,assert,not,null,configurations,configurations,must,not,be,null,this,configurations,add,all,arrays,as,list,configurations
JettyServletWebServerFactory -> public void addConfigurations(Configuration... configurations);1532738143;Add {@link Configuration}s that will be applied to the {@link WebAppContext} before_the server is started._@param configurations the configurations to add;public void addConfigurations(Configuration... configurations) {_		Assert.notNull(configurations, "Configurations must not be null")__		this.configurations.addAll(Arrays.asList(configurations))__	};add,link,configuration,s,that,will,be,applied,to,the,link,web,app,context,before,the,server,is,started,param,configurations,the,configurations,to,add;public,void,add,configurations,configuration,configurations,assert,not,null,configurations,configurations,must,not,be,null,this,configurations,add,all,arrays,as,list,configurations
JettyServletWebServerFactory -> private Configuration getErrorPageConfiguration();1507173536;Create a configuration object that adds error handlers._@return a configuration object for adding error pages;private Configuration getErrorPageConfiguration() {_		return new AbstractConfiguration() {__			@Override_			public void configure(WebAppContext context) throws Exception {_				ErrorHandler errorHandler = context.getErrorHandler()__				context.setErrorHandler(new JettyEmbeddedErrorHandler(errorHandler))__				addJettyErrorPages(errorHandler, getErrorPages())__			}__		}__	};create,a,configuration,object,that,adds,error,handlers,return,a,configuration,object,for,adding,error,pages;private,configuration,get,error,page,configuration,return,new,abstract,configuration,override,public,void,configure,web,app,context,context,throws,exception,error,handler,error,handler,context,get,error,handler,context,set,error,handler,new,jetty,embedded,error,handler,error,handler,add,jetty,error,pages,error,handler,get,error,pages
JettyServletWebServerFactory -> private Configuration getErrorPageConfiguration();1509713766;Create a configuration object that adds error handlers._@return a configuration object for adding error pages;private Configuration getErrorPageConfiguration() {_		return new AbstractConfiguration() {__			@Override_			public void configure(WebAppContext context) throws Exception {_				ErrorHandler errorHandler = context.getErrorHandler()__				context.setErrorHandler(new JettyEmbeddedErrorHandler(errorHandler))__				addJettyErrorPages(errorHandler, getErrorPages())__			}__		}__	};create,a,configuration,object,that,adds,error,handlers,return,a,configuration,object,for,adding,error,pages;private,configuration,get,error,page,configuration,return,new,abstract,configuration,override,public,void,configure,web,app,context,context,throws,exception,error,handler,error,handler,context,get,error,handler,context,set,error,handler,new,jetty,embedded,error,handler,error,handler,add,jetty,error,pages,error,handler,get,error,pages
JettyServletWebServerFactory -> private Configuration getErrorPageConfiguration();1509761243;Create a configuration object that adds error handlers._@return a configuration object for adding error pages;private Configuration getErrorPageConfiguration() {_		return new AbstractConfiguration() {__			@Override_			public void configure(WebAppContext context) throws Exception {_				ErrorHandler errorHandler = context.getErrorHandler()__				context.setErrorHandler(new JettyEmbeddedErrorHandler(errorHandler))__				addJettyErrorPages(errorHandler, getErrorPages())__			}__		}__	};create,a,configuration,object,that,adds,error,handlers,return,a,configuration,object,for,adding,error,pages;private,configuration,get,error,page,configuration,return,new,abstract,configuration,override,public,void,configure,web,app,context,context,throws,exception,error,handler,error,handler,context,get,error,handler,context,set,error,handler,new,jetty,embedded,error,handler,error,handler,add,jetty,error,pages,error,handler,get,error,pages
JettyServletWebServerFactory -> private Configuration getErrorPageConfiguration();1510965901;Create a configuration object that adds error handlers._@return a configuration object for adding error pages;private Configuration getErrorPageConfiguration() {_		return new AbstractConfiguration() {__			@Override_			public void configure(WebAppContext context) throws Exception {_				ErrorHandler errorHandler = context.getErrorHandler()__				context.setErrorHandler(new JettyEmbeddedErrorHandler(errorHandler))__				addJettyErrorPages(errorHandler, getErrorPages())__			}__		}__	};create,a,configuration,object,that,adds,error,handlers,return,a,configuration,object,for,adding,error,pages;private,configuration,get,error,page,configuration,return,new,abstract,configuration,override,public,void,configure,web,app,context,context,throws,exception,error,handler,error,handler,context,get,error,handler,context,set,error,handler,new,jetty,embedded,error,handler,error,handler,add,jetty,error,pages,error,handler,get,error,pages
JettyServletWebServerFactory -> private Configuration getErrorPageConfiguration();1511157177;Create a configuration object that adds error handlers._@return a configuration object for adding error pages;private Configuration getErrorPageConfiguration() {_		return new AbstractConfiguration() {__			@Override_			public void configure(WebAppContext context) throws Exception {_				ErrorHandler errorHandler = context.getErrorHandler()__				context.setErrorHandler(new JettyEmbeddedErrorHandler(errorHandler))__				addJettyErrorPages(errorHandler, getErrorPages())__			}__		}__	};create,a,configuration,object,that,adds,error,handlers,return,a,configuration,object,for,adding,error,pages;private,configuration,get,error,page,configuration,return,new,abstract,configuration,override,public,void,configure,web,app,context,context,throws,exception,error,handler,error,handler,context,get,error,handler,context,set,error,handler,new,jetty,embedded,error,handler,error,handler,add,jetty,error,pages,error,handler,get,error,pages
JettyServletWebServerFactory -> private Configuration getErrorPageConfiguration();1512201855;Create a configuration object that adds error handlers._@return a configuration object for adding error pages;private Configuration getErrorPageConfiguration() {_		return new AbstractConfiguration() {__			@Override_			public void configure(WebAppContext context) throws Exception {_				ErrorHandler errorHandler = context.getErrorHandler()__				context.setErrorHandler(new JettyEmbeddedErrorHandler(errorHandler))__				addJettyErrorPages(errorHandler, getErrorPages())__			}__		}__	};create,a,configuration,object,that,adds,error,handlers,return,a,configuration,object,for,adding,error,pages;private,configuration,get,error,page,configuration,return,new,abstract,configuration,override,public,void,configure,web,app,context,context,throws,exception,error,handler,error,handler,context,get,error,handler,context,set,error,handler,new,jetty,embedded,error,handler,error,handler,add,jetty,error,pages,error,handler,get,error,pages
JettyServletWebServerFactory -> private Configuration getErrorPageConfiguration();1514997812;Create a configuration object that adds error handlers._@return a configuration object for adding error pages;private Configuration getErrorPageConfiguration() {_		return new AbstractConfiguration() {__			@Override_			public void configure(WebAppContext context) throws Exception {_				ErrorHandler errorHandler = context.getErrorHandler()__				context.setErrorHandler(new JettyEmbeddedErrorHandler(errorHandler))__				addJettyErrorPages(errorHandler, getErrorPages())__			}__		}__	};create,a,configuration,object,that,adds,error,handlers,return,a,configuration,object,for,adding,error,pages;private,configuration,get,error,page,configuration,return,new,abstract,configuration,override,public,void,configure,web,app,context,context,throws,exception,error,handler,error,handler,context,get,error,handler,context,set,error,handler,new,jetty,embedded,error,handler,error,handler,add,jetty,error,pages,error,handler,get,error,pages
JettyServletWebServerFactory -> private Configuration getErrorPageConfiguration();1515014644;Create a configuration object that adds error handlers._@return a configuration object for adding error pages;private Configuration getErrorPageConfiguration() {_		return new AbstractConfiguration() {__			@Override_			public void configure(WebAppContext context) throws Exception {_				ErrorHandler errorHandler = context.getErrorHandler()__				context.setErrorHandler(new JettyEmbeddedErrorHandler(errorHandler))__				addJettyErrorPages(errorHandler, getErrorPages())__			}__		}__	};create,a,configuration,object,that,adds,error,handlers,return,a,configuration,object,for,adding,error,pages;private,configuration,get,error,page,configuration,return,new,abstract,configuration,override,public,void,configure,web,app,context,context,throws,exception,error,handler,error,handler,context,get,error,handler,context,set,error,handler,new,jetty,embedded,error,handler,error,handler,add,jetty,error,pages,error,handler,get,error,pages
JettyServletWebServerFactory -> private Configuration getErrorPageConfiguration();1515665717;Create a configuration object that adds error handlers._@return a configuration object for adding error pages;private Configuration getErrorPageConfiguration() {_		return new AbstractConfiguration() {__			@Override_			public void configure(WebAppContext context) throws Exception {_				ErrorHandler errorHandler = context.getErrorHandler()__				context.setErrorHandler(new JettyEmbeddedErrorHandler(errorHandler))__				addJettyErrorPages(errorHandler, getErrorPages())__			}__		}__	};create,a,configuration,object,that,adds,error,handlers,return,a,configuration,object,for,adding,error,pages;private,configuration,get,error,page,configuration,return,new,abstract,configuration,override,public,void,configure,web,app,context,context,throws,exception,error,handler,error,handler,context,get,error,handler,context,set,error,handler,new,jetty,embedded,error,handler,error,handler,add,jetty,error,pages,error,handler,get,error,pages
JettyServletWebServerFactory -> private Configuration getErrorPageConfiguration();1516114894;Create a configuration object that adds error handlers._@return a configuration object for adding error pages;private Configuration getErrorPageConfiguration() {_		return new AbstractConfiguration() {__			@Override_			public void configure(WebAppContext context) throws Exception {_				ErrorHandler errorHandler = context.getErrorHandler()__				context.setErrorHandler(new JettyEmbeddedErrorHandler(errorHandler))__				addJettyErrorPages(errorHandler, getErrorPages())__			}__		}__	};create,a,configuration,object,that,adds,error,handlers,return,a,configuration,object,for,adding,error,pages;private,configuration,get,error,page,configuration,return,new,abstract,configuration,override,public,void,configure,web,app,context,context,throws,exception,error,handler,error,handler,context,get,error,handler,context,set,error,handler,new,jetty,embedded,error,handler,error,handler,add,jetty,error,pages,error,handler,get,error,pages
JettyServletWebServerFactory -> private Configuration getErrorPageConfiguration();1516210343;Create a configuration object that adds error handlers._@return a configuration object for adding error pages;private Configuration getErrorPageConfiguration() {_		return new AbstractConfiguration() {__			@Override_			public void configure(WebAppContext context) throws Exception {_				ErrorHandler errorHandler = context.getErrorHandler()__				context.setErrorHandler(new JettyEmbeddedErrorHandler(errorHandler))__				addJettyErrorPages(errorHandler, getErrorPages())__			}__		}__	};create,a,configuration,object,that,adds,error,handlers,return,a,configuration,object,for,adding,error,pages;private,configuration,get,error,page,configuration,return,new,abstract,configuration,override,public,void,configure,web,app,context,context,throws,exception,error,handler,error,handler,context,get,error,handler,context,set,error,handler,new,jetty,embedded,error,handler,error,handler,add,jetty,error,pages,error,handler,get,error,pages
JettyServletWebServerFactory -> private Configuration getErrorPageConfiguration();1516215803;Create a configuration object that adds error handlers._@return a configuration object for adding error pages;private Configuration getErrorPageConfiguration() {_		return new AbstractConfiguration() {__			@Override_			public void configure(WebAppContext context) throws Exception {_				ErrorHandler errorHandler = context.getErrorHandler()__				context.setErrorHandler(new JettyEmbeddedErrorHandler(errorHandler))__				addJettyErrorPages(errorHandler, getErrorPages())__			}__		}__	};create,a,configuration,object,that,adds,error,handlers,return,a,configuration,object,for,adding,error,pages;private,configuration,get,error,page,configuration,return,new,abstract,configuration,override,public,void,configure,web,app,context,context,throws,exception,error,handler,error,handler,context,get,error,handler,context,set,error,handler,new,jetty,embedded,error,handler,error,handler,add,jetty,error,pages,error,handler,get,error,pages
JettyServletWebServerFactory -> private Configuration getErrorPageConfiguration();1516346511;Create a configuration object that adds error handlers._@return a configuration object for adding error pages;private Configuration getErrorPageConfiguration() {_		return new AbstractConfiguration() {__			@Override_			public void configure(WebAppContext context) throws Exception {_				ErrorHandler errorHandler = context.getErrorHandler()__				context.setErrorHandler(new JettyEmbeddedErrorHandler(errorHandler))__				addJettyErrorPages(errorHandler, getErrorPages())__			}__		}__	};create,a,configuration,object,that,adds,error,handlers,return,a,configuration,object,for,adding,error,pages;private,configuration,get,error,page,configuration,return,new,abstract,configuration,override,public,void,configure,web,app,context,context,throws,exception,error,handler,error,handler,context,get,error,handler,context,set,error,handler,new,jetty,embedded,error,handler,error,handler,add,jetty,error,pages,error,handler,get,error,pages
JettyServletWebServerFactory -> private Configuration getErrorPageConfiguration();1517419795;Create a configuration object that adds error handlers._@return a configuration object for adding error pages;private Configuration getErrorPageConfiguration() {_		return new AbstractConfiguration() {__			@Override_			public void configure(WebAppContext context) throws Exception {_				ErrorHandler errorHandler = context.getErrorHandler()__				context.setErrorHandler(new JettyEmbeddedErrorHandler(errorHandler))__				addJettyErrorPages(errorHandler, getErrorPages())__			}__		}__	};create,a,configuration,object,that,adds,error,handlers,return,a,configuration,object,for,adding,error,pages;private,configuration,get,error,page,configuration,return,new,abstract,configuration,override,public,void,configure,web,app,context,context,throws,exception,error,handler,error,handler,context,get,error,handler,context,set,error,handler,new,jetty,embedded,error,handler,error,handler,add,jetty,error,pages,error,handler,get,error,pages
JettyServletWebServerFactory -> private Configuration getErrorPageConfiguration();1517583695;Create a configuration object that adds error handlers._@return a configuration object for adding error pages;private Configuration getErrorPageConfiguration() {_		return new AbstractConfiguration() {__			@Override_			public void configure(WebAppContext context) throws Exception {_				ErrorHandler errorHandler = context.getErrorHandler()__				context.setErrorHandler(new JettyEmbeddedErrorHandler(errorHandler))__				addJettyErrorPages(errorHandler, getErrorPages())__			}__		}__	};create,a,configuration,object,that,adds,error,handlers,return,a,configuration,object,for,adding,error,pages;private,configuration,get,error,page,configuration,return,new,abstract,configuration,override,public,void,configure,web,app,context,context,throws,exception,error,handler,error,handler,context,get,error,handler,context,set,error,handler,new,jetty,embedded,error,handler,error,handler,add,jetty,error,pages,error,handler,get,error,pages
JettyServletWebServerFactory -> private Configuration getErrorPageConfiguration();1519362690;Create a configuration object that adds error handlers._@return a configuration object for adding error pages;private Configuration getErrorPageConfiguration() {_		return new AbstractConfiguration() {__			@Override_			public void configure(WebAppContext context) throws Exception {_				ErrorHandler errorHandler = context.getErrorHandler()__				context.setErrorHandler(new JettyEmbeddedErrorHandler(errorHandler))__				addJettyErrorPages(errorHandler, getErrorPages())__			}__		}__	};create,a,configuration,object,that,adds,error,handlers,return,a,configuration,object,for,adding,error,pages;private,configuration,get,error,page,configuration,return,new,abstract,configuration,override,public,void,configure,web,app,context,context,throws,exception,error,handler,error,handler,context,get,error,handler,context,set,error,handler,new,jetty,embedded,error,handler,error,handler,add,jetty,error,pages,error,handler,get,error,pages
JettyServletWebServerFactory -> private Configuration getErrorPageConfiguration();1519742833;Create a configuration object that adds error handlers._@return a configuration object for adding error pages;private Configuration getErrorPageConfiguration() {_		return new AbstractConfiguration() {__			@Override_			public void configure(WebAppContext context) throws Exception {_				ErrorHandler errorHandler = context.getErrorHandler()__				context.setErrorHandler(new JettyEmbeddedErrorHandler(errorHandler))__				addJettyErrorPages(errorHandler, getErrorPages())__			}__		}__	};create,a,configuration,object,that,adds,error,handlers,return,a,configuration,object,for,adding,error,pages;private,configuration,get,error,page,configuration,return,new,abstract,configuration,override,public,void,configure,web,app,context,context,throws,exception,error,handler,error,handler,context,get,error,handler,context,set,error,handler,new,jetty,embedded,error,handler,error,handler,add,jetty,error,pages,error,handler,get,error,pages
JettyServletWebServerFactory -> private Configuration getErrorPageConfiguration();1519817048;Create a configuration object that adds error handlers._@return a configuration object for adding error pages;private Configuration getErrorPageConfiguration() {_		return new AbstractConfiguration() {__			@Override_			public void configure(WebAppContext context) throws Exception {_				ErrorHandler errorHandler = context.getErrorHandler()__				context.setErrorHandler(new JettyEmbeddedErrorHandler(errorHandler))__				addJettyErrorPages(errorHandler, getErrorPages())__			}__		}__	};create,a,configuration,object,that,adds,error,handlers,return,a,configuration,object,for,adding,error,pages;private,configuration,get,error,page,configuration,return,new,abstract,configuration,override,public,void,configure,web,app,context,context,throws,exception,error,handler,error,handler,context,get,error,handler,context,set,error,handler,new,jetty,embedded,error,handler,error,handler,add,jetty,error,pages,error,handler,get,error,pages
JettyServletWebServerFactory -> private Configuration getErrorPageConfiguration();1521460869;Create a configuration object that adds error handlers._@return a configuration object for adding error pages;private Configuration getErrorPageConfiguration() {_		return new AbstractConfiguration() {__			@Override_			public void configure(WebAppContext context) throws Exception {_				ErrorHandler errorHandler = context.getErrorHandler()__				context.setErrorHandler(new JettyEmbeddedErrorHandler(errorHandler))__				addJettyErrorPages(errorHandler, getErrorPages())__			}__		}__	};create,a,configuration,object,that,adds,error,handlers,return,a,configuration,object,for,adding,error,pages;private,configuration,get,error,page,configuration,return,new,abstract,configuration,override,public,void,configure,web,app,context,context,throws,exception,error,handler,error,handler,context,get,error,handler,context,set,error,handler,new,jetty,embedded,error,handler,error,handler,add,jetty,error,pages,error,handler,get,error,pages
JettyServletWebServerFactory -> private Configuration getErrorPageConfiguration();1525255067;Create a configuration object that adds error handlers._@return a configuration object for adding error pages;private Configuration getErrorPageConfiguration() {_		return new AbstractConfiguration() {__			@Override_			public void configure(WebAppContext context) throws Exception {_				ErrorHandler errorHandler = context.getErrorHandler()__				context.setErrorHandler(new JettyEmbeddedErrorHandler(errorHandler))__				addJettyErrorPages(errorHandler, getErrorPages())__			}__		}__	};create,a,configuration,object,that,adds,error,handlers,return,a,configuration,object,for,adding,error,pages;private,configuration,get,error,page,configuration,return,new,abstract,configuration,override,public,void,configure,web,app,context,context,throws,exception,error,handler,error,handler,context,get,error,handler,context,set,error,handler,new,jetty,embedded,error,handler,error,handler,add,jetty,error,pages,error,handler,get,error,pages
JettyServletWebServerFactory -> private Configuration getErrorPageConfiguration();1525416882;Create a configuration object that adds error handlers._@return a configuration object for adding error pages;private Configuration getErrorPageConfiguration() {_		return new AbstractConfiguration() {__			@Override_			public void configure(WebAppContext context) throws Exception {_				ErrorHandler errorHandler = context.getErrorHandler()__				context.setErrorHandler(new JettyEmbeddedErrorHandler(errorHandler))__				addJettyErrorPages(errorHandler, getErrorPages())__			}__		}__	};create,a,configuration,object,that,adds,error,handlers,return,a,configuration,object,for,adding,error,pages;private,configuration,get,error,page,configuration,return,new,abstract,configuration,override,public,void,configure,web,app,context,context,throws,exception,error,handler,error,handler,context,get,error,handler,context,set,error,handler,new,jetty,embedded,error,handler,error,handler,add,jetty,error,pages,error,handler,get,error,pages
JettyServletWebServerFactory -> private Configuration getErrorPageConfiguration();1531909335;Create a configuration object that adds error handlers._@return a configuration object for adding error pages;private Configuration getErrorPageConfiguration() {_		return new AbstractConfiguration() {__			@Override_			public void configure(WebAppContext context) throws Exception {_				ErrorHandler errorHandler = context.getErrorHandler()__				context.setErrorHandler(new JettyEmbeddedErrorHandler(errorHandler))__				addJettyErrorPages(errorHandler, getErrorPages())__			}__		}__	};create,a,configuration,object,that,adds,error,handlers,return,a,configuration,object,for,adding,error,pages;private,configuration,get,error,page,configuration,return,new,abstract,configuration,override,public,void,configure,web,app,context,context,throws,exception,error,handler,error,handler,context,get,error,handler,context,set,error,handler,new,jetty,embedded,error,handler,error,handler,add,jetty,error,pages,error,handler,get,error,pages
JettyServletWebServerFactory -> private Configuration getErrorPageConfiguration();1532738143;Create a configuration object that adds error handlers._@return a configuration object for adding error pages;private Configuration getErrorPageConfiguration() {_		return new AbstractConfiguration() {__			@Override_			public void configure(WebAppContext context) throws Exception {_				ErrorHandler errorHandler = context.getErrorHandler()__				context.setErrorHandler(new JettyEmbeddedErrorHandler(errorHandler))__				addJettyErrorPages(errorHandler, getErrorPages())__			}__		}__	};create,a,configuration,object,that,adds,error,handlers,return,a,configuration,object,for,adding,error,pages;private,configuration,get,error,page,configuration,return,new,abstract,configuration,override,public,void,configure,web,app,context,context,throws,exception,error,handler,error,handler,context,get,error,handler,context,set,error,handler,new,jetty,embedded,error,handler,error,handler,add,jetty,error,pages,error,handler,get,error,pages
JettyServletWebServerFactory -> public JettyServletWebServerFactory(String contextPath, int port);1507173536;Create a new {@link JettyServletWebServerFactory} with the specified context path_and port._@param contextPath the root context path_@param port the port to listen on;public JettyServletWebServerFactory(String contextPath, int port) {_		super(contextPath, port)__	};create,a,new,link,jetty,servlet,web,server,factory,with,the,specified,context,path,and,port,param,context,path,the,root,context,path,param,port,the,port,to,listen,on;public,jetty,servlet,web,server,factory,string,context,path,int,port,super,context,path,port
JettyServletWebServerFactory -> public JettyServletWebServerFactory(String contextPath, int port);1509713766;Create a new {@link JettyServletWebServerFactory} with the specified context path_and port._@param contextPath the root context path_@param port the port to listen on;public JettyServletWebServerFactory(String contextPath, int port) {_		super(contextPath, port)__	};create,a,new,link,jetty,servlet,web,server,factory,with,the,specified,context,path,and,port,param,context,path,the,root,context,path,param,port,the,port,to,listen,on;public,jetty,servlet,web,server,factory,string,context,path,int,port,super,context,path,port
JettyServletWebServerFactory -> public JettyServletWebServerFactory(String contextPath, int port);1509761243;Create a new {@link JettyServletWebServerFactory} with the specified context path_and port._@param contextPath the root context path_@param port the port to listen on;public JettyServletWebServerFactory(String contextPath, int port) {_		super(contextPath, port)__	};create,a,new,link,jetty,servlet,web,server,factory,with,the,specified,context,path,and,port,param,context,path,the,root,context,path,param,port,the,port,to,listen,on;public,jetty,servlet,web,server,factory,string,context,path,int,port,super,context,path,port
JettyServletWebServerFactory -> public JettyServletWebServerFactory(String contextPath, int port);1510965901;Create a new {@link JettyServletWebServerFactory} with the specified context path_and port._@param contextPath the root context path_@param port the port to listen on;public JettyServletWebServerFactory(String contextPath, int port) {_		super(contextPath, port)__	};create,a,new,link,jetty,servlet,web,server,factory,with,the,specified,context,path,and,port,param,context,path,the,root,context,path,param,port,the,port,to,listen,on;public,jetty,servlet,web,server,factory,string,context,path,int,port,super,context,path,port
JettyServletWebServerFactory -> public JettyServletWebServerFactory(String contextPath, int port);1511157177;Create a new {@link JettyServletWebServerFactory} with the specified context path_and port._@param contextPath the root context path_@param port the port to listen on;public JettyServletWebServerFactory(String contextPath, int port) {_		super(contextPath, port)__	};create,a,new,link,jetty,servlet,web,server,factory,with,the,specified,context,path,and,port,param,context,path,the,root,context,path,param,port,the,port,to,listen,on;public,jetty,servlet,web,server,factory,string,context,path,int,port,super,context,path,port
JettyServletWebServerFactory -> public JettyServletWebServerFactory(String contextPath, int port);1512201855;Create a new {@link JettyServletWebServerFactory} with the specified context path_and port._@param contextPath the root context path_@param port the port to listen on;public JettyServletWebServerFactory(String contextPath, int port) {_		super(contextPath, port)__	};create,a,new,link,jetty,servlet,web,server,factory,with,the,specified,context,path,and,port,param,context,path,the,root,context,path,param,port,the,port,to,listen,on;public,jetty,servlet,web,server,factory,string,context,path,int,port,super,context,path,port
JettyServletWebServerFactory -> public JettyServletWebServerFactory(String contextPath, int port);1514997812;Create a new {@link JettyServletWebServerFactory} with the specified context path_and port._@param contextPath the root context path_@param port the port to listen on;public JettyServletWebServerFactory(String contextPath, int port) {_		super(contextPath, port)__	};create,a,new,link,jetty,servlet,web,server,factory,with,the,specified,context,path,and,port,param,context,path,the,root,context,path,param,port,the,port,to,listen,on;public,jetty,servlet,web,server,factory,string,context,path,int,port,super,context,path,port
JettyServletWebServerFactory -> public JettyServletWebServerFactory(String contextPath, int port);1515014644;Create a new {@link JettyServletWebServerFactory} with the specified context path_and port._@param contextPath the root context path_@param port the port to listen on;public JettyServletWebServerFactory(String contextPath, int port) {_		super(contextPath, port)__	};create,a,new,link,jetty,servlet,web,server,factory,with,the,specified,context,path,and,port,param,context,path,the,root,context,path,param,port,the,port,to,listen,on;public,jetty,servlet,web,server,factory,string,context,path,int,port,super,context,path,port
JettyServletWebServerFactory -> public JettyServletWebServerFactory(String contextPath, int port);1515665717;Create a new {@link JettyServletWebServerFactory} with the specified context path_and port._@param contextPath the root context path_@param port the port to listen on;public JettyServletWebServerFactory(String contextPath, int port) {_		super(contextPath, port)__	};create,a,new,link,jetty,servlet,web,server,factory,with,the,specified,context,path,and,port,param,context,path,the,root,context,path,param,port,the,port,to,listen,on;public,jetty,servlet,web,server,factory,string,context,path,int,port,super,context,path,port
JettyServletWebServerFactory -> public JettyServletWebServerFactory(String contextPath, int port);1516114894;Create a new {@link JettyServletWebServerFactory} with the specified context path_and port._@param contextPath the root context path_@param port the port to listen on;public JettyServletWebServerFactory(String contextPath, int port) {_		super(contextPath, port)__	};create,a,new,link,jetty,servlet,web,server,factory,with,the,specified,context,path,and,port,param,context,path,the,root,context,path,param,port,the,port,to,listen,on;public,jetty,servlet,web,server,factory,string,context,path,int,port,super,context,path,port
JettyServletWebServerFactory -> public JettyServletWebServerFactory(String contextPath, int port);1516210343;Create a new {@link JettyServletWebServerFactory} with the specified context path_and port._@param contextPath the root context path_@param port the port to listen on;public JettyServletWebServerFactory(String contextPath, int port) {_		super(contextPath, port)__	};create,a,new,link,jetty,servlet,web,server,factory,with,the,specified,context,path,and,port,param,context,path,the,root,context,path,param,port,the,port,to,listen,on;public,jetty,servlet,web,server,factory,string,context,path,int,port,super,context,path,port
JettyServletWebServerFactory -> public JettyServletWebServerFactory(String contextPath, int port);1516215803;Create a new {@link JettyServletWebServerFactory} with the specified context path_and port._@param contextPath the root context path_@param port the port to listen on;public JettyServletWebServerFactory(String contextPath, int port) {_		super(contextPath, port)__	};create,a,new,link,jetty,servlet,web,server,factory,with,the,specified,context,path,and,port,param,context,path,the,root,context,path,param,port,the,port,to,listen,on;public,jetty,servlet,web,server,factory,string,context,path,int,port,super,context,path,port
JettyServletWebServerFactory -> public JettyServletWebServerFactory(String contextPath, int port);1516346511;Create a new {@link JettyServletWebServerFactory} with the specified context path_and port._@param contextPath the root context path_@param port the port to listen on;public JettyServletWebServerFactory(String contextPath, int port) {_		super(contextPath, port)__	};create,a,new,link,jetty,servlet,web,server,factory,with,the,specified,context,path,and,port,param,context,path,the,root,context,path,param,port,the,port,to,listen,on;public,jetty,servlet,web,server,factory,string,context,path,int,port,super,context,path,port
JettyServletWebServerFactory -> public JettyServletWebServerFactory(String contextPath, int port);1517419795;Create a new {@link JettyServletWebServerFactory} with the specified context path_and port._@param contextPath the root context path_@param port the port to listen on;public JettyServletWebServerFactory(String contextPath, int port) {_		super(contextPath, port)__	};create,a,new,link,jetty,servlet,web,server,factory,with,the,specified,context,path,and,port,param,context,path,the,root,context,path,param,port,the,port,to,listen,on;public,jetty,servlet,web,server,factory,string,context,path,int,port,super,context,path,port
JettyServletWebServerFactory -> public JettyServletWebServerFactory(String contextPath, int port);1517583695;Create a new {@link JettyServletWebServerFactory} with the specified context path_and port._@param contextPath the root context path_@param port the port to listen on;public JettyServletWebServerFactory(String contextPath, int port) {_		super(contextPath, port)__	};create,a,new,link,jetty,servlet,web,server,factory,with,the,specified,context,path,and,port,param,context,path,the,root,context,path,param,port,the,port,to,listen,on;public,jetty,servlet,web,server,factory,string,context,path,int,port,super,context,path,port
JettyServletWebServerFactory -> public JettyServletWebServerFactory(String contextPath, int port);1519362690;Create a new {@link JettyServletWebServerFactory} with the specified context path_and port._@param contextPath the root context path_@param port the port to listen on;public JettyServletWebServerFactory(String contextPath, int port) {_		super(contextPath, port)__	};create,a,new,link,jetty,servlet,web,server,factory,with,the,specified,context,path,and,port,param,context,path,the,root,context,path,param,port,the,port,to,listen,on;public,jetty,servlet,web,server,factory,string,context,path,int,port,super,context,path,port
JettyServletWebServerFactory -> public JettyServletWebServerFactory(String contextPath, int port);1519742833;Create a new {@link JettyServletWebServerFactory} with the specified context path_and port._@param contextPath the root context path_@param port the port to listen on;public JettyServletWebServerFactory(String contextPath, int port) {_		super(contextPath, port)__	};create,a,new,link,jetty,servlet,web,server,factory,with,the,specified,context,path,and,port,param,context,path,the,root,context,path,param,port,the,port,to,listen,on;public,jetty,servlet,web,server,factory,string,context,path,int,port,super,context,path,port
JettyServletWebServerFactory -> public JettyServletWebServerFactory(String contextPath, int port);1519817048;Create a new {@link JettyServletWebServerFactory} with the specified context path_and port._@param contextPath the root context path_@param port the port to listen on;public JettyServletWebServerFactory(String contextPath, int port) {_		super(contextPath, port)__	};create,a,new,link,jetty,servlet,web,server,factory,with,the,specified,context,path,and,port,param,context,path,the,root,context,path,param,port,the,port,to,listen,on;public,jetty,servlet,web,server,factory,string,context,path,int,port,super,context,path,port
JettyServletWebServerFactory -> public JettyServletWebServerFactory(String contextPath, int port);1521460869;Create a new {@link JettyServletWebServerFactory} with the specified context path_and port._@param contextPath the root context path_@param port the port to listen on;public JettyServletWebServerFactory(String contextPath, int port) {_		super(contextPath, port)__	};create,a,new,link,jetty,servlet,web,server,factory,with,the,specified,context,path,and,port,param,context,path,the,root,context,path,param,port,the,port,to,listen,on;public,jetty,servlet,web,server,factory,string,context,path,int,port,super,context,path,port
JettyServletWebServerFactory -> public JettyServletWebServerFactory(String contextPath, int port);1525255067;Create a new {@link JettyServletWebServerFactory} with the specified context path_and port._@param contextPath the root context path_@param port the port to listen on;public JettyServletWebServerFactory(String contextPath, int port) {_		super(contextPath, port)__	};create,a,new,link,jetty,servlet,web,server,factory,with,the,specified,context,path,and,port,param,context,path,the,root,context,path,param,port,the,port,to,listen,on;public,jetty,servlet,web,server,factory,string,context,path,int,port,super,context,path,port
JettyServletWebServerFactory -> public JettyServletWebServerFactory(String contextPath, int port);1525416882;Create a new {@link JettyServletWebServerFactory} with the specified context path_and port._@param contextPath the root context path_@param port the port to listen on;public JettyServletWebServerFactory(String contextPath, int port) {_		super(contextPath, port)__	};create,a,new,link,jetty,servlet,web,server,factory,with,the,specified,context,path,and,port,param,context,path,the,root,context,path,param,port,the,port,to,listen,on;public,jetty,servlet,web,server,factory,string,context,path,int,port,super,context,path,port
JettyServletWebServerFactory -> public JettyServletWebServerFactory(String contextPath, int port);1531909335;Create a new {@link JettyServletWebServerFactory} with the specified context path_and port._@param contextPath the root context path_@param port the port to listen on;public JettyServletWebServerFactory(String contextPath, int port) {_		super(contextPath, port)__	};create,a,new,link,jetty,servlet,web,server,factory,with,the,specified,context,path,and,port,param,context,path,the,root,context,path,param,port,the,port,to,listen,on;public,jetty,servlet,web,server,factory,string,context,path,int,port,super,context,path,port
JettyServletWebServerFactory -> public JettyServletWebServerFactory(String contextPath, int port);1532738143;Create a new {@link JettyServletWebServerFactory} with the specified context path_and port._@param contextPath the root context path_@param port the port to listen on;public JettyServletWebServerFactory(String contextPath, int port) {_		super(contextPath, port)__	};create,a,new,link,jetty,servlet,web,server,factory,with,the,specified,context,path,and,port,param,context,path,the,root,context,path,param,port,the,port,to,listen,on;public,jetty,servlet,web,server,factory,string,context,path,int,port,super,context,path,port
JettyServletWebServerFactory -> public JettyServletWebServerFactory();1507173536;Create a new {@link JettyServletWebServerFactory} instance.;public JettyServletWebServerFactory() {_		super()__	};create,a,new,link,jetty,servlet,web,server,factory,instance;public,jetty,servlet,web,server,factory,super
JettyServletWebServerFactory -> public JettyServletWebServerFactory();1509713766;Create a new {@link JettyServletWebServerFactory} instance.;public JettyServletWebServerFactory() {_		super()__	};create,a,new,link,jetty,servlet,web,server,factory,instance;public,jetty,servlet,web,server,factory,super
JettyServletWebServerFactory -> public JettyServletWebServerFactory();1509761243;Create a new {@link JettyServletWebServerFactory} instance.;public JettyServletWebServerFactory() {_		super()__	};create,a,new,link,jetty,servlet,web,server,factory,instance;public,jetty,servlet,web,server,factory,super
JettyServletWebServerFactory -> public JettyServletWebServerFactory();1510965901;Create a new {@link JettyServletWebServerFactory} instance.;public JettyServletWebServerFactory() {_	};create,a,new,link,jetty,servlet,web,server,factory,instance;public,jetty,servlet,web,server,factory
JettyServletWebServerFactory -> public JettyServletWebServerFactory();1511157177;Create a new {@link JettyServletWebServerFactory} instance.;public JettyServletWebServerFactory() {_	};create,a,new,link,jetty,servlet,web,server,factory,instance;public,jetty,servlet,web,server,factory
JettyServletWebServerFactory -> public JettyServletWebServerFactory();1512201855;Create a new {@link JettyServletWebServerFactory} instance.;public JettyServletWebServerFactory() {_	};create,a,new,link,jetty,servlet,web,server,factory,instance;public,jetty,servlet,web,server,factory
JettyServletWebServerFactory -> public JettyServletWebServerFactory();1514997812;Create a new {@link JettyServletWebServerFactory} instance.;public JettyServletWebServerFactory() {_	};create,a,new,link,jetty,servlet,web,server,factory,instance;public,jetty,servlet,web,server,factory
JettyServletWebServerFactory -> public JettyServletWebServerFactory();1515014644;Create a new {@link JettyServletWebServerFactory} instance.;public JettyServletWebServerFactory() {_	};create,a,new,link,jetty,servlet,web,server,factory,instance;public,jetty,servlet,web,server,factory
JettyServletWebServerFactory -> public JettyServletWebServerFactory();1515665717;Create a new {@link JettyServletWebServerFactory} instance.;public JettyServletWebServerFactory() {_	};create,a,new,link,jetty,servlet,web,server,factory,instance;public,jetty,servlet,web,server,factory
JettyServletWebServerFactory -> public JettyServletWebServerFactory();1516114894;Create a new {@link JettyServletWebServerFactory} instance.;public JettyServletWebServerFactory() {_	};create,a,new,link,jetty,servlet,web,server,factory,instance;public,jetty,servlet,web,server,factory
JettyServletWebServerFactory -> public JettyServletWebServerFactory();1516210343;Create a new {@link JettyServletWebServerFactory} instance.;public JettyServletWebServerFactory() {_	};create,a,new,link,jetty,servlet,web,server,factory,instance;public,jetty,servlet,web,server,factory
JettyServletWebServerFactory -> public JettyServletWebServerFactory();1516215803;Create a new {@link JettyServletWebServerFactory} instance.;public JettyServletWebServerFactory() {_	};create,a,new,link,jetty,servlet,web,server,factory,instance;public,jetty,servlet,web,server,factory
JettyServletWebServerFactory -> public JettyServletWebServerFactory();1516346511;Create a new {@link JettyServletWebServerFactory} instance.;public JettyServletWebServerFactory() {_	};create,a,new,link,jetty,servlet,web,server,factory,instance;public,jetty,servlet,web,server,factory
JettyServletWebServerFactory -> public JettyServletWebServerFactory();1517419795;Create a new {@link JettyServletWebServerFactory} instance.;public JettyServletWebServerFactory() {_	};create,a,new,link,jetty,servlet,web,server,factory,instance;public,jetty,servlet,web,server,factory
JettyServletWebServerFactory -> public JettyServletWebServerFactory();1517583695;Create a new {@link JettyServletWebServerFactory} instance.;public JettyServletWebServerFactory() {_	};create,a,new,link,jetty,servlet,web,server,factory,instance;public,jetty,servlet,web,server,factory
JettyServletWebServerFactory -> public JettyServletWebServerFactory();1519362690;Create a new {@link JettyServletWebServerFactory} instance.;public JettyServletWebServerFactory() {_	};create,a,new,link,jetty,servlet,web,server,factory,instance;public,jetty,servlet,web,server,factory
JettyServletWebServerFactory -> public JettyServletWebServerFactory();1519742833;Create a new {@link JettyServletWebServerFactory} instance.;public JettyServletWebServerFactory() {_	};create,a,new,link,jetty,servlet,web,server,factory,instance;public,jetty,servlet,web,server,factory
JettyServletWebServerFactory -> public JettyServletWebServerFactory();1519817048;Create a new {@link JettyServletWebServerFactory} instance.;public JettyServletWebServerFactory() {_	};create,a,new,link,jetty,servlet,web,server,factory,instance;public,jetty,servlet,web,server,factory
JettyServletWebServerFactory -> public JettyServletWebServerFactory();1521460869;Create a new {@link JettyServletWebServerFactory} instance.;public JettyServletWebServerFactory() {_	};create,a,new,link,jetty,servlet,web,server,factory,instance;public,jetty,servlet,web,server,factory
JettyServletWebServerFactory -> public JettyServletWebServerFactory();1525255067;Create a new {@link JettyServletWebServerFactory} instance.;public JettyServletWebServerFactory() {_	};create,a,new,link,jetty,servlet,web,server,factory,instance;public,jetty,servlet,web,server,factory
JettyServletWebServerFactory -> public JettyServletWebServerFactory();1525416882;Create a new {@link JettyServletWebServerFactory} instance.;public JettyServletWebServerFactory() {_	};create,a,new,link,jetty,servlet,web,server,factory,instance;public,jetty,servlet,web,server,factory
JettyServletWebServerFactory -> public JettyServletWebServerFactory();1531909335;Create a new {@link JettyServletWebServerFactory} instance.;public JettyServletWebServerFactory() {_	};create,a,new,link,jetty,servlet,web,server,factory,instance;public,jetty,servlet,web,server,factory
JettyServletWebServerFactory -> public JettyServletWebServerFactory();1532738143;Create a new {@link JettyServletWebServerFactory} instance.;public JettyServletWebServerFactory() {_	};create,a,new,link,jetty,servlet,web,server,factory,instance;public,jetty,servlet,web,server,factory
JettyServletWebServerFactory -> protected Configuration getServletContextInitializerConfiguration( 			WebAppContext webAppContext, ServletContextInitializer... initializers);1507173536;Return a Jetty {@link Configuration} that will invoke the specified_{@link ServletContextInitializer}s. By default this method will return a_{@link ServletContextInitializerConfiguration}._@param webAppContext the Jetty {@link WebAppContext}_@param initializers the {@link ServletContextInitializer}s to apply_@return the {@link Configuration} instance;protected Configuration getServletContextInitializerConfiguration(_			WebAppContext webAppContext, ServletContextInitializer... initializers) {_		return new ServletContextInitializerConfiguration(initializers)__	};return,a,jetty,link,configuration,that,will,invoke,the,specified,link,servlet,context,initializer,s,by,default,this,method,will,return,a,link,servlet,context,initializer,configuration,param,web,app,context,the,jetty,link,web,app,context,param,initializers,the,link,servlet,context,initializer,s,to,apply,return,the,link,configuration,instance;protected,configuration,get,servlet,context,initializer,configuration,web,app,context,web,app,context,servlet,context,initializer,initializers,return,new,servlet,context,initializer,configuration,initializers
JettyServletWebServerFactory -> protected Configuration getServletContextInitializerConfiguration( 			WebAppContext webAppContext, ServletContextInitializer... initializers);1509713766;Return a Jetty {@link Configuration} that will invoke the specified_{@link ServletContextInitializer}s. By default this method will return a_{@link ServletContextInitializerConfiguration}._@param webAppContext the Jetty {@link WebAppContext}_@param initializers the {@link ServletContextInitializer}s to apply_@return the {@link Configuration} instance;protected Configuration getServletContextInitializerConfiguration(_			WebAppContext webAppContext, ServletContextInitializer... initializers) {_		return new ServletContextInitializerConfiguration(initializers)__	};return,a,jetty,link,configuration,that,will,invoke,the,specified,link,servlet,context,initializer,s,by,default,this,method,will,return,a,link,servlet,context,initializer,configuration,param,web,app,context,the,jetty,link,web,app,context,param,initializers,the,link,servlet,context,initializer,s,to,apply,return,the,link,configuration,instance;protected,configuration,get,servlet,context,initializer,configuration,web,app,context,web,app,context,servlet,context,initializer,initializers,return,new,servlet,context,initializer,configuration,initializers
JettyServletWebServerFactory -> protected Configuration getServletContextInitializerConfiguration( 			WebAppContext webAppContext, ServletContextInitializer... initializers);1509761243;Return a Jetty {@link Configuration} that will invoke the specified_{@link ServletContextInitializer}s. By default this method will return a_{@link ServletContextInitializerConfiguration}._@param webAppContext the Jetty {@link WebAppContext}_@param initializers the {@link ServletContextInitializer}s to apply_@return the {@link Configuration} instance;protected Configuration getServletContextInitializerConfiguration(_			WebAppContext webAppContext, ServletContextInitializer... initializers) {_		return new ServletContextInitializerConfiguration(initializers)__	};return,a,jetty,link,configuration,that,will,invoke,the,specified,link,servlet,context,initializer,s,by,default,this,method,will,return,a,link,servlet,context,initializer,configuration,param,web,app,context,the,jetty,link,web,app,context,param,initializers,the,link,servlet,context,initializer,s,to,apply,return,the,link,configuration,instance;protected,configuration,get,servlet,context,initializer,configuration,web,app,context,web,app,context,servlet,context,initializer,initializers,return,new,servlet,context,initializer,configuration,initializers
JettyServletWebServerFactory -> protected Configuration getServletContextInitializerConfiguration( 			WebAppContext webAppContext, ServletContextInitializer... initializers);1510965901;Return a Jetty {@link Configuration} that will invoke the specified_{@link ServletContextInitializer}s. By default this method will return a_{@link ServletContextInitializerConfiguration}._@param webAppContext the Jetty {@link WebAppContext}_@param initializers the {@link ServletContextInitializer}s to apply_@return the {@link Configuration} instance;protected Configuration getServletContextInitializerConfiguration(_			WebAppContext webAppContext, ServletContextInitializer... initializers) {_		return new ServletContextInitializerConfiguration(initializers)__	};return,a,jetty,link,configuration,that,will,invoke,the,specified,link,servlet,context,initializer,s,by,default,this,method,will,return,a,link,servlet,context,initializer,configuration,param,web,app,context,the,jetty,link,web,app,context,param,initializers,the,link,servlet,context,initializer,s,to,apply,return,the,link,configuration,instance;protected,configuration,get,servlet,context,initializer,configuration,web,app,context,web,app,context,servlet,context,initializer,initializers,return,new,servlet,context,initializer,configuration,initializers
JettyServletWebServerFactory -> protected Configuration getServletContextInitializerConfiguration( 			WebAppContext webAppContext, ServletContextInitializer... initializers);1511157177;Return a Jetty {@link Configuration} that will invoke the specified_{@link ServletContextInitializer}s. By default this method will return a_{@link ServletContextInitializerConfiguration}._@param webAppContext the Jetty {@link WebAppContext}_@param initializers the {@link ServletContextInitializer}s to apply_@return the {@link Configuration} instance;protected Configuration getServletContextInitializerConfiguration(_			WebAppContext webAppContext, ServletContextInitializer... initializers) {_		return new ServletContextInitializerConfiguration(initializers)__	};return,a,jetty,link,configuration,that,will,invoke,the,specified,link,servlet,context,initializer,s,by,default,this,method,will,return,a,link,servlet,context,initializer,configuration,param,web,app,context,the,jetty,link,web,app,context,param,initializers,the,link,servlet,context,initializer,s,to,apply,return,the,link,configuration,instance;protected,configuration,get,servlet,context,initializer,configuration,web,app,context,web,app,context,servlet,context,initializer,initializers,return,new,servlet,context,initializer,configuration,initializers
JettyServletWebServerFactory -> protected Configuration getServletContextInitializerConfiguration( 			WebAppContext webAppContext, ServletContextInitializer... initializers);1512201855;Return a Jetty {@link Configuration} that will invoke the specified_{@link ServletContextInitializer}s. By default this method will return a_{@link ServletContextInitializerConfiguration}._@param webAppContext the Jetty {@link WebAppContext}_@param initializers the {@link ServletContextInitializer}s to apply_@return the {@link Configuration} instance;protected Configuration getServletContextInitializerConfiguration(_			WebAppContext webAppContext, ServletContextInitializer... initializers) {_		return new ServletContextInitializerConfiguration(initializers)__	};return,a,jetty,link,configuration,that,will,invoke,the,specified,link,servlet,context,initializer,s,by,default,this,method,will,return,a,link,servlet,context,initializer,configuration,param,web,app,context,the,jetty,link,web,app,context,param,initializers,the,link,servlet,context,initializer,s,to,apply,return,the,link,configuration,instance;protected,configuration,get,servlet,context,initializer,configuration,web,app,context,web,app,context,servlet,context,initializer,initializers,return,new,servlet,context,initializer,configuration,initializers
JettyServletWebServerFactory -> protected Configuration getServletContextInitializerConfiguration( 			WebAppContext webAppContext, ServletContextInitializer... initializers);1514997812;Return a Jetty {@link Configuration} that will invoke the specified_{@link ServletContextInitializer}s. By default this method will return a_{@link ServletContextInitializerConfiguration}._@param webAppContext the Jetty {@link WebAppContext}_@param initializers the {@link ServletContextInitializer}s to apply_@return the {@link Configuration} instance;protected Configuration getServletContextInitializerConfiguration(_			WebAppContext webAppContext, ServletContextInitializer... initializers) {_		return new ServletContextInitializerConfiguration(initializers)__	};return,a,jetty,link,configuration,that,will,invoke,the,specified,link,servlet,context,initializer,s,by,default,this,method,will,return,a,link,servlet,context,initializer,configuration,param,web,app,context,the,jetty,link,web,app,context,param,initializers,the,link,servlet,context,initializer,s,to,apply,return,the,link,configuration,instance;protected,configuration,get,servlet,context,initializer,configuration,web,app,context,web,app,context,servlet,context,initializer,initializers,return,new,servlet,context,initializer,configuration,initializers
JettyServletWebServerFactory -> protected Configuration getServletContextInitializerConfiguration( 			WebAppContext webAppContext, ServletContextInitializer... initializers);1515014644;Return a Jetty {@link Configuration} that will invoke the specified_{@link ServletContextInitializer}s. By default this method will return a_{@link ServletContextInitializerConfiguration}._@param webAppContext the Jetty {@link WebAppContext}_@param initializers the {@link ServletContextInitializer}s to apply_@return the {@link Configuration} instance;protected Configuration getServletContextInitializerConfiguration(_			WebAppContext webAppContext, ServletContextInitializer... initializers) {_		return new ServletContextInitializerConfiguration(initializers)__	};return,a,jetty,link,configuration,that,will,invoke,the,specified,link,servlet,context,initializer,s,by,default,this,method,will,return,a,link,servlet,context,initializer,configuration,param,web,app,context,the,jetty,link,web,app,context,param,initializers,the,link,servlet,context,initializer,s,to,apply,return,the,link,configuration,instance;protected,configuration,get,servlet,context,initializer,configuration,web,app,context,web,app,context,servlet,context,initializer,initializers,return,new,servlet,context,initializer,configuration,initializers
JettyServletWebServerFactory -> protected Configuration getServletContextInitializerConfiguration( 			WebAppContext webAppContext, ServletContextInitializer... initializers);1515665717;Return a Jetty {@link Configuration} that will invoke the specified_{@link ServletContextInitializer}s. By default this method will return a_{@link ServletContextInitializerConfiguration}._@param webAppContext the Jetty {@link WebAppContext}_@param initializers the {@link ServletContextInitializer}s to apply_@return the {@link Configuration} instance;protected Configuration getServletContextInitializerConfiguration(_			WebAppContext webAppContext, ServletContextInitializer... initializers) {_		return new ServletContextInitializerConfiguration(initializers)__	};return,a,jetty,link,configuration,that,will,invoke,the,specified,link,servlet,context,initializer,s,by,default,this,method,will,return,a,link,servlet,context,initializer,configuration,param,web,app,context,the,jetty,link,web,app,context,param,initializers,the,link,servlet,context,initializer,s,to,apply,return,the,link,configuration,instance;protected,configuration,get,servlet,context,initializer,configuration,web,app,context,web,app,context,servlet,context,initializer,initializers,return,new,servlet,context,initializer,configuration,initializers
JettyServletWebServerFactory -> protected Configuration getServletContextInitializerConfiguration( 			WebAppContext webAppContext, ServletContextInitializer... initializers);1516114894;Return a Jetty {@link Configuration} that will invoke the specified_{@link ServletContextInitializer}s. By default this method will return a_{@link ServletContextInitializerConfiguration}._@param webAppContext the Jetty {@link WebAppContext}_@param initializers the {@link ServletContextInitializer}s to apply_@return the {@link Configuration} instance;protected Configuration getServletContextInitializerConfiguration(_			WebAppContext webAppContext, ServletContextInitializer... initializers) {_		return new ServletContextInitializerConfiguration(initializers)__	};return,a,jetty,link,configuration,that,will,invoke,the,specified,link,servlet,context,initializer,s,by,default,this,method,will,return,a,link,servlet,context,initializer,configuration,param,web,app,context,the,jetty,link,web,app,context,param,initializers,the,link,servlet,context,initializer,s,to,apply,return,the,link,configuration,instance;protected,configuration,get,servlet,context,initializer,configuration,web,app,context,web,app,context,servlet,context,initializer,initializers,return,new,servlet,context,initializer,configuration,initializers
JettyServletWebServerFactory -> protected Configuration getServletContextInitializerConfiguration( 			WebAppContext webAppContext, ServletContextInitializer... initializers);1516210343;Return a Jetty {@link Configuration} that will invoke the specified_{@link ServletContextInitializer}s. By default this method will return a_{@link ServletContextInitializerConfiguration}._@param webAppContext the Jetty {@link WebAppContext}_@param initializers the {@link ServletContextInitializer}s to apply_@return the {@link Configuration} instance;protected Configuration getServletContextInitializerConfiguration(_			WebAppContext webAppContext, ServletContextInitializer... initializers) {_		return new ServletContextInitializerConfiguration(initializers)__	};return,a,jetty,link,configuration,that,will,invoke,the,specified,link,servlet,context,initializer,s,by,default,this,method,will,return,a,link,servlet,context,initializer,configuration,param,web,app,context,the,jetty,link,web,app,context,param,initializers,the,link,servlet,context,initializer,s,to,apply,return,the,link,configuration,instance;protected,configuration,get,servlet,context,initializer,configuration,web,app,context,web,app,context,servlet,context,initializer,initializers,return,new,servlet,context,initializer,configuration,initializers
JettyServletWebServerFactory -> protected Configuration getServletContextInitializerConfiguration( 			WebAppContext webAppContext, ServletContextInitializer... initializers);1516215803;Return a Jetty {@link Configuration} that will invoke the specified_{@link ServletContextInitializer}s. By default this method will return a_{@link ServletContextInitializerConfiguration}._@param webAppContext the Jetty {@link WebAppContext}_@param initializers the {@link ServletContextInitializer}s to apply_@return the {@link Configuration} instance;protected Configuration getServletContextInitializerConfiguration(_			WebAppContext webAppContext, ServletContextInitializer... initializers) {_		return new ServletContextInitializerConfiguration(initializers)__	};return,a,jetty,link,configuration,that,will,invoke,the,specified,link,servlet,context,initializer,s,by,default,this,method,will,return,a,link,servlet,context,initializer,configuration,param,web,app,context,the,jetty,link,web,app,context,param,initializers,the,link,servlet,context,initializer,s,to,apply,return,the,link,configuration,instance;protected,configuration,get,servlet,context,initializer,configuration,web,app,context,web,app,context,servlet,context,initializer,initializers,return,new,servlet,context,initializer,configuration,initializers
JettyServletWebServerFactory -> protected Configuration getServletContextInitializerConfiguration( 			WebAppContext webAppContext, ServletContextInitializer... initializers);1516346511;Return a Jetty {@link Configuration} that will invoke the specified_{@link ServletContextInitializer}s. By default this method will return a_{@link ServletContextInitializerConfiguration}._@param webAppContext the Jetty {@link WebAppContext}_@param initializers the {@link ServletContextInitializer}s to apply_@return the {@link Configuration} instance;protected Configuration getServletContextInitializerConfiguration(_			WebAppContext webAppContext, ServletContextInitializer... initializers) {_		return new ServletContextInitializerConfiguration(initializers)__	};return,a,jetty,link,configuration,that,will,invoke,the,specified,link,servlet,context,initializer,s,by,default,this,method,will,return,a,link,servlet,context,initializer,configuration,param,web,app,context,the,jetty,link,web,app,context,param,initializers,the,link,servlet,context,initializer,s,to,apply,return,the,link,configuration,instance;protected,configuration,get,servlet,context,initializer,configuration,web,app,context,web,app,context,servlet,context,initializer,initializers,return,new,servlet,context,initializer,configuration,initializers
JettyServletWebServerFactory -> protected Configuration getServletContextInitializerConfiguration( 			WebAppContext webAppContext, ServletContextInitializer... initializers);1517419795;Return a Jetty {@link Configuration} that will invoke the specified_{@link ServletContextInitializer}s. By default this method will return a_{@link ServletContextInitializerConfiguration}._@param webAppContext the Jetty {@link WebAppContext}_@param initializers the {@link ServletContextInitializer}s to apply_@return the {@link Configuration} instance;protected Configuration getServletContextInitializerConfiguration(_			WebAppContext webAppContext, ServletContextInitializer... initializers) {_		return new ServletContextInitializerConfiguration(initializers)__	};return,a,jetty,link,configuration,that,will,invoke,the,specified,link,servlet,context,initializer,s,by,default,this,method,will,return,a,link,servlet,context,initializer,configuration,param,web,app,context,the,jetty,link,web,app,context,param,initializers,the,link,servlet,context,initializer,s,to,apply,return,the,link,configuration,instance;protected,configuration,get,servlet,context,initializer,configuration,web,app,context,web,app,context,servlet,context,initializer,initializers,return,new,servlet,context,initializer,configuration,initializers
JettyServletWebServerFactory -> protected Configuration getServletContextInitializerConfiguration( 			WebAppContext webAppContext, ServletContextInitializer... initializers);1517583695;Return a Jetty {@link Configuration} that will invoke the specified_{@link ServletContextInitializer}s. By default this method will return a_{@link ServletContextInitializerConfiguration}._@param webAppContext the Jetty {@link WebAppContext}_@param initializers the {@link ServletContextInitializer}s to apply_@return the {@link Configuration} instance;protected Configuration getServletContextInitializerConfiguration(_			WebAppContext webAppContext, ServletContextInitializer... initializers) {_		return new ServletContextInitializerConfiguration(initializers)__	};return,a,jetty,link,configuration,that,will,invoke,the,specified,link,servlet,context,initializer,s,by,default,this,method,will,return,a,link,servlet,context,initializer,configuration,param,web,app,context,the,jetty,link,web,app,context,param,initializers,the,link,servlet,context,initializer,s,to,apply,return,the,link,configuration,instance;protected,configuration,get,servlet,context,initializer,configuration,web,app,context,web,app,context,servlet,context,initializer,initializers,return,new,servlet,context,initializer,configuration,initializers
JettyServletWebServerFactory -> protected Configuration getServletContextInitializerConfiguration( 			WebAppContext webAppContext, ServletContextInitializer... initializers);1519362690;Return a Jetty {@link Configuration} that will invoke the specified_{@link ServletContextInitializer}s. By default this method will return a_{@link ServletContextInitializerConfiguration}._@param webAppContext the Jetty {@link WebAppContext}_@param initializers the {@link ServletContextInitializer}s to apply_@return the {@link Configuration} instance;protected Configuration getServletContextInitializerConfiguration(_			WebAppContext webAppContext, ServletContextInitializer... initializers) {_		return new ServletContextInitializerConfiguration(initializers)__	};return,a,jetty,link,configuration,that,will,invoke,the,specified,link,servlet,context,initializer,s,by,default,this,method,will,return,a,link,servlet,context,initializer,configuration,param,web,app,context,the,jetty,link,web,app,context,param,initializers,the,link,servlet,context,initializer,s,to,apply,return,the,link,configuration,instance;protected,configuration,get,servlet,context,initializer,configuration,web,app,context,web,app,context,servlet,context,initializer,initializers,return,new,servlet,context,initializer,configuration,initializers
JettyServletWebServerFactory -> protected Configuration getServletContextInitializerConfiguration( 			WebAppContext webAppContext, ServletContextInitializer... initializers);1519742833;Return a Jetty {@link Configuration} that will invoke the specified_{@link ServletContextInitializer}s. By default this method will return a_{@link ServletContextInitializerConfiguration}._@param webAppContext the Jetty {@link WebAppContext}_@param initializers the {@link ServletContextInitializer}s to apply_@return the {@link Configuration} instance;protected Configuration getServletContextInitializerConfiguration(_			WebAppContext webAppContext, ServletContextInitializer... initializers) {_		return new ServletContextInitializerConfiguration(initializers)__	};return,a,jetty,link,configuration,that,will,invoke,the,specified,link,servlet,context,initializer,s,by,default,this,method,will,return,a,link,servlet,context,initializer,configuration,param,web,app,context,the,jetty,link,web,app,context,param,initializers,the,link,servlet,context,initializer,s,to,apply,return,the,link,configuration,instance;protected,configuration,get,servlet,context,initializer,configuration,web,app,context,web,app,context,servlet,context,initializer,initializers,return,new,servlet,context,initializer,configuration,initializers
JettyServletWebServerFactory -> protected Configuration getServletContextInitializerConfiguration( 			WebAppContext webAppContext, ServletContextInitializer... initializers);1519817048;Return a Jetty {@link Configuration} that will invoke the specified_{@link ServletContextInitializer}s. By default this method will return a_{@link ServletContextInitializerConfiguration}._@param webAppContext the Jetty {@link WebAppContext}_@param initializers the {@link ServletContextInitializer}s to apply_@return the {@link Configuration} instance;protected Configuration getServletContextInitializerConfiguration(_			WebAppContext webAppContext, ServletContextInitializer... initializers) {_		return new ServletContextInitializerConfiguration(initializers)__	};return,a,jetty,link,configuration,that,will,invoke,the,specified,link,servlet,context,initializer,s,by,default,this,method,will,return,a,link,servlet,context,initializer,configuration,param,web,app,context,the,jetty,link,web,app,context,param,initializers,the,link,servlet,context,initializer,s,to,apply,return,the,link,configuration,instance;protected,configuration,get,servlet,context,initializer,configuration,web,app,context,web,app,context,servlet,context,initializer,initializers,return,new,servlet,context,initializer,configuration,initializers
JettyServletWebServerFactory -> protected Configuration getServletContextInitializerConfiguration( 			WebAppContext webAppContext, ServletContextInitializer... initializers);1521460869;Return a Jetty {@link Configuration} that will invoke the specified_{@link ServletContextInitializer}s. By default this method will return a_{@link ServletContextInitializerConfiguration}._@param webAppContext the Jetty {@link WebAppContext}_@param initializers the {@link ServletContextInitializer}s to apply_@return the {@link Configuration} instance;protected Configuration getServletContextInitializerConfiguration(_			WebAppContext webAppContext, ServletContextInitializer... initializers) {_		return new ServletContextInitializerConfiguration(initializers)__	};return,a,jetty,link,configuration,that,will,invoke,the,specified,link,servlet,context,initializer,s,by,default,this,method,will,return,a,link,servlet,context,initializer,configuration,param,web,app,context,the,jetty,link,web,app,context,param,initializers,the,link,servlet,context,initializer,s,to,apply,return,the,link,configuration,instance;protected,configuration,get,servlet,context,initializer,configuration,web,app,context,web,app,context,servlet,context,initializer,initializers,return,new,servlet,context,initializer,configuration,initializers
JettyServletWebServerFactory -> protected Configuration getServletContextInitializerConfiguration( 			WebAppContext webAppContext, ServletContextInitializer... initializers);1525255067;Return a Jetty {@link Configuration} that will invoke the specified_{@link ServletContextInitializer}s. By default this method will return a_{@link ServletContextInitializerConfiguration}._@param webAppContext the Jetty {@link WebAppContext}_@param initializers the {@link ServletContextInitializer}s to apply_@return the {@link Configuration} instance;protected Configuration getServletContextInitializerConfiguration(_			WebAppContext webAppContext, ServletContextInitializer... initializers) {_		return new ServletContextInitializerConfiguration(initializers)__	};return,a,jetty,link,configuration,that,will,invoke,the,specified,link,servlet,context,initializer,s,by,default,this,method,will,return,a,link,servlet,context,initializer,configuration,param,web,app,context,the,jetty,link,web,app,context,param,initializers,the,link,servlet,context,initializer,s,to,apply,return,the,link,configuration,instance;protected,configuration,get,servlet,context,initializer,configuration,web,app,context,web,app,context,servlet,context,initializer,initializers,return,new,servlet,context,initializer,configuration,initializers
JettyServletWebServerFactory -> protected Configuration getServletContextInitializerConfiguration( 			WebAppContext webAppContext, ServletContextInitializer... initializers);1525416882;Return a Jetty {@link Configuration} that will invoke the specified_{@link ServletContextInitializer}s. By default this method will return a_{@link ServletContextInitializerConfiguration}._@param webAppContext the Jetty {@link WebAppContext}_@param initializers the {@link ServletContextInitializer}s to apply_@return the {@link Configuration} instance;protected Configuration getServletContextInitializerConfiguration(_			WebAppContext webAppContext, ServletContextInitializer... initializers) {_		return new ServletContextInitializerConfiguration(initializers)__	};return,a,jetty,link,configuration,that,will,invoke,the,specified,link,servlet,context,initializer,s,by,default,this,method,will,return,a,link,servlet,context,initializer,configuration,param,web,app,context,the,jetty,link,web,app,context,param,initializers,the,link,servlet,context,initializer,s,to,apply,return,the,link,configuration,instance;protected,configuration,get,servlet,context,initializer,configuration,web,app,context,web,app,context,servlet,context,initializer,initializers,return,new,servlet,context,initializer,configuration,initializers
JettyServletWebServerFactory -> protected Configuration getServletContextInitializerConfiguration( 			WebAppContext webAppContext, ServletContextInitializer... initializers);1531909335;Return a Jetty {@link Configuration} that will invoke the specified_{@link ServletContextInitializer}s. By default this method will return a_{@link ServletContextInitializerConfiguration}._@param webAppContext the Jetty {@link WebAppContext}_@param initializers the {@link ServletContextInitializer}s to apply_@return the {@link Configuration} instance;protected Configuration getServletContextInitializerConfiguration(_			WebAppContext webAppContext, ServletContextInitializer... initializers) {_		return new ServletContextInitializerConfiguration(initializers)__	};return,a,jetty,link,configuration,that,will,invoke,the,specified,link,servlet,context,initializer,s,by,default,this,method,will,return,a,link,servlet,context,initializer,configuration,param,web,app,context,the,jetty,link,web,app,context,param,initializers,the,link,servlet,context,initializer,s,to,apply,return,the,link,configuration,instance;protected,configuration,get,servlet,context,initializer,configuration,web,app,context,web,app,context,servlet,context,initializer,initializers,return,new,servlet,context,initializer,configuration,initializers
JettyServletWebServerFactory -> protected Configuration getServletContextInitializerConfiguration( 			WebAppContext webAppContext, ServletContextInitializer... initializers);1532738143;Return a Jetty {@link Configuration} that will invoke the specified_{@link ServletContextInitializer}s. By default this method will return a_{@link ServletContextInitializerConfiguration}._@param webAppContext the Jetty {@link WebAppContext}_@param initializers the {@link ServletContextInitializer}s to apply_@return the {@link Configuration} instance;protected Configuration getServletContextInitializerConfiguration(_			WebAppContext webAppContext, ServletContextInitializer... initializers) {_		return new ServletContextInitializerConfiguration(initializers)__	};return,a,jetty,link,configuration,that,will,invoke,the,specified,link,servlet,context,initializer,s,by,default,this,method,will,return,a,link,servlet,context,initializer,configuration,param,web,app,context,the,jetty,link,web,app,context,param,initializers,the,link,servlet,context,initializer,s,to,apply,return,the,link,configuration,instance;protected,configuration,get,servlet,context,initializer,configuration,web,app,context,web,app,context,servlet,context,initializer,initializers,return,new,servlet,context,initializer,configuration,initializers
JettyServletWebServerFactory -> public void setAcceptors(int acceptors);1507173536;Set the number of acceptor threads to use._@param acceptors the number of acceptor threads to use_@since 1.4.0;public void setAcceptors(int acceptors) {_		this.acceptors = acceptors__	};set,the,number,of,acceptor,threads,to,use,param,acceptors,the,number,of,acceptor,threads,to,use,since,1,4,0;public,void,set,acceptors,int,acceptors,this,acceptors,acceptors
JettyServletWebServerFactory -> public void setAcceptors(int acceptors);1509713766;Set the number of acceptor threads to use._@param acceptors the number of acceptor threads to use_@since 1.4.0;public void setAcceptors(int acceptors) {_		this.acceptors = acceptors__	};set,the,number,of,acceptor,threads,to,use,param,acceptors,the,number,of,acceptor,threads,to,use,since,1,4,0;public,void,set,acceptors,int,acceptors,this,acceptors,acceptors
JettyServletWebServerFactory -> public void setAcceptors(int acceptors);1509761243;Set the number of acceptor threads to use._@param acceptors the number of acceptor threads to use_@since 1.4.0;public void setAcceptors(int acceptors) {_		this.acceptors = acceptors__	};set,the,number,of,acceptor,threads,to,use,param,acceptors,the,number,of,acceptor,threads,to,use,since,1,4,0;public,void,set,acceptors,int,acceptors,this,acceptors,acceptors
JettyServletWebServerFactory -> public void setAcceptors(int acceptors);1510965901;Set the number of acceptor threads to use._@param acceptors the number of acceptor threads to use_@since 1.4.0;public void setAcceptors(int acceptors) {_		this.acceptors = acceptors__	};set,the,number,of,acceptor,threads,to,use,param,acceptors,the,number,of,acceptor,threads,to,use,since,1,4,0;public,void,set,acceptors,int,acceptors,this,acceptors,acceptors
JettyServletWebServerFactory -> public void setAcceptors(int acceptors);1511157177;Set the number of acceptor threads to use._@param acceptors the number of acceptor threads to use_@since 1.4.0;public void setAcceptors(int acceptors) {_		this.acceptors = acceptors__	};set,the,number,of,acceptor,threads,to,use,param,acceptors,the,number,of,acceptor,threads,to,use,since,1,4,0;public,void,set,acceptors,int,acceptors,this,acceptors,acceptors
JettyServletWebServerFactory -> public void setAcceptors(int acceptors);1512201855;Set the number of acceptor threads to use._@param acceptors the number of acceptor threads to use_@since 1.4.0;public void setAcceptors(int acceptors) {_		this.acceptors = acceptors__	};set,the,number,of,acceptor,threads,to,use,param,acceptors,the,number,of,acceptor,threads,to,use,since,1,4,0;public,void,set,acceptors,int,acceptors,this,acceptors,acceptors
JettyServletWebServerFactory -> public void setAcceptors(int acceptors);1514997812;Set the number of acceptor threads to use._@param acceptors the number of acceptor threads to use_@since 1.4.0;public void setAcceptors(int acceptors) {_		this.acceptors = acceptors__	};set,the,number,of,acceptor,threads,to,use,param,acceptors,the,number,of,acceptor,threads,to,use,since,1,4,0;public,void,set,acceptors,int,acceptors,this,acceptors,acceptors
JettyServletWebServerFactory -> public void setAcceptors(int acceptors);1515014644;Set the number of acceptor threads to use._@param acceptors the number of acceptor threads to use_@since 1.4.0;public void setAcceptors(int acceptors) {_		this.acceptors = acceptors__	};set,the,number,of,acceptor,threads,to,use,param,acceptors,the,number,of,acceptor,threads,to,use,since,1,4,0;public,void,set,acceptors,int,acceptors,this,acceptors,acceptors
