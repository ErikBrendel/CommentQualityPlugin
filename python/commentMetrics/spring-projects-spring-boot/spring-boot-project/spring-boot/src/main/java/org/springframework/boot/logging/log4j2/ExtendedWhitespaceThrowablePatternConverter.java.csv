commented;modifiers;parameterAmount;loc;comment;code
false;public;2;8;;@Override public void format(LogEvent event, StringBuilder buffer) {     if (event.getThrown() != null) {         buffer.append(this.options.getSeparator()).         this.delegate.format(event, buffer).         buffer.append(this.options.getSeparator()).     } }
true;public,static;2;4;/**  * Creates a new instance of the class. Required by Log4J2.  * @param configuration current configuration  * @param options pattern options, may be null. If first element is "short", only the  * first line of the throwable will be formatted.  * @return a new {@code WhitespaceThrowablePatternConverter}  */ ;/**  * Creates a new instance of the class. Required by Log4J2.  * @param configuration current configuration  * @param options pattern options, may be null. If first element is "short", only the  * first line of the throwable will be formatted.  * @return a new {@code WhitespaceThrowablePatternConverter}  */ public static ExtendedWhitespaceThrowablePatternConverter newInstance(Configuration configuration, String[] options) {     return new ExtendedWhitespaceThrowablePatternConverter(configuration, options). }
