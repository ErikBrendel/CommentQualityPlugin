# id;timestamp;commentText;codeText;commentWords;codeWords
TaskSchedulerBuilder -> public TaskSchedulerBuilder customizers(TaskSchedulerCustomizer... customizers);1536177260;Set the {@link TaskSchedulerCustomizer TaskSchedulerCustomizers} that should be_applied to the {@link ThreadPoolTaskScheduler}. Customizers are applied in the_order that they were added after builder configuration has been applied. Setting_this value will replace any previously configured customizers._@param customizers the customizers to set_@return a new builder instance_@see #additionalCustomizers(TaskSchedulerCustomizer...);public TaskSchedulerBuilder customizers(TaskSchedulerCustomizer... customizers) {_		Assert.notNull(customizers, "Customizers must not be null")__		return customizers(Arrays.asList(customizers))__	};set,the,link,task,scheduler,customizer,task,scheduler,customizers,that,should,be,applied,to,the,link,thread,pool,task,scheduler,customizers,are,applied,in,the,order,that,they,were,added,after,builder,configuration,has,been,applied,setting,this,value,will,replace,any,previously,configured,customizers,param,customizers,the,customizers,to,set,return,a,new,builder,instance,see,additional,customizers,task,scheduler,customizer;public,task,scheduler,builder,customizers,task,scheduler,customizer,customizers,assert,not,null,customizers,customizers,must,not,be,null,return,customizers,arrays,as,list,customizers
TaskSchedulerBuilder -> public TaskSchedulerBuilder customizers(TaskSchedulerCustomizer... customizers);1550520845;Set the {@link TaskSchedulerCustomizer TaskSchedulerCustomizers} that should be_applied to the {@link ThreadPoolTaskScheduler}. Customizers are applied in the_order that they were added after builder configuration has been applied. Setting_this value will replace any previously configured customizers._@param customizers the customizers to set_@return a new builder instance_@see #additionalCustomizers(TaskSchedulerCustomizer...);public TaskSchedulerBuilder customizers(TaskSchedulerCustomizer... customizers) {_		Assert.notNull(customizers, "Customizers must not be null")__		return customizers(Arrays.asList(customizers))__	};set,the,link,task,scheduler,customizer,task,scheduler,customizers,that,should,be,applied,to,the,link,thread,pool,task,scheduler,customizers,are,applied,in,the,order,that,they,were,added,after,builder,configuration,has,been,applied,setting,this,value,will,replace,any,previously,configured,customizers,param,customizers,the,customizers,to,set,return,a,new,builder,instance,see,additional,customizers,task,scheduler,customizer;public,task,scheduler,builder,customizers,task,scheduler,customizer,customizers,assert,not,null,customizers,customizers,must,not,be,null,return,customizers,arrays,as,list,customizers
TaskSchedulerBuilder -> public TaskSchedulerBuilder customizers( 			Iterable<TaskSchedulerCustomizer> customizers);1536177260;Set the {@link TaskSchedulerCustomizer taskSchedulerCustomizers} that should be_applied to the {@link ThreadPoolTaskScheduler}. Customizers are applied in the_order that they were added after builder configuration has been applied. Setting_this value will replace any previously configured customizers._@param customizers the customizers to set_@return a new builder instance_@see #additionalCustomizers(TaskSchedulerCustomizer...);public TaskSchedulerBuilder customizers(_			Iterable<TaskSchedulerCustomizer> customizers) {_		Assert.notNull(customizers, "Customizers must not be null")__		return new TaskSchedulerBuilder(this.poolSize, this.threadNamePrefix,_				append(null, customizers))__	};set,the,link,task,scheduler,customizer,task,scheduler,customizers,that,should,be,applied,to,the,link,thread,pool,task,scheduler,customizers,are,applied,in,the,order,that,they,were,added,after,builder,configuration,has,been,applied,setting,this,value,will,replace,any,previously,configured,customizers,param,customizers,the,customizers,to,set,return,a,new,builder,instance,see,additional,customizers,task,scheduler,customizer;public,task,scheduler,builder,customizers,iterable,task,scheduler,customizer,customizers,assert,not,null,customizers,customizers,must,not,be,null,return,new,task,scheduler,builder,this,pool,size,this,thread,name,prefix,append,null,customizers
TaskSchedulerBuilder -> public TaskSchedulerBuilder customizers( 			Iterable<TaskSchedulerCustomizer> customizers);1550520845;Set the {@link TaskSchedulerCustomizer taskSchedulerCustomizers} that should be_applied to the {@link ThreadPoolTaskScheduler}. Customizers are applied in the_order that they were added after builder configuration has been applied. Setting_this value will replace any previously configured customizers._@param customizers the customizers to set_@return a new builder instance_@see #additionalCustomizers(TaskSchedulerCustomizer...);public TaskSchedulerBuilder customizers(_			Iterable<TaskSchedulerCustomizer> customizers) {_		Assert.notNull(customizers, "Customizers must not be null")__		return new TaskSchedulerBuilder(this.poolSize, this.awaitTermination,_				this.awaitTerminationPeriod, this.threadNamePrefix,_				append(null, customizers))__	};set,the,link,task,scheduler,customizer,task,scheduler,customizers,that,should,be,applied,to,the,link,thread,pool,task,scheduler,customizers,are,applied,in,the,order,that,they,were,added,after,builder,configuration,has,been,applied,setting,this,value,will,replace,any,previously,configured,customizers,param,customizers,the,customizers,to,set,return,a,new,builder,instance,see,additional,customizers,task,scheduler,customizer;public,task,scheduler,builder,customizers,iterable,task,scheduler,customizer,customizers,assert,not,null,customizers,customizers,must,not,be,null,return,new,task,scheduler,builder,this,pool,size,this,await,termination,this,await,termination,period,this,thread,name,prefix,append,null,customizers
TaskSchedulerBuilder -> public TaskSchedulerBuilder customizers( 			TaskSchedulerCustomizer... taskSchedulerCustomizers);1534424157;Set the {@link TaskSchedulerCustomizer TaskSchedulerCustomizers} that should be_applied to the {@link ThreadPoolTaskScheduler}. Customizers are applied in the_order that they were added after builder configuration has been applied. Setting_this value will replace any previously configured customizers._@param taskSchedulerCustomizers the customizers to set_@return a new builder instance_@see #additionalCustomizers(TaskSchedulerCustomizer...);public TaskSchedulerBuilder customizers(_			TaskSchedulerCustomizer... taskSchedulerCustomizers) {_		Assert.notNull(taskSchedulerCustomizers,_				"TaskSchedulerCustomizers must not be null")__		return customizers(Arrays.asList(taskSchedulerCustomizers))__	};set,the,link,task,scheduler,customizer,task,scheduler,customizers,that,should,be,applied,to,the,link,thread,pool,task,scheduler,customizers,are,applied,in,the,order,that,they,were,added,after,builder,configuration,has,been,applied,setting,this,value,will,replace,any,previously,configured,customizers,param,task,scheduler,customizers,the,customizers,to,set,return,a,new,builder,instance,see,additional,customizers,task,scheduler,customizer;public,task,scheduler,builder,customizers,task,scheduler,customizer,task,scheduler,customizers,assert,not,null,task,scheduler,customizers,task,scheduler,customizers,must,not,be,null,return,customizers,arrays,as,list,task,scheduler,customizers
TaskSchedulerBuilder -> public TaskSchedulerBuilder customizers( 			TaskSchedulerCustomizer... taskSchedulerCustomizers);1534945262;Set the {@link TaskSchedulerCustomizer TaskSchedulerCustomizers} that should be_applied to the {@link ThreadPoolTaskScheduler}. Customizers are applied in the_order that they were added after builder configuration has been applied. Setting_this value will replace any previously configured customizers._@param taskSchedulerCustomizers the customizers to set_@return a new builder instance_@see #additionalCustomizers(TaskSchedulerCustomizer...);public TaskSchedulerBuilder customizers(_			TaskSchedulerCustomizer... taskSchedulerCustomizers) {_		Assert.notNull(taskSchedulerCustomizers,_				"TaskSchedulerCustomizers must not be null")__		return customizers(Arrays.asList(taskSchedulerCustomizers))__	};set,the,link,task,scheduler,customizer,task,scheduler,customizers,that,should,be,applied,to,the,link,thread,pool,task,scheduler,customizers,are,applied,in,the,order,that,they,were,added,after,builder,configuration,has,been,applied,setting,this,value,will,replace,any,previously,configured,customizers,param,task,scheduler,customizers,the,customizers,to,set,return,a,new,builder,instance,see,additional,customizers,task,scheduler,customizer;public,task,scheduler,builder,customizers,task,scheduler,customizer,task,scheduler,customizers,assert,not,null,task,scheduler,customizers,task,scheduler,customizers,must,not,be,null,return,customizers,arrays,as,list,task,scheduler,customizers
TaskSchedulerBuilder -> public TaskSchedulerBuilder additionalCustomizers( 			Iterable<TaskSchedulerCustomizer> customizers);1536177260;Add {@link TaskSchedulerCustomizer taskSchedulerCustomizers} that should be applied_to the {@link ThreadPoolTaskScheduler}. Customizers are applied in the order that_they were added after builder configuration has been applied._@param customizers the customizers to add_@return a new builder instance_@see #customizers(TaskSchedulerCustomizer...);public TaskSchedulerBuilder additionalCustomizers(_			Iterable<TaskSchedulerCustomizer> customizers) {_		Assert.notNull(customizers, "Customizers must not be null")__		return new TaskSchedulerBuilder(this.poolSize, this.threadNamePrefix,_				append(this.customizers, customizers))__	};add,link,task,scheduler,customizer,task,scheduler,customizers,that,should,be,applied,to,the,link,thread,pool,task,scheduler,customizers,are,applied,in,the,order,that,they,were,added,after,builder,configuration,has,been,applied,param,customizers,the,customizers,to,add,return,a,new,builder,instance,see,customizers,task,scheduler,customizer;public,task,scheduler,builder,additional,customizers,iterable,task,scheduler,customizer,customizers,assert,not,null,customizers,customizers,must,not,be,null,return,new,task,scheduler,builder,this,pool,size,this,thread,name,prefix,append,this,customizers,customizers
TaskSchedulerBuilder -> public TaskSchedulerBuilder additionalCustomizers( 			Iterable<TaskSchedulerCustomizer> customizers);1550520845;Add {@link TaskSchedulerCustomizer taskSchedulerCustomizers} that should be applied_to the {@link ThreadPoolTaskScheduler}. Customizers are applied in the order that_they were added after builder configuration has been applied._@param customizers the customizers to add_@return a new builder instance_@see #customizers(TaskSchedulerCustomizer...);public TaskSchedulerBuilder additionalCustomizers(_			Iterable<TaskSchedulerCustomizer> customizers) {_		Assert.notNull(customizers, "Customizers must not be null")__		return new TaskSchedulerBuilder(this.poolSize, this.awaitTermination,_				this.awaitTerminationPeriod, this.threadNamePrefix,_				append(this.customizers, customizers))__	};add,link,task,scheduler,customizer,task,scheduler,customizers,that,should,be,applied,to,the,link,thread,pool,task,scheduler,customizers,are,applied,in,the,order,that,they,were,added,after,builder,configuration,has,been,applied,param,customizers,the,customizers,to,add,return,a,new,builder,instance,see,customizers,task,scheduler,customizer;public,task,scheduler,builder,additional,customizers,iterable,task,scheduler,customizer,customizers,assert,not,null,customizers,customizers,must,not,be,null,return,new,task,scheduler,builder,this,pool,size,this,await,termination,this,await,termination,period,this,thread,name,prefix,append,this,customizers,customizers
TaskSchedulerBuilder -> public ThreadPoolTaskScheduler build();1534424157;Build a new {@link ThreadPoolTaskScheduler} instance and configure it using this_builder._@return a configured {@link ThreadPoolTaskScheduler} instance._@see #configure(ThreadPoolTaskScheduler);public ThreadPoolTaskScheduler build() {_		return configure(new ThreadPoolTaskScheduler())__	};build,a,new,link,thread,pool,task,scheduler,instance,and,configure,it,using,this,builder,return,a,configured,link,thread,pool,task,scheduler,instance,see,configure,thread,pool,task,scheduler;public,thread,pool,task,scheduler,build,return,configure,new,thread,pool,task,scheduler
TaskSchedulerBuilder -> public ThreadPoolTaskScheduler build();1534945262;Build a new {@link ThreadPoolTaskScheduler} instance and configure it using this_builder._@return a configured {@link ThreadPoolTaskScheduler} instance._@see #configure(ThreadPoolTaskScheduler);public ThreadPoolTaskScheduler build() {_		return configure(new ThreadPoolTaskScheduler())__	};build,a,new,link,thread,pool,task,scheduler,instance,and,configure,it,using,this,builder,return,a,configured,link,thread,pool,task,scheduler,instance,see,configure,thread,pool,task,scheduler;public,thread,pool,task,scheduler,build,return,configure,new,thread,pool,task,scheduler
TaskSchedulerBuilder -> public ThreadPoolTaskScheduler build();1536177260;Build a new {@link ThreadPoolTaskScheduler} instance and configure it using this_builder._@return a configured {@link ThreadPoolTaskScheduler} instance._@see #configure(ThreadPoolTaskScheduler);public ThreadPoolTaskScheduler build() {_		return configure(new ThreadPoolTaskScheduler())__	};build,a,new,link,thread,pool,task,scheduler,instance,and,configure,it,using,this,builder,return,a,configured,link,thread,pool,task,scheduler,instance,see,configure,thread,pool,task,scheduler;public,thread,pool,task,scheduler,build,return,configure,new,thread,pool,task,scheduler
TaskSchedulerBuilder -> public ThreadPoolTaskScheduler build();1550520845;Build a new {@link ThreadPoolTaskScheduler} instance and configure it using this_builder._@return a configured {@link ThreadPoolTaskScheduler} instance._@see #configure(ThreadPoolTaskScheduler);public ThreadPoolTaskScheduler build() {_		return configure(new ThreadPoolTaskScheduler())__	};build,a,new,link,thread,pool,task,scheduler,instance,and,configure,it,using,this,builder,return,a,configured,link,thread,pool,task,scheduler,instance,see,configure,thread,pool,task,scheduler;public,thread,pool,task,scheduler,build,return,configure,new,thread,pool,task,scheduler
TaskSchedulerBuilder -> public TaskSchedulerBuilder threadNamePrefix(String threadNamePrefix);1534424157;Set the prefix to use for the names of newly created threads._@param threadNamePrefix the thread name prefix to set_@return a new builder instance;public TaskSchedulerBuilder threadNamePrefix(String threadNamePrefix) {_		return new TaskSchedulerBuilder(this.poolSize, threadNamePrefix,_				this.taskSchedulerCustomizers)__	};set,the,prefix,to,use,for,the,names,of,newly,created,threads,param,thread,name,prefix,the,thread,name,prefix,to,set,return,a,new,builder,instance;public,task,scheduler,builder,thread,name,prefix,string,thread,name,prefix,return,new,task,scheduler,builder,this,pool,size,thread,name,prefix,this,task,scheduler,customizers
TaskSchedulerBuilder -> public TaskSchedulerBuilder threadNamePrefix(String threadNamePrefix);1534945262;Set the prefix to use for the names of newly created threads._@param threadNamePrefix the thread name prefix to set_@return a new builder instance;public TaskSchedulerBuilder threadNamePrefix(String threadNamePrefix) {_		return new TaskSchedulerBuilder(this.poolSize, threadNamePrefix,_				this.taskSchedulerCustomizers)__	};set,the,prefix,to,use,for,the,names,of,newly,created,threads,param,thread,name,prefix,the,thread,name,prefix,to,set,return,a,new,builder,instance;public,task,scheduler,builder,thread,name,prefix,string,thread,name,prefix,return,new,task,scheduler,builder,this,pool,size,thread,name,prefix,this,task,scheduler,customizers
TaskSchedulerBuilder -> public TaskSchedulerBuilder threadNamePrefix(String threadNamePrefix);1536177260;Set the prefix to use for the names of newly created threads._@param threadNamePrefix the thread name prefix to set_@return a new builder instance;public TaskSchedulerBuilder threadNamePrefix(String threadNamePrefix) {_		return new TaskSchedulerBuilder(this.poolSize, threadNamePrefix,_				this.customizers)__	};set,the,prefix,to,use,for,the,names,of,newly,created,threads,param,thread,name,prefix,the,thread,name,prefix,to,set,return,a,new,builder,instance;public,task,scheduler,builder,thread,name,prefix,string,thread,name,prefix,return,new,task,scheduler,builder,this,pool,size,thread,name,prefix,this,customizers
TaskSchedulerBuilder -> public TaskSchedulerBuilder threadNamePrefix(String threadNamePrefix);1550520845;Set the prefix to use for the names of newly created threads._@param threadNamePrefix the thread name prefix to set_@return a new builder instance;public TaskSchedulerBuilder threadNamePrefix(String threadNamePrefix) {_		return new TaskSchedulerBuilder(this.poolSize, this.awaitTermination,_				this.awaitTerminationPeriod, threadNamePrefix, this.customizers)__	};set,the,prefix,to,use,for,the,names,of,newly,created,threads,param,thread,name,prefix,the,thread,name,prefix,to,set,return,a,new,builder,instance;public,task,scheduler,builder,thread,name,prefix,string,thread,name,prefix,return,new,task,scheduler,builder,this,pool,size,this,await,termination,this,await,termination,period,thread,name,prefix,this,customizers
TaskSchedulerBuilder -> public <T extends ThreadPoolTaskScheduler> T configure(T taskScheduler);1534424157;Configure the provided {@link ThreadPoolTaskScheduler} instance using this builder._@param <T> the type of task scheduler_@param taskScheduler the {@link ThreadPoolTaskScheduler} to configure_@return the task scheduler instance_@see #build();public <T extends ThreadPoolTaskScheduler> T configure(T taskScheduler) {_		PropertyMapper map = PropertyMapper.get().alwaysApplyingWhenNonNull()__		map.from(() -> this.poolSize).to(taskScheduler::setPoolSize)__		map.from(() -> this.threadNamePrefix).to(taskScheduler::setThreadNamePrefix)___		if (!CollectionUtils.isEmpty(this.taskSchedulerCustomizers)) {_			for (TaskSchedulerCustomizer customizer : this.taskSchedulerCustomizers) {_				customizer.customize(taskScheduler)__			}_		}_		return taskScheduler__	};configure,the,provided,link,thread,pool,task,scheduler,instance,using,this,builder,param,t,the,type,of,task,scheduler,param,task,scheduler,the,link,thread,pool,task,scheduler,to,configure,return,the,task,scheduler,instance,see,build;public,t,extends,thread,pool,task,scheduler,t,configure,t,task,scheduler,property,mapper,map,property,mapper,get,always,applying,when,non,null,map,from,this,pool,size,to,task,scheduler,set,pool,size,map,from,this,thread,name,prefix,to,task,scheduler,set,thread,name,prefix,if,collection,utils,is,empty,this,task,scheduler,customizers,for,task,scheduler,customizer,customizer,this,task,scheduler,customizers,customizer,customize,task,scheduler,return,task,scheduler
TaskSchedulerBuilder -> public <T extends ThreadPoolTaskScheduler> T configure(T taskScheduler);1534945262;Configure the provided {@link ThreadPoolTaskScheduler} instance using this builder._@param <T> the type of task scheduler_@param taskScheduler the {@link ThreadPoolTaskScheduler} to configure_@return the task scheduler instance_@see #build();public <T extends ThreadPoolTaskScheduler> T configure(T taskScheduler) {_		PropertyMapper map = PropertyMapper.get().alwaysApplyingWhenNonNull()__		map.from(this.poolSize).to(taskScheduler::setPoolSize)__		map.from(this.threadNamePrefix).to(taskScheduler::setThreadNamePrefix)___		if (!CollectionUtils.isEmpty(this.taskSchedulerCustomizers)) {_			for (TaskSchedulerCustomizer customizer : this.taskSchedulerCustomizers) {_				customizer.customize(taskScheduler)__			}_		}_		return taskScheduler__	};configure,the,provided,link,thread,pool,task,scheduler,instance,using,this,builder,param,t,the,type,of,task,scheduler,param,task,scheduler,the,link,thread,pool,task,scheduler,to,configure,return,the,task,scheduler,instance,see,build;public,t,extends,thread,pool,task,scheduler,t,configure,t,task,scheduler,property,mapper,map,property,mapper,get,always,applying,when,non,null,map,from,this,pool,size,to,task,scheduler,set,pool,size,map,from,this,thread,name,prefix,to,task,scheduler,set,thread,name,prefix,if,collection,utils,is,empty,this,task,scheduler,customizers,for,task,scheduler,customizer,customizer,this,task,scheduler,customizers,customizer,customize,task,scheduler,return,task,scheduler
TaskSchedulerBuilder -> public <T extends ThreadPoolTaskScheduler> T configure(T taskScheduler);1536177260;Configure the provided {@link ThreadPoolTaskScheduler} instance using this builder._@param <T> the type of task scheduler_@param taskScheduler the {@link ThreadPoolTaskScheduler} to configure_@return the task scheduler instance_@see #build();public <T extends ThreadPoolTaskScheduler> T configure(T taskScheduler) {_		PropertyMapper map = PropertyMapper.get().alwaysApplyingWhenNonNull()__		map.from(this.poolSize).to(taskScheduler::setPoolSize)__		map.from(this.threadNamePrefix).to(taskScheduler::setThreadNamePrefix)__		if (!CollectionUtils.isEmpty(this.customizers)) {_			this.customizers.forEach((customizer) -> customizer.customize(taskScheduler))__		}_		return taskScheduler__	};configure,the,provided,link,thread,pool,task,scheduler,instance,using,this,builder,param,t,the,type,of,task,scheduler,param,task,scheduler,the,link,thread,pool,task,scheduler,to,configure,return,the,task,scheduler,instance,see,build;public,t,extends,thread,pool,task,scheduler,t,configure,t,task,scheduler,property,mapper,map,property,mapper,get,always,applying,when,non,null,map,from,this,pool,size,to,task,scheduler,set,pool,size,map,from,this,thread,name,prefix,to,task,scheduler,set,thread,name,prefix,if,collection,utils,is,empty,this,customizers,this,customizers,for,each,customizer,customizer,customize,task,scheduler,return,task,scheduler
TaskSchedulerBuilder -> public <T extends ThreadPoolTaskScheduler> T configure(T taskScheduler);1550520845;Configure the provided {@link ThreadPoolTaskScheduler} instance using this builder._@param <T> the type of task scheduler_@param taskScheduler the {@link ThreadPoolTaskScheduler} to configure_@return the task scheduler instance_@see #build();public <T extends ThreadPoolTaskScheduler> T configure(T taskScheduler) {_		PropertyMapper map = PropertyMapper.get().alwaysApplyingWhenNonNull()__		map.from(this.poolSize).to(taskScheduler::setPoolSize)__		map.from(this.awaitTermination)_				.to(taskScheduler::setWaitForTasksToCompleteOnShutdown)__		map.from(this.awaitTerminationPeriod).asInt(Duration::getSeconds)_				.to(taskScheduler::setAwaitTerminationSeconds)__		map.from(this.threadNamePrefix).to(taskScheduler::setThreadNamePrefix)__		if (!CollectionUtils.isEmpty(this.customizers)) {_			this.customizers.forEach((customizer) -> customizer.customize(taskScheduler))__		}_		return taskScheduler__	};configure,the,provided,link,thread,pool,task,scheduler,instance,using,this,builder,param,t,the,type,of,task,scheduler,param,task,scheduler,the,link,thread,pool,task,scheduler,to,configure,return,the,task,scheduler,instance,see,build;public,t,extends,thread,pool,task,scheduler,t,configure,t,task,scheduler,property,mapper,map,property,mapper,get,always,applying,when,non,null,map,from,this,pool,size,to,task,scheduler,set,pool,size,map,from,this,await,termination,to,task,scheduler,set,wait,for,tasks,to,complete,on,shutdown,map,from,this,await,termination,period,as,int,duration,get,seconds,to,task,scheduler,set,await,termination,seconds,map,from,this,thread,name,prefix,to,task,scheduler,set,thread,name,prefix,if,collection,utils,is,empty,this,customizers,this,customizers,for,each,customizer,customizer,customize,task,scheduler,return,task,scheduler
TaskSchedulerBuilder -> public TaskSchedulerBuilder additionalCustomizers( 			TaskSchedulerCustomizer... taskSchedulerCustomizers);1534424157;Add {@link TaskSchedulerCustomizer taskSchedulerCustomizers} that should be applied_to the {@link ThreadPoolTaskScheduler}. Customizers are applied in the order that_they were added after builder configuration has been applied._@param taskSchedulerCustomizers the customizers to add_@return a new builder instance_@see #customizers(TaskSchedulerCustomizer...);public TaskSchedulerBuilder additionalCustomizers(_			TaskSchedulerCustomizer... taskSchedulerCustomizers) {_		Assert.notNull(taskSchedulerCustomizers,_				"TaskSchedulerCustomizers must not be null")__		return additionalCustomizers(Arrays.asList(taskSchedulerCustomizers))__	};add,link,task,scheduler,customizer,task,scheduler,customizers,that,should,be,applied,to,the,link,thread,pool,task,scheduler,customizers,are,applied,in,the,order,that,they,were,added,after,builder,configuration,has,been,applied,param,task,scheduler,customizers,the,customizers,to,add,return,a,new,builder,instance,see,customizers,task,scheduler,customizer;public,task,scheduler,builder,additional,customizers,task,scheduler,customizer,task,scheduler,customizers,assert,not,null,task,scheduler,customizers,task,scheduler,customizers,must,not,be,null,return,additional,customizers,arrays,as,list,task,scheduler,customizers
TaskSchedulerBuilder -> public TaskSchedulerBuilder additionalCustomizers( 			TaskSchedulerCustomizer... taskSchedulerCustomizers);1534945262;Add {@link TaskSchedulerCustomizer taskSchedulerCustomizers} that should be applied_to the {@link ThreadPoolTaskScheduler}. Customizers are applied in the order that_they were added after builder configuration has been applied._@param taskSchedulerCustomizers the customizers to add_@return a new builder instance_@see #customizers(TaskSchedulerCustomizer...);public TaskSchedulerBuilder additionalCustomizers(_			TaskSchedulerCustomizer... taskSchedulerCustomizers) {_		Assert.notNull(taskSchedulerCustomizers,_				"TaskSchedulerCustomizers must not be null")__		return additionalCustomizers(Arrays.asList(taskSchedulerCustomizers))__	};add,link,task,scheduler,customizer,task,scheduler,customizers,that,should,be,applied,to,the,link,thread,pool,task,scheduler,customizers,are,applied,in,the,order,that,they,were,added,after,builder,configuration,has,been,applied,param,task,scheduler,customizers,the,customizers,to,add,return,a,new,builder,instance,see,customizers,task,scheduler,customizer;public,task,scheduler,builder,additional,customizers,task,scheduler,customizer,task,scheduler,customizers,assert,not,null,task,scheduler,customizers,task,scheduler,customizers,must,not,be,null,return,additional,customizers,arrays,as,list,task,scheduler,customizers
TaskSchedulerBuilder -> public TaskSchedulerBuilder additionalCustomizers( 			TaskSchedulerCustomizer... customizers);1536177260;Add {@link TaskSchedulerCustomizer taskSchedulerCustomizers} that should be applied_to the {@link ThreadPoolTaskScheduler}. Customizers are applied in the order that_they were added after builder configuration has been applied._@param customizers the customizers to add_@return a new builder instance_@see #customizers(TaskSchedulerCustomizer...);public TaskSchedulerBuilder additionalCustomizers(_			TaskSchedulerCustomizer... customizers) {_		Assert.notNull(customizers, "Customizers must not be null")__		return additionalCustomizers(Arrays.asList(customizers))__	};add,link,task,scheduler,customizer,task,scheduler,customizers,that,should,be,applied,to,the,link,thread,pool,task,scheduler,customizers,are,applied,in,the,order,that,they,were,added,after,builder,configuration,has,been,applied,param,customizers,the,customizers,to,add,return,a,new,builder,instance,see,customizers,task,scheduler,customizer;public,task,scheduler,builder,additional,customizers,task,scheduler,customizer,customizers,assert,not,null,customizers,customizers,must,not,be,null,return,additional,customizers,arrays,as,list,customizers
TaskSchedulerBuilder -> public TaskSchedulerBuilder additionalCustomizers( 			TaskSchedulerCustomizer... customizers);1550520845;Add {@link TaskSchedulerCustomizer taskSchedulerCustomizers} that should be applied_to the {@link ThreadPoolTaskScheduler}. Customizers are applied in the order that_they were added after builder configuration has been applied._@param customizers the customizers to add_@return a new builder instance_@see #customizers(TaskSchedulerCustomizer...);public TaskSchedulerBuilder additionalCustomizers(_			TaskSchedulerCustomizer... customizers) {_		Assert.notNull(customizers, "Customizers must not be null")__		return additionalCustomizers(Arrays.asList(customizers))__	};add,link,task,scheduler,customizer,task,scheduler,customizers,that,should,be,applied,to,the,link,thread,pool,task,scheduler,customizers,are,applied,in,the,order,that,they,were,added,after,builder,configuration,has,been,applied,param,customizers,the,customizers,to,add,return,a,new,builder,instance,see,customizers,task,scheduler,customizer;public,task,scheduler,builder,additional,customizers,task,scheduler,customizer,customizers,assert,not,null,customizers,customizers,must,not,be,null,return,additional,customizers,arrays,as,list,customizers
TaskSchedulerBuilder -> public TaskSchedulerBuilder poolSize(int poolSize);1534424157;Set the maximum allowed number of threads._@param poolSize the pool size to set_@return a new builder instance;public TaskSchedulerBuilder poolSize(int poolSize) {_		return new TaskSchedulerBuilder(poolSize, this.threadNamePrefix,_				this.taskSchedulerCustomizers)__	};set,the,maximum,allowed,number,of,threads,param,pool,size,the,pool,size,to,set,return,a,new,builder,instance;public,task,scheduler,builder,pool,size,int,pool,size,return,new,task,scheduler,builder,pool,size,this,thread,name,prefix,this,task,scheduler,customizers
TaskSchedulerBuilder -> public TaskSchedulerBuilder poolSize(int poolSize);1534945262;Set the maximum allowed number of threads._@param poolSize the pool size to set_@return a new builder instance;public TaskSchedulerBuilder poolSize(int poolSize) {_		return new TaskSchedulerBuilder(poolSize, this.threadNamePrefix,_				this.taskSchedulerCustomizers)__	};set,the,maximum,allowed,number,of,threads,param,pool,size,the,pool,size,to,set,return,a,new,builder,instance;public,task,scheduler,builder,pool,size,int,pool,size,return,new,task,scheduler,builder,pool,size,this,thread,name,prefix,this,task,scheduler,customizers
TaskSchedulerBuilder -> public TaskSchedulerBuilder poolSize(int poolSize);1536177260;Set the maximum allowed number of threads._@param poolSize the pool size to set_@return a new builder instance;public TaskSchedulerBuilder poolSize(int poolSize) {_		return new TaskSchedulerBuilder(poolSize, this.threadNamePrefix,_				this.customizers)__	};set,the,maximum,allowed,number,of,threads,param,pool,size,the,pool,size,to,set,return,a,new,builder,instance;public,task,scheduler,builder,pool,size,int,pool,size,return,new,task,scheduler,builder,pool,size,this,thread,name,prefix,this,customizers
TaskSchedulerBuilder -> public TaskSchedulerBuilder poolSize(int poolSize);1550520845;Set the maximum allowed number of threads._@param poolSize the pool size to set_@return a new builder instance;public TaskSchedulerBuilder poolSize(int poolSize) {_		return new TaskSchedulerBuilder(poolSize, this.awaitTermination,_				this.awaitTerminationPeriod, this.threadNamePrefix, this.customizers)__	};set,the,maximum,allowed,number,of,threads,param,pool,size,the,pool,size,to,set,return,a,new,builder,instance;public,task,scheduler,builder,pool,size,int,pool,size,return,new,task,scheduler,builder,pool,size,this,await,termination,this,await,termination,period,this,thread,name,prefix,this,customizers
TaskSchedulerBuilder -> public TaskSchedulerBuilder customizers( 			Collection<? extends TaskSchedulerCustomizer> taskSchedulerCustomizers);1534424157;Set the {@link TaskSchedulerCustomizer taskSchedulerCustomizers} that should be_applied to the {@link ThreadPoolTaskScheduler}. Customizers are applied in the_order that they were added after builder configuration has been applied. Setting_this value will replace any previously configured customizers._@param taskSchedulerCustomizers the customizers to set_@return a new builder instance_@see #additionalCustomizers(TaskSchedulerCustomizer...);public TaskSchedulerBuilder customizers(_			Collection<? extends TaskSchedulerCustomizer> taskSchedulerCustomizers) {_		Assert.notNull(taskSchedulerCustomizers,_				"TaskSchedulerCustomizers must not be null")__		return new TaskSchedulerBuilder(this.poolSize, this.threadNamePrefix,_				Collections.unmodifiableSet(new LinkedHashSet<TaskSchedulerCustomizer>(_						taskSchedulerCustomizers)))__	};set,the,link,task,scheduler,customizer,task,scheduler,customizers,that,should,be,applied,to,the,link,thread,pool,task,scheduler,customizers,are,applied,in,the,order,that,they,were,added,after,builder,configuration,has,been,applied,setting,this,value,will,replace,any,previously,configured,customizers,param,task,scheduler,customizers,the,customizers,to,set,return,a,new,builder,instance,see,additional,customizers,task,scheduler,customizer;public,task,scheduler,builder,customizers,collection,extends,task,scheduler,customizer,task,scheduler,customizers,assert,not,null,task,scheduler,customizers,task,scheduler,customizers,must,not,be,null,return,new,task,scheduler,builder,this,pool,size,this,thread,name,prefix,collections,unmodifiable,set,new,linked,hash,set,task,scheduler,customizer,task,scheduler,customizers
TaskSchedulerBuilder -> public TaskSchedulerBuilder customizers( 			Collection<? extends TaskSchedulerCustomizer> taskSchedulerCustomizers);1534945262;Set the {@link TaskSchedulerCustomizer taskSchedulerCustomizers} that should be_applied to the {@link ThreadPoolTaskScheduler}. Customizers are applied in the_order that they were added after builder configuration has been applied. Setting_this value will replace any previously configured customizers._@param taskSchedulerCustomizers the customizers to set_@return a new builder instance_@see #additionalCustomizers(TaskSchedulerCustomizer...);public TaskSchedulerBuilder customizers(_			Collection<? extends TaskSchedulerCustomizer> taskSchedulerCustomizers) {_		Assert.notNull(taskSchedulerCustomizers,_				"TaskSchedulerCustomizers must not be null")__		return new TaskSchedulerBuilder(this.poolSize, this.threadNamePrefix,_				Collections.unmodifiableSet(new LinkedHashSet<TaskSchedulerCustomizer>(_						taskSchedulerCustomizers)))__	};set,the,link,task,scheduler,customizer,task,scheduler,customizers,that,should,be,applied,to,the,link,thread,pool,task,scheduler,customizers,are,applied,in,the,order,that,they,were,added,after,builder,configuration,has,been,applied,setting,this,value,will,replace,any,previously,configured,customizers,param,task,scheduler,customizers,the,customizers,to,set,return,a,new,builder,instance,see,additional,customizers,task,scheduler,customizer;public,task,scheduler,builder,customizers,collection,extends,task,scheduler,customizer,task,scheduler,customizers,assert,not,null,task,scheduler,customizers,task,scheduler,customizers,must,not,be,null,return,new,task,scheduler,builder,this,pool,size,this,thread,name,prefix,collections,unmodifiable,set,new,linked,hash,set,task,scheduler,customizer,task,scheduler,customizers
TaskSchedulerBuilder -> public TaskSchedulerBuilder additionalCustomizers( 			Collection<? extends TaskSchedulerCustomizer> taskSchedulerCustomizers);1534424157;Add {@link TaskSchedulerCustomizer taskSchedulerCustomizers} that should be applied_to the {@link ThreadPoolTaskScheduler}. Customizers are applied in the order that_they were added after builder configuration has been applied._@param taskSchedulerCustomizers the customizers to add_@return a new builder instance_@see #customizers(TaskSchedulerCustomizer...);public TaskSchedulerBuilder additionalCustomizers(_			Collection<? extends TaskSchedulerCustomizer> taskSchedulerCustomizers) {_		Assert.notNull(taskSchedulerCustomizers,_				"TaskSchedulerCustomizers must not be null")__		return new TaskSchedulerBuilder(this.poolSize, this.threadNamePrefix,_				append(this.taskSchedulerCustomizers, taskSchedulerCustomizers))__	};add,link,task,scheduler,customizer,task,scheduler,customizers,that,should,be,applied,to,the,link,thread,pool,task,scheduler,customizers,are,applied,in,the,order,that,they,were,added,after,builder,configuration,has,been,applied,param,task,scheduler,customizers,the,customizers,to,add,return,a,new,builder,instance,see,customizers,task,scheduler,customizer;public,task,scheduler,builder,additional,customizers,collection,extends,task,scheduler,customizer,task,scheduler,customizers,assert,not,null,task,scheduler,customizers,task,scheduler,customizers,must,not,be,null,return,new,task,scheduler,builder,this,pool,size,this,thread,name,prefix,append,this,task,scheduler,customizers,task,scheduler,customizers
TaskSchedulerBuilder -> public TaskSchedulerBuilder additionalCustomizers( 			Collection<? extends TaskSchedulerCustomizer> taskSchedulerCustomizers);1534945262;Add {@link TaskSchedulerCustomizer taskSchedulerCustomizers} that should be applied_to the {@link ThreadPoolTaskScheduler}. Customizers are applied in the order that_they were added after builder configuration has been applied._@param taskSchedulerCustomizers the customizers to add_@return a new builder instance_@see #customizers(TaskSchedulerCustomizer...);public TaskSchedulerBuilder additionalCustomizers(_			Collection<? extends TaskSchedulerCustomizer> taskSchedulerCustomizers) {_		Assert.notNull(taskSchedulerCustomizers,_				"TaskSchedulerCustomizers must not be null")__		return new TaskSchedulerBuilder(this.poolSize, this.threadNamePrefix,_				append(this.taskSchedulerCustomizers, taskSchedulerCustomizers))__	};add,link,task,scheduler,customizer,task,scheduler,customizers,that,should,be,applied,to,the,link,thread,pool,task,scheduler,customizers,are,applied,in,the,order,that,they,were,added,after,builder,configuration,has,been,applied,param,task,scheduler,customizers,the,customizers,to,add,return,a,new,builder,instance,see,customizers,task,scheduler,customizer;public,task,scheduler,builder,additional,customizers,collection,extends,task,scheduler,customizer,task,scheduler,customizers,assert,not,null,task,scheduler,customizers,task,scheduler,customizers,must,not,be,null,return,new,task,scheduler,builder,this,pool,size,this,thread,name,prefix,append,this,task,scheduler,customizers,task,scheduler,customizers
