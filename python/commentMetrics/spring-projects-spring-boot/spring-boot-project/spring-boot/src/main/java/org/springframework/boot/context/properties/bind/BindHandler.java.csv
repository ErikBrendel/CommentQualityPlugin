commented;modifiers;parameterAmount;loc;comment;code
true;default;3;4;/**  * Called when binding of an element starts but before any result has been determined.  * @param <T> the bindable source type  * @param name the name of the element being bound  * @param target the item being bound  * @param context the bind context  * @return the actual item that should be used for binding (may be {@code null})  */ ;/**  * Called when binding of an element starts but before any result has been determined.  * @param <T> the bindable source type  * @param name the name of the element being bound  * @param target the item being bound  * @param context the bind context  * @return the actual item that should be used for binding (may be {@code null})  */ default <T> Bindable<T> onStart(ConfigurationPropertyName name, Bindable<T> target, BindContext context) {     return target. }
true;default;4;4;/**  * Called when binding of an element ends with a successful result. Implementations  * may change the ultimately returned result or perform addition validation.  * @param name the name of the element being bound  * @param target the item being bound  * @param context the bind context  * @param result the bound result (never {@code null})  * @return the actual result that should be used (may be {@code null})  */ ;/**  * Called when binding of an element ends with a successful result. Implementations  * may change the ultimately returned result or perform addition validation.  * @param name the name of the element being bound  * @param target the item being bound  * @param context the bind context  * @param result the bound result (never {@code null})  * @return the actual result that should be used (may be {@code null})  */ default Object onSuccess(ConfigurationPropertyName name, Bindable<?> target, BindContext context, Object result) {     return result. }
true;default;4;4;/**  * Called when binding fails for any reason (including failures from  * {@link #onSuccess} calls). Implementations may choose to swallow exceptions and  * return an alternative result.  * @param name the name of the element being bound  * @param target the item being bound  * @param context the bind context  * @param error the cause of the error (if the exception stands it may be re-thrown)  * @return the actual result that should be used (may be {@code null}).  * @throws Exception if the binding isn't valid  */ ;/**  * Called when binding fails for any reason (including failures from  * {@link #onSuccess} calls). Implementations may choose to swallow exceptions and  * return an alternative result.  * @param name the name of the element being bound  * @param target the item being bound  * @param context the bind context  * @param error the cause of the error (if the exception stands it may be re-thrown)  * @return the actual result that should be used (may be {@code null}).  * @throws Exception if the binding isn't valid  */ default Object onFailure(ConfigurationPropertyName name, Bindable<?> target, BindContext context, Exception error) throws Exception {     throw error. }
true;default;4;3;/**  * Called when binding finishes, regardless of whether the property was bound or not.  * @param name the name of the element being bound  * @param target the item being bound  * @param context the bind context  * @param result the bound result (may be {@code null})  * @throws Exception if the binding isn't valid  */ ;/**  * Called when binding finishes, regardless of whether the property was bound or not.  * @param name the name of the element being bound  * @param target the item being bound  * @param context the bind context  * @param result the bound result (may be {@code null})  * @throws Exception if the binding isn't valid  */ default void onFinish(ConfigurationPropertyName name, Bindable<?> target, BindContext context, Object result) throws Exception { }
