# id;timestamp;commentText;codeText;commentWords;codeWords
BindHandler -> default Object onFailure(ConfigurationPropertyName name, Bindable<?> target, 			BindContext context, Exception error) throws Exception;1507173536;Called when binding fails for any reason (including failures from_{@link #onSuccess} calls). Implementations may choose to swallow exceptions and_return an alternative result._@param name the name of the element being bound_@param target the item being bound_@param context the bind context_@param error the cause of the error (if the exception stands it may be re-thrown)_@return the actual result that should be used (may be {@code null})._@throws Exception if the binding isn't valid;default Object onFailure(ConfigurationPropertyName name, Bindable<?> target,_			BindContext context, Exception error) throws Exception {_		throw error__	};called,when,binding,fails,for,any,reason,including,failures,from,link,on,success,calls,implementations,may,choose,to,swallow,exceptions,and,return,an,alternative,result,param,name,the,name,of,the,element,being,bound,param,target,the,item,being,bound,param,context,the,bind,context,param,error,the,cause,of,the,error,if,the,exception,stands,it,may,be,re,thrown,return,the,actual,result,that,should,be,used,may,be,code,null,throws,exception,if,the,binding,isn,t,valid;default,object,on,failure,configuration,property,name,name,bindable,target,bind,context,context,exception,error,throws,exception,throw,error
BindHandler -> default Object onFailure(ConfigurationPropertyName name, Bindable<?> target, 			BindContext context, Exception error) throws Exception;1539200411;Called when binding fails for any reason (including failures from_{@link #onSuccess} calls). Implementations may choose to swallow exceptions and_return an alternative result._@param name the name of the element being bound_@param target the item being bound_@param context the bind context_@param error the cause of the error (if the exception stands it may be re-thrown)_@return the actual result that should be used (may be {@code null})._@throws Exception if the binding isn't valid;default Object onFailure(ConfigurationPropertyName name, Bindable<?> target,_			BindContext context, Exception error) throws Exception {_		throw error__	};called,when,binding,fails,for,any,reason,including,failures,from,link,on,success,calls,implementations,may,choose,to,swallow,exceptions,and,return,an,alternative,result,param,name,the,name,of,the,element,being,bound,param,target,the,item,being,bound,param,context,the,bind,context,param,error,the,cause,of,the,error,if,the,exception,stands,it,may,be,re,thrown,return,the,actual,result,that,should,be,used,may,be,code,null,throws,exception,if,the,binding,isn,t,valid;default,object,on,failure,configuration,property,name,name,bindable,target,bind,context,context,exception,error,throws,exception,throw,error
BindHandler -> default Object onFailure(ConfigurationPropertyName name, Bindable<?> target, 			BindContext context, Exception error) throws Exception;1539393276;Called when binding fails for any reason (including failures from_{@link #onSuccess} calls). Implementations may choose to swallow exceptions and_return an alternative result._@param name the name of the element being bound_@param target the item being bound_@param context the bind context_@param error the cause of the error (if the exception stands it may be re-thrown)_@return the actual result that should be used (may be {@code null})._@throws Exception if the binding isn't valid;default Object onFailure(ConfigurationPropertyName name, Bindable<?> target,_			BindContext context, Exception error) throws Exception {_		throw error__	};called,when,binding,fails,for,any,reason,including,failures,from,link,on,success,calls,implementations,may,choose,to,swallow,exceptions,and,return,an,alternative,result,param,name,the,name,of,the,element,being,bound,param,target,the,item,being,bound,param,context,the,bind,context,param,error,the,cause,of,the,error,if,the,exception,stands,it,may,be,re,thrown,return,the,actual,result,that,should,be,used,may,be,code,null,throws,exception,if,the,binding,isn,t,valid;default,object,on,failure,configuration,property,name,name,bindable,target,bind,context,context,exception,error,throws,exception,throw,error
BindHandler -> default Object onSuccess(ConfigurationPropertyName name, Bindable<?> target, 			BindContext context, Object result);1507173536;Called when binding of an element ends with a successful result. Implementations_may change the ultimately returned result or perform addition validation._@param name the name of the element being bound_@param target the item being bound_@param context the bind context_@param result the bound result (never {@code null})_@return the actual result that should be used (may be {@code null});default Object onSuccess(ConfigurationPropertyName name, Bindable<?> target,_			BindContext context, Object result) {_		return result__	};called,when,binding,of,an,element,ends,with,a,successful,result,implementations,may,change,the,ultimately,returned,result,or,perform,addition,validation,param,name,the,name,of,the,element,being,bound,param,target,the,item,being,bound,param,context,the,bind,context,param,result,the,bound,result,never,code,null,return,the,actual,result,that,should,be,used,may,be,code,null;default,object,on,success,configuration,property,name,name,bindable,target,bind,context,context,object,result,return,result
BindHandler -> default Object onSuccess(ConfigurationPropertyName name, Bindable<?> target, 			BindContext context, Object result);1539200411;Called when binding of an element ends with a successful result. Implementations_may change the ultimately returned result or perform addition validation._@param name the name of the element being bound_@param target the item being bound_@param context the bind context_@param result the bound result (never {@code null})_@return the actual result that should be used (may be {@code null});default Object onSuccess(ConfigurationPropertyName name, Bindable<?> target,_			BindContext context, Object result) {_		return result__	};called,when,binding,of,an,element,ends,with,a,successful,result,implementations,may,change,the,ultimately,returned,result,or,perform,addition,validation,param,name,the,name,of,the,element,being,bound,param,target,the,item,being,bound,param,context,the,bind,context,param,result,the,bound,result,never,code,null,return,the,actual,result,that,should,be,used,may,be,code,null;default,object,on,success,configuration,property,name,name,bindable,target,bind,context,context,object,result,return,result
BindHandler -> default Object onSuccess(ConfigurationPropertyName name, Bindable<?> target, 			BindContext context, Object result);1539393276;Called when binding of an element ends with a successful result. Implementations_may change the ultimately returned result or perform addition validation._@param name the name of the element being bound_@param target the item being bound_@param context the bind context_@param result the bound result (never {@code null})_@return the actual result that should be used (may be {@code null});default Object onSuccess(ConfigurationPropertyName name, Bindable<?> target,_			BindContext context, Object result) {_		return result__	};called,when,binding,of,an,element,ends,with,a,successful,result,implementations,may,change,the,ultimately,returned,result,or,perform,addition,validation,param,name,the,name,of,the,element,being,bound,param,target,the,item,being,bound,param,context,the,bind,context,param,result,the,bound,result,never,code,null,return,the,actual,result,that,should,be,used,may,be,code,null;default,object,on,success,configuration,property,name,name,bindable,target,bind,context,context,object,result,return,result
BindHandler -> default <T> Bindable<T> onStart(ConfigurationPropertyName name, Bindable<T> target, 			BindContext context);1539200411;Called when binding of an element starts but before any result has been determined._@param <T> the bindable source type_@param name the name of the element being bound_@param target the item being bound_@param context the bind context_@return {@code true} if binding should proceed;default <T> Bindable<T> onStart(ConfigurationPropertyName name, Bindable<T> target,_			BindContext context) {_		return target__	};called,when,binding,of,an,element,starts,but,before,any,result,has,been,determined,param,t,the,bindable,source,type,param,name,the,name,of,the,element,being,bound,param,target,the,item,being,bound,param,context,the,bind,context,return,code,true,if,binding,should,proceed;default,t,bindable,t,on,start,configuration,property,name,name,bindable,t,target,bind,context,context,return,target
BindHandler -> default <T> Bindable<T> onStart(ConfigurationPropertyName name, Bindable<T> target, 			BindContext context);1539393276;Called when binding of an element starts but before any result has been determined._@param <T> the bindable source type_@param name the name of the element being bound_@param target the item being bound_@param context the bind context_@return the actual item that should be used for binding (may be {@code null});default <T> Bindable<T> onStart(ConfigurationPropertyName name, Bindable<T> target,_			BindContext context) {_		return target__	};called,when,binding,of,an,element,starts,but,before,any,result,has,been,determined,param,t,the,bindable,source,type,param,name,the,name,of,the,element,being,bound,param,target,the,item,being,bound,param,context,the,bind,context,return,the,actual,item,that,should,be,used,for,binding,may,be,code,null;default,t,bindable,t,on,start,configuration,property,name,name,bindable,t,target,bind,context,context,return,target
BindHandler -> default void onFinish(ConfigurationPropertyName name, Bindable<?> target, 			BindContext context, Object result) throws Exception;1507173536;Called when binding finishes, regardless of whether the property was bound or not._@param name the name of the element being bound_@param target the item being bound_@param context the bind context_@param result the bound result (may be {@code null})_@throws Exception if the binding isn't valid;default void onFinish(ConfigurationPropertyName name, Bindable<?> target,_			BindContext context, Object result) throws Exception {_	};called,when,binding,finishes,regardless,of,whether,the,property,was,bound,or,not,param,name,the,name,of,the,element,being,bound,param,target,the,item,being,bound,param,context,the,bind,context,param,result,the,bound,result,may,be,code,null,throws,exception,if,the,binding,isn,t,valid;default,void,on,finish,configuration,property,name,name,bindable,target,bind,context,context,object,result,throws,exception
BindHandler -> default void onFinish(ConfigurationPropertyName name, Bindable<?> target, 			BindContext context, Object result) throws Exception;1539200411;Called when binding finishes, regardless of whether the property was bound or not._@param name the name of the element being bound_@param target the item being bound_@param context the bind context_@param result the bound result (may be {@code null})_@throws Exception if the binding isn't valid;default void onFinish(ConfigurationPropertyName name, Bindable<?> target,_			BindContext context, Object result) throws Exception {_	};called,when,binding,finishes,regardless,of,whether,the,property,was,bound,or,not,param,name,the,name,of,the,element,being,bound,param,target,the,item,being,bound,param,context,the,bind,context,param,result,the,bound,result,may,be,code,null,throws,exception,if,the,binding,isn,t,valid;default,void,on,finish,configuration,property,name,name,bindable,target,bind,context,context,object,result,throws,exception
BindHandler -> default void onFinish(ConfigurationPropertyName name, Bindable<?> target, 			BindContext context, Object result) throws Exception;1539393276;Called when binding finishes, regardless of whether the property was bound or not._@param name the name of the element being bound_@param target the item being bound_@param context the bind context_@param result the bound result (may be {@code null})_@throws Exception if the binding isn't valid;default void onFinish(ConfigurationPropertyName name, Bindable<?> target,_			BindContext context, Object result) throws Exception {_	};called,when,binding,finishes,regardless,of,whether,the,property,was,bound,or,not,param,name,the,name,of,the,element,being,bound,param,target,the,item,being,bound,param,context,the,bind,context,param,result,the,bound,result,may,be,code,null,throws,exception,if,the,binding,isn,t,valid;default,void,on,finish,configuration,property,name,name,bindable,target,bind,context,context,object,result,throws,exception
