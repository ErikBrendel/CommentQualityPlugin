# id;timestamp;commentText;codeText;commentWords;codeWords
LogFile -> public static LogFile get(PropertyResolver propertyResolver);1507173536;Get a {@link LogFile} from the given Spring {@link Environment}._@param propertyResolver the {@link PropertyResolver} used to obtain the logging_properties_@return a {@link LogFile} or {@code null} if the environment didn't contain any_suitable properties;public static LogFile get(PropertyResolver propertyResolver) {_		String file = propertyResolver.getProperty(FILE_PROPERTY)__		String path = propertyResolver.getProperty(PATH_PROPERTY)__		if (StringUtils.hasLength(file) || StringUtils.hasLength(path)) {_			return new LogFile(file, path)__		}_		return null__	};get,a,link,log,file,from,the,given,spring,link,environment,param,property,resolver,the,link,property,resolver,used,to,obtain,the,logging,properties,return,a,link,log,file,or,code,null,if,the,environment,didn,t,contain,any,suitable,properties;public,static,log,file,get,property,resolver,property,resolver,string,file,property,resolver,get,property,string,path,property,resolver,get,property,if,string,utils,has,length,file,string,utils,has,length,path,return,new,log,file,file,path,return,null
LogFile -> public static LogFile get(PropertyResolver propertyResolver);1550737183;Get a {@link LogFile} from the given Spring {@link Environment}._@param propertyResolver the {@link PropertyResolver} used to obtain the logging_properties_@return a {@link LogFile} or {@code null} if the environment didn't contain any_suitable properties;public static LogFile get(PropertyResolver propertyResolver) {_		String file = getLogFileProperty(propertyResolver, FILE_NAME_PROPERTY,_				FILE_PROPERTY)__		String path = getLogFileProperty(propertyResolver, FILE_PATH_PROPERTY,_				PATH_PROPERTY)__		if (StringUtils.hasLength(file) || StringUtils.hasLength(path)) {_			return new LogFile(file, path)__		}_		return null__	};get,a,link,log,file,from,the,given,spring,link,environment,param,property,resolver,the,link,property,resolver,used,to,obtain,the,logging,properties,return,a,link,log,file,or,code,null,if,the,environment,didn,t,contain,any,suitable,properties;public,static,log,file,get,property,resolver,property,resolver,string,file,get,log,file,property,property,resolver,string,path,get,log,file,property,property,resolver,if,string,utils,has,length,file,string,utils,has,length,path,return,new,log,file,file,path,return,null
LogFile -> public void applyTo(Properties properties);1507173536;Apply log file details to {@code LOG_PATH} and {@code LOG_FILE} map entries._@param properties the properties to apply to;public void applyTo(Properties properties) {_		put(properties, LoggingSystemProperties.LOG_PATH, this.path)__		put(properties, LoggingSystemProperties.LOG_FILE, toString())__	};apply,log,file,details,to,code,and,code,map,entries,param,properties,the,properties,to,apply,to;public,void,apply,to,properties,properties,put,properties,logging,system,properties,this,path,put,properties,logging,system,properties,to,string
LogFile -> public void applyTo(Properties properties);1543830164;Apply log file details to {@code LOG_PATH} and {@code LOG_FILE} map entries._@param properties the properties to apply to;public void applyTo(Properties properties) {_		put(properties, LoggingSystemProperties.LOG_PATH, this.path)__		put(properties, LoggingSystemProperties.LOG_FILE, toString())__	};apply,log,file,details,to,code,and,code,map,entries,param,properties,the,properties,to,apply,to;public,void,apply,to,properties,properties,put,properties,logging,system,properties,this,path,put,properties,logging,system,properties,to,string
LogFile -> public void applyTo(Properties properties);1545055330;Apply log file details to {@code LOG_PATH} and {@code LOG_FILE} map entries._@param properties the properties to apply to;public void applyTo(Properties properties) {_		put(properties, LoggingSystemProperties.LOG_PATH, this.path)__		put(properties, LoggingSystemProperties.LOG_FILE, toString())__	};apply,log,file,details,to,code,and,code,map,entries,param,properties,the,properties,to,apply,to;public,void,apply,to,properties,properties,put,properties,logging,system,properties,this,path,put,properties,logging,system,properties,to,string
LogFile -> public void applyTo(Properties properties);1550737183;Apply log file details to {@code LOG_PATH} and {@code LOG_FILE} map entries._@param properties the properties to apply to;public void applyTo(Properties properties) {_		put(properties, LoggingSystemProperties.LOG_PATH, this.path)__		put(properties, LoggingSystemProperties.LOG_FILE, toString())__	};apply,log,file,details,to,code,and,code,map,entries,param,properties,the,properties,to,apply,to;public,void,apply,to,properties,properties,put,properties,logging,system,properties,this,path,put,properties,logging,system,properties,to,string
LogFile -> public void applyToSystemProperties();1507173536;Apply log file details to {@code LOG_PATH} and {@code LOG_FILE} system properties.;public void applyToSystemProperties() {_		applyTo(System.getProperties())__	};apply,log,file,details,to,code,and,code,system,properties;public,void,apply,to,system,properties,apply,to,system,get,properties
LogFile -> public void applyToSystemProperties();1543830164;Apply log file details to {@code LOG_PATH} and {@code LOG_FILE} system properties.;public void applyToSystemProperties() {_		applyTo(System.getProperties())__	};apply,log,file,details,to,code,and,code,system,properties;public,void,apply,to,system,properties,apply,to,system,get,properties
LogFile -> public void applyToSystemProperties();1545055330;Apply log file details to {@code LOG_PATH} and {@code LOG_FILE} system properties.;public void applyToSystemProperties() {_		applyTo(System.getProperties())__	};apply,log,file,details,to,code,and,code,system,properties;public,void,apply,to,system,properties,apply,to,system,get,properties
LogFile -> public void applyToSystemProperties();1550737183;Apply log file details to {@code LOG_PATH} and {@code LOG_FILE} system properties.;public void applyToSystemProperties() {_		applyTo(System.getProperties())__	};apply,log,file,details,to,code,and,code,system,properties;public,void,apply,to,system,properties,apply,to,system,get,properties
LogFile -> @SuppressWarnings("deprecation") 	public static LogFile get(PropertyResolver propertyResolver);1543830164;Get a {@link LogFile} from the given Spring {@link Environment}._@param propertyResolver the {@link PropertyResolver} used to obtain the logging_properties_@return a {@link LogFile} or {@code null} if the environment didn't contain any_suitable properties;@SuppressWarnings("deprecation")_	public static LogFile get(PropertyResolver propertyResolver) {_		String file = getLogFileProperty(propertyResolver, FILE_NAME_PROPERTY,_				FILE_PROPERTY)__		String path = getLogFileProperty(propertyResolver, FILE_PATH_PROPERTY,_				PATH_PROPERTY)__		if (StringUtils.hasLength(file) || StringUtils.hasLength(path)) {_			return new LogFile(file, path)__		}_		return null__	};get,a,link,log,file,from,the,given,spring,link,environment,param,property,resolver,the,link,property,resolver,used,to,obtain,the,logging,properties,return,a,link,log,file,or,code,null,if,the,environment,didn,t,contain,any,suitable,properties;suppress,warnings,deprecation,public,static,log,file,get,property,resolver,property,resolver,string,file,get,log,file,property,property,resolver,string,path,get,log,file,property,property,resolver,if,string,utils,has,length,file,string,utils,has,length,path,return,new,log,file,file,path,return,null
LogFile -> @SuppressWarnings("deprecation") 	public static LogFile get(PropertyResolver propertyResolver);1545055330;Get a {@link LogFile} from the given Spring {@link Environment}._@param propertyResolver the {@link PropertyResolver} used to obtain the logging_properties_@return a {@link LogFile} or {@code null} if the environment didn't contain any_suitable properties;@SuppressWarnings("deprecation")_	public static LogFile get(PropertyResolver propertyResolver) {_		String file = getLogFileProperty(propertyResolver, FILE_NAME_PROPERTY,_				FILE_PROPERTY)__		String path = getLogFileProperty(propertyResolver, FILE_PATH_PROPERTY,_				PATH_PROPERTY)__		if (StringUtils.hasLength(file) || StringUtils.hasLength(path)) {_			return new LogFile(file, path)__		}_		return null__	};get,a,link,log,file,from,the,given,spring,link,environment,param,property,resolver,the,link,property,resolver,used,to,obtain,the,logging,properties,return,a,link,log,file,or,code,null,if,the,environment,didn,t,contain,any,suitable,properties;suppress,warnings,deprecation,public,static,log,file,get,property,resolver,property,resolver,string,file,get,log,file,property,property,resolver,string,path,get,log,file,property,property,resolver,if,string,utils,has,length,file,string,utils,has,length,path,return,new,log,file,file,path,return,null
LogFile -> LogFile(String file, String path);1507173536;Create a new {@link LogFile} instance._@param file a reference to the file to write_@param path a reference to the logging path to use if {@code file} is not specified;LogFile(String file, String path) {_		Assert.isTrue(StringUtils.hasLength(file) || StringUtils.hasLength(path),_				"File or Path must not be empty")__		this.file = file__		this.path = path__	};create,a,new,link,log,file,instance,param,file,a,reference,to,the,file,to,write,param,path,a,reference,to,the,logging,path,to,use,if,code,file,is,not,specified;log,file,string,file,string,path,assert,is,true,string,utils,has,length,file,string,utils,has,length,path,file,or,path,must,not,be,empty,this,file,file,this,path,path
LogFile -> LogFile(String file, String path);1543830164;Create a new {@link LogFile} instance._@param file a reference to the file to write_@param path a reference to the logging path to use if {@code file} is not specified;LogFile(String file, String path) {_		Assert.isTrue(StringUtils.hasLength(file) || StringUtils.hasLength(path),_				"File or Path must not be empty")__		this.file = file__		this.path = path__	};create,a,new,link,log,file,instance,param,file,a,reference,to,the,file,to,write,param,path,a,reference,to,the,logging,path,to,use,if,code,file,is,not,specified;log,file,string,file,string,path,assert,is,true,string,utils,has,length,file,string,utils,has,length,path,file,or,path,must,not,be,empty,this,file,file,this,path,path
LogFile -> LogFile(String file, String path);1545055330;Create a new {@link LogFile} instance._@param file a reference to the file to write_@param path a reference to the logging path to use if {@code file} is not specified;LogFile(String file, String path) {_		Assert.isTrue(StringUtils.hasLength(file) || StringUtils.hasLength(path),_				"File or Path must not be empty")__		this.file = file__		this.path = path__	};create,a,new,link,log,file,instance,param,file,a,reference,to,the,file,to,write,param,path,a,reference,to,the,logging,path,to,use,if,code,file,is,not,specified;log,file,string,file,string,path,assert,is,true,string,utils,has,length,file,string,utils,has,length,path,file,or,path,must,not,be,empty,this,file,file,this,path,path
LogFile -> LogFile(String file, String path);1550737183;Create a new {@link LogFile} instance._@param file a reference to the file to write_@param path a reference to the logging path to use if {@code file} is not specified;LogFile(String file, String path) {_		Assert.isTrue(StringUtils.hasLength(file) || StringUtils.hasLength(path),_				"File or Path must not be empty")__		this.file = file__		this.path = path__	};create,a,new,link,log,file,instance,param,file,a,reference,to,the,file,to,write,param,path,a,reference,to,the,logging,path,to,use,if,code,file,is,not,specified;log,file,string,file,string,path,assert,is,true,string,utils,has,length,file,string,utils,has,length,path,file,or,path,must,not,be,empty,this,file,file,this,path,path
LogFile -> LogFile(String file);1507173536;Create a new {@link LogFile} instance._@param file a reference to the file to write;LogFile(String file) {_		this(file, null)__	};create,a,new,link,log,file,instance,param,file,a,reference,to,the,file,to,write;log,file,string,file,this,file,null
LogFile -> LogFile(String file);1543830164;Create a new {@link LogFile} instance._@param file a reference to the file to write;LogFile(String file) {_		this(file, null)__	};create,a,new,link,log,file,instance,param,file,a,reference,to,the,file,to,write;log,file,string,file,this,file,null
LogFile -> LogFile(String file);1545055330;Create a new {@link LogFile} instance._@param file a reference to the file to write;LogFile(String file) {_		this(file, null)__	};create,a,new,link,log,file,instance,param,file,a,reference,to,the,file,to,write;log,file,string,file,this,file,null
LogFile -> LogFile(String file);1550737183;Create a new {@link LogFile} instance._@param file a reference to the file to write;LogFile(String file) {_		this(file, null)__	};create,a,new,link,log,file,instance,param,file,a,reference,to,the,file,to,write;log,file,string,file,this,file,null
