# id;timestamp;commentText;codeText;commentWords;codeWords
DynamicRegistrationBean -> public void setName(String name);1515717909;Set the name of this registration. If not specified the bean name will be used._@param name the name of the registration;public void setName(String name) {_		Assert.hasLength(name, "Name must not be empty")__		this.name = name__	};set,the,name,of,this,registration,if,not,specified,the,bean,name,will,be,used,param,name,the,name,of,the,registration;public,void,set,name,string,name,assert,has,length,name,name,must,not,be,empty,this,name,name
DynamicRegistrationBean -> public void setName(String name);1515918698;Set the name of this registration. If not specified the bean name will be used._@param name the name of the registration;public void setName(String name) {_		Assert.hasLength(name, "Name must not be empty")__		this.name = name__	};set,the,name,of,this,registration,if,not,specified,the,bean,name,will,be,used,param,name,the,name,of,the,registration;public,void,set,name,string,name,assert,has,length,name,name,must,not,be,empty,this,name,name
DynamicRegistrationBean -> public void setName(String name);1516008705;Set the name of this registration. If not specified the bean name will be used._@param name the name of the registration;public void setName(String name) {_		Assert.hasLength(name, "Name must not be empty")__		this.name = name__	};set,the,name,of,this,registration,if,not,specified,the,bean,name,will,be,used,param,name,the,name,of,the,registration;public,void,set,name,string,name,assert,has,length,name,name,must,not,be,empty,this,name,name
DynamicRegistrationBean -> public void setName(String name);1516215803;Set the name of this registration. If not specified the bean name will be used._@param name the name of the registration;public void setName(String name) {_		Assert.hasLength(name, "Name must not be empty")__		this.name = name__	};set,the,name,of,this,registration,if,not,specified,the,bean,name,will,be,used,param,name,the,name,of,the,registration;public,void,set,name,string,name,assert,has,length,name,name,must,not,be,empty,this,name,name
DynamicRegistrationBean -> public void setName(String name);1532738143;Set the name of this registration. If not specified the bean name will be used._@param name the name of the registration;public void setName(String name) {_		Assert.hasLength(name, "Name must not be empty")__		this.name = name__	};set,the,name,of,this,registration,if,not,specified,the,bean,name,will,be,used,param,name,the,name,of,the,registration;public,void,set,name,string,name,assert,has,length,name,name,must,not,be,empty,this,name,name
DynamicRegistrationBean -> public void setInitParameters(Map<String, String> initParameters);1515717909;Set init-parameters for this registration. Calling this method will replace any_existing init-parameters._@param initParameters the init parameters_@see #getInitParameters_@see #addInitParameter;public void setInitParameters(Map<String, String> initParameters) {_		Assert.notNull(initParameters, "InitParameters must not be null")__		this.initParameters = new LinkedHashMap<>(initParameters)__	};set,init,parameters,for,this,registration,calling,this,method,will,replace,any,existing,init,parameters,param,init,parameters,the,init,parameters,see,get,init,parameters,see,add,init,parameter;public,void,set,init,parameters,map,string,string,init,parameters,assert,not,null,init,parameters,init,parameters,must,not,be,null,this,init,parameters,new,linked,hash,map,init,parameters
DynamicRegistrationBean -> public void setInitParameters(Map<String, String> initParameters);1515918698;Set init-parameters for this registration. Calling this method will replace any_existing init-parameters._@param initParameters the init parameters_@see #getInitParameters_@see #addInitParameter;public void setInitParameters(Map<String, String> initParameters) {_		Assert.notNull(initParameters, "InitParameters must not be null")__		this.initParameters = new LinkedHashMap<>(initParameters)__	};set,init,parameters,for,this,registration,calling,this,method,will,replace,any,existing,init,parameters,param,init,parameters,the,init,parameters,see,get,init,parameters,see,add,init,parameter;public,void,set,init,parameters,map,string,string,init,parameters,assert,not,null,init,parameters,init,parameters,must,not,be,null,this,init,parameters,new,linked,hash,map,init,parameters
DynamicRegistrationBean -> public void setInitParameters(Map<String, String> initParameters);1516008705;Set init-parameters for this registration. Calling this method will replace any_existing init-parameters._@param initParameters the init parameters_@see #getInitParameters_@see #addInitParameter;public void setInitParameters(Map<String, String> initParameters) {_		Assert.notNull(initParameters, "InitParameters must not be null")__		this.initParameters = new LinkedHashMap<>(initParameters)__	};set,init,parameters,for,this,registration,calling,this,method,will,replace,any,existing,init,parameters,param,init,parameters,the,init,parameters,see,get,init,parameters,see,add,init,parameter;public,void,set,init,parameters,map,string,string,init,parameters,assert,not,null,init,parameters,init,parameters,must,not,be,null,this,init,parameters,new,linked,hash,map,init,parameters
DynamicRegistrationBean -> public void setInitParameters(Map<String, String> initParameters);1516215803;Set init-parameters for this registration. Calling this method will replace any_existing init-parameters._@param initParameters the init parameters_@see #getInitParameters_@see #addInitParameter;public void setInitParameters(Map<String, String> initParameters) {_		Assert.notNull(initParameters, "InitParameters must not be null")__		this.initParameters = new LinkedHashMap<>(initParameters)__	};set,init,parameters,for,this,registration,calling,this,method,will,replace,any,existing,init,parameters,param,init,parameters,the,init,parameters,see,get,init,parameters,see,add,init,parameter;public,void,set,init,parameters,map,string,string,init,parameters,assert,not,null,init,parameters,init,parameters,must,not,be,null,this,init,parameters,new,linked,hash,map,init,parameters
DynamicRegistrationBean -> public void setInitParameters(Map<String, String> initParameters);1532738143;Set init-parameters for this registration. Calling this method will replace any_existing init-parameters._@param initParameters the init parameters_@see #getInitParameters_@see #addInitParameter;public void setInitParameters(Map<String, String> initParameters) {_		Assert.notNull(initParameters, "InitParameters must not be null")__		this.initParameters = new LinkedHashMap<>(initParameters)__	};set,init,parameters,for,this,registration,calling,this,method,will,replace,any,existing,init,parameters,param,init,parameters,the,init,parameters,see,get,init,parameters,see,add,init,parameter;public,void,set,init,parameters,map,string,string,init,parameters,assert,not,null,init,parameters,init,parameters,must,not,be,null,this,init,parameters,new,linked,hash,map,init,parameters
DynamicRegistrationBean -> public void setAsyncSupported(boolean asyncSupported);1515717909;Sets if asynchronous operations are support for this registration. If not specified_defaults to {@code true}._@param asyncSupported if async is supported;public void setAsyncSupported(boolean asyncSupported) {_		this.asyncSupported = asyncSupported__	};sets,if,asynchronous,operations,are,support,for,this,registration,if,not,specified,defaults,to,code,true,param,async,supported,if,async,is,supported;public,void,set,async,supported,boolean,async,supported,this,async,supported,async,supported
DynamicRegistrationBean -> public void setAsyncSupported(boolean asyncSupported);1515918698;Sets if asynchronous operations are support for this registration. If not specified_defaults to {@code true}._@param asyncSupported if async is supported;public void setAsyncSupported(boolean asyncSupported) {_		this.asyncSupported = asyncSupported__	};sets,if,asynchronous,operations,are,support,for,this,registration,if,not,specified,defaults,to,code,true,param,async,supported,if,async,is,supported;public,void,set,async,supported,boolean,async,supported,this,async,supported,async,supported
DynamicRegistrationBean -> public void setAsyncSupported(boolean asyncSupported);1516008705;Sets if asynchronous operations are supported for this registration. If not specified_defaults to {@code true}._@param asyncSupported if async is supported;public void setAsyncSupported(boolean asyncSupported) {_		this.asyncSupported = asyncSupported__	};sets,if,asynchronous,operations,are,supported,for,this,registration,if,not,specified,defaults,to,code,true,param,async,supported,if,async,is,supported;public,void,set,async,supported,boolean,async,supported,this,async,supported,async,supported
DynamicRegistrationBean -> public void setAsyncSupported(boolean asyncSupported);1516215803;Sets if asynchronous operations are supported for this registration. If not_specified defaults to {@code true}._@param asyncSupported if async is supported;public void setAsyncSupported(boolean asyncSupported) {_		this.asyncSupported = asyncSupported__	};sets,if,asynchronous,operations,are,supported,for,this,registration,if,not,specified,defaults,to,code,true,param,async,supported,if,async,is,supported;public,void,set,async,supported,boolean,async,supported,this,async,supported,async,supported
DynamicRegistrationBean -> public void setAsyncSupported(boolean asyncSupported);1532738143;Sets if asynchronous operations are supported for this registration. If not_specified defaults to {@code true}._@param asyncSupported if async is supported;public void setAsyncSupported(boolean asyncSupported) {_		this.asyncSupported = asyncSupported__	};sets,if,asynchronous,operations,are,supported,for,this,registration,if,not,specified,defaults,to,code,true,param,async,supported,if,async,is,supported;public,void,set,async,supported,boolean,async,supported,this,async,supported,async,supported
DynamicRegistrationBean -> public boolean isAsyncSupported();1515717909;Returns if asynchronous operations are support for this registration._@return if async is supported;public boolean isAsyncSupported() {_		return this.asyncSupported__	};returns,if,asynchronous,operations,are,support,for,this,registration,return,if,async,is,supported;public,boolean,is,async,supported,return,this,async,supported
DynamicRegistrationBean -> public boolean isAsyncSupported();1515918698;Returns if asynchronous operations are support for this registration._@return if async is supported;public boolean isAsyncSupported() {_		return this.asyncSupported__	};returns,if,asynchronous,operations,are,support,for,this,registration,return,if,async,is,supported;public,boolean,is,async,supported,return,this,async,supported
DynamicRegistrationBean -> public boolean isAsyncSupported();1516008705;Returns if asynchronous operations are supported for this registration._@return if async is supported;public boolean isAsyncSupported() {_		return this.asyncSupported__	};returns,if,asynchronous,operations,are,supported,for,this,registration,return,if,async,is,supported;public,boolean,is,async,supported,return,this,async,supported
DynamicRegistrationBean -> public boolean isAsyncSupported();1516215803;Returns if asynchronous operations are supported for this registration._@return if async is supported;public boolean isAsyncSupported() {_		return this.asyncSupported__	};returns,if,asynchronous,operations,are,supported,for,this,registration,return,if,async,is,supported;public,boolean,is,async,supported,return,this,async,supported
DynamicRegistrationBean -> public boolean isAsyncSupported();1532738143;Returns if asynchronous operations are supported for this registration._@return if async is supported;public boolean isAsyncSupported() {_		return this.asyncSupported__	};returns,if,asynchronous,operations,are,supported,for,this,registration,return,if,async,is,supported;public,boolean,is,async,supported,return,this,async,supported
DynamicRegistrationBean -> protected final String getOrDeduceName(Object value);1515717909;Deduces the name for this registration. Will return user specified name or fallback_to convention based naming._@param value the object used for convention based names_@return the deduced name;protected final String getOrDeduceName(Object value) {_		return (this.name != null ? this.name : Conventions.getVariableName(value))__	};deduces,the,name,for,this,registration,will,return,user,specified,name,or,fallback,to,convention,based,naming,param,value,the,object,used,for,convention,based,names,return,the,deduced,name;protected,final,string,get,or,deduce,name,object,value,return,this,name,null,this,name,conventions,get,variable,name,value
DynamicRegistrationBean -> protected final String getOrDeduceName(Object value);1515918698;Deduces the name for this registration. Will return user specified name or fallback_to convention based naming._@param value the object used for convention based names_@return the deduced name;protected final String getOrDeduceName(Object value) {_		return (this.name != null ? this.name : Conventions.getVariableName(value))__	};deduces,the,name,for,this,registration,will,return,user,specified,name,or,fallback,to,convention,based,naming,param,value,the,object,used,for,convention,based,names,return,the,deduced,name;protected,final,string,get,or,deduce,name,object,value,return,this,name,null,this,name,conventions,get,variable,name,value
DynamicRegistrationBean -> protected final String getOrDeduceName(Object value);1516008705;Deduces the name for this registration. Will return user specified name or fallback_to convention based naming._@param value the object used for convention based names_@return the deduced name;protected final String getOrDeduceName(Object value) {_		return (this.name != null ? this.name : Conventions.getVariableName(value))__	};deduces,the,name,for,this,registration,will,return,user,specified,name,or,fallback,to,convention,based,naming,param,value,the,object,used,for,convention,based,names,return,the,deduced,name;protected,final,string,get,or,deduce,name,object,value,return,this,name,null,this,name,conventions,get,variable,name,value
DynamicRegistrationBean -> protected final String getOrDeduceName(Object value);1516215803;Deduces the name for this registration. Will return user specified name or fallback_to convention based naming._@param value the object used for convention based names_@return the deduced name;protected final String getOrDeduceName(Object value) {_		return (this.name != null ? this.name : Conventions.getVariableName(value))__	};deduces,the,name,for,this,registration,will,return,user,specified,name,or,fallback,to,convention,based,naming,param,value,the,object,used,for,convention,based,names,return,the,deduced,name;protected,final,string,get,or,deduce,name,object,value,return,this,name,null,this,name,conventions,get,variable,name,value
DynamicRegistrationBean -> protected final String getOrDeduceName(Object value);1532738143;Deduces the name for this registration. Will return user specified name or fallback_to convention based naming._@param value the object used for convention based names_@return the deduced name;protected final String getOrDeduceName(Object value) {_		return (this.name != null) ? this.name : Conventions.getVariableName(value)__	};deduces,the,name,for,this,registration,will,return,user,specified,name,or,fallback,to,convention,based,naming,param,value,the,object,used,for,convention,based,names,return,the,deduced,name;protected,final,string,get,or,deduce,name,object,value,return,this,name,null,this,name,conventions,get,variable,name,value
DynamicRegistrationBean -> public Map<String, String> getInitParameters();1515717909;Returns a mutable Map of the registration init-parameters._@return the init parameters;public Map<String, String> getInitParameters() {_		return this.initParameters__	};returns,a,mutable,map,of,the,registration,init,parameters,return,the,init,parameters;public,map,string,string,get,init,parameters,return,this,init,parameters
DynamicRegistrationBean -> public Map<String, String> getInitParameters();1515918698;Returns a mutable Map of the registration init-parameters._@return the init parameters;public Map<String, String> getInitParameters() {_		return this.initParameters__	};returns,a,mutable,map,of,the,registration,init,parameters,return,the,init,parameters;public,map,string,string,get,init,parameters,return,this,init,parameters
DynamicRegistrationBean -> public Map<String, String> getInitParameters();1516008705;Returns a mutable Map of the registration init-parameters._@return the init parameters;public Map<String, String> getInitParameters() {_		return this.initParameters__	};returns,a,mutable,map,of,the,registration,init,parameters,return,the,init,parameters;public,map,string,string,get,init,parameters,return,this,init,parameters
DynamicRegistrationBean -> public Map<String, String> getInitParameters();1516215803;Returns a mutable Map of the registration init-parameters._@return the init parameters;public Map<String, String> getInitParameters() {_		return this.initParameters__	};returns,a,mutable,map,of,the,registration,init,parameters,return,the,init,parameters;public,map,string,string,get,init,parameters,return,this,init,parameters
DynamicRegistrationBean -> public Map<String, String> getInitParameters();1532738143;Returns a mutable Map of the registration init-parameters._@return the init parameters;public Map<String, String> getInitParameters() {_		return this.initParameters__	};returns,a,mutable,map,of,the,registration,init,parameters,return,the,init,parameters;public,map,string,string,get,init,parameters,return,this,init,parameters
DynamicRegistrationBean -> public void addInitParameter(String name, String value);1515717909;Add a single init-parameter, replacing any existing parameter with the same name._@param name the init-parameter name_@param value the init-parameter value;public void addInitParameter(String name, String value) {_		Assert.notNull(name, "Name must not be null")__		this.initParameters.put(name, value)__	};add,a,single,init,parameter,replacing,any,existing,parameter,with,the,same,name,param,name,the,init,parameter,name,param,value,the,init,parameter,value;public,void,add,init,parameter,string,name,string,value,assert,not,null,name,name,must,not,be,null,this,init,parameters,put,name,value
DynamicRegistrationBean -> public void addInitParameter(String name, String value);1515918698;Add a single init-parameter, replacing any existing parameter with the same name._@param name the init-parameter name_@param value the init-parameter value;public void addInitParameter(String name, String value) {_		Assert.notNull(name, "Name must not be null")__		this.initParameters.put(name, value)__	};add,a,single,init,parameter,replacing,any,existing,parameter,with,the,same,name,param,name,the,init,parameter,name,param,value,the,init,parameter,value;public,void,add,init,parameter,string,name,string,value,assert,not,null,name,name,must,not,be,null,this,init,parameters,put,name,value
DynamicRegistrationBean -> public void addInitParameter(String name, String value);1516008705;Add a single init-parameter, replacing any existing parameter with the same name._@param name the init-parameter name_@param value the init-parameter value;public void addInitParameter(String name, String value) {_		Assert.notNull(name, "Name must not be null")__		this.initParameters.put(name, value)__	};add,a,single,init,parameter,replacing,any,existing,parameter,with,the,same,name,param,name,the,init,parameter,name,param,value,the,init,parameter,value;public,void,add,init,parameter,string,name,string,value,assert,not,null,name,name,must,not,be,null,this,init,parameters,put,name,value
DynamicRegistrationBean -> public void addInitParameter(String name, String value);1516215803;Add a single init-parameter, replacing any existing parameter with the same name._@param name the init-parameter name_@param value the init-parameter value;public void addInitParameter(String name, String value) {_		Assert.notNull(name, "Name must not be null")__		this.initParameters.put(name, value)__	};add,a,single,init,parameter,replacing,any,existing,parameter,with,the,same,name,param,name,the,init,parameter,name,param,value,the,init,parameter,value;public,void,add,init,parameter,string,name,string,value,assert,not,null,name,name,must,not,be,null,this,init,parameters,put,name,value
DynamicRegistrationBean -> public void addInitParameter(String name, String value);1532738143;Add a single init-parameter, replacing any existing parameter with the same name._@param name the init-parameter name_@param value the init-parameter value;public void addInitParameter(String name, String value) {_		Assert.notNull(name, "Name must not be null")__		this.initParameters.put(name, value)__	};add,a,single,init,parameter,replacing,any,existing,parameter,with,the,same,name,param,name,the,init,parameter,name,param,value,the,init,parameter,value;public,void,add,init,parameter,string,name,string,value,assert,not,null,name,name,must,not,be,null,this,init,parameters,put,name,value
