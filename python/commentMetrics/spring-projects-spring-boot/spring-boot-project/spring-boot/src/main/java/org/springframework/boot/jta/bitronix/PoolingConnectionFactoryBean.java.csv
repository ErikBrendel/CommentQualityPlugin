commented;modifiers;parameterAmount;loc;comment;code
false;public,synchronized;0;10;;@Override public synchronized void init() {     source.set(this).     try {         super.init().     } finally {         source.remove().     } }
false;public;1;4;;@Override public void setBeanName(String name) {     this.beanName = name. }
false;public;0;7;;@Override public void afterPropertiesSet() throws Exception {     if (!StringUtils.hasLength(getUniqueName())) {         setUniqueName(this.beanName).     }     init(). }
false;public;0;4;;@Override public void destroy() throws Exception {     close(). }
true;public;1;5;/**  * Set the {@link XAConnectionFactory} directly, instead of calling  * {@link #setClassName(String)}.  * @param connectionFactory the connection factory to use  */ ;/**  * Set the {@link XAConnectionFactory} directly, instead of calling  * {@link #setClassName(String)}.  * @param connectionFactory the connection factory to use  */ public void setConnectionFactory(XAConnectionFactory connectionFactory) {     this.connectionFactory = connectionFactory.     setClassName(DirectXAConnectionFactory.class.getName()).     setDriverProperties(new Properties()). }
false;protected,final;0;3;;protected final XAConnectionFactory getConnectionFactory() {     return this.connectionFactory. }
false;public;2;8;;@Override public XAStatefulHolder createPooledConnection(Object xaFactory, ResourceBean bean) throws Exception {     if (xaFactory instanceof DirectXAConnectionFactory) {         xaFactory = ((DirectXAConnectionFactory) xaFactory).getConnectionFactory().     }     return super.createPooledConnection(xaFactory, bean). }
false;public;0;4;;@Override public XAConnection createXAConnection() throws JMSException {     return this.connectionFactory.createXAConnection(). }
false;public;2;5;;@Override public XAConnection createXAConnection(String userName, String password) throws JMSException {     return this.connectionFactory.createXAConnection(userName, password). }
false;public;0;3;;public XAConnectionFactory getConnectionFactory() {     return this.connectionFactory. }
false;public;0;4;;@Override public XAJMSContext createXAContext() {     return this.connectionFactory.createXAContext(). }
false;public;2;4;;@Override public XAJMSContext createXAContext(String username, String password) {     return this.connectionFactory.createXAContext(username, password). }
