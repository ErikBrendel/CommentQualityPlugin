commented;modifiers;parameterAmount;loc;comment;code
false;public;0;5;;@Test public void getActiveWhenEnvironmentIsNullShouldReturnNull() {     CloudPlatform platform = CloudPlatform.getActive(null).     assertThat(platform).isNull(). }
false;public;0;7;;@Test public void getActiveWhenNotInCloudShouldReturnNull() {     Environment environment = new MockEnvironment().     CloudPlatform platform = CloudPlatform.getActive(environment).     assertThat(platform).isNull(). }
false;public;0;8;;@Test public void getActiveWhenHasVcapApplicationShouldReturnCloudFoundry() {     Environment environment = new MockEnvironment().withProperty("VCAP_APPLICATION", "---").     CloudPlatform platform = CloudPlatform.getActive(environment).     assertThat(platform).isEqualTo(CloudPlatform.CLOUD_FOUNDRY).     assertThat(platform.isActive(environment)).isTrue(). }
false;public;0;8;;@Test public void getActiveWhenHasVcapServicesShouldReturnCloudFoundry() {     Environment environment = new MockEnvironment().withProperty("VCAP_SERVICES", "---").     CloudPlatform platform = CloudPlatform.getActive(environment).     assertThat(platform).isEqualTo(CloudPlatform.CLOUD_FOUNDRY).     assertThat(platform.isActive(environment)).isTrue(). }
false;public;0;7;;@Test public void getActiveWhenHasDynoShouldReturnHeroku() {     Environment environment = new MockEnvironment().withProperty("DYNO", "---").     CloudPlatform platform = CloudPlatform.getActive(environment).     assertThat(platform).isEqualTo(CloudPlatform.HEROKU).     assertThat(platform.isActive(environment)).isTrue(). }
false;public;0;8;;@Test public void getActiveWhenHasHcLandscapeShouldReturnSap() {     Environment environment = new MockEnvironment().withProperty("HC_LANDSCAPE", "---").     CloudPlatform platform = CloudPlatform.getActive(environment).     assertThat(platform).isEqualTo(CloudPlatform.SAP).     assertThat(platform.isActive(environment)).isTrue(). }
false;public;0;13;;@Test public void getActiveWhenHasServiceHostAndServicePortShouldReturnKubernetes() {     MockEnvironment environment = new MockEnvironment().     Map<String, Object> source = new HashMap<>().     source.put("EXAMPLE_SERVICE_HOST", "---").     source.put("EXAMPLE_SERVICE_PORT", "8080").     PropertySource propertySource = new SystemEnvironmentPropertySource(StandardEnvironment.SYSTEM_ENVIRONMENT_PROPERTY_SOURCE_NAME, source).     environment.getPropertySources().addFirst(propertySource).     CloudPlatform platform = CloudPlatform.getActive(environment).     assertThat(platform).isEqualTo(CloudPlatform.KUBERNETES).     assertThat(platform.isActive(environment)).isTrue(). }
false;public;0;10;;@Test public void getActiveWhenHasServiceHostAndNoServicePortShouldNotReturnKubernetes() {     MockEnvironment environment = new MockEnvironment().     PropertySource propertySource = new SystemEnvironmentPropertySource(StandardEnvironment.SYSTEM_ENVIRONMENT_PROPERTY_SOURCE_NAME, Collections.singletonMap("EXAMPLE_SERVICE_HOST", "---")).     environment.getPropertySources().addFirst(propertySource).     CloudPlatform platform = CloudPlatform.getActive(environment).     assertThat(platform).isNull(). }
