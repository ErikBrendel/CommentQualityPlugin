commented;modifiers;parameterAmount;loc;comment;code
false;public;0;6;;@Test public void sensibleDefaults() {     assertThat(this.bean.getMaxPoolSize()).isEqualTo(10).     assertThat(this.bean.getAutomaticEnlistingEnabled()).isTrue().     assertThat(this.bean.isEnableJdbc4ConnectionTest()).isTrue(). }
false;public;0;6;;@Test public void setsUniqueNameIfNull() throws Exception {     this.bean.setBeanName("beanName").     this.bean.afterPropertiesSet().     assertThat(this.bean.getUniqueName()).isEqualTo("beanName"). }
false;public;0;7;;@Test public void doesNotSetUniqueNameIfNotNull() throws Exception {     this.bean.setBeanName("beanName").     this.bean.setUniqueName("un").     this.bean.afterPropertiesSet().     assertThat(this.bean.getUniqueName()).isEqualTo("un"). }
false;public;0;15;;@Test public void setDataSource() throws Exception {     XADataSource dataSource = mock(XADataSource.class).     XAConnection xaConnection = mock(XAConnection.class).     Connection connection = mock(Connection.class).     given(dataSource.getXAConnection()).willReturn(xaConnection).     given(xaConnection.getConnection()).willReturn(connection).     this.bean.setDataSource(dataSource).     this.bean.setBeanName("beanName").     this.bean.afterPropertiesSet().     this.bean.init().     this.bean.createPooledConnection(dataSource, this.bean).     verify(dataSource).getXAConnection().     TransactionManagerServices.getTaskScheduler().shutdown(). }
