commented;modifiers;parameterAmount;loc;comment;code
false;public;0;10;;@Test @SuppressWarnings("rawtypes") public void whenHttp2IsNotEnabledServerConnectorHasSslAndHttpConnectionFactories() {     Server server = createCustomizedServer().     assertThat(server.getConnectors()).hasSize(1).     List<ConnectionFactory> factories = new ArrayList<>(server.getConnectors()[0].getConnectionFactories()).     assertThat(factories).extracting((factory) -> (Class) factory.getClass()).containsExactly(SslConnectionFactory.class, HttpConnectionFactory.class). }
false;public;0;14;;@Test @SuppressWarnings("rawtypes") public void whenHttp2IsEnabledServerConnectorsHasSslAlpnH2AndHttpConnectionFactories() {     Http2 http2 = new Http2().     http2.setEnabled(true).     Server server = createCustomizedServer(http2).     assertThat(server.getConnectors()).hasSize(1).     List<ConnectionFactory> factories = new ArrayList<>(server.getConnectors()[0].getConnectionFactories()).     assertThat(factories).extracting((factory) -> (Class) factory.getClass()).containsExactly(SslConnectionFactory.class, ALPNServerConnectionFactory.class, HTTP2ServerConnectionFactory.class, HttpConnectionFactory.class). }
false;public;0;11;;@Test public void alpnConnectionFactoryHasNullDefaultProtocolToAllowNegotiationToHttp11() {     Http2 http2 = new Http2().     http2.setEnabled(true).     Server server = createCustomizedServer(http2).     assertThat(server.getConnectors()).hasSize(1).     List<ConnectionFactory> factories = new ArrayList<>(server.getConnectors()[0].getConnectionFactories()).     assertThat(((ALPNServerConnectionFactory) factories.get(1)).getDefaultProtocol()).isNull(). }
false;public;0;13;;@Test public void configureSslWhenSslIsEnabledWithNoKeyStoreThrowsWebServerException() {     Ssl ssl = new Ssl().     SslServerCustomizer customizer = new SslServerCustomizer(null, ssl, null, null).     assertThatExceptionOfType(Exception.class).isThrownBy(() -> customizer.configureSsl(new SslContextFactory(), ssl, null)).satisfies((ex) -> {         assertThat(ex).isInstanceOf(WebServerException.class).         assertThat(ex).hasMessageContaining("Could not load key store 'null'").     }). }
false;private;0;3;;private Server createCustomizedServer() {     return createCustomizedServer(new Http2()). }
false;private;1;5;;private Server createCustomizedServer(Http2 http2) {     Ssl ssl = new Ssl().     ssl.setKeyStore("classpath:test.jks").     return createCustomizedServer(ssl, http2). }
false;private;2;6;;private Server createCustomizedServer(Ssl ssl, Http2 http2) {     Server server = new Server().     new SslServerCustomizer(new InetSocketAddress(0), ssl, null, http2).customize(server).     return server. }
