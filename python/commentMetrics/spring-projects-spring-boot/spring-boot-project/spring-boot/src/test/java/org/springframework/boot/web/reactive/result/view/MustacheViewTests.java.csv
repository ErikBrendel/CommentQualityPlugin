commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Before public void init() {     this.context.refresh(). }
false;public;0;14;;@Test public void viewResolvesHandlebars() {     this.exchange = MockServerWebExchange.from(MockServerHttpRequest.get("/test").build()).     MustacheView view = new MustacheView().     view.setCompiler(Mustache.compiler()).     view.setUrl(this.templateUrl).     view.setCharset(StandardCharsets.UTF_8.displayName()).     view.setApplicationContext(this.context).     view.render(Collections.singletonMap("World", "Spring"), MediaType.TEXT_HTML, this.exchange).block(Duration.ofSeconds(30)).     assertThat(this.exchange.getResponse().getBodyAsString().block(Duration.ofSeconds(30))).isEqualTo("Hello Spring"). }
