commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@After public void reset() {     AnsiOutput.setEnabled(Enabled.DETECT). }
false;public;0;4;;@Test public void getAnsiStyle() {     assertThat(this.source.getProperty("AnsiStyle.BOLD")).isEqualTo(AnsiStyle.BOLD). }
false;public;0;4;;@Test public void getAnsiColor() {     assertThat(this.source.getProperty("AnsiColor.RED")).isEqualTo(AnsiColor.RED). }
false;public;0;5;;@Test public void getAnsiBackground() {     assertThat(this.source.getProperty("AnsiBackground.GREEN")).isEqualTo(AnsiBackground.GREEN). }
false;public;0;6;;@Test public void getAnsi() {     assertThat(this.source.getProperty("Ansi.BOLD")).isEqualTo(AnsiStyle.BOLD).     assertThat(this.source.getProperty("Ansi.RED")).isEqualTo(AnsiColor.RED).     assertThat(this.source.getProperty("Ansi.BG_RED")).isEqualTo(AnsiBackground.RED). }
false;public;0;4;;@Test public void getMissing() {     assertThat(this.source.getProperty("AnsiStyle.NOPE")).isNull(). }
false;public;0;6;;@Test public void encodeEnabled() {     AnsiOutput.setEnabled(Enabled.ALWAYS).     AnsiPropertySource source = new AnsiPropertySource("ansi", true).     assertThat(source.getProperty("Ansi.RED")).isEqualTo("\033[31m"). }
false;public;0;6;;@Test public void encodeDisabled() {     AnsiOutput.setEnabled(Enabled.NEVER).     AnsiPropertySource source = new AnsiPropertySource("ansi", true).     assertThat(source.getProperty("Ansi.RED")).isEqualTo(""). }
