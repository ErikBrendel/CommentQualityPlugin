commented;modifiers;parameterAmount;loc;comment;code
false;public;0;11;;@Test public void setsDependsOn() {     DefaultListableBeanFactory beanFactory = spy(new DefaultListableBeanFactory()).     this.context = new AnnotationConfigApplicationContext(beanFactory).     this.context.register(Config.class).     this.context.refresh().     String name = "bitronixTransactionManager".     verify(beanFactory).registerDependentBean(name, "dataSource").     verify(beanFactory).registerDependentBean(name, "connectionFactory").     this.context.close(). }
false;public;0;4;;@Bean public DataSource dataSource() {     return mock(DataSource.class). }
false;public;0;4;;@Bean public ConnectionFactory connectionFactory() {     return mock(ConnectionFactory.class). }
false;public;0;4;;@Bean public BitronixTransactionManager bitronixTransactionManager() {     return mock(BitronixTransactionManager.class). }
false;public,static;0;4;;@Bean public static BitronixDependentBeanFactoryPostProcessor bitronixPostProcessor() {     return new BitronixDependentBeanFactoryPostProcessor(). }
