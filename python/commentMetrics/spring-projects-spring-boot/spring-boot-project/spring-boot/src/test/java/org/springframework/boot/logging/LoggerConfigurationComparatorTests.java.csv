commented;modifiers;parameterAmount;loc;comment;code
false;public;0;6;;@Test public void rootLoggerFirst() {     LoggerConfiguration first = new LoggerConfiguration("ROOT", null, LogLevel.OFF).     LoggerConfiguration second = new LoggerConfiguration("alpha", null, LogLevel.OFF).     assertThat(this.comparator.compare(first, second)).isLessThan(0). }
false;public;0;6;;@Test public void rootLoggerSecond() {     LoggerConfiguration first = new LoggerConfiguration("alpha", null, LogLevel.OFF).     LoggerConfiguration second = new LoggerConfiguration("ROOT", null, LogLevel.OFF).     assertThat(this.comparator.compare(first, second)).isGreaterThan(0). }
false;public;0;6;;@Test public void rootLoggerFirstEmpty() {     LoggerConfiguration first = new LoggerConfiguration("ROOT", null, LogLevel.OFF).     LoggerConfiguration second = new LoggerConfiguration("", null, LogLevel.OFF).     assertThat(this.comparator.compare(first, second)).isLessThan(0). }
false;public;0;6;;@Test public void rootLoggerSecondEmpty() {     LoggerConfiguration first = new LoggerConfiguration("", null, LogLevel.OFF).     LoggerConfiguration second = new LoggerConfiguration("ROOT", null, LogLevel.OFF).     assertThat(this.comparator.compare(first, second)).isGreaterThan(0). }
false;public;0;6;;@Test public void lexicalFirst() {     LoggerConfiguration first = new LoggerConfiguration("alpha", null, LogLevel.OFF).     LoggerConfiguration second = new LoggerConfiguration("bravo", null, LogLevel.OFF).     assertThat(this.comparator.compare(first, second)).isLessThan(0). }
false;public;0;6;;@Test public void lexicalSecond() {     LoggerConfiguration first = new LoggerConfiguration("bravo", null, LogLevel.OFF).     LoggerConfiguration second = new LoggerConfiguration("alpha", null, LogLevel.OFF).     assertThat(this.comparator.compare(first, second)).isGreaterThan(0). }
false;public;0;6;;@Test public void lexicalEqual() {     LoggerConfiguration first = new LoggerConfiguration("alpha", null, LogLevel.OFF).     LoggerConfiguration second = new LoggerConfiguration("alpha", null, LogLevel.OFF).     assertThat(this.comparator.compare(first, second)).isEqualTo(0). }
