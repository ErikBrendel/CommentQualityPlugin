commented;modifiers;parameterAmount;loc;comment;code
false;public;0;6;;@Test public void getPropertyShouldReturnValue() {     this.configurationSources.add(new MockConfigurationPropertySource("foo.bar", "baz")).     assertThat(this.propertySource.getProperty("foo.bar")).isEqualTo("baz"). }
false;public;0;8;;@Test public void getPropertyWhenNameIsNotValidShouldReturnNull() {     this.configurationSources.add(new MockConfigurationPropertySource("foo.bar", "baz")).     assertThat(this.propertySource.getProperty("FOO.B-A-R")).isNull().     assertThat(this.propertySource.getProperty("FOO.B A R")).isNull().     assertThat(this.propertySource.getProperty(".foo.bar")).isNull(). }
false;public;0;8;;@Test public void getPropertyWhenMultipleShouldReturnFirst() {     this.configurationSources.add(new MockConfigurationPropertySource("foo.bar", "baz")).     this.configurationSources.add(new MockConfigurationPropertySource("foo.bar", "bill")).     assertThat(this.propertySource.getProperty("foo.bar")).isEqualTo("baz"). }
false;public;0;6;;@Test public void getPropertyWhenNoneShouldReturnFirst() {     this.configurationSources.add(new MockConfigurationPropertySource("foo.bar", "baz")).     assertThat(this.propertySource.getProperty("foo.foo")).isNull(). }
false;public;0;7;;@Test public void getPropertyOriginShouldReturnOrigin() {     this.configurationSources.add(new MockConfigurationPropertySource("foo.bar", "baz", "line1")).     assertThat(this.propertySource.getOrigin("foo.bar").toString()).isEqualTo("line1"). }
false;public;0;6;;@Test public void getPropertyOriginWhenMissingShouldReturnNull() {     this.configurationSources.add(new MockConfigurationPropertySource("foo.bar", "baz", "line1")).     assertThat(this.propertySource.getOrigin("foo.foo")).isNull(). }
false;public;0;4;;@Test public void getNameShouldReturnName() {     assertThat(this.propertySource.getName()).isEqualTo("test"). }
false;public;0;4;;@Test public void getSourceShouldReturnSource() {     assertThat(this.propertySource.getSource()).isSameAs(this.configurationSources). }
