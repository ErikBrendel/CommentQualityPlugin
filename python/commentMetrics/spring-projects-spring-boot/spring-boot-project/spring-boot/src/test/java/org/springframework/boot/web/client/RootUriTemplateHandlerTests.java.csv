commented;modifiers;parameterAmount;loc;comment;code
false;public;0;10;;@Before @SuppressWarnings("unchecked") public void setup() throws URISyntaxException {     MockitoAnnotations.initMocks(this).     this.uri = new URI("http://example.com/hello").     this.handler = new RootUriTemplateHandler("http://example.com", this.delegate).     given(this.delegate.expand(anyString(), any(Map.class))).willReturn(this.uri).     given(this.delegate.expand(anyString(), any(Object[].class))).willReturn(this.uri). }
false;public;0;6;;@Test public void createWithNullRootUriShouldThrowException() {     assertThatIllegalArgumentException().isThrownBy(() -> new RootUriTemplateHandler((String) null)).withMessageContaining("RootUri must not be null"). }
false;public;0;6;;@Test public void createWithNullHandlerShouldThrowException() {     assertThatIllegalArgumentException().isThrownBy(() -> new RootUriTemplateHandler("http://example.com", null)).withMessageContaining("Handler must not be null"). }
false;public;0;7;;@Test public void expandMapVariablesShouldPrefixRoot() {     HashMap<String, Object> uriVariables = new HashMap<>().     URI expanded = this.handler.expand("/hello", uriVariables).     verify(this.delegate).expand("http://example.com/hello", uriVariables).     assertThat(expanded).isEqualTo(this.uri). }
false;public;0;7;;@Test public void expandMapVariablesWhenPathDoesNotStartWithSlashShouldNotPrefixRoot() {     HashMap<String, Object> uriVariables = new HashMap<>().     URI expanded = this.handler.expand("http://spring.io/hello", uriVariables).     verify(this.delegate).expand("http://spring.io/hello", uriVariables).     assertThat(expanded).isEqualTo(this.uri). }
false;public;0;7;;@Test public void expandArrayVariablesShouldPrefixRoot() {     Object[] uriVariables = new Object[0].     URI expanded = this.handler.expand("/hello", uriVariables).     verify(this.delegate).expand("http://example.com/hello", uriVariables).     assertThat(expanded).isEqualTo(this.uri). }
false;public;0;7;;@Test public void expandArrayVariablesWhenPathDoesNotStartWithSlashShouldNotPrefixRoot() {     Object[] uriVariables = new Object[0].     URI expanded = this.handler.expand("http://spring.io/hello", uriVariables).     verify(this.delegate).expand("http://spring.io/hello", uriVariables).     assertThat(expanded).isEqualTo(this.uri). }
false;public;0;10;;@Test public void applyShouldWrapExistingTemplate() {     RestTemplate restTemplate = new RestTemplate().     restTemplate.setUriTemplateHandler(this.delegate).     this.handler = RootUriTemplateHandler.addTo(restTemplate, "http://example.com").     Object[] uriVariables = new Object[0].     URI expanded = this.handler.expand("/hello", uriVariables).     verify(this.delegate).expand("http://example.com/hello", uriVariables).     assertThat(expanded).isEqualTo(this.uri). }
