commented;modifiers;parameterAmount;loc;comment;code
false;public;0;8;;@Test public void explodedWarFileDocumentRootWhenRunningFromExplodedWar() throws Exception {     File webInfClasses = this.temporaryFolder.newFolder("test.war", "WEB-INF", "lib", "spring-boot.jar").     File directory = this.documentRoot.getExplodedWarFileDocumentRoot(webInfClasses).     assertThat(directory).isEqualTo(webInfClasses.getParentFile().getParentFile().getParentFile()). }
false;public;0;6;;@Test public void explodedWarFileDocumentRootWhenRunningFromPackagedWar() throws Exception {     File codeSourceFile = this.temporaryFolder.newFile("test.war").     File directory = this.documentRoot.getExplodedWarFileDocumentRoot(codeSourceFile).     assertThat(directory).isNull(). }
false;public;0;7;;@Test public void codeSourceArchivePath() throws Exception {     CodeSource codeSource = new CodeSource(new URL("file", "", "/some/test/path/"), (Certificate[]) null).     File codeSourceArchive = this.documentRoot.getCodeSourceArchive(codeSource).     assertThat(codeSourceArchive).isEqualTo(new File("/some/test/path/")). }
false;public;0;7;;@Test public void codeSourceArchivePathContainingSpaces() throws Exception {     CodeSource codeSource = new CodeSource(new URL("file", "", "/test/path/with%20space/"), (Certificate[]) null).     File codeSourceArchive = this.documentRoot.getCodeSourceArchive(codeSource).     assertThat(codeSourceArchive).isEqualTo(new File("/test/path/with space/")). }
