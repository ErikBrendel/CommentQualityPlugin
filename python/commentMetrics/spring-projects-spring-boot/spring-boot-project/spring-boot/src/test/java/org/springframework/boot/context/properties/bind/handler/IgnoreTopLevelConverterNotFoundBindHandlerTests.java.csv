commented;modifiers;parameterAmount;loc;comment;code
false;public;0;7;;@Before public void setup() {     MockConfigurationPropertySource source = new MockConfigurationPropertySource().     source.put("example", "bar").     this.sources.add(source).     this.binder = new Binder(this.sources). }
false;public;0;6;;@Test public void bindWhenHandlerNotPresentShouldFail() {     assertThatExceptionOfType(BindException.class).isThrownBy(() -> this.binder.bind("example", Bindable.of(Example.class))).withCauseInstanceOf(ConverterNotFoundException.class). }
false;public;0;5;;@Test public void bindWhenTopLevelContextAndExceptionIgnorableShouldNotFail() {     this.binder.bind("example", Bindable.of(Example.class), new IgnoreTopLevelConverterNotFoundBindHandler()). }
false;public;0;10;;@Test public void bindWhenExceptionNotIgnorableShouldFail() {     MockConfigurationPropertySource source = new MockConfigurationPropertySource().     source.put("example.foo", "1").     this.sources.add(source).     assertThatExceptionOfType(BindException.class).isThrownBy(() -> this.binder.bind("example", Bindable.of(Example.class), new IgnoreTopLevelConverterNotFoundBindHandler())).withCauseInstanceOf(IllegalStateException.class). }
false;public;0;10;;@Test public void bindWhenExceptionInNestedContextShouldFail() {     MockConfigurationPropertySource source = new MockConfigurationPropertySource().     source.put("example.map", "hello").     this.sources.add(source).     assertThatExceptionOfType(BindException.class).isThrownBy(() -> this.binder.bind("example", Bindable.of(Example.class), new IgnoreTopLevelConverterNotFoundBindHandler())).withCauseInstanceOf(ConverterNotFoundException.class). }
false;public;0;3;;public int getFoo() {     return this.foo. }
false;public;1;3;;public void setFoo(int foo) {     throw new IllegalStateException(). }
false;public;0;3;;public Map<String, String> getMap() {     return this.map. }
false;public;1;3;;public void setMap(Map<String, String> map) {     this.map = map. }
