commented;modifiers;parameterAmount;loc;comment;code
false;public;0;6;;@Test public void convertWithoutStyleShouldReturnMs() {     Long converted = this.conversionService.convert(Duration.ofSeconds(1), Long.class).     assertThat(converted).isEqualTo(1000). }
false;public;0;8;;@Test public void convertWithFormatShouldUseIgnoreFormat() {     Integer converted = (Integer) this.conversionService.convert(Duration.ofSeconds(1), MockDurationTypeDescriptor.get(null, DurationStyle.ISO8601), TypeDescriptor.valueOf(Integer.class)).     assertThat(converted).isEqualTo(1000). }
false;public;0;7;;@Test public void convertWithFormatAndUnitShouldUseFormatAndUnit() {     Byte converted = (Byte) this.conversionService.convert(Duration.ofSeconds(1), MockDurationTypeDescriptor.get(ChronoUnit.SECONDS, null), TypeDescriptor.valueOf(Byte.class)).     assertThat(converted).isEqualTo((byte) 1). }
false;public,static;0;4;;@Parameters(name = "{0}") public static Iterable<Object[]> conversionServices() {     return new ConversionServiceParameters(new DurationToNumberConverter()). }
