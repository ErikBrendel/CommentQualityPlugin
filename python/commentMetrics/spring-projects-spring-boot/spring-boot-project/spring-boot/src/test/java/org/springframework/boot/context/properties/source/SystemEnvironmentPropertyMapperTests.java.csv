commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected PropertyMapper getMapper() {     return SystemEnvironmentPropertyMapper.INSTANCE. }
false;public;0;10;;@Test public void mapFromStringShouldReturnBestGuess() {     assertThat(namesFromString("SERVER")).containsExactly("server").     assertThat(namesFromString("SERVER_PORT")).containsExactly("server.port").     assertThat(namesFromString("HOST_0")).containsExactly("host[0]").     assertThat(namesFromString("HOST_0_1")).containsExactly("host[0][1]").     assertThat(namesFromString("HOST_0_NAME")).containsExactly("host[0].name").     assertThat(namesFromString("HOST_F00_NAME")).containsExactly("host.f00.name").     assertThat(namesFromString("S-ERVER")).containsExactly("s-erver"). }
false;public;0;12;;@Test public void mapFromConfigurationShouldReturnBestGuess() {     assertThat(namesFromConfiguration("server")).containsExactly("SERVER").     assertThat(namesFromConfiguration("server.port")).containsExactly("SERVER_PORT").     assertThat(namesFromConfiguration("host[0]")).containsExactly("HOST_0").     assertThat(namesFromConfiguration("host[0][1]")).containsExactly("HOST_0_1").     assertThat(namesFromConfiguration("host[0].name")).containsExactly("HOST_0_NAME").     assertThat(namesFromConfiguration("host.f00.name")).containsExactly("HOST_F00_NAME").     assertThat(namesFromConfiguration("foo.the-bar")).containsExactly("FOO_THEBAR", "FOO_THE_BAR"). }
false;public;0;9;;@Test public void underscoreShouldNotMapToEmptyString() {     PropertyMapping[] mappings = getMapper().map("_").     boolean applicable = false.     for (PropertyMapping mapping : mappings) {         applicable = mapping.isApplicable(ConfigurationPropertyName.of("")).     }     assertThat(applicable).isFalse(). }
false;public;0;9;;@Test public void underscoreWithWhitespaceShouldNotMapToEmptyString() {     PropertyMapping[] mappings = getMapper().map("  _").     boolean applicable = false.     for (PropertyMapping mapping : mappings) {         applicable = mapping.isApplicable(ConfigurationPropertyName.of("")).     }     assertThat(applicable).isFalse(). }
