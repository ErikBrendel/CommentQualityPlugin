commented;modifiers;parameterAmount;loc;comment;code
false;public;0;12;;@Test public void bindWhenNotUsingNoUnboundElementsHandlerShouldBind() {     MockConfigurationPropertySource source = new MockConfigurationPropertySource().     source.put("example.foo", "bar").     source.put("example.baz", "bar").     this.sources.add(source).     this.binder = new Binder(this.sources).     Example bound = this.binder.bind(ConfigurationPropertyName.of("example"), Bindable.of(Example.class)).get().     assertThat(bound.getFoo()).isEqualTo("bar"). }
false;public;0;10;;@Test public void bindWhenUsingNoUnboundElementsHandlerShouldBind() {     MockConfigurationPropertySource source = new MockConfigurationPropertySource().     source.put("example.foo", "bar").     this.sources.add(source).     this.binder = new Binder(this.sources).     Example bound = this.binder.bind("example", Bindable.of(Example.class), new NoUnboundElementsBindHandler()).get().     assertThat(bound.getFoo()).isEqualTo("bar"). }
false;public;0;13;;@Test public void bindWhenUsingNoUnboundElementsHandlerThrowException() {     MockConfigurationPropertySource source = new MockConfigurationPropertySource().     source.put("example.foo", "bar").     source.put("example.baz", "bar").     this.sources.add(source).     this.binder = new Binder(this.sources).     assertThatExceptionOfType(BindException.class).isThrownBy(() -> this.binder.bind("example", Bindable.of(Example.class), new NoUnboundElementsBindHandler())).satisfies((ex) -> assertThat(ex.getCause().getMessage()).contains("The elements [example.baz] were left unbound")). }
false;public;0;11;;@Test public void bindWhenUsingNoUnboundElementsHandlerShouldBindIfPrefixDifferent() {     MockConfigurationPropertySource source = new MockConfigurationPropertySource().     source.put("example.foo", "bar").     source.put("other.baz", "bar").     this.sources.add(source).     this.binder = new Binder(this.sources).     Example bound = this.binder.bind("example", Bindable.of(Example.class), new NoUnboundElementsBindHandler()).get().     assertThat(bound.getFoo()).isEqualTo("bar"). }
false;public;0;13;;@Test public void bindWhenUsingNoUnboundElementsHandlerShouldBindIfUnboundSystemProperties() {     MockConfigurationPropertySource source = new MockConfigurationPropertySource().     source.put("example.foo", "bar").     source.put("example.other", "baz").     this.sources.add(source).     this.binder = new Binder(this.sources).     NoUnboundElementsBindHandler handler = new NoUnboundElementsBindHandler(BindHandler.DEFAULT, ((configurationPropertySource) -> false)).     Example bound = this.binder.bind("example", Bindable.of(Example.class), handler).get().     assertThat(bound.getFoo()).isEqualTo("bar"). }
false;public;0;3;;public String getFoo() {     return this.foo. }
false;public;1;3;;public void setFoo(String foo) {     this.foo = foo. }
