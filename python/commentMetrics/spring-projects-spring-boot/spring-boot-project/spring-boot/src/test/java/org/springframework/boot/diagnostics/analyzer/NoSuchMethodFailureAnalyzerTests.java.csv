commented;modifiers;parameterAmount;loc;comment;code
false;public;0;15;;@Test public void noSuchMethodErrorIsAnalyzed() {     Throwable failure = createFailure().     assertThat(failure).isNotNull().     FailureAnalysis analysis = new NoSuchMethodFailureAnalyzer().analyze(failure).     assertThat(analysis).isNotNull().     System.out.println(analysis.getDescription()).     assertThat(analysis.getDescription()).contains(NoSuchMethodFailureAnalyzerTests.class.getName() + ".createFailure(").contains("javax.servlet.ServletContext.addServlet" + "(Ljava/lang/String.Ljavax/servlet/Servlet.)" + "Ljavax/servlet/ServletRegistration$Dynamic.").contains("class, javax.servlet.ServletContext,"). }
false;private;0;11;;private Throwable createFailure() {     try {         ServletContext servletContext = mock(ServletContext.class).         servletContext.addServlet("example", new HttpServlet() {         }).         return null.     } catch (Throwable ex) {         return ex.     } }
