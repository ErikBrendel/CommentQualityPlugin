commented;modifiers;parameterAmount;loc;comment;code
false;public;0;7;;@Test public void createWhenNameIsNullShouldThrowException() {     assertThatIllegalArgumentException().isThrownBy(() -> new ValidationErrors(null, Collections.emptySet(), Collections.emptyList())).withMessageContaining("Name must not be null"). }
false;public;0;7;;@Test public void createWhenBoundPropertiesIsNullShouldThrowException() {     assertThatIllegalArgumentException().isThrownBy(() -> new ValidationErrors(NAME, null, Collections.emptyList())).withMessageContaining("BoundProperties must not be null"). }
false;public;0;7;;@Test public void createWhenErrorsIsNullShouldThrowException() {     assertThatIllegalArgumentException().isThrownBy(() -> new ValidationErrors(NAME, Collections.emptySet(), null)).withMessageContaining("Errors must not be null"). }
false;public;0;7;;@Test public void getNameShouldReturnName() {     ConfigurationPropertyName name = NAME.     ValidationErrors errors = new ValidationErrors(name, Collections.emptySet(), Collections.emptyList()).     assertThat((Object) errors.getName()).isEqualTo(name). }
false;public;0;8;;@Test public void getBoundPropertiesShouldReturnBoundProperties() {     Set<ConfigurationProperty> boundProperties = new LinkedHashSet<>().     boundProperties.add(new ConfigurationProperty(NAME, "foo", null)).     ValidationErrors errors = new ValidationErrors(NAME, boundProperties, Collections.emptyList()).     assertThat(errors.getBoundProperties()).isEqualTo(boundProperties). }
false;public;0;8;;@Test public void getErrorsShouldReturnErrors() {     List<ObjectError> allErrors = new ArrayList<>().     allErrors.add(new ObjectError("foo", "bar")).     ValidationErrors errors = new ValidationErrors(NAME, Collections.emptySet(), allErrors).     assertThat(errors.getAllErrors()).isEqualTo(allErrors). }
false;public;0;8;;@Test public void iteratorShouldIterateErrors() {     List<ObjectError> allErrors = new ArrayList<>().     allErrors.add(new ObjectError("foo", "bar")).     ValidationErrors errors = new ValidationErrors(NAME, Collections.emptySet(), allErrors).     assertThat(errors.iterator()).containsExactlyElementsOf(allErrors). }
false;public;0;15;;@Test public void getErrorsShouldAdaptFieldErrorsToBeOriginProviders() {     Set<ConfigurationProperty> boundProperties = new LinkedHashSet<>().     ConfigurationPropertyName name1 = ConfigurationPropertyName.of("foo.bar").     Origin origin1 = MockOrigin.of("line1").     boundProperties.add(new ConfigurationProperty(name1, "boot", origin1)).     ConfigurationPropertyName name2 = ConfigurationPropertyName.of("foo.baz.bar").     Origin origin2 = MockOrigin.of("line2").     boundProperties.add(new ConfigurationProperty(name2, "boot", origin2)).     List<ObjectError> allErrors = new ArrayList<>().     allErrors.add(new FieldError("objectname", "bar", "message")).     ValidationErrors errors = new ValidationErrors(ConfigurationPropertyName.of("foo.baz"), boundProperties, allErrors).     assertThat(Origin.from(errors.getAllErrors().get(0))).isEqualTo(origin2). }
