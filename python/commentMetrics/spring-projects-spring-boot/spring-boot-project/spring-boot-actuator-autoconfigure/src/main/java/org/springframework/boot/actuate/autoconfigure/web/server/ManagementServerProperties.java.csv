commented;modifiers;parameterAmount;loc;comment;code
true;public;0;3;/**  * Returns the management port or {@code null} if the  * {@link ServerProperties#getPort() server port} should be used.  * @return the port  * @see #setPort(Integer)  */ ;/**  * Returns the management port or {@code null} if the  * {@link ServerProperties#getPort() server port} should be used.  * @return the port  * @see #setPort(Integer)  */ public Integer getPort() {     return this.port. }
true;public;1;3;/**  * Sets the port of the management server, use {@code null} if the  * {@link ServerProperties#getPort() server port} should be used. To disable use 0.  * @param port the port  */ ;/**  * Sets the port of the management server, use {@code null} if the  * {@link ServerProperties#getPort() server port} should be used. To disable use 0.  * @param port the port  */ public void setPort(Integer port) {     this.port = port. }
false;public;0;3;;public InetAddress getAddress() {     return this.address. }
false;public;1;3;;public void setAddress(InetAddress address) {     this.address = address. }
false;public;0;3;;public Ssl getSsl() {     return this.ssl. }
false;public;1;3;;public void setSsl(Ssl ssl) {     this.ssl = ssl. }
false;public;0;3;;public Servlet getServlet() {     return this.servlet. }
true;public;0;3;/**  * Return the context path with no trailing slash (i.e. the '/' root context is  * represented as the empty string).  * @return the context path (no trailing slash)  */ ;/**  * Return the context path with no trailing slash (i.e. the '/' root context is  * represented as the empty string).  * @return the context path (no trailing slash)  */ public String getContextPath() {     return this.contextPath. }
false;public;1;4;;public void setContextPath(String contextPath) {     Assert.notNull(contextPath, "ContextPath must not be null").     this.contextPath = cleanContextPath(contextPath). }
false;private;1;6;;private String cleanContextPath(String contextPath) {     if (StringUtils.hasText(contextPath) && contextPath.endsWith("/")) {         return contextPath.substring(0, contextPath.length() - 1).     }     return contextPath. }
