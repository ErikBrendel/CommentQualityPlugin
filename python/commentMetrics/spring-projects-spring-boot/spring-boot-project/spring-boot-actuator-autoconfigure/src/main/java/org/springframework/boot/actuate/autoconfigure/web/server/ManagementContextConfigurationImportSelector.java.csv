commented;modifiers;parameterAmount;loc;comment;code
false;public;1;17;;@Override public String[] selectImports(AnnotationMetadata metadata) {     ManagementContextType contextType = (ManagementContextType) metadata.getAnnotationAttributes(EnableManagementContext.class.getName()).get("value").     // Find all management context configuration classes, filtering duplicates     List<ManagementConfiguration> configurations = getConfigurations().     OrderComparator.sort(configurations).     List<String> names = new ArrayList<>().     for (ManagementConfiguration configuration : configurations) {         if (configuration.getContextType() == ManagementContextType.ANY || configuration.getContextType() == contextType) {             names.add(configuration.getClassName()).         }     }     return StringUtils.toStringArray(names). }
false;private;0;9;;private List<ManagementConfiguration> getConfigurations() {     SimpleMetadataReaderFactory readerFactory = new SimpleMetadataReaderFactory(this.classLoader).     List<ManagementConfiguration> configurations = new ArrayList<>().     for (String className : loadFactoryNames()) {         addConfiguration(readerFactory, configurations, className).     }     return configurations. }
false;private;3;11;;private void addConfiguration(SimpleMetadataReaderFactory readerFactory, List<ManagementConfiguration> configurations, String className) {     try {         MetadataReader metadataReader = readerFactory.getMetadataReader(className).         configurations.add(new ManagementConfiguration(metadataReader)).     } catch (IOException ex) {         throw new RuntimeException("Failed to read annotation metadata for '" + className + "'", ex).     } }
false;protected;0;4;;protected List<String> loadFactoryNames() {     return SpringFactoriesLoader.loadFactoryNames(ManagementContextConfiguration.class, this.classLoader). }
false;public;1;4;;@Override public void setBeanClassLoader(ClassLoader classLoader) {     this.classLoader = classLoader. }
false;private;1;9;;private ManagementContextType readContextType(AnnotationMetadata annotationMetadata) {     Map<String, Object> annotationAttributes = annotationMetadata.getAnnotationAttributes(ManagementContextConfiguration.class.getName()).     return (annotationAttributes != null) ? (ManagementContextType) annotationAttributes.get("value") : ManagementContextType.ANY. }
false;private;1;7;;private int readOrder(AnnotationMetadata annotationMetadata) {     Map<String, Object> attributes = annotationMetadata.getAnnotationAttributes(Order.class.getName()).     Integer order = (attributes != null) ? (Integer) attributes.get("value") : null.     return (order != null) ? order : Ordered.LOWEST_PRECEDENCE. }
false;public;0;3;;public String getClassName() {     return this.className. }
false;public;0;4;;@Override public int getOrder() {     return this.order. }
false;public;0;3;;public ManagementContextType getContextType() {     return this.contextType. }
