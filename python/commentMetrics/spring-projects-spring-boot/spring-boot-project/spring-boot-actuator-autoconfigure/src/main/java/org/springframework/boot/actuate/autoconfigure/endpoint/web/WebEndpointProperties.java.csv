commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public Exposure getExposure() {     return this.exposure. }
false;public;0;3;;public String getBasePath() {     return this.basePath. }
false;public;1;5;;public void setBasePath(String basePath) {     Assert.isTrue(basePath.isEmpty() || basePath.startsWith("/"), "Base path must start with '/' or be empty").     this.basePath = cleanBasePath(basePath). }
false;private;1;6;;private String cleanBasePath(String basePath) {     if (StringUtils.hasText(basePath) && basePath.endsWith("/")) {         return basePath.substring(0, basePath.length() - 1).     }     return basePath. }
false;public;0;3;;public Map<String, String> getPathMapping() {     return this.pathMapping. }
false;public;0;3;;public Set<String> getInclude() {     return this.include. }
false;public;1;3;;public void setInclude(Set<String> include) {     this.include = include. }
false;public;0;3;;public Set<String> getExclude() {     return this.exclude. }
false;public;1;3;;public void setExclude(Set<String> exclude) {     this.exclude = exclude. }
