commented;modifiers;parameterAmount;loc;comment;code
false;public;3;10;;@Bean @ConditionalOnMissingBean(JmxEndpointsSupplier.class) public JmxEndpointDiscoverer jmxAnnotationEndpointDiscoverer(ParameterValueMapper parameterValueMapper, ObjectProvider<OperationInvokerAdvisor> invokerAdvisors, ObjectProvider<EndpointFilter<ExposableJmxEndpoint>> filters) {     return new JmxEndpointDiscoverer(this.applicationContext, parameterValueMapper, invokerAdvisors.orderedStream().collect(Collectors.toList()), filters.orderedStream().collect(Collectors.toList())). }
false;public;4;14;;@Bean @ConditionalOnSingleCandidate(MBeanServer.class) public JmxEndpointExporter jmxMBeanExporter(MBeanServer mBeanServer, Environment environment, ObjectProvider<ObjectMapper> objectMapper, JmxEndpointsSupplier jmxEndpointsSupplier) {     String contextId = ObjectUtils.getIdentityHexString(this.applicationContext).     EndpointObjectNameFactory objectNameFactory = new DefaultEndpointObjectNameFactory(this.properties, environment, mBeanServer, contextId).     JmxOperationResponseMapper responseMapper = new JacksonJmxOperationResponseMapper(objectMapper.getIfAvailable()).     return new JmxEndpointExporter(mBeanServer, objectNameFactory, responseMapper, jmxEndpointsSupplier.getEndpoints()). }
false;public;0;6;;@Bean public ExposeExcludePropertyEndpointFilter<ExposableJmxEndpoint> jmxIncludeExcludePropertyEndpointFilter() {     JmxEndpointProperties.Exposure exposure = this.properties.getExposure().     return new ExposeExcludePropertyEndpointFilter<>(ExposableJmxEndpoint.class, exposure.getInclude(), exposure.getExclude(), "*"). }
