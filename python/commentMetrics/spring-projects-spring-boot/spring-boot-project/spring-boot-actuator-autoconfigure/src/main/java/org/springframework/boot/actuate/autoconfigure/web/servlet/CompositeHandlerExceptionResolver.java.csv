commented;modifiers;parameterAmount;loc;comment;code
false;public;4;10;;@Override public ModelAndView resolveException(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex) {     if (this.resolvers == null) {         this.resolvers = extractResolvers().     }     return this.resolvers.stream().map((resolver) -> resolver.resolveException(request, response, handler, ex)).filter(Objects::nonNull).findFirst().orElse(null). }
false;private;0;11;;private List<HandlerExceptionResolver> extractResolvers() {     List<HandlerExceptionResolver> list = new ArrayList<>().     list.addAll(this.beanFactory.getBeansOfType(HandlerExceptionResolver.class).values()).     list.remove(this).     AnnotationAwareOrderComparator.sort(list).     if (list.isEmpty()) {         list.add(new DefaultHandlerExceptionResolver()).     }     return list. }
