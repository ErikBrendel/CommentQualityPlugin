commented;modifiers;parameterAmount;loc;comment;code
false;public;0;5;;@Bean @ConditionalOnMissingBean(JerseyTagsProvider.class) public DefaultJerseyTagsProvider jerseyTagsProvider() {     return new DefaultJerseyTagsProvider(). }
false;public;2;8;;@Bean public ResourceConfigCustomizer jerseyServerMetricsResourceConfigCustomizer(MeterRegistry meterRegistry, JerseyTagsProvider tagsProvider) {     Server server = this.properties.getWeb().getServer().     return (config) -> config.register(new MetricsApplicationEventListener(meterRegistry, tagsProvider, server.getRequestsMetricName(), server.isAutoTimeRequests(), new AnnotationUtilsAnnotationFinder())). }
false;public;0;9;;@Bean @Order(0) public MeterFilter jerseyMetricsUriTagFilter() {     String metricName = this.properties.getWeb().getServer().getRequestsMetricName().     MeterFilter filter = new OnlyOnceLoggingDenyMeterFilter(() -> String.format("Reached the maximum number of URI tags for '%s'.", metricName)).     return MeterFilter.maximumAllowableTags(metricName, "uri", this.properties.getWeb().getServer().getMaxUriTags(), filter). }
false;public;2;5;;@Override public <A extends Annotation> A findAnnotation(AnnotatedElement annotatedElement, Class<A> annotationType) {     return AnnotationUtils.findAnnotation(annotatedElement, annotationType). }
