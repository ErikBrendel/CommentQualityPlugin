commented;modifiers;parameterAmount;loc;comment;code
true;public;1;5;/* 	 * The error controller is present but not mapped as an endpoint in this context 	 * because of the DispatcherServlet having had its HandlerMapping explicitly disabled. 	 * So we expose the same feature but only for machine endpoints. 	 */ ;/* 	 * The error controller is present but not mapped as an endpoint in this context 	 * because of the DispatcherServlet having had its HandlerMapping explicitly disabled. 	 * So we expose the same feature but only for machine endpoints. 	 */ @Bean @ConditionalOnBean(ErrorAttributes.class) public ManagementErrorEndpoint errorEndpoint(ErrorAttributes errorAttributes) {     return new ManagementErrorEndpoint(errorAttributes). }
false;public;0;10;;@Bean(name = DispatcherServletAutoConfiguration.DEFAULT_DISPATCHER_SERVLET_BEAN_NAME) public DispatcherServlet dispatcherServlet() {     DispatcherServlet dispatcherServlet = new DispatcherServlet().     // Ensure the parent configuration does not leak down to us     dispatcherServlet.setDetectAllHandlerAdapters(false).     dispatcherServlet.setDetectAllHandlerExceptionResolvers(false).     dispatcherServlet.setDetectAllHandlerMappings(false).     dispatcherServlet.setDetectAllViewResolvers(false).     return dispatcherServlet. }
false;public;1;5;;@Bean(name = DispatcherServletAutoConfiguration.DEFAULT_DISPATCHER_SERVLET_REGISTRATION_BEAN_NAME) public DispatcherServletRegistrationBean dispatcherServletRegistrationBean(DispatcherServlet dispatcherServlet) {     return new DispatcherServletRegistrationBean(dispatcherServlet, "/"). }
false;public;0;4;;@Bean(name = DispatcherServlet.HANDLER_MAPPING_BEAN_NAME) public CompositeHandlerMapping compositeHandlerMapping() {     return new CompositeHandlerMapping(). }
false;public;1;5;;@Bean(name = DispatcherServlet.HANDLER_ADAPTER_BEAN_NAME) public CompositeHandlerAdapter compositeHandlerAdapter(ListableBeanFactory beanFactory) {     return new CompositeHandlerAdapter(beanFactory). }
false;public;0;4;;@Bean(name = DispatcherServlet.HANDLER_EXCEPTION_RESOLVER_BEAN_NAME) public CompositeHandlerExceptionResolver compositeHandlerExceptionResolver() {     return new CompositeHandlerExceptionResolver(). }
false;public;0;6;;@Bean @ConditionalOnMissingBean({ RequestContextListener.class, RequestContextFilter.class }) public RequestContextFilter requestContextFilter() {     return new OrderedRequestContextFilter(). }
