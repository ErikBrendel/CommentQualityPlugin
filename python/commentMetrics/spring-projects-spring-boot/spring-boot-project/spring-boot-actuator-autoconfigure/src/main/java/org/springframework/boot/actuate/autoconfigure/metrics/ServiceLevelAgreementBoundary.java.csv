commented;modifiers;parameterAmount;loc;comment;code
true;public;1;3;/**  * Return the underlying value of the SLA in form suitable to apply to the given meter  * type.  * @param meterType the meter type  * @return the value or {@code null} if the value cannot be applied  */ ;/**  * Return the underlying value of the SLA in form suitable to apply to the given meter  * type.  * @param meterType the meter type  * @return the value or {@code null} if the value cannot be applied  */ public Long getValue(Meter.Type meterType) {     return this.value.getValue(meterType). }
true;public,static;1;3;/**  * Return a new {@link ServiceLevelAgreementBoundary} instance for the given long  * value.  * @param value the source value  * @return a {@link ServiceLevelAgreementBoundary} instance  */ ;/**  * Return a new {@link ServiceLevelAgreementBoundary} instance for the given long  * value.  * @param value the source value  * @return a {@link ServiceLevelAgreementBoundary} instance  */ public static ServiceLevelAgreementBoundary valueOf(long value) {     return new ServiceLevelAgreementBoundary(MeterValue.valueOf(value)). }
true;public,static;1;3;/**  * Return a new {@link ServiceLevelAgreementBoundary} instance for the given String  * value.  * @param value the source value  * @return a {@link ServiceLevelAgreementBoundary} instance  */ ;/**  * Return a new {@link ServiceLevelAgreementBoundary} instance for the given String  * value.  * @param value the source value  * @return a {@link ServiceLevelAgreementBoundary} instance  */ public static ServiceLevelAgreementBoundary valueOf(String value) {     return new ServiceLevelAgreementBoundary(MeterValue.valueOf(value)). }
