commented;modifiers;parameterAmount;loc;comment;code
false;public;0;14;;@Before public void createContext() {     this.context = new AnnotationConfigWebApplicationContext().     this.context.setServletContext(new MockServletContext()).     this.context.register(JacksonAutoConfiguration.class, HttpMessageConvertersAutoConfiguration.class, WebMvcAutoConfiguration.class, DispatcherServletAutoConfiguration.class, EndpointAutoConfiguration.class, WebEndpointAutoConfiguration.class, ManagementContextAutoConfiguration.class, ServletManagementContextAutoConfiguration.class, BeansEndpointAutoConfiguration.class).     TestPropertyValues.of("management.endpoints.web.exposure.include:*").applyTo(this.context). }
false;public;0;8;;@Test public void corsIsDisabledByDefault() throws Exception {     createMockMvc().perform(options("/actuator/beans").header("Origin", "foo.example.com").header(HttpHeaders.ACCESS_CONTROL_REQUEST_METHOD, "GET")).andExpect(header().doesNotExist(HttpHeaders.ACCESS_CONTROL_ALLOW_ORIGIN)). }
false;public;0;11;;@Test public void settingAllowedOriginsEnablesCors() throws Exception {     TestPropertyValues.of("management.endpoints.web.cors.allowed-origins:foo.example.com").applyTo(this.context).     createMockMvc().perform(options("/actuator/beans").header("Origin", "bar.example.com").header(HttpHeaders.ACCESS_CONTROL_REQUEST_METHOD, "GET")).andExpect(status().isForbidden()).     performAcceptedCorsRequest(). }
false;public;0;8;;@Test public void maxAgeDefaultsTo30Minutes() throws Exception {     TestPropertyValues.of("management.endpoints.web.cors.allowed-origins:foo.example.com").applyTo(this.context).     performAcceptedCorsRequest().andExpect(header().string(HttpHeaders.ACCESS_CONTROL_MAX_AGE, "1800")). }
false;public;0;9;;@Test public void maxAgeCanBeConfigured() throws Exception {     TestPropertyValues.of("management.endpoints.web.cors.allowed-origins:foo.example.com", "management.endpoints.web.cors.max-age: 2400").applyTo(this.context).     performAcceptedCorsRequest().andExpect(header().string(HttpHeaders.ACCESS_CONTROL_MAX_AGE, "2400")). }
false;public;0;11;;@Test public void requestsWithDisallowedHeadersAreRejected() throws Exception {     TestPropertyValues.of("management.endpoints.web.cors.allowed-origins:foo.example.com").applyTo(this.context).     createMockMvc().perform(options("/actuator/beans").header("Origin", "foo.example.com").header(HttpHeaders.ACCESS_CONTROL_REQUEST_METHOD, "GET").header(HttpHeaders.ACCESS_CONTROL_REQUEST_HEADERS, "Alpha")).andExpect(status().isForbidden()). }
false;public;0;13;;@Test public void allowedHeadersCanBeConfigured() throws Exception {     TestPropertyValues.of("management.endpoints.web.cors.allowed-origins:foo.example.com", "management.endpoints.web.cors.allowed-headers:Alpha,Bravo").applyTo(this.context).     createMockMvc().perform(options("/actuator/beans").header("Origin", "foo.example.com").header(HttpHeaders.ACCESS_CONTROL_REQUEST_METHOD, "GET").header(HttpHeaders.ACCESS_CONTROL_REQUEST_HEADERS, "Alpha")).andExpect(status().isOk()).andExpect(header().string(HttpHeaders.ACCESS_CONTROL_ALLOW_HEADERS, "Alpha")). }
false;public;0;11;;@Test public void requestsWithDisallowedMethodsAreRejected() throws Exception {     TestPropertyValues.of("management.endpoints.web.cors.allowed-origins:foo.example.com").applyTo(this.context).     createMockMvc().perform(options("/actuator/health").header(HttpHeaders.ORIGIN, "foo.example.com").header(HttpHeaders.ACCESS_CONTROL_REQUEST_METHOD, "PATCH")).andExpect(status().isForbidden()). }
false;public;0;13;;@Test public void allowedMethodsCanBeConfigured() throws Exception {     TestPropertyValues.of("management.endpoints.web.cors.allowed-origins:foo.example.com", "management.endpoints.web.cors.allowed-methods:GET,HEAD").applyTo(this.context).     createMockMvc().perform(options("/actuator/beans").header(HttpHeaders.ORIGIN, "foo.example.com").header(HttpHeaders.ACCESS_CONTROL_REQUEST_METHOD, "HEAD")).andExpect(status().isOk()).andExpect(header().string(HttpHeaders.ACCESS_CONTROL_ALLOW_METHODS, "GET,HEAD")). }
false;public;0;9;;@Test public void credentialsCanBeAllowed() throws Exception {     TestPropertyValues.of("management.endpoints.web.cors.allowed-origins:foo.example.com", "management.endpoints.web.cors.allow-credentials:true").applyTo(this.context).     performAcceptedCorsRequest().andExpect(header().string(HttpHeaders.ACCESS_CONTROL_ALLOW_CREDENTIALS, "true")). }
false;public;0;9;;@Test public void credentialsCanBeDisabled() throws Exception {     TestPropertyValues.of("management.endpoints.web.cors.allowed-origins:foo.example.com", "management.endpoints.web.cors.allow-credentials:false").applyTo(this.context).     performAcceptedCorsRequest().andExpect(header().doesNotExist(HttpHeaders.ACCESS_CONTROL_ALLOW_CREDENTIALS)). }
false;private;0;4;;private MockMvc createMockMvc() {     this.context.refresh().     return MockMvcBuilders.webAppContextSetup(this.context).build(). }
false;private;0;3;;private ResultActions performAcceptedCorsRequest() throws Exception {     return performAcceptedCorsRequest("/actuator/beans"). }
false;private;1;8;;private ResultActions performAcceptedCorsRequest(String url) throws Exception {     return createMockMvc().perform(options(url).header(HttpHeaders.ORIGIN, "foo.example.com").header(HttpHeaders.ACCESS_CONTROL_REQUEST_METHOD, "GET")).andExpect(header().string(HttpHeaders.ACCESS_CONTROL_ALLOW_ORIGIN, "foo.example.com")).andExpect(status().isOk()). }
