commented;modifiers;parameterAmount;loc;comment;code
false;public;0;21;;@Test public void autoConfiguresThreadPoolMetricsWithEmbeddedServletJetty() {     new WebApplicationContextRunner(AnnotationConfigServletWebServerApplicationContext::new).withConfiguration(AutoConfigurations.of(JettyMetricsAutoConfiguration.class, ServletWebServerFactoryAutoConfiguration.class)).withUserConfiguration(ServletWebServerConfiguration.class, MeterRegistryConfiguration.class).run((context) -> {         context.publishEvent(new ApplicationStartedEvent(new SpringApplication(), null, context.getSourceApplicationContext())).         assertThat(context).hasSingleBean(JettyServerThreadPoolMetricsBinder.class).         SimpleMeterRegistry registry = context.getBean(SimpleMeterRegistry.class).         assertThat(registry.find("jetty.threads.config.min").meter()).isNotNull().     }). }
false;public;0;19;;@Test public void autoConfiguresThreadPoolMetricsWithEmbeddedReactiveJetty() {     new ReactiveWebApplicationContextRunner(AnnotationConfigReactiveWebServerApplicationContext::new).withConfiguration(AutoConfigurations.of(JettyMetricsAutoConfiguration.class, ReactiveWebServerFactoryAutoConfiguration.class)).withUserConfiguration(ReactiveWebServerConfiguration.class, MeterRegistryConfiguration.class).run((context) -> {         context.publishEvent(new ApplicationStartedEvent(new SpringApplication(), null, context.getSourceApplicationContext())).         SimpleMeterRegistry registry = context.getBean(SimpleMeterRegistry.class).         assertThat(registry.find("jetty.threads.config.min").meter()).isNotNull().     }). }
false;public;0;11;;@Test public void allowsCustomJettyServerThreadPoolMetricsBinderToBeUsed() {     new WebApplicationContextRunner().withConfiguration(AutoConfigurations.of(JettyMetricsAutoConfiguration.class)).withUserConfiguration(CustomJettyServerThreadPoolMetricsBinder.class, MeterRegistryConfiguration.class).run((context) -> assertThat(context).hasSingleBean(JettyServerThreadPoolMetricsBinder.class).hasBean("customJettyServerThreadPoolMetricsBinder")). }
false;public;0;4;;@Bean public SimpleMeterRegistry meterRegistry() {     return new SimpleMeterRegistry(). }
false;public;0;4;;@Bean public JettyServletWebServerFactory jettyFactory() {     return new JettyServletWebServerFactory(0). }
false;public;0;4;;@Bean public JettyReactiveWebServerFactory jettyFactory() {     return new JettyReactiveWebServerFactory(0). }
false;public;0;4;;@Bean public HttpHandler httpHandler() {     return mock(HttpHandler.class). }
false;public;1;5;;@Bean public JettyServerThreadPoolMetricsBinder customJettyServerThreadPoolMetricsBinder(MeterRegistry meterRegistry) {     return new JettyServerThreadPoolMetricsBinder(meterRegistry). }
