commented;modifiers;parameterAmount;loc;comment;code
false;public;0;15;;@Test public void health() throws Exception {     this.mockMvc.perform(get("/actuator/health")).andExpect(status().isOk()).andDo(document("health", responseFields(fieldWithPath("status").description("Overall status of the application."), fieldWithPath("details").description("Details of the health of the application. Presence is controlled by " + "`management.endpoint.health.show-details`)."), fieldWithPath("details.*.status").description("Status of a specific part of the application."), subsectionWithPath("details.*.details").description("Details of the health of a specific part of the" + " application.")))). }
false;public;0;5;;@Test public void healthComponent() throws Exception {     this.mockMvc.perform(get("/actuator/health/db")).andExpect(status().isOk()).andDo(document("health/component", responseFields(componentFields))). }
false;public;0;6;;@Test public void healthComponentInstance() throws Exception {     this.mockMvc.perform(get("/actuator/health/broker/us1")).andExpect(status().isOk()).andDo(document("health/instance", responseFields(componentFields))). }
false;public;1;6;;@Bean public HealthEndpoint endpoint(Map<String, HealthIndicator> healthIndicators) {     return new HealthEndpoint(new CompositeHealthIndicator(new OrderedHealthAggregator(), new HealthIndicatorRegistryFactory().createHealthIndicatorRegistry(healthIndicators))). }
false;public;0;4;;@Bean public DiskSpaceHealthIndicator diskSpaceHealthIndicator() {     return new DiskSpaceHealthIndicator(new File("."), DataSize.ofMegabytes(10)). }
false;public;1;4;;@Bean public DataSourceHealthIndicator dbHealthIndicator(DataSource dataSource) {     return new DataSourceHealthIndicator(dataSource). }
false;public;0;10;;@Bean public CompositeHealthIndicator brokerHealthIndicator() {     Map<String, HealthIndicator> indicators = new LinkedHashMap<>().     indicators.put("us1", () -> Health.up().withDetail("version", "1.0.2").build()).     indicators.put("us2", () -> Health.up().withDetail("version", "1.0.4").build()).     return new CompositeHealthIndicator(new OrderedHealthAggregator(), indicators). }
