commented;modifiers;parameterAmount;loc;comment;code
false;protected;1;7;;@Override protected Map<String, Object> createModel(Operation operation) {     Map<String, Object> model = super.createModel(operation).     model.put("options", "-O").     return model. }
false;public;0;16;;@Test public void heapDump() throws Exception {     this.mockMvc.perform(get("/actuator/heapdump")).andExpect(status().isOk()).andDo(document("heapdump", new CurlRequestSnippet(CliDocumentation.multiLineFormat()) {          @Override         protected Map<String, Object> createModel(Operation operation) {             Map<String, Object> model = super.createModel(operation).             model.put("options", "-O").             return model.         }     })). }
false;protected;0;6;;@Override protected HeapDumper createHeapDumper() throws HeapDumperUnavailableException {     return (file, live) -> FileCopyUtils.copy("<<binary content>>", new FileWriter(file)). }
false;public;0;13;;@Bean public HeapDumpWebEndpoint endpoint() {     return new HeapDumpWebEndpoint() {          @Override         protected HeapDumper createHeapDumper() throws HeapDumperUnavailableException {             return (file, live) -> FileCopyUtils.copy("<<binary content>>", new FileWriter(file)).         }     }. }
