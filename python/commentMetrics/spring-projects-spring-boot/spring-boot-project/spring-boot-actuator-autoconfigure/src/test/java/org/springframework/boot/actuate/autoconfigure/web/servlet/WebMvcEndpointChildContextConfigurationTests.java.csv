commented;modifiers;parameterAmount;loc;comment;code
false;public;0;7;;@Test public void contextShouldConfigureRequestContextFilter() {     this.contextRunner.withUserConfiguration(WebMvcEndpointChildContextConfiguration.class).run((context) -> assertThat(context).hasSingleBean(OrderedRequestContextFilter.class)). }
false;public;0;8;;@Test public void contextShouldNotConfigureRequestContextFilterWhenPresent() {     this.contextRunner.withUserConfiguration(ExistingConfig.class, WebMvcEndpointChildContextConfiguration.class).run((context) -> {         assertThat(context).hasSingleBean(RequestContextFilter.class).         assertThat(context).hasBean("testRequestContextFilter").     }). }
false;public;0;9;;@Test public void contextShouldNotConfigureRequestContextFilterWhenRequestContextListenerPresent() {     this.contextRunner.withUserConfiguration(RequestContextListenerConfig.class, WebMvcEndpointChildContextConfiguration.class).run((context) -> {         assertThat(context).hasSingleBean(RequestContextListener.class).         assertThat(context).doesNotHaveBean(OrderedRequestContextFilter.class).     }). }
false;public;0;8;;@Test public void contextShouldConfigureDispatcherServletPathWithRootPath() {     this.contextRunner.withUserConfiguration(WebMvcEndpointChildContextConfiguration.class).run((context) -> assertThat(context.getBean(DispatcherServletPath.class).getPath()).isEqualTo("/")). }
false;public;0;4;;@Bean public RequestContextFilter testRequestContextFilter() {     return new RequestContextFilter(). }
false;public;0;4;;@Bean public RequestContextListener testRequestContextListener() {     return new RequestContextListener(). }
