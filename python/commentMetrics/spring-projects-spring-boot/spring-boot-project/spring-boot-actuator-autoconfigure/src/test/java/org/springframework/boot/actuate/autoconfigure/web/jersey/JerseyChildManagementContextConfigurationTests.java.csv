commented;modifiers;parameterAmount;loc;comment;code
false;public;0;8;;@Test public void autoConfigurationIsConditionalOnServletWebApplication() {     ApplicationContextRunner contextRunner = new ApplicationContextRunner().withConfiguration(AutoConfigurations.of(JerseySameManagementContextConfiguration.class)).     contextRunner.run((context) -> assertThat(context).doesNotHaveBean(JerseySameManagementContextConfiguration.class)). }
false;public;0;6;;@Test public void autoConfigurationIsConditionalOnClassResourceConfig() {     this.contextRunner.withClassLoader(new FilteredClassLoader(ResourceConfig.class)).run((context) -> assertThat(context).doesNotHaveBean(JerseySameManagementContextConfiguration.class)). }
false;public;0;11;;@Test public void resourceConfigIsCustomizedWithResourceConfigCustomizerBean() {     this.contextRunner.withUserConfiguration(CustomizerConfiguration.class).run((context) -> {         assertThat(context).hasSingleBean(ResourceConfig.class).         ResourceConfig config = context.getBean(ResourceConfig.class).         ResourceConfigCustomizer customizer = context.getBean(ResourceConfigCustomizer.class).         verify(customizer).customize(config).     }). }
false;public;0;7;;@Test public void jerseyApplicationPathIsAutoConfigured() {     this.contextRunner.run((context) -> {         JerseyApplicationPath bean = context.getBean(JerseyApplicationPath.class).         assertThat(bean.getPath()).isEqualTo("/").     }). }
false;public;0;9;;@Test @SuppressWarnings("unchecked") public void servletRegistrationBeanIsAutoConfigured() {     this.contextRunner.run((context) -> {         ServletRegistrationBean<ServletContainer> bean = context.getBean(ServletRegistrationBean.class).         assertThat(bean.getUrlMappings()).containsExactly("/*").     }). }
false;public;0;5;;@Test public void resourceConfigCustomizerBeanIsNotRequired() {     this.contextRunner.run((context) -> assertThat(context).hasSingleBean(ResourceConfig.class)). }
false;;0;4;;@Bean ResourceConfigCustomizer resourceConfigCustomizer() {     return mock(ResourceConfigCustomizer.class). }
