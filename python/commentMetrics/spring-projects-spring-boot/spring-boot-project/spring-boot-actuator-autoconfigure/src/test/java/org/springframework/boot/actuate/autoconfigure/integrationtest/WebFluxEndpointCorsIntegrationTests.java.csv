commented;modifiers;parameterAmount;loc;comment;code
false;public;0;13;;@Before public void createContext() {     this.context = new AnnotationConfigReactiveWebApplicationContext().     this.context.register(JacksonAutoConfiguration.class, CodecsAutoConfiguration.class, WebFluxAutoConfiguration.class, HttpHandlerAutoConfiguration.class, EndpointAutoConfiguration.class, WebEndpointAutoConfiguration.class, ManagementContextAutoConfiguration.class, ReactiveManagementContextAutoConfiguration.class, BeansEndpointAutoConfiguration.class).     TestPropertyValues.of("management.endpoints.web.exposure.include:*").applyTo(this.context). }
false;public;0;8;;@Test public void corsIsDisabledByDefault() {     createWebTestClient().options().uri("/actuator/beans").header("Origin", "spring.example.org").header(HttpHeaders.ACCESS_CONTROL_REQUEST_METHOD, "GET").exchange().expectStatus().isForbidden().expectHeader().doesNotExist(HttpHeaders.ACCESS_CONTROL_ALLOW_ORIGIN). }
false;public;0;11;;@Test public void settingAllowedOriginsEnablesCors() {     TestPropertyValues.of("management.endpoints.web.cors.allowed-origins:spring.example.org").applyTo(this.context).     createWebTestClient().options().uri("/actuator/beans").header("Origin", "test.example.org").header(HttpHeaders.ACCESS_CONTROL_REQUEST_METHOD, "GET").exchange().expectStatus().isForbidden().     performAcceptedCorsRequest("/actuator/beans"). }
false;public;0;8;;@Test public void maxAgeDefaultsTo30Minutes() {     TestPropertyValues.of("management.endpoints.web.cors.allowed-origins:spring.example.org").applyTo(this.context).     performAcceptedCorsRequest("/actuator/beans").expectHeader().valueEquals(HttpHeaders.ACCESS_CONTROL_MAX_AGE, "1800"). }
false;public;0;9;;@Test public void maxAgeCanBeConfigured() {     TestPropertyValues.of("management.endpoints.web.cors.allowed-origins:spring.example.org", "management.endpoints.web.cors.max-age: 2400").applyTo(this.context).     performAcceptedCorsRequest("/actuator/beans").expectHeader().valueEquals(HttpHeaders.ACCESS_CONTROL_MAX_AGE, "2400"). }
false;public;0;11;;@Test public void requestsWithDisallowedHeadersAreRejected() {     TestPropertyValues.of("management.endpoints.web.cors.allowed-origins:spring.example.org").applyTo(this.context).     createWebTestClient().options().uri("/actuator/beans").header("Origin", "spring.example.org").header(HttpHeaders.ACCESS_CONTROL_REQUEST_METHOD, "GET").header(HttpHeaders.ACCESS_CONTROL_REQUEST_HEADERS, "Alpha").exchange().expectStatus().isForbidden(). }
false;public;0;13;;@Test public void allowedHeadersCanBeConfigured() {     TestPropertyValues.of("management.endpoints.web.cors.allowed-origins:spring.example.org", "management.endpoints.web.cors.allowed-headers:Alpha,Bravo").applyTo(this.context).     createWebTestClient().options().uri("/actuator/beans").header("Origin", "spring.example.org").header(HttpHeaders.ACCESS_CONTROL_REQUEST_METHOD, "GET").header(HttpHeaders.ACCESS_CONTROL_REQUEST_HEADERS, "Alpha").exchange().expectStatus().isOk().expectHeader().valueEquals(HttpHeaders.ACCESS_CONTROL_ALLOW_HEADERS, "Alpha"). }
false;public;0;10;;@Test public void requestsWithDisallowedMethodsAreRejected() {     TestPropertyValues.of("management.endpoints.web.cors.allowed-origins:spring.example.org").applyTo(this.context).     createWebTestClient().options().uri("/actuator/beans").header("Origin", "spring.example.org").header(HttpHeaders.ACCESS_CONTROL_REQUEST_METHOD, "PATCH").exchange().expectStatus().isForbidden(). }
false;public;0;12;;@Test public void allowedMethodsCanBeConfigured() {     TestPropertyValues.of("management.endpoints.web.cors.allowed-origins:spring.example.org", "management.endpoints.web.cors.allowed-methods:GET,HEAD").applyTo(this.context).     createWebTestClient().options().uri("/actuator/beans").header("Origin", "spring.example.org").header(HttpHeaders.ACCESS_CONTROL_REQUEST_METHOD, "HEAD").exchange().expectStatus().isOk().expectHeader().valueEquals(HttpHeaders.ACCESS_CONTROL_ALLOW_METHODS, "GET,HEAD"). }
false;public;0;9;;@Test public void credentialsCanBeAllowed() {     TestPropertyValues.of("management.endpoints.web.cors.allowed-origins:spring.example.org", "management.endpoints.web.cors.allow-credentials:true").applyTo(this.context).     performAcceptedCorsRequest("/actuator/beans").expectHeader().valueEquals(HttpHeaders.ACCESS_CONTROL_ALLOW_CREDENTIALS, "true"). }
false;public;0;9;;@Test public void credentialsCanBeDisabled() {     TestPropertyValues.of("management.endpoints.web.cors.allowed-origins:spring.example.org", "management.endpoints.web.cors.allow-credentials:false").applyTo(this.context).     performAcceptedCorsRequest("/actuator/beans").expectHeader().doesNotExist(HttpHeaders.ACCESS_CONTROL_ALLOW_CREDENTIALS). }
false;private;0;5;;private WebTestClient createWebTestClient() {     this.context.refresh().     return WebTestClient.bindToApplicationContext(this.context).configureClient().baseUrl("https://spring.example.org").build(). }
false;private;1;8;;private WebTestClient.ResponseSpec performAcceptedCorsRequest(String url) {     return createWebTestClient().options().uri(url).header(HttpHeaders.ORIGIN, "spring.example.org").header(HttpHeaders.ACCESS_CONTROL_REQUEST_METHOD, "GET").exchange().expectHeader().valueEquals(HttpHeaders.ACCESS_CONTROL_ALLOW_ORIGIN, "spring.example.org").expectStatus().isOk(). }
