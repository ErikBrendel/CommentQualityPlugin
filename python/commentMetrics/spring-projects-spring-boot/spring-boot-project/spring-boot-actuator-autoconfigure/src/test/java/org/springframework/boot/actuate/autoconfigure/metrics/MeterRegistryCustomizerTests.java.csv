commented;modifiers;parameterAmount;loc;comment;code
false;public;0;9;;@Test public void commonTagsAreAppliedToAutoConfiguredBinders() {     this.contextRunner.withUserConfiguration(MeterRegistryCustomizerConfiguration.class).run((context) -> {         MeterRegistry registry = context.getBean(MeterRegistry.class).         registry.get("jvm.memory.used").tags("region", "us-east-1").gauge().     }). }
false;public;0;9;;@Test public void commonTagsAreAppliedBeforeRegistryIsInjectableElsewhere() {     this.contextRunner.withUserConfiguration(MeterRegistryCustomizerConfiguration.class).run((context) -> {         MeterRegistry registry = context.getBean(MeterRegistry.class).         registry.get("my.thing").tags("region", "us-east-1").gauge().     }). }
false;public;0;13;;@Test public void customizersCanBeAppliedToSpecificRegistryTypes() {     this.contextRunner.withUserConfiguration(MeterRegistryCustomizerConfiguration.class).run((context) -> {         MeterRegistry prometheus = context.getBean(PrometheusMeterRegistry.class).         prometheus.get("jvm.memory.used").tags("job", "myjob").gauge().         MeterRegistry atlas = context.getBean(AtlasMeterRegistry.class).         assertThat(atlas.find("jvm.memory.used").tags("job", "myjob").gauge()).isNull().     }). }
false;public;0;4;;@Bean public MeterRegistryCustomizer<MeterRegistry> commonTags() {     return (registry) -> registry.config().commonTags("region", "us-east-1"). }
false;public;0;4;;@Bean public MeterRegistryCustomizer<PrometheusMeterRegistry> prometheusOnlyCommonTags() {     return (registry) -> registry.config().commonTags("job", "myjob"). }
false;public;1;5;;@Bean public MyThing myThing(MeterRegistry registry) {     registry.gauge("my.thing", 0).     return new MyThing(). }
