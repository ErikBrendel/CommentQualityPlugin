commented;modifiers;parameterAmount;loc;comment;code
false;public;0;16;;@Test public void sessionsForUsername() throws Exception {     Map<String, Session> sessions = new HashMap<>().     sessions.put(sessionOne.getId(), sessionOne).     sessions.put(sessionTwo.getId(), sessionTwo).     sessions.put(sessionThree.getId(), sessionThree).     given(this.sessionRepository.findByPrincipalName("alice")).willReturn(sessions).     this.mockMvc.perform(get("/actuator/sessions").param("username", "alice")).andExpect(status().isOk()).andDo(document("sessions/username", responseFields(fieldWithPath("sessions").description("Sessions for the given username.")).andWithPrefix("sessions.[].", sessionFields), requestParameters(parameterWithName("username").description("Name of the user.")))). }
false;public;0;11;;@Test public void sessionWithId() throws Exception {     Map<String, Session> sessions = new HashMap<>().     sessions.put(sessionOne.getId(), sessionOne).     sessions.put(sessionTwo.getId(), sessionTwo).     sessions.put(sessionThree.getId(), sessionThree).     given(this.sessionRepository.findById(sessionTwo.getId())).willReturn(sessionTwo).     this.mockMvc.perform(get("/actuator/sessions/{id}", sessionTwo.getId())).andExpect(status().isOk()).andDo(document("sessions/id", responseFields(sessionFields))). }
false;public;0;6;;@Test public void deleteASession() throws Exception {     this.mockMvc.perform(delete("/actuator/sessions/{id}", sessionTwo.getId())).andExpect(status().isNoContent()).andDo(document("sessions/delete")).     verify(this.sessionRepository).deleteById(sessionTwo.getId()). }
false;private,static;2;5;;private static MapSession createSession(Instant creationTime, Instant lastAccessedTime) {     return createSession(UUID.randomUUID().toString(), creationTime, lastAccessedTime). }
false;private,static;3;7;;private static MapSession createSession(String id, Instant creationTime, Instant lastAccessedTime) {     MapSession session = new MapSession(id).     session.setCreationTime(creationTime).     session.setLastAccessedTime(lastAccessedTime).     return session. }
false;public;1;5;;@Bean public SessionsEndpoint endpoint(FindByIndexNameSessionRepository<?> sessionRepository) {     return new SessionsEndpoint(sessionRepository). }
