commented;modifiers;parameterAmount;loc;comment;code
false;public;0;5;;@Test public void backsOffWithoutAClock() {     this.contextRunner.run((context) -> assertThat(context).doesNotHaveBean(WavefrontMeterRegistry.class)). }
false;public;0;5;;@Test public void failsWithoutAnApiTokenWhenPublishingDirectly() {     this.contextRunner.withUserConfiguration(BaseConfiguration.class).run((context) -> assertThat(context).hasFailed()). }
false;public;0;8;;@Test public void autoConfigurationCanBeDisabled() {     this.contextRunner.withUserConfiguration(BaseConfiguration.class).withPropertyValues("management.metrics.export.wavefront.enabled=false").run((context) -> assertThat(context).doesNotHaveBean(WavefrontMeterRegistry.class).doesNotHaveBean(WavefrontConfig.class)). }
false;public;0;7;;@Test public void allowsConfigToBeCustomized() {     this.contextRunner.withUserConfiguration(CustomConfigConfiguration.class).run((context) -> assertThat(context).hasSingleBean(Clock.class).hasSingleBean(WavefrontMeterRegistry.class).hasSingleBean(WavefrontConfig.class).hasBean("customConfig")). }
false;public;0;9;;@Test public void allowsRegistryToBeCustomized() {     this.contextRunner.withUserConfiguration(CustomRegistryConfiguration.class).withPropertyValues("management.metrics.export.wavefront.api-token=abcde").run((context) -> assertThat(context).hasSingleBean(Clock.class).hasSingleBean(WavefrontConfig.class).hasSingleBean(WavefrontMeterRegistry.class).hasBean("customRegistry")). }
false;public;0;12;;@Test public void stopsMeterRegistryWhenContextIsClosed() {     this.contextRunner.withUserConfiguration(BaseConfiguration.class).withPropertyValues("management.metrics.export.wavefront.api-token=abcde").run((context) -> {         WavefrontMeterRegistry registry = context.getBean(WavefrontMeterRegistry.class).         assertThat(registry.isClosed()).isFalse().         context.close().         assertThat(registry.isClosed()).isTrue().     }). }
false;public;0;4;;@Bean public Clock clock() {     return Clock.SYSTEM. }
false;public;1;4;;@Override public String get(String key) {     return null. }
false;public;0;4;;@Override public String uri() {     return WavefrontConfig.DEFAULT_PROXY.uri(). }
false;public;0;14;;@Bean public WavefrontConfig customConfig() {     return new WavefrontConfig() {          @Override         public String get(String key) {             return null.         }          @Override         public String uri() {             return WavefrontConfig.DEFAULT_PROXY.uri().         }     }. }
false;public;2;5;;@Bean public WavefrontMeterRegistry customRegistry(WavefrontConfig config, Clock clock) {     return new WavefrontMeterRegistry(config, clock). }
