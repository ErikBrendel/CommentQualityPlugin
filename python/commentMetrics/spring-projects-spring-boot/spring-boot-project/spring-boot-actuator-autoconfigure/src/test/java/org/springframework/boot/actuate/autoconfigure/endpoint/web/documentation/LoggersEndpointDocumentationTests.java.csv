commented;modifiers;parameterAmount;loc;comment;code
false;public;0;14;;@Test public void allLoggers() throws Exception {     given(this.loggingSystem.getSupportedLogLevels()).willReturn(EnumSet.allOf(LogLevel.class)).     given(this.loggingSystem.getLoggerConfigurations()).willReturn(Arrays.asList(new LoggerConfiguration("ROOT", LogLevel.INFO, LogLevel.INFO), new LoggerConfiguration("com.example", LogLevel.DEBUG, LogLevel.DEBUG))).     this.mockMvc.perform(get("/actuator/loggers")).andExpect(status().isOk()).andDo(MockMvcRestDocumentation.document("loggers/all", responseFields(fieldWithPath("levels").description("Levels support by the logging system."), fieldWithPath("loggers").description("Loggers keyed by name.")).andWithPrefix("loggers.*.", levelFields))). }
false;public;0;8;;@Test public void logger() throws Exception {     given(this.loggingSystem.getLoggerConfiguration("com.example")).willReturn(new LoggerConfiguration("com.example", LogLevel.INFO, LogLevel.INFO)).     this.mockMvc.perform(get("/actuator/loggers/com.example")).andExpect(status().isOk()).andDo(MockMvcRestDocumentation.document("loggers/single", responseFields(levelFields))). }
false;public;0;14;;@Test public void setLogLevel() throws Exception {     this.mockMvc.perform(post("/actuator/loggers/com.example").content("{\"configuredLevel\":\"debug\"}").contentType(MediaType.APPLICATION_JSON)).andExpect(status().isNoContent()).andDo(MockMvcRestDocumentation.document("loggers/set", requestFields(fieldWithPath("configuredLevel").description("Level for the logger. May be" + " omitted to clear the level.").optional()))).     verify(this.loggingSystem).setLogLevel("com.example", LogLevel.DEBUG). }
false;public;0;9;;@Test public void clearLogLevel() throws Exception {     this.mockMvc.perform(post("/actuator/loggers/com.example").content("{}").contentType(MediaType.APPLICATION_JSON)).andExpect(status().isNoContent()).andDo(MockMvcRestDocumentation.document("loggers/clear")).     verify(this.loggingSystem).setLogLevel("com.example", null). }
false;public;1;4;;@Bean public LoggersEndpoint endpoint(LoggingSystem loggingSystem) {     return new LoggersEndpoint(loggingSystem). }
