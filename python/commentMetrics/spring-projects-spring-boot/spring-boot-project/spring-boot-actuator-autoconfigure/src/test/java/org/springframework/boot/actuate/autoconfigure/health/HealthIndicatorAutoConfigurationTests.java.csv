commented;modifiers;parameterAmount;loc;comment;code
false;public;0;6;;@Test public void runWhenNoOtherIndicatorsShouldCreateDefaultApplicationHealthIndicator() {     this.contextRunner.run((context) -> assertThat(context).getBean(HealthIndicator.class).isInstanceOf(ApplicationHealthIndicator.class)). }
false;public;0;6;;@Test public void runWhenHasDefinedIndicatorShouldNotCreateDefaultApplicationHealthIndicator() {     this.contextRunner.withUserConfiguration(CustomHealthIndicatorConfiguration.class).run((context) -> assertThat(context).getBean(HealthIndicator.class).isInstanceOf(CustomHealthIndicator.class)). }
false;public;0;8;;@Test public void runWhenHasDefaultsDisabledAndNoSingleIndicatorEnabledShouldCreateDefaultApplicationHealthIndicator() {     this.contextRunner.withUserConfiguration(CustomHealthIndicatorConfiguration.class).withPropertyValues("management.health.defaults.enabled:false").run((context) -> assertThat(context).getBean(HealthIndicator.class).isInstanceOf(ApplicationHealthIndicator.class)). }
false;public;0;9;;@Test public void runWhenHasDefaultsDisabledAndSingleIndicatorEnabledShouldCreateEnabledIndicator() {     this.contextRunner.withUserConfiguration(CustomHealthIndicatorConfiguration.class).withPropertyValues("management.health.defaults.enabled:false", "management.health.custom.enabled:true").run((context) -> assertThat(context).getBean(HealthIndicator.class).isInstanceOf(CustomHealthIndicator.class)). }
false;public;0;6;;@Test public void runShouldCreateOrderedHealthAggregator() {     this.contextRunner.run((context) -> assertThat(context).getBean(HealthAggregator.class).isInstanceOf(OrderedHealthAggregator.class)). }
false;public;0;13;;@Test public void runWhenHasCustomOrderPropertyShouldCreateOrderedHealthAggregator() {     this.contextRunner.withPropertyValues("management.health.status.order:UP,DOWN").run((context) -> {         OrderedHealthAggregator aggregator = context.getBean(OrderedHealthAggregator.class).         Map<String, Health> healths = new LinkedHashMap<>().         healths.put("foo", Health.up().build()).         healths.put("bar", Health.down().build()).         Health aggregate = aggregator.aggregate(healths).         assertThat(aggregate.getStatus()).isEqualTo(Status.UP).     }). }
false;public;0;7;;@Test public void runWhenHasCustomHealthAggregatorShouldNotCreateOrderedHealthAggregator() {     this.contextRunner.withUserConfiguration(CustomHealthAggregatorConfiguration.class).run((context) -> assertThat(context).getBean(HealthAggregator.class).isNotInstanceOf(OrderedHealthAggregator.class)). }
false;public;0;5;;@Bean @ConditionalOnEnabledHealthIndicator("custom") public HealthIndicator customHealthIndicator() {     return new CustomHealthIndicator(). }
false;public;0;4;;@Override public Health health() {     return Health.down().build(). }
false;public;0;4;;@Bean public HealthAggregator healthAggregator() {     return (healths) -> Health.down().build(). }
