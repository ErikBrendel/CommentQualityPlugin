commented;modifiers;parameterAmount;loc;comment;code
false;public;0;16;;@Test public void createManagementContextShouldCreateChildContextWithConfigClasses() {     this.parent.register(ParentConfiguration.class).     this.parent.refresh().     AnnotationConfigReactiveWebServerApplicationContext childContext = (AnnotationConfigReactiveWebServerApplicationContext) this.factory.createManagementContext(this.parent, TestConfiguration1.class, TestConfiguration2.class).     childContext.refresh().     assertThat(childContext.getBean(TestConfiguration1.class)).isNotNull().     assertThat(childContext.getBean(TestConfiguration2.class)).isNotNull().     assertThat(childContext.getBean(ReactiveWebServerFactoryAutoConfiguration.class)).isNotNull().     childContext.close().     this.parent.close(). }
false;public;0;4;;@Bean public ReactiveWebServerFactory reactiveWebServerFactory() {     return mock(ReactiveWebServerFactory.class). }
false;public;1;4;;@Bean public HttpHandler httpHandler(ApplicationContext applicationContext) {     return mock(HttpHandler.class). }
false;public;1;4;;@Bean public HttpHandler httpHandler(ApplicationContext applicationContext) {     return mock(HttpHandler.class). }
