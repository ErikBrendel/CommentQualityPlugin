commented;modifiers;parameterAmount;loc;comment;code
false;public;0;7;;@Before public void setup() {     MockitoAnnotations.initMocks(this).     this.interceptor = new CloudFoundrySecurityInterceptor(this.tokenValidator, this.securityService, "my-app-id").     this.request = new MockHttpServletRequest(). }
false;public;0;9;;@Test public void preHandleWhenRequestIsPreFlightShouldReturnTrue() {     this.request.setMethod("OPTIONS").     this.request.addHeader(HttpHeaders.ORIGIN, "http://example.com").     this.request.addHeader(HttpHeaders.ACCESS_CONTROL_REQUEST_METHOD, "GET").     SecurityResponse response = this.interceptor.preHandle(this.request, EndpointId.of("test")).     assertThat(response.getStatus()).isEqualTo(HttpStatus.OK). }
false;public;0;7;;@Test public void preHandleWhenTokenIsMissingShouldReturnFalse() {     SecurityResponse response = this.interceptor.preHandle(this.request, EndpointId.of("test")).     assertThat(response.getStatus()).isEqualTo(Reason.MISSING_AUTHORIZATION.getStatus()). }
false;public;0;8;;@Test public void preHandleWhenTokenIsNotBearerShouldReturnFalse() {     this.request.addHeader("Authorization", mockAccessToken()).     SecurityResponse response = this.interceptor.preHandle(this.request, EndpointId.of("test")).     assertThat(response.getStatus()).isEqualTo(Reason.MISSING_AUTHORIZATION.getStatus()). }
false;public;0;10;;@Test public void preHandleWhenApplicationIdIsNullShouldReturnFalse() {     this.interceptor = new CloudFoundrySecurityInterceptor(this.tokenValidator, this.securityService, null).     this.request.addHeader("Authorization", "bearer " + mockAccessToken()).     SecurityResponse response = this.interceptor.preHandle(this.request, EndpointId.of("test")).     assertThat(response.getStatus()).isEqualTo(Reason.SERVICE_UNAVAILABLE.getStatus()). }
false;public;0;10;;@Test public void preHandleWhenCloudFoundrySecurityServiceIsNullShouldReturnFalse() {     this.interceptor = new CloudFoundrySecurityInterceptor(this.tokenValidator, null, "my-app-id").     this.request.addHeader("Authorization", "bearer " + mockAccessToken()).     SecurityResponse response = this.interceptor.preHandle(this.request, EndpointId.of("test")).     assertThat(response.getStatus()).isEqualTo(Reason.SERVICE_UNAVAILABLE.getStatus()). }
false;public;0;10;;@Test public void preHandleWhenAccessIsNotAllowedShouldReturnFalse() {     String accessToken = mockAccessToken().     this.request.addHeader("Authorization", "bearer " + accessToken).     given(this.securityService.getAccessLevel(accessToken, "my-app-id")).willReturn(AccessLevel.RESTRICTED).     SecurityResponse response = this.interceptor.preHandle(this.request, EndpointId.of("test")).     assertThat(response.getStatus()).isEqualTo(Reason.ACCESS_DENIED.getStatus()). }
false;public;0;16;;@Test public void preHandleSuccessfulWithFullAccess() {     String accessToken = mockAccessToken().     this.request.addHeader("Authorization", "Bearer " + accessToken).     given(this.securityService.getAccessLevel(accessToken, "my-app-id")).willReturn(AccessLevel.FULL).     SecurityResponse response = this.interceptor.preHandle(this.request, EndpointId.of("test")).     ArgumentCaptor<Token> tokenArgumentCaptor = ArgumentCaptor.forClass(Token.class).     verify(this.tokenValidator).validate(tokenArgumentCaptor.capture()).     Token token = tokenArgumentCaptor.getValue().     assertThat(token.toString()).isEqualTo(accessToken).     assertThat(response.getStatus()).isEqualTo(HttpStatus.OK).     assertThat(this.request.getAttribute("cloudFoundryAccessLevel")).isEqualTo(AccessLevel.FULL). }
false;public;0;16;;@Test public void preHandleSuccessfulWithRestrictedAccess() {     String accessToken = mockAccessToken().     this.request.addHeader("Authorization", "Bearer " + accessToken).     given(this.securityService.getAccessLevel(accessToken, "my-app-id")).willReturn(AccessLevel.RESTRICTED).     SecurityResponse response = this.interceptor.preHandle(this.request, EndpointId.of("info")).     ArgumentCaptor<Token> tokenArgumentCaptor = ArgumentCaptor.forClass(Token.class).     verify(this.tokenValidator).validate(tokenArgumentCaptor.capture()).     Token token = tokenArgumentCaptor.getValue().     assertThat(token.toString()).isEqualTo(accessToken).     assertThat(response.getStatus()).isEqualTo(HttpStatus.OK).     assertThat(this.request.getAttribute("cloudFoundryAccessLevel")).isEqualTo(AccessLevel.RESTRICTED). }
false;private;0;5;;private String mockAccessToken() {     return "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJ0b3B0YWwu" + "Y29tIiwiZXhwIjoxNDI2NDIwODAwLCJhd2Vzb21lIjp0cnVlfQ." + Base64Utils.encodeToString("signature".getBytes()). }
