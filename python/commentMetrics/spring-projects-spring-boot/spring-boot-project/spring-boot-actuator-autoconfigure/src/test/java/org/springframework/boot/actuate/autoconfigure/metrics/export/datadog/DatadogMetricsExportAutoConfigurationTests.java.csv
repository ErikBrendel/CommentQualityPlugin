commented;modifiers;parameterAmount;loc;comment;code
false;public;0;5;;@Test public void backsOffWithoutAClock() {     this.contextRunner.run((context) -> assertThat(context).doesNotHaveBean(DatadogMeterRegistry.class)). }
false;public;0;5;;@Test public void failsWithoutAnApiKey() {     this.contextRunner.withUserConfiguration(BaseConfiguration.class).run((context) -> assertThat(context).hasFailed()). }
false;public;0;8;;@Test public void autoConfiguresConfigAndMeterRegistry() {     this.contextRunner.withUserConfiguration(BaseConfiguration.class).withPropertyValues("management.metrics.export.datadog.api-key=abcde").run((context) -> assertThat(context).hasSingleBean(DatadogMeterRegistry.class).hasSingleBean(DatadogConfig.class)). }
false;public;0;8;;@Test public void autoConfigurationCanBeDisabled() {     this.contextRunner.withUserConfiguration(BaseConfiguration.class).withPropertyValues("management.metrics.export.datadog.enabled=false").run((context) -> assertThat(context).doesNotHaveBean(DatadogMeterRegistry.class).doesNotHaveBean(DatadogConfig.class)). }
false;public;0;7;;@Test public void allowsCustomConfigToBeUsed() {     this.contextRunner.withUserConfiguration(CustomConfigConfiguration.class).run((context) -> assertThat(context).hasSingleBean(DatadogMeterRegistry.class).hasSingleBean(DatadogConfig.class).hasBean("customConfig")). }
false;public;0;8;;@Test public void allowsCustomRegistryToBeUsed() {     this.contextRunner.withUserConfiguration(CustomRegistryConfiguration.class).withPropertyValues("management.metrics.export.datadog.api-key=abcde").run((context) -> assertThat(context).hasSingleBean(DatadogMeterRegistry.class).hasBean("customRegistry").hasSingleBean(DatadogConfig.class)). }
false;public;0;12;;@Test public void stopsMeterRegistryWhenContextIsClosed() {     this.contextRunner.withUserConfiguration(BaseConfiguration.class).withPropertyValues("management.metrics.export.datadog.api-key=abcde").run((context) -> {         DatadogMeterRegistry registry = context.getBean(DatadogMeterRegistry.class).         assertThat(registry.isClosed()).isFalse().         context.close().         assertThat(registry.isClosed()).isTrue().     }). }
false;public;0;4;;@Bean public Clock clock() {     return Clock.SYSTEM. }
false;public;0;9;;@Bean public DatadogConfig customConfig() {     return (key) -> {         if ("datadog.apiKey".equals(key)) {             return "12345".         }         return null.     }. }
false;public;2;4;;@Bean public DatadogMeterRegistry customRegistry(DatadogConfig config, Clock clock) {     return new DatadogMeterRegistry(config, clock). }
