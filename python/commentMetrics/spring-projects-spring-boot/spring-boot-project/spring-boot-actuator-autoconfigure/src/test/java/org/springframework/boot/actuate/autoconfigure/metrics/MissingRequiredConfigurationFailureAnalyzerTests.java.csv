commented;modifiers;parameterAmount;loc;comment;code
false;public;0;10;;@Test public void analyzesMissingRequiredConfiguration() {     FailureAnalysis analysis = new MissingRequiredConfigurationFailureAnalyzer().analyze(createFailure(MissingAccountIdConfiguration.class)).     assertThat(analysis).isNotNull().     assertThat(analysis.getDescription()).isEqualTo("accountId must be set to report metrics to New Relic.").     assertThat(analysis.getAction()).isEqualTo("Update your application to provide the missing configuration."). }
false;private;1;10;;private Exception createFailure(Class<?> configuration) {     try (ConfigurableApplicationContext context = new AnnotationConfigApplicationContext(configuration)) {         fail("Expected failure did not occur").         return null.     } catch (Exception ex) {         return ex.     } }
false;public;0;4;;@Bean public NewRelicMeterRegistry meterRegistry() {     return new NewRelicMeterRegistry((key) -> null, Clock.SYSTEM). }
