commented;modifiers;parameterAmount;loc;comment;code
false;public;0;10;;@Test public void binderMetricsAreSearchableFromTheComposite() {     this.contextRunner.run((context) -> {         CompositeMeterRegistry composite = context.getBean(CompositeMeterRegistry.class).         composite.get("jvm.memory.used").gauge().         context.getBeansOfType(MeterRegistry.class).forEach((name, registry) -> registry.get("jvm.memory.used").gauge()).     }). }
false;public;0;9;;@Test public void customizersAreAppliedBeforeBindersAreCreated() {     new ApplicationContextRunner().withConfiguration(AutoConfigurations.of(MetricsAutoConfiguration.class, SimpleMetricsExportAutoConfiguration.class)).withUserConfiguration(TestConfiguration.class).run((context) -> {     }). }
false;;1;5;;@Bean MeterBinder testBinder(Alpha thing) {     return (registry) -> {     }. }
false;;0;4;;@Bean MeterRegistryCustomizer<?> testCustomizer() {     return (registry) -> registry.config().commonTags("testTag", "testValue"). }
false;;0;4;;@Bean Alpha alpha() {     return new Alpha(). }
false;;1;4;;@Bean Bravo bravo(Alpha alpha) {     return new Bravo(alpha). }
false;public;2;12;;@Override public Object postProcessAfterInitialization(Object bean, String beanName) throws BeansException {     if (bean instanceof Bravo) {         MeterRegistry meterRegistry = context.getBean(MeterRegistry.class).         meterRegistry.gauge("test", 1).         System.out.println(meterRegistry.find("test").gauge().getId().getTags()).     }     return bean. }
false;static;1;19;;@Bean static BeanPostProcessor testPostProcessor(ApplicationContext context) {     return new BeanPostProcessor() {          @Override         public Object postProcessAfterInitialization(Object bean, String beanName) throws BeansException {             if (bean instanceof Bravo) {                 MeterRegistry meterRegistry = context.getBean(MeterRegistry.class).                 meterRegistry.gauge("test", 1).                 System.out.println(meterRegistry.find("test").gauge().getId().getTags()).             }             return bean.         }     }. }
