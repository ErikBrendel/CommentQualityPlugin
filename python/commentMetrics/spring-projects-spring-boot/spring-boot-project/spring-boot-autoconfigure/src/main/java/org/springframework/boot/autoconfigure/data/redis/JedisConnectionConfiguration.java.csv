commented;modifiers;parameterAmount;loc;comment;code
false;public;1;7;;@Bean @ConditionalOnMissingBean(RedisConnectionFactory.class) public JedisConnectionFactory redisConnectionFactory(ObjectProvider<JedisClientConfigurationBuilderCustomizer> builderCustomizers) throws UnknownHostException {     return createJedisConnectionFactory(builderCustomizers). }
false;private;1;13;;private JedisConnectionFactory createJedisConnectionFactory(ObjectProvider<JedisClientConfigurationBuilderCustomizer> builderCustomizers) {     JedisClientConfiguration clientConfiguration = getJedisClientConfiguration(builderCustomizers).     if (getSentinelConfig() != null) {         return new JedisConnectionFactory(getSentinelConfig(), clientConfiguration).     }     if (getClusterConfiguration() != null) {         return new JedisConnectionFactory(getClusterConfiguration(), clientConfiguration).     }     return new JedisConnectionFactory(getStandaloneConfig(), clientConfiguration). }
false;private;1;15;;private JedisClientConfiguration getJedisClientConfiguration(ObjectProvider<JedisClientConfigurationBuilderCustomizer> builderCustomizers) {     JedisClientConfigurationBuilder builder = applyProperties(JedisClientConfiguration.builder()).     RedisProperties.Pool pool = getProperties().getJedis().getPool().     if (pool != null) {         applyPooling(pool, builder).     }     if (StringUtils.hasText(getProperties().getUrl())) {         customizeConfigurationFromUrl(builder).     }     builderCustomizers.orderedStream().forEach((customizer) -> customizer.customize(builder)).     return builder.build(). }
false;private;1;11;;private JedisClientConfigurationBuilder applyProperties(JedisClientConfigurationBuilder builder) {     if (getProperties().isSsl()) {         builder.useSsl().     }     if (getProperties().getTimeout() != null) {         Duration timeout = getProperties().getTimeout().         builder.readTimeout(timeout).connectTimeout(timeout).     }     return builder. }
false;private;2;4;;private void applyPooling(RedisProperties.Pool pool, JedisClientConfiguration.JedisClientConfigurationBuilder builder) {     builder.usePooling().poolConfig(jedisPoolConfig(pool)). }
false;private;1;10;;private JedisPoolConfig jedisPoolConfig(RedisProperties.Pool pool) {     JedisPoolConfig config = new JedisPoolConfig().     config.setMaxTotal(pool.getMaxActive()).     config.setMaxIdle(pool.getMaxIdle()).     config.setMinIdle(pool.getMinIdle()).     if (pool.getMaxWait() != null) {         config.setMaxWaitMillis(pool.getMaxWait().toMillis()).     }     return config. }
false;private;1;7;;private void customizeConfigurationFromUrl(JedisClientConfiguration.JedisClientConfigurationBuilder builder) {     ConnectionInfo connectionInfo = parseUrl(getProperties().getUrl()).     if (connectionInfo.isUseSsl()) {         builder.useSsl().     } }
