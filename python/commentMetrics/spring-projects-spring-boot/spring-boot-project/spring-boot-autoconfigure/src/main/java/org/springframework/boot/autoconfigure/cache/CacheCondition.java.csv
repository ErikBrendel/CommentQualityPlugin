commented;modifiers;parameterAmount;loc;comment;code
false;public;2;27;;@Override public ConditionOutcome getMatchOutcome(ConditionContext context, AnnotatedTypeMetadata metadata) {     String sourceClass = "".     if (metadata instanceof ClassMetadata) {         sourceClass = ((ClassMetadata) metadata).getClassName().     }     ConditionMessage.Builder message = ConditionMessage.forCondition("Cache", sourceClass).     Environment environment = context.getEnvironment().     try {         BindResult<CacheType> specified = Binder.get(environment).bind("spring.cache.type", CacheType.class).         if (!specified.isBound()) {             return ConditionOutcome.match(message.because("automatic cache type")).         }         CacheType required = CacheConfigurations.getType(((AnnotationMetadata) metadata).getClassName()).         if (specified.get() == required) {             return ConditionOutcome.match(message.because(specified.get() + " cache type")).         }     } catch (BindException ex) {     }     return ConditionOutcome.noMatch(message.because("unknown cache type")). }
