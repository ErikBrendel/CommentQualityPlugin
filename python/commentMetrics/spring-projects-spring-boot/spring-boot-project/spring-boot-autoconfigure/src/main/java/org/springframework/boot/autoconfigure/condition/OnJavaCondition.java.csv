# id;timestamp;commentText;codeText;commentWords;codeWords
OnJavaCondition -> private boolean isWithin(JavaVersion runningVersion, Range range, 			JavaVersion version);1507173536;Determines if the {@code runningVersion} is within the specified range of versions._@param runningVersion the current version._@param range the range_@param version the bounds of the range_@return if this version is within the specified range;private boolean isWithin(JavaVersion runningVersion, Range range,_			JavaVersion version) {_		if (range == Range.EQUAL_OR_NEWER) {_			return runningVersion.isEqualOrNewerThan(version)__		}_		if (range == Range.OLDER_THAN) {_			return runningVersion.isOlderThan(version)__		}_		throw new IllegalStateException("Unknown range " + range)__	};determines,if,the,code,running,version,is,within,the,specified,range,of,versions,param,running,version,the,current,version,param,range,the,range,param,version,the,bounds,of,the,range,return,if,this,version,is,within,the,specified,range;private,boolean,is,within,java,version,running,version,range,range,java,version,version,if,range,range,return,running,version,is,equal,or,newer,than,version,if,range,range,return,running,version,is,older,than,version,throw,new,illegal,state,exception,unknown,range,range
OnJavaCondition -> private boolean isWithin(JavaVersion runningVersion, Range range, 			JavaVersion version);1507661773;Determines if the {@code runningVersion} is within the specified range of versions._@param runningVersion the current version._@param range the range_@param version the bounds of the range_@return if this version is within the specified range;private boolean isWithin(JavaVersion runningVersion, Range range,_			JavaVersion version) {_		if (range == Range.EQUAL_OR_NEWER) {_			return runningVersion.isEqualOrNewerThan(version)__		}_		if (range == Range.OLDER_THAN) {_			return runningVersion.isOlderThan(version)__		}_		throw new IllegalStateException("Unknown range " + range)__	};determines,if,the,code,running,version,is,within,the,specified,range,of,versions,param,running,version,the,current,version,param,range,the,range,param,version,the,bounds,of,the,range,return,if,this,version,is,within,the,specified,range;private,boolean,is,within,java,version,running,version,range,range,java,version,version,if,range,range,return,running,version,is,equal,or,newer,than,version,if,range,range,return,running,version,is,older,than,version,throw,new,illegal,state,exception,unknown,range,range
OnJavaCondition -> private boolean isWithin(JavaVersion runningVersion, Range range, 			JavaVersion version);1525376698;Determines if the {@code runningVersion} is within the specified range of versions._@param runningVersion the current version._@param range the range_@param version the bounds of the range_@return if this version is within the specified range;private boolean isWithin(JavaVersion runningVersion, Range range,_			JavaVersion version) {_		if (range == Range.EQUAL_OR_NEWER) {_			return runningVersion.isEqualOrNewerThan(version)__		}_		if (range == Range.OLDER_THAN) {_			return runningVersion.isOlderThan(version)__		}_		throw new IllegalStateException("Unknown range " + range)__	};determines,if,the,code,running,version,is,within,the,specified,range,of,versions,param,running,version,the,current,version,param,range,the,range,param,version,the,bounds,of,the,range,return,if,this,version,is,within,the,specified,range;private,boolean,is,within,java,version,running,version,range,range,java,version,version,if,range,range,return,running,version,is,equal,or,newer,than,version,if,range,range,return,running,version,is,older,than,version,throw,new,illegal,state,exception,unknown,range,range
OnJavaCondition -> private boolean isWithin(JavaVersion runningVersion, Range range, 			JavaVersion version);1532738143;Determines if the {@code runningVersion} is within the specified range of versions._@param runningVersion the current version._@param range the range_@param version the bounds of the range_@return if this version is within the specified range;private boolean isWithin(JavaVersion runningVersion, Range range,_			JavaVersion version) {_		if (range == Range.EQUAL_OR_NEWER) {_			return runningVersion.isEqualOrNewerThan(version)__		}_		if (range == Range.OLDER_THAN) {_			return runningVersion.isOlderThan(version)__		}_		throw new IllegalStateException("Unknown range " + range)__	};determines,if,the,code,running,version,is,within,the,specified,range,of,versions,param,running,version,the,current,version,param,range,the,range,param,version,the,bounds,of,the,range,return,if,this,version,is,within,the,specified,range;private,boolean,is,within,java,version,running,version,range,range,java,version,version,if,range,range,return,running,version,is,equal,or,newer,than,version,if,range,range,return,running,version,is,older,than,version,throw,new,illegal,state,exception,unknown,range,range
