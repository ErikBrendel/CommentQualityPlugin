commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public SQLDialect getSqlDialect() {     return this.sqlDialect. }
false;public;1;3;;public void setSqlDialect(SQLDialect sqlDialect) {     this.sqlDialect = sqlDialect. }
true;public;1;6;/**  * Determine the {@link SQLDialect} to use based on this configuration and the primary  * {@link DataSource}.  * @param dataSource the data source  * @return the {@code SQLDialect} to use for that {@link DataSource}  */ ;/**  * Determine the {@link SQLDialect} to use based on this configuration and the primary  * {@link DataSource}.  * @param dataSource the data source  * @return the {@code SQLDialect} to use for that {@link DataSource}  */ public SQLDialect determineSqlDialect(DataSource dataSource) {     if (this.sqlDialect != null) {         return this.sqlDialect.     }     return SqlDialectLookup.getDialect(dataSource). }
