commented;modifiers;parameterAmount;loc;comment;code
false;public;0;12;;@PostConstruct public void checkTemplateLocationExists() {     if (logger.isWarnEnabled() && this.properties.isCheckTemplateLocation()) {         List<TemplateLocation> locations = getLocations().         if (locations.stream().noneMatch(this::locationExists)) {             logger.warn("Cannot find template location(s): " + locations + " (please add some templates, " + "check your FreeMarker configuration, or set " + "spring.freemarker.checkTemplateLocation=false)").         }     } }
false;private;0;8;;private List<TemplateLocation> getLocations() {     List<TemplateLocation> locations = new ArrayList<>().     for (String templateLoaderPath : this.properties.getTemplateLoaderPath()) {         TemplateLocation location = new TemplateLocation(templateLoaderPath).         locations.add(location).     }     return locations. }
false;private;1;3;;private boolean locationExists(TemplateLocation location) {     return location.exists(this.applicationContext). }
