commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public String getErrorPath() {     return this.errorProperties.getPath(). }
false;public;2;10;;@RequestMapping(produces = MediaType.TEXT_HTML_VALUE) public ModelAndView errorHtml(HttpServletRequest request, HttpServletResponse response) {     HttpStatus status = getStatus(request).     Map<String, Object> model = Collections.unmodifiableMap(getErrorAttributes(request, isIncludeStackTrace(request, MediaType.TEXT_HTML))).     response.setStatus(status.value()).     ModelAndView modelAndView = resolveErrorView(request, response, status, model).     return (modelAndView != null) ? modelAndView : new ModelAndView("error", model). }
false;public;1;7;;@RequestMapping public ResponseEntity<Map<String, Object>> error(HttpServletRequest request) {     Map<String, Object> body = getErrorAttributes(request, isIncludeStackTrace(request, MediaType.ALL)).     HttpStatus status = getStatus(request).     return new ResponseEntity<>(body, status). }
true;protected;2;11;/**  * Determine if the stacktrace attribute should be included.  * @param request the source request  * @param produces the media type produced (or {@code MediaType.ALL})  * @return if the stacktrace attribute should be included  */ ;/**  * Determine if the stacktrace attribute should be included.  * @param request the source request  * @param produces the media type produced (or {@code MediaType.ALL})  * @return if the stacktrace attribute should be included  */ protected boolean isIncludeStackTrace(HttpServletRequest request, MediaType produces) {     IncludeStacktrace include = getErrorProperties().getIncludeStacktrace().     if (include == IncludeStacktrace.ALWAYS) {         return true.     }     if (include == IncludeStacktrace.ON_TRACE_PARAM) {         return getTraceParameter(request).     }     return false. }
true;protected;0;3;/**  * Provide access to the error properties.  * @return the error properties  */ ;/**  * Provide access to the error properties.  * @return the error properties  */ protected ErrorProperties getErrorProperties() {     return this.errorProperties. }
