commented;modifiers;parameterAmount;loc;comment;code
true;;2;2;/**  * Apply the filter to the given auto-configuration class candidates.  * @param autoConfigurationClasses the auto-configuration classes being considered.  * This array may contain {@code null} elements. Implementations should not change the  * values in this array.  * @param autoConfigurationMetadata access to the meta-data generated by the  * auto-configure annotation processor  * @return a boolean array indicating which of the auto-configuration classes should  * be imported. The returned array must be the same size as the incoming  * {@code autoConfigurationClasses} parameter. Entries containing {@code false} will  * not be imported.  */ ;/**  * Apply the filter to the given auto-configuration class candidates.  * @param autoConfigurationClasses the auto-configuration classes being considered.  * This array may contain {@code null} elements. Implementations should not change the  * values in this array.  * @param autoConfigurationMetadata access to the meta-data generated by the  * auto-configure annotation processor  * @return a boolean array indicating which of the auto-configuration classes should  * be imported. The returned array must be the same size as the incoming  * {@code autoConfigurationClasses} parameter. Entries containing {@code false} will  * not be imported.  */ boolean[] match(String[] autoConfigurationClasses, AutoConfigurationMetadata autoConfigurationMetadata).
