# id;timestamp;commentText;codeText;commentWords;codeWords
ConcurrentKafkaListenerContainerFactoryConfigurer -> void setErrorHandler(ErrorHandler errorHandler);1535469298;Set the {@link ErrorHandler} to use._@param errorHandler the error handler;void setErrorHandler(ErrorHandler errorHandler) {_		this.errorHandler = errorHandler__	};set,the,link,error,handler,to,use,param,error,handler,the,error,handler;void,set,error,handler,error,handler,error,handler,this,error,handler,error,handler
ConcurrentKafkaListenerContainerFactoryConfigurer -> void setErrorHandler(ErrorHandler errorHandler);1537343931;Set the {@link ErrorHandler} to use._@param errorHandler the error handler;void setErrorHandler(ErrorHandler errorHandler) {_		this.errorHandler = errorHandler__	};set,the,link,error,handler,to,use,param,error,handler,the,error,handler;void,set,error,handler,error,handler,error,handler,this,error,handler,error,handler
ConcurrentKafkaListenerContainerFactoryConfigurer -> void setErrorHandler(ErrorHandler errorHandler);1550073998;Set the {@link ErrorHandler} to use._@param errorHandler the error handler;void setErrorHandler(ErrorHandler errorHandler) {_		this.errorHandler = errorHandler__	};set,the,link,error,handler,to,use,param,error,handler,the,error,handler;void,set,error,handler,error,handler,error,handler,this,error,handler,error,handler
ConcurrentKafkaListenerContainerFactoryConfigurer -> void setMessageConverter(RecordMessageConverter messageConverter);1507173536;Set the {@link RecordMessageConverter} to use._@param messageConverter the message converter;void setMessageConverter(RecordMessageConverter messageConverter) {_		this.messageConverter = messageConverter__	};set,the,link,record,message,converter,to,use,param,message,converter,the,message,converter;void,set,message,converter,record,message,converter,message,converter,this,message,converter,message,converter
ConcurrentKafkaListenerContainerFactoryConfigurer -> void setMessageConverter(RecordMessageConverter messageConverter);1508947448;Set the {@link RecordMessageConverter} to use._@param messageConverter the message converter;void setMessageConverter(RecordMessageConverter messageConverter) {_		this.messageConverter = messageConverter__	};set,the,link,record,message,converter,to,use,param,message,converter,the,message,converter;void,set,message,converter,record,message,converter,message,converter,this,message,converter,message,converter
ConcurrentKafkaListenerContainerFactoryConfigurer -> void setMessageConverter(RecordMessageConverter messageConverter);1511157177;Set the {@link RecordMessageConverter} to use._@param messageConverter the message converter;void setMessageConverter(RecordMessageConverter messageConverter) {_		this.messageConverter = messageConverter__	};set,the,link,record,message,converter,to,use,param,message,converter,the,message,converter;void,set,message,converter,record,message,converter,message,converter,this,message,converter,message,converter
ConcurrentKafkaListenerContainerFactoryConfigurer -> void setMessageConverter(RecordMessageConverter messageConverter);1513391527;Set the {@link RecordMessageConverter} to use._@param messageConverter the message converter;void setMessageConverter(RecordMessageConverter messageConverter) {_		this.messageConverter = messageConverter__	};set,the,link,record,message,converter,to,use,param,message,converter,the,message,converter;void,set,message,converter,record,message,converter,message,converter,this,message,converter,message,converter
ConcurrentKafkaListenerContainerFactoryConfigurer -> void setMessageConverter(RecordMessageConverter messageConverter);1515159336;Set the {@link RecordMessageConverter} to use._@param messageConverter the message converter;void setMessageConverter(RecordMessageConverter messageConverter) {_		this.messageConverter = messageConverter__	};set,the,link,record,message,converter,to,use,param,message,converter,the,message,converter;void,set,message,converter,record,message,converter,message,converter,this,message,converter,message,converter
ConcurrentKafkaListenerContainerFactoryConfigurer -> void setMessageConverter(RecordMessageConverter messageConverter);1515453546;Set the {@link RecordMessageConverter} to use._@param messageConverter the message converter;void setMessageConverter(RecordMessageConverter messageConverter) {_		this.messageConverter = messageConverter__	};set,the,link,record,message,converter,to,use,param,message,converter,the,message,converter;void,set,message,converter,record,message,converter,message,converter,this,message,converter,message,converter
ConcurrentKafkaListenerContainerFactoryConfigurer -> void setMessageConverter(RecordMessageConverter messageConverter);1525271459;Set the {@link RecordMessageConverter} to use._@param messageConverter the message converter;void setMessageConverter(RecordMessageConverter messageConverter) {_		this.messageConverter = messageConverter__	};set,the,link,record,message,converter,to,use,param,message,converter,the,message,converter;void,set,message,converter,record,message,converter,message,converter,this,message,converter,message,converter
ConcurrentKafkaListenerContainerFactoryConfigurer -> void setMessageConverter(RecordMessageConverter messageConverter);1534945262;Set the {@link RecordMessageConverter} to use._@param messageConverter the message converter;void setMessageConverter(RecordMessageConverter messageConverter) {_		this.messageConverter = messageConverter__	};set,the,link,record,message,converter,to,use,param,message,converter,the,message,converter;void,set,message,converter,record,message,converter,message,converter,this,message,converter,message,converter
ConcurrentKafkaListenerContainerFactoryConfigurer -> void setMessageConverter(RecordMessageConverter messageConverter);1535469298;Set the {@link RecordMessageConverter} to use._@param messageConverter the message converter;void setMessageConverter(RecordMessageConverter messageConverter) {_		this.messageConverter = messageConverter__	};set,the,link,record,message,converter,to,use,param,message,converter,the,message,converter;void,set,message,converter,record,message,converter,message,converter,this,message,converter,message,converter
ConcurrentKafkaListenerContainerFactoryConfigurer -> void setMessageConverter(RecordMessageConverter messageConverter);1537343931;Set the {@link RecordMessageConverter} to use._@param messageConverter the message converter;void setMessageConverter(RecordMessageConverter messageConverter) {_		this.messageConverter = messageConverter__	};set,the,link,record,message,converter,to,use,param,message,converter,the,message,converter;void,set,message,converter,record,message,converter,message,converter,this,message,converter,message,converter
ConcurrentKafkaListenerContainerFactoryConfigurer -> void setReplyTemplate(KafkaTemplate<Object, Object> replyTemplate);1508947448;Set the {@link KafkaTemplate} to use to send replies._@param replyTemplate the reply template;void setReplyTemplate(KafkaTemplate<Object, Object> replyTemplate) {_		this.replyTemplate = replyTemplate__	};set,the,link,kafka,template,to,use,to,send,replies,param,reply,template,the,reply,template;void,set,reply,template,kafka,template,object,object,reply,template,this,reply,template,reply,template
ConcurrentKafkaListenerContainerFactoryConfigurer -> void setReplyTemplate(KafkaTemplate<Object, Object> replyTemplate);1511157177;Set the {@link KafkaTemplate} to use to send replies._@param replyTemplate the reply template;void setReplyTemplate(KafkaTemplate<Object, Object> replyTemplate) {_		this.replyTemplate = replyTemplate__	};set,the,link,kafka,template,to,use,to,send,replies,param,reply,template,the,reply,template;void,set,reply,template,kafka,template,object,object,reply,template,this,reply,template,reply,template
ConcurrentKafkaListenerContainerFactoryConfigurer -> void setReplyTemplate(KafkaTemplate<Object, Object> replyTemplate);1513391527;Set the {@link KafkaTemplate} to use to send replies._@param replyTemplate the reply template;void setReplyTemplate(KafkaTemplate<Object, Object> replyTemplate) {_		this.replyTemplate = replyTemplate__	};set,the,link,kafka,template,to,use,to,send,replies,param,reply,template,the,reply,template;void,set,reply,template,kafka,template,object,object,reply,template,this,reply,template,reply,template
ConcurrentKafkaListenerContainerFactoryConfigurer -> void setReplyTemplate(KafkaTemplate<Object, Object> replyTemplate);1515159336;Set the {@link KafkaTemplate} to use to send replies._@param replyTemplate the reply template;void setReplyTemplate(KafkaTemplate<Object, Object> replyTemplate) {_		this.replyTemplate = replyTemplate__	};set,the,link,kafka,template,to,use,to,send,replies,param,reply,template,the,reply,template;void,set,reply,template,kafka,template,object,object,reply,template,this,reply,template,reply,template
ConcurrentKafkaListenerContainerFactoryConfigurer -> void setReplyTemplate(KafkaTemplate<Object, Object> replyTemplate);1515453546;Set the {@link KafkaTemplate} to use to send replies._@param replyTemplate the reply template;void setReplyTemplate(KafkaTemplate<Object, Object> replyTemplate) {_		this.replyTemplate = replyTemplate__	};set,the,link,kafka,template,to,use,to,send,replies,param,reply,template,the,reply,template;void,set,reply,template,kafka,template,object,object,reply,template,this,reply,template,reply,template
ConcurrentKafkaListenerContainerFactoryConfigurer -> void setReplyTemplate(KafkaTemplate<Object, Object> replyTemplate);1525271459;Set the {@link KafkaTemplate} to use to send replies._@param replyTemplate the reply template;void setReplyTemplate(KafkaTemplate<Object, Object> replyTemplate) {_		this.replyTemplate = replyTemplate__	};set,the,link,kafka,template,to,use,to,send,replies,param,reply,template,the,reply,template;void,set,reply,template,kafka,template,object,object,reply,template,this,reply,template,reply,template
ConcurrentKafkaListenerContainerFactoryConfigurer -> void setReplyTemplate(KafkaTemplate<Object, Object> replyTemplate);1534945262;Set the {@link KafkaTemplate} to use to send replies._@param replyTemplate the reply template;void setReplyTemplate(KafkaTemplate<Object, Object> replyTemplate) {_		this.replyTemplate = replyTemplate__	};set,the,link,kafka,template,to,use,to,send,replies,param,reply,template,the,reply,template;void,set,reply,template,kafka,template,object,object,reply,template,this,reply,template,reply,template
ConcurrentKafkaListenerContainerFactoryConfigurer -> void setReplyTemplate(KafkaTemplate<Object, Object> replyTemplate);1535469298;Set the {@link KafkaTemplate} to use to send replies._@param replyTemplate the reply template;void setReplyTemplate(KafkaTemplate<Object, Object> replyTemplate) {_		this.replyTemplate = replyTemplate__	};set,the,link,kafka,template,to,use,to,send,replies,param,reply,template,the,reply,template;void,set,reply,template,kafka,template,object,object,reply,template,this,reply,template,reply,template
ConcurrentKafkaListenerContainerFactoryConfigurer -> void setReplyTemplate(KafkaTemplate<Object, Object> replyTemplate);1537343931;Set the {@link KafkaTemplate} to use to send replies._@param replyTemplate the reply template;void setReplyTemplate(KafkaTemplate<Object, Object> replyTemplate) {_		this.replyTemplate = replyTemplate__	};set,the,link,kafka,template,to,use,to,send,replies,param,reply,template,the,reply,template;void,set,reply,template,kafka,template,object,object,reply,template,this,reply,template,reply,template
ConcurrentKafkaListenerContainerFactoryConfigurer -> void setReplyTemplate(KafkaTemplate<Object, Object> replyTemplate);1550073998;Set the {@link KafkaTemplate} to use to send replies._@param replyTemplate the reply template;void setReplyTemplate(KafkaTemplate<Object, Object> replyTemplate) {_		this.replyTemplate = replyTemplate__	};set,the,link,kafka,template,to,use,to,send,replies,param,reply,template,the,reply,template;void,set,reply,template,kafka,template,object,object,reply,template,this,reply,template,reply,template
ConcurrentKafkaListenerContainerFactoryConfigurer -> public void configure( 			ConcurrentKafkaListenerContainerFactory<Object, Object> listenerFactory, 			ConsumerFactory<Object, Object> consumerFactory);1513391527;Configure the specified Kafka listener container factory. The factory can be_further tuned and default settings can be overridden._@param listenerFactory the {@link ConcurrentKafkaListenerContainerFactory} instance_to configure_@param consumerFactory the {@link ConsumerFactory} to use;public void configure(_			ConcurrentKafkaListenerContainerFactory<Object, Object> listenerFactory,_			ConsumerFactory<Object, Object> consumerFactory) {_		listenerFactory.setConsumerFactory(consumerFactory)__		configureListenerFactory(listenerFactory)__		configureContainer(listenerFactory.getContainerProperties())__	};configure,the,specified,kafka,listener,container,factory,the,factory,can,be,further,tuned,and,default,settings,can,be,overridden,param,listener,factory,the,link,concurrent,kafka,listener,container,factory,instance,to,configure,param,consumer,factory,the,link,consumer,factory,to,use;public,void,configure,concurrent,kafka,listener,container,factory,object,object,listener,factory,consumer,factory,object,object,consumer,factory,listener,factory,set,consumer,factory,consumer,factory,configure,listener,factory,listener,factory,configure,container,listener,factory,get,container,properties
ConcurrentKafkaListenerContainerFactoryConfigurer -> public void configure( 			ConcurrentKafkaListenerContainerFactory<Object, Object> listenerFactory, 			ConsumerFactory<Object, Object> consumerFactory);1515159336;Configure the specified Kafka listener container factory. The factory can be_further tuned and default settings can be overridden._@param listenerFactory the {@link ConcurrentKafkaListenerContainerFactory} instance_to configure_@param consumerFactory the {@link ConsumerFactory} to use;public void configure(_			ConcurrentKafkaListenerContainerFactory<Object, Object> listenerFactory,_			ConsumerFactory<Object, Object> consumerFactory) {_		listenerFactory.setConsumerFactory(consumerFactory)__		configureListenerFactory(listenerFactory)__		configureContainer(listenerFactory.getContainerProperties())__	};configure,the,specified,kafka,listener,container,factory,the,factory,can,be,further,tuned,and,default,settings,can,be,overridden,param,listener,factory,the,link,concurrent,kafka,listener,container,factory,instance,to,configure,param,consumer,factory,the,link,consumer,factory,to,use;public,void,configure,concurrent,kafka,listener,container,factory,object,object,listener,factory,consumer,factory,object,object,consumer,factory,listener,factory,set,consumer,factory,consumer,factory,configure,listener,factory,listener,factory,configure,container,listener,factory,get,container,properties
ConcurrentKafkaListenerContainerFactoryConfigurer -> public void configure( 			ConcurrentKafkaListenerContainerFactory<Object, Object> listenerFactory, 			ConsumerFactory<Object, Object> consumerFactory);1515453546;Configure the specified Kafka listener container factory. The factory can be_further tuned and default settings can be overridden._@param listenerFactory the {@link ConcurrentKafkaListenerContainerFactory} instance_to configure_@param consumerFactory the {@link ConsumerFactory} to use;public void configure(_			ConcurrentKafkaListenerContainerFactory<Object, Object> listenerFactory,_			ConsumerFactory<Object, Object> consumerFactory) {_		listenerFactory.setConsumerFactory(consumerFactory)__		configureListenerFactory(listenerFactory)__		configureContainer(listenerFactory.getContainerProperties())__	};configure,the,specified,kafka,listener,container,factory,the,factory,can,be,further,tuned,and,default,settings,can,be,overridden,param,listener,factory,the,link,concurrent,kafka,listener,container,factory,instance,to,configure,param,consumer,factory,the,link,consumer,factory,to,use;public,void,configure,concurrent,kafka,listener,container,factory,object,object,listener,factory,consumer,factory,object,object,consumer,factory,listener,factory,set,consumer,factory,consumer,factory,configure,listener,factory,listener,factory,configure,container,listener,factory,get,container,properties
ConcurrentKafkaListenerContainerFactoryConfigurer -> public void configure( 			ConcurrentKafkaListenerContainerFactory<Object, Object> listenerFactory, 			ConsumerFactory<Object, Object> consumerFactory);1525271459;Configure the specified Kafka listener container factory. The factory can be_further tuned and default settings can be overridden._@param listenerFactory the {@link ConcurrentKafkaListenerContainerFactory} instance_to configure_@param consumerFactory the {@link ConsumerFactory} to use;public void configure(_			ConcurrentKafkaListenerContainerFactory<Object, Object> listenerFactory,_			ConsumerFactory<Object, Object> consumerFactory) {_		listenerFactory.setConsumerFactory(consumerFactory)__		configureListenerFactory(listenerFactory)__		configureContainer(listenerFactory.getContainerProperties())__	};configure,the,specified,kafka,listener,container,factory,the,factory,can,be,further,tuned,and,default,settings,can,be,overridden,param,listener,factory,the,link,concurrent,kafka,listener,container,factory,instance,to,configure,param,consumer,factory,the,link,consumer,factory,to,use;public,void,configure,concurrent,kafka,listener,container,factory,object,object,listener,factory,consumer,factory,object,object,consumer,factory,listener,factory,set,consumer,factory,consumer,factory,configure,listener,factory,listener,factory,configure,container,listener,factory,get,container,properties
ConcurrentKafkaListenerContainerFactoryConfigurer -> public void configure( 			ConcurrentKafkaListenerContainerFactory<Object, Object> listenerFactory, 			ConsumerFactory<Object, Object> consumerFactory);1534945262;Configure the specified Kafka listener container factory. The factory can be_further tuned and default settings can be overridden._@param listenerFactory the {@link ConcurrentKafkaListenerContainerFactory} instance_to configure_@param consumerFactory the {@link ConsumerFactory} to use;public void configure(_			ConcurrentKafkaListenerContainerFactory<Object, Object> listenerFactory,_			ConsumerFactory<Object, Object> consumerFactory) {_		listenerFactory.setConsumerFactory(consumerFactory)__		configureListenerFactory(listenerFactory)__		configureContainer(listenerFactory.getContainerProperties())__	};configure,the,specified,kafka,listener,container,factory,the,factory,can,be,further,tuned,and,default,settings,can,be,overridden,param,listener,factory,the,link,concurrent,kafka,listener,container,factory,instance,to,configure,param,consumer,factory,the,link,consumer,factory,to,use;public,void,configure,concurrent,kafka,listener,container,factory,object,object,listener,factory,consumer,factory,object,object,consumer,factory,listener,factory,set,consumer,factory,consumer,factory,configure,listener,factory,listener,factory,configure,container,listener,factory,get,container,properties
ConcurrentKafkaListenerContainerFactoryConfigurer -> public void configure( 			ConcurrentKafkaListenerContainerFactory<Object, Object> listenerFactory, 			ConsumerFactory<Object, Object> consumerFactory);1535469298;Configure the specified Kafka listener container factory. The factory can be_further tuned and default settings can be overridden._@param listenerFactory the {@link ConcurrentKafkaListenerContainerFactory} instance_to configure_@param consumerFactory the {@link ConsumerFactory} to use;public void configure(_			ConcurrentKafkaListenerContainerFactory<Object, Object> listenerFactory,_			ConsumerFactory<Object, Object> consumerFactory) {_		listenerFactory.setConsumerFactory(consumerFactory)__		configureListenerFactory(listenerFactory)__		configureContainer(listenerFactory.getContainerProperties())__	};configure,the,specified,kafka,listener,container,factory,the,factory,can,be,further,tuned,and,default,settings,can,be,overridden,param,listener,factory,the,link,concurrent,kafka,listener,container,factory,instance,to,configure,param,consumer,factory,the,link,consumer,factory,to,use;public,void,configure,concurrent,kafka,listener,container,factory,object,object,listener,factory,consumer,factory,object,object,consumer,factory,listener,factory,set,consumer,factory,consumer,factory,configure,listener,factory,listener,factory,configure,container,listener,factory,get,container,properties
ConcurrentKafkaListenerContainerFactoryConfigurer -> public void configure( 			ConcurrentKafkaListenerContainerFactory<Object, Object> listenerFactory, 			ConsumerFactory<Object, Object> consumerFactory);1537343931;Configure the specified Kafka listener container factory. The factory can be_further tuned and default settings can be overridden._@param listenerFactory the {@link ConcurrentKafkaListenerContainerFactory} instance_to configure_@param consumerFactory the {@link ConsumerFactory} to use;public void configure(_			ConcurrentKafkaListenerContainerFactory<Object, Object> listenerFactory,_			ConsumerFactory<Object, Object> consumerFactory) {_		listenerFactory.setConsumerFactory(consumerFactory)__		configureListenerFactory(listenerFactory)__		configureContainer(listenerFactory.getContainerProperties())__	};configure,the,specified,kafka,listener,container,factory,the,factory,can,be,further,tuned,and,default,settings,can,be,overridden,param,listener,factory,the,link,concurrent,kafka,listener,container,factory,instance,to,configure,param,consumer,factory,the,link,consumer,factory,to,use;public,void,configure,concurrent,kafka,listener,container,factory,object,object,listener,factory,consumer,factory,object,object,consumer,factory,listener,factory,set,consumer,factory,consumer,factory,configure,listener,factory,listener,factory,configure,container,listener,factory,get,container,properties
ConcurrentKafkaListenerContainerFactoryConfigurer -> public void configure( 			ConcurrentKafkaListenerContainerFactory<Object, Object> listenerFactory, 			ConsumerFactory<Object, Object> consumerFactory);1550073998;Configure the specified Kafka listener container factory. The factory can be_further tuned and default settings can be overridden._@param listenerFactory the {@link ConcurrentKafkaListenerContainerFactory} instance_to configure_@param consumerFactory the {@link ConsumerFactory} to use;public void configure(_			ConcurrentKafkaListenerContainerFactory<Object, Object> listenerFactory,_			ConsumerFactory<Object, Object> consumerFactory) {_		listenerFactory.setConsumerFactory(consumerFactory)__		configureListenerFactory(listenerFactory)__		configureContainer(listenerFactory.getContainerProperties())__	};configure,the,specified,kafka,listener,container,factory,the,factory,can,be,further,tuned,and,default,settings,can,be,overridden,param,listener,factory,the,link,concurrent,kafka,listener,container,factory,instance,to,configure,param,consumer,factory,the,link,consumer,factory,to,use;public,void,configure,concurrent,kafka,listener,container,factory,object,object,listener,factory,consumer,factory,object,object,consumer,factory,listener,factory,set,consumer,factory,consumer,factory,configure,listener,factory,listener,factory,configure,container,listener,factory,get,container,properties
ConcurrentKafkaListenerContainerFactoryConfigurer -> void setAfterRollbackProcessor( 			AfterRollbackProcessor<Object, Object> afterRollbackProcessor);1535469298;Set the {@link AfterRollbackProcessor} to use._@param afterRollbackProcessor the after rollback processor;void setAfterRollbackProcessor(_			AfterRollbackProcessor<Object, Object> afterRollbackProcessor) {_		this.afterRollbackProcessor = afterRollbackProcessor__	};set,the,link,after,rollback,processor,to,use,param,after,rollback,processor,the,after,rollback,processor;void,set,after,rollback,processor,after,rollback,processor,object,object,after,rollback,processor,this,after,rollback,processor,after,rollback,processor
ConcurrentKafkaListenerContainerFactoryConfigurer -> void setAfterRollbackProcessor( 			AfterRollbackProcessor<Object, Object> afterRollbackProcessor);1537343931;Set the {@link AfterRollbackProcessor} to use._@param afterRollbackProcessor the after rollback processor;void setAfterRollbackProcessor(_			AfterRollbackProcessor<Object, Object> afterRollbackProcessor) {_		this.afterRollbackProcessor = afterRollbackProcessor__	};set,the,link,after,rollback,processor,to,use,param,after,rollback,processor,the,after,rollback,processor;void,set,after,rollback,processor,after,rollback,processor,object,object,after,rollback,processor,this,after,rollback,processor,after,rollback,processor
ConcurrentKafkaListenerContainerFactoryConfigurer -> void setAfterRollbackProcessor( 			AfterRollbackProcessor<Object, Object> afterRollbackProcessor);1550073998;Set the {@link AfterRollbackProcessor} to use._@param afterRollbackProcessor the after rollback processor;void setAfterRollbackProcessor(_			AfterRollbackProcessor<Object, Object> afterRollbackProcessor) {_		this.afterRollbackProcessor = afterRollbackProcessor__	};set,the,link,after,rollback,processor,to,use,param,after,rollback,processor,the,after,rollback,processor;void,set,after,rollback,processor,after,rollback,processor,object,object,after,rollback,processor,this,after,rollback,processor,after,rollback,processor
ConcurrentKafkaListenerContainerFactoryConfigurer -> void setKafkaProperties(KafkaProperties properties);1507173536;Set the {@link KafkaProperties} to use._@param properties the properties;void setKafkaProperties(KafkaProperties properties) {_		this.properties = properties__	};set,the,link,kafka,properties,to,use,param,properties,the,properties;void,set,kafka,properties,kafka,properties,properties,this,properties,properties
ConcurrentKafkaListenerContainerFactoryConfigurer -> void setKafkaProperties(KafkaProperties properties);1508947448;Set the {@link KafkaProperties} to use._@param properties the properties;void setKafkaProperties(KafkaProperties properties) {_		this.properties = properties__	};set,the,link,kafka,properties,to,use,param,properties,the,properties;void,set,kafka,properties,kafka,properties,properties,this,properties,properties
ConcurrentKafkaListenerContainerFactoryConfigurer -> void setKafkaProperties(KafkaProperties properties);1511157177;Set the {@link KafkaProperties} to use._@param properties the properties;void setKafkaProperties(KafkaProperties properties) {_		this.properties = properties__	};set,the,link,kafka,properties,to,use,param,properties,the,properties;void,set,kafka,properties,kafka,properties,properties,this,properties,properties
ConcurrentKafkaListenerContainerFactoryConfigurer -> void setKafkaProperties(KafkaProperties properties);1513391527;Set the {@link KafkaProperties} to use._@param properties the properties;void setKafkaProperties(KafkaProperties properties) {_		this.properties = properties__	};set,the,link,kafka,properties,to,use,param,properties,the,properties;void,set,kafka,properties,kafka,properties,properties,this,properties,properties
ConcurrentKafkaListenerContainerFactoryConfigurer -> void setKafkaProperties(KafkaProperties properties);1515159336;Set the {@link KafkaProperties} to use._@param properties the properties;void setKafkaProperties(KafkaProperties properties) {_		this.properties = properties__	};set,the,link,kafka,properties,to,use,param,properties,the,properties;void,set,kafka,properties,kafka,properties,properties,this,properties,properties
ConcurrentKafkaListenerContainerFactoryConfigurer -> void setKafkaProperties(KafkaProperties properties);1515453546;Set the {@link KafkaProperties} to use._@param properties the properties;void setKafkaProperties(KafkaProperties properties) {_		this.properties = properties__	};set,the,link,kafka,properties,to,use,param,properties,the,properties;void,set,kafka,properties,kafka,properties,properties,this,properties,properties
ConcurrentKafkaListenerContainerFactoryConfigurer -> void setKafkaProperties(KafkaProperties properties);1525271459;Set the {@link KafkaProperties} to use._@param properties the properties;void setKafkaProperties(KafkaProperties properties) {_		this.properties = properties__	};set,the,link,kafka,properties,to,use,param,properties,the,properties;void,set,kafka,properties,kafka,properties,properties,this,properties,properties
ConcurrentKafkaListenerContainerFactoryConfigurer -> void setKafkaProperties(KafkaProperties properties);1534945262;Set the {@link KafkaProperties} to use._@param properties the properties;void setKafkaProperties(KafkaProperties properties) {_		this.properties = properties__	};set,the,link,kafka,properties,to,use,param,properties,the,properties;void,set,kafka,properties,kafka,properties,properties,this,properties,properties
ConcurrentKafkaListenerContainerFactoryConfigurer -> void setKafkaProperties(KafkaProperties properties);1535469298;Set the {@link KafkaProperties} to use._@param properties the properties;void setKafkaProperties(KafkaProperties properties) {_		this.properties = properties__	};set,the,link,kafka,properties,to,use,param,properties,the,properties;void,set,kafka,properties,kafka,properties,properties,this,properties,properties
ConcurrentKafkaListenerContainerFactoryConfigurer -> void setKafkaProperties(KafkaProperties properties);1537343931;Set the {@link KafkaProperties} to use._@param properties the properties;void setKafkaProperties(KafkaProperties properties) {_		this.properties = properties__	};set,the,link,kafka,properties,to,use,param,properties,the,properties;void,set,kafka,properties,kafka,properties,properties,this,properties,properties
ConcurrentKafkaListenerContainerFactoryConfigurer -> void setKafkaProperties(KafkaProperties properties);1550073998;Set the {@link KafkaProperties} to use._@param properties the properties;void setKafkaProperties(KafkaProperties properties) {_		this.properties = properties__	};set,the,link,kafka,properties,to,use,param,properties,the,properties;void,set,kafka,properties,kafka,properties,properties,this,properties,properties
ConcurrentKafkaListenerContainerFactoryConfigurer -> public void configure( 			ConcurrentKafkaListenerContainerFactory<Object, Object> listenerContainerFactory, 			ConsumerFactory<Object, Object> consumerFactory);1507173536;Configure the specified Kafka listener container factory. The factory can be_further tuned and default settings can be overridden._@param listenerContainerFactory the {@link ConcurrentKafkaListenerContainerFactory}_instance to configure_@param consumerFactory the {@link ConsumerFactory} to use;public void configure(_			ConcurrentKafkaListenerContainerFactory<Object, Object> listenerContainerFactory,_			ConsumerFactory<Object, Object> consumerFactory) {_		listenerContainerFactory.setConsumerFactory(consumerFactory)__		if (this.messageConverter != null) {_			listenerContainerFactory.setMessageConverter(this.messageConverter)__		}_		Listener container = this.properties.getListener()__		ContainerProperties containerProperties = listenerContainerFactory_				.getContainerProperties()__		if (container.getAckMode() != null) {_			containerProperties.setAckMode(container.getAckMode())__		}_		if (container.getAckCount() != null) {_			containerProperties.setAckCount(container.getAckCount())__		}_		if (container.getAckTime() != null) {_			containerProperties.setAckTime(container.getAckTime())__		}_		if (container.getPollTimeout() != null) {_			containerProperties.setPollTimeout(container.getPollTimeout())__		}_		if (container.getConcurrency() != null) {_			listenerContainerFactory.setConcurrency(container.getConcurrency())__		}_		if (container.getType() == Listener.Type.BATCH) {_			listenerContainerFactory.setBatchListener(true)__		}_	};configure,the,specified,kafka,listener,container,factory,the,factory,can,be,further,tuned,and,default,settings,can,be,overridden,param,listener,container,factory,the,link,concurrent,kafka,listener,container,factory,instance,to,configure,param,consumer,factory,the,link,consumer,factory,to,use;public,void,configure,concurrent,kafka,listener,container,factory,object,object,listener,container,factory,consumer,factory,object,object,consumer,factory,listener,container,factory,set,consumer,factory,consumer,factory,if,this,message,converter,null,listener,container,factory,set,message,converter,this,message,converter,listener,container,this,properties,get,listener,container,properties,container,properties,listener,container,factory,get,container,properties,if,container,get,ack,mode,null,container,properties,set,ack,mode,container,get,ack,mode,if,container,get,ack,count,null,container,properties,set,ack,count,container,get,ack,count,if,container,get,ack,time,null,container,properties,set,ack,time,container,get,ack,time,if,container,get,poll,timeout,null,container,properties,set,poll,timeout,container,get,poll,timeout,if,container,get,concurrency,null,listener,container,factory,set,concurrency,container,get,concurrency,if,container,get,type,listener,type,batch,listener,container,factory,set,batch,listener,true
ConcurrentKafkaListenerContainerFactoryConfigurer -> public void configure( 			ConcurrentKafkaListenerContainerFactory<Object, Object> listenerContainerFactory, 			ConsumerFactory<Object, Object> consumerFactory);1508947448;Configure the specified Kafka listener container factory. The factory can be_further tuned and default settings can be overridden._@param listenerContainerFactory the {@link ConcurrentKafkaListenerContainerFactory}_instance to configure_@param consumerFactory the {@link ConsumerFactory} to use;public void configure(_			ConcurrentKafkaListenerContainerFactory<Object, Object> listenerContainerFactory,_			ConsumerFactory<Object, Object> consumerFactory) {_		listenerContainerFactory.setConsumerFactory(consumerFactory)__		if (this.messageConverter != null) {_			listenerContainerFactory.setMessageConverter(this.messageConverter)__		}_		if (this.replyTemplate != null) {_			listenerContainerFactory.setReplyTemplate(this.replyTemplate)__		}_		Listener container = this.properties.getListener()__		ContainerProperties containerProperties = listenerContainerFactory_				.getContainerProperties()__		if (container.getAckMode() != null) {_			containerProperties.setAckMode(container.getAckMode())__		}_		if (container.getAckCount() != null) {_			containerProperties.setAckCount(container.getAckCount())__		}_		if (container.getAckTime() != null) {_			containerProperties.setAckTime(container.getAckTime())__		}_		if (container.getPollTimeout() != null) {_			containerProperties.setPollTimeout(container.getPollTimeout())__		}_		if (container.getConcurrency() != null) {_			listenerContainerFactory.setConcurrency(container.getConcurrency())__		}_		if (container.getType() == Listener.Type.BATCH) {_			listenerContainerFactory.setBatchListener(true)__		}_	};configure,the,specified,kafka,listener,container,factory,the,factory,can,be,further,tuned,and,default,settings,can,be,overridden,param,listener,container,factory,the,link,concurrent,kafka,listener,container,factory,instance,to,configure,param,consumer,factory,the,link,consumer,factory,to,use;public,void,configure,concurrent,kafka,listener,container,factory,object,object,listener,container,factory,consumer,factory,object,object,consumer,factory,listener,container,factory,set,consumer,factory,consumer,factory,if,this,message,converter,null,listener,container,factory,set,message,converter,this,message,converter,if,this,reply,template,null,listener,container,factory,set,reply,template,this,reply,template,listener,container,this,properties,get,listener,container,properties,container,properties,listener,container,factory,get,container,properties,if,container,get,ack,mode,null,container,properties,set,ack,mode,container,get,ack,mode,if,container,get,ack,count,null,container,properties,set,ack,count,container,get,ack,count,if,container,get,ack,time,null,container,properties,set,ack,time,container,get,ack,time,if,container,get,poll,timeout,null,container,properties,set,poll,timeout,container,get,poll,timeout,if,container,get,concurrency,null,listener,container,factory,set,concurrency,container,get,concurrency,if,container,get,type,listener,type,batch,listener,container,factory,set,batch,listener,true
ConcurrentKafkaListenerContainerFactoryConfigurer -> public void configure( 			ConcurrentKafkaListenerContainerFactory<Object, Object> listenerContainerFactory, 			ConsumerFactory<Object, Object> consumerFactory);1511157177;Configure the specified Kafka listener container factory. The factory can be_further tuned and default settings can be overridden._@param listenerContainerFactory the {@link ConcurrentKafkaListenerContainerFactory}_instance to configure_@param consumerFactory the {@link ConsumerFactory} to use;public void configure(_			ConcurrentKafkaListenerContainerFactory<Object, Object> listenerContainerFactory,_			ConsumerFactory<Object, Object> consumerFactory) {_		listenerContainerFactory.setConsumerFactory(consumerFactory)__		if (this.messageConverter != null) {_			listenerContainerFactory.setMessageConverter(this.messageConverter)__		}_		if (this.replyTemplate != null) {_			listenerContainerFactory.setReplyTemplate(this.replyTemplate)__		}_		Listener container = this.properties.getListener()__		ContainerProperties containerProperties = listenerContainerFactory_				.getContainerProperties()__		if (container.getAckMode() != null) {_			containerProperties.setAckMode(container.getAckMode())__		}_		if (container.getAckCount() != null) {_			containerProperties.setAckCount(container.getAckCount())__		}_		if (container.getAckTime() != null) {_			containerProperties.setAckTime(container.getAckTime().toMillis())__		}_		if (container.getPollTimeout() != null) {_			containerProperties.setPollTimeout(container.getPollTimeout().toMillis())__		}_		if (container.getConcurrency() != null) {_			listenerContainerFactory.setConcurrency(container.getConcurrency())__		}_		if (container.getType() == Listener.Type.BATCH) {_			listenerContainerFactory.setBatchListener(true)__		}_	};configure,the,specified,kafka,listener,container,factory,the,factory,can,be,further,tuned,and,default,settings,can,be,overridden,param,listener,container,factory,the,link,concurrent,kafka,listener,container,factory,instance,to,configure,param,consumer,factory,the,link,consumer,factory,to,use;public,void,configure,concurrent,kafka,listener,container,factory,object,object,listener,container,factory,consumer,factory,object,object,consumer,factory,listener,container,factory,set,consumer,factory,consumer,factory,if,this,message,converter,null,listener,container,factory,set,message,converter,this,message,converter,if,this,reply,template,null,listener,container,factory,set,reply,template,this,reply,template,listener,container,this,properties,get,listener,container,properties,container,properties,listener,container,factory,get,container,properties,if,container,get,ack,mode,null,container,properties,set,ack,mode,container,get,ack,mode,if,container,get,ack,count,null,container,properties,set,ack,count,container,get,ack,count,if,container,get,ack,time,null,container,properties,set,ack,time,container,get,ack,time,to,millis,if,container,get,poll,timeout,null,container,properties,set,poll,timeout,container,get,poll,timeout,to,millis,if,container,get,concurrency,null,listener,container,factory,set,concurrency,container,get,concurrency,if,container,get,type,listener,type,batch,listener,container,factory,set,batch,listener,true
ConcurrentKafkaListenerContainerFactoryConfigurer -> void setTransactionManager( 			KafkaAwareTransactionManager<Object, Object> transactionManager);1535469298;Set the {@link KafkaAwareTransactionManager} to use._@param transactionManager the transaction manager;void setTransactionManager(_			KafkaAwareTransactionManager<Object, Object> transactionManager) {_		this.transactionManager = transactionManager__	};set,the,link,kafka,aware,transaction,manager,to,use,param,transaction,manager,the,transaction,manager;void,set,transaction,manager,kafka,aware,transaction,manager,object,object,transaction,manager,this,transaction,manager,transaction,manager
ConcurrentKafkaListenerContainerFactoryConfigurer -> void setTransactionManager( 			KafkaAwareTransactionManager<Object, Object> transactionManager);1537343931;Set the {@link KafkaAwareTransactionManager} to use._@param transactionManager the transaction manager;void setTransactionManager(_			KafkaAwareTransactionManager<Object, Object> transactionManager) {_		this.transactionManager = transactionManager__	};set,the,link,kafka,aware,transaction,manager,to,use,param,transaction,manager,the,transaction,manager;void,set,transaction,manager,kafka,aware,transaction,manager,object,object,transaction,manager,this,transaction,manager,transaction,manager
ConcurrentKafkaListenerContainerFactoryConfigurer -> void setTransactionManager( 			KafkaAwareTransactionManager<Object, Object> transactionManager);1550073998;Set the {@link KafkaAwareTransactionManager} to use._@param transactionManager the transaction manager;void setTransactionManager(_			KafkaAwareTransactionManager<Object, Object> transactionManager) {_		this.transactionManager = transactionManager__	};set,the,link,kafka,aware,transaction,manager,to,use,param,transaction,manager,the,transaction,manager;void,set,transaction,manager,kafka,aware,transaction,manager,object,object,transaction,manager,this,transaction,manager,transaction,manager
