commented;modifiers;parameterAmount;loc;comment;code
false;public;2;16;;@Bean @ConditionalOnMissingBean(MongoDbFactory.class) public MongoDbFactorySupport<?> mongoDbFactory(ObjectProvider<MongoClient> mongo, ObjectProvider<com.mongodb.client.MongoClient> mongoClient) {     MongoClient preferredClient = mongo.getIfAvailable().     if (preferredClient != null) {         return new SimpleMongoDbFactory(preferredClient, this.properties.getMongoClientDatabase()).     }     com.mongodb.client.MongoClient fallbackClient = mongoClient.getIfAvailable().     if (fallbackClient != null) {         return new SimpleMongoClientDbFactory(fallbackClient, this.properties.getMongoClientDatabase()).     }     throw new IllegalStateException("Expected to find at least one MongoDB client."). }
false;public;2;6;;@Bean @ConditionalOnMissingBean public MongoTemplate mongoTemplate(MongoDbFactory mongoDbFactory, MongoConverter converter) {     return new MongoTemplate(mongoDbFactory, converter). }
false;public;3;10;;@Bean @ConditionalOnMissingBean(MongoConverter.class) public MappingMongoConverter mappingMongoConverter(MongoDbFactory factory, MongoMappingContext context, MongoCustomConversions conversions) {     DbRefResolver dbRefResolver = new DefaultDbRefResolver(factory).     MappingMongoConverter mappingConverter = new MappingMongoConverter(dbRefResolver, context).     mappingConverter.setCustomConversions(conversions).     return mappingConverter. }
false;public;2;8;;@Bean @ConditionalOnMissingBean public GridFsTemplate gridFsTemplate(MongoDbFactory mongoDbFactory, MongoTemplate mongoTemplate) {     return new GridFsTemplate(new GridFsMongoDbFactory(mongoDbFactory, this.properties), mongoTemplate.getConverter()). }
false;public;0;8;;@Override public MongoDatabase getDb() throws DataAccessException {     String gridFsDatabase = this.properties.getGridFsDatabase().     if (StringUtils.hasText(gridFsDatabase)) {         return this.mongoDbFactory.getDb(gridFsDatabase).     }     return this.mongoDbFactory.getDb(). }
false;public;1;4;;@Override public MongoDatabase getDb(String dbName) throws DataAccessException {     return this.mongoDbFactory.getDb(dbName). }
false;public;0;4;;@Override public PersistenceExceptionTranslator getExceptionTranslator() {     return this.mongoDbFactory.getExceptionTranslator(). }
false;public;0;5;;@Override @Deprecated public DB getLegacyDb() {     return this.mongoDbFactory.getLegacyDb(). }
false;public;1;4;;@Override public ClientSession getSession(ClientSessionOptions options) {     return this.mongoDbFactory.getSession(options). }
false;public;1;4;;@Override public MongoDbFactory withSession(ClientSession session) {     return this.mongoDbFactory.withSession(session). }
