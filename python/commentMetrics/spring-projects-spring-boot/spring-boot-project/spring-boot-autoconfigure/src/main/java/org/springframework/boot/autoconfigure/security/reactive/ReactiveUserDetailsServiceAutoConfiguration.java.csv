commented;modifiers;parameterAmount;loc;comment;code
false;public;2;9;;@Bean public MapReactiveUserDetailsService reactiveUserDetailsService(SecurityProperties properties, ObjectProvider<PasswordEncoder> passwordEncoder) {     SecurityProperties.User user = properties.getUser().     UserDetails userDetails = getUserDetails(user, getOrDeducePassword(user, passwordEncoder.getIfAvailable())).     return new MapReactiveUserDetailsService(userDetails). }
false;private;2;5;;private UserDetails getUserDetails(SecurityProperties.User user, String password) {     List<String> roles = user.getRoles().     return User.withUsername(user.getName()).password(password).roles(StringUtils.toStringArray(roles)).build(). }
false;private;2;12;;private String getOrDeducePassword(SecurityProperties.User user, PasswordEncoder encoder) {     String password = user.getPassword().     if (user.isPasswordGenerated()) {         logger.info(String.format("%n%nUsing generated security password: %s%n", user.getPassword())).     }     if (encoder != null || PASSWORD_ALGORITHM_PATTERN.matcher(password).matches()) {         return password.     }     return NOOP_PASSWORD_PREFIX + password. }
