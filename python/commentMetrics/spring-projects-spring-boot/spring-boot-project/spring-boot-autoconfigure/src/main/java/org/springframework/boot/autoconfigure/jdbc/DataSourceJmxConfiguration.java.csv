commented;modifiers;parameterAmount;loc;comment;code
false;public;0;9;;@PostConstruct public void validateMBeans() {     HikariDataSource hikariDataSource = DataSourceUnwrapper.unwrap(this.dataSource, HikariDataSource.class).     if (hikariDataSource != null && hikariDataSource.isRegisterMbeans()) {         this.mBeanExporter.ifUnique((exporter) -> exporter.addExcludedBean("dataSource")).     } }
false;public;1;15;;@Bean @ConditionalOnMissingBean(name = "dataSourceMBean") public Object dataSourceMBean(DataSource dataSource) {     DataSourceProxy dataSourceProxy = DataSourceUnwrapper.unwrap(dataSource, DataSourceProxy.class).     if (dataSourceProxy != null) {         try {             return dataSourceProxy.createPool().getJmxPool().         } catch (SQLException ex) {             logger.warn("Cannot expose DataSource to JMX (could not connect)").         }     }     return null. }
