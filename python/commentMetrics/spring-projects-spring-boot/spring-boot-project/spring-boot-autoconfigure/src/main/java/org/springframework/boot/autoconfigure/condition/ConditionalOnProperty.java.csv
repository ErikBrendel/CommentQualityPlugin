# id;timestamp;commentText;codeText;commentWords;codeWords
ConditionalOnProperty -> String[] value() default {}_;1507173536;Alias for {@link #name()}._@return the names;String[] value() default {}_;alias,for,link,name,return,the,names;string,value,default
ConditionalOnProperty -> String[] value() default {}_;1532630382;Alias for {@link #name()}._@return the names;String[] value() default {}_;alias,for,link,name,return,the,names;string,value,default
ConditionalOnProperty -> String[] value() default {}_;1532632797;Alias for {@link #name()}._@return the names;String[] value() default {}_;alias,for,link,name,return,the,names;string,value,default
ConditionalOnProperty -> String[] value() default {}_;1532633800;Alias for {@link #name()}._@return the names;String[] value() default {}_;alias,for,link,name,return,the,names;string,value,default
ConditionalOnProperty -> String[] value() default {}_;1532645229;Alias for {@link #name()}._@return the names;String[] value() default {}_;alias,for,link,name,return,the,names;string,value,default
ConditionalOnProperty -> String[] value() default {}_;1532852997;Alias for {@link #name()}._@return the names;String[] value() default {}_;alias,for,link,name,return,the,names;string,value,default
ConditionalOnProperty -> String[] value() default {}_;1534432765;Alias for {@link #name()}._@return the names;String[] value() default {}_;alias,for,link,name,return,the,names;string,value,default
ConditionalOnProperty -> String[] value() default {}_;1535721851;Alias for {@link #name()}._@return the names;String[] value() default {}_;alias,for,link,name,return,the,names;string,value,default
ConditionalOnProperty -> String[] value() default {}_;1536103517;Alias for {@link #name()}._@return the names;String[] value() default {}_;alias,for,link,name,return,the,names;string,value,default
ConditionalOnProperty -> boolean matchIfMissing() default false_;1507173536;Specify if the condition should match if the property is not set. Defaults to_{@code false}._@return if should match if the property is missing;boolean matchIfMissing() default false_;specify,if,the,condition,should,match,if,the,property,is,not,set,defaults,to,code,false,return,if,should,match,if,the,property,is,missing;boolean,match,if,missing,default,false
ConditionalOnProperty -> boolean matchIfMissing() default false_;1532630382;Specify if the condition should match if the property is not set. Defaults to_{@code false}._@return if should match if the property is missing;boolean matchIfMissing() default false_;specify,if,the,condition,should,match,if,the,property,is,not,set,defaults,to,code,false,return,if,should,match,if,the,property,is,missing;boolean,match,if,missing,default,false
ConditionalOnProperty -> boolean matchIfMissing() default false_;1532632797;Specify if the condition should match if the property is not set. Defaults to_{@code false}._@return if should match if the property is missing;boolean matchIfMissing() default false_;specify,if,the,condition,should,match,if,the,property,is,not,set,defaults,to,code,false,return,if,should,match,if,the,property,is,missing;boolean,match,if,missing,default,false
ConditionalOnProperty -> boolean matchIfMissing() default false_;1532633800;Specify if the condition should match if the property is not set. Defaults to_{@code false}._@return if should match if the property is missing;boolean matchIfMissing() default false_;specify,if,the,condition,should,match,if,the,property,is,not,set,defaults,to,code,false,return,if,should,match,if,the,property,is,missing;boolean,match,if,missing,default,false
ConditionalOnProperty -> boolean matchIfMissing() default false_;1532645229;Specify if the condition should match if the property is not set. Defaults to_{@code false}._@return if should match if the property is missing;boolean matchIfMissing() default false_;specify,if,the,condition,should,match,if,the,property,is,not,set,defaults,to,code,false,return,if,should,match,if,the,property,is,missing;boolean,match,if,missing,default,false
ConditionalOnProperty -> boolean matchIfMissing() default false_;1532852997;Specify if the condition should match if the property is not set. Defaults to_{@code false}._@return if should match if the property is missing;boolean matchIfMissing() default false_;specify,if,the,condition,should,match,if,the,property,is,not,set,defaults,to,code,false,return,if,should,match,if,the,property,is,missing;boolean,match,if,missing,default,false
ConditionalOnProperty -> boolean matchIfMissing() default false_;1534432765;Specify if the condition should match if the property is not set. Defaults to_{@code false}._@return if should match if the property is missing;boolean matchIfMissing() default false_;specify,if,the,condition,should,match,if,the,property,is,not,set,defaults,to,code,false,return,if,should,match,if,the,property,is,missing;boolean,match,if,missing,default,false
ConditionalOnProperty -> boolean matchIfMissing() default false_;1535721851;Specify if the condition should match if the property is not set. Defaults to_{@code false}._@return if should match if the property is missing;boolean matchIfMissing() default false_;specify,if,the,condition,should,match,if,the,property,is,not,set,defaults,to,code,false,return,if,should,match,if,the,property,is,missing;boolean,match,if,missing,default,false
ConditionalOnProperty -> boolean matchIfMissing() default false_;1536103517;Specify if the condition should match if the property is not set. Defaults to_{@code false}._@return if should match if the property is missing;boolean matchIfMissing() default false_;specify,if,the,condition,should,match,if,the,property,is,not,set,defaults,to,code,false,return,if,should,match,if,the,property,is,missing;boolean,match,if,missing,default,false
ConditionalOnProperty -> String prefix() default ""_;1507173536;A prefix that should be applied to each property. The prefix automatically ends_with a dot if not specified._@return the prefix;String prefix() default ""_;a,prefix,that,should,be,applied,to,each,property,the,prefix,automatically,ends,with,a,dot,if,not,specified,return,the,prefix;string,prefix,default
ConditionalOnProperty -> String prefix() default ""_;1532630382;A prefix that should be applied to each property. The prefix automatically ends_with a dot if not specified._@return the prefix;String prefix() default ""_;a,prefix,that,should,be,applied,to,each,property,the,prefix,automatically,ends,with,a,dot,if,not,specified,return,the,prefix;string,prefix,default
ConditionalOnProperty -> String prefix() default ""_;1532632797;A prefix that should be applied to each property. The prefix automatically ends_with a dot if not specified._@return the prefix;String prefix() default ""_;a,prefix,that,should,be,applied,to,each,property,the,prefix,automatically,ends,with,a,dot,if,not,specified,return,the,prefix;string,prefix,default
ConditionalOnProperty -> String prefix() default ""_;1532633800;A prefix that should be applied to each property. The prefix automatically ends_with a dot if not specified._@return the prefix;String prefix() default ""_;a,prefix,that,should,be,applied,to,each,property,the,prefix,automatically,ends,with,a,dot,if,not,specified,return,the,prefix;string,prefix,default
ConditionalOnProperty -> String prefix() default ""_;1532645229;A prefix that should be applied to each property. The prefix automatically ends_with a dot if not specified._@return the prefix;String prefix() default ""_;a,prefix,that,should,be,applied,to,each,property,the,prefix,automatically,ends,with,a,dot,if,not,specified,return,the,prefix;string,prefix,default
ConditionalOnProperty -> String prefix() default ""_;1532852997;A prefix that should be applied to each property. The prefix automatically ends_with a dot if not specified._@return the prefix;String prefix() default ""_;a,prefix,that,should,be,applied,to,each,property,the,prefix,automatically,ends,with,a,dot,if,not,specified,return,the,prefix;string,prefix,default
ConditionalOnProperty -> String prefix() default ""_;1534432765;A prefix that should be applied to each property. The prefix automatically ends_with a dot if not specified._@return the prefix;String prefix() default ""_;a,prefix,that,should,be,applied,to,each,property,the,prefix,automatically,ends,with,a,dot,if,not,specified,return,the,prefix;string,prefix,default
ConditionalOnProperty -> String prefix() default ""_;1535721851;A prefix that should be applied to each property. The prefix automatically ends_with a dot if not specified. A valid prefix is defined by one or more words_separated with dots (e.g. {@code "acme.system.feature"})._@return the prefix;String prefix() default ""_;a,prefix,that,should,be,applied,to,each,property,the,prefix,automatically,ends,with,a,dot,if,not,specified,a,valid,prefix,is,defined,by,one,or,more,words,separated,with,dots,e,g,code,acme,system,feature,return,the,prefix;string,prefix,default
ConditionalOnProperty -> String prefix() default ""_;1536103517;A prefix that should be applied to each property. The prefix automatically ends_with a dot if not specified. A valid prefix is defined by one or more words_separated with dots (e.g. {@code "acme.system.feature"})._@return the prefix;String prefix() default ""_;a,prefix,that,should,be,applied,to,each,property,the,prefix,automatically,ends,with,a,dot,if,not,specified,a,valid,prefix,is,defined,by,one,or,more,words,separated,with,dots,e,g,code,acme,system,feature,return,the,prefix;string,prefix,default
ConditionalOnProperty -> String[] name() default {}_;1507173536;The name of the properties to test. If a prefix has been defined, it is applied to_compute the full key of each property. For instance if the prefix is_{@code app.config} and one value is {@code my-value}, the fully key would be_{@code app.config.my-value}_<p>_Use the dashed notation to specify each property, that is all lower case with a "-"_to separate words (e.g. {@code my-long-property})._@return the names;String[] name() default {}_;the,name,of,the,properties,to,test,if,a,prefix,has,been,defined,it,is,applied,to,compute,the,full,key,of,each,property,for,instance,if,the,prefix,is,code,app,config,and,one,value,is,code,my,value,the,fully,key,would,be,code,app,config,my,value,p,use,the,dashed,notation,to,specify,each,property,that,is,all,lower,case,with,a,to,separate,words,e,g,code,my,long,property,return,the,names;string,name,default
ConditionalOnProperty -> String[] name() default {}_;1532630382;The name of the properties to test. If a prefix has been defined, it is applied to_compute the full key of each property. For instance if the prefix is_{@code app.config} and one value is {@code my-value}, the full key would be_{@code app.config.my-value}_<p>_Use the dashed notation to specify each property, that is all lower case with a "-"_to separate words (e.g. {@code my-long-property})._@return the names;String[] name() default {}_;the,name,of,the,properties,to,test,if,a,prefix,has,been,defined,it,is,applied,to,compute,the,full,key,of,each,property,for,instance,if,the,prefix,is,code,app,config,and,one,value,is,code,my,value,the,full,key,would,be,code,app,config,my,value,p,use,the,dashed,notation,to,specify,each,property,that,is,all,lower,case,with,a,to,separate,words,e,g,code,my,long,property,return,the,names;string,name,default
ConditionalOnProperty -> String[] name() default {}_;1532632797;The name of the properties to test. If a prefix has been defined, it is applied to_compute the full key of each property. For instance if the prefix is_{@code app.config} and one value is {@code my-value}, the full key would be_{@code app.config.my-value}_<p>_Use the dashed notation to specify each property, that is all lower case with a "-"_to separate words (e.g. {@code my-long-property})._@return the names;String[] name() default {}_;the,name,of,the,properties,to,test,if,a,prefix,has,been,defined,it,is,applied,to,compute,the,full,key,of,each,property,for,instance,if,the,prefix,is,code,app,config,and,one,value,is,code,my,value,the,full,key,would,be,code,app,config,my,value,p,use,the,dashed,notation,to,specify,each,property,that,is,all,lower,case,with,a,to,separate,words,e,g,code,my,long,property,return,the,names;string,name,default
ConditionalOnProperty -> String[] name() default {}_;1532633800;The name of the properties to test. If a prefix has been defined, it is applied to_compute the full key of each property. For instance if the prefix is_{@code app.config} and one value is {@code my-value}, the full key would be_{@code app.config.my-value}_<p>_Use the dashed notation to specify each property, that is all lower case with a "-"_to separate words (e.g. {@code my-long-property})._@return the names;String[] name() default {}_;the,name,of,the,properties,to,test,if,a,prefix,has,been,defined,it,is,applied,to,compute,the,full,key,of,each,property,for,instance,if,the,prefix,is,code,app,config,and,one,value,is,code,my,value,the,full,key,would,be,code,app,config,my,value,p,use,the,dashed,notation,to,specify,each,property,that,is,all,lower,case,with,a,to,separate,words,e,g,code,my,long,property,return,the,names;string,name,default
ConditionalOnProperty -> String[] name() default {}_;1532645229;The name of the properties to test. If a prefix has been defined, it is applied to_compute the full key of each property. For instance if the prefix is_{@code app.config} and one value is {@code my-value}, the full key would be_{@code app.config.my-value}_<p>_Use the dashed notation to specify each property, that is all lower case with a "-"_to separate words (e.g. {@code my-long-property})._@return the names;String[] name() default {}_;the,name,of,the,properties,to,test,if,a,prefix,has,been,defined,it,is,applied,to,compute,the,full,key,of,each,property,for,instance,if,the,prefix,is,code,app,config,and,one,value,is,code,my,value,the,full,key,would,be,code,app,config,my,value,p,use,the,dashed,notation,to,specify,each,property,that,is,all,lower,case,with,a,to,separate,words,e,g,code,my,long,property,return,the,names;string,name,default
ConditionalOnProperty -> String[] name() default {}_;1532852997;The name of the properties to test. If a prefix has been defined, it is applied to_compute the full key of each property. For instance if the prefix is_{@code app.config} and one value is {@code my-value}, the full key would be_{@code app.config.my-value}_<p>_Use the dashed notation to specify each property, that is all lower case with a "-"_to separate words (e.g. {@code my-long-property})._@return the names;String[] name() default {}_;the,name,of,the,properties,to,test,if,a,prefix,has,been,defined,it,is,applied,to,compute,the,full,key,of,each,property,for,instance,if,the,prefix,is,code,app,config,and,one,value,is,code,my,value,the,full,key,would,be,code,app,config,my,value,p,use,the,dashed,notation,to,specify,each,property,that,is,all,lower,case,with,a,to,separate,words,e,g,code,my,long,property,return,the,names;string,name,default
ConditionalOnProperty -> String[] name() default {}_;1534432765;The name of the properties to test. If a prefix has been defined, it is applied to_compute the full key of each property. For instance if the prefix is_{@code app.config} and one value is {@code my-value}, the full key would be_{@code app.config.my-value}_<p>_Use the dashed notation to specify each property, that is all lower case with a "-"_to separate words (e.g. {@code my-long-property})._@return the names;String[] name() default {}_;the,name,of,the,properties,to,test,if,a,prefix,has,been,defined,it,is,applied,to,compute,the,full,key,of,each,property,for,instance,if,the,prefix,is,code,app,config,and,one,value,is,code,my,value,the,full,key,would,be,code,app,config,my,value,p,use,the,dashed,notation,to,specify,each,property,that,is,all,lower,case,with,a,to,separate,words,e,g,code,my,long,property,return,the,names;string,name,default
ConditionalOnProperty -> String[] name() default {}_;1535721851;The name of the properties to test. If a prefix has been defined, it is applied to_compute the full key of each property. For instance if the prefix is_{@code app.config} and one value is {@code my-value}, the full key would be_{@code app.config.my-value}_<p>_Use the dashed notation to specify each property, that is all lower case with a "-"_to separate words (e.g. {@code my-long-property})._@return the names;String[] name() default {}_;the,name,of,the,properties,to,test,if,a,prefix,has,been,defined,it,is,applied,to,compute,the,full,key,of,each,property,for,instance,if,the,prefix,is,code,app,config,and,one,value,is,code,my,value,the,full,key,would,be,code,app,config,my,value,p,use,the,dashed,notation,to,specify,each,property,that,is,all,lower,case,with,a,to,separate,words,e,g,code,my,long,property,return,the,names;string,name,default
ConditionalOnProperty -> String[] name() default {}_;1536103517;The name of the properties to test. If a prefix has been defined, it is applied to_compute the full key of each property. For instance if the prefix is_{@code app.config} and one value is {@code my-value}, the full key would be_{@code app.config.my-value}_<p>_Use the dashed notation to specify each property, that is all lower case with a "-"_to separate words (e.g. {@code my-long-property})._@return the names;String[] name() default {}_;the,name,of,the,properties,to,test,if,a,prefix,has,been,defined,it,is,applied,to,compute,the,full,key,of,each,property,for,instance,if,the,prefix,is,code,app,config,and,one,value,is,code,my,value,the,full,key,would,be,code,app,config,my,value,p,use,the,dashed,notation,to,specify,each,property,that,is,all,lower,case,with,a,to,separate,words,e,g,code,my,long,property,return,the,names;string,name,default
ConditionalOnProperty -> String havingValue() default ""_;1507173536;The string representation of the expected value for the properties. If not_specified, the property must <strong>not</strong> be equals to {@code false}._@return the expected value;String havingValue() default ""_;the,string,representation,of,the,expected,value,for,the,properties,if,not,specified,the,property,must,strong,not,strong,be,equals,to,code,false,return,the,expected,value;string,having,value,default
ConditionalOnProperty -> String havingValue() default ""_;1532630382;The string representation of the expected value for the properties. If not_specified, the property must <strong>not</strong> be equal to {@code false}._@return the expected value;String havingValue() default ""_;the,string,representation,of,the,expected,value,for,the,properties,if,not,specified,the,property,must,strong,not,strong,be,equal,to,code,false,return,the,expected,value;string,having,value,default
ConditionalOnProperty -> String havingValue() default ""_;1532632797;The string representation of the expected value for the properties. If not_specified, the property must <strong>not</strong> be equal to {@code false}._@return the expected value;String havingValue() default ""_;the,string,representation,of,the,expected,value,for,the,properties,if,not,specified,the,property,must,strong,not,strong,be,equal,to,code,false,return,the,expected,value;string,having,value,default
ConditionalOnProperty -> String havingValue() default ""_;1532633800;The string representation of the expected value for the properties. If not_specified, the property must <strong>not</strong> be equal to {@code false}._@return the expected value;String havingValue() default ""_;the,string,representation,of,the,expected,value,for,the,properties,if,not,specified,the,property,must,strong,not,strong,be,equal,to,code,false,return,the,expected,value;string,having,value,default
ConditionalOnProperty -> String havingValue() default ""_;1532645229;The string representation of the expected value for the properties. If not_specified, the property must <strong>not</strong> be equal to {@code false}._@return the expected value;String havingValue() default ""_;the,string,representation,of,the,expected,value,for,the,properties,if,not,specified,the,property,must,strong,not,strong,be,equal,to,code,false,return,the,expected,value;string,having,value,default
ConditionalOnProperty -> String havingValue() default ""_;1532852997;The string representation of the expected value for the properties. If not_specified, the property must <strong>not</strong> be equal to {@code false}._@return the expected value;String havingValue() default ""_;the,string,representation,of,the,expected,value,for,the,properties,if,not,specified,the,property,must,strong,not,strong,be,equal,to,code,false,return,the,expected,value;string,having,value,default
ConditionalOnProperty -> String havingValue() default ""_;1534432765;The string representation of the expected value for the properties. If not_specified, the property must <strong>not</strong> be equal to {@code false}._@return the expected value;String havingValue() default ""_;the,string,representation,of,the,expected,value,for,the,properties,if,not,specified,the,property,must,strong,not,strong,be,equal,to,code,false,return,the,expected,value;string,having,value,default
ConditionalOnProperty -> String havingValue() default ""_;1535721851;The string representation of the expected value for the properties. If not_specified, the property must <strong>not</strong> be equal to {@code false}._@return the expected value;String havingValue() default ""_;the,string,representation,of,the,expected,value,for,the,properties,if,not,specified,the,property,must,strong,not,strong,be,equal,to,code,false,return,the,expected,value;string,having,value,default
ConditionalOnProperty -> String havingValue() default ""_;1536103517;The string representation of the expected value for the properties. If not_specified, the property must <strong>not</strong> be equal to {@code false}._@return the expected value;String havingValue() default ""_;the,string,representation,of,the,expected,value,for,the,properties,if,not,specified,the,property,must,strong,not,strong,be,equal,to,code,false,return,the,expected,value;string,having,value,default
