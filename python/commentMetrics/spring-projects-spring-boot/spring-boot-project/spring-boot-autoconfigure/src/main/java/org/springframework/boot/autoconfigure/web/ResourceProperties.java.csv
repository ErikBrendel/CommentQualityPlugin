commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public String[] getStaticLocations() {     return this.staticLocations. }
false;public;1;3;;public void setStaticLocations(String[] staticLocations) {     this.staticLocations = appendSlashIfNecessary(staticLocations). }
false;private;1;8;;private String[] appendSlashIfNecessary(String[] staticLocations) {     String[] normalized = new String[staticLocations.length].     for (int i = 0. i < staticLocations.length. i++) {         String location = staticLocations[i].         normalized[i] = location.endsWith("/") ? location : location + "/".     }     return normalized. }
false;public;0;3;;public boolean isAddMappings() {     return this.addMappings. }
false;public;1;3;;public void setAddMappings(boolean addMappings) {     this.addMappings = addMappings. }
false;public;0;3;;public Chain getChain() {     return this.chain. }
false;public;0;3;;public Cache getCache() {     return this.cache. }
true;public;0;4;/**  * Return whether the resource chain is enabled. Return {@code null} if no  * specific settings are present.  * @return whether the resource chain is enabled or {@code null} if no specified  * settings are present.  */ ;/**  * Return whether the resource chain is enabled. Return {@code null} if no  * specific settings are present.  * @return whether the resource chain is enabled or {@code null} if no specified  * settings are present.  */ public Boolean getEnabled() {     return getEnabled(getStrategy().getFixed().isEnabled(), getStrategy().getContent().isEnabled(), this.enabled). }
false;public;1;3;;public void setEnabled(boolean enabled) {     this.enabled = enabled. }
false;public;0;3;;public boolean isCache() {     return this.cache. }
false;public;1;3;;public void setCache(boolean cache) {     this.cache = cache. }
false;public;0;3;;public Strategy getStrategy() {     return this.strategy. }
false;public;0;3;;public boolean isHtmlApplicationCache() {     return this.htmlApplicationCache. }
false;public;1;3;;public void setHtmlApplicationCache(boolean htmlApplicationCache) {     this.htmlApplicationCache = htmlApplicationCache. }
false;public;0;3;;public boolean isCompressed() {     return this.compressed. }
false;public;1;3;;public void setCompressed(boolean compressed) {     this.compressed = compressed. }
false;static;3;4;;static Boolean getEnabled(boolean fixedEnabled, boolean contentEnabled, Boolean chainEnabled) {     return (fixedEnabled || contentEnabled) ? Boolean.TRUE : chainEnabled. }
false;public;0;3;;public Fixed getFixed() {     return this.fixed. }
false;public;0;3;;public Content getContent() {     return this.content. }
false;public;0;3;;public boolean isEnabled() {     return this.enabled. }
false;public;1;3;;public void setEnabled(boolean enabled) {     this.enabled = enabled. }
false;public;0;3;;public String[] getPaths() {     return this.paths. }
false;public;1;3;;public void setPaths(String[] paths) {     this.paths = paths. }
false;public;0;3;;public boolean isEnabled() {     return this.enabled. }
false;public;1;3;;public void setEnabled(boolean enabled) {     this.enabled = enabled. }
false;public;0;3;;public String[] getPaths() {     return this.paths. }
false;public;1;3;;public void setPaths(String[] paths) {     this.paths = paths. }
false;public;0;3;;public String getVersion() {     return this.version. }
false;public;1;3;;public void setVersion(String version) {     this.version = version. }
false;public;0;3;;public Duration getPeriod() {     return this.period. }
false;public;1;3;;public void setPeriod(Duration period) {     this.period = period. }
false;public;0;3;;public Cachecontrol getCachecontrol() {     return this.cachecontrol. }
false;public;0;3;;public Duration getMaxAge() {     return this.maxAge. }
false;public;1;3;;public void setMaxAge(Duration maxAge) {     this.maxAge = maxAge. }
false;public;0;3;;public Boolean getNoCache() {     return this.noCache. }
false;public;1;3;;public void setNoCache(Boolean noCache) {     this.noCache = noCache. }
false;public;0;3;;public Boolean getNoStore() {     return this.noStore. }
false;public;1;3;;public void setNoStore(Boolean noStore) {     this.noStore = noStore. }
false;public;0;3;;public Boolean getMustRevalidate() {     return this.mustRevalidate. }
false;public;1;3;;public void setMustRevalidate(Boolean mustRevalidate) {     this.mustRevalidate = mustRevalidate. }
false;public;0;3;;public Boolean getNoTransform() {     return this.noTransform. }
false;public;1;3;;public void setNoTransform(Boolean noTransform) {     this.noTransform = noTransform. }
false;public;0;3;;public Boolean getCachePublic() {     return this.cachePublic. }
false;public;1;3;;public void setCachePublic(Boolean cachePublic) {     this.cachePublic = cachePublic. }
false;public;0;3;;public Boolean getCachePrivate() {     return this.cachePrivate. }
false;public;1;3;;public void setCachePrivate(Boolean cachePrivate) {     this.cachePrivate = cachePrivate. }
false;public;0;3;;public Boolean getProxyRevalidate() {     return this.proxyRevalidate. }
false;public;1;3;;public void setProxyRevalidate(Boolean proxyRevalidate) {     this.proxyRevalidate = proxyRevalidate. }
false;public;0;3;;public Duration getStaleWhileRevalidate() {     return this.staleWhileRevalidate. }
false;public;1;3;;public void setStaleWhileRevalidate(Duration staleWhileRevalidate) {     this.staleWhileRevalidate = staleWhileRevalidate. }
false;public;0;3;;public Duration getStaleIfError() {     return this.staleIfError. }
false;public;1;3;;public void setStaleIfError(Duration staleIfError) {     this.staleIfError = staleIfError. }
false;public;0;3;;public Duration getSMaxAge() {     return this.sMaxAge. }
false;public;1;3;;public void setSMaxAge(Duration sMaxAge) {     this.sMaxAge = sMaxAge. }
false;public;0;19;;public CacheControl toHttpCacheControl() {     PropertyMapper map = PropertyMapper.get().     CacheControl control = createCacheControl().     map.from(this::getMustRevalidate).whenTrue().toCall(control::mustRevalidate).     map.from(this::getNoTransform).whenTrue().toCall(control::noTransform).     map.from(this::getCachePublic).whenTrue().toCall(control::cachePublic).     map.from(this::getCachePrivate).whenTrue().toCall(control::cachePrivate).     map.from(this::getProxyRevalidate).whenTrue().toCall(control::proxyRevalidate).     map.from(this::getStaleWhileRevalidate).whenNonNull().to((duration) -> control.staleWhileRevalidate(duration.getSeconds(), TimeUnit.SECONDS)).     map.from(this::getStaleIfError).whenNonNull().to((duration) -> control.staleIfError(duration.getSeconds(), TimeUnit.SECONDS)).     map.from(this::getSMaxAge).whenNonNull().to((duration) -> control.sMaxAge(duration.getSeconds(), TimeUnit.SECONDS)).     return control. }
false;private;0;13;;private CacheControl createCacheControl() {     if (Boolean.TRUE.equals(this.noStore)) {         return CacheControl.noStore().     }     if (Boolean.TRUE.equals(this.noCache)) {         return CacheControl.noCache().     }     if (this.maxAge != null) {         return CacheControl.maxAge(this.maxAge.getSeconds(), TimeUnit.SECONDS).     }     return CacheControl.empty(). }
