commented;modifiers;parameterAmount;loc;comment;code
false;public;1;14;;@Bean @ConditionalOnMissingBean @ConditionalOnSingleCandidate(ConnectionFactory.class) public JmsTemplate jmsTemplate(ConnectionFactory connectionFactory) {     PropertyMapper map = PropertyMapper.get().     JmsTemplate template = new JmsTemplate(connectionFactory).     template.setPubSubDomain(this.properties.isPubSubDomain()).     map.from(this.destinationResolver::getIfUnique).whenNonNull().to(template::setDestinationResolver).     map.from(this.messageConverter::getIfUnique).whenNonNull().to(template::setMessageConverter).     mapTemplateProperties(this.properties.getTemplate(), template).     return template. }
false;private;2;15;;private void mapTemplateProperties(Template properties, JmsTemplate template) {     PropertyMapper map = PropertyMapper.get().     map.from(properties::getDefaultDestination).whenNonNull().to(template::setDefaultDestinationName).     map.from(properties::getDeliveryDelay).whenNonNull().as(Duration::toMillis).to(template::setDeliveryDelay).     map.from(properties::determineQosEnabled).to(template::setExplicitQosEnabled).     map.from(properties::getDeliveryMode).whenNonNull().as(DeliveryMode::getValue).to(template::setDeliveryMode).     map.from(properties::getPriority).whenNonNull().to(template::setPriority).     map.from(properties::getTimeToLive).whenNonNull().as(Duration::toMillis).to(template::setTimeToLive).     map.from(properties::getReceiveTimeout).whenNonNull().as(Duration::toMillis).to(template::setReceiveTimeout). }
false;public;1;6;;@Bean @ConditionalOnMissingBean @ConditionalOnSingleCandidate(JmsTemplate.class) public JmsMessagingTemplate jmsMessagingTemplate(JmsTemplate jmsTemplate) {     return new JmsMessagingTemplate(jmsTemplate). }
