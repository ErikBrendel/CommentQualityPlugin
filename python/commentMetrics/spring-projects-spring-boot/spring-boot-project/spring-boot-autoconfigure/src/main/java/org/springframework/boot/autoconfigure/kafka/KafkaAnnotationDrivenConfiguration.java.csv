commented;modifiers;parameterAmount;loc;comment;code
false;public;0;14;;@Bean @ConditionalOnMissingBean public ConcurrentKafkaListenerContainerFactoryConfigurer kafkaListenerContainerFactoryConfigurer() {     ConcurrentKafkaListenerContainerFactoryConfigurer configurer = new ConcurrentKafkaListenerContainerFactoryConfigurer().     configurer.setKafkaProperties(this.properties).     MessageConverter messageConverterToUse = (this.properties.getListener().getType().equals(Type.BATCH)) ? this.batchMessageConverter : this.messageConverter.     configurer.setMessageConverter(messageConverterToUse).     configurer.setReplyTemplate(this.kafkaTemplate).     configurer.setTransactionManager(this.transactionManager).     configurer.setErrorHandler(this.errorHandler).     configurer.setAfterRollbackProcessor(this.afterRollbackProcessor).     return configurer. }
false;public;2;9;;@Bean @ConditionalOnMissingBean(name = "kafkaListenerContainerFactory") public ConcurrentKafkaListenerContainerFactory<?, ?> kafkaListenerContainerFactory(ConcurrentKafkaListenerContainerFactoryConfigurer configurer, ConsumerFactory<Object, Object> kafkaConsumerFactory) {     ConcurrentKafkaListenerContainerFactory<Object, Object> factory = new ConcurrentKafkaListenerContainerFactory<>().     configurer.configure(factory, kafkaConsumerFactory).     return factory. }
