commented;modifiers;parameterAmount;loc;comment;code
false;public;2;13;;@Bean public IntegrationMBeanExporter integrationMbeanExporter(BeanFactory beanFactory, Environment environment) {     IntegrationMBeanExporter exporter = new IntegrationMBeanExporter().     String defaultDomain = environment.getProperty("spring.jmx.default-domain").     if (StringUtils.hasLength(defaultDomain)) {         exporter.setDefaultDomain(defaultDomain).     }     String serverBean = environment.getProperty("spring.jmx.server", "mbeanServer").     exporter.setServer(beanFactory.getBean(serverBean, MBeanServer.class)).     return exporter. }
false;public;3;8;;@Bean @ConditionalOnMissingBean public IntegrationDataSourceInitializer integrationDataSourceInitializer(DataSource dataSource, ResourceLoader resourceLoader, IntegrationProperties properties) {     return new IntegrationDataSourceInitializer(dataSource, resourceLoader, properties). }
