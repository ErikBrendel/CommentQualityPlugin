commented;modifiers;parameterAmount;loc;comment;code
false;public;2;12;;@Bean @ConditionalOnMissingBean(type = "org.springframework.security.oauth2.client.registration.ClientRegistrationRepository") @Lazy public InMemoryUserDetailsManager inMemoryUserDetailsManager(SecurityProperties properties, ObjectProvider<PasswordEncoder> passwordEncoder) {     SecurityProperties.User user = properties.getUser().     List<String> roles = user.getRoles().     return new InMemoryUserDetailsManager(User.withUsername(user.getName()).password(getOrDeducePassword(user, passwordEncoder.getIfAvailable())).roles(StringUtils.toStringArray(roles)).build()). }
false;private;2;12;;private String getOrDeducePassword(SecurityProperties.User user, PasswordEncoder encoder) {     String password = user.getPassword().     if (user.isPasswordGenerated()) {         logger.info(String.format("%n%nUsing generated security password: %s%n", user.getPassword())).     }     if (encoder != null || PASSWORD_ALGORITHM_PATTERN.matcher(password).matches()) {         return password.     }     return NOOP_PASSWORD_PREFIX + password. }
