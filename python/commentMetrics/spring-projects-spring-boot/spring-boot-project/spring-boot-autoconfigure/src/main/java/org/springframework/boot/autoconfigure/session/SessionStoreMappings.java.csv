commented;modifiers;parameterAmount;loc;comment;code
false;public,static;2;7;;public static String getConfigurationClass(WebApplicationType webApplicationType, StoreType sessionStoreType) {     Configurations configurations = MAPPINGS.get(sessionStoreType).     Assert.state(configurations != null, () -> "Unknown session store type " + sessionStoreType).     return configurations.getConfiguration(webApplicationType). }
false;public,static;2;9;;public static StoreType getType(WebApplicationType webApplicationType, String configurationClass) {     return MAPPINGS.entrySet().stream().filter((entry) -> ObjectUtils.nullSafeEquals(configurationClass, entry.getValue().getConfiguration(webApplicationType))).map(Map.Entry::getKey).findFirst().orElseThrow(() -> new IllegalStateException("Unknown configuration class " + configurationClass)). }
false;public;1;9;;public String getConfiguration(WebApplicationType webApplicationType) {     switch(webApplicationType) {         case SERVLET:             return getName(this.servletConfiguration).         case REACTIVE:             return getName(this.reactiveConfiguration).     }     return null. }
false;private;1;3;;private String getName(Class<?> configuration) {     return (configuration != null) ? configuration.getName() : null. }
