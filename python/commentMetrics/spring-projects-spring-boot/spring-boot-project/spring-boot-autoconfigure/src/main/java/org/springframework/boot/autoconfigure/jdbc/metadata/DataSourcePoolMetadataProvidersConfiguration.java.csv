commented;modifiers;parameterAmount;loc;comment;code
false;public;0;11;;@Bean public DataSourcePoolMetadataProvider tomcatPoolDataSourceMetadataProvider() {     return (dataSource) -> {         org.apache.tomcat.jdbc.pool.DataSource tomcatDataSource = DataSourceUnwrapper.unwrap(dataSource, org.apache.tomcat.jdbc.pool.DataSource.class).         if (tomcatDataSource != null) {             return new TomcatDataSourcePoolMetadata(tomcatDataSource).         }         return null.     }. }
false;public;0;11;;@Bean public DataSourcePoolMetadataProvider hikariPoolDataSourceMetadataProvider() {     return (dataSource) -> {         HikariDataSource hikariDataSource = DataSourceUnwrapper.unwrap(dataSource, HikariDataSource.class).         if (hikariDataSource != null) {             return new HikariDataSourcePoolMetadata(hikariDataSource).         }         return null.     }. }
false;public;0;11;;@Bean public DataSourcePoolMetadataProvider commonsDbcp2PoolDataSourceMetadataProvider() {     return (dataSource) -> {         BasicDataSource dbcpDataSource = DataSourceUnwrapper.unwrap(dataSource, BasicDataSource.class).         if (dbcpDataSource != null) {             return new CommonsDbcp2DataSourcePoolMetadata(dbcpDataSource).         }         return null.     }. }
