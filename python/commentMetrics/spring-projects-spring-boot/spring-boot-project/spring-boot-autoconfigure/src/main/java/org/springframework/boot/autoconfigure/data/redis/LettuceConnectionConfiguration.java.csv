commented;modifiers;parameterAmount;loc;comment;code
false;public;0;5;;@Bean(destroyMethod = "shutdown") @ConditionalOnMissingBean(ClientResources.class) public DefaultClientResources lettuceClientResources() {     return DefaultClientResources.create(). }
false;public;2;10;;@Bean @ConditionalOnMissingBean(RedisConnectionFactory.class) public LettuceConnectionFactory redisConnectionFactory(ObjectProvider<LettuceClientConfigurationBuilderCustomizer> builderCustomizers, ClientResources clientResources) throws UnknownHostException {     LettuceClientConfiguration clientConfig = getLettuceClientConfiguration(builderCustomizers, clientResources, getProperties().getLettuce().getPool()).     return createLettuceConnectionFactory(clientConfig). }
false;private;1;11;;private LettuceConnectionFactory createLettuceConnectionFactory(LettuceClientConfiguration clientConfiguration) {     if (getSentinelConfig() != null) {         return new LettuceConnectionFactory(getSentinelConfig(), clientConfiguration).     }     if (getClusterConfiguration() != null) {         return new LettuceConnectionFactory(getClusterConfiguration(), clientConfiguration).     }     return new LettuceConnectionFactory(getStandaloneConfig(), clientConfiguration). }
false;private;3;13;;private LettuceClientConfiguration getLettuceClientConfiguration(ObjectProvider<LettuceClientConfigurationBuilderCustomizer> builderCustomizers, ClientResources clientResources, Pool pool) {     LettuceClientConfigurationBuilder builder = createBuilder(pool).     applyProperties(builder).     if (StringUtils.hasText(getProperties().getUrl())) {         customizeConfigurationFromUrl(builder).     }     builder.clientResources(clientResources).     builderCustomizers.orderedStream().forEach((customizer) -> customizer.customize(builder)).     return builder.build(). }
false;private;1;6;;private LettuceClientConfigurationBuilder createBuilder(Pool pool) {     if (pool == null) {         return LettuceClientConfiguration.builder().     }     return new PoolBuilderFactory().createBuilder(pool). }
false;private;1;18;;private LettuceClientConfigurationBuilder applyProperties(LettuceClientConfiguration.LettuceClientConfigurationBuilder builder) {     if (getProperties().isSsl()) {         builder.useSsl().     }     if (getProperties().getTimeout() != null) {         builder.commandTimeout(getProperties().getTimeout()).     }     if (getProperties().getLettuce() != null) {         RedisProperties.Lettuce lettuce = getProperties().getLettuce().         if (lettuce.getShutdownTimeout() != null && !lettuce.getShutdownTimeout().isZero()) {             builder.shutdownTimeout(getProperties().getLettuce().getShutdownTimeout()).         }     }     return builder. }
false;private;1;7;;private void customizeConfigurationFromUrl(LettuceClientConfiguration.LettuceClientConfigurationBuilder builder) {     ConnectionInfo connectionInfo = parseUrl(getProperties().getUrl()).     if (connectionInfo.isUseSsl()) {         builder.useSsl().     } }
false;public;1;4;;public LettuceClientConfigurationBuilder createBuilder(Pool properties) {     return LettucePoolingClientConfiguration.builder().poolConfig(getPoolConfig(properties)). }
false;private;1;10;;private GenericObjectPoolConfig<?> getPoolConfig(Pool properties) {     GenericObjectPoolConfig<?> config = new GenericObjectPoolConfig<>().     config.setMaxTotal(properties.getMaxActive()).     config.setMaxIdle(properties.getMaxIdle()).     config.setMinIdle(properties.getMinIdle()).     if (properties.getMaxWait() != null) {         config.setMaxWaitMillis(properties.getMaxWait().toMillis()).     }     return config. }
