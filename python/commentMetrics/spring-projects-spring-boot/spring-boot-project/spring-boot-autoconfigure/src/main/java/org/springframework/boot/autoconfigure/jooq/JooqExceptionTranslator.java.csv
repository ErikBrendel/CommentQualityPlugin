# id;timestamp;commentText;codeText;commentWords;codeWords
JooqExceptionTranslator -> private void handle(ExecuteContext context, SQLExceptionTranslator translator, 			SQLException exception);1507173536;Handle a single exception in the chain. SQLExceptions might be nested multiple_levels deep. The outermost exception is usually the least interesting one ("Call_getNextException to see the cause."). Therefore the innermost exception is_propagated and all other exceptions are logged._@param context the execute context_@param translator the exception translator_@param exception the exception;private void handle(ExecuteContext context, SQLExceptionTranslator translator,_			SQLException exception) {_		DataAccessException translated = translate(context, translator, exception)__		if (exception.getNextException() == null) {_			context.exception(translated)__		}_		else {_			logger.error("Execution of SQL statement failed.", translated)__		}_	};handle,a,single,exception,in,the,chain,sqlexceptions,might,be,nested,multiple,levels,deep,the,outermost,exception,is,usually,the,least,interesting,one,call,get,next,exception,to,see,the,cause,therefore,the,innermost,exception,is,propagated,and,all,other,exceptions,are,logged,param,context,the,execute,context,param,translator,the,exception,translator,param,exception,the,exception;private,void,handle,execute,context,context,sqlexception,translator,translator,sqlexception,exception,data,access,exception,translated,translate,context,translator,exception,if,exception,get,next,exception,null,context,exception,translated,else,logger,error,execution,of,sql,statement,failed,translated
JooqExceptionTranslator -> private void handle(ExecuteContext context, SQLExceptionTranslator translator, 			SQLException exception);1513240550;Handle a single exception in the chain. SQLExceptions might be nested multiple_levels deep. The outermost exception is usually the least interesting one ("Call_getNextException to see the cause."). Therefore the innermost exception is_propagated and all other exceptions are logged._@param context the execute context_@param translator the exception translator_@param exception the exception;private void handle(ExecuteContext context, SQLExceptionTranslator translator,_			SQLException exception) {_		DataAccessException translated = translate(context, translator, exception)__		if (exception.getNextException() == null) {_			context.exception(translated)__		}_		else {_			logger.error("Execution of SQL statement failed.", translated)__		}_	};handle,a,single,exception,in,the,chain,sqlexceptions,might,be,nested,multiple,levels,deep,the,outermost,exception,is,usually,the,least,interesting,one,call,get,next,exception,to,see,the,cause,therefore,the,innermost,exception,is,propagated,and,all,other,exceptions,are,logged,param,context,the,execute,context,param,translator,the,exception,translator,param,exception,the,exception;private,void,handle,execute,context,context,sqlexception,translator,translator,sqlexception,exception,data,access,exception,translated,translate,context,translator,exception,if,exception,get,next,exception,null,context,exception,translated,else,logger,error,execution,of,sql,statement,failed,translated
JooqExceptionTranslator -> private void handle(ExecuteContext context, SQLExceptionTranslator translator, 			SQLException exception);1513245682;Handle a single exception in the chain. SQLExceptions might be nested multiple_levels deep. The outermost exception is usually the least interesting one ("Call_getNextException to see the cause."). Therefore the innermost exception is_propagated and all other exceptions are logged._@param context the execute context_@param translator the exception translator_@param exception the exception;private void handle(ExecuteContext context, SQLExceptionTranslator translator,_			SQLException exception) {_		DataAccessException translated = translate(context, translator, exception)__		if (exception.getNextException() == null) {_			context.exception(translated)__		}_		else {_			logger.error("Execution of SQL statement failed.", translated)__		}_	};handle,a,single,exception,in,the,chain,sqlexceptions,might,be,nested,multiple,levels,deep,the,outermost,exception,is,usually,the,least,interesting,one,call,get,next,exception,to,see,the,cause,therefore,the,innermost,exception,is,propagated,and,all,other,exceptions,are,logged,param,context,the,execute,context,param,translator,the,exception,translator,param,exception,the,exception;private,void,handle,execute,context,context,sqlexception,translator,translator,sqlexception,exception,data,access,exception,translated,translate,context,translator,exception,if,exception,get,next,exception,null,context,exception,translated,else,logger,error,execution,of,sql,statement,failed,translated
