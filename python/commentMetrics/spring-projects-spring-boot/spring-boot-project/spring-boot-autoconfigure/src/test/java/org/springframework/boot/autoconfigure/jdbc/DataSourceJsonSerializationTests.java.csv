commented;modifiers;parameterAmount;loc;comment;code
false;public;0;10;;@Test public void serializerFactory() throws Exception {     DataSource dataSource = new DataSource().     SerializerFactory factory = BeanSerializerFactory.instance.withSerializerModifier(new GenericSerializerModifier()).     ObjectMapper mapper = new ObjectMapper().     mapper.setSerializerFactory(factory).     String value = mapper.writeValueAsString(dataSource).     assertThat(value.contains("\"url\":")).isTrue(). }
false;public;0;9;;@Test public void serializerWithMixin() throws Exception {     DataSource dataSource = new DataSource().     ObjectMapper mapper = new ObjectMapper().     mapper.addMixIn(DataSource.class, DataSourceJson.class).     String value = mapper.writeValueAsString(dataSource).     assertThat(value.contains("\"url\":")).isTrue().     assertThat(StringUtils.countOccurrencesOf(value, "\"url\"")).isEqualTo(1). }
false;public;3;16;;@Override public void serialize(DataSource value, JsonGenerator jgen, SerializerProvider provider) throws IOException {     jgen.writeStartObject().     for (PropertyDescriptor property : BeanUtils.getPropertyDescriptors(DataSource.class)) {         Method reader = property.getReadMethod().         if (reader != null && property.getWriteMethod() != null && this.conversionService.canConvert(String.class, property.getPropertyType())) {             jgen.writeObjectField(property.getName(), ReflectionUtils.invokeMethod(reader, value)).         }     }     jgen.writeEndObject(). }
false;public;3;15;;@Override public List<BeanPropertyWriter> changeProperties(SerializationConfig config, BeanDescription beanDesc, List<BeanPropertyWriter> beanProperties) {     List<BeanPropertyWriter> result = new ArrayList<>().     for (BeanPropertyWriter writer : beanProperties) {         AnnotatedMethod setter = beanDesc.findMethod("set" + StringUtils.capitalize(writer.getName()), new Class<?>[] { writer.getType().getRawClass() }).         if (setter != null && this.conversionService.canConvert(String.class, writer.getType().getRawClass())) {             result.add(writer).         }     }     return result. }
