commented;modifiers;parameterAmount;loc;comment;code
false;public;0;7;;@Test public void testVanillaOnClassCondition() {     this.context.register(BasicConfiguration.class, FooConfiguration.class).     this.context.refresh().     assertThat(this.context.containsBean("bar")).isFalse().     assertThat(this.context.getBean("foo")).isEqualTo("foo"). }
false;public;0;7;;@Test public void testMissingOnClassCondition() {     this.context.register(MissingConfiguration.class, FooConfiguration.class).     this.context.refresh().     assertThat(this.context.containsBean("bar")).isTrue().     assertThat(this.context.getBean("foo")).isEqualTo("foo"). }
false;public;0;4;;@Bean public String bar() {     return "bar". }
false;public;0;4;;@Bean public String bar() {     return "bar". }
false;public;0;4;;@Bean public String foo() {     return "foo". }
