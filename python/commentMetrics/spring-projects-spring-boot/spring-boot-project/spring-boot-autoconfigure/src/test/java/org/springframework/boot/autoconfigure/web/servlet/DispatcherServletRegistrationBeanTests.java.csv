commented;modifiers;parameterAmount;loc;comment;code
false;public;0;7;;@Test public void createWhenPathIsNullThrowsException() {     assertThatIllegalArgumentException().isThrownBy(() -> new DispatcherServletRegistrationBean(new DispatcherServlet(), null)).withMessageContaining("Path must not be null"). }
false;public;0;6;;@Test public void getPathReturnsPath() {     DispatcherServletRegistrationBean bean = new DispatcherServletRegistrationBean(new DispatcherServlet(), "/test").     assertThat(bean.getPath()).isEqualTo("/test"). }
false;public;0;6;;@Test public void getUrlMappingsReturnsSinglePathMappedPattern() {     DispatcherServletRegistrationBean bean = new DispatcherServletRegistrationBean(new DispatcherServlet(), "/test").     assertThat(bean.getUrlMappings()).containsOnly("/test/*"). }
false;public;0;7;;@Test public void setUrlMappingsCannotBeCalled() {     DispatcherServletRegistrationBean bean = new DispatcherServletRegistrationBean(new DispatcherServlet(), "/test").     assertThatExceptionOfType(UnsupportedOperationException.class).isThrownBy(() -> bean.setUrlMappings(Collections.emptyList())). }
false;public;0;7;;@Test public void addUrlMappingsCannotBeCalled() {     DispatcherServletRegistrationBean bean = new DispatcherServletRegistrationBean(new DispatcherServlet(), "/test").     assertThatExceptionOfType(UnsupportedOperationException.class).isThrownBy(() -> bean.addUrlMappings("/test")). }
