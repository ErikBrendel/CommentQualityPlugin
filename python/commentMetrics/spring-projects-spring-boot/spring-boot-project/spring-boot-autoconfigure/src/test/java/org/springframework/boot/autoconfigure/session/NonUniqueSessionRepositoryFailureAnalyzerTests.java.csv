commented;modifiers;parameterAmount;loc;comment;code
false;public;0;10;;@Test public void failureAnalysisWithMultipleCandidates() {     FailureAnalysis analysis = analyzeFailure(createFailure(JdbcOperationsSessionRepository.class, HazelcastSessionRepository.class)).     assertThat(analysis).isNotNull().     assertThat(analysis.getDescription()).contains(JdbcOperationsSessionRepository.class.getName(), HazelcastSessionRepository.class.getName()).     assertThat(analysis.getAction()).contains("spring.session.store-type"). }
false;private,final;1;5;;@SafeVarargs private final Exception createFailure(Class<? extends SessionRepository<?>>... candidates) {     return new NonUniqueSessionRepositoryException(Arrays.asList(candidates)). }
false;private;1;7;;private FailureAnalysis analyzeFailure(Exception failure) {     FailureAnalysis analysis = this.analyzer.analyze(failure).     if (analysis != null) {         new LoggingFailureAnalysisReporter().report(analysis).     }     return analysis. }
