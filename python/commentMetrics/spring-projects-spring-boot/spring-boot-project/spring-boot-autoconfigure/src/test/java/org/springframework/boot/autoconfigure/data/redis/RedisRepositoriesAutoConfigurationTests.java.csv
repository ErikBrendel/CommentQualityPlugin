commented;modifiers;parameterAmount;loc;comment;code
false;public;0;5;;@Before public void setUp() {     TestPropertyValues.of("spring.redis.port=" + redis.getMappedPort()).applyTo(this.context.getEnvironment()). }
false;public;0;4;;@After public void close() {     this.context.close(). }
false;public;0;8;;@Test public void testDefaultRepositoryConfiguration() {     this.context.register(TestConfiguration.class, RedisAutoConfiguration.class, RedisRepositoriesAutoConfiguration.class, PropertyPlaceholderAutoConfiguration.class).     this.context.refresh().     assertThat(this.context.getBean(CityRepository.class)).isNotNull(). }
false;public;0;8;;@Test public void testNoRepositoryConfiguration() {     this.context.register(EmptyConfiguration.class, RedisAutoConfiguration.class, RedisRepositoriesAutoConfiguration.class, PropertyPlaceholderAutoConfiguration.class).     this.context.refresh().     assertThat(this.context.getBean("redisTemplate")).isNotNull(). }
false;public;0;8;;@Test public void doesNotTriggerDefaultRepositoryDetectionIfCustomized() {     this.context.register(CustomizedConfiguration.class, RedisAutoConfiguration.class, RedisRepositoriesAutoConfiguration.class, PropertyPlaceholderAutoConfiguration.class).     this.context.refresh().     assertThat(this.context.getBean(CityRedisRepository.class)).isNotNull(). }
