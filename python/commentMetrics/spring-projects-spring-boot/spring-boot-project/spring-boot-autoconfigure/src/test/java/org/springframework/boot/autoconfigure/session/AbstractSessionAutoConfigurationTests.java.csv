commented;modifiers;parameterAmount;loc;comment;code
false;protected;2;8;;protected <T extends SessionRepository<?>> T validateSessionRepository(AssertableWebApplicationContext context, Class<T> type) {     assertThat(context).hasSingleBean(SessionRepositoryFilter.class).     assertThat(context).hasSingleBean(SessionRepository.class).     SessionRepository<?> repository = context.getBean(SessionRepository.class).     assertThat(repository).as("Wrong session repository type").isInstanceOf(type).     return type.cast(repository). }
false;protected;2;9;;protected <T extends ReactiveSessionRepository<?>> T validateSessionRepository(AssertableReactiveWebApplicationContext context, Class<T> type) {     assertThat(context).hasSingleBean(WebSessionManager.class).     assertThat(context).hasSingleBean(ReactiveSessionRepository.class).     ReactiveSessionRepository<?> repository = context.getBean(ReactiveSessionRepository.class).     assertThat(repository).as("Wrong session repository type").isInstanceOf(type).     return type.cast(repository). }
