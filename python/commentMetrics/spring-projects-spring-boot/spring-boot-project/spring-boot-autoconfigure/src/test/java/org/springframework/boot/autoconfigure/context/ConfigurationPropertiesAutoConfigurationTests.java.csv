commented;modifiers;parameterAmount;loc;comment;code
false;public;0;6;;@After public void tearDown() {     if (this.context != null) {         this.context.close().     } }
false;public;0;5;;@Test public void processAnnotatedBean() {     load(new Class[] { AutoConfig.class, SampleBean.class }, "foo.name:test").     assertThat(this.context.getBean(SampleBean.class).getName()).isEqualTo("test"). }
false;public;0;5;;@Test public void processAnnotatedBeanNoAutoConfig() {     load(new Class[] { SampleBean.class }, "foo.name:test").     assertThat(this.context.getBean(SampleBean.class).getName()).isEqualTo("default"). }
false;private;2;6;;private void load(Class<?>[] configs, String... environment) {     this.context = new AnnotationConfigApplicationContext().     this.context.register(configs).     TestPropertyValues.of(environment).applyTo(this.context).     this.context.refresh(). }
false;public;0;3;;public String getName() {     return this.name. }
false;public;1;3;;public void setName(String name) {     this.name = name. }
