commented;modifiers;parameterAmount;loc;comment;code
false;public;0;5;;@Test public void availabilityOfTemplateInDefaultLocation() {     assertThat(this.provider.isTemplateAvailable("home", this.environment, getClass().getClassLoader(), this.resourceLoader)).isTrue(). }
false;public;0;5;;@Test public void availabilityOfTemplateThatDoesNotExist() {     assertThat(this.provider.isTemplateAvailable("whatever", this.environment, getClass().getClassLoader(), this.resourceLoader)).isFalse(). }
false;public;0;7;;@Test public void availabilityOfTemplateWithCustomLoaderPath() {     this.environment.setProperty("spring.groovy.template.resource-loader-path", "classpath:/custom-templates/").     assertThat(this.provider.isTemplateAvailable("custom", this.environment, getClass().getClassLoader(), this.resourceLoader)).isTrue(). }
false;public;0;7;;@Test public void availabilityOfTemplateWithCustomLoaderPathConfiguredAsAList() {     this.environment.setProperty("spring.groovy.template.resource-loader-path[0]", "classpath:/custom-templates/").     assertThat(this.provider.isTemplateAvailable("custom", this.environment, getClass().getClassLoader(), this.resourceLoader)).isTrue(). }
false;public;0;6;;@Test public void availabilityOfTemplateWithCustomPrefix() {     this.environment.setProperty("spring.groovy.template.prefix", "prefix/").     assertThat(this.provider.isTemplateAvailable("prefixed", this.environment, getClass().getClassLoader(), this.resourceLoader)).isTrue(). }
false;public;0;6;;@Test public void availabilityOfTemplateWithCustomSuffix() {     this.environment.setProperty("spring.groovy.template.suffix", ".groovytemplate").     assertThat(this.provider.isTemplateAvailable("suffixed", this.environment, getClass().getClassLoader(), this.resourceLoader)).isTrue(). }
