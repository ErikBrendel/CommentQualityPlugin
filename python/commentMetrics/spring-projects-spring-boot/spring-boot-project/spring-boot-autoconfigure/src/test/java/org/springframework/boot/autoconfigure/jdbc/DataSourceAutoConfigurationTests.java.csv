# id;timestamp;commentText;codeText;commentWords;codeWords
DataSourceAutoConfigurationTests -> @Test 	public void explicitTypeNoSupportedDataSource();1507173536;This test makes sure that if no supported data source is present, a datasource is_still created if "spring.datasource.type" is present.;@Test_	public void explicitTypeNoSupportedDataSource() {_		this.contextRunner_				.withClassLoader(new HidePackagesClassLoader("org.apache.tomcat",_						"com.zaxxer.hikari", "org.apache.commons.dbcp",_						"org.apache.commons.dbcp2"))_				.withPropertyValues(_						"spring.datasource.driverClassName:org.hsqldb.jdbcDriver",_						"spring.datasource.url:jdbc:hsqldb:mem:testdb",_						"spring.datasource.type:"_								+ SimpleDriverDataSource.class.getName())_				.run(this::containsOnlySimpleDriverDataSource)__	};this,test,makes,sure,that,if,no,supported,data,source,is,present,a,datasource,is,still,created,if,spring,datasource,type,is,present;test,public,void,explicit,type,no,supported,data,source,this,context,runner,with,class,loader,new,hide,packages,class,loader,org,apache,tomcat,com,zaxxer,hikari,org,apache,commons,dbcp,org,apache,commons,dbcp2,with,property,values,spring,datasource,driver,class,name,org,hsqldb,jdbc,driver,spring,datasource,url,jdbc,hsqldb,mem,testdb,spring,datasource,type,simple,driver,data,source,class,get,name,run,this,contains,only,simple,driver,data,source
DataSourceAutoConfigurationTests -> @Test 	public void explicitTypeNoSupportedDataSource();1509090637;This test makes sure that if no supported data source is present, a datasource is_still created if "spring.datasource.type" is present.;@Test_	public void explicitTypeNoSupportedDataSource() {_		this.contextRunner_				.withClassLoader(new HidePackagesClassLoader("org.apache.tomcat",_						"com.zaxxer.hikari", "org.apache.commons.dbcp",_						"org.apache.commons.dbcp2"))_				.withPropertyValues(_						"spring.datasource.driverClassName:org.hsqldb.jdbcDriver",_						"spring.datasource.url:jdbc:hsqldb:mem:testdb",_						"spring.datasource.type:"_								+ SimpleDriverDataSource.class.getName())_				.run(this::containsOnlySimpleDriverDataSource)__	};this,test,makes,sure,that,if,no,supported,data,source,is,present,a,datasource,is,still,created,if,spring,datasource,type,is,present;test,public,void,explicit,type,no,supported,data,source,this,context,runner,with,class,loader,new,hide,packages,class,loader,org,apache,tomcat,com,zaxxer,hikari,org,apache,commons,dbcp,org,apache,commons,dbcp2,with,property,values,spring,datasource,driver,class,name,org,hsqldb,jdbc,driver,spring,datasource,url,jdbc,hsqldb,mem,testdb,spring,datasource,type,simple,driver,data,source,class,get,name,run,this,contains,only,simple,driver,data,source
DataSourceAutoConfigurationTests -> @Test 	public void explicitTypeNoSupportedDataSource();1511076000;This test makes sure that if no supported data source is present, a datasource is_still created if "spring.datasource.type" is present.;@Test_	public void explicitTypeNoSupportedDataSource() {_		this.contextRunner_				.withClassLoader(_						new FilteredClassLoader("org.apache.tomcat", "com.zaxxer.hikari",_								"org.apache.commons.dbcp", "org.apache.commons.dbcp2"))_				.withPropertyValues(_						"spring.datasource.driverClassName:org.hsqldb.jdbcDriver",_						"spring.datasource.url:jdbc:hsqldb:mem:testdb",_						"spring.datasource.type:"_								+ SimpleDriverDataSource.class.getName())_				.run(this::containsOnlySimpleDriverDataSource)__	};this,test,makes,sure,that,if,no,supported,data,source,is,present,a,datasource,is,still,created,if,spring,datasource,type,is,present;test,public,void,explicit,type,no,supported,data,source,this,context,runner,with,class,loader,new,filtered,class,loader,org,apache,tomcat,com,zaxxer,hikari,org,apache,commons,dbcp,org,apache,commons,dbcp2,with,property,values,spring,datasource,driver,class,name,org,hsqldb,jdbc,driver,spring,datasource,url,jdbc,hsqldb,mem,testdb,spring,datasource,type,simple,driver,data,source,class,get,name,run,this,contains,only,simple,driver,data,source
DataSourceAutoConfigurationTests -> @Test 	public void explicitTypeNoSupportedDataSource();1513076250;This test makes sure that if no supported data source is present, a datasource is_still created if "spring.datasource.type" is present.;@Test_	public void explicitTypeNoSupportedDataSource() {_		this.contextRunner_				.withClassLoader(_						new FilteredClassLoader("org.apache.tomcat", "com.zaxxer.hikari",_								"org.apache.commons.dbcp", "org.apache.commons.dbcp2"))_				.withPropertyValues(_						"spring.datasource.driverClassName:org.hsqldb.jdbcDriver",_						"spring.datasource.url:jdbc:hsqldb:mem:testdb",_						"spring.datasource.type:"_								+ SimpleDriverDataSource.class.getName())_				.run(this::containsOnlySimpleDriverDataSource)__	};this,test,makes,sure,that,if,no,supported,data,source,is,present,a,datasource,is,still,created,if,spring,datasource,type,is,present;test,public,void,explicit,type,no,supported,data,source,this,context,runner,with,class,loader,new,filtered,class,loader,org,apache,tomcat,com,zaxxer,hikari,org,apache,commons,dbcp,org,apache,commons,dbcp2,with,property,values,spring,datasource,driver,class,name,org,hsqldb,jdbc,driver,spring,datasource,url,jdbc,hsqldb,mem,testdb,spring,datasource,type,simple,driver,data,source,class,get,name,run,this,contains,only,simple,driver,data,source
DataSourceAutoConfigurationTests -> @Test 	public void explicitTypeNoSupportedDataSource();1519289773;This test makes sure that if no supported data source is present, a datasource is_still created if "spring.datasource.type" is present.;@Test_	public void explicitTypeNoSupportedDataSource() {_		this.contextRunner_				.withClassLoader(_						new FilteredClassLoader("org.apache.tomcat", "com.zaxxer.hikari",_								"org.apache.commons.dbcp", "org.apache.commons.dbcp2"))_				.withPropertyValues(_						"spring.datasource.driverClassName:org.hsqldb.jdbcDriver",_						"spring.datasource.url:jdbc:hsqldb:mem:testdb",_						"spring.datasource.type:"_								+ SimpleDriverDataSource.class.getName())_				.run(this::containsOnlySimpleDriverDataSource)__	};this,test,makes,sure,that,if,no,supported,data,source,is,present,a,datasource,is,still,created,if,spring,datasource,type,is,present;test,public,void,explicit,type,no,supported,data,source,this,context,runner,with,class,loader,new,filtered,class,loader,org,apache,tomcat,com,zaxxer,hikari,org,apache,commons,dbcp,org,apache,commons,dbcp2,with,property,values,spring,datasource,driver,class,name,org,hsqldb,jdbc,driver,spring,datasource,url,jdbc,hsqldb,mem,testdb,spring,datasource,type,simple,driver,data,source,class,get,name,run,this,contains,only,simple,driver,data,source
DataSourceAutoConfigurationTests -> @Test 	public void explicitTypeNoSupportedDataSource();1519359928;This test makes sure that if no supported data source is present, a datasource is_still created if "spring.datasource.type" is present.;@Test_	public void explicitTypeNoSupportedDataSource() {_		this.contextRunner_				.withClassLoader(_						new FilteredClassLoader("org.apache.tomcat", "com.zaxxer.hikari",_								"org.apache.commons.dbcp", "org.apache.commons.dbcp2"))_				.withPropertyValues(_						"spring.datasource.driverClassName:org.hsqldb.jdbcDriver",_						"spring.datasource.url:jdbc:hsqldb:mem:testdb",_						"spring.datasource.type:"_								+ SimpleDriverDataSource.class.getName())_				.run(this::containsOnlySimpleDriverDataSource)__	};this,test,makes,sure,that,if,no,supported,data,source,is,present,a,datasource,is,still,created,if,spring,datasource,type,is,present;test,public,void,explicit,type,no,supported,data,source,this,context,runner,with,class,loader,new,filtered,class,loader,org,apache,tomcat,com,zaxxer,hikari,org,apache,commons,dbcp,org,apache,commons,dbcp2,with,property,values,spring,datasource,driver,class,name,org,hsqldb,jdbc,driver,spring,datasource,url,jdbc,hsqldb,mem,testdb,spring,datasource,type,simple,driver,data,source,class,get,name,run,this,contains,only,simple,driver,data,source
DataSourceAutoConfigurationTests -> @Test 	public void explicitTypeNoSupportedDataSource();1519362690;This test makes sure that if no supported data source is present, a datasource is_still created if "spring.datasource.type" is present.;@Test_	public void explicitTypeNoSupportedDataSource() {_		this.contextRunner_				.withClassLoader(_						new FilteredClassLoader("org.apache.tomcat", "com.zaxxer.hikari",_								"org.apache.commons.dbcp", "org.apache.commons.dbcp2"))_				.withPropertyValues(_						"spring.datasource.driverClassName:org.hsqldb.jdbcDriver",_						"spring.datasource.url:jdbc:hsqldb:mem:testdb",_						"spring.datasource.type:"_								+ SimpleDriverDataSource.class.getName())_				.run(this::containsOnlySimpleDriverDataSource)__	};this,test,makes,sure,that,if,no,supported,data,source,is,present,a,datasource,is,still,created,if,spring,datasource,type,is,present;test,public,void,explicit,type,no,supported,data,source,this,context,runner,with,class,loader,new,filtered,class,loader,org,apache,tomcat,com,zaxxer,hikari,org,apache,commons,dbcp,org,apache,commons,dbcp2,with,property,values,spring,datasource,driver,class,name,org,hsqldb,jdbc,driver,spring,datasource,url,jdbc,hsqldb,mem,testdb,spring,datasource,type,simple,driver,data,source,class,get,name,run,this,contains,only,simple,driver,data,source
DataSourceAutoConfigurationTests -> @Test 	public void explicitTypeNoSupportedDataSource();1544060949;This test makes sure that if no supported data source is present, a datasource is_still created if "spring.datasource.type" is present.;@Test_	public void explicitTypeNoSupportedDataSource() {_		this.contextRunner_				.withClassLoader(_						new FilteredClassLoader("org.apache.tomcat", "com.zaxxer.hikari",_								"org.apache.commons.dbcp", "org.apache.commons.dbcp2"))_				.withPropertyValues(_						"spring.datasource.driverClassName:org.hsqldb.jdbcDriver",_						"spring.datasource.url:jdbc:hsqldb:mem:testdb",_						"spring.datasource.type:"_								+ SimpleDriverDataSource.class.getName())_				.run(this::containsOnlySimpleDriverDataSource)__	};this,test,makes,sure,that,if,no,supported,data,source,is,present,a,datasource,is,still,created,if,spring,datasource,type,is,present;test,public,void,explicit,type,no,supported,data,source,this,context,runner,with,class,loader,new,filtered,class,loader,org,apache,tomcat,com,zaxxer,hikari,org,apache,commons,dbcp,org,apache,commons,dbcp2,with,property,values,spring,datasource,driver,class,name,org,hsqldb,jdbc,driver,spring,datasource,url,jdbc,hsqldb,mem,testdb,spring,datasource,type,simple,driver,data,source,class,get,name,run,this,contains,only,simple,driver,data,source
DataSourceAutoConfigurationTests -> @Test 	public void explicitTypeNoSupportedDataSource();1544633370;This test makes sure that if no supported data source is present, a datasource is_still created if "spring.datasource.type" is present.;@Test_	public void explicitTypeNoSupportedDataSource() {_		this.contextRunner_				.withClassLoader(_						new FilteredClassLoader("org.apache.tomcat", "com.zaxxer.hikari",_								"org.apache.commons.dbcp", "org.apache.commons.dbcp2"))_				.withPropertyValues(_						"spring.datasource.driverClassName:org.hsqldb.jdbcDriver",_						"spring.datasource.url:jdbc:hsqldb:mem:testdb",_						"spring.datasource.type:"_								+ SimpleDriverDataSource.class.getName())_				.run(this::containsOnlySimpleDriverDataSource)__	};this,test,makes,sure,that,if,no,supported,data,source,is,present,a,datasource,is,still,created,if,spring,datasource,type,is,present;test,public,void,explicit,type,no,supported,data,source,this,context,runner,with,class,loader,new,filtered,class,loader,org,apache,tomcat,com,zaxxer,hikari,org,apache,commons,dbcp,org,apache,commons,dbcp2,with,property,values,spring,datasource,driver,class,name,org,hsqldb,jdbc,driver,spring,datasource,url,jdbc,hsqldb,mem,testdb,spring,datasource,type,simple,driver,data,source,class,get,name,run,this,contains,only,simple,driver,data,source
DataSourceAutoConfigurationTests -> @Test 	public void explicitTypeNoSupportedDataSource();1544809820;This test makes sure that if no supported data source is present, a datasource is_still created if "spring.datasource.type" is present.;@Test_	public void explicitTypeNoSupportedDataSource() {_		this.contextRunner_				.withClassLoader(_						new FilteredClassLoader("org.apache.tomcat", "com.zaxxer.hikari",_								"org.apache.commons.dbcp", "org.apache.commons.dbcp2"))_				.withPropertyValues(_						"spring.datasource.driverClassName:org.hsqldb.jdbcDriver",_						"spring.datasource.url:jdbc:hsqldb:mem:testdb",_						"spring.datasource.type:"_								+ SimpleDriverDataSource.class.getName())_				.run(this::containsOnlySimpleDriverDataSource)__	};this,test,makes,sure,that,if,no,supported,data,source,is,present,a,datasource,is,still,created,if,spring,datasource,type,is,present;test,public,void,explicit,type,no,supported,data,source,this,context,runner,with,class,loader,new,filtered,class,loader,org,apache,tomcat,com,zaxxer,hikari,org,apache,commons,dbcp,org,apache,commons,dbcp2,with,property,values,spring,datasource,driver,class,name,org,hsqldb,jdbc,driver,spring,datasource,url,jdbc,hsqldb,mem,testdb,spring,datasource,type,simple,driver,data,source,class,get,name,run,this,contains,only,simple,driver,data,source
