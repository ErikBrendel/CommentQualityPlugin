commented;modifiers;parameterAmount;loc;comment;code
false;public;0;5;;@Test public void getBrokerUrlIsInMemoryByDefault() {     assertThat(createFactory(this.properties).determineBrokerUrl()).isEqualTo(DEFAULT_EMBEDDED_BROKER_URL). }
false;public;0;6;;@Test public void getBrokerUrlUseExplicitBrokerUrl() {     this.properties.setBrokerUrl("vm://foo-bar").     assertThat(createFactory(this.properties).determineBrokerUrl()).isEqualTo("vm://foo-bar"). }
false;public;0;6;;@Test public void getBrokerUrlWithInMemorySetToFalse() {     this.properties.setInMemory(false).     assertThat(createFactory(this.properties).determineBrokerUrl()).isEqualTo(DEFAULT_NETWORK_BROKER_URL). }
false;public;0;7;;@Test public void getExplicitBrokerUrlAlwaysWins() {     this.properties.setBrokerUrl("vm://foo-bar").     this.properties.setInMemory(false).     assertThat(createFactory(this.properties).determineBrokerUrl()).isEqualTo("vm://foo-bar"). }
false;public;0;7;;@Test public void setTrustAllPackages() {     this.properties.getPackages().setTrustAll(true).     assertThat(createFactory(this.properties).createConnectionFactory(ActiveMQConnectionFactory.class).isTrustAllPackages()).isTrue(). }
false;public;0;10;;@Test public void setTrustedPackages() {     this.properties.getPackages().setTrustAll(false).     this.properties.getPackages().getTrusted().add("trusted.package").     ActiveMQConnectionFactory factory = createFactory(this.properties).createConnectionFactory(ActiveMQConnectionFactory.class).     assertThat(factory.isTrustAllPackages()).isFalse().     assertThat(factory.getTrustedPackages().size()).isEqualTo(1).     assertThat(factory.getTrustedPackages().get(0)).isEqualTo("trusted.package"). }
false;private;1;4;;private ActiveMQConnectionFactoryFactory createFactory(ActiveMQProperties properties) {     return new ActiveMQConnectionFactoryFactory(properties, Collections.emptyList()). }
