commented;modifiers;parameterAmount;loc;comment;code
false;public;0;14;;@Test public void testDefaultRepositoryConfiguration() {     this.contextRunner.withUserConfiguration(TestConfiguration.class).run((context) -> {         assertThat(context).hasSingleBean(ReactiveCityRepository.class).         assertThat(context).hasSingleBean(MongoClient.class).         MongoMappingContext mappingContext = context.getBean(MongoMappingContext.class).         @SuppressWarnings("unchecked")         Set<? extends Class<?>> entities = (Set<? extends Class<?>>) ReflectionTestUtils.getField(mappingContext, "initialEntitySet").         assertThat(entities).hasSize(1).     }). }
false;public;0;5;;@Test public void testNoRepositoryConfiguration() {     this.contextRunner.withUserConfiguration(EmptyConfiguration.class).run((context) -> assertThat(context).hasSingleBean(MongoClient.class)). }
false;public;0;6;;@Test public void doesNotTriggerDefaultRepositoryDetectionIfCustomized() {     this.contextRunner.withUserConfiguration(CustomizedConfiguration.class).run((context) -> assertThat(context).doesNotHaveBean(ReactiveCityMongoDbRepository.class)). }
false;public;0;6;;@Test public void autoConfigurationShouldNotKickInEvenIfManualConfigDidNotCreateAnyRepositories() {     this.contextRunner.withUserConfiguration(SortOfInvalidCustomConfiguration.class).run((context) -> assertThat(context).doesNotHaveBean(ReactiveCityRepository.class)). }
false;public;0;7;;@Test public void enablingImperativeRepositoriesDisablesReactiveRepositories() {     this.contextRunner.withUserConfiguration(TestConfiguration.class).withPropertyValues("spring.data.mongodb.repositories.type=imperative").run((context) -> assertThat(context).doesNotHaveBean(ReactiveCityRepository.class)). }
false;public;0;7;;@Test public void enablingNoRepositoriesDisablesReactiveRepositories() {     this.contextRunner.withUserConfiguration(TestConfiguration.class).withPropertyValues("spring.data.mongodb.repositories.type=none").run((context) -> assertThat(context).doesNotHaveBean(ReactiveCityRepository.class)). }
