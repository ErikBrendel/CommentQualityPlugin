commented;modifiers;parameterAmount;loc;comment;code
false;public;0;10;;@Test public void renderNonWebAppTemplate() {     this.contextRunner.run((context) -> {         freemarker.template.Configuration freemarker = context.getBean(freemarker.template.Configuration.class).         StringWriter writer = new StringWriter().         freemarker.getTemplate("message.ftl").process(this, writer).         assertThat(writer.toString()).contains("Hello World").     }). }
false;public;0;3;;public String getGreeting() {     return "Hello World". }
false;public;0;8;;@Test public void nonExistentTemplateLocation() {     this.contextRunner.withPropertyValues("spring.freemarker.templateLoaderPath:" + "classpath:/does-not-exist/,classpath:/also-does-not-exist").run((context) -> assertThat(this.output.toString()).contains("Cannot find template location")). }
false;public;0;11;;@Test public void emptyTemplateLocation() {     File emptyDirectory = new File(this.buildOutput.getTestResourcesLocation(), "empty-templates/empty-directory").     emptyDirectory.mkdirs().     this.contextRunner.withPropertyValues("spring.freemarker.templateLoaderPath:" + "classpath:/empty-templates/empty-directory/").run((context) -> assertThat(this.output.toString()).doesNotContain("Cannot find template location")). }
false;public;0;9;;@Test public void nonExistentLocationAndEmptyLocation() {     new File(this.buildOutput.getTestResourcesLocation(), "empty-templates/empty-directory").mkdirs().     this.contextRunner.withPropertyValues("spring.freemarker.templateLoaderPath:" + "classpath:/does-not-exist/,classpath:/empty-templates/empty-directory/").run((context) -> assertThat(this.output.toString()).doesNotContain("Cannot find template location")). }
