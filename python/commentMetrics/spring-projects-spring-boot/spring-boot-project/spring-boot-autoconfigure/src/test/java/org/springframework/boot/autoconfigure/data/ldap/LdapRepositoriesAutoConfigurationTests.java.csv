commented;modifiers;parameterAmount;loc;comment;code
false;public;0;6;;@After public void close() {     if (this.context != null) {         this.context.close().     } }
false;public;0;5;;@Test public void testDefaultRepositoryConfiguration() {     load(TestConfiguration.class).     assertThat(this.context.getBean(PersonRepository.class)).isNotNull(). }
false;public;0;5;;@Test public void testNoRepositoryConfiguration() {     load(EmptyConfiguration.class).     assertThat(this.context.getBeanNamesForType(PersonRepository.class)).isEmpty(). }
false;public;0;5;;@Test public void doesNotTriggerDefaultRepositoryDetectionIfCustomized() {     load(CustomizedConfiguration.class).     assertThat(this.context.getBean(PersonLdapRepository.class)).isNotNull(). }
false;private;1;10;;private void load(Class<?>... configurationClasses) {     this.context = new AnnotationConfigApplicationContext().     TestPropertyValues.of("spring.ldap.urls:ldap://localhost:389").applyTo(this.context).     this.context.register(configurationClasses).     this.context.register(LdapAutoConfiguration.class, LdapRepositoriesAutoConfiguration.class, PropertyPlaceholderAutoConfiguration.class).     this.context.refresh(). }
