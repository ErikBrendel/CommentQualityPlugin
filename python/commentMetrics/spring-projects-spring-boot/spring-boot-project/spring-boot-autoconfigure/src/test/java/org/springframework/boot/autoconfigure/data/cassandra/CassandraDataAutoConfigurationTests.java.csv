commented;modifiers;parameterAmount;loc;comment;code
false;public;0;6;;@After public void close() {     if (this.context != null) {         this.context.close().     } }
false;public;0;6;;@Test public void templateExists() {     load(TestExcludeConfiguration.class).     assertThat(this.context.getBeanNamesForType(CassandraTemplate.class).length).isEqualTo(1). }
false;public;0;10;;@Test @SuppressWarnings("unchecked") public void entityScanShouldSetInitialEntitySet() {     load(EntityScanConfig.class).     CassandraMappingContext mappingContext = this.context.getBean(CassandraMappingContext.class).     Set<Class<?>> initialEntitySet = (Set<Class<?>>) ReflectionTestUtils.getField(mappingContext, "initialEntitySet").     assertThat(initialEntitySet).containsOnly(City.class). }
false;public;0;8;;@Test public void userTypeResolverShouldBeSet() {     load().     CassandraMappingContext mappingContext = this.context.getBean(CassandraMappingContext.class).     assertThat(ReflectionTestUtils.getField(mappingContext, "userTypeResolver")).isInstanceOf(SimpleUserTypeResolver.class). }
false;public;0;7;;@Test public void defaultConversions() {     load().     CassandraTemplate template = this.context.getBean(CassandraTemplate.class).     assertThat(template.getConverter().getConversionService().canConvert(Person.class, String.class)).isFalse(). }
false;public;0;8;;@Test public void customConversions() {     load(CustomConversionConfig.class).     CassandraTemplate template = this.context.getBean(CassandraTemplate.class).     assertThat(template.getConverter().getConversionService().canConvert(Person.class, String.class)).isTrue(). }
false;public;1;12;;public void load(Class<?>... config) {     AnnotationConfigApplicationContext ctx = new AnnotationConfigApplicationContext().     TestPropertyValues.of("spring.data.cassandra.keyspaceName:boot_test").applyTo(ctx).     if (!ObjectUtils.isEmpty(config)) {         ctx.register(config).     }     ctx.register(TestConfiguration.class, CassandraAutoConfiguration.class, CassandraDataAutoConfiguration.class).     ctx.refresh().     this.context = ctx. }
false;public;0;4;;@Bean public Session getObject() {     return mock(Session.class). }
false;public;0;5;;@Bean public CassandraCustomConversions myCassandraCustomConversions() {     return new CassandraCustomConversions(Collections.singletonList(new MyConverter())). }
false;public;1;4;;@Override public String convert(Person o) {     return null. }
