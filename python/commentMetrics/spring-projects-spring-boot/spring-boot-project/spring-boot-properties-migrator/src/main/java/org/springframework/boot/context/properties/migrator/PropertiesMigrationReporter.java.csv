# id;timestamp;commentText;codeText;commentWords;codeWords
PropertiesMigrationReporter -> public PropertiesMigrationReport getReport();1516838064;Analyse the {@link ConfigurableEnvironment environment} and attempt to rename_legacy properties if a replacement exists._@return the analysis;public PropertiesMigrationReport getReport() {_		PropertiesMigrationReport report = new PropertiesMigrationReport()__		Map<String, List<PropertyMigration>> properties = getMatchingProperties(_				deprecatedFilter())__		if (properties.isEmpty()) {_			return report__		}_		properties.forEach((name, candidates) -> {_			PropertySource<?> propertySource = mapPropertiesWithReplacement(report,_					name, candidates)__			if (propertySource != null) {_				this.environment.getPropertySources().addBefore(name, propertySource)__			}_		})__		return report__	};analyse,the,link,configurable,environment,environment,and,attempt,to,rename,legacy,properties,if,a,replacement,exists,return,the,analysis;public,properties,migration,report,get,report,properties,migration,report,report,new,properties,migration,report,map,string,list,property,migration,properties,get,matching,properties,deprecated,filter,if,properties,is,empty,return,report,properties,for,each,name,candidates,property,source,property,source,map,properties,with,replacement,report,name,candidates,if,property,source,null,this,environment,get,property,sources,add,before,name,property,source,return,report
PropertiesMigrationReporter -> public PropertiesMigrationReport getReport();1516995581;Analyse the {@link ConfigurableEnvironment environment} and attempt to rename_legacy properties if a replacement exists._@return the analysis;public PropertiesMigrationReport getReport() {_		PropertiesMigrationReport report = new PropertiesMigrationReport()__		Map<String, List<PropertyMigration>> properties = getMatchingProperties(_				deprecatedFilter())__		if (properties.isEmpty()) {_			return report__		}_		properties.forEach((name, candidates) -> {_			PropertySource<?> propertySource = mapPropertiesWithReplacement(report, name,_					candidates)__			if (propertySource != null) {_				this.environment.getPropertySources().addBefore(name, propertySource)__			}_		})__		return report__	};analyse,the,link,configurable,environment,environment,and,attempt,to,rename,legacy,properties,if,a,replacement,exists,return,the,analysis;public,properties,migration,report,get,report,properties,migration,report,report,new,properties,migration,report,map,string,list,property,migration,properties,get,matching,properties,deprecated,filter,if,properties,is,empty,return,report,properties,for,each,name,candidates,property,source,property,source,map,properties,with,replacement,report,name,candidates,if,property,source,null,this,environment,get,property,sources,add,before,name,property,source,return,report
PropertiesMigrationReporter -> public PropertiesMigrationReport getReport();1517216378;Analyse the {@link ConfigurableEnvironment environment} and attempt to rename_legacy properties if a replacement exists._@return the analysis;public PropertiesMigrationReport getReport() {_		PropertiesMigrationReport report = new PropertiesMigrationReport()__		Map<String, List<PropertyMigration>> properties = getMatchingProperties(_				deprecatedFilter())__		if (properties.isEmpty()) {_			return report__		}_		properties.forEach((name, candidates) -> {_			PropertySource<?> propertySource = mapPropertiesWithReplacement(report, name,_					candidates)__			if (propertySource != null) {_				this.environment.getPropertySources().addBefore(name, propertySource)__			}_		})__		return report__	};analyse,the,link,configurable,environment,environment,and,attempt,to,rename,legacy,properties,if,a,replacement,exists,return,the,analysis;public,properties,migration,report,get,report,properties,migration,report,report,new,properties,migration,report,map,string,list,property,migration,properties,get,matching,properties,deprecated,filter,if,properties,is,empty,return,report,properties,for,each,name,candidates,property,source,property,source,map,properties,with,replacement,report,name,candidates,if,property,source,null,this,environment,get,property,sources,add,before,name,property,source,return,report
PropertiesMigrationReporter -> public PropertiesMigrationReport getReport();1517248023;Analyse the {@link ConfigurableEnvironment environment} and attempt to rename_legacy properties if a replacement exists._@return the analysis;public PropertiesMigrationReport getReport() {_		PropertiesMigrationReport report = new PropertiesMigrationReport()__		Map<String, List<PropertyMigration>> properties = getMatchingProperties(_				deprecatedFilter())__		if (properties.isEmpty()) {_			return report__		}_		properties.forEach((name, candidates) -> {_			PropertySource<?> propertySource = mapPropertiesWithReplacement(report, name,_					candidates)__			if (propertySource != null) {_				this.environment.getPropertySources().addBefore(name, propertySource)__			}_		})__		return report__	};analyse,the,link,configurable,environment,environment,and,attempt,to,rename,legacy,properties,if,a,replacement,exists,return,the,analysis;public,properties,migration,report,get,report,properties,migration,report,report,new,properties,migration,report,map,string,list,property,migration,properties,get,matching,properties,deprecated,filter,if,properties,is,empty,return,report,properties,for,each,name,candidates,property,source,property,source,map,properties,with,replacement,report,name,candidates,if,property,source,null,this,environment,get,property,sources,add,before,name,property,source,return,report
PropertiesMigrationReporter -> public PropertiesMigrationReport getReport();1517319969;Analyse the {@link ConfigurableEnvironment environment} and attempt to rename_legacy properties if a replacement exists._@return a report of the migration;public PropertiesMigrationReport getReport() {_		PropertiesMigrationReport report = new PropertiesMigrationReport()__		Map<String, List<PropertyMigration>> properties = getMatchingProperties(_				deprecatedFilter())__		if (properties.isEmpty()) {_			return report__		}_		properties.forEach((name, candidates) -> {_			PropertySource<?> propertySource = mapPropertiesWithReplacement(report, name,_					candidates)__			if (propertySource != null) {_				this.environment.getPropertySources().addBefore(name, propertySource)__			}_		})__		return report__	};analyse,the,link,configurable,environment,environment,and,attempt,to,rename,legacy,properties,if,a,replacement,exists,return,a,report,of,the,migration;public,properties,migration,report,get,report,properties,migration,report,report,new,properties,migration,report,map,string,list,property,migration,properties,get,matching,properties,deprecated,filter,if,properties,is,empty,return,report,properties,for,each,name,candidates,property,source,property,source,map,properties,with,replacement,report,name,candidates,if,property,source,null,this,environment,get,property,sources,add,before,name,property,source,return,report
PropertiesMigrationReporter -> public PropertiesMigrationReport getReport();1540596962;Analyse the {@link ConfigurableEnvironment environment} and attempt to rename_legacy properties if a replacement exists._@return a report of the migration;public PropertiesMigrationReport getReport() {_		PropertiesMigrationReport report = new PropertiesMigrationReport()__		Map<String, List<PropertyMigration>> properties = getMatchingProperties(_				deprecatedFilter())__		if (properties.isEmpty()) {_			return report__		}_		properties.forEach((name, candidates) -> {_			PropertySource<?> propertySource = mapPropertiesWithReplacement(report, name,_					candidates)__			if (propertySource != null) {_				this.environment.getPropertySources().addBefore(name, propertySource)__			}_		})__		return report__	};analyse,the,link,configurable,environment,environment,and,attempt,to,rename,legacy,properties,if,a,replacement,exists,return,a,report,of,the,migration;public,properties,migration,report,get,report,properties,migration,report,report,new,properties,migration,report,map,string,list,property,migration,properties,get,matching,properties,deprecated,filter,if,properties,is,empty,return,report,properties,for,each,name,candidates,property,source,property,source,map,properties,with,replacement,report,name,candidates,if,property,source,null,this,environment,get,property,sources,add,before,name,property,source,return,report
PropertiesMigrationReporter -> public PropertiesMigrationReport getReport();1546017779;Analyse the {@link ConfigurableEnvironment environment} and attempt to rename_legacy properties if a replacement exists._@return a report of the migration;public PropertiesMigrationReport getReport() {_		PropertiesMigrationReport report = new PropertiesMigrationReport()__		Map<String, List<PropertyMigration>> properties = getMatchingProperties(_				deprecatedFilter())__		if (properties.isEmpty()) {_			return report__		}_		properties.forEach((name, candidates) -> {_			PropertySource<?> propertySource = mapPropertiesWithReplacement(report, name,_					candidates)__			if (propertySource != null) {_				this.environment.getPropertySources().addBefore(name, propertySource)__			}_		})__		return report__	};analyse,the,link,configurable,environment,environment,and,attempt,to,rename,legacy,properties,if,a,replacement,exists,return,a,report,of,the,migration;public,properties,migration,report,get,report,properties,migration,report,report,new,properties,migration,report,map,string,list,property,migration,properties,get,matching,properties,deprecated,filter,if,properties,is,empty,return,report,properties,for,each,name,candidates,property,source,property,source,map,properties,with,replacement,report,name,candidates,if,property,source,null,this,environment,get,property,sources,add,before,name,property,source,return,report
