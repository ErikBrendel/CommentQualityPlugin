# id;timestamp;commentText;codeText;commentWords;codeWords
GroovyCompiler -> public List<ASTTransformation> getAstTransformations();1507173536;Return a mutable list of the {@link ASTTransformation}s to be applied during_{@link #compile(String...)}._@return the AST transformations to apply;public List<ASTTransformation> getAstTransformations() {_		return this.transformations__	};return,a,mutable,list,of,the,link,asttransformation,s,to,be,applied,during,link,compile,string,return,the,ast,transformations,to,apply;public,list,asttransformation,get,ast,transformations,return,this,transformations
GroovyCompiler -> public List<ASTTransformation> getAstTransformations();1512760426;Return a mutable list of the {@link ASTTransformation}s to be applied during_{@link #compile(String...)}._@return the AST transformations to apply;public List<ASTTransformation> getAstTransformations() {_		return this.transformations__	};return,a,mutable,list,of,the,link,asttransformation,s,to,be,applied,during,link,compile,string,return,the,ast,transformations,to,apply;public,list,asttransformation,get,ast,transformations,return,this,transformations
GroovyCompiler -> public List<ASTTransformation> getAstTransformations();1517273683;Return a mutable list of the {@link ASTTransformation}s to be applied during_{@link #compile(String...)}._@return the AST transformations to apply;public List<ASTTransformation> getAstTransformations() {_		return this.transformations__	};return,a,mutable,list,of,the,link,asttransformation,s,to,be,applied,during,link,compile,string,return,the,ast,transformations,to,apply;public,list,asttransformation,get,ast,transformations,return,this,transformations
GroovyCompiler -> public List<ASTTransformation> getAstTransformations();1517290556;Return a mutable list of the {@link ASTTransformation}s to be applied during_{@link #compile(String...)}._@return the AST transformations to apply;public List<ASTTransformation> getAstTransformations() {_		return this.transformations__	};return,a,mutable,list,of,the,link,asttransformation,s,to,be,applied,during,link,compile,string,return,the,ast,transformations,to,apply;public,list,asttransformation,get,ast,transformations,return,this,transformations
GroovyCompiler -> public List<ASTTransformation> getAstTransformations();1517564108;Return a mutable list of the {@link ASTTransformation}s to be applied during_{@link #compile(String...)}._@return the AST transformations to apply;public List<ASTTransformation> getAstTransformations() {_		return this.transformations__	};return,a,mutable,list,of,the,link,asttransformation,s,to,be,applied,during,link,compile,string,return,the,ast,transformations,to,apply;public,list,asttransformation,get,ast,transformations,return,this,transformations
GroovyCompiler -> public List<ASTTransformation> getAstTransformations();1519362690;Return a mutable list of the {@link ASTTransformation}s to be applied during_{@link #compile(String...)}._@return the AST transformations to apply;public List<ASTTransformation> getAstTransformations() {_		return this.transformations__	};return,a,mutable,list,of,the,link,asttransformation,s,to,be,applied,during,link,compile,string,return,the,ast,transformations,to,apply;public,list,asttransformation,get,ast,transformations,return,this,transformations
GroovyCompiler -> public List<ASTTransformation> getAstTransformations();1519552808;Return a mutable list of the {@link ASTTransformation}s to be applied during_{@link #compile(String...)}._@return the AST transformations to apply;public List<ASTTransformation> getAstTransformations() {_		return this.transformations__	};return,a,mutable,list,of,the,link,asttransformation,s,to,be,applied,during,link,compile,string,return,the,ast,transformations,to,apply;public,list,asttransformation,get,ast,transformations,return,this,transformations
GroovyCompiler -> public List<ASTTransformation> getAstTransformations();1532852936;Return a mutable list of the {@link ASTTransformation}s to be applied during_{@link #compile(String...)}._@return the AST transformations to apply;public List<ASTTransformation> getAstTransformations() {_		return this.transformations__	};return,a,mutable,list,of,the,link,asttransformation,s,to,be,applied,during,link,compile,string,return,the,ast,transformations,to,apply;public,list,asttransformation,get,ast,transformations,return,this,transformations
GroovyCompiler -> public List<ASTTransformation> getAstTransformations();1550737183;Return a mutable list of the {@link ASTTransformation}s to be applied during_{@link #compile(String...)}._@return the AST transformations to apply;public List<ASTTransformation> getAstTransformations() {_		return this.transformations__	};return,a,mutable,list,of,the,link,asttransformation,s,to,be,applied,during,link,compile,string,return,the,ast,transformations,to,apply;public,list,asttransformation,get,ast,transformations,return,this,transformations
GroovyCompiler -> public GroovyCompiler(GroovyCompilerConfiguration configuration);1512760426;Create a new {@link GroovyCompiler} instance._@param configuration the compiler configuration;public GroovyCompiler(GroovyCompilerConfiguration configuration) {__		this.configuration = configuration__		this.loader = createLoader(configuration)___		DependencyResolutionContext resolutionContext = new DependencyResolutionContext()__		resolutionContext.addDependencyManagement(_				new SpringBootDependenciesDependencyManagement())___		AetherGrapeEngine grapeEngine = AetherGrapeEngineFactory.create(this.loader,_				configuration.getRepositoryConfiguration(), resolutionContext,_				configuration.isQuiet())___		GrapeEngineInstaller.install(grapeEngine)___		this.loader.getConfiguration()_				.addCompilationCustomizers(new CompilerAutoConfigureCustomizer())__		if (configuration.isAutoconfigure()) {_			this.compilerAutoConfigurations = ServiceLoader_					.load(CompilerAutoConfiguration.class)__		}_		else {_			this.compilerAutoConfigurations = Collections.emptySet()__		}__		this.transformations = new ArrayList<>()__		this.transformations_				.add(new DependencyManagementBomTransformation(resolutionContext))__		this.transformations.add(new DependencyAutoConfigurationTransformation(_				this.loader, resolutionContext, this.compilerAutoConfigurations))__		this.transformations.add(new GroovyBeansTransformation())__		if (this.configuration.isGuessDependencies()) {_			this.transformations.add(_					new ResolveDependencyCoordinatesTransformation(resolutionContext))__		}_		for (ASTTransformation transformation : ServiceLoader_				.load(SpringBootAstTransformation.class)) {_			this.transformations.add(transformation)__		}_		this.transformations.sort(AnnotationAwareOrderComparator.INSTANCE)__	};create,a,new,link,groovy,compiler,instance,param,configuration,the,compiler,configuration;public,groovy,compiler,groovy,compiler,configuration,configuration,this,configuration,configuration,this,loader,create,loader,configuration,dependency,resolution,context,resolution,context,new,dependency,resolution,context,resolution,context,add,dependency,management,new,spring,boot,dependencies,dependency,management,aether,grape,engine,grape,engine,aether,grape,engine,factory,create,this,loader,configuration,get,repository,configuration,resolution,context,configuration,is,quiet,grape,engine,installer,install,grape,engine,this,loader,get,configuration,add,compilation,customizers,new,compiler,auto,configure,customizer,if,configuration,is,autoconfigure,this,compiler,auto,configurations,service,loader,load,compiler,auto,configuration,class,else,this,compiler,auto,configurations,collections,empty,set,this,transformations,new,array,list,this,transformations,add,new,dependency,management,bom,transformation,resolution,context,this,transformations,add,new,dependency,auto,configuration,transformation,this,loader,resolution,context,this,compiler,auto,configurations,this,transformations,add,new,groovy,beans,transformation,if,this,configuration,is,guess,dependencies,this,transformations,add,new,resolve,dependency,coordinates,transformation,resolution,context,for,asttransformation,transformation,service,loader,load,spring,boot,ast,transformation,class,this,transformations,add,transformation,this,transformations,sort,annotation,aware,order,comparator,instance
GroovyCompiler -> public GroovyCompiler(GroovyCompilerConfiguration configuration);1517273683;Create a new {@link GroovyCompiler} instance._@param configuration the compiler configuration;public GroovyCompiler(GroovyCompilerConfiguration configuration) {__		this.configuration = configuration__		this.loader = createLoader(configuration)___		DependencyResolutionContext resolutionContext = new DependencyResolutionContext()__		resolutionContext.addDependencyManagement(_				new SpringBootDependenciesDependencyManagement())___		AetherGrapeEngine grapeEngine = AetherGrapeEngineFactory.create(this.loader,_				configuration.getRepositoryConfiguration(), resolutionContext,_				configuration.isQuiet())___		GrapeEngineInstaller.install(grapeEngine)___		this.loader.getConfiguration()_				.addCompilationCustomizers(new CompilerAutoConfigureCustomizer())__		if (configuration.isAutoconfigure()) {_			this.compilerAutoConfigurations = ServiceLoader_					.load(CompilerAutoConfiguration.class)__		}_		else {_			this.compilerAutoConfigurations = Collections.emptySet()__		}__		this.transformations = new ArrayList<>()__		this.transformations_				.add(new DependencyManagementBomTransformation(resolutionContext))__		this.transformations.add(new DependencyAutoConfigurationTransformation(_				this.loader, resolutionContext, this.compilerAutoConfigurations))__		this.transformations.add(new GroovyBeansTransformation())__		if (this.configuration.isGuessDependencies()) {_			this.transformations.add(_					new ResolveDependencyCoordinatesTransformation(resolutionContext))__		}_		for (ASTTransformation transformation : ServiceLoader_				.load(SpringBootAstTransformation.class)) {_			this.transformations.add(transformation)__		}_		this.transformations.sort(AnnotationAwareOrderComparator.INSTANCE)__	};create,a,new,link,groovy,compiler,instance,param,configuration,the,compiler,configuration;public,groovy,compiler,groovy,compiler,configuration,configuration,this,configuration,configuration,this,loader,create,loader,configuration,dependency,resolution,context,resolution,context,new,dependency,resolution,context,resolution,context,add,dependency,management,new,spring,boot,dependencies,dependency,management,aether,grape,engine,grape,engine,aether,grape,engine,factory,create,this,loader,configuration,get,repository,configuration,resolution,context,configuration,is,quiet,grape,engine,installer,install,grape,engine,this,loader,get,configuration,add,compilation,customizers,new,compiler,auto,configure,customizer,if,configuration,is,autoconfigure,this,compiler,auto,configurations,service,loader,load,compiler,auto,configuration,class,else,this,compiler,auto,configurations,collections,empty,set,this,transformations,new,array,list,this,transformations,add,new,dependency,management,bom,transformation,resolution,context,this,transformations,add,new,dependency,auto,configuration,transformation,this,loader,resolution,context,this,compiler,auto,configurations,this,transformations,add,new,groovy,beans,transformation,if,this,configuration,is,guess,dependencies,this,transformations,add,new,resolve,dependency,coordinates,transformation,resolution,context,for,asttransformation,transformation,service,loader,load,spring,boot,ast,transformation,class,this,transformations,add,transformation,this,transformations,sort,annotation,aware,order,comparator,instance
GroovyCompiler -> public GroovyCompiler(GroovyCompilerConfiguration configuration);1517290556;Create a new {@link GroovyCompiler} instance._@param configuration the compiler configuration;public GroovyCompiler(GroovyCompilerConfiguration configuration) {__		this.configuration = configuration__		this.loader = createLoader(configuration)___		DependencyResolutionContext resolutionContext = new DependencyResolutionContext()__		resolutionContext.addDependencyManagement(_				new SpringBootDependenciesDependencyManagement())___		AetherGrapeEngine grapeEngine = AetherGrapeEngineFactory.create(this.loader,_				configuration.getRepositoryConfiguration(), resolutionContext,_				configuration.isQuiet())___		GrapeEngineInstaller.install(grapeEngine)___		this.loader.getConfiguration()_				.addCompilationCustomizers(new CompilerAutoConfigureCustomizer())__		if (configuration.isAutoconfigure()) {_			this.compilerAutoConfigurations = ServiceLoader_					.load(CompilerAutoConfiguration.class)__		}_		else {_			this.compilerAutoConfigurations = Collections.emptySet()__		}__		this.transformations = new ArrayList<>()__		this.transformations_				.add(new DependencyManagementBomTransformation(resolutionContext))__		this.transformations.add(new DependencyAutoConfigurationTransformation(_				this.loader, resolutionContext, this.compilerAutoConfigurations))__		this.transformations.add(new GroovyBeansTransformation())__		if (this.configuration.isGuessDependencies()) {_			this.transformations.add(_					new ResolveDependencyCoordinatesTransformation(resolutionContext))__		}_		for (ASTTransformation transformation : ServiceLoader_				.load(SpringBootAstTransformation.class)) {_			this.transformations.add(transformation)__		}_		this.transformations.sort(AnnotationAwareOrderComparator.INSTANCE)__	};create,a,new,link,groovy,compiler,instance,param,configuration,the,compiler,configuration;public,groovy,compiler,groovy,compiler,configuration,configuration,this,configuration,configuration,this,loader,create,loader,configuration,dependency,resolution,context,resolution,context,new,dependency,resolution,context,resolution,context,add,dependency,management,new,spring,boot,dependencies,dependency,management,aether,grape,engine,grape,engine,aether,grape,engine,factory,create,this,loader,configuration,get,repository,configuration,resolution,context,configuration,is,quiet,grape,engine,installer,install,grape,engine,this,loader,get,configuration,add,compilation,customizers,new,compiler,auto,configure,customizer,if,configuration,is,autoconfigure,this,compiler,auto,configurations,service,loader,load,compiler,auto,configuration,class,else,this,compiler,auto,configurations,collections,empty,set,this,transformations,new,array,list,this,transformations,add,new,dependency,management,bom,transformation,resolution,context,this,transformations,add,new,dependency,auto,configuration,transformation,this,loader,resolution,context,this,compiler,auto,configurations,this,transformations,add,new,groovy,beans,transformation,if,this,configuration,is,guess,dependencies,this,transformations,add,new,resolve,dependency,coordinates,transformation,resolution,context,for,asttransformation,transformation,service,loader,load,spring,boot,ast,transformation,class,this,transformations,add,transformation,this,transformations,sort,annotation,aware,order,comparator,instance
GroovyCompiler -> public GroovyCompiler(GroovyCompilerConfiguration configuration);1517564108;Create a new {@link GroovyCompiler} instance._@param configuration the compiler configuration;public GroovyCompiler(GroovyCompilerConfiguration configuration) {__		this.configuration = configuration__		this.loader = createLoader(configuration)___		DependencyResolutionContext resolutionContext = new DependencyResolutionContext()__		resolutionContext.addDependencyManagement(_				new SpringBootDependenciesDependencyManagement())___		AetherGrapeEngine grapeEngine = AetherGrapeEngineFactory.create(this.loader,_				configuration.getRepositoryConfiguration(), resolutionContext,_				configuration.isQuiet())___		GrapeEngineInstaller.install(grapeEngine)___		this.loader.getConfiguration()_				.addCompilationCustomizers(new CompilerAutoConfigureCustomizer())__		if (configuration.isAutoconfigure()) {_			this.compilerAutoConfigurations = ServiceLoader_					.load(CompilerAutoConfiguration.class)__		}_		else {_			this.compilerAutoConfigurations = Collections.emptySet()__		}__		this.transformations = new ArrayList<>()__		this.transformations_				.add(new DependencyManagementBomTransformation(resolutionContext))__		this.transformations.add(new DependencyAutoConfigurationTransformation(_				this.loader, resolutionContext, this.compilerAutoConfigurations))__		this.transformations.add(new GroovyBeansTransformation())__		if (this.configuration.isGuessDependencies()) {_			this.transformations.add(_					new ResolveDependencyCoordinatesTransformation(resolutionContext))__		}_		for (ASTTransformation transformation : ServiceLoader_				.load(SpringBootAstTransformation.class)) {_			this.transformations.add(transformation)__		}_		this.transformations.sort(AnnotationAwareOrderComparator.INSTANCE)__	};create,a,new,link,groovy,compiler,instance,param,configuration,the,compiler,configuration;public,groovy,compiler,groovy,compiler,configuration,configuration,this,configuration,configuration,this,loader,create,loader,configuration,dependency,resolution,context,resolution,context,new,dependency,resolution,context,resolution,context,add,dependency,management,new,spring,boot,dependencies,dependency,management,aether,grape,engine,grape,engine,aether,grape,engine,factory,create,this,loader,configuration,get,repository,configuration,resolution,context,configuration,is,quiet,grape,engine,installer,install,grape,engine,this,loader,get,configuration,add,compilation,customizers,new,compiler,auto,configure,customizer,if,configuration,is,autoconfigure,this,compiler,auto,configurations,service,loader,load,compiler,auto,configuration,class,else,this,compiler,auto,configurations,collections,empty,set,this,transformations,new,array,list,this,transformations,add,new,dependency,management,bom,transformation,resolution,context,this,transformations,add,new,dependency,auto,configuration,transformation,this,loader,resolution,context,this,compiler,auto,configurations,this,transformations,add,new,groovy,beans,transformation,if,this,configuration,is,guess,dependencies,this,transformations,add,new,resolve,dependency,coordinates,transformation,resolution,context,for,asttransformation,transformation,service,loader,load,spring,boot,ast,transformation,class,this,transformations,add,transformation,this,transformations,sort,annotation,aware,order,comparator,instance
GroovyCompiler -> public GroovyCompiler(GroovyCompilerConfiguration configuration);1519362690;Create a new {@link GroovyCompiler} instance._@param configuration the compiler configuration;public GroovyCompiler(GroovyCompilerConfiguration configuration) {__		this.configuration = configuration__		this.loader = createLoader(configuration)___		DependencyResolutionContext resolutionContext = new DependencyResolutionContext()__		resolutionContext.addDependencyManagement(_				new SpringBootDependenciesDependencyManagement())___		AetherGrapeEngine grapeEngine = AetherGrapeEngineFactory.create(this.loader,_				configuration.getRepositoryConfiguration(), resolutionContext,_				configuration.isQuiet())___		GrapeEngineInstaller.install(grapeEngine)___		this.loader.getConfiguration()_				.addCompilationCustomizers(new CompilerAutoConfigureCustomizer())__		if (configuration.isAutoconfigure()) {_			this.compilerAutoConfigurations = ServiceLoader_					.load(CompilerAutoConfiguration.class)__		}_		else {_			this.compilerAutoConfigurations = Collections.emptySet()__		}__		this.transformations = new ArrayList<>()__		this.transformations_				.add(new DependencyManagementBomTransformation(resolutionContext))__		this.transformations.add(new DependencyAutoConfigurationTransformation(_				this.loader, resolutionContext, this.compilerAutoConfigurations))__		this.transformations.add(new GroovyBeansTransformation())__		if (this.configuration.isGuessDependencies()) {_			this.transformations.add(_					new ResolveDependencyCoordinatesTransformation(resolutionContext))__		}_		for (ASTTransformation transformation : ServiceLoader_				.load(SpringBootAstTransformation.class)) {_			this.transformations.add(transformation)__		}_		this.transformations.sort(AnnotationAwareOrderComparator.INSTANCE)__	};create,a,new,link,groovy,compiler,instance,param,configuration,the,compiler,configuration;public,groovy,compiler,groovy,compiler,configuration,configuration,this,configuration,configuration,this,loader,create,loader,configuration,dependency,resolution,context,resolution,context,new,dependency,resolution,context,resolution,context,add,dependency,management,new,spring,boot,dependencies,dependency,management,aether,grape,engine,grape,engine,aether,grape,engine,factory,create,this,loader,configuration,get,repository,configuration,resolution,context,configuration,is,quiet,grape,engine,installer,install,grape,engine,this,loader,get,configuration,add,compilation,customizers,new,compiler,auto,configure,customizer,if,configuration,is,autoconfigure,this,compiler,auto,configurations,service,loader,load,compiler,auto,configuration,class,else,this,compiler,auto,configurations,collections,empty,set,this,transformations,new,array,list,this,transformations,add,new,dependency,management,bom,transformation,resolution,context,this,transformations,add,new,dependency,auto,configuration,transformation,this,loader,resolution,context,this,compiler,auto,configurations,this,transformations,add,new,groovy,beans,transformation,if,this,configuration,is,guess,dependencies,this,transformations,add,new,resolve,dependency,coordinates,transformation,resolution,context,for,asttransformation,transformation,service,loader,load,spring,boot,ast,transformation,class,this,transformations,add,transformation,this,transformations,sort,annotation,aware,order,comparator,instance
GroovyCompiler -> public GroovyCompiler(GroovyCompilerConfiguration configuration);1519552808;Create a new {@link GroovyCompiler} instance._@param configuration the compiler configuration;public GroovyCompiler(GroovyCompilerConfiguration configuration) {__		this.configuration = configuration__		this.loader = createLoader(configuration)___		DependencyResolutionContext resolutionContext = new DependencyResolutionContext()__		resolutionContext.addDependencyManagement(_				new SpringBootDependenciesDependencyManagement())___		AetherGrapeEngine grapeEngine = AetherGrapeEngineFactory.create(this.loader,_				configuration.getRepositoryConfiguration(), resolutionContext,_				configuration.isQuiet())___		GrapeEngineInstaller.install(grapeEngine)___		this.loader.getConfiguration()_				.addCompilationCustomizers(new CompilerAutoConfigureCustomizer())__		if (configuration.isAutoconfigure()) {_			this.compilerAutoConfigurations = ServiceLoader_					.load(CompilerAutoConfiguration.class)__		}_		else {_			this.compilerAutoConfigurations = Collections.emptySet()__		}__		this.transformations = new ArrayList<>()__		this.transformations_				.add(new DependencyManagementBomTransformation(resolutionContext))__		this.transformations.add(new DependencyAutoConfigurationTransformation(_				this.loader, resolutionContext, this.compilerAutoConfigurations))__		this.transformations.add(new GroovyBeansTransformation())__		if (this.configuration.isGuessDependencies()) {_			this.transformations.add(_					new ResolveDependencyCoordinatesTransformation(resolutionContext))__		}_		for (ASTTransformation transformation : ServiceLoader_				.load(SpringBootAstTransformation.class)) {_			this.transformations.add(transformation)__		}_		this.transformations.sort(AnnotationAwareOrderComparator.INSTANCE)__	};create,a,new,link,groovy,compiler,instance,param,configuration,the,compiler,configuration;public,groovy,compiler,groovy,compiler,configuration,configuration,this,configuration,configuration,this,loader,create,loader,configuration,dependency,resolution,context,resolution,context,new,dependency,resolution,context,resolution,context,add,dependency,management,new,spring,boot,dependencies,dependency,management,aether,grape,engine,grape,engine,aether,grape,engine,factory,create,this,loader,configuration,get,repository,configuration,resolution,context,configuration,is,quiet,grape,engine,installer,install,grape,engine,this,loader,get,configuration,add,compilation,customizers,new,compiler,auto,configure,customizer,if,configuration,is,autoconfigure,this,compiler,auto,configurations,service,loader,load,compiler,auto,configuration,class,else,this,compiler,auto,configurations,collections,empty,set,this,transformations,new,array,list,this,transformations,add,new,dependency,management,bom,transformation,resolution,context,this,transformations,add,new,dependency,auto,configuration,transformation,this,loader,resolution,context,this,compiler,auto,configurations,this,transformations,add,new,groovy,beans,transformation,if,this,configuration,is,guess,dependencies,this,transformations,add,new,resolve,dependency,coordinates,transformation,resolution,context,for,asttransformation,transformation,service,loader,load,spring,boot,ast,transformation,class,this,transformations,add,transformation,this,transformations,sort,annotation,aware,order,comparator,instance
GroovyCompiler -> public GroovyCompiler(GroovyCompilerConfiguration configuration);1532852936;Create a new {@link GroovyCompiler} instance._@param configuration the compiler configuration;public GroovyCompiler(GroovyCompilerConfiguration configuration) {__		this.configuration = configuration__		this.loader = createLoader(configuration)___		DependencyResolutionContext resolutionContext = new DependencyResolutionContext()__		resolutionContext.addDependencyManagement(_				new SpringBootDependenciesDependencyManagement())___		AetherGrapeEngine grapeEngine = AetherGrapeEngineFactory.create(this.loader,_				configuration.getRepositoryConfiguration(), resolutionContext,_				configuration.isQuiet())___		GrapeEngineInstaller.install(grapeEngine)___		this.loader.getConfiguration()_				.addCompilationCustomizers(new CompilerAutoConfigureCustomizer())__		if (configuration.isAutoconfigure()) {_			this.compilerAutoConfigurations = ServiceLoader_					.load(CompilerAutoConfiguration.class)__		}_		else {_			this.compilerAutoConfigurations = Collections.emptySet()__		}__		this.transformations = new ArrayList<>()__		this.transformations_				.add(new DependencyManagementBomTransformation(resolutionContext))__		this.transformations.add(new DependencyAutoConfigurationTransformation(_				this.loader, resolutionContext, this.compilerAutoConfigurations))__		this.transformations.add(new GroovyBeansTransformation())__		if (this.configuration.isGuessDependencies()) {_			this.transformations.add(_					new ResolveDependencyCoordinatesTransformation(resolutionContext))__		}_		for (ASTTransformation transformation : ServiceLoader_				.load(SpringBootAstTransformation.class)) {_			this.transformations.add(transformation)__		}_		this.transformations.sort(AnnotationAwareOrderComparator.INSTANCE)__	};create,a,new,link,groovy,compiler,instance,param,configuration,the,compiler,configuration;public,groovy,compiler,groovy,compiler,configuration,configuration,this,configuration,configuration,this,loader,create,loader,configuration,dependency,resolution,context,resolution,context,new,dependency,resolution,context,resolution,context,add,dependency,management,new,spring,boot,dependencies,dependency,management,aether,grape,engine,grape,engine,aether,grape,engine,factory,create,this,loader,configuration,get,repository,configuration,resolution,context,configuration,is,quiet,grape,engine,installer,install,grape,engine,this,loader,get,configuration,add,compilation,customizers,new,compiler,auto,configure,customizer,if,configuration,is,autoconfigure,this,compiler,auto,configurations,service,loader,load,compiler,auto,configuration,class,else,this,compiler,auto,configurations,collections,empty,set,this,transformations,new,array,list,this,transformations,add,new,dependency,management,bom,transformation,resolution,context,this,transformations,add,new,dependency,auto,configuration,transformation,this,loader,resolution,context,this,compiler,auto,configurations,this,transformations,add,new,groovy,beans,transformation,if,this,configuration,is,guess,dependencies,this,transformations,add,new,resolve,dependency,coordinates,transformation,resolution,context,for,asttransformation,transformation,service,loader,load,spring,boot,ast,transformation,class,this,transformations,add,transformation,this,transformations,sort,annotation,aware,order,comparator,instance
GroovyCompiler -> public GroovyCompiler(GroovyCompilerConfiguration configuration);1550737183;Create a new {@link GroovyCompiler} instance._@param configuration the compiler configuration;public GroovyCompiler(GroovyCompilerConfiguration configuration) {__		this.configuration = configuration__		this.loader = createLoader(configuration)___		DependencyResolutionContext resolutionContext = new DependencyResolutionContext()__		resolutionContext.addDependencyManagement(_				new SpringBootDependenciesDependencyManagement())___		AetherGrapeEngine grapeEngine = AetherGrapeEngineFactory.create(this.loader,_				configuration.getRepositoryConfiguration(), resolutionContext,_				configuration.isQuiet())___		GrapeEngineInstaller.install(grapeEngine)___		this.loader.getConfiguration()_				.addCompilationCustomizers(new CompilerAutoConfigureCustomizer())__		if (configuration.isAutoconfigure()) {_			this.compilerAutoConfigurations = ServiceLoader_					.load(CompilerAutoConfiguration.class)__		}_		else {_			this.compilerAutoConfigurations = Collections.emptySet()__		}__		this.transformations = new ArrayList<>()__		this.transformations_				.add(new DependencyManagementBomTransformation(resolutionContext))__		this.transformations.add(new DependencyAutoConfigurationTransformation(_				this.loader, resolutionContext, this.compilerAutoConfigurations))__		this.transformations.add(new GroovyBeansTransformation())__		if (this.configuration.isGuessDependencies()) {_			this.transformations.add(_					new ResolveDependencyCoordinatesTransformation(resolutionContext))__		}_		for (ASTTransformation transformation : ServiceLoader_				.load(SpringBootAstTransformation.class)) {_			this.transformations.add(transformation)__		}_		this.transformations.sort(AnnotationAwareOrderComparator.INSTANCE)__	};create,a,new,link,groovy,compiler,instance,param,configuration,the,compiler,configuration;public,groovy,compiler,groovy,compiler,configuration,configuration,this,configuration,configuration,this,loader,create,loader,configuration,dependency,resolution,context,resolution,context,new,dependency,resolution,context,resolution,context,add,dependency,management,new,spring,boot,dependencies,dependency,management,aether,grape,engine,grape,engine,aether,grape,engine,factory,create,this,loader,configuration,get,repository,configuration,resolution,context,configuration,is,quiet,grape,engine,installer,install,grape,engine,this,loader,get,configuration,add,compilation,customizers,new,compiler,auto,configure,customizer,if,configuration,is,autoconfigure,this,compiler,auto,configurations,service,loader,load,compiler,auto,configuration,class,else,this,compiler,auto,configurations,collections,empty,set,this,transformations,new,array,list,this,transformations,add,new,dependency,management,bom,transformation,resolution,context,this,transformations,add,new,dependency,auto,configuration,transformation,this,loader,resolution,context,this,compiler,auto,configurations,this,transformations,add,new,groovy,beans,transformation,if,this,configuration,is,guess,dependencies,this,transformations,add,new,resolve,dependency,coordinates,transformation,resolution,context,for,asttransformation,transformation,service,loader,load,spring,boot,ast,transformation,class,this,transformations,add,transformation,this,transformations,sort,annotation,aware,order,comparator,instance
GroovyCompiler -> public Class<?>[] compile(String... sources) 			throws CompilationFailedException, IOException;1507173536;Compile the specified Groovy sources, applying any_{@link CompilerAutoConfiguration}s. All classes defined in the sources will be_returned from this method._@param sources the sources to compile_@return compiled classes_@throws CompilationFailedException in case of compilation failures_@throws IOException in case of I/O errors_@throws CompilationFailedException in case of compilation errors;public Class<?>[] compile(String... sources)_			throws CompilationFailedException, IOException {__		this.loader.clearCache()__		List<Class<?>> classes = new ArrayList<>()___		CompilerConfiguration configuration = this.loader.getConfiguration()___		CompilationUnit compilationUnit = new CompilationUnit(configuration, null,_				this.loader)__		ClassCollector collector = this.loader.createCollector(compilationUnit, null)__		compilationUnit.setClassgenCallback(collector)___		for (String source : sources) {_			List<String> paths = ResourceUtils.getUrls(source, this.loader)__			for (String path : paths) {_				compilationUnit.addSource(new URL(path))__			}_		}__		addAstTransformations(compilationUnit)___		compilationUnit.compile(Phases.CLASS_GENERATION)__		for (Object loadedClass : collector.getLoadedClasses()) {_			classes.add((Class<?>) loadedClass)__		}_		ClassNode mainClassNode = MainClass.get(compilationUnit)___		Class<?> mainClass = null__		for (Class<?> loadedClass : classes) {_			if (mainClassNode.getName().equals(loadedClass.getName())) {_				mainClass = loadedClass__			}_		}_		if (mainClass != null) {_			classes.remove(mainClass)__			classes.add(0, mainClass)__		}__		return classes.toArray(new Class<?>[classes.size()])__	};compile,the,specified,groovy,sources,applying,any,link,compiler,auto,configuration,s,all,classes,defined,in,the,sources,will,be,returned,from,this,method,param,sources,the,sources,to,compile,return,compiled,classes,throws,compilation,failed,exception,in,case,of,compilation,failures,throws,ioexception,in,case,of,i,o,errors,throws,compilation,failed,exception,in,case,of,compilation,errors;public,class,compile,string,sources,throws,compilation,failed,exception,ioexception,this,loader,clear,cache,list,class,classes,new,array,list,compiler,configuration,configuration,this,loader,get,configuration,compilation,unit,compilation,unit,new,compilation,unit,configuration,null,this,loader,class,collector,collector,this,loader,create,collector,compilation,unit,null,compilation,unit,set,classgen,callback,collector,for,string,source,sources,list,string,paths,resource,utils,get,urls,source,this,loader,for,string,path,paths,compilation,unit,add,source,new,url,path,add,ast,transformations,compilation,unit,compilation,unit,compile,phases,for,object,loaded,class,collector,get,loaded,classes,classes,add,class,loaded,class,class,node,main,class,node,main,class,get,compilation,unit,class,main,class,null,for,class,loaded,class,classes,if,main,class,node,get,name,equals,loaded,class,get,name,main,class,loaded,class,if,main,class,null,classes,remove,main,class,classes,add,0,main,class,return,classes,to,array,new,class,classes,size
GroovyCompiler -> public Class<?>[] compile(String... sources) 			throws CompilationFailedException, IOException;1512760426;Compile the specified Groovy sources, applying any_{@link CompilerAutoConfiguration}s. All classes defined in the sources will be_returned from this method._@param sources the sources to compile_@return compiled classes_@throws CompilationFailedException in case of compilation failures_@throws IOException in case of I/O errors_@throws CompilationFailedException in case of compilation errors;public Class<?>[] compile(String... sources)_			throws CompilationFailedException, IOException {__		this.loader.clearCache()__		List<Class<?>> classes = new ArrayList<>()___		CompilerConfiguration configuration = this.loader.getConfiguration()___		CompilationUnit compilationUnit = new CompilationUnit(configuration, null,_				this.loader)__		ClassCollector collector = this.loader.createCollector(compilationUnit, null)__		compilationUnit.setClassgenCallback(collector)___		for (String source : sources) {_			List<String> paths = ResourceUtils.getUrls(source, this.loader)__			for (String path : paths) {_				compilationUnit.addSource(new URL(path))__			}_		}__		addAstTransformations(compilationUnit)___		compilationUnit.compile(Phases.CLASS_GENERATION)__		for (Object loadedClass : collector.getLoadedClasses()) {_			classes.add((Class<?>) loadedClass)__		}_		ClassNode mainClassNode = MainClass.get(compilationUnit)___		Class<?> mainClass = null__		for (Class<?> loadedClass : classes) {_			if (mainClassNode.getName().equals(loadedClass.getName())) {_				mainClass = loadedClass__			}_		}_		if (mainClass != null) {_			classes.remove(mainClass)__			classes.add(0, mainClass)__		}__		return classes.toArray(new Class<?>[classes.size()])__	};compile,the,specified,groovy,sources,applying,any,link,compiler,auto,configuration,s,all,classes,defined,in,the,sources,will,be,returned,from,this,method,param,sources,the,sources,to,compile,return,compiled,classes,throws,compilation,failed,exception,in,case,of,compilation,failures,throws,ioexception,in,case,of,i,o,errors,throws,compilation,failed,exception,in,case,of,compilation,errors;public,class,compile,string,sources,throws,compilation,failed,exception,ioexception,this,loader,clear,cache,list,class,classes,new,array,list,compiler,configuration,configuration,this,loader,get,configuration,compilation,unit,compilation,unit,new,compilation,unit,configuration,null,this,loader,class,collector,collector,this,loader,create,collector,compilation,unit,null,compilation,unit,set,classgen,callback,collector,for,string,source,sources,list,string,paths,resource,utils,get,urls,source,this,loader,for,string,path,paths,compilation,unit,add,source,new,url,path,add,ast,transformations,compilation,unit,compilation,unit,compile,phases,for,object,loaded,class,collector,get,loaded,classes,classes,add,class,loaded,class,class,node,main,class,node,main,class,get,compilation,unit,class,main,class,null,for,class,loaded,class,classes,if,main,class,node,get,name,equals,loaded,class,get,name,main,class,loaded,class,if,main,class,null,classes,remove,main,class,classes,add,0,main,class,return,classes,to,array,new,class,classes,size
GroovyCompiler -> public Class<?>[] compile(String... sources) 			throws CompilationFailedException, IOException;1517273683;Compile the specified Groovy sources, applying any_{@link CompilerAutoConfiguration}s. All classes defined in the sources will be_returned from this method._@param sources the sources to compile_@return compiled classes_@throws CompilationFailedException in case of compilation failures_@throws IOException in case of I/O errors_@throws CompilationFailedException in case of compilation errors;public Class<?>[] compile(String... sources)_			throws CompilationFailedException, IOException {__		this.loader.clearCache()__		List<Class<?>> classes = new ArrayList<>()___		CompilerConfiguration configuration = this.loader.getConfiguration()___		CompilationUnit compilationUnit = new CompilationUnit(configuration, null,_				this.loader)__		ClassCollector collector = this.loader.createCollector(compilationUnit, null)__		compilationUnit.setClassgenCallback(collector)___		for (String source : sources) {_			List<String> paths = ResourceUtils.getUrls(source, this.loader)__			for (String path : paths) {_				compilationUnit.addSource(new URL(path))__			}_		}__		addAstTransformations(compilationUnit)___		compilationUnit.compile(Phases.CLASS_GENERATION)__		for (Object loadedClass : collector.getLoadedClasses()) {_			classes.add((Class<?>) loadedClass)__		}_		ClassNode mainClassNode = MainClass.get(compilationUnit)___		Class<?> mainClass = null__		for (Class<?> loadedClass : classes) {_			if (mainClassNode.getName().equals(loadedClass.getName())) {_				mainClass = loadedClass__			}_		}_		if (mainClass != null) {_			classes.remove(mainClass)__			classes.add(0, mainClass)__		}__		return classes.toArray(new Class<?>[classes.size()])__	};compile,the,specified,groovy,sources,applying,any,link,compiler,auto,configuration,s,all,classes,defined,in,the,sources,will,be,returned,from,this,method,param,sources,the,sources,to,compile,return,compiled,classes,throws,compilation,failed,exception,in,case,of,compilation,failures,throws,ioexception,in,case,of,i,o,errors,throws,compilation,failed,exception,in,case,of,compilation,errors;public,class,compile,string,sources,throws,compilation,failed,exception,ioexception,this,loader,clear,cache,list,class,classes,new,array,list,compiler,configuration,configuration,this,loader,get,configuration,compilation,unit,compilation,unit,new,compilation,unit,configuration,null,this,loader,class,collector,collector,this,loader,create,collector,compilation,unit,null,compilation,unit,set,classgen,callback,collector,for,string,source,sources,list,string,paths,resource,utils,get,urls,source,this,loader,for,string,path,paths,compilation,unit,add,source,new,url,path,add,ast,transformations,compilation,unit,compilation,unit,compile,phases,for,object,loaded,class,collector,get,loaded,classes,classes,add,class,loaded,class,class,node,main,class,node,main,class,get,compilation,unit,class,main,class,null,for,class,loaded,class,classes,if,main,class,node,get,name,equals,loaded,class,get,name,main,class,loaded,class,if,main,class,null,classes,remove,main,class,classes,add,0,main,class,return,classes,to,array,new,class,classes,size
GroovyCompiler -> public Class<?>[] compile(String... sources) 			throws CompilationFailedException, IOException;1517290556;Compile the specified Groovy sources, applying any_{@link CompilerAutoConfiguration}s. All classes defined in the sources will be_returned from this method._@param sources the sources to compile_@return compiled classes_@throws CompilationFailedException in case of compilation failures_@throws IOException in case of I/O errors_@throws CompilationFailedException in case of compilation errors;public Class<?>[] compile(String... sources)_			throws CompilationFailedException, IOException {__		this.loader.clearCache()__		List<Class<?>> classes = new ArrayList<>()___		CompilerConfiguration configuration = this.loader.getConfiguration()___		CompilationUnit compilationUnit = new CompilationUnit(configuration, null,_				this.loader)__		ClassCollector collector = this.loader.createCollector(compilationUnit, null)__		compilationUnit.setClassgenCallback(collector)___		for (String source : sources) {_			List<String> paths = ResourceUtils.getUrls(source, this.loader)__			for (String path : paths) {_				compilationUnit.addSource(new URL(path))__			}_		}__		addAstTransformations(compilationUnit)___		compilationUnit.compile(Phases.CLASS_GENERATION)__		for (Object loadedClass : collector.getLoadedClasses()) {_			classes.add((Class<?>) loadedClass)__		}_		ClassNode mainClassNode = MainClass.get(compilationUnit)___		Class<?> mainClass = null__		for (Class<?> loadedClass : classes) {_			if (mainClassNode.getName().equals(loadedClass.getName())) {_				mainClass = loadedClass__			}_		}_		if (mainClass != null) {_			classes.remove(mainClass)__			classes.add(0, mainClass)__		}__		return classes.toArray(new Class<?>[classes.size()])__	};compile,the,specified,groovy,sources,applying,any,link,compiler,auto,configuration,s,all,classes,defined,in,the,sources,will,be,returned,from,this,method,param,sources,the,sources,to,compile,return,compiled,classes,throws,compilation,failed,exception,in,case,of,compilation,failures,throws,ioexception,in,case,of,i,o,errors,throws,compilation,failed,exception,in,case,of,compilation,errors;public,class,compile,string,sources,throws,compilation,failed,exception,ioexception,this,loader,clear,cache,list,class,classes,new,array,list,compiler,configuration,configuration,this,loader,get,configuration,compilation,unit,compilation,unit,new,compilation,unit,configuration,null,this,loader,class,collector,collector,this,loader,create,collector,compilation,unit,null,compilation,unit,set,classgen,callback,collector,for,string,source,sources,list,string,paths,resource,utils,get,urls,source,this,loader,for,string,path,paths,compilation,unit,add,source,new,url,path,add,ast,transformations,compilation,unit,compilation,unit,compile,phases,for,object,loaded,class,collector,get,loaded,classes,classes,add,class,loaded,class,class,node,main,class,node,main,class,get,compilation,unit,class,main,class,null,for,class,loaded,class,classes,if,main,class,node,get,name,equals,loaded,class,get,name,main,class,loaded,class,if,main,class,null,classes,remove,main,class,classes,add,0,main,class,return,classes,to,array,new,class,classes,size
GroovyCompiler -> public Class<?>[] compile(String... sources) 			throws CompilationFailedException, IOException;1517564108;Compile the specified Groovy sources, applying any_{@link CompilerAutoConfiguration}s. All classes defined in the sources will be_returned from this method._@param sources the sources to compile_@return compiled classes_@throws CompilationFailedException in case of compilation failures_@throws IOException in case of I/O errors_@throws CompilationFailedException in case of compilation errors;public Class<?>[] compile(String... sources)_			throws CompilationFailedException, IOException {__		this.loader.clearCache()__		List<Class<?>> classes = new ArrayList<>()___		CompilerConfiguration configuration = this.loader.getConfiguration()___		CompilationUnit compilationUnit = new CompilationUnit(configuration, null,_				this.loader)__		ClassCollector collector = this.loader.createCollector(compilationUnit, null)__		compilationUnit.setClassgenCallback(collector)___		for (String source : sources) {_			List<String> paths = ResourceUtils.getUrls(source, this.loader)__			for (String path : paths) {_				compilationUnit.addSource(new URL(path))__			}_		}__		addAstTransformations(compilationUnit)___		compilationUnit.compile(Phases.CLASS_GENERATION)__		for (Object loadedClass : collector.getLoadedClasses()) {_			classes.add((Class<?>) loadedClass)__		}_		ClassNode mainClassNode = MainClass.get(compilationUnit)___		Class<?> mainClass = null__		for (Class<?> loadedClass : classes) {_			if (mainClassNode.getName().equals(loadedClass.getName())) {_				mainClass = loadedClass__			}_		}_		if (mainClass != null) {_			classes.remove(mainClass)__			classes.add(0, mainClass)__		}__		return classes.toArray(new Class<?>[classes.size()])__	};compile,the,specified,groovy,sources,applying,any,link,compiler,auto,configuration,s,all,classes,defined,in,the,sources,will,be,returned,from,this,method,param,sources,the,sources,to,compile,return,compiled,classes,throws,compilation,failed,exception,in,case,of,compilation,failures,throws,ioexception,in,case,of,i,o,errors,throws,compilation,failed,exception,in,case,of,compilation,errors;public,class,compile,string,sources,throws,compilation,failed,exception,ioexception,this,loader,clear,cache,list,class,classes,new,array,list,compiler,configuration,configuration,this,loader,get,configuration,compilation,unit,compilation,unit,new,compilation,unit,configuration,null,this,loader,class,collector,collector,this,loader,create,collector,compilation,unit,null,compilation,unit,set,classgen,callback,collector,for,string,source,sources,list,string,paths,resource,utils,get,urls,source,this,loader,for,string,path,paths,compilation,unit,add,source,new,url,path,add,ast,transformations,compilation,unit,compilation,unit,compile,phases,for,object,loaded,class,collector,get,loaded,classes,classes,add,class,loaded,class,class,node,main,class,node,main,class,get,compilation,unit,class,main,class,null,for,class,loaded,class,classes,if,main,class,node,get,name,equals,loaded,class,get,name,main,class,loaded,class,if,main,class,null,classes,remove,main,class,classes,add,0,main,class,return,classes,to,array,new,class,classes,size
GroovyCompiler -> public Class<?>[] compile(String... sources) 			throws CompilationFailedException, IOException;1519362690;Compile the specified Groovy sources, applying any_{@link CompilerAutoConfiguration}s. All classes defined in the sources will be_returned from this method._@param sources the sources to compile_@return compiled classes_@throws CompilationFailedException in case of compilation failures_@throws IOException in case of I/O errors_@throws CompilationFailedException in case of compilation errors;public Class<?>[] compile(String... sources)_			throws CompilationFailedException, IOException {__		this.loader.clearCache()__		List<Class<?>> classes = new ArrayList<>()___		CompilerConfiguration configuration = this.loader.getConfiguration()___		CompilationUnit compilationUnit = new CompilationUnit(configuration, null,_				this.loader)__		ClassCollector collector = this.loader.createCollector(compilationUnit, null)__		compilationUnit.setClassgenCallback(collector)___		for (String source : sources) {_			List<String> paths = ResourceUtils.getUrls(source, this.loader)__			for (String path : paths) {_				compilationUnit.addSource(new URL(path))__			}_		}__		addAstTransformations(compilationUnit)___		compilationUnit.compile(Phases.CLASS_GENERATION)__		for (Object loadedClass : collector.getLoadedClasses()) {_			classes.add((Class<?>) loadedClass)__		}_		ClassNode mainClassNode = MainClass.get(compilationUnit)___		Class<?> mainClass = null__		for (Class<?> loadedClass : classes) {_			if (mainClassNode.getName().equals(loadedClass.getName())) {_				mainClass = loadedClass__			}_		}_		if (mainClass != null) {_			classes.remove(mainClass)__			classes.add(0, mainClass)__		}__		return ClassUtils.toClassArray(classes)__	};compile,the,specified,groovy,sources,applying,any,link,compiler,auto,configuration,s,all,classes,defined,in,the,sources,will,be,returned,from,this,method,param,sources,the,sources,to,compile,return,compiled,classes,throws,compilation,failed,exception,in,case,of,compilation,failures,throws,ioexception,in,case,of,i,o,errors,throws,compilation,failed,exception,in,case,of,compilation,errors;public,class,compile,string,sources,throws,compilation,failed,exception,ioexception,this,loader,clear,cache,list,class,classes,new,array,list,compiler,configuration,configuration,this,loader,get,configuration,compilation,unit,compilation,unit,new,compilation,unit,configuration,null,this,loader,class,collector,collector,this,loader,create,collector,compilation,unit,null,compilation,unit,set,classgen,callback,collector,for,string,source,sources,list,string,paths,resource,utils,get,urls,source,this,loader,for,string,path,paths,compilation,unit,add,source,new,url,path,add,ast,transformations,compilation,unit,compilation,unit,compile,phases,for,object,loaded,class,collector,get,loaded,classes,classes,add,class,loaded,class,class,node,main,class,node,main,class,get,compilation,unit,class,main,class,null,for,class,loaded,class,classes,if,main,class,node,get,name,equals,loaded,class,get,name,main,class,loaded,class,if,main,class,null,classes,remove,main,class,classes,add,0,main,class,return,class,utils,to,class,array,classes
GroovyCompiler -> public Class<?>[] compile(String... sources) 			throws CompilationFailedException, IOException;1519552808;Compile the specified Groovy sources, applying any_{@link CompilerAutoConfiguration}s. All classes defined in the sources will be_returned from this method._@param sources the sources to compile_@return compiled classes_@throws CompilationFailedException in case of compilation failures_@throws IOException in case of I/O errors_@throws CompilationFailedException in case of compilation errors;public Class<?>[] compile(String... sources)_			throws CompilationFailedException, IOException {__		this.loader.clearCache()__		List<Class<?>> classes = new ArrayList<>()___		CompilerConfiguration configuration = this.loader.getConfiguration()___		CompilationUnit compilationUnit = new CompilationUnit(configuration, null,_				this.loader)__		ClassCollector collector = this.loader.createCollector(compilationUnit, null)__		compilationUnit.setClassgenCallback(collector)___		for (String source : sources) {_			List<String> paths = ResourceUtils.getUrls(source, this.loader)__			for (String path : paths) {_				compilationUnit.addSource(new URL(path))__			}_		}__		addAstTransformations(compilationUnit)___		compilationUnit.compile(Phases.CLASS_GENERATION)__		for (Object loadedClass : collector.getLoadedClasses()) {_			classes.add((Class<?>) loadedClass)__		}_		ClassNode mainClassNode = MainClass.get(compilationUnit)___		Class<?> mainClass = null__		for (Class<?> loadedClass : classes) {_			if (mainClassNode.getName().equals(loadedClass.getName())) {_				mainClass = loadedClass__			}_		}_		if (mainClass != null) {_			classes.remove(mainClass)__			classes.add(0, mainClass)__		}__		return ClassUtils.toClassArray(classes)__	};compile,the,specified,groovy,sources,applying,any,link,compiler,auto,configuration,s,all,classes,defined,in,the,sources,will,be,returned,from,this,method,param,sources,the,sources,to,compile,return,compiled,classes,throws,compilation,failed,exception,in,case,of,compilation,failures,throws,ioexception,in,case,of,i,o,errors,throws,compilation,failed,exception,in,case,of,compilation,errors;public,class,compile,string,sources,throws,compilation,failed,exception,ioexception,this,loader,clear,cache,list,class,classes,new,array,list,compiler,configuration,configuration,this,loader,get,configuration,compilation,unit,compilation,unit,new,compilation,unit,configuration,null,this,loader,class,collector,collector,this,loader,create,collector,compilation,unit,null,compilation,unit,set,classgen,callback,collector,for,string,source,sources,list,string,paths,resource,utils,get,urls,source,this,loader,for,string,path,paths,compilation,unit,add,source,new,url,path,add,ast,transformations,compilation,unit,compilation,unit,compile,phases,for,object,loaded,class,collector,get,loaded,classes,classes,add,class,loaded,class,class,node,main,class,node,main,class,get,compilation,unit,class,main,class,null,for,class,loaded,class,classes,if,main,class,node,get,name,equals,loaded,class,get,name,main,class,loaded,class,if,main,class,null,classes,remove,main,class,classes,add,0,main,class,return,class,utils,to,class,array,classes
GroovyCompiler -> public Class<?>[] compile(String... sources) 			throws CompilationFailedException, IOException;1532852936;Compile the specified Groovy sources, applying any_{@link CompilerAutoConfiguration}s. All classes defined in the sources will be_returned from this method._@param sources the sources to compile_@return compiled classes_@throws CompilationFailedException in case of compilation failures_@throws IOException in case of I/O errors_@throws CompilationFailedException in case of compilation errors;public Class<?>[] compile(String... sources)_			throws CompilationFailedException, IOException {__		this.loader.clearCache()__		List<Class<?>> classes = new ArrayList<>()___		CompilerConfiguration configuration = this.loader.getConfiguration()___		CompilationUnit compilationUnit = new CompilationUnit(configuration, null,_				this.loader)__		ClassCollector collector = this.loader.createCollector(compilationUnit, null)__		compilationUnit.setClassgenCallback(collector)___		for (String source : sources) {_			List<String> paths = ResourceUtils.getUrls(source, this.loader)__			for (String path : paths) {_				compilationUnit.addSource(new URL(path))__			}_		}__		addAstTransformations(compilationUnit)___		compilationUnit.compile(Phases.CLASS_GENERATION)__		for (Object loadedClass : collector.getLoadedClasses()) {_			classes.add((Class<?>) loadedClass)__		}_		ClassNode mainClassNode = MainClass.get(compilationUnit)___		Class<?> mainClass = null__		for (Class<?> loadedClass : classes) {_			if (mainClassNode.getName().equals(loadedClass.getName())) {_				mainClass = loadedClass__			}_		}_		if (mainClass != null) {_			classes.remove(mainClass)__			classes.add(0, mainClass)__		}__		return ClassUtils.toClassArray(classes)__	};compile,the,specified,groovy,sources,applying,any,link,compiler,auto,configuration,s,all,classes,defined,in,the,sources,will,be,returned,from,this,method,param,sources,the,sources,to,compile,return,compiled,classes,throws,compilation,failed,exception,in,case,of,compilation,failures,throws,ioexception,in,case,of,i,o,errors,throws,compilation,failed,exception,in,case,of,compilation,errors;public,class,compile,string,sources,throws,compilation,failed,exception,ioexception,this,loader,clear,cache,list,class,classes,new,array,list,compiler,configuration,configuration,this,loader,get,configuration,compilation,unit,compilation,unit,new,compilation,unit,configuration,null,this,loader,class,collector,collector,this,loader,create,collector,compilation,unit,null,compilation,unit,set,classgen,callback,collector,for,string,source,sources,list,string,paths,resource,utils,get,urls,source,this,loader,for,string,path,paths,compilation,unit,add,source,new,url,path,add,ast,transformations,compilation,unit,compilation,unit,compile,phases,for,object,loaded,class,collector,get,loaded,classes,classes,add,class,loaded,class,class,node,main,class,node,main,class,get,compilation,unit,class,main,class,null,for,class,loaded,class,classes,if,main,class,node,get,name,equals,loaded,class,get,name,main,class,loaded,class,if,main,class,null,classes,remove,main,class,classes,add,0,main,class,return,class,utils,to,class,array,classes
GroovyCompiler -> public Class<?>[] compile(String... sources) 			throws CompilationFailedException, IOException;1550737183;Compile the specified Groovy sources, applying any_{@link CompilerAutoConfiguration}s. All classes defined in the sources will be_returned from this method._@param sources the sources to compile_@return compiled classes_@throws CompilationFailedException in case of compilation failures_@throws IOException in case of I/O errors_@throws CompilationFailedException in case of compilation errors;public Class<?>[] compile(String... sources)_			throws CompilationFailedException, IOException {__		this.loader.clearCache()__		List<Class<?>> classes = new ArrayList<>()___		CompilerConfiguration configuration = this.loader.getConfiguration()___		CompilationUnit compilationUnit = new CompilationUnit(configuration, null,_				this.loader)__		ClassCollector collector = this.loader.createCollector(compilationUnit, null)__		compilationUnit.setClassgenCallback(collector)___		for (String source : sources) {_			List<String> paths = ResourceUtils.getUrls(source, this.loader)__			for (String path : paths) {_				compilationUnit.addSource(new URL(path))__			}_		}__		addAstTransformations(compilationUnit)___		compilationUnit.compile(Phases.CLASS_GENERATION)__		for (Object loadedClass : collector.getLoadedClasses()) {_			classes.add((Class<?>) loadedClass)__		}_		ClassNode mainClassNode = MainClass.get(compilationUnit)___		Class<?> mainClass = null__		for (Class<?> loadedClass : classes) {_			if (mainClassNode.getName().equals(loadedClass.getName())) {_				mainClass = loadedClass__			}_		}_		if (mainClass != null) {_			classes.remove(mainClass)__			classes.add(0, mainClass)__		}__		return ClassUtils.toClassArray(classes)__	};compile,the,specified,groovy,sources,applying,any,link,compiler,auto,configuration,s,all,classes,defined,in,the,sources,will,be,returned,from,this,method,param,sources,the,sources,to,compile,return,compiled,classes,throws,compilation,failed,exception,in,case,of,compilation,failures,throws,ioexception,in,case,of,i,o,errors,throws,compilation,failed,exception,in,case,of,compilation,errors;public,class,compile,string,sources,throws,compilation,failed,exception,ioexception,this,loader,clear,cache,list,class,classes,new,array,list,compiler,configuration,configuration,this,loader,get,configuration,compilation,unit,compilation,unit,new,compilation,unit,configuration,null,this,loader,class,collector,collector,this,loader,create,collector,compilation,unit,null,compilation,unit,set,classgen,callback,collector,for,string,source,sources,list,string,paths,resource,utils,get,urls,source,this,loader,for,string,path,paths,compilation,unit,add,source,new,url,path,add,ast,transformations,compilation,unit,compilation,unit,compile,phases,for,object,loaded,class,collector,get,loaded,classes,classes,add,class,loaded,class,class,node,main,class,node,main,class,get,compilation,unit,class,main,class,null,for,class,loaded,class,classes,if,main,class,node,get,name,equals,loaded,class,get,name,main,class,loaded,class,if,main,class,null,classes,remove,main,class,classes,add,0,main,class,return,class,utils,to,class,array,classes
