commented;modifiers;parameterAmount;loc;comment;code
false;public,static;1;4;;public static String template(String name) throws IOException, CompilationFailedException, ClassNotFoundException {     return template(name, Collections.emptyMap()). }
false;public,static;2;4;;public static String template(String name, Map<String, ?> model) throws IOException, CompilationFailedException, ClassNotFoundException {     return template(new GStringTemplateEngine(), name, model). }
false;public,static;3;8;;public static String template(TemplateEngine engine, String name, Map<String, ?> model) throws IOException, CompilationFailedException, ClassNotFoundException {     Writable writable = getTemplate(engine, name).make(model).     StringWriter result = new StringWriter().     writable.writeTo(result).     return result.toString(). }
false;private,static;2;16;;private static Template getTemplate(TemplateEngine engine, String name) throws CompilationFailedException, ClassNotFoundException, IOException {     File file = new File("templates", name).     if (file.exists()) {         return engine.createTemplate(file).     }     ClassLoader classLoader = GroovyTemplate.class.getClassLoader().     URL resource = classLoader.getResource("templates/" + name).     if (resource != null) {         return engine.createTemplate(resource).     }     return engine.createTemplate(name). }
