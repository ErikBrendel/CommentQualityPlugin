commented;modifiers;parameterAmount;loc;comment;code
false;public;3;22;;@Override public int complete(String buffer, int cursor, List<CharSequence> candidates) {     int completionIndex = super.complete(buffer, cursor, candidates).     int spaceIndex = buffer.indexOf(' ').     String commandName = ((spaceIndex != -1) ? buffer.substring(0, spaceIndex) : "").     if (!"".equals(commandName.trim())) {         for (Command command : this.commands) {             if (command.getName().equals(commandName)) {                 if (cursor == buffer.length() && buffer.endsWith(" ")) {                     printUsage(command).                     break.                 }                 Completer completer = this.commandCompleters.get(command.getName()).                 if (completer != null) {                     completionIndex = completer.complete(buffer, cursor, candidates).                     break.                 }             }         }     }     return completionIndex. }
false;private;1;24;;private void printUsage(Command command) {     try {         int maxOptionsLength = 0.         List<OptionHelpLine> optionHelpLines = new ArrayList<>().         for (OptionHelp optionHelp : command.getOptionsHelp()) {             OptionHelpLine optionHelpLine = new OptionHelpLine(optionHelp).             optionHelpLines.add(optionHelpLine).             maxOptionsLength = Math.max(maxOptionsLength, optionHelpLine.getOptions().length()).         }         this.console.println().         this.console.println("Usage:").         this.console.println(command.getName() + " " + command.getUsageHelp()).         for (OptionHelpLine optionHelpLine : optionHelpLines) {             this.console.println(String.format("\t%" + maxOptionsLength + "s: %s", optionHelpLine.getOptions(), optionHelpLine.getUsage())).         }         this.console.drawLine().     } catch (IOException ex) {         Log.error(ex.getMessage() + " (" + ex.getClass().getName() + ")").     } }
false;public;0;3;;public String getOptions() {     return this.options. }
false;public;0;3;;public String getUsage() {     return this.usage. }
