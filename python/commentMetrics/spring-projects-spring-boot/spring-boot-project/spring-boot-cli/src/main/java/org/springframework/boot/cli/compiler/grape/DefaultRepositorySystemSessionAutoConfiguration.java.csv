commented;modifiers;parameterAmount;loc;comment;code
false;public;2;20;;@Override public void apply(DefaultRepositorySystemSession session, RepositorySystem repositorySystem) {     if (session.getLocalRepositoryManager() == null) {         LocalRepository localRepository = new LocalRepository(getM2RepoDirectory()).         LocalRepositoryManager localRepositoryManager = repositorySystem.newLocalRepositoryManager(session, localRepository).         session.setLocalRepositoryManager(localRepositoryManager).     }     ProxySelector existing = session.getProxySelector().     if (existing == null || !(existing instanceof CompositeProxySelector)) {         JreProxySelector fallback = new JreProxySelector().         ProxySelector selector = (existing != null) ? new CompositeProxySelector(Arrays.asList(existing, fallback)) : fallback.         session.setProxySelector(selector).     } }
false;private;0;3;;private File getM2RepoDirectory() {     return new File(getDefaultM2HomeDirectory(), "repository"). }
false;private;0;7;;private File getDefaultM2HomeDirectory() {     String mavenRoot = System.getProperty("maven.home").     if (StringUtils.hasLength(mavenRoot)) {         return new File(mavenRoot).     }     return new File(System.getProperty("user.home"), ".m2"). }
