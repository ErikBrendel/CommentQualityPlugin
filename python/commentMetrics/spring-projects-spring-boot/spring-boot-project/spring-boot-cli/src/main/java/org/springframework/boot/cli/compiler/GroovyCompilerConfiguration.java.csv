commented;modifiers;parameterAmount;loc;comment;code
true;;0;1;/**  * Returns the scope in which the compiler operates.  * @return the scope of the compiler  */ ;/**  * Returns the scope in which the compiler operates.  * @return the scope of the compiler  */ GroovyCompilerScope getScope().
true;;0;1;/**  * Returns if import declarations should be guessed.  * @return {@code true} if imports should be guessed, otherwise {@code false}  */ ;/**  * Returns if import declarations should be guessed.  * @return {@code true} if imports should be guessed, otherwise {@code false}  */ boolean isGuessImports().
true;;0;1;/**  * Returns if jar dependencies should be guessed.  * @return {@code true} if dependencies should be guessed, otherwise {@code false}  */ ;/**  * Returns if jar dependencies should be guessed.  * @return {@code true} if dependencies should be guessed, otherwise {@code false}  */ boolean isGuessDependencies().
true;;0;1;/**  * Returns true if auto-configuration transformations should be applied.  * @return {@code true} if auto-configuration transformations should be applied,  * otherwise {@code false}  */ ;/**  * Returns true if auto-configuration transformations should be applied.  * @return {@code true} if auto-configuration transformations should be applied,  * otherwise {@code false}  */ boolean isAutoconfigure().
true;;0;1;/**  * Returns the classpath for local resources.  * @return a path for local resources  */ ;/**  * Returns the classpath for local resources.  * @return a path for local resources  */ String[] getClasspath().
true;;0;1;/**  * Returns the configuration for the repositories that will be used by the compiler to  * resolve dependencies.  * @return the repository configurations  */ ;/**  * Returns the configuration for the repositories that will be used by the compiler to  * resolve dependencies.  * @return the repository configurations  */ List<RepositoryConfiguration> getRepositoryConfiguration().
true;;0;1;/**  * Returns if running in quiet mode.  * @return {@code true} if running in quiet mode  */ ;/**  * Returns if running in quiet mode.  * @return {@code true} if running in quiet mode  */ boolean isQuiet().
