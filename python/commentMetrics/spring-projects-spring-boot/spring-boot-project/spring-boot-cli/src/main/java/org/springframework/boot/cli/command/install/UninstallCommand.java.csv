commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public String getUsageHelp() {     return "[options] <coordinates>". }
false;protected;0;4;;@Override protected void doOptions() {     this.allOption = option("all", "Uninstall all"). }
false;protected;1;24;;@Override @SuppressWarnings("unchecked") protected ExitStatus run(OptionSet options) throws Exception {     List<String> args = (List<String>) options.nonOptionArguments().     try {         if (options.has(this.allOption)) {             if (!args.isEmpty()) {                 throw new IllegalArgumentException("Please use --all without specifying any dependencies").             }             new Installer(options, this).uninstallAll().         }         if (args.isEmpty()) {             throw new IllegalArgumentException("Please specify at least one dependency, in the form group:artifact:version, to uninstall").         }         new Installer(options, this).uninstall(args).     } catch (Exception ex) {         String message = ex.getMessage().         Log.error((message != null) ? message : ex.getClass().toString()).     }     return ExitStatus.OK. }
