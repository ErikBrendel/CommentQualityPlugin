commented;modifiers;parameterAmount;loc;comment;code
false;public;1;4;;@Override public boolean matches(ClassNode classNode) {     return AstUtils.hasAtLeastOneAnnotation(classNode, "SpringBootTest"). }
false;public;1;5;;@Override public void applyDependencies(DependencyCustomizer dependencies) {     dependencies.ifAnyMissingClasses("org.springframework.http.HttpHeaders").add("spring-boot-starter-web"). }
false;public;5;11;;@Override public void apply(GroovyClassLoader loader, GroovyCompilerConfiguration configuration, GeneratorContext generatorContext, SourceUnit source, ClassNode classNode) throws CompilationFailedException {     if (!AstUtils.hasAtLeastOneAnnotation(classNode, "RunWith")) {         AnnotationNode runWith = new AnnotationNode(ClassHelper.make("RunWith")).         runWith.addMember("value", new ClassExpression(ClassHelper.make("SpringRunner"))).         classNode.addAnnotation(runWith).     } }
false;public;1;10;;@Override public void applyImports(ImportCustomizer imports) throws CompilationFailedException {     imports.addStarImports("org.junit.runner", "org.springframework.boot.test", "org.springframework.boot.test.context", "org.springframework.boot.test.web.client", "org.springframework.http", "org.springframework.test.context.junit4", "org.springframework.test.annotation").addImports("org.springframework.boot.test.context.SpringBootTest.WebEnvironment", "org.springframework.boot.test.web.client.TestRestTemplate"). }
