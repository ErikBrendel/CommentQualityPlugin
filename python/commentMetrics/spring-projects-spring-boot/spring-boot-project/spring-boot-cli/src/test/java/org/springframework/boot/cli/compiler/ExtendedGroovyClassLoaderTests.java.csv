commented;modifiers;parameterAmount;loc;comment;code
false;public;0;6;;@Before public void setup() {     this.contextClassLoader = Thread.currentThread().getContextClassLoader().     this.defaultScopeGroovyClassLoader = new ExtendedGroovyClassLoader(GroovyCompilerScope.DEFAULT). }
false;public;0;6;;@Test public void loadsGroovyFromSameClassLoader() throws Exception {     Class<?> c1 = this.contextClassLoader.loadClass("groovy.lang.Script").     Class<?> c2 = this.defaultScopeGroovyClassLoader.loadClass("groovy.lang.Script").     assertThat(c1.getClassLoader()).isSameAs(c2.getClassLoader()). }
false;public;0;7;;@Test public void filtersNonGroovy() throws Exception {     this.contextClassLoader.loadClass("org.springframework.util.StringUtils").     assertThatExceptionOfType(ClassNotFoundException.class).isThrownBy(() -> this.defaultScopeGroovyClassLoader.loadClass("org.springframework.util.StringUtils")). }
false;public;0;4;;@Test public void loadsJavaTypes() throws Exception {     this.defaultScopeGroovyClassLoader.loadClass("java.lang.Boolean"). }
false;public;0;5;;@Test public void loadsSqlTypes() throws Exception {     this.contextClassLoader.loadClass("java.sql.SQLException").     this.defaultScopeGroovyClassLoader.loadClass("java.sql.SQLException"). }
