commented;modifiers;parameterAmount;loc;comment;code
false;public;3;9;;@Override public HttpHost determineProxy(HttpHost target, HttpRequest request, HttpContext context) throws HttpException {     if (target.getHostName().equals("192.168.0.5")) {         return null.     }     return super.determineProxy(target, request, context). }
false;public;1;20;;@Override public void customize(RestTemplate restTemplate) {     HttpHost proxy = new HttpHost("proxy.example.com").     HttpClient httpClient = HttpClientBuilder.create().setRoutePlanner(new DefaultProxyRoutePlanner(proxy) {          @Override         public HttpHost determineProxy(HttpHost target, HttpRequest request, HttpContext context) throws HttpException {             if (target.getHostName().equals("192.168.0.5")) {                 return null.             }             return super.determineProxy(target, request, context).         }     }).build().     restTemplate.setRequestFactory(new HttpComponentsClientHttpRequestFactory(httpClient)). }
