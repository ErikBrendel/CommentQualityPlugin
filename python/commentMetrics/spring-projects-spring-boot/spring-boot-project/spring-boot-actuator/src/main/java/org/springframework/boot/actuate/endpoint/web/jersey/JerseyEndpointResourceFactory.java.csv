# id;timestamp;commentText;codeText;commentWords;codeWords
JerseyEndpointResourceFactory -> public Collection<Resource> createEndpointResources(EndpointMapping endpointMapping, 			Collection<ExposableWebEndpoint> endpoints, 			EndpointMediaTypes endpointMediaTypes);1516423464;Creates {@link Resource Resources} for the operations of the given_{@code webEndpoints}._@param endpointMapping the base mapping for all endpoints_@param endpoints the web endpoints_@param endpointMediaTypes media types consumed and produced by the endpoints_@return the resources for the operations;public Collection<Resource> createEndpointResources(EndpointMapping endpointMapping,_			Collection<ExposableWebEndpoint> endpoints,_			EndpointMediaTypes endpointMediaTypes) {_		List<Resource> resources = new ArrayList<>()__		endpoints.stream().flatMap((endpoint) -> endpoint.getOperations().stream())_				.map((operation) -> createResource(endpointMapping, operation))_				.forEach(resources::add)__		if (StringUtils.hasText(endpointMapping.getPath())) {_			Resource resource = createEndpointLinksResource(endpointMapping.getPath(),_					endpoints, endpointMediaTypes)__			resources.add(resource)__		}_		return resources__	};creates,link,resource,resources,for,the,operations,of,the,given,code,web,endpoints,param,endpoint,mapping,the,base,mapping,for,all,endpoints,param,endpoints,the,web,endpoints,param,endpoint,media,types,media,types,consumed,and,produced,by,the,endpoints,return,the,resources,for,the,operations;public,collection,resource,create,endpoint,resources,endpoint,mapping,endpoint,mapping,collection,exposable,web,endpoint,endpoints,endpoint,media,types,endpoint,media,types,list,resource,resources,new,array,list,endpoints,stream,flat,map,endpoint,endpoint,get,operations,stream,map,operation,create,resource,endpoint,mapping,operation,for,each,resources,add,if,string,utils,has,text,endpoint,mapping,get,path,resource,resource,create,endpoint,links,resource,endpoint,mapping,get,path,endpoints,endpoint,media,types,resources,add,resource,return,resources
JerseyEndpointResourceFactory -> public Collection<Resource> createEndpointResources(EndpointMapping endpointMapping, 			Collection<ExposableWebEndpoint> endpoints, 			EndpointMediaTypes endpointMediaTypes);1516715833;Creates {@link Resource Resources} for the operations of the given_{@code webEndpoints}._@param endpointMapping the base mapping for all endpoints_@param endpoints the web endpoints_@param endpointMediaTypes media types consumed and produced by the endpoints_@return the resources for the operations;public Collection<Resource> createEndpointResources(EndpointMapping endpointMapping,_			Collection<ExposableWebEndpoint> endpoints,_			EndpointMediaTypes endpointMediaTypes) {_		List<Resource> resources = new ArrayList<>()__		endpoints.stream().flatMap((endpoint) -> endpoint.getOperations().stream())_				.map((operation) -> createResource(endpointMapping, operation))_				.forEach(resources::add)__		if (StringUtils.hasText(endpointMapping.getPath())) {_			Resource resource = createEndpointLinksResource(endpointMapping.getPath(),_					endpoints, endpointMediaTypes)__			resources.add(resource)__		}_		return resources__	};creates,link,resource,resources,for,the,operations,of,the,given,code,web,endpoints,param,endpoint,mapping,the,base,mapping,for,all,endpoints,param,endpoints,the,web,endpoints,param,endpoint,media,types,media,types,consumed,and,produced,by,the,endpoints,return,the,resources,for,the,operations;public,collection,resource,create,endpoint,resources,endpoint,mapping,endpoint,mapping,collection,exposable,web,endpoint,endpoints,endpoint,media,types,endpoint,media,types,list,resource,resources,new,array,list,endpoints,stream,flat,map,endpoint,endpoint,get,operations,stream,map,operation,create,resource,endpoint,mapping,operation,for,each,resources,add,if,string,utils,has,text,endpoint,mapping,get,path,resource,resource,create,endpoint,links,resource,endpoint,mapping,get,path,endpoints,endpoint,media,types,resources,add,resource,return,resources
JerseyEndpointResourceFactory -> public Collection<Resource> createEndpointResources(EndpointMapping endpointMapping, 			Collection<ExposableWebEndpoint> endpoints, 			EndpointMediaTypes endpointMediaTypes);1517997070;Creates {@link Resource Resources} for the operations of the given_{@code webEndpoints}._@param endpointMapping the base mapping for all endpoints_@param endpoints the web endpoints_@param endpointMediaTypes media types consumed and produced by the endpoints_@return the resources for the operations;public Collection<Resource> createEndpointResources(EndpointMapping endpointMapping,_			Collection<ExposableWebEndpoint> endpoints,_			EndpointMediaTypes endpointMediaTypes) {_		List<Resource> resources = new ArrayList<>()__		endpoints.stream().flatMap((endpoint) -> endpoint.getOperations().stream())_				.map((operation) -> createResource(endpointMapping, operation))_				.forEach(resources::add)__		if (StringUtils.hasText(endpointMapping.getPath())) {_			Resource resource = createEndpointLinksResource(endpointMapping.getPath(),_					endpoints, endpointMediaTypes)__			resources.add(resource)__		}_		return resources__	};creates,link,resource,resources,for,the,operations,of,the,given,code,web,endpoints,param,endpoint,mapping,the,base,mapping,for,all,endpoints,param,endpoints,the,web,endpoints,param,endpoint,media,types,media,types,consumed,and,produced,by,the,endpoints,return,the,resources,for,the,operations;public,collection,resource,create,endpoint,resources,endpoint,mapping,endpoint,mapping,collection,exposable,web,endpoint,endpoints,endpoint,media,types,endpoint,media,types,list,resource,resources,new,array,list,endpoints,stream,flat,map,endpoint,endpoint,get,operations,stream,map,operation,create,resource,endpoint,mapping,operation,for,each,resources,add,if,string,utils,has,text,endpoint,mapping,get,path,resource,resource,create,endpoint,links,resource,endpoint,mapping,get,path,endpoints,endpoint,media,types,resources,add,resource,return,resources
JerseyEndpointResourceFactory -> public Collection<Resource> createEndpointResources(EndpointMapping endpointMapping, 			Collection<ExposableWebEndpoint> endpoints, 			EndpointMediaTypes endpointMediaTypes);1518102807;Creates {@link Resource Resources} for the operations of the given_{@code webEndpoints}._@param endpointMapping the base mapping for all endpoints_@param endpoints the web endpoints_@param endpointMediaTypes media types consumed and produced by the endpoints_@return the resources for the operations;public Collection<Resource> createEndpointResources(EndpointMapping endpointMapping,_			Collection<ExposableWebEndpoint> endpoints,_			EndpointMediaTypes endpointMediaTypes) {_		List<Resource> resources = new ArrayList<>()__		endpoints.stream().flatMap((endpoint) -> endpoint.getOperations().stream())_				.map((operation) -> createResource(endpointMapping, operation))_				.forEach(resources::add)__		if (StringUtils.hasText(endpointMapping.getPath())) {_			Resource resource = createEndpointLinksResource(endpointMapping.getPath(),_					endpoints, endpointMediaTypes)__			resources.add(resource)__		}_		return resources__	};creates,link,resource,resources,for,the,operations,of,the,given,code,web,endpoints,param,endpoint,mapping,the,base,mapping,for,all,endpoints,param,endpoints,the,web,endpoints,param,endpoint,media,types,media,types,consumed,and,produced,by,the,endpoints,return,the,resources,for,the,operations;public,collection,resource,create,endpoint,resources,endpoint,mapping,endpoint,mapping,collection,exposable,web,endpoint,endpoints,endpoint,media,types,endpoint,media,types,list,resource,resources,new,array,list,endpoints,stream,flat,map,endpoint,endpoint,get,operations,stream,map,operation,create,resource,endpoint,mapping,operation,for,each,resources,add,if,string,utils,has,text,endpoint,mapping,get,path,resource,resource,create,endpoint,links,resource,endpoint,mapping,get,path,endpoints,endpoint,media,types,resources,add,resource,return,resources
JerseyEndpointResourceFactory -> public Collection<Resource> createEndpointResources(EndpointMapping endpointMapping, 			Collection<ExposableWebEndpoint> endpoints, 			EndpointMediaTypes endpointMediaTypes, EndpointLinksResolver linksResolver);1518173775;Creates {@link Resource Resources} for the operations of the given_{@code webEndpoints}._@param endpointMapping the base mapping for all endpoints_@param endpoints the web endpoints_@param endpointMediaTypes media types consumed and produced by the endpoints_@param linksResolver resolver for determining links to available endpoints_@return the resources for the operations;public Collection<Resource> createEndpointResources(EndpointMapping endpointMapping,_			Collection<ExposableWebEndpoint> endpoints,_			EndpointMediaTypes endpointMediaTypes, EndpointLinksResolver linksResolver) {_		List<Resource> resources = new ArrayList<>()__		endpoints.stream().flatMap((endpoint) -> endpoint.getOperations().stream())_				.map((operation) -> createResource(endpointMapping, operation))_				.forEach(resources::add)__		if (StringUtils.hasText(endpointMapping.getPath())) {_			Resource resource = createEndpointLinksResource(endpointMapping.getPath(),_					endpointMediaTypes, linksResolver)__			resources.add(resource)__		}_		return resources__	};creates,link,resource,resources,for,the,operations,of,the,given,code,web,endpoints,param,endpoint,mapping,the,base,mapping,for,all,endpoints,param,endpoints,the,web,endpoints,param,endpoint,media,types,media,types,consumed,and,produced,by,the,endpoints,param,links,resolver,resolver,for,determining,links,to,available,endpoints,return,the,resources,for,the,operations;public,collection,resource,create,endpoint,resources,endpoint,mapping,endpoint,mapping,collection,exposable,web,endpoint,endpoints,endpoint,media,types,endpoint,media,types,endpoint,links,resolver,links,resolver,list,resource,resources,new,array,list,endpoints,stream,flat,map,endpoint,endpoint,get,operations,stream,map,operation,create,resource,endpoint,mapping,operation,for,each,resources,add,if,string,utils,has,text,endpoint,mapping,get,path,resource,resource,create,endpoint,links,resource,endpoint,mapping,get,path,endpoint,media,types,links,resolver,resources,add,resource,return,resources
JerseyEndpointResourceFactory -> public Collection<Resource> createEndpointResources(EndpointMapping endpointMapping, 			Collection<ExposableWebEndpoint> endpoints, 			EndpointMediaTypes endpointMediaTypes, EndpointLinksResolver linksResolver);1518432379;Creates {@link Resource Resources} for the operations of the given_{@code webEndpoints}._@param endpointMapping the base mapping for all endpoints_@param endpoints the web endpoints_@param endpointMediaTypes media types consumed and produced by the endpoints_@param linksResolver resolver for determining links to available endpoints_@return the resources for the operations;public Collection<Resource> createEndpointResources(EndpointMapping endpointMapping,_			Collection<ExposableWebEndpoint> endpoints,_			EndpointMediaTypes endpointMediaTypes, EndpointLinksResolver linksResolver) {_		List<Resource> resources = new ArrayList<>()__		endpoints.stream().flatMap((endpoint) -> endpoint.getOperations().stream())_				.map((operation) -> createResource(endpointMapping, operation))_				.forEach(resources::add)__		if (StringUtils.hasText(endpointMapping.getPath())) {_			Resource resource = createEndpointLinksResource(endpointMapping.getPath(),_					endpointMediaTypes, linksResolver)__			resources.add(resource)__		}_		return resources__	};creates,link,resource,resources,for,the,operations,of,the,given,code,web,endpoints,param,endpoint,mapping,the,base,mapping,for,all,endpoints,param,endpoints,the,web,endpoints,param,endpoint,media,types,media,types,consumed,and,produced,by,the,endpoints,param,links,resolver,resolver,for,determining,links,to,available,endpoints,return,the,resources,for,the,operations;public,collection,resource,create,endpoint,resources,endpoint,mapping,endpoint,mapping,collection,exposable,web,endpoint,endpoints,endpoint,media,types,endpoint,media,types,endpoint,links,resolver,links,resolver,list,resource,resources,new,array,list,endpoints,stream,flat,map,endpoint,endpoint,get,operations,stream,map,operation,create,resource,endpoint,mapping,operation,for,each,resources,add,if,string,utils,has,text,endpoint,mapping,get,path,resource,resource,create,endpoint,links,resource,endpoint,mapping,get,path,endpoint,media,types,links,resolver,resources,add,resource,return,resources
JerseyEndpointResourceFactory -> public Collection<Resource> createEndpointResources(EndpointMapping endpointMapping, 			Collection<ExposableWebEndpoint> endpoints, 			EndpointMediaTypes endpointMediaTypes, EndpointLinksResolver linksResolver);1519045463;Creates {@link Resource Resources} for the operations of the given_{@code webEndpoints}._@param endpointMapping the base mapping for all endpoints_@param endpoints the web endpoints_@param endpointMediaTypes media types consumed and produced by the endpoints_@param linksResolver resolver for determining links to available endpoints_@return the resources for the operations;public Collection<Resource> createEndpointResources(EndpointMapping endpointMapping,_			Collection<ExposableWebEndpoint> endpoints,_			EndpointMediaTypes endpointMediaTypes, EndpointLinksResolver linksResolver) {_		List<Resource> resources = new ArrayList<>()__		endpoints.stream().flatMap((endpoint) -> endpoint.getOperations().stream())_				.map((operation) -> createResource(endpointMapping, operation))_				.forEach(resources::add)__		if (StringUtils.hasText(endpointMapping.getPath())) {_			Resource resource = createEndpointLinksResource(endpointMapping.getPath(),_					endpointMediaTypes, linksResolver)__			resources.add(resource)__		}_		return resources__	};creates,link,resource,resources,for,the,operations,of,the,given,code,web,endpoints,param,endpoint,mapping,the,base,mapping,for,all,endpoints,param,endpoints,the,web,endpoints,param,endpoint,media,types,media,types,consumed,and,produced,by,the,endpoints,param,links,resolver,resolver,for,determining,links,to,available,endpoints,return,the,resources,for,the,operations;public,collection,resource,create,endpoint,resources,endpoint,mapping,endpoint,mapping,collection,exposable,web,endpoint,endpoints,endpoint,media,types,endpoint,media,types,endpoint,links,resolver,links,resolver,list,resource,resources,new,array,list,endpoints,stream,flat,map,endpoint,endpoint,get,operations,stream,map,operation,create,resource,endpoint,mapping,operation,for,each,resources,add,if,string,utils,has,text,endpoint,mapping,get,path,resource,resource,create,endpoint,links,resource,endpoint,mapping,get,path,endpoint,media,types,links,resolver,resources,add,resource,return,resources
JerseyEndpointResourceFactory -> public Collection<Resource> createEndpointResources(EndpointMapping endpointMapping, 			Collection<ExposableWebEndpoint> endpoints, 			EndpointMediaTypes endpointMediaTypes, EndpointLinksResolver linksResolver);1519128725;Creates {@link Resource Resources} for the operations of the given_{@code webEndpoints}._@param endpointMapping the base mapping for all endpoints_@param endpoints the web endpoints_@param endpointMediaTypes media types consumed and produced by the endpoints_@param linksResolver resolver for determining links to available endpoints_@return the resources for the operations;public Collection<Resource> createEndpointResources(EndpointMapping endpointMapping,_			Collection<ExposableWebEndpoint> endpoints,_			EndpointMediaTypes endpointMediaTypes, EndpointLinksResolver linksResolver) {_		List<Resource> resources = new ArrayList<>()__		endpoints.stream().flatMap((endpoint) -> endpoint.getOperations().stream())_				.map((operation) -> createResource(endpointMapping, operation))_				.forEach(resources::add)__		if (StringUtils.hasText(endpointMapping.getPath())) {_			Resource resource = createEndpointLinksResource(endpointMapping.getPath(),_					endpointMediaTypes, linksResolver)__			resources.add(resource)__		}_		return resources__	};creates,link,resource,resources,for,the,operations,of,the,given,code,web,endpoints,param,endpoint,mapping,the,base,mapping,for,all,endpoints,param,endpoints,the,web,endpoints,param,endpoint,media,types,media,types,consumed,and,produced,by,the,endpoints,param,links,resolver,resolver,for,determining,links,to,available,endpoints,return,the,resources,for,the,operations;public,collection,resource,create,endpoint,resources,endpoint,mapping,endpoint,mapping,collection,exposable,web,endpoint,endpoints,endpoint,media,types,endpoint,media,types,endpoint,links,resolver,links,resolver,list,resource,resources,new,array,list,endpoints,stream,flat,map,endpoint,endpoint,get,operations,stream,map,operation,create,resource,endpoint,mapping,operation,for,each,resources,add,if,string,utils,has,text,endpoint,mapping,get,path,resource,resource,create,endpoint,links,resource,endpoint,mapping,get,path,endpoint,media,types,links,resolver,resources,add,resource,return,resources
JerseyEndpointResourceFactory -> public Collection<Resource> createEndpointResources(EndpointMapping endpointMapping, 			Collection<ExposableWebEndpoint> endpoints, 			EndpointMediaTypes endpointMediaTypes, EndpointLinksResolver linksResolver);1519362690;Creates {@link Resource Resources} for the operations of the given_{@code webEndpoints}._@param endpointMapping the base mapping for all endpoints_@param endpoints the web endpoints_@param endpointMediaTypes media types consumed and produced by the endpoints_@param linksResolver resolver for determining links to available endpoints_@return the resources for the operations;public Collection<Resource> createEndpointResources(EndpointMapping endpointMapping,_			Collection<ExposableWebEndpoint> endpoints,_			EndpointMediaTypes endpointMediaTypes, EndpointLinksResolver linksResolver) {_		List<Resource> resources = new ArrayList<>()__		endpoints.stream().flatMap((endpoint) -> endpoint.getOperations().stream())_				.map((operation) -> createResource(endpointMapping, operation))_				.forEach(resources::add)__		if (StringUtils.hasText(endpointMapping.getPath())) {_			Resource resource = createEndpointLinksResource(endpointMapping.getPath(),_					endpointMediaTypes, linksResolver)__			resources.add(resource)__		}_		return resources__	};creates,link,resource,resources,for,the,operations,of,the,given,code,web,endpoints,param,endpoint,mapping,the,base,mapping,for,all,endpoints,param,endpoints,the,web,endpoints,param,endpoint,media,types,media,types,consumed,and,produced,by,the,endpoints,param,links,resolver,resolver,for,determining,links,to,available,endpoints,return,the,resources,for,the,operations;public,collection,resource,create,endpoint,resources,endpoint,mapping,endpoint,mapping,collection,exposable,web,endpoint,endpoints,endpoint,media,types,endpoint,media,types,endpoint,links,resolver,links,resolver,list,resource,resources,new,array,list,endpoints,stream,flat,map,endpoint,endpoint,get,operations,stream,map,operation,create,resource,endpoint,mapping,operation,for,each,resources,add,if,string,utils,has,text,endpoint,mapping,get,path,resource,resource,create,endpoint,links,resource,endpoint,mapping,get,path,endpoint,media,types,links,resolver,resources,add,resource,return,resources
JerseyEndpointResourceFactory -> public Collection<Resource> createEndpointResources(EndpointMapping endpointMapping, 			Collection<ExposableWebEndpoint> endpoints, 			EndpointMediaTypes endpointMediaTypes, EndpointLinksResolver linksResolver);1525416882;Creates {@link Resource Resources} for the operations of the given_{@code webEndpoints}._@param endpointMapping the base mapping for all endpoints_@param endpoints the web endpoints_@param endpointMediaTypes media types consumed and produced by the endpoints_@param linksResolver resolver for determining links to available endpoints_@return the resources for the operations;public Collection<Resource> createEndpointResources(EndpointMapping endpointMapping,_			Collection<ExposableWebEndpoint> endpoints,_			EndpointMediaTypes endpointMediaTypes, EndpointLinksResolver linksResolver) {_		List<Resource> resources = new ArrayList<>()__		endpoints.stream().flatMap((endpoint) -> endpoint.getOperations().stream())_				.map((operation) -> createResource(endpointMapping, operation))_				.forEach(resources::add)__		if (StringUtils.hasText(endpointMapping.getPath())) {_			Resource resource = createEndpointLinksResource(endpointMapping.getPath(),_					endpointMediaTypes, linksResolver)__			resources.add(resource)__		}_		return resources__	};creates,link,resource,resources,for,the,operations,of,the,given,code,web,endpoints,param,endpoint,mapping,the,base,mapping,for,all,endpoints,param,endpoints,the,web,endpoints,param,endpoint,media,types,media,types,consumed,and,produced,by,the,endpoints,param,links,resolver,resolver,for,determining,links,to,available,endpoints,return,the,resources,for,the,operations;public,collection,resource,create,endpoint,resources,endpoint,mapping,endpoint,mapping,collection,exposable,web,endpoint,endpoints,endpoint,media,types,endpoint,media,types,endpoint,links,resolver,links,resolver,list,resource,resources,new,array,list,endpoints,stream,flat,map,endpoint,endpoint,get,operations,stream,map,operation,create,resource,endpoint,mapping,operation,for,each,resources,add,if,string,utils,has,text,endpoint,mapping,get,path,resource,resource,create,endpoint,links,resource,endpoint,mapping,get,path,endpoint,media,types,links,resolver,resources,add,resource,return,resources
JerseyEndpointResourceFactory -> public Collection<Resource> createEndpointResources(EndpointMapping endpointMapping, 			Collection<ExposableWebEndpoint> endpoints, 			EndpointMediaTypes endpointMediaTypes, EndpointLinksResolver linksResolver);1532738143;Creates {@link Resource Resources} for the operations of the given_{@code webEndpoints}._@param endpointMapping the base mapping for all endpoints_@param endpoints the web endpoints_@param endpointMediaTypes media types consumed and produced by the endpoints_@param linksResolver resolver for determining links to available endpoints_@return the resources for the operations;public Collection<Resource> createEndpointResources(EndpointMapping endpointMapping,_			Collection<ExposableWebEndpoint> endpoints,_			EndpointMediaTypes endpointMediaTypes, EndpointLinksResolver linksResolver) {_		List<Resource> resources = new ArrayList<>()__		endpoints.stream().flatMap((endpoint) -> endpoint.getOperations().stream())_				.map((operation) -> createResource(endpointMapping, operation))_				.forEach(resources::add)__		if (StringUtils.hasText(endpointMapping.getPath())) {_			Resource resource = createEndpointLinksResource(endpointMapping.getPath(),_					endpointMediaTypes, linksResolver)__			resources.add(resource)__		}_		return resources__	};creates,link,resource,resources,for,the,operations,of,the,given,code,web,endpoints,param,endpoint,mapping,the,base,mapping,for,all,endpoints,param,endpoints,the,web,endpoints,param,endpoint,media,types,media,types,consumed,and,produced,by,the,endpoints,param,links,resolver,resolver,for,determining,links,to,available,endpoints,return,the,resources,for,the,operations;public,collection,resource,create,endpoint,resources,endpoint,mapping,endpoint,mapping,collection,exposable,web,endpoint,endpoints,endpoint,media,types,endpoint,media,types,endpoint,links,resolver,links,resolver,list,resource,resources,new,array,list,endpoints,stream,flat,map,endpoint,endpoint,get,operations,stream,map,operation,create,resource,endpoint,mapping,operation,for,each,resources,add,if,string,utils,has,text,endpoint,mapping,get,path,resource,resource,create,endpoint,links,resource,endpoint,mapping,get,path,endpoint,media,types,links,resolver,resources,add,resource,return,resources
JerseyEndpointResourceFactory -> public Collection<Resource> createEndpointResources(EndpointMapping endpointMapping, 			Collection<ExposableWebEndpoint> endpoints, 			EndpointMediaTypes endpointMediaTypes, EndpointLinksResolver linksResolver);1532852936;Creates {@link Resource Resources} for the operations of the given_{@code webEndpoints}._@param endpointMapping the base mapping for all endpoints_@param endpoints the web endpoints_@param endpointMediaTypes media types consumed and produced by the endpoints_@param linksResolver resolver for determining links to available endpoints_@return the resources for the operations;public Collection<Resource> createEndpointResources(EndpointMapping endpointMapping,_			Collection<ExposableWebEndpoint> endpoints,_			EndpointMediaTypes endpointMediaTypes, EndpointLinksResolver linksResolver) {_		List<Resource> resources = new ArrayList<>()__		endpoints.stream().flatMap((endpoint) -> endpoint.getOperations().stream())_				.map((operation) -> createResource(endpointMapping, operation))_				.forEach(resources::add)__		if (StringUtils.hasText(endpointMapping.getPath())) {_			Resource resource = createEndpointLinksResource(endpointMapping.getPath(),_					endpointMediaTypes, linksResolver)__			resources.add(resource)__		}_		return resources__	};creates,link,resource,resources,for,the,operations,of,the,given,code,web,endpoints,param,endpoint,mapping,the,base,mapping,for,all,endpoints,param,endpoints,the,web,endpoints,param,endpoint,media,types,media,types,consumed,and,produced,by,the,endpoints,param,links,resolver,resolver,for,determining,links,to,available,endpoints,return,the,resources,for,the,operations;public,collection,resource,create,endpoint,resources,endpoint,mapping,endpoint,mapping,collection,exposable,web,endpoint,endpoints,endpoint,media,types,endpoint,media,types,endpoint,links,resolver,links,resolver,list,resource,resources,new,array,list,endpoints,stream,flat,map,endpoint,endpoint,get,operations,stream,map,operation,create,resource,endpoint,mapping,operation,for,each,resources,add,if,string,utils,has,text,endpoint,mapping,get,path,resource,resource,create,endpoint,links,resource,endpoint,mapping,get,path,endpoint,media,types,links,resolver,resources,add,resource,return,resources
