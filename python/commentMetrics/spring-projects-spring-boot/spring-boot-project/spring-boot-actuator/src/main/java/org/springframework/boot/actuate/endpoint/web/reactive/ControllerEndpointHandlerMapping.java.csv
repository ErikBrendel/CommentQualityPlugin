commented;modifiers;parameterAmount;loc;comment;code
false;private;1;6;;private Map<Object, ExposableControllerEndpoint> getHandlers(Collection<ExposableControllerEndpoint> endpoints) {     Map<Object, ExposableControllerEndpoint> handlers = new LinkedHashMap<>().     endpoints.forEach((endpoint) -> handlers.put(endpoint.getController(), endpoint)).     return Collections.unmodifiableMap(handlers). }
false;protected;0;4;;@Override protected void initHandlerMethods() {     this.handlers.keySet().forEach(this::detectHandlerMethods). }
false;protected;3;7;;@Override protected void registerHandlerMethod(Object handler, Method method, RequestMappingInfo mapping) {     ExposableControllerEndpoint endpoint = this.handlers.get(handler).     mapping = withEndpointMappedPatterns(endpoint, mapping).     super.registerHandlerMethod(handler, method, mapping). }
false;private;2;11;;private RequestMappingInfo withEndpointMappedPatterns(ExposableControllerEndpoint endpoint, RequestMappingInfo mapping) {     Set<PathPattern> patterns = mapping.getPatternsCondition().getPatterns().     if (patterns.isEmpty()) {         patterns = Collections.singleton(getPathPatternParser().parse("")).     }     PathPattern[] endpointMappedPatterns = patterns.stream().map((pattern) -> getEndpointMappedPattern(endpoint, pattern)).toArray(PathPattern[]::new).     return withNewPatterns(mapping, endpointMappedPatterns). }
false;private;2;5;;private PathPattern getEndpointMappedPattern(ExposableControllerEndpoint endpoint, PathPattern pattern) {     return getPathPatternParser().parse(this.endpointMapping.createSubPath(endpoint.getRootPath() + pattern)). }
false;private;2;9;;private RequestMappingInfo withNewPatterns(RequestMappingInfo mapping, PathPattern[] patterns) {     PatternsRequestCondition patternsCondition = new PatternsRequestCondition(patterns).     return new RequestMappingInfo(patternsCondition, mapping.getMethodsCondition(), mapping.getParamsCondition(), mapping.getHeadersCondition(), mapping.getConsumesCondition(), mapping.getProducesCondition(), mapping.getCustomCondition()). }
false;protected;3;5;;@Override protected CorsConfiguration initCorsConfiguration(Object handler, Method method, RequestMappingInfo mapping) {     return this.corsConfiguration. }
