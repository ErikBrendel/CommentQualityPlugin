commented;modifiers;parameterAmount;loc;comment;code
false;;1;6;;void applyTo(Builder builder) {     builder = isCouchbaseUp(this.diagnostics) ? builder.up() : builder.down().     builder.withDetail("sdk", this.diagnostics.sdk()).     builder.withDetail("endpoints", this.diagnostics.endpoints().stream().map(this::describe).collect(Collectors.toList())). }
false;private;1;9;;private boolean isCouchbaseUp(DiagnosticsReport diagnostics) {     for (EndpointHealth health : diagnostics.endpoints()) {         LifecycleState state = health.state().         if (state != LifecycleState.CONNECTED && state != LifecycleState.IDLE) {             return false.         }     }     return true. }
false;private;1;10;;private Map<String, Object> describe(EndpointHealth endpointHealth) {     Map<String, Object> map = new HashMap<>().     map.put("id", endpointHealth.id()).     map.put("lastActivity", endpointHealth.lastActivity()).     map.put("local", endpointHealth.local().toString()).     map.put("remote", endpointHealth.remote().toString()).     map.put("state", endpointHealth.state()).     map.put("type", endpointHealth.type()).     return map. }
