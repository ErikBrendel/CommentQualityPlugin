# id;timestamp;commentText;codeText;commentWords;codeWords
Sanitizer -> public Object sanitize(String key, Object value);1507173536;Sanitize the given value if necessary._@param key the key to sanitize_@param value the value_@return the potentially sanitized value;public Object sanitize(String key, Object value) {_		for (Pattern pattern : this.keysToSanitize) {_			if (pattern.matcher(key).matches()) {_				return (value == null ? null : "******")__			}_		}_		return value__	};sanitize,the,given,value,if,necessary,param,key,the,key,to,sanitize,param,value,the,value,return,the,potentially,sanitized,value;public,object,sanitize,string,key,object,value,for,pattern,pattern,this,keys,to,sanitize,if,pattern,matcher,key,matches,return,value,null,null,return,value
Sanitizer -> public Object sanitize(String key, Object value);1509282278;Sanitize the given value if necessary._@param key the key to sanitize_@param value the value_@return the potentially sanitized value;public Object sanitize(String key, Object value) {_		if (value == null) {_			return null__		}_		for (Pattern pattern : this.keysToSanitize) {_			if (pattern.matcher(key).matches()) {_				return "******"__			}_		}_		return value__	};sanitize,the,given,value,if,necessary,param,key,the,key,to,sanitize,param,value,the,value,return,the,potentially,sanitized,value;public,object,sanitize,string,key,object,value,if,value,null,return,null,for,pattern,pattern,this,keys,to,sanitize,if,pattern,matcher,key,matches,return,return,value
Sanitizer -> public Object sanitize(String key, Object value);1510993070;Sanitize the given value if necessary._@param key the key to sanitize_@param value the value_@return the potentially sanitized value;public Object sanitize(String key, Object value) {_		if (value == null) {_			return null__		}_		for (Pattern pattern : this.keysToSanitize) {_			if (pattern.matcher(key).matches()) {_				return "******"__			}_		}_		return value__	};sanitize,the,given,value,if,necessary,param,key,the,key,to,sanitize,param,value,the,value,return,the,potentially,sanitized,value;public,object,sanitize,string,key,object,value,if,value,null,return,null,for,pattern,pattern,this,keys,to,sanitize,if,pattern,matcher,key,matches,return,return,value
Sanitizer -> public Object sanitize(String key, Object value);1523293193;Sanitize the given value if necessary._@param key the key to sanitize_@param value the value_@return the potentially sanitized value;public Object sanitize(String key, Object value) {_		if (value == null) {_			return null__		}_		for (Pattern pattern : this.keysToSanitize) {_			if (pattern.matcher(key).matches()) {_				return "******"__			}_		}_		return value__	};sanitize,the,given,value,if,necessary,param,key,the,key,to,sanitize,param,value,the,value,return,the,potentially,sanitized,value;public,object,sanitize,string,key,object,value,if,value,null,return,null,for,pattern,pattern,this,keys,to,sanitize,if,pattern,matcher,key,matches,return,return,value
Sanitizer -> public void setKeysToSanitize(String... keysToSanitize);1507173536;Keys that should be sanitized. Keys can be simple strings that the property ends_with or regular expressions._@param keysToSanitize the keys to sanitize;public void setKeysToSanitize(String... keysToSanitize) {_		Assert.notNull(keysToSanitize, "KeysToSanitize must not be null")__		this.keysToSanitize = new Pattern[keysToSanitize.length]__		for (int i = 0_ i < keysToSanitize.length_ i++) {_			this.keysToSanitize[i] = getPattern(keysToSanitize[i])__		}_	};keys,that,should,be,sanitized,keys,can,be,simple,strings,that,the,property,ends,with,or,regular,expressions,param,keys,to,sanitize,the,keys,to,sanitize;public,void,set,keys,to,sanitize,string,keys,to,sanitize,assert,not,null,keys,to,sanitize,keys,to,sanitize,must,not,be,null,this,keys,to,sanitize,new,pattern,keys,to,sanitize,length,for,int,i,0,i,keys,to,sanitize,length,i,this,keys,to,sanitize,i,get,pattern,keys,to,sanitize,i
Sanitizer -> public void setKeysToSanitize(String... keysToSanitize);1509282278;Keys that should be sanitized. Keys can be simple strings that the property ends_with or regular expressions._@param keysToSanitize the keys to sanitize;public void setKeysToSanitize(String... keysToSanitize) {_		Assert.notNull(keysToSanitize, "KeysToSanitize must not be null")__		this.keysToSanitize = new Pattern[keysToSanitize.length]__		for (int i = 0_ i < keysToSanitize.length_ i++) {_			this.keysToSanitize[i] = getPattern(keysToSanitize[i])__		}_	};keys,that,should,be,sanitized,keys,can,be,simple,strings,that,the,property,ends,with,or,regular,expressions,param,keys,to,sanitize,the,keys,to,sanitize;public,void,set,keys,to,sanitize,string,keys,to,sanitize,assert,not,null,keys,to,sanitize,keys,to,sanitize,must,not,be,null,this,keys,to,sanitize,new,pattern,keys,to,sanitize,length,for,int,i,0,i,keys,to,sanitize,length,i,this,keys,to,sanitize,i,get,pattern,keys,to,sanitize,i
Sanitizer -> public void setKeysToSanitize(String... keysToSanitize);1510993070;Keys that should be sanitized. Keys can be simple strings that the property ends_with or regular expressions._@param keysToSanitize the keys to sanitize;public void setKeysToSanitize(String... keysToSanitize) {_		Assert.notNull(keysToSanitize, "KeysToSanitize must not be null")__		this.keysToSanitize = new Pattern[keysToSanitize.length]__		for (int i = 0_ i < keysToSanitize.length_ i++) {_			this.keysToSanitize[i] = getPattern(keysToSanitize[i])__		}_	};keys,that,should,be,sanitized,keys,can,be,simple,strings,that,the,property,ends,with,or,regular,expressions,param,keys,to,sanitize,the,keys,to,sanitize;public,void,set,keys,to,sanitize,string,keys,to,sanitize,assert,not,null,keys,to,sanitize,keys,to,sanitize,must,not,be,null,this,keys,to,sanitize,new,pattern,keys,to,sanitize,length,for,int,i,0,i,keys,to,sanitize,length,i,this,keys,to,sanitize,i,get,pattern,keys,to,sanitize,i
Sanitizer -> public void setKeysToSanitize(String... keysToSanitize);1523293193;Keys that should be sanitized. Keys can be simple strings that the property ends_with or regular expressions._@param keysToSanitize the keys to sanitize;public void setKeysToSanitize(String... keysToSanitize) {_		Assert.notNull(keysToSanitize, "KeysToSanitize must not be null")__		this.keysToSanitize = new Pattern[keysToSanitize.length]__		for (int i = 0_ i < keysToSanitize.length_ i++) {_			this.keysToSanitize[i] = getPattern(keysToSanitize[i])__		}_	};keys,that,should,be,sanitized,keys,can,be,simple,strings,that,the,property,ends,with,or,regular,expressions,param,keys,to,sanitize,the,keys,to,sanitize;public,void,set,keys,to,sanitize,string,keys,to,sanitize,assert,not,null,keys,to,sanitize,keys,to,sanitize,must,not,be,null,this,keys,to,sanitize,new,pattern,keys,to,sanitize,length,for,int,i,0,i,keys,to,sanitize,length,i,this,keys,to,sanitize,i,get,pattern,keys,to,sanitize,i
