# id;timestamp;commentText;codeText;commentWords;codeWords
WebFluxTags -> public static Tag uri(ServerWebExchange exchange);1507173536;Creates a {@code uri} tag based on the URI of the given {@code exchange}. Uses the_{@link HandlerMapping#BEST_MATCHING_PATTERN_ATTRIBUTE} best matching pattern._@param exchange the exchange_@return the uri tag derived from the exchange;public static Tag uri(ServerWebExchange exchange) {_		PathPattern pathPattern = exchange.getAttributeOrDefault(_				HandlerMapping.BEST_MATCHING_PATTERN_ATTRIBUTE, null)__		String uri = pathPattern == null ? exchange.getRequest().getURI().toString()_				: pathPattern.getPatternString()__		if (!StringUtils.hasText(uri)) {_			uri = "/"__		}_		return Tag.of("uri", uri.isEmpty() ? "root" : uri)__	};creates,a,code,uri,tag,based,on,the,uri,of,the,given,code,exchange,uses,the,link,handler,mapping,best,matching,pattern,param,exchange,the,exchange,return,the,uri,tag,derived,from,the,exchange;public,static,tag,uri,server,web,exchange,exchange,path,pattern,path,pattern,exchange,get,attribute,or,default,handler,mapping,null,string,uri,path,pattern,null,exchange,get,request,get,uri,to,string,path,pattern,get,pattern,string,if,string,utils,has,text,uri,uri,return,tag,of,uri,uri,is,empty,root,uri
WebFluxTags -> public static Tag uri(ServerWebExchange exchange);1522835170;Creates a {@code uri} tag based on the URI of the given {@code exchange}. Uses the_{@link HandlerMapping#BEST_MATCHING_PATTERN_ATTRIBUTE} best matching pattern._@param exchange the exchange_@return the uri tag derived from the exchange;public static Tag uri(ServerWebExchange exchange) {_		if (exchange != null) {_			PathPattern pathPattern = exchange.getAttribute(_					HandlerMapping.BEST_MATCHING_PATTERN_ATTRIBUTE)__			if (pathPattern != null) {_				return Tag.of("uri", pathPattern.getPatternString())__			}_			else {_				HttpStatus status = exchange.getResponse().getStatusCode()__				if (status != null && status.is3xxRedirection()) {_					return URI_REDIRECTION__				}_				if (status != null && status.equals(HttpStatus.NOT_FOUND)) {_					return URI_NOT_FOUND__				}_			}_			String path = exchange.getRequest().getPath().value()__			return Tag.of("uri", path.isEmpty() ? "root" : path)__		}_		return Tag.of("uri", "UNKNOWN")__	};creates,a,code,uri,tag,based,on,the,uri,of,the,given,code,exchange,uses,the,link,handler,mapping,best,matching,pattern,param,exchange,the,exchange,return,the,uri,tag,derived,from,the,exchange;public,static,tag,uri,server,web,exchange,exchange,if,exchange,null,path,pattern,path,pattern,exchange,get,attribute,handler,mapping,if,path,pattern,null,return,tag,of,uri,path,pattern,get,pattern,string,else,http,status,status,exchange,get,response,get,status,code,if,status,null,status,is3xx,redirection,return,if,status,null,status,equals,http,status,return,string,path,exchange,get,request,get,path,value,return,tag,of,uri,path,is,empty,root,path,return,tag,of,uri,unknown
WebFluxTags -> public static Tag uri(ServerWebExchange exchange);1522890085;Creates a {@code uri} tag based on the URI of the given {@code exchange}. Uses the_{@link HandlerMapping#BEST_MATCHING_PATTERN_ATTRIBUTE} best matching pattern._@param exchange the exchange_@return the uri tag derived from the exchange;public static Tag uri(ServerWebExchange exchange) {_		if (exchange != null) {_			PathPattern pathPattern = exchange_					.getAttribute(HandlerMapping.BEST_MATCHING_PATTERN_ATTRIBUTE)__			if (pathPattern != null) {_				return Tag.of("uri", pathPattern.getPatternString())__			}_			HttpStatus status = exchange.getResponse().getStatusCode()__			if (status != null && status.is3xxRedirection()) {_				return URI_REDIRECTION__			}_			if (status != null && status.equals(HttpStatus.NOT_FOUND)) {_				return URI_NOT_FOUND__			}_			String path = exchange.getRequest().getPath().value()__			return Tag.of("uri", path.isEmpty() ? "root" : path)__		}_		return Tag.of("uri", "UNKNOWN")__	};creates,a,code,uri,tag,based,on,the,uri,of,the,given,code,exchange,uses,the,link,handler,mapping,best,matching,pattern,param,exchange,the,exchange,return,the,uri,tag,derived,from,the,exchange;public,static,tag,uri,server,web,exchange,exchange,if,exchange,null,path,pattern,path,pattern,exchange,get,attribute,handler,mapping,if,path,pattern,null,return,tag,of,uri,path,pattern,get,pattern,string,http,status,status,exchange,get,response,get,status,code,if,status,null,status,is3xx,redirection,return,if,status,null,status,equals,http,status,return,string,path,exchange,get,request,get,path,value,return,tag,of,uri,path,is,empty,root,path,return,tag,of,uri,unknown
WebFluxTags -> public static Tag uri(ServerWebExchange exchange);1527579183;Creates a {@code uri} tag based on the URI of the given {@code exchange}. Uses the_{@link HandlerMapping#BEST_MATCHING_PATTERN_ATTRIBUTE} best matching pattern._@param exchange the exchange_@return the uri tag derived from the exchange;public static Tag uri(ServerWebExchange exchange) {_		if (exchange != null) {_			PathPattern pathPattern = exchange_					.getAttribute(HandlerMapping.BEST_MATCHING_PATTERN_ATTRIBUTE)__			if (pathPattern != null) {_				return Tag.of("uri", pathPattern.getPatternString())__			}_			HttpStatus status = exchange.getResponse().getStatusCode()__			if (status != null && status.is3xxRedirection()) {_				return URI_REDIRECTION__			}_			if (status != null && status.equals(HttpStatus.NOT_FOUND)) {_				return URI_NOT_FOUND__			}_			String path = exchange.getRequest().getPath().value()__			if (path.isEmpty()) {_				return URI_ROOT__			}_			return Tag.of("uri", path)__		}_		return URI_UNKNOWN__	};creates,a,code,uri,tag,based,on,the,uri,of,the,given,code,exchange,uses,the,link,handler,mapping,best,matching,pattern,param,exchange,the,exchange,return,the,uri,tag,derived,from,the,exchange;public,static,tag,uri,server,web,exchange,exchange,if,exchange,null,path,pattern,path,pattern,exchange,get,attribute,handler,mapping,if,path,pattern,null,return,tag,of,uri,path,pattern,get,pattern,string,http,status,status,exchange,get,response,get,status,code,if,status,null,status,is3xx,redirection,return,if,status,null,status,equals,http,status,return,string,path,exchange,get,request,get,path,value,if,path,is,empty,return,return,tag,of,uri,path,return
WebFluxTags -> public static Tag uri(ServerWebExchange exchange);1529417140;Creates a {@code uri} tag based on the URI of the given {@code exchange}. Uses the_{@link HandlerMapping#BEST_MATCHING_PATTERN_ATTRIBUTE} best matching pattern._@param exchange the exchange_@return the uri tag derived from the exchange;public static Tag uri(ServerWebExchange exchange) {_		if (exchange != null) {_			PathPattern pathPattern = exchange_					.getAttribute(HandlerMapping.BEST_MATCHING_PATTERN_ATTRIBUTE)__			if (pathPattern != null) {_				return Tag.of("uri", pathPattern.getPatternString())__			}_			HttpStatus status = exchange.getResponse().getStatusCode()__			if (status != null && status.is3xxRedirection()) {_				return URI_REDIRECTION__			}_			if (status != null && status.equals(HttpStatus.NOT_FOUND)) {_				return URI_NOT_FOUND__			}_			String path = exchange.getRequest().getPath().value()__			if (path.isEmpty()) {_				return URI_ROOT__			}_			return Tag.of("uri", path)__		}_		return URI_UNKNOWN__	};creates,a,code,uri,tag,based,on,the,uri,of,the,given,code,exchange,uses,the,link,handler,mapping,best,matching,pattern,param,exchange,the,exchange,return,the,uri,tag,derived,from,the,exchange;public,static,tag,uri,server,web,exchange,exchange,if,exchange,null,path,pattern,path,pattern,exchange,get,attribute,handler,mapping,if,path,pattern,null,return,tag,of,uri,path,pattern,get,pattern,string,http,status,status,exchange,get,response,get,status,code,if,status,null,status,is3xx,redirection,return,if,status,null,status,equals,http,status,return,string,path,exchange,get,request,get,path,value,if,path,is,empty,return,return,tag,of,uri,path,return
WebFluxTags -> public static Tag uri(ServerWebExchange exchange);1530192441;Creates a {@code uri} tag based on the URI of the given {@code exchange}. Uses the_{@link HandlerMapping#BEST_MATCHING_PATTERN_ATTRIBUTE} best matching pattern._@param exchange the exchange_@return the uri tag derived from the exchange;public static Tag uri(ServerWebExchange exchange) {_		if (exchange != null) {_			PathPattern pathPattern = exchange_					.getAttribute(HandlerMapping.BEST_MATCHING_PATTERN_ATTRIBUTE)__			if (pathPattern != null) {_				return Tag.of("uri", pathPattern.getPatternString())__			}_			HttpStatus status = exchange.getResponse().getStatusCode()__			if (status != null && status.is3xxRedirection()) {_				return URI_REDIRECTION__			}_			if (status != null && status.equals(HttpStatus.NOT_FOUND)) {_				return URI_NOT_FOUND__			}_			String path = exchange.getRequest().getPath().value()__			if (path.isEmpty()) {_				return URI_ROOT__			}_			return Tag.of("uri", path)__		}_		return URI_UNKNOWN__	};creates,a,code,uri,tag,based,on,the,uri,of,the,given,code,exchange,uses,the,link,handler,mapping,best,matching,pattern,param,exchange,the,exchange,return,the,uri,tag,derived,from,the,exchange;public,static,tag,uri,server,web,exchange,exchange,if,exchange,null,path,pattern,path,pattern,exchange,get,attribute,handler,mapping,if,path,pattern,null,return,tag,of,uri,path,pattern,get,pattern,string,http,status,status,exchange,get,response,get,status,code,if,status,null,status,is3xx,redirection,return,if,status,null,status,equals,http,status,return,string,path,exchange,get,request,get,path,value,if,path,is,empty,return,return,tag,of,uri,path,return
WebFluxTags -> public static Tag uri(ServerWebExchange exchange);1532004921;Creates a {@code uri} tag based on the URI of the given {@code exchange}. Uses the_{@link HandlerMapping#BEST_MATCHING_PATTERN_ATTRIBUTE} best matching pattern._@param exchange the exchange_@return the uri tag derived from the exchange;public static Tag uri(ServerWebExchange exchange) {_		if (exchange != null) {_			PathPattern pathPattern = exchange_					.getAttribute(HandlerMapping.BEST_MATCHING_PATTERN_ATTRIBUTE)__			if (pathPattern != null) {_				return Tag.of("uri", pathPattern.getPatternString())__			}_			HttpStatus status = exchange.getResponse().getStatusCode()__			if (status != null && status.is3xxRedirection()) {_				return URI_REDIRECTION__			}_			if (status != null && status.equals(HttpStatus.NOT_FOUND)) {_				return URI_NOT_FOUND__			}_			String path = exchange.getRequest().getPath().value()__			if (path.isEmpty()) {_				return URI_ROOT__			}_			return Tag.of("uri", path)__		}_		return URI_UNKNOWN__	};creates,a,code,uri,tag,based,on,the,uri,of,the,given,code,exchange,uses,the,link,handler,mapping,best,matching,pattern,param,exchange,the,exchange,return,the,uri,tag,derived,from,the,exchange;public,static,tag,uri,server,web,exchange,exchange,if,exchange,null,path,pattern,path,pattern,exchange,get,attribute,handler,mapping,if,path,pattern,null,return,tag,of,uri,path,pattern,get,pattern,string,http,status,status,exchange,get,response,get,status,code,if,status,null,status,is3xx,redirection,return,if,status,null,status,equals,http,status,return,string,path,exchange,get,request,get,path,value,if,path,is,empty,return,return,tag,of,uri,path,return
WebFluxTags -> public static Tag uri(ServerWebExchange exchange);1537266644;Creates a {@code uri} tag based on the URI of the given {@code exchange}. Uses the_{@link HandlerMapping#BEST_MATCHING_PATTERN_ATTRIBUTE} best matching pattern._@param exchange the exchange_@return the uri tag derived from the exchange;public static Tag uri(ServerWebExchange exchange) {_		if (exchange != null) {_			PathPattern pathPattern = exchange_					.getAttribute(HandlerMapping.BEST_MATCHING_PATTERN_ATTRIBUTE)__			if (pathPattern != null) {_				return Tag.of("uri", pathPattern.getPatternString())__			}_			HttpStatus status = exchange.getResponse().getStatusCode()__			if (status != null && status.is3xxRedirection()) {_				return URI_REDIRECTION__			}_			if (status != null && status.equals(HttpStatus.NOT_FOUND)) {_				return URI_NOT_FOUND__			}_			String path = exchange.getRequest().getPath().value()__			if (path.isEmpty()) {_				return URI_ROOT__			}_			return Tag.of("uri", path)__		}_		return URI_UNKNOWN__	};creates,a,code,uri,tag,based,on,the,uri,of,the,given,code,exchange,uses,the,link,handler,mapping,best,matching,pattern,param,exchange,the,exchange,return,the,uri,tag,derived,from,the,exchange;public,static,tag,uri,server,web,exchange,exchange,if,exchange,null,path,pattern,path,pattern,exchange,get,attribute,handler,mapping,if,path,pattern,null,return,tag,of,uri,path,pattern,get,pattern,string,http,status,status,exchange,get,response,get,status,code,if,status,null,status,is3xx,redirection,return,if,status,null,status,equals,http,status,return,string,path,exchange,get,request,get,path,value,if,path,is,empty,return,return,tag,of,uri,path,return
WebFluxTags -> public static Tag uri(ServerWebExchange exchange);1537268392;Creates a {@code uri} tag based on the URI of the given {@code exchange}. Uses the_{@link HandlerMapping#BEST_MATCHING_PATTERN_ATTRIBUTE} best matching pattern._@param exchange the exchange_@return the uri tag derived from the exchange;public static Tag uri(ServerWebExchange exchange) {_		PathPattern pathPattern = exchange_				.getAttribute(HandlerMapping.BEST_MATCHING_PATTERN_ATTRIBUTE)__		if (pathPattern != null) {_			return Tag.of("uri", pathPattern.getPatternString())__		}_		HttpStatus status = exchange.getResponse().getStatusCode()__		if (status != null && status.is3xxRedirection()) {_			return URI_REDIRECTION__		}_		if (status != null && status.equals(HttpStatus.NOT_FOUND)) {_			return URI_NOT_FOUND__		}_		String path = exchange.getRequest().getPath().value()__		if (path.isEmpty()) {_			return URI_ROOT__		}_		return Tag.of("uri", path)__	};creates,a,code,uri,tag,based,on,the,uri,of,the,given,code,exchange,uses,the,link,handler,mapping,best,matching,pattern,param,exchange,the,exchange,return,the,uri,tag,derived,from,the,exchange;public,static,tag,uri,server,web,exchange,exchange,path,pattern,path,pattern,exchange,get,attribute,handler,mapping,if,path,pattern,null,return,tag,of,uri,path,pattern,get,pattern,string,http,status,status,exchange,get,response,get,status,code,if,status,null,status,is3xx,redirection,return,if,status,null,status,equals,http,status,return,string,path,exchange,get,request,get,path,value,if,path,is,empty,return,return,tag,of,uri,path
WebFluxTags -> public static Tag uri(ServerWebExchange exchange);1537270449;Creates a {@code uri} tag based on the URI of the given {@code exchange}. Uses the_{@link HandlerMapping#BEST_MATCHING_PATTERN_ATTRIBUTE} best matching pattern._@param exchange the exchange_@return the uri tag derived from the exchange;public static Tag uri(ServerWebExchange exchange) {_		PathPattern pathPattern = exchange_				.getAttribute(HandlerMapping.BEST_MATCHING_PATTERN_ATTRIBUTE)__		if (pathPattern != null) {_			return Tag.of("uri", pathPattern.getPatternString())__		}_		HttpStatus status = exchange.getResponse().getStatusCode()__		if (status != null && status.is3xxRedirection()) {_			return URI_REDIRECTION__		}_		if (status != null && status.equals(HttpStatus.NOT_FOUND)) {_			return URI_NOT_FOUND__		}_		String path = exchange.getRequest().getPath().value()__		if (path.isEmpty()) {_			return URI_ROOT__		}_		return Tag.of("uri", path)__	};creates,a,code,uri,tag,based,on,the,uri,of,the,given,code,exchange,uses,the,link,handler,mapping,best,matching,pattern,param,exchange,the,exchange,return,the,uri,tag,derived,from,the,exchange;public,static,tag,uri,server,web,exchange,exchange,path,pattern,path,pattern,exchange,get,attribute,handler,mapping,if,path,pattern,null,return,tag,of,uri,path,pattern,get,pattern,string,http,status,status,exchange,get,response,get,status,code,if,status,null,status,is3xx,redirection,return,if,status,null,status,equals,http,status,return,string,path,exchange,get,request,get,path,value,if,path,is,empty,return,return,tag,of,uri,path
WebFluxTags -> public static Tag uri(ServerWebExchange exchange);1538405458;Creates a {@code uri} tag based on the URI of the given {@code exchange}. Uses the_{@link HandlerMapping#BEST_MATCHING_PATTERN_ATTRIBUTE} best matching pattern._@param exchange the exchange_@return the uri tag derived from the exchange;public static Tag uri(ServerWebExchange exchange) {_		PathPattern pathPattern = exchange_				.getAttribute(HandlerMapping.BEST_MATCHING_PATTERN_ATTRIBUTE)__		if (pathPattern != null) {_			return Tag.of("uri", pathPattern.getPatternString())__		}_		HttpStatus status = exchange.getResponse().getStatusCode()__		if (status != null) {_			if (status.is3xxRedirection()) {_				return URI_REDIRECTION__			}_			if (status == HttpStatus.NOT_FOUND) {_				return URI_NOT_FOUND__			}_		}_		String path = exchange.getRequest().getPath().value()__		if (path.isEmpty()) {_			return URI_ROOT__		}_		return Tag.of("uri", path)__	};creates,a,code,uri,tag,based,on,the,uri,of,the,given,code,exchange,uses,the,link,handler,mapping,best,matching,pattern,param,exchange,the,exchange,return,the,uri,tag,derived,from,the,exchange;public,static,tag,uri,server,web,exchange,exchange,path,pattern,path,pattern,exchange,get,attribute,handler,mapping,if,path,pattern,null,return,tag,of,uri,path,pattern,get,pattern,string,http,status,status,exchange,get,response,get,status,code,if,status,null,if,status,is3xx,redirection,return,if,status,http,status,return,string,path,exchange,get,request,get,path,value,if,path,is,empty,return,return,tag,of,uri,path
WebFluxTags -> public static Tag uri(ServerWebExchange exchange);1538568021;Creates a {@code uri} tag based on the URI of the given {@code exchange}. Uses the_{@link HandlerMapping#BEST_MATCHING_PATTERN_ATTRIBUTE} best matching pattern._@param exchange the exchange_@return the uri tag derived from the exchange;public static Tag uri(ServerWebExchange exchange) {_		PathPattern pathPattern = exchange_				.getAttribute(HandlerMapping.BEST_MATCHING_PATTERN_ATTRIBUTE)__		if (pathPattern != null) {_			return Tag.of("uri", pathPattern.getPatternString())__		}_		HttpStatus status = exchange.getResponse().getStatusCode()__		if (status != null) {_			if (status.is3xxRedirection()) {_				return URI_REDIRECTION__			}_			if (status == HttpStatus.NOT_FOUND) {_				return URI_NOT_FOUND__			}_		}_		String path = exchange.getRequest().getPath().value()__		if (path.isEmpty()) {_			return URI_ROOT__		}_		return Tag.of("uri", path)__	};creates,a,code,uri,tag,based,on,the,uri,of,the,given,code,exchange,uses,the,link,handler,mapping,best,matching,pattern,param,exchange,the,exchange,return,the,uri,tag,derived,from,the,exchange;public,static,tag,uri,server,web,exchange,exchange,path,pattern,path,pattern,exchange,get,attribute,handler,mapping,if,path,pattern,null,return,tag,of,uri,path,pattern,get,pattern,string,http,status,status,exchange,get,response,get,status,code,if,status,null,if,status,is3xx,redirection,return,if,status,http,status,return,string,path,exchange,get,request,get,path,value,if,path,is,empty,return,return,tag,of,uri,path
WebFluxTags -> public static Tag uri(ServerWebExchange exchange);1539345452;Creates a {@code uri} tag based on the URI of the given {@code exchange}. Uses the_{@link HandlerMapping#BEST_MATCHING_PATTERN_ATTRIBUTE} best matching pattern from_WebFlux annotation or {@link RouterFunctions#MATCHING_PATTERN_ATTRIBUTE} from_WebFlux Fn._@param exchange the exchange_@return the uri tag derived from the exchange;public static Tag uri(ServerWebExchange exchange) {_		PathPattern pathPattern = exchange_				.getAttribute(HandlerMapping.BEST_MATCHING_PATTERN_ATTRIBUTE)__		if (pathPattern != null) {_			return Tag.of("uri", pathPattern.getPatternString())__		}_		String matchingPattern = exchange_				.getAttribute(RouterFunctions.MATCHING_PATTERN_ATTRIBUTE)__		if (matchingPattern != null) {_			return Tag.of("uri", matchingPattern)__		}_		HttpStatus status = exchange.getResponse().getStatusCode()__		if (status != null) {_			if (status.is3xxRedirection()) {_				return URI_REDIRECTION__			}_			if (status == HttpStatus.NOT_FOUND) {_				return URI_NOT_FOUND__			}_		}_		String path = exchange.getRequest().getPath().value()__		if (path.isEmpty()) {_			return URI_ROOT__		}_		return Tag.of("uri", path)__	};creates,a,code,uri,tag,based,on,the,uri,of,the,given,code,exchange,uses,the,link,handler,mapping,best,matching,pattern,from,web,flux,annotation,or,link,router,functions,from,web,flux,fn,param,exchange,the,exchange,return,the,uri,tag,derived,from,the,exchange;public,static,tag,uri,server,web,exchange,exchange,path,pattern,path,pattern,exchange,get,attribute,handler,mapping,if,path,pattern,null,return,tag,of,uri,path,pattern,get,pattern,string,string,matching,pattern,exchange,get,attribute,router,functions,if,matching,pattern,null,return,tag,of,uri,matching,pattern,http,status,status,exchange,get,response,get,status,code,if,status,null,if,status,is3xx,redirection,return,if,status,http,status,return,string,path,exchange,get,request,get,path,value,if,path,is,empty,return,return,tag,of,uri,path
WebFluxTags -> public static Tag uri(ServerWebExchange exchange);1539867519;Creates a {@code uri} tag based on the URI of the given {@code exchange}. Uses the_{@link HandlerMapping#BEST_MATCHING_PATTERN_ATTRIBUTE} best matching pattern._@param exchange the exchange_@return the uri tag derived from the exchange;public static Tag uri(ServerWebExchange exchange) {_		PathPattern pathPattern = exchange_				.getAttribute(HandlerMapping.BEST_MATCHING_PATTERN_ATTRIBUTE)__		if (pathPattern != null) {_			return Tag.of("uri", pathPattern.getPatternString())__		}_		HttpStatus status = exchange.getResponse().getStatusCode()__		if (status != null) {_			if (status.is3xxRedirection()) {_				return URI_REDIRECTION__			}_			if (status == HttpStatus.NOT_FOUND) {_				return URI_NOT_FOUND__			}_		}_		String path = exchange.getRequest().getPath().value()__		if (path.isEmpty()) {_			return URI_ROOT__		}_		return Tag.of("uri", path)__	};creates,a,code,uri,tag,based,on,the,uri,of,the,given,code,exchange,uses,the,link,handler,mapping,best,matching,pattern,param,exchange,the,exchange,return,the,uri,tag,derived,from,the,exchange;public,static,tag,uri,server,web,exchange,exchange,path,pattern,path,pattern,exchange,get,attribute,handler,mapping,if,path,pattern,null,return,tag,of,uri,path,pattern,get,pattern,string,http,status,status,exchange,get,response,get,status,code,if,status,null,if,status,is3xx,redirection,return,if,status,http,status,return,string,path,exchange,get,request,get,path,value,if,path,is,empty,return,return,tag,of,uri,path
WebFluxTags -> public static Tag uri(ServerWebExchange exchange);1546980354;Creates a {@code uri} tag based on the URI of the given {@code exchange}. Uses the_{@link HandlerMapping#BEST_MATCHING_PATTERN_ATTRIBUTE} best matching pattern if_available. Falling back to {@code REDIRECTION} for 3xx responses, {@code NOT_FOUND}_for 404 responses, {@code root} for requests with no path info, and {@code UNKNOWN}_for all other requests._@param exchange the exchange_@return the uri tag derived from the exchange;public static Tag uri(ServerWebExchange exchange) {_		PathPattern pathPattern = exchange_				.getAttribute(HandlerMapping.BEST_MATCHING_PATTERN_ATTRIBUTE)__		if (pathPattern != null) {_			return Tag.of("uri", pathPattern.getPatternString())__		}_		HttpStatus status = exchange.getResponse().getStatusCode()__		if (status != null) {_			if (status.is3xxRedirection()) {_				return URI_REDIRECTION__			}_			if (status == HttpStatus.NOT_FOUND) {_				return URI_NOT_FOUND__			}_		}_		String path = getPathInfo(exchange)__		if (path.isEmpty()) {_			return URI_ROOT__		}_		return URI_UNKNOWN__	};creates,a,code,uri,tag,based,on,the,uri,of,the,given,code,exchange,uses,the,link,handler,mapping,best,matching,pattern,if,available,falling,back,to,code,redirection,for,3xx,responses,code,for,404,responses,code,root,for,requests,with,no,path,info,and,code,unknown,for,all,other,requests,param,exchange,the,exchange,return,the,uri,tag,derived,from,the,exchange;public,static,tag,uri,server,web,exchange,exchange,path,pattern,path,pattern,exchange,get,attribute,handler,mapping,if,path,pattern,null,return,tag,of,uri,path,pattern,get,pattern,string,http,status,status,exchange,get,response,get,status,code,if,status,null,if,status,is3xx,redirection,return,if,status,http,status,return,string,path,get,path,info,exchange,if,path,is,empty,return,return
WebFluxTags -> public static Tag method(ServerWebExchange exchange);1507173536;Creates a {@code method} tag based on the_{@link org.springframework.http.server.reactive.ServerHttpRequest#getMethod()_method} of the {@link ServerWebExchange#getRequest()} request of the given_{@code exchange}._@param exchange the exchange_@return the method tag whose value is a capitalized method (e.g. GET).;public static Tag method(ServerWebExchange exchange) {_		return Tag.of("method", exchange.getRequest().getMethod().toString())__	};creates,a,code,method,tag,based,on,the,link,org,springframework,http,server,reactive,server,http,request,get,method,method,of,the,link,server,web,exchange,get,request,request,of,the,given,code,exchange,param,exchange,the,exchange,return,the,method,tag,whose,value,is,a,capitalized,method,e,g,get;public,static,tag,method,server,web,exchange,exchange,return,tag,of,method,exchange,get,request,get,method,to,string
WebFluxTags -> public static Tag method(ServerWebExchange exchange);1522835170;Creates a {@code method} tag based on the_{@link org.springframework.http.server.reactive.ServerHttpRequest#getMethod()_method} of the {@link ServerWebExchange#getRequest()} request of the given_{@code exchange}._@param exchange the exchange_@return the method tag whose value is a capitalized method (e.g. GET).;public static Tag method(ServerWebExchange exchange) {_		return Tag.of("method", exchange.getRequest().getMethod().toString())__	};creates,a,code,method,tag,based,on,the,link,org,springframework,http,server,reactive,server,http,request,get,method,method,of,the,link,server,web,exchange,get,request,request,of,the,given,code,exchange,param,exchange,the,exchange,return,the,method,tag,whose,value,is,a,capitalized,method,e,g,get;public,static,tag,method,server,web,exchange,exchange,return,tag,of,method,exchange,get,request,get,method,to,string
WebFluxTags -> public static Tag method(ServerWebExchange exchange);1522890085;Creates a {@code method} tag based on the_{@link org.springframework.http.server.reactive.ServerHttpRequest#getMethod()_method} of the {@link ServerWebExchange#getRequest()} request of the given_{@code exchange}._@param exchange the exchange_@return the method tag whose value is a capitalized method (e.g. GET).;public static Tag method(ServerWebExchange exchange) {_		return Tag.of("method", exchange.getRequest().getMethod().toString())__	};creates,a,code,method,tag,based,on,the,link,org,springframework,http,server,reactive,server,http,request,get,method,method,of,the,link,server,web,exchange,get,request,request,of,the,given,code,exchange,param,exchange,the,exchange,return,the,method,tag,whose,value,is,a,capitalized,method,e,g,get;public,static,tag,method,server,web,exchange,exchange,return,tag,of,method,exchange,get,request,get,method,to,string
WebFluxTags -> public static Tag method(ServerWebExchange exchange);1527579183;Creates a {@code method} tag based on the_{@link org.springframework.http.server.reactive.ServerHttpRequest#getMethod()_method} of the {@link ServerWebExchange#getRequest()} request of the given_{@code exchange}._@param exchange the exchange_@return the method tag whose value is a capitalized method (e.g. GET).;public static Tag method(ServerWebExchange exchange) {_		return Tag.of("method", exchange.getRequest().getMethod().toString())__	};creates,a,code,method,tag,based,on,the,link,org,springframework,http,server,reactive,server,http,request,get,method,method,of,the,link,server,web,exchange,get,request,request,of,the,given,code,exchange,param,exchange,the,exchange,return,the,method,tag,whose,value,is,a,capitalized,method,e,g,get;public,static,tag,method,server,web,exchange,exchange,return,tag,of,method,exchange,get,request,get,method,to,string
WebFluxTags -> public static Tag method(ServerWebExchange exchange);1529417140;Creates a {@code method} tag based on the_{@link org.springframework.http.server.reactive.ServerHttpRequest#getMethod()_method} of the {@link ServerWebExchange#getRequest()} request of the given_{@code exchange}._@param exchange the exchange_@return the method tag whose value is a capitalized method (e.g. GET).;public static Tag method(ServerWebExchange exchange) {_		return Tag.of("method", exchange.getRequest().getMethod().toString())__	};creates,a,code,method,tag,based,on,the,link,org,springframework,http,server,reactive,server,http,request,get,method,method,of,the,link,server,web,exchange,get,request,request,of,the,given,code,exchange,param,exchange,the,exchange,return,the,method,tag,whose,value,is,a,capitalized,method,e,g,get;public,static,tag,method,server,web,exchange,exchange,return,tag,of,method,exchange,get,request,get,method,to,string
WebFluxTags -> public static Tag method(ServerWebExchange exchange);1530192441;Creates a {@code method} tag based on the_{@link org.springframework.http.server.reactive.ServerHttpRequest#getMethod()_method} of the {@link ServerWebExchange#getRequest()} request of the given_{@code exchange}._@param exchange the exchange_@return the method tag whose value is a capitalized method (e.g. GET).;public static Tag method(ServerWebExchange exchange) {_		return Tag.of("method", exchange.getRequest().getMethodValue())__	};creates,a,code,method,tag,based,on,the,link,org,springframework,http,server,reactive,server,http,request,get,method,method,of,the,link,server,web,exchange,get,request,request,of,the,given,code,exchange,param,exchange,the,exchange,return,the,method,tag,whose,value,is,a,capitalized,method,e,g,get;public,static,tag,method,server,web,exchange,exchange,return,tag,of,method,exchange,get,request,get,method,value
WebFluxTags -> public static Tag method(ServerWebExchange exchange);1532004921;Creates a {@code method} tag based on the_{@link org.springframework.http.server.reactive.ServerHttpRequest#getMethod()_method} of the {@link ServerWebExchange#getRequest()} request of the given_{@code exchange}._@param exchange the exchange_@return the method tag whose value is a capitalized method (e.g. GET).;public static Tag method(ServerWebExchange exchange) {_		return Tag.of("method", exchange.getRequest().getMethodValue())__	};creates,a,code,method,tag,based,on,the,link,org,springframework,http,server,reactive,server,http,request,get,method,method,of,the,link,server,web,exchange,get,request,request,of,the,given,code,exchange,param,exchange,the,exchange,return,the,method,tag,whose,value,is,a,capitalized,method,e,g,get;public,static,tag,method,server,web,exchange,exchange,return,tag,of,method,exchange,get,request,get,method,value
WebFluxTags -> public static Tag method(ServerWebExchange exchange);1537266644;Creates a {@code method} tag based on the_{@link org.springframework.http.server.reactive.ServerHttpRequest#getMethod()_method} of the {@link ServerWebExchange#getRequest()} request of the given_{@code exchange}._@param exchange the exchange_@return the method tag whose value is a capitalized method (e.g. GET).;public static Tag method(ServerWebExchange exchange) {_		return Tag.of("method", exchange.getRequest().getMethodValue())__	};creates,a,code,method,tag,based,on,the,link,org,springframework,http,server,reactive,server,http,request,get,method,method,of,the,link,server,web,exchange,get,request,request,of,the,given,code,exchange,param,exchange,the,exchange,return,the,method,tag,whose,value,is,a,capitalized,method,e,g,get;public,static,tag,method,server,web,exchange,exchange,return,tag,of,method,exchange,get,request,get,method,value
WebFluxTags -> public static Tag method(ServerWebExchange exchange);1537268392;Creates a {@code method} tag based on the_{@link org.springframework.http.server.reactive.ServerHttpRequest#getMethod()_method} of the {@link ServerWebExchange#getRequest()} request of the given_{@code exchange}._@param exchange the exchange_@return the method tag whose value is a capitalized method (e.g. GET).;public static Tag method(ServerWebExchange exchange) {_		return Tag.of("method", exchange.getRequest().getMethodValue())__	};creates,a,code,method,tag,based,on,the,link,org,springframework,http,server,reactive,server,http,request,get,method,method,of,the,link,server,web,exchange,get,request,request,of,the,given,code,exchange,param,exchange,the,exchange,return,the,method,tag,whose,value,is,a,capitalized,method,e,g,get;public,static,tag,method,server,web,exchange,exchange,return,tag,of,method,exchange,get,request,get,method,value
WebFluxTags -> public static Tag method(ServerWebExchange exchange);1537270449;Creates a {@code method} tag based on the_{@link org.springframework.http.server.reactive.ServerHttpRequest#getMethod()_method} of the {@link ServerWebExchange#getRequest()} request of the given_{@code exchange}._@param exchange the exchange_@return the method tag whose value is a capitalized method (e.g. GET).;public static Tag method(ServerWebExchange exchange) {_		return Tag.of("method", exchange.getRequest().getMethodValue())__	};creates,a,code,method,tag,based,on,the,link,org,springframework,http,server,reactive,server,http,request,get,method,method,of,the,link,server,web,exchange,get,request,request,of,the,given,code,exchange,param,exchange,the,exchange,return,the,method,tag,whose,value,is,a,capitalized,method,e,g,get;public,static,tag,method,server,web,exchange,exchange,return,tag,of,method,exchange,get,request,get,method,value
WebFluxTags -> public static Tag method(ServerWebExchange exchange);1538405458;Creates a {@code method} tag based on the_{@link org.springframework.http.server.reactive.ServerHttpRequest#getMethod()_method} of the {@link ServerWebExchange#getRequest()} request of the given_{@code exchange}._@param exchange the exchange_@return the method tag whose value is a capitalized method (e.g. GET).;public static Tag method(ServerWebExchange exchange) {_		return Tag.of("method", exchange.getRequest().getMethodValue())__	};creates,a,code,method,tag,based,on,the,link,org,springframework,http,server,reactive,server,http,request,get,method,method,of,the,link,server,web,exchange,get,request,request,of,the,given,code,exchange,param,exchange,the,exchange,return,the,method,tag,whose,value,is,a,capitalized,method,e,g,get;public,static,tag,method,server,web,exchange,exchange,return,tag,of,method,exchange,get,request,get,method,value
WebFluxTags -> public static Tag method(ServerWebExchange exchange);1538568021;Creates a {@code method} tag based on the_{@link org.springframework.http.server.reactive.ServerHttpRequest#getMethod()_method} of the {@link ServerWebExchange#getRequest()} request of the given_{@code exchange}._@param exchange the exchange_@return the method tag whose value is a capitalized method (e.g. GET).;public static Tag method(ServerWebExchange exchange) {_		return Tag.of("method", exchange.getRequest().getMethodValue())__	};creates,a,code,method,tag,based,on,the,link,org,springframework,http,server,reactive,server,http,request,get,method,method,of,the,link,server,web,exchange,get,request,request,of,the,given,code,exchange,param,exchange,the,exchange,return,the,method,tag,whose,value,is,a,capitalized,method,e,g,get;public,static,tag,method,server,web,exchange,exchange,return,tag,of,method,exchange,get,request,get,method,value
WebFluxTags -> public static Tag method(ServerWebExchange exchange);1539345452;Creates a {@code method} tag based on the_{@link org.springframework.http.server.reactive.ServerHttpRequest#getMethod()_method} of the {@link ServerWebExchange#getRequest()} request of the given_{@code exchange}._@param exchange the exchange_@return the method tag whose value is a capitalized method (e.g. GET).;public static Tag method(ServerWebExchange exchange) {_		return Tag.of("method", exchange.getRequest().getMethodValue())__	};creates,a,code,method,tag,based,on,the,link,org,springframework,http,server,reactive,server,http,request,get,method,method,of,the,link,server,web,exchange,get,request,request,of,the,given,code,exchange,param,exchange,the,exchange,return,the,method,tag,whose,value,is,a,capitalized,method,e,g,get;public,static,tag,method,server,web,exchange,exchange,return,tag,of,method,exchange,get,request,get,method,value
WebFluxTags -> public static Tag method(ServerWebExchange exchange);1539867519;Creates a {@code method} tag based on the_{@link org.springframework.http.server.reactive.ServerHttpRequest#getMethod()_method} of the {@link ServerWebExchange#getRequest()} request of the given_{@code exchange}._@param exchange the exchange_@return the method tag whose value is a capitalized method (e.g. GET).;public static Tag method(ServerWebExchange exchange) {_		return Tag.of("method", exchange.getRequest().getMethodValue())__	};creates,a,code,method,tag,based,on,the,link,org,springframework,http,server,reactive,server,http,request,get,method,method,of,the,link,server,web,exchange,get,request,request,of,the,given,code,exchange,param,exchange,the,exchange,return,the,method,tag,whose,value,is,a,capitalized,method,e,g,get;public,static,tag,method,server,web,exchange,exchange,return,tag,of,method,exchange,get,request,get,method,value
WebFluxTags -> public static Tag method(ServerWebExchange exchange);1546980354;Creates a {@code method} tag based on the_{@link org.springframework.http.server.reactive.ServerHttpRequest#getMethod()_method} of the {@link ServerWebExchange#getRequest()} request of the given_{@code exchange}._@param exchange the exchange_@return the method tag whose value is a capitalized method (e.g. GET).;public static Tag method(ServerWebExchange exchange) {_		return Tag.of("method", exchange.getRequest().getMethodValue())__	};creates,a,code,method,tag,based,on,the,link,org,springframework,http,server,reactive,server,http,request,get,method,method,of,the,link,server,web,exchange,get,request,request,of,the,given,code,exchange,param,exchange,the,exchange,return,the,method,tag,whose,value,is,a,capitalized,method,e,g,get;public,static,tag,method,server,web,exchange,exchange,return,tag,of,method,exchange,get,request,get,method,value
WebFluxTags -> public static Tag status(ServerWebExchange exchange);1507173536;Creates a {@code method} tag based on the response status of the given_{@code exchange}._@param exchange the exchange_@return the "status" tag derived from the response status;public static Tag status(ServerWebExchange exchange) {_		HttpStatus status = exchange.getResponse().getStatusCode()__		if (status == null) {_			status = HttpStatus.OK__		}_		return Tag.of("status", status.toString())__	};creates,a,code,method,tag,based,on,the,response,status,of,the,given,code,exchange,param,exchange,the,exchange,return,the,status,tag,derived,from,the,response,status;public,static,tag,status,server,web,exchange,exchange,http,status,status,exchange,get,response,get,status,code,if,status,null,status,http,status,ok,return,tag,of,status,status,to,string
WebFluxTags -> public static Tag status(ServerWebExchange exchange);1522835170;Creates a {@code method} tag based on the response status of the given_{@code exchange}._@param exchange the exchange_@return the "status" tag derived from the response status;public static Tag status(ServerWebExchange exchange) {_		HttpStatus status = exchange.getResponse().getStatusCode()__		if (status == null) {_			status = HttpStatus.OK__		}_		return Tag.of("status", status.toString())__	};creates,a,code,method,tag,based,on,the,response,status,of,the,given,code,exchange,param,exchange,the,exchange,return,the,status,tag,derived,from,the,response,status;public,static,tag,status,server,web,exchange,exchange,http,status,status,exchange,get,response,get,status,code,if,status,null,status,http,status,ok,return,tag,of,status,status,to,string
WebFluxTags -> public static Tag status(ServerWebExchange exchange);1522890085;Creates a {@code method} tag based on the response status of the given_{@code exchange}._@param exchange the exchange_@return the "status" tag derived from the response status;public static Tag status(ServerWebExchange exchange) {_		HttpStatus status = exchange.getResponse().getStatusCode()__		if (status == null) {_			status = HttpStatus.OK__		}_		return Tag.of("status", status.toString())__	};creates,a,code,method,tag,based,on,the,response,status,of,the,given,code,exchange,param,exchange,the,exchange,return,the,status,tag,derived,from,the,response,status;public,static,tag,status,server,web,exchange,exchange,http,status,status,exchange,get,response,get,status,code,if,status,null,status,http,status,ok,return,tag,of,status,status,to,string
WebFluxTags -> public static Tag status(ServerWebExchange exchange);1527579183;Creates a {@code method} tag based on the response status of the given_{@code exchange}._@param exchange the exchange_@return the "status" tag derived from the response status;public static Tag status(ServerWebExchange exchange) {_		HttpStatus status = exchange.getResponse().getStatusCode()__		if (status == null) {_			status = HttpStatus.OK__		}_		return Tag.of("status", status.toString())__	};creates,a,code,method,tag,based,on,the,response,status,of,the,given,code,exchange,param,exchange,the,exchange,return,the,status,tag,derived,from,the,response,status;public,static,tag,status,server,web,exchange,exchange,http,status,status,exchange,get,response,get,status,code,if,status,null,status,http,status,ok,return,tag,of,status,status,to,string
WebFluxTags -> public static Tag status(ServerWebExchange exchange);1529417140;Creates a {@code method} tag based on the response status of the given_{@code exchange}._@param exchange the exchange_@return the "status" tag derived from the response status;public static Tag status(ServerWebExchange exchange) {_		HttpStatus status = exchange.getResponse().getStatusCode()__		if (status == null) {_			status = HttpStatus.OK__		}_		return Tag.of("status", String.valueOf(status.value()))__	};creates,a,code,method,tag,based,on,the,response,status,of,the,given,code,exchange,param,exchange,the,exchange,return,the,status,tag,derived,from,the,response,status;public,static,tag,status,server,web,exchange,exchange,http,status,status,exchange,get,response,get,status,code,if,status,null,status,http,status,ok,return,tag,of,status,string,value,of,status,value
WebFluxTags -> public static Tag status(ServerWebExchange exchange);1530192441;Creates a {@code method} tag based on the response status of the given_{@code exchange}._@param exchange the exchange_@return the "status" tag derived from the response status;public static Tag status(ServerWebExchange exchange) {_		HttpStatus status = exchange.getResponse().getStatusCode()__		if (status == null) {_			status = HttpStatus.OK__		}_		return Tag.of("status", String.valueOf(status.value()))__	};creates,a,code,method,tag,based,on,the,response,status,of,the,given,code,exchange,param,exchange,the,exchange,return,the,status,tag,derived,from,the,response,status;public,static,tag,status,server,web,exchange,exchange,http,status,status,exchange,get,response,get,status,code,if,status,null,status,http,status,ok,return,tag,of,status,string,value,of,status,value
WebFluxTags -> public static Tag status(ServerWebExchange exchange);1532004921;Creates a {@code method} tag based on the response status of the given_{@code exchange}._@param exchange the exchange_@return the "status" tag derived from the response status;public static Tag status(ServerWebExchange exchange) {_		HttpStatus status = exchange.getResponse().getStatusCode()__		if (status == null) {_			status = HttpStatus.OK__		}_		return Tag.of("status", String.valueOf(status.value()))__	};creates,a,code,method,tag,based,on,the,response,status,of,the,given,code,exchange,param,exchange,the,exchange,return,the,status,tag,derived,from,the,response,status;public,static,tag,status,server,web,exchange,exchange,http,status,status,exchange,get,response,get,status,code,if,status,null,status,http,status,ok,return,tag,of,status,string,value,of,status,value
WebFluxTags -> public static Tag status(ServerWebExchange exchange);1537266644;Creates a {@code status} tag based on the response status of the given_{@code exchange}._@param exchange the exchange_@return the status tag derived from the response status;public static Tag status(ServerWebExchange exchange) {_		HttpStatus status = exchange.getResponse().getStatusCode()__		if (status == null) {_			status = HttpStatus.OK__		}_		return Tag.of("status", String.valueOf(status.value()))__	};creates,a,code,status,tag,based,on,the,response,status,of,the,given,code,exchange,param,exchange,the,exchange,return,the,status,tag,derived,from,the,response,status;public,static,tag,status,server,web,exchange,exchange,http,status,status,exchange,get,response,get,status,code,if,status,null,status,http,status,ok,return,tag,of,status,string,value,of,status,value
WebFluxTags -> public static Tag status(ServerWebExchange exchange);1537268392;Creates a {@code status} tag based on the response status of the given_{@code exchange}._@param exchange the exchange_@return the status tag derived from the response status;public static Tag status(ServerWebExchange exchange) {_		HttpStatus status = exchange.getResponse().getStatusCode()__		if (status == null) {_			status = HttpStatus.OK__		}_		return Tag.of("status", String.valueOf(status.value()))__	};creates,a,code,status,tag,based,on,the,response,status,of,the,given,code,exchange,param,exchange,the,exchange,return,the,status,tag,derived,from,the,response,status;public,static,tag,status,server,web,exchange,exchange,http,status,status,exchange,get,response,get,status,code,if,status,null,status,http,status,ok,return,tag,of,status,string,value,of,status,value
WebFluxTags -> public static Tag status(ServerWebExchange exchange);1537270449;Creates a {@code status} tag based on the response status of the given_{@code exchange}._@param exchange the exchange_@return the status tag derived from the response status;public static Tag status(ServerWebExchange exchange) {_		HttpStatus status = exchange.getResponse().getStatusCode()__		if (status == null) {_			status = HttpStatus.OK__		}_		return Tag.of("status", String.valueOf(status.value()))__	};creates,a,code,status,tag,based,on,the,response,status,of,the,given,code,exchange,param,exchange,the,exchange,return,the,status,tag,derived,from,the,response,status;public,static,tag,status,server,web,exchange,exchange,http,status,status,exchange,get,response,get,status,code,if,status,null,status,http,status,ok,return,tag,of,status,string,value,of,status,value
WebFluxTags -> public static Tag status(ServerWebExchange exchange);1538405458;Creates a {@code status} tag based on the response status of the given_{@code exchange}._@param exchange the exchange_@return the status tag derived from the response status;public static Tag status(ServerWebExchange exchange) {_		HttpStatus status = exchange.getResponse().getStatusCode()__		if (status == null) {_			status = HttpStatus.OK__		}_		return Tag.of("status", String.valueOf(status.value()))__	};creates,a,code,status,tag,based,on,the,response,status,of,the,given,code,exchange,param,exchange,the,exchange,return,the,status,tag,derived,from,the,response,status;public,static,tag,status,server,web,exchange,exchange,http,status,status,exchange,get,response,get,status,code,if,status,null,status,http,status,ok,return,tag,of,status,string,value,of,status,value
WebFluxTags -> public static Tag status(ServerWebExchange exchange);1538568021;Creates a {@code status} tag based on the response status of the given_{@code exchange}._@param exchange the exchange_@return the status tag derived from the response status;public static Tag status(ServerWebExchange exchange) {_		HttpStatus status = exchange.getResponse().getStatusCode()__		if (status == null) {_			status = HttpStatus.OK__		}_		return Tag.of("status", String.valueOf(status.value()))__	};creates,a,code,status,tag,based,on,the,response,status,of,the,given,code,exchange,param,exchange,the,exchange,return,the,status,tag,derived,from,the,response,status;public,static,tag,status,server,web,exchange,exchange,http,status,status,exchange,get,response,get,status,code,if,status,null,status,http,status,ok,return,tag,of,status,string,value,of,status,value
WebFluxTags -> public static Tag status(ServerWebExchange exchange);1539345452;Creates a {@code status} tag based on the response status of the given_{@code exchange}._@param exchange the exchange_@return the status tag derived from the response status;public static Tag status(ServerWebExchange exchange) {_		HttpStatus status = exchange.getResponse().getStatusCode()__		if (status == null) {_			status = HttpStatus.OK__		}_		return Tag.of("status", String.valueOf(status.value()))__	};creates,a,code,status,tag,based,on,the,response,status,of,the,given,code,exchange,param,exchange,the,exchange,return,the,status,tag,derived,from,the,response,status;public,static,tag,status,server,web,exchange,exchange,http,status,status,exchange,get,response,get,status,code,if,status,null,status,http,status,ok,return,tag,of,status,string,value,of,status,value
WebFluxTags -> public static Tag status(ServerWebExchange exchange);1539867519;Creates a {@code status} tag based on the response status of the given_{@code exchange}._@param exchange the exchange_@return the status tag derived from the response status;public static Tag status(ServerWebExchange exchange) {_		HttpStatus status = exchange.getResponse().getStatusCode()__		if (status == null) {_			status = HttpStatus.OK__		}_		return Tag.of("status", String.valueOf(status.value()))__	};creates,a,code,status,tag,based,on,the,response,status,of,the,given,code,exchange,param,exchange,the,exchange,return,the,status,tag,derived,from,the,response,status;public,static,tag,status,server,web,exchange,exchange,http,status,status,exchange,get,response,get,status,code,if,status,null,status,http,status,ok,return,tag,of,status,string,value,of,status,value
WebFluxTags -> public static Tag status(ServerWebExchange exchange);1546980354;Creates a {@code status} tag based on the response status of the given_{@code exchange}._@param exchange the exchange_@return the status tag derived from the response status;public static Tag status(ServerWebExchange exchange) {_		HttpStatus status = exchange.getResponse().getStatusCode()__		if (status == null) {_			status = HttpStatus.OK__		}_		return Tag.of("status", String.valueOf(status.value()))__	};creates,a,code,status,tag,based,on,the,response,status,of,the,given,code,exchange,param,exchange,the,exchange,return,the,status,tag,derived,from,the,response,status;public,static,tag,status,server,web,exchange,exchange,http,status,status,exchange,get,response,get,status,code,if,status,null,status,http,status,ok,return,tag,of,status,string,value,of,status,value
WebFluxTags -> public static Tag exception(Throwable exception);1507173536;Creates an {@code exception} tag based on the {@link Class#getSimpleName() simple_name} of the class of the given {@code exception}._@param exception the exception, may be {@code null}_@return the exception tag derived from the exception;public static Tag exception(Throwable exception) {_		if (exception != null) {_			return Tag.of("exception", exception.getClass().getSimpleName())__		}_		return Tag.of("exception", "none")__	};creates,an,code,exception,tag,based,on,the,link,class,get,simple,name,simple,name,of,the,class,of,the,given,code,exception,param,exception,the,exception,may,be,code,null,return,the,exception,tag,derived,from,the,exception;public,static,tag,exception,throwable,exception,if,exception,null,return,tag,of,exception,exception,get,class,get,simple,name,return,tag,of,exception,none
WebFluxTags -> public static Tag exception(Throwable exception);1522835170;Creates an {@code exception} tag based on the {@link Class#getSimpleName() simple_name} of the class of the given {@code exception}._@param exception the exception, may be {@code null}_@return the exception tag derived from the exception;public static Tag exception(Throwable exception) {_		if (exception != null) {_			return Tag.of("exception", exception.getClass().getSimpleName())__		}_		return Tag.of("exception", "none")__	};creates,an,code,exception,tag,based,on,the,link,class,get,simple,name,simple,name,of,the,class,of,the,given,code,exception,param,exception,the,exception,may,be,code,null,return,the,exception,tag,derived,from,the,exception;public,static,tag,exception,throwable,exception,if,exception,null,return,tag,of,exception,exception,get,class,get,simple,name,return,tag,of,exception,none
WebFluxTags -> public static Tag exception(Throwable exception);1522890085;Creates an {@code exception} tag based on the {@link Class#getSimpleName() simple_name} of the class of the given {@code exception}._@param exception the exception, may be {@code null}_@return the exception tag derived from the exception;public static Tag exception(Throwable exception) {_		if (exception != null) {_			return Tag.of("exception", exception.getClass().getSimpleName())__		}_		return Tag.of("exception", "none")__	};creates,an,code,exception,tag,based,on,the,link,class,get,simple,name,simple,name,of,the,class,of,the,given,code,exception,param,exception,the,exception,may,be,code,null,return,the,exception,tag,derived,from,the,exception;public,static,tag,exception,throwable,exception,if,exception,null,return,tag,of,exception,exception,get,class,get,simple,name,return,tag,of,exception,none
WebFluxTags -> public static Tag exception(Throwable exception);1527579183;Creates an {@code exception} tag based on the {@link Class#getSimpleName() simple_name} of the class of the given {@code exception}._@param exception the exception, may be {@code null}_@return the exception tag derived from the exception;public static Tag exception(Throwable exception) {_		if (exception != null) {_			return Tag.of("exception", exception.getClass().getSimpleName())__		}_		return EXCEPTION_NONE__	};creates,an,code,exception,tag,based,on,the,link,class,get,simple,name,simple,name,of,the,class,of,the,given,code,exception,param,exception,the,exception,may,be,code,null,return,the,exception,tag,derived,from,the,exception;public,static,tag,exception,throwable,exception,if,exception,null,return,tag,of,exception,exception,get,class,get,simple,name,return
WebFluxTags -> public static Tag exception(Throwable exception);1529417140;Creates an {@code exception} tag based on the {@link Class#getSimpleName() simple_name} of the class of the given {@code exception}._@param exception the exception, may be {@code null}_@return the exception tag derived from the exception;public static Tag exception(Throwable exception) {_		if (exception != null) {_			return Tag.of("exception", exception.getClass().getSimpleName())__		}_		return EXCEPTION_NONE__	};creates,an,code,exception,tag,based,on,the,link,class,get,simple,name,simple,name,of,the,class,of,the,given,code,exception,param,exception,the,exception,may,be,code,null,return,the,exception,tag,derived,from,the,exception;public,static,tag,exception,throwable,exception,if,exception,null,return,tag,of,exception,exception,get,class,get,simple,name,return
WebFluxTags -> public static Tag exception(Throwable exception);1530192441;Creates an {@code exception} tag based on the {@link Class#getSimpleName() simple_name} of the class of the given {@code exception}._@param exception the exception, may be {@code null}_@return the exception tag derived from the exception;public static Tag exception(Throwable exception) {_		if (exception != null) {_			return Tag.of("exception", exception.getClass().getSimpleName())__		}_		return EXCEPTION_NONE__	};creates,an,code,exception,tag,based,on,the,link,class,get,simple,name,simple,name,of,the,class,of,the,given,code,exception,param,exception,the,exception,may,be,code,null,return,the,exception,tag,derived,from,the,exception;public,static,tag,exception,throwable,exception,if,exception,null,return,tag,of,exception,exception,get,class,get,simple,name,return
WebFluxTags -> public static Tag exception(Throwable exception);1532004921;Creates an {@code exception} tag based on the {@link Class#getSimpleName() simple_name} of the class of the given {@code exception}._@param exception the exception, may be {@code null}_@return the exception tag derived from the exception;public static Tag exception(Throwable exception) {_		if (exception != null) {_			String simpleName = exception.getClass().getSimpleName()__			return Tag.of("exception", StringUtils.hasText(simpleName) ? simpleName_					: exception.getClass().getName())__		}_		return EXCEPTION_NONE__	};creates,an,code,exception,tag,based,on,the,link,class,get,simple,name,simple,name,of,the,class,of,the,given,code,exception,param,exception,the,exception,may,be,code,null,return,the,exception,tag,derived,from,the,exception;public,static,tag,exception,throwable,exception,if,exception,null,string,simple,name,exception,get,class,get,simple,name,return,tag,of,exception,string,utils,has,text,simple,name,simple,name,exception,get,class,get,name,return
WebFluxTags -> public static Tag exception(Throwable exception);1537266644;Creates an {@code exception} tag based on the {@link Class#getSimpleName() simple_name} of the class of the given {@code exception}._@param exception the exception, may be {@code null}_@return the exception tag derived from the exception;public static Tag exception(Throwable exception) {_		if (exception != null) {_			String simpleName = exception.getClass().getSimpleName()__			return Tag.of("exception", StringUtils.hasText(simpleName) ? simpleName_					: exception.getClass().getName())__		}_		return EXCEPTION_NONE__	};creates,an,code,exception,tag,based,on,the,link,class,get,simple,name,simple,name,of,the,class,of,the,given,code,exception,param,exception,the,exception,may,be,code,null,return,the,exception,tag,derived,from,the,exception;public,static,tag,exception,throwable,exception,if,exception,null,string,simple,name,exception,get,class,get,simple,name,return,tag,of,exception,string,utils,has,text,simple,name,simple,name,exception,get,class,get,name,return
WebFluxTags -> public static Tag exception(Throwable exception);1537268392;Creates an {@code exception} tag based on the {@link Class#getSimpleName() simple_name} of the class of the given {@code exception}._@param exception the exception, may be {@code null}_@return the exception tag derived from the exception;public static Tag exception(Throwable exception) {_		if (exception != null) {_			String simpleName = exception.getClass().getSimpleName()__			return Tag.of("exception", StringUtils.hasText(simpleName) ? simpleName_					: exception.getClass().getName())__		}_		return EXCEPTION_NONE__	};creates,an,code,exception,tag,based,on,the,link,class,get,simple,name,simple,name,of,the,class,of,the,given,code,exception,param,exception,the,exception,may,be,code,null,return,the,exception,tag,derived,from,the,exception;public,static,tag,exception,throwable,exception,if,exception,null,string,simple,name,exception,get,class,get,simple,name,return,tag,of,exception,string,utils,has,text,simple,name,simple,name,exception,get,class,get,name,return
WebFluxTags -> public static Tag exception(Throwable exception);1537270449;Creates an {@code exception} tag based on the {@link Class#getSimpleName() simple_name} of the class of the given {@code exception}._@param exception the exception, may be {@code null}_@return the exception tag derived from the exception;public static Tag exception(Throwable exception) {_		if (exception != null) {_			String simpleName = exception.getClass().getSimpleName()__			return Tag.of("exception", StringUtils.hasText(simpleName) ? simpleName_					: exception.getClass().getName())__		}_		return EXCEPTION_NONE__	};creates,an,code,exception,tag,based,on,the,link,class,get,simple,name,simple,name,of,the,class,of,the,given,code,exception,param,exception,the,exception,may,be,code,null,return,the,exception,tag,derived,from,the,exception;public,static,tag,exception,throwable,exception,if,exception,null,string,simple,name,exception,get,class,get,simple,name,return,tag,of,exception,string,utils,has,text,simple,name,simple,name,exception,get,class,get,name,return
WebFluxTags -> public static Tag exception(Throwable exception);1538405458;Creates an {@code exception} tag based on the {@link Class#getSimpleName() simple_name} of the class of the given {@code exception}._@param exception the exception, may be {@code null}_@return the exception tag derived from the exception;public static Tag exception(Throwable exception) {_		if (exception != null) {_			String simpleName = exception.getClass().getSimpleName()__			return Tag.of("exception", StringUtils.hasText(simpleName) ? simpleName_					: exception.getClass().getName())__		}_		return EXCEPTION_NONE__	};creates,an,code,exception,tag,based,on,the,link,class,get,simple,name,simple,name,of,the,class,of,the,given,code,exception,param,exception,the,exception,may,be,code,null,return,the,exception,tag,derived,from,the,exception;public,static,tag,exception,throwable,exception,if,exception,null,string,simple,name,exception,get,class,get,simple,name,return,tag,of,exception,string,utils,has,text,simple,name,simple,name,exception,get,class,get,name,return
WebFluxTags -> public static Tag exception(Throwable exception);1538568021;Creates an {@code exception} tag based on the {@link Class#getSimpleName() simple_name} of the class of the given {@code exception}._@param exception the exception, may be {@code null}_@return the exception tag derived from the exception;public static Tag exception(Throwable exception) {_		if (exception != null) {_			String simpleName = exception.getClass().getSimpleName()__			return Tag.of("exception", StringUtils.hasText(simpleName) ? simpleName_					: exception.getClass().getName())__		}_		return EXCEPTION_NONE__	};creates,an,code,exception,tag,based,on,the,link,class,get,simple,name,simple,name,of,the,class,of,the,given,code,exception,param,exception,the,exception,may,be,code,null,return,the,exception,tag,derived,from,the,exception;public,static,tag,exception,throwable,exception,if,exception,null,string,simple,name,exception,get,class,get,simple,name,return,tag,of,exception,string,utils,has,text,simple,name,simple,name,exception,get,class,get,name,return
WebFluxTags -> public static Tag exception(Throwable exception);1539345452;Creates an {@code exception} tag based on the {@link Class#getSimpleName() simple_name} of the class of the given {@code exception}._@param exception the exception, may be {@code null}_@return the exception tag derived from the exception;public static Tag exception(Throwable exception) {_		if (exception != null) {_			String simpleName = exception.getClass().getSimpleName()__			return Tag.of("exception", StringUtils.hasText(simpleName) ? simpleName_					: exception.getClass().getName())__		}_		return EXCEPTION_NONE__	};creates,an,code,exception,tag,based,on,the,link,class,get,simple,name,simple,name,of,the,class,of,the,given,code,exception,param,exception,the,exception,may,be,code,null,return,the,exception,tag,derived,from,the,exception;public,static,tag,exception,throwable,exception,if,exception,null,string,simple,name,exception,get,class,get,simple,name,return,tag,of,exception,string,utils,has,text,simple,name,simple,name,exception,get,class,get,name,return
WebFluxTags -> public static Tag exception(Throwable exception);1539867519;Creates an {@code exception} tag based on the {@link Class#getSimpleName() simple_name} of the class of the given {@code exception}._@param exception the exception, may be {@code null}_@return the exception tag derived from the exception;public static Tag exception(Throwable exception) {_		if (exception != null) {_			String simpleName = exception.getClass().getSimpleName()__			return Tag.of("exception", StringUtils.hasText(simpleName) ? simpleName_					: exception.getClass().getName())__		}_		return EXCEPTION_NONE__	};creates,an,code,exception,tag,based,on,the,link,class,get,simple,name,simple,name,of,the,class,of,the,given,code,exception,param,exception,the,exception,may,be,code,null,return,the,exception,tag,derived,from,the,exception;public,static,tag,exception,throwable,exception,if,exception,null,string,simple,name,exception,get,class,get,simple,name,return,tag,of,exception,string,utils,has,text,simple,name,simple,name,exception,get,class,get,name,return
WebFluxTags -> public static Tag exception(Throwable exception);1546980354;Creates an {@code exception} tag based on the {@link Class#getSimpleName() simple_name} of the class of the given {@code exception}._@param exception the exception, may be {@code null}_@return the exception tag derived from the exception;public static Tag exception(Throwable exception) {_		if (exception != null) {_			String simpleName = exception.getClass().getSimpleName()__			return Tag.of("exception", StringUtils.hasText(simpleName) ? simpleName_					: exception.getClass().getName())__		}_		return EXCEPTION_NONE__	};creates,an,code,exception,tag,based,on,the,link,class,get,simple,name,simple,name,of,the,class,of,the,given,code,exception,param,exception,the,exception,may,be,code,null,return,the,exception,tag,derived,from,the,exception;public,static,tag,exception,throwable,exception,if,exception,null,string,simple,name,exception,get,class,get,simple,name,return,tag,of,exception,string,utils,has,text,simple,name,simple,name,exception,get,class,get,name,return
WebFluxTags -> public static Tag outcome(ServerWebExchange exchange);1537270449;Creates a {@code outcome} tag based on the response status of the given_{@code exchange}._@param exchange the exchange_@return the outcome tag derived from the response status;public static Tag outcome(ServerWebExchange exchange) {_		HttpStatus status = exchange.getResponse().getStatusCode()__		if (status != null) {_			if (status.is1xxInformational()) {_				return OUTCOME_INFORMATIONAL__			}_			if (status.is2xxSuccessful()) {_				return OUTCOME_SUCCESS__			}_			if (status.is3xxRedirection()) {_				return OUTCOME_REDIRECTION__			}_			if (status.is4xxClientError()) {_				return OUTCOME_CLIENT_ERROR__			}_			return OUTCOME_SERVER_ERROR__		}_		return OUTCOME_UNKNOWN__	};creates,a,code,outcome,tag,based,on,the,response,status,of,the,given,code,exchange,param,exchange,the,exchange,return,the,outcome,tag,derived,from,the,response,status;public,static,tag,outcome,server,web,exchange,exchange,http,status,status,exchange,get,response,get,status,code,if,status,null,if,status,is1xx,informational,return,if,status,is2xx,successful,return,if,status,is3xx,redirection,return,if,status,is4xx,client,error,return,return,return
WebFluxTags -> public static Tag outcome(ServerWebExchange exchange);1538405458;Creates a {@code outcome} tag based on the response status of the given_{@code exchange}._@param exchange the exchange_@return the outcome tag derived from the response status;public static Tag outcome(ServerWebExchange exchange) {_		HttpStatus status = exchange.getResponse().getStatusCode()__		if (status != null) {_			if (status.is1xxInformational()) {_				return OUTCOME_INFORMATIONAL__			}_			if (status.is2xxSuccessful()) {_				return OUTCOME_SUCCESS__			}_			if (status.is3xxRedirection()) {_				return OUTCOME_REDIRECTION__			}_			if (status.is4xxClientError()) {_				return OUTCOME_CLIENT_ERROR__			}_			return OUTCOME_SERVER_ERROR__		}_		return OUTCOME_UNKNOWN__	};creates,a,code,outcome,tag,based,on,the,response,status,of,the,given,code,exchange,param,exchange,the,exchange,return,the,outcome,tag,derived,from,the,response,status;public,static,tag,outcome,server,web,exchange,exchange,http,status,status,exchange,get,response,get,status,code,if,status,null,if,status,is1xx,informational,return,if,status,is2xx,successful,return,if,status,is3xx,redirection,return,if,status,is4xx,client,error,return,return,return
WebFluxTags -> public static Tag outcome(ServerWebExchange exchange);1538568021;Creates an {@code outcome} tag based on the response status of the given_{@code exchange}._@param exchange the exchange_@return the outcome tag derived from the response status_@since 2.1.0;public static Tag outcome(ServerWebExchange exchange) {_		HttpStatus status = exchange.getResponse().getStatusCode()__		if (status != null) {_			if (status.is1xxInformational()) {_				return OUTCOME_INFORMATIONAL__			}_			if (status.is2xxSuccessful()) {_				return OUTCOME_SUCCESS__			}_			if (status.is3xxRedirection()) {_				return OUTCOME_REDIRECTION__			}_			if (status.is4xxClientError()) {_				return OUTCOME_CLIENT_ERROR__			}_			return OUTCOME_SERVER_ERROR__		}_		return OUTCOME_UNKNOWN__	};creates,an,code,outcome,tag,based,on,the,response,status,of,the,given,code,exchange,param,exchange,the,exchange,return,the,outcome,tag,derived,from,the,response,status,since,2,1,0;public,static,tag,outcome,server,web,exchange,exchange,http,status,status,exchange,get,response,get,status,code,if,status,null,if,status,is1xx,informational,return,if,status,is2xx,successful,return,if,status,is3xx,redirection,return,if,status,is4xx,client,error,return,return,return
WebFluxTags -> public static Tag outcome(ServerWebExchange exchange);1539345452;Creates an {@code outcome} tag based on the response status of the given_{@code exchange}._@param exchange the exchange_@return the outcome tag derived from the response status_@since 2.1.0;public static Tag outcome(ServerWebExchange exchange) {_		HttpStatus status = exchange.getResponse().getStatusCode()__		if (status != null) {_			if (status.is1xxInformational()) {_				return OUTCOME_INFORMATIONAL__			}_			if (status.is2xxSuccessful()) {_				return OUTCOME_SUCCESS__			}_			if (status.is3xxRedirection()) {_				return OUTCOME_REDIRECTION__			}_			if (status.is4xxClientError()) {_				return OUTCOME_CLIENT_ERROR__			}_			return OUTCOME_SERVER_ERROR__		}_		return OUTCOME_UNKNOWN__	};creates,an,code,outcome,tag,based,on,the,response,status,of,the,given,code,exchange,param,exchange,the,exchange,return,the,outcome,tag,derived,from,the,response,status,since,2,1,0;public,static,tag,outcome,server,web,exchange,exchange,http,status,status,exchange,get,response,get,status,code,if,status,null,if,status,is1xx,informational,return,if,status,is2xx,successful,return,if,status,is3xx,redirection,return,if,status,is4xx,client,error,return,return,return
WebFluxTags -> public static Tag outcome(ServerWebExchange exchange);1539867519;Creates an {@code outcome} tag based on the response status of the given_{@code exchange}._@param exchange the exchange_@return the outcome tag derived from the response status_@since 2.1.0;public static Tag outcome(ServerWebExchange exchange) {_		HttpStatus status = exchange.getResponse().getStatusCode()__		if (status != null) {_			if (status.is1xxInformational()) {_				return OUTCOME_INFORMATIONAL__			}_			if (status.is2xxSuccessful()) {_				return OUTCOME_SUCCESS__			}_			if (status.is3xxRedirection()) {_				return OUTCOME_REDIRECTION__			}_			if (status.is4xxClientError()) {_				return OUTCOME_CLIENT_ERROR__			}_			return OUTCOME_SERVER_ERROR__		}_		return OUTCOME_UNKNOWN__	};creates,an,code,outcome,tag,based,on,the,response,status,of,the,given,code,exchange,param,exchange,the,exchange,return,the,outcome,tag,derived,from,the,response,status,since,2,1,0;public,static,tag,outcome,server,web,exchange,exchange,http,status,status,exchange,get,response,get,status,code,if,status,null,if,status,is1xx,informational,return,if,status,is2xx,successful,return,if,status,is3xx,redirection,return,if,status,is4xx,client,error,return,return,return
WebFluxTags -> public static Tag outcome(ServerWebExchange exchange);1546980354;Creates an {@code outcome} tag based on the response status of the given_{@code exchange}._@param exchange the exchange_@return the outcome tag derived from the response status_@since 2.1.0;public static Tag outcome(ServerWebExchange exchange) {_		HttpStatus status = exchange.getResponse().getStatusCode()__		if (status != null) {_			if (status.is1xxInformational()) {_				return OUTCOME_INFORMATIONAL__			}_			if (status.is2xxSuccessful()) {_				return OUTCOME_SUCCESS__			}_			if (status.is3xxRedirection()) {_				return OUTCOME_REDIRECTION__			}_			if (status.is4xxClientError()) {_				return OUTCOME_CLIENT_ERROR__			}_			return OUTCOME_SERVER_ERROR__		}_		return OUTCOME_UNKNOWN__	};creates,an,code,outcome,tag,based,on,the,response,status,of,the,given,code,exchange,param,exchange,the,exchange,return,the,outcome,tag,derived,from,the,response,status,since,2,1,0;public,static,tag,outcome,server,web,exchange,exchange,http,status,status,exchange,get,response,get,status,code,if,status,null,if,status,is1xx,informational,return,if,status,is2xx,successful,return,if,status,is3xx,redirection,return,if,status,is4xx,client,error,return,return,return
