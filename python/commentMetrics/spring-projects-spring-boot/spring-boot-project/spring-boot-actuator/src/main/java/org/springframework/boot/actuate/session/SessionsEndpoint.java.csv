commented;modifiers;parameterAmount;loc;comment;code
false;public;1;6;;@ReadOperation public SessionsReport sessionsForUsername(String username) {     Map<String, ? extends Session> sessions = this.sessionRepository.findByPrincipalName(username).     return new SessionsReport(sessions). }
false;public;1;8;;@ReadOperation public SessionDescriptor getSession(@Selector String sessionId) {     Session session = this.sessionRepository.findById(sessionId).     if (session == null) {         return null.     }     return new SessionDescriptor(session). }
false;public;1;4;;@DeleteOperation public void deleteSession(@Selector String sessionId) {     this.sessionRepository.deleteById(sessionId). }
false;public;0;3;;public List<SessionDescriptor> getSessions() {     return this.sessions. }
false;public;0;3;;public String getId() {     return this.id. }
false;public;0;3;;public Set<String> getAttributeNames() {     return this.attributeNames. }
false;public;0;3;;public Instant getCreationTime() {     return this.creationTime. }
false;public;0;3;;public Instant getLastAccessedTime() {     return this.lastAccessedTime. }
false;public;0;3;;public long getMaxInactiveInterval() {     return this.maxInactiveInterval. }
false;public;0;3;;public boolean isExpired() {     return this.expired. }
