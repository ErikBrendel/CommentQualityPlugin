commented;modifiers;parameterAmount;loc;comment;code
true;public;1;5;/**  * Flag to say that the repository lists traces in reverse order.  * @param reverse flag value (default true)  */ ;/**  * Flag to say that the repository lists traces in reverse order.  * @param reverse flag value (default true)  */ public void setReverse(boolean reverse) {     synchronized (this.traces) {         this.reverse = reverse.     } }
true;public;1;5;/**  * Set the capacity of the in-memory repository.  * @param capacity the capacity  */ ;/**  * Set the capacity of the in-memory repository.  * @param capacity the capacity  */ public void setCapacity(int capacity) {     synchronized (this.traces) {         this.capacity = capacity.     } }
false;public;0;6;;@Override public List<HttpTrace> findAll() {     synchronized (this.traces) {         return Collections.unmodifiableList(new ArrayList<>(this.traces)).     } }
false;public;1;14;;@Override public void add(HttpTrace trace) {     synchronized (this.traces) {         while (this.traces.size() >= this.capacity) {             this.traces.remove(this.reverse ? this.capacity - 1 : 0).         }         if (this.reverse) {             this.traces.add(0, trace).         } else {             this.traces.add(trace).         }     } }
