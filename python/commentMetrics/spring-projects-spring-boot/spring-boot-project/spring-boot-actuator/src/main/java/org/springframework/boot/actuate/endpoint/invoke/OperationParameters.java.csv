commented;modifiers;parameterAmount;loc;comment;code
true;default;0;3;/**  * Return {@code true} if there is at least one parameter.  * @return if there are parameters  */ ;/**  * Return {@code true} if there is at least one parameter.  * @return if there are parameters  */ default boolean hasParameters() {     return getParameterCount() > 0. }
true;;0;1;/**  * Return the total number of parameters.  * @return the total number of parameters  */ ;/**  * Return the total number of parameters.  * @return the total number of parameters  */ int getParameterCount().
true;default;0;3;/**  * Return if any of the contained parameters are  * {@link OperationParameter#isMandatory() mandatory}.  * @return if any parameters are mandatory  */ ;/**  * Return if any of the contained parameters are  * {@link OperationParameter#isMandatory() mandatory}.  * @return if any parameters are mandatory  */ default boolean hasMandatoryParameter() {     return stream().anyMatch(OperationParameter::isMandatory). }
true;;1;1;/**  * Return the parameter at the specified index.  * @param index the parameter index  * @return the parameter  */ ;/**  * Return the parameter at the specified index.  * @param index the parameter index  * @return the parameter  */ OperationParameter get(int index).
true;;0;1;/**  * Return a stream of the contained parameters.  * @return a stream of the parameters  */ ;/**  * Return a stream of the contained parameters.  * @return a stream of the parameters  */ Stream<OperationParameter> stream().
