# id;timestamp;commentText;codeText;commentWords;codeWords
PathMapper -> static String getRootPath(List<PathMapper> pathMappers, EndpointId endpointId);1539653142;Resolve the root path for the specified {@code endpointId} from the given path_mappers. If no mapper matches then the ID itself is returned._@param pathMappers the path mappers (may be {@code null})_@param endpointId the id of an endpoint_@return the path of the endpoint;static String getRootPath(List<PathMapper> pathMappers, EndpointId endpointId) {_		Assert.notNull(endpointId, "EndpointId must not be null")__		if (pathMappers != null) {_			for (PathMapper mapper : pathMappers) {_				String path = mapper.getRootPath(endpointId)__				if (StringUtils.hasText(path)) {_					return path__				}_			}_		}_		return endpointId.toString()__	};resolve,the,root,path,for,the,specified,code,endpoint,id,from,the,given,path,mappers,if,no,mapper,matches,then,the,id,itself,is,returned,param,path,mappers,the,path,mappers,may,be,code,null,param,endpoint,id,the,id,of,an,endpoint,return,the,path,of,the,endpoint;static,string,get,root,path,list,path,mapper,path,mappers,endpoint,id,endpoint,id,assert,not,null,endpoint,id,endpoint,id,must,not,be,null,if,path,mappers,null,for,path,mapper,mapper,path,mappers,string,path,mapper,get,root,path,endpoint,id,if,string,utils,has,text,path,return,path,return,endpoint,id,to,string
PathMapper -> static String getRootPath(List<PathMapper> pathMappers, EndpointId endpointId);1540368820;Resolve the root path for the specified {@code endpointId} from the given path_mappers. If no mapper matches then the ID itself is returned._@param pathMappers the path mappers (may be {@code null})_@param endpointId the id of an endpoint_@return the path of the endpoint;static String getRootPath(List<PathMapper> pathMappers, EndpointId endpointId) {_		Assert.notNull(endpointId, "EndpointId must not be null")__		if (pathMappers != null) {_			for (PathMapper mapper : pathMappers) {_				String path = mapper.getRootPath(endpointId)__				if (StringUtils.hasText(path)) {_					return path__				}_			}_		}_		return endpointId.toString()__	};resolve,the,root,path,for,the,specified,code,endpoint,id,from,the,given,path,mappers,if,no,mapper,matches,then,the,id,itself,is,returned,param,path,mappers,the,path,mappers,may,be,code,null,param,endpoint,id,the,id,of,an,endpoint,return,the,path,of,the,endpoint;static,string,get,root,path,list,path,mapper,path,mappers,endpoint,id,endpoint,id,assert,not,null,endpoint,id,endpoint,id,must,not,be,null,if,path,mappers,null,for,path,mapper,mapper,path,mappers,string,path,mapper,get,root,path,endpoint,id,if,string,utils,has,text,path,return,path,return,endpoint,id,to,string
PathMapper -> static String getRootPath(List<PathMapper> pathMappers, EndpointId endpointId);1551262923;Resolve the root path for the specified {@code endpointId} from the given path_mappers. If no mapper matches then the ID itself is returned._@param pathMappers the path mappers (may be {@code null})_@param endpointId the id of an endpoint_@return the path of the endpoint;static String getRootPath(List<PathMapper> pathMappers, EndpointId endpointId) {_		Assert.notNull(endpointId, "EndpointId must not be null")__		if (pathMappers != null) {_			for (PathMapper mapper : pathMappers) {_				String path = mapper.getRootPath(endpointId)__				if (StringUtils.hasText(path)) {_					return path__				}_			}_		}_		return endpointId.toString()__	};resolve,the,root,path,for,the,specified,code,endpoint,id,from,the,given,path,mappers,if,no,mapper,matches,then,the,id,itself,is,returned,param,path,mappers,the,path,mappers,may,be,code,null,param,endpoint,id,the,id,of,an,endpoint,return,the,path,of,the,endpoint;static,string,get,root,path,list,path,mapper,path,mappers,endpoint,id,endpoint,id,assert,not,null,endpoint,id,endpoint,id,must,not,be,null,if,path,mappers,null,for,path,mapper,mapper,path,mappers,string,path,mapper,get,root,path,endpoint,id,if,string,utils,has,text,path,return,path,return,endpoint,id,to,string
PathMapper -> String getRootPath(EndpointId endpointId)_;1539550513;Resolve the root path for the endpoint with the specified {@code endpointId}._@param endpointId the id of an endpoint_@return the path of the endpoint;String getRootPath(EndpointId endpointId)_;resolve,the,root,path,for,the,endpoint,with,the,specified,code,endpoint,id,param,endpoint,id,the,id,of,an,endpoint,return,the,path,of,the,endpoint;string,get,root,path,endpoint,id,endpoint,id
PathMapper -> String getRootPath(EndpointId endpointId)_;1539638564;Resolve the root path for the endpoint with the specified {@code endpointId}._@param endpointId the id of an endpoint_@return the path of the endpoint;String getRootPath(EndpointId endpointId)_;resolve,the,root,path,for,the,endpoint,with,the,specified,code,endpoint,id,param,endpoint,id,the,id,of,an,endpoint,return,the,path,of,the,endpoint;string,get,root,path,endpoint,id,endpoint,id
PathMapper -> String getRootPath(EndpointId endpointId)_;1539653142;Resolve the root path for the specified {@code endpointId}._@param endpointId the id of an endpoint_@return the path of the endpoint or {@code null} if this mapper doesn't support the_given endpoint ID;String getRootPath(EndpointId endpointId)_;resolve,the,root,path,for,the,specified,code,endpoint,id,param,endpoint,id,the,id,of,an,endpoint,return,the,path,of,the,endpoint,or,code,null,if,this,mapper,doesn,t,support,the,given,endpoint,id;string,get,root,path,endpoint,id,endpoint,id
PathMapper -> String getRootPath(EndpointId endpointId)_;1540368820;Resolve the root path for the specified {@code endpointId}._@param endpointId the id of an endpoint_@return the path of the endpoint or {@code null} if this mapper doesn't support the_given endpoint ID;String getRootPath(EndpointId endpointId)_;resolve,the,root,path,for,the,specified,code,endpoint,id,param,endpoint,id,the,id,of,an,endpoint,return,the,path,of,the,endpoint,or,code,null,if,this,mapper,doesn,t,support,the,given,endpoint,id;string,get,root,path,endpoint,id,endpoint,id
PathMapper -> String getRootPath(EndpointId endpointId)_;1551262923;Resolve the root path for the specified {@code endpointId}._@param endpointId the id of an endpoint_@return the path of the endpoint or {@code null} if this mapper doesn't support the_given endpoint ID;String getRootPath(EndpointId endpointId)_;resolve,the,root,path,for,the,specified,code,endpoint,id,param,endpoint,id,the,id,of,an,endpoint,return,the,path,of,the,endpoint,or,code,null,if,this,mapper,doesn,t,support,the,given,endpoint,id;string,get,root,path,endpoint,id,endpoint,id
PathMapper -> @Deprecated 	static PathMapper useEndpointId();1539653142;Returns an {@link PathMapper} that uses the endpoint ID as the path._@return an {@link PathMapper} that uses the lowercase endpoint ID as the path_@deprecated since 2.1.0 in favor of {@link #getRootPath(List, EndpointId)} with a_{@code null} list;@Deprecated_	static PathMapper useEndpointId() {_		return (id) -> id.toString()__	};returns,an,link,path,mapper,that,uses,the,endpoint,id,as,the,path,return,an,link,path,mapper,that,uses,the,lowercase,endpoint,id,as,the,path,deprecated,since,2,1,0,in,favor,of,link,get,root,path,list,endpoint,id,with,a,code,null,list;deprecated,static,path,mapper,use,endpoint,id,return,id,id,to,string
PathMapper -> @Deprecated 	static PathMapper useEndpointId();1540368820;Returns an {@link PathMapper} that uses the endpoint ID as the path._@return an {@link PathMapper} that uses the lowercase endpoint ID as the path_@deprecated since 2.1.0 in favor of {@link #getRootPath(List, EndpointId)} with a_{@code null} list;@Deprecated_	static PathMapper useEndpointId() {_		return EndpointId::toString__	};returns,an,link,path,mapper,that,uses,the,endpoint,id,as,the,path,return,an,link,path,mapper,that,uses,the,lowercase,endpoint,id,as,the,path,deprecated,since,2,1,0,in,favor,of,link,get,root,path,list,endpoint,id,with,a,code,null,list;deprecated,static,path,mapper,use,endpoint,id,return,endpoint,id,to,string
PathMapper -> static PathMapper useEndpointId();1516423464;Returns an {@link PathMapper} that uses the endpoint ID as the path._@return an {@link PathMapper} that uses the endpoint ID as the path;static PathMapper useEndpointId() {_		return (endpointId) -> endpointId__	};returns,an,link,path,mapper,that,uses,the,endpoint,id,as,the,path,return,an,link,path,mapper,that,uses,the,endpoint,id,as,the,path;static,path,mapper,use,endpoint,id,return,endpoint,id,endpoint,id
PathMapper -> static PathMapper useEndpointId();1539550408;Returns an {@link PathMapper} that uses the endpoint ID as the path._@return an {@link PathMapper} that uses the lowercase endpoint ID as the path;static PathMapper useEndpointId() {_		return new PathMapper() {__			@Override_			@Deprecated_			public String getRootPath(String endpointId) {_				return getRootPath(EndpointId.of(endpointId))__			}__			@Override_			public String getRootPath(EndpointId endpointId) {_				return endpointId.toLowerCaseString()__			}__		}___	};returns,an,link,path,mapper,that,uses,the,endpoint,id,as,the,path,return,an,link,path,mapper,that,uses,the,lowercase,endpoint,id,as,the,path;static,path,mapper,use,endpoint,id,return,new,path,mapper,override,deprecated,public,string,get,root,path,string,endpoint,id,return,get,root,path,endpoint,id,of,endpoint,id,override,public,string,get,root,path,endpoint,id,endpoint,id,return,endpoint,id,to,lower,case,string
PathMapper -> static PathMapper useEndpointId();1539550513;Returns an {@link PathMapper} that uses the endpoint ID as the path._@return an {@link PathMapper} that uses the lowercase endpoint ID as the path;static PathMapper useEndpointId() {_		return (id) -> id.toLowerCaseString()___	};returns,an,link,path,mapper,that,uses,the,endpoint,id,as,the,path,return,an,link,path,mapper,that,uses,the,lowercase,endpoint,id,as,the,path;static,path,mapper,use,endpoint,id,return,id,id,to,lower,case,string
PathMapper -> static PathMapper useEndpointId();1539638564;Returns an {@link PathMapper} that uses the endpoint ID as the path._@return an {@link PathMapper} that uses the lowercase endpoint ID as the path;static PathMapper useEndpointId() {_		return (id) -> id.toString()__	};returns,an,link,path,mapper,that,uses,the,endpoint,id,as,the,path,return,an,link,path,mapper,that,uses,the,lowercase,endpoint,id,as,the,path;static,path,mapper,use,endpoint,id,return,id,id,to,string
