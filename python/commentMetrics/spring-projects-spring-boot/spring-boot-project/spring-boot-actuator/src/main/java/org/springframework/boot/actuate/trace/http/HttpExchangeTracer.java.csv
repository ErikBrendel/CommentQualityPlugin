# id;timestamp;commentText;codeText;commentWords;codeWords
HttpExchangeTracer -> public final void sendingResponse(HttpTrace trace, TraceableResponse response, 			Supplier<Principal> principal, Supplier<String> sessionId);1518095307;Ends the tracing of the exchange that is being concluded by sending the given_{@code response}._@param trace the trace for the exchange_@param response the response that concludes the exchange_@param principal a supplier for the exchange's principal_@param sessionId a supplier for the id of the exchange's session;public final void sendingResponse(HttpTrace trace, TraceableResponse response,_			Supplier<Principal> principal, Supplier<String> sessionId) {_		setIfIncluded(Include.TIME_TAKEN,_				() -> System.currentTimeMillis() - trace.getTimestamp().toEpochMilli(),_				trace::setTimeTaken)__		setIfIncluded(Include.SESSION_ID, sessionId, trace::setSessionId)__		setIfIncluded(Include.PRINCIPAL, principal, trace::setPrincipal)__		trace.setResponse(_				new HttpTrace.Response(new FilteredTraceableResponse(response)))__	};ends,the,tracing,of,the,exchange,that,is,being,concluded,by,sending,the,given,code,response,param,trace,the,trace,for,the,exchange,param,response,the,response,that,concludes,the,exchange,param,principal,a,supplier,for,the,exchange,s,principal,param,session,id,a,supplier,for,the,id,of,the,exchange,s,session;public,final,void,sending,response,http,trace,trace,traceable,response,response,supplier,principal,principal,supplier,string,session,id,set,if,included,include,system,current,time,millis,trace,get,timestamp,to,epoch,milli,trace,set,time,taken,set,if,included,include,session,id,trace,set,session,id,set,if,included,include,principal,principal,trace,set,principal,trace,set,response,new,http,trace,response,new,filtered,traceable,response,response
HttpExchangeTracer -> public final void sendingResponse(HttpTrace trace, TraceableResponse response, 			Supplier<Principal> principal, Supplier<String> sessionId);1525416882;Ends the tracing of the exchange that is being concluded by sending the given_{@code response}._@param trace the trace for the exchange_@param response the response that concludes the exchange_@param principal a supplier for the exchange's principal_@param sessionId a supplier for the id of the exchange's session;public final void sendingResponse(HttpTrace trace, TraceableResponse response,_			Supplier<Principal> principal, Supplier<String> sessionId) {_		setIfIncluded(Include.TIME_TAKEN,_				() -> System.currentTimeMillis() - trace.getTimestamp().toEpochMilli(),_				trace::setTimeTaken)__		setIfIncluded(Include.SESSION_ID, sessionId, trace::setSessionId)__		setIfIncluded(Include.PRINCIPAL, principal, trace::setPrincipal)__		trace.setResponse(_				new HttpTrace.Response(new FilteredTraceableResponse(response)))__	};ends,the,tracing,of,the,exchange,that,is,being,concluded,by,sending,the,given,code,response,param,trace,the,trace,for,the,exchange,param,response,the,response,that,concludes,the,exchange,param,principal,a,supplier,for,the,exchange,s,principal,param,session,id,a,supplier,for,the,id,of,the,exchange,s,session;public,final,void,sending,response,http,trace,trace,traceable,response,response,supplier,principal,principal,supplier,string,session,id,set,if,included,include,system,current,time,millis,trace,get,timestamp,to,epoch,milli,trace,set,time,taken,set,if,included,include,session,id,trace,set,session,id,set,if,included,include,principal,principal,trace,set,principal,trace,set,response,new,http,trace,response,new,filtered,traceable,response,response
HttpExchangeTracer -> public final void sendingResponse(HttpTrace trace, TraceableResponse response, 			Supplier<Principal> principal, Supplier<String> sessionId);1532418038;Ends the tracing of the exchange that is being concluded by sending the given_{@code response}._@param trace the trace for the exchange_@param response the response that concludes the exchange_@param principal a supplier for the exchange's principal_@param sessionId a supplier for the id of the exchange's session;public final void sendingResponse(HttpTrace trace, TraceableResponse response,_			Supplier<Principal> principal, Supplier<String> sessionId) {_		setIfIncluded(Include.TIME_TAKEN,_				() -> System.currentTimeMillis() - trace.getTimestamp().toEpochMilli(),_				trace::setTimeTaken)__		setIfIncluded(Include.SESSION_ID, sessionId, trace::setSessionId)__		setIfIncluded(Include.PRINCIPAL, principal, trace::setPrincipal)__		trace.setResponse(_				new HttpTrace.Response(new FilteredTraceableResponse(response)))__	};ends,the,tracing,of,the,exchange,that,is,being,concluded,by,sending,the,given,code,response,param,trace,the,trace,for,the,exchange,param,response,the,response,that,concludes,the,exchange,param,principal,a,supplier,for,the,exchange,s,principal,param,session,id,a,supplier,for,the,id,of,the,exchange,s,session;public,final,void,sending,response,http,trace,trace,traceable,response,response,supplier,principal,principal,supplier,string,session,id,set,if,included,include,system,current,time,millis,trace,get,timestamp,to,epoch,milli,trace,set,time,taken,set,if,included,include,session,id,trace,set,session,id,set,if,included,include,principal,principal,trace,set,principal,trace,set,response,new,http,trace,response,new,filtered,traceable,response,response
HttpExchangeTracer -> public final void sendingResponse(HttpTrace trace, TraceableResponse response, 			Supplier<Principal> principal, Supplier<String> sessionId);1532432125;Ends the tracing of the exchange that is being concluded by sending the given_{@code response}._@param trace the trace for the exchange_@param response the response that concludes the exchange_@param principal a supplier for the exchange's principal_@param sessionId a supplier for the id of the exchange's session;public final void sendingResponse(HttpTrace trace, TraceableResponse response,_			Supplier<Principal> principal, Supplier<String> sessionId) {_		setIfIncluded(Include.TIME_TAKEN,_				() -> System.currentTimeMillis() - trace.getTimestamp().toEpochMilli(),_				trace::setTimeTaken)__		setIfIncluded(Include.SESSION_ID, sessionId, trace::setSessionId)__		setIfIncluded(Include.PRINCIPAL, principal, trace::setPrincipal)__		trace.setResponse(_				new HttpTrace.Response(new FilteredTraceableResponse(response)))__	};ends,the,tracing,of,the,exchange,that,is,being,concluded,by,sending,the,given,code,response,param,trace,the,trace,for,the,exchange,param,response,the,response,that,concludes,the,exchange,param,principal,a,supplier,for,the,exchange,s,principal,param,session,id,a,supplier,for,the,id,of,the,exchange,s,session;public,final,void,sending,response,http,trace,trace,traceable,response,response,supplier,principal,principal,supplier,string,session,id,set,if,included,include,system,current,time,millis,trace,get,timestamp,to,epoch,milli,trace,set,time,taken,set,if,included,include,session,id,trace,set,session,id,set,if,included,include,principal,principal,trace,set,principal,trace,set,response,new,http,trace,response,new,filtered,traceable,response,response
HttpExchangeTracer -> public final void sendingResponse(HttpTrace trace, TraceableResponse response, 			Supplier<Principal> principal, Supplier<String> sessionId);1532852936;Ends the tracing of the exchange that is being concluded by sending the given_{@code response}._@param trace the trace for the exchange_@param response the response that concludes the exchange_@param principal a supplier for the exchange's principal_@param sessionId a supplier for the id of the exchange's session;public final void sendingResponse(HttpTrace trace, TraceableResponse response,_			Supplier<Principal> principal, Supplier<String> sessionId) {_		setIfIncluded(Include.TIME_TAKEN,_				() -> System.currentTimeMillis() - trace.getTimestamp().toEpochMilli(),_				trace::setTimeTaken)__		setIfIncluded(Include.SESSION_ID, sessionId, trace::setSessionId)__		setIfIncluded(Include.PRINCIPAL, principal, trace::setPrincipal)__		trace.setResponse(_				new HttpTrace.Response(new FilteredTraceableResponse(response)))__	};ends,the,tracing,of,the,exchange,that,is,being,concluded,by,sending,the,given,code,response,param,trace,the,trace,for,the,exchange,param,response,the,response,that,concludes,the,exchange,param,principal,a,supplier,for,the,exchange,s,principal,param,session,id,a,supplier,for,the,id,of,the,exchange,s,session;public,final,void,sending,response,http,trace,trace,traceable,response,response,supplier,principal,principal,supplier,string,session,id,set,if,included,include,system,current,time,millis,trace,get,timestamp,to,epoch,milli,trace,set,time,taken,set,if,included,include,session,id,trace,set,session,id,set,if,included,include,principal,principal,trace,set,principal,trace,set,response,new,http,trace,response,new,filtered,traceable,response,response
HttpExchangeTracer -> public final void sendingResponse(HttpTrace trace, TraceableResponse response, 			Supplier<Principal> principal, Supplier<String> sessionId);1533573354;Ends the tracing of the exchange that is being concluded by sending the given_{@code response}._@param trace the trace for the exchange_@param response the response that concludes the exchange_@param principal a supplier for the exchange's principal_@param sessionId a supplier for the id of the exchange's session;public final void sendingResponse(HttpTrace trace, TraceableResponse response,_			Supplier<Principal> principal, Supplier<String> sessionId) {_		setIfIncluded(Include.TIME_TAKEN,_				() -> System.currentTimeMillis() - trace.getTimestamp().toEpochMilli(),_				trace::setTimeTaken)__		setIfIncluded(Include.SESSION_ID, sessionId, trace::setSessionId)__		setIfIncluded(Include.PRINCIPAL, principal, trace::setPrincipal)__		trace.setResponse(_				new HttpTrace.Response(new FilteredTraceableResponse(response)))__	};ends,the,tracing,of,the,exchange,that,is,being,concluded,by,sending,the,given,code,response,param,trace,the,trace,for,the,exchange,param,response,the,response,that,concludes,the,exchange,param,principal,a,supplier,for,the,exchange,s,principal,param,session,id,a,supplier,for,the,id,of,the,exchange,s,session;public,final,void,sending,response,http,trace,trace,traceable,response,response,supplier,principal,principal,supplier,string,session,id,set,if,included,include,system,current,time,millis,trace,get,timestamp,to,epoch,milli,trace,set,time,taken,set,if,included,include,session,id,trace,set,session,id,set,if,included,include,principal,principal,trace,set,principal,trace,set,response,new,http,trace,response,new,filtered,traceable,response,response
HttpExchangeTracer -> public final HttpTrace receivedRequest(TraceableRequest request);1518095307;Begins the tracing of the exchange that was initiated by the given {@code request}_being received._@param request the received request_@return the HTTP trace for the;public final HttpTrace receivedRequest(TraceableRequest request) {_		return new HttpTrace(new FilteredTraceableRequest(request))__	};begins,the,tracing,of,the,exchange,that,was,initiated,by,the,given,code,request,being,received,param,request,the,received,request,return,the,http,trace,for,the;public,final,http,trace,received,request,traceable,request,request,return,new,http,trace,new,filtered,traceable,request,request
HttpExchangeTracer -> public final HttpTrace receivedRequest(TraceableRequest request);1525416882;Begins the tracing of the exchange that was initiated by the given {@code request}_being received._@param request the received request_@return the HTTP trace for the;public final HttpTrace receivedRequest(TraceableRequest request) {_		return new HttpTrace(new FilteredTraceableRequest(request))__	};begins,the,tracing,of,the,exchange,that,was,initiated,by,the,given,code,request,being,received,param,request,the,received,request,return,the,http,trace,for,the;public,final,http,trace,received,request,traceable,request,request,return,new,http,trace,new,filtered,traceable,request,request
HttpExchangeTracer -> public final HttpTrace receivedRequest(TraceableRequest request);1532418038;Begins the tracing of the exchange that was initiated by the given {@code request}_being received._@param request the received request_@return the HTTP trace for the;public final HttpTrace receivedRequest(TraceableRequest request) {_		return new HttpTrace(new FilteredTraceableRequest(request))__	};begins,the,tracing,of,the,exchange,that,was,initiated,by,the,given,code,request,being,received,param,request,the,received,request,return,the,http,trace,for,the;public,final,http,trace,received,request,traceable,request,request,return,new,http,trace,new,filtered,traceable,request,request
HttpExchangeTracer -> public final HttpTrace receivedRequest(TraceableRequest request);1532432125;Begins the tracing of the exchange that was initiated by the given {@code request}_being received._@param request the received request_@return the HTTP trace for the;public final HttpTrace receivedRequest(TraceableRequest request) {_		return new HttpTrace(new FilteredTraceableRequest(request))__	};begins,the,tracing,of,the,exchange,that,was,initiated,by,the,given,code,request,being,received,param,request,the,received,request,return,the,http,trace,for,the;public,final,http,trace,received,request,traceable,request,request,return,new,http,trace,new,filtered,traceable,request,request
HttpExchangeTracer -> public final HttpTrace receivedRequest(TraceableRequest request);1532852936;Begins the tracing of the exchange that was initiated by the given {@code request}_being received._@param request the received request_@return the HTTP trace for the;public final HttpTrace receivedRequest(TraceableRequest request) {_		return new HttpTrace(new FilteredTraceableRequest(request))__	};begins,the,tracing,of,the,exchange,that,was,initiated,by,the,given,code,request,being,received,param,request,the,received,request,return,the,http,trace,for,the;public,final,http,trace,received,request,traceable,request,request,return,new,http,trace,new,filtered,traceable,request,request
HttpExchangeTracer -> public final HttpTrace receivedRequest(TraceableRequest request);1533573354;Begins the tracing of the exchange that was initiated by the given {@code request}_being received._@param request the received request_@return the HTTP trace for the;public final HttpTrace receivedRequest(TraceableRequest request) {_		return new HttpTrace(new FilteredTraceableRequest(request))__	};begins,the,tracing,of,the,exchange,that,was,initiated,by,the,given,code,request,being,received,param,request,the,received,request,return,the,http,trace,for,the;public,final,http,trace,received,request,traceable,request,request,return,new,http,trace,new,filtered,traceable,request,request
HttpExchangeTracer -> public HttpExchangeTracer(Set<Include> includes);1518095307;Creates a new {@code HttpExchangeTracer} that will use the given {@code includes}_to determine the contents of its traces._@param includes the includes;public HttpExchangeTracer(Set<Include> includes) {_		this.includes = includes__	};creates,a,new,code,http,exchange,tracer,that,will,use,the,given,code,includes,to,determine,the,contents,of,its,traces,param,includes,the,includes;public,http,exchange,tracer,set,include,includes,this,includes,includes
HttpExchangeTracer -> public HttpExchangeTracer(Set<Include> includes);1525416882;Creates a new {@code HttpExchangeTracer} that will use the given {@code includes}_to determine the contents of its traces._@param includes the includes;public HttpExchangeTracer(Set<Include> includes) {_		this.includes = includes__	};creates,a,new,code,http,exchange,tracer,that,will,use,the,given,code,includes,to,determine,the,contents,of,its,traces,param,includes,the,includes;public,http,exchange,tracer,set,include,includes,this,includes,includes
HttpExchangeTracer -> public HttpExchangeTracer(Set<Include> includes);1532418038;Creates a new {@code HttpExchangeTracer} that will use the given {@code includes}_to determine the contents of its traces._@param includes the includes;public HttpExchangeTracer(Set<Include> includes) {_		this.includes = includes__	};creates,a,new,code,http,exchange,tracer,that,will,use,the,given,code,includes,to,determine,the,contents,of,its,traces,param,includes,the,includes;public,http,exchange,tracer,set,include,includes,this,includes,includes
HttpExchangeTracer -> public HttpExchangeTracer(Set<Include> includes);1532432125;Creates a new {@code HttpExchangeTracer} that will use the given {@code includes}_to determine the contents of its traces._@param includes the includes;public HttpExchangeTracer(Set<Include> includes) {_		this.includes = includes__	};creates,a,new,code,http,exchange,tracer,that,will,use,the,given,code,includes,to,determine,the,contents,of,its,traces,param,includes,the,includes;public,http,exchange,tracer,set,include,includes,this,includes,includes
HttpExchangeTracer -> public HttpExchangeTracer(Set<Include> includes);1532852936;Creates a new {@code HttpExchangeTracer} that will use the given {@code includes}_to determine the contents of its traces._@param includes the includes;public HttpExchangeTracer(Set<Include> includes) {_		this.includes = includes__	};creates,a,new,code,http,exchange,tracer,that,will,use,the,given,code,includes,to,determine,the,contents,of,its,traces,param,includes,the,includes;public,http,exchange,tracer,set,include,includes,this,includes,includes
HttpExchangeTracer -> public HttpExchangeTracer(Set<Include> includes);1533573354;Creates a new {@code HttpExchangeTracer} that will use the given {@code includes}_to determine the contents of its traces._@param includes the includes;public HttpExchangeTracer(Set<Include> includes) {_		this.includes = includes__	};creates,a,new,code,http,exchange,tracer,that,will,use,the,given,code,includes,to,determine,the,contents,of,its,traces,param,includes,the,includes;public,http,exchange,tracer,set,include,includes,this,includes,includes
HttpExchangeTracer -> protected void postProcessRequestHeaders(Map<String, List<String>> headers);1518095307;Post-process the given mutable map of request {@code headers}._@param headers the headers to post-process;protected void postProcessRequestHeaders(Map<String, List<String>> headers) {__	};post,process,the,given,mutable,map,of,request,code,headers,param,headers,the,headers,to,post,process;protected,void,post,process,request,headers,map,string,list,string,headers
HttpExchangeTracer -> protected void postProcessRequestHeaders(Map<String, List<String>> headers);1525416882;Post-process the given mutable map of request {@code headers}._@param headers the headers to post-process;protected void postProcessRequestHeaders(Map<String, List<String>> headers) {__	};post,process,the,given,mutable,map,of,request,code,headers,param,headers,the,headers,to,post,process;protected,void,post,process,request,headers,map,string,list,string,headers
HttpExchangeTracer -> protected void postProcessRequestHeaders(Map<String, List<String>> headers);1532418038;Post-process the given mutable map of request {@code headers}._@param headers the headers to post-process;protected void postProcessRequestHeaders(Map<String, List<String>> headers) {__	};post,process,the,given,mutable,map,of,request,code,headers,param,headers,the,headers,to,post,process;protected,void,post,process,request,headers,map,string,list,string,headers
HttpExchangeTracer -> protected void postProcessRequestHeaders(Map<String, List<String>> headers);1532432125;Post-process the given mutable map of request {@code headers}._@param headers the headers to post-process;protected void postProcessRequestHeaders(Map<String, List<String>> headers) {__	};post,process,the,given,mutable,map,of,request,code,headers,param,headers,the,headers,to,post,process;protected,void,post,process,request,headers,map,string,list,string,headers
HttpExchangeTracer -> protected void postProcessRequestHeaders(Map<String, List<String>> headers);1532852936;Post-process the given mutable map of request {@code headers}._@param headers the headers to post-process;protected void postProcessRequestHeaders(Map<String, List<String>> headers) {__	};post,process,the,given,mutable,map,of,request,code,headers,param,headers,the,headers,to,post,process;protected,void,post,process,request,headers,map,string,list,string,headers
HttpExchangeTracer -> protected void postProcessRequestHeaders(Map<String, List<String>> headers);1533573354;Post-process the given mutable map of request {@code headers}._@param headers the headers to post-process;protected void postProcessRequestHeaders(Map<String, List<String>> headers) {__	};post,process,the,given,mutable,map,of,request,code,headers,param,headers,the,headers,to,post,process;protected,void,post,process,request,headers,map,string,list,string,headers
