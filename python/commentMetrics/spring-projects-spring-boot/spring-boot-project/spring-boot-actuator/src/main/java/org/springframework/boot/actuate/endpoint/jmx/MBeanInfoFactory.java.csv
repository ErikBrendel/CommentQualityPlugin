commented;modifiers;parameterAmount;loc;comment;code
false;public;1;7;;public MBeanInfo getMBeanInfo(ExposableJmxEndpoint endpoint) {     String className = EndpointMBean.class.getName().     String description = getDescription(endpoint).     ModelMBeanOperationInfo[] operations = getMBeanOperations(endpoint).     return new ModelMBeanInfoSupport(className, description, NO_ATTRIBUTES, NO_CONSTRUCTORS, operations, NO_NOTIFICATIONS). }
false;private;1;3;;private String getDescription(ExposableJmxEndpoint endpoint) {     return "MBean operations for endpoint " + endpoint.getEndpointId(). }
false;private;1;4;;private ModelMBeanOperationInfo[] getMBeanOperations(ExposableJmxEndpoint endpoint) {     return endpoint.getOperations().stream().map(this::getMBeanOperation).toArray(ModelMBeanOperationInfo[]::new). }
false;private;1;8;;private ModelMBeanOperationInfo getMBeanOperation(JmxOperation operation) {     String name = operation.getName().     String description = operation.getDescription().     MBeanParameterInfo[] signature = getSignature(operation.getParameters()).     String type = getType(operation.getOutputType()).     int impact = getImpact(operation.getType()).     return new ModelMBeanOperationInfo(name, description, signature, type, impact). }
false;private;1;4;;private MBeanParameterInfo[] getSignature(List<JmxOperationParameter> parameters) {     return parameters.stream().map(this::getMBeanParameter).toArray(MBeanParameterInfo[]::new). }
false;private;1;4;;private MBeanParameterInfo getMBeanParameter(JmxOperationParameter parameter) {     return new MBeanParameterInfo(parameter.getName(), parameter.getType().getName(), parameter.getDescription()). }
false;private;1;10;;private int getImpact(OperationType operationType) {     if (operationType == OperationType.READ) {         return MBeanOperationInfo.INFO.     }     if (operationType == OperationType.WRITE || operationType == OperationType.DELETE) {         return MBeanOperationInfo.ACTION.     }     return MBeanOperationInfo.UNKNOWN. }
false;private;1;3;;private String getType(Class<?> outputType) {     return this.responseMapper.mapResponseType(outputType).getName(). }
