commented;modifiers;parameterAmount;loc;comment;code
true;;2;1;/**  * Registers the given {@link ReactiveHealthIndicator}, associating it with the given  * {@code name}.  * @param name the name of the indicator  * @param healthIndicator the indicator  * @throws IllegalStateException if an indicator with the given {@code name} is  * already registered.  */ ;/**  * Registers the given {@link ReactiveHealthIndicator}, associating it with the given  * {@code name}.  * @param name the name of the indicator  * @param healthIndicator the indicator  * @throws IllegalStateException if an indicator with the given {@code name} is  * already registered.  */ void register(String name, ReactiveHealthIndicator healthIndicator).
true;;1;1;/**  * Unregisters the {@link ReactiveHealthIndicator} previously registered with the  * given {@code name}.  * @param name the name of the indicator  * @return the unregistered indicator, or {@code null} if no indicator was found in  * the registry for the given {@code name}.  */ ;/**  * Unregisters the {@link ReactiveHealthIndicator} previously registered with the  * given {@code name}.  * @param name the name of the indicator  * @return the unregistered indicator, or {@code null} if no indicator was found in  * the registry for the given {@code name}.  */ ReactiveHealthIndicator unregister(String name).
true;;1;1;/**  * Returns the {@link ReactiveHealthIndicator} registered with the given {@code name}.  * @param name the name of the indicator  * @return the health indicator, or {@code null} if no indicator was registered with  * the given {@code name}.  */ ;/**  * Returns the {@link ReactiveHealthIndicator} registered with the given {@code name}.  * @param name the name of the indicator  * @return the health indicator, or {@code null} if no indicator was registered with  * the given {@code name}.  */ ReactiveHealthIndicator get(String name).
true;;0;1;/**  * Returns a snapshot of the registered health indicators and their names. The  * contents of the map do not reflect subsequent changes to the registry.  * @return the snapshot of registered health indicators  */ ;/**  * Returns a snapshot of the registered health indicators and their names. The  * contents of the map do not reflect subsequent changes to the registry.  * @return the snapshot of registered health indicators  */ Map<String, ReactiveHealthIndicator> getAll().
