commented;modifiers;parameterAmount;loc;comment;code
false;public;1;4;;@Override public void contribute(Info.Builder builder) {     builder.withDetail("git", generateContent()). }
false;protected;0;11;;@Override protected PropertySource<?> toSimplePropertySource() {     Properties props = new Properties().     copyIfSet(props, "branch").     String commitId = getProperties().getShortCommitId().     if (commitId != null) {         props.put("commit.id", commitId).     }     copyIfSet(props, "commit.time").     return new PropertiesPropertySource("git", props). }
true;protected;1;7;/**  * Post-process the content to expose. By default, well known keys representing dates  * are converted to {@link Instant} instances.  * @param content the content to expose  */ ;/**  * Post-process the content to expose. By default, well known keys representing dates  * are converted to {@link Instant} instances.  * @param content the content to expose  */ @Override protected void postProcessContent(Map<String, Object> content) {     replaceValue(getNestedMap(content, "commit"), "time", getProperties().getCommitTime()).     replaceValue(getNestedMap(content, "build"), "time", getProperties().getInstant("build.time")). }
