commented;modifiers;parameterAmount;loc;comment;code
false;public;0;5;;@Before public void setUp() throws IOException {     this.logFile = this.temp.newFile().     FileCopyUtils.copy("--TEST--".getBytes(), this.logFile). }
false;public;0;4;;@Test public void getRequestProduces404ResponseWhenLogFileNotFound() {     client.get().uri("/actuator/logfile").exchange().expectStatus().isNotFound(). }
false;public;0;7;;@Test public void getRequestProducesResponseWithLogFile() {     TestPropertyValues.of("logging.file.name:" + this.logFile.getAbsolutePath()).applyTo(context).     client.get().uri("/actuator/logfile").exchange().expectStatus().isOk().expectBody(String.class).isEqualTo("--TEST--"). }
false;public;1;4;;@Bean public LogFileWebEndpoint logFileEndpoint(Environment environment) {     return new LogFileWebEndpoint(environment). }
