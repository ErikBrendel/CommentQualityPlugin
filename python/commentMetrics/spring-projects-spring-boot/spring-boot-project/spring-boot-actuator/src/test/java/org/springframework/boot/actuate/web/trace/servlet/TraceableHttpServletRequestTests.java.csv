commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Before public void setup() {     this.request = new MockHttpServletRequest("GET", "/script"). }
false;public;0;4;;@Test public void getUriWithoutQueryStringShouldReturnUri() {     validate("http://localhost/script"). }
false;public;0;5;;@Test public void getUriShouldReturnUriWithQueryString() {     this.request.setQueryString("a=b").     validate("http://localhost/script?a=b"). }
false;public;0;5;;@Test public void getUriWithSpecialCharactersInQueryStringShouldEncode() {     this.request.setQueryString("a=${b}").     validate("http://localhost/script?a=$%7Bb%7D"). }
false;public;0;5;;@Test public void getUriWithSpecialCharactersEncodedShouldNotDoubleEncode() {     this.request.setQueryString("a=$%7Bb%7D").     validate("http://localhost/script?a=$%7Bb%7D"). }
false;private;1;4;;private void validate(String expectedUri) {     TraceableHttpServletRequest trace = new TraceableHttpServletRequest(this.request).     assertThat(trace.getUri().toString()).isEqualTo(expectedUri). }
