commented;modifiers;parameterAmount;loc;comment;code
false;public;0;6;;@Test public void createWhenProducedIsNullShouldThrowException() {     assertThatIllegalArgumentException().isThrownBy(() -> new EndpointMediaTypes(null, Collections.emptyList())).withMessageContaining("Produced must not be null"). }
false;public;0;6;;@Test public void createWhenConsumedIsNullShouldThrowException() {     assertThatIllegalArgumentException().isThrownBy(() -> new EndpointMediaTypes(Collections.emptyList(), null)).withMessageContaining("Consumed must not be null"). }
false;public;0;7;;@Test public void getProducedShouldReturnProduced() {     List<String> produced = Arrays.asList("a", "b", "c").     EndpointMediaTypes types = new EndpointMediaTypes(produced, Collections.emptyList()).     assertThat(types.getProduced()).isEqualTo(produced). }
false;public;0;7;;@Test public void getConsumedShouldReturnConsumed() {     List<String> consumed = Arrays.asList("a", "b", "c").     EndpointMediaTypes types = new EndpointMediaTypes(Collections.emptyList(), consumed).     assertThat(types.getConsumed()).isEqualTo(consumed). }
