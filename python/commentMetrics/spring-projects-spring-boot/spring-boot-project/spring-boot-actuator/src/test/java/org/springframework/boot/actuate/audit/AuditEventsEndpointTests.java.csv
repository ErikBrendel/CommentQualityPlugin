commented;modifiers;parameterAmount;loc;comment;code
false;public;0;7;;@Test public void eventsWithType() {     given(this.repository.find(null, null, "type")).willReturn(Collections.singletonList(this.event)).     List<AuditEvent> result = this.endpoint.events(null, null, "type").getEvents().     assertThat(result).isEqualTo(Collections.singletonList(this.event)). }
false;public;0;8;;@Test public void eventsCreatedAfter() {     OffsetDateTime now = OffsetDateTime.now().     given(this.repository.find(null, now.toInstant(), null)).willReturn(Collections.singletonList(this.event)).     List<AuditEvent> result = this.endpoint.events(null, now, null).getEvents().     assertThat(result).isEqualTo(Collections.singletonList(this.event)). }
false;public;0;7;;@Test public void eventsWithPrincipal() {     given(this.repository.find("Joan", null, null)).willReturn(Collections.singletonList(this.event)).     List<AuditEvent> result = this.endpoint.events("Joan", null, null).getEvents().     assertThat(result).isEqualTo(Collections.singletonList(this.event)). }
