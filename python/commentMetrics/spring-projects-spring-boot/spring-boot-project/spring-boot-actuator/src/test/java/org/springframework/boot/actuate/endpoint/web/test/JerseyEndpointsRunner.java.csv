commented;modifiers;parameterAmount;loc;comment;code
false;private,static;1;7;;private static ConfigurableApplicationContext createContext(List<Class<?>> classes) {     AnnotationConfigServletWebServerApplicationContext context = new AnnotationConfigServletWebServerApplicationContext().     classes.add(JerseyEndpointConfiguration.class).     context.register(ClassUtils.toClassArray(classes)).     context.refresh().     return context. }
false;public;0;4;;@Bean public TomcatServletWebServerFactory tomcat() {     return new TomcatServletWebServerFactory(0). }
false;public;0;4;;@Bean public ResourceConfig resourceConfig() {     return new ResourceConfig(). }
false;public;0;4;;@Bean public ResourceConfigCustomizer webEndpointRegistrar() {     return this::customize. }
false;private;1;15;;private void customize(ResourceConfig config) {     List<String> mediaTypes = Arrays.asList(MediaType.APPLICATION_JSON, ActuatorMediaType.V2_JSON).     EndpointMediaTypes endpointMediaTypes = new EndpointMediaTypes(mediaTypes, mediaTypes).     WebEndpointDiscoverer discoverer = new WebEndpointDiscoverer(this.applicationContext, new ConversionServiceParameterValueMapper(), endpointMediaTypes, null, Collections.emptyList(), Collections.emptyList()).     Collection<Resource> resources = new JerseyEndpointResourceFactory().createEndpointResources(new EndpointMapping("/actuator"), discoverer.getEndpoints(), endpointMediaTypes, new EndpointLinksResolver(discoverer.getEndpoints())).     config.registerResources(new HashSet<>(resources)). }
