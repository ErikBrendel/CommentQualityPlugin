commented;modifiers;parameterAmount;loc;comment;code
false;public;0;5;;@Test public void createWhenCassandraOperationsIsNullShouldThrowException() {     assertThatIllegalArgumentException().isThrownBy(() -> new CassandraHealthIndicator(null)). }
false;public;0;13;;@Test public void verifyHealthStatusWhenExhausted() {     CassandraOperations cassandraOperations = mock(CassandraOperations.class).     CqlOperations cqlOperations = mock(CqlOperations.class).     ResultSet resultSet = mock(ResultSet.class).     CassandraHealthIndicator healthIndicator = new CassandraHealthIndicator(cassandraOperations).     given(cassandraOperations.getCqlOperations()).willReturn(cqlOperations).     given(cqlOperations.queryForResultSet(any(Select.class))).willReturn(resultSet).     given(resultSet.isExhausted()).willReturn(true).     Health health = healthIndicator.health().     assertThat(health.getStatus()).isEqualTo(Status.UP). }
false;public;0;18;;@Test public void verifyHealthStatusWithVersion() {     CassandraOperations cassandraOperations = mock(CassandraOperations.class).     CqlOperations cqlOperations = mock(CqlOperations.class).     ResultSet resultSet = mock(ResultSet.class).     Row row = mock(Row.class).     CassandraHealthIndicator healthIndicator = new CassandraHealthIndicator(cassandraOperations).     given(cassandraOperations.getCqlOperations()).willReturn(cqlOperations).     given(cqlOperations.queryForResultSet(any(Select.class))).willReturn(resultSet).     given(resultSet.isExhausted()).willReturn(false).     given(resultSet.one()).willReturn(row).     String expectedVersion = "1.0.0".     given(row.getString(0)).willReturn(expectedVersion).     Health health = healthIndicator.health().     assertThat(health.getStatus()).isEqualTo(Status.UP).     assertThat(health.getDetails().get("version")).isEqualTo(expectedVersion). }
