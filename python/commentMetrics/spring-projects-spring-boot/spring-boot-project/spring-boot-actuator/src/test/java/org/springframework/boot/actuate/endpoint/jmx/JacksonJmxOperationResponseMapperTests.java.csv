commented;modifiers;parameterAmount;loc;comment;code
false;public;0;7;;@Test public void createWhenObjectMapperIsNullShouldUseDefaultObjectMapper() {     JacksonJmxOperationResponseMapper mapper = new JacksonJmxOperationResponseMapper(null).     Object mapped = mapper.mapResponse(Collections.singleton("test")).     assertThat(this.json.from(mapped.toString())).isEqualToJson("[test]"). }
false;public;0;9;;@Test public void createWhenObjectMapperIsSpecifiedShouldUseObjectMapper() {     ObjectMapper objectMapper = spy(ObjectMapper.class).     JacksonJmxOperationResponseMapper mapper = new JacksonJmxOperationResponseMapper(objectMapper).     Set<String> response = Collections.singleton("test").     mapper.mapResponse(response).     verify(objectMapper).convertValue(eq(response), any(JavaType.class)). }
false;public;0;6;;@Test public void mapResponseTypeWhenCharSequenceShouldReturnString() {     assertThat(this.mapper.mapResponseType(String.class)).isEqualTo(String.class).     assertThat(this.mapper.mapResponseType(StringBuilder.class)).isEqualTo(String.class). }
false;public;0;5;;@Test public void mapResponseTypeWhenArrayShouldReturnList() {     assertThat(this.mapper.mapResponseType(String[].class)).isEqualTo(List.class).     assertThat(this.mapper.mapResponseType(Object[].class)).isEqualTo(List.class). }
false;public;0;6;;@Test public void mapResponseTypeWhenCollectionShouldReturnList() {     assertThat(this.mapper.mapResponseType(Collection.class)).isEqualTo(List.class).     assertThat(this.mapper.mapResponseType(Set.class)).isEqualTo(List.class).     assertThat(this.mapper.mapResponseType(List.class)).isEqualTo(List.class). }
false;public;0;4;;@Test public void mapResponseTypeWhenOtherShouldReturnMap() {     assertThat(this.mapper.mapResponseType(ExampleBean.class)).isEqualTo(Map.class). }
false;public;0;4;;@Test public void mapResponseWhenNullShouldReturnNull() {     assertThat(this.mapper.mapResponse(null)).isNull(). }
false;public;0;4;;@Test public void mapResponseWhenCharSequenceShouldReturnString() {     assertThat(this.mapper.mapResponse(new StringBuilder("test"))).isEqualTo("test"). }
false;public;0;5;;@Test public void mapResponseWhenArrayShouldReturnJsonArray() {     Object mapped = this.mapper.mapResponse(new int[] { 1, 2, 3 }).     assertThat(this.json.from(mapped.toString())).isEqualToJson("[1,2,3]"). }
false;public;0;5;;@Test public void mapResponseWhenCollectionShouldReturnJsonArray() {     Object mapped = this.mapper.mapResponse(Arrays.asList("a", "b", "c")).     assertThat(this.json.from(mapped.toString())).isEqualToJson("[a,b,c]"). }
false;public;0;7;;@Test public void mapResponseWhenOtherShouldReturnMap() {     ExampleBean bean = new ExampleBean().     bean.setName("boot").     Object mapped = this.mapper.mapResponse(bean).     assertThat(this.json.from(mapped.toString())).isEqualToJson("{'name':'boot'}"). }
false;public;0;3;;public String getName() {     return this.name. }
false;public;1;3;;public void setName(String name) {     this.name = name. }
