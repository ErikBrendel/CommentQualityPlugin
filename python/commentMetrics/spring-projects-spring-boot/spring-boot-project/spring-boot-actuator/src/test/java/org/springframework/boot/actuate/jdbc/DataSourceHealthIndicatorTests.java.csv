commented;modifiers;parameterAmount;loc;comment;code
false;public;0;7;;@Before public void init() {     EmbeddedDatabaseConnection db = EmbeddedDatabaseConnection.HSQL.     this.dataSource = new SingleConnectionDataSource(db.getUrl("testdb") + ".shutdown=true", "sa", "", false).     this.dataSource.setDriverClassName(db.getDriverClassName()). }
false;public;0;6;;@After public void close() {     if (this.dataSource != null) {         this.dataSource.destroy().     } }
false;public;0;9;;@Test public void healthIndicatorWithDefaultSettings() {     this.indicator.setDataSource(this.dataSource).     Health health = this.indicator.health().     assertThat(health.getStatus()).isEqualTo(Status.UP).     assertThat(health.getDetails()).containsOnly(entry("database", "HSQL Database Engine"), entry("result", 1L), entry("validationQuery", DatabaseDriver.HSQLDB.getValidationQuery())). }
false;public;0;13;;@Test public void healthIndicatorWithCustomValidationQuery() {     String customValidationQuery = "SELECT COUNT(*) from FOO".     new JdbcTemplate(this.dataSource).execute("CREATE TABLE FOO (id INTEGER IDENTITY PRIMARY KEY)").     this.indicator.setDataSource(this.dataSource).     this.indicator.setQuery(customValidationQuery).     Health health = this.indicator.health().     assertThat(health.getStatus()).isEqualTo(Status.UP).     assertThat(health.getDetails()).containsOnly(entry("database", "HSQL Database Engine"), entry("result", 0L), entry("validationQuery", customValidationQuery)). }
false;public;0;13;;@Test public void healthIndicatorWithInvalidValidationQuery() {     String invalidValidationQuery = "SELECT COUNT(*) from BAR".     this.indicator.setDataSource(this.dataSource).     this.indicator.setQuery(invalidValidationQuery).     Health health = this.indicator.health().     assertThat(health.getStatus()).isEqualTo(Status.DOWN).     assertThat(health.getDetails()).contains(entry("database", "HSQL Database Engine"), entry("validationQuery", invalidValidationQuery)).     assertThat(health.getDetails()).containsOnlyKeys("database", "error", "validationQuery"). }
false;public;0;12;;@Test public void healthIndicatorCloseConnection() throws Exception {     DataSource dataSource = mock(DataSource.class).     Connection connection = mock(Connection.class).     given(connection.getMetaData()).willReturn(this.dataSource.getConnection().getMetaData()).     given(dataSource.getConnection()).willReturn(connection).     this.indicator.setDataSource(dataSource).     Health health = this.indicator.health().     assertThat(health.getDetails().get("database")).isNotNull().     verify(connection, times(2)).close(). }
