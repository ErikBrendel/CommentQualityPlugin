commented;modifiers;parameterAmount;loc;comment;code
false;public;0;5;;@Test public void outcomeTagIsUnknownWhenResponseIsNull() {     Tag tag = RestTemplateExchangeTags.outcome(null).     assertThat(tag.getValue()).isEqualTo("UNKNOWN"). }
false;public;0;7;;@Test public void outcomeTagIsInformationalWhenResponseIs1xx() {     ClientHttpResponse response = new MockClientHttpResponse("foo".getBytes(), HttpStatus.CONTINUE).     Tag tag = RestTemplateExchangeTags.outcome(response).     assertThat(tag.getValue()).isEqualTo("INFORMATIONAL"). }
false;public;0;7;;@Test public void outcomeTagIsSuccessWhenResponseIs2xx() {     ClientHttpResponse response = new MockClientHttpResponse("foo".getBytes(), HttpStatus.OK).     Tag tag = RestTemplateExchangeTags.outcome(response).     assertThat(tag.getValue()).isEqualTo("SUCCESS"). }
false;public;0;7;;@Test public void outcomeTagIsRedirectionWhenResponseIs3xx() {     ClientHttpResponse response = new MockClientHttpResponse("foo".getBytes(), HttpStatus.MOVED_PERMANENTLY).     Tag tag = RestTemplateExchangeTags.outcome(response).     assertThat(tag.getValue()).isEqualTo("REDIRECTION"). }
false;public;0;7;;@Test public void outcomeTagIsClientErrorWhenResponseIs4xx() {     ClientHttpResponse response = new MockClientHttpResponse("foo".getBytes(), HttpStatus.BAD_REQUEST).     Tag tag = RestTemplateExchangeTags.outcome(response).     assertThat(tag.getValue()).isEqualTo("CLIENT_ERROR"). }
false;public;0;7;;@Test public void outcomeTagIsServerErrorWhenResponseIs5xx() {     ClientHttpResponse response = new MockClientHttpResponse("foo".getBytes(), HttpStatus.BAD_GATEWAY).     Tag tag = RestTemplateExchangeTags.outcome(response).     assertThat(tag.getValue()).isEqualTo("SERVER_ERROR"). }
false;public;0;7;;@Test public void outcomeTagIsUnknownWhenResponseThrowsIOException() throws Exception {     ClientHttpResponse response = mock(ClientHttpResponse.class).     given(response.getStatusCode()).willThrow(IOException.class).     Tag tag = RestTemplateExchangeTags.outcome(response).     assertThat(tag.getValue()).isEqualTo("UNKNOWN"). }
false;public;0;7;;@Test public void outcomeTagIsUnknownForCustomResponseStatus() throws Exception {     ClientHttpResponse response = mock(ClientHttpResponse.class).     given(response.getStatusCode()).willThrow(IllegalArgumentException.class).     Tag tag = RestTemplateExchangeTags.outcome(response).     assertThat(tag.getValue()).isEqualTo("UNKNOWN"). }
