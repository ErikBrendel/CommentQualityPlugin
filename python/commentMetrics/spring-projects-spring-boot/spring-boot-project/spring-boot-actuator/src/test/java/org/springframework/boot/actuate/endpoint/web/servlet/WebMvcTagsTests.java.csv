commented;modifiers;parameterAmount;loc;comment;code
false;public;0;10;;@Test public void uriTagIsDataRestsEffectiveRepositoryLookupPathWhenAvailable() {     this.request.setAttribute("org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping.EFFECTIVE_REPOSITORY_RESOURCE_LOOKUP_PATH", new PathPatternParser().parse("/api/cities")).     this.request.setAttribute(HandlerMapping.BEST_MATCHING_PATTERN_ATTRIBUTE, "/api/{repository}").     Tag tag = WebMvcTags.uri(this.request, this.response).     assertThat(tag.getValue()).isEqualTo("/api/cities"). }
false;public;0;8;;@Test public void uriTagValueIsBestMatchingPatternWhenAvailable() {     this.request.setAttribute(HandlerMapping.BEST_MATCHING_PATTERN_ATTRIBUTE, "/spring").     this.response.setStatus(301).     Tag tag = WebMvcTags.uri(this.request, this.response).     assertThat(tag.getValue()).isEqualTo("/spring"). }
false;public;0;4;;@Test public void uriTagValueIsRootWhenRequestHasNoPatternOrPathInfo() {     assertThat(WebMvcTags.uri(this.request, null).getValue()).isEqualTo("root"). }
false;public;0;5;;@Test public void uriTagValueIsRootWhenRequestHasNoPatternAndSlashPathInfo() {     this.request.setPathInfo("/").     assertThat(WebMvcTags.uri(this.request, null).getValue()).isEqualTo("root"). }
false;public;0;5;;@Test public void uriTagValueIsUnknownWhenRequestHasNoPatternAndNonRootPathInfo() {     this.request.setPathInfo("/example").     assertThat(WebMvcTags.uri(this.request, null).getValue()).isEqualTo("UNKNOWN"). }
false;public;0;6;;@Test public void uriTagValueIsRedirectionWhenResponseStatusIs3xx() {     this.response.setStatus(301).     Tag tag = WebMvcTags.uri(this.request, this.response).     assertThat(tag.getValue()).isEqualTo("REDIRECTION"). }
false;public;0;6;;@Test public void uriTagValueIsNotFoundWhenResponseStatusIs404() {     this.response.setStatus(404).     Tag tag = WebMvcTags.uri(this.request, this.response).     assertThat(tag.getValue()).isEqualTo("NOT_FOUND"). }
false;public;0;6;;@Test public void uriTagToleratesCustomResponseStatus() {     this.response.setStatus(601).     Tag tag = WebMvcTags.uri(this.request, this.response).     assertThat(tag.getValue()).isEqualTo("root"). }
false;public;0;5;;@Test public void uriTagIsUnknownWhenRequestIsNull() {     Tag tag = WebMvcTags.uri(null, null).     assertThat(tag.getValue()).isEqualTo("UNKNOWN"). }
false;public;0;5;;@Test public void outcomeTagIsUnknownWhenResponseIsNull() {     Tag tag = WebMvcTags.outcome(null).     assertThat(tag.getValue()).isEqualTo("UNKNOWN"). }
false;public;0;6;;@Test public void outcomeTagIsInformationalWhenResponseIs1xx() {     this.response.setStatus(100).     Tag tag = WebMvcTags.outcome(this.response).     assertThat(tag.getValue()).isEqualTo("INFORMATIONAL"). }
false;public;0;6;;@Test public void outcomeTagIsSuccessWhenResponseIs2xx() {     this.response.setStatus(200).     Tag tag = WebMvcTags.outcome(this.response).     assertThat(tag.getValue()).isEqualTo("SUCCESS"). }
false;public;0;6;;@Test public void outcomeTagIsRedirectionWhenResponseIs3xx() {     this.response.setStatus(301).     Tag tag = WebMvcTags.outcome(this.response).     assertThat(tag.getValue()).isEqualTo("REDIRECTION"). }
false;public;0;6;;@Test public void outcomeTagIsClientErrorWhenResponseIs4xx() {     this.response.setStatus(400).     Tag tag = WebMvcTags.outcome(this.response).     assertThat(tag.getValue()).isEqualTo("CLIENT_ERROR"). }
false;public;0;6;;@Test public void outcomeTagIsServerErrorWhenResponseIs5xx() {     this.response.setStatus(500).     Tag tag = WebMvcTags.outcome(this.response).     assertThat(tag.getValue()).isEqualTo("SERVER_ERROR"). }
