commented;modifiers;parameterAmount;loc;comment;code
false;public;0;6;;@Test public void createWhenEnvironmentIsNullWillThrowException() {     assertThatIllegalArgumentException().isThrownBy(() -> new LocalHostWebClient(null)).withMessageContaining("Environment must not be null"). }
false;public;0;11;;@Test public void getPageWhenUrlIsRelativeAndNoPortWillUseLocalhost8080() throws Exception {     MockEnvironment environment = new MockEnvironment().     WebClient client = new LocalHostWebClient(environment).     WebConnection connection = mockConnection().     client.setWebConnection(connection).     client.getPage("/test").     verify(connection).getResponse(this.requestCaptor.capture()).     assertThat(this.requestCaptor.getValue().getUrl()).isEqualTo(new URL("http://localhost:8080/test")). }
false;public;0;13;;@Test public void getPageWhenUrlIsRelativeAndHasPortWillUseLocalhostPort() throws Exception {     MockEnvironment environment = new MockEnvironment().     environment.setProperty("local.server.port", "8181").     WebClient client = new LocalHostWebClient(environment).     WebConnection connection = mockConnection().     client.setWebConnection(connection).     client.getPage("/test").     verify(connection).getResponse(this.requestCaptor.capture()).     assertThat(this.requestCaptor.getValue().getUrl()).isEqualTo(new URL("http://localhost:8181/test")). }
false;private;0;6;;private WebConnection mockConnection() throws IOException {     WebConnection connection = mock(WebConnection.class).     WebResponse response = new StringWebResponse("test", new URL("http://localhost")).     given(connection.getResponse(any())).willReturn(response).     return connection. }
