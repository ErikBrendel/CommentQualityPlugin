# id;timestamp;commentText;codeText;commentWords;codeWords
TestPropertyValues -> public <T> T applyToSystemProperties(Callable<T> call);1507173536;Add the properties to the {@link System#getProperties() system properties} for the_duration of the {@code call}, restoring previous values when the call completes._@param <T> the result type_@param call the call to make_@return the result of the call;public <T> T applyToSystemProperties(Callable<T> call) {_		try (SystemPropertiesHandler handler = new SystemPropertiesHandler()) {_			return call.call()__		}_		catch (Exception ex) {_			rethrow(ex)__			throw new IllegalStateException("Original cause not rethrown", ex)__		}_	};add,the,properties,to,the,link,system,get,properties,system,properties,for,the,duration,of,the,code,call,restoring,previous,values,when,the,call,completes,param,t,the,result,type,param,call,the,call,to,make,return,the,result,of,the,call;public,t,t,apply,to,system,properties,callable,t,call,try,system,properties,handler,handler,new,system,properties,handler,return,call,call,catch,exception,ex,rethrow,ex,throw,new,illegal,state,exception,original,cause,not,rethrown,ex
TestPropertyValues -> public <T> T applyToSystemProperties(Callable<T> call);1510002745;Add the properties to the {@link System#getProperties() system properties} for the_duration of the {@code call}, restoring previous values when the call completes._@param <T> the result type_@param call the call to make_@return the result of the call;public <T> T applyToSystemProperties(Callable<T> call) {_		try (SystemPropertiesHandler handler = new SystemPropertiesHandler()) {_			return call.call()__		}_		catch (Exception ex) {_			rethrow(ex)__			throw new IllegalStateException("Original cause not rethrown", ex)__		}_	};add,the,properties,to,the,link,system,get,properties,system,properties,for,the,duration,of,the,code,call,restoring,previous,values,when,the,call,completes,param,t,the,result,type,param,call,the,call,to,make,return,the,result,of,the,call;public,t,t,apply,to,system,properties,callable,t,call,try,system,properties,handler,handler,new,system,properties,handler,return,call,call,catch,exception,ex,rethrow,ex,throw,new,illegal,state,exception,original,cause,not,rethrown,ex
TestPropertyValues -> public <T> T applyToSystemProperties(Callable<T> call);1511779517;Add the properties to the {@link System#getProperties() system properties} for the_duration of the {@code call}, restoring previous values when the call completes._@param <T> the result type_@param call the call to make_@return the result of the call;public <T> T applyToSystemProperties(Callable<T> call) {_		try (SystemPropertiesHandler handler = new SystemPropertiesHandler()) {_			return call.call()__		}_		catch (Exception ex) {_			rethrow(ex)__			throw new IllegalStateException("Original cause not rethrown", ex)__		}_	};add,the,properties,to,the,link,system,get,properties,system,properties,for,the,duration,of,the,code,call,restoring,previous,values,when,the,call,completes,param,t,the,result,type,param,call,the,call,to,make,return,the,result,of,the,call;public,t,t,apply,to,system,properties,callable,t,call,try,system,properties,handler,handler,new,system,properties,handler,return,call,call,catch,exception,ex,rethrow,ex,throw,new,illegal,state,exception,original,cause,not,rethrown,ex
TestPropertyValues -> public <T> T applyToSystemProperties(Callable<T> call);1515486892;Add the properties to the {@link System#getProperties() system properties} for the_duration of the {@code call}, restoring previous values when the call completes._@param <T> the result type_@param call the call to make_@return the result of the call;public <T> T applyToSystemProperties(Callable<T> call) {_		try (SystemPropertiesHandler handler = new SystemPropertiesHandler()) {_			return call.call()__		}_		catch (Exception ex) {_			rethrow(ex)__			throw new IllegalStateException("Original cause not rethrown", ex)__		}_	};add,the,properties,to,the,link,system,get,properties,system,properties,for,the,duration,of,the,code,call,restoring,previous,values,when,the,call,completes,param,t,the,result,type,param,call,the,call,to,make,return,the,result,of,the,call;public,t,t,apply,to,system,properties,callable,t,call,try,system,properties,handler,handler,new,system,properties,handler,return,call,call,catch,exception,ex,rethrow,ex,throw,new,illegal,state,exception,original,cause,not,rethrown,ex
TestPropertyValues -> public <T> T applyToSystemProperties(Callable<T> call);1516667888;Add the properties to the {@link System#getProperties() system properties} for the_duration of the {@code call}, restoring previous values when the call completes._@param <T> the result type_@param call the call to make_@return the result of the call;public <T> T applyToSystemProperties(Callable<T> call) {_		try (SystemPropertiesHandler handler = new SystemPropertiesHandler()) {_			return call.call()__		}_		catch (Exception ex) {_			rethrow(ex)__			throw new IllegalStateException("Original cause not rethrown", ex)__		}_	};add,the,properties,to,the,link,system,get,properties,system,properties,for,the,duration,of,the,code,call,restoring,previous,values,when,the,call,completes,param,t,the,result,type,param,call,the,call,to,make,return,the,result,of,the,call;public,t,t,apply,to,system,properties,callable,t,call,try,system,properties,handler,handler,new,system,properties,handler,return,call,call,catch,exception,ex,rethrow,ex,throw,new,illegal,state,exception,original,cause,not,rethrown,ex
TestPropertyValues -> public <T> T applyToSystemProperties(Callable<T> call);1525416882;Add the properties to the {@link System#getProperties() system properties} for the_duration of the {@code call}, restoring previous values when the call completes._@param <T> the result type_@param call the call to make_@return the result of the call;public <T> T applyToSystemProperties(Callable<T> call) {_		try (SystemPropertiesHandler handler = new SystemPropertiesHandler()) {_			return call.call()__		}_		catch (Exception ex) {_			rethrow(ex)__			throw new IllegalStateException("Original cause not rethrown", ex)__		}_	};add,the,properties,to,the,link,system,get,properties,system,properties,for,the,duration,of,the,code,call,restoring,previous,values,when,the,call,completes,param,t,the,result,type,param,call,the,call,to,make,return,the,result,of,the,call;public,t,t,apply,to,system,properties,callable,t,call,try,system,properties,handler,handler,new,system,properties,handler,return,call,call,catch,exception,ex,rethrow,ex,throw,new,illegal,state,exception,original,cause,not,rethrown,ex
TestPropertyValues -> public <T> T applyToSystemProperties(Callable<T> call);1532738143;Add the properties to the {@link System#getProperties() system properties} for the_duration of the {@code call}, restoring previous values when the call completes._@param <T> the result type_@param call the call to make_@return the result of the call;public <T> T applyToSystemProperties(Callable<T> call) {_		try (SystemPropertiesHandler handler = new SystemPropertiesHandler()) {_			return call.call()__		}_		catch (Exception ex) {_			rethrow(ex)__			throw new IllegalStateException("Original cause not rethrown", ex)__		}_	};add,the,properties,to,the,link,system,get,properties,system,properties,for,the,duration,of,the,code,call,restoring,previous,values,when,the,call,completes,param,t,the,result,type,param,call,the,call,to,make,return,the,result,of,the,call;public,t,t,apply,to,system,properties,callable,t,call,try,system,properties,handler,handler,new,system,properties,handler,return,call,call,catch,exception,ex,rethrow,ex,throw,new,illegal,state,exception,original,cause,not,rethrown,ex
TestPropertyValues -> public void applyTo(ConfigurableApplicationContext context);1507173536;Add the properties from the underlying map to the environment owned by an_{@link ApplicationContext}._@param context the context with an environment to modify;public void applyTo(ConfigurableApplicationContext context) {_		applyTo(context.getEnvironment())__	};add,the,properties,from,the,underlying,map,to,the,environment,owned,by,an,link,application,context,param,context,the,context,with,an,environment,to,modify;public,void,apply,to,configurable,application,context,context,apply,to,context,get,environment
TestPropertyValues -> public void applyTo(ConfigurableApplicationContext context);1510002745;Add the properties from the underlying map to the environment owned by an_{@link ApplicationContext}._@param context the context with an environment to modify;public void applyTo(ConfigurableApplicationContext context) {_		applyTo(context.getEnvironment())__	};add,the,properties,from,the,underlying,map,to,the,environment,owned,by,an,link,application,context,param,context,the,context,with,an,environment,to,modify;public,void,apply,to,configurable,application,context,context,apply,to,context,get,environment
TestPropertyValues -> public void applyTo(ConfigurableApplicationContext context);1511779517;Add the properties from the underlying map to the environment owned by an_{@link ApplicationContext}._@param context the context with an environment to modify;public void applyTo(ConfigurableApplicationContext context) {_		applyTo(context.getEnvironment())__	};add,the,properties,from,the,underlying,map,to,the,environment,owned,by,an,link,application,context,param,context,the,context,with,an,environment,to,modify;public,void,apply,to,configurable,application,context,context,apply,to,context,get,environment
TestPropertyValues -> public void applyTo(ConfigurableApplicationContext context);1515486892;Add the properties from the underlying map to the environment owned by an_{@link ApplicationContext}._@param context the context with an environment to modify;public void applyTo(ConfigurableApplicationContext context) {_		applyTo(context.getEnvironment())__	};add,the,properties,from,the,underlying,map,to,the,environment,owned,by,an,link,application,context,param,context,the,context,with,an,environment,to,modify;public,void,apply,to,configurable,application,context,context,apply,to,context,get,environment
TestPropertyValues -> public void applyTo(ConfigurableApplicationContext context);1516667888;Add the properties from the underlying map to the environment owned by an_{@link ApplicationContext}._@param context the context with an environment to modify;public void applyTo(ConfigurableApplicationContext context) {_		applyTo(context.getEnvironment())__	};add,the,properties,from,the,underlying,map,to,the,environment,owned,by,an,link,application,context,param,context,the,context,with,an,environment,to,modify;public,void,apply,to,configurable,application,context,context,apply,to,context,get,environment
TestPropertyValues -> public void applyTo(ConfigurableApplicationContext context);1525416882;Add the properties from the underlying map to the environment owned by an_{@link ApplicationContext}._@param context the context with an environment to modify;public void applyTo(ConfigurableApplicationContext context) {_		applyTo(context.getEnvironment())__	};add,the,properties,from,the,underlying,map,to,the,environment,owned,by,an,link,application,context,param,context,the,context,with,an,environment,to,modify;public,void,apply,to,configurable,application,context,context,apply,to,context,get,environment
TestPropertyValues -> public void applyTo(ConfigurableApplicationContext context);1532738143;Add the properties from the underlying map to the environment owned by an_{@link ApplicationContext}._@param context the context with an environment to modify;public void applyTo(ConfigurableApplicationContext context) {_		applyTo(context.getEnvironment())__	};add,the,properties,from,the,underlying,map,to,the,environment,owned,by,an,link,application,context,param,context,the,context,with,an,environment,to,modify;public,void,apply,to,configurable,application,context,context,apply,to,context,get,environment
TestPropertyValues -> public void applyTo(ConfigurableEnvironment environment, Type type, String name);1507173536;Add the properties from the underlying map to the environment using the specified_property source type and name._@param environment the environment that needs to be modified_@param type the type of {@link PropertySource} to be added. See {@link Type}_@param name the name for the property source;public void applyTo(ConfigurableEnvironment environment, Type type, String name) {_		Assert.notNull(environment, "Environment must not be null")__		Assert.notNull(type, "Property source type must not be null")__		Assert.notNull(name, "Property source name must not be null")__		MutablePropertySources sources = environment.getPropertySources()__		addToSources(sources, type, name)__		ConfigurationPropertySources.attach(environment)__	};add,the,properties,from,the,underlying,map,to,the,environment,using,the,specified,property,source,type,and,name,param,environment,the,environment,that,needs,to,be,modified,param,type,the,type,of,link,property,source,to,be,added,see,link,type,param,name,the,name,for,the,property,source;public,void,apply,to,configurable,environment,environment,type,type,string,name,assert,not,null,environment,environment,must,not,be,null,assert,not,null,type,property,source,type,must,not,be,null,assert,not,null,name,property,source,name,must,not,be,null,mutable,property,sources,sources,environment,get,property,sources,add,to,sources,sources,type,name,configuration,property,sources,attach,environment
TestPropertyValues -> public void applyTo(ConfigurableEnvironment environment, Type type, String name);1510002745;Add the properties from the underlying map to the environment using the specified_property source type and name._@param environment the environment that needs to be modified_@param type the type of {@link PropertySource} to be added. See {@link Type}_@param name the name for the property source;public void applyTo(ConfigurableEnvironment environment, Type type, String name) {_		Assert.notNull(environment, "Environment must not be null")__		Assert.notNull(type, "Property source type must not be null")__		Assert.notNull(name, "Property source name must not be null")__		MutablePropertySources sources = environment.getPropertySources()__		addToSources(sources, type, name)__		ConfigurationPropertySources.attach(environment)__	};add,the,properties,from,the,underlying,map,to,the,environment,using,the,specified,property,source,type,and,name,param,environment,the,environment,that,needs,to,be,modified,param,type,the,type,of,link,property,source,to,be,added,see,link,type,param,name,the,name,for,the,property,source;public,void,apply,to,configurable,environment,environment,type,type,string,name,assert,not,null,environment,environment,must,not,be,null,assert,not,null,type,property,source,type,must,not,be,null,assert,not,null,name,property,source,name,must,not,be,null,mutable,property,sources,sources,environment,get,property,sources,add,to,sources,sources,type,name,configuration,property,sources,attach,environment
TestPropertyValues -> public void applyTo(ConfigurableEnvironment environment, Type type, String name);1511779517;Add the properties from the underlying map to the environment using the specified_property source type and name._@param environment the environment that needs to be modified_@param type the type of {@link PropertySource} to be added. See {@link Type}_@param name the name for the property source;public void applyTo(ConfigurableEnvironment environment, Type type, String name) {_		Assert.notNull(environment, "Environment must not be null")__		Assert.notNull(type, "Property source type must not be null")__		Assert.notNull(name, "Property source name must not be null")__		MutablePropertySources sources = environment.getPropertySources()__		addToSources(sources, type, name)__		ConfigurationPropertySources.attach(environment)__	};add,the,properties,from,the,underlying,map,to,the,environment,using,the,specified,property,source,type,and,name,param,environment,the,environment,that,needs,to,be,modified,param,type,the,type,of,link,property,source,to,be,added,see,link,type,param,name,the,name,for,the,property,source;public,void,apply,to,configurable,environment,environment,type,type,string,name,assert,not,null,environment,environment,must,not,be,null,assert,not,null,type,property,source,type,must,not,be,null,assert,not,null,name,property,source,name,must,not,be,null,mutable,property,sources,sources,environment,get,property,sources,add,to,sources,sources,type,name,configuration,property,sources,attach,environment
TestPropertyValues -> public void applyTo(ConfigurableEnvironment environment, Type type, String name);1515486892;Add the properties from the underlying map to the environment using the specified_property source type and name._@param environment the environment that needs to be modified_@param type the type of {@link PropertySource} to be added. See {@link Type}_@param name the name for the property source;public void applyTo(ConfigurableEnvironment environment, Type type, String name) {_		Assert.notNull(environment, "Environment must not be null")__		Assert.notNull(type, "Property source type must not be null")__		Assert.notNull(name, "Property source name must not be null")__		MutablePropertySources sources = environment.getPropertySources()__		addToSources(sources, type, name)__		ConfigurationPropertySources.attach(environment)__	};add,the,properties,from,the,underlying,map,to,the,environment,using,the,specified,property,source,type,and,name,param,environment,the,environment,that,needs,to,be,modified,param,type,the,type,of,link,property,source,to,be,added,see,link,type,param,name,the,name,for,the,property,source;public,void,apply,to,configurable,environment,environment,type,type,string,name,assert,not,null,environment,environment,must,not,be,null,assert,not,null,type,property,source,type,must,not,be,null,assert,not,null,name,property,source,name,must,not,be,null,mutable,property,sources,sources,environment,get,property,sources,add,to,sources,sources,type,name,configuration,property,sources,attach,environment
TestPropertyValues -> public void applyTo(ConfigurableEnvironment environment, Type type, String name);1516667888;Add the properties from the underlying map to the environment using the specified_property source type and name._@param environment the environment that needs to be modified_@param type the type of {@link PropertySource} to be added. See {@link Type}_@param name the name for the property source;public void applyTo(ConfigurableEnvironment environment, Type type, String name) {_		Assert.notNull(environment, "Environment must not be null")__		Assert.notNull(type, "Property source type must not be null")__		Assert.notNull(name, "Property source name must not be null")__		MutablePropertySources sources = environment.getPropertySources()__		addToSources(sources, type, name)__		ConfigurationPropertySources.attach(environment)__	};add,the,properties,from,the,underlying,map,to,the,environment,using,the,specified,property,source,type,and,name,param,environment,the,environment,that,needs,to,be,modified,param,type,the,type,of,link,property,source,to,be,added,see,link,type,param,name,the,name,for,the,property,source;public,void,apply,to,configurable,environment,environment,type,type,string,name,assert,not,null,environment,environment,must,not,be,null,assert,not,null,type,property,source,type,must,not,be,null,assert,not,null,name,property,source,name,must,not,be,null,mutable,property,sources,sources,environment,get,property,sources,add,to,sources,sources,type,name,configuration,property,sources,attach,environment
TestPropertyValues -> public void applyTo(ConfigurableEnvironment environment, Type type, String name);1525416882;Add the properties from the underlying map to the environment using the specified_property source type and name._@param environment the environment that needs to be modified_@param type the type of {@link PropertySource} to be added. See {@link Type}_@param name the name for the property source;public void applyTo(ConfigurableEnvironment environment, Type type, String name) {_		Assert.notNull(environment, "Environment must not be null")__		Assert.notNull(type, "Property source type must not be null")__		Assert.notNull(name, "Property source name must not be null")__		MutablePropertySources sources = environment.getPropertySources()__		addToSources(sources, type, name)__		ConfigurationPropertySources.attach(environment)__	};add,the,properties,from,the,underlying,map,to,the,environment,using,the,specified,property,source,type,and,name,param,environment,the,environment,that,needs,to,be,modified,param,type,the,type,of,link,property,source,to,be,added,see,link,type,param,name,the,name,for,the,property,source;public,void,apply,to,configurable,environment,environment,type,type,string,name,assert,not,null,environment,environment,must,not,be,null,assert,not,null,type,property,source,type,must,not,be,null,assert,not,null,name,property,source,name,must,not,be,null,mutable,property,sources,sources,environment,get,property,sources,add,to,sources,sources,type,name,configuration,property,sources,attach,environment
TestPropertyValues -> public void applyTo(ConfigurableEnvironment environment, Type type, String name);1532738143;Add the properties from the underlying map to the environment using the specified_property source type and name._@param environment the environment that needs to be modified_@param type the type of {@link PropertySource} to be added. See {@link Type}_@param name the name for the property source;public void applyTo(ConfigurableEnvironment environment, Type type, String name) {_		Assert.notNull(environment, "Environment must not be null")__		Assert.notNull(type, "Property source type must not be null")__		Assert.notNull(name, "Property source name must not be null")__		MutablePropertySources sources = environment.getPropertySources()__		addToSources(sources, type, name)__		ConfigurationPropertySources.attach(environment)__	};add,the,properties,from,the,underlying,map,to,the,environment,using,the,specified,property,source,type,and,name,param,environment,the,environment,that,needs,to,be,modified,param,type,the,type,of,link,property,source,to,be,added,see,link,type,param,name,the,name,for,the,property,source;public,void,apply,to,configurable,environment,environment,type,type,string,name,assert,not,null,environment,environment,must,not,be,null,assert,not,null,type,property,source,type,must,not,be,null,assert,not,null,name,property,source,name,must,not,be,null,mutable,property,sources,sources,environment,get,property,sources,add,to,sources,sources,type,name,configuration,property,sources,attach,environment
TestPropertyValues -> public void applyTo(ConfigurableEnvironment environment);1507173536;Add the properties from the underlying map to the environment. The default property_source used is {@link MapPropertySource}._@param environment the environment that needs to be modified;public void applyTo(ConfigurableEnvironment environment) {_		applyTo(environment, Type.MAP)__	};add,the,properties,from,the,underlying,map,to,the,environment,the,default,property,source,used,is,link,map,property,source,param,environment,the,environment,that,needs,to,be,modified;public,void,apply,to,configurable,environment,environment,apply,to,environment,type,map
TestPropertyValues -> public void applyTo(ConfigurableEnvironment environment);1510002745;Add the properties from the underlying map to the environment. The default property_source used is {@link MapPropertySource}._@param environment the environment that needs to be modified;public void applyTo(ConfigurableEnvironment environment) {_		applyTo(environment, Type.MAP)__	};add,the,properties,from,the,underlying,map,to,the,environment,the,default,property,source,used,is,link,map,property,source,param,environment,the,environment,that,needs,to,be,modified;public,void,apply,to,configurable,environment,environment,apply,to,environment,type,map
TestPropertyValues -> public void applyTo(ConfigurableEnvironment environment);1511779517;Add the properties from the underlying map to the environment. The default property_source used is {@link MapPropertySource}._@param environment the environment that needs to be modified;public void applyTo(ConfigurableEnvironment environment) {_		applyTo(environment, Type.MAP)__	};add,the,properties,from,the,underlying,map,to,the,environment,the,default,property,source,used,is,link,map,property,source,param,environment,the,environment,that,needs,to,be,modified;public,void,apply,to,configurable,environment,environment,apply,to,environment,type,map
TestPropertyValues -> public void applyTo(ConfigurableEnvironment environment);1515486892;Add the properties from the underlying map to the environment. The default property_source used is {@link MapPropertySource}._@param environment the environment that needs to be modified;public void applyTo(ConfigurableEnvironment environment) {_		applyTo(environment, Type.MAP)__	};add,the,properties,from,the,underlying,map,to,the,environment,the,default,property,source,used,is,link,map,property,source,param,environment,the,environment,that,needs,to,be,modified;public,void,apply,to,configurable,environment,environment,apply,to,environment,type,map
TestPropertyValues -> public void applyTo(ConfigurableEnvironment environment);1516667888;Add the properties from the underlying map to the environment. The default property_source used is {@link MapPropertySource}._@param environment the environment that needs to be modified;public void applyTo(ConfigurableEnvironment environment) {_		applyTo(environment, Type.MAP)__	};add,the,properties,from,the,underlying,map,to,the,environment,the,default,property,source,used,is,link,map,property,source,param,environment,the,environment,that,needs,to,be,modified;public,void,apply,to,configurable,environment,environment,apply,to,environment,type,map
TestPropertyValues -> public void applyTo(ConfigurableEnvironment environment);1525416882;Add the properties from the underlying map to the environment. The default property_source used is {@link MapPropertySource}._@param environment the environment that needs to be modified;public void applyTo(ConfigurableEnvironment environment) {_		applyTo(environment, Type.MAP)__	};add,the,properties,from,the,underlying,map,to,the,environment,the,default,property,source,used,is,link,map,property,source,param,environment,the,environment,that,needs,to,be,modified;public,void,apply,to,configurable,environment,environment,apply,to,environment,type,map
TestPropertyValues -> public void applyTo(ConfigurableEnvironment environment);1532738143;Add the properties from the underlying map to the environment. The default property_source used is {@link MapPropertySource}._@param environment the environment that needs to be modified;public void applyTo(ConfigurableEnvironment environment) {_		applyTo(environment, Type.MAP)__	};add,the,properties,from,the,underlying,map,to,the,environment,the,default,property,source,used,is,link,map,property,source,param,environment,the,environment,that,needs,to,be,modified;public,void,apply,to,configurable,environment,environment,apply,to,environment,type,map
TestPropertyValues -> public static TestPropertyValues empty();1507173536;Return an empty {@link TestPropertyValues} instance._@return an empty instance;public static TestPropertyValues empty() {_		return EMPTY__	};return,an,empty,link,test,property,values,instance,return,an,empty,instance;public,static,test,property,values,empty,return,empty
TestPropertyValues -> public static TestPropertyValues empty();1510002745;Return an empty {@link TestPropertyValues} instance._@return an empty instance;public static TestPropertyValues empty() {_		return EMPTY__	};return,an,empty,link,test,property,values,instance,return,an,empty,instance;public,static,test,property,values,empty,return,empty
TestPropertyValues -> public static TestPropertyValues empty();1511779517;Return an empty {@link TestPropertyValues} instance._@return an empty instance;public static TestPropertyValues empty() {_		return EMPTY__	};return,an,empty,link,test,property,values,instance,return,an,empty,instance;public,static,test,property,values,empty,return,empty
TestPropertyValues -> public static TestPropertyValues empty();1515486892;Return an empty {@link TestPropertyValues} instance._@return an empty instance;public static TestPropertyValues empty() {_		return EMPTY__	};return,an,empty,link,test,property,values,instance,return,an,empty,instance;public,static,test,property,values,empty,return,empty
TestPropertyValues -> public static TestPropertyValues empty();1516667888;Return an empty {@link TestPropertyValues} instance._@return an empty instance;public static TestPropertyValues empty() {_		return EMPTY__	};return,an,empty,link,test,property,values,instance,return,an,empty,instance;public,static,test,property,values,empty,return,empty
TestPropertyValues -> public static TestPropertyValues empty();1525416882;Return an empty {@link TestPropertyValues} instance._@return an empty instance;public static TestPropertyValues empty() {_		return EMPTY__	};return,an,empty,link,test,property,values,instance,return,an,empty,instance;public,static,test,property,values,empty,return,empty
TestPropertyValues -> public static TestPropertyValues empty();1532738143;Return an empty {@link TestPropertyValues} instance._@return an empty instance;public static TestPropertyValues empty() {_		return EMPTY__	};return,an,empty,link,test,property,values,instance,return,an,empty,instance;public,static,test,property,values,empty,return,empty
TestPropertyValues -> public void applyTo(ConfigurableEnvironment environment, Type type);1507173536;Add the properties from the underlying map to the environment using the specified_property source type._@param environment the environment that needs to be modified_@param type the type of {@link PropertySource} to be added. See {@link Type};public void applyTo(ConfigurableEnvironment environment, Type type) {_		applyTo(environment, type, "test")__	};add,the,properties,from,the,underlying,map,to,the,environment,using,the,specified,property,source,type,param,environment,the,environment,that,needs,to,be,modified,param,type,the,type,of,link,property,source,to,be,added,see,link,type;public,void,apply,to,configurable,environment,environment,type,type,apply,to,environment,type,test
TestPropertyValues -> public void applyTo(ConfigurableEnvironment environment, Type type);1510002745;Add the properties from the underlying map to the environment using the specified_property source type._@param environment the environment that needs to be modified_@param type the type of {@link PropertySource} to be added. See {@link Type};public void applyTo(ConfigurableEnvironment environment, Type type) {_		applyTo(environment, type, type.applySuffix("test"))__	};add,the,properties,from,the,underlying,map,to,the,environment,using,the,specified,property,source,type,param,environment,the,environment,that,needs,to,be,modified,param,type,the,type,of,link,property,source,to,be,added,see,link,type;public,void,apply,to,configurable,environment,environment,type,type,apply,to,environment,type,type,apply,suffix,test
TestPropertyValues -> public void applyTo(ConfigurableEnvironment environment, Type type);1511779517;Add the properties from the underlying map to the environment using the specified_property source type._@param environment the environment that needs to be modified_@param type the type of {@link PropertySource} to be added. See {@link Type};public void applyTo(ConfigurableEnvironment environment, Type type) {_		applyTo(environment, type, type.applySuffix("test"))__	};add,the,properties,from,the,underlying,map,to,the,environment,using,the,specified,property,source,type,param,environment,the,environment,that,needs,to,be,modified,param,type,the,type,of,link,property,source,to,be,added,see,link,type;public,void,apply,to,configurable,environment,environment,type,type,apply,to,environment,type,type,apply,suffix,test
TestPropertyValues -> public void applyTo(ConfigurableEnvironment environment, Type type);1515486892;Add the properties from the underlying map to the environment using the specified_property source type._@param environment the environment that needs to be modified_@param type the type of {@link PropertySource} to be added. See {@link Type};public void applyTo(ConfigurableEnvironment environment, Type type) {_		applyTo(environment, type, type.applySuffix("test"))__	};add,the,properties,from,the,underlying,map,to,the,environment,using,the,specified,property,source,type,param,environment,the,environment,that,needs,to,be,modified,param,type,the,type,of,link,property,source,to,be,added,see,link,type;public,void,apply,to,configurable,environment,environment,type,type,apply,to,environment,type,type,apply,suffix,test
TestPropertyValues -> public void applyTo(ConfigurableEnvironment environment, Type type);1516667888;Add the properties from the underlying map to the environment using the specified_property source type._@param environment the environment that needs to be modified_@param type the type of {@link PropertySource} to be added. See {@link Type};public void applyTo(ConfigurableEnvironment environment, Type type) {_		applyTo(environment, type, type.applySuffix("test"))__	};add,the,properties,from,the,underlying,map,to,the,environment,using,the,specified,property,source,type,param,environment,the,environment,that,needs,to,be,modified,param,type,the,type,of,link,property,source,to,be,added,see,link,type;public,void,apply,to,configurable,environment,environment,type,type,apply,to,environment,type,type,apply,suffix,test
TestPropertyValues -> public void applyTo(ConfigurableEnvironment environment, Type type);1525416882;Add the properties from the underlying map to the environment using the specified_property source type._@param environment the environment that needs to be modified_@param type the type of {@link PropertySource} to be added. See {@link Type};public void applyTo(ConfigurableEnvironment environment, Type type) {_		applyTo(environment, type, type.applySuffix("test"))__	};add,the,properties,from,the,underlying,map,to,the,environment,using,the,specified,property,source,type,param,environment,the,environment,that,needs,to,be,modified,param,type,the,type,of,link,property,source,to,be,added,see,link,type;public,void,apply,to,configurable,environment,environment,type,type,apply,to,environment,type,type,apply,suffix,test
TestPropertyValues -> public void applyTo(ConfigurableEnvironment environment, Type type);1532738143;Add the properties from the underlying map to the environment using the specified_property source type._@param environment the environment that needs to be modified_@param type the type of {@link PropertySource} to be added. See {@link Type};public void applyTo(ConfigurableEnvironment environment, Type type) {_		applyTo(environment, type, type.applySuffix("test"))__	};add,the,properties,from,the,underlying,map,to,the,environment,using,the,specified,property,source,type,param,environment,the,environment,that,needs,to,be,modified,param,type,the,type,of,link,property,source,to,be,added,see,link,type;public,void,apply,to,configurable,environment,environment,type,type,apply,to,environment,type,type,apply,suffix,test
TestPropertyValues -> public static TestPropertyValues of(Stream<String> pairs);1507173536;Return a new {@link TestPropertyValues} with the underlying map populated with the_given property pairs. Name-value pairs can be specified with colon (":") or equals_("=") separators._@param pairs the name-value pairs for properties that need to be added to the_environment_@return the new instance;public static TestPropertyValues of(Stream<String> pairs) {_		if (pairs == null) {_			return empty()__		}_		return empty().and(pairs.map(Pair::parse))__	};return,a,new,link,test,property,values,with,the,underlying,map,populated,with,the,given,property,pairs,name,value,pairs,can,be,specified,with,colon,or,equals,separators,param,pairs,the,name,value,pairs,for,properties,that,need,to,be,added,to,the,environment,return,the,new,instance;public,static,test,property,values,of,stream,string,pairs,if,pairs,null,return,empty,return,empty,and,pairs,map,pair,parse
TestPropertyValues -> public static TestPropertyValues of(Stream<String> pairs);1510002745;Return a new {@link TestPropertyValues} with the underlying map populated with the_given property pairs. Name-value pairs can be specified with colon (":") or equals_("=") separators._@param pairs the name-value pairs for properties that need to be added to the_environment_@return the new instance;public static TestPropertyValues of(Stream<String> pairs) {_		if (pairs == null) {_			return empty()__		}_		return empty().and(pairs.map(Pair::parse))__	};return,a,new,link,test,property,values,with,the,underlying,map,populated,with,the,given,property,pairs,name,value,pairs,can,be,specified,with,colon,or,equals,separators,param,pairs,the,name,value,pairs,for,properties,that,need,to,be,added,to,the,environment,return,the,new,instance;public,static,test,property,values,of,stream,string,pairs,if,pairs,null,return,empty,return,empty,and,pairs,map,pair,parse
TestPropertyValues -> public static TestPropertyValues of(Stream<String> pairs);1511779517;Return a new {@link TestPropertyValues} with the underlying map populated with the_given property pairs. Name-value pairs can be specified with colon (":") or equals_("=") separators._@param pairs the name-value pairs for properties that need to be added to the_environment_@return the new instance;public static TestPropertyValues of(Stream<String> pairs) {_		if (pairs == null) {_			return empty()__		}_		return empty().and(pairs.map(Pair::parse))__	};return,a,new,link,test,property,values,with,the,underlying,map,populated,with,the,given,property,pairs,name,value,pairs,can,be,specified,with,colon,or,equals,separators,param,pairs,the,name,value,pairs,for,properties,that,need,to,be,added,to,the,environment,return,the,new,instance;public,static,test,property,values,of,stream,string,pairs,if,pairs,null,return,empty,return,empty,and,pairs,map,pair,parse
TestPropertyValues -> public static TestPropertyValues of(Stream<String> pairs);1515486892;Return a new {@link TestPropertyValues} with the underlying map populated with the_given property pairs. Name-value pairs can be specified with colon (":") or equals_("=") separators._@param pairs the name-value pairs for properties that need to be added to the_environment_@return the new instance;public static TestPropertyValues of(Stream<String> pairs) {_		if (pairs == null) {_			return empty()__		}_		return empty().and(pairs.map(Pair::parse))__	};return,a,new,link,test,property,values,with,the,underlying,map,populated,with,the,given,property,pairs,name,value,pairs,can,be,specified,with,colon,or,equals,separators,param,pairs,the,name,value,pairs,for,properties,that,need,to,be,added,to,the,environment,return,the,new,instance;public,static,test,property,values,of,stream,string,pairs,if,pairs,null,return,empty,return,empty,and,pairs,map,pair,parse
TestPropertyValues -> public static TestPropertyValues of(Stream<String> pairs);1516667888;Return a new {@link TestPropertyValues} with the underlying map populated with the_given property pairs. Name-value pairs can be specified with colon (":") or equals_("=") separators._@param pairs the name-value pairs for properties that need to be added to the_environment_@return the new instance;public static TestPropertyValues of(Stream<String> pairs) {_		if (pairs == null) {_			return empty()__		}_		return empty().and(pairs.map(Pair::parse))__	};return,a,new,link,test,property,values,with,the,underlying,map,populated,with,the,given,property,pairs,name,value,pairs,can,be,specified,with,colon,or,equals,separators,param,pairs,the,name,value,pairs,for,properties,that,need,to,be,added,to,the,environment,return,the,new,instance;public,static,test,property,values,of,stream,string,pairs,if,pairs,null,return,empty,return,empty,and,pairs,map,pair,parse
TestPropertyValues -> public static TestPropertyValues of(Stream<String> pairs);1525416882;Return a new {@link TestPropertyValues} with the underlying map populated with the_given property pairs. Name-value pairs can be specified with colon (":") or equals_("=") separators._@param pairs the name-value pairs for properties that need to be added to the_environment_@return the new instance;public static TestPropertyValues of(Stream<String> pairs) {_		if (pairs == null) {_			return empty()__		}_		return empty().and(pairs.map(Pair::parse))__	};return,a,new,link,test,property,values,with,the,underlying,map,populated,with,the,given,property,pairs,name,value,pairs,can,be,specified,with,colon,or,equals,separators,param,pairs,the,name,value,pairs,for,properties,that,need,to,be,added,to,the,environment,return,the,new,instance;public,static,test,property,values,of,stream,string,pairs,if,pairs,null,return,empty,return,empty,and,pairs,map,pair,parse
TestPropertyValues -> public static TestPropertyValues of(Stream<String> pairs);1532738143;Return a new {@link TestPropertyValues} with the underlying map populated with the_given property pairs. Name-value pairs can be specified with colon (":") or equals_("=") separators._@param pairs the name-value pairs for properties that need to be added to the_environment_@return the new instance;public static TestPropertyValues of(Stream<String> pairs) {_		if (pairs == null) {_			return empty()__		}_		return empty().and(pairs.map(Pair::parse))__	};return,a,new,link,test,property,values,with,the,underlying,map,populated,with,the,given,property,pairs,name,value,pairs,can,be,specified,with,colon,or,equals,separators,param,pairs,the,name,value,pairs,for,properties,that,need,to,be,added,to,the,environment,return,the,new,instance;public,static,test,property,values,of,stream,string,pairs,if,pairs,null,return,empty,return,empty,and,pairs,map,pair,parse
TestPropertyValues -> public static TestPropertyValues of(Iterable<String> pairs);1507173536;Return a new {@link TestPropertyValues} with the underlying map populated with the_given property pairs. Name-value pairs can be specified with colon (":") or equals_("=") separators._@param pairs the name-value pairs for properties that need to be added to the_environment_@return the new instance;public static TestPropertyValues of(Iterable<String> pairs) {_		if (pairs == null) {_			return empty()__		}_		return of(StreamSupport.stream(pairs.spliterator(), false))__	};return,a,new,link,test,property,values,with,the,underlying,map,populated,with,the,given,property,pairs,name,value,pairs,can,be,specified,with,colon,or,equals,separators,param,pairs,the,name,value,pairs,for,properties,that,need,to,be,added,to,the,environment,return,the,new,instance;public,static,test,property,values,of,iterable,string,pairs,if,pairs,null,return,empty,return,of,stream,support,stream,pairs,spliterator,false
TestPropertyValues -> public static TestPropertyValues of(Iterable<String> pairs);1510002745;Return a new {@link TestPropertyValues} with the underlying map populated with the_given property pairs. Name-value pairs can be specified with colon (":") or equals_("=") separators._@param pairs the name-value pairs for properties that need to be added to the_environment_@return the new instance;public static TestPropertyValues of(Iterable<String> pairs) {_		if (pairs == null) {_			return empty()__		}_		return of(StreamSupport.stream(pairs.spliterator(), false))__	};return,a,new,link,test,property,values,with,the,underlying,map,populated,with,the,given,property,pairs,name,value,pairs,can,be,specified,with,colon,or,equals,separators,param,pairs,the,name,value,pairs,for,properties,that,need,to,be,added,to,the,environment,return,the,new,instance;public,static,test,property,values,of,iterable,string,pairs,if,pairs,null,return,empty,return,of,stream,support,stream,pairs,spliterator,false
TestPropertyValues -> public static TestPropertyValues of(Iterable<String> pairs);1511779517;Return a new {@link TestPropertyValues} with the underlying map populated with the_given property pairs. Name-value pairs can be specified with colon (":") or equals_("=") separators._@param pairs the name-value pairs for properties that need to be added to the_environment_@return the new instance;public static TestPropertyValues of(Iterable<String> pairs) {_		if (pairs == null) {_			return empty()__		}_		return of(StreamSupport.stream(pairs.spliterator(), false))__	};return,a,new,link,test,property,values,with,the,underlying,map,populated,with,the,given,property,pairs,name,value,pairs,can,be,specified,with,colon,or,equals,separators,param,pairs,the,name,value,pairs,for,properties,that,need,to,be,added,to,the,environment,return,the,new,instance;public,static,test,property,values,of,iterable,string,pairs,if,pairs,null,return,empty,return,of,stream,support,stream,pairs,spliterator,false
TestPropertyValues -> public static TestPropertyValues of(Iterable<String> pairs);1515486892;Return a new {@link TestPropertyValues} with the underlying map populated with the_given property pairs. Name-value pairs can be specified with colon (":") or equals_("=") separators._@param pairs the name-value pairs for properties that need to be added to the_environment_@return the new instance;public static TestPropertyValues of(Iterable<String> pairs) {_		if (pairs == null) {_			return empty()__		}_		return of(StreamSupport.stream(pairs.spliterator(), false))__	};return,a,new,link,test,property,values,with,the,underlying,map,populated,with,the,given,property,pairs,name,value,pairs,can,be,specified,with,colon,or,equals,separators,param,pairs,the,name,value,pairs,for,properties,that,need,to,be,added,to,the,environment,return,the,new,instance;public,static,test,property,values,of,iterable,string,pairs,if,pairs,null,return,empty,return,of,stream,support,stream,pairs,spliterator,false
TestPropertyValues -> public static TestPropertyValues of(Iterable<String> pairs);1516667888;Return a new {@link TestPropertyValues} with the underlying map populated with the_given property pairs. Name-value pairs can be specified with colon (":") or equals_("=") separators._@param pairs the name-value pairs for properties that need to be added to the_environment_@return the new instance;public static TestPropertyValues of(Iterable<String> pairs) {_		if (pairs == null) {_			return empty()__		}_		return of(StreamSupport.stream(pairs.spliterator(), false))__	};return,a,new,link,test,property,values,with,the,underlying,map,populated,with,the,given,property,pairs,name,value,pairs,can,be,specified,with,colon,or,equals,separators,param,pairs,the,name,value,pairs,for,properties,that,need,to,be,added,to,the,environment,return,the,new,instance;public,static,test,property,values,of,iterable,string,pairs,if,pairs,null,return,empty,return,of,stream,support,stream,pairs,spliterator,false
TestPropertyValues -> public static TestPropertyValues of(Iterable<String> pairs);1525416882;Return a new {@link TestPropertyValues} with the underlying map populated with the_given property pairs. Name-value pairs can be specified with colon (":") or equals_("=") separators._@param pairs the name-value pairs for properties that need to be added to the_environment_@return the new instance;public static TestPropertyValues of(Iterable<String> pairs) {_		if (pairs == null) {_			return empty()__		}_		return of(StreamSupport.stream(pairs.spliterator(), false))__	};return,a,new,link,test,property,values,with,the,underlying,map,populated,with,the,given,property,pairs,name,value,pairs,can,be,specified,with,colon,or,equals,separators,param,pairs,the,name,value,pairs,for,properties,that,need,to,be,added,to,the,environment,return,the,new,instance;public,static,test,property,values,of,iterable,string,pairs,if,pairs,null,return,empty,return,of,stream,support,stream,pairs,spliterator,false
TestPropertyValues -> public static TestPropertyValues of(Iterable<String> pairs);1532738143;Return a new {@link TestPropertyValues} with the underlying map populated with the_given property pairs. Name-value pairs can be specified with colon (":") or equals_("=") separators._@param pairs the name-value pairs for properties that need to be added to the_environment_@return the new instance;public static TestPropertyValues of(Iterable<String> pairs) {_		if (pairs == null) {_			return empty()__		}_		return of(StreamSupport.stream(pairs.spliterator(), false))__	};return,a,new,link,test,property,values,with,the,underlying,map,populated,with,the,given,property,pairs,name,value,pairs,can,be,specified,with,colon,or,equals,separators,param,pairs,the,name,value,pairs,for,properties,that,need,to,be,added,to,the,environment,return,the,new,instance;public,static,test,property,values,of,iterable,string,pairs,if,pairs,null,return,empty,return,of,stream,support,stream,pairs,spliterator,false
TestPropertyValues -> public TestPropertyValues and(String... pairs);1507173536;Builder method to add more properties._@param pairs the property pairs to add_@return a new {@link TestPropertyValues} instance;public TestPropertyValues and(String... pairs) {_		return and(Arrays.stream(pairs).map(Pair::parse))__	};builder,method,to,add,more,properties,param,pairs,the,property,pairs,to,add,return,a,new,link,test,property,values,instance;public,test,property,values,and,string,pairs,return,and,arrays,stream,pairs,map,pair,parse
TestPropertyValues -> public TestPropertyValues and(String... pairs);1510002745;Builder method to add more properties._@param pairs the property pairs to add_@return a new {@link TestPropertyValues} instance;public TestPropertyValues and(String... pairs) {_		return and(Arrays.stream(pairs).map(Pair::parse))__	};builder,method,to,add,more,properties,param,pairs,the,property,pairs,to,add,return,a,new,link,test,property,values,instance;public,test,property,values,and,string,pairs,return,and,arrays,stream,pairs,map,pair,parse
TestPropertyValues -> public TestPropertyValues and(String... pairs);1511779517;Builder method to add more properties._@param pairs the property pairs to add_@return a new {@link TestPropertyValues} instance;public TestPropertyValues and(String... pairs) {_		return and(Arrays.stream(pairs).map(Pair::parse))__	};builder,method,to,add,more,properties,param,pairs,the,property,pairs,to,add,return,a,new,link,test,property,values,instance;public,test,property,values,and,string,pairs,return,and,arrays,stream,pairs,map,pair,parse
TestPropertyValues -> public TestPropertyValues and(String... pairs);1515486892;Builder method to add more properties._@param pairs the property pairs to add_@return a new {@link TestPropertyValues} instance;public TestPropertyValues and(String... pairs) {_		return and(Arrays.stream(pairs).map(Pair::parse))__	};builder,method,to,add,more,properties,param,pairs,the,property,pairs,to,add,return,a,new,link,test,property,values,instance;public,test,property,values,and,string,pairs,return,and,arrays,stream,pairs,map,pair,parse
TestPropertyValues -> public TestPropertyValues and(String... pairs);1516667888;Builder method to add more properties._@param pairs the property pairs to add_@return a new {@link TestPropertyValues} instance;public TestPropertyValues and(String... pairs) {_		return and(Arrays.stream(pairs).map(Pair::parse))__	};builder,method,to,add,more,properties,param,pairs,the,property,pairs,to,add,return,a,new,link,test,property,values,instance;public,test,property,values,and,string,pairs,return,and,arrays,stream,pairs,map,pair,parse
TestPropertyValues -> public TestPropertyValues and(String... pairs);1525416882;Builder method to add more properties._@param pairs the property pairs to add_@return a new {@link TestPropertyValues} instance;public TestPropertyValues and(String... pairs) {_		return and(Arrays.stream(pairs).map(Pair::parse))__	};builder,method,to,add,more,properties,param,pairs,the,property,pairs,to,add,return,a,new,link,test,property,values,instance;public,test,property,values,and,string,pairs,return,and,arrays,stream,pairs,map,pair,parse
TestPropertyValues -> public TestPropertyValues and(String... pairs);1532738143;Builder method to add more properties._@param pairs the property pairs to add_@return a new {@link TestPropertyValues} instance;public TestPropertyValues and(String... pairs) {_		return and(Arrays.stream(pairs).map(Pair::parse))__	};builder,method,to,add,more,properties,param,pairs,the,property,pairs,to,add,return,a,new,link,test,property,values,instance;public,test,property,values,and,string,pairs,return,and,arrays,stream,pairs,map,pair,parse
TestPropertyValues -> public static TestPropertyValues of(String... pairs);1507173536;Return a new {@link TestPropertyValues} with the underlying map populated with the_given property pairs. Name-value pairs can be specified with colon (":") or equals_("=") separators._@param pairs the name-value pairs for properties that need to be added to the_environment_@return the new instance;public static TestPropertyValues of(String... pairs) {_		return of(Stream.of(pairs))__	};return,a,new,link,test,property,values,with,the,underlying,map,populated,with,the,given,property,pairs,name,value,pairs,can,be,specified,with,colon,or,equals,separators,param,pairs,the,name,value,pairs,for,properties,that,need,to,be,added,to,the,environment,return,the,new,instance;public,static,test,property,values,of,string,pairs,return,of,stream,of,pairs
TestPropertyValues -> public static TestPropertyValues of(String... pairs);1510002745;Return a new {@link TestPropertyValues} with the underlying map populated with the_given property pairs. Name-value pairs can be specified with colon (":") or equals_("=") separators._@param pairs the name-value pairs for properties that need to be added to the_environment_@return the new instance;public static TestPropertyValues of(String... pairs) {_		return of(Stream.of(pairs))__	};return,a,new,link,test,property,values,with,the,underlying,map,populated,with,the,given,property,pairs,name,value,pairs,can,be,specified,with,colon,or,equals,separators,param,pairs,the,name,value,pairs,for,properties,that,need,to,be,added,to,the,environment,return,the,new,instance;public,static,test,property,values,of,string,pairs,return,of,stream,of,pairs
TestPropertyValues -> public static TestPropertyValues of(String... pairs);1511779517;Return a new {@link TestPropertyValues} with the underlying map populated with the_given property pairs. Name-value pairs can be specified with colon (":") or equals_("=") separators._@param pairs the name-value pairs for properties that need to be added to the_environment_@return the new instance;public static TestPropertyValues of(String... pairs) {_		return of(Stream.of(pairs))__	};return,a,new,link,test,property,values,with,the,underlying,map,populated,with,the,given,property,pairs,name,value,pairs,can,be,specified,with,colon,or,equals,separators,param,pairs,the,name,value,pairs,for,properties,that,need,to,be,added,to,the,environment,return,the,new,instance;public,static,test,property,values,of,string,pairs,return,of,stream,of,pairs
TestPropertyValues -> public static TestPropertyValues of(String... pairs);1515486892;Return a new {@link TestPropertyValues} with the underlying map populated with the_given property pairs. Name-value pairs can be specified with colon (":") or equals_("=") separators._@param pairs the name-value pairs for properties that need to be added to the_environment_@return the new instance;public static TestPropertyValues of(String... pairs) {_		return of(Stream.of(pairs))__	};return,a,new,link,test,property,values,with,the,underlying,map,populated,with,the,given,property,pairs,name,value,pairs,can,be,specified,with,colon,or,equals,separators,param,pairs,the,name,value,pairs,for,properties,that,need,to,be,added,to,the,environment,return,the,new,instance;public,static,test,property,values,of,string,pairs,return,of,stream,of,pairs
TestPropertyValues -> public static TestPropertyValues of(String... pairs);1516667888;Return a new {@link TestPropertyValues} with the underlying map populated with the_given property pairs. Name-value pairs can be specified with colon (":") or equals_("=") separators._@param pairs the name-value pairs for properties that need to be added to the_environment_@return the new instance;public static TestPropertyValues of(String... pairs) {_		return of(Stream.of(pairs))__	};return,a,new,link,test,property,values,with,the,underlying,map,populated,with,the,given,property,pairs,name,value,pairs,can,be,specified,with,colon,or,equals,separators,param,pairs,the,name,value,pairs,for,properties,that,need,to,be,added,to,the,environment,return,the,new,instance;public,static,test,property,values,of,string,pairs,return,of,stream,of,pairs
TestPropertyValues -> public static TestPropertyValues of(String... pairs);1525416882;Return a new {@link TestPropertyValues} with the underlying map populated with the_given property pairs. Name-value pairs can be specified with colon (":") or equals_("=") separators._@param pairs the name-value pairs for properties that need to be added to the_environment_@return the new instance;public static TestPropertyValues of(String... pairs) {_		return of(Stream.of(pairs))__	};return,a,new,link,test,property,values,with,the,underlying,map,populated,with,the,given,property,pairs,name,value,pairs,can,be,specified,with,colon,or,equals,separators,param,pairs,the,name,value,pairs,for,properties,that,need,to,be,added,to,the,environment,return,the,new,instance;public,static,test,property,values,of,string,pairs,return,of,stream,of,pairs
TestPropertyValues -> public static TestPropertyValues of(String... pairs);1532738143;Return a new {@link TestPropertyValues} with the underlying map populated with the_given property pairs. Name-value pairs can be specified with colon (":") or equals_("=") separators._@param pairs the name-value pairs for properties that need to be added to the_environment_@return the new instance;public static TestPropertyValues of(String... pairs) {_		return of(Stream.of(pairs))__	};return,a,new,link,test,property,values,with,the,underlying,map,populated,with,the,given,property,pairs,name,value,pairs,can,be,specified,with,colon,or,equals,separators,param,pairs,the,name,value,pairs,for,properties,that,need,to,be,added,to,the,environment,return,the,new,instance;public,static,test,property,values,of,string,pairs,return,of,stream,of,pairs
