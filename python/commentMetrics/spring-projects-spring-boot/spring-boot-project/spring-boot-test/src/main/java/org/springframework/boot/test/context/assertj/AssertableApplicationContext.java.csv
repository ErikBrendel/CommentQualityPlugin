# id;timestamp;commentText;codeText;commentWords;codeWords
AssertableApplicationContext -> static AssertableApplicationContext get( 			Supplier<? extends ConfigurableApplicationContext> contextSupplier);1507173536;Factory method to create a new {@link AssertableApplicationContext} instance._@param contextSupplier a supplier that will either return a fully configured_{@link ConfigurableApplicationContext} or throw an exception if the context fails_to start._@return an {@link AssertableApplicationContext} instance;static AssertableApplicationContext get(_			Supplier<? extends ConfigurableApplicationContext> contextSupplier) {_		return ApplicationContextAssertProvider.get(AssertableApplicationContext.class,_				ConfigurableApplicationContext.class, contextSupplier)__	};factory,method,to,create,a,new,link,assertable,application,context,instance,param,context,supplier,a,supplier,that,will,either,return,a,fully,configured,link,configurable,application,context,or,throw,an,exception,if,the,context,fails,to,start,return,an,link,assertable,application,context,instance;static,assertable,application,context,get,supplier,extends,configurable,application,context,context,supplier,return,application,context,assert,provider,get,assertable,application,context,class,configurable,application,context,class,context,supplier
AssertableApplicationContext -> static AssertableApplicationContext get( 			Supplier<? extends ConfigurableApplicationContext> contextSupplier);1509547763;Factory method to create a new {@link AssertableApplicationContext} instance._@param contextSupplier a supplier that will either return a fully configured_{@link ConfigurableApplicationContext} or throw an exception if the context fails_to start._@return an {@link AssertableApplicationContext} instance;static AssertableApplicationContext get(_			Supplier<? extends ConfigurableApplicationContext> contextSupplier) {_		return ApplicationContextAssertProvider.get(AssertableApplicationContext.class,_				ConfigurableApplicationContext.class, contextSupplier)__	};factory,method,to,create,a,new,link,assertable,application,context,instance,param,context,supplier,a,supplier,that,will,either,return,a,fully,configured,link,configurable,application,context,or,throw,an,exception,if,the,context,fails,to,start,return,an,link,assertable,application,context,instance;static,assertable,application,context,get,supplier,extends,configurable,application,context,context,supplier,return,application,context,assert,provider,get,assertable,application,context,class,configurable,application,context,class,context,supplier
AssertableApplicationContext -> static AssertableApplicationContext get( 			Supplier<? extends ConfigurableApplicationContext> contextSupplier);1538414859;Factory method to create a new {@link AssertableApplicationContext} instance._@param contextSupplier a supplier that will either return a fully configured_{@link ConfigurableApplicationContext} or throw an exception if the context fails_to start._@return an {@link AssertableApplicationContext} instance;static AssertableApplicationContext get(_			Supplier<? extends ConfigurableApplicationContext> contextSupplier) {_		return ApplicationContextAssertProvider.get(AssertableApplicationContext.class,_				ConfigurableApplicationContext.class, contextSupplier)__	};factory,method,to,create,a,new,link,assertable,application,context,instance,param,context,supplier,a,supplier,that,will,either,return,a,fully,configured,link,configurable,application,context,or,throw,an,exception,if,the,context,fails,to,start,return,an,link,assertable,application,context,instance;static,assertable,application,context,get,supplier,extends,configurable,application,context,context,supplier,return,application,context,assert,provider,get,assertable,application,context,class,configurable,application,context,class,context,supplier
