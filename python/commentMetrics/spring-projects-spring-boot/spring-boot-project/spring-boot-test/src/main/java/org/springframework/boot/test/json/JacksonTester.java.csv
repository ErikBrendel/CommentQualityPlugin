commented;modifiers;parameterAmount;loc;comment;code
false;protected;2;5;;@Override protected T readObject(InputStream inputStream, ResolvableType type) throws IOException {     return getObjectReader(type).readValue(inputStream). }
false;protected;2;4;;@Override protected T readObject(Reader reader, ResolvableType type) throws IOException {     return getObjectReader(type).readValue(reader). }
false;private;1;7;;private ObjectReader getObjectReader(ResolvableType type) {     ObjectReader objectReader = this.objectMapper.readerFor(getType(type)).     if (this.view != null) {         return objectReader.withView(this.view).     }     return objectReader. }
false;protected;2;4;;@Override protected String writeObject(T value, ResolvableType type) throws IOException {     return getObjectWriter(type).writeValueAsString(value). }
false;private;1;7;;private ObjectWriter getObjectWriter(ResolvableType type) {     ObjectWriter objectWriter = this.objectMapper.writerFor(getType(type)).     if (this.view != null) {         return objectWriter.withView(this.view).     }     return objectWriter. }
false;private;1;3;;private JavaType getType(ResolvableType type) {     return this.objectMapper.constructType(type.getType()). }
true;public,static;2;3;/**  * Utility method to initialize {@link JacksonTester} fields. See {@link JacksonTester  * class-level documentation} for example usage.  * @param testInstance the test instance  * @param objectMapper the object mapper  * @see #initFields(Object, ObjectMapper)  */ ;/**  * Utility method to initialize {@link JacksonTester} fields. See {@link JacksonTester  * class-level documentation} for example usage.  * @param testInstance the test instance  * @param objectMapper the object mapper  * @see #initFields(Object, ObjectMapper)  */ public static void initFields(Object testInstance, ObjectMapper objectMapper) {     new JacksonFieldInitializer().initFields(testInstance, objectMapper). }
true;public,static;2;4;/**  * Utility method to initialize {@link JacksonTester} fields. See {@link JacksonTester  * class-level documentation} for example usage.  * @param testInstance the test instance  * @param objectMapperFactory a factory to create the object mapper  * @see #initFields(Object, ObjectMapper)  */ ;/**  * Utility method to initialize {@link JacksonTester} fields. See {@link JacksonTester  * class-level documentation} for example usage.  * @param testInstance the test instance  * @param objectMapperFactory a factory to create the object mapper  * @see #initFields(Object, ObjectMapper)  */ public static void initFields(Object testInstance, ObjectFactory<ObjectMapper> objectMapperFactory) {     new JacksonFieldInitializer().initFields(testInstance, objectMapperFactory). }
true;public;1;4;/**  * Returns a new instance of {@link JacksonTester} with the view that should be used  * for json serialization/deserialization.  * @param view the view class  * @return the new instance  */ ;/**  * Returns a new instance of {@link JacksonTester} with the view that should be used  * for json serialization/deserialization.  * @param view the view class  * @return the new instance  */ public JacksonTester<T> forView(Class<?> view) {     return new JacksonTester<>(this.getResourceLoadClass(), this.getType(), this.objectMapper, view). }
false;protected;3;6;;@Override protected AbstractJsonMarshalTester<Object> createTester(Class<?> resourceLoadClass, ResolvableType type, ObjectMapper marshaller) {     return new JacksonTester<>(resourceLoadClass, type, marshaller). }
