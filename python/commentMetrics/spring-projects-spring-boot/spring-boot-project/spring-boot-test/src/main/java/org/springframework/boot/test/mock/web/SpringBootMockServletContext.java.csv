commented;modifiers;parameterAmount;loc;comment;code
false;protected;1;17;;@Override protected String getResourceLocation(String path) {     if (!path.startsWith("/")) {         path = "/" + path.     }     String resourceLocation = getResourceBasePathLocation(path).     if (exists(resourceLocation)) {         return resourceLocation.     }     for (String prefix : SPRING_BOOT_RESOURCE_LOCATIONS) {         resourceLocation = prefix + path.         if (exists(resourceLocation)) {             return resourceLocation.         }     }     return super.getResourceLocation(path). }
false;protected,final;1;3;;protected final String getResourceBasePathLocation(String path) {     return super.getResourceLocation(path). }
false;private;1;9;;private boolean exists(String resourceLocation) {     try {         Resource resource = this.resourceLoader.getResource(resourceLocation).         return resource.exists().     } catch (Exception ex) {         return false.     } }
false;public;1;24;;@Override public URL getResource(String path) throws MalformedURLException {     URL resource = super.getResource(path).     if (resource == null && "/".equals(path)) {         // use a temporary location.         try {             if (this.emptyRootFolder == null) {                 synchronized (this) {                     File tempFolder = File.createTempFile("spr", "servlet").                     tempFolder.delete().                     tempFolder.mkdirs().                     tempFolder.deleteOnExit().                     this.emptyRootFolder = tempFolder.                 }             }             return this.emptyRootFolder.toURI().toURL().         } catch (IOException ex) {         // Ignore         }     }     return resource. }
