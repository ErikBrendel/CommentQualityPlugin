# id;timestamp;commentText;codeText;commentWords;codeWords
AssertableWebApplicationContext -> static AssertableWebApplicationContext get( 			Supplier<? extends ConfigurableWebApplicationContext> contextSupplier);1507173536;Factory method to create a new {@link AssertableWebApplicationContext} instance._@param contextSupplier a supplier that will either return a fully configured_{@link ConfigurableWebApplicationContext} or throw an exception if the context_fails to start._@return a {@link AssertableWebApplicationContext} instance;static AssertableWebApplicationContext get(_			Supplier<? extends ConfigurableWebApplicationContext> contextSupplier) {_		return ApplicationContextAssertProvider.get(AssertableWebApplicationContext.class,_				ConfigurableWebApplicationContext.class, contextSupplier)__	};factory,method,to,create,a,new,link,assertable,web,application,context,instance,param,context,supplier,a,supplier,that,will,either,return,a,fully,configured,link,configurable,web,application,context,or,throw,an,exception,if,the,context,fails,to,start,return,a,link,assertable,web,application,context,instance;static,assertable,web,application,context,get,supplier,extends,configurable,web,application,context,context,supplier,return,application,context,assert,provider,get,assertable,web,application,context,class,configurable,web,application,context,class,context,supplier
AssertableWebApplicationContext -> static AssertableWebApplicationContext get( 			Supplier<? extends ConfigurableWebApplicationContext> contextSupplier);1509547763;Factory method to create a new {@link AssertableWebApplicationContext} instance._@param contextSupplier a supplier that will either return a fully configured_{@link ConfigurableWebApplicationContext} or throw an exception if the context_fails to start._@return a {@link AssertableWebApplicationContext} instance;static AssertableWebApplicationContext get(_			Supplier<? extends ConfigurableWebApplicationContext> contextSupplier) {_		return ApplicationContextAssertProvider.get(AssertableWebApplicationContext.class,_				ConfigurableWebApplicationContext.class, contextSupplier)__	};factory,method,to,create,a,new,link,assertable,web,application,context,instance,param,context,supplier,a,supplier,that,will,either,return,a,fully,configured,link,configurable,web,application,context,or,throw,an,exception,if,the,context,fails,to,start,return,a,link,assertable,web,application,context,instance;static,assertable,web,application,context,get,supplier,extends,configurable,web,application,context,context,supplier,return,application,context,assert,provider,get,assertable,web,application,context,class,configurable,web,application,context,class,context,supplier
AssertableWebApplicationContext -> static AssertableWebApplicationContext get( 			Supplier<? extends ConfigurableWebApplicationContext> contextSupplier);1538414859;Factory method to create a new {@link AssertableWebApplicationContext} instance._@param contextSupplier a supplier that will either return a fully configured_{@link ConfigurableWebApplicationContext} or throw an exception if the context_fails to start._@return a {@link AssertableWebApplicationContext} instance;static AssertableWebApplicationContext get(_			Supplier<? extends ConfigurableWebApplicationContext> contextSupplier) {_		return ApplicationContextAssertProvider.get(AssertableWebApplicationContext.class,_				ConfigurableWebApplicationContext.class, contextSupplier)__	};factory,method,to,create,a,new,link,assertable,web,application,context,instance,param,context,supplier,a,supplier,that,will,either,return,a,fully,configured,link,configurable,web,application,context,or,throw,an,exception,if,the,context,fails,to,start,return,a,link,assertable,web,application,context,instance;static,assertable,web,application,context,get,supplier,extends,configurable,web,application,context,context,supplier,return,application,context,assert,provider,get,assertable,web,application,context,class,configurable,web,application,context,class,context,supplier
