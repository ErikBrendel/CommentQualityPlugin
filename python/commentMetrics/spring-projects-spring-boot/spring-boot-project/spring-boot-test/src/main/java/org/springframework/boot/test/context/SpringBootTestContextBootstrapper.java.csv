# id;timestamp;commentText;codeText;commentWords;codeWords
SpringBootTestContextBootstrapper -> protected WebEnvironment getWebEnvironment(Class<?> testClass);1507173536;Return the {@link WebEnvironment} type for this test or null if undefined._@param testClass the source test class_@return the {@link WebEnvironment} or {@code null};protected WebEnvironment getWebEnvironment(Class<?> testClass) {_		SpringBootTest annotation = getAnnotation(testClass)__		return (annotation == null ? null : annotation.webEnvironment())__	};return,the,link,web,environment,type,for,this,test,or,null,if,undefined,param,test,class,the,source,test,class,return,the,link,web,environment,or,code,null;protected,web,environment,get,web,environment,class,test,class,spring,boot,test,annotation,get,annotation,test,class,return,annotation,null,null,annotation,web,environment
SpringBootTestContextBootstrapper -> protected WebEnvironment getWebEnvironment(Class<?> testClass);1519362690;Return the {@link WebEnvironment} type for this test or null if undefined._@param testClass the source test class_@return the {@link WebEnvironment} or {@code null};protected WebEnvironment getWebEnvironment(Class<?> testClass) {_		SpringBootTest annotation = getAnnotation(testClass)__		return (annotation == null ? null : annotation.webEnvironment())__	};return,the,link,web,environment,type,for,this,test,or,null,if,undefined,param,test,class,the,source,test,class,return,the,link,web,environment,or,code,null;protected,web,environment,get,web,environment,class,test,class,spring,boot,test,annotation,get,annotation,test,class,return,annotation,null,null,annotation,web,environment
SpringBootTestContextBootstrapper -> protected WebEnvironment getWebEnvironment(Class<?> testClass);1525376698;Return the {@link WebEnvironment} type for this test or null if undefined._@param testClass the source test class_@return the {@link WebEnvironment} or {@code null};protected WebEnvironment getWebEnvironment(Class<?> testClass) {_		SpringBootTest annotation = getAnnotation(testClass)__		return (annotation != null ? annotation.webEnvironment() : null)__	};return,the,link,web,environment,type,for,this,test,or,null,if,undefined,param,test,class,the,source,test,class,return,the,link,web,environment,or,code,null;protected,web,environment,get,web,environment,class,test,class,spring,boot,test,annotation,get,annotation,test,class,return,annotation,null,annotation,web,environment,null
SpringBootTestContextBootstrapper -> protected WebEnvironment getWebEnvironment(Class<?> testClass);1529485904;Return the {@link WebEnvironment} type for this test or null if undefined._@param testClass the source test class_@return the {@link WebEnvironment} or {@code null};protected WebEnvironment getWebEnvironment(Class<?> testClass) {_		SpringBootTest annotation = getAnnotation(testClass)__		return (annotation != null ? annotation.webEnvironment() : null)__	};return,the,link,web,environment,type,for,this,test,or,null,if,undefined,param,test,class,the,source,test,class,return,the,link,web,environment,or,code,null;protected,web,environment,get,web,environment,class,test,class,spring,boot,test,annotation,get,annotation,test,class,return,annotation,null,annotation,web,environment,null
SpringBootTestContextBootstrapper -> protected WebEnvironment getWebEnvironment(Class<?> testClass);1532618598;Return the {@link WebEnvironment} type for this test or null if undefined._@param testClass the source test class_@return the {@link WebEnvironment} or {@code null};protected WebEnvironment getWebEnvironment(Class<?> testClass) {_		SpringBootTest annotation = getAnnotation(testClass)__		return (annotation != null ? annotation.webEnvironment() : null)__	};return,the,link,web,environment,type,for,this,test,or,null,if,undefined,param,test,class,the,source,test,class,return,the,link,web,environment,or,code,null;protected,web,environment,get,web,environment,class,test,class,spring,boot,test,annotation,get,annotation,test,class,return,annotation,null,annotation,web,environment,null
SpringBootTestContextBootstrapper -> protected WebEnvironment getWebEnvironment(Class<?> testClass);1532738143;Return the {@link WebEnvironment} type for this test or null if undefined._@param testClass the source test class_@return the {@link WebEnvironment} or {@code null};protected WebEnvironment getWebEnvironment(Class<?> testClass) {_		SpringBootTest annotation = getAnnotation(testClass)__		return (annotation != null) ? annotation.webEnvironment() : null__	};return,the,link,web,environment,type,for,this,test,or,null,if,undefined,param,test,class,the,source,test,class,return,the,link,web,environment,or,code,null;protected,web,environment,get,web,environment,class,test,class,spring,boot,test,annotation,get,annotation,test,class,return,annotation,null,annotation,web,environment,null
SpringBootTestContextBootstrapper -> protected final MergedContextConfiguration createModifiedConfig( 			MergedContextConfiguration mergedConfig, Class<?>[] classes, 			String[] propertySourceProperties);1507173536;Create a new {@link MergedContextConfiguration} with different classes and_properties._@param mergedConfig the source config_@param classes the replacement classes_@param propertySourceProperties the replacement properties_@return a new {@link MergedContextConfiguration};protected final MergedContextConfiguration createModifiedConfig(_			MergedContextConfiguration mergedConfig, Class<?>[] classes,_			String[] propertySourceProperties) {_		return new MergedContextConfiguration(mergedConfig.getTestClass(),_				mergedConfig.getLocations(), classes,_				mergedConfig.getContextInitializerClasses(),_				mergedConfig.getActiveProfiles(),_				mergedConfig.getPropertySourceLocations(), propertySourceProperties,_				mergedConfig.getContextCustomizers(), mergedConfig.getContextLoader(),_				getCacheAwareContextLoaderDelegate(), mergedConfig.getParent())__	};create,a,new,link,merged,context,configuration,with,different,classes,and,properties,param,merged,config,the,source,config,param,classes,the,replacement,classes,param,property,source,properties,the,replacement,properties,return,a,new,link,merged,context,configuration;protected,final,merged,context,configuration,create,modified,config,merged,context,configuration,merged,config,class,classes,string,property,source,properties,return,new,merged,context,configuration,merged,config,get,test,class,merged,config,get,locations,classes,merged,config,get,context,initializer,classes,merged,config,get,active,profiles,merged,config,get,property,source,locations,property,source,properties,merged,config,get,context,customizers,merged,config,get,context,loader,get,cache,aware,context,loader,delegate,merged,config,get,parent
SpringBootTestContextBootstrapper -> protected final MergedContextConfiguration createModifiedConfig( 			MergedContextConfiguration mergedConfig, Class<?>[] classes, 			String[] propertySourceProperties);1519362690;Create a new {@link MergedContextConfiguration} with different classes and_properties._@param mergedConfig the source config_@param classes the replacement classes_@param propertySourceProperties the replacement properties_@return a new {@link MergedContextConfiguration};protected final MergedContextConfiguration createModifiedConfig(_			MergedContextConfiguration mergedConfig, Class<?>[] classes,_			String[] propertySourceProperties) {_		return new MergedContextConfiguration(mergedConfig.getTestClass(),_				mergedConfig.getLocations(), classes,_				mergedConfig.getContextInitializerClasses(),_				mergedConfig.getActiveProfiles(),_				mergedConfig.getPropertySourceLocations(), propertySourceProperties,_				mergedConfig.getContextCustomizers(), mergedConfig.getContextLoader(),_				getCacheAwareContextLoaderDelegate(), mergedConfig.getParent())__	};create,a,new,link,merged,context,configuration,with,different,classes,and,properties,param,merged,config,the,source,config,param,classes,the,replacement,classes,param,property,source,properties,the,replacement,properties,return,a,new,link,merged,context,configuration;protected,final,merged,context,configuration,create,modified,config,merged,context,configuration,merged,config,class,classes,string,property,source,properties,return,new,merged,context,configuration,merged,config,get,test,class,merged,config,get,locations,classes,merged,config,get,context,initializer,classes,merged,config,get,active,profiles,merged,config,get,property,source,locations,property,source,properties,merged,config,get,context,customizers,merged,config,get,context,loader,get,cache,aware,context,loader,delegate,merged,config,get,parent
SpringBootTestContextBootstrapper -> protected final MergedContextConfiguration createModifiedConfig( 			MergedContextConfiguration mergedConfig, Class<?>[] classes, 			String[] propertySourceProperties);1525376698;Create a new {@link MergedContextConfiguration} with different classes and_properties._@param mergedConfig the source config_@param classes the replacement classes_@param propertySourceProperties the replacement properties_@return a new {@link MergedContextConfiguration};protected final MergedContextConfiguration createModifiedConfig(_			MergedContextConfiguration mergedConfig, Class<?>[] classes,_			String[] propertySourceProperties) {_		return new MergedContextConfiguration(mergedConfig.getTestClass(),_				mergedConfig.getLocations(), classes,_				mergedConfig.getContextInitializerClasses(),_				mergedConfig.getActiveProfiles(),_				mergedConfig.getPropertySourceLocations(), propertySourceProperties,_				mergedConfig.getContextCustomizers(), mergedConfig.getContextLoader(),_				getCacheAwareContextLoaderDelegate(), mergedConfig.getParent())__	};create,a,new,link,merged,context,configuration,with,different,classes,and,properties,param,merged,config,the,source,config,param,classes,the,replacement,classes,param,property,source,properties,the,replacement,properties,return,a,new,link,merged,context,configuration;protected,final,merged,context,configuration,create,modified,config,merged,context,configuration,merged,config,class,classes,string,property,source,properties,return,new,merged,context,configuration,merged,config,get,test,class,merged,config,get,locations,classes,merged,config,get,context,initializer,classes,merged,config,get,active,profiles,merged,config,get,property,source,locations,property,source,properties,merged,config,get,context,customizers,merged,config,get,context,loader,get,cache,aware,context,loader,delegate,merged,config,get,parent
SpringBootTestContextBootstrapper -> protected final MergedContextConfiguration createModifiedConfig( 			MergedContextConfiguration mergedConfig, Class<?>[] classes, 			String[] propertySourceProperties);1529485904;Create a new {@link MergedContextConfiguration} with different classes and_properties._@param mergedConfig the source config_@param classes the replacement classes_@param propertySourceProperties the replacement properties_@return a new {@link MergedContextConfiguration};protected final MergedContextConfiguration createModifiedConfig(_			MergedContextConfiguration mergedConfig, Class<?>[] classes,_			String[] propertySourceProperties) {_		return new MergedContextConfiguration(mergedConfig.getTestClass(),_				mergedConfig.getLocations(), classes,_				mergedConfig.getContextInitializerClasses(),_				mergedConfig.getActiveProfiles(),_				mergedConfig.getPropertySourceLocations(), propertySourceProperties,_				mergedConfig.getContextCustomizers(), mergedConfig.getContextLoader(),_				getCacheAwareContextLoaderDelegate(), mergedConfig.getParent())__	};create,a,new,link,merged,context,configuration,with,different,classes,and,properties,param,merged,config,the,source,config,param,classes,the,replacement,classes,param,property,source,properties,the,replacement,properties,return,a,new,link,merged,context,configuration;protected,final,merged,context,configuration,create,modified,config,merged,context,configuration,merged,config,class,classes,string,property,source,properties,return,new,merged,context,configuration,merged,config,get,test,class,merged,config,get,locations,classes,merged,config,get,context,initializer,classes,merged,config,get,active,profiles,merged,config,get,property,source,locations,property,source,properties,merged,config,get,context,customizers,merged,config,get,context,loader,get,cache,aware,context,loader,delegate,merged,config,get,parent
SpringBootTestContextBootstrapper -> protected final MergedContextConfiguration createModifiedConfig( 			MergedContextConfiguration mergedConfig, Class<?>[] classes, 			String[] propertySourceProperties);1532618598;Create a new {@link MergedContextConfiguration} with different classes and_properties._@param mergedConfig the source config_@param classes the replacement classes_@param propertySourceProperties the replacement properties_@return a new {@link MergedContextConfiguration};protected final MergedContextConfiguration createModifiedConfig(_			MergedContextConfiguration mergedConfig, Class<?>[] classes,_			String[] propertySourceProperties) {_		return new MergedContextConfiguration(mergedConfig.getTestClass(),_				mergedConfig.getLocations(), classes,_				mergedConfig.getContextInitializerClasses(),_				mergedConfig.getActiveProfiles(),_				mergedConfig.getPropertySourceLocations(), propertySourceProperties,_				mergedConfig.getContextCustomizers(), mergedConfig.getContextLoader(),_				getCacheAwareContextLoaderDelegate(), mergedConfig.getParent())__	};create,a,new,link,merged,context,configuration,with,different,classes,and,properties,param,merged,config,the,source,config,param,classes,the,replacement,classes,param,property,source,properties,the,replacement,properties,return,a,new,link,merged,context,configuration;protected,final,merged,context,configuration,create,modified,config,merged,context,configuration,merged,config,class,classes,string,property,source,properties,return,new,merged,context,configuration,merged,config,get,test,class,merged,config,get,locations,classes,merged,config,get,context,initializer,classes,merged,config,get,active,profiles,merged,config,get,property,source,locations,property,source,properties,merged,config,get,context,customizers,merged,config,get,context,loader,get,cache,aware,context,loader,delegate,merged,config,get,parent
SpringBootTestContextBootstrapper -> protected final MergedContextConfiguration createModifiedConfig( 			MergedContextConfiguration mergedConfig, Class<?>[] classes, 			String[] propertySourceProperties);1532738143;Create a new {@link MergedContextConfiguration} with different classes and_properties._@param mergedConfig the source config_@param classes the replacement classes_@param propertySourceProperties the replacement properties_@return a new {@link MergedContextConfiguration};protected final MergedContextConfiguration createModifiedConfig(_			MergedContextConfiguration mergedConfig, Class<?>[] classes,_			String[] propertySourceProperties) {_		return new MergedContextConfiguration(mergedConfig.getTestClass(),_				mergedConfig.getLocations(), classes,_				mergedConfig.getContextInitializerClasses(),_				mergedConfig.getActiveProfiles(),_				mergedConfig.getPropertySourceLocations(), propertySourceProperties,_				mergedConfig.getContextCustomizers(), mergedConfig.getContextLoader(),_				getCacheAwareContextLoaderDelegate(), mergedConfig.getParent())__	};create,a,new,link,merged,context,configuration,with,different,classes,and,properties,param,merged,config,the,source,config,param,classes,the,replacement,classes,param,property,source,properties,the,replacement,properties,return,a,new,link,merged,context,configuration;protected,final,merged,context,configuration,create,modified,config,merged,context,configuration,merged,config,class,classes,string,property,source,properties,return,new,merged,context,configuration,merged,config,get,test,class,merged,config,get,locations,classes,merged,config,get,context,initializer,classes,merged,config,get,active,profiles,merged,config,get,property,source,locations,property,source,properties,merged,config,get,context,customizers,merged,config,get,context,loader,get,cache,aware,context,loader,delegate,merged,config,get,parent
SpringBootTestContextBootstrapper -> protected final MergedContextConfiguration createModifiedConfig( 			MergedContextConfiguration mergedConfig, Class<?>[] classes);1507173536;Create a new {@link MergedContextConfiguration} with different classes._@param mergedConfig the source config_@param classes the replacement classes_@return a new {@link MergedContextConfiguration};protected final MergedContextConfiguration createModifiedConfig(_			MergedContextConfiguration mergedConfig, Class<?>[] classes) {_		return createModifiedConfig(mergedConfig, classes,_				mergedConfig.getPropertySourceProperties())__	};create,a,new,link,merged,context,configuration,with,different,classes,param,merged,config,the,source,config,param,classes,the,replacement,classes,return,a,new,link,merged,context,configuration;protected,final,merged,context,configuration,create,modified,config,merged,context,configuration,merged,config,class,classes,return,create,modified,config,merged,config,classes,merged,config,get,property,source,properties
SpringBootTestContextBootstrapper -> protected final MergedContextConfiguration createModifiedConfig( 			MergedContextConfiguration mergedConfig, Class<?>[] classes);1519362690;Create a new {@link MergedContextConfiguration} with different classes._@param mergedConfig the source config_@param classes the replacement classes_@return a new {@link MergedContextConfiguration};protected final MergedContextConfiguration createModifiedConfig(_			MergedContextConfiguration mergedConfig, Class<?>[] classes) {_		return createModifiedConfig(mergedConfig, classes,_				mergedConfig.getPropertySourceProperties())__	};create,a,new,link,merged,context,configuration,with,different,classes,param,merged,config,the,source,config,param,classes,the,replacement,classes,return,a,new,link,merged,context,configuration;protected,final,merged,context,configuration,create,modified,config,merged,context,configuration,merged,config,class,classes,return,create,modified,config,merged,config,classes,merged,config,get,property,source,properties
SpringBootTestContextBootstrapper -> protected final MergedContextConfiguration createModifiedConfig( 			MergedContextConfiguration mergedConfig, Class<?>[] classes);1525376698;Create a new {@link MergedContextConfiguration} with different classes._@param mergedConfig the source config_@param classes the replacement classes_@return a new {@link MergedContextConfiguration};protected final MergedContextConfiguration createModifiedConfig(_			MergedContextConfiguration mergedConfig, Class<?>[] classes) {_		return createModifiedConfig(mergedConfig, classes,_				mergedConfig.getPropertySourceProperties())__	};create,a,new,link,merged,context,configuration,with,different,classes,param,merged,config,the,source,config,param,classes,the,replacement,classes,return,a,new,link,merged,context,configuration;protected,final,merged,context,configuration,create,modified,config,merged,context,configuration,merged,config,class,classes,return,create,modified,config,merged,config,classes,merged,config,get,property,source,properties
SpringBootTestContextBootstrapper -> protected final MergedContextConfiguration createModifiedConfig( 			MergedContextConfiguration mergedConfig, Class<?>[] classes);1529485904;Create a new {@link MergedContextConfiguration} with different classes._@param mergedConfig the source config_@param classes the replacement classes_@return a new {@link MergedContextConfiguration};protected final MergedContextConfiguration createModifiedConfig(_			MergedContextConfiguration mergedConfig, Class<?>[] classes) {_		return createModifiedConfig(mergedConfig, classes,_				mergedConfig.getPropertySourceProperties())__	};create,a,new,link,merged,context,configuration,with,different,classes,param,merged,config,the,source,config,param,classes,the,replacement,classes,return,a,new,link,merged,context,configuration;protected,final,merged,context,configuration,create,modified,config,merged,context,configuration,merged,config,class,classes,return,create,modified,config,merged,config,classes,merged,config,get,property,source,properties
SpringBootTestContextBootstrapper -> protected final MergedContextConfiguration createModifiedConfig( 			MergedContextConfiguration mergedConfig, Class<?>[] classes);1532618598;Create a new {@link MergedContextConfiguration} with different classes._@param mergedConfig the source config_@param classes the replacement classes_@return a new {@link MergedContextConfiguration};protected final MergedContextConfiguration createModifiedConfig(_			MergedContextConfiguration mergedConfig, Class<?>[] classes) {_		return createModifiedConfig(mergedConfig, classes,_				mergedConfig.getPropertySourceProperties())__	};create,a,new,link,merged,context,configuration,with,different,classes,param,merged,config,the,source,config,param,classes,the,replacement,classes,return,a,new,link,merged,context,configuration;protected,final,merged,context,configuration,create,modified,config,merged,context,configuration,merged,config,class,classes,return,create,modified,config,merged,config,classes,merged,config,get,property,source,properties
SpringBootTestContextBootstrapper -> protected final MergedContextConfiguration createModifiedConfig( 			MergedContextConfiguration mergedConfig, Class<?>[] classes);1532738143;Create a new {@link MergedContextConfiguration} with different classes._@param mergedConfig the source config_@param classes the replacement classes_@return a new {@link MergedContextConfiguration};protected final MergedContextConfiguration createModifiedConfig(_			MergedContextConfiguration mergedConfig, Class<?>[] classes) {_		return createModifiedConfig(mergedConfig, classes,_				mergedConfig.getPropertySourceProperties())__	};create,a,new,link,merged,context,configuration,with,different,classes,param,merged,config,the,source,config,param,classes,the,replacement,classes,return,a,new,link,merged,context,configuration;protected,final,merged,context,configuration,create,modified,config,merged,context,configuration,merged,config,class,classes,return,create,modified,config,merged,config,classes,merged,config,get,property,source,properties
SpringBootTestContextBootstrapper -> protected String getDifferentiatorPropertySourceProperty();1507173536;Return a "differentiator" property to ensure that there is something to_differentiate regular tests and bootstrapped tests. Without this property a cached_context could be returned that wasn't created by this bootstrapper. By default uses_the bootstrapper class as a property._@return the differentiator or {@code null};protected String getDifferentiatorPropertySourceProperty() {_		return getClass().getName() + "=true"__	};return,a,differentiator,property,to,ensure,that,there,is,something,to,differentiate,regular,tests,and,bootstrapped,tests,without,this,property,a,cached,context,could,be,returned,that,wasn,t,created,by,this,bootstrapper,by,default,uses,the,bootstrapper,class,as,a,property,return,the,differentiator,or,code,null;protected,string,get,differentiator,property,source,property,return,get,class,get,name,true
SpringBootTestContextBootstrapper -> protected String getDifferentiatorPropertySourceProperty();1519362690;Return a "differentiator" property to ensure that there is something to_differentiate regular tests and bootstrapped tests. Without this property a cached_context could be returned that wasn't created by this bootstrapper. By default uses_the bootstrapper class as a property._@return the differentiator or {@code null};protected String getDifferentiatorPropertySourceProperty() {_		return getClass().getName() + "=true"__	};return,a,differentiator,property,to,ensure,that,there,is,something,to,differentiate,regular,tests,and,bootstrapped,tests,without,this,property,a,cached,context,could,be,returned,that,wasn,t,created,by,this,bootstrapper,by,default,uses,the,bootstrapper,class,as,a,property,return,the,differentiator,or,code,null;protected,string,get,differentiator,property,source,property,return,get,class,get,name,true
SpringBootTestContextBootstrapper -> protected String getDifferentiatorPropertySourceProperty();1525376698;Return a "differentiator" property to ensure that there is something to_differentiate regular tests and bootstrapped tests. Without this property a cached_context could be returned that wasn't created by this bootstrapper. By default uses_the bootstrapper class as a property._@return the differentiator or {@code null};protected String getDifferentiatorPropertySourceProperty() {_		return getClass().getName() + "=true"__	};return,a,differentiator,property,to,ensure,that,there,is,something,to,differentiate,regular,tests,and,bootstrapped,tests,without,this,property,a,cached,context,could,be,returned,that,wasn,t,created,by,this,bootstrapper,by,default,uses,the,bootstrapper,class,as,a,property,return,the,differentiator,or,code,null;protected,string,get,differentiator,property,source,property,return,get,class,get,name,true
SpringBootTestContextBootstrapper -> protected String getDifferentiatorPropertySourceProperty();1529485904;Return a "differentiator" property to ensure that there is something to_differentiate regular tests and bootstrapped tests. Without this property a cached_context could be returned that wasn't created by this bootstrapper. By default uses_the bootstrapper class as a property._@return the differentiator or {@code null};protected String getDifferentiatorPropertySourceProperty() {_		return getClass().getName() + "=true"__	};return,a,differentiator,property,to,ensure,that,there,is,something,to,differentiate,regular,tests,and,bootstrapped,tests,without,this,property,a,cached,context,could,be,returned,that,wasn,t,created,by,this,bootstrapper,by,default,uses,the,bootstrapper,class,as,a,property,return,the,differentiator,or,code,null;protected,string,get,differentiator,property,source,property,return,get,class,get,name,true
SpringBootTestContextBootstrapper -> protected String getDifferentiatorPropertySourceProperty();1532618598;Return a "differentiator" property to ensure that there is something to_differentiate regular tests and bootstrapped tests. Without this property a cached_context could be returned that wasn't created by this bootstrapper. By default uses_the bootstrapper class as a property._@return the differentiator or {@code null};protected String getDifferentiatorPropertySourceProperty() {_		return getClass().getName() + "=true"__	};return,a,differentiator,property,to,ensure,that,there,is,something,to,differentiate,regular,tests,and,bootstrapped,tests,without,this,property,a,cached,context,could,be,returned,that,wasn,t,created,by,this,bootstrapper,by,default,uses,the,bootstrapper,class,as,a,property,return,the,differentiator,or,code,null;protected,string,get,differentiator,property,source,property,return,get,class,get,name,true
SpringBootTestContextBootstrapper -> protected String getDifferentiatorPropertySourceProperty();1532738143;Return a "differentiator" property to ensure that there is something to_differentiate regular tests and bootstrapped tests. Without this property a cached_context could be returned that wasn't created by this bootstrapper. By default uses_the bootstrapper class as a property._@return the differentiator or {@code null};protected String getDifferentiatorPropertySourceProperty() {_		return getClass().getName() + "=true"__	};return,a,differentiator,property,to,ensure,that,there,is,something,to,differentiate,regular,tests,and,bootstrapped,tests,without,this,property,a,cached,context,could,be,returned,that,wasn,t,created,by,this,bootstrapper,by,default,uses,the,bootstrapper,class,as,a,property,return,the,differentiator,or,code,null;protected,string,get,differentiator,property,source,property,return,get,class,get,name,true
SpringBootTestContextBootstrapper -> protected void processPropertySourceProperties( 			MergedContextConfiguration mergedConfig, 			List<String> propertySourceProperties);1507173536;Post process the property source properties, adding or removing elements as_required._@param mergedConfig the merged context configuration_@param propertySourceProperties the property source properties to process;protected void processPropertySourceProperties(_			MergedContextConfiguration mergedConfig,_			List<String> propertySourceProperties) {_		Class<?> testClass = mergedConfig.getTestClass()__		String[] properties = getProperties(testClass)__		if (!ObjectUtils.isEmpty(properties)) {_			_			_			propertySourceProperties.addAll(0, Arrays.asList(properties))__		}_		if (getWebEnvironment(testClass) == WebEnvironment.RANDOM_PORT) {_			propertySourceProperties.add("server.port=0")__		}_	};post,process,the,property,source,properties,adding,or,removing,elements,as,required,param,merged,config,the,merged,context,configuration,param,property,source,properties,the,property,source,properties,to,process;protected,void,process,property,source,properties,merged,context,configuration,merged,config,list,string,property,source,properties,class,test,class,merged,config,get,test,class,string,properties,get,properties,test,class,if,object,utils,is,empty,properties,property,source,properties,add,all,0,arrays,as,list,properties,if,get,web,environment,test,class,web,environment,property,source,properties,add,server,port,0
SpringBootTestContextBootstrapper -> protected void processPropertySourceProperties( 			MergedContextConfiguration mergedConfig, 			List<String> propertySourceProperties);1519362690;Post process the property source properties, adding or removing elements as_required._@param mergedConfig the merged context configuration_@param propertySourceProperties the property source properties to process;protected void processPropertySourceProperties(_			MergedContextConfiguration mergedConfig,_			List<String> propertySourceProperties) {_		Class<?> testClass = mergedConfig.getTestClass()__		String[] properties = getProperties(testClass)__		if (!ObjectUtils.isEmpty(properties)) {_			_			_			propertySourceProperties.addAll(0, Arrays.asList(properties))__		}_		if (getWebEnvironment(testClass) == WebEnvironment.RANDOM_PORT) {_			propertySourceProperties.add("server.port=0")__		}_	};post,process,the,property,source,properties,adding,or,removing,elements,as,required,param,merged,config,the,merged,context,configuration,param,property,source,properties,the,property,source,properties,to,process;protected,void,process,property,source,properties,merged,context,configuration,merged,config,list,string,property,source,properties,class,test,class,merged,config,get,test,class,string,properties,get,properties,test,class,if,object,utils,is,empty,properties,property,source,properties,add,all,0,arrays,as,list,properties,if,get,web,environment,test,class,web,environment,property,source,properties,add,server,port,0
SpringBootTestContextBootstrapper -> protected void processPropertySourceProperties( 			MergedContextConfiguration mergedConfig, 			List<String> propertySourceProperties);1525376698;Post process the property source properties, adding or removing elements as_required._@param mergedConfig the merged context configuration_@param propertySourceProperties the property source properties to process;protected void processPropertySourceProperties(_			MergedContextConfiguration mergedConfig,_			List<String> propertySourceProperties) {_		Class<?> testClass = mergedConfig.getTestClass()__		String[] properties = getProperties(testClass)__		if (!ObjectUtils.isEmpty(properties)) {_			_			_			propertySourceProperties.addAll(0, Arrays.asList(properties))__		}_		if (getWebEnvironment(testClass) == WebEnvironment.RANDOM_PORT) {_			propertySourceProperties.add("server.port=0")__		}_	};post,process,the,property,source,properties,adding,or,removing,elements,as,required,param,merged,config,the,merged,context,configuration,param,property,source,properties,the,property,source,properties,to,process;protected,void,process,property,source,properties,merged,context,configuration,merged,config,list,string,property,source,properties,class,test,class,merged,config,get,test,class,string,properties,get,properties,test,class,if,object,utils,is,empty,properties,property,source,properties,add,all,0,arrays,as,list,properties,if,get,web,environment,test,class,web,environment,property,source,properties,add,server,port,0
SpringBootTestContextBootstrapper -> protected void processPropertySourceProperties( 			MergedContextConfiguration mergedConfig, 			List<String> propertySourceProperties);1529485904;Post process the property source properties, adding or removing elements as_required._@param mergedConfig the merged context configuration_@param propertySourceProperties the property source properties to process;protected void processPropertySourceProperties(_			MergedContextConfiguration mergedConfig,_			List<String> propertySourceProperties) {_		Class<?> testClass = mergedConfig.getTestClass()__		String[] properties = getProperties(testClass)__		if (!ObjectUtils.isEmpty(properties)) {_			_			_			propertySourceProperties.addAll(0, Arrays.asList(properties))__		}_		if (getWebEnvironment(testClass) == WebEnvironment.RANDOM_PORT) {_			propertySourceProperties.add("server.port=0")__		}_	};post,process,the,property,source,properties,adding,or,removing,elements,as,required,param,merged,config,the,merged,context,configuration,param,property,source,properties,the,property,source,properties,to,process;protected,void,process,property,source,properties,merged,context,configuration,merged,config,list,string,property,source,properties,class,test,class,merged,config,get,test,class,string,properties,get,properties,test,class,if,object,utils,is,empty,properties,property,source,properties,add,all,0,arrays,as,list,properties,if,get,web,environment,test,class,web,environment,property,source,properties,add,server,port,0
SpringBootTestContextBootstrapper -> protected void processPropertySourceProperties( 			MergedContextConfiguration mergedConfig, 			List<String> propertySourceProperties);1532618598;Post process the property source properties, adding or removing elements as_required._@param mergedConfig the merged context configuration_@param propertySourceProperties the property source properties to process;protected void processPropertySourceProperties(_			MergedContextConfiguration mergedConfig,_			List<String> propertySourceProperties) {_		Class<?> testClass = mergedConfig.getTestClass()__		String[] properties = getProperties(testClass)__		if (!ObjectUtils.isEmpty(properties)) {_			_			_			propertySourceProperties.addAll(0, Arrays.asList(properties))__		}_		if (getWebEnvironment(testClass) == WebEnvironment.RANDOM_PORT) {_			propertySourceProperties.add("server.port=0")__		}_	};post,process,the,property,source,properties,adding,or,removing,elements,as,required,param,merged,config,the,merged,context,configuration,param,property,source,properties,the,property,source,properties,to,process;protected,void,process,property,source,properties,merged,context,configuration,merged,config,list,string,property,source,properties,class,test,class,merged,config,get,test,class,string,properties,get,properties,test,class,if,object,utils,is,empty,properties,property,source,properties,add,all,0,arrays,as,list,properties,if,get,web,environment,test,class,web,environment,property,source,properties,add,server,port,0
SpringBootTestContextBootstrapper -> protected void processPropertySourceProperties( 			MergedContextConfiguration mergedConfig, 			List<String> propertySourceProperties);1532738143;Post process the property source properties, adding or removing elements as_required._@param mergedConfig the merged context configuration_@param propertySourceProperties the property source properties to process;protected void processPropertySourceProperties(_			MergedContextConfiguration mergedConfig,_			List<String> propertySourceProperties) {_		Class<?> testClass = mergedConfig.getTestClass()__		String[] properties = getProperties(testClass)__		if (!ObjectUtils.isEmpty(properties)) {_			_			_			propertySourceProperties.addAll(0, Arrays.asList(properties))__		}_		if (getWebEnvironment(testClass) == WebEnvironment.RANDOM_PORT) {_			propertySourceProperties.add("server.port=0")__		}_	};post,process,the,property,source,properties,adding,or,removing,elements,as,required,param,merged,config,the,merged,context,configuration,param,property,source,properties,the,property,source,properties,to,process;protected,void,process,property,source,properties,merged,context,configuration,merged,config,list,string,property,source,properties,class,test,class,merged,config,get,test,class,string,properties,get,properties,test,class,if,object,utils,is,empty,properties,property,source,properties,add,all,0,arrays,as,list,properties,if,get,web,environment,test,class,web,environment,property,source,properties,add,server,port,0
