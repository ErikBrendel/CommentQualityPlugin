# id;timestamp;commentText;codeText;commentWords;codeWords
WebApplicationContextRunner -> public WebApplicationContextRunner( 			Supplier<ConfigurableWebApplicationContext> contextFactory);1507173536;Create a new {@link WebApplicationContextRunner} instance using the specified_{@code contextFactory} as the underlying source._@param contextFactory a supplier that returns a new instance on each call;public WebApplicationContextRunner(_			Supplier<ConfigurableWebApplicationContext> contextFactory) {_		super(contextFactory)__	};create,a,new,link,web,application,context,runner,instance,using,the,specified,code,context,factory,as,the,underlying,source,param,context,factory,a,supplier,that,returns,a,new,instance,on,each,call;public,web,application,context,runner,supplier,configurable,web,application,context,context,factory,super,context,factory
WebApplicationContextRunner -> public WebApplicationContextRunner( 			Supplier<ConfigurableWebApplicationContext> contextFactory);1508246996;Create a new {@link WebApplicationContextRunner} instance using the specified_{@code contextFactory} as the underlying source._@param contextFactory a supplier that returns a new instance on each call;public WebApplicationContextRunner(_			Supplier<ConfigurableWebApplicationContext> contextFactory) {_		super(contextFactory)__	};create,a,new,link,web,application,context,runner,instance,using,the,specified,code,context,factory,as,the,underlying,source,param,context,factory,a,supplier,that,returns,a,new,instance,on,each,call;public,web,application,context,runner,supplier,configurable,web,application,context,context,factory,super,context,factory
WebApplicationContextRunner -> public WebApplicationContextRunner( 			Supplier<ConfigurableWebApplicationContext> contextFactory);1518486593;Create a new {@link WebApplicationContextRunner} instance using the specified_{@code contextFactory} as the underlying source._@param contextFactory a supplier that returns a new instance on each call;public WebApplicationContextRunner(_			Supplier<ConfigurableWebApplicationContext> contextFactory) {_		super(contextFactory)__	};create,a,new,link,web,application,context,runner,instance,using,the,specified,code,context,factory,as,the,underlying,source,param,context,factory,a,supplier,that,returns,a,new,instance,on,each,call;public,web,application,context,runner,supplier,configurable,web,application,context,context,factory,super,context,factory
WebApplicationContextRunner -> public WebApplicationContextRunner( 			Supplier<ConfigurableWebApplicationContext> contextFactory);1525416882;Create a new {@link WebApplicationContextRunner} instance using the specified_{@code contextFactory} as the underlying source._@param contextFactory a supplier that returns a new instance on each call;public WebApplicationContextRunner(_			Supplier<ConfigurableWebApplicationContext> contextFactory) {_		super(contextFactory)__	};create,a,new,link,web,application,context,runner,instance,using,the,specified,code,context,factory,as,the,underlying,source,param,context,factory,a,supplier,that,returns,a,new,instance,on,each,call;public,web,application,context,runner,supplier,configurable,web,application,context,context,factory,super,context,factory
WebApplicationContextRunner -> public WebApplicationContextRunner( 			Supplier<ConfigurableWebApplicationContext> contextFactory);1532738143;Create a new {@link WebApplicationContextRunner} instance using the specified_{@code contextFactory} as the underlying source._@param contextFactory a supplier that returns a new instance on each call;public WebApplicationContextRunner(_			Supplier<ConfigurableWebApplicationContext> contextFactory) {_		super(contextFactory)__	};create,a,new,link,web,application,context,runner,instance,using,the,specified,code,context,factory,as,the,underlying,source,param,context,factory,a,supplier,that,returns,a,new,instance,on,each,call;public,web,application,context,runner,supplier,configurable,web,application,context,context,factory,super,context,factory
WebApplicationContextRunner -> public WebApplicationContextRunner( 			Supplier<ConfigurableWebApplicationContext> contextFactory);1537219838;Create a new {@link WebApplicationContextRunner} instance using the specified_{@code contextFactory} as the underlying source._@param contextFactory a supplier that returns a new instance on each call;public WebApplicationContextRunner(_			Supplier<ConfigurableWebApplicationContext> contextFactory) {_		super(contextFactory)__	};create,a,new,link,web,application,context,runner,instance,using,the,specified,code,context,factory,as,the,underlying,source,param,context,factory,a,supplier,that,returns,a,new,instance,on,each,call;public,web,application,context,runner,supplier,configurable,web,application,context,context,factory,super,context,factory
WebApplicationContextRunner -> public WebApplicationContextRunner();1507173536;Create a new {@link WebApplicationContextRunner} instance using an_{@link AnnotationConfigWebApplicationContext} with a {@link MockServletContext} as_the underlying source._@see #withMockServletContext(Supplier);public WebApplicationContextRunner() {_		this(withMockServletContext(AnnotationConfigWebApplicationContext::new))__	};create,a,new,link,web,application,context,runner,instance,using,an,link,annotation,config,web,application,context,with,a,link,mock,servlet,context,as,the,underlying,source,see,with,mock,servlet,context,supplier;public,web,application,context,runner,this,with,mock,servlet,context,annotation,config,web,application,context,new
WebApplicationContextRunner -> public WebApplicationContextRunner();1508246996;Create a new {@link WebApplicationContextRunner} instance using an_{@link AnnotationConfigWebApplicationContext} with a {@link MockServletContext} as_the underlying source._@see #withMockServletContext(Supplier);public WebApplicationContextRunner() {_		this(withMockServletContext(AnnotationConfigWebApplicationContext::new))__	};create,a,new,link,web,application,context,runner,instance,using,an,link,annotation,config,web,application,context,with,a,link,mock,servlet,context,as,the,underlying,source,see,with,mock,servlet,context,supplier;public,web,application,context,runner,this,with,mock,servlet,context,annotation,config,web,application,context,new
WebApplicationContextRunner -> public WebApplicationContextRunner();1518486593;Create a new {@link WebApplicationContextRunner} instance using an_{@link AnnotationConfigWebApplicationContext} with a {@link MockServletContext} as_the underlying source._@see #withMockServletContext(Supplier);public WebApplicationContextRunner() {_		this(withMockServletContext(AnnotationConfigWebApplicationContext::new))__	};create,a,new,link,web,application,context,runner,instance,using,an,link,annotation,config,web,application,context,with,a,link,mock,servlet,context,as,the,underlying,source,see,with,mock,servlet,context,supplier;public,web,application,context,runner,this,with,mock,servlet,context,annotation,config,web,application,context,new
WebApplicationContextRunner -> public WebApplicationContextRunner();1525416882;Create a new {@link WebApplicationContextRunner} instance using an_{@link AnnotationConfigWebApplicationContext} with a {@link MockServletContext} as_the underlying source._@see #withMockServletContext(Supplier);public WebApplicationContextRunner() {_		this(withMockServletContext(AnnotationConfigWebApplicationContext::new))__	};create,a,new,link,web,application,context,runner,instance,using,an,link,annotation,config,web,application,context,with,a,link,mock,servlet,context,as,the,underlying,source,see,with,mock,servlet,context,supplier;public,web,application,context,runner,this,with,mock,servlet,context,annotation,config,web,application,context,new
WebApplicationContextRunner -> public WebApplicationContextRunner();1532738143;Create a new {@link WebApplicationContextRunner} instance using an_{@link AnnotationConfigWebApplicationContext} with a {@link MockServletContext} as_the underlying source._@see #withMockServletContext(Supplier);public WebApplicationContextRunner() {_		this(withMockServletContext(AnnotationConfigWebApplicationContext::new))__	};create,a,new,link,web,application,context,runner,instance,using,an,link,annotation,config,web,application,context,with,a,link,mock,servlet,context,as,the,underlying,source,see,with,mock,servlet,context,supplier;public,web,application,context,runner,this,with,mock,servlet,context,annotation,config,web,application,context,new
WebApplicationContextRunner -> public WebApplicationContextRunner();1537219838;Create a new {@link WebApplicationContextRunner} instance using an_{@link AnnotationConfigWebApplicationContext} with a {@link MockServletContext} as_the underlying source._@see #withMockServletContext(Supplier);public WebApplicationContextRunner() {_		this(withMockServletContext(AnnotationConfigWebApplicationContext::new))__	};create,a,new,link,web,application,context,runner,instance,using,an,link,annotation,config,web,application,context,with,a,link,mock,servlet,context,as,the,underlying,source,see,with,mock,servlet,context,supplier;public,web,application,context,runner,this,with,mock,servlet,context,annotation,config,web,application,context,new
WebApplicationContextRunner -> public static Supplier<ConfigurableWebApplicationContext> withMockServletContext( 			Supplier<ConfigurableWebApplicationContext> contextFactory);1507173536;Decorate the specified {@code contextFactory} to set a {@link MockServletContext}_on each newly created {@link WebApplicationContext}._@param contextFactory the context factory to decorate_@return an updated supplier that will set the {@link MockServletContext};public static Supplier<ConfigurableWebApplicationContext> withMockServletContext(_			Supplier<ConfigurableWebApplicationContext> contextFactory) {_		return (contextFactory == null ? null : () -> {_			ConfigurableWebApplicationContext context = contextFactory.get()__			context.setServletContext(new MockServletContext())__			return context__		})__	};decorate,the,specified,code,context,factory,to,set,a,link,mock,servlet,context,on,each,newly,created,link,web,application,context,param,context,factory,the,context,factory,to,decorate,return,an,updated,supplier,that,will,set,the,link,mock,servlet,context;public,static,supplier,configurable,web,application,context,with,mock,servlet,context,supplier,configurable,web,application,context,context,factory,return,context,factory,null,null,configurable,web,application,context,context,context,factory,get,context,set,servlet,context,new,mock,servlet,context,return,context
WebApplicationContextRunner -> public static Supplier<ConfigurableWebApplicationContext> withMockServletContext( 			Supplier<ConfigurableWebApplicationContext> contextFactory);1508246996;Decorate the specified {@code contextFactory} to set a {@link MockServletContext}_on each newly created {@link WebApplicationContext}._@param contextFactory the context factory to decorate_@return an updated supplier that will set the {@link MockServletContext};public static Supplier<ConfigurableWebApplicationContext> withMockServletContext(_			Supplier<ConfigurableWebApplicationContext> contextFactory) {_		return (contextFactory == null ? null : () -> {_			ConfigurableWebApplicationContext context = contextFactory.get()__			context.setServletContext(new MockServletContext())__			return context__		})__	};decorate,the,specified,code,context,factory,to,set,a,link,mock,servlet,context,on,each,newly,created,link,web,application,context,param,context,factory,the,context,factory,to,decorate,return,an,updated,supplier,that,will,set,the,link,mock,servlet,context;public,static,supplier,configurable,web,application,context,with,mock,servlet,context,supplier,configurable,web,application,context,context,factory,return,context,factory,null,null,configurable,web,application,context,context,context,factory,get,context,set,servlet,context,new,mock,servlet,context,return,context
WebApplicationContextRunner -> public static Supplier<ConfigurableWebApplicationContext> withMockServletContext( 			Supplier<ConfigurableWebApplicationContext> contextFactory);1518486593;Decorate the specified {@code contextFactory} to set a {@link MockServletContext}_on each newly created {@link WebApplicationContext}._@param contextFactory the context factory to decorate_@return an updated supplier that will set the {@link MockServletContext};public static Supplier<ConfigurableWebApplicationContext> withMockServletContext(_			Supplier<ConfigurableWebApplicationContext> contextFactory) {_		return (contextFactory == null ? null : () -> {_			ConfigurableWebApplicationContext context = contextFactory.get()__			context.setServletContext(new MockServletContext())__			return context__		})__	};decorate,the,specified,code,context,factory,to,set,a,link,mock,servlet,context,on,each,newly,created,link,web,application,context,param,context,factory,the,context,factory,to,decorate,return,an,updated,supplier,that,will,set,the,link,mock,servlet,context;public,static,supplier,configurable,web,application,context,with,mock,servlet,context,supplier,configurable,web,application,context,context,factory,return,context,factory,null,null,configurable,web,application,context,context,context,factory,get,context,set,servlet,context,new,mock,servlet,context,return,context
WebApplicationContextRunner -> public static Supplier<ConfigurableWebApplicationContext> withMockServletContext( 			Supplier<ConfigurableWebApplicationContext> contextFactory);1525416882;Decorate the specified {@code contextFactory} to set a {@link MockServletContext}_on each newly created {@link WebApplicationContext}._@param contextFactory the context factory to decorate_@return an updated supplier that will set the {@link MockServletContext};public static Supplier<ConfigurableWebApplicationContext> withMockServletContext(_			Supplier<ConfigurableWebApplicationContext> contextFactory) {_		return (contextFactory != null ? () -> {_			ConfigurableWebApplicationContext context = contextFactory.get()__			context.setServletContext(new MockServletContext())__			return context__		} : null)__	};decorate,the,specified,code,context,factory,to,set,a,link,mock,servlet,context,on,each,newly,created,link,web,application,context,param,context,factory,the,context,factory,to,decorate,return,an,updated,supplier,that,will,set,the,link,mock,servlet,context;public,static,supplier,configurable,web,application,context,with,mock,servlet,context,supplier,configurable,web,application,context,context,factory,return,context,factory,null,configurable,web,application,context,context,context,factory,get,context,set,servlet,context,new,mock,servlet,context,return,context,null
WebApplicationContextRunner -> public static Supplier<ConfigurableWebApplicationContext> withMockServletContext( 			Supplier<ConfigurableWebApplicationContext> contextFactory);1532738143;Decorate the specified {@code contextFactory} to set a {@link MockServletContext}_on each newly created {@link WebApplicationContext}._@param contextFactory the context factory to decorate_@return an updated supplier that will set the {@link MockServletContext};public static Supplier<ConfigurableWebApplicationContext> withMockServletContext(_			Supplier<ConfigurableWebApplicationContext> contextFactory) {_		return (contextFactory != null) ? () -> {_			ConfigurableWebApplicationContext context = contextFactory.get()__			context.setServletContext(new MockServletContext())__			return context__		} : null__	};decorate,the,specified,code,context,factory,to,set,a,link,mock,servlet,context,on,each,newly,created,link,web,application,context,param,context,factory,the,context,factory,to,decorate,return,an,updated,supplier,that,will,set,the,link,mock,servlet,context;public,static,supplier,configurable,web,application,context,with,mock,servlet,context,supplier,configurable,web,application,context,context,factory,return,context,factory,null,configurable,web,application,context,context,context,factory,get,context,set,servlet,context,new,mock,servlet,context,return,context,null
WebApplicationContextRunner -> public static Supplier<ConfigurableWebApplicationContext> withMockServletContext( 			Supplier<ConfigurableWebApplicationContext> contextFactory);1537219838;Decorate the specified {@code contextFactory} to set a {@link MockServletContext}_on each newly created {@link WebApplicationContext}._@param contextFactory the context factory to decorate_@return an updated supplier that will set the {@link MockServletContext};public static Supplier<ConfigurableWebApplicationContext> withMockServletContext(_			Supplier<ConfigurableWebApplicationContext> contextFactory) {_		return (contextFactory != null) ? () -> {_			ConfigurableWebApplicationContext context = contextFactory.get()__			context.setServletContext(new MockServletContext())__			return context__		} : null__	};decorate,the,specified,code,context,factory,to,set,a,link,mock,servlet,context,on,each,newly,created,link,web,application,context,param,context,factory,the,context,factory,to,decorate,return,an,updated,supplier,that,will,set,the,link,mock,servlet,context;public,static,supplier,configurable,web,application,context,with,mock,servlet,context,supplier,configurable,web,application,context,context,factory,return,context,factory,null,configurable,web,application,context,context,context,factory,get,context,set,servlet,context,new,mock,servlet,context,return,context,null
