# id;timestamp;commentText;codeText;commentWords;codeWords
AssertableReactiveWebApplicationContext -> static AssertableReactiveWebApplicationContext get( 			Supplier<? extends ConfigurableReactiveWebApplicationContext> contextSupplier);1507173536;Factory method to create a new {@link AssertableReactiveWebApplicationContext}_instance._@param contextSupplier a supplier that will either return a fully configured_{@link ConfigurableReactiveWebApplicationContext} or throw an exception if the_context fails to start._@return a {@link AssertableReactiveWebApplicationContext} instance;static AssertableReactiveWebApplicationContext get(_			Supplier<? extends ConfigurableReactiveWebApplicationContext> contextSupplier) {_		return ApplicationContextAssertProvider.get(_				AssertableReactiveWebApplicationContext.class,_				ConfigurableReactiveWebApplicationContext.class, contextSupplier)__	};factory,method,to,create,a,new,link,assertable,reactive,web,application,context,instance,param,context,supplier,a,supplier,that,will,either,return,a,fully,configured,link,configurable,reactive,web,application,context,or,throw,an,exception,if,the,context,fails,to,start,return,a,link,assertable,reactive,web,application,context,instance;static,assertable,reactive,web,application,context,get,supplier,extends,configurable,reactive,web,application,context,context,supplier,return,application,context,assert,provider,get,assertable,reactive,web,application,context,class,configurable,reactive,web,application,context,class,context,supplier
AssertableReactiveWebApplicationContext -> static AssertableReactiveWebApplicationContext get( 			Supplier<? extends ConfigurableReactiveWebApplicationContext> contextSupplier);1509547763;Factory method to create a new {@link AssertableReactiveWebApplicationContext}_instance._@param contextSupplier a supplier that will either return a fully configured_{@link ConfigurableReactiveWebApplicationContext} or throw an exception if the_context fails to start._@return a {@link AssertableReactiveWebApplicationContext} instance;static AssertableReactiveWebApplicationContext get(_			Supplier<? extends ConfigurableReactiveWebApplicationContext> contextSupplier) {_		return ApplicationContextAssertProvider.get(_				AssertableReactiveWebApplicationContext.class,_				ConfigurableReactiveWebApplicationContext.class, contextSupplier)__	};factory,method,to,create,a,new,link,assertable,reactive,web,application,context,instance,param,context,supplier,a,supplier,that,will,either,return,a,fully,configured,link,configurable,reactive,web,application,context,or,throw,an,exception,if,the,context,fails,to,start,return,a,link,assertable,reactive,web,application,context,instance;static,assertable,reactive,web,application,context,get,supplier,extends,configurable,reactive,web,application,context,context,supplier,return,application,context,assert,provider,get,assertable,reactive,web,application,context,class,configurable,reactive,web,application,context,class,context,supplier
AssertableReactiveWebApplicationContext -> static AssertableReactiveWebApplicationContext get( 			Supplier<? extends ConfigurableReactiveWebApplicationContext> contextSupplier);1538414859;Factory method to create a new {@link AssertableReactiveWebApplicationContext}_instance._@param contextSupplier a supplier that will either return a fully configured_{@link ConfigurableReactiveWebApplicationContext} or throw an exception if the_context fails to start._@return a {@link AssertableReactiveWebApplicationContext} instance;static AssertableReactiveWebApplicationContext get(_			Supplier<? extends ConfigurableReactiveWebApplicationContext> contextSupplier) {_		return ApplicationContextAssertProvider.get(_				AssertableReactiveWebApplicationContext.class,_				ConfigurableReactiveWebApplicationContext.class, contextSupplier)__	};factory,method,to,create,a,new,link,assertable,reactive,web,application,context,instance,param,context,supplier,a,supplier,that,will,either,return,a,fully,configured,link,configurable,reactive,web,application,context,or,throw,an,exception,if,the,context,fails,to,start,return,a,link,assertable,reactive,web,application,context,instance;static,assertable,reactive,web,application,context,get,supplier,extends,configurable,reactive,web,application,context,context,supplier,return,application,context,assert,provider,get,assertable,reactive,web,application,context,class,configurable,reactive,web,application,context,class,context,supplier
