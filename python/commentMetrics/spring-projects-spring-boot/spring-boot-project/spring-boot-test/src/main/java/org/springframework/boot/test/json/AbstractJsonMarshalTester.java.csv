# id;timestamp;commentText;codeText;commentWords;codeWords
AbstractJsonMarshalTester -> public ObjectContent<T> parse(byte[] jsonBytes) throws IOException;1507173536;Return {@link ObjectContent} from parsing the specific JSON bytes._@param jsonBytes the source JSON bytes_@return the {@link ObjectContent}_@throws IOException on parse error;public ObjectContent<T> parse(byte[] jsonBytes) throws IOException {_		verify()__		Assert.notNull(jsonBytes, "JsonBytes must not be null")__		return read(new ByteArrayResource(jsonBytes))__	};return,link,object,content,from,parsing,the,specific,json,bytes,param,json,bytes,the,source,json,bytes,return,the,link,object,content,throws,ioexception,on,parse,error;public,object,content,t,parse,byte,json,bytes,throws,ioexception,verify,assert,not,null,json,bytes,json,bytes,must,not,be,null,return,read,new,byte,array,resource,json,bytes
AbstractJsonMarshalTester -> public ObjectContent<T> parse(byte[] jsonBytes) throws IOException;1512760426;Return {@link ObjectContent} from parsing the specific JSON bytes._@param jsonBytes the source JSON bytes_@return the {@link ObjectContent}_@throws IOException on parse error;public ObjectContent<T> parse(byte[] jsonBytes) throws IOException {_		verify()__		Assert.notNull(jsonBytes, "JsonBytes must not be null")__		return read(new ByteArrayResource(jsonBytes))__	};return,link,object,content,from,parsing,the,specific,json,bytes,param,json,bytes,the,source,json,bytes,return,the,link,object,content,throws,ioexception,on,parse,error;public,object,content,t,parse,byte,json,bytes,throws,ioexception,verify,assert,not,null,json,bytes,json,bytes,must,not,be,null,return,read,new,byte,array,resource,json,bytes
AbstractJsonMarshalTester -> public ObjectContent<T> parse(byte[] jsonBytes) throws IOException;1516215803;Return {@link ObjectContent} from parsing the specific JSON bytes._@param jsonBytes the source JSON bytes_@return the {@link ObjectContent}_@throws IOException on parse error;public ObjectContent<T> parse(byte[] jsonBytes) throws IOException {_		verify()__		Assert.notNull(jsonBytes, "JsonBytes must not be null")__		return read(new ByteArrayResource(jsonBytes))__	};return,link,object,content,from,parsing,the,specific,json,bytes,param,json,bytes,the,source,json,bytes,return,the,link,object,content,throws,ioexception,on,parse,error;public,object,content,t,parse,byte,json,bytes,throws,ioexception,verify,assert,not,null,json,bytes,json,bytes,must,not,be,null,return,read,new,byte,array,resource,json,bytes
AbstractJsonMarshalTester -> public ObjectContent<T> parse(byte[] jsonBytes) throws IOException;1516357852;Return {@link ObjectContent} from parsing the specific JSON bytes._@param jsonBytes the source JSON bytes_@return the {@link ObjectContent}_@throws IOException on parse error;public ObjectContent<T> parse(byte[] jsonBytes) throws IOException {_		verify()__		Assert.notNull(jsonBytes, "JsonBytes must not be null")__		return read(new ByteArrayResource(jsonBytes))__	};return,link,object,content,from,parsing,the,specific,json,bytes,param,json,bytes,the,source,json,bytes,return,the,link,object,content,throws,ioexception,on,parse,error;public,object,content,t,parse,byte,json,bytes,throws,ioexception,verify,assert,not,null,json,bytes,json,bytes,must,not,be,null,return,read,new,byte,array,resource,json,bytes
AbstractJsonMarshalTester -> public ObjectContent<T> parse(byte[] jsonBytes) throws IOException;1532738143;Return {@link ObjectContent} from parsing the specific JSON bytes._@param jsonBytes the source JSON bytes_@return the {@link ObjectContent}_@throws IOException on parse error;public ObjectContent<T> parse(byte[] jsonBytes) throws IOException {_		verify()__		Assert.notNull(jsonBytes, "JsonBytes must not be null")__		return read(new ByteArrayResource(jsonBytes))__	};return,link,object,content,from,parsing,the,specific,json,bytes,param,json,bytes,the,source,json,bytes,return,the,link,object,content,throws,ioexception,on,parse,error;public,object,content,t,parse,byte,json,bytes,throws,ioexception,verify,assert,not,null,json,bytes,json,bytes,must,not,be,null,return,read,new,byte,array,resource,json,bytes
AbstractJsonMarshalTester -> public T readObject(String resourcePath) throws IOException;1507173536;Return the object created from reading from the specified classpath resource._@param resourcePath the source resource path. May be a full path or a path relative_to the {@code resourceLoadClass} passed to the constructor_@return the resulting object_@throws IOException on read error;public T readObject(String resourcePath) throws IOException {_		verify()__		return read(resourcePath).getObject()__	};return,the,object,created,from,reading,from,the,specified,classpath,resource,param,resource,path,the,source,resource,path,may,be,a,full,path,or,a,path,relative,to,the,code,resource,load,class,passed,to,the,constructor,return,the,resulting,object,throws,ioexception,on,read,error;public,t,read,object,string,resource,path,throws,ioexception,verify,return,read,resource,path,get,object
AbstractJsonMarshalTester -> public T readObject(String resourcePath) throws IOException;1512760426;Return the object created from reading from the specified classpath resource._@param resourcePath the source resource path. May be a full path or a path relative_to the {@code resourceLoadClass} passed to the constructor_@return the resulting object_@throws IOException on read error;public T readObject(String resourcePath) throws IOException {_		verify()__		return read(resourcePath).getObject()__	};return,the,object,created,from,reading,from,the,specified,classpath,resource,param,resource,path,the,source,resource,path,may,be,a,full,path,or,a,path,relative,to,the,code,resource,load,class,passed,to,the,constructor,return,the,resulting,object,throws,ioexception,on,read,error;public,t,read,object,string,resource,path,throws,ioexception,verify,return,read,resource,path,get,object
AbstractJsonMarshalTester -> public T readObject(String resourcePath) throws IOException;1516215803;Return the object created from reading from the specified classpath resource._@param resourcePath the source resource path. May be a full path or a path relative_to the {@code resourceLoadClass} passed to the constructor_@return the resulting object_@throws IOException on read error;public T readObject(String resourcePath) throws IOException {_		verify()__		return read(resourcePath).getObject()__	};return,the,object,created,from,reading,from,the,specified,classpath,resource,param,resource,path,the,source,resource,path,may,be,a,full,path,or,a,path,relative,to,the,code,resource,load,class,passed,to,the,constructor,return,the,resulting,object,throws,ioexception,on,read,error;public,t,read,object,string,resource,path,throws,ioexception,verify,return,read,resource,path,get,object
AbstractJsonMarshalTester -> public T readObject(String resourcePath) throws IOException;1516357852;Return the object created from reading from the specified classpath resource._@param resourcePath the source resource path. May be a full path or a path relative_to the {@code resourceLoadClass} passed to the constructor_@return the resulting object_@throws IOException on read error;public T readObject(String resourcePath) throws IOException {_		verify()__		return read(resourcePath).getObject()__	};return,the,object,created,from,reading,from,the,specified,classpath,resource,param,resource,path,the,source,resource,path,may,be,a,full,path,or,a,path,relative,to,the,code,resource,load,class,passed,to,the,constructor,return,the,resulting,object,throws,ioexception,on,read,error;public,t,read,object,string,resource,path,throws,ioexception,verify,return,read,resource,path,get,object
AbstractJsonMarshalTester -> public T readObject(String resourcePath) throws IOException;1532738143;Return the object created from reading from the specified classpath resource._@param resourcePath the source resource path. May be a full path or a path relative_to the {@code resourceLoadClass} passed to the constructor_@return the resulting object_@throws IOException on read error;public T readObject(String resourcePath) throws IOException {_		verify()__		return read(resourcePath).getObject()__	};return,the,object,created,from,reading,from,the,specified,classpath,resource,param,resource,path,the,source,resource,path,may,be,a,full,path,or,a,path,relative,to,the,code,resource,load,class,passed,to,the,constructor,return,the,resulting,object,throws,ioexception,on,read,error;public,t,read,object,string,resource,path,throws,ioexception,verify,return,read,resource,path,get,object
AbstractJsonMarshalTester -> public T readObject(Resource resource) throws IOException;1507173536;Return the object created from reading from the specified resource._@param resource the source resource_@return the resulting object_@throws IOException on read error;public T readObject(Resource resource) throws IOException {_		verify()__		return read(resource).getObject()__	};return,the,object,created,from,reading,from,the,specified,resource,param,resource,the,source,resource,return,the,resulting,object,throws,ioexception,on,read,error;public,t,read,object,resource,resource,throws,ioexception,verify,return,read,resource,get,object
AbstractJsonMarshalTester -> public T readObject(Resource resource) throws IOException;1512760426;Return the object created from reading from the specified resource._@param resource the source resource_@return the resulting object_@throws IOException on read error;public T readObject(Resource resource) throws IOException {_		verify()__		return read(resource).getObject()__	};return,the,object,created,from,reading,from,the,specified,resource,param,resource,the,source,resource,return,the,resulting,object,throws,ioexception,on,read,error;public,t,read,object,resource,resource,throws,ioexception,verify,return,read,resource,get,object
AbstractJsonMarshalTester -> public T readObject(Resource resource) throws IOException;1516215803;Return the object created from reading from the specified resource._@param resource the source resource_@return the resulting object_@throws IOException on read error;public T readObject(Resource resource) throws IOException {_		verify()__		return read(resource).getObject()__	};return,the,object,created,from,reading,from,the,specified,resource,param,resource,the,source,resource,return,the,resulting,object,throws,ioexception,on,read,error;public,t,read,object,resource,resource,throws,ioexception,verify,return,read,resource,get,object
AbstractJsonMarshalTester -> public T readObject(Resource resource) throws IOException;1516357852;Return the object created from reading from the specified resource._@param resource the source resource_@return the resulting object_@throws IOException on read error;public T readObject(Resource resource) throws IOException {_		verify()__		return read(resource).getObject()__	};return,the,object,created,from,reading,from,the,specified,resource,param,resource,the,source,resource,return,the,resulting,object,throws,ioexception,on,read,error;public,t,read,object,resource,resource,throws,ioexception,verify,return,read,resource,get,object
AbstractJsonMarshalTester -> public T readObject(Resource resource) throws IOException;1532738143;Return the object created from reading from the specified resource._@param resource the source resource_@return the resulting object_@throws IOException on read error;public T readObject(Resource resource) throws IOException {_		verify()__		return read(resource).getObject()__	};return,the,object,created,from,reading,from,the,specified,resource,param,resource,the,source,resource,return,the,resulting,object,throws,ioexception,on,read,error;public,t,read,object,resource,resource,throws,ioexception,verify,return,read,resource,get,object
AbstractJsonMarshalTester -> public T parseObject(String jsonString) throws IOException;1507173536;Return the object created from parsing the specific JSON String._@param jsonString the source JSON string_@return the resulting object_@throws IOException on parse error;public T parseObject(String jsonString) throws IOException {_		verify()__		return parse(jsonString).getObject()__	};return,the,object,created,from,parsing,the,specific,json,string,param,json,string,the,source,json,string,return,the,resulting,object,throws,ioexception,on,parse,error;public,t,parse,object,string,json,string,throws,ioexception,verify,return,parse,json,string,get,object
AbstractJsonMarshalTester -> public T parseObject(String jsonString) throws IOException;1512760426;Return the object created from parsing the specific JSON String._@param jsonString the source JSON string_@return the resulting object_@throws IOException on parse error;public T parseObject(String jsonString) throws IOException {_		verify()__		return parse(jsonString).getObject()__	};return,the,object,created,from,parsing,the,specific,json,string,param,json,string,the,source,json,string,return,the,resulting,object,throws,ioexception,on,parse,error;public,t,parse,object,string,json,string,throws,ioexception,verify,return,parse,json,string,get,object
AbstractJsonMarshalTester -> public T parseObject(String jsonString) throws IOException;1516215803;Return the object created from parsing the specific JSON String._@param jsonString the source JSON string_@return the resulting object_@throws IOException on parse error;public T parseObject(String jsonString) throws IOException {_		verify()__		return parse(jsonString).getObject()__	};return,the,object,created,from,parsing,the,specific,json,string,param,json,string,the,source,json,string,return,the,resulting,object,throws,ioexception,on,parse,error;public,t,parse,object,string,json,string,throws,ioexception,verify,return,parse,json,string,get,object
AbstractJsonMarshalTester -> public T parseObject(String jsonString) throws IOException;1516357852;Return the object created from parsing the specific JSON String._@param jsonString the source JSON string_@return the resulting object_@throws IOException on parse error;public T parseObject(String jsonString) throws IOException {_		verify()__		return parse(jsonString).getObject()__	};return,the,object,created,from,parsing,the,specific,json,string,param,json,string,the,source,json,string,return,the,resulting,object,throws,ioexception,on,parse,error;public,t,parse,object,string,json,string,throws,ioexception,verify,return,parse,json,string,get,object
AbstractJsonMarshalTester -> public T parseObject(String jsonString) throws IOException;1532738143;Return the object created from parsing the specific JSON String._@param jsonString the source JSON string_@return the resulting object_@throws IOException on parse error;public T parseObject(String jsonString) throws IOException {_		verify()__		return parse(jsonString).getObject()__	};return,the,object,created,from,parsing,the,specific,json,string,param,json,string,the,source,json,string,return,the,resulting,object,throws,ioexception,on,parse,error;public,t,parse,object,string,json,string,throws,ioexception,verify,return,parse,json,string,get,object
AbstractJsonMarshalTester -> public ObjectContent<T> read(Resource resource) throws IOException;1507173536;Return {@link ObjectContent} from reading from the specified resource._@param resource the source resource_@return the {@link ObjectContent}_@throws IOException on read error;public ObjectContent<T> read(Resource resource) throws IOException {_		verify()__		Assert.notNull(resource, "Resource must not be null")__		InputStream inputStream = resource.getInputStream()__		T object = readObject(inputStream, this.type)__		closeQuietly(inputStream)__		return new ObjectContent<>(this.type, object)__	};return,link,object,content,from,reading,from,the,specified,resource,param,resource,the,source,resource,return,the,link,object,content,throws,ioexception,on,read,error;public,object,content,t,read,resource,resource,throws,ioexception,verify,assert,not,null,resource,resource,must,not,be,null,input,stream,input,stream,resource,get,input,stream,t,object,read,object,input,stream,this,type,close,quietly,input,stream,return,new,object,content,this,type,object
AbstractJsonMarshalTester -> public ObjectContent<T> read(Resource resource) throws IOException;1512760426;Return {@link ObjectContent} from reading from the specified resource._@param resource the source resource_@return the {@link ObjectContent}_@throws IOException on read error;public ObjectContent<T> read(Resource resource) throws IOException {_		verify()__		Assert.notNull(resource, "Resource must not be null")__		InputStream inputStream = resource.getInputStream()__		T object = readObject(inputStream, this.type)__		closeQuietly(inputStream)__		return new ObjectContent<>(this.type, object)__	};return,link,object,content,from,reading,from,the,specified,resource,param,resource,the,source,resource,return,the,link,object,content,throws,ioexception,on,read,error;public,object,content,t,read,resource,resource,throws,ioexception,verify,assert,not,null,resource,resource,must,not,be,null,input,stream,input,stream,resource,get,input,stream,t,object,read,object,input,stream,this,type,close,quietly,input,stream,return,new,object,content,this,type,object
AbstractJsonMarshalTester -> public ObjectContent<T> read(Resource resource) throws IOException;1516215803;Return {@link ObjectContent} from reading from the specified resource._@param resource the source resource_@return the {@link ObjectContent}_@throws IOException on read error;public ObjectContent<T> read(Resource resource) throws IOException {_		verify()__		Assert.notNull(resource, "Resource must not be null")__		InputStream inputStream = resource.getInputStream()__		T object = readObject(inputStream, this.type)__		closeQuietly(inputStream)__		return new ObjectContent<>(this.type, object)__	};return,link,object,content,from,reading,from,the,specified,resource,param,resource,the,source,resource,return,the,link,object,content,throws,ioexception,on,read,error;public,object,content,t,read,resource,resource,throws,ioexception,verify,assert,not,null,resource,resource,must,not,be,null,input,stream,input,stream,resource,get,input,stream,t,object,read,object,input,stream,this,type,close,quietly,input,stream,return,new,object,content,this,type,object
AbstractJsonMarshalTester -> public ObjectContent<T> read(Resource resource) throws IOException;1516357852;Return {@link ObjectContent} from reading from the specified resource._@param resource the source resource_@return the {@link ObjectContent}_@throws IOException on read error;public ObjectContent<T> read(Resource resource) throws IOException {_		verify()__		Assert.notNull(resource, "Resource must not be null")__		InputStream inputStream = resource.getInputStream()__		T object = readObject(inputStream, this.type)__		closeQuietly(inputStream)__		return new ObjectContent<>(this.type, object)__	};return,link,object,content,from,reading,from,the,specified,resource,param,resource,the,source,resource,return,the,link,object,content,throws,ioexception,on,read,error;public,object,content,t,read,resource,resource,throws,ioexception,verify,assert,not,null,resource,resource,must,not,be,null,input,stream,input,stream,resource,get,input,stream,t,object,read,object,input,stream,this,type,close,quietly,input,stream,return,new,object,content,this,type,object
AbstractJsonMarshalTester -> public ObjectContent<T> read(Resource resource) throws IOException;1532738143;Return {@link ObjectContent} from reading from the specified resource._@param resource the source resource_@return the {@link ObjectContent}_@throws IOException on read error;public ObjectContent<T> read(Resource resource) throws IOException {_		verify()__		Assert.notNull(resource, "Resource must not be null")__		InputStream inputStream = resource.getInputStream()__		T object = readObject(inputStream, this.type)__		closeQuietly(inputStream)__		return new ObjectContent<>(this.type, object)__	};return,link,object,content,from,reading,from,the,specified,resource,param,resource,the,source,resource,return,the,link,object,content,throws,ioexception,on,read,error;public,object,content,t,read,resource,resource,throws,ioexception,verify,assert,not,null,resource,resource,must,not,be,null,input,stream,input,stream,resource,get,input,stream,t,object,read,object,input,stream,this,type,close,quietly,input,stream,return,new,object,content,this,type,object
AbstractJsonMarshalTester -> public ObjectContent<T> read(File file) throws IOException;1507173536;Return {@link ObjectContent} from reading from the specified file._@param file the source file_@return the {@link ObjectContent}_@throws IOException on read error;public ObjectContent<T> read(File file) throws IOException {_		verify()__		Assert.notNull(file, "File must not be null")__		return read(new FileSystemResource(file))__	};return,link,object,content,from,reading,from,the,specified,file,param,file,the,source,file,return,the,link,object,content,throws,ioexception,on,read,error;public,object,content,t,read,file,file,throws,ioexception,verify,assert,not,null,file,file,must,not,be,null,return,read,new,file,system,resource,file
AbstractJsonMarshalTester -> public ObjectContent<T> read(File file) throws IOException;1512760426;Return {@link ObjectContent} from reading from the specified file._@param file the source file_@return the {@link ObjectContent}_@throws IOException on read error;public ObjectContent<T> read(File file) throws IOException {_		verify()__		Assert.notNull(file, "File must not be null")__		return read(new FileSystemResource(file))__	};return,link,object,content,from,reading,from,the,specified,file,param,file,the,source,file,return,the,link,object,content,throws,ioexception,on,read,error;public,object,content,t,read,file,file,throws,ioexception,verify,assert,not,null,file,file,must,not,be,null,return,read,new,file,system,resource,file
AbstractJsonMarshalTester -> public ObjectContent<T> read(File file) throws IOException;1516215803;Return {@link ObjectContent} from reading from the specified file._@param file the source file_@return the {@link ObjectContent}_@throws IOException on read error;public ObjectContent<T> read(File file) throws IOException {_		verify()__		Assert.notNull(file, "File must not be null")__		return read(new FileSystemResource(file))__	};return,link,object,content,from,reading,from,the,specified,file,param,file,the,source,file,return,the,link,object,content,throws,ioexception,on,read,error;public,object,content,t,read,file,file,throws,ioexception,verify,assert,not,null,file,file,must,not,be,null,return,read,new,file,system,resource,file
AbstractJsonMarshalTester -> public ObjectContent<T> read(File file) throws IOException;1516357852;Return {@link ObjectContent} from reading from the specified file._@param file the source file_@return the {@link ObjectContent}_@throws IOException on read error;public ObjectContent<T> read(File file) throws IOException {_		verify()__		Assert.notNull(file, "File must not be null")__		return read(new FileSystemResource(file))__	};return,link,object,content,from,reading,from,the,specified,file,param,file,the,source,file,return,the,link,object,content,throws,ioexception,on,read,error;public,object,content,t,read,file,file,throws,ioexception,verify,assert,not,null,file,file,must,not,be,null,return,read,new,file,system,resource,file
AbstractJsonMarshalTester -> public ObjectContent<T> read(File file) throws IOException;1532738143;Return {@link ObjectContent} from reading from the specified file._@param file the source file_@return the {@link ObjectContent}_@throws IOException on read error;public ObjectContent<T> read(File file) throws IOException {_		verify()__		Assert.notNull(file, "File must not be null")__		return read(new FileSystemResource(file))__	};return,link,object,content,from,reading,from,the,specified,file,param,file,the,source,file,return,the,link,object,content,throws,ioexception,on,read,error;public,object,content,t,read,file,file,throws,ioexception,verify,assert,not,null,file,file,must,not,be,null,return,read,new,file,system,resource,file
AbstractJsonMarshalTester -> protected abstract T readObject(Reader reader, ResolvableType type) 			throws IOException_;1507173536;Read from the specified reader to create an object of the specified type._@param reader the source reader (never {@code null})_@param type the resulting type (never {@code null})_@return the resulting object_@throws IOException on read error;protected abstract T readObject(Reader reader, ResolvableType type)_			throws IOException_;read,from,the,specified,reader,to,create,an,object,of,the,specified,type,param,reader,the,source,reader,never,code,null,param,type,the,resulting,type,never,code,null,return,the,resulting,object,throws,ioexception,on,read,error;protected,abstract,t,read,object,reader,reader,resolvable,type,type,throws,ioexception
AbstractJsonMarshalTester -> protected abstract T readObject(Reader reader, ResolvableType type) 			throws IOException_;1512760426;Read from the specified reader to create an object of the specified type._@param reader the source reader (never {@code null})_@param type the resulting type (never {@code null})_@return the resulting object_@throws IOException on read error;protected abstract T readObject(Reader reader, ResolvableType type)_			throws IOException_;read,from,the,specified,reader,to,create,an,object,of,the,specified,type,param,reader,the,source,reader,never,code,null,param,type,the,resulting,type,never,code,null,return,the,resulting,object,throws,ioexception,on,read,error;protected,abstract,t,read,object,reader,reader,resolvable,type,type,throws,ioexception
AbstractJsonMarshalTester -> protected abstract T readObject(Reader reader, ResolvableType type) 			throws IOException_;1516215803;Read from the specified reader to create an object of the specified type._@param reader the source reader (never {@code null})_@param type the resulting type (never {@code null})_@return the resulting object_@throws IOException on read error;protected abstract T readObject(Reader reader, ResolvableType type)_			throws IOException_;read,from,the,specified,reader,to,create,an,object,of,the,specified,type,param,reader,the,source,reader,never,code,null,param,type,the,resulting,type,never,code,null,return,the,resulting,object,throws,ioexception,on,read,error;protected,abstract,t,read,object,reader,reader,resolvable,type,type,throws,ioexception
AbstractJsonMarshalTester -> protected abstract T readObject(Reader reader, ResolvableType type) 			throws IOException_;1516357852;Read from the specified reader to create an object of the specified type._@param reader the source reader (never {@code null})_@param type the resulting type (never {@code null})_@return the resulting object_@throws IOException on read error;protected abstract T readObject(Reader reader, ResolvableType type)_			throws IOException_;read,from,the,specified,reader,to,create,an,object,of,the,specified,type,param,reader,the,source,reader,never,code,null,param,type,the,resulting,type,never,code,null,return,the,resulting,object,throws,ioexception,on,read,error;protected,abstract,t,read,object,reader,reader,resolvable,type,type,throws,ioexception
AbstractJsonMarshalTester -> protected abstract T readObject(Reader reader, ResolvableType type) 			throws IOException_;1532738143;Read from the specified reader to create an object of the specified type._@param reader the source reader (never {@code null})_@param type the resulting type (never {@code null})_@return the resulting object_@throws IOException on read error;protected abstract T readObject(Reader reader, ResolvableType type)_			throws IOException_;read,from,the,specified,reader,to,create,an,object,of,the,specified,type,param,reader,the,source,reader,never,code,null,param,type,the,resulting,type,never,code,null,return,the,resulting,object,throws,ioexception,on,read,error;protected,abstract,t,read,object,reader,reader,resolvable,type,type,throws,ioexception
AbstractJsonMarshalTester -> public T parseObject(byte[] jsonBytes) throws IOException;1507173536;Return the object created from parsing the specific JSON bytes._@param jsonBytes the source JSON bytes_@return the resulting object_@throws IOException on parse error;public T parseObject(byte[] jsonBytes) throws IOException {_		verify()__		return parse(jsonBytes).getObject()__	};return,the,object,created,from,parsing,the,specific,json,bytes,param,json,bytes,the,source,json,bytes,return,the,resulting,object,throws,ioexception,on,parse,error;public,t,parse,object,byte,json,bytes,throws,ioexception,verify,return,parse,json,bytes,get,object
AbstractJsonMarshalTester -> public T parseObject(byte[] jsonBytes) throws IOException;1512760426;Return the object created from parsing the specific JSON bytes._@param jsonBytes the source JSON bytes_@return the resulting object_@throws IOException on parse error;public T parseObject(byte[] jsonBytes) throws IOException {_		verify()__		return parse(jsonBytes).getObject()__	};return,the,object,created,from,parsing,the,specific,json,bytes,param,json,bytes,the,source,json,bytes,return,the,resulting,object,throws,ioexception,on,parse,error;public,t,parse,object,byte,json,bytes,throws,ioexception,verify,return,parse,json,bytes,get,object
AbstractJsonMarshalTester -> public T parseObject(byte[] jsonBytes) throws IOException;1516215803;Return the object created from parsing the specific JSON bytes._@param jsonBytes the source JSON bytes_@return the resulting object_@throws IOException on parse error;public T parseObject(byte[] jsonBytes) throws IOException {_		verify()__		return parse(jsonBytes).getObject()__	};return,the,object,created,from,parsing,the,specific,json,bytes,param,json,bytes,the,source,json,bytes,return,the,resulting,object,throws,ioexception,on,parse,error;public,t,parse,object,byte,json,bytes,throws,ioexception,verify,return,parse,json,bytes,get,object
AbstractJsonMarshalTester -> public T parseObject(byte[] jsonBytes) throws IOException;1516357852;Return the object created from parsing the specific JSON bytes._@param jsonBytes the source JSON bytes_@return the resulting object_@throws IOException on parse error;public T parseObject(byte[] jsonBytes) throws IOException {_		verify()__		return parse(jsonBytes).getObject()__	};return,the,object,created,from,parsing,the,specific,json,bytes,param,json,bytes,the,source,json,bytes,return,the,resulting,object,throws,ioexception,on,parse,error;public,t,parse,object,byte,json,bytes,throws,ioexception,verify,return,parse,json,bytes,get,object
AbstractJsonMarshalTester -> public T parseObject(byte[] jsonBytes) throws IOException;1532738143;Return the object created from parsing the specific JSON bytes._@param jsonBytes the source JSON bytes_@return the resulting object_@throws IOException on parse error;public T parseObject(byte[] jsonBytes) throws IOException {_		verify()__		return parse(jsonBytes).getObject()__	};return,the,object,created,from,parsing,the,specific,json,bytes,param,json,bytes,the,source,json,bytes,return,the,resulting,object,throws,ioexception,on,parse,error;public,t,parse,object,byte,json,bytes,throws,ioexception,verify,return,parse,json,bytes,get,object
AbstractJsonMarshalTester -> public T readObject(File file) throws IOException;1507173536;Return the object created from reading from the specified file._@param file the source file_@return the resulting object_@throws IOException on read error;public T readObject(File file) throws IOException {_		verify()__		return read(file).getObject()__	};return,the,object,created,from,reading,from,the,specified,file,param,file,the,source,file,return,the,resulting,object,throws,ioexception,on,read,error;public,t,read,object,file,file,throws,ioexception,verify,return,read,file,get,object
AbstractJsonMarshalTester -> public T readObject(File file) throws IOException;1512760426;Return the object created from reading from the specified file._@param file the source file_@return the resulting object_@throws IOException on read error;public T readObject(File file) throws IOException {_		verify()__		return read(file).getObject()__	};return,the,object,created,from,reading,from,the,specified,file,param,file,the,source,file,return,the,resulting,object,throws,ioexception,on,read,error;public,t,read,object,file,file,throws,ioexception,verify,return,read,file,get,object
AbstractJsonMarshalTester -> public T readObject(File file) throws IOException;1516215803;Return the object created from reading from the specified file._@param file the source file_@return the resulting object_@throws IOException on read error;public T readObject(File file) throws IOException {_		verify()__		return read(file).getObject()__	};return,the,object,created,from,reading,from,the,specified,file,param,file,the,source,file,return,the,resulting,object,throws,ioexception,on,read,error;public,t,read,object,file,file,throws,ioexception,verify,return,read,file,get,object
AbstractJsonMarshalTester -> public T readObject(File file) throws IOException;1516357852;Return the object created from reading from the specified file._@param file the source file_@return the resulting object_@throws IOException on read error;public T readObject(File file) throws IOException {_		verify()__		return read(file).getObject()__	};return,the,object,created,from,reading,from,the,specified,file,param,file,the,source,file,return,the,resulting,object,throws,ioexception,on,read,error;public,t,read,object,file,file,throws,ioexception,verify,return,read,file,get,object
AbstractJsonMarshalTester -> public T readObject(File file) throws IOException;1532738143;Return the object created from reading from the specified file._@param file the source file_@return the resulting object_@throws IOException on read error;public T readObject(File file) throws IOException {_		verify()__		return read(file).getObject()__	};return,the,object,created,from,reading,from,the,specified,file,param,file,the,source,file,return,the,resulting,object,throws,ioexception,on,read,error;public,t,read,object,file,file,throws,ioexception,verify,return,read,file,get,object
AbstractJsonMarshalTester -> protected T readObject(InputStream inputStream, ResolvableType type) 			throws IOException;1507173536;Read from the specified input stream to create an object of the specified type. The_default implementation delegates to {@link #readObject(Reader, ResolvableType)}._@param inputStream the source input stream (never {@code null})_@param type the resulting type (never {@code null})_@return the resulting object_@throws IOException on read error;protected T readObject(InputStream inputStream, ResolvableType type)_			throws IOException {_		BufferedReader reader = new BufferedReader(new InputStreamReader(inputStream))__		return readObject(reader, type)__	};read,from,the,specified,input,stream,to,create,an,object,of,the,specified,type,the,default,implementation,delegates,to,link,read,object,reader,resolvable,type,param,input,stream,the,source,input,stream,never,code,null,param,type,the,resulting,type,never,code,null,return,the,resulting,object,throws,ioexception,on,read,error;protected,t,read,object,input,stream,input,stream,resolvable,type,type,throws,ioexception,buffered,reader,reader,new,buffered,reader,new,input,stream,reader,input,stream,return,read,object,reader,type
AbstractJsonMarshalTester -> protected T readObject(InputStream inputStream, ResolvableType type) 			throws IOException;1512760426;Read from the specified input stream to create an object of the specified type. The_default implementation delegates to {@link #readObject(Reader, ResolvableType)}._@param inputStream the source input stream (never {@code null})_@param type the resulting type (never {@code null})_@return the resulting object_@throws IOException on read error;protected T readObject(InputStream inputStream, ResolvableType type)_			throws IOException {_		BufferedReader reader = new BufferedReader(new InputStreamReader(inputStream))__		return readObject(reader, type)__	};read,from,the,specified,input,stream,to,create,an,object,of,the,specified,type,the,default,implementation,delegates,to,link,read,object,reader,resolvable,type,param,input,stream,the,source,input,stream,never,code,null,param,type,the,resulting,type,never,code,null,return,the,resulting,object,throws,ioexception,on,read,error;protected,t,read,object,input,stream,input,stream,resolvable,type,type,throws,ioexception,buffered,reader,reader,new,buffered,reader,new,input,stream,reader,input,stream,return,read,object,reader,type
AbstractJsonMarshalTester -> protected T readObject(InputStream inputStream, ResolvableType type) 			throws IOException;1516215803;Read from the specified input stream to create an object of the specified type. The_default implementation delegates to {@link #readObject(Reader, ResolvableType)}._@param inputStream the source input stream (never {@code null})_@param type the resulting type (never {@code null})_@return the resulting object_@throws IOException on read error;protected T readObject(InputStream inputStream, ResolvableType type)_			throws IOException {_		BufferedReader reader = new BufferedReader(new InputStreamReader(inputStream))__		return readObject(reader, type)__	};read,from,the,specified,input,stream,to,create,an,object,of,the,specified,type,the,default,implementation,delegates,to,link,read,object,reader,resolvable,type,param,input,stream,the,source,input,stream,never,code,null,param,type,the,resulting,type,never,code,null,return,the,resulting,object,throws,ioexception,on,read,error;protected,t,read,object,input,stream,input,stream,resolvable,type,type,throws,ioexception,buffered,reader,reader,new,buffered,reader,new,input,stream,reader,input,stream,return,read,object,reader,type
AbstractJsonMarshalTester -> protected T readObject(InputStream inputStream, ResolvableType type) 			throws IOException;1516357852;Read from the specified input stream to create an object of the specified type. The_default implementation delegates to {@link #readObject(Reader, ResolvableType)}._@param inputStream the source input stream (never {@code null})_@param type the resulting type (never {@code null})_@return the resulting object_@throws IOException on read error;protected T readObject(InputStream inputStream, ResolvableType type)_			throws IOException {_		BufferedReader reader = new BufferedReader(new InputStreamReader(inputStream))__		return readObject(reader, type)__	};read,from,the,specified,input,stream,to,create,an,object,of,the,specified,type,the,default,implementation,delegates,to,link,read,object,reader,resolvable,type,param,input,stream,the,source,input,stream,never,code,null,param,type,the,resulting,type,never,code,null,return,the,resulting,object,throws,ioexception,on,read,error;protected,t,read,object,input,stream,input,stream,resolvable,type,type,throws,ioexception,buffered,reader,reader,new,buffered,reader,new,input,stream,reader,input,stream,return,read,object,reader,type
AbstractJsonMarshalTester -> protected T readObject(InputStream inputStream, ResolvableType type) 			throws IOException;1532738143;Read from the specified input stream to create an object of the specified type. The_default implementation delegates to {@link #readObject(Reader, ResolvableType)}._@param inputStream the source input stream (never {@code null})_@param type the resulting type (never {@code null})_@return the resulting object_@throws IOException on read error;protected T readObject(InputStream inputStream, ResolvableType type)_			throws IOException {_		BufferedReader reader = new BufferedReader(new InputStreamReader(inputStream))__		return readObject(reader, type)__	};read,from,the,specified,input,stream,to,create,an,object,of,the,specified,type,the,default,implementation,delegates,to,link,read,object,reader,resolvable,type,param,input,stream,the,source,input,stream,never,code,null,param,type,the,resulting,type,never,code,null,return,the,resulting,object,throws,ioexception,on,read,error;protected,t,read,object,input,stream,input,stream,resolvable,type,type,throws,ioexception,buffered,reader,reader,new,buffered,reader,new,input,stream,reader,input,stream,return,read,object,reader,type
AbstractJsonMarshalTester -> public T readObject(Reader reader) throws IOException;1507173536;Return the object created from reading from the specified reader._@param reader the source reader_@return the resulting object_@throws IOException on read error;public T readObject(Reader reader) throws IOException {_		verify()__		return read(reader).getObject()__	};return,the,object,created,from,reading,from,the,specified,reader,param,reader,the,source,reader,return,the,resulting,object,throws,ioexception,on,read,error;public,t,read,object,reader,reader,throws,ioexception,verify,return,read,reader,get,object
AbstractJsonMarshalTester -> public T readObject(Reader reader) throws IOException;1512760426;Return the object created from reading from the specified reader._@param reader the source reader_@return the resulting object_@throws IOException on read error;public T readObject(Reader reader) throws IOException {_		verify()__		return read(reader).getObject()__	};return,the,object,created,from,reading,from,the,specified,reader,param,reader,the,source,reader,return,the,resulting,object,throws,ioexception,on,read,error;public,t,read,object,reader,reader,throws,ioexception,verify,return,read,reader,get,object
AbstractJsonMarshalTester -> public T readObject(Reader reader) throws IOException;1516215803;Return the object created from reading from the specified reader._@param reader the source reader_@return the resulting object_@throws IOException on read error;public T readObject(Reader reader) throws IOException {_		verify()__		return read(reader).getObject()__	};return,the,object,created,from,reading,from,the,specified,reader,param,reader,the,source,reader,return,the,resulting,object,throws,ioexception,on,read,error;public,t,read,object,reader,reader,throws,ioexception,verify,return,read,reader,get,object
AbstractJsonMarshalTester -> public T readObject(Reader reader) throws IOException;1516357852;Return the object created from reading from the specified reader._@param reader the source reader_@return the resulting object_@throws IOException on read error;public T readObject(Reader reader) throws IOException {_		verify()__		return read(reader).getObject()__	};return,the,object,created,from,reading,from,the,specified,reader,param,reader,the,source,reader,return,the,resulting,object,throws,ioexception,on,read,error;public,t,read,object,reader,reader,throws,ioexception,verify,return,read,reader,get,object
AbstractJsonMarshalTester -> public T readObject(Reader reader) throws IOException;1532738143;Return the object created from reading from the specified reader._@param reader the source reader_@return the resulting object_@throws IOException on read error;public T readObject(Reader reader) throws IOException {_		verify()__		return read(reader).getObject()__	};return,the,object,created,from,reading,from,the,specified,reader,param,reader,the,source,reader,return,the,resulting,object,throws,ioexception,on,read,error;public,t,read,object,reader,reader,throws,ioexception,verify,return,read,reader,get,object
AbstractJsonMarshalTester -> public JsonContent<T> write(T value) throws IOException;1507173536;Return {@link JsonContent} from writing the specific value._@param value the value to write_@return the {@link JsonContent}_@throws IOException on write error;public JsonContent<T> write(T value) throws IOException {_		verify()__		Assert.notNull(value, "Value must not be null")__		String json = writeObject(value, this.type)__		return new JsonContent<>(this.resourceLoadClass, this.type, json)__	};return,link,json,content,from,writing,the,specific,value,param,value,the,value,to,write,return,the,link,json,content,throws,ioexception,on,write,error;public,json,content,t,write,t,value,throws,ioexception,verify,assert,not,null,value,value,must,not,be,null,string,json,write,object,value,this,type,return,new,json,content,this,resource,load,class,this,type,json
AbstractJsonMarshalTester -> public JsonContent<T> write(T value) throws IOException;1512760426;Return {@link JsonContent} from writing the specific value._@param value the value to write_@return the {@link JsonContent}_@throws IOException on write error;public JsonContent<T> write(T value) throws IOException {_		verify()__		Assert.notNull(value, "Value must not be null")__		String json = writeObject(value, this.type)__		return new JsonContent<>(this.resourceLoadClass, this.type, json)__	};return,link,json,content,from,writing,the,specific,value,param,value,the,value,to,write,return,the,link,json,content,throws,ioexception,on,write,error;public,json,content,t,write,t,value,throws,ioexception,verify,assert,not,null,value,value,must,not,be,null,string,json,write,object,value,this,type,return,new,json,content,this,resource,load,class,this,type,json
AbstractJsonMarshalTester -> public JsonContent<T> write(T value) throws IOException;1516215803;Return {@link JsonContent} from writing the specific value._@param value the value to write_@return the {@link JsonContent}_@throws IOException on write error;public JsonContent<T> write(T value) throws IOException {_		verify()__		Assert.notNull(value, "Value must not be null")__		String json = writeObject(value, this.type)__		return new JsonContent<>(this.resourceLoadClass, this.type, json)__	};return,link,json,content,from,writing,the,specific,value,param,value,the,value,to,write,return,the,link,json,content,throws,ioexception,on,write,error;public,json,content,t,write,t,value,throws,ioexception,verify,assert,not,null,value,value,must,not,be,null,string,json,write,object,value,this,type,return,new,json,content,this,resource,load,class,this,type,json
AbstractJsonMarshalTester -> public JsonContent<T> write(T value) throws IOException;1516357852;Return {@link JsonContent} from writing the specific value._@param value the value to write_@return the {@link JsonContent}_@throws IOException on write error;public JsonContent<T> write(T value) throws IOException {_		verify()__		Assert.notNull(value, "Value must not be null")__		String json = writeObject(value, this.type)__		return new JsonContent<>(this.resourceLoadClass, this.type, json)__	};return,link,json,content,from,writing,the,specific,value,param,value,the,value,to,write,return,the,link,json,content,throws,ioexception,on,write,error;public,json,content,t,write,t,value,throws,ioexception,verify,assert,not,null,value,value,must,not,be,null,string,json,write,object,value,this,type,return,new,json,content,this,resource,load,class,this,type,json
AbstractJsonMarshalTester -> public JsonContent<T> write(T value) throws IOException;1532738143;Return {@link JsonContent} from writing the specific value._@param value the value to write_@return the {@link JsonContent}_@throws IOException on write error;public JsonContent<T> write(T value) throws IOException {_		verify()__		Assert.notNull(value, "Value must not be null")__		String json = writeObject(value, this.type)__		return new JsonContent<>(this.resourceLoadClass, this.type, json)__	};return,link,json,content,from,writing,the,specific,value,param,value,the,value,to,write,return,the,link,json,content,throws,ioexception,on,write,error;public,json,content,t,write,t,value,throws,ioexception,verify,assert,not,null,value,value,must,not,be,null,string,json,write,object,value,this,type,return,new,json,content,this,resource,load,class,this,type,json
AbstractJsonMarshalTester -> public ObjectContent<T> read(InputStream inputStream) throws IOException;1507173536;Return {@link ObjectContent} from reading from the specified input stream._@param inputStream the source input stream_@return the {@link ObjectContent}_@throws IOException on read error;public ObjectContent<T> read(InputStream inputStream) throws IOException {_		verify()__		Assert.notNull(inputStream, "InputStream must not be null")__		return read(new InputStreamResource(inputStream))__	};return,link,object,content,from,reading,from,the,specified,input,stream,param,input,stream,the,source,input,stream,return,the,link,object,content,throws,ioexception,on,read,error;public,object,content,t,read,input,stream,input,stream,throws,ioexception,verify,assert,not,null,input,stream,input,stream,must,not,be,null,return,read,new,input,stream,resource,input,stream
AbstractJsonMarshalTester -> public ObjectContent<T> read(InputStream inputStream) throws IOException;1512760426;Return {@link ObjectContent} from reading from the specified input stream._@param inputStream the source input stream_@return the {@link ObjectContent}_@throws IOException on read error;public ObjectContent<T> read(InputStream inputStream) throws IOException {_		verify()__		Assert.notNull(inputStream, "InputStream must not be null")__		return read(new InputStreamResource(inputStream))__	};return,link,object,content,from,reading,from,the,specified,input,stream,param,input,stream,the,source,input,stream,return,the,link,object,content,throws,ioexception,on,read,error;public,object,content,t,read,input,stream,input,stream,throws,ioexception,verify,assert,not,null,input,stream,input,stream,must,not,be,null,return,read,new,input,stream,resource,input,stream
AbstractJsonMarshalTester -> public ObjectContent<T> read(InputStream inputStream) throws IOException;1516215803;Return {@link ObjectContent} from reading from the specified input stream._@param inputStream the source input stream_@return the {@link ObjectContent}_@throws IOException on read error;public ObjectContent<T> read(InputStream inputStream) throws IOException {_		verify()__		Assert.notNull(inputStream, "InputStream must not be null")__		return read(new InputStreamResource(inputStream))__	};return,link,object,content,from,reading,from,the,specified,input,stream,param,input,stream,the,source,input,stream,return,the,link,object,content,throws,ioexception,on,read,error;public,object,content,t,read,input,stream,input,stream,throws,ioexception,verify,assert,not,null,input,stream,input,stream,must,not,be,null,return,read,new,input,stream,resource,input,stream
AbstractJsonMarshalTester -> public ObjectContent<T> read(InputStream inputStream) throws IOException;1516357852;Return {@link ObjectContent} from reading from the specified input stream._@param inputStream the source input stream_@return the {@link ObjectContent}_@throws IOException on read error;public ObjectContent<T> read(InputStream inputStream) throws IOException {_		verify()__		Assert.notNull(inputStream, "InputStream must not be null")__		return read(new InputStreamResource(inputStream))__	};return,link,object,content,from,reading,from,the,specified,input,stream,param,input,stream,the,source,input,stream,return,the,link,object,content,throws,ioexception,on,read,error;public,object,content,t,read,input,stream,input,stream,throws,ioexception,verify,assert,not,null,input,stream,input,stream,must,not,be,null,return,read,new,input,stream,resource,input,stream
AbstractJsonMarshalTester -> public ObjectContent<T> read(InputStream inputStream) throws IOException;1532738143;Return {@link ObjectContent} from reading from the specified input stream._@param inputStream the source input stream_@return the {@link ObjectContent}_@throws IOException on read error;public ObjectContent<T> read(InputStream inputStream) throws IOException {_		verify()__		Assert.notNull(inputStream, "InputStream must not be null")__		return read(new InputStreamResource(inputStream))__	};return,link,object,content,from,reading,from,the,specified,input,stream,param,input,stream,the,source,input,stream,return,the,link,object,content,throws,ioexception,on,read,error;public,object,content,t,read,input,stream,input,stream,throws,ioexception,verify,assert,not,null,input,stream,input,stream,must,not,be,null,return,read,new,input,stream,resource,input,stream
AbstractJsonMarshalTester -> protected abstract String writeObject(T value, ResolvableType type) 			throws IOException_;1507173536;Write the specified object to a JSON string._@param value the source value (never {@code null})_@param type the resulting type (never {@code null})_@return the JSON string_@throws IOException on write error;protected abstract String writeObject(T value, ResolvableType type)_			throws IOException_;write,the,specified,object,to,a,json,string,param,value,the,source,value,never,code,null,param,type,the,resulting,type,never,code,null,return,the,json,string,throws,ioexception,on,write,error;protected,abstract,string,write,object,t,value,resolvable,type,type,throws,ioexception
AbstractJsonMarshalTester -> protected abstract String writeObject(T value, ResolvableType type) 			throws IOException_;1512760426;Write the specified object to a JSON string._@param value the source value (never {@code null})_@param type the resulting type (never {@code null})_@return the JSON string_@throws IOException on write error;protected abstract String writeObject(T value, ResolvableType type)_			throws IOException_;write,the,specified,object,to,a,json,string,param,value,the,source,value,never,code,null,param,type,the,resulting,type,never,code,null,return,the,json,string,throws,ioexception,on,write,error;protected,abstract,string,write,object,t,value,resolvable,type,type,throws,ioexception
AbstractJsonMarshalTester -> protected abstract String writeObject(T value, ResolvableType type) 			throws IOException_;1516215803;Write the specified object to a JSON string._@param value the source value (never {@code null})_@param type the resulting type (never {@code null})_@return the JSON string_@throws IOException on write error;protected abstract String writeObject(T value, ResolvableType type)_			throws IOException_;write,the,specified,object,to,a,json,string,param,value,the,source,value,never,code,null,param,type,the,resulting,type,never,code,null,return,the,json,string,throws,ioexception,on,write,error;protected,abstract,string,write,object,t,value,resolvable,type,type,throws,ioexception
AbstractJsonMarshalTester -> protected abstract String writeObject(T value, ResolvableType type) 			throws IOException_;1516357852;Write the specified object to a JSON string._@param value the source value (never {@code null})_@param type the resulting type (never {@code null})_@return the JSON string_@throws IOException on write error;protected abstract String writeObject(T value, ResolvableType type)_			throws IOException_;write,the,specified,object,to,a,json,string,param,value,the,source,value,never,code,null,param,type,the,resulting,type,never,code,null,return,the,json,string,throws,ioexception,on,write,error;protected,abstract,string,write,object,t,value,resolvable,type,type,throws,ioexception
AbstractJsonMarshalTester -> protected abstract String writeObject(T value, ResolvableType type) 			throws IOException_;1532738143;Write the specified object to a JSON string._@param value the source value (never {@code null})_@param type the resulting type (never {@code null})_@return the JSON string_@throws IOException on write error;protected abstract String writeObject(T value, ResolvableType type)_			throws IOException_;write,the,specified,object,to,a,json,string,param,value,the,source,value,never,code,null,param,type,the,resulting,type,never,code,null,return,the,json,string,throws,ioexception,on,write,error;protected,abstract,string,write,object,t,value,resolvable,type,type,throws,ioexception
AbstractJsonMarshalTester -> protected final Class<?> getResourceLoadClass();1507173536;Return class used to load relative resources._@return the resource load class;protected final Class<?> getResourceLoadClass() {_		return this.resourceLoadClass__	};return,class,used,to,load,relative,resources,return,the,resource,load,class;protected,final,class,get,resource,load,class,return,this,resource,load,class
AbstractJsonMarshalTester -> protected final Class<?> getResourceLoadClass();1512760426;Return class used to load relative resources._@return the resource load class;protected final Class<?> getResourceLoadClass() {_		return this.resourceLoadClass__	};return,class,used,to,load,relative,resources,return,the,resource,load,class;protected,final,class,get,resource,load,class,return,this,resource,load,class
AbstractJsonMarshalTester -> protected final Class<?> getResourceLoadClass();1516215803;Return class used to load relative resources._@return the resource load class;protected final Class<?> getResourceLoadClass() {_		return this.resourceLoadClass__	};return,class,used,to,load,relative,resources,return,the,resource,load,class;protected,final,class,get,resource,load,class,return,this,resource,load,class
AbstractJsonMarshalTester -> protected final Class<?> getResourceLoadClass();1516357852;Return class used to load relative resources._@return the resource load class;protected final Class<?> getResourceLoadClass() {_		return this.resourceLoadClass__	};return,class,used,to,load,relative,resources,return,the,resource,load,class;protected,final,class,get,resource,load,class,return,this,resource,load,class
AbstractJsonMarshalTester -> protected final Class<?> getResourceLoadClass();1532738143;Return class used to load relative resources._@return the resource load class;protected final Class<?> getResourceLoadClass() {_		return this.resourceLoadClass__	};return,class,used,to,load,relative,resources,return,the,resource,load,class;protected,final,class,get,resource,load,class,return,this,resource,load,class
AbstractJsonMarshalTester -> public ObjectContent<T> read(String resourcePath) throws IOException;1507173536;Return {@link ObjectContent} from reading from the specified classpath resource._@param resourcePath the source resource path. May be a full path or a path relative_to the {@code resourceLoadClass} passed to the constructor_@return the {@link ObjectContent}_@throws IOException on read error;public ObjectContent<T> read(String resourcePath) throws IOException {_		verify()__		Assert.notNull(resourcePath, "ResourcePath must not be null")__		return read(new ClassPathResource(resourcePath, this.resourceLoadClass))__	};return,link,object,content,from,reading,from,the,specified,classpath,resource,param,resource,path,the,source,resource,path,may,be,a,full,path,or,a,path,relative,to,the,code,resource,load,class,passed,to,the,constructor,return,the,link,object,content,throws,ioexception,on,read,error;public,object,content,t,read,string,resource,path,throws,ioexception,verify,assert,not,null,resource,path,resource,path,must,not,be,null,return,read,new,class,path,resource,resource,path,this,resource,load,class
AbstractJsonMarshalTester -> public ObjectContent<T> read(String resourcePath) throws IOException;1512760426;Return {@link ObjectContent} from reading from the specified classpath resource._@param resourcePath the source resource path. May be a full path or a path relative_to the {@code resourceLoadClass} passed to the constructor_@return the {@link ObjectContent}_@throws IOException on read error;public ObjectContent<T> read(String resourcePath) throws IOException {_		verify()__		Assert.notNull(resourcePath, "ResourcePath must not be null")__		return read(new ClassPathResource(resourcePath, this.resourceLoadClass))__	};return,link,object,content,from,reading,from,the,specified,classpath,resource,param,resource,path,the,source,resource,path,may,be,a,full,path,or,a,path,relative,to,the,code,resource,load,class,passed,to,the,constructor,return,the,link,object,content,throws,ioexception,on,read,error;public,object,content,t,read,string,resource,path,throws,ioexception,verify,assert,not,null,resource,path,resource,path,must,not,be,null,return,read,new,class,path,resource,resource,path,this,resource,load,class
AbstractJsonMarshalTester -> public ObjectContent<T> read(String resourcePath) throws IOException;1516215803;Return {@link ObjectContent} from reading from the specified classpath resource._@param resourcePath the source resource path. May be a full path or a path relative_to the {@code resourceLoadClass} passed to the constructor_@return the {@link ObjectContent}_@throws IOException on read error;public ObjectContent<T> read(String resourcePath) throws IOException {_		verify()__		Assert.notNull(resourcePath, "ResourcePath must not be null")__		return read(new ClassPathResource(resourcePath, this.resourceLoadClass))__	};return,link,object,content,from,reading,from,the,specified,classpath,resource,param,resource,path,the,source,resource,path,may,be,a,full,path,or,a,path,relative,to,the,code,resource,load,class,passed,to,the,constructor,return,the,link,object,content,throws,ioexception,on,read,error;public,object,content,t,read,string,resource,path,throws,ioexception,verify,assert,not,null,resource,path,resource,path,must,not,be,null,return,read,new,class,path,resource,resource,path,this,resource,load,class
AbstractJsonMarshalTester -> public ObjectContent<T> read(String resourcePath) throws IOException;1516357852;Return {@link ObjectContent} from reading from the specified classpath resource._@param resourcePath the source resource path. May be a full path or a path relative_to the {@code resourceLoadClass} passed to the constructor_@return the {@link ObjectContent}_@throws IOException on read error;public ObjectContent<T> read(String resourcePath) throws IOException {_		verify()__		Assert.notNull(resourcePath, "ResourcePath must not be null")__		return read(new ClassPathResource(resourcePath, this.resourceLoadClass))__	};return,link,object,content,from,reading,from,the,specified,classpath,resource,param,resource,path,the,source,resource,path,may,be,a,full,path,or,a,path,relative,to,the,code,resource,load,class,passed,to,the,constructor,return,the,link,object,content,throws,ioexception,on,read,error;public,object,content,t,read,string,resource,path,throws,ioexception,verify,assert,not,null,resource,path,resource,path,must,not,be,null,return,read,new,class,path,resource,resource,path,this,resource,load,class
AbstractJsonMarshalTester -> public ObjectContent<T> read(String resourcePath) throws IOException;1532738143;Return {@link ObjectContent} from reading from the specified classpath resource._@param resourcePath the source resource path. May be a full path or a path relative_to the {@code resourceLoadClass} passed to the constructor_@return the {@link ObjectContent}_@throws IOException on read error;public ObjectContent<T> read(String resourcePath) throws IOException {_		verify()__		Assert.notNull(resourcePath, "ResourcePath must not be null")__		return read(new ClassPathResource(resourcePath, this.resourceLoadClass))__	};return,link,object,content,from,reading,from,the,specified,classpath,resource,param,resource,path,the,source,resource,path,may,be,a,full,path,or,a,path,relative,to,the,code,resource,load,class,passed,to,the,constructor,return,the,link,object,content,throws,ioexception,on,read,error;public,object,content,t,read,string,resource,path,throws,ioexception,verify,assert,not,null,resource,path,resource,path,must,not,be,null,return,read,new,class,path,resource,resource,path,this,resource,load,class
AbstractJsonMarshalTester -> public ObjectContent<T> parse(String jsonString) throws IOException;1507173536;Return {@link ObjectContent} from parsing the specific JSON String._@param jsonString the source JSON string_@return the {@link ObjectContent}_@throws IOException on parse error;public ObjectContent<T> parse(String jsonString) throws IOException {_		verify()__		Assert.notNull(jsonString, "JsonString must not be null")__		return read(new StringReader(jsonString))__	};return,link,object,content,from,parsing,the,specific,json,string,param,json,string,the,source,json,string,return,the,link,object,content,throws,ioexception,on,parse,error;public,object,content,t,parse,string,json,string,throws,ioexception,verify,assert,not,null,json,string,json,string,must,not,be,null,return,read,new,string,reader,json,string
AbstractJsonMarshalTester -> public ObjectContent<T> parse(String jsonString) throws IOException;1512760426;Return {@link ObjectContent} from parsing the specific JSON String._@param jsonString the source JSON string_@return the {@link ObjectContent}_@throws IOException on parse error;public ObjectContent<T> parse(String jsonString) throws IOException {_		verify()__		Assert.notNull(jsonString, "JsonString must not be null")__		return read(new StringReader(jsonString))__	};return,link,object,content,from,parsing,the,specific,json,string,param,json,string,the,source,json,string,return,the,link,object,content,throws,ioexception,on,parse,error;public,object,content,t,parse,string,json,string,throws,ioexception,verify,assert,not,null,json,string,json,string,must,not,be,null,return,read,new,string,reader,json,string
AbstractJsonMarshalTester -> public ObjectContent<T> parse(String jsonString) throws IOException;1516215803;Return {@link ObjectContent} from parsing the specific JSON String._@param jsonString the source JSON string_@return the {@link ObjectContent}_@throws IOException on parse error;public ObjectContent<T> parse(String jsonString) throws IOException {_		verify()__		Assert.notNull(jsonString, "JsonString must not be null")__		return read(new StringReader(jsonString))__	};return,link,object,content,from,parsing,the,specific,json,string,param,json,string,the,source,json,string,return,the,link,object,content,throws,ioexception,on,parse,error;public,object,content,t,parse,string,json,string,throws,ioexception,verify,assert,not,null,json,string,json,string,must,not,be,null,return,read,new,string,reader,json,string
AbstractJsonMarshalTester -> public ObjectContent<T> parse(String jsonString) throws IOException;1516357852;Return {@link ObjectContent} from parsing the specific JSON String._@param jsonString the source JSON string_@return the {@link ObjectContent}_@throws IOException on parse error;public ObjectContent<T> parse(String jsonString) throws IOException {_		verify()__		Assert.notNull(jsonString, "JsonString must not be null")__		return read(new StringReader(jsonString))__	};return,link,object,content,from,parsing,the,specific,json,string,param,json,string,the,source,json,string,return,the,link,object,content,throws,ioexception,on,parse,error;public,object,content,t,parse,string,json,string,throws,ioexception,verify,assert,not,null,json,string,json,string,must,not,be,null,return,read,new,string,reader,json,string
AbstractJsonMarshalTester -> public ObjectContent<T> parse(String jsonString) throws IOException;1532738143;Return {@link ObjectContent} from parsing the specific JSON String._@param jsonString the source JSON string_@return the {@link ObjectContent}_@throws IOException on parse error;public ObjectContent<T> parse(String jsonString) throws IOException {_		verify()__		Assert.notNull(jsonString, "JsonString must not be null")__		return read(new StringReader(jsonString))__	};return,link,object,content,from,parsing,the,specific,json,string,param,json,string,the,source,json,string,return,the,link,object,content,throws,ioexception,on,parse,error;public,object,content,t,parse,string,json,string,throws,ioexception,verify,assert,not,null,json,string,json,string,must,not,be,null,return,read,new,string,reader,json,string
AbstractJsonMarshalTester -> public T readObject(InputStream inputStream) throws IOException;1507173536;Return the object created from reading from the specified input stream._@param inputStream the source input stream_@return the resulting object_@throws IOException on read error;public T readObject(InputStream inputStream) throws IOException {_		verify()__		return read(inputStream).getObject()__	};return,the,object,created,from,reading,from,the,specified,input,stream,param,input,stream,the,source,input,stream,return,the,resulting,object,throws,ioexception,on,read,error;public,t,read,object,input,stream,input,stream,throws,ioexception,verify,return,read,input,stream,get,object
AbstractJsonMarshalTester -> public T readObject(InputStream inputStream) throws IOException;1512760426;Return the object created from reading from the specified input stream._@param inputStream the source input stream_@return the resulting object_@throws IOException on read error;public T readObject(InputStream inputStream) throws IOException {_		verify()__		return read(inputStream).getObject()__	};return,the,object,created,from,reading,from,the,specified,input,stream,param,input,stream,the,source,input,stream,return,the,resulting,object,throws,ioexception,on,read,error;public,t,read,object,input,stream,input,stream,throws,ioexception,verify,return,read,input,stream,get,object
AbstractJsonMarshalTester -> public T readObject(InputStream inputStream) throws IOException;1516215803;Return the object created from reading from the specified input stream._@param inputStream the source input stream_@return the resulting object_@throws IOException on read error;public T readObject(InputStream inputStream) throws IOException {_		verify()__		return read(inputStream).getObject()__	};return,the,object,created,from,reading,from,the,specified,input,stream,param,input,stream,the,source,input,stream,return,the,resulting,object,throws,ioexception,on,read,error;public,t,read,object,input,stream,input,stream,throws,ioexception,verify,return,read,input,stream,get,object
AbstractJsonMarshalTester -> public T readObject(InputStream inputStream) throws IOException;1516357852;Return the object created from reading from the specified input stream._@param inputStream the source input stream_@return the resulting object_@throws IOException on read error;public T readObject(InputStream inputStream) throws IOException {_		verify()__		return read(inputStream).getObject()__	};return,the,object,created,from,reading,from,the,specified,input,stream,param,input,stream,the,source,input,stream,return,the,resulting,object,throws,ioexception,on,read,error;public,t,read,object,input,stream,input,stream,throws,ioexception,verify,return,read,input,stream,get,object
AbstractJsonMarshalTester -> public T readObject(InputStream inputStream) throws IOException;1532738143;Return the object created from reading from the specified input stream._@param inputStream the source input stream_@return the resulting object_@throws IOException on read error;public T readObject(InputStream inputStream) throws IOException {_		verify()__		return read(inputStream).getObject()__	};return,the,object,created,from,reading,from,the,specified,input,stream,param,input,stream,the,source,input,stream,return,the,resulting,object,throws,ioexception,on,read,error;public,t,read,object,input,stream,input,stream,throws,ioexception,verify,return,read,input,stream,get,object
AbstractJsonMarshalTester -> public AbstractJsonMarshalTester(Class<?> resourceLoadClass, ResolvableType type);1507173536;Create a new {@link AbstractJsonMarshalTester} instance._@param resourceLoadClass the source class used when loading relative classpath_resources_@param type the type under test;public AbstractJsonMarshalTester(Class<?> resourceLoadClass, ResolvableType type) {_		Assert.notNull(resourceLoadClass, "ResourceLoadClass must not be null")__		Assert.notNull(type, "Type must not be null")__		initialize(resourceLoadClass, type)__	};create,a,new,link,abstract,json,marshal,tester,instance,param,resource,load,class,the,source,class,used,when,loading,relative,classpath,resources,param,type,the,type,under,test;public,abstract,json,marshal,tester,class,resource,load,class,resolvable,type,type,assert,not,null,resource,load,class,resource,load,class,must,not,be,null,assert,not,null,type,type,must,not,be,null,initialize,resource,load,class,type
AbstractJsonMarshalTester -> public AbstractJsonMarshalTester(Class<?> resourceLoadClass, ResolvableType type);1512760426;Create a new {@link AbstractJsonMarshalTester} instance._@param resourceLoadClass the source class used when loading relative classpath_resources_@param type the type under test;public AbstractJsonMarshalTester(Class<?> resourceLoadClass, ResolvableType type) {_		Assert.notNull(resourceLoadClass, "ResourceLoadClass must not be null")__		Assert.notNull(type, "Type must not be null")__		initialize(resourceLoadClass, type)__	};create,a,new,link,abstract,json,marshal,tester,instance,param,resource,load,class,the,source,class,used,when,loading,relative,classpath,resources,param,type,the,type,under,test;public,abstract,json,marshal,tester,class,resource,load,class,resolvable,type,type,assert,not,null,resource,load,class,resource,load,class,must,not,be,null,assert,not,null,type,type,must,not,be,null,initialize,resource,load,class,type
AbstractJsonMarshalTester -> public AbstractJsonMarshalTester(Class<?> resourceLoadClass, ResolvableType type);1516215803;Create a new {@link AbstractJsonMarshalTester} instance._@param resourceLoadClass the source class used when loading relative classpath_resources_@param type the type under test;public AbstractJsonMarshalTester(Class<?> resourceLoadClass, ResolvableType type) {_		Assert.notNull(resourceLoadClass, "ResourceLoadClass must not be null")__		Assert.notNull(type, "Type must not be null")__		initialize(resourceLoadClass, type)__	};create,a,new,link,abstract,json,marshal,tester,instance,param,resource,load,class,the,source,class,used,when,loading,relative,classpath,resources,param,type,the,type,under,test;public,abstract,json,marshal,tester,class,resource,load,class,resolvable,type,type,assert,not,null,resource,load,class,resource,load,class,must,not,be,null,assert,not,null,type,type,must,not,be,null,initialize,resource,load,class,type
AbstractJsonMarshalTester -> public AbstractJsonMarshalTester(Class<?> resourceLoadClass, ResolvableType type);1516357852;Create a new {@link AbstractJsonMarshalTester} instance._@param resourceLoadClass the source class used when loading relative classpath_resources_@param type the type under test;public AbstractJsonMarshalTester(Class<?> resourceLoadClass, ResolvableType type) {_		Assert.notNull(resourceLoadClass, "ResourceLoadClass must not be null")__		Assert.notNull(type, "Type must not be null")__		initialize(resourceLoadClass, type)__	};create,a,new,link,abstract,json,marshal,tester,instance,param,resource,load,class,the,source,class,used,when,loading,relative,classpath,resources,param,type,the,type,under,test;public,abstract,json,marshal,tester,class,resource,load,class,resolvable,type,type,assert,not,null,resource,load,class,resource,load,class,must,not,be,null,assert,not,null,type,type,must,not,be,null,initialize,resource,load,class,type
AbstractJsonMarshalTester -> public AbstractJsonMarshalTester(Class<?> resourceLoadClass, ResolvableType type);1532738143;Create a new {@link AbstractJsonMarshalTester} instance._@param resourceLoadClass the source class used when loading relative classpath_resources_@param type the type under test;public AbstractJsonMarshalTester(Class<?> resourceLoadClass, ResolvableType type) {_		Assert.notNull(resourceLoadClass, "ResourceLoadClass must not be null")__		Assert.notNull(type, "Type must not be null")__		initialize(resourceLoadClass, type)__	};create,a,new,link,abstract,json,marshal,tester,instance,param,resource,load,class,the,source,class,used,when,loading,relative,classpath,resources,param,type,the,type,under,test;public,abstract,json,marshal,tester,class,resource,load,class,resolvable,type,type,assert,not,null,resource,load,class,resource,load,class,must,not,be,null,assert,not,null,type,type,must,not,be,null,initialize,resource,load,class,type
AbstractJsonMarshalTester -> protected AbstractJsonMarshalTester();1507173536;Create a new uninitialized {@link AbstractJsonMarshalTester} instance.;protected AbstractJsonMarshalTester() {_	};create,a,new,uninitialized,link,abstract,json,marshal,tester,instance;protected,abstract,json,marshal,tester
AbstractJsonMarshalTester -> protected AbstractJsonMarshalTester();1512760426;Create a new uninitialized {@link AbstractJsonMarshalTester} instance.;protected AbstractJsonMarshalTester() {_	};create,a,new,uninitialized,link,abstract,json,marshal,tester,instance;protected,abstract,json,marshal,tester
AbstractJsonMarshalTester -> protected AbstractJsonMarshalTester();1516215803;Create a new uninitialized {@link AbstractJsonMarshalTester} instance.;protected AbstractJsonMarshalTester() {_	};create,a,new,uninitialized,link,abstract,json,marshal,tester,instance;protected,abstract,json,marshal,tester
AbstractJsonMarshalTester -> protected AbstractJsonMarshalTester();1516357852;Create a new uninitialized {@link AbstractJsonMarshalTester} instance.;protected AbstractJsonMarshalTester() {_	};create,a,new,uninitialized,link,abstract,json,marshal,tester,instance;protected,abstract,json,marshal,tester
AbstractJsonMarshalTester -> protected AbstractJsonMarshalTester();1532738143;Create a new uninitialized {@link AbstractJsonMarshalTester} instance.;protected AbstractJsonMarshalTester() {_	};create,a,new,uninitialized,link,abstract,json,marshal,tester,instance;protected,abstract,json,marshal,tester
AbstractJsonMarshalTester -> public ObjectContent<T> read(Reader reader) throws IOException;1507173536;Return {@link ObjectContent} from reading from the specified reader._@param reader the source reader_@return the {@link ObjectContent}_@throws IOException on read error;public ObjectContent<T> read(Reader reader) throws IOException {_		verify()__		Assert.notNull(reader, "Reader must not be null")__		T object = readObject(reader, this.type)__		closeQuietly(reader)__		return new ObjectContent<>(this.type, object)__	};return,link,object,content,from,reading,from,the,specified,reader,param,reader,the,source,reader,return,the,link,object,content,throws,ioexception,on,read,error;public,object,content,t,read,reader,reader,throws,ioexception,verify,assert,not,null,reader,reader,must,not,be,null,t,object,read,object,reader,this,type,close,quietly,reader,return,new,object,content,this,type,object
AbstractJsonMarshalTester -> public ObjectContent<T> read(Reader reader) throws IOException;1512760426;Return {@link ObjectContent} from reading from the specified reader._@param reader the source reader_@return the {@link ObjectContent}_@throws IOException on read error;public ObjectContent<T> read(Reader reader) throws IOException {_		verify()__		Assert.notNull(reader, "Reader must not be null")__		T object = readObject(reader, this.type)__		closeQuietly(reader)__		return new ObjectContent<>(this.type, object)__	};return,link,object,content,from,reading,from,the,specified,reader,param,reader,the,source,reader,return,the,link,object,content,throws,ioexception,on,read,error;public,object,content,t,read,reader,reader,throws,ioexception,verify,assert,not,null,reader,reader,must,not,be,null,t,object,read,object,reader,this,type,close,quietly,reader,return,new,object,content,this,type,object
AbstractJsonMarshalTester -> public ObjectContent<T> read(Reader reader) throws IOException;1516215803;Return {@link ObjectContent} from reading from the specified reader._@param reader the source reader_@return the {@link ObjectContent}_@throws IOException on read error;public ObjectContent<T> read(Reader reader) throws IOException {_		verify()__		Assert.notNull(reader, "Reader must not be null")__		T object = readObject(reader, this.type)__		closeQuietly(reader)__		return new ObjectContent<>(this.type, object)__	};return,link,object,content,from,reading,from,the,specified,reader,param,reader,the,source,reader,return,the,link,object,content,throws,ioexception,on,read,error;public,object,content,t,read,reader,reader,throws,ioexception,verify,assert,not,null,reader,reader,must,not,be,null,t,object,read,object,reader,this,type,close,quietly,reader,return,new,object,content,this,type,object
AbstractJsonMarshalTester -> public ObjectContent<T> read(Reader reader) throws IOException;1516357852;Return {@link ObjectContent} from reading from the specified reader._@param reader the source reader_@return the {@link ObjectContent}_@throws IOException on read error;public ObjectContent<T> read(Reader reader) throws IOException {_		verify()__		Assert.notNull(reader, "Reader must not be null")__		T object = readObject(reader, this.type)__		closeQuietly(reader)__		return new ObjectContent<>(this.type, object)__	};return,link,object,content,from,reading,from,the,specified,reader,param,reader,the,source,reader,return,the,link,object,content,throws,ioexception,on,read,error;public,object,content,t,read,reader,reader,throws,ioexception,verify,assert,not,null,reader,reader,must,not,be,null,t,object,read,object,reader,this,type,close,quietly,reader,return,new,object,content,this,type,object
AbstractJsonMarshalTester -> public ObjectContent<T> read(Reader reader) throws IOException;1532738143;Return {@link ObjectContent} from reading from the specified reader._@param reader the source reader_@return the {@link ObjectContent}_@throws IOException on read error;public ObjectContent<T> read(Reader reader) throws IOException {_		verify()__		Assert.notNull(reader, "Reader must not be null")__		T object = readObject(reader, this.type)__		closeQuietly(reader)__		return new ObjectContent<>(this.type, object)__	};return,link,object,content,from,reading,from,the,specified,reader,param,reader,the,source,reader,return,the,link,object,content,throws,ioexception,on,read,error;public,object,content,t,read,reader,reader,throws,ioexception,verify,assert,not,null,reader,reader,must,not,be,null,t,object,read,object,reader,this,type,close,quietly,reader,return,new,object,content,this,type,object
AbstractJsonMarshalTester -> protected final ResolvableType getType();1507173536;Return the type under test._@return the type under test;protected final ResolvableType getType() {_		return this.type__	};return,the,type,under,test,return,the,type,under,test;protected,final,resolvable,type,get,type,return,this,type
AbstractJsonMarshalTester -> protected final ResolvableType getType();1512760426;Return the type under test._@return the type under test;protected final ResolvableType getType() {_		return this.type__	};return,the,type,under,test,return,the,type,under,test;protected,final,resolvable,type,get,type,return,this,type
AbstractJsonMarshalTester -> protected final ResolvableType getType();1516215803;Return the type under test._@return the type under test;protected final ResolvableType getType() {_		return this.type__	};return,the,type,under,test,return,the,type,under,test;protected,final,resolvable,type,get,type,return,this,type
AbstractJsonMarshalTester -> protected final ResolvableType getType();1516357852;Return the type under test._@return the type under test;protected final ResolvableType getType() {_		return this.type__	};return,the,type,under,test,return,the,type,under,test;protected,final,resolvable,type,get,type,return,this,type
AbstractJsonMarshalTester -> protected final ResolvableType getType();1532738143;Return the type under test._@return the type under test;protected final ResolvableType getType() {_		return this.type__	};return,the,type,under,test,return,the,type,under,test;protected,final,resolvable,type,get,type,return,this,type
AbstractJsonMarshalTester -> protected final void initialize(Class<?> resourceLoadClass, ResolvableType type);1507173536;Initialize the marshal tester for use._@param resourceLoadClass the source class used when loading relative classpath_resources_@param type the type under test;protected final void initialize(Class<?> resourceLoadClass, ResolvableType type) {_		if (this.resourceLoadClass == null && this.type == null) {_			this.resourceLoadClass = resourceLoadClass__			this.type = type__		}_	};initialize,the,marshal,tester,for,use,param,resource,load,class,the,source,class,used,when,loading,relative,classpath,resources,param,type,the,type,under,test;protected,final,void,initialize,class,resource,load,class,resolvable,type,type,if,this,resource,load,class,null,this,type,null,this,resource,load,class,resource,load,class,this,type,type
AbstractJsonMarshalTester -> protected final void initialize(Class<?> resourceLoadClass, ResolvableType type);1512760426;Initialize the marshal tester for use._@param resourceLoadClass the source class used when loading relative classpath_resources_@param type the type under test;protected final void initialize(Class<?> resourceLoadClass, ResolvableType type) {_		if (this.resourceLoadClass == null && this.type == null) {_			this.resourceLoadClass = resourceLoadClass__			this.type = type__		}_	};initialize,the,marshal,tester,for,use,param,resource,load,class,the,source,class,used,when,loading,relative,classpath,resources,param,type,the,type,under,test;protected,final,void,initialize,class,resource,load,class,resolvable,type,type,if,this,resource,load,class,null,this,type,null,this,resource,load,class,resource,load,class,this,type,type
AbstractJsonMarshalTester -> protected final void initialize(Class<?> resourceLoadClass, ResolvableType type);1516215803;Initialize the marshal tester for use._@param resourceLoadClass the source class used when loading relative classpath_resources_@param type the type under test;protected final void initialize(Class<?> resourceLoadClass, ResolvableType type) {_		if (this.resourceLoadClass == null && this.type == null) {_			this.resourceLoadClass = resourceLoadClass__			this.type = type__		}_	};initialize,the,marshal,tester,for,use,param,resource,load,class,the,source,class,used,when,loading,relative,classpath,resources,param,type,the,type,under,test;protected,final,void,initialize,class,resource,load,class,resolvable,type,type,if,this,resource,load,class,null,this,type,null,this,resource,load,class,resource,load,class,this,type,type
AbstractJsonMarshalTester -> protected final void initialize(Class<?> resourceLoadClass, ResolvableType type);1516357852;Initialize the marshal tester for use._@param resourceLoadClass the source class used when loading relative classpath_resources_@param type the type under test;protected final void initialize(Class<?> resourceLoadClass, ResolvableType type) {_		if (this.resourceLoadClass == null && this.type == null) {_			this.resourceLoadClass = resourceLoadClass__			this.type = type__		}_	};initialize,the,marshal,tester,for,use,param,resource,load,class,the,source,class,used,when,loading,relative,classpath,resources,param,type,the,type,under,test;protected,final,void,initialize,class,resource,load,class,resolvable,type,type,if,this,resource,load,class,null,this,type,null,this,resource,load,class,resource,load,class,this,type,type
AbstractJsonMarshalTester -> protected final void initialize(Class<?> resourceLoadClass, ResolvableType type);1532738143;Initialize the marshal tester for use._@param resourceLoadClass the source class used when loading relative classpath_resources_@param type the type under test;protected final void initialize(Class<?> resourceLoadClass, ResolvableType type) {_		if (this.resourceLoadClass == null && this.type == null) {_			this.resourceLoadClass = resourceLoadClass__			this.type = type__		}_	};initialize,the,marshal,tester,for,use,param,resource,load,class,the,source,class,used,when,loading,relative,classpath,resources,param,type,the,type,under,test;protected,final,void,initialize,class,resource,load,class,resolvable,type,type,if,this,resource,load,class,null,this,type,null,this,resource,load,class,resource,load,class,this,type,type
