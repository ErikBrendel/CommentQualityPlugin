# id;timestamp;commentText;codeText;commentWords;codeWords
MockitoPostProcessor -> public MockitoPostProcessor(Set<Definition> definitions);1507173536;Create a new {@link MockitoPostProcessor} instance with the given initial_definitions._@param definitions the initial definitions;public MockitoPostProcessor(Set<Definition> definitions) {_		this.definitions = definitions__	};create,a,new,link,mockito,post,processor,instance,with,the,given,initial,definitions,param,definitions,the,initial,definitions;public,mockito,post,processor,set,definition,definitions,this,definitions,definitions
MockitoPostProcessor -> public MockitoPostProcessor(Set<Definition> definitions);1508247426;Create a new {@link MockitoPostProcessor} instance with the given initial_definitions._@param definitions the initial definitions;public MockitoPostProcessor(Set<Definition> definitions) {_		this.definitions = definitions__	};create,a,new,link,mockito,post,processor,instance,with,the,given,initial,definitions,param,definitions,the,initial,definitions;public,mockito,post,processor,set,definition,definitions,this,definitions,definitions
MockitoPostProcessor -> public MockitoPostProcessor(Set<Definition> definitions);1508252188;Create a new {@link MockitoPostProcessor} instance with the given initial_definitions._@param definitions the initial definitions;public MockitoPostProcessor(Set<Definition> definitions) {_		this.definitions = definitions__	};create,a,new,link,mockito,post,processor,instance,with,the,given,initial,definitions,param,definitions,the,initial,definitions;public,mockito,post,processor,set,definition,definitions,this,definitions,definitions
MockitoPostProcessor -> public MockitoPostProcessor(Set<Definition> definitions);1517564108;Create a new {@link MockitoPostProcessor} instance with the given initial_definitions._@param definitions the initial definitions;public MockitoPostProcessor(Set<Definition> definitions) {_		this.definitions = definitions__	};create,a,new,link,mockito,post,processor,instance,with,the,given,initial,definitions,param,definitions,the,initial,definitions;public,mockito,post,processor,set,definition,definitions,this,definitions,definitions
MockitoPostProcessor -> public MockitoPostProcessor(Set<Definition> definitions);1518087233;Create a new {@link MockitoPostProcessor} instance with the given initial_definitions._@param definitions the initial definitions;public MockitoPostProcessor(Set<Definition> definitions) {_		this.definitions = definitions__	};create,a,new,link,mockito,post,processor,instance,with,the,given,initial,definitions,param,definitions,the,initial,definitions;public,mockito,post,processor,set,definition,definitions,this,definitions,definitions
MockitoPostProcessor -> public MockitoPostProcessor(Set<Definition> definitions);1519362690;Create a new {@link MockitoPostProcessor} instance with the given initial_definitions._@param definitions the initial definitions;public MockitoPostProcessor(Set<Definition> definitions) {_		this.definitions = definitions__	};create,a,new,link,mockito,post,processor,instance,with,the,given,initial,definitions,param,definitions,the,initial,definitions;public,mockito,post,processor,set,definition,definitions,this,definitions,definitions
MockitoPostProcessor -> public MockitoPostProcessor(Set<Definition> definitions);1536266205;Create a new {@link MockitoPostProcessor} instance with the given initial_definitions._@param definitions the initial definitions;public MockitoPostProcessor(Set<Definition> definitions) {_		this.definitions = definitions__	};create,a,new,link,mockito,post,processor,instance,with,the,given,initial,definitions,param,definitions,the,initial,definitions;public,mockito,post,processor,set,definition,definitions,this,definitions,definitions
MockitoPostProcessor -> public MockitoPostProcessor(Set<Definition> definitions);1536266549;Create a new {@link MockitoPostProcessor} instance with the given initial_definitions._@param definitions the initial definitions;public MockitoPostProcessor(Set<Definition> definitions) {_		this.definitions = definitions__	};create,a,new,link,mockito,post,processor,instance,with,the,given,initial,definitions,param,definitions,the,initial,definitions;public,mockito,post,processor,set,definition,definitions,this,definitions,definitions
MockitoPostProcessor -> public static void register(BeanDefinitionRegistry registry);1507173536;Register the processor with a {@link BeanDefinitionRegistry}. Not required when_using the {@link SpringRunner} as registration is automatic._@param registry the bean definition registry;public static void register(BeanDefinitionRegistry registry) {_		register(registry, null)__	};register,the,processor,with,a,link,bean,definition,registry,not,required,when,using,the,link,spring,runner,as,registration,is,automatic,param,registry,the,bean,definition,registry;public,static,void,register,bean,definition,registry,registry,register,registry,null
MockitoPostProcessor -> public static void register(BeanDefinitionRegistry registry);1508247426;Register the processor with a {@link BeanDefinitionRegistry}. Not required when_using the {@link SpringRunner} as registration is automatic._@param registry the bean definition registry;public static void register(BeanDefinitionRegistry registry) {_		register(registry, null)__	};register,the,processor,with,a,link,bean,definition,registry,not,required,when,using,the,link,spring,runner,as,registration,is,automatic,param,registry,the,bean,definition,registry;public,static,void,register,bean,definition,registry,registry,register,registry,null
MockitoPostProcessor -> public static void register(BeanDefinitionRegistry registry);1508252188;Register the processor with a {@link BeanDefinitionRegistry}. Not required when_using the {@link SpringRunner} as registration is automatic._@param registry the bean definition registry;public static void register(BeanDefinitionRegistry registry) {_		register(registry, null)__	};register,the,processor,with,a,link,bean,definition,registry,not,required,when,using,the,link,spring,runner,as,registration,is,automatic,param,registry,the,bean,definition,registry;public,static,void,register,bean,definition,registry,registry,register,registry,null
MockitoPostProcessor -> public static void register(BeanDefinitionRegistry registry);1517564108;Register the processor with a {@link BeanDefinitionRegistry}. Not required when_using the {@link SpringRunner} as registration is automatic._@param registry the bean definition registry;public static void register(BeanDefinitionRegistry registry) {_		register(registry, null)__	};register,the,processor,with,a,link,bean,definition,registry,not,required,when,using,the,link,spring,runner,as,registration,is,automatic,param,registry,the,bean,definition,registry;public,static,void,register,bean,definition,registry,registry,register,registry,null
MockitoPostProcessor -> public static void register(BeanDefinitionRegistry registry);1518087233;Register the processor with a {@link BeanDefinitionRegistry}. Not required when_using the {@link SpringRunner} as registration is automatic._@param registry the bean definition registry;public static void register(BeanDefinitionRegistry registry) {_		register(registry, null)__	};register,the,processor,with,a,link,bean,definition,registry,not,required,when,using,the,link,spring,runner,as,registration,is,automatic,param,registry,the,bean,definition,registry;public,static,void,register,bean,definition,registry,registry,register,registry,null
MockitoPostProcessor -> public static void register(BeanDefinitionRegistry registry);1519362690;Register the processor with a {@link BeanDefinitionRegistry}. Not required when_using the {@link SpringRunner} as registration is automatic._@param registry the bean definition registry;public static void register(BeanDefinitionRegistry registry) {_		register(registry, null)__	};register,the,processor,with,a,link,bean,definition,registry,not,required,when,using,the,link,spring,runner,as,registration,is,automatic,param,registry,the,bean,definition,registry;public,static,void,register,bean,definition,registry,registry,register,registry,null
MockitoPostProcessor -> public static void register(BeanDefinitionRegistry registry);1536266205;Register the processor with a {@link BeanDefinitionRegistry}. Not required when_using the {@link SpringRunner} as registration is automatic._@param registry the bean definition registry;public static void register(BeanDefinitionRegistry registry) {_		register(registry, null)__	};register,the,processor,with,a,link,bean,definition,registry,not,required,when,using,the,link,spring,runner,as,registration,is,automatic,param,registry,the,bean,definition,registry;public,static,void,register,bean,definition,registry,registry,register,registry,null
MockitoPostProcessor -> public static void register(BeanDefinitionRegistry registry);1536266549;Register the processor with a {@link BeanDefinitionRegistry}. Not required when_using the {@link SpringRunner} as registration is automatic._@param registry the bean definition registry;public static void register(BeanDefinitionRegistry registry) {_		register(registry, null)__	};register,the,processor,with,a,link,bean,definition,registry,not,required,when,using,the,link,spring,runner,as,registration,is,automatic,param,registry,the,bean,definition,registry;public,static,void,register,bean,definition,registry,registry,register,registry,null
MockitoPostProcessor -> @SuppressWarnings("unchecked") 	public static void register(BeanDefinitionRegistry registry, 			Class<? extends MockitoPostProcessor> postProcessor, 			Set<Definition> definitions);1507173536;Register the processor with a {@link BeanDefinitionRegistry}. Not required when_using the {@link SpringRunner} as registration is automatic._@param registry the bean definition registry_@param postProcessor the post processor class to register_@param definitions the initial mock/spy definitions;@SuppressWarnings("unchecked")_	public static void register(BeanDefinitionRegistry registry,_			Class<? extends MockitoPostProcessor> postProcessor,_			Set<Definition> definitions) {_		SpyPostProcessor.register(registry)__		BeanDefinition definition = getOrAddBeanDefinition(registry, postProcessor)__		ValueHolder constructorArg = definition.getConstructorArgumentValues()_				.getIndexedArgumentValue(0, Set.class)__		Set<Definition> existing = (Set<Definition>) constructorArg.getValue()__		if (definitions != null) {_			existing.addAll(definitions)__		}_	};register,the,processor,with,a,link,bean,definition,registry,not,required,when,using,the,link,spring,runner,as,registration,is,automatic,param,registry,the,bean,definition,registry,param,post,processor,the,post,processor,class,to,register,param,definitions,the,initial,mock,spy,definitions;suppress,warnings,unchecked,public,static,void,register,bean,definition,registry,registry,class,extends,mockito,post,processor,post,processor,set,definition,definitions,spy,post,processor,register,registry,bean,definition,definition,get,or,add,bean,definition,registry,post,processor,value,holder,constructor,arg,definition,get,constructor,argument,values,get,indexed,argument,value,0,set,class,set,definition,existing,set,definition,constructor,arg,get,value,if,definitions,null,existing,add,all,definitions
MockitoPostProcessor -> @SuppressWarnings("unchecked") 	public static void register(BeanDefinitionRegistry registry, 			Class<? extends MockitoPostProcessor> postProcessor, 			Set<Definition> definitions);1508247426;Register the processor with a {@link BeanDefinitionRegistry}. Not required when_using the {@link SpringRunner} as registration is automatic._@param registry the bean definition registry_@param postProcessor the post processor class to register_@param definitions the initial mock/spy definitions;@SuppressWarnings("unchecked")_	public static void register(BeanDefinitionRegistry registry,_			Class<? extends MockitoPostProcessor> postProcessor,_			Set<Definition> definitions) {_		SpyPostProcessor.register(registry)__		BeanDefinition definition = getOrAddBeanDefinition(registry, postProcessor)__		ValueHolder constructorArg = definition.getConstructorArgumentValues()_				.getIndexedArgumentValue(0, Set.class)__		Set<Definition> existing = (Set<Definition>) constructorArg.getValue()__		if (definitions != null) {_			existing.addAll(definitions)__		}_	};register,the,processor,with,a,link,bean,definition,registry,not,required,when,using,the,link,spring,runner,as,registration,is,automatic,param,registry,the,bean,definition,registry,param,post,processor,the,post,processor,class,to,register,param,definitions,the,initial,mock,spy,definitions;suppress,warnings,unchecked,public,static,void,register,bean,definition,registry,registry,class,extends,mockito,post,processor,post,processor,set,definition,definitions,spy,post,processor,register,registry,bean,definition,definition,get,or,add,bean,definition,registry,post,processor,value,holder,constructor,arg,definition,get,constructor,argument,values,get,indexed,argument,value,0,set,class,set,definition,existing,set,definition,constructor,arg,get,value,if,definitions,null,existing,add,all,definitions
MockitoPostProcessor -> @SuppressWarnings("unchecked") 	public static void register(BeanDefinitionRegistry registry, 			Class<? extends MockitoPostProcessor> postProcessor, 			Set<Definition> definitions);1508252188;Register the processor with a {@link BeanDefinitionRegistry}. Not required when_using the {@link SpringRunner} as registration is automatic._@param registry the bean definition registry_@param postProcessor the post processor class to register_@param definitions the initial mock/spy definitions;@SuppressWarnings("unchecked")_	public static void register(BeanDefinitionRegistry registry,_			Class<? extends MockitoPostProcessor> postProcessor,_			Set<Definition> definitions) {_		SpyPostProcessor.register(registry)__		BeanDefinition definition = getOrAddBeanDefinition(registry, postProcessor)__		ValueHolder constructorArg = definition.getConstructorArgumentValues()_				.getIndexedArgumentValue(0, Set.class)__		Set<Definition> existing = (Set<Definition>) constructorArg.getValue()__		if (definitions != null) {_			existing.addAll(definitions)__		}_	};register,the,processor,with,a,link,bean,definition,registry,not,required,when,using,the,link,spring,runner,as,registration,is,automatic,param,registry,the,bean,definition,registry,param,post,processor,the,post,processor,class,to,register,param,definitions,the,initial,mock,spy,definitions;suppress,warnings,unchecked,public,static,void,register,bean,definition,registry,registry,class,extends,mockito,post,processor,post,processor,set,definition,definitions,spy,post,processor,register,registry,bean,definition,definition,get,or,add,bean,definition,registry,post,processor,value,holder,constructor,arg,definition,get,constructor,argument,values,get,indexed,argument,value,0,set,class,set,definition,existing,set,definition,constructor,arg,get,value,if,definitions,null,existing,add,all,definitions
MockitoPostProcessor -> @SuppressWarnings("unchecked") 	public static void register(BeanDefinitionRegistry registry, 			Class<? extends MockitoPostProcessor> postProcessor, 			Set<Definition> definitions);1517564108;Register the processor with a {@link BeanDefinitionRegistry}. Not required when_using the {@link SpringRunner} as registration is automatic._@param registry the bean definition registry_@param postProcessor the post processor class to register_@param definitions the initial mock/spy definitions;@SuppressWarnings("unchecked")_	public static void register(BeanDefinitionRegistry registry,_			Class<? extends MockitoPostProcessor> postProcessor,_			Set<Definition> definitions) {_		SpyPostProcessor.register(registry)__		BeanDefinition definition = getOrAddBeanDefinition(registry, postProcessor)__		ValueHolder constructorArg = definition.getConstructorArgumentValues()_				.getIndexedArgumentValue(0, Set.class)__		Set<Definition> existing = (Set<Definition>) constructorArg.getValue()__		if (definitions != null) {_			existing.addAll(definitions)__		}_	};register,the,processor,with,a,link,bean,definition,registry,not,required,when,using,the,link,spring,runner,as,registration,is,automatic,param,registry,the,bean,definition,registry,param,post,processor,the,post,processor,class,to,register,param,definitions,the,initial,mock,spy,definitions;suppress,warnings,unchecked,public,static,void,register,bean,definition,registry,registry,class,extends,mockito,post,processor,post,processor,set,definition,definitions,spy,post,processor,register,registry,bean,definition,definition,get,or,add,bean,definition,registry,post,processor,value,holder,constructor,arg,definition,get,constructor,argument,values,get,indexed,argument,value,0,set,class,set,definition,existing,set,definition,constructor,arg,get,value,if,definitions,null,existing,add,all,definitions
MockitoPostProcessor -> @SuppressWarnings("unchecked") 	public static void register(BeanDefinitionRegistry registry, 			Class<? extends MockitoPostProcessor> postProcessor, 			Set<Definition> definitions);1518087233;Register the processor with a {@link BeanDefinitionRegistry}. Not required when_using the {@link SpringRunner} as registration is automatic._@param registry the bean definition registry_@param postProcessor the post processor class to register_@param definitions the initial mock/spy definitions;@SuppressWarnings("unchecked")_	public static void register(BeanDefinitionRegistry registry,_			Class<? extends MockitoPostProcessor> postProcessor,_			Set<Definition> definitions) {_		SpyPostProcessor.register(registry)__		BeanDefinition definition = getOrAddBeanDefinition(registry, postProcessor)__		ValueHolder constructorArg = definition.getConstructorArgumentValues()_				.getIndexedArgumentValue(0, Set.class)__		Set<Definition> existing = (Set<Definition>) constructorArg.getValue()__		if (definitions != null) {_			existing.addAll(definitions)__		}_	};register,the,processor,with,a,link,bean,definition,registry,not,required,when,using,the,link,spring,runner,as,registration,is,automatic,param,registry,the,bean,definition,registry,param,post,processor,the,post,processor,class,to,register,param,definitions,the,initial,mock,spy,definitions;suppress,warnings,unchecked,public,static,void,register,bean,definition,registry,registry,class,extends,mockito,post,processor,post,processor,set,definition,definitions,spy,post,processor,register,registry,bean,definition,definition,get,or,add,bean,definition,registry,post,processor,value,holder,constructor,arg,definition,get,constructor,argument,values,get,indexed,argument,value,0,set,class,set,definition,existing,set,definition,constructor,arg,get,value,if,definitions,null,existing,add,all,definitions
MockitoPostProcessor -> @SuppressWarnings("unchecked") 	public static void register(BeanDefinitionRegistry registry, 			Class<? extends MockitoPostProcessor> postProcessor, 			Set<Definition> definitions);1519362690;Register the processor with a {@link BeanDefinitionRegistry}. Not required when_using the {@link SpringRunner} as registration is automatic._@param registry the bean definition registry_@param postProcessor the post processor class to register_@param definitions the initial mock/spy definitions;@SuppressWarnings("unchecked")_	public static void register(BeanDefinitionRegistry registry,_			Class<? extends MockitoPostProcessor> postProcessor,_			Set<Definition> definitions) {_		SpyPostProcessor.register(registry)__		BeanDefinition definition = getOrAddBeanDefinition(registry, postProcessor)__		ValueHolder constructorArg = definition.getConstructorArgumentValues()_				.getIndexedArgumentValue(0, Set.class)__		Set<Definition> existing = (Set<Definition>) constructorArg.getValue()__		if (definitions != null) {_			existing.addAll(definitions)__		}_	};register,the,processor,with,a,link,bean,definition,registry,not,required,when,using,the,link,spring,runner,as,registration,is,automatic,param,registry,the,bean,definition,registry,param,post,processor,the,post,processor,class,to,register,param,definitions,the,initial,mock,spy,definitions;suppress,warnings,unchecked,public,static,void,register,bean,definition,registry,registry,class,extends,mockito,post,processor,post,processor,set,definition,definitions,spy,post,processor,register,registry,bean,definition,definition,get,or,add,bean,definition,registry,post,processor,value,holder,constructor,arg,definition,get,constructor,argument,values,get,indexed,argument,value,0,set,class,set,definition,existing,set,definition,constructor,arg,get,value,if,definitions,null,existing,add,all,definitions
MockitoPostProcessor -> @SuppressWarnings("unchecked") 	public static void register(BeanDefinitionRegistry registry, 			Class<? extends MockitoPostProcessor> postProcessor, 			Set<Definition> definitions);1536266205;Register the processor with a {@link BeanDefinitionRegistry}. Not required when_using the {@link SpringRunner} as registration is automatic._@param registry the bean definition registry_@param postProcessor the post processor class to register_@param definitions the initial mock/spy definitions;@SuppressWarnings("unchecked")_	public static void register(BeanDefinitionRegistry registry,_			Class<? extends MockitoPostProcessor> postProcessor,_			Set<Definition> definitions) {_		SpyPostProcessor.register(registry)__		BeanDefinition definition = getOrAddBeanDefinition(registry, postProcessor)__		ValueHolder constructorArg = definition.getConstructorArgumentValues()_				.getIndexedArgumentValue(0, Set.class)__		Set<Definition> existing = (Set<Definition>) constructorArg.getValue()__		if (definitions != null) {_			existing.addAll(definitions)__		}_	};register,the,processor,with,a,link,bean,definition,registry,not,required,when,using,the,link,spring,runner,as,registration,is,automatic,param,registry,the,bean,definition,registry,param,post,processor,the,post,processor,class,to,register,param,definitions,the,initial,mock,spy,definitions;suppress,warnings,unchecked,public,static,void,register,bean,definition,registry,registry,class,extends,mockito,post,processor,post,processor,set,definition,definitions,spy,post,processor,register,registry,bean,definition,definition,get,or,add,bean,definition,registry,post,processor,value,holder,constructor,arg,definition,get,constructor,argument,values,get,indexed,argument,value,0,set,class,set,definition,existing,set,definition,constructor,arg,get,value,if,definitions,null,existing,add,all,definitions
MockitoPostProcessor -> @SuppressWarnings("unchecked") 	public static void register(BeanDefinitionRegistry registry, 			Class<? extends MockitoPostProcessor> postProcessor, 			Set<Definition> definitions);1536266549;Register the processor with a {@link BeanDefinitionRegistry}. Not required when_using the {@link SpringRunner} as registration is automatic._@param registry the bean definition registry_@param postProcessor the post processor class to register_@param definitions the initial mock/spy definitions;@SuppressWarnings("unchecked")_	public static void register(BeanDefinitionRegistry registry,_			Class<? extends MockitoPostProcessor> postProcessor,_			Set<Definition> definitions) {_		SpyPostProcessor.register(registry)__		BeanDefinition definition = getOrAddBeanDefinition(registry, postProcessor)__		ValueHolder constructorArg = definition.getConstructorArgumentValues()_				.getIndexedArgumentValue(0, Set.class)__		Set<Definition> existing = (Set<Definition>) constructorArg.getValue()__		if (definitions != null) {_			existing.addAll(definitions)__		}_	};register,the,processor,with,a,link,bean,definition,registry,not,required,when,using,the,link,spring,runner,as,registration,is,automatic,param,registry,the,bean,definition,registry,param,post,processor,the,post,processor,class,to,register,param,definitions,the,initial,mock,spy,definitions;suppress,warnings,unchecked,public,static,void,register,bean,definition,registry,registry,class,extends,mockito,post,processor,post,processor,set,definition,definitions,spy,post,processor,register,registry,bean,definition,definition,get,or,add,bean,definition,registry,post,processor,value,holder,constructor,arg,definition,get,constructor,argument,values,get,indexed,argument,value,0,set,class,set,definition,existing,set,definition,constructor,arg,get,value,if,definitions,null,existing,add,all,definitions
MockitoPostProcessor -> public static void register(BeanDefinitionRegistry registry, 			Set<Definition> definitions);1507173536;Register the processor with a {@link BeanDefinitionRegistry}. Not required when_using the {@link SpringRunner} as registration is automatic._@param registry the bean definition registry_@param definitions the initial mock/spy definitions;public static void register(BeanDefinitionRegistry registry,_			Set<Definition> definitions) {_		register(registry, MockitoPostProcessor.class, definitions)__	};register,the,processor,with,a,link,bean,definition,registry,not,required,when,using,the,link,spring,runner,as,registration,is,automatic,param,registry,the,bean,definition,registry,param,definitions,the,initial,mock,spy,definitions;public,static,void,register,bean,definition,registry,registry,set,definition,definitions,register,registry,mockito,post,processor,class,definitions
MockitoPostProcessor -> public static void register(BeanDefinitionRegistry registry, 			Set<Definition> definitions);1508247426;Register the processor with a {@link BeanDefinitionRegistry}. Not required when_using the {@link SpringRunner} as registration is automatic._@param registry the bean definition registry_@param definitions the initial mock/spy definitions;public static void register(BeanDefinitionRegistry registry,_			Set<Definition> definitions) {_		register(registry, MockitoPostProcessor.class, definitions)__	};register,the,processor,with,a,link,bean,definition,registry,not,required,when,using,the,link,spring,runner,as,registration,is,automatic,param,registry,the,bean,definition,registry,param,definitions,the,initial,mock,spy,definitions;public,static,void,register,bean,definition,registry,registry,set,definition,definitions,register,registry,mockito,post,processor,class,definitions
MockitoPostProcessor -> public static void register(BeanDefinitionRegistry registry, 			Set<Definition> definitions);1508252188;Register the processor with a {@link BeanDefinitionRegistry}. Not required when_using the {@link SpringRunner} as registration is automatic._@param registry the bean definition registry_@param definitions the initial mock/spy definitions;public static void register(BeanDefinitionRegistry registry,_			Set<Definition> definitions) {_		register(registry, MockitoPostProcessor.class, definitions)__	};register,the,processor,with,a,link,bean,definition,registry,not,required,when,using,the,link,spring,runner,as,registration,is,automatic,param,registry,the,bean,definition,registry,param,definitions,the,initial,mock,spy,definitions;public,static,void,register,bean,definition,registry,registry,set,definition,definitions,register,registry,mockito,post,processor,class,definitions
MockitoPostProcessor -> public static void register(BeanDefinitionRegistry registry, 			Set<Definition> definitions);1517564108;Register the processor with a {@link BeanDefinitionRegistry}. Not required when_using the {@link SpringRunner} as registration is automatic._@param registry the bean definition registry_@param definitions the initial mock/spy definitions;public static void register(BeanDefinitionRegistry registry,_			Set<Definition> definitions) {_		register(registry, MockitoPostProcessor.class, definitions)__	};register,the,processor,with,a,link,bean,definition,registry,not,required,when,using,the,link,spring,runner,as,registration,is,automatic,param,registry,the,bean,definition,registry,param,definitions,the,initial,mock,spy,definitions;public,static,void,register,bean,definition,registry,registry,set,definition,definitions,register,registry,mockito,post,processor,class,definitions
MockitoPostProcessor -> public static void register(BeanDefinitionRegistry registry, 			Set<Definition> definitions);1518087233;Register the processor with a {@link BeanDefinitionRegistry}. Not required when_using the {@link SpringRunner} as registration is automatic._@param registry the bean definition registry_@param definitions the initial mock/spy definitions;public static void register(BeanDefinitionRegistry registry,_			Set<Definition> definitions) {_		register(registry, MockitoPostProcessor.class, definitions)__	};register,the,processor,with,a,link,bean,definition,registry,not,required,when,using,the,link,spring,runner,as,registration,is,automatic,param,registry,the,bean,definition,registry,param,definitions,the,initial,mock,spy,definitions;public,static,void,register,bean,definition,registry,registry,set,definition,definitions,register,registry,mockito,post,processor,class,definitions
MockitoPostProcessor -> public static void register(BeanDefinitionRegistry registry, 			Set<Definition> definitions);1519362690;Register the processor with a {@link BeanDefinitionRegistry}. Not required when_using the {@link SpringRunner} as registration is automatic._@param registry the bean definition registry_@param definitions the initial mock/spy definitions;public static void register(BeanDefinitionRegistry registry,_			Set<Definition> definitions) {_		register(registry, MockitoPostProcessor.class, definitions)__	};register,the,processor,with,a,link,bean,definition,registry,not,required,when,using,the,link,spring,runner,as,registration,is,automatic,param,registry,the,bean,definition,registry,param,definitions,the,initial,mock,spy,definitions;public,static,void,register,bean,definition,registry,registry,set,definition,definitions,register,registry,mockito,post,processor,class,definitions
MockitoPostProcessor -> public static void register(BeanDefinitionRegistry registry, 			Set<Definition> definitions);1536266205;Register the processor with a {@link BeanDefinitionRegistry}. Not required when_using the {@link SpringRunner} as registration is automatic._@param registry the bean definition registry_@param definitions the initial mock/spy definitions;public static void register(BeanDefinitionRegistry registry,_			Set<Definition> definitions) {_		register(registry, MockitoPostProcessor.class, definitions)__	};register,the,processor,with,a,link,bean,definition,registry,not,required,when,using,the,link,spring,runner,as,registration,is,automatic,param,registry,the,bean,definition,registry,param,definitions,the,initial,mock,spy,definitions;public,static,void,register,bean,definition,registry,registry,set,definition,definitions,register,registry,mockito,post,processor,class,definitions
MockitoPostProcessor -> public static void register(BeanDefinitionRegistry registry, 			Set<Definition> definitions);1536266549;Register the processor with a {@link BeanDefinitionRegistry}. Not required when_using the {@link SpringRunner} as registration is automatic._@param registry the bean definition registry_@param definitions the initial mock/spy definitions;public static void register(BeanDefinitionRegistry registry,_			Set<Definition> definitions) {_		register(registry, MockitoPostProcessor.class, definitions)__	};register,the,processor,with,a,link,bean,definition,registry,not,required,when,using,the,link,spring,runner,as,registration,is,automatic,param,registry,the,bean,definition,registry,param,definitions,the,initial,mock,spy,definitions;public,static,void,register,bean,definition,registry,registry,set,definition,definitions,register,registry,mockito,post,processor,class,definitions
MockitoPostProcessor -> protected final Object createMock(MockDefinition mockDefinition, String name);1507173536;Factory method used by defined beans to actually create the mock._@param mockDefinition the mock definition_@param name the bean name_@return the mock instance;protected final Object createMock(MockDefinition mockDefinition, String name) {_		return mockDefinition.createMock(name + " bean")__	};factory,method,used,by,defined,beans,to,actually,create,the,mock,param,mock,definition,the,mock,definition,param,name,the,bean,name,return,the,mock,instance;protected,final,object,create,mock,mock,definition,mock,definition,string,name,return,mock,definition,create,mock,name,bean
MockitoPostProcessor -> protected final Object createMock(MockDefinition mockDefinition, String name);1508247426;Factory method used by defined beans to actually create the mock._@param mockDefinition the mock definition_@param name the bean name_@return the mock instance;protected final Object createMock(MockDefinition mockDefinition, String name) {_		return mockDefinition.createMock(name + " bean")__	};factory,method,used,by,defined,beans,to,actually,create,the,mock,param,mock,definition,the,mock,definition,param,name,the,bean,name,return,the,mock,instance;protected,final,object,create,mock,mock,definition,mock,definition,string,name,return,mock,definition,create,mock,name,bean
MockitoPostProcessor -> protected final Object createMock(MockDefinition mockDefinition, String name);1508252188;Factory method used by defined beans to actually create the mock._@param mockDefinition the mock definition_@param name the bean name_@return the mock instance;protected final Object createMock(MockDefinition mockDefinition, String name) {_		return mockDefinition.createMock(name + " bean")__	};factory,method,used,by,defined,beans,to,actually,create,the,mock,param,mock,definition,the,mock,definition,param,name,the,bean,name,return,the,mock,instance;protected,final,object,create,mock,mock,definition,mock,definition,string,name,return,mock,definition,create,mock,name,bean
MockitoPostProcessor -> protected final Object createMock(MockDefinition mockDefinition, String name);1517564108;Factory method used by defined beans to actually create the mock._@param mockDefinition the mock definition_@param name the bean name_@return the mock instance;protected final Object createMock(MockDefinition mockDefinition, String name) {_		return mockDefinition.createMock(name + " bean")__	};factory,method,used,by,defined,beans,to,actually,create,the,mock,param,mock,definition,the,mock,definition,param,name,the,bean,name,return,the,mock,instance;protected,final,object,create,mock,mock,definition,mock,definition,string,name,return,mock,definition,create,mock,name,bean
MockitoPostProcessor -> protected final Object createMock(MockDefinition mockDefinition, String name);1518087233;Factory method used by defined beans to actually create the mock._@param mockDefinition the mock definition_@param name the bean name_@return the mock instance;protected final Object createMock(MockDefinition mockDefinition, String name) {_		return mockDefinition.createMock(name + " bean")__	};factory,method,used,by,defined,beans,to,actually,create,the,mock,param,mock,definition,the,mock,definition,param,name,the,bean,name,return,the,mock,instance;protected,final,object,create,mock,mock,definition,mock,definition,string,name,return,mock,definition,create,mock,name,bean
MockitoPostProcessor -> protected final Object createMock(MockDefinition mockDefinition, String name);1519362690;Factory method used by defined beans to actually create the mock._@param mockDefinition the mock definition_@param name the bean name_@return the mock instance;protected final Object createMock(MockDefinition mockDefinition, String name) {_		return mockDefinition.createMock(name + " bean")__	};factory,method,used,by,defined,beans,to,actually,create,the,mock,param,mock,definition,the,mock,definition,param,name,the,bean,name,return,the,mock,instance;protected,final,object,create,mock,mock,definition,mock,definition,string,name,return,mock,definition,create,mock,name,bean
