commented;modifiers;parameterAmount;loc;comment;code
false;public;0;10;;@Test public void testJdbcTemplate() {     ExampleRepository repository = new ExampleRepository(this.jdbcTemplate).     repository.save(new ExampleEntity(1, "John")).     Collection<ExampleEntity> entities = repository.findAll().     assertThat(entities).hasSize(1).     ExampleEntity entity = entities.iterator().next().     assertThat(entity.getId()).isEqualTo(1).     assertThat(entity.getName()).isEqualTo("John"). }
false;public;0;6;;@Test public void replacesDefinedDataSourceWithEmbeddedDefault() throws Exception {     String product = this.dataSource.getConnection().getMetaData().getDatabaseProductName().     assertThat(product).isEqualTo("H2"). }
false;public;0;5;;@Test public void didNotInjectExampleRepository() {     assertThatExceptionOfType(NoSuchBeanDefinitionException.class).isThrownBy(() -> this.applicationContext.getBean(ExampleRepository.class)). }
false;public;0;5;;@Test public void flywayAutoConfigurationWasImported() {     assertThat(this.applicationContext).has(importedAutoConfiguration(FlywayAutoConfiguration.class)). }
false;public;0;5;;@Test public void liquibaseAutoConfigurationWasImported() {     assertThat(this.applicationContext).has(importedAutoConfiguration(LiquibaseAutoConfiguration.class)). }
