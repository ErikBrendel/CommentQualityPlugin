commented;modifiers;parameterAmount;loc;comment;code
false;protected;1;17;;@Override protected Statement methodBlock(FrameworkMethod frameworkMethod) {     Statement statement = super.methodBlock(frameworkMethod).     statement = new AlwaysPassStatement(statement).     OutputCapture outputCapture = new OutputCapture().     if (frameworkMethod.getName().equals("shouldPrint")) {         outputCapture.expect(containsString("HTTP Method")).     } else if (frameworkMethod.getName().equals("shouldNotPrint")) {         outputCapture.expect(not(containsString("HTTP Method"))).     } else {         throw new IllegalStateException("Unexpected test method").     }     System.err.println(frameworkMethod.getName()).     return outputCapture.apply(statement, null). }
false;public;0;8;;@Override public void evaluate() throws Throwable {     try {         this.delegate.evaluate().     } catch (AssertionError ex) {     } }
