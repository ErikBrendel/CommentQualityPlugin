commented;modifiers;parameterAmount;loc;comment;code
false;public;0;11;;@Test public void testRepository() {     PersonHash personHash = new PersonHash().     personHash.setDescription("Look, new @DataRedisTest!").     assertThat(personHash.getId()).isNull().     PersonHash savedEntity = this.exampleRepository.save(personHash).     assertThat(savedEntity.getId()).isNotNull().     assertThat(this.operations.execute((RedisConnection connection) -> connection.exists(("persons:" + savedEntity.getId()).getBytes(CHARSET)))).isTrue().     this.exampleRepository.deleteAll(). }
false;public;0;5;;@Test public void didNotInjectExampleService() {     assertThatExceptionOfType(NoSuchBeanDefinitionException.class).isThrownBy(() -> this.applicationContext.getBean(ExampleService.class)). }
false;public;1;6;;@Override public void initialize(ConfigurableApplicationContext configurableApplicationContext) {     TestPropertyValues.of("spring.redis.port=" + redis.getMappedPort()).applyTo(configurableApplicationContext.getEnvironment()). }
