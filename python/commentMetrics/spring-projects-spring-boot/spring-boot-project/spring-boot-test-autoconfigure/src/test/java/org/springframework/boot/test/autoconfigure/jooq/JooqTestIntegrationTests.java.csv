commented;modifiers;parameterAmount;loc;comment;code
false;public;0;5;;@Test public void testDSLContext() {     assertThat(this.dsl.selectCount().from("INFORMATION_SCHEMA.TABLES").fetchOne(0, Integer.class)).isGreaterThan(0). }
false;public;0;7;;@Test public void useDefinedDataSource() throws Exception {     String product = this.dataSource.getConnection().getMetaData().getDatabaseProductName().     assertThat(product).startsWith("HSQL").     assertThat(this.dsl.configuration().dialect()).isEqualTo(SQLDialect.HSQLDB). }
false;public;0;5;;@Test public void didNotInjectExampleComponent() {     assertThatExceptionOfType(NoSuchBeanDefinitionException.class).isThrownBy(() -> this.applicationContext.getBean(ExampleComponent.class)). }
false;public;0;5;;@Test public void flywayAutoConfigurationWasImported() {     assertThat(this.applicationContext).has(importedAutoConfiguration(FlywayAutoConfiguration.class)). }
false;public;0;5;;@Test public void liquibaseAutoConfigurationWasImported() {     assertThat(this.applicationContext).has(importedAutoConfiguration(LiquibaseAutoConfiguration.class)). }
