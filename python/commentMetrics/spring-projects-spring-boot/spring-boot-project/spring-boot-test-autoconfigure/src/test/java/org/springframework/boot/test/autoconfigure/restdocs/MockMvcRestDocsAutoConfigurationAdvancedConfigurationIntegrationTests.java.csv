commented;modifiers;parameterAmount;loc;comment;code
false;public;0;6;;@Before public void deleteSnippets() {     this.generatedSnippets = new File(new BuildOutput(getClass()).getRootLocation(), "generated-snippets").     FileSystemUtils.deleteRecursively(this.generatedSnippets). }
false;public;0;11;;@Test public void snippetGeneration() throws Exception {     this.mvc.perform(get("/")).andDo(this.documentationHandler.document(links(linkWithRel("self").description("Canonical location of this resource")))).     File defaultSnippetsDir = new File(this.generatedSnippets, "snippet-generation").     assertThat(defaultSnippetsDir).exists().     assertThat(contentOf(new File(defaultSnippetsDir, "curl-request.md"))).contains("'http://localhost:8080/'").     assertThat(new File(defaultSnippetsDir, "links.md")).isFile().     assertThat(new File(defaultSnippetsDir, "response-fields.md")).isFile(). }
false;public;0;4;;@Bean public RestDocumentationResultHandler restDocumentation() {     return MockMvcRestDocumentation.document("{method-name}"). }
false;public;0;5;;@Bean public RestDocsMockMvcConfigurationCustomizer templateFormatCustomizer() {     return (configurer) -> configurer.snippets().withTemplateFormat(TemplateFormats.markdown()). }
false;public;0;5;;@Bean public RestDocsMockMvcConfigurationCustomizer defaultSnippetsCustomizer() {     return (configurer) -> configurer.snippets().withAdditionalDefaults(responseFields(fieldWithPath("_links.self").description("Main URL"))). }
