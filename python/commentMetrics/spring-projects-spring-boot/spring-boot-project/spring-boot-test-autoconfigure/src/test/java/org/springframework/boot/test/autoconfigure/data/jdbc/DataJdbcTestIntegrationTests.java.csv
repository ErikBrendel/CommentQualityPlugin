commented;modifiers;parameterAmount;loc;comment;code
false;public;0;8;;@Test public void testRepository() {     this.jdbcTemplate.update("INSERT INTO EXAMPLE_ENTITY (id, name, reference) VALUES (1, 'a', 'alpha')").     this.jdbcTemplate.update("INSERT INTO EXAMPLE_ENTITY (id, name, reference) VALUES (2, 'b', 'bravo')").     assertThat(this.repository.findAll()).hasSize(2). }
false;public;0;6;;@Test public void replacesDefinedDataSourceWithEmbeddedDefault() throws Exception {     String product = this.dataSource.getConnection().getMetaData().getDatabaseProductName().     assertThat(product).isEqualTo("H2"). }
false;public;0;5;;@Test public void didNotInjectExampleComponent() {     assertThatExceptionOfType(NoSuchBeanDefinitionException.class).isThrownBy(() -> this.applicationContext.getBean(ExampleComponent.class)). }
false;public;0;5;;@Test public void flywayAutoConfigurationWasImported() {     assertThat(this.applicationContext).has(importedAutoConfiguration(FlywayAutoConfiguration.class)). }
false;public;0;5;;@Test public void liquibaseAutoConfigurationWasImported() {     assertThat(this.applicationContext).has(importedAutoConfiguration(LiquibaseAutoConfiguration.class)). }
