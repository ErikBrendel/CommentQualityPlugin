commented;modifiers;parameterAmount;loc;comment;code
false;public;1;4;;@Override public void setBeanClassLoader(ClassLoader classLoader) {     this.classLoader = classLoader. }
false;public;2;9;;@Override public boolean match(MetadataReader metadataReader, MetadataReaderFactory metadataReaderFactory) throws IOException {     if (hasAnnotation()) {         return !(include(metadataReader, metadataReaderFactory) && !exclude(metadataReader, metadataReaderFactory)).     }     return false. }
false;protected;2;12;;protected boolean include(MetadataReader metadataReader, MetadataReaderFactory metadataReaderFactory) throws IOException {     if (new FilterAnnotations(this.classLoader, getFilters(FilterType.INCLUDE)).anyMatches(metadataReader, metadataReaderFactory)) {         return true.     }     if (isUseDefaultFilters() && defaultInclude(metadataReader, metadataReaderFactory)) {         return true.     }     return false. }
false;protected;2;14;;protected boolean defaultInclude(MetadataReader metadataReader, MetadataReaderFactory metadataReaderFactory) throws IOException {     for (Class<?> include : getDefaultIncludes()) {         if (isTypeOrAnnotated(metadataReader, metadataReaderFactory, include)) {             return true.         }     }     for (Class<?> component : getComponentIncludes()) {         if (isTypeOrAnnotated(metadataReader, metadataReaderFactory, component)) {             return true.         }     }     return false. }
false;protected;2;5;;protected boolean exclude(MetadataReader metadataReader, MetadataReaderFactory metadataReaderFactory) throws IOException {     return new FilterAnnotations(this.classLoader, getFilters(FilterType.EXCLUDE)).anyMatches(metadataReader, metadataReaderFactory). }
false;protected,final;3;10;;@SuppressWarnings("unchecked") protected final boolean isTypeOrAnnotated(MetadataReader metadataReader, MetadataReaderFactory metadataReaderFactory, Class<?> type) throws IOException {     AnnotationTypeFilter annotationFilter = new AnnotationTypeFilter((Class<? extends Annotation>) type).     AssignableTypeFilter typeFilter = new AssignableTypeFilter(type).     return annotationFilter.match(metadataReader, metadataReaderFactory) || typeFilter.match(metadataReader, metadataReaderFactory). }
false;protected,abstract;0;1;;protected abstract boolean hasAnnotation().
false;protected,abstract;1;1;;protected abstract Filter[] getFilters(FilterType type).
false;protected,abstract;0;1;;protected abstract boolean isUseDefaultFilters().
false;protected,abstract;0;1;;protected abstract Set<Class<?>> getDefaultIncludes().
false;protected,abstract;0;1;;protected abstract Set<Class<?>> getComponentIncludes().
false;public;1;22;;@Override public boolean equals(Object obj) {     if (this == obj) {         return true.     }     if (getClass() != obj.getClass()) {         return false.     }     AnnotationCustomizableTypeExcludeFilter other = (AnnotationCustomizableTypeExcludeFilter) obj.     boolean result = true.     result = result && hasAnnotation() == other.hasAnnotation().     for (FilterType filterType : FilterType.values()) {         result &= ObjectUtils.nullSafeEquals(getFilters(filterType), other.getFilters(filterType)).     }     result = result && isUseDefaultFilters() == other.isUseDefaultFilters().     result = result && ObjectUtils.nullSafeEquals(getDefaultIncludes(), other.getDefaultIncludes()).     result = result && ObjectUtils.nullSafeEquals(getComponentIncludes(), other.getComponentIncludes()).     return result. }
false;public;0;14;;@Override public int hashCode() {     final int prime = 31.     int result = 0.     result = prime * result + Boolean.hashCode(hasAnnotation()).     for (FilterType filterType : FilterType.values()) {         result = prime * result + ObjectUtils.nullSafeHashCode(getFilters(filterType)).     }     result = prime * result + Boolean.hashCode(isUseDefaultFilters()).     result = prime * result + ObjectUtils.nullSafeHashCode(getDefaultIncludes()).     result = prime * result + ObjectUtils.nullSafeHashCode(getComponentIncludes()).     return result. }
