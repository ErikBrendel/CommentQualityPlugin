commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Bean public MockServerRestTemplateCustomizer mockServerRestTemplateCustomizer() {     return new MockServerRestTemplateCustomizer(). }
false;public;1;10;;@Bean public MockRestServiceServer mockRestServiceServer(MockServerRestTemplateCustomizer customizer) {     try {         return createDeferredMockRestServiceServer(customizer).     } catch (Exception ex) {         throw new IllegalStateException(ex).     } }
false;private;1;7;;private MockRestServiceServer createDeferredMockRestServiceServer(MockServerRestTemplateCustomizer customizer) throws Exception {     Constructor<MockRestServiceServer> constructor = MockRestServiceServer.class.getDeclaredConstructor(RequestExpectationManager.class).     constructor.setAccessible(true).     return constructor.newInstance(new DeferredRequestExpectationManager(customizer)). }
false;public;2;5;;@Override public ResponseActions expectRequest(ExpectedCount count, RequestMatcher requestMatcher) {     return getDelegate().expectRequest(count, requestMatcher). }
false;public;1;5;;@Override public ClientHttpResponse validateRequest(ClientHttpRequest request) throws IOException {     return getDelegate().validateRequest(request). }
false;public;0;4;;@Override public void verify() {     getDelegate().verify(). }
false;public;0;8;;@Override public void reset() {     Map<RestTemplate, RequestExpectationManager> expectationManagers = this.customizer.getExpectationManagers().     if (expectationManagers.size() == 1) {         getDelegate().reset().     } }
false;private;0;13;;private RequestExpectationManager getDelegate() {     Map<RestTemplate, RequestExpectationManager> expectationManagers = this.customizer.getExpectationManagers().     Assert.state(!expectationManagers.isEmpty(), "Unable to use auto-configured MockRestServiceServer since " + "MockServerRestTemplateCustomizer has not been bound to " + "a RestTemplate").     Assert.state(expectationManagers.size() == 1, "Unable to use auto-configured MockRestServiceServer since " + "MockServerRestTemplateCustomizer has been bound to " + "more than one RestTemplate").     return expectationManagers.values().iterator().next(). }
