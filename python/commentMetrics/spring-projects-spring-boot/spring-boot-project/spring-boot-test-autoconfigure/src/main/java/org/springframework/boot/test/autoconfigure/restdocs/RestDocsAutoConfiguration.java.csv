commented;modifiers;parameterAmount;loc;comment;code
false;public;2;12;;@Bean @ConditionalOnMissingBean public MockMvcRestDocumentationConfigurer restDocsMockMvcConfigurer(ObjectProvider<RestDocsMockMvcConfigurationCustomizer> configurationCustomizers, RestDocumentationContextProvider contextProvider) {     MockMvcRestDocumentationConfigurer configurer = MockMvcRestDocumentation.documentationConfiguration(contextProvider).     configurationCustomizers.orderedStream().forEach((configurationCustomizer) -> configurationCustomizer.customize(configurer)).     return configurer. }
false;public;3;8;;@Bean public RestDocsMockMvcBuilderCustomizer restDocumentationConfigurer(RestDocsProperties properties, MockMvcRestDocumentationConfigurer configurer, ObjectProvider<RestDocumentationResultHandler> resultHandler) {     return new RestDocsMockMvcBuilderCustomizer(properties, configurer, resultHandler.getIfAvailable()). }
false;public;2;12;;@Bean @ConditionalOnMissingBean public RequestSpecification restDocsRestAssuredConfigurer(ObjectProvider<RestDocsRestAssuredConfigurationCustomizer> configurationCustomizers, RestDocumentationContextProvider contextProvider) {     RestAssuredRestDocumentationConfigurer configurer = RestAssuredRestDocumentation.documentationConfiguration(contextProvider).     configurationCustomizers.orderedStream().forEach((configurationCustomizer) -> configurationCustomizer.customize(configurer)).     return new RequestSpecBuilder().addFilter(configurer).build(). }
false;public;2;5;;@Bean public RestDocsRestAssuredBuilderCustomizer restAssuredBuilderCustomizer(RestDocsProperties properties, RequestSpecification configurer) {     return new RestDocsRestAssuredBuilderCustomizer(properties, configurer). }
false;public;2;12;;@Bean @ConditionalOnMissingBean public WebTestClientRestDocumentationConfigurer restDocsWebTestClientConfigurer(ObjectProvider<RestDocsWebTestClientConfigurationCustomizer> configurationCustomizers, RestDocumentationContextProvider contextProvider) {     WebTestClientRestDocumentationConfigurer configurer = WebTestClientRestDocumentation.documentationConfiguration(contextProvider).     configurationCustomizers.orderedStream().forEach((configurationCustomizer) -> configurationCustomizer.customize(configurer)).     return configurer. }
false;public;2;6;;@Bean public RestDocsWebTestClientBuilderCustomizer restDocumentationConfigurer(RestDocsProperties properties, WebTestClientRestDocumentationConfigurer configurer) {     return new RestDocsWebTestClientBuilderCustomizer(properties, configurer). }
