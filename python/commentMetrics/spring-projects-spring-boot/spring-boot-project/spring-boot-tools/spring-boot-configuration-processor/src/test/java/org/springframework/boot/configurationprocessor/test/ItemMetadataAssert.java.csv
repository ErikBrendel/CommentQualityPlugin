commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;public ItemMetadataAssert isProperty() {     objects.assertEqual(this.info, this.actual.isOfItemType(ItemType.PROPERTY), true).     return this. }
false;public;0;4;;public ItemMetadataAssert isGroup() {     objects.assertEqual(this.info, this.actual.isOfItemType(ItemType.GROUP), true).     return this. }
false;public;1;4;;public ItemMetadataAssert hasName(String name) {     objects.assertEqual(this.info, this.actual.getName(), name).     return this. }
false;public;1;4;;public ItemMetadataAssert hasType(String type) {     objects.assertEqual(this.info, this.actual.getType(), type).     return this. }
false;public;1;3;;public ItemMetadataAssert hasType(Class<?> type) {     return hasType(type.getName()). }
false;public;1;4;;public ItemMetadataAssert hasDescription(String description) {     objects.assertEqual(this.info, this.actual.getDescription(), description).     return this. }
false;public;0;3;;public ItemMetadataAssert hasNoDescription() {     return hasDescription(null). }
false;public;1;4;;public ItemMetadataAssert hasSourceType(String type) {     objects.assertEqual(this.info, this.actual.getSourceType(), type).     return this. }
false;public;1;3;;public ItemMetadataAssert hasSourceType(Class<?> type) {     return hasSourceType(type.getName()). }
false;public;1;4;;public ItemMetadataAssert hasSourceMethod(String type) {     objects.assertEqual(this.info, this.actual.getSourceMethod(), type).     return this. }
false;public;1;4;;public ItemMetadataAssert hasDefaultValue(Object defaultValue) {     objects.assertEqual(this.info, this.actual.getDefaultValue(), defaultValue).     return this. }
false;public;0;4;;public ItemMetadataAssert isDeprecatedWithNoInformation() {     assertItemDeprecation().     return this. }
false;public;1;5;;public ItemMetadataAssert isDeprecatedWithReason(String reason) {     ItemDeprecation deprecation = assertItemDeprecation().     objects.assertEqual(this.info, deprecation.getReason(), reason).     return this. }
false;public;1;5;;public ItemMetadataAssert isDeprecatedWithReplacement(String replacement) {     ItemDeprecation deprecation = assertItemDeprecation().     objects.assertEqual(this.info, deprecation.getReplacement(), replacement).     return this. }
false;public;0;4;;public ItemMetadataAssert isNotDeprecated() {     objects.assertNull(this.info, this.actual.getDeprecation()).     return this. }
false;private;0;6;;private ItemDeprecation assertItemDeprecation() {     ItemDeprecation deprecation = this.actual.getDeprecation().     objects.assertNotNull(this.info, deprecation).     objects.assertNull(this.info, deprecation.getLevel()).     return deprecation. }
false;public;0;4;;@Override public ItemMetadataAssert assertThat() {     return this. }
