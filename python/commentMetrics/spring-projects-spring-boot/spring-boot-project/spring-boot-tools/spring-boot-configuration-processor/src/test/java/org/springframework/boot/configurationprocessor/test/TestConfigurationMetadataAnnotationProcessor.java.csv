commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected String configurationPropertiesAnnotation() {     return CONFIGURATION_PROPERTIES_ANNOTATION. }
false;protected;0;4;;@Override protected String nestedConfigurationPropertyAnnotation() {     return NESTED_CONFIGURATION_PROPERTY_ANNOTATION. }
false;protected;0;4;;@Override protected String deprecatedConfigurationPropertyAnnotation() {     return DEPRECATED_CONFIGURATION_PROPERTY_ANNOTATION. }
false;protected;0;4;;@Override protected String endpointAnnotation() {     return ENDPOINT_ANNOTATION. }
false;protected;0;4;;@Override protected String readOperationAnnotation() {     return READ_OPERATION_ANNOTATION. }
false;protected;0;19;;@Override protected ConfigurationMetadata writeMetaData() throws Exception {     super.writeMetaData().     try {         File metadataFile = new File(this.outputLocation, "META-INF/spring-configuration-metadata.json").         if (metadataFile.isFile()) {             this.metadata = new JsonMarshaller().read(new FileInputStream(metadataFile)).         } else {             this.metadata = new ConfigurationMetadata().         }         return this.metadata.     } catch (IOException ex) {         throw new RuntimeException("Failed to read metadata from disk", ex).     } }
false;public;0;3;;public ConfigurationMetadata getMetadata() {     return this.metadata. }
