commented;modifiers;parameterAmount;loc;comment;code
false;public;0;8;;public ConfigurationMetadata readMetadata() {     try {         return readMetadata(getMetadataResource().openInputStream()).     } catch (IOException ex) {         return null.     } }
false;public;1;8;;public void writeMetadata(ConfigurationMetadata metadata) throws IOException {     if (!metadata.getItems().isEmpty()) {         try (OutputStream outputStream = createMetadataResource().openOutputStream()) {             new JsonMarshaller().write(metadata, outputStream).         }     } }
false;public;0;3;;public ConfigurationMetadata readAdditionalMetadata() throws IOException {     return readMetadata(getAdditionalMetadataStream()). }
false;private;1;17;;private ConfigurationMetadata readMetadata(InputStream in) throws IOException {     try {         return new JsonMarshaller().read(in).     } catch (IOException ex) {         return null.     } catch (Exception ex) {         throw new InvalidConfigurationMetadataException("Invalid additional meta-data in '" + METADATA_PATH + "': " + ex.getMessage(), Diagnostic.Kind.ERROR).     } finally {         in.close().     } }
false;private;0;4;;private FileObject getMetadataResource() throws IOException {     return this.environment.getFiler().getResource(StandardLocation.CLASS_OUTPUT, "", METADATA_PATH). }
false;private;0;4;;private FileObject createMetadataResource() throws IOException {     return this.environment.getFiler().createResource(StandardLocation.CLASS_OUTPUT, "", METADATA_PATH). }
false;private;0;8;;private InputStream getAdditionalMetadataStream() throws IOException {     // Most build systems will have copied the file to the class output location     FileObject fileObject = this.environment.getFiler().getResource(StandardLocation.CLASS_OUTPUT, "", ADDITIONAL_METADATA_PATH).     File file = locateAdditionalMetadataFile(new File(fileObject.toUri())).     return (file.exists() ? new FileInputStream(file) : fileObject.toUri().toURL().openStream()). }
false;;1;17;;File locateAdditionalMetadataFile(File standardLocation) throws IOException {     if (standardLocation.exists()) {         return standardLocation.     }     String locations = this.environment.getOptions().get(ConfigurationMetadataAnnotationProcessor.ADDITIONAL_METADATA_LOCATIONS_OPTION).     if (locations != null) {         for (String location : locations.split(",")) {             File candidate = new File(location, ADDITIONAL_METADATA_PATH).             if (candidate.isFile()) {                 return candidate.             }         }     }     return new File(locateGradleResourcesFolder(standardLocation), ADDITIONAL_METADATA_PATH). }
false;private;1;13;;private File locateGradleResourcesFolder(File standardAdditionalMetadataLocation) throws FileNotFoundException {     String path = standardAdditionalMetadataLocation.getPath().     int index = path.lastIndexOf(CLASSES_FOLDER).     if (index < 0) {         throw new FileNotFoundException().     }     String buildFolderPath = path.substring(0, index).     File classOutputLocation = standardAdditionalMetadataLocation.getParentFile().getParentFile().     return new File(buildFolderPath, RESOURCES_FOLDER + '/' + classOutputLocation.getName()). }
