commented;modifiers;parameterAmount;loc;comment;code
false;public;1;7;;public void accept(TreeVisitor visitor) throws Exception {     this.acceptMethod.invoke(getInstance(), Proxy.newProxyInstance(getInstance().getClass().getClassLoader(), new Class<?>[] { this.treeVisitorType }, new TreeVisitorInvocationHandler(visitor)), 0). }
false;public;3;19;;@Override @SuppressWarnings("rawtypes") public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {     if (method.getName().equals("visitClass") && (Integer) args[1] == 0) {         Iterable members = (Iterable) Tree.this.getClassTreeMembers.invoke(args[0]).         for (Object member : members) {             if (member != null) {                 Tree.this.acceptMethod.invoke(member, proxy, ((Integer) args[1]) + 1).             }         }     }     if (method.getName().equals("visitVariable")) {         this.treeVisitor.visitVariable(new VariableTree(args[0])).     }     return null. }
